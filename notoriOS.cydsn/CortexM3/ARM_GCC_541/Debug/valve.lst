ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"valve.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.section	.rodata
  44              		.align	2
  45              	.LC0:
  46 0000 54455354 		.ascii	"TEST_VALVE\000"
  46      5F56414C 
  46      564500
  47              		.global	__aeabi_f2d
  48 000b 00       		.align	2
  49              	.LC1:
  50 000c 6F70656E 		.ascii	"open_voltage:%f:::closed_voltage:%f:::pot_voltage:%"
  50      5F766F6C 
  50      74616765 
  50      3A25663A 
  50      3A3A636C 
  51 003f 663A3A3A 		.ascii	"f::::positions:%f:%f:%f:%f:%f:%f:%f:%f\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 2


  51      3A706F73 
  51      6974696F 
  51      6E733A25 
  51      663A2566 
  52 0066 0000     		.align	2
  53              	.LC2:
  54 0068 76616C76 		.ascii	"valve jammed or battery dead\000"
  54      65206A61 
  54      6D6D6564 
  54      206F7220 
  54      62617474 
  55              		.section	.text.valve_test,"ax",%progbits
  56              		.align	2
  57              		.global	valve_test
  58              		.thumb
  59              		.thumb_func
  60              		.type	valve_test, %function
  61              	valve_test:
  62              	.LFB64:
  63              		.file 1 "valve.c"
   1:valve.c       **** #include "valve.h"
   2:valve.c       **** #include "notoriOS.h"
   3:valve.c       **** 
   4:valve.c       **** // throughout, the percentages recorded in reference to the valve position ought to be
   5:valve.c       **** // percent open-ness, not percent closed
   6:valve.c       **** 
   7:valve.c       **** test_t valve_test(){
  64              		.loc 1 7 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 768
  67              		@ frame_needed = 1, uses_anonymous_args = 0
  68 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
  69              		.cfi_def_cfa_offset 32
  70              		.cfi_offset 4, -32
  71              		.cfi_offset 5, -28
  72              		.cfi_offset 7, -24
  73              		.cfi_offset 8, -20
  74              		.cfi_offset 9, -16
  75              		.cfi_offset 10, -12
  76              		.cfi_offset 11, -8
  77              		.cfi_offset 14, -4
  78 0004 ADF5567D 		sub	sp, sp, #856
  79              		.cfi_def_cfa_offset 888
  80 0008 16AF     		add	r7, sp, #88
  81              		.cfi_def_cfa 7, 800
  82 000a 07F15C03 		add	r3, r7, #92
  83 000e 1860     		str	r0, [r3]
   8:valve.c       **** 
   9:valve.c       ****     // activate 12V battery
  10:valve.c       ****     Pressure_Voltage_Enable_Write(ON);
  84              		.loc 1 10 0
  85 0010 0120     		movs	r0, #1
  86 0012 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  11:valve.c       **** 
  12:valve.c       ****     
  13:valve.c       ****      
  14:valve.c       ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 3


  15:valve.c       ****     test.status = 0; // set test status to zero
  87              		.loc 1 15 0
  88 0016 07F5B073 		add	r3, r7, #352
  89 001a 0022     		movs	r2, #0
  90 001c 83F88020 		strb	r2, [r3, #128]
  16:valve.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_VALVE");
  91              		.loc 1 16 0
  92 0020 07F5B073 		add	r3, r7, #352
  93 0024 9F4A     		ldr	r2, .L5
  94 0026 07CA     		ldmia	r2, {r0, r1, r2}
  95 0028 03C3     		stmia	r3!, {r0, r1}
  96 002a 1A80     		strh	r2, [r3]	@ movhi
  97 002c 0233     		adds	r3, r3, #2
  98 002e 120C     		lsrs	r2, r2, #16
  99 0030 1A70     		strb	r2, [r3]
  17:valve.c       **** 
  18:valve.c       ****     float32 positions[8];
  19:valve.c       ****     
  20:valve.c       ****     voltage_t voltages[8];
  21:valve.c       ****     
  22:valve.c       ****     // all the way open
  23:valve.c       ****     move_valve(1);
 100              		.loc 1 23 0
 101 0032 4FF07E50 		mov	r0, #1065353216
 102 0036 FFF7FEFF 		bl	move_valve
  24:valve.c       ****     // take a position reading to verify that it's all the way open (later)
  25:valve.c       ****     positions[0] = read_Valve_pos();
 103              		.loc 1 25 0
 104 003a FFF7FEFF 		bl	read_Valve_pos
 105 003e 0246     		mov	r2, r0
 106 0040 07F5A073 		add	r3, r7, #320
 107 0044 1A60     		str	r2, [r3]	@ float
  26:valve.c       ****     voltages[0] = voltage_take_readings();
 108              		.loc 1 26 0
 109 0046 07F16004 		add	r4, r7, #96
 110 004a 07F13803 		add	r3, r7, #56
 111 004e 1846     		mov	r0, r3
 112 0050 FFF7FEFF 		bl	voltage_take_readings
 113 0054 07F13803 		add	r3, r7, #56
 114 0058 1D46     		mov	r5, r3
 115 005a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 116 005c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 117 005e 95E80700 		ldmia	r5, {r0, r1, r2}
 118 0062 84E80700 		stmia	r4, {r0, r1, r2}
  27:valve.c       ****     // do the same for closed
  28:valve.c       ****     test.status = move_valve(0);
 119              		.loc 1 28 0
 120 0066 4FF00000 		mov	r0, #0
 121 006a FFF7FEFF 		bl	move_valve
 122 006e 0346     		mov	r3, r0
 123 0070 1A46     		mov	r2, r3
 124 0072 07F5B073 		add	r3, r7, #352
 125 0076 83F88020 		strb	r2, [r3, #128]
  29:valve.c       ****     // take a position reading to verify that it's all the way closed (later)
  30:valve.c       ****     positions[1] = read_Valve_pos();
 126              		.loc 1 30 0
 127 007a FFF7FEFF 		bl	read_Valve_pos
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 4


 128 007e 0246     		mov	r2, r0
 129 0080 07F5A073 		add	r3, r7, #320
 130 0084 5A60     		str	r2, [r3, #4]	@ float
  31:valve.c       ****     voltages[1] = voltage_take_readings();
 131              		.loc 1 31 0
 132 0086 07F16004 		add	r4, r7, #96
 133 008a 07F13803 		add	r3, r7, #56
 134 008e 1846     		mov	r0, r3
 135 0090 FFF7FEFF 		bl	voltage_take_readings
 136 0094 07F13803 		add	r3, r7, #56
 137 0098 1C34     		adds	r4, r4, #28
 138 009a 1D46     		mov	r5, r3
 139 009c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 140 009e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 141 00a0 95E80700 		ldmia	r5, {r0, r1, r2}
 142 00a4 84E80700 		stmia	r4, {r0, r1, r2}
  32:valve.c       ****     if (test.status){ // don't do this if it's jammed (didn't close successfully)
 143              		.loc 1 32 0
 144 00a8 07F5B073 		add	r3, r7, #352
 145 00ac 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 146 00b0 002B     		cmp	r3, #0
 147 00b2 3AD0     		beq	.L2
  33:valve.c       ****         move_valve(0.125);
 148              		.loc 1 33 0
 149 00b4 4FF07850 		mov	r0, #1040187392
 150 00b8 FFF7FEFF 		bl	move_valve
  34:valve.c       ****         positions[2] = read_Valve_pos();
 151              		.loc 1 34 0
 152 00bc FFF7FEFF 		bl	read_Valve_pos
 153 00c0 0246     		mov	r2, r0
 154 00c2 07F5A073 		add	r3, r7, #320
 155 00c6 9A60     		str	r2, [r3, #8]	@ float
  35:valve.c       ****         
  36:valve.c       ****         move_valve(0.25);
 156              		.loc 1 36 0
 157 00c8 4FF07A50 		mov	r0, #1048576000
 158 00cc FFF7FEFF 		bl	move_valve
  37:valve.c       ****         positions[3] = read_Valve_pos();
 159              		.loc 1 37 0
 160 00d0 FFF7FEFF 		bl	read_Valve_pos
 161 00d4 0246     		mov	r2, r0
 162 00d6 07F5A073 		add	r3, r7, #320
 163 00da DA60     		str	r2, [r3, #12]	@ float
  38:valve.c       ****         
  39:valve.c       ****         move_valve(0.375);
 164              		.loc 1 39 0
 165 00dc 4FF07B50 		mov	r0, #1052770304
 166 00e0 FFF7FEFF 		bl	move_valve
  40:valve.c       ****         positions[4] = read_Valve_pos();
 167              		.loc 1 40 0
 168 00e4 FFF7FEFF 		bl	read_Valve_pos
 169 00e8 0246     		mov	r2, r0
 170 00ea 07F5A073 		add	r3, r7, #320
 171 00ee 1A61     		str	r2, [r3, #16]	@ float
  41:valve.c       **** 
  42:valve.c       ****         move_valve(0.5);
 172              		.loc 1 42 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 5


 173 00f0 4FF07C50 		mov	r0, #1056964608
 174 00f4 FFF7FEFF 		bl	move_valve
  43:valve.c       ****         positions[5] = read_Valve_pos();
 175              		.loc 1 43 0
 176 00f8 FFF7FEFF 		bl	read_Valve_pos
 177 00fc 0246     		mov	r2, r0
 178 00fe 07F5A073 		add	r3, r7, #320
 179 0102 5A61     		str	r2, [r3, #20]	@ float
  44:valve.c       **** 
  45:valve.c       ****         move_valve(0.675);
 180              		.loc 1 45 0
 181 0104 6848     		ldr	r0, .L5+4
 182 0106 FFF7FEFF 		bl	move_valve
  46:valve.c       ****         positions[6] = read_Valve_pos();
 183              		.loc 1 46 0
 184 010a FFF7FEFF 		bl	read_Valve_pos
 185 010e 0246     		mov	r2, r0
 186 0110 07F5A073 		add	r3, r7, #320
 187 0114 9A61     		str	r2, [r3, #24]	@ float
  47:valve.c       **** 
  48:valve.c       ****         move_valve(0.75);
 188              		.loc 1 48 0
 189 0116 4FF07D50 		mov	r0, #1061158912
 190 011a FFF7FEFF 		bl	move_valve
  49:valve.c       ****         positions[7] = read_Valve_pos();
 191              		.loc 1 49 0
 192 011e FFF7FEFF 		bl	read_Valve_pos
 193 0122 0246     		mov	r2, r0
 194 0124 07F5A073 		add	r3, r7, #320
 195 0128 DA61     		str	r2, [r3, #28]	@ float
 196              	.L2:
  50:valve.c       ****     }
  51:valve.c       **** 
  52:valve.c       ****     // in test reason report the sequence of positions
  53:valve.c       ****     snprintf(test.reason,sizeof(test.reason),"open_voltage:%f:::closed_voltage:%f:::pot_voltage:%f:
  54:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 197              		.loc 1 54 0
 198 012a 07F16003 		add	r3, r7, #96
 199 012e 1B69     		ldr	r3, [r3, #16]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 200              		.loc 1 53 0
 201 0130 1846     		mov	r0, r3
 202 0132 FFF7FEFF 		bl	__aeabi_f2d
 203 0136 C7E90C01 		strd	r0, [r7, #48]
 204              		.loc 1 54 0
 205 013a 07F16003 		add	r3, r7, #96
 206 013e DB6A     		ldr	r3, [r3, #44]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 207              		.loc 1 53 0
 208 0140 1846     		mov	r0, r3
 209 0142 FFF7FEFF 		bl	__aeabi_f2d
 210 0146 C7E90A01 		strd	r0, [r7, #40]
 211              		.loc 1 54 0
 212 014a 07F16003 		add	r3, r7, #96
 213 014e 5B69     		ldr	r3, [r3, #20]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 214              		.loc 1 53 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 6


 215 0150 1846     		mov	r0, r3
 216 0152 FFF7FEFF 		bl	__aeabi_f2d
 217 0156 C7E90801 		strd	r0, [r7, #32]
  55:valve.c       ****         positions[0],positions[1],positions[2],positions[3],
 218              		.loc 1 55 0
 219 015a 07F5A073 		add	r3, r7, #320
 220 015e 1B68     		ldr	r3, [r3]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 221              		.loc 1 53 0
 222 0160 1846     		mov	r0, r3
 223 0162 FFF7FEFF 		bl	__aeabi_f2d
 224 0166 C7E90601 		strd	r0, [r7, #24]
 225              		.loc 1 55 0
 226 016a 07F5A073 		add	r3, r7, #320
 227 016e 5B68     		ldr	r3, [r3, #4]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 228              		.loc 1 53 0
 229 0170 1846     		mov	r0, r3
 230 0172 FFF7FEFF 		bl	__aeabi_f2d
 231 0176 C7E90401 		strd	r0, [r7, #16]
 232              		.loc 1 55 0
 233 017a 07F5A073 		add	r3, r7, #320
 234 017e 9B68     		ldr	r3, [r3, #8]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 235              		.loc 1 53 0
 236 0180 1846     		mov	r0, r3
 237 0182 FFF7FEFF 		bl	__aeabi_f2d
 238 0186 C7E90201 		strd	r0, [r7, #8]
 239              		.loc 1 55 0
 240 018a 07F5A073 		add	r3, r7, #320
 241 018e DB68     		ldr	r3, [r3, #12]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 242              		.loc 1 53 0
 243 0190 1846     		mov	r0, r3
 244 0192 FFF7FEFF 		bl	__aeabi_f2d
 245 0196 C7E90001 		strd	r0, [r7]
  56:valve.c       ****         positions[4],positions[5],positions[6],positions[7]
 246              		.loc 1 56 0
 247 019a 07F5A073 		add	r3, r7, #320
 248 019e 1B69     		ldr	r3, [r3, #16]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 249              		.loc 1 53 0
 250 01a0 1846     		mov	r0, r3
 251 01a2 FFF7FEFF 		bl	__aeabi_f2d
 252 01a6 8246     		mov	r10, r0
 253 01a8 8B46     		mov	fp, r1
 254              		.loc 1 56 0
 255 01aa 07F5A073 		add	r3, r7, #320
 256 01ae 5B69     		ldr	r3, [r3, #20]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 257              		.loc 1 53 0
 258 01b0 1846     		mov	r0, r3
 259 01b2 FFF7FEFF 		bl	__aeabi_f2d
 260 01b6 8046     		mov	r8, r0
 261 01b8 8946     		mov	r9, r1
 262              		.loc 1 56 0
 263 01ba 07F5A073 		add	r3, r7, #320
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 7


 264 01be 9B69     		ldr	r3, [r3, #24]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 265              		.loc 1 53 0
 266 01c0 1846     		mov	r0, r3
 267 01c2 FFF7FEFF 		bl	__aeabi_f2d
 268 01c6 0446     		mov	r4, r0
 269 01c8 0D46     		mov	r5, r1
 270              		.loc 1 56 0
 271 01ca 07F5A073 		add	r3, r7, #320
 272 01ce DB69     		ldr	r3, [r3, #28]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 273              		.loc 1 53 0
 274 01d0 1846     		mov	r0, r3
 275 01d2 FFF7FEFF 		bl	__aeabi_f2d
 276 01d6 0A46     		mov	r2, r1
 277 01d8 0146     		mov	r1, r0
 278 01da 07F5B073 		add	r3, r7, #352
 279 01de 8133     		adds	r3, r3, #129
 280 01e0 CDE91412 		strd	r1, [sp, #80]
 281 01e4 CDE91245 		strd	r4, [sp, #72]
 282 01e8 CDE91089 		strd	r8, [sp, #64]
 283 01ec CDE90EAB 		strd	r10, [sp, #56]
 284 01f0 D7E90012 		ldrd	r1, [r7]
 285 01f4 CDE90C12 		strd	r1, [sp, #48]
 286 01f8 D7E90212 		ldrd	r1, [r7, #8]
 287 01fc CDE90A12 		strd	r1, [sp, #40]
 288 0200 D7E90412 		ldrd	r1, [r7, #16]
 289 0204 CDE90812 		strd	r1, [sp, #32]
 290 0208 D7E90612 		ldrd	r1, [r7, #24]
 291 020c CDE90612 		strd	r1, [sp, #24]
 292 0210 D7E90812 		ldrd	r1, [r7, #32]
 293 0214 CDE90412 		strd	r1, [sp, #16]
 294 0218 D7E90A12 		ldrd	r1, [r7, #40]
 295 021c CDE90212 		strd	r1, [sp, #8]
 296 0220 D7E90C12 		ldrd	r1, [r7, #48]
 297 0224 CDE90012 		strd	r1, [sp]
 298 0228 204A     		ldr	r2, .L5+8
 299 022a 4FF48071 		mov	r1, #256
 300 022e 1846     		mov	r0, r3
 301 0230 FFF7FEFF 		bl	snprintf
  57:valve.c       ****     );
  58:valve.c       ****    
  59:valve.c       ****     
  60:valve.c       ****     if (!test.status){
 302              		.loc 1 60 0
 303 0234 07F5B073 		add	r3, r7, #352
 304 0238 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 305 023c 002B     		cmp	r3, #0
 306 023e 10D1     		bne	.L3
  61:valve.c       ****         snprintf(test.reason,sizeof(test.reason),"valve jammed or battery dead" );
 307              		.loc 1 61 0
 308 0240 07F5B073 		add	r3, r7, #352
 309 0244 8133     		adds	r3, r3, #129
 310 0246 1A4A     		ldr	r2, .L5+12
 311 0248 1D46     		mov	r5, r3
 312 024a 1446     		mov	r4, r2
 313 024c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 8


 314 024e 2860     		str	r0, [r5]	@ unaligned
 315 0250 6960     		str	r1, [r5, #4]	@ unaligned
 316 0252 AA60     		str	r2, [r5, #8]	@ unaligned
 317 0254 EB60     		str	r3, [r5, #12]	@ unaligned
 318 0256 07CC     		ldmia	r4!, {r0, r1, r2}
 319 0258 2861     		str	r0, [r5, #16]	@ unaligned
 320 025a 6961     		str	r1, [r5, #20]	@ unaligned
 321 025c AA61     		str	r2, [r5, #24]	@ unaligned
 322 025e 2378     		ldrb	r3, [r4]
 323 0260 2B77     		strb	r3, [r5, #28]
 324              	.L3:
  62:valve.c       ****     }
  63:valve.c       ****     // deactivate 12V battery
  64:valve.c       ****     Pressure_Voltage_Enable_Write(OFF);
 325              		.loc 1 64 0
 326 0262 0020     		movs	r0, #0
 327 0264 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  65:valve.c       ****     
  66:valve.c       ****     
  67:valve.c       ****     //just for now since I can't get the modem to error in the way I want it to
  68:valve.c       ****     valve_level_controller(level_sensor_take_reading().level_reading);
 328              		.loc 1 68 0
 329 0268 07F53973 		add	r3, r7, #740
 330 026c 1846     		mov	r0, r3
 331 026e FFF7FEFF 		bl	level_sensor_take_reading
 332 0272 B7F9FA32 		ldrsh	r3, [r7, #762]
 333 0276 1846     		mov	r0, r3
 334 0278 FFF7FEFF 		bl	valve_level_controller
  69:valve.c       ****     
  70:valve.c       ****     return test;
 335              		.loc 1 70 0
 336 027c 07F15C03 		add	r3, r7, #92
 337 0280 1A68     		ldr	r2, [r3]
 338 0282 07F5B073 		add	r3, r7, #352
 339 0286 1046     		mov	r0, r2
 340 0288 1946     		mov	r1, r3
 341 028a 40F28113 		movw	r3, #385
 342 028e 1A46     		mov	r2, r3
 343 0290 FFF7FEFF 		bl	memcpy
  71:valve.c       **** 
  72:valve.c       **** }
 344              		.loc 1 72 0
 345 0294 07F15C03 		add	r3, r7, #92
 346 0298 1868     		ldr	r0, [r3]
 347 029a 07F54077 		add	r7, r7, #768
 348              		.cfi_def_cfa_offset 32
 349 029e BD46     		mov	sp, r7
 350              		.cfi_def_cfa_register 13
 351              		@ sp needed
 352 02a0 BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 353              	.L6:
 354              		.align	2
 355              	.L5:
 356 02a4 00000000 		.word	.LC0
 357 02a8 CDCC2C3F 		.word	1059900621
 358 02ac 0C000000 		.word	.LC1
 359 02b0 68000000 		.word	.LC2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 9


 360              		.cfi_endproc
 361              	.LFE64:
 362              		.size	valve_test, .-valve_test
 363              		.global	__aeabi_fdiv
 364              		.global	__aeabi_ddiv
 365              		.global	__aeabi_d2f
 366              		.section	.text.read_Valve_pos,"ax",%progbits
 367              		.align	2
 368              		.global	read_Valve_pos
 369              		.thumb
 370              		.thumb_func
 371              		.type	read_Valve_pos, %function
 372              	read_Valve_pos:
 373              	.LFB65:
  73:valve.c       **** 
  74:valve.c       **** float32 read_Valve_pos(){
 374              		.loc 1 74 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 32
 377              		@ frame_needed = 1, uses_anonymous_args = 0
 378 0000 90B5     		push	{r4, r7, lr}
 379              		.cfi_def_cfa_offset 12
 380              		.cfi_offset 4, -12
 381              		.cfi_offset 7, -8
 382              		.cfi_offset 14, -4
 383 0002 89B0     		sub	sp, sp, #36
 384              		.cfi_def_cfa_offset 48
 385 0004 00AF     		add	r7, sp, #0
 386              		.cfi_def_cfa_register 7
  75:valve.c       ****     // take analog voltage readings
  76:valve.c       ****     voltage_t readings = voltage_take_readings();
 387              		.loc 1 76 0
 388 0006 3B1D     		adds	r3, r7, #4
 389 0008 1846     		mov	r0, r3
 390 000a FFF7FEFF 		bl	voltage_take_readings
  77:valve.c       ****     return (readings.voltage_valve_pos/readings.voltage_valve_pot_power)/0.94; // divide because of
 391              		.loc 1 77 0
 392 000e 7B69     		ldr	r3, [r7, #20]	@ float
 393 0010 BA69     		ldr	r2, [r7, #24]	@ float
 394 0012 1146     		mov	r1, r2
 395 0014 1846     		mov	r0, r3
 396 0016 FFF7FEFF 		bl	__aeabi_fdiv
 397 001a 0346     		mov	r3, r0
 398 001c 1846     		mov	r0, r3
 399 001e FFF7FEFF 		bl	__aeabi_f2d
 400 0022 09A3     		adr	r3, .L9
 401 0024 D3E90023 		ldrd	r2, [r3]
 402 0028 FFF7FEFF 		bl	__aeabi_ddiv
 403 002c 0346     		mov	r3, r0
 404 002e 0C46     		mov	r4, r1
 405 0030 1846     		mov	r0, r3
 406 0032 2146     		mov	r1, r4
 407 0034 FFF7FEFF 		bl	__aeabi_d2f
 408 0038 0346     		mov	r3, r0
  78:valve.c       ****     // this code is written for the blue rotating dynaquip valve, not the linear actuator
  79:valve.c       ****     
  80:valve.c       **** }
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 10


 409              		.loc 1 80 0
 410 003a 1846     		mov	r0, r3
 411 003c 2437     		adds	r7, r7, #36
 412              		.cfi_def_cfa_offset 12
 413 003e BD46     		mov	sp, r7
 414              		.cfi_def_cfa_register 13
 415              		@ sp needed
 416 0040 90BD     		pop	{r4, r7, pc}
 417              	.L10:
 418 0042 00BFAFF3 		.align	3
 418      0080
 419              	.L9:
 420 0048 14AE47E1 		.word	-515396076
 421 004c 7A14EE3F 		.word	1072567418
 422              		.cfi_endproc
 423              	.LFE65:
 424              		.size	read_Valve_pos, .-read_Valve_pos
 425              		.global	__aeabi_fsub
 426              		.global	__aeabi_dcmplt
 427              		.global	__aeabi_fcmpgt
 428              		.global	__aeabi_dcmpgt
 429              		.global	__aeabi_fcmplt
 430              		.section	.text.move_valve,"ax",%progbits
 431              		.align	2
 432              		.global	move_valve
 433              		.thumb
 434              		.thumb_func
 435              		.type	move_valve, %function
 436              	move_valve:
 437              	.LFB66:
  81:valve.c       **** 
  82:valve.c       **** uint8 move_valve(float32 position_desired){
 438              		.loc 1 82 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 16
 441              		@ frame_needed = 1, uses_anonymous_args = 0
 442 0000 80B5     		push	{r7, lr}
 443              		.cfi_def_cfa_offset 8
 444              		.cfi_offset 7, -8
 445              		.cfi_offset 14, -4
 446 0002 84B0     		sub	sp, sp, #16
 447              		.cfi_def_cfa_offset 24
 448 0004 00AF     		add	r7, sp, #0
 449              		.cfi_def_cfa_register 7
 450 0006 7860     		str	r0, [r7, #4]	@ float
  83:valve.c       ****     
  84:valve.c       ****     // activate 12V battery
  85:valve.c       ****     Pressure_Voltage_Enable_Write(ON);
 451              		.loc 1 85 0
 452 0008 0120     		movs	r0, #1
 453 000a FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  86:valve.c       ****     
  87:valve.c       ****     // this uses "go until you're there" rather than pulsing and checking
  88:valve.c       ****     // pulsing and checking could set up oscillations in the controller
  89:valve.c       ****     // pulsing and checking would only be necessary if measurement consumed a similar amount of tim
  90:valve.c       ****     
  91:valve.c       ****     float32 prev_pos =  1.5;
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 11


 454              		.loc 1 91 0
 455 000e 4FF07F53 		mov	r3, #1069547520
 456 0012 FB60     		str	r3, [r7, #12]	@ float
  92:valve.c       ****     
  93:valve.c       ****     // are we already there? (wihtin a tolerance)
  94:valve.c       ****     if ( fabs(read_Valve_pos() - position_desired) < 0.05){
 457              		.loc 1 94 0
 458 0014 FFF7FEFF 		bl	read_Valve_pos
 459 0018 0346     		mov	r3, r0
 460 001a 7968     		ldr	r1, [r7, #4]	@ float
 461 001c 1846     		mov	r0, r3
 462 001e FFF7FEFF 		bl	__aeabi_fsub
 463 0022 0346     		mov	r3, r0
 464 0024 23F00043 		bic	r3, r3, #-2147483648
 465 0028 1846     		mov	r0, r3
 466 002a FFF7FEFF 		bl	__aeabi_f2d
 467 002e 6EA3     		adr	r3, .L36
 468 0030 D3E90023 		ldrd	r2, [r3]
 469 0034 FFF7FEFF 		bl	__aeabi_dcmplt
 470 0038 0346     		mov	r3, r0
 471 003a 002B     		cmp	r3, #0
 472 003c 01D0     		beq	.L34
  95:valve.c       ****         return 1;
 473              		.loc 1 95 0
 474 003e 0123     		movs	r3, #1
 475 0040 CDE0     		b	.L14
 476              	.L34:
  96:valve.c       ****     }
  97:valve.c       **** 
  98:valve.c       ****     // is the desired position more closed?
  99:valve.c       ****     if( read_Valve_pos() > position_desired){
 477              		.loc 1 99 0
 478 0042 FFF7FEFF 		bl	read_Valve_pos
 479 0046 0346     		mov	r3, r0
 480 0048 7968     		ldr	r1, [r7, #4]	@ float
 481 004a 1846     		mov	r0, r3
 482 004c FFF7FEFF 		bl	__aeabi_fcmpgt
 483 0050 0346     		mov	r3, r0
 484 0052 002B     		cmp	r3, #0
 485 0054 5AD0     		beq	.L35
 100:valve.c       ****         
 101:valve.c       ****         // turn the closing pin high
 102:valve.c       ****         Power_VDD2_Write(1u);
 486              		.loc 1 102 0
 487 0056 0120     		movs	r0, #1
 488 0058 FFF7FEFF 		bl	Power_VDD2_Write
 103:valve.c       **** 
 104:valve.c       ****         
 105:valve.c       ****         // while loop
 106:valve.c       ****         // continuously measure the position (measurement should be much faster than movement)
 107:valve.c       ****         // once we're within 5 percent of desired (can tighten this later) exit this do-while loop
 108:valve.c       ****         while(fabs(read_Valve_pos() - position_desired) > 0.03){
 489              		.loc 1 108 0
 490 005c 24E0     		b	.L17
 491              	.L19:
 109:valve.c       ****             prev_pos = read_Valve_pos();
 492              		.loc 1 109 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 12


 493 005e FFF7FEFF 		bl	read_Valve_pos
 494 0062 F860     		str	r0, [r7, #12]	@ float
 110:valve.c       ****             CyDelay(1000u);
 495              		.loc 1 110 0
 496 0064 4FF47A70 		mov	r0, #1000
 497 0068 FFF7FEFF 		bl	CyDelay
 111:valve.c       ****             // are we moving?
 112:valve.c       ****             if (fabs(prev_pos - read_Valve_pos()) < 0.0005){
 498              		.loc 1 112 0
 499 006c FFF7FEFF 		bl	read_Valve_pos
 500 0070 0346     		mov	r3, r0
 501 0072 1946     		mov	r1, r3
 502 0074 F868     		ldr	r0, [r7, #12]	@ float
 503 0076 FFF7FEFF 		bl	__aeabi_fsub
 504 007a 0346     		mov	r3, r0
 505 007c 23F00043 		bic	r3, r3, #-2147483648
 506 0080 1846     		mov	r0, r3
 507 0082 FFF7FEFF 		bl	__aeabi_f2d
 508 0086 5AA3     		adr	r3, .L36+8
 509 0088 D3E90023 		ldrd	r2, [r3]
 510 008c FFF7FEFF 		bl	__aeabi_dcmplt
 511 0090 0346     		mov	r3, r0
 512 0092 002B     		cmp	r3, #0
 513 0094 00D1     		bne	.L29
 514 0096 07E0     		b	.L17
 515              	.L29:
 113:valve.c       ****                 // turn the closing pin low
 114:valve.c       ****                 Power_VDD2_Write(0u);
 516              		.loc 1 114 0
 517 0098 0020     		movs	r0, #0
 518 009a FFF7FEFF 		bl	Power_VDD2_Write
 115:valve.c       ****                 // deactivate 12V battery
 116:valve.c       ****                 Pressure_Voltage_Enable_Write(OFF);
 519              		.loc 1 116 0
 520 009e 0020     		movs	r0, #0
 521 00a0 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 117:valve.c       ****                 return 0;
 522              		.loc 1 117 0
 523 00a4 0023     		movs	r3, #0
 524 00a6 9AE0     		b	.L14
 525              	.L17:
 108:valve.c       ****             prev_pos = read_Valve_pos();
 526              		.loc 1 108 0
 527 00a8 FFF7FEFF 		bl	read_Valve_pos
 528 00ac 0346     		mov	r3, r0
 529 00ae 7968     		ldr	r1, [r7, #4]	@ float
 530 00b0 1846     		mov	r0, r3
 531 00b2 FFF7FEFF 		bl	__aeabi_fsub
 532 00b6 0346     		mov	r3, r0
 533 00b8 23F00043 		bic	r3, r3, #-2147483648
 534 00bc 1846     		mov	r0, r3
 535 00be FFF7FEFF 		bl	__aeabi_f2d
 536 00c2 4DA3     		adr	r3, .L36+16
 537 00c4 D3E90023 		ldrd	r2, [r3]
 538 00c8 FFF7FEFF 		bl	__aeabi_dcmpgt
 539 00cc 0346     		mov	r3, r0
 540 00ce 002B     		cmp	r3, #0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 13


 541 00d0 C5D1     		bne	.L19
 118:valve.c       ****             }
 119:valve.c       ****         }
 120:valve.c       ****         
 121:valve.c       ****         
 122:valve.c       ****         // turn the closing pin low
 123:valve.c       ****         Power_VDD2_Write(0u);
 542              		.loc 1 123 0
 543 00d2 0020     		movs	r0, #0
 544 00d4 FFF7FEFF 		bl	Power_VDD2_Write
 124:valve.c       ****         
 125:valve.c       ****         
 126:valve.c       ****         // read valve position once more and confirm we're where we want to be
 127:valve.c       ****         // if not return 0
 128:valve.c       ****         if(fabs(read_Valve_pos() - position_desired) > 0.05){
 545              		.loc 1 128 0
 546 00d8 FFF7FEFF 		bl	read_Valve_pos
 547 00dc 0346     		mov	r3, r0
 548 00de 7968     		ldr	r1, [r7, #4]	@ float
 549 00e0 1846     		mov	r0, r3
 550 00e2 FFF7FEFF 		bl	__aeabi_fsub
 551 00e6 0346     		mov	r3, r0
 552 00e8 23F00043 		bic	r3, r3, #-2147483648
 553 00ec 1846     		mov	r0, r3
 554 00ee FFF7FEFF 		bl	__aeabi_f2d
 555 00f2 3DA3     		adr	r3, .L36
 556 00f4 D3E90023 		ldrd	r2, [r3]
 557 00f8 FFF7FEFF 		bl	__aeabi_dcmpgt
 558 00fc 0346     		mov	r3, r0
 559 00fe 002B     		cmp	r3, #0
 560 0100 69D0     		beq	.L20
 129:valve.c       ****             // deactivate 12V battery
 130:valve.c       ****             Pressure_Voltage_Enable_Write(OFF);
 561              		.loc 1 130 0
 562 0102 0020     		movs	r0, #0
 563 0104 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 131:valve.c       ****             return 0;
 564              		.loc 1 131 0
 565 0108 0023     		movs	r3, #0
 566 010a 68E0     		b	.L14
 567              	.L35:
 132:valve.c       ****         }
 133:valve.c       ****         
 134:valve.c       ****     }
 135:valve.c       ****     // or more open?
 136:valve.c       ****     else if(read_Valve_pos() < position_desired){
 568              		.loc 1 136 0
 569 010c FFF7FEFF 		bl	read_Valve_pos
 570 0110 0346     		mov	r3, r0
 571 0112 7968     		ldr	r1, [r7, #4]	@ float
 572 0114 1846     		mov	r0, r3
 573 0116 FFF7FEFF 		bl	__aeabi_fcmplt
 574 011a 0346     		mov	r3, r0
 575 011c 002B     		cmp	r3, #0
 576 011e 5AD0     		beq	.L20
 137:valve.c       ****         
 138:valve.c       ****         // turn the opening pin high
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 14


 139:valve.c       ****         Power_VDD1_Write(1u);
 577              		.loc 1 139 0
 578 0120 0120     		movs	r0, #1
 579 0122 FFF7FEFF 		bl	Power_VDD1_Write
 140:valve.c       ****         
 141:valve.c       ****         // while loop
 142:valve.c       ****         // continuously measure the position (measurement should be much faster than movement)
 143:valve.c       ****         // once we're within 5 percent of desired (can tighten this later) exit this do-while loop
 144:valve.c       ****         while(fabs(read_Valve_pos() - position_desired) > 0.03){
 580              		.loc 1 144 0
 581 0126 24E0     		b	.L23
 582              	.L25:
 145:valve.c       ****             prev_pos = read_Valve_pos();
 583              		.loc 1 145 0
 584 0128 FFF7FEFF 		bl	read_Valve_pos
 585 012c F860     		str	r0, [r7, #12]	@ float
 146:valve.c       ****             CyDelay(1000u);
 586              		.loc 1 146 0
 587 012e 4FF47A70 		mov	r0, #1000
 588 0132 FFF7FEFF 		bl	CyDelay
 147:valve.c       ****             // are we moving?
 148:valve.c       ****             if (fabs(prev_pos - read_Valve_pos()) < 0.0005){
 589              		.loc 1 148 0
 590 0136 FFF7FEFF 		bl	read_Valve_pos
 591 013a 0346     		mov	r3, r0
 592 013c 1946     		mov	r1, r3
 593 013e F868     		ldr	r0, [r7, #12]	@ float
 594 0140 FFF7FEFF 		bl	__aeabi_fsub
 595 0144 0346     		mov	r3, r0
 596 0146 23F00043 		bic	r3, r3, #-2147483648
 597 014a 1846     		mov	r0, r3
 598 014c FFF7FEFF 		bl	__aeabi_f2d
 599 0150 27A3     		adr	r3, .L36+8
 600 0152 D3E90023 		ldrd	r2, [r3]
 601 0156 FFF7FEFF 		bl	__aeabi_dcmplt
 602 015a 0346     		mov	r3, r0
 603 015c 002B     		cmp	r3, #0
 604 015e 00D1     		bne	.L32
 605 0160 07E0     		b	.L23
 606              	.L32:
 149:valve.c       ****                 // turn the opening pin low
 150:valve.c       ****                 Power_VDD1_Write(0u);
 607              		.loc 1 150 0
 608 0162 0020     		movs	r0, #0
 609 0164 FFF7FEFF 		bl	Power_VDD1_Write
 151:valve.c       ****                 // deactivate 12V battery
 152:valve.c       ****                 Pressure_Voltage_Enable_Write(OFF);
 610              		.loc 1 152 0
 611 0168 0020     		movs	r0, #0
 612 016a FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 153:valve.c       ****                 return 0;
 613              		.loc 1 153 0
 614 016e 0023     		movs	r3, #0
 615 0170 35E0     		b	.L14
 616              	.L23:
 144:valve.c       ****             prev_pos = read_Valve_pos();
 617              		.loc 1 144 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 15


 618 0172 FFF7FEFF 		bl	read_Valve_pos
 619 0176 0346     		mov	r3, r0
 620 0178 7968     		ldr	r1, [r7, #4]	@ float
 621 017a 1846     		mov	r0, r3
 622 017c FFF7FEFF 		bl	__aeabi_fsub
 623 0180 0346     		mov	r3, r0
 624 0182 23F00043 		bic	r3, r3, #-2147483648
 625 0186 1846     		mov	r0, r3
 626 0188 FFF7FEFF 		bl	__aeabi_f2d
 627 018c 1AA3     		adr	r3, .L36+16
 628 018e D3E90023 		ldrd	r2, [r3]
 629 0192 FFF7FEFF 		bl	__aeabi_dcmpgt
 630 0196 0346     		mov	r3, r0
 631 0198 002B     		cmp	r3, #0
 632 019a C5D1     		bne	.L25
 154:valve.c       ****             }
 155:valve.c       ****         }
 156:valve.c       ****         
 157:valve.c       ****         // turn the opening pin low
 158:valve.c       ****          Power_VDD1_Write(0u);
 633              		.loc 1 158 0
 634 019c 0020     		movs	r0, #0
 635 019e FFF7FEFF 		bl	Power_VDD1_Write
 159:valve.c       ****         
 160:valve.c       ****         
 161:valve.c       ****         // read valve position once more and confirm we're where we want to be
 162:valve.c       ****         // if not return 0
 163:valve.c       ****         if(fabs(read_Valve_pos() - position_desired) > 0.05){
 636              		.loc 1 163 0
 637 01a2 FFF7FEFF 		bl	read_Valve_pos
 638 01a6 0346     		mov	r3, r0
 639 01a8 7968     		ldr	r1, [r7, #4]	@ float
 640 01aa 1846     		mov	r0, r3
 641 01ac FFF7FEFF 		bl	__aeabi_fsub
 642 01b0 0346     		mov	r3, r0
 643 01b2 23F00043 		bic	r3, r3, #-2147483648
 644 01b6 1846     		mov	r0, r3
 645 01b8 FFF7FEFF 		bl	__aeabi_f2d
 646 01bc 0AA3     		adr	r3, .L36
 647 01be D3E90023 		ldrd	r2, [r3]
 648 01c2 FFF7FEFF 		bl	__aeabi_dcmpgt
 649 01c6 0346     		mov	r3, r0
 650 01c8 002B     		cmp	r3, #0
 651 01ca 04D0     		beq	.L20
 164:valve.c       ****             // deactivate 12V battery
 165:valve.c       ****             Pressure_Voltage_Enable_Write(OFF);
 652              		.loc 1 165 0
 653 01cc 0020     		movs	r0, #0
 654 01ce FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 166:valve.c       ****             return 0;
 655              		.loc 1 166 0
 656 01d2 0023     		movs	r3, #0
 657 01d4 03E0     		b	.L14
 658              	.L20:
 167:valve.c       ****         }
 168:valve.c       ****         
 169:valve.c       ****         
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 16


 170:valve.c       ****     }
 171:valve.c       **** 
 172:valve.c       ****     
 173:valve.c       ****     // deactivate 12V battery
 174:valve.c       ****     Pressure_Voltage_Enable_Write(OFF);
 659              		.loc 1 174 0
 660 01d6 0020     		movs	r0, #0
 661 01d8 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 175:valve.c       ****     
 176:valve.c       ****     return 1; // everything worked fine
 662              		.loc 1 176 0
 663 01dc 0123     		movs	r3, #1
 664              	.L14:
 177:valve.c       **** }
 665              		.loc 1 177 0
 666 01de 1846     		mov	r0, r3
 667 01e0 1037     		adds	r7, r7, #16
 668              		.cfi_def_cfa_offset 8
 669 01e2 BD46     		mov	sp, r7
 670              		.cfi_def_cfa_register 13
 671              		@ sp needed
 672 01e4 80BD     		pop	{r7, pc}
 673              	.L37:
 674 01e6 00BF     		.align	3
 675              	.L36:
 676 01e8 9A999999 		.word	-1717986918
 677 01ec 9999A93F 		.word	1068079513
 678 01f0 FCA9F1D2 		.word	-755914244
 679 01f4 4D62403F 		.word	1061184077
 680 01f8 B81E85EB 		.word	-343597384
 681 01fc 51B89E3F 		.word	1067366481
 682              		.cfi_endproc
 683              	.LFE66:
 684              		.size	move_valve, .-move_valve
 685              		.section	.rodata
 686 0085 000000   		.align	2
 687              	.LC3:
 688 0088 6C657665 		.ascii	"level_controller using level_reading:%d\000"
 688      6C5F636F 
 688      6E74726F 
 688      6C6C6572 
 688      20757369 
 689              		.section	.text.valve_level_controller,"ax",%progbits
 690              		.align	2
 691              		.global	valve_level_controller
 692              		.thumb
 693              		.thumb_func
 694              		.type	valve_level_controller, %function
 695              	valve_level_controller:
 696              	.LFB67:
 178:valve.c       **** 
 179:valve.c       **** void valve_level_controller(int16 level_reading){
 697              		.loc 1 179 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 8
 700              		@ frame_needed = 1, uses_anonymous_args = 0
 701 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 17


 702              		.cfi_def_cfa_offset 8
 703              		.cfi_offset 7, -8
 704              		.cfi_offset 14, -4
 705 0002 82B0     		sub	sp, sp, #8
 706              		.cfi_def_cfa_offset 16
 707 0004 00AF     		add	r7, sp, #0
 708              		.cfi_def_cfa_register 7
 709 0006 0346     		mov	r3, r0
 710 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 180:valve.c       ****     printNotif(NOTIF_TYPE_EVENT, "level_controller using level_reading:%d", level_reading);
 711              		.loc 1 180 0
 712 000a B7F90630 		ldrsh	r3, [r7, #6]
 713 000e 1A46     		mov	r2, r3
 714 0010 0A49     		ldr	r1, .L42
 715 0012 0020     		movs	r0, #0
 716 0014 FFF7FEFF 		bl	printNotif
 181:valve.c       ****     if(level_reading > 500){
 717              		.loc 1 181 0
 718 0018 B7F90630 		ldrsh	r3, [r7, #6]
 719 001c B3F5FA7F 		cmp	r3, #500
 720 0020 04DD     		ble	.L39
 182:valve.c       ****         move_valve(0);
 721              		.loc 1 182 0
 722 0022 4FF00000 		mov	r0, #0
 723 0026 FFF7FEFF 		bl	move_valve
 183:valve.c       ****     }
 184:valve.c       ****     else {
 185:valve.c       ****         move_valve(1);
 186:valve.c       ****     }
 187:valve.c       **** }...
 724              		.loc 1 187 0
 725 002a 03E0     		b	.L41
 726              	.L39:
 185:valve.c       ****         move_valve(1);
 727              		.loc 1 185 0
 728 002c 4FF07E50 		mov	r0, #1065353216
 729 0030 FFF7FEFF 		bl	move_valve
 730              	.L41:
 731              		.loc 1 187 0
 732 0034 00BF     		nop
 733 0036 0837     		adds	r7, r7, #8
 734              		.cfi_def_cfa_offset 8
 735 0038 BD46     		mov	sp, r7
 736              		.cfi_def_cfa_register 13
 737              		@ sp needed
 738 003a 80BD     		pop	{r7, pc}
 739              	.L43:
 740              		.align	2
 741              	.L42:
 742 003c 88000000 		.word	.LC3
 743              		.cfi_endproc
 744              	.LFE67:
 745              		.size	valve_level_controller, .-valve_level_controller
 746              		.text
 747              	.Letext0:
 748              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 749              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 18


 750              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 751              		.file 5 "testing.h"
 752              		.file 6 "voltages.h"
 753              		.file 7 "data.h"
 754              		.file 8 "modem.h"
 755              		.file 9 "notoriOS.h"
 756              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 757              		.section	.debug_info,"",%progbits
 758              	.Ldebug_info0:
 759 0000 2F060000 		.4byte	0x62f
 760 0004 0400     		.2byte	0x4
 761 0006 00000000 		.4byte	.Ldebug_abbrev0
 762 000a 04       		.byte	0x4
 763 000b 01       		.uleb128 0x1
 764 000c 90000000 		.4byte	.LASF95
 765 0010 0C       		.byte	0xc
 766 0011 A6010000 		.4byte	.LASF96
 767 0015 FF010000 		.4byte	.LASF97
 768 0019 00000000 		.4byte	.Ldebug_ranges0+0
 769 001d 00000000 		.4byte	0
 770 0021 00000000 		.4byte	.Ldebug_line0
 771 0025 02       		.uleb128 0x2
 772 0026 01       		.byte	0x1
 773 0027 06       		.byte	0x6
 774 0028 E2020000 		.4byte	.LASF0
 775 002c 02       		.uleb128 0x2
 776 002d 01       		.byte	0x1
 777 002e 08       		.byte	0x8
 778 002f 93020000 		.4byte	.LASF1
 779 0033 02       		.uleb128 0x2
 780 0034 02       		.byte	0x2
 781 0035 05       		.byte	0x5
 782 0036 47010000 		.4byte	.LASF2
 783 003a 02       		.uleb128 0x2
 784 003b 02       		.byte	0x2
 785 003c 07       		.byte	0x7
 786 003d 92030000 		.4byte	.LASF3
 787 0041 03       		.uleb128 0x3
 788 0042 C7040000 		.4byte	.LASF9
 789 0046 02       		.byte	0x2
 790 0047 3F       		.byte	0x3f
 791 0048 4C000000 		.4byte	0x4c
 792 004c 02       		.uleb128 0x2
 793 004d 04       		.byte	0x4
 794 004e 05       		.byte	0x5
 795 004f DB010000 		.4byte	.LASF4
 796 0053 02       		.uleb128 0x2
 797 0054 04       		.byte	0x4
 798 0055 07       		.byte	0x7
 799 0056 66040000 		.4byte	.LASF5
 800 005a 02       		.uleb128 0x2
 801 005b 08       		.byte	0x8
 802 005c 05       		.byte	0x5
 803 005d B4010000 		.4byte	.LASF6
 804 0061 02       		.uleb128 0x2
 805 0062 08       		.byte	0x8
 806 0063 07       		.byte	0x7
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 19


 807 0064 FD020000 		.4byte	.LASF7
 808 0068 04       		.uleb128 0x4
 809 0069 04       		.byte	0x4
 810 006a 05       		.byte	0x5
 811 006b 696E7400 		.ascii	"int\000"
 812 006f 02       		.uleb128 0x2
 813 0070 04       		.byte	0x4
 814 0071 07       		.byte	0x7
 815 0072 24030000 		.4byte	.LASF8
 816 0076 03       		.uleb128 0x3
 817 0077 FF030000 		.4byte	.LASF10
 818 007b 03       		.byte	0x3
 819 007c 2C       		.byte	0x2c
 820 007d 41000000 		.4byte	0x41
 821 0081 05       		.uleb128 0x5
 822 0082 79010000 		.4byte	.LASF11
 823 0086 04       		.byte	0x4
 824 0087 9201     		.2byte	0x192
 825 0089 2C000000 		.4byte	0x2c
 826 008d 05       		.uleb128 0x5
 827 008e 54040000 		.4byte	.LASF12
 828 0092 04       		.byte	0x4
 829 0093 9301     		.2byte	0x193
 830 0095 3A000000 		.4byte	0x3a
 831 0099 05       		.uleb128 0x5
 832 009a 84010000 		.4byte	.LASF13
 833 009e 04       		.byte	0x4
 834 009f 9601     		.2byte	0x196
 835 00a1 33000000 		.4byte	0x33
 836 00a5 05       		.uleb128 0x5
 837 00a6 78040000 		.4byte	.LASF14
 838 00aa 04       		.byte	0x4
 839 00ab 9701     		.2byte	0x197
 840 00ad 4C000000 		.4byte	0x4c
 841 00b1 05       		.uleb128 0x5
 842 00b2 3C000000 		.4byte	.LASF15
 843 00b6 04       		.byte	0x4
 844 00b7 9801     		.2byte	0x198
 845 00b9 BD000000 		.4byte	0xbd
 846 00bd 02       		.uleb128 0x2
 847 00be 04       		.byte	0x4
 848 00bf 04       		.byte	0x4
 849 00c0 AE010000 		.4byte	.LASF16
 850 00c4 02       		.uleb128 0x2
 851 00c5 08       		.byte	0x8
 852 00c6 04       		.byte	0x4
 853 00c7 7E040000 		.4byte	.LASF17
 854 00cb 02       		.uleb128 0x2
 855 00cc 01       		.byte	0x1
 856 00cd 08       		.byte	0x8
 857 00ce CF010000 		.4byte	.LASF18
 858 00d2 02       		.uleb128 0x2
 859 00d3 08       		.byte	0x8
 860 00d4 04       		.byte	0x4
 861 00d5 72020000 		.4byte	.LASF19
 862 00d9 02       		.uleb128 0x2
 863 00da 04       		.byte	0x4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 20


 864 00db 07       		.byte	0x7
 865 00dc 7F000000 		.4byte	.LASF20
 866 00e0 06       		.uleb128 0x6
 867 00e1 CB000000 		.4byte	0xcb
 868 00e5 F0000000 		.4byte	0xf0
 869 00e9 07       		.uleb128 0x7
 870 00ea D9000000 		.4byte	0xd9
 871 00ee 17       		.byte	0x17
 872 00ef 00       		.byte	0
 873 00f0 08       		.uleb128 0x8
 874 00f1 8101     		.2byte	0x181
 875 00f3 05       		.byte	0x5
 876 00f4 0A       		.byte	0xa
 877 00f5 1E010000 		.4byte	0x11e
 878 00f9 09       		.uleb128 0x9
 879 00fa 05050000 		.4byte	.LASF21
 880 00fe 05       		.byte	0x5
 881 00ff 0C       		.byte	0xc
 882 0100 1E010000 		.4byte	0x11e
 883 0104 00       		.byte	0
 884 0105 09       		.uleb128 0x9
 885 0106 BD030000 		.4byte	.LASF22
 886 010a 05       		.byte	0x5
 887 010b 0D       		.byte	0xd
 888 010c 81000000 		.4byte	0x81
 889 0110 80       		.byte	0x80
 890 0111 09       		.uleb128 0x9
 891 0112 D4010000 		.4byte	.LASF23
 892 0116 05       		.byte	0x5
 893 0117 0F       		.byte	0xf
 894 0118 2E010000 		.4byte	0x12e
 895 011c 81       		.byte	0x81
 896 011d 00       		.byte	0
 897 011e 06       		.uleb128 0x6
 898 011f CB000000 		.4byte	0xcb
 899 0123 2E010000 		.4byte	0x12e
 900 0127 07       		.uleb128 0x7
 901 0128 D9000000 		.4byte	0xd9
 902 012c 7F       		.byte	0x7f
 903 012d 00       		.byte	0
 904 012e 06       		.uleb128 0x6
 905 012f CB000000 		.4byte	0xcb
 906 0133 3E010000 		.4byte	0x13e
 907 0137 07       		.uleb128 0x7
 908 0138 D9000000 		.4byte	0xd9
 909 013c FF       		.byte	0xff
 910 013d 00       		.byte	0
 911 013e 03       		.uleb128 0x3
 912 013f E3030000 		.4byte	.LASF24
 913 0143 05       		.byte	0x5
 914 0144 10       		.byte	0x10
 915 0145 F0000000 		.4byte	0xf0
 916 0149 0A       		.uleb128 0xa
 917 014a 1C       		.byte	0x1c
 918 014b 06       		.byte	0x6
 919 014c 14       		.byte	0x14
 920 014d A6010000 		.4byte	0x1a6
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 21


 921 0151 09       		.uleb128 0x9
 922 0152 57010000 		.4byte	.LASF25
 923 0156 06       		.byte	0x6
 924 0157 15       		.byte	0x15
 925 0158 BD000000 		.4byte	0xbd
 926 015c 00       		.byte	0
 927 015d 09       		.uleb128 0x9
 928 015e 1F000000 		.4byte	.LASF26
 929 0162 06       		.byte	0x6
 930 0163 16       		.byte	0x16
 931 0164 BD000000 		.4byte	0xbd
 932 0168 04       		.byte	0x4
 933 0169 09       		.uleb128 0x9
 934 016a 35050000 		.4byte	.LASF27
 935 016e 06       		.byte	0x6
 936 016f 17       		.byte	0x17
 937 0170 BD000000 		.4byte	0xbd
 938 0174 08       		.byte	0x8
 939 0175 09       		.uleb128 0x9
 940 0176 23010000 		.4byte	.LASF28
 941 017a 06       		.byte	0x6
 942 017b 18       		.byte	0x18
 943 017c BD000000 		.4byte	0xbd
 944 0180 0C       		.byte	0xc
 945 0181 09       		.uleb128 0x9
 946 0182 94010000 		.4byte	.LASF29
 947 0186 06       		.byte	0x6
 948 0187 19       		.byte	0x19
 949 0188 BD000000 		.4byte	0xbd
 950 018c 10       		.byte	0x10
 951 018d 09       		.uleb128 0x9
 952 018e 15040000 		.4byte	.LASF30
 953 0192 06       		.byte	0x6
 954 0193 1A       		.byte	0x1a
 955 0194 BD000000 		.4byte	0xbd
 956 0198 14       		.byte	0x14
 957 0199 09       		.uleb128 0x9
 958 019a 00000000 		.4byte	.LASF31
 959 019e 06       		.byte	0x6
 960 019f 1B       		.byte	0x1b
 961 01a0 81000000 		.4byte	0x81
 962 01a4 18       		.byte	0x18
 963 01a5 00       		.byte	0
 964 01a6 03       		.uleb128 0x3
 965 01a7 F5030000 		.4byte	.LASF32
 966 01ab 06       		.byte	0x6
 967 01ac 1C       		.byte	0x1c
 968 01ad 49010000 		.4byte	0x149
 969 01b1 0A       		.uleb128 0xa
 970 01b2 2C       		.byte	0x2c
 971 01b3 07       		.byte	0x7
 972 01b4 14       		.byte	0x14
 973 01b5 DE010000 		.4byte	0x1de
 974 01b9 0B       		.uleb128 0xb
 975 01ba 6B657900 		.ascii	"key\000"
 976 01be 07       		.byte	0x7
 977 01bf 15       		.byte	0x15
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 22


 978 01c0 DE010000 		.4byte	0x1de
 979 01c4 00       		.byte	0
 980 01c5 09       		.uleb128 0x9
 981 01c6 51010000 		.4byte	.LASF33
 982 01ca 07       		.byte	0x7
 983 01cb 16       		.byte	0x16
 984 01cc DE010000 		.4byte	0x1de
 985 01d0 14       		.byte	0x14
 986 01d1 09       		.uleb128 0x9
 987 01d2 8A010000 		.4byte	.LASF34
 988 01d6 07       		.byte	0x7
 989 01d7 17       		.byte	0x17
 990 01d8 A5000000 		.4byte	0xa5
 991 01dc 28       		.byte	0x28
 992 01dd 00       		.byte	0
 993 01de 06       		.uleb128 0x6
 994 01df CB000000 		.4byte	0xcb
 995 01e3 EE010000 		.4byte	0x1ee
 996 01e7 07       		.uleb128 0x7
 997 01e8 D9000000 		.4byte	0xd9
 998 01ec 13       		.byte	0x13
 999 01ed 00       		.byte	0
 1000 01ee 03       		.uleb128 0x3
 1001 01ef 31030000 		.4byte	.LASF35
 1002 01f3 07       		.byte	0x7
 1003 01f4 19       		.byte	0x19
 1004 01f5 B1010000 		.4byte	0x1b1
 1005 01f9 0A       		.uleb128 0xa
 1006 01fa 3C       		.byte	0x3c
 1007 01fb 08       		.byte	0x8
 1008 01fc 37       		.byte	0x37
 1009 01fd 26020000 		.4byte	0x226
 1010 0201 09       		.uleb128 0x9
 1011 0202 18000000 		.4byte	.LASF36
 1012 0206 08       		.byte	0x8
 1013 0207 38       		.byte	0x38
 1014 0208 DE010000 		.4byte	0x1de
 1015 020c 00       		.byte	0
 1016 020d 09       		.uleb128 0x9
 1017 020e 06000000 		.4byte	.LASF37
 1018 0212 08       		.byte	0x8
 1019 0213 39       		.byte	0x39
 1020 0214 DE010000 		.4byte	0x1de
 1021 0218 14       		.byte	0x14
 1022 0219 09       		.uleb128 0x9
 1023 021a E9040000 		.4byte	.LASF38
 1024 021e 08       		.byte	0x8
 1025 021f 3A       		.byte	0x3a
 1026 0220 DE010000 		.4byte	0x1de
 1027 0224 28       		.byte	0x28
 1028 0225 00       		.byte	0
 1029 0226 03       		.uleb128 0x3
 1030 0227 9E040000 		.4byte	.LASF39
 1031 022b 08       		.byte	0x8
 1032 022c 3C       		.byte	0x3c
 1033 022d F9010000 		.4byte	0x1f9
 1034 0231 0A       		.uleb128 0xa
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 23


 1035 0232 20       		.byte	0x20
 1036 0233 08       		.byte	0x8
 1037 0234 3E       		.byte	0x3e
 1038 0235 9A020000 		.4byte	0x29a
 1039 0239 09       		.uleb128 0x9
 1040 023a 3D030000 		.4byte	.LASF40
 1041 023e 08       		.byte	0x8
 1042 023f 3F       		.byte	0x3f
 1043 0240 68000000 		.4byte	0x68
 1044 0244 00       		.byte	0
 1045 0245 0B       		.uleb128 0xb
 1046 0246 62657200 		.ascii	"ber\000"
 1047 024a 08       		.byte	0x8
 1048 024b 40       		.byte	0x40
 1049 024c 68000000 		.4byte	0x68
 1050 0250 04       		.byte	0x4
 1051 0251 09       		.uleb128 0x9
 1052 0252 7F010000 		.4byte	.LASF41
 1053 0256 08       		.byte	0x8
 1054 0257 41       		.byte	0x41
 1055 0258 68000000 		.4byte	0x68
 1056 025c 08       		.byte	0x8
 1057 025d 09       		.uleb128 0x9
 1058 025e 42010000 		.4byte	.LASF42
 1059 0262 08       		.byte	0x8
 1060 0263 42       		.byte	0x42
 1061 0264 68000000 		.4byte	0x68
 1062 0268 0C       		.byte	0xc
 1063 0269 09       		.uleb128 0x9
 1064 026a 4F040000 		.4byte	.LASF43
 1065 026e 08       		.byte	0x8
 1066 026f 43       		.byte	0x43
 1067 0270 68000000 		.4byte	0x68
 1068 0274 10       		.byte	0x10
 1069 0275 09       		.uleb128 0x9
 1070 0276 A1020000 		.4byte	.LASF44
 1071 027a 08       		.byte	0x8
 1072 027b 44       		.byte	0x44
 1073 027c 68000000 		.4byte	0x68
 1074 0280 14       		.byte	0x14
 1075 0281 09       		.uleb128 0x9
 1076 0282 A5030000 		.4byte	.LASF45
 1077 0286 08       		.byte	0x8
 1078 0287 45       		.byte	0x45
 1079 0288 68000000 		.4byte	0x68
 1080 028c 18       		.byte	0x18
 1081 028d 09       		.uleb128 0x9
 1082 028e D0030000 		.4byte	.LASF46
 1083 0292 08       		.byte	0x8
 1084 0293 46       		.byte	0x46
 1085 0294 68000000 		.4byte	0x68
 1086 0298 1C       		.byte	0x1c
 1087 0299 00       		.byte	0
 1088 029a 03       		.uleb128 0x3
 1089 029b 07040000 		.4byte	.LASF47
 1090 029f 08       		.byte	0x8
 1091 02a0 48       		.byte	0x48
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 24


 1092 02a1 31020000 		.4byte	0x231
 1093 02a5 0A       		.uleb128 0xa
 1094 02a6 05       		.byte	0x5
 1095 02a7 08       		.byte	0x8
 1096 02a8 54       		.byte	0x54
 1097 02a9 EA020000 		.4byte	0x2ea
 1098 02ad 09       		.uleb128 0x9
 1099 02ae 2B050000 		.4byte	.LASF48
 1100 02b2 08       		.byte	0x8
 1101 02b3 56       		.byte	0x56
 1102 02b4 81000000 		.4byte	0x81
 1103 02b8 00       		.byte	0
 1104 02b9 09       		.uleb128 0x9
 1105 02ba 7E030000 		.4byte	.LASF49
 1106 02be 08       		.byte	0x8
 1107 02bf 58       		.byte	0x58
 1108 02c0 EA020000 		.4byte	0x2ea
 1109 02c4 01       		.byte	0x1
 1110 02c5 09       		.uleb128 0x9
 1111 02c6 4A020000 		.4byte	.LASF50
 1112 02ca 08       		.byte	0x8
 1113 02cb 5A       		.byte	0x5a
 1114 02cc 81000000 		.4byte	0x81
 1115 02d0 02       		.byte	0x2
 1116 02d1 09       		.uleb128 0x9
 1117 02d2 43030000 		.4byte	.LASF51
 1118 02d6 08       		.byte	0x8
 1119 02d7 5C       		.byte	0x5c
 1120 02d8 81000000 		.4byte	0x81
 1121 02dc 03       		.byte	0x3
 1122 02dd 09       		.uleb128 0x9
 1123 02de 92040000 		.4byte	.LASF52
 1124 02e2 08       		.byte	0x8
 1125 02e3 5F       		.byte	0x5f
 1126 02e4 81000000 		.4byte	0x81
 1127 02e8 04       		.byte	0x4
 1128 02e9 00       		.byte	0
 1129 02ea 02       		.uleb128 0x2
 1130 02eb 01       		.byte	0x1
 1131 02ec 02       		.byte	0x2
 1132 02ed 2D040000 		.4byte	.LASF53
 1133 02f1 03       		.uleb128 0x3
 1134 02f2 67030000 		.4byte	.LASF54
 1135 02f6 08       		.byte	0x8
 1136 02f7 61       		.byte	0x61
 1137 02f8 A5020000 		.4byte	0x2a5
 1138 02fc 0A       		.uleb128 0xa
 1139 02fd 06       		.byte	0x6
 1140 02fe 09       		.byte	0x9
 1141 02ff 2E       		.byte	0x2e
 1142 0300 35030000 		.4byte	0x335
 1143 0304 09       		.uleb128 0x9
 1144 0305 5A000000 		.4byte	.LASF55
 1145 0309 09       		.byte	0x9
 1146 030a 30       		.byte	0x30
 1147 030b 8D000000 		.4byte	0x8d
 1148 030f 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 25


 1149 0310 09       		.uleb128 0x9
 1150 0311 44000000 		.4byte	.LASF56
 1151 0315 09       		.byte	0x9
 1152 0316 31       		.byte	0x31
 1153 0317 99000000 		.4byte	0x99
 1154 031b 02       		.byte	0x2
 1155 031c 09       		.uleb128 0x9
 1156 031d AB040000 		.4byte	.LASF57
 1157 0321 09       		.byte	0x9
 1158 0322 32       		.byte	0x32
 1159 0323 81000000 		.4byte	0x81
 1160 0327 04       		.byte	0x4
 1161 0328 09       		.uleb128 0x9
 1162 0329 D1040000 		.4byte	.LASF58
 1163 032d 09       		.byte	0x9
 1164 032e 33       		.byte	0x33
 1165 032f 81000000 		.4byte	0x81
 1166 0333 05       		.byte	0x5
 1167 0334 00       		.byte	0
 1168 0335 03       		.uleb128 0x3
 1169 0336 44020000 		.4byte	.LASF59
 1170 033a 09       		.byte	0x9
 1171 033b 36       		.byte	0x36
 1172 033c 40030000 		.4byte	0x340
 1173 0340 0C       		.uleb128 0xc
 1174 0341 FC020000 		.4byte	0x2fc
 1175 0345 0A       		.uleb128 0xa
 1176 0346 1C       		.byte	0x1c
 1177 0347 09       		.byte	0x9
 1178 0348 39       		.byte	0x39
 1179 0349 66030000 		.4byte	0x366
 1180 034d 09       		.uleb128 0x9
 1181 034e F4010000 		.4byte	.LASF60
 1182 0352 09       		.byte	0x9
 1183 0353 3B       		.byte	0x3b
 1184 0354 66030000 		.4byte	0x366
 1185 0358 00       		.byte	0
 1186 0359 09       		.uleb128 0x9
 1187 035a 34010000 		.4byte	.LASF61
 1188 035e 09       		.byte	0x9
 1189 035f 3C       		.byte	0x3c
 1190 0360 E0000000 		.4byte	0xe0
 1191 0364 04       		.byte	0x4
 1192 0365 00       		.byte	0
 1193 0366 0D       		.uleb128 0xd
 1194 0367 04       		.byte	0x4
 1195 0368 26020000 		.4byte	0x226
 1196 036c 03       		.uleb128 0x3
 1197 036d 87030000 		.4byte	.LASF62
 1198 0371 09       		.byte	0x9
 1199 0372 3E       		.byte	0x3e
 1200 0373 45030000 		.4byte	0x345
 1201 0377 0A       		.uleb128 0xa
 1202 0378 68       		.byte	0x68
 1203 0379 09       		.byte	0x9
 1204 037a 44       		.byte	0x44
 1205 037b 98030000 		.4byte	0x398
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 26


 1206 037f 09       		.uleb128 0x9
 1207 0380 88000000 		.4byte	.LASF63
 1208 0384 09       		.byte	0x9
 1209 0385 49       		.byte	0x49
 1210 0386 98030000 		.4byte	0x398
 1211 038a 00       		.byte	0
 1212 038b 09       		.uleb128 0x9
 1213 038c 19050000 		.4byte	.LASF64
 1214 0390 09       		.byte	0x9
 1215 0391 4A       		.byte	0x4a
 1216 0392 68000000 		.4byte	0x68
 1217 0396 64       		.byte	0x64
 1218 0397 00       		.byte	0
 1219 0398 06       		.uleb128 0x6
 1220 0399 CB000000 		.4byte	0xcb
 1221 039d A8030000 		.4byte	0x3a8
 1222 03a1 07       		.uleb128 0x7
 1223 03a2 D9000000 		.4byte	0xd9
 1224 03a6 63       		.byte	0x63
 1225 03a7 00       		.byte	0
 1226 03a8 03       		.uleb128 0x3
 1227 03a9 2D000000 		.4byte	.LASF65
 1228 03ad 09       		.byte	0x9
 1229 03ae 50       		.byte	0x50
 1230 03af 77030000 		.4byte	0x377
 1231 03b3 0E       		.uleb128 0xe
 1232 03b4 39020000 		.4byte	.LASF69
 1233 03b8 01       		.byte	0x1
 1234 03b9 07       		.byte	0x7
 1235 03ba 3E010000 		.4byte	0x13e
 1236 03be 00000000 		.4byte	.LFB64
 1237 03c2 B4020000 		.4byte	.LFE64-.LFB64
 1238 03c6 01       		.uleb128 0x1
 1239 03c7 9C       		.byte	0x9c
 1240 03c8 FA030000 		.4byte	0x3fa
 1241 03cc 0F       		.uleb128 0xf
 1242 03cd 4A040000 		.4byte	.LASF66
 1243 03d1 01       		.byte	0x1
 1244 03d2 0E       		.byte	0xe
 1245 03d3 3E010000 		.4byte	0x13e
 1246 03d7 03       		.uleb128 0x3
 1247 03d8 91       		.byte	0x91
 1248 03d9 C07C     		.sleb128 -448
 1249 03db 0F       		.uleb128 0xf
 1250 03dc 0F050000 		.4byte	.LASF67
 1251 03e0 01       		.byte	0x1
 1252 03e1 12       		.byte	0x12
 1253 03e2 FA030000 		.4byte	0x3fa
 1254 03e6 03       		.uleb128 0x3
 1255 03e7 91       		.byte	0x91
 1256 03e8 A07C     		.sleb128 -480
 1257 03ea 0F       		.uleb128 0xf
 1258 03eb 0F000000 		.4byte	.LASF68
 1259 03ef 01       		.byte	0x1
 1260 03f0 14       		.byte	0x14
 1261 03f1 0A040000 		.4byte	0x40a
 1262 03f5 03       		.uleb128 0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 27


 1263 03f6 91       		.byte	0x91
 1264 03f7 C07A     		.sleb128 -704
 1265 03f9 00       		.byte	0
 1266 03fa 06       		.uleb128 0x6
 1267 03fb B1000000 		.4byte	0xb1
 1268 03ff 0A040000 		.4byte	0x40a
 1269 0403 07       		.uleb128 0x7
 1270 0404 D9000000 		.4byte	0xd9
 1271 0408 07       		.byte	0x7
 1272 0409 00       		.byte	0
 1273 040a 06       		.uleb128 0x6
 1274 040b A6010000 		.4byte	0x1a6
 1275 040f 1A040000 		.4byte	0x41a
 1276 0413 07       		.uleb128 0x7
 1277 0414 D9000000 		.4byte	0xd9
 1278 0418 07       		.byte	0x7
 1279 0419 00       		.byte	0
 1280 041a 0E       		.uleb128 0xe
 1281 041b EE020000 		.4byte	.LASF70
 1282 041f 01       		.byte	0x1
 1283 0420 4A       		.byte	0x4a
 1284 0421 B1000000 		.4byte	0xb1
 1285 0425 00000000 		.4byte	.LFB65
 1286 0429 50000000 		.4byte	.LFE65-.LFB65
 1287 042d 01       		.uleb128 0x1
 1288 042e 9C       		.byte	0x9c
 1289 042f 42040000 		.4byte	0x442
 1290 0433 0F       		.uleb128 0xf
 1291 0434 57050000 		.4byte	.LASF71
 1292 0438 01       		.byte	0x1
 1293 0439 4C       		.byte	0x4c
 1294 043a A6010000 		.4byte	0x1a6
 1295 043e 02       		.uleb128 0x2
 1296 043f 91       		.byte	0x91
 1297 0440 54       		.sleb128 -44
 1298 0441 00       		.byte	0
 1299 0442 10       		.uleb128 0x10
 1300 0443 EA030000 		.4byte	.LASF98
 1301 0447 01       		.byte	0x1
 1302 0448 52       		.byte	0x52
 1303 0449 81000000 		.4byte	0x81
 1304 044d 00000000 		.4byte	.LFB66
 1305 0451 00020000 		.4byte	.LFE66-.LFB66
 1306 0455 01       		.uleb128 0x1
 1307 0456 9C       		.byte	0x9c
 1308 0457 78040000 		.4byte	0x478
 1309 045b 11       		.uleb128 0x11
 1310 045c 57020000 		.4byte	.LASF74
 1311 0460 01       		.byte	0x1
 1312 0461 52       		.byte	0x52
 1313 0462 B1000000 		.4byte	0xb1
 1314 0466 02       		.uleb128 0x2
 1315 0467 91       		.byte	0x91
 1316 0468 6C       		.sleb128 -20
 1317 0469 0F       		.uleb128 0xf
 1318 046a 69000000 		.4byte	.LASF72
 1319 046e 01       		.byte	0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 28


 1320 046f 5B       		.byte	0x5b
 1321 0470 B1000000 		.4byte	0xb1
 1322 0474 02       		.uleb128 0x2
 1323 0475 91       		.byte	0x91
 1324 0476 74       		.sleb128 -12
 1325 0477 00       		.byte	0
 1326 0478 12       		.uleb128 0x12
 1327 0479 EE040000 		.4byte	.LASF73
 1328 047d 01       		.byte	0x1
 1329 047e B3       		.byte	0xb3
 1330 047f 00000000 		.4byte	.LFB67
 1331 0483 40000000 		.4byte	.LFE67-.LFB67
 1332 0487 01       		.uleb128 0x1
 1333 0488 9C       		.byte	0x9c
 1334 0489 9C040000 		.4byte	0x49c
 1335 048d 11       		.uleb128 0x11
 1336 048e B9040000 		.4byte	.LASF75
 1337 0492 01       		.byte	0x1
 1338 0493 B3       		.byte	0xb3
 1339 0494 99000000 		.4byte	0x99
 1340 0498 02       		.uleb128 0x2
 1341 0499 91       		.byte	0x91
 1342 049a 76       		.sleb128 -10
 1343 049b 00       		.byte	0
 1344 049c 13       		.uleb128 0x13
 1345 049d 85040000 		.4byte	.LASF76
 1346 04a1 0A       		.byte	0xa
 1347 04a2 1207     		.2byte	0x712
 1348 04a4 A8040000 		.4byte	0x4a8
 1349 04a8 0C       		.uleb128 0xc
 1350 04a9 76000000 		.4byte	0x76
 1351 04ad 14       		.uleb128 0x14
 1352 04ae E4010000 		.4byte	.LASF77
 1353 04b2 07       		.byte	0x7
 1354 04b3 11       		.byte	0x11
 1355 04b4 EA020000 		.4byte	0x2ea
 1356 04b8 05       		.uleb128 0x5
 1357 04b9 03       		.byte	0x3
 1358 04ba 00000000 		.4byte	buffer_overflow
 1359 04be 14       		.uleb128 0x14
 1360 04bf 67010000 		.4byte	.LASF78
 1361 04c3 07       		.byte	0x7
 1362 04c4 22       		.byte	0x22
 1363 04c5 8D000000 		.4byte	0x8d
 1364 04c9 05       		.uleb128 0x5
 1365 04ca 03       		.byte	0x3
 1366 04cb 00000000 		.4byte	dataPointsInStack
 1367 04cf 14       		.uleb128 0x14
 1368 04d0 BD020000 		.4byte	.LASF79
 1369 04d4 07       		.byte	0x7
 1370 04d5 23       		.byte	0x23
 1371 04d6 8D000000 		.4byte	0x8d
 1372 04da 05       		.uleb128 0x5
 1373 04db 03       		.byte	0x3
 1374 04dc 00000000 		.4byte	dataPointsInStackDesired
 1375 04e0 06       		.uleb128 0x6
 1376 04e1 EE010000 		.4byte	0x1ee
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 29


 1377 04e5 F0040000 		.4byte	0x4f0
 1378 04e9 07       		.uleb128 0x7
 1379 04ea D9000000 		.4byte	0xd9
 1380 04ee 95       		.byte	0x95
 1381 04ef 00       		.byte	0
 1382 04f0 14       		.uleb128 0x14
 1383 04f1 1E010000 		.4byte	.LASF80
 1384 04f5 07       		.byte	0x7
 1385 04f6 24       		.byte	0x24
 1386 04f7 E0040000 		.4byte	0x4e0
 1387 04fb 05       		.uleb128 0x5
 1388 04fc 03       		.byte	0x3
 1389 04fd 00000000 		.4byte	data
 1390 0501 14       		.uleb128 0x14
 1391 0502 D6020000 		.4byte	.LASF81
 1392 0506 08       		.byte	0x8
 1393 0507 21       		.byte	0x21
 1394 0508 81000000 		.4byte	0x81
 1395 050c 05       		.uleb128 0x5
 1396 050d 03       		.byte	0x3
 1397 050e 00000000 		.4byte	modem_state
 1398 0512 14       		.uleb128 0x14
 1399 0513 A6020000 		.4byte	.LASF82
 1400 0517 08       		.byte	0x8
 1401 0518 64       		.byte	0x64
 1402 0519 A5000000 		.4byte	0xa5
 1403 051d 05       		.uleb128 0x5
 1404 051e 03       		.byte	0x3
 1405 051f 00000000 		.4byte	modem_start_time_stamp
 1406 0523 14       		.uleb128 0x14
 1407 0524 F4010000 		.4byte	.LASF60
 1408 0528 08       		.byte	0x8
 1409 0529 65       		.byte	0x65
 1410 052a 26020000 		.4byte	0x226
 1411 052e 05       		.uleb128 0x5
 1412 052f 03       		.byte	0x3
 1413 0530 00000000 		.4byte	modem_info
 1414 0534 14       		.uleb128 0x14
 1415 0535 4D030000 		.4byte	.LASF83
 1416 0539 08       		.byte	0x8
 1417 053a 66       		.byte	0x66
 1418 053b 9A020000 		.4byte	0x29a
 1419 053f 05       		.uleb128 0x5
 1420 0540 03       		.byte	0x3
 1421 0541 00000000 		.4byte	modem_stats
 1422 0545 14       		.uleb128 0x14
 1423 0546 7E020000 		.4byte	.LASF84
 1424 054a 08       		.byte	0x8
 1425 054b 67       		.byte	0x67
 1426 054c F1020000 		.4byte	0x2f1
 1427 0550 05       		.uleb128 0x5
 1428 0551 03       		.byte	0x3
 1429 0552 00000000 		.4byte	updatable_parameters
 1430 0556 06       		.uleb128 0x6
 1431 0557 CB000000 		.4byte	0xcb
 1432 055b 67050000 		.4byte	0x567
 1433 055f 15       		.uleb128 0x15
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 30


 1434 0560 D9000000 		.4byte	0xd9
 1435 0564 0F27     		.2byte	0x270f
 1436 0566 00       		.byte	0
 1437 0567 14       		.uleb128 0x14
 1438 0568 72000000 		.4byte	.LASF85
 1439 056c 09       		.byte	0x9
 1440 056d 18       		.byte	0x18
 1441 056e 56050000 		.4byte	0x556
 1442 0572 05       		.uleb128 0x5
 1443 0573 03       		.byte	0x3
 1444 0574 00000000 		.4byte	http_request
 1445 0578 14       		.uleb128 0x14
 1446 0579 21050000 		.4byte	.LASF86
 1447 057d 09       		.byte	0x9
 1448 057e 19       		.byte	0x19
 1449 057f 56050000 		.4byte	0x556
 1450 0583 05       		.uleb128 0x5
 1451 0584 03       		.byte	0x3
 1452 0585 00000000 		.4byte	http_body
 1453 0589 06       		.uleb128 0x6
 1454 058a CB000000 		.4byte	0xcb
 1455 058e 99050000 		.4byte	0x599
 1456 0592 07       		.uleb128 0x7
 1457 0593 D9000000 		.4byte	0xd9
 1458 0597 C7       		.byte	0xc7
 1459 0598 00       		.byte	0
 1460 0599 14       		.uleb128 0x14
 1461 059a 5B040000 		.4byte	.LASF87
 1462 059e 09       		.byte	0x9
 1463 059f 1A       		.byte	0x1a
 1464 05a0 89050000 		.4byte	0x589
 1465 05a4 05       		.uleb128 0x5
 1466 05a5 03       		.byte	0x3
 1467 05a6 00000000 		.4byte	http_route
 1468 05aa 14       		.uleb128 0x14
 1469 05ab C4030000 		.4byte	.LASF88
 1470 05af 09       		.byte	0x9
 1471 05b0 41       		.byte	0x41
 1472 05b1 6C030000 		.4byte	0x36c
 1473 05b5 05       		.uleb128 0x5
 1474 05b6 03       		.byte	0x3
 1475 05b7 00000000 		.4byte	system_info
 1476 05bb 14       		.uleb128 0x14
 1477 05bc 14030000 		.4byte	.LASF89
 1478 05c0 09       		.byte	0x9
 1479 05c1 53       		.byte	0x53
 1480 05c2 A8030000 		.4byte	0x3a8
 1481 05c6 05       		.uleb128 0x5
 1482 05c7 03       		.byte	0x3
 1483 05c8 00000000 		.4byte	system_settings
 1484 05cc 14       		.uleb128 0x14
 1485 05cd C2010000 		.4byte	.LASF90
 1486 05d1 09       		.byte	0x9
 1487 05d2 6F       		.byte	0x6f
 1488 05d3 35030000 		.4byte	0x335
 1489 05d7 05       		.uleb128 0x5
 1490 05d8 03       		.byte	0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 31


 1491 05d9 00000000 		.4byte	alarmMeasure
 1492 05dd 14       		.uleb128 0x14
 1493 05de 59030000 		.4byte	.LASF91
 1494 05e2 09       		.byte	0x9
 1495 05e3 70       		.byte	0x70
 1496 05e4 81000000 		.4byte	0x81
 1497 05e8 05       		.uleb128 0x5
 1498 05e9 03       		.byte	0x3
 1499 05ea 00000000 		.4byte	timeToMeasure
 1500 05ee 14       		.uleb128 0x14
 1501 05ef 68020000 		.4byte	.LASF92
 1502 05f3 09       		.byte	0x9
 1503 05f4 71       		.byte	0x71
 1504 05f5 35030000 		.4byte	0x335
 1505 05f9 05       		.uleb128 0x5
 1506 05fa 03       		.byte	0x3
 1507 05fb 00000000 		.4byte	alarmSync
 1508 05ff 14       		.uleb128 0x14
 1509 0600 4C050000 		.4byte	.LASF93
 1510 0604 09       		.byte	0x9
 1511 0605 72       		.byte	0x72
 1512 0606 81000000 		.4byte	0x81
 1513 060a 05       		.uleb128 0x5
 1514 060b 03       		.byte	0x3
 1515 060c 00000000 		.4byte	timeToSync
 1516 0610 14       		.uleb128 0x14
 1517 0611 33040000 		.4byte	.LASF94
 1518 0615 09       		.byte	0x9
 1519 0616 73       		.byte	0x73
 1520 0617 81000000 		.4byte	0x81
 1521 061b 05       		.uleb128 0x5
 1522 061c 03       		.byte	0x3
 1523 061d 00000000 		.4byte	timeToSycnRemoteParams
 1524 0621 16       		.uleb128 0x16
 1525 0622 68657900 		.ascii	"hey\000"
 1526 0626 09       		.byte	0x9
 1527 0627 74       		.byte	0x74
 1528 0628 81000000 		.4byte	0x81
 1529 062c 05       		.uleb128 0x5
 1530 062d 03       		.byte	0x3
 1531 062e 00000000 		.4byte	hey
 1532 0632 00       		.byte	0
 1533              		.section	.debug_abbrev,"",%progbits
 1534              	.Ldebug_abbrev0:
 1535 0000 01       		.uleb128 0x1
 1536 0001 11       		.uleb128 0x11
 1537 0002 01       		.byte	0x1
 1538 0003 25       		.uleb128 0x25
 1539 0004 0E       		.uleb128 0xe
 1540 0005 13       		.uleb128 0x13
 1541 0006 0B       		.uleb128 0xb
 1542 0007 03       		.uleb128 0x3
 1543 0008 0E       		.uleb128 0xe
 1544 0009 1B       		.uleb128 0x1b
 1545 000a 0E       		.uleb128 0xe
 1546 000b 55       		.uleb128 0x55
 1547 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 32


 1548 000d 11       		.uleb128 0x11
 1549 000e 01       		.uleb128 0x1
 1550 000f 10       		.uleb128 0x10
 1551 0010 17       		.uleb128 0x17
 1552 0011 00       		.byte	0
 1553 0012 00       		.byte	0
 1554 0013 02       		.uleb128 0x2
 1555 0014 24       		.uleb128 0x24
 1556 0015 00       		.byte	0
 1557 0016 0B       		.uleb128 0xb
 1558 0017 0B       		.uleb128 0xb
 1559 0018 3E       		.uleb128 0x3e
 1560 0019 0B       		.uleb128 0xb
 1561 001a 03       		.uleb128 0x3
 1562 001b 0E       		.uleb128 0xe
 1563 001c 00       		.byte	0
 1564 001d 00       		.byte	0
 1565 001e 03       		.uleb128 0x3
 1566 001f 16       		.uleb128 0x16
 1567 0020 00       		.byte	0
 1568 0021 03       		.uleb128 0x3
 1569 0022 0E       		.uleb128 0xe
 1570 0023 3A       		.uleb128 0x3a
 1571 0024 0B       		.uleb128 0xb
 1572 0025 3B       		.uleb128 0x3b
 1573 0026 0B       		.uleb128 0xb
 1574 0027 49       		.uleb128 0x49
 1575 0028 13       		.uleb128 0x13
 1576 0029 00       		.byte	0
 1577 002a 00       		.byte	0
 1578 002b 04       		.uleb128 0x4
 1579 002c 24       		.uleb128 0x24
 1580 002d 00       		.byte	0
 1581 002e 0B       		.uleb128 0xb
 1582 002f 0B       		.uleb128 0xb
 1583 0030 3E       		.uleb128 0x3e
 1584 0031 0B       		.uleb128 0xb
 1585 0032 03       		.uleb128 0x3
 1586 0033 08       		.uleb128 0x8
 1587 0034 00       		.byte	0
 1588 0035 00       		.byte	0
 1589 0036 05       		.uleb128 0x5
 1590 0037 16       		.uleb128 0x16
 1591 0038 00       		.byte	0
 1592 0039 03       		.uleb128 0x3
 1593 003a 0E       		.uleb128 0xe
 1594 003b 3A       		.uleb128 0x3a
 1595 003c 0B       		.uleb128 0xb
 1596 003d 3B       		.uleb128 0x3b
 1597 003e 05       		.uleb128 0x5
 1598 003f 49       		.uleb128 0x49
 1599 0040 13       		.uleb128 0x13
 1600 0041 00       		.byte	0
 1601 0042 00       		.byte	0
 1602 0043 06       		.uleb128 0x6
 1603 0044 01       		.uleb128 0x1
 1604 0045 01       		.byte	0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 33


 1605 0046 49       		.uleb128 0x49
 1606 0047 13       		.uleb128 0x13
 1607 0048 01       		.uleb128 0x1
 1608 0049 13       		.uleb128 0x13
 1609 004a 00       		.byte	0
 1610 004b 00       		.byte	0
 1611 004c 07       		.uleb128 0x7
 1612 004d 21       		.uleb128 0x21
 1613 004e 00       		.byte	0
 1614 004f 49       		.uleb128 0x49
 1615 0050 13       		.uleb128 0x13
 1616 0051 2F       		.uleb128 0x2f
 1617 0052 0B       		.uleb128 0xb
 1618 0053 00       		.byte	0
 1619 0054 00       		.byte	0
 1620 0055 08       		.uleb128 0x8
 1621 0056 13       		.uleb128 0x13
 1622 0057 01       		.byte	0x1
 1623 0058 0B       		.uleb128 0xb
 1624 0059 05       		.uleb128 0x5
 1625 005a 3A       		.uleb128 0x3a
 1626 005b 0B       		.uleb128 0xb
 1627 005c 3B       		.uleb128 0x3b
 1628 005d 0B       		.uleb128 0xb
 1629 005e 01       		.uleb128 0x1
 1630 005f 13       		.uleb128 0x13
 1631 0060 00       		.byte	0
 1632 0061 00       		.byte	0
 1633 0062 09       		.uleb128 0x9
 1634 0063 0D       		.uleb128 0xd
 1635 0064 00       		.byte	0
 1636 0065 03       		.uleb128 0x3
 1637 0066 0E       		.uleb128 0xe
 1638 0067 3A       		.uleb128 0x3a
 1639 0068 0B       		.uleb128 0xb
 1640 0069 3B       		.uleb128 0x3b
 1641 006a 0B       		.uleb128 0xb
 1642 006b 49       		.uleb128 0x49
 1643 006c 13       		.uleb128 0x13
 1644 006d 38       		.uleb128 0x38
 1645 006e 0B       		.uleb128 0xb
 1646 006f 00       		.byte	0
 1647 0070 00       		.byte	0
 1648 0071 0A       		.uleb128 0xa
 1649 0072 13       		.uleb128 0x13
 1650 0073 01       		.byte	0x1
 1651 0074 0B       		.uleb128 0xb
 1652 0075 0B       		.uleb128 0xb
 1653 0076 3A       		.uleb128 0x3a
 1654 0077 0B       		.uleb128 0xb
 1655 0078 3B       		.uleb128 0x3b
 1656 0079 0B       		.uleb128 0xb
 1657 007a 01       		.uleb128 0x1
 1658 007b 13       		.uleb128 0x13
 1659 007c 00       		.byte	0
 1660 007d 00       		.byte	0
 1661 007e 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 34


 1662 007f 0D       		.uleb128 0xd
 1663 0080 00       		.byte	0
 1664 0081 03       		.uleb128 0x3
 1665 0082 08       		.uleb128 0x8
 1666 0083 3A       		.uleb128 0x3a
 1667 0084 0B       		.uleb128 0xb
 1668 0085 3B       		.uleb128 0x3b
 1669 0086 0B       		.uleb128 0xb
 1670 0087 49       		.uleb128 0x49
 1671 0088 13       		.uleb128 0x13
 1672 0089 38       		.uleb128 0x38
 1673 008a 0B       		.uleb128 0xb
 1674 008b 00       		.byte	0
 1675 008c 00       		.byte	0
 1676 008d 0C       		.uleb128 0xc
 1677 008e 35       		.uleb128 0x35
 1678 008f 00       		.byte	0
 1679 0090 49       		.uleb128 0x49
 1680 0091 13       		.uleb128 0x13
 1681 0092 00       		.byte	0
 1682 0093 00       		.byte	0
 1683 0094 0D       		.uleb128 0xd
 1684 0095 0F       		.uleb128 0xf
 1685 0096 00       		.byte	0
 1686 0097 0B       		.uleb128 0xb
 1687 0098 0B       		.uleb128 0xb
 1688 0099 49       		.uleb128 0x49
 1689 009a 13       		.uleb128 0x13
 1690 009b 00       		.byte	0
 1691 009c 00       		.byte	0
 1692 009d 0E       		.uleb128 0xe
 1693 009e 2E       		.uleb128 0x2e
 1694 009f 01       		.byte	0x1
 1695 00a0 3F       		.uleb128 0x3f
 1696 00a1 19       		.uleb128 0x19
 1697 00a2 03       		.uleb128 0x3
 1698 00a3 0E       		.uleb128 0xe
 1699 00a4 3A       		.uleb128 0x3a
 1700 00a5 0B       		.uleb128 0xb
 1701 00a6 3B       		.uleb128 0x3b
 1702 00a7 0B       		.uleb128 0xb
 1703 00a8 49       		.uleb128 0x49
 1704 00a9 13       		.uleb128 0x13
 1705 00aa 11       		.uleb128 0x11
 1706 00ab 01       		.uleb128 0x1
 1707 00ac 12       		.uleb128 0x12
 1708 00ad 06       		.uleb128 0x6
 1709 00ae 40       		.uleb128 0x40
 1710 00af 18       		.uleb128 0x18
 1711 00b0 9642     		.uleb128 0x2116
 1712 00b2 19       		.uleb128 0x19
 1713 00b3 01       		.uleb128 0x1
 1714 00b4 13       		.uleb128 0x13
 1715 00b5 00       		.byte	0
 1716 00b6 00       		.byte	0
 1717 00b7 0F       		.uleb128 0xf
 1718 00b8 34       		.uleb128 0x34
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 35


 1719 00b9 00       		.byte	0
 1720 00ba 03       		.uleb128 0x3
 1721 00bb 0E       		.uleb128 0xe
 1722 00bc 3A       		.uleb128 0x3a
 1723 00bd 0B       		.uleb128 0xb
 1724 00be 3B       		.uleb128 0x3b
 1725 00bf 0B       		.uleb128 0xb
 1726 00c0 49       		.uleb128 0x49
 1727 00c1 13       		.uleb128 0x13
 1728 00c2 02       		.uleb128 0x2
 1729 00c3 18       		.uleb128 0x18
 1730 00c4 00       		.byte	0
 1731 00c5 00       		.byte	0
 1732 00c6 10       		.uleb128 0x10
 1733 00c7 2E       		.uleb128 0x2e
 1734 00c8 01       		.byte	0x1
 1735 00c9 3F       		.uleb128 0x3f
 1736 00ca 19       		.uleb128 0x19
 1737 00cb 03       		.uleb128 0x3
 1738 00cc 0E       		.uleb128 0xe
 1739 00cd 3A       		.uleb128 0x3a
 1740 00ce 0B       		.uleb128 0xb
 1741 00cf 3B       		.uleb128 0x3b
 1742 00d0 0B       		.uleb128 0xb
 1743 00d1 27       		.uleb128 0x27
 1744 00d2 19       		.uleb128 0x19
 1745 00d3 49       		.uleb128 0x49
 1746 00d4 13       		.uleb128 0x13
 1747 00d5 11       		.uleb128 0x11
 1748 00d6 01       		.uleb128 0x1
 1749 00d7 12       		.uleb128 0x12
 1750 00d8 06       		.uleb128 0x6
 1751 00d9 40       		.uleb128 0x40
 1752 00da 18       		.uleb128 0x18
 1753 00db 9642     		.uleb128 0x2116
 1754 00dd 19       		.uleb128 0x19
 1755 00de 01       		.uleb128 0x1
 1756 00df 13       		.uleb128 0x13
 1757 00e0 00       		.byte	0
 1758 00e1 00       		.byte	0
 1759 00e2 11       		.uleb128 0x11
 1760 00e3 05       		.uleb128 0x5
 1761 00e4 00       		.byte	0
 1762 00e5 03       		.uleb128 0x3
 1763 00e6 0E       		.uleb128 0xe
 1764 00e7 3A       		.uleb128 0x3a
 1765 00e8 0B       		.uleb128 0xb
 1766 00e9 3B       		.uleb128 0x3b
 1767 00ea 0B       		.uleb128 0xb
 1768 00eb 49       		.uleb128 0x49
 1769 00ec 13       		.uleb128 0x13
 1770 00ed 02       		.uleb128 0x2
 1771 00ee 18       		.uleb128 0x18
 1772 00ef 00       		.byte	0
 1773 00f0 00       		.byte	0
 1774 00f1 12       		.uleb128 0x12
 1775 00f2 2E       		.uleb128 0x2e
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 36


 1776 00f3 01       		.byte	0x1
 1777 00f4 3F       		.uleb128 0x3f
 1778 00f5 19       		.uleb128 0x19
 1779 00f6 03       		.uleb128 0x3
 1780 00f7 0E       		.uleb128 0xe
 1781 00f8 3A       		.uleb128 0x3a
 1782 00f9 0B       		.uleb128 0xb
 1783 00fa 3B       		.uleb128 0x3b
 1784 00fb 0B       		.uleb128 0xb
 1785 00fc 27       		.uleb128 0x27
 1786 00fd 19       		.uleb128 0x19
 1787 00fe 11       		.uleb128 0x11
 1788 00ff 01       		.uleb128 0x1
 1789 0100 12       		.uleb128 0x12
 1790 0101 06       		.uleb128 0x6
 1791 0102 40       		.uleb128 0x40
 1792 0103 18       		.uleb128 0x18
 1793 0104 9642     		.uleb128 0x2116
 1794 0106 19       		.uleb128 0x19
 1795 0107 01       		.uleb128 0x1
 1796 0108 13       		.uleb128 0x13
 1797 0109 00       		.byte	0
 1798 010a 00       		.byte	0
 1799 010b 13       		.uleb128 0x13
 1800 010c 34       		.uleb128 0x34
 1801 010d 00       		.byte	0
 1802 010e 03       		.uleb128 0x3
 1803 010f 0E       		.uleb128 0xe
 1804 0110 3A       		.uleb128 0x3a
 1805 0111 0B       		.uleb128 0xb
 1806 0112 3B       		.uleb128 0x3b
 1807 0113 05       		.uleb128 0x5
 1808 0114 49       		.uleb128 0x49
 1809 0115 13       		.uleb128 0x13
 1810 0116 3F       		.uleb128 0x3f
 1811 0117 19       		.uleb128 0x19
 1812 0118 3C       		.uleb128 0x3c
 1813 0119 19       		.uleb128 0x19
 1814 011a 00       		.byte	0
 1815 011b 00       		.byte	0
 1816 011c 14       		.uleb128 0x14
 1817 011d 34       		.uleb128 0x34
 1818 011e 00       		.byte	0
 1819 011f 03       		.uleb128 0x3
 1820 0120 0E       		.uleb128 0xe
 1821 0121 3A       		.uleb128 0x3a
 1822 0122 0B       		.uleb128 0xb
 1823 0123 3B       		.uleb128 0x3b
 1824 0124 0B       		.uleb128 0xb
 1825 0125 49       		.uleb128 0x49
 1826 0126 13       		.uleb128 0x13
 1827 0127 3F       		.uleb128 0x3f
 1828 0128 19       		.uleb128 0x19
 1829 0129 02       		.uleb128 0x2
 1830 012a 18       		.uleb128 0x18
 1831 012b 00       		.byte	0
 1832 012c 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 37


 1833 012d 15       		.uleb128 0x15
 1834 012e 21       		.uleb128 0x21
 1835 012f 00       		.byte	0
 1836 0130 49       		.uleb128 0x49
 1837 0131 13       		.uleb128 0x13
 1838 0132 2F       		.uleb128 0x2f
 1839 0133 05       		.uleb128 0x5
 1840 0134 00       		.byte	0
 1841 0135 00       		.byte	0
 1842 0136 16       		.uleb128 0x16
 1843 0137 34       		.uleb128 0x34
 1844 0138 00       		.byte	0
 1845 0139 03       		.uleb128 0x3
 1846 013a 08       		.uleb128 0x8
 1847 013b 3A       		.uleb128 0x3a
 1848 013c 0B       		.uleb128 0xb
 1849 013d 3B       		.uleb128 0x3b
 1850 013e 0B       		.uleb128 0xb
 1851 013f 49       		.uleb128 0x49
 1852 0140 13       		.uleb128 0x13
 1853 0141 3F       		.uleb128 0x3f
 1854 0142 19       		.uleb128 0x19
 1855 0143 02       		.uleb128 0x2
 1856 0144 18       		.uleb128 0x18
 1857 0145 00       		.byte	0
 1858 0146 00       		.byte	0
 1859 0147 00       		.byte	0
 1860              		.section	.debug_aranges,"",%progbits
 1861 0000 34000000 		.4byte	0x34
 1862 0004 0200     		.2byte	0x2
 1863 0006 00000000 		.4byte	.Ldebug_info0
 1864 000a 04       		.byte	0x4
 1865 000b 00       		.byte	0
 1866 000c 0000     		.2byte	0
 1867 000e 0000     		.2byte	0
 1868 0010 00000000 		.4byte	.LFB64
 1869 0014 B4020000 		.4byte	.LFE64-.LFB64
 1870 0018 00000000 		.4byte	.LFB65
 1871 001c 50000000 		.4byte	.LFE65-.LFB65
 1872 0020 00000000 		.4byte	.LFB66
 1873 0024 00020000 		.4byte	.LFE66-.LFB66
 1874 0028 00000000 		.4byte	.LFB67
 1875 002c 40000000 		.4byte	.LFE67-.LFB67
 1876 0030 00000000 		.4byte	0
 1877 0034 00000000 		.4byte	0
 1878              		.section	.debug_ranges,"",%progbits
 1879              	.Ldebug_ranges0:
 1880 0000 00000000 		.4byte	.LFB64
 1881 0004 B4020000 		.4byte	.LFE64
 1882 0008 00000000 		.4byte	.LFB65
 1883 000c 50000000 		.4byte	.LFE65
 1884 0010 00000000 		.4byte	.LFB66
 1885 0014 00020000 		.4byte	.LFE66
 1886 0018 00000000 		.4byte	.LFB67
 1887 001c 40000000 		.4byte	.LFE67
 1888 0020 00000000 		.4byte	0
 1889 0024 00000000 		.4byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 38


 1890              		.section	.debug_line,"",%progbits
 1891              	.Ldebug_line0:
 1892 0000 3F020000 		.section	.debug_str,"MS",%progbits,1
 1892      02008B01 
 1892      00000201 
 1892      FB0E0D00 
 1892      01010101 
 1893              	.LASF31:
 1894 0000 76616C69 		.ascii	"valid\000"
 1894      6400
 1895              	.LASF37:
 1896 0006 6D6F6465 		.ascii	"model_id\000"
 1896      6C5F6964 
 1896      00
 1897              	.LASF68:
 1898 000f 766F6C74 		.ascii	"voltages\000"
 1898      61676573 
 1898      00
 1899              	.LASF36:
 1900 0018 73696D5F 		.ascii	"sim_id\000"
 1900      696400
 1901              	.LASF26:
 1902 001f 766F6C74 		.ascii	"voltage_solar\000"
 1902      6167655F 
 1902      736F6C61 
 1902      7200
 1903              	.LASF65:
 1904 002d 7379735F 		.ascii	"sys_settings_t\000"
 1904      73657474 
 1904      696E6773 
 1904      5F7400
 1905              	.LASF15:
 1906 003c 666C6F61 		.ascii	"float32\000"
 1906      74333200 
 1907              	.LASF56:
 1908 0044 63757272 		.ascii	"currentCountDownValue\000"
 1908      656E7443 
 1908      6F756E74 
 1908      446F776E 
 1908      56616C75 
 1909              	.LASF55:
 1910 005a 636F756E 		.ascii	"countDownValue\000"
 1910      74446F77 
 1910      6E56616C 
 1910      756500
 1911              	.LASF72:
 1912 0069 70726576 		.ascii	"prev_pos\000"
 1912      5F706F73 
 1912      00
 1913              	.LASF85:
 1914 0072 68747470 		.ascii	"http_request\000"
 1914      5F726571 
 1914      75657374 
 1914      00
 1915              	.LASF20:
 1916 007f 73697A65 		.ascii	"sizetype\000"
 1916      74797065 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 39


 1916      00
 1917              	.LASF63:
 1918 0088 65705F68 		.ascii	"ep_host\000"
 1918      6F737400 
 1919              	.LASF95:
 1920 0090 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1920      43313120 
 1920      352E342E 
 1920      31203230 
 1920      31363036 
 1921 00c3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1921      20726576 
 1921      6973696F 
 1921      6E203233 
 1921      37373135 
 1922 00f6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1922      66756E63 
 1922      74696F6E 
 1922      2D736563 
 1922      74696F6E 
 1923              	.LASF80:
 1924 011e 64617461 		.ascii	"data\000"
 1924      00
 1925              	.LASF28:
 1926 0123 766F6C74 		.ascii	"voltage_pressure\000"
 1926      6167655F 
 1926      70726573 
 1926      73757265 
 1926      00
 1927              	.LASF61:
 1928 0134 63686970 		.ascii	"chip_uniqueId\000"
 1928      5F756E69 
 1928      71756549 
 1928      6400
 1929              	.LASF42:
 1930 0142 65636E6F 		.ascii	"ecno\000"
 1930      00
 1931              	.LASF2:
 1932 0147 73686F72 		.ascii	"short int\000"
 1932      7420696E 
 1932      7400
 1933              	.LASF33:
 1934 0151 76616C75 		.ascii	"value\000"
 1934      6500
 1935              	.LASF25:
 1936 0157 766F6C74 		.ascii	"voltage_battery\000"
 1936      6167655F 
 1936      62617474 
 1936      65727900 
 1937              	.LASF78:
 1938 0167 64617461 		.ascii	"dataPointsInStack\000"
 1938      506F696E 
 1938      7473496E 
 1938      53746163 
 1938      6B00
 1939              	.LASF11:
 1940 0179 75696E74 		.ascii	"uint8\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 40


 1940      3800
 1941              	.LASF41:
 1942 017f 72736370 		.ascii	"rscp\000"
 1942      00
 1943              	.LASF13:
 1944 0184 696E7431 		.ascii	"int16\000"
 1944      3600
 1945              	.LASF34:
 1946 018a 74696D65 		.ascii	"timeStamp\000"
 1946      5374616D 
 1946      7000
 1947              	.LASF29:
 1948 0194 766F6C74 		.ascii	"voltage_valve_pos\000"
 1948      6167655F 
 1948      76616C76 
 1948      655F706F 
 1948      7300
 1949              	.LASF96:
 1950 01a6 76616C76 		.ascii	"valve.c\000"
 1950      652E6300 
 1951              	.LASF16:
 1952 01ae 666C6F61 		.ascii	"float\000"
 1952      7400
 1953              	.LASF6:
 1954 01b4 6C6F6E67 		.ascii	"long long int\000"
 1954      206C6F6E 
 1954      6720696E 
 1954      7400
 1955              	.LASF90:
 1956 01c2 616C6172 		.ascii	"alarmMeasure\000"
 1956      6D4D6561 
 1956      73757265 
 1956      00
 1957              	.LASF18:
 1958 01cf 63686172 		.ascii	"char\000"
 1958      00
 1959              	.LASF23:
 1960 01d4 72656173 		.ascii	"reason\000"
 1960      6F6E00
 1961              	.LASF4:
 1962 01db 6C6F6E67 		.ascii	"long int\000"
 1962      20696E74 
 1962      00
 1963              	.LASF77:
 1964 01e4 62756666 		.ascii	"buffer_overflow\000"
 1964      65725F6F 
 1964      76657266 
 1964      6C6F7700 
 1965              	.LASF60:
 1966 01f4 6D6F6465 		.ascii	"modem_info\000"
 1966      6D5F696E 
 1966      666F00
 1967              	.LASF97:
 1968 01ff 433A5C55 		.ascii	"C:\\Users\\dantz\\Documents\\notoriOS\\notoriOS\\no"
 1968      73657273 
 1968      5C64616E 
 1968      747A5C44 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 41


 1968      6F63756D 
 1969 022c 746F7269 		.ascii	"toriOS.cydsn\000"
 1969      4F532E63 
 1969      7964736E 
 1969      00
 1970              	.LASF69:
 1971 0239 76616C76 		.ascii	"valve_test\000"
 1971      655F7465 
 1971      737400
 1972              	.LASF59:
 1973 0244 616C6172 		.ascii	"alarm\000"
 1973      6D00
 1974              	.LASF50:
 1975 024a 6D656173 		.ascii	"measure_time\000"
 1975      7572655F 
 1975      74696D65 
 1975      00
 1976              	.LASF74:
 1977 0257 706F7369 		.ascii	"position_desired\000"
 1977      74696F6E 
 1977      5F646573 
 1977      69726564 
 1977      00
 1978              	.LASF92:
 1979 0268 616C6172 		.ascii	"alarmSync\000"
 1979      6D53796E 
 1979      6300
 1980              	.LASF19:
 1981 0272 6C6F6E67 		.ascii	"long double\000"
 1981      20646F75 
 1981      626C6500 
 1982              	.LASF84:
 1983 027e 75706461 		.ascii	"updatable_parameters\000"
 1983      7461626C 
 1983      655F7061 
 1983      72616D65 
 1983      74657273 
 1984              	.LASF1:
 1985 0293 756E7369 		.ascii	"unsigned char\000"
 1985      676E6564 
 1985      20636861 
 1985      7200
 1986              	.LASF44:
 1987 02a1 72737270 		.ascii	"rsrp\000"
 1987      00
 1988              	.LASF82:
 1989 02a6 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 1989      6D5F7374 
 1989      6172745F 
 1989      74696D65 
 1989      5F737461 
 1990              	.LASF79:
 1991 02bd 64617461 		.ascii	"dataPointsInStackDesired\000"
 1991      506F696E 
 1991      7473496E 
 1991      53746163 
 1991      6B446573 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 42


 1992              	.LASF81:
 1993 02d6 6D6F6465 		.ascii	"modem_state\000"
 1993      6D5F7374 
 1993      61746500 
 1994              	.LASF0:
 1995 02e2 7369676E 		.ascii	"signed char\000"
 1995      65642063 
 1995      68617200 
 1996              	.LASF70:
 1997 02ee 72656164 		.ascii	"read_Valve_pos\000"
 1997      5F56616C 
 1997      76655F70 
 1997      6F7300
 1998              	.LASF7:
 1999 02fd 6C6F6E67 		.ascii	"long long unsigned int\000"
 1999      206C6F6E 
 1999      6720756E 
 1999      7369676E 
 1999      65642069 
 2000              	.LASF89:
 2001 0314 73797374 		.ascii	"system_settings\000"
 2001      656D5F73 
 2001      65747469 
 2001      6E677300 
 2002              	.LASF8:
 2003 0324 756E7369 		.ascii	"unsigned int\000"
 2003      676E6564 
 2003      20696E74 
 2003      00
 2004              	.LASF35:
 2005 0331 6B65795F 		.ascii	"key_value_t\000"
 2005      76616C75 
 2005      655F7400 
 2006              	.LASF40:
 2007 033d 72786C65 		.ascii	"rxlev\000"
 2007      7600
 2008              	.LASF51:
 2009 0343 73796E63 		.ascii	"sync_time\000"
 2009      5F74696D 
 2009      6500
 2010              	.LASF83:
 2011 034d 6D6F6465 		.ascii	"modem_stats\000"
 2011      6D5F7374 
 2011      61747300 
 2012              	.LASF91:
 2013 0359 74696D65 		.ascii	"timeToMeasure\000"
 2013      546F4D65 
 2013      61737572 
 2013      6500
 2014              	.LASF54:
 2015 0367 75706461 		.ascii	"updatable_parameters_t\000"
 2015      7461626C 
 2015      655F7061 
 2015      72616D65 
 2015      74657273 
 2016              	.LASF49:
 2017 037e 73696D5F 		.ascii	"sim_type\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 43


 2017      74797065 
 2017      00
 2018              	.LASF62:
 2019 0387 7379735F 		.ascii	"sys_info_t\000"
 2019      696E666F 
 2019      5F7400
 2020              	.LASF3:
 2021 0392 73686F72 		.ascii	"short unsigned int\000"
 2021      7420756E 
 2021      7369676E 
 2021      65642069 
 2021      6E7400
 2022              	.LASF45:
 2023 03a5 74696D65 		.ascii	"time_to_network_connect\000"
 2023      5F746F5F 
 2023      6E657477 
 2023      6F726B5F 
 2023      636F6E6E 
 2024              	.LASF22:
 2025 03bd 73746174 		.ascii	"status\000"
 2025      757300
 2026              	.LASF88:
 2027 03c4 73797374 		.ascii	"system_info\000"
 2027      656D5F69 
 2027      6E666F00 
 2028              	.LASF46:
 2029 03d0 74696D65 		.ascii	"time_to_acquire_ip\000"
 2029      5F746F5F 
 2029      61637175 
 2029      6972655F 
 2029      697000
 2030              	.LASF24:
 2031 03e3 74657374 		.ascii	"test_t\000"
 2031      5F7400
 2032              	.LASF98:
 2033 03ea 6D6F7665 		.ascii	"move_valve\000"
 2033      5F76616C 
 2033      766500
 2034              	.LASF32:
 2035 03f5 766F6C74 		.ascii	"voltage_t\000"
 2035      6167655F 
 2035      7400
 2036              	.LASF10:
 2037 03ff 696E7433 		.ascii	"int32_t\000"
 2037      325F7400 
 2038              	.LASF47:
 2039 0407 6D6F6465 		.ascii	"modem_stats_t\000"
 2039      6D5F7374 
 2039      6174735F 
 2039      7400
 2040              	.LASF30:
 2041 0415 766F6C74 		.ascii	"voltage_valve_pot_power\000"
 2041      6167655F 
 2041      76616C76 
 2041      655F706F 
 2041      745F706F 
 2042              	.LASF53:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 44


 2043 042d 5F426F6F 		.ascii	"_Bool\000"
 2043      6C00
 2044              	.LASF94:
 2045 0433 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2045      546F5379 
 2045      636E5265 
 2045      6D6F7465 
 2045      50617261 
 2046              	.LASF66:
 2047 044a 74657374 		.ascii	"test\000"
 2047      00
 2048              	.LASF43:
 2049 044f 72737271 		.ascii	"rsrq\000"
 2049      00
 2050              	.LASF12:
 2051 0454 75696E74 		.ascii	"uint16\000"
 2051      313600
 2052              	.LASF87:
 2053 045b 68747470 		.ascii	"http_route\000"
 2053      5F726F75 
 2053      746500
 2054              	.LASF5:
 2055 0466 6C6F6E67 		.ascii	"long unsigned int\000"
 2055      20756E73 
 2055      69676E65 
 2055      6420696E 
 2055      7400
 2056              	.LASF14:
 2057 0478 696E7433 		.ascii	"int32\000"
 2057      3200
 2058              	.LASF17:
 2059 047e 646F7562 		.ascii	"double\000"
 2059      6C6500
 2060              	.LASF76:
 2061 0485 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2061      52784275 
 2061      66666572 
 2061      00
 2062              	.LASF52:
 2063 0492 64656275 		.ascii	"debug_level\000"
 2063      675F6C65 
 2063      76656C00 
 2064              	.LASF39:
 2065 049e 6D6F6465 		.ascii	"modem_info_t\000"
 2065      6D5F696E 
 2065      666F5F74 
 2065      00
 2066              	.LASF57:
 2067 04ab 636F756E 		.ascii	"countDownType\000"
 2067      74446F77 
 2067      6E547970 
 2067      6500
 2068              	.LASF75:
 2069 04b9 6C657665 		.ascii	"level_reading\000"
 2069      6C5F7265 
 2069      6164696E 
 2069      6700
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccxmNp1h.s 			page 45


 2070              	.LASF9:
 2071 04c7 5F5F696E 		.ascii	"__int32_t\000"
 2071      7433325F 
 2071      7400
 2072              	.LASF58:
 2073 04d1 636F756E 		.ascii	"countDownResetCondition\000"
 2073      74446F77 
 2073      6E526573 
 2073      6574436F 
 2073      6E646974 
 2074              	.LASF38:
 2075 04e9 696D6569 		.ascii	"imei\000"
 2075      00
 2076              	.LASF73:
 2077 04ee 76616C76 		.ascii	"valve_level_controller\000"
 2077      655F6C65 
 2077      76656C5F 
 2077      636F6E74 
 2077      726F6C6C 
 2078              	.LASF21:
 2079 0505 74657374 		.ascii	"test_name\000"
 2079      5F6E616D 
 2079      6500
 2080              	.LASF67:
 2081 050f 706F7369 		.ascii	"positions\000"
 2081      74696F6E 
 2081      7300
 2082              	.LASF64:
 2083 0519 65705F70 		.ascii	"ep_port\000"
 2083      6F727400 
 2084              	.LASF86:
 2085 0521 68747470 		.ascii	"http_body\000"
 2085      5F626F64 
 2085      7900
 2086              	.LASF48:
 2087 052b 6E6F6465 		.ascii	"node_type\000"
 2087      5F747970 
 2087      6500
 2088              	.LASF27:
 2089 0535 766F6C74 		.ascii	"voltage_charge_current\000"
 2089      6167655F 
 2089      63686172 
 2089      67655F63 
 2089      75727265 
 2090              	.LASF93:
 2091 054c 74696D65 		.ascii	"timeToSync\000"
 2091      546F5379 
 2091      6E6300
 2092              	.LASF71:
 2093 0557 72656164 		.ascii	"readings\000"
 2093      696E6773 
 2093      00
 2094              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
