ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"valve.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.section	.rodata
  44              		.align	2
  45              	.LC0:
  46 0000 54455354 		.ascii	"TEST_VALVE\000"
  46      5F56414C 
  46      564500
  47              		.global	__aeabi_f2d
  48 000b 00       		.align	2
  49              	.LC1:
  50 000c 6F70656E 		.ascii	"open_voltage:%f:::closed_voltage:%f:::pot_voltage:%"
  50      5F766F6C 
  50      74616765 
  50      3A25663A 
  50      3A3A636C 
  51 003f 663A3A3A 		.ascii	"f::::positions:%f:%f:%f:%f:%f:%f:%f:%f\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 2


  51      3A706F73 
  51      6974696F 
  51      6E733A25 
  51      663A2566 
  52 0066 0000     		.align	2
  53              	.LC2:
  54 0068 76616C76 		.ascii	"valve jammed or battery dead\000"
  54      65206A61 
  54      6D6D6564 
  54      206F7220 
  54      62617474 
  55              		.section	.text.valve_test,"ax",%progbits
  56              		.align	2
  57              		.global	valve_test
  58              		.thumb
  59              		.thumb_func
  60              		.type	valve_test, %function
  61              	valve_test:
  62              	.LFB64:
  63              		.file 1 "valve.c"
   1:valve.c       **** #include "valve.h"
   2:valve.c       **** #include "notoriOS.h"
   3:valve.c       **** 
   4:valve.c       **** // throughout, the percentages recorded in reference to the valve position ought to be
   5:valve.c       **** // percent open-ness, not percent closed
   6:valve.c       **** 
   7:valve.c       **** test_t valve_test(){
  64              		.loc 1 7 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 768
  67              		@ frame_needed = 1, uses_anonymous_args = 0
  68 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
  69              		.cfi_def_cfa_offset 32
  70              		.cfi_offset 4, -32
  71              		.cfi_offset 5, -28
  72              		.cfi_offset 7, -24
  73              		.cfi_offset 8, -20
  74              		.cfi_offset 9, -16
  75              		.cfi_offset 10, -12
  76              		.cfi_offset 11, -8
  77              		.cfi_offset 14, -4
  78 0004 ADF5567D 		sub	sp, sp, #856
  79              		.cfi_def_cfa_offset 888
  80 0008 16AF     		add	r7, sp, #88
  81              		.cfi_def_cfa 7, 800
  82 000a 07F15C03 		add	r3, r7, #92
  83 000e 1860     		str	r0, [r3]
   8:valve.c       **** 
   9:valve.c       ****     // activate 12V battery
  10:valve.c       ****     Pressure_Voltage_Enable_Write(ON);
  84              		.loc 1 10 0
  85 0010 0120     		movs	r0, #1
  86 0012 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  11:valve.c       **** 
  12:valve.c       ****     
  13:valve.c       ****      
  14:valve.c       ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 3


  15:valve.c       ****     test.status = 0; // set test status to zero
  87              		.loc 1 15 0
  88 0016 07F5B073 		add	r3, r7, #352
  89 001a 0022     		movs	r2, #0
  90 001c 83F88020 		strb	r2, [r3, #128]
  16:valve.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_VALVE");
  91              		.loc 1 16 0
  92 0020 07F5B073 		add	r3, r7, #352
  93 0024 9F4A     		ldr	r2, .L5
  94 0026 07CA     		ldmia	r2, {r0, r1, r2}
  95 0028 03C3     		stmia	r3!, {r0, r1}
  96 002a 1A80     		strh	r2, [r3]	@ movhi
  97 002c 0233     		adds	r3, r3, #2
  98 002e 120C     		lsrs	r2, r2, #16
  99 0030 1A70     		strb	r2, [r3]
  17:valve.c       **** 
  18:valve.c       ****     float32 positions[8];
  19:valve.c       ****     
  20:valve.c       ****     voltage_t voltages[8];
  21:valve.c       ****     
  22:valve.c       ****     // all the way open
  23:valve.c       ****     move_valve(1);
 100              		.loc 1 23 0
 101 0032 4FF07E50 		mov	r0, #1065353216
 102 0036 FFF7FEFF 		bl	move_valve
  24:valve.c       ****     // take a position reading to verify that it's all the way open (later)
  25:valve.c       ****     positions[0] = read_Valve_pos();
 103              		.loc 1 25 0
 104 003a FFF7FEFF 		bl	read_Valve_pos
 105 003e 0246     		mov	r2, r0
 106 0040 07F5A073 		add	r3, r7, #320
 107 0044 1A60     		str	r2, [r3]	@ float
  26:valve.c       ****     voltages[0] = voltage_take_readings();
 108              		.loc 1 26 0
 109 0046 07F16004 		add	r4, r7, #96
 110 004a 07F13803 		add	r3, r7, #56
 111 004e 1846     		mov	r0, r3
 112 0050 FFF7FEFF 		bl	voltage_take_readings
 113 0054 07F13803 		add	r3, r7, #56
 114 0058 1D46     		mov	r5, r3
 115 005a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 116 005c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 117 005e 95E80700 		ldmia	r5, {r0, r1, r2}
 118 0062 84E80700 		stmia	r4, {r0, r1, r2}
  27:valve.c       ****     // do the same for closed
  28:valve.c       ****     test.status = move_valve(0);
 119              		.loc 1 28 0
 120 0066 4FF00000 		mov	r0, #0
 121 006a FFF7FEFF 		bl	move_valve
 122 006e 0346     		mov	r3, r0
 123 0070 1A46     		mov	r2, r3
 124 0072 07F5B073 		add	r3, r7, #352
 125 0076 83F88020 		strb	r2, [r3, #128]
  29:valve.c       ****     // take a position reading to verify that it's all the way closed (later)
  30:valve.c       ****     positions[1] = read_Valve_pos();
 126              		.loc 1 30 0
 127 007a FFF7FEFF 		bl	read_Valve_pos
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 4


 128 007e 0246     		mov	r2, r0
 129 0080 07F5A073 		add	r3, r7, #320
 130 0084 5A60     		str	r2, [r3, #4]	@ float
  31:valve.c       ****     voltages[1] = voltage_take_readings();
 131              		.loc 1 31 0
 132 0086 07F16004 		add	r4, r7, #96
 133 008a 07F13803 		add	r3, r7, #56
 134 008e 1846     		mov	r0, r3
 135 0090 FFF7FEFF 		bl	voltage_take_readings
 136 0094 07F13803 		add	r3, r7, #56
 137 0098 1C34     		adds	r4, r4, #28
 138 009a 1D46     		mov	r5, r3
 139 009c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 140 009e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 141 00a0 95E80700 		ldmia	r5, {r0, r1, r2}
 142 00a4 84E80700 		stmia	r4, {r0, r1, r2}
  32:valve.c       ****     if (test.status){ // don't do this if it's jammed (didn't close successfully)
 143              		.loc 1 32 0
 144 00a8 07F5B073 		add	r3, r7, #352
 145 00ac 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 146 00b0 002B     		cmp	r3, #0
 147 00b2 3AD0     		beq	.L2
  33:valve.c       ****         move_valve(0.125);
 148              		.loc 1 33 0
 149 00b4 4FF07850 		mov	r0, #1040187392
 150 00b8 FFF7FEFF 		bl	move_valve
  34:valve.c       ****         positions[2] = read_Valve_pos();
 151              		.loc 1 34 0
 152 00bc FFF7FEFF 		bl	read_Valve_pos
 153 00c0 0246     		mov	r2, r0
 154 00c2 07F5A073 		add	r3, r7, #320
 155 00c6 9A60     		str	r2, [r3, #8]	@ float
  35:valve.c       ****         
  36:valve.c       ****         move_valve(0.25);
 156              		.loc 1 36 0
 157 00c8 4FF07A50 		mov	r0, #1048576000
 158 00cc FFF7FEFF 		bl	move_valve
  37:valve.c       ****         positions[3] = read_Valve_pos();
 159              		.loc 1 37 0
 160 00d0 FFF7FEFF 		bl	read_Valve_pos
 161 00d4 0246     		mov	r2, r0
 162 00d6 07F5A073 		add	r3, r7, #320
 163 00da DA60     		str	r2, [r3, #12]	@ float
  38:valve.c       ****         
  39:valve.c       ****         move_valve(0.375);
 164              		.loc 1 39 0
 165 00dc 4FF07B50 		mov	r0, #1052770304
 166 00e0 FFF7FEFF 		bl	move_valve
  40:valve.c       ****         positions[4] = read_Valve_pos();
 167              		.loc 1 40 0
 168 00e4 FFF7FEFF 		bl	read_Valve_pos
 169 00e8 0246     		mov	r2, r0
 170 00ea 07F5A073 		add	r3, r7, #320
 171 00ee 1A61     		str	r2, [r3, #16]	@ float
  41:valve.c       **** 
  42:valve.c       ****         move_valve(0.5);
 172              		.loc 1 42 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 5


 173 00f0 4FF07C50 		mov	r0, #1056964608
 174 00f4 FFF7FEFF 		bl	move_valve
  43:valve.c       ****         positions[5] = read_Valve_pos();
 175              		.loc 1 43 0
 176 00f8 FFF7FEFF 		bl	read_Valve_pos
 177 00fc 0246     		mov	r2, r0
 178 00fe 07F5A073 		add	r3, r7, #320
 179 0102 5A61     		str	r2, [r3, #20]	@ float
  44:valve.c       **** 
  45:valve.c       ****         move_valve(0.675);
 180              		.loc 1 45 0
 181 0104 6848     		ldr	r0, .L5+4
 182 0106 FFF7FEFF 		bl	move_valve
  46:valve.c       ****         positions[6] = read_Valve_pos();
 183              		.loc 1 46 0
 184 010a FFF7FEFF 		bl	read_Valve_pos
 185 010e 0246     		mov	r2, r0
 186 0110 07F5A073 		add	r3, r7, #320
 187 0114 9A61     		str	r2, [r3, #24]	@ float
  47:valve.c       **** 
  48:valve.c       ****         move_valve(0.75);
 188              		.loc 1 48 0
 189 0116 4FF07D50 		mov	r0, #1061158912
 190 011a FFF7FEFF 		bl	move_valve
  49:valve.c       ****         positions[7] = read_Valve_pos();
 191              		.loc 1 49 0
 192 011e FFF7FEFF 		bl	read_Valve_pos
 193 0122 0246     		mov	r2, r0
 194 0124 07F5A073 		add	r3, r7, #320
 195 0128 DA61     		str	r2, [r3, #28]	@ float
 196              	.L2:
  50:valve.c       ****     }
  51:valve.c       **** 
  52:valve.c       ****     // in test reason report the sequence of positions
  53:valve.c       ****     snprintf(test.reason,sizeof(test.reason),"open_voltage:%f:::closed_voltage:%f:::pot_voltage:%f:
  54:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 197              		.loc 1 54 0
 198 012a 07F16003 		add	r3, r7, #96
 199 012e 1B69     		ldr	r3, [r3, #16]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 200              		.loc 1 53 0
 201 0130 1846     		mov	r0, r3
 202 0132 FFF7FEFF 		bl	__aeabi_f2d
 203 0136 C7E90C01 		strd	r0, [r7, #48]
 204              		.loc 1 54 0
 205 013a 07F16003 		add	r3, r7, #96
 206 013e DB6A     		ldr	r3, [r3, #44]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 207              		.loc 1 53 0
 208 0140 1846     		mov	r0, r3
 209 0142 FFF7FEFF 		bl	__aeabi_f2d
 210 0146 C7E90A01 		strd	r0, [r7, #40]
 211              		.loc 1 54 0
 212 014a 07F16003 		add	r3, r7, #96
 213 014e 5B69     		ldr	r3, [r3, #20]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 214              		.loc 1 53 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 6


 215 0150 1846     		mov	r0, r3
 216 0152 FFF7FEFF 		bl	__aeabi_f2d
 217 0156 C7E90801 		strd	r0, [r7, #32]
  55:valve.c       ****         positions[0],positions[1],positions[2],positions[3],
 218              		.loc 1 55 0
 219 015a 07F5A073 		add	r3, r7, #320
 220 015e 1B68     		ldr	r3, [r3]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 221              		.loc 1 53 0
 222 0160 1846     		mov	r0, r3
 223 0162 FFF7FEFF 		bl	__aeabi_f2d
 224 0166 C7E90601 		strd	r0, [r7, #24]
 225              		.loc 1 55 0
 226 016a 07F5A073 		add	r3, r7, #320
 227 016e 5B68     		ldr	r3, [r3, #4]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 228              		.loc 1 53 0
 229 0170 1846     		mov	r0, r3
 230 0172 FFF7FEFF 		bl	__aeabi_f2d
 231 0176 C7E90401 		strd	r0, [r7, #16]
 232              		.loc 1 55 0
 233 017a 07F5A073 		add	r3, r7, #320
 234 017e 9B68     		ldr	r3, [r3, #8]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 235              		.loc 1 53 0
 236 0180 1846     		mov	r0, r3
 237 0182 FFF7FEFF 		bl	__aeabi_f2d
 238 0186 C7E90201 		strd	r0, [r7, #8]
 239              		.loc 1 55 0
 240 018a 07F5A073 		add	r3, r7, #320
 241 018e DB68     		ldr	r3, [r3, #12]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 242              		.loc 1 53 0
 243 0190 1846     		mov	r0, r3
 244 0192 FFF7FEFF 		bl	__aeabi_f2d
 245 0196 C7E90001 		strd	r0, [r7]
  56:valve.c       ****         positions[4],positions[5],positions[6],positions[7]
 246              		.loc 1 56 0
 247 019a 07F5A073 		add	r3, r7, #320
 248 019e 1B69     		ldr	r3, [r3, #16]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 249              		.loc 1 53 0
 250 01a0 1846     		mov	r0, r3
 251 01a2 FFF7FEFF 		bl	__aeabi_f2d
 252 01a6 8246     		mov	r10, r0
 253 01a8 8B46     		mov	fp, r1
 254              		.loc 1 56 0
 255 01aa 07F5A073 		add	r3, r7, #320
 256 01ae 5B69     		ldr	r3, [r3, #20]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 257              		.loc 1 53 0
 258 01b0 1846     		mov	r0, r3
 259 01b2 FFF7FEFF 		bl	__aeabi_f2d
 260 01b6 8046     		mov	r8, r0
 261 01b8 8946     		mov	r9, r1
 262              		.loc 1 56 0
 263 01ba 07F5A073 		add	r3, r7, #320
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 7


 264 01be 9B69     		ldr	r3, [r3, #24]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 265              		.loc 1 53 0
 266 01c0 1846     		mov	r0, r3
 267 01c2 FFF7FEFF 		bl	__aeabi_f2d
 268 01c6 0446     		mov	r4, r0
 269 01c8 0D46     		mov	r5, r1
 270              		.loc 1 56 0
 271 01ca 07F5A073 		add	r3, r7, #320
 272 01ce DB69     		ldr	r3, [r3, #28]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 273              		.loc 1 53 0
 274 01d0 1846     		mov	r0, r3
 275 01d2 FFF7FEFF 		bl	__aeabi_f2d
 276 01d6 0A46     		mov	r2, r1
 277 01d8 0146     		mov	r1, r0
 278 01da 07F5B073 		add	r3, r7, #352
 279 01de 8133     		adds	r3, r3, #129
 280 01e0 CDE91412 		strd	r1, [sp, #80]
 281 01e4 CDE91245 		strd	r4, [sp, #72]
 282 01e8 CDE91089 		strd	r8, [sp, #64]
 283 01ec CDE90EAB 		strd	r10, [sp, #56]
 284 01f0 D7E90012 		ldrd	r1, [r7]
 285 01f4 CDE90C12 		strd	r1, [sp, #48]
 286 01f8 D7E90212 		ldrd	r1, [r7, #8]
 287 01fc CDE90A12 		strd	r1, [sp, #40]
 288 0200 D7E90412 		ldrd	r1, [r7, #16]
 289 0204 CDE90812 		strd	r1, [sp, #32]
 290 0208 D7E90612 		ldrd	r1, [r7, #24]
 291 020c CDE90612 		strd	r1, [sp, #24]
 292 0210 D7E90812 		ldrd	r1, [r7, #32]
 293 0214 CDE90412 		strd	r1, [sp, #16]
 294 0218 D7E90A12 		ldrd	r1, [r7, #40]
 295 021c CDE90212 		strd	r1, [sp, #8]
 296 0220 D7E90C12 		ldrd	r1, [r7, #48]
 297 0224 CDE90012 		strd	r1, [sp]
 298 0228 204A     		ldr	r2, .L5+8
 299 022a 4FF48071 		mov	r1, #256
 300 022e 1846     		mov	r0, r3
 301 0230 FFF7FEFF 		bl	snprintf
  57:valve.c       ****     );
  58:valve.c       ****    
  59:valve.c       ****     
  60:valve.c       ****     if (!test.status){
 302              		.loc 1 60 0
 303 0234 07F5B073 		add	r3, r7, #352
 304 0238 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 305 023c 002B     		cmp	r3, #0
 306 023e 10D1     		bne	.L3
  61:valve.c       ****         snprintf(test.reason,sizeof(test.reason),"valve jammed or battery dead" );
 307              		.loc 1 61 0
 308 0240 07F5B073 		add	r3, r7, #352
 309 0244 8133     		adds	r3, r3, #129
 310 0246 1A4A     		ldr	r2, .L5+12
 311 0248 1D46     		mov	r5, r3
 312 024a 1446     		mov	r4, r2
 313 024c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 8


 314 024e 2860     		str	r0, [r5]	@ unaligned
 315 0250 6960     		str	r1, [r5, #4]	@ unaligned
 316 0252 AA60     		str	r2, [r5, #8]	@ unaligned
 317 0254 EB60     		str	r3, [r5, #12]	@ unaligned
 318 0256 07CC     		ldmia	r4!, {r0, r1, r2}
 319 0258 2861     		str	r0, [r5, #16]	@ unaligned
 320 025a 6961     		str	r1, [r5, #20]	@ unaligned
 321 025c AA61     		str	r2, [r5, #24]	@ unaligned
 322 025e 2378     		ldrb	r3, [r4]
 323 0260 2B77     		strb	r3, [r5, #28]
 324              	.L3:
  62:valve.c       ****     }
  63:valve.c       ****     // deactivate 12V battery
  64:valve.c       ****     Pressure_Voltage_Enable_Write(OFF);
 325              		.loc 1 64 0
 326 0262 0020     		movs	r0, #0
 327 0264 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  65:valve.c       ****     
  66:valve.c       ****     
  67:valve.c       ****     //just for now since I can't get the modem to error in the way I want it to
  68:valve.c       ****     valve_level_controller(level_sensor_take_reading().level_reading);
 328              		.loc 1 68 0
 329 0268 07F53973 		add	r3, r7, #740
 330 026c 1846     		mov	r0, r3
 331 026e FFF7FEFF 		bl	level_sensor_take_reading
 332 0272 B7F9FA32 		ldrsh	r3, [r7, #762]
 333 0276 1846     		mov	r0, r3
 334 0278 FFF7FEFF 		bl	valve_level_controller
  69:valve.c       ****     
  70:valve.c       ****     return test;
 335              		.loc 1 70 0
 336 027c 07F15C03 		add	r3, r7, #92
 337 0280 1A68     		ldr	r2, [r3]
 338 0282 07F5B073 		add	r3, r7, #352
 339 0286 1046     		mov	r0, r2
 340 0288 1946     		mov	r1, r3
 341 028a 40F28113 		movw	r3, #385
 342 028e 1A46     		mov	r2, r3
 343 0290 FFF7FEFF 		bl	memcpy
  71:valve.c       **** 
  72:valve.c       **** }
 344              		.loc 1 72 0
 345 0294 07F15C03 		add	r3, r7, #92
 346 0298 1868     		ldr	r0, [r3]
 347 029a 07F54077 		add	r7, r7, #768
 348              		.cfi_def_cfa_offset 32
 349 029e BD46     		mov	sp, r7
 350              		.cfi_def_cfa_register 13
 351              		@ sp needed
 352 02a0 BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 353              	.L6:
 354              		.align	2
 355              	.L5:
 356 02a4 00000000 		.word	.LC0
 357 02a8 CDCC2C3F 		.word	1059900621
 358 02ac 0C000000 		.word	.LC1
 359 02b0 68000000 		.word	.LC2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 9


 360              		.cfi_endproc
 361              	.LFE64:
 362              		.size	valve_test, .-valve_test
 363              		.global	__aeabi_fdiv
 364              		.global	__aeabi_ddiv
 365              		.global	__aeabi_d2f
 366              		.section	.text.read_Valve_pos,"ax",%progbits
 367              		.align	2
 368              		.global	read_Valve_pos
 369              		.thumb
 370              		.thumb_func
 371              		.type	read_Valve_pos, %function
 372              	read_Valve_pos:
 373              	.LFB65:
  73:valve.c       **** 
  74:valve.c       **** float32 read_Valve_pos(){
 374              		.loc 1 74 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 32
 377              		@ frame_needed = 1, uses_anonymous_args = 0
 378 0000 90B5     		push	{r4, r7, lr}
 379              		.cfi_def_cfa_offset 12
 380              		.cfi_offset 4, -12
 381              		.cfi_offset 7, -8
 382              		.cfi_offset 14, -4
 383 0002 89B0     		sub	sp, sp, #36
 384              		.cfi_def_cfa_offset 48
 385 0004 00AF     		add	r7, sp, #0
 386              		.cfi_def_cfa_register 7
  75:valve.c       ****     // take analog voltage readings
  76:valve.c       ****     voltage_t readings = voltage_take_readings();
 387              		.loc 1 76 0
 388 0006 3B1D     		adds	r3, r7, #4
 389 0008 1846     		mov	r0, r3
 390 000a FFF7FEFF 		bl	voltage_take_readings
  77:valve.c       ****     return (readings.voltage_valve_pos/readings.voltage_valve_pot_power)/0.94; // divide because of
 391              		.loc 1 77 0
 392 000e 7B69     		ldr	r3, [r7, #20]	@ float
 393 0010 BA69     		ldr	r2, [r7, #24]	@ float
 394 0012 1146     		mov	r1, r2
 395 0014 1846     		mov	r0, r3
 396 0016 FFF7FEFF 		bl	__aeabi_fdiv
 397 001a 0346     		mov	r3, r0
 398 001c 1846     		mov	r0, r3
 399 001e FFF7FEFF 		bl	__aeabi_f2d
 400 0022 09A3     		adr	r3, .L9
 401 0024 D3E90023 		ldrd	r2, [r3]
 402 0028 FFF7FEFF 		bl	__aeabi_ddiv
 403 002c 0346     		mov	r3, r0
 404 002e 0C46     		mov	r4, r1
 405 0030 1846     		mov	r0, r3
 406 0032 2146     		mov	r1, r4
 407 0034 FFF7FEFF 		bl	__aeabi_d2f
 408 0038 0346     		mov	r3, r0
  78:valve.c       ****     // this code is written for the blue rotating dynaquip valve, not the linear actuator
  79:valve.c       ****     
  80:valve.c       **** }
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 10


 409              		.loc 1 80 0
 410 003a 1846     		mov	r0, r3
 411 003c 2437     		adds	r7, r7, #36
 412              		.cfi_def_cfa_offset 12
 413 003e BD46     		mov	sp, r7
 414              		.cfi_def_cfa_register 13
 415              		@ sp needed
 416 0040 90BD     		pop	{r4, r7, pc}
 417              	.L10:
 418 0042 00BFAFF3 		.align	3
 418      0080
 419              	.L9:
 420 0048 14AE47E1 		.word	-515396076
 421 004c 7A14EE3F 		.word	1072567418
 422              		.cfi_endproc
 423              	.LFE65:
 424              		.size	read_Valve_pos, .-read_Valve_pos
 425              		.global	__aeabi_fsub
 426              		.global	__aeabi_dcmplt
 427              		.global	__aeabi_fcmpgt
 428              		.section	.rodata
 429 0085 000000   		.align	2
 430              	.LC3:
 431 0088 6D6F7665 		.ascii	"move_valve failed ::: requested_position: %f\000"
 431      5F76616C 
 431      76652066 
 431      61696C65 
 431      64203A3A 
 432              		.global	__aeabi_dcmpgt
 433              		.global	__aeabi_fcmplt
 434 00b5 000000   		.align	2
 435              	.LC4:
 436 00b8 6D6F7665 		.ascii	"move_valve failed ::: nrequested_position: %f\000"
 436      5F76616C 
 436      76652066 
 436      61696C65 
 436      64203A3A 
 437              		.section	.text.move_valve,"ax",%progbits
 438              		.align	2
 439              		.global	move_valve
 440              		.thumb
 441              		.thumb_func
 442              		.type	move_valve, %function
 443              	move_valve:
 444              	.LFB66:
  81:valve.c       **** 
  82:valve.c       **** uint8 move_valve(float32 position_desired){
 445              		.loc 1 82 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 16
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449 0000 90B5     		push	{r4, r7, lr}
 450              		.cfi_def_cfa_offset 12
 451              		.cfi_offset 4, -12
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 11


 455              		.cfi_def_cfa_offset 32
 456 0004 00AF     		add	r7, sp, #0
 457              		.cfi_def_cfa_register 7
 458 0006 7860     		str	r0, [r7, #4]	@ float
  83:valve.c       ****     
  84:valve.c       ****     // activate 12V battery
  85:valve.c       ****     Pressure_Voltage_Enable_Write(ON);
 459              		.loc 1 85 0
 460 0008 0120     		movs	r0, #1
 461 000a FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  86:valve.c       ****     
  87:valve.c       ****     // this uses "go until you're there" rather than pulsing and checking
  88:valve.c       ****     // pulsing and checking could set up oscillations in the controller
  89:valve.c       ****     // pulsing and checking would only be necessary if measurement consumed a similar amount of tim
  90:valve.c       ****     
  91:valve.c       ****     float32 prev_pos =  1.5;
 462              		.loc 1 91 0
 463 000e 4FF07F53 		mov	r3, #1069547520
 464 0012 FB60     		str	r3, [r7, #12]	@ float
  92:valve.c       ****     
  93:valve.c       ****     // are we already there? (wihtin a tolerance)
  94:valve.c       ****     if ( fabs(read_Valve_pos() - position_desired) < 0.05){
 465              		.loc 1 94 0
 466 0014 FFF7FEFF 		bl	read_Valve_pos
 467 0018 0346     		mov	r3, r0
 468 001a 7968     		ldr	r1, [r7, #4]	@ float
 469 001c 1846     		mov	r0, r3
 470 001e FFF7FEFF 		bl	__aeabi_fsub
 471 0022 0346     		mov	r3, r0
 472 0024 23F00043 		bic	r3, r3, #-2147483648
 473 0028 1846     		mov	r0, r3
 474 002a FFF7FEFF 		bl	__aeabi_f2d
 475 002e 84A3     		adr	r3, .L36
 476 0030 D3E90023 		ldrd	r2, [r3]
 477 0034 FFF7FEFF 		bl	__aeabi_dcmplt
 478 0038 0346     		mov	r3, r0
 479 003a 002B     		cmp	r3, #0
 480 003c 01D0     		beq	.L34
  95:valve.c       ****         return 1;
 481              		.loc 1 95 0
 482 003e 0123     		movs	r3, #1
 483 0040 FAE0     		b	.L14
 484              	.L34:
  96:valve.c       ****     }
  97:valve.c       **** 
  98:valve.c       ****     // is the desired position more closed?
  99:valve.c       ****     if( read_Valve_pos() > position_desired){
 485              		.loc 1 99 0
 486 0042 FFF7FEFF 		bl	read_Valve_pos
 487 0046 0346     		mov	r3, r0
 488 0048 7968     		ldr	r1, [r7, #4]	@ float
 489 004a 1846     		mov	r0, r3
 490 004c FFF7FEFF 		bl	__aeabi_fcmpgt
 491 0050 0346     		mov	r3, r0
 492 0052 002B     		cmp	r3, #0
 493 0054 71D0     		beq	.L35
 100:valve.c       ****         
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 12


 101:valve.c       ****         // turn the closing pin high
 102:valve.c       ****         Power_VDD2_Write(1u);
 494              		.loc 1 102 0
 495 0056 0120     		movs	r0, #1
 496 0058 FFF7FEFF 		bl	Power_VDD2_Write
 103:valve.c       **** 
 104:valve.c       ****         
 105:valve.c       ****         // while loop
 106:valve.c       ****         // continuously measure the position (measurement should be much faster than movement)
 107:valve.c       ****         // once we're within 5 percent of desired (can tighten this later) exit this do-while loop
 108:valve.c       ****         while(fabs(read_Valve_pos() - position_desired) > 0.03){
 497              		.loc 1 108 0
 498 005c 2FE0     		b	.L17
 499              	.L19:
 109:valve.c       ****             prev_pos = read_Valve_pos();
 500              		.loc 1 109 0
 501 005e FFF7FEFF 		bl	read_Valve_pos
 502 0062 F860     		str	r0, [r7, #12]	@ float
 110:valve.c       ****             CyDelay(1000u);
 503              		.loc 1 110 0
 504 0064 4FF47A70 		mov	r0, #1000
 505 0068 FFF7FEFF 		bl	CyDelay
 111:valve.c       ****             // are we moving?
 112:valve.c       ****             if (fabs(prev_pos - read_Valve_pos()) < 0.0005){
 506              		.loc 1 112 0
 507 006c FFF7FEFF 		bl	read_Valve_pos
 508 0070 0346     		mov	r3, r0
 509 0072 1946     		mov	r1, r3
 510 0074 F868     		ldr	r0, [r7, #12]	@ float
 511 0076 FFF7FEFF 		bl	__aeabi_fsub
 512 007a 0346     		mov	r3, r0
 513 007c 23F00043 		bic	r3, r3, #-2147483648
 514 0080 1846     		mov	r0, r3
 515 0082 FFF7FEFF 		bl	__aeabi_f2d
 516 0086 70A3     		adr	r3, .L36+8
 517 0088 D3E90023 		ldrd	r2, [r3]
 518 008c FFF7FEFF 		bl	__aeabi_dcmplt
 519 0090 0346     		mov	r3, r0
 520 0092 002B     		cmp	r3, #0
 521 0094 00D1     		bne	.L29
 522 0096 12E0     		b	.L17
 523              	.L29:
 113:valve.c       ****                 // turn the closing pin low
 114:valve.c       ****                 Power_VDD2_Write(0u);
 524              		.loc 1 114 0
 525 0098 0020     		movs	r0, #0
 526 009a FFF7FEFF 		bl	Power_VDD2_Write
 115:valve.c       ****                 // deactivate 12V battery
 116:valve.c       ****                 Pressure_Voltage_Enable_Write(OFF);
 527              		.loc 1 116 0
 528 009e 0020     		movs	r0, #0
 529 00a0 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 117:valve.c       ****                 printNotif(NOTIF_TYPE_ERROR, "move_valve failed ::: requested_position: %f", positi
 530              		.loc 1 117 0
 531 00a4 7868     		ldr	r0, [r7, #4]	@ float
 532 00a6 FFF7FEFF 		bl	__aeabi_f2d
 533 00aa 0346     		mov	r3, r0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 13


 534 00ac 0C46     		mov	r4, r1
 535 00ae 1A46     		mov	r2, r3
 536 00b0 2346     		mov	r3, r4
 537 00b2 6949     		ldr	r1, .L36+24
 538 00b4 0220     		movs	r0, #2
 539 00b6 FFF7FEFF 		bl	printNotif
 118:valve.c       ****                 return 0;
 540              		.loc 1 118 0
 541 00ba 0023     		movs	r3, #0
 542 00bc BCE0     		b	.L14
 543              	.L17:
 108:valve.c       ****             prev_pos = read_Valve_pos();
 544              		.loc 1 108 0
 545 00be FFF7FEFF 		bl	read_Valve_pos
 546 00c2 0346     		mov	r3, r0
 547 00c4 7968     		ldr	r1, [r7, #4]	@ float
 548 00c6 1846     		mov	r0, r3
 549 00c8 FFF7FEFF 		bl	__aeabi_fsub
 550 00cc 0346     		mov	r3, r0
 551 00ce 23F00043 		bic	r3, r3, #-2147483648
 552 00d2 1846     		mov	r0, r3
 553 00d4 FFF7FEFF 		bl	__aeabi_f2d
 554 00d8 5DA3     		adr	r3, .L36+16
 555 00da D3E90023 		ldrd	r2, [r3]
 556 00de FFF7FEFF 		bl	__aeabi_dcmpgt
 557 00e2 0346     		mov	r3, r0
 558 00e4 002B     		cmp	r3, #0
 559 00e6 BAD1     		bne	.L19
 119:valve.c       ****             }
 120:valve.c       ****         }
 121:valve.c       ****         
 122:valve.c       ****         
 123:valve.c       ****         // turn the closing pin low
 124:valve.c       ****         Power_VDD2_Write(0u);
 560              		.loc 1 124 0
 561 00e8 0020     		movs	r0, #0
 562 00ea FFF7FEFF 		bl	Power_VDD2_Write
 125:valve.c       ****         
 126:valve.c       ****         
 127:valve.c       ****         // read valve position once more and confirm we're where we want to be
 128:valve.c       ****         // if not return 0
 129:valve.c       ****         if(fabs(read_Valve_pos() - position_desired) > 0.05){
 563              		.loc 1 129 0
 564 00ee FFF7FEFF 		bl	read_Valve_pos
 565 00f2 0346     		mov	r3, r0
 566 00f4 7968     		ldr	r1, [r7, #4]	@ float
 567 00f6 1846     		mov	r0, r3
 568 00f8 FFF7FEFF 		bl	__aeabi_fsub
 569 00fc 0346     		mov	r3, r0
 570 00fe 23F00043 		bic	r3, r3, #-2147483648
 571 0102 1846     		mov	r0, r3
 572 0104 FFF7FEFF 		bl	__aeabi_f2d
 573 0108 4DA3     		adr	r3, .L36
 574 010a D3E90023 		ldrd	r2, [r3]
 575 010e FFF7FEFF 		bl	__aeabi_dcmpgt
 576 0112 0346     		mov	r3, r0
 577 0114 002B     		cmp	r3, #0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 14


 578 0116 00F08B80 		beq	.L20
 130:valve.c       ****             // deactivate 12V battery
 131:valve.c       ****             Pressure_Voltage_Enable_Write(OFF);
 579              		.loc 1 131 0
 580 011a 0020     		movs	r0, #0
 581 011c FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 132:valve.c       ****             printNotif(NOTIF_TYPE_ERROR, "move_valve failed ::: requested_position: %f", position_d
 582              		.loc 1 132 0
 583 0120 7868     		ldr	r0, [r7, #4]	@ float
 584 0122 FFF7FEFF 		bl	__aeabi_f2d
 585 0126 0346     		mov	r3, r0
 586 0128 0C46     		mov	r4, r1
 587 012a 1A46     		mov	r2, r3
 588 012c 2346     		mov	r3, r4
 589 012e 4A49     		ldr	r1, .L36+24
 590 0130 0220     		movs	r0, #2
 591 0132 FFF7FEFF 		bl	printNotif
 133:valve.c       ****             return 0;
 592              		.loc 1 133 0
 593 0136 0023     		movs	r3, #0
 594 0138 7EE0     		b	.L14
 595              	.L35:
 134:valve.c       ****         }
 135:valve.c       ****         
 136:valve.c       ****     }
 137:valve.c       ****     // or more open?
 138:valve.c       ****     else if(read_Valve_pos() < position_desired){
 596              		.loc 1 138 0
 597 013a FFF7FEFF 		bl	read_Valve_pos
 598 013e 0346     		mov	r3, r0
 599 0140 7968     		ldr	r1, [r7, #4]	@ float
 600 0142 1846     		mov	r0, r3
 601 0144 FFF7FEFF 		bl	__aeabi_fcmplt
 602 0148 0346     		mov	r3, r0
 603 014a 002B     		cmp	r3, #0
 604 014c 70D0     		beq	.L20
 139:valve.c       ****         
 140:valve.c       ****         // turn the opening pin high
 141:valve.c       ****         Power_VDD1_Write(1u);
 605              		.loc 1 141 0
 606 014e 0120     		movs	r0, #1
 607 0150 FFF7FEFF 		bl	Power_VDD1_Write
 142:valve.c       ****         
 143:valve.c       ****         // while loop
 144:valve.c       ****         // continuously measure the position (measurement should be much faster than movement)
 145:valve.c       ****         // once we're within 5 percent of desired (can tighten this later) exit this do-while loop
 146:valve.c       ****         while(fabs(read_Valve_pos() - position_desired) > 0.03){
 608              		.loc 1 146 0
 609 0154 2FE0     		b	.L23
 610              	.L25:
 147:valve.c       ****             prev_pos = read_Valve_pos();
 611              		.loc 1 147 0
 612 0156 FFF7FEFF 		bl	read_Valve_pos
 613 015a F860     		str	r0, [r7, #12]	@ float
 148:valve.c       ****             CyDelay(1000u);
 614              		.loc 1 148 0
 615 015c 4FF47A70 		mov	r0, #1000
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 15


 616 0160 FFF7FEFF 		bl	CyDelay
 149:valve.c       ****             // are we moving?
 150:valve.c       ****             if (fabs(prev_pos - read_Valve_pos()) < 0.0005){
 617              		.loc 1 150 0
 618 0164 FFF7FEFF 		bl	read_Valve_pos
 619 0168 0346     		mov	r3, r0
 620 016a 1946     		mov	r1, r3
 621 016c F868     		ldr	r0, [r7, #12]	@ float
 622 016e FFF7FEFF 		bl	__aeabi_fsub
 623 0172 0346     		mov	r3, r0
 624 0174 23F00043 		bic	r3, r3, #-2147483648
 625 0178 1846     		mov	r0, r3
 626 017a FFF7FEFF 		bl	__aeabi_f2d
 627 017e 32A3     		adr	r3, .L36+8
 628 0180 D3E90023 		ldrd	r2, [r3]
 629 0184 FFF7FEFF 		bl	__aeabi_dcmplt
 630 0188 0346     		mov	r3, r0
 631 018a 002B     		cmp	r3, #0
 632 018c 00D1     		bne	.L32
 633 018e 12E0     		b	.L23
 634              	.L32:
 151:valve.c       ****                 // turn the opening pin low
 152:valve.c       ****                 Power_VDD1_Write(0u);
 635              		.loc 1 152 0
 636 0190 0020     		movs	r0, #0
 637 0192 FFF7FEFF 		bl	Power_VDD1_Write
 153:valve.c       ****                 // deactivate 12V battery
 154:valve.c       ****                 Pressure_Voltage_Enable_Write(OFF);
 638              		.loc 1 154 0
 639 0196 0020     		movs	r0, #0
 640 0198 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 155:valve.c       ****                 printNotif(NOTIF_TYPE_ERROR, "move_valve failed ::: requested_position: %f", positi
 641              		.loc 1 155 0
 642 019c 7868     		ldr	r0, [r7, #4]	@ float
 643 019e FFF7FEFF 		bl	__aeabi_f2d
 644 01a2 0346     		mov	r3, r0
 645 01a4 0C46     		mov	r4, r1
 646 01a6 1A46     		mov	r2, r3
 647 01a8 2346     		mov	r3, r4
 648 01aa 2B49     		ldr	r1, .L36+24
 649 01ac 0220     		movs	r0, #2
 650 01ae FFF7FEFF 		bl	printNotif
 156:valve.c       ****                 return 0;
 651              		.loc 1 156 0
 652 01b2 0023     		movs	r3, #0
 653 01b4 40E0     		b	.L14
 654              	.L23:
 146:valve.c       ****             prev_pos = read_Valve_pos();
 655              		.loc 1 146 0
 656 01b6 FFF7FEFF 		bl	read_Valve_pos
 657 01ba 0346     		mov	r3, r0
 658 01bc 7968     		ldr	r1, [r7, #4]	@ float
 659 01be 1846     		mov	r0, r3
 660 01c0 FFF7FEFF 		bl	__aeabi_fsub
 661 01c4 0346     		mov	r3, r0
 662 01c6 23F00043 		bic	r3, r3, #-2147483648
 663 01ca 1846     		mov	r0, r3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 16


 664 01cc FFF7FEFF 		bl	__aeabi_f2d
 665 01d0 1FA3     		adr	r3, .L36+16
 666 01d2 D3E90023 		ldrd	r2, [r3]
 667 01d6 FFF7FEFF 		bl	__aeabi_dcmpgt
 668 01da 0346     		mov	r3, r0
 669 01dc 002B     		cmp	r3, #0
 670 01de BAD1     		bne	.L25
 157:valve.c       ****             }
 158:valve.c       ****         }
 159:valve.c       ****         
 160:valve.c       ****         // turn the opening pin low
 161:valve.c       ****          Power_VDD1_Write(0u);
 671              		.loc 1 161 0
 672 01e0 0020     		movs	r0, #0
 673 01e2 FFF7FEFF 		bl	Power_VDD1_Write
 162:valve.c       ****         
 163:valve.c       ****         
 164:valve.c       ****         // read valve position once more and confirm we're where we want to be
 165:valve.c       ****         // if not return 0
 166:valve.c       ****         if(fabs(read_Valve_pos() - position_desired) > 0.05){
 674              		.loc 1 166 0
 675 01e6 FFF7FEFF 		bl	read_Valve_pos
 676 01ea 0346     		mov	r3, r0
 677 01ec 7968     		ldr	r1, [r7, #4]	@ float
 678 01ee 1846     		mov	r0, r3
 679 01f0 FFF7FEFF 		bl	__aeabi_fsub
 680 01f4 0346     		mov	r3, r0
 681 01f6 23F00043 		bic	r3, r3, #-2147483648
 682 01fa 1846     		mov	r0, r3
 683 01fc FFF7FEFF 		bl	__aeabi_f2d
 684 0200 0FA3     		adr	r3, .L36
 685 0202 D3E90023 		ldrd	r2, [r3]
 686 0206 FFF7FEFF 		bl	__aeabi_dcmpgt
 687 020a 0346     		mov	r3, r0
 688 020c 002B     		cmp	r3, #0
 689 020e 0FD0     		beq	.L20
 167:valve.c       ****             // deactivate 12V battery
 168:valve.c       ****             Pressure_Voltage_Enable_Write(OFF);
 690              		.loc 1 168 0
 691 0210 0020     		movs	r0, #0
 692 0212 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 169:valve.c       ****             printNotif(NOTIF_TYPE_ERROR, "move_valve failed ::: nrequested_position: %f", position_
 693              		.loc 1 169 0
 694 0216 7868     		ldr	r0, [r7, #4]	@ float
 695 0218 FFF7FEFF 		bl	__aeabi_f2d
 696 021c 0346     		mov	r3, r0
 697 021e 0C46     		mov	r4, r1
 698 0220 1A46     		mov	r2, r3
 699 0222 2346     		mov	r3, r4
 700 0224 0D49     		ldr	r1, .L36+28
 701 0226 0220     		movs	r0, #2
 702 0228 FFF7FEFF 		bl	printNotif
 170:valve.c       ****             return 0;
 703              		.loc 1 170 0
 704 022c 0023     		movs	r3, #0
 705 022e 03E0     		b	.L14
 706              	.L20:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 17


 171:valve.c       ****         }
 172:valve.c       ****         
 173:valve.c       ****         
 174:valve.c       ****     }
 175:valve.c       **** 
 176:valve.c       ****     
 177:valve.c       ****     // deactivate 12V battery
 178:valve.c       ****     Pressure_Voltage_Enable_Write(OFF);
 707              		.loc 1 178 0
 708 0230 0020     		movs	r0, #0
 709 0232 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 179:valve.c       ****     
 180:valve.c       ****     return 1; // everything worked fine
 710              		.loc 1 180 0
 711 0236 0123     		movs	r3, #1
 712              	.L14:
 181:valve.c       **** }
 713              		.loc 1 181 0
 714 0238 1846     		mov	r0, r3
 715 023a 1437     		adds	r7, r7, #20
 716              		.cfi_def_cfa_offset 12
 717 023c BD46     		mov	sp, r7
 718              		.cfi_def_cfa_register 13
 719              		@ sp needed
 720 023e 90BD     		pop	{r4, r7, pc}
 721              	.L37:
 722              		.align	3
 723              	.L36:
 724 0240 9A999999 		.word	-1717986918
 725 0244 9999A93F 		.word	1068079513
 726 0248 FCA9F1D2 		.word	-755914244
 727 024c 4D62403F 		.word	1061184077
 728 0250 B81E85EB 		.word	-343597384
 729 0254 51B89E3F 		.word	1067366481
 730 0258 88000000 		.word	.LC3
 731 025c B8000000 		.word	.LC4
 732              		.cfi_endproc
 733              	.LFE66:
 734              		.size	move_valve, .-move_valve
 735              		.section	.rodata
 736 00e6 0000     		.align	2
 737              	.LC5:
 738 00e8 6C657665 		.ascii	"level_controller using level_reading:%d\000"
 738      6C5F636F 
 738      6E74726F 
 738      6C6C6572 
 738      20757369 
 739              		.section	.text.valve_level_controller,"ax",%progbits
 740              		.align	2
 741              		.global	valve_level_controller
 742              		.thumb
 743              		.thumb_func
 744              		.type	valve_level_controller, %function
 745              	valve_level_controller:
 746              	.LFB67:
 182:valve.c       **** 
 183:valve.c       **** void valve_level_controller(int16 level_reading){
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 18


 747              		.loc 1 183 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 8
 750              		@ frame_needed = 1, uses_anonymous_args = 0
 751 0000 80B5     		push	{r7, lr}
 752              		.cfi_def_cfa_offset 8
 753              		.cfi_offset 7, -8
 754              		.cfi_offset 14, -4
 755 0002 82B0     		sub	sp, sp, #8
 756              		.cfi_def_cfa_offset 16
 757 0004 00AF     		add	r7, sp, #0
 758              		.cfi_def_cfa_register 7
 759 0006 0346     		mov	r3, r0
 760 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 184:valve.c       **** 
 185:valve.c       ****     // these controls should be site specific. i.e. if site_id = ARB016 cutoff = 1400 mm
 186:valve.c       ****     printNotif(NOTIF_TYPE_EVENT, "level_controller using level_reading:%d", level_reading);
 761              		.loc 1 186 0
 762 000a B7F90630 		ldrsh	r3, [r7, #6]
 763 000e 1A46     		mov	r2, r3
 764 0010 0A49     		ldr	r1, .L42
 765 0012 0020     		movs	r0, #0
 766 0014 FFF7FEFF 		bl	printNotif
 187:valve.c       ****     if(level_reading > 500){
 767              		.loc 1 187 0
 768 0018 B7F90630 		ldrsh	r3, [r7, #6]
 769 001c B3F5FA7F 		cmp	r3, #500
 770 0020 04DD     		ble	.L39
 188:valve.c       ****         move_valve(0);
 771              		.loc 1 188 0
 772 0022 4FF00000 		mov	r0, #0
 773 0026 FFF7FEFF 		bl	move_valve
 189:valve.c       ****     }
 190:valve.c       ****     else {
 191:valve.c       ****         move_valve(1);
 192:valve.c       ****     }
 193:valve.c       **** }
 774              		.loc 1 193 0
 775 002a 03E0     		b	.L41
 776              	.L39:
 191:valve.c       ****     }
 777              		.loc 1 191 0
 778 002c 4FF07E50 		mov	r0, #1065353216
 779 0030 FFF7FEFF 		bl	move_valve
 780              	.L41:
 781              		.loc 1 193 0
 782 0034 00BF     		nop
 783 0036 0837     		adds	r7, r7, #8
 784              		.cfi_def_cfa_offset 8
 785 0038 BD46     		mov	sp, r7
 786              		.cfi_def_cfa_register 13
 787              		@ sp needed
 788 003a 80BD     		pop	{r7, pc}
 789              	.L43:
 790              		.align	2
 791              	.L42:
 792 003c E8000000 		.word	.LC5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 19


 793              		.cfi_endproc
 794              	.LFE67:
 795              		.size	valve_level_controller, .-valve_level_controller
 796              		.text
 797              	.Letext0:
 798              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 799              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 800              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 801              		.file 5 "testing.h"
 802              		.file 6 "voltages.h"
 803              		.file 7 "data.h"
 804              		.file 8 "modem.h"
 805              		.file 9 "notoriOS.h"
 806              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 807              		.section	.debug_info,"",%progbits
 808              	.Ldebug_info0:
 809 0000 2F060000 		.4byte	0x62f
 810 0004 0400     		.2byte	0x4
 811 0006 00000000 		.4byte	.Ldebug_abbrev0
 812 000a 04       		.byte	0x4
 813 000b 01       		.uleb128 0x1
 814 000c 90000000 		.4byte	.LASF95
 815 0010 0C       		.byte	0xc
 816 0011 AD010000 		.4byte	.LASF96
 817 0015 21040000 		.4byte	.LASF97
 818 0019 00000000 		.4byte	.Ldebug_ranges0+0
 819 001d 00000000 		.4byte	0
 820 0021 00000000 		.4byte	.Ldebug_line0
 821 0025 02       		.uleb128 0x2
 822 0026 01       		.byte	0x1
 823 0027 06       		.byte	0x6
 824 0028 AF020000 		.4byte	.LASF0
 825 002c 02       		.uleb128 0x2
 826 002d 01       		.byte	0x1
 827 002e 08       		.byte	0x8
 828 002f 60020000 		.4byte	.LASF1
 829 0033 02       		.uleb128 0x2
 830 0034 02       		.byte	0x2
 831 0035 05       		.byte	0x5
 832 0036 47010000 		.4byte	.LASF2
 833 003a 02       		.uleb128 0x2
 834 003b 02       		.byte	0x2
 835 003c 07       		.byte	0x7
 836 003d 5F030000 		.4byte	.LASF3
 837 0041 03       		.uleb128 0x3
 838 0042 C5040000 		.4byte	.LASF9
 839 0046 02       		.byte	0x2
 840 0047 3F       		.byte	0x3f
 841 0048 4C000000 		.4byte	0x4c
 842 004c 02       		.uleb128 0x2
 843 004d 04       		.byte	0x4
 844 004e 05       		.byte	0x5
 845 004f D5010000 		.4byte	.LASF4
 846 0053 02       		.uleb128 0x2
 847 0054 04       		.byte	0x4
 848 0055 07       		.byte	0x7
 849 0056 64040000 		.4byte	.LASF5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 20


 850 005a 02       		.uleb128 0x2
 851 005b 08       		.byte	0x8
 852 005c 05       		.byte	0x5
 853 005d BB010000 		.4byte	.LASF6
 854 0061 02       		.uleb128 0x2
 855 0062 08       		.byte	0x8
 856 0063 07       		.byte	0x7
 857 0064 CA020000 		.4byte	.LASF7
 858 0068 04       		.uleb128 0x4
 859 0069 04       		.byte	0x4
 860 006a 05       		.byte	0x5
 861 006b 696E7400 		.ascii	"int\000"
 862 006f 02       		.uleb128 0x2
 863 0070 04       		.byte	0x4
 864 0071 07       		.byte	0x7
 865 0072 F1020000 		.4byte	.LASF8
 866 0076 03       		.uleb128 0x3
 867 0077 CC030000 		.4byte	.LASF10
 868 007b 03       		.byte	0x3
 869 007c 2C       		.byte	0x2c
 870 007d 41000000 		.4byte	0x41
 871 0081 05       		.uleb128 0x5
 872 0082 80010000 		.4byte	.LASF11
 873 0086 04       		.byte	0x4
 874 0087 9201     		.2byte	0x192
 875 0089 2C000000 		.4byte	0x2c
 876 008d 05       		.uleb128 0x5
 877 008e 57010000 		.4byte	.LASF12
 878 0092 04       		.byte	0x4
 879 0093 9301     		.2byte	0x193
 880 0095 3A000000 		.4byte	0x3a
 881 0099 05       		.uleb128 0x5
 882 009a 8B010000 		.4byte	.LASF13
 883 009e 04       		.byte	0x4
 884 009f 9601     		.2byte	0x196
 885 00a1 33000000 		.4byte	0x33
 886 00a5 05       		.uleb128 0x5
 887 00a6 76040000 		.4byte	.LASF14
 888 00aa 04       		.byte	0x4
 889 00ab 9701     		.2byte	0x197
 890 00ad 4C000000 		.4byte	0x4c
 891 00b1 05       		.uleb128 0x5
 892 00b2 3C000000 		.4byte	.LASF15
 893 00b6 04       		.byte	0x4
 894 00b7 9801     		.2byte	0x198
 895 00b9 BD000000 		.4byte	0xbd
 896 00bd 02       		.uleb128 0x2
 897 00be 04       		.byte	0x4
 898 00bf 04       		.byte	0x4
 899 00c0 B5010000 		.4byte	.LASF16
 900 00c4 02       		.uleb128 0x2
 901 00c5 08       		.byte	0x8
 902 00c6 04       		.byte	0x4
 903 00c7 7C040000 		.4byte	.LASF17
 904 00cb 02       		.uleb128 0x2
 905 00cc 01       		.byte	0x1
 906 00cd 08       		.byte	0x8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 21


 907 00ce C9010000 		.4byte	.LASF18
 908 00d2 02       		.uleb128 0x2
 909 00d3 08       		.byte	0x8
 910 00d4 04       		.byte	0x4
 911 00d5 3F020000 		.4byte	.LASF19
 912 00d9 02       		.uleb128 0x2
 913 00da 04       		.byte	0x4
 914 00db 07       		.byte	0x7
 915 00dc 7F000000 		.4byte	.LASF20
 916 00e0 06       		.uleb128 0x6
 917 00e1 CB000000 		.4byte	0xcb
 918 00e5 F0000000 		.4byte	0xf0
 919 00e9 07       		.uleb128 0x7
 920 00ea D9000000 		.4byte	0xd9
 921 00ee 17       		.byte	0x17
 922 00ef 00       		.byte	0
 923 00f0 08       		.uleb128 0x8
 924 00f1 8101     		.2byte	0x181
 925 00f3 05       		.byte	0x5
 926 00f4 0A       		.byte	0xa
 927 00f5 1E010000 		.4byte	0x11e
 928 00f9 09       		.uleb128 0x9
 929 00fa 03050000 		.4byte	.LASF21
 930 00fe 05       		.byte	0x5
 931 00ff 0C       		.byte	0xc
 932 0100 1E010000 		.4byte	0x11e
 933 0104 00       		.byte	0
 934 0105 09       		.uleb128 0x9
 935 0106 8A030000 		.4byte	.LASF22
 936 010a 05       		.byte	0x5
 937 010b 0D       		.byte	0xd
 938 010c 81000000 		.4byte	0x81
 939 0110 80       		.byte	0x80
 940 0111 09       		.uleb128 0x9
 941 0112 CE010000 		.4byte	.LASF23
 942 0116 05       		.byte	0x5
 943 0117 0F       		.byte	0xf
 944 0118 2E010000 		.4byte	0x12e
 945 011c 81       		.byte	0x81
 946 011d 00       		.byte	0
 947 011e 06       		.uleb128 0x6
 948 011f CB000000 		.4byte	0xcb
 949 0123 2E010000 		.4byte	0x12e
 950 0127 07       		.uleb128 0x7
 951 0128 D9000000 		.4byte	0xd9
 952 012c 7F       		.byte	0x7f
 953 012d 00       		.byte	0
 954 012e 06       		.uleb128 0x6
 955 012f CB000000 		.4byte	0xcb
 956 0133 3E010000 		.4byte	0x13e
 957 0137 07       		.uleb128 0x7
 958 0138 D9000000 		.4byte	0xd9
 959 013c FF       		.byte	0xff
 960 013d 00       		.byte	0
 961 013e 03       		.uleb128 0x3
 962 013f B0030000 		.4byte	.LASF24
 963 0143 05       		.byte	0x5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 22


 964 0144 10       		.byte	0x10
 965 0145 F0000000 		.4byte	0xf0
 966 0149 0A       		.uleb128 0xa
 967 014a 1C       		.byte	0x1c
 968 014b 06       		.byte	0x6
 969 014c 14       		.byte	0x14
 970 014d A6010000 		.4byte	0x1a6
 971 0151 09       		.uleb128 0x9
 972 0152 5E010000 		.4byte	.LASF25
 973 0156 06       		.byte	0x6
 974 0157 15       		.byte	0x15
 975 0158 BD000000 		.4byte	0xbd
 976 015c 00       		.byte	0
 977 015d 09       		.uleb128 0x9
 978 015e 1F000000 		.4byte	.LASF26
 979 0162 06       		.byte	0x6
 980 0163 16       		.byte	0x16
 981 0164 BD000000 		.4byte	0xbd
 982 0168 04       		.byte	0x4
 983 0169 09       		.uleb128 0x9
 984 016a 33050000 		.4byte	.LASF27
 985 016e 06       		.byte	0x6
 986 016f 17       		.byte	0x17
 987 0170 BD000000 		.4byte	0xbd
 988 0174 08       		.byte	0x8
 989 0175 09       		.uleb128 0x9
 990 0176 23010000 		.4byte	.LASF28
 991 017a 06       		.byte	0x6
 992 017b 18       		.byte	0x18
 993 017c BD000000 		.4byte	0xbd
 994 0180 0C       		.byte	0xc
 995 0181 09       		.uleb128 0x9
 996 0182 9B010000 		.4byte	.LASF29
 997 0186 06       		.byte	0x6
 998 0187 19       		.byte	0x19
 999 0188 BD000000 		.4byte	0xbd
 1000 018c 10       		.byte	0x10
 1001 018d 09       		.uleb128 0x9
 1002 018e E2030000 		.4byte	.LASF30
 1003 0192 06       		.byte	0x6
 1004 0193 1A       		.byte	0x1a
 1005 0194 BD000000 		.4byte	0xbd
 1006 0198 14       		.byte	0x14
 1007 0199 09       		.uleb128 0x9
 1008 019a 00000000 		.4byte	.LASF31
 1009 019e 06       		.byte	0x6
 1010 019f 1B       		.byte	0x1b
 1011 01a0 81000000 		.4byte	0x81
 1012 01a4 18       		.byte	0x18
 1013 01a5 00       		.byte	0
 1014 01a6 03       		.uleb128 0x3
 1015 01a7 C2030000 		.4byte	.LASF32
 1016 01ab 06       		.byte	0x6
 1017 01ac 1C       		.byte	0x1c
 1018 01ad 49010000 		.4byte	0x149
 1019 01b1 0A       		.uleb128 0xa
 1020 01b2 2C       		.byte	0x2c
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 23


 1021 01b3 07       		.byte	0x7
 1022 01b4 14       		.byte	0x14
 1023 01b5 DE010000 		.4byte	0x1de
 1024 01b9 0B       		.uleb128 0xb
 1025 01ba 6B657900 		.ascii	"key\000"
 1026 01be 07       		.byte	0x7
 1027 01bf 15       		.byte	0x15
 1028 01c0 DE010000 		.4byte	0x1de
 1029 01c4 00       		.byte	0
 1030 01c5 09       		.uleb128 0x9
 1031 01c6 51010000 		.4byte	.LASF33
 1032 01ca 07       		.byte	0x7
 1033 01cb 16       		.byte	0x16
 1034 01cc DE010000 		.4byte	0x1de
 1035 01d0 14       		.byte	0x14
 1036 01d1 09       		.uleb128 0x9
 1037 01d2 91010000 		.4byte	.LASF34
 1038 01d6 07       		.byte	0x7
 1039 01d7 17       		.byte	0x17
 1040 01d8 A5000000 		.4byte	0xa5
 1041 01dc 28       		.byte	0x28
 1042 01dd 00       		.byte	0
 1043 01de 06       		.uleb128 0x6
 1044 01df CB000000 		.4byte	0xcb
 1045 01e3 EE010000 		.4byte	0x1ee
 1046 01e7 07       		.uleb128 0x7
 1047 01e8 D9000000 		.4byte	0xd9
 1048 01ec 13       		.byte	0x13
 1049 01ed 00       		.byte	0
 1050 01ee 03       		.uleb128 0x3
 1051 01ef FE020000 		.4byte	.LASF35
 1052 01f3 07       		.byte	0x7
 1053 01f4 19       		.byte	0x19
 1054 01f5 B1010000 		.4byte	0x1b1
 1055 01f9 0A       		.uleb128 0xa
 1056 01fa 3C       		.byte	0x3c
 1057 01fb 08       		.byte	0x8
 1058 01fc 37       		.byte	0x37
 1059 01fd 26020000 		.4byte	0x226
 1060 0201 09       		.uleb128 0x9
 1061 0202 18000000 		.4byte	.LASF36
 1062 0206 08       		.byte	0x8
 1063 0207 38       		.byte	0x38
 1064 0208 DE010000 		.4byte	0x1de
 1065 020c 00       		.byte	0
 1066 020d 09       		.uleb128 0x9
 1067 020e 06000000 		.4byte	.LASF37
 1068 0212 08       		.byte	0x8
 1069 0213 39       		.byte	0x39
 1070 0214 DE010000 		.4byte	0x1de
 1071 0218 14       		.byte	0x14
 1072 0219 09       		.uleb128 0x9
 1073 021a E7040000 		.4byte	.LASF38
 1074 021e 08       		.byte	0x8
 1075 021f 3A       		.byte	0x3a
 1076 0220 DE010000 		.4byte	0x1de
 1077 0224 28       		.byte	0x28
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 24


 1078 0225 00       		.byte	0
 1079 0226 03       		.uleb128 0x3
 1080 0227 9C040000 		.4byte	.LASF39
 1081 022b 08       		.byte	0x8
 1082 022c 3C       		.byte	0x3c
 1083 022d F9010000 		.4byte	0x1f9
 1084 0231 0A       		.uleb128 0xa
 1085 0232 20       		.byte	0x20
 1086 0233 08       		.byte	0x8
 1087 0234 3E       		.byte	0x3e
 1088 0235 9A020000 		.4byte	0x29a
 1089 0239 09       		.uleb128 0x9
 1090 023a 0A030000 		.4byte	.LASF40
 1091 023e 08       		.byte	0x8
 1092 023f 3F       		.byte	0x3f
 1093 0240 68000000 		.4byte	0x68
 1094 0244 00       		.byte	0
 1095 0245 0B       		.uleb128 0xb
 1096 0246 62657200 		.ascii	"ber\000"
 1097 024a 08       		.byte	0x8
 1098 024b 40       		.byte	0x40
 1099 024c 68000000 		.4byte	0x68
 1100 0250 04       		.byte	0x4
 1101 0251 09       		.uleb128 0x9
 1102 0252 86010000 		.4byte	.LASF41
 1103 0256 08       		.byte	0x8
 1104 0257 41       		.byte	0x41
 1105 0258 68000000 		.4byte	0x68
 1106 025c 08       		.byte	0x8
 1107 025d 09       		.uleb128 0x9
 1108 025e 42010000 		.4byte	.LASF42
 1109 0262 08       		.byte	0x8
 1110 0263 42       		.byte	0x42
 1111 0264 68000000 		.4byte	0x68
 1112 0268 0C       		.byte	0xc
 1113 0269 09       		.uleb128 0x9
 1114 026a 1C040000 		.4byte	.LASF43
 1115 026e 08       		.byte	0x8
 1116 026f 43       		.byte	0x43
 1117 0270 68000000 		.4byte	0x68
 1118 0274 10       		.byte	0x10
 1119 0275 09       		.uleb128 0x9
 1120 0276 6E020000 		.4byte	.LASF44
 1121 027a 08       		.byte	0x8
 1122 027b 44       		.byte	0x44
 1123 027c 68000000 		.4byte	0x68
 1124 0280 14       		.byte	0x14
 1125 0281 09       		.uleb128 0x9
 1126 0282 72030000 		.4byte	.LASF45
 1127 0286 08       		.byte	0x8
 1128 0287 45       		.byte	0x45
 1129 0288 68000000 		.4byte	0x68
 1130 028c 18       		.byte	0x18
 1131 028d 09       		.uleb128 0x9
 1132 028e 9D030000 		.4byte	.LASF46
 1133 0292 08       		.byte	0x8
 1134 0293 46       		.byte	0x46
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 25


 1135 0294 68000000 		.4byte	0x68
 1136 0298 1C       		.byte	0x1c
 1137 0299 00       		.byte	0
 1138 029a 03       		.uleb128 0x3
 1139 029b D4030000 		.4byte	.LASF47
 1140 029f 08       		.byte	0x8
 1141 02a0 48       		.byte	0x48
 1142 02a1 31020000 		.4byte	0x231
 1143 02a5 0A       		.uleb128 0xa
 1144 02a6 05       		.byte	0x5
 1145 02a7 08       		.byte	0x8
 1146 02a8 54       		.byte	0x54
 1147 02a9 EA020000 		.4byte	0x2ea
 1148 02ad 09       		.uleb128 0x9
 1149 02ae 29050000 		.4byte	.LASF48
 1150 02b2 08       		.byte	0x8
 1151 02b3 56       		.byte	0x56
 1152 02b4 81000000 		.4byte	0x81
 1153 02b8 00       		.byte	0
 1154 02b9 09       		.uleb128 0x9
 1155 02ba 4B030000 		.4byte	.LASF49
 1156 02be 08       		.byte	0x8
 1157 02bf 58       		.byte	0x58
 1158 02c0 EA020000 		.4byte	0x2ea
 1159 02c4 01       		.byte	0x1
 1160 02c5 09       		.uleb128 0x9
 1161 02c6 17020000 		.4byte	.LASF50
 1162 02ca 08       		.byte	0x8
 1163 02cb 5A       		.byte	0x5a
 1164 02cc 81000000 		.4byte	0x81
 1165 02d0 02       		.byte	0x2
 1166 02d1 09       		.uleb128 0x9
 1167 02d2 10030000 		.4byte	.LASF51
 1168 02d6 08       		.byte	0x8
 1169 02d7 5C       		.byte	0x5c
 1170 02d8 81000000 		.4byte	0x81
 1171 02dc 03       		.byte	0x3
 1172 02dd 09       		.uleb128 0x9
 1173 02de 90040000 		.4byte	.LASF52
 1174 02e2 08       		.byte	0x8
 1175 02e3 5F       		.byte	0x5f
 1176 02e4 81000000 		.4byte	0x81
 1177 02e8 04       		.byte	0x4
 1178 02e9 00       		.byte	0
 1179 02ea 02       		.uleb128 0x2
 1180 02eb 01       		.byte	0x1
 1181 02ec 02       		.byte	0x2
 1182 02ed FA030000 		.4byte	.LASF53
 1183 02f1 03       		.uleb128 0x3
 1184 02f2 34030000 		.4byte	.LASF54
 1185 02f6 08       		.byte	0x8
 1186 02f7 61       		.byte	0x61
 1187 02f8 A5020000 		.4byte	0x2a5
 1188 02fc 0A       		.uleb128 0xa
 1189 02fd 06       		.byte	0x6
 1190 02fe 09       		.byte	0x9
 1191 02ff 2E       		.byte	0x2e
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 26


 1192 0300 35030000 		.4byte	0x335
 1193 0304 09       		.uleb128 0x9
 1194 0305 5A000000 		.4byte	.LASF55
 1195 0309 09       		.byte	0x9
 1196 030a 30       		.byte	0x30
 1197 030b 8D000000 		.4byte	0x8d
 1198 030f 00       		.byte	0
 1199 0310 09       		.uleb128 0x9
 1200 0311 44000000 		.4byte	.LASF56
 1201 0315 09       		.byte	0x9
 1202 0316 31       		.byte	0x31
 1203 0317 99000000 		.4byte	0x99
 1204 031b 02       		.byte	0x2
 1205 031c 09       		.uleb128 0x9
 1206 031d A9040000 		.4byte	.LASF57
 1207 0321 09       		.byte	0x9
 1208 0322 32       		.byte	0x32
 1209 0323 81000000 		.4byte	0x81
 1210 0327 04       		.byte	0x4
 1211 0328 09       		.uleb128 0x9
 1212 0329 CF040000 		.4byte	.LASF58
 1213 032d 09       		.byte	0x9
 1214 032e 33       		.byte	0x33
 1215 032f 81000000 		.4byte	0x81
 1216 0333 05       		.byte	0x5
 1217 0334 00       		.byte	0
 1218 0335 03       		.uleb128 0x3
 1219 0336 11020000 		.4byte	.LASF59
 1220 033a 09       		.byte	0x9
 1221 033b 36       		.byte	0x36
 1222 033c 40030000 		.4byte	0x340
 1223 0340 0C       		.uleb128 0xc
 1224 0341 FC020000 		.4byte	0x2fc
 1225 0345 0A       		.uleb128 0xa
 1226 0346 1C       		.byte	0x1c
 1227 0347 09       		.byte	0x9
 1228 0348 39       		.byte	0x39
 1229 0349 66030000 		.4byte	0x366
 1230 034d 09       		.uleb128 0x9
 1231 034e EE010000 		.4byte	.LASF60
 1232 0352 09       		.byte	0x9
 1233 0353 3B       		.byte	0x3b
 1234 0354 66030000 		.4byte	0x366
 1235 0358 00       		.byte	0
 1236 0359 09       		.uleb128 0x9
 1237 035a 34010000 		.4byte	.LASF61
 1238 035e 09       		.byte	0x9
 1239 035f 3C       		.byte	0x3c
 1240 0360 E0000000 		.4byte	0xe0
 1241 0364 04       		.byte	0x4
 1242 0365 00       		.byte	0
 1243 0366 0D       		.uleb128 0xd
 1244 0367 04       		.byte	0x4
 1245 0368 26020000 		.4byte	0x226
 1246 036c 03       		.uleb128 0x3
 1247 036d 54030000 		.4byte	.LASF62
 1248 0371 09       		.byte	0x9
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 27


 1249 0372 3E       		.byte	0x3e
 1250 0373 45030000 		.4byte	0x345
 1251 0377 0A       		.uleb128 0xa
 1252 0378 68       		.byte	0x68
 1253 0379 09       		.byte	0x9
 1254 037a 44       		.byte	0x44
 1255 037b 98030000 		.4byte	0x398
 1256 037f 09       		.uleb128 0x9
 1257 0380 88000000 		.4byte	.LASF63
 1258 0384 09       		.byte	0x9
 1259 0385 49       		.byte	0x49
 1260 0386 98030000 		.4byte	0x398
 1261 038a 00       		.byte	0
 1262 038b 09       		.uleb128 0x9
 1263 038c 17050000 		.4byte	.LASF64
 1264 0390 09       		.byte	0x9
 1265 0391 4A       		.byte	0x4a
 1266 0392 68000000 		.4byte	0x68
 1267 0396 64       		.byte	0x64
 1268 0397 00       		.byte	0
 1269 0398 06       		.uleb128 0x6
 1270 0399 CB000000 		.4byte	0xcb
 1271 039d A8030000 		.4byte	0x3a8
 1272 03a1 07       		.uleb128 0x7
 1273 03a2 D9000000 		.4byte	0xd9
 1274 03a6 63       		.byte	0x63
 1275 03a7 00       		.byte	0
 1276 03a8 03       		.uleb128 0x3
 1277 03a9 2D000000 		.4byte	.LASF65
 1278 03ad 09       		.byte	0x9
 1279 03ae 50       		.byte	0x50
 1280 03af 77030000 		.4byte	0x377
 1281 03b3 0E       		.uleb128 0xe
 1282 03b4 06020000 		.4byte	.LASF69
 1283 03b8 01       		.byte	0x1
 1284 03b9 07       		.byte	0x7
 1285 03ba 3E010000 		.4byte	0x13e
 1286 03be 00000000 		.4byte	.LFB64
 1287 03c2 B4020000 		.4byte	.LFE64-.LFB64
 1288 03c6 01       		.uleb128 0x1
 1289 03c7 9C       		.byte	0x9c
 1290 03c8 FA030000 		.4byte	0x3fa
 1291 03cc 0F       		.uleb128 0xf
 1292 03cd 17040000 		.4byte	.LASF66
 1293 03d1 01       		.byte	0x1
 1294 03d2 0E       		.byte	0xe
 1295 03d3 3E010000 		.4byte	0x13e
 1296 03d7 03       		.uleb128 0x3
 1297 03d8 91       		.byte	0x91
 1298 03d9 C07C     		.sleb128 -448
 1299 03db 0F       		.uleb128 0xf
 1300 03dc 0D050000 		.4byte	.LASF67
 1301 03e0 01       		.byte	0x1
 1302 03e1 12       		.byte	0x12
 1303 03e2 FA030000 		.4byte	0x3fa
 1304 03e6 03       		.uleb128 0x3
 1305 03e7 91       		.byte	0x91
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 28


 1306 03e8 A07C     		.sleb128 -480
 1307 03ea 0F       		.uleb128 0xf
 1308 03eb 0F000000 		.4byte	.LASF68
 1309 03ef 01       		.byte	0x1
 1310 03f0 14       		.byte	0x14
 1311 03f1 0A040000 		.4byte	0x40a
 1312 03f5 03       		.uleb128 0x3
 1313 03f6 91       		.byte	0x91
 1314 03f7 C07A     		.sleb128 -704
 1315 03f9 00       		.byte	0
 1316 03fa 06       		.uleb128 0x6
 1317 03fb B1000000 		.4byte	0xb1
 1318 03ff 0A040000 		.4byte	0x40a
 1319 0403 07       		.uleb128 0x7
 1320 0404 D9000000 		.4byte	0xd9
 1321 0408 07       		.byte	0x7
 1322 0409 00       		.byte	0
 1323 040a 06       		.uleb128 0x6
 1324 040b A6010000 		.4byte	0x1a6
 1325 040f 1A040000 		.4byte	0x41a
 1326 0413 07       		.uleb128 0x7
 1327 0414 D9000000 		.4byte	0xd9
 1328 0418 07       		.byte	0x7
 1329 0419 00       		.byte	0
 1330 041a 0E       		.uleb128 0xe
 1331 041b BB020000 		.4byte	.LASF70
 1332 041f 01       		.byte	0x1
 1333 0420 4A       		.byte	0x4a
 1334 0421 B1000000 		.4byte	0xb1
 1335 0425 00000000 		.4byte	.LFB65
 1336 0429 50000000 		.4byte	.LFE65-.LFB65
 1337 042d 01       		.uleb128 0x1
 1338 042e 9C       		.byte	0x9c
 1339 042f 42040000 		.4byte	0x442
 1340 0433 0F       		.uleb128 0xf
 1341 0434 55050000 		.4byte	.LASF71
 1342 0438 01       		.byte	0x1
 1343 0439 4C       		.byte	0x4c
 1344 043a A6010000 		.4byte	0x1a6
 1345 043e 02       		.uleb128 0x2
 1346 043f 91       		.byte	0x91
 1347 0440 54       		.sleb128 -44
 1348 0441 00       		.byte	0
 1349 0442 10       		.uleb128 0x10
 1350 0443 B7030000 		.4byte	.LASF98
 1351 0447 01       		.byte	0x1
 1352 0448 52       		.byte	0x52
 1353 0449 81000000 		.4byte	0x81
 1354 044d 00000000 		.4byte	.LFB66
 1355 0451 60020000 		.4byte	.LFE66-.LFB66
 1356 0455 01       		.uleb128 0x1
 1357 0456 9C       		.byte	0x9c
 1358 0457 78040000 		.4byte	0x478
 1359 045b 11       		.uleb128 0x11
 1360 045c 24020000 		.4byte	.LASF74
 1361 0460 01       		.byte	0x1
 1362 0461 52       		.byte	0x52
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 29


 1363 0462 B1000000 		.4byte	0xb1
 1364 0466 02       		.uleb128 0x2
 1365 0467 91       		.byte	0x91
 1366 0468 64       		.sleb128 -28
 1367 0469 0F       		.uleb128 0xf
 1368 046a 69000000 		.4byte	.LASF72
 1369 046e 01       		.byte	0x1
 1370 046f 5B       		.byte	0x5b
 1371 0470 B1000000 		.4byte	0xb1
 1372 0474 02       		.uleb128 0x2
 1373 0475 91       		.byte	0x91
 1374 0476 6C       		.sleb128 -20
 1375 0477 00       		.byte	0
 1376 0478 12       		.uleb128 0x12
 1377 0479 EC040000 		.4byte	.LASF73
 1378 047d 01       		.byte	0x1
 1379 047e B7       		.byte	0xb7
 1380 047f 00000000 		.4byte	.LFB67
 1381 0483 40000000 		.4byte	.LFE67-.LFB67
 1382 0487 01       		.uleb128 0x1
 1383 0488 9C       		.byte	0x9c
 1384 0489 9C040000 		.4byte	0x49c
 1385 048d 11       		.uleb128 0x11
 1386 048e B7040000 		.4byte	.LASF75
 1387 0492 01       		.byte	0x1
 1388 0493 B7       		.byte	0xb7
 1389 0494 99000000 		.4byte	0x99
 1390 0498 02       		.uleb128 0x2
 1391 0499 91       		.byte	0x91
 1392 049a 76       		.sleb128 -10
 1393 049b 00       		.byte	0
 1394 049c 13       		.uleb128 0x13
 1395 049d 83040000 		.4byte	.LASF76
 1396 04a1 0A       		.byte	0xa
 1397 04a2 1207     		.2byte	0x712
 1398 04a4 A8040000 		.4byte	0x4a8
 1399 04a8 0C       		.uleb128 0xc
 1400 04a9 76000000 		.4byte	0x76
 1401 04ad 14       		.uleb128 0x14
 1402 04ae DE010000 		.4byte	.LASF77
 1403 04b2 07       		.byte	0x7
 1404 04b3 11       		.byte	0x11
 1405 04b4 EA020000 		.4byte	0x2ea
 1406 04b8 05       		.uleb128 0x5
 1407 04b9 03       		.byte	0x3
 1408 04ba 00000000 		.4byte	buffer_overflow
 1409 04be 14       		.uleb128 0x14
 1410 04bf 6E010000 		.4byte	.LASF78
 1411 04c3 07       		.byte	0x7
 1412 04c4 22       		.byte	0x22
 1413 04c5 8D000000 		.4byte	0x8d
 1414 04c9 05       		.uleb128 0x5
 1415 04ca 03       		.byte	0x3
 1416 04cb 00000000 		.4byte	dataPointsInStack
 1417 04cf 14       		.uleb128 0x14
 1418 04d0 8A020000 		.4byte	.LASF79
 1419 04d4 07       		.byte	0x7
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 30


 1420 04d5 23       		.byte	0x23
 1421 04d6 8D000000 		.4byte	0x8d
 1422 04da 05       		.uleb128 0x5
 1423 04db 03       		.byte	0x3
 1424 04dc 00000000 		.4byte	dataPointsInStackDesired
 1425 04e0 06       		.uleb128 0x6
 1426 04e1 EE010000 		.4byte	0x1ee
 1427 04e5 F0040000 		.4byte	0x4f0
 1428 04e9 07       		.uleb128 0x7
 1429 04ea D9000000 		.4byte	0xd9
 1430 04ee 95       		.byte	0x95
 1431 04ef 00       		.byte	0
 1432 04f0 14       		.uleb128 0x14
 1433 04f1 1E010000 		.4byte	.LASF80
 1434 04f5 07       		.byte	0x7
 1435 04f6 24       		.byte	0x24
 1436 04f7 E0040000 		.4byte	0x4e0
 1437 04fb 05       		.uleb128 0x5
 1438 04fc 03       		.byte	0x3
 1439 04fd 00000000 		.4byte	data
 1440 0501 14       		.uleb128 0x14
 1441 0502 A3020000 		.4byte	.LASF81
 1442 0506 08       		.byte	0x8
 1443 0507 21       		.byte	0x21
 1444 0508 81000000 		.4byte	0x81
 1445 050c 05       		.uleb128 0x5
 1446 050d 03       		.byte	0x3
 1447 050e 00000000 		.4byte	modem_state
 1448 0512 14       		.uleb128 0x14
 1449 0513 73020000 		.4byte	.LASF82
 1450 0517 08       		.byte	0x8
 1451 0518 64       		.byte	0x64
 1452 0519 A5000000 		.4byte	0xa5
 1453 051d 05       		.uleb128 0x5
 1454 051e 03       		.byte	0x3
 1455 051f 00000000 		.4byte	modem_start_time_stamp
 1456 0523 14       		.uleb128 0x14
 1457 0524 EE010000 		.4byte	.LASF60
 1458 0528 08       		.byte	0x8
 1459 0529 65       		.byte	0x65
 1460 052a 26020000 		.4byte	0x226
 1461 052e 05       		.uleb128 0x5
 1462 052f 03       		.byte	0x3
 1463 0530 00000000 		.4byte	modem_info
 1464 0534 14       		.uleb128 0x14
 1465 0535 1A030000 		.4byte	.LASF83
 1466 0539 08       		.byte	0x8
 1467 053a 66       		.byte	0x66
 1468 053b 9A020000 		.4byte	0x29a
 1469 053f 05       		.uleb128 0x5
 1470 0540 03       		.byte	0x3
 1471 0541 00000000 		.4byte	modem_stats
 1472 0545 14       		.uleb128 0x14
 1473 0546 4B020000 		.4byte	.LASF84
 1474 054a 08       		.byte	0x8
 1475 054b 67       		.byte	0x67
 1476 054c F1020000 		.4byte	0x2f1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 31


 1477 0550 05       		.uleb128 0x5
 1478 0551 03       		.byte	0x3
 1479 0552 00000000 		.4byte	updatable_parameters
 1480 0556 06       		.uleb128 0x6
 1481 0557 CB000000 		.4byte	0xcb
 1482 055b 67050000 		.4byte	0x567
 1483 055f 15       		.uleb128 0x15
 1484 0560 D9000000 		.4byte	0xd9
 1485 0564 0F27     		.2byte	0x270f
 1486 0566 00       		.byte	0
 1487 0567 14       		.uleb128 0x14
 1488 0568 72000000 		.4byte	.LASF85
 1489 056c 09       		.byte	0x9
 1490 056d 18       		.byte	0x18
 1491 056e 56050000 		.4byte	0x556
 1492 0572 05       		.uleb128 0x5
 1493 0573 03       		.byte	0x3
 1494 0574 00000000 		.4byte	http_request
 1495 0578 14       		.uleb128 0x14
 1496 0579 1F050000 		.4byte	.LASF86
 1497 057d 09       		.byte	0x9
 1498 057e 19       		.byte	0x19
 1499 057f 56050000 		.4byte	0x556
 1500 0583 05       		.uleb128 0x5
 1501 0584 03       		.byte	0x3
 1502 0585 00000000 		.4byte	http_body
 1503 0589 06       		.uleb128 0x6
 1504 058a CB000000 		.4byte	0xcb
 1505 058e 99050000 		.4byte	0x599
 1506 0592 07       		.uleb128 0x7
 1507 0593 D9000000 		.4byte	0xd9
 1508 0597 C7       		.byte	0xc7
 1509 0598 00       		.byte	0
 1510 0599 14       		.uleb128 0x14
 1511 059a 59040000 		.4byte	.LASF87
 1512 059e 09       		.byte	0x9
 1513 059f 1A       		.byte	0x1a
 1514 05a0 89050000 		.4byte	0x589
 1515 05a4 05       		.uleb128 0x5
 1516 05a5 03       		.byte	0x3
 1517 05a6 00000000 		.4byte	http_route
 1518 05aa 14       		.uleb128 0x14
 1519 05ab 91030000 		.4byte	.LASF88
 1520 05af 09       		.byte	0x9
 1521 05b0 41       		.byte	0x41
 1522 05b1 6C030000 		.4byte	0x36c
 1523 05b5 05       		.uleb128 0x5
 1524 05b6 03       		.byte	0x3
 1525 05b7 00000000 		.4byte	system_info
 1526 05bb 14       		.uleb128 0x14
 1527 05bc E1020000 		.4byte	.LASF89
 1528 05c0 09       		.byte	0x9
 1529 05c1 53       		.byte	0x53
 1530 05c2 A8030000 		.4byte	0x3a8
 1531 05c6 05       		.uleb128 0x5
 1532 05c7 03       		.byte	0x3
 1533 05c8 00000000 		.4byte	system_settings
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 32


 1534 05cc 14       		.uleb128 0x14
 1535 05cd F9010000 		.4byte	.LASF90
 1536 05d1 09       		.byte	0x9
 1537 05d2 6F       		.byte	0x6f
 1538 05d3 35030000 		.4byte	0x335
 1539 05d7 05       		.uleb128 0x5
 1540 05d8 03       		.byte	0x3
 1541 05d9 00000000 		.4byte	alarmMeasure
 1542 05dd 14       		.uleb128 0x14
 1543 05de 26030000 		.4byte	.LASF91
 1544 05e2 09       		.byte	0x9
 1545 05e3 70       		.byte	0x70
 1546 05e4 81000000 		.4byte	0x81
 1547 05e8 05       		.uleb128 0x5
 1548 05e9 03       		.byte	0x3
 1549 05ea 00000000 		.4byte	timeToMeasure
 1550 05ee 14       		.uleb128 0x14
 1551 05ef 35020000 		.4byte	.LASF92
 1552 05f3 09       		.byte	0x9
 1553 05f4 71       		.byte	0x71
 1554 05f5 35030000 		.4byte	0x335
 1555 05f9 05       		.uleb128 0x5
 1556 05fa 03       		.byte	0x3
 1557 05fb 00000000 		.4byte	alarmSync
 1558 05ff 14       		.uleb128 0x14
 1559 0600 4A050000 		.4byte	.LASF93
 1560 0604 09       		.byte	0x9
 1561 0605 72       		.byte	0x72
 1562 0606 81000000 		.4byte	0x81
 1563 060a 05       		.uleb128 0x5
 1564 060b 03       		.byte	0x3
 1565 060c 00000000 		.4byte	timeToSync
 1566 0610 14       		.uleb128 0x14
 1567 0611 00040000 		.4byte	.LASF94
 1568 0615 09       		.byte	0x9
 1569 0616 73       		.byte	0x73
 1570 0617 81000000 		.4byte	0x81
 1571 061b 05       		.uleb128 0x5
 1572 061c 03       		.byte	0x3
 1573 061d 00000000 		.4byte	timeToSycnRemoteParams
 1574 0621 16       		.uleb128 0x16
 1575 0622 68657900 		.ascii	"hey\000"
 1576 0626 09       		.byte	0x9
 1577 0627 74       		.byte	0x74
 1578 0628 81000000 		.4byte	0x81
 1579 062c 05       		.uleb128 0x5
 1580 062d 03       		.byte	0x3
 1581 062e 00000000 		.4byte	hey
 1582 0632 00       		.byte	0
 1583              		.section	.debug_abbrev,"",%progbits
 1584              	.Ldebug_abbrev0:
 1585 0000 01       		.uleb128 0x1
 1586 0001 11       		.uleb128 0x11
 1587 0002 01       		.byte	0x1
 1588 0003 25       		.uleb128 0x25
 1589 0004 0E       		.uleb128 0xe
 1590 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 33


 1591 0006 0B       		.uleb128 0xb
 1592 0007 03       		.uleb128 0x3
 1593 0008 0E       		.uleb128 0xe
 1594 0009 1B       		.uleb128 0x1b
 1595 000a 0E       		.uleb128 0xe
 1596 000b 55       		.uleb128 0x55
 1597 000c 17       		.uleb128 0x17
 1598 000d 11       		.uleb128 0x11
 1599 000e 01       		.uleb128 0x1
 1600 000f 10       		.uleb128 0x10
 1601 0010 17       		.uleb128 0x17
 1602 0011 00       		.byte	0
 1603 0012 00       		.byte	0
 1604 0013 02       		.uleb128 0x2
 1605 0014 24       		.uleb128 0x24
 1606 0015 00       		.byte	0
 1607 0016 0B       		.uleb128 0xb
 1608 0017 0B       		.uleb128 0xb
 1609 0018 3E       		.uleb128 0x3e
 1610 0019 0B       		.uleb128 0xb
 1611 001a 03       		.uleb128 0x3
 1612 001b 0E       		.uleb128 0xe
 1613 001c 00       		.byte	0
 1614 001d 00       		.byte	0
 1615 001e 03       		.uleb128 0x3
 1616 001f 16       		.uleb128 0x16
 1617 0020 00       		.byte	0
 1618 0021 03       		.uleb128 0x3
 1619 0022 0E       		.uleb128 0xe
 1620 0023 3A       		.uleb128 0x3a
 1621 0024 0B       		.uleb128 0xb
 1622 0025 3B       		.uleb128 0x3b
 1623 0026 0B       		.uleb128 0xb
 1624 0027 49       		.uleb128 0x49
 1625 0028 13       		.uleb128 0x13
 1626 0029 00       		.byte	0
 1627 002a 00       		.byte	0
 1628 002b 04       		.uleb128 0x4
 1629 002c 24       		.uleb128 0x24
 1630 002d 00       		.byte	0
 1631 002e 0B       		.uleb128 0xb
 1632 002f 0B       		.uleb128 0xb
 1633 0030 3E       		.uleb128 0x3e
 1634 0031 0B       		.uleb128 0xb
 1635 0032 03       		.uleb128 0x3
 1636 0033 08       		.uleb128 0x8
 1637 0034 00       		.byte	0
 1638 0035 00       		.byte	0
 1639 0036 05       		.uleb128 0x5
 1640 0037 16       		.uleb128 0x16
 1641 0038 00       		.byte	0
 1642 0039 03       		.uleb128 0x3
 1643 003a 0E       		.uleb128 0xe
 1644 003b 3A       		.uleb128 0x3a
 1645 003c 0B       		.uleb128 0xb
 1646 003d 3B       		.uleb128 0x3b
 1647 003e 05       		.uleb128 0x5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 34


 1648 003f 49       		.uleb128 0x49
 1649 0040 13       		.uleb128 0x13
 1650 0041 00       		.byte	0
 1651 0042 00       		.byte	0
 1652 0043 06       		.uleb128 0x6
 1653 0044 01       		.uleb128 0x1
 1654 0045 01       		.byte	0x1
 1655 0046 49       		.uleb128 0x49
 1656 0047 13       		.uleb128 0x13
 1657 0048 01       		.uleb128 0x1
 1658 0049 13       		.uleb128 0x13
 1659 004a 00       		.byte	0
 1660 004b 00       		.byte	0
 1661 004c 07       		.uleb128 0x7
 1662 004d 21       		.uleb128 0x21
 1663 004e 00       		.byte	0
 1664 004f 49       		.uleb128 0x49
 1665 0050 13       		.uleb128 0x13
 1666 0051 2F       		.uleb128 0x2f
 1667 0052 0B       		.uleb128 0xb
 1668 0053 00       		.byte	0
 1669 0054 00       		.byte	0
 1670 0055 08       		.uleb128 0x8
 1671 0056 13       		.uleb128 0x13
 1672 0057 01       		.byte	0x1
 1673 0058 0B       		.uleb128 0xb
 1674 0059 05       		.uleb128 0x5
 1675 005a 3A       		.uleb128 0x3a
 1676 005b 0B       		.uleb128 0xb
 1677 005c 3B       		.uleb128 0x3b
 1678 005d 0B       		.uleb128 0xb
 1679 005e 01       		.uleb128 0x1
 1680 005f 13       		.uleb128 0x13
 1681 0060 00       		.byte	0
 1682 0061 00       		.byte	0
 1683 0062 09       		.uleb128 0x9
 1684 0063 0D       		.uleb128 0xd
 1685 0064 00       		.byte	0
 1686 0065 03       		.uleb128 0x3
 1687 0066 0E       		.uleb128 0xe
 1688 0067 3A       		.uleb128 0x3a
 1689 0068 0B       		.uleb128 0xb
 1690 0069 3B       		.uleb128 0x3b
 1691 006a 0B       		.uleb128 0xb
 1692 006b 49       		.uleb128 0x49
 1693 006c 13       		.uleb128 0x13
 1694 006d 38       		.uleb128 0x38
 1695 006e 0B       		.uleb128 0xb
 1696 006f 00       		.byte	0
 1697 0070 00       		.byte	0
 1698 0071 0A       		.uleb128 0xa
 1699 0072 13       		.uleb128 0x13
 1700 0073 01       		.byte	0x1
 1701 0074 0B       		.uleb128 0xb
 1702 0075 0B       		.uleb128 0xb
 1703 0076 3A       		.uleb128 0x3a
 1704 0077 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 35


 1705 0078 3B       		.uleb128 0x3b
 1706 0079 0B       		.uleb128 0xb
 1707 007a 01       		.uleb128 0x1
 1708 007b 13       		.uleb128 0x13
 1709 007c 00       		.byte	0
 1710 007d 00       		.byte	0
 1711 007e 0B       		.uleb128 0xb
 1712 007f 0D       		.uleb128 0xd
 1713 0080 00       		.byte	0
 1714 0081 03       		.uleb128 0x3
 1715 0082 08       		.uleb128 0x8
 1716 0083 3A       		.uleb128 0x3a
 1717 0084 0B       		.uleb128 0xb
 1718 0085 3B       		.uleb128 0x3b
 1719 0086 0B       		.uleb128 0xb
 1720 0087 49       		.uleb128 0x49
 1721 0088 13       		.uleb128 0x13
 1722 0089 38       		.uleb128 0x38
 1723 008a 0B       		.uleb128 0xb
 1724 008b 00       		.byte	0
 1725 008c 00       		.byte	0
 1726 008d 0C       		.uleb128 0xc
 1727 008e 35       		.uleb128 0x35
 1728 008f 00       		.byte	0
 1729 0090 49       		.uleb128 0x49
 1730 0091 13       		.uleb128 0x13
 1731 0092 00       		.byte	0
 1732 0093 00       		.byte	0
 1733 0094 0D       		.uleb128 0xd
 1734 0095 0F       		.uleb128 0xf
 1735 0096 00       		.byte	0
 1736 0097 0B       		.uleb128 0xb
 1737 0098 0B       		.uleb128 0xb
 1738 0099 49       		.uleb128 0x49
 1739 009a 13       		.uleb128 0x13
 1740 009b 00       		.byte	0
 1741 009c 00       		.byte	0
 1742 009d 0E       		.uleb128 0xe
 1743 009e 2E       		.uleb128 0x2e
 1744 009f 01       		.byte	0x1
 1745 00a0 3F       		.uleb128 0x3f
 1746 00a1 19       		.uleb128 0x19
 1747 00a2 03       		.uleb128 0x3
 1748 00a3 0E       		.uleb128 0xe
 1749 00a4 3A       		.uleb128 0x3a
 1750 00a5 0B       		.uleb128 0xb
 1751 00a6 3B       		.uleb128 0x3b
 1752 00a7 0B       		.uleb128 0xb
 1753 00a8 49       		.uleb128 0x49
 1754 00a9 13       		.uleb128 0x13
 1755 00aa 11       		.uleb128 0x11
 1756 00ab 01       		.uleb128 0x1
 1757 00ac 12       		.uleb128 0x12
 1758 00ad 06       		.uleb128 0x6
 1759 00ae 40       		.uleb128 0x40
 1760 00af 18       		.uleb128 0x18
 1761 00b0 9642     		.uleb128 0x2116
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 36


 1762 00b2 19       		.uleb128 0x19
 1763 00b3 01       		.uleb128 0x1
 1764 00b4 13       		.uleb128 0x13
 1765 00b5 00       		.byte	0
 1766 00b6 00       		.byte	0
 1767 00b7 0F       		.uleb128 0xf
 1768 00b8 34       		.uleb128 0x34
 1769 00b9 00       		.byte	0
 1770 00ba 03       		.uleb128 0x3
 1771 00bb 0E       		.uleb128 0xe
 1772 00bc 3A       		.uleb128 0x3a
 1773 00bd 0B       		.uleb128 0xb
 1774 00be 3B       		.uleb128 0x3b
 1775 00bf 0B       		.uleb128 0xb
 1776 00c0 49       		.uleb128 0x49
 1777 00c1 13       		.uleb128 0x13
 1778 00c2 02       		.uleb128 0x2
 1779 00c3 18       		.uleb128 0x18
 1780 00c4 00       		.byte	0
 1781 00c5 00       		.byte	0
 1782 00c6 10       		.uleb128 0x10
 1783 00c7 2E       		.uleb128 0x2e
 1784 00c8 01       		.byte	0x1
 1785 00c9 3F       		.uleb128 0x3f
 1786 00ca 19       		.uleb128 0x19
 1787 00cb 03       		.uleb128 0x3
 1788 00cc 0E       		.uleb128 0xe
 1789 00cd 3A       		.uleb128 0x3a
 1790 00ce 0B       		.uleb128 0xb
 1791 00cf 3B       		.uleb128 0x3b
 1792 00d0 0B       		.uleb128 0xb
 1793 00d1 27       		.uleb128 0x27
 1794 00d2 19       		.uleb128 0x19
 1795 00d3 49       		.uleb128 0x49
 1796 00d4 13       		.uleb128 0x13
 1797 00d5 11       		.uleb128 0x11
 1798 00d6 01       		.uleb128 0x1
 1799 00d7 12       		.uleb128 0x12
 1800 00d8 06       		.uleb128 0x6
 1801 00d9 40       		.uleb128 0x40
 1802 00da 18       		.uleb128 0x18
 1803 00db 9642     		.uleb128 0x2116
 1804 00dd 19       		.uleb128 0x19
 1805 00de 01       		.uleb128 0x1
 1806 00df 13       		.uleb128 0x13
 1807 00e0 00       		.byte	0
 1808 00e1 00       		.byte	0
 1809 00e2 11       		.uleb128 0x11
 1810 00e3 05       		.uleb128 0x5
 1811 00e4 00       		.byte	0
 1812 00e5 03       		.uleb128 0x3
 1813 00e6 0E       		.uleb128 0xe
 1814 00e7 3A       		.uleb128 0x3a
 1815 00e8 0B       		.uleb128 0xb
 1816 00e9 3B       		.uleb128 0x3b
 1817 00ea 0B       		.uleb128 0xb
 1818 00eb 49       		.uleb128 0x49
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 37


 1819 00ec 13       		.uleb128 0x13
 1820 00ed 02       		.uleb128 0x2
 1821 00ee 18       		.uleb128 0x18
 1822 00ef 00       		.byte	0
 1823 00f0 00       		.byte	0
 1824 00f1 12       		.uleb128 0x12
 1825 00f2 2E       		.uleb128 0x2e
 1826 00f3 01       		.byte	0x1
 1827 00f4 3F       		.uleb128 0x3f
 1828 00f5 19       		.uleb128 0x19
 1829 00f6 03       		.uleb128 0x3
 1830 00f7 0E       		.uleb128 0xe
 1831 00f8 3A       		.uleb128 0x3a
 1832 00f9 0B       		.uleb128 0xb
 1833 00fa 3B       		.uleb128 0x3b
 1834 00fb 0B       		.uleb128 0xb
 1835 00fc 27       		.uleb128 0x27
 1836 00fd 19       		.uleb128 0x19
 1837 00fe 11       		.uleb128 0x11
 1838 00ff 01       		.uleb128 0x1
 1839 0100 12       		.uleb128 0x12
 1840 0101 06       		.uleb128 0x6
 1841 0102 40       		.uleb128 0x40
 1842 0103 18       		.uleb128 0x18
 1843 0104 9642     		.uleb128 0x2116
 1844 0106 19       		.uleb128 0x19
 1845 0107 01       		.uleb128 0x1
 1846 0108 13       		.uleb128 0x13
 1847 0109 00       		.byte	0
 1848 010a 00       		.byte	0
 1849 010b 13       		.uleb128 0x13
 1850 010c 34       		.uleb128 0x34
 1851 010d 00       		.byte	0
 1852 010e 03       		.uleb128 0x3
 1853 010f 0E       		.uleb128 0xe
 1854 0110 3A       		.uleb128 0x3a
 1855 0111 0B       		.uleb128 0xb
 1856 0112 3B       		.uleb128 0x3b
 1857 0113 05       		.uleb128 0x5
 1858 0114 49       		.uleb128 0x49
 1859 0115 13       		.uleb128 0x13
 1860 0116 3F       		.uleb128 0x3f
 1861 0117 19       		.uleb128 0x19
 1862 0118 3C       		.uleb128 0x3c
 1863 0119 19       		.uleb128 0x19
 1864 011a 00       		.byte	0
 1865 011b 00       		.byte	0
 1866 011c 14       		.uleb128 0x14
 1867 011d 34       		.uleb128 0x34
 1868 011e 00       		.byte	0
 1869 011f 03       		.uleb128 0x3
 1870 0120 0E       		.uleb128 0xe
 1871 0121 3A       		.uleb128 0x3a
 1872 0122 0B       		.uleb128 0xb
 1873 0123 3B       		.uleb128 0x3b
 1874 0124 0B       		.uleb128 0xb
 1875 0125 49       		.uleb128 0x49
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 38


 1876 0126 13       		.uleb128 0x13
 1877 0127 3F       		.uleb128 0x3f
 1878 0128 19       		.uleb128 0x19
 1879 0129 02       		.uleb128 0x2
 1880 012a 18       		.uleb128 0x18
 1881 012b 00       		.byte	0
 1882 012c 00       		.byte	0
 1883 012d 15       		.uleb128 0x15
 1884 012e 21       		.uleb128 0x21
 1885 012f 00       		.byte	0
 1886 0130 49       		.uleb128 0x49
 1887 0131 13       		.uleb128 0x13
 1888 0132 2F       		.uleb128 0x2f
 1889 0133 05       		.uleb128 0x5
 1890 0134 00       		.byte	0
 1891 0135 00       		.byte	0
 1892 0136 16       		.uleb128 0x16
 1893 0137 34       		.uleb128 0x34
 1894 0138 00       		.byte	0
 1895 0139 03       		.uleb128 0x3
 1896 013a 08       		.uleb128 0x8
 1897 013b 3A       		.uleb128 0x3a
 1898 013c 0B       		.uleb128 0xb
 1899 013d 3B       		.uleb128 0x3b
 1900 013e 0B       		.uleb128 0xb
 1901 013f 49       		.uleb128 0x49
 1902 0140 13       		.uleb128 0x13
 1903 0141 3F       		.uleb128 0x3f
 1904 0142 19       		.uleb128 0x19
 1905 0143 02       		.uleb128 0x2
 1906 0144 18       		.uleb128 0x18
 1907 0145 00       		.byte	0
 1908 0146 00       		.byte	0
 1909 0147 00       		.byte	0
 1910              		.section	.debug_aranges,"",%progbits
 1911 0000 34000000 		.4byte	0x34
 1912 0004 0200     		.2byte	0x2
 1913 0006 00000000 		.4byte	.Ldebug_info0
 1914 000a 04       		.byte	0x4
 1915 000b 00       		.byte	0
 1916 000c 0000     		.2byte	0
 1917 000e 0000     		.2byte	0
 1918 0010 00000000 		.4byte	.LFB64
 1919 0014 B4020000 		.4byte	.LFE64-.LFB64
 1920 0018 00000000 		.4byte	.LFB65
 1921 001c 50000000 		.4byte	.LFE65-.LFB65
 1922 0020 00000000 		.4byte	.LFB66
 1923 0024 60020000 		.4byte	.LFE66-.LFB66
 1924 0028 00000000 		.4byte	.LFB67
 1925 002c 40000000 		.4byte	.LFE67-.LFB67
 1926 0030 00000000 		.4byte	0
 1927 0034 00000000 		.4byte	0
 1928              		.section	.debug_ranges,"",%progbits
 1929              	.Ldebug_ranges0:
 1930 0000 00000000 		.4byte	.LFB64
 1931 0004 B4020000 		.4byte	.LFE64
 1932 0008 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 39


 1933 000c 50000000 		.4byte	.LFE65
 1934 0010 00000000 		.4byte	.LFB66
 1935 0014 60020000 		.4byte	.LFE66
 1936 0018 00000000 		.4byte	.LFB67
 1937 001c 40000000 		.4byte	.LFE67
 1938 0020 00000000 		.4byte	0
 1939 0024 00000000 		.4byte	0
 1940              		.section	.debug_line,"",%progbits
 1941              	.Ldebug_line0:
 1942 0000 44020000 		.section	.debug_str,"MS",%progbits,1
 1942      02008B01 
 1942      00000201 
 1942      FB0E0D00 
 1942      01010101 
 1943              	.LASF31:
 1944 0000 76616C69 		.ascii	"valid\000"
 1944      6400
 1945              	.LASF37:
 1946 0006 6D6F6465 		.ascii	"model_id\000"
 1946      6C5F6964 
 1946      00
 1947              	.LASF68:
 1948 000f 766F6C74 		.ascii	"voltages\000"
 1948      61676573 
 1948      00
 1949              	.LASF36:
 1950 0018 73696D5F 		.ascii	"sim_id\000"
 1950      696400
 1951              	.LASF26:
 1952 001f 766F6C74 		.ascii	"voltage_solar\000"
 1952      6167655F 
 1952      736F6C61 
 1952      7200
 1953              	.LASF65:
 1954 002d 7379735F 		.ascii	"sys_settings_t\000"
 1954      73657474 
 1954      696E6773 
 1954      5F7400
 1955              	.LASF15:
 1956 003c 666C6F61 		.ascii	"float32\000"
 1956      74333200 
 1957              	.LASF56:
 1958 0044 63757272 		.ascii	"currentCountDownValue\000"
 1958      656E7443 
 1958      6F756E74 
 1958      446F776E 
 1958      56616C75 
 1959              	.LASF55:
 1960 005a 636F756E 		.ascii	"countDownValue\000"
 1960      74446F77 
 1960      6E56616C 
 1960      756500
 1961              	.LASF72:
 1962 0069 70726576 		.ascii	"prev_pos\000"
 1962      5F706F73 
 1962      00
 1963              	.LASF85:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 40


 1964 0072 68747470 		.ascii	"http_request\000"
 1964      5F726571 
 1964      75657374 
 1964      00
 1965              	.LASF20:
 1966 007f 73697A65 		.ascii	"sizetype\000"
 1966      74797065 
 1966      00
 1967              	.LASF63:
 1968 0088 65705F68 		.ascii	"ep_host\000"
 1968      6F737400 
 1969              	.LASF95:
 1970 0090 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1970      43313120 
 1970      352E342E 
 1970      31203230 
 1970      31363036 
 1971 00c3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1971      20726576 
 1971      6973696F 
 1971      6E203233 
 1971      37373135 
 1972 00f6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1972      66756E63 
 1972      74696F6E 
 1972      2D736563 
 1972      74696F6E 
 1973              	.LASF80:
 1974 011e 64617461 		.ascii	"data\000"
 1974      00
 1975              	.LASF28:
 1976 0123 766F6C74 		.ascii	"voltage_pressure\000"
 1976      6167655F 
 1976      70726573 
 1976      73757265 
 1976      00
 1977              	.LASF61:
 1978 0134 63686970 		.ascii	"chip_uniqueId\000"
 1978      5F756E69 
 1978      71756549 
 1978      6400
 1979              	.LASF42:
 1980 0142 65636E6F 		.ascii	"ecno\000"
 1980      00
 1981              	.LASF2:
 1982 0147 73686F72 		.ascii	"short int\000"
 1982      7420696E 
 1982      7400
 1983              	.LASF33:
 1984 0151 76616C75 		.ascii	"value\000"
 1984      6500
 1985              	.LASF12:
 1986 0157 75696E74 		.ascii	"uint16\000"
 1986      313600
 1987              	.LASF25:
 1988 015e 766F6C74 		.ascii	"voltage_battery\000"
 1988      6167655F 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 41


 1988      62617474 
 1988      65727900 
 1989              	.LASF78:
 1990 016e 64617461 		.ascii	"dataPointsInStack\000"
 1990      506F696E 
 1990      7473496E 
 1990      53746163 
 1990      6B00
 1991              	.LASF11:
 1992 0180 75696E74 		.ascii	"uint8\000"
 1992      3800
 1993              	.LASF41:
 1994 0186 72736370 		.ascii	"rscp\000"
 1994      00
 1995              	.LASF13:
 1996 018b 696E7431 		.ascii	"int16\000"
 1996      3600
 1997              	.LASF34:
 1998 0191 74696D65 		.ascii	"timeStamp\000"
 1998      5374616D 
 1998      7000
 1999              	.LASF29:
 2000 019b 766F6C74 		.ascii	"voltage_valve_pos\000"
 2000      6167655F 
 2000      76616C76 
 2000      655F706F 
 2000      7300
 2001              	.LASF96:
 2002 01ad 76616C76 		.ascii	"valve.c\000"
 2002      652E6300 
 2003              	.LASF16:
 2004 01b5 666C6F61 		.ascii	"float\000"
 2004      7400
 2005              	.LASF6:
 2006 01bb 6C6F6E67 		.ascii	"long long int\000"
 2006      206C6F6E 
 2006      6720696E 
 2006      7400
 2007              	.LASF18:
 2008 01c9 63686172 		.ascii	"char\000"
 2008      00
 2009              	.LASF23:
 2010 01ce 72656173 		.ascii	"reason\000"
 2010      6F6E00
 2011              	.LASF4:
 2012 01d5 6C6F6E67 		.ascii	"long int\000"
 2012      20696E74 
 2012      00
 2013              	.LASF77:
 2014 01de 62756666 		.ascii	"buffer_overflow\000"
 2014      65725F6F 
 2014      76657266 
 2014      6C6F7700 
 2015              	.LASF60:
 2016 01ee 6D6F6465 		.ascii	"modem_info\000"
 2016      6D5F696E 
 2016      666F00
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 42


 2017              	.LASF90:
 2018 01f9 616C6172 		.ascii	"alarmMeasure\000"
 2018      6D4D6561 
 2018      73757265 
 2018      00
 2019              	.LASF69:
 2020 0206 76616C76 		.ascii	"valve_test\000"
 2020      655F7465 
 2020      737400
 2021              	.LASF59:
 2022 0211 616C6172 		.ascii	"alarm\000"
 2022      6D00
 2023              	.LASF50:
 2024 0217 6D656173 		.ascii	"measure_time\000"
 2024      7572655F 
 2024      74696D65 
 2024      00
 2025              	.LASF74:
 2026 0224 706F7369 		.ascii	"position_desired\000"
 2026      74696F6E 
 2026      5F646573 
 2026      69726564 
 2026      00
 2027              	.LASF92:
 2028 0235 616C6172 		.ascii	"alarmSync\000"
 2028      6D53796E 
 2028      6300
 2029              	.LASF19:
 2030 023f 6C6F6E67 		.ascii	"long double\000"
 2030      20646F75 
 2030      626C6500 
 2031              	.LASF84:
 2032 024b 75706461 		.ascii	"updatable_parameters\000"
 2032      7461626C 
 2032      655F7061 
 2032      72616D65 
 2032      74657273 
 2033              	.LASF1:
 2034 0260 756E7369 		.ascii	"unsigned char\000"
 2034      676E6564 
 2034      20636861 
 2034      7200
 2035              	.LASF44:
 2036 026e 72737270 		.ascii	"rsrp\000"
 2036      00
 2037              	.LASF82:
 2038 0273 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2038      6D5F7374 
 2038      6172745F 
 2038      74696D65 
 2038      5F737461 
 2039              	.LASF79:
 2040 028a 64617461 		.ascii	"dataPointsInStackDesired\000"
 2040      506F696E 
 2040      7473496E 
 2040      53746163 
 2040      6B446573 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 43


 2041              	.LASF81:
 2042 02a3 6D6F6465 		.ascii	"modem_state\000"
 2042      6D5F7374 
 2042      61746500 
 2043              	.LASF0:
 2044 02af 7369676E 		.ascii	"signed char\000"
 2044      65642063 
 2044      68617200 
 2045              	.LASF70:
 2046 02bb 72656164 		.ascii	"read_Valve_pos\000"
 2046      5F56616C 
 2046      76655F70 
 2046      6F7300
 2047              	.LASF7:
 2048 02ca 6C6F6E67 		.ascii	"long long unsigned int\000"
 2048      206C6F6E 
 2048      6720756E 
 2048      7369676E 
 2048      65642069 
 2049              	.LASF89:
 2050 02e1 73797374 		.ascii	"system_settings\000"
 2050      656D5F73 
 2050      65747469 
 2050      6E677300 
 2051              	.LASF8:
 2052 02f1 756E7369 		.ascii	"unsigned int\000"
 2052      676E6564 
 2052      20696E74 
 2052      00
 2053              	.LASF35:
 2054 02fe 6B65795F 		.ascii	"key_value_t\000"
 2054      76616C75 
 2054      655F7400 
 2055              	.LASF40:
 2056 030a 72786C65 		.ascii	"rxlev\000"
 2056      7600
 2057              	.LASF51:
 2058 0310 73796E63 		.ascii	"sync_time\000"
 2058      5F74696D 
 2058      6500
 2059              	.LASF83:
 2060 031a 6D6F6465 		.ascii	"modem_stats\000"
 2060      6D5F7374 
 2060      61747300 
 2061              	.LASF91:
 2062 0326 74696D65 		.ascii	"timeToMeasure\000"
 2062      546F4D65 
 2062      61737572 
 2062      6500
 2063              	.LASF54:
 2064 0334 75706461 		.ascii	"updatable_parameters_t\000"
 2064      7461626C 
 2064      655F7061 
 2064      72616D65 
 2064      74657273 
 2065              	.LASF49:
 2066 034b 73696D5F 		.ascii	"sim_type\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 44


 2066      74797065 
 2066      00
 2067              	.LASF62:
 2068 0354 7379735F 		.ascii	"sys_info_t\000"
 2068      696E666F 
 2068      5F7400
 2069              	.LASF3:
 2070 035f 73686F72 		.ascii	"short unsigned int\000"
 2070      7420756E 
 2070      7369676E 
 2070      65642069 
 2070      6E7400
 2071              	.LASF45:
 2072 0372 74696D65 		.ascii	"time_to_network_connect\000"
 2072      5F746F5F 
 2072      6E657477 
 2072      6F726B5F 
 2072      636F6E6E 
 2073              	.LASF22:
 2074 038a 73746174 		.ascii	"status\000"
 2074      757300
 2075              	.LASF88:
 2076 0391 73797374 		.ascii	"system_info\000"
 2076      656D5F69 
 2076      6E666F00 
 2077              	.LASF46:
 2078 039d 74696D65 		.ascii	"time_to_acquire_ip\000"
 2078      5F746F5F 
 2078      61637175 
 2078      6972655F 
 2078      697000
 2079              	.LASF24:
 2080 03b0 74657374 		.ascii	"test_t\000"
 2080      5F7400
 2081              	.LASF98:
 2082 03b7 6D6F7665 		.ascii	"move_valve\000"
 2082      5F76616C 
 2082      766500
 2083              	.LASF32:
 2084 03c2 766F6C74 		.ascii	"voltage_t\000"
 2084      6167655F 
 2084      7400
 2085              	.LASF10:
 2086 03cc 696E7433 		.ascii	"int32_t\000"
 2086      325F7400 
 2087              	.LASF47:
 2088 03d4 6D6F6465 		.ascii	"modem_stats_t\000"
 2088      6D5F7374 
 2088      6174735F 
 2088      7400
 2089              	.LASF30:
 2090 03e2 766F6C74 		.ascii	"voltage_valve_pot_power\000"
 2090      6167655F 
 2090      76616C76 
 2090      655F706F 
 2090      745F706F 
 2091              	.LASF53:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 45


 2092 03fa 5F426F6F 		.ascii	"_Bool\000"
 2092      6C00
 2093              	.LASF94:
 2094 0400 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2094      546F5379 
 2094      636E5265 
 2094      6D6F7465 
 2094      50617261 
 2095              	.LASF66:
 2096 0417 74657374 		.ascii	"test\000"
 2096      00
 2097              	.LASF43:
 2098 041c 72737271 		.ascii	"rsrq\000"
 2098      00
 2099              	.LASF97:
 2100 0421 433A5C55 		.ascii	"C:\\Users\\dantz\\Documents\\GitHub\\notoriOS\\noto"
 2100      73657273 
 2100      5C64616E 
 2100      747A5C44 
 2100      6F63756D 
 2101 044e 72694F53 		.ascii	"riOS.cydsn\000"
 2101      2E637964 
 2101      736E00
 2102              	.LASF87:
 2103 0459 68747470 		.ascii	"http_route\000"
 2103      5F726F75 
 2103      746500
 2104              	.LASF5:
 2105 0464 6C6F6E67 		.ascii	"long unsigned int\000"
 2105      20756E73 
 2105      69676E65 
 2105      6420696E 
 2105      7400
 2106              	.LASF14:
 2107 0476 696E7433 		.ascii	"int32\000"
 2107      3200
 2108              	.LASF17:
 2109 047c 646F7562 		.ascii	"double\000"
 2109      6C6500
 2110              	.LASF76:
 2111 0483 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2111      52784275 
 2111      66666572 
 2111      00
 2112              	.LASF52:
 2113 0490 64656275 		.ascii	"debug_level\000"
 2113      675F6C65 
 2113      76656C00 
 2114              	.LASF39:
 2115 049c 6D6F6465 		.ascii	"modem_info_t\000"
 2115      6D5F696E 
 2115      666F5F74 
 2115      00
 2116              	.LASF57:
 2117 04a9 636F756E 		.ascii	"countDownType\000"
 2117      74446F77 
 2117      6E547970 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 46


 2117      6500
 2118              	.LASF75:
 2119 04b7 6C657665 		.ascii	"level_reading\000"
 2119      6C5F7265 
 2119      6164696E 
 2119      6700
 2120              	.LASF9:
 2121 04c5 5F5F696E 		.ascii	"__int32_t\000"
 2121      7433325F 
 2121      7400
 2122              	.LASF58:
 2123 04cf 636F756E 		.ascii	"countDownResetCondition\000"
 2123      74446F77 
 2123      6E526573 
 2123      6574436F 
 2123      6E646974 
 2124              	.LASF38:
 2125 04e7 696D6569 		.ascii	"imei\000"
 2125      00
 2126              	.LASF73:
 2127 04ec 76616C76 		.ascii	"valve_level_controller\000"
 2127      655F6C65 
 2127      76656C5F 
 2127      636F6E74 
 2127      726F6C6C 
 2128              	.LASF21:
 2129 0503 74657374 		.ascii	"test_name\000"
 2129      5F6E616D 
 2129      6500
 2130              	.LASF67:
 2131 050d 706F7369 		.ascii	"positions\000"
 2131      74696F6E 
 2131      7300
 2132              	.LASF64:
 2133 0517 65705F70 		.ascii	"ep_port\000"
 2133      6F727400 
 2134              	.LASF86:
 2135 051f 68747470 		.ascii	"http_body\000"
 2135      5F626F64 
 2135      7900
 2136              	.LASF48:
 2137 0529 6E6F6465 		.ascii	"node_type\000"
 2137      5F747970 
 2137      6500
 2138              	.LASF27:
 2139 0533 766F6C74 		.ascii	"voltage_charge_current\000"
 2139      6167655F 
 2139      63686172 
 2139      67655F63 
 2139      75727265 
 2140              	.LASF93:
 2141 054a 74696D65 		.ascii	"timeToSync\000"
 2141      546F5379 
 2141      6E6300
 2142              	.LASF71:
 2143 0555 72656164 		.ascii	"readings\000"
 2143      696E6773 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cc5BMuiq.s 			page 47


 2143      00
 2144              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
