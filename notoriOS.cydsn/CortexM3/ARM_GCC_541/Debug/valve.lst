ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"valve.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.section	.rodata
  44              		.align	2
  45              	.LC0:
  46 0000 54455354 		.ascii	"TEST_VALVE\000"
  46      5F56414C 
  46      564500
  47              		.global	__aeabi_f2d
  48 000b 00       		.align	2
  49              	.LC1:
  50 000c 6F70656E 		.ascii	"open_voltage:%f:::closed_voltage:%f:::pot_voltage:%"
  50      5F766F6C 
  50      74616765 
  50      3A25663A 
  50      3A3A636C 
  51 003f 663A3A3A 		.ascii	"f::::positions:%f:%f:%f:%f:%f:%f:%f:%f\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 2


  51      3A706F73 
  51      6974696F 
  51      6E733A25 
  51      663A2566 
  52 0066 0000     		.align	2
  53              	.LC2:
  54 0068 76616C76 		.ascii	"valve jammed or battery dead\000"
  54      65206A61 
  54      6D6D6564 
  54      206F7220 
  54      62617474 
  55              		.section	.text.valve_test,"ax",%progbits
  56              		.align	2
  57              		.global	valve_test
  58              		.thumb
  59              		.thumb_func
  60              		.type	valve_test, %function
  61              	valve_test:
  62              	.LFB64:
  63              		.file 1 "valve.c"
   1:valve.c       **** #include "valve.h"
   2:valve.c       **** #include "notoriOS.h"
   3:valve.c       **** 
   4:valve.c       **** // throughout, the percentages recorded in reference to the valve position ought to be
   5:valve.c       **** // percent open-ness, not percent closed
   6:valve.c       **** 
   7:valve.c       **** test_t valve_test(){
  64              		.loc 1 7 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 1160
  67              		@ frame_needed = 1, uses_anonymous_args = 0
  68 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
  69              		.cfi_def_cfa_offset 32
  70              		.cfi_offset 4, -32
  71              		.cfi_offset 5, -28
  72              		.cfi_offset 7, -24
  73              		.cfi_offset 8, -20
  74              		.cfi_offset 9, -16
  75              		.cfi_offset 10, -12
  76              		.cfi_offset 11, -8
  77              		.cfi_offset 14, -4
  78 0004 ADF5C06D 		sub	sp, sp, #1536
  79              		.cfi_def_cfa_offset 1568
  80 0008 5EAF     		add	r7, sp, #376
  81              		.cfi_def_cfa 7, 1192
  82 000a 07F15C03 		add	r3, r7, #92
  83 000e 1860     		str	r0, [r3]
   8:valve.c       **** 
   9:valve.c       ****         // Test  downstreamlevel sensor
  10:valve.c       ****     test_t t_level_sensor = downstream_level_sensor_test();  
  84              		.loc 1 10 0
  85 0010 07F53A73 		add	r3, r7, #744
  86 0014 1846     		mov	r0, r3
  87 0016 FFF7FEFF 		bl	downstream_level_sensor_test
  11:valve.c       ****     printTestStatus(t_level_sensor);
  88              		.loc 1 11 0
  89 001a 07F53A74 		add	r4, r7, #744
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 3


  90 001e 6846     		mov	r0, sp
  91 0020 04F11003 		add	r3, r4, #16
  92 0024 40F27112 		movw	r2, #369
  93 0028 1946     		mov	r1, r3
  94 002a FFF7FEFF 		bl	memcpy
  95 002e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
  96 0032 FFF7FEFF 		bl	printTestStatus
  12:valve.c       ****     
  13:valve.c       ****     
  14:valve.c       ****     // activate 12V battery
  15:valve.c       ****     Pressure_Voltage_Enable_Write(ON);
  97              		.loc 1 15 0
  98 0036 0120     		movs	r0, #1
  99 0038 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  16:valve.c       **** 
  17:valve.c       ****     
  18:valve.c       ****      
  19:valve.c       ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
  20:valve.c       ****     test.status = 0; // set test status to zero
 100              		.loc 1 20 0
 101 003c 07F5B273 		add	r3, r7, #356
 102 0040 0022     		movs	r2, #0
 103 0042 83F88020 		strb	r2, [r3, #128]
  21:valve.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_VALVE");
 104              		.loc 1 21 0
 105 0046 07F5B273 		add	r3, r7, #356
 106 004a A04A     		ldr	r2, .L5
 107 004c 07CA     		ldmia	r2, {r0, r1, r2}
 108 004e 03C3     		stmia	r3!, {r0, r1}
 109 0050 1A80     		strh	r2, [r3]	@ movhi
 110 0052 0233     		adds	r3, r3, #2
 111 0054 120C     		lsrs	r2, r2, #16
 112 0056 1A70     		strb	r2, [r3]
  22:valve.c       **** 
  23:valve.c       ****     float32 positions[8];
  24:valve.c       ****     
  25:valve.c       ****     voltage_t voltages[8];
  26:valve.c       ****     
  27:valve.c       ****     // all the way open
  28:valve.c       ****     move_valve(1);
 113              		.loc 1 28 0
 114 0058 4FF07E50 		mov	r0, #1065353216
 115 005c FFF7FEFF 		bl	move_valve
  29:valve.c       ****     // take a position reading to verify that it's all the way open (later)
  30:valve.c       ****     positions[0] = read_Valve_pos();
 116              		.loc 1 30 0
 117 0060 FFF7FEFF 		bl	read_Valve_pos
 118 0064 0246     		mov	r2, r0
 119 0066 07F5A273 		add	r3, r7, #324
 120 006a 1A60     		str	r2, [r3]	@ float
  31:valve.c       ****     voltages[0] = voltage_take_readings();
 121              		.loc 1 31 0
 122 006c 07F16404 		add	r4, r7, #100
 123 0070 07F13803 		add	r3, r7, #56
 124 0074 1846     		mov	r0, r3
 125 0076 FFF7FEFF 		bl	voltage_take_readings
 126 007a 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 4


 127 007e 1D46     		mov	r5, r3
 128 0080 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 129 0082 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 130 0084 95E80700 		ldmia	r5, {r0, r1, r2}
 131 0088 84E80700 		stmia	r4, {r0, r1, r2}
  32:valve.c       ****     // do the same for closed
  33:valve.c       ****     test.status = move_valve(0);
 132              		.loc 1 33 0
 133 008c 4FF00000 		mov	r0, #0
 134 0090 FFF7FEFF 		bl	move_valve
 135 0094 0346     		mov	r3, r0
 136 0096 1A46     		mov	r2, r3
 137 0098 07F5B273 		add	r3, r7, #356
 138 009c 83F88020 		strb	r2, [r3, #128]
  34:valve.c       ****     // take a position reading to verify that it's all the way closed (later)
  35:valve.c       ****     positions[1] = read_Valve_pos();
 139              		.loc 1 35 0
 140 00a0 FFF7FEFF 		bl	read_Valve_pos
 141 00a4 0246     		mov	r2, r0
 142 00a6 07F5A273 		add	r3, r7, #324
 143 00aa 5A60     		str	r2, [r3, #4]	@ float
  36:valve.c       ****     voltages[1] = voltage_take_readings();
 144              		.loc 1 36 0
 145 00ac 07F16404 		add	r4, r7, #100
 146 00b0 07F13803 		add	r3, r7, #56
 147 00b4 1846     		mov	r0, r3
 148 00b6 FFF7FEFF 		bl	voltage_take_readings
 149 00ba 07F13803 		add	r3, r7, #56
 150 00be 1C34     		adds	r4, r4, #28
 151 00c0 1D46     		mov	r5, r3
 152 00c2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 153 00c4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 154 00c6 95E80700 		ldmia	r5, {r0, r1, r2}
 155 00ca 84E80700 		stmia	r4, {r0, r1, r2}
  37:valve.c       ****     if (test.status){ // don't do this if it's jammed (didn't close successfully)
 156              		.loc 1 37 0
 157 00ce 07F5B273 		add	r3, r7, #356
 158 00d2 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 159 00d6 002B     		cmp	r3, #0
 160 00d8 3AD0     		beq	.L2
  38:valve.c       ****         move_valve(0.125);
 161              		.loc 1 38 0
 162 00da 4FF07850 		mov	r0, #1040187392
 163 00de FFF7FEFF 		bl	move_valve
  39:valve.c       ****         positions[2] = read_Valve_pos();
 164              		.loc 1 39 0
 165 00e2 FFF7FEFF 		bl	read_Valve_pos
 166 00e6 0246     		mov	r2, r0
 167 00e8 07F5A273 		add	r3, r7, #324
 168 00ec 9A60     		str	r2, [r3, #8]	@ float
  40:valve.c       ****         
  41:valve.c       ****         move_valve(0.25);
 169              		.loc 1 41 0
 170 00ee 4FF07A50 		mov	r0, #1048576000
 171 00f2 FFF7FEFF 		bl	move_valve
  42:valve.c       ****         positions[3] = read_Valve_pos();
 172              		.loc 1 42 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 5


 173 00f6 FFF7FEFF 		bl	read_Valve_pos
 174 00fa 0246     		mov	r2, r0
 175 00fc 07F5A273 		add	r3, r7, #324
 176 0100 DA60     		str	r2, [r3, #12]	@ float
  43:valve.c       ****         
  44:valve.c       ****         move_valve(0.375);
 177              		.loc 1 44 0
 178 0102 4FF07B50 		mov	r0, #1052770304
 179 0106 FFF7FEFF 		bl	move_valve
  45:valve.c       ****         positions[4] = read_Valve_pos();
 180              		.loc 1 45 0
 181 010a FFF7FEFF 		bl	read_Valve_pos
 182 010e 0246     		mov	r2, r0
 183 0110 07F5A273 		add	r3, r7, #324
 184 0114 1A61     		str	r2, [r3, #16]	@ float
  46:valve.c       **** 
  47:valve.c       ****         move_valve(0.5);
 185              		.loc 1 47 0
 186 0116 4FF07C50 		mov	r0, #1056964608
 187 011a FFF7FEFF 		bl	move_valve
  48:valve.c       ****         positions[5] = read_Valve_pos();
 188              		.loc 1 48 0
 189 011e FFF7FEFF 		bl	read_Valve_pos
 190 0122 0246     		mov	r2, r0
 191 0124 07F5A273 		add	r3, r7, #324
 192 0128 5A61     		str	r2, [r3, #20]	@ float
  49:valve.c       **** 
  50:valve.c       ****         move_valve(0.675);
 193              		.loc 1 50 0
 194 012a 6948     		ldr	r0, .L5+4
 195 012c FFF7FEFF 		bl	move_valve
  51:valve.c       ****         positions[6] = read_Valve_pos();
 196              		.loc 1 51 0
 197 0130 FFF7FEFF 		bl	read_Valve_pos
 198 0134 0246     		mov	r2, r0
 199 0136 07F5A273 		add	r3, r7, #324
 200 013a 9A61     		str	r2, [r3, #24]	@ float
  52:valve.c       **** 
  53:valve.c       ****         move_valve(0.75);
 201              		.loc 1 53 0
 202 013c 4FF07D50 		mov	r0, #1061158912
 203 0140 FFF7FEFF 		bl	move_valve
  54:valve.c       ****         positions[7] = read_Valve_pos();
 204              		.loc 1 54 0
 205 0144 FFF7FEFF 		bl	read_Valve_pos
 206 0148 0246     		mov	r2, r0
 207 014a 07F5A273 		add	r3, r7, #324
 208 014e DA61     		str	r2, [r3, #28]	@ float
 209              	.L2:
  55:valve.c       ****     }
  56:valve.c       **** 
  57:valve.c       ****     // in test reason report the sequence of positions
  58:valve.c       ****     snprintf(test.reason,sizeof(test.reason),"open_voltage:%f:::closed_voltage:%f:::pot_voltage:%f:
  59:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 210              		.loc 1 59 0
 211 0150 07F16403 		add	r3, r7, #100
 212 0154 1B69     		ldr	r3, [r3, #16]	@ float
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 6


  58:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 213              		.loc 1 58 0
 214 0156 1846     		mov	r0, r3
 215 0158 FFF7FEFF 		bl	__aeabi_f2d
 216 015c C7E90C01 		strd	r0, [r7, #48]
 217              		.loc 1 59 0
 218 0160 07F16403 		add	r3, r7, #100
 219 0164 DB6A     		ldr	r3, [r3, #44]	@ float
  58:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 220              		.loc 1 58 0
 221 0166 1846     		mov	r0, r3
 222 0168 FFF7FEFF 		bl	__aeabi_f2d
 223 016c C7E90A01 		strd	r0, [r7, #40]
 224              		.loc 1 59 0
 225 0170 07F16403 		add	r3, r7, #100
 226 0174 5B69     		ldr	r3, [r3, #20]	@ float
  58:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 227              		.loc 1 58 0
 228 0176 1846     		mov	r0, r3
 229 0178 FFF7FEFF 		bl	__aeabi_f2d
 230 017c C7E90801 		strd	r0, [r7, #32]
  60:valve.c       ****         positions[0],positions[1],positions[2],positions[3],
 231              		.loc 1 60 0
 232 0180 07F5A273 		add	r3, r7, #324
 233 0184 1B68     		ldr	r3, [r3]	@ float
  58:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 234              		.loc 1 58 0
 235 0186 1846     		mov	r0, r3
 236 0188 FFF7FEFF 		bl	__aeabi_f2d
 237 018c C7E90601 		strd	r0, [r7, #24]
 238              		.loc 1 60 0
 239 0190 07F5A273 		add	r3, r7, #324
 240 0194 5B68     		ldr	r3, [r3, #4]	@ float
  58:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 241              		.loc 1 58 0
 242 0196 1846     		mov	r0, r3
 243 0198 FFF7FEFF 		bl	__aeabi_f2d
 244 019c C7E90401 		strd	r0, [r7, #16]
 245              		.loc 1 60 0
 246 01a0 07F5A273 		add	r3, r7, #324
 247 01a4 9B68     		ldr	r3, [r3, #8]	@ float
  58:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 248              		.loc 1 58 0
 249 01a6 1846     		mov	r0, r3
 250 01a8 FFF7FEFF 		bl	__aeabi_f2d
 251 01ac C7E90201 		strd	r0, [r7, #8]
 252              		.loc 1 60 0
 253 01b0 07F5A273 		add	r3, r7, #324
 254 01b4 DB68     		ldr	r3, [r3, #12]	@ float
  58:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 255              		.loc 1 58 0
 256 01b6 1846     		mov	r0, r3
 257 01b8 FFF7FEFF 		bl	__aeabi_f2d
 258 01bc C7E90001 		strd	r0, [r7]
  61:valve.c       ****         positions[4],positions[5],positions[6],positions[7]
 259              		.loc 1 61 0
 260 01c0 07F5A273 		add	r3, r7, #324
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 7


 261 01c4 1B69     		ldr	r3, [r3, #16]	@ float
  58:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 262              		.loc 1 58 0
 263 01c6 1846     		mov	r0, r3
 264 01c8 FFF7FEFF 		bl	__aeabi_f2d
 265 01cc 8246     		mov	r10, r0
 266 01ce 8B46     		mov	fp, r1
 267              		.loc 1 61 0
 268 01d0 07F5A273 		add	r3, r7, #324
 269 01d4 5B69     		ldr	r3, [r3, #20]	@ float
  58:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 270              		.loc 1 58 0
 271 01d6 1846     		mov	r0, r3
 272 01d8 FFF7FEFF 		bl	__aeabi_f2d
 273 01dc 8046     		mov	r8, r0
 274 01de 8946     		mov	r9, r1
 275              		.loc 1 61 0
 276 01e0 07F5A273 		add	r3, r7, #324
 277 01e4 9B69     		ldr	r3, [r3, #24]	@ float
  58:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 278              		.loc 1 58 0
 279 01e6 1846     		mov	r0, r3
 280 01e8 FFF7FEFF 		bl	__aeabi_f2d
 281 01ec 0446     		mov	r4, r0
 282 01ee 0D46     		mov	r5, r1
 283              		.loc 1 61 0
 284 01f0 07F5A273 		add	r3, r7, #324
 285 01f4 DB69     		ldr	r3, [r3, #28]	@ float
  58:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 286              		.loc 1 58 0
 287 01f6 1846     		mov	r0, r3
 288 01f8 FFF7FEFF 		bl	__aeabi_f2d
 289 01fc 0A46     		mov	r2, r1
 290 01fe 0146     		mov	r1, r0
 291 0200 07F5B273 		add	r3, r7, #356
 292 0204 8133     		adds	r3, r3, #129
 293 0206 CDE91412 		strd	r1, [sp, #80]
 294 020a CDE91245 		strd	r4, [sp, #72]
 295 020e CDE91089 		strd	r8, [sp, #64]
 296 0212 CDE90EAB 		strd	r10, [sp, #56]
 297 0216 D7E90012 		ldrd	r1, [r7]
 298 021a CDE90C12 		strd	r1, [sp, #48]
 299 021e D7E90212 		ldrd	r1, [r7, #8]
 300 0222 CDE90A12 		strd	r1, [sp, #40]
 301 0226 D7E90412 		ldrd	r1, [r7, #16]
 302 022a CDE90812 		strd	r1, [sp, #32]
 303 022e D7E90612 		ldrd	r1, [r7, #24]
 304 0232 CDE90612 		strd	r1, [sp, #24]
 305 0236 D7E90812 		ldrd	r1, [r7, #32]
 306 023a CDE90412 		strd	r1, [sp, #16]
 307 023e D7E90A12 		ldrd	r1, [r7, #40]
 308 0242 CDE90212 		strd	r1, [sp, #8]
 309 0246 D7E90C12 		ldrd	r1, [r7, #48]
 310 024a CDE90012 		strd	r1, [sp]
 311 024e 214A     		ldr	r2, .L5+8
 312 0250 4FF48071 		mov	r1, #256
 313 0254 1846     		mov	r0, r3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 8


 314 0256 FFF7FEFF 		bl	snprintf
  62:valve.c       ****     );
  63:valve.c       ****    
  64:valve.c       ****     
  65:valve.c       ****     if (!test.status){
 315              		.loc 1 65 0
 316 025a 07F5B273 		add	r3, r7, #356
 317 025e 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 318 0262 002B     		cmp	r3, #0
 319 0264 10D1     		bne	.L3
  66:valve.c       ****         snprintf(test.reason,sizeof(test.reason),"valve jammed or battery dead" );
 320              		.loc 1 66 0
 321 0266 07F5B273 		add	r3, r7, #356
 322 026a 8133     		adds	r3, r3, #129
 323 026c 1A4A     		ldr	r2, .L5+12
 324 026e 1D46     		mov	r5, r3
 325 0270 1446     		mov	r4, r2
 326 0272 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 327 0274 2860     		str	r0, [r5]	@ unaligned
 328 0276 6960     		str	r1, [r5, #4]	@ unaligned
 329 0278 AA60     		str	r2, [r5, #8]	@ unaligned
 330 027a EB60     		str	r3, [r5, #12]	@ unaligned
 331 027c 07CC     		ldmia	r4!, {r0, r1, r2}
 332 027e 2861     		str	r0, [r5, #16]	@ unaligned
 333 0280 6961     		str	r1, [r5, #20]	@ unaligned
 334 0282 AA61     		str	r2, [r5, #24]	@ unaligned
 335 0284 2378     		ldrb	r3, [r4]
 336 0286 2B77     		strb	r3, [r5, #28]
 337              	.L3:
  67:valve.c       ****     }
  68:valve.c       ****     // deactivate 12V battery
  69:valve.c       ****     Pressure_Voltage_Enable_Write(OFF);
 338              		.loc 1 69 0
 339 0288 0020     		movs	r0, #0
 340 028a FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  70:valve.c       ****     
  71:valve.c       ****     
  72:valve.c       ****     //just for now since I can't get the modem to error in the way I want it to
  73:valve.c       ****     valve_level_controller(level_sensor_take_reading().level_reading);
 341              		.loc 1 73 0
 342 028e 07F26C43 		addw	r3, r7, #1132
 343 0292 1846     		mov	r0, r3
 344 0294 FFF7FEFF 		bl	level_sensor_take_reading
 345 0298 B7F98234 		ldrsh	r3, [r7, #1154]
 346 029c 1846     		mov	r0, r3
 347 029e FFF7FEFF 		bl	valve_level_controller
  74:valve.c       ****     
  75:valve.c       ****     return test;
 348              		.loc 1 75 0
 349 02a2 07F15C03 		add	r3, r7, #92
 350 02a6 1A68     		ldr	r2, [r3]
 351 02a8 07F5B273 		add	r3, r7, #356
 352 02ac 1046     		mov	r0, r2
 353 02ae 1946     		mov	r1, r3
 354 02b0 40F28113 		movw	r3, #385
 355 02b4 1A46     		mov	r2, r3
 356 02b6 FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 9


  76:valve.c       **** 
  77:valve.c       **** }
 357              		.loc 1 77 0
 358 02ba 07F15C03 		add	r3, r7, #92
 359 02be 1868     		ldr	r0, [r3]
 360 02c0 07F59167 		add	r7, r7, #1160
 361              		.cfi_def_cfa_offset 32
 362 02c4 BD46     		mov	sp, r7
 363              		.cfi_def_cfa_register 13
 364              		@ sp needed
 365 02c6 BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 366              	.L6:
 367 02ca 00BF     		.align	2
 368              	.L5:
 369 02cc 00000000 		.word	.LC0
 370 02d0 CDCC2C3F 		.word	1059900621
 371 02d4 0C000000 		.word	.LC1
 372 02d8 68000000 		.word	.LC2
 373              		.cfi_endproc
 374              	.LFE64:
 375              		.size	valve_test, .-valve_test
 376              		.global	__aeabi_fdiv
 377              		.global	__aeabi_ddiv
 378              		.global	__aeabi_d2f
 379              		.section	.text.read_Valve_pos,"ax",%progbits
 380              		.align	2
 381              		.global	read_Valve_pos
 382              		.thumb
 383              		.thumb_func
 384              		.type	read_Valve_pos, %function
 385              	read_Valve_pos:
 386              	.LFB65:
  78:valve.c       **** 
  79:valve.c       **** float32 read_Valve_pos(){
 387              		.loc 1 79 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 32
 390              		@ frame_needed = 1, uses_anonymous_args = 0
 391 0000 90B5     		push	{r4, r7, lr}
 392              		.cfi_def_cfa_offset 12
 393              		.cfi_offset 4, -12
 394              		.cfi_offset 7, -8
 395              		.cfi_offset 14, -4
 396 0002 89B0     		sub	sp, sp, #36
 397              		.cfi_def_cfa_offset 48
 398 0004 00AF     		add	r7, sp, #0
 399              		.cfi_def_cfa_register 7
  80:valve.c       ****     // take analog voltage readings
  81:valve.c       ****     voltage_t readings = voltage_take_readings();
 400              		.loc 1 81 0
 401 0006 3B1D     		adds	r3, r7, #4
 402 0008 1846     		mov	r0, r3
 403 000a FFF7FEFF 		bl	voltage_take_readings
  82:valve.c       ****     return (readings.voltage_valve_pos/readings.voltage_valve_pot_power)/0.94; // divide because of
 404              		.loc 1 82 0
 405 000e 7B69     		ldr	r3, [r7, #20]	@ float
 406 0010 BA69     		ldr	r2, [r7, #24]	@ float
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 10


 407 0012 1146     		mov	r1, r2
 408 0014 1846     		mov	r0, r3
 409 0016 FFF7FEFF 		bl	__aeabi_fdiv
 410 001a 0346     		mov	r3, r0
 411 001c 1846     		mov	r0, r3
 412 001e FFF7FEFF 		bl	__aeabi_f2d
 413 0022 09A3     		adr	r3, .L9
 414 0024 D3E90023 		ldrd	r2, [r3]
 415 0028 FFF7FEFF 		bl	__aeabi_ddiv
 416 002c 0346     		mov	r3, r0
 417 002e 0C46     		mov	r4, r1
 418 0030 1846     		mov	r0, r3
 419 0032 2146     		mov	r1, r4
 420 0034 FFF7FEFF 		bl	__aeabi_d2f
 421 0038 0346     		mov	r3, r0
  83:valve.c       ****     // this code is written for the blue rotating dynaquip valve, not the linear actuator
  84:valve.c       ****     
  85:valve.c       **** }
 422              		.loc 1 85 0
 423 003a 1846     		mov	r0, r3
 424 003c 2437     		adds	r7, r7, #36
 425              		.cfi_def_cfa_offset 12
 426 003e BD46     		mov	sp, r7
 427              		.cfi_def_cfa_register 13
 428              		@ sp needed
 429 0040 90BD     		pop	{r4, r7, pc}
 430              	.L10:
 431 0042 00BFAFF3 		.align	3
 431      0080
 432              	.L9:
 433 0048 14AE47E1 		.word	-515396076
 434 004c 7A14EE3F 		.word	1072567418
 435              		.cfi_endproc
 436              	.LFE65:
 437              		.size	read_Valve_pos, .-read_Valve_pos
 438              		.global	__aeabi_fsub
 439              		.global	__aeabi_dcmplt
 440              		.global	__aeabi_fcmpgt
 441              		.section	.rodata
 442 0085 000000   		.align	2
 443              	.LC3:
 444 0088 6D6F7665 		.ascii	"move_valve failed ::: requested_position: %f\000"
 444      5F76616C 
 444      76652066 
 444      61696C65 
 444      64203A3A 
 445              		.global	__aeabi_dcmpgt
 446              		.global	__aeabi_fcmplt
 447 00b5 000000   		.align	2
 448              	.LC4:
 449 00b8 6D6F7665 		.ascii	"move_valve failed ::: nrequested_position: %f\000"
 449      5F76616C 
 449      76652066 
 449      61696C65 
 449      64203A3A 
 450              		.section	.text.move_valve,"ax",%progbits
 451              		.align	2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 11


 452              		.global	move_valve
 453              		.thumb
 454              		.thumb_func
 455              		.type	move_valve, %function
 456              	move_valve:
 457              	.LFB66:
  86:valve.c       **** 
  87:valve.c       **** uint8 move_valve(float32 position_desired){
 458              		.loc 1 87 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 16
 461              		@ frame_needed = 1, uses_anonymous_args = 0
 462 0000 90B5     		push	{r4, r7, lr}
 463              		.cfi_def_cfa_offset 12
 464              		.cfi_offset 4, -12
 465              		.cfi_offset 7, -8
 466              		.cfi_offset 14, -4
 467 0002 85B0     		sub	sp, sp, #20
 468              		.cfi_def_cfa_offset 32
 469 0004 00AF     		add	r7, sp, #0
 470              		.cfi_def_cfa_register 7
 471 0006 7860     		str	r0, [r7, #4]	@ float
  88:valve.c       ****     
  89:valve.c       ****     // activate 12V battery
  90:valve.c       ****     Pressure_Voltage_Enable_Write(ON);
 472              		.loc 1 90 0
 473 0008 0120     		movs	r0, #1
 474 000a FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  91:valve.c       ****     
  92:valve.c       ****     // this uses "go until you're there" rather than pulsing and checking
  93:valve.c       ****     // pulsing and checking could set up oscillations in the controller
  94:valve.c       ****     // pulsing and checking would only be necessary if measurement consumed a similar amount of tim
  95:valve.c       ****     
  96:valve.c       ****     float32 prev_pos =  1.5;
 475              		.loc 1 96 0
 476 000e 4FF07F53 		mov	r3, #1069547520
 477 0012 FB60     		str	r3, [r7, #12]	@ float
  97:valve.c       ****     
  98:valve.c       ****     // are we already there? (wihtin a tolerance)
  99:valve.c       ****     if ( fabs(read_Valve_pos() - position_desired) < 0.05){
 478              		.loc 1 99 0
 479 0014 FFF7FEFF 		bl	read_Valve_pos
 480 0018 0346     		mov	r3, r0
 481 001a 7968     		ldr	r1, [r7, #4]	@ float
 482 001c 1846     		mov	r0, r3
 483 001e FFF7FEFF 		bl	__aeabi_fsub
 484 0022 0346     		mov	r3, r0
 485 0024 23F00043 		bic	r3, r3, #-2147483648
 486 0028 1846     		mov	r0, r3
 487 002a FFF7FEFF 		bl	__aeabi_f2d
 488 002e 84A3     		adr	r3, .L36
 489 0030 D3E90023 		ldrd	r2, [r3]
 490 0034 FFF7FEFF 		bl	__aeabi_dcmplt
 491 0038 0346     		mov	r3, r0
 492 003a 002B     		cmp	r3, #0
 493 003c 01D0     		beq	.L34
 100:valve.c       ****         return 1;
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 12


 494              		.loc 1 100 0
 495 003e 0123     		movs	r3, #1
 496 0040 FAE0     		b	.L14
 497              	.L34:
 101:valve.c       ****     }
 102:valve.c       **** 
 103:valve.c       ****     // is the desired position more closed?
 104:valve.c       ****     if( read_Valve_pos() > position_desired){
 498              		.loc 1 104 0
 499 0042 FFF7FEFF 		bl	read_Valve_pos
 500 0046 0346     		mov	r3, r0
 501 0048 7968     		ldr	r1, [r7, #4]	@ float
 502 004a 1846     		mov	r0, r3
 503 004c FFF7FEFF 		bl	__aeabi_fcmpgt
 504 0050 0346     		mov	r3, r0
 505 0052 002B     		cmp	r3, #0
 506 0054 71D0     		beq	.L35
 105:valve.c       ****         
 106:valve.c       ****         // turn the closing pin high
 107:valve.c       ****         Power_VDD2_Write(1u);
 507              		.loc 1 107 0
 508 0056 0120     		movs	r0, #1
 509 0058 FFF7FEFF 		bl	Power_VDD2_Write
 108:valve.c       **** 
 109:valve.c       ****         
 110:valve.c       ****         // while loop
 111:valve.c       ****         // continuously measure the position (measurement should be much faster than movement)
 112:valve.c       ****         // once we're within 5 percent of desired (can tighten this later) exit this do-while loop
 113:valve.c       ****         while(fabs(read_Valve_pos() - position_desired) > 0.03){
 510              		.loc 1 113 0
 511 005c 2FE0     		b	.L17
 512              	.L19:
 114:valve.c       ****             prev_pos = read_Valve_pos();
 513              		.loc 1 114 0
 514 005e FFF7FEFF 		bl	read_Valve_pos
 515 0062 F860     		str	r0, [r7, #12]	@ float
 115:valve.c       ****             CyDelay(1000u);
 516              		.loc 1 115 0
 517 0064 4FF47A70 		mov	r0, #1000
 518 0068 FFF7FEFF 		bl	CyDelay
 116:valve.c       ****             // are we moving?
 117:valve.c       ****             if (fabs(prev_pos - read_Valve_pos()) < 0.0005){
 519              		.loc 1 117 0
 520 006c FFF7FEFF 		bl	read_Valve_pos
 521 0070 0346     		mov	r3, r0
 522 0072 1946     		mov	r1, r3
 523 0074 F868     		ldr	r0, [r7, #12]	@ float
 524 0076 FFF7FEFF 		bl	__aeabi_fsub
 525 007a 0346     		mov	r3, r0
 526 007c 23F00043 		bic	r3, r3, #-2147483648
 527 0080 1846     		mov	r0, r3
 528 0082 FFF7FEFF 		bl	__aeabi_f2d
 529 0086 70A3     		adr	r3, .L36+8
 530 0088 D3E90023 		ldrd	r2, [r3]
 531 008c FFF7FEFF 		bl	__aeabi_dcmplt
 532 0090 0346     		mov	r3, r0
 533 0092 002B     		cmp	r3, #0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 13


 534 0094 00D1     		bne	.L29
 535 0096 12E0     		b	.L17
 536              	.L29:
 118:valve.c       ****                 // turn the closing pin low
 119:valve.c       ****                 Power_VDD2_Write(0u);
 537              		.loc 1 119 0
 538 0098 0020     		movs	r0, #0
 539 009a FFF7FEFF 		bl	Power_VDD2_Write
 120:valve.c       ****                 // deactivate 12V battery
 121:valve.c       ****                 Pressure_Voltage_Enable_Write(OFF);
 540              		.loc 1 121 0
 541 009e 0020     		movs	r0, #0
 542 00a0 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 122:valve.c       ****                 printNotif(NOTIF_TYPE_ERROR, "move_valve failed ::: requested_position: %f", positi
 543              		.loc 1 122 0
 544 00a4 7868     		ldr	r0, [r7, #4]	@ float
 545 00a6 FFF7FEFF 		bl	__aeabi_f2d
 546 00aa 0346     		mov	r3, r0
 547 00ac 0C46     		mov	r4, r1
 548 00ae 1A46     		mov	r2, r3
 549 00b0 2346     		mov	r3, r4
 550 00b2 6949     		ldr	r1, .L36+24
 551 00b4 0220     		movs	r0, #2
 552 00b6 FFF7FEFF 		bl	printNotif
 123:valve.c       ****                 return 0;
 553              		.loc 1 123 0
 554 00ba 0023     		movs	r3, #0
 555 00bc BCE0     		b	.L14
 556              	.L17:
 113:valve.c       ****             prev_pos = read_Valve_pos();
 557              		.loc 1 113 0
 558 00be FFF7FEFF 		bl	read_Valve_pos
 559 00c2 0346     		mov	r3, r0
 560 00c4 7968     		ldr	r1, [r7, #4]	@ float
 561 00c6 1846     		mov	r0, r3
 562 00c8 FFF7FEFF 		bl	__aeabi_fsub
 563 00cc 0346     		mov	r3, r0
 564 00ce 23F00043 		bic	r3, r3, #-2147483648
 565 00d2 1846     		mov	r0, r3
 566 00d4 FFF7FEFF 		bl	__aeabi_f2d
 567 00d8 5DA3     		adr	r3, .L36+16
 568 00da D3E90023 		ldrd	r2, [r3]
 569 00de FFF7FEFF 		bl	__aeabi_dcmpgt
 570 00e2 0346     		mov	r3, r0
 571 00e4 002B     		cmp	r3, #0
 572 00e6 BAD1     		bne	.L19
 124:valve.c       ****             }
 125:valve.c       ****         }
 126:valve.c       ****         
 127:valve.c       ****         
 128:valve.c       ****         // turn the closing pin low
 129:valve.c       ****         Power_VDD2_Write(0u);
 573              		.loc 1 129 0
 574 00e8 0020     		movs	r0, #0
 575 00ea FFF7FEFF 		bl	Power_VDD2_Write
 130:valve.c       ****         
 131:valve.c       ****         
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 14


 132:valve.c       ****         // read valve position once more and confirm we're where we want to be
 133:valve.c       ****         // if not return 0
 134:valve.c       ****         if(fabs(read_Valve_pos() - position_desired) > 0.05){
 576              		.loc 1 134 0
 577 00ee FFF7FEFF 		bl	read_Valve_pos
 578 00f2 0346     		mov	r3, r0
 579 00f4 7968     		ldr	r1, [r7, #4]	@ float
 580 00f6 1846     		mov	r0, r3
 581 00f8 FFF7FEFF 		bl	__aeabi_fsub
 582 00fc 0346     		mov	r3, r0
 583 00fe 23F00043 		bic	r3, r3, #-2147483648
 584 0102 1846     		mov	r0, r3
 585 0104 FFF7FEFF 		bl	__aeabi_f2d
 586 0108 4DA3     		adr	r3, .L36
 587 010a D3E90023 		ldrd	r2, [r3]
 588 010e FFF7FEFF 		bl	__aeabi_dcmpgt
 589 0112 0346     		mov	r3, r0
 590 0114 002B     		cmp	r3, #0
 591 0116 00F08B80 		beq	.L20
 135:valve.c       ****             // deactivate 12V battery
 136:valve.c       ****             Pressure_Voltage_Enable_Write(OFF);
 592              		.loc 1 136 0
 593 011a 0020     		movs	r0, #0
 594 011c FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 137:valve.c       ****             printNotif(NOTIF_TYPE_ERROR, "move_valve failed ::: requested_position: %f", position_d
 595              		.loc 1 137 0
 596 0120 7868     		ldr	r0, [r7, #4]	@ float
 597 0122 FFF7FEFF 		bl	__aeabi_f2d
 598 0126 0346     		mov	r3, r0
 599 0128 0C46     		mov	r4, r1
 600 012a 1A46     		mov	r2, r3
 601 012c 2346     		mov	r3, r4
 602 012e 4A49     		ldr	r1, .L36+24
 603 0130 0220     		movs	r0, #2
 604 0132 FFF7FEFF 		bl	printNotif
 138:valve.c       ****             return 0;
 605              		.loc 1 138 0
 606 0136 0023     		movs	r3, #0
 607 0138 7EE0     		b	.L14
 608              	.L35:
 139:valve.c       ****         }
 140:valve.c       ****         
 141:valve.c       ****     }
 142:valve.c       ****     // or more open?
 143:valve.c       ****     else if(read_Valve_pos() < position_desired){
 609              		.loc 1 143 0
 610 013a FFF7FEFF 		bl	read_Valve_pos
 611 013e 0346     		mov	r3, r0
 612 0140 7968     		ldr	r1, [r7, #4]	@ float
 613 0142 1846     		mov	r0, r3
 614 0144 FFF7FEFF 		bl	__aeabi_fcmplt
 615 0148 0346     		mov	r3, r0
 616 014a 002B     		cmp	r3, #0
 617 014c 70D0     		beq	.L20
 144:valve.c       ****         
 145:valve.c       ****         // turn the opening pin high
 146:valve.c       ****         Power_VDD1_Write(1u);
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 15


 618              		.loc 1 146 0
 619 014e 0120     		movs	r0, #1
 620 0150 FFF7FEFF 		bl	Power_VDD1_Write
 147:valve.c       ****         
 148:valve.c       ****         // while loop
 149:valve.c       ****         // continuously measure the position (measurement should be much faster than movement)
 150:valve.c       ****         // once we're within 5 percent of desired (can tighten this later) exit this do-while loop
 151:valve.c       ****         while(fabs(read_Valve_pos() - position_desired) > 0.03){
 621              		.loc 1 151 0
 622 0154 2FE0     		b	.L23
 623              	.L25:
 152:valve.c       ****             prev_pos = read_Valve_pos();
 624              		.loc 1 152 0
 625 0156 FFF7FEFF 		bl	read_Valve_pos
 626 015a F860     		str	r0, [r7, #12]	@ float
 153:valve.c       ****             CyDelay(1000u);
 627              		.loc 1 153 0
 628 015c 4FF47A70 		mov	r0, #1000
 629 0160 FFF7FEFF 		bl	CyDelay
 154:valve.c       ****             // are we moving?
 155:valve.c       ****             if (fabs(prev_pos - read_Valve_pos()) < 0.0005){
 630              		.loc 1 155 0
 631 0164 FFF7FEFF 		bl	read_Valve_pos
 632 0168 0346     		mov	r3, r0
 633 016a 1946     		mov	r1, r3
 634 016c F868     		ldr	r0, [r7, #12]	@ float
 635 016e FFF7FEFF 		bl	__aeabi_fsub
 636 0172 0346     		mov	r3, r0
 637 0174 23F00043 		bic	r3, r3, #-2147483648
 638 0178 1846     		mov	r0, r3
 639 017a FFF7FEFF 		bl	__aeabi_f2d
 640 017e 32A3     		adr	r3, .L36+8
 641 0180 D3E90023 		ldrd	r2, [r3]
 642 0184 FFF7FEFF 		bl	__aeabi_dcmplt
 643 0188 0346     		mov	r3, r0
 644 018a 002B     		cmp	r3, #0
 645 018c 00D1     		bne	.L32
 646 018e 12E0     		b	.L23
 647              	.L32:
 156:valve.c       ****                 // turn the opening pin low
 157:valve.c       ****                 Power_VDD1_Write(0u);
 648              		.loc 1 157 0
 649 0190 0020     		movs	r0, #0
 650 0192 FFF7FEFF 		bl	Power_VDD1_Write
 158:valve.c       ****                 // deactivate 12V battery
 159:valve.c       ****                 Pressure_Voltage_Enable_Write(OFF);
 651              		.loc 1 159 0
 652 0196 0020     		movs	r0, #0
 653 0198 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 160:valve.c       ****                 printNotif(NOTIF_TYPE_ERROR, "move_valve failed ::: requested_position: %f", positi
 654              		.loc 1 160 0
 655 019c 7868     		ldr	r0, [r7, #4]	@ float
 656 019e FFF7FEFF 		bl	__aeabi_f2d
 657 01a2 0346     		mov	r3, r0
 658 01a4 0C46     		mov	r4, r1
 659 01a6 1A46     		mov	r2, r3
 660 01a8 2346     		mov	r3, r4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 16


 661 01aa 2B49     		ldr	r1, .L36+24
 662 01ac 0220     		movs	r0, #2
 663 01ae FFF7FEFF 		bl	printNotif
 161:valve.c       ****                 return 0;
 664              		.loc 1 161 0
 665 01b2 0023     		movs	r3, #0
 666 01b4 40E0     		b	.L14
 667              	.L23:
 151:valve.c       ****             prev_pos = read_Valve_pos();
 668              		.loc 1 151 0
 669 01b6 FFF7FEFF 		bl	read_Valve_pos
 670 01ba 0346     		mov	r3, r0
 671 01bc 7968     		ldr	r1, [r7, #4]	@ float
 672 01be 1846     		mov	r0, r3
 673 01c0 FFF7FEFF 		bl	__aeabi_fsub
 674 01c4 0346     		mov	r3, r0
 675 01c6 23F00043 		bic	r3, r3, #-2147483648
 676 01ca 1846     		mov	r0, r3
 677 01cc FFF7FEFF 		bl	__aeabi_f2d
 678 01d0 1FA3     		adr	r3, .L36+16
 679 01d2 D3E90023 		ldrd	r2, [r3]
 680 01d6 FFF7FEFF 		bl	__aeabi_dcmpgt
 681 01da 0346     		mov	r3, r0
 682 01dc 002B     		cmp	r3, #0
 683 01de BAD1     		bne	.L25
 162:valve.c       ****             }
 163:valve.c       ****         }
 164:valve.c       ****         
 165:valve.c       ****         // turn the opening pin low
 166:valve.c       ****          Power_VDD1_Write(0u);
 684              		.loc 1 166 0
 685 01e0 0020     		movs	r0, #0
 686 01e2 FFF7FEFF 		bl	Power_VDD1_Write
 167:valve.c       ****         
 168:valve.c       ****         
 169:valve.c       ****         // read valve position once more and confirm we're where we want to be
 170:valve.c       ****         // if not return 0
 171:valve.c       ****         if(fabs(read_Valve_pos() - position_desired) > 0.05){
 687              		.loc 1 171 0
 688 01e6 FFF7FEFF 		bl	read_Valve_pos
 689 01ea 0346     		mov	r3, r0
 690 01ec 7968     		ldr	r1, [r7, #4]	@ float
 691 01ee 1846     		mov	r0, r3
 692 01f0 FFF7FEFF 		bl	__aeabi_fsub
 693 01f4 0346     		mov	r3, r0
 694 01f6 23F00043 		bic	r3, r3, #-2147483648
 695 01fa 1846     		mov	r0, r3
 696 01fc FFF7FEFF 		bl	__aeabi_f2d
 697 0200 0FA3     		adr	r3, .L36
 698 0202 D3E90023 		ldrd	r2, [r3]
 699 0206 FFF7FEFF 		bl	__aeabi_dcmpgt
 700 020a 0346     		mov	r3, r0
 701 020c 002B     		cmp	r3, #0
 702 020e 0FD0     		beq	.L20
 172:valve.c       ****             // deactivate 12V battery
 173:valve.c       ****             Pressure_Voltage_Enable_Write(OFF);
 703              		.loc 1 173 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 17


 704 0210 0020     		movs	r0, #0
 705 0212 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 174:valve.c       ****             printNotif(NOTIF_TYPE_ERROR, "move_valve failed ::: nrequested_position: %f", position_
 706              		.loc 1 174 0
 707 0216 7868     		ldr	r0, [r7, #4]	@ float
 708 0218 FFF7FEFF 		bl	__aeabi_f2d
 709 021c 0346     		mov	r3, r0
 710 021e 0C46     		mov	r4, r1
 711 0220 1A46     		mov	r2, r3
 712 0222 2346     		mov	r3, r4
 713 0224 0D49     		ldr	r1, .L36+28
 714 0226 0220     		movs	r0, #2
 715 0228 FFF7FEFF 		bl	printNotif
 175:valve.c       ****             return 0;
 716              		.loc 1 175 0
 717 022c 0023     		movs	r3, #0
 718 022e 03E0     		b	.L14
 719              	.L20:
 176:valve.c       ****         }
 177:valve.c       ****         
 178:valve.c       ****         
 179:valve.c       ****     }
 180:valve.c       **** 
 181:valve.c       ****     
 182:valve.c       ****     // deactivate 12V battery
 183:valve.c       ****     Pressure_Voltage_Enable_Write(OFF);
 720              		.loc 1 183 0
 721 0230 0020     		movs	r0, #0
 722 0232 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 184:valve.c       ****     
 185:valve.c       ****     return 1; // everything worked fine
 723              		.loc 1 185 0
 724 0236 0123     		movs	r3, #1
 725              	.L14:
 186:valve.c       **** }
 726              		.loc 1 186 0
 727 0238 1846     		mov	r0, r3
 728 023a 1437     		adds	r7, r7, #20
 729              		.cfi_def_cfa_offset 12
 730 023c BD46     		mov	sp, r7
 731              		.cfi_def_cfa_register 13
 732              		@ sp needed
 733 023e 90BD     		pop	{r4, r7, pc}
 734              	.L37:
 735              		.align	3
 736              	.L36:
 737 0240 9A999999 		.word	-1717986918
 738 0244 9999A93F 		.word	1068079513
 739 0248 FCA9F1D2 		.word	-755914244
 740 024c 4D62403F 		.word	1061184077
 741 0250 B81E85EB 		.word	-343597384
 742 0254 51B89E3F 		.word	1067366481
 743 0258 88000000 		.word	.LC3
 744 025c B8000000 		.word	.LC4
 745              		.cfi_endproc
 746              	.LFE66:
 747              		.size	move_valve, .-move_valve
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 18


 748              		.section	.rodata
 749 00e6 0000     		.align	2
 750              	.LC5:
 751 00e8 6C657665 		.ascii	"level_controller using level_reading:%d\000"
 751      6C5F636F 
 751      6E74726F 
 751      6C6C6572 
 751      20757369 
 752              		.section	.text.valve_level_controller,"ax",%progbits
 753              		.align	2
 754              		.global	valve_level_controller
 755              		.thumb
 756              		.thumb_func
 757              		.type	valve_level_controller, %function
 758              	valve_level_controller:
 759              	.LFB67:
 187:valve.c       **** 
 188:valve.c       **** void valve_level_controller(int16 level_reading){
 760              		.loc 1 188 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 8
 763              		@ frame_needed = 1, uses_anonymous_args = 0
 764 0000 80B5     		push	{r7, lr}
 765              		.cfi_def_cfa_offset 8
 766              		.cfi_offset 7, -8
 767              		.cfi_offset 14, -4
 768 0002 82B0     		sub	sp, sp, #8
 769              		.cfi_def_cfa_offset 16
 770 0004 00AF     		add	r7, sp, #0
 771              		.cfi_def_cfa_register 7
 772 0006 0346     		mov	r3, r0
 773 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 189:valve.c       **** 
 190:valve.c       ****     // these controls should be site specific. i.e. if site_id = ARB016 cutoff = 1400 mm
 191:valve.c       ****     printNotif(NOTIF_TYPE_EVENT, "level_controller using level_reading:%d", level_reading);
 774              		.loc 1 191 0
 775 000a B7F90630 		ldrsh	r3, [r7, #6]
 776 000e 1A46     		mov	r2, r3
 777 0010 0A49     		ldr	r1, .L42
 778 0012 0020     		movs	r0, #0
 779 0014 FFF7FEFF 		bl	printNotif
 192:valve.c       ****     if(level_reading > 500){
 780              		.loc 1 192 0
 781 0018 B7F90630 		ldrsh	r3, [r7, #6]
 782 001c B3F5FA7F 		cmp	r3, #500
 783 0020 04DD     		ble	.L39
 193:valve.c       ****         move_valve(0);
 784              		.loc 1 193 0
 785 0022 4FF00000 		mov	r0, #0
 786 0026 FFF7FEFF 		bl	move_valve
 194:valve.c       ****     }
 195:valve.c       ****     else {
 196:valve.c       ****         move_valve(1);
 197:valve.c       ****     }
 198:valve.c       **** }
 787              		.loc 1 198 0
 788 002a 03E0     		b	.L41
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 19


 789              	.L39:
 196:valve.c       ****     }
 790              		.loc 1 196 0
 791 002c 4FF07E50 		mov	r0, #1065353216
 792 0030 FFF7FEFF 		bl	move_valve
 793              	.L41:
 794              		.loc 1 198 0
 795 0034 00BF     		nop
 796 0036 0837     		adds	r7, r7, #8
 797              		.cfi_def_cfa_offset 8
 798 0038 BD46     		mov	sp, r7
 799              		.cfi_def_cfa_register 13
 800              		@ sp needed
 801 003a 80BD     		pop	{r7, pc}
 802              	.L43:
 803              		.align	2
 804              	.L42:
 805 003c E8000000 		.word	.LC5
 806              		.cfi_endproc
 807              	.LFE67:
 808              		.size	valve_level_controller, .-valve_level_controller
 809              		.global	__aeabi_i2f
 810              		.global	__aeabi_fmul
 811              		.global	__aeabi_fadd
 812              		.global	__aeabi_dmul
 813              		.section	.text.calculate_discharge,"ax",%progbits
 814              		.align	2
 815              		.global	calculate_discharge
 816              		.thumb
 817              		.thumb_func
 818              		.type	calculate_discharge, %function
 819              	calculate_discharge:
 820              	.LFB68:
 199:valve.c       **** 
 200:valve.c       **** float32 calculate_discharge(){
 821              		.loc 1 200 0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 80
 824              		@ frame_needed = 1, uses_anonymous_args = 0
 825 0000 B0B5     		push	{r4, r5, r7, lr}
 826              		.cfi_def_cfa_offset 16
 827              		.cfi_offset 4, -16
 828              		.cfi_offset 5, -12
 829              		.cfi_offset 7, -8
 830              		.cfi_offset 14, -4
 831 0002 94B0     		sub	sp, sp, #80
 832              		.cfi_def_cfa_offset 96
 833 0004 00AF     		add	r7, sp, #0
 834              		.cfi_def_cfa_register 7
 201:valve.c       ****     level_sensor_t downstream_level = downstream_level_sensor_take_reading();
 835              		.loc 1 201 0
 836 0006 07F12003 		add	r3, r7, #32
 837 000a 1846     		mov	r0, r3
 838 000c FFF7FEFF 		bl	downstream_level_sensor_take_reading
 202:valve.c       ****     level_sensor_t upstream_level = level_sensor_take_reading();
 839              		.loc 1 202 0
 840 0010 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 20


 841 0012 1846     		mov	r0, r3
 842 0014 FFF7FEFF 		bl	level_sensor_take_reading
 203:valve.c       ****     
 204:valve.c       ****     // divide by 1000 to convert from mm to m
 205:valve.c       ****     float32 differential_head = (downstream_level.level_reading - upstream_level.level_reading)/100
 843              		.loc 1 205 0
 844 0018 B7F93630 		ldrsh	r3, [r7, #54]
 845 001c 1A46     		mov	r2, r3
 846 001e B7F91A30 		ldrsh	r3, [r7, #26]
 847 0022 D31A     		subs	r3, r2, r3
 848 0024 214A     		ldr	r2, .L46
 849 0026 82FB0312 		smull	r1, r2, r2, r3
 850 002a 9211     		asrs	r2, r2, #6
 851 002c DB17     		asrs	r3, r3, #31
 852 002e D31A     		subs	r3, r2, r3
 853 0030 1846     		mov	r0, r3
 854 0032 FFF7FEFF 		bl	__aeabi_i2f
 855 0036 0346     		mov	r3, r0
 856 0038 FB64     		str	r3, [r7, #76]	@ float
 206:valve.c       ****     // the cones measure distance to water, so there's a sign reversal
 207:valve.c       ****     
 208:valve.c       ****     // the area of the orifice of the valve should probably come down from malcom
 209:valve.c       ****     // as should the discharge coefficient C_d 
 210:valve.c       ****     // because these are both properties of the site / valve we're deployed at
 211:valve.c       ****     // for now just make up some values
 212:valve.c       ****     float32 area = 2;
 857              		.loc 1 212 0
 858 003a 4FF08043 		mov	r3, #1073741824
 859 003e BB64     		str	r3, [r7, #72]	@ float
 213:valve.c       ****     float32 C_d = 0.4;
 860              		.loc 1 213 0
 861 0040 1B4B     		ldr	r3, .L46+4
 862 0042 7B64     		str	r3, [r7, #68]	@ float
 214:valve.c       ****     
 215:valve.c       ****     
 216:valve.c       ****     float32 gravity = 9.81; // m/s^2
 863              		.loc 1 216 0
 864 0044 1B4B     		ldr	r3, .L46+8
 865 0046 3B64     		str	r3, [r7, #64]	@ float
 217:valve.c       ****     float32 discharge = C_d*area*sqrt(2*gravity*differential_head);
 866              		.loc 1 217 0
 867 0048 B96C     		ldr	r1, [r7, #72]	@ float
 868 004a 786C     		ldr	r0, [r7, #68]	@ float
 869 004c FFF7FEFF 		bl	__aeabi_fmul
 870 0050 0346     		mov	r3, r0
 871 0052 1846     		mov	r0, r3
 872 0054 FFF7FEFF 		bl	__aeabi_f2d
 873 0058 0446     		mov	r4, r0
 874 005a 0D46     		mov	r5, r1
 875 005c 3B6C     		ldr	r3, [r7, #64]	@ float
 876 005e 1946     		mov	r1, r3
 877 0060 1846     		mov	r0, r3
 878 0062 FFF7FEFF 		bl	__aeabi_fadd
 879 0066 0346     		mov	r3, r0
 880 0068 F96C     		ldr	r1, [r7, #76]	@ float
 881 006a 1846     		mov	r0, r3
 882 006c FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 21


 883 0070 0346     		mov	r3, r0
 884 0072 1846     		mov	r0, r3
 885 0074 FFF7FEFF 		bl	__aeabi_f2d
 886 0078 0246     		mov	r2, r0
 887 007a 0B46     		mov	r3, r1
 888 007c 1046     		mov	r0, r2
 889 007e 1946     		mov	r1, r3
 890 0080 FFF7FEFF 		bl	sqrt
 891 0084 0246     		mov	r2, r0
 892 0086 0B46     		mov	r3, r1
 893 0088 2046     		mov	r0, r4
 894 008a 2946     		mov	r1, r5
 895 008c FFF7FEFF 		bl	__aeabi_dmul
 896 0090 0346     		mov	r3, r0
 897 0092 0C46     		mov	r4, r1
 898 0094 1846     		mov	r0, r3
 899 0096 2146     		mov	r1, r4
 900 0098 FFF7FEFF 		bl	__aeabi_d2f
 901 009c 0346     		mov	r3, r0
 902 009e FB63     		str	r3, [r7, #60]	@ float
 218:valve.c       ****     return discharge;
 903              		.loc 1 218 0
 904 00a0 FB6B     		ldr	r3, [r7, #60]	@ float
 219:valve.c       ****     
 220:valve.c       ****     
 221:valve.c       **** }
 905              		.loc 1 221 0
 906 00a2 1846     		mov	r0, r3
 907 00a4 5037     		adds	r7, r7, #80
 908              		.cfi_def_cfa_offset 16
 909 00a6 BD46     		mov	sp, r7
 910              		.cfi_def_cfa_register 13
 911              		@ sp needed
 912 00a8 B0BD     		pop	{r4, r5, r7, pc}
 913              	.L47:
 914 00aa 00BF     		.align	2
 915              	.L46:
 916 00ac D34D6210 		.word	274877907
 917 00b0 CDCCCC3E 		.word	1053609165
 918 00b4 C3F51C41 		.word	1092416963
 919              		.cfi_endproc
 920              	.LFE68:
 921              		.size	calculate_discharge, .-calculate_discharge
 922              		.text
 923              	.Letext0:
 924              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 925              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 926              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 927              		.file 5 "testing.h"
 928              		.file 6 "level_sensor.h"
 929              		.file 7 "voltages.h"
 930              		.file 8 "data.h"
 931              		.file 9 "modem.h"
 932              		.file 10 "notoriOS.h"
 933              		.file 11 "Generated_Source\\PSoC5/core_cm3.h"
 934              		.section	.debug_info,"",%progbits
 935              	.Ldebug_info0:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 22


 936 0000 0F070000 		.4byte	0x70f
 937 0004 0400     		.2byte	0x4
 938 0006 00000000 		.4byte	.Ldebug_abbrev0
 939 000a 04       		.byte	0x4
 940 000b 01       		.uleb128 0x1
 941 000c AD000000 		.4byte	.LASF107
 942 0010 0C       		.byte	0xc
 943 0011 F8010000 		.4byte	.LASF108
 944 0015 A4040000 		.4byte	.LASF109
 945 0019 00000000 		.4byte	.Ldebug_ranges0+0
 946 001d 00000000 		.4byte	0
 947 0021 00000000 		.4byte	.Ldebug_line0
 948 0025 02       		.uleb128 0x2
 949 0026 01       		.byte	0x1
 950 0027 06       		.byte	0x6
 951 0028 1D030000 		.4byte	.LASF0
 952 002c 02       		.uleb128 0x2
 953 002d 01       		.byte	0x1
 954 002e 08       		.byte	0x8
 955 002f CE020000 		.4byte	.LASF1
 956 0033 02       		.uleb128 0x2
 957 0034 02       		.byte	0x2
 958 0035 05       		.byte	0x5
 959 0036 92010000 		.4byte	.LASF2
 960 003a 02       		.uleb128 0x2
 961 003b 02       		.byte	0x2
 962 003c 07       		.byte	0x7
 963 003d CD030000 		.4byte	.LASF3
 964 0041 03       		.uleb128 0x3
 965 0042 56040000 		.4byte	.LASF9
 966 0046 02       		.byte	0x2
 967 0047 3F       		.byte	0x3f
 968 0048 4C000000 		.4byte	0x4c
 969 004c 02       		.uleb128 0x2
 970 004d 04       		.byte	0x4
 971 004e 05       		.byte	0x5
 972 004f 27020000 		.4byte	.LASF4
 973 0053 02       		.uleb128 0x2
 974 0054 04       		.byte	0x4
 975 0055 07       		.byte	0x7
 976 0056 E7040000 		.4byte	.LASF5
 977 005a 02       		.uleb128 0x2
 978 005b 08       		.byte	0x8
 979 005c 05       		.byte	0x5
 980 005d 3B010000 		.4byte	.LASF6
 981 0061 02       		.uleb128 0x2
 982 0062 08       		.byte	0x8
 983 0063 07       		.byte	0x7
 984 0064 38030000 		.4byte	.LASF7
 985 0068 04       		.uleb128 0x4
 986 0069 04       		.byte	0x4
 987 006a 05       		.byte	0x5
 988 006b 696E7400 		.ascii	"int\000"
 989 006f 02       		.uleb128 0x2
 990 0070 04       		.byte	0x4
 991 0071 07       		.byte	0x7
 992 0072 5F030000 		.4byte	.LASF8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 23


 993 0076 03       		.uleb128 0x3
 994 0077 4E040000 		.4byte	.LASF10
 995 007b 03       		.byte	0x3
 996 007c 2C       		.byte	0x2c
 997 007d 41000000 		.4byte	0x41
 998 0081 05       		.uleb128 0x5
 999 0082 CB010000 		.4byte	.LASF11
 1000 0086 04       		.byte	0x4
 1001 0087 9201     		.2byte	0x192
 1002 0089 2C000000 		.4byte	0x2c
 1003 008d 05       		.uleb128 0x5
 1004 008e A2010000 		.4byte	.LASF12
 1005 0092 04       		.byte	0x4
 1006 0093 9301     		.2byte	0x193
 1007 0095 3A000000 		.4byte	0x3a
 1008 0099 05       		.uleb128 0x5
 1009 009a D6010000 		.4byte	.LASF13
 1010 009e 04       		.byte	0x4
 1011 009f 9601     		.2byte	0x196
 1012 00a1 33000000 		.4byte	0x33
 1013 00a5 05       		.uleb128 0x5
 1014 00a6 F9040000 		.4byte	.LASF14
 1015 00aa 04       		.byte	0x4
 1016 00ab 9701     		.2byte	0x197
 1017 00ad 4C000000 		.4byte	0x4c
 1018 00b1 05       		.uleb128 0x5
 1019 00b2 44000000 		.4byte	.LASF15
 1020 00b6 04       		.byte	0x4
 1021 00b7 9801     		.2byte	0x198
 1022 00b9 BD000000 		.4byte	0xbd
 1023 00bd 02       		.uleb128 0x2
 1024 00be 04       		.byte	0x4
 1025 00bf 04       		.byte	0x4
 1026 00c0 00020000 		.4byte	.LASF16
 1027 00c4 02       		.uleb128 0x2
 1028 00c5 08       		.byte	0x8
 1029 00c6 04       		.byte	0x4
 1030 00c7 FF040000 		.4byte	.LASF17
 1031 00cb 02       		.uleb128 0x2
 1032 00cc 01       		.byte	0x1
 1033 00cd 08       		.byte	0x8
 1034 00ce 1B020000 		.4byte	.LASF18
 1035 00d2 02       		.uleb128 0x2
 1036 00d3 08       		.byte	0x8
 1037 00d4 04       		.byte	0x4
 1038 00d5 AD020000 		.4byte	.LASF19
 1039 00d9 02       		.uleb128 0x2
 1040 00da 04       		.byte	0x4
 1041 00db 07       		.byte	0x7
 1042 00dc 9C000000 		.4byte	.LASF20
 1043 00e0 06       		.uleb128 0x6
 1044 00e1 CB000000 		.4byte	0xcb
 1045 00e5 F0000000 		.4byte	0xf0
 1046 00e9 07       		.uleb128 0x7
 1047 00ea D9000000 		.4byte	0xd9
 1048 00ee 17       		.byte	0x17
 1049 00ef 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 24


 1050 00f0 08       		.uleb128 0x8
 1051 00f1 8101     		.2byte	0x181
 1052 00f3 05       		.byte	0x5
 1053 00f4 0A       		.byte	0xa
 1054 00f5 1E010000 		.4byte	0x11e
 1055 00f9 09       		.uleb128 0x9
 1056 00fa AB050000 		.4byte	.LASF21
 1057 00fe 05       		.byte	0x5
 1058 00ff 0C       		.byte	0xc
 1059 0100 1E010000 		.4byte	0x11e
 1060 0104 00       		.byte	0
 1061 0105 09       		.uleb128 0x9
 1062 0106 F8030000 		.4byte	.LASF22
 1063 010a 05       		.byte	0x5
 1064 010b 0D       		.byte	0xd
 1065 010c 81000000 		.4byte	0x81
 1066 0110 80       		.byte	0x80
 1067 0111 09       		.uleb128 0x9
 1068 0112 20020000 		.4byte	.LASF23
 1069 0116 05       		.byte	0x5
 1070 0117 0F       		.byte	0xf
 1071 0118 2E010000 		.4byte	0x12e
 1072 011c 81       		.byte	0x81
 1073 011d 00       		.byte	0
 1074 011e 06       		.uleb128 0x6
 1075 011f CB000000 		.4byte	0xcb
 1076 0123 2E010000 		.4byte	0x12e
 1077 0127 07       		.uleb128 0x7
 1078 0128 D9000000 		.4byte	0xd9
 1079 012c 7F       		.byte	0x7f
 1080 012d 00       		.byte	0
 1081 012e 06       		.uleb128 0x6
 1082 012f CB000000 		.4byte	0xcb
 1083 0133 3E010000 		.4byte	0x13e
 1084 0137 07       		.uleb128 0x7
 1085 0138 D9000000 		.4byte	0xd9
 1086 013c FF       		.byte	0xff
 1087 013d 00       		.byte	0
 1088 013e 03       		.uleb128 0x3
 1089 013f 32040000 		.4byte	.LASF24
 1090 0143 05       		.byte	0x5
 1091 0144 10       		.byte	0x10
 1092 0145 F0000000 		.4byte	0xf0
 1093 0149 0A       		.uleb128 0xa
 1094 014a 1A       		.byte	0x1a
 1095 014b 06       		.byte	0x6
 1096 014c 10       		.byte	0x10
 1097 014d 82010000 		.4byte	0x182
 1098 0151 09       		.uleb128 0x9
 1099 0152 89000000 		.4byte	.LASF25
 1100 0156 06       		.byte	0x6
 1101 0157 11       		.byte	0x11
 1102 0158 82010000 		.4byte	0x182
 1103 015c 00       		.byte	0
 1104 015d 09       		.uleb128 0x9
 1105 015e 47050000 		.4byte	.LASF26
 1106 0162 06       		.byte	0x6
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 25


 1107 0163 12       		.byte	0x12
 1108 0164 99000000 		.4byte	0x99
 1109 0168 16       		.byte	0x16
 1110 0169 09       		.uleb128 0x9
 1111 016a C7050000 		.4byte	.LASF27
 1112 016e 06       		.byte	0x6
 1113 016f 13       		.byte	0x13
 1114 0170 81000000 		.4byte	0x81
 1115 0174 18       		.byte	0x18
 1116 0175 09       		.uleb128 0x9
 1117 0176 06020000 		.4byte	.LASF28
 1118 017a 06       		.byte	0x6
 1119 017b 14       		.byte	0x14
 1120 017c 81000000 		.4byte	0x81
 1121 0180 19       		.byte	0x19
 1122 0181 00       		.byte	0
 1123 0182 06       		.uleb128 0x6
 1124 0183 99000000 		.4byte	0x99
 1125 0187 92010000 		.4byte	0x192
 1126 018b 07       		.uleb128 0x7
 1127 018c D9000000 		.4byte	0xd9
 1128 0190 0A       		.byte	0xa
 1129 0191 00       		.byte	0
 1130 0192 03       		.uleb128 0x3
 1131 0193 6E040000 		.4byte	.LASF29
 1132 0197 06       		.byte	0x6
 1133 0198 15       		.byte	0x15
 1134 0199 49010000 		.4byte	0x149
 1135 019d 0A       		.uleb128 0xa
 1136 019e 1C       		.byte	0x1c
 1137 019f 07       		.byte	0x7
 1138 01a0 14       		.byte	0x14
 1139 01a1 FA010000 		.4byte	0x1fa
 1140 01a5 09       		.uleb128 0x9
 1141 01a6 A9010000 		.4byte	.LASF30
 1142 01aa 07       		.byte	0x7
 1143 01ab 15       		.byte	0x15
 1144 01ac BD000000 		.4byte	0xbd
 1145 01b0 00       		.byte	0
 1146 01b1 09       		.uleb128 0x9
 1147 01b2 27000000 		.4byte	.LASF31
 1148 01b6 07       		.byte	0x7
 1149 01b7 16       		.byte	0x16
 1150 01b8 BD000000 		.4byte	0xbd
 1151 01bc 04       		.byte	0x4
 1152 01bd 09       		.uleb128 0x9
 1153 01be E9050000 		.4byte	.LASF32
 1154 01c2 07       		.byte	0x7
 1155 01c3 17       		.byte	0x17
 1156 01c4 BD000000 		.4byte	0xbd
 1157 01c8 08       		.byte	0x8
 1158 01c9 09       		.uleb128 0x9
 1159 01ca 4E010000 		.4byte	.LASF33
 1160 01ce 07       		.byte	0x7
 1161 01cf 18       		.byte	0x18
 1162 01d0 BD000000 		.4byte	0xbd
 1163 01d4 0C       		.byte	0xc
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 26


 1164 01d5 09       		.uleb128 0x9
 1165 01d6 E6010000 		.4byte	.LASF34
 1166 01da 07       		.byte	0x7
 1167 01db 19       		.byte	0x19
 1168 01dc BD000000 		.4byte	0xbd
 1169 01e0 10       		.byte	0x10
 1170 01e1 09       		.uleb128 0x9
 1171 01e2 5F050000 		.4byte	.LASF35
 1172 01e6 07       		.byte	0x7
 1173 01e7 1A       		.byte	0x1a
 1174 01e8 BD000000 		.4byte	0xbd
 1175 01ec 14       		.byte	0x14
 1176 01ed 09       		.uleb128 0x9
 1177 01ee 00000000 		.4byte	.LASF36
 1178 01f2 07       		.byte	0x7
 1179 01f3 1B       		.byte	0x1b
 1180 01f4 81000000 		.4byte	0x81
 1181 01f8 18       		.byte	0x18
 1182 01f9 00       		.byte	0
 1183 01fa 03       		.uleb128 0x3
 1184 01fb 44040000 		.4byte	.LASF37
 1185 01ff 07       		.byte	0x7
 1186 0200 1C       		.byte	0x1c
 1187 0201 9D010000 		.4byte	0x19d
 1188 0205 0A       		.uleb128 0xa
 1189 0206 2C       		.byte	0x2c
 1190 0207 08       		.byte	0x8
 1191 0208 14       		.byte	0x14
 1192 0209 32020000 		.4byte	0x232
 1193 020d 0B       		.uleb128 0xb
 1194 020e 6B657900 		.ascii	"key\000"
 1195 0212 08       		.byte	0x8
 1196 0213 15       		.byte	0x15
 1197 0214 32020000 		.4byte	0x232
 1198 0218 00       		.byte	0
 1199 0219 09       		.uleb128 0x9
 1200 021a 9C010000 		.4byte	.LASF38
 1201 021e 08       		.byte	0x8
 1202 021f 16       		.byte	0x16
 1203 0220 32020000 		.4byte	0x232
 1204 0224 14       		.byte	0x14
 1205 0225 09       		.uleb128 0x9
 1206 0226 DC010000 		.4byte	.LASF39
 1207 022a 08       		.byte	0x8
 1208 022b 17       		.byte	0x17
 1209 022c A5000000 		.4byte	0xa5
 1210 0230 28       		.byte	0x28
 1211 0231 00       		.byte	0
 1212 0232 06       		.uleb128 0x6
 1213 0233 CB000000 		.4byte	0xcb
 1214 0237 42020000 		.4byte	0x242
 1215 023b 07       		.uleb128 0x7
 1216 023c D9000000 		.4byte	0xd9
 1217 0240 13       		.byte	0x13
 1218 0241 00       		.byte	0
 1219 0242 03       		.uleb128 0x3
 1220 0243 6C030000 		.4byte	.LASF40
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 27


 1221 0247 08       		.byte	0x8
 1222 0248 19       		.byte	0x19
 1223 0249 05020000 		.4byte	0x205
 1224 024d 0A       		.uleb128 0xa
 1225 024e 3C       		.byte	0x3c
 1226 024f 09       		.byte	0x9
 1227 0250 37       		.byte	0x37
 1228 0251 7A020000 		.4byte	0x27a
 1229 0255 09       		.uleb128 0x9
 1230 0256 20000000 		.4byte	.LASF41
 1231 025a 09       		.byte	0x9
 1232 025b 38       		.byte	0x38
 1233 025c 32020000 		.4byte	0x232
 1234 0260 00       		.byte	0
 1235 0261 09       		.uleb128 0x9
 1236 0262 0E000000 		.4byte	.LASF42
 1237 0266 09       		.byte	0x9
 1238 0267 39       		.byte	0x39
 1239 0268 32020000 		.4byte	0x232
 1240 026c 14       		.byte	0x14
 1241 026d 09       		.uleb128 0x9
 1242 026e 8F050000 		.4byte	.LASF43
 1243 0272 09       		.byte	0x9
 1244 0273 3A       		.byte	0x3a
 1245 0274 32020000 		.4byte	0x232
 1246 0278 28       		.byte	0x28
 1247 0279 00       		.byte	0
 1248 027a 03       		.uleb128 0x3
 1249 027b 2C050000 		.4byte	.LASF44
 1250 027f 09       		.byte	0x9
 1251 0280 3C       		.byte	0x3c
 1252 0281 4D020000 		.4byte	0x24d
 1253 0285 0A       		.uleb128 0xa
 1254 0286 20       		.byte	0x20
 1255 0287 09       		.byte	0x9
 1256 0288 3E       		.byte	0x3e
 1257 0289 EE020000 		.4byte	0x2ee
 1258 028d 09       		.uleb128 0x9
 1259 028e 78030000 		.4byte	.LASF45
 1260 0292 09       		.byte	0x9
 1261 0293 3F       		.byte	0x3f
 1262 0294 68000000 		.4byte	0x68
 1263 0298 00       		.byte	0
 1264 0299 0B       		.uleb128 0xb
 1265 029a 62657200 		.ascii	"ber\000"
 1266 029e 09       		.byte	0x9
 1267 029f 40       		.byte	0x40
 1268 02a0 68000000 		.4byte	0x68
 1269 02a4 04       		.byte	0x4
 1270 02a5 09       		.uleb128 0x9
 1271 02a6 D1010000 		.4byte	.LASF46
 1272 02aa 09       		.byte	0x9
 1273 02ab 41       		.byte	0x41
 1274 02ac 68000000 		.4byte	0x68
 1275 02b0 08       		.byte	0x8
 1276 02b1 09       		.uleb128 0x9
 1277 02b2 8D010000 		.4byte	.LASF47
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 28


 1278 02b6 09       		.byte	0x9
 1279 02b7 42       		.byte	0x42
 1280 02b8 68000000 		.4byte	0x68
 1281 02bc 0C       		.byte	0xc
 1282 02bd 09       		.uleb128 0x9
 1283 02be 9F040000 		.4byte	.LASF48
 1284 02c2 09       		.byte	0x9
 1285 02c3 43       		.byte	0x43
 1286 02c4 68000000 		.4byte	0x68
 1287 02c8 10       		.byte	0x10
 1288 02c9 09       		.uleb128 0x9
 1289 02ca DC020000 		.4byte	.LASF49
 1290 02ce 09       		.byte	0x9
 1291 02cf 44       		.byte	0x44
 1292 02d0 68000000 		.4byte	0x68
 1293 02d4 14       		.byte	0x14
 1294 02d5 09       		.uleb128 0x9
 1295 02d6 E0030000 		.4byte	.LASF50
 1296 02da 09       		.byte	0x9
 1297 02db 45       		.byte	0x45
 1298 02dc 68000000 		.4byte	0x68
 1299 02e0 18       		.byte	0x18
 1300 02e1 09       		.uleb128 0x9
 1301 02e2 1F040000 		.4byte	.LASF51
 1302 02e6 09       		.byte	0x9
 1303 02e7 46       		.byte	0x46
 1304 02e8 68000000 		.4byte	0x68
 1305 02ec 1C       		.byte	0x1c
 1306 02ed 00       		.byte	0
 1307 02ee 03       		.uleb128 0x3
 1308 02ef 60040000 		.4byte	.LASF52
 1309 02f3 09       		.byte	0x9
 1310 02f4 48       		.byte	0x48
 1311 02f5 85020000 		.4byte	0x285
 1312 02f9 0A       		.uleb128 0xa
 1313 02fa 05       		.byte	0x5
 1314 02fb 09       		.byte	0x9
 1315 02fc 54       		.byte	0x54
 1316 02fd 3E030000 		.4byte	0x33e
 1317 0301 09       		.uleb128 0x9
 1318 0302 DA050000 		.4byte	.LASF53
 1319 0306 09       		.byte	0x9
 1320 0307 56       		.byte	0x56
 1321 0308 81000000 		.4byte	0x81
 1322 030c 00       		.byte	0
 1323 030d 09       		.uleb128 0x9
 1324 030e B9030000 		.4byte	.LASF54
 1325 0312 09       		.byte	0x9
 1326 0313 58       		.byte	0x58
 1327 0314 3E030000 		.4byte	0x33e
 1328 0318 01       		.byte	0x1
 1329 0319 09       		.uleb128 0x9
 1330 031a 7B020000 		.4byte	.LASF55
 1331 031e 09       		.byte	0x9
 1332 031f 5A       		.byte	0x5a
 1333 0320 81000000 		.4byte	0x81
 1334 0324 02       		.byte	0x2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 29


 1335 0325 09       		.uleb128 0x9
 1336 0326 7E030000 		.4byte	.LASF56
 1337 032a 09       		.byte	0x9
 1338 032b 5C       		.byte	0x5c
 1339 032c 81000000 		.4byte	0x81
 1340 0330 03       		.byte	0x3
 1341 0331 09       		.uleb128 0x9
 1342 0332 20050000 		.4byte	.LASF57
 1343 0336 09       		.byte	0x9
 1344 0337 5F       		.byte	0x5f
 1345 0338 81000000 		.4byte	0x81
 1346 033c 04       		.byte	0x4
 1347 033d 00       		.byte	0
 1348 033e 02       		.uleb128 0x2
 1349 033f 01       		.byte	0x1
 1350 0340 02       		.byte	0x2
 1351 0341 7D040000 		.4byte	.LASF58
 1352 0345 03       		.uleb128 0x3
 1353 0346 A2030000 		.4byte	.LASF59
 1354 034a 09       		.byte	0x9
 1355 034b 61       		.byte	0x61
 1356 034c F9020000 		.4byte	0x2f9
 1357 0350 0A       		.uleb128 0xa
 1358 0351 06       		.byte	0x6
 1359 0352 0A       		.byte	0xa
 1360 0353 2E       		.byte	0x2e
 1361 0354 89030000 		.4byte	0x389
 1362 0358 09       		.uleb128 0x9
 1363 0359 71000000 		.4byte	.LASF60
 1364 035d 0A       		.byte	0xa
 1365 035e 30       		.byte	0x30
 1366 035f 8D000000 		.4byte	0x8d
 1367 0363 00       		.byte	0
 1368 0364 09       		.uleb128 0x9
 1369 0365 4C000000 		.4byte	.LASF61
 1370 0369 0A       		.byte	0xa
 1371 036a 31       		.byte	0x31
 1372 036b 99000000 		.4byte	0x99
 1373 036f 02       		.byte	0x2
 1374 0370 09       		.uleb128 0x9
 1375 0371 39050000 		.4byte	.LASF62
 1376 0375 0A       		.byte	0xa
 1377 0376 32       		.byte	0x32
 1378 0377 81000000 		.4byte	0x81
 1379 037b 04       		.byte	0x4
 1380 037c 09       		.uleb128 0x9
 1381 037d 77050000 		.4byte	.LASF63
 1382 0381 0A       		.byte	0xa
 1383 0382 33       		.byte	0x33
 1384 0383 81000000 		.4byte	0x81
 1385 0387 05       		.byte	0x5
 1386 0388 00       		.byte	0
 1387 0389 03       		.uleb128 0x3
 1388 038a 75020000 		.4byte	.LASF64
 1389 038e 0A       		.byte	0xa
 1390 038f 36       		.byte	0x36
 1391 0390 94030000 		.4byte	0x394
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 30


 1392 0394 0C       		.uleb128 0xc
 1393 0395 50030000 		.4byte	0x350
 1394 0399 0A       		.uleb128 0xa
 1395 039a 1C       		.byte	0x1c
 1396 039b 0A       		.byte	0xa
 1397 039c 39       		.byte	0x39
 1398 039d BA030000 		.4byte	0x3ba
 1399 03a1 09       		.uleb128 0x9
 1400 03a2 40020000 		.4byte	.LASF65
 1401 03a6 0A       		.byte	0xa
 1402 03a7 3B       		.byte	0x3b
 1403 03a8 BA030000 		.4byte	0x3ba
 1404 03ac 00       		.byte	0
 1405 03ad 09       		.uleb128 0x9
 1406 03ae 70010000 		.4byte	.LASF66
 1407 03b2 0A       		.byte	0xa
 1408 03b3 3C       		.byte	0x3c
 1409 03b4 E0000000 		.4byte	0xe0
 1410 03b8 04       		.byte	0x4
 1411 03b9 00       		.byte	0
 1412 03ba 0D       		.uleb128 0xd
 1413 03bb 04       		.byte	0x4
 1414 03bc 7A020000 		.4byte	0x27a
 1415 03c0 03       		.uleb128 0x3
 1416 03c1 C2030000 		.4byte	.LASF67
 1417 03c5 0A       		.byte	0xa
 1418 03c6 3E       		.byte	0x3e
 1419 03c7 99030000 		.4byte	0x399
 1420 03cb 0A       		.uleb128 0xa
 1421 03cc 68       		.byte	0x68
 1422 03cd 0A       		.byte	0xa
 1423 03ce 44       		.byte	0x44
 1424 03cf EC030000 		.4byte	0x3ec
 1425 03d3 09       		.uleb128 0x9
 1426 03d4 A5000000 		.4byte	.LASF68
 1427 03d8 0A       		.byte	0xa
 1428 03d9 49       		.byte	0x49
 1429 03da EC030000 		.4byte	0x3ec
 1430 03de 00       		.byte	0
 1431 03df 09       		.uleb128 0x9
 1432 03e0 BF050000 		.4byte	.LASF69
 1433 03e4 0A       		.byte	0xa
 1434 03e5 4A       		.byte	0x4a
 1435 03e6 68000000 		.4byte	0x68
 1436 03ea 64       		.byte	0x64
 1437 03eb 00       		.byte	0
 1438 03ec 06       		.uleb128 0x6
 1439 03ed CB000000 		.4byte	0xcb
 1440 03f1 FC030000 		.4byte	0x3fc
 1441 03f5 07       		.uleb128 0x7
 1442 03f6 D9000000 		.4byte	0xd9
 1443 03fa 63       		.byte	0x63
 1444 03fb 00       		.byte	0
 1445 03fc 03       		.uleb128 0x3
 1446 03fd 35000000 		.4byte	.LASF70
 1447 0401 0A       		.byte	0xa
 1448 0402 50       		.byte	0x50
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 31


 1449 0403 CB030000 		.4byte	0x3cb
 1450 0407 0E       		.uleb128 0xe
 1451 0408 58020000 		.4byte	.LASF75
 1452 040c 01       		.byte	0x1
 1453 040d 07       		.byte	0x7
 1454 040e 3E010000 		.4byte	0x13e
 1455 0412 00000000 		.4byte	.LFB64
 1456 0416 DC020000 		.4byte	.LFE64-.LFB64
 1457 041a 01       		.uleb128 0x1
 1458 041b 9C       		.byte	0x9c
 1459 041c 5D040000 		.4byte	0x45d
 1460 0420 0F       		.uleb128 0xf
 1461 0421 62000000 		.4byte	.LASF71
 1462 0425 01       		.byte	0x1
 1463 0426 0A       		.byte	0xa
 1464 0427 3E010000 		.4byte	0x13e
 1465 042b 03       		.uleb128 0x3
 1466 042c 91       		.byte	0x91
 1467 042d C07C     		.sleb128 -448
 1468 042f 0F       		.uleb128 0xf
 1469 0430 9A040000 		.4byte	.LASF72
 1470 0434 01       		.byte	0x1
 1471 0435 13       		.byte	0x13
 1472 0436 3E010000 		.4byte	0x13e
 1473 043a 03       		.uleb128 0x3
 1474 043b 91       		.byte	0x91
 1475 043c BC79     		.sleb128 -836
 1476 043e 0F       		.uleb128 0xf
 1477 043f B5050000 		.4byte	.LASF73
 1478 0443 01       		.byte	0x1
 1479 0444 17       		.byte	0x17
 1480 0445 5D040000 		.4byte	0x45d
 1481 0449 03       		.uleb128 0x3
 1482 044a 91       		.byte	0x91
 1483 044b 9C79     		.sleb128 -868
 1484 044d 0F       		.uleb128 0xf
 1485 044e 17000000 		.4byte	.LASF74
 1486 0452 01       		.byte	0x1
 1487 0453 19       		.byte	0x19
 1488 0454 6D040000 		.4byte	0x46d
 1489 0458 03       		.uleb128 0x3
 1490 0459 91       		.byte	0x91
 1491 045a BC77     		.sleb128 -1092
 1492 045c 00       		.byte	0
 1493 045d 06       		.uleb128 0x6
 1494 045e B1000000 		.4byte	0xb1
 1495 0462 6D040000 		.4byte	0x46d
 1496 0466 07       		.uleb128 0x7
 1497 0467 D9000000 		.4byte	0xd9
 1498 046b 07       		.byte	0x7
 1499 046c 00       		.byte	0
 1500 046d 06       		.uleb128 0x6
 1501 046e FA010000 		.4byte	0x1fa
 1502 0472 7D040000 		.4byte	0x47d
 1503 0476 07       		.uleb128 0x7
 1504 0477 D9000000 		.4byte	0xd9
 1505 047b 07       		.byte	0x7
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 32


 1506 047c 00       		.byte	0
 1507 047d 0E       		.uleb128 0xe
 1508 047e 29030000 		.4byte	.LASF76
 1509 0482 01       		.byte	0x1
 1510 0483 4F       		.byte	0x4f
 1511 0484 B1000000 		.4byte	0xb1
 1512 0488 00000000 		.4byte	.LFB65
 1513 048c 50000000 		.4byte	.LFE65-.LFB65
 1514 0490 01       		.uleb128 0x1
 1515 0491 9C       		.byte	0x9c
 1516 0492 A5040000 		.4byte	0x4a5
 1517 0496 0F       		.uleb128 0xf
 1518 0497 0B060000 		.4byte	.LASF77
 1519 049b 01       		.byte	0x1
 1520 049c 51       		.byte	0x51
 1521 049d FA010000 		.4byte	0x1fa
 1522 04a1 02       		.uleb128 0x2
 1523 04a2 91       		.byte	0x91
 1524 04a3 54       		.sleb128 -44
 1525 04a4 00       		.byte	0
 1526 04a5 10       		.uleb128 0x10
 1527 04a6 39040000 		.4byte	.LASF110
 1528 04aa 01       		.byte	0x1
 1529 04ab 57       		.byte	0x57
 1530 04ac 81000000 		.4byte	0x81
 1531 04b0 00000000 		.4byte	.LFB66
 1532 04b4 60020000 		.4byte	.LFE66-.LFB66
 1533 04b8 01       		.uleb128 0x1
 1534 04b9 9C       		.byte	0x9c
 1535 04ba DB040000 		.4byte	0x4db
 1536 04be 11       		.uleb128 0x11
 1537 04bf 88020000 		.4byte	.LASF80
 1538 04c3 01       		.byte	0x1
 1539 04c4 57       		.byte	0x57
 1540 04c5 B1000000 		.4byte	0xb1
 1541 04c9 02       		.uleb128 0x2
 1542 04ca 91       		.byte	0x91
 1543 04cb 64       		.sleb128 -28
 1544 04cc 0F       		.uleb128 0xf
 1545 04cd 80000000 		.4byte	.LASF78
 1546 04d1 01       		.byte	0x1
 1547 04d2 60       		.byte	0x60
 1548 04d3 B1000000 		.4byte	0xb1
 1549 04d7 02       		.uleb128 0x2
 1550 04d8 91       		.byte	0x91
 1551 04d9 6C       		.sleb128 -20
 1552 04da 00       		.byte	0
 1553 04db 12       		.uleb128 0x12
 1554 04dc 94050000 		.4byte	.LASF79
 1555 04e0 01       		.byte	0x1
 1556 04e1 BC       		.byte	0xbc
 1557 04e2 00000000 		.4byte	.LFB67
 1558 04e6 40000000 		.4byte	.LFE67-.LFB67
 1559 04ea 01       		.uleb128 0x1
 1560 04eb 9C       		.byte	0x9c
 1561 04ec FF040000 		.4byte	0x4ff
 1562 04f0 11       		.uleb128 0x11
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 33


 1563 04f1 47050000 		.4byte	.LASF26
 1564 04f5 01       		.byte	0x1
 1565 04f6 BC       		.byte	0xbc
 1566 04f7 99000000 		.4byte	0x99
 1567 04fb 02       		.uleb128 0x2
 1568 04fc 91       		.byte	0x91
 1569 04fd 76       		.sleb128 -10
 1570 04fe 00       		.byte	0
 1571 04ff 0E       		.uleb128 0xe
 1572 0500 FF030000 		.4byte	.LASF81
 1573 0504 01       		.byte	0x1
 1574 0505 C8       		.byte	0xc8
 1575 0506 B1000000 		.4byte	0xb1
 1576 050a 00000000 		.4byte	.LFB68
 1577 050e B8000000 		.4byte	.LFE68-.LFB68
 1578 0512 01       		.uleb128 0x1
 1579 0513 9C       		.byte	0x9c
 1580 0514 7C050000 		.4byte	0x57c
 1581 0518 0F       		.uleb128 0xf
 1582 0519 5F010000 		.4byte	.LASF82
 1583 051d 01       		.byte	0x1
 1584 051e C9       		.byte	0xc9
 1585 051f 92010000 		.4byte	0x192
 1586 0523 02       		.uleb128 0x2
 1587 0524 91       		.byte	0x91
 1588 0525 40       		.sleb128 -64
 1589 0526 0F       		.uleb128 0xf
 1590 0527 7E010000 		.4byte	.LASF83
 1591 052b 01       		.byte	0x1
 1592 052c CA       		.byte	0xca
 1593 052d 92010000 		.4byte	0x192
 1594 0531 03       		.uleb128 0x3
 1595 0532 91       		.byte	0x91
 1596 0533 A47F     		.sleb128 -92
 1597 0535 0F       		.uleb128 0xf
 1598 0536 63020000 		.4byte	.LASF84
 1599 053a 01       		.byte	0x1
 1600 053b CD       		.byte	0xcd
 1601 053c B1000000 		.4byte	0xb1
 1602 0540 02       		.uleb128 0x2
 1603 0541 91       		.byte	0x91
 1604 0542 6C       		.sleb128 -20
 1605 0543 0F       		.uleb128 0xf
 1606 0544 E4050000 		.4byte	.LASF85
 1607 0548 01       		.byte	0x1
 1608 0549 D4       		.byte	0xd4
 1609 054a B1000000 		.4byte	0xb1
 1610 054e 02       		.uleb128 0x2
 1611 054f 91       		.byte	0x91
 1612 0550 68       		.sleb128 -24
 1613 0551 13       		.uleb128 0x13
 1614 0552 435F6400 		.ascii	"C_d\000"
 1615 0556 01       		.byte	0x1
 1616 0557 D5       		.byte	0xd5
 1617 0558 B1000000 		.4byte	0xb1
 1618 055c 02       		.uleb128 0x2
 1619 055d 91       		.byte	0x91
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 34


 1620 055e 64       		.sleb128 -28
 1621 055f 0F       		.uleb128 0xf
 1622 0560 06000000 		.4byte	.LASF86
 1623 0564 01       		.byte	0x1
 1624 0565 D8       		.byte	0xd8
 1625 0566 B1000000 		.4byte	0xb1
 1626 056a 02       		.uleb128 0x2
 1627 056b 91       		.byte	0x91
 1628 056c 60       		.sleb128 -32
 1629 056d 0F       		.uleb128 0xf
 1630 056e 55050000 		.4byte	.LASF87
 1631 0572 01       		.byte	0x1
 1632 0573 D9       		.byte	0xd9
 1633 0574 B1000000 		.4byte	0xb1
 1634 0578 02       		.uleb128 0x2
 1635 0579 91       		.byte	0x91
 1636 057a 5C       		.sleb128 -36
 1637 057b 00       		.byte	0
 1638 057c 14       		.uleb128 0x14
 1639 057d 13050000 		.4byte	.LASF88
 1640 0581 0B       		.byte	0xb
 1641 0582 1207     		.2byte	0x712
 1642 0584 88050000 		.4byte	0x588
 1643 0588 0C       		.uleb128 0xc
 1644 0589 76000000 		.4byte	0x76
 1645 058d 15       		.uleb128 0x15
 1646 058e 30020000 		.4byte	.LASF89
 1647 0592 08       		.byte	0x8
 1648 0593 11       		.byte	0x11
 1649 0594 3E030000 		.4byte	0x33e
 1650 0598 05       		.uleb128 0x5
 1651 0599 03       		.byte	0x3
 1652 059a 00000000 		.4byte	buffer_overflow
 1653 059e 15       		.uleb128 0x15
 1654 059f B9010000 		.4byte	.LASF90
 1655 05a3 08       		.byte	0x8
 1656 05a4 22       		.byte	0x22
 1657 05a5 8D000000 		.4byte	0x8d
 1658 05a9 05       		.uleb128 0x5
 1659 05aa 03       		.byte	0x3
 1660 05ab 00000000 		.4byte	dataPointsInStack
 1661 05af 15       		.uleb128 0x15
 1662 05b0 F8020000 		.4byte	.LASF91
 1663 05b4 08       		.byte	0x8
 1664 05b5 23       		.byte	0x23
 1665 05b6 8D000000 		.4byte	0x8d
 1666 05ba 05       		.uleb128 0x5
 1667 05bb 03       		.byte	0x3
 1668 05bc 00000000 		.4byte	dataPointsInStackDesired
 1669 05c0 06       		.uleb128 0x6
 1670 05c1 42020000 		.4byte	0x242
 1671 05c5 D0050000 		.4byte	0x5d0
 1672 05c9 07       		.uleb128 0x7
 1673 05ca D9000000 		.4byte	0xd9
 1674 05ce 95       		.byte	0x95
 1675 05cf 00       		.byte	0
 1676 05d0 15       		.uleb128 0x15
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 35


 1677 05d1 49010000 		.4byte	.LASF92
 1678 05d5 08       		.byte	0x8
 1679 05d6 24       		.byte	0x24
 1680 05d7 C0050000 		.4byte	0x5c0
 1681 05db 05       		.uleb128 0x5
 1682 05dc 03       		.byte	0x3
 1683 05dd 00000000 		.4byte	data
 1684 05e1 15       		.uleb128 0x15
 1685 05e2 11030000 		.4byte	.LASF93
 1686 05e6 09       		.byte	0x9
 1687 05e7 21       		.byte	0x21
 1688 05e8 81000000 		.4byte	0x81
 1689 05ec 05       		.uleb128 0x5
 1690 05ed 03       		.byte	0x3
 1691 05ee 00000000 		.4byte	modem_state
 1692 05f2 15       		.uleb128 0x15
 1693 05f3 E1020000 		.4byte	.LASF94
 1694 05f7 09       		.byte	0x9
 1695 05f8 64       		.byte	0x64
 1696 05f9 A5000000 		.4byte	0xa5
 1697 05fd 05       		.uleb128 0x5
 1698 05fe 03       		.byte	0x3
 1699 05ff 00000000 		.4byte	modem_start_time_stamp
 1700 0603 15       		.uleb128 0x15
 1701 0604 40020000 		.4byte	.LASF65
 1702 0608 09       		.byte	0x9
 1703 0609 65       		.byte	0x65
 1704 060a 7A020000 		.4byte	0x27a
 1705 060e 05       		.uleb128 0x5
 1706 060f 03       		.byte	0x3
 1707 0610 00000000 		.4byte	modem_info
 1708 0614 15       		.uleb128 0x15
 1709 0615 88030000 		.4byte	.LASF95
 1710 0619 09       		.byte	0x9
 1711 061a 66       		.byte	0x66
 1712 061b EE020000 		.4byte	0x2ee
 1713 061f 05       		.uleb128 0x5
 1714 0620 03       		.byte	0x3
 1715 0621 00000000 		.4byte	modem_stats
 1716 0625 15       		.uleb128 0x15
 1717 0626 B9020000 		.4byte	.LASF96
 1718 062a 09       		.byte	0x9
 1719 062b 67       		.byte	0x67
 1720 062c 45030000 		.4byte	0x345
 1721 0630 05       		.uleb128 0x5
 1722 0631 03       		.byte	0x3
 1723 0632 00000000 		.4byte	updatable_parameters
 1724 0636 06       		.uleb128 0x6
 1725 0637 CB000000 		.4byte	0xcb
 1726 063b 47060000 		.4byte	0x647
 1727 063f 16       		.uleb128 0x16
 1728 0640 D9000000 		.4byte	0xd9
 1729 0644 0F27     		.2byte	0x270f
 1730 0646 00       		.byte	0
 1731 0647 15       		.uleb128 0x15
 1732 0648 06050000 		.4byte	.LASF97
 1733 064c 0A       		.byte	0xa
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 36


 1734 064d 18       		.byte	0x18
 1735 064e 36060000 		.4byte	0x636
 1736 0652 05       		.uleb128 0x5
 1737 0653 03       		.byte	0x3
 1738 0654 00000000 		.4byte	http_request
 1739 0658 15       		.uleb128 0x15
 1740 0659 99020000 		.4byte	.LASF98
 1741 065d 0A       		.byte	0xa
 1742 065e 19       		.byte	0x19
 1743 065f 36060000 		.4byte	0x636
 1744 0663 05       		.uleb128 0x5
 1745 0664 03       		.byte	0x3
 1746 0665 00000000 		.4byte	http_body
 1747 0669 06       		.uleb128 0x6
 1748 066a CB000000 		.4byte	0xcb
 1749 066e 79060000 		.4byte	0x679
 1750 0672 07       		.uleb128 0x7
 1751 0673 D9000000 		.4byte	0xd9
 1752 0677 C7       		.byte	0xc7
 1753 0678 00       		.byte	0
 1754 0679 15       		.uleb128 0x15
 1755 067a DC040000 		.4byte	.LASF99
 1756 067e 0A       		.byte	0xa
 1757 067f 1A       		.byte	0x1a
 1758 0680 69060000 		.4byte	0x669
 1759 0684 05       		.uleb128 0x5
 1760 0685 03       		.byte	0x3
 1761 0686 00000000 		.4byte	http_route
 1762 068a 15       		.uleb128 0x15
 1763 068b 13040000 		.4byte	.LASF100
 1764 068f 0A       		.byte	0xa
 1765 0690 41       		.byte	0x41
 1766 0691 C0030000 		.4byte	0x3c0
 1767 0695 05       		.uleb128 0x5
 1768 0696 03       		.byte	0x3
 1769 0697 00000000 		.4byte	system_info
 1770 069b 15       		.uleb128 0x15
 1771 069c 4F030000 		.4byte	.LASF101
 1772 06a0 0A       		.byte	0xa
 1773 06a1 53       		.byte	0x53
 1774 06a2 FC030000 		.4byte	0x3fc
 1775 06a6 05       		.uleb128 0x5
 1776 06a7 03       		.byte	0x3
 1777 06a8 00000000 		.4byte	system_settings
 1778 06ac 15       		.uleb128 0x15
 1779 06ad 4B020000 		.4byte	.LASF102
 1780 06b1 0A       		.byte	0xa
 1781 06b2 6F       		.byte	0x6f
 1782 06b3 89030000 		.4byte	0x389
 1783 06b7 05       		.uleb128 0x5
 1784 06b8 03       		.byte	0x3
 1785 06b9 00000000 		.4byte	alarmMeasure
 1786 06bd 15       		.uleb128 0x15
 1787 06be 94030000 		.4byte	.LASF103
 1788 06c2 0A       		.byte	0xa
 1789 06c3 70       		.byte	0x70
 1790 06c4 81000000 		.4byte	0x81
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 37


 1791 06c8 05       		.uleb128 0x5
 1792 06c9 03       		.byte	0x3
 1793 06ca 00000000 		.4byte	timeToMeasure
 1794 06ce 15       		.uleb128 0x15
 1795 06cf A3020000 		.4byte	.LASF104
 1796 06d3 0A       		.byte	0xa
 1797 06d4 71       		.byte	0x71
 1798 06d5 89030000 		.4byte	0x389
 1799 06d9 05       		.uleb128 0x5
 1800 06da 03       		.byte	0x3
 1801 06db 00000000 		.4byte	alarmSync
 1802 06df 15       		.uleb128 0x15
 1803 06e0 00060000 		.4byte	.LASF105
 1804 06e4 0A       		.byte	0xa
 1805 06e5 72       		.byte	0x72
 1806 06e6 81000000 		.4byte	0x81
 1807 06ea 05       		.uleb128 0x5
 1808 06eb 03       		.byte	0x3
 1809 06ec 00000000 		.4byte	timeToSync
 1810 06f0 15       		.uleb128 0x15
 1811 06f1 83040000 		.4byte	.LASF106
 1812 06f5 0A       		.byte	0xa
 1813 06f6 73       		.byte	0x73
 1814 06f7 81000000 		.4byte	0x81
 1815 06fb 05       		.uleb128 0x5
 1816 06fc 03       		.byte	0x3
 1817 06fd 00000000 		.4byte	timeToSycnRemoteParams
 1818 0701 17       		.uleb128 0x17
 1819 0702 68657900 		.ascii	"hey\000"
 1820 0706 0A       		.byte	0xa
 1821 0707 74       		.byte	0x74
 1822 0708 81000000 		.4byte	0x81
 1823 070c 05       		.uleb128 0x5
 1824 070d 03       		.byte	0x3
 1825 070e 00000000 		.4byte	hey
 1826 0712 00       		.byte	0
 1827              		.section	.debug_abbrev,"",%progbits
 1828              	.Ldebug_abbrev0:
 1829 0000 01       		.uleb128 0x1
 1830 0001 11       		.uleb128 0x11
 1831 0002 01       		.byte	0x1
 1832 0003 25       		.uleb128 0x25
 1833 0004 0E       		.uleb128 0xe
 1834 0005 13       		.uleb128 0x13
 1835 0006 0B       		.uleb128 0xb
 1836 0007 03       		.uleb128 0x3
 1837 0008 0E       		.uleb128 0xe
 1838 0009 1B       		.uleb128 0x1b
 1839 000a 0E       		.uleb128 0xe
 1840 000b 55       		.uleb128 0x55
 1841 000c 17       		.uleb128 0x17
 1842 000d 11       		.uleb128 0x11
 1843 000e 01       		.uleb128 0x1
 1844 000f 10       		.uleb128 0x10
 1845 0010 17       		.uleb128 0x17
 1846 0011 00       		.byte	0
 1847 0012 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 38


 1848 0013 02       		.uleb128 0x2
 1849 0014 24       		.uleb128 0x24
 1850 0015 00       		.byte	0
 1851 0016 0B       		.uleb128 0xb
 1852 0017 0B       		.uleb128 0xb
 1853 0018 3E       		.uleb128 0x3e
 1854 0019 0B       		.uleb128 0xb
 1855 001a 03       		.uleb128 0x3
 1856 001b 0E       		.uleb128 0xe
 1857 001c 00       		.byte	0
 1858 001d 00       		.byte	0
 1859 001e 03       		.uleb128 0x3
 1860 001f 16       		.uleb128 0x16
 1861 0020 00       		.byte	0
 1862 0021 03       		.uleb128 0x3
 1863 0022 0E       		.uleb128 0xe
 1864 0023 3A       		.uleb128 0x3a
 1865 0024 0B       		.uleb128 0xb
 1866 0025 3B       		.uleb128 0x3b
 1867 0026 0B       		.uleb128 0xb
 1868 0027 49       		.uleb128 0x49
 1869 0028 13       		.uleb128 0x13
 1870 0029 00       		.byte	0
 1871 002a 00       		.byte	0
 1872 002b 04       		.uleb128 0x4
 1873 002c 24       		.uleb128 0x24
 1874 002d 00       		.byte	0
 1875 002e 0B       		.uleb128 0xb
 1876 002f 0B       		.uleb128 0xb
 1877 0030 3E       		.uleb128 0x3e
 1878 0031 0B       		.uleb128 0xb
 1879 0032 03       		.uleb128 0x3
 1880 0033 08       		.uleb128 0x8
 1881 0034 00       		.byte	0
 1882 0035 00       		.byte	0
 1883 0036 05       		.uleb128 0x5
 1884 0037 16       		.uleb128 0x16
 1885 0038 00       		.byte	0
 1886 0039 03       		.uleb128 0x3
 1887 003a 0E       		.uleb128 0xe
 1888 003b 3A       		.uleb128 0x3a
 1889 003c 0B       		.uleb128 0xb
 1890 003d 3B       		.uleb128 0x3b
 1891 003e 05       		.uleb128 0x5
 1892 003f 49       		.uleb128 0x49
 1893 0040 13       		.uleb128 0x13
 1894 0041 00       		.byte	0
 1895 0042 00       		.byte	0
 1896 0043 06       		.uleb128 0x6
 1897 0044 01       		.uleb128 0x1
 1898 0045 01       		.byte	0x1
 1899 0046 49       		.uleb128 0x49
 1900 0047 13       		.uleb128 0x13
 1901 0048 01       		.uleb128 0x1
 1902 0049 13       		.uleb128 0x13
 1903 004a 00       		.byte	0
 1904 004b 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 39


 1905 004c 07       		.uleb128 0x7
 1906 004d 21       		.uleb128 0x21
 1907 004e 00       		.byte	0
 1908 004f 49       		.uleb128 0x49
 1909 0050 13       		.uleb128 0x13
 1910 0051 2F       		.uleb128 0x2f
 1911 0052 0B       		.uleb128 0xb
 1912 0053 00       		.byte	0
 1913 0054 00       		.byte	0
 1914 0055 08       		.uleb128 0x8
 1915 0056 13       		.uleb128 0x13
 1916 0057 01       		.byte	0x1
 1917 0058 0B       		.uleb128 0xb
 1918 0059 05       		.uleb128 0x5
 1919 005a 3A       		.uleb128 0x3a
 1920 005b 0B       		.uleb128 0xb
 1921 005c 3B       		.uleb128 0x3b
 1922 005d 0B       		.uleb128 0xb
 1923 005e 01       		.uleb128 0x1
 1924 005f 13       		.uleb128 0x13
 1925 0060 00       		.byte	0
 1926 0061 00       		.byte	0
 1927 0062 09       		.uleb128 0x9
 1928 0063 0D       		.uleb128 0xd
 1929 0064 00       		.byte	0
 1930 0065 03       		.uleb128 0x3
 1931 0066 0E       		.uleb128 0xe
 1932 0067 3A       		.uleb128 0x3a
 1933 0068 0B       		.uleb128 0xb
 1934 0069 3B       		.uleb128 0x3b
 1935 006a 0B       		.uleb128 0xb
 1936 006b 49       		.uleb128 0x49
 1937 006c 13       		.uleb128 0x13
 1938 006d 38       		.uleb128 0x38
 1939 006e 0B       		.uleb128 0xb
 1940 006f 00       		.byte	0
 1941 0070 00       		.byte	0
 1942 0071 0A       		.uleb128 0xa
 1943 0072 13       		.uleb128 0x13
 1944 0073 01       		.byte	0x1
 1945 0074 0B       		.uleb128 0xb
 1946 0075 0B       		.uleb128 0xb
 1947 0076 3A       		.uleb128 0x3a
 1948 0077 0B       		.uleb128 0xb
 1949 0078 3B       		.uleb128 0x3b
 1950 0079 0B       		.uleb128 0xb
 1951 007a 01       		.uleb128 0x1
 1952 007b 13       		.uleb128 0x13
 1953 007c 00       		.byte	0
 1954 007d 00       		.byte	0
 1955 007e 0B       		.uleb128 0xb
 1956 007f 0D       		.uleb128 0xd
 1957 0080 00       		.byte	0
 1958 0081 03       		.uleb128 0x3
 1959 0082 08       		.uleb128 0x8
 1960 0083 3A       		.uleb128 0x3a
 1961 0084 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 40


 1962 0085 3B       		.uleb128 0x3b
 1963 0086 0B       		.uleb128 0xb
 1964 0087 49       		.uleb128 0x49
 1965 0088 13       		.uleb128 0x13
 1966 0089 38       		.uleb128 0x38
 1967 008a 0B       		.uleb128 0xb
 1968 008b 00       		.byte	0
 1969 008c 00       		.byte	0
 1970 008d 0C       		.uleb128 0xc
 1971 008e 35       		.uleb128 0x35
 1972 008f 00       		.byte	0
 1973 0090 49       		.uleb128 0x49
 1974 0091 13       		.uleb128 0x13
 1975 0092 00       		.byte	0
 1976 0093 00       		.byte	0
 1977 0094 0D       		.uleb128 0xd
 1978 0095 0F       		.uleb128 0xf
 1979 0096 00       		.byte	0
 1980 0097 0B       		.uleb128 0xb
 1981 0098 0B       		.uleb128 0xb
 1982 0099 49       		.uleb128 0x49
 1983 009a 13       		.uleb128 0x13
 1984 009b 00       		.byte	0
 1985 009c 00       		.byte	0
 1986 009d 0E       		.uleb128 0xe
 1987 009e 2E       		.uleb128 0x2e
 1988 009f 01       		.byte	0x1
 1989 00a0 3F       		.uleb128 0x3f
 1990 00a1 19       		.uleb128 0x19
 1991 00a2 03       		.uleb128 0x3
 1992 00a3 0E       		.uleb128 0xe
 1993 00a4 3A       		.uleb128 0x3a
 1994 00a5 0B       		.uleb128 0xb
 1995 00a6 3B       		.uleb128 0x3b
 1996 00a7 0B       		.uleb128 0xb
 1997 00a8 49       		.uleb128 0x49
 1998 00a9 13       		.uleb128 0x13
 1999 00aa 11       		.uleb128 0x11
 2000 00ab 01       		.uleb128 0x1
 2001 00ac 12       		.uleb128 0x12
 2002 00ad 06       		.uleb128 0x6
 2003 00ae 40       		.uleb128 0x40
 2004 00af 18       		.uleb128 0x18
 2005 00b0 9642     		.uleb128 0x2116
 2006 00b2 19       		.uleb128 0x19
 2007 00b3 01       		.uleb128 0x1
 2008 00b4 13       		.uleb128 0x13
 2009 00b5 00       		.byte	0
 2010 00b6 00       		.byte	0
 2011 00b7 0F       		.uleb128 0xf
 2012 00b8 34       		.uleb128 0x34
 2013 00b9 00       		.byte	0
 2014 00ba 03       		.uleb128 0x3
 2015 00bb 0E       		.uleb128 0xe
 2016 00bc 3A       		.uleb128 0x3a
 2017 00bd 0B       		.uleb128 0xb
 2018 00be 3B       		.uleb128 0x3b
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 41


 2019 00bf 0B       		.uleb128 0xb
 2020 00c0 49       		.uleb128 0x49
 2021 00c1 13       		.uleb128 0x13
 2022 00c2 02       		.uleb128 0x2
 2023 00c3 18       		.uleb128 0x18
 2024 00c4 00       		.byte	0
 2025 00c5 00       		.byte	0
 2026 00c6 10       		.uleb128 0x10
 2027 00c7 2E       		.uleb128 0x2e
 2028 00c8 01       		.byte	0x1
 2029 00c9 3F       		.uleb128 0x3f
 2030 00ca 19       		.uleb128 0x19
 2031 00cb 03       		.uleb128 0x3
 2032 00cc 0E       		.uleb128 0xe
 2033 00cd 3A       		.uleb128 0x3a
 2034 00ce 0B       		.uleb128 0xb
 2035 00cf 3B       		.uleb128 0x3b
 2036 00d0 0B       		.uleb128 0xb
 2037 00d1 27       		.uleb128 0x27
 2038 00d2 19       		.uleb128 0x19
 2039 00d3 49       		.uleb128 0x49
 2040 00d4 13       		.uleb128 0x13
 2041 00d5 11       		.uleb128 0x11
 2042 00d6 01       		.uleb128 0x1
 2043 00d7 12       		.uleb128 0x12
 2044 00d8 06       		.uleb128 0x6
 2045 00d9 40       		.uleb128 0x40
 2046 00da 18       		.uleb128 0x18
 2047 00db 9642     		.uleb128 0x2116
 2048 00dd 19       		.uleb128 0x19
 2049 00de 01       		.uleb128 0x1
 2050 00df 13       		.uleb128 0x13
 2051 00e0 00       		.byte	0
 2052 00e1 00       		.byte	0
 2053 00e2 11       		.uleb128 0x11
 2054 00e3 05       		.uleb128 0x5
 2055 00e4 00       		.byte	0
 2056 00e5 03       		.uleb128 0x3
 2057 00e6 0E       		.uleb128 0xe
 2058 00e7 3A       		.uleb128 0x3a
 2059 00e8 0B       		.uleb128 0xb
 2060 00e9 3B       		.uleb128 0x3b
 2061 00ea 0B       		.uleb128 0xb
 2062 00eb 49       		.uleb128 0x49
 2063 00ec 13       		.uleb128 0x13
 2064 00ed 02       		.uleb128 0x2
 2065 00ee 18       		.uleb128 0x18
 2066 00ef 00       		.byte	0
 2067 00f0 00       		.byte	0
 2068 00f1 12       		.uleb128 0x12
 2069 00f2 2E       		.uleb128 0x2e
 2070 00f3 01       		.byte	0x1
 2071 00f4 3F       		.uleb128 0x3f
 2072 00f5 19       		.uleb128 0x19
 2073 00f6 03       		.uleb128 0x3
 2074 00f7 0E       		.uleb128 0xe
 2075 00f8 3A       		.uleb128 0x3a
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 42


 2076 00f9 0B       		.uleb128 0xb
 2077 00fa 3B       		.uleb128 0x3b
 2078 00fb 0B       		.uleb128 0xb
 2079 00fc 27       		.uleb128 0x27
 2080 00fd 19       		.uleb128 0x19
 2081 00fe 11       		.uleb128 0x11
 2082 00ff 01       		.uleb128 0x1
 2083 0100 12       		.uleb128 0x12
 2084 0101 06       		.uleb128 0x6
 2085 0102 40       		.uleb128 0x40
 2086 0103 18       		.uleb128 0x18
 2087 0104 9642     		.uleb128 0x2116
 2088 0106 19       		.uleb128 0x19
 2089 0107 01       		.uleb128 0x1
 2090 0108 13       		.uleb128 0x13
 2091 0109 00       		.byte	0
 2092 010a 00       		.byte	0
 2093 010b 13       		.uleb128 0x13
 2094 010c 34       		.uleb128 0x34
 2095 010d 00       		.byte	0
 2096 010e 03       		.uleb128 0x3
 2097 010f 08       		.uleb128 0x8
 2098 0110 3A       		.uleb128 0x3a
 2099 0111 0B       		.uleb128 0xb
 2100 0112 3B       		.uleb128 0x3b
 2101 0113 0B       		.uleb128 0xb
 2102 0114 49       		.uleb128 0x49
 2103 0115 13       		.uleb128 0x13
 2104 0116 02       		.uleb128 0x2
 2105 0117 18       		.uleb128 0x18
 2106 0118 00       		.byte	0
 2107 0119 00       		.byte	0
 2108 011a 14       		.uleb128 0x14
 2109 011b 34       		.uleb128 0x34
 2110 011c 00       		.byte	0
 2111 011d 03       		.uleb128 0x3
 2112 011e 0E       		.uleb128 0xe
 2113 011f 3A       		.uleb128 0x3a
 2114 0120 0B       		.uleb128 0xb
 2115 0121 3B       		.uleb128 0x3b
 2116 0122 05       		.uleb128 0x5
 2117 0123 49       		.uleb128 0x49
 2118 0124 13       		.uleb128 0x13
 2119 0125 3F       		.uleb128 0x3f
 2120 0126 19       		.uleb128 0x19
 2121 0127 3C       		.uleb128 0x3c
 2122 0128 19       		.uleb128 0x19
 2123 0129 00       		.byte	0
 2124 012a 00       		.byte	0
 2125 012b 15       		.uleb128 0x15
 2126 012c 34       		.uleb128 0x34
 2127 012d 00       		.byte	0
 2128 012e 03       		.uleb128 0x3
 2129 012f 0E       		.uleb128 0xe
 2130 0130 3A       		.uleb128 0x3a
 2131 0131 0B       		.uleb128 0xb
 2132 0132 3B       		.uleb128 0x3b
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 43


 2133 0133 0B       		.uleb128 0xb
 2134 0134 49       		.uleb128 0x49
 2135 0135 13       		.uleb128 0x13
 2136 0136 3F       		.uleb128 0x3f
 2137 0137 19       		.uleb128 0x19
 2138 0138 02       		.uleb128 0x2
 2139 0139 18       		.uleb128 0x18
 2140 013a 00       		.byte	0
 2141 013b 00       		.byte	0
 2142 013c 16       		.uleb128 0x16
 2143 013d 21       		.uleb128 0x21
 2144 013e 00       		.byte	0
 2145 013f 49       		.uleb128 0x49
 2146 0140 13       		.uleb128 0x13
 2147 0141 2F       		.uleb128 0x2f
 2148 0142 05       		.uleb128 0x5
 2149 0143 00       		.byte	0
 2150 0144 00       		.byte	0
 2151 0145 17       		.uleb128 0x17
 2152 0146 34       		.uleb128 0x34
 2153 0147 00       		.byte	0
 2154 0148 03       		.uleb128 0x3
 2155 0149 08       		.uleb128 0x8
 2156 014a 3A       		.uleb128 0x3a
 2157 014b 0B       		.uleb128 0xb
 2158 014c 3B       		.uleb128 0x3b
 2159 014d 0B       		.uleb128 0xb
 2160 014e 49       		.uleb128 0x49
 2161 014f 13       		.uleb128 0x13
 2162 0150 3F       		.uleb128 0x3f
 2163 0151 19       		.uleb128 0x19
 2164 0152 02       		.uleb128 0x2
 2165 0153 18       		.uleb128 0x18
 2166 0154 00       		.byte	0
 2167 0155 00       		.byte	0
 2168 0156 00       		.byte	0
 2169              		.section	.debug_aranges,"",%progbits
 2170 0000 3C000000 		.4byte	0x3c
 2171 0004 0200     		.2byte	0x2
 2172 0006 00000000 		.4byte	.Ldebug_info0
 2173 000a 04       		.byte	0x4
 2174 000b 00       		.byte	0
 2175 000c 0000     		.2byte	0
 2176 000e 0000     		.2byte	0
 2177 0010 00000000 		.4byte	.LFB64
 2178 0014 DC020000 		.4byte	.LFE64-.LFB64
 2179 0018 00000000 		.4byte	.LFB65
 2180 001c 50000000 		.4byte	.LFE65-.LFB65
 2181 0020 00000000 		.4byte	.LFB66
 2182 0024 60020000 		.4byte	.LFE66-.LFB66
 2183 0028 00000000 		.4byte	.LFB67
 2184 002c 40000000 		.4byte	.LFE67-.LFB67
 2185 0030 00000000 		.4byte	.LFB68
 2186 0034 B8000000 		.4byte	.LFE68-.LFB68
 2187 0038 00000000 		.4byte	0
 2188 003c 00000000 		.4byte	0
 2189              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 44


 2190              	.Ldebug_ranges0:
 2191 0000 00000000 		.4byte	.LFB64
 2192 0004 DC020000 		.4byte	.LFE64
 2193 0008 00000000 		.4byte	.LFB65
 2194 000c 50000000 		.4byte	.LFE65
 2195 0010 00000000 		.4byte	.LFB66
 2196 0014 60020000 		.4byte	.LFE66
 2197 0018 00000000 		.4byte	.LFB67
 2198 001c 40000000 		.4byte	.LFE67
 2199 0020 00000000 		.4byte	.LFB68
 2200 0024 B8000000 		.4byte	.LFE68
 2201 0028 00000000 		.4byte	0
 2202 002c 00000000 		.4byte	0
 2203              		.section	.debug_line,"",%progbits
 2204              	.Ldebug_line0:
 2205 0000 73020000 		.section	.debug_str,"MS",%progbits,1
 2205      02009D01 
 2205      00000201 
 2205      FB0E0D00 
 2205      01010101 
 2206              	.LASF36:
 2207 0000 76616C69 		.ascii	"valid\000"
 2207      6400
 2208              	.LASF86:
 2209 0006 67726176 		.ascii	"gravity\000"
 2209      69747900 
 2210              	.LASF42:
 2211 000e 6D6F6465 		.ascii	"model_id\000"
 2211      6C5F6964 
 2211      00
 2212              	.LASF74:
 2213 0017 766F6C74 		.ascii	"voltages\000"
 2213      61676573 
 2213      00
 2214              	.LASF41:
 2215 0020 73696D5F 		.ascii	"sim_id\000"
 2215      696400
 2216              	.LASF31:
 2217 0027 766F6C74 		.ascii	"voltage_solar\000"
 2217      6167655F 
 2217      736F6C61 
 2217      7200
 2218              	.LASF70:
 2219 0035 7379735F 		.ascii	"sys_settings_t\000"
 2219      73657474 
 2219      696E6773 
 2219      5F7400
 2220              	.LASF15:
 2221 0044 666C6F61 		.ascii	"float32\000"
 2221      74333200 
 2222              	.LASF61:
 2223 004c 63757272 		.ascii	"currentCountDownValue\000"
 2223      656E7443 
 2223      6F756E74 
 2223      446F776E 
 2223      56616C75 
 2224              	.LASF71:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 45


 2225 0062 745F6C65 		.ascii	"t_level_sensor\000"
 2225      76656C5F 
 2225      73656E73 
 2225      6F7200
 2226              	.LASF60:
 2227 0071 636F756E 		.ascii	"countDownValue\000"
 2227      74446F77 
 2227      6E56616C 
 2227      756500
 2228              	.LASF78:
 2229 0080 70726576 		.ascii	"prev_pos\000"
 2229      5F706F73 
 2229      00
 2230              	.LASF25:
 2231 0089 616C6C5F 		.ascii	"all_level_readings\000"
 2231      6C657665 
 2231      6C5F7265 
 2231      6164696E 
 2231      677300
 2232              	.LASF20:
 2233 009c 73697A65 		.ascii	"sizetype\000"
 2233      74797065 
 2233      00
 2234              	.LASF68:
 2235 00a5 65705F68 		.ascii	"ep_host\000"
 2235      6F737400 
 2236              	.LASF107:
 2237 00ad 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2237      43313120 
 2237      352E342E 
 2237      31203230 
 2237      31363036 
 2238 00e0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2238      20726576 
 2238      6973696F 
 2238      6E203233 
 2238      37373135 
 2239 0113 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2239      66756E63 
 2239      74696F6E 
 2239      2D736563 
 2239      74696F6E 
 2240              	.LASF6:
 2241 013b 6C6F6E67 		.ascii	"long long int\000"
 2241      206C6F6E 
 2241      6720696E 
 2241      7400
 2242              	.LASF92:
 2243 0149 64617461 		.ascii	"data\000"
 2243      00
 2244              	.LASF33:
 2245 014e 766F6C74 		.ascii	"voltage_pressure\000"
 2245      6167655F 
 2245      70726573 
 2245      73757265 
 2245      00
 2246              	.LASF82:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 46


 2247 015f 646F776E 		.ascii	"downstream_level\000"
 2247      73747265 
 2247      616D5F6C 
 2247      6576656C 
 2247      00
 2248              	.LASF66:
 2249 0170 63686970 		.ascii	"chip_uniqueId\000"
 2249      5F756E69 
 2249      71756549 
 2249      6400
 2250              	.LASF83:
 2251 017e 75707374 		.ascii	"upstream_level\000"
 2251      7265616D 
 2251      5F6C6576 
 2251      656C00
 2252              	.LASF47:
 2253 018d 65636E6F 		.ascii	"ecno\000"
 2253      00
 2254              	.LASF2:
 2255 0192 73686F72 		.ascii	"short int\000"
 2255      7420696E 
 2255      7400
 2256              	.LASF38:
 2257 019c 76616C75 		.ascii	"value\000"
 2257      6500
 2258              	.LASF12:
 2259 01a2 75696E74 		.ascii	"uint16\000"
 2259      313600
 2260              	.LASF30:
 2261 01a9 766F6C74 		.ascii	"voltage_battery\000"
 2261      6167655F 
 2261      62617474 
 2261      65727900 
 2262              	.LASF90:
 2263 01b9 64617461 		.ascii	"dataPointsInStack\000"
 2263      506F696E 
 2263      7473496E 
 2263      53746163 
 2263      6B00
 2264              	.LASF11:
 2265 01cb 75696E74 		.ascii	"uint8\000"
 2265      3800
 2266              	.LASF46:
 2267 01d1 72736370 		.ascii	"rscp\000"
 2267      00
 2268              	.LASF13:
 2269 01d6 696E7431 		.ascii	"int16\000"
 2269      3600
 2270              	.LASF39:
 2271 01dc 74696D65 		.ascii	"timeStamp\000"
 2271      5374616D 
 2271      7000
 2272              	.LASF34:
 2273 01e6 766F6C74 		.ascii	"voltage_valve_pos\000"
 2273      6167655F 
 2273      76616C76 
 2273      655F706F 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 47


 2273      7300
 2274              	.LASF108:
 2275 01f8 76616C76 		.ascii	"valve.c\000"
 2275      652E6300 
 2276              	.LASF16:
 2277 0200 666C6F61 		.ascii	"float\000"
 2277      7400
 2278              	.LASF28:
 2279 0206 6E756D5F 		.ascii	"num_invalid_readings\000"
 2279      696E7661 
 2279      6C69645F 
 2279      72656164 
 2279      696E6773 
 2280              	.LASF18:
 2281 021b 63686172 		.ascii	"char\000"
 2281      00
 2282              	.LASF23:
 2283 0220 72656173 		.ascii	"reason\000"
 2283      6F6E00
 2284              	.LASF4:
 2285 0227 6C6F6E67 		.ascii	"long int\000"
 2285      20696E74 
 2285      00
 2286              	.LASF89:
 2287 0230 62756666 		.ascii	"buffer_overflow\000"
 2287      65725F6F 
 2287      76657266 
 2287      6C6F7700 
 2288              	.LASF65:
 2289 0240 6D6F6465 		.ascii	"modem_info\000"
 2289      6D5F696E 
 2289      666F00
 2290              	.LASF102:
 2291 024b 616C6172 		.ascii	"alarmMeasure\000"
 2291      6D4D6561 
 2291      73757265 
 2291      00
 2292              	.LASF75:
 2293 0258 76616C76 		.ascii	"valve_test\000"
 2293      655F7465 
 2293      737400
 2294              	.LASF84:
 2295 0263 64696666 		.ascii	"differential_head\000"
 2295      6572656E 
 2295      7469616C 
 2295      5F686561 
 2295      6400
 2296              	.LASF64:
 2297 0275 616C6172 		.ascii	"alarm\000"
 2297      6D00
 2298              	.LASF55:
 2299 027b 6D656173 		.ascii	"measure_time\000"
 2299      7572655F 
 2299      74696D65 
 2299      00
 2300              	.LASF80:
 2301 0288 706F7369 		.ascii	"position_desired\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 48


 2301      74696F6E 
 2301      5F646573 
 2301      69726564 
 2301      00
 2302              	.LASF98:
 2303 0299 68747470 		.ascii	"http_body\000"
 2303      5F626F64 
 2303      7900
 2304              	.LASF104:
 2305 02a3 616C6172 		.ascii	"alarmSync\000"
 2305      6D53796E 
 2305      6300
 2306              	.LASF19:
 2307 02ad 6C6F6E67 		.ascii	"long double\000"
 2307      20646F75 
 2307      626C6500 
 2308              	.LASF96:
 2309 02b9 75706461 		.ascii	"updatable_parameters\000"
 2309      7461626C 
 2309      655F7061 
 2309      72616D65 
 2309      74657273 
 2310              	.LASF1:
 2311 02ce 756E7369 		.ascii	"unsigned char\000"
 2311      676E6564 
 2311      20636861 
 2311      7200
 2312              	.LASF49:
 2313 02dc 72737270 		.ascii	"rsrp\000"
 2313      00
 2314              	.LASF94:
 2315 02e1 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2315      6D5F7374 
 2315      6172745F 
 2315      74696D65 
 2315      5F737461 
 2316              	.LASF91:
 2317 02f8 64617461 		.ascii	"dataPointsInStackDesired\000"
 2317      506F696E 
 2317      7473496E 
 2317      53746163 
 2317      6B446573 
 2318              	.LASF93:
 2319 0311 6D6F6465 		.ascii	"modem_state\000"
 2319      6D5F7374 
 2319      61746500 
 2320              	.LASF0:
 2321 031d 7369676E 		.ascii	"signed char\000"
 2321      65642063 
 2321      68617200 
 2322              	.LASF76:
 2323 0329 72656164 		.ascii	"read_Valve_pos\000"
 2323      5F56616C 
 2323      76655F70 
 2323      6F7300
 2324              	.LASF7:
 2325 0338 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 49


 2325      206C6F6E 
 2325      6720756E 
 2325      7369676E 
 2325      65642069 
 2326              	.LASF101:
 2327 034f 73797374 		.ascii	"system_settings\000"
 2327      656D5F73 
 2327      65747469 
 2327      6E677300 
 2328              	.LASF8:
 2329 035f 756E7369 		.ascii	"unsigned int\000"
 2329      676E6564 
 2329      20696E74 
 2329      00
 2330              	.LASF40:
 2331 036c 6B65795F 		.ascii	"key_value_t\000"
 2331      76616C75 
 2331      655F7400 
 2332              	.LASF45:
 2333 0378 72786C65 		.ascii	"rxlev\000"
 2333      7600
 2334              	.LASF56:
 2335 037e 73796E63 		.ascii	"sync_time\000"
 2335      5F74696D 
 2335      6500
 2336              	.LASF95:
 2337 0388 6D6F6465 		.ascii	"modem_stats\000"
 2337      6D5F7374 
 2337      61747300 
 2338              	.LASF103:
 2339 0394 74696D65 		.ascii	"timeToMeasure\000"
 2339      546F4D65 
 2339      61737572 
 2339      6500
 2340              	.LASF59:
 2341 03a2 75706461 		.ascii	"updatable_parameters_t\000"
 2341      7461626C 
 2341      655F7061 
 2341      72616D65 
 2341      74657273 
 2342              	.LASF54:
 2343 03b9 73696D5F 		.ascii	"sim_type\000"
 2343      74797065 
 2343      00
 2344              	.LASF67:
 2345 03c2 7379735F 		.ascii	"sys_info_t\000"
 2345      696E666F 
 2345      5F7400
 2346              	.LASF3:
 2347 03cd 73686F72 		.ascii	"short unsigned int\000"
 2347      7420756E 
 2347      7369676E 
 2347      65642069 
 2347      6E7400
 2348              	.LASF50:
 2349 03e0 74696D65 		.ascii	"time_to_network_connect\000"
 2349      5F746F5F 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 50


 2349      6E657477 
 2349      6F726B5F 
 2349      636F6E6E 
 2350              	.LASF22:
 2351 03f8 73746174 		.ascii	"status\000"
 2351      757300
 2352              	.LASF81:
 2353 03ff 63616C63 		.ascii	"calculate_discharge\000"
 2353      756C6174 
 2353      655F6469 
 2353      73636861 
 2353      72676500 
 2354              	.LASF100:
 2355 0413 73797374 		.ascii	"system_info\000"
 2355      656D5F69 
 2355      6E666F00 
 2356              	.LASF51:
 2357 041f 74696D65 		.ascii	"time_to_acquire_ip\000"
 2357      5F746F5F 
 2357      61637175 
 2357      6972655F 
 2357      697000
 2358              	.LASF24:
 2359 0432 74657374 		.ascii	"test_t\000"
 2359      5F7400
 2360              	.LASF110:
 2361 0439 6D6F7665 		.ascii	"move_valve\000"
 2361      5F76616C 
 2361      766500
 2362              	.LASF37:
 2363 0444 766F6C74 		.ascii	"voltage_t\000"
 2363      6167655F 
 2363      7400
 2364              	.LASF10:
 2365 044e 696E7433 		.ascii	"int32_t\000"
 2365      325F7400 
 2366              	.LASF9:
 2367 0456 5F5F696E 		.ascii	"__int32_t\000"
 2367      7433325F 
 2367      7400
 2368              	.LASF52:
 2369 0460 6D6F6465 		.ascii	"modem_stats_t\000"
 2369      6D5F7374 
 2369      6174735F 
 2369      7400
 2370              	.LASF29:
 2371 046e 6C657665 		.ascii	"level_sensor_t\000"
 2371      6C5F7365 
 2371      6E736F72 
 2371      5F7400
 2372              	.LASF58:
 2373 047d 5F426F6F 		.ascii	"_Bool\000"
 2373      6C00
 2374              	.LASF106:
 2375 0483 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2375      546F5379 
 2375      636E5265 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 51


 2375      6D6F7465 
 2375      50617261 
 2376              	.LASF72:
 2377 049a 74657374 		.ascii	"test\000"
 2377      00
 2378              	.LASF48:
 2379 049f 72737271 		.ascii	"rsrq\000"
 2379      00
 2380              	.LASF109:
 2381 04a4 433A5C55 		.ascii	"C:\\Users\\dantz\\Documents\\GitHub\\notoriOS\\noto"
 2381      73657273 
 2381      5C64616E 
 2381      747A5C44 
 2381      6F63756D 
 2382 04d1 72694F53 		.ascii	"riOS.cydsn\000"
 2382      2E637964 
 2382      736E00
 2383              	.LASF99:
 2384 04dc 68747470 		.ascii	"http_route\000"
 2384      5F726F75 
 2384      746500
 2385              	.LASF5:
 2386 04e7 6C6F6E67 		.ascii	"long unsigned int\000"
 2386      20756E73 
 2386      69676E65 
 2386      6420696E 
 2386      7400
 2387              	.LASF14:
 2388 04f9 696E7433 		.ascii	"int32\000"
 2388      3200
 2389              	.LASF17:
 2390 04ff 646F7562 		.ascii	"double\000"
 2390      6C6500
 2391              	.LASF97:
 2392 0506 68747470 		.ascii	"http_request\000"
 2392      5F726571 
 2392      75657374 
 2392      00
 2393              	.LASF88:
 2394 0513 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2394      52784275 
 2394      66666572 
 2394      00
 2395              	.LASF57:
 2396 0520 64656275 		.ascii	"debug_level\000"
 2396      675F6C65 
 2396      76656C00 
 2397              	.LASF44:
 2398 052c 6D6F6465 		.ascii	"modem_info_t\000"
 2398      6D5F696E 
 2398      666F5F74 
 2398      00
 2399              	.LASF62:
 2400 0539 636F756E 		.ascii	"countDownType\000"
 2400      74446F77 
 2400      6E547970 
 2400      6500
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 52


 2401              	.LASF26:
 2402 0547 6C657665 		.ascii	"level_reading\000"
 2402      6C5F7265 
 2402      6164696E 
 2402      6700
 2403              	.LASF87:
 2404 0555 64697363 		.ascii	"discharge\000"
 2404      68617267 
 2404      6500
 2405              	.LASF35:
 2406 055f 766F6C74 		.ascii	"voltage_valve_pot_power\000"
 2406      6167655F 
 2406      76616C76 
 2406      655F706F 
 2406      745F706F 
 2407              	.LASF63:
 2408 0577 636F756E 		.ascii	"countDownResetCondition\000"
 2408      74446F77 
 2408      6E526573 
 2408      6574436F 
 2408      6E646974 
 2409              	.LASF43:
 2410 058f 696D6569 		.ascii	"imei\000"
 2410      00
 2411              	.LASF79:
 2412 0594 76616C76 		.ascii	"valve_level_controller\000"
 2412      655F6C65 
 2412      76656C5F 
 2412      636F6E74 
 2412      726F6C6C 
 2413              	.LASF21:
 2414 05ab 74657374 		.ascii	"test_name\000"
 2414      5F6E616D 
 2414      6500
 2415              	.LASF73:
 2416 05b5 706F7369 		.ascii	"positions\000"
 2416      74696F6E 
 2416      7300
 2417              	.LASF69:
 2418 05bf 65705F70 		.ascii	"ep_port\000"
 2418      6F727400 
 2419              	.LASF27:
 2420 05c7 6E756D5F 		.ascii	"num_valid_readings\000"
 2420      76616C69 
 2420      645F7265 
 2420      6164696E 
 2420      677300
 2421              	.LASF53:
 2422 05da 6E6F6465 		.ascii	"node_type\000"
 2422      5F747970 
 2422      6500
 2423              	.LASF85:
 2424 05e4 61726561 		.ascii	"area\000"
 2424      00
 2425              	.LASF32:
 2426 05e9 766F6C74 		.ascii	"voltage_charge_current\000"
 2426      6167655F 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCFgsgR.s 			page 53


 2426      63686172 
 2426      67655F63 
 2426      75727265 
 2427              	.LASF105:
 2428 0600 74696D65 		.ascii	"timeToSync\000"
 2428      546F5379 
 2428      6E6300
 2429              	.LASF77:
 2430 060b 72656164 		.ascii	"readings\000"
 2430      696E6773 
 2430      00
 2431              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
