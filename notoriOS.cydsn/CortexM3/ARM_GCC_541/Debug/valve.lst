ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"valve.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.section	.rodata
  44              		.align	2
  45              	.LC0:
  46 0000 54455354 		.ascii	"TEST_VALVE\000"
  46      5F56414C 
  46      564500
  47              		.global	__aeabi_f2d
  48 000b 00       		.align	2
  49              	.LC1:
  50 000c 6F70656E 		.ascii	"open_voltage:%f:::closed_voltage:%f:::pot_voltage:%"
  50      5F766F6C 
  50      74616765 
  50      3A25663A 
  50      3A3A636C 
  51 003f 663A3A3A 		.ascii	"f::::positions:%f:%f:%f:%f:%f:%f:%f:%f\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 2


  51      3A706F73 
  51      6974696F 
  51      6E733A25 
  51      663A2566 
  52 0066 0000     		.align	2
  53              	.LC2:
  54 0068 76616C76 		.ascii	"valve jammed or battery dead\000"
  54      65206A61 
  54      6D6D6564 
  54      206F7220 
  54      62617474 
  55              		.section	.text.valve_test,"ax",%progbits
  56              		.align	2
  57              		.global	valve_test
  58              		.thumb
  59              		.thumb_func
  60              		.type	valve_test, %function
  61              	valve_test:
  62              	.LFB64:
  63              		.file 1 "valve.c"
   1:valve.c       **** #include "valve.h"
   2:valve.c       **** #include "notoriOS.h"
   3:valve.c       **** 
   4:valve.c       **** // throughout, the percentages recorded in reference to the valve position ought to be
   5:valve.c       **** // percent open-ness, not percent closed
   6:valve.c       **** 
   7:valve.c       **** test_t valve_test(){
  64              		.loc 1 7 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 768
  67              		@ frame_needed = 1, uses_anonymous_args = 0
  68 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
  69              		.cfi_def_cfa_offset 32
  70              		.cfi_offset 4, -32
  71              		.cfi_offset 5, -28
  72              		.cfi_offset 7, -24
  73              		.cfi_offset 8, -20
  74              		.cfi_offset 9, -16
  75              		.cfi_offset 10, -12
  76              		.cfi_offset 11, -8
  77              		.cfi_offset 14, -4
  78 0004 ADF5567D 		sub	sp, sp, #856
  79              		.cfi_def_cfa_offset 888
  80 0008 16AF     		add	r7, sp, #88
  81              		.cfi_def_cfa 7, 800
  82 000a 07F15C03 		add	r3, r7, #92
  83 000e 1860     		str	r0, [r3]
   8:valve.c       **** 
   9:valve.c       ****     // activate 12V battery
  10:valve.c       ****     Pressure_Voltage_Enable_Write(ON);
  84              		.loc 1 10 0
  85 0010 0120     		movs	r0, #1
  86 0012 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  11:valve.c       **** 
  12:valve.c       ****     
  13:valve.c       ****      
  14:valve.c       ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 3


  15:valve.c       ****     test.status = 0; // set test status to zero
  87              		.loc 1 15 0
  88 0016 07F5B073 		add	r3, r7, #352
  89 001a 0022     		movs	r2, #0
  90 001c 83F88020 		strb	r2, [r3, #128]
  16:valve.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_VALVE");
  91              		.loc 1 16 0
  92 0020 07F5B073 		add	r3, r7, #352
  93 0024 9F4A     		ldr	r2, .L5
  94 0026 07CA     		ldmia	r2, {r0, r1, r2}
  95 0028 03C3     		stmia	r3!, {r0, r1}
  96 002a 1A80     		strh	r2, [r3]	@ movhi
  97 002c 0233     		adds	r3, r3, #2
  98 002e 120C     		lsrs	r2, r2, #16
  99 0030 1A70     		strb	r2, [r3]
  17:valve.c       **** 
  18:valve.c       ****     float32 positions[8];
  19:valve.c       ****     
  20:valve.c       ****     voltage_t voltages[8];
  21:valve.c       ****     
  22:valve.c       ****     // all the way open
  23:valve.c       ****     move_valve(1);
 100              		.loc 1 23 0
 101 0032 4FF07E50 		mov	r0, #1065353216
 102 0036 FFF7FEFF 		bl	move_valve
  24:valve.c       ****     // take a position reading to verify that it's all the way open (later)
  25:valve.c       ****     positions[0] = read_Valve_pos();
 103              		.loc 1 25 0
 104 003a FFF7FEFF 		bl	read_Valve_pos
 105 003e 0246     		mov	r2, r0
 106 0040 07F5A073 		add	r3, r7, #320
 107 0044 1A60     		str	r2, [r3]	@ float
  26:valve.c       ****     voltages[0] = voltage_take_readings();
 108              		.loc 1 26 0
 109 0046 07F16004 		add	r4, r7, #96
 110 004a 07F13803 		add	r3, r7, #56
 111 004e 1846     		mov	r0, r3
 112 0050 FFF7FEFF 		bl	voltage_take_readings
 113 0054 07F13803 		add	r3, r7, #56
 114 0058 1D46     		mov	r5, r3
 115 005a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 116 005c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 117 005e 95E80700 		ldmia	r5, {r0, r1, r2}
 118 0062 84E80700 		stmia	r4, {r0, r1, r2}
  27:valve.c       ****     // do the same for closed
  28:valve.c       ****     test.status = move_valve(0);
 119              		.loc 1 28 0
 120 0066 4FF00000 		mov	r0, #0
 121 006a FFF7FEFF 		bl	move_valve
 122 006e 0346     		mov	r3, r0
 123 0070 1A46     		mov	r2, r3
 124 0072 07F5B073 		add	r3, r7, #352
 125 0076 83F88020 		strb	r2, [r3, #128]
  29:valve.c       ****     // take a position reading to verify that it's all the way closed (later)
  30:valve.c       ****     positions[1] = read_Valve_pos();
 126              		.loc 1 30 0
 127 007a FFF7FEFF 		bl	read_Valve_pos
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 4


 128 007e 0246     		mov	r2, r0
 129 0080 07F5A073 		add	r3, r7, #320
 130 0084 5A60     		str	r2, [r3, #4]	@ float
  31:valve.c       ****     voltages[1] = voltage_take_readings();
 131              		.loc 1 31 0
 132 0086 07F16004 		add	r4, r7, #96
 133 008a 07F13803 		add	r3, r7, #56
 134 008e 1846     		mov	r0, r3
 135 0090 FFF7FEFF 		bl	voltage_take_readings
 136 0094 07F13803 		add	r3, r7, #56
 137 0098 1C34     		adds	r4, r4, #28
 138 009a 1D46     		mov	r5, r3
 139 009c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 140 009e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 141 00a0 95E80700 		ldmia	r5, {r0, r1, r2}
 142 00a4 84E80700 		stmia	r4, {r0, r1, r2}
  32:valve.c       ****     if (test.status){ // don't do this if it's jammed (didn't close successfully)
 143              		.loc 1 32 0
 144 00a8 07F5B073 		add	r3, r7, #352
 145 00ac 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 146 00b0 002B     		cmp	r3, #0
 147 00b2 3AD0     		beq	.L2
  33:valve.c       ****         move_valve(0.125);
 148              		.loc 1 33 0
 149 00b4 4FF07850 		mov	r0, #1040187392
 150 00b8 FFF7FEFF 		bl	move_valve
  34:valve.c       ****         positions[2] = read_Valve_pos();
 151              		.loc 1 34 0
 152 00bc FFF7FEFF 		bl	read_Valve_pos
 153 00c0 0246     		mov	r2, r0
 154 00c2 07F5A073 		add	r3, r7, #320
 155 00c6 9A60     		str	r2, [r3, #8]	@ float
  35:valve.c       ****         
  36:valve.c       ****         move_valve(0.25);
 156              		.loc 1 36 0
 157 00c8 4FF07A50 		mov	r0, #1048576000
 158 00cc FFF7FEFF 		bl	move_valve
  37:valve.c       ****         positions[3] = read_Valve_pos();
 159              		.loc 1 37 0
 160 00d0 FFF7FEFF 		bl	read_Valve_pos
 161 00d4 0246     		mov	r2, r0
 162 00d6 07F5A073 		add	r3, r7, #320
 163 00da DA60     		str	r2, [r3, #12]	@ float
  38:valve.c       ****         
  39:valve.c       ****         move_valve(0.375);
 164              		.loc 1 39 0
 165 00dc 4FF07B50 		mov	r0, #1052770304
 166 00e0 FFF7FEFF 		bl	move_valve
  40:valve.c       ****         positions[4] = read_Valve_pos();
 167              		.loc 1 40 0
 168 00e4 FFF7FEFF 		bl	read_Valve_pos
 169 00e8 0246     		mov	r2, r0
 170 00ea 07F5A073 		add	r3, r7, #320
 171 00ee 1A61     		str	r2, [r3, #16]	@ float
  41:valve.c       **** 
  42:valve.c       ****         move_valve(0.5);
 172              		.loc 1 42 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 5


 173 00f0 4FF07C50 		mov	r0, #1056964608
 174 00f4 FFF7FEFF 		bl	move_valve
  43:valve.c       ****         positions[5] = read_Valve_pos();
 175              		.loc 1 43 0
 176 00f8 FFF7FEFF 		bl	read_Valve_pos
 177 00fc 0246     		mov	r2, r0
 178 00fe 07F5A073 		add	r3, r7, #320
 179 0102 5A61     		str	r2, [r3, #20]	@ float
  44:valve.c       **** 
  45:valve.c       ****         move_valve(0.675);
 180              		.loc 1 45 0
 181 0104 6848     		ldr	r0, .L5+4
 182 0106 FFF7FEFF 		bl	move_valve
  46:valve.c       ****         positions[6] = read_Valve_pos();
 183              		.loc 1 46 0
 184 010a FFF7FEFF 		bl	read_Valve_pos
 185 010e 0246     		mov	r2, r0
 186 0110 07F5A073 		add	r3, r7, #320
 187 0114 9A61     		str	r2, [r3, #24]	@ float
  47:valve.c       **** 
  48:valve.c       ****         move_valve(0.75);
 188              		.loc 1 48 0
 189 0116 4FF07D50 		mov	r0, #1061158912
 190 011a FFF7FEFF 		bl	move_valve
  49:valve.c       ****         positions[7] = read_Valve_pos();
 191              		.loc 1 49 0
 192 011e FFF7FEFF 		bl	read_Valve_pos
 193 0122 0246     		mov	r2, r0
 194 0124 07F5A073 		add	r3, r7, #320
 195 0128 DA61     		str	r2, [r3, #28]	@ float
 196              	.L2:
  50:valve.c       ****     }
  51:valve.c       **** 
  52:valve.c       ****     // in test reason report the sequence of positions
  53:valve.c       ****     snprintf(test.reason,sizeof(test.reason),"open_voltage:%f:::closed_voltage:%f:::pot_voltage:%f:
  54:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 197              		.loc 1 54 0
 198 012a 07F16003 		add	r3, r7, #96
 199 012e 1B69     		ldr	r3, [r3, #16]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 200              		.loc 1 53 0
 201 0130 1846     		mov	r0, r3
 202 0132 FFF7FEFF 		bl	__aeabi_f2d
 203 0136 C7E90C01 		strd	r0, [r7, #48]
 204              		.loc 1 54 0
 205 013a 07F16003 		add	r3, r7, #96
 206 013e DB6A     		ldr	r3, [r3, #44]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 207              		.loc 1 53 0
 208 0140 1846     		mov	r0, r3
 209 0142 FFF7FEFF 		bl	__aeabi_f2d
 210 0146 C7E90A01 		strd	r0, [r7, #40]
 211              		.loc 1 54 0
 212 014a 07F16003 		add	r3, r7, #96
 213 014e 5B69     		ldr	r3, [r3, #20]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 214              		.loc 1 53 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 6


 215 0150 1846     		mov	r0, r3
 216 0152 FFF7FEFF 		bl	__aeabi_f2d
 217 0156 C7E90801 		strd	r0, [r7, #32]
  55:valve.c       ****         positions[0],positions[1],positions[2],positions[3],
 218              		.loc 1 55 0
 219 015a 07F5A073 		add	r3, r7, #320
 220 015e 1B68     		ldr	r3, [r3]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 221              		.loc 1 53 0
 222 0160 1846     		mov	r0, r3
 223 0162 FFF7FEFF 		bl	__aeabi_f2d
 224 0166 C7E90601 		strd	r0, [r7, #24]
 225              		.loc 1 55 0
 226 016a 07F5A073 		add	r3, r7, #320
 227 016e 5B68     		ldr	r3, [r3, #4]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 228              		.loc 1 53 0
 229 0170 1846     		mov	r0, r3
 230 0172 FFF7FEFF 		bl	__aeabi_f2d
 231 0176 C7E90401 		strd	r0, [r7, #16]
 232              		.loc 1 55 0
 233 017a 07F5A073 		add	r3, r7, #320
 234 017e 9B68     		ldr	r3, [r3, #8]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 235              		.loc 1 53 0
 236 0180 1846     		mov	r0, r3
 237 0182 FFF7FEFF 		bl	__aeabi_f2d
 238 0186 C7E90201 		strd	r0, [r7, #8]
 239              		.loc 1 55 0
 240 018a 07F5A073 		add	r3, r7, #320
 241 018e DB68     		ldr	r3, [r3, #12]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 242              		.loc 1 53 0
 243 0190 1846     		mov	r0, r3
 244 0192 FFF7FEFF 		bl	__aeabi_f2d
 245 0196 C7E90001 		strd	r0, [r7]
  56:valve.c       ****         positions[4],positions[5],positions[6],positions[7]
 246              		.loc 1 56 0
 247 019a 07F5A073 		add	r3, r7, #320
 248 019e 1B69     		ldr	r3, [r3, #16]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 249              		.loc 1 53 0
 250 01a0 1846     		mov	r0, r3
 251 01a2 FFF7FEFF 		bl	__aeabi_f2d
 252 01a6 8246     		mov	r10, r0
 253 01a8 8B46     		mov	fp, r1
 254              		.loc 1 56 0
 255 01aa 07F5A073 		add	r3, r7, #320
 256 01ae 5B69     		ldr	r3, [r3, #20]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 257              		.loc 1 53 0
 258 01b0 1846     		mov	r0, r3
 259 01b2 FFF7FEFF 		bl	__aeabi_f2d
 260 01b6 8046     		mov	r8, r0
 261 01b8 8946     		mov	r9, r1
 262              		.loc 1 56 0
 263 01ba 07F5A073 		add	r3, r7, #320
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 7


 264 01be 9B69     		ldr	r3, [r3, #24]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 265              		.loc 1 53 0
 266 01c0 1846     		mov	r0, r3
 267 01c2 FFF7FEFF 		bl	__aeabi_f2d
 268 01c6 0446     		mov	r4, r0
 269 01c8 0D46     		mov	r5, r1
 270              		.loc 1 56 0
 271 01ca 07F5A073 		add	r3, r7, #320
 272 01ce DB69     		ldr	r3, [r3, #28]	@ float
  53:valve.c       ****         voltages[0].voltage_valve_pos, voltages[1].voltage_valve_pos, voltages[0].voltage_valve_pot
 273              		.loc 1 53 0
 274 01d0 1846     		mov	r0, r3
 275 01d2 FFF7FEFF 		bl	__aeabi_f2d
 276 01d6 0A46     		mov	r2, r1
 277 01d8 0146     		mov	r1, r0
 278 01da 07F5B073 		add	r3, r7, #352
 279 01de 8133     		adds	r3, r3, #129
 280 01e0 CDE91412 		strd	r1, [sp, #80]
 281 01e4 CDE91245 		strd	r4, [sp, #72]
 282 01e8 CDE91089 		strd	r8, [sp, #64]
 283 01ec CDE90EAB 		strd	r10, [sp, #56]
 284 01f0 D7E90012 		ldrd	r1, [r7]
 285 01f4 CDE90C12 		strd	r1, [sp, #48]
 286 01f8 D7E90212 		ldrd	r1, [r7, #8]
 287 01fc CDE90A12 		strd	r1, [sp, #40]
 288 0200 D7E90412 		ldrd	r1, [r7, #16]
 289 0204 CDE90812 		strd	r1, [sp, #32]
 290 0208 D7E90612 		ldrd	r1, [r7, #24]
 291 020c CDE90612 		strd	r1, [sp, #24]
 292 0210 D7E90812 		ldrd	r1, [r7, #32]
 293 0214 CDE90412 		strd	r1, [sp, #16]
 294 0218 D7E90A12 		ldrd	r1, [r7, #40]
 295 021c CDE90212 		strd	r1, [sp, #8]
 296 0220 D7E90C12 		ldrd	r1, [r7, #48]
 297 0224 CDE90012 		strd	r1, [sp]
 298 0228 204A     		ldr	r2, .L5+8
 299 022a 4FF48071 		mov	r1, #256
 300 022e 1846     		mov	r0, r3
 301 0230 FFF7FEFF 		bl	snprintf
  57:valve.c       ****     );
  58:valve.c       ****    
  59:valve.c       ****     
  60:valve.c       ****     if (!test.status){
 302              		.loc 1 60 0
 303 0234 07F5B073 		add	r3, r7, #352
 304 0238 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 305 023c 002B     		cmp	r3, #0
 306 023e 10D1     		bne	.L3
  61:valve.c       ****         snprintf(test.reason,sizeof(test.reason),"valve jammed or battery dead" );
 307              		.loc 1 61 0
 308 0240 07F5B073 		add	r3, r7, #352
 309 0244 8133     		adds	r3, r3, #129
 310 0246 1A4A     		ldr	r2, .L5+12
 311 0248 1D46     		mov	r5, r3
 312 024a 1446     		mov	r4, r2
 313 024c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 8


 314 024e 2860     		str	r0, [r5]	@ unaligned
 315 0250 6960     		str	r1, [r5, #4]	@ unaligned
 316 0252 AA60     		str	r2, [r5, #8]	@ unaligned
 317 0254 EB60     		str	r3, [r5, #12]	@ unaligned
 318 0256 07CC     		ldmia	r4!, {r0, r1, r2}
 319 0258 2861     		str	r0, [r5, #16]	@ unaligned
 320 025a 6961     		str	r1, [r5, #20]	@ unaligned
 321 025c AA61     		str	r2, [r5, #24]	@ unaligned
 322 025e 2378     		ldrb	r3, [r4]
 323 0260 2B77     		strb	r3, [r5, #28]
 324              	.L3:
  62:valve.c       ****     }
  63:valve.c       ****     // deactivate 12V battery
  64:valve.c       ****     Pressure_Voltage_Enable_Write(OFF);
 325              		.loc 1 64 0
 326 0262 0020     		movs	r0, #0
 327 0264 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  65:valve.c       ****     
  66:valve.c       ****     
  67:valve.c       ****     //just for now since I can't get the modem to error in the way I want it to
  68:valve.c       ****     valve_level_controller(level_sensor_take_reading().level_reading);
 328              		.loc 1 68 0
 329 0268 07F53973 		add	r3, r7, #740
 330 026c 1846     		mov	r0, r3
 331 026e FFF7FEFF 		bl	level_sensor_take_reading
 332 0272 B7F9FA32 		ldrsh	r3, [r7, #762]
 333 0276 1846     		mov	r0, r3
 334 0278 FFF7FEFF 		bl	valve_level_controller
  69:valve.c       ****     
  70:valve.c       ****     return test;
 335              		.loc 1 70 0
 336 027c 07F15C03 		add	r3, r7, #92
 337 0280 1A68     		ldr	r2, [r3]
 338 0282 07F5B073 		add	r3, r7, #352
 339 0286 1046     		mov	r0, r2
 340 0288 1946     		mov	r1, r3
 341 028a 40F28113 		movw	r3, #385
 342 028e 1A46     		mov	r2, r3
 343 0290 FFF7FEFF 		bl	memcpy
  71:valve.c       **** 
  72:valve.c       **** }
 344              		.loc 1 72 0
 345 0294 07F15C03 		add	r3, r7, #92
 346 0298 1868     		ldr	r0, [r3]
 347 029a 07F54077 		add	r7, r7, #768
 348              		.cfi_def_cfa_offset 32
 349 029e BD46     		mov	sp, r7
 350              		.cfi_def_cfa_register 13
 351              		@ sp needed
 352 02a0 BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 353              	.L6:
 354              		.align	2
 355              	.L5:
 356 02a4 00000000 		.word	.LC0
 357 02a8 CDCC2C3F 		.word	1059900621
 358 02ac 0C000000 		.word	.LC1
 359 02b0 68000000 		.word	.LC2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 9


 360              		.cfi_endproc
 361              	.LFE64:
 362              		.size	valve_test, .-valve_test
 363              		.global	__aeabi_fdiv
 364              		.global	__aeabi_ddiv
 365              		.global	__aeabi_d2f
 366              		.section	.text.read_Valve_pos,"ax",%progbits
 367              		.align	2
 368              		.global	read_Valve_pos
 369              		.thumb
 370              		.thumb_func
 371              		.type	read_Valve_pos, %function
 372              	read_Valve_pos:
 373              	.LFB65:
  73:valve.c       **** 
  74:valve.c       **** float32 read_Valve_pos(){
 374              		.loc 1 74 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 32
 377              		@ frame_needed = 1, uses_anonymous_args = 0
 378 0000 90B5     		push	{r4, r7, lr}
 379              		.cfi_def_cfa_offset 12
 380              		.cfi_offset 4, -12
 381              		.cfi_offset 7, -8
 382              		.cfi_offset 14, -4
 383 0002 89B0     		sub	sp, sp, #36
 384              		.cfi_def_cfa_offset 48
 385 0004 00AF     		add	r7, sp, #0
 386              		.cfi_def_cfa_register 7
  75:valve.c       ****     // take analog voltage readings
  76:valve.c       ****     voltage_t readings = voltage_take_readings();
 387              		.loc 1 76 0
 388 0006 3B1D     		adds	r3, r7, #4
 389 0008 1846     		mov	r0, r3
 390 000a FFF7FEFF 		bl	voltage_take_readings
  77:valve.c       ****     return (readings.voltage_valve_pos/readings.voltage_valve_pot_power)/0.94; // divide because of
 391              		.loc 1 77 0
 392 000e 7B69     		ldr	r3, [r7, #20]	@ float
 393 0010 BA69     		ldr	r2, [r7, #24]	@ float
 394 0012 1146     		mov	r1, r2
 395 0014 1846     		mov	r0, r3
 396 0016 FFF7FEFF 		bl	__aeabi_fdiv
 397 001a 0346     		mov	r3, r0
 398 001c 1846     		mov	r0, r3
 399 001e FFF7FEFF 		bl	__aeabi_f2d
 400 0022 09A3     		adr	r3, .L9
 401 0024 D3E90023 		ldrd	r2, [r3]
 402 0028 FFF7FEFF 		bl	__aeabi_ddiv
 403 002c 0346     		mov	r3, r0
 404 002e 0C46     		mov	r4, r1
 405 0030 1846     		mov	r0, r3
 406 0032 2146     		mov	r1, r4
 407 0034 FFF7FEFF 		bl	__aeabi_d2f
 408 0038 0346     		mov	r3, r0
  78:valve.c       ****     // this code is written for the blue rotating dynaquip valve, not the linear actuator
  79:valve.c       ****     
  80:valve.c       **** }
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 10


 409              		.loc 1 80 0
 410 003a 1846     		mov	r0, r3
 411 003c 2437     		adds	r7, r7, #36
 412              		.cfi_def_cfa_offset 12
 413 003e BD46     		mov	sp, r7
 414              		.cfi_def_cfa_register 13
 415              		@ sp needed
 416 0040 90BD     		pop	{r4, r7, pc}
 417              	.L10:
 418 0042 00BFAFF3 		.align	3
 418      0080
 419              	.L9:
 420 0048 14AE47E1 		.word	-515396076
 421 004c 7A14EE3F 		.word	1072567418
 422              		.cfi_endproc
 423              	.LFE65:
 424              		.size	read_Valve_pos, .-read_Valve_pos
 425              		.global	__aeabi_fsub
 426              		.global	__aeabi_dcmplt
 427              		.global	__aeabi_fcmpgt
 428              		.section	.rodata
 429 0085 000000   		.align	2
 430              	.LC3:
 431 0088 6D6F7665 		.ascii	"move_valve failed\000"
 431      5F76616C 
 431      76652066 
 431      61696C65 
 431      6400
 432              		.global	__aeabi_dcmpgt
 433              		.global	__aeabi_fcmplt
 434              		.section	.text.move_valve,"ax",%progbits
 435              		.align	2
 436              		.global	move_valve
 437              		.thumb
 438              		.thumb_func
 439              		.type	move_valve, %function
 440              	move_valve:
 441              	.LFB66:
  81:valve.c       **** 
  82:valve.c       **** uint8 move_valve(float32 position_desired){
 442              		.loc 1 82 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 16
 445              		@ frame_needed = 1, uses_anonymous_args = 0
 446 0000 80B5     		push	{r7, lr}
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 7, -8
 449              		.cfi_offset 14, -4
 450 0002 84B0     		sub	sp, sp, #16
 451              		.cfi_def_cfa_offset 24
 452 0004 00AF     		add	r7, sp, #0
 453              		.cfi_def_cfa_register 7
 454 0006 7860     		str	r0, [r7, #4]	@ float
  83:valve.c       ****     
  84:valve.c       ****     // activate 12V battery
  85:valve.c       ****     Pressure_Voltage_Enable_Write(ON);
 455              		.loc 1 85 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 11


 456 0008 0120     		movs	r0, #1
 457 000a FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  86:valve.c       ****     
  87:valve.c       ****     // this uses "go until you're there" rather than pulsing and checking
  88:valve.c       ****     // pulsing and checking could set up oscillations in the controller
  89:valve.c       ****     // pulsing and checking would only be necessary if measurement consumed a similar amount of tim
  90:valve.c       ****     
  91:valve.c       ****     float32 prev_pos =  1.5;
 458              		.loc 1 91 0
 459 000e 4FF07F53 		mov	r3, #1069547520
 460 0012 FB60     		str	r3, [r7, #12]	@ float
  92:valve.c       ****     
  93:valve.c       ****     // are we already there? (wihtin a tolerance)
  94:valve.c       ****     if ( fabs(read_Valve_pos() - position_desired) < 0.05){
 461              		.loc 1 94 0
 462 0014 FFF7FEFF 		bl	read_Valve_pos
 463 0018 0346     		mov	r3, r0
 464 001a 7968     		ldr	r1, [r7, #4]	@ float
 465 001c 1846     		mov	r0, r3
 466 001e FFF7FEFF 		bl	__aeabi_fsub
 467 0022 0346     		mov	r3, r0
 468 0024 23F00043 		bic	r3, r3, #-2147483648
 469 0028 1846     		mov	r0, r3
 470 002a FFF7FEFF 		bl	__aeabi_f2d
 471 002e 76A3     		adr	r3, .L36
 472 0030 D3E90023 		ldrd	r2, [r3]
 473 0034 FFF7FEFF 		bl	__aeabi_dcmplt
 474 0038 0346     		mov	r3, r0
 475 003a 002B     		cmp	r3, #0
 476 003c 01D0     		beq	.L34
  95:valve.c       ****         return 1;
 477              		.loc 1 95 0
 478 003e 0123     		movs	r3, #1
 479 0040 DDE0     		b	.L14
 480              	.L34:
  96:valve.c       ****     }
  97:valve.c       **** 
  98:valve.c       ****     // is the desired position more closed?
  99:valve.c       ****     if( read_Valve_pos() > position_desired){
 481              		.loc 1 99 0
 482 0042 FFF7FEFF 		bl	read_Valve_pos
 483 0046 0346     		mov	r3, r0
 484 0048 7968     		ldr	r1, [r7, #4]	@ float
 485 004a 1846     		mov	r0, r3
 486 004c FFF7FEFF 		bl	__aeabi_fcmpgt
 487 0050 0346     		mov	r3, r0
 488 0052 002B     		cmp	r3, #0
 489 0054 62D0     		beq	.L35
 100:valve.c       ****         
 101:valve.c       ****         // turn the closing pin high
 102:valve.c       ****         Power_VDD2_Write(1u);
 490              		.loc 1 102 0
 491 0056 0120     		movs	r0, #1
 492 0058 FFF7FEFF 		bl	Power_VDD2_Write
 103:valve.c       **** 
 104:valve.c       ****         
 105:valve.c       ****         // while loop
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 12


 106:valve.c       ****         // continuously measure the position (measurement should be much faster than movement)
 107:valve.c       ****         // once we're within 5 percent of desired (can tighten this later) exit this do-while loop
 108:valve.c       ****         while(fabs(read_Valve_pos() - position_desired) > 0.03){
 493              		.loc 1 108 0
 494 005c 28E0     		b	.L17
 495              	.L19:
 109:valve.c       ****             prev_pos = read_Valve_pos();
 496              		.loc 1 109 0
 497 005e FFF7FEFF 		bl	read_Valve_pos
 498 0062 F860     		str	r0, [r7, #12]	@ float
 110:valve.c       ****             CyDelay(1000u);
 499              		.loc 1 110 0
 500 0064 4FF47A70 		mov	r0, #1000
 501 0068 FFF7FEFF 		bl	CyDelay
 111:valve.c       ****             // are we moving?
 112:valve.c       ****             if (fabs(prev_pos - read_Valve_pos()) < 0.0005){
 502              		.loc 1 112 0
 503 006c FFF7FEFF 		bl	read_Valve_pos
 504 0070 0346     		mov	r3, r0
 505 0072 1946     		mov	r1, r3
 506 0074 F868     		ldr	r0, [r7, #12]	@ float
 507 0076 FFF7FEFF 		bl	__aeabi_fsub
 508 007a 0346     		mov	r3, r0
 509 007c 23F00043 		bic	r3, r3, #-2147483648
 510 0080 1846     		mov	r0, r3
 511 0082 FFF7FEFF 		bl	__aeabi_f2d
 512 0086 62A3     		adr	r3, .L36+8
 513 0088 D3E90023 		ldrd	r2, [r3]
 514 008c FFF7FEFF 		bl	__aeabi_dcmplt
 515 0090 0346     		mov	r3, r0
 516 0092 002B     		cmp	r3, #0
 517 0094 00D1     		bne	.L29
 518 0096 0BE0     		b	.L17
 519              	.L29:
 113:valve.c       ****                 // turn the closing pin low
 114:valve.c       ****                 Power_VDD2_Write(0u);
 520              		.loc 1 114 0
 521 0098 0020     		movs	r0, #0
 522 009a FFF7FEFF 		bl	Power_VDD2_Write
 115:valve.c       ****                 // deactivate 12V battery
 116:valve.c       ****                 Pressure_Voltage_Enable_Write(OFF);
 523              		.loc 1 116 0
 524 009e 0020     		movs	r0, #0
 525 00a0 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 117:valve.c       ****                 printNotif(NOTIF_TYPE_ERROR, "move_valve failed");
 526              		.loc 1 117 0
 527 00a4 5E49     		ldr	r1, .L36+24
 528 00a6 0220     		movs	r0, #2
 529 00a8 FFF7FEFF 		bl	printNotif
 118:valve.c       ****                 return 0;
 530              		.loc 1 118 0
 531 00ac 0023     		movs	r3, #0
 532 00ae A6E0     		b	.L14
 533              	.L17:
 108:valve.c       ****             prev_pos = read_Valve_pos();
 534              		.loc 1 108 0
 535 00b0 FFF7FEFF 		bl	read_Valve_pos
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 13


 536 00b4 0346     		mov	r3, r0
 537 00b6 7968     		ldr	r1, [r7, #4]	@ float
 538 00b8 1846     		mov	r0, r3
 539 00ba FFF7FEFF 		bl	__aeabi_fsub
 540 00be 0346     		mov	r3, r0
 541 00c0 23F00043 		bic	r3, r3, #-2147483648
 542 00c4 1846     		mov	r0, r3
 543 00c6 FFF7FEFF 		bl	__aeabi_f2d
 544 00ca 53A3     		adr	r3, .L36+16
 545 00cc D3E90023 		ldrd	r2, [r3]
 546 00d0 FFF7FEFF 		bl	__aeabi_dcmpgt
 547 00d4 0346     		mov	r3, r0
 548 00d6 002B     		cmp	r3, #0
 549 00d8 C1D1     		bne	.L19
 119:valve.c       ****             }
 120:valve.c       ****         }
 121:valve.c       ****         
 122:valve.c       ****         
 123:valve.c       ****         // turn the closing pin low
 124:valve.c       ****         Power_VDD2_Write(0u);
 550              		.loc 1 124 0
 551 00da 0020     		movs	r0, #0
 552 00dc FFF7FEFF 		bl	Power_VDD2_Write
 125:valve.c       ****         
 126:valve.c       ****         
 127:valve.c       ****         // read valve position once more and confirm we're where we want to be
 128:valve.c       ****         // if not return 0
 129:valve.c       ****         if(fabs(read_Valve_pos() - position_desired) > 0.05){
 553              		.loc 1 129 0
 554 00e0 FFF7FEFF 		bl	read_Valve_pos
 555 00e4 0346     		mov	r3, r0
 556 00e6 7968     		ldr	r1, [r7, #4]	@ float
 557 00e8 1846     		mov	r0, r3
 558 00ea FFF7FEFF 		bl	__aeabi_fsub
 559 00ee 0346     		mov	r3, r0
 560 00f0 23F00043 		bic	r3, r3, #-2147483648
 561 00f4 1846     		mov	r0, r3
 562 00f6 FFF7FEFF 		bl	__aeabi_f2d
 563 00fa 43A3     		adr	r3, .L36
 564 00fc D3E90023 		ldrd	r2, [r3]
 565 0100 FFF7FEFF 		bl	__aeabi_dcmpgt
 566 0104 0346     		mov	r3, r0
 567 0106 002B     		cmp	r3, #0
 568 0108 75D0     		beq	.L20
 130:valve.c       ****             // deactivate 12V battery
 131:valve.c       ****             Pressure_Voltage_Enable_Write(OFF);
 569              		.loc 1 131 0
 570 010a 0020     		movs	r0, #0
 571 010c FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 132:valve.c       ****             printNotif(NOTIF_TYPE_ERROR, "move_valve failed");
 572              		.loc 1 132 0
 573 0110 4349     		ldr	r1, .L36+24
 574 0112 0220     		movs	r0, #2
 575 0114 FFF7FEFF 		bl	printNotif
 133:valve.c       ****             return 0;
 576              		.loc 1 133 0
 577 0118 0023     		movs	r3, #0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 14


 578 011a 70E0     		b	.L14
 579              	.L35:
 134:valve.c       ****         }
 135:valve.c       ****         
 136:valve.c       ****     }
 137:valve.c       ****     // or more open?
 138:valve.c       ****     else if(read_Valve_pos() < position_desired){
 580              		.loc 1 138 0
 581 011c FFF7FEFF 		bl	read_Valve_pos
 582 0120 0346     		mov	r3, r0
 583 0122 7968     		ldr	r1, [r7, #4]	@ float
 584 0124 1846     		mov	r0, r3
 585 0126 FFF7FEFF 		bl	__aeabi_fcmplt
 586 012a 0346     		mov	r3, r0
 587 012c 002B     		cmp	r3, #0
 588 012e 62D0     		beq	.L20
 139:valve.c       ****         
 140:valve.c       ****         // turn the opening pin high
 141:valve.c       ****         Power_VDD1_Write(1u);
 589              		.loc 1 141 0
 590 0130 0120     		movs	r0, #1
 591 0132 FFF7FEFF 		bl	Power_VDD1_Write
 142:valve.c       ****         
 143:valve.c       ****         // while loop
 144:valve.c       ****         // continuously measure the position (measurement should be much faster than movement)
 145:valve.c       ****         // once we're within 5 percent of desired (can tighten this later) exit this do-while loop
 146:valve.c       ****         while(fabs(read_Valve_pos() - position_desired) > 0.03){
 592              		.loc 1 146 0
 593 0136 28E0     		b	.L23
 594              	.L25:
 147:valve.c       ****             prev_pos = read_Valve_pos();
 595              		.loc 1 147 0
 596 0138 FFF7FEFF 		bl	read_Valve_pos
 597 013c F860     		str	r0, [r7, #12]	@ float
 148:valve.c       ****             CyDelay(1000u);
 598              		.loc 1 148 0
 599 013e 4FF47A70 		mov	r0, #1000
 600 0142 FFF7FEFF 		bl	CyDelay
 149:valve.c       ****             // are we moving?
 150:valve.c       ****             if (fabs(prev_pos - read_Valve_pos()) < 0.0005){
 601              		.loc 1 150 0
 602 0146 FFF7FEFF 		bl	read_Valve_pos
 603 014a 0346     		mov	r3, r0
 604 014c 1946     		mov	r1, r3
 605 014e F868     		ldr	r0, [r7, #12]	@ float
 606 0150 FFF7FEFF 		bl	__aeabi_fsub
 607 0154 0346     		mov	r3, r0
 608 0156 23F00043 		bic	r3, r3, #-2147483648
 609 015a 1846     		mov	r0, r3
 610 015c FFF7FEFF 		bl	__aeabi_f2d
 611 0160 2BA3     		adr	r3, .L36+8
 612 0162 D3E90023 		ldrd	r2, [r3]
 613 0166 FFF7FEFF 		bl	__aeabi_dcmplt
 614 016a 0346     		mov	r3, r0
 615 016c 002B     		cmp	r3, #0
 616 016e 00D1     		bne	.L32
 617 0170 0BE0     		b	.L23
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 15


 618              	.L32:
 151:valve.c       ****                 // turn the opening pin low
 152:valve.c       ****                 Power_VDD1_Write(0u);
 619              		.loc 1 152 0
 620 0172 0020     		movs	r0, #0
 621 0174 FFF7FEFF 		bl	Power_VDD1_Write
 153:valve.c       ****                 // deactivate 12V battery
 154:valve.c       ****                 Pressure_Voltage_Enable_Write(OFF);
 622              		.loc 1 154 0
 623 0178 0020     		movs	r0, #0
 624 017a FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 155:valve.c       ****                 printNotif(NOTIF_TYPE_ERROR, "move_valve failed");
 625              		.loc 1 155 0
 626 017e 2849     		ldr	r1, .L36+24
 627 0180 0220     		movs	r0, #2
 628 0182 FFF7FEFF 		bl	printNotif
 156:valve.c       ****                 return 0;
 629              		.loc 1 156 0
 630 0186 0023     		movs	r3, #0
 631 0188 39E0     		b	.L14
 632              	.L23:
 146:valve.c       ****             prev_pos = read_Valve_pos();
 633              		.loc 1 146 0
 634 018a FFF7FEFF 		bl	read_Valve_pos
 635 018e 0346     		mov	r3, r0
 636 0190 7968     		ldr	r1, [r7, #4]	@ float
 637 0192 1846     		mov	r0, r3
 638 0194 FFF7FEFF 		bl	__aeabi_fsub
 639 0198 0346     		mov	r3, r0
 640 019a 23F00043 		bic	r3, r3, #-2147483648
 641 019e 1846     		mov	r0, r3
 642 01a0 FFF7FEFF 		bl	__aeabi_f2d
 643 01a4 1CA3     		adr	r3, .L36+16
 644 01a6 D3E90023 		ldrd	r2, [r3]
 645 01aa FFF7FEFF 		bl	__aeabi_dcmpgt
 646 01ae 0346     		mov	r3, r0
 647 01b0 002B     		cmp	r3, #0
 648 01b2 C1D1     		bne	.L25
 157:valve.c       ****             }
 158:valve.c       ****         }
 159:valve.c       ****         
 160:valve.c       ****         // turn the opening pin low
 161:valve.c       ****          Power_VDD1_Write(0u);
 649              		.loc 1 161 0
 650 01b4 0020     		movs	r0, #0
 651 01b6 FFF7FEFF 		bl	Power_VDD1_Write
 162:valve.c       ****         
 163:valve.c       ****         
 164:valve.c       ****         // read valve position once more and confirm we're where we want to be
 165:valve.c       ****         // if not return 0
 166:valve.c       ****         if(fabs(read_Valve_pos() - position_desired) > 0.05){
 652              		.loc 1 166 0
 653 01ba FFF7FEFF 		bl	read_Valve_pos
 654 01be 0346     		mov	r3, r0
 655 01c0 7968     		ldr	r1, [r7, #4]	@ float
 656 01c2 1846     		mov	r0, r3
 657 01c4 FFF7FEFF 		bl	__aeabi_fsub
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 16


 658 01c8 0346     		mov	r3, r0
 659 01ca 23F00043 		bic	r3, r3, #-2147483648
 660 01ce 1846     		mov	r0, r3
 661 01d0 FFF7FEFF 		bl	__aeabi_f2d
 662 01d4 0CA3     		adr	r3, .L36
 663 01d6 D3E90023 		ldrd	r2, [r3]
 664 01da FFF7FEFF 		bl	__aeabi_dcmpgt
 665 01de 0346     		mov	r3, r0
 666 01e0 002B     		cmp	r3, #0
 667 01e2 08D0     		beq	.L20
 167:valve.c       ****             // deactivate 12V battery
 168:valve.c       ****             Pressure_Voltage_Enable_Write(OFF);
 668              		.loc 1 168 0
 669 01e4 0020     		movs	r0, #0
 670 01e6 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 169:valve.c       ****             printNotif(NOTIF_TYPE_ERROR, "move_valve failed");
 671              		.loc 1 169 0
 672 01ea 0D49     		ldr	r1, .L36+24
 673 01ec 0220     		movs	r0, #2
 674 01ee FFF7FEFF 		bl	printNotif
 170:valve.c       ****             return 0;
 675              		.loc 1 170 0
 676 01f2 0023     		movs	r3, #0
 677 01f4 03E0     		b	.L14
 678              	.L20:
 171:valve.c       ****         }
 172:valve.c       ****         
 173:valve.c       ****         
 174:valve.c       ****     }
 175:valve.c       **** 
 176:valve.c       ****     
 177:valve.c       ****     // deactivate 12V battery
 178:valve.c       ****     Pressure_Voltage_Enable_Write(OFF);
 679              		.loc 1 178 0
 680 01f6 0020     		movs	r0, #0
 681 01f8 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 179:valve.c       ****     
 180:valve.c       ****     return 1; // everything worked fine
 682              		.loc 1 180 0
 683 01fc 0123     		movs	r3, #1
 684              	.L14:
 181:valve.c       **** }
 685              		.loc 1 181 0
 686 01fe 1846     		mov	r0, r3
 687 0200 1037     		adds	r7, r7, #16
 688              		.cfi_def_cfa_offset 8
 689 0202 BD46     		mov	sp, r7
 690              		.cfi_def_cfa_register 13
 691              		@ sp needed
 692 0204 80BD     		pop	{r7, pc}
 693              	.L37:
 694 0206 00BF     		.align	3
 695              	.L36:
 696 0208 9A999999 		.word	-1717986918
 697 020c 9999A93F 		.word	1068079513
 698 0210 FCA9F1D2 		.word	-755914244
 699 0214 4D62403F 		.word	1061184077
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 17


 700 0218 B81E85EB 		.word	-343597384
 701 021c 51B89E3F 		.word	1067366481
 702 0220 88000000 		.word	.LC3
 703              		.cfi_endproc
 704              	.LFE66:
 705              		.size	move_valve, .-move_valve
 706              		.section	.rodata
 707 009a 0000     		.align	2
 708              	.LC4:
 709 009c 6C657665 		.ascii	"level_controller using level_reading:%d\000"
 709      6C5F636F 
 709      6E74726F 
 709      6C6C6572 
 709      20757369 
 710              		.section	.text.valve_level_controller,"ax",%progbits
 711              		.align	2
 712              		.global	valve_level_controller
 713              		.thumb
 714              		.thumb_func
 715              		.type	valve_level_controller, %function
 716              	valve_level_controller:
 717              	.LFB67:
 182:valve.c       **** 
 183:valve.c       **** void valve_level_controller(int16 level_reading){
 718              		.loc 1 183 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 8
 721              		@ frame_needed = 1, uses_anonymous_args = 0
 722 0000 80B5     		push	{r7, lr}
 723              		.cfi_def_cfa_offset 8
 724              		.cfi_offset 7, -8
 725              		.cfi_offset 14, -4
 726 0002 82B0     		sub	sp, sp, #8
 727              		.cfi_def_cfa_offset 16
 728 0004 00AF     		add	r7, sp, #0
 729              		.cfi_def_cfa_register 7
 730 0006 0346     		mov	r3, r0
 731 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 184:valve.c       ****     printNotif(NOTIF_TYPE_EVENT, "level_controller using level_reading:%d", level_reading);
 732              		.loc 1 184 0
 733 000a B7F90630 		ldrsh	r3, [r7, #6]
 734 000e 1A46     		mov	r2, r3
 735 0010 0A49     		ldr	r1, .L42
 736 0012 0020     		movs	r0, #0
 737 0014 FFF7FEFF 		bl	printNotif
 185:valve.c       ****     if(level_reading > 500){
 738              		.loc 1 185 0
 739 0018 B7F90630 		ldrsh	r3, [r7, #6]
 740 001c B3F5FA7F 		cmp	r3, #500
 741 0020 04DD     		ble	.L39
 186:valve.c       ****         move_valve(0);
 742              		.loc 1 186 0
 743 0022 4FF00000 		mov	r0, #0
 744 0026 FFF7FEFF 		bl	move_valve
 187:valve.c       ****     }
 188:valve.c       ****     else {
 189:valve.c       ****         move_valve(1);
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 18


 190:valve.c       ****     }
 191:valve.c       **** }...
 745              		.loc 1 191 0
 746 002a 03E0     		b	.L41
 747              	.L39:
 189:valve.c       ****         move_valve(1);
 748              		.loc 1 189 0
 749 002c 4FF07E50 		mov	r0, #1065353216
 750 0030 FFF7FEFF 		bl	move_valve
 751              	.L41:
 752              		.loc 1 191 0
 753 0034 00BF     		nop
 754 0036 0837     		adds	r7, r7, #8
 755              		.cfi_def_cfa_offset 8
 756 0038 BD46     		mov	sp, r7
 757              		.cfi_def_cfa_register 13
 758              		@ sp needed
 759 003a 80BD     		pop	{r7, pc}
 760              	.L43:
 761              		.align	2
 762              	.L42:
 763 003c 9C000000 		.word	.LC4
 764              		.cfi_endproc
 765              	.LFE67:
 766              		.size	valve_level_controller, .-valve_level_controller
 767              		.text
 768              	.Letext0:
 769              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 770              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 771              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 772              		.file 5 "testing.h"
 773              		.file 6 "voltages.h"
 774              		.file 7 "data.h"
 775              		.file 8 "modem.h"
 776              		.file 9 "notoriOS.h"
 777              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 778              		.section	.debug_info,"",%progbits
 779              	.Ldebug_info0:
 780 0000 2F060000 		.4byte	0x62f
 781 0004 0400     		.2byte	0x4
 782 0006 00000000 		.4byte	.Ldebug_abbrev0
 783 000a 04       		.byte	0x4
 784 000b 01       		.uleb128 0x1
 785 000c A0000000 		.4byte	.LASF95
 786 0010 0C       		.byte	0xc
 787 0011 B6010000 		.4byte	.LASF96
 788 0015 E7010000 		.4byte	.LASF97
 789 0019 00000000 		.4byte	.Ldebug_ranges0+0
 790 001d 00000000 		.4byte	0
 791 0021 00000000 		.4byte	.Ldebug_line0
 792 0025 02       		.uleb128 0x2
 793 0026 01       		.byte	0x1
 794 0027 06       		.byte	0x6
 795 0028 D5020000 		.4byte	.LASF0
 796 002c 02       		.uleb128 0x2
 797 002d 01       		.byte	0x1
 798 002e 08       		.byte	0x8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 19


 799 002f 86020000 		.4byte	.LASF1
 800 0033 02       		.uleb128 0x2
 801 0034 02       		.byte	0x2
 802 0035 05       		.byte	0x5
 803 0036 57010000 		.4byte	.LASF2
 804 003a 02       		.uleb128 0x2
 805 003b 02       		.byte	0x2
 806 003c 07       		.byte	0x7
 807 003d 85030000 		.4byte	.LASF3
 808 0041 03       		.uleb128 0x3
 809 0042 BA040000 		.4byte	.LASF9
 810 0046 02       		.byte	0x2
 811 0047 3F       		.byte	0x3f
 812 0048 4C000000 		.4byte	0x4c
 813 004c 02       		.uleb128 0x2
 814 004d 04       		.byte	0x4
 815 004e 05       		.byte	0x5
 816 004f DE010000 		.4byte	.LASF4
 817 0053 02       		.uleb128 0x2
 818 0054 04       		.byte	0x4
 819 0055 07       		.byte	0x7
 820 0056 59040000 		.4byte	.LASF5
 821 005a 02       		.uleb128 0x2
 822 005b 08       		.byte	0x8
 823 005c 05       		.byte	0x5
 824 005d C4010000 		.4byte	.LASF6
 825 0061 02       		.uleb128 0x2
 826 0062 08       		.byte	0x8
 827 0063 07       		.byte	0x7
 828 0064 F0020000 		.4byte	.LASF7
 829 0068 04       		.uleb128 0x4
 830 0069 04       		.byte	0x4
 831 006a 05       		.byte	0x5
 832 006b 696E7400 		.ascii	"int\000"
 833 006f 02       		.uleb128 0x2
 834 0070 04       		.byte	0x4
 835 0071 07       		.byte	0x7
 836 0072 17030000 		.4byte	.LASF8
 837 0076 03       		.uleb128 0x3
 838 0077 F2030000 		.4byte	.LASF10
 839 007b 03       		.byte	0x3
 840 007c 2C       		.byte	0x2c
 841 007d 41000000 		.4byte	0x41
 842 0081 05       		.uleb128 0x5
 843 0082 89010000 		.4byte	.LASF11
 844 0086 04       		.byte	0x4
 845 0087 9201     		.2byte	0x192
 846 0089 2C000000 		.4byte	0x2c
 847 008d 05       		.uleb128 0x5
 848 008e 47040000 		.4byte	.LASF12
 849 0092 04       		.byte	0x4
 850 0093 9301     		.2byte	0x193
 851 0095 3A000000 		.4byte	0x3a
 852 0099 05       		.uleb128 0x5
 853 009a 94010000 		.4byte	.LASF13
 854 009e 04       		.byte	0x4
 855 009f 9601     		.2byte	0x196
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 20


 856 00a1 33000000 		.4byte	0x33
 857 00a5 05       		.uleb128 0x5
 858 00a6 6B040000 		.4byte	.LASF14
 859 00aa 04       		.byte	0x4
 860 00ab 9701     		.2byte	0x197
 861 00ad 4C000000 		.4byte	0x4c
 862 00b1 05       		.uleb128 0x5
 863 00b2 3C000000 		.4byte	.LASF15
 864 00b6 04       		.byte	0x4
 865 00b7 9801     		.2byte	0x198
 866 00b9 BD000000 		.4byte	0xbd
 867 00bd 02       		.uleb128 0x2
 868 00be 04       		.byte	0x4
 869 00bf 04       		.byte	0x4
 870 00c0 BE010000 		.4byte	.LASF16
 871 00c4 02       		.uleb128 0x2
 872 00c5 08       		.byte	0x8
 873 00c6 04       		.byte	0x4
 874 00c7 71040000 		.4byte	.LASF17
 875 00cb 02       		.uleb128 0x2
 876 00cc 01       		.byte	0x1
 877 00cd 08       		.byte	0x8
 878 00ce D2010000 		.4byte	.LASF18
 879 00d2 02       		.uleb128 0x2
 880 00d3 08       		.byte	0x8
 881 00d4 04       		.byte	0x4
 882 00d5 65020000 		.4byte	.LASF19
 883 00d9 02       		.uleb128 0x2
 884 00da 04       		.byte	0x4
 885 00db 07       		.byte	0x7
 886 00dc 8F000000 		.4byte	.LASF20
 887 00e0 06       		.uleb128 0x6
 888 00e1 CB000000 		.4byte	0xcb
 889 00e5 F0000000 		.4byte	0xf0
 890 00e9 07       		.uleb128 0x7
 891 00ea D9000000 		.4byte	0xd9
 892 00ee 17       		.byte	0x17
 893 00ef 00       		.byte	0
 894 00f0 08       		.uleb128 0x8
 895 00f1 8101     		.2byte	0x181
 896 00f3 05       		.byte	0x5
 897 00f4 0A       		.byte	0xa
 898 00f5 1E010000 		.4byte	0x11e
 899 00f9 09       		.uleb128 0x9
 900 00fa F8040000 		.4byte	.LASF21
 901 00fe 05       		.byte	0x5
 902 00ff 0C       		.byte	0xc
 903 0100 1E010000 		.4byte	0x11e
 904 0104 00       		.byte	0
 905 0105 09       		.uleb128 0x9
 906 0106 B0030000 		.4byte	.LASF22
 907 010a 05       		.byte	0x5
 908 010b 0D       		.byte	0xd
 909 010c 81000000 		.4byte	0x81
 910 0110 80       		.byte	0x80
 911 0111 09       		.uleb128 0x9
 912 0112 D7010000 		.4byte	.LASF23
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 21


 913 0116 05       		.byte	0x5
 914 0117 0F       		.byte	0xf
 915 0118 2E010000 		.4byte	0x12e
 916 011c 81       		.byte	0x81
 917 011d 00       		.byte	0
 918 011e 06       		.uleb128 0x6
 919 011f CB000000 		.4byte	0xcb
 920 0123 2E010000 		.4byte	0x12e
 921 0127 07       		.uleb128 0x7
 922 0128 D9000000 		.4byte	0xd9
 923 012c 7F       		.byte	0x7f
 924 012d 00       		.byte	0
 925 012e 06       		.uleb128 0x6
 926 012f CB000000 		.4byte	0xcb
 927 0133 3E010000 		.4byte	0x13e
 928 0137 07       		.uleb128 0x7
 929 0138 D9000000 		.4byte	0xd9
 930 013c FF       		.byte	0xff
 931 013d 00       		.byte	0
 932 013e 03       		.uleb128 0x3
 933 013f D6030000 		.4byte	.LASF24
 934 0143 05       		.byte	0x5
 935 0144 10       		.byte	0x10
 936 0145 F0000000 		.4byte	0xf0
 937 0149 0A       		.uleb128 0xa
 938 014a 1C       		.byte	0x1c
 939 014b 06       		.byte	0x6
 940 014c 14       		.byte	0x14
 941 014d A6010000 		.4byte	0x1a6
 942 0151 09       		.uleb128 0x9
 943 0152 67010000 		.4byte	.LASF25
 944 0156 06       		.byte	0x6
 945 0157 15       		.byte	0x15
 946 0158 BD000000 		.4byte	0xbd
 947 015c 00       		.byte	0
 948 015d 09       		.uleb128 0x9
 949 015e 1F000000 		.4byte	.LASF26
 950 0162 06       		.byte	0x6
 951 0163 16       		.byte	0x16
 952 0164 BD000000 		.4byte	0xbd
 953 0168 04       		.byte	0x4
 954 0169 09       		.uleb128 0x9
 955 016a 28050000 		.4byte	.LASF27
 956 016e 06       		.byte	0x6
 957 016f 17       		.byte	0x17
 958 0170 BD000000 		.4byte	0xbd
 959 0174 08       		.byte	0x8
 960 0175 09       		.uleb128 0x9
 961 0176 33010000 		.4byte	.LASF28
 962 017a 06       		.byte	0x6
 963 017b 18       		.byte	0x18
 964 017c BD000000 		.4byte	0xbd
 965 0180 0C       		.byte	0xc
 966 0181 09       		.uleb128 0x9
 967 0182 A4010000 		.4byte	.LASF29
 968 0186 06       		.byte	0x6
 969 0187 19       		.byte	0x19
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 22


 970 0188 BD000000 		.4byte	0xbd
 971 018c 10       		.byte	0x10
 972 018d 09       		.uleb128 0x9
 973 018e 08040000 		.4byte	.LASF30
 974 0192 06       		.byte	0x6
 975 0193 1A       		.byte	0x1a
 976 0194 BD000000 		.4byte	0xbd
 977 0198 14       		.byte	0x14
 978 0199 09       		.uleb128 0x9
 979 019a 00000000 		.4byte	.LASF31
 980 019e 06       		.byte	0x6
 981 019f 1B       		.byte	0x1b
 982 01a0 81000000 		.4byte	0x81
 983 01a4 18       		.byte	0x18
 984 01a5 00       		.byte	0
 985 01a6 03       		.uleb128 0x3
 986 01a7 E8030000 		.4byte	.LASF32
 987 01ab 06       		.byte	0x6
 988 01ac 1C       		.byte	0x1c
 989 01ad 49010000 		.4byte	0x149
 990 01b1 0A       		.uleb128 0xa
 991 01b2 2C       		.byte	0x2c
 992 01b3 07       		.byte	0x7
 993 01b4 14       		.byte	0x14
 994 01b5 DE010000 		.4byte	0x1de
 995 01b9 0B       		.uleb128 0xb
 996 01ba 6B657900 		.ascii	"key\000"
 997 01be 07       		.byte	0x7
 998 01bf 15       		.byte	0x15
 999 01c0 DE010000 		.4byte	0x1de
 1000 01c4 00       		.byte	0
 1001 01c5 09       		.uleb128 0x9
 1002 01c6 61010000 		.4byte	.LASF33
 1003 01ca 07       		.byte	0x7
 1004 01cb 16       		.byte	0x16
 1005 01cc DE010000 		.4byte	0x1de
 1006 01d0 14       		.byte	0x14
 1007 01d1 09       		.uleb128 0x9
 1008 01d2 9A010000 		.4byte	.LASF34
 1009 01d6 07       		.byte	0x7
 1010 01d7 17       		.byte	0x17
 1011 01d8 A5000000 		.4byte	0xa5
 1012 01dc 28       		.byte	0x28
 1013 01dd 00       		.byte	0
 1014 01de 06       		.uleb128 0x6
 1015 01df CB000000 		.4byte	0xcb
 1016 01e3 EE010000 		.4byte	0x1ee
 1017 01e7 07       		.uleb128 0x7
 1018 01e8 D9000000 		.4byte	0xd9
 1019 01ec 13       		.byte	0x13
 1020 01ed 00       		.byte	0
 1021 01ee 03       		.uleb128 0x3
 1022 01ef 24030000 		.4byte	.LASF35
 1023 01f3 07       		.byte	0x7
 1024 01f4 19       		.byte	0x19
 1025 01f5 B1010000 		.4byte	0x1b1
 1026 01f9 0A       		.uleb128 0xa
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 23


 1027 01fa 3C       		.byte	0x3c
 1028 01fb 08       		.byte	0x8
 1029 01fc 37       		.byte	0x37
 1030 01fd 26020000 		.4byte	0x226
 1031 0201 09       		.uleb128 0x9
 1032 0202 18000000 		.4byte	.LASF36
 1033 0206 08       		.byte	0x8
 1034 0207 38       		.byte	0x38
 1035 0208 DE010000 		.4byte	0x1de
 1036 020c 00       		.byte	0
 1037 020d 09       		.uleb128 0x9
 1038 020e 06000000 		.4byte	.LASF37
 1039 0212 08       		.byte	0x8
 1040 0213 39       		.byte	0x39
 1041 0214 DE010000 		.4byte	0x1de
 1042 0218 14       		.byte	0x14
 1043 0219 09       		.uleb128 0x9
 1044 021a DC040000 		.4byte	.LASF38
 1045 021e 08       		.byte	0x8
 1046 021f 3A       		.byte	0x3a
 1047 0220 DE010000 		.4byte	0x1de
 1048 0224 28       		.byte	0x28
 1049 0225 00       		.byte	0
 1050 0226 03       		.uleb128 0x3
 1051 0227 91040000 		.4byte	.LASF39
 1052 022b 08       		.byte	0x8
 1053 022c 3C       		.byte	0x3c
 1054 022d F9010000 		.4byte	0x1f9
 1055 0231 0A       		.uleb128 0xa
 1056 0232 20       		.byte	0x20
 1057 0233 08       		.byte	0x8
 1058 0234 3E       		.byte	0x3e
 1059 0235 9A020000 		.4byte	0x29a
 1060 0239 09       		.uleb128 0x9
 1061 023a 30030000 		.4byte	.LASF40
 1062 023e 08       		.byte	0x8
 1063 023f 3F       		.byte	0x3f
 1064 0240 68000000 		.4byte	0x68
 1065 0244 00       		.byte	0
 1066 0245 0B       		.uleb128 0xb
 1067 0246 62657200 		.ascii	"ber\000"
 1068 024a 08       		.byte	0x8
 1069 024b 40       		.byte	0x40
 1070 024c 68000000 		.4byte	0x68
 1071 0250 04       		.byte	0x4
 1072 0251 09       		.uleb128 0x9
 1073 0252 8F010000 		.4byte	.LASF41
 1074 0256 08       		.byte	0x8
 1075 0257 41       		.byte	0x41
 1076 0258 68000000 		.4byte	0x68
 1077 025c 08       		.byte	0x8
 1078 025d 09       		.uleb128 0x9
 1079 025e 52010000 		.4byte	.LASF42
 1080 0262 08       		.byte	0x8
 1081 0263 42       		.byte	0x42
 1082 0264 68000000 		.4byte	0x68
 1083 0268 0C       		.byte	0xc
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 24


 1084 0269 09       		.uleb128 0x9
 1085 026a 42040000 		.4byte	.LASF43
 1086 026e 08       		.byte	0x8
 1087 026f 43       		.byte	0x43
 1088 0270 68000000 		.4byte	0x68
 1089 0274 10       		.byte	0x10
 1090 0275 09       		.uleb128 0x9
 1091 0276 94020000 		.4byte	.LASF44
 1092 027a 08       		.byte	0x8
 1093 027b 44       		.byte	0x44
 1094 027c 68000000 		.4byte	0x68
 1095 0280 14       		.byte	0x14
 1096 0281 09       		.uleb128 0x9
 1097 0282 98030000 		.4byte	.LASF45
 1098 0286 08       		.byte	0x8
 1099 0287 45       		.byte	0x45
 1100 0288 68000000 		.4byte	0x68
 1101 028c 18       		.byte	0x18
 1102 028d 09       		.uleb128 0x9
 1103 028e C3030000 		.4byte	.LASF46
 1104 0292 08       		.byte	0x8
 1105 0293 46       		.byte	0x46
 1106 0294 68000000 		.4byte	0x68
 1107 0298 1C       		.byte	0x1c
 1108 0299 00       		.byte	0
 1109 029a 03       		.uleb128 0x3
 1110 029b FA030000 		.4byte	.LASF47
 1111 029f 08       		.byte	0x8
 1112 02a0 48       		.byte	0x48
 1113 02a1 31020000 		.4byte	0x231
 1114 02a5 0A       		.uleb128 0xa
 1115 02a6 05       		.byte	0x5
 1116 02a7 08       		.byte	0x8
 1117 02a8 54       		.byte	0x54
 1118 02a9 EA020000 		.4byte	0x2ea
 1119 02ad 09       		.uleb128 0x9
 1120 02ae 1E050000 		.4byte	.LASF48
 1121 02b2 08       		.byte	0x8
 1122 02b3 56       		.byte	0x56
 1123 02b4 81000000 		.4byte	0x81
 1124 02b8 00       		.byte	0
 1125 02b9 09       		.uleb128 0x9
 1126 02ba 71030000 		.4byte	.LASF49
 1127 02be 08       		.byte	0x8
 1128 02bf 58       		.byte	0x58
 1129 02c0 EA020000 		.4byte	0x2ea
 1130 02c4 01       		.byte	0x1
 1131 02c5 09       		.uleb128 0x9
 1132 02c6 3D020000 		.4byte	.LASF50
 1133 02ca 08       		.byte	0x8
 1134 02cb 5A       		.byte	0x5a
 1135 02cc 81000000 		.4byte	0x81
 1136 02d0 02       		.byte	0x2
 1137 02d1 09       		.uleb128 0x9
 1138 02d2 36030000 		.4byte	.LASF51
 1139 02d6 08       		.byte	0x8
 1140 02d7 5C       		.byte	0x5c
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 25


 1141 02d8 81000000 		.4byte	0x81
 1142 02dc 03       		.byte	0x3
 1143 02dd 09       		.uleb128 0x9
 1144 02de 85040000 		.4byte	.LASF52
 1145 02e2 08       		.byte	0x8
 1146 02e3 5F       		.byte	0x5f
 1147 02e4 81000000 		.4byte	0x81
 1148 02e8 04       		.byte	0x4
 1149 02e9 00       		.byte	0
 1150 02ea 02       		.uleb128 0x2
 1151 02eb 01       		.byte	0x1
 1152 02ec 02       		.byte	0x2
 1153 02ed 20040000 		.4byte	.LASF53
 1154 02f1 03       		.uleb128 0x3
 1155 02f2 5A030000 		.4byte	.LASF54
 1156 02f6 08       		.byte	0x8
 1157 02f7 61       		.byte	0x61
 1158 02f8 A5020000 		.4byte	0x2a5
 1159 02fc 0A       		.uleb128 0xa
 1160 02fd 06       		.byte	0x6
 1161 02fe 09       		.byte	0x9
 1162 02ff 2E       		.byte	0x2e
 1163 0300 35030000 		.4byte	0x335
 1164 0304 09       		.uleb128 0x9
 1165 0305 6A000000 		.4byte	.LASF55
 1166 0309 09       		.byte	0x9
 1167 030a 30       		.byte	0x30
 1168 030b 8D000000 		.4byte	0x8d
 1169 030f 00       		.byte	0
 1170 0310 09       		.uleb128 0x9
 1171 0311 44000000 		.4byte	.LASF56
 1172 0315 09       		.byte	0x9
 1173 0316 31       		.byte	0x31
 1174 0317 99000000 		.4byte	0x99
 1175 031b 02       		.byte	0x2
 1176 031c 09       		.uleb128 0x9
 1177 031d 9E040000 		.4byte	.LASF57
 1178 0321 09       		.byte	0x9
 1179 0322 32       		.byte	0x32
 1180 0323 81000000 		.4byte	0x81
 1181 0327 04       		.byte	0x4
 1182 0328 09       		.uleb128 0x9
 1183 0329 C4040000 		.4byte	.LASF58
 1184 032d 09       		.byte	0x9
 1185 032e 33       		.byte	0x33
 1186 032f 81000000 		.4byte	0x81
 1187 0333 05       		.byte	0x5
 1188 0334 00       		.byte	0
 1189 0335 03       		.uleb128 0x3
 1190 0336 37020000 		.4byte	.LASF59
 1191 033a 09       		.byte	0x9
 1192 033b 36       		.byte	0x36
 1193 033c 40030000 		.4byte	0x340
 1194 0340 0C       		.uleb128 0xc
 1195 0341 FC020000 		.4byte	0x2fc
 1196 0345 0A       		.uleb128 0xa
 1197 0346 1C       		.byte	0x1c
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 26


 1198 0347 09       		.byte	0x9
 1199 0348 39       		.byte	0x39
 1200 0349 66030000 		.4byte	0x366
 1201 034d 09       		.uleb128 0x9
 1202 034e 14020000 		.4byte	.LASF60
 1203 0352 09       		.byte	0x9
 1204 0353 3B       		.byte	0x3b
 1205 0354 66030000 		.4byte	0x366
 1206 0358 00       		.byte	0
 1207 0359 09       		.uleb128 0x9
 1208 035a 44010000 		.4byte	.LASF61
 1209 035e 09       		.byte	0x9
 1210 035f 3C       		.byte	0x3c
 1211 0360 E0000000 		.4byte	0xe0
 1212 0364 04       		.byte	0x4
 1213 0365 00       		.byte	0
 1214 0366 0D       		.uleb128 0xd
 1215 0367 04       		.byte	0x4
 1216 0368 26020000 		.4byte	0x226
 1217 036c 03       		.uleb128 0x3
 1218 036d 7A030000 		.4byte	.LASF62
 1219 0371 09       		.byte	0x9
 1220 0372 3E       		.byte	0x3e
 1221 0373 45030000 		.4byte	0x345
 1222 0377 0A       		.uleb128 0xa
 1223 0378 68       		.byte	0x68
 1224 0379 09       		.byte	0x9
 1225 037a 44       		.byte	0x44
 1226 037b 98030000 		.4byte	0x398
 1227 037f 09       		.uleb128 0x9
 1228 0380 98000000 		.4byte	.LASF63
 1229 0384 09       		.byte	0x9
 1230 0385 49       		.byte	0x49
 1231 0386 98030000 		.4byte	0x398
 1232 038a 00       		.byte	0
 1233 038b 09       		.uleb128 0x9
 1234 038c 0C050000 		.4byte	.LASF64
 1235 0390 09       		.byte	0x9
 1236 0391 4A       		.byte	0x4a
 1237 0392 68000000 		.4byte	0x68
 1238 0396 64       		.byte	0x64
 1239 0397 00       		.byte	0
 1240 0398 06       		.uleb128 0x6
 1241 0399 CB000000 		.4byte	0xcb
 1242 039d A8030000 		.4byte	0x3a8
 1243 03a1 07       		.uleb128 0x7
 1244 03a2 D9000000 		.4byte	0xd9
 1245 03a6 63       		.byte	0x63
 1246 03a7 00       		.byte	0
 1247 03a8 03       		.uleb128 0x3
 1248 03a9 2D000000 		.4byte	.LASF65
 1249 03ad 09       		.byte	0x9
 1250 03ae 50       		.byte	0x50
 1251 03af 77030000 		.4byte	0x377
 1252 03b3 0E       		.uleb128 0xe
 1253 03b4 2C020000 		.4byte	.LASF69
 1254 03b8 01       		.byte	0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 27


 1255 03b9 07       		.byte	0x7
 1256 03ba 3E010000 		.4byte	0x13e
 1257 03be 00000000 		.4byte	.LFB64
 1258 03c2 B4020000 		.4byte	.LFE64-.LFB64
 1259 03c6 01       		.uleb128 0x1
 1260 03c7 9C       		.byte	0x9c
 1261 03c8 FA030000 		.4byte	0x3fa
 1262 03cc 0F       		.uleb128 0xf
 1263 03cd 3D040000 		.4byte	.LASF66
 1264 03d1 01       		.byte	0x1
 1265 03d2 0E       		.byte	0xe
 1266 03d3 3E010000 		.4byte	0x13e
 1267 03d7 03       		.uleb128 0x3
 1268 03d8 91       		.byte	0x91
 1269 03d9 C07C     		.sleb128 -448
 1270 03db 0F       		.uleb128 0xf
 1271 03dc 02050000 		.4byte	.LASF67
 1272 03e0 01       		.byte	0x1
 1273 03e1 12       		.byte	0x12
 1274 03e2 FA030000 		.4byte	0x3fa
 1275 03e6 03       		.uleb128 0x3
 1276 03e7 91       		.byte	0x91
 1277 03e8 A07C     		.sleb128 -480
 1278 03ea 0F       		.uleb128 0xf
 1279 03eb 0F000000 		.4byte	.LASF68
 1280 03ef 01       		.byte	0x1
 1281 03f0 14       		.byte	0x14
 1282 03f1 0A040000 		.4byte	0x40a
 1283 03f5 03       		.uleb128 0x3
 1284 03f6 91       		.byte	0x91
 1285 03f7 C07A     		.sleb128 -704
 1286 03f9 00       		.byte	0
 1287 03fa 06       		.uleb128 0x6
 1288 03fb B1000000 		.4byte	0xb1
 1289 03ff 0A040000 		.4byte	0x40a
 1290 0403 07       		.uleb128 0x7
 1291 0404 D9000000 		.4byte	0xd9
 1292 0408 07       		.byte	0x7
 1293 0409 00       		.byte	0
 1294 040a 06       		.uleb128 0x6
 1295 040b A6010000 		.4byte	0x1a6
 1296 040f 1A040000 		.4byte	0x41a
 1297 0413 07       		.uleb128 0x7
 1298 0414 D9000000 		.4byte	0xd9
 1299 0418 07       		.byte	0x7
 1300 0419 00       		.byte	0
 1301 041a 0E       		.uleb128 0xe
 1302 041b E1020000 		.4byte	.LASF70
 1303 041f 01       		.byte	0x1
 1304 0420 4A       		.byte	0x4a
 1305 0421 B1000000 		.4byte	0xb1
 1306 0425 00000000 		.4byte	.LFB65
 1307 0429 50000000 		.4byte	.LFE65-.LFB65
 1308 042d 01       		.uleb128 0x1
 1309 042e 9C       		.byte	0x9c
 1310 042f 42040000 		.4byte	0x442
 1311 0433 0F       		.uleb128 0xf
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 28


 1312 0434 4A050000 		.4byte	.LASF71
 1313 0438 01       		.byte	0x1
 1314 0439 4C       		.byte	0x4c
 1315 043a A6010000 		.4byte	0x1a6
 1316 043e 02       		.uleb128 0x2
 1317 043f 91       		.byte	0x91
 1318 0440 54       		.sleb128 -44
 1319 0441 00       		.byte	0
 1320 0442 10       		.uleb128 0x10
 1321 0443 DD030000 		.4byte	.LASF98
 1322 0447 01       		.byte	0x1
 1323 0448 52       		.byte	0x52
 1324 0449 81000000 		.4byte	0x81
 1325 044d 00000000 		.4byte	.LFB66
 1326 0451 24020000 		.4byte	.LFE66-.LFB66
 1327 0455 01       		.uleb128 0x1
 1328 0456 9C       		.byte	0x9c
 1329 0457 78040000 		.4byte	0x478
 1330 045b 11       		.uleb128 0x11
 1331 045c 4A020000 		.4byte	.LASF74
 1332 0460 01       		.byte	0x1
 1333 0461 52       		.byte	0x52
 1334 0462 B1000000 		.4byte	0xb1
 1335 0466 02       		.uleb128 0x2
 1336 0467 91       		.byte	0x91
 1337 0468 6C       		.sleb128 -20
 1338 0469 0F       		.uleb128 0xf
 1339 046a 79000000 		.4byte	.LASF72
 1340 046e 01       		.byte	0x1
 1341 046f 5B       		.byte	0x5b
 1342 0470 B1000000 		.4byte	0xb1
 1343 0474 02       		.uleb128 0x2
 1344 0475 91       		.byte	0x91
 1345 0476 74       		.sleb128 -12
 1346 0477 00       		.byte	0
 1347 0478 12       		.uleb128 0x12
 1348 0479 E1040000 		.4byte	.LASF73
 1349 047d 01       		.byte	0x1
 1350 047e B7       		.byte	0xb7
 1351 047f 00000000 		.4byte	.LFB67
 1352 0483 40000000 		.4byte	.LFE67-.LFB67
 1353 0487 01       		.uleb128 0x1
 1354 0488 9C       		.byte	0x9c
 1355 0489 9C040000 		.4byte	0x49c
 1356 048d 11       		.uleb128 0x11
 1357 048e AC040000 		.4byte	.LASF75
 1358 0492 01       		.byte	0x1
 1359 0493 B7       		.byte	0xb7
 1360 0494 99000000 		.4byte	0x99
 1361 0498 02       		.uleb128 0x2
 1362 0499 91       		.byte	0x91
 1363 049a 76       		.sleb128 -10
 1364 049b 00       		.byte	0
 1365 049c 13       		.uleb128 0x13
 1366 049d 78040000 		.4byte	.LASF76
 1367 04a1 0A       		.byte	0xa
 1368 04a2 1207     		.2byte	0x712
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 29


 1369 04a4 A8040000 		.4byte	0x4a8
 1370 04a8 0C       		.uleb128 0xc
 1371 04a9 76000000 		.4byte	0x76
 1372 04ad 14       		.uleb128 0x14
 1373 04ae 5A000000 		.4byte	.LASF77
 1374 04b2 07       		.byte	0x7
 1375 04b3 11       		.byte	0x11
 1376 04b4 EA020000 		.4byte	0x2ea
 1377 04b8 05       		.uleb128 0x5
 1378 04b9 03       		.byte	0x3
 1379 04ba 00000000 		.4byte	buffer_overflow
 1380 04be 14       		.uleb128 0x14
 1381 04bf 77010000 		.4byte	.LASF78
 1382 04c3 07       		.byte	0x7
 1383 04c4 22       		.byte	0x22
 1384 04c5 8D000000 		.4byte	0x8d
 1385 04c9 05       		.uleb128 0x5
 1386 04ca 03       		.byte	0x3
 1387 04cb 00000000 		.4byte	dataPointsInStack
 1388 04cf 14       		.uleb128 0x14
 1389 04d0 B0020000 		.4byte	.LASF79
 1390 04d4 07       		.byte	0x7
 1391 04d5 23       		.byte	0x23
 1392 04d6 8D000000 		.4byte	0x8d
 1393 04da 05       		.uleb128 0x5
 1394 04db 03       		.byte	0x3
 1395 04dc 00000000 		.4byte	dataPointsInStackDesired
 1396 04e0 06       		.uleb128 0x6
 1397 04e1 EE010000 		.4byte	0x1ee
 1398 04e5 F0040000 		.4byte	0x4f0
 1399 04e9 07       		.uleb128 0x7
 1400 04ea D9000000 		.4byte	0xd9
 1401 04ee 95       		.byte	0x95
 1402 04ef 00       		.byte	0
 1403 04f0 14       		.uleb128 0x14
 1404 04f1 2E010000 		.4byte	.LASF80
 1405 04f5 07       		.byte	0x7
 1406 04f6 24       		.byte	0x24
 1407 04f7 E0040000 		.4byte	0x4e0
 1408 04fb 05       		.uleb128 0x5
 1409 04fc 03       		.byte	0x3
 1410 04fd 00000000 		.4byte	data
 1411 0501 14       		.uleb128 0x14
 1412 0502 C9020000 		.4byte	.LASF81
 1413 0506 08       		.byte	0x8
 1414 0507 21       		.byte	0x21
 1415 0508 81000000 		.4byte	0x81
 1416 050c 05       		.uleb128 0x5
 1417 050d 03       		.byte	0x3
 1418 050e 00000000 		.4byte	modem_state
 1419 0512 14       		.uleb128 0x14
 1420 0513 99020000 		.4byte	.LASF82
 1421 0517 08       		.byte	0x8
 1422 0518 64       		.byte	0x64
 1423 0519 A5000000 		.4byte	0xa5
 1424 051d 05       		.uleb128 0x5
 1425 051e 03       		.byte	0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 30


 1426 051f 00000000 		.4byte	modem_start_time_stamp
 1427 0523 14       		.uleb128 0x14
 1428 0524 14020000 		.4byte	.LASF60
 1429 0528 08       		.byte	0x8
 1430 0529 65       		.byte	0x65
 1431 052a 26020000 		.4byte	0x226
 1432 052e 05       		.uleb128 0x5
 1433 052f 03       		.byte	0x3
 1434 0530 00000000 		.4byte	modem_info
 1435 0534 14       		.uleb128 0x14
 1436 0535 40030000 		.4byte	.LASF83
 1437 0539 08       		.byte	0x8
 1438 053a 66       		.byte	0x66
 1439 053b 9A020000 		.4byte	0x29a
 1440 053f 05       		.uleb128 0x5
 1441 0540 03       		.byte	0x3
 1442 0541 00000000 		.4byte	modem_stats
 1443 0545 14       		.uleb128 0x14
 1444 0546 71020000 		.4byte	.LASF84
 1445 054a 08       		.byte	0x8
 1446 054b 67       		.byte	0x67
 1447 054c F1020000 		.4byte	0x2f1
 1448 0550 05       		.uleb128 0x5
 1449 0551 03       		.byte	0x3
 1450 0552 00000000 		.4byte	updatable_parameters
 1451 0556 06       		.uleb128 0x6
 1452 0557 CB000000 		.4byte	0xcb
 1453 055b 67050000 		.4byte	0x567
 1454 055f 15       		.uleb128 0x15
 1455 0560 D9000000 		.4byte	0xd9
 1456 0564 0F27     		.2byte	0x270f
 1457 0566 00       		.byte	0
 1458 0567 14       		.uleb128 0x14
 1459 0568 82000000 		.4byte	.LASF85
 1460 056c 09       		.byte	0x9
 1461 056d 18       		.byte	0x18
 1462 056e 56050000 		.4byte	0x556
 1463 0572 05       		.uleb128 0x5
 1464 0573 03       		.byte	0x3
 1465 0574 00000000 		.4byte	http_request
 1466 0578 14       		.uleb128 0x14
 1467 0579 14050000 		.4byte	.LASF86
 1468 057d 09       		.byte	0x9
 1469 057e 19       		.byte	0x19
 1470 057f 56050000 		.4byte	0x556
 1471 0583 05       		.uleb128 0x5
 1472 0584 03       		.byte	0x3
 1473 0585 00000000 		.4byte	http_body
 1474 0589 06       		.uleb128 0x6
 1475 058a CB000000 		.4byte	0xcb
 1476 058e 99050000 		.4byte	0x599
 1477 0592 07       		.uleb128 0x7
 1478 0593 D9000000 		.4byte	0xd9
 1479 0597 C7       		.byte	0xc7
 1480 0598 00       		.byte	0
 1481 0599 14       		.uleb128 0x14
 1482 059a 4E040000 		.4byte	.LASF87
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 31


 1483 059e 09       		.byte	0x9
 1484 059f 1A       		.byte	0x1a
 1485 05a0 89050000 		.4byte	0x589
 1486 05a4 05       		.uleb128 0x5
 1487 05a5 03       		.byte	0x3
 1488 05a6 00000000 		.4byte	http_route
 1489 05aa 14       		.uleb128 0x14
 1490 05ab B7030000 		.4byte	.LASF88
 1491 05af 09       		.byte	0x9
 1492 05b0 41       		.byte	0x41
 1493 05b1 6C030000 		.4byte	0x36c
 1494 05b5 05       		.uleb128 0x5
 1495 05b6 03       		.byte	0x3
 1496 05b7 00000000 		.4byte	system_info
 1497 05bb 14       		.uleb128 0x14
 1498 05bc 07030000 		.4byte	.LASF89
 1499 05c0 09       		.byte	0x9
 1500 05c1 53       		.byte	0x53
 1501 05c2 A8030000 		.4byte	0x3a8
 1502 05c6 05       		.uleb128 0x5
 1503 05c7 03       		.byte	0x3
 1504 05c8 00000000 		.4byte	system_settings
 1505 05cc 14       		.uleb128 0x14
 1506 05cd 1F020000 		.4byte	.LASF90
 1507 05d1 09       		.byte	0x9
 1508 05d2 6F       		.byte	0x6f
 1509 05d3 35030000 		.4byte	0x335
 1510 05d7 05       		.uleb128 0x5
 1511 05d8 03       		.byte	0x3
 1512 05d9 00000000 		.4byte	alarmMeasure
 1513 05dd 14       		.uleb128 0x14
 1514 05de 4C030000 		.4byte	.LASF91
 1515 05e2 09       		.byte	0x9
 1516 05e3 70       		.byte	0x70
 1517 05e4 81000000 		.4byte	0x81
 1518 05e8 05       		.uleb128 0x5
 1519 05e9 03       		.byte	0x3
 1520 05ea 00000000 		.4byte	timeToMeasure
 1521 05ee 14       		.uleb128 0x14
 1522 05ef 5B020000 		.4byte	.LASF92
 1523 05f3 09       		.byte	0x9
 1524 05f4 71       		.byte	0x71
 1525 05f5 35030000 		.4byte	0x335
 1526 05f9 05       		.uleb128 0x5
 1527 05fa 03       		.byte	0x3
 1528 05fb 00000000 		.4byte	alarmSync
 1529 05ff 14       		.uleb128 0x14
 1530 0600 3F050000 		.4byte	.LASF93
 1531 0604 09       		.byte	0x9
 1532 0605 72       		.byte	0x72
 1533 0606 81000000 		.4byte	0x81
 1534 060a 05       		.uleb128 0x5
 1535 060b 03       		.byte	0x3
 1536 060c 00000000 		.4byte	timeToSync
 1537 0610 14       		.uleb128 0x14
 1538 0611 26040000 		.4byte	.LASF94
 1539 0615 09       		.byte	0x9
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 32


 1540 0616 73       		.byte	0x73
 1541 0617 81000000 		.4byte	0x81
 1542 061b 05       		.uleb128 0x5
 1543 061c 03       		.byte	0x3
 1544 061d 00000000 		.4byte	timeToSycnRemoteParams
 1545 0621 16       		.uleb128 0x16
 1546 0622 68657900 		.ascii	"hey\000"
 1547 0626 09       		.byte	0x9
 1548 0627 74       		.byte	0x74
 1549 0628 81000000 		.4byte	0x81
 1550 062c 05       		.uleb128 0x5
 1551 062d 03       		.byte	0x3
 1552 062e 00000000 		.4byte	hey
 1553 0632 00       		.byte	0
 1554              		.section	.debug_abbrev,"",%progbits
 1555              	.Ldebug_abbrev0:
 1556 0000 01       		.uleb128 0x1
 1557 0001 11       		.uleb128 0x11
 1558 0002 01       		.byte	0x1
 1559 0003 25       		.uleb128 0x25
 1560 0004 0E       		.uleb128 0xe
 1561 0005 13       		.uleb128 0x13
 1562 0006 0B       		.uleb128 0xb
 1563 0007 03       		.uleb128 0x3
 1564 0008 0E       		.uleb128 0xe
 1565 0009 1B       		.uleb128 0x1b
 1566 000a 0E       		.uleb128 0xe
 1567 000b 55       		.uleb128 0x55
 1568 000c 17       		.uleb128 0x17
 1569 000d 11       		.uleb128 0x11
 1570 000e 01       		.uleb128 0x1
 1571 000f 10       		.uleb128 0x10
 1572 0010 17       		.uleb128 0x17
 1573 0011 00       		.byte	0
 1574 0012 00       		.byte	0
 1575 0013 02       		.uleb128 0x2
 1576 0014 24       		.uleb128 0x24
 1577 0015 00       		.byte	0
 1578 0016 0B       		.uleb128 0xb
 1579 0017 0B       		.uleb128 0xb
 1580 0018 3E       		.uleb128 0x3e
 1581 0019 0B       		.uleb128 0xb
 1582 001a 03       		.uleb128 0x3
 1583 001b 0E       		.uleb128 0xe
 1584 001c 00       		.byte	0
 1585 001d 00       		.byte	0
 1586 001e 03       		.uleb128 0x3
 1587 001f 16       		.uleb128 0x16
 1588 0020 00       		.byte	0
 1589 0021 03       		.uleb128 0x3
 1590 0022 0E       		.uleb128 0xe
 1591 0023 3A       		.uleb128 0x3a
 1592 0024 0B       		.uleb128 0xb
 1593 0025 3B       		.uleb128 0x3b
 1594 0026 0B       		.uleb128 0xb
 1595 0027 49       		.uleb128 0x49
 1596 0028 13       		.uleb128 0x13
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 33


 1597 0029 00       		.byte	0
 1598 002a 00       		.byte	0
 1599 002b 04       		.uleb128 0x4
 1600 002c 24       		.uleb128 0x24
 1601 002d 00       		.byte	0
 1602 002e 0B       		.uleb128 0xb
 1603 002f 0B       		.uleb128 0xb
 1604 0030 3E       		.uleb128 0x3e
 1605 0031 0B       		.uleb128 0xb
 1606 0032 03       		.uleb128 0x3
 1607 0033 08       		.uleb128 0x8
 1608 0034 00       		.byte	0
 1609 0035 00       		.byte	0
 1610 0036 05       		.uleb128 0x5
 1611 0037 16       		.uleb128 0x16
 1612 0038 00       		.byte	0
 1613 0039 03       		.uleb128 0x3
 1614 003a 0E       		.uleb128 0xe
 1615 003b 3A       		.uleb128 0x3a
 1616 003c 0B       		.uleb128 0xb
 1617 003d 3B       		.uleb128 0x3b
 1618 003e 05       		.uleb128 0x5
 1619 003f 49       		.uleb128 0x49
 1620 0040 13       		.uleb128 0x13
 1621 0041 00       		.byte	0
 1622 0042 00       		.byte	0
 1623 0043 06       		.uleb128 0x6
 1624 0044 01       		.uleb128 0x1
 1625 0045 01       		.byte	0x1
 1626 0046 49       		.uleb128 0x49
 1627 0047 13       		.uleb128 0x13
 1628 0048 01       		.uleb128 0x1
 1629 0049 13       		.uleb128 0x13
 1630 004a 00       		.byte	0
 1631 004b 00       		.byte	0
 1632 004c 07       		.uleb128 0x7
 1633 004d 21       		.uleb128 0x21
 1634 004e 00       		.byte	0
 1635 004f 49       		.uleb128 0x49
 1636 0050 13       		.uleb128 0x13
 1637 0051 2F       		.uleb128 0x2f
 1638 0052 0B       		.uleb128 0xb
 1639 0053 00       		.byte	0
 1640 0054 00       		.byte	0
 1641 0055 08       		.uleb128 0x8
 1642 0056 13       		.uleb128 0x13
 1643 0057 01       		.byte	0x1
 1644 0058 0B       		.uleb128 0xb
 1645 0059 05       		.uleb128 0x5
 1646 005a 3A       		.uleb128 0x3a
 1647 005b 0B       		.uleb128 0xb
 1648 005c 3B       		.uleb128 0x3b
 1649 005d 0B       		.uleb128 0xb
 1650 005e 01       		.uleb128 0x1
 1651 005f 13       		.uleb128 0x13
 1652 0060 00       		.byte	0
 1653 0061 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 34


 1654 0062 09       		.uleb128 0x9
 1655 0063 0D       		.uleb128 0xd
 1656 0064 00       		.byte	0
 1657 0065 03       		.uleb128 0x3
 1658 0066 0E       		.uleb128 0xe
 1659 0067 3A       		.uleb128 0x3a
 1660 0068 0B       		.uleb128 0xb
 1661 0069 3B       		.uleb128 0x3b
 1662 006a 0B       		.uleb128 0xb
 1663 006b 49       		.uleb128 0x49
 1664 006c 13       		.uleb128 0x13
 1665 006d 38       		.uleb128 0x38
 1666 006e 0B       		.uleb128 0xb
 1667 006f 00       		.byte	0
 1668 0070 00       		.byte	0
 1669 0071 0A       		.uleb128 0xa
 1670 0072 13       		.uleb128 0x13
 1671 0073 01       		.byte	0x1
 1672 0074 0B       		.uleb128 0xb
 1673 0075 0B       		.uleb128 0xb
 1674 0076 3A       		.uleb128 0x3a
 1675 0077 0B       		.uleb128 0xb
 1676 0078 3B       		.uleb128 0x3b
 1677 0079 0B       		.uleb128 0xb
 1678 007a 01       		.uleb128 0x1
 1679 007b 13       		.uleb128 0x13
 1680 007c 00       		.byte	0
 1681 007d 00       		.byte	0
 1682 007e 0B       		.uleb128 0xb
 1683 007f 0D       		.uleb128 0xd
 1684 0080 00       		.byte	0
 1685 0081 03       		.uleb128 0x3
 1686 0082 08       		.uleb128 0x8
 1687 0083 3A       		.uleb128 0x3a
 1688 0084 0B       		.uleb128 0xb
 1689 0085 3B       		.uleb128 0x3b
 1690 0086 0B       		.uleb128 0xb
 1691 0087 49       		.uleb128 0x49
 1692 0088 13       		.uleb128 0x13
 1693 0089 38       		.uleb128 0x38
 1694 008a 0B       		.uleb128 0xb
 1695 008b 00       		.byte	0
 1696 008c 00       		.byte	0
 1697 008d 0C       		.uleb128 0xc
 1698 008e 35       		.uleb128 0x35
 1699 008f 00       		.byte	0
 1700 0090 49       		.uleb128 0x49
 1701 0091 13       		.uleb128 0x13
 1702 0092 00       		.byte	0
 1703 0093 00       		.byte	0
 1704 0094 0D       		.uleb128 0xd
 1705 0095 0F       		.uleb128 0xf
 1706 0096 00       		.byte	0
 1707 0097 0B       		.uleb128 0xb
 1708 0098 0B       		.uleb128 0xb
 1709 0099 49       		.uleb128 0x49
 1710 009a 13       		.uleb128 0x13
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 35


 1711 009b 00       		.byte	0
 1712 009c 00       		.byte	0
 1713 009d 0E       		.uleb128 0xe
 1714 009e 2E       		.uleb128 0x2e
 1715 009f 01       		.byte	0x1
 1716 00a0 3F       		.uleb128 0x3f
 1717 00a1 19       		.uleb128 0x19
 1718 00a2 03       		.uleb128 0x3
 1719 00a3 0E       		.uleb128 0xe
 1720 00a4 3A       		.uleb128 0x3a
 1721 00a5 0B       		.uleb128 0xb
 1722 00a6 3B       		.uleb128 0x3b
 1723 00a7 0B       		.uleb128 0xb
 1724 00a8 49       		.uleb128 0x49
 1725 00a9 13       		.uleb128 0x13
 1726 00aa 11       		.uleb128 0x11
 1727 00ab 01       		.uleb128 0x1
 1728 00ac 12       		.uleb128 0x12
 1729 00ad 06       		.uleb128 0x6
 1730 00ae 40       		.uleb128 0x40
 1731 00af 18       		.uleb128 0x18
 1732 00b0 9642     		.uleb128 0x2116
 1733 00b2 19       		.uleb128 0x19
 1734 00b3 01       		.uleb128 0x1
 1735 00b4 13       		.uleb128 0x13
 1736 00b5 00       		.byte	0
 1737 00b6 00       		.byte	0
 1738 00b7 0F       		.uleb128 0xf
 1739 00b8 34       		.uleb128 0x34
 1740 00b9 00       		.byte	0
 1741 00ba 03       		.uleb128 0x3
 1742 00bb 0E       		.uleb128 0xe
 1743 00bc 3A       		.uleb128 0x3a
 1744 00bd 0B       		.uleb128 0xb
 1745 00be 3B       		.uleb128 0x3b
 1746 00bf 0B       		.uleb128 0xb
 1747 00c0 49       		.uleb128 0x49
 1748 00c1 13       		.uleb128 0x13
 1749 00c2 02       		.uleb128 0x2
 1750 00c3 18       		.uleb128 0x18
 1751 00c4 00       		.byte	0
 1752 00c5 00       		.byte	0
 1753 00c6 10       		.uleb128 0x10
 1754 00c7 2E       		.uleb128 0x2e
 1755 00c8 01       		.byte	0x1
 1756 00c9 3F       		.uleb128 0x3f
 1757 00ca 19       		.uleb128 0x19
 1758 00cb 03       		.uleb128 0x3
 1759 00cc 0E       		.uleb128 0xe
 1760 00cd 3A       		.uleb128 0x3a
 1761 00ce 0B       		.uleb128 0xb
 1762 00cf 3B       		.uleb128 0x3b
 1763 00d0 0B       		.uleb128 0xb
 1764 00d1 27       		.uleb128 0x27
 1765 00d2 19       		.uleb128 0x19
 1766 00d3 49       		.uleb128 0x49
 1767 00d4 13       		.uleb128 0x13
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 36


 1768 00d5 11       		.uleb128 0x11
 1769 00d6 01       		.uleb128 0x1
 1770 00d7 12       		.uleb128 0x12
 1771 00d8 06       		.uleb128 0x6
 1772 00d9 40       		.uleb128 0x40
 1773 00da 18       		.uleb128 0x18
 1774 00db 9642     		.uleb128 0x2116
 1775 00dd 19       		.uleb128 0x19
 1776 00de 01       		.uleb128 0x1
 1777 00df 13       		.uleb128 0x13
 1778 00e0 00       		.byte	0
 1779 00e1 00       		.byte	0
 1780 00e2 11       		.uleb128 0x11
 1781 00e3 05       		.uleb128 0x5
 1782 00e4 00       		.byte	0
 1783 00e5 03       		.uleb128 0x3
 1784 00e6 0E       		.uleb128 0xe
 1785 00e7 3A       		.uleb128 0x3a
 1786 00e8 0B       		.uleb128 0xb
 1787 00e9 3B       		.uleb128 0x3b
 1788 00ea 0B       		.uleb128 0xb
 1789 00eb 49       		.uleb128 0x49
 1790 00ec 13       		.uleb128 0x13
 1791 00ed 02       		.uleb128 0x2
 1792 00ee 18       		.uleb128 0x18
 1793 00ef 00       		.byte	0
 1794 00f0 00       		.byte	0
 1795 00f1 12       		.uleb128 0x12
 1796 00f2 2E       		.uleb128 0x2e
 1797 00f3 01       		.byte	0x1
 1798 00f4 3F       		.uleb128 0x3f
 1799 00f5 19       		.uleb128 0x19
 1800 00f6 03       		.uleb128 0x3
 1801 00f7 0E       		.uleb128 0xe
 1802 00f8 3A       		.uleb128 0x3a
 1803 00f9 0B       		.uleb128 0xb
 1804 00fa 3B       		.uleb128 0x3b
 1805 00fb 0B       		.uleb128 0xb
 1806 00fc 27       		.uleb128 0x27
 1807 00fd 19       		.uleb128 0x19
 1808 00fe 11       		.uleb128 0x11
 1809 00ff 01       		.uleb128 0x1
 1810 0100 12       		.uleb128 0x12
 1811 0101 06       		.uleb128 0x6
 1812 0102 40       		.uleb128 0x40
 1813 0103 18       		.uleb128 0x18
 1814 0104 9642     		.uleb128 0x2116
 1815 0106 19       		.uleb128 0x19
 1816 0107 01       		.uleb128 0x1
 1817 0108 13       		.uleb128 0x13
 1818 0109 00       		.byte	0
 1819 010a 00       		.byte	0
 1820 010b 13       		.uleb128 0x13
 1821 010c 34       		.uleb128 0x34
 1822 010d 00       		.byte	0
 1823 010e 03       		.uleb128 0x3
 1824 010f 0E       		.uleb128 0xe
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 37


 1825 0110 3A       		.uleb128 0x3a
 1826 0111 0B       		.uleb128 0xb
 1827 0112 3B       		.uleb128 0x3b
 1828 0113 05       		.uleb128 0x5
 1829 0114 49       		.uleb128 0x49
 1830 0115 13       		.uleb128 0x13
 1831 0116 3F       		.uleb128 0x3f
 1832 0117 19       		.uleb128 0x19
 1833 0118 3C       		.uleb128 0x3c
 1834 0119 19       		.uleb128 0x19
 1835 011a 00       		.byte	0
 1836 011b 00       		.byte	0
 1837 011c 14       		.uleb128 0x14
 1838 011d 34       		.uleb128 0x34
 1839 011e 00       		.byte	0
 1840 011f 03       		.uleb128 0x3
 1841 0120 0E       		.uleb128 0xe
 1842 0121 3A       		.uleb128 0x3a
 1843 0122 0B       		.uleb128 0xb
 1844 0123 3B       		.uleb128 0x3b
 1845 0124 0B       		.uleb128 0xb
 1846 0125 49       		.uleb128 0x49
 1847 0126 13       		.uleb128 0x13
 1848 0127 3F       		.uleb128 0x3f
 1849 0128 19       		.uleb128 0x19
 1850 0129 02       		.uleb128 0x2
 1851 012a 18       		.uleb128 0x18
 1852 012b 00       		.byte	0
 1853 012c 00       		.byte	0
 1854 012d 15       		.uleb128 0x15
 1855 012e 21       		.uleb128 0x21
 1856 012f 00       		.byte	0
 1857 0130 49       		.uleb128 0x49
 1858 0131 13       		.uleb128 0x13
 1859 0132 2F       		.uleb128 0x2f
 1860 0133 05       		.uleb128 0x5
 1861 0134 00       		.byte	0
 1862 0135 00       		.byte	0
 1863 0136 16       		.uleb128 0x16
 1864 0137 34       		.uleb128 0x34
 1865 0138 00       		.byte	0
 1866 0139 03       		.uleb128 0x3
 1867 013a 08       		.uleb128 0x8
 1868 013b 3A       		.uleb128 0x3a
 1869 013c 0B       		.uleb128 0xb
 1870 013d 3B       		.uleb128 0x3b
 1871 013e 0B       		.uleb128 0xb
 1872 013f 49       		.uleb128 0x49
 1873 0140 13       		.uleb128 0x13
 1874 0141 3F       		.uleb128 0x3f
 1875 0142 19       		.uleb128 0x19
 1876 0143 02       		.uleb128 0x2
 1877 0144 18       		.uleb128 0x18
 1878 0145 00       		.byte	0
 1879 0146 00       		.byte	0
 1880 0147 00       		.byte	0
 1881              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 38


 1882 0000 34000000 		.4byte	0x34
 1883 0004 0200     		.2byte	0x2
 1884 0006 00000000 		.4byte	.Ldebug_info0
 1885 000a 04       		.byte	0x4
 1886 000b 00       		.byte	0
 1887 000c 0000     		.2byte	0
 1888 000e 0000     		.2byte	0
 1889 0010 00000000 		.4byte	.LFB64
 1890 0014 B4020000 		.4byte	.LFE64-.LFB64
 1891 0018 00000000 		.4byte	.LFB65
 1892 001c 50000000 		.4byte	.LFE65-.LFB65
 1893 0020 00000000 		.4byte	.LFB66
 1894 0024 24020000 		.4byte	.LFE66-.LFB66
 1895 0028 00000000 		.4byte	.LFB67
 1896 002c 40000000 		.4byte	.LFE67-.LFB67
 1897 0030 00000000 		.4byte	0
 1898 0034 00000000 		.4byte	0
 1899              		.section	.debug_ranges,"",%progbits
 1900              	.Ldebug_ranges0:
 1901 0000 00000000 		.4byte	.LFB64
 1902 0004 B4020000 		.4byte	.LFE64
 1903 0008 00000000 		.4byte	.LFB65
 1904 000c 50000000 		.4byte	.LFE65
 1905 0010 00000000 		.4byte	.LFB66
 1906 0014 24020000 		.4byte	.LFE66
 1907 0018 00000000 		.4byte	.LFB67
 1908 001c 40000000 		.4byte	.LFE67
 1909 0020 00000000 		.4byte	0
 1910 0024 00000000 		.4byte	0
 1911              		.section	.debug_line,"",%progbits
 1912              	.Ldebug_line0:
 1913 0000 44020000 		.section	.debug_str,"MS",%progbits,1
 1913      02008B01 
 1913      00000201 
 1913      FB0E0D00 
 1913      01010101 
 1914              	.LASF31:
 1915 0000 76616C69 		.ascii	"valid\000"
 1915      6400
 1916              	.LASF37:
 1917 0006 6D6F6465 		.ascii	"model_id\000"
 1917      6C5F6964 
 1917      00
 1918              	.LASF68:
 1919 000f 766F6C74 		.ascii	"voltages\000"
 1919      61676573 
 1919      00
 1920              	.LASF36:
 1921 0018 73696D5F 		.ascii	"sim_id\000"
 1921      696400
 1922              	.LASF26:
 1923 001f 766F6C74 		.ascii	"voltage_solar\000"
 1923      6167655F 
 1923      736F6C61 
 1923      7200
 1924              	.LASF65:
 1925 002d 7379735F 		.ascii	"sys_settings_t\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 39


 1925      73657474 
 1925      696E6773 
 1925      5F7400
 1926              	.LASF15:
 1927 003c 666C6F61 		.ascii	"float32\000"
 1927      74333200 
 1928              	.LASF56:
 1929 0044 63757272 		.ascii	"currentCountDownValue\000"
 1929      656E7443 
 1929      6F756E74 
 1929      446F776E 
 1929      56616C75 
 1930              	.LASF77:
 1931 005a 62756666 		.ascii	"buffer_overflow\000"
 1931      65725F6F 
 1931      76657266 
 1931      6C6F7700 
 1932              	.LASF55:
 1933 006a 636F756E 		.ascii	"countDownValue\000"
 1933      74446F77 
 1933      6E56616C 
 1933      756500
 1934              	.LASF72:
 1935 0079 70726576 		.ascii	"prev_pos\000"
 1935      5F706F73 
 1935      00
 1936              	.LASF85:
 1937 0082 68747470 		.ascii	"http_request\000"
 1937      5F726571 
 1937      75657374 
 1937      00
 1938              	.LASF20:
 1939 008f 73697A65 		.ascii	"sizetype\000"
 1939      74797065 
 1939      00
 1940              	.LASF63:
 1941 0098 65705F68 		.ascii	"ep_host\000"
 1941      6F737400 
 1942              	.LASF95:
 1943 00a0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1943      43313120 
 1943      352E342E 
 1943      31203230 
 1943      31363036 
 1944 00d3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1944      20726576 
 1944      6973696F 
 1944      6E203233 
 1944      37373135 
 1945 0106 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1945      66756E63 
 1945      74696F6E 
 1945      2D736563 
 1945      74696F6E 
 1946              	.LASF80:
 1947 012e 64617461 		.ascii	"data\000"
 1947      00
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 40


 1948              	.LASF28:
 1949 0133 766F6C74 		.ascii	"voltage_pressure\000"
 1949      6167655F 
 1949      70726573 
 1949      73757265 
 1949      00
 1950              	.LASF61:
 1951 0144 63686970 		.ascii	"chip_uniqueId\000"
 1951      5F756E69 
 1951      71756549 
 1951      6400
 1952              	.LASF42:
 1953 0152 65636E6F 		.ascii	"ecno\000"
 1953      00
 1954              	.LASF2:
 1955 0157 73686F72 		.ascii	"short int\000"
 1955      7420696E 
 1955      7400
 1956              	.LASF33:
 1957 0161 76616C75 		.ascii	"value\000"
 1957      6500
 1958              	.LASF25:
 1959 0167 766F6C74 		.ascii	"voltage_battery\000"
 1959      6167655F 
 1959      62617474 
 1959      65727900 
 1960              	.LASF78:
 1961 0177 64617461 		.ascii	"dataPointsInStack\000"
 1961      506F696E 
 1961      7473496E 
 1961      53746163 
 1961      6B00
 1962              	.LASF11:
 1963 0189 75696E74 		.ascii	"uint8\000"
 1963      3800
 1964              	.LASF41:
 1965 018f 72736370 		.ascii	"rscp\000"
 1965      00
 1966              	.LASF13:
 1967 0194 696E7431 		.ascii	"int16\000"
 1967      3600
 1968              	.LASF34:
 1969 019a 74696D65 		.ascii	"timeStamp\000"
 1969      5374616D 
 1969      7000
 1970              	.LASF29:
 1971 01a4 766F6C74 		.ascii	"voltage_valve_pos\000"
 1971      6167655F 
 1971      76616C76 
 1971      655F706F 
 1971      7300
 1972              	.LASF96:
 1973 01b6 76616C76 		.ascii	"valve.c\000"
 1973      652E6300 
 1974              	.LASF16:
 1975 01be 666C6F61 		.ascii	"float\000"
 1975      7400
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 41


 1976              	.LASF6:
 1977 01c4 6C6F6E67 		.ascii	"long long int\000"
 1977      206C6F6E 
 1977      6720696E 
 1977      7400
 1978              	.LASF18:
 1979 01d2 63686172 		.ascii	"char\000"
 1979      00
 1980              	.LASF23:
 1981 01d7 72656173 		.ascii	"reason\000"
 1981      6F6E00
 1982              	.LASF4:
 1983 01de 6C6F6E67 		.ascii	"long int\000"
 1983      20696E74 
 1983      00
 1984              	.LASF97:
 1985 01e7 473A5C4D 		.ascii	"G:\\My Drive\\notoriOS\\notoriOS\\notoriOS.cydsn\000"
 1985      79204472 
 1985      6976655C 
 1985      6E6F746F 
 1985      72694F53 
 1986              	.LASF60:
 1987 0214 6D6F6465 		.ascii	"modem_info\000"
 1987      6D5F696E 
 1987      666F00
 1988              	.LASF90:
 1989 021f 616C6172 		.ascii	"alarmMeasure\000"
 1989      6D4D6561 
 1989      73757265 
 1989      00
 1990              	.LASF69:
 1991 022c 76616C76 		.ascii	"valve_test\000"
 1991      655F7465 
 1991      737400
 1992              	.LASF59:
 1993 0237 616C6172 		.ascii	"alarm\000"
 1993      6D00
 1994              	.LASF50:
 1995 023d 6D656173 		.ascii	"measure_time\000"
 1995      7572655F 
 1995      74696D65 
 1995      00
 1996              	.LASF74:
 1997 024a 706F7369 		.ascii	"position_desired\000"
 1997      74696F6E 
 1997      5F646573 
 1997      69726564 
 1997      00
 1998              	.LASF92:
 1999 025b 616C6172 		.ascii	"alarmSync\000"
 1999      6D53796E 
 1999      6300
 2000              	.LASF19:
 2001 0265 6C6F6E67 		.ascii	"long double\000"
 2001      20646F75 
 2001      626C6500 
 2002              	.LASF84:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 42


 2003 0271 75706461 		.ascii	"updatable_parameters\000"
 2003      7461626C 
 2003      655F7061 
 2003      72616D65 
 2003      74657273 
 2004              	.LASF1:
 2005 0286 756E7369 		.ascii	"unsigned char\000"
 2005      676E6564 
 2005      20636861 
 2005      7200
 2006              	.LASF44:
 2007 0294 72737270 		.ascii	"rsrp\000"
 2007      00
 2008              	.LASF82:
 2009 0299 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2009      6D5F7374 
 2009      6172745F 
 2009      74696D65 
 2009      5F737461 
 2010              	.LASF79:
 2011 02b0 64617461 		.ascii	"dataPointsInStackDesired\000"
 2011      506F696E 
 2011      7473496E 
 2011      53746163 
 2011      6B446573 
 2012              	.LASF81:
 2013 02c9 6D6F6465 		.ascii	"modem_state\000"
 2013      6D5F7374 
 2013      61746500 
 2014              	.LASF0:
 2015 02d5 7369676E 		.ascii	"signed char\000"
 2015      65642063 
 2015      68617200 
 2016              	.LASF70:
 2017 02e1 72656164 		.ascii	"read_Valve_pos\000"
 2017      5F56616C 
 2017      76655F70 
 2017      6F7300
 2018              	.LASF7:
 2019 02f0 6C6F6E67 		.ascii	"long long unsigned int\000"
 2019      206C6F6E 
 2019      6720756E 
 2019      7369676E 
 2019      65642069 
 2020              	.LASF89:
 2021 0307 73797374 		.ascii	"system_settings\000"
 2021      656D5F73 
 2021      65747469 
 2021      6E677300 
 2022              	.LASF8:
 2023 0317 756E7369 		.ascii	"unsigned int\000"
 2023      676E6564 
 2023      20696E74 
 2023      00
 2024              	.LASF35:
 2025 0324 6B65795F 		.ascii	"key_value_t\000"
 2025      76616C75 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 43


 2025      655F7400 
 2026              	.LASF40:
 2027 0330 72786C65 		.ascii	"rxlev\000"
 2027      7600
 2028              	.LASF51:
 2029 0336 73796E63 		.ascii	"sync_time\000"
 2029      5F74696D 
 2029      6500
 2030              	.LASF83:
 2031 0340 6D6F6465 		.ascii	"modem_stats\000"
 2031      6D5F7374 
 2031      61747300 
 2032              	.LASF91:
 2033 034c 74696D65 		.ascii	"timeToMeasure\000"
 2033      546F4D65 
 2033      61737572 
 2033      6500
 2034              	.LASF54:
 2035 035a 75706461 		.ascii	"updatable_parameters_t\000"
 2035      7461626C 
 2035      655F7061 
 2035      72616D65 
 2035      74657273 
 2036              	.LASF49:
 2037 0371 73696D5F 		.ascii	"sim_type\000"
 2037      74797065 
 2037      00
 2038              	.LASF62:
 2039 037a 7379735F 		.ascii	"sys_info_t\000"
 2039      696E666F 
 2039      5F7400
 2040              	.LASF3:
 2041 0385 73686F72 		.ascii	"short unsigned int\000"
 2041      7420756E 
 2041      7369676E 
 2041      65642069 
 2041      6E7400
 2042              	.LASF45:
 2043 0398 74696D65 		.ascii	"time_to_network_connect\000"
 2043      5F746F5F 
 2043      6E657477 
 2043      6F726B5F 
 2043      636F6E6E 
 2044              	.LASF22:
 2045 03b0 73746174 		.ascii	"status\000"
 2045      757300
 2046              	.LASF88:
 2047 03b7 73797374 		.ascii	"system_info\000"
 2047      656D5F69 
 2047      6E666F00 
 2048              	.LASF46:
 2049 03c3 74696D65 		.ascii	"time_to_acquire_ip\000"
 2049      5F746F5F 
 2049      61637175 
 2049      6972655F 
 2049      697000
 2050              	.LASF24:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 44


 2051 03d6 74657374 		.ascii	"test_t\000"
 2051      5F7400
 2052              	.LASF98:
 2053 03dd 6D6F7665 		.ascii	"move_valve\000"
 2053      5F76616C 
 2053      766500
 2054              	.LASF32:
 2055 03e8 766F6C74 		.ascii	"voltage_t\000"
 2055      6167655F 
 2055      7400
 2056              	.LASF10:
 2057 03f2 696E7433 		.ascii	"int32_t\000"
 2057      325F7400 
 2058              	.LASF47:
 2059 03fa 6D6F6465 		.ascii	"modem_stats_t\000"
 2059      6D5F7374 
 2059      6174735F 
 2059      7400
 2060              	.LASF30:
 2061 0408 766F6C74 		.ascii	"voltage_valve_pot_power\000"
 2061      6167655F 
 2061      76616C76 
 2061      655F706F 
 2061      745F706F 
 2062              	.LASF53:
 2063 0420 5F426F6F 		.ascii	"_Bool\000"
 2063      6C00
 2064              	.LASF94:
 2065 0426 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2065      546F5379 
 2065      636E5265 
 2065      6D6F7465 
 2065      50617261 
 2066              	.LASF66:
 2067 043d 74657374 		.ascii	"test\000"
 2067      00
 2068              	.LASF43:
 2069 0442 72737271 		.ascii	"rsrq\000"
 2069      00
 2070              	.LASF12:
 2071 0447 75696E74 		.ascii	"uint16\000"
 2071      313600
 2072              	.LASF87:
 2073 044e 68747470 		.ascii	"http_route\000"
 2073      5F726F75 
 2073      746500
 2074              	.LASF5:
 2075 0459 6C6F6E67 		.ascii	"long unsigned int\000"
 2075      20756E73 
 2075      69676E65 
 2075      6420696E 
 2075      7400
 2076              	.LASF14:
 2077 046b 696E7433 		.ascii	"int32\000"
 2077      3200
 2078              	.LASF17:
 2079 0471 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 45


 2079      6C6500
 2080              	.LASF76:
 2081 0478 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2081      52784275 
 2081      66666572 
 2081      00
 2082              	.LASF52:
 2083 0485 64656275 		.ascii	"debug_level\000"
 2083      675F6C65 
 2083      76656C00 
 2084              	.LASF39:
 2085 0491 6D6F6465 		.ascii	"modem_info_t\000"
 2085      6D5F696E 
 2085      666F5F74 
 2085      00
 2086              	.LASF57:
 2087 049e 636F756E 		.ascii	"countDownType\000"
 2087      74446F77 
 2087      6E547970 
 2087      6500
 2088              	.LASF75:
 2089 04ac 6C657665 		.ascii	"level_reading\000"
 2089      6C5F7265 
 2089      6164696E 
 2089      6700
 2090              	.LASF9:
 2091 04ba 5F5F696E 		.ascii	"__int32_t\000"
 2091      7433325F 
 2091      7400
 2092              	.LASF58:
 2093 04c4 636F756E 		.ascii	"countDownResetCondition\000"
 2093      74446F77 
 2093      6E526573 
 2093      6574436F 
 2093      6E646974 
 2094              	.LASF38:
 2095 04dc 696D6569 		.ascii	"imei\000"
 2095      00
 2096              	.LASF73:
 2097 04e1 76616C76 		.ascii	"valve_level_controller\000"
 2097      655F6C65 
 2097      76656C5F 
 2097      636F6E74 
 2097      726F6C6C 
 2098              	.LASF21:
 2099 04f8 74657374 		.ascii	"test_name\000"
 2099      5F6E616D 
 2099      6500
 2100              	.LASF67:
 2101 0502 706F7369 		.ascii	"positions\000"
 2101      74696F6E 
 2101      7300
 2102              	.LASF64:
 2103 050c 65705F70 		.ascii	"ep_port\000"
 2103      6F727400 
 2104              	.LASF86:
 2105 0514 68747470 		.ascii	"http_body\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccCLzzAc.s 			page 46


 2105      5F626F64 
 2105      7900
 2106              	.LASF48:
 2107 051e 6E6F6465 		.ascii	"node_type\000"
 2107      5F747970 
 2107      6500
 2108              	.LASF27:
 2109 0528 766F6C74 		.ascii	"voltage_charge_current\000"
 2109      6167655F 
 2109      63686172 
 2109      67655F63 
 2109      75727265 
 2110              	.LASF93:
 2111 053f 74696D65 		.ascii	"timeToSync\000"
 2111      546F5379 
 2111      6E6300
 2112              	.LASF71:
 2113 054a 72656164 		.ascii	"readings\000"
 2113      696E6773 
 2113      00
 2114              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
