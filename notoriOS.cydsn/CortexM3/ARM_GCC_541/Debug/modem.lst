ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"modem.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.syntax unified
  24              		.global _printf_float
  25              		.thumb
  26              		.syntax unified
  27              		.comm	modem_state,1,1
  28              		.comm	modem_start_time_stamp,4,4
  29              		.comm	modem_info,60,4
  30              		.comm	modem_stats,32,4
  31              		.comm	updatable_parameters,6,4
  32              		.comm	gps_data,16,4
  33              		.comm	http_request,10000,4
  34              		.comm	http_body,10000,4
  35              		.comm	http_route,200,4
  36              		.comm	system_info,28,4
  37              		.comm	system_settings,104,4
  38              		.comm	alarmMeasure,6,4
  39              		.comm	timeToMeasure,1,1
  40              		.comm	alarmSync,6,4
  41              		.comm	timeToSync,1,1
  42              		.comm	timeToSycnRemoteParams,1,1
  43              		.comm	hey,1,1
  44              		.comm	uart_received_string,1024,4
  45              		.global	uart_string_index
  46              		.bss
  47              		.align	1
  48              		.type	uart_string_index, %object
  49              		.size	uart_string_index, 2
  50              	uart_string_index:
  51 0000 0000     		.space	2
  52              		.section	.text.isr_telit_rx,"ax",%progbits
  53              		.align	2
  54              		.global	isr_telit_rx
  55              		.thumb
  56              		.thumb_func
  57              		.type	isr_telit_rx, %function
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 2


  58              	isr_telit_rx:
  59              	.LFB64:
  60              		.file 1 "modem.c"
   1:modem.c       **** //Methods for Telit modem 
   2:modem.c       **** #include "modem.h"
   3:modem.c       **** #include "notoriOS.h"
   4:modem.c       **** 
   5:modem.c       **** char uart_received_string[1024];
   6:modem.c       **** int16 uart_string_index=0;
   7:modem.c       **** 
   8:modem.c       **** #define DEFAULT_AT_TIMEOUT 2000u // Send command and wait 2000 ms
   9:modem.c       **** #define NO_AT_TIMEOUT 0u // Send command, no timeout/ don't wait 
  10:modem.c       **** 
  11:modem.c       **** #define TIMEOUT_NETWORK_CONNECT 180 //seconds
  12:modem.c       **** #define TIMEOUT_IP_ACQUIRE 230 //seconds (cummulatinve) add to TIMEOUT_NETWORK_CONNECT
  13:modem.c       **** 
  14:modem.c       **** CY_ISR_PROTO(isr_telit_rx); // Declares a custom ISR function "isr_telit_rx" using the CY_ISR_PROTO
  15:modem.c       **** 
  16:modem.c       **** // Define the custom ISR function "isr_telit_rx" using the CY_ISR macro
  17:modem.c       **** // Get each character from Telit and saves it to uart_received_string
  18:modem.c       **** CY_ISR(isr_telit_rx){      
  61              		.loc 1 18 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65 0000 98B5     		push	{r3, r4, r7, lr}
  66              		.cfi_def_cfa_offset 16
  67              		.cfi_offset 3, -16
  68              		.cfi_offset 4, -12
  69              		.cfi_offset 7, -8
  70              		.cfi_offset 14, -4
  71 0002 00AF     		add	r7, sp, #0
  72              		.cfi_def_cfa_register 7
  19:modem.c       ****     // UART_Telit_GetRxBufferSize() returns the number of received bytes available in the RX buffer
  20:modem.c       ****     while(UART_Telit_GetRxBufferSize()==1){
  73              		.loc 1 20 0
  74 0004 12E0     		b	.L2
  75              	.L3:
  21:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  76              		.loc 1 21 0
  77 0006 0D4B     		ldr	r3, .L4
  78 0008 B3F90030 		ldrsh	r3, [r3]
  79 000c 1C46     		mov	r4, r3
  80 000e FFF7FEFF 		bl	UART_Telit_GetChar
  81 0012 0346     		mov	r3, r0
  82 0014 1A46     		mov	r2, r3
  83 0016 0A4B     		ldr	r3, .L4+4
  84 0018 1A55     		strb	r2, [r3, r4]
  22:modem.c       ****         uart_string_index++;
  85              		.loc 1 22 0
  86 001a 084B     		ldr	r3, .L4
  87 001c B3F90030 		ldrsh	r3, [r3]
  88 0020 9BB2     		uxth	r3, r3
  89 0022 0133     		adds	r3, r3, #1
  90 0024 9BB2     		uxth	r3, r3
  91 0026 1AB2     		sxth	r2, r3
  92 0028 044B     		ldr	r3, .L4
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 3


  93 002a 1A80     		strh	r2, [r3]	@ movhi
  94              	.L2:
  20:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  95              		.loc 1 20 0
  96 002c FFF7FEFF 		bl	UART_Telit_GetRxBufferSize
  97 0030 0346     		mov	r3, r0
  98 0032 012B     		cmp	r3, #1
  99 0034 E7D0     		beq	.L3
  23:modem.c       ****     }
  24:modem.c       **** 
  25:modem.c       **** }
 100              		.loc 1 25 0
 101 0036 00BF     		nop
 102 0038 98BD     		pop	{r3, r4, r7, pc}
 103              	.L5:
 104 003a 00BF     		.align	2
 105              	.L4:
 106 003c 00000000 		.word	uart_string_index
 107 0040 00000000 		.word	uart_received_string
 108              		.cfi_endproc
 109              	.LFE64:
 110              		.size	isr_telit_rx, .-isr_telit_rx
 111              		.section	.text.modem_initialize,"ax",%progbits
 112              		.align	2
 113              		.global	modem_initialize
 114              		.thumb
 115              		.thumb_func
 116              		.type	modem_initialize, %function
 117              	modem_initialize:
 118              	.LFB65:
  26:modem.c       **** 
  27:modem.c       **** // Initialize the modem
  28:modem.c       **** void modem_initialize(){
 119              		.loc 1 28 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 1, uses_anonymous_args = 0
 123 0000 80B5     		push	{r7, lr}
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 7, -8
 126              		.cfi_offset 14, -4
 127 0002 00AF     		add	r7, sp, #0
 128              		.cfi_def_cfa_register 7
  29:modem.c       ****     // Don't do much except make sure that all the modem pins are pulled low
  30:modem.c       ****     // Also make sure that the TX PIN is fully disabled
  31:modem.c       ****     pins_configure_inactive();
 129              		.loc 1 31 0
 130 0004 FFF7FEFF 		bl	pins_configure_inactive
  32:modem.c       ****     modem_state = 0;
 131              		.loc 1 32 0
 132 0008 154B     		ldr	r3, .L7
 133 000a 0022     		movs	r2, #0
 134 000c 1A70     		strb	r2, [r3]
  33:modem.c       ****     //initialize states
  34:modem.c       ****     modem_info.imei[0] = '\0';
 135              		.loc 1 34 0
 136 000e 154B     		ldr	r3, .L7+4
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 4


 137 0010 0022     		movs	r2, #0
 138 0012 83F82820 		strb	r2, [r3, #40]
  35:modem.c       ****     modem_info.model_id[0] = '\0';
 139              		.loc 1 35 0
 140 0016 134B     		ldr	r3, .L7+4
 141 0018 0022     		movs	r2, #0
 142 001a 1A75     		strb	r2, [r3, #20]
  36:modem.c       ****     modem_info.sim_id[0] = '\0';
 143              		.loc 1 36 0
 144 001c 114B     		ldr	r3, .L7+4
 145 001e 0022     		movs	r2, #0
 146 0020 1A70     		strb	r2, [r3]
  37:modem.c       ****     modem_stats.rxlev = 0;
 147              		.loc 1 37 0
 148 0022 114B     		ldr	r3, .L7+8
 149 0024 0022     		movs	r2, #0
 150 0026 1A60     		str	r2, [r3]
  38:modem.c       ****     modem_stats.ber = 0;
 151              		.loc 1 38 0
 152 0028 0F4B     		ldr	r3, .L7+8
 153 002a 0022     		movs	r2, #0
 154 002c 5A60     		str	r2, [r3, #4]
  39:modem.c       ****     modem_stats.rscp = 0;
 155              		.loc 1 39 0
 156 002e 0E4B     		ldr	r3, .L7+8
 157 0030 0022     		movs	r2, #0
 158 0032 9A60     		str	r2, [r3, #8]
  40:modem.c       ****     modem_stats.ecno = 0;
 159              		.loc 1 40 0
 160 0034 0C4B     		ldr	r3, .L7+8
 161 0036 0022     		movs	r2, #0
 162 0038 DA60     		str	r2, [r3, #12]
  41:modem.c       ****     modem_stats.rsrq = 0;
 163              		.loc 1 41 0
 164 003a 0B4B     		ldr	r3, .L7+8
 165 003c 0022     		movs	r2, #0
 166 003e 1A61     		str	r2, [r3, #16]
  42:modem.c       ****     modem_stats.rsrp = 0;
 167              		.loc 1 42 0
 168 0040 094B     		ldr	r3, .L7+8
 169 0042 0022     		movs	r2, #0
 170 0044 5A61     		str	r2, [r3, #20]
  43:modem.c       ****     modem_stats.time_to_acquire_ip = 0;
 171              		.loc 1 43 0
 172 0046 084B     		ldr	r3, .L7+8
 173 0048 0022     		movs	r2, #0
 174 004a DA61     		str	r2, [r3, #28]
  44:modem.c       ****     modem_stats.time_to_network_connect = 0;
 175              		.loc 1 44 0
 176 004c 064B     		ldr	r3, .L7+8
 177 004e 0022     		movs	r2, #0
 178 0050 9A61     		str	r2, [r3, #24]
  45:modem.c       ****     // Disable the RX Pin interrupt, and only enable it during long timeouts
  46:modem.c       ****     // Rx_Telit_SetInterruptMode(): Configures the interrupt mode for each of the Pins component's 
  47:modem.c       ****     // Rx_Telit_0_INTR selects the first pin in the list, and Rx_Telit_INTR_NONE disables the Rx pi
  48:modem.c       ****     Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 179              		.loc 1 48 0
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 5


 180 0052 0021     		movs	r1, #0
 181 0054 4020     		movs	r0, #64
 182 0056 FFF7FEFF 		bl	Rx_Telit_SetInterruptMode
  49:modem.c       ****     
  50:modem.c       **** }
 183              		.loc 1 50 0
 184 005a 00BF     		nop
 185 005c 80BD     		pop	{r7, pc}
 186              	.L8:
 187 005e 00BF     		.align	2
 188              	.L7:
 189 0060 00000000 		.word	modem_state
 190 0064 00000000 		.word	modem_info
 191 0068 00000000 		.word	modem_stats
 192              		.cfi_endproc
 193              	.LFE65:
 194              		.size	modem_initialize, .-modem_initialize
 195              		.section	.text.pins_configure_inactive,"ax",%progbits
 196              		.align	2
 197              		.global	pins_configure_inactive
 198              		.thumb
 199              		.thumb_func
 200              		.type	pins_configure_inactive, %function
 201              	pins_configure_inactive:
 202              	.LFB66:
  51:modem.c       **** 
  52:modem.c       **** 
  53:modem.c       **** // To be used when the modem power is to be "killed" conpletely to conserve power
  54:modem.c       **** void pins_configure_inactive(){
 203              		.loc 1 54 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207 0000 80B5     		push	{r7, lr}
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 7, -8
 210              		.cfi_offset 14, -4
 211 0002 00AF     		add	r7, sp, #0
 212              		.cfi_def_cfa_register 7
  55:modem.c       ****    
  56:modem.c       ****    Telit_ControlReg_Write(0u); // Physically disconect UART pin
 213              		.loc 1 56 0
 214 0004 0020     		movs	r0, #0
 215 0006 FFF7FEFF 		bl	Telit_ControlReg_Write
  57:modem.c       ****    Rx_Telit_SetDriveMode(PIN_DM_STRONG); // Set drive mode
 216              		.loc 1 57 0
 217 000a 0C20     		movs	r0, #12
 218 000c FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  58:modem.c       **** 
  59:modem.c       ****    Pin_Telit_pwr_Write(OFF); // Kill power to modem (pulls pin low).
 219              		.loc 1 59 0
 220 0010 0020     		movs	r0, #0
 221 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  60:modem.c       **** 
  61:modem.c       ****    // Pull down all of these, just in case (turns the off).
  62:modem.c       ****    Rx_Telit_Write(OFF); 
 222              		.loc 1 62 0
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 6


 223 0016 0020     		movs	r0, #0
 224 0018 FFF7FEFF 		bl	Rx_Telit_Write
  63:modem.c       ****    Tx_Telit_Write(OFF);
 225              		.loc 1 63 0
 226 001c 0020     		movs	r0, #0
 227 001e FFF7FEFF 		bl	Tx_Telit_Write
  64:modem.c       ****    Pin_Telit_ONOFF_Write(OFF);
 228              		.loc 1 64 0
 229 0022 0020     		movs	r0, #0
 230 0024 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
  65:modem.c       ****    Pin_Telit_SWRDY_Write(OFF);
 231              		.loc 1 65 0
 232 0028 0020     		movs	r0, #0
 233 002a FFF7FEFF 		bl	Pin_Telit_SWRDY_Write
  66:modem.c       ****     
  67:modem.c       **** }
 234              		.loc 1 67 0
 235 002e 00BF     		nop
 236 0030 80BD     		pop	{r7, pc}
 237              		.cfi_endproc
 238              	.LFE66:
 239              		.size	pins_configure_inactive, .-pins_configure_inactive
 240 0032 00BF     		.section	.text.pins_configure_active,"ax",%progbits
 241              		.align	2
 242              		.global	pins_configure_active
 243              		.thumb
 244              		.thumb_func
 245              		.type	pins_configure_active, %function
 246              	pins_configure_active:
 247              	.LFB67:
  68:modem.c       **** 
  69:modem.c       **** // Turns on power and configures all UART pin modes
  70:modem.c       **** void pins_configure_active(){
 248              		.loc 1 70 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252 0000 80B5     		push	{r7, lr}
 253              		.cfi_def_cfa_offset 8
 254              		.cfi_offset 7, -8
 255              		.cfi_offset 14, -4
 256 0002 00AF     		add	r7, sp, #0
 257              		.cfi_def_cfa_register 7
  71:modem.c       ****     
  72:modem.c       ****     Rx_Telit_SetDriveMode(PIN_DM_DIG_HIZ); // Power up. Set RX pin to High Impedance Digital mode.
 258              		.loc 1 72 0
 259 0004 0220     		movs	r0, #2
 260 0006 FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  73:modem.c       ****     Telit_ControlReg_Write(1u); // Pull Telit_ControlReg pin high (turns it on).
 261              		.loc 1 73 0
 262 000a 0120     		movs	r0, #1
 263 000c FFF7FEFF 		bl	Telit_ControlReg_Write
  74:modem.c       ****     Pin_Telit_pwr_Write(ON); // Pulls Telit_pwr pin high (turns it on).
 264              		.loc 1 74 0
 265 0010 0120     		movs	r0, #1
 266 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  75:modem.c       ****     CyDelay(100u); // Give the MOSFET a few ms to stalbilise power 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 7


 267              		.loc 1 75 0
 268 0016 6420     		movs	r0, #100
 269 0018 FFF7FEFF 		bl	CyDelay
  76:modem.c       **** }
 270              		.loc 1 76 0
 271 001c 00BF     		nop
 272 001e 80BD     		pop	{r7, pc}
 273              		.cfi_endproc
 274              	.LFE67:
 275              		.size	pins_configure_active, .-pins_configure_active
 276              		.section	.rodata
 277              		.align	2
 278              	.LC0:
 279 0000 4F4B00   		.ascii	"OK\000"
 280 0003 00       		.align	2
 281              	.LC1:
 282 0004 41542353 		.ascii	"AT#SHDN\015\000"
 282      48444E0D 
 282      00
 283              		.section	.text.modem_power_down,"ax",%progbits
 284              		.align	2
 285              		.global	modem_power_down
 286              		.thumb
 287              		.thumb_func
 288              		.type	modem_power_down, %function
 289              	modem_power_down:
 290              	.LFB68:
  77:modem.c       **** 
  78:modem.c       **** // Power down the modem -- completely "kill" modem to conserve power.
  79:modem.c       **** void modem_power_down(){
 291              		.loc 1 79 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295 0000 80B5     		push	{r7, lr}
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 00AF     		add	r7, sp, #0
 300              		.cfi_def_cfa_register 7
  80:modem.c       ****     // AT Command to modem for Software Shut Down - #SHDN
  81:modem.c       ****     // \r is carriage return, it is necessary for the modem to know it got a command
  82:modem.c       ****     at_write_command("AT#SHDN\r","OK",5000u); 
 301              		.loc 1 82 0
 302 0004 41F28832 		movw	r2, #5000
 303 0008 0A49     		ldr	r1, .L12
 304 000a 0B48     		ldr	r0, .L12+4
 305 000c FFF7FEFF 		bl	at_write_command
  83:modem.c       ****    
  84:modem.c       ****     // Soft power cycle makes sure that the modem is all the way on (like holding on button on for 
  85:modem.c       ****     modem_soft_power_cycle();
 306              		.loc 1 85 0
 307 0010 FFF7FEFF 		bl	modem_soft_power_cycle
  86:modem.c       ****     CyDelay(1000u);
 308              		.loc 1 86 0
 309 0014 4FF47A70 		mov	r0, #1000
 310 0018 FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 8


  87:modem.c       ****     
  88:modem.c       ****     UART_Telit_Stop(); // Disables the UART operation.
 311              		.loc 1 88 0
 312 001c FFF7FEFF 		bl	UART_Telit_Stop
  89:modem.c       ****     isr_telit_rx_Stop(); // Disables and removes the interrupt.
 313              		.loc 1 89 0
 314 0020 FFF7FEFF 		bl	isr_telit_rx_Stop
  90:modem.c       ****     pins_configure_inactive(); // We want the modem power to be "killed" completely to conserve pow
 315              		.loc 1 90 0
 316 0024 FFF7FEFF 		bl	pins_configure_inactive
  91:modem.c       ****     modem_state = MODEM_STATE_OFF;
 317              		.loc 1 91 0
 318 0028 044B     		ldr	r3, .L12+8
 319 002a 0022     		movs	r2, #0
 320 002c 1A70     		strb	r2, [r3]
  92:modem.c       ****     
  93:modem.c       **** }
 321              		.loc 1 93 0
 322 002e 00BF     		nop
 323 0030 80BD     		pop	{r7, pc}
 324              	.L13:
 325 0032 00BF     		.align	2
 326              	.L12:
 327 0034 00000000 		.word	.LC0
 328 0038 04000000 		.word	.LC1
 329 003c 00000000 		.word	modem_state
 330              		.cfi_endproc
 331              	.LFE68:
 332              		.size	modem_power_down, .-modem_power_down
 333              		.section	.rodata
 334 000d 000000   		.align	2
 335              	.LC2:
 336 0010 41544530 		.ascii	"ATE0\015\000"
 336      0D00
 337 0016 0000     		.align	2
 338              	.LC3:
 339 0018 4D6F6465 		.ascii	"Modem boot time: %d\000"
 339      6D20626F 
 339      6F742074 
 339      696D653A 
 339      20256400 
 340              		.align	2
 341              	.LC4:
 342 002c 4D6F6465 		.ascii	"Modem ready for AT commands after %d attempt(s).\000"
 342      6D207265 
 342      61647920 
 342      666F7220 
 342      41542063 
 343 005d 000000   		.align	2
 344              	.LC5:
 345 0060 4E6F2072 		.ascii	"No response from modem.\000"
 345      6573706F 
 345      6E736520 
 345      66726F6D 
 345      206D6F64 
 346              		.section	.text.modem_power_up,"ax",%progbits
 347              		.align	2
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 9


 348              		.global	modem_power_up
 349              		.thumb
 350              		.thumb_func
 351              		.type	modem_power_up, %function
 352              	modem_power_up:
 353              	.LFB69:
  94:modem.c       **** 
  95:modem.c       **** // This puts all the modem pins into a state that won't leak power
  96:modem.c       **** // Please call restore_pins() to bring them abck to function when they are needed for UART
  97:modem.c       **** uint8 modem_power_up(){
 354              		.loc 1 97 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 8
 357              		@ frame_needed = 1, uses_anonymous_args = 0
 358 0000 80B5     		push	{r7, lr}
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 7, -8
 361              		.cfi_offset 14, -4
 362 0002 82B0     		sub	sp, sp, #8
 363              		.cfi_def_cfa_offset 16
 364 0004 00AF     		add	r7, sp, #0
 365              		.cfi_def_cfa_register 7
  98:modem.c       **** 
  99:modem.c       ****     pins_configure_active(); // Turns on power and configures all UART pin modes
 366              		.loc 1 99 0
 367 0006 FFF7FEFF 		bl	pins_configure_active
 100:modem.c       ****     UART_Telit_Start(); // Sets the initVar variable, calls the UART_Telit_Init() function, and the
 368              		.loc 1 100 0
 369 000a FFF7FEFF 		bl	UART_Telit_Start
 101:modem.c       ****     isr_telit_rx_StartEx(isr_telit_rx); // Sets up the interrupt and enables it. 
 370              		.loc 1 101 0
 371 000e 2C48     		ldr	r0, .L27
 372 0010 FFF7FEFF 		bl	isr_telit_rx_StartEx
 102:modem.c       **** 
 103:modem.c       ****     modem_soft_power_cycle(); // Soft power cycle makes sure that the modem is all the way on (like
 373              		.loc 1 103 0
 374 0014 FFF7FEFF 		bl	modem_soft_power_cycle
 104:modem.c       ****     
 105:modem.c       ****     // Turn off ECHO command (doesn't repeat your command back to you).
 106:modem.c       ****     uint8 at_ready = 0;
 375              		.loc 1 106 0
 376 0018 0023     		movs	r3, #0
 377 001a FB71     		strb	r3, [r7, #7]
 107:modem.c       ****     uint8 attempts = 0;
 378              		.loc 1 107 0
 379 001c 0023     		movs	r3, #0
 380 001e 3B71     		strb	r3, [r7, #4]
 108:modem.c       ****     // Create variable boot_time of the current time stamp.
 109:modem.c       ****     long boot_time = getTimeStamp();
 381              		.loc 1 109 0
 382 0020 FFF7FEFF 		bl	getTimeStamp
 383 0024 3860     		str	r0, [r7]
 384              	.LBB2:
 110:modem.c       ****     
 111:modem.c       ****     //it takes the 4G modem 10+secs (max 20) to boot up, so keep hitting it with AT commands until 
 112:modem.c       ****     for(uint8 attempts = 0; attempts<3; attempts++){
 385              		.loc 1 112 0
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 10


 386 0026 0023     		movs	r3, #0
 387 0028 BB71     		strb	r3, [r7, #6]
 388 002a 1CE0     		b	.L15
 389              	.L22:
 390              	.LBB3:
 113:modem.c       ****         
 114:modem.c       ****         for(uint8 pwr_check = 0; pwr_check<20; pwr_check++){
 391              		.loc 1 114 0
 392 002c 0023     		movs	r3, #0
 393 002e 7B71     		strb	r3, [r7, #5]
 394 0030 0EE0     		b	.L16
 395              	.L19:
 115:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 116:modem.c       ****             if(at_write_command("ATE0\r","OK",1000u)){
 396              		.loc 1 116 0
 397 0032 4FF47A72 		mov	r2, #1000
 398 0036 2349     		ldr	r1, .L27+4
 399 0038 2348     		ldr	r0, .L27+8
 400 003a FFF7FEFF 		bl	at_write_command
 401 003e 0346     		mov	r3, r0
 402 0040 002B     		cmp	r3, #0
 403 0042 02D0     		beq	.L17
 117:modem.c       ****                 at_ready = 1;
 404              		.loc 1 117 0
 405 0044 0123     		movs	r3, #1
 406 0046 FB71     		strb	r3, [r7, #7]
 118:modem.c       ****                 break;
 407              		.loc 1 118 0
 408 0048 05E0     		b	.L18
 409              	.L17:
 114:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 410              		.loc 1 114 0 discriminator 2
 411 004a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 412 004c 0133     		adds	r3, r3, #1
 413 004e 7B71     		strb	r3, [r7, #5]
 414              	.L16:
 114:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 415              		.loc 1 114 0 is_stmt 0 discriminator 1
 416 0050 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 417 0052 132B     		cmp	r3, #19
 418 0054 EDD9     		bls	.L19
 419              	.L18:
 420              	.LBE3:
 119:modem.c       ****             }
 120:modem.c       ****         }
 121:modem.c       ****             
 122:modem.c       ****         if(at_ready == 1){
 421              		.loc 1 122 0 is_stmt 1
 422 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 423 0058 012B     		cmp	r3, #1
 424 005a 08D0     		beq	.L26
 123:modem.c       ****             break;
 124:modem.c       ****         }else{
 125:modem.c       ****             // Soft power cycle makes sure that the modem is all the way on (like holding on button
 126:modem.c       ****             modem_soft_power_cycle();
 425              		.loc 1 126 0 discriminator 2
 426 005c FFF7FEFF 		bl	modem_soft_power_cycle
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 11


 112:modem.c       ****         
 427              		.loc 1 112 0 discriminator 2
 428 0060 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 429 0062 0133     		adds	r3, r3, #1
 430 0064 BB71     		strb	r3, [r7, #6]
 431              	.L15:
 112:modem.c       ****         
 432              		.loc 1 112 0 is_stmt 0 discriminator 1
 433 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 434 0068 022B     		cmp	r3, #2
 435 006a DFD9     		bls	.L22
 436 006c 00E0     		b	.L21
 437              	.L26:
 123:modem.c       ****             break;
 438              		.loc 1 123 0 is_stmt 1
 439 006e 00BF     		nop
 440              	.L21:
 441              	.LBE2:
 127:modem.c       ****         }
 128:modem.c       ****     }
 129:modem.c       ****     // Calculate boot up time and save to variable boot_time.
 130:modem.c       ****     boot_time = getTimeStamp() - boot_time;
 442              		.loc 1 130 0
 443 0070 FFF7FEFF 		bl	getTimeStamp
 444 0074 0246     		mov	r2, r0
 445 0076 3B68     		ldr	r3, [r7]
 446 0078 D31A     		subs	r3, r2, r3
 447 007a 3B60     		str	r3, [r7]
 131:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Modem boot time: %d",boot_time);
 448              		.loc 1 131 0
 449 007c 3A68     		ldr	r2, [r7]
 450 007e 1349     		ldr	r1, .L27+12
 451 0080 0020     		movs	r0, #0
 452 0082 FFF7FEFF 		bl	printNotif
 132:modem.c       ****    
 133:modem.c       ****     if(at_ready == 1){
 453              		.loc 1 133 0
 454 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 455 0088 012B     		cmp	r3, #1
 456 008a 0AD1     		bne	.L23
 134:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Modem ready for AT commands after %d attempt(s).",attempts);
 457              		.loc 1 134 0
 458 008c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 459 008e 1A46     		mov	r2, r3
 460 0090 0F49     		ldr	r1, .L27+16
 461 0092 0020     		movs	r0, #0
 462 0094 FFF7FEFF 		bl	printNotif
 135:modem.c       ****         modem_state = MODEM_STATE_STARTUP;
 463              		.loc 1 135 0
 464 0098 0E4B     		ldr	r3, .L27+20
 465 009a 0122     		movs	r2, #1
 466 009c 1A70     		strb	r2, [r3]
 136:modem.c       ****     }else{
 137:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"No response from modem.");
 138:modem.c       ****         modem_state = MODEM_STATE_OFF;
 139:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 140:modem.c       ****         modem_power_down();
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 12


 141:modem.c       ****         return 0u;
 142:modem.c       ****     }
 143:modem.c       ****     return 1u;
 467              		.loc 1 143 0
 468 009e 0123     		movs	r3, #1
 469 00a0 09E0     		b	.L25
 470              	.L23:
 137:modem.c       ****         modem_state = MODEM_STATE_OFF;
 471              		.loc 1 137 0
 472 00a2 0D49     		ldr	r1, .L27+24
 473 00a4 0220     		movs	r0, #2
 474 00a6 FFF7FEFF 		bl	printNotif
 138:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 475              		.loc 1 138 0
 476 00aa 0A4B     		ldr	r3, .L27+20
 477 00ac 0022     		movs	r2, #0
 478 00ae 1A70     		strb	r2, [r3]
 140:modem.c       ****         return 0u;
 479              		.loc 1 140 0
 480 00b0 FFF7FEFF 		bl	modem_power_down
 141:modem.c       ****     }
 481              		.loc 1 141 0
 482 00b4 0023     		movs	r3, #0
 483              	.L25:
 144:modem.c       **** }
 484              		.loc 1 144 0
 485 00b6 1846     		mov	r0, r3
 486 00b8 0837     		adds	r7, r7, #8
 487              		.cfi_def_cfa_offset 8
 488 00ba BD46     		mov	sp, r7
 489              		.cfi_def_cfa_register 13
 490              		@ sp needed
 491 00bc 80BD     		pop	{r7, pc}
 492              	.L28:
 493 00be 00BF     		.align	2
 494              	.L27:
 495 00c0 00000000 		.word	isr_telit_rx
 496 00c4 00000000 		.word	.LC0
 497 00c8 10000000 		.word	.LC2
 498 00cc 18000000 		.word	.LC3
 499 00d0 2C000000 		.word	.LC4
 500 00d4 00000000 		.word	modem_state
 501 00d8 60000000 		.word	.LC5
 502              		.cfi_endproc
 503              	.LFE69:
 504              		.size	modem_power_up, .-modem_power_up
 505              		.section	.text.modem_soft_power_cycle,"ax",%progbits
 506              		.align	2
 507              		.global	modem_soft_power_cycle
 508              		.thumb
 509              		.thumb_func
 510              		.type	modem_soft_power_cycle, %function
 511              	modem_soft_power_cycle:
 512              	.LFB70:
 145:modem.c       **** 
 146:modem.c       **** // Puts modem in soft power cycle -- modem has power but isn't all the way on, so soft power cycle 
 147:modem.c       **** void modem_soft_power_cycle(){
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 13


 513              		.loc 1 147 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 1, uses_anonymous_args = 0
 517 0000 80B5     		push	{r7, lr}
 518              		.cfi_def_cfa_offset 8
 519              		.cfi_offset 7, -8
 520              		.cfi_offset 14, -4
 521 0002 00AF     		add	r7, sp, #0
 522              		.cfi_def_cfa_register 7
 148:modem.c       ****     Pin_Telit_ONOFF_Write(1u); // Pulls Telit_ONOFF pin high
 523              		.loc 1 148 0
 524 0004 0120     		movs	r0, #1
 525 0006 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 149:modem.c       ****     CyDelay(2000u); // Give modem a sec to boot
 526              		.loc 1 149 0
 527 000a 4FF4FA60 		mov	r0, #2000
 528 000e FFF7FEFF 		bl	CyDelay
 150:modem.c       ****     Pin_Telit_ONOFF_Write(0u); // Pulls Telit_ONOFF pin low
 529              		.loc 1 150 0
 530 0012 0020     		movs	r0, #0
 531 0014 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 151:modem.c       ****     
 152:modem.c       **** }
 532              		.loc 1 152 0
 533 0018 00BF     		nop
 534 001a 80BD     		pop	{r7, pc}
 535              		.cfi_endproc
 536              	.LFE70:
 537              		.size	modem_soft_power_cycle, .-modem_soft_power_cycle
 538              		.section	.text.uart_string_reset,"ax",%progbits
 539              		.align	2
 540              		.global	uart_string_reset
 541              		.thumb
 542              		.thumb_func
 543              		.type	uart_string_reset, %function
 544              	uart_string_reset:
 545              	.LFB71:
 153:modem.c       **** 
 154:modem.c       **** // Clear and reset the uart_received_string variable and uart_string_index for the next transmissio
 155:modem.c       **** void uart_string_reset(){
 546              		.loc 1 155 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 1, uses_anonymous_args = 0
 550 0000 80B5     		push	{r7, lr}
 551              		.cfi_def_cfa_offset 8
 552              		.cfi_offset 7, -8
 553              		.cfi_offset 14, -4
 554 0002 00AF     		add	r7, sp, #0
 555              		.cfi_def_cfa_register 7
 156:modem.c       ****     uart_string_index=0;
 556              		.loc 1 156 0
 557 0004 064B     		ldr	r3, .L31
 558 0006 0022     		movs	r2, #0
 559 0008 1A80     		strh	r2, [r3]	@ movhi
 157:modem.c       ****     // memset(void *str, int c, size_t n) copies the character c (an unsigned char) to the first n 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 14


 158:modem.c       ****     memset(uart_received_string,'\0',sizeof(uart_received_string));
 560              		.loc 1 158 0
 561 000a 4FF48062 		mov	r2, #1024
 562 000e 0021     		movs	r1, #0
 563 0010 0448     		ldr	r0, .L31+4
 564 0012 FFF7FEFF 		bl	memset
 159:modem.c       ****     // Clears the receiver memory buffer and hardware RX FIFO of all received data.
 160:modem.c       ****     UART_Telit_ClearRxBuffer();
 565              		.loc 1 160 0
 566 0016 FFF7FEFF 		bl	UART_Telit_ClearRxBuffer
 161:modem.c       **** }
 567              		.loc 1 161 0
 568 001a 00BF     		nop
 569 001c 80BD     		pop	{r7, pc}
 570              	.L32:
 571 001e 00BF     		.align	2
 572              	.L31:
 573 0020 00000000 		.word	uart_string_index
 574 0024 00000000 		.word	uart_received_string
 575              		.cfi_endproc
 576              	.LFE71:
 577              		.size	uart_string_reset, .-uart_string_reset
 578              		.section	.rodata
 579              		.align	2
 580              	.LC6:
 581 0078 4D6F6465 		.ascii	"Modem sent AT command without timeout: %s\015\012\000"
 581      6D207365 
 581      6E742041 
 581      5420636F 
 581      6D6D616E 
 582              		.align	2
 583              	.LC7:
 584 00a4 4D6F6465 		.ascii	"Modem Received expected AT Response on first Try:\012"
 584      6D205265 
 584      63656976 
 584      65642065 
 584      78706563 
 585 00d6 436F6D6D 		.ascii	"Command: %s\012Received: %s\015\012\000"
 585      616E643A 
 585      2025730A 
 585      52656365 
 585      69766564 
 586 00f1 000000   		.align	2
 587              	.LC8:
 588 00f4 4D6F6465 		.ascii	"Modem required %d tries to receive AT Response: %s\015"
 588      6D207265 
 588      71756972 
 588      65642025 
 588      64207472 
 589 0127 0A00     		.ascii	"\012\000"
 590 0129 000000   		.align	2
 591              	.LC9:
 592 012c 436F756C 		.ascii	"Could not write AT command: %s\012 Received: %s\012"
 592      64206E6F 
 592      74207772 
 592      69746520 
 592      41542063 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 15


 593 0159 00       		.ascii	"\000"
 594              		.section	.text.at_write_command,"ax",%progbits
 595              		.align	2
 596              		.global	at_write_command
 597              		.thumb
 598              		.thumb_func
 599              		.type	at_write_command, %function
 600              	at_write_command:
 601              	.LFB72:
 162:modem.c       **** 
 163:modem.c       **** // Modem controlled  via  the  serial  interface  using  the  standard  AT commands.
 164:modem.c       **** // AT is an ATTENTION command and is used as a prefix to other parameters in a string. 
 165:modem.c       **** // Sends commands to the modem
 166:modem.c       **** uint8_t at_write_command(char* commands, char* expected_response,uint32_t timeout){
 602              		.loc 1 166 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 40
 605              		@ frame_needed = 1, uses_anonymous_args = 0
 606 0000 80B5     		push	{r7, lr}
 607              		.cfi_def_cfa_offset 8
 608              		.cfi_offset 7, -8
 609              		.cfi_offset 14, -4
 610 0002 8AB0     		sub	sp, sp, #40
 611              		.cfi_def_cfa_offset 48
 612 0004 00AF     		add	r7, sp, #0
 613              		.cfi_def_cfa_register 7
 614 0006 F860     		str	r0, [r7, #12]
 615 0008 B960     		str	r1, [r7, #8]
 616 000a 7A60     		str	r2, [r7, #4]
 167:modem.c       **** 
 168:modem.c       ****     uint32 at_attempt = 0;
 617              		.loc 1 168 0
 618 000c 0023     		movs	r3, #0
 619 000e 7B62     		str	r3, [r7, #36]
 169:modem.c       ****     
 170:modem.c       ****     for(at_attempt = 0; at_attempt < 3; at_attempt++) {
 620              		.loc 1 170 0
 621 0010 0023     		movs	r3, #0
 622 0012 7B62     		str	r3, [r7, #36]
 623 0014 46E0     		b	.L34
 624              	.L42:
 625              	.LBB4:
 171:modem.c       ****         
 172:modem.c       ****         char* compare_location;
 173:modem.c       ****         uint32_t delay=10;
 626              		.loc 1 173 0
 627 0016 0A23     		movs	r3, #10
 628 0018 FB61     		str	r3, [r7, #28]
 174:modem.c       ****         uint32_t i, interval=timeout/delay;        
 629              		.loc 1 174 0
 630 001a 7A68     		ldr	r2, [r7, #4]
 631 001c FB69     		ldr	r3, [r7, #28]
 632 001e B2FBF3F3 		udiv	r3, r2, r3
 633 0022 BB61     		str	r3, [r7, #24]
 175:modem.c       ****         
 176:modem.c       ****         // Clear and reset the uart_received_string variable and uart_string_index for the next tra
 177:modem.c       ****         uart_string_reset();
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 16


 634              		.loc 1 177 0
 635 0024 FFF7FEFF 		bl	uart_string_reset
 178:modem.c       ****         
 179:modem.c       ****         // Sends a NULL terminated string to the TX buffer for transmission.
 180:modem.c       ****         UART_Telit_PutString(commands);
 636              		.loc 1 180 0
 637 0028 F868     		ldr	r0, [r7, #12]
 638 002a FFF7FEFF 		bl	UART_Telit_PutString
 181:modem.c       ****         
 182:modem.c       ****         
 183:modem.c       ****         // If no timeout, no need to wait for response
 184:modem.c       ****         if(timeout == NO_AT_TIMEOUT){
 639              		.loc 1 184 0
 640 002e 7B68     		ldr	r3, [r7, #4]
 641 0030 002B     		cmp	r3, #0
 642 0032 06D1     		bne	.L35
 185:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem sent AT command without timeout: %s\r\n", commands);
 643              		.loc 1 185 0
 644 0034 FA68     		ldr	r2, [r7, #12]
 645 0036 1F49     		ldr	r1, .L43
 646 0038 0020     		movs	r0, #0
 647 003a FFF7FEFF 		bl	printNotif
 186:modem.c       ****             return 1u;
 648              		.loc 1 186 0
 649 003e 0123     		movs	r3, #1
 650 0040 34E0     		b	.L36
 651              	.L35:
 187:modem.c       ****         }
 188:modem.c       ****       
 189:modem.c       ****      
 190:modem.c       ****         for(i=0;i<interval;i++){ 
 652              		.loc 1 190 0
 653 0042 0023     		movs	r3, #0
 654 0044 3B62     		str	r3, [r7, #32]
 655 0046 20E0     		b	.L37
 656              	.L41:
 191:modem.c       ****             CyDelay((uint32) delay);
 657              		.loc 1 191 0
 658 0048 F869     		ldr	r0, [r7, #28]
 659 004a FFF7FEFF 		bl	CyDelay
 192:modem.c       ****             // strstr(const char *haystack, const char *needle) function finds the first occurrence
 193:modem.c       ****             // Returns a pointer to the first occurrence in haystack of any of the entire sequence 
 194:modem.c       ****             compare_location=strstr(uart_received_string,expected_response);        
 660              		.loc 1 194 0
 661 004e B968     		ldr	r1, [r7, #8]
 662 0050 1948     		ldr	r0, .L43+4
 663 0052 FFF7FEFF 		bl	strstr
 664 0056 7861     		str	r0, [r7, #20]
 195:modem.c       ****             if(compare_location!=NULL) {
 665              		.loc 1 195 0
 666 0058 7B69     		ldr	r3, [r7, #20]
 667 005a 002B     		cmp	r3, #0
 668 005c 12D0     		beq	.L38
 196:modem.c       ****                 if (at_attempt == 0){
 669              		.loc 1 196 0
 670 005e 7B6A     		ldr	r3, [r7, #36]
 671 0060 002B     		cmp	r3, #0
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 17


 672 0062 06D1     		bne	.L39
 197:modem.c       ****                     // we add \n for new line to make it easier to decipher
 198:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT,"Modem Received expected AT Response on first Try:\
 673              		.loc 1 198 0
 674 0064 144B     		ldr	r3, .L43+4
 675 0066 FA68     		ldr	r2, [r7, #12]
 676 0068 1449     		ldr	r1, .L43+8
 677 006a 0020     		movs	r0, #0
 678 006c FFF7FEFF 		bl	printNotif
 679 0070 06E0     		b	.L40
 680              	.L39:
 199:modem.c       ****                 }else{
 200:modem.c       ****                     printNotif(NOTIF_TYPE_WARNING,"Modem required %d tries to receive AT Response: 
 681              		.loc 1 200 0
 682 0072 7B6A     		ldr	r3, [r7, #36]
 683 0074 5A1C     		adds	r2, r3, #1
 684 0076 104B     		ldr	r3, .L43+4
 685 0078 1149     		ldr	r1, .L43+12
 686 007a 0120     		movs	r0, #1
 687 007c FFF7FEFF 		bl	printNotif
 688              	.L40:
 201:modem.c       ****                  
 202:modem.c       ****                 }
 203:modem.c       ****                 return(1);
 689              		.loc 1 203 0
 690 0080 0123     		movs	r3, #1
 691 0082 13E0     		b	.L36
 692              	.L38:
 190:modem.c       ****             CyDelay((uint32) delay);
 693              		.loc 1 190 0 discriminator 2
 694 0084 3B6A     		ldr	r3, [r7, #32]
 695 0086 0133     		adds	r3, r3, #1
 696 0088 3B62     		str	r3, [r7, #32]
 697              	.L37:
 190:modem.c       ****             CyDelay((uint32) delay);
 698              		.loc 1 190 0 is_stmt 0 discriminator 1
 699 008a 3A6A     		ldr	r2, [r7, #32]
 700 008c BB69     		ldr	r3, [r7, #24]
 701 008e 9A42     		cmp	r2, r3
 702 0090 DAD3     		bcc	.L41
 204:modem.c       ****             }
 205:modem.c       ****             
 206:modem.c       ****         }  
 207:modem.c       ****         
 208:modem.c       ****         // Something went wrong, restart UART
 209:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not write AT command: %s\n Received: %s\n", commands,uar
 703              		.loc 1 209 0 is_stmt 1 discriminator 2
 704 0092 094B     		ldr	r3, .L43+4
 705 0094 FA68     		ldr	r2, [r7, #12]
 706 0096 0B49     		ldr	r1, .L43+16
 707 0098 0220     		movs	r0, #2
 708 009a FFF7FEFF 		bl	printNotif
 709              	.LBE4:
 170:modem.c       ****         
 710              		.loc 1 170 0 discriminator 2
 711 009e 7B6A     		ldr	r3, [r7, #36]
 712 00a0 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 18


 713 00a2 7B62     		str	r3, [r7, #36]
 714              	.L34:
 170:modem.c       ****         
 715              		.loc 1 170 0 is_stmt 0 discriminator 1
 716 00a4 7B6A     		ldr	r3, [r7, #36]
 717 00a6 022B     		cmp	r3, #2
 718 00a8 B5D9     		bls	.L42
 210:modem.c       ****       
 211:modem.c       ****     }
 212:modem.c       ****    // printNotif(NOTIF_TYPE_ERROR,"Modem AT response timeout: %s\r\n", commands);
 213:modem.c       ****           
 214:modem.c       ****     return(0);    
 719              		.loc 1 214 0 is_stmt 1
 720 00aa 0023     		movs	r3, #0
 721              	.L36:
 215:modem.c       **** }
 722              		.loc 1 215 0
 723 00ac 1846     		mov	r0, r3
 724 00ae 2837     		adds	r7, r7, #40
 725              		.cfi_def_cfa_offset 8
 726 00b0 BD46     		mov	sp, r7
 727              		.cfi_def_cfa_register 13
 728              		@ sp needed
 729 00b2 80BD     		pop	{r7, pc}
 730              	.L44:
 731              		.align	2
 732              	.L43:
 733 00b4 78000000 		.word	.LC6
 734 00b8 00000000 		.word	uart_received_string
 735 00bc A4000000 		.word	.LC7
 736 00c0 F4000000 		.word	.LC8
 737 00c4 2C010000 		.word	.LC9
 738              		.cfi_endproc
 739              	.LFE72:
 740              		.size	at_write_command, .-at_write_command
 741              		.section	.rodata
 742 015a 0000     		.align	2
 743              	.LC10:
 744 015c 54455354 		.ascii	"TEST_MODEM\000"
 744      5F4D4F44 
 744      454D00
 745 0167 00       		.align	2
 746              	.LC11:
 747 0168 4E6F2072 		.ascii	"No reponse from modem.\000"
 747      65706F6E 
 747      73652066 
 747      726F6D20 
 747      6D6F6465 
 748 017f 00       		.align	2
 749              	.LC12:
 750 0180 4D6F6465 		.ascii	"Modem connected to network.\000"
 750      6D20636F 
 750      6E6E6563 
 750      74656420 
 750      746F206E 
 751              		.section	.text.modem_test,"ax",%progbits
 752              		.align	2
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 19


 753              		.global	modem_test
 754              		.thumb
 755              		.thumb_func
 756              		.type	modem_test, %function
 757              	modem_test:
 758              	.LFB73:
 216:modem.c       **** 
 217:modem.c       **** // Test modem -- needs fleshed out
 218:modem.c       **** test_t modem_test(){
 759              		.loc 1 218 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 408
 762              		@ frame_needed = 1, uses_anonymous_args = 0
 763 0000 B0B5     		push	{r4, r5, r7, lr}
 764              		.cfi_def_cfa_offset 16
 765              		.cfi_offset 4, -16
 766              		.cfi_offset 5, -12
 767              		.cfi_offset 7, -8
 768              		.cfi_offset 14, -4
 769 0002 E6B0     		sub	sp, sp, #408
 770              		.cfi_def_cfa_offset 424
 771 0004 00AF     		add	r7, sp, #0
 772              		.cfi_def_cfa_register 7
 773 0006 3B1D     		adds	r3, r7, #4
 774 0008 1860     		str	r0, [r3]
 219:modem.c       ****     
 220:modem.c       ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
 221:modem.c       ****     test.status = 0;
 775              		.loc 1 221 0
 776 000a 07F10C03 		add	r3, r7, #12
 777 000e 0022     		movs	r2, #0
 778 0010 83F88020 		strb	r2, [r3, #128]
 222:modem.c       ****     // Print test name and test reason
 223:modem.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_MODEM");
 779              		.loc 1 223 0
 780 0014 07F10C03 		add	r3, r7, #12
 781 0018 364A     		ldr	r2, .L53
 782 001a 07CA     		ldmia	r2, {r0, r1, r2}
 783 001c 03C3     		stmia	r3!, {r0, r1}
 784 001e 1A80     		strh	r2, [r3]	@ movhi
 785 0020 0233     		adds	r3, r3, #2
 786 0022 120C     		lsrs	r2, r2, #16
 787 0024 1A70     		strb	r2, [r3]
 224:modem.c       ****     snprintf(test.reason,sizeof(test.reason),"No reponse from modem.");
 788              		.loc 1 224 0
 789 0026 07F10C03 		add	r3, r7, #12
 790 002a 8133     		adds	r3, r3, #129
 791 002c 324A     		ldr	r2, .L53+4
 792 002e 1C46     		mov	r4, r3
 793 0030 1546     		mov	r5, r2
 794 0032 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 795 0034 2060     		str	r0, [r4]	@ unaligned
 796 0036 6160     		str	r1, [r4, #4]	@ unaligned
 797 0038 A260     		str	r2, [r4, #8]	@ unaligned
 798 003a E360     		str	r3, [r4, #12]	@ unaligned
 799 003c 2868     		ldr	r0, [r5]	@ unaligned
 800 003e 2061     		str	r0, [r4, #16]	@ unaligned
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 20


 801 0040 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 802 0042 AA79     		ldrb	r2, [r5, #6]
 803 0044 A382     		strh	r3, [r4, #20]	@ unaligned
 804 0046 1346     		mov	r3, r2
 805 0048 A375     		strb	r3, [r4, #22]
 806              	.LBB5:
 225:modem.c       ****    
 226:modem.c       ****     //try the modem 60*1000ms (60 secs)
 227:modem.c       ****     for(int i = 0; i< 60; i++){
 807              		.loc 1 227 0
 808 004a 0023     		movs	r3, #0
 809 004c C7F89431 		str	r3, [r7, #404]
 810 0050 3AE0     		b	.L46
 811              	.L51:
 228:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 229:modem.c       ****         modem_process_tasks();
 812              		.loc 1 229 0
 813 0052 FFF7FEFF 		bl	modem_process_tasks
 230:modem.c       ****          
 231:modem.c       ****         if(modem_get_state() == MODEM_STATE_OFF){
 814              		.loc 1 231 0
 815 0056 FFF7FEFF 		bl	modem_get_state
 816 005a 0346     		mov	r3, r0
 817 005c 002B     		cmp	r3, #0
 818 005e 02D1     		bne	.L47
 232:modem.c       ****             // This puts all the modem points into a state that won't leak power
 233:modem.c       ****             modem_power_up();
 819              		.loc 1 233 0
 820 0060 FFF7FEFF 		bl	modem_power_up
 821 0064 27E0     		b	.L48
 822              	.L47:
 234:modem.c       ****             // Should put this on a max_try counter, so we don't just keep trying to connect over a
 235:modem.c       ****             
 236:modem.c       ****         }else if(modem_get_state() == MODEM_STATE_READY){
 823              		.loc 1 236 0
 824 0066 FFF7FEFF 		bl	modem_get_state
 825 006a 0346     		mov	r3, r0
 826 006c 042B     		cmp	r3, #4
 827 006e 22D1     		bne	.L48
 828              	.LBB6:
 237:modem.c       ****         
 238:modem.c       ****         
 239:modem.c       ****         // Get time, and if it looks good, set the RTC with it
 240:modem.c       ****         long network_time = modem_get_network_time();
 829              		.loc 1 240 0
 830 0070 FFF7FEFF 		bl	modem_get_network_time
 831 0074 C7F89001 		str	r0, [r7, #400]
 241:modem.c       ****         if(network_time != 0){
 832              		.loc 1 241 0
 833 0078 D7F89031 		ldr	r3, [r7, #400]
 834 007c 002B     		cmp	r3, #0
 835 007e 03D0     		beq	.L49
 242:modem.c       ****             setTime(network_time); // Set the system time 
 836              		.loc 1 242 0
 837 0080 D7F89001 		ldr	r0, [r7, #400]
 838 0084 FFF7FEFF 		bl	setTime
 839              	.L49:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 21


 243:modem.c       ****         }
 244:modem.c       ****             
 245:modem.c       ****         snprintf(test.reason,sizeof(test.reason),"Modem connected to network.");
 840              		.loc 1 245 0
 841 0088 07F10C03 		add	r3, r7, #12
 842 008c 8133     		adds	r3, r3, #129
 843 008e 1B4A     		ldr	r2, .L53+8
 844 0090 1D46     		mov	r5, r3
 845 0092 1446     		mov	r4, r2
 846 0094 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 847 0096 2860     		str	r0, [r5]	@ unaligned
 848 0098 6960     		str	r1, [r5, #4]	@ unaligned
 849 009a AA60     		str	r2, [r5, #8]	@ unaligned
 850 009c EB60     		str	r3, [r5, #12]	@ unaligned
 851 009e 07CC     		ldmia	r4!, {r0, r1, r2}
 852 00a0 2861     		str	r0, [r5, #16]	@ unaligned
 853 00a2 6961     		str	r1, [r5, #20]	@ unaligned
 854 00a4 AA61     		str	r2, [r5, #24]	@ unaligned
 246:modem.c       ****         test.status = 1;
 855              		.loc 1 246 0
 856 00a6 07F10C03 		add	r3, r7, #12
 857 00aa 0122     		movs	r2, #1
 858 00ac 83F88020 		strb	r2, [r3, #128]
 247:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 248:modem.c       ****         modem_power_down();
 859              		.loc 1 248 0
 860 00b0 FFF7FEFF 		bl	modem_power_down
 249:modem.c       ****         break;
 861              		.loc 1 249 0
 862 00b4 0CE0     		b	.L50
 863              	.L48:
 864              	.LBE6:
 250:modem.c       ****         
 251:modem.c       ****       }
 252:modem.c       ****         CyDelay(1000u);
 865              		.loc 1 252 0 discriminator 2
 866 00b6 4FF47A70 		mov	r0, #1000
 867 00ba FFF7FEFF 		bl	CyDelay
 227:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 868              		.loc 1 227 0 discriminator 2
 869 00be D7F89431 		ldr	r3, [r7, #404]
 870 00c2 0133     		adds	r3, r3, #1
 871 00c4 C7F89431 		str	r3, [r7, #404]
 872              	.L46:
 227:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 873              		.loc 1 227 0 is_stmt 0 discriminator 1
 874 00c8 D7F89431 		ldr	r3, [r7, #404]
 875 00cc 3B2B     		cmp	r3, #59
 876 00ce C0DD     		ble	.L51
 877              	.L50:
 878              	.LBE5:
 253:modem.c       ****         
 254:modem.c       ****     }
 255:modem.c       ****     
 256:modem.c       ****     return test;
 879              		.loc 1 256 0 is_stmt 1
 880 00d0 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 22


 881 00d2 1A68     		ldr	r2, [r3]
 882 00d4 07F10C03 		add	r3, r7, #12
 883 00d8 1046     		mov	r0, r2
 884 00da 1946     		mov	r1, r3
 885 00dc 40F28113 		movw	r3, #385
 886 00e0 1A46     		mov	r2, r3
 887 00e2 FFF7FEFF 		bl	memcpy
 257:modem.c       **** }
 888              		.loc 1 257 0
 889 00e6 3B1D     		adds	r3, r7, #4
 890 00e8 1868     		ldr	r0, [r3]
 891 00ea 07F5CC77 		add	r7, r7, #408
 892              		.cfi_def_cfa_offset 16
 893 00ee BD46     		mov	sp, r7
 894              		.cfi_def_cfa_register 13
 895              		@ sp needed
 896 00f0 B0BD     		pop	{r4, r5, r7, pc}
 897              	.L54:
 898 00f2 00BF     		.align	2
 899              	.L53:
 900 00f4 5C010000 		.word	.LC10
 901 00f8 68010000 		.word	.LC11
 902 00fc 80010000 		.word	.LC12
 903              		.cfi_endproc
 904              	.LFE73:
 905              		.size	modem_test, .-modem_test
 906              		.section	.text.extract_string,"ax",%progbits
 907              		.align	2
 908              		.global	extract_string
 909              		.thumb
 910              		.thumb_func
 911              		.type	extract_string, %function
 912              	extract_string:
 913              	.LFB74:
 258:modem.c       **** 
 259:modem.c       **** // Extract string from the UART
 260:modem.c       **** uint8 extract_string(char* from, const char* beginMarker, const char* endMarker,  char* target){
 914              		.loc 1 260 0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 24
 917              		@ frame_needed = 1, uses_anonymous_args = 0
 918 0000 80B5     		push	{r7, lr}
 919              		.cfi_def_cfa_offset 8
 920              		.cfi_offset 7, -8
 921              		.cfi_offset 14, -4
 922 0002 86B0     		sub	sp, sp, #24
 923              		.cfi_def_cfa_offset 32
 924 0004 00AF     		add	r7, sp, #0
 925              		.cfi_def_cfa_register 7
 926 0006 F860     		str	r0, [r7, #12]
 927 0008 B960     		str	r1, [r7, #8]
 928 000a 7A60     		str	r2, [r7, #4]
 929 000c 3B60     		str	r3, [r7]
 261:modem.c       ****     
 262:modem.c       ****         char *a, *b;
 263:modem.c       ****   
 264:modem.c       ****         // Expect the UART to contain something like "+CESQ: ##,##,##,##,##,##\r\n\r\nOK"
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 23


 265:modem.c       ****         // - Search for "+CESQ: ".  Place the starting pointer, a, at the resulting index
 266:modem.c       ****         a = strstr(from,beginMarker);
 930              		.loc 1 266 0
 931 000e B968     		ldr	r1, [r7, #8]
 932 0010 F868     		ldr	r0, [r7, #12]
 933 0012 FFF7FEFF 		bl	strstr
 934 0016 7861     		str	r0, [r7, #20]
 267:modem.c       ****         if (a == NULL) {
 935              		.loc 1 267 0
 936 0018 7B69     		ldr	r3, [r7, #20]
 937 001a 002B     		cmp	r3, #0
 938 001c 01D1     		bne	.L56
 268:modem.c       ****             //puts("+CESQ: not found in uart_received_string");
 269:modem.c       ****             a = from;
 939              		.loc 1 269 0
 940 001e FB68     		ldr	r3, [r7, #12]
 941 0020 7B61     		str	r3, [r7, #20]
 942              	.L56:
 270:modem.c       ****         }
 271:modem.c       ****         // The strlen() function calculates the length of a given string.
 272:modem.c       ****         a += strlen(beginMarker);
 943              		.loc 1 272 0
 944 0022 B868     		ldr	r0, [r7, #8]
 945 0024 FFF7FEFF 		bl	strlen
 946 0028 0246     		mov	r2, r0
 947 002a 7B69     		ldr	r3, [r7, #20]
 948 002c 1344     		add	r3, r3, r2
 949 002e 7B61     		str	r3, [r7, #20]
 273:modem.c       ****         
 274:modem.c       ****         // - Find the end marking and offset by 1
 275:modem.c       ****         // strstr(const char *haystack, const char *needle) function finds the first occurrence of 
 276:modem.c       ****         // Returns a pointer to the first occurrence in haystack of any of the entire sequence of c
 277:modem.c       ****         b = strstr(a,endMarker);
 950              		.loc 1 277 0
 951 0030 7968     		ldr	r1, [r7, #4]
 952 0032 7869     		ldr	r0, [r7, #20]
 953 0034 FFF7FEFF 		bl	strstr
 954 0038 3861     		str	r0, [r7, #16]
 278:modem.c       ****         if (b == NULL) {
 955              		.loc 1 278 0
 956 003a 3B69     		ldr	r3, [r7, #16]
 957 003c 002B     		cmp	r3, #0
 958 003e 06D1     		bne	.L57
 279:modem.c       ****             // Puts("Comma not found in uart_received_string");
 280:modem.c       ****             b=from+strlen(from);
 959              		.loc 1 280 0
 960 0040 F868     		ldr	r0, [r7, #12]
 961 0042 FFF7FEFF 		bl	strlen
 962 0046 0246     		mov	r2, r0
 963 0048 FB68     		ldr	r3, [r7, #12]
 964 004a 1344     		add	r3, r3, r2
 965 004c 3B61     		str	r3, [r7, #16]
 966              	.L57:
 281:modem.c       ****         }        
 282:modem.c       ****         
 283:modem.c       ****         // Parse the strings and store the respective rssi and fer values
 284:modem.c       ****         strncpy(target,a,b-a);
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 24


 967              		.loc 1 284 0
 968 004e 3A69     		ldr	r2, [r7, #16]
 969 0050 7B69     		ldr	r3, [r7, #20]
 970 0052 D31A     		subs	r3, r2, r3
 971 0054 1A46     		mov	r2, r3
 972 0056 7969     		ldr	r1, [r7, #20]
 973 0058 3868     		ldr	r0, [r7]
 974 005a FFF7FEFF 		bl	strncpy
 285:modem.c       ****         target[b-a] = '\0';
 975              		.loc 1 285 0
 976 005e 3A69     		ldr	r2, [r7, #16]
 977 0060 7B69     		ldr	r3, [r7, #20]
 978 0062 D31A     		subs	r3, r2, r3
 979 0064 1A46     		mov	r2, r3
 980 0066 3B68     		ldr	r3, [r7]
 981 0068 1344     		add	r3, r3, r2
 982 006a 0022     		movs	r2, #0
 983 006c 1A70     		strb	r2, [r3]
 286:modem.c       ****         return 1u;
 984              		.loc 1 286 0
 985 006e 0123     		movs	r3, #1
 287:modem.c       ****         
 288:modem.c       **** }
 986              		.loc 1 288 0
 987 0070 1846     		mov	r0, r3
 988 0072 1837     		adds	r7, r7, #24
 989              		.cfi_def_cfa_offset 8
 990 0074 BD46     		mov	sp, r7
 991              		.cfi_def_cfa_register 13
 992              		@ sp needed
 993 0076 80BD     		pop	{r7, pc}
 994              		.cfi_endproc
 995              	.LFE74:
 996              		.size	extract_string, .-extract_string
 997              		.section	.rodata
 998              		.align	2
 999              	.LC13:
 1000 019c 54696D65 		.ascii	"Time to connect to network: %d seconds\000"
 1000      20746F20 
 1000      636F6E6E 
 1000      65637420 
 1000      746F206E 
 1001 01c3 00       		.align	2
 1002              	.LC14:
 1003 01c4 4D6F6465 		.ascii	"Modem timed out on network connect\000"
 1003      6D207469 
 1003      6D656420 
 1003      6F757420 
 1003      6F6E206E 
 1004 01e7 00       		.align	2
 1005              	.LC15:
 1006 01e8 41637175 		.ascii	"Acquired IP address: %d seconds\000"
 1006      69726564 
 1006      20495020 
 1006      61646472 
 1006      6573733A 
 1007              		.align	2
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 25


 1008              	.LC16:
 1009 0208 4D6F6465 		.ascii	"Modem timed out on IP address acquire.\000"
 1009      6D207469 
 1009      6D656420 
 1009      6F757420 
 1009      6F6E2049 
 1010              		.section	.text.modem_process_tasks,"ax",%progbits
 1011              		.align	2
 1012              		.global	modem_process_tasks
 1013              		.thumb
 1014              		.thumb_func
 1015              		.type	modem_process_tasks, %function
 1016              	modem_process_tasks:
 1017              	.LFB75:
 289:modem.c       **** 
 290:modem.c       **** // Function to startup the modem, connect to the network, and then hand it off to sleep
 291:modem.c       **** uint8 modem_process_tasks(){
 1018              		.loc 1 291 0
 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 8
 1021              		@ frame_needed = 1, uses_anonymous_args = 0
 1022 0000 80B5     		push	{r7, lr}
 1023              		.cfi_def_cfa_offset 8
 1024              		.cfi_offset 7, -8
 1025              		.cfi_offset 14, -4
 1026 0002 82B0     		sub	sp, sp, #8
 1027              		.cfi_def_cfa_offset 16
 1028 0004 00AF     		add	r7, sp, #0
 1029              		.cfi_def_cfa_register 7
 292:modem.c       ****     // If modem state is "startup" then get the modem start time, configure modem settings, and cha
 293:modem.c       ****     if(modem_state == MODEM_STATE_STARTUP){
 1030              		.loc 1 293 0
 1031 0006 464B     		ldr	r3, .L73
 1032 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1033 000a 012B     		cmp	r3, #1
 1034 000c 0BD1     		bne	.L60
 294:modem.c       ****         
 295:modem.c       ****         modem_start_time_stamp = getTimeStamp(); // Get timestamp for modem start time
 1035              		.loc 1 295 0
 1036 000e FFF7FEFF 		bl	getTimeStamp
 1037 0012 0246     		mov	r2, r0
 1038 0014 434B     		ldr	r3, .L73+4
 1039 0016 1A60     		str	r2, [r3]
 296:modem.c       ****         modem_configure_settings(); // Configure modem settings
 1040              		.loc 1 296 0
 1041 0018 FFF7FEFF 		bl	modem_configure_settings
 297:modem.c       ****         modem_state = MODEM_STATE_WAITING_FOR_NETWORK; // Change modem state 
 1042              		.loc 1 297 0
 1043 001c 404B     		ldr	r3, .L73
 1044 001e 0222     		movs	r2, #2
 1045 0020 1A70     		strb	r2, [r3]
 298:modem.c       ****         return 1u; // Keep going, don't hand off to sleep yet
 1046              		.loc 1 298 0
 1047 0022 0123     		movs	r3, #1
 1048 0024 77E0     		b	.L61
 1049              	.L60:
 299:modem.c       ****         
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 26


 300:modem.c       ****     }
 301:modem.c       ****     // Else if modem state is "waiting for network" 
 302:modem.c       ****     else if(modem_state == MODEM_STATE_WAITING_FOR_NETWORK){
 1050              		.loc 1 302 0
 1051 0026 3E4B     		ldr	r3, .L73
 1052 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1053 002a 022B     		cmp	r3, #2
 1054 002c 44D1     		bne	.L62
 1055              	.LBB7:
 303:modem.c       ****         
 304:modem.c       ****         // Check if modem has a good cell signal each second for up to 30 seconds
 305:modem.c       ****         for(uint8 i=0;i<30;i++){
 1056              		.loc 1 305 0
 1057 002e 0023     		movs	r3, #0
 1058 0030 FB71     		strb	r3, [r7, #7]
 1059 0032 10E0     		b	.L63
 1060              	.L66:
 306:modem.c       ****             // Get cell network stats
 307:modem.c       ****             get_cell_network_stats();
 1061              		.loc 1 307 0
 1062 0034 FFF7FEFF 		bl	get_cell_network_stats
 308:modem.c       ****             // If cell signal (rsrp) is strong enough, break and connect to the network
 309:modem.c       ****             // Otherwise, keep checking rsrp
 310:modem.c       ****             if(modem_stats.rsrp > 26 && modem_stats.rsrp != 255){
 1063              		.loc 1 310 0
 1064 0038 3B4B     		ldr	r3, .L73+8
 1065 003a 5B69     		ldr	r3, [r3, #20]
 1066 003c 1A2B     		cmp	r3, #26
 1067 003e 03DD     		ble	.L64
 1068              		.loc 1 310 0 is_stmt 0 discriminator 1
 1069 0040 394B     		ldr	r3, .L73+8
 1070 0042 5B69     		ldr	r3, [r3, #20]
 1071 0044 FF2B     		cmp	r3, #255
 1072 0046 0AD1     		bne	.L72
 1073              	.L64:
 311:modem.c       ****                 break;
 312:modem.c       ****             }
 313:modem.c       ****             // Delay for 1 second
 314:modem.c       ****             CyDelay(1000u);
 1074              		.loc 1 314 0 is_stmt 1 discriminator 2
 1075 0048 4FF47A70 		mov	r0, #1000
 1076 004c FFF7FEFF 		bl	CyDelay
 305:modem.c       ****             // Get cell network stats
 1077              		.loc 1 305 0 discriminator 2
 1078 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1079 0052 0133     		adds	r3, r3, #1
 1080 0054 FB71     		strb	r3, [r7, #7]
 1081              	.L63:
 305:modem.c       ****             // Get cell network stats
 1082              		.loc 1 305 0 is_stmt 0 discriminator 1
 1083 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1084 0058 1D2B     		cmp	r3, #29
 1085 005a EBD9     		bls	.L66
 1086 005c 00E0     		b	.L65
 1087              	.L72:
 311:modem.c       ****                 break;
 1088              		.loc 1 311 0 is_stmt 1
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 27


 1089 005e 00BF     		nop
 1090              	.L65:
 1091              	.LBE7:
 315:modem.c       ****         }
 316:modem.c       ****         
 317:modem.c       ****         // If modem connected to the cell network, save/print the time to connect to the network
 318:modem.c       ****         if(is_connected_to_cell_network()){
 1092              		.loc 1 318 0
 1093 0060 FFF7FEFF 		bl	is_connected_to_cell_network
 1094 0064 0346     		mov	r3, r0
 1095 0066 002B     		cmp	r3, #0
 1096 0068 13D0     		beq	.L67
 319:modem.c       ****       
 320:modem.c       ****              modem_stats.time_to_network_connect = (int)(getTimeStamp() - (int32)modem_start_time_s
 1097              		.loc 1 320 0
 1098 006a FFF7FEFF 		bl	getTimeStamp
 1099 006e 0246     		mov	r2, r0
 1100 0070 2C4B     		ldr	r3, .L73+4
 1101 0072 1B68     		ldr	r3, [r3]
 1102 0074 D31A     		subs	r3, r2, r3
 1103 0076 2C4A     		ldr	r2, .L73+8
 1104 0078 9361     		str	r3, [r2, #24]
 321:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Time to connect to network: %d seconds",
 1105              		.loc 1 321 0
 1106 007a 2B4B     		ldr	r3, .L73+8
 1107 007c 9B69     		ldr	r3, [r3, #24]
 1108 007e 1A46     		mov	r2, r3
 1109 0080 2A49     		ldr	r1, .L73+12
 1110 0082 0020     		movs	r0, #0
 1111 0084 FFF7FEFF 		bl	printNotif
 322:modem.c       ****                                             modem_stats.time_to_network_connect);
 323:modem.c       ****             set_up_internet_connection(); // Setup the internet connection
 1112              		.loc 1 323 0
 1113 0088 FFF7FEFF 		bl	set_up_internet_connection
 324:modem.c       ****             modem_state = MODEM_STATE_WAITING_FOR_IP; // Change modem state 
 1114              		.loc 1 324 0
 1115 008c 244B     		ldr	r3, .L73
 1116 008e 0322     		movs	r2, #3
 1117 0090 1A70     		strb	r2, [r3]
 1118              	.L67:
 325:modem.c       ****         }
 326:modem.c       ****         
 327:modem.c       ****         //power off if we time out should only take ~30 secs to connect to network
 328:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_NETWORK_CONNECT){
 1119              		.loc 1 328 0
 1120 0092 FFF7FEFF 		bl	getTimeStamp
 1121 0096 0246     		mov	r2, r0
 1122 0098 224B     		ldr	r3, .L73+4
 1123 009a 1B68     		ldr	r3, [r3]
 1124 009c D31A     		subs	r3, r2, r3
 1125 009e B42B     		cmp	r3, #180
 1126 00a0 08DD     		ble	.L68
 329:modem.c       ****             modem_state = MODEM_STATE_OFF; // Change modem state
 1127              		.loc 1 329 0
 1128 00a2 1F4B     		ldr	r3, .L73
 1129 00a4 0022     		movs	r2, #0
 1130 00a6 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 28


 330:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1131              		.loc 1 330 0
 1132 00a8 FFF7FEFF 		bl	modem_power_down
 331:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on network connect");
 1133              		.loc 1 331 0
 1134 00ac 2049     		ldr	r1, .L73+16
 1135 00ae 0220     		movs	r0, #2
 1136 00b0 FFF7FEFF 		bl	printNotif
 1137              	.L68:
 332:modem.c       ****             
 333:modem.c       ****         }
 334:modem.c       ****         return 0u;//ok to hand off to sleep
 1138              		.loc 1 334 0
 1139 00b4 0023     		movs	r3, #0
 1140 00b6 2EE0     		b	.L61
 1141              	.L62:
 335:modem.c       ****         
 336:modem.c       ****     // Else if modem state is "waiting for IP"
 337:modem.c       ****     }else if(modem_state == MODEM_STATE_WAITING_FOR_IP){
 1142              		.loc 1 337 0
 1143 00b8 194B     		ldr	r3, .L73
 1144 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1145 00bc 032B     		cmp	r3, #3
 1146 00be 29D1     		bne	.L69
 338:modem.c       ****         // If the modem is connected to the internet, change modem state to "ready", save/print tim
 339:modem.c       ****         if(is_connected_to_internet()){
 1147              		.loc 1 339 0
 1148 00c0 FFF7FEFF 		bl	is_connected_to_internet
 1149 00c4 0346     		mov	r3, r0
 1150 00c6 002B     		cmp	r3, #0
 1151 00c8 11D0     		beq	.L70
 340:modem.c       ****             modem_state = MODEM_STATE_READY; // Change modem state
 1152              		.loc 1 340 0
 1153 00ca 154B     		ldr	r3, .L73
 1154 00cc 0422     		movs	r2, #4
 1155 00ce 1A70     		strb	r2, [r3]
 341:modem.c       ****             // Save/print time to acquire IP address
 342:modem.c       ****             modem_stats.time_to_acquire_ip = (int)(getTimeStamp() - (int32)modem_start_time_stamp);
 1156              		.loc 1 342 0
 1157 00d0 FFF7FEFF 		bl	getTimeStamp
 1158 00d4 0246     		mov	r2, r0
 1159 00d6 134B     		ldr	r3, .L73+4
 1160 00d8 1B68     		ldr	r3, [r3]
 1161 00da D31A     		subs	r3, r2, r3
 1162 00dc 124A     		ldr	r2, .L73+8
 1163 00de D361     		str	r3, [r2, #28]
 343:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Acquired IP address: %d seconds",
 1164              		.loc 1 343 0
 1165 00e0 114B     		ldr	r3, .L73+8
 1166 00e2 DB69     		ldr	r3, [r3, #28]
 1167 00e4 1A46     		mov	r2, r3
 1168 00e6 1349     		ldr	r1, .L73+20
 1169 00e8 0020     		movs	r0, #0
 1170 00ea FFF7FEFF 		bl	printNotif
 1171              	.L70:
 344:modem.c       ****                                             modem_stats.time_to_acquire_ip);
 345:modem.c       ****         }
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 29


 346:modem.c       ****         
 347:modem.c       ****         // Power off if we times out should only take ~30 secs to connect to network
 348:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_IP_ACQUIRE){
 1172              		.loc 1 348 0
 1173 00ee FFF7FEFF 		bl	getTimeStamp
 1174 00f2 0246     		mov	r2, r0
 1175 00f4 0B4B     		ldr	r3, .L73+4
 1176 00f6 1B68     		ldr	r3, [r3]
 1177 00f8 D31A     		subs	r3, r2, r3
 1178 00fa E62B     		cmp	r3, #230
 1179 00fc 08DD     		ble	.L71
 349:modem.c       ****             modem_state = MODEM_STATE_OFF;
 1180              		.loc 1 349 0
 1181 00fe 084B     		ldr	r3, .L73
 1182 0100 0022     		movs	r2, #0
 1183 0102 1A70     		strb	r2, [r3]
 350:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1184              		.loc 1 350 0
 1185 0104 FFF7FEFF 		bl	modem_power_down
 351:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on IP address acquire.");
 1186              		.loc 1 351 0
 1187 0108 0B49     		ldr	r1, .L73+24
 1188 010a 0220     		movs	r0, #2
 1189 010c FFF7FEFF 		bl	printNotif
 1190              	.L71:
 352:modem.c       ****       
 353:modem.c       ****         }
 354:modem.c       ****         return 0u;//ok to hand off to sleep
 1191              		.loc 1 354 0
 1192 0110 0023     		movs	r3, #0
 1193 0112 00E0     		b	.L61
 1194              	.L69:
 355:modem.c       ****     }
 356:modem.c       ****     
 357:modem.c       ****     return 0u;
 1195              		.loc 1 357 0
 1196 0114 0023     		movs	r3, #0
 1197              	.L61:
 358:modem.c       ****     
 359:modem.c       **** }
 1198              		.loc 1 359 0
 1199 0116 1846     		mov	r0, r3
 1200 0118 0837     		adds	r7, r7, #8
 1201              		.cfi_def_cfa_offset 8
 1202 011a BD46     		mov	sp, r7
 1203              		.cfi_def_cfa_register 13
 1204              		@ sp needed
 1205 011c 80BD     		pop	{r7, pc}
 1206              	.L74:
 1207 011e 00BF     		.align	2
 1208              	.L73:
 1209 0120 00000000 		.word	modem_state
 1210 0124 00000000 		.word	modem_start_time_stamp
 1211 0128 00000000 		.word	modem_stats
 1212 012c 9C010000 		.word	.LC13
 1213 0130 C4010000 		.word	.LC14
 1214 0134 E8010000 		.word	.LC15
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 30


 1215 0138 08020000 		.word	.LC16
 1216              		.cfi_endproc
 1217              	.LFE75:
 1218              		.size	modem_process_tasks, .-modem_process_tasks
 1219              		.section	.rodata
 1220 022f 00       		.align	2
 1221              	.LC17:
 1222 0230 43686563 		.ascii	"Checking AT+CREG?\000"
 1222      6B696E67 
 1222      2041542B 
 1222      43524547 
 1222      3F00
 1223 0242 0000     		.align	2
 1224              	.LC18:
 1225 0244 41542B43 		.ascii	"AT+CREG?\015\000"
 1225      5245473F 
 1225      0D00
 1226 024e 0000     		.align	2
 1227              	.LC19:
 1228 0250 45787472 		.ascii	"Extracting string AT+CREG?\000"
 1228      61637469 
 1228      6E672073 
 1228      7472696E 
 1228      67204154 
 1229 026b 00       		.align	2
 1230              	.LC20:
 1231 026c 75617274 		.ascii	"uart_received_string: %s\000"
 1231      5F726563 
 1231      65697665 
 1231      645F7374 
 1231      72696E67 
 1232 0285 000000   		.align	2
 1233              	.LC21:
 1234 0288 0D00     		.ascii	"\015\000"
 1235 028a 0000     		.align	2
 1236              	.LC22:
 1237 028c 3A2000   		.ascii	": \000"
 1238 028f 00       		.align	2
 1239              	.LC23:
 1240 0290 52656769 		.ascii	"Registered to network, CREG: %s\000"
 1240      73746572 
 1240      65642074 
 1240      6F206E65 
 1240      74776F72 
 1241              		.align	2
 1242              	.LC24:
 1243 02b0 446F6E65 		.ascii	"Done extracing string AT+CREG?\000"
 1243      20657874 
 1243      72616369 
 1243      6E672073 
 1243      7472696E 
 1244 02cf 00       		.align	2
 1245              	.LC25:
 1246 02d0 302C3100 		.ascii	"0,1\000"
 1247              		.align	2
 1248              	.LC26:
 1249 02d4 302C3500 		.ascii	"0,5\000"
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 31


 1250              		.section	.text.is_connected_to_cell_network,"ax",%progbits
 1251              		.align	2
 1252              		.global	is_connected_to_cell_network
 1253              		.thumb
 1254              		.thumb_func
 1255              		.type	is_connected_to_cell_network, %function
 1256              	is_connected_to_cell_network:
 1257              	.LFB76:
 360:modem.c       **** 
 361:modem.c       **** // Checks network status, writes commands to the modem, then extracts string from UART
 362:modem.c       **** uint8 is_connected_to_cell_network(){
 1258              		.loc 1 362 0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 16
 1261              		@ frame_needed = 1, uses_anonymous_args = 0
 1262 0000 80B5     		push	{r7, lr}
 1263              		.cfi_def_cfa_offset 8
 1264              		.cfi_offset 7, -8
 1265              		.cfi_offset 14, -4
 1266 0002 84B0     		sub	sp, sp, #16
 1267              		.cfi_def_cfa_offset 24
 1268 0004 00AF     		add	r7, sp, #0
 1269              		.cfi_def_cfa_register 7
 363:modem.c       ****     // AT command AT+CREG? is the Network Registration Report to check network status -- need '0,0'
 364:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Checking AT+CREG?");
 1270              		.loc 1 364 0
 1271 0006 2049     		ldr	r1, .L80
 1272 0008 0020     		movs	r0, #0
 1273 000a FFF7FEFF 		bl	printNotif
 365:modem.c       ****     // create new uint8 variable stust and set to equal the output of the function at_write_command
 366:modem.c       ****     uint8 status = at_write_command("AT+CREG?\r", "OK",DEFAULT_AT_TIMEOUT);
 1274              		.loc 1 366 0
 1275 000e 4FF4FA62 		mov	r2, #2000
 1276 0012 1E49     		ldr	r1, .L80+4
 1277 0014 1E48     		ldr	r0, .L80+8
 1278 0016 FFF7FEFF 		bl	at_write_command
 1279 001a 0346     		mov	r3, r0
 1280 001c FB73     		strb	r3, [r7, #15]
 367:modem.c       ****     
 368:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Extracting string AT+CREG?");
 1281              		.loc 1 368 0
 1282 001e 1D49     		ldr	r1, .L80+12
 1283 0020 0020     		movs	r0, #0
 1284 0022 FFF7FEFF 		bl	printNotif
 369:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"uart_received_string: %s",uart_received_string);
 1285              		.loc 1 369 0
 1286 0026 1C4A     		ldr	r2, .L80+16
 1287 0028 1C49     		ldr	r1, .L80+20
 1288 002a 0020     		movs	r0, #0
 1289 002c FFF7FEFF 		bl	printNotif
 370:modem.c       ****     
 371:modem.c       ****     // If the modem has a status
 372:modem.c       ****     if(status){
 1290              		.loc 1 372 0
 1291 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1292 0032 002B     		cmp	r3, #0
 1293 0034 23D0     		beq	.L76
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 32


 1294              	.LBB8:
 373:modem.c       ****         // Create a character array of length 10 called creg
 374:modem.c       ****         char creg[10];
 375:modem.c       ****         creg[0] = '\0';
 1295              		.loc 1 375 0
 1296 0036 0023     		movs	r3, #0
 1297 0038 3B71     		strb	r3, [r7, #4]
 376:modem.c       ****         // Extract string from the UART
 377:modem.c       ****         extract_string(uart_received_string,": ","\r",creg);
 1298              		.loc 1 377 0
 1299 003a 3B1D     		adds	r3, r7, #4
 1300 003c 184A     		ldr	r2, .L80+24
 1301 003e 1949     		ldr	r1, .L80+28
 1302 0040 1548     		ldr	r0, .L80+16
 1303 0042 FFF7FEFF 		bl	extract_string
 378:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Registered to network, CREG: %s",creg);
 1304              		.loc 1 378 0
 1305 0046 3B1D     		adds	r3, r7, #4
 1306 0048 1A46     		mov	r2, r3
 1307 004a 1749     		ldr	r1, .L80+32
 1308 004c 0020     		movs	r0, #0
 1309 004e FFF7FEFF 		bl	printNotif
 379:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Done extracing string AT+CREG?");
 1310              		.loc 1 379 0
 1311 0052 1649     		ldr	r1, .L80+36
 1312 0054 0020     		movs	r0, #0
 1313 0056 FFF7FEFF 		bl	printNotif
 380:modem.c       ****     
 381:modem.c       ****         // Search creg for "0,1" or "0,5", if either exists and either is not equal to NULL, return
 382:modem.c       ****         if((strstr(creg,"0,1")!=NULL)||(strstr(creg,"0,5")!=NULL)){
 1314              		.loc 1 382 0
 1315 005a 3B1D     		adds	r3, r7, #4
 1316 005c 1449     		ldr	r1, .L80+40
 1317 005e 1846     		mov	r0, r3
 1318 0060 FFF7FEFF 		bl	strstr
 1319 0064 0346     		mov	r3, r0
 1320 0066 002B     		cmp	r3, #0
 1321 0068 07D1     		bne	.L77
 1322              		.loc 1 382 0 is_stmt 0 discriminator 1
 1323 006a 3B1D     		adds	r3, r7, #4
 1324 006c 1149     		ldr	r1, .L80+44
 1325 006e 1846     		mov	r0, r3
 1326 0070 FFF7FEFF 		bl	strstr
 1327 0074 0346     		mov	r3, r0
 1328 0076 002B     		cmp	r3, #0
 1329 0078 01D0     		beq	.L76
 1330              	.L77:
 383:modem.c       ****             return 1u;
 1331              		.loc 1 383 0 is_stmt 1
 1332 007a 0123     		movs	r3, #1
 1333 007c 00E0     		b	.L79
 1334              	.L76:
 1335              	.LBE8:
 384:modem.c       ****         }
 385:modem.c       ****     }
 386:modem.c       ****     // If the modem doesn't have a status, return 0u
 387:modem.c       ****     return 0u;
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 33


 1336              		.loc 1 387 0
 1337 007e 0023     		movs	r3, #0
 1338              	.L79:
 388:modem.c       ****         
 389:modem.c       **** }
 1339              		.loc 1 389 0
 1340 0080 1846     		mov	r0, r3
 1341 0082 1037     		adds	r7, r7, #16
 1342              		.cfi_def_cfa_offset 8
 1343 0084 BD46     		mov	sp, r7
 1344              		.cfi_def_cfa_register 13
 1345              		@ sp needed
 1346 0086 80BD     		pop	{r7, pc}
 1347              	.L81:
 1348              		.align	2
 1349              	.L80:
 1350 0088 30020000 		.word	.LC17
 1351 008c 00000000 		.word	.LC0
 1352 0090 44020000 		.word	.LC18
 1353 0094 50020000 		.word	.LC19
 1354 0098 00000000 		.word	uart_received_string
 1355 009c 6C020000 		.word	.LC20
 1356 00a0 88020000 		.word	.LC21
 1357 00a4 8C020000 		.word	.LC22
 1358 00a8 90020000 		.word	.LC23
 1359 00ac B0020000 		.word	.LC24
 1360 00b0 D0020000 		.word	.LC25
 1361 00b4 D4020000 		.word	.LC26
 1362              		.cfi_endproc
 1363              	.LFE76:
 1364              		.size	is_connected_to_cell_network, .-is_connected_to_cell_network
 1365              		.section	.rodata
 1366              		.align	2
 1367              	.LC27:
 1368 02d8 41542353 		.ascii	"AT#SGACT=1,1\015\012\000"
 1368      47414354 
 1368      3D312C31 
 1368      0D0A00
 1369              		.section	.text.set_up_internet_connection,"ax",%progbits
 1370              		.align	2
 1371              		.global	set_up_internet_connection
 1372              		.thumb
 1373              		.thumb_func
 1374              		.type	set_up_internet_connection, %function
 1375              	set_up_internet_connection:
 1376              	.LFB77:
 390:modem.c       **** 
 391:modem.c       **** // Connect the modem to the internet
 392:modem.c       **** void set_up_internet_connection(){
 1377              		.loc 1 392 0
 1378              		.cfi_startproc
 1379              		@ args = 0, pretend = 0, frame = 0
 1380              		@ frame_needed = 1, uses_anonymous_args = 0
 1381 0000 80B5     		push	{r7, lr}
 1382              		.cfi_def_cfa_offset 8
 1383              		.cfi_offset 7, -8
 1384              		.cfi_offset 14, -4
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 34


 1385 0002 00AF     		add	r7, sp, #0
 1386              		.cfi_def_cfa_register 7
 393:modem.c       ****     
 394:modem.c       ****     //port 3
 395:modem.c       ****    //<connId>,<srMode>,<dataMode>, 
 396:modem.c       ****     //at_write_command("AT#SCFGEXT=1,1,0,0,0,0\r", "OK",DEFAULT_AT_TIMEOUT);////LTE modem relevant
 397:modem.c       ****     
 398:modem.c       ****     //<connId>,<cid>,<pktSz>,<maxTo>,<connTo>,<txTo>
 399:modem.c       ****     //at_write_command("AT#SCFG=1,3,300,90,600,50\r", "OK",DEFAULT_AT_TIMEOUT); //LTE modem relevan
 400:modem.c       ****     // <cid>,<stat>
 401:modem.c       ****    
 402:modem.c       ****     // AT command SGACT is Context Activation command is used to activate the specified PDP context
 403:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",1000u);
 1387              		.loc 1 403 0
 1388 0004 4FF47A72 		mov	r2, #1000
 1389 0008 0249     		ldr	r1, .L83
 1390 000a 0348     		ldr	r0, .L83+4
 1391 000c FFF7FEFF 		bl	at_write_command
 404:modem.c       ****     
 405:modem.c       **** }
 1392              		.loc 1 405 0
 1393 0010 00BF     		nop
 1394 0012 80BD     		pop	{r7, pc}
 1395              	.L84:
 1396              		.align	2
 1397              	.L83:
 1398 0014 00000000 		.word	.LC0
 1399 0018 D8020000 		.word	.LC27
 1400              		.cfi_endproc
 1401              	.LFE77:
 1402              		.size	set_up_internet_connection, .-set_up_internet_connection
 1403              		.section	.rodata
 1404 02e7 00       		.align	2
 1405              	.LC28:
 1406 02e8 312C3100 		.ascii	"1,1\000"
 1407              		.align	2
 1408              	.LC29:
 1409 02ec 41542353 		.ascii	"AT#SGACT?\015\000"
 1409      47414354 
 1409      3F0D00
 1410              		.section	.text.is_connected_to_internet,"ax",%progbits
 1411              		.align	2
 1412              		.global	is_connected_to_internet
 1413              		.thumb
 1414              		.thumb_func
 1415              		.type	is_connected_to_internet, %function
 1416              	is_connected_to_internet:
 1417              	.LFB78:
 406:modem.c       **** 
 407:modem.c       **** // Checks if the modem is connected to the internet
 408:modem.c       **** uint8 is_connected_to_internet(){
 1418              		.loc 1 408 0
 1419              		.cfi_startproc
 1420              		@ args = 0, pretend = 0, frame = 0
 1421              		@ frame_needed = 1, uses_anonymous_args = 0
 1422 0000 80B5     		push	{r7, lr}
 1423              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 35


 1424              		.cfi_offset 7, -8
 1425              		.cfi_offset 14, -4
 1426 0002 00AF     		add	r7, sp, #0
 1427              		.cfi_def_cfa_register 7
 409:modem.c       ****     // AT command SGACT? reports the range for the parameters <cid> and <stat>
 410:modem.c       ****     // cid: is the Packet Data Protocol (PDP) Context Identifier which specifies the particular PDP
 411:modem.c       ****     // stat: gives the context staus (0 deactivated and 1 activated)
 412:modem.c       ****     // Check for 3,1 if Verizon 
 413:modem.c       ****     if(at_write_command("AT#SGACT?\r", "1,1",DEFAULT_AT_TIMEOUT)){
 1428              		.loc 1 413 0
 1429 0004 4FF4FA62 		mov	r2, #2000
 1430 0008 0549     		ldr	r1, .L88
 1431 000a 0648     		ldr	r0, .L88+4
 1432 000c FFF7FEFF 		bl	at_write_command
 1433 0010 0346     		mov	r3, r0
 1434 0012 002B     		cmp	r3, #0
 1435 0014 01D0     		beq	.L86
 414:modem.c       ****         return 1u;
 1436              		.loc 1 414 0
 1437 0016 0123     		movs	r3, #1
 1438 0018 00E0     		b	.L87
 1439              	.L86:
 415:modem.c       ****     }
 416:modem.c       ****     return 0u;  
 1440              		.loc 1 416 0
 1441 001a 0023     		movs	r3, #0
 1442              	.L87:
 417:modem.c       **** }
 1443              		.loc 1 417 0
 1444 001c 1846     		mov	r0, r3
 1445 001e 80BD     		pop	{r7, pc}
 1446              	.L89:
 1447              		.align	2
 1448              	.L88:
 1449 0020 E8020000 		.word	.LC28
 1450 0024 EC020000 		.word	.LC29
 1451              		.cfi_endproc
 1452              	.LFE78:
 1453              		.size	is_connected_to_internet, .-is_connected_to_internet
 1454              		.section	.rodata
 1455 02f7 00       		.align	2
 1456              	.LC30:
 1457 02f8 41542B43 		.ascii	"AT+CESQ\015\000"
 1457      4553510D 
 1457      00
 1458 0301 000000   		.align	2
 1459              	.LC31:
 1460 0304 0D0A2B43 		.ascii	"\015\012+CESQ: %d,%d,%d,%d,%d,%d%*s\000"
 1460      4553513A 
 1460      2025642C 
 1460      25642C25 
 1460      642C2564 
 1461              		.section	.text.get_cell_network_stats,"ax",%progbits
 1462              		.align	2
 1463              		.global	get_cell_network_stats
 1464              		.thumb
 1465              		.thumb_func
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 36


 1466              		.type	get_cell_network_stats, %function
 1467              	get_cell_network_stats:
 1468              	.LFB79:
 418:modem.c       **** 
 419:modem.c       **** void get_cell_network_stats(){
 1469              		.loc 1 419 0
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 8
 1472              		@ frame_needed = 1, uses_anonymous_args = 0
 1473 0000 80B5     		push	{r7, lr}
 1474              		.cfi_def_cfa_offset 8
 1475              		.cfi_offset 7, -8
 1476              		.cfi_offset 14, -4
 1477 0002 86B0     		sub	sp, sp, #24
 1478              		.cfi_def_cfa_offset 32
 1479 0004 04AF     		add	r7, sp, #16
 1480              		.cfi_def_cfa 7, 16
 420:modem.c       ****     // Initialize values
 421:modem.c       ****     modem_stats.ber = 255;
 1481              		.loc 1 421 0
 1482 0006 154B     		ldr	r3, .L91
 1483 0008 FF22     		movs	r2, #255
 1484 000a 5A60     		str	r2, [r3, #4]
 422:modem.c       ****     modem_stats.ecno = 255;
 1485              		.loc 1 422 0
 1486 000c 134B     		ldr	r3, .L91
 1487 000e FF22     		movs	r2, #255
 1488 0010 DA60     		str	r2, [r3, #12]
 423:modem.c       ****     modem_stats.rscp = 255;
 1489              		.loc 1 423 0
 1490 0012 124B     		ldr	r3, .L91
 1491 0014 FF22     		movs	r2, #255
 1492 0016 9A60     		str	r2, [r3, #8]
 424:modem.c       ****     modem_stats.rsrp = 255;
 1493              		.loc 1 424 0
 1494 0018 104B     		ldr	r3, .L91
 1495 001a FF22     		movs	r2, #255
 1496 001c 5A61     		str	r2, [r3, #20]
 425:modem.c       ****     modem_stats.rsrq = 255;
 1497              		.loc 1 425 0
 1498 001e 0F4B     		ldr	r3, .L91
 1499 0020 FF22     		movs	r2, #255
 1500 0022 1A61     		str	r2, [r3, #16]
 426:modem.c       ****     modem_stats.rxlev = 255;
 1501              		.loc 1 426 0
 1502 0024 0D4B     		ldr	r3, .L91
 1503 0026 FF22     		movs	r2, #255
 1504 0028 1A60     		str	r2, [r3]
 427:modem.c       **** 
 428:modem.c       ****     //for(uint8 attempts =0; attempts <10; attempts++){
 429:modem.c       ****     at_write_command("AT+CESQ\r", "OK", DEFAULT_AT_TIMEOUT);
 1505              		.loc 1 429 0
 1506 002a 4FF4FA62 		mov	r2, #2000
 1507 002e 0C49     		ldr	r1, .L91+4
 1508 0030 0C48     		ldr	r0, .L91+8
 1509 0032 FFF7FEFF 		bl	at_write_command
 430:modem.c       ****     //CESQ: <rxlev>,<ber>,<rscp>,<ecno>,<rsrq>,<rsrp>
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 37


 431:modem.c       **** 
 432:modem.c       ****     int match = sscanf(uart_received_string,"\r\n+CESQ: %d,%d,%d,%d,%d,%d%*s",
 1510              		.loc 1 432 0
 1511 0036 0C4B     		ldr	r3, .L91+12
 1512 0038 0393     		str	r3, [sp, #12]
 1513 003a 0C4B     		ldr	r3, .L91+16
 1514 003c 0293     		str	r3, [sp, #8]
 1515 003e 0C4B     		ldr	r3, .L91+20
 1516 0040 0193     		str	r3, [sp, #4]
 1517 0042 0C4B     		ldr	r3, .L91+24
 1518 0044 0093     		str	r3, [sp]
 1519 0046 0C4B     		ldr	r3, .L91+28
 1520 0048 044A     		ldr	r2, .L91
 1521 004a 0C49     		ldr	r1, .L91+32
 1522 004c 0C48     		ldr	r0, .L91+36
 1523 004e FFF7FEFF 		bl	sscanf
 1524 0052 7860     		str	r0, [r7, #4]
 433:modem.c       ****         &modem_stats.rxlev,
 434:modem.c       ****         &modem_stats.ber,
 435:modem.c       ****         &modem_stats.rscp,
 436:modem.c       ****         &modem_stats.ecno,
 437:modem.c       ****         &modem_stats.rsrq,
 438:modem.c       ****         &modem_stats.rsrp);
 439:modem.c       **** 
 440:modem.c       ****         //check to see if we’re getting a good received signal strength
 441:modem.c       ****         //if(modem_stats.rsrp != 255 && modem_stats.rsrp > 26){// || modem_stats.rxlev !=0){
 442:modem.c       ****         //    break;
 443:modem.c       ****         //}
 444:modem.c       ****         // Delay one second
 445:modem.c       ****         //CyDelay(1000u);
 446:modem.c       ****     //}
 447:modem.c       **** }
 1525              		.loc 1 447 0
 1526 0054 00BF     		nop
 1527 0056 0837     		adds	r7, r7, #8
 1528              		.cfi_def_cfa_offset 8
 1529 0058 BD46     		mov	sp, r7
 1530              		.cfi_def_cfa_register 13
 1531              		@ sp needed
 1532 005a 80BD     		pop	{r7, pc}
 1533              	.L92:
 1534              		.align	2
 1535              	.L91:
 1536 005c 00000000 		.word	modem_stats
 1537 0060 00000000 		.word	.LC0
 1538 0064 F8020000 		.word	.LC30
 1539 0068 14000000 		.word	modem_stats+20
 1540 006c 10000000 		.word	modem_stats+16
 1541 0070 0C000000 		.word	modem_stats+12
 1542 0074 08000000 		.word	modem_stats+8
 1543 0078 04000000 		.word	modem_stats+4
 1544 007c 04030000 		.word	.LC31
 1545 0080 00000000 		.word	uart_received_string
 1546              		.cfi_endproc
 1547              	.LFE79:
 1548              		.size	get_cell_network_stats, .-get_cell_network_stats
 1549              		.section	.text.updatable_parameters_initialize,"ax",%progbits
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 38


 1550              		.align	2
 1551              		.global	updatable_parameters_initialize
 1552              		.thumb
 1553              		.thumb_func
 1554              		.type	updatable_parameters_initialize, %function
 1555              	updatable_parameters_initialize:
 1556              	.LFB80:
 448:modem.c       **** 
 449:modem.c       **** // Initialize updatable parameters (sampling, reporting, and debug frequencies)
 450:modem.c       **** void updatable_parameters_initialize(){
 1557              		.loc 1 450 0
 1558              		.cfi_startproc
 1559              		@ args = 0, pretend = 0, frame = 0
 1560              		@ frame_needed = 1, uses_anonymous_args = 0
 1561              		@ link register save eliminated.
 1562 0000 80B4     		push	{r7}
 1563              		.cfi_def_cfa_offset 4
 1564              		.cfi_offset 7, -4
 1565 0002 00AF     		add	r7, sp, #0
 1566              		.cfi_def_cfa_register 7
 451:modem.c       ****     updatable_parameters.node_type = NODE_TYPE_DEPTH;
 1567              		.loc 1 451 0
 1568 0004 0A4B     		ldr	r3, .L94
 1569 0006 0022     		movs	r2, #0
 1570 0008 1A70     		strb	r2, [r3]
 452:modem.c       ****     updatable_parameters.sim_type = SIM_TYPE_STANDARD;
 1571              		.loc 1 452 0
 1572 000a 094B     		ldr	r3, .L94
 1573 000c 0022     		movs	r2, #0
 1574 000e 5A70     		strb	r2, [r3, #1]
 453:modem.c       ****     updatable_parameters.measure_time = 10u;
 1575              		.loc 1 453 0
 1576 0010 074B     		ldr	r3, .L94
 1577 0012 0A22     		movs	r2, #10
 1578 0014 9A70     		strb	r2, [r3, #2]
 454:modem.c       ****     updatable_parameters.sync_time = 60u;
 1579              		.loc 1 454 0
 1580 0016 064B     		ldr	r3, .L94
 1581 0018 3C22     		movs	r2, #60
 1582 001a DA70     		strb	r2, [r3, #3]
 455:modem.c       ****     updatable_parameters.debug_level = 1u;
 1583              		.loc 1 455 0
 1584 001c 044B     		ldr	r3, .L94
 1585 001e 0122     		movs	r2, #1
 1586 0020 1A71     		strb	r2, [r3, #4]
 456:modem.c       ****     updatable_parameters.gps = GPS_STOP;
 1587              		.loc 1 456 0
 1588 0022 034B     		ldr	r3, .L94
 1589 0024 0022     		movs	r2, #0
 1590 0026 5A71     		strb	r2, [r3, #5]
 457:modem.c       **** }
 1591              		.loc 1 457 0
 1592 0028 00BF     		nop
 1593 002a BD46     		mov	sp, r7
 1594              		.cfi_def_cfa_register 13
 1595              		@ sp needed
 1596 002c 80BC     		pop	{r7}
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 39


 1597              		.cfi_restore 7
 1598              		.cfi_def_cfa_offset 0
 1599 002e 7047     		bx	lr
 1600              	.L95:
 1601              		.align	2
 1602              	.L94:
 1603 0030 00000000 		.word	updatable_parameters
 1604              		.cfi_endproc
 1605              	.LFE80:
 1606              		.size	updatable_parameters_initialize, .-updatable_parameters_initialize
 1607              		.section	.rodata
 1608 0322 0000     		.align	2
 1609              	.LC32:
 1610 0324 4E6F6465 		.ascii	"Node_Type: \000"
 1610      5F547970 
 1610      653A2000 
 1611              		.align	2
 1612              	.LC33:
 1613 0330 53494D5F 		.ascii	"SIM_Type: \000"
 1613      54797065 
 1613      3A2000
 1614 033b 00       		.align	2
 1615              	.LC34:
 1616 033c 53616D70 		.ascii	"Sample_Freq: \000"
 1616      6C655F46 
 1616      7265713A 
 1616      2000
 1617 034a 0000     		.align	2
 1618              	.LC35:
 1619 034c 5265706F 		.ascii	"Report_Freq: \000"
 1619      72745F46 
 1619      7265713A 
 1619      2000
 1620 035a 0000     		.align	2
 1621              	.LC36:
 1622 035c 44656275 		.ascii	"Debug_Freq: \000"
 1622      675F4672 
 1622      65713A20 
 1622      00
 1623 0369 000000   		.align	2
 1624              	.LC37:
 1625 036c 6770733A 		.ascii	"gps: \000"
 1625      2000
 1626 0372 0000     		.align	2
 1627              	.LC38:
 1628 0374 256400   		.ascii	"%d\000"
 1629 0377 00       		.align	2
 1630              	.LC39:
 1631 0378 4E6F6465 		.ascii	"Node type changed to: %d\015\012\000"
 1631      20747970 
 1631      65206368 
 1631      616E6765 
 1631      6420746F 
 1632 0393 00       		.align	2
 1633              	.LC40:
 1634 0394 436F756C 		.ascii	"Could not change node type.\000"
 1634      64206E6F 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 40


 1634      74206368 
 1634      616E6765 
 1634      206E6F64 
 1635              		.align	2
 1636              	.LC41:
 1637 03b0 53494D20 		.ascii	"SIM type changed to: %d\015\012\000"
 1637      74797065 
 1637      20636861 
 1637      6E676564 
 1637      20746F3A 
 1638 03ca 0000     		.align	2
 1639              	.LC42:
 1640 03cc 436F756C 		.ascii	"Could not change SIM type.\000"
 1640      64206E6F 
 1640      74206368 
 1640      616E6765 
 1640      2053494D 
 1641 03e7 00       		.align	2
 1642              	.LC43:
 1643 03e8 53616D70 		.ascii	"Sampling frequency changed to: %d\015\012\000"
 1643      6C696E67 
 1643      20667265 
 1643      7175656E 
 1643      63792063 
 1644              		.align	2
 1645              	.LC44:
 1646 040c 436F756C 		.ascii	"Could not parse new sampling frequency value.\000"
 1646      64206E6F 
 1646      74207061 
 1646      72736520 
 1646      6E657720 
 1647 043a 0000     		.align	2
 1648              	.LC45:
 1649 043c 5265706F 		.ascii	"Reporting frequency changed to: %d\015\012\000"
 1649      7274696E 
 1649      67206672 
 1649      65717565 
 1649      6E637920 
 1650 0461 000000   		.align	2
 1651              	.LC46:
 1652 0464 436F756C 		.ascii	"Could not parse new reporting frequency value.\000"
 1652      64206E6F 
 1652      74207061 
 1652      72736520 
 1652      6E657720 
 1653 0493 00       		.align	2
 1654              	.LC47:
 1655 0494 47505320 		.ascii	"GPS bit changed to: %d\015\012\000"
 1655      62697420 
 1655      6368616E 
 1655      67656420 
 1655      746F3A20 
 1656 04ad 000000   		.align	2
 1657              	.LC48:
 1658 04b0 436F756C 		.ascii	"Could not parse new GPS check bit value.\000"
 1658      64206E6F 
 1658      74207061 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 41


 1658      72736520 
 1658      6E657720 
 1659 04d9 000000   		.align	2
 1660              	.LC49:
 1661 04dc 44656275 		.ascii	"Debug printing frequency changed to: %d\015\012\000"
 1661      67207072 
 1661      696E7469 
 1661      6E672066 
 1661      72657175 
 1662 0506 0000     		.align	2
 1663              	.LC50:
 1664 0508 436F756C 		.ascii	"Could not parse new debugging frequency value.\000"
 1664      64206E6F 
 1664      74207061 
 1664      72736520 
 1664      6E657720 
 1665              		.section	.text.get_updated_parameters_from_malcom,"ax",%progbits
 1666              		.align	2
 1667              		.global	get_updated_parameters_from_malcom
 1668              		.thumb
 1669              		.thumb_func
 1670              		.type	get_updated_parameters_from_malcom, %function
 1671              	get_updated_parameters_from_malcom:
 1672              	.LFB81:
 458:modem.c       **** 
 459:modem.c       **** // Get the update values for sampling frequency, reporting frequency, and the debug level from the 
 460:modem.c       **** void get_updated_parameters_from_malcom(){
 1673              		.loc 1 460 0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 104
 1676              		@ frame_needed = 1, uses_anonymous_args = 0
 1677 0000 90B5     		push	{r4, r7, lr}
 1678              		.cfi_def_cfa_offset 12
 1679              		.cfi_offset 4, -12
 1680              		.cfi_offset 7, -8
 1681              		.cfi_offset 14, -4
 1682 0002 9BB0     		sub	sp, sp, #108
 1683              		.cfi_def_cfa_offset 120
 1684 0004 00AF     		add	r7, sp, #0
 1685              		.cfi_def_cfa_register 7
 461:modem.c       ****     
 462:modem.c       ****     // Create character array of size 1024 characters to hold the uart received string
 463:modem.c       ****     char s_node_type[10];
 464:modem.c       ****     char s_sim_type[10];
 465:modem.c       ****     char s_sample_freq[10];
 466:modem.c       ****     char s_report_freq[10];
 467:modem.c       ****     char s_debug_freq[10];
 468:modem.c       ****     char s_gps[10];
 469:modem.c       ****     
 470:modem.c       ****     s_node_type[0] = '\0';
 1686              		.loc 1 470 0
 1687 0006 0023     		movs	r3, #0
 1688 0008 87F85C30 		strb	r3, [r7, #92]
 471:modem.c       ****     s_sim_type[0] = '\0';
 1689              		.loc 1 471 0
 1690 000c 0023     		movs	r3, #0
 1691 000e 87F85030 		strb	r3, [r7, #80]
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 42


 472:modem.c       ****     s_sample_freq[0] = '\0';
 1692              		.loc 1 472 0
 1693 0012 0023     		movs	r3, #0
 1694 0014 87F84430 		strb	r3, [r7, #68]
 473:modem.c       ****     s_report_freq[0] = '\0';
 1695              		.loc 1 473 0
 1696 0018 0023     		movs	r3, #0
 1697 001a 87F83830 		strb	r3, [r7, #56]
 474:modem.c       ****     s_debug_freq[0] = '\0';
 1698              		.loc 1 474 0
 1699 001e 0023     		movs	r3, #0
 1700 0020 87F82C30 		strb	r3, [r7, #44]
 475:modem.c       ****     s_gps[0] = '\0';
 1701              		.loc 1 475 0
 1702 0024 0023     		movs	r3, #0
 1703 0026 87F82030 		strb	r3, [r7, #32]
 476:modem.c       ****     
 477:modem.c       ****     // Extract UART string recieved from the modem and save to variables
 478:modem.c       ****     extract_string(uart_received_string,"Node_Type: ","\r",s_node_type);
 1704              		.loc 1 478 0
 1705 002a 07F15C03 		add	r3, r7, #92
 1706 002e 734A     		ldr	r2, .L110
 1707 0030 7349     		ldr	r1, .L110+4
 1708 0032 7448     		ldr	r0, .L110+8
 1709 0034 FFF7FEFF 		bl	extract_string
 479:modem.c       ****     extract_string(uart_received_string,"SIM_Type: ","\r",s_sim_type);
 1710              		.loc 1 479 0
 1711 0038 07F15003 		add	r3, r7, #80
 1712 003c 6F4A     		ldr	r2, .L110
 1713 003e 7249     		ldr	r1, .L110+12
 1714 0040 7048     		ldr	r0, .L110+8
 1715 0042 FFF7FEFF 		bl	extract_string
 480:modem.c       ****     extract_string(uart_received_string,"Sample_Freq: ","\r",s_sample_freq);
 1716              		.loc 1 480 0
 1717 0046 07F14403 		add	r3, r7, #68
 1718 004a 6C4A     		ldr	r2, .L110
 1719 004c 6F49     		ldr	r1, .L110+16
 1720 004e 6D48     		ldr	r0, .L110+8
 1721 0050 FFF7FEFF 		bl	extract_string
 481:modem.c       ****     extract_string(uart_received_string,"Report_Freq: ","\r",s_report_freq);
 1722              		.loc 1 481 0
 1723 0054 07F13803 		add	r3, r7, #56
 1724 0058 684A     		ldr	r2, .L110
 1725 005a 6D49     		ldr	r1, .L110+20
 1726 005c 6948     		ldr	r0, .L110+8
 1727 005e FFF7FEFF 		bl	extract_string
 482:modem.c       ****     extract_string(uart_received_string,"Debug_Freq: ","\r",s_debug_freq);
 1728              		.loc 1 482 0
 1729 0062 07F12C03 		add	r3, r7, #44
 1730 0066 654A     		ldr	r2, .L110
 1731 0068 6A49     		ldr	r1, .L110+24
 1732 006a 6648     		ldr	r0, .L110+8
 1733 006c FFF7FEFF 		bl	extract_string
 483:modem.c       ****     extract_string(uart_received_string,"gps: ","\r",s_gps);
 1734              		.loc 1 483 0
 1735 0070 07F12003 		add	r3, r7, #32
 1736 0074 614A     		ldr	r2, .L110
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 43


 1737 0076 6849     		ldr	r1, .L110+28
 1738 0078 6248     		ldr	r0, .L110+8
 1739 007a FFF7FEFF 		bl	extract_string
 484:modem.c       ****     
 485:modem.c       ****     // Create variables for what is sent back from the server
 486:modem.c       ****     int node_type, sim_type, sample_freq, report_freq, debug_freq, gps_check;
 487:modem.c       ****     
 488:modem.c       ****     // Scan character arrays and save values 
 489:modem.c       ****     if(sscanf(s_node_type, "%d", &node_type)==1){
 1740              		.loc 1 489 0
 1741 007e 07F11C02 		add	r2, r7, #28
 1742 0082 07F15C03 		add	r3, r7, #92
 1743 0086 6549     		ldr	r1, .L110+32
 1744 0088 1846     		mov	r0, r3
 1745 008a FFF7FEFF 		bl	sscanf
 1746 008e 0346     		mov	r3, r0
 1747 0090 012B     		cmp	r3, #1
 1748 0092 0AD1     		bne	.L97
 490:modem.c       ****         updatable_parameters.node_type = node_type;
 1749              		.loc 1 490 0
 1750 0094 FB69     		ldr	r3, [r7, #28]
 1751 0096 DAB2     		uxtb	r2, r3
 1752 0098 614B     		ldr	r3, .L110+36
 1753 009a 1A70     		strb	r2, [r3]
 491:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Node type changed to: %d\r\n", node_type);
 1754              		.loc 1 491 0
 1755 009c FB69     		ldr	r3, [r7, #28]
 1756 009e 1A46     		mov	r2, r3
 1757 00a0 6049     		ldr	r1, .L110+40
 1758 00a2 0020     		movs	r0, #0
 1759 00a4 FFF7FEFF 		bl	printNotif
 1760 00a8 03E0     		b	.L98
 1761              	.L97:
 492:modem.c       ****     }else{
 493:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not change node type.");
 1762              		.loc 1 493 0
 1763 00aa 5F49     		ldr	r1, .L110+44
 1764 00ac 0220     		movs	r0, #2
 1765 00ae FFF7FEFF 		bl	printNotif
 1766              	.L98:
 494:modem.c       ****     }
 495:modem.c       ****     if(sscanf(s_sim_type, "%d", &sim_type)==1){
 1767              		.loc 1 495 0
 1768 00b2 07F11802 		add	r2, r7, #24
 1769 00b6 07F15003 		add	r3, r7, #80
 1770 00ba 5849     		ldr	r1, .L110+32
 1771 00bc 1846     		mov	r0, r3
 1772 00be FFF7FEFF 		bl	sscanf
 1773 00c2 0346     		mov	r3, r0
 1774 00c4 012B     		cmp	r3, #1
 1775 00c6 0ED1     		bne	.L99
 496:modem.c       ****         updatable_parameters.sim_type = sim_type;
 1776              		.loc 1 496 0
 1777 00c8 BB69     		ldr	r3, [r7, #24]
 1778 00ca 002B     		cmp	r3, #0
 1779 00cc 14BF     		ite	ne
 1780 00ce 0123     		movne	r3, #1
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 44


 1781 00d0 0023     		moveq	r3, #0
 1782 00d2 DAB2     		uxtb	r2, r3
 1783 00d4 524B     		ldr	r3, .L110+36
 1784 00d6 5A70     		strb	r2, [r3, #1]
 497:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "SIM type changed to: %d\r\n", sim_type);
 1785              		.loc 1 497 0
 1786 00d8 BB69     		ldr	r3, [r7, #24]
 1787 00da 1A46     		mov	r2, r3
 1788 00dc 5349     		ldr	r1, .L110+48
 1789 00de 0020     		movs	r0, #0
 1790 00e0 FFF7FEFF 		bl	printNotif
 1791 00e4 03E0     		b	.L100
 1792              	.L99:
 498:modem.c       ****     }else{
 499:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not change SIM type.");
 1793              		.loc 1 499 0
 1794 00e6 5249     		ldr	r1, .L110+52
 1795 00e8 0220     		movs	r0, #2
 1796 00ea FFF7FEFF 		bl	printNotif
 1797              	.L100:
 500:modem.c       ****     }
 501:modem.c       ****     if(sscanf(s_sample_freq, "%d", &sample_freq)==1){
 1798              		.loc 1 501 0
 1799 00ee 07F11402 		add	r2, r7, #20
 1800 00f2 07F14403 		add	r3, r7, #68
 1801 00f6 4949     		ldr	r1, .L110+32
 1802 00f8 1846     		mov	r0, r3
 1803 00fa FFF7FEFF 		bl	sscanf
 1804 00fe 0346     		mov	r3, r0
 1805 0100 012B     		cmp	r3, #1
 1806 0102 19D1     		bne	.L101
 502:modem.c       ****         updatable_parameters.measure_time = sample_freq;
 1807              		.loc 1 502 0
 1808 0104 7B69     		ldr	r3, [r7, #20]
 1809 0106 DAB2     		uxtb	r2, r3
 1810 0108 454B     		ldr	r3, .L110+36
 1811 010a 9A70     		strb	r2, [r3, #2]
 503:modem.c       ****         // Create a continuous alarm called alarmMeasure that triggers at the required time to take
 504:modem.c       ****         alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_C
 1812              		.loc 1 504 0
 1813 010c 444B     		ldr	r3, .L110+36
 1814 010e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1815 0110 99B2     		uxth	r1, r3
 1816 0112 484C     		ldr	r4, .L110+56
 1817 0114 3846     		mov	r0, r7
 1818 0116 0723     		movs	r3, #7
 1819 0118 0122     		movs	r2, #1
 1820 011a FFF7FEFF 		bl	CreateAlarm
 1821 011e 2246     		mov	r2, r4
 1822 0120 3B46     		mov	r3, r7
 1823 0122 1968     		ldr	r1, [r3]	@ unaligned
 1824 0124 1160     		str	r1, [r2]	@ unaligned
 1825 0126 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 1826 0128 9380     		strh	r3, [r2, #4]	@ unaligned
 505:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Sampling frequency changed to: %d\r\n", sample_freq);
 1827              		.loc 1 505 0
 1828 012a 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 45


 1829 012c 1A46     		mov	r2, r3
 1830 012e 4249     		ldr	r1, .L110+60
 1831 0130 0020     		movs	r0, #0
 1832 0132 FFF7FEFF 		bl	printNotif
 1833 0136 03E0     		b	.L102
 1834              	.L101:
 506:modem.c       ****     }else{
 507:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new sampling frequency value.");
 1835              		.loc 1 507 0
 1836 0138 4049     		ldr	r1, .L110+64
 1837 013a 0220     		movs	r0, #2
 1838 013c FFF7FEFF 		bl	printNotif
 1839              	.L102:
 508:modem.c       ****     }
 509:modem.c       ****     if(sscanf(s_report_freq, "%d", &report_freq)==1){
 1840              		.loc 1 509 0
 1841 0140 07F11002 		add	r2, r7, #16
 1842 0144 07F13803 		add	r3, r7, #56
 1843 0148 3449     		ldr	r1, .L110+32
 1844 014a 1846     		mov	r0, r3
 1845 014c FFF7FEFF 		bl	sscanf
 1846 0150 0346     		mov	r3, r0
 1847 0152 012B     		cmp	r3, #1
 1848 0154 19D1     		bne	.L103
 510:modem.c       ****         updatable_parameters.sync_time = report_freq;
 1849              		.loc 1 510 0
 1850 0156 3B69     		ldr	r3, [r7, #16]
 1851 0158 DAB2     		uxtb	r2, r3
 1852 015a 314B     		ldr	r3, .L110+36
 1853 015c DA70     		strb	r2, [r3, #3]
 511:modem.c       ****         // Create a continuous alarm called alarmSync that triggers at the required time to sync th
 512:modem.c       ****         alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINU
 1854              		.loc 1 512 0
 1855 015e 304B     		ldr	r3, .L110+36
 1856 0160 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1857 0162 99B2     		uxth	r1, r3
 1858 0164 364C     		ldr	r4, .L110+68
 1859 0166 3846     		mov	r0, r7
 1860 0168 0723     		movs	r3, #7
 1861 016a 0122     		movs	r2, #1
 1862 016c FFF7FEFF 		bl	CreateAlarm
 1863 0170 2246     		mov	r2, r4
 1864 0172 3B46     		mov	r3, r7
 1865 0174 1968     		ldr	r1, [r3]	@ unaligned
 1866 0176 1160     		str	r1, [r2]	@ unaligned
 1867 0178 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 1868 017a 9380     		strh	r3, [r2, #4]	@ unaligned
 513:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Reporting frequency changed to: %d\r\n", report_freq);
 1869              		.loc 1 513 0
 1870 017c 3B69     		ldr	r3, [r7, #16]
 1871 017e 1A46     		mov	r2, r3
 1872 0180 3049     		ldr	r1, .L110+72
 1873 0182 0020     		movs	r0, #0
 1874 0184 FFF7FEFF 		bl	printNotif
 1875 0188 03E0     		b	.L104
 1876              	.L103:
 514:modem.c       ****     }else{
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 46


 515:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new reporting frequency value.");
 1877              		.loc 1 515 0
 1878 018a 2F49     		ldr	r1, .L110+76
 1879 018c 0220     		movs	r0, #2
 1880 018e FFF7FEFF 		bl	printNotif
 1881              	.L104:
 516:modem.c       ****     }
 517:modem.c       ****     if(sscanf(s_gps, "%d", &gps_check)==1){
 1882              		.loc 1 517 0
 1883 0192 07F10802 		add	r2, r7, #8
 1884 0196 07F12003 		add	r3, r7, #32
 1885 019a 2049     		ldr	r1, .L110+32
 1886 019c 1846     		mov	r0, r3
 1887 019e FFF7FEFF 		bl	sscanf
 1888 01a2 0346     		mov	r3, r0
 1889 01a4 012B     		cmp	r3, #1
 1890 01a6 0AD1     		bne	.L105
 518:modem.c       ****         updatable_parameters.gps = gps_check;
 1891              		.loc 1 518 0
 1892 01a8 BB68     		ldr	r3, [r7, #8]
 1893 01aa DAB2     		uxtb	r2, r3
 1894 01ac 1C4B     		ldr	r3, .L110+36
 1895 01ae 5A71     		strb	r2, [r3, #5]
 519:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "GPS bit changed to: %d\r\n", gps_check);
 1896              		.loc 1 519 0
 1897 01b0 BB68     		ldr	r3, [r7, #8]
 1898 01b2 1A46     		mov	r2, r3
 1899 01b4 2549     		ldr	r1, .L110+80
 1900 01b6 0020     		movs	r0, #0
 1901 01b8 FFF7FEFF 		bl	printNotif
 1902 01bc 03E0     		b	.L106
 1903              	.L105:
 520:modem.c       ****     }else{
 521:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new GPS check bit value.");
 1904              		.loc 1 521 0
 1905 01be 2449     		ldr	r1, .L110+84
 1906 01c0 0220     		movs	r0, #2
 1907 01c2 FFF7FEFF 		bl	printNotif
 1908              	.L106:
 522:modem.c       ****     }
 523:modem.c       ****     if(sscanf(s_debug_freq, "%d", &debug_freq)==1){
 1909              		.loc 1 523 0
 1910 01c6 07F10C02 		add	r2, r7, #12
 1911 01ca 07F12C03 		add	r3, r7, #44
 1912 01ce 1349     		ldr	r1, .L110+32
 1913 01d0 1846     		mov	r0, r3
 1914 01d2 FFF7FEFF 		bl	sscanf
 1915 01d6 0346     		mov	r3, r0
 1916 01d8 012B     		cmp	r3, #1
 1917 01da 06D1     		bne	.L107
 524:modem.c       ****         //updatable_parameters.debug_level = debug_freq;
 525:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Debug printing frequency changed to: %d\r\n", debug_freq);
 1918              		.loc 1 525 0
 1919 01dc FB68     		ldr	r3, [r7, #12]
 1920 01de 1A46     		mov	r2, r3
 1921 01e0 1C49     		ldr	r1, .L110+88
 1922 01e2 0020     		movs	r0, #0
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 47


 1923 01e4 FFF7FEFF 		bl	printNotif
 526:modem.c       ****     }else{
 527:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new debugging frequency value.");
 528:modem.c       ****     }
 529:modem.c       **** }
 1924              		.loc 1 529 0
 1925 01e8 03E0     		b	.L109
 1926              	.L107:
 527:modem.c       ****     }
 1927              		.loc 1 527 0
 1928 01ea 1B49     		ldr	r1, .L110+92
 1929 01ec 0220     		movs	r0, #2
 1930 01ee FFF7FEFF 		bl	printNotif
 1931              	.L109:
 1932              		.loc 1 529 0
 1933 01f2 00BF     		nop
 1934 01f4 6C37     		adds	r7, r7, #108
 1935              		.cfi_def_cfa_offset 12
 1936 01f6 BD46     		mov	sp, r7
 1937              		.cfi_def_cfa_register 13
 1938              		@ sp needed
 1939 01f8 90BD     		pop	{r4, r7, pc}
 1940              	.L111:
 1941 01fa 00BF     		.align	2
 1942              	.L110:
 1943 01fc 88020000 		.word	.LC21
 1944 0200 24030000 		.word	.LC32
 1945 0204 00000000 		.word	uart_received_string
 1946 0208 30030000 		.word	.LC33
 1947 020c 3C030000 		.word	.LC34
 1948 0210 4C030000 		.word	.LC35
 1949 0214 5C030000 		.word	.LC36
 1950 0218 6C030000 		.word	.LC37
 1951 021c 74030000 		.word	.LC38
 1952 0220 00000000 		.word	updatable_parameters
 1953 0224 78030000 		.word	.LC39
 1954 0228 94030000 		.word	.LC40
 1955 022c B0030000 		.word	.LC41
 1956 0230 CC030000 		.word	.LC42
 1957 0234 00000000 		.word	alarmMeasure
 1958 0238 E8030000 		.word	.LC43
 1959 023c 0C040000 		.word	.LC44
 1960 0240 00000000 		.word	alarmSync
 1961 0244 3C040000 		.word	.LC45
 1962 0248 64040000 		.word	.LC46
 1963 024c 94040000 		.word	.LC47
 1964 0250 B0040000 		.word	.LC48
 1965 0254 DC040000 		.word	.LC49
 1966 0258 08050000 		.word	.LC50
 1967              		.cfi_endproc
 1968              	.LFE81:
 1969              		.size	get_updated_parameters_from_malcom, .-get_updated_parameters_from_malcom
 1970              		.section	.rodata
 1971 0537 00       		.align	2
 1972              	.LC51:
 1973 0538 41542343 		.ascii	"AT#CGMM\015\000"
 1973      474D4D0D 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 48


 1973      00
 1974 0541 000000   		.align	2
 1975              	.LC52:
 1976 0544 4D6F6465 		.ascii	"Modem Model: %s\000"
 1976      6D204D6F 
 1976      64656C3A 
 1976      20257300 
 1977              		.align	2
 1978              	.LC53:
 1979 0554 41542343 		.ascii	"AT#CCID\015\000"
 1979      4349440D 
 1979      00
 1980 055d 000000   		.align	2
 1981              	.LC54:
 1982 0560 53494D20 		.ascii	"SIM ID: %s\000"
 1982      49443A20 
 1982      257300
 1983 056b 00       		.align	2
 1984              	.LC55:
 1985 056c 41542B43 		.ascii	"AT+CGSN\015\000"
 1985      47534E0D 
 1985      00
 1986 0575 000000   		.align	2
 1987              	.LC56:
 1988 0578 494D4549 		.ascii	"IMEI: %s\000"
 1988      3A202573 
 1988      00
 1989 0581 000000   		.align	2
 1990              	.LC57:
 1991 0584 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\015\012"
 1991      4744434F 
 1991      4E543D31 
 1991      2C224950 
 1991      222C2277 
 1992 05ad 00       		.ascii	"\000"
 1993 05ae 0000     		.align	2
 1994              	.LC58:
 1995 05b0 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"super\"\015\012\000"
 1995      4744434F 
 1995      4E543D31 
 1995      2C224950 
 1995      222C2273 
 1996              		.align	2
 1997              	.LC59:
 1998 05cc 41542B43 		.ascii	"AT+CFUN?\015\000"
 1998      46554E3F 
 1998      0D00
 1999 05d6 0000     		.align	2
 2000              	.LC60:
 2001 05d8 4346554E 		.ascii	"CFUN: %s\000"
 2001      3A202573 
 2001      00
 2002 05e1 000000   		.align	2
 2003              	.LC61:
 2004 05e4 41542B43 		.ascii	"AT+CFUN=1\015\000"
 2004      46554E3D 
 2004      310D00
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 49


 2005              		.section	.text.modem_configure_settings,"ax",%progbits
 2006              		.align	2
 2007              		.global	modem_configure_settings
 2008              		.thumb
 2009              		.thumb_func
 2010              		.type	modem_configure_settings, %function
 2011              	modem_configure_settings:
 2012              	.LFB82:
 530:modem.c       ****     
 531:modem.c       **** // Configure the modem settings
 532:modem.c       **** void modem_configure_settings(){
 2013              		.loc 1 532 0
 2014              		.cfi_startproc
 2015              		@ args = 0, pretend = 0, frame = 16
 2016              		@ frame_needed = 1, uses_anonymous_args = 0
 2017 0000 80B5     		push	{r7, lr}
 2018              		.cfi_def_cfa_offset 8
 2019              		.cfi_offset 7, -8
 2020              		.cfi_offset 14, -4
 2021 0002 84B0     		sub	sp, sp, #16
 2022              		.cfi_def_cfa_offset 24
 2023 0004 00AF     		add	r7, sp, #0
 2024              		.cfi_def_cfa_register 7
 533:modem.c       ****     
 534:modem.c       ****     // Save/print modem model ID number
 535:modem.c       ****     if(modem_info.model_id[0] == '\0'){
 2025              		.loc 1 535 0
 2026 0006 454B     		ldr	r3, .L121
 2027 0008 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 2028 000a 002B     		cmp	r3, #0
 2029 000c 13D1     		bne	.L113
 536:modem.c       ****         // AT command #CGMM returns the "device model identification" code with the command echo.
 537:modem.c       ****         if(at_write_command("AT#CGMM\r","OK",DEFAULT_AT_TIMEOUT)){
 2030              		.loc 1 537 0
 2031 000e 4FF4FA62 		mov	r2, #2000
 2032 0012 4349     		ldr	r1, .L121+4
 2033 0014 4348     		ldr	r0, .L121+8
 2034 0016 FFF7FEFF 		bl	at_write_command
 2035 001a 0346     		mov	r3, r0
 2036 001c 002B     		cmp	r3, #0
 2037 001e 0AD0     		beq	.L113
 538:modem.c       ****             // Extract modem model ID number string from the UART
 539:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.model_id);
 2038              		.loc 1 539 0
 2039 0020 414B     		ldr	r3, .L121+12
 2040 0022 424A     		ldr	r2, .L121+16
 2041 0024 4249     		ldr	r1, .L121+20
 2042 0026 4348     		ldr	r0, .L121+24
 2043 0028 FFF7FEFF 		bl	extract_string
 540:modem.c       ****             // Print modem model ID number
 541:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem Model: %s",modem_info.model_id);
 2044              		.loc 1 541 0
 2045 002c 3E4A     		ldr	r2, .L121+12
 2046 002e 4249     		ldr	r1, .L121+28
 2047 0030 0020     		movs	r0, #0
 2048 0032 FFF7FEFF 		bl	printNotif
 2049              	.L113:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 50


 542:modem.c       ****         }
 543:modem.c       ****     }
 544:modem.c       ****     
 545:modem.c       ****    // Save/print SIM-card ID
 546:modem.c       ****    if(modem_info.sim_id[0] == '\0'){
 2050              		.loc 1 546 0
 2051 0036 394B     		ldr	r3, .L121
 2052 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2053 003a 002B     		cmp	r3, #0
 2054 003c 13D1     		bne	.L114
 547:modem.c       ****         // AT command #CCID is an execution command that reads the SIM number 
 548:modem.c       ****         if(at_write_command("AT#CCID\r", "OK", DEFAULT_AT_TIMEOUT)){
 2055              		.loc 1 548 0
 2056 003e 4FF4FA62 		mov	r2, #2000
 2057 0042 3749     		ldr	r1, .L121+4
 2058 0044 3D48     		ldr	r0, .L121+32
 2059 0046 FFF7FEFF 		bl	at_write_command
 2060 004a 0346     		mov	r3, r0
 2061 004c 002B     		cmp	r3, #0
 2062 004e 0AD0     		beq	.L114
 549:modem.c       ****             // Extract SIM-card ID string from the UART
 550:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.sim_id);
 2063              		.loc 1 550 0
 2064 0050 324B     		ldr	r3, .L121
 2065 0052 364A     		ldr	r2, .L121+16
 2066 0054 3649     		ldr	r1, .L121+20
 2067 0056 3748     		ldr	r0, .L121+24
 2068 0058 FFF7FEFF 		bl	extract_string
 551:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"SIM ID: %s",modem_info.sim_id);
 2069              		.loc 1 551 0
 2070 005c 2F4A     		ldr	r2, .L121
 2071 005e 3849     		ldr	r1, .L121+36
 2072 0060 0020     		movs	r0, #0
 2073 0062 FFF7FEFF 		bl	printNotif
 2074              	.L114:
 552:modem.c       ****         }
 553:modem.c       ****    }
 554:modem.c       **** 
 555:modem.c       ****     // Save/print modem IMEI
 556:modem.c       ****     if(modem_info.imei[0] == '\0'){
 2075              		.loc 1 556 0
 2076 0066 2D4B     		ldr	r3, .L121
 2077 0068 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 2078 006c 002B     		cmp	r3, #0
 2079 006e 13D1     		bne	.L115
 557:modem.c       ****         // AT command #CGSN returns the product serial number, identified as the IMEI of the mobile
 558:modem.c       ****         if(at_write_command("AT+CGSN\r","OK",DEFAULT_AT_TIMEOUT)){
 2080              		.loc 1 558 0
 2081 0070 4FF4FA62 		mov	r2, #2000
 2082 0074 2A49     		ldr	r1, .L121+4
 2083 0076 3348     		ldr	r0, .L121+40
 2084 0078 FFF7FEFF 		bl	at_write_command
 2085 007c 0346     		mov	r3, r0
 2086 007e 002B     		cmp	r3, #0
 2087 0080 0AD0     		beq	.L115
 559:modem.c       ****             // Extract modem IMEI number string from the UART
 560:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.imei);
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 51


 2088              		.loc 1 560 0
 2089 0082 314B     		ldr	r3, .L121+44
 2090 0084 294A     		ldr	r2, .L121+16
 2091 0086 2A49     		ldr	r1, .L121+20
 2092 0088 2A48     		ldr	r0, .L121+24
 2093 008a FFF7FEFF 		bl	extract_string
 561:modem.c       ****             // Print modem IMEI number
 562:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"IMEI: %s",modem_info.imei);
 2094              		.loc 1 562 0
 2095 008e 2E4A     		ldr	r2, .L121+44
 2096 0090 2E49     		ldr	r1, .L121+48
 2097 0092 0020     		movs	r0, #0
 2098 0094 FFF7FEFF 		bl	printNotif
 2099              	.L115:
 563:modem.c       ****         } 
 564:modem.c       ****     }
 565:modem.c       ****     
 566:modem.c       ****     // Configure protocol and cellular end point
 567:modem.c       ****     // AT command +CGDCONT defines the PDP context parameter values for a PDP context identified by
 568:modem.c       ****     if(updatable_parameters.sim_type == SIM_TYPE_STANDARD){
 2100              		.loc 1 568 0
 2101 0098 2D4B     		ldr	r3, .L121+52
 2102 009a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2103 009c 83F00103 		eor	r3, r3, #1
 2104 00a0 DBB2     		uxtb	r3, r3
 2105 00a2 002B     		cmp	r3, #0
 2106 00a4 06D0     		beq	.L116
 569:modem.c       ****         at_write_command("AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\r\n", "OK", DEFAULT_AT_TIMEOU
 2107              		.loc 1 569 0
 2108 00a6 4FF4FA62 		mov	r2, #2000
 2109 00aa 1D49     		ldr	r1, .L121+4
 2110 00ac 2948     		ldr	r0, .L121+56
 2111 00ae FFF7FEFF 		bl	at_write_command
 2112 00b2 09E0     		b	.L117
 2113              	.L116:
 570:modem.c       ****     
 571:modem.c       ****     }else if(updatable_parameters.sim_type == SIM_TYPE_SUPER){
 2114              		.loc 1 571 0
 2115 00b4 264B     		ldr	r3, .L121+52
 2116 00b6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2117 00b8 002B     		cmp	r3, #0
 2118 00ba 05D0     		beq	.L117
 572:modem.c       ****         at_write_command("AT+CGDCONT=1,\"IP\",\"super\"\r\n", "OK", DEFAULT_AT_TIMEOUT);
 2119              		.loc 1 572 0
 2120 00bc 4FF4FA62 		mov	r2, #2000
 2121 00c0 1749     		ldr	r1, .L121+4
 2122 00c2 2548     		ldr	r0, .L121+60
 2123 00c4 FFF7FEFF 		bl	at_write_command
 2124              	.L117:
 573:modem.c       ****     }
 574:modem.c       ****     
 575:modem.c       ****     // Check if modem power savings is enabled. If so, disable it so we can send data.
 576:modem.c       ****     // AT command +CFUN? is a read command that reports the current setting of <fun> which is the p
 577:modem.c       ****     if(at_write_command("AT+CFUN?\r", "OK",DEFAULT_AT_TIMEOUT)){
 2125              		.loc 1 577 0
 2126 00c8 4FF4FA62 		mov	r2, #2000
 2127 00cc 1449     		ldr	r1, .L121+4
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 52


 2128 00ce 2348     		ldr	r0, .L121+64
 2129 00d0 FFF7FEFF 		bl	at_write_command
 2130 00d4 0346     		mov	r3, r0
 2131 00d6 002B     		cmp	r3, #0
 2132 00d8 1BD0     		beq	.L120
 2133              	.LBB9:
 578:modem.c       ****         char CFUN[10]; // Create a character array of length 10 called CFUN 
 579:modem.c       ****         CFUN[0] = '\0';
 2134              		.loc 1 579 0
 2135 00da 0023     		movs	r3, #0
 2136 00dc 3B71     		strb	r3, [r7, #4]
 580:modem.c       ****         // Extract UART string recieved from the modem
 581:modem.c       ****         extract_string(uart_received_string,": ","\r",CFUN);
 2137              		.loc 1 581 0
 2138 00de 3B1D     		adds	r3, r7, #4
 2139 00e0 124A     		ldr	r2, .L121+16
 2140 00e2 1349     		ldr	r1, .L121+20
 2141 00e4 1348     		ldr	r0, .L121+24
 2142 00e6 FFF7FEFF 		bl	extract_string
 582:modem.c       ****         // Print UART string recieved from the modem
 583:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"CFUN: %s",CFUN);
 2143              		.loc 1 583 0
 2144 00ea 3B1D     		adds	r3, r7, #4
 2145 00ec 1A46     		mov	r2, r3
 2146 00ee 1C49     		ldr	r1, .L121+68
 2147 00f0 0020     		movs	r0, #0
 2148 00f2 FFF7FEFF 		bl	printNotif
 584:modem.c       ****         // Search CRUN for "1", if "1" exists, it will return 1u otherwise it will return NULL
 585:modem.c       ****         // If it returns NULL, then write another command to the modem
 586:modem.c       ****         if(strstr(CFUN,"1") == NULL){
 2149              		.loc 1 586 0
 2150 00f6 3B1D     		adds	r3, r7, #4
 2151 00f8 3121     		movs	r1, #49
 2152 00fa 1846     		mov	r0, r3
 2153 00fc FFF7FEFF 		bl	strchr
 2154 0100 0346     		mov	r3, r0
 2155 0102 002B     		cmp	r3, #0
 2156 0104 05D1     		bne	.L120
 587:modem.c       ****             // AT command +CFUN= is a set command which selects the level of functionality in the m
 588:modem.c       ****             // = 1 means mobile full functionality with power saving disabled 
 589:modem.c       ****             at_write_command("AT+CFUN=1\r", "OK",DEFAULT_AT_TIMEOUT);
 2157              		.loc 1 589 0
 2158 0106 4FF4FA62 		mov	r2, #2000
 2159 010a 0549     		ldr	r1, .L121+4
 2160 010c 1548     		ldr	r0, .L121+72
 2161 010e FFF7FEFF 		bl	at_write_command
 2162              	.L120:
 2163              	.LBE9:
 590:modem.c       ****         }
 591:modem.c       ****     }
 592:modem.c       **** 
 593:modem.c       ****     
 594:modem.c       **** }
 2164              		.loc 1 594 0
 2165 0112 00BF     		nop
 2166 0114 1037     		adds	r7, r7, #16
 2167              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 53


 2168 0116 BD46     		mov	sp, r7
 2169              		.cfi_def_cfa_register 13
 2170              		@ sp needed
 2171 0118 80BD     		pop	{r7, pc}
 2172              	.L122:
 2173 011a 00BF     		.align	2
 2174              	.L121:
 2175 011c 00000000 		.word	modem_info
 2176 0120 00000000 		.word	.LC0
 2177 0124 38050000 		.word	.LC51
 2178 0128 14000000 		.word	modem_info+20
 2179 012c 88020000 		.word	.LC21
 2180 0130 8C020000 		.word	.LC22
 2181 0134 00000000 		.word	uart_received_string
 2182 0138 44050000 		.word	.LC52
 2183 013c 54050000 		.word	.LC53
 2184 0140 60050000 		.word	.LC54
 2185 0144 6C050000 		.word	.LC55
 2186 0148 28000000 		.word	modem_info+40
 2187 014c 78050000 		.word	.LC56
 2188 0150 00000000 		.word	updatable_parameters
 2189 0154 84050000 		.word	.LC57
 2190 0158 B0050000 		.word	.LC58
 2191 015c CC050000 		.word	.LC59
 2192 0160 D8050000 		.word	.LC60
 2193 0164 E4050000 		.word	.LC61
 2194              		.cfi_endproc
 2195              	.LFE82:
 2196              		.size	modem_configure_settings, .-modem_configure_settings
 2197              		.section	.rodata
 2198 05ef 00       		.align	2
 2199              	.LC62:
 2200 05f0 4D6F6465 		.ascii	"Modem not ready to get time. Not conncted to networ"
 2200      6D206E6F 
 2200      74207265 
 2200      61647920 
 2200      746F2067 
 2201 0623 6B2E00   		.ascii	"k.\000"
 2202 0626 0000     		.align	2
 2203              	.LC63:
 2204 0628 41542B43 		.ascii	"AT+CCLK?\015\000"
 2204      434C4B3F 
 2204      0D00
 2205 0632 0000     		.align	2
 2206              	.LC64:
 2207 0634 220D00   		.ascii	"\"\015\000"
 2208 0637 00       		.align	2
 2209              	.LC65:
 2210 0638 3A202200 		.ascii	": \"\000"
 2211              		.align	2
 2212              	.LC66:
 2213 063c 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d-%d\000"
 2213      642F2564 
 2213      2C25643A 
 2213      25643A25 
 2213      642D2564 
 2214 0651 000000   		.align	2
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 54


 2215              	.LC67:
 2216 0654 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d+%d\000"
 2216      642F2564 
 2216      2C25643A 
 2216      25643A25 
 2216      642B2564 
 2217 0669 000000   		.align	2
 2218              	.LC68:
 2219 066c 436F756C 		.ascii	"Could not parse modem time.\000"
 2219      64206E6F 
 2219      74207061 
 2219      72736520 
 2219      6D6F6465 
 2220              		.section	.text.modem_get_network_time,"ax",%progbits
 2221              		.align	2
 2222              		.global	modem_get_network_time
 2223              		.thumb
 2224              		.thumb_func
 2225              		.type	modem_get_network_time, %function
 2226              	modem_get_network_time:
 2227              	.LFB83:
 595:modem.c       **** 
 596:modem.c       **** //returns 0 if modem can't get time
 597:modem.c       **** long modem_get_network_time(){
 2228              		.loc 1 597 0
 2229              		.cfi_startproc
 2230              		@ args = 0, pretend = 0, frame = 104
 2231              		@ frame_needed = 1, uses_anonymous_args = 0
 2232 0000 80B5     		push	{r7, lr}
 2233              		.cfi_def_cfa_offset 8
 2234              		.cfi_offset 7, -8
 2235              		.cfi_offset 14, -4
 2236 0002 A0B0     		sub	sp, sp, #128
 2237              		.cfi_def_cfa_offset 136
 2238 0004 06AF     		add	r7, sp, #24
 2239              		.cfi_def_cfa 7, 112
 598:modem.c       ****     
 599:modem.c       ****     //modem reposen format (careful to include the quotes "")
 600:modem.c       ****     //+CCLK: "20/05/01,10:48:33-16" the "-16" is the number of quarter hourts (15 mins) from GMT ti
 601:modem.c       ****     //ex: 14:48 GMT
 602:modem.c       **** 
 603:modem.c       ****     // If modem_state is not "ready", then print error and return 0
 604:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2240              		.loc 1 604 0
 2241 0006 444B     		ldr	r3, .L130
 2242 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2243 000a 042B     		cmp	r3, #4
 2244 000c 05D0     		beq	.L124
 605:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Modem not ready to get time. Not conncted to network.");
 2245              		.loc 1 605 0
 2246 000e 4349     		ldr	r1, .L130+4
 2247 0010 0220     		movs	r0, #2
 2248 0012 FFF7FEFF 		bl	printNotif
 606:modem.c       ****         return 0;   
 2249              		.loc 1 606 0
 2250 0016 0023     		movs	r3, #0
 2251 0018 7AE0     		b	.L125
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 55


 2252              	.L124:
 607:modem.c       ****     }
 608:modem.c       ****     long epoch_time = 0; // Create variable of long time and set equal to 0
 2253              		.loc 1 608 0
 2254 001a 0023     		movs	r3, #0
 2255 001c 7B66     		str	r3, [r7, #100]
 609:modem.c       ****     
 610:modem.c       ****     // AT command +CCLK? is a read command that returns the current setting of the real-time clock 
 611:modem.c       ****     if(at_write_command("AT+CCLK?\r","OK",DEFAULT_AT_TIMEOUT)){
 2256              		.loc 1 611 0
 2257 001e 4FF4FA62 		mov	r2, #2000
 2258 0022 3F49     		ldr	r1, .L130+8
 2259 0024 3F48     		ldr	r0, .L130+12
 2260 0026 FFF7FEFF 		bl	at_write_command
 2261 002a 0346     		mov	r3, r0
 2262 002c 002B     		cmp	r3, #0
 2263 002e 6ED0     		beq	.L126
 2264              	.LBB10:
 612:modem.c       ****         // need to set this to /0
 613:modem.c       ****         char network_time[30]; // Create a character array of length 30 called network_time 
 614:modem.c       ****         network_time[0] = '\0';
 2265              		.loc 1 614 0
 2266 0030 0023     		movs	r3, #0
 2267 0032 87F84430 		strb	r3, [r7, #68]
 615:modem.c       ****         // Extract UART string recieved from the modem and save to variable network_time
 616:modem.c       ****         extract_string(uart_received_string,": \"","\"\r",network_time);
 2268              		.loc 1 616 0
 2269 0036 07F14403 		add	r3, r7, #68
 2270 003a 3B4A     		ldr	r2, .L130+16
 2271 003c 3B49     		ldr	r1, .L130+20
 2272 003e 3C48     		ldr	r0, .L130+24
 2273 0040 FFF7FEFF 		bl	extract_string
 617:modem.c       ****         
 618:modem.c       ****         ///////////////////  
 619:modem.c       ****         struct tm t; // Creates variable t of struct tm
 620:modem.c       ****         
 621:modem.c       ****         // Creates a bunch of variables of type int and sets them to 0
 622:modem.c       ****         int year, month, day, hour, minute, second, gmt_offset = 0;
 2274              		.loc 1 622 0
 2275 0044 0023     		movs	r3, #0
 2276 0046 BB62     		str	r3, [r7, #40]
 623:modem.c       ****       
 624:modem.c       ****         // Determines the GMT offset 
 625:modem.c       ****         // int sscanf(const char *str, const char *format, ...) reads formatted input from a string
 626:modem.c       ****         // On success, the function returns the number of variables filled. In the case of an input
 627:modem.c       ****         if(sscanf(network_time,"%d/%d/%d,%d:%d:%d-%d",&year,&month,&day,&hour,&minute,&second,&gmt_
 2277              		.loc 1 627 0
 2278 0048 07F13C01 		add	r1, r7, #60
 2279 004c 07F14002 		add	r2, r7, #64
 2280 0050 07F14400 		add	r0, r7, #68
 2281 0054 07F12803 		add	r3, r7, #40
 2282 0058 0493     		str	r3, [sp, #16]
 2283 005a 07F12C03 		add	r3, r7, #44
 2284 005e 0393     		str	r3, [sp, #12]
 2285 0060 07F13003 		add	r3, r7, #48
 2286 0064 0293     		str	r3, [sp, #8]
 2287 0066 07F13403 		add	r3, r7, #52
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 56


 2288 006a 0193     		str	r3, [sp, #4]
 2289 006c 07F13803 		add	r3, r7, #56
 2290 0070 0093     		str	r3, [sp]
 2291 0072 0B46     		mov	r3, r1
 2292 0074 2F49     		ldr	r1, .L130+28
 2293 0076 FFF7FEFF 		bl	sscanf
 2294 007a 0346     		mov	r3, r0
 2295 007c 072B     		cmp	r3, #7
 2296 007e 06D1     		bne	.L127
 628:modem.c       ****             gmt_offset = gmt_offset*(900);
 2297              		.loc 1 628 0
 2298 0080 BB6A     		ldr	r3, [r7, #40]
 2299 0082 4FF46172 		mov	r2, #900
 2300 0086 02FB03F3 		mul	r3, r2, r3
 2301 008a BB62     		str	r3, [r7, #40]
 2302 008c 27E0     		b	.L128
 2303              	.L127:
 629:modem.c       ****         }else if(sscanf(network_time,"%d/%d/%d,%d:%d:%d+%d",&year,&month,&day,&hour,&minute,&second
 2304              		.loc 1 629 0
 2305 008e 07F13C01 		add	r1, r7, #60
 2306 0092 07F14002 		add	r2, r7, #64
 2307 0096 07F14400 		add	r0, r7, #68
 2308 009a 07F12803 		add	r3, r7, #40
 2309 009e 0493     		str	r3, [sp, #16]
 2310 00a0 07F12C03 		add	r3, r7, #44
 2311 00a4 0393     		str	r3, [sp, #12]
 2312 00a6 07F13003 		add	r3, r7, #48
 2313 00aa 0293     		str	r3, [sp, #8]
 2314 00ac 07F13403 		add	r3, r7, #52
 2315 00b0 0193     		str	r3, [sp, #4]
 2316 00b2 07F13803 		add	r3, r7, #56
 2317 00b6 0093     		str	r3, [sp]
 2318 00b8 0B46     		mov	r3, r1
 2319 00ba 1F49     		ldr	r1, .L130+32
 2320 00bc FFF7FEFF 		bl	sscanf
 2321 00c0 0346     		mov	r3, r0
 2322 00c2 072B     		cmp	r3, #7
 2323 00c4 05D1     		bne	.L129
 630:modem.c       ****             gmt_offset = gmt_offset*(-900);
 2324              		.loc 1 630 0
 2325 00c6 BB6A     		ldr	r3, [r7, #40]
 2326 00c8 1C4A     		ldr	r2, .L130+36
 2327 00ca 02FB03F3 		mul	r3, r2, r3
 2328 00ce BB62     		str	r3, [r7, #40]
 2329 00d0 05E0     		b	.L128
 2330              	.L129:
 631:modem.c       ****         }else{
 632:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Could not parse modem time.");
 2331              		.loc 1 632 0
 2332 00d2 1B49     		ldr	r1, .L130+40
 2333 00d4 0220     		movs	r0, #2
 2334 00d6 FFF7FEFF 		bl	printNotif
 633:modem.c       ****             return 0;  // Return 0 if cannot get time 
 2335              		.loc 1 633 0
 2336 00da 0023     		movs	r3, #0
 2337 00dc 18E0     		b	.L125
 2338              	.L128:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 57


 634:modem.c       ****         }
 635:modem.c       ****         
 636:modem.c       ****         // Sets each variable to the correct time 
 637:modem.c       ****         t.tm_sec = second;
 2339              		.loc 1 637 0
 2340 00de FB6A     		ldr	r3, [r7, #44]
 2341 00e0 7B60     		str	r3, [r7, #4]
 638:modem.c       ****         t.tm_min = minute;
 2342              		.loc 1 638 0
 2343 00e2 3B6B     		ldr	r3, [r7, #48]
 2344 00e4 BB60     		str	r3, [r7, #8]
 639:modem.c       ****         t.tm_hour = hour;
 2345              		.loc 1 639 0
 2346 00e6 7B6B     		ldr	r3, [r7, #52]
 2347 00e8 FB60     		str	r3, [r7, #12]
 640:modem.c       ****         t.tm_year = year + 100;    // Year since 1900
 2348              		.loc 1 640 0
 2349 00ea 3B6C     		ldr	r3, [r7, #64]
 2350 00ec 6433     		adds	r3, r3, #100
 2351 00ee BB61     		str	r3, [r7, #24]
 641:modem.c       ****         t.tm_mon = month-1;        // Month, where 0 = jan
 2352              		.loc 1 641 0
 2353 00f0 FB6B     		ldr	r3, [r7, #60]
 2354 00f2 013B     		subs	r3, r3, #1
 2355 00f4 7B61     		str	r3, [r7, #20]
 642:modem.c       ****         t.tm_mday = day;           // Day of the month
 2356              		.loc 1 642 0
 2357 00f6 BB6B     		ldr	r3, [r7, #56]
 2358 00f8 3B61     		str	r3, [r7, #16]
 643:modem.c       ****         t.tm_isdst = 0;            // Is Daylight Savings on? 1 = yes, 0 = no, -1 = unknown
 2359              		.loc 1 643 0
 2360 00fa 0023     		movs	r3, #0
 2361 00fc 7B62     		str	r3, [r7, #36]
 644:modem.c       ****     
 645:modem.c       ****         // Set variable epoch-time to be equal to the local time plus the GMT offset
 646:modem.c       ****         // the mktime function converts a broken-down local time (pointed to by timeptr) and return
 647:modem.c       ****         epoch_time = mktime(&t) + gmt_offset;
 2362              		.loc 1 647 0
 2363 00fe 3B1D     		adds	r3, r7, #4
 2364 0100 1846     		mov	r0, r3
 2365 0102 FFF7FEFF 		bl	mktime
 2366 0106 0246     		mov	r2, r0
 2367 0108 BB6A     		ldr	r3, [r7, #40]
 2368 010a 1344     		add	r3, r3, r2
 2369 010c 7B66     		str	r3, [r7, #100]
 2370              	.L126:
 2371              	.LBE10:
 648:modem.c       ****     }
 649:modem.c       ****     
 650:modem.c       ****     return epoch_time;
 2372              		.loc 1 650 0
 2373 010e 7B6E     		ldr	r3, [r7, #100]
 2374              	.L125:
 651:modem.c       **** }
 2375              		.loc 1 651 0
 2376 0110 1846     		mov	r0, r3
 2377 0112 6837     		adds	r7, r7, #104
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 58


 2378              		.cfi_def_cfa_offset 8
 2379 0114 BD46     		mov	sp, r7
 2380              		.cfi_def_cfa_register 13
 2381              		@ sp needed
 2382 0116 80BD     		pop	{r7, pc}
 2383              	.L131:
 2384              		.align	2
 2385              	.L130:
 2386 0118 00000000 		.word	modem_state
 2387 011c F0050000 		.word	.LC62
 2388 0120 00000000 		.word	.LC0
 2389 0124 28060000 		.word	.LC63
 2390 0128 34060000 		.word	.LC64
 2391 012c 38060000 		.word	.LC65
 2392 0130 00000000 		.word	uart_received_string
 2393 0134 3C060000 		.word	.LC66
 2394 0138 54060000 		.word	.LC67
 2395 013c 7CFCFFFF 		.word	-900
 2396 0140 6C060000 		.word	.LC68
 2397              		.cfi_endproc
 2398              	.LFE83:
 2399              		.size	modem_get_network_time, .-modem_get_network_time
 2400              		.section	.text.modem_get_state,"ax",%progbits
 2401              		.align	2
 2402              		.global	modem_get_state
 2403              		.thumb
 2404              		.thumb_func
 2405              		.type	modem_get_state, %function
 2406              	modem_get_state:
 2407              	.LFB84:
 652:modem.c       **** 
 653:modem.c       **** // Get the modem state
 654:modem.c       **** uint8 modem_get_state(){
 2408              		.loc 1 654 0
 2409              		.cfi_startproc
 2410              		@ args = 0, pretend = 0, frame = 0
 2411              		@ frame_needed = 1, uses_anonymous_args = 0
 2412              		@ link register save eliminated.
 2413 0000 80B4     		push	{r7}
 2414              		.cfi_def_cfa_offset 4
 2415              		.cfi_offset 7, -4
 2416 0002 00AF     		add	r7, sp, #0
 2417              		.cfi_def_cfa_register 7
 655:modem.c       ****     return modem_state;
 2418              		.loc 1 655 0
 2419 0004 024B     		ldr	r3, .L134
 2420 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 656:modem.c       **** }
 2421              		.loc 1 656 0
 2422 0008 1846     		mov	r0, r3
 2423 000a BD46     		mov	sp, r7
 2424              		.cfi_def_cfa_register 13
 2425              		@ sp needed
 2426 000c 80BC     		pop	{r7}
 2427              		.cfi_restore 7
 2428              		.cfi_def_cfa_offset 0
 2429 000e 7047     		bx	lr
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 59


 2430              	.L135:
 2431              		.align	2
 2432              	.L134:
 2433 0010 00000000 		.word	modem_state
 2434              		.cfi_endproc
 2435              	.LFE84:
 2436              		.size	modem_get_state, .-modem_get_state
 2437              		.section	.text.modem_sleep,"ax",%progbits
 2438              		.align	2
 2439              		.global	modem_sleep
 2440              		.thumb
 2441              		.thumb_func
 2442              		.type	modem_sleep, %function
 2443              	modem_sleep:
 2444              	.LFB85:
 657:modem.c       **** 
 658:modem.c       **** // Set modem to sleep
 659:modem.c       **** void modem_sleep(){
 2445              		.loc 1 659 0
 2446              		.cfi_startproc
 2447              		@ args = 0, pretend = 0, frame = 0
 2448              		@ frame_needed = 1, uses_anonymous_args = 0
 2449 0000 80B5     		push	{r7, lr}
 2450              		.cfi_def_cfa_offset 8
 2451              		.cfi_offset 7, -8
 2452              		.cfi_offset 14, -4
 2453 0002 00AF     		add	r7, sp, #0
 2454              		.cfi_def_cfa_register 7
 660:modem.c       ****     // If the modem_state is not "off" then put it to sleep
 661:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2455              		.loc 1 661 0
 2456 0004 FFF7FEFF 		bl	modem_get_state
 2457 0008 0346     		mov	r3, r0
 2458 000a 002B     		cmp	r3, #0
 2459 000c 03D0     		beq	.L138
 662:modem.c       **** 
 663:modem.c       ****         Telit_ControlReg_Sleep(); // Prepares the modem for entering the low power mode.
 2460              		.loc 1 663 0
 2461 000e FFF7FEFF 		bl	Telit_ControlReg_Sleep
 664:modem.c       ****         UART_Telit_Sleep(); // Saves the current component state, calls the UART_Telit_Stop() funct
 2462              		.loc 1 664 0
 2463 0012 FFF7FEFF 		bl	UART_Telit_Sleep
 2464              	.L138:
 665:modem.c       ****         
 666:modem.c       ****         // Set interrupt on RX pin to wakeup chip from sleep if UART comm starts
 667:modem.c       ****        // Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_FALLING);
 668:modem.c       ****      }
 669:modem.c       **** }
 2465              		.loc 1 669 0
 2466 0016 00BF     		nop
 2467 0018 80BD     		pop	{r7, pc}
 2468              		.cfi_endproc
 2469              	.LFE85:
 2470              		.size	modem_sleep, .-modem_sleep
 2471 001a 00BF     		.section	.text.modem_wakeup,"ax",%progbits
 2472              		.align	2
 2473              		.global	modem_wakeup
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 60


 2474              		.thumb
 2475              		.thumb_func
 2476              		.type	modem_wakeup, %function
 2477              	modem_wakeup:
 2478              	.LFB86:
 670:modem.c       **** 
 671:modem.c       **** // Wakeup the modem
 672:modem.c       **** void modem_wakeup(){
 2479              		.loc 1 672 0
 2480              		.cfi_startproc
 2481              		@ args = 0, pretend = 0, frame = 0
 2482              		@ frame_needed = 1, uses_anonymous_args = 0
 2483 0000 80B5     		push	{r7, lr}
 2484              		.cfi_def_cfa_offset 8
 2485              		.cfi_offset 7, -8
 2486              		.cfi_offset 14, -4
 2487 0002 00AF     		add	r7, sp, #0
 2488              		.cfi_def_cfa_register 7
 673:modem.c       ****     // If modem state is not off then wake it up
 674:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2489              		.loc 1 674 0
 2490 0004 FFF7FEFF 		bl	modem_get_state
 2491 0008 0346     		mov	r3, r0
 2492 000a 002B     		cmp	r3, #0
 2493 000c 0BD0     		beq	.L141
 675:modem.c       ****         Telit_ControlReg_Wakeup(); // Restores the modem after waking up from the low power mode.
 2494              		.loc 1 675 0
 2495 000e FFF7FEFF 		bl	Telit_ControlReg_Wakeup
 676:modem.c       ****         // Calls the UART_Telit_RestoreConfig() function to restore the configuration.
 677:modem.c       ****         // If the modem was enabled before the UART_Telit_Sleep() function was called, the UART_Tel
 678:modem.c       ****         UART_Telit_Wakeup();
 2496              		.loc 1 678 0
 2497 0012 FFF7FEFF 		bl	UART_Telit_Wakeup
 679:modem.c       ****         // Remove the need for this pin itterupt
 680:modem.c       ****         //Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 681:modem.c       ****         
 682:modem.c       ****         // If woken up from pin, go ahead and delay for 100ms to allow modem UART to deliver the me
 683:modem.c       ****         if(modem_get_state() == MODEM_STATE_WAITING_FOR_IP){
 2498              		.loc 1 683 0
 2499 0016 FFF7FEFF 		bl	modem_get_state
 2500 001a 0346     		mov	r3, r0
 2501 001c 032B     		cmp	r3, #3
 2502 001e 02D1     		bne	.L141
 684:modem.c       ****             CyDelay(100u);
 2503              		.loc 1 684 0
 2504 0020 6420     		movs	r0, #100
 2505 0022 FFF7FEFF 		bl	CyDelay
 2506              	.L141:
 685:modem.c       ****         }
 686:modem.c       ****      }
 687:modem.c       **** }
 2507              		.loc 1 687 0
 2508 0026 00BF     		nop
 2509 0028 80BD     		pop	{r7, pc}
 2510              		.cfi_endproc
 2511              	.LFE86:
 2512              		.size	modem_wakeup, .-modem_wakeup
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 61


 2513 002a 00BF     		.section	.rodata
 2514              		.align	2
 2515              	.LC69:
 2516 0688 41542347 		.ascii	"AT#GPIO=5,1,1,0\015\000"
 2516      50494F3D 
 2516      352C312C 
 2516      312C300D 
 2516      00
 2517 0699 000000   		.align	2
 2518              	.LC70:
 2519 069c 41542453 		.ascii	"AT$SUPLSEC=1\015\000"
 2519      55504C53 
 2519      45433D31 
 2519      0D00
 2520 06aa 0000     		.align	2
 2521              	.LC71:
 2522 06ac 41542453 		.ascii	"AT$SUPLV=2\015\000"
 2522      55504C56 
 2522      3D320D00 
 2523              		.align	2
 2524              	.LC72:
 2525 06b8 41542441 		.ascii	"AT$AGPSEN=1\015\000"
 2525      47505345 
 2525      4E3D310D 
 2525      00
 2526 06c5 000000   		.align	2
 2527              	.LC73:
 2528 06c8 41542453 		.ascii	"AT$SLP=1,\"supl.google.com:7275\"\015\000"
 2528      4C503D31 
 2528      2C227375 
 2528      706C2E67 
 2528      6F6F676C 
 2529 06e9 000000   		.align	2
 2530              	.LC74:
 2531 06ec 41542353 		.ascii	"AT#SGACT=1,0\015\012\000"
 2531      47414354 
 2531      3D312C30 
 2531      0D0A00
 2532 06fb 00       		.align	2
 2533              	.LC75:
 2534 06fc 4154244C 		.ascii	"AT$LCSLK=1,1\015\000"
 2534      43534C4B 
 2534      3D312C31 
 2534      0D00
 2535 070a 0000     		.align	2
 2536              	.LC76:
 2537 070c 41542447 		.ascii	"AT$GPSSLSR=1,1,,,,,2\015\000"
 2537      5053534C 
 2537      53523D31 
 2537      2C312C2C 
 2537      2C2C2C32 
 2538 0722 0000     		.align	2
 2539              	.LC77:
 2540 0724 41542447 		.ascii	"AT$GPSP=1\015\000"
 2540      5053503D 
 2540      310D00
 2541 072f 00       		.align	2
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 62


 2542              	.LC78:
 2543 0730 4E00     		.ascii	"N\000"
 2544 0732 0000     		.align	2
 2545              	.LC79:
 2546 0734 41542447 		.ascii	"AT$GPSACP\015\000"
 2546      50534143 
 2546      500D00
 2547 073f 00       		.align	2
 2548              	.LC80:
 2549 0740 24475053 		.ascii	"$GPSACP: \000"
 2549      4143503A 
 2549      2000
 2550 074a 0000     		.align	2
 2551              	.LC81:
 2552 074c 24475053 		.ascii	"$GPSACP: %*f,%[^A-Z]%[A-Z],%[^A-Z]%[A-Z],%*f,%f,%*s"
 2552      4143503A 
 2552      20252A66 
 2552      2C255B5E 
 2552      412D5A5D 
 2553 077f 00       		.ascii	"\000"
 2554              		.global	__aeabi_fdiv
 2555              		.global	__aeabi_f2d
 2556              		.global	__aeabi_ddiv
 2557              		.global	__aeabi_dadd
 2558              		.global	__aeabi_d2f
 2559              		.align	2
 2560              	.LC82:
 2561 0780 5300     		.ascii	"S\000"
 2562 0782 0000     		.align	2
 2563              	.LC83:
 2564 0784 5700     		.ascii	"W\000"
 2565 0786 0000     		.align	2
 2566              	.LC84:
 2567 0788 41542347 		.ascii	"AT#GPIO=5,0,1,0\015\000"
 2567      50494F3D 
 2567      352C302C 
 2567      312C300D 
 2567      00
 2568 0799 000000   		.align	2
 2569              	.LC85:
 2570 079c 41542447 		.ascii	"AT$GPSR=0\015\000"
 2570      5053523D 
 2570      300D00
 2571 07a7 00       		.align	2
 2572              	.LC86:
 2573 07a8 54696D65 		.ascii	"Time to lock GPS: %d\000"
 2573      20746F20 
 2573      6C6F636B 
 2573      20475053 
 2573      3A202564 
 2574              		.section	.text.modem_get_gps_coordinates,"ax",%progbits
 2575              		.align	2
 2576              		.global	modem_get_gps_coordinates
 2577              		.thumb
 2578              		.thumb_func
 2579              		.type	modem_get_gps_coordinates, %function
 2580              	modem_get_gps_coordinates:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 63


 2581              	.LFB87:
 688:modem.c       **** 
 689:modem.c       ****     
 690:modem.c       **** // Returns lat,lom,alt data from Assited GPS (AGPS) system
 691:modem.c       **** int modem_get_gps_coordinates(){
 2582              		.loc 1 691 0
 2583              		.cfi_startproc
 2584              		@ args = 0, pretend = 0, frame = 232
 2585              		@ frame_needed = 1, uses_anonymous_args = 0
 2586 0000 B0B5     		push	{r4, r5, r7, lr}
 2587              		.cfi_def_cfa_offset 16
 2588              		.cfi_offset 4, -16
 2589              		.cfi_offset 5, -12
 2590              		.cfi_offset 7, -8
 2591              		.cfi_offset 14, -4
 2592 0002 BEB0     		sub	sp, sp, #248
 2593              		.cfi_def_cfa_offset 264
 2594 0004 04AF     		add	r7, sp, #16
 2595              		.cfi_def_cfa 7, 248
 692:modem.c       ****     /*gps_t gps;*/
 693:modem.c       ****     gps_data.altitude = 0;
 2596              		.loc 1 693 0
 2597 0006 A84B     		ldr	r3, .L151
 2598 0008 4FF00002 		mov	r2, #0
 2599 000c 9A60     		str	r2, [r3, #8]	@ float
 694:modem.c       ****     gps_data.longitude = 0;
 2600              		.loc 1 694 0
 2601 000e A64B     		ldr	r3, .L151
 2602 0010 4FF00002 		mov	r2, #0
 2603 0014 5A60     		str	r2, [r3, #4]	@ float
 695:modem.c       ****     gps_data.latitude = 0;
 2604              		.loc 1 695 0
 2605 0016 A44B     		ldr	r3, .L151
 2606 0018 4FF00002 		mov	r2, #0
 2607 001c 1A60     		str	r2, [r3]	@ float
 696:modem.c       ****     gps_data.time_to_lock =0;
 2608              		.loc 1 696 0
 2609 001e A24B     		ldr	r3, .L151
 2610 0020 0022     		movs	r2, #0
 2611 0022 9A81     		strh	r2, [r3, #12]	@ movhi
 697:modem.c       ****     gps_data.valid = 0;
 2612              		.loc 1 697 0
 2613 0024 A04B     		ldr	r3, .L151
 2614 0026 0022     		movs	r2, #0
 2615 0028 9A73     		strb	r2, [r3, #14]
 698:modem.c       ****     
 699:modem.c       ****     //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 700:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2616              		.loc 1 700 0
 2617 002a A04B     		ldr	r3, .L151+4
 2618 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2619 002e 042B     		cmp	r3, #4
 2620 0030 01D0     		beq	.L143
 701:modem.c       ****         return 0;//where valid = 1
 2621              		.loc 1 701 0
 2622 0032 0023     		movs	r3, #0
 2623 0034 33E1     		b	.L150
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 64


 2624              	.L143:
 702:modem.c       ****     }
 703:modem.c       ****     
 704:modem.c       ****     long lock_time = getTimeStamp();
 2625              		.loc 1 704 0
 2626 0036 FFF7FEFF 		bl	getTimeStamp
 2627 003a C7F8E000 		str	r0, [r7, #224]
 705:modem.c       ****     
 706:modem.c       ****     // Enable this for the LTER module
 707:modem.c       ****     // Enable GPS Low-Dropout Regulator
 708:modem.c       ****     at_write_command("AT#GPIO=5,1,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2628              		.loc 1 708 0
 2629 003e 4FF4FA62 		mov	r2, #2000
 2630 0042 9B49     		ldr	r1, .L151+8
 2631 0044 9B48     		ldr	r0, .L151+12
 2632 0046 FFF7FEFF 		bl	at_write_command
 709:modem.c       ****     
 710:modem.c       ****     // Configure SUPL connection params
 711:modem.c       ****     at_write_command("AT$SUPLSEC=1\r","OK",DEFAULT_AT_TIMEOUT);
 2633              		.loc 1 711 0
 2634 004a 4FF4FA62 		mov	r2, #2000
 2635 004e 9849     		ldr	r1, .L151+8
 2636 0050 9948     		ldr	r0, .L151+16
 2637 0052 FFF7FEFF 		bl	at_write_command
 712:modem.c       ****     
 713:modem.c       ****     // Use SUPL2.0
 714:modem.c       ****     at_write_command("AT$SUPLV=2\r","OK",DEFAULT_AT_TIMEOUT);
 2638              		.loc 1 714 0
 2639 0056 4FF4FA62 		mov	r2, #2000
 2640 005a 9549     		ldr	r1, .L151+8
 2641 005c 9748     		ldr	r0, .L151+20
 2642 005e FFF7FEFF 		bl	at_write_command
 715:modem.c       ****     
 716:modem.c       ****     // Enable AGPS service
 717:modem.c       ****     at_write_command("AT$AGPSEN=1\r","OK",DEFAULT_AT_TIMEOUT);
 2643              		.loc 1 717 0
 2644 0062 4FF4FA62 		mov	r2, #2000
 2645 0066 9249     		ldr	r1, .L151+8
 2646 0068 9548     		ldr	r0, .L151+24
 2647 006a FFF7FEFF 		bl	at_write_command
 718:modem.c       ****     
 719:modem.c       ****     // Chose SUPL server, use google public service
 720:modem.c       ****     at_write_command("AT$SLP=1,\"supl.google.com:7275\"\r","OK",DEFAULT_AT_TIMEOUT);
 2648              		.loc 1 720 0
 2649 006e 4FF4FA62 		mov	r2, #2000
 2650 0072 8F49     		ldr	r1, .L151+8
 2651 0074 9348     		ldr	r0, .L151+28
 2652 0076 FFF7FEFF 		bl	at_write_command
 721:modem.c       ****     
 722:modem.c       ****     //pdp context has to be locked to carrier for this to work
 723:modem.c       ****     
 724:modem.c       ****     // Unlock context since it needs to be used by modem
 725:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 2653              		.loc 1 725 0
 2654 007a 4FF4FA62 		mov	r2, #2000
 2655 007e 8C49     		ldr	r1, .L151+8
 2656 0080 9148     		ldr	r0, .L151+32
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 65


 2657 0082 FFF7FEFF 		bl	at_write_command
 726:modem.c       ****     
 727:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",DEFAULT_AT_TIMEOUT);//ATT
 2658              		.loc 1 727 0
 2659 0086 4FF4FA62 		mov	r2, #2000
 2660 008a 8949     		ldr	r1, .L151+8
 2661 008c 8F48     		ldr	r0, .L151+36
 2662 008e FFF7FEFF 		bl	at_write_command
 728:modem.c       ****     //at_write_command("AT$LCSLK=1,3\r","OK",DEFAULT_AT_TIMEOUT);//Verizon
 729:modem.c       ****     
 730:modem.c       ****     // Relock the context
 731:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 2663              		.loc 1 731 0
 2664 0092 42F21072 		movw	r2, #10000
 2665 0096 8649     		ldr	r1, .L151+8
 2666 0098 8D48     		ldr	r0, .L151+40
 2667 009a FFF7FEFF 		bl	at_write_command
 732:modem.c       ****     
 733:modem.c       ****     //start AGPS service
 734:modem.c       ****     at_write_command("AT$GPSSLSR=1,1,,,,,2\r","OK",DEFAULT_AT_TIMEOUT); 
 2668              		.loc 1 734 0
 2669 009e 4FF4FA62 		mov	r2, #2000
 2670 00a2 8349     		ldr	r1, .L151+8
 2671 00a4 8B48     		ldr	r0, .L151+44
 2672 00a6 FFF7FEFF 		bl	at_write_command
 735:modem.c       ****     
 736:modem.c       ****     at_write_command("AT$GPSP=1\r","OK",DEFAULT_AT_TIMEOUT); 
 2673              		.loc 1 736 0
 2674 00aa 4FF4FA62 		mov	r2, #2000
 2675 00ae 8049     		ldr	r1, .L151+8
 2676 00b0 8948     		ldr	r0, .L151+48
 2677 00b2 FFF7FEFF 		bl	at_write_command
 737:modem.c       ****     
 738:modem.c       ****     
 739:modem.c       ****     // Start the AGPS service
 740:modem.c       ****     // Will keep receiving a buynch of commas without numbers, until GPS locks
 741:modem.c       ****     // Good lock will return a string with "N" and "W" coordinates
 742:modem.c       ****     
 743:modem.c       ****     
 744:modem.c       ****  
 745:modem.c       ****     uint8 gps_status = 0;
 2678              		.loc 1 745 0
 2679 00b6 0023     		movs	r3, #0
 2680 00b8 87F8E730 		strb	r3, [r7, #231]
 2681              	.LBB11:
 746:modem.c       ****     for(uint16 i=0;i<200;i++){
 2682              		.loc 1 746 0
 2683 00bc 0023     		movs	r3, #0
 2684 00be A7F8E430 		strh	r3, [r7, #228]	@ movhi
 2685 00c2 15E0     		b	.L145
 2686              	.L146:
 747:modem.c       ****         gps_status += at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2687              		.loc 1 747 0 discriminator 3
 2688 00c4 4FF4FA62 		mov	r2, #2000
 2689 00c8 8449     		ldr	r1, .L151+52
 2690 00ca 8548     		ldr	r0, .L151+56
 2691 00cc FFF7FEFF 		bl	at_write_command
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 66


 2692 00d0 0346     		mov	r3, r0
 2693 00d2 1A46     		mov	r2, r3
 2694 00d4 97F8E730 		ldrb	r3, [r7, #231]
 2695 00d8 1344     		add	r3, r3, r2
 2696 00da 87F8E730 		strb	r3, [r7, #231]
 748:modem.c       ****         CyDelay(1000u);// Wait for a second -- BLOCKING. Could be more elegant to incorporate this 
 2697              		.loc 1 748 0 discriminator 3
 2698 00de 4FF47A70 		mov	r0, #1000
 2699 00e2 FFF7FEFF 		bl	CyDelay
 746:modem.c       ****     for(uint16 i=0;i<200;i++){
 2700              		.loc 1 746 0 discriminator 3
 2701 00e6 B7F8E430 		ldrh	r3, [r7, #228]
 2702 00ea 0133     		adds	r3, r3, #1
 2703 00ec A7F8E430 		strh	r3, [r7, #228]	@ movhi
 2704              	.L145:
 746:modem.c       ****     for(uint16 i=0;i<200;i++){
 2705              		.loc 1 746 0 is_stmt 0 discriminator 1
 2706 00f0 B7F8E430 		ldrh	r3, [r7, #228]
 2707 00f4 C72B     		cmp	r3, #199
 2708 00f6 E5D9     		bls	.L146
 2709              	.LBE11:
 749:modem.c       ****     }
 750:modem.c       ****     
 751:modem.c       ****     //parse data here
 752:modem.c       ****     
 753:modem.c       ****     //example $GPSACP: 210926.000,4217.8003N,08341.3158W,2.3,258.2,3,17.8,4.8,2.6,220520,05,00
 754:modem.c       ****     char lat[100];
 755:modem.c       ****     char lon[100];
 756:modem.c       ****     float alt;
 757:modem.c       ****     char lat_dir[2];
 758:modem.c       ****     char lon_dir[2];
 759:modem.c       ****     
 760:modem.c       ****     // Look for $GPSACP:  in uart_received_string and save to sl
 761:modem.c       ****     // char *strstr(const char *haystack, const char *needle) function finds the first occurrence o
 762:modem.c       ****     char *s1 = strstr(uart_received_string,"$GPSACP: ");
 2710              		.loc 1 762 0 is_stmt 1
 2711 00f8 7A49     		ldr	r1, .L151+60
 2712 00fa 7B48     		ldr	r0, .L151+64
 2713 00fc FFF7FEFF 		bl	strstr
 2714 0100 C7F8DC00 		str	r0, [r7, #220]
 763:modem.c       ****     // Look in sl for lat, long, alt and save in match 
 764:modem.c       ****     // int sscanf(const char *str, const char *format, ...) reads formatted input from a string.
 765:modem.c       ****     int match = sscanf(s1,"$GPSACP: %*f,%[^A-Z]%[A-Z],%[^A-Z]%[A-Z],%*f,%f,%*s",lat ,lat_dir ,lon ,
 2715              		.loc 1 765 0
 2716 0104 07F10801 		add	r1, r7, #8
 2717 0108 07F17402 		add	r2, r7, #116
 2718 010c 07F10C03 		add	r3, r7, #12
 2719 0110 0293     		str	r3, [sp, #8]
 2720 0112 3B1D     		adds	r3, r7, #4
 2721 0114 0193     		str	r3, [sp, #4]
 2722 0116 07F11003 		add	r3, r7, #16
 2723 011a 0093     		str	r3, [sp]
 2724 011c 0B46     		mov	r3, r1
 2725 011e 7349     		ldr	r1, .L151+68
 2726 0120 D7F8DC00 		ldr	r0, [r7, #220]
 2727 0124 FFF7FEFF 		bl	sscanf
 2728 0128 C7F8D800 		str	r0, [r7, #216]
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 67


 766:modem.c       ****     if(match >= 3){
 2729              		.loc 1 766 0
 2730 012c D7F8D830 		ldr	r3, [r7, #216]
 2731 0130 022B     		cmp	r3, #2
 2732 0132 40F39380 		ble	.L147
 767:modem.c       ****         // Calculate lat and lon
 768:modem.c       ****         // floorf(x) calculates the largest integer that is less than or equal to x. 
 769:modem.c       ****         // fmod(double x, double y) returns the remainder of x divided by y.
 770:modem.c       ****         gps_data.latitude = floorf(strtof(lat, NULL)/100) + fmod(strtof(lat, NULL),100)/60;
 2733              		.loc 1 770 0
 2734 0136 07F17403 		add	r3, r7, #116
 2735 013a 0021     		movs	r1, #0
 2736 013c 1846     		mov	r0, r3
 2737 013e FFF7FEFF 		bl	strtof
 2738 0142 0346     		mov	r3, r0
 2739 0144 6A49     		ldr	r1, .L151+72
 2740 0146 1846     		mov	r0, r3
 2741 0148 FFF7FEFF 		bl	__aeabi_fdiv
 2742 014c 0346     		mov	r3, r0
 2743 014e 1846     		mov	r0, r3
 2744 0150 FFF7FEFF 		bl	floorf
 2745 0154 0346     		mov	r3, r0
 2746 0156 1846     		mov	r0, r3
 2747 0158 FFF7FEFF 		bl	__aeabi_f2d
 2748 015c 0446     		mov	r4, r0
 2749 015e 0D46     		mov	r5, r1
 2750 0160 07F17403 		add	r3, r7, #116
 2751 0164 0021     		movs	r1, #0
 2752 0166 1846     		mov	r0, r3
 2753 0168 FFF7FEFF 		bl	strtof
 2754 016c 0346     		mov	r3, r0
 2755 016e 1846     		mov	r0, r3
 2756 0170 FFF7FEFF 		bl	__aeabi_f2d
 2757 0174 4FF00002 		mov	r2, #0
 2758 0178 5E4B     		ldr	r3, .L151+76
 2759 017a FFF7FEFF 		bl	fmod
 2760 017e 4FF00002 		mov	r2, #0
 2761 0182 5D4B     		ldr	r3, .L151+80
 2762 0184 FFF7FEFF 		bl	__aeabi_ddiv
 2763 0188 0246     		mov	r2, r0
 2764 018a 0B46     		mov	r3, r1
 2765 018c 2046     		mov	r0, r4
 2766 018e 2946     		mov	r1, r5
 2767 0190 FFF7FEFF 		bl	__aeabi_dadd
 2768 0194 0346     		mov	r3, r0
 2769 0196 0C46     		mov	r4, r1
 2770 0198 1846     		mov	r0, r3
 2771 019a 2146     		mov	r1, r4
 2772 019c FFF7FEFF 		bl	__aeabi_d2f
 2773 01a0 0246     		mov	r2, r0
 2774 01a2 414B     		ldr	r3, .L151
 2775 01a4 1A60     		str	r2, [r3]	@ float
 771:modem.c       ****         gps_data.longitude = floorf(strtof(lon, NULL)/100) + fmod(strtof(lon, NULL),100)/60;
 2776              		.loc 1 771 0
 2777 01a6 07F11003 		add	r3, r7, #16
 2778 01aa 0021     		movs	r1, #0
 2779 01ac 1846     		mov	r0, r3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 68


 2780 01ae FFF7FEFF 		bl	strtof
 2781 01b2 0346     		mov	r3, r0
 2782 01b4 4E49     		ldr	r1, .L151+72
 2783 01b6 1846     		mov	r0, r3
 2784 01b8 FFF7FEFF 		bl	__aeabi_fdiv
 2785 01bc 0346     		mov	r3, r0
 2786 01be 1846     		mov	r0, r3
 2787 01c0 FFF7FEFF 		bl	floorf
 2788 01c4 0346     		mov	r3, r0
 2789 01c6 1846     		mov	r0, r3
 2790 01c8 FFF7FEFF 		bl	__aeabi_f2d
 2791 01cc 0446     		mov	r4, r0
 2792 01ce 0D46     		mov	r5, r1
 2793 01d0 07F11003 		add	r3, r7, #16
 2794 01d4 0021     		movs	r1, #0
 2795 01d6 1846     		mov	r0, r3
 2796 01d8 FFF7FEFF 		bl	strtof
 2797 01dc 0346     		mov	r3, r0
 2798 01de 1846     		mov	r0, r3
 2799 01e0 FFF7FEFF 		bl	__aeabi_f2d
 2800 01e4 4FF00002 		mov	r2, #0
 2801 01e8 424B     		ldr	r3, .L151+76
 2802 01ea FFF7FEFF 		bl	fmod
 2803 01ee 4FF00002 		mov	r2, #0
 2804 01f2 414B     		ldr	r3, .L151+80
 2805 01f4 FFF7FEFF 		bl	__aeabi_ddiv
 2806 01f8 0246     		mov	r2, r0
 2807 01fa 0B46     		mov	r3, r1
 2808 01fc 2046     		mov	r0, r4
 2809 01fe 2946     		mov	r1, r5
 2810 0200 FFF7FEFF 		bl	__aeabi_dadd
 2811 0204 0346     		mov	r3, r0
 2812 0206 0C46     		mov	r4, r1
 2813 0208 1846     		mov	r0, r3
 2814 020a 2146     		mov	r1, r4
 2815 020c FFF7FEFF 		bl	__aeabi_d2f
 2816 0210 0246     		mov	r2, r0
 2817 0212 254B     		ldr	r3, .L151
 2818 0214 5A60     		str	r2, [r3, #4]	@ float
 772:modem.c       ****         if(!strcmp(lat_dir,"S")){ gps_data.latitude = -1*(gps_data.latitude);}
 2819              		.loc 1 772 0
 2820 0216 07F10803 		add	r3, r7, #8
 2821 021a 3849     		ldr	r1, .L151+84
 2822 021c 1846     		mov	r0, r3
 2823 021e FFF7FEFF 		bl	strcmp
 2824 0222 0346     		mov	r3, r0
 2825 0224 002B     		cmp	r3, #0
 2826 0226 05D1     		bne	.L148
 2827              		.loc 1 772 0 is_stmt 0 discriminator 1
 2828 0228 1F4B     		ldr	r3, .L151
 2829 022a 1B68     		ldr	r3, [r3]	@ float
 2830 022c 83F00043 		eor	r3, r3, #-2147483648
 2831 0230 1D4A     		ldr	r2, .L151
 2832 0232 1360     		str	r3, [r2]	@ float
 2833              	.L148:
 773:modem.c       ****         if(!strcmp(lon_dir,"W")){ gps_data.longitude = -1*(gps_data.longitude);}
 2834              		.loc 1 773 0 is_stmt 1
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 69


 2835 0234 3B1D     		adds	r3, r7, #4
 2836 0236 3249     		ldr	r1, .L151+88
 2837 0238 1846     		mov	r0, r3
 2838 023a FFF7FEFF 		bl	strcmp
 2839 023e 0346     		mov	r3, r0
 2840 0240 002B     		cmp	r3, #0
 2841 0242 05D1     		bne	.L149
 2842              		.loc 1 773 0 is_stmt 0 discriminator 1
 2843 0244 184B     		ldr	r3, .L151
 2844 0246 5B68     		ldr	r3, [r3, #4]	@ float
 2845 0248 83F00043 		eor	r3, r3, #-2147483648
 2846 024c 164A     		ldr	r2, .L151
 2847 024e 5360     		str	r3, [r2, #4]	@ float
 2848              	.L149:
 774:modem.c       ****         gps_data.altitude = alt; // Save alt, lat, and lon to the variable gps.
 2849              		.loc 1 774 0 is_stmt 1
 2850 0250 FB68     		ldr	r3, [r7, #12]	@ float
 2851 0252 154A     		ldr	r2, .L151
 2852 0254 9360     		str	r3, [r2, #8]	@ float
 775:modem.c       ****         gps_data.valid = 1;
 2853              		.loc 1 775 0
 2854 0256 144B     		ldr	r3, .L151
 2855 0258 0122     		movs	r2, #1
 2856 025a 9A73     		strb	r2, [r3, #14]
 2857              	.L147:
 776:modem.c       ****     }
 777:modem.c       ****     
 778:modem.c       ****     // Disable LDO, just in case
 779:modem.c       ****     at_write_command("AT#GPIO=5,0,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2858              		.loc 1 779 0
 2859 025c 4FF4FA62 		mov	r2, #2000
 2860 0260 1349     		ldr	r1, .L151+8
 2861 0262 2848     		ldr	r0, .L151+92
 2862 0264 FFF7FEFF 		bl	at_write_command
 780:modem.c       ****     
 781:modem.c       ****     // Flush modem's GPS data, just in case
 782:modem.c       ****     at_write_command("AT$GPSR=0\r","OK",DEFAULT_AT_TIMEOUT);
 2863              		.loc 1 782 0
 2864 0268 4FF4FA62 		mov	r2, #2000
 2865 026c 1049     		ldr	r1, .L151+8
 2866 026e 2648     		ldr	r0, .L151+96
 2867 0270 FFF7FEFF 		bl	at_write_command
 783:modem.c       ****     
 784:modem.c       ****     
 785:modem.c       ****     
 786:modem.c       ****     
 787:modem.c       ****     
 788:modem.c       ****     /* Relevant to 3g modem, can ignore
 789:modem.c       ****     
 790:modem.c       ****     //Setthe GPS Quality of Servicep arameters. Inorder,theyare<horiz_accuracy(inmeters)>,<vertical
 791:modem.c       ****     //AT$GPSQOS=50,50,100,0
 792:modem.c       ****     at_write_command("AT$GPSQOS=50,50,100,0\r","OK",DEFAULT_AT_TIMEOUT);
 793:modem.c       ****     
 794:modem.c       ****     //SettheSUPLLocationPlatform(SLP)addressoftheserverthatwillprovidetheA-GPS data:
 795:modem.c       ****     at_write_command("AT$LCSSLP=1,\"supl.google.com\"\r","OK",DEFAULT_AT_TIMEOUT);
 796:modem.c       ****     
 797:modem.c       ****     //unlock contedt, simnce its being used by modem
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 70


 798:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 799:modem.c       ****     //Lock context 1 for LoCation Services (LCS) use only
 800:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",5000u);
 801:modem.c       ****     
 802:modem.c       ****     //unlock contedt, simnce its being used by modem
 803:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 804:modem.c       ****     
 805:modem.c       ****     //EnableunsolicitedNMEAGPSdataintheformatof<NMEASENTENCE><CR>
 806:modem.c       ****     at_write_command("AT$GPSNMUN=2,1,0,0,0,0,0\r","OK",DEFAULT_AT_TIMEOUT);
 807:modem.c       ****     
 808:modem.c       ****     //StartGPSlocationservicerequest.Sendingthiscommandsets$GPSP=1
 809:modem.c       ****    uint8 gps_status = 0;
 810:modem.c       ****     for(uint16 i=0;i<200;i++){
 811:modem.c       ****         gps_status = at_write_command("AT$GPSSLSR=1,1,,,,,0,255\r","N",3000u);
 812:modem.c       ****         if(gps_status){
 813:modem.c       ****             break;   
 814:modem.c       ****         }
 815:modem.c       ****   }
 816:modem.c       ****     
 817:modem.c       ****     //$GPGGA,030307.691,4217.7923,N,08341.3240,W,1,05,2.25,225.0,M,,M,,0000*6E
 818:modem.c       ****     //$GPGGA,213852.000,4600.8755,N,09327.7008,W,1,05,3.00,292.0,M,,M,,0000*6E
 819:modem.c       ****     if(gps_status){
 820:modem.c       ****         float lat,lon,alt = 0;
 821:modem.c       ****         if(sscanf(uart_received_string,"%*s,%f,N,%f,W,%*s",&lat,&lon) > 0){
 822:modem.c       ****             gps.altitude = alt;
 823:modem.c       ****             gps.latitude = lat/60;
 824:modem.c       ****             gps.longitude = lon/60;
 825:modem.c       ****             gps.valid = 1;
 826:modem.c       ****         }
 827:modem.c       ****         
 828:modem.c       ****     }
 829:modem.c       ****     
 830:modem.c       ****     //turn off gps
 831:modem.c       ****     //AT$GPSP=0
 832:modem.c       ****     at_write_command("AT$GPSP=0\r","OK",DEFAULT_AT_TIMEOUT);
 833:modem.c       ****     
 834:modem.c       ****     */
 835:modem.c       **** 
 836:modem.c       ****     // Calculate time to lock into GPS location and save in variable lock_time
 837:modem.c       ****     lock_time = getTimeStamp() - lock_time;
 2868              		.loc 1 837 0
 2869 0274 FFF7FEFF 		bl	getTimeStamp
 2870 0278 0246     		mov	r2, r0
 2871 027a D7F8E030 		ldr	r3, [r7, #224]
 2872 027e D31A     		subs	r3, r2, r3
 2873 0280 C7F8E030 		str	r3, [r7, #224]
 838:modem.c       ****     gps_data.time_to_lock = lock_time;
 2874              		.loc 1 838 0
 2875 0284 D7F8E030 		ldr	r3, [r7, #224]
 2876 0288 9AB2     		uxth	r2, r3
 2877 028a 074B     		ldr	r3, .L151
 2878 028c 9A81     		strh	r2, [r3, #12]	@ movhi
 839:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Time to lock GPS: %d", gps_data.time_to_lock);
 2879              		.loc 1 839 0
 2880 028e 064B     		ldr	r3, .L151
 2881 0290 9B89     		ldrh	r3, [r3, #12]
 2882 0292 1A46     		mov	r2, r3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 71


 2883 0294 1D49     		ldr	r1, .L151+100
 2884 0296 0020     		movs	r0, #0
 2885 0298 FFF7FEFF 		bl	printNotif
 840:modem.c       ****     
 841:modem.c       ****     return 1;
 2886              		.loc 1 841 0
 2887 029c 0123     		movs	r3, #1
 2888              	.L150:
 842:modem.c       **** }
 2889              		.loc 1 842 0 discriminator 1
 2890 029e 1846     		mov	r0, r3
 2891 02a0 E837     		adds	r7, r7, #232
 2892              		.cfi_def_cfa_offset 16
 2893 02a2 BD46     		mov	sp, r7
 2894              		.cfi_def_cfa_register 13
 2895              		@ sp needed
 2896 02a4 B0BD     		pop	{r4, r5, r7, pc}
 2897              	.L152:
 2898 02a6 00BF     		.align	2
 2899              	.L151:
 2900 02a8 00000000 		.word	gps_data
 2901 02ac 00000000 		.word	modem_state
 2902 02b0 00000000 		.word	.LC0
 2903 02b4 88060000 		.word	.LC69
 2904 02b8 9C060000 		.word	.LC70
 2905 02bc AC060000 		.word	.LC71
 2906 02c0 B8060000 		.word	.LC72
 2907 02c4 C8060000 		.word	.LC73
 2908 02c8 EC060000 		.word	.LC74
 2909 02cc FC060000 		.word	.LC75
 2910 02d0 D8020000 		.word	.LC27
 2911 02d4 0C070000 		.word	.LC76
 2912 02d8 24070000 		.word	.LC77
 2913 02dc 30070000 		.word	.LC78
 2914 02e0 34070000 		.word	.LC79
 2915 02e4 40070000 		.word	.LC80
 2916 02e8 00000000 		.word	uart_received_string
 2917 02ec 4C070000 		.word	.LC81
 2918 02f0 0000C842 		.word	1120403456
 2919 02f4 00005940 		.word	1079574528
 2920 02f8 00004E40 		.word	1078853632
 2921 02fc 80070000 		.word	.LC82
 2922 0300 84070000 		.word	.LC83
 2923 0304 88070000 		.word	.LC84
 2924 0308 9C070000 		.word	.LC85
 2925 030c A8070000 		.word	.LC86
 2926              		.cfi_endproc
 2927              	.LFE87:
 2928              		.size	modem_get_gps_coordinates, .-modem_get_gps_coordinates
 2929              		.section	.rodata
 2930 07bd 000000   		.align	2
 2931              	.LC87:
 2932 07c0 54455354 		.ascii	"TEST_GPS\000"
 2932      5F475053 
 2932      00
 2933 07c9 000000   		.align	2
 2934              	.LC88:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 72


 2935 07cc 4C41543D 		.ascii	"LAT=%f,LONG=%f,ALT=%f,TTL=%d,VALID=%d\000"
 2935      25662C4C 
 2935      4F4E473D 
 2935      25662C41 
 2935      4C543D25 
 2936              		.section	.text.gps_test,"ax",%progbits
 2937              		.align	2
 2938              		.global	gps_test
 2939              		.thumb
 2940              		.thumb_func
 2941              		.type	gps_test, %function
 2942              	gps_test:
 2943              	.LFB88:
 843:modem.c       **** 
 844:modem.c       **** test_t gps_test(){
 2944              		.loc 1 844 0
 2945              		.cfi_startproc
 2946              		@ args = 0, pretend = 0, frame = 400
 2947              		@ frame_needed = 1, uses_anonymous_args = 0
 2948 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2949              		.cfi_def_cfa_offset 28
 2950              		.cfi_offset 4, -28
 2951              		.cfi_offset 5, -24
 2952              		.cfi_offset 6, -20
 2953              		.cfi_offset 7, -16
 2954              		.cfi_offset 8, -12
 2955              		.cfi_offset 9, -8
 2956              		.cfi_offset 14, -4
 2957 0004 EDB0     		sub	sp, sp, #436
 2958              		.cfi_def_cfa_offset 464
 2959 0006 08AF     		add	r7, sp, #32
 2960              		.cfi_def_cfa 7, 432
 2961 0008 3B1D     		adds	r3, r7, #4
 2962 000a 1860     		str	r0, [r3]
 845:modem.c       ****     // Create variable test of the data structure test_t
 846:modem.c       ****     test_t test;
 847:modem.c       ****     test.status = 0;
 2963              		.loc 1 847 0
 2964 000c 07F10C03 		add	r3, r7, #12
 2965 0010 0022     		movs	r2, #0
 2966 0012 83F88020 		strb	r2, [r3, #128]
 848:modem.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_GPS");
 2967              		.loc 1 848 0
 2968 0016 07F10C03 		add	r3, r7, #12
 2969 001a 254A     		ldr	r2, .L155
 2970 001c 07CA     		ldmia	r2, {r0, r1, r2}
 2971 001e 03C3     		stmia	r3!, {r0, r1}
 2972 0020 1A70     		strb	r2, [r3]
 849:modem.c       ****     
 850:modem.c       ****     modem_get_gps_coordinates();
 2973              		.loc 1 850 0
 2974 0022 FFF7FEFF 		bl	modem_get_gps_coordinates
 851:modem.c       ****     
 852:modem.c       ****     //do some checks here if you want the test to meet some voltage requirement
 853:modem.c       ****     
 854:modem.c       ****     snprintf(test.reason,sizeof(test.reason),"LAT=%f,LONG=%f,ALT=%f,TTL=%d,VALID=%d",
 855:modem.c       ****             gps_data.latitude,
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 73


 2975              		.loc 1 855 0
 2976 0026 234B     		ldr	r3, .L155+4
 2977 0028 1B68     		ldr	r3, [r3]	@ float
 854:modem.c       ****             gps_data.latitude,
 2978              		.loc 1 854 0
 2979 002a 1846     		mov	r0, r3
 2980 002c FFF7FEFF 		bl	__aeabi_f2d
 2981 0030 0446     		mov	r4, r0
 2982 0032 0D46     		mov	r5, r1
 856:modem.c       ****             gps_data.longitude,
 2983              		.loc 1 856 0
 2984 0034 1F4B     		ldr	r3, .L155+4
 2985 0036 5B68     		ldr	r3, [r3, #4]	@ float
 854:modem.c       ****             gps_data.latitude,
 2986              		.loc 1 854 0
 2987 0038 1846     		mov	r0, r3
 2988 003a FFF7FEFF 		bl	__aeabi_f2d
 2989 003e 8046     		mov	r8, r0
 2990 0040 8946     		mov	r9, r1
 857:modem.c       ****             gps_data.altitude,
 2991              		.loc 1 857 0
 2992 0042 1C4B     		ldr	r3, .L155+4
 2993 0044 9B68     		ldr	r3, [r3, #8]	@ float
 854:modem.c       ****             gps_data.latitude,
 2994              		.loc 1 854 0
 2995 0046 1846     		mov	r0, r3
 2996 0048 FFF7FEFF 		bl	__aeabi_f2d
 2997 004c 0246     		mov	r2, r0
 2998 004e 0B46     		mov	r3, r1
 858:modem.c       ****             gps_data.time_to_lock,
 2999              		.loc 1 858 0
 3000 0050 1849     		ldr	r1, .L155+4
 3001 0052 8989     		ldrh	r1, [r1, #12]
 854:modem.c       ****             gps_data.latitude,
 3002              		.loc 1 854 0
 3003 0054 0E46     		mov	r6, r1
 859:modem.c       ****             gps_data.valid);
 3004              		.loc 1 859 0
 3005 0056 1749     		ldr	r1, .L155+4
 3006 0058 897B     		ldrb	r1, [r1, #14]	@ zero_extendqisi2
 854:modem.c       ****             gps_data.latitude,
 3007              		.loc 1 854 0
 3008 005a 3960     		str	r1, [r7]
 3009 005c 07F10C01 		add	r1, r7, #12
 3010 0060 01F18100 		add	r0, r1, #129
 3011 0064 3968     		ldr	r1, [r7]
 3012 0066 0791     		str	r1, [sp, #28]
 3013 0068 0696     		str	r6, [sp, #24]
 3014 006a CDE90423 		strd	r2, [sp, #16]
 3015 006e CDE90289 		strd	r8, [sp, #8]
 3016 0072 CDE90045 		strd	r4, [sp]
 3017 0076 104A     		ldr	r2, .L155+8
 3018 0078 4FF48071 		mov	r1, #256
 3019 007c FFF7FEFF 		bl	snprintf
 860:modem.c       ****     
 861:modem.c       ****     test.status = 1;
 3020              		.loc 1 861 0
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 74


 3021 0080 07F10C03 		add	r3, r7, #12
 3022 0084 0122     		movs	r2, #1
 3023 0086 83F88020 		strb	r2, [r3, #128]
 862:modem.c       ****     
 863:modem.c       ****     return test;
 3024              		.loc 1 863 0
 3025 008a 3B1D     		adds	r3, r7, #4
 3026 008c 1A68     		ldr	r2, [r3]
 3027 008e 07F10C03 		add	r3, r7, #12
 3028 0092 1046     		mov	r0, r2
 3029 0094 1946     		mov	r1, r3
 3030 0096 40F28113 		movw	r3, #385
 3031 009a 1A46     		mov	r2, r3
 3032 009c FFF7FEFF 		bl	memcpy
 864:modem.c       **** }...
 3033              		.loc 1 864 0
 3034 00a0 3B1D     		adds	r3, r7, #4
 3035 00a2 1868     		ldr	r0, [r3]
 3036 00a4 07F5CA77 		add	r7, r7, #404
 3037              		.cfi_def_cfa_offset 28
 3038 00a8 BD46     		mov	sp, r7
 3039              		.cfi_def_cfa_register 13
 3040              		@ sp needed
 3041 00aa BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3042              	.L156:
 3043 00ae 00BF     		.align	2
 3044              	.L155:
 3045 00b0 C0070000 		.word	.LC87
 3046 00b4 00000000 		.word	gps_data
 3047 00b8 CC070000 		.word	.LC88
 3048              		.cfi_endproc
 3049              	.LFE88:
 3050              		.size	gps_test, .-gps_test
 3051              		.text
 3052              	.Letext0:
 3053              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 3054              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 3055              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 3056              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 3057              		.file 6 "testing.h"
 3058              		.file 7 "data.h"
 3059              		.file 8 "modem.h"
 3060              		.file 9 "notoriOS.h"
 3061              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 3062              		.section	.debug_info,"",%progbits
 3063              	.Ldebug_info0:
 3064 0000 5E0C0000 		.4byte	0xc5e
 3065 0004 0400     		.2byte	0x4
 3066 0006 00000000 		.4byte	.Ldebug_abbrev0
 3067 000a 04       		.byte	0x4
 3068 000b 01       		.uleb128 0x1
 3069 000c 64000000 		.4byte	.LASF165
 3070 0010 0C       		.byte	0xc
 3071 0011 F2030000 		.4byte	.LASF166
 3072 0015 48080000 		.4byte	.LASF167
 3073 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3074 001d 00000000 		.4byte	0
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 75


 3075 0021 00000000 		.4byte	.Ldebug_line0
 3076 0025 02       		.uleb128 0x2
 3077 0026 01       		.byte	0x1
 3078 0027 06       		.byte	0x6
 3079 0028 67010000 		.4byte	.LASF0
 3080 002c 03       		.uleb128 0x3
 3081 002d 38000000 		.4byte	.LASF4
 3082 0031 02       		.byte	0x2
 3083 0032 1D       		.byte	0x1d
 3084 0033 37000000 		.4byte	0x37
 3085 0037 02       		.uleb128 0x2
 3086 0038 01       		.byte	0x1
 3087 0039 08       		.byte	0x8
 3088 003a C9050000 		.4byte	.LASF1
 3089 003e 02       		.uleb128 0x2
 3090 003f 02       		.byte	0x2
 3091 0040 05       		.byte	0x5
 3092 0041 2A040000 		.4byte	.LASF2
 3093 0045 02       		.uleb128 0x2
 3094 0046 02       		.byte	0x2
 3095 0047 07       		.byte	0x7
 3096 0048 75020000 		.4byte	.LASF3
 3097 004c 03       		.uleb128 0x3
 3098 004d 3F040000 		.4byte	.LASF5
 3099 0051 02       		.byte	0x2
 3100 0052 3F       		.byte	0x3f
 3101 0053 57000000 		.4byte	0x57
 3102 0057 02       		.uleb128 0x2
 3103 0058 04       		.byte	0x4
 3104 0059 05       		.byte	0x5
 3105 005a EF010000 		.4byte	.LASF6
 3106 005e 03       		.uleb128 0x3
 3107 005f A0020000 		.4byte	.LASF7
 3108 0063 02       		.byte	0x2
 3109 0064 41       		.byte	0x41
 3110 0065 69000000 		.4byte	0x69
 3111 0069 02       		.uleb128 0x2
 3112 006a 04       		.byte	0x4
 3113 006b 07       		.byte	0x7
 3114 006c 5F030000 		.4byte	.LASF8
 3115 0070 02       		.uleb128 0x2
 3116 0071 08       		.byte	0x8
 3117 0072 05       		.byte	0x5
 3118 0073 59010000 		.4byte	.LASF9
 3119 0077 02       		.uleb128 0x2
 3120 0078 08       		.byte	0x8
 3121 0079 07       		.byte	0x7
 3122 007a FF000000 		.4byte	.LASF10
 3123 007e 04       		.uleb128 0x4
 3124 007f 04       		.byte	0x4
 3125 0080 05       		.byte	0x5
 3126 0081 696E7400 		.ascii	"int\000"
 3127 0085 02       		.uleb128 0x2
 3128 0086 04       		.byte	0x4
 3129 0087 07       		.byte	0x7
 3130 0088 AF060000 		.4byte	.LASF11
 3131 008c 03       		.uleb128 0x3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 76


 3132 008d F7070000 		.4byte	.LASF12
 3133 0091 03       		.byte	0x3
 3134 0092 18       		.byte	0x18
 3135 0093 2C000000 		.4byte	0x2c
 3136 0097 03       		.uleb128 0x3
 3137 0098 C1050000 		.4byte	.LASF13
 3138 009c 03       		.byte	0x3
 3139 009d 2C       		.byte	0x2c
 3140 009e 4C000000 		.4byte	0x4c
 3141 00a2 03       		.uleb128 0x3
 3142 00a3 87070000 		.4byte	.LASF14
 3143 00a7 03       		.byte	0x3
 3144 00a8 30       		.byte	0x30
 3145 00a9 5E000000 		.4byte	0x5e
 3146 00ad 05       		.uleb128 0x5
 3147 00ae 27020000 		.4byte	.LASF15
 3148 00b2 04       		.byte	0x4
 3149 00b3 9201     		.2byte	0x192
 3150 00b5 37000000 		.4byte	0x37
 3151 00b9 05       		.uleb128 0x5
 3152 00ba 0B000000 		.4byte	.LASF16
 3153 00be 04       		.byte	0x4
 3154 00bf 9301     		.2byte	0x193
 3155 00c1 45000000 		.4byte	0x45
 3156 00c5 05       		.uleb128 0x5
 3157 00c6 88020000 		.4byte	.LASF17
 3158 00ca 04       		.byte	0x4
 3159 00cb 9401     		.2byte	0x194
 3160 00cd 69000000 		.4byte	0x69
 3161 00d1 05       		.uleb128 0x5
 3162 00d2 FF070000 		.4byte	.LASF18
 3163 00d6 04       		.byte	0x4
 3164 00d7 9601     		.2byte	0x196
 3165 00d9 3E000000 		.4byte	0x3e
 3166 00dd 05       		.uleb128 0x5
 3167 00de 34020000 		.4byte	.LASF19
 3168 00e2 04       		.byte	0x4
 3169 00e3 9701     		.2byte	0x197
 3170 00e5 57000000 		.4byte	0x57
 3171 00e9 02       		.uleb128 0x2
 3172 00ea 04       		.byte	0x4
 3173 00eb 04       		.byte	0x4
 3174 00ec 71050000 		.4byte	.LASF20
 3175 00f0 02       		.uleb128 0x2
 3176 00f1 08       		.byte	0x8
 3177 00f2 04       		.byte	0x4
 3178 00f3 2D020000 		.4byte	.LASF21
 3179 00f7 02       		.uleb128 0x2
 3180 00f8 01       		.byte	0x1
 3181 00f9 08       		.byte	0x8
 3182 00fa 96060000 		.4byte	.LASF22
 3183 00fe 02       		.uleb128 0x2
 3184 00ff 08       		.byte	0x8
 3185 0100 04       		.byte	0x4
 3186 0101 8A060000 		.4byte	.LASF23
 3187 0105 02       		.uleb128 0x2
 3188 0106 04       		.byte	0x4
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 77


 3189 0107 07       		.byte	0x7
 3190 0108 C1040000 		.4byte	.LASF24
 3191 010c 06       		.uleb128 0x6
 3192 010d 04       		.byte	0x4
 3193 010e F7000000 		.4byte	0xf7
 3194 0112 06       		.uleb128 0x6
 3195 0113 04       		.byte	0x4
 3196 0114 18010000 		.4byte	0x118
 3197 0118 07       		.uleb128 0x7
 3198 0119 F7000000 		.4byte	0xf7
 3199 011d 08       		.uleb128 0x8
 3200 011e F7000000 		.4byte	0xf7
 3201 0122 2D010000 		.4byte	0x12d
 3202 0126 09       		.uleb128 0x9
 3203 0127 05010000 		.4byte	0x105
 3204 012b 17       		.byte	0x17
 3205 012c 00       		.byte	0
 3206 012d 0A       		.uleb128 0xa
 3207 012e 746D00   		.ascii	"tm\000"
 3208 0131 24       		.byte	0x24
 3209 0132 05       		.byte	0x5
 3210 0133 21       		.byte	0x21
 3211 0134 A5010000 		.4byte	0x1a5
 3212 0138 0B       		.uleb128 0xb
 3213 0139 90070000 		.4byte	.LASF25
 3214 013d 05       		.byte	0x5
 3215 013e 23       		.byte	0x23
 3216 013f 7E000000 		.4byte	0x7e
 3217 0143 00       		.byte	0
 3218 0144 0B       		.uleb128 0xb
 3219 0145 BA040000 		.4byte	.LASF26
 3220 0149 05       		.byte	0x5
 3221 014a 24       		.byte	0x24
 3222 014b 7E000000 		.4byte	0x7e
 3223 014f 04       		.byte	0x4
 3224 0150 0B       		.uleb128 0xb
 3225 0151 18000000 		.4byte	.LASF27
 3226 0155 05       		.byte	0x5
 3227 0156 25       		.byte	0x25
 3228 0157 7E000000 		.4byte	0x7e
 3229 015b 08       		.byte	0x8
 3230 015c 0B       		.uleb128 0xb
 3231 015d 72070000 		.4byte	.LASF28
 3232 0161 05       		.byte	0x5
 3233 0162 26       		.byte	0x26
 3234 0163 7E000000 		.4byte	0x7e
 3235 0167 0C       		.byte	0xc
 3236 0168 0B       		.uleb128 0xb
 3237 0169 C2020000 		.4byte	.LASF29
 3238 016d 05       		.byte	0x5
 3239 016e 27       		.byte	0x27
 3240 016f 7E000000 		.4byte	0x7e
 3241 0173 10       		.byte	0x10
 3242 0174 0B       		.uleb128 0xb
 3243 0175 17030000 		.4byte	.LASF30
 3244 0179 05       		.byte	0x5
 3245 017a 28       		.byte	0x28
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 78


 3246 017b 7E000000 		.4byte	0x7e
 3247 017f 14       		.byte	0x14
 3248 0180 0B       		.uleb128 0xb
 3249 0181 6B060000 		.4byte	.LASF31
 3250 0185 05       		.byte	0x5
 3251 0186 29       		.byte	0x29
 3252 0187 7E000000 		.4byte	0x7e
 3253 018b 18       		.byte	0x18
 3254 018c 0B       		.uleb128 0xb
 3255 018d 20000000 		.4byte	.LASF32
 3256 0191 05       		.byte	0x5
 3257 0192 2A       		.byte	0x2a
 3258 0193 7E000000 		.4byte	0x7e
 3259 0197 1C       		.byte	0x1c
 3260 0198 0B       		.uleb128 0xb
 3261 0199 B9030000 		.4byte	.LASF33
 3262 019d 05       		.byte	0x5
 3263 019e 2B       		.byte	0x2b
 3264 019f 7E000000 		.4byte	0x7e
 3265 01a3 20       		.byte	0x20
 3266 01a4 00       		.byte	0
 3267 01a5 0C       		.uleb128 0xc
 3268 01a6 8101     		.2byte	0x181
 3269 01a8 06       		.byte	0x6
 3270 01a9 0A       		.byte	0xa
 3271 01aa D3010000 		.4byte	0x1d3
 3272 01ae 0B       		.uleb128 0xb
 3273 01af 0B050000 		.4byte	.LASF34
 3274 01b3 06       		.byte	0x6
 3275 01b4 0C       		.byte	0xc
 3276 01b5 D3010000 		.4byte	0x1d3
 3277 01b9 00       		.byte	0
 3278 01ba 0B       		.uleb128 0xb
 3279 01bb C8070000 		.4byte	.LASF35
 3280 01bf 06       		.byte	0x6
 3281 01c0 0D       		.byte	0xd
 3282 01c1 AD000000 		.4byte	0xad
 3283 01c5 80       		.byte	0x80
 3284 01c6 0B       		.uleb128 0xb
 3285 01c7 3F060000 		.4byte	.LASF36
 3286 01cb 06       		.byte	0x6
 3287 01cc 0F       		.byte	0xf
 3288 01cd E3010000 		.4byte	0x1e3
 3289 01d1 81       		.byte	0x81
 3290 01d2 00       		.byte	0
 3291 01d3 08       		.uleb128 0x8
 3292 01d4 F7000000 		.4byte	0xf7
 3293 01d8 E3010000 		.4byte	0x1e3
 3294 01dc 09       		.uleb128 0x9
 3295 01dd 05010000 		.4byte	0x105
 3296 01e1 7F       		.byte	0x7f
 3297 01e2 00       		.byte	0
 3298 01e3 08       		.uleb128 0x8
 3299 01e4 F7000000 		.4byte	0xf7
 3300 01e8 F3010000 		.4byte	0x1f3
 3301 01ec 09       		.uleb128 0x9
 3302 01ed 05010000 		.4byte	0x105
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 79


 3303 01f1 FF       		.byte	0xff
 3304 01f2 00       		.byte	0
 3305 01f3 03       		.uleb128 0x3
 3306 01f4 27060000 		.4byte	.LASF37
 3307 01f8 06       		.byte	0x6
 3308 01f9 10       		.byte	0x10
 3309 01fa A5010000 		.4byte	0x1a5
 3310 01fe 0D       		.uleb128 0xd
 3311 01ff 2C       		.byte	0x2c
 3312 0200 07       		.byte	0x7
 3313 0201 14       		.byte	0x14
 3314 0202 2B020000 		.4byte	0x22b
 3315 0206 0E       		.uleb128 0xe
 3316 0207 6B657900 		.ascii	"key\000"
 3317 020b 07       		.byte	0x7
 3318 020c 15       		.byte	0x15
 3319 020d 2B020000 		.4byte	0x22b
 3320 0211 00       		.byte	0
 3321 0212 0B       		.uleb128 0xb
 3322 0213 12000000 		.4byte	.LASF38
 3323 0217 07       		.byte	0x7
 3324 0218 16       		.byte	0x16
 3325 0219 2B020000 		.4byte	0x22b
 3326 021d 14       		.byte	0x14
 3327 021e 0B       		.uleb128 0xb
 3328 021f 8D080000 		.4byte	.LASF39
 3329 0223 07       		.byte	0x7
 3330 0224 17       		.byte	0x17
 3331 0225 DD000000 		.4byte	0xdd
 3332 0229 28       		.byte	0x28
 3333 022a 00       		.byte	0
 3334 022b 08       		.uleb128 0x8
 3335 022c F7000000 		.4byte	0xf7
 3336 0230 3B020000 		.4byte	0x23b
 3337 0234 09       		.uleb128 0x9
 3338 0235 05010000 		.4byte	0x105
 3339 0239 13       		.byte	0x13
 3340 023a 00       		.byte	0
 3341 023b 03       		.uleb128 0x3
 3342 023c 3F030000 		.4byte	.LASF40
 3343 0240 07       		.byte	0x7
 3344 0241 19       		.byte	0x19
 3345 0242 FE010000 		.4byte	0x1fe
 3346 0246 0D       		.uleb128 0xd
 3347 0247 3C       		.byte	0x3c
 3348 0248 08       		.byte	0x8
 3349 0249 39       		.byte	0x39
 3350 024a 73020000 		.4byte	0x273
 3351 024e 0B       		.uleb128 0xb
 3352 024f 6B070000 		.4byte	.LASF41
 3353 0253 08       		.byte	0x8
 3354 0254 3A       		.byte	0x3a
 3355 0255 2B020000 		.4byte	0x22b
 3356 0259 00       		.byte	0
 3357 025a 0B       		.uleb128 0xb
 3358 025b C1060000 		.4byte	.LASF42
 3359 025f 08       		.byte	0x8
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 80


 3360 0260 3B       		.byte	0x3b
 3361 0261 2B020000 		.4byte	0x22b
 3362 0265 14       		.byte	0x14
 3363 0266 0B       		.uleb128 0xb
 3364 0267 3A060000 		.4byte	.LASF43
 3365 026b 08       		.byte	0x8
 3366 026c 3C       		.byte	0x3c
 3367 026d 2B020000 		.4byte	0x22b
 3368 0271 28       		.byte	0x28
 3369 0272 00       		.byte	0
 3370 0273 03       		.uleb128 0x3
 3371 0274 D5060000 		.4byte	.LASF44
 3372 0278 08       		.byte	0x8
 3373 0279 3E       		.byte	0x3e
 3374 027a 46020000 		.4byte	0x246
 3375 027e 0D       		.uleb128 0xd
 3376 027f 20       		.byte	0x20
 3377 0280 08       		.byte	0x8
 3378 0281 40       		.byte	0x40
 3379 0282 E7020000 		.4byte	0x2e7
 3380 0286 0B       		.uleb128 0xb
 3381 0287 E9010000 		.4byte	.LASF45
 3382 028b 08       		.byte	0x8
 3383 028c 41       		.byte	0x41
 3384 028d 7E000000 		.4byte	0x7e
 3385 0291 00       		.byte	0
 3386 0292 0E       		.uleb128 0xe
 3387 0293 62657200 		.ascii	"ber\000"
 3388 0297 08       		.byte	0x8
 3389 0298 42       		.byte	0x42
 3390 0299 7E000000 		.4byte	0x7e
 3391 029d 04       		.byte	0x4
 3392 029e 0B       		.uleb128 0xb
 3393 029f 08060000 		.4byte	.LASF46
 3394 02a3 08       		.byte	0x8
 3395 02a4 43       		.byte	0x43
 3396 02a5 7E000000 		.4byte	0x7e
 3397 02a9 08       		.byte	0x8
 3398 02aa 0B       		.uleb128 0xb
 3399 02ab 73010000 		.4byte	.LASF47
 3400 02af 08       		.byte	0x8
 3401 02b0 44       		.byte	0x44
 3402 02b1 7E000000 		.4byte	0x7e
 3403 02b5 0C       		.byte	0xc
 3404 02b6 0B       		.uleb128 0xb
 3405 02b7 ED050000 		.4byte	.LASF48
 3406 02bb 08       		.byte	0x8
 3407 02bc 45       		.byte	0x45
 3408 02bd 7E000000 		.4byte	0x7e
 3409 02c1 10       		.byte	0x10
 3410 02c2 0B       		.uleb128 0xb
 3411 02c3 46060000 		.4byte	.LASF49
 3412 02c7 08       		.byte	0x8
 3413 02c8 46       		.byte	0x46
 3414 02c9 7E000000 		.4byte	0x7e
 3415 02cd 14       		.byte	0x14
 3416 02ce 0B       		.uleb128 0xb
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 81


 3417 02cf 95010000 		.4byte	.LASF50
 3418 02d3 08       		.byte	0x8
 3419 02d4 47       		.byte	0x47
 3420 02d5 7E000000 		.4byte	0x7e
 3421 02d9 18       		.byte	0x18
 3422 02da 0B       		.uleb128 0xb
 3423 02db 0D040000 		.4byte	.LASF51
 3424 02df 08       		.byte	0x8
 3425 02e0 48       		.byte	0x48
 3426 02e1 7E000000 		.4byte	0x7e
 3427 02e5 1C       		.byte	0x1c
 3428 02e6 00       		.byte	0
 3429 02e7 03       		.uleb128 0x3
 3430 02e8 4B060000 		.4byte	.LASF52
 3431 02ec 08       		.byte	0x8
 3432 02ed 4A       		.byte	0x4a
 3433 02ee 7E020000 		.4byte	0x27e
 3434 02f2 0D       		.uleb128 0xd
 3435 02f3 10       		.byte	0x10
 3436 02f4 08       		.byte	0x8
 3437 02f5 4C       		.byte	0x4c
 3438 02f6 37030000 		.4byte	0x337
 3439 02fa 0B       		.uleb128 0xb
 3440 02fb 02050000 		.4byte	.LASF53
 3441 02ff 08       		.byte	0x8
 3442 0300 4D       		.byte	0x4d
 3443 0301 E9000000 		.4byte	0xe9
 3444 0305 00       		.byte	0
 3445 0306 0B       		.uleb128 0xb
 3446 0307 5A000000 		.4byte	.LASF54
 3447 030b 08       		.byte	0x8
 3448 030c 4E       		.byte	0x4e
 3449 030d E9000000 		.4byte	0xe9
 3450 0311 04       		.byte	0x4
 3451 0312 0B       		.uleb128 0xb
 3452 0313 1E020000 		.4byte	.LASF55
 3453 0317 08       		.byte	0x8
 3454 0318 4F       		.byte	0x4f
 3455 0319 E9000000 		.4byte	0xe9
 3456 031d 08       		.byte	0x8
 3457 031e 0B       		.uleb128 0xb
 3458 031f 9F030000 		.4byte	.LASF56
 3459 0323 08       		.byte	0x8
 3460 0324 50       		.byte	0x50
 3461 0325 B9000000 		.4byte	0xb9
 3462 0329 0C       		.byte	0xc
 3463 032a 0B       		.uleb128 0xb
 3464 032b 7A070000 		.4byte	.LASF57
 3465 032f 08       		.byte	0x8
 3466 0330 51       		.byte	0x51
 3467 0331 AD000000 		.4byte	0xad
 3468 0335 0E       		.byte	0xe
 3469 0336 00       		.byte	0
 3470 0337 03       		.uleb128 0x3
 3471 0338 E2060000 		.4byte	.LASF58
 3472 033c 08       		.byte	0x8
 3473 033d 53       		.byte	0x53
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 82


 3474 033e F2020000 		.4byte	0x2f2
 3475 0342 0D       		.uleb128 0xd
 3476 0343 06       		.byte	0x6
 3477 0344 08       		.byte	0x8
 3478 0345 56       		.byte	0x56
 3479 0346 93030000 		.4byte	0x393
 3480 034a 0B       		.uleb128 0xb
 3481 034b 3A020000 		.4byte	.LASF59
 3482 034f 08       		.byte	0x8
 3483 0350 58       		.byte	0x58
 3484 0351 AD000000 		.4byte	0xad
 3485 0355 00       		.byte	0
 3486 0356 0B       		.uleb128 0xb
 3487 0357 96050000 		.4byte	.LASF60
 3488 035b 08       		.byte	0x8
 3489 035c 5A       		.byte	0x5a
 3490 035d 93030000 		.4byte	0x393
 3491 0361 01       		.byte	0x1
 3492 0362 0B       		.uleb128 0xb
 3493 0363 FA060000 		.4byte	.LASF61
 3494 0367 08       		.byte	0x8
 3495 0368 5C       		.byte	0x5c
 3496 0369 AD000000 		.4byte	0xad
 3497 036d 02       		.byte	0x2
 3498 036e 0B       		.uleb128 0xb
 3499 036f F2050000 		.4byte	.LASF62
 3500 0373 08       		.byte	0x8
 3501 0374 5E       		.byte	0x5e
 3502 0375 AD000000 		.4byte	0xad
 3503 0379 03       		.byte	0x3
 3504 037a 0B       		.uleb128 0xb
 3505 037b D2020000 		.4byte	.LASF63
 3506 037f 08       		.byte	0x8
 3507 0380 61       		.byte	0x61
 3508 0381 AD000000 		.4byte	0xad
 3509 0385 04       		.byte	0x4
 3510 0386 0E       		.uleb128 0xe
 3511 0387 67707300 		.ascii	"gps\000"
 3512 038b 08       		.byte	0x8
 3513 038c 63       		.byte	0x63
 3514 038d AD000000 		.4byte	0xad
 3515 0391 05       		.byte	0x5
 3516 0392 00       		.byte	0
 3517 0393 02       		.uleb128 0x2
 3518 0394 01       		.byte	0x1
 3519 0395 02       		.byte	0x2
 3520 0396 BB050000 		.4byte	.LASF64
 3521 039a 03       		.uleb128 0x3
 3522 039b 85040000 		.4byte	.LASF65
 3523 039f 08       		.byte	0x8
 3524 03a0 65       		.byte	0x65
 3525 03a1 42030000 		.4byte	0x342
 3526 03a5 0D       		.uleb128 0xd
 3527 03a6 06       		.byte	0x6
 3528 03a7 09       		.byte	0x9
 3529 03a8 2D       		.byte	0x2d
 3530 03a9 DE030000 		.4byte	0x3de
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 83


 3531 03ad 0B       		.uleb128 0xb
 3532 03ae 78010000 		.4byte	.LASF66
 3533 03b2 09       		.byte	0x9
 3534 03b3 2F       		.byte	0x2f
 3535 03b4 B9000000 		.4byte	0xb9
 3536 03b8 00       		.byte	0
 3537 03b9 0B       		.uleb128 0xb
 3538 03ba F8010000 		.4byte	.LASF67
 3539 03be 09       		.byte	0x9
 3540 03bf 30       		.byte	0x30
 3541 03c0 D1000000 		.4byte	0xd1
 3542 03c4 02       		.byte	0x2
 3543 03c5 0B       		.uleb128 0xb
 3544 03c6 14080000 		.4byte	.LASF68
 3545 03ca 09       		.byte	0x9
 3546 03cb 31       		.byte	0x31
 3547 03cc AD000000 		.4byte	0xad
 3548 03d0 04       		.byte	0x4
 3549 03d1 0B       		.uleb128 0xb
 3550 03d2 42000000 		.4byte	.LASF69
 3551 03d6 09       		.byte	0x9
 3552 03d7 32       		.byte	0x32
 3553 03d8 AD000000 		.4byte	0xad
 3554 03dc 05       		.byte	0x5
 3555 03dd 00       		.byte	0
 3556 03de 03       		.uleb128 0x3
 3557 03df B5050000 		.4byte	.LASF70
 3558 03e3 09       		.byte	0x9
 3559 03e4 35       		.byte	0x35
 3560 03e5 E9030000 		.4byte	0x3e9
 3561 03e9 0F       		.uleb128 0xf
 3562 03ea A5030000 		.4byte	0x3a5
 3563 03ee 0D       		.uleb128 0xd
 3564 03ef 1C       		.byte	0x1c
 3565 03f0 09       		.byte	0x9
 3566 03f1 38       		.byte	0x38
 3567 03f2 0F040000 		.4byte	0x40f
 3568 03f6 0B       		.uleb128 0xb
 3569 03f7 C2030000 		.4byte	.LASF71
 3570 03fb 09       		.byte	0x9
 3571 03fc 3A       		.byte	0x3a
 3572 03fd 0F040000 		.4byte	0x40f
 3573 0401 00       		.byte	0
 3574 0402 0B       		.uleb128 0xb
 3575 0403 D5030000 		.4byte	.LASF72
 3576 0407 09       		.byte	0x9
 3577 0408 3B       		.byte	0x3b
 3578 0409 1D010000 		.4byte	0x11d
 3579 040d 04       		.byte	0x4
 3580 040e 00       		.byte	0
 3581 040f 06       		.uleb128 0x6
 3582 0410 04       		.byte	0x4
 3583 0411 73020000 		.4byte	0x273
 3584 0415 03       		.uleb128 0x3
 3585 0416 7A040000 		.4byte	.LASF73
 3586 041a 09       		.byte	0x9
 3587 041b 3D       		.byte	0x3d
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 84


 3588 041c EE030000 		.4byte	0x3ee
 3589 0420 0D       		.uleb128 0xd
 3590 0421 68       		.byte	0x68
 3591 0422 09       		.byte	0x9
 3592 0423 43       		.byte	0x43
 3593 0424 41040000 		.4byte	0x441
 3594 0428 0B       		.uleb128 0xb
 3595 0429 CD030000 		.4byte	.LASF74
 3596 042d 09       		.byte	0x9
 3597 042e 48       		.byte	0x48
 3598 042f 41040000 		.4byte	0x441
 3599 0433 00       		.byte	0
 3600 0434 0B       		.uleb128 0xb
 3601 0435 B1030000 		.4byte	.LASF75
 3602 0439 09       		.byte	0x9
 3603 043a 49       		.byte	0x49
 3604 043b 7E000000 		.4byte	0x7e
 3605 043f 64       		.byte	0x64
 3606 0440 00       		.byte	0
 3607 0441 08       		.uleb128 0x8
 3608 0442 F7000000 		.4byte	0xf7
 3609 0446 51040000 		.4byte	0x451
 3610 044a 09       		.uleb128 0x9
 3611 044b 05010000 		.4byte	0x105
 3612 044f 63       		.byte	0x63
 3613 0450 00       		.byte	0
 3614 0451 03       		.uleb128 0x3
 3615 0452 E8070000 		.4byte	.LASF76
 3616 0456 09       		.byte	0x9
 3617 0457 4F       		.byte	0x4f
 3618 0458 20040000 		.4byte	0x420
 3619 045c 10       		.uleb128 0x10
 3620 045d A8050000 		.4byte	.LASF108
 3621 0461 01       		.byte	0x1
 3622 0462 12       		.byte	0x12
 3623 0463 00000000 		.4byte	.LFB64
 3624 0467 44000000 		.4byte	.LFE64-.LFB64
 3625 046b 01       		.uleb128 0x1
 3626 046c 9C       		.byte	0x9c
 3627 046d 11       		.uleb128 0x11
 3628 046e 77050000 		.4byte	.LASF77
 3629 0472 01       		.byte	0x1
 3630 0473 1C       		.byte	0x1c
 3631 0474 00000000 		.4byte	.LFB65
 3632 0478 6C000000 		.4byte	.LFE65-.LFB65
 3633 047c 01       		.uleb128 0x1
 3634 047d 9C       		.byte	0x9c
 3635 047e 11       		.uleb128 0x11
 3636 047f 4B070000 		.4byte	.LASF78
 3637 0483 01       		.byte	0x1
 3638 0484 36       		.byte	0x36
 3639 0485 00000000 		.4byte	.LFB66
 3640 0489 32000000 		.4byte	.LFE66-.LFB66
 3641 048d 01       		.uleb128 0x1
 3642 048e 9C       		.byte	0x9c
 3643 048f 11       		.uleb128 0x11
 3644 0490 29030000 		.4byte	.LASF79
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 85


 3645 0494 01       		.byte	0x1
 3646 0495 46       		.byte	0x46
 3647 0496 00000000 		.4byte	.LFB67
 3648 049a 20000000 		.4byte	.LFE67-.LFB67
 3649 049e 01       		.uleb128 0x1
 3650 049f 9C       		.byte	0x9c
 3651 04a0 11       		.uleb128 0x11
 3652 04a1 7C080000 		.4byte	.LASF80
 3653 04a5 01       		.byte	0x1
 3654 04a6 4F       		.byte	0x4f
 3655 04a7 00000000 		.4byte	.LFB68
 3656 04ab 40000000 		.4byte	.LFE68-.LFB68
 3657 04af 01       		.uleb128 0x1
 3658 04b0 9C       		.byte	0x9c
 3659 04b1 12       		.uleb128 0x12
 3660 04b2 E3030000 		.4byte	.LASF94
 3661 04b6 01       		.byte	0x1
 3662 04b7 61       		.byte	0x61
 3663 04b8 AD000000 		.4byte	0xad
 3664 04bc 00000000 		.4byte	.LFB69
 3665 04c0 DC000000 		.4byte	.LFE69-.LFB69
 3666 04c4 01       		.uleb128 0x1
 3667 04c5 9C       		.byte	0x9c
 3668 04c6 25050000 		.4byte	0x525
 3669 04ca 13       		.uleb128 0x13
 3670 04cb 9F050000 		.4byte	.LASF81
 3671 04cf 01       		.byte	0x1
 3672 04d0 6A       		.byte	0x6a
 3673 04d1 AD000000 		.4byte	0xad
 3674 04d5 02       		.uleb128 0x2
 3675 04d6 91       		.byte	0x91
 3676 04d7 77       		.sleb128 -9
 3677 04d8 13       		.uleb128 0x13
 3678 04d9 0B080000 		.4byte	.LASF82
 3679 04dd 01       		.byte	0x1
 3680 04de 6B       		.byte	0x6b
 3681 04df AD000000 		.4byte	0xad
 3682 04e3 02       		.uleb128 0x2
 3683 04e4 91       		.byte	0x91
 3684 04e5 74       		.sleb128 -12
 3685 04e6 13       		.uleb128 0x13
 3686 04e7 22080000 		.4byte	.LASF83
 3687 04eb 01       		.byte	0x1
 3688 04ec 6D       		.byte	0x6d
 3689 04ed 57000000 		.4byte	0x57
 3690 04f1 02       		.uleb128 0x2
 3691 04f2 91       		.byte	0x91
 3692 04f3 70       		.sleb128 -16
 3693 04f4 14       		.uleb128 0x14
 3694 04f5 26000000 		.4byte	.LBB2
 3695 04f9 4A000000 		.4byte	.LBE2-.LBB2
 3696 04fd 13       		.uleb128 0x13
 3697 04fe 0B080000 		.4byte	.LASF82
 3698 0502 01       		.byte	0x1
 3699 0503 70       		.byte	0x70
 3700 0504 AD000000 		.4byte	0xad
 3701 0508 02       		.uleb128 0x2
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 86


 3702 0509 91       		.byte	0x91
 3703 050a 76       		.sleb128 -10
 3704 050b 14       		.uleb128 0x14
 3705 050c 2C000000 		.4byte	.LBB3
 3706 0510 2A000000 		.4byte	.LBE3-.LBB3
 3707 0514 13       		.uleb128 0x13
 3708 0515 55030000 		.4byte	.LASF84
 3709 0519 01       		.byte	0x1
 3710 051a 72       		.byte	0x72
 3711 051b AD000000 		.4byte	0xad
 3712 051f 02       		.uleb128 0x2
 3713 0520 91       		.byte	0x91
 3714 0521 75       		.sleb128 -11
 3715 0522 00       		.byte	0
 3716 0523 00       		.byte	0
 3717 0524 00       		.byte	0
 3718 0525 11       		.uleb128 0x11
 3719 0526 73060000 		.4byte	.LASF85
 3720 052a 01       		.byte	0x1
 3721 052b 93       		.byte	0x93
 3722 052c 00000000 		.4byte	.LFB70
 3723 0530 1C000000 		.4byte	.LFE70-.LFB70
 3724 0534 01       		.uleb128 0x1
 3725 0535 9C       		.byte	0x9c
 3726 0536 11       		.uleb128 0x11
 3727 0537 59060000 		.4byte	.LASF86
 3728 053b 01       		.byte	0x1
 3729 053c 9B       		.byte	0x9b
 3730 053d 00000000 		.4byte	.LFB71
 3731 0541 28000000 		.4byte	.LFE71-.LFB71
 3732 0545 01       		.uleb128 0x1
 3733 0546 9C       		.byte	0x9c
 3734 0547 15       		.uleb128 0x15
 3735 0548 69040000 		.4byte	.LASF98
 3736 054c 01       		.byte	0x1
 3737 054d A6       		.byte	0xa6
 3738 054e 8C000000 		.4byte	0x8c
 3739 0552 00000000 		.4byte	.LFB72
 3740 0556 C8000000 		.4byte	.LFE72-.LFB72
 3741 055a 01       		.uleb128 0x1
 3742 055b 9C       		.byte	0x9c
 3743 055c D9050000 		.4byte	0x5d9
 3744 0560 16       		.uleb128 0x16
 3745 0561 57050000 		.4byte	.LASF87
 3746 0565 01       		.byte	0x1
 3747 0566 A6       		.byte	0xa6
 3748 0567 0C010000 		.4byte	0x10c
 3749 056b 02       		.uleb128 0x2
 3750 056c 91       		.byte	0x91
 3751 056d 5C       		.sleb128 -36
 3752 056e 16       		.uleb128 0x16
 3753 056f 2C080000 		.4byte	.LASF88
 3754 0573 01       		.byte	0x1
 3755 0574 A6       		.byte	0xa6
 3756 0575 0C010000 		.4byte	0x10c
 3757 0579 02       		.uleb128 0x2
 3758 057a 91       		.byte	0x91
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 87


 3759 057b 58       		.sleb128 -40
 3760 057c 16       		.uleb128 0x16
 3761 057d 80030000 		.4byte	.LASF89
 3762 0581 01       		.byte	0x1
 3763 0582 A6       		.byte	0xa6
 3764 0583 A2000000 		.4byte	0xa2
 3765 0587 02       		.uleb128 0x2
 3766 0588 91       		.byte	0x91
 3767 0589 54       		.sleb128 -44
 3768 058a 13       		.uleb128 0x13
 3769 058b 5E040000 		.4byte	.LASF90
 3770 058f 01       		.byte	0x1
 3771 0590 A8       		.byte	0xa8
 3772 0591 C5000000 		.4byte	0xc5
 3773 0595 02       		.uleb128 0x2
 3774 0596 91       		.byte	0x91
 3775 0597 74       		.sleb128 -12
 3776 0598 14       		.uleb128 0x14
 3777 0599 16000000 		.4byte	.LBB4
 3778 059d 88000000 		.4byte	.LBE4-.LBB4
 3779 05a1 13       		.uleb128 0x13
 3780 05a2 60050000 		.4byte	.LASF91
 3781 05a6 01       		.byte	0x1
 3782 05a7 AC       		.byte	0xac
 3783 05a8 0C010000 		.4byte	0x10c
 3784 05ac 02       		.uleb128 0x2
 3785 05ad 91       		.byte	0x91
 3786 05ae 64       		.sleb128 -28
 3787 05af 13       		.uleb128 0x13
 3788 05b0 E7050000 		.4byte	.LASF92
 3789 05b4 01       		.byte	0x1
 3790 05b5 AD       		.byte	0xad
 3791 05b6 A2000000 		.4byte	0xa2
 3792 05ba 02       		.uleb128 0x2
 3793 05bb 91       		.byte	0x91
 3794 05bc 6C       		.sleb128 -20
 3795 05bd 17       		.uleb128 0x17
 3796 05be 6900     		.ascii	"i\000"
 3797 05c0 01       		.byte	0x1
 3798 05c1 AE       		.byte	0xae
 3799 05c2 A2000000 		.4byte	0xa2
 3800 05c6 02       		.uleb128 0x2
 3801 05c7 91       		.byte	0x91
 3802 05c8 70       		.sleb128 -16
 3803 05c9 13       		.uleb128 0x13
 3804 05ca 8F020000 		.4byte	.LASF93
 3805 05ce 01       		.byte	0x1
 3806 05cf AE       		.byte	0xae
 3807 05d0 A2000000 		.4byte	0xa2
 3808 05d4 02       		.uleb128 0x2
 3809 05d5 91       		.byte	0x91
 3810 05d6 68       		.sleb128 -24
 3811 05d7 00       		.byte	0
 3812 05d8 00       		.byte	0
 3813 05d9 12       		.uleb128 0x12
 3814 05da 2C050000 		.4byte	.LASF95
 3815 05de 01       		.byte	0x1
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 88


 3816 05df DA       		.byte	0xda
 3817 05e0 F3010000 		.4byte	0x1f3
 3818 05e4 00000000 		.4byte	.LFB73
 3819 05e8 00010000 		.4byte	.LFE73-.LFB73
 3820 05ec 01       		.uleb128 0x1
 3821 05ed 9C       		.byte	0x9c
 3822 05ee 30060000 		.4byte	0x630
 3823 05f2 13       		.uleb128 0x13
 3824 05f3 2E010000 		.4byte	.LASF96
 3825 05f7 01       		.byte	0x1
 3826 05f8 DC       		.byte	0xdc
 3827 05f9 F3010000 		.4byte	0x1f3
 3828 05fd 03       		.uleb128 0x3
 3829 05fe 91       		.byte	0x91
 3830 05ff E47C     		.sleb128 -412
 3831 0601 14       		.uleb128 0x14
 3832 0602 4A000000 		.4byte	.LBB5
 3833 0606 86000000 		.4byte	.LBE5-.LBB5
 3834 060a 17       		.uleb128 0x17
 3835 060b 6900     		.ascii	"i\000"
 3836 060d 01       		.byte	0x1
 3837 060e E3       		.byte	0xe3
 3838 060f 7E000000 		.4byte	0x7e
 3839 0613 02       		.uleb128 0x2
 3840 0614 91       		.byte	0x91
 3841 0615 6C       		.sleb128 -20
 3842 0616 14       		.uleb128 0x14
 3843 0617 70000000 		.4byte	.LBB6
 3844 061b 46000000 		.4byte	.LBE6-.LBB6
 3845 061f 13       		.uleb128 0x13
 3846 0620 68020000 		.4byte	.LASF97
 3847 0624 01       		.byte	0x1
 3848 0625 F0       		.byte	0xf0
 3849 0626 57000000 		.4byte	0x57
 3850 062a 02       		.uleb128 0x2
 3851 062b 91       		.byte	0x91
 3852 062c 68       		.sleb128 -24
 3853 062d 00       		.byte	0
 3854 062e 00       		.byte	0
 3855 062f 00       		.byte	0
 3856 0630 18       		.uleb128 0x18
 3857 0631 71030000 		.4byte	.LASF99
 3858 0635 01       		.byte	0x1
 3859 0636 0401     		.2byte	0x104
 3860 0638 AD000000 		.4byte	0xad
 3861 063c 00000000 		.4byte	.LFB74
 3862 0640 78000000 		.4byte	.LFE74-.LFB74
 3863 0644 01       		.uleb128 0x1
 3864 0645 9C       		.byte	0x9c
 3865 0646 A1060000 		.4byte	0x6a1
 3866 064a 19       		.uleb128 0x19
 3867 064b 49040000 		.4byte	.LASF100
 3868 064f 01       		.byte	0x1
 3869 0650 0401     		.2byte	0x104
 3870 0652 0C010000 		.4byte	0x10c
 3871 0656 02       		.uleb128 0x2
 3872 0657 91       		.byte	0x91
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 89


 3873 0658 6C       		.sleb128 -20
 3874 0659 19       		.uleb128 0x19
 3875 065a FA030000 		.4byte	.LASF101
 3876 065e 01       		.byte	0x1
 3877 065f 0401     		.2byte	0x104
 3878 0661 12010000 		.4byte	0x112
 3879 0665 02       		.uleb128 0x2
 3880 0666 91       		.byte	0x91
 3881 0667 68       		.sleb128 -24
 3882 0668 19       		.uleb128 0x19
 3883 0669 20040000 		.4byte	.LASF102
 3884 066d 01       		.byte	0x1
 3885 066e 0401     		.2byte	0x104
 3886 0670 12010000 		.4byte	0x112
 3887 0674 02       		.uleb128 0x2
 3888 0675 91       		.byte	0x91
 3889 0676 64       		.sleb128 -28
 3890 0677 19       		.uleb128 0x19
 3891 0678 06040000 		.4byte	.LASF103
 3892 067c 01       		.byte	0x1
 3893 067d 0401     		.2byte	0x104
 3894 067f 0C010000 		.4byte	0x10c
 3895 0683 02       		.uleb128 0x2
 3896 0684 91       		.byte	0x91
 3897 0685 60       		.sleb128 -32
 3898 0686 1A       		.uleb128 0x1a
 3899 0687 6100     		.ascii	"a\000"
 3900 0689 01       		.byte	0x1
 3901 068a 0601     		.2byte	0x106
 3902 068c 0C010000 		.4byte	0x10c
 3903 0690 02       		.uleb128 0x2
 3904 0691 91       		.byte	0x91
 3905 0692 74       		.sleb128 -12
 3906 0693 1A       		.uleb128 0x1a
 3907 0694 6200     		.ascii	"b\000"
 3908 0696 01       		.byte	0x1
 3909 0697 0601     		.2byte	0x106
 3910 0699 0C010000 		.4byte	0x10c
 3911 069d 02       		.uleb128 0x2
 3912 069e 91       		.byte	0x91
 3913 069f 70       		.sleb128 -16
 3914 06a0 00       		.byte	0
 3915 06a1 1B       		.uleb128 0x1b
 3916 06a2 9B060000 		.4byte	.LASF104
 3917 06a6 01       		.byte	0x1
 3918 06a7 2301     		.2byte	0x123
 3919 06a9 AD000000 		.4byte	0xad
 3920 06ad 00000000 		.4byte	.LFB75
 3921 06b1 3C010000 		.4byte	.LFE75-.LFB75
 3922 06b5 01       		.uleb128 0x1
 3923 06b6 9C       		.byte	0x9c
 3924 06b7 D3060000 		.4byte	0x6d3
 3925 06bb 14       		.uleb128 0x14
 3926 06bc 2E000000 		.4byte	.LBB7
 3927 06c0 32000000 		.4byte	.LBE7-.LBB7
 3928 06c4 1A       		.uleb128 0x1a
 3929 06c5 6900     		.ascii	"i\000"
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 90


 3930 06c7 01       		.byte	0x1
 3931 06c8 3101     		.2byte	0x131
 3932 06ca AD000000 		.4byte	0xad
 3933 06ce 02       		.uleb128 0x2
 3934 06cf 91       		.byte	0x91
 3935 06d0 77       		.sleb128 -9
 3936 06d1 00       		.byte	0
 3937 06d2 00       		.byte	0
 3938 06d3 1B       		.uleb128 0x1b
 3939 06d4 D0040000 		.4byte	.LASF105
 3940 06d8 01       		.byte	0x1
 3941 06d9 6A01     		.2byte	0x16a
 3942 06db AD000000 		.4byte	0xad
 3943 06df 00000000 		.4byte	.LFB76
 3944 06e3 B8000000 		.4byte	.LFE76-.LFB76
 3945 06e7 01       		.uleb128 0x1
 3946 06e8 9C       		.byte	0x9c
 3947 06e9 16070000 		.4byte	0x716
 3948 06ed 1C       		.uleb128 0x1c
 3949 06ee C8070000 		.4byte	.LASF35
 3950 06f2 01       		.byte	0x1
 3951 06f3 6E01     		.2byte	0x16e
 3952 06f5 AD000000 		.4byte	0xad
 3953 06f9 02       		.uleb128 0x2
 3954 06fa 91       		.byte	0x91
 3955 06fb 77       		.sleb128 -9
 3956 06fc 14       		.uleb128 0x14
 3957 06fd 36000000 		.4byte	.LBB8
 3958 0701 48000000 		.4byte	.LBE8-.LBB8
 3959 0705 1C       		.uleb128 0x1c
 3960 0706 4E040000 		.4byte	.LASF106
 3961 070a 01       		.byte	0x1
 3962 070b 7601     		.2byte	0x176
 3963 070d 16070000 		.4byte	0x716
 3964 0711 02       		.uleb128 0x2
 3965 0712 91       		.byte	0x91
 3966 0713 6C       		.sleb128 -20
 3967 0714 00       		.byte	0
 3968 0715 00       		.byte	0
 3969 0716 08       		.uleb128 0x8
 3970 0717 F7000000 		.4byte	0xf7
 3971 071b 26070000 		.4byte	0x726
 3972 071f 09       		.uleb128 0x9
 3973 0720 05010000 		.4byte	0x105
 3974 0724 09       		.byte	0x9
 3975 0725 00       		.byte	0
 3976 0726 1D       		.uleb128 0x1d
 3977 0727 C2010000 		.4byte	.LASF107
 3978 072b 01       		.byte	0x1
 3979 072c 8801     		.2byte	0x188
 3980 072e 00000000 		.4byte	.LFB77
 3981 0732 1C000000 		.4byte	.LFE77-.LFB77
 3982 0736 01       		.uleb128 0x1
 3983 0737 9C       		.byte	0x9c
 3984 0738 1E       		.uleb128 0x1e
 3985 0739 07070000 		.4byte	.LASF109
 3986 073d 01       		.byte	0x1
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 91


 3987 073e 9801     		.2byte	0x198
 3988 0740 AD000000 		.4byte	0xad
 3989 0744 00000000 		.4byte	.LFB78
 3990 0748 28000000 		.4byte	.LFE78-.LFB78
 3991 074c 01       		.uleb128 0x1
 3992 074d 9C       		.byte	0x9c
 3993 074e 1F       		.uleb128 0x1f
 3994 074f 88030000 		.4byte	.LASF112
 3995 0753 01       		.byte	0x1
 3996 0754 A301     		.2byte	0x1a3
 3997 0756 00000000 		.4byte	.LFB79
 3998 075a 84000000 		.4byte	.LFE79-.LFB79
 3999 075e 01       		.uleb128 0x1
 4000 075f 9C       		.byte	0x9c
 4001 0760 74070000 		.4byte	0x774
 4002 0764 1C       		.uleb128 0x1c
 4003 0765 37050000 		.4byte	.LASF110
 4004 0769 01       		.byte	0x1
 4005 076a B001     		.2byte	0x1b0
 4006 076c 7E000000 		.4byte	0x7e
 4007 0770 02       		.uleb128 0x2
 4008 0771 91       		.byte	0x91
 4009 0772 74       		.sleb128 -12
 4010 0773 00       		.byte	0
 4011 0774 20       		.uleb128 0x20
 4012 0775 F7020000 		.4byte	.LASF111
 4013 0779 01       		.byte	0x1
 4014 077a C201     		.2byte	0x1c2
 4015 077c 00000000 		.4byte	.LFB80
 4016 0780 34000000 		.4byte	.LFE80-.LFB80
 4017 0784 01       		.uleb128 0x1
 4018 0785 9C       		.byte	0x9c
 4019 0786 1F       		.uleb128 0x1f
 4020 0787 97070000 		.4byte	.LASF113
 4021 078b 01       		.byte	0x1
 4022 078c CC01     		.2byte	0x1cc
 4023 078e 00000000 		.4byte	.LFB81
 4024 0792 5C020000 		.4byte	.LFE81-.LFB81
 4025 0796 01       		.uleb128 0x1
 4026 0797 9C       		.byte	0x9c
 4027 0798 59080000 		.4byte	0x859
 4028 079c 1C       		.uleb128 0x1c
 4029 079d FC050000 		.4byte	.LASF114
 4030 07a1 01       		.byte	0x1
 4031 07a2 CF01     		.2byte	0x1cf
 4032 07a4 16070000 		.4byte	0x716
 4033 07a8 02       		.uleb128 0x2
 4034 07a9 91       		.byte	0x91
 4035 07aa 64       		.sleb128 -28
 4036 07ab 1C       		.uleb128 0x1c
 4037 07ac 5D020000 		.4byte	.LASF115
 4038 07b0 01       		.byte	0x1
 4039 07b1 D001     		.2byte	0x1d0
 4040 07b3 16070000 		.4byte	0x716
 4041 07b7 02       		.uleb128 0x2
 4042 07b8 91       		.byte	0x91
 4043 07b9 58       		.sleb128 -40
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 92


 4044 07ba 1C       		.uleb128 0x1c
 4045 07bb BA070000 		.4byte	.LASF116
 4046 07bf 01       		.byte	0x1
 4047 07c0 D101     		.2byte	0x1d1
 4048 07c2 16070000 		.4byte	0x716
 4049 07c6 02       		.uleb128 0x2
 4050 07c7 91       		.byte	0x91
 4051 07c8 4C       		.sleb128 -52
 4052 07c9 1C       		.uleb128 0x1c
 4053 07ca 88050000 		.4byte	.LASF117
 4054 07ce 01       		.byte	0x1
 4055 07cf D201     		.2byte	0x1d2
 4056 07d1 16070000 		.4byte	0x716
 4057 07d5 02       		.uleb128 0x2
 4058 07d6 91       		.byte	0x91
 4059 07d7 40       		.sleb128 -64
 4060 07d8 1C       		.uleb128 0x1c
 4061 07d9 EA020000 		.4byte	.LASF118
 4062 07dd 01       		.byte	0x1
 4063 07de D301     		.2byte	0x1d3
 4064 07e0 16070000 		.4byte	0x716
 4065 07e4 03       		.uleb128 0x3
 4066 07e5 91       		.byte	0x91
 4067 07e6 B47F     		.sleb128 -76
 4068 07e8 1C       		.uleb128 0x1c
 4069 07e9 05080000 		.4byte	.LASF119
 4070 07ed 01       		.byte	0x1
 4071 07ee D401     		.2byte	0x1d4
 4072 07f0 16070000 		.4byte	0x716
 4073 07f4 03       		.uleb128 0x3
 4074 07f5 91       		.byte	0x91
 4075 07f6 A87F     		.sleb128 -88
 4076 07f8 1C       		.uleb128 0x1c
 4077 07f9 3A020000 		.4byte	.LASF59
 4078 07fd 01       		.byte	0x1
 4079 07fe E601     		.2byte	0x1e6
 4080 0800 7E000000 		.4byte	0x7e
 4081 0804 03       		.uleb128 0x3
 4082 0805 91       		.byte	0x91
 4083 0806 A47F     		.sleb128 -92
 4084 0808 1C       		.uleb128 0x1c
 4085 0809 96050000 		.4byte	.LASF60
 4086 080d 01       		.byte	0x1
 4087 080e E601     		.2byte	0x1e6
 4088 0810 7E000000 		.4byte	0x7e
 4089 0814 03       		.uleb128 0x3
 4090 0815 91       		.byte	0x91
 4091 0816 A07F     		.sleb128 -96
 4092 0818 1C       		.uleb128 0x1c
 4093 0819 16010000 		.4byte	.LASF120
 4094 081d 01       		.byte	0x1
 4095 081e E601     		.2byte	0x1e6
 4096 0820 7E000000 		.4byte	0x7e
 4097 0824 03       		.uleb128 0x3
 4098 0825 91       		.byte	0x91
 4099 0826 9C7F     		.sleb128 -100
 4100 0828 1C       		.uleb128 0x1c
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 93


 4101 0829 9C040000 		.4byte	.LASF121
 4102 082d 01       		.byte	0x1
 4103 082e E601     		.2byte	0x1e6
 4104 0830 7E000000 		.4byte	0x7e
 4105 0834 03       		.uleb128 0x3
 4106 0835 91       		.byte	0x91
 4107 0836 987F     		.sleb128 -104
 4108 0838 1C       		.uleb128 0x1c
 4109 0839 53040000 		.4byte	.LASF122
 4110 083d 01       		.byte	0x1
 4111 083e E601     		.2byte	0x1e6
 4112 0840 7E000000 		.4byte	0x7e
 4113 0844 03       		.uleb128 0x3
 4114 0845 91       		.byte	0x91
 4115 0846 947F     		.sleb128 -108
 4116 0848 1C       		.uleb128 0x1c
 4117 0849 4B030000 		.4byte	.LASF123
 4118 084d 01       		.byte	0x1
 4119 084e E601     		.2byte	0x1e6
 4120 0850 7E000000 		.4byte	0x7e
 4121 0854 03       		.uleb128 0x3
 4122 0855 91       		.byte	0x91
 4123 0856 907F     		.sleb128 -112
 4124 0858 00       		.byte	0
 4125 0859 1F       		.uleb128 0x1f
 4126 085a 44020000 		.4byte	.LASF124
 4127 085e 01       		.byte	0x1
 4128 085f 1402     		.2byte	0x214
 4129 0861 00000000 		.4byte	.LFB82
 4130 0865 68010000 		.4byte	.LFE82-.LFB82
 4131 0869 01       		.uleb128 0x1
 4132 086a 9C       		.byte	0x9c
 4133 086b 89080000 		.4byte	0x889
 4134 086f 14       		.uleb128 0x14
 4135 0870 DA000000 		.4byte	.LBB9
 4136 0874 38000000 		.4byte	.LBE9-.LBB9
 4137 0878 1C       		.uleb128 0x1c
 4138 0879 BC060000 		.4byte	.LASF125
 4139 087d 01       		.byte	0x1
 4140 087e 4202     		.2byte	0x242
 4141 0880 16070000 		.4byte	0x716
 4142 0884 02       		.uleb128 0x2
 4143 0885 91       		.byte	0x91
 4144 0886 6C       		.sleb128 -20
 4145 0887 00       		.byte	0
 4146 0888 00       		.byte	0
 4147 0889 1B       		.uleb128 0x1b
 4148 088a AB020000 		.4byte	.LASF126
 4149 088e 01       		.byte	0x1
 4150 088f 5502     		.2byte	0x255
 4151 0891 57000000 		.4byte	0x57
 4152 0895 00000000 		.4byte	.LFB83
 4153 0899 44010000 		.4byte	.LFE83-.LFB83
 4154 089d 01       		.uleb128 0x1
 4155 089e 9C       		.byte	0x9c
 4156 089f 45090000 		.4byte	0x945
 4157 08a3 1C       		.uleb128 0x1c
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 94


 4158 08a4 34040000 		.4byte	.LASF127
 4159 08a8 01       		.byte	0x1
 4160 08a9 6002     		.2byte	0x260
 4161 08ab 57000000 		.4byte	0x57
 4162 08af 02       		.uleb128 0x2
 4163 08b0 91       		.byte	0x91
 4164 08b1 74       		.sleb128 -12
 4165 08b2 14       		.uleb128 0x14
 4166 08b3 30000000 		.4byte	.LBB10
 4167 08b7 DE000000 		.4byte	.LBE10-.LBB10
 4168 08bb 1C       		.uleb128 0x1c
 4169 08bc 68020000 		.4byte	.LASF97
 4170 08c0 01       		.byte	0x1
 4171 08c1 6502     		.2byte	0x265
 4172 08c3 45090000 		.4byte	0x945
 4173 08c7 02       		.uleb128 0x2
 4174 08c8 91       		.byte	0x91
 4175 08c9 54       		.sleb128 -44
 4176 08ca 1A       		.uleb128 0x1a
 4177 08cb 7400     		.ascii	"t\000"
 4178 08cd 01       		.byte	0x1
 4179 08ce 6B02     		.2byte	0x26b
 4180 08d0 2D010000 		.4byte	0x12d
 4181 08d4 03       		.uleb128 0x3
 4182 08d5 91       		.byte	0x91
 4183 08d6 947F     		.sleb128 -108
 4184 08d8 1C       		.uleb128 0x1c
 4185 08d9 E4010000 		.4byte	.LASF128
 4186 08dd 01       		.byte	0x1
 4187 08de 6E02     		.2byte	0x26e
 4188 08e0 7E000000 		.4byte	0x7e
 4189 08e4 02       		.uleb128 0x2
 4190 08e5 91       		.byte	0x91
 4191 08e6 50       		.sleb128 -48
 4192 08e7 1C       		.uleb128 0x1c
 4193 08e8 CA040000 		.4byte	.LASF129
 4194 08ec 01       		.byte	0x1
 4195 08ed 6E02     		.2byte	0x26e
 4196 08ef 7E000000 		.4byte	0x7e
 4197 08f3 02       		.uleb128 0x2
 4198 08f4 91       		.byte	0x91
 4199 08f5 4C       		.sleb128 -52
 4200 08f6 1A       		.uleb128 0x1a
 4201 08f7 64617900 		.ascii	"day\000"
 4202 08fb 01       		.byte	0x1
 4203 08fc 6E02     		.2byte	0x26e
 4204 08fe 7E000000 		.4byte	0x7e
 4205 0902 02       		.uleb128 0x2
 4206 0903 91       		.byte	0x91
 4207 0904 48       		.sleb128 -56
 4208 0905 1C       		.uleb128 0x1c
 4209 0906 52050000 		.4byte	.LASF130
 4210 090a 01       		.byte	0x1
 4211 090b 6E02     		.2byte	0x26e
 4212 090d 7E000000 		.4byte	0x7e
 4213 0911 02       		.uleb128 0x2
 4214 0912 91       		.byte	0x91
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 95


 4215 0913 44       		.sleb128 -60
 4216 0914 1C       		.uleb128 0x1c
 4217 0915 80070000 		.4byte	.LASF131
 4218 0919 01       		.byte	0x1
 4219 091a 6E02     		.2byte	0x26e
 4220 091c 7E000000 		.4byte	0x7e
 4221 0920 02       		.uleb128 0x2
 4222 0921 91       		.byte	0x91
 4223 0922 40       		.sleb128 -64
 4224 0923 1C       		.uleb128 0x1c
 4225 0924 DD010000 		.4byte	.LASF132
 4226 0928 01       		.byte	0x1
 4227 0929 6E02     		.2byte	0x26e
 4228 092b 7E000000 		.4byte	0x7e
 4229 092f 03       		.uleb128 0x3
 4230 0930 91       		.byte	0x91
 4231 0931 BC7F     		.sleb128 -68
 4232 0933 1C       		.uleb128 0x1c
 4233 0934 00000000 		.4byte	.LASF133
 4234 0938 01       		.byte	0x1
 4235 0939 6E02     		.2byte	0x26e
 4236 093b 7E000000 		.4byte	0x7e
 4237 093f 03       		.uleb128 0x3
 4238 0940 91       		.byte	0x91
 4239 0941 B87F     		.sleb128 -72
 4240 0943 00       		.byte	0
 4241 0944 00       		.byte	0
 4242 0945 08       		.uleb128 0x8
 4243 0946 F7000000 		.4byte	0xf7
 4244 094a 55090000 		.4byte	0x955
 4245 094e 09       		.uleb128 0x9
 4246 094f 05010000 		.4byte	0x105
 4247 0953 1D       		.byte	0x1d
 4248 0954 00       		.byte	0
 4249 0955 21       		.uleb128 0x21
 4250 0956 0E020000 		.4byte	.LASF134
 4251 095a 01       		.byte	0x1
 4252 095b 8E02     		.2byte	0x28e
 4253 095d AD000000 		.4byte	0xad
 4254 0961 00000000 		.4byte	.LFB84
 4255 0965 14000000 		.4byte	.LFE84-.LFB84
 4256 0969 01       		.uleb128 0x1
 4257 096a 9C       		.byte	0x9c
 4258 096b 1D       		.uleb128 0x1d
 4259 096c DE020000 		.4byte	.LASF135
 4260 0970 01       		.byte	0x1
 4261 0971 9302     		.2byte	0x293
 4262 0973 00000000 		.4byte	.LFB85
 4263 0977 1A000000 		.4byte	.LFE85-.LFB85
 4264 097b 01       		.uleb128 0x1
 4265 097c 9C       		.byte	0x9c
 4266 097d 1D       		.uleb128 0x1d
 4267 097e F2000000 		.4byte	.LASF136
 4268 0982 01       		.byte	0x1
 4269 0983 A002     		.2byte	0x2a0
 4270 0985 00000000 		.4byte	.LFB86
 4271 0989 2A000000 		.4byte	.LFE86-.LFB86
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 96


 4272 098d 01       		.uleb128 0x1
 4273 098e 9C       		.byte	0x9c
 4274 098f 1B       		.uleb128 0x1b
 4275 0990 0D060000 		.4byte	.LASF137
 4276 0994 01       		.byte	0x1
 4277 0995 B302     		.2byte	0x2b3
 4278 0997 7E000000 		.4byte	0x7e
 4279 099b 00000000 		.4byte	.LFB87
 4280 099f 10030000 		.4byte	.LFE87-.LFB87
 4281 09a3 01       		.uleb128 0x1
 4282 09a4 9C       		.byte	0x9c
 4283 09a5 4C0A0000 		.4byte	0xa4c
 4284 09a9 1C       		.uleb128 0x1c
 4285 09aa 3E080000 		.4byte	.LASF138
 4286 09ae 01       		.byte	0x1
 4287 09af C002     		.2byte	0x2c0
 4288 09b1 57000000 		.4byte	0x57
 4289 09b5 02       		.uleb128 0x2
 4290 09b6 91       		.byte	0x91
 4291 09b7 68       		.sleb128 -24
 4292 09b8 1C       		.uleb128 0x1c
 4293 09b9 37070000 		.4byte	.LASF139
 4294 09bd 01       		.byte	0x1
 4295 09be E902     		.2byte	0x2e9
 4296 09c0 AD000000 		.4byte	0xad
 4297 09c4 02       		.uleb128 0x2
 4298 09c5 91       		.byte	0x91
 4299 09c6 6F       		.sleb128 -17
 4300 09c7 1A       		.uleb128 0x1a
 4301 09c8 6C617400 		.ascii	"lat\000"
 4302 09cc 01       		.byte	0x1
 4303 09cd F202     		.2byte	0x2f2
 4304 09cf 41040000 		.4byte	0x441
 4305 09d3 03       		.uleb128 0x3
 4306 09d4 91       		.byte	0x91
 4307 09d5 FC7E     		.sleb128 -132
 4308 09d7 1A       		.uleb128 0x1a
 4309 09d8 6C6F6E00 		.ascii	"lon\000"
 4310 09dc 01       		.byte	0x1
 4311 09dd F302     		.2byte	0x2f3
 4312 09df 41040000 		.4byte	0x441
 4313 09e3 03       		.uleb128 0x3
 4314 09e4 91       		.byte	0x91
 4315 09e5 987E     		.sleb128 -232
 4316 09e7 1A       		.uleb128 0x1a
 4317 09e8 616C7400 		.ascii	"alt\000"
 4318 09ec 01       		.byte	0x1
 4319 09ed F402     		.2byte	0x2f4
 4320 09ef E9000000 		.4byte	0xe9
 4321 09f3 03       		.uleb128 0x3
 4322 09f4 91       		.byte	0x91
 4323 09f5 947E     		.sleb128 -236
 4324 09f7 1C       		.uleb128 0x1c
 4325 09f8 63070000 		.4byte	.LASF140
 4326 09fc 01       		.byte	0x1
 4327 09fd F502     		.2byte	0x2f5
 4328 09ff 4C0A0000 		.4byte	0xa4c
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 97


 4329 0a03 03       		.uleb128 0x3
 4330 0a04 91       		.byte	0x91
 4331 0a05 907E     		.sleb128 -240
 4332 0a07 1C       		.uleb128 0x1c
 4333 0a08 98020000 		.4byte	.LASF141
 4334 0a0c 01       		.byte	0x1
 4335 0a0d F602     		.2byte	0x2f6
 4336 0a0f 4C0A0000 		.4byte	0xa4c
 4337 0a13 03       		.uleb128 0x3
 4338 0a14 91       		.byte	0x91
 4339 0a15 8C7E     		.sleb128 -244
 4340 0a17 1A       		.uleb128 0x1a
 4341 0a18 733100   		.ascii	"s1\000"
 4342 0a1b 01       		.byte	0x1
 4343 0a1c FA02     		.2byte	0x2fa
 4344 0a1e 0C010000 		.4byte	0x10c
 4345 0a22 02       		.uleb128 0x2
 4346 0a23 91       		.byte	0x91
 4347 0a24 64       		.sleb128 -28
 4348 0a25 1C       		.uleb128 0x1c
 4349 0a26 37050000 		.4byte	.LASF110
 4350 0a2a 01       		.byte	0x1
 4351 0a2b FD02     		.2byte	0x2fd
 4352 0a2d 7E000000 		.4byte	0x7e
 4353 0a31 02       		.uleb128 0x2
 4354 0a32 91       		.byte	0x91
 4355 0a33 60       		.sleb128 -32
 4356 0a34 14       		.uleb128 0x14
 4357 0a35 BC000000 		.4byte	.LBB11
 4358 0a39 3C000000 		.4byte	.LBE11-.LBB11
 4359 0a3d 1A       		.uleb128 0x1a
 4360 0a3e 6900     		.ascii	"i\000"
 4361 0a40 01       		.byte	0x1
 4362 0a41 EA02     		.2byte	0x2ea
 4363 0a43 B9000000 		.4byte	0xb9
 4364 0a47 02       		.uleb128 0x2
 4365 0a48 91       		.byte	0x91
 4366 0a49 6C       		.sleb128 -20
 4367 0a4a 00       		.byte	0
 4368 0a4b 00       		.byte	0
 4369 0a4c 08       		.uleb128 0x8
 4370 0a4d F7000000 		.4byte	0xf7
 4371 0a51 5C0A0000 		.4byte	0xa5c
 4372 0a55 09       		.uleb128 0x9
 4373 0a56 05010000 		.4byte	0x105
 4374 0a5a 01       		.byte	0x1
 4375 0a5b 00       		.byte	0
 4376 0a5c 1B       		.uleb128 0x1b
 4377 0a5d C9020000 		.4byte	.LASF142
 4378 0a61 01       		.byte	0x1
 4379 0a62 4C03     		.2byte	0x34c
 4380 0a64 F3010000 		.4byte	0x1f3
 4381 0a68 00000000 		.4byte	.LFB88
 4382 0a6c BC000000 		.4byte	.LFE88-.LFB88
 4383 0a70 01       		.uleb128 0x1
 4384 0a71 9C       		.byte	0x9c
 4385 0a72 870A0000 		.4byte	0xa87
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 98


 4386 0a76 1C       		.uleb128 0x1c
 4387 0a77 2E010000 		.4byte	.LASF96
 4388 0a7b 01       		.byte	0x1
 4389 0a7c 4E03     		.2byte	0x34e
 4390 0a7e F3010000 		.4byte	0x1f3
 4391 0a82 03       		.uleb128 0x3
 4392 0a83 91       		.byte	0x91
 4393 0a84 DC7C     		.sleb128 -420
 4394 0a86 00       		.byte	0
 4395 0a87 22       		.uleb128 0x22
 4396 0a88 40010000 		.4byte	.LASF143
 4397 0a8c 0A       		.byte	0xa
 4398 0a8d 1207     		.2byte	0x712
 4399 0a8f 930A0000 		.4byte	0xa93
 4400 0a93 0F       		.uleb128 0xf
 4401 0a94 97000000 		.4byte	0x97
 4402 0a98 23       		.uleb128 0x23
 4403 0a99 28000000 		.4byte	.LASF144
 4404 0a9d 07       		.byte	0x7
 4405 0a9e 11       		.byte	0x11
 4406 0a9f 93030000 		.4byte	0x393
 4407 0aa3 05       		.uleb128 0x5
 4408 0aa4 03       		.byte	0x3
 4409 0aa5 00000000 		.4byte	buffer_overflow
 4410 0aa9 23       		.uleb128 0x23
 4411 0aaa A8040000 		.4byte	.LASF145
 4412 0aae 07       		.byte	0x7
 4413 0aaf 22       		.byte	0x22
 4414 0ab0 B9000000 		.4byte	0xb9
 4415 0ab4 05       		.uleb128 0x5
 4416 0ab5 03       		.byte	0x3
 4417 0ab6 00000000 		.4byte	dataPointsInStack
 4418 0aba 23       		.uleb128 0x23
 4419 0abb CF070000 		.4byte	.LASF146
 4420 0abf 07       		.byte	0x7
 4421 0ac0 23       		.byte	0x23
 4422 0ac1 B9000000 		.4byte	0xb9
 4423 0ac5 05       		.uleb128 0x5
 4424 0ac6 03       		.byte	0x3
 4425 0ac7 00000000 		.4byte	dataPointsInStackDesired
 4426 0acb 08       		.uleb128 0x8
 4427 0acc 3B020000 		.4byte	0x23b
 4428 0ad0 DB0A0000 		.4byte	0xadb
 4429 0ad4 09       		.uleb128 0x9
 4430 0ad5 05010000 		.4byte	0x105
 4431 0ad9 95       		.byte	0x95
 4432 0ada 00       		.byte	0
 4433 0adb 23       		.uleb128 0x23
 4434 0adc AC030000 		.4byte	.LASF147
 4435 0ae0 07       		.byte	0x7
 4436 0ae1 24       		.byte	0x24
 4437 0ae2 CB0A0000 		.4byte	0xacb
 4438 0ae6 05       		.uleb128 0x5
 4439 0ae7 03       		.byte	0x3
 4440 0ae8 00000000 		.4byte	data
 4441 0aec 23       		.uleb128 0x23
 4442 0aed 22010000 		.4byte	.LASF148
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 99


 4443 0af1 08       		.byte	0x8
 4444 0af2 23       		.byte	0x23
 4445 0af3 AD000000 		.4byte	0xad
 4446 0af7 05       		.uleb128 0x5
 4447 0af8 03       		.byte	0x3
 4448 0af9 00000000 		.4byte	modem_state
 4449 0afd 23       		.uleb128 0x23
 4450 0afe 20070000 		.4byte	.LASF149
 4451 0b02 08       		.byte	0x8
 4452 0b03 69       		.byte	0x69
 4453 0b04 DD000000 		.4byte	0xdd
 4454 0b08 05       		.uleb128 0x5
 4455 0b09 03       		.byte	0x3
 4456 0b0a 00000000 		.4byte	modem_start_time_stamp
 4457 0b0e 23       		.uleb128 0x23
 4458 0b0f C2030000 		.4byte	.LASF71
 4459 0b13 08       		.byte	0x8
 4460 0b14 6A       		.byte	0x6a
 4461 0b15 73020000 		.4byte	0x273
 4462 0b19 05       		.uleb128 0x5
 4463 0b1a 03       		.byte	0x3
 4464 0b1b 00000000 		.4byte	modem_info
 4465 0b1f 23       		.uleb128 0x23
 4466 0b20 4D010000 		.4byte	.LASF150
 4467 0b24 08       		.byte	0x8
 4468 0b25 6B       		.byte	0x6b
 4469 0b26 E7020000 		.4byte	0x2e7
 4470 0b2a 05       		.uleb128 0x5
 4471 0b2b 03       		.byte	0x3
 4472 0b2c 00000000 		.4byte	modem_stats
 4473 0b30 23       		.uleb128 0x23
 4474 0b31 3D050000 		.4byte	.LASF151
 4475 0b35 08       		.byte	0x8
 4476 0b36 6C       		.byte	0x6c
 4477 0b37 9A030000 		.4byte	0x39a
 4478 0b3b 05       		.uleb128 0x5
 4479 0b3c 03       		.byte	0x3
 4480 0b3d 00000000 		.4byte	updatable_parameters
 4481 0b41 23       		.uleb128 0x23
 4482 0b42 42070000 		.4byte	.LASF152
 4483 0b46 08       		.byte	0x8
 4484 0b47 6D       		.byte	0x6d
 4485 0b48 37030000 		.4byte	0x337
 4486 0b4c 05       		.uleb128 0x5
 4487 0b4d 03       		.byte	0x3
 4488 0b4e 00000000 		.4byte	gps_data
 4489 0b52 08       		.uleb128 0x8
 4490 0b53 F7000000 		.4byte	0xf7
 4491 0b57 630B0000 		.4byte	0xb63
 4492 0b5b 24       		.uleb128 0x24
 4493 0b5c 05010000 		.4byte	0x105
 4494 0b60 0F27     		.2byte	0x270f
 4495 0b62 00       		.byte	0
 4496 0b63 23       		.uleb128 0x23
 4497 0b64 6F080000 		.4byte	.LASF153
 4498 0b68 09       		.byte	0x9
 4499 0b69 17       		.byte	0x17
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 100


 4500 0b6a 520B0000 		.4byte	0xb52
 4501 0b6e 05       		.uleb128 0x5
 4502 0b6f 03       		.byte	0x3
 4503 0b70 00000000 		.4byte	http_request
 4504 0b74 23       		.uleb128 0x23
 4505 0b75 B8010000 		.4byte	.LASF154
 4506 0b79 09       		.byte	0x9
 4507 0b7a 18       		.byte	0x18
 4508 0b7b 520B0000 		.4byte	0xb52
 4509 0b7f 05       		.uleb128 0x5
 4510 0b80 03       		.byte	0x3
 4511 0b81 00000000 		.4byte	http_body
 4512 0b85 08       		.uleb128 0x8
 4513 0b86 F7000000 		.4byte	0xf7
 4514 0b8a 950B0000 		.4byte	0xb95
 4515 0b8e 09       		.uleb128 0x9
 4516 0b8f 05010000 		.4byte	0x105
 4517 0b93 C7       		.byte	0xc7
 4518 0b94 00       		.byte	0
 4519 0b95 23       		.uleb128 0x23
 4520 0b96 CA060000 		.4byte	.LASF155
 4521 0b9a 09       		.byte	0x9
 4522 0b9b 19       		.byte	0x19
 4523 0b9c 850B0000 		.4byte	0xb85
 4524 0ba0 05       		.uleb128 0x5
 4525 0ba1 03       		.byte	0x3
 4526 0ba2 00000000 		.4byte	http_route
 4527 0ba6 23       		.uleb128 0x23
 4528 0ba7 2E060000 		.4byte	.LASF156
 4529 0bab 09       		.byte	0x9
 4530 0bac 40       		.byte	0x40
 4531 0bad 15040000 		.4byte	0x415
 4532 0bb1 05       		.uleb128 0x5
 4533 0bb2 03       		.byte	0x3
 4534 0bb3 00000000 		.4byte	system_info
 4535 0bb7 23       		.uleb128 0x23
 4536 0bb8 D7050000 		.4byte	.LASF157
 4537 0bbc 09       		.byte	0x9
 4538 0bbd 52       		.byte	0x52
 4539 0bbe 51040000 		.4byte	0x451
 4540 0bc2 05       		.uleb128 0x5
 4541 0bc3 03       		.byte	0x3
 4542 0bc4 00000000 		.4byte	system_settings
 4543 0bc8 23       		.uleb128 0x23
 4544 0bc9 33010000 		.4byte	.LASF158
 4545 0bcd 09       		.byte	0x9
 4546 0bce 6E       		.byte	0x6e
 4547 0bcf DE030000 		.4byte	0x3de
 4548 0bd3 05       		.uleb128 0x5
 4549 0bd4 03       		.byte	0x3
 4550 0bd5 00000000 		.4byte	alarmMeasure
 4551 0bd9 23       		.uleb128 0x23
 4552 0bda 87010000 		.4byte	.LASF159
 4553 0bde 09       		.byte	0x9
 4554 0bdf 6F       		.byte	0x6f
 4555 0be0 AD000000 		.4byte	0xad
 4556 0be4 05       		.uleb128 0x5
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 101


 4557 0be5 03       		.byte	0x3
 4558 0be6 00000000 		.4byte	timeToMeasure
 4559 0bea 23       		.uleb128 0x23
 4560 0beb 1F030000 		.4byte	.LASF160
 4561 0bef 09       		.byte	0x9
 4562 0bf0 70       		.byte	0x70
 4563 0bf1 DE030000 		.4byte	0x3de
 4564 0bf5 05       		.uleb128 0x5
 4565 0bf6 03       		.byte	0x3
 4566 0bf7 00000000 		.4byte	alarmSync
 4567 0bfb 23       		.uleb128 0x23
 4568 0bfc AD010000 		.4byte	.LASF161
 4569 0c00 09       		.byte	0x9
 4570 0c01 71       		.byte	0x71
 4571 0c02 AD000000 		.4byte	0xad
 4572 0c06 05       		.uleb128 0x5
 4573 0c07 03       		.byte	0x3
 4574 0c08 00000000 		.4byte	timeToSync
 4575 0c0c 23       		.uleb128 0x23
 4576 0c0d 15050000 		.4byte	.LASF162
 4577 0c11 09       		.byte	0x9
 4578 0c12 72       		.byte	0x72
 4579 0c13 AD000000 		.4byte	0xad
 4580 0c17 05       		.uleb128 0x5
 4581 0c18 03       		.byte	0x3
 4582 0c19 00000000 		.4byte	timeToSycnRemoteParams
 4583 0c1d 25       		.uleb128 0x25
 4584 0c1e 68657900 		.ascii	"hey\000"
 4585 0c22 09       		.byte	0x9
 4586 0c23 73       		.byte	0x73
 4587 0c24 AD000000 		.4byte	0xad
 4588 0c28 05       		.uleb128 0x5
 4589 0c29 03       		.byte	0x3
 4590 0c2a 00000000 		.4byte	hey
 4591 0c2e 08       		.uleb128 0x8
 4592 0c2f F7000000 		.4byte	0xf7
 4593 0c33 3F0C0000 		.4byte	0xc3f
 4594 0c37 24       		.uleb128 0x24
 4595 0c38 05010000 		.4byte	0x105
 4596 0c3c FF03     		.2byte	0x3ff
 4597 0c3e 00       		.byte	0
 4598 0c3f 23       		.uleb128 0x23
 4599 0c40 ED040000 		.4byte	.LASF163
 4600 0c44 01       		.byte	0x1
 4601 0c45 05       		.byte	0x5
 4602 0c46 2E0C0000 		.4byte	0xc2e
 4603 0c4a 05       		.uleb128 0x5
 4604 0c4b 03       		.byte	0x3
 4605 0c4c 00000000 		.4byte	uart_received_string
 4606 0c50 23       		.uleb128 0x23
 4607 0c51 E8060000 		.4byte	.LASF164
 4608 0c55 01       		.byte	0x1
 4609 0c56 06       		.byte	0x6
 4610 0c57 D1000000 		.4byte	0xd1
 4611 0c5b 05       		.uleb128 0x5
 4612 0c5c 03       		.byte	0x3
 4613 0c5d 00000000 		.4byte	uart_string_index
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 102


 4614 0c61 00       		.byte	0
 4615              		.section	.debug_abbrev,"",%progbits
 4616              	.Ldebug_abbrev0:
 4617 0000 01       		.uleb128 0x1
 4618 0001 11       		.uleb128 0x11
 4619 0002 01       		.byte	0x1
 4620 0003 25       		.uleb128 0x25
 4621 0004 0E       		.uleb128 0xe
 4622 0005 13       		.uleb128 0x13
 4623 0006 0B       		.uleb128 0xb
 4624 0007 03       		.uleb128 0x3
 4625 0008 0E       		.uleb128 0xe
 4626 0009 1B       		.uleb128 0x1b
 4627 000a 0E       		.uleb128 0xe
 4628 000b 55       		.uleb128 0x55
 4629 000c 17       		.uleb128 0x17
 4630 000d 11       		.uleb128 0x11
 4631 000e 01       		.uleb128 0x1
 4632 000f 10       		.uleb128 0x10
 4633 0010 17       		.uleb128 0x17
 4634 0011 00       		.byte	0
 4635 0012 00       		.byte	0
 4636 0013 02       		.uleb128 0x2
 4637 0014 24       		.uleb128 0x24
 4638 0015 00       		.byte	0
 4639 0016 0B       		.uleb128 0xb
 4640 0017 0B       		.uleb128 0xb
 4641 0018 3E       		.uleb128 0x3e
 4642 0019 0B       		.uleb128 0xb
 4643 001a 03       		.uleb128 0x3
 4644 001b 0E       		.uleb128 0xe
 4645 001c 00       		.byte	0
 4646 001d 00       		.byte	0
 4647 001e 03       		.uleb128 0x3
 4648 001f 16       		.uleb128 0x16
 4649 0020 00       		.byte	0
 4650 0021 03       		.uleb128 0x3
 4651 0022 0E       		.uleb128 0xe
 4652 0023 3A       		.uleb128 0x3a
 4653 0024 0B       		.uleb128 0xb
 4654 0025 3B       		.uleb128 0x3b
 4655 0026 0B       		.uleb128 0xb
 4656 0027 49       		.uleb128 0x49
 4657 0028 13       		.uleb128 0x13
 4658 0029 00       		.byte	0
 4659 002a 00       		.byte	0
 4660 002b 04       		.uleb128 0x4
 4661 002c 24       		.uleb128 0x24
 4662 002d 00       		.byte	0
 4663 002e 0B       		.uleb128 0xb
 4664 002f 0B       		.uleb128 0xb
 4665 0030 3E       		.uleb128 0x3e
 4666 0031 0B       		.uleb128 0xb
 4667 0032 03       		.uleb128 0x3
 4668 0033 08       		.uleb128 0x8
 4669 0034 00       		.byte	0
 4670 0035 00       		.byte	0
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 103


 4671 0036 05       		.uleb128 0x5
 4672 0037 16       		.uleb128 0x16
 4673 0038 00       		.byte	0
 4674 0039 03       		.uleb128 0x3
 4675 003a 0E       		.uleb128 0xe
 4676 003b 3A       		.uleb128 0x3a
 4677 003c 0B       		.uleb128 0xb
 4678 003d 3B       		.uleb128 0x3b
 4679 003e 05       		.uleb128 0x5
 4680 003f 49       		.uleb128 0x49
 4681 0040 13       		.uleb128 0x13
 4682 0041 00       		.byte	0
 4683 0042 00       		.byte	0
 4684 0043 06       		.uleb128 0x6
 4685 0044 0F       		.uleb128 0xf
 4686 0045 00       		.byte	0
 4687 0046 0B       		.uleb128 0xb
 4688 0047 0B       		.uleb128 0xb
 4689 0048 49       		.uleb128 0x49
 4690 0049 13       		.uleb128 0x13
 4691 004a 00       		.byte	0
 4692 004b 00       		.byte	0
 4693 004c 07       		.uleb128 0x7
 4694 004d 26       		.uleb128 0x26
 4695 004e 00       		.byte	0
 4696 004f 49       		.uleb128 0x49
 4697 0050 13       		.uleb128 0x13
 4698 0051 00       		.byte	0
 4699 0052 00       		.byte	0
 4700 0053 08       		.uleb128 0x8
 4701 0054 01       		.uleb128 0x1
 4702 0055 01       		.byte	0x1
 4703 0056 49       		.uleb128 0x49
 4704 0057 13       		.uleb128 0x13
 4705 0058 01       		.uleb128 0x1
 4706 0059 13       		.uleb128 0x13
 4707 005a 00       		.byte	0
 4708 005b 00       		.byte	0
 4709 005c 09       		.uleb128 0x9
 4710 005d 21       		.uleb128 0x21
 4711 005e 00       		.byte	0
 4712 005f 49       		.uleb128 0x49
 4713 0060 13       		.uleb128 0x13
 4714 0061 2F       		.uleb128 0x2f
 4715 0062 0B       		.uleb128 0xb
 4716 0063 00       		.byte	0
 4717 0064 00       		.byte	0
 4718 0065 0A       		.uleb128 0xa
 4719 0066 13       		.uleb128 0x13
 4720 0067 01       		.byte	0x1
 4721 0068 03       		.uleb128 0x3
 4722 0069 08       		.uleb128 0x8
 4723 006a 0B       		.uleb128 0xb
 4724 006b 0B       		.uleb128 0xb
 4725 006c 3A       		.uleb128 0x3a
 4726 006d 0B       		.uleb128 0xb
 4727 006e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 104


 4728 006f 0B       		.uleb128 0xb
 4729 0070 01       		.uleb128 0x1
 4730 0071 13       		.uleb128 0x13
 4731 0072 00       		.byte	0
 4732 0073 00       		.byte	0
 4733 0074 0B       		.uleb128 0xb
 4734 0075 0D       		.uleb128 0xd
 4735 0076 00       		.byte	0
 4736 0077 03       		.uleb128 0x3
 4737 0078 0E       		.uleb128 0xe
 4738 0079 3A       		.uleb128 0x3a
 4739 007a 0B       		.uleb128 0xb
 4740 007b 3B       		.uleb128 0x3b
 4741 007c 0B       		.uleb128 0xb
 4742 007d 49       		.uleb128 0x49
 4743 007e 13       		.uleb128 0x13
 4744 007f 38       		.uleb128 0x38
 4745 0080 0B       		.uleb128 0xb
 4746 0081 00       		.byte	0
 4747 0082 00       		.byte	0
 4748 0083 0C       		.uleb128 0xc
 4749 0084 13       		.uleb128 0x13
 4750 0085 01       		.byte	0x1
 4751 0086 0B       		.uleb128 0xb
 4752 0087 05       		.uleb128 0x5
 4753 0088 3A       		.uleb128 0x3a
 4754 0089 0B       		.uleb128 0xb
 4755 008a 3B       		.uleb128 0x3b
 4756 008b 0B       		.uleb128 0xb
 4757 008c 01       		.uleb128 0x1
 4758 008d 13       		.uleb128 0x13
 4759 008e 00       		.byte	0
 4760 008f 00       		.byte	0
 4761 0090 0D       		.uleb128 0xd
 4762 0091 13       		.uleb128 0x13
 4763 0092 01       		.byte	0x1
 4764 0093 0B       		.uleb128 0xb
 4765 0094 0B       		.uleb128 0xb
 4766 0095 3A       		.uleb128 0x3a
 4767 0096 0B       		.uleb128 0xb
 4768 0097 3B       		.uleb128 0x3b
 4769 0098 0B       		.uleb128 0xb
 4770 0099 01       		.uleb128 0x1
 4771 009a 13       		.uleb128 0x13
 4772 009b 00       		.byte	0
 4773 009c 00       		.byte	0
 4774 009d 0E       		.uleb128 0xe
 4775 009e 0D       		.uleb128 0xd
 4776 009f 00       		.byte	0
 4777 00a0 03       		.uleb128 0x3
 4778 00a1 08       		.uleb128 0x8
 4779 00a2 3A       		.uleb128 0x3a
 4780 00a3 0B       		.uleb128 0xb
 4781 00a4 3B       		.uleb128 0x3b
 4782 00a5 0B       		.uleb128 0xb
 4783 00a6 49       		.uleb128 0x49
 4784 00a7 13       		.uleb128 0x13
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 105


 4785 00a8 38       		.uleb128 0x38
 4786 00a9 0B       		.uleb128 0xb
 4787 00aa 00       		.byte	0
 4788 00ab 00       		.byte	0
 4789 00ac 0F       		.uleb128 0xf
 4790 00ad 35       		.uleb128 0x35
 4791 00ae 00       		.byte	0
 4792 00af 49       		.uleb128 0x49
 4793 00b0 13       		.uleb128 0x13
 4794 00b1 00       		.byte	0
 4795 00b2 00       		.byte	0
 4796 00b3 10       		.uleb128 0x10
 4797 00b4 2E       		.uleb128 0x2e
 4798 00b5 00       		.byte	0
 4799 00b6 3F       		.uleb128 0x3f
 4800 00b7 19       		.uleb128 0x19
 4801 00b8 03       		.uleb128 0x3
 4802 00b9 0E       		.uleb128 0xe
 4803 00ba 3A       		.uleb128 0x3a
 4804 00bb 0B       		.uleb128 0xb
 4805 00bc 3B       		.uleb128 0x3b
 4806 00bd 0B       		.uleb128 0xb
 4807 00be 27       		.uleb128 0x27
 4808 00bf 19       		.uleb128 0x19
 4809 00c0 11       		.uleb128 0x11
 4810 00c1 01       		.uleb128 0x1
 4811 00c2 12       		.uleb128 0x12
 4812 00c3 06       		.uleb128 0x6
 4813 00c4 40       		.uleb128 0x40
 4814 00c5 18       		.uleb128 0x18
 4815 00c6 9642     		.uleb128 0x2116
 4816 00c8 19       		.uleb128 0x19
 4817 00c9 00       		.byte	0
 4818 00ca 00       		.byte	0
 4819 00cb 11       		.uleb128 0x11
 4820 00cc 2E       		.uleb128 0x2e
 4821 00cd 00       		.byte	0
 4822 00ce 3F       		.uleb128 0x3f
 4823 00cf 19       		.uleb128 0x19
 4824 00d0 03       		.uleb128 0x3
 4825 00d1 0E       		.uleb128 0xe
 4826 00d2 3A       		.uleb128 0x3a
 4827 00d3 0B       		.uleb128 0xb
 4828 00d4 3B       		.uleb128 0x3b
 4829 00d5 0B       		.uleb128 0xb
 4830 00d6 11       		.uleb128 0x11
 4831 00d7 01       		.uleb128 0x1
 4832 00d8 12       		.uleb128 0x12
 4833 00d9 06       		.uleb128 0x6
 4834 00da 40       		.uleb128 0x40
 4835 00db 18       		.uleb128 0x18
 4836 00dc 9642     		.uleb128 0x2116
 4837 00de 19       		.uleb128 0x19
 4838 00df 00       		.byte	0
 4839 00e0 00       		.byte	0
 4840 00e1 12       		.uleb128 0x12
 4841 00e2 2E       		.uleb128 0x2e
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 106


 4842 00e3 01       		.byte	0x1
 4843 00e4 3F       		.uleb128 0x3f
 4844 00e5 19       		.uleb128 0x19
 4845 00e6 03       		.uleb128 0x3
 4846 00e7 0E       		.uleb128 0xe
 4847 00e8 3A       		.uleb128 0x3a
 4848 00e9 0B       		.uleb128 0xb
 4849 00ea 3B       		.uleb128 0x3b
 4850 00eb 0B       		.uleb128 0xb
 4851 00ec 49       		.uleb128 0x49
 4852 00ed 13       		.uleb128 0x13
 4853 00ee 11       		.uleb128 0x11
 4854 00ef 01       		.uleb128 0x1
 4855 00f0 12       		.uleb128 0x12
 4856 00f1 06       		.uleb128 0x6
 4857 00f2 40       		.uleb128 0x40
 4858 00f3 18       		.uleb128 0x18
 4859 00f4 9642     		.uleb128 0x2116
 4860 00f6 19       		.uleb128 0x19
 4861 00f7 01       		.uleb128 0x1
 4862 00f8 13       		.uleb128 0x13
 4863 00f9 00       		.byte	0
 4864 00fa 00       		.byte	0
 4865 00fb 13       		.uleb128 0x13
 4866 00fc 34       		.uleb128 0x34
 4867 00fd 00       		.byte	0
 4868 00fe 03       		.uleb128 0x3
 4869 00ff 0E       		.uleb128 0xe
 4870 0100 3A       		.uleb128 0x3a
 4871 0101 0B       		.uleb128 0xb
 4872 0102 3B       		.uleb128 0x3b
 4873 0103 0B       		.uleb128 0xb
 4874 0104 49       		.uleb128 0x49
 4875 0105 13       		.uleb128 0x13
 4876 0106 02       		.uleb128 0x2
 4877 0107 18       		.uleb128 0x18
 4878 0108 00       		.byte	0
 4879 0109 00       		.byte	0
 4880 010a 14       		.uleb128 0x14
 4881 010b 0B       		.uleb128 0xb
 4882 010c 01       		.byte	0x1
 4883 010d 11       		.uleb128 0x11
 4884 010e 01       		.uleb128 0x1
 4885 010f 12       		.uleb128 0x12
 4886 0110 06       		.uleb128 0x6
 4887 0111 00       		.byte	0
 4888 0112 00       		.byte	0
 4889 0113 15       		.uleb128 0x15
 4890 0114 2E       		.uleb128 0x2e
 4891 0115 01       		.byte	0x1
 4892 0116 3F       		.uleb128 0x3f
 4893 0117 19       		.uleb128 0x19
 4894 0118 03       		.uleb128 0x3
 4895 0119 0E       		.uleb128 0xe
 4896 011a 3A       		.uleb128 0x3a
 4897 011b 0B       		.uleb128 0xb
 4898 011c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 107


 4899 011d 0B       		.uleb128 0xb
 4900 011e 27       		.uleb128 0x27
 4901 011f 19       		.uleb128 0x19
 4902 0120 49       		.uleb128 0x49
 4903 0121 13       		.uleb128 0x13
 4904 0122 11       		.uleb128 0x11
 4905 0123 01       		.uleb128 0x1
 4906 0124 12       		.uleb128 0x12
 4907 0125 06       		.uleb128 0x6
 4908 0126 40       		.uleb128 0x40
 4909 0127 18       		.uleb128 0x18
 4910 0128 9642     		.uleb128 0x2116
 4911 012a 19       		.uleb128 0x19
 4912 012b 01       		.uleb128 0x1
 4913 012c 13       		.uleb128 0x13
 4914 012d 00       		.byte	0
 4915 012e 00       		.byte	0
 4916 012f 16       		.uleb128 0x16
 4917 0130 05       		.uleb128 0x5
 4918 0131 00       		.byte	0
 4919 0132 03       		.uleb128 0x3
 4920 0133 0E       		.uleb128 0xe
 4921 0134 3A       		.uleb128 0x3a
 4922 0135 0B       		.uleb128 0xb
 4923 0136 3B       		.uleb128 0x3b
 4924 0137 0B       		.uleb128 0xb
 4925 0138 49       		.uleb128 0x49
 4926 0139 13       		.uleb128 0x13
 4927 013a 02       		.uleb128 0x2
 4928 013b 18       		.uleb128 0x18
 4929 013c 00       		.byte	0
 4930 013d 00       		.byte	0
 4931 013e 17       		.uleb128 0x17
 4932 013f 34       		.uleb128 0x34
 4933 0140 00       		.byte	0
 4934 0141 03       		.uleb128 0x3
 4935 0142 08       		.uleb128 0x8
 4936 0143 3A       		.uleb128 0x3a
 4937 0144 0B       		.uleb128 0xb
 4938 0145 3B       		.uleb128 0x3b
 4939 0146 0B       		.uleb128 0xb
 4940 0147 49       		.uleb128 0x49
 4941 0148 13       		.uleb128 0x13
 4942 0149 02       		.uleb128 0x2
 4943 014a 18       		.uleb128 0x18
 4944 014b 00       		.byte	0
 4945 014c 00       		.byte	0
 4946 014d 18       		.uleb128 0x18
 4947 014e 2E       		.uleb128 0x2e
 4948 014f 01       		.byte	0x1
 4949 0150 3F       		.uleb128 0x3f
 4950 0151 19       		.uleb128 0x19
 4951 0152 03       		.uleb128 0x3
 4952 0153 0E       		.uleb128 0xe
 4953 0154 3A       		.uleb128 0x3a
 4954 0155 0B       		.uleb128 0xb
 4955 0156 3B       		.uleb128 0x3b
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 108


 4956 0157 05       		.uleb128 0x5
 4957 0158 27       		.uleb128 0x27
 4958 0159 19       		.uleb128 0x19
 4959 015a 49       		.uleb128 0x49
 4960 015b 13       		.uleb128 0x13
 4961 015c 11       		.uleb128 0x11
 4962 015d 01       		.uleb128 0x1
 4963 015e 12       		.uleb128 0x12
 4964 015f 06       		.uleb128 0x6
 4965 0160 40       		.uleb128 0x40
 4966 0161 18       		.uleb128 0x18
 4967 0162 9642     		.uleb128 0x2116
 4968 0164 19       		.uleb128 0x19
 4969 0165 01       		.uleb128 0x1
 4970 0166 13       		.uleb128 0x13
 4971 0167 00       		.byte	0
 4972 0168 00       		.byte	0
 4973 0169 19       		.uleb128 0x19
 4974 016a 05       		.uleb128 0x5
 4975 016b 00       		.byte	0
 4976 016c 03       		.uleb128 0x3
 4977 016d 0E       		.uleb128 0xe
 4978 016e 3A       		.uleb128 0x3a
 4979 016f 0B       		.uleb128 0xb
 4980 0170 3B       		.uleb128 0x3b
 4981 0171 05       		.uleb128 0x5
 4982 0172 49       		.uleb128 0x49
 4983 0173 13       		.uleb128 0x13
 4984 0174 02       		.uleb128 0x2
 4985 0175 18       		.uleb128 0x18
 4986 0176 00       		.byte	0
 4987 0177 00       		.byte	0
 4988 0178 1A       		.uleb128 0x1a
 4989 0179 34       		.uleb128 0x34
 4990 017a 00       		.byte	0
 4991 017b 03       		.uleb128 0x3
 4992 017c 08       		.uleb128 0x8
 4993 017d 3A       		.uleb128 0x3a
 4994 017e 0B       		.uleb128 0xb
 4995 017f 3B       		.uleb128 0x3b
 4996 0180 05       		.uleb128 0x5
 4997 0181 49       		.uleb128 0x49
 4998 0182 13       		.uleb128 0x13
 4999 0183 02       		.uleb128 0x2
 5000 0184 18       		.uleb128 0x18
 5001 0185 00       		.byte	0
 5002 0186 00       		.byte	0
 5003 0187 1B       		.uleb128 0x1b
 5004 0188 2E       		.uleb128 0x2e
 5005 0189 01       		.byte	0x1
 5006 018a 3F       		.uleb128 0x3f
 5007 018b 19       		.uleb128 0x19
 5008 018c 03       		.uleb128 0x3
 5009 018d 0E       		.uleb128 0xe
 5010 018e 3A       		.uleb128 0x3a
 5011 018f 0B       		.uleb128 0xb
 5012 0190 3B       		.uleb128 0x3b
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 109


 5013 0191 05       		.uleb128 0x5
 5014 0192 49       		.uleb128 0x49
 5015 0193 13       		.uleb128 0x13
 5016 0194 11       		.uleb128 0x11
 5017 0195 01       		.uleb128 0x1
 5018 0196 12       		.uleb128 0x12
 5019 0197 06       		.uleb128 0x6
 5020 0198 40       		.uleb128 0x40
 5021 0199 18       		.uleb128 0x18
 5022 019a 9642     		.uleb128 0x2116
 5023 019c 19       		.uleb128 0x19
 5024 019d 01       		.uleb128 0x1
 5025 019e 13       		.uleb128 0x13
 5026 019f 00       		.byte	0
 5027 01a0 00       		.byte	0
 5028 01a1 1C       		.uleb128 0x1c
 5029 01a2 34       		.uleb128 0x34
 5030 01a3 00       		.byte	0
 5031 01a4 03       		.uleb128 0x3
 5032 01a5 0E       		.uleb128 0xe
 5033 01a6 3A       		.uleb128 0x3a
 5034 01a7 0B       		.uleb128 0xb
 5035 01a8 3B       		.uleb128 0x3b
 5036 01a9 05       		.uleb128 0x5
 5037 01aa 49       		.uleb128 0x49
 5038 01ab 13       		.uleb128 0x13
 5039 01ac 02       		.uleb128 0x2
 5040 01ad 18       		.uleb128 0x18
 5041 01ae 00       		.byte	0
 5042 01af 00       		.byte	0
 5043 01b0 1D       		.uleb128 0x1d
 5044 01b1 2E       		.uleb128 0x2e
 5045 01b2 00       		.byte	0
 5046 01b3 3F       		.uleb128 0x3f
 5047 01b4 19       		.uleb128 0x19
 5048 01b5 03       		.uleb128 0x3
 5049 01b6 0E       		.uleb128 0xe
 5050 01b7 3A       		.uleb128 0x3a
 5051 01b8 0B       		.uleb128 0xb
 5052 01b9 3B       		.uleb128 0x3b
 5053 01ba 05       		.uleb128 0x5
 5054 01bb 11       		.uleb128 0x11
 5055 01bc 01       		.uleb128 0x1
 5056 01bd 12       		.uleb128 0x12
 5057 01be 06       		.uleb128 0x6
 5058 01bf 40       		.uleb128 0x40
 5059 01c0 18       		.uleb128 0x18
 5060 01c1 9642     		.uleb128 0x2116
 5061 01c3 19       		.uleb128 0x19
 5062 01c4 00       		.byte	0
 5063 01c5 00       		.byte	0
 5064 01c6 1E       		.uleb128 0x1e
 5065 01c7 2E       		.uleb128 0x2e
 5066 01c8 00       		.byte	0
 5067 01c9 3F       		.uleb128 0x3f
 5068 01ca 19       		.uleb128 0x19
 5069 01cb 03       		.uleb128 0x3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 110


 5070 01cc 0E       		.uleb128 0xe
 5071 01cd 3A       		.uleb128 0x3a
 5072 01ce 0B       		.uleb128 0xb
 5073 01cf 3B       		.uleb128 0x3b
 5074 01d0 05       		.uleb128 0x5
 5075 01d1 49       		.uleb128 0x49
 5076 01d2 13       		.uleb128 0x13
 5077 01d3 11       		.uleb128 0x11
 5078 01d4 01       		.uleb128 0x1
 5079 01d5 12       		.uleb128 0x12
 5080 01d6 06       		.uleb128 0x6
 5081 01d7 40       		.uleb128 0x40
 5082 01d8 18       		.uleb128 0x18
 5083 01d9 9642     		.uleb128 0x2116
 5084 01db 19       		.uleb128 0x19
 5085 01dc 00       		.byte	0
 5086 01dd 00       		.byte	0
 5087 01de 1F       		.uleb128 0x1f
 5088 01df 2E       		.uleb128 0x2e
 5089 01e0 01       		.byte	0x1
 5090 01e1 3F       		.uleb128 0x3f
 5091 01e2 19       		.uleb128 0x19
 5092 01e3 03       		.uleb128 0x3
 5093 01e4 0E       		.uleb128 0xe
 5094 01e5 3A       		.uleb128 0x3a
 5095 01e6 0B       		.uleb128 0xb
 5096 01e7 3B       		.uleb128 0x3b
 5097 01e8 05       		.uleb128 0x5
 5098 01e9 11       		.uleb128 0x11
 5099 01ea 01       		.uleb128 0x1
 5100 01eb 12       		.uleb128 0x12
 5101 01ec 06       		.uleb128 0x6
 5102 01ed 40       		.uleb128 0x40
 5103 01ee 18       		.uleb128 0x18
 5104 01ef 9642     		.uleb128 0x2116
 5105 01f1 19       		.uleb128 0x19
 5106 01f2 01       		.uleb128 0x1
 5107 01f3 13       		.uleb128 0x13
 5108 01f4 00       		.byte	0
 5109 01f5 00       		.byte	0
 5110 01f6 20       		.uleb128 0x20
 5111 01f7 2E       		.uleb128 0x2e
 5112 01f8 00       		.byte	0
 5113 01f9 3F       		.uleb128 0x3f
 5114 01fa 19       		.uleb128 0x19
 5115 01fb 03       		.uleb128 0x3
 5116 01fc 0E       		.uleb128 0xe
 5117 01fd 3A       		.uleb128 0x3a
 5118 01fe 0B       		.uleb128 0xb
 5119 01ff 3B       		.uleb128 0x3b
 5120 0200 05       		.uleb128 0x5
 5121 0201 11       		.uleb128 0x11
 5122 0202 01       		.uleb128 0x1
 5123 0203 12       		.uleb128 0x12
 5124 0204 06       		.uleb128 0x6
 5125 0205 40       		.uleb128 0x40
 5126 0206 18       		.uleb128 0x18
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 111


 5127 0207 9742     		.uleb128 0x2117
 5128 0209 19       		.uleb128 0x19
 5129 020a 00       		.byte	0
 5130 020b 00       		.byte	0
 5131 020c 21       		.uleb128 0x21
 5132 020d 2E       		.uleb128 0x2e
 5133 020e 00       		.byte	0
 5134 020f 3F       		.uleb128 0x3f
 5135 0210 19       		.uleb128 0x19
 5136 0211 03       		.uleb128 0x3
 5137 0212 0E       		.uleb128 0xe
 5138 0213 3A       		.uleb128 0x3a
 5139 0214 0B       		.uleb128 0xb
 5140 0215 3B       		.uleb128 0x3b
 5141 0216 05       		.uleb128 0x5
 5142 0217 49       		.uleb128 0x49
 5143 0218 13       		.uleb128 0x13
 5144 0219 11       		.uleb128 0x11
 5145 021a 01       		.uleb128 0x1
 5146 021b 12       		.uleb128 0x12
 5147 021c 06       		.uleb128 0x6
 5148 021d 40       		.uleb128 0x40
 5149 021e 18       		.uleb128 0x18
 5150 021f 9742     		.uleb128 0x2117
 5151 0221 19       		.uleb128 0x19
 5152 0222 00       		.byte	0
 5153 0223 00       		.byte	0
 5154 0224 22       		.uleb128 0x22
 5155 0225 34       		.uleb128 0x34
 5156 0226 00       		.byte	0
 5157 0227 03       		.uleb128 0x3
 5158 0228 0E       		.uleb128 0xe
 5159 0229 3A       		.uleb128 0x3a
 5160 022a 0B       		.uleb128 0xb
 5161 022b 3B       		.uleb128 0x3b
 5162 022c 05       		.uleb128 0x5
 5163 022d 49       		.uleb128 0x49
 5164 022e 13       		.uleb128 0x13
 5165 022f 3F       		.uleb128 0x3f
 5166 0230 19       		.uleb128 0x19
 5167 0231 3C       		.uleb128 0x3c
 5168 0232 19       		.uleb128 0x19
 5169 0233 00       		.byte	0
 5170 0234 00       		.byte	0
 5171 0235 23       		.uleb128 0x23
 5172 0236 34       		.uleb128 0x34
 5173 0237 00       		.byte	0
 5174 0238 03       		.uleb128 0x3
 5175 0239 0E       		.uleb128 0xe
 5176 023a 3A       		.uleb128 0x3a
 5177 023b 0B       		.uleb128 0xb
 5178 023c 3B       		.uleb128 0x3b
 5179 023d 0B       		.uleb128 0xb
 5180 023e 49       		.uleb128 0x49
 5181 023f 13       		.uleb128 0x13
 5182 0240 3F       		.uleb128 0x3f
 5183 0241 19       		.uleb128 0x19
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 112


 5184 0242 02       		.uleb128 0x2
 5185 0243 18       		.uleb128 0x18
 5186 0244 00       		.byte	0
 5187 0245 00       		.byte	0
 5188 0246 24       		.uleb128 0x24
 5189 0247 21       		.uleb128 0x21
 5190 0248 00       		.byte	0
 5191 0249 49       		.uleb128 0x49
 5192 024a 13       		.uleb128 0x13
 5193 024b 2F       		.uleb128 0x2f
 5194 024c 05       		.uleb128 0x5
 5195 024d 00       		.byte	0
 5196 024e 00       		.byte	0
 5197 024f 25       		.uleb128 0x25
 5198 0250 34       		.uleb128 0x34
 5199 0251 00       		.byte	0
 5200 0252 03       		.uleb128 0x3
 5201 0253 08       		.uleb128 0x8
 5202 0254 3A       		.uleb128 0x3a
 5203 0255 0B       		.uleb128 0xb
 5204 0256 3B       		.uleb128 0x3b
 5205 0257 0B       		.uleb128 0xb
 5206 0258 49       		.uleb128 0x49
 5207 0259 13       		.uleb128 0x13
 5208 025a 3F       		.uleb128 0x3f
 5209 025b 19       		.uleb128 0x19
 5210 025c 02       		.uleb128 0x2
 5211 025d 18       		.uleb128 0x18
 5212 025e 00       		.byte	0
 5213 025f 00       		.byte	0
 5214 0260 00       		.byte	0
 5215              		.section	.debug_aranges,"",%progbits
 5216 0000 DC000000 		.4byte	0xdc
 5217 0004 0200     		.2byte	0x2
 5218 0006 00000000 		.4byte	.Ldebug_info0
 5219 000a 04       		.byte	0x4
 5220 000b 00       		.byte	0
 5221 000c 0000     		.2byte	0
 5222 000e 0000     		.2byte	0
 5223 0010 00000000 		.4byte	.LFB64
 5224 0014 44000000 		.4byte	.LFE64-.LFB64
 5225 0018 00000000 		.4byte	.LFB65
 5226 001c 6C000000 		.4byte	.LFE65-.LFB65
 5227 0020 00000000 		.4byte	.LFB66
 5228 0024 32000000 		.4byte	.LFE66-.LFB66
 5229 0028 00000000 		.4byte	.LFB67
 5230 002c 20000000 		.4byte	.LFE67-.LFB67
 5231 0030 00000000 		.4byte	.LFB68
 5232 0034 40000000 		.4byte	.LFE68-.LFB68
 5233 0038 00000000 		.4byte	.LFB69
 5234 003c DC000000 		.4byte	.LFE69-.LFB69
 5235 0040 00000000 		.4byte	.LFB70
 5236 0044 1C000000 		.4byte	.LFE70-.LFB70
 5237 0048 00000000 		.4byte	.LFB71
 5238 004c 28000000 		.4byte	.LFE71-.LFB71
 5239 0050 00000000 		.4byte	.LFB72
 5240 0054 C8000000 		.4byte	.LFE72-.LFB72
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 113


 5241 0058 00000000 		.4byte	.LFB73
 5242 005c 00010000 		.4byte	.LFE73-.LFB73
 5243 0060 00000000 		.4byte	.LFB74
 5244 0064 78000000 		.4byte	.LFE74-.LFB74
 5245 0068 00000000 		.4byte	.LFB75
 5246 006c 3C010000 		.4byte	.LFE75-.LFB75
 5247 0070 00000000 		.4byte	.LFB76
 5248 0074 B8000000 		.4byte	.LFE76-.LFB76
 5249 0078 00000000 		.4byte	.LFB77
 5250 007c 1C000000 		.4byte	.LFE77-.LFB77
 5251 0080 00000000 		.4byte	.LFB78
 5252 0084 28000000 		.4byte	.LFE78-.LFB78
 5253 0088 00000000 		.4byte	.LFB79
 5254 008c 84000000 		.4byte	.LFE79-.LFB79
 5255 0090 00000000 		.4byte	.LFB80
 5256 0094 34000000 		.4byte	.LFE80-.LFB80
 5257 0098 00000000 		.4byte	.LFB81
 5258 009c 5C020000 		.4byte	.LFE81-.LFB81
 5259 00a0 00000000 		.4byte	.LFB82
 5260 00a4 68010000 		.4byte	.LFE82-.LFB82
 5261 00a8 00000000 		.4byte	.LFB83
 5262 00ac 44010000 		.4byte	.LFE83-.LFB83
 5263 00b0 00000000 		.4byte	.LFB84
 5264 00b4 14000000 		.4byte	.LFE84-.LFB84
 5265 00b8 00000000 		.4byte	.LFB85
 5266 00bc 1A000000 		.4byte	.LFE85-.LFB85
 5267 00c0 00000000 		.4byte	.LFB86
 5268 00c4 2A000000 		.4byte	.LFE86-.LFB86
 5269 00c8 00000000 		.4byte	.LFB87
 5270 00cc 10030000 		.4byte	.LFE87-.LFB87
 5271 00d0 00000000 		.4byte	.LFB88
 5272 00d4 BC000000 		.4byte	.LFE88-.LFB88
 5273 00d8 00000000 		.4byte	0
 5274 00dc 00000000 		.4byte	0
 5275              		.section	.debug_ranges,"",%progbits
 5276              	.Ldebug_ranges0:
 5277 0000 00000000 		.4byte	.LFB64
 5278 0004 44000000 		.4byte	.LFE64
 5279 0008 00000000 		.4byte	.LFB65
 5280 000c 6C000000 		.4byte	.LFE65
 5281 0010 00000000 		.4byte	.LFB66
 5282 0014 32000000 		.4byte	.LFE66
 5283 0018 00000000 		.4byte	.LFB67
 5284 001c 20000000 		.4byte	.LFE67
 5285 0020 00000000 		.4byte	.LFB68
 5286 0024 40000000 		.4byte	.LFE68
 5287 0028 00000000 		.4byte	.LFB69
 5288 002c DC000000 		.4byte	.LFE69
 5289 0030 00000000 		.4byte	.LFB70
 5290 0034 1C000000 		.4byte	.LFE70
 5291 0038 00000000 		.4byte	.LFB71
 5292 003c 28000000 		.4byte	.LFE71
 5293 0040 00000000 		.4byte	.LFB72
 5294 0044 C8000000 		.4byte	.LFE72
 5295 0048 00000000 		.4byte	.LFB73
 5296 004c 00010000 		.4byte	.LFE73
 5297 0050 00000000 		.4byte	.LFB74
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 114


 5298 0054 78000000 		.4byte	.LFE74
 5299 0058 00000000 		.4byte	.LFB75
 5300 005c 3C010000 		.4byte	.LFE75
 5301 0060 00000000 		.4byte	.LFB76
 5302 0064 B8000000 		.4byte	.LFE76
 5303 0068 00000000 		.4byte	.LFB77
 5304 006c 1C000000 		.4byte	.LFE77
 5305 0070 00000000 		.4byte	.LFB78
 5306 0074 28000000 		.4byte	.LFE78
 5307 0078 00000000 		.4byte	.LFB79
 5308 007c 84000000 		.4byte	.LFE79
 5309 0080 00000000 		.4byte	.LFB80
 5310 0084 34000000 		.4byte	.LFE80
 5311 0088 00000000 		.4byte	.LFB81
 5312 008c 5C020000 		.4byte	.LFE81
 5313 0090 00000000 		.4byte	.LFB82
 5314 0094 68010000 		.4byte	.LFE82
 5315 0098 00000000 		.4byte	.LFB83
 5316 009c 44010000 		.4byte	.LFE83
 5317 00a0 00000000 		.4byte	.LFB84
 5318 00a4 14000000 		.4byte	.LFE84
 5319 00a8 00000000 		.4byte	.LFB85
 5320 00ac 1A000000 		.4byte	.LFE85
 5321 00b0 00000000 		.4byte	.LFB86
 5322 00b4 2A000000 		.4byte	.LFE86
 5323 00b8 00000000 		.4byte	.LFB87
 5324 00bc 10030000 		.4byte	.LFE87
 5325 00c0 00000000 		.4byte	.LFB88
 5326 00c4 BC000000 		.4byte	.LFE88
 5327 00c8 00000000 		.4byte	0
 5328 00cc 00000000 		.4byte	0
 5329              		.section	.debug_line,"",%progbits
 5330              	.Ldebug_line0:
 5331 0000 8F050000 		.section	.debug_str,"MS",%progbits,1
 5331      0200EF01 
 5331      00000201 
 5331      FB0E0D00 
 5331      01010101 
 5332              	.LASF133:
 5333 0000 676D745F 		.ascii	"gmt_offset\000"
 5333      6F666673 
 5333      657400
 5334              	.LASF16:
 5335 000b 75696E74 		.ascii	"uint16\000"
 5335      313600
 5336              	.LASF38:
 5337 0012 76616C75 		.ascii	"value\000"
 5337      6500
 5338              	.LASF27:
 5339 0018 746D5F68 		.ascii	"tm_hour\000"
 5339      6F757200 
 5340              	.LASF32:
 5341 0020 746D5F79 		.ascii	"tm_yday\000"
 5341      64617900 
 5342              	.LASF144:
 5343 0028 62756666 		.ascii	"buffer_overflow\000"
 5343      65725F6F 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 115


 5343      76657266 
 5343      6C6F7700 
 5344              	.LASF4:
 5345 0038 5F5F7569 		.ascii	"__uint8_t\000"
 5345      6E74385F 
 5345      7400
 5346              	.LASF69:
 5347 0042 636F756E 		.ascii	"countDownResetCondition\000"
 5347      74446F77 
 5347      6E526573 
 5347      6574436F 
 5347      6E646974 
 5348              	.LASF54:
 5349 005a 6C6F6E67 		.ascii	"longitude\000"
 5349      69747564 
 5349      6500
 5350              	.LASF165:
 5351 0064 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5351      43313120 
 5351      352E342E 
 5351      31203230 
 5351      31363036 
 5352 0097 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 5352      20726576 
 5352      6973696F 
 5352      6E203233 
 5352      37373135 
 5353 00ca 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5353      66756E63 
 5353      74696F6E 
 5353      2D736563 
 5353      74696F6E 
 5354              	.LASF136:
 5355 00f2 6D6F6465 		.ascii	"modem_wakeup\000"
 5355      6D5F7761 
 5355      6B657570 
 5355      00
 5356              	.LASF10:
 5357 00ff 6C6F6E67 		.ascii	"long long unsigned int\000"
 5357      206C6F6E 
 5357      6720756E 
 5357      7369676E 
 5357      65642069 
 5358              	.LASF120:
 5359 0116 73616D70 		.ascii	"sample_freq\000"
 5359      6C655F66 
 5359      72657100 
 5360              	.LASF148:
 5361 0122 6D6F6465 		.ascii	"modem_state\000"
 5361      6D5F7374 
 5361      61746500 
 5362              	.LASF96:
 5363 012e 74657374 		.ascii	"test\000"
 5363      00
 5364              	.LASF158:
 5365 0133 616C6172 		.ascii	"alarmMeasure\000"
 5365      6D4D6561 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 116


 5365      73757265 
 5365      00
 5366              	.LASF143:
 5367 0140 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5367      52784275 
 5367      66666572 
 5367      00
 5368              	.LASF150:
 5369 014d 6D6F6465 		.ascii	"modem_stats\000"
 5369      6D5F7374 
 5369      61747300 
 5370              	.LASF9:
 5371 0159 6C6F6E67 		.ascii	"long long int\000"
 5371      206C6F6E 
 5371      6720696E 
 5371      7400
 5372              	.LASF0:
 5373 0167 7369676E 		.ascii	"signed char\000"
 5373      65642063 
 5373      68617200 
 5374              	.LASF47:
 5375 0173 65636E6F 		.ascii	"ecno\000"
 5375      00
 5376              	.LASF66:
 5377 0178 636F756E 		.ascii	"countDownValue\000"
 5377      74446F77 
 5377      6E56616C 
 5377      756500
 5378              	.LASF159:
 5379 0187 74696D65 		.ascii	"timeToMeasure\000"
 5379      546F4D65 
 5379      61737572 
 5379      6500
 5380              	.LASF50:
 5381 0195 74696D65 		.ascii	"time_to_network_connect\000"
 5381      5F746F5F 
 5381      6E657477 
 5381      6F726B5F 
 5381      636F6E6E 
 5382              	.LASF161:
 5383 01ad 74696D65 		.ascii	"timeToSync\000"
 5383      546F5379 
 5383      6E6300
 5384              	.LASF154:
 5385 01b8 68747470 		.ascii	"http_body\000"
 5385      5F626F64 
 5385      7900
 5386              	.LASF107:
 5387 01c2 7365745F 		.ascii	"set_up_internet_connection\000"
 5387      75705F69 
 5387      6E746572 
 5387      6E65745F 
 5387      636F6E6E 
 5388              	.LASF132:
 5389 01dd 7365636F 		.ascii	"second\000"
 5389      6E6400
 5390              	.LASF128:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 117


 5391 01e4 79656172 		.ascii	"year\000"
 5391      00
 5392              	.LASF45:
 5393 01e9 72786C65 		.ascii	"rxlev\000"
 5393      7600
 5394              	.LASF6:
 5395 01ef 6C6F6E67 		.ascii	"long int\000"
 5395      20696E74 
 5395      00
 5396              	.LASF67:
 5397 01f8 63757272 		.ascii	"currentCountDownValue\000"
 5397      656E7443 
 5397      6F756E74 
 5397      446F776E 
 5397      56616C75 
 5398              	.LASF134:
 5399 020e 6D6F6465 		.ascii	"modem_get_state\000"
 5399      6D5F6765 
 5399      745F7374 
 5399      61746500 
 5400              	.LASF55:
 5401 021e 616C7469 		.ascii	"altitude\000"
 5401      74756465 
 5401      00
 5402              	.LASF15:
 5403 0227 75696E74 		.ascii	"uint8\000"
 5403      3800
 5404              	.LASF21:
 5405 022d 646F7562 		.ascii	"double\000"
 5405      6C6500
 5406              	.LASF19:
 5407 0234 696E7433 		.ascii	"int32\000"
 5407      3200
 5408              	.LASF59:
 5409 023a 6E6F6465 		.ascii	"node_type\000"
 5409      5F747970 
 5409      6500
 5410              	.LASF124:
 5411 0244 6D6F6465 		.ascii	"modem_configure_settings\000"
 5411      6D5F636F 
 5411      6E666967 
 5411      7572655F 
 5411      73657474 
 5412              	.LASF115:
 5413 025d 735F7369 		.ascii	"s_sim_type\000"
 5413      6D5F7479 
 5413      706500
 5414              	.LASF97:
 5415 0268 6E657477 		.ascii	"network_time\000"
 5415      6F726B5F 
 5415      74696D65 
 5415      00
 5416              	.LASF3:
 5417 0275 73686F72 		.ascii	"short unsigned int\000"
 5417      7420756E 
 5417      7369676E 
 5417      65642069 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 118


 5417      6E7400
 5418              	.LASF17:
 5419 0288 75696E74 		.ascii	"uint32\000"
 5419      333200
 5420              	.LASF93:
 5421 028f 696E7465 		.ascii	"interval\000"
 5421      7276616C 
 5421      00
 5422              	.LASF141:
 5423 0298 6C6F6E5F 		.ascii	"lon_dir\000"
 5423      64697200 
 5424              	.LASF7:
 5425 02a0 5F5F7569 		.ascii	"__uint32_t\000"
 5425      6E743332 
 5425      5F7400
 5426              	.LASF126:
 5427 02ab 6D6F6465 		.ascii	"modem_get_network_time\000"
 5427      6D5F6765 
 5427      745F6E65 
 5427      74776F72 
 5427      6B5F7469 
 5428              	.LASF29:
 5429 02c2 746D5F6D 		.ascii	"tm_mon\000"
 5429      6F6E00
 5430              	.LASF142:
 5431 02c9 6770735F 		.ascii	"gps_test\000"
 5431      74657374 
 5431      00
 5432              	.LASF63:
 5433 02d2 64656275 		.ascii	"debug_level\000"
 5433      675F6C65 
 5433      76656C00 
 5434              	.LASF135:
 5435 02de 6D6F6465 		.ascii	"modem_sleep\000"
 5435      6D5F736C 
 5435      65657000 
 5436              	.LASF118:
 5437 02ea 735F6465 		.ascii	"s_debug_freq\000"
 5437      6275675F 
 5437      66726571 
 5437      00
 5438              	.LASF111:
 5439 02f7 75706461 		.ascii	"updatable_parameters_initialize\000"
 5439      7461626C 
 5439      655F7061 
 5439      72616D65 
 5439      74657273 
 5440              	.LASF30:
 5441 0317 746D5F79 		.ascii	"tm_year\000"
 5441      65617200 
 5442              	.LASF160:
 5443 031f 616C6172 		.ascii	"alarmSync\000"
 5443      6D53796E 
 5443      6300
 5444              	.LASF79:
 5445 0329 70696E73 		.ascii	"pins_configure_active\000"
 5445      5F636F6E 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 119


 5445      66696775 
 5445      72655F61 
 5445      63746976 
 5446              	.LASF40:
 5447 033f 6B65795F 		.ascii	"key_value_t\000"
 5447      76616C75 
 5447      655F7400 
 5448              	.LASF123:
 5449 034b 6770735F 		.ascii	"gps_check\000"
 5449      63686563 
 5449      6B00
 5450              	.LASF84:
 5451 0355 7077725F 		.ascii	"pwr_check\000"
 5451      63686563 
 5451      6B00
 5452              	.LASF8:
 5453 035f 6C6F6E67 		.ascii	"long unsigned int\000"
 5453      20756E73 
 5453      69676E65 
 5453      6420696E 
 5453      7400
 5454              	.LASF99:
 5455 0371 65787472 		.ascii	"extract_string\000"
 5455      6163745F 
 5455      73747269 
 5455      6E6700
 5456              	.LASF89:
 5457 0380 74696D65 		.ascii	"timeout\000"
 5457      6F757400 
 5458              	.LASF112:
 5459 0388 6765745F 		.ascii	"get_cell_network_stats\000"
 5459      63656C6C 
 5459      5F6E6574 
 5459      776F726B 
 5459      5F737461 
 5460              	.LASF56:
 5461 039f 74696D65 		.ascii	"time_to_lock\000"
 5461      5F746F5F 
 5461      6C6F636B 
 5461      00
 5462              	.LASF147:
 5463 03ac 64617461 		.ascii	"data\000"
 5463      00
 5464              	.LASF75:
 5465 03b1 65705F70 		.ascii	"ep_port\000"
 5465      6F727400 
 5466              	.LASF33:
 5467 03b9 746D5F69 		.ascii	"tm_isdst\000"
 5467      73647374 
 5467      00
 5468              	.LASF71:
 5469 03c2 6D6F6465 		.ascii	"modem_info\000"
 5469      6D5F696E 
 5469      666F00
 5470              	.LASF74:
 5471 03cd 65705F68 		.ascii	"ep_host\000"
 5471      6F737400 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 120


 5472              	.LASF72:
 5473 03d5 63686970 		.ascii	"chip_uniqueId\000"
 5473      5F756E69 
 5473      71756549 
 5473      6400
 5474              	.LASF94:
 5475 03e3 6D6F6465 		.ascii	"modem_power_up\000"
 5475      6D5F706F 
 5475      7765725F 
 5475      757000
 5476              	.LASF166:
 5477 03f2 6D6F6465 		.ascii	"modem.c\000"
 5477      6D2E6300 
 5478              	.LASF101:
 5479 03fa 62656769 		.ascii	"beginMarker\000"
 5479      6E4D6172 
 5479      6B657200 
 5480              	.LASF103:
 5481 0406 74617267 		.ascii	"target\000"
 5481      657400
 5482              	.LASF51:
 5483 040d 74696D65 		.ascii	"time_to_acquire_ip\000"
 5483      5F746F5F 
 5483      61637175 
 5483      6972655F 
 5483      697000
 5484              	.LASF102:
 5485 0420 656E644D 		.ascii	"endMarker\000"
 5485      61726B65 
 5485      7200
 5486              	.LASF2:
 5487 042a 73686F72 		.ascii	"short int\000"
 5487      7420696E 
 5487      7400
 5488              	.LASF127:
 5489 0434 65706F63 		.ascii	"epoch_time\000"
 5489      685F7469 
 5489      6D6500
 5490              	.LASF5:
 5491 043f 5F5F696E 		.ascii	"__int32_t\000"
 5491      7433325F 
 5491      7400
 5492              	.LASF100:
 5493 0449 66726F6D 		.ascii	"from\000"
 5493      00
 5494              	.LASF106:
 5495 044e 63726567 		.ascii	"creg\000"
 5495      00
 5496              	.LASF122:
 5497 0453 64656275 		.ascii	"debug_freq\000"
 5497      675F6672 
 5497      657100
 5498              	.LASF90:
 5499 045e 61745F61 		.ascii	"at_attempt\000"
 5499      7474656D 
 5499      707400
 5500              	.LASF98:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 121


 5501 0469 61745F77 		.ascii	"at_write_command\000"
 5501      72697465 
 5501      5F636F6D 
 5501      6D616E64 
 5501      00
 5502              	.LASF73:
 5503 047a 7379735F 		.ascii	"sys_info_t\000"
 5503      696E666F 
 5503      5F7400
 5504              	.LASF65:
 5505 0485 75706461 		.ascii	"updatable_parameters_t\000"
 5505      7461626C 
 5505      655F7061 
 5505      72616D65 
 5505      74657273 
 5506              	.LASF121:
 5507 049c 7265706F 		.ascii	"report_freq\000"
 5507      72745F66 
 5507      72657100 
 5508              	.LASF145:
 5509 04a8 64617461 		.ascii	"dataPointsInStack\000"
 5509      506F696E 
 5509      7473496E 
 5509      53746163 
 5509      6B00
 5510              	.LASF26:
 5511 04ba 746D5F6D 		.ascii	"tm_min\000"
 5511      696E00
 5512              	.LASF24:
 5513 04c1 73697A65 		.ascii	"sizetype\000"
 5513      74797065 
 5513      00
 5514              	.LASF129:
 5515 04ca 6D6F6E74 		.ascii	"month\000"
 5515      6800
 5516              	.LASF105:
 5517 04d0 69735F63 		.ascii	"is_connected_to_cell_network\000"
 5517      6F6E6E65 
 5517      63746564 
 5517      5F746F5F 
 5517      63656C6C 
 5518              	.LASF163:
 5519 04ed 75617274 		.ascii	"uart_received_string\000"
 5519      5F726563 
 5519      65697665 
 5519      645F7374 
 5519      72696E67 
 5520              	.LASF53:
 5521 0502 6C617469 		.ascii	"latitude\000"
 5521      74756465 
 5521      00
 5522              	.LASF34:
 5523 050b 74657374 		.ascii	"test_name\000"
 5523      5F6E616D 
 5523      6500
 5524              	.LASF162:
 5525 0515 74696D65 		.ascii	"timeToSycnRemoteParams\000"
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 122


 5525      546F5379 
 5525      636E5265 
 5525      6D6F7465 
 5525      50617261 
 5526              	.LASF95:
 5527 052c 6D6F6465 		.ascii	"modem_test\000"
 5527      6D5F7465 
 5527      737400
 5528              	.LASF110:
 5529 0537 6D617463 		.ascii	"match\000"
 5529      6800
 5530              	.LASF151:
 5531 053d 75706461 		.ascii	"updatable_parameters\000"
 5531      7461626C 
 5531      655F7061 
 5531      72616D65 
 5531      74657273 
 5532              	.LASF130:
 5533 0552 686F7572 		.ascii	"hour\000"
 5533      00
 5534              	.LASF87:
 5535 0557 636F6D6D 		.ascii	"commands\000"
 5535      616E6473 
 5535      00
 5536              	.LASF91:
 5537 0560 636F6D70 		.ascii	"compare_location\000"
 5537      6172655F 
 5537      6C6F6361 
 5537      74696F6E 
 5537      00
 5538              	.LASF20:
 5539 0571 666C6F61 		.ascii	"float\000"
 5539      7400
 5540              	.LASF77:
 5541 0577 6D6F6465 		.ascii	"modem_initialize\000"
 5541      6D5F696E 
 5541      69746961 
 5541      6C697A65 
 5541      00
 5542              	.LASF117:
 5543 0588 735F7265 		.ascii	"s_report_freq\000"
 5543      706F7274 
 5543      5F667265 
 5543      7100
 5544              	.LASF60:
 5545 0596 73696D5F 		.ascii	"sim_type\000"
 5545      74797065 
 5545      00
 5546              	.LASF81:
 5547 059f 61745F72 		.ascii	"at_ready\000"
 5547      65616479 
 5547      00
 5548              	.LASF108:
 5549 05a8 6973725F 		.ascii	"isr_telit_rx\000"
 5549      74656C69 
 5549      745F7278 
 5549      00
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 123


 5550              	.LASF70:
 5551 05b5 616C6172 		.ascii	"alarm\000"
 5551      6D00
 5552              	.LASF64:
 5553 05bb 5F426F6F 		.ascii	"_Bool\000"
 5553      6C00
 5554              	.LASF13:
 5555 05c1 696E7433 		.ascii	"int32_t\000"
 5555      325F7400 
 5556              	.LASF1:
 5557 05c9 756E7369 		.ascii	"unsigned char\000"
 5557      676E6564 
 5557      20636861 
 5557      7200
 5558              	.LASF157:
 5559 05d7 73797374 		.ascii	"system_settings\000"
 5559      656D5F73 
 5559      65747469 
 5559      6E677300 
 5560              	.LASF92:
 5561 05e7 64656C61 		.ascii	"delay\000"
 5561      7900
 5562              	.LASF48:
 5563 05ed 72737271 		.ascii	"rsrq\000"
 5563      00
 5564              	.LASF62:
 5565 05f2 73796E63 		.ascii	"sync_time\000"
 5565      5F74696D 
 5565      6500
 5566              	.LASF114:
 5567 05fc 735F6E6F 		.ascii	"s_node_type\000"
 5567      64655F74 
 5567      79706500 
 5568              	.LASF46:
 5569 0608 72736370 		.ascii	"rscp\000"
 5569      00
 5570              	.LASF137:
 5571 060d 6D6F6465 		.ascii	"modem_get_gps_coordinates\000"
 5571      6D5F6765 
 5571      745F6770 
 5571      735F636F 
 5571      6F726469 
 5572              	.LASF37:
 5573 0627 74657374 		.ascii	"test_t\000"
 5573      5F7400
 5574              	.LASF156:
 5575 062e 73797374 		.ascii	"system_info\000"
 5575      656D5F69 
 5575      6E666F00 
 5576              	.LASF43:
 5577 063a 696D6569 		.ascii	"imei\000"
 5577      00
 5578              	.LASF36:
 5579 063f 72656173 		.ascii	"reason\000"
 5579      6F6E00
 5580              	.LASF49:
 5581 0646 72737270 		.ascii	"rsrp\000"
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 124


 5581      00
 5582              	.LASF52:
 5583 064b 6D6F6465 		.ascii	"modem_stats_t\000"
 5583      6D5F7374 
 5583      6174735F 
 5583      7400
 5584              	.LASF86:
 5585 0659 75617274 		.ascii	"uart_string_reset\000"
 5585      5F737472 
 5585      696E675F 
 5585      72657365 
 5585      7400
 5586              	.LASF31:
 5587 066b 746D5F77 		.ascii	"tm_wday\000"
 5587      64617900 
 5588              	.LASF85:
 5589 0673 6D6F6465 		.ascii	"modem_soft_power_cycle\000"
 5589      6D5F736F 
 5589      66745F70 
 5589      6F776572 
 5589      5F637963 
 5590              	.LASF23:
 5591 068a 6C6F6E67 		.ascii	"long double\000"
 5591      20646F75 
 5591      626C6500 
 5592              	.LASF22:
 5593 0696 63686172 		.ascii	"char\000"
 5593      00
 5594              	.LASF104:
 5595 069b 6D6F6465 		.ascii	"modem_process_tasks\000"
 5595      6D5F7072 
 5595      6F636573 
 5595      735F7461 
 5595      736B7300 
 5596              	.LASF11:
 5597 06af 756E7369 		.ascii	"unsigned int\000"
 5597      676E6564 
 5597      20696E74 
 5597      00
 5598              	.LASF125:
 5599 06bc 4346554E 		.ascii	"CFUN\000"
 5599      00
 5600              	.LASF42:
 5601 06c1 6D6F6465 		.ascii	"model_id\000"
 5601      6C5F6964 
 5601      00
 5602              	.LASF155:
 5603 06ca 68747470 		.ascii	"http_route\000"
 5603      5F726F75 
 5603      746500
 5604              	.LASF44:
 5605 06d5 6D6F6465 		.ascii	"modem_info_t\000"
 5605      6D5F696E 
 5605      666F5F74 
 5605      00
 5606              	.LASF58:
 5607 06e2 6770735F 		.ascii	"gps_t\000"
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 125


 5607      7400
 5608              	.LASF164:
 5609 06e8 75617274 		.ascii	"uart_string_index\000"
 5609      5F737472 
 5609      696E675F 
 5609      696E6465 
 5609      7800
 5610              	.LASF61:
 5611 06fa 6D656173 		.ascii	"measure_time\000"
 5611      7572655F 
 5611      74696D65 
 5611      00
 5612              	.LASF109:
 5613 0707 69735F63 		.ascii	"is_connected_to_internet\000"
 5613      6F6E6E65 
 5613      63746564 
 5613      5F746F5F 
 5613      696E7465 
 5614              	.LASF149:
 5615 0720 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 5615      6D5F7374 
 5615      6172745F 
 5615      74696D65 
 5615      5F737461 
 5616              	.LASF139:
 5617 0737 6770735F 		.ascii	"gps_status\000"
 5617      73746174 
 5617      757300
 5618              	.LASF152:
 5619 0742 6770735F 		.ascii	"gps_data\000"
 5619      64617461 
 5619      00
 5620              	.LASF78:
 5621 074b 70696E73 		.ascii	"pins_configure_inactive\000"
 5621      5F636F6E 
 5621      66696775 
 5621      72655F69 
 5621      6E616374 
 5622              	.LASF140:
 5623 0763 6C61745F 		.ascii	"lat_dir\000"
 5623      64697200 
 5624              	.LASF41:
 5625 076b 73696D5F 		.ascii	"sim_id\000"
 5625      696400
 5626              	.LASF28:
 5627 0772 746D5F6D 		.ascii	"tm_mday\000"
 5627      64617900 
 5628              	.LASF57:
 5629 077a 76616C69 		.ascii	"valid\000"
 5629      6400
 5630              	.LASF131:
 5631 0780 6D696E75 		.ascii	"minute\000"
 5631      746500
 5632              	.LASF14:
 5633 0787 75696E74 		.ascii	"uint32_t\000"
 5633      33325F74 
 5633      00
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 126


 5634              	.LASF25:
 5635 0790 746D5F73 		.ascii	"tm_sec\000"
 5635      656300
 5636              	.LASF113:
 5637 0797 6765745F 		.ascii	"get_updated_parameters_from_malcom\000"
 5637      75706461 
 5637      7465645F 
 5637      70617261 
 5637      6D657465 
 5638              	.LASF116:
 5639 07ba 735F7361 		.ascii	"s_sample_freq\000"
 5639      6D706C65 
 5639      5F667265 
 5639      7100
 5640              	.LASF35:
 5641 07c8 73746174 		.ascii	"status\000"
 5641      757300
 5642              	.LASF146:
 5643 07cf 64617461 		.ascii	"dataPointsInStackDesired\000"
 5643      506F696E 
 5643      7473496E 
 5643      53746163 
 5643      6B446573 
 5644              	.LASF76:
 5645 07e8 7379735F 		.ascii	"sys_settings_t\000"
 5645      73657474 
 5645      696E6773 
 5645      5F7400
 5646              	.LASF12:
 5647 07f7 75696E74 		.ascii	"uint8_t\000"
 5647      385F7400 
 5648              	.LASF18:
 5649 07ff 696E7431 		.ascii	"int16\000"
 5649      3600
 5650              	.LASF119:
 5651 0805 735F6770 		.ascii	"s_gps\000"
 5651      7300
 5652              	.LASF82:
 5653 080b 61747465 		.ascii	"attempts\000"
 5653      6D707473 
 5653      00
 5654              	.LASF68:
 5655 0814 636F756E 		.ascii	"countDownType\000"
 5655      74446F77 
 5655      6E547970 
 5655      6500
 5656              	.LASF83:
 5657 0822 626F6F74 		.ascii	"boot_time\000"
 5657      5F74696D 
 5657      6500
 5658              	.LASF88:
 5659 082c 65787065 		.ascii	"expected_response\000"
 5659      63746564 
 5659      5F726573 
 5659      706F6E73 
 5659      6500
 5660              	.LASF138:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\cc2go53T.s 			page 127


 5661 083e 6C6F636B 		.ascii	"lock_time\000"
 5661      5F74696D 
 5661      6500
 5662              	.LASF167:
 5663 0848 443A5C47 		.ascii	"D:\\Github repo\\notoriOS\\notoriOS.cydsn\000"
 5663      69746875 
 5663      62207265 
 5663      706F5C6E 
 5663      6F746F72 
 5664              	.LASF153:
 5665 086f 68747470 		.ascii	"http_request\000"
 5665      5F726571 
 5665      75657374 
 5665      00
 5666              	.LASF80:
 5667 087c 6D6F6465 		.ascii	"modem_power_down\000"
 5667      6D5F706F 
 5667      7765725F 
 5667      646F776E 
 5667      00
 5668              	.LASF39:
 5669 088d 74696D65 		.ascii	"timeStamp\000"
 5669      5374616D 
 5669      7000
 5670              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
