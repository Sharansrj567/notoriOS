ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"modem.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.syntax unified
  20              		.global _printf_float
  21              		.thumb
  22              		.syntax unified
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,16,4
  27              		.comm	updatable_parameters,3,4
  28              		.comm	dataPointsInStack,2,2
  29              		.comm	dataPointsInStackDesired,2,2
  30              		.comm	data,6600,4
  31              		.comm	http_request,10000,4
  32              		.comm	http_body,10000,4
  33              		.comm	http_route,200,4
  34              		.comm	system_info,28,4
  35              		.comm	system_settings,324,4
  36              		.comm	uart_received_string,1024,4
  37              		.global	uart_string_index
  38              		.bss
  39              		.align	1
  40              		.type	uart_string_index, %object
  41              		.size	uart_string_index, 2
  42              	uart_string_index:
  43 0000 0000     		.space	2
  44              		.section	.text.isr_telit_rx,"ax",%progbits
  45              		.align	2
  46              		.global	isr_telit_rx
  47              		.thumb
  48              		.thumb_func
  49              		.type	isr_telit_rx, %function
  50              	isr_telit_rx:
  51              	.LFB64:
  52              		.file 1 "modem.c"
   1:modem.c       **** //Methods for Telit modem 
   2:modem.c       **** #include "modem.h"
   3:modem.c       **** #include "notoriOS.h"
   4:modem.c       **** #include "debug.h"
   5:modem.c       **** #include "data.h"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 2


   6:modem.c       **** #include <math.h>
   7:modem.c       **** #include <stdio.h>
   8:modem.c       **** 
   9:modem.c       **** char uart_received_string[1024];
  10:modem.c       **** int16 uart_string_index=0;
  11:modem.c       **** 
  12:modem.c       **** #define DEFAULT_AT_TIMEOUT 2000u // Send command and wait 2000 ms
  13:modem.c       **** #define NO_AT_TIMEOUT 0u // Send command, no timeout/ don't wait 
  14:modem.c       **** 
  15:modem.c       **** #define TIMEOUT_NETWORK_CONNECT 200 //seconds
  16:modem.c       **** #define TIMEOUT_IP_ACQUIRE 230 //seconds (cummulatinve) add to TIMEOUT_NETWORK_CONNECT
  17:modem.c       **** 
  18:modem.c       **** CY_ISR_PROTO(isr_telit_rx); // Declares a custom ISR function "isr_telit_rx" using the CY_ISR_PROTO
  19:modem.c       **** 
  20:modem.c       **** // Define the custom ISR function "isr_telit_rx" using the CY_ISR macro
  21:modem.c       **** // Get each character from Telit and saves it to uart_received_string
  22:modem.c       **** CY_ISR(isr_telit_rx){      
  53              		.loc 1 22 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 1, uses_anonymous_args = 0
  57 0000 98B5     		push	{r3, r4, r7, lr}
  58              		.cfi_def_cfa_offset 16
  59              		.cfi_offset 3, -16
  60              		.cfi_offset 4, -12
  61              		.cfi_offset 7, -8
  62              		.cfi_offset 14, -4
  63 0002 00AF     		add	r7, sp, #0
  64              		.cfi_def_cfa_register 7
  23:modem.c       ****     // UART_Telit_GetRxBufferSize() returns the number of received bytes available in the RX buffer
  24:modem.c       ****     while(UART_Telit_GetRxBufferSize()==1){
  65              		.loc 1 24 0
  66 0004 12E0     		b	.L2
  67              	.L3:
  25:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  68              		.loc 1 25 0
  69 0006 0D4B     		ldr	r3, .L4
  70 0008 B3F90030 		ldrsh	r3, [r3]
  71 000c 1C46     		mov	r4, r3
  72 000e FFF7FEFF 		bl	UART_Telit_GetChar
  73 0012 0346     		mov	r3, r0
  74 0014 1A46     		mov	r2, r3
  75 0016 0A4B     		ldr	r3, .L4+4
  76 0018 1A55     		strb	r2, [r3, r4]
  26:modem.c       ****         uart_string_index++;
  77              		.loc 1 26 0
  78 001a 084B     		ldr	r3, .L4
  79 001c B3F90030 		ldrsh	r3, [r3]
  80 0020 9BB2     		uxth	r3, r3
  81 0022 0133     		adds	r3, r3, #1
  82 0024 9BB2     		uxth	r3, r3
  83 0026 1AB2     		sxth	r2, r3
  84 0028 044B     		ldr	r3, .L4
  85 002a 1A80     		strh	r2, [r3]	@ movhi
  86              	.L2:
  24:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  87              		.loc 1 24 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 3


  88 002c FFF7FEFF 		bl	UART_Telit_GetRxBufferSize
  89 0030 0346     		mov	r3, r0
  90 0032 012B     		cmp	r3, #1
  91 0034 E7D0     		beq	.L3
  27:modem.c       ****     }
  28:modem.c       **** 
  29:modem.c       **** }
  92              		.loc 1 29 0
  93 0036 00BF     		nop
  94 0038 98BD     		pop	{r3, r4, r7, pc}
  95              	.L5:
  96 003a 00BF     		.align	2
  97              	.L4:
  98 003c 00000000 		.word	uart_string_index
  99 0040 00000000 		.word	uart_received_string
 100              		.cfi_endproc
 101              	.LFE64:
 102              		.size	isr_telit_rx, .-isr_telit_rx
 103              		.section	.text.modem_initialize,"ax",%progbits
 104              		.align	2
 105              		.global	modem_initialize
 106              		.thumb
 107              		.thumb_func
 108              		.type	modem_initialize, %function
 109              	modem_initialize:
 110              	.LFB65:
  30:modem.c       **** 
  31:modem.c       **** // Initialize the modem
  32:modem.c       **** void modem_initialize(){
 111              		.loc 1 32 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 1, uses_anonymous_args = 0
 115 0000 80B5     		push	{r7, lr}
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 7, -8
 118              		.cfi_offset 14, -4
 119 0002 00AF     		add	r7, sp, #0
 120              		.cfi_def_cfa_register 7
  33:modem.c       ****     // Don't do much except make sure that all the modem pins are pulled low
  34:modem.c       ****     // Also make sure that the TX PIN is fully disabled
  35:modem.c       ****     pins_configure_inactive();
 121              		.loc 1 35 0
 122 0004 FFF7FEFF 		bl	pins_configure_inactive
  36:modem.c       ****     modem_state = 0;
 123              		.loc 1 36 0
 124 0008 154B     		ldr	r3, .L7
 125 000a 0022     		movs	r2, #0
 126 000c 1A70     		strb	r2, [r3]
  37:modem.c       ****     //initialize states
  38:modem.c       ****     modem_info.imei[0] = '\0';
 127              		.loc 1 38 0
 128 000e 154B     		ldr	r3, .L7+4
 129 0010 0022     		movs	r2, #0
 130 0012 83F82820 		strb	r2, [r3, #40]
  39:modem.c       ****     modem_info.model_id[0] = '\0';
 131              		.loc 1 39 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 4


 132 0016 134B     		ldr	r3, .L7+4
 133 0018 0022     		movs	r2, #0
 134 001a 1A75     		strb	r2, [r3, #20]
  40:modem.c       ****     modem_info.sim_id[0] = '\0';
 135              		.loc 1 40 0
 136 001c 114B     		ldr	r3, .L7+4
 137 001e 0022     		movs	r2, #0
 138 0020 1A70     		strb	r2, [r3]
  41:modem.c       ****     modem_stats.rssi = 0;
 139              		.loc 1 41 0
 140 0022 114B     		ldr	r3, .L7+8
 141 0024 0022     		movs	r2, #0
 142 0026 1A70     		strb	r2, [r3]
  42:modem.c       ****     modem_stats.ber = 0;
 143              		.loc 1 42 0
 144 0028 0F4B     		ldr	r3, .L7+8
 145 002a 0022     		movs	r2, #0
 146 002c 5A70     		strb	r2, [r3, #1]
  43:modem.c       ****     modem_stats.rscp = 0;
 147              		.loc 1 43 0
 148 002e 0E4B     		ldr	r3, .L7+8
 149 0030 0022     		movs	r2, #0
 150 0032 9A70     		strb	r2, [r3, #2]
  44:modem.c       ****     modem_stats.ecno = 0;
 151              		.loc 1 44 0
 152 0034 0C4B     		ldr	r3, .L7+8
 153 0036 0022     		movs	r2, #0
 154 0038 DA70     		strb	r2, [r3, #3]
  45:modem.c       ****     modem_stats.rsrq = 0;
 155              		.loc 1 45 0
 156 003a 0B4B     		ldr	r3, .L7+8
 157 003c 0022     		movs	r2, #0
 158 003e 1A71     		strb	r2, [r3, #4]
  46:modem.c       ****     modem_stats.rsrp = 0;
 159              		.loc 1 46 0
 160 0040 094B     		ldr	r3, .L7+8
 161 0042 0022     		movs	r2, #0
 162 0044 5A71     		strb	r2, [r3, #5]
  47:modem.c       ****     modem_stats.time_to_acquire_ip = 0;
 163              		.loc 1 47 0
 164 0046 084B     		ldr	r3, .L7+8
 165 0048 0022     		movs	r2, #0
 166 004a DA60     		str	r2, [r3, #12]
  48:modem.c       ****     modem_stats.time_to_network_connect = 0;
 167              		.loc 1 48 0
 168 004c 064B     		ldr	r3, .L7+8
 169 004e 0022     		movs	r2, #0
 170 0050 9A60     		str	r2, [r3, #8]
  49:modem.c       ****     // Disable the RX Pin interrupt, and only enable it during long timeouts
  50:modem.c       ****     // Rx_Telit_SetInterruptMode(): Configures the interrupt mode for each of the Pins component's 
  51:modem.c       ****     // Rx_Telit_0_INTR selects the first pin in the list, and Rx_Telit_INTR_NONE disables the Rx pi
  52:modem.c       ****     Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 171              		.loc 1 52 0
 172 0052 0021     		movs	r1, #0
 173 0054 4020     		movs	r0, #64
 174 0056 FFF7FEFF 		bl	Rx_Telit_SetInterruptMode
  53:modem.c       ****     
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 5


  54:modem.c       **** }
 175              		.loc 1 54 0
 176 005a 00BF     		nop
 177 005c 80BD     		pop	{r7, pc}
 178              	.L8:
 179 005e 00BF     		.align	2
 180              	.L7:
 181 0060 00000000 		.word	modem_state
 182 0064 00000000 		.word	modem_info
 183 0068 00000000 		.word	modem_stats
 184              		.cfi_endproc
 185              	.LFE65:
 186              		.size	modem_initialize, .-modem_initialize
 187              		.section	.text.pins_configure_inactive,"ax",%progbits
 188              		.align	2
 189              		.global	pins_configure_inactive
 190              		.thumb
 191              		.thumb_func
 192              		.type	pins_configure_inactive, %function
 193              	pins_configure_inactive:
 194              	.LFB66:
  55:modem.c       **** 
  56:modem.c       **** 
  57:modem.c       **** // To be used when the modem power is to be "killed" conpletely to conserve power
  58:modem.c       **** void pins_configure_inactive(){
 195              		.loc 1 58 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199 0000 80B5     		push	{r7, lr}
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 7, -8
 202              		.cfi_offset 14, -4
 203 0002 00AF     		add	r7, sp, #0
 204              		.cfi_def_cfa_register 7
  59:modem.c       ****    
  60:modem.c       ****    Telit_ControlReg_Write(0u); // Physically disconect UART pin
 205              		.loc 1 60 0
 206 0004 0020     		movs	r0, #0
 207 0006 FFF7FEFF 		bl	Telit_ControlReg_Write
  61:modem.c       ****    Rx_Telit_SetDriveMode(PIN_DM_STRONG); // Set drive mode
 208              		.loc 1 61 0
 209 000a 0C20     		movs	r0, #12
 210 000c FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  62:modem.c       **** 
  63:modem.c       ****    Pin_Telit_pwr_Write(OFF); // Kill power to modem (pulls pin low).
 211              		.loc 1 63 0
 212 0010 0020     		movs	r0, #0
 213 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  64:modem.c       **** 
  65:modem.c       ****    // Pull down all of these, just in case (turns the off).
  66:modem.c       ****    Rx_Telit_Write(OFF); 
 214              		.loc 1 66 0
 215 0016 0020     		movs	r0, #0
 216 0018 FFF7FEFF 		bl	Rx_Telit_Write
  67:modem.c       ****    Tx_Telit_Write(OFF);
 217              		.loc 1 67 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 6


 218 001c 0020     		movs	r0, #0
 219 001e FFF7FEFF 		bl	Tx_Telit_Write
  68:modem.c       ****    Pin_Telit_ONOFF_Write(OFF);
 220              		.loc 1 68 0
 221 0022 0020     		movs	r0, #0
 222 0024 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
  69:modem.c       ****    Pin_Telit_SWRDY_Write(OFF);
 223              		.loc 1 69 0
 224 0028 0020     		movs	r0, #0
 225 002a FFF7FEFF 		bl	Pin_Telit_SWRDY_Write
  70:modem.c       ****     
  71:modem.c       **** }
 226              		.loc 1 71 0
 227 002e 00BF     		nop
 228 0030 80BD     		pop	{r7, pc}
 229              		.cfi_endproc
 230              	.LFE66:
 231              		.size	pins_configure_inactive, .-pins_configure_inactive
 232 0032 00BF     		.section	.text.pins_configure_active,"ax",%progbits
 233              		.align	2
 234              		.global	pins_configure_active
 235              		.thumb
 236              		.thumb_func
 237              		.type	pins_configure_active, %function
 238              	pins_configure_active:
 239              	.LFB67:
  72:modem.c       **** 
  73:modem.c       **** // Turns on power and configures all UART pin modes
  74:modem.c       **** void pins_configure_active(){
 240              		.loc 1 74 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 1, uses_anonymous_args = 0
 244 0000 80B5     		push	{r7, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 00AF     		add	r7, sp, #0
 249              		.cfi_def_cfa_register 7
  75:modem.c       ****     
  76:modem.c       ****     Rx_Telit_SetDriveMode(PIN_DM_DIG_HIZ); // Power up. Set RX pin to High Impedance Digital mode.
 250              		.loc 1 76 0
 251 0004 0220     		movs	r0, #2
 252 0006 FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  77:modem.c       ****     Telit_ControlReg_Write(1u); // Pull Telit_ControlReg pin high (turns it on).
 253              		.loc 1 77 0
 254 000a 0120     		movs	r0, #1
 255 000c FFF7FEFF 		bl	Telit_ControlReg_Write
  78:modem.c       ****     Pin_Telit_pwr_Write(ON); // Pulls Telit_pwr pin high (turns it on).
 256              		.loc 1 78 0
 257 0010 0120     		movs	r0, #1
 258 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  79:modem.c       ****     CyDelay(100u); // Give the MOSFET a few ms to stalbilise power 
 259              		.loc 1 79 0
 260 0016 6420     		movs	r0, #100
 261 0018 FFF7FEFF 		bl	CyDelay
  80:modem.c       **** }
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 7


 262              		.loc 1 80 0
 263 001c 00BF     		nop
 264 001e 80BD     		pop	{r7, pc}
 265              		.cfi_endproc
 266              	.LFE67:
 267              		.size	pins_configure_active, .-pins_configure_active
 268              		.section	.rodata
 269              		.align	2
 270              	.LC0:
 271 0000 4F4B00   		.ascii	"OK\000"
 272 0003 00       		.align	2
 273              	.LC1:
 274 0004 41542353 		.ascii	"AT#SHDN\015\000"
 274      48444E0D 
 274      00
 275              		.section	.text.modem_power_down,"ax",%progbits
 276              		.align	2
 277              		.global	modem_power_down
 278              		.thumb
 279              		.thumb_func
 280              		.type	modem_power_down, %function
 281              	modem_power_down:
 282              	.LFB68:
  81:modem.c       **** 
  82:modem.c       **** // Power down the modem -- completely "kill" modem to conserve power.
  83:modem.c       **** void modem_power_down(){
 283              		.loc 1 83 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287 0000 80B5     		push	{r7, lr}
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 7, -8
 290              		.cfi_offset 14, -4
 291 0002 00AF     		add	r7, sp, #0
 292              		.cfi_def_cfa_register 7
  84:modem.c       ****     // AT Command to modem for Software Shut Down - #SHDN
  85:modem.c       ****     // \r is carriage return, it is necessary for the modem to know it got a command
  86:modem.c       ****     at_write_command("AT#SHDN\r","OK",5000u); 
 293              		.loc 1 86 0
 294 0004 41F28832 		movw	r2, #5000
 295 0008 0A49     		ldr	r1, .L12
 296 000a 0B48     		ldr	r0, .L12+4
 297 000c FFF7FEFF 		bl	at_write_command
  87:modem.c       ****    
  88:modem.c       ****     // Soft power cycle makes sure that the modem is all the way on (like holding on button on for 
  89:modem.c       ****     modem_soft_power_cycle();
 298              		.loc 1 89 0
 299 0010 FFF7FEFF 		bl	modem_soft_power_cycle
  90:modem.c       ****     CyDelay(1000u);
 300              		.loc 1 90 0
 301 0014 4FF47A70 		mov	r0, #1000
 302 0018 FFF7FEFF 		bl	CyDelay
  91:modem.c       ****     
  92:modem.c       ****     UART_Telit_Stop(); // Disables the UART operation.
 303              		.loc 1 92 0
 304 001c FFF7FEFF 		bl	UART_Telit_Stop
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 8


  93:modem.c       ****     isr_telit_rx_Stop(); // Disables and removes the interrupt.
 305              		.loc 1 93 0
 306 0020 FFF7FEFF 		bl	isr_telit_rx_Stop
  94:modem.c       ****     pins_configure_inactive(); // We want the modem power to be "killed" completely to conserve pow
 307              		.loc 1 94 0
 308 0024 FFF7FEFF 		bl	pins_configure_inactive
  95:modem.c       ****     modem_state = MODEM_STATE_OFF;
 309              		.loc 1 95 0
 310 0028 044B     		ldr	r3, .L12+8
 311 002a 0022     		movs	r2, #0
 312 002c 1A70     		strb	r2, [r3]
  96:modem.c       ****     
  97:modem.c       **** }
 313              		.loc 1 97 0
 314 002e 00BF     		nop
 315 0030 80BD     		pop	{r7, pc}
 316              	.L13:
 317 0032 00BF     		.align	2
 318              	.L12:
 319 0034 00000000 		.word	.LC0
 320 0038 04000000 		.word	.LC1
 321 003c 00000000 		.word	modem_state
 322              		.cfi_endproc
 323              	.LFE68:
 324              		.size	modem_power_down, .-modem_power_down
 325              		.section	.rodata
 326 000d 000000   		.align	2
 327              	.LC2:
 328 0010 41544530 		.ascii	"ATE0\015\000"
 328      0D00
 329 0016 0000     		.align	2
 330              	.LC3:
 331 0018 4D6F6465 		.ascii	"Modem boot time: %d\000"
 331      6D20626F 
 331      6F742074 
 331      696D653A 
 331      20256400 
 332              		.align	2
 333              	.LC4:
 334 002c 4D6F6465 		.ascii	"Modem ready for AT commands after %d attempt(s).\000"
 334      6D207265 
 334      61647920 
 334      666F7220 
 334      41542063 
 335 005d 000000   		.align	2
 336              	.LC5:
 337 0060 4E6F2072 		.ascii	"No response from modem.\000"
 337      6573706F 
 337      6E736520 
 337      66726F6D 
 337      206D6F64 
 338              		.section	.text.modem_power_up,"ax",%progbits
 339              		.align	2
 340              		.global	modem_power_up
 341              		.thumb
 342              		.thumb_func
 343              		.type	modem_power_up, %function
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 9


 344              	modem_power_up:
 345              	.LFB69:
  98:modem.c       **** 
  99:modem.c       **** // This puts all the modem pints into a state that won't leak power
 100:modem.c       **** // Please call restore_pins() to bring them abck to function when they are needed for UART
 101:modem.c       **** uint8 modem_power_up(){
 346              		.loc 1 101 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 8
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
 353              		.cfi_offset 14, -4
 354 0002 82B0     		sub	sp, sp, #8
 355              		.cfi_def_cfa_offset 16
 356 0004 00AF     		add	r7, sp, #0
 357              		.cfi_def_cfa_register 7
 102:modem.c       **** 
 103:modem.c       ****     pins_configure_active(); // Turns on power and configures all UART pin modes
 358              		.loc 1 103 0
 359 0006 FFF7FEFF 		bl	pins_configure_active
 104:modem.c       ****     UART_Telit_Start(); // Sets the initVar variable, calls the UART_Telit_Init() function, and the
 360              		.loc 1 104 0
 361 000a FFF7FEFF 		bl	UART_Telit_Start
 105:modem.c       ****     isr_telit_rx_StartEx(isr_telit_rx); // Sets up the interrupt and enables it. 
 362              		.loc 1 105 0
 363 000e 2C48     		ldr	r0, .L27
 364 0010 FFF7FEFF 		bl	isr_telit_rx_StartEx
 106:modem.c       **** 
 107:modem.c       ****     modem_soft_power_cycle(); // Soft power cycle makes sure that the modem is all the way on (like
 365              		.loc 1 107 0
 366 0014 FFF7FEFF 		bl	modem_soft_power_cycle
 108:modem.c       ****     
 109:modem.c       ****     // Turn off ECHO command (doesn't repeat your command back to you).
 110:modem.c       ****     uint8 at_ready = 0;
 367              		.loc 1 110 0
 368 0018 0023     		movs	r3, #0
 369 001a FB71     		strb	r3, [r7, #7]
 111:modem.c       ****     uint8 attempts = 0;
 370              		.loc 1 111 0
 371 001c 0023     		movs	r3, #0
 372 001e 3B71     		strb	r3, [r7, #4]
 112:modem.c       ****     // Create variable boot_time of the current time stamp.
 113:modem.c       ****     long boot_time = getTimeStamp();
 373              		.loc 1 113 0
 374 0020 FFF7FEFF 		bl	getTimeStamp
 375 0024 3860     		str	r0, [r7]
 376              	.LBB2:
 114:modem.c       ****     
 115:modem.c       ****     //it takes the 4G modem 10+secs (max 20) to boot up, so keep hitting it with AT commands until 
 116:modem.c       ****     for(uint8 attempts = 0; attempts<3; attempts++){
 377              		.loc 1 116 0
 378 0026 0023     		movs	r3, #0
 379 0028 BB71     		strb	r3, [r7, #6]
 380 002a 1CE0     		b	.L15
 381              	.L22:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 10


 382              	.LBB3:
 117:modem.c       ****         
 118:modem.c       ****         for(uint8 pwr_check = 0; pwr_check<20; pwr_check++){
 383              		.loc 1 118 0
 384 002c 0023     		movs	r3, #0
 385 002e 7B71     		strb	r3, [r7, #5]
 386 0030 0EE0     		b	.L16
 387              	.L19:
 119:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 120:modem.c       ****             if(at_write_command("ATE0\r","OK",1000u)){
 388              		.loc 1 120 0
 389 0032 4FF47A72 		mov	r2, #1000
 390 0036 2349     		ldr	r1, .L27+4
 391 0038 2348     		ldr	r0, .L27+8
 392 003a FFF7FEFF 		bl	at_write_command
 393 003e 0346     		mov	r3, r0
 394 0040 002B     		cmp	r3, #0
 395 0042 02D0     		beq	.L17
 121:modem.c       ****                 at_ready = 1;
 396              		.loc 1 121 0
 397 0044 0123     		movs	r3, #1
 398 0046 FB71     		strb	r3, [r7, #7]
 122:modem.c       ****                 break;
 399              		.loc 1 122 0
 400 0048 05E0     		b	.L18
 401              	.L17:
 118:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 402              		.loc 1 118 0 discriminator 2
 403 004a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 404 004c 0133     		adds	r3, r3, #1
 405 004e 7B71     		strb	r3, [r7, #5]
 406              	.L16:
 118:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 407              		.loc 1 118 0 is_stmt 0 discriminator 1
 408 0050 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 409 0052 132B     		cmp	r3, #19
 410 0054 EDD9     		bls	.L19
 411              	.L18:
 412              	.LBE3:
 123:modem.c       ****             }
 124:modem.c       ****         }
 125:modem.c       ****             
 126:modem.c       ****         if(at_ready == 1){
 413              		.loc 1 126 0 is_stmt 1
 414 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 415 0058 012B     		cmp	r3, #1
 416 005a 08D0     		beq	.L26
 127:modem.c       ****             break;
 128:modem.c       ****         }else{
 129:modem.c       ****             // Soft power cycle makes sure that the modem is all the way on (like holding on button
 130:modem.c       ****             modem_soft_power_cycle();
 417              		.loc 1 130 0 discriminator 2
 418 005c FFF7FEFF 		bl	modem_soft_power_cycle
 116:modem.c       ****         
 419              		.loc 1 116 0 discriminator 2
 420 0060 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 421 0062 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 11


 422 0064 BB71     		strb	r3, [r7, #6]
 423              	.L15:
 116:modem.c       ****         
 424              		.loc 1 116 0 is_stmt 0 discriminator 1
 425 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 426 0068 022B     		cmp	r3, #2
 427 006a DFD9     		bls	.L22
 428 006c 00E0     		b	.L21
 429              	.L26:
 127:modem.c       ****             break;
 430              		.loc 1 127 0 is_stmt 1
 431 006e 00BF     		nop
 432              	.L21:
 433              	.LBE2:
 131:modem.c       ****         }
 132:modem.c       ****     }
 133:modem.c       ****     // Calculate boot up time and save to variable boot_time.
 134:modem.c       ****     boot_time = getTimeStamp() - boot_time;
 434              		.loc 1 134 0
 435 0070 FFF7FEFF 		bl	getTimeStamp
 436 0074 0246     		mov	r2, r0
 437 0076 3B68     		ldr	r3, [r7]
 438 0078 D31A     		subs	r3, r2, r3
 439 007a 3B60     		str	r3, [r7]
 135:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Modem boot time: %d",boot_time);
 440              		.loc 1 135 0
 441 007c 3A68     		ldr	r2, [r7]
 442 007e 1349     		ldr	r1, .L27+12
 443 0080 0020     		movs	r0, #0
 444 0082 FFF7FEFF 		bl	printNotif
 136:modem.c       ****    
 137:modem.c       ****     if(at_ready == 1){
 445              		.loc 1 137 0
 446 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 447 0088 012B     		cmp	r3, #1
 448 008a 0AD1     		bne	.L23
 138:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Modem ready for AT commands after %d attempt(s).",attempts);
 449              		.loc 1 138 0
 450 008c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 451 008e 1A46     		mov	r2, r3
 452 0090 0F49     		ldr	r1, .L27+16
 453 0092 0020     		movs	r0, #0
 454 0094 FFF7FEFF 		bl	printNotif
 139:modem.c       ****         modem_state = MODEM_STATE_STARTUP;
 455              		.loc 1 139 0
 456 0098 0E4B     		ldr	r3, .L27+20
 457 009a 0122     		movs	r2, #1
 458 009c 1A70     		strb	r2, [r3]
 140:modem.c       ****     }else{
 141:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"No response from modem.");
 142:modem.c       ****         modem_state = MODEM_STATE_OFF;
 143:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 144:modem.c       ****         modem_power_down();
 145:modem.c       ****         return 0u;
 146:modem.c       ****     }
 147:modem.c       ****     return 1u;
 459              		.loc 1 147 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 12


 460 009e 0123     		movs	r3, #1
 461 00a0 09E0     		b	.L25
 462              	.L23:
 141:modem.c       ****         modem_state = MODEM_STATE_OFF;
 463              		.loc 1 141 0
 464 00a2 0D49     		ldr	r1, .L27+24
 465 00a4 0220     		movs	r0, #2
 466 00a6 FFF7FEFF 		bl	printNotif
 142:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 467              		.loc 1 142 0
 468 00aa 0A4B     		ldr	r3, .L27+20
 469 00ac 0022     		movs	r2, #0
 470 00ae 1A70     		strb	r2, [r3]
 144:modem.c       ****         return 0u;
 471              		.loc 1 144 0
 472 00b0 FFF7FEFF 		bl	modem_power_down
 145:modem.c       ****     }
 473              		.loc 1 145 0
 474 00b4 0023     		movs	r3, #0
 475              	.L25:
 148:modem.c       **** }
 476              		.loc 1 148 0
 477 00b6 1846     		mov	r0, r3
 478 00b8 0837     		adds	r7, r7, #8
 479              		.cfi_def_cfa_offset 8
 480 00ba BD46     		mov	sp, r7
 481              		.cfi_def_cfa_register 13
 482              		@ sp needed
 483 00bc 80BD     		pop	{r7, pc}
 484              	.L28:
 485 00be 00BF     		.align	2
 486              	.L27:
 487 00c0 00000000 		.word	isr_telit_rx
 488 00c4 00000000 		.word	.LC0
 489 00c8 10000000 		.word	.LC2
 490 00cc 18000000 		.word	.LC3
 491 00d0 2C000000 		.word	.LC4
 492 00d4 00000000 		.word	modem_state
 493 00d8 60000000 		.word	.LC5
 494              		.cfi_endproc
 495              	.LFE69:
 496              		.size	modem_power_up, .-modem_power_up
 497              		.section	.text.modem_soft_power_cycle,"ax",%progbits
 498              		.align	2
 499              		.global	modem_soft_power_cycle
 500              		.thumb
 501              		.thumb_func
 502              		.type	modem_soft_power_cycle, %function
 503              	modem_soft_power_cycle:
 504              	.LFB70:
 149:modem.c       **** 
 150:modem.c       **** // Puts modem in soft power cycle -- modem has power but isn't all the way on, so soft power cycle 
 151:modem.c       **** void modem_soft_power_cycle(){
 505              		.loc 1 151 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 13


 509 0000 80B5     		push	{r7, lr}
 510              		.cfi_def_cfa_offset 8
 511              		.cfi_offset 7, -8
 512              		.cfi_offset 14, -4
 513 0002 00AF     		add	r7, sp, #0
 514              		.cfi_def_cfa_register 7
 152:modem.c       ****     Pin_Telit_ONOFF_Write(1u); // Pulls Telit_ONOFF pin high
 515              		.loc 1 152 0
 516 0004 0120     		movs	r0, #1
 517 0006 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 153:modem.c       ****     CyDelay(2000u); // Give modem a sec to boot
 518              		.loc 1 153 0
 519 000a 4FF4FA60 		mov	r0, #2000
 520 000e FFF7FEFF 		bl	CyDelay
 154:modem.c       ****     Pin_Telit_ONOFF_Write(0u); // Pulls Telit_ONOFF pin low
 521              		.loc 1 154 0
 522 0012 0020     		movs	r0, #0
 523 0014 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 155:modem.c       ****     
 156:modem.c       **** }
 524              		.loc 1 156 0
 525 0018 00BF     		nop
 526 001a 80BD     		pop	{r7, pc}
 527              		.cfi_endproc
 528              	.LFE70:
 529              		.size	modem_soft_power_cycle, .-modem_soft_power_cycle
 530              		.section	.text.uart_string_reset,"ax",%progbits
 531              		.align	2
 532              		.global	uart_string_reset
 533              		.thumb
 534              		.thumb_func
 535              		.type	uart_string_reset, %function
 536              	uart_string_reset:
 537              	.LFB71:
 157:modem.c       **** 
 158:modem.c       **** // Clear and reset the uart_received_string variable and uart_string_index for the next transmissio
 159:modem.c       **** void uart_string_reset(){
 538              		.loc 1 159 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 1, uses_anonymous_args = 0
 542 0000 80B5     		push	{r7, lr}
 543              		.cfi_def_cfa_offset 8
 544              		.cfi_offset 7, -8
 545              		.cfi_offset 14, -4
 546 0002 00AF     		add	r7, sp, #0
 547              		.cfi_def_cfa_register 7
 160:modem.c       ****     uart_string_index=0;
 548              		.loc 1 160 0
 549 0004 064B     		ldr	r3, .L31
 550 0006 0022     		movs	r2, #0
 551 0008 1A80     		strh	r2, [r3]	@ movhi
 161:modem.c       ****     // memset(void *str, int c, size_t n) copies the character c (an unsigned char) to the first n 
 162:modem.c       ****     memset(uart_received_string,'\0',sizeof(uart_received_string));
 552              		.loc 1 162 0
 553 000a 4FF48062 		mov	r2, #1024
 554 000e 0021     		movs	r1, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 14


 555 0010 0448     		ldr	r0, .L31+4
 556 0012 FFF7FEFF 		bl	memset
 163:modem.c       ****     // Clears the receiver memory buffer and hardware RX FIFO of all received data.
 164:modem.c       ****     UART_Telit_ClearRxBuffer();
 557              		.loc 1 164 0
 558 0016 FFF7FEFF 		bl	UART_Telit_ClearRxBuffer
 165:modem.c       **** }
 559              		.loc 1 165 0
 560 001a 00BF     		nop
 561 001c 80BD     		pop	{r7, pc}
 562              	.L32:
 563 001e 00BF     		.align	2
 564              	.L31:
 565 0020 00000000 		.word	uart_string_index
 566 0024 00000000 		.word	uart_received_string
 567              		.cfi_endproc
 568              	.LFE71:
 569              		.size	uart_string_reset, .-uart_string_reset
 570              		.section	.rodata
 571              		.align	2
 572              	.LC6:
 573 0078 4D6F6465 		.ascii	"Modem sent AT command without timeout: %s\015\012\000"
 573      6D207365 
 573      6E742041 
 573      5420636F 
 573      6D6D616E 
 574              		.align	2
 575              	.LC7:
 576 00a4 4D6F6465 		.ascii	"Modem Received expected AT Response on first Try:\012"
 576      6D205265 
 576      63656976 
 576      65642065 
 576      78706563 
 577 00d6 436F6D6D 		.ascii	"Command: %s\012Received: %s\015\012\000"
 577      616E643A 
 577      2025730A 
 577      52656365 
 577      69766564 
 578 00f1 000000   		.align	2
 579              	.LC8:
 580 00f4 4D6F6465 		.ascii	"Modem required %d tries to receive AT Response: %s\015"
 580      6D207265 
 580      71756972 
 580      65642025 
 580      64207472 
 581 0127 0A00     		.ascii	"\012\000"
 582 0129 000000   		.align	2
 583              	.LC9:
 584 012c 436F756C 		.ascii	"Could not write AT command: %s\012 Received: %s\012"
 584      64206E6F 
 584      74207772 
 584      69746520 
 584      41542063 
 585 0159 00       		.ascii	"\000"
 586              		.section	.text.at_write_command,"ax",%progbits
 587              		.align	2
 588              		.global	at_write_command
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 15


 589              		.thumb
 590              		.thumb_func
 591              		.type	at_write_command, %function
 592              	at_write_command:
 593              	.LFB72:
 166:modem.c       **** 
 167:modem.c       **** // Modem controlled  via  the  serial  interface  using  the  standard  AT commands.
 168:modem.c       **** // AT is an ATTENTION command and is used as a prefix to other parameters in a string. 
 169:modem.c       **** // Sends commands to the modem
 170:modem.c       **** uint8_t at_write_command(char* commands, char* expected_response,uint32_t timeout){
 594              		.loc 1 170 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 40
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598 0000 80B5     		push	{r7, lr}
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 7, -8
 601              		.cfi_offset 14, -4
 602 0002 8AB0     		sub	sp, sp, #40
 603              		.cfi_def_cfa_offset 48
 604 0004 00AF     		add	r7, sp, #0
 605              		.cfi_def_cfa_register 7
 606 0006 F860     		str	r0, [r7, #12]
 607 0008 B960     		str	r1, [r7, #8]
 608 000a 7A60     		str	r2, [r7, #4]
 171:modem.c       **** 
 172:modem.c       ****     uint32 at_attempt = 0;
 609              		.loc 1 172 0
 610 000c 0023     		movs	r3, #0
 611 000e 7B62     		str	r3, [r7, #36]
 173:modem.c       ****     
 174:modem.c       ****     for(at_attempt = 0; at_attempt < 3; at_attempt++) {
 612              		.loc 1 174 0
 613 0010 0023     		movs	r3, #0
 614 0012 7B62     		str	r3, [r7, #36]
 615 0014 46E0     		b	.L34
 616              	.L42:
 617              	.LBB4:
 175:modem.c       ****         
 176:modem.c       ****         char* compare_location;
 177:modem.c       ****         uint32_t delay=10;
 618              		.loc 1 177 0
 619 0016 0A23     		movs	r3, #10
 620 0018 FB61     		str	r3, [r7, #28]
 178:modem.c       ****         uint32_t i, interval=timeout/delay;        
 621              		.loc 1 178 0
 622 001a 7A68     		ldr	r2, [r7, #4]
 623 001c FB69     		ldr	r3, [r7, #28]
 624 001e B2FBF3F3 		udiv	r3, r2, r3
 625 0022 BB61     		str	r3, [r7, #24]
 179:modem.c       ****         
 180:modem.c       ****         // Clear and reset the uart_received_string variable and uart_string_index for the next tra
 181:modem.c       ****         uart_string_reset();
 626              		.loc 1 181 0
 627 0024 FFF7FEFF 		bl	uart_string_reset
 182:modem.c       ****         
 183:modem.c       ****         // Sends a NULL terminated string to the TX buffer for transmission.
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 16


 184:modem.c       ****         UART_Telit_PutString(commands);
 628              		.loc 1 184 0
 629 0028 F868     		ldr	r0, [r7, #12]
 630 002a FFF7FEFF 		bl	UART_Telit_PutString
 185:modem.c       ****         
 186:modem.c       ****         
 187:modem.c       ****         // If no timeout, no need to wait for response
 188:modem.c       ****         if(timeout == NO_AT_TIMEOUT){
 631              		.loc 1 188 0
 632 002e 7B68     		ldr	r3, [r7, #4]
 633 0030 002B     		cmp	r3, #0
 634 0032 06D1     		bne	.L35
 189:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem sent AT command without timeout: %s\r\n", commands);
 635              		.loc 1 189 0
 636 0034 FA68     		ldr	r2, [r7, #12]
 637 0036 1F49     		ldr	r1, .L43
 638 0038 0020     		movs	r0, #0
 639 003a FFF7FEFF 		bl	printNotif
 190:modem.c       ****             return 1u;
 640              		.loc 1 190 0
 641 003e 0123     		movs	r3, #1
 642 0040 34E0     		b	.L36
 643              	.L35:
 191:modem.c       ****         }
 192:modem.c       ****       
 193:modem.c       ****      
 194:modem.c       ****         for(i=0;i<interval;i++){ 
 644              		.loc 1 194 0
 645 0042 0023     		movs	r3, #0
 646 0044 3B62     		str	r3, [r7, #32]
 647 0046 20E0     		b	.L37
 648              	.L41:
 195:modem.c       ****             CyDelay((uint32) delay);
 649              		.loc 1 195 0
 650 0048 F869     		ldr	r0, [r7, #28]
 651 004a FFF7FEFF 		bl	CyDelay
 196:modem.c       ****             // strstr(const char *haystack, const char *needle) function finds the first occurrence
 197:modem.c       ****             // Returns a pointer to the first occurrence in haystack of any of the entire sequence 
 198:modem.c       ****             compare_location=strstr(uart_received_string,expected_response);        
 652              		.loc 1 198 0
 653 004e B968     		ldr	r1, [r7, #8]
 654 0050 1948     		ldr	r0, .L43+4
 655 0052 FFF7FEFF 		bl	strstr
 656 0056 7861     		str	r0, [r7, #20]
 199:modem.c       ****             if(compare_location!=NULL) {
 657              		.loc 1 199 0
 658 0058 7B69     		ldr	r3, [r7, #20]
 659 005a 002B     		cmp	r3, #0
 660 005c 12D0     		beq	.L38
 200:modem.c       ****                 if (at_attempt == 0){
 661              		.loc 1 200 0
 662 005e 7B6A     		ldr	r3, [r7, #36]
 663 0060 002B     		cmp	r3, #0
 664 0062 06D1     		bne	.L39
 201:modem.c       ****                     // we add \n for new line to make it easier to decipher
 202:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT,"Modem Received expected AT Response on first Try:\
 665              		.loc 1 202 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 17


 666 0064 144B     		ldr	r3, .L43+4
 667 0066 FA68     		ldr	r2, [r7, #12]
 668 0068 1449     		ldr	r1, .L43+8
 669 006a 0020     		movs	r0, #0
 670 006c FFF7FEFF 		bl	printNotif
 671 0070 06E0     		b	.L40
 672              	.L39:
 203:modem.c       ****                 }else{
 204:modem.c       ****                     printNotif(NOTIF_TYPE_WARNING,"Modem required %d tries to receive AT Response: 
 673              		.loc 1 204 0
 674 0072 7B6A     		ldr	r3, [r7, #36]
 675 0074 5A1C     		adds	r2, r3, #1
 676 0076 104B     		ldr	r3, .L43+4
 677 0078 1149     		ldr	r1, .L43+12
 678 007a 0120     		movs	r0, #1
 679 007c FFF7FEFF 		bl	printNotif
 680              	.L40:
 205:modem.c       ****                  
 206:modem.c       ****                 }
 207:modem.c       ****                 return(1);
 681              		.loc 1 207 0
 682 0080 0123     		movs	r3, #1
 683 0082 13E0     		b	.L36
 684              	.L38:
 194:modem.c       ****             CyDelay((uint32) delay);
 685              		.loc 1 194 0 discriminator 2
 686 0084 3B6A     		ldr	r3, [r7, #32]
 687 0086 0133     		adds	r3, r3, #1
 688 0088 3B62     		str	r3, [r7, #32]
 689              	.L37:
 194:modem.c       ****             CyDelay((uint32) delay);
 690              		.loc 1 194 0 is_stmt 0 discriminator 1
 691 008a 3A6A     		ldr	r2, [r7, #32]
 692 008c BB69     		ldr	r3, [r7, #24]
 693 008e 9A42     		cmp	r2, r3
 694 0090 DAD3     		bcc	.L41
 208:modem.c       ****             }
 209:modem.c       ****             
 210:modem.c       ****         }  
 211:modem.c       ****         
 212:modem.c       ****         // Something went wrong, restart UART
 213:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not write AT command: %s\n Received: %s\n", commands,uar
 695              		.loc 1 213 0 is_stmt 1 discriminator 2
 696 0092 094B     		ldr	r3, .L43+4
 697 0094 FA68     		ldr	r2, [r7, #12]
 698 0096 0B49     		ldr	r1, .L43+16
 699 0098 0220     		movs	r0, #2
 700 009a FFF7FEFF 		bl	printNotif
 701              	.LBE4:
 174:modem.c       ****         
 702              		.loc 1 174 0 discriminator 2
 703 009e 7B6A     		ldr	r3, [r7, #36]
 704 00a0 0133     		adds	r3, r3, #1
 705 00a2 7B62     		str	r3, [r7, #36]
 706              	.L34:
 174:modem.c       ****         
 707              		.loc 1 174 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 18


 708 00a4 7B6A     		ldr	r3, [r7, #36]
 709 00a6 022B     		cmp	r3, #2
 710 00a8 B5D9     		bls	.L42
 214:modem.c       ****       
 215:modem.c       ****     }
 216:modem.c       ****    // printNotif(NOTIF_TYPE_ERROR,"Modem AT response timeout: %s\r\n", commands);
 217:modem.c       ****           
 218:modem.c       ****     return(0);    
 711              		.loc 1 218 0 is_stmt 1
 712 00aa 0023     		movs	r3, #0
 713              	.L36:
 219:modem.c       **** }
 714              		.loc 1 219 0
 715 00ac 1846     		mov	r0, r3
 716 00ae 2837     		adds	r7, r7, #40
 717              		.cfi_def_cfa_offset 8
 718 00b0 BD46     		mov	sp, r7
 719              		.cfi_def_cfa_register 13
 720              		@ sp needed
 721 00b2 80BD     		pop	{r7, pc}
 722              	.L44:
 723              		.align	2
 724              	.L43:
 725 00b4 78000000 		.word	.LC6
 726 00b8 00000000 		.word	uart_received_string
 727 00bc A4000000 		.word	.LC7
 728 00c0 F4000000 		.word	.LC8
 729 00c4 2C010000 		.word	.LC9
 730              		.cfi_endproc
 731              	.LFE72:
 732              		.size	at_write_command, .-at_write_command
 733              		.section	.rodata
 734 015a 0000     		.align	2
 735              	.LC10:
 736 015c 54455354 		.ascii	"TEST_MODEM\000"
 736      5F4D4F44 
 736      454D00
 737 0167 00       		.align	2
 738              	.LC11:
 739 0168 4E6F2072 		.ascii	"No reponse from modem.\000"
 739      65706F6E 
 739      73652066 
 739      726F6D20 
 739      6D6F6465 
 740 017f 00       		.align	2
 741              	.LC12:
 742 0180 4D6F6465 		.ascii	"Modem connected to network.\000"
 742      6D20636F 
 742      6E6E6563 
 742      74656420 
 742      746F206E 
 743              		.section	.text.modem_test,"ax",%progbits
 744              		.align	2
 745              		.global	modem_test
 746              		.thumb
 747              		.thumb_func
 748              		.type	modem_test, %function
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 19


 749              	modem_test:
 750              	.LFB73:
 220:modem.c       **** 
 221:modem.c       **** // Test modem -- needs fleshed out
 222:modem.c       **** test_t modem_test(){
 751              		.loc 1 222 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 408
 754              		@ frame_needed = 1, uses_anonymous_args = 0
 755 0000 B0B5     		push	{r4, r5, r7, lr}
 756              		.cfi_def_cfa_offset 16
 757              		.cfi_offset 4, -16
 758              		.cfi_offset 5, -12
 759              		.cfi_offset 7, -8
 760              		.cfi_offset 14, -4
 761 0002 E6B0     		sub	sp, sp, #408
 762              		.cfi_def_cfa_offset 424
 763 0004 00AF     		add	r7, sp, #0
 764              		.cfi_def_cfa_register 7
 765 0006 3B1D     		adds	r3, r7, #4
 766 0008 1860     		str	r0, [r3]
 223:modem.c       ****     
 224:modem.c       ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
 225:modem.c       ****     test.status = 0;
 767              		.loc 1 225 0
 768 000a 07F10C03 		add	r3, r7, #12
 769 000e 0022     		movs	r2, #0
 770 0010 83F88020 		strb	r2, [r3, #128]
 226:modem.c       ****     // Print test name and test reason
 227:modem.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_MODEM");
 771              		.loc 1 227 0
 772 0014 07F10C03 		add	r3, r7, #12
 773 0018 354A     		ldr	r2, .L53
 774 001a 07CA     		ldmia	r2, {r0, r1, r2}
 775 001c 03C3     		stmia	r3!, {r0, r1}
 776 001e 1A80     		strh	r2, [r3]	@ movhi
 777 0020 0233     		adds	r3, r3, #2
 778 0022 120C     		lsrs	r2, r2, #16
 779 0024 1A70     		strb	r2, [r3]
 228:modem.c       ****     snprintf(test.reason,sizeof(test.reason),"No reponse from modem.");
 780              		.loc 1 228 0
 781 0026 07F10C03 		add	r3, r7, #12
 782 002a 8133     		adds	r3, r3, #129
 783 002c 314A     		ldr	r2, .L53+4
 784 002e 1C46     		mov	r4, r3
 785 0030 1546     		mov	r5, r2
 786 0032 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 787 0034 2060     		str	r0, [r4]	@ unaligned
 788 0036 6160     		str	r1, [r4, #4]	@ unaligned
 789 0038 A260     		str	r2, [r4, #8]	@ unaligned
 790 003a E360     		str	r3, [r4, #12]	@ unaligned
 791 003c 2868     		ldr	r0, [r5]	@ unaligned
 792 003e 2061     		str	r0, [r4, #16]	@ unaligned
 793 0040 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 794 0042 AA79     		ldrb	r2, [r5, #6]
 795 0044 A382     		strh	r3, [r4, #20]	@ unaligned
 796 0046 1346     		mov	r3, r2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 20


 797 0048 A375     		strb	r3, [r4, #22]
 798              	.LBB5:
 229:modem.c       ****    
 230:modem.c       ****     //try the modem 60*100 (60 secs)
 231:modem.c       ****     for(int i = 0; i< 60; i++){
 799              		.loc 1 231 0
 800 004a 0023     		movs	r3, #0
 801 004c C7F89431 		str	r3, [r7, #404]
 802 0050 39E0     		b	.L46
 803              	.L51:
 232:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 233:modem.c       ****         modem_process_tasks();
 804              		.loc 1 233 0
 805 0052 FFF7FEFF 		bl	modem_process_tasks
 234:modem.c       ****          
 235:modem.c       ****         if(modem_get_state() == MODEM_STATE_OFF){
 806              		.loc 1 235 0
 807 0056 FFF7FEFF 		bl	modem_get_state
 808 005a 0346     		mov	r3, r0
 809 005c 002B     		cmp	r3, #0
 810 005e 02D1     		bne	.L47
 236:modem.c       ****             // This puts all the modem points into a state that won't leak power
 237:modem.c       ****             modem_power_up();
 811              		.loc 1 237 0
 812 0060 FFF7FEFF 		bl	modem_power_up
 813 0064 27E0     		b	.L48
 814              	.L47:
 238:modem.c       ****             // Should put this on a max_try counter, so we don't just keep trying to connect over a
 239:modem.c       ****             
 240:modem.c       ****         }else if(modem_get_state() == MODEM_STATE_READY){
 815              		.loc 1 240 0
 816 0066 FFF7FEFF 		bl	modem_get_state
 817 006a 0346     		mov	r3, r0
 818 006c 042B     		cmp	r3, #4
 819 006e 22D1     		bne	.L48
 820              	.LBB6:
 241:modem.c       ****         
 242:modem.c       ****         
 243:modem.c       ****         // Get time, and if it looks good, set the RTC with it
 244:modem.c       ****         long network_time = modem_get_network_time();
 821              		.loc 1 244 0
 822 0070 FFF7FEFF 		bl	modem_get_network_time
 823 0074 C7F89001 		str	r0, [r7, #400]
 245:modem.c       ****         if(network_time != 0){
 824              		.loc 1 245 0
 825 0078 D7F89031 		ldr	r3, [r7, #400]
 826 007c 002B     		cmp	r3, #0
 827 007e 03D0     		beq	.L49
 246:modem.c       ****             setTime(network_time); // Set the system time 
 828              		.loc 1 246 0
 829 0080 D7F89001 		ldr	r0, [r7, #400]
 830 0084 FFF7FEFF 		bl	setTime
 831              	.L49:
 247:modem.c       ****         }
 248:modem.c       ****             
 249:modem.c       ****         snprintf(test.reason,sizeof(test.reason),"Modem connected to network.");
 832              		.loc 1 249 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 21


 833 0088 07F10C03 		add	r3, r7, #12
 834 008c 8133     		adds	r3, r3, #129
 835 008e 1A4A     		ldr	r2, .L53+8
 836 0090 1D46     		mov	r5, r3
 837 0092 1446     		mov	r4, r2
 838 0094 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 839 0096 2860     		str	r0, [r5]	@ unaligned
 840 0098 6960     		str	r1, [r5, #4]	@ unaligned
 841 009a AA60     		str	r2, [r5, #8]	@ unaligned
 842 009c EB60     		str	r3, [r5, #12]	@ unaligned
 843 009e 07CC     		ldmia	r4!, {r0, r1, r2}
 844 00a0 2861     		str	r0, [r5, #16]	@ unaligned
 845 00a2 6961     		str	r1, [r5, #20]	@ unaligned
 846 00a4 AA61     		str	r2, [r5, #24]	@ unaligned
 250:modem.c       ****         test.status = 1;
 847              		.loc 1 250 0
 848 00a6 07F10C03 		add	r3, r7, #12
 849 00aa 0122     		movs	r2, #1
 850 00ac 83F88020 		strb	r2, [r3, #128]
 251:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 252:modem.c       ****         modem_power_down();
 851              		.loc 1 252 0
 852 00b0 FFF7FEFF 		bl	modem_power_down
 253:modem.c       ****         break;
 853              		.loc 1 253 0
 854 00b4 0BE0     		b	.L50
 855              	.L48:
 856              	.LBE6:
 254:modem.c       ****         
 255:modem.c       ****       }
 256:modem.c       ****         CyDelay(100u);
 857              		.loc 1 256 0 discriminator 2
 858 00b6 6420     		movs	r0, #100
 859 00b8 FFF7FEFF 		bl	CyDelay
 231:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 860              		.loc 1 231 0 discriminator 2
 861 00bc D7F89431 		ldr	r3, [r7, #404]
 862 00c0 0133     		adds	r3, r3, #1
 863 00c2 C7F89431 		str	r3, [r7, #404]
 864              	.L46:
 231:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 865              		.loc 1 231 0 is_stmt 0 discriminator 1
 866 00c6 D7F89431 		ldr	r3, [r7, #404]
 867 00ca 3B2B     		cmp	r3, #59
 868 00cc C1DD     		ble	.L51
 869              	.L50:
 870              	.LBE5:
 257:modem.c       ****         
 258:modem.c       ****     }
 259:modem.c       ****     
 260:modem.c       ****     return test;
 871              		.loc 1 260 0 is_stmt 1
 872 00ce 3B1D     		adds	r3, r7, #4
 873 00d0 1A68     		ldr	r2, [r3]
 874 00d2 07F10C03 		add	r3, r7, #12
 875 00d6 1046     		mov	r0, r2
 876 00d8 1946     		mov	r1, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 22


 877 00da 40F28113 		movw	r3, #385
 878 00de 1A46     		mov	r2, r3
 879 00e0 FFF7FEFF 		bl	memcpy
 261:modem.c       **** }
 880              		.loc 1 261 0
 881 00e4 3B1D     		adds	r3, r7, #4
 882 00e6 1868     		ldr	r0, [r3]
 883 00e8 07F5CC77 		add	r7, r7, #408
 884              		.cfi_def_cfa_offset 16
 885 00ec BD46     		mov	sp, r7
 886              		.cfi_def_cfa_register 13
 887              		@ sp needed
 888 00ee B0BD     		pop	{r4, r5, r7, pc}
 889              	.L54:
 890              		.align	2
 891              	.L53:
 892 00f0 5C010000 		.word	.LC10
 893 00f4 68010000 		.word	.LC11
 894 00f8 80010000 		.word	.LC12
 895              		.cfi_endproc
 896              	.LFE73:
 897              		.size	modem_test, .-modem_test
 898              		.section	.text.extract_string,"ax",%progbits
 899              		.align	2
 900              		.global	extract_string
 901              		.thumb
 902              		.thumb_func
 903              		.type	extract_string, %function
 904              	extract_string:
 905              	.LFB74:
 262:modem.c       **** 
 263:modem.c       **** // Extract string from the UART
 264:modem.c       **** uint8 extract_string(char* from, const char* beginMarker, const char* endMarker,  char* target){
 906              		.loc 1 264 0
 907              		.cfi_startproc
 908              		@ args = 0, pretend = 0, frame = 24
 909              		@ frame_needed = 1, uses_anonymous_args = 0
 910 0000 80B5     		push	{r7, lr}
 911              		.cfi_def_cfa_offset 8
 912              		.cfi_offset 7, -8
 913              		.cfi_offset 14, -4
 914 0002 86B0     		sub	sp, sp, #24
 915              		.cfi_def_cfa_offset 32
 916 0004 00AF     		add	r7, sp, #0
 917              		.cfi_def_cfa_register 7
 918 0006 F860     		str	r0, [r7, #12]
 919 0008 B960     		str	r1, [r7, #8]
 920 000a 7A60     		str	r2, [r7, #4]
 921 000c 3B60     		str	r3, [r7]
 265:modem.c       ****     
 266:modem.c       ****         char *a, *b;
 267:modem.c       ****   
 268:modem.c       ****         // Expect the UART to contain something like "+CESQ: ##,##,##,##,##,##\r\n\r\nOK"
 269:modem.c       ****         // - Search for "+CESQ: ".  Place the starting pointer, a, at the resulting index
 270:modem.c       ****         a = strstr(from,beginMarker);
 922              		.loc 1 270 0
 923 000e B968     		ldr	r1, [r7, #8]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 23


 924 0010 F868     		ldr	r0, [r7, #12]
 925 0012 FFF7FEFF 		bl	strstr
 926 0016 7861     		str	r0, [r7, #20]
 271:modem.c       ****         if (a == NULL) {
 927              		.loc 1 271 0
 928 0018 7B69     		ldr	r3, [r7, #20]
 929 001a 002B     		cmp	r3, #0
 930 001c 01D1     		bne	.L56
 272:modem.c       ****             //puts("+CESQ: not found in uart_received_string");
 273:modem.c       ****             a = from;
 931              		.loc 1 273 0
 932 001e FB68     		ldr	r3, [r7, #12]
 933 0020 7B61     		str	r3, [r7, #20]
 934              	.L56:
 274:modem.c       ****         }
 275:modem.c       ****         // The strlen() function calculates the length of a given string.
 276:modem.c       ****         a += strlen(beginMarker);
 935              		.loc 1 276 0
 936 0022 B868     		ldr	r0, [r7, #8]
 937 0024 FFF7FEFF 		bl	strlen
 938 0028 0246     		mov	r2, r0
 939 002a 7B69     		ldr	r3, [r7, #20]
 940 002c 1344     		add	r3, r3, r2
 941 002e 7B61     		str	r3, [r7, #20]
 277:modem.c       ****         
 278:modem.c       ****         // - Find the end marking and offset by 1
 279:modem.c       ****         // strstr(const char *haystack, const char *needle) function finds the first occurrence of 
 280:modem.c       ****         // Returns a pointer to the first occurrence in haystack of any of the entire sequence of c
 281:modem.c       ****         b = strstr(a,endMarker);
 942              		.loc 1 281 0
 943 0030 7968     		ldr	r1, [r7, #4]
 944 0032 7869     		ldr	r0, [r7, #20]
 945 0034 FFF7FEFF 		bl	strstr
 946 0038 3861     		str	r0, [r7, #16]
 282:modem.c       ****         if (b == NULL) {
 947              		.loc 1 282 0
 948 003a 3B69     		ldr	r3, [r7, #16]
 949 003c 002B     		cmp	r3, #0
 950 003e 06D1     		bne	.L57
 283:modem.c       ****             // Puts("Comma not found in uart_received_string");
 284:modem.c       ****             b=from+strlen(from);
 951              		.loc 1 284 0
 952 0040 F868     		ldr	r0, [r7, #12]
 953 0042 FFF7FEFF 		bl	strlen
 954 0046 0246     		mov	r2, r0
 955 0048 FB68     		ldr	r3, [r7, #12]
 956 004a 1344     		add	r3, r3, r2
 957 004c 3B61     		str	r3, [r7, #16]
 958              	.L57:
 285:modem.c       ****         }        
 286:modem.c       ****         
 287:modem.c       ****         // Parse the strings and store the respective rssi and fer values
 288:modem.c       ****         strncpy(target,a,b-a);
 959              		.loc 1 288 0
 960 004e 3A69     		ldr	r2, [r7, #16]
 961 0050 7B69     		ldr	r3, [r7, #20]
 962 0052 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 24


 963 0054 1A46     		mov	r2, r3
 964 0056 7969     		ldr	r1, [r7, #20]
 965 0058 3868     		ldr	r0, [r7]
 966 005a FFF7FEFF 		bl	strncpy
 289:modem.c       ****         target[b-a] = '\0';
 967              		.loc 1 289 0
 968 005e 3A69     		ldr	r2, [r7, #16]
 969 0060 7B69     		ldr	r3, [r7, #20]
 970 0062 D31A     		subs	r3, r2, r3
 971 0064 1A46     		mov	r2, r3
 972 0066 3B68     		ldr	r3, [r7]
 973 0068 1344     		add	r3, r3, r2
 974 006a 0022     		movs	r2, #0
 975 006c 1A70     		strb	r2, [r3]
 290:modem.c       ****         return 1u;
 976              		.loc 1 290 0
 977 006e 0123     		movs	r3, #1
 291:modem.c       ****         
 292:modem.c       **** }
 978              		.loc 1 292 0
 979 0070 1846     		mov	r0, r3
 980 0072 1837     		adds	r7, r7, #24
 981              		.cfi_def_cfa_offset 8
 982 0074 BD46     		mov	sp, r7
 983              		.cfi_def_cfa_register 13
 984              		@ sp needed
 985 0076 80BD     		pop	{r7, pc}
 986              		.cfi_endproc
 987              	.LFE74:
 988              		.size	extract_string, .-extract_string
 989              		.section	.rodata
 990              		.align	2
 991              	.LC13:
 992 019c 54696D65 		.ascii	"Time to connect to network: %d seconds\000"
 992      20746F20 
 992      636F6E6E 
 992      65637420 
 992      746F206E 
 993 01c3 00       		.align	2
 994              	.LC14:
 995 01c4 4D6F6465 		.ascii	"Modem timed out on network connect\000"
 995      6D207469 
 995      6D656420 
 995      6F757420 
 995      6F6E206E 
 996 01e7 00       		.align	2
 997              	.LC15:
 998 01e8 41637175 		.ascii	"Acquired IP address: %d seconds\000"
 998      69726564 
 998      20495020 
 998      61646472 
 998      6573733A 
 999              		.align	2
 1000              	.LC16:
 1001 0208 4D6F6465 		.ascii	"Modem timed out on IP address acquire.\000"
 1001      6D207469 
 1001      6D656420 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 25


 1001      6F757420 
 1001      6F6E2049 
 1002              		.section	.text.modem_process_tasks,"ax",%progbits
 1003              		.align	2
 1004              		.global	modem_process_tasks
 1005              		.thumb
 1006              		.thumb_func
 1007              		.type	modem_process_tasks, %function
 1008              	modem_process_tasks:
 1009              	.LFB75:
 293:modem.c       **** 
 294:modem.c       **** // Function to startup the modem, connect to the network, and then hand it off to sleep
 295:modem.c       **** uint8 modem_process_tasks(){
 1010              		.loc 1 295 0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 8
 1013              		@ frame_needed = 1, uses_anonymous_args = 0
 1014 0000 80B5     		push	{r7, lr}
 1015              		.cfi_def_cfa_offset 8
 1016              		.cfi_offset 7, -8
 1017              		.cfi_offset 14, -4
 1018 0002 82B0     		sub	sp, sp, #8
 1019              		.cfi_def_cfa_offset 16
 1020 0004 00AF     		add	r7, sp, #0
 1021              		.cfi_def_cfa_register 7
 296:modem.c       ****     // If modem state is "startup" then get the modem start time, configure modem settings, and cha
 297:modem.c       ****     if(modem_state == MODEM_STATE_STARTUP){
 1022              		.loc 1 297 0
 1023 0006 474B     		ldr	r3, .L73
 1024 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1025 000a 012B     		cmp	r3, #1
 1026 000c 0BD1     		bne	.L60
 298:modem.c       ****         
 299:modem.c       ****         modem_start_time_stamp = getTimeStamp(); // Get timestamp for modem start time
 1027              		.loc 1 299 0
 1028 000e FFF7FEFF 		bl	getTimeStamp
 1029 0012 0246     		mov	r2, r0
 1030 0014 444B     		ldr	r3, .L73+4
 1031 0016 1A60     		str	r2, [r3]
 300:modem.c       ****         modem_configure_settings(); // Configure modem settings
 1032              		.loc 1 300 0
 1033 0018 FFF7FEFF 		bl	modem_configure_settings
 301:modem.c       ****         modem_state = MODEM_STATE_WAITING_FOR_NETWORK; // Change modem state 
 1034              		.loc 1 301 0
 1035 001c 414B     		ldr	r3, .L73
 1036 001e 0222     		movs	r2, #2
 1037 0020 1A70     		strb	r2, [r3]
 302:modem.c       ****         return 1u; // Keep going, don't hand off to sleep yet
 1038              		.loc 1 302 0
 1039 0022 0123     		movs	r3, #1
 1040 0024 79E0     		b	.L61
 1041              	.L60:
 303:modem.c       ****         
 304:modem.c       ****     }
 305:modem.c       ****     // Else if modem state is "waiting for network" 
 306:modem.c       ****     else if(modem_state == MODEM_STATE_WAITING_FOR_NETWORK){
 1042              		.loc 1 306 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 26


 1043 0026 3F4B     		ldr	r3, .L73
 1044 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1045 002a 022B     		cmp	r3, #2
 1046 002c 46D1     		bne	.L62
 1047              	.LBB7:
 307:modem.c       ****         // Check if modem has a good cell signal each second for up to a minute
 308:modem.c       ****        for(uint8 i=0;i<60;i++){
 1048              		.loc 1 308 0
 1049 002e 0023     		movs	r3, #0
 1050 0030 FB71     		strb	r3, [r7, #7]
 1051 0032 10E0     		b	.L63
 1052              	.L66:
 309:modem.c       ****             // Get cell network stats
 310:modem.c       ****             get_cell_network_stats();
 1053              		.loc 1 310 0
 1054 0034 FFF7FEFF 		bl	get_cell_network_stats
 311:modem.c       ****             // If cell signal (rsrp) is strong enough, break and connect to the network
 312:modem.c       ****             // Otherwise, keep checking rsrp
 313:modem.c       ****             if(modem_stats.rsrp > 26 && modem_stats.rsrp != 255){
 1055              		.loc 1 313 0
 1056 0038 3C4B     		ldr	r3, .L73+8
 1057 003a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1058 003c 1A2B     		cmp	r3, #26
 1059 003e 03D9     		bls	.L64
 1060              		.loc 1 313 0 is_stmt 0 discriminator 1
 1061 0040 3A4B     		ldr	r3, .L73+8
 1062 0042 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1063 0044 FF2B     		cmp	r3, #255
 1064 0046 0AD1     		bne	.L72
 1065              	.L64:
 314:modem.c       ****                 break;
 315:modem.c       ****             }
 316:modem.c       ****             // Delay for 1 second
 317:modem.c       ****             CyDelay(1000u);
 1066              		.loc 1 317 0 is_stmt 1 discriminator 2
 1067 0048 4FF47A70 		mov	r0, #1000
 1068 004c FFF7FEFF 		bl	CyDelay
 308:modem.c       ****             // Get cell network stats
 1069              		.loc 1 308 0 discriminator 2
 1070 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1071 0052 0133     		adds	r3, r3, #1
 1072 0054 FB71     		strb	r3, [r7, #7]
 1073              	.L63:
 308:modem.c       ****             // Get cell network stats
 1074              		.loc 1 308 0 is_stmt 0 discriminator 1
 1075 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1076 0058 3B2B     		cmp	r3, #59
 1077 005a EBD9     		bls	.L66
 1078 005c 00E0     		b	.L65
 1079              	.L72:
 314:modem.c       ****                 break;
 1080              		.loc 1 314 0 is_stmt 1
 1081 005e 00BF     		nop
 1082              	.L65:
 1083              	.LBE7:
 318:modem.c       ****         }
 319:modem.c       ****         
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 27


 320:modem.c       ****         // If modem connected to the cell network, save/print the time to connect to the network
 321:modem.c       ****         if(is_connected_to_cell_network()){
 1084              		.loc 1 321 0
 1085 0060 FFF7FEFF 		bl	is_connected_to_cell_network
 1086 0064 0346     		mov	r3, r0
 1087 0066 002B     		cmp	r3, #0
 1088 0068 15D0     		beq	.L67
 322:modem.c       ****       
 323:modem.c       ****              modem_stats.time_to_network_connect = (int)(getTimeStamp() - (int32)modem_start_time_s
 1089              		.loc 1 323 0
 1090 006a FFF7FEFF 		bl	getTimeStamp
 1091 006e 0246     		mov	r2, r0
 1092 0070 2D4B     		ldr	r3, .L73+4
 1093 0072 1B68     		ldr	r3, [r3]
 1094 0074 D31A     		subs	r3, r2, r3
 1095 0076 2D4A     		ldr	r2, .L73+8
 1096 0078 9360     		str	r3, [r2, #8]
 324:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Time to connect to network: %d seconds",
 1097              		.loc 1 324 0
 1098 007a 2C4B     		ldr	r3, .L73+8
 1099 007c 9B68     		ldr	r3, [r3, #8]
 1100 007e 1A46     		mov	r2, r3
 1101 0080 2B49     		ldr	r1, .L73+12
 1102 0082 0020     		movs	r0, #0
 1103 0084 FFF7FEFF 		bl	printNotif
 325:modem.c       ****                                             modem_stats.time_to_network_connect);
 326:modem.c       ****             get_cell_network_stats(); // Get cell network stats
 1104              		.loc 1 326 0
 1105 0088 FFF7FEFF 		bl	get_cell_network_stats
 327:modem.c       ****             set_up_internet_connection(); // Setup the internet connection
 1106              		.loc 1 327 0
 1107 008c FFF7FEFF 		bl	set_up_internet_connection
 328:modem.c       ****             modem_state = MODEM_STATE_WAITING_FOR_IP; // Change modem state 
 1108              		.loc 1 328 0
 1109 0090 244B     		ldr	r3, .L73
 1110 0092 0322     		movs	r2, #3
 1111 0094 1A70     		strb	r2, [r3]
 1112              	.L67:
 329:modem.c       ****         }
 330:modem.c       **** 
 331:modem.c       ****         //power off if we times out shold only take ~30 secs to connect to network
 332:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_NETWORK_CONNECT){
 1113              		.loc 1 332 0
 1114 0096 FFF7FEFF 		bl	getTimeStamp
 1115 009a 0246     		mov	r2, r0
 1116 009c 224B     		ldr	r3, .L73+4
 1117 009e 1B68     		ldr	r3, [r3]
 1118 00a0 D31A     		subs	r3, r2, r3
 1119 00a2 C82B     		cmp	r3, #200
 1120 00a4 08DD     		ble	.L68
 333:modem.c       ****             modem_state = MODEM_STATE_OFF; // Change modem state
 1121              		.loc 1 333 0
 1122 00a6 1F4B     		ldr	r3, .L73
 1123 00a8 0022     		movs	r2, #0
 1124 00aa 1A70     		strb	r2, [r3]
 334:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1125              		.loc 1 334 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 28


 1126 00ac FFF7FEFF 		bl	modem_power_down
 335:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on network connect");
 1127              		.loc 1 335 0
 1128 00b0 2049     		ldr	r1, .L73+16
 1129 00b2 0220     		movs	r0, #2
 1130 00b4 FFF7FEFF 		bl	printNotif
 1131              	.L68:
 336:modem.c       ****             
 337:modem.c       ****         }
 338:modem.c       ****         
 339:modem.c       ****         return 0u;//ok to hand off to sleep
 1132              		.loc 1 339 0
 1133 00b8 0023     		movs	r3, #0
 1134 00ba 2EE0     		b	.L61
 1135              	.L62:
 340:modem.c       ****         
 341:modem.c       ****     // Else if modem state is "waiting for IP"
 342:modem.c       ****     }else if(modem_state == MODEM_STATE_WAITING_FOR_IP){
 1136              		.loc 1 342 0
 1137 00bc 194B     		ldr	r3, .L73
 1138 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1139 00c0 032B     		cmp	r3, #3
 1140 00c2 29D1     		bne	.L69
 343:modem.c       ****         // If the modem is connected to the internet, change modem state to "ready", save/print tim
 344:modem.c       ****         if(is_connected_to_internet()){
 1141              		.loc 1 344 0
 1142 00c4 FFF7FEFF 		bl	is_connected_to_internet
 1143 00c8 0346     		mov	r3, r0
 1144 00ca 002B     		cmp	r3, #0
 1145 00cc 11D0     		beq	.L70
 345:modem.c       ****             modem_state = MODEM_STATE_READY; // Change modem state
 1146              		.loc 1 345 0
 1147 00ce 154B     		ldr	r3, .L73
 1148 00d0 0422     		movs	r2, #4
 1149 00d2 1A70     		strb	r2, [r3]
 346:modem.c       ****             // Save/print time to acquire IP address
 347:modem.c       ****             modem_stats.time_to_acquire_ip = (int)(getTimeStamp() - (int32)modem_start_time_stamp);
 1150              		.loc 1 347 0
 1151 00d4 FFF7FEFF 		bl	getTimeStamp
 1152 00d8 0246     		mov	r2, r0
 1153 00da 134B     		ldr	r3, .L73+4
 1154 00dc 1B68     		ldr	r3, [r3]
 1155 00de D31A     		subs	r3, r2, r3
 1156 00e0 124A     		ldr	r2, .L73+8
 1157 00e2 D360     		str	r3, [r2, #12]
 348:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Acquired IP address: %d seconds",
 1158              		.loc 1 348 0
 1159 00e4 114B     		ldr	r3, .L73+8
 1160 00e6 DB68     		ldr	r3, [r3, #12]
 1161 00e8 1A46     		mov	r2, r3
 1162 00ea 1349     		ldr	r1, .L73+20
 1163 00ec 0020     		movs	r0, #0
 1164 00ee FFF7FEFF 		bl	printNotif
 1165              	.L70:
 349:modem.c       ****                                             modem_stats.time_to_acquire_ip);
 350:modem.c       ****         }
 351:modem.c       ****         
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 29


 352:modem.c       ****         // Power off if we times out shold only take ~30 secs to connect to network
 353:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_IP_ACQUIRE){
 1166              		.loc 1 353 0
 1167 00f2 FFF7FEFF 		bl	getTimeStamp
 1168 00f6 0246     		mov	r2, r0
 1169 00f8 0B4B     		ldr	r3, .L73+4
 1170 00fa 1B68     		ldr	r3, [r3]
 1171 00fc D31A     		subs	r3, r2, r3
 1172 00fe E62B     		cmp	r3, #230
 1173 0100 08DD     		ble	.L71
 354:modem.c       ****             modem_state = MODEM_STATE_OFF;
 1174              		.loc 1 354 0
 1175 0102 084B     		ldr	r3, .L73
 1176 0104 0022     		movs	r2, #0
 1177 0106 1A70     		strb	r2, [r3]
 355:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1178              		.loc 1 355 0
 1179 0108 FFF7FEFF 		bl	modem_power_down
 356:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on IP address acquire.");
 1180              		.loc 1 356 0
 1181 010c 0B49     		ldr	r1, .L73+24
 1182 010e 0220     		movs	r0, #2
 1183 0110 FFF7FEFF 		bl	printNotif
 1184              	.L71:
 357:modem.c       ****       
 358:modem.c       ****         }
 359:modem.c       ****         return 0u;//ok to hand off to sleep
 1185              		.loc 1 359 0
 1186 0114 0023     		movs	r3, #0
 1187 0116 00E0     		b	.L61
 1188              	.L69:
 360:modem.c       ****     }
 361:modem.c       ****     
 362:modem.c       ****     return 0u;
 1189              		.loc 1 362 0
 1190 0118 0023     		movs	r3, #0
 1191              	.L61:
 363:modem.c       ****     
 364:modem.c       **** }
 1192              		.loc 1 364 0
 1193 011a 1846     		mov	r0, r3
 1194 011c 0837     		adds	r7, r7, #8
 1195              		.cfi_def_cfa_offset 8
 1196 011e BD46     		mov	sp, r7
 1197              		.cfi_def_cfa_register 13
 1198              		@ sp needed
 1199 0120 80BD     		pop	{r7, pc}
 1200              	.L74:
 1201 0122 00BF     		.align	2
 1202              	.L73:
 1203 0124 00000000 		.word	modem_state
 1204 0128 00000000 		.word	modem_start_time_stamp
 1205 012c 00000000 		.word	modem_stats
 1206 0130 9C010000 		.word	.LC13
 1207 0134 C4010000 		.word	.LC14
 1208 0138 E8010000 		.word	.LC15
 1209 013c 08020000 		.word	.LC16
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 30


 1210              		.cfi_endproc
 1211              	.LFE75:
 1212              		.size	modem_process_tasks, .-modem_process_tasks
 1213              		.section	.rodata
 1214 022f 00       		.align	2
 1215              	.LC17:
 1216 0230 43686563 		.ascii	"Checking AT+CREG?\000"
 1216      6B696E67 
 1216      2041542B 
 1216      43524547 
 1216      3F00
 1217 0242 0000     		.align	2
 1218              	.LC18:
 1219 0244 41542B43 		.ascii	"AT+CREG?\015\000"
 1219      5245473F 
 1219      0D00
 1220 024e 0000     		.align	2
 1221              	.LC19:
 1222 0250 45787472 		.ascii	"Extracting string AT+CREG?\000"
 1222      61637469 
 1222      6E672073 
 1222      7472696E 
 1222      67204154 
 1223 026b 00       		.align	2
 1224              	.LC20:
 1225 026c 75617274 		.ascii	"uart_received_string: %s\000"
 1225      5F726563 
 1225      65697665 
 1225      645F7374 
 1225      72696E67 
 1226 0285 000000   		.align	2
 1227              	.LC21:
 1228 0288 0D00     		.ascii	"\015\000"
 1229 028a 0000     		.align	2
 1230              	.LC22:
 1231 028c 3A2000   		.ascii	": \000"
 1232 028f 00       		.align	2
 1233              	.LC23:
 1234 0290 52656769 		.ascii	"Registered to network, CREG: %s\000"
 1234      73746572 
 1234      65642074 
 1234      6F206E65 
 1234      74776F72 
 1235              		.align	2
 1236              	.LC24:
 1237 02b0 446F6E65 		.ascii	"Done extracing string AT+CREG?\000"
 1237      20657874 
 1237      72616369 
 1237      6E672073 
 1237      7472696E 
 1238 02cf 00       		.align	2
 1239              	.LC25:
 1240 02d0 302C3100 		.ascii	"0,1\000"
 1241              		.align	2
 1242              	.LC26:
 1243 02d4 302C3500 		.ascii	"0,5\000"
 1244              		.section	.text.is_connected_to_cell_network,"ax",%progbits
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 31


 1245              		.align	2
 1246              		.global	is_connected_to_cell_network
 1247              		.thumb
 1248              		.thumb_func
 1249              		.type	is_connected_to_cell_network, %function
 1250              	is_connected_to_cell_network:
 1251              	.LFB76:
 365:modem.c       **** 
 366:modem.c       **** // Checks network status, writes commands to the modem, then extracts string from UART
 367:modem.c       **** uint8 is_connected_to_cell_network(){
 1252              		.loc 1 367 0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 16
 1255              		@ frame_needed = 1, uses_anonymous_args = 0
 1256 0000 80B5     		push	{r7, lr}
 1257              		.cfi_def_cfa_offset 8
 1258              		.cfi_offset 7, -8
 1259              		.cfi_offset 14, -4
 1260 0002 84B0     		sub	sp, sp, #16
 1261              		.cfi_def_cfa_offset 24
 1262 0004 00AF     		add	r7, sp, #0
 1263              		.cfi_def_cfa_register 7
 368:modem.c       ****     // AT command AT+CREG? is the Network Registration Report to check network status -- need '0,0'
 369:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Checking AT+CREG?");
 1264              		.loc 1 369 0
 1265 0006 1F49     		ldr	r1, .L80
 1266 0008 0020     		movs	r0, #0
 1267 000a FFF7FEFF 		bl	printNotif
 370:modem.c       ****     // create new uint8 variable stust and set to equal the output of the function at_write_command
 371:modem.c       ****     uint8 status = at_write_command("AT+CREG?\r", "OK",DEFAULT_AT_TIMEOUT);
 1268              		.loc 1 371 0
 1269 000e 4FF4FA62 		mov	r2, #2000
 1270 0012 1D49     		ldr	r1, .L80+4
 1271 0014 1D48     		ldr	r0, .L80+8
 1272 0016 FFF7FEFF 		bl	at_write_command
 1273 001a 0346     		mov	r3, r0
 1274 001c FB73     		strb	r3, [r7, #15]
 372:modem.c       ****     
 373:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Extracting string AT+CREG?");
 1275              		.loc 1 373 0
 1276 001e 1C49     		ldr	r1, .L80+12
 1277 0020 0020     		movs	r0, #0
 1278 0022 FFF7FEFF 		bl	printNotif
 374:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"uart_received_string: %s",uart_received_string);
 1279              		.loc 1 374 0
 1280 0026 1B4A     		ldr	r2, .L80+16
 1281 0028 1B49     		ldr	r1, .L80+20
 1282 002a 0020     		movs	r0, #0
 1283 002c FFF7FEFF 		bl	printNotif
 375:modem.c       ****     
 376:modem.c       ****     // If the modem has a status
 377:modem.c       ****     if(status){
 1284              		.loc 1 377 0
 1285 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1286 0032 002B     		cmp	r3, #0
 1287 0034 21D0     		beq	.L76
 1288              	.LBB8:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 32


 378:modem.c       ****         // Create a character array of length 10 called creg
 379:modem.c       ****         char creg[10];
 380:modem.c       ****         // Extract string from the UART
 381:modem.c       ****         extract_string(uart_received_string,": ","\r",creg);
 1289              		.loc 1 381 0
 1290 0036 3B1D     		adds	r3, r7, #4
 1291 0038 184A     		ldr	r2, .L80+24
 1292 003a 1949     		ldr	r1, .L80+28
 1293 003c 1548     		ldr	r0, .L80+16
 1294 003e FFF7FEFF 		bl	extract_string
 382:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Registered to network, CREG: %s",creg);
 1295              		.loc 1 382 0
 1296 0042 3B1D     		adds	r3, r7, #4
 1297 0044 1A46     		mov	r2, r3
 1298 0046 1749     		ldr	r1, .L80+32
 1299 0048 0020     		movs	r0, #0
 1300 004a FFF7FEFF 		bl	printNotif
 383:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Done extracing string AT+CREG?");
 1301              		.loc 1 383 0
 1302 004e 1649     		ldr	r1, .L80+36
 1303 0050 0020     		movs	r0, #0
 1304 0052 FFF7FEFF 		bl	printNotif
 384:modem.c       ****     
 385:modem.c       ****         // Search creg for "0,1" or "0,5", if either exists and either is not equal to NULL, return
 386:modem.c       ****         if((strstr(creg,"0,1")!=NULL)||(strstr(creg,"0,5")!=NULL)){
 1305              		.loc 1 386 0
 1306 0056 3B1D     		adds	r3, r7, #4
 1307 0058 1449     		ldr	r1, .L80+40
 1308 005a 1846     		mov	r0, r3
 1309 005c FFF7FEFF 		bl	strstr
 1310 0060 0346     		mov	r3, r0
 1311 0062 002B     		cmp	r3, #0
 1312 0064 07D1     		bne	.L77
 1313              		.loc 1 386 0 is_stmt 0 discriminator 1
 1314 0066 3B1D     		adds	r3, r7, #4
 1315 0068 1149     		ldr	r1, .L80+44
 1316 006a 1846     		mov	r0, r3
 1317 006c FFF7FEFF 		bl	strstr
 1318 0070 0346     		mov	r3, r0
 1319 0072 002B     		cmp	r3, #0
 1320 0074 01D0     		beq	.L76
 1321              	.L77:
 387:modem.c       ****             //time_network_connect = getTimeStamp();
 388:modem.c       ****             return 1u;
 1322              		.loc 1 388 0 is_stmt 1
 1323 0076 0123     		movs	r3, #1
 1324 0078 00E0     		b	.L79
 1325              	.L76:
 1326              	.LBE8:
 389:modem.c       ****         }
 390:modem.c       ****     }
 391:modem.c       ****     // If the modem doesn't have a status, return 0u
 392:modem.c       ****     return 0u;
 1327              		.loc 1 392 0
 1328 007a 0023     		movs	r3, #0
 1329              	.L79:
 393:modem.c       ****         
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 33


 394:modem.c       **** }
 1330              		.loc 1 394 0
 1331 007c 1846     		mov	r0, r3
 1332 007e 1037     		adds	r7, r7, #16
 1333              		.cfi_def_cfa_offset 8
 1334 0080 BD46     		mov	sp, r7
 1335              		.cfi_def_cfa_register 13
 1336              		@ sp needed
 1337 0082 80BD     		pop	{r7, pc}
 1338              	.L81:
 1339              		.align	2
 1340              	.L80:
 1341 0084 30020000 		.word	.LC17
 1342 0088 00000000 		.word	.LC0
 1343 008c 44020000 		.word	.LC18
 1344 0090 50020000 		.word	.LC19
 1345 0094 00000000 		.word	uart_received_string
 1346 0098 6C020000 		.word	.LC20
 1347 009c 88020000 		.word	.LC21
 1348 00a0 8C020000 		.word	.LC22
 1349 00a4 90020000 		.word	.LC23
 1350 00a8 B0020000 		.word	.LC24
 1351 00ac D0020000 		.word	.LC25
 1352 00b0 D4020000 		.word	.LC26
 1353              		.cfi_endproc
 1354              	.LFE76:
 1355              		.size	is_connected_to_cell_network, .-is_connected_to_cell_network
 1356              		.section	.rodata
 1357              		.align	2
 1358              	.LC27:
 1359 02d8 41542353 		.ascii	"AT#SGACT=1,1\015\012\000"
 1359      47414354 
 1359      3D312C31 
 1359      0D0A00
 1360              		.section	.text.set_up_internet_connection,"ax",%progbits
 1361              		.align	2
 1362              		.global	set_up_internet_connection
 1363              		.thumb
 1364              		.thumb_func
 1365              		.type	set_up_internet_connection, %function
 1366              	set_up_internet_connection:
 1367              	.LFB77:
 395:modem.c       **** 
 396:modem.c       **** // Connect the modem to the internet
 397:modem.c       **** void set_up_internet_connection(){
 1368              		.loc 1 397 0
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 0
 1371              		@ frame_needed = 1, uses_anonymous_args = 0
 1372 0000 80B5     		push	{r7, lr}
 1373              		.cfi_def_cfa_offset 8
 1374              		.cfi_offset 7, -8
 1375              		.cfi_offset 14, -4
 1376 0002 00AF     		add	r7, sp, #0
 1377              		.cfi_def_cfa_register 7
 398:modem.c       ****     
 399:modem.c       ****     //port 3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 34


 400:modem.c       ****    //<connId>,<srMode>,<dataMode>, 
 401:modem.c       ****     //at_write_command("AT#SCFGEXT=1,1,0,0,0,0\r", "OK",DEFAULT_AT_TIMEOUT);////LTE modem relevant
 402:modem.c       ****     
 403:modem.c       ****     //<connId>,<cid>,<pktSz>,<maxTo>,<connTo>,<txTo>
 404:modem.c       ****     //at_write_command("AT#SCFG=1,3,300,90,600,50\r", "OK",DEFAULT_AT_TIMEOUT); //LTE modem relevan
 405:modem.c       ****     // <cid>,<stat>
 406:modem.c       ****    
 407:modem.c       ****     // AT command SGACT is Context Activation command is used to activate the specified PDP context
 408:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",1000u);
 1378              		.loc 1 408 0
 1379 0004 4FF47A72 		mov	r2, #1000
 1380 0008 0249     		ldr	r1, .L83
 1381 000a 0348     		ldr	r0, .L83+4
 1382 000c FFF7FEFF 		bl	at_write_command
 409:modem.c       ****     
 410:modem.c       **** }
 1383              		.loc 1 410 0
 1384 0010 00BF     		nop
 1385 0012 80BD     		pop	{r7, pc}
 1386              	.L84:
 1387              		.align	2
 1388              	.L83:
 1389 0014 00000000 		.word	.LC0
 1390 0018 D8020000 		.word	.LC27
 1391              		.cfi_endproc
 1392              	.LFE77:
 1393              		.size	set_up_internet_connection, .-set_up_internet_connection
 1394              		.section	.rodata
 1395 02e7 00       		.align	2
 1396              	.LC28:
 1397 02e8 312C3100 		.ascii	"1,1\000"
 1398              		.align	2
 1399              	.LC29:
 1400 02ec 41542353 		.ascii	"AT#SGACT?\015\000"
 1400      47414354 
 1400      3F0D00
 1401              		.section	.text.is_connected_to_internet,"ax",%progbits
 1402              		.align	2
 1403              		.global	is_connected_to_internet
 1404              		.thumb
 1405              		.thumb_func
 1406              		.type	is_connected_to_internet, %function
 1407              	is_connected_to_internet:
 1408              	.LFB78:
 411:modem.c       **** 
 412:modem.c       **** // Checks if the modem is connected to the internet
 413:modem.c       **** uint8 is_connected_to_internet(){
 1409              		.loc 1 413 0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 0
 1412              		@ frame_needed = 1, uses_anonymous_args = 0
 1413 0000 80B5     		push	{r7, lr}
 1414              		.cfi_def_cfa_offset 8
 1415              		.cfi_offset 7, -8
 1416              		.cfi_offset 14, -4
 1417 0002 00AF     		add	r7, sp, #0
 1418              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 35


 414:modem.c       ****     // AT command SGACT? reports the range for the parameters <cid> and <stat>
 415:modem.c       ****     // cid: is the Packet Data Protocol (PDP) Context Identifier which specifies the particular PDP
 416:modem.c       ****     // stat: gives the context staus (0 deactivated and 1 activated)
 417:modem.c       ****     // Check for 3,1 if Verizon 
 418:modem.c       ****     if(at_write_command("AT#SGACT?\r", "1,1",DEFAULT_AT_TIMEOUT)){
 1419              		.loc 1 418 0
 1420 0004 4FF4FA62 		mov	r2, #2000
 1421 0008 0549     		ldr	r1, .L88
 1422 000a 0648     		ldr	r0, .L88+4
 1423 000c FFF7FEFF 		bl	at_write_command
 1424 0010 0346     		mov	r3, r0
 1425 0012 002B     		cmp	r3, #0
 1426 0014 01D0     		beq	.L86
 419:modem.c       ****         return 1u;
 1427              		.loc 1 419 0
 1428 0016 0123     		movs	r3, #1
 1429 0018 00E0     		b	.L87
 1430              	.L86:
 420:modem.c       ****     }
 421:modem.c       ****     return 0u;  
 1431              		.loc 1 421 0
 1432 001a 0023     		movs	r3, #0
 1433              	.L87:
 422:modem.c       **** }
 1434              		.loc 1 422 0
 1435 001c 1846     		mov	r0, r3
 1436 001e 80BD     		pop	{r7, pc}
 1437              	.L89:
 1438              		.align	2
 1439              	.L88:
 1440 0020 E8020000 		.word	.LC28
 1441 0024 EC020000 		.word	.LC29
 1442              		.cfi_endproc
 1443              	.LFE78:
 1444              		.size	is_connected_to_internet, .-is_connected_to_internet
 1445              		.section	.rodata
 1446 02f7 00       		.align	2
 1447              	.LC30:
 1448 02f8 41542B43 		.ascii	"AT+CESQ\015\000"
 1448      4553510D 
 1448      00
 1449 0301 000000   		.align	2
 1450              	.LC31:
 1451 0304 4E657477 		.ascii	"Network STts: %s\000"
 1451      6F726B20 
 1451      53547473 
 1451      3A202573 
 1451      00
 1452 0315 000000   		.align	2
 1453              	.LC32:
 1454 0318 2C00     		.ascii	",\000"
 1455              		.section	.text.get_cell_network_stats,"ax",%progbits
 1456              		.align	2
 1457              		.global	get_cell_network_stats
 1458              		.thumb
 1459              		.thumb_func
 1460              		.type	get_cell_network_stats, %function
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 36


 1461              	get_cell_network_stats:
 1462              	.LFB79:
 423:modem.c       **** 
 424:modem.c       **** // Get cellular network stats 
 425:modem.c       **** void get_cell_network_stats(){
 1463              		.loc 1 425 0
 1464              		.cfi_startproc
 1465              		@ args = 0, pretend = 0, frame = 40
 1466              		@ frame_needed = 1, uses_anonymous_args = 0
 1467 0000 80B5     		push	{r7, lr}
 1468              		.cfi_def_cfa_offset 8
 1469              		.cfi_offset 7, -8
 1470              		.cfi_offset 14, -4
 1471 0002 8AB0     		sub	sp, sp, #40
 1472              		.cfi_def_cfa_offset 48
 1473 0004 00AF     		add	r7, sp, #0
 1474              		.cfi_def_cfa_register 7
 1475              	.LBB9:
 426:modem.c       ****     // Gets RSSI and FER values
 427:modem.c       ****     // RSSI (Received Signal Strength Indicator) is a measurement of how well your device can hear 
 428:modem.c       ****     // RSRQ (Reference Signal Received Quality) (or SQ for short) gives the signal quality. 
 429:modem.c       ****     for(uint8 attempts =0; attempts <10; attempts++){
 1476              		.loc 1 429 0
 1477 0006 0023     		movs	r3, #0
 1478 0008 87F82730 		strb	r3, [r7, #39]
 1479 000c 77E0     		b	.L91
 1480              	.L100:
 1481              	.LBB10:
 430:modem.c       ****         // AT command CESQ checks Signal Quality
 431:modem.c       ****         at_write_command("AT+CESQ\r", "OK",DEFAULT_AT_TIMEOUT);
 1482              		.loc 1 431 0
 1483 000e 4FF4FA62 		mov	r2, #2000
 1484 0012 3F49     		ldr	r1, .L102
 1485 0014 3F48     		ldr	r0, .L102+4
 1486 0016 FFF7FEFF 		bl	at_write_command
 432:modem.c       ****         
 433:modem.c       ****         char cesq[30]; // Create a character array of length 30 called cesq 
 434:modem.c       ****         // Extract string from the UART
 435:modem.c       ****         extract_string(uart_received_string,": ","\r",cesq);
 1487              		.loc 1 435 0
 1488 001a 3B46     		mov	r3, r7
 1489 001c 3E4A     		ldr	r2, .L102+8
 1490 001e 3F49     		ldr	r1, .L102+12
 1491 0020 3F48     		ldr	r0, .L102+16
 1492 0022 FFF7FEFF 		bl	extract_string
 436:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Network STts: %s",cesq);
 1493              		.loc 1 436 0
 1494 0026 3B46     		mov	r3, r7
 1495 0028 1A46     		mov	r2, r3
 1496 002a 3E49     		ldr	r1, .L102+20
 1497 002c 0020     		movs	r0, #0
 1498 002e FFF7FEFF 		bl	printNotif
 437:modem.c       ****         
 438:modem.c       ****         char *token; // Create a character variable pointer
 439:modem.c       ****         // strtok(): breaks "cesq" into smaller string when sees ","
 440:modem.c       ****         token = strtok(cesq,",");
 1499              		.loc 1 440 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 37


 1500 0032 3B46     		mov	r3, r7
 1501 0034 3C49     		ldr	r1, .L102+24
 1502 0036 1846     		mov	r0, r3
 1503 0038 FFF7FEFF 		bl	strtok
 1504 003c 3862     		str	r0, [r7, #32]
 441:modem.c       ****         // If token is not NULL then set modem_stats.rssi equal to the integer "token"
 442:modem.c       ****         // int atoi(const char *str) converts the string argument str to an integer (type int).
 443:modem.c       ****         if(token != NULL){
 1505              		.loc 1 443 0
 1506 003e 3B6A     		ldr	r3, [r7, #32]
 1507 0040 002B     		cmp	r3, #0
 1508 0042 06D0     		beq	.L92
 444:modem.c       ****             modem_stats.rssi = atoi(token);
 1509              		.loc 1 444 0
 1510 0044 386A     		ldr	r0, [r7, #32]
 1511 0046 FFF7FEFF 		bl	atoi
 1512 004a 0346     		mov	r3, r0
 1513 004c DAB2     		uxtb	r2, r3
 1514 004e 374B     		ldr	r3, .L102+28
 1515 0050 1A70     		strb	r2, [r3]
 1516              	.L92:
 445:modem.c       ****         }
 446:modem.c       ****         token = strtok(NULL,",");
 1517              		.loc 1 446 0
 1518 0052 3549     		ldr	r1, .L102+24
 1519 0054 0020     		movs	r0, #0
 1520 0056 FFF7FEFF 		bl	strtok
 1521 005a 3862     		str	r0, [r7, #32]
 447:modem.c       ****         if(token != NULL){
 1522              		.loc 1 447 0
 1523 005c 3B6A     		ldr	r3, [r7, #32]
 1524 005e 002B     		cmp	r3, #0
 1525 0060 06D0     		beq	.L93
 448:modem.c       ****             modem_stats.ber = atoi(token);
 1526              		.loc 1 448 0
 1527 0062 386A     		ldr	r0, [r7, #32]
 1528 0064 FFF7FEFF 		bl	atoi
 1529 0068 0346     		mov	r3, r0
 1530 006a DAB2     		uxtb	r2, r3
 1531 006c 2F4B     		ldr	r3, .L102+28
 1532 006e 5A70     		strb	r2, [r3, #1]
 1533              	.L93:
 449:modem.c       ****         }
 450:modem.c       ****         token = strtok(NULL,",");
 1534              		.loc 1 450 0
 1535 0070 2D49     		ldr	r1, .L102+24
 1536 0072 0020     		movs	r0, #0
 1537 0074 FFF7FEFF 		bl	strtok
 1538 0078 3862     		str	r0, [r7, #32]
 451:modem.c       ****         if(token != NULL){
 1539              		.loc 1 451 0
 1540 007a 3B6A     		ldr	r3, [r7, #32]
 1541 007c 002B     		cmp	r3, #0
 1542 007e 06D0     		beq	.L94
 452:modem.c       ****             modem_stats.rscp = atoi(token);
 1543              		.loc 1 452 0
 1544 0080 386A     		ldr	r0, [r7, #32]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 38


 1545 0082 FFF7FEFF 		bl	atoi
 1546 0086 0346     		mov	r3, r0
 1547 0088 DAB2     		uxtb	r2, r3
 1548 008a 284B     		ldr	r3, .L102+28
 1549 008c 9A70     		strb	r2, [r3, #2]
 1550              	.L94:
 453:modem.c       ****         }
 454:modem.c       ****         token = strtok(NULL,",");
 1551              		.loc 1 454 0
 1552 008e 2649     		ldr	r1, .L102+24
 1553 0090 0020     		movs	r0, #0
 1554 0092 FFF7FEFF 		bl	strtok
 1555 0096 3862     		str	r0, [r7, #32]
 455:modem.c       ****         if(token != NULL){
 1556              		.loc 1 455 0
 1557 0098 3B6A     		ldr	r3, [r7, #32]
 1558 009a 002B     		cmp	r3, #0
 1559 009c 06D0     		beq	.L95
 456:modem.c       ****             modem_stats.ecno = atoi(token);
 1560              		.loc 1 456 0
 1561 009e 386A     		ldr	r0, [r7, #32]
 1562 00a0 FFF7FEFF 		bl	atoi
 1563 00a4 0346     		mov	r3, r0
 1564 00a6 DAB2     		uxtb	r2, r3
 1565 00a8 204B     		ldr	r3, .L102+28
 1566 00aa DA70     		strb	r2, [r3, #3]
 1567              	.L95:
 457:modem.c       ****         }
 458:modem.c       ****         token = strtok(NULL,",");
 1568              		.loc 1 458 0
 1569 00ac 1E49     		ldr	r1, .L102+24
 1570 00ae 0020     		movs	r0, #0
 1571 00b0 FFF7FEFF 		bl	strtok
 1572 00b4 3862     		str	r0, [r7, #32]
 459:modem.c       ****         if(token != NULL){
 1573              		.loc 1 459 0
 1574 00b6 3B6A     		ldr	r3, [r7, #32]
 1575 00b8 002B     		cmp	r3, #0
 1576 00ba 06D0     		beq	.L96
 460:modem.c       ****             modem_stats.rsrq = atoi(token);
 1577              		.loc 1 460 0
 1578 00bc 386A     		ldr	r0, [r7, #32]
 1579 00be FFF7FEFF 		bl	atoi
 1580 00c2 0346     		mov	r3, r0
 1581 00c4 DAB2     		uxtb	r2, r3
 1582 00c6 194B     		ldr	r3, .L102+28
 1583 00c8 1A71     		strb	r2, [r3, #4]
 1584              	.L96:
 461:modem.c       ****         }
 462:modem.c       ****         token = strtok(NULL,",");
 1585              		.loc 1 462 0
 1586 00ca 1749     		ldr	r1, .L102+24
 1587 00cc 0020     		movs	r0, #0
 1588 00ce FFF7FEFF 		bl	strtok
 1589 00d2 3862     		str	r0, [r7, #32]
 463:modem.c       ****         if(token != NULL){
 1590              		.loc 1 463 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 39


 1591 00d4 3B6A     		ldr	r3, [r7, #32]
 1592 00d6 002B     		cmp	r3, #0
 1593 00d8 06D0     		beq	.L97
 464:modem.c       ****             modem_stats.rsrp = atoi(token);
 1594              		.loc 1 464 0
 1595 00da 386A     		ldr	r0, [r7, #32]
 1596 00dc FFF7FEFF 		bl	atoi
 1597 00e0 0346     		mov	r3, r0
 1598 00e2 DAB2     		uxtb	r2, r3
 1599 00e4 114B     		ldr	r3, .L102+28
 1600 00e6 5A71     		strb	r2, [r3, #5]
 1601              	.L97:
 465:modem.c       ****         }
 466:modem.c       ****         // If rsrp is not equal to 255 then break.
 467:modem.c       ****         if(modem_stats.rsrp != 255){
 1602              		.loc 1 467 0
 1603 00e8 104B     		ldr	r3, .L102+28
 1604 00ea 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1605 00ec FF2B     		cmp	r3, #255
 1606 00ee 01D0     		beq	.L98
 468:modem.c       ****             break;
 1607              		.loc 1 468 0
 1608 00f0 00BF     		nop
 1609              	.LBE10:
 1610              	.LBE9:
 469:modem.c       ****         }
 470:modem.c       ****     }
 471:modem.c       **** }
 1611              		.loc 1 471 0
 1612 00f2 08E0     		b	.L101
 1613              	.L98:
 1614              	.LBB11:
 429:modem.c       ****         // AT command CESQ checks Signal Quality
 1615              		.loc 1 429 0
 1616 00f4 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1617 00f8 0133     		adds	r3, r3, #1
 1618 00fa 87F82730 		strb	r3, [r7, #39]
 1619              	.L91:
 429:modem.c       ****         // AT command CESQ checks Signal Quality
 1620              		.loc 1 429 0 is_stmt 0 discriminator 1
 1621 00fe 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1622 0102 092B     		cmp	r3, #9
 1623 0104 83D9     		bls	.L100
 1624              	.L101:
 1625              	.LBE11:
 1626              		.loc 1 471 0 is_stmt 1
 1627 0106 00BF     		nop
 1628 0108 2837     		adds	r7, r7, #40
 1629              		.cfi_def_cfa_offset 8
 1630 010a BD46     		mov	sp, r7
 1631              		.cfi_def_cfa_register 13
 1632              		@ sp needed
 1633 010c 80BD     		pop	{r7, pc}
 1634              	.L103:
 1635 010e 00BF     		.align	2
 1636              	.L102:
 1637 0110 00000000 		.word	.LC0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 40


 1638 0114 F8020000 		.word	.LC30
 1639 0118 88020000 		.word	.LC21
 1640 011c 8C020000 		.word	.LC22
 1641 0120 00000000 		.word	uart_received_string
 1642 0124 04030000 		.word	.LC31
 1643 0128 18030000 		.word	.LC32
 1644 012c 00000000 		.word	modem_stats
 1645              		.cfi_endproc
 1646              	.LFE79:
 1647              		.size	get_cell_network_stats, .-get_cell_network_stats
 1648              		.section	.text.updatable_parameters_initialize,"ax",%progbits
 1649              		.align	2
 1650              		.global	updatable_parameters_initialize
 1651              		.thumb
 1652              		.thumb_func
 1653              		.type	updatable_parameters_initialize, %function
 1654              	updatable_parameters_initialize:
 1655              	.LFB80:
 472:modem.c       **** // Initialize updatable parameters (sampling, reporting, and debug frequencies)
 473:modem.c       **** void updatable_parameters_initialize(){
 1656              		.loc 1 473 0
 1657              		.cfi_startproc
 1658              		@ args = 0, pretend = 0, frame = 0
 1659              		@ frame_needed = 1, uses_anonymous_args = 0
 1660              		@ link register save eliminated.
 1661 0000 80B4     		push	{r7}
 1662              		.cfi_def_cfa_offset 4
 1663              		.cfi_offset 7, -4
 1664 0002 00AF     		add	r7, sp, #0
 1665              		.cfi_def_cfa_register 7
 474:modem.c       ****     updatable_parameters.measure_time = 10u;
 1666              		.loc 1 474 0
 1667 0004 064B     		ldr	r3, .L105
 1668 0006 0A22     		movs	r2, #10
 1669 0008 1A70     		strb	r2, [r3]
 475:modem.c       ****     updatable_parameters.sync_time = 60u;
 1670              		.loc 1 475 0
 1671 000a 054B     		ldr	r3, .L105
 1672 000c 3C22     		movs	r2, #60
 1673 000e 5A70     		strb	r2, [r3, #1]
 476:modem.c       ****     updatable_parameters.debug_level = 1u;
 1674              		.loc 1 476 0
 1675 0010 034B     		ldr	r3, .L105
 1676 0012 0122     		movs	r2, #1
 1677 0014 9A70     		strb	r2, [r3, #2]
 477:modem.c       **** }
 1678              		.loc 1 477 0
 1679 0016 00BF     		nop
 1680 0018 BD46     		mov	sp, r7
 1681              		.cfi_def_cfa_register 13
 1682              		@ sp needed
 1683 001a 80BC     		pop	{r7}
 1684              		.cfi_restore 7
 1685              		.cfi_def_cfa_offset 0
 1686 001c 7047     		bx	lr
 1687              	.L106:
 1688 001e 00BF     		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 41


 1689              	.L105:
 1690 0020 00000000 		.word	updatable_parameters
 1691              		.cfi_endproc
 1692              	.LFE80:
 1693              		.size	updatable_parameters_initialize, .-updatable_parameters_initialize
 1694              		.section	.rodata
 1695 031a 0000     		.align	2
 1696              	.LC33:
 1697 031c 2A3A2025 		.ascii	"*: %d, *: %d, *: %d\000"
 1697      642C202A 
 1697      3A202564 
 1697      2C202A3A 
 1697      20256400 
 1698              		.align	2
 1699              	.LC34:
 1700 0330 53616D70 		.ascii	"Sampling frequency changed to: %d\015\012\000"
 1700      6C696E67 
 1700      20667265 
 1700      7175656E 
 1700      63792063 
 1701              		.align	2
 1702              	.LC35:
 1703 0354 5265706F 		.ascii	"Reporting frequency changed to: %d\015\012\000"
 1703      7274696E 
 1703      67206672 
 1703      65717565 
 1703      6E637920 
 1704 0379 000000   		.align	2
 1705              	.LC36:
 1706 037c 44656275 		.ascii	"Debug printing frequency changed to: %d\015\012\000"
 1706      67207072 
 1706      696E7469 
 1706      6E672066 
 1706      72657175 
 1707 03a6 0000     		.align	2
 1708              	.LC37:
 1709 03a8 436F756C 		.ascii	"Could not parse malcom parameters.\000"
 1709      64206E6F 
 1709      74207061 
 1709      72736520 
 1709      6D616C63 
 1710              		.section	.text.get_updated_parameters_from_malcom,"ax",%progbits
 1711              		.align	2
 1712              		.global	get_updated_parameters_from_malcom
 1713              		.thumb
 1714              		.thumb_func
 1715              		.type	get_updated_parameters_from_malcom, %function
 1716              	get_updated_parameters_from_malcom:
 1717              	.LFB81:
 478:modem.c       **** 
 479:modem.c       **** // Get the update values for sampling frequency, reporting frequency, and the debug level from the 
 480:modem.c       **** void get_updated_parameters_from_malcom(){
 1718              		.loc 1 480 0
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 1040
 1721              		@ frame_needed = 1, uses_anonymous_args = 0
 1722 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 42


 1723              		.cfi_def_cfa_offset 8
 1724              		.cfi_offset 7, -8
 1725              		.cfi_offset 14, -4
 1726 0002 ADF5836D 		sub	sp, sp, #1048
 1727              		.cfi_def_cfa_offset 1056
 1728 0006 02AF     		add	r7, sp, #8
 1729              		.cfi_def_cfa 7, 1048
 481:modem.c       ****     
 482:modem.c       ****     // Create character array of size 1024 characters to hold the uart received string
 483:modem.c       ****     char SRECV[1024];
 484:modem.c       ****     
 485:modem.c       ****     // Extract UART string recieved from the modem and save to variables
 486:modem.c       ****     extract_string(uart_received_string,": ","OK",SRECV);
 1730              		.loc 1 486 0
 1731 0008 07F11003 		add	r3, r7, #16
 1732 000c 224A     		ldr	r2, .L111
 1733 000e 2349     		ldr	r1, .L111+4
 1734 0010 2348     		ldr	r0, .L111+8
 1735 0012 FFF7FEFF 		bl	extract_string
 487:modem.c       ****     
 488:modem.c       ****     // Create variables for what is sent back from the server
 489:modem.c       ****     int sample_freq, report_freq, debug_freq;
 490:modem.c       ****     
 491:modem.c       ****     // Scan SRECV character array and save values 
 492:modem.c       ****     if(sscanf(SRECV, "*: %d, *: %d, *: %d", &sample_freq,&report_freq,&debug_freq)==3){
 1736              		.loc 1 492 0
 1737 0016 07F10801 		add	r1, r7, #8
 1738 001a 07F10C02 		add	r2, r7, #12
 1739 001e 07F11000 		add	r0, r7, #16
 1740 0022 3B1D     		adds	r3, r7, #4
 1741 0024 0093     		str	r3, [sp]
 1742 0026 0B46     		mov	r3, r1
 1743 0028 1E49     		ldr	r1, .L111+12
 1744 002a FFF7FEFF 		bl	sscanf
 1745 002e 0346     		mov	r3, r0
 1746 0030 032B     		cmp	r3, #3
 1747 0032 28D1     		bne	.L108
 493:modem.c       ****         updatable_parameters.measure_time = sample_freq;
 1748              		.loc 1 493 0
 1749 0034 07F10C03 		add	r3, r7, #12
 1750 0038 1B68     		ldr	r3, [r3]
 1751 003a DAB2     		uxtb	r2, r3
 1752 003c 1A4B     		ldr	r3, .L111+16
 1753 003e 1A70     		strb	r2, [r3]
 494:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Sampling frequency changed to: %d\r\n", sample_freq);
 1754              		.loc 1 494 0
 1755 0040 07F10C03 		add	r3, r7, #12
 1756 0044 1B68     		ldr	r3, [r3]
 1757 0046 1A46     		mov	r2, r3
 1758 0048 1849     		ldr	r1, .L111+20
 1759 004a 0020     		movs	r0, #0
 1760 004c FFF7FEFF 		bl	printNotif
 495:modem.c       ****         updatable_parameters.sync_time = report_freq;
 1761              		.loc 1 495 0
 1762 0050 07F10803 		add	r3, r7, #8
 1763 0054 1B68     		ldr	r3, [r3]
 1764 0056 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 43


 1765 0058 134B     		ldr	r3, .L111+16
 1766 005a 5A70     		strb	r2, [r3, #1]
 496:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Reporting frequency changed to: %d\r\n", report_freq);
 1767              		.loc 1 496 0
 1768 005c 07F10803 		add	r3, r7, #8
 1769 0060 1B68     		ldr	r3, [r3]
 1770 0062 1A46     		mov	r2, r3
 1771 0064 1249     		ldr	r1, .L111+24
 1772 0066 0020     		movs	r0, #0
 1773 0068 FFF7FEFF 		bl	printNotif
 497:modem.c       ****         updatable_parameters.debug_level = debug_freq;
 1774              		.loc 1 497 0
 1775 006c 3B1D     		adds	r3, r7, #4
 1776 006e 1B68     		ldr	r3, [r3]
 1777 0070 DAB2     		uxtb	r2, r3
 1778 0072 0D4B     		ldr	r3, .L111+16
 1779 0074 9A70     		strb	r2, [r3, #2]
 498:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Debug printing frequency changed to: %d\r\n", debug_freq);
 1780              		.loc 1 498 0
 1781 0076 3B1D     		adds	r3, r7, #4
 1782 0078 1B68     		ldr	r3, [r3]
 1783 007a 1A46     		mov	r2, r3
 1784 007c 0D49     		ldr	r1, .L111+28
 1785 007e 0020     		movs	r0, #0
 1786 0080 FFF7FEFF 		bl	printNotif
 499:modem.c       ****     }else{
 500:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse malcom parameters.");
 501:modem.c       ****     }
 502:modem.c       **** }
 1787              		.loc 1 502 0
 1788 0084 03E0     		b	.L110
 1789              	.L108:
 500:modem.c       ****     }
 1790              		.loc 1 500 0
 1791 0086 0C49     		ldr	r1, .L111+32
 1792 0088 0220     		movs	r0, #2
 1793 008a FFF7FEFF 		bl	printNotif
 1794              	.L110:
 1795              		.loc 1 502 0
 1796 008e 00BF     		nop
 1797 0090 07F58267 		add	r7, r7, #1040
 1798              		.cfi_def_cfa_offset 8
 1799 0094 BD46     		mov	sp, r7
 1800              		.cfi_def_cfa_register 13
 1801              		@ sp needed
 1802 0096 80BD     		pop	{r7, pc}
 1803              	.L112:
 1804              		.align	2
 1805              	.L111:
 1806 0098 00000000 		.word	.LC0
 1807 009c 8C020000 		.word	.LC22
 1808 00a0 00000000 		.word	uart_received_string
 1809 00a4 1C030000 		.word	.LC33
 1810 00a8 00000000 		.word	updatable_parameters
 1811 00ac 30030000 		.word	.LC34
 1812 00b0 54030000 		.word	.LC35
 1813 00b4 7C030000 		.word	.LC36
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 44


 1814 00b8 A8030000 		.word	.LC37
 1815              		.cfi_endproc
 1816              	.LFE81:
 1817              		.size	get_updated_parameters_from_malcom, .-get_updated_parameters_from_malcom
 1818              		.section	.rodata
 1819 03cb 00       		.align	2
 1820              	.LC38:
 1821 03cc 41542343 		.ascii	"AT#CGMM\015\000"
 1821      474D4D0D 
 1821      00
 1822 03d5 000000   		.align	2
 1823              	.LC39:
 1824 03d8 4D6F6465 		.ascii	"Modem Model: %s\000"
 1824      6D204D6F 
 1824      64656C3A 
 1824      20257300 
 1825              		.align	2
 1826              	.LC40:
 1827 03e8 41542343 		.ascii	"AT#CCID\015\000"
 1827      4349440D 
 1827      00
 1828 03f1 000000   		.align	2
 1829              	.LC41:
 1830 03f4 53494D20 		.ascii	"SIM ID: %s\000"
 1830      49443A20 
 1830      257300
 1831 03ff 00       		.align	2
 1832              	.LC42:
 1833 0400 41542B43 		.ascii	"AT+CGSN\015\000"
 1833      47534E0D 
 1833      00
 1834 0409 000000   		.align	2
 1835              	.LC43:
 1836 040c 494D4549 		.ascii	"IMEI: %s\000"
 1836      3A202573 
 1836      00
 1837 0415 000000   		.align	2
 1838              	.LC44:
 1839 0418 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\015\012"
 1839      4744434F 
 1839      4E543D31 
 1839      2C224950 
 1839      222C2277 
 1840 0441 00       		.ascii	"\000"
 1841 0442 0000     		.align	2
 1842              	.LC45:
 1843 0444 41542B43 		.ascii	"AT+CFUN?\015\000"
 1843      46554E3F 
 1843      0D00
 1844 044e 0000     		.align	2
 1845              	.LC46:
 1846 0450 4346554E 		.ascii	"CFUN: %s\000"
 1846      3A202573 
 1846      00
 1847 0459 000000   		.align	2
 1848              	.LC47:
 1849 045c 41542B43 		.ascii	"AT+CFUN=1\015\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 45


 1849      46554E3D 
 1849      310D00
 1850              		.section	.text.modem_configure_settings,"ax",%progbits
 1851              		.align	2
 1852              		.global	modem_configure_settings
 1853              		.thumb
 1854              		.thumb_func
 1855              		.type	modem_configure_settings, %function
 1856              	modem_configure_settings:
 1857              	.LFB82:
 503:modem.c       ****     
 504:modem.c       **** // Configure the modem settings
 505:modem.c       **** void modem_configure_settings(){
 1858              		.loc 1 505 0
 1859              		.cfi_startproc
 1860              		@ args = 0, pretend = 0, frame = 16
 1861              		@ frame_needed = 1, uses_anonymous_args = 0
 1862 0000 80B5     		push	{r7, lr}
 1863              		.cfi_def_cfa_offset 8
 1864              		.cfi_offset 7, -8
 1865              		.cfi_offset 14, -4
 1866 0002 84B0     		sub	sp, sp, #16
 1867              		.cfi_def_cfa_offset 24
 1868 0004 00AF     		add	r7, sp, #0
 1869              		.cfi_def_cfa_register 7
 506:modem.c       ****     
 507:modem.c       ****     // Save/print modem model ID number
 508:modem.c       ****     if(modem_info.model_id[0] == '\0'){
 1870              		.loc 1 508 0
 1871 0006 3B4B     		ldr	r3, .L120
 1872 0008 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1873 000a 002B     		cmp	r3, #0
 1874 000c 13D1     		bne	.L114
 509:modem.c       ****         // AT command #CGMM returns the "device model identification" code with the command echo.
 510:modem.c       ****         if(at_write_command("AT#CGMM\r","OK",DEFAULT_AT_TIMEOUT)){
 1875              		.loc 1 510 0
 1876 000e 4FF4FA62 		mov	r2, #2000
 1877 0012 3949     		ldr	r1, .L120+4
 1878 0014 3948     		ldr	r0, .L120+8
 1879 0016 FFF7FEFF 		bl	at_write_command
 1880 001a 0346     		mov	r3, r0
 1881 001c 002B     		cmp	r3, #0
 1882 001e 0AD0     		beq	.L114
 511:modem.c       ****             // Extract modem model ID number string from the UART
 512:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.model_id);
 1883              		.loc 1 512 0
 1884 0020 374B     		ldr	r3, .L120+12
 1885 0022 384A     		ldr	r2, .L120+16
 1886 0024 3849     		ldr	r1, .L120+20
 1887 0026 3948     		ldr	r0, .L120+24
 1888 0028 FFF7FEFF 		bl	extract_string
 513:modem.c       ****             // Print modem model ID number
 514:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem Model: %s",modem_info.model_id);
 1889              		.loc 1 514 0
 1890 002c 344A     		ldr	r2, .L120+12
 1891 002e 3849     		ldr	r1, .L120+28
 1892 0030 0020     		movs	r0, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 46


 1893 0032 FFF7FEFF 		bl	printNotif
 1894              	.L114:
 515:modem.c       ****         }
 516:modem.c       ****     }
 517:modem.c       ****     
 518:modem.c       ****    // Save/print SIM-card ID
 519:modem.c       ****    if(modem_info.sim_id[0] == '\0'){
 1895              		.loc 1 519 0
 1896 0036 2F4B     		ldr	r3, .L120
 1897 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1898 003a 002B     		cmp	r3, #0
 1899 003c 13D1     		bne	.L115
 520:modem.c       ****         // AT command #CCID is an execution command that reads the SIM number 
 521:modem.c       ****         if(at_write_command("AT#CCID\r", "OK", DEFAULT_AT_TIMEOUT)){
 1900              		.loc 1 521 0
 1901 003e 4FF4FA62 		mov	r2, #2000
 1902 0042 2D49     		ldr	r1, .L120+4
 1903 0044 3348     		ldr	r0, .L120+32
 1904 0046 FFF7FEFF 		bl	at_write_command
 1905 004a 0346     		mov	r3, r0
 1906 004c 002B     		cmp	r3, #0
 1907 004e 0AD0     		beq	.L115
 522:modem.c       ****             // Extract SIM-card ID string from the UART
 523:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.sim_id);
 1908              		.loc 1 523 0
 1909 0050 284B     		ldr	r3, .L120
 1910 0052 2C4A     		ldr	r2, .L120+16
 1911 0054 2C49     		ldr	r1, .L120+20
 1912 0056 2D48     		ldr	r0, .L120+24
 1913 0058 FFF7FEFF 		bl	extract_string
 524:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"SIM ID: %s",modem_info.sim_id);
 1914              		.loc 1 524 0
 1915 005c 254A     		ldr	r2, .L120
 1916 005e 2E49     		ldr	r1, .L120+36
 1917 0060 0020     		movs	r0, #0
 1918 0062 FFF7FEFF 		bl	printNotif
 1919              	.L115:
 525:modem.c       ****         }
 526:modem.c       ****    }
 527:modem.c       **** 
 528:modem.c       ****     // Save/print modem IMEI
 529:modem.c       ****     if(modem_info.imei[0] == '\0'){
 1920              		.loc 1 529 0
 1921 0066 234B     		ldr	r3, .L120
 1922 0068 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1923 006c 002B     		cmp	r3, #0
 1924 006e 13D1     		bne	.L116
 530:modem.c       ****         // AT command #CGSN returns the product serial number, identified as the IMEI of the mobile
 531:modem.c       ****         if(at_write_command("AT+CGSN\r","OK",DEFAULT_AT_TIMEOUT)){
 1925              		.loc 1 531 0
 1926 0070 4FF4FA62 		mov	r2, #2000
 1927 0074 2049     		ldr	r1, .L120+4
 1928 0076 2948     		ldr	r0, .L120+40
 1929 0078 FFF7FEFF 		bl	at_write_command
 1930 007c 0346     		mov	r3, r0
 1931 007e 002B     		cmp	r3, #0
 1932 0080 0AD0     		beq	.L116
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 47


 532:modem.c       ****             // Extract modem IMEI number string from the UART
 533:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.imei);
 1933              		.loc 1 533 0
 1934 0082 274B     		ldr	r3, .L120+44
 1935 0084 1F4A     		ldr	r2, .L120+16
 1936 0086 2049     		ldr	r1, .L120+20
 1937 0088 2048     		ldr	r0, .L120+24
 1938 008a FFF7FEFF 		bl	extract_string
 534:modem.c       ****             // Print modem IMEI number
 535:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"IMEI: %s",modem_info.imei);
 1939              		.loc 1 535 0
 1940 008e 244A     		ldr	r2, .L120+44
 1941 0090 2449     		ldr	r1, .L120+48
 1942 0092 0020     		movs	r0, #0
 1943 0094 FFF7FEFF 		bl	printNotif
 1944              	.L116:
 536:modem.c       ****         } 
 537:modem.c       ****     }
 538:modem.c       ****     
 539:modem.c       ****     // Configure protocol and cellular end point
 540:modem.c       ****     // AT command +CGDCONT defines the PDP context parameter values for a PDP context identified by
 541:modem.c       ****     at_write_command("AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\r\n", "OK", DEFAULT_AT_TIMEOUT);
 1945              		.loc 1 541 0
 1946 0098 4FF4FA62 		mov	r2, #2000
 1947 009c 1649     		ldr	r1, .L120+4
 1948 009e 2248     		ldr	r0, .L120+52
 1949 00a0 FFF7FEFF 		bl	at_write_command
 542:modem.c       ****     
 543:modem.c       ****     // Check if modem power savings is enabled. If so, disable it so we can send data.
 544:modem.c       ****     // AT command +CFUN? is a read command that reports the current setting of <fun> which is the p
 545:modem.c       ****     if(at_write_command("AT+CFUN?\r", "OK",DEFAULT_AT_TIMEOUT)){
 1950              		.loc 1 545 0
 1951 00a4 4FF4FA62 		mov	r2, #2000
 1952 00a8 1349     		ldr	r1, .L120+4
 1953 00aa 2048     		ldr	r0, .L120+56
 1954 00ac FFF7FEFF 		bl	at_write_command
 1955 00b0 0346     		mov	r3, r0
 1956 00b2 002B     		cmp	r3, #0
 1957 00b4 19D0     		beq	.L119
 1958              	.LBB12:
 546:modem.c       ****         char CFUN[10]; // Create a character array of length 10 called CFUN 
 547:modem.c       ****         // Extract UART string recieved from the modem
 548:modem.c       ****         extract_string(uart_received_string,": ","\r",CFUN);
 1959              		.loc 1 548 0
 1960 00b6 3B1D     		adds	r3, r7, #4
 1961 00b8 124A     		ldr	r2, .L120+16
 1962 00ba 1349     		ldr	r1, .L120+20
 1963 00bc 1348     		ldr	r0, .L120+24
 1964 00be FFF7FEFF 		bl	extract_string
 549:modem.c       ****         // Print UART string recieved from the modem
 550:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"CFUN: %s",CFUN);
 1965              		.loc 1 550 0
 1966 00c2 3B1D     		adds	r3, r7, #4
 1967 00c4 1A46     		mov	r2, r3
 1968 00c6 1A49     		ldr	r1, .L120+60
 1969 00c8 0020     		movs	r0, #0
 1970 00ca FFF7FEFF 		bl	printNotif
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 48


 551:modem.c       ****         // Search CRUN for "1", if "1" exists, it will return 1u otherwise it will return NULL
 552:modem.c       ****         // If it returns NULL, then write another command to the modem
 553:modem.c       ****         if(strstr(CFUN,"1") == NULL){
 1971              		.loc 1 553 0
 1972 00ce 3B1D     		adds	r3, r7, #4
 1973 00d0 3121     		movs	r1, #49
 1974 00d2 1846     		mov	r0, r3
 1975 00d4 FFF7FEFF 		bl	strchr
 1976 00d8 0346     		mov	r3, r0
 1977 00da 002B     		cmp	r3, #0
 1978 00dc 05D1     		bne	.L119
 554:modem.c       ****             // AT command +CFUN= is a set command which selects the level of functionality in the m
 555:modem.c       ****             // = 1 means mobile full functionality with power saving disabled 
 556:modem.c       ****             at_write_command("AT+CFUN=1\r", "OK",DEFAULT_AT_TIMEOUT);
 1979              		.loc 1 556 0
 1980 00de 4FF4FA62 		mov	r2, #2000
 1981 00e2 0549     		ldr	r1, .L120+4
 1982 00e4 1348     		ldr	r0, .L120+64
 1983 00e6 FFF7FEFF 		bl	at_write_command
 1984              	.L119:
 1985              	.LBE12:
 557:modem.c       ****         }
 558:modem.c       ****     }
 559:modem.c       **** 
 560:modem.c       ****     
 561:modem.c       **** }
 1986              		.loc 1 561 0
 1987 00ea 00BF     		nop
 1988 00ec 1037     		adds	r7, r7, #16
 1989              		.cfi_def_cfa_offset 8
 1990 00ee BD46     		mov	sp, r7
 1991              		.cfi_def_cfa_register 13
 1992              		@ sp needed
 1993 00f0 80BD     		pop	{r7, pc}
 1994              	.L121:
 1995 00f2 00BF     		.align	2
 1996              	.L120:
 1997 00f4 00000000 		.word	modem_info
 1998 00f8 00000000 		.word	.LC0
 1999 00fc CC030000 		.word	.LC38
 2000 0100 14000000 		.word	modem_info+20
 2001 0104 88020000 		.word	.LC21
 2002 0108 8C020000 		.word	.LC22
 2003 010c 00000000 		.word	uart_received_string
 2004 0110 D8030000 		.word	.LC39
 2005 0114 E8030000 		.word	.LC40
 2006 0118 F4030000 		.word	.LC41
 2007 011c 00040000 		.word	.LC42
 2008 0120 28000000 		.word	modem_info+40
 2009 0124 0C040000 		.word	.LC43
 2010 0128 18040000 		.word	.LC44
 2011 012c 44040000 		.word	.LC45
 2012 0130 50040000 		.word	.LC46
 2013 0134 5C040000 		.word	.LC47
 2014              		.cfi_endproc
 2015              	.LFE82:
 2016              		.size	modem_configure_settings, .-modem_configure_settings
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 49


 2017              		.section	.rodata
 2018 0467 00       		.align	2
 2019              	.LC48:
 2020 0468 4D6F6465 		.ascii	"Modem not ready to get time. Not conncted to networ"
 2020      6D206E6F 
 2020      74207265 
 2020      61647920 
 2020      746F2067 
 2021 049b 6B2E00   		.ascii	"k.\000"
 2022 049e 0000     		.align	2
 2023              	.LC49:
 2024 04a0 41542B43 		.ascii	"AT+CCLK?\015\000"
 2024      434C4B3F 
 2024      0D00
 2025 04aa 0000     		.align	2
 2026              	.LC50:
 2027 04ac 220D00   		.ascii	"\"\015\000"
 2028 04af 00       		.align	2
 2029              	.LC51:
 2030 04b0 3A202200 		.ascii	": \"\000"
 2031              		.align	2
 2032              	.LC52:
 2033 04b4 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d-%d\000"
 2033      642F2564 
 2033      2C25643A 
 2033      25643A25 
 2033      642D2564 
 2034 04c9 000000   		.align	2
 2035              	.LC53:
 2036 04cc 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d+%d\000"
 2036      642F2564 
 2036      2C25643A 
 2036      25643A25 
 2036      642B2564 
 2037 04e1 000000   		.align	2
 2038              	.LC54:
 2039 04e4 436F756C 		.ascii	"Could not parse modem time.\000"
 2039      64206E6F 
 2039      74207061 
 2039      72736520 
 2039      6D6F6465 
 2040              		.section	.text.modem_get_network_time,"ax",%progbits
 2041              		.align	2
 2042              		.global	modem_get_network_time
 2043              		.thumb
 2044              		.thumb_func
 2045              		.type	modem_get_network_time, %function
 2046              	modem_get_network_time:
 2047              	.LFB83:
 562:modem.c       **** 
 563:modem.c       **** //returns 0 if modem can't get time
 564:modem.c       **** long modem_get_network_time(){
 2048              		.loc 1 564 0
 2049              		.cfi_startproc
 2050              		@ args = 0, pretend = 0, frame = 104
 2051              		@ frame_needed = 1, uses_anonymous_args = 0
 2052 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 50


 2053              		.cfi_def_cfa_offset 8
 2054              		.cfi_offset 7, -8
 2055              		.cfi_offset 14, -4
 2056 0002 A0B0     		sub	sp, sp, #128
 2057              		.cfi_def_cfa_offset 136
 2058 0004 06AF     		add	r7, sp, #24
 2059              		.cfi_def_cfa 7, 112
 565:modem.c       ****     
 566:modem.c       ****     //modem reposen format (careful to include the quotes "")
 567:modem.c       ****     //+CCLK: "20/05/01,10:48:33-16" the "-16" is the number of quarter hourts (15 mins) from GMT ti
 568:modem.c       ****     //ex: 14:48 GMT
 569:modem.c       **** 
 570:modem.c       ****     // If modem_state is not "ready", then print error and return 0
 571:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2060              		.loc 1 571 0
 2061 0006 444B     		ldr	r3, .L129
 2062 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2063 000a 042B     		cmp	r3, #4
 2064 000c 05D0     		beq	.L123
 572:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Modem not ready to get time. Not conncted to network.");
 2065              		.loc 1 572 0
 2066 000e 4349     		ldr	r1, .L129+4
 2067 0010 0220     		movs	r0, #2
 2068 0012 FFF7FEFF 		bl	printNotif
 573:modem.c       ****         return 0;   
 2069              		.loc 1 573 0
 2070 0016 0023     		movs	r3, #0
 2071 0018 7AE0     		b	.L124
 2072              	.L123:
 574:modem.c       ****     }
 575:modem.c       ****     long epoch_time = 0; // Create variable of long time and set equal to 0
 2073              		.loc 1 575 0
 2074 001a 0023     		movs	r3, #0
 2075 001c 7B66     		str	r3, [r7, #100]
 576:modem.c       ****     
 577:modem.c       ****     // AT command +CCLK? is a read command that returns the current setting of the real-time clock 
 578:modem.c       ****     if(at_write_command("AT+CCLK?\r","OK",DEFAULT_AT_TIMEOUT)){
 2076              		.loc 1 578 0
 2077 001e 4FF4FA62 		mov	r2, #2000
 2078 0022 3F49     		ldr	r1, .L129+8
 2079 0024 3F48     		ldr	r0, .L129+12
 2080 0026 FFF7FEFF 		bl	at_write_command
 2081 002a 0346     		mov	r3, r0
 2082 002c 002B     		cmp	r3, #0
 2083 002e 6ED0     		beq	.L125
 2084              	.LBB13:
 579:modem.c       ****         // need to set this to /0
 580:modem.c       ****         char network_time[30]; // Create a character array of length 30 called network_time 
 581:modem.c       ****         network_time[0] = '\0';
 2085              		.loc 1 581 0
 2086 0030 0023     		movs	r3, #0
 2087 0032 87F84430 		strb	r3, [r7, #68]
 582:modem.c       ****         // Extract UART string recieved from the modem and save to variable network_time
 583:modem.c       ****         extract_string(uart_received_string,": \"","\"\r",network_time);
 2088              		.loc 1 583 0
 2089 0036 07F14403 		add	r3, r7, #68
 2090 003a 3B4A     		ldr	r2, .L129+16
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 51


 2091 003c 3B49     		ldr	r1, .L129+20
 2092 003e 3C48     		ldr	r0, .L129+24
 2093 0040 FFF7FEFF 		bl	extract_string
 584:modem.c       ****         
 585:modem.c       ****         ///////////////////  
 586:modem.c       ****         struct tm t; // Creates variable t of struct tm
 587:modem.c       ****         
 588:modem.c       ****         // Creates a bunch of variables of type int and sets them to 0
 589:modem.c       ****         int year, month, day, hour, minute, second, gmt_offset = 0;
 2094              		.loc 1 589 0
 2095 0044 0023     		movs	r3, #0
 2096 0046 BB62     		str	r3, [r7, #40]
 590:modem.c       ****       
 591:modem.c       ****         // Determines the GMT offset 
 592:modem.c       ****         // int sscanf(const char *str, const char *format, ...) reads formatted input from a string
 593:modem.c       ****         // On success, the function returns the number of variables filled. In the case of an input
 594:modem.c       ****         if(sscanf(network_time,"%d/%d/%d,%d:%d:%d-%d",&year,&month,&day,&hour,&minute,&second,&gmt_
 2097              		.loc 1 594 0
 2098 0048 07F13C01 		add	r1, r7, #60
 2099 004c 07F14002 		add	r2, r7, #64
 2100 0050 07F14400 		add	r0, r7, #68
 2101 0054 07F12803 		add	r3, r7, #40
 2102 0058 0493     		str	r3, [sp, #16]
 2103 005a 07F12C03 		add	r3, r7, #44
 2104 005e 0393     		str	r3, [sp, #12]
 2105 0060 07F13003 		add	r3, r7, #48
 2106 0064 0293     		str	r3, [sp, #8]
 2107 0066 07F13403 		add	r3, r7, #52
 2108 006a 0193     		str	r3, [sp, #4]
 2109 006c 07F13803 		add	r3, r7, #56
 2110 0070 0093     		str	r3, [sp]
 2111 0072 0B46     		mov	r3, r1
 2112 0074 2F49     		ldr	r1, .L129+28
 2113 0076 FFF7FEFF 		bl	sscanf
 2114 007a 0346     		mov	r3, r0
 2115 007c 072B     		cmp	r3, #7
 2116 007e 06D1     		bne	.L126
 595:modem.c       ****             gmt_offset = gmt_offset*(900);
 2117              		.loc 1 595 0
 2118 0080 BB6A     		ldr	r3, [r7, #40]
 2119 0082 4FF46172 		mov	r2, #900
 2120 0086 02FB03F3 		mul	r3, r2, r3
 2121 008a BB62     		str	r3, [r7, #40]
 2122 008c 27E0     		b	.L127
 2123              	.L126:
 596:modem.c       ****         }else if(sscanf(network_time,"%d/%d/%d,%d:%d:%d+%d",&year,&month,&day,&hour,&minute,&second
 2124              		.loc 1 596 0
 2125 008e 07F13C01 		add	r1, r7, #60
 2126 0092 07F14002 		add	r2, r7, #64
 2127 0096 07F14400 		add	r0, r7, #68
 2128 009a 07F12803 		add	r3, r7, #40
 2129 009e 0493     		str	r3, [sp, #16]
 2130 00a0 07F12C03 		add	r3, r7, #44
 2131 00a4 0393     		str	r3, [sp, #12]
 2132 00a6 07F13003 		add	r3, r7, #48
 2133 00aa 0293     		str	r3, [sp, #8]
 2134 00ac 07F13403 		add	r3, r7, #52
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 52


 2135 00b0 0193     		str	r3, [sp, #4]
 2136 00b2 07F13803 		add	r3, r7, #56
 2137 00b6 0093     		str	r3, [sp]
 2138 00b8 0B46     		mov	r3, r1
 2139 00ba 1F49     		ldr	r1, .L129+32
 2140 00bc FFF7FEFF 		bl	sscanf
 2141 00c0 0346     		mov	r3, r0
 2142 00c2 072B     		cmp	r3, #7
 2143 00c4 05D1     		bne	.L128
 597:modem.c       ****             gmt_offset = gmt_offset*(-900);
 2144              		.loc 1 597 0
 2145 00c6 BB6A     		ldr	r3, [r7, #40]
 2146 00c8 1C4A     		ldr	r2, .L129+36
 2147 00ca 02FB03F3 		mul	r3, r2, r3
 2148 00ce BB62     		str	r3, [r7, #40]
 2149 00d0 05E0     		b	.L127
 2150              	.L128:
 598:modem.c       ****         }else{
 599:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Could not parse modem time.");
 2151              		.loc 1 599 0
 2152 00d2 1B49     		ldr	r1, .L129+40
 2153 00d4 0220     		movs	r0, #2
 2154 00d6 FFF7FEFF 		bl	printNotif
 600:modem.c       ****             return 0;  // Return 0 if cannot get time 
 2155              		.loc 1 600 0
 2156 00da 0023     		movs	r3, #0
 2157 00dc 18E0     		b	.L124
 2158              	.L127:
 601:modem.c       ****         }
 602:modem.c       ****         
 603:modem.c       ****         // Sets each variable to the correct time 
 604:modem.c       ****         t.tm_sec = second;
 2159              		.loc 1 604 0
 2160 00de FB6A     		ldr	r3, [r7, #44]
 2161 00e0 7B60     		str	r3, [r7, #4]
 605:modem.c       ****         t.tm_min = minute;
 2162              		.loc 1 605 0
 2163 00e2 3B6B     		ldr	r3, [r7, #48]
 2164 00e4 BB60     		str	r3, [r7, #8]
 606:modem.c       ****         t.tm_hour = hour;
 2165              		.loc 1 606 0
 2166 00e6 7B6B     		ldr	r3, [r7, #52]
 2167 00e8 FB60     		str	r3, [r7, #12]
 607:modem.c       ****         t.tm_year = year + 100;    // Year since 1900
 2168              		.loc 1 607 0
 2169 00ea 3B6C     		ldr	r3, [r7, #64]
 2170 00ec 6433     		adds	r3, r3, #100
 2171 00ee BB61     		str	r3, [r7, #24]
 608:modem.c       ****         t.tm_mon = month-1;        // Month, where 0 = jan
 2172              		.loc 1 608 0
 2173 00f0 FB6B     		ldr	r3, [r7, #60]
 2174 00f2 013B     		subs	r3, r3, #1
 2175 00f4 7B61     		str	r3, [r7, #20]
 609:modem.c       ****         t.tm_mday = day;           // Day of the month
 2176              		.loc 1 609 0
 2177 00f6 BB6B     		ldr	r3, [r7, #56]
 2178 00f8 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 53


 610:modem.c       ****         t.tm_isdst = 0;            // Is Daylight Savings on? 1 = yes, 0 = no, -1 = unknown
 2179              		.loc 1 610 0
 2180 00fa 0023     		movs	r3, #0
 2181 00fc 7B62     		str	r3, [r7, #36]
 611:modem.c       ****     
 612:modem.c       ****         // Set variable epoch-time to be equal to the local time plus the GMT offset
 613:modem.c       ****         // the mktime function converts a broken-down local time (pointed to by timeptr) and return
 614:modem.c       ****         epoch_time = mktime(&t) + gmt_offset;
 2182              		.loc 1 614 0
 2183 00fe 3B1D     		adds	r3, r7, #4
 2184 0100 1846     		mov	r0, r3
 2185 0102 FFF7FEFF 		bl	mktime
 2186 0106 0246     		mov	r2, r0
 2187 0108 BB6A     		ldr	r3, [r7, #40]
 2188 010a 1344     		add	r3, r3, r2
 2189 010c 7B66     		str	r3, [r7, #100]
 2190              	.L125:
 2191              	.LBE13:
 615:modem.c       ****     }
 616:modem.c       ****     
 617:modem.c       ****     return epoch_time;
 2192              		.loc 1 617 0
 2193 010e 7B6E     		ldr	r3, [r7, #100]
 2194              	.L124:
 618:modem.c       **** }
 2195              		.loc 1 618 0
 2196 0110 1846     		mov	r0, r3
 2197 0112 6837     		adds	r7, r7, #104
 2198              		.cfi_def_cfa_offset 8
 2199 0114 BD46     		mov	sp, r7
 2200              		.cfi_def_cfa_register 13
 2201              		@ sp needed
 2202 0116 80BD     		pop	{r7, pc}
 2203              	.L130:
 2204              		.align	2
 2205              	.L129:
 2206 0118 00000000 		.word	modem_state
 2207 011c 68040000 		.word	.LC48
 2208 0120 00000000 		.word	.LC0
 2209 0124 A0040000 		.word	.LC49
 2210 0128 AC040000 		.word	.LC50
 2211 012c B0040000 		.word	.LC51
 2212 0130 00000000 		.word	uart_received_string
 2213 0134 B4040000 		.word	.LC52
 2214 0138 CC040000 		.word	.LC53
 2215 013c 7CFCFFFF 		.word	-900
 2216 0140 E4040000 		.word	.LC54
 2217              		.cfi_endproc
 2218              	.LFE83:
 2219              		.size	modem_get_network_time, .-modem_get_network_time
 2220              		.section	.text.modem_get_state,"ax",%progbits
 2221              		.align	2
 2222              		.global	modem_get_state
 2223              		.thumb
 2224              		.thumb_func
 2225              		.type	modem_get_state, %function
 2226              	modem_get_state:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 54


 2227              	.LFB84:
 619:modem.c       **** 
 620:modem.c       **** // Get the modem state
 621:modem.c       **** uint8 modem_get_state(){
 2228              		.loc 1 621 0
 2229              		.cfi_startproc
 2230              		@ args = 0, pretend = 0, frame = 0
 2231              		@ frame_needed = 1, uses_anonymous_args = 0
 2232              		@ link register save eliminated.
 2233 0000 80B4     		push	{r7}
 2234              		.cfi_def_cfa_offset 4
 2235              		.cfi_offset 7, -4
 2236 0002 00AF     		add	r7, sp, #0
 2237              		.cfi_def_cfa_register 7
 622:modem.c       ****     return modem_state;
 2238              		.loc 1 622 0
 2239 0004 024B     		ldr	r3, .L133
 2240 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 623:modem.c       **** }
 2241              		.loc 1 623 0
 2242 0008 1846     		mov	r0, r3
 2243 000a BD46     		mov	sp, r7
 2244              		.cfi_def_cfa_register 13
 2245              		@ sp needed
 2246 000c 80BC     		pop	{r7}
 2247              		.cfi_restore 7
 2248              		.cfi_def_cfa_offset 0
 2249 000e 7047     		bx	lr
 2250              	.L134:
 2251              		.align	2
 2252              	.L133:
 2253 0010 00000000 		.word	modem_state
 2254              		.cfi_endproc
 2255              	.LFE84:
 2256              		.size	modem_get_state, .-modem_get_state
 2257              		.section	.text.modem_sleep,"ax",%progbits
 2258              		.align	2
 2259              		.global	modem_sleep
 2260              		.thumb
 2261              		.thumb_func
 2262              		.type	modem_sleep, %function
 2263              	modem_sleep:
 2264              	.LFB85:
 624:modem.c       **** 
 625:modem.c       **** // Set modem to sleep
 626:modem.c       **** void modem_sleep(){
 2265              		.loc 1 626 0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 0
 2268              		@ frame_needed = 1, uses_anonymous_args = 0
 2269 0000 80B5     		push	{r7, lr}
 2270              		.cfi_def_cfa_offset 8
 2271              		.cfi_offset 7, -8
 2272              		.cfi_offset 14, -4
 2273 0002 00AF     		add	r7, sp, #0
 2274              		.cfi_def_cfa_register 7
 627:modem.c       ****     // If the modem_state is not "off" then put it to sleep
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 55


 628:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2275              		.loc 1 628 0
 2276 0004 FFF7FEFF 		bl	modem_get_state
 2277 0008 0346     		mov	r3, r0
 2278 000a 002B     		cmp	r3, #0
 2279 000c 03D0     		beq	.L137
 629:modem.c       **** 
 630:modem.c       ****         Telit_ControlReg_Sleep(); // Prepares the modem for entering the low power mode.
 2280              		.loc 1 630 0
 2281 000e FFF7FEFF 		bl	Telit_ControlReg_Sleep
 631:modem.c       ****         UART_Telit_Sleep(); // Saves the current component state, calls the UART_Telit_Stop() funct
 2282              		.loc 1 631 0
 2283 0012 FFF7FEFF 		bl	UART_Telit_Sleep
 2284              	.L137:
 632:modem.c       ****         
 633:modem.c       ****         // Set interrupt on RX pin to wakeup chip from sleep if UART comm starts
 634:modem.c       ****        // Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_FALLING);
 635:modem.c       ****      }
 636:modem.c       **** }
 2285              		.loc 1 636 0
 2286 0016 00BF     		nop
 2287 0018 80BD     		pop	{r7, pc}
 2288              		.cfi_endproc
 2289              	.LFE85:
 2290              		.size	modem_sleep, .-modem_sleep
 2291 001a 00BF     		.section	.text.modem_wakeup,"ax",%progbits
 2292              		.align	2
 2293              		.global	modem_wakeup
 2294              		.thumb
 2295              		.thumb_func
 2296              		.type	modem_wakeup, %function
 2297              	modem_wakeup:
 2298              	.LFB86:
 637:modem.c       **** 
 638:modem.c       **** // Wakeup the modem
 639:modem.c       **** void modem_wakeup(){
 2299              		.loc 1 639 0
 2300              		.cfi_startproc
 2301              		@ args = 0, pretend = 0, frame = 0
 2302              		@ frame_needed = 1, uses_anonymous_args = 0
 2303 0000 80B5     		push	{r7, lr}
 2304              		.cfi_def_cfa_offset 8
 2305              		.cfi_offset 7, -8
 2306              		.cfi_offset 14, -4
 2307 0002 00AF     		add	r7, sp, #0
 2308              		.cfi_def_cfa_register 7
 640:modem.c       ****     // If modem state is not off then wake it up
 641:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2309              		.loc 1 641 0
 2310 0004 FFF7FEFF 		bl	modem_get_state
 2311 0008 0346     		mov	r3, r0
 2312 000a 002B     		cmp	r3, #0
 2313 000c 0BD0     		beq	.L140
 642:modem.c       ****         Telit_ControlReg_Wakeup(); // Restores the modem after waking up from the low power mode.
 2314              		.loc 1 642 0
 2315 000e FFF7FEFF 		bl	Telit_ControlReg_Wakeup
 643:modem.c       ****         // Calls the UART_Telit_RestoreConfig() function to restore the configuration.
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 56


 644:modem.c       ****         // If the modem was enabled before the UART_Telit_Sleep() function was called, the UART_Tel
 645:modem.c       ****         UART_Telit_Wakeup();
 2316              		.loc 1 645 0
 2317 0012 FFF7FEFF 		bl	UART_Telit_Wakeup
 646:modem.c       ****         // Remove the need for this pin itterupt
 647:modem.c       ****         //Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 648:modem.c       ****         
 649:modem.c       ****         // If woken up from pin, go ahead and delay for 100ms to allow modem UART to deliver the me
 650:modem.c       ****         if(modem_get_state() == MODEM_STATE_WAITING_FOR_IP){
 2318              		.loc 1 650 0
 2319 0016 FFF7FEFF 		bl	modem_get_state
 2320 001a 0346     		mov	r3, r0
 2321 001c 032B     		cmp	r3, #3
 2322 001e 02D1     		bne	.L140
 651:modem.c       ****             CyDelay(100u);
 2323              		.loc 1 651 0
 2324 0020 6420     		movs	r0, #100
 2325 0022 FFF7FEFF 		bl	CyDelay
 2326              	.L140:
 652:modem.c       ****         }
 653:modem.c       ****      }
 654:modem.c       **** }
 2327              		.loc 1 654 0
 2328 0026 00BF     		nop
 2329 0028 80BD     		pop	{r7, pc}
 2330              		.cfi_endproc
 2331              	.LFE86:
 2332              		.size	modem_wakeup, .-modem_wakeup
 2333 002a 00BF     		.section	.rodata
 2334              		.align	2
 2335              	.LC55:
 2336 0500 41542347 		.ascii	"AT#GPIO=5,1,1,0\015\000"
 2336      50494F3D 
 2336      352C312C 
 2336      312C300D 
 2336      00
 2337 0511 000000   		.align	2
 2338              	.LC56:
 2339 0514 41542453 		.ascii	"AT$SUPLSEC=1\015\000"
 2339      55504C53 
 2339      45433D31 
 2339      0D00
 2340 0522 0000     		.align	2
 2341              	.LC57:
 2342 0524 41542453 		.ascii	"AT$SUPLV=2\015\000"
 2342      55504C56 
 2342      3D320D00 
 2343              		.align	2
 2344              	.LC58:
 2345 0530 41542441 		.ascii	"AT$AGPSEN=1\015\000"
 2345      47505345 
 2345      4E3D310D 
 2345      00
 2346 053d 000000   		.align	2
 2347              	.LC59:
 2348 0540 41542453 		.ascii	"AT$SLP=1,\"supl.google.com:7275\"\015\000"
 2348      4C503D31 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 57


 2348      2C227375 
 2348      706C2E67 
 2348      6F6F676C 
 2349 0561 000000   		.align	2
 2350              	.LC60:
 2351 0564 41542353 		.ascii	"AT#SGACT=1,0\015\012\000"
 2351      47414354 
 2351      3D312C30 
 2351      0D0A00
 2352 0573 00       		.align	2
 2353              	.LC61:
 2354 0574 4154244C 		.ascii	"AT$LCSLK=1,1\015\000"
 2354      43534C4B 
 2354      3D312C31 
 2354      0D00
 2355 0582 0000     		.align	2
 2356              	.LC62:
 2357 0584 41542447 		.ascii	"AT$GPSSLSR=1,1,,,,,2\015\000"
 2357      5053534C 
 2357      53523D31 
 2357      2C312C2C 
 2357      2C2C2C32 
 2358 059a 0000     		.align	2
 2359              	.LC63:
 2360 059c 4E00     		.ascii	"N\000"
 2361 059e 0000     		.align	2
 2362              	.LC64:
 2363 05a0 41542447 		.ascii	"AT$GPSACP\015\000"
 2363      50534143 
 2363      500D00
 2364 05ab 00       		.align	2
 2365              	.LC65:
 2366 05ac 24475053 		.ascii	"$GPSACP: \000"
 2366      4143503A 
 2366      2000
 2367 05b6 0000     		.align	2
 2368              	.LC66:
 2369 05b8 24475053 		.ascii	"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s\000"
 2369      4143503A 
 2369      20252A66 
 2369      2C25664E 
 2369      2C256657 
 2370              		.global	__aeabi_fdiv
 2371              		.global	__aeabi_f2d
 2372              		.global	__aeabi_ddiv
 2373              		.global	__aeabi_dadd
 2374              		.global	__aeabi_d2f
 2375              		.align	2
 2376              	.LC67:
 2377 05d8 41542347 		.ascii	"AT#GPIO=5,0,1,0\015\000"
 2377      50494F3D 
 2377      352C302C 
 2377      312C300D 
 2377      00
 2378 05e9 000000   		.align	2
 2379              	.LC68:
 2380 05ec 41542447 		.ascii	"AT$GPSR=0\015\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 58


 2380      5053523D 
 2380      300D00
 2381 05f7 00       		.align	2
 2382              	.LC69:
 2383 05f8 54696D65 		.ascii	"Time to lock GPS: %d\000"
 2383      20746F20 
 2383      6C6F636B 
 2383      20475053 
 2383      3A202564 
 2384              		.section	.text.modem_get_gps_coordinates,"ax",%progbits
 2385              		.align	2
 2386              		.global	modem_get_gps_coordinates
 2387              		.thumb
 2388              		.thumb_func
 2389              		.type	modem_get_gps_coordinates, %function
 2390              	modem_get_gps_coordinates:
 2391              	.LFB87:
 655:modem.c       **** 
 656:modem.c       ****     
 657:modem.c       **** // Returns lat,lom,alt data from Assited GPS (AGPS) system
 658:modem.c       **** gps_t modem_get_gps_coordinates(){
 2392              		.loc 1 658 0
 2393              		.cfi_startproc
 2394              		@ args = 0, pretend = 0, frame = 56
 2395              		@ frame_needed = 1, uses_anonymous_args = 0
 2396 0000 B0B5     		push	{r4, r5, r7, lr}
 2397              		.cfi_def_cfa_offset 16
 2398              		.cfi_offset 4, -16
 2399              		.cfi_offset 5, -12
 2400              		.cfi_offset 7, -8
 2401              		.cfi_offset 14, -4
 2402 0002 90B0     		sub	sp, sp, #64
 2403              		.cfi_def_cfa_offset 80
 2404 0004 02AF     		add	r7, sp, #8
 2405              		.cfi_def_cfa 7, 72
 2406 0006 7860     		str	r0, [r7, #4]
 659:modem.c       ****     gps_t gps;
 660:modem.c       ****     gps.altitude = 0;
 2407              		.loc 1 660 0
 2408 0008 4FF00003 		mov	r3, #0
 2409 000c FB61     		str	r3, [r7, #28]	@ float
 661:modem.c       ****     gps.longitude = 0;
 2410              		.loc 1 661 0
 2411 000e 4FF00003 		mov	r3, #0
 2412 0012 BB61     		str	r3, [r7, #24]	@ float
 662:modem.c       ****     gps.latitude = 0;
 2413              		.loc 1 662 0
 2414 0014 4FF00003 		mov	r3, #0
 2415 0018 7B61     		str	r3, [r7, #20]	@ float
 663:modem.c       ****     gps.time_to_lock =0;
 2416              		.loc 1 663 0
 2417 001a 0023     		movs	r3, #0
 2418 001c 3B84     		strh	r3, [r7, #32]	@ movhi
 664:modem.c       ****     gps.valid = 0;
 2419              		.loc 1 664 0
 2420 001e 0023     		movs	r3, #0
 2421 0020 87F82230 		strb	r3, [r7, #34]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 59


 665:modem.c       ****     
 666:modem.c       ****     //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 667:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2422              		.loc 1 667 0
 2423 0024 7F4B     		ldr	r3, .L151
 2424 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2425 0028 042B     		cmp	r3, #4
 2426 002a 07D0     		beq	.L142
 668:modem.c       ****         return gps;//where valid = 0
 2427              		.loc 1 668 0
 2428 002c 7B68     		ldr	r3, [r7, #4]
 2429 002e 1C46     		mov	r4, r3
 2430 0030 07F11403 		add	r3, r7, #20
 2431 0034 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2432 0036 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2433 003a EFE0     		b	.L141
 2434              	.L142:
 669:modem.c       ****     }
 670:modem.c       ****     
 671:modem.c       ****     long lock_time = getTimeStamp();
 2435              		.loc 1 671 0
 2436 003c FFF7FEFF 		bl	getTimeStamp
 2437 0040 3863     		str	r0, [r7, #48]
 672:modem.c       ****     
 673:modem.c       ****     // Enable this for the LTER module
 674:modem.c       ****     // Enable GPS Low-Dropout Regulator
 675:modem.c       ****     at_write_command("AT#GPIO=5,1,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2438              		.loc 1 675 0
 2439 0042 4FF4FA62 		mov	r2, #2000
 2440 0046 7849     		ldr	r1, .L151+4
 2441 0048 7848     		ldr	r0, .L151+8
 2442 004a FFF7FEFF 		bl	at_write_command
 676:modem.c       ****     
 677:modem.c       ****     // Configure SUPL connection params
 678:modem.c       ****     at_write_command("AT$SUPLSEC=1\r","OK",DEFAULT_AT_TIMEOUT);
 2443              		.loc 1 678 0
 2444 004e 4FF4FA62 		mov	r2, #2000
 2445 0052 7549     		ldr	r1, .L151+4
 2446 0054 7648     		ldr	r0, .L151+12
 2447 0056 FFF7FEFF 		bl	at_write_command
 679:modem.c       ****     
 680:modem.c       ****     // Use SUPL2.0
 681:modem.c       ****     at_write_command("AT$SUPLV=2\r","OK",DEFAULT_AT_TIMEOUT);
 2448              		.loc 1 681 0
 2449 005a 4FF4FA62 		mov	r2, #2000
 2450 005e 7249     		ldr	r1, .L151+4
 2451 0060 7448     		ldr	r0, .L151+16
 2452 0062 FFF7FEFF 		bl	at_write_command
 682:modem.c       ****     
 683:modem.c       ****     // Enable AGPS service
 684:modem.c       ****     at_write_command("AT$AGPSEN=1\r","OK",DEFAULT_AT_TIMEOUT);
 2453              		.loc 1 684 0
 2454 0066 4FF4FA62 		mov	r2, #2000
 2455 006a 6F49     		ldr	r1, .L151+4
 2456 006c 7248     		ldr	r0, .L151+20
 2457 006e FFF7FEFF 		bl	at_write_command
 685:modem.c       ****     
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 60


 686:modem.c       ****     // Chose SUPL server, use google public service
 687:modem.c       ****     at_write_command("AT$SLP=1,\"supl.google.com:7275\"\r","OK",DEFAULT_AT_TIMEOUT);
 2458              		.loc 1 687 0
 2459 0072 4FF4FA62 		mov	r2, #2000
 2460 0076 6C49     		ldr	r1, .L151+4
 2461 0078 7048     		ldr	r0, .L151+24
 2462 007a FFF7FEFF 		bl	at_write_command
 688:modem.c       ****     
 689:modem.c       ****     //pdp context has to be locked to carrier for this to work
 690:modem.c       ****     
 691:modem.c       ****     // Unlock context since it needs to be used by modem
 692:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 2463              		.loc 1 692 0
 2464 007e 4FF4FA62 		mov	r2, #2000
 2465 0082 6949     		ldr	r1, .L151+4
 2466 0084 6E48     		ldr	r0, .L151+28
 2467 0086 FFF7FEFF 		bl	at_write_command
 693:modem.c       ****     
 694:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",DEFAULT_AT_TIMEOUT);//ATT
 2468              		.loc 1 694 0
 2469 008a 4FF4FA62 		mov	r2, #2000
 2470 008e 6649     		ldr	r1, .L151+4
 2471 0090 6C48     		ldr	r0, .L151+32
 2472 0092 FFF7FEFF 		bl	at_write_command
 695:modem.c       ****     //at_write_command("AT$LCSLK=1,3\r","OK",DEFAULT_AT_TIMEOUT);//Verizon
 696:modem.c       ****     
 697:modem.c       ****     // Relock the context
 698:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 2473              		.loc 1 698 0
 2474 0096 42F21072 		movw	r2, #10000
 2475 009a 6349     		ldr	r1, .L151+4
 2476 009c 6A48     		ldr	r0, .L151+36
 2477 009e FFF7FEFF 		bl	at_write_command
 699:modem.c       ****     
 700:modem.c       ****     //start AGPS service
 701:modem.c       ****     at_write_command("AT$GPSSLSR=1,1,,,,,2\r","OK",DEFAULT_AT_TIMEOUT); 
 2478              		.loc 1 701 0
 2479 00a2 4FF4FA62 		mov	r2, #2000
 2480 00a6 6049     		ldr	r1, .L151+4
 2481 00a8 6848     		ldr	r0, .L151+40
 2482 00aa FFF7FEFF 		bl	at_write_command
 702:modem.c       ****     
 703:modem.c       ****     
 704:modem.c       ****     // Start the AGPS service
 705:modem.c       ****     // Will keep receiving a buynch of commas without numbers, until GPS locks
 706:modem.c       ****     // Good lock will return a string with "N" and "W" coordinates
 707:modem.c       ****     
 708:modem.c       ****     
 709:modem.c       ****  
 710:modem.c       ****     uint8 gps_status = 0;
 2483              		.loc 1 710 0
 2484 00ae 0023     		movs	r3, #0
 2485 00b0 87F82F30 		strb	r3, [r7, #47]
 2486              	.LBB14:
 711:modem.c       ****     for(uint16 i=0;i<200;i++){
 2487              		.loc 1 711 0
 2488 00b4 0023     		movs	r3, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 61


 2489 00b6 FB86     		strh	r3, [r7, #54]	@ movhi
 2490 00b8 13E0     		b	.L144
 2491              	.L147:
 712:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2492              		.loc 1 712 0
 2493 00ba 4FF4FA62 		mov	r2, #2000
 2494 00be 6449     		ldr	r1, .L151+44
 2495 00c0 6448     		ldr	r0, .L151+48
 2496 00c2 FFF7FEFF 		bl	at_write_command
 2497 00c6 0346     		mov	r3, r0
 2498 00c8 87F82F30 		strb	r3, [r7, #47]
 713:modem.c       ****         if(gps_status){
 2499              		.loc 1 713 0
 2500 00cc 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2501 00d0 002B     		cmp	r3, #0
 2502 00d2 0AD1     		bne	.L150
 714:modem.c       ****             break;   
 715:modem.c       ****         }
 716:modem.c       ****         CyDelay(1000u);// Wait for a second -- BLOCKING. Could be more elegant to incorporate this 
 2503              		.loc 1 716 0 discriminator 2
 2504 00d4 4FF47A70 		mov	r0, #1000
 2505 00d8 FFF7FEFF 		bl	CyDelay
 711:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2506              		.loc 1 711 0 discriminator 2
 2507 00dc FB8E     		ldrh	r3, [r7, #54]
 2508 00de 0133     		adds	r3, r3, #1
 2509 00e0 FB86     		strh	r3, [r7, #54]	@ movhi
 2510              	.L144:
 711:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2511              		.loc 1 711 0 is_stmt 0 discriminator 1
 2512 00e2 FB8E     		ldrh	r3, [r7, #54]
 2513 00e4 C72B     		cmp	r3, #199
 2514 00e6 E8D9     		bls	.L147
 2515 00e8 00E0     		b	.L146
 2516              	.L150:
 714:modem.c       ****             break;   
 2517              		.loc 1 714 0 is_stmt 1
 2518 00ea 00BF     		nop
 2519              	.L146:
 2520              	.LBE14:
 717:modem.c       ****     }
 718:modem.c       ****     
 719:modem.c       ****     //parse data here
 720:modem.c       ****     
 721:modem.c       ****     //example $GPSACP: 210926.000,4217.8003N,08341.3158W,2.3,258.2,3,17.8,4.8,2.6,220520,05,00
 722:modem.c       ****     float lat;
 723:modem.c       ****     float lon;
 724:modem.c       ****     float alt;
 725:modem.c       ****     
 726:modem.c       ****     // Look for $GPSACP:  in uart_received_string and save to sl
 727:modem.c       ****     // char *strstr(const char *haystack, const char *needle) function finds the first occurrence o
 728:modem.c       ****     char *s1 = strstr(uart_received_string,"$GPSACP: ");
 2521              		.loc 1 728 0
 2522 00ec 5A49     		ldr	r1, .L151+52
 2523 00ee 5B48     		ldr	r0, .L151+56
 2524 00f0 FFF7FEFF 		bl	strstr
 2525 00f4 B862     		str	r0, [r7, #40]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 62


 729:modem.c       ****     // Look in sl for lat, long, alt and save in match 
 730:modem.c       ****     // int sscanf(const char *str, const char *format, ...) reads formatted input from a string.
 731:modem.c       ****     int match = sscanf(s1,"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s",&lat,&lon,&alt);
 2526              		.loc 1 731 0
 2527 00f6 07F10C01 		add	r1, r7, #12
 2528 00fa 07F11002 		add	r2, r7, #16
 2529 00fe 07F10803 		add	r3, r7, #8
 2530 0102 0093     		str	r3, [sp]
 2531 0104 0B46     		mov	r3, r1
 2532 0106 5649     		ldr	r1, .L151+60
 2533 0108 B86A     		ldr	r0, [r7, #40]
 2534 010a FFF7FEFF 		bl	sscanf
 2535 010e 7862     		str	r0, [r7, #36]
 732:modem.c       ****     if(match >= 3){
 2536              		.loc 1 732 0
 2537 0110 7B6A     		ldr	r3, [r7, #36]
 2538 0112 022B     		cmp	r3, #2
 2539 0114 60DD     		ble	.L148
 733:modem.c       ****         // Calculate lat and lon
 734:modem.c       ****         // floorf(x) calculates the largest integer that is less than or equal to x. 
 735:modem.c       ****         // fmod(double x, double y) returns the remainder of x divided by y.
 736:modem.c       ****         lat = floorf(lat/100) + fmod(lat,100)/60;
 2540              		.loc 1 736 0
 2541 0116 3B69     		ldr	r3, [r7, #16]	@ float
 2542 0118 5249     		ldr	r1, .L151+64
 2543 011a 1846     		mov	r0, r3
 2544 011c FFF7FEFF 		bl	__aeabi_fdiv
 2545 0120 0346     		mov	r3, r0
 2546 0122 1846     		mov	r0, r3
 2547 0124 FFF7FEFF 		bl	floorf
 2548 0128 0346     		mov	r3, r0
 2549 012a 1846     		mov	r0, r3
 2550 012c FFF7FEFF 		bl	__aeabi_f2d
 2551 0130 0446     		mov	r4, r0
 2552 0132 0D46     		mov	r5, r1
 2553 0134 3B69     		ldr	r3, [r7, #16]	@ float
 2554 0136 1846     		mov	r0, r3
 2555 0138 FFF7FEFF 		bl	__aeabi_f2d
 2556 013c 4FF00002 		mov	r2, #0
 2557 0140 494B     		ldr	r3, .L151+68
 2558 0142 FFF7FEFF 		bl	fmod
 2559 0146 4FF00002 		mov	r2, #0
 2560 014a 484B     		ldr	r3, .L151+72
 2561 014c FFF7FEFF 		bl	__aeabi_ddiv
 2562 0150 0246     		mov	r2, r0
 2563 0152 0B46     		mov	r3, r1
 2564 0154 2046     		mov	r0, r4
 2565 0156 2946     		mov	r1, r5
 2566 0158 FFF7FEFF 		bl	__aeabi_dadd
 2567 015c 0346     		mov	r3, r0
 2568 015e 0C46     		mov	r4, r1
 2569 0160 1846     		mov	r0, r3
 2570 0162 2146     		mov	r1, r4
 2571 0164 FFF7FEFF 		bl	__aeabi_d2f
 2572 0168 0346     		mov	r3, r0
 2573 016a 3B61     		str	r3, [r7, #16]	@ float
 737:modem.c       ****         lon = -(floorf(lon/100) + fmod(lon,100)/60);
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 63


 2574              		.loc 1 737 0
 2575 016c FB68     		ldr	r3, [r7, #12]	@ float
 2576 016e 3D49     		ldr	r1, .L151+64
 2577 0170 1846     		mov	r0, r3
 2578 0172 FFF7FEFF 		bl	__aeabi_fdiv
 2579 0176 0346     		mov	r3, r0
 2580 0178 1846     		mov	r0, r3
 2581 017a FFF7FEFF 		bl	floorf
 2582 017e 0346     		mov	r3, r0
 2583 0180 1846     		mov	r0, r3
 2584 0182 FFF7FEFF 		bl	__aeabi_f2d
 2585 0186 0446     		mov	r4, r0
 2586 0188 0D46     		mov	r5, r1
 2587 018a FB68     		ldr	r3, [r7, #12]	@ float
 2588 018c 1846     		mov	r0, r3
 2589 018e FFF7FEFF 		bl	__aeabi_f2d
 2590 0192 4FF00002 		mov	r2, #0
 2591 0196 344B     		ldr	r3, .L151+68
 2592 0198 FFF7FEFF 		bl	fmod
 2593 019c 4FF00002 		mov	r2, #0
 2594 01a0 324B     		ldr	r3, .L151+72
 2595 01a2 FFF7FEFF 		bl	__aeabi_ddiv
 2596 01a6 0246     		mov	r2, r0
 2597 01a8 0B46     		mov	r3, r1
 2598 01aa 2046     		mov	r0, r4
 2599 01ac 2946     		mov	r1, r5
 2600 01ae FFF7FEFF 		bl	__aeabi_dadd
 2601 01b2 0346     		mov	r3, r0
 2602 01b4 0C46     		mov	r4, r1
 2603 01b6 1846     		mov	r0, r3
 2604 01b8 2146     		mov	r1, r4
 2605 01ba FFF7FEFF 		bl	__aeabi_d2f
 2606 01be 0346     		mov	r3, r0
 2607 01c0 83F00043 		eor	r3, r3, #-2147483648
 2608 01c4 FB60     		str	r3, [r7, #12]	@ float
 738:modem.c       ****         gps.altitude = alt; // Save alt, lat, and lon to the variable gps.
 2609              		.loc 1 738 0
 2610 01c6 BB68     		ldr	r3, [r7, #8]	@ float
 2611 01c8 FB61     		str	r3, [r7, #28]	@ float
 739:modem.c       ****         gps.latitude = lat;
 2612              		.loc 1 739 0
 2613 01ca 3B69     		ldr	r3, [r7, #16]	@ float
 2614 01cc 7B61     		str	r3, [r7, #20]	@ float
 740:modem.c       ****         gps.longitude = lon;
 2615              		.loc 1 740 0
 2616 01ce FB68     		ldr	r3, [r7, #12]	@ float
 2617 01d0 BB61     		str	r3, [r7, #24]	@ float
 741:modem.c       ****         gps.valid = 1;
 2618              		.loc 1 741 0
 2619 01d2 0123     		movs	r3, #1
 2620 01d4 87F82230 		strb	r3, [r7, #34]
 2621              	.L148:
 742:modem.c       ****     }
 743:modem.c       ****     
 744:modem.c       ****     // Disable LDO, just in case
 745:modem.c       ****     at_write_command("AT#GPIO=5,0,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2622              		.loc 1 745 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 64


 2623 01d8 4FF4FA62 		mov	r2, #2000
 2624 01dc 1249     		ldr	r1, .L151+4
 2625 01de 2448     		ldr	r0, .L151+76
 2626 01e0 FFF7FEFF 		bl	at_write_command
 746:modem.c       ****     
 747:modem.c       ****     // Flush modem's GPS data, just in case
 748:modem.c       ****     at_write_command("AT$GPSR=0\r","OK",DEFAULT_AT_TIMEOUT);
 2627              		.loc 1 748 0
 2628 01e4 4FF4FA62 		mov	r2, #2000
 2629 01e8 0F49     		ldr	r1, .L151+4
 2630 01ea 2248     		ldr	r0, .L151+80
 2631 01ec FFF7FEFF 		bl	at_write_command
 749:modem.c       ****     
 750:modem.c       ****     
 751:modem.c       ****     
 752:modem.c       ****     
 753:modem.c       ****     
 754:modem.c       ****     /* Relevant to 3g modem, can ignore
 755:modem.c       ****     
 756:modem.c       ****     //Setthe GPS Quality of Servicep arameters. Inorder,theyare<horiz_accuracy(inmeters)>,<vertical
 757:modem.c       ****     //AT$GPSQOS=50,50,100,0
 758:modem.c       ****     at_write_command("AT$GPSQOS=50,50,100,0\r","OK",DEFAULT_AT_TIMEOUT);
 759:modem.c       ****     
 760:modem.c       ****     //SettheSUPLLocationPlatform(SLP)addressoftheserverthatwillprovidetheA-GPS data:
 761:modem.c       ****     at_write_command("AT$LCSSLP=1,\"supl.google.com\"\r","OK",DEFAULT_AT_TIMEOUT);
 762:modem.c       ****     
 763:modem.c       ****     //unlock contedt, simnce its being used by modem
 764:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 765:modem.c       ****     //Lock context 1 for LoCation Services (LCS) use only
 766:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",5000u);
 767:modem.c       ****     
 768:modem.c       ****     //unlock contedt, simnce its being used by modem
 769:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 770:modem.c       ****     
 771:modem.c       ****     //EnableunsolicitedNMEAGPSdataintheformatof<NMEASENTENCE><CR>
 772:modem.c       ****     at_write_command("AT$GPSNMUN=2,1,0,0,0,0,0\r","OK",DEFAULT_AT_TIMEOUT);
 773:modem.c       ****     
 774:modem.c       ****     //StartGPSlocationservicerequest.Sendingthiscommandsets$GPSP=1
 775:modem.c       ****    uint8 gps_status = 0;
 776:modem.c       ****     for(uint16 i=0;i<200;i++){
 777:modem.c       ****         gps_status = at_write_command("AT$GPSSLSR=1,1,,,,,0,255\r","N",3000u);
 778:modem.c       ****         if(gps_status){
 779:modem.c       ****             break;   
 780:modem.c       ****         }
 781:modem.c       ****   }
 782:modem.c       ****     
 783:modem.c       ****     //$GPGGA,030307.691,4217.7923,N,08341.3240,W,1,05,2.25,225.0,M,,M,,0000*6E
 784:modem.c       ****     //$GPGGA,213852.000,4600.8755,N,09327.7008,W,1,05,3.00,292.0,M,,M,,0000*6E
 785:modem.c       ****     if(gps_status){
 786:modem.c       ****         float lat,lon,alt = 0;
 787:modem.c       ****         if(sscanf(uart_received_string,"%*s,%f,N,%f,W,%*s",&lat,&lon) > 0){
 788:modem.c       ****             gps.altitude = alt;
 789:modem.c       ****             gps.latitude = lat/60;
 790:modem.c       ****             gps.longitude = lon/60;
 791:modem.c       ****             gps.valid = 1;
 792:modem.c       ****         }
 793:modem.c       ****         
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 65


 794:modem.c       ****     }
 795:modem.c       ****     
 796:modem.c       ****     //turn off gps
 797:modem.c       ****     //AT$GPSP=0
 798:modem.c       ****     at_write_command("AT$GPSP=0\r","OK",DEFAULT_AT_TIMEOUT);
 799:modem.c       ****     
 800:modem.c       ****     */
 801:modem.c       **** 
 802:modem.c       ****     // Calculate time to lock into GPS location and save in variable lock_time
 803:modem.c       ****     lock_time = getTimeStamp() - lock_time;
 2632              		.loc 1 803 0
 2633 01f0 FFF7FEFF 		bl	getTimeStamp
 2634 01f4 0246     		mov	r2, r0
 2635 01f6 3B6B     		ldr	r3, [r7, #48]
 2636 01f8 D31A     		subs	r3, r2, r3
 2637 01fa 3B63     		str	r3, [r7, #48]
 804:modem.c       ****     gps.time_to_lock = lock_time;
 2638              		.loc 1 804 0
 2639 01fc 3B6B     		ldr	r3, [r7, #48]
 2640 01fe 9BB2     		uxth	r3, r3
 2641 0200 3B84     		strh	r3, [r7, #32]	@ movhi
 805:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Time to lock GPS: %d", gps.time_to_lock);
 2642              		.loc 1 805 0
 2643 0202 3B8C     		ldrh	r3, [r7, #32]
 2644 0204 1A46     		mov	r2, r3
 2645 0206 1C49     		ldr	r1, .L151+84
 2646 0208 0020     		movs	r0, #0
 2647 020a FFF7FEFF 		bl	printNotif
 806:modem.c       ****     
 807:modem.c       ****     return gps;
 2648              		.loc 1 807 0
 2649 020e 7B68     		ldr	r3, [r7, #4]
 2650 0210 1C46     		mov	r4, r3
 2651 0212 07F11403 		add	r3, r7, #20
 2652 0216 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2653 0218 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2654              	.L141:
 808:modem.c       ****     
 809:modem.c       **** }
 2655              		.loc 1 809 0
 2656 021c 7868     		ldr	r0, [r7, #4]
 2657 021e 3837     		adds	r7, r7, #56
 2658              		.cfi_def_cfa_offset 16
 2659 0220 BD46     		mov	sp, r7
 2660              		.cfi_def_cfa_register 13
 2661              		@ sp needed
 2662 0222 B0BD     		pop	{r4, r5, r7, pc}
 2663              	.L152:
 2664              		.align	2
 2665              	.L151:
 2666 0224 00000000 		.word	modem_state
 2667 0228 00000000 		.word	.LC0
 2668 022c 00050000 		.word	.LC55
 2669 0230 14050000 		.word	.LC56
 2670 0234 24050000 		.word	.LC57
 2671 0238 30050000 		.word	.LC58
 2672 023c 40050000 		.word	.LC59
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 66


 2673 0240 64050000 		.word	.LC60
 2674 0244 74050000 		.word	.LC61
 2675 0248 D8020000 		.word	.LC27
 2676 024c 84050000 		.word	.LC62
 2677 0250 9C050000 		.word	.LC63
 2678 0254 A0050000 		.word	.LC64
 2679 0258 AC050000 		.word	.LC65
 2680 025c 00000000 		.word	uart_received_string
 2681 0260 B8050000 		.word	.LC66
 2682 0264 0000C842 		.word	1120403456
 2683 0268 00005940 		.word	1079574528
 2684 026c 00004E40 		.word	1078853632
 2685 0270 D8050000 		.word	.LC67
 2686 0274 EC050000 		.word	.LC68
 2687 0278 F8050000 		.word	.LC69
 2688              		.cfi_endproc
 2689              	.LFE87:
 2690              		.size	modem_get_gps_coordinates, .-modem_get_gps_coordinates
 2691              		.text
 2692              	.Letext0:
 2693              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 2694              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 2695              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2696              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 2697              		.file 6 "testing.h"
 2698              		.file 7 "modem.h"
 2699              		.file 8 "data.h"
 2700              		.file 9 "notoriOS.h"
 2701              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 2702              		.section	.debug_info,"",%progbits
 2703              	.Ldebug_info0:
 2704 0000 070B0000 		.4byte	0xb07
 2705 0004 0400     		.2byte	0x4
 2706 0006 00000000 		.4byte	.Ldebug_abbrev0
 2707 000a 04       		.byte	0x4
 2708 000b 01       		.uleb128 0x1
 2709 000c 3C000000 		.4byte	.LASF147
 2710 0010 0C       		.byte	0xc
 2711 0011 56030000 		.4byte	.LASF148
 2712 0015 D5040000 		.4byte	.LASF149
 2713 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 2714 001d 00000000 		.4byte	0
 2715 0021 00000000 		.4byte	.Ldebug_line0
 2716 0025 02       		.uleb128 0x2
 2717 0026 01       		.byte	0x1
 2718 0027 06       		.byte	0x6
 2719 0028 38010000 		.4byte	.LASF0
 2720 002c 03       		.uleb128 0x3
 2721 002d 28000000 		.4byte	.LASF4
 2722 0031 02       		.byte	0x2
 2723 0032 1D       		.byte	0x1d
 2724 0033 37000000 		.4byte	0x37
 2725 0037 02       		.uleb128 0x2
 2726 0038 01       		.byte	0x1
 2727 0039 08       		.byte	0x8
 2728 003a 31050000 		.4byte	.LASF1
 2729 003e 02       		.uleb128 0x2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 67


 2730 003f 02       		.byte	0x2
 2731 0040 05       		.byte	0x5
 2732 0041 8E030000 		.4byte	.LASF2
 2733 0045 02       		.uleb128 0x2
 2734 0046 02       		.byte	0x2
 2735 0047 07       		.byte	0x7
 2736 0048 F5010000 		.4byte	.LASF3
 2737 004c 03       		.uleb128 0x3
 2738 004d A3030000 		.4byte	.LASF5
 2739 0051 02       		.byte	0x2
 2740 0052 3F       		.byte	0x3f
 2741 0053 57000000 		.4byte	0x57
 2742 0057 02       		.uleb128 0x2
 2743 0058 04       		.byte	0x4
 2744 0059 05       		.byte	0x5
 2745 005a 92010000 		.4byte	.LASF6
 2746 005e 03       		.uleb128 0x3
 2747 005f 18020000 		.4byte	.LASF7
 2748 0063 02       		.byte	0x2
 2749 0064 41       		.byte	0x41
 2750 0065 69000000 		.4byte	0x69
 2751 0069 02       		.uleb128 0x2
 2752 006a 04       		.byte	0x4
 2753 006b 07       		.byte	0x7
 2754 006c BB020000 		.4byte	.LASF8
 2755 0070 02       		.uleb128 0x2
 2756 0071 08       		.byte	0x8
 2757 0072 05       		.byte	0x5
 2758 0073 2A010000 		.4byte	.LASF9
 2759 0077 02       		.uleb128 0x2
 2760 0078 08       		.byte	0x8
 2761 0079 07       		.byte	0x7
 2762 007a D7000000 		.4byte	.LASF10
 2763 007e 04       		.uleb128 0x4
 2764 007f 04       		.byte	0x4
 2765 0080 05       		.byte	0x5
 2766 0081 696E7400 		.ascii	"int\000"
 2767 0085 02       		.uleb128 0x2
 2768 0086 04       		.byte	0x4
 2769 0087 07       		.byte	0x7
 2770 0088 10060000 		.4byte	.LASF11
 2771 008c 03       		.uleb128 0x3
 2772 008d 39070000 		.4byte	.LASF12
 2773 0091 03       		.byte	0x3
 2774 0092 18       		.byte	0x18
 2775 0093 2C000000 		.4byte	0x2c
 2776 0097 03       		.uleb128 0x3
 2777 0098 29050000 		.4byte	.LASF13
 2778 009c 03       		.byte	0x3
 2779 009d 2C       		.byte	0x2c
 2780 009e 4C000000 		.4byte	0x4c
 2781 00a2 03       		.uleb128 0x3
 2782 00a3 D7060000 		.4byte	.LASF14
 2783 00a7 03       		.byte	0x3
 2784 00a8 30       		.byte	0x30
 2785 00a9 5E000000 		.4byte	0x5e
 2786 00ad 05       		.uleb128 0x5
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 68


 2787 00ae B4010000 		.4byte	.LASF15
 2788 00b2 04       		.byte	0x4
 2789 00b3 9201     		.2byte	0x192
 2790 00b5 37000000 		.4byte	0x37
 2791 00b9 05       		.uleb128 0x5
 2792 00ba 0B000000 		.4byte	.LASF16
 2793 00be 04       		.byte	0x4
 2794 00bf 9301     		.2byte	0x193
 2795 00c1 45000000 		.4byte	0x45
 2796 00c5 05       		.uleb128 0x5
 2797 00c6 08020000 		.4byte	.LASF17
 2798 00ca 04       		.byte	0x4
 2799 00cb 9401     		.2byte	0x194
 2800 00cd 69000000 		.4byte	0x69
 2801 00d1 05       		.uleb128 0x5
 2802 00d2 4D070000 		.4byte	.LASF18
 2803 00d6 04       		.byte	0x4
 2804 00d7 9601     		.2byte	0x196
 2805 00d9 3E000000 		.4byte	0x3e
 2806 00dd 05       		.uleb128 0x5
 2807 00de C9010000 		.4byte	.LASF19
 2808 00e2 04       		.byte	0x4
 2809 00e3 9701     		.2byte	0x197
 2810 00e5 57000000 		.4byte	0x57
 2811 00e9 02       		.uleb128 0x2
 2812 00ea 04       		.byte	0x4
 2813 00eb 04       		.byte	0x4
 2814 00ec B8040000 		.4byte	.LASF20
 2815 00f0 02       		.uleb128 0x2
 2816 00f1 08       		.byte	0x8
 2817 00f2 04       		.byte	0x4
 2818 00f3 C2010000 		.4byte	.LASF21
 2819 00f7 02       		.uleb128 0x2
 2820 00f8 01       		.byte	0x1
 2821 00f9 08       		.byte	0x8
 2822 00fa F7050000 		.4byte	.LASF22
 2823 00fe 02       		.uleb128 0x2
 2824 00ff 08       		.byte	0x8
 2825 0100 04       		.byte	0x4
 2826 0101 EB050000 		.4byte	.LASF23
 2827 0105 02       		.uleb128 0x2
 2828 0106 04       		.byte	0x4
 2829 0107 07       		.byte	0x7
 2830 0108 25040000 		.4byte	.LASF24
 2831 010c 06       		.uleb128 0x6
 2832 010d 04       		.byte	0x4
 2833 010e F7000000 		.4byte	0xf7
 2834 0112 06       		.uleb128 0x6
 2835 0113 04       		.byte	0x4
 2836 0114 18010000 		.4byte	0x118
 2837 0118 07       		.uleb128 0x7
 2838 0119 F7000000 		.4byte	0xf7
 2839 011d 08       		.uleb128 0x8
 2840 011e F7000000 		.4byte	0xf7
 2841 0122 2D010000 		.4byte	0x12d
 2842 0126 09       		.uleb128 0x9
 2843 0127 05010000 		.4byte	0x105
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 69


 2844 012b 17       		.byte	0x17
 2845 012c 00       		.byte	0
 2846 012d 0A       		.uleb128 0xa
 2847 012e 746D00   		.ascii	"tm\000"
 2848 0131 24       		.byte	0x24
 2849 0132 05       		.byte	0x5
 2850 0133 21       		.byte	0x21
 2851 0134 A5010000 		.4byte	0x1a5
 2852 0138 0B       		.uleb128 0xb
 2853 0139 E0060000 		.4byte	.LASF25
 2854 013d 05       		.byte	0x5
 2855 013e 23       		.byte	0x23
 2856 013f 7E000000 		.4byte	0x7e
 2857 0143 00       		.byte	0
 2858 0144 0B       		.uleb128 0xb
 2859 0145 1E040000 		.4byte	.LASF26
 2860 0149 05       		.byte	0x5
 2861 014a 24       		.byte	0x24
 2862 014b 7E000000 		.4byte	0x7e
 2863 014f 04       		.byte	0x4
 2864 0150 0B       		.uleb128 0xb
 2865 0151 18000000 		.4byte	.LASF27
 2866 0155 05       		.byte	0x5
 2867 0156 25       		.byte	0x25
 2868 0157 7E000000 		.4byte	0x7e
 2869 015b 08       		.byte	0x8
 2870 015c 0B       		.uleb128 0xb
 2871 015d C2060000 		.4byte	.LASF28
 2872 0161 05       		.byte	0x5
 2873 0162 26       		.byte	0x26
 2874 0163 7E000000 		.4byte	0x7e
 2875 0167 0C       		.byte	0xc
 2876 0168 0B       		.uleb128 0xb
 2877 0169 3A020000 		.4byte	.LASF29
 2878 016d 05       		.byte	0x5
 2879 016e 27       		.byte	0x27
 2880 016f 7E000000 		.4byte	0x7e
 2881 0173 10       		.byte	0x10
 2882 0174 0B       		.uleb128 0xb
 2883 0175 81020000 		.4byte	.LASF30
 2884 0179 05       		.byte	0x5
 2885 017a 28       		.byte	0x28
 2886 017b 7E000000 		.4byte	0x7e
 2887 017f 14       		.byte	0x14
 2888 0180 0B       		.uleb128 0xb
 2889 0181 CC050000 		.4byte	.LASF31
 2890 0185 05       		.byte	0x5
 2891 0186 29       		.byte	0x29
 2892 0187 7E000000 		.4byte	0x7e
 2893 018b 18       		.byte	0x18
 2894 018c 0B       		.uleb128 0xb
 2895 018d 20000000 		.4byte	.LASF32
 2896 0191 05       		.byte	0x5
 2897 0192 2A       		.byte	0x2a
 2898 0193 7E000000 		.4byte	0x7e
 2899 0197 1C       		.byte	0x1c
 2900 0198 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 70


 2901 0199 1D030000 		.4byte	.LASF33
 2902 019d 05       		.byte	0x5
 2903 019e 2B       		.byte	0x2b
 2904 019f 7E000000 		.4byte	0x7e
 2905 01a3 20       		.byte	0x20
 2906 01a4 00       		.byte	0
 2907 01a5 0C       		.uleb128 0xc
 2908 01a6 8101     		.2byte	0x181
 2909 01a8 06       		.byte	0x6
 2910 01a9 0A       		.byte	0xa
 2911 01aa D3010000 		.4byte	0x1d3
 2912 01ae 0B       		.uleb128 0xb
 2913 01af 69040000 		.4byte	.LASF34
 2914 01b3 06       		.byte	0x6
 2915 01b4 0C       		.byte	0xc
 2916 01b5 D3010000 		.4byte	0x1d3
 2917 01b9 00       		.byte	0
 2918 01ba 0B       		.uleb128 0xb
 2919 01bb 0A070000 		.4byte	.LASF35
 2920 01bf 06       		.byte	0x6
 2921 01c0 0D       		.byte	0xd
 2922 01c1 AD000000 		.4byte	0xad
 2923 01c5 80       		.byte	0x80
 2924 01c6 0B       		.uleb128 0xb
 2925 01c7 A0050000 		.4byte	.LASF36
 2926 01cb 06       		.byte	0x6
 2927 01cc 0F       		.byte	0xf
 2928 01cd E3010000 		.4byte	0x1e3
 2929 01d1 81       		.byte	0x81
 2930 01d2 00       		.byte	0
 2931 01d3 08       		.uleb128 0x8
 2932 01d4 F7000000 		.4byte	0xf7
 2933 01d8 E3010000 		.4byte	0x1e3
 2934 01dc 09       		.uleb128 0x9
 2935 01dd 05010000 		.4byte	0x105
 2936 01e1 7F       		.byte	0x7f
 2937 01e2 00       		.byte	0
 2938 01e3 08       		.uleb128 0x8
 2939 01e4 F7000000 		.4byte	0xf7
 2940 01e8 F3010000 		.4byte	0x1f3
 2941 01ec 09       		.uleb128 0x9
 2942 01ed 05010000 		.4byte	0x105
 2943 01f1 FF       		.byte	0xff
 2944 01f2 00       		.byte	0
 2945 01f3 03       		.uleb128 0x3
 2946 01f4 88050000 		.4byte	.LASF37
 2947 01f8 06       		.byte	0x6
 2948 01f9 10       		.byte	0x10
 2949 01fa A5010000 		.4byte	0x1a5
 2950 01fe 0D       		.uleb128 0xd
 2951 01ff 3C       		.byte	0x3c
 2952 0200 07       		.byte	0x7
 2953 0201 2E       		.byte	0x2e
 2954 0202 2B020000 		.4byte	0x22b
 2955 0206 0B       		.uleb128 0xb
 2956 0207 BB060000 		.4byte	.LASF38
 2957 020b 07       		.byte	0x7
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 71


 2958 020c 2F       		.byte	0x2f
 2959 020d 2B020000 		.4byte	0x22b
 2960 0211 00       		.byte	0
 2961 0212 0B       		.uleb128 0xb
 2962 0213 22060000 		.4byte	.LASF39
 2963 0217 07       		.byte	0x7
 2964 0218 30       		.byte	0x30
 2965 0219 2B020000 		.4byte	0x22b
 2966 021d 14       		.byte	0x14
 2967 021e 0B       		.uleb128 0xb
 2968 021f 9B050000 		.4byte	.LASF40
 2969 0223 07       		.byte	0x7
 2970 0224 31       		.byte	0x31
 2971 0225 2B020000 		.4byte	0x22b
 2972 0229 28       		.byte	0x28
 2973 022a 00       		.byte	0
 2974 022b 08       		.uleb128 0x8
 2975 022c F7000000 		.4byte	0xf7
 2976 0230 3B020000 		.4byte	0x23b
 2977 0234 09       		.uleb128 0x9
 2978 0235 05010000 		.4byte	0x105
 2979 0239 13       		.byte	0x13
 2980 023a 00       		.byte	0
 2981 023b 03       		.uleb128 0x3
 2982 023c 36060000 		.4byte	.LASF41
 2983 0240 07       		.byte	0x7
 2984 0241 32       		.byte	0x32
 2985 0242 FE010000 		.4byte	0x1fe
 2986 0246 0D       		.uleb128 0xd
 2987 0247 10       		.byte	0x10
 2988 0248 07       		.byte	0x7
 2989 0249 34       		.byte	0x34
 2990 024a AF020000 		.4byte	0x2af
 2991 024e 0B       		.uleb128 0xb
 2992 024f 81070000 		.4byte	.LASF42
 2993 0253 07       		.byte	0x7
 2994 0254 35       		.byte	0x35
 2995 0255 AD000000 		.4byte	0xad
 2996 0259 00       		.byte	0
 2997 025a 0E       		.uleb128 0xe
 2998 025b 62657200 		.ascii	"ber\000"
 2999 025f 07       		.byte	0x7
 3000 0260 36       		.byte	0x36
 3001 0261 AD000000 		.4byte	0xad
 3002 0265 01       		.byte	0x1
 3003 0266 0B       		.uleb128 0xb
 3004 0267 69050000 		.4byte	.LASF43
 3005 026b 07       		.byte	0x7
 3006 026c 37       		.byte	0x37
 3007 026d AD000000 		.4byte	0xad
 3008 0271 02       		.byte	0x2
 3009 0272 0B       		.uleb128 0xb
 3010 0273 44010000 		.4byte	.LASF44
 3011 0277 07       		.byte	0x7
 3012 0278 38       		.byte	0x38
 3013 0279 AD000000 		.4byte	0xad
 3014 027d 03       		.byte	0x3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 72


 3015 027e 0B       		.uleb128 0xb
 3016 027f 55050000 		.4byte	.LASF45
 3017 0283 07       		.byte	0x7
 3018 0284 39       		.byte	0x39
 3019 0285 AD000000 		.4byte	0xad
 3020 0289 04       		.byte	0x4
 3021 028a 0B       		.uleb128 0xb
 3022 028b A7050000 		.4byte	.LASF46
 3023 028f 07       		.byte	0x7
 3024 0290 3A       		.byte	0x3a
 3025 0291 AD000000 		.4byte	0xad
 3026 0295 05       		.byte	0x5
 3027 0296 0B       		.uleb128 0xb
 3028 0297 49010000 		.4byte	.LASF47
 3029 029b 07       		.byte	0x7
 3030 029c 3B       		.byte	0x3b
 3031 029d 7E000000 		.4byte	0x7e
 3032 02a1 08       		.byte	0x8
 3033 02a2 0B       		.uleb128 0xb
 3034 02a3 71030000 		.4byte	.LASF48
 3035 02a7 07       		.byte	0x7
 3036 02a8 3C       		.byte	0x3c
 3037 02a9 7E000000 		.4byte	0x7e
 3038 02ad 0C       		.byte	0xc
 3039 02ae 00       		.byte	0
 3040 02af 03       		.uleb128 0x3
 3041 02b0 AC050000 		.4byte	.LASF49
 3042 02b4 07       		.byte	0x7
 3043 02b5 3D       		.byte	0x3d
 3044 02b6 46020000 		.4byte	0x246
 3045 02ba 0D       		.uleb128 0xd
 3046 02bb 10       		.byte	0x10
 3047 02bc 07       		.byte	0x7
 3048 02bd 3F       		.byte	0x3f
 3049 02be FF020000 		.4byte	0x2ff
 3050 02c2 0B       		.uleb128 0xb
 3051 02c3 60040000 		.4byte	.LASF50
 3052 02c7 07       		.byte	0x7
 3053 02c8 40       		.byte	0x40
 3054 02c9 E9000000 		.4byte	0xe9
 3055 02cd 00       		.byte	0
 3056 02ce 0B       		.uleb128 0xb
 3057 02cf 32000000 		.4byte	.LASF51
 3058 02d3 07       		.byte	0x7
 3059 02d4 41       		.byte	0x41
 3060 02d5 E9000000 		.4byte	0xe9
 3061 02d9 04       		.byte	0x4
 3062 02da 0B       		.uleb128 0xb
 3063 02db AB010000 		.4byte	.LASF52
 3064 02df 07       		.byte	0x7
 3065 02e0 42       		.byte	0x42
 3066 02e1 E9000000 		.4byte	0xe9
 3067 02e5 08       		.byte	0x8
 3068 02e6 0B       		.uleb128 0xb
 3069 02e7 03030000 		.4byte	.LASF53
 3070 02eb 07       		.byte	0x7
 3071 02ec 43       		.byte	0x43
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 73


 3072 02ed B9000000 		.4byte	0xb9
 3073 02f1 0C       		.byte	0xc
 3074 02f2 0B       		.uleb128 0xb
 3075 02f3 CA060000 		.4byte	.LASF54
 3076 02f7 07       		.byte	0x7
 3077 02f8 44       		.byte	0x44
 3078 02f9 AD000000 		.4byte	0xad
 3079 02fd 0E       		.byte	0xe
 3080 02fe 00       		.byte	0
 3081 02ff 03       		.uleb128 0x3
 3082 0300 43060000 		.4byte	.LASF55
 3083 0304 07       		.byte	0x7
 3084 0305 46       		.byte	0x46
 3085 0306 BA020000 		.4byte	0x2ba
 3086 030a 0D       		.uleb128 0xd
 3087 030b 03       		.byte	0x3
 3088 030c 07       		.byte	0x7
 3089 030d 49       		.byte	0x49
 3090 030e 37030000 		.4byte	0x337
 3091 0312 0B       		.uleb128 0xb
 3092 0313 5B060000 		.4byte	.LASF56
 3093 0317 07       		.byte	0x7
 3094 0318 4C       		.byte	0x4c
 3095 0319 AD000000 		.4byte	0xad
 3096 031d 00       		.byte	0
 3097 031e 0B       		.uleb128 0xb
 3098 031f 5A050000 		.4byte	.LASF57
 3099 0323 07       		.byte	0x7
 3100 0324 4E       		.byte	0x4e
 3101 0325 AD000000 		.4byte	0xad
 3102 0329 01       		.byte	0x1
 3103 032a 0B       		.uleb128 0xb
 3104 032b 49020000 		.4byte	.LASF58
 3105 032f 07       		.byte	0x7
 3106 0330 51       		.byte	0x51
 3107 0331 AD000000 		.4byte	0xad
 3108 0335 02       		.byte	0x2
 3109 0336 00       		.byte	0
 3110 0337 03       		.uleb128 0x3
 3111 0338 E9030000 		.4byte	.LASF59
 3112 033c 07       		.byte	0x7
 3113 033d 52       		.byte	0x52
 3114 033e 0A030000 		.4byte	0x30a
 3115 0342 0D       		.uleb128 0xd
 3116 0343 2C       		.byte	0x2c
 3117 0344 08       		.byte	0x8
 3118 0345 10       		.byte	0x10
 3119 0346 6F030000 		.4byte	0x36f
 3120 034a 0E       		.uleb128 0xe
 3121 034b 6B657900 		.ascii	"key\000"
 3122 034f 08       		.byte	0x8
 3123 0350 11       		.byte	0x11
 3124 0351 2B020000 		.4byte	0x22b
 3125 0355 00       		.byte	0
 3126 0356 0B       		.uleb128 0xb
 3127 0357 12000000 		.4byte	.LASF60
 3128 035b 08       		.byte	0x8
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 74


 3129 035c 12       		.byte	0x12
 3130 035d 2B020000 		.4byte	0x22b
 3131 0361 14       		.byte	0x14
 3132 0362 0B       		.uleb128 0xb
 3133 0363 AE070000 		.4byte	.LASF61
 3134 0367 08       		.byte	0x8
 3135 0368 13       		.byte	0x13
 3136 0369 DD000000 		.4byte	0xdd
 3137 036d 28       		.byte	0x28
 3138 036e 00       		.byte	0
 3139 036f 03       		.uleb128 0x3
 3140 0370 A5020000 		.4byte	.LASF62
 3141 0374 08       		.byte	0x8
 3142 0375 14       		.byte	0x14
 3143 0376 42030000 		.4byte	0x342
 3144 037a 0D       		.uleb128 0xd
 3145 037b 1C       		.byte	0x1c
 3146 037c 09       		.byte	0x9
 3147 037d 36       		.byte	0x36
 3148 037e 9B030000 		.4byte	0x39b
 3149 0382 0B       		.uleb128 0xb
 3150 0383 26030000 		.4byte	.LASF63
 3151 0387 09       		.byte	0x9
 3152 0388 38       		.byte	0x38
 3153 0389 9B030000 		.4byte	0x39b
 3154 038d 00       		.byte	0
 3155 038e 0B       		.uleb128 0xb
 3156 038f 39030000 		.4byte	.LASF64
 3157 0393 09       		.byte	0x9
 3158 0394 39       		.byte	0x39
 3159 0395 1D010000 		.4byte	0x11d
 3160 0399 04       		.byte	0x4
 3161 039a 00       		.byte	0
 3162 039b 06       		.uleb128 0x6
 3163 039c 04       		.byte	0x4
 3164 039d 3B020000 		.4byte	0x23b
 3165 03a1 03       		.uleb128 0x3
 3166 03a2 DE030000 		.4byte	.LASF65
 3167 03a6 09       		.byte	0x9
 3168 03a7 3B       		.byte	0x3b
 3169 03a8 7A030000 		.4byte	0x37a
 3170 03ac 0C       		.uleb128 0xc
 3171 03ad 4401     		.2byte	0x144
 3172 03af 09       		.byte	0x9
 3173 03b0 41       		.byte	0x41
 3174 03b1 FF030000 		.4byte	0x3ff
 3175 03b5 0B       		.uleb128 0xb
 3176 03b6 BA010000 		.4byte	.LASF66
 3177 03ba 09       		.byte	0x9
 3178 03bb 44       		.byte	0x44
 3179 03bc 2B020000 		.4byte	0x22b
 3180 03c0 00       		.byte	0
 3181 03c1 0B       		.uleb128 0xb
 3182 03c2 31030000 		.4byte	.LASF67
 3183 03c6 09       		.byte	0x9
 3184 03c7 46       		.byte	0x46
 3185 03c8 FF030000 		.4byte	0x3ff
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 75


 3186 03cc 14       		.byte	0x14
 3187 03cd 0B       		.uleb128 0xb
 3188 03ce 15030000 		.4byte	.LASF68
 3189 03d2 09       		.byte	0x9
 3190 03d3 47       		.byte	0x47
 3191 03d4 7E000000 		.4byte	0x7e
 3192 03d8 78       		.byte	0x78
 3193 03d9 0B       		.uleb128 0xb
 3194 03da FB020000 		.4byte	.LASF69
 3195 03de 09       		.byte	0x9
 3196 03df 48       		.byte	0x48
 3197 03e0 0F040000 		.4byte	0x40f
 3198 03e4 7C       		.byte	0x7c
 3199 03e5 0B       		.uleb128 0xb
 3200 03e6 41020000 		.4byte	.LASF70
 3201 03ea 09       		.byte	0x9
 3202 03eb 49       		.byte	0x49
 3203 03ec FF030000 		.4byte	0x3ff
 3204 03f0 AE       		.byte	0xae
 3205 03f1 0F       		.uleb128 0xf
 3206 03f2 41070000 		.4byte	.LASF71
 3207 03f6 09       		.byte	0x9
 3208 03f7 4A       		.byte	0x4a
 3209 03f8 0F040000 		.4byte	0x40f
 3210 03fc 1201     		.2byte	0x112
 3211 03fe 00       		.byte	0
 3212 03ff 08       		.uleb128 0x8
 3213 0400 F7000000 		.4byte	0xf7
 3214 0404 0F040000 		.4byte	0x40f
 3215 0408 09       		.uleb128 0x9
 3216 0409 05010000 		.4byte	0x105
 3217 040d 63       		.byte	0x63
 3218 040e 00       		.byte	0
 3219 040f 08       		.uleb128 0x8
 3220 0410 F7000000 		.4byte	0xf7
 3221 0414 1F040000 		.4byte	0x41f
 3222 0418 09       		.uleb128 0x9
 3223 0419 05010000 		.4byte	0x105
 3224 041d 31       		.byte	0x31
 3225 041e 00       		.byte	0
 3226 041f 03       		.uleb128 0x3
 3227 0420 2A070000 		.4byte	.LASF72
 3228 0424 09       		.byte	0x9
 3229 0425 4D       		.byte	0x4d
 3230 0426 AC030000 		.4byte	0x3ac
 3231 042a 10       		.uleb128 0x10
 3232 042b 1C050000 		.4byte	.LASF104
 3233 042f 01       		.byte	0x1
 3234 0430 16       		.byte	0x16
 3235 0431 00000000 		.4byte	.LFB64
 3236 0435 44000000 		.4byte	.LFE64-.LFB64
 3237 0439 01       		.uleb128 0x1
 3238 043a 9C       		.byte	0x9c
 3239 043b 11       		.uleb128 0x11
 3240 043c BE040000 		.4byte	.LASF73
 3241 0440 01       		.byte	0x1
 3242 0441 20       		.byte	0x20
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 76


 3243 0442 00000000 		.4byte	.LFB65
 3244 0446 6C000000 		.4byte	.LFE65-.LFB65
 3245 044a 01       		.uleb128 0x1
 3246 044b 9C       		.byte	0x9c
 3247 044c 11       		.uleb128 0x11
 3248 044d A3060000 		.4byte	.LASF74
 3249 0451 01       		.byte	0x1
 3250 0452 3A       		.byte	0x3a
 3251 0453 00000000 		.4byte	.LFB66
 3252 0457 32000000 		.4byte	.LFE66-.LFB66
 3253 045b 01       		.uleb128 0x1
 3254 045c 9C       		.byte	0x9c
 3255 045d 11       		.uleb128 0x11
 3256 045e 8F020000 		.4byte	.LASF75
 3257 0462 01       		.byte	0x1
 3258 0463 4A       		.byte	0x4a
 3259 0464 00000000 		.4byte	.LFB67
 3260 0468 20000000 		.4byte	.LFE67-.LFB67
 3261 046c 01       		.uleb128 0x1
 3262 046d 9C       		.byte	0x9c
 3263 046e 11       		.uleb128 0x11
 3264 046f 9D070000 		.4byte	.LASF76
 3265 0473 01       		.byte	0x1
 3266 0474 53       		.byte	0x53
 3267 0475 00000000 		.4byte	.LFB68
 3268 0479 40000000 		.4byte	.LFE68-.LFB68
 3269 047d 01       		.uleb128 0x1
 3270 047e 9C       		.byte	0x9c
 3271 047f 12       		.uleb128 0x12
 3272 0480 47030000 		.4byte	.LASF90
 3273 0484 01       		.byte	0x1
 3274 0485 65       		.byte	0x65
 3275 0486 AD000000 		.4byte	0xad
 3276 048a 00000000 		.4byte	.LFB69
 3277 048e DC000000 		.4byte	.LFE69-.LFB69
 3278 0492 01       		.uleb128 0x1
 3279 0493 9C       		.byte	0x9c
 3280 0494 F3040000 		.4byte	0x4f3
 3281 0498 13       		.uleb128 0x13
 3282 0499 53070000 		.4byte	.LASF77
 3283 049d 01       		.byte	0x1
 3284 049e 6E       		.byte	0x6e
 3285 049f AD000000 		.4byte	0xad
 3286 04a3 02       		.uleb128 0x2
 3287 04a4 91       		.byte	0x91
 3288 04a5 77       		.sleb128 -9
 3289 04a6 13       		.uleb128 0x13
 3290 04a7 5C070000 		.4byte	.LASF78
 3291 04ab 01       		.byte	0x1
 3292 04ac 6F       		.byte	0x6f
 3293 04ad AD000000 		.4byte	0xad
 3294 04b1 02       		.uleb128 0x2
 3295 04b2 91       		.byte	0x91
 3296 04b3 74       		.sleb128 -12
 3297 04b4 13       		.uleb128 0x13
 3298 04b5 65070000 		.4byte	.LASF79
 3299 04b9 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 77


 3300 04ba 71       		.byte	0x71
 3301 04bb 57000000 		.4byte	0x57
 3302 04bf 02       		.uleb128 0x2
 3303 04c0 91       		.byte	0x91
 3304 04c1 70       		.sleb128 -16
 3305 04c2 14       		.uleb128 0x14
 3306 04c3 26000000 		.4byte	.LBB2
 3307 04c7 4A000000 		.4byte	.LBE2-.LBB2
 3308 04cb 13       		.uleb128 0x13
 3309 04cc 5C070000 		.4byte	.LASF78
 3310 04d0 01       		.byte	0x1
 3311 04d1 74       		.byte	0x74
 3312 04d2 AD000000 		.4byte	0xad
 3313 04d6 02       		.uleb128 0x2
 3314 04d7 91       		.byte	0x91
 3315 04d8 76       		.sleb128 -10
 3316 04d9 14       		.uleb128 0x14
 3317 04da 2C000000 		.4byte	.LBB3
 3318 04de 2A000000 		.4byte	.LBE3-.LBB3
 3319 04e2 13       		.uleb128 0x13
 3320 04e3 B1020000 		.4byte	.LASF80
 3321 04e7 01       		.byte	0x1
 3322 04e8 76       		.byte	0x76
 3323 04e9 AD000000 		.4byte	0xad
 3324 04ed 02       		.uleb128 0x2
 3325 04ee 91       		.byte	0x91
 3326 04ef 75       		.sleb128 -11
 3327 04f0 00       		.byte	0
 3328 04f1 00       		.byte	0
 3329 04f2 00       		.byte	0
 3330 04f3 11       		.uleb128 0x11
 3331 04f4 D4050000 		.4byte	.LASF81
 3332 04f8 01       		.byte	0x1
 3333 04f9 97       		.byte	0x97
 3334 04fa 00000000 		.4byte	.LFB70
 3335 04fe 1C000000 		.4byte	.LFE70-.LFB70
 3336 0502 01       		.uleb128 0x1
 3337 0503 9C       		.byte	0x9c
 3338 0504 11       		.uleb128 0x11
 3339 0505 BA050000 		.4byte	.LASF82
 3340 0509 01       		.byte	0x1
 3341 050a 9F       		.byte	0x9f
 3342 050b 00000000 		.4byte	.LFB71
 3343 050f 28000000 		.4byte	.LFE71-.LFB71
 3344 0513 01       		.uleb128 0x1
 3345 0514 9C       		.byte	0x9c
 3346 0515 15       		.uleb128 0x15
 3347 0516 CD030000 		.4byte	.LASF94
 3348 051a 01       		.byte	0x1
 3349 051b AA       		.byte	0xaa
 3350 051c 8C000000 		.4byte	0x8c
 3351 0520 00000000 		.4byte	.LFB72
 3352 0524 C8000000 		.4byte	.LFE72-.LFB72
 3353 0528 01       		.uleb128 0x1
 3354 0529 9C       		.byte	0x9c
 3355 052a A7050000 		.4byte	0x5a7
 3356 052e 16       		.uleb128 0x16
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 78


 3357 052f 9E040000 		.4byte	.LASF83
 3358 0533 01       		.byte	0x1
 3359 0534 AA       		.byte	0xaa
 3360 0535 0C010000 		.4byte	0x10c
 3361 0539 02       		.uleb128 0x2
 3362 053a 91       		.byte	0x91
 3363 053b 5C       		.sleb128 -36
 3364 053c 16       		.uleb128 0x16
 3365 053d 6F070000 		.4byte	.LASF84
 3366 0541 01       		.byte	0x1
 3367 0542 AA       		.byte	0xaa
 3368 0543 0C010000 		.4byte	0x10c
 3369 0547 02       		.uleb128 0x2
 3370 0548 91       		.byte	0x91
 3371 0549 58       		.sleb128 -40
 3372 054a 16       		.uleb128 0x16
 3373 054b DC020000 		.4byte	.LASF85
 3374 054f 01       		.byte	0x1
 3375 0550 AA       		.byte	0xaa
 3376 0551 A2000000 		.4byte	0xa2
 3377 0555 02       		.uleb128 0x2
 3378 0556 91       		.byte	0x91
 3379 0557 54       		.sleb128 -44
 3380 0558 13       		.uleb128 0x13
 3381 0559 C2030000 		.4byte	.LASF86
 3382 055d 01       		.byte	0x1
 3383 055e AC       		.byte	0xac
 3384 055f C5000000 		.4byte	0xc5
 3385 0563 02       		.uleb128 0x2
 3386 0564 91       		.byte	0x91
 3387 0565 74       		.sleb128 -12
 3388 0566 14       		.uleb128 0x14
 3389 0567 16000000 		.4byte	.LBB4
 3390 056b 88000000 		.4byte	.LBE4-.LBB4
 3391 056f 13       		.uleb128 0x13
 3392 0570 A7040000 		.4byte	.LASF87
 3393 0574 01       		.byte	0x1
 3394 0575 B0       		.byte	0xb0
 3395 0576 0C010000 		.4byte	0x10c
 3396 057a 02       		.uleb128 0x2
 3397 057b 91       		.byte	0x91
 3398 057c 64       		.sleb128 -28
 3399 057d 13       		.uleb128 0x13
 3400 057e 4F050000 		.4byte	.LASF88
 3401 0582 01       		.byte	0x1
 3402 0583 B1       		.byte	0xb1
 3403 0584 A2000000 		.4byte	0xa2
 3404 0588 02       		.uleb128 0x2
 3405 0589 91       		.byte	0x91
 3406 058a 6C       		.sleb128 -20
 3407 058b 17       		.uleb128 0x17
 3408 058c 6900     		.ascii	"i\000"
 3409 058e 01       		.byte	0x1
 3410 058f B2       		.byte	0xb2
 3411 0590 A2000000 		.4byte	0xa2
 3412 0594 02       		.uleb128 0x2
 3413 0595 91       		.byte	0x91
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 79


 3414 0596 70       		.sleb128 -16
 3415 0597 13       		.uleb128 0x13
 3416 0598 0F020000 		.4byte	.LASF89
 3417 059c 01       		.byte	0x1
 3418 059d B2       		.byte	0xb2
 3419 059e A2000000 		.4byte	0xa2
 3420 05a2 02       		.uleb128 0x2
 3421 05a3 91       		.byte	0x91
 3422 05a4 68       		.sleb128 -24
 3423 05a5 00       		.byte	0
 3424 05a6 00       		.byte	0
 3425 05a7 12       		.uleb128 0x12
 3426 05a8 73040000 		.4byte	.LASF91
 3427 05ac 01       		.byte	0x1
 3428 05ad DE       		.byte	0xde
 3429 05ae F3010000 		.4byte	0x1f3
 3430 05b2 00000000 		.4byte	.LFB73
 3431 05b6 FC000000 		.4byte	.LFE73-.LFB73
 3432 05ba 01       		.uleb128 0x1
 3433 05bb 9C       		.byte	0x9c
 3434 05bc FE050000 		.4byte	0x5fe
 3435 05c0 13       		.uleb128 0x13
 3436 05c1 0C010000 		.4byte	.LASF92
 3437 05c5 01       		.byte	0x1
 3438 05c6 E0       		.byte	0xe0
 3439 05c7 F3010000 		.4byte	0x1f3
 3440 05cb 03       		.uleb128 0x3
 3441 05cc 91       		.byte	0x91
 3442 05cd E47C     		.sleb128 -412
 3443 05cf 14       		.uleb128 0x14
 3444 05d0 4A000000 		.4byte	.LBB5
 3445 05d4 84000000 		.4byte	.LBE5-.LBB5
 3446 05d8 17       		.uleb128 0x17
 3447 05d9 6900     		.ascii	"i\000"
 3448 05db 01       		.byte	0x1
 3449 05dc E7       		.byte	0xe7
 3450 05dd 7E000000 		.4byte	0x7e
 3451 05e1 02       		.uleb128 0x2
 3452 05e2 91       		.byte	0x91
 3453 05e3 6C       		.sleb128 -20
 3454 05e4 14       		.uleb128 0x14
 3455 05e5 70000000 		.4byte	.LBB6
 3456 05e9 46000000 		.4byte	.LBE6-.LBB6
 3457 05ed 13       		.uleb128 0x13
 3458 05ee E8010000 		.4byte	.LASF93
 3459 05f2 01       		.byte	0x1
 3460 05f3 F4       		.byte	0xf4
 3461 05f4 57000000 		.4byte	0x57
 3462 05f8 02       		.uleb128 0x2
 3463 05f9 91       		.byte	0x91
 3464 05fa 68       		.sleb128 -24
 3465 05fb 00       		.byte	0
 3466 05fc 00       		.byte	0
 3467 05fd 00       		.byte	0
 3468 05fe 18       		.uleb128 0x18
 3469 05ff CD020000 		.4byte	.LASF95
 3470 0603 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 80


 3471 0604 0801     		.2byte	0x108
 3472 0606 AD000000 		.4byte	0xad
 3473 060a 00000000 		.4byte	.LFB74
 3474 060e 78000000 		.4byte	.LFE74-.LFB74
 3475 0612 01       		.uleb128 0x1
 3476 0613 9C       		.byte	0x9c
 3477 0614 6F060000 		.4byte	0x66f
 3478 0618 19       		.uleb128 0x19
 3479 0619 AD030000 		.4byte	.LASF96
 3480 061d 01       		.byte	0x1
 3481 061e 0801     		.2byte	0x108
 3482 0620 0C010000 		.4byte	0x10c
 3483 0624 02       		.uleb128 0x2
 3484 0625 91       		.byte	0x91
 3485 0626 6C       		.sleb128 -20
 3486 0627 19       		.uleb128 0x19
 3487 0628 5E030000 		.4byte	.LASF97
 3488 062c 01       		.byte	0x1
 3489 062d 0801     		.2byte	0x108
 3490 062f 12010000 		.4byte	0x112
 3491 0633 02       		.uleb128 0x2
 3492 0634 91       		.byte	0x91
 3493 0635 68       		.sleb128 -24
 3494 0636 19       		.uleb128 0x19
 3495 0637 84030000 		.4byte	.LASF98
 3496 063b 01       		.byte	0x1
 3497 063c 0801     		.2byte	0x108
 3498 063e 12010000 		.4byte	0x112
 3499 0642 02       		.uleb128 0x2
 3500 0643 91       		.byte	0x91
 3501 0644 64       		.sleb128 -28
 3502 0645 19       		.uleb128 0x19
 3503 0646 6A030000 		.4byte	.LASF99
 3504 064a 01       		.byte	0x1
 3505 064b 0801     		.2byte	0x108
 3506 064d 0C010000 		.4byte	0x10c
 3507 0651 02       		.uleb128 0x2
 3508 0652 91       		.byte	0x91
 3509 0653 60       		.sleb128 -32
 3510 0654 1A       		.uleb128 0x1a
 3511 0655 6100     		.ascii	"a\000"
 3512 0657 01       		.byte	0x1
 3513 0658 0A01     		.2byte	0x10a
 3514 065a 0C010000 		.4byte	0x10c
 3515 065e 02       		.uleb128 0x2
 3516 065f 91       		.byte	0x91
 3517 0660 74       		.sleb128 -12
 3518 0661 1A       		.uleb128 0x1a
 3519 0662 6200     		.ascii	"b\000"
 3520 0664 01       		.byte	0x1
 3521 0665 0A01     		.2byte	0x10a
 3522 0667 0C010000 		.4byte	0x10c
 3523 066b 02       		.uleb128 0x2
 3524 066c 91       		.byte	0x91
 3525 066d 70       		.sleb128 -16
 3526 066e 00       		.byte	0
 3527 066f 1B       		.uleb128 0x1b
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 81


 3528 0670 FC050000 		.4byte	.LASF100
 3529 0674 01       		.byte	0x1
 3530 0675 2701     		.2byte	0x127
 3531 0677 AD000000 		.4byte	0xad
 3532 067b 00000000 		.4byte	.LFB75
 3533 067f 40010000 		.4byte	.LFE75-.LFB75
 3534 0683 01       		.uleb128 0x1
 3535 0684 9C       		.byte	0x9c
 3536 0685 A1060000 		.4byte	0x6a1
 3537 0689 14       		.uleb128 0x14
 3538 068a 2E000000 		.4byte	.LBB7
 3539 068e 32000000 		.4byte	.LBE7-.LBB7
 3540 0692 1A       		.uleb128 0x1a
 3541 0693 6900     		.ascii	"i\000"
 3542 0695 01       		.byte	0x1
 3543 0696 3401     		.2byte	0x134
 3544 0698 AD000000 		.4byte	0xad
 3545 069c 02       		.uleb128 0x2
 3546 069d 91       		.byte	0x91
 3547 069e 77       		.sleb128 -9
 3548 069f 00       		.byte	0
 3549 06a0 00       		.byte	0
 3550 06a1 1B       		.uleb128 0x1b
 3551 06a2 2E040000 		.4byte	.LASF101
 3552 06a6 01       		.byte	0x1
 3553 06a7 6F01     		.2byte	0x16f
 3554 06a9 AD000000 		.4byte	0xad
 3555 06ad 00000000 		.4byte	.LFB76
 3556 06b1 B4000000 		.4byte	.LFE76-.LFB76
 3557 06b5 01       		.uleb128 0x1
 3558 06b6 9C       		.byte	0x9c
 3559 06b7 E4060000 		.4byte	0x6e4
 3560 06bb 1C       		.uleb128 0x1c
 3561 06bc 0A070000 		.4byte	.LASF35
 3562 06c0 01       		.byte	0x1
 3563 06c1 7301     		.2byte	0x173
 3564 06c3 AD000000 		.4byte	0xad
 3565 06c7 02       		.uleb128 0x2
 3566 06c8 91       		.byte	0x91
 3567 06c9 77       		.sleb128 -9
 3568 06ca 14       		.uleb128 0x14
 3569 06cb 36000000 		.4byte	.LBB8
 3570 06cf 44000000 		.4byte	.LBE8-.LBB8
 3571 06d3 1C       		.uleb128 0x1c
 3572 06d4 B2030000 		.4byte	.LASF102
 3573 06d8 01       		.byte	0x1
 3574 06d9 7B01     		.2byte	0x17b
 3575 06db E4060000 		.4byte	0x6e4
 3576 06df 02       		.uleb128 0x2
 3577 06e0 91       		.byte	0x91
 3578 06e1 6C       		.sleb128 -20
 3579 06e2 00       		.byte	0
 3580 06e3 00       		.byte	0
 3581 06e4 08       		.uleb128 0x8
 3582 06e5 F7000000 		.4byte	0xf7
 3583 06e9 F4060000 		.4byte	0x6f4
 3584 06ed 09       		.uleb128 0x9
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 82


 3585 06ee 05010000 		.4byte	0x105
 3586 06f2 09       		.byte	0x9
 3587 06f3 00       		.byte	0
 3588 06f4 1D       		.uleb128 0x1d
 3589 06f5 6B010000 		.4byte	.LASF103
 3590 06f9 01       		.byte	0x1
 3591 06fa 8D01     		.2byte	0x18d
 3592 06fc 00000000 		.4byte	.LFB77
 3593 0700 1C000000 		.4byte	.LFE77-.LFB77
 3594 0704 01       		.uleb128 0x1
 3595 0705 9C       		.byte	0x9c
 3596 0706 1E       		.uleb128 0x1e
 3597 0707 68060000 		.4byte	.LASF105
 3598 070b 01       		.byte	0x1
 3599 070c 9D01     		.2byte	0x19d
 3600 070e AD000000 		.4byte	0xad
 3601 0712 00000000 		.4byte	.LFB78
 3602 0716 28000000 		.4byte	.LFE78-.LFB78
 3603 071a 01       		.uleb128 0x1
 3604 071b 9C       		.byte	0x9c
 3605 071c 1F       		.uleb128 0x1f
 3606 071d E4020000 		.4byte	.LASF109
 3607 0721 01       		.byte	0x1
 3608 0722 A901     		.2byte	0x1a9
 3609 0724 00000000 		.4byte	.LFB79
 3610 0728 30010000 		.4byte	.LFE79-.LFB79
 3611 072c 01       		.uleb128 0x1
 3612 072d 9C       		.byte	0x9c
 3613 072e 70070000 		.4byte	0x770
 3614 0732 20       		.uleb128 0x20
 3615 0733 00000000 		.4byte	.Ldebug_ranges0+0
 3616 0737 1C       		.uleb128 0x1c
 3617 0738 5C070000 		.4byte	.LASF78
 3618 073c 01       		.byte	0x1
 3619 073d AD01     		.2byte	0x1ad
 3620 073f AD000000 		.4byte	0xad
 3621 0743 02       		.uleb128 0x2
 3622 0744 91       		.byte	0x91
 3623 0745 77       		.sleb128 -9
 3624 0746 14       		.uleb128 0x14
 3625 0747 0E000000 		.4byte	.LBB10
 3626 074b E4000000 		.4byte	.LBE10-.LBB10
 3627 074f 1C       		.uleb128 0x1c
 3628 0750 64050000 		.4byte	.LASF106
 3629 0754 01       		.byte	0x1
 3630 0755 B101     		.2byte	0x1b1
 3631 0757 70070000 		.4byte	0x770
 3632 075b 02       		.uleb128 0x2
 3633 075c 91       		.byte	0x91
 3634 075d 50       		.sleb128 -48
 3635 075e 1C       		.uleb128 0x1c
 3636 075f CF040000 		.4byte	.LASF107
 3637 0763 01       		.byte	0x1
 3638 0764 B601     		.2byte	0x1b6
 3639 0766 0C010000 		.4byte	0x10c
 3640 076a 02       		.uleb128 0x2
 3641 076b 91       		.byte	0x91
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 83


 3642 076c 70       		.sleb128 -16
 3643 076d 00       		.byte	0
 3644 076e 00       		.byte	0
 3645 076f 00       		.byte	0
 3646 0770 08       		.uleb128 0x8
 3647 0771 F7000000 		.4byte	0xf7
 3648 0775 80070000 		.4byte	0x780
 3649 0779 09       		.uleb128 0x9
 3650 077a 05010000 		.4byte	0x105
 3651 077e 1D       		.byte	0x1d
 3652 077f 00       		.byte	0
 3653 0780 21       		.uleb128 0x21
 3654 0781 61020000 		.4byte	.LASF108
 3655 0785 01       		.byte	0x1
 3656 0786 D901     		.2byte	0x1d9
 3657 0788 00000000 		.4byte	.LFB80
 3658 078c 24000000 		.4byte	.LFE80-.LFB80
 3659 0790 01       		.uleb128 0x1
 3660 0791 9C       		.byte	0x9c
 3661 0792 1F       		.uleb128 0x1f
 3662 0793 E7060000 		.4byte	.LASF110
 3663 0797 01       		.byte	0x1
 3664 0798 E001     		.2byte	0x1e0
 3665 079a 00000000 		.4byte	.LFB81
 3666 079e BC000000 		.4byte	.LFE81-.LFB81
 3667 07a2 01       		.uleb128 0x1
 3668 07a3 9C       		.byte	0x9c
 3669 07a4 E9070000 		.4byte	0x7e9
 3670 07a8 1C       		.uleb128 0x1c
 3671 07a9 EE000000 		.4byte	.LASF111
 3672 07ad 01       		.byte	0x1
 3673 07ae E301     		.2byte	0x1e3
 3674 07b0 E9070000 		.4byte	0x7e9
 3675 07b4 03       		.uleb128 0x3
 3676 07b5 91       		.byte	0x91
 3677 07b6 F877     		.sleb128 -1032
 3678 07b8 1C       		.uleb128 0x1c
 3679 07b9 F4000000 		.4byte	.LASF112
 3680 07bd 01       		.byte	0x1
 3681 07be E901     		.2byte	0x1e9
 3682 07c0 7E000000 		.4byte	0x7e
 3683 07c4 03       		.uleb128 0x3
 3684 07c5 91       		.byte	0x91
 3685 07c6 F477     		.sleb128 -1036
 3686 07c8 1C       		.uleb128 0x1c
 3687 07c9 00040000 		.4byte	.LASF113
 3688 07cd 01       		.byte	0x1
 3689 07ce E901     		.2byte	0x1e9
 3690 07d0 7E000000 		.4byte	0x7e
 3691 07d4 03       		.uleb128 0x3
 3692 07d5 91       		.byte	0x91
 3693 07d6 F077     		.sleb128 -1040
 3694 07d8 1C       		.uleb128 0x1c
 3695 07d9 B7030000 		.4byte	.LASF114
 3696 07dd 01       		.byte	0x1
 3697 07de E901     		.2byte	0x1e9
 3698 07e0 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 84


 3699 07e4 03       		.uleb128 0x3
 3700 07e5 91       		.byte	0x91
 3701 07e6 EC77     		.sleb128 -1044
 3702 07e8 00       		.byte	0
 3703 07e9 08       		.uleb128 0x8
 3704 07ea F7000000 		.4byte	0xf7
 3705 07ee FA070000 		.4byte	0x7fa
 3706 07f2 22       		.uleb128 0x22
 3707 07f3 05010000 		.4byte	0x105
 3708 07f7 FF03     		.2byte	0x3ff
 3709 07f9 00       		.byte	0
 3710 07fa 1F       		.uleb128 0x1f
 3711 07fb CF010000 		.4byte	.LASF115
 3712 07ff 01       		.byte	0x1
 3713 0800 F901     		.2byte	0x1f9
 3714 0802 00000000 		.4byte	.LFB82
 3715 0806 38010000 		.4byte	.LFE82-.LFB82
 3716 080a 01       		.uleb128 0x1
 3717 080b 9C       		.byte	0x9c
 3718 080c 2A080000 		.4byte	0x82a
 3719 0810 14       		.uleb128 0x14
 3720 0811 B6000000 		.4byte	.LBB12
 3721 0815 34000000 		.4byte	.LBE12-.LBB12
 3722 0819 1C       		.uleb128 0x1c
 3723 081a 1D060000 		.4byte	.LASF116
 3724 081e 01       		.byte	0x1
 3725 081f 2202     		.2byte	0x222
 3726 0821 E4060000 		.4byte	0x6e4
 3727 0825 02       		.uleb128 0x2
 3728 0826 91       		.byte	0x91
 3729 0827 6C       		.sleb128 -20
 3730 0828 00       		.byte	0
 3731 0829 00       		.byte	0
 3732 082a 1B       		.uleb128 0x1b
 3733 082b 23020000 		.4byte	.LASF117
 3734 082f 01       		.byte	0x1
 3735 0830 3402     		.2byte	0x234
 3736 0832 57000000 		.4byte	0x57
 3737 0836 00000000 		.4byte	.LFB83
 3738 083a 44010000 		.4byte	.LFE83-.LFB83
 3739 083e 01       		.uleb128 0x1
 3740 083f 9C       		.byte	0x9c
 3741 0840 E6080000 		.4byte	0x8e6
 3742 0844 1C       		.uleb128 0x1c
 3743 0845 98030000 		.4byte	.LASF118
 3744 0849 01       		.byte	0x1
 3745 084a 3F02     		.2byte	0x23f
 3746 084c 57000000 		.4byte	0x57
 3747 0850 02       		.uleb128 0x2
 3748 0851 91       		.byte	0x91
 3749 0852 74       		.sleb128 -12
 3750 0853 14       		.uleb128 0x14
 3751 0854 30000000 		.4byte	.LBB13
 3752 0858 DE000000 		.4byte	.LBE13-.LBB13
 3753 085c 1C       		.uleb128 0x1c
 3754 085d E8010000 		.4byte	.LASF93
 3755 0861 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 85


 3756 0862 4402     		.2byte	0x244
 3757 0864 70070000 		.4byte	0x770
 3758 0868 02       		.uleb128 0x2
 3759 0869 91       		.byte	0x91
 3760 086a 54       		.sleb128 -44
 3761 086b 1A       		.uleb128 0x1a
 3762 086c 7400     		.ascii	"t\000"
 3763 086e 01       		.byte	0x1
 3764 086f 4A02     		.2byte	0x24a
 3765 0871 2D010000 		.4byte	0x12d
 3766 0875 03       		.uleb128 0x3
 3767 0876 91       		.byte	0x91
 3768 0877 947F     		.sleb128 -108
 3769 0879 1C       		.uleb128 0x1c
 3770 087a 8D010000 		.4byte	.LASF119
 3771 087e 01       		.byte	0x1
 3772 087f 4D02     		.2byte	0x24d
 3773 0881 7E000000 		.4byte	0x7e
 3774 0885 02       		.uleb128 0x2
 3775 0886 91       		.byte	0x91
 3776 0887 50       		.sleb128 -48
 3777 0888 1C       		.uleb128 0x1c
 3778 0889 89020000 		.4byte	.LASF120
 3779 088d 01       		.byte	0x1
 3780 088e 4D02     		.2byte	0x24d
 3781 0890 7E000000 		.4byte	0x7e
 3782 0894 02       		.uleb128 0x2
 3783 0895 91       		.byte	0x91
 3784 0896 4C       		.sleb128 -52
 3785 0897 1A       		.uleb128 0x1a
 3786 0898 64617900 		.ascii	"day\000"
 3787 089c 01       		.byte	0x1
 3788 089d 4D02     		.2byte	0x24d
 3789 089f 7E000000 		.4byte	0x7e
 3790 08a3 02       		.uleb128 0x2
 3791 08a4 91       		.byte	0x91
 3792 08a5 48       		.sleb128 -56
 3793 08a6 1C       		.uleb128 0x1c
 3794 08a7 99040000 		.4byte	.LASF121
 3795 08ab 01       		.byte	0x1
 3796 08ac 4D02     		.2byte	0x24d
 3797 08ae 7E000000 		.4byte	0x7e
 3798 08b2 02       		.uleb128 0x2
 3799 08b3 91       		.byte	0x91
 3800 08b4 44       		.sleb128 -60
 3801 08b5 1C       		.uleb128 0x1c
 3802 08b6 D0060000 		.4byte	.LASF122
 3803 08ba 01       		.byte	0x1
 3804 08bb 4D02     		.2byte	0x24d
 3805 08bd 7E000000 		.4byte	0x7e
 3806 08c1 02       		.uleb128 0x2
 3807 08c2 91       		.byte	0x91
 3808 08c3 40       		.sleb128 -64
 3809 08c4 1C       		.uleb128 0x1c
 3810 08c5 86010000 		.4byte	.LASF123
 3811 08c9 01       		.byte	0x1
 3812 08ca 4D02     		.2byte	0x24d
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 86


 3813 08cc 7E000000 		.4byte	0x7e
 3814 08d0 03       		.uleb128 0x3
 3815 08d1 91       		.byte	0x91
 3816 08d2 BC7F     		.sleb128 -68
 3817 08d4 1C       		.uleb128 0x1c
 3818 08d5 00000000 		.4byte	.LASF124
 3819 08d9 01       		.byte	0x1
 3820 08da 4D02     		.2byte	0x24d
 3821 08dc 7E000000 		.4byte	0x7e
 3822 08e0 03       		.uleb128 0x3
 3823 08e1 91       		.byte	0x91
 3824 08e2 B87F     		.sleb128 -72
 3825 08e4 00       		.byte	0
 3826 08e5 00       		.byte	0
 3827 08e6 23       		.uleb128 0x23
 3828 08e7 9B010000 		.4byte	.LASF125
 3829 08eb 01       		.byte	0x1
 3830 08ec 6D02     		.2byte	0x26d
 3831 08ee AD000000 		.4byte	0xad
 3832 08f2 00000000 		.4byte	.LFB84
 3833 08f6 14000000 		.4byte	.LFE84-.LFB84
 3834 08fa 01       		.uleb128 0x1
 3835 08fb 9C       		.byte	0x9c
 3836 08fc 1D       		.uleb128 0x1d
 3837 08fd 55020000 		.4byte	.LASF126
 3838 0901 01       		.byte	0x1
 3839 0902 7202     		.2byte	0x272
 3840 0904 00000000 		.4byte	.LFB85
 3841 0908 1A000000 		.4byte	.LFE85-.LFB85
 3842 090c 01       		.uleb128 0x1
 3843 090d 9C       		.byte	0x9c
 3844 090e 1D       		.uleb128 0x1d
 3845 090f CA000000 		.4byte	.LASF127
 3846 0913 01       		.byte	0x1
 3847 0914 7F02     		.2byte	0x27f
 3848 0916 00000000 		.4byte	.LFB86
 3849 091a 2A000000 		.4byte	.LFE86-.LFB86
 3850 091e 01       		.uleb128 0x1
 3851 091f 9C       		.byte	0x9c
 3852 0920 1B       		.uleb128 0x1b
 3853 0921 6E050000 		.4byte	.LASF128
 3854 0925 01       		.byte	0x1
 3855 0926 9202     		.2byte	0x292
 3856 0928 FF020000 		.4byte	0x2ff
 3857 092c 00000000 		.4byte	.LFB87
 3858 0930 7C020000 		.4byte	.LFE87-.LFB87
 3859 0934 01       		.uleb128 0x1
 3860 0935 9C       		.byte	0x9c
 3861 0936 C9090000 		.4byte	0x9c9
 3862 093a 1A       		.uleb128 0x1a
 3863 093b 67707300 		.ascii	"gps\000"
 3864 093f 01       		.byte	0x1
 3865 0940 9302     		.2byte	0x293
 3866 0942 FF020000 		.4byte	0x2ff
 3867 0946 02       		.uleb128 0x2
 3868 0947 91       		.byte	0x91
 3869 0948 4C       		.sleb128 -52
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 87


 3870 0949 1C       		.uleb128 0x1c
 3871 094a 86070000 		.4byte	.LASF129
 3872 094e 01       		.byte	0x1
 3873 094f 9F02     		.2byte	0x29f
 3874 0951 57000000 		.4byte	0x57
 3875 0955 02       		.uleb128 0x2
 3876 0956 91       		.byte	0x91
 3877 0957 68       		.sleb128 -24
 3878 0958 1C       		.uleb128 0x1c
 3879 0959 98060000 		.4byte	.LASF130
 3880 095d 01       		.byte	0x1
 3881 095e C602     		.2byte	0x2c6
 3882 0960 AD000000 		.4byte	0xad
 3883 0964 02       		.uleb128 0x2
 3884 0965 91       		.byte	0x91
 3885 0966 67       		.sleb128 -25
 3886 0967 1A       		.uleb128 0x1a
 3887 0968 6C617400 		.ascii	"lat\000"
 3888 096c 01       		.byte	0x1
 3889 096d D202     		.2byte	0x2d2
 3890 096f E9000000 		.4byte	0xe9
 3891 0973 02       		.uleb128 0x2
 3892 0974 91       		.byte	0x91
 3893 0975 48       		.sleb128 -56
 3894 0976 1A       		.uleb128 0x1a
 3895 0977 6C6F6E00 		.ascii	"lon\000"
 3896 097b 01       		.byte	0x1
 3897 097c D302     		.2byte	0x2d3
 3898 097e E9000000 		.4byte	0xe9
 3899 0982 02       		.uleb128 0x2
 3900 0983 91       		.byte	0x91
 3901 0984 44       		.sleb128 -60
 3902 0985 1A       		.uleb128 0x1a
 3903 0986 616C7400 		.ascii	"alt\000"
 3904 098a 01       		.byte	0x1
 3905 098b D402     		.2byte	0x2d4
 3906 098d E9000000 		.4byte	0xe9
 3907 0991 02       		.uleb128 0x2
 3908 0992 91       		.byte	0x91
 3909 0993 40       		.sleb128 -64
 3910 0994 1A       		.uleb128 0x1a
 3911 0995 733100   		.ascii	"s1\000"
 3912 0998 01       		.byte	0x1
 3913 0999 D802     		.2byte	0x2d8
 3914 099b 0C010000 		.4byte	0x10c
 3915 099f 02       		.uleb128 0x2
 3916 09a0 91       		.byte	0x91
 3917 09a1 60       		.sleb128 -32
 3918 09a2 1C       		.uleb128 0x1c
 3919 09a3 7E040000 		.4byte	.LASF131
 3920 09a7 01       		.byte	0x1
 3921 09a8 DB02     		.2byte	0x2db
 3922 09aa 7E000000 		.4byte	0x7e
 3923 09ae 02       		.uleb128 0x2
 3924 09af 91       		.byte	0x91
 3925 09b0 5C       		.sleb128 -36
 3926 09b1 14       		.uleb128 0x14
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 88


 3927 09b2 B4000000 		.4byte	.LBB14
 3928 09b6 38000000 		.4byte	.LBE14-.LBB14
 3929 09ba 1A       		.uleb128 0x1a
 3930 09bb 6900     		.ascii	"i\000"
 3931 09bd 01       		.byte	0x1
 3932 09be C702     		.2byte	0x2c7
 3933 09c0 B9000000 		.4byte	0xb9
 3934 09c4 02       		.uleb128 0x2
 3935 09c5 91       		.byte	0x91
 3936 09c6 6E       		.sleb128 -18
 3937 09c7 00       		.byte	0
 3938 09c8 00       		.byte	0
 3939 09c9 24       		.uleb128 0x24
 3940 09ca 11010000 		.4byte	.LASF132
 3941 09ce 0A       		.byte	0xa
 3942 09cf 1207     		.2byte	0x712
 3943 09d1 D5090000 		.4byte	0x9d5
 3944 09d5 25       		.uleb128 0x25
 3945 09d6 97000000 		.4byte	0x97
 3946 09da 26       		.uleb128 0x26
 3947 09db 00010000 		.4byte	.LASF133
 3948 09df 07       		.byte	0x7
 3949 09e0 16       		.byte	0x16
 3950 09e1 AD000000 		.4byte	0xad
 3951 09e5 05       		.uleb128 0x5
 3952 09e6 03       		.byte	0x3
 3953 09e7 00000000 		.4byte	modem_state
 3954 09eb 26       		.uleb128 0x26
 3955 09ec 81060000 		.4byte	.LASF134
 3956 09f0 07       		.byte	0x7
 3957 09f1 55       		.byte	0x55
 3958 09f2 DD000000 		.4byte	0xdd
 3959 09f6 05       		.uleb128 0x5
 3960 09f7 03       		.byte	0x3
 3961 09f8 00000000 		.4byte	modem_start_time_stamp
 3962 09fc 26       		.uleb128 0x26
 3963 09fd 26030000 		.4byte	.LASF63
 3964 0a01 07       		.byte	0x7
 3965 0a02 56       		.byte	0x56
 3966 0a03 3B020000 		.4byte	0x23b
 3967 0a07 05       		.uleb128 0x5
 3968 0a08 03       		.byte	0x3
 3969 0a09 00000000 		.4byte	modem_info
 3970 0a0d 26       		.uleb128 0x26
 3971 0a0e 1E010000 		.4byte	.LASF135
 3972 0a12 07       		.byte	0x7
 3973 0a13 57       		.byte	0x57
 3974 0a14 AF020000 		.4byte	0x2af
 3975 0a18 05       		.uleb128 0x5
 3976 0a19 03       		.byte	0x3
 3977 0a1a 00000000 		.4byte	modem_stats
 3978 0a1e 26       		.uleb128 0x26
 3979 0a1f 84040000 		.4byte	.LASF136
 3980 0a23 07       		.byte	0x7
 3981 0a24 58       		.byte	0x58
 3982 0a25 37030000 		.4byte	0x337
 3983 0a29 05       		.uleb128 0x5
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 89


 3984 0a2a 03       		.byte	0x3
 3985 0a2b 00000000 		.4byte	updatable_parameters
 3986 0a2f 26       		.uleb128 0x26
 3987 0a30 0C040000 		.4byte	.LASF137
 3988 0a34 08       		.byte	0x8
 3989 0a35 1D       		.byte	0x1d
 3990 0a36 B9000000 		.4byte	0xb9
 3991 0a3a 05       		.uleb128 0x5
 3992 0a3b 03       		.byte	0x3
 3993 0a3c 00000000 		.4byte	dataPointsInStack
 3994 0a40 26       		.uleb128 0x26
 3995 0a41 11070000 		.4byte	.LASF138
 3996 0a45 08       		.byte	0x8
 3997 0a46 1E       		.byte	0x1e
 3998 0a47 B9000000 		.4byte	0xb9
 3999 0a4b 05       		.uleb128 0x5
 4000 0a4c 03       		.byte	0x3
 4001 0a4d 00000000 		.4byte	dataPointsInStackDesired
 4002 0a51 08       		.uleb128 0x8
 4003 0a52 6F030000 		.4byte	0x36f
 4004 0a56 610A0000 		.4byte	0xa61
 4005 0a5a 09       		.uleb128 0x9
 4006 0a5b 05010000 		.4byte	0x105
 4007 0a5f 95       		.byte	0x95
 4008 0a60 00       		.byte	0
 4009 0a61 26       		.uleb128 0x26
 4010 0a62 10030000 		.4byte	.LASF139
 4011 0a66 08       		.byte	0x8
 4012 0a67 1F       		.byte	0x1f
 4013 0a68 510A0000 		.4byte	0xa51
 4014 0a6c 05       		.uleb128 0x5
 4015 0a6d 03       		.byte	0x3
 4016 0a6e 00000000 		.4byte	data
 4017 0a72 08       		.uleb128 0x8
 4018 0a73 F7000000 		.4byte	0xf7
 4019 0a77 830A0000 		.4byte	0xa83
 4020 0a7b 22       		.uleb128 0x22
 4021 0a7c 05010000 		.4byte	0x105
 4022 0a80 0F27     		.2byte	0x270f
 4023 0a82 00       		.byte	0
 4024 0a83 26       		.uleb128 0x26
 4025 0a84 90070000 		.4byte	.LASF140
 4026 0a88 09       		.byte	0x9
 4027 0a89 15       		.byte	0x15
 4028 0a8a 720A0000 		.4byte	0xa72
 4029 0a8e 05       		.uleb128 0x5
 4030 0a8f 03       		.byte	0x3
 4031 0a90 00000000 		.4byte	http_request
 4032 0a94 26       		.uleb128 0x26
 4033 0a95 61010000 		.4byte	.LASF141
 4034 0a99 09       		.byte	0x9
 4035 0a9a 16       		.byte	0x16
 4036 0a9b 720A0000 		.4byte	0xa72
 4037 0a9f 05       		.uleb128 0x5
 4038 0aa0 03       		.byte	0x3
 4039 0aa1 00000000 		.4byte	http_body
 4040 0aa5 08       		.uleb128 0x8
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 90


 4041 0aa6 F7000000 		.4byte	0xf7
 4042 0aaa B50A0000 		.4byte	0xab5
 4043 0aae 09       		.uleb128 0x9
 4044 0aaf 05010000 		.4byte	0x105
 4045 0ab3 C7       		.byte	0xc7
 4046 0ab4 00       		.byte	0
 4047 0ab5 26       		.uleb128 0x26
 4048 0ab6 2B060000 		.4byte	.LASF142
 4049 0aba 09       		.byte	0x9
 4050 0abb 17       		.byte	0x17
 4051 0abc A50A0000 		.4byte	0xaa5
 4052 0ac0 05       		.uleb128 0x5
 4053 0ac1 03       		.byte	0x3
 4054 0ac2 00000000 		.4byte	http_route
 4055 0ac6 26       		.uleb128 0x26
 4056 0ac7 8F050000 		.4byte	.LASF143
 4057 0acb 09       		.byte	0x9
 4058 0acc 3E       		.byte	0x3e
 4059 0acd A1030000 		.4byte	0x3a1
 4060 0ad1 05       		.uleb128 0x5
 4061 0ad2 03       		.byte	0x3
 4062 0ad3 00000000 		.4byte	system_info
 4063 0ad7 26       		.uleb128 0x26
 4064 0ad8 3F050000 		.4byte	.LASF144
 4065 0adc 09       		.byte	0x9
 4066 0add 50       		.byte	0x50
 4067 0ade 1F040000 		.4byte	0x41f
 4068 0ae2 05       		.uleb128 0x5
 4069 0ae3 03       		.byte	0x3
 4070 0ae4 00000000 		.4byte	system_settings
 4071 0ae8 26       		.uleb128 0x26
 4072 0ae9 4B040000 		.4byte	.LASF145
 4073 0aed 01       		.byte	0x1
 4074 0aee 09       		.byte	0x9
 4075 0aef E9070000 		.4byte	0x7e9
 4076 0af3 05       		.uleb128 0x5
 4077 0af4 03       		.byte	0x3
 4078 0af5 00000000 		.4byte	uart_received_string
 4079 0af9 26       		.uleb128 0x26
 4080 0afa 49060000 		.4byte	.LASF146
 4081 0afe 01       		.byte	0x1
 4082 0aff 0A       		.byte	0xa
 4083 0b00 D1000000 		.4byte	0xd1
 4084 0b04 05       		.uleb128 0x5
 4085 0b05 03       		.byte	0x3
 4086 0b06 00000000 		.4byte	uart_string_index
 4087 0b0a 00       		.byte	0
 4088              		.section	.debug_abbrev,"",%progbits
 4089              	.Ldebug_abbrev0:
 4090 0000 01       		.uleb128 0x1
 4091 0001 11       		.uleb128 0x11
 4092 0002 01       		.byte	0x1
 4093 0003 25       		.uleb128 0x25
 4094 0004 0E       		.uleb128 0xe
 4095 0005 13       		.uleb128 0x13
 4096 0006 0B       		.uleb128 0xb
 4097 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 91


 4098 0008 0E       		.uleb128 0xe
 4099 0009 1B       		.uleb128 0x1b
 4100 000a 0E       		.uleb128 0xe
 4101 000b 55       		.uleb128 0x55
 4102 000c 17       		.uleb128 0x17
 4103 000d 11       		.uleb128 0x11
 4104 000e 01       		.uleb128 0x1
 4105 000f 10       		.uleb128 0x10
 4106 0010 17       		.uleb128 0x17
 4107 0011 00       		.byte	0
 4108 0012 00       		.byte	0
 4109 0013 02       		.uleb128 0x2
 4110 0014 24       		.uleb128 0x24
 4111 0015 00       		.byte	0
 4112 0016 0B       		.uleb128 0xb
 4113 0017 0B       		.uleb128 0xb
 4114 0018 3E       		.uleb128 0x3e
 4115 0019 0B       		.uleb128 0xb
 4116 001a 03       		.uleb128 0x3
 4117 001b 0E       		.uleb128 0xe
 4118 001c 00       		.byte	0
 4119 001d 00       		.byte	0
 4120 001e 03       		.uleb128 0x3
 4121 001f 16       		.uleb128 0x16
 4122 0020 00       		.byte	0
 4123 0021 03       		.uleb128 0x3
 4124 0022 0E       		.uleb128 0xe
 4125 0023 3A       		.uleb128 0x3a
 4126 0024 0B       		.uleb128 0xb
 4127 0025 3B       		.uleb128 0x3b
 4128 0026 0B       		.uleb128 0xb
 4129 0027 49       		.uleb128 0x49
 4130 0028 13       		.uleb128 0x13
 4131 0029 00       		.byte	0
 4132 002a 00       		.byte	0
 4133 002b 04       		.uleb128 0x4
 4134 002c 24       		.uleb128 0x24
 4135 002d 00       		.byte	0
 4136 002e 0B       		.uleb128 0xb
 4137 002f 0B       		.uleb128 0xb
 4138 0030 3E       		.uleb128 0x3e
 4139 0031 0B       		.uleb128 0xb
 4140 0032 03       		.uleb128 0x3
 4141 0033 08       		.uleb128 0x8
 4142 0034 00       		.byte	0
 4143 0035 00       		.byte	0
 4144 0036 05       		.uleb128 0x5
 4145 0037 16       		.uleb128 0x16
 4146 0038 00       		.byte	0
 4147 0039 03       		.uleb128 0x3
 4148 003a 0E       		.uleb128 0xe
 4149 003b 3A       		.uleb128 0x3a
 4150 003c 0B       		.uleb128 0xb
 4151 003d 3B       		.uleb128 0x3b
 4152 003e 05       		.uleb128 0x5
 4153 003f 49       		.uleb128 0x49
 4154 0040 13       		.uleb128 0x13
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 92


 4155 0041 00       		.byte	0
 4156 0042 00       		.byte	0
 4157 0043 06       		.uleb128 0x6
 4158 0044 0F       		.uleb128 0xf
 4159 0045 00       		.byte	0
 4160 0046 0B       		.uleb128 0xb
 4161 0047 0B       		.uleb128 0xb
 4162 0048 49       		.uleb128 0x49
 4163 0049 13       		.uleb128 0x13
 4164 004a 00       		.byte	0
 4165 004b 00       		.byte	0
 4166 004c 07       		.uleb128 0x7
 4167 004d 26       		.uleb128 0x26
 4168 004e 00       		.byte	0
 4169 004f 49       		.uleb128 0x49
 4170 0050 13       		.uleb128 0x13
 4171 0051 00       		.byte	0
 4172 0052 00       		.byte	0
 4173 0053 08       		.uleb128 0x8
 4174 0054 01       		.uleb128 0x1
 4175 0055 01       		.byte	0x1
 4176 0056 49       		.uleb128 0x49
 4177 0057 13       		.uleb128 0x13
 4178 0058 01       		.uleb128 0x1
 4179 0059 13       		.uleb128 0x13
 4180 005a 00       		.byte	0
 4181 005b 00       		.byte	0
 4182 005c 09       		.uleb128 0x9
 4183 005d 21       		.uleb128 0x21
 4184 005e 00       		.byte	0
 4185 005f 49       		.uleb128 0x49
 4186 0060 13       		.uleb128 0x13
 4187 0061 2F       		.uleb128 0x2f
 4188 0062 0B       		.uleb128 0xb
 4189 0063 00       		.byte	0
 4190 0064 00       		.byte	0
 4191 0065 0A       		.uleb128 0xa
 4192 0066 13       		.uleb128 0x13
 4193 0067 01       		.byte	0x1
 4194 0068 03       		.uleb128 0x3
 4195 0069 08       		.uleb128 0x8
 4196 006a 0B       		.uleb128 0xb
 4197 006b 0B       		.uleb128 0xb
 4198 006c 3A       		.uleb128 0x3a
 4199 006d 0B       		.uleb128 0xb
 4200 006e 3B       		.uleb128 0x3b
 4201 006f 0B       		.uleb128 0xb
 4202 0070 01       		.uleb128 0x1
 4203 0071 13       		.uleb128 0x13
 4204 0072 00       		.byte	0
 4205 0073 00       		.byte	0
 4206 0074 0B       		.uleb128 0xb
 4207 0075 0D       		.uleb128 0xd
 4208 0076 00       		.byte	0
 4209 0077 03       		.uleb128 0x3
 4210 0078 0E       		.uleb128 0xe
 4211 0079 3A       		.uleb128 0x3a
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 93


 4212 007a 0B       		.uleb128 0xb
 4213 007b 3B       		.uleb128 0x3b
 4214 007c 0B       		.uleb128 0xb
 4215 007d 49       		.uleb128 0x49
 4216 007e 13       		.uleb128 0x13
 4217 007f 38       		.uleb128 0x38
 4218 0080 0B       		.uleb128 0xb
 4219 0081 00       		.byte	0
 4220 0082 00       		.byte	0
 4221 0083 0C       		.uleb128 0xc
 4222 0084 13       		.uleb128 0x13
 4223 0085 01       		.byte	0x1
 4224 0086 0B       		.uleb128 0xb
 4225 0087 05       		.uleb128 0x5
 4226 0088 3A       		.uleb128 0x3a
 4227 0089 0B       		.uleb128 0xb
 4228 008a 3B       		.uleb128 0x3b
 4229 008b 0B       		.uleb128 0xb
 4230 008c 01       		.uleb128 0x1
 4231 008d 13       		.uleb128 0x13
 4232 008e 00       		.byte	0
 4233 008f 00       		.byte	0
 4234 0090 0D       		.uleb128 0xd
 4235 0091 13       		.uleb128 0x13
 4236 0092 01       		.byte	0x1
 4237 0093 0B       		.uleb128 0xb
 4238 0094 0B       		.uleb128 0xb
 4239 0095 3A       		.uleb128 0x3a
 4240 0096 0B       		.uleb128 0xb
 4241 0097 3B       		.uleb128 0x3b
 4242 0098 0B       		.uleb128 0xb
 4243 0099 01       		.uleb128 0x1
 4244 009a 13       		.uleb128 0x13
 4245 009b 00       		.byte	0
 4246 009c 00       		.byte	0
 4247 009d 0E       		.uleb128 0xe
 4248 009e 0D       		.uleb128 0xd
 4249 009f 00       		.byte	0
 4250 00a0 03       		.uleb128 0x3
 4251 00a1 08       		.uleb128 0x8
 4252 00a2 3A       		.uleb128 0x3a
 4253 00a3 0B       		.uleb128 0xb
 4254 00a4 3B       		.uleb128 0x3b
 4255 00a5 0B       		.uleb128 0xb
 4256 00a6 49       		.uleb128 0x49
 4257 00a7 13       		.uleb128 0x13
 4258 00a8 38       		.uleb128 0x38
 4259 00a9 0B       		.uleb128 0xb
 4260 00aa 00       		.byte	0
 4261 00ab 00       		.byte	0
 4262 00ac 0F       		.uleb128 0xf
 4263 00ad 0D       		.uleb128 0xd
 4264 00ae 00       		.byte	0
 4265 00af 03       		.uleb128 0x3
 4266 00b0 0E       		.uleb128 0xe
 4267 00b1 3A       		.uleb128 0x3a
 4268 00b2 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 94


 4269 00b3 3B       		.uleb128 0x3b
 4270 00b4 0B       		.uleb128 0xb
 4271 00b5 49       		.uleb128 0x49
 4272 00b6 13       		.uleb128 0x13
 4273 00b7 38       		.uleb128 0x38
 4274 00b8 05       		.uleb128 0x5
 4275 00b9 00       		.byte	0
 4276 00ba 00       		.byte	0
 4277 00bb 10       		.uleb128 0x10
 4278 00bc 2E       		.uleb128 0x2e
 4279 00bd 00       		.byte	0
 4280 00be 3F       		.uleb128 0x3f
 4281 00bf 19       		.uleb128 0x19
 4282 00c0 03       		.uleb128 0x3
 4283 00c1 0E       		.uleb128 0xe
 4284 00c2 3A       		.uleb128 0x3a
 4285 00c3 0B       		.uleb128 0xb
 4286 00c4 3B       		.uleb128 0x3b
 4287 00c5 0B       		.uleb128 0xb
 4288 00c6 27       		.uleb128 0x27
 4289 00c7 19       		.uleb128 0x19
 4290 00c8 11       		.uleb128 0x11
 4291 00c9 01       		.uleb128 0x1
 4292 00ca 12       		.uleb128 0x12
 4293 00cb 06       		.uleb128 0x6
 4294 00cc 40       		.uleb128 0x40
 4295 00cd 18       		.uleb128 0x18
 4296 00ce 9642     		.uleb128 0x2116
 4297 00d0 19       		.uleb128 0x19
 4298 00d1 00       		.byte	0
 4299 00d2 00       		.byte	0
 4300 00d3 11       		.uleb128 0x11
 4301 00d4 2E       		.uleb128 0x2e
 4302 00d5 00       		.byte	0
 4303 00d6 3F       		.uleb128 0x3f
 4304 00d7 19       		.uleb128 0x19
 4305 00d8 03       		.uleb128 0x3
 4306 00d9 0E       		.uleb128 0xe
 4307 00da 3A       		.uleb128 0x3a
 4308 00db 0B       		.uleb128 0xb
 4309 00dc 3B       		.uleb128 0x3b
 4310 00dd 0B       		.uleb128 0xb
 4311 00de 11       		.uleb128 0x11
 4312 00df 01       		.uleb128 0x1
 4313 00e0 12       		.uleb128 0x12
 4314 00e1 06       		.uleb128 0x6
 4315 00e2 40       		.uleb128 0x40
 4316 00e3 18       		.uleb128 0x18
 4317 00e4 9642     		.uleb128 0x2116
 4318 00e6 19       		.uleb128 0x19
 4319 00e7 00       		.byte	0
 4320 00e8 00       		.byte	0
 4321 00e9 12       		.uleb128 0x12
 4322 00ea 2E       		.uleb128 0x2e
 4323 00eb 01       		.byte	0x1
 4324 00ec 3F       		.uleb128 0x3f
 4325 00ed 19       		.uleb128 0x19
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 95


 4326 00ee 03       		.uleb128 0x3
 4327 00ef 0E       		.uleb128 0xe
 4328 00f0 3A       		.uleb128 0x3a
 4329 00f1 0B       		.uleb128 0xb
 4330 00f2 3B       		.uleb128 0x3b
 4331 00f3 0B       		.uleb128 0xb
 4332 00f4 49       		.uleb128 0x49
 4333 00f5 13       		.uleb128 0x13
 4334 00f6 11       		.uleb128 0x11
 4335 00f7 01       		.uleb128 0x1
 4336 00f8 12       		.uleb128 0x12
 4337 00f9 06       		.uleb128 0x6
 4338 00fa 40       		.uleb128 0x40
 4339 00fb 18       		.uleb128 0x18
 4340 00fc 9642     		.uleb128 0x2116
 4341 00fe 19       		.uleb128 0x19
 4342 00ff 01       		.uleb128 0x1
 4343 0100 13       		.uleb128 0x13
 4344 0101 00       		.byte	0
 4345 0102 00       		.byte	0
 4346 0103 13       		.uleb128 0x13
 4347 0104 34       		.uleb128 0x34
 4348 0105 00       		.byte	0
 4349 0106 03       		.uleb128 0x3
 4350 0107 0E       		.uleb128 0xe
 4351 0108 3A       		.uleb128 0x3a
 4352 0109 0B       		.uleb128 0xb
 4353 010a 3B       		.uleb128 0x3b
 4354 010b 0B       		.uleb128 0xb
 4355 010c 49       		.uleb128 0x49
 4356 010d 13       		.uleb128 0x13
 4357 010e 02       		.uleb128 0x2
 4358 010f 18       		.uleb128 0x18
 4359 0110 00       		.byte	0
 4360 0111 00       		.byte	0
 4361 0112 14       		.uleb128 0x14
 4362 0113 0B       		.uleb128 0xb
 4363 0114 01       		.byte	0x1
 4364 0115 11       		.uleb128 0x11
 4365 0116 01       		.uleb128 0x1
 4366 0117 12       		.uleb128 0x12
 4367 0118 06       		.uleb128 0x6
 4368 0119 00       		.byte	0
 4369 011a 00       		.byte	0
 4370 011b 15       		.uleb128 0x15
 4371 011c 2E       		.uleb128 0x2e
 4372 011d 01       		.byte	0x1
 4373 011e 3F       		.uleb128 0x3f
 4374 011f 19       		.uleb128 0x19
 4375 0120 03       		.uleb128 0x3
 4376 0121 0E       		.uleb128 0xe
 4377 0122 3A       		.uleb128 0x3a
 4378 0123 0B       		.uleb128 0xb
 4379 0124 3B       		.uleb128 0x3b
 4380 0125 0B       		.uleb128 0xb
 4381 0126 27       		.uleb128 0x27
 4382 0127 19       		.uleb128 0x19
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 96


 4383 0128 49       		.uleb128 0x49
 4384 0129 13       		.uleb128 0x13
 4385 012a 11       		.uleb128 0x11
 4386 012b 01       		.uleb128 0x1
 4387 012c 12       		.uleb128 0x12
 4388 012d 06       		.uleb128 0x6
 4389 012e 40       		.uleb128 0x40
 4390 012f 18       		.uleb128 0x18
 4391 0130 9642     		.uleb128 0x2116
 4392 0132 19       		.uleb128 0x19
 4393 0133 01       		.uleb128 0x1
 4394 0134 13       		.uleb128 0x13
 4395 0135 00       		.byte	0
 4396 0136 00       		.byte	0
 4397 0137 16       		.uleb128 0x16
 4398 0138 05       		.uleb128 0x5
 4399 0139 00       		.byte	0
 4400 013a 03       		.uleb128 0x3
 4401 013b 0E       		.uleb128 0xe
 4402 013c 3A       		.uleb128 0x3a
 4403 013d 0B       		.uleb128 0xb
 4404 013e 3B       		.uleb128 0x3b
 4405 013f 0B       		.uleb128 0xb
 4406 0140 49       		.uleb128 0x49
 4407 0141 13       		.uleb128 0x13
 4408 0142 02       		.uleb128 0x2
 4409 0143 18       		.uleb128 0x18
 4410 0144 00       		.byte	0
 4411 0145 00       		.byte	0
 4412 0146 17       		.uleb128 0x17
 4413 0147 34       		.uleb128 0x34
 4414 0148 00       		.byte	0
 4415 0149 03       		.uleb128 0x3
 4416 014a 08       		.uleb128 0x8
 4417 014b 3A       		.uleb128 0x3a
 4418 014c 0B       		.uleb128 0xb
 4419 014d 3B       		.uleb128 0x3b
 4420 014e 0B       		.uleb128 0xb
 4421 014f 49       		.uleb128 0x49
 4422 0150 13       		.uleb128 0x13
 4423 0151 02       		.uleb128 0x2
 4424 0152 18       		.uleb128 0x18
 4425 0153 00       		.byte	0
 4426 0154 00       		.byte	0
 4427 0155 18       		.uleb128 0x18
 4428 0156 2E       		.uleb128 0x2e
 4429 0157 01       		.byte	0x1
 4430 0158 3F       		.uleb128 0x3f
 4431 0159 19       		.uleb128 0x19
 4432 015a 03       		.uleb128 0x3
 4433 015b 0E       		.uleb128 0xe
 4434 015c 3A       		.uleb128 0x3a
 4435 015d 0B       		.uleb128 0xb
 4436 015e 3B       		.uleb128 0x3b
 4437 015f 05       		.uleb128 0x5
 4438 0160 27       		.uleb128 0x27
 4439 0161 19       		.uleb128 0x19
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 97


 4440 0162 49       		.uleb128 0x49
 4441 0163 13       		.uleb128 0x13
 4442 0164 11       		.uleb128 0x11
 4443 0165 01       		.uleb128 0x1
 4444 0166 12       		.uleb128 0x12
 4445 0167 06       		.uleb128 0x6
 4446 0168 40       		.uleb128 0x40
 4447 0169 18       		.uleb128 0x18
 4448 016a 9642     		.uleb128 0x2116
 4449 016c 19       		.uleb128 0x19
 4450 016d 01       		.uleb128 0x1
 4451 016e 13       		.uleb128 0x13
 4452 016f 00       		.byte	0
 4453 0170 00       		.byte	0
 4454 0171 19       		.uleb128 0x19
 4455 0172 05       		.uleb128 0x5
 4456 0173 00       		.byte	0
 4457 0174 03       		.uleb128 0x3
 4458 0175 0E       		.uleb128 0xe
 4459 0176 3A       		.uleb128 0x3a
 4460 0177 0B       		.uleb128 0xb
 4461 0178 3B       		.uleb128 0x3b
 4462 0179 05       		.uleb128 0x5
 4463 017a 49       		.uleb128 0x49
 4464 017b 13       		.uleb128 0x13
 4465 017c 02       		.uleb128 0x2
 4466 017d 18       		.uleb128 0x18
 4467 017e 00       		.byte	0
 4468 017f 00       		.byte	0
 4469 0180 1A       		.uleb128 0x1a
 4470 0181 34       		.uleb128 0x34
 4471 0182 00       		.byte	0
 4472 0183 03       		.uleb128 0x3
 4473 0184 08       		.uleb128 0x8
 4474 0185 3A       		.uleb128 0x3a
 4475 0186 0B       		.uleb128 0xb
 4476 0187 3B       		.uleb128 0x3b
 4477 0188 05       		.uleb128 0x5
 4478 0189 49       		.uleb128 0x49
 4479 018a 13       		.uleb128 0x13
 4480 018b 02       		.uleb128 0x2
 4481 018c 18       		.uleb128 0x18
 4482 018d 00       		.byte	0
 4483 018e 00       		.byte	0
 4484 018f 1B       		.uleb128 0x1b
 4485 0190 2E       		.uleb128 0x2e
 4486 0191 01       		.byte	0x1
 4487 0192 3F       		.uleb128 0x3f
 4488 0193 19       		.uleb128 0x19
 4489 0194 03       		.uleb128 0x3
 4490 0195 0E       		.uleb128 0xe
 4491 0196 3A       		.uleb128 0x3a
 4492 0197 0B       		.uleb128 0xb
 4493 0198 3B       		.uleb128 0x3b
 4494 0199 05       		.uleb128 0x5
 4495 019a 49       		.uleb128 0x49
 4496 019b 13       		.uleb128 0x13
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 98


 4497 019c 11       		.uleb128 0x11
 4498 019d 01       		.uleb128 0x1
 4499 019e 12       		.uleb128 0x12
 4500 019f 06       		.uleb128 0x6
 4501 01a0 40       		.uleb128 0x40
 4502 01a1 18       		.uleb128 0x18
 4503 01a2 9642     		.uleb128 0x2116
 4504 01a4 19       		.uleb128 0x19
 4505 01a5 01       		.uleb128 0x1
 4506 01a6 13       		.uleb128 0x13
 4507 01a7 00       		.byte	0
 4508 01a8 00       		.byte	0
 4509 01a9 1C       		.uleb128 0x1c
 4510 01aa 34       		.uleb128 0x34
 4511 01ab 00       		.byte	0
 4512 01ac 03       		.uleb128 0x3
 4513 01ad 0E       		.uleb128 0xe
 4514 01ae 3A       		.uleb128 0x3a
 4515 01af 0B       		.uleb128 0xb
 4516 01b0 3B       		.uleb128 0x3b
 4517 01b1 05       		.uleb128 0x5
 4518 01b2 49       		.uleb128 0x49
 4519 01b3 13       		.uleb128 0x13
 4520 01b4 02       		.uleb128 0x2
 4521 01b5 18       		.uleb128 0x18
 4522 01b6 00       		.byte	0
 4523 01b7 00       		.byte	0
 4524 01b8 1D       		.uleb128 0x1d
 4525 01b9 2E       		.uleb128 0x2e
 4526 01ba 00       		.byte	0
 4527 01bb 3F       		.uleb128 0x3f
 4528 01bc 19       		.uleb128 0x19
 4529 01bd 03       		.uleb128 0x3
 4530 01be 0E       		.uleb128 0xe
 4531 01bf 3A       		.uleb128 0x3a
 4532 01c0 0B       		.uleb128 0xb
 4533 01c1 3B       		.uleb128 0x3b
 4534 01c2 05       		.uleb128 0x5
 4535 01c3 11       		.uleb128 0x11
 4536 01c4 01       		.uleb128 0x1
 4537 01c5 12       		.uleb128 0x12
 4538 01c6 06       		.uleb128 0x6
 4539 01c7 40       		.uleb128 0x40
 4540 01c8 18       		.uleb128 0x18
 4541 01c9 9642     		.uleb128 0x2116
 4542 01cb 19       		.uleb128 0x19
 4543 01cc 00       		.byte	0
 4544 01cd 00       		.byte	0
 4545 01ce 1E       		.uleb128 0x1e
 4546 01cf 2E       		.uleb128 0x2e
 4547 01d0 00       		.byte	0
 4548 01d1 3F       		.uleb128 0x3f
 4549 01d2 19       		.uleb128 0x19
 4550 01d3 03       		.uleb128 0x3
 4551 01d4 0E       		.uleb128 0xe
 4552 01d5 3A       		.uleb128 0x3a
 4553 01d6 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 99


 4554 01d7 3B       		.uleb128 0x3b
 4555 01d8 05       		.uleb128 0x5
 4556 01d9 49       		.uleb128 0x49
 4557 01da 13       		.uleb128 0x13
 4558 01db 11       		.uleb128 0x11
 4559 01dc 01       		.uleb128 0x1
 4560 01dd 12       		.uleb128 0x12
 4561 01de 06       		.uleb128 0x6
 4562 01df 40       		.uleb128 0x40
 4563 01e0 18       		.uleb128 0x18
 4564 01e1 9642     		.uleb128 0x2116
 4565 01e3 19       		.uleb128 0x19
 4566 01e4 00       		.byte	0
 4567 01e5 00       		.byte	0
 4568 01e6 1F       		.uleb128 0x1f
 4569 01e7 2E       		.uleb128 0x2e
 4570 01e8 01       		.byte	0x1
 4571 01e9 3F       		.uleb128 0x3f
 4572 01ea 19       		.uleb128 0x19
 4573 01eb 03       		.uleb128 0x3
 4574 01ec 0E       		.uleb128 0xe
 4575 01ed 3A       		.uleb128 0x3a
 4576 01ee 0B       		.uleb128 0xb
 4577 01ef 3B       		.uleb128 0x3b
 4578 01f0 05       		.uleb128 0x5
 4579 01f1 11       		.uleb128 0x11
 4580 01f2 01       		.uleb128 0x1
 4581 01f3 12       		.uleb128 0x12
 4582 01f4 06       		.uleb128 0x6
 4583 01f5 40       		.uleb128 0x40
 4584 01f6 18       		.uleb128 0x18
 4585 01f7 9642     		.uleb128 0x2116
 4586 01f9 19       		.uleb128 0x19
 4587 01fa 01       		.uleb128 0x1
 4588 01fb 13       		.uleb128 0x13
 4589 01fc 00       		.byte	0
 4590 01fd 00       		.byte	0
 4591 01fe 20       		.uleb128 0x20
 4592 01ff 0B       		.uleb128 0xb
 4593 0200 01       		.byte	0x1
 4594 0201 55       		.uleb128 0x55
 4595 0202 17       		.uleb128 0x17
 4596 0203 00       		.byte	0
 4597 0204 00       		.byte	0
 4598 0205 21       		.uleb128 0x21
 4599 0206 2E       		.uleb128 0x2e
 4600 0207 00       		.byte	0
 4601 0208 3F       		.uleb128 0x3f
 4602 0209 19       		.uleb128 0x19
 4603 020a 03       		.uleb128 0x3
 4604 020b 0E       		.uleb128 0xe
 4605 020c 3A       		.uleb128 0x3a
 4606 020d 0B       		.uleb128 0xb
 4607 020e 3B       		.uleb128 0x3b
 4608 020f 05       		.uleb128 0x5
 4609 0210 11       		.uleb128 0x11
 4610 0211 01       		.uleb128 0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 100


 4611 0212 12       		.uleb128 0x12
 4612 0213 06       		.uleb128 0x6
 4613 0214 40       		.uleb128 0x40
 4614 0215 18       		.uleb128 0x18
 4615 0216 9742     		.uleb128 0x2117
 4616 0218 19       		.uleb128 0x19
 4617 0219 00       		.byte	0
 4618 021a 00       		.byte	0
 4619 021b 22       		.uleb128 0x22
 4620 021c 21       		.uleb128 0x21
 4621 021d 00       		.byte	0
 4622 021e 49       		.uleb128 0x49
 4623 021f 13       		.uleb128 0x13
 4624 0220 2F       		.uleb128 0x2f
 4625 0221 05       		.uleb128 0x5
 4626 0222 00       		.byte	0
 4627 0223 00       		.byte	0
 4628 0224 23       		.uleb128 0x23
 4629 0225 2E       		.uleb128 0x2e
 4630 0226 00       		.byte	0
 4631 0227 3F       		.uleb128 0x3f
 4632 0228 19       		.uleb128 0x19
 4633 0229 03       		.uleb128 0x3
 4634 022a 0E       		.uleb128 0xe
 4635 022b 3A       		.uleb128 0x3a
 4636 022c 0B       		.uleb128 0xb
 4637 022d 3B       		.uleb128 0x3b
 4638 022e 05       		.uleb128 0x5
 4639 022f 49       		.uleb128 0x49
 4640 0230 13       		.uleb128 0x13
 4641 0231 11       		.uleb128 0x11
 4642 0232 01       		.uleb128 0x1
 4643 0233 12       		.uleb128 0x12
 4644 0234 06       		.uleb128 0x6
 4645 0235 40       		.uleb128 0x40
 4646 0236 18       		.uleb128 0x18
 4647 0237 9742     		.uleb128 0x2117
 4648 0239 19       		.uleb128 0x19
 4649 023a 00       		.byte	0
 4650 023b 00       		.byte	0
 4651 023c 24       		.uleb128 0x24
 4652 023d 34       		.uleb128 0x34
 4653 023e 00       		.byte	0
 4654 023f 03       		.uleb128 0x3
 4655 0240 0E       		.uleb128 0xe
 4656 0241 3A       		.uleb128 0x3a
 4657 0242 0B       		.uleb128 0xb
 4658 0243 3B       		.uleb128 0x3b
 4659 0244 05       		.uleb128 0x5
 4660 0245 49       		.uleb128 0x49
 4661 0246 13       		.uleb128 0x13
 4662 0247 3F       		.uleb128 0x3f
 4663 0248 19       		.uleb128 0x19
 4664 0249 3C       		.uleb128 0x3c
 4665 024a 19       		.uleb128 0x19
 4666 024b 00       		.byte	0
 4667 024c 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 101


 4668 024d 25       		.uleb128 0x25
 4669 024e 35       		.uleb128 0x35
 4670 024f 00       		.byte	0
 4671 0250 49       		.uleb128 0x49
 4672 0251 13       		.uleb128 0x13
 4673 0252 00       		.byte	0
 4674 0253 00       		.byte	0
 4675 0254 26       		.uleb128 0x26
 4676 0255 34       		.uleb128 0x34
 4677 0256 00       		.byte	0
 4678 0257 03       		.uleb128 0x3
 4679 0258 0E       		.uleb128 0xe
 4680 0259 3A       		.uleb128 0x3a
 4681 025a 0B       		.uleb128 0xb
 4682 025b 3B       		.uleb128 0x3b
 4683 025c 0B       		.uleb128 0xb
 4684 025d 49       		.uleb128 0x49
 4685 025e 13       		.uleb128 0x13
 4686 025f 3F       		.uleb128 0x3f
 4687 0260 19       		.uleb128 0x19
 4688 0261 02       		.uleb128 0x2
 4689 0262 18       		.uleb128 0x18
 4690 0263 00       		.byte	0
 4691 0264 00       		.byte	0
 4692 0265 00       		.byte	0
 4693              		.section	.debug_aranges,"",%progbits
 4694 0000 D4000000 		.4byte	0xd4
 4695 0004 0200     		.2byte	0x2
 4696 0006 00000000 		.4byte	.Ldebug_info0
 4697 000a 04       		.byte	0x4
 4698 000b 00       		.byte	0
 4699 000c 0000     		.2byte	0
 4700 000e 0000     		.2byte	0
 4701 0010 00000000 		.4byte	.LFB64
 4702 0014 44000000 		.4byte	.LFE64-.LFB64
 4703 0018 00000000 		.4byte	.LFB65
 4704 001c 6C000000 		.4byte	.LFE65-.LFB65
 4705 0020 00000000 		.4byte	.LFB66
 4706 0024 32000000 		.4byte	.LFE66-.LFB66
 4707 0028 00000000 		.4byte	.LFB67
 4708 002c 20000000 		.4byte	.LFE67-.LFB67
 4709 0030 00000000 		.4byte	.LFB68
 4710 0034 40000000 		.4byte	.LFE68-.LFB68
 4711 0038 00000000 		.4byte	.LFB69
 4712 003c DC000000 		.4byte	.LFE69-.LFB69
 4713 0040 00000000 		.4byte	.LFB70
 4714 0044 1C000000 		.4byte	.LFE70-.LFB70
 4715 0048 00000000 		.4byte	.LFB71
 4716 004c 28000000 		.4byte	.LFE71-.LFB71
 4717 0050 00000000 		.4byte	.LFB72
 4718 0054 C8000000 		.4byte	.LFE72-.LFB72
 4719 0058 00000000 		.4byte	.LFB73
 4720 005c FC000000 		.4byte	.LFE73-.LFB73
 4721 0060 00000000 		.4byte	.LFB74
 4722 0064 78000000 		.4byte	.LFE74-.LFB74
 4723 0068 00000000 		.4byte	.LFB75
 4724 006c 40010000 		.4byte	.LFE75-.LFB75
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 102


 4725 0070 00000000 		.4byte	.LFB76
 4726 0074 B4000000 		.4byte	.LFE76-.LFB76
 4727 0078 00000000 		.4byte	.LFB77
 4728 007c 1C000000 		.4byte	.LFE77-.LFB77
 4729 0080 00000000 		.4byte	.LFB78
 4730 0084 28000000 		.4byte	.LFE78-.LFB78
 4731 0088 00000000 		.4byte	.LFB79
 4732 008c 30010000 		.4byte	.LFE79-.LFB79
 4733 0090 00000000 		.4byte	.LFB80
 4734 0094 24000000 		.4byte	.LFE80-.LFB80
 4735 0098 00000000 		.4byte	.LFB81
 4736 009c BC000000 		.4byte	.LFE81-.LFB81
 4737 00a0 00000000 		.4byte	.LFB82
 4738 00a4 38010000 		.4byte	.LFE82-.LFB82
 4739 00a8 00000000 		.4byte	.LFB83
 4740 00ac 44010000 		.4byte	.LFE83-.LFB83
 4741 00b0 00000000 		.4byte	.LFB84
 4742 00b4 14000000 		.4byte	.LFE84-.LFB84
 4743 00b8 00000000 		.4byte	.LFB85
 4744 00bc 1A000000 		.4byte	.LFE85-.LFB85
 4745 00c0 00000000 		.4byte	.LFB86
 4746 00c4 2A000000 		.4byte	.LFE86-.LFB86
 4747 00c8 00000000 		.4byte	.LFB87
 4748 00cc 7C020000 		.4byte	.LFE87-.LFB87
 4749 00d0 00000000 		.4byte	0
 4750 00d4 00000000 		.4byte	0
 4751              		.section	.debug_ranges,"",%progbits
 4752              	.Ldebug_ranges0:
 4753 0000 06000000 		.4byte	.LBB9
 4754 0004 F2000000 		.4byte	.LBE9
 4755 0008 F4000000 		.4byte	.LBB11
 4756 000c 06010000 		.4byte	.LBE11
 4757 0010 00000000 		.4byte	0
 4758 0014 00000000 		.4byte	0
 4759 0018 00000000 		.4byte	.LFB64
 4760 001c 44000000 		.4byte	.LFE64
 4761 0020 00000000 		.4byte	.LFB65
 4762 0024 6C000000 		.4byte	.LFE65
 4763 0028 00000000 		.4byte	.LFB66
 4764 002c 32000000 		.4byte	.LFE66
 4765 0030 00000000 		.4byte	.LFB67
 4766 0034 20000000 		.4byte	.LFE67
 4767 0038 00000000 		.4byte	.LFB68
 4768 003c 40000000 		.4byte	.LFE68
 4769 0040 00000000 		.4byte	.LFB69
 4770 0044 DC000000 		.4byte	.LFE69
 4771 0048 00000000 		.4byte	.LFB70
 4772 004c 1C000000 		.4byte	.LFE70
 4773 0050 00000000 		.4byte	.LFB71
 4774 0054 28000000 		.4byte	.LFE71
 4775 0058 00000000 		.4byte	.LFB72
 4776 005c C8000000 		.4byte	.LFE72
 4777 0060 00000000 		.4byte	.LFB73
 4778 0064 FC000000 		.4byte	.LFE73
 4779 0068 00000000 		.4byte	.LFB74
 4780 006c 78000000 		.4byte	.LFE74
 4781 0070 00000000 		.4byte	.LFB75
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 103


 4782 0074 40010000 		.4byte	.LFE75
 4783 0078 00000000 		.4byte	.LFB76
 4784 007c B4000000 		.4byte	.LFE76
 4785 0080 00000000 		.4byte	.LFB77
 4786 0084 1C000000 		.4byte	.LFE77
 4787 0088 00000000 		.4byte	.LFB78
 4788 008c 28000000 		.4byte	.LFE78
 4789 0090 00000000 		.4byte	.LFB79
 4790 0094 30010000 		.4byte	.LFE79
 4791 0098 00000000 		.4byte	.LFB80
 4792 009c 24000000 		.4byte	.LFE80
 4793 00a0 00000000 		.4byte	.LFB81
 4794 00a4 BC000000 		.4byte	.LFE81
 4795 00a8 00000000 		.4byte	.LFB82
 4796 00ac 38010000 		.4byte	.LFE82
 4797 00b0 00000000 		.4byte	.LFB83
 4798 00b4 44010000 		.4byte	.LFE83
 4799 00b8 00000000 		.4byte	.LFB84
 4800 00bc 14000000 		.4byte	.LFE84
 4801 00c0 00000000 		.4byte	.LFB85
 4802 00c4 1A000000 		.4byte	.LFE85
 4803 00c8 00000000 		.4byte	.LFB86
 4804 00cc 2A000000 		.4byte	.LFE86
 4805 00d0 00000000 		.4byte	.LFB87
 4806 00d4 7C020000 		.4byte	.LFE87
 4807 00d8 00000000 		.4byte	0
 4808 00dc 00000000 		.4byte	0
 4809              		.section	.debug_line,"",%progbits
 4810              	.Ldebug_line0:
 4811 0000 4E050000 		.section	.debug_str,"MS",%progbits,1
 4811      0200EF01 
 4811      00000201 
 4811      FB0E0D00 
 4811      01010101 
 4812              	.LASF124:
 4813 0000 676D745F 		.ascii	"gmt_offset\000"
 4813      6F666673 
 4813      657400
 4814              	.LASF16:
 4815 000b 75696E74 		.ascii	"uint16\000"
 4815      313600
 4816              	.LASF60:
 4817 0012 76616C75 		.ascii	"value\000"
 4817      6500
 4818              	.LASF27:
 4819 0018 746D5F68 		.ascii	"tm_hour\000"
 4819      6F757200 
 4820              	.LASF32:
 4821 0020 746D5F79 		.ascii	"tm_yday\000"
 4821      64617900 
 4822              	.LASF4:
 4823 0028 5F5F7569 		.ascii	"__uint8_t\000"
 4823      6E74385F 
 4823      7400
 4824              	.LASF51:
 4825 0032 6C6F6E67 		.ascii	"longitude\000"
 4825      69747564 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 104


 4825      6500
 4826              	.LASF147:
 4827 003c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4827      43313120 
 4827      352E342E 
 4827      31203230 
 4827      31363036 
 4828 006f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4828      20726576 
 4828      6973696F 
 4828      6E203233 
 4828      37373135 
 4829 00a2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4829      66756E63 
 4829      74696F6E 
 4829      2D736563 
 4829      74696F6E 
 4830              	.LASF127:
 4831 00ca 6D6F6465 		.ascii	"modem_wakeup\000"
 4831      6D5F7761 
 4831      6B657570 
 4831      00
 4832              	.LASF10:
 4833 00d7 6C6F6E67 		.ascii	"long long unsigned int\000"
 4833      206C6F6E 
 4833      6720756E 
 4833      7369676E 
 4833      65642069 
 4834              	.LASF111:
 4835 00ee 53524543 		.ascii	"SRECV\000"
 4835      5600
 4836              	.LASF112:
 4837 00f4 73616D70 		.ascii	"sample_freq\000"
 4837      6C655F66 
 4837      72657100 
 4838              	.LASF133:
 4839 0100 6D6F6465 		.ascii	"modem_state\000"
 4839      6D5F7374 
 4839      61746500 
 4840              	.LASF92:
 4841 010c 74657374 		.ascii	"test\000"
 4841      00
 4842              	.LASF132:
 4843 0111 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4843      52784275 
 4843      66666572 
 4843      00
 4844              	.LASF135:
 4845 011e 6D6F6465 		.ascii	"modem_stats\000"
 4845      6D5F7374 
 4845      61747300 
 4846              	.LASF9:
 4847 012a 6C6F6E67 		.ascii	"long long int\000"
 4847      206C6F6E 
 4847      6720696E 
 4847      7400
 4848              	.LASF0:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 105


 4849 0138 7369676E 		.ascii	"signed char\000"
 4849      65642063 
 4849      68617200 
 4850              	.LASF44:
 4851 0144 65636E6F 		.ascii	"ecno\000"
 4851      00
 4852              	.LASF47:
 4853 0149 74696D65 		.ascii	"time_to_network_connect\000"
 4853      5F746F5F 
 4853      6E657477 
 4853      6F726B5F 
 4853      636F6E6E 
 4854              	.LASF141:
 4855 0161 68747470 		.ascii	"http_body\000"
 4855      5F626F64 
 4855      7900
 4856              	.LASF103:
 4857 016b 7365745F 		.ascii	"set_up_internet_connection\000"
 4857      75705F69 
 4857      6E746572 
 4857      6E65745F 
 4857      636F6E6E 
 4858              	.LASF123:
 4859 0186 7365636F 		.ascii	"second\000"
 4859      6E6400
 4860              	.LASF119:
 4861 018d 79656172 		.ascii	"year\000"
 4861      00
 4862              	.LASF6:
 4863 0192 6C6F6E67 		.ascii	"long int\000"
 4863      20696E74 
 4863      00
 4864              	.LASF125:
 4865 019b 6D6F6465 		.ascii	"modem_get_state\000"
 4865      6D5F6765 
 4865      745F7374 
 4865      61746500 
 4866              	.LASF52:
 4867 01ab 616C7469 		.ascii	"altitude\000"
 4867      74756465 
 4867      00
 4868              	.LASF15:
 4869 01b4 75696E74 		.ascii	"uint8\000"
 4869      3800
 4870              	.LASF66:
 4871 01ba 6E6F6465 		.ascii	"node_id\000"
 4871      5F696400 
 4872              	.LASF21:
 4873 01c2 646F7562 		.ascii	"double\000"
 4873      6C6500
 4874              	.LASF19:
 4875 01c9 696E7433 		.ascii	"int32\000"
 4875      3200
 4876              	.LASF115:
 4877 01cf 6D6F6465 		.ascii	"modem_configure_settings\000"
 4877      6D5F636F 
 4877      6E666967 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 106


 4877      7572655F 
 4877      73657474 
 4878              	.LASF93:
 4879 01e8 6E657477 		.ascii	"network_time\000"
 4879      6F726B5F 
 4879      74696D65 
 4879      00
 4880              	.LASF3:
 4881 01f5 73686F72 		.ascii	"short unsigned int\000"
 4881      7420756E 
 4881      7369676E 
 4881      65642069 
 4881      6E7400
 4882              	.LASF17:
 4883 0208 75696E74 		.ascii	"uint32\000"
 4883      333200
 4884              	.LASF89:
 4885 020f 696E7465 		.ascii	"interval\000"
 4885      7276616C 
 4885      00
 4886              	.LASF7:
 4887 0218 5F5F7569 		.ascii	"__uint32_t\000"
 4887      6E743332 
 4887      5F7400
 4888              	.LASF117:
 4889 0223 6D6F6465 		.ascii	"modem_get_network_time\000"
 4889      6D5F6765 
 4889      745F6E65 
 4889      74776F72 
 4889      6B5F7469 
 4890              	.LASF29:
 4891 023a 746D5F6D 		.ascii	"tm_mon\000"
 4891      6F6E00
 4892              	.LASF70:
 4893 0241 65705F70 		.ascii	"ep_pswd\000"
 4893      73776400 
 4894              	.LASF58:
 4895 0249 64656275 		.ascii	"debug_level\000"
 4895      675F6C65 
 4895      76656C00 
 4896              	.LASF126:
 4897 0255 6D6F6465 		.ascii	"modem_sleep\000"
 4897      6D5F736C 
 4897      65657000 
 4898              	.LASF108:
 4899 0261 75706461 		.ascii	"updatable_parameters_initialize\000"
 4899      7461626C 
 4899      655F7061 
 4899      72616D65 
 4899      74657273 
 4900              	.LASF30:
 4901 0281 746D5F79 		.ascii	"tm_year\000"
 4901      65617200 
 4902              	.LASF120:
 4903 0289 6D6F6E74 		.ascii	"month\000"
 4903      6800
 4904              	.LASF75:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 107


 4905 028f 70696E73 		.ascii	"pins_configure_active\000"
 4905      5F636F6E 
 4905      66696775 
 4905      72655F61 
 4905      63746976 
 4906              	.LASF62:
 4907 02a5 6B65795F 		.ascii	"key_value_t\000"
 4907      76616C75 
 4907      655F7400 
 4908              	.LASF80:
 4909 02b1 7077725F 		.ascii	"pwr_check\000"
 4909      63686563 
 4909      6B00
 4910              	.LASF8:
 4911 02bb 6C6F6E67 		.ascii	"long unsigned int\000"
 4911      20756E73 
 4911      69676E65 
 4911      6420696E 
 4911      7400
 4912              	.LASF95:
 4913 02cd 65787472 		.ascii	"extract_string\000"
 4913      6163745F 
 4913      73747269 
 4913      6E6700
 4914              	.LASF85:
 4915 02dc 74696D65 		.ascii	"timeout\000"
 4915      6F757400 
 4916              	.LASF109:
 4917 02e4 6765745F 		.ascii	"get_cell_network_stats\000"
 4917      63656C6C 
 4917      5F6E6574 
 4917      776F726B 
 4917      5F737461 
 4918              	.LASF69:
 4919 02fb 65705F75 		.ascii	"ep_user\000"
 4919      73657200 
 4920              	.LASF53:
 4921 0303 74696D65 		.ascii	"time_to_lock\000"
 4921      5F746F5F 
 4921      6C6F636B 
 4921      00
 4922              	.LASF139:
 4923 0310 64617461 		.ascii	"data\000"
 4923      00
 4924              	.LASF68:
 4925 0315 65705F70 		.ascii	"ep_port\000"
 4925      6F727400 
 4926              	.LASF33:
 4927 031d 746D5F69 		.ascii	"tm_isdst\000"
 4927      73647374 
 4927      00
 4928              	.LASF63:
 4929 0326 6D6F6465 		.ascii	"modem_info\000"
 4929      6D5F696E 
 4929      666F00
 4930              	.LASF67:
 4931 0331 65705F68 		.ascii	"ep_host\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 108


 4931      6F737400 
 4932              	.LASF64:
 4933 0339 63686970 		.ascii	"chip_uniqueId\000"
 4933      5F756E69 
 4933      71756549 
 4933      6400
 4934              	.LASF90:
 4935 0347 6D6F6465 		.ascii	"modem_power_up\000"
 4935      6D5F706F 
 4935      7765725F 
 4935      757000
 4936              	.LASF148:
 4937 0356 6D6F6465 		.ascii	"modem.c\000"
 4937      6D2E6300 
 4938              	.LASF97:
 4939 035e 62656769 		.ascii	"beginMarker\000"
 4939      6E4D6172 
 4939      6B657200 
 4940              	.LASF99:
 4941 036a 74617267 		.ascii	"target\000"
 4941      657400
 4942              	.LASF48:
 4943 0371 74696D65 		.ascii	"time_to_acquire_ip\000"
 4943      5F746F5F 
 4943      61637175 
 4943      6972655F 
 4943      697000
 4944              	.LASF98:
 4945 0384 656E644D 		.ascii	"endMarker\000"
 4945      61726B65 
 4945      7200
 4946              	.LASF2:
 4947 038e 73686F72 		.ascii	"short int\000"
 4947      7420696E 
 4947      7400
 4948              	.LASF118:
 4949 0398 65706F63 		.ascii	"epoch_time\000"
 4949      685F7469 
 4949      6D6500
 4950              	.LASF5:
 4951 03a3 5F5F696E 		.ascii	"__int32_t\000"
 4951      7433325F 
 4951      7400
 4952              	.LASF96:
 4953 03ad 66726F6D 		.ascii	"from\000"
 4953      00
 4954              	.LASF102:
 4955 03b2 63726567 		.ascii	"creg\000"
 4955      00
 4956              	.LASF114:
 4957 03b7 64656275 		.ascii	"debug_freq\000"
 4957      675F6672 
 4957      657100
 4958              	.LASF86:
 4959 03c2 61745F61 		.ascii	"at_attempt\000"
 4959      7474656D 
 4959      707400
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 109


 4960              	.LASF94:
 4961 03cd 61745F77 		.ascii	"at_write_command\000"
 4961      72697465 
 4961      5F636F6D 
 4961      6D616E64 
 4961      00
 4962              	.LASF65:
 4963 03de 7379735F 		.ascii	"sys_info_t\000"
 4963      696E666F 
 4963      5F7400
 4964              	.LASF59:
 4965 03e9 75706461 		.ascii	"updatable_parameters_t\000"
 4965      7461626C 
 4965      655F7061 
 4965      72616D65 
 4965      74657273 
 4966              	.LASF113:
 4967 0400 7265706F 		.ascii	"report_freq\000"
 4967      72745F66 
 4967      72657100 
 4968              	.LASF137:
 4969 040c 64617461 		.ascii	"dataPointsInStack\000"
 4969      506F696E 
 4969      7473496E 
 4969      53746163 
 4969      6B00
 4970              	.LASF26:
 4971 041e 746D5F6D 		.ascii	"tm_min\000"
 4971      696E00
 4972              	.LASF24:
 4973 0425 73697A65 		.ascii	"sizetype\000"
 4973      74797065 
 4973      00
 4974              	.LASF101:
 4975 042e 69735F63 		.ascii	"is_connected_to_cell_network\000"
 4975      6F6E6E65 
 4975      63746564 
 4975      5F746F5F 
 4975      63656C6C 
 4976              	.LASF145:
 4977 044b 75617274 		.ascii	"uart_received_string\000"
 4977      5F726563 
 4977      65697665 
 4977      645F7374 
 4977      72696E67 
 4978              	.LASF50:
 4979 0460 6C617469 		.ascii	"latitude\000"
 4979      74756465 
 4979      00
 4980              	.LASF34:
 4981 0469 74657374 		.ascii	"test_name\000"
 4981      5F6E616D 
 4981      6500
 4982              	.LASF91:
 4983 0473 6D6F6465 		.ascii	"modem_test\000"
 4983      6D5F7465 
 4983      737400
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 110


 4984              	.LASF131:
 4985 047e 6D617463 		.ascii	"match\000"
 4985      6800
 4986              	.LASF136:
 4987 0484 75706461 		.ascii	"updatable_parameters\000"
 4987      7461626C 
 4987      655F7061 
 4987      72616D65 
 4987      74657273 
 4988              	.LASF121:
 4989 0499 686F7572 		.ascii	"hour\000"
 4989      00
 4990              	.LASF83:
 4991 049e 636F6D6D 		.ascii	"commands\000"
 4991      616E6473 
 4991      00
 4992              	.LASF87:
 4993 04a7 636F6D70 		.ascii	"compare_location\000"
 4993      6172655F 
 4993      6C6F6361 
 4993      74696F6E 
 4993      00
 4994              	.LASF20:
 4995 04b8 666C6F61 		.ascii	"float\000"
 4995      7400
 4996              	.LASF73:
 4997 04be 6D6F6465 		.ascii	"modem_initialize\000"
 4997      6D5F696E 
 4997      69746961 
 4997      6C697A65 
 4997      00
 4998              	.LASF107:
 4999 04cf 746F6B65 		.ascii	"token\000"
 4999      6E00
 5000              	.LASF149:
 5001 04d5 433A5C55 		.ascii	"C:\\Users\\hail\\Desktop\\Brooke Research\\notoriOS"
 5001      73657273 
 5001      5C686169 
 5001      6C5C4465 
 5001      736B746F 
 5002 0503 5C6E6F74 		.ascii	"\\notoriOS\\notoriOS.cydsn\000"
 5002      6F72694F 
 5002      535C6E6F 
 5002      746F7269 
 5002      4F532E63 
 5003              	.LASF104:
 5004 051c 6973725F 		.ascii	"isr_telit_rx\000"
 5004      74656C69 
 5004      745F7278 
 5004      00
 5005              	.LASF13:
 5006 0529 696E7433 		.ascii	"int32_t\000"
 5006      325F7400 
 5007              	.LASF1:
 5008 0531 756E7369 		.ascii	"unsigned char\000"
 5008      676E6564 
 5008      20636861 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 111


 5008      7200
 5009              	.LASF144:
 5010 053f 73797374 		.ascii	"system_settings\000"
 5010      656D5F73 
 5010      65747469 
 5010      6E677300 
 5011              	.LASF88:
 5012 054f 64656C61 		.ascii	"delay\000"
 5012      7900
 5013              	.LASF45:
 5014 0555 72737271 		.ascii	"rsrq\000"
 5014      00
 5015              	.LASF57:
 5016 055a 73796E63 		.ascii	"sync_time\000"
 5016      5F74696D 
 5016      6500
 5017              	.LASF106:
 5018 0564 63657371 		.ascii	"cesq\000"
 5018      00
 5019              	.LASF43:
 5020 0569 72736370 		.ascii	"rscp\000"
 5020      00
 5021              	.LASF128:
 5022 056e 6D6F6465 		.ascii	"modem_get_gps_coordinates\000"
 5022      6D5F6765 
 5022      745F6770 
 5022      735F636F 
 5022      6F726469 
 5023              	.LASF37:
 5024 0588 74657374 		.ascii	"test_t\000"
 5024      5F7400
 5025              	.LASF143:
 5026 058f 73797374 		.ascii	"system_info\000"
 5026      656D5F69 
 5026      6E666F00 
 5027              	.LASF40:
 5028 059b 696D6569 		.ascii	"imei\000"
 5028      00
 5029              	.LASF36:
 5030 05a0 72656173 		.ascii	"reason\000"
 5030      6F6E00
 5031              	.LASF46:
 5032 05a7 72737270 		.ascii	"rsrp\000"
 5032      00
 5033              	.LASF49:
 5034 05ac 6D6F6465 		.ascii	"modem_stats_t\000"
 5034      6D5F7374 
 5034      6174735F 
 5034      7400
 5035              	.LASF82:
 5036 05ba 75617274 		.ascii	"uart_string_reset\000"
 5036      5F737472 
 5036      696E675F 
 5036      72657365 
 5036      7400
 5037              	.LASF31:
 5038 05cc 746D5F77 		.ascii	"tm_wday\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 112


 5038      64617900 
 5039              	.LASF81:
 5040 05d4 6D6F6465 		.ascii	"modem_soft_power_cycle\000"
 5040      6D5F736F 
 5040      66745F70 
 5040      6F776572 
 5040      5F637963 
 5041              	.LASF23:
 5042 05eb 6C6F6E67 		.ascii	"long double\000"
 5042      20646F75 
 5042      626C6500 
 5043              	.LASF22:
 5044 05f7 63686172 		.ascii	"char\000"
 5044      00
 5045              	.LASF100:
 5046 05fc 6D6F6465 		.ascii	"modem_process_tasks\000"
 5046      6D5F7072 
 5046      6F636573 
 5046      735F7461 
 5046      736B7300 
 5047              	.LASF11:
 5048 0610 756E7369 		.ascii	"unsigned int\000"
 5048      676E6564 
 5048      20696E74 
 5048      00
 5049              	.LASF116:
 5050 061d 4346554E 		.ascii	"CFUN\000"
 5050      00
 5051              	.LASF39:
 5052 0622 6D6F6465 		.ascii	"model_id\000"
 5052      6C5F6964 
 5052      00
 5053              	.LASF142:
 5054 062b 68747470 		.ascii	"http_route\000"
 5054      5F726F75 
 5054      746500
 5055              	.LASF41:
 5056 0636 6D6F6465 		.ascii	"modem_info_t\000"
 5056      6D5F696E 
 5056      666F5F74 
 5056      00
 5057              	.LASF55:
 5058 0643 6770735F 		.ascii	"gps_t\000"
 5058      7400
 5059              	.LASF146:
 5060 0649 75617274 		.ascii	"uart_string_index\000"
 5060      5F737472 
 5060      696E675F 
 5060      696E6465 
 5060      7800
 5061              	.LASF56:
 5062 065b 6D656173 		.ascii	"measure_time\000"
 5062      7572655F 
 5062      74696D65 
 5062      00
 5063              	.LASF105:
 5064 0668 69735F63 		.ascii	"is_connected_to_internet\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 113


 5064      6F6E6E65 
 5064      63746564 
 5064      5F746F5F 
 5064      696E7465 
 5065              	.LASF134:
 5066 0681 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 5066      6D5F7374 
 5066      6172745F 
 5066      74696D65 
 5066      5F737461 
 5067              	.LASF130:
 5068 0698 6770735F 		.ascii	"gps_status\000"
 5068      73746174 
 5068      757300
 5069              	.LASF74:
 5070 06a3 70696E73 		.ascii	"pins_configure_inactive\000"
 5070      5F636F6E 
 5070      66696775 
 5070      72655F69 
 5070      6E616374 
 5071              	.LASF38:
 5072 06bb 73696D5F 		.ascii	"sim_id\000"
 5072      696400
 5073              	.LASF28:
 5074 06c2 746D5F6D 		.ascii	"tm_mday\000"
 5074      64617900 
 5075              	.LASF54:
 5076 06ca 76616C69 		.ascii	"valid\000"
 5076      6400
 5077              	.LASF122:
 5078 06d0 6D696E75 		.ascii	"minute\000"
 5078      746500
 5079              	.LASF14:
 5080 06d7 75696E74 		.ascii	"uint32_t\000"
 5080      33325F74 
 5080      00
 5081              	.LASF25:
 5082 06e0 746D5F73 		.ascii	"tm_sec\000"
 5082      656300
 5083              	.LASF110:
 5084 06e7 6765745F 		.ascii	"get_updated_parameters_from_malcom\000"
 5084      75706461 
 5084      7465645F 
 5084      70617261 
 5084      6D657465 
 5085              	.LASF35:
 5086 070a 73746174 		.ascii	"status\000"
 5086      757300
 5087              	.LASF138:
 5088 0711 64617461 		.ascii	"dataPointsInStackDesired\000"
 5088      506F696E 
 5088      7473496E 
 5088      53746163 
 5088      6B446573 
 5089              	.LASF72:
 5090 072a 7379735F 		.ascii	"sys_settings_t\000"
 5090      73657474 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccgmQsrb.s 			page 114


 5090      696E6773 
 5090      5F7400
 5091              	.LASF12:
 5092 0739 75696E74 		.ascii	"uint8_t\000"
 5092      385F7400 
 5093              	.LASF71:
 5094 0741 65705F64 		.ascii	"ep_database\000"
 5094      61746162 
 5094      61736500 
 5095              	.LASF18:
 5096 074d 696E7431 		.ascii	"int16\000"
 5096      3600
 5097              	.LASF77:
 5098 0753 61745F72 		.ascii	"at_ready\000"
 5098      65616479 
 5098      00
 5099              	.LASF78:
 5100 075c 61747465 		.ascii	"attempts\000"
 5100      6D707473 
 5100      00
 5101              	.LASF79:
 5102 0765 626F6F74 		.ascii	"boot_time\000"
 5102      5F74696D 
 5102      6500
 5103              	.LASF84:
 5104 076f 65787065 		.ascii	"expected_response\000"
 5104      63746564 
 5104      5F726573 
 5104      706F6E73 
 5104      6500
 5105              	.LASF42:
 5106 0781 72737369 		.ascii	"rssi\000"
 5106      00
 5107              	.LASF129:
 5108 0786 6C6F636B 		.ascii	"lock_time\000"
 5108      5F74696D 
 5108      6500
 5109              	.LASF140:
 5110 0790 68747470 		.ascii	"http_request\000"
 5110      5F726571 
 5110      75657374 
 5110      00
 5111              	.LASF76:
 5112 079d 6D6F6465 		.ascii	"modem_power_down\000"
 5112      6D5F706F 
 5112      7765725F 
 5112      646F776E 
 5112      00
 5113              	.LASF61:
 5114 07ae 74696D65 		.ascii	"timeStamp\000"
 5114      5374616D 
 5114      7000
 5115              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
