ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"modem.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.syntax unified
  20              		.global _printf_float
  21              		.thumb
  22              		.syntax unified
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,16,4
  27              		.comm	updatable_parameters,3,4
  28              		.comm	dataPointsInStack,2,2
  29              		.comm	dataPointsInStackDesired,2,2
  30              		.comm	data,6600,4
  31              		.comm	http_request,10000,4
  32              		.comm	http_body,10000,4
  33              		.comm	http_route,200,4
  34              		.comm	system_info,28,4
  35              		.comm	system_settings,104,4
  36              		.comm	alarmMeasure,6,4
  37              		.comm	timeToMeasure,1,1
  38              		.comm	alarmSync,6,4
  39              		.comm	timeToSync,1,1
  40              		.comm	timeToSycnRemoteParams,1,1
  41              		.comm	try_counter,1,1
  42              		.comm	uart_received_string,1024,4
  43              		.global	uart_string_index
  44              		.bss
  45              		.align	1
  46              		.type	uart_string_index, %object
  47              		.size	uart_string_index, 2
  48              	uart_string_index:
  49 0000 0000     		.space	2
  50              		.section	.text.isr_telit_rx,"ax",%progbits
  51              		.align	2
  52              		.global	isr_telit_rx
  53              		.thumb
  54              		.thumb_func
  55              		.type	isr_telit_rx, %function
  56              	isr_telit_rx:
  57              	.LFB64:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 2


  58              		.file 1 "modem.c"
   1:modem.c       **** //Methods for Telit modem 
   2:modem.c       **** #include "modem.h"
   3:modem.c       **** #include "notoriOS.h"
   4:modem.c       **** #include "debug.h"
   5:modem.c       **** #include "data.h"
   6:modem.c       **** #include <math.h>
   7:modem.c       **** #include <stdio.h>
   8:modem.c       **** 
   9:modem.c       **** char uart_received_string[1024];
  10:modem.c       **** int16 uart_string_index=0;
  11:modem.c       **** 
  12:modem.c       **** #define DEFAULT_AT_TIMEOUT 2000u // Send command and wait 2000 ms
  13:modem.c       **** #define NO_AT_TIMEOUT 0u // Send command, no timeout/ don't wait 
  14:modem.c       **** 
  15:modem.c       **** #define TIMEOUT_NETWORK_CONNECT 200 //seconds
  16:modem.c       **** #define TIMEOUT_IP_ACQUIRE 230 //seconds (cummulatinve) add to TIMEOUT_NETWORK_CONNECT
  17:modem.c       **** 
  18:modem.c       **** CY_ISR_PROTO(isr_telit_rx); // Declares a custom ISR function "isr_telit_rx" using the CY_ISR_PROTO
  19:modem.c       **** 
  20:modem.c       **** // Define the custom ISR function "isr_telit_rx" using the CY_ISR macro
  21:modem.c       **** // Get each character from Telit and saves it to uart_received_string
  22:modem.c       **** CY_ISR(isr_telit_rx){      
  59              		.loc 1 22 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 1, uses_anonymous_args = 0
  63 0000 98B5     		push	{r3, r4, r7, lr}
  64              		.cfi_def_cfa_offset 16
  65              		.cfi_offset 3, -16
  66              		.cfi_offset 4, -12
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
  69 0002 00AF     		add	r7, sp, #0
  70              		.cfi_def_cfa_register 7
  23:modem.c       ****     // UART_Telit_GetRxBufferSize() returns the number of received bytes available in the RX buffer
  24:modem.c       ****     while(UART_Telit_GetRxBufferSize()==1){
  71              		.loc 1 24 0
  72 0004 12E0     		b	.L2
  73              	.L3:
  25:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  74              		.loc 1 25 0
  75 0006 0D4B     		ldr	r3, .L4
  76 0008 B3F90030 		ldrsh	r3, [r3]
  77 000c 1C46     		mov	r4, r3
  78 000e FFF7FEFF 		bl	UART_Telit_GetChar
  79 0012 0346     		mov	r3, r0
  80 0014 1A46     		mov	r2, r3
  81 0016 0A4B     		ldr	r3, .L4+4
  82 0018 1A55     		strb	r2, [r3, r4]
  26:modem.c       ****         uart_string_index++;
  83              		.loc 1 26 0
  84 001a 084B     		ldr	r3, .L4
  85 001c B3F90030 		ldrsh	r3, [r3]
  86 0020 9BB2     		uxth	r3, r3
  87 0022 0133     		adds	r3, r3, #1
  88 0024 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 3


  89 0026 1AB2     		sxth	r2, r3
  90 0028 044B     		ldr	r3, .L4
  91 002a 1A80     		strh	r2, [r3]	@ movhi
  92              	.L2:
  24:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  93              		.loc 1 24 0
  94 002c FFF7FEFF 		bl	UART_Telit_GetRxBufferSize
  95 0030 0346     		mov	r3, r0
  96 0032 012B     		cmp	r3, #1
  97 0034 E7D0     		beq	.L3
  27:modem.c       ****     }
  28:modem.c       **** 
  29:modem.c       **** }
  98              		.loc 1 29 0
  99 0036 00BF     		nop
 100 0038 98BD     		pop	{r3, r4, r7, pc}
 101              	.L5:
 102 003a 00BF     		.align	2
 103              	.L4:
 104 003c 00000000 		.word	uart_string_index
 105 0040 00000000 		.word	uart_received_string
 106              		.cfi_endproc
 107              	.LFE64:
 108              		.size	isr_telit_rx, .-isr_telit_rx
 109              		.section	.text.modem_initialize,"ax",%progbits
 110              		.align	2
 111              		.global	modem_initialize
 112              		.thumb
 113              		.thumb_func
 114              		.type	modem_initialize, %function
 115              	modem_initialize:
 116              	.LFB65:
  30:modem.c       **** 
  31:modem.c       **** // Initialize the modem
  32:modem.c       **** void modem_initialize(){
 117              		.loc 1 32 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 1, uses_anonymous_args = 0
 121 0000 80B5     		push	{r7, lr}
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 7, -8
 124              		.cfi_offset 14, -4
 125 0002 00AF     		add	r7, sp, #0
 126              		.cfi_def_cfa_register 7
  33:modem.c       ****     // Don't do much except make sure that all the modem pins are pulled low
  34:modem.c       ****     // Also make sure that the TX PIN is fully disabled
  35:modem.c       ****     pins_configure_inactive();
 127              		.loc 1 35 0
 128 0004 FFF7FEFF 		bl	pins_configure_inactive
  36:modem.c       ****     modem_state = 0;
 129              		.loc 1 36 0
 130 0008 154B     		ldr	r3, .L7
 131 000a 0022     		movs	r2, #0
 132 000c 1A70     		strb	r2, [r3]
  37:modem.c       ****     //initialize states
  38:modem.c       ****     modem_info.imei[0] = '\0';
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 4


 133              		.loc 1 38 0
 134 000e 154B     		ldr	r3, .L7+4
 135 0010 0022     		movs	r2, #0
 136 0012 83F82820 		strb	r2, [r3, #40]
  39:modem.c       ****     modem_info.model_id[0] = '\0';
 137              		.loc 1 39 0
 138 0016 134B     		ldr	r3, .L7+4
 139 0018 0022     		movs	r2, #0
 140 001a 1A75     		strb	r2, [r3, #20]
  40:modem.c       ****     modem_info.sim_id[0] = '\0';
 141              		.loc 1 40 0
 142 001c 114B     		ldr	r3, .L7+4
 143 001e 0022     		movs	r2, #0
 144 0020 1A70     		strb	r2, [r3]
  41:modem.c       ****     modem_stats.rssi = 0;
 145              		.loc 1 41 0
 146 0022 114B     		ldr	r3, .L7+8
 147 0024 0022     		movs	r2, #0
 148 0026 1A70     		strb	r2, [r3]
  42:modem.c       ****     modem_stats.ber = 0;
 149              		.loc 1 42 0
 150 0028 0F4B     		ldr	r3, .L7+8
 151 002a 0022     		movs	r2, #0
 152 002c 5A70     		strb	r2, [r3, #1]
  43:modem.c       ****     modem_stats.rscp = 0;
 153              		.loc 1 43 0
 154 002e 0E4B     		ldr	r3, .L7+8
 155 0030 0022     		movs	r2, #0
 156 0032 9A70     		strb	r2, [r3, #2]
  44:modem.c       ****     modem_stats.ecno = 0;
 157              		.loc 1 44 0
 158 0034 0C4B     		ldr	r3, .L7+8
 159 0036 0022     		movs	r2, #0
 160 0038 DA70     		strb	r2, [r3, #3]
  45:modem.c       ****     modem_stats.rsrq = 0;
 161              		.loc 1 45 0
 162 003a 0B4B     		ldr	r3, .L7+8
 163 003c 0022     		movs	r2, #0
 164 003e 1A71     		strb	r2, [r3, #4]
  46:modem.c       ****     modem_stats.rsrp = 0;
 165              		.loc 1 46 0
 166 0040 094B     		ldr	r3, .L7+8
 167 0042 0022     		movs	r2, #0
 168 0044 5A71     		strb	r2, [r3, #5]
  47:modem.c       ****     modem_stats.time_to_acquire_ip = 0;
 169              		.loc 1 47 0
 170 0046 084B     		ldr	r3, .L7+8
 171 0048 0022     		movs	r2, #0
 172 004a DA60     		str	r2, [r3, #12]
  48:modem.c       ****     modem_stats.time_to_network_connect = 0;
 173              		.loc 1 48 0
 174 004c 064B     		ldr	r3, .L7+8
 175 004e 0022     		movs	r2, #0
 176 0050 9A60     		str	r2, [r3, #8]
  49:modem.c       ****     // Disable the RX Pin interrupt, and only enable it during long timeouts
  50:modem.c       ****     // Rx_Telit_SetInterruptMode(): Configures the interrupt mode for each of the Pins component's 
  51:modem.c       ****     // Rx_Telit_0_INTR selects the first pin in the list, and Rx_Telit_INTR_NONE disables the Rx pi
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 5


  52:modem.c       ****     Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 177              		.loc 1 52 0
 178 0052 0021     		movs	r1, #0
 179 0054 4020     		movs	r0, #64
 180 0056 FFF7FEFF 		bl	Rx_Telit_SetInterruptMode
  53:modem.c       ****     
  54:modem.c       **** }
 181              		.loc 1 54 0
 182 005a 00BF     		nop
 183 005c 80BD     		pop	{r7, pc}
 184              	.L8:
 185 005e 00BF     		.align	2
 186              	.L7:
 187 0060 00000000 		.word	modem_state
 188 0064 00000000 		.word	modem_info
 189 0068 00000000 		.word	modem_stats
 190              		.cfi_endproc
 191              	.LFE65:
 192              		.size	modem_initialize, .-modem_initialize
 193              		.section	.text.pins_configure_inactive,"ax",%progbits
 194              		.align	2
 195              		.global	pins_configure_inactive
 196              		.thumb
 197              		.thumb_func
 198              		.type	pins_configure_inactive, %function
 199              	pins_configure_inactive:
 200              	.LFB66:
  55:modem.c       **** 
  56:modem.c       **** 
  57:modem.c       **** // To be used when the modem power is to be "killed" conpletely to conserve power
  58:modem.c       **** void pins_configure_inactive(){
 201              		.loc 1 58 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 1, uses_anonymous_args = 0
 205 0000 80B5     		push	{r7, lr}
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 209 0002 00AF     		add	r7, sp, #0
 210              		.cfi_def_cfa_register 7
  59:modem.c       ****    
  60:modem.c       ****    Telit_ControlReg_Write(0u); // Physically disconect UART pin
 211              		.loc 1 60 0
 212 0004 0020     		movs	r0, #0
 213 0006 FFF7FEFF 		bl	Telit_ControlReg_Write
  61:modem.c       ****    Rx_Telit_SetDriveMode(PIN_DM_STRONG); // Set drive mode
 214              		.loc 1 61 0
 215 000a 0C20     		movs	r0, #12
 216 000c FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  62:modem.c       **** 
  63:modem.c       ****    Pin_Telit_pwr_Write(OFF); // Kill power to modem (pulls pin low).
 217              		.loc 1 63 0
 218 0010 0020     		movs	r0, #0
 219 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  64:modem.c       **** 
  65:modem.c       ****    // Pull down all of these, just in case (turns the off).
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 6


  66:modem.c       ****    Rx_Telit_Write(OFF); 
 220              		.loc 1 66 0
 221 0016 0020     		movs	r0, #0
 222 0018 FFF7FEFF 		bl	Rx_Telit_Write
  67:modem.c       ****    Tx_Telit_Write(OFF);
 223              		.loc 1 67 0
 224 001c 0020     		movs	r0, #0
 225 001e FFF7FEFF 		bl	Tx_Telit_Write
  68:modem.c       ****    Pin_Telit_ONOFF_Write(OFF);
 226              		.loc 1 68 0
 227 0022 0020     		movs	r0, #0
 228 0024 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
  69:modem.c       ****    Pin_Telit_SWRDY_Write(OFF);
 229              		.loc 1 69 0
 230 0028 0020     		movs	r0, #0
 231 002a FFF7FEFF 		bl	Pin_Telit_SWRDY_Write
  70:modem.c       ****     
  71:modem.c       **** }
 232              		.loc 1 71 0
 233 002e 00BF     		nop
 234 0030 80BD     		pop	{r7, pc}
 235              		.cfi_endproc
 236              	.LFE66:
 237              		.size	pins_configure_inactive, .-pins_configure_inactive
 238 0032 00BF     		.section	.text.pins_configure_active,"ax",%progbits
 239              		.align	2
 240              		.global	pins_configure_active
 241              		.thumb
 242              		.thumb_func
 243              		.type	pins_configure_active, %function
 244              	pins_configure_active:
 245              	.LFB67:
  72:modem.c       **** 
  73:modem.c       **** // Turns on power and configures all UART pin modes
  74:modem.c       **** void pins_configure_active(){
 246              		.loc 1 74 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250 0000 80B5     		push	{r7, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
  75:modem.c       ****     
  76:modem.c       ****     Rx_Telit_SetDriveMode(PIN_DM_DIG_HIZ); // Power up. Set RX pin to High Impedance Digital mode.
 256              		.loc 1 76 0
 257 0004 0220     		movs	r0, #2
 258 0006 FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  77:modem.c       ****     Telit_ControlReg_Write(1u); // Pull Telit_ControlReg pin high (turns it on).
 259              		.loc 1 77 0
 260 000a 0120     		movs	r0, #1
 261 000c FFF7FEFF 		bl	Telit_ControlReg_Write
  78:modem.c       ****     Pin_Telit_pwr_Write(ON); // Pulls Telit_pwr pin high (turns it on).
 262              		.loc 1 78 0
 263 0010 0120     		movs	r0, #1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 7


 264 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  79:modem.c       ****     CyDelay(100u); // Give the MOSFET a few ms to stalbilise power 
 265              		.loc 1 79 0
 266 0016 6420     		movs	r0, #100
 267 0018 FFF7FEFF 		bl	CyDelay
  80:modem.c       **** }
 268              		.loc 1 80 0
 269 001c 00BF     		nop
 270 001e 80BD     		pop	{r7, pc}
 271              		.cfi_endproc
 272              	.LFE67:
 273              		.size	pins_configure_active, .-pins_configure_active
 274              		.section	.rodata
 275              		.align	2
 276              	.LC0:
 277 0000 4F4B00   		.ascii	"OK\000"
 278 0003 00       		.align	2
 279              	.LC1:
 280 0004 41542353 		.ascii	"AT#SHDN\015\000"
 280      48444E0D 
 280      00
 281              		.section	.text.modem_power_down,"ax",%progbits
 282              		.align	2
 283              		.global	modem_power_down
 284              		.thumb
 285              		.thumb_func
 286              		.type	modem_power_down, %function
 287              	modem_power_down:
 288              	.LFB68:
  81:modem.c       **** 
  82:modem.c       **** // Power down the modem -- completely "kill" modem to conserve power.
  83:modem.c       **** void modem_power_down(){
 289              		.loc 1 83 0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 1, uses_anonymous_args = 0
 293 0000 80B5     		push	{r7, lr}
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 7, -8
 296              		.cfi_offset 14, -4
 297 0002 00AF     		add	r7, sp, #0
 298              		.cfi_def_cfa_register 7
  84:modem.c       ****     // AT Command to modem for Software Shut Down - #SHDN
  85:modem.c       ****     // \r is carriage return, it is necessary for the modem to know it got a command
  86:modem.c       ****     at_write_command("AT#SHDN\r","OK",5000u); 
 299              		.loc 1 86 0
 300 0004 41F28832 		movw	r2, #5000
 301 0008 0A49     		ldr	r1, .L12
 302 000a 0B48     		ldr	r0, .L12+4
 303 000c FFF7FEFF 		bl	at_write_command
  87:modem.c       ****    
  88:modem.c       ****     // Soft power cycle makes sure that the modem is all the way on (like holding on button on for 
  89:modem.c       ****     modem_soft_power_cycle();
 304              		.loc 1 89 0
 305 0010 FFF7FEFF 		bl	modem_soft_power_cycle
  90:modem.c       ****     CyDelay(1000u);
 306              		.loc 1 90 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 8


 307 0014 4FF47A70 		mov	r0, #1000
 308 0018 FFF7FEFF 		bl	CyDelay
  91:modem.c       ****     
  92:modem.c       ****     UART_Telit_Stop(); // Disables the UART operation.
 309              		.loc 1 92 0
 310 001c FFF7FEFF 		bl	UART_Telit_Stop
  93:modem.c       ****     isr_telit_rx_Stop(); // Disables and removes the interrupt.
 311              		.loc 1 93 0
 312 0020 FFF7FEFF 		bl	isr_telit_rx_Stop
  94:modem.c       ****     pins_configure_inactive(); // We want the modem power to be "killed" completely to conserve pow
 313              		.loc 1 94 0
 314 0024 FFF7FEFF 		bl	pins_configure_inactive
  95:modem.c       ****     modem_state = MODEM_STATE_OFF;
 315              		.loc 1 95 0
 316 0028 044B     		ldr	r3, .L12+8
 317 002a 0022     		movs	r2, #0
 318 002c 1A70     		strb	r2, [r3]
  96:modem.c       ****     
  97:modem.c       **** }
 319              		.loc 1 97 0
 320 002e 00BF     		nop
 321 0030 80BD     		pop	{r7, pc}
 322              	.L13:
 323 0032 00BF     		.align	2
 324              	.L12:
 325 0034 00000000 		.word	.LC0
 326 0038 04000000 		.word	.LC1
 327 003c 00000000 		.word	modem_state
 328              		.cfi_endproc
 329              	.LFE68:
 330              		.size	modem_power_down, .-modem_power_down
 331              		.section	.rodata
 332 000d 000000   		.align	2
 333              	.LC2:
 334 0010 41544530 		.ascii	"ATE0\015\000"
 334      0D00
 335 0016 0000     		.align	2
 336              	.LC3:
 337 0018 4D6F6465 		.ascii	"Modem boot time: %d\000"
 337      6D20626F 
 337      6F742074 
 337      696D653A 
 337      20256400 
 338              		.align	2
 339              	.LC4:
 340 002c 4D6F6465 		.ascii	"Modem ready for AT commands after %d attempt(s).\000"
 340      6D207265 
 340      61647920 
 340      666F7220 
 340      41542063 
 341 005d 000000   		.align	2
 342              	.LC5:
 343 0060 4E6F2072 		.ascii	"No response from modem.\000"
 343      6573706F 
 343      6E736520 
 343      66726F6D 
 343      206D6F64 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 9


 344              		.section	.text.modem_power_up,"ax",%progbits
 345              		.align	2
 346              		.global	modem_power_up
 347              		.thumb
 348              		.thumb_func
 349              		.type	modem_power_up, %function
 350              	modem_power_up:
 351              	.LFB69:
  98:modem.c       **** 
  99:modem.c       **** // This puts all the modem pints into a state that won't leak power
 100:modem.c       **** // Please call restore_pins() to bring them abck to function when they are needed for UART
 101:modem.c       **** uint8 modem_power_up(){
 352              		.loc 1 101 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 8
 355              		@ frame_needed = 1, uses_anonymous_args = 0
 356 0000 80B5     		push	{r7, lr}
 357              		.cfi_def_cfa_offset 8
 358              		.cfi_offset 7, -8
 359              		.cfi_offset 14, -4
 360 0002 82B0     		sub	sp, sp, #8
 361              		.cfi_def_cfa_offset 16
 362 0004 00AF     		add	r7, sp, #0
 363              		.cfi_def_cfa_register 7
 102:modem.c       **** 
 103:modem.c       ****     pins_configure_active(); // Turns on power and configures all UART pin modes
 364              		.loc 1 103 0
 365 0006 FFF7FEFF 		bl	pins_configure_active
 104:modem.c       ****     UART_Telit_Start(); // Sets the initVar variable, calls the UART_Telit_Init() function, and the
 366              		.loc 1 104 0
 367 000a FFF7FEFF 		bl	UART_Telit_Start
 105:modem.c       ****     isr_telit_rx_StartEx(isr_telit_rx); // Sets up the interrupt and enables it. 
 368              		.loc 1 105 0
 369 000e 2C48     		ldr	r0, .L27
 370 0010 FFF7FEFF 		bl	isr_telit_rx_StartEx
 106:modem.c       **** 
 107:modem.c       ****     modem_soft_power_cycle(); // Soft power cycle makes sure that the modem is all the way on (like
 371              		.loc 1 107 0
 372 0014 FFF7FEFF 		bl	modem_soft_power_cycle
 108:modem.c       ****     
 109:modem.c       ****     // Turn off ECHO command (doesn't repeat your command back to you).
 110:modem.c       ****     uint8 at_ready = 0;
 373              		.loc 1 110 0
 374 0018 0023     		movs	r3, #0
 375 001a FB71     		strb	r3, [r7, #7]
 111:modem.c       ****     uint8 attempts = 0;
 376              		.loc 1 111 0
 377 001c 0023     		movs	r3, #0
 378 001e 3B71     		strb	r3, [r7, #4]
 112:modem.c       ****     // Create variable boot_time of the current time stamp.
 113:modem.c       ****     long boot_time = getTimeStamp();
 379              		.loc 1 113 0
 380 0020 FFF7FEFF 		bl	getTimeStamp
 381 0024 3860     		str	r0, [r7]
 382              	.LBB2:
 114:modem.c       ****     
 115:modem.c       ****     //it takes the 4G modem 10+secs (max 20) to boot up, so keep hitting it with AT commands until 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 10


 116:modem.c       ****     for(uint8 attempts = 0; attempts<3; attempts++){
 383              		.loc 1 116 0
 384 0026 0023     		movs	r3, #0
 385 0028 BB71     		strb	r3, [r7, #6]
 386 002a 1CE0     		b	.L15
 387              	.L22:
 388              	.LBB3:
 117:modem.c       ****         
 118:modem.c       ****         for(uint8 pwr_check = 0; pwr_check<20; pwr_check++){
 389              		.loc 1 118 0
 390 002c 0023     		movs	r3, #0
 391 002e 7B71     		strb	r3, [r7, #5]
 392 0030 0EE0     		b	.L16
 393              	.L19:
 119:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 120:modem.c       ****             if(at_write_command("ATE0\r","OK",1000u)){
 394              		.loc 1 120 0
 395 0032 4FF47A72 		mov	r2, #1000
 396 0036 2349     		ldr	r1, .L27+4
 397 0038 2348     		ldr	r0, .L27+8
 398 003a FFF7FEFF 		bl	at_write_command
 399 003e 0346     		mov	r3, r0
 400 0040 002B     		cmp	r3, #0
 401 0042 02D0     		beq	.L17
 121:modem.c       ****                 at_ready = 1;
 402              		.loc 1 121 0
 403 0044 0123     		movs	r3, #1
 404 0046 FB71     		strb	r3, [r7, #7]
 122:modem.c       ****                 break;
 405              		.loc 1 122 0
 406 0048 05E0     		b	.L18
 407              	.L17:
 118:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 408              		.loc 1 118 0 discriminator 2
 409 004a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 410 004c 0133     		adds	r3, r3, #1
 411 004e 7B71     		strb	r3, [r7, #5]
 412              	.L16:
 118:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 413              		.loc 1 118 0 is_stmt 0 discriminator 1
 414 0050 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 415 0052 132B     		cmp	r3, #19
 416 0054 EDD9     		bls	.L19
 417              	.L18:
 418              	.LBE3:
 123:modem.c       ****             }
 124:modem.c       ****         }
 125:modem.c       ****             
 126:modem.c       ****         if(at_ready == 1){
 419              		.loc 1 126 0 is_stmt 1
 420 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 421 0058 012B     		cmp	r3, #1
 422 005a 08D0     		beq	.L26
 127:modem.c       ****             break;
 128:modem.c       ****         }else{
 129:modem.c       ****             // Soft power cycle makes sure that the modem is all the way on (like holding on button
 130:modem.c       ****             modem_soft_power_cycle();
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 11


 423              		.loc 1 130 0 discriminator 2
 424 005c FFF7FEFF 		bl	modem_soft_power_cycle
 116:modem.c       ****         
 425              		.loc 1 116 0 discriminator 2
 426 0060 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 427 0062 0133     		adds	r3, r3, #1
 428 0064 BB71     		strb	r3, [r7, #6]
 429              	.L15:
 116:modem.c       ****         
 430              		.loc 1 116 0 is_stmt 0 discriminator 1
 431 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 432 0068 022B     		cmp	r3, #2
 433 006a DFD9     		bls	.L22
 434 006c 00E0     		b	.L21
 435              	.L26:
 127:modem.c       ****             break;
 436              		.loc 1 127 0 is_stmt 1
 437 006e 00BF     		nop
 438              	.L21:
 439              	.LBE2:
 131:modem.c       ****         }
 132:modem.c       ****     }
 133:modem.c       ****     // Calculate boot up time and save to variable boot_time.
 134:modem.c       ****     boot_time = getTimeStamp() - boot_time;
 440              		.loc 1 134 0
 441 0070 FFF7FEFF 		bl	getTimeStamp
 442 0074 0246     		mov	r2, r0
 443 0076 3B68     		ldr	r3, [r7]
 444 0078 D31A     		subs	r3, r2, r3
 445 007a 3B60     		str	r3, [r7]
 135:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Modem boot time: %d",boot_time);
 446              		.loc 1 135 0
 447 007c 3A68     		ldr	r2, [r7]
 448 007e 1349     		ldr	r1, .L27+12
 449 0080 0020     		movs	r0, #0
 450 0082 FFF7FEFF 		bl	printNotif
 136:modem.c       ****    
 137:modem.c       ****     if(at_ready == 1){
 451              		.loc 1 137 0
 452 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453 0088 012B     		cmp	r3, #1
 454 008a 0AD1     		bne	.L23
 138:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Modem ready for AT commands after %d attempt(s).",attempts);
 455              		.loc 1 138 0
 456 008c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 457 008e 1A46     		mov	r2, r3
 458 0090 0F49     		ldr	r1, .L27+16
 459 0092 0020     		movs	r0, #0
 460 0094 FFF7FEFF 		bl	printNotif
 139:modem.c       ****         modem_state = MODEM_STATE_STARTUP;
 461              		.loc 1 139 0
 462 0098 0E4B     		ldr	r3, .L27+20
 463 009a 0122     		movs	r2, #1
 464 009c 1A70     		strb	r2, [r3]
 140:modem.c       ****     }else{
 141:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"No response from modem.");
 142:modem.c       ****         modem_state = MODEM_STATE_OFF;
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 12


 143:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 144:modem.c       ****         modem_power_down();
 145:modem.c       ****         return 0u;
 146:modem.c       ****     }
 147:modem.c       ****     return 1u;
 465              		.loc 1 147 0
 466 009e 0123     		movs	r3, #1
 467 00a0 09E0     		b	.L25
 468              	.L23:
 141:modem.c       ****         modem_state = MODEM_STATE_OFF;
 469              		.loc 1 141 0
 470 00a2 0D49     		ldr	r1, .L27+24
 471 00a4 0220     		movs	r0, #2
 472 00a6 FFF7FEFF 		bl	printNotif
 142:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 473              		.loc 1 142 0
 474 00aa 0A4B     		ldr	r3, .L27+20
 475 00ac 0022     		movs	r2, #0
 476 00ae 1A70     		strb	r2, [r3]
 144:modem.c       ****         return 0u;
 477              		.loc 1 144 0
 478 00b0 FFF7FEFF 		bl	modem_power_down
 145:modem.c       ****     }
 479              		.loc 1 145 0
 480 00b4 0023     		movs	r3, #0
 481              	.L25:
 148:modem.c       **** }
 482              		.loc 1 148 0
 483 00b6 1846     		mov	r0, r3
 484 00b8 0837     		adds	r7, r7, #8
 485              		.cfi_def_cfa_offset 8
 486 00ba BD46     		mov	sp, r7
 487              		.cfi_def_cfa_register 13
 488              		@ sp needed
 489 00bc 80BD     		pop	{r7, pc}
 490              	.L28:
 491 00be 00BF     		.align	2
 492              	.L27:
 493 00c0 00000000 		.word	isr_telit_rx
 494 00c4 00000000 		.word	.LC0
 495 00c8 10000000 		.word	.LC2
 496 00cc 18000000 		.word	.LC3
 497 00d0 2C000000 		.word	.LC4
 498 00d4 00000000 		.word	modem_state
 499 00d8 60000000 		.word	.LC5
 500              		.cfi_endproc
 501              	.LFE69:
 502              		.size	modem_power_up, .-modem_power_up
 503              		.section	.text.modem_soft_power_cycle,"ax",%progbits
 504              		.align	2
 505              		.global	modem_soft_power_cycle
 506              		.thumb
 507              		.thumb_func
 508              		.type	modem_soft_power_cycle, %function
 509              	modem_soft_power_cycle:
 510              	.LFB70:
 149:modem.c       **** 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 13


 150:modem.c       **** // Puts modem in soft power cycle -- modem has power but isn't all the way on, so soft power cycle 
 151:modem.c       **** void modem_soft_power_cycle(){
 511              		.loc 1 151 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 1, uses_anonymous_args = 0
 515 0000 80B5     		push	{r7, lr}
 516              		.cfi_def_cfa_offset 8
 517              		.cfi_offset 7, -8
 518              		.cfi_offset 14, -4
 519 0002 00AF     		add	r7, sp, #0
 520              		.cfi_def_cfa_register 7
 152:modem.c       ****     Pin_Telit_ONOFF_Write(1u); // Pulls Telit_ONOFF pin high
 521              		.loc 1 152 0
 522 0004 0120     		movs	r0, #1
 523 0006 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 153:modem.c       ****     CyDelay(2000u); // Give modem a sec to boot
 524              		.loc 1 153 0
 525 000a 4FF4FA60 		mov	r0, #2000
 526 000e FFF7FEFF 		bl	CyDelay
 154:modem.c       ****     Pin_Telit_ONOFF_Write(0u); // Pulls Telit_ONOFF pin low
 527              		.loc 1 154 0
 528 0012 0020     		movs	r0, #0
 529 0014 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 155:modem.c       ****     
 156:modem.c       **** }
 530              		.loc 1 156 0
 531 0018 00BF     		nop
 532 001a 80BD     		pop	{r7, pc}
 533              		.cfi_endproc
 534              	.LFE70:
 535              		.size	modem_soft_power_cycle, .-modem_soft_power_cycle
 536              		.section	.text.uart_string_reset,"ax",%progbits
 537              		.align	2
 538              		.global	uart_string_reset
 539              		.thumb
 540              		.thumb_func
 541              		.type	uart_string_reset, %function
 542              	uart_string_reset:
 543              	.LFB71:
 157:modem.c       **** 
 158:modem.c       **** // Clear and reset the uart_received_string variable and uart_string_index for the next transmissio
 159:modem.c       **** void uart_string_reset(){
 544              		.loc 1 159 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 1, uses_anonymous_args = 0
 548 0000 80B5     		push	{r7, lr}
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
 160:modem.c       ****     uart_string_index=0;
 554              		.loc 1 160 0
 555 0004 064B     		ldr	r3, .L31
 556 0006 0022     		movs	r2, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 14


 557 0008 1A80     		strh	r2, [r3]	@ movhi
 161:modem.c       ****     // memset(void *str, int c, size_t n) copies the character c (an unsigned char) to the first n 
 162:modem.c       ****     memset(uart_received_string,'\0',sizeof(uart_received_string));
 558              		.loc 1 162 0
 559 000a 4FF48062 		mov	r2, #1024
 560 000e 0021     		movs	r1, #0
 561 0010 0448     		ldr	r0, .L31+4
 562 0012 FFF7FEFF 		bl	memset
 163:modem.c       ****     // Clears the receiver memory buffer and hardware RX FIFO of all received data.
 164:modem.c       ****     UART_Telit_ClearRxBuffer();
 563              		.loc 1 164 0
 564 0016 FFF7FEFF 		bl	UART_Telit_ClearRxBuffer
 165:modem.c       **** }
 565              		.loc 1 165 0
 566 001a 00BF     		nop
 567 001c 80BD     		pop	{r7, pc}
 568              	.L32:
 569 001e 00BF     		.align	2
 570              	.L31:
 571 0020 00000000 		.word	uart_string_index
 572 0024 00000000 		.word	uart_received_string
 573              		.cfi_endproc
 574              	.LFE71:
 575              		.size	uart_string_reset, .-uart_string_reset
 576              		.section	.rodata
 577              		.align	2
 578              	.LC6:
 579 0078 4D6F6465 		.ascii	"Modem sent AT command without timeout: %s\015\012\000"
 579      6D207365 
 579      6E742041 
 579      5420636F 
 579      6D6D616E 
 580              		.align	2
 581              	.LC7:
 582 00a4 4D6F6465 		.ascii	"Modem Received expected AT Response on first Try:\012"
 582      6D205265 
 582      63656976 
 582      65642065 
 582      78706563 
 583 00d6 436F6D6D 		.ascii	"Command: %s\012Received: %s\015\012\000"
 583      616E643A 
 583      2025730A 
 583      52656365 
 583      69766564 
 584 00f1 000000   		.align	2
 585              	.LC8:
 586 00f4 4D6F6465 		.ascii	"Modem required %d tries to receive AT Response: %s\015"
 586      6D207265 
 586      71756972 
 586      65642025 
 586      64207472 
 587 0127 0A00     		.ascii	"\012\000"
 588 0129 000000   		.align	2
 589              	.LC9:
 590 012c 436F756C 		.ascii	"Could not write AT command: %s\012 Received: %s\012"
 590      64206E6F 
 590      74207772 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 15


 590      69746520 
 590      41542063 
 591 0159 00       		.ascii	"\000"
 592              		.section	.text.at_write_command,"ax",%progbits
 593              		.align	2
 594              		.global	at_write_command
 595              		.thumb
 596              		.thumb_func
 597              		.type	at_write_command, %function
 598              	at_write_command:
 599              	.LFB72:
 166:modem.c       **** 
 167:modem.c       **** // Modem controlled  via  the  serial  interface  using  the  standard  AT commands.
 168:modem.c       **** // AT is an ATTENTION command and is used as a prefix to other parameters in a string. 
 169:modem.c       **** // Sends commands to the modem
 170:modem.c       **** uint8_t at_write_command(char* commands, char* expected_response,uint32_t timeout){
 600              		.loc 1 170 0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 40
 603              		@ frame_needed = 1, uses_anonymous_args = 0
 604 0000 80B5     		push	{r7, lr}
 605              		.cfi_def_cfa_offset 8
 606              		.cfi_offset 7, -8
 607              		.cfi_offset 14, -4
 608 0002 8AB0     		sub	sp, sp, #40
 609              		.cfi_def_cfa_offset 48
 610 0004 00AF     		add	r7, sp, #0
 611              		.cfi_def_cfa_register 7
 612 0006 F860     		str	r0, [r7, #12]
 613 0008 B960     		str	r1, [r7, #8]
 614 000a 7A60     		str	r2, [r7, #4]
 171:modem.c       **** 
 172:modem.c       ****     uint32 at_attempt = 0;
 615              		.loc 1 172 0
 616 000c 0023     		movs	r3, #0
 617 000e 7B62     		str	r3, [r7, #36]
 173:modem.c       ****     
 174:modem.c       ****     for(at_attempt = 0; at_attempt < 3; at_attempt++) {
 618              		.loc 1 174 0
 619 0010 0023     		movs	r3, #0
 620 0012 7B62     		str	r3, [r7, #36]
 621 0014 46E0     		b	.L34
 622              	.L42:
 623              	.LBB4:
 175:modem.c       ****         
 176:modem.c       ****         char* compare_location;
 177:modem.c       ****         uint32_t delay=10;
 624              		.loc 1 177 0
 625 0016 0A23     		movs	r3, #10
 626 0018 FB61     		str	r3, [r7, #28]
 178:modem.c       ****         uint32_t i, interval=timeout/delay;        
 627              		.loc 1 178 0
 628 001a 7A68     		ldr	r2, [r7, #4]
 629 001c FB69     		ldr	r3, [r7, #28]
 630 001e B2FBF3F3 		udiv	r3, r2, r3
 631 0022 BB61     		str	r3, [r7, #24]
 179:modem.c       ****         
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 16


 180:modem.c       ****         // Clear and reset the uart_received_string variable and uart_string_index for the next tra
 181:modem.c       ****         uart_string_reset();
 632              		.loc 1 181 0
 633 0024 FFF7FEFF 		bl	uart_string_reset
 182:modem.c       ****         
 183:modem.c       ****         // Sends a NULL terminated string to the TX buffer for transmission.
 184:modem.c       ****         UART_Telit_PutString(commands);
 634              		.loc 1 184 0
 635 0028 F868     		ldr	r0, [r7, #12]
 636 002a FFF7FEFF 		bl	UART_Telit_PutString
 185:modem.c       ****         
 186:modem.c       ****         
 187:modem.c       ****         // If no timeout, no need to wait for response
 188:modem.c       ****         if(timeout == NO_AT_TIMEOUT){
 637              		.loc 1 188 0
 638 002e 7B68     		ldr	r3, [r7, #4]
 639 0030 002B     		cmp	r3, #0
 640 0032 06D1     		bne	.L35
 189:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem sent AT command without timeout: %s\r\n", commands);
 641              		.loc 1 189 0
 642 0034 FA68     		ldr	r2, [r7, #12]
 643 0036 1F49     		ldr	r1, .L43
 644 0038 0020     		movs	r0, #0
 645 003a FFF7FEFF 		bl	printNotif
 190:modem.c       ****             return 1u;
 646              		.loc 1 190 0
 647 003e 0123     		movs	r3, #1
 648 0040 34E0     		b	.L36
 649              	.L35:
 191:modem.c       ****         }
 192:modem.c       ****       
 193:modem.c       ****      
 194:modem.c       ****         for(i=0;i<interval;i++){ 
 650              		.loc 1 194 0
 651 0042 0023     		movs	r3, #0
 652 0044 3B62     		str	r3, [r7, #32]
 653 0046 20E0     		b	.L37
 654              	.L41:
 195:modem.c       ****             CyDelay((uint32) delay);
 655              		.loc 1 195 0
 656 0048 F869     		ldr	r0, [r7, #28]
 657 004a FFF7FEFF 		bl	CyDelay
 196:modem.c       ****             // strstr(const char *haystack, const char *needle) function finds the first occurrence
 197:modem.c       ****             // Returns a pointer to the first occurrence in haystack of any of the entire sequence 
 198:modem.c       ****             compare_location=strstr(uart_received_string,expected_response);        
 658              		.loc 1 198 0
 659 004e B968     		ldr	r1, [r7, #8]
 660 0050 1948     		ldr	r0, .L43+4
 661 0052 FFF7FEFF 		bl	strstr
 662 0056 7861     		str	r0, [r7, #20]
 199:modem.c       ****             if(compare_location!=NULL) {
 663              		.loc 1 199 0
 664 0058 7B69     		ldr	r3, [r7, #20]
 665 005a 002B     		cmp	r3, #0
 666 005c 12D0     		beq	.L38
 200:modem.c       ****                 if (at_attempt == 0){
 667              		.loc 1 200 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 17


 668 005e 7B6A     		ldr	r3, [r7, #36]
 669 0060 002B     		cmp	r3, #0
 670 0062 06D1     		bne	.L39
 201:modem.c       ****                     // we add \n for new line to make it easier to decipher
 202:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT,"Modem Received expected AT Response on first Try:\
 671              		.loc 1 202 0
 672 0064 144B     		ldr	r3, .L43+4
 673 0066 FA68     		ldr	r2, [r7, #12]
 674 0068 1449     		ldr	r1, .L43+8
 675 006a 0020     		movs	r0, #0
 676 006c FFF7FEFF 		bl	printNotif
 677 0070 06E0     		b	.L40
 678              	.L39:
 203:modem.c       ****                 }else{
 204:modem.c       ****                     printNotif(NOTIF_TYPE_WARNING,"Modem required %d tries to receive AT Response: 
 679              		.loc 1 204 0
 680 0072 7B6A     		ldr	r3, [r7, #36]
 681 0074 5A1C     		adds	r2, r3, #1
 682 0076 104B     		ldr	r3, .L43+4
 683 0078 1149     		ldr	r1, .L43+12
 684 007a 0120     		movs	r0, #1
 685 007c FFF7FEFF 		bl	printNotif
 686              	.L40:
 205:modem.c       ****                  
 206:modem.c       ****                 }
 207:modem.c       ****                 return(1);
 687              		.loc 1 207 0
 688 0080 0123     		movs	r3, #1
 689 0082 13E0     		b	.L36
 690              	.L38:
 194:modem.c       ****             CyDelay((uint32) delay);
 691              		.loc 1 194 0 discriminator 2
 692 0084 3B6A     		ldr	r3, [r7, #32]
 693 0086 0133     		adds	r3, r3, #1
 694 0088 3B62     		str	r3, [r7, #32]
 695              	.L37:
 194:modem.c       ****             CyDelay((uint32) delay);
 696              		.loc 1 194 0 is_stmt 0 discriminator 1
 697 008a 3A6A     		ldr	r2, [r7, #32]
 698 008c BB69     		ldr	r3, [r7, #24]
 699 008e 9A42     		cmp	r2, r3
 700 0090 DAD3     		bcc	.L41
 208:modem.c       ****             }
 209:modem.c       ****             
 210:modem.c       ****         }  
 211:modem.c       ****         
 212:modem.c       ****         // Something went wrong, restart UART
 213:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not write AT command: %s\n Received: %s\n", commands,uar
 701              		.loc 1 213 0 is_stmt 1 discriminator 2
 702 0092 094B     		ldr	r3, .L43+4
 703 0094 FA68     		ldr	r2, [r7, #12]
 704 0096 0B49     		ldr	r1, .L43+16
 705 0098 0220     		movs	r0, #2
 706 009a FFF7FEFF 		bl	printNotif
 707              	.LBE4:
 174:modem.c       ****         
 708              		.loc 1 174 0 discriminator 2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 18


 709 009e 7B6A     		ldr	r3, [r7, #36]
 710 00a0 0133     		adds	r3, r3, #1
 711 00a2 7B62     		str	r3, [r7, #36]
 712              	.L34:
 174:modem.c       ****         
 713              		.loc 1 174 0 is_stmt 0 discriminator 1
 714 00a4 7B6A     		ldr	r3, [r7, #36]
 715 00a6 022B     		cmp	r3, #2
 716 00a8 B5D9     		bls	.L42
 214:modem.c       ****       
 215:modem.c       ****     }
 216:modem.c       ****    // printNotif(NOTIF_TYPE_ERROR,"Modem AT response timeout: %s\r\n", commands);
 217:modem.c       ****           
 218:modem.c       ****     return(0);    
 717              		.loc 1 218 0 is_stmt 1
 718 00aa 0023     		movs	r3, #0
 719              	.L36:
 219:modem.c       **** }
 720              		.loc 1 219 0
 721 00ac 1846     		mov	r0, r3
 722 00ae 2837     		adds	r7, r7, #40
 723              		.cfi_def_cfa_offset 8
 724 00b0 BD46     		mov	sp, r7
 725              		.cfi_def_cfa_register 13
 726              		@ sp needed
 727 00b2 80BD     		pop	{r7, pc}
 728              	.L44:
 729              		.align	2
 730              	.L43:
 731 00b4 78000000 		.word	.LC6
 732 00b8 00000000 		.word	uart_received_string
 733 00bc A4000000 		.word	.LC7
 734 00c0 F4000000 		.word	.LC8
 735 00c4 2C010000 		.word	.LC9
 736              		.cfi_endproc
 737              	.LFE72:
 738              		.size	at_write_command, .-at_write_command
 739              		.section	.rodata
 740 015a 0000     		.align	2
 741              	.LC10:
 742 015c 54455354 		.ascii	"TEST_MODEM\000"
 742      5F4D4F44 
 742      454D00
 743 0167 00       		.align	2
 744              	.LC11:
 745 0168 4E6F2072 		.ascii	"No reponse from modem.\000"
 745      65706F6E 
 745      73652066 
 745      726F6D20 
 745      6D6F6465 
 746 017f 00       		.align	2
 747              	.LC12:
 748 0180 4D6F6465 		.ascii	"Modem connected to network.\000"
 748      6D20636F 
 748      6E6E6563 
 748      74656420 
 748      746F206E 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 19


 749              		.section	.text.modem_test,"ax",%progbits
 750              		.align	2
 751              		.global	modem_test
 752              		.thumb
 753              		.thumb_func
 754              		.type	modem_test, %function
 755              	modem_test:
 756              	.LFB73:
 220:modem.c       **** 
 221:modem.c       **** // Test modem -- needs fleshed out
 222:modem.c       **** test_t modem_test(){
 757              		.loc 1 222 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 408
 760              		@ frame_needed = 1, uses_anonymous_args = 0
 761 0000 B0B5     		push	{r4, r5, r7, lr}
 762              		.cfi_def_cfa_offset 16
 763              		.cfi_offset 4, -16
 764              		.cfi_offset 5, -12
 765              		.cfi_offset 7, -8
 766              		.cfi_offset 14, -4
 767 0002 E6B0     		sub	sp, sp, #408
 768              		.cfi_def_cfa_offset 424
 769 0004 00AF     		add	r7, sp, #0
 770              		.cfi_def_cfa_register 7
 771 0006 3B1D     		adds	r3, r7, #4
 772 0008 1860     		str	r0, [r3]
 223:modem.c       ****     
 224:modem.c       ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
 225:modem.c       ****     test.status = 0;
 773              		.loc 1 225 0
 774 000a 07F10C03 		add	r3, r7, #12
 775 000e 0022     		movs	r2, #0
 776 0010 83F88020 		strb	r2, [r3, #128]
 226:modem.c       ****     // Print test name and test reason
 227:modem.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_MODEM");
 777              		.loc 1 227 0
 778 0014 07F10C03 		add	r3, r7, #12
 779 0018 354A     		ldr	r2, .L53
 780 001a 07CA     		ldmia	r2, {r0, r1, r2}
 781 001c 03C3     		stmia	r3!, {r0, r1}
 782 001e 1A80     		strh	r2, [r3]	@ movhi
 783 0020 0233     		adds	r3, r3, #2
 784 0022 120C     		lsrs	r2, r2, #16
 785 0024 1A70     		strb	r2, [r3]
 228:modem.c       ****     snprintf(test.reason,sizeof(test.reason),"No reponse from modem.");
 786              		.loc 1 228 0
 787 0026 07F10C03 		add	r3, r7, #12
 788 002a 8133     		adds	r3, r3, #129
 789 002c 314A     		ldr	r2, .L53+4
 790 002e 1C46     		mov	r4, r3
 791 0030 1546     		mov	r5, r2
 792 0032 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 793 0034 2060     		str	r0, [r4]	@ unaligned
 794 0036 6160     		str	r1, [r4, #4]	@ unaligned
 795 0038 A260     		str	r2, [r4, #8]	@ unaligned
 796 003a E360     		str	r3, [r4, #12]	@ unaligned
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 20


 797 003c 2868     		ldr	r0, [r5]	@ unaligned
 798 003e 2061     		str	r0, [r4, #16]	@ unaligned
 799 0040 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 800 0042 AA79     		ldrb	r2, [r5, #6]
 801 0044 A382     		strh	r3, [r4, #20]	@ unaligned
 802 0046 1346     		mov	r3, r2
 803 0048 A375     		strb	r3, [r4, #22]
 804              	.LBB5:
 229:modem.c       ****    
 230:modem.c       ****     //try the modem 60*100 (60 secs)
 231:modem.c       ****     for(int i = 0; i< 60; i++){
 805              		.loc 1 231 0
 806 004a 0023     		movs	r3, #0
 807 004c C7F89431 		str	r3, [r7, #404]
 808 0050 39E0     		b	.L46
 809              	.L51:
 232:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 233:modem.c       ****         modem_process_tasks();
 810              		.loc 1 233 0
 811 0052 FFF7FEFF 		bl	modem_process_tasks
 234:modem.c       ****          
 235:modem.c       ****         if(modem_get_state() == MODEM_STATE_OFF){
 812              		.loc 1 235 0
 813 0056 FFF7FEFF 		bl	modem_get_state
 814 005a 0346     		mov	r3, r0
 815 005c 002B     		cmp	r3, #0
 816 005e 02D1     		bne	.L47
 236:modem.c       ****             // This puts all the modem points into a state that won't leak power
 237:modem.c       ****             modem_power_up();
 817              		.loc 1 237 0
 818 0060 FFF7FEFF 		bl	modem_power_up
 819 0064 27E0     		b	.L48
 820              	.L47:
 238:modem.c       ****             // Should put this on a max_try counter, so we don't just keep trying to connect over a
 239:modem.c       ****             
 240:modem.c       ****         }else if(modem_get_state() == MODEM_STATE_READY){
 821              		.loc 1 240 0
 822 0066 FFF7FEFF 		bl	modem_get_state
 823 006a 0346     		mov	r3, r0
 824 006c 042B     		cmp	r3, #4
 825 006e 22D1     		bne	.L48
 826              	.LBB6:
 241:modem.c       ****         
 242:modem.c       ****         
 243:modem.c       ****         // Get time, and if it looks good, set the RTC with it
 244:modem.c       ****         long network_time = modem_get_network_time();
 827              		.loc 1 244 0
 828 0070 FFF7FEFF 		bl	modem_get_network_time
 829 0074 C7F89001 		str	r0, [r7, #400]
 245:modem.c       ****         if(network_time != 0){
 830              		.loc 1 245 0
 831 0078 D7F89031 		ldr	r3, [r7, #400]
 832 007c 002B     		cmp	r3, #0
 833 007e 03D0     		beq	.L49
 246:modem.c       ****             setTime(network_time); // Set the system time 
 834              		.loc 1 246 0
 835 0080 D7F89001 		ldr	r0, [r7, #400]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 21


 836 0084 FFF7FEFF 		bl	setTime
 837              	.L49:
 247:modem.c       ****         }
 248:modem.c       ****             
 249:modem.c       ****         snprintf(test.reason,sizeof(test.reason),"Modem connected to network.");
 838              		.loc 1 249 0
 839 0088 07F10C03 		add	r3, r7, #12
 840 008c 8133     		adds	r3, r3, #129
 841 008e 1A4A     		ldr	r2, .L53+8
 842 0090 1D46     		mov	r5, r3
 843 0092 1446     		mov	r4, r2
 844 0094 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 845 0096 2860     		str	r0, [r5]	@ unaligned
 846 0098 6960     		str	r1, [r5, #4]	@ unaligned
 847 009a AA60     		str	r2, [r5, #8]	@ unaligned
 848 009c EB60     		str	r3, [r5, #12]	@ unaligned
 849 009e 07CC     		ldmia	r4!, {r0, r1, r2}
 850 00a0 2861     		str	r0, [r5, #16]	@ unaligned
 851 00a2 6961     		str	r1, [r5, #20]	@ unaligned
 852 00a4 AA61     		str	r2, [r5, #24]	@ unaligned
 250:modem.c       ****         test.status = 1;
 853              		.loc 1 250 0
 854 00a6 07F10C03 		add	r3, r7, #12
 855 00aa 0122     		movs	r2, #1
 856 00ac 83F88020 		strb	r2, [r3, #128]
 251:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 252:modem.c       ****         modem_power_down();
 857              		.loc 1 252 0
 858 00b0 FFF7FEFF 		bl	modem_power_down
 253:modem.c       ****         break;
 859              		.loc 1 253 0
 860 00b4 0BE0     		b	.L50
 861              	.L48:
 862              	.LBE6:
 254:modem.c       ****         
 255:modem.c       ****       }
 256:modem.c       ****         CyDelay(100u);
 863              		.loc 1 256 0 discriminator 2
 864 00b6 6420     		movs	r0, #100
 865 00b8 FFF7FEFF 		bl	CyDelay
 231:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 866              		.loc 1 231 0 discriminator 2
 867 00bc D7F89431 		ldr	r3, [r7, #404]
 868 00c0 0133     		adds	r3, r3, #1
 869 00c2 C7F89431 		str	r3, [r7, #404]
 870              	.L46:
 231:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 871              		.loc 1 231 0 is_stmt 0 discriminator 1
 872 00c6 D7F89431 		ldr	r3, [r7, #404]
 873 00ca 3B2B     		cmp	r3, #59
 874 00cc C1DD     		ble	.L51
 875              	.L50:
 876              	.LBE5:
 257:modem.c       ****         
 258:modem.c       ****     }
 259:modem.c       ****     
 260:modem.c       ****     return test;
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 22


 877              		.loc 1 260 0 is_stmt 1
 878 00ce 3B1D     		adds	r3, r7, #4
 879 00d0 1A68     		ldr	r2, [r3]
 880 00d2 07F10C03 		add	r3, r7, #12
 881 00d6 1046     		mov	r0, r2
 882 00d8 1946     		mov	r1, r3
 883 00da 40F28113 		movw	r3, #385
 884 00de 1A46     		mov	r2, r3
 885 00e0 FFF7FEFF 		bl	memcpy
 261:modem.c       **** }
 886              		.loc 1 261 0
 887 00e4 3B1D     		adds	r3, r7, #4
 888 00e6 1868     		ldr	r0, [r3]
 889 00e8 07F5CC77 		add	r7, r7, #408
 890              		.cfi_def_cfa_offset 16
 891 00ec BD46     		mov	sp, r7
 892              		.cfi_def_cfa_register 13
 893              		@ sp needed
 894 00ee B0BD     		pop	{r4, r5, r7, pc}
 895              	.L54:
 896              		.align	2
 897              	.L53:
 898 00f0 5C010000 		.word	.LC10
 899 00f4 68010000 		.word	.LC11
 900 00f8 80010000 		.word	.LC12
 901              		.cfi_endproc
 902              	.LFE73:
 903              		.size	modem_test, .-modem_test
 904              		.section	.text.extract_string,"ax",%progbits
 905              		.align	2
 906              		.global	extract_string
 907              		.thumb
 908              		.thumb_func
 909              		.type	extract_string, %function
 910              	extract_string:
 911              	.LFB74:
 262:modem.c       **** 
 263:modem.c       **** // Extract string from the UART
 264:modem.c       **** uint8 extract_string(char* from, const char* beginMarker, const char* endMarker,  char* target){
 912              		.loc 1 264 0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 24
 915              		@ frame_needed = 1, uses_anonymous_args = 0
 916 0000 80B5     		push	{r7, lr}
 917              		.cfi_def_cfa_offset 8
 918              		.cfi_offset 7, -8
 919              		.cfi_offset 14, -4
 920 0002 86B0     		sub	sp, sp, #24
 921              		.cfi_def_cfa_offset 32
 922 0004 00AF     		add	r7, sp, #0
 923              		.cfi_def_cfa_register 7
 924 0006 F860     		str	r0, [r7, #12]
 925 0008 B960     		str	r1, [r7, #8]
 926 000a 7A60     		str	r2, [r7, #4]
 927 000c 3B60     		str	r3, [r7]
 265:modem.c       ****     
 266:modem.c       ****         char *a, *b;
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 23


 267:modem.c       ****   
 268:modem.c       ****         // Expect the UART to contain something like "+CESQ: ##,##,##,##,##,##\r\n\r\nOK"
 269:modem.c       ****         // - Search for "+CESQ: ".  Place the starting pointer, a, at the resulting index
 270:modem.c       ****         a = strstr(from,beginMarker);
 928              		.loc 1 270 0
 929 000e B968     		ldr	r1, [r7, #8]
 930 0010 F868     		ldr	r0, [r7, #12]
 931 0012 FFF7FEFF 		bl	strstr
 932 0016 7861     		str	r0, [r7, #20]
 271:modem.c       ****         if (a == NULL) {
 933              		.loc 1 271 0
 934 0018 7B69     		ldr	r3, [r7, #20]
 935 001a 002B     		cmp	r3, #0
 936 001c 01D1     		bne	.L56
 272:modem.c       ****             //puts("+CESQ: not found in uart_received_string");
 273:modem.c       ****             a = from;
 937              		.loc 1 273 0
 938 001e FB68     		ldr	r3, [r7, #12]
 939 0020 7B61     		str	r3, [r7, #20]
 940              	.L56:
 274:modem.c       ****         }
 275:modem.c       ****         // The strlen() function calculates the length of a given string.
 276:modem.c       ****         a += strlen(beginMarker);
 941              		.loc 1 276 0
 942 0022 B868     		ldr	r0, [r7, #8]
 943 0024 FFF7FEFF 		bl	strlen
 944 0028 0246     		mov	r2, r0
 945 002a 7B69     		ldr	r3, [r7, #20]
 946 002c 1344     		add	r3, r3, r2
 947 002e 7B61     		str	r3, [r7, #20]
 277:modem.c       ****         
 278:modem.c       ****         // - Find the end marking and offset by 1
 279:modem.c       ****         // strstr(const char *haystack, const char *needle) function finds the first occurrence of 
 280:modem.c       ****         // Returns a pointer to the first occurrence in haystack of any of the entire sequence of c
 281:modem.c       ****         b = strstr(a,endMarker);
 948              		.loc 1 281 0
 949 0030 7968     		ldr	r1, [r7, #4]
 950 0032 7869     		ldr	r0, [r7, #20]
 951 0034 FFF7FEFF 		bl	strstr
 952 0038 3861     		str	r0, [r7, #16]
 282:modem.c       ****         if (b == NULL) {
 953              		.loc 1 282 0
 954 003a 3B69     		ldr	r3, [r7, #16]
 955 003c 002B     		cmp	r3, #0
 956 003e 06D1     		bne	.L57
 283:modem.c       ****             // Puts("Comma not found in uart_received_string");
 284:modem.c       ****             b=from+strlen(from);
 957              		.loc 1 284 0
 958 0040 F868     		ldr	r0, [r7, #12]
 959 0042 FFF7FEFF 		bl	strlen
 960 0046 0246     		mov	r2, r0
 961 0048 FB68     		ldr	r3, [r7, #12]
 962 004a 1344     		add	r3, r3, r2
 963 004c 3B61     		str	r3, [r7, #16]
 964              	.L57:
 285:modem.c       ****         }        
 286:modem.c       ****         
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 24


 287:modem.c       ****         // Parse the strings and store the respective rssi and fer values
 288:modem.c       ****         strncpy(target,a,b-a);
 965              		.loc 1 288 0
 966 004e 3A69     		ldr	r2, [r7, #16]
 967 0050 7B69     		ldr	r3, [r7, #20]
 968 0052 D31A     		subs	r3, r2, r3
 969 0054 1A46     		mov	r2, r3
 970 0056 7969     		ldr	r1, [r7, #20]
 971 0058 3868     		ldr	r0, [r7]
 972 005a FFF7FEFF 		bl	strncpy
 289:modem.c       ****         target[b-a] = '\0';
 973              		.loc 1 289 0
 974 005e 3A69     		ldr	r2, [r7, #16]
 975 0060 7B69     		ldr	r3, [r7, #20]
 976 0062 D31A     		subs	r3, r2, r3
 977 0064 1A46     		mov	r2, r3
 978 0066 3B68     		ldr	r3, [r7]
 979 0068 1344     		add	r3, r3, r2
 980 006a 0022     		movs	r2, #0
 981 006c 1A70     		strb	r2, [r3]
 290:modem.c       ****         return 1u;
 982              		.loc 1 290 0
 983 006e 0123     		movs	r3, #1
 291:modem.c       ****         
 292:modem.c       **** }
 984              		.loc 1 292 0
 985 0070 1846     		mov	r0, r3
 986 0072 1837     		adds	r7, r7, #24
 987              		.cfi_def_cfa_offset 8
 988 0074 BD46     		mov	sp, r7
 989              		.cfi_def_cfa_register 13
 990              		@ sp needed
 991 0076 80BD     		pop	{r7, pc}
 992              		.cfi_endproc
 993              	.LFE74:
 994              		.size	extract_string, .-extract_string
 995              		.section	.rodata
 996              		.align	2
 997              	.LC13:
 998 019c 54696D65 		.ascii	"Time to connect to network: %d seconds\000"
 998      20746F20 
 998      636F6E6E 
 998      65637420 
 998      746F206E 
 999 01c3 00       		.align	2
 1000              	.LC14:
 1001 01c4 4D6F6465 		.ascii	"Modem timed out on network connect\000"
 1001      6D207469 
 1001      6D656420 
 1001      6F757420 
 1001      6F6E206E 
 1002 01e7 00       		.align	2
 1003              	.LC15:
 1004 01e8 41637175 		.ascii	"Acquired IP address: %d seconds\000"
 1004      69726564 
 1004      20495020 
 1004      61646472 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 25


 1004      6573733A 
 1005              		.align	2
 1006              	.LC16:
 1007 0208 4D6F6465 		.ascii	"Modem timed out on IP address acquire.\000"
 1007      6D207469 
 1007      6D656420 
 1007      6F757420 
 1007      6F6E2049 
 1008              		.section	.text.modem_process_tasks,"ax",%progbits
 1009              		.align	2
 1010              		.global	modem_process_tasks
 1011              		.thumb
 1012              		.thumb_func
 1013              		.type	modem_process_tasks, %function
 1014              	modem_process_tasks:
 1015              	.LFB75:
 293:modem.c       **** 
 294:modem.c       **** // Function to startup the modem, connect to the network, and then hand it off to sleep
 295:modem.c       **** uint8 modem_process_tasks(){
 1016              		.loc 1 295 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 8
 1019              		@ frame_needed = 1, uses_anonymous_args = 0
 1020 0000 80B5     		push	{r7, lr}
 1021              		.cfi_def_cfa_offset 8
 1022              		.cfi_offset 7, -8
 1023              		.cfi_offset 14, -4
 1024 0002 82B0     		sub	sp, sp, #8
 1025              		.cfi_def_cfa_offset 16
 1026 0004 00AF     		add	r7, sp, #0
 1027              		.cfi_def_cfa_register 7
 296:modem.c       ****     // If modem state is "startup" then get the modem start time, configure modem settings, and cha
 297:modem.c       ****     if(modem_state == MODEM_STATE_STARTUP){
 1028              		.loc 1 297 0
 1029 0006 474B     		ldr	r3, .L73
 1030 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1031 000a 012B     		cmp	r3, #1
 1032 000c 0BD1     		bne	.L60
 298:modem.c       ****         
 299:modem.c       ****         modem_start_time_stamp = getTimeStamp(); // Get timestamp for modem start time
 1033              		.loc 1 299 0
 1034 000e FFF7FEFF 		bl	getTimeStamp
 1035 0012 0246     		mov	r2, r0
 1036 0014 444B     		ldr	r3, .L73+4
 1037 0016 1A60     		str	r2, [r3]
 300:modem.c       ****         modem_configure_settings(); // Configure modem settings
 1038              		.loc 1 300 0
 1039 0018 FFF7FEFF 		bl	modem_configure_settings
 301:modem.c       ****         modem_state = MODEM_STATE_WAITING_FOR_NETWORK; // Change modem state 
 1040              		.loc 1 301 0
 1041 001c 414B     		ldr	r3, .L73
 1042 001e 0222     		movs	r2, #2
 1043 0020 1A70     		strb	r2, [r3]
 302:modem.c       ****         return 1u; // Keep going, don't hand off to sleep yet
 1044              		.loc 1 302 0
 1045 0022 0123     		movs	r3, #1
 1046 0024 79E0     		b	.L61
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 26


 1047              	.L60:
 303:modem.c       ****         
 304:modem.c       ****     }
 305:modem.c       ****     // Else if modem state is "waiting for network" 
 306:modem.c       ****     else if(modem_state == MODEM_STATE_WAITING_FOR_NETWORK){
 1048              		.loc 1 306 0
 1049 0026 3F4B     		ldr	r3, .L73
 1050 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1051 002a 022B     		cmp	r3, #2
 1052 002c 46D1     		bne	.L62
 1053              	.LBB7:
 307:modem.c       ****         // Check if modem has a good cell signal each second for up to a minute
 308:modem.c       ****        for(uint8 i=0;i<60;i++){
 1054              		.loc 1 308 0
 1055 002e 0023     		movs	r3, #0
 1056 0030 FB71     		strb	r3, [r7, #7]
 1057 0032 10E0     		b	.L63
 1058              	.L66:
 309:modem.c       ****             // Get cell network stats
 310:modem.c       ****             get_cell_network_stats();
 1059              		.loc 1 310 0
 1060 0034 FFF7FEFF 		bl	get_cell_network_stats
 311:modem.c       ****             // If cell signal (rsrp) is strong enough, break and connect to the network
 312:modem.c       ****             // Otherwise, keep checking rsrp
 313:modem.c       ****             if(modem_stats.rsrp > 26 && modem_stats.rsrp != 255){
 1061              		.loc 1 313 0
 1062 0038 3C4B     		ldr	r3, .L73+8
 1063 003a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1064 003c 1A2B     		cmp	r3, #26
 1065 003e 03D9     		bls	.L64
 1066              		.loc 1 313 0 is_stmt 0 discriminator 1
 1067 0040 3A4B     		ldr	r3, .L73+8
 1068 0042 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1069 0044 FF2B     		cmp	r3, #255
 1070 0046 0AD1     		bne	.L72
 1071              	.L64:
 314:modem.c       ****                 break;
 315:modem.c       ****             }
 316:modem.c       ****             // Delay for 1 second
 317:modem.c       ****             CyDelay(1000u);
 1072              		.loc 1 317 0 is_stmt 1 discriminator 2
 1073 0048 4FF47A70 		mov	r0, #1000
 1074 004c FFF7FEFF 		bl	CyDelay
 308:modem.c       ****             // Get cell network stats
 1075              		.loc 1 308 0 discriminator 2
 1076 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1077 0052 0133     		adds	r3, r3, #1
 1078 0054 FB71     		strb	r3, [r7, #7]
 1079              	.L63:
 308:modem.c       ****             // Get cell network stats
 1080              		.loc 1 308 0 is_stmt 0 discriminator 1
 1081 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1082 0058 3B2B     		cmp	r3, #59
 1083 005a EBD9     		bls	.L66
 1084 005c 00E0     		b	.L65
 1085              	.L72:
 314:modem.c       ****                 break;
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 27


 1086              		.loc 1 314 0 is_stmt 1
 1087 005e 00BF     		nop
 1088              	.L65:
 1089              	.LBE7:
 318:modem.c       ****         }
 319:modem.c       ****         
 320:modem.c       ****         // If modem connected to the cell network, save/print the time to connect to the network
 321:modem.c       ****         if(is_connected_to_cell_network()){
 1090              		.loc 1 321 0
 1091 0060 FFF7FEFF 		bl	is_connected_to_cell_network
 1092 0064 0346     		mov	r3, r0
 1093 0066 002B     		cmp	r3, #0
 1094 0068 15D0     		beq	.L67
 322:modem.c       ****       
 323:modem.c       ****              modem_stats.time_to_network_connect = (int)(getTimeStamp() - (int32)modem_start_time_s
 1095              		.loc 1 323 0
 1096 006a FFF7FEFF 		bl	getTimeStamp
 1097 006e 0246     		mov	r2, r0
 1098 0070 2D4B     		ldr	r3, .L73+4
 1099 0072 1B68     		ldr	r3, [r3]
 1100 0074 D31A     		subs	r3, r2, r3
 1101 0076 2D4A     		ldr	r2, .L73+8
 1102 0078 9360     		str	r3, [r2, #8]
 324:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Time to connect to network: %d seconds",
 1103              		.loc 1 324 0
 1104 007a 2C4B     		ldr	r3, .L73+8
 1105 007c 9B68     		ldr	r3, [r3, #8]
 1106 007e 1A46     		mov	r2, r3
 1107 0080 2B49     		ldr	r1, .L73+12
 1108 0082 0020     		movs	r0, #0
 1109 0084 FFF7FEFF 		bl	printNotif
 325:modem.c       ****                                             modem_stats.time_to_network_connect);
 326:modem.c       ****             get_cell_network_stats(); // Get cell network stats
 1110              		.loc 1 326 0
 1111 0088 FFF7FEFF 		bl	get_cell_network_stats
 327:modem.c       ****             set_up_internet_connection(); // Setup the internet connection
 1112              		.loc 1 327 0
 1113 008c FFF7FEFF 		bl	set_up_internet_connection
 328:modem.c       ****             modem_state = MODEM_STATE_WAITING_FOR_IP; // Change modem state 
 1114              		.loc 1 328 0
 1115 0090 244B     		ldr	r3, .L73
 1116 0092 0322     		movs	r2, #3
 1117 0094 1A70     		strb	r2, [r3]
 1118              	.L67:
 329:modem.c       ****         }
 330:modem.c       **** 
 331:modem.c       ****         //power off if we times out shold only take ~30 secs to connect to network
 332:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_NETWORK_CONNECT){
 1119              		.loc 1 332 0
 1120 0096 FFF7FEFF 		bl	getTimeStamp
 1121 009a 0246     		mov	r2, r0
 1122 009c 224B     		ldr	r3, .L73+4
 1123 009e 1B68     		ldr	r3, [r3]
 1124 00a0 D31A     		subs	r3, r2, r3
 1125 00a2 C82B     		cmp	r3, #200
 1126 00a4 08DD     		ble	.L68
 333:modem.c       ****             modem_state = MODEM_STATE_OFF; // Change modem state
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 28


 1127              		.loc 1 333 0
 1128 00a6 1F4B     		ldr	r3, .L73
 1129 00a8 0022     		movs	r2, #0
 1130 00aa 1A70     		strb	r2, [r3]
 334:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1131              		.loc 1 334 0
 1132 00ac FFF7FEFF 		bl	modem_power_down
 335:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on network connect");
 1133              		.loc 1 335 0
 1134 00b0 2049     		ldr	r1, .L73+16
 1135 00b2 0220     		movs	r0, #2
 1136 00b4 FFF7FEFF 		bl	printNotif
 1137              	.L68:
 336:modem.c       ****             
 337:modem.c       ****         }
 338:modem.c       ****         
 339:modem.c       ****         return 0u;//ok to hand off to sleep
 1138              		.loc 1 339 0
 1139 00b8 0023     		movs	r3, #0
 1140 00ba 2EE0     		b	.L61
 1141              	.L62:
 340:modem.c       ****         
 341:modem.c       ****     // Else if modem state is "waiting for IP"
 342:modem.c       ****     }else if(modem_state == MODEM_STATE_WAITING_FOR_IP){
 1142              		.loc 1 342 0
 1143 00bc 194B     		ldr	r3, .L73
 1144 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1145 00c0 032B     		cmp	r3, #3
 1146 00c2 29D1     		bne	.L69
 343:modem.c       ****         // If the modem is connected to the internet, change modem state to "ready", save/print tim
 344:modem.c       ****         if(is_connected_to_internet()){
 1147              		.loc 1 344 0
 1148 00c4 FFF7FEFF 		bl	is_connected_to_internet
 1149 00c8 0346     		mov	r3, r0
 1150 00ca 002B     		cmp	r3, #0
 1151 00cc 11D0     		beq	.L70
 345:modem.c       ****             modem_state = MODEM_STATE_READY; // Change modem state
 1152              		.loc 1 345 0
 1153 00ce 154B     		ldr	r3, .L73
 1154 00d0 0422     		movs	r2, #4
 1155 00d2 1A70     		strb	r2, [r3]
 346:modem.c       ****             // Save/print time to acquire IP address
 347:modem.c       ****             modem_stats.time_to_acquire_ip = (int)(getTimeStamp() - (int32)modem_start_time_stamp);
 1156              		.loc 1 347 0
 1157 00d4 FFF7FEFF 		bl	getTimeStamp
 1158 00d8 0246     		mov	r2, r0
 1159 00da 134B     		ldr	r3, .L73+4
 1160 00dc 1B68     		ldr	r3, [r3]
 1161 00de D31A     		subs	r3, r2, r3
 1162 00e0 124A     		ldr	r2, .L73+8
 1163 00e2 D360     		str	r3, [r2, #12]
 348:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Acquired IP address: %d seconds",
 1164              		.loc 1 348 0
 1165 00e4 114B     		ldr	r3, .L73+8
 1166 00e6 DB68     		ldr	r3, [r3, #12]
 1167 00e8 1A46     		mov	r2, r3
 1168 00ea 1349     		ldr	r1, .L73+20
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 29


 1169 00ec 0020     		movs	r0, #0
 1170 00ee FFF7FEFF 		bl	printNotif
 1171              	.L70:
 349:modem.c       ****                                             modem_stats.time_to_acquire_ip);
 350:modem.c       ****         }
 351:modem.c       ****         
 352:modem.c       ****         // Power off if we times out shold only take ~30 secs to connect to network
 353:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_IP_ACQUIRE){
 1172              		.loc 1 353 0
 1173 00f2 FFF7FEFF 		bl	getTimeStamp
 1174 00f6 0246     		mov	r2, r0
 1175 00f8 0B4B     		ldr	r3, .L73+4
 1176 00fa 1B68     		ldr	r3, [r3]
 1177 00fc D31A     		subs	r3, r2, r3
 1178 00fe E62B     		cmp	r3, #230
 1179 0100 08DD     		ble	.L71
 354:modem.c       ****             modem_state = MODEM_STATE_OFF;
 1180              		.loc 1 354 0
 1181 0102 084B     		ldr	r3, .L73
 1182 0104 0022     		movs	r2, #0
 1183 0106 1A70     		strb	r2, [r3]
 355:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1184              		.loc 1 355 0
 1185 0108 FFF7FEFF 		bl	modem_power_down
 356:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on IP address acquire.");
 1186              		.loc 1 356 0
 1187 010c 0B49     		ldr	r1, .L73+24
 1188 010e 0220     		movs	r0, #2
 1189 0110 FFF7FEFF 		bl	printNotif
 1190              	.L71:
 357:modem.c       ****       
 358:modem.c       ****         }
 359:modem.c       ****         return 0u;//ok to hand off to sleep
 1191              		.loc 1 359 0
 1192 0114 0023     		movs	r3, #0
 1193 0116 00E0     		b	.L61
 1194              	.L69:
 360:modem.c       ****     }
 361:modem.c       ****     
 362:modem.c       ****     return 0u;
 1195              		.loc 1 362 0
 1196 0118 0023     		movs	r3, #0
 1197              	.L61:
 363:modem.c       ****     
 364:modem.c       **** }
 1198              		.loc 1 364 0
 1199 011a 1846     		mov	r0, r3
 1200 011c 0837     		adds	r7, r7, #8
 1201              		.cfi_def_cfa_offset 8
 1202 011e BD46     		mov	sp, r7
 1203              		.cfi_def_cfa_register 13
 1204              		@ sp needed
 1205 0120 80BD     		pop	{r7, pc}
 1206              	.L74:
 1207 0122 00BF     		.align	2
 1208              	.L73:
 1209 0124 00000000 		.word	modem_state
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 30


 1210 0128 00000000 		.word	modem_start_time_stamp
 1211 012c 00000000 		.word	modem_stats
 1212 0130 9C010000 		.word	.LC13
 1213 0134 C4010000 		.word	.LC14
 1214 0138 E8010000 		.word	.LC15
 1215 013c 08020000 		.word	.LC16
 1216              		.cfi_endproc
 1217              	.LFE75:
 1218              		.size	modem_process_tasks, .-modem_process_tasks
 1219              		.section	.rodata
 1220 022f 00       		.align	2
 1221              	.LC17:
 1222 0230 43686563 		.ascii	"Checking AT+CREG?\000"
 1222      6B696E67 
 1222      2041542B 
 1222      43524547 
 1222      3F00
 1223 0242 0000     		.align	2
 1224              	.LC18:
 1225 0244 41542B43 		.ascii	"AT+CREG?\015\000"
 1225      5245473F 
 1225      0D00
 1226 024e 0000     		.align	2
 1227              	.LC19:
 1228 0250 45787472 		.ascii	"Extracting string AT+CREG?\000"
 1228      61637469 
 1228      6E672073 
 1228      7472696E 
 1228      67204154 
 1229 026b 00       		.align	2
 1230              	.LC20:
 1231 026c 75617274 		.ascii	"uart_received_string: %s\000"
 1231      5F726563 
 1231      65697665 
 1231      645F7374 
 1231      72696E67 
 1232 0285 000000   		.align	2
 1233              	.LC21:
 1234 0288 0D00     		.ascii	"\015\000"
 1235 028a 0000     		.align	2
 1236              	.LC22:
 1237 028c 3A2000   		.ascii	": \000"
 1238 028f 00       		.align	2
 1239              	.LC23:
 1240 0290 52656769 		.ascii	"Registered to network, CREG: %s\000"
 1240      73746572 
 1240      65642074 
 1240      6F206E65 
 1240      74776F72 
 1241              		.align	2
 1242              	.LC24:
 1243 02b0 446F6E65 		.ascii	"Done extracing string AT+CREG?\000"
 1243      20657874 
 1243      72616369 
 1243      6E672073 
 1243      7472696E 
 1244 02cf 00       		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 31


 1245              	.LC25:
 1246 02d0 302C3100 		.ascii	"0,1\000"
 1247              		.align	2
 1248              	.LC26:
 1249 02d4 302C3500 		.ascii	"0,5\000"
 1250              		.section	.text.is_connected_to_cell_network,"ax",%progbits
 1251              		.align	2
 1252              		.global	is_connected_to_cell_network
 1253              		.thumb
 1254              		.thumb_func
 1255              		.type	is_connected_to_cell_network, %function
 1256              	is_connected_to_cell_network:
 1257              	.LFB76:
 365:modem.c       **** 
 366:modem.c       **** // Checks network status, writes commands to the modem, then extracts string from UART
 367:modem.c       **** uint8 is_connected_to_cell_network(){
 1258              		.loc 1 367 0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 16
 1261              		@ frame_needed = 1, uses_anonymous_args = 0
 1262 0000 80B5     		push	{r7, lr}
 1263              		.cfi_def_cfa_offset 8
 1264              		.cfi_offset 7, -8
 1265              		.cfi_offset 14, -4
 1266 0002 84B0     		sub	sp, sp, #16
 1267              		.cfi_def_cfa_offset 24
 1268 0004 00AF     		add	r7, sp, #0
 1269              		.cfi_def_cfa_register 7
 368:modem.c       ****     // AT command AT+CREG? is the Network Registration Report to check network status -- need '0,0'
 369:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Checking AT+CREG?");
 1270              		.loc 1 369 0
 1271 0006 1F49     		ldr	r1, .L80
 1272 0008 0020     		movs	r0, #0
 1273 000a FFF7FEFF 		bl	printNotif
 370:modem.c       ****     // create new uint8 variable stust and set to equal the output of the function at_write_command
 371:modem.c       ****     uint8 status = at_write_command("AT+CREG?\r", "OK",DEFAULT_AT_TIMEOUT);
 1274              		.loc 1 371 0
 1275 000e 4FF4FA62 		mov	r2, #2000
 1276 0012 1D49     		ldr	r1, .L80+4
 1277 0014 1D48     		ldr	r0, .L80+8
 1278 0016 FFF7FEFF 		bl	at_write_command
 1279 001a 0346     		mov	r3, r0
 1280 001c FB73     		strb	r3, [r7, #15]
 372:modem.c       ****     
 373:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Extracting string AT+CREG?");
 1281              		.loc 1 373 0
 1282 001e 1C49     		ldr	r1, .L80+12
 1283 0020 0020     		movs	r0, #0
 1284 0022 FFF7FEFF 		bl	printNotif
 374:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"uart_received_string: %s",uart_received_string);
 1285              		.loc 1 374 0
 1286 0026 1B4A     		ldr	r2, .L80+16
 1287 0028 1B49     		ldr	r1, .L80+20
 1288 002a 0020     		movs	r0, #0
 1289 002c FFF7FEFF 		bl	printNotif
 375:modem.c       ****     
 376:modem.c       ****     // If the modem has a status
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 32


 377:modem.c       ****     if(status){
 1290              		.loc 1 377 0
 1291 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1292 0032 002B     		cmp	r3, #0
 1293 0034 21D0     		beq	.L76
 1294              	.LBB8:
 378:modem.c       ****         // Create a character array of length 10 called creg
 379:modem.c       ****         char creg[10];
 380:modem.c       ****         // Extract string from the UART
 381:modem.c       ****         extract_string(uart_received_string,": ","\r",creg);
 1295              		.loc 1 381 0
 1296 0036 3B1D     		adds	r3, r7, #4
 1297 0038 184A     		ldr	r2, .L80+24
 1298 003a 1949     		ldr	r1, .L80+28
 1299 003c 1548     		ldr	r0, .L80+16
 1300 003e FFF7FEFF 		bl	extract_string
 382:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Registered to network, CREG: %s",creg);
 1301              		.loc 1 382 0
 1302 0042 3B1D     		adds	r3, r7, #4
 1303 0044 1A46     		mov	r2, r3
 1304 0046 1749     		ldr	r1, .L80+32
 1305 0048 0020     		movs	r0, #0
 1306 004a FFF7FEFF 		bl	printNotif
 383:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Done extracing string AT+CREG?");
 1307              		.loc 1 383 0
 1308 004e 1649     		ldr	r1, .L80+36
 1309 0050 0020     		movs	r0, #0
 1310 0052 FFF7FEFF 		bl	printNotif
 384:modem.c       ****     
 385:modem.c       ****         // Search creg for "0,1" or "0,5", if either exists and either is not equal to NULL, return
 386:modem.c       ****         if((strstr(creg,"0,1")!=NULL)||(strstr(creg,"0,5")!=NULL)){
 1311              		.loc 1 386 0
 1312 0056 3B1D     		adds	r3, r7, #4
 1313 0058 1449     		ldr	r1, .L80+40
 1314 005a 1846     		mov	r0, r3
 1315 005c FFF7FEFF 		bl	strstr
 1316 0060 0346     		mov	r3, r0
 1317 0062 002B     		cmp	r3, #0
 1318 0064 07D1     		bne	.L77
 1319              		.loc 1 386 0 is_stmt 0 discriminator 1
 1320 0066 3B1D     		adds	r3, r7, #4
 1321 0068 1149     		ldr	r1, .L80+44
 1322 006a 1846     		mov	r0, r3
 1323 006c FFF7FEFF 		bl	strstr
 1324 0070 0346     		mov	r3, r0
 1325 0072 002B     		cmp	r3, #0
 1326 0074 01D0     		beq	.L76
 1327              	.L77:
 387:modem.c       ****             //time_network_connect = getTimeStamp();
 388:modem.c       ****             return 1u;
 1328              		.loc 1 388 0 is_stmt 1
 1329 0076 0123     		movs	r3, #1
 1330 0078 00E0     		b	.L79
 1331              	.L76:
 1332              	.LBE8:
 389:modem.c       ****         }
 390:modem.c       ****     }
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 33


 391:modem.c       ****     // If the modem doesn't have a status, return 0u
 392:modem.c       ****     return 0u;
 1333              		.loc 1 392 0
 1334 007a 0023     		movs	r3, #0
 1335              	.L79:
 393:modem.c       ****         
 394:modem.c       **** }
 1336              		.loc 1 394 0
 1337 007c 1846     		mov	r0, r3
 1338 007e 1037     		adds	r7, r7, #16
 1339              		.cfi_def_cfa_offset 8
 1340 0080 BD46     		mov	sp, r7
 1341              		.cfi_def_cfa_register 13
 1342              		@ sp needed
 1343 0082 80BD     		pop	{r7, pc}
 1344              	.L81:
 1345              		.align	2
 1346              	.L80:
 1347 0084 30020000 		.word	.LC17
 1348 0088 00000000 		.word	.LC0
 1349 008c 44020000 		.word	.LC18
 1350 0090 50020000 		.word	.LC19
 1351 0094 00000000 		.word	uart_received_string
 1352 0098 6C020000 		.word	.LC20
 1353 009c 88020000 		.word	.LC21
 1354 00a0 8C020000 		.word	.LC22
 1355 00a4 90020000 		.word	.LC23
 1356 00a8 B0020000 		.word	.LC24
 1357 00ac D0020000 		.word	.LC25
 1358 00b0 D4020000 		.word	.LC26
 1359              		.cfi_endproc
 1360              	.LFE76:
 1361              		.size	is_connected_to_cell_network, .-is_connected_to_cell_network
 1362              		.section	.rodata
 1363              		.align	2
 1364              	.LC27:
 1365 02d8 41542353 		.ascii	"AT#SGACT=1,1\015\012\000"
 1365      47414354 
 1365      3D312C31 
 1365      0D0A00
 1366              		.section	.text.set_up_internet_connection,"ax",%progbits
 1367              		.align	2
 1368              		.global	set_up_internet_connection
 1369              		.thumb
 1370              		.thumb_func
 1371              		.type	set_up_internet_connection, %function
 1372              	set_up_internet_connection:
 1373              	.LFB77:
 395:modem.c       **** 
 396:modem.c       **** // Connect the modem to the internet
 397:modem.c       **** void set_up_internet_connection(){
 1374              		.loc 1 397 0
 1375              		.cfi_startproc
 1376              		@ args = 0, pretend = 0, frame = 0
 1377              		@ frame_needed = 1, uses_anonymous_args = 0
 1378 0000 80B5     		push	{r7, lr}
 1379              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 34


 1380              		.cfi_offset 7, -8
 1381              		.cfi_offset 14, -4
 1382 0002 00AF     		add	r7, sp, #0
 1383              		.cfi_def_cfa_register 7
 398:modem.c       ****     
 399:modem.c       ****     //port 3
 400:modem.c       ****    //<connId>,<srMode>,<dataMode>, 
 401:modem.c       ****     //at_write_command("AT#SCFGEXT=1,1,0,0,0,0\r", "OK",DEFAULT_AT_TIMEOUT);////LTE modem relevant
 402:modem.c       ****     
 403:modem.c       ****     //<connId>,<cid>,<pktSz>,<maxTo>,<connTo>,<txTo>
 404:modem.c       ****     //at_write_command("AT#SCFG=1,3,300,90,600,50\r", "OK",DEFAULT_AT_TIMEOUT); //LTE modem relevan
 405:modem.c       ****     // <cid>,<stat>
 406:modem.c       ****    
 407:modem.c       ****     // AT command SGACT is Context Activation command is used to activate the specified PDP context
 408:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",1000u);
 1384              		.loc 1 408 0
 1385 0004 4FF47A72 		mov	r2, #1000
 1386 0008 0249     		ldr	r1, .L83
 1387 000a 0348     		ldr	r0, .L83+4
 1388 000c FFF7FEFF 		bl	at_write_command
 409:modem.c       ****     
 410:modem.c       **** }
 1389              		.loc 1 410 0
 1390 0010 00BF     		nop
 1391 0012 80BD     		pop	{r7, pc}
 1392              	.L84:
 1393              		.align	2
 1394              	.L83:
 1395 0014 00000000 		.word	.LC0
 1396 0018 D8020000 		.word	.LC27
 1397              		.cfi_endproc
 1398              	.LFE77:
 1399              		.size	set_up_internet_connection, .-set_up_internet_connection
 1400              		.section	.rodata
 1401 02e7 00       		.align	2
 1402              	.LC28:
 1403 02e8 312C3100 		.ascii	"1,1\000"
 1404              		.align	2
 1405              	.LC29:
 1406 02ec 41542353 		.ascii	"AT#SGACT?\015\000"
 1406      47414354 
 1406      3F0D00
 1407              		.section	.text.is_connected_to_internet,"ax",%progbits
 1408              		.align	2
 1409              		.global	is_connected_to_internet
 1410              		.thumb
 1411              		.thumb_func
 1412              		.type	is_connected_to_internet, %function
 1413              	is_connected_to_internet:
 1414              	.LFB78:
 411:modem.c       **** 
 412:modem.c       **** // Checks if the modem is connected to the internet
 413:modem.c       **** uint8 is_connected_to_internet(){
 1415              		.loc 1 413 0
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 0
 1418              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 35


 1419 0000 80B5     		push	{r7, lr}
 1420              		.cfi_def_cfa_offset 8
 1421              		.cfi_offset 7, -8
 1422              		.cfi_offset 14, -4
 1423 0002 00AF     		add	r7, sp, #0
 1424              		.cfi_def_cfa_register 7
 414:modem.c       ****     // AT command SGACT? reports the range for the parameters <cid> and <stat>
 415:modem.c       ****     // cid: is the Packet Data Protocol (PDP) Context Identifier which specifies the particular PDP
 416:modem.c       ****     // stat: gives the context staus (0 deactivated and 1 activated)
 417:modem.c       ****     // Check for 3,1 if Verizon 
 418:modem.c       ****     if(at_write_command("AT#SGACT?\r", "1,1",DEFAULT_AT_TIMEOUT)){
 1425              		.loc 1 418 0
 1426 0004 4FF4FA62 		mov	r2, #2000
 1427 0008 0549     		ldr	r1, .L88
 1428 000a 0648     		ldr	r0, .L88+4
 1429 000c FFF7FEFF 		bl	at_write_command
 1430 0010 0346     		mov	r3, r0
 1431 0012 002B     		cmp	r3, #0
 1432 0014 01D0     		beq	.L86
 419:modem.c       ****         return 1u;
 1433              		.loc 1 419 0
 1434 0016 0123     		movs	r3, #1
 1435 0018 00E0     		b	.L87
 1436              	.L86:
 420:modem.c       ****     }
 421:modem.c       ****     return 0u;  
 1437              		.loc 1 421 0
 1438 001a 0023     		movs	r3, #0
 1439              	.L87:
 422:modem.c       **** }
 1440              		.loc 1 422 0
 1441 001c 1846     		mov	r0, r3
 1442 001e 80BD     		pop	{r7, pc}
 1443              	.L89:
 1444              		.align	2
 1445              	.L88:
 1446 0020 E8020000 		.word	.LC28
 1447 0024 EC020000 		.word	.LC29
 1448              		.cfi_endproc
 1449              	.LFE78:
 1450              		.size	is_connected_to_internet, .-is_connected_to_internet
 1451              		.section	.rodata
 1452 02f7 00       		.align	2
 1453              	.LC30:
 1454 02f8 41542B43 		.ascii	"AT+CESQ\015\000"
 1454      4553510D 
 1454      00
 1455 0301 000000   		.align	2
 1456              	.LC31:
 1457 0304 4E657477 		.ascii	"Network STts: %s\000"
 1457      6F726B20 
 1457      53547473 
 1457      3A202573 
 1457      00
 1458 0315 000000   		.align	2
 1459              	.LC32:
 1460 0318 2C00     		.ascii	",\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 36


 1461              		.section	.text.get_cell_network_stats,"ax",%progbits
 1462              		.align	2
 1463              		.global	get_cell_network_stats
 1464              		.thumb
 1465              		.thumb_func
 1466              		.type	get_cell_network_stats, %function
 1467              	get_cell_network_stats:
 1468              	.LFB79:
 423:modem.c       **** 
 424:modem.c       **** // Get cellular network stats 
 425:modem.c       **** void get_cell_network_stats(){
 1469              		.loc 1 425 0
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 40
 1472              		@ frame_needed = 1, uses_anonymous_args = 0
 1473 0000 80B5     		push	{r7, lr}
 1474              		.cfi_def_cfa_offset 8
 1475              		.cfi_offset 7, -8
 1476              		.cfi_offset 14, -4
 1477 0002 8AB0     		sub	sp, sp, #40
 1478              		.cfi_def_cfa_offset 48
 1479 0004 00AF     		add	r7, sp, #0
 1480              		.cfi_def_cfa_register 7
 1481              	.LBB9:
 426:modem.c       ****     // Gets RSSI and FER values
 427:modem.c       ****     // RSSI (Received Signal Strength Indicator) is a measurement of how well your device can hear 
 428:modem.c       ****     // RSRQ (Reference Signal Received Quality) (or SQ for short) gives the signal quality. 
 429:modem.c       ****     for(uint8 attempts =0; attempts <10; attempts++){
 1482              		.loc 1 429 0
 1483 0006 0023     		movs	r3, #0
 1484 0008 87F82730 		strb	r3, [r7, #39]
 1485 000c 77E0     		b	.L91
 1486              	.L100:
 1487              	.LBB10:
 430:modem.c       ****         // AT command CESQ checks Signal Quality
 431:modem.c       ****         at_write_command("AT+CESQ\r", "OK",DEFAULT_AT_TIMEOUT);
 1488              		.loc 1 431 0
 1489 000e 4FF4FA62 		mov	r2, #2000
 1490 0012 3F49     		ldr	r1, .L102
 1491 0014 3F48     		ldr	r0, .L102+4
 1492 0016 FFF7FEFF 		bl	at_write_command
 432:modem.c       ****         
 433:modem.c       ****         char cesq[30]; // Create a character array of length 30 called cesq 
 434:modem.c       ****         // Extract string from the UART
 435:modem.c       ****         extract_string(uart_received_string,": ","\r",cesq);
 1493              		.loc 1 435 0
 1494 001a 3B46     		mov	r3, r7
 1495 001c 3E4A     		ldr	r2, .L102+8
 1496 001e 3F49     		ldr	r1, .L102+12
 1497 0020 3F48     		ldr	r0, .L102+16
 1498 0022 FFF7FEFF 		bl	extract_string
 436:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Network STts: %s",cesq);
 1499              		.loc 1 436 0
 1500 0026 3B46     		mov	r3, r7
 1501 0028 1A46     		mov	r2, r3
 1502 002a 3E49     		ldr	r1, .L102+20
 1503 002c 0020     		movs	r0, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 37


 1504 002e FFF7FEFF 		bl	printNotif
 437:modem.c       ****         
 438:modem.c       ****         char *token; // Create a character variable pointer
 439:modem.c       ****         // strtok(): breaks "cesq" into smaller string when sees ","
 440:modem.c       ****         token = strtok(cesq,",");
 1505              		.loc 1 440 0
 1506 0032 3B46     		mov	r3, r7
 1507 0034 3C49     		ldr	r1, .L102+24
 1508 0036 1846     		mov	r0, r3
 1509 0038 FFF7FEFF 		bl	strtok
 1510 003c 3862     		str	r0, [r7, #32]
 441:modem.c       ****         // If token is not NULL then set modem_stats.rssi equal to the integer "token"
 442:modem.c       ****         // int atoi(const char *str) converts the string argument str to an integer (type int).
 443:modem.c       ****         if(token != NULL){
 1511              		.loc 1 443 0
 1512 003e 3B6A     		ldr	r3, [r7, #32]
 1513 0040 002B     		cmp	r3, #0
 1514 0042 06D0     		beq	.L92
 444:modem.c       ****             modem_stats.rssi = atoi(token);
 1515              		.loc 1 444 0
 1516 0044 386A     		ldr	r0, [r7, #32]
 1517 0046 FFF7FEFF 		bl	atoi
 1518 004a 0346     		mov	r3, r0
 1519 004c DAB2     		uxtb	r2, r3
 1520 004e 374B     		ldr	r3, .L102+28
 1521 0050 1A70     		strb	r2, [r3]
 1522              	.L92:
 445:modem.c       ****         }
 446:modem.c       ****         token = strtok(NULL,",");
 1523              		.loc 1 446 0
 1524 0052 3549     		ldr	r1, .L102+24
 1525 0054 0020     		movs	r0, #0
 1526 0056 FFF7FEFF 		bl	strtok
 1527 005a 3862     		str	r0, [r7, #32]
 447:modem.c       ****         if(token != NULL){
 1528              		.loc 1 447 0
 1529 005c 3B6A     		ldr	r3, [r7, #32]
 1530 005e 002B     		cmp	r3, #0
 1531 0060 06D0     		beq	.L93
 448:modem.c       ****             modem_stats.ber = atoi(token);
 1532              		.loc 1 448 0
 1533 0062 386A     		ldr	r0, [r7, #32]
 1534 0064 FFF7FEFF 		bl	atoi
 1535 0068 0346     		mov	r3, r0
 1536 006a DAB2     		uxtb	r2, r3
 1537 006c 2F4B     		ldr	r3, .L102+28
 1538 006e 5A70     		strb	r2, [r3, #1]
 1539              	.L93:
 449:modem.c       ****         }
 450:modem.c       ****         token = strtok(NULL,",");
 1540              		.loc 1 450 0
 1541 0070 2D49     		ldr	r1, .L102+24
 1542 0072 0020     		movs	r0, #0
 1543 0074 FFF7FEFF 		bl	strtok
 1544 0078 3862     		str	r0, [r7, #32]
 451:modem.c       ****         if(token != NULL){
 1545              		.loc 1 451 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 38


 1546 007a 3B6A     		ldr	r3, [r7, #32]
 1547 007c 002B     		cmp	r3, #0
 1548 007e 06D0     		beq	.L94
 452:modem.c       ****             modem_stats.rscp = atoi(token);
 1549              		.loc 1 452 0
 1550 0080 386A     		ldr	r0, [r7, #32]
 1551 0082 FFF7FEFF 		bl	atoi
 1552 0086 0346     		mov	r3, r0
 1553 0088 DAB2     		uxtb	r2, r3
 1554 008a 284B     		ldr	r3, .L102+28
 1555 008c 9A70     		strb	r2, [r3, #2]
 1556              	.L94:
 453:modem.c       ****         }
 454:modem.c       ****         token = strtok(NULL,",");
 1557              		.loc 1 454 0
 1558 008e 2649     		ldr	r1, .L102+24
 1559 0090 0020     		movs	r0, #0
 1560 0092 FFF7FEFF 		bl	strtok
 1561 0096 3862     		str	r0, [r7, #32]
 455:modem.c       ****         if(token != NULL){
 1562              		.loc 1 455 0
 1563 0098 3B6A     		ldr	r3, [r7, #32]
 1564 009a 002B     		cmp	r3, #0
 1565 009c 06D0     		beq	.L95
 456:modem.c       ****             modem_stats.ecno = atoi(token);
 1566              		.loc 1 456 0
 1567 009e 386A     		ldr	r0, [r7, #32]
 1568 00a0 FFF7FEFF 		bl	atoi
 1569 00a4 0346     		mov	r3, r0
 1570 00a6 DAB2     		uxtb	r2, r3
 1571 00a8 204B     		ldr	r3, .L102+28
 1572 00aa DA70     		strb	r2, [r3, #3]
 1573              	.L95:
 457:modem.c       ****         }
 458:modem.c       ****         token = strtok(NULL,",");
 1574              		.loc 1 458 0
 1575 00ac 1E49     		ldr	r1, .L102+24
 1576 00ae 0020     		movs	r0, #0
 1577 00b0 FFF7FEFF 		bl	strtok
 1578 00b4 3862     		str	r0, [r7, #32]
 459:modem.c       ****         if(token != NULL){
 1579              		.loc 1 459 0
 1580 00b6 3B6A     		ldr	r3, [r7, #32]
 1581 00b8 002B     		cmp	r3, #0
 1582 00ba 06D0     		beq	.L96
 460:modem.c       ****             modem_stats.rsrq = atoi(token);
 1583              		.loc 1 460 0
 1584 00bc 386A     		ldr	r0, [r7, #32]
 1585 00be FFF7FEFF 		bl	atoi
 1586 00c2 0346     		mov	r3, r0
 1587 00c4 DAB2     		uxtb	r2, r3
 1588 00c6 194B     		ldr	r3, .L102+28
 1589 00c8 1A71     		strb	r2, [r3, #4]
 1590              	.L96:
 461:modem.c       ****         }
 462:modem.c       ****         token = strtok(NULL,",");
 1591              		.loc 1 462 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 39


 1592 00ca 1749     		ldr	r1, .L102+24
 1593 00cc 0020     		movs	r0, #0
 1594 00ce FFF7FEFF 		bl	strtok
 1595 00d2 3862     		str	r0, [r7, #32]
 463:modem.c       ****         if(token != NULL){
 1596              		.loc 1 463 0
 1597 00d4 3B6A     		ldr	r3, [r7, #32]
 1598 00d6 002B     		cmp	r3, #0
 1599 00d8 06D0     		beq	.L97
 464:modem.c       ****             modem_stats.rsrp = atoi(token);
 1600              		.loc 1 464 0
 1601 00da 386A     		ldr	r0, [r7, #32]
 1602 00dc FFF7FEFF 		bl	atoi
 1603 00e0 0346     		mov	r3, r0
 1604 00e2 DAB2     		uxtb	r2, r3
 1605 00e4 114B     		ldr	r3, .L102+28
 1606 00e6 5A71     		strb	r2, [r3, #5]
 1607              	.L97:
 465:modem.c       ****         }
 466:modem.c       ****         // If rsrp is not equal to 255 then break.
 467:modem.c       ****         if(modem_stats.rsrp != 255){
 1608              		.loc 1 467 0
 1609 00e8 104B     		ldr	r3, .L102+28
 1610 00ea 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1611 00ec FF2B     		cmp	r3, #255
 1612 00ee 01D0     		beq	.L98
 468:modem.c       ****             break;
 1613              		.loc 1 468 0
 1614 00f0 00BF     		nop
 1615              	.LBE10:
 1616              	.LBE9:
 469:modem.c       ****         }
 470:modem.c       ****     }
 471:modem.c       **** }
 1617              		.loc 1 471 0
 1618 00f2 08E0     		b	.L101
 1619              	.L98:
 1620              	.LBB11:
 429:modem.c       ****         // AT command CESQ checks Signal Quality
 1621              		.loc 1 429 0
 1622 00f4 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1623 00f8 0133     		adds	r3, r3, #1
 1624 00fa 87F82730 		strb	r3, [r7, #39]
 1625              	.L91:
 429:modem.c       ****         // AT command CESQ checks Signal Quality
 1626              		.loc 1 429 0 is_stmt 0 discriminator 1
 1627 00fe 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1628 0102 092B     		cmp	r3, #9
 1629 0104 83D9     		bls	.L100
 1630              	.L101:
 1631              	.LBE11:
 1632              		.loc 1 471 0 is_stmt 1
 1633 0106 00BF     		nop
 1634 0108 2837     		adds	r7, r7, #40
 1635              		.cfi_def_cfa_offset 8
 1636 010a BD46     		mov	sp, r7
 1637              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 40


 1638              		@ sp needed
 1639 010c 80BD     		pop	{r7, pc}
 1640              	.L103:
 1641 010e 00BF     		.align	2
 1642              	.L102:
 1643 0110 00000000 		.word	.LC0
 1644 0114 F8020000 		.word	.LC30
 1645 0118 88020000 		.word	.LC21
 1646 011c 8C020000 		.word	.LC22
 1647 0120 00000000 		.word	uart_received_string
 1648 0124 04030000 		.word	.LC31
 1649 0128 18030000 		.word	.LC32
 1650 012c 00000000 		.word	modem_stats
 1651              		.cfi_endproc
 1652              	.LFE79:
 1653              		.size	get_cell_network_stats, .-get_cell_network_stats
 1654              		.section	.text.updatable_parameters_initialize,"ax",%progbits
 1655              		.align	2
 1656              		.global	updatable_parameters_initialize
 1657              		.thumb
 1658              		.thumb_func
 1659              		.type	updatable_parameters_initialize, %function
 1660              	updatable_parameters_initialize:
 1661              	.LFB80:
 472:modem.c       **** // Initialize updatable parameters (sampling, reporting, and debug frequencies)
 473:modem.c       **** void updatable_parameters_initialize(){
 1662              		.loc 1 473 0
 1663              		.cfi_startproc
 1664              		@ args = 0, pretend = 0, frame = 0
 1665              		@ frame_needed = 1, uses_anonymous_args = 0
 1666              		@ link register save eliminated.
 1667 0000 80B4     		push	{r7}
 1668              		.cfi_def_cfa_offset 4
 1669              		.cfi_offset 7, -4
 1670 0002 00AF     		add	r7, sp, #0
 1671              		.cfi_def_cfa_register 7
 474:modem.c       ****     updatable_parameters.measure_time = 10u;
 1672              		.loc 1 474 0
 1673 0004 064B     		ldr	r3, .L105
 1674 0006 0A22     		movs	r2, #10
 1675 0008 1A70     		strb	r2, [r3]
 475:modem.c       ****     updatable_parameters.sync_time = 60u;
 1676              		.loc 1 475 0
 1677 000a 054B     		ldr	r3, .L105
 1678 000c 3C22     		movs	r2, #60
 1679 000e 5A70     		strb	r2, [r3, #1]
 476:modem.c       ****     updatable_parameters.debug_level = 1u;
 1680              		.loc 1 476 0
 1681 0010 034B     		ldr	r3, .L105
 1682 0012 0122     		movs	r2, #1
 1683 0014 9A70     		strb	r2, [r3, #2]
 477:modem.c       **** }
 1684              		.loc 1 477 0
 1685 0016 00BF     		nop
 1686 0018 BD46     		mov	sp, r7
 1687              		.cfi_def_cfa_register 13
 1688              		@ sp needed
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 41


 1689 001a 80BC     		pop	{r7}
 1690              		.cfi_restore 7
 1691              		.cfi_def_cfa_offset 0
 1692 001c 7047     		bx	lr
 1693              	.L106:
 1694 001e 00BF     		.align	2
 1695              	.L105:
 1696 0020 00000000 		.word	updatable_parameters
 1697              		.cfi_endproc
 1698              	.LFE80:
 1699              		.size	updatable_parameters_initialize, .-updatable_parameters_initialize
 1700              		.section	.rodata
 1701 031a 0000     		.align	2
 1702              	.LC33:
 1703 031c 53616D70 		.ascii	"Sample_Freq: \000"
 1703      6C655F46 
 1703      7265713A 
 1703      2000
 1704 032a 0000     		.align	2
 1705              	.LC34:
 1706 032c 5265706F 		.ascii	"Report_Freq: \000"
 1706      72745F46 
 1706      7265713A 
 1706      2000
 1707 033a 0000     		.align	2
 1708              	.LC35:
 1709 033c 44656275 		.ascii	"Debug_Freq: \000"
 1709      675F4672 
 1709      65713A20 
 1709      00
 1710 0349 000000   		.align	2
 1711              	.LC36:
 1712 034c 256400   		.ascii	"%d\000"
 1713 034f 00       		.align	2
 1714              	.LC37:
 1715 0350 53616D70 		.ascii	"Sampling frequency changed to: %d\015\012\000"
 1715      6C696E67 
 1715      20667265 
 1715      7175656E 
 1715      63792063 
 1716              		.align	2
 1717              	.LC38:
 1718 0374 436F756C 		.ascii	"Could not parse new sampling frequency value.\000"
 1718      64206E6F 
 1718      74207061 
 1718      72736520 
 1718      6E657720 
 1719 03a2 0000     		.align	2
 1720              	.LC39:
 1721 03a4 5265706F 		.ascii	"Reporting frequency changed to: %d\015\012\000"
 1721      7274696E 
 1721      67206672 
 1721      65717565 
 1721      6E637920 
 1722 03c9 000000   		.align	2
 1723              	.LC40:
 1724 03cc 436F756C 		.ascii	"Could not parse new reporting frequency value.\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 42


 1724      64206E6F 
 1724      74207061 
 1724      72736520 
 1724      6E657720 
 1725 03fb 00       		.align	2
 1726              	.LC41:
 1727 03fc 44656275 		.ascii	"Debug printing frequency changed to: %d\015\012\000"
 1727      67207072 
 1727      696E7469 
 1727      6E672066 
 1727      72657175 
 1728 0426 0000     		.align	2
 1729              	.LC42:
 1730 0428 436F756C 		.ascii	"Could not parse new debugging frequency value.\000"
 1730      64206E6F 
 1730      74207061 
 1730      72736520 
 1730      6E657720 
 1731              		.section	.text.get_updated_parameters_from_malcom,"ax",%progbits
 1732              		.align	2
 1733              		.global	get_updated_parameters_from_malcom
 1734              		.thumb
 1735              		.thumb_func
 1736              		.type	get_updated_parameters_from_malcom, %function
 1737              	get_updated_parameters_from_malcom:
 1738              	.LFB81:
 478:modem.c       **** 
 479:modem.c       **** // Get the update values for sampling frequency, reporting frequency, and the debug level from the 
 480:modem.c       **** void get_updated_parameters_from_malcom(){
 1739              		.loc 1 480 0
 1740              		.cfi_startproc
 1741              		@ args = 0, pretend = 0, frame = 80
 1742              		@ frame_needed = 1, uses_anonymous_args = 0
 1743 0000 90B5     		push	{r4, r7, lr}
 1744              		.cfi_def_cfa_offset 12
 1745              		.cfi_offset 4, -12
 1746              		.cfi_offset 7, -8
 1747              		.cfi_offset 14, -4
 1748 0002 95B0     		sub	sp, sp, #84
 1749              		.cfi_def_cfa_offset 96
 1750 0004 00AF     		add	r7, sp, #0
 1751              		.cfi_def_cfa_register 7
 481:modem.c       ****     
 482:modem.c       ****     // Create character array of size 1024 characters to hold the uart received string
 483:modem.c       ****     char s_sample_freq[20];
 484:modem.c       ****     char s_report_freq[20];
 485:modem.c       ****     char s_debug_freq[20];
 486:modem.c       ****     
 487:modem.c       ****     // Extract UART string recieved from the modem and save to variables
 488:modem.c       ****     extract_string(uart_received_string,"Sample_Freq: ","\r",s_sample_freq);
 1752              		.loc 1 488 0
 1753 0006 07F13C03 		add	r3, r7, #60
 1754 000a 414A     		ldr	r2, .L115
 1755 000c 4149     		ldr	r1, .L115+4
 1756 000e 4248     		ldr	r0, .L115+8
 1757 0010 FFF7FEFF 		bl	extract_string
 489:modem.c       ****     extract_string(uart_received_string,"Report_Freq: ","\r",s_report_freq);
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 43


 1758              		.loc 1 489 0
 1759 0014 07F12803 		add	r3, r7, #40
 1760 0018 3D4A     		ldr	r2, .L115
 1761 001a 4049     		ldr	r1, .L115+12
 1762 001c 3E48     		ldr	r0, .L115+8
 1763 001e FFF7FEFF 		bl	extract_string
 490:modem.c       ****     extract_string(uart_received_string,"Debug_Freq: ","\r",s_debug_freq);
 1764              		.loc 1 490 0
 1765 0022 07F11403 		add	r3, r7, #20
 1766 0026 3A4A     		ldr	r2, .L115
 1767 0028 3D49     		ldr	r1, .L115+16
 1768 002a 3B48     		ldr	r0, .L115+8
 1769 002c FFF7FEFF 		bl	extract_string
 491:modem.c       ****     
 492:modem.c       ****     // Create variables for what is sent back from the server
 493:modem.c       ****     int sample_freq, report_freq, debug_freq;
 494:modem.c       ****     
 495:modem.c       ****     
 496:modem.c       ****     // Scan character arrays and save values 
 497:modem.c       ****     if(sscanf(s_sample_freq, "%d", &sample_freq)==1){
 1770              		.loc 1 497 0
 1771 0030 07F11002 		add	r2, r7, #16
 1772 0034 07F13C03 		add	r3, r7, #60
 1773 0038 3A49     		ldr	r1, .L115+20
 1774 003a 1846     		mov	r0, r3
 1775 003c FFF7FEFF 		bl	sscanf
 1776 0040 0346     		mov	r3, r0
 1777 0042 012B     		cmp	r3, #1
 1778 0044 19D1     		bne	.L108
 498:modem.c       ****         updatable_parameters.measure_time = sample_freq;
 1779              		.loc 1 498 0
 1780 0046 3B69     		ldr	r3, [r7, #16]
 1781 0048 DAB2     		uxtb	r2, r3
 1782 004a 374B     		ldr	r3, .L115+24
 1783 004c 1A70     		strb	r2, [r3]
 499:modem.c       ****         // Create a continuous alarm called alarmMeasure that triggers at the required time to take
 500:modem.c       ****         alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_C
 1784              		.loc 1 500 0
 1785 004e 364B     		ldr	r3, .L115+24
 1786 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1787 0052 99B2     		uxth	r1, r3
 1788 0054 354C     		ldr	r4, .L115+28
 1789 0056 3846     		mov	r0, r7
 1790 0058 0723     		movs	r3, #7
 1791 005a 0122     		movs	r2, #1
 1792 005c FFF7FEFF 		bl	CreateAlarm
 1793 0060 2246     		mov	r2, r4
 1794 0062 3B46     		mov	r3, r7
 1795 0064 1968     		ldr	r1, [r3]	@ unaligned
 1796 0066 1160     		str	r1, [r2]	@ unaligned
 1797 0068 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 1798 006a 9380     		strh	r3, [r2, #4]	@ unaligned
 501:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Sampling frequency changed to: %d\r\n", sample_freq);
 1799              		.loc 1 501 0
 1800 006c 3B69     		ldr	r3, [r7, #16]
 1801 006e 1A46     		mov	r2, r3
 1802 0070 2F49     		ldr	r1, .L115+32
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 44


 1803 0072 0020     		movs	r0, #0
 1804 0074 FFF7FEFF 		bl	printNotif
 1805 0078 03E0     		b	.L109
 1806              	.L108:
 502:modem.c       ****     }else{
 503:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new sampling frequency value.");
 1807              		.loc 1 503 0
 1808 007a 2E49     		ldr	r1, .L115+36
 1809 007c 0220     		movs	r0, #2
 1810 007e FFF7FEFF 		bl	printNotif
 1811              	.L109:
 504:modem.c       ****     }
 505:modem.c       ****     if(sscanf(s_report_freq, "%d", &report_freq)==1){
 1812              		.loc 1 505 0
 1813 0082 07F10C02 		add	r2, r7, #12
 1814 0086 07F12803 		add	r3, r7, #40
 1815 008a 2649     		ldr	r1, .L115+20
 1816 008c 1846     		mov	r0, r3
 1817 008e FFF7FEFF 		bl	sscanf
 1818 0092 0346     		mov	r3, r0
 1819 0094 012B     		cmp	r3, #1
 1820 0096 19D1     		bne	.L110
 506:modem.c       ****         updatable_parameters.sync_time = report_freq;
 1821              		.loc 1 506 0
 1822 0098 FB68     		ldr	r3, [r7, #12]
 1823 009a DAB2     		uxtb	r2, r3
 1824 009c 224B     		ldr	r3, .L115+24
 1825 009e 5A70     		strb	r2, [r3, #1]
 507:modem.c       ****         // Create a continuous alarm called alarmSync that triggers at the required time to sync th
 508:modem.c       ****         alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINU
 1826              		.loc 1 508 0
 1827 00a0 214B     		ldr	r3, .L115+24
 1828 00a2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1829 00a4 99B2     		uxth	r1, r3
 1830 00a6 244C     		ldr	r4, .L115+40
 1831 00a8 3846     		mov	r0, r7
 1832 00aa 0723     		movs	r3, #7
 1833 00ac 0122     		movs	r2, #1
 1834 00ae FFF7FEFF 		bl	CreateAlarm
 1835 00b2 2246     		mov	r2, r4
 1836 00b4 3B46     		mov	r3, r7
 1837 00b6 1968     		ldr	r1, [r3]	@ unaligned
 1838 00b8 1160     		str	r1, [r2]	@ unaligned
 1839 00ba 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 1840 00bc 9380     		strh	r3, [r2, #4]	@ unaligned
 509:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Reporting frequency changed to: %d\r\n", report_freq);
 1841              		.loc 1 509 0
 1842 00be FB68     		ldr	r3, [r7, #12]
 1843 00c0 1A46     		mov	r2, r3
 1844 00c2 1E49     		ldr	r1, .L115+44
 1845 00c4 0020     		movs	r0, #0
 1846 00c6 FFF7FEFF 		bl	printNotif
 1847 00ca 03E0     		b	.L111
 1848              	.L110:
 510:modem.c       ****         }else{
 511:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new reporting frequency value.");
 1849              		.loc 1 511 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 45


 1850 00cc 1C49     		ldr	r1, .L115+48
 1851 00ce 0220     		movs	r0, #2
 1852 00d0 FFF7FEFF 		bl	printNotif
 1853              	.L111:
 512:modem.c       ****     }
 513:modem.c       ****     if(sscanf(s_debug_freq, "%d", &debug_freq)==1){
 1854              		.loc 1 513 0
 1855 00d4 07F10802 		add	r2, r7, #8
 1856 00d8 07F11403 		add	r3, r7, #20
 1857 00dc 1149     		ldr	r1, .L115+20
 1858 00de 1846     		mov	r0, r3
 1859 00e0 FFF7FEFF 		bl	sscanf
 1860 00e4 0346     		mov	r3, r0
 1861 00e6 012B     		cmp	r3, #1
 1862 00e8 0AD1     		bne	.L112
 514:modem.c       ****         updatable_parameters.debug_level = debug_freq;
 1863              		.loc 1 514 0
 1864 00ea BB68     		ldr	r3, [r7, #8]
 1865 00ec DAB2     		uxtb	r2, r3
 1866 00ee 0E4B     		ldr	r3, .L115+24
 1867 00f0 9A70     		strb	r2, [r3, #2]
 515:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Debug printing frequency changed to: %d\r\n", debug_freq);
 1868              		.loc 1 515 0
 1869 00f2 BB68     		ldr	r3, [r7, #8]
 1870 00f4 1A46     		mov	r2, r3
 1871 00f6 1349     		ldr	r1, .L115+52
 1872 00f8 0020     		movs	r0, #0
 1873 00fa FFF7FEFF 		bl	printNotif
 516:modem.c       ****     }else{
 517:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new debugging frequency value.");
 518:modem.c       ****     }
 519:modem.c       **** }
 1874              		.loc 1 519 0
 1875 00fe 03E0     		b	.L114
 1876              	.L112:
 517:modem.c       ****     }
 1877              		.loc 1 517 0
 1878 0100 1149     		ldr	r1, .L115+56
 1879 0102 0220     		movs	r0, #2
 1880 0104 FFF7FEFF 		bl	printNotif
 1881              	.L114:
 1882              		.loc 1 519 0
 1883 0108 00BF     		nop
 1884 010a 5437     		adds	r7, r7, #84
 1885              		.cfi_def_cfa_offset 12
 1886 010c BD46     		mov	sp, r7
 1887              		.cfi_def_cfa_register 13
 1888              		@ sp needed
 1889 010e 90BD     		pop	{r4, r7, pc}
 1890              	.L116:
 1891              		.align	2
 1892              	.L115:
 1893 0110 88020000 		.word	.LC21
 1894 0114 1C030000 		.word	.LC33
 1895 0118 00000000 		.word	uart_received_string
 1896 011c 2C030000 		.word	.LC34
 1897 0120 3C030000 		.word	.LC35
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 46


 1898 0124 4C030000 		.word	.LC36
 1899 0128 00000000 		.word	updatable_parameters
 1900 012c 00000000 		.word	alarmMeasure
 1901 0130 50030000 		.word	.LC37
 1902 0134 74030000 		.word	.LC38
 1903 0138 00000000 		.word	alarmSync
 1904 013c A4030000 		.word	.LC39
 1905 0140 CC030000 		.word	.LC40
 1906 0144 FC030000 		.word	.LC41
 1907 0148 28040000 		.word	.LC42
 1908              		.cfi_endproc
 1909              	.LFE81:
 1910              		.size	get_updated_parameters_from_malcom, .-get_updated_parameters_from_malcom
 1911              		.section	.rodata
 1912 0457 00       		.align	2
 1913              	.LC43:
 1914 0458 41542343 		.ascii	"AT#CGMM\015\000"
 1914      474D4D0D 
 1914      00
 1915 0461 000000   		.align	2
 1916              	.LC44:
 1917 0464 4D6F6465 		.ascii	"Modem Model: %s\000"
 1917      6D204D6F 
 1917      64656C3A 
 1917      20257300 
 1918              		.align	2
 1919              	.LC45:
 1920 0474 41542343 		.ascii	"AT#CCID\015\000"
 1920      4349440D 
 1920      00
 1921 047d 000000   		.align	2
 1922              	.LC46:
 1923 0480 53494D20 		.ascii	"SIM ID: %s\000"
 1923      49443A20 
 1923      257300
 1924 048b 00       		.align	2
 1925              	.LC47:
 1926 048c 41542B43 		.ascii	"AT+CGSN\015\000"
 1926      47534E0D 
 1926      00
 1927 0495 000000   		.align	2
 1928              	.LC48:
 1929 0498 494D4549 		.ascii	"IMEI: %s\000"
 1929      3A202573 
 1929      00
 1930 04a1 000000   		.align	2
 1931              	.LC49:
 1932 04a4 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\015\012"
 1932      4744434F 
 1932      4E543D31 
 1932      2C224950 
 1932      222C2277 
 1933 04cd 00       		.ascii	"\000"
 1934 04ce 0000     		.align	2
 1935              	.LC50:
 1936 04d0 41542B43 		.ascii	"AT+CFUN?\015\000"
 1936      46554E3F 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 47


 1936      0D00
 1937 04da 0000     		.align	2
 1938              	.LC51:
 1939 04dc 4346554E 		.ascii	"CFUN: %s\000"
 1939      3A202573 
 1939      00
 1940 04e5 000000   		.align	2
 1941              	.LC52:
 1942 04e8 41542B43 		.ascii	"AT+CFUN=1\015\000"
 1942      46554E3D 
 1942      310D00
 1943              		.section	.text.modem_configure_settings,"ax",%progbits
 1944              		.align	2
 1945              		.global	modem_configure_settings
 1946              		.thumb
 1947              		.thumb_func
 1948              		.type	modem_configure_settings, %function
 1949              	modem_configure_settings:
 1950              	.LFB82:
 520:modem.c       ****     
 521:modem.c       **** // Configure the modem settings
 522:modem.c       **** void modem_configure_settings(){
 1951              		.loc 1 522 0
 1952              		.cfi_startproc
 1953              		@ args = 0, pretend = 0, frame = 16
 1954              		@ frame_needed = 1, uses_anonymous_args = 0
 1955 0000 80B5     		push	{r7, lr}
 1956              		.cfi_def_cfa_offset 8
 1957              		.cfi_offset 7, -8
 1958              		.cfi_offset 14, -4
 1959 0002 84B0     		sub	sp, sp, #16
 1960              		.cfi_def_cfa_offset 24
 1961 0004 00AF     		add	r7, sp, #0
 1962              		.cfi_def_cfa_register 7
 523:modem.c       ****     
 524:modem.c       ****     // Save/print modem model ID number
 525:modem.c       ****     if(modem_info.model_id[0] == '\0'){
 1963              		.loc 1 525 0
 1964 0006 3B4B     		ldr	r3, .L124
 1965 0008 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1966 000a 002B     		cmp	r3, #0
 1967 000c 13D1     		bne	.L118
 526:modem.c       ****         // AT command #CGMM returns the "device model identification" code with the command echo.
 527:modem.c       ****         if(at_write_command("AT#CGMM\r","OK",DEFAULT_AT_TIMEOUT)){
 1968              		.loc 1 527 0
 1969 000e 4FF4FA62 		mov	r2, #2000
 1970 0012 3949     		ldr	r1, .L124+4
 1971 0014 3948     		ldr	r0, .L124+8
 1972 0016 FFF7FEFF 		bl	at_write_command
 1973 001a 0346     		mov	r3, r0
 1974 001c 002B     		cmp	r3, #0
 1975 001e 0AD0     		beq	.L118
 528:modem.c       ****             // Extract modem model ID number string from the UART
 529:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.model_id);
 1976              		.loc 1 529 0
 1977 0020 374B     		ldr	r3, .L124+12
 1978 0022 384A     		ldr	r2, .L124+16
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 48


 1979 0024 3849     		ldr	r1, .L124+20
 1980 0026 3948     		ldr	r0, .L124+24
 1981 0028 FFF7FEFF 		bl	extract_string
 530:modem.c       ****             // Print modem model ID number
 531:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem Model: %s",modem_info.model_id);
 1982              		.loc 1 531 0
 1983 002c 344A     		ldr	r2, .L124+12
 1984 002e 3849     		ldr	r1, .L124+28
 1985 0030 0020     		movs	r0, #0
 1986 0032 FFF7FEFF 		bl	printNotif
 1987              	.L118:
 532:modem.c       ****         }
 533:modem.c       ****     }
 534:modem.c       ****     
 535:modem.c       ****    // Save/print SIM-card ID
 536:modem.c       ****    if(modem_info.sim_id[0] == '\0'){
 1988              		.loc 1 536 0
 1989 0036 2F4B     		ldr	r3, .L124
 1990 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1991 003a 002B     		cmp	r3, #0
 1992 003c 13D1     		bne	.L119
 537:modem.c       ****         // AT command #CCID is an execution command that reads the SIM number 
 538:modem.c       ****         if(at_write_command("AT#CCID\r", "OK", DEFAULT_AT_TIMEOUT)){
 1993              		.loc 1 538 0
 1994 003e 4FF4FA62 		mov	r2, #2000
 1995 0042 2D49     		ldr	r1, .L124+4
 1996 0044 3348     		ldr	r0, .L124+32
 1997 0046 FFF7FEFF 		bl	at_write_command
 1998 004a 0346     		mov	r3, r0
 1999 004c 002B     		cmp	r3, #0
 2000 004e 0AD0     		beq	.L119
 539:modem.c       ****             // Extract SIM-card ID string from the UART
 540:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.sim_id);
 2001              		.loc 1 540 0
 2002 0050 284B     		ldr	r3, .L124
 2003 0052 2C4A     		ldr	r2, .L124+16
 2004 0054 2C49     		ldr	r1, .L124+20
 2005 0056 2D48     		ldr	r0, .L124+24
 2006 0058 FFF7FEFF 		bl	extract_string
 541:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"SIM ID: %s",modem_info.sim_id);
 2007              		.loc 1 541 0
 2008 005c 254A     		ldr	r2, .L124
 2009 005e 2E49     		ldr	r1, .L124+36
 2010 0060 0020     		movs	r0, #0
 2011 0062 FFF7FEFF 		bl	printNotif
 2012              	.L119:
 542:modem.c       ****         }
 543:modem.c       ****    }
 544:modem.c       **** 
 545:modem.c       ****     // Save/print modem IMEI
 546:modem.c       ****     if(modem_info.imei[0] == '\0'){
 2013              		.loc 1 546 0
 2014 0066 234B     		ldr	r3, .L124
 2015 0068 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 2016 006c 002B     		cmp	r3, #0
 2017 006e 13D1     		bne	.L120
 547:modem.c       ****         // AT command #CGSN returns the product serial number, identified as the IMEI of the mobile
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 49


 548:modem.c       ****         if(at_write_command("AT+CGSN\r","OK",DEFAULT_AT_TIMEOUT)){
 2018              		.loc 1 548 0
 2019 0070 4FF4FA62 		mov	r2, #2000
 2020 0074 2049     		ldr	r1, .L124+4
 2021 0076 2948     		ldr	r0, .L124+40
 2022 0078 FFF7FEFF 		bl	at_write_command
 2023 007c 0346     		mov	r3, r0
 2024 007e 002B     		cmp	r3, #0
 2025 0080 0AD0     		beq	.L120
 549:modem.c       ****             // Extract modem IMEI number string from the UART
 550:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.imei);
 2026              		.loc 1 550 0
 2027 0082 274B     		ldr	r3, .L124+44
 2028 0084 1F4A     		ldr	r2, .L124+16
 2029 0086 2049     		ldr	r1, .L124+20
 2030 0088 2048     		ldr	r0, .L124+24
 2031 008a FFF7FEFF 		bl	extract_string
 551:modem.c       ****             // Print modem IMEI number
 552:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"IMEI: %s",modem_info.imei);
 2032              		.loc 1 552 0
 2033 008e 244A     		ldr	r2, .L124+44
 2034 0090 2449     		ldr	r1, .L124+48
 2035 0092 0020     		movs	r0, #0
 2036 0094 FFF7FEFF 		bl	printNotif
 2037              	.L120:
 553:modem.c       ****         } 
 554:modem.c       ****     }
 555:modem.c       ****     
 556:modem.c       ****     // Configure protocol and cellular end point
 557:modem.c       ****     // AT command +CGDCONT defines the PDP context parameter values for a PDP context identified by
 558:modem.c       ****     at_write_command("AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\r\n", "OK", DEFAULT_AT_TIMEOUT);
 2038              		.loc 1 558 0
 2039 0098 4FF4FA62 		mov	r2, #2000
 2040 009c 1649     		ldr	r1, .L124+4
 2041 009e 2248     		ldr	r0, .L124+52
 2042 00a0 FFF7FEFF 		bl	at_write_command
 559:modem.c       ****     
 560:modem.c       ****     // Check if modem power savings is enabled. If so, disable it so we can send data.
 561:modem.c       ****     // AT command +CFUN? is a read command that reports the current setting of <fun> which is the p
 562:modem.c       ****     if(at_write_command("AT+CFUN?\r", "OK",DEFAULT_AT_TIMEOUT)){
 2043              		.loc 1 562 0
 2044 00a4 4FF4FA62 		mov	r2, #2000
 2045 00a8 1349     		ldr	r1, .L124+4
 2046 00aa 2048     		ldr	r0, .L124+56
 2047 00ac FFF7FEFF 		bl	at_write_command
 2048 00b0 0346     		mov	r3, r0
 2049 00b2 002B     		cmp	r3, #0
 2050 00b4 19D0     		beq	.L123
 2051              	.LBB12:
 563:modem.c       ****         char CFUN[10]; // Create a character array of length 10 called CFUN 
 564:modem.c       ****         // Extract UART string recieved from the modem
 565:modem.c       ****         extract_string(uart_received_string,": ","\r",CFUN);
 2052              		.loc 1 565 0
 2053 00b6 3B1D     		adds	r3, r7, #4
 2054 00b8 124A     		ldr	r2, .L124+16
 2055 00ba 1349     		ldr	r1, .L124+20
 2056 00bc 1348     		ldr	r0, .L124+24
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 50


 2057 00be FFF7FEFF 		bl	extract_string
 566:modem.c       ****         // Print UART string recieved from the modem
 567:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"CFUN: %s",CFUN);
 2058              		.loc 1 567 0
 2059 00c2 3B1D     		adds	r3, r7, #4
 2060 00c4 1A46     		mov	r2, r3
 2061 00c6 1A49     		ldr	r1, .L124+60
 2062 00c8 0020     		movs	r0, #0
 2063 00ca FFF7FEFF 		bl	printNotif
 568:modem.c       ****         // Search CRUN for "1", if "1" exists, it will return 1u otherwise it will return NULL
 569:modem.c       ****         // If it returns NULL, then write another command to the modem
 570:modem.c       ****         if(strstr(CFUN,"1") == NULL){
 2064              		.loc 1 570 0
 2065 00ce 3B1D     		adds	r3, r7, #4
 2066 00d0 3121     		movs	r1, #49
 2067 00d2 1846     		mov	r0, r3
 2068 00d4 FFF7FEFF 		bl	strchr
 2069 00d8 0346     		mov	r3, r0
 2070 00da 002B     		cmp	r3, #0
 2071 00dc 05D1     		bne	.L123
 571:modem.c       ****             // AT command +CFUN= is a set command which selects the level of functionality in the m
 572:modem.c       ****             // = 1 means mobile full functionality with power saving disabled 
 573:modem.c       ****             at_write_command("AT+CFUN=1\r", "OK",DEFAULT_AT_TIMEOUT);
 2072              		.loc 1 573 0
 2073 00de 4FF4FA62 		mov	r2, #2000
 2074 00e2 0549     		ldr	r1, .L124+4
 2075 00e4 1348     		ldr	r0, .L124+64
 2076 00e6 FFF7FEFF 		bl	at_write_command
 2077              	.L123:
 2078              	.LBE12:
 574:modem.c       ****         }
 575:modem.c       ****     }
 576:modem.c       **** 
 577:modem.c       ****     
 578:modem.c       **** }
 2079              		.loc 1 578 0
 2080 00ea 00BF     		nop
 2081 00ec 1037     		adds	r7, r7, #16
 2082              		.cfi_def_cfa_offset 8
 2083 00ee BD46     		mov	sp, r7
 2084              		.cfi_def_cfa_register 13
 2085              		@ sp needed
 2086 00f0 80BD     		pop	{r7, pc}
 2087              	.L125:
 2088 00f2 00BF     		.align	2
 2089              	.L124:
 2090 00f4 00000000 		.word	modem_info
 2091 00f8 00000000 		.word	.LC0
 2092 00fc 58040000 		.word	.LC43
 2093 0100 14000000 		.word	modem_info+20
 2094 0104 88020000 		.word	.LC21
 2095 0108 8C020000 		.word	.LC22
 2096 010c 00000000 		.word	uart_received_string
 2097 0110 64040000 		.word	.LC44
 2098 0114 74040000 		.word	.LC45
 2099 0118 80040000 		.word	.LC46
 2100 011c 8C040000 		.word	.LC47
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 51


 2101 0120 28000000 		.word	modem_info+40
 2102 0124 98040000 		.word	.LC48
 2103 0128 A4040000 		.word	.LC49
 2104 012c D0040000 		.word	.LC50
 2105 0130 DC040000 		.word	.LC51
 2106 0134 E8040000 		.word	.LC52
 2107              		.cfi_endproc
 2108              	.LFE82:
 2109              		.size	modem_configure_settings, .-modem_configure_settings
 2110              		.section	.rodata
 2111 04f3 00       		.align	2
 2112              	.LC53:
 2113 04f4 4D6F6465 		.ascii	"Modem not ready to get time. Not conncted to networ"
 2113      6D206E6F 
 2113      74207265 
 2113      61647920 
 2113      746F2067 
 2114 0527 6B2E00   		.ascii	"k.\000"
 2115 052a 0000     		.align	2
 2116              	.LC54:
 2117 052c 41542B43 		.ascii	"AT+CCLK?\015\000"
 2117      434C4B3F 
 2117      0D00
 2118 0536 0000     		.align	2
 2119              	.LC55:
 2120 0538 220D00   		.ascii	"\"\015\000"
 2121 053b 00       		.align	2
 2122              	.LC56:
 2123 053c 3A202200 		.ascii	": \"\000"
 2124              		.align	2
 2125              	.LC57:
 2126 0540 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d-%d\000"
 2126      642F2564 
 2126      2C25643A 
 2126      25643A25 
 2126      642D2564 
 2127 0555 000000   		.align	2
 2128              	.LC58:
 2129 0558 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d+%d\000"
 2129      642F2564 
 2129      2C25643A 
 2129      25643A25 
 2129      642B2564 
 2130 056d 000000   		.align	2
 2131              	.LC59:
 2132 0570 436F756C 		.ascii	"Could not parse modem time.\000"
 2132      64206E6F 
 2132      74207061 
 2132      72736520 
 2132      6D6F6465 
 2133              		.section	.text.modem_get_network_time,"ax",%progbits
 2134              		.align	2
 2135              		.global	modem_get_network_time
 2136              		.thumb
 2137              		.thumb_func
 2138              		.type	modem_get_network_time, %function
 2139              	modem_get_network_time:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 52


 2140              	.LFB83:
 579:modem.c       **** 
 580:modem.c       **** //returns 0 if modem can't get time
 581:modem.c       **** long modem_get_network_time(){
 2141              		.loc 1 581 0
 2142              		.cfi_startproc
 2143              		@ args = 0, pretend = 0, frame = 104
 2144              		@ frame_needed = 1, uses_anonymous_args = 0
 2145 0000 80B5     		push	{r7, lr}
 2146              		.cfi_def_cfa_offset 8
 2147              		.cfi_offset 7, -8
 2148              		.cfi_offset 14, -4
 2149 0002 A0B0     		sub	sp, sp, #128
 2150              		.cfi_def_cfa_offset 136
 2151 0004 06AF     		add	r7, sp, #24
 2152              		.cfi_def_cfa 7, 112
 582:modem.c       ****     
 583:modem.c       ****     //modem reposen format (careful to include the quotes "")
 584:modem.c       ****     //+CCLK: "20/05/01,10:48:33-16" the "-16" is the number of quarter hourts (15 mins) from GMT ti
 585:modem.c       ****     //ex: 14:48 GMT
 586:modem.c       **** 
 587:modem.c       ****     // If modem_state is not "ready", then print error and return 0
 588:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2153              		.loc 1 588 0
 2154 0006 444B     		ldr	r3, .L133
 2155 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2156 000a 042B     		cmp	r3, #4
 2157 000c 05D0     		beq	.L127
 589:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Modem not ready to get time. Not conncted to network.");
 2158              		.loc 1 589 0
 2159 000e 4349     		ldr	r1, .L133+4
 2160 0010 0220     		movs	r0, #2
 2161 0012 FFF7FEFF 		bl	printNotif
 590:modem.c       ****         return 0;   
 2162              		.loc 1 590 0
 2163 0016 0023     		movs	r3, #0
 2164 0018 7AE0     		b	.L128
 2165              	.L127:
 591:modem.c       ****     }
 592:modem.c       ****     long epoch_time = 0; // Create variable of long time and set equal to 0
 2166              		.loc 1 592 0
 2167 001a 0023     		movs	r3, #0
 2168 001c 7B66     		str	r3, [r7, #100]
 593:modem.c       ****     
 594:modem.c       ****     // AT command +CCLK? is a read command that returns the current setting of the real-time clock 
 595:modem.c       ****     if(at_write_command("AT+CCLK?\r","OK",DEFAULT_AT_TIMEOUT)){
 2169              		.loc 1 595 0
 2170 001e 4FF4FA62 		mov	r2, #2000
 2171 0022 3F49     		ldr	r1, .L133+8
 2172 0024 3F48     		ldr	r0, .L133+12
 2173 0026 FFF7FEFF 		bl	at_write_command
 2174 002a 0346     		mov	r3, r0
 2175 002c 002B     		cmp	r3, #0
 2176 002e 6ED0     		beq	.L129
 2177              	.LBB13:
 596:modem.c       ****         // need to set this to /0
 597:modem.c       ****         char network_time[30]; // Create a character array of length 30 called network_time 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 53


 598:modem.c       ****         network_time[0] = '\0';
 2178              		.loc 1 598 0
 2179 0030 0023     		movs	r3, #0
 2180 0032 87F84430 		strb	r3, [r7, #68]
 599:modem.c       ****         // Extract UART string recieved from the modem and save to variable network_time
 600:modem.c       ****         extract_string(uart_received_string,": \"","\"\r",network_time);
 2181              		.loc 1 600 0
 2182 0036 07F14403 		add	r3, r7, #68
 2183 003a 3B4A     		ldr	r2, .L133+16
 2184 003c 3B49     		ldr	r1, .L133+20
 2185 003e 3C48     		ldr	r0, .L133+24
 2186 0040 FFF7FEFF 		bl	extract_string
 601:modem.c       ****         
 602:modem.c       ****         ///////////////////  
 603:modem.c       ****         struct tm t; // Creates variable t of struct tm
 604:modem.c       ****         
 605:modem.c       ****         // Creates a bunch of variables of type int and sets them to 0
 606:modem.c       ****         int year, month, day, hour, minute, second, gmt_offset = 0;
 2187              		.loc 1 606 0
 2188 0044 0023     		movs	r3, #0
 2189 0046 BB62     		str	r3, [r7, #40]
 607:modem.c       ****       
 608:modem.c       ****         // Determines the GMT offset 
 609:modem.c       ****         // int sscanf(const char *str, const char *format, ...) reads formatted input from a string
 610:modem.c       ****         // On success, the function returns the number of variables filled. In the case of an input
 611:modem.c       ****         if(sscanf(network_time,"%d/%d/%d,%d:%d:%d-%d",&year,&month,&day,&hour,&minute,&second,&gmt_
 2190              		.loc 1 611 0
 2191 0048 07F13C01 		add	r1, r7, #60
 2192 004c 07F14002 		add	r2, r7, #64
 2193 0050 07F14400 		add	r0, r7, #68
 2194 0054 07F12803 		add	r3, r7, #40
 2195 0058 0493     		str	r3, [sp, #16]
 2196 005a 07F12C03 		add	r3, r7, #44
 2197 005e 0393     		str	r3, [sp, #12]
 2198 0060 07F13003 		add	r3, r7, #48
 2199 0064 0293     		str	r3, [sp, #8]
 2200 0066 07F13403 		add	r3, r7, #52
 2201 006a 0193     		str	r3, [sp, #4]
 2202 006c 07F13803 		add	r3, r7, #56
 2203 0070 0093     		str	r3, [sp]
 2204 0072 0B46     		mov	r3, r1
 2205 0074 2F49     		ldr	r1, .L133+28
 2206 0076 FFF7FEFF 		bl	sscanf
 2207 007a 0346     		mov	r3, r0
 2208 007c 072B     		cmp	r3, #7
 2209 007e 06D1     		bne	.L130
 612:modem.c       ****             gmt_offset = gmt_offset*(900);
 2210              		.loc 1 612 0
 2211 0080 BB6A     		ldr	r3, [r7, #40]
 2212 0082 4FF46172 		mov	r2, #900
 2213 0086 02FB03F3 		mul	r3, r2, r3
 2214 008a BB62     		str	r3, [r7, #40]
 2215 008c 27E0     		b	.L131
 2216              	.L130:
 613:modem.c       ****         }else if(sscanf(network_time,"%d/%d/%d,%d:%d:%d+%d",&year,&month,&day,&hour,&minute,&second
 2217              		.loc 1 613 0
 2218 008e 07F13C01 		add	r1, r7, #60
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 54


 2219 0092 07F14002 		add	r2, r7, #64
 2220 0096 07F14400 		add	r0, r7, #68
 2221 009a 07F12803 		add	r3, r7, #40
 2222 009e 0493     		str	r3, [sp, #16]
 2223 00a0 07F12C03 		add	r3, r7, #44
 2224 00a4 0393     		str	r3, [sp, #12]
 2225 00a6 07F13003 		add	r3, r7, #48
 2226 00aa 0293     		str	r3, [sp, #8]
 2227 00ac 07F13403 		add	r3, r7, #52
 2228 00b0 0193     		str	r3, [sp, #4]
 2229 00b2 07F13803 		add	r3, r7, #56
 2230 00b6 0093     		str	r3, [sp]
 2231 00b8 0B46     		mov	r3, r1
 2232 00ba 1F49     		ldr	r1, .L133+32
 2233 00bc FFF7FEFF 		bl	sscanf
 2234 00c0 0346     		mov	r3, r0
 2235 00c2 072B     		cmp	r3, #7
 2236 00c4 05D1     		bne	.L132
 614:modem.c       ****             gmt_offset = gmt_offset*(-900);
 2237              		.loc 1 614 0
 2238 00c6 BB6A     		ldr	r3, [r7, #40]
 2239 00c8 1C4A     		ldr	r2, .L133+36
 2240 00ca 02FB03F3 		mul	r3, r2, r3
 2241 00ce BB62     		str	r3, [r7, #40]
 2242 00d0 05E0     		b	.L131
 2243              	.L132:
 615:modem.c       ****         }else{
 616:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Could not parse modem time.");
 2244              		.loc 1 616 0
 2245 00d2 1B49     		ldr	r1, .L133+40
 2246 00d4 0220     		movs	r0, #2
 2247 00d6 FFF7FEFF 		bl	printNotif
 617:modem.c       ****             return 0;  // Return 0 if cannot get time 
 2248              		.loc 1 617 0
 2249 00da 0023     		movs	r3, #0
 2250 00dc 18E0     		b	.L128
 2251              	.L131:
 618:modem.c       ****         }
 619:modem.c       ****         
 620:modem.c       ****         // Sets each variable to the correct time 
 621:modem.c       ****         t.tm_sec = second;
 2252              		.loc 1 621 0
 2253 00de FB6A     		ldr	r3, [r7, #44]
 2254 00e0 7B60     		str	r3, [r7, #4]
 622:modem.c       ****         t.tm_min = minute;
 2255              		.loc 1 622 0
 2256 00e2 3B6B     		ldr	r3, [r7, #48]
 2257 00e4 BB60     		str	r3, [r7, #8]
 623:modem.c       ****         t.tm_hour = hour;
 2258              		.loc 1 623 0
 2259 00e6 7B6B     		ldr	r3, [r7, #52]
 2260 00e8 FB60     		str	r3, [r7, #12]
 624:modem.c       ****         t.tm_year = year + 100;    // Year since 1900
 2261              		.loc 1 624 0
 2262 00ea 3B6C     		ldr	r3, [r7, #64]
 2263 00ec 6433     		adds	r3, r3, #100
 2264 00ee BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 55


 625:modem.c       ****         t.tm_mon = month-1;        // Month, where 0 = jan
 2265              		.loc 1 625 0
 2266 00f0 FB6B     		ldr	r3, [r7, #60]
 2267 00f2 013B     		subs	r3, r3, #1
 2268 00f4 7B61     		str	r3, [r7, #20]
 626:modem.c       ****         t.tm_mday = day;           // Day of the month
 2269              		.loc 1 626 0
 2270 00f6 BB6B     		ldr	r3, [r7, #56]
 2271 00f8 3B61     		str	r3, [r7, #16]
 627:modem.c       ****         t.tm_isdst = 0;            // Is Daylight Savings on? 1 = yes, 0 = no, -1 = unknown
 2272              		.loc 1 627 0
 2273 00fa 0023     		movs	r3, #0
 2274 00fc 7B62     		str	r3, [r7, #36]
 628:modem.c       ****     
 629:modem.c       ****         // Set variable epoch-time to be equal to the local time plus the GMT offset
 630:modem.c       ****         // the mktime function converts a broken-down local time (pointed to by timeptr) and return
 631:modem.c       ****         epoch_time = mktime(&t) + gmt_offset;
 2275              		.loc 1 631 0
 2276 00fe 3B1D     		adds	r3, r7, #4
 2277 0100 1846     		mov	r0, r3
 2278 0102 FFF7FEFF 		bl	mktime
 2279 0106 0246     		mov	r2, r0
 2280 0108 BB6A     		ldr	r3, [r7, #40]
 2281 010a 1344     		add	r3, r3, r2
 2282 010c 7B66     		str	r3, [r7, #100]
 2283              	.L129:
 2284              	.LBE13:
 632:modem.c       ****     }
 633:modem.c       ****     
 634:modem.c       ****     return epoch_time;
 2285              		.loc 1 634 0
 2286 010e 7B6E     		ldr	r3, [r7, #100]
 2287              	.L128:
 635:modem.c       **** }
 2288              		.loc 1 635 0
 2289 0110 1846     		mov	r0, r3
 2290 0112 6837     		adds	r7, r7, #104
 2291              		.cfi_def_cfa_offset 8
 2292 0114 BD46     		mov	sp, r7
 2293              		.cfi_def_cfa_register 13
 2294              		@ sp needed
 2295 0116 80BD     		pop	{r7, pc}
 2296              	.L134:
 2297              		.align	2
 2298              	.L133:
 2299 0118 00000000 		.word	modem_state
 2300 011c F4040000 		.word	.LC53
 2301 0120 00000000 		.word	.LC0
 2302 0124 2C050000 		.word	.LC54
 2303 0128 38050000 		.word	.LC55
 2304 012c 3C050000 		.word	.LC56
 2305 0130 00000000 		.word	uart_received_string
 2306 0134 40050000 		.word	.LC57
 2307 0138 58050000 		.word	.LC58
 2308 013c 7CFCFFFF 		.word	-900
 2309 0140 70050000 		.word	.LC59
 2310              		.cfi_endproc
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 56


 2311              	.LFE83:
 2312              		.size	modem_get_network_time, .-modem_get_network_time
 2313              		.section	.text.modem_get_state,"ax",%progbits
 2314              		.align	2
 2315              		.global	modem_get_state
 2316              		.thumb
 2317              		.thumb_func
 2318              		.type	modem_get_state, %function
 2319              	modem_get_state:
 2320              	.LFB84:
 636:modem.c       **** 
 637:modem.c       **** // Get the modem state
 638:modem.c       **** uint8 modem_get_state(){
 2321              		.loc 1 638 0
 2322              		.cfi_startproc
 2323              		@ args = 0, pretend = 0, frame = 0
 2324              		@ frame_needed = 1, uses_anonymous_args = 0
 2325              		@ link register save eliminated.
 2326 0000 80B4     		push	{r7}
 2327              		.cfi_def_cfa_offset 4
 2328              		.cfi_offset 7, -4
 2329 0002 00AF     		add	r7, sp, #0
 2330              		.cfi_def_cfa_register 7
 639:modem.c       ****     return modem_state;
 2331              		.loc 1 639 0
 2332 0004 024B     		ldr	r3, .L137
 2333 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 640:modem.c       **** }
 2334              		.loc 1 640 0
 2335 0008 1846     		mov	r0, r3
 2336 000a BD46     		mov	sp, r7
 2337              		.cfi_def_cfa_register 13
 2338              		@ sp needed
 2339 000c 80BC     		pop	{r7}
 2340              		.cfi_restore 7
 2341              		.cfi_def_cfa_offset 0
 2342 000e 7047     		bx	lr
 2343              	.L138:
 2344              		.align	2
 2345              	.L137:
 2346 0010 00000000 		.word	modem_state
 2347              		.cfi_endproc
 2348              	.LFE84:
 2349              		.size	modem_get_state, .-modem_get_state
 2350              		.section	.text.modem_sleep,"ax",%progbits
 2351              		.align	2
 2352              		.global	modem_sleep
 2353              		.thumb
 2354              		.thumb_func
 2355              		.type	modem_sleep, %function
 2356              	modem_sleep:
 2357              	.LFB85:
 641:modem.c       **** 
 642:modem.c       **** // Set modem to sleep
 643:modem.c       **** void modem_sleep(){
 2358              		.loc 1 643 0
 2359              		.cfi_startproc
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 57


 2360              		@ args = 0, pretend = 0, frame = 0
 2361              		@ frame_needed = 1, uses_anonymous_args = 0
 2362 0000 80B5     		push	{r7, lr}
 2363              		.cfi_def_cfa_offset 8
 2364              		.cfi_offset 7, -8
 2365              		.cfi_offset 14, -4
 2366 0002 00AF     		add	r7, sp, #0
 2367              		.cfi_def_cfa_register 7
 644:modem.c       ****     // If the modem_state is not "off" then put it to sleep
 645:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2368              		.loc 1 645 0
 2369 0004 FFF7FEFF 		bl	modem_get_state
 2370 0008 0346     		mov	r3, r0
 2371 000a 002B     		cmp	r3, #0
 2372 000c 03D0     		beq	.L141
 646:modem.c       **** 
 647:modem.c       ****         Telit_ControlReg_Sleep(); // Prepares the modem for entering the low power mode.
 2373              		.loc 1 647 0
 2374 000e FFF7FEFF 		bl	Telit_ControlReg_Sleep
 648:modem.c       ****         UART_Telit_Sleep(); // Saves the current component state, calls the UART_Telit_Stop() funct
 2375              		.loc 1 648 0
 2376 0012 FFF7FEFF 		bl	UART_Telit_Sleep
 2377              	.L141:
 649:modem.c       ****         
 650:modem.c       ****         // Set interrupt on RX pin to wakeup chip from sleep if UART comm starts
 651:modem.c       ****        // Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_FALLING);
 652:modem.c       ****      }
 653:modem.c       **** }
 2378              		.loc 1 653 0
 2379 0016 00BF     		nop
 2380 0018 80BD     		pop	{r7, pc}
 2381              		.cfi_endproc
 2382              	.LFE85:
 2383              		.size	modem_sleep, .-modem_sleep
 2384 001a 00BF     		.section	.text.modem_wakeup,"ax",%progbits
 2385              		.align	2
 2386              		.global	modem_wakeup
 2387              		.thumb
 2388              		.thumb_func
 2389              		.type	modem_wakeup, %function
 2390              	modem_wakeup:
 2391              	.LFB86:
 654:modem.c       **** 
 655:modem.c       **** // Wakeup the modem
 656:modem.c       **** void modem_wakeup(){
 2392              		.loc 1 656 0
 2393              		.cfi_startproc
 2394              		@ args = 0, pretend = 0, frame = 0
 2395              		@ frame_needed = 1, uses_anonymous_args = 0
 2396 0000 80B5     		push	{r7, lr}
 2397              		.cfi_def_cfa_offset 8
 2398              		.cfi_offset 7, -8
 2399              		.cfi_offset 14, -4
 2400 0002 00AF     		add	r7, sp, #0
 2401              		.cfi_def_cfa_register 7
 657:modem.c       ****     // If modem state is not off then wake it up
 658:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 58


 2402              		.loc 1 658 0
 2403 0004 FFF7FEFF 		bl	modem_get_state
 2404 0008 0346     		mov	r3, r0
 2405 000a 002B     		cmp	r3, #0
 2406 000c 0BD0     		beq	.L144
 659:modem.c       ****         Telit_ControlReg_Wakeup(); // Restores the modem after waking up from the low power mode.
 2407              		.loc 1 659 0
 2408 000e FFF7FEFF 		bl	Telit_ControlReg_Wakeup
 660:modem.c       ****         // Calls the UART_Telit_RestoreConfig() function to restore the configuration.
 661:modem.c       ****         // If the modem was enabled before the UART_Telit_Sleep() function was called, the UART_Tel
 662:modem.c       ****         UART_Telit_Wakeup();
 2409              		.loc 1 662 0
 2410 0012 FFF7FEFF 		bl	UART_Telit_Wakeup
 663:modem.c       ****         // Remove the need for this pin itterupt
 664:modem.c       ****         //Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 665:modem.c       ****         
 666:modem.c       ****         // If woken up from pin, go ahead and delay for 100ms to allow modem UART to deliver the me
 667:modem.c       ****         if(modem_get_state() == MODEM_STATE_WAITING_FOR_IP){
 2411              		.loc 1 667 0
 2412 0016 FFF7FEFF 		bl	modem_get_state
 2413 001a 0346     		mov	r3, r0
 2414 001c 032B     		cmp	r3, #3
 2415 001e 02D1     		bne	.L144
 668:modem.c       ****             CyDelay(100u);
 2416              		.loc 1 668 0
 2417 0020 6420     		movs	r0, #100
 2418 0022 FFF7FEFF 		bl	CyDelay
 2419              	.L144:
 669:modem.c       ****         }
 670:modem.c       ****      }
 671:modem.c       **** }
 2420              		.loc 1 671 0
 2421 0026 00BF     		nop
 2422 0028 80BD     		pop	{r7, pc}
 2423              		.cfi_endproc
 2424              	.LFE86:
 2425              		.size	modem_wakeup, .-modem_wakeup
 2426 002a 00BF     		.section	.rodata
 2427              		.align	2
 2428              	.LC60:
 2429 058c 41542347 		.ascii	"AT#GPIO=5,1,1,0\015\000"
 2429      50494F3D 
 2429      352C312C 
 2429      312C300D 
 2429      00
 2430 059d 000000   		.align	2
 2431              	.LC61:
 2432 05a0 41542453 		.ascii	"AT$SUPLSEC=1\015\000"
 2432      55504C53 
 2432      45433D31 
 2432      0D00
 2433 05ae 0000     		.align	2
 2434              	.LC62:
 2435 05b0 41542453 		.ascii	"AT$SUPLV=2\015\000"
 2435      55504C56 
 2435      3D320D00 
 2436              		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 59


 2437              	.LC63:
 2438 05bc 41542441 		.ascii	"AT$AGPSEN=1\015\000"
 2438      47505345 
 2438      4E3D310D 
 2438      00
 2439 05c9 000000   		.align	2
 2440              	.LC64:
 2441 05cc 41542453 		.ascii	"AT$SLP=1,\"supl.google.com:7275\"\015\000"
 2441      4C503D31 
 2441      2C227375 
 2441      706C2E67 
 2441      6F6F676C 
 2442 05ed 000000   		.align	2
 2443              	.LC65:
 2444 05f0 41542353 		.ascii	"AT#SGACT=1,0\015\012\000"
 2444      47414354 
 2444      3D312C30 
 2444      0D0A00
 2445 05ff 00       		.align	2
 2446              	.LC66:
 2447 0600 4154244C 		.ascii	"AT$LCSLK=1,1\015\000"
 2447      43534C4B 
 2447      3D312C31 
 2447      0D00
 2448 060e 0000     		.align	2
 2449              	.LC67:
 2450 0610 41542447 		.ascii	"AT$GPSSLSR=1,1,,,,,2\015\000"
 2450      5053534C 
 2450      53523D31 
 2450      2C312C2C 
 2450      2C2C2C32 
 2451 0626 0000     		.align	2
 2452              	.LC68:
 2453 0628 4E00     		.ascii	"N\000"
 2454 062a 0000     		.align	2
 2455              	.LC69:
 2456 062c 41542447 		.ascii	"AT$GPSACP\015\000"
 2456      50534143 
 2456      500D00
 2457 0637 00       		.align	2
 2458              	.LC70:
 2459 0638 24475053 		.ascii	"$GPSACP: \000"
 2459      4143503A 
 2459      2000
 2460 0642 0000     		.align	2
 2461              	.LC71:
 2462 0644 24475053 		.ascii	"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s\000"
 2462      4143503A 
 2462      20252A66 
 2462      2C25664E 
 2462      2C256657 
 2463              		.global	__aeabi_fdiv
 2464              		.global	__aeabi_f2d
 2465              		.global	__aeabi_ddiv
 2466              		.global	__aeabi_dadd
 2467              		.global	__aeabi_d2f
 2468              		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 60


 2469              	.LC72:
 2470 0664 41542347 		.ascii	"AT#GPIO=5,0,1,0\015\000"
 2470      50494F3D 
 2470      352C302C 
 2470      312C300D 
 2470      00
 2471 0675 000000   		.align	2
 2472              	.LC73:
 2473 0678 41542447 		.ascii	"AT$GPSR=0\015\000"
 2473      5053523D 
 2473      300D00
 2474 0683 00       		.align	2
 2475              	.LC74:
 2476 0684 54696D65 		.ascii	"Time to lock GPS: %d\000"
 2476      20746F20 
 2476      6C6F636B 
 2476      20475053 
 2476      3A202564 
 2477              		.section	.text.modem_get_gps_coordinates,"ax",%progbits
 2478              		.align	2
 2479              		.global	modem_get_gps_coordinates
 2480              		.thumb
 2481              		.thumb_func
 2482              		.type	modem_get_gps_coordinates, %function
 2483              	modem_get_gps_coordinates:
 2484              	.LFB87:
 672:modem.c       **** 
 673:modem.c       ****     
 674:modem.c       **** // Returns lat,lom,alt data from Assited GPS (AGPS) system
 675:modem.c       **** gps_t modem_get_gps_coordinates(){
 2485              		.loc 1 675 0
 2486              		.cfi_startproc
 2487              		@ args = 0, pretend = 0, frame = 56
 2488              		@ frame_needed = 1, uses_anonymous_args = 0
 2489 0000 B0B5     		push	{r4, r5, r7, lr}
 2490              		.cfi_def_cfa_offset 16
 2491              		.cfi_offset 4, -16
 2492              		.cfi_offset 5, -12
 2493              		.cfi_offset 7, -8
 2494              		.cfi_offset 14, -4
 2495 0002 90B0     		sub	sp, sp, #64
 2496              		.cfi_def_cfa_offset 80
 2497 0004 02AF     		add	r7, sp, #8
 2498              		.cfi_def_cfa 7, 72
 2499 0006 7860     		str	r0, [r7, #4]
 676:modem.c       ****     gps_t gps;
 677:modem.c       ****     gps.altitude = 0;
 2500              		.loc 1 677 0
 2501 0008 4FF00003 		mov	r3, #0
 2502 000c FB61     		str	r3, [r7, #28]	@ float
 678:modem.c       ****     gps.longitude = 0;
 2503              		.loc 1 678 0
 2504 000e 4FF00003 		mov	r3, #0
 2505 0012 BB61     		str	r3, [r7, #24]	@ float
 679:modem.c       ****     gps.latitude = 0;
 2506              		.loc 1 679 0
 2507 0014 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 61


 2508 0018 7B61     		str	r3, [r7, #20]	@ float
 680:modem.c       ****     gps.time_to_lock =0;
 2509              		.loc 1 680 0
 2510 001a 0023     		movs	r3, #0
 2511 001c 3B84     		strh	r3, [r7, #32]	@ movhi
 681:modem.c       ****     gps.valid = 0;
 2512              		.loc 1 681 0
 2513 001e 0023     		movs	r3, #0
 2514 0020 87F82230 		strb	r3, [r7, #34]
 682:modem.c       ****     
 683:modem.c       ****     //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 684:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2515              		.loc 1 684 0
 2516 0024 7F4B     		ldr	r3, .L155
 2517 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2518 0028 042B     		cmp	r3, #4
 2519 002a 07D0     		beq	.L146
 685:modem.c       ****         return gps;//where valid = 0
 2520              		.loc 1 685 0
 2521 002c 7B68     		ldr	r3, [r7, #4]
 2522 002e 1C46     		mov	r4, r3
 2523 0030 07F11403 		add	r3, r7, #20
 2524 0034 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2525 0036 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2526 003a EFE0     		b	.L145
 2527              	.L146:
 686:modem.c       ****     }
 687:modem.c       ****     
 688:modem.c       ****     long lock_time = getTimeStamp();
 2528              		.loc 1 688 0
 2529 003c FFF7FEFF 		bl	getTimeStamp
 2530 0040 3863     		str	r0, [r7, #48]
 689:modem.c       ****     
 690:modem.c       ****     // Enable this for the LTER module
 691:modem.c       ****     // Enable GPS Low-Dropout Regulator
 692:modem.c       ****     at_write_command("AT#GPIO=5,1,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2531              		.loc 1 692 0
 2532 0042 4FF4FA62 		mov	r2, #2000
 2533 0046 7849     		ldr	r1, .L155+4
 2534 0048 7848     		ldr	r0, .L155+8
 2535 004a FFF7FEFF 		bl	at_write_command
 693:modem.c       ****     
 694:modem.c       ****     // Configure SUPL connection params
 695:modem.c       ****     at_write_command("AT$SUPLSEC=1\r","OK",DEFAULT_AT_TIMEOUT);
 2536              		.loc 1 695 0
 2537 004e 4FF4FA62 		mov	r2, #2000
 2538 0052 7549     		ldr	r1, .L155+4
 2539 0054 7648     		ldr	r0, .L155+12
 2540 0056 FFF7FEFF 		bl	at_write_command
 696:modem.c       ****     
 697:modem.c       ****     // Use SUPL2.0
 698:modem.c       ****     at_write_command("AT$SUPLV=2\r","OK",DEFAULT_AT_TIMEOUT);
 2541              		.loc 1 698 0
 2542 005a 4FF4FA62 		mov	r2, #2000
 2543 005e 7249     		ldr	r1, .L155+4
 2544 0060 7448     		ldr	r0, .L155+16
 2545 0062 FFF7FEFF 		bl	at_write_command
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 62


 699:modem.c       ****     
 700:modem.c       ****     // Enable AGPS service
 701:modem.c       ****     at_write_command("AT$AGPSEN=1\r","OK",DEFAULT_AT_TIMEOUT);
 2546              		.loc 1 701 0
 2547 0066 4FF4FA62 		mov	r2, #2000
 2548 006a 6F49     		ldr	r1, .L155+4
 2549 006c 7248     		ldr	r0, .L155+20
 2550 006e FFF7FEFF 		bl	at_write_command
 702:modem.c       ****     
 703:modem.c       ****     // Chose SUPL server, use google public service
 704:modem.c       ****     at_write_command("AT$SLP=1,\"supl.google.com:7275\"\r","OK",DEFAULT_AT_TIMEOUT);
 2551              		.loc 1 704 0
 2552 0072 4FF4FA62 		mov	r2, #2000
 2553 0076 6C49     		ldr	r1, .L155+4
 2554 0078 7048     		ldr	r0, .L155+24
 2555 007a FFF7FEFF 		bl	at_write_command
 705:modem.c       ****     
 706:modem.c       ****     //pdp context has to be locked to carrier for this to work
 707:modem.c       ****     
 708:modem.c       ****     // Unlock context since it needs to be used by modem
 709:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 2556              		.loc 1 709 0
 2557 007e 4FF4FA62 		mov	r2, #2000
 2558 0082 6949     		ldr	r1, .L155+4
 2559 0084 6E48     		ldr	r0, .L155+28
 2560 0086 FFF7FEFF 		bl	at_write_command
 710:modem.c       ****     
 711:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",DEFAULT_AT_TIMEOUT);//ATT
 2561              		.loc 1 711 0
 2562 008a 4FF4FA62 		mov	r2, #2000
 2563 008e 6649     		ldr	r1, .L155+4
 2564 0090 6C48     		ldr	r0, .L155+32
 2565 0092 FFF7FEFF 		bl	at_write_command
 712:modem.c       ****     //at_write_command("AT$LCSLK=1,3\r","OK",DEFAULT_AT_TIMEOUT);//Verizon
 713:modem.c       ****     
 714:modem.c       ****     // Relock the context
 715:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 2566              		.loc 1 715 0
 2567 0096 42F21072 		movw	r2, #10000
 2568 009a 6349     		ldr	r1, .L155+4
 2569 009c 6A48     		ldr	r0, .L155+36
 2570 009e FFF7FEFF 		bl	at_write_command
 716:modem.c       ****     
 717:modem.c       ****     //start AGPS service
 718:modem.c       ****     at_write_command("AT$GPSSLSR=1,1,,,,,2\r","OK",DEFAULT_AT_TIMEOUT); 
 2571              		.loc 1 718 0
 2572 00a2 4FF4FA62 		mov	r2, #2000
 2573 00a6 6049     		ldr	r1, .L155+4
 2574 00a8 6848     		ldr	r0, .L155+40
 2575 00aa FFF7FEFF 		bl	at_write_command
 719:modem.c       ****     
 720:modem.c       ****     
 721:modem.c       ****     // Start the AGPS service
 722:modem.c       ****     // Will keep receiving a buynch of commas without numbers, until GPS locks
 723:modem.c       ****     // Good lock will return a string with "N" and "W" coordinates
 724:modem.c       ****     
 725:modem.c       ****     
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 63


 726:modem.c       ****  
 727:modem.c       ****     uint8 gps_status = 0;
 2576              		.loc 1 727 0
 2577 00ae 0023     		movs	r3, #0
 2578 00b0 87F82F30 		strb	r3, [r7, #47]
 2579              	.LBB14:
 728:modem.c       ****     for(uint16 i=0;i<200;i++){
 2580              		.loc 1 728 0
 2581 00b4 0023     		movs	r3, #0
 2582 00b6 FB86     		strh	r3, [r7, #54]	@ movhi
 2583 00b8 13E0     		b	.L148
 2584              	.L151:
 729:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2585              		.loc 1 729 0
 2586 00ba 4FF4FA62 		mov	r2, #2000
 2587 00be 6449     		ldr	r1, .L155+44
 2588 00c0 6448     		ldr	r0, .L155+48
 2589 00c2 FFF7FEFF 		bl	at_write_command
 2590 00c6 0346     		mov	r3, r0
 2591 00c8 87F82F30 		strb	r3, [r7, #47]
 730:modem.c       ****         if(gps_status){
 2592              		.loc 1 730 0
 2593 00cc 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2594 00d0 002B     		cmp	r3, #0
 2595 00d2 0AD1     		bne	.L154
 731:modem.c       ****             break;   
 732:modem.c       ****         }
 733:modem.c       ****         CyDelay(1000u);// Wait for a second -- BLOCKING. Could be more elegant to incorporate this 
 2596              		.loc 1 733 0 discriminator 2
 2597 00d4 4FF47A70 		mov	r0, #1000
 2598 00d8 FFF7FEFF 		bl	CyDelay
 728:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2599              		.loc 1 728 0 discriminator 2
 2600 00dc FB8E     		ldrh	r3, [r7, #54]
 2601 00de 0133     		adds	r3, r3, #1
 2602 00e0 FB86     		strh	r3, [r7, #54]	@ movhi
 2603              	.L148:
 728:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2604              		.loc 1 728 0 is_stmt 0 discriminator 1
 2605 00e2 FB8E     		ldrh	r3, [r7, #54]
 2606 00e4 C72B     		cmp	r3, #199
 2607 00e6 E8D9     		bls	.L151
 2608 00e8 00E0     		b	.L150
 2609              	.L154:
 731:modem.c       ****             break;   
 2610              		.loc 1 731 0 is_stmt 1
 2611 00ea 00BF     		nop
 2612              	.L150:
 2613              	.LBE14:
 734:modem.c       ****     }
 735:modem.c       ****     
 736:modem.c       ****     //parse data here
 737:modem.c       ****     
 738:modem.c       ****     //example $GPSACP: 210926.000,4217.8003N,08341.3158W,2.3,258.2,3,17.8,4.8,2.6,220520,05,00
 739:modem.c       ****     float lat;
 740:modem.c       ****     float lon;
 741:modem.c       ****     float alt;
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 64


 742:modem.c       ****     
 743:modem.c       ****     // Look for $GPSACP:  in uart_received_string and save to sl
 744:modem.c       ****     // char *strstr(const char *haystack, const char *needle) function finds the first occurrence o
 745:modem.c       ****     char *s1 = strstr(uart_received_string,"$GPSACP: ");
 2614              		.loc 1 745 0
 2615 00ec 5A49     		ldr	r1, .L155+52
 2616 00ee 5B48     		ldr	r0, .L155+56
 2617 00f0 FFF7FEFF 		bl	strstr
 2618 00f4 B862     		str	r0, [r7, #40]
 746:modem.c       ****     // Look in sl for lat, long, alt and save in match 
 747:modem.c       ****     // int sscanf(const char *str, const char *format, ...) reads formatted input from a string.
 748:modem.c       ****     int match = sscanf(s1,"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s",&lat,&lon,&alt);
 2619              		.loc 1 748 0
 2620 00f6 07F10C01 		add	r1, r7, #12
 2621 00fa 07F11002 		add	r2, r7, #16
 2622 00fe 07F10803 		add	r3, r7, #8
 2623 0102 0093     		str	r3, [sp]
 2624 0104 0B46     		mov	r3, r1
 2625 0106 5649     		ldr	r1, .L155+60
 2626 0108 B86A     		ldr	r0, [r7, #40]
 2627 010a FFF7FEFF 		bl	sscanf
 2628 010e 7862     		str	r0, [r7, #36]
 749:modem.c       ****     if(match >= 3){
 2629              		.loc 1 749 0
 2630 0110 7B6A     		ldr	r3, [r7, #36]
 2631 0112 022B     		cmp	r3, #2
 2632 0114 60DD     		ble	.L152
 750:modem.c       ****         // Calculate lat and lon
 751:modem.c       ****         // floorf(x) calculates the largest integer that is less than or equal to x. 
 752:modem.c       ****         // fmod(double x, double y) returns the remainder of x divided by y.
 753:modem.c       ****         lat = floorf(lat/100) + fmod(lat,100)/60;
 2633              		.loc 1 753 0
 2634 0116 3B69     		ldr	r3, [r7, #16]	@ float
 2635 0118 5249     		ldr	r1, .L155+64
 2636 011a 1846     		mov	r0, r3
 2637 011c FFF7FEFF 		bl	__aeabi_fdiv
 2638 0120 0346     		mov	r3, r0
 2639 0122 1846     		mov	r0, r3
 2640 0124 FFF7FEFF 		bl	floorf
 2641 0128 0346     		mov	r3, r0
 2642 012a 1846     		mov	r0, r3
 2643 012c FFF7FEFF 		bl	__aeabi_f2d
 2644 0130 0446     		mov	r4, r0
 2645 0132 0D46     		mov	r5, r1
 2646 0134 3B69     		ldr	r3, [r7, #16]	@ float
 2647 0136 1846     		mov	r0, r3
 2648 0138 FFF7FEFF 		bl	__aeabi_f2d
 2649 013c 4FF00002 		mov	r2, #0
 2650 0140 494B     		ldr	r3, .L155+68
 2651 0142 FFF7FEFF 		bl	fmod
 2652 0146 4FF00002 		mov	r2, #0
 2653 014a 484B     		ldr	r3, .L155+72
 2654 014c FFF7FEFF 		bl	__aeabi_ddiv
 2655 0150 0246     		mov	r2, r0
 2656 0152 0B46     		mov	r3, r1
 2657 0154 2046     		mov	r0, r4
 2658 0156 2946     		mov	r1, r5
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 65


 2659 0158 FFF7FEFF 		bl	__aeabi_dadd
 2660 015c 0346     		mov	r3, r0
 2661 015e 0C46     		mov	r4, r1
 2662 0160 1846     		mov	r0, r3
 2663 0162 2146     		mov	r1, r4
 2664 0164 FFF7FEFF 		bl	__aeabi_d2f
 2665 0168 0346     		mov	r3, r0
 2666 016a 3B61     		str	r3, [r7, #16]	@ float
 754:modem.c       ****         lon = -(floorf(lon/100) + fmod(lon,100)/60);
 2667              		.loc 1 754 0
 2668 016c FB68     		ldr	r3, [r7, #12]	@ float
 2669 016e 3D49     		ldr	r1, .L155+64
 2670 0170 1846     		mov	r0, r3
 2671 0172 FFF7FEFF 		bl	__aeabi_fdiv
 2672 0176 0346     		mov	r3, r0
 2673 0178 1846     		mov	r0, r3
 2674 017a FFF7FEFF 		bl	floorf
 2675 017e 0346     		mov	r3, r0
 2676 0180 1846     		mov	r0, r3
 2677 0182 FFF7FEFF 		bl	__aeabi_f2d
 2678 0186 0446     		mov	r4, r0
 2679 0188 0D46     		mov	r5, r1
 2680 018a FB68     		ldr	r3, [r7, #12]	@ float
 2681 018c 1846     		mov	r0, r3
 2682 018e FFF7FEFF 		bl	__aeabi_f2d
 2683 0192 4FF00002 		mov	r2, #0
 2684 0196 344B     		ldr	r3, .L155+68
 2685 0198 FFF7FEFF 		bl	fmod
 2686 019c 4FF00002 		mov	r2, #0
 2687 01a0 324B     		ldr	r3, .L155+72
 2688 01a2 FFF7FEFF 		bl	__aeabi_ddiv
 2689 01a6 0246     		mov	r2, r0
 2690 01a8 0B46     		mov	r3, r1
 2691 01aa 2046     		mov	r0, r4
 2692 01ac 2946     		mov	r1, r5
 2693 01ae FFF7FEFF 		bl	__aeabi_dadd
 2694 01b2 0346     		mov	r3, r0
 2695 01b4 0C46     		mov	r4, r1
 2696 01b6 1846     		mov	r0, r3
 2697 01b8 2146     		mov	r1, r4
 2698 01ba FFF7FEFF 		bl	__aeabi_d2f
 2699 01be 0346     		mov	r3, r0
 2700 01c0 83F00043 		eor	r3, r3, #-2147483648
 2701 01c4 FB60     		str	r3, [r7, #12]	@ float
 755:modem.c       ****         gps.altitude = alt; // Save alt, lat, and lon to the variable gps.
 2702              		.loc 1 755 0
 2703 01c6 BB68     		ldr	r3, [r7, #8]	@ float
 2704 01c8 FB61     		str	r3, [r7, #28]	@ float
 756:modem.c       ****         gps.latitude = lat;
 2705              		.loc 1 756 0
 2706 01ca 3B69     		ldr	r3, [r7, #16]	@ float
 2707 01cc 7B61     		str	r3, [r7, #20]	@ float
 757:modem.c       ****         gps.longitude = lon;
 2708              		.loc 1 757 0
 2709 01ce FB68     		ldr	r3, [r7, #12]	@ float
 2710 01d0 BB61     		str	r3, [r7, #24]	@ float
 758:modem.c       ****         gps.valid = 1;
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 66


 2711              		.loc 1 758 0
 2712 01d2 0123     		movs	r3, #1
 2713 01d4 87F82230 		strb	r3, [r7, #34]
 2714              	.L152:
 759:modem.c       ****     }
 760:modem.c       ****     
 761:modem.c       ****     // Disable LDO, just in case
 762:modem.c       ****     at_write_command("AT#GPIO=5,0,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2715              		.loc 1 762 0
 2716 01d8 4FF4FA62 		mov	r2, #2000
 2717 01dc 1249     		ldr	r1, .L155+4
 2718 01de 2448     		ldr	r0, .L155+76
 2719 01e0 FFF7FEFF 		bl	at_write_command
 763:modem.c       ****     
 764:modem.c       ****     // Flush modem's GPS data, just in case
 765:modem.c       ****     at_write_command("AT$GPSR=0\r","OK",DEFAULT_AT_TIMEOUT);
 2720              		.loc 1 765 0
 2721 01e4 4FF4FA62 		mov	r2, #2000
 2722 01e8 0F49     		ldr	r1, .L155+4
 2723 01ea 2248     		ldr	r0, .L155+80
 2724 01ec FFF7FEFF 		bl	at_write_command
 766:modem.c       ****     
 767:modem.c       ****     
 768:modem.c       ****     
 769:modem.c       ****     
 770:modem.c       ****     
 771:modem.c       ****     /* Relevant to 3g modem, can ignore
 772:modem.c       ****     
 773:modem.c       ****     //Setthe GPS Quality of Servicep arameters. Inorder,theyare<horiz_accuracy(inmeters)>,<vertical
 774:modem.c       ****     //AT$GPSQOS=50,50,100,0
 775:modem.c       ****     at_write_command("AT$GPSQOS=50,50,100,0\r","OK",DEFAULT_AT_TIMEOUT);
 776:modem.c       ****     
 777:modem.c       ****     //SettheSUPLLocationPlatform(SLP)addressoftheserverthatwillprovidetheA-GPS data:
 778:modem.c       ****     at_write_command("AT$LCSSLP=1,\"supl.google.com\"\r","OK",DEFAULT_AT_TIMEOUT);
 779:modem.c       ****     
 780:modem.c       ****     //unlock contedt, simnce its being used by modem
 781:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 782:modem.c       ****     //Lock context 1 for LoCation Services (LCS) use only
 783:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",5000u);
 784:modem.c       ****     
 785:modem.c       ****     //unlock contedt, simnce its being used by modem
 786:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 787:modem.c       ****     
 788:modem.c       ****     //EnableunsolicitedNMEAGPSdataintheformatof<NMEASENTENCE><CR>
 789:modem.c       ****     at_write_command("AT$GPSNMUN=2,1,0,0,0,0,0\r","OK",DEFAULT_AT_TIMEOUT);
 790:modem.c       ****     
 791:modem.c       ****     //StartGPSlocationservicerequest.Sendingthiscommandsets$GPSP=1
 792:modem.c       ****    uint8 gps_status = 0;
 793:modem.c       ****     for(uint16 i=0;i<200;i++){
 794:modem.c       ****         gps_status = at_write_command("AT$GPSSLSR=1,1,,,,,0,255\r","N",3000u);
 795:modem.c       ****         if(gps_status){
 796:modem.c       ****             break;   
 797:modem.c       ****         }
 798:modem.c       ****   }
 799:modem.c       ****     
 800:modem.c       ****     //$GPGGA,030307.691,4217.7923,N,08341.3240,W,1,05,2.25,225.0,M,,M,,0000*6E
 801:modem.c       ****     //$GPGGA,213852.000,4600.8755,N,09327.7008,W,1,05,3.00,292.0,M,,M,,0000*6E
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 67


 802:modem.c       ****     if(gps_status){
 803:modem.c       ****         float lat,lon,alt = 0;
 804:modem.c       ****         if(sscanf(uart_received_string,"%*s,%f,N,%f,W,%*s",&lat,&lon) > 0){
 805:modem.c       ****             gps.altitude = alt;
 806:modem.c       ****             gps.latitude = lat/60;
 807:modem.c       ****             gps.longitude = lon/60;
 808:modem.c       ****             gps.valid = 1;
 809:modem.c       ****         }
 810:modem.c       ****         
 811:modem.c       ****     }
 812:modem.c       ****     
 813:modem.c       ****     //turn off gps
 814:modem.c       ****     //AT$GPSP=0
 815:modem.c       ****     at_write_command("AT$GPSP=0\r","OK",DEFAULT_AT_TIMEOUT);
 816:modem.c       ****     
 817:modem.c       ****     */
 818:modem.c       **** 
 819:modem.c       ****     // Calculate time to lock into GPS location and save in variable lock_time
 820:modem.c       ****     lock_time = getTimeStamp() - lock_time;
 2725              		.loc 1 820 0
 2726 01f0 FFF7FEFF 		bl	getTimeStamp
 2727 01f4 0246     		mov	r2, r0
 2728 01f6 3B6B     		ldr	r3, [r7, #48]
 2729 01f8 D31A     		subs	r3, r2, r3
 2730 01fa 3B63     		str	r3, [r7, #48]
 821:modem.c       ****     gps.time_to_lock = lock_time;
 2731              		.loc 1 821 0
 2732 01fc 3B6B     		ldr	r3, [r7, #48]
 2733 01fe 9BB2     		uxth	r3, r3
 2734 0200 3B84     		strh	r3, [r7, #32]	@ movhi
 822:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Time to lock GPS: %d", gps.time_to_lock);
 2735              		.loc 1 822 0
 2736 0202 3B8C     		ldrh	r3, [r7, #32]
 2737 0204 1A46     		mov	r2, r3
 2738 0206 1C49     		ldr	r1, .L155+84
 2739 0208 0020     		movs	r0, #0
 2740 020a FFF7FEFF 		bl	printNotif
 823:modem.c       ****     
 824:modem.c       ****     return gps;
 2741              		.loc 1 824 0
 2742 020e 7B68     		ldr	r3, [r7, #4]
 2743 0210 1C46     		mov	r4, r3
 2744 0212 07F11403 		add	r3, r7, #20
 2745 0216 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2746 0218 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2747              	.L145:
 825:modem.c       ****     
 826:modem.c       **** }
 2748              		.loc 1 826 0
 2749 021c 7868     		ldr	r0, [r7, #4]
 2750 021e 3837     		adds	r7, r7, #56
 2751              		.cfi_def_cfa_offset 16
 2752 0220 BD46     		mov	sp, r7
 2753              		.cfi_def_cfa_register 13
 2754              		@ sp needed
 2755 0222 B0BD     		pop	{r4, r5, r7, pc}
 2756              	.L156:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 68


 2757              		.align	2
 2758              	.L155:
 2759 0224 00000000 		.word	modem_state
 2760 0228 00000000 		.word	.LC0
 2761 022c 8C050000 		.word	.LC60
 2762 0230 A0050000 		.word	.LC61
 2763 0234 B0050000 		.word	.LC62
 2764 0238 BC050000 		.word	.LC63
 2765 023c CC050000 		.word	.LC64
 2766 0240 F0050000 		.word	.LC65
 2767 0244 00060000 		.word	.LC66
 2768 0248 D8020000 		.word	.LC27
 2769 024c 10060000 		.word	.LC67
 2770 0250 28060000 		.word	.LC68
 2771 0254 2C060000 		.word	.LC69
 2772 0258 38060000 		.word	.LC70
 2773 025c 00000000 		.word	uart_received_string
 2774 0260 44060000 		.word	.LC71
 2775 0264 0000C842 		.word	1120403456
 2776 0268 00005940 		.word	1079574528
 2777 026c 00004E40 		.word	1078853632
 2778 0270 64060000 		.word	.LC72
 2779 0274 78060000 		.word	.LC73
 2780 0278 84060000 		.word	.LC74
 2781              		.cfi_endproc
 2782              	.LFE87:
 2783              		.size	modem_get_gps_coordinates, .-modem_get_gps_coordinates
 2784              		.text
 2785              	.Letext0:
 2786              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 2787              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 2788              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2789              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 2790              		.file 6 "testing.h"
 2791              		.file 7 "modem.h"
 2792              		.file 8 "data.h"
 2793              		.file 9 "notoriOS.h"
 2794              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 2795              		.section	.debug_info,"",%progbits
 2796              	.Ldebug_info0:
 2797 0000 920B0000 		.4byte	0xb92
 2798 0004 0400     		.2byte	0x4
 2799 0006 00000000 		.4byte	.Ldebug_abbrev0
 2800 000a 04       		.byte	0x4
 2801 000b 01       		.uleb128 0x1
 2802 000c 54000000 		.4byte	.LASF156
 2803 0010 0C       		.byte	0xc
 2804 0011 B8030000 		.4byte	.LASF157
 2805 0015 62050000 		.4byte	.LASF158
 2806 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 2807 001d 00000000 		.4byte	0
 2808 0021 00000000 		.4byte	.Ldebug_line0
 2809 0025 02       		.uleb128 0x2
 2810 0026 01       		.byte	0x1
 2811 0027 06       		.byte	0x6
 2812 0028 57010000 		.4byte	.LASF0
 2813 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 69


 2814 002d 28000000 		.4byte	.LASF4
 2815 0031 02       		.byte	0x2
 2816 0032 1D       		.byte	0x1d
 2817 0033 37000000 		.4byte	0x37
 2818 0037 02       		.uleb128 0x2
 2819 0038 01       		.byte	0x1
 2820 0039 08       		.byte	0x8
 2821 003a C4050000 		.4byte	.LASF1
 2822 003e 02       		.uleb128 0x2
 2823 003f 02       		.byte	0x2
 2824 0040 05       		.byte	0x5
 2825 0041 F0030000 		.4byte	.LASF2
 2826 0045 02       		.uleb128 0x2
 2827 0046 02       		.byte	0x2
 2828 0047 07       		.byte	0x7
 2829 0048 4A020000 		.4byte	.LASF3
 2830 004c 03       		.uleb128 0x3
 2831 004d 05040000 		.4byte	.LASF5
 2832 0051 02       		.byte	0x2
 2833 0052 3F       		.byte	0x3f
 2834 0053 57000000 		.4byte	0x57
 2835 0057 02       		.uleb128 0x2
 2836 0058 04       		.byte	0x4
 2837 0059 05       		.byte	0x5
 2838 005a D9010000 		.4byte	.LASF6
 2839 005e 03       		.uleb128 0x3
 2840 005f 6D020000 		.4byte	.LASF7
 2841 0063 02       		.byte	0x2
 2842 0064 41       		.byte	0x41
 2843 0065 69000000 		.4byte	0x69
 2844 0069 02       		.uleb128 0x2
 2845 006a 04       		.byte	0x4
 2846 006b 07       		.byte	0x7
 2847 006c 19030000 		.4byte	.LASF8
 2848 0070 02       		.uleb128 0x2
 2849 0071 08       		.byte	0x8
 2850 0072 05       		.byte	0x5
 2851 0073 49010000 		.4byte	.LASF9
 2852 0077 02       		.uleb128 0x2
 2853 0078 08       		.byte	0x8
 2854 0079 07       		.byte	0x7
 2855 007a EF000000 		.4byte	.LASF10
 2856 007e 04       		.uleb128 0x4
 2857 007f 04       		.byte	0x4
 2858 0080 05       		.byte	0x5
 2859 0081 696E7400 		.ascii	"int\000"
 2860 0085 02       		.uleb128 0x2
 2861 0086 04       		.byte	0x4
 2862 0087 07       		.byte	0x7
 2863 0088 A3060000 		.4byte	.LASF11
 2864 008c 03       		.uleb128 0x3
 2865 008d DA070000 		.4byte	.LASF12
 2866 0091 03       		.byte	0x3
 2867 0092 18       		.byte	0x18
 2868 0093 2C000000 		.4byte	0x2c
 2869 0097 03       		.uleb128 0x3
 2870 0098 BC050000 		.4byte	.LASF13
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 70


 2871 009c 03       		.byte	0x3
 2872 009d 2C       		.byte	0x2c
 2873 009e 4C000000 		.4byte	0x4c
 2874 00a2 03       		.uleb128 0x3
 2875 00a3 6A070000 		.4byte	.LASF14
 2876 00a7 03       		.byte	0x3
 2877 00a8 30       		.byte	0x30
 2878 00a9 5E000000 		.4byte	0x5e
 2879 00ad 05       		.uleb128 0x5
 2880 00ae 11020000 		.4byte	.LASF15
 2881 00b2 04       		.byte	0x4
 2882 00b3 9201     		.2byte	0x192
 2883 00b5 37000000 		.4byte	0x37
 2884 00b9 05       		.uleb128 0x5
 2885 00ba 0B000000 		.4byte	.LASF16
 2886 00be 04       		.byte	0x4
 2887 00bf 9301     		.2byte	0x193
 2888 00c1 45000000 		.4byte	0x45
 2889 00c5 05       		.uleb128 0x5
 2890 00c6 5D020000 		.4byte	.LASF17
 2891 00ca 04       		.byte	0x4
 2892 00cb 9401     		.2byte	0x194
 2893 00cd 69000000 		.4byte	0x69
 2894 00d1 05       		.uleb128 0x5
 2895 00d2 E2070000 		.4byte	.LASF18
 2896 00d6 04       		.byte	0x4
 2897 00d7 9601     		.2byte	0x196
 2898 00d9 3E000000 		.4byte	0x3e
 2899 00dd 05       		.uleb128 0x5
 2900 00de 1E020000 		.4byte	.LASF19
 2901 00e2 04       		.byte	0x4
 2902 00e3 9701     		.2byte	0x197
 2903 00e5 57000000 		.4byte	0x57
 2904 00e9 02       		.uleb128 0x2
 2905 00ea 04       		.byte	0x4
 2906 00eb 04       		.byte	0x4
 2907 00ec 37050000 		.4byte	.LASF20
 2908 00f0 02       		.uleb128 0x2
 2909 00f1 08       		.byte	0x8
 2910 00f2 04       		.byte	0x4
 2911 00f3 17020000 		.4byte	.LASF21
 2912 00f7 02       		.uleb128 0x2
 2913 00f8 01       		.byte	0x1
 2914 00f9 08       		.byte	0x8
 2915 00fa 8A060000 		.4byte	.LASF22
 2916 00fe 02       		.uleb128 0x2
 2917 00ff 08       		.byte	0x8
 2918 0100 04       		.byte	0x4
 2919 0101 7E060000 		.4byte	.LASF23
 2920 0105 02       		.uleb128 0x2
 2921 0106 04       		.byte	0x4
 2922 0107 07       		.byte	0x7
 2923 0108 87040000 		.4byte	.LASF24
 2924 010c 06       		.uleb128 0x6
 2925 010d 04       		.byte	0x4
 2926 010e F7000000 		.4byte	0xf7
 2927 0112 06       		.uleb128 0x6
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 71


 2928 0113 04       		.byte	0x4
 2929 0114 18010000 		.4byte	0x118
 2930 0118 07       		.uleb128 0x7
 2931 0119 F7000000 		.4byte	0xf7
 2932 011d 08       		.uleb128 0x8
 2933 011e F7000000 		.4byte	0xf7
 2934 0122 2D010000 		.4byte	0x12d
 2935 0126 09       		.uleb128 0x9
 2936 0127 05010000 		.4byte	0x105
 2937 012b 17       		.byte	0x17
 2938 012c 00       		.byte	0
 2939 012d 0A       		.uleb128 0xa
 2940 012e 746D00   		.ascii	"tm\000"
 2941 0131 24       		.byte	0x24
 2942 0132 05       		.byte	0x5
 2943 0133 21       		.byte	0x21
 2944 0134 A5010000 		.4byte	0x1a5
 2945 0138 0B       		.uleb128 0xb
 2946 0139 73070000 		.4byte	.LASF25
 2947 013d 05       		.byte	0x5
 2948 013e 23       		.byte	0x23
 2949 013f 7E000000 		.4byte	0x7e
 2950 0143 00       		.byte	0
 2951 0144 0B       		.uleb128 0xb
 2952 0145 80040000 		.4byte	.LASF26
 2953 0149 05       		.byte	0x5
 2954 014a 24       		.byte	0x24
 2955 014b 7E000000 		.4byte	0x7e
 2956 014f 04       		.byte	0x4
 2957 0150 0B       		.uleb128 0xb
 2958 0151 18000000 		.4byte	.LASF27
 2959 0155 05       		.byte	0x5
 2960 0156 25       		.byte	0x25
 2961 0157 7E000000 		.4byte	0x7e
 2962 015b 08       		.byte	0x8
 2963 015c 0B       		.uleb128 0xb
 2964 015d 55070000 		.4byte	.LASF28
 2965 0161 05       		.byte	0x5
 2966 0162 26       		.byte	0x26
 2967 0163 7E000000 		.4byte	0x7e
 2968 0167 0C       		.byte	0xc
 2969 0168 0B       		.uleb128 0xb
 2970 0169 8F020000 		.4byte	.LASF29
 2971 016d 05       		.byte	0x5
 2972 016e 27       		.byte	0x27
 2973 016f 7E000000 		.4byte	0x7e
 2974 0173 10       		.byte	0x10
 2975 0174 0B       		.uleb128 0xb
 2976 0175 DB020000 		.4byte	.LASF30
 2977 0179 05       		.byte	0x5
 2978 017a 28       		.byte	0x28
 2979 017b 7E000000 		.4byte	0x7e
 2980 017f 14       		.byte	0x14
 2981 0180 0B       		.uleb128 0xb
 2982 0181 5F060000 		.4byte	.LASF31
 2983 0185 05       		.byte	0x5
 2984 0186 29       		.byte	0x29
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 72


 2985 0187 7E000000 		.4byte	0x7e
 2986 018b 18       		.byte	0x18
 2987 018c 0B       		.uleb128 0xb
 2988 018d 20000000 		.4byte	.LASF32
 2989 0191 05       		.byte	0x5
 2990 0192 2A       		.byte	0x2a
 2991 0193 7E000000 		.4byte	0x7e
 2992 0197 1C       		.byte	0x1c
 2993 0198 0B       		.uleb128 0xb
 2994 0199 7F030000 		.4byte	.LASF33
 2995 019d 05       		.byte	0x5
 2996 019e 2B       		.byte	0x2b
 2997 019f 7E000000 		.4byte	0x7e
 2998 01a3 20       		.byte	0x20
 2999 01a4 00       		.byte	0
 3000 01a5 0C       		.uleb128 0xc
 3001 01a6 8101     		.2byte	0x181
 3002 01a8 06       		.byte	0x6
 3003 01a9 0A       		.byte	0xa
 3004 01aa D3010000 		.4byte	0x1d3
 3005 01ae 0B       		.uleb128 0xb
 3006 01af D1040000 		.4byte	.LASF34
 3007 01b3 06       		.byte	0x6
 3008 01b4 0C       		.byte	0xc
 3009 01b5 D3010000 		.4byte	0x1d3
 3010 01b9 00       		.byte	0
 3011 01ba 0B       		.uleb128 0xb
 3012 01bb AB070000 		.4byte	.LASF35
 3013 01bf 06       		.byte	0x6
 3014 01c0 0D       		.byte	0xd
 3015 01c1 AD000000 		.4byte	0xad
 3016 01c5 80       		.byte	0x80
 3017 01c6 0B       		.uleb128 0xb
 3018 01c7 33060000 		.4byte	.LASF36
 3019 01cb 06       		.byte	0x6
 3020 01cc 0F       		.byte	0xf
 3021 01cd E3010000 		.4byte	0x1e3
 3022 01d1 81       		.byte	0x81
 3023 01d2 00       		.byte	0
 3024 01d3 08       		.uleb128 0x8
 3025 01d4 F7000000 		.4byte	0xf7
 3026 01d8 E3010000 		.4byte	0x1e3
 3027 01dc 09       		.uleb128 0x9
 3028 01dd 05010000 		.4byte	0x105
 3029 01e1 7F       		.byte	0x7f
 3030 01e2 00       		.byte	0
 3031 01e3 08       		.uleb128 0x8
 3032 01e4 F7000000 		.4byte	0xf7
 3033 01e8 F3010000 		.4byte	0x1f3
 3034 01ec 09       		.uleb128 0x9
 3035 01ed 05010000 		.4byte	0x105
 3036 01f1 FF       		.byte	0xff
 3037 01f2 00       		.byte	0
 3038 01f3 03       		.uleb128 0x3
 3039 01f4 1B060000 		.4byte	.LASF37
 3040 01f8 06       		.byte	0x6
 3041 01f9 10       		.byte	0x10
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 73


 3042 01fa A5010000 		.4byte	0x1a5
 3043 01fe 0D       		.uleb128 0xd
 3044 01ff 3C       		.byte	0x3c
 3045 0200 07       		.byte	0x7
 3046 0201 2E       		.byte	0x2e
 3047 0202 2B020000 		.4byte	0x22b
 3048 0206 0B       		.uleb128 0xb
 3049 0207 4E070000 		.4byte	.LASF38
 3050 020b 07       		.byte	0x7
 3051 020c 2F       		.byte	0x2f
 3052 020d 2B020000 		.4byte	0x22b
 3053 0211 00       		.byte	0
 3054 0212 0B       		.uleb128 0xb
 3055 0213 B5060000 		.4byte	.LASF39
 3056 0217 07       		.byte	0x7
 3057 0218 30       		.byte	0x30
 3058 0219 2B020000 		.4byte	0x22b
 3059 021d 14       		.byte	0x14
 3060 021e 0B       		.uleb128 0xb
 3061 021f 2E060000 		.4byte	.LASF40
 3062 0223 07       		.byte	0x7
 3063 0224 31       		.byte	0x31
 3064 0225 2B020000 		.4byte	0x22b
 3065 0229 28       		.byte	0x28
 3066 022a 00       		.byte	0
 3067 022b 08       		.uleb128 0x8
 3068 022c F7000000 		.4byte	0xf7
 3069 0230 3B020000 		.4byte	0x23b
 3070 0234 09       		.uleb128 0x9
 3071 0235 05010000 		.4byte	0x105
 3072 0239 13       		.byte	0x13
 3073 023a 00       		.byte	0
 3074 023b 03       		.uleb128 0x3
 3075 023c C9060000 		.4byte	.LASF41
 3076 0240 07       		.byte	0x7
 3077 0241 32       		.byte	0x32
 3078 0242 FE010000 		.4byte	0x1fe
 3079 0246 0D       		.uleb128 0xd
 3080 0247 10       		.byte	0x10
 3081 0248 07       		.byte	0x7
 3082 0249 34       		.byte	0x34
 3083 024a AF020000 		.4byte	0x2af
 3084 024e 0B       		.uleb128 0xb
 3085 024f 24080000 		.4byte	.LASF42
 3086 0253 07       		.byte	0x7
 3087 0254 35       		.byte	0x35
 3088 0255 AD000000 		.4byte	0xad
 3089 0259 00       		.byte	0
 3090 025a 0E       		.uleb128 0xe
 3091 025b 62657200 		.ascii	"ber\000"
 3092 025f 07       		.byte	0x7
 3093 0260 36       		.byte	0x36
 3094 0261 AD000000 		.4byte	0xad
 3095 0265 01       		.byte	0x1
 3096 0266 0B       		.uleb128 0xb
 3097 0267 FC050000 		.4byte	.LASF43
 3098 026b 07       		.byte	0x7
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 74


 3099 026c 37       		.byte	0x37
 3100 026d AD000000 		.4byte	0xad
 3101 0271 02       		.byte	0x2
 3102 0272 0B       		.uleb128 0xb
 3103 0273 63010000 		.4byte	.LASF44
 3104 0277 07       		.byte	0x7
 3105 0278 38       		.byte	0x38
 3106 0279 AD000000 		.4byte	0xad
 3107 027d 03       		.byte	0x3
 3108 027e 0B       		.uleb128 0xb
 3109 027f E8050000 		.4byte	.LASF45
 3110 0283 07       		.byte	0x7
 3111 0284 39       		.byte	0x39
 3112 0285 AD000000 		.4byte	0xad
 3113 0289 04       		.byte	0x4
 3114 028a 0B       		.uleb128 0xb
 3115 028b 3A060000 		.4byte	.LASF46
 3116 028f 07       		.byte	0x7
 3117 0290 3A       		.byte	0x3a
 3118 0291 AD000000 		.4byte	0xad
 3119 0295 05       		.byte	0x5
 3120 0296 0B       		.uleb128 0xb
 3121 0297 85010000 		.4byte	.LASF47
 3122 029b 07       		.byte	0x7
 3123 029c 3B       		.byte	0x3b
 3124 029d 7E000000 		.4byte	0x7e
 3125 02a1 08       		.byte	0x8
 3126 02a2 0B       		.uleb128 0xb
 3127 02a3 D3030000 		.4byte	.LASF48
 3128 02a7 07       		.byte	0x7
 3129 02a8 3C       		.byte	0x3c
 3130 02a9 7E000000 		.4byte	0x7e
 3131 02ad 0C       		.byte	0xc
 3132 02ae 00       		.byte	0
 3133 02af 03       		.uleb128 0x3
 3134 02b0 3F060000 		.4byte	.LASF49
 3135 02b4 07       		.byte	0x7
 3136 02b5 3D       		.byte	0x3d
 3137 02b6 46020000 		.4byte	0x246
 3138 02ba 0D       		.uleb128 0xd
 3139 02bb 10       		.byte	0x10
 3140 02bc 07       		.byte	0x7
 3141 02bd 3F       		.byte	0x3f
 3142 02be FF020000 		.4byte	0x2ff
 3143 02c2 0B       		.uleb128 0xb
 3144 02c3 C8040000 		.4byte	.LASF50
 3145 02c7 07       		.byte	0x7
 3146 02c8 40       		.byte	0x40
 3147 02c9 E9000000 		.4byte	0xe9
 3148 02cd 00       		.byte	0
 3149 02ce 0B       		.uleb128 0xb
 3150 02cf 4A000000 		.4byte	.LASF51
 3151 02d3 07       		.byte	0x7
 3152 02d4 41       		.byte	0x41
 3153 02d5 E9000000 		.4byte	0xe9
 3154 02d9 04       		.byte	0x4
 3155 02da 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 75


 3156 02db 08020000 		.4byte	.LASF52
 3157 02df 07       		.byte	0x7
 3158 02e0 42       		.byte	0x42
 3159 02e1 E9000000 		.4byte	0xe9
 3160 02e5 08       		.byte	0x8
 3161 02e6 0B       		.uleb128 0xb
 3162 02e7 65030000 		.4byte	.LASF53
 3163 02eb 07       		.byte	0x7
 3164 02ec 43       		.byte	0x43
 3165 02ed B9000000 		.4byte	0xb9
 3166 02f1 0C       		.byte	0xc
 3167 02f2 0B       		.uleb128 0xb
 3168 02f3 5D070000 		.4byte	.LASF54
 3169 02f7 07       		.byte	0x7
 3170 02f8 44       		.byte	0x44
 3171 02f9 AD000000 		.4byte	0xad
 3172 02fd 0E       		.byte	0xe
 3173 02fe 00       		.byte	0
 3174 02ff 03       		.uleb128 0x3
 3175 0300 D6060000 		.4byte	.LASF55
 3176 0304 07       		.byte	0x7
 3177 0305 46       		.byte	0x46
 3178 0306 BA020000 		.4byte	0x2ba
 3179 030a 0D       		.uleb128 0xd
 3180 030b 03       		.byte	0x3
 3181 030c 07       		.byte	0x7
 3182 030d 49       		.byte	0x49
 3183 030e 37030000 		.4byte	0x337
 3184 0312 0B       		.uleb128 0xb
 3185 0313 EE060000 		.4byte	.LASF56
 3186 0317 07       		.byte	0x7
 3187 0318 4C       		.byte	0x4c
 3188 0319 AD000000 		.4byte	0xad
 3189 031d 00       		.byte	0
 3190 031e 0B       		.uleb128 0xb
 3191 031f ED050000 		.4byte	.LASF57
 3192 0323 07       		.byte	0x7
 3193 0324 4E       		.byte	0x4e
 3194 0325 AD000000 		.4byte	0xad
 3195 0329 01       		.byte	0x1
 3196 032a 0B       		.uleb128 0xb
 3197 032b 96020000 		.4byte	.LASF58
 3198 032f 07       		.byte	0x7
 3199 0330 51       		.byte	0x51
 3200 0331 AD000000 		.4byte	0xad
 3201 0335 02       		.byte	0x2
 3202 0336 00       		.byte	0
 3203 0337 03       		.uleb128 0x3
 3204 0338 4B040000 		.4byte	.LASF59
 3205 033c 07       		.byte	0x7
 3206 033d 52       		.byte	0x52
 3207 033e 0A030000 		.4byte	0x30a
 3208 0342 0D       		.uleb128 0xd
 3209 0343 2C       		.byte	0x2c
 3210 0344 08       		.byte	0x8
 3211 0345 10       		.byte	0x10
 3212 0346 6F030000 		.4byte	0x36f
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 76


 3213 034a 0E       		.uleb128 0xe
 3214 034b 6B657900 		.ascii	"key\000"
 3215 034f 08       		.byte	0x8
 3216 0350 11       		.byte	0x11
 3217 0351 2B020000 		.4byte	0x22b
 3218 0355 00       		.byte	0
 3219 0356 0B       		.uleb128 0xb
 3220 0357 12000000 		.4byte	.LASF60
 3221 035b 08       		.byte	0x8
 3222 035c 12       		.byte	0x12
 3223 035d 2B020000 		.4byte	0x22b
 3224 0361 14       		.byte	0x14
 3225 0362 0B       		.uleb128 0xb
 3226 0363 51080000 		.4byte	.LASF61
 3227 0367 08       		.byte	0x8
 3228 0368 13       		.byte	0x13
 3229 0369 DD000000 		.4byte	0xdd
 3230 036d 28       		.byte	0x28
 3231 036e 00       		.byte	0
 3232 036f 03       		.uleb128 0x3
 3233 0370 03030000 		.4byte	.LASF62
 3234 0374 08       		.byte	0x8
 3235 0375 14       		.byte	0x14
 3236 0376 42030000 		.4byte	0x342
 3237 037a 0D       		.uleb128 0xd
 3238 037b 06       		.byte	0x6
 3239 037c 09       		.byte	0x9
 3240 037d 2B       		.byte	0x2b
 3241 037e B3030000 		.4byte	0x3b3
 3242 0382 0B       		.uleb128 0xb
 3243 0383 68010000 		.4byte	.LASF63
 3244 0387 09       		.byte	0x9
 3245 0388 2D       		.byte	0x2d
 3246 0389 B9000000 		.4byte	0xb9
 3247 038d 00       		.byte	0
 3248 038e 0B       		.uleb128 0xb
 3249 038f E2010000 		.4byte	.LASF64
 3250 0393 09       		.byte	0x9
 3251 0394 2E       		.byte	0x2e
 3252 0395 D1000000 		.4byte	0xd1
 3253 0399 02       		.byte	0x2
 3254 039a 0B       		.uleb128 0xb
 3255 039b FA070000 		.4byte	.LASF65
 3256 039f 09       		.byte	0x9
 3257 03a0 2F       		.byte	0x2f
 3258 03a1 AD000000 		.4byte	0xad
 3259 03a5 04       		.byte	0x4
 3260 03a6 0B       		.uleb128 0xb
 3261 03a7 32000000 		.4byte	.LASF66
 3262 03ab 09       		.byte	0x9
 3263 03ac 30       		.byte	0x30
 3264 03ad AD000000 		.4byte	0xad
 3265 03b1 05       		.byte	0x5
 3266 03b2 00       		.byte	0
 3267 03b3 03       		.uleb128 0x3
 3268 03b4 B6050000 		.4byte	.LASF67
 3269 03b8 09       		.byte	0x9
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 77


 3270 03b9 33       		.byte	0x33
 3271 03ba BE030000 		.4byte	0x3be
 3272 03be 0F       		.uleb128 0xf
 3273 03bf 7A030000 		.4byte	0x37a
 3274 03c3 0D       		.uleb128 0xd
 3275 03c4 1C       		.byte	0x1c
 3276 03c5 09       		.byte	0x9
 3277 03c6 36       		.byte	0x36
 3278 03c7 E4030000 		.4byte	0x3e4
 3279 03cb 0B       		.uleb128 0xb
 3280 03cc 88030000 		.4byte	.LASF68
 3281 03d0 09       		.byte	0x9
 3282 03d1 38       		.byte	0x38
 3283 03d2 E4030000 		.4byte	0x3e4
 3284 03d6 00       		.byte	0
 3285 03d7 0B       		.uleb128 0xb
 3286 03d8 9B030000 		.4byte	.LASF69
 3287 03dc 09       		.byte	0x9
 3288 03dd 39       		.byte	0x39
 3289 03de 1D010000 		.4byte	0x11d
 3290 03e2 04       		.byte	0x4
 3291 03e3 00       		.byte	0
 3292 03e4 06       		.uleb128 0x6
 3293 03e5 04       		.byte	0x4
 3294 03e6 3B020000 		.4byte	0x23b
 3295 03ea 03       		.uleb128 0x3
 3296 03eb 40040000 		.4byte	.LASF70
 3297 03ef 09       		.byte	0x9
 3298 03f0 3B       		.byte	0x3b
 3299 03f1 C3030000 		.4byte	0x3c3
 3300 03f5 0D       		.uleb128 0xd
 3301 03f6 68       		.byte	0x68
 3302 03f7 09       		.byte	0x9
 3303 03f8 41       		.byte	0x41
 3304 03f9 16040000 		.4byte	0x416
 3305 03fd 0B       		.uleb128 0xb
 3306 03fe 93030000 		.4byte	.LASF71
 3307 0402 09       		.byte	0x9
 3308 0403 46       		.byte	0x46
 3309 0404 16040000 		.4byte	0x416
 3310 0408 00       		.byte	0
 3311 0409 0B       		.uleb128 0xb
 3312 040a 77030000 		.4byte	.LASF72
 3313 040e 09       		.byte	0x9
 3314 040f 47       		.byte	0x47
 3315 0410 7E000000 		.4byte	0x7e
 3316 0414 64       		.byte	0x64
 3317 0415 00       		.byte	0
 3318 0416 08       		.uleb128 0x8
 3319 0417 F7000000 		.4byte	0xf7
 3320 041b 26040000 		.4byte	0x426
 3321 041f 09       		.uleb128 0x9
 3322 0420 05010000 		.4byte	0x105
 3323 0424 63       		.byte	0x63
 3324 0425 00       		.byte	0
 3325 0426 03       		.uleb128 0x3
 3326 0427 CB070000 		.4byte	.LASF73
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 78


 3327 042b 09       		.byte	0x9
 3328 042c 4D       		.byte	0x4d
 3329 042d F5030000 		.4byte	0x3f5
 3330 0431 10       		.uleb128 0x10
 3331 0432 A9050000 		.4byte	.LASF105
 3332 0436 01       		.byte	0x1
 3333 0437 16       		.byte	0x16
 3334 0438 00000000 		.4byte	.LFB64
 3335 043c 44000000 		.4byte	.LFE64-.LFB64
 3336 0440 01       		.uleb128 0x1
 3337 0441 9C       		.byte	0x9c
 3338 0442 11       		.uleb128 0x11
 3339 0443 3D050000 		.4byte	.LASF74
 3340 0447 01       		.byte	0x1
 3341 0448 20       		.byte	0x20
 3342 0449 00000000 		.4byte	.LFB65
 3343 044d 6C000000 		.4byte	.LFE65-.LFB65
 3344 0451 01       		.uleb128 0x1
 3345 0452 9C       		.byte	0x9c
 3346 0453 11       		.uleb128 0x11
 3347 0454 36070000 		.4byte	.LASF75
 3348 0458 01       		.byte	0x1
 3349 0459 3A       		.byte	0x3a
 3350 045a 00000000 		.4byte	.LFB66
 3351 045e 32000000 		.4byte	.LFE66-.LFB66
 3352 0462 01       		.uleb128 0x1
 3353 0463 9C       		.byte	0x9c
 3354 0464 11       		.uleb128 0x11
 3355 0465 ED020000 		.4byte	.LASF76
 3356 0469 01       		.byte	0x1
 3357 046a 4A       		.byte	0x4a
 3358 046b 00000000 		.4byte	.LFB67
 3359 046f 20000000 		.4byte	.LFE67-.LFB67
 3360 0473 01       		.uleb128 0x1
 3361 0474 9C       		.byte	0x9c
 3362 0475 11       		.uleb128 0x11
 3363 0476 40080000 		.4byte	.LASF77
 3364 047a 01       		.byte	0x1
 3365 047b 53       		.byte	0x53
 3366 047c 00000000 		.4byte	.LFB68
 3367 0480 40000000 		.4byte	.LFE68-.LFB68
 3368 0484 01       		.uleb128 0x1
 3369 0485 9C       		.byte	0x9c
 3370 0486 12       		.uleb128 0x12
 3371 0487 A9030000 		.4byte	.LASF91
 3372 048b 01       		.byte	0x1
 3373 048c 65       		.byte	0x65
 3374 048d AD000000 		.4byte	0xad
 3375 0491 00000000 		.4byte	.LFB69
 3376 0495 DC000000 		.4byte	.LFE69-.LFB69
 3377 0499 01       		.uleb128 0x1
 3378 049a 9C       		.byte	0x9c
 3379 049b FA040000 		.4byte	0x4fa
 3380 049f 13       		.uleb128 0x13
 3381 04a0 E8070000 		.4byte	.LASF78
 3382 04a4 01       		.byte	0x1
 3383 04a5 6E       		.byte	0x6e
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 79


 3384 04a6 AD000000 		.4byte	0xad
 3385 04aa 02       		.uleb128 0x2
 3386 04ab 91       		.byte	0x91
 3387 04ac 77       		.sleb128 -9
 3388 04ad 13       		.uleb128 0x13
 3389 04ae F1070000 		.4byte	.LASF79
 3390 04b2 01       		.byte	0x1
 3391 04b3 6F       		.byte	0x6f
 3392 04b4 AD000000 		.4byte	0xad
 3393 04b8 02       		.uleb128 0x2
 3394 04b9 91       		.byte	0x91
 3395 04ba 74       		.sleb128 -12
 3396 04bb 13       		.uleb128 0x13
 3397 04bc 08080000 		.4byte	.LASF80
 3398 04c0 01       		.byte	0x1
 3399 04c1 71       		.byte	0x71
 3400 04c2 57000000 		.4byte	0x57
 3401 04c6 02       		.uleb128 0x2
 3402 04c7 91       		.byte	0x91
 3403 04c8 70       		.sleb128 -16
 3404 04c9 14       		.uleb128 0x14
 3405 04ca 26000000 		.4byte	.LBB2
 3406 04ce 4A000000 		.4byte	.LBE2-.LBB2
 3407 04d2 13       		.uleb128 0x13
 3408 04d3 F1070000 		.4byte	.LASF79
 3409 04d7 01       		.byte	0x1
 3410 04d8 74       		.byte	0x74
 3411 04d9 AD000000 		.4byte	0xad
 3412 04dd 02       		.uleb128 0x2
 3413 04de 91       		.byte	0x91
 3414 04df 76       		.sleb128 -10
 3415 04e0 14       		.uleb128 0x14
 3416 04e1 2C000000 		.4byte	.LBB3
 3417 04e5 2A000000 		.4byte	.LBE3-.LBB3
 3418 04e9 13       		.uleb128 0x13
 3419 04ea 0F030000 		.4byte	.LASF81
 3420 04ee 01       		.byte	0x1
 3421 04ef 76       		.byte	0x76
 3422 04f0 AD000000 		.4byte	0xad
 3423 04f4 02       		.uleb128 0x2
 3424 04f5 91       		.byte	0x91
 3425 04f6 75       		.sleb128 -11
 3426 04f7 00       		.byte	0
 3427 04f8 00       		.byte	0
 3428 04f9 00       		.byte	0
 3429 04fa 11       		.uleb128 0x11
 3430 04fb 67060000 		.4byte	.LASF82
 3431 04ff 01       		.byte	0x1
 3432 0500 97       		.byte	0x97
 3433 0501 00000000 		.4byte	.LFB70
 3434 0505 1C000000 		.4byte	.LFE70-.LFB70
 3435 0509 01       		.uleb128 0x1
 3436 050a 9C       		.byte	0x9c
 3437 050b 11       		.uleb128 0x11
 3438 050c 4D060000 		.4byte	.LASF83
 3439 0510 01       		.byte	0x1
 3440 0511 9F       		.byte	0x9f
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 80


 3441 0512 00000000 		.4byte	.LFB71
 3442 0516 28000000 		.4byte	.LFE71-.LFB71
 3443 051a 01       		.uleb128 0x1
 3444 051b 9C       		.byte	0x9c
 3445 051c 15       		.uleb128 0x15
 3446 051d 2F040000 		.4byte	.LASF95
 3447 0521 01       		.byte	0x1
 3448 0522 AA       		.byte	0xaa
 3449 0523 8C000000 		.4byte	0x8c
 3450 0527 00000000 		.4byte	.LFB72
 3451 052b C8000000 		.4byte	.LFE72-.LFB72
 3452 052f 01       		.uleb128 0x1
 3453 0530 9C       		.byte	0x9c
 3454 0531 AE050000 		.4byte	0x5ae
 3455 0535 16       		.uleb128 0x16
 3456 0536 1D050000 		.4byte	.LASF84
 3457 053a 01       		.byte	0x1
 3458 053b AA       		.byte	0xaa
 3459 053c 0C010000 		.4byte	0x10c
 3460 0540 02       		.uleb128 0x2
 3461 0541 91       		.byte	0x91
 3462 0542 5C       		.sleb128 -36
 3463 0543 16       		.uleb128 0x16
 3464 0544 12080000 		.4byte	.LASF85
 3465 0548 01       		.byte	0x1
 3466 0549 AA       		.byte	0xaa
 3467 054a 0C010000 		.4byte	0x10c
 3468 054e 02       		.uleb128 0x2
 3469 054f 91       		.byte	0x91
 3470 0550 58       		.sleb128 -40
 3471 0551 16       		.uleb128 0x16
 3472 0552 46030000 		.4byte	.LASF86
 3473 0556 01       		.byte	0x1
 3474 0557 AA       		.byte	0xaa
 3475 0558 A2000000 		.4byte	0xa2
 3476 055c 02       		.uleb128 0x2
 3477 055d 91       		.byte	0x91
 3478 055e 54       		.sleb128 -44
 3479 055f 13       		.uleb128 0x13
 3480 0560 24040000 		.4byte	.LASF87
 3481 0564 01       		.byte	0x1
 3482 0565 AC       		.byte	0xac
 3483 0566 C5000000 		.4byte	0xc5
 3484 056a 02       		.uleb128 0x2
 3485 056b 91       		.byte	0x91
 3486 056c 74       		.sleb128 -12
 3487 056d 14       		.uleb128 0x14
 3488 056e 16000000 		.4byte	.LBB4
 3489 0572 88000000 		.4byte	.LBE4-.LBB4
 3490 0576 13       		.uleb128 0x13
 3491 0577 26050000 		.4byte	.LASF88
 3492 057b 01       		.byte	0x1
 3493 057c B0       		.byte	0xb0
 3494 057d 0C010000 		.4byte	0x10c
 3495 0581 02       		.uleb128 0x2
 3496 0582 91       		.byte	0x91
 3497 0583 64       		.sleb128 -28
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 81


 3498 0584 13       		.uleb128 0x13
 3499 0585 E2050000 		.4byte	.LASF89
 3500 0589 01       		.byte	0x1
 3501 058a B1       		.byte	0xb1
 3502 058b A2000000 		.4byte	0xa2
 3503 058f 02       		.uleb128 0x2
 3504 0590 91       		.byte	0x91
 3505 0591 6C       		.sleb128 -20
 3506 0592 17       		.uleb128 0x17
 3507 0593 6900     		.ascii	"i\000"
 3508 0595 01       		.byte	0x1
 3509 0596 B2       		.byte	0xb2
 3510 0597 A2000000 		.4byte	0xa2
 3511 059b 02       		.uleb128 0x2
 3512 059c 91       		.byte	0x91
 3513 059d 70       		.sleb128 -16
 3514 059e 13       		.uleb128 0x13
 3515 059f 64020000 		.4byte	.LASF90
 3516 05a3 01       		.byte	0x1
 3517 05a4 B2       		.byte	0xb2
 3518 05a5 A2000000 		.4byte	0xa2
 3519 05a9 02       		.uleb128 0x2
 3520 05aa 91       		.byte	0x91
 3521 05ab 68       		.sleb128 -24
 3522 05ac 00       		.byte	0
 3523 05ad 00       		.byte	0
 3524 05ae 12       		.uleb128 0x12
 3525 05af F2040000 		.4byte	.LASF92
 3526 05b3 01       		.byte	0x1
 3527 05b4 DE       		.byte	0xde
 3528 05b5 F3010000 		.4byte	0x1f3
 3529 05b9 00000000 		.4byte	.LFB73
 3530 05bd FC000000 		.4byte	.LFE73-.LFB73
 3531 05c1 01       		.uleb128 0x1
 3532 05c2 9C       		.byte	0x9c
 3533 05c3 05060000 		.4byte	0x605
 3534 05c7 13       		.uleb128 0x13
 3535 05c8 1E010000 		.4byte	.LASF93
 3536 05cc 01       		.byte	0x1
 3537 05cd E0       		.byte	0xe0
 3538 05ce F3010000 		.4byte	0x1f3
 3539 05d2 03       		.uleb128 0x3
 3540 05d3 91       		.byte	0x91
 3541 05d4 E47C     		.sleb128 -412
 3542 05d6 14       		.uleb128 0x14
 3543 05d7 4A000000 		.4byte	.LBB5
 3544 05db 84000000 		.4byte	.LBE5-.LBB5
 3545 05df 17       		.uleb128 0x17
 3546 05e0 6900     		.ascii	"i\000"
 3547 05e2 01       		.byte	0x1
 3548 05e3 E7       		.byte	0xe7
 3549 05e4 7E000000 		.4byte	0x7e
 3550 05e8 02       		.uleb128 0x2
 3551 05e9 91       		.byte	0x91
 3552 05ea 6C       		.sleb128 -20
 3553 05eb 14       		.uleb128 0x14
 3554 05ec 70000000 		.4byte	.LBB6
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 82


 3555 05f0 46000000 		.4byte	.LBE6-.LBB6
 3556 05f4 13       		.uleb128 0x13
 3557 05f5 3D020000 		.4byte	.LASF94
 3558 05f9 01       		.byte	0x1
 3559 05fa F4       		.byte	0xf4
 3560 05fb 57000000 		.4byte	0x57
 3561 05ff 02       		.uleb128 0x2
 3562 0600 91       		.byte	0x91
 3563 0601 68       		.sleb128 -24
 3564 0602 00       		.byte	0
 3565 0603 00       		.byte	0
 3566 0604 00       		.byte	0
 3567 0605 18       		.uleb128 0x18
 3568 0606 2B030000 		.4byte	.LASF96
 3569 060a 01       		.byte	0x1
 3570 060b 0801     		.2byte	0x108
 3571 060d AD000000 		.4byte	0xad
 3572 0611 00000000 		.4byte	.LFB74
 3573 0615 78000000 		.4byte	.LFE74-.LFB74
 3574 0619 01       		.uleb128 0x1
 3575 061a 9C       		.byte	0x9c
 3576 061b 76060000 		.4byte	0x676
 3577 061f 19       		.uleb128 0x19
 3578 0620 0F040000 		.4byte	.LASF97
 3579 0624 01       		.byte	0x1
 3580 0625 0801     		.2byte	0x108
 3581 0627 0C010000 		.4byte	0x10c
 3582 062b 02       		.uleb128 0x2
 3583 062c 91       		.byte	0x91
 3584 062d 6C       		.sleb128 -20
 3585 062e 19       		.uleb128 0x19
 3586 062f C0030000 		.4byte	.LASF98
 3587 0633 01       		.byte	0x1
 3588 0634 0801     		.2byte	0x108
 3589 0636 12010000 		.4byte	0x112
 3590 063a 02       		.uleb128 0x2
 3591 063b 91       		.byte	0x91
 3592 063c 68       		.sleb128 -24
 3593 063d 19       		.uleb128 0x19
 3594 063e E6030000 		.4byte	.LASF99
 3595 0642 01       		.byte	0x1
 3596 0643 0801     		.2byte	0x108
 3597 0645 12010000 		.4byte	0x112
 3598 0649 02       		.uleb128 0x2
 3599 064a 91       		.byte	0x91
 3600 064b 64       		.sleb128 -28
 3601 064c 19       		.uleb128 0x19
 3602 064d CC030000 		.4byte	.LASF100
 3603 0651 01       		.byte	0x1
 3604 0652 0801     		.2byte	0x108
 3605 0654 0C010000 		.4byte	0x10c
 3606 0658 02       		.uleb128 0x2
 3607 0659 91       		.byte	0x91
 3608 065a 60       		.sleb128 -32
 3609 065b 1A       		.uleb128 0x1a
 3610 065c 6100     		.ascii	"a\000"
 3611 065e 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 83


 3612 065f 0A01     		.2byte	0x10a
 3613 0661 0C010000 		.4byte	0x10c
 3614 0665 02       		.uleb128 0x2
 3615 0666 91       		.byte	0x91
 3616 0667 74       		.sleb128 -12
 3617 0668 1A       		.uleb128 0x1a
 3618 0669 6200     		.ascii	"b\000"
 3619 066b 01       		.byte	0x1
 3620 066c 0A01     		.2byte	0x10a
 3621 066e 0C010000 		.4byte	0x10c
 3622 0672 02       		.uleb128 0x2
 3623 0673 91       		.byte	0x91
 3624 0674 70       		.sleb128 -16
 3625 0675 00       		.byte	0
 3626 0676 1B       		.uleb128 0x1b
 3627 0677 8F060000 		.4byte	.LASF101
 3628 067b 01       		.byte	0x1
 3629 067c 2701     		.2byte	0x127
 3630 067e AD000000 		.4byte	0xad
 3631 0682 00000000 		.4byte	.LFB75
 3632 0686 40010000 		.4byte	.LFE75-.LFB75
 3633 068a 01       		.uleb128 0x1
 3634 068b 9C       		.byte	0x9c
 3635 068c A8060000 		.4byte	0x6a8
 3636 0690 14       		.uleb128 0x14
 3637 0691 2E000000 		.4byte	.LBB7
 3638 0695 32000000 		.4byte	.LBE7-.LBB7
 3639 0699 1A       		.uleb128 0x1a
 3640 069a 6900     		.ascii	"i\000"
 3641 069c 01       		.byte	0x1
 3642 069d 3401     		.2byte	0x134
 3643 069f AD000000 		.4byte	0xad
 3644 06a3 02       		.uleb128 0x2
 3645 06a4 91       		.byte	0x91
 3646 06a5 77       		.sleb128 -9
 3647 06a6 00       		.byte	0
 3648 06a7 00       		.byte	0
 3649 06a8 1B       		.uleb128 0x1b
 3650 06a9 96040000 		.4byte	.LASF102
 3651 06ad 01       		.byte	0x1
 3652 06ae 6F01     		.2byte	0x16f
 3653 06b0 AD000000 		.4byte	0xad
 3654 06b4 00000000 		.4byte	.LFB76
 3655 06b8 B4000000 		.4byte	.LFE76-.LFB76
 3656 06bc 01       		.uleb128 0x1
 3657 06bd 9C       		.byte	0x9c
 3658 06be EB060000 		.4byte	0x6eb
 3659 06c2 1C       		.uleb128 0x1c
 3660 06c3 AB070000 		.4byte	.LASF35
 3661 06c7 01       		.byte	0x1
 3662 06c8 7301     		.2byte	0x173
 3663 06ca AD000000 		.4byte	0xad
 3664 06ce 02       		.uleb128 0x2
 3665 06cf 91       		.byte	0x91
 3666 06d0 77       		.sleb128 -9
 3667 06d1 14       		.uleb128 0x14
 3668 06d2 36000000 		.4byte	.LBB8
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 84


 3669 06d6 44000000 		.4byte	.LBE8-.LBB8
 3670 06da 1C       		.uleb128 0x1c
 3671 06db 14040000 		.4byte	.LASF103
 3672 06df 01       		.byte	0x1
 3673 06e0 7B01     		.2byte	0x17b
 3674 06e2 EB060000 		.4byte	0x6eb
 3675 06e6 02       		.uleb128 0x2
 3676 06e7 91       		.byte	0x91
 3677 06e8 6C       		.sleb128 -20
 3678 06e9 00       		.byte	0
 3679 06ea 00       		.byte	0
 3680 06eb 08       		.uleb128 0x8
 3681 06ec F7000000 		.4byte	0xf7
 3682 06f0 FB060000 		.4byte	0x6fb
 3683 06f4 09       		.uleb128 0x9
 3684 06f5 05010000 		.4byte	0x105
 3685 06f9 09       		.byte	0x9
 3686 06fa 00       		.byte	0
 3687 06fb 1D       		.uleb128 0x1d
 3688 06fc B2010000 		.4byte	.LASF104
 3689 0700 01       		.byte	0x1
 3690 0701 8D01     		.2byte	0x18d
 3691 0703 00000000 		.4byte	.LFB77
 3692 0707 1C000000 		.4byte	.LFE77-.LFB77
 3693 070b 01       		.uleb128 0x1
 3694 070c 9C       		.byte	0x9c
 3695 070d 1E       		.uleb128 0x1e
 3696 070e FB060000 		.4byte	.LASF106
 3697 0712 01       		.byte	0x1
 3698 0713 9D01     		.2byte	0x19d
 3699 0715 AD000000 		.4byte	0xad
 3700 0719 00000000 		.4byte	.LFB78
 3701 071d 28000000 		.4byte	.LFE78-.LFB78
 3702 0721 01       		.uleb128 0x1
 3703 0722 9C       		.byte	0x9c
 3704 0723 1F       		.uleb128 0x1f
 3705 0724 4E030000 		.4byte	.LASF110
 3706 0728 01       		.byte	0x1
 3707 0729 A901     		.2byte	0x1a9
 3708 072b 00000000 		.4byte	.LFB79
 3709 072f 30010000 		.4byte	.LFE79-.LFB79
 3710 0733 01       		.uleb128 0x1
 3711 0734 9C       		.byte	0x9c
 3712 0735 77070000 		.4byte	0x777
 3713 0739 20       		.uleb128 0x20
 3714 073a 00000000 		.4byte	.Ldebug_ranges0+0
 3715 073e 1C       		.uleb128 0x1c
 3716 073f F1070000 		.4byte	.LASF79
 3717 0743 01       		.byte	0x1
 3718 0744 AD01     		.2byte	0x1ad
 3719 0746 AD000000 		.4byte	0xad
 3720 074a 02       		.uleb128 0x2
 3721 074b 91       		.byte	0x91
 3722 074c 77       		.sleb128 -9
 3723 074d 14       		.uleb128 0x14
 3724 074e 0E000000 		.4byte	.LBB10
 3725 0752 E4000000 		.4byte	.LBE10-.LBB10
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 85


 3726 0756 1C       		.uleb128 0x1c
 3727 0757 F7050000 		.4byte	.LASF107
 3728 075b 01       		.byte	0x1
 3729 075c B101     		.2byte	0x1b1
 3730 075e 77070000 		.4byte	0x777
 3731 0762 02       		.uleb128 0x2
 3732 0763 91       		.byte	0x91
 3733 0764 50       		.sleb128 -48
 3734 0765 1C       		.uleb128 0x1c
 3735 0766 5C050000 		.4byte	.LASF108
 3736 076a 01       		.byte	0x1
 3737 076b B601     		.2byte	0x1b6
 3738 076d 0C010000 		.4byte	0x10c
 3739 0771 02       		.uleb128 0x2
 3740 0772 91       		.byte	0x91
 3741 0773 70       		.sleb128 -16
 3742 0774 00       		.byte	0
 3743 0775 00       		.byte	0
 3744 0776 00       		.byte	0
 3745 0777 08       		.uleb128 0x8
 3746 0778 F7000000 		.4byte	0xf7
 3747 077c 87070000 		.4byte	0x787
 3748 0780 09       		.uleb128 0x9
 3749 0781 05010000 		.4byte	0x105
 3750 0785 1D       		.byte	0x1d
 3751 0786 00       		.byte	0
 3752 0787 21       		.uleb128 0x21
 3753 0788 BB020000 		.4byte	.LASF109
 3754 078c 01       		.byte	0x1
 3755 078d D901     		.2byte	0x1d9
 3756 078f 00000000 		.4byte	.LFB80
 3757 0793 24000000 		.4byte	.LFE80-.LFB80
 3758 0797 01       		.uleb128 0x1
 3759 0798 9C       		.byte	0x9c
 3760 0799 1F       		.uleb128 0x1f
 3761 079a 7A070000 		.4byte	.LASF111
 3762 079e 01       		.byte	0x1
 3763 079f E001     		.2byte	0x1e0
 3764 07a1 00000000 		.4byte	.LFB81
 3765 07a5 4C010000 		.4byte	.LFE81-.LFB81
 3766 07a9 01       		.uleb128 0x1
 3767 07aa 9C       		.byte	0x9c
 3768 07ab 0E080000 		.4byte	0x80e
 3769 07af 1C       		.uleb128 0x1c
 3770 07b0 9D070000 		.4byte	.LASF112
 3771 07b4 01       		.byte	0x1
 3772 07b5 E301     		.2byte	0x1e3
 3773 07b7 2B020000 		.4byte	0x22b
 3774 07bb 02       		.uleb128 0x2
 3775 07bc 91       		.byte	0x91
 3776 07bd 5C       		.sleb128 -36
 3777 07be 1C       		.uleb128 0x1c
 3778 07bf 4E050000 		.4byte	.LASF113
 3779 07c3 01       		.byte	0x1
 3780 07c4 E401     		.2byte	0x1e4
 3781 07c6 2B020000 		.4byte	0x22b
 3782 07ca 02       		.uleb128 0x2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 86


 3783 07cb 91       		.byte	0x91
 3784 07cc 48       		.sleb128 -56
 3785 07cd 1C       		.uleb128 0x1c
 3786 07ce AE020000 		.4byte	.LASF114
 3787 07d2 01       		.byte	0x1
 3788 07d3 E501     		.2byte	0x1e5
 3789 07d5 2B020000 		.4byte	0x22b
 3790 07d9 03       		.uleb128 0x3
 3791 07da 91       		.byte	0x91
 3792 07db B47F     		.sleb128 -76
 3793 07dd 1C       		.uleb128 0x1c
 3794 07de 06010000 		.4byte	.LASF115
 3795 07e2 01       		.byte	0x1
 3796 07e3 ED01     		.2byte	0x1ed
 3797 07e5 7E000000 		.4byte	0x7e
 3798 07e9 03       		.uleb128 0x3
 3799 07ea 91       		.byte	0x91
 3800 07eb B07F     		.sleb128 -80
 3801 07ed 1C       		.uleb128 0x1c
 3802 07ee 62040000 		.4byte	.LASF116
 3803 07f2 01       		.byte	0x1
 3804 07f3 ED01     		.2byte	0x1ed
 3805 07f5 7E000000 		.4byte	0x7e
 3806 07f9 03       		.uleb128 0x3
 3807 07fa 91       		.byte	0x91
 3808 07fb AC7F     		.sleb128 -84
 3809 07fd 1C       		.uleb128 0x1c
 3810 07fe 19040000 		.4byte	.LASF117
 3811 0802 01       		.byte	0x1
 3812 0803 ED01     		.2byte	0x1ed
 3813 0805 7E000000 		.4byte	0x7e
 3814 0809 03       		.uleb128 0x3
 3815 080a 91       		.byte	0x91
 3816 080b A87F     		.sleb128 -88
 3817 080d 00       		.byte	0
 3818 080e 1F       		.uleb128 0x1f
 3819 080f 24020000 		.4byte	.LASF118
 3820 0813 01       		.byte	0x1
 3821 0814 0A02     		.2byte	0x20a
 3822 0816 00000000 		.4byte	.LFB82
 3823 081a 38010000 		.4byte	.LFE82-.LFB82
 3824 081e 01       		.uleb128 0x1
 3825 081f 9C       		.byte	0x9c
 3826 0820 3E080000 		.4byte	0x83e
 3827 0824 14       		.uleb128 0x14
 3828 0825 B6000000 		.4byte	.LBB12
 3829 0829 34000000 		.4byte	.LBE12-.LBB12
 3830 082d 1C       		.uleb128 0x1c
 3831 082e B0060000 		.4byte	.LASF119
 3832 0832 01       		.byte	0x1
 3833 0833 3302     		.2byte	0x233
 3834 0835 EB060000 		.4byte	0x6eb
 3835 0839 02       		.uleb128 0x2
 3836 083a 91       		.byte	0x91
 3837 083b 6C       		.sleb128 -20
 3838 083c 00       		.byte	0
 3839 083d 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 87


 3840 083e 1B       		.uleb128 0x1b
 3841 083f 78020000 		.4byte	.LASF120
 3842 0843 01       		.byte	0x1
 3843 0844 4502     		.2byte	0x245
 3844 0846 57000000 		.4byte	0x57
 3845 084a 00000000 		.4byte	.LFB83
 3846 084e 44010000 		.4byte	.LFE83-.LFB83
 3847 0852 01       		.uleb128 0x1
 3848 0853 9C       		.byte	0x9c
 3849 0854 FA080000 		.4byte	0x8fa
 3850 0858 1C       		.uleb128 0x1c
 3851 0859 FA030000 		.4byte	.LASF121
 3852 085d 01       		.byte	0x1
 3853 085e 5002     		.2byte	0x250
 3854 0860 57000000 		.4byte	0x57
 3855 0864 02       		.uleb128 0x2
 3856 0865 91       		.byte	0x91
 3857 0866 74       		.sleb128 -12
 3858 0867 14       		.uleb128 0x14
 3859 0868 30000000 		.4byte	.LBB13
 3860 086c DE000000 		.4byte	.LBE13-.LBB13
 3861 0870 1C       		.uleb128 0x1c
 3862 0871 3D020000 		.4byte	.LASF94
 3863 0875 01       		.byte	0x1
 3864 0876 5502     		.2byte	0x255
 3865 0878 77070000 		.4byte	0x777
 3866 087c 02       		.uleb128 0x2
 3867 087d 91       		.byte	0x91
 3868 087e 54       		.sleb128 -44
 3869 087f 1A       		.uleb128 0x1a
 3870 0880 7400     		.ascii	"t\000"
 3871 0882 01       		.byte	0x1
 3872 0883 5B02     		.2byte	0x25b
 3873 0885 2D010000 		.4byte	0x12d
 3874 0889 03       		.uleb128 0x3
 3875 088a 91       		.byte	0x91
 3876 088b 947F     		.sleb128 -108
 3877 088d 1C       		.uleb128 0x1c
 3878 088e D4010000 		.4byte	.LASF122
 3879 0892 01       		.byte	0x1
 3880 0893 5E02     		.2byte	0x25e
 3881 0895 7E000000 		.4byte	0x7e
 3882 0899 02       		.uleb128 0x2
 3883 089a 91       		.byte	0x91
 3884 089b 50       		.sleb128 -48
 3885 089c 1C       		.uleb128 0x1c
 3886 089d 90040000 		.4byte	.LASF123
 3887 08a1 01       		.byte	0x1
 3888 08a2 5E02     		.2byte	0x25e
 3889 08a4 7E000000 		.4byte	0x7e
 3890 08a8 02       		.uleb128 0x2
 3891 08a9 91       		.byte	0x91
 3892 08aa 4C       		.sleb128 -52
 3893 08ab 1A       		.uleb128 0x1a
 3894 08ac 64617900 		.ascii	"day\000"
 3895 08b0 01       		.byte	0x1
 3896 08b1 5E02     		.2byte	0x25e
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 88


 3897 08b3 7E000000 		.4byte	0x7e
 3898 08b7 02       		.uleb128 0x2
 3899 08b8 91       		.byte	0x91
 3900 08b9 48       		.sleb128 -56
 3901 08ba 1C       		.uleb128 0x1c
 3902 08bb 18050000 		.4byte	.LASF124
 3903 08bf 01       		.byte	0x1
 3904 08c0 5E02     		.2byte	0x25e
 3905 08c2 7E000000 		.4byte	0x7e
 3906 08c6 02       		.uleb128 0x2
 3907 08c7 91       		.byte	0x91
 3908 08c8 44       		.sleb128 -60
 3909 08c9 1C       		.uleb128 0x1c
 3910 08ca 63070000 		.4byte	.LASF125
 3911 08ce 01       		.byte	0x1
 3912 08cf 5E02     		.2byte	0x25e
 3913 08d1 7E000000 		.4byte	0x7e
 3914 08d5 02       		.uleb128 0x2
 3915 08d6 91       		.byte	0x91
 3916 08d7 40       		.sleb128 -64
 3917 08d8 1C       		.uleb128 0x1c
 3918 08d9 CD010000 		.4byte	.LASF126
 3919 08dd 01       		.byte	0x1
 3920 08de 5E02     		.2byte	0x25e
 3921 08e0 7E000000 		.4byte	0x7e
 3922 08e4 03       		.uleb128 0x3
 3923 08e5 91       		.byte	0x91
 3924 08e6 BC7F     		.sleb128 -68
 3925 08e8 1C       		.uleb128 0x1c
 3926 08e9 00000000 		.4byte	.LASF127
 3927 08ed 01       		.byte	0x1
 3928 08ee 5E02     		.2byte	0x25e
 3929 08f0 7E000000 		.4byte	0x7e
 3930 08f4 03       		.uleb128 0x3
 3931 08f5 91       		.byte	0x91
 3932 08f6 B87F     		.sleb128 -72
 3933 08f8 00       		.byte	0
 3934 08f9 00       		.byte	0
 3935 08fa 22       		.uleb128 0x22
 3936 08fb F8010000 		.4byte	.LASF128
 3937 08ff 01       		.byte	0x1
 3938 0900 7E02     		.2byte	0x27e
 3939 0902 AD000000 		.4byte	0xad
 3940 0906 00000000 		.4byte	.LFB84
 3941 090a 14000000 		.4byte	.LFE84-.LFB84
 3942 090e 01       		.uleb128 0x1
 3943 090f 9C       		.byte	0x9c
 3944 0910 1D       		.uleb128 0x1d
 3945 0911 A2020000 		.4byte	.LASF129
 3946 0915 01       		.byte	0x1
 3947 0916 8302     		.2byte	0x283
 3948 0918 00000000 		.4byte	.LFB85
 3949 091c 1A000000 		.4byte	.LFE85-.LFB85
 3950 0920 01       		.uleb128 0x1
 3951 0921 9C       		.byte	0x9c
 3952 0922 1D       		.uleb128 0x1d
 3953 0923 E2000000 		.4byte	.LASF130
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 89


 3954 0927 01       		.byte	0x1
 3955 0928 9002     		.2byte	0x290
 3956 092a 00000000 		.4byte	.LFB86
 3957 092e 2A000000 		.4byte	.LFE86-.LFB86
 3958 0932 01       		.uleb128 0x1
 3959 0933 9C       		.byte	0x9c
 3960 0934 1B       		.uleb128 0x1b
 3961 0935 01060000 		.4byte	.LASF131
 3962 0939 01       		.byte	0x1
 3963 093a A302     		.2byte	0x2a3
 3964 093c FF020000 		.4byte	0x2ff
 3965 0940 00000000 		.4byte	.LFB87
 3966 0944 7C020000 		.4byte	.LFE87-.LFB87
 3967 0948 01       		.uleb128 0x1
 3968 0949 9C       		.byte	0x9c
 3969 094a DD090000 		.4byte	0x9dd
 3970 094e 1A       		.uleb128 0x1a
 3971 094f 67707300 		.ascii	"gps\000"
 3972 0953 01       		.byte	0x1
 3973 0954 A402     		.2byte	0x2a4
 3974 0956 FF020000 		.4byte	0x2ff
 3975 095a 02       		.uleb128 0x2
 3976 095b 91       		.byte	0x91
 3977 095c 4C       		.sleb128 -52
 3978 095d 1C       		.uleb128 0x1c
 3979 095e 29080000 		.4byte	.LASF132
 3980 0962 01       		.byte	0x1
 3981 0963 B002     		.2byte	0x2b0
 3982 0965 57000000 		.4byte	0x57
 3983 0969 02       		.uleb128 0x2
 3984 096a 91       		.byte	0x91
 3985 096b 68       		.sleb128 -24
 3986 096c 1C       		.uleb128 0x1c
 3987 096d 2B070000 		.4byte	.LASF133
 3988 0971 01       		.byte	0x1
 3989 0972 D702     		.2byte	0x2d7
 3990 0974 AD000000 		.4byte	0xad
 3991 0978 02       		.uleb128 0x2
 3992 0979 91       		.byte	0x91
 3993 097a 67       		.sleb128 -25
 3994 097b 1A       		.uleb128 0x1a
 3995 097c 6C617400 		.ascii	"lat\000"
 3996 0980 01       		.byte	0x1
 3997 0981 E302     		.2byte	0x2e3
 3998 0983 E9000000 		.4byte	0xe9
 3999 0987 02       		.uleb128 0x2
 4000 0988 91       		.byte	0x91
 4001 0989 48       		.sleb128 -56
 4002 098a 1A       		.uleb128 0x1a
 4003 098b 6C6F6E00 		.ascii	"lon\000"
 4004 098f 01       		.byte	0x1
 4005 0990 E402     		.2byte	0x2e4
 4006 0992 E9000000 		.4byte	0xe9
 4007 0996 02       		.uleb128 0x2
 4008 0997 91       		.byte	0x91
 4009 0998 44       		.sleb128 -60
 4010 0999 1A       		.uleb128 0x1a
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 90


 4011 099a 616C7400 		.ascii	"alt\000"
 4012 099e 01       		.byte	0x1
 4013 099f E502     		.2byte	0x2e5
 4014 09a1 E9000000 		.4byte	0xe9
 4015 09a5 02       		.uleb128 0x2
 4016 09a6 91       		.byte	0x91
 4017 09a7 40       		.sleb128 -64
 4018 09a8 1A       		.uleb128 0x1a
 4019 09a9 733100   		.ascii	"s1\000"
 4020 09ac 01       		.byte	0x1
 4021 09ad E902     		.2byte	0x2e9
 4022 09af 0C010000 		.4byte	0x10c
 4023 09b3 02       		.uleb128 0x2
 4024 09b4 91       		.byte	0x91
 4025 09b5 60       		.sleb128 -32
 4026 09b6 1C       		.uleb128 0x1c
 4027 09b7 FD040000 		.4byte	.LASF134
 4028 09bb 01       		.byte	0x1
 4029 09bc EC02     		.2byte	0x2ec
 4030 09be 7E000000 		.4byte	0x7e
 4031 09c2 02       		.uleb128 0x2
 4032 09c3 91       		.byte	0x91
 4033 09c4 5C       		.sleb128 -36
 4034 09c5 14       		.uleb128 0x14
 4035 09c6 B4000000 		.4byte	.LBB14
 4036 09ca 38000000 		.4byte	.LBE14-.LBB14
 4037 09ce 1A       		.uleb128 0x1a
 4038 09cf 6900     		.ascii	"i\000"
 4039 09d1 01       		.byte	0x1
 4040 09d2 D802     		.2byte	0x2d8
 4041 09d4 B9000000 		.4byte	0xb9
 4042 09d8 02       		.uleb128 0x2
 4043 09d9 91       		.byte	0x91
 4044 09da 6E       		.sleb128 -18
 4045 09db 00       		.byte	0
 4046 09dc 00       		.byte	0
 4047 09dd 23       		.uleb128 0x23
 4048 09de 30010000 		.4byte	.LASF135
 4049 09e2 0A       		.byte	0xa
 4050 09e3 1207     		.2byte	0x712
 4051 09e5 E9090000 		.4byte	0x9e9
 4052 09e9 0F       		.uleb128 0xf
 4053 09ea 97000000 		.4byte	0x97
 4054 09ee 24       		.uleb128 0x24
 4055 09ef 12010000 		.4byte	.LASF136
 4056 09f3 07       		.byte	0x7
 4057 09f4 16       		.byte	0x16
 4058 09f5 AD000000 		.4byte	0xad
 4059 09f9 05       		.uleb128 0x5
 4060 09fa 03       		.byte	0x3
 4061 09fb 00000000 		.4byte	modem_state
 4062 09ff 24       		.uleb128 0x24
 4063 0a00 14070000 		.4byte	.LASF137
 4064 0a04 07       		.byte	0x7
 4065 0a05 55       		.byte	0x55
 4066 0a06 DD000000 		.4byte	0xdd
 4067 0a0a 05       		.uleb128 0x5
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 91


 4068 0a0b 03       		.byte	0x3
 4069 0a0c 00000000 		.4byte	modem_start_time_stamp
 4070 0a10 24       		.uleb128 0x24
 4071 0a11 88030000 		.4byte	.LASF68
 4072 0a15 07       		.byte	0x7
 4073 0a16 56       		.byte	0x56
 4074 0a17 3B020000 		.4byte	0x23b
 4075 0a1b 05       		.uleb128 0x5
 4076 0a1c 03       		.byte	0x3
 4077 0a1d 00000000 		.4byte	modem_info
 4078 0a21 24       		.uleb128 0x24
 4079 0a22 3D010000 		.4byte	.LASF138
 4080 0a26 07       		.byte	0x7
 4081 0a27 57       		.byte	0x57
 4082 0a28 AF020000 		.4byte	0x2af
 4083 0a2c 05       		.uleb128 0x5
 4084 0a2d 03       		.byte	0x3
 4085 0a2e 00000000 		.4byte	modem_stats
 4086 0a32 24       		.uleb128 0x24
 4087 0a33 03050000 		.4byte	.LASF139
 4088 0a37 07       		.byte	0x7
 4089 0a38 58       		.byte	0x58
 4090 0a39 37030000 		.4byte	0x337
 4091 0a3d 05       		.uleb128 0x5
 4092 0a3e 03       		.byte	0x3
 4093 0a3f 00000000 		.4byte	updatable_parameters
 4094 0a43 24       		.uleb128 0x24
 4095 0a44 6E040000 		.4byte	.LASF140
 4096 0a48 08       		.byte	0x8
 4097 0a49 1D       		.byte	0x1d
 4098 0a4a B9000000 		.4byte	0xb9
 4099 0a4e 05       		.uleb128 0x5
 4100 0a4f 03       		.byte	0x3
 4101 0a50 00000000 		.4byte	dataPointsInStack
 4102 0a54 24       		.uleb128 0x24
 4103 0a55 B2070000 		.4byte	.LASF141
 4104 0a59 08       		.byte	0x8
 4105 0a5a 1E       		.byte	0x1e
 4106 0a5b B9000000 		.4byte	0xb9
 4107 0a5f 05       		.uleb128 0x5
 4108 0a60 03       		.byte	0x3
 4109 0a61 00000000 		.4byte	dataPointsInStackDesired
 4110 0a65 08       		.uleb128 0x8
 4111 0a66 6F030000 		.4byte	0x36f
 4112 0a6a 750A0000 		.4byte	0xa75
 4113 0a6e 09       		.uleb128 0x9
 4114 0a6f 05010000 		.4byte	0x105
 4115 0a73 95       		.byte	0x95
 4116 0a74 00       		.byte	0
 4117 0a75 24       		.uleb128 0x24
 4118 0a76 72030000 		.4byte	.LASF142
 4119 0a7a 08       		.byte	0x8
 4120 0a7b 1F       		.byte	0x1f
 4121 0a7c 650A0000 		.4byte	0xa65
 4122 0a80 05       		.uleb128 0x5
 4123 0a81 03       		.byte	0x3
 4124 0a82 00000000 		.4byte	data
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 92


 4125 0a86 08       		.uleb128 0x8
 4126 0a87 F7000000 		.4byte	0xf7
 4127 0a8b 970A0000 		.4byte	0xa97
 4128 0a8f 25       		.uleb128 0x25
 4129 0a90 05010000 		.4byte	0x105
 4130 0a94 0F27     		.2byte	0x270f
 4131 0a96 00       		.byte	0
 4132 0a97 24       		.uleb128 0x24
 4133 0a98 33080000 		.4byte	.LASF143
 4134 0a9c 09       		.byte	0x9
 4135 0a9d 15       		.byte	0x15
 4136 0a9e 860A0000 		.4byte	0xa86
 4137 0aa2 05       		.uleb128 0x5
 4138 0aa3 03       		.byte	0x3
 4139 0aa4 00000000 		.4byte	http_request
 4140 0aa8 24       		.uleb128 0x24
 4141 0aa9 A8010000 		.4byte	.LASF144
 4142 0aad 09       		.byte	0x9
 4143 0aae 16       		.byte	0x16
 4144 0aaf 860A0000 		.4byte	0xa86
 4145 0ab3 05       		.uleb128 0x5
 4146 0ab4 03       		.byte	0x3
 4147 0ab5 00000000 		.4byte	http_body
 4148 0ab9 08       		.uleb128 0x8
 4149 0aba F7000000 		.4byte	0xf7
 4150 0abe C90A0000 		.4byte	0xac9
 4151 0ac2 09       		.uleb128 0x9
 4152 0ac3 05010000 		.4byte	0x105
 4153 0ac7 C7       		.byte	0xc7
 4154 0ac8 00       		.byte	0
 4155 0ac9 24       		.uleb128 0x24
 4156 0aca BE060000 		.4byte	.LASF145
 4157 0ace 09       		.byte	0x9
 4158 0acf 17       		.byte	0x17
 4159 0ad0 B90A0000 		.4byte	0xab9
 4160 0ad4 05       		.uleb128 0x5
 4161 0ad5 03       		.byte	0x3
 4162 0ad6 00000000 		.4byte	http_route
 4163 0ada 24       		.uleb128 0x24
 4164 0adb 22060000 		.4byte	.LASF146
 4165 0adf 09       		.byte	0x9
 4166 0ae0 3E       		.byte	0x3e
 4167 0ae1 EA030000 		.4byte	0x3ea
 4168 0ae5 05       		.uleb128 0x5
 4169 0ae6 03       		.byte	0x3
 4170 0ae7 00000000 		.4byte	system_info
 4171 0aeb 24       		.uleb128 0x24
 4172 0aec D2050000 		.4byte	.LASF147
 4173 0af0 09       		.byte	0x9
 4174 0af1 50       		.byte	0x50
 4175 0af2 26040000 		.4byte	0x426
 4176 0af6 05       		.uleb128 0x5
 4177 0af7 03       		.byte	0x3
 4178 0af8 00000000 		.4byte	system_settings
 4179 0afc 24       		.uleb128 0x24
 4180 0afd 23010000 		.4byte	.LASF148
 4181 0b01 09       		.byte	0x9
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 93


 4182 0b02 6C       		.byte	0x6c
 4183 0b03 B3030000 		.4byte	0x3b3
 4184 0b07 05       		.uleb128 0x5
 4185 0b08 03       		.byte	0x3
 4186 0b09 00000000 		.4byte	alarmMeasure
 4187 0b0d 24       		.uleb128 0x24
 4188 0b0e 77010000 		.4byte	.LASF149
 4189 0b12 09       		.byte	0x9
 4190 0b13 6D       		.byte	0x6d
 4191 0b14 AD000000 		.4byte	0xad
 4192 0b18 05       		.uleb128 0x5
 4193 0b19 03       		.byte	0x3
 4194 0b1a 00000000 		.4byte	timeToMeasure
 4195 0b1e 24       		.uleb128 0x24
 4196 0b1f E3020000 		.4byte	.LASF150
 4197 0b23 09       		.byte	0x9
 4198 0b24 6E       		.byte	0x6e
 4199 0b25 B3030000 		.4byte	0x3b3
 4200 0b29 05       		.uleb128 0x5
 4201 0b2a 03       		.byte	0x3
 4202 0b2b 00000000 		.4byte	alarmSync
 4203 0b2f 24       		.uleb128 0x24
 4204 0b30 9D010000 		.4byte	.LASF151
 4205 0b34 09       		.byte	0x9
 4206 0b35 6F       		.byte	0x6f
 4207 0b36 AD000000 		.4byte	0xad
 4208 0b3a 05       		.uleb128 0x5
 4209 0b3b 03       		.byte	0x3
 4210 0b3c 00000000 		.4byte	timeToSync
 4211 0b40 24       		.uleb128 0x24
 4212 0b41 DB040000 		.4byte	.LASF152
 4213 0b45 09       		.byte	0x9
 4214 0b46 70       		.byte	0x70
 4215 0b47 AD000000 		.4byte	0xad
 4216 0b4b 05       		.uleb128 0x5
 4217 0b4c 03       		.byte	0x3
 4218 0b4d 00000000 		.4byte	timeToSycnRemoteParams
 4219 0b51 24       		.uleb128 0x24
 4220 0b52 3A030000 		.4byte	.LASF153
 4221 0b56 09       		.byte	0x9
 4222 0b57 71       		.byte	0x71
 4223 0b58 AD000000 		.4byte	0xad
 4224 0b5c 05       		.uleb128 0x5
 4225 0b5d 03       		.byte	0x3
 4226 0b5e 00000000 		.4byte	try_counter
 4227 0b62 08       		.uleb128 0x8
 4228 0b63 F7000000 		.4byte	0xf7
 4229 0b67 730B0000 		.4byte	0xb73
 4230 0b6b 25       		.uleb128 0x25
 4231 0b6c 05010000 		.4byte	0x105
 4232 0b70 FF03     		.2byte	0x3ff
 4233 0b72 00       		.byte	0
 4234 0b73 24       		.uleb128 0x24
 4235 0b74 B3040000 		.4byte	.LASF154
 4236 0b78 01       		.byte	0x1
 4237 0b79 09       		.byte	0x9
 4238 0b7a 620B0000 		.4byte	0xb62
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 94


 4239 0b7e 05       		.uleb128 0x5
 4240 0b7f 03       		.byte	0x3
 4241 0b80 00000000 		.4byte	uart_received_string
 4242 0b84 24       		.uleb128 0x24
 4243 0b85 DC060000 		.4byte	.LASF155
 4244 0b89 01       		.byte	0x1
 4245 0b8a 0A       		.byte	0xa
 4246 0b8b D1000000 		.4byte	0xd1
 4247 0b8f 05       		.uleb128 0x5
 4248 0b90 03       		.byte	0x3
 4249 0b91 00000000 		.4byte	uart_string_index
 4250 0b95 00       		.byte	0
 4251              		.section	.debug_abbrev,"",%progbits
 4252              	.Ldebug_abbrev0:
 4253 0000 01       		.uleb128 0x1
 4254 0001 11       		.uleb128 0x11
 4255 0002 01       		.byte	0x1
 4256 0003 25       		.uleb128 0x25
 4257 0004 0E       		.uleb128 0xe
 4258 0005 13       		.uleb128 0x13
 4259 0006 0B       		.uleb128 0xb
 4260 0007 03       		.uleb128 0x3
 4261 0008 0E       		.uleb128 0xe
 4262 0009 1B       		.uleb128 0x1b
 4263 000a 0E       		.uleb128 0xe
 4264 000b 55       		.uleb128 0x55
 4265 000c 17       		.uleb128 0x17
 4266 000d 11       		.uleb128 0x11
 4267 000e 01       		.uleb128 0x1
 4268 000f 10       		.uleb128 0x10
 4269 0010 17       		.uleb128 0x17
 4270 0011 00       		.byte	0
 4271 0012 00       		.byte	0
 4272 0013 02       		.uleb128 0x2
 4273 0014 24       		.uleb128 0x24
 4274 0015 00       		.byte	0
 4275 0016 0B       		.uleb128 0xb
 4276 0017 0B       		.uleb128 0xb
 4277 0018 3E       		.uleb128 0x3e
 4278 0019 0B       		.uleb128 0xb
 4279 001a 03       		.uleb128 0x3
 4280 001b 0E       		.uleb128 0xe
 4281 001c 00       		.byte	0
 4282 001d 00       		.byte	0
 4283 001e 03       		.uleb128 0x3
 4284 001f 16       		.uleb128 0x16
 4285 0020 00       		.byte	0
 4286 0021 03       		.uleb128 0x3
 4287 0022 0E       		.uleb128 0xe
 4288 0023 3A       		.uleb128 0x3a
 4289 0024 0B       		.uleb128 0xb
 4290 0025 3B       		.uleb128 0x3b
 4291 0026 0B       		.uleb128 0xb
 4292 0027 49       		.uleb128 0x49
 4293 0028 13       		.uleb128 0x13
 4294 0029 00       		.byte	0
 4295 002a 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 95


 4296 002b 04       		.uleb128 0x4
 4297 002c 24       		.uleb128 0x24
 4298 002d 00       		.byte	0
 4299 002e 0B       		.uleb128 0xb
 4300 002f 0B       		.uleb128 0xb
 4301 0030 3E       		.uleb128 0x3e
 4302 0031 0B       		.uleb128 0xb
 4303 0032 03       		.uleb128 0x3
 4304 0033 08       		.uleb128 0x8
 4305 0034 00       		.byte	0
 4306 0035 00       		.byte	0
 4307 0036 05       		.uleb128 0x5
 4308 0037 16       		.uleb128 0x16
 4309 0038 00       		.byte	0
 4310 0039 03       		.uleb128 0x3
 4311 003a 0E       		.uleb128 0xe
 4312 003b 3A       		.uleb128 0x3a
 4313 003c 0B       		.uleb128 0xb
 4314 003d 3B       		.uleb128 0x3b
 4315 003e 05       		.uleb128 0x5
 4316 003f 49       		.uleb128 0x49
 4317 0040 13       		.uleb128 0x13
 4318 0041 00       		.byte	0
 4319 0042 00       		.byte	0
 4320 0043 06       		.uleb128 0x6
 4321 0044 0F       		.uleb128 0xf
 4322 0045 00       		.byte	0
 4323 0046 0B       		.uleb128 0xb
 4324 0047 0B       		.uleb128 0xb
 4325 0048 49       		.uleb128 0x49
 4326 0049 13       		.uleb128 0x13
 4327 004a 00       		.byte	0
 4328 004b 00       		.byte	0
 4329 004c 07       		.uleb128 0x7
 4330 004d 26       		.uleb128 0x26
 4331 004e 00       		.byte	0
 4332 004f 49       		.uleb128 0x49
 4333 0050 13       		.uleb128 0x13
 4334 0051 00       		.byte	0
 4335 0052 00       		.byte	0
 4336 0053 08       		.uleb128 0x8
 4337 0054 01       		.uleb128 0x1
 4338 0055 01       		.byte	0x1
 4339 0056 49       		.uleb128 0x49
 4340 0057 13       		.uleb128 0x13
 4341 0058 01       		.uleb128 0x1
 4342 0059 13       		.uleb128 0x13
 4343 005a 00       		.byte	0
 4344 005b 00       		.byte	0
 4345 005c 09       		.uleb128 0x9
 4346 005d 21       		.uleb128 0x21
 4347 005e 00       		.byte	0
 4348 005f 49       		.uleb128 0x49
 4349 0060 13       		.uleb128 0x13
 4350 0061 2F       		.uleb128 0x2f
 4351 0062 0B       		.uleb128 0xb
 4352 0063 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 96


 4353 0064 00       		.byte	0
 4354 0065 0A       		.uleb128 0xa
 4355 0066 13       		.uleb128 0x13
 4356 0067 01       		.byte	0x1
 4357 0068 03       		.uleb128 0x3
 4358 0069 08       		.uleb128 0x8
 4359 006a 0B       		.uleb128 0xb
 4360 006b 0B       		.uleb128 0xb
 4361 006c 3A       		.uleb128 0x3a
 4362 006d 0B       		.uleb128 0xb
 4363 006e 3B       		.uleb128 0x3b
 4364 006f 0B       		.uleb128 0xb
 4365 0070 01       		.uleb128 0x1
 4366 0071 13       		.uleb128 0x13
 4367 0072 00       		.byte	0
 4368 0073 00       		.byte	0
 4369 0074 0B       		.uleb128 0xb
 4370 0075 0D       		.uleb128 0xd
 4371 0076 00       		.byte	0
 4372 0077 03       		.uleb128 0x3
 4373 0078 0E       		.uleb128 0xe
 4374 0079 3A       		.uleb128 0x3a
 4375 007a 0B       		.uleb128 0xb
 4376 007b 3B       		.uleb128 0x3b
 4377 007c 0B       		.uleb128 0xb
 4378 007d 49       		.uleb128 0x49
 4379 007e 13       		.uleb128 0x13
 4380 007f 38       		.uleb128 0x38
 4381 0080 0B       		.uleb128 0xb
 4382 0081 00       		.byte	0
 4383 0082 00       		.byte	0
 4384 0083 0C       		.uleb128 0xc
 4385 0084 13       		.uleb128 0x13
 4386 0085 01       		.byte	0x1
 4387 0086 0B       		.uleb128 0xb
 4388 0087 05       		.uleb128 0x5
 4389 0088 3A       		.uleb128 0x3a
 4390 0089 0B       		.uleb128 0xb
 4391 008a 3B       		.uleb128 0x3b
 4392 008b 0B       		.uleb128 0xb
 4393 008c 01       		.uleb128 0x1
 4394 008d 13       		.uleb128 0x13
 4395 008e 00       		.byte	0
 4396 008f 00       		.byte	0
 4397 0090 0D       		.uleb128 0xd
 4398 0091 13       		.uleb128 0x13
 4399 0092 01       		.byte	0x1
 4400 0093 0B       		.uleb128 0xb
 4401 0094 0B       		.uleb128 0xb
 4402 0095 3A       		.uleb128 0x3a
 4403 0096 0B       		.uleb128 0xb
 4404 0097 3B       		.uleb128 0x3b
 4405 0098 0B       		.uleb128 0xb
 4406 0099 01       		.uleb128 0x1
 4407 009a 13       		.uleb128 0x13
 4408 009b 00       		.byte	0
 4409 009c 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 97


 4410 009d 0E       		.uleb128 0xe
 4411 009e 0D       		.uleb128 0xd
 4412 009f 00       		.byte	0
 4413 00a0 03       		.uleb128 0x3
 4414 00a1 08       		.uleb128 0x8
 4415 00a2 3A       		.uleb128 0x3a
 4416 00a3 0B       		.uleb128 0xb
 4417 00a4 3B       		.uleb128 0x3b
 4418 00a5 0B       		.uleb128 0xb
 4419 00a6 49       		.uleb128 0x49
 4420 00a7 13       		.uleb128 0x13
 4421 00a8 38       		.uleb128 0x38
 4422 00a9 0B       		.uleb128 0xb
 4423 00aa 00       		.byte	0
 4424 00ab 00       		.byte	0
 4425 00ac 0F       		.uleb128 0xf
 4426 00ad 35       		.uleb128 0x35
 4427 00ae 00       		.byte	0
 4428 00af 49       		.uleb128 0x49
 4429 00b0 13       		.uleb128 0x13
 4430 00b1 00       		.byte	0
 4431 00b2 00       		.byte	0
 4432 00b3 10       		.uleb128 0x10
 4433 00b4 2E       		.uleb128 0x2e
 4434 00b5 00       		.byte	0
 4435 00b6 3F       		.uleb128 0x3f
 4436 00b7 19       		.uleb128 0x19
 4437 00b8 03       		.uleb128 0x3
 4438 00b9 0E       		.uleb128 0xe
 4439 00ba 3A       		.uleb128 0x3a
 4440 00bb 0B       		.uleb128 0xb
 4441 00bc 3B       		.uleb128 0x3b
 4442 00bd 0B       		.uleb128 0xb
 4443 00be 27       		.uleb128 0x27
 4444 00bf 19       		.uleb128 0x19
 4445 00c0 11       		.uleb128 0x11
 4446 00c1 01       		.uleb128 0x1
 4447 00c2 12       		.uleb128 0x12
 4448 00c3 06       		.uleb128 0x6
 4449 00c4 40       		.uleb128 0x40
 4450 00c5 18       		.uleb128 0x18
 4451 00c6 9642     		.uleb128 0x2116
 4452 00c8 19       		.uleb128 0x19
 4453 00c9 00       		.byte	0
 4454 00ca 00       		.byte	0
 4455 00cb 11       		.uleb128 0x11
 4456 00cc 2E       		.uleb128 0x2e
 4457 00cd 00       		.byte	0
 4458 00ce 3F       		.uleb128 0x3f
 4459 00cf 19       		.uleb128 0x19
 4460 00d0 03       		.uleb128 0x3
 4461 00d1 0E       		.uleb128 0xe
 4462 00d2 3A       		.uleb128 0x3a
 4463 00d3 0B       		.uleb128 0xb
 4464 00d4 3B       		.uleb128 0x3b
 4465 00d5 0B       		.uleb128 0xb
 4466 00d6 11       		.uleb128 0x11
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 98


 4467 00d7 01       		.uleb128 0x1
 4468 00d8 12       		.uleb128 0x12
 4469 00d9 06       		.uleb128 0x6
 4470 00da 40       		.uleb128 0x40
 4471 00db 18       		.uleb128 0x18
 4472 00dc 9642     		.uleb128 0x2116
 4473 00de 19       		.uleb128 0x19
 4474 00df 00       		.byte	0
 4475 00e0 00       		.byte	0
 4476 00e1 12       		.uleb128 0x12
 4477 00e2 2E       		.uleb128 0x2e
 4478 00e3 01       		.byte	0x1
 4479 00e4 3F       		.uleb128 0x3f
 4480 00e5 19       		.uleb128 0x19
 4481 00e6 03       		.uleb128 0x3
 4482 00e7 0E       		.uleb128 0xe
 4483 00e8 3A       		.uleb128 0x3a
 4484 00e9 0B       		.uleb128 0xb
 4485 00ea 3B       		.uleb128 0x3b
 4486 00eb 0B       		.uleb128 0xb
 4487 00ec 49       		.uleb128 0x49
 4488 00ed 13       		.uleb128 0x13
 4489 00ee 11       		.uleb128 0x11
 4490 00ef 01       		.uleb128 0x1
 4491 00f0 12       		.uleb128 0x12
 4492 00f1 06       		.uleb128 0x6
 4493 00f2 40       		.uleb128 0x40
 4494 00f3 18       		.uleb128 0x18
 4495 00f4 9642     		.uleb128 0x2116
 4496 00f6 19       		.uleb128 0x19
 4497 00f7 01       		.uleb128 0x1
 4498 00f8 13       		.uleb128 0x13
 4499 00f9 00       		.byte	0
 4500 00fa 00       		.byte	0
 4501 00fb 13       		.uleb128 0x13
 4502 00fc 34       		.uleb128 0x34
 4503 00fd 00       		.byte	0
 4504 00fe 03       		.uleb128 0x3
 4505 00ff 0E       		.uleb128 0xe
 4506 0100 3A       		.uleb128 0x3a
 4507 0101 0B       		.uleb128 0xb
 4508 0102 3B       		.uleb128 0x3b
 4509 0103 0B       		.uleb128 0xb
 4510 0104 49       		.uleb128 0x49
 4511 0105 13       		.uleb128 0x13
 4512 0106 02       		.uleb128 0x2
 4513 0107 18       		.uleb128 0x18
 4514 0108 00       		.byte	0
 4515 0109 00       		.byte	0
 4516 010a 14       		.uleb128 0x14
 4517 010b 0B       		.uleb128 0xb
 4518 010c 01       		.byte	0x1
 4519 010d 11       		.uleb128 0x11
 4520 010e 01       		.uleb128 0x1
 4521 010f 12       		.uleb128 0x12
 4522 0110 06       		.uleb128 0x6
 4523 0111 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 99


 4524 0112 00       		.byte	0
 4525 0113 15       		.uleb128 0x15
 4526 0114 2E       		.uleb128 0x2e
 4527 0115 01       		.byte	0x1
 4528 0116 3F       		.uleb128 0x3f
 4529 0117 19       		.uleb128 0x19
 4530 0118 03       		.uleb128 0x3
 4531 0119 0E       		.uleb128 0xe
 4532 011a 3A       		.uleb128 0x3a
 4533 011b 0B       		.uleb128 0xb
 4534 011c 3B       		.uleb128 0x3b
 4535 011d 0B       		.uleb128 0xb
 4536 011e 27       		.uleb128 0x27
 4537 011f 19       		.uleb128 0x19
 4538 0120 49       		.uleb128 0x49
 4539 0121 13       		.uleb128 0x13
 4540 0122 11       		.uleb128 0x11
 4541 0123 01       		.uleb128 0x1
 4542 0124 12       		.uleb128 0x12
 4543 0125 06       		.uleb128 0x6
 4544 0126 40       		.uleb128 0x40
 4545 0127 18       		.uleb128 0x18
 4546 0128 9642     		.uleb128 0x2116
 4547 012a 19       		.uleb128 0x19
 4548 012b 01       		.uleb128 0x1
 4549 012c 13       		.uleb128 0x13
 4550 012d 00       		.byte	0
 4551 012e 00       		.byte	0
 4552 012f 16       		.uleb128 0x16
 4553 0130 05       		.uleb128 0x5
 4554 0131 00       		.byte	0
 4555 0132 03       		.uleb128 0x3
 4556 0133 0E       		.uleb128 0xe
 4557 0134 3A       		.uleb128 0x3a
 4558 0135 0B       		.uleb128 0xb
 4559 0136 3B       		.uleb128 0x3b
 4560 0137 0B       		.uleb128 0xb
 4561 0138 49       		.uleb128 0x49
 4562 0139 13       		.uleb128 0x13
 4563 013a 02       		.uleb128 0x2
 4564 013b 18       		.uleb128 0x18
 4565 013c 00       		.byte	0
 4566 013d 00       		.byte	0
 4567 013e 17       		.uleb128 0x17
 4568 013f 34       		.uleb128 0x34
 4569 0140 00       		.byte	0
 4570 0141 03       		.uleb128 0x3
 4571 0142 08       		.uleb128 0x8
 4572 0143 3A       		.uleb128 0x3a
 4573 0144 0B       		.uleb128 0xb
 4574 0145 3B       		.uleb128 0x3b
 4575 0146 0B       		.uleb128 0xb
 4576 0147 49       		.uleb128 0x49
 4577 0148 13       		.uleb128 0x13
 4578 0149 02       		.uleb128 0x2
 4579 014a 18       		.uleb128 0x18
 4580 014b 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 100


 4581 014c 00       		.byte	0
 4582 014d 18       		.uleb128 0x18
 4583 014e 2E       		.uleb128 0x2e
 4584 014f 01       		.byte	0x1
 4585 0150 3F       		.uleb128 0x3f
 4586 0151 19       		.uleb128 0x19
 4587 0152 03       		.uleb128 0x3
 4588 0153 0E       		.uleb128 0xe
 4589 0154 3A       		.uleb128 0x3a
 4590 0155 0B       		.uleb128 0xb
 4591 0156 3B       		.uleb128 0x3b
 4592 0157 05       		.uleb128 0x5
 4593 0158 27       		.uleb128 0x27
 4594 0159 19       		.uleb128 0x19
 4595 015a 49       		.uleb128 0x49
 4596 015b 13       		.uleb128 0x13
 4597 015c 11       		.uleb128 0x11
 4598 015d 01       		.uleb128 0x1
 4599 015e 12       		.uleb128 0x12
 4600 015f 06       		.uleb128 0x6
 4601 0160 40       		.uleb128 0x40
 4602 0161 18       		.uleb128 0x18
 4603 0162 9642     		.uleb128 0x2116
 4604 0164 19       		.uleb128 0x19
 4605 0165 01       		.uleb128 0x1
 4606 0166 13       		.uleb128 0x13
 4607 0167 00       		.byte	0
 4608 0168 00       		.byte	0
 4609 0169 19       		.uleb128 0x19
 4610 016a 05       		.uleb128 0x5
 4611 016b 00       		.byte	0
 4612 016c 03       		.uleb128 0x3
 4613 016d 0E       		.uleb128 0xe
 4614 016e 3A       		.uleb128 0x3a
 4615 016f 0B       		.uleb128 0xb
 4616 0170 3B       		.uleb128 0x3b
 4617 0171 05       		.uleb128 0x5
 4618 0172 49       		.uleb128 0x49
 4619 0173 13       		.uleb128 0x13
 4620 0174 02       		.uleb128 0x2
 4621 0175 18       		.uleb128 0x18
 4622 0176 00       		.byte	0
 4623 0177 00       		.byte	0
 4624 0178 1A       		.uleb128 0x1a
 4625 0179 34       		.uleb128 0x34
 4626 017a 00       		.byte	0
 4627 017b 03       		.uleb128 0x3
 4628 017c 08       		.uleb128 0x8
 4629 017d 3A       		.uleb128 0x3a
 4630 017e 0B       		.uleb128 0xb
 4631 017f 3B       		.uleb128 0x3b
 4632 0180 05       		.uleb128 0x5
 4633 0181 49       		.uleb128 0x49
 4634 0182 13       		.uleb128 0x13
 4635 0183 02       		.uleb128 0x2
 4636 0184 18       		.uleb128 0x18
 4637 0185 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 101


 4638 0186 00       		.byte	0
 4639 0187 1B       		.uleb128 0x1b
 4640 0188 2E       		.uleb128 0x2e
 4641 0189 01       		.byte	0x1
 4642 018a 3F       		.uleb128 0x3f
 4643 018b 19       		.uleb128 0x19
 4644 018c 03       		.uleb128 0x3
 4645 018d 0E       		.uleb128 0xe
 4646 018e 3A       		.uleb128 0x3a
 4647 018f 0B       		.uleb128 0xb
 4648 0190 3B       		.uleb128 0x3b
 4649 0191 05       		.uleb128 0x5
 4650 0192 49       		.uleb128 0x49
 4651 0193 13       		.uleb128 0x13
 4652 0194 11       		.uleb128 0x11
 4653 0195 01       		.uleb128 0x1
 4654 0196 12       		.uleb128 0x12
 4655 0197 06       		.uleb128 0x6
 4656 0198 40       		.uleb128 0x40
 4657 0199 18       		.uleb128 0x18
 4658 019a 9642     		.uleb128 0x2116
 4659 019c 19       		.uleb128 0x19
 4660 019d 01       		.uleb128 0x1
 4661 019e 13       		.uleb128 0x13
 4662 019f 00       		.byte	0
 4663 01a0 00       		.byte	0
 4664 01a1 1C       		.uleb128 0x1c
 4665 01a2 34       		.uleb128 0x34
 4666 01a3 00       		.byte	0
 4667 01a4 03       		.uleb128 0x3
 4668 01a5 0E       		.uleb128 0xe
 4669 01a6 3A       		.uleb128 0x3a
 4670 01a7 0B       		.uleb128 0xb
 4671 01a8 3B       		.uleb128 0x3b
 4672 01a9 05       		.uleb128 0x5
 4673 01aa 49       		.uleb128 0x49
 4674 01ab 13       		.uleb128 0x13
 4675 01ac 02       		.uleb128 0x2
 4676 01ad 18       		.uleb128 0x18
 4677 01ae 00       		.byte	0
 4678 01af 00       		.byte	0
 4679 01b0 1D       		.uleb128 0x1d
 4680 01b1 2E       		.uleb128 0x2e
 4681 01b2 00       		.byte	0
 4682 01b3 3F       		.uleb128 0x3f
 4683 01b4 19       		.uleb128 0x19
 4684 01b5 03       		.uleb128 0x3
 4685 01b6 0E       		.uleb128 0xe
 4686 01b7 3A       		.uleb128 0x3a
 4687 01b8 0B       		.uleb128 0xb
 4688 01b9 3B       		.uleb128 0x3b
 4689 01ba 05       		.uleb128 0x5
 4690 01bb 11       		.uleb128 0x11
 4691 01bc 01       		.uleb128 0x1
 4692 01bd 12       		.uleb128 0x12
 4693 01be 06       		.uleb128 0x6
 4694 01bf 40       		.uleb128 0x40
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 102


 4695 01c0 18       		.uleb128 0x18
 4696 01c1 9642     		.uleb128 0x2116
 4697 01c3 19       		.uleb128 0x19
 4698 01c4 00       		.byte	0
 4699 01c5 00       		.byte	0
 4700 01c6 1E       		.uleb128 0x1e
 4701 01c7 2E       		.uleb128 0x2e
 4702 01c8 00       		.byte	0
 4703 01c9 3F       		.uleb128 0x3f
 4704 01ca 19       		.uleb128 0x19
 4705 01cb 03       		.uleb128 0x3
 4706 01cc 0E       		.uleb128 0xe
 4707 01cd 3A       		.uleb128 0x3a
 4708 01ce 0B       		.uleb128 0xb
 4709 01cf 3B       		.uleb128 0x3b
 4710 01d0 05       		.uleb128 0x5
 4711 01d1 49       		.uleb128 0x49
 4712 01d2 13       		.uleb128 0x13
 4713 01d3 11       		.uleb128 0x11
 4714 01d4 01       		.uleb128 0x1
 4715 01d5 12       		.uleb128 0x12
 4716 01d6 06       		.uleb128 0x6
 4717 01d7 40       		.uleb128 0x40
 4718 01d8 18       		.uleb128 0x18
 4719 01d9 9642     		.uleb128 0x2116
 4720 01db 19       		.uleb128 0x19
 4721 01dc 00       		.byte	0
 4722 01dd 00       		.byte	0
 4723 01de 1F       		.uleb128 0x1f
 4724 01df 2E       		.uleb128 0x2e
 4725 01e0 01       		.byte	0x1
 4726 01e1 3F       		.uleb128 0x3f
 4727 01e2 19       		.uleb128 0x19
 4728 01e3 03       		.uleb128 0x3
 4729 01e4 0E       		.uleb128 0xe
 4730 01e5 3A       		.uleb128 0x3a
 4731 01e6 0B       		.uleb128 0xb
 4732 01e7 3B       		.uleb128 0x3b
 4733 01e8 05       		.uleb128 0x5
 4734 01e9 11       		.uleb128 0x11
 4735 01ea 01       		.uleb128 0x1
 4736 01eb 12       		.uleb128 0x12
 4737 01ec 06       		.uleb128 0x6
 4738 01ed 40       		.uleb128 0x40
 4739 01ee 18       		.uleb128 0x18
 4740 01ef 9642     		.uleb128 0x2116
 4741 01f1 19       		.uleb128 0x19
 4742 01f2 01       		.uleb128 0x1
 4743 01f3 13       		.uleb128 0x13
 4744 01f4 00       		.byte	0
 4745 01f5 00       		.byte	0
 4746 01f6 20       		.uleb128 0x20
 4747 01f7 0B       		.uleb128 0xb
 4748 01f8 01       		.byte	0x1
 4749 01f9 55       		.uleb128 0x55
 4750 01fa 17       		.uleb128 0x17
 4751 01fb 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 103


 4752 01fc 00       		.byte	0
 4753 01fd 21       		.uleb128 0x21
 4754 01fe 2E       		.uleb128 0x2e
 4755 01ff 00       		.byte	0
 4756 0200 3F       		.uleb128 0x3f
 4757 0201 19       		.uleb128 0x19
 4758 0202 03       		.uleb128 0x3
 4759 0203 0E       		.uleb128 0xe
 4760 0204 3A       		.uleb128 0x3a
 4761 0205 0B       		.uleb128 0xb
 4762 0206 3B       		.uleb128 0x3b
 4763 0207 05       		.uleb128 0x5
 4764 0208 11       		.uleb128 0x11
 4765 0209 01       		.uleb128 0x1
 4766 020a 12       		.uleb128 0x12
 4767 020b 06       		.uleb128 0x6
 4768 020c 40       		.uleb128 0x40
 4769 020d 18       		.uleb128 0x18
 4770 020e 9742     		.uleb128 0x2117
 4771 0210 19       		.uleb128 0x19
 4772 0211 00       		.byte	0
 4773 0212 00       		.byte	0
 4774 0213 22       		.uleb128 0x22
 4775 0214 2E       		.uleb128 0x2e
 4776 0215 00       		.byte	0
 4777 0216 3F       		.uleb128 0x3f
 4778 0217 19       		.uleb128 0x19
 4779 0218 03       		.uleb128 0x3
 4780 0219 0E       		.uleb128 0xe
 4781 021a 3A       		.uleb128 0x3a
 4782 021b 0B       		.uleb128 0xb
 4783 021c 3B       		.uleb128 0x3b
 4784 021d 05       		.uleb128 0x5
 4785 021e 49       		.uleb128 0x49
 4786 021f 13       		.uleb128 0x13
 4787 0220 11       		.uleb128 0x11
 4788 0221 01       		.uleb128 0x1
 4789 0222 12       		.uleb128 0x12
 4790 0223 06       		.uleb128 0x6
 4791 0224 40       		.uleb128 0x40
 4792 0225 18       		.uleb128 0x18
 4793 0226 9742     		.uleb128 0x2117
 4794 0228 19       		.uleb128 0x19
 4795 0229 00       		.byte	0
 4796 022a 00       		.byte	0
 4797 022b 23       		.uleb128 0x23
 4798 022c 34       		.uleb128 0x34
 4799 022d 00       		.byte	0
 4800 022e 03       		.uleb128 0x3
 4801 022f 0E       		.uleb128 0xe
 4802 0230 3A       		.uleb128 0x3a
 4803 0231 0B       		.uleb128 0xb
 4804 0232 3B       		.uleb128 0x3b
 4805 0233 05       		.uleb128 0x5
 4806 0234 49       		.uleb128 0x49
 4807 0235 13       		.uleb128 0x13
 4808 0236 3F       		.uleb128 0x3f
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 104


 4809 0237 19       		.uleb128 0x19
 4810 0238 3C       		.uleb128 0x3c
 4811 0239 19       		.uleb128 0x19
 4812 023a 00       		.byte	0
 4813 023b 00       		.byte	0
 4814 023c 24       		.uleb128 0x24
 4815 023d 34       		.uleb128 0x34
 4816 023e 00       		.byte	0
 4817 023f 03       		.uleb128 0x3
 4818 0240 0E       		.uleb128 0xe
 4819 0241 3A       		.uleb128 0x3a
 4820 0242 0B       		.uleb128 0xb
 4821 0243 3B       		.uleb128 0x3b
 4822 0244 0B       		.uleb128 0xb
 4823 0245 49       		.uleb128 0x49
 4824 0246 13       		.uleb128 0x13
 4825 0247 3F       		.uleb128 0x3f
 4826 0248 19       		.uleb128 0x19
 4827 0249 02       		.uleb128 0x2
 4828 024a 18       		.uleb128 0x18
 4829 024b 00       		.byte	0
 4830 024c 00       		.byte	0
 4831 024d 25       		.uleb128 0x25
 4832 024e 21       		.uleb128 0x21
 4833 024f 00       		.byte	0
 4834 0250 49       		.uleb128 0x49
 4835 0251 13       		.uleb128 0x13
 4836 0252 2F       		.uleb128 0x2f
 4837 0253 05       		.uleb128 0x5
 4838 0254 00       		.byte	0
 4839 0255 00       		.byte	0
 4840 0256 00       		.byte	0
 4841              		.section	.debug_aranges,"",%progbits
 4842 0000 D4000000 		.4byte	0xd4
 4843 0004 0200     		.2byte	0x2
 4844 0006 00000000 		.4byte	.Ldebug_info0
 4845 000a 04       		.byte	0x4
 4846 000b 00       		.byte	0
 4847 000c 0000     		.2byte	0
 4848 000e 0000     		.2byte	0
 4849 0010 00000000 		.4byte	.LFB64
 4850 0014 44000000 		.4byte	.LFE64-.LFB64
 4851 0018 00000000 		.4byte	.LFB65
 4852 001c 6C000000 		.4byte	.LFE65-.LFB65
 4853 0020 00000000 		.4byte	.LFB66
 4854 0024 32000000 		.4byte	.LFE66-.LFB66
 4855 0028 00000000 		.4byte	.LFB67
 4856 002c 20000000 		.4byte	.LFE67-.LFB67
 4857 0030 00000000 		.4byte	.LFB68
 4858 0034 40000000 		.4byte	.LFE68-.LFB68
 4859 0038 00000000 		.4byte	.LFB69
 4860 003c DC000000 		.4byte	.LFE69-.LFB69
 4861 0040 00000000 		.4byte	.LFB70
 4862 0044 1C000000 		.4byte	.LFE70-.LFB70
 4863 0048 00000000 		.4byte	.LFB71
 4864 004c 28000000 		.4byte	.LFE71-.LFB71
 4865 0050 00000000 		.4byte	.LFB72
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 105


 4866 0054 C8000000 		.4byte	.LFE72-.LFB72
 4867 0058 00000000 		.4byte	.LFB73
 4868 005c FC000000 		.4byte	.LFE73-.LFB73
 4869 0060 00000000 		.4byte	.LFB74
 4870 0064 78000000 		.4byte	.LFE74-.LFB74
 4871 0068 00000000 		.4byte	.LFB75
 4872 006c 40010000 		.4byte	.LFE75-.LFB75
 4873 0070 00000000 		.4byte	.LFB76
 4874 0074 B4000000 		.4byte	.LFE76-.LFB76
 4875 0078 00000000 		.4byte	.LFB77
 4876 007c 1C000000 		.4byte	.LFE77-.LFB77
 4877 0080 00000000 		.4byte	.LFB78
 4878 0084 28000000 		.4byte	.LFE78-.LFB78
 4879 0088 00000000 		.4byte	.LFB79
 4880 008c 30010000 		.4byte	.LFE79-.LFB79
 4881 0090 00000000 		.4byte	.LFB80
 4882 0094 24000000 		.4byte	.LFE80-.LFB80
 4883 0098 00000000 		.4byte	.LFB81
 4884 009c 4C010000 		.4byte	.LFE81-.LFB81
 4885 00a0 00000000 		.4byte	.LFB82
 4886 00a4 38010000 		.4byte	.LFE82-.LFB82
 4887 00a8 00000000 		.4byte	.LFB83
 4888 00ac 44010000 		.4byte	.LFE83-.LFB83
 4889 00b0 00000000 		.4byte	.LFB84
 4890 00b4 14000000 		.4byte	.LFE84-.LFB84
 4891 00b8 00000000 		.4byte	.LFB85
 4892 00bc 1A000000 		.4byte	.LFE85-.LFB85
 4893 00c0 00000000 		.4byte	.LFB86
 4894 00c4 2A000000 		.4byte	.LFE86-.LFB86
 4895 00c8 00000000 		.4byte	.LFB87
 4896 00cc 7C020000 		.4byte	.LFE87-.LFB87
 4897 00d0 00000000 		.4byte	0
 4898 00d4 00000000 		.4byte	0
 4899              		.section	.debug_ranges,"",%progbits
 4900              	.Ldebug_ranges0:
 4901 0000 06000000 		.4byte	.LBB9
 4902 0004 F2000000 		.4byte	.LBE9
 4903 0008 F4000000 		.4byte	.LBB11
 4904 000c 06010000 		.4byte	.LBE11
 4905 0010 00000000 		.4byte	0
 4906 0014 00000000 		.4byte	0
 4907 0018 00000000 		.4byte	.LFB64
 4908 001c 44000000 		.4byte	.LFE64
 4909 0020 00000000 		.4byte	.LFB65
 4910 0024 6C000000 		.4byte	.LFE65
 4911 0028 00000000 		.4byte	.LFB66
 4912 002c 32000000 		.4byte	.LFE66
 4913 0030 00000000 		.4byte	.LFB67
 4914 0034 20000000 		.4byte	.LFE67
 4915 0038 00000000 		.4byte	.LFB68
 4916 003c 40000000 		.4byte	.LFE68
 4917 0040 00000000 		.4byte	.LFB69
 4918 0044 DC000000 		.4byte	.LFE69
 4919 0048 00000000 		.4byte	.LFB70
 4920 004c 1C000000 		.4byte	.LFE70
 4921 0050 00000000 		.4byte	.LFB71
 4922 0054 28000000 		.4byte	.LFE71
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 106


 4923 0058 00000000 		.4byte	.LFB72
 4924 005c C8000000 		.4byte	.LFE72
 4925 0060 00000000 		.4byte	.LFB73
 4926 0064 FC000000 		.4byte	.LFE73
 4927 0068 00000000 		.4byte	.LFB74
 4928 006c 78000000 		.4byte	.LFE74
 4929 0070 00000000 		.4byte	.LFB75
 4930 0074 40010000 		.4byte	.LFE75
 4931 0078 00000000 		.4byte	.LFB76
 4932 007c B4000000 		.4byte	.LFE76
 4933 0080 00000000 		.4byte	.LFB77
 4934 0084 1C000000 		.4byte	.LFE77
 4935 0088 00000000 		.4byte	.LFB78
 4936 008c 28000000 		.4byte	.LFE78
 4937 0090 00000000 		.4byte	.LFB79
 4938 0094 30010000 		.4byte	.LFE79
 4939 0098 00000000 		.4byte	.LFB80
 4940 009c 24000000 		.4byte	.LFE80
 4941 00a0 00000000 		.4byte	.LFB81
 4942 00a4 4C010000 		.4byte	.LFE81
 4943 00a8 00000000 		.4byte	.LFB82
 4944 00ac 38010000 		.4byte	.LFE82
 4945 00b0 00000000 		.4byte	.LFB83
 4946 00b4 44010000 		.4byte	.LFE83
 4947 00b8 00000000 		.4byte	.LFB84
 4948 00bc 14000000 		.4byte	.LFE84
 4949 00c0 00000000 		.4byte	.LFB85
 4950 00c4 1A000000 		.4byte	.LFE85
 4951 00c8 00000000 		.4byte	.LFB86
 4952 00cc 2A000000 		.4byte	.LFE86
 4953 00d0 00000000 		.4byte	.LFB87
 4954 00d4 7C020000 		.4byte	.LFE87
 4955 00d8 00000000 		.4byte	0
 4956 00dc 00000000 		.4byte	0
 4957              		.section	.debug_line,"",%progbits
 4958              	.Ldebug_line0:
 4959 0000 56050000 		.section	.debug_str,"MS",%progbits,1
 4959      0200EF01 
 4959      00000201 
 4959      FB0E0D00 
 4959      01010101 
 4960              	.LASF127:
 4961 0000 676D745F 		.ascii	"gmt_offset\000"
 4961      6F666673 
 4961      657400
 4962              	.LASF16:
 4963 000b 75696E74 		.ascii	"uint16\000"
 4963      313600
 4964              	.LASF60:
 4965 0012 76616C75 		.ascii	"value\000"
 4965      6500
 4966              	.LASF27:
 4967 0018 746D5F68 		.ascii	"tm_hour\000"
 4967      6F757200 
 4968              	.LASF32:
 4969 0020 746D5F79 		.ascii	"tm_yday\000"
 4969      64617900 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 107


 4970              	.LASF4:
 4971 0028 5F5F7569 		.ascii	"__uint8_t\000"
 4971      6E74385F 
 4971      7400
 4972              	.LASF66:
 4973 0032 636F756E 		.ascii	"countDownResetCondition\000"
 4973      74446F77 
 4973      6E526573 
 4973      6574436F 
 4973      6E646974 
 4974              	.LASF51:
 4975 004a 6C6F6E67 		.ascii	"longitude\000"
 4975      69747564 
 4975      6500
 4976              	.LASF156:
 4977 0054 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4977      43313120 
 4977      352E342E 
 4977      31203230 
 4977      31363036 
 4978 0087 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4978      20726576 
 4978      6973696F 
 4978      6E203233 
 4978      37373135 
 4979 00ba 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4979      66756E63 
 4979      74696F6E 
 4979      2D736563 
 4979      74696F6E 
 4980              	.LASF130:
 4981 00e2 6D6F6465 		.ascii	"modem_wakeup\000"
 4981      6D5F7761 
 4981      6B657570 
 4981      00
 4982              	.LASF10:
 4983 00ef 6C6F6E67 		.ascii	"long long unsigned int\000"
 4983      206C6F6E 
 4983      6720756E 
 4983      7369676E 
 4983      65642069 
 4984              	.LASF115:
 4985 0106 73616D70 		.ascii	"sample_freq\000"
 4985      6C655F66 
 4985      72657100 
 4986              	.LASF136:
 4987 0112 6D6F6465 		.ascii	"modem_state\000"
 4987      6D5F7374 
 4987      61746500 
 4988              	.LASF93:
 4989 011e 74657374 		.ascii	"test\000"
 4989      00
 4990              	.LASF148:
 4991 0123 616C6172 		.ascii	"alarmMeasure\000"
 4991      6D4D6561 
 4991      73757265 
 4991      00
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 108


 4992              	.LASF135:
 4993 0130 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4993      52784275 
 4993      66666572 
 4993      00
 4994              	.LASF138:
 4995 013d 6D6F6465 		.ascii	"modem_stats\000"
 4995      6D5F7374 
 4995      61747300 
 4996              	.LASF9:
 4997 0149 6C6F6E67 		.ascii	"long long int\000"
 4997      206C6F6E 
 4997      6720696E 
 4997      7400
 4998              	.LASF0:
 4999 0157 7369676E 		.ascii	"signed char\000"
 4999      65642063 
 4999      68617200 
 5000              	.LASF44:
 5001 0163 65636E6F 		.ascii	"ecno\000"
 5001      00
 5002              	.LASF63:
 5003 0168 636F756E 		.ascii	"countDownValue\000"
 5003      74446F77 
 5003      6E56616C 
 5003      756500
 5004              	.LASF149:
 5005 0177 74696D65 		.ascii	"timeToMeasure\000"
 5005      546F4D65 
 5005      61737572 
 5005      6500
 5006              	.LASF47:
 5007 0185 74696D65 		.ascii	"time_to_network_connect\000"
 5007      5F746F5F 
 5007      6E657477 
 5007      6F726B5F 
 5007      636F6E6E 
 5008              	.LASF151:
 5009 019d 74696D65 		.ascii	"timeToSync\000"
 5009      546F5379 
 5009      6E6300
 5010              	.LASF144:
 5011 01a8 68747470 		.ascii	"http_body\000"
 5011      5F626F64 
 5011      7900
 5012              	.LASF104:
 5013 01b2 7365745F 		.ascii	"set_up_internet_connection\000"
 5013      75705F69 
 5013      6E746572 
 5013      6E65745F 
 5013      636F6E6E 
 5014              	.LASF126:
 5015 01cd 7365636F 		.ascii	"second\000"
 5015      6E6400
 5016              	.LASF122:
 5017 01d4 79656172 		.ascii	"year\000"
 5017      00
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 109


 5018              	.LASF6:
 5019 01d9 6C6F6E67 		.ascii	"long int\000"
 5019      20696E74 
 5019      00
 5020              	.LASF64:
 5021 01e2 63757272 		.ascii	"currentCountDownValue\000"
 5021      656E7443 
 5021      6F756E74 
 5021      446F776E 
 5021      56616C75 
 5022              	.LASF128:
 5023 01f8 6D6F6465 		.ascii	"modem_get_state\000"
 5023      6D5F6765 
 5023      745F7374 
 5023      61746500 
 5024              	.LASF52:
 5025 0208 616C7469 		.ascii	"altitude\000"
 5025      74756465 
 5025      00
 5026              	.LASF15:
 5027 0211 75696E74 		.ascii	"uint8\000"
 5027      3800
 5028              	.LASF21:
 5029 0217 646F7562 		.ascii	"double\000"
 5029      6C6500
 5030              	.LASF19:
 5031 021e 696E7433 		.ascii	"int32\000"
 5031      3200
 5032              	.LASF118:
 5033 0224 6D6F6465 		.ascii	"modem_configure_settings\000"
 5033      6D5F636F 
 5033      6E666967 
 5033      7572655F 
 5033      73657474 
 5034              	.LASF94:
 5035 023d 6E657477 		.ascii	"network_time\000"
 5035      6F726B5F 
 5035      74696D65 
 5035      00
 5036              	.LASF3:
 5037 024a 73686F72 		.ascii	"short unsigned int\000"
 5037      7420756E 
 5037      7369676E 
 5037      65642069 
 5037      6E7400
 5038              	.LASF17:
 5039 025d 75696E74 		.ascii	"uint32\000"
 5039      333200
 5040              	.LASF90:
 5041 0264 696E7465 		.ascii	"interval\000"
 5041      7276616C 
 5041      00
 5042              	.LASF7:
 5043 026d 5F5F7569 		.ascii	"__uint32_t\000"
 5043      6E743332 
 5043      5F7400
 5044              	.LASF120:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 110


 5045 0278 6D6F6465 		.ascii	"modem_get_network_time\000"
 5045      6D5F6765 
 5045      745F6E65 
 5045      74776F72 
 5045      6B5F7469 
 5046              	.LASF29:
 5047 028f 746D5F6D 		.ascii	"tm_mon\000"
 5047      6F6E00
 5048              	.LASF58:
 5049 0296 64656275 		.ascii	"debug_level\000"
 5049      675F6C65 
 5049      76656C00 
 5050              	.LASF129:
 5051 02a2 6D6F6465 		.ascii	"modem_sleep\000"
 5051      6D5F736C 
 5051      65657000 
 5052              	.LASF114:
 5053 02ae 735F6465 		.ascii	"s_debug_freq\000"
 5053      6275675F 
 5053      66726571 
 5053      00
 5054              	.LASF109:
 5055 02bb 75706461 		.ascii	"updatable_parameters_initialize\000"
 5055      7461626C 
 5055      655F7061 
 5055      72616D65 
 5055      74657273 
 5056              	.LASF30:
 5057 02db 746D5F79 		.ascii	"tm_year\000"
 5057      65617200 
 5058              	.LASF150:
 5059 02e3 616C6172 		.ascii	"alarmSync\000"
 5059      6D53796E 
 5059      6300
 5060              	.LASF76:
 5061 02ed 70696E73 		.ascii	"pins_configure_active\000"
 5061      5F636F6E 
 5061      66696775 
 5061      72655F61 
 5061      63746976 
 5062              	.LASF62:
 5063 0303 6B65795F 		.ascii	"key_value_t\000"
 5063      76616C75 
 5063      655F7400 
 5064              	.LASF81:
 5065 030f 7077725F 		.ascii	"pwr_check\000"
 5065      63686563 
 5065      6B00
 5066              	.LASF8:
 5067 0319 6C6F6E67 		.ascii	"long unsigned int\000"
 5067      20756E73 
 5067      69676E65 
 5067      6420696E 
 5067      7400
 5068              	.LASF96:
 5069 032b 65787472 		.ascii	"extract_string\000"
 5069      6163745F 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 111


 5069      73747269 
 5069      6E6700
 5070              	.LASF153:
 5071 033a 7472795F 		.ascii	"try_counter\000"
 5071      636F756E 
 5071      74657200 
 5072              	.LASF86:
 5073 0346 74696D65 		.ascii	"timeout\000"
 5073      6F757400 
 5074              	.LASF110:
 5075 034e 6765745F 		.ascii	"get_cell_network_stats\000"
 5075      63656C6C 
 5075      5F6E6574 
 5075      776F726B 
 5075      5F737461 
 5076              	.LASF53:
 5077 0365 74696D65 		.ascii	"time_to_lock\000"
 5077      5F746F5F 
 5077      6C6F636B 
 5077      00
 5078              	.LASF142:
 5079 0372 64617461 		.ascii	"data\000"
 5079      00
 5080              	.LASF72:
 5081 0377 65705F70 		.ascii	"ep_port\000"
 5081      6F727400 
 5082              	.LASF33:
 5083 037f 746D5F69 		.ascii	"tm_isdst\000"
 5083      73647374 
 5083      00
 5084              	.LASF68:
 5085 0388 6D6F6465 		.ascii	"modem_info\000"
 5085      6D5F696E 
 5085      666F00
 5086              	.LASF71:
 5087 0393 65705F68 		.ascii	"ep_host\000"
 5087      6F737400 
 5088              	.LASF69:
 5089 039b 63686970 		.ascii	"chip_uniqueId\000"
 5089      5F756E69 
 5089      71756549 
 5089      6400
 5090              	.LASF91:
 5091 03a9 6D6F6465 		.ascii	"modem_power_up\000"
 5091      6D5F706F 
 5091      7765725F 
 5091      757000
 5092              	.LASF157:
 5093 03b8 6D6F6465 		.ascii	"modem.c\000"
 5093      6D2E6300 
 5094              	.LASF98:
 5095 03c0 62656769 		.ascii	"beginMarker\000"
 5095      6E4D6172 
 5095      6B657200 
 5096              	.LASF100:
 5097 03cc 74617267 		.ascii	"target\000"
 5097      657400
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 112


 5098              	.LASF48:
 5099 03d3 74696D65 		.ascii	"time_to_acquire_ip\000"
 5099      5F746F5F 
 5099      61637175 
 5099      6972655F 
 5099      697000
 5100              	.LASF99:
 5101 03e6 656E644D 		.ascii	"endMarker\000"
 5101      61726B65 
 5101      7200
 5102              	.LASF2:
 5103 03f0 73686F72 		.ascii	"short int\000"
 5103      7420696E 
 5103      7400
 5104              	.LASF121:
 5105 03fa 65706F63 		.ascii	"epoch_time\000"
 5105      685F7469 
 5105      6D6500
 5106              	.LASF5:
 5107 0405 5F5F696E 		.ascii	"__int32_t\000"
 5107      7433325F 
 5107      7400
 5108              	.LASF97:
 5109 040f 66726F6D 		.ascii	"from\000"
 5109      00
 5110              	.LASF103:
 5111 0414 63726567 		.ascii	"creg\000"
 5111      00
 5112              	.LASF117:
 5113 0419 64656275 		.ascii	"debug_freq\000"
 5113      675F6672 
 5113      657100
 5114              	.LASF87:
 5115 0424 61745F61 		.ascii	"at_attempt\000"
 5115      7474656D 
 5115      707400
 5116              	.LASF95:
 5117 042f 61745F77 		.ascii	"at_write_command\000"
 5117      72697465 
 5117      5F636F6D 
 5117      6D616E64 
 5117      00
 5118              	.LASF70:
 5119 0440 7379735F 		.ascii	"sys_info_t\000"
 5119      696E666F 
 5119      5F7400
 5120              	.LASF59:
 5121 044b 75706461 		.ascii	"updatable_parameters_t\000"
 5121      7461626C 
 5121      655F7061 
 5121      72616D65 
 5121      74657273 
 5122              	.LASF116:
 5123 0462 7265706F 		.ascii	"report_freq\000"
 5123      72745F66 
 5123      72657100 
 5124              	.LASF140:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 113


 5125 046e 64617461 		.ascii	"dataPointsInStack\000"
 5125      506F696E 
 5125      7473496E 
 5125      53746163 
 5125      6B00
 5126              	.LASF26:
 5127 0480 746D5F6D 		.ascii	"tm_min\000"
 5127      696E00
 5128              	.LASF24:
 5129 0487 73697A65 		.ascii	"sizetype\000"
 5129      74797065 
 5129      00
 5130              	.LASF123:
 5131 0490 6D6F6E74 		.ascii	"month\000"
 5131      6800
 5132              	.LASF102:
 5133 0496 69735F63 		.ascii	"is_connected_to_cell_network\000"
 5133      6F6E6E65 
 5133      63746564 
 5133      5F746F5F 
 5133      63656C6C 
 5134              	.LASF154:
 5135 04b3 75617274 		.ascii	"uart_received_string\000"
 5135      5F726563 
 5135      65697665 
 5135      645F7374 
 5135      72696E67 
 5136              	.LASF50:
 5137 04c8 6C617469 		.ascii	"latitude\000"
 5137      74756465 
 5137      00
 5138              	.LASF34:
 5139 04d1 74657374 		.ascii	"test_name\000"
 5139      5F6E616D 
 5139      6500
 5140              	.LASF152:
 5141 04db 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 5141      546F5379 
 5141      636E5265 
 5141      6D6F7465 
 5141      50617261 
 5142              	.LASF92:
 5143 04f2 6D6F6465 		.ascii	"modem_test\000"
 5143      6D5F7465 
 5143      737400
 5144              	.LASF134:
 5145 04fd 6D617463 		.ascii	"match\000"
 5145      6800
 5146              	.LASF139:
 5147 0503 75706461 		.ascii	"updatable_parameters\000"
 5147      7461626C 
 5147      655F7061 
 5147      72616D65 
 5147      74657273 
 5148              	.LASF124:
 5149 0518 686F7572 		.ascii	"hour\000"
 5149      00
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 114


 5150              	.LASF84:
 5151 051d 636F6D6D 		.ascii	"commands\000"
 5151      616E6473 
 5151      00
 5152              	.LASF88:
 5153 0526 636F6D70 		.ascii	"compare_location\000"
 5153      6172655F 
 5153      6C6F6361 
 5153      74696F6E 
 5153      00
 5154              	.LASF20:
 5155 0537 666C6F61 		.ascii	"float\000"
 5155      7400
 5156              	.LASF74:
 5157 053d 6D6F6465 		.ascii	"modem_initialize\000"
 5157      6D5F696E 
 5157      69746961 
 5157      6C697A65 
 5157      00
 5158              	.LASF113:
 5159 054e 735F7265 		.ascii	"s_report_freq\000"
 5159      706F7274 
 5159      5F667265 
 5159      7100
 5160              	.LASF108:
 5161 055c 746F6B65 		.ascii	"token\000"
 5161      6E00
 5162              	.LASF158:
 5163 0562 433A5C55 		.ascii	"C:\\Users\\hail\\Desktop\\Brooke Research\\notoriOS"
 5163      73657273 
 5163      5C686169 
 5163      6C5C4465 
 5163      736B746F 
 5164 0590 5C6E6F74 		.ascii	"\\notoriOS\\notoriOS.cydsn\000"
 5164      6F72694F 
 5164      535C6E6F 
 5164      746F7269 
 5164      4F532E63 
 5165              	.LASF105:
 5166 05a9 6973725F 		.ascii	"isr_telit_rx\000"
 5166      74656C69 
 5166      745F7278 
 5166      00
 5167              	.LASF67:
 5168 05b6 616C6172 		.ascii	"alarm\000"
 5168      6D00
 5169              	.LASF13:
 5170 05bc 696E7433 		.ascii	"int32_t\000"
 5170      325F7400 
 5171              	.LASF1:
 5172 05c4 756E7369 		.ascii	"unsigned char\000"
 5172      676E6564 
 5172      20636861 
 5172      7200
 5173              	.LASF147:
 5174 05d2 73797374 		.ascii	"system_settings\000"
 5174      656D5F73 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 115


 5174      65747469 
 5174      6E677300 
 5175              	.LASF89:
 5176 05e2 64656C61 		.ascii	"delay\000"
 5176      7900
 5177              	.LASF45:
 5178 05e8 72737271 		.ascii	"rsrq\000"
 5178      00
 5179              	.LASF57:
 5180 05ed 73796E63 		.ascii	"sync_time\000"
 5180      5F74696D 
 5180      6500
 5181              	.LASF107:
 5182 05f7 63657371 		.ascii	"cesq\000"
 5182      00
 5183              	.LASF43:
 5184 05fc 72736370 		.ascii	"rscp\000"
 5184      00
 5185              	.LASF131:
 5186 0601 6D6F6465 		.ascii	"modem_get_gps_coordinates\000"
 5186      6D5F6765 
 5186      745F6770 
 5186      735F636F 
 5186      6F726469 
 5187              	.LASF37:
 5188 061b 74657374 		.ascii	"test_t\000"
 5188      5F7400
 5189              	.LASF146:
 5190 0622 73797374 		.ascii	"system_info\000"
 5190      656D5F69 
 5190      6E666F00 
 5191              	.LASF40:
 5192 062e 696D6569 		.ascii	"imei\000"
 5192      00
 5193              	.LASF36:
 5194 0633 72656173 		.ascii	"reason\000"
 5194      6F6E00
 5195              	.LASF46:
 5196 063a 72737270 		.ascii	"rsrp\000"
 5196      00
 5197              	.LASF49:
 5198 063f 6D6F6465 		.ascii	"modem_stats_t\000"
 5198      6D5F7374 
 5198      6174735F 
 5198      7400
 5199              	.LASF83:
 5200 064d 75617274 		.ascii	"uart_string_reset\000"
 5200      5F737472 
 5200      696E675F 
 5200      72657365 
 5200      7400
 5201              	.LASF31:
 5202 065f 746D5F77 		.ascii	"tm_wday\000"
 5202      64617900 
 5203              	.LASF82:
 5204 0667 6D6F6465 		.ascii	"modem_soft_power_cycle\000"
 5204      6D5F736F 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 116


 5204      66745F70 
 5204      6F776572 
 5204      5F637963 
 5205              	.LASF23:
 5206 067e 6C6F6E67 		.ascii	"long double\000"
 5206      20646F75 
 5206      626C6500 
 5207              	.LASF22:
 5208 068a 63686172 		.ascii	"char\000"
 5208      00
 5209              	.LASF101:
 5210 068f 6D6F6465 		.ascii	"modem_process_tasks\000"
 5210      6D5F7072 
 5210      6F636573 
 5210      735F7461 
 5210      736B7300 
 5211              	.LASF11:
 5212 06a3 756E7369 		.ascii	"unsigned int\000"
 5212      676E6564 
 5212      20696E74 
 5212      00
 5213              	.LASF119:
 5214 06b0 4346554E 		.ascii	"CFUN\000"
 5214      00
 5215              	.LASF39:
 5216 06b5 6D6F6465 		.ascii	"model_id\000"
 5216      6C5F6964 
 5216      00
 5217              	.LASF145:
 5218 06be 68747470 		.ascii	"http_route\000"
 5218      5F726F75 
 5218      746500
 5219              	.LASF41:
 5220 06c9 6D6F6465 		.ascii	"modem_info_t\000"
 5220      6D5F696E 
 5220      666F5F74 
 5220      00
 5221              	.LASF55:
 5222 06d6 6770735F 		.ascii	"gps_t\000"
 5222      7400
 5223              	.LASF155:
 5224 06dc 75617274 		.ascii	"uart_string_index\000"
 5224      5F737472 
 5224      696E675F 
 5224      696E6465 
 5224      7800
 5225              	.LASF56:
 5226 06ee 6D656173 		.ascii	"measure_time\000"
 5226      7572655F 
 5226      74696D65 
 5226      00
 5227              	.LASF106:
 5228 06fb 69735F63 		.ascii	"is_connected_to_internet\000"
 5228      6F6E6E65 
 5228      63746564 
 5228      5F746F5F 
 5228      696E7465 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 117


 5229              	.LASF137:
 5230 0714 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 5230      6D5F7374 
 5230      6172745F 
 5230      74696D65 
 5230      5F737461 
 5231              	.LASF133:
 5232 072b 6770735F 		.ascii	"gps_status\000"
 5232      73746174 
 5232      757300
 5233              	.LASF75:
 5234 0736 70696E73 		.ascii	"pins_configure_inactive\000"
 5234      5F636F6E 
 5234      66696775 
 5234      72655F69 
 5234      6E616374 
 5235              	.LASF38:
 5236 074e 73696D5F 		.ascii	"sim_id\000"
 5236      696400
 5237              	.LASF28:
 5238 0755 746D5F6D 		.ascii	"tm_mday\000"
 5238      64617900 
 5239              	.LASF54:
 5240 075d 76616C69 		.ascii	"valid\000"
 5240      6400
 5241              	.LASF125:
 5242 0763 6D696E75 		.ascii	"minute\000"
 5242      746500
 5243              	.LASF14:
 5244 076a 75696E74 		.ascii	"uint32_t\000"
 5244      33325F74 
 5244      00
 5245              	.LASF25:
 5246 0773 746D5F73 		.ascii	"tm_sec\000"
 5246      656300
 5247              	.LASF111:
 5248 077a 6765745F 		.ascii	"get_updated_parameters_from_malcom\000"
 5248      75706461 
 5248      7465645F 
 5248      70617261 
 5248      6D657465 
 5249              	.LASF112:
 5250 079d 735F7361 		.ascii	"s_sample_freq\000"
 5250      6D706C65 
 5250      5F667265 
 5250      7100
 5251              	.LASF35:
 5252 07ab 73746174 		.ascii	"status\000"
 5252      757300
 5253              	.LASF141:
 5254 07b2 64617461 		.ascii	"dataPointsInStackDesired\000"
 5254      506F696E 
 5254      7473496E 
 5254      53746163 
 5254      6B446573 
 5255              	.LASF73:
 5256 07cb 7379735F 		.ascii	"sys_settings_t\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccKO4tPp.s 			page 118


 5256      73657474 
 5256      696E6773 
 5256      5F7400
 5257              	.LASF12:
 5258 07da 75696E74 		.ascii	"uint8_t\000"
 5258      385F7400 
 5259              	.LASF18:
 5260 07e2 696E7431 		.ascii	"int16\000"
 5260      3600
 5261              	.LASF78:
 5262 07e8 61745F72 		.ascii	"at_ready\000"
 5262      65616479 
 5262      00
 5263              	.LASF79:
 5264 07f1 61747465 		.ascii	"attempts\000"
 5264      6D707473 
 5264      00
 5265              	.LASF65:
 5266 07fa 636F756E 		.ascii	"countDownType\000"
 5266      74446F77 
 5266      6E547970 
 5266      6500
 5267              	.LASF80:
 5268 0808 626F6F74 		.ascii	"boot_time\000"
 5268      5F74696D 
 5268      6500
 5269              	.LASF85:
 5270 0812 65787065 		.ascii	"expected_response\000"
 5270      63746564 
 5270      5F726573 
 5270      706F6E73 
 5270      6500
 5271              	.LASF42:
 5272 0824 72737369 		.ascii	"rssi\000"
 5272      00
 5273              	.LASF132:
 5274 0829 6C6F636B 		.ascii	"lock_time\000"
 5274      5F74696D 
 5274      6500
 5275              	.LASF143:
 5276 0833 68747470 		.ascii	"http_request\000"
 5276      5F726571 
 5276      75657374 
 5276      00
 5277              	.LASF77:
 5278 0840 6D6F6465 		.ascii	"modem_power_down\000"
 5278      6D5F706F 
 5278      7765725F 
 5278      646F776E 
 5278      00
 5279              	.LASF61:
 5280 0851 74696D65 		.ascii	"timeStamp\000"
 5280      5374616D 
 5280      7000
 5281              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
