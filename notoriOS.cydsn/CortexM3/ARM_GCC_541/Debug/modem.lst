ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"modem.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.syntax unified
  24              		.global _printf_float
  25              		.thumb
  26              		.syntax unified
  27              		.comm	modem_state,1,1
  28              		.comm	modem_start_time_stamp,4,4
  29              		.comm	modem_info,60,4
  30              		.comm	modem_stats,32,4
  31              		.comm	updatable_parameters,5,4
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.comm	uart_received_string,1024,4
  44              		.global	uart_string_index
  45              		.bss
  46              		.align	1
  47              		.type	uart_string_index, %object
  48              		.size	uart_string_index, 2
  49              	uart_string_index:
  50 0000 0000     		.space	2
  51              		.section	.text.isr_telit_rx,"ax",%progbits
  52              		.align	2
  53              		.global	isr_telit_rx
  54              		.thumb
  55              		.thumb_func
  56              		.type	isr_telit_rx, %function
  57              	isr_telit_rx:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 2


  58              	.LFB64:
  59              		.file 1 "modem.c"
   1:modem.c       **** //Methods for Telit modem 
   2:modem.c       **** #include "modem.h"
   3:modem.c       **** #include "notoriOS.h"
   4:modem.c       **** 
   5:modem.c       **** char uart_received_string[1024];
   6:modem.c       **** int16 uart_string_index=0;
   7:modem.c       **** 
   8:modem.c       **** #define DEFAULT_AT_TIMEOUT 2000u // Send command and wait 2000 ms
   9:modem.c       **** #define NO_AT_TIMEOUT 0u // Send command, no timeout/ don't wait 
  10:modem.c       **** 
  11:modem.c       **** #define TIMEOUT_NETWORK_CONNECT 180 //seconds
  12:modem.c       **** #define TIMEOUT_IP_ACQUIRE 230 //seconds (cummulatinve) add to TIMEOUT_NETWORK_CONNECT
  13:modem.c       **** 
  14:modem.c       **** CY_ISR_PROTO(isr_telit_rx); // Declares a custom ISR function "isr_telit_rx" using the CY_ISR_PROTO
  15:modem.c       **** 
  16:modem.c       **** // Define the custom ISR function "isr_telit_rx" using the CY_ISR macro
  17:modem.c       **** // Get each character from Telit and saves it to uart_received_string
  18:modem.c       **** CY_ISR(isr_telit_rx){      
  60              		.loc 1 18 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64 0000 98B5     		push	{r3, r4, r7, lr}
  65              		.cfi_def_cfa_offset 16
  66              		.cfi_offset 3, -16
  67              		.cfi_offset 4, -12
  68              		.cfi_offset 7, -8
  69              		.cfi_offset 14, -4
  70 0002 00AF     		add	r7, sp, #0
  71              		.cfi_def_cfa_register 7
  19:modem.c       ****     // UART_Telit_GetRxBufferSize() returns the number of received bytes available in the RX buffer
  20:modem.c       ****     while(UART_Telit_GetRxBufferSize()==1){
  72              		.loc 1 20 0
  73 0004 12E0     		b	.L2
  74              	.L3:
  21:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  75              		.loc 1 21 0
  76 0006 0D4B     		ldr	r3, .L4
  77 0008 B3F90030 		ldrsh	r3, [r3]
  78 000c 1C46     		mov	r4, r3
  79 000e FFF7FEFF 		bl	UART_Telit_GetChar
  80 0012 0346     		mov	r3, r0
  81 0014 1A46     		mov	r2, r3
  82 0016 0A4B     		ldr	r3, .L4+4
  83 0018 1A55     		strb	r2, [r3, r4]
  22:modem.c       ****         uart_string_index++;
  84              		.loc 1 22 0
  85 001a 084B     		ldr	r3, .L4
  86 001c B3F90030 		ldrsh	r3, [r3]
  87 0020 9BB2     		uxth	r3, r3
  88 0022 0133     		adds	r3, r3, #1
  89 0024 9BB2     		uxth	r3, r3
  90 0026 1AB2     		sxth	r2, r3
  91 0028 044B     		ldr	r3, .L4
  92 002a 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 3


  93              	.L2:
  20:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  94              		.loc 1 20 0
  95 002c FFF7FEFF 		bl	UART_Telit_GetRxBufferSize
  96 0030 0346     		mov	r3, r0
  97 0032 012B     		cmp	r3, #1
  98 0034 E7D0     		beq	.L3
  23:modem.c       ****     }
  24:modem.c       **** 
  25:modem.c       **** }
  99              		.loc 1 25 0
 100 0036 00BF     		nop
 101 0038 98BD     		pop	{r3, r4, r7, pc}
 102              	.L5:
 103 003a 00BF     		.align	2
 104              	.L4:
 105 003c 00000000 		.word	uart_string_index
 106 0040 00000000 		.word	uart_received_string
 107              		.cfi_endproc
 108              	.LFE64:
 109              		.size	isr_telit_rx, .-isr_telit_rx
 110              		.section	.text.modem_initialize,"ax",%progbits
 111              		.align	2
 112              		.global	modem_initialize
 113              		.thumb
 114              		.thumb_func
 115              		.type	modem_initialize, %function
 116              	modem_initialize:
 117              	.LFB65:
  26:modem.c       **** 
  27:modem.c       **** // Initialize the modem
  28:modem.c       **** void modem_initialize(){
 118              		.loc 1 28 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 1, uses_anonymous_args = 0
 122 0000 80B5     		push	{r7, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 7, -8
 125              		.cfi_offset 14, -4
 126 0002 00AF     		add	r7, sp, #0
 127              		.cfi_def_cfa_register 7
  29:modem.c       ****     // Don't do much except make sure that all the modem pins are pulled low
  30:modem.c       ****     // Also make sure that the TX PIN is fully disabled
  31:modem.c       ****     pins_configure_inactive();
 128              		.loc 1 31 0
 129 0004 FFF7FEFF 		bl	pins_configure_inactive
  32:modem.c       ****     modem_state = 0;
 130              		.loc 1 32 0
 131 0008 154B     		ldr	r3, .L7
 132 000a 0022     		movs	r2, #0
 133 000c 1A70     		strb	r2, [r3]
  33:modem.c       ****     //initialize states
  34:modem.c       ****     modem_info.imei[0] = '\0';
 134              		.loc 1 34 0
 135 000e 154B     		ldr	r3, .L7+4
 136 0010 0022     		movs	r2, #0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 4


 137 0012 83F82820 		strb	r2, [r3, #40]
  35:modem.c       ****     modem_info.model_id[0] = '\0';
 138              		.loc 1 35 0
 139 0016 134B     		ldr	r3, .L7+4
 140 0018 0022     		movs	r2, #0
 141 001a 1A75     		strb	r2, [r3, #20]
  36:modem.c       ****     modem_info.sim_id[0] = '\0';
 142              		.loc 1 36 0
 143 001c 114B     		ldr	r3, .L7+4
 144 001e 0022     		movs	r2, #0
 145 0020 1A70     		strb	r2, [r3]
  37:modem.c       ****     modem_stats.rxlev = 0;
 146              		.loc 1 37 0
 147 0022 114B     		ldr	r3, .L7+8
 148 0024 0022     		movs	r2, #0
 149 0026 1A60     		str	r2, [r3]
  38:modem.c       ****     modem_stats.ber = 0;
 150              		.loc 1 38 0
 151 0028 0F4B     		ldr	r3, .L7+8
 152 002a 0022     		movs	r2, #0
 153 002c 5A60     		str	r2, [r3, #4]
  39:modem.c       ****     modem_stats.rscp = 0;
 154              		.loc 1 39 0
 155 002e 0E4B     		ldr	r3, .L7+8
 156 0030 0022     		movs	r2, #0
 157 0032 9A60     		str	r2, [r3, #8]
  40:modem.c       ****     modem_stats.ecno = 0;
 158              		.loc 1 40 0
 159 0034 0C4B     		ldr	r3, .L7+8
 160 0036 0022     		movs	r2, #0
 161 0038 DA60     		str	r2, [r3, #12]
  41:modem.c       ****     modem_stats.rsrq = 0;
 162              		.loc 1 41 0
 163 003a 0B4B     		ldr	r3, .L7+8
 164 003c 0022     		movs	r2, #0
 165 003e 1A61     		str	r2, [r3, #16]
  42:modem.c       ****     modem_stats.rsrp = 0;
 166              		.loc 1 42 0
 167 0040 094B     		ldr	r3, .L7+8
 168 0042 0022     		movs	r2, #0
 169 0044 5A61     		str	r2, [r3, #20]
  43:modem.c       ****     modem_stats.time_to_acquire_ip = 0;
 170              		.loc 1 43 0
 171 0046 084B     		ldr	r3, .L7+8
 172 0048 0022     		movs	r2, #0
 173 004a DA61     		str	r2, [r3, #28]
  44:modem.c       ****     modem_stats.time_to_network_connect = 0;
 174              		.loc 1 44 0
 175 004c 064B     		ldr	r3, .L7+8
 176 004e 0022     		movs	r2, #0
 177 0050 9A61     		str	r2, [r3, #24]
  45:modem.c       ****     // Disable the RX Pin interrupt, and only enable it during long timeouts
  46:modem.c       ****     // Rx_Telit_SetInterruptMode(): Configures the interrupt mode for each of the Pins component's 
  47:modem.c       ****     // Rx_Telit_0_INTR selects the first pin in the list, and Rx_Telit_INTR_NONE disables the Rx pi
  48:modem.c       ****     Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 178              		.loc 1 48 0
 179 0052 0021     		movs	r1, #0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 5


 180 0054 4020     		movs	r0, #64
 181 0056 FFF7FEFF 		bl	Rx_Telit_SetInterruptMode
  49:modem.c       ****     
  50:modem.c       **** }
 182              		.loc 1 50 0
 183 005a 00BF     		nop
 184 005c 80BD     		pop	{r7, pc}
 185              	.L8:
 186 005e 00BF     		.align	2
 187              	.L7:
 188 0060 00000000 		.word	modem_state
 189 0064 00000000 		.word	modem_info
 190 0068 00000000 		.word	modem_stats
 191              		.cfi_endproc
 192              	.LFE65:
 193              		.size	modem_initialize, .-modem_initialize
 194              		.section	.text.pins_configure_inactive,"ax",%progbits
 195              		.align	2
 196              		.global	pins_configure_inactive
 197              		.thumb
 198              		.thumb_func
 199              		.type	pins_configure_inactive, %function
 200              	pins_configure_inactive:
 201              	.LFB66:
  51:modem.c       **** 
  52:modem.c       **** 
  53:modem.c       **** // To be used when the modem power is to be "killed" conpletely to conserve power
  54:modem.c       **** void pins_configure_inactive(){
 202              		.loc 1 54 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 1, uses_anonymous_args = 0
 206 0000 80B5     		push	{r7, lr}
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 7, -8
 209              		.cfi_offset 14, -4
 210 0002 00AF     		add	r7, sp, #0
 211              		.cfi_def_cfa_register 7
  55:modem.c       ****    
  56:modem.c       ****    Telit_ControlReg_Write(0u); // Physically disconect UART pin
 212              		.loc 1 56 0
 213 0004 0020     		movs	r0, #0
 214 0006 FFF7FEFF 		bl	Telit_ControlReg_Write
  57:modem.c       ****    Rx_Telit_SetDriveMode(PIN_DM_STRONG); // Set drive mode
 215              		.loc 1 57 0
 216 000a 0C20     		movs	r0, #12
 217 000c FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  58:modem.c       **** 
  59:modem.c       ****    Pin_Telit_pwr_Write(OFF); // Kill power to modem (pulls pin low).
 218              		.loc 1 59 0
 219 0010 0020     		movs	r0, #0
 220 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  60:modem.c       **** 
  61:modem.c       ****    // Pull down all of these, just in case (turns the off).
  62:modem.c       ****    Rx_Telit_Write(OFF); 
 221              		.loc 1 62 0
 222 0016 0020     		movs	r0, #0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 6


 223 0018 FFF7FEFF 		bl	Rx_Telit_Write
  63:modem.c       ****    Tx_Telit_Write(OFF);
 224              		.loc 1 63 0
 225 001c 0020     		movs	r0, #0
 226 001e FFF7FEFF 		bl	Tx_Telit_Write
  64:modem.c       ****    Pin_Telit_ONOFF_Write(OFF);
 227              		.loc 1 64 0
 228 0022 0020     		movs	r0, #0
 229 0024 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
  65:modem.c       ****    Pin_Telit_SWRDY_Write(OFF);
 230              		.loc 1 65 0
 231 0028 0020     		movs	r0, #0
 232 002a FFF7FEFF 		bl	Pin_Telit_SWRDY_Write
  66:modem.c       ****     
  67:modem.c       **** }
 233              		.loc 1 67 0
 234 002e 00BF     		nop
 235 0030 80BD     		pop	{r7, pc}
 236              		.cfi_endproc
 237              	.LFE66:
 238              		.size	pins_configure_inactive, .-pins_configure_inactive
 239 0032 00BF     		.section	.text.pins_configure_active,"ax",%progbits
 240              		.align	2
 241              		.global	pins_configure_active
 242              		.thumb
 243              		.thumb_func
 244              		.type	pins_configure_active, %function
 245              	pins_configure_active:
 246              	.LFB67:
  68:modem.c       **** 
  69:modem.c       **** // Turns on power and configures all UART pin modes
  70:modem.c       **** void pins_configure_active(){
 247              		.loc 1 70 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 1, uses_anonymous_args = 0
 251 0000 80B5     		push	{r7, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 7, -8
 254              		.cfi_offset 14, -4
 255 0002 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
  71:modem.c       ****     
  72:modem.c       ****     Rx_Telit_SetDriveMode(PIN_DM_DIG_HIZ); // Power up. Set RX pin to High Impedance Digital mode.
 257              		.loc 1 72 0
 258 0004 0220     		movs	r0, #2
 259 0006 FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  73:modem.c       ****     Telit_ControlReg_Write(1u); // Pull Telit_ControlReg pin high (turns it on).
 260              		.loc 1 73 0
 261 000a 0120     		movs	r0, #1
 262 000c FFF7FEFF 		bl	Telit_ControlReg_Write
  74:modem.c       ****     Pin_Telit_pwr_Write(ON); // Pulls Telit_pwr pin high (turns it on).
 263              		.loc 1 74 0
 264 0010 0120     		movs	r0, #1
 265 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  75:modem.c       ****     CyDelay(100u); // Give the MOSFET a few ms to stalbilise power 
 266              		.loc 1 75 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 7


 267 0016 6420     		movs	r0, #100
 268 0018 FFF7FEFF 		bl	CyDelay
  76:modem.c       **** }
 269              		.loc 1 76 0
 270 001c 00BF     		nop
 271 001e 80BD     		pop	{r7, pc}
 272              		.cfi_endproc
 273              	.LFE67:
 274              		.size	pins_configure_active, .-pins_configure_active
 275              		.section	.rodata
 276              		.align	2
 277              	.LC0:
 278 0000 4F4B00   		.ascii	"OK\000"
 279 0003 00       		.align	2
 280              	.LC1:
 281 0004 41542353 		.ascii	"AT#SHDN\015\000"
 281      48444E0D 
 281      00
 282              		.section	.text.modem_power_down,"ax",%progbits
 283              		.align	2
 284              		.global	modem_power_down
 285              		.thumb
 286              		.thumb_func
 287              		.type	modem_power_down, %function
 288              	modem_power_down:
 289              	.LFB68:
  77:modem.c       **** 
  78:modem.c       **** // Power down the modem -- completely "kill" modem to conserve power.
  79:modem.c       **** void modem_power_down(){
 290              		.loc 1 79 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294 0000 80B5     		push	{r7, lr}
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 7, -8
 297              		.cfi_offset 14, -4
 298 0002 00AF     		add	r7, sp, #0
 299              		.cfi_def_cfa_register 7
  80:modem.c       ****     // AT Command to modem for Software Shut Down - #SHDN
  81:modem.c       ****     // \r is carriage return, it is necessary for the modem to know it got a command
  82:modem.c       ****     at_write_command("AT#SHDN\r","OK",5000u); 
 300              		.loc 1 82 0
 301 0004 41F28832 		movw	r2, #5000
 302 0008 0A49     		ldr	r1, .L12
 303 000a 0B48     		ldr	r0, .L12+4
 304 000c FFF7FEFF 		bl	at_write_command
  83:modem.c       ****    
  84:modem.c       ****     // Soft power cycle makes sure that the modem is all the way on (like holding on button on for 
  85:modem.c       ****     modem_soft_power_cycle();
 305              		.loc 1 85 0
 306 0010 FFF7FEFF 		bl	modem_soft_power_cycle
  86:modem.c       ****     CyDelay(1000u);
 307              		.loc 1 86 0
 308 0014 4FF47A70 		mov	r0, #1000
 309 0018 FFF7FEFF 		bl	CyDelay
  87:modem.c       ****     
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 8


  88:modem.c       ****     UART_Telit_Stop(); // Disables the UART operation.
 310              		.loc 1 88 0
 311 001c FFF7FEFF 		bl	UART_Telit_Stop
  89:modem.c       ****     isr_telit_rx_Stop(); // Disables and removes the interrupt.
 312              		.loc 1 89 0
 313 0020 FFF7FEFF 		bl	isr_telit_rx_Stop
  90:modem.c       ****     pins_configure_inactive(); // We want the modem power to be "killed" completely to conserve pow
 314              		.loc 1 90 0
 315 0024 FFF7FEFF 		bl	pins_configure_inactive
  91:modem.c       ****     modem_state = MODEM_STATE_OFF;
 316              		.loc 1 91 0
 317 0028 044B     		ldr	r3, .L12+8
 318 002a 0022     		movs	r2, #0
 319 002c 1A70     		strb	r2, [r3]
  92:modem.c       ****     
  93:modem.c       **** }
 320              		.loc 1 93 0
 321 002e 00BF     		nop
 322 0030 80BD     		pop	{r7, pc}
 323              	.L13:
 324 0032 00BF     		.align	2
 325              	.L12:
 326 0034 00000000 		.word	.LC0
 327 0038 04000000 		.word	.LC1
 328 003c 00000000 		.word	modem_state
 329              		.cfi_endproc
 330              	.LFE68:
 331              		.size	modem_power_down, .-modem_power_down
 332              		.section	.rodata
 333 000d 000000   		.align	2
 334              	.LC2:
 335 0010 41544530 		.ascii	"ATE0\015\000"
 335      0D00
 336 0016 0000     		.align	2
 337              	.LC3:
 338 0018 4D6F6465 		.ascii	"Modem boot time: %d\000"
 338      6D20626F 
 338      6F742074 
 338      696D653A 
 338      20256400 
 339              		.align	2
 340              	.LC4:
 341 002c 4D6F6465 		.ascii	"Modem ready for AT commands after %d attempt(s).\000"
 341      6D207265 
 341      61647920 
 341      666F7220 
 341      41542063 
 342 005d 000000   		.align	2
 343              	.LC5:
 344 0060 4E6F2072 		.ascii	"No response from modem.\000"
 344      6573706F 
 344      6E736520 
 344      66726F6D 
 344      206D6F64 
 345              		.section	.text.modem_power_up,"ax",%progbits
 346              		.align	2
 347              		.global	modem_power_up
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 9


 348              		.thumb
 349              		.thumb_func
 350              		.type	modem_power_up, %function
 351              	modem_power_up:
 352              	.LFB69:
  94:modem.c       **** 
  95:modem.c       **** // This puts all the modem pins into a state that won't leak power
  96:modem.c       **** // Please call restore_pins() to bring them abck to function when they are needed for UART
  97:modem.c       **** uint8 modem_power_up(){
 353              		.loc 1 97 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 8
 356              		@ frame_needed = 1, uses_anonymous_args = 0
 357 0000 80B5     		push	{r7, lr}
 358              		.cfi_def_cfa_offset 8
 359              		.cfi_offset 7, -8
 360              		.cfi_offset 14, -4
 361 0002 82B0     		sub	sp, sp, #8
 362              		.cfi_def_cfa_offset 16
 363 0004 00AF     		add	r7, sp, #0
 364              		.cfi_def_cfa_register 7
  98:modem.c       **** 
  99:modem.c       ****     pins_configure_active(); // Turns on power and configures all UART pin modes
 365              		.loc 1 99 0
 366 0006 FFF7FEFF 		bl	pins_configure_active
 100:modem.c       ****     UART_Telit_Start(); // Sets the initVar variable, calls the UART_Telit_Init() function, and the
 367              		.loc 1 100 0
 368 000a FFF7FEFF 		bl	UART_Telit_Start
 101:modem.c       ****     isr_telit_rx_StartEx(isr_telit_rx); // Sets up the interrupt and enables it. 
 369              		.loc 1 101 0
 370 000e 2C48     		ldr	r0, .L27
 371 0010 FFF7FEFF 		bl	isr_telit_rx_StartEx
 102:modem.c       **** 
 103:modem.c       ****     modem_soft_power_cycle(); // Soft power cycle makes sure that the modem is all the way on (like
 372              		.loc 1 103 0
 373 0014 FFF7FEFF 		bl	modem_soft_power_cycle
 104:modem.c       ****     
 105:modem.c       ****     // Turn off ECHO command (doesn't repeat your command back to you).
 106:modem.c       ****     uint8 at_ready = 0;
 374              		.loc 1 106 0
 375 0018 0023     		movs	r3, #0
 376 001a FB71     		strb	r3, [r7, #7]
 107:modem.c       ****     uint8 attempts = 0;
 377              		.loc 1 107 0
 378 001c 0023     		movs	r3, #0
 379 001e 3B71     		strb	r3, [r7, #4]
 108:modem.c       ****     // Create variable boot_time of the current time stamp.
 109:modem.c       ****     long boot_time = getTimeStamp();
 380              		.loc 1 109 0
 381 0020 FFF7FEFF 		bl	getTimeStamp
 382 0024 3860     		str	r0, [r7]
 383              	.LBB2:
 110:modem.c       ****     
 111:modem.c       ****     //it takes the 4G modem 10+secs (max 20) to boot up, so keep hitting it with AT commands until 
 112:modem.c       ****     for(uint8 attempts = 0; attempts<3; attempts++){
 384              		.loc 1 112 0
 385 0026 0023     		movs	r3, #0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 10


 386 0028 BB71     		strb	r3, [r7, #6]
 387 002a 1CE0     		b	.L15
 388              	.L22:
 389              	.LBB3:
 113:modem.c       ****         
 114:modem.c       ****         for(uint8 pwr_check = 0; pwr_check<20; pwr_check++){
 390              		.loc 1 114 0
 391 002c 0023     		movs	r3, #0
 392 002e 7B71     		strb	r3, [r7, #5]
 393 0030 0EE0     		b	.L16
 394              	.L19:
 115:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 116:modem.c       ****             if(at_write_command("ATE0\r","OK",1000u)){
 395              		.loc 1 116 0
 396 0032 4FF47A72 		mov	r2, #1000
 397 0036 2349     		ldr	r1, .L27+4
 398 0038 2348     		ldr	r0, .L27+8
 399 003a FFF7FEFF 		bl	at_write_command
 400 003e 0346     		mov	r3, r0
 401 0040 002B     		cmp	r3, #0
 402 0042 02D0     		beq	.L17
 117:modem.c       ****                 at_ready = 1;
 403              		.loc 1 117 0
 404 0044 0123     		movs	r3, #1
 405 0046 FB71     		strb	r3, [r7, #7]
 118:modem.c       ****                 break;
 406              		.loc 1 118 0
 407 0048 05E0     		b	.L18
 408              	.L17:
 114:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 409              		.loc 1 114 0 discriminator 2
 410 004a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 411 004c 0133     		adds	r3, r3, #1
 412 004e 7B71     		strb	r3, [r7, #5]
 413              	.L16:
 114:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 414              		.loc 1 114 0 is_stmt 0 discriminator 1
 415 0050 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 416 0052 132B     		cmp	r3, #19
 417 0054 EDD9     		bls	.L19
 418              	.L18:
 419              	.LBE3:
 119:modem.c       ****             }
 120:modem.c       ****         }
 121:modem.c       ****             
 122:modem.c       ****         if(at_ready == 1){
 420              		.loc 1 122 0 is_stmt 1
 421 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 422 0058 012B     		cmp	r3, #1
 423 005a 08D0     		beq	.L26
 123:modem.c       ****             break;
 124:modem.c       ****         }else{
 125:modem.c       ****             // Soft power cycle makes sure that the modem is all the way on (like holding on button
 126:modem.c       ****             modem_soft_power_cycle();
 424              		.loc 1 126 0 discriminator 2
 425 005c FFF7FEFF 		bl	modem_soft_power_cycle
 112:modem.c       ****         
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 11


 426              		.loc 1 112 0 discriminator 2
 427 0060 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 428 0062 0133     		adds	r3, r3, #1
 429 0064 BB71     		strb	r3, [r7, #6]
 430              	.L15:
 112:modem.c       ****         
 431              		.loc 1 112 0 is_stmt 0 discriminator 1
 432 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 433 0068 022B     		cmp	r3, #2
 434 006a DFD9     		bls	.L22
 435 006c 00E0     		b	.L21
 436              	.L26:
 123:modem.c       ****             break;
 437              		.loc 1 123 0 is_stmt 1
 438 006e 00BF     		nop
 439              	.L21:
 440              	.LBE2:
 127:modem.c       ****         }
 128:modem.c       ****     }
 129:modem.c       ****     // Calculate boot up time and save to variable boot_time.
 130:modem.c       ****     boot_time = getTimeStamp() - boot_time;
 441              		.loc 1 130 0
 442 0070 FFF7FEFF 		bl	getTimeStamp
 443 0074 0246     		mov	r2, r0
 444 0076 3B68     		ldr	r3, [r7]
 445 0078 D31A     		subs	r3, r2, r3
 446 007a 3B60     		str	r3, [r7]
 131:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Modem boot time: %d",boot_time);
 447              		.loc 1 131 0
 448 007c 3A68     		ldr	r2, [r7]
 449 007e 1349     		ldr	r1, .L27+12
 450 0080 0020     		movs	r0, #0
 451 0082 FFF7FEFF 		bl	printNotif
 132:modem.c       ****    
 133:modem.c       ****     if(at_ready == 1){
 452              		.loc 1 133 0
 453 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 454 0088 012B     		cmp	r3, #1
 455 008a 0AD1     		bne	.L23
 134:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Modem ready for AT commands after %d attempt(s).",attempts);
 456              		.loc 1 134 0
 457 008c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 458 008e 1A46     		mov	r2, r3
 459 0090 0F49     		ldr	r1, .L27+16
 460 0092 0020     		movs	r0, #0
 461 0094 FFF7FEFF 		bl	printNotif
 135:modem.c       ****         modem_state = MODEM_STATE_STARTUP;
 462              		.loc 1 135 0
 463 0098 0E4B     		ldr	r3, .L27+20
 464 009a 0122     		movs	r2, #1
 465 009c 1A70     		strb	r2, [r3]
 136:modem.c       ****     }else{
 137:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"No response from modem.");
 138:modem.c       ****         modem_state = MODEM_STATE_OFF;
 139:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 140:modem.c       ****         modem_power_down();
 141:modem.c       ****         return 0u;
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 12


 142:modem.c       ****     }
 143:modem.c       ****     return 1u;
 466              		.loc 1 143 0
 467 009e 0123     		movs	r3, #1
 468 00a0 09E0     		b	.L25
 469              	.L23:
 137:modem.c       ****         modem_state = MODEM_STATE_OFF;
 470              		.loc 1 137 0
 471 00a2 0D49     		ldr	r1, .L27+24
 472 00a4 0220     		movs	r0, #2
 473 00a6 FFF7FEFF 		bl	printNotif
 138:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 474              		.loc 1 138 0
 475 00aa 0A4B     		ldr	r3, .L27+20
 476 00ac 0022     		movs	r2, #0
 477 00ae 1A70     		strb	r2, [r3]
 140:modem.c       ****         return 0u;
 478              		.loc 1 140 0
 479 00b0 FFF7FEFF 		bl	modem_power_down
 141:modem.c       ****     }
 480              		.loc 1 141 0
 481 00b4 0023     		movs	r3, #0
 482              	.L25:
 144:modem.c       **** }
 483              		.loc 1 144 0
 484 00b6 1846     		mov	r0, r3
 485 00b8 0837     		adds	r7, r7, #8
 486              		.cfi_def_cfa_offset 8
 487 00ba BD46     		mov	sp, r7
 488              		.cfi_def_cfa_register 13
 489              		@ sp needed
 490 00bc 80BD     		pop	{r7, pc}
 491              	.L28:
 492 00be 00BF     		.align	2
 493              	.L27:
 494 00c0 00000000 		.word	isr_telit_rx
 495 00c4 00000000 		.word	.LC0
 496 00c8 10000000 		.word	.LC2
 497 00cc 18000000 		.word	.LC3
 498 00d0 2C000000 		.word	.LC4
 499 00d4 00000000 		.word	modem_state
 500 00d8 60000000 		.word	.LC5
 501              		.cfi_endproc
 502              	.LFE69:
 503              		.size	modem_power_up, .-modem_power_up
 504              		.section	.text.modem_soft_power_cycle,"ax",%progbits
 505              		.align	2
 506              		.global	modem_soft_power_cycle
 507              		.thumb
 508              		.thumb_func
 509              		.type	modem_soft_power_cycle, %function
 510              	modem_soft_power_cycle:
 511              	.LFB70:
 145:modem.c       **** 
 146:modem.c       **** // Puts modem in soft power cycle -- modem has power but isn't all the way on, so soft power cycle 
 147:modem.c       **** void modem_soft_power_cycle(){
 512              		.loc 1 147 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 13


 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 1, uses_anonymous_args = 0
 516 0000 80B5     		push	{r7, lr}
 517              		.cfi_def_cfa_offset 8
 518              		.cfi_offset 7, -8
 519              		.cfi_offset 14, -4
 520 0002 00AF     		add	r7, sp, #0
 521              		.cfi_def_cfa_register 7
 148:modem.c       ****     Pin_Telit_ONOFF_Write(1u); // Pulls Telit_ONOFF pin high
 522              		.loc 1 148 0
 523 0004 0120     		movs	r0, #1
 524 0006 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 149:modem.c       ****     CyDelay(2000u); // Give modem a sec to boot
 525              		.loc 1 149 0
 526 000a 4FF4FA60 		mov	r0, #2000
 527 000e FFF7FEFF 		bl	CyDelay
 150:modem.c       ****     Pin_Telit_ONOFF_Write(0u); // Pulls Telit_ONOFF pin low
 528              		.loc 1 150 0
 529 0012 0020     		movs	r0, #0
 530 0014 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 151:modem.c       ****     
 152:modem.c       **** }
 531              		.loc 1 152 0
 532 0018 00BF     		nop
 533 001a 80BD     		pop	{r7, pc}
 534              		.cfi_endproc
 535              	.LFE70:
 536              		.size	modem_soft_power_cycle, .-modem_soft_power_cycle
 537              		.section	.text.uart_string_reset,"ax",%progbits
 538              		.align	2
 539              		.global	uart_string_reset
 540              		.thumb
 541              		.thumb_func
 542              		.type	uart_string_reset, %function
 543              	uart_string_reset:
 544              	.LFB71:
 153:modem.c       **** 
 154:modem.c       **** // Clear and reset the uart_received_string variable and uart_string_index for the next transmissio
 155:modem.c       **** void uart_string_reset(){
 545              		.loc 1 155 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 1, uses_anonymous_args = 0
 549 0000 80B5     		push	{r7, lr}
 550              		.cfi_def_cfa_offset 8
 551              		.cfi_offset 7, -8
 552              		.cfi_offset 14, -4
 553 0002 00AF     		add	r7, sp, #0
 554              		.cfi_def_cfa_register 7
 156:modem.c       ****     uart_string_index=0;
 555              		.loc 1 156 0
 556 0004 064B     		ldr	r3, .L31
 557 0006 0022     		movs	r2, #0
 558 0008 1A80     		strh	r2, [r3]	@ movhi
 157:modem.c       ****     // memset(void *str, int c, size_t n) copies the character c (an unsigned char) to the first n 
 158:modem.c       ****     memset(uart_received_string,'\0',sizeof(uart_received_string));
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 14


 559              		.loc 1 158 0
 560 000a 4FF48062 		mov	r2, #1024
 561 000e 0021     		movs	r1, #0
 562 0010 0448     		ldr	r0, .L31+4
 563 0012 FFF7FEFF 		bl	memset
 159:modem.c       ****     // Clears the receiver memory buffer and hardware RX FIFO of all received data.
 160:modem.c       ****     UART_Telit_ClearRxBuffer();
 564              		.loc 1 160 0
 565 0016 FFF7FEFF 		bl	UART_Telit_ClearRxBuffer
 161:modem.c       **** }
 566              		.loc 1 161 0
 567 001a 00BF     		nop
 568 001c 80BD     		pop	{r7, pc}
 569              	.L32:
 570 001e 00BF     		.align	2
 571              	.L31:
 572 0020 00000000 		.word	uart_string_index
 573 0024 00000000 		.word	uart_received_string
 574              		.cfi_endproc
 575              	.LFE71:
 576              		.size	uart_string_reset, .-uart_string_reset
 577              		.section	.rodata
 578              		.align	2
 579              	.LC6:
 580 0078 4D6F6465 		.ascii	"Modem sent AT command without timeout: %s\015\012\000"
 580      6D207365 
 580      6E742041 
 580      5420636F 
 580      6D6D616E 
 581              		.align	2
 582              	.LC7:
 583 00a4 4D6F6465 		.ascii	"Modem Received expected AT Response on first Try:\012"
 583      6D205265 
 583      63656976 
 583      65642065 
 583      78706563 
 584 00d6 436F6D6D 		.ascii	"Command: %s\012Received: %s\015\012\000"
 584      616E643A 
 584      2025730A 
 584      52656365 
 584      69766564 
 585 00f1 000000   		.align	2
 586              	.LC8:
 587 00f4 4D6F6465 		.ascii	"Modem required %d tries to receive AT Response: %s\015"
 587      6D207265 
 587      71756972 
 587      65642025 
 587      64207472 
 588 0127 0A00     		.ascii	"\012\000"
 589 0129 000000   		.align	2
 590              	.LC9:
 591 012c 436F756C 		.ascii	"Could not write AT command: %s\012 Received: %s\012"
 591      64206E6F 
 591      74207772 
 591      69746520 
 591      41542063 
 592 0159 00       		.ascii	"\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 15


 593              		.section	.text.at_write_command,"ax",%progbits
 594              		.align	2
 595              		.global	at_write_command
 596              		.thumb
 597              		.thumb_func
 598              		.type	at_write_command, %function
 599              	at_write_command:
 600              	.LFB72:
 162:modem.c       **** 
 163:modem.c       **** // Modem controlled  via  the  serial  interface  using  the  standard  AT commands.
 164:modem.c       **** // AT is an ATTENTION command and is used as a prefix to other parameters in a string. 
 165:modem.c       **** // Sends commands to the modem
 166:modem.c       **** uint8_t at_write_command(char* commands, char* expected_response,uint32_t timeout){
 601              		.loc 1 166 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 40
 604              		@ frame_needed = 1, uses_anonymous_args = 0
 605 0000 80B5     		push	{r7, lr}
 606              		.cfi_def_cfa_offset 8
 607              		.cfi_offset 7, -8
 608              		.cfi_offset 14, -4
 609 0002 8AB0     		sub	sp, sp, #40
 610              		.cfi_def_cfa_offset 48
 611 0004 00AF     		add	r7, sp, #0
 612              		.cfi_def_cfa_register 7
 613 0006 F860     		str	r0, [r7, #12]
 614 0008 B960     		str	r1, [r7, #8]
 615 000a 7A60     		str	r2, [r7, #4]
 167:modem.c       **** 
 168:modem.c       ****     uint32 at_attempt = 0;
 616              		.loc 1 168 0
 617 000c 0023     		movs	r3, #0
 618 000e 7B62     		str	r3, [r7, #36]
 169:modem.c       ****     
 170:modem.c       ****     for(at_attempt = 0; at_attempt < 3; at_attempt++) {
 619              		.loc 1 170 0
 620 0010 0023     		movs	r3, #0
 621 0012 7B62     		str	r3, [r7, #36]
 622 0014 46E0     		b	.L34
 623              	.L42:
 624              	.LBB4:
 171:modem.c       ****         
 172:modem.c       ****         char* compare_location;
 173:modem.c       ****         uint32_t delay=10;
 625              		.loc 1 173 0
 626 0016 0A23     		movs	r3, #10
 627 0018 FB61     		str	r3, [r7, #28]
 174:modem.c       ****         uint32_t i, interval=timeout/delay;        
 628              		.loc 1 174 0
 629 001a 7A68     		ldr	r2, [r7, #4]
 630 001c FB69     		ldr	r3, [r7, #28]
 631 001e B2FBF3F3 		udiv	r3, r2, r3
 632 0022 BB61     		str	r3, [r7, #24]
 175:modem.c       ****         
 176:modem.c       ****         // Clear and reset the uart_received_string variable and uart_string_index for the next tra
 177:modem.c       ****         uart_string_reset();
 633              		.loc 1 177 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 16


 634 0024 FFF7FEFF 		bl	uart_string_reset
 178:modem.c       ****         
 179:modem.c       ****         // Sends a NULL terminated string to the TX buffer for transmission.
 180:modem.c       ****         UART_Telit_PutString(commands);
 635              		.loc 1 180 0
 636 0028 F868     		ldr	r0, [r7, #12]
 637 002a FFF7FEFF 		bl	UART_Telit_PutString
 181:modem.c       ****         
 182:modem.c       ****         
 183:modem.c       ****         // If no timeout, no need to wait for response
 184:modem.c       ****         if(timeout == NO_AT_TIMEOUT){
 638              		.loc 1 184 0
 639 002e 7B68     		ldr	r3, [r7, #4]
 640 0030 002B     		cmp	r3, #0
 641 0032 06D1     		bne	.L35
 185:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem sent AT command without timeout: %s\r\n", commands);
 642              		.loc 1 185 0
 643 0034 FA68     		ldr	r2, [r7, #12]
 644 0036 1F49     		ldr	r1, .L43
 645 0038 0020     		movs	r0, #0
 646 003a FFF7FEFF 		bl	printNotif
 186:modem.c       ****             return 1u;
 647              		.loc 1 186 0
 648 003e 0123     		movs	r3, #1
 649 0040 34E0     		b	.L36
 650              	.L35:
 187:modem.c       ****         }
 188:modem.c       ****       
 189:modem.c       ****      
 190:modem.c       ****         for(i=0;i<interval;i++){ 
 651              		.loc 1 190 0
 652 0042 0023     		movs	r3, #0
 653 0044 3B62     		str	r3, [r7, #32]
 654 0046 20E0     		b	.L37
 655              	.L41:
 191:modem.c       ****             CyDelay((uint32) delay);
 656              		.loc 1 191 0
 657 0048 F869     		ldr	r0, [r7, #28]
 658 004a FFF7FEFF 		bl	CyDelay
 192:modem.c       ****             // strstr(const char *haystack, const char *needle) function finds the first occurrence
 193:modem.c       ****             // Returns a pointer to the first occurrence in haystack of any of the entire sequence 
 194:modem.c       ****             compare_location=strstr(uart_received_string,expected_response);        
 659              		.loc 1 194 0
 660 004e B968     		ldr	r1, [r7, #8]
 661 0050 1948     		ldr	r0, .L43+4
 662 0052 FFF7FEFF 		bl	strstr
 663 0056 7861     		str	r0, [r7, #20]
 195:modem.c       ****             if(compare_location!=NULL) {
 664              		.loc 1 195 0
 665 0058 7B69     		ldr	r3, [r7, #20]
 666 005a 002B     		cmp	r3, #0
 667 005c 12D0     		beq	.L38
 196:modem.c       ****                 if (at_attempt == 0){
 668              		.loc 1 196 0
 669 005e 7B6A     		ldr	r3, [r7, #36]
 670 0060 002B     		cmp	r3, #0
 671 0062 06D1     		bne	.L39
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 17


 197:modem.c       ****                     // we add \n for new line to make it easier to decipher
 198:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT,"Modem Received expected AT Response on first Try:\
 672              		.loc 1 198 0
 673 0064 144B     		ldr	r3, .L43+4
 674 0066 FA68     		ldr	r2, [r7, #12]
 675 0068 1449     		ldr	r1, .L43+8
 676 006a 0020     		movs	r0, #0
 677 006c FFF7FEFF 		bl	printNotif
 678 0070 06E0     		b	.L40
 679              	.L39:
 199:modem.c       ****                 }else{
 200:modem.c       ****                     printNotif(NOTIF_TYPE_WARNING,"Modem required %d tries to receive AT Response: 
 680              		.loc 1 200 0
 681 0072 7B6A     		ldr	r3, [r7, #36]
 682 0074 5A1C     		adds	r2, r3, #1
 683 0076 104B     		ldr	r3, .L43+4
 684 0078 1149     		ldr	r1, .L43+12
 685 007a 0120     		movs	r0, #1
 686 007c FFF7FEFF 		bl	printNotif
 687              	.L40:
 201:modem.c       ****                  
 202:modem.c       ****                 }
 203:modem.c       ****                 return(1);
 688              		.loc 1 203 0
 689 0080 0123     		movs	r3, #1
 690 0082 13E0     		b	.L36
 691              	.L38:
 190:modem.c       ****             CyDelay((uint32) delay);
 692              		.loc 1 190 0 discriminator 2
 693 0084 3B6A     		ldr	r3, [r7, #32]
 694 0086 0133     		adds	r3, r3, #1
 695 0088 3B62     		str	r3, [r7, #32]
 696              	.L37:
 190:modem.c       ****             CyDelay((uint32) delay);
 697              		.loc 1 190 0 is_stmt 0 discriminator 1
 698 008a 3A6A     		ldr	r2, [r7, #32]
 699 008c BB69     		ldr	r3, [r7, #24]
 700 008e 9A42     		cmp	r2, r3
 701 0090 DAD3     		bcc	.L41
 204:modem.c       ****             }
 205:modem.c       ****             
 206:modem.c       ****         }  
 207:modem.c       ****         
 208:modem.c       ****         // Something went wrong, restart UART
 209:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not write AT command: %s\n Received: %s\n", commands,uar
 702              		.loc 1 209 0 is_stmt 1 discriminator 2
 703 0092 094B     		ldr	r3, .L43+4
 704 0094 FA68     		ldr	r2, [r7, #12]
 705 0096 0B49     		ldr	r1, .L43+16
 706 0098 0220     		movs	r0, #2
 707 009a FFF7FEFF 		bl	printNotif
 708              	.LBE4:
 170:modem.c       ****         
 709              		.loc 1 170 0 discriminator 2
 710 009e 7B6A     		ldr	r3, [r7, #36]
 711 00a0 0133     		adds	r3, r3, #1
 712 00a2 7B62     		str	r3, [r7, #36]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 18


 713              	.L34:
 170:modem.c       ****         
 714              		.loc 1 170 0 is_stmt 0 discriminator 1
 715 00a4 7B6A     		ldr	r3, [r7, #36]
 716 00a6 022B     		cmp	r3, #2
 717 00a8 B5D9     		bls	.L42
 210:modem.c       ****       
 211:modem.c       ****     }
 212:modem.c       ****    // printNotif(NOTIF_TYPE_ERROR,"Modem AT response timeout: %s\r\n", commands);
 213:modem.c       ****           
 214:modem.c       ****     return(0);    
 718              		.loc 1 214 0 is_stmt 1
 719 00aa 0023     		movs	r3, #0
 720              	.L36:
 215:modem.c       **** }
 721              		.loc 1 215 0
 722 00ac 1846     		mov	r0, r3
 723 00ae 2837     		adds	r7, r7, #40
 724              		.cfi_def_cfa_offset 8
 725 00b0 BD46     		mov	sp, r7
 726              		.cfi_def_cfa_register 13
 727              		@ sp needed
 728 00b2 80BD     		pop	{r7, pc}
 729              	.L44:
 730              		.align	2
 731              	.L43:
 732 00b4 78000000 		.word	.LC6
 733 00b8 00000000 		.word	uart_received_string
 734 00bc A4000000 		.word	.LC7
 735 00c0 F4000000 		.word	.LC8
 736 00c4 2C010000 		.word	.LC9
 737              		.cfi_endproc
 738              	.LFE72:
 739              		.size	at_write_command, .-at_write_command
 740              		.section	.rodata
 741 015a 0000     		.align	2
 742              	.LC10:
 743 015c 54455354 		.ascii	"TEST_MODEM\000"
 743      5F4D4F44 
 743      454D00
 744 0167 00       		.align	2
 745              	.LC11:
 746 0168 4E6F2072 		.ascii	"No reponse from modem.\000"
 746      65706F6E 
 746      73652066 
 746      726F6D20 
 746      6D6F6465 
 747 017f 00       		.align	2
 748              	.LC12:
 749 0180 4D6F6465 		.ascii	"Modem connected to network.\000"
 749      6D20636F 
 749      6E6E6563 
 749      74656420 
 749      746F206E 
 750              		.section	.text.modem_test,"ax",%progbits
 751              		.align	2
 752              		.global	modem_test
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 19


 753              		.thumb
 754              		.thumb_func
 755              		.type	modem_test, %function
 756              	modem_test:
 757              	.LFB73:
 216:modem.c       **** 
 217:modem.c       **** // Test modem -- needs fleshed out
 218:modem.c       **** test_t modem_test(){
 758              		.loc 1 218 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 408
 761              		@ frame_needed = 1, uses_anonymous_args = 0
 762 0000 B0B5     		push	{r4, r5, r7, lr}
 763              		.cfi_def_cfa_offset 16
 764              		.cfi_offset 4, -16
 765              		.cfi_offset 5, -12
 766              		.cfi_offset 7, -8
 767              		.cfi_offset 14, -4
 768 0002 E6B0     		sub	sp, sp, #408
 769              		.cfi_def_cfa_offset 424
 770 0004 00AF     		add	r7, sp, #0
 771              		.cfi_def_cfa_register 7
 772 0006 3B1D     		adds	r3, r7, #4
 773 0008 1860     		str	r0, [r3]
 219:modem.c       ****     
 220:modem.c       ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
 221:modem.c       ****     test.status = 0;
 774              		.loc 1 221 0
 775 000a 07F10C03 		add	r3, r7, #12
 776 000e 0022     		movs	r2, #0
 777 0010 83F88020 		strb	r2, [r3, #128]
 222:modem.c       ****     // Print test name and test reason
 223:modem.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_MODEM");
 778              		.loc 1 223 0
 779 0014 07F10C03 		add	r3, r7, #12
 780 0018 364A     		ldr	r2, .L53
 781 001a 07CA     		ldmia	r2, {r0, r1, r2}
 782 001c 03C3     		stmia	r3!, {r0, r1}
 783 001e 1A80     		strh	r2, [r3]	@ movhi
 784 0020 0233     		adds	r3, r3, #2
 785 0022 120C     		lsrs	r2, r2, #16
 786 0024 1A70     		strb	r2, [r3]
 224:modem.c       ****     snprintf(test.reason,sizeof(test.reason),"No reponse from modem.");
 787              		.loc 1 224 0
 788 0026 07F10C03 		add	r3, r7, #12
 789 002a 8133     		adds	r3, r3, #129
 790 002c 324A     		ldr	r2, .L53+4
 791 002e 1C46     		mov	r4, r3
 792 0030 1546     		mov	r5, r2
 793 0032 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 794 0034 2060     		str	r0, [r4]	@ unaligned
 795 0036 6160     		str	r1, [r4, #4]	@ unaligned
 796 0038 A260     		str	r2, [r4, #8]	@ unaligned
 797 003a E360     		str	r3, [r4, #12]	@ unaligned
 798 003c 2868     		ldr	r0, [r5]	@ unaligned
 799 003e 2061     		str	r0, [r4, #16]	@ unaligned
 800 0040 AB88     		ldrh	r3, [r5, #4]	@ unaligned
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 20


 801 0042 AA79     		ldrb	r2, [r5, #6]
 802 0044 A382     		strh	r3, [r4, #20]	@ unaligned
 803 0046 1346     		mov	r3, r2
 804 0048 A375     		strb	r3, [r4, #22]
 805              	.LBB5:
 225:modem.c       ****    
 226:modem.c       ****     //try the modem 60*1000ms (60 secs)
 227:modem.c       ****     for(int i = 0; i< 60; i++){
 806              		.loc 1 227 0
 807 004a 0023     		movs	r3, #0
 808 004c C7F89431 		str	r3, [r7, #404]
 809 0050 3AE0     		b	.L46
 810              	.L51:
 228:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 229:modem.c       ****         modem_process_tasks();
 811              		.loc 1 229 0
 812 0052 FFF7FEFF 		bl	modem_process_tasks
 230:modem.c       ****          
 231:modem.c       ****         if(modem_get_state() == MODEM_STATE_OFF){
 813              		.loc 1 231 0
 814 0056 FFF7FEFF 		bl	modem_get_state
 815 005a 0346     		mov	r3, r0
 816 005c 002B     		cmp	r3, #0
 817 005e 02D1     		bne	.L47
 232:modem.c       ****             // This puts all the modem points into a state that won't leak power
 233:modem.c       ****             modem_power_up();
 818              		.loc 1 233 0
 819 0060 FFF7FEFF 		bl	modem_power_up
 820 0064 27E0     		b	.L48
 821              	.L47:
 234:modem.c       ****             // Should put this on a max_try counter, so we don't just keep trying to connect over a
 235:modem.c       ****             
 236:modem.c       ****         }else if(modem_get_state() == MODEM_STATE_READY){
 822              		.loc 1 236 0
 823 0066 FFF7FEFF 		bl	modem_get_state
 824 006a 0346     		mov	r3, r0
 825 006c 042B     		cmp	r3, #4
 826 006e 22D1     		bne	.L48
 827              	.LBB6:
 237:modem.c       ****         
 238:modem.c       ****         
 239:modem.c       ****         // Get time, and if it looks good, set the RTC with it
 240:modem.c       ****         long network_time = modem_get_network_time();
 828              		.loc 1 240 0
 829 0070 FFF7FEFF 		bl	modem_get_network_time
 830 0074 C7F89001 		str	r0, [r7, #400]
 241:modem.c       ****         if(network_time != 0){
 831              		.loc 1 241 0
 832 0078 D7F89031 		ldr	r3, [r7, #400]
 833 007c 002B     		cmp	r3, #0
 834 007e 03D0     		beq	.L49
 242:modem.c       ****             setTime(network_time); // Set the system time 
 835              		.loc 1 242 0
 836 0080 D7F89001 		ldr	r0, [r7, #400]
 837 0084 FFF7FEFF 		bl	setTime
 838              	.L49:
 243:modem.c       ****         }
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 21


 244:modem.c       ****             
 245:modem.c       ****         snprintf(test.reason,sizeof(test.reason),"Modem connected to network.");
 839              		.loc 1 245 0
 840 0088 07F10C03 		add	r3, r7, #12
 841 008c 8133     		adds	r3, r3, #129
 842 008e 1B4A     		ldr	r2, .L53+8
 843 0090 1D46     		mov	r5, r3
 844 0092 1446     		mov	r4, r2
 845 0094 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 846 0096 2860     		str	r0, [r5]	@ unaligned
 847 0098 6960     		str	r1, [r5, #4]	@ unaligned
 848 009a AA60     		str	r2, [r5, #8]	@ unaligned
 849 009c EB60     		str	r3, [r5, #12]	@ unaligned
 850 009e 07CC     		ldmia	r4!, {r0, r1, r2}
 851 00a0 2861     		str	r0, [r5, #16]	@ unaligned
 852 00a2 6961     		str	r1, [r5, #20]	@ unaligned
 853 00a4 AA61     		str	r2, [r5, #24]	@ unaligned
 246:modem.c       ****         test.status = 1;
 854              		.loc 1 246 0
 855 00a6 07F10C03 		add	r3, r7, #12
 856 00aa 0122     		movs	r2, #1
 857 00ac 83F88020 		strb	r2, [r3, #128]
 247:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 248:modem.c       ****         modem_power_down();
 858              		.loc 1 248 0
 859 00b0 FFF7FEFF 		bl	modem_power_down
 249:modem.c       ****         break;
 860              		.loc 1 249 0
 861 00b4 0CE0     		b	.L50
 862              	.L48:
 863              	.LBE6:
 250:modem.c       ****         
 251:modem.c       ****       }
 252:modem.c       ****         CyDelay(1000u);
 864              		.loc 1 252 0 discriminator 2
 865 00b6 4FF47A70 		mov	r0, #1000
 866 00ba FFF7FEFF 		bl	CyDelay
 227:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 867              		.loc 1 227 0 discriminator 2
 868 00be D7F89431 		ldr	r3, [r7, #404]
 869 00c2 0133     		adds	r3, r3, #1
 870 00c4 C7F89431 		str	r3, [r7, #404]
 871              	.L46:
 227:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 872              		.loc 1 227 0 is_stmt 0 discriminator 1
 873 00c8 D7F89431 		ldr	r3, [r7, #404]
 874 00cc 3B2B     		cmp	r3, #59
 875 00ce C0DD     		ble	.L51
 876              	.L50:
 877              	.LBE5:
 253:modem.c       ****         
 254:modem.c       ****     }
 255:modem.c       ****     
 256:modem.c       ****     return test;
 878              		.loc 1 256 0 is_stmt 1
 879 00d0 3B1D     		adds	r3, r7, #4
 880 00d2 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 22


 881 00d4 07F10C03 		add	r3, r7, #12
 882 00d8 1046     		mov	r0, r2
 883 00da 1946     		mov	r1, r3
 884 00dc 40F28113 		movw	r3, #385
 885 00e0 1A46     		mov	r2, r3
 886 00e2 FFF7FEFF 		bl	memcpy
 257:modem.c       **** }
 887              		.loc 1 257 0
 888 00e6 3B1D     		adds	r3, r7, #4
 889 00e8 1868     		ldr	r0, [r3]
 890 00ea 07F5CC77 		add	r7, r7, #408
 891              		.cfi_def_cfa_offset 16
 892 00ee BD46     		mov	sp, r7
 893              		.cfi_def_cfa_register 13
 894              		@ sp needed
 895 00f0 B0BD     		pop	{r4, r5, r7, pc}
 896              	.L54:
 897 00f2 00BF     		.align	2
 898              	.L53:
 899 00f4 5C010000 		.word	.LC10
 900 00f8 68010000 		.word	.LC11
 901 00fc 80010000 		.word	.LC12
 902              		.cfi_endproc
 903              	.LFE73:
 904              		.size	modem_test, .-modem_test
 905              		.section	.text.extract_string,"ax",%progbits
 906              		.align	2
 907              		.global	extract_string
 908              		.thumb
 909              		.thumb_func
 910              		.type	extract_string, %function
 911              	extract_string:
 912              	.LFB74:
 258:modem.c       **** 
 259:modem.c       **** // Extract string from the UART
 260:modem.c       **** uint8 extract_string(char* from, const char* beginMarker, const char* endMarker,  char* target){
 913              		.loc 1 260 0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 24
 916              		@ frame_needed = 1, uses_anonymous_args = 0
 917 0000 80B5     		push	{r7, lr}
 918              		.cfi_def_cfa_offset 8
 919              		.cfi_offset 7, -8
 920              		.cfi_offset 14, -4
 921 0002 86B0     		sub	sp, sp, #24
 922              		.cfi_def_cfa_offset 32
 923 0004 00AF     		add	r7, sp, #0
 924              		.cfi_def_cfa_register 7
 925 0006 F860     		str	r0, [r7, #12]
 926 0008 B960     		str	r1, [r7, #8]
 927 000a 7A60     		str	r2, [r7, #4]
 928 000c 3B60     		str	r3, [r7]
 261:modem.c       ****     
 262:modem.c       ****         char *a, *b;
 263:modem.c       ****   
 264:modem.c       ****         // Expect the UART to contain something like "+CESQ: ##,##,##,##,##,##\r\n\r\nOK"
 265:modem.c       ****         // - Search for "+CESQ: ".  Place the starting pointer, a, at the resulting index
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 23


 266:modem.c       ****         a = strstr(from,beginMarker);
 929              		.loc 1 266 0
 930 000e B968     		ldr	r1, [r7, #8]
 931 0010 F868     		ldr	r0, [r7, #12]
 932 0012 FFF7FEFF 		bl	strstr
 933 0016 7861     		str	r0, [r7, #20]
 267:modem.c       ****         if (a == NULL) {
 934              		.loc 1 267 0
 935 0018 7B69     		ldr	r3, [r7, #20]
 936 001a 002B     		cmp	r3, #0
 937 001c 01D1     		bne	.L56
 268:modem.c       ****             //puts("+CESQ: not found in uart_received_string");
 269:modem.c       ****             a = from;
 938              		.loc 1 269 0
 939 001e FB68     		ldr	r3, [r7, #12]
 940 0020 7B61     		str	r3, [r7, #20]
 941              	.L56:
 270:modem.c       ****         }
 271:modem.c       ****         // The strlen() function calculates the length of a given string.
 272:modem.c       ****         a += strlen(beginMarker);
 942              		.loc 1 272 0
 943 0022 B868     		ldr	r0, [r7, #8]
 944 0024 FFF7FEFF 		bl	strlen
 945 0028 0246     		mov	r2, r0
 946 002a 7B69     		ldr	r3, [r7, #20]
 947 002c 1344     		add	r3, r3, r2
 948 002e 7B61     		str	r3, [r7, #20]
 273:modem.c       ****         
 274:modem.c       ****         // - Find the end marking and offset by 1
 275:modem.c       ****         // strstr(const char *haystack, const char *needle) function finds the first occurrence of 
 276:modem.c       ****         // Returns a pointer to the first occurrence in haystack of any of the entire sequence of c
 277:modem.c       ****         b = strstr(a,endMarker);
 949              		.loc 1 277 0
 950 0030 7968     		ldr	r1, [r7, #4]
 951 0032 7869     		ldr	r0, [r7, #20]
 952 0034 FFF7FEFF 		bl	strstr
 953 0038 3861     		str	r0, [r7, #16]
 278:modem.c       ****         if (b == NULL) {
 954              		.loc 1 278 0
 955 003a 3B69     		ldr	r3, [r7, #16]
 956 003c 002B     		cmp	r3, #0
 957 003e 06D1     		bne	.L57
 279:modem.c       ****             // Puts("Comma not found in uart_received_string");
 280:modem.c       ****             b=from+strlen(from);
 958              		.loc 1 280 0
 959 0040 F868     		ldr	r0, [r7, #12]
 960 0042 FFF7FEFF 		bl	strlen
 961 0046 0246     		mov	r2, r0
 962 0048 FB68     		ldr	r3, [r7, #12]
 963 004a 1344     		add	r3, r3, r2
 964 004c 3B61     		str	r3, [r7, #16]
 965              	.L57:
 281:modem.c       ****         }        
 282:modem.c       ****         
 283:modem.c       ****         // Parse the strings and store the respective rssi and fer values
 284:modem.c       ****         strncpy(target,a,b-a);
 966              		.loc 1 284 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 24


 967 004e 3A69     		ldr	r2, [r7, #16]
 968 0050 7B69     		ldr	r3, [r7, #20]
 969 0052 D31A     		subs	r3, r2, r3
 970 0054 1A46     		mov	r2, r3
 971 0056 7969     		ldr	r1, [r7, #20]
 972 0058 3868     		ldr	r0, [r7]
 973 005a FFF7FEFF 		bl	strncpy
 285:modem.c       ****         target[b-a] = '\0';
 974              		.loc 1 285 0
 975 005e 3A69     		ldr	r2, [r7, #16]
 976 0060 7B69     		ldr	r3, [r7, #20]
 977 0062 D31A     		subs	r3, r2, r3
 978 0064 1A46     		mov	r2, r3
 979 0066 3B68     		ldr	r3, [r7]
 980 0068 1344     		add	r3, r3, r2
 981 006a 0022     		movs	r2, #0
 982 006c 1A70     		strb	r2, [r3]
 286:modem.c       ****         return 1u;
 983              		.loc 1 286 0
 984 006e 0123     		movs	r3, #1
 287:modem.c       ****         
 288:modem.c       **** }
 985              		.loc 1 288 0
 986 0070 1846     		mov	r0, r3
 987 0072 1837     		adds	r7, r7, #24
 988              		.cfi_def_cfa_offset 8
 989 0074 BD46     		mov	sp, r7
 990              		.cfi_def_cfa_register 13
 991              		@ sp needed
 992 0076 80BD     		pop	{r7, pc}
 993              		.cfi_endproc
 994              	.LFE74:
 995              		.size	extract_string, .-extract_string
 996              		.section	.rodata
 997              		.align	2
 998              	.LC13:
 999 019c 54696D65 		.ascii	"Time to connect to network: %d seconds\000"
 999      20746F20 
 999      636F6E6E 
 999      65637420 
 999      746F206E 
 1000 01c3 00       		.align	2
 1001              	.LC14:
 1002 01c4 4D6F6465 		.ascii	"Modem timed out on network connect\000"
 1002      6D207469 
 1002      6D656420 
 1002      6F757420 
 1002      6F6E206E 
 1003 01e7 00       		.align	2
 1004              	.LC15:
 1005 01e8 41637175 		.ascii	"Acquired IP address: %d seconds\000"
 1005      69726564 
 1005      20495020 
 1005      61646472 
 1005      6573733A 
 1006              		.align	2
 1007              	.LC16:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 25


 1008 0208 4D6F6465 		.ascii	"Modem timed out on IP address acquire.\000"
 1008      6D207469 
 1008      6D656420 
 1008      6F757420 
 1008      6F6E2049 
 1009              		.section	.text.modem_process_tasks,"ax",%progbits
 1010              		.align	2
 1011              		.global	modem_process_tasks
 1012              		.thumb
 1013              		.thumb_func
 1014              		.type	modem_process_tasks, %function
 1015              	modem_process_tasks:
 1016              	.LFB75:
 289:modem.c       **** 
 290:modem.c       **** // Function to startup the modem, connect to the network, and then hand it off to sleep
 291:modem.c       **** uint8 modem_process_tasks(){
 1017              		.loc 1 291 0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 8
 1020              		@ frame_needed = 1, uses_anonymous_args = 0
 1021 0000 80B5     		push	{r7, lr}
 1022              		.cfi_def_cfa_offset 8
 1023              		.cfi_offset 7, -8
 1024              		.cfi_offset 14, -4
 1025 0002 82B0     		sub	sp, sp, #8
 1026              		.cfi_def_cfa_offset 16
 1027 0004 00AF     		add	r7, sp, #0
 1028              		.cfi_def_cfa_register 7
 292:modem.c       ****     // If modem state is "startup" then get the modem start time, configure modem settings, and cha
 293:modem.c       ****     if(modem_state == MODEM_STATE_STARTUP){
 1029              		.loc 1 293 0
 1030 0006 534B     		ldr	r3, .L75
 1031 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1032 000a 012B     		cmp	r3, #1
 1033 000c 0BD1     		bne	.L60
 294:modem.c       ****         
 295:modem.c       ****         modem_start_time_stamp = getTimeStamp(); // Get timestamp for modem start time
 1034              		.loc 1 295 0
 1035 000e FFF7FEFF 		bl	getTimeStamp
 1036 0012 0246     		mov	r2, r0
 1037 0014 504B     		ldr	r3, .L75+4
 1038 0016 1A60     		str	r2, [r3]
 296:modem.c       ****         modem_configure_settings(); // Configure modem settings
 1039              		.loc 1 296 0
 1040 0018 FFF7FEFF 		bl	modem_configure_settings
 297:modem.c       ****         modem_state = MODEM_STATE_WAITING_FOR_NETWORK; // Change modem state 
 1041              		.loc 1 297 0
 1042 001c 4D4B     		ldr	r3, .L75
 1043 001e 0222     		movs	r2, #2
 1044 0020 1A70     		strb	r2, [r3]
 298:modem.c       ****         return 1u; // Keep going, don't hand off to sleep yet
 1045              		.loc 1 298 0
 1046 0022 0123     		movs	r3, #1
 1047 0024 92E0     		b	.L61
 1048              	.L60:
 299:modem.c       ****         
 300:modem.c       ****     }
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 26


 301:modem.c       ****     // Else if modem state is "waiting for network" 
 302:modem.c       ****     else if(modem_state == MODEM_STATE_WAITING_FOR_NETWORK){
 1049              		.loc 1 302 0
 1050 0026 4B4B     		ldr	r3, .L75
 1051 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1052 002a 022B     		cmp	r3, #2
 1053 002c 5FD1     		bne	.L62
 1054              	.LBB7:
 303:modem.c       ****         
 304:modem.c       ****         // Check if modem has a good cell signal each second for up to 30 seconds
 305:modem.c       ****         for(uint8 i=0;i<30;i++){
 1055              		.loc 1 305 0
 1056 002e 0023     		movs	r3, #0
 1057 0030 FB71     		strb	r3, [r7, #7]
 1058 0032 2BE0     		b	.L63
 1059              	.L68:
 306:modem.c       ****             // Get cell network stats
 307:modem.c       ****             get_cell_network_stats();
 1060              		.loc 1 307 0
 1061 0034 FFF7FEFF 		bl	get_cell_network_stats
 308:modem.c       ****             // If SIM is standard, check rsrp
 309:modem.c       ****             if(updatable_parameters.sim_type == SIM_TYPE_STANDARD){
 1062              		.loc 1 309 0
 1063 0038 484B     		ldr	r3, .L75+8
 1064 003a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1065 003c 83F00103 		eor	r3, r3, #1
 1066 0040 DBB2     		uxtb	r3, r3
 1067 0042 002B     		cmp	r3, #0
 1068 0044 07D0     		beq	.L64
 310:modem.c       ****                 // If cell signal (rsrp) is strong enough, break and connect to the network
 311:modem.c       ****                 // Otherwise, keep checking rsrp
 312:modem.c       ****                 if(modem_stats.rsrp > 26 && modem_stats.rsrp != 255){
 1069              		.loc 1 312 0
 1070 0046 464B     		ldr	r3, .L75+12
 1071 0048 5B69     		ldr	r3, [r3, #20]
 1072 004a 1A2B     		cmp	r3, #26
 1073 004c 03DD     		ble	.L64
 1074              		.loc 1 312 0 is_stmt 0 discriminator 1
 1075 004e 444B     		ldr	r3, .L75+12
 1076 0050 5B69     		ldr	r3, [r3, #20]
 1077 0052 FF2B     		cmp	r3, #255
 1078 0054 1ED1     		bne	.L74
 1079              	.L64:
 313:modem.c       ****                     break;
 314:modem.c       ****                 }
 315:modem.c       ****             }
 316:modem.c       ****             // If SIM is super, check if rsrp or rscp are strong enough
 317:modem.c       ****             if(updatable_parameters.sim_type == SIM_TYPE_SUPER){
 1080              		.loc 1 317 0 is_stmt 1
 1081 0056 414B     		ldr	r3, .L75+8
 1082 0058 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1083 005a 002B     		cmp	r3, #0
 1084 005c 0FD0     		beq	.L66
 318:modem.c       ****                 // If cell signal is strong enough, break and connect to the network
 319:modem.c       ****                 // Otherwise, keep checking rsrp or rscp
 320:modem.c       ****                 if((modem_stats.rscp > 36 && modem_stats.rscp != 255)||(modem_stats.rsrp > 26 && mo
 1085              		.loc 1 320 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 27


 1086 005e 404B     		ldr	r3, .L75+12
 1087 0060 9B68     		ldr	r3, [r3, #8]
 1088 0062 242B     		cmp	r3, #36
 1089 0064 03DD     		ble	.L67
 1090              		.loc 1 320 0 is_stmt 0 discriminator 1
 1091 0066 3E4B     		ldr	r3, .L75+12
 1092 0068 9B68     		ldr	r3, [r3, #8]
 1093 006a FF2B     		cmp	r3, #255
 1094 006c 13D1     		bne	.L65
 1095              	.L67:
 1096              		.loc 1 320 0 discriminator 3
 1097 006e 3C4B     		ldr	r3, .L75+12
 1098 0070 5B69     		ldr	r3, [r3, #20]
 1099 0072 1A2B     		cmp	r3, #26
 1100 0074 03DD     		ble	.L66
 1101              		.loc 1 320 0 discriminator 4
 1102 0076 3A4B     		ldr	r3, .L75+12
 1103 0078 5B69     		ldr	r3, [r3, #20]
 1104 007a FF2B     		cmp	r3, #255
 1105 007c 0BD1     		bne	.L65
 1106              	.L66:
 321:modem.c       ****                     break;
 322:modem.c       ****                 }
 323:modem.c       ****             }
 324:modem.c       ****             // Delay for 1 second
 325:modem.c       ****             CyDelay(1000u);
 1107              		.loc 1 325 0 is_stmt 1 discriminator 2
 1108 007e 4FF47A70 		mov	r0, #1000
 1109 0082 FFF7FEFF 		bl	CyDelay
 305:modem.c       ****             // Get cell network stats
 1110              		.loc 1 305 0 discriminator 2
 1111 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1112 0088 0133     		adds	r3, r3, #1
 1113 008a FB71     		strb	r3, [r7, #7]
 1114              	.L63:
 305:modem.c       ****             // Get cell network stats
 1115              		.loc 1 305 0 is_stmt 0 discriminator 1
 1116 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1117 008e 1D2B     		cmp	r3, #29
 1118 0090 D0D9     		bls	.L68
 1119 0092 00E0     		b	.L65
 1120              	.L74:
 313:modem.c       ****                 }
 1121              		.loc 1 313 0 is_stmt 1
 1122 0094 00BF     		nop
 1123              	.L65:
 1124              	.LBE7:
 326:modem.c       ****         }
 327:modem.c       ****         
 328:modem.c       ****         // If modem connected to the cell network, save/print the time to connect to the network
 329:modem.c       ****         if(is_connected_to_cell_network()){
 1125              		.loc 1 329 0
 1126 0096 FFF7FEFF 		bl	is_connected_to_cell_network
 1127 009a 0346     		mov	r3, r0
 1128 009c 002B     		cmp	r3, #0
 1129 009e 13D0     		beq	.L69
 330:modem.c       ****       
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 28


 331:modem.c       ****              modem_stats.time_to_network_connect = (int)(getTimeStamp() - (int32)modem_start_time_s
 1130              		.loc 1 331 0
 1131 00a0 FFF7FEFF 		bl	getTimeStamp
 1132 00a4 0246     		mov	r2, r0
 1133 00a6 2C4B     		ldr	r3, .L75+4
 1134 00a8 1B68     		ldr	r3, [r3]
 1135 00aa D31A     		subs	r3, r2, r3
 1136 00ac 2C4A     		ldr	r2, .L75+12
 1137 00ae 9361     		str	r3, [r2, #24]
 332:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Time to connect to network: %d seconds",
 1138              		.loc 1 332 0
 1139 00b0 2B4B     		ldr	r3, .L75+12
 1140 00b2 9B69     		ldr	r3, [r3, #24]
 1141 00b4 1A46     		mov	r2, r3
 1142 00b6 2B49     		ldr	r1, .L75+16
 1143 00b8 0020     		movs	r0, #0
 1144 00ba FFF7FEFF 		bl	printNotif
 333:modem.c       ****                                             modem_stats.time_to_network_connect);
 334:modem.c       ****             set_up_internet_connection(); // Setup the internet connection
 1145              		.loc 1 334 0
 1146 00be FFF7FEFF 		bl	set_up_internet_connection
 335:modem.c       ****             modem_state = MODEM_STATE_WAITING_FOR_IP; // Change modem state 
 1147              		.loc 1 335 0
 1148 00c2 244B     		ldr	r3, .L75
 1149 00c4 0322     		movs	r2, #3
 1150 00c6 1A70     		strb	r2, [r3]
 1151              	.L69:
 336:modem.c       ****         }
 337:modem.c       ****         
 338:modem.c       ****         //power off if we time out should only take ~30 secs to connect to network
 339:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_NETWORK_CONNECT){
 1152              		.loc 1 339 0
 1153 00c8 FFF7FEFF 		bl	getTimeStamp
 1154 00cc 0246     		mov	r2, r0
 1155 00ce 224B     		ldr	r3, .L75+4
 1156 00d0 1B68     		ldr	r3, [r3]
 1157 00d2 D31A     		subs	r3, r2, r3
 1158 00d4 B42B     		cmp	r3, #180
 1159 00d6 08DD     		ble	.L70
 340:modem.c       ****             modem_state = MODEM_STATE_OFF; // Change modem state
 1160              		.loc 1 340 0
 1161 00d8 1E4B     		ldr	r3, .L75
 1162 00da 0022     		movs	r2, #0
 1163 00dc 1A70     		strb	r2, [r3]
 341:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1164              		.loc 1 341 0
 1165 00de FFF7FEFF 		bl	modem_power_down
 342:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on network connect");
 1166              		.loc 1 342 0
 1167 00e2 2149     		ldr	r1, .L75+20
 1168 00e4 0220     		movs	r0, #2
 1169 00e6 FFF7FEFF 		bl	printNotif
 1170              	.L70:
 343:modem.c       ****             
 344:modem.c       ****         }
 345:modem.c       ****         return 0u;//ok to hand off to sleep
 1171              		.loc 1 345 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 29


 1172 00ea 0023     		movs	r3, #0
 1173 00ec 2EE0     		b	.L61
 1174              	.L62:
 346:modem.c       ****         
 347:modem.c       ****     // Else if modem state is "waiting for IP"
 348:modem.c       ****     }else if(modem_state == MODEM_STATE_WAITING_FOR_IP){
 1175              		.loc 1 348 0
 1176 00ee 194B     		ldr	r3, .L75
 1177 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1178 00f2 032B     		cmp	r3, #3
 1179 00f4 29D1     		bne	.L71
 349:modem.c       ****         // If the modem is connected to the internet, change modem state to "ready", save/print tim
 350:modem.c       ****         if(is_connected_to_internet()){
 1180              		.loc 1 350 0
 1181 00f6 FFF7FEFF 		bl	is_connected_to_internet
 1182 00fa 0346     		mov	r3, r0
 1183 00fc 002B     		cmp	r3, #0
 1184 00fe 11D0     		beq	.L72
 351:modem.c       ****             modem_state = MODEM_STATE_READY; // Change modem state
 1185              		.loc 1 351 0
 1186 0100 144B     		ldr	r3, .L75
 1187 0102 0422     		movs	r2, #4
 1188 0104 1A70     		strb	r2, [r3]
 352:modem.c       ****             // Save/print time to acquire IP address
 353:modem.c       ****             modem_stats.time_to_acquire_ip = (int)(getTimeStamp() - (int32)modem_start_time_stamp);
 1189              		.loc 1 353 0
 1190 0106 FFF7FEFF 		bl	getTimeStamp
 1191 010a 0246     		mov	r2, r0
 1192 010c 124B     		ldr	r3, .L75+4
 1193 010e 1B68     		ldr	r3, [r3]
 1194 0110 D31A     		subs	r3, r2, r3
 1195 0112 134A     		ldr	r2, .L75+12
 1196 0114 D361     		str	r3, [r2, #28]
 354:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Acquired IP address: %d seconds",
 1197              		.loc 1 354 0
 1198 0116 124B     		ldr	r3, .L75+12
 1199 0118 DB69     		ldr	r3, [r3, #28]
 1200 011a 1A46     		mov	r2, r3
 1201 011c 1349     		ldr	r1, .L75+24
 1202 011e 0020     		movs	r0, #0
 1203 0120 FFF7FEFF 		bl	printNotif
 1204              	.L72:
 355:modem.c       ****                                             modem_stats.time_to_acquire_ip);
 356:modem.c       ****         }
 357:modem.c       ****         
 358:modem.c       ****         // Power off if we times out should only take ~30 secs to connect to network
 359:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_IP_ACQUIRE){
 1205              		.loc 1 359 0
 1206 0124 FFF7FEFF 		bl	getTimeStamp
 1207 0128 0246     		mov	r2, r0
 1208 012a 0B4B     		ldr	r3, .L75+4
 1209 012c 1B68     		ldr	r3, [r3]
 1210 012e D31A     		subs	r3, r2, r3
 1211 0130 E62B     		cmp	r3, #230
 1212 0132 08DD     		ble	.L73
 360:modem.c       ****             modem_state = MODEM_STATE_OFF;
 1213              		.loc 1 360 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 30


 1214 0134 074B     		ldr	r3, .L75
 1215 0136 0022     		movs	r2, #0
 1216 0138 1A70     		strb	r2, [r3]
 361:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1217              		.loc 1 361 0
 1218 013a FFF7FEFF 		bl	modem_power_down
 362:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on IP address acquire.");
 1219              		.loc 1 362 0
 1220 013e 0C49     		ldr	r1, .L75+28
 1221 0140 0220     		movs	r0, #2
 1222 0142 FFF7FEFF 		bl	printNotif
 1223              	.L73:
 363:modem.c       ****       
 364:modem.c       ****         }
 365:modem.c       ****         return 0u;//ok to hand off to sleep
 1224              		.loc 1 365 0
 1225 0146 0023     		movs	r3, #0
 1226 0148 00E0     		b	.L61
 1227              	.L71:
 366:modem.c       ****     }
 367:modem.c       ****     
 368:modem.c       ****     return 0u;
 1228              		.loc 1 368 0
 1229 014a 0023     		movs	r3, #0
 1230              	.L61:
 369:modem.c       ****     
 370:modem.c       **** }
 1231              		.loc 1 370 0
 1232 014c 1846     		mov	r0, r3
 1233 014e 0837     		adds	r7, r7, #8
 1234              		.cfi_def_cfa_offset 8
 1235 0150 BD46     		mov	sp, r7
 1236              		.cfi_def_cfa_register 13
 1237              		@ sp needed
 1238 0152 80BD     		pop	{r7, pc}
 1239              	.L76:
 1240              		.align	2
 1241              	.L75:
 1242 0154 00000000 		.word	modem_state
 1243 0158 00000000 		.word	modem_start_time_stamp
 1244 015c 00000000 		.word	updatable_parameters
 1245 0160 00000000 		.word	modem_stats
 1246 0164 9C010000 		.word	.LC13
 1247 0168 C4010000 		.word	.LC14
 1248 016c E8010000 		.word	.LC15
 1249 0170 08020000 		.word	.LC16
 1250              		.cfi_endproc
 1251              	.LFE75:
 1252              		.size	modem_process_tasks, .-modem_process_tasks
 1253              		.section	.rodata
 1254 022f 00       		.align	2
 1255              	.LC17:
 1256 0230 43686563 		.ascii	"Checking AT+CREG?\000"
 1256      6B696E67 
 1256      2041542B 
 1256      43524547 
 1256      3F00
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 31


 1257 0242 0000     		.align	2
 1258              	.LC18:
 1259 0244 41542B43 		.ascii	"AT+CREG?\015\000"
 1259      5245473F 
 1259      0D00
 1260 024e 0000     		.align	2
 1261              	.LC19:
 1262 0250 45787472 		.ascii	"Extracting string AT+CREG?\000"
 1262      61637469 
 1262      6E672073 
 1262      7472696E 
 1262      67204154 
 1263 026b 00       		.align	2
 1264              	.LC20:
 1265 026c 75617274 		.ascii	"uart_received_string: %s\000"
 1265      5F726563 
 1265      65697665 
 1265      645F7374 
 1265      72696E67 
 1266 0285 000000   		.align	2
 1267              	.LC21:
 1268 0288 0D00     		.ascii	"\015\000"
 1269 028a 0000     		.align	2
 1270              	.LC22:
 1271 028c 3A2000   		.ascii	": \000"
 1272 028f 00       		.align	2
 1273              	.LC23:
 1274 0290 52656769 		.ascii	"Registered to network, CREG: %s\000"
 1274      73746572 
 1274      65642074 
 1274      6F206E65 
 1274      74776F72 
 1275              		.align	2
 1276              	.LC24:
 1277 02b0 446F6E65 		.ascii	"Done extracing string AT+CREG?\000"
 1277      20657874 
 1277      72616369 
 1277      6E672073 
 1277      7472696E 
 1278 02cf 00       		.align	2
 1279              	.LC25:
 1280 02d0 302C3100 		.ascii	"0,1\000"
 1281              		.align	2
 1282              	.LC26:
 1283 02d4 302C3500 		.ascii	"0,5\000"
 1284              		.section	.text.is_connected_to_cell_network,"ax",%progbits
 1285              		.align	2
 1286              		.global	is_connected_to_cell_network
 1287              		.thumb
 1288              		.thumb_func
 1289              		.type	is_connected_to_cell_network, %function
 1290              	is_connected_to_cell_network:
 1291              	.LFB76:
 371:modem.c       **** 
 372:modem.c       **** // Checks network status, writes commands to the modem, then extracts string from UART
 373:modem.c       **** uint8 is_connected_to_cell_network(){
 1292              		.loc 1 373 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 32


 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 16
 1295              		@ frame_needed = 1, uses_anonymous_args = 0
 1296 0000 80B5     		push	{r7, lr}
 1297              		.cfi_def_cfa_offset 8
 1298              		.cfi_offset 7, -8
 1299              		.cfi_offset 14, -4
 1300 0002 84B0     		sub	sp, sp, #16
 1301              		.cfi_def_cfa_offset 24
 1302 0004 00AF     		add	r7, sp, #0
 1303              		.cfi_def_cfa_register 7
 374:modem.c       ****     // AT command AT+CREG? is the Network Registration Report to check network status -- need '0,0'
 375:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Checking AT+CREG?");
 1304              		.loc 1 375 0
 1305 0006 2049     		ldr	r1, .L82
 1306 0008 0020     		movs	r0, #0
 1307 000a FFF7FEFF 		bl	printNotif
 376:modem.c       ****     // create new uint8 variable stust and set to equal the output of the function at_write_command
 377:modem.c       ****     uint8 status = at_write_command("AT+CREG?\r", "OK",DEFAULT_AT_TIMEOUT);
 1308              		.loc 1 377 0
 1309 000e 4FF4FA62 		mov	r2, #2000
 1310 0012 1E49     		ldr	r1, .L82+4
 1311 0014 1E48     		ldr	r0, .L82+8
 1312 0016 FFF7FEFF 		bl	at_write_command
 1313 001a 0346     		mov	r3, r0
 1314 001c FB73     		strb	r3, [r7, #15]
 378:modem.c       ****     
 379:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Extracting string AT+CREG?");
 1315              		.loc 1 379 0
 1316 001e 1D49     		ldr	r1, .L82+12
 1317 0020 0020     		movs	r0, #0
 1318 0022 FFF7FEFF 		bl	printNotif
 380:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"uart_received_string: %s",uart_received_string);
 1319              		.loc 1 380 0
 1320 0026 1C4A     		ldr	r2, .L82+16
 1321 0028 1C49     		ldr	r1, .L82+20
 1322 002a 0020     		movs	r0, #0
 1323 002c FFF7FEFF 		bl	printNotif
 381:modem.c       ****     
 382:modem.c       ****     // If the modem has a status
 383:modem.c       ****     if(status){
 1324              		.loc 1 383 0
 1325 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1326 0032 002B     		cmp	r3, #0
 1327 0034 23D0     		beq	.L78
 1328              	.LBB8:
 384:modem.c       ****         // Create a character array of length 10 called creg
 385:modem.c       ****         char creg[10];
 386:modem.c       ****         creg[0] = '\0';
 1329              		.loc 1 386 0
 1330 0036 0023     		movs	r3, #0
 1331 0038 3B71     		strb	r3, [r7, #4]
 387:modem.c       ****         // Extract string from the UART
 388:modem.c       ****         extract_string(uart_received_string,": ","\r",creg);
 1332              		.loc 1 388 0
 1333 003a 3B1D     		adds	r3, r7, #4
 1334 003c 184A     		ldr	r2, .L82+24
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 33


 1335 003e 1949     		ldr	r1, .L82+28
 1336 0040 1548     		ldr	r0, .L82+16
 1337 0042 FFF7FEFF 		bl	extract_string
 389:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Registered to network, CREG: %s",creg);
 1338              		.loc 1 389 0
 1339 0046 3B1D     		adds	r3, r7, #4
 1340 0048 1A46     		mov	r2, r3
 1341 004a 1749     		ldr	r1, .L82+32
 1342 004c 0020     		movs	r0, #0
 1343 004e FFF7FEFF 		bl	printNotif
 390:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Done extracing string AT+CREG?");
 1344              		.loc 1 390 0
 1345 0052 1649     		ldr	r1, .L82+36
 1346 0054 0020     		movs	r0, #0
 1347 0056 FFF7FEFF 		bl	printNotif
 391:modem.c       ****     
 392:modem.c       ****         // Search creg for "0,1" or "0,5", if either exists and either is not equal to NULL, return
 393:modem.c       ****         if((strstr(creg,"0,1")!=NULL)||(strstr(creg,"0,5")!=NULL)){
 1348              		.loc 1 393 0
 1349 005a 3B1D     		adds	r3, r7, #4
 1350 005c 1449     		ldr	r1, .L82+40
 1351 005e 1846     		mov	r0, r3
 1352 0060 FFF7FEFF 		bl	strstr
 1353 0064 0346     		mov	r3, r0
 1354 0066 002B     		cmp	r3, #0
 1355 0068 07D1     		bne	.L79
 1356              		.loc 1 393 0 is_stmt 0 discriminator 1
 1357 006a 3B1D     		adds	r3, r7, #4
 1358 006c 1149     		ldr	r1, .L82+44
 1359 006e 1846     		mov	r0, r3
 1360 0070 FFF7FEFF 		bl	strstr
 1361 0074 0346     		mov	r3, r0
 1362 0076 002B     		cmp	r3, #0
 1363 0078 01D0     		beq	.L78
 1364              	.L79:
 394:modem.c       ****             return 1u;
 1365              		.loc 1 394 0 is_stmt 1
 1366 007a 0123     		movs	r3, #1
 1367 007c 00E0     		b	.L81
 1368              	.L78:
 1369              	.LBE8:
 395:modem.c       ****         }
 396:modem.c       ****     }
 397:modem.c       ****     // If the modem doesn't have a status, return 0u
 398:modem.c       ****     return 0u;
 1370              		.loc 1 398 0
 1371 007e 0023     		movs	r3, #0
 1372              	.L81:
 399:modem.c       ****         
 400:modem.c       **** }
 1373              		.loc 1 400 0
 1374 0080 1846     		mov	r0, r3
 1375 0082 1037     		adds	r7, r7, #16
 1376              		.cfi_def_cfa_offset 8
 1377 0084 BD46     		mov	sp, r7
 1378              		.cfi_def_cfa_register 13
 1379              		@ sp needed
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 34


 1380 0086 80BD     		pop	{r7, pc}
 1381              	.L83:
 1382              		.align	2
 1383              	.L82:
 1384 0088 30020000 		.word	.LC17
 1385 008c 00000000 		.word	.LC0
 1386 0090 44020000 		.word	.LC18
 1387 0094 50020000 		.word	.LC19
 1388 0098 00000000 		.word	uart_received_string
 1389 009c 6C020000 		.word	.LC20
 1390 00a0 88020000 		.word	.LC21
 1391 00a4 8C020000 		.word	.LC22
 1392 00a8 90020000 		.word	.LC23
 1393 00ac B0020000 		.word	.LC24
 1394 00b0 D0020000 		.word	.LC25
 1395 00b4 D4020000 		.word	.LC26
 1396              		.cfi_endproc
 1397              	.LFE76:
 1398              		.size	is_connected_to_cell_network, .-is_connected_to_cell_network
 1399              		.section	.rodata
 1400              		.align	2
 1401              	.LC27:
 1402 02d8 41542353 		.ascii	"AT#SGACT=1,1\015\012\000"
 1402      47414354 
 1402      3D312C31 
 1402      0D0A00
 1403              		.section	.text.set_up_internet_connection,"ax",%progbits
 1404              		.align	2
 1405              		.global	set_up_internet_connection
 1406              		.thumb
 1407              		.thumb_func
 1408              		.type	set_up_internet_connection, %function
 1409              	set_up_internet_connection:
 1410              	.LFB77:
 401:modem.c       **** 
 402:modem.c       **** // Connect the modem to the internet
 403:modem.c       **** void set_up_internet_connection(){
 1411              		.loc 1 403 0
 1412              		.cfi_startproc
 1413              		@ args = 0, pretend = 0, frame = 0
 1414              		@ frame_needed = 1, uses_anonymous_args = 0
 1415 0000 80B5     		push	{r7, lr}
 1416              		.cfi_def_cfa_offset 8
 1417              		.cfi_offset 7, -8
 1418              		.cfi_offset 14, -4
 1419 0002 00AF     		add	r7, sp, #0
 1420              		.cfi_def_cfa_register 7
 404:modem.c       ****     
 405:modem.c       ****     //port 3
 406:modem.c       ****    //<connId>,<srMode>,<dataMode>, 
 407:modem.c       ****     //at_write_command("AT#SCFGEXT=1,1,0,0,0,0\r", "OK",DEFAULT_AT_TIMEOUT);////LTE modem relevant
 408:modem.c       ****     
 409:modem.c       ****     //<connId>,<cid>,<pktSz>,<maxTo>,<connTo>,<txTo>
 410:modem.c       ****     //at_write_command("AT#SCFG=1,3,300,90,600,50\r", "OK",DEFAULT_AT_TIMEOUT); //LTE modem relevan
 411:modem.c       ****     // <cid>,<stat>
 412:modem.c       ****    
 413:modem.c       ****     // AT command SGACT is Context Activation command is used to activate the specified PDP context
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 35


 414:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",1000u);
 1421              		.loc 1 414 0
 1422 0004 4FF47A72 		mov	r2, #1000
 1423 0008 0249     		ldr	r1, .L85
 1424 000a 0348     		ldr	r0, .L85+4
 1425 000c FFF7FEFF 		bl	at_write_command
 415:modem.c       ****     
 416:modem.c       **** }
 1426              		.loc 1 416 0
 1427 0010 00BF     		nop
 1428 0012 80BD     		pop	{r7, pc}
 1429              	.L86:
 1430              		.align	2
 1431              	.L85:
 1432 0014 00000000 		.word	.LC0
 1433 0018 D8020000 		.word	.LC27
 1434              		.cfi_endproc
 1435              	.LFE77:
 1436              		.size	set_up_internet_connection, .-set_up_internet_connection
 1437              		.section	.rodata
 1438 02e7 00       		.align	2
 1439              	.LC28:
 1440 02e8 312C3100 		.ascii	"1,1\000"
 1441              		.align	2
 1442              	.LC29:
 1443 02ec 41542353 		.ascii	"AT#SGACT?\015\000"
 1443      47414354 
 1443      3F0D00
 1444              		.section	.text.is_connected_to_internet,"ax",%progbits
 1445              		.align	2
 1446              		.global	is_connected_to_internet
 1447              		.thumb
 1448              		.thumb_func
 1449              		.type	is_connected_to_internet, %function
 1450              	is_connected_to_internet:
 1451              	.LFB78:
 417:modem.c       **** 
 418:modem.c       **** // Checks if the modem is connected to the internet
 419:modem.c       **** uint8 is_connected_to_internet(){
 1452              		.loc 1 419 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
 1455              		@ frame_needed = 1, uses_anonymous_args = 0
 1456 0000 80B5     		push	{r7, lr}
 1457              		.cfi_def_cfa_offset 8
 1458              		.cfi_offset 7, -8
 1459              		.cfi_offset 14, -4
 1460 0002 00AF     		add	r7, sp, #0
 1461              		.cfi_def_cfa_register 7
 420:modem.c       ****     // AT command SGACT? reports the range for the parameters <cid> and <stat>
 421:modem.c       ****     // cid: is the Packet Data Protocol (PDP) Context Identifier which specifies the particular PDP
 422:modem.c       ****     // stat: gives the context staus (0 deactivated and 1 activated)
 423:modem.c       ****     // Check for 3,1 if Verizon 
 424:modem.c       ****     if(at_write_command("AT#SGACT?\r", "1,1",DEFAULT_AT_TIMEOUT)){
 1462              		.loc 1 424 0
 1463 0004 4FF4FA62 		mov	r2, #2000
 1464 0008 0549     		ldr	r1, .L90
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 36


 1465 000a 0648     		ldr	r0, .L90+4
 1466 000c FFF7FEFF 		bl	at_write_command
 1467 0010 0346     		mov	r3, r0
 1468 0012 002B     		cmp	r3, #0
 1469 0014 01D0     		beq	.L88
 425:modem.c       ****         return 1u;
 1470              		.loc 1 425 0
 1471 0016 0123     		movs	r3, #1
 1472 0018 00E0     		b	.L89
 1473              	.L88:
 426:modem.c       ****     }
 427:modem.c       ****     return 0u;  
 1474              		.loc 1 427 0
 1475 001a 0023     		movs	r3, #0
 1476              	.L89:
 428:modem.c       **** }
 1477              		.loc 1 428 0
 1478 001c 1846     		mov	r0, r3
 1479 001e 80BD     		pop	{r7, pc}
 1480              	.L91:
 1481              		.align	2
 1482              	.L90:
 1483 0020 E8020000 		.word	.LC28
 1484 0024 EC020000 		.word	.LC29
 1485              		.cfi_endproc
 1486              	.LFE78:
 1487              		.size	is_connected_to_internet, .-is_connected_to_internet
 1488              		.section	.rodata
 1489 02f7 00       		.align	2
 1490              	.LC30:
 1491 02f8 41542B43 		.ascii	"AT+CESQ\015\000"
 1491      4553510D 
 1491      00
 1492 0301 000000   		.align	2
 1493              	.LC31:
 1494 0304 0D0A2B43 		.ascii	"\015\012+CESQ: %d,%d,%d,%d,%d,%d%*s\000"
 1494      4553513A 
 1494      2025642C 
 1494      25642C25 
 1494      642C2564 
 1495              		.section	.text.get_cell_network_stats,"ax",%progbits
 1496              		.align	2
 1497              		.global	get_cell_network_stats
 1498              		.thumb
 1499              		.thumb_func
 1500              		.type	get_cell_network_stats, %function
 1501              	get_cell_network_stats:
 1502              	.LFB79:
 429:modem.c       **** 
 430:modem.c       **** void get_cell_network_stats(){
 1503              		.loc 1 430 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 8
 1506              		@ frame_needed = 1, uses_anonymous_args = 0
 1507 0000 80B5     		push	{r7, lr}
 1508              		.cfi_def_cfa_offset 8
 1509              		.cfi_offset 7, -8
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 37


 1510              		.cfi_offset 14, -4
 1511 0002 86B0     		sub	sp, sp, #24
 1512              		.cfi_def_cfa_offset 32
 1513 0004 04AF     		add	r7, sp, #16
 1514              		.cfi_def_cfa 7, 16
 431:modem.c       ****     // Initialize values
 432:modem.c       ****     modem_stats.ber = 255;
 1515              		.loc 1 432 0
 1516 0006 154B     		ldr	r3, .L93
 1517 0008 FF22     		movs	r2, #255
 1518 000a 5A60     		str	r2, [r3, #4]
 433:modem.c       ****     modem_stats.ecno = 255;
 1519              		.loc 1 433 0
 1520 000c 134B     		ldr	r3, .L93
 1521 000e FF22     		movs	r2, #255
 1522 0010 DA60     		str	r2, [r3, #12]
 434:modem.c       ****     modem_stats.rscp = 255;
 1523              		.loc 1 434 0
 1524 0012 124B     		ldr	r3, .L93
 1525 0014 FF22     		movs	r2, #255
 1526 0016 9A60     		str	r2, [r3, #8]
 435:modem.c       ****     modem_stats.rsrp = 255;
 1527              		.loc 1 435 0
 1528 0018 104B     		ldr	r3, .L93
 1529 001a FF22     		movs	r2, #255
 1530 001c 5A61     		str	r2, [r3, #20]
 436:modem.c       ****     modem_stats.rsrq = 255;
 1531              		.loc 1 436 0
 1532 001e 0F4B     		ldr	r3, .L93
 1533 0020 FF22     		movs	r2, #255
 1534 0022 1A61     		str	r2, [r3, #16]
 437:modem.c       ****     modem_stats.rxlev = 255;
 1535              		.loc 1 437 0
 1536 0024 0D4B     		ldr	r3, .L93
 1537 0026 FF22     		movs	r2, #255
 1538 0028 1A60     		str	r2, [r3]
 438:modem.c       **** 
 439:modem.c       ****     //for(uint8 attempts =0; attempts <10; attempts++){
 440:modem.c       ****     at_write_command("AT+CESQ\r", "OK", DEFAULT_AT_TIMEOUT);
 1539              		.loc 1 440 0
 1540 002a 4FF4FA62 		mov	r2, #2000
 1541 002e 0C49     		ldr	r1, .L93+4
 1542 0030 0C48     		ldr	r0, .L93+8
 1543 0032 FFF7FEFF 		bl	at_write_command
 441:modem.c       ****     //CESQ: <rxlev>,<ber>,<rscp>,<ecno>,<rsrq>,<rsrp>
 442:modem.c       **** 
 443:modem.c       ****     int match = sscanf(uart_received_string,"\r\n+CESQ: %d,%d,%d,%d,%d,%d%*s",
 1544              		.loc 1 443 0
 1545 0036 0C4B     		ldr	r3, .L93+12
 1546 0038 0393     		str	r3, [sp, #12]
 1547 003a 0C4B     		ldr	r3, .L93+16
 1548 003c 0293     		str	r3, [sp, #8]
 1549 003e 0C4B     		ldr	r3, .L93+20
 1550 0040 0193     		str	r3, [sp, #4]
 1551 0042 0C4B     		ldr	r3, .L93+24
 1552 0044 0093     		str	r3, [sp]
 1553 0046 0C4B     		ldr	r3, .L93+28
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 38


 1554 0048 044A     		ldr	r2, .L93
 1555 004a 0C49     		ldr	r1, .L93+32
 1556 004c 0C48     		ldr	r0, .L93+36
 1557 004e FFF7FEFF 		bl	sscanf
 1558 0052 7860     		str	r0, [r7, #4]
 444:modem.c       ****         &modem_stats.rxlev,
 445:modem.c       ****         &modem_stats.ber,
 446:modem.c       ****         &modem_stats.rscp,
 447:modem.c       ****         &modem_stats.ecno,
 448:modem.c       ****         &modem_stats.rsrq,
 449:modem.c       ****         &modem_stats.rsrp);
 450:modem.c       **** 
 451:modem.c       ****         //check to see if we’re getting a good received signal strength
 452:modem.c       ****         //if(modem_stats.rsrp != 255 && modem_stats.rsrp > 26){// || modem_stats.rxlev !=0){
 453:modem.c       ****         //    break;
 454:modem.c       ****         //}
 455:modem.c       ****         // Delay one second
 456:modem.c       ****         //CyDelay(1000u);
 457:modem.c       ****     //}
 458:modem.c       **** }
 1559              		.loc 1 458 0
 1560 0054 00BF     		nop
 1561 0056 0837     		adds	r7, r7, #8
 1562              		.cfi_def_cfa_offset 8
 1563 0058 BD46     		mov	sp, r7
 1564              		.cfi_def_cfa_register 13
 1565              		@ sp needed
 1566 005a 80BD     		pop	{r7, pc}
 1567              	.L94:
 1568              		.align	2
 1569              	.L93:
 1570 005c 00000000 		.word	modem_stats
 1571 0060 00000000 		.word	.LC0
 1572 0064 F8020000 		.word	.LC30
 1573 0068 14000000 		.word	modem_stats+20
 1574 006c 10000000 		.word	modem_stats+16
 1575 0070 0C000000 		.word	modem_stats+12
 1576 0074 08000000 		.word	modem_stats+8
 1577 0078 04000000 		.word	modem_stats+4
 1578 007c 04030000 		.word	.LC31
 1579 0080 00000000 		.word	uart_received_string
 1580              		.cfi_endproc
 1581              	.LFE79:
 1582              		.size	get_cell_network_stats, .-get_cell_network_stats
 1583              		.section	.text.updatable_parameters_initialize,"ax",%progbits
 1584              		.align	2
 1585              		.global	updatable_parameters_initialize
 1586              		.thumb
 1587              		.thumb_func
 1588              		.type	updatable_parameters_initialize, %function
 1589              	updatable_parameters_initialize:
 1590              	.LFB80:
 459:modem.c       **** 
 460:modem.c       **** // Initialize updatable parameters (sampling, reporting, and debug frequencies)
 461:modem.c       **** void updatable_parameters_initialize(){
 1591              		.loc 1 461 0
 1592              		.cfi_startproc
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 39


 1593              		@ args = 0, pretend = 0, frame = 0
 1594              		@ frame_needed = 1, uses_anonymous_args = 0
 1595              		@ link register save eliminated.
 1596 0000 80B4     		push	{r7}
 1597              		.cfi_def_cfa_offset 4
 1598              		.cfi_offset 7, -4
 1599 0002 00AF     		add	r7, sp, #0
 1600              		.cfi_def_cfa_register 7
 462:modem.c       ****     updatable_parameters.node_type = NODE_TYPE_DEPTH;
 1601              		.loc 1 462 0
 1602 0004 094B     		ldr	r3, .L96
 1603 0006 0022     		movs	r2, #0
 1604 0008 1A70     		strb	r2, [r3]
 463:modem.c       ****     updatable_parameters.sim_type = SIM_TYPE_SUPER;
 1605              		.loc 1 463 0
 1606 000a 084B     		ldr	r3, .L96
 1607 000c 0122     		movs	r2, #1
 1608 000e 5A70     		strb	r2, [r3, #1]
 464:modem.c       ****     updatable_parameters.measure_time = 10u;
 1609              		.loc 1 464 0
 1610 0010 064B     		ldr	r3, .L96
 1611 0012 0A22     		movs	r2, #10
 1612 0014 9A70     		strb	r2, [r3, #2]
 465:modem.c       ****     updatable_parameters.sync_time = 60u;
 1613              		.loc 1 465 0
 1614 0016 054B     		ldr	r3, .L96
 1615 0018 3C22     		movs	r2, #60
 1616 001a DA70     		strb	r2, [r3, #3]
 466:modem.c       ****     updatable_parameters.debug_level = 1u;
 1617              		.loc 1 466 0
 1618 001c 034B     		ldr	r3, .L96
 1619 001e 0122     		movs	r2, #1
 1620 0020 1A71     		strb	r2, [r3, #4]
 467:modem.c       **** }
 1621              		.loc 1 467 0
 1622 0022 00BF     		nop
 1623 0024 BD46     		mov	sp, r7
 1624              		.cfi_def_cfa_register 13
 1625              		@ sp needed
 1626 0026 80BC     		pop	{r7}
 1627              		.cfi_restore 7
 1628              		.cfi_def_cfa_offset 0
 1629 0028 7047     		bx	lr
 1630              	.L97:
 1631 002a 00BF     		.align	2
 1632              	.L96:
 1633 002c 00000000 		.word	updatable_parameters
 1634              		.cfi_endproc
 1635              	.LFE80:
 1636              		.size	updatable_parameters_initialize, .-updatable_parameters_initialize
 1637              		.section	.rodata
 1638 0322 0000     		.align	2
 1639              	.LC32:
 1640 0324 4E6F6465 		.ascii	"Node_Type: \000"
 1640      5F547970 
 1640      653A2000 
 1641              		.align	2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 40


 1642              	.LC33:
 1643 0330 53494D5F 		.ascii	"SIM_Type: \000"
 1643      54797065 
 1643      3A2000
 1644 033b 00       		.align	2
 1645              	.LC34:
 1646 033c 53616D70 		.ascii	"Sample_Freq: \000"
 1646      6C655F46 
 1646      7265713A 
 1646      2000
 1647 034a 0000     		.align	2
 1648              	.LC35:
 1649 034c 5265706F 		.ascii	"Report_Freq: \000"
 1649      72745F46 
 1649      7265713A 
 1649      2000
 1650 035a 0000     		.align	2
 1651              	.LC36:
 1652 035c 44656275 		.ascii	"Debug_Freq: \000"
 1652      675F4672 
 1652      65713A20 
 1652      00
 1653 0369 000000   		.align	2
 1654              	.LC37:
 1655 036c 256400   		.ascii	"%d\000"
 1656 036f 00       		.align	2
 1657              	.LC38:
 1658 0370 4E6F6465 		.ascii	"Node type changed to: %d\015\012\000"
 1658      20747970 
 1658      65206368 
 1658      616E6765 
 1658      6420746F 
 1659 038b 00       		.align	2
 1660              	.LC39:
 1661 038c 436F756C 		.ascii	"Could not change node type.\000"
 1661      64206E6F 
 1661      74206368 
 1661      616E6765 
 1661      206E6F64 
 1662              		.align	2
 1663              	.LC40:
 1664 03a8 53494D20 		.ascii	"SIM type changed to: %d\015\012\000"
 1664      74797065 
 1664      20636861 
 1664      6E676564 
 1664      20746F3A 
 1665 03c2 0000     		.align	2
 1666              	.LC41:
 1667 03c4 436F756C 		.ascii	"Could not change SIM type.\000"
 1667      64206E6F 
 1667      74206368 
 1667      616E6765 
 1667      2053494D 
 1668 03df 00       		.align	2
 1669              	.LC42:
 1670 03e0 53616D70 		.ascii	"Sampling frequency changed to: %d\015\012\000"
 1670      6C696E67 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 41


 1670      20667265 
 1670      7175656E 
 1670      63792063 
 1671              		.align	2
 1672              	.LC43:
 1673 0404 436F756C 		.ascii	"Could not parse new sampling frequency value.\000"
 1673      64206E6F 
 1673      74207061 
 1673      72736520 
 1673      6E657720 
 1674 0432 0000     		.align	2
 1675              	.LC44:
 1676 0434 5265706F 		.ascii	"Reporting frequency changed to: %d\015\012\000"
 1676      7274696E 
 1676      67206672 
 1676      65717565 
 1676      6E637920 
 1677 0459 000000   		.align	2
 1678              	.LC45:
 1679 045c 436F756C 		.ascii	"Could not parse new reporting frequency value.\000"
 1679      64206E6F 
 1679      74207061 
 1679      72736520 
 1679      6E657720 
 1680 048b 00       		.align	2
 1681              	.LC46:
 1682 048c 44656275 		.ascii	"Debug printing frequency changed to: %d\015\012\000"
 1682      67207072 
 1682      696E7469 
 1682      6E672066 
 1682      72657175 
 1683 04b6 0000     		.align	2
 1684              	.LC47:
 1685 04b8 436F756C 		.ascii	"Could not parse new debugging frequency value.\000"
 1685      64206E6F 
 1685      74207061 
 1685      72736520 
 1685      6E657720 
 1686              		.section	.text.get_updated_parameters_from_malcom,"ax",%progbits
 1687              		.align	2
 1688              		.global	get_updated_parameters_from_malcom
 1689              		.thumb
 1690              		.thumb_func
 1691              		.type	get_updated_parameters_from_malcom, %function
 1692              	get_updated_parameters_from_malcom:
 1693              	.LFB81:
 468:modem.c       **** 
 469:modem.c       **** // Get the update values for sampling frequency, reporting frequency, and the debug level from the 
 470:modem.c       **** void get_updated_parameters_from_malcom(){
 1694              		.loc 1 470 0
 1695              		.cfi_startproc
 1696              		@ args = 0, pretend = 0, frame = 88
 1697              		@ frame_needed = 1, uses_anonymous_args = 0
 1698 0000 90B5     		push	{r4, r7, lr}
 1699              		.cfi_def_cfa_offset 12
 1700              		.cfi_offset 4, -12
 1701              		.cfi_offset 7, -8
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 42


 1702              		.cfi_offset 14, -4
 1703 0002 97B0     		sub	sp, sp, #92
 1704              		.cfi_def_cfa_offset 104
 1705 0004 00AF     		add	r7, sp, #0
 1706              		.cfi_def_cfa_register 7
 471:modem.c       ****     
 472:modem.c       ****     // Create character array of size 1024 characters to hold the uart received string
 473:modem.c       ****     char s_node_type[10];
 474:modem.c       ****     char s_sim_type[10];
 475:modem.c       ****     char s_sample_freq[10];
 476:modem.c       ****     char s_report_freq[10];
 477:modem.c       ****     char s_debug_freq[10];
 478:modem.c       ****     
 479:modem.c       ****     s_node_type[0] = '\0';
 1707              		.loc 1 479 0
 1708 0006 0023     		movs	r3, #0
 1709 0008 87F84C30 		strb	r3, [r7, #76]
 480:modem.c       ****     s_sim_type[0] = '\0';
 1710              		.loc 1 480 0
 1711 000c 0023     		movs	r3, #0
 1712 000e 87F84030 		strb	r3, [r7, #64]
 481:modem.c       ****     s_sample_freq[0] = '\0';
 1713              		.loc 1 481 0
 1714 0012 0023     		movs	r3, #0
 1715 0014 87F83430 		strb	r3, [r7, #52]
 482:modem.c       ****     s_report_freq[0] = '\0';
 1716              		.loc 1 482 0
 1717 0018 0023     		movs	r3, #0
 1718 001a 87F82830 		strb	r3, [r7, #40]
 483:modem.c       ****     s_debug_freq[0] = '\0';
 1719              		.loc 1 483 0
 1720 001e 0023     		movs	r3, #0
 1721 0020 3B77     		strb	r3, [r7, #28]
 484:modem.c       ****     
 485:modem.c       ****     // Extract UART string recieved from the modem and save to variables
 486:modem.c       ****     extract_string(uart_received_string,"Node_Type: ","\r",s_node_type);
 1722              		.loc 1 486 0
 1723 0022 07F14C03 		add	r3, r7, #76
 1724 0026 644A     		ldr	r2, .L110
 1725 0028 6449     		ldr	r1, .L110+4
 1726 002a 6548     		ldr	r0, .L110+8
 1727 002c FFF7FEFF 		bl	extract_string
 487:modem.c       ****     extract_string(uart_received_string,"SIM_Type: ","\r",s_sim_type);
 1728              		.loc 1 487 0
 1729 0030 07F14003 		add	r3, r7, #64
 1730 0034 604A     		ldr	r2, .L110
 1731 0036 6349     		ldr	r1, .L110+12
 1732 0038 6148     		ldr	r0, .L110+8
 1733 003a FFF7FEFF 		bl	extract_string
 488:modem.c       ****     extract_string(uart_received_string,"Sample_Freq: ","\r",s_sample_freq);
 1734              		.loc 1 488 0
 1735 003e 07F13403 		add	r3, r7, #52
 1736 0042 5D4A     		ldr	r2, .L110
 1737 0044 6049     		ldr	r1, .L110+16
 1738 0046 5E48     		ldr	r0, .L110+8
 1739 0048 FFF7FEFF 		bl	extract_string
 489:modem.c       ****     extract_string(uart_received_string,"Report_Freq: ","\r",s_report_freq);
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 43


 1740              		.loc 1 489 0
 1741 004c 07F12803 		add	r3, r7, #40
 1742 0050 594A     		ldr	r2, .L110
 1743 0052 5E49     		ldr	r1, .L110+20
 1744 0054 5A48     		ldr	r0, .L110+8
 1745 0056 FFF7FEFF 		bl	extract_string
 490:modem.c       ****     extract_string(uart_received_string,"Debug_Freq: ","\r",s_debug_freq);
 1746              		.loc 1 490 0
 1747 005a 07F11C03 		add	r3, r7, #28
 1748 005e 564A     		ldr	r2, .L110
 1749 0060 5B49     		ldr	r1, .L110+24
 1750 0062 5748     		ldr	r0, .L110+8
 1751 0064 FFF7FEFF 		bl	extract_string
 491:modem.c       ****     
 492:modem.c       ****     // Create variables for what is sent back from the server
 493:modem.c       ****     int node_type, sim_type, sample_freq, report_freq, debug_freq;
 494:modem.c       ****     
 495:modem.c       ****     // Scan character arrays and save values 
 496:modem.c       ****     if(sscanf(s_node_type, "%d", &node_type)==1){
 1752              		.loc 1 496 0
 1753 0068 07F11802 		add	r2, r7, #24
 1754 006c 07F14C03 		add	r3, r7, #76
 1755 0070 5849     		ldr	r1, .L110+28
 1756 0072 1846     		mov	r0, r3
 1757 0074 FFF7FEFF 		bl	sscanf
 1758 0078 0346     		mov	r3, r0
 1759 007a 012B     		cmp	r3, #1
 1760 007c 0AD1     		bne	.L99
 497:modem.c       ****         updatable_parameters.node_type = node_type;
 1761              		.loc 1 497 0
 1762 007e BB69     		ldr	r3, [r7, #24]
 1763 0080 DAB2     		uxtb	r2, r3
 1764 0082 554B     		ldr	r3, .L110+32
 1765 0084 1A70     		strb	r2, [r3]
 498:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Node type changed to: %d\r\n", node_type);
 1766              		.loc 1 498 0
 1767 0086 BB69     		ldr	r3, [r7, #24]
 1768 0088 1A46     		mov	r2, r3
 1769 008a 5449     		ldr	r1, .L110+36
 1770 008c 0020     		movs	r0, #0
 1771 008e FFF7FEFF 		bl	printNotif
 1772 0092 03E0     		b	.L100
 1773              	.L99:
 499:modem.c       ****     }else{
 500:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not change node type.");
 1774              		.loc 1 500 0
 1775 0094 5249     		ldr	r1, .L110+40
 1776 0096 0220     		movs	r0, #2
 1777 0098 FFF7FEFF 		bl	printNotif
 1778              	.L100:
 501:modem.c       ****     }
 502:modem.c       ****     if(sscanf(s_sim_type, "%d", &sim_type)==1){
 1779              		.loc 1 502 0
 1780 009c 07F11402 		add	r2, r7, #20
 1781 00a0 07F14003 		add	r3, r7, #64
 1782 00a4 4B49     		ldr	r1, .L110+28
 1783 00a6 1846     		mov	r0, r3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 44


 1784 00a8 FFF7FEFF 		bl	sscanf
 1785 00ac 0346     		mov	r3, r0
 1786 00ae 012B     		cmp	r3, #1
 1787 00b0 0ED1     		bne	.L101
 503:modem.c       ****         updatable_parameters.sim_type = sim_type;
 1788              		.loc 1 503 0
 1789 00b2 7B69     		ldr	r3, [r7, #20]
 1790 00b4 002B     		cmp	r3, #0
 1791 00b6 14BF     		ite	ne
 1792 00b8 0123     		movne	r3, #1
 1793 00ba 0023     		moveq	r3, #0
 1794 00bc DAB2     		uxtb	r2, r3
 1795 00be 464B     		ldr	r3, .L110+32
 1796 00c0 5A70     		strb	r2, [r3, #1]
 504:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "SIM type changed to: %d\r\n", sim_type);
 1797              		.loc 1 504 0
 1798 00c2 7B69     		ldr	r3, [r7, #20]
 1799 00c4 1A46     		mov	r2, r3
 1800 00c6 4749     		ldr	r1, .L110+44
 1801 00c8 0020     		movs	r0, #0
 1802 00ca FFF7FEFF 		bl	printNotif
 1803 00ce 03E0     		b	.L102
 1804              	.L101:
 505:modem.c       ****     }else{
 506:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not change SIM type.");
 1805              		.loc 1 506 0
 1806 00d0 4549     		ldr	r1, .L110+48
 1807 00d2 0220     		movs	r0, #2
 1808 00d4 FFF7FEFF 		bl	printNotif
 1809              	.L102:
 507:modem.c       ****     }
 508:modem.c       ****     if(sscanf(s_sample_freq, "%d", &sample_freq)==1){
 1810              		.loc 1 508 0
 1811 00d8 07F11002 		add	r2, r7, #16
 1812 00dc 07F13403 		add	r3, r7, #52
 1813 00e0 3C49     		ldr	r1, .L110+28
 1814 00e2 1846     		mov	r0, r3
 1815 00e4 FFF7FEFF 		bl	sscanf
 1816 00e8 0346     		mov	r3, r0
 1817 00ea 012B     		cmp	r3, #1
 1818 00ec 19D1     		bne	.L103
 509:modem.c       ****         updatable_parameters.measure_time = sample_freq;
 1819              		.loc 1 509 0
 1820 00ee 3B69     		ldr	r3, [r7, #16]
 1821 00f0 DAB2     		uxtb	r2, r3
 1822 00f2 394B     		ldr	r3, .L110+32
 1823 00f4 9A70     		strb	r2, [r3, #2]
 510:modem.c       ****         // Create a continuous alarm called alarmMeasure that triggers at the required time to take
 511:modem.c       ****         alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_C
 1824              		.loc 1 511 0
 1825 00f6 384B     		ldr	r3, .L110+32
 1826 00f8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1827 00fa 99B2     		uxth	r1, r3
 1828 00fc 3B4C     		ldr	r4, .L110+52
 1829 00fe 3846     		mov	r0, r7
 1830 0100 0723     		movs	r3, #7
 1831 0102 0122     		movs	r2, #1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 45


 1832 0104 FFF7FEFF 		bl	CreateAlarm
 1833 0108 2246     		mov	r2, r4
 1834 010a 3B46     		mov	r3, r7
 1835 010c 1968     		ldr	r1, [r3]	@ unaligned
 1836 010e 1160     		str	r1, [r2]	@ unaligned
 1837 0110 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 1838 0112 9380     		strh	r3, [r2, #4]	@ unaligned
 512:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Sampling frequency changed to: %d\r\n", sample_freq);
 1839              		.loc 1 512 0
 1840 0114 3B69     		ldr	r3, [r7, #16]
 1841 0116 1A46     		mov	r2, r3
 1842 0118 3549     		ldr	r1, .L110+56
 1843 011a 0020     		movs	r0, #0
 1844 011c FFF7FEFF 		bl	printNotif
 1845 0120 03E0     		b	.L104
 1846              	.L103:
 513:modem.c       ****     }else{
 514:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new sampling frequency value.");
 1847              		.loc 1 514 0
 1848 0122 3449     		ldr	r1, .L110+60
 1849 0124 0220     		movs	r0, #2
 1850 0126 FFF7FEFF 		bl	printNotif
 1851              	.L104:
 515:modem.c       ****     }
 516:modem.c       ****     if(sscanf(s_report_freq, "%d", &report_freq)==1){
 1852              		.loc 1 516 0
 1853 012a 07F10C02 		add	r2, r7, #12
 1854 012e 07F12803 		add	r3, r7, #40
 1855 0132 2849     		ldr	r1, .L110+28
 1856 0134 1846     		mov	r0, r3
 1857 0136 FFF7FEFF 		bl	sscanf
 1858 013a 0346     		mov	r3, r0
 1859 013c 012B     		cmp	r3, #1
 1860 013e 19D1     		bne	.L105
 517:modem.c       ****         updatable_parameters.sync_time = report_freq;
 1861              		.loc 1 517 0
 1862 0140 FB68     		ldr	r3, [r7, #12]
 1863 0142 DAB2     		uxtb	r2, r3
 1864 0144 244B     		ldr	r3, .L110+32
 1865 0146 DA70     		strb	r2, [r3, #3]
 518:modem.c       ****         // Create a continuous alarm called alarmSync that triggers at the required time to sync th
 519:modem.c       ****         alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINU
 1866              		.loc 1 519 0
 1867 0148 234B     		ldr	r3, .L110+32
 1868 014a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1869 014c 99B2     		uxth	r1, r3
 1870 014e 2A4C     		ldr	r4, .L110+64
 1871 0150 3846     		mov	r0, r7
 1872 0152 0723     		movs	r3, #7
 1873 0154 0122     		movs	r2, #1
 1874 0156 FFF7FEFF 		bl	CreateAlarm
 1875 015a 2246     		mov	r2, r4
 1876 015c 3B46     		mov	r3, r7
 1877 015e 1968     		ldr	r1, [r3]	@ unaligned
 1878 0160 1160     		str	r1, [r2]	@ unaligned
 1879 0162 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 1880 0164 9380     		strh	r3, [r2, #4]	@ unaligned
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 46


 520:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Reporting frequency changed to: %d\r\n", report_freq);
 1881              		.loc 1 520 0
 1882 0166 FB68     		ldr	r3, [r7, #12]
 1883 0168 1A46     		mov	r2, r3
 1884 016a 2449     		ldr	r1, .L110+68
 1885 016c 0020     		movs	r0, #0
 1886 016e FFF7FEFF 		bl	printNotif
 1887 0172 03E0     		b	.L106
 1888              	.L105:
 521:modem.c       ****         }else{
 522:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new reporting frequency value.");
 1889              		.loc 1 522 0
 1890 0174 2249     		ldr	r1, .L110+72
 1891 0176 0220     		movs	r0, #2
 1892 0178 FFF7FEFF 		bl	printNotif
 1893              	.L106:
 523:modem.c       ****     }
 524:modem.c       ****     if(sscanf(s_debug_freq, "%d", &debug_freq)==1){
 1894              		.loc 1 524 0
 1895 017c 07F10802 		add	r2, r7, #8
 1896 0180 07F11C03 		add	r3, r7, #28
 1897 0184 1349     		ldr	r1, .L110+28
 1898 0186 1846     		mov	r0, r3
 1899 0188 FFF7FEFF 		bl	sscanf
 1900 018c 0346     		mov	r3, r0
 1901 018e 012B     		cmp	r3, #1
 1902 0190 0AD1     		bne	.L107
 525:modem.c       ****         updatable_parameters.debug_level = debug_freq;
 1903              		.loc 1 525 0
 1904 0192 BB68     		ldr	r3, [r7, #8]
 1905 0194 DAB2     		uxtb	r2, r3
 1906 0196 104B     		ldr	r3, .L110+32
 1907 0198 1A71     		strb	r2, [r3, #4]
 526:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Debug printing frequency changed to: %d\r\n", debug_freq);
 1908              		.loc 1 526 0
 1909 019a BB68     		ldr	r3, [r7, #8]
 1910 019c 1A46     		mov	r2, r3
 1911 019e 1949     		ldr	r1, .L110+76
 1912 01a0 0020     		movs	r0, #0
 1913 01a2 FFF7FEFF 		bl	printNotif
 527:modem.c       ****     }else{
 528:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new debugging frequency value.");
 529:modem.c       ****     }
 530:modem.c       **** }
 1914              		.loc 1 530 0
 1915 01a6 03E0     		b	.L109
 1916              	.L107:
 528:modem.c       ****     }
 1917              		.loc 1 528 0
 1918 01a8 1749     		ldr	r1, .L110+80
 1919 01aa 0220     		movs	r0, #2
 1920 01ac FFF7FEFF 		bl	printNotif
 1921              	.L109:
 1922              		.loc 1 530 0
 1923 01b0 00BF     		nop
 1924 01b2 5C37     		adds	r7, r7, #92
 1925              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 47


 1926 01b4 BD46     		mov	sp, r7
 1927              		.cfi_def_cfa_register 13
 1928              		@ sp needed
 1929 01b6 90BD     		pop	{r4, r7, pc}
 1930              	.L111:
 1931              		.align	2
 1932              	.L110:
 1933 01b8 88020000 		.word	.LC21
 1934 01bc 24030000 		.word	.LC32
 1935 01c0 00000000 		.word	uart_received_string
 1936 01c4 30030000 		.word	.LC33
 1937 01c8 3C030000 		.word	.LC34
 1938 01cc 4C030000 		.word	.LC35
 1939 01d0 5C030000 		.word	.LC36
 1940 01d4 6C030000 		.word	.LC37
 1941 01d8 00000000 		.word	updatable_parameters
 1942 01dc 70030000 		.word	.LC38
 1943 01e0 8C030000 		.word	.LC39
 1944 01e4 A8030000 		.word	.LC40
 1945 01e8 C4030000 		.word	.LC41
 1946 01ec 00000000 		.word	alarmMeasure
 1947 01f0 E0030000 		.word	.LC42
 1948 01f4 04040000 		.word	.LC43
 1949 01f8 00000000 		.word	alarmSync
 1950 01fc 34040000 		.word	.LC44
 1951 0200 5C040000 		.word	.LC45
 1952 0204 8C040000 		.word	.LC46
 1953 0208 B8040000 		.word	.LC47
 1954              		.cfi_endproc
 1955              	.LFE81:
 1956              		.size	get_updated_parameters_from_malcom, .-get_updated_parameters_from_malcom
 1957              		.section	.rodata
 1958 04e7 00       		.align	2
 1959              	.LC48:
 1960 04e8 41542343 		.ascii	"AT#CGMM\015\000"
 1960      474D4D0D 
 1960      00
 1961 04f1 000000   		.align	2
 1962              	.LC49:
 1963 04f4 4D6F6465 		.ascii	"Modem Model: %s\000"
 1963      6D204D6F 
 1963      64656C3A 
 1963      20257300 
 1964              		.align	2
 1965              	.LC50:
 1966 0504 41542343 		.ascii	"AT#CCID\015\000"
 1966      4349440D 
 1966      00
 1967 050d 000000   		.align	2
 1968              	.LC51:
 1969 0510 53494D20 		.ascii	"SIM ID: %s\000"
 1969      49443A20 
 1969      257300
 1970 051b 00       		.align	2
 1971              	.LC52:
 1972 051c 41542B43 		.ascii	"AT+CGSN\015\000"
 1972      47534E0D 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 48


 1972      00
 1973 0525 000000   		.align	2
 1974              	.LC53:
 1975 0528 494D4549 		.ascii	"IMEI: %s\000"
 1975      3A202573 
 1975      00
 1976 0531 000000   		.align	2
 1977              	.LC54:
 1978 0534 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\015\012"
 1978      4744434F 
 1978      4E543D31 
 1978      2C224950 
 1978      222C2277 
 1979 055d 00       		.ascii	"\000"
 1980 055e 0000     		.align	2
 1981              	.LC55:
 1982 0560 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"super\"\015\012\000"
 1982      4744434F 
 1982      4E543D31 
 1982      2C224950 
 1982      222C2273 
 1983              		.align	2
 1984              	.LC56:
 1985 057c 41542B43 		.ascii	"AT+CFUN?\015\000"
 1985      46554E3F 
 1985      0D00
 1986 0586 0000     		.align	2
 1987              	.LC57:
 1988 0588 4346554E 		.ascii	"CFUN: %s\000"
 1988      3A202573 
 1988      00
 1989 0591 000000   		.align	2
 1990              	.LC58:
 1991 0594 41542B43 		.ascii	"AT+CFUN=1\015\000"
 1991      46554E3D 
 1991      310D00
 1992              		.section	.text.modem_configure_settings,"ax",%progbits
 1993              		.align	2
 1994              		.global	modem_configure_settings
 1995              		.thumb
 1996              		.thumb_func
 1997              		.type	modem_configure_settings, %function
 1998              	modem_configure_settings:
 1999              	.LFB82:
 531:modem.c       ****     
 532:modem.c       **** // Configure the modem settings
 533:modem.c       **** void modem_configure_settings(){
 2000              		.loc 1 533 0
 2001              		.cfi_startproc
 2002              		@ args = 0, pretend = 0, frame = 16
 2003              		@ frame_needed = 1, uses_anonymous_args = 0
 2004 0000 80B5     		push	{r7, lr}
 2005              		.cfi_def_cfa_offset 8
 2006              		.cfi_offset 7, -8
 2007              		.cfi_offset 14, -4
 2008 0002 84B0     		sub	sp, sp, #16
 2009              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 49


 2010 0004 00AF     		add	r7, sp, #0
 2011              		.cfi_def_cfa_register 7
 534:modem.c       ****     
 535:modem.c       ****     // Save/print modem model ID number
 536:modem.c       ****     if(modem_info.model_id[0] == '\0'){
 2012              		.loc 1 536 0
 2013 0006 454B     		ldr	r3, .L121
 2014 0008 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 2015 000a 002B     		cmp	r3, #0
 2016 000c 13D1     		bne	.L113
 537:modem.c       ****         // AT command #CGMM returns the "device model identification" code with the command echo.
 538:modem.c       ****         if(at_write_command("AT#CGMM\r","OK",DEFAULT_AT_TIMEOUT)){
 2017              		.loc 1 538 0
 2018 000e 4FF4FA62 		mov	r2, #2000
 2019 0012 4349     		ldr	r1, .L121+4
 2020 0014 4348     		ldr	r0, .L121+8
 2021 0016 FFF7FEFF 		bl	at_write_command
 2022 001a 0346     		mov	r3, r0
 2023 001c 002B     		cmp	r3, #0
 2024 001e 0AD0     		beq	.L113
 539:modem.c       ****             // Extract modem model ID number string from the UART
 540:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.model_id);
 2025              		.loc 1 540 0
 2026 0020 414B     		ldr	r3, .L121+12
 2027 0022 424A     		ldr	r2, .L121+16
 2028 0024 4249     		ldr	r1, .L121+20
 2029 0026 4348     		ldr	r0, .L121+24
 2030 0028 FFF7FEFF 		bl	extract_string
 541:modem.c       ****             // Print modem model ID number
 542:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem Model: %s",modem_info.model_id);
 2031              		.loc 1 542 0
 2032 002c 3E4A     		ldr	r2, .L121+12
 2033 002e 4249     		ldr	r1, .L121+28
 2034 0030 0020     		movs	r0, #0
 2035 0032 FFF7FEFF 		bl	printNotif
 2036              	.L113:
 543:modem.c       ****         }
 544:modem.c       ****     }
 545:modem.c       ****     
 546:modem.c       ****    // Save/print SIM-card ID
 547:modem.c       ****    if(modem_info.sim_id[0] == '\0'){
 2037              		.loc 1 547 0
 2038 0036 394B     		ldr	r3, .L121
 2039 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2040 003a 002B     		cmp	r3, #0
 2041 003c 13D1     		bne	.L114
 548:modem.c       ****         // AT command #CCID is an execution command that reads the SIM number 
 549:modem.c       ****         if(at_write_command("AT#CCID\r", "OK", DEFAULT_AT_TIMEOUT)){
 2042              		.loc 1 549 0
 2043 003e 4FF4FA62 		mov	r2, #2000
 2044 0042 3749     		ldr	r1, .L121+4
 2045 0044 3D48     		ldr	r0, .L121+32
 2046 0046 FFF7FEFF 		bl	at_write_command
 2047 004a 0346     		mov	r3, r0
 2048 004c 002B     		cmp	r3, #0
 2049 004e 0AD0     		beq	.L114
 550:modem.c       ****             // Extract SIM-card ID string from the UART
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 50


 551:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.sim_id);
 2050              		.loc 1 551 0
 2051 0050 324B     		ldr	r3, .L121
 2052 0052 364A     		ldr	r2, .L121+16
 2053 0054 3649     		ldr	r1, .L121+20
 2054 0056 3748     		ldr	r0, .L121+24
 2055 0058 FFF7FEFF 		bl	extract_string
 552:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"SIM ID: %s",modem_info.sim_id);
 2056              		.loc 1 552 0
 2057 005c 2F4A     		ldr	r2, .L121
 2058 005e 3849     		ldr	r1, .L121+36
 2059 0060 0020     		movs	r0, #0
 2060 0062 FFF7FEFF 		bl	printNotif
 2061              	.L114:
 553:modem.c       ****         }
 554:modem.c       ****    }
 555:modem.c       **** 
 556:modem.c       ****     // Save/print modem IMEI
 557:modem.c       ****     if(modem_info.imei[0] == '\0'){
 2062              		.loc 1 557 0
 2063 0066 2D4B     		ldr	r3, .L121
 2064 0068 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 2065 006c 002B     		cmp	r3, #0
 2066 006e 13D1     		bne	.L115
 558:modem.c       ****         // AT command #CGSN returns the product serial number, identified as the IMEI of the mobile
 559:modem.c       ****         if(at_write_command("AT+CGSN\r","OK",DEFAULT_AT_TIMEOUT)){
 2067              		.loc 1 559 0
 2068 0070 4FF4FA62 		mov	r2, #2000
 2069 0074 2A49     		ldr	r1, .L121+4
 2070 0076 3348     		ldr	r0, .L121+40
 2071 0078 FFF7FEFF 		bl	at_write_command
 2072 007c 0346     		mov	r3, r0
 2073 007e 002B     		cmp	r3, #0
 2074 0080 0AD0     		beq	.L115
 560:modem.c       ****             // Extract modem IMEI number string from the UART
 561:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.imei);
 2075              		.loc 1 561 0
 2076 0082 314B     		ldr	r3, .L121+44
 2077 0084 294A     		ldr	r2, .L121+16
 2078 0086 2A49     		ldr	r1, .L121+20
 2079 0088 2A48     		ldr	r0, .L121+24
 2080 008a FFF7FEFF 		bl	extract_string
 562:modem.c       ****             // Print modem IMEI number
 563:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"IMEI: %s",modem_info.imei);
 2081              		.loc 1 563 0
 2082 008e 2E4A     		ldr	r2, .L121+44
 2083 0090 2E49     		ldr	r1, .L121+48
 2084 0092 0020     		movs	r0, #0
 2085 0094 FFF7FEFF 		bl	printNotif
 2086              	.L115:
 564:modem.c       ****         } 
 565:modem.c       ****     }
 566:modem.c       ****     
 567:modem.c       ****     // Configure protocol and cellular end point
 568:modem.c       ****     // AT command +CGDCONT defines the PDP context parameter values for a PDP context identified by
 569:modem.c       ****     if(updatable_parameters.sim_type == SIM_TYPE_STANDARD){
 2087              		.loc 1 569 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 51


 2088 0098 2D4B     		ldr	r3, .L121+52
 2089 009a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2090 009c 83F00103 		eor	r3, r3, #1
 2091 00a0 DBB2     		uxtb	r3, r3
 2092 00a2 002B     		cmp	r3, #0
 2093 00a4 06D0     		beq	.L116
 570:modem.c       ****         at_write_command("AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\r\n", "OK", DEFAULT_AT_TIMEOU
 2094              		.loc 1 570 0
 2095 00a6 4FF4FA62 		mov	r2, #2000
 2096 00aa 1D49     		ldr	r1, .L121+4
 2097 00ac 2948     		ldr	r0, .L121+56
 2098 00ae FFF7FEFF 		bl	at_write_command
 2099 00b2 09E0     		b	.L117
 2100              	.L116:
 571:modem.c       ****     
 572:modem.c       ****     }else if(updatable_parameters.sim_type == SIM_TYPE_SUPER){
 2101              		.loc 1 572 0
 2102 00b4 264B     		ldr	r3, .L121+52
 2103 00b6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2104 00b8 002B     		cmp	r3, #0
 2105 00ba 05D0     		beq	.L117
 573:modem.c       ****         at_write_command("AT+CGDCONT=1,\"IP\",\"super\"\r\n", "OK", DEFAULT_AT_TIMEOUT);
 2106              		.loc 1 573 0
 2107 00bc 4FF4FA62 		mov	r2, #2000
 2108 00c0 1749     		ldr	r1, .L121+4
 2109 00c2 2548     		ldr	r0, .L121+60
 2110 00c4 FFF7FEFF 		bl	at_write_command
 2111              	.L117:
 574:modem.c       ****     }
 575:modem.c       ****     
 576:modem.c       ****     // Check if modem power savings is enabled. If so, disable it so we can send data.
 577:modem.c       ****     // AT command +CFUN? is a read command that reports the current setting of <fun> which is the p
 578:modem.c       ****     if(at_write_command("AT+CFUN?\r", "OK",DEFAULT_AT_TIMEOUT)){
 2112              		.loc 1 578 0
 2113 00c8 4FF4FA62 		mov	r2, #2000
 2114 00cc 1449     		ldr	r1, .L121+4
 2115 00ce 2348     		ldr	r0, .L121+64
 2116 00d0 FFF7FEFF 		bl	at_write_command
 2117 00d4 0346     		mov	r3, r0
 2118 00d6 002B     		cmp	r3, #0
 2119 00d8 1BD0     		beq	.L120
 2120              	.LBB9:
 579:modem.c       ****         char CFUN[10]; // Create a character array of length 10 called CFUN 
 580:modem.c       ****         CFUN[0] = '\0';
 2121              		.loc 1 580 0
 2122 00da 0023     		movs	r3, #0
 2123 00dc 3B71     		strb	r3, [r7, #4]
 581:modem.c       ****         // Extract UART string recieved from the modem
 582:modem.c       ****         extract_string(uart_received_string,": ","\r",CFUN);
 2124              		.loc 1 582 0
 2125 00de 3B1D     		adds	r3, r7, #4
 2126 00e0 124A     		ldr	r2, .L121+16
 2127 00e2 1349     		ldr	r1, .L121+20
 2128 00e4 1348     		ldr	r0, .L121+24
 2129 00e6 FFF7FEFF 		bl	extract_string
 583:modem.c       ****         // Print UART string recieved from the modem
 584:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"CFUN: %s",CFUN);
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 52


 2130              		.loc 1 584 0
 2131 00ea 3B1D     		adds	r3, r7, #4
 2132 00ec 1A46     		mov	r2, r3
 2133 00ee 1C49     		ldr	r1, .L121+68
 2134 00f0 0020     		movs	r0, #0
 2135 00f2 FFF7FEFF 		bl	printNotif
 585:modem.c       ****         // Search CRUN for "1", if "1" exists, it will return 1u otherwise it will return NULL
 586:modem.c       ****         // If it returns NULL, then write another command to the modem
 587:modem.c       ****         if(strstr(CFUN,"1") == NULL){
 2136              		.loc 1 587 0
 2137 00f6 3B1D     		adds	r3, r7, #4
 2138 00f8 3121     		movs	r1, #49
 2139 00fa 1846     		mov	r0, r3
 2140 00fc FFF7FEFF 		bl	strchr
 2141 0100 0346     		mov	r3, r0
 2142 0102 002B     		cmp	r3, #0
 2143 0104 05D1     		bne	.L120
 588:modem.c       ****             // AT command +CFUN= is a set command which selects the level of functionality in the m
 589:modem.c       ****             // = 1 means mobile full functionality with power saving disabled 
 590:modem.c       ****             at_write_command("AT+CFUN=1\r", "OK",DEFAULT_AT_TIMEOUT);
 2144              		.loc 1 590 0
 2145 0106 4FF4FA62 		mov	r2, #2000
 2146 010a 0549     		ldr	r1, .L121+4
 2147 010c 1548     		ldr	r0, .L121+72
 2148 010e FFF7FEFF 		bl	at_write_command
 2149              	.L120:
 2150              	.LBE9:
 591:modem.c       ****         }
 592:modem.c       ****     }
 593:modem.c       **** 
 594:modem.c       ****     
 595:modem.c       **** }
 2151              		.loc 1 595 0
 2152 0112 00BF     		nop
 2153 0114 1037     		adds	r7, r7, #16
 2154              		.cfi_def_cfa_offset 8
 2155 0116 BD46     		mov	sp, r7
 2156              		.cfi_def_cfa_register 13
 2157              		@ sp needed
 2158 0118 80BD     		pop	{r7, pc}
 2159              	.L122:
 2160 011a 00BF     		.align	2
 2161              	.L121:
 2162 011c 00000000 		.word	modem_info
 2163 0120 00000000 		.word	.LC0
 2164 0124 E8040000 		.word	.LC48
 2165 0128 14000000 		.word	modem_info+20
 2166 012c 88020000 		.word	.LC21
 2167 0130 8C020000 		.word	.LC22
 2168 0134 00000000 		.word	uart_received_string
 2169 0138 F4040000 		.word	.LC49
 2170 013c 04050000 		.word	.LC50
 2171 0140 10050000 		.word	.LC51
 2172 0144 1C050000 		.word	.LC52
 2173 0148 28000000 		.word	modem_info+40
 2174 014c 28050000 		.word	.LC53
 2175 0150 00000000 		.word	updatable_parameters
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 53


 2176 0154 34050000 		.word	.LC54
 2177 0158 60050000 		.word	.LC55
 2178 015c 7C050000 		.word	.LC56
 2179 0160 88050000 		.word	.LC57
 2180 0164 94050000 		.word	.LC58
 2181              		.cfi_endproc
 2182              	.LFE82:
 2183              		.size	modem_configure_settings, .-modem_configure_settings
 2184              		.section	.rodata
 2185 059f 00       		.align	2
 2186              	.LC59:
 2187 05a0 4D6F6465 		.ascii	"Modem not ready to get time. Not conncted to networ"
 2187      6D206E6F 
 2187      74207265 
 2187      61647920 
 2187      746F2067 
 2188 05d3 6B2E00   		.ascii	"k.\000"
 2189 05d6 0000     		.align	2
 2190              	.LC60:
 2191 05d8 41542B43 		.ascii	"AT+CCLK?\015\000"
 2191      434C4B3F 
 2191      0D00
 2192 05e2 0000     		.align	2
 2193              	.LC61:
 2194 05e4 220D00   		.ascii	"\"\015\000"
 2195 05e7 00       		.align	2
 2196              	.LC62:
 2197 05e8 3A202200 		.ascii	": \"\000"
 2198              		.align	2
 2199              	.LC63:
 2200 05ec 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d-%d\000"
 2200      642F2564 
 2200      2C25643A 
 2200      25643A25 
 2200      642D2564 
 2201 0601 000000   		.align	2
 2202              	.LC64:
 2203 0604 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d+%d\000"
 2203      642F2564 
 2203      2C25643A 
 2203      25643A25 
 2203      642B2564 
 2204 0619 000000   		.align	2
 2205              	.LC65:
 2206 061c 436F756C 		.ascii	"Could not parse modem time.\000"
 2206      64206E6F 
 2206      74207061 
 2206      72736520 
 2206      6D6F6465 
 2207              		.section	.text.modem_get_network_time,"ax",%progbits
 2208              		.align	2
 2209              		.global	modem_get_network_time
 2210              		.thumb
 2211              		.thumb_func
 2212              		.type	modem_get_network_time, %function
 2213              	modem_get_network_time:
 2214              	.LFB83:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 54


 596:modem.c       **** 
 597:modem.c       **** //returns 0 if modem can't get time
 598:modem.c       **** long modem_get_network_time(){
 2215              		.loc 1 598 0
 2216              		.cfi_startproc
 2217              		@ args = 0, pretend = 0, frame = 104
 2218              		@ frame_needed = 1, uses_anonymous_args = 0
 2219 0000 80B5     		push	{r7, lr}
 2220              		.cfi_def_cfa_offset 8
 2221              		.cfi_offset 7, -8
 2222              		.cfi_offset 14, -4
 2223 0002 A0B0     		sub	sp, sp, #128
 2224              		.cfi_def_cfa_offset 136
 2225 0004 06AF     		add	r7, sp, #24
 2226              		.cfi_def_cfa 7, 112
 599:modem.c       ****     
 600:modem.c       ****     //modem reposen format (careful to include the quotes "")
 601:modem.c       ****     //+CCLK: "20/05/01,10:48:33-16" the "-16" is the number of quarter hourts (15 mins) from GMT ti
 602:modem.c       ****     //ex: 14:48 GMT
 603:modem.c       **** 
 604:modem.c       ****     // If modem_state is not "ready", then print error and return 0
 605:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2227              		.loc 1 605 0
 2228 0006 444B     		ldr	r3, .L130
 2229 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2230 000a 042B     		cmp	r3, #4
 2231 000c 05D0     		beq	.L124
 606:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Modem not ready to get time. Not conncted to network.");
 2232              		.loc 1 606 0
 2233 000e 4349     		ldr	r1, .L130+4
 2234 0010 0220     		movs	r0, #2
 2235 0012 FFF7FEFF 		bl	printNotif
 607:modem.c       ****         return 0;   
 2236              		.loc 1 607 0
 2237 0016 0023     		movs	r3, #0
 2238 0018 7AE0     		b	.L125
 2239              	.L124:
 608:modem.c       ****     }
 609:modem.c       ****     long epoch_time = 0; // Create variable of long time and set equal to 0
 2240              		.loc 1 609 0
 2241 001a 0023     		movs	r3, #0
 2242 001c 7B66     		str	r3, [r7, #100]
 610:modem.c       ****     
 611:modem.c       ****     // AT command +CCLK? is a read command that returns the current setting of the real-time clock 
 612:modem.c       ****     if(at_write_command("AT+CCLK?\r","OK",DEFAULT_AT_TIMEOUT)){
 2243              		.loc 1 612 0
 2244 001e 4FF4FA62 		mov	r2, #2000
 2245 0022 3F49     		ldr	r1, .L130+8
 2246 0024 3F48     		ldr	r0, .L130+12
 2247 0026 FFF7FEFF 		bl	at_write_command
 2248 002a 0346     		mov	r3, r0
 2249 002c 002B     		cmp	r3, #0
 2250 002e 6ED0     		beq	.L126
 2251              	.LBB10:
 613:modem.c       ****         // need to set this to /0
 614:modem.c       ****         char network_time[30]; // Create a character array of length 30 called network_time 
 615:modem.c       ****         network_time[0] = '\0';
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 55


 2252              		.loc 1 615 0
 2253 0030 0023     		movs	r3, #0
 2254 0032 87F84430 		strb	r3, [r7, #68]
 616:modem.c       ****         // Extract UART string recieved from the modem and save to variable network_time
 617:modem.c       ****         extract_string(uart_received_string,": \"","\"\r",network_time);
 2255              		.loc 1 617 0
 2256 0036 07F14403 		add	r3, r7, #68
 2257 003a 3B4A     		ldr	r2, .L130+16
 2258 003c 3B49     		ldr	r1, .L130+20
 2259 003e 3C48     		ldr	r0, .L130+24
 2260 0040 FFF7FEFF 		bl	extract_string
 618:modem.c       ****         
 619:modem.c       ****         ///////////////////  
 620:modem.c       ****         struct tm t; // Creates variable t of struct tm
 621:modem.c       ****         
 622:modem.c       ****         // Creates a bunch of variables of type int and sets them to 0
 623:modem.c       ****         int year, month, day, hour, minute, second, gmt_offset = 0;
 2261              		.loc 1 623 0
 2262 0044 0023     		movs	r3, #0
 2263 0046 BB62     		str	r3, [r7, #40]
 624:modem.c       ****       
 625:modem.c       ****         // Determines the GMT offset 
 626:modem.c       ****         // int sscanf(const char *str, const char *format, ...) reads formatted input from a string
 627:modem.c       ****         // On success, the function returns the number of variables filled. In the case of an input
 628:modem.c       ****         if(sscanf(network_time,"%d/%d/%d,%d:%d:%d-%d",&year,&month,&day,&hour,&minute,&second,&gmt_
 2264              		.loc 1 628 0
 2265 0048 07F13C01 		add	r1, r7, #60
 2266 004c 07F14002 		add	r2, r7, #64
 2267 0050 07F14400 		add	r0, r7, #68
 2268 0054 07F12803 		add	r3, r7, #40
 2269 0058 0493     		str	r3, [sp, #16]
 2270 005a 07F12C03 		add	r3, r7, #44
 2271 005e 0393     		str	r3, [sp, #12]
 2272 0060 07F13003 		add	r3, r7, #48
 2273 0064 0293     		str	r3, [sp, #8]
 2274 0066 07F13403 		add	r3, r7, #52
 2275 006a 0193     		str	r3, [sp, #4]
 2276 006c 07F13803 		add	r3, r7, #56
 2277 0070 0093     		str	r3, [sp]
 2278 0072 0B46     		mov	r3, r1
 2279 0074 2F49     		ldr	r1, .L130+28
 2280 0076 FFF7FEFF 		bl	sscanf
 2281 007a 0346     		mov	r3, r0
 2282 007c 072B     		cmp	r3, #7
 2283 007e 06D1     		bne	.L127
 629:modem.c       ****             gmt_offset = gmt_offset*(900);
 2284              		.loc 1 629 0
 2285 0080 BB6A     		ldr	r3, [r7, #40]
 2286 0082 4FF46172 		mov	r2, #900
 2287 0086 02FB03F3 		mul	r3, r2, r3
 2288 008a BB62     		str	r3, [r7, #40]
 2289 008c 27E0     		b	.L128
 2290              	.L127:
 630:modem.c       ****         }else if(sscanf(network_time,"%d/%d/%d,%d:%d:%d+%d",&year,&month,&day,&hour,&minute,&second
 2291              		.loc 1 630 0
 2292 008e 07F13C01 		add	r1, r7, #60
 2293 0092 07F14002 		add	r2, r7, #64
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 56


 2294 0096 07F14400 		add	r0, r7, #68
 2295 009a 07F12803 		add	r3, r7, #40
 2296 009e 0493     		str	r3, [sp, #16]
 2297 00a0 07F12C03 		add	r3, r7, #44
 2298 00a4 0393     		str	r3, [sp, #12]
 2299 00a6 07F13003 		add	r3, r7, #48
 2300 00aa 0293     		str	r3, [sp, #8]
 2301 00ac 07F13403 		add	r3, r7, #52
 2302 00b0 0193     		str	r3, [sp, #4]
 2303 00b2 07F13803 		add	r3, r7, #56
 2304 00b6 0093     		str	r3, [sp]
 2305 00b8 0B46     		mov	r3, r1
 2306 00ba 1F49     		ldr	r1, .L130+32
 2307 00bc FFF7FEFF 		bl	sscanf
 2308 00c0 0346     		mov	r3, r0
 2309 00c2 072B     		cmp	r3, #7
 2310 00c4 05D1     		bne	.L129
 631:modem.c       ****             gmt_offset = gmt_offset*(-900);
 2311              		.loc 1 631 0
 2312 00c6 BB6A     		ldr	r3, [r7, #40]
 2313 00c8 1C4A     		ldr	r2, .L130+36
 2314 00ca 02FB03F3 		mul	r3, r2, r3
 2315 00ce BB62     		str	r3, [r7, #40]
 2316 00d0 05E0     		b	.L128
 2317              	.L129:
 632:modem.c       ****         }else{
 633:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Could not parse modem time.");
 2318              		.loc 1 633 0
 2319 00d2 1B49     		ldr	r1, .L130+40
 2320 00d4 0220     		movs	r0, #2
 2321 00d6 FFF7FEFF 		bl	printNotif
 634:modem.c       ****             return 0;  // Return 0 if cannot get time 
 2322              		.loc 1 634 0
 2323 00da 0023     		movs	r3, #0
 2324 00dc 18E0     		b	.L125
 2325              	.L128:
 635:modem.c       ****         }
 636:modem.c       ****         
 637:modem.c       ****         // Sets each variable to the correct time 
 638:modem.c       ****         t.tm_sec = second;
 2326              		.loc 1 638 0
 2327 00de FB6A     		ldr	r3, [r7, #44]
 2328 00e0 7B60     		str	r3, [r7, #4]
 639:modem.c       ****         t.tm_min = minute;
 2329              		.loc 1 639 0
 2330 00e2 3B6B     		ldr	r3, [r7, #48]
 2331 00e4 BB60     		str	r3, [r7, #8]
 640:modem.c       ****         t.tm_hour = hour;
 2332              		.loc 1 640 0
 2333 00e6 7B6B     		ldr	r3, [r7, #52]
 2334 00e8 FB60     		str	r3, [r7, #12]
 641:modem.c       ****         t.tm_year = year + 100;    // Year since 1900
 2335              		.loc 1 641 0
 2336 00ea 3B6C     		ldr	r3, [r7, #64]
 2337 00ec 6433     		adds	r3, r3, #100
 2338 00ee BB61     		str	r3, [r7, #24]
 642:modem.c       ****         t.tm_mon = month-1;        // Month, where 0 = jan
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 57


 2339              		.loc 1 642 0
 2340 00f0 FB6B     		ldr	r3, [r7, #60]
 2341 00f2 013B     		subs	r3, r3, #1
 2342 00f4 7B61     		str	r3, [r7, #20]
 643:modem.c       ****         t.tm_mday = day;           // Day of the month
 2343              		.loc 1 643 0
 2344 00f6 BB6B     		ldr	r3, [r7, #56]
 2345 00f8 3B61     		str	r3, [r7, #16]
 644:modem.c       ****         t.tm_isdst = 0;            // Is Daylight Savings on? 1 = yes, 0 = no, -1 = unknown
 2346              		.loc 1 644 0
 2347 00fa 0023     		movs	r3, #0
 2348 00fc 7B62     		str	r3, [r7, #36]
 645:modem.c       ****     
 646:modem.c       ****         // Set variable epoch-time to be equal to the local time plus the GMT offset
 647:modem.c       ****         // the mktime function converts a broken-down local time (pointed to by timeptr) and return
 648:modem.c       ****         epoch_time = mktime(&t) + gmt_offset;
 2349              		.loc 1 648 0
 2350 00fe 3B1D     		adds	r3, r7, #4
 2351 0100 1846     		mov	r0, r3
 2352 0102 FFF7FEFF 		bl	mktime
 2353 0106 0246     		mov	r2, r0
 2354 0108 BB6A     		ldr	r3, [r7, #40]
 2355 010a 1344     		add	r3, r3, r2
 2356 010c 7B66     		str	r3, [r7, #100]
 2357              	.L126:
 2358              	.LBE10:
 649:modem.c       ****     }
 650:modem.c       ****     
 651:modem.c       ****     return epoch_time;
 2359              		.loc 1 651 0
 2360 010e 7B6E     		ldr	r3, [r7, #100]
 2361              	.L125:
 652:modem.c       **** }
 2362              		.loc 1 652 0
 2363 0110 1846     		mov	r0, r3
 2364 0112 6837     		adds	r7, r7, #104
 2365              		.cfi_def_cfa_offset 8
 2366 0114 BD46     		mov	sp, r7
 2367              		.cfi_def_cfa_register 13
 2368              		@ sp needed
 2369 0116 80BD     		pop	{r7, pc}
 2370              	.L131:
 2371              		.align	2
 2372              	.L130:
 2373 0118 00000000 		.word	modem_state
 2374 011c A0050000 		.word	.LC59
 2375 0120 00000000 		.word	.LC0
 2376 0124 D8050000 		.word	.LC60
 2377 0128 E4050000 		.word	.LC61
 2378 012c E8050000 		.word	.LC62
 2379 0130 00000000 		.word	uart_received_string
 2380 0134 EC050000 		.word	.LC63
 2381 0138 04060000 		.word	.LC64
 2382 013c 7CFCFFFF 		.word	-900
 2383 0140 1C060000 		.word	.LC65
 2384              		.cfi_endproc
 2385              	.LFE83:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 58


 2386              		.size	modem_get_network_time, .-modem_get_network_time
 2387              		.section	.text.modem_get_state,"ax",%progbits
 2388              		.align	2
 2389              		.global	modem_get_state
 2390              		.thumb
 2391              		.thumb_func
 2392              		.type	modem_get_state, %function
 2393              	modem_get_state:
 2394              	.LFB84:
 653:modem.c       **** 
 654:modem.c       **** // Get the modem state
 655:modem.c       **** uint8 modem_get_state(){
 2395              		.loc 1 655 0
 2396              		.cfi_startproc
 2397              		@ args = 0, pretend = 0, frame = 0
 2398              		@ frame_needed = 1, uses_anonymous_args = 0
 2399              		@ link register save eliminated.
 2400 0000 80B4     		push	{r7}
 2401              		.cfi_def_cfa_offset 4
 2402              		.cfi_offset 7, -4
 2403 0002 00AF     		add	r7, sp, #0
 2404              		.cfi_def_cfa_register 7
 656:modem.c       ****     return modem_state;
 2405              		.loc 1 656 0
 2406 0004 024B     		ldr	r3, .L134
 2407 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 657:modem.c       **** }
 2408              		.loc 1 657 0
 2409 0008 1846     		mov	r0, r3
 2410 000a BD46     		mov	sp, r7
 2411              		.cfi_def_cfa_register 13
 2412              		@ sp needed
 2413 000c 80BC     		pop	{r7}
 2414              		.cfi_restore 7
 2415              		.cfi_def_cfa_offset 0
 2416 000e 7047     		bx	lr
 2417              	.L135:
 2418              		.align	2
 2419              	.L134:
 2420 0010 00000000 		.word	modem_state
 2421              		.cfi_endproc
 2422              	.LFE84:
 2423              		.size	modem_get_state, .-modem_get_state
 2424              		.section	.text.modem_sleep,"ax",%progbits
 2425              		.align	2
 2426              		.global	modem_sleep
 2427              		.thumb
 2428              		.thumb_func
 2429              		.type	modem_sleep, %function
 2430              	modem_sleep:
 2431              	.LFB85:
 658:modem.c       **** 
 659:modem.c       **** // Set modem to sleep
 660:modem.c       **** void modem_sleep(){
 2432              		.loc 1 660 0
 2433              		.cfi_startproc
 2434              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 59


 2435              		@ frame_needed = 1, uses_anonymous_args = 0
 2436 0000 80B5     		push	{r7, lr}
 2437              		.cfi_def_cfa_offset 8
 2438              		.cfi_offset 7, -8
 2439              		.cfi_offset 14, -4
 2440 0002 00AF     		add	r7, sp, #0
 2441              		.cfi_def_cfa_register 7
 661:modem.c       ****     // If the modem_state is not "off" then put it to sleep
 662:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2442              		.loc 1 662 0
 2443 0004 FFF7FEFF 		bl	modem_get_state
 2444 0008 0346     		mov	r3, r0
 2445 000a 002B     		cmp	r3, #0
 2446 000c 03D0     		beq	.L138
 663:modem.c       **** 
 664:modem.c       ****         Telit_ControlReg_Sleep(); // Prepares the modem for entering the low power mode.
 2447              		.loc 1 664 0
 2448 000e FFF7FEFF 		bl	Telit_ControlReg_Sleep
 665:modem.c       ****         UART_Telit_Sleep(); // Saves the current component state, calls the UART_Telit_Stop() funct
 2449              		.loc 1 665 0
 2450 0012 FFF7FEFF 		bl	UART_Telit_Sleep
 2451              	.L138:
 666:modem.c       ****         
 667:modem.c       ****         // Set interrupt on RX pin to wakeup chip from sleep if UART comm starts
 668:modem.c       ****        // Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_FALLING);
 669:modem.c       ****      }
 670:modem.c       **** }
 2452              		.loc 1 670 0
 2453 0016 00BF     		nop
 2454 0018 80BD     		pop	{r7, pc}
 2455              		.cfi_endproc
 2456              	.LFE85:
 2457              		.size	modem_sleep, .-modem_sleep
 2458 001a 00BF     		.section	.text.modem_wakeup,"ax",%progbits
 2459              		.align	2
 2460              		.global	modem_wakeup
 2461              		.thumb
 2462              		.thumb_func
 2463              		.type	modem_wakeup, %function
 2464              	modem_wakeup:
 2465              	.LFB86:
 671:modem.c       **** 
 672:modem.c       **** // Wakeup the modem
 673:modem.c       **** void modem_wakeup(){
 2466              		.loc 1 673 0
 2467              		.cfi_startproc
 2468              		@ args = 0, pretend = 0, frame = 0
 2469              		@ frame_needed = 1, uses_anonymous_args = 0
 2470 0000 80B5     		push	{r7, lr}
 2471              		.cfi_def_cfa_offset 8
 2472              		.cfi_offset 7, -8
 2473              		.cfi_offset 14, -4
 2474 0002 00AF     		add	r7, sp, #0
 2475              		.cfi_def_cfa_register 7
 674:modem.c       ****     // If modem state is not off then wake it up
 675:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2476              		.loc 1 675 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 60


 2477 0004 FFF7FEFF 		bl	modem_get_state
 2478 0008 0346     		mov	r3, r0
 2479 000a 002B     		cmp	r3, #0
 2480 000c 0BD0     		beq	.L141
 676:modem.c       ****         Telit_ControlReg_Wakeup(); // Restores the modem after waking up from the low power mode.
 2481              		.loc 1 676 0
 2482 000e FFF7FEFF 		bl	Telit_ControlReg_Wakeup
 677:modem.c       ****         // Calls the UART_Telit_RestoreConfig() function to restore the configuration.
 678:modem.c       ****         // If the modem was enabled before the UART_Telit_Sleep() function was called, the UART_Tel
 679:modem.c       ****         UART_Telit_Wakeup();
 2483              		.loc 1 679 0
 2484 0012 FFF7FEFF 		bl	UART_Telit_Wakeup
 680:modem.c       ****         // Remove the need for this pin itterupt
 681:modem.c       ****         //Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 682:modem.c       ****         
 683:modem.c       ****         // If woken up from pin, go ahead and delay for 100ms to allow modem UART to deliver the me
 684:modem.c       ****         if(modem_get_state() == MODEM_STATE_WAITING_FOR_IP){
 2485              		.loc 1 684 0
 2486 0016 FFF7FEFF 		bl	modem_get_state
 2487 001a 0346     		mov	r3, r0
 2488 001c 032B     		cmp	r3, #3
 2489 001e 02D1     		bne	.L141
 685:modem.c       ****             CyDelay(100u);
 2490              		.loc 1 685 0
 2491 0020 6420     		movs	r0, #100
 2492 0022 FFF7FEFF 		bl	CyDelay
 2493              	.L141:
 686:modem.c       ****         }
 687:modem.c       ****      }
 688:modem.c       **** }
 2494              		.loc 1 688 0
 2495 0026 00BF     		nop
 2496 0028 80BD     		pop	{r7, pc}
 2497              		.cfi_endproc
 2498              	.LFE86:
 2499              		.size	modem_wakeup, .-modem_wakeup
 2500 002a 00BF     		.section	.rodata
 2501              		.align	2
 2502              	.LC66:
 2503 0638 41542347 		.ascii	"AT#GPIO=5,1,1,0\015\000"
 2503      50494F3D 
 2503      352C312C 
 2503      312C300D 
 2503      00
 2504 0649 000000   		.align	2
 2505              	.LC67:
 2506 064c 41542453 		.ascii	"AT$SUPLSEC=1\015\000"
 2506      55504C53 
 2506      45433D31 
 2506      0D00
 2507 065a 0000     		.align	2
 2508              	.LC68:
 2509 065c 41542453 		.ascii	"AT$SUPLV=2\015\000"
 2509      55504C56 
 2509      3D320D00 
 2510              		.align	2
 2511              	.LC69:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 61


 2512 0668 41542441 		.ascii	"AT$AGPSEN=1\015\000"
 2512      47505345 
 2512      4E3D310D 
 2512      00
 2513 0675 000000   		.align	2
 2514              	.LC70:
 2515 0678 41542453 		.ascii	"AT$SLP=1,\"supl.google.com:7275\"\015\000"
 2515      4C503D31 
 2515      2C227375 
 2515      706C2E67 
 2515      6F6F676C 
 2516 0699 000000   		.align	2
 2517              	.LC71:
 2518 069c 41542353 		.ascii	"AT#SGACT=1,0\015\012\000"
 2518      47414354 
 2518      3D312C30 
 2518      0D0A00
 2519 06ab 00       		.align	2
 2520              	.LC72:
 2521 06ac 4154244C 		.ascii	"AT$LCSLK=1,1\015\000"
 2521      43534C4B 
 2521      3D312C31 
 2521      0D00
 2522 06ba 0000     		.align	2
 2523              	.LC73:
 2524 06bc 41542447 		.ascii	"AT$GPSSLSR=1,1,,,,,2\015\000"
 2524      5053534C 
 2524      53523D31 
 2524      2C312C2C 
 2524      2C2C2C32 
 2525 06d2 0000     		.align	2
 2526              	.LC74:
 2527 06d4 4E00     		.ascii	"N\000"
 2528 06d6 0000     		.align	2
 2529              	.LC75:
 2530 06d8 41542447 		.ascii	"AT$GPSACP\015\000"
 2530      50534143 
 2530      500D00
 2531 06e3 00       		.align	2
 2532              	.LC76:
 2533 06e4 24475053 		.ascii	"$GPSACP: \000"
 2533      4143503A 
 2533      2000
 2534 06ee 0000     		.align	2
 2535              	.LC77:
 2536 06f0 24475053 		.ascii	"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s\000"
 2536      4143503A 
 2536      20252A66 
 2536      2C25664E 
 2536      2C256657 
 2537              		.global	__aeabi_fdiv
 2538              		.global	__aeabi_f2d
 2539              		.global	__aeabi_ddiv
 2540              		.global	__aeabi_dadd
 2541              		.global	__aeabi_d2f
 2542              		.align	2
 2543              	.LC78:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 62


 2544 0710 41542347 		.ascii	"AT#GPIO=5,0,1,0\015\000"
 2544      50494F3D 
 2544      352C302C 
 2544      312C300D 
 2544      00
 2545 0721 000000   		.align	2
 2546              	.LC79:
 2547 0724 41542447 		.ascii	"AT$GPSR=0\015\000"
 2547      5053523D 
 2547      300D00
 2548 072f 00       		.align	2
 2549              	.LC80:
 2550 0730 54696D65 		.ascii	"Time to lock GPS: %d\000"
 2550      20746F20 
 2550      6C6F636B 
 2550      20475053 
 2550      3A202564 
 2551              		.section	.text.modem_get_gps_coordinates,"ax",%progbits
 2552              		.align	2
 2553              		.global	modem_get_gps_coordinates
 2554              		.thumb
 2555              		.thumb_func
 2556              		.type	modem_get_gps_coordinates, %function
 2557              	modem_get_gps_coordinates:
 2558              	.LFB87:
 689:modem.c       **** 
 690:modem.c       ****     
 691:modem.c       **** // Returns lat,lom,alt data from Assited GPS (AGPS) system
 692:modem.c       **** gps_t modem_get_gps_coordinates(){
 2559              		.loc 1 692 0
 2560              		.cfi_startproc
 2561              		@ args = 0, pretend = 0, frame = 56
 2562              		@ frame_needed = 1, uses_anonymous_args = 0
 2563 0000 B0B5     		push	{r4, r5, r7, lr}
 2564              		.cfi_def_cfa_offset 16
 2565              		.cfi_offset 4, -16
 2566              		.cfi_offset 5, -12
 2567              		.cfi_offset 7, -8
 2568              		.cfi_offset 14, -4
 2569 0002 90B0     		sub	sp, sp, #64
 2570              		.cfi_def_cfa_offset 80
 2571 0004 02AF     		add	r7, sp, #8
 2572              		.cfi_def_cfa 7, 72
 2573 0006 7860     		str	r0, [r7, #4]
 693:modem.c       ****     gps_t gps;
 694:modem.c       ****     gps.altitude = 0;
 2574              		.loc 1 694 0
 2575 0008 4FF00003 		mov	r3, #0
 2576 000c FB61     		str	r3, [r7, #28]	@ float
 695:modem.c       ****     gps.longitude = 0;
 2577              		.loc 1 695 0
 2578 000e 4FF00003 		mov	r3, #0
 2579 0012 BB61     		str	r3, [r7, #24]	@ float
 696:modem.c       ****     gps.latitude = 0;
 2580              		.loc 1 696 0
 2581 0014 4FF00003 		mov	r3, #0
 2582 0018 7B61     		str	r3, [r7, #20]	@ float
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 63


 697:modem.c       ****     gps.time_to_lock =0;
 2583              		.loc 1 697 0
 2584 001a 0023     		movs	r3, #0
 2585 001c 3B84     		strh	r3, [r7, #32]	@ movhi
 698:modem.c       ****     gps.valid = 0;
 2586              		.loc 1 698 0
 2587 001e 0023     		movs	r3, #0
 2588 0020 87F82230 		strb	r3, [r7, #34]
 699:modem.c       ****     
 700:modem.c       ****     //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 701:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2589              		.loc 1 701 0
 2590 0024 7F4B     		ldr	r3, .L152
 2591 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2592 0028 042B     		cmp	r3, #4
 2593 002a 07D0     		beq	.L143
 702:modem.c       ****         return gps;//where valid = 0
 2594              		.loc 1 702 0
 2595 002c 7B68     		ldr	r3, [r7, #4]
 2596 002e 1C46     		mov	r4, r3
 2597 0030 07F11403 		add	r3, r7, #20
 2598 0034 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2599 0036 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2600 003a EFE0     		b	.L142
 2601              	.L143:
 703:modem.c       ****     }
 704:modem.c       ****     
 705:modem.c       ****     long lock_time = getTimeStamp();
 2602              		.loc 1 705 0
 2603 003c FFF7FEFF 		bl	getTimeStamp
 2604 0040 3863     		str	r0, [r7, #48]
 706:modem.c       ****     
 707:modem.c       ****     // Enable this for the LTER module
 708:modem.c       ****     // Enable GPS Low-Dropout Regulator
 709:modem.c       ****     at_write_command("AT#GPIO=5,1,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2605              		.loc 1 709 0
 2606 0042 4FF4FA62 		mov	r2, #2000
 2607 0046 7849     		ldr	r1, .L152+4
 2608 0048 7848     		ldr	r0, .L152+8
 2609 004a FFF7FEFF 		bl	at_write_command
 710:modem.c       ****     
 711:modem.c       ****     // Configure SUPL connection params
 712:modem.c       ****     at_write_command("AT$SUPLSEC=1\r","OK",DEFAULT_AT_TIMEOUT);
 2610              		.loc 1 712 0
 2611 004e 4FF4FA62 		mov	r2, #2000
 2612 0052 7549     		ldr	r1, .L152+4
 2613 0054 7648     		ldr	r0, .L152+12
 2614 0056 FFF7FEFF 		bl	at_write_command
 713:modem.c       ****     
 714:modem.c       ****     // Use SUPL2.0
 715:modem.c       ****     at_write_command("AT$SUPLV=2\r","OK",DEFAULT_AT_TIMEOUT);
 2615              		.loc 1 715 0
 2616 005a 4FF4FA62 		mov	r2, #2000
 2617 005e 7249     		ldr	r1, .L152+4
 2618 0060 7448     		ldr	r0, .L152+16
 2619 0062 FFF7FEFF 		bl	at_write_command
 716:modem.c       ****     
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 64


 717:modem.c       ****     // Enable AGPS service
 718:modem.c       ****     at_write_command("AT$AGPSEN=1\r","OK",DEFAULT_AT_TIMEOUT);
 2620              		.loc 1 718 0
 2621 0066 4FF4FA62 		mov	r2, #2000
 2622 006a 6F49     		ldr	r1, .L152+4
 2623 006c 7248     		ldr	r0, .L152+20
 2624 006e FFF7FEFF 		bl	at_write_command
 719:modem.c       ****     
 720:modem.c       ****     // Chose SUPL server, use google public service
 721:modem.c       ****     at_write_command("AT$SLP=1,\"supl.google.com:7275\"\r","OK",DEFAULT_AT_TIMEOUT);
 2625              		.loc 1 721 0
 2626 0072 4FF4FA62 		mov	r2, #2000
 2627 0076 6C49     		ldr	r1, .L152+4
 2628 0078 7048     		ldr	r0, .L152+24
 2629 007a FFF7FEFF 		bl	at_write_command
 722:modem.c       ****     
 723:modem.c       ****     //pdp context has to be locked to carrier for this to work
 724:modem.c       ****     
 725:modem.c       ****     // Unlock context since it needs to be used by modem
 726:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 2630              		.loc 1 726 0
 2631 007e 4FF4FA62 		mov	r2, #2000
 2632 0082 6949     		ldr	r1, .L152+4
 2633 0084 6E48     		ldr	r0, .L152+28
 2634 0086 FFF7FEFF 		bl	at_write_command
 727:modem.c       ****     
 728:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",DEFAULT_AT_TIMEOUT);//ATT
 2635              		.loc 1 728 0
 2636 008a 4FF4FA62 		mov	r2, #2000
 2637 008e 6649     		ldr	r1, .L152+4
 2638 0090 6C48     		ldr	r0, .L152+32
 2639 0092 FFF7FEFF 		bl	at_write_command
 729:modem.c       ****     //at_write_command("AT$LCSLK=1,3\r","OK",DEFAULT_AT_TIMEOUT);//Verizon
 730:modem.c       ****     
 731:modem.c       ****     // Relock the context
 732:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 2640              		.loc 1 732 0
 2641 0096 42F21072 		movw	r2, #10000
 2642 009a 6349     		ldr	r1, .L152+4
 2643 009c 6A48     		ldr	r0, .L152+36
 2644 009e FFF7FEFF 		bl	at_write_command
 733:modem.c       ****     
 734:modem.c       ****     //start AGPS service
 735:modem.c       ****     at_write_command("AT$GPSSLSR=1,1,,,,,2\r","OK",DEFAULT_AT_TIMEOUT); 
 2645              		.loc 1 735 0
 2646 00a2 4FF4FA62 		mov	r2, #2000
 2647 00a6 6049     		ldr	r1, .L152+4
 2648 00a8 6848     		ldr	r0, .L152+40
 2649 00aa FFF7FEFF 		bl	at_write_command
 736:modem.c       ****     
 737:modem.c       ****     
 738:modem.c       ****     // Start the AGPS service
 739:modem.c       ****     // Will keep receiving a buynch of commas without numbers, until GPS locks
 740:modem.c       ****     // Good lock will return a string with "N" and "W" coordinates
 741:modem.c       ****     
 742:modem.c       ****     
 743:modem.c       ****  
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 65


 744:modem.c       ****     uint8 gps_status = 0;
 2650              		.loc 1 744 0
 2651 00ae 0023     		movs	r3, #0
 2652 00b0 87F82F30 		strb	r3, [r7, #47]
 2653              	.LBB11:
 745:modem.c       ****     for(uint16 i=0;i<200;i++){
 2654              		.loc 1 745 0
 2655 00b4 0023     		movs	r3, #0
 2656 00b6 FB86     		strh	r3, [r7, #54]	@ movhi
 2657 00b8 13E0     		b	.L145
 2658              	.L148:
 746:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2659              		.loc 1 746 0
 2660 00ba 4FF4FA62 		mov	r2, #2000
 2661 00be 6449     		ldr	r1, .L152+44
 2662 00c0 6448     		ldr	r0, .L152+48
 2663 00c2 FFF7FEFF 		bl	at_write_command
 2664 00c6 0346     		mov	r3, r0
 2665 00c8 87F82F30 		strb	r3, [r7, #47]
 747:modem.c       ****         if(gps_status){
 2666              		.loc 1 747 0
 2667 00cc 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2668 00d0 002B     		cmp	r3, #0
 2669 00d2 0AD1     		bne	.L151
 748:modem.c       ****             break;   
 749:modem.c       ****         }
 750:modem.c       ****         CyDelay(1000u);// Wait for a second -- BLOCKING. Could be more elegant to incorporate this 
 2670              		.loc 1 750 0 discriminator 2
 2671 00d4 4FF47A70 		mov	r0, #1000
 2672 00d8 FFF7FEFF 		bl	CyDelay
 745:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2673              		.loc 1 745 0 discriminator 2
 2674 00dc FB8E     		ldrh	r3, [r7, #54]
 2675 00de 0133     		adds	r3, r3, #1
 2676 00e0 FB86     		strh	r3, [r7, #54]	@ movhi
 2677              	.L145:
 745:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2678              		.loc 1 745 0 is_stmt 0 discriminator 1
 2679 00e2 FB8E     		ldrh	r3, [r7, #54]
 2680 00e4 C72B     		cmp	r3, #199
 2681 00e6 E8D9     		bls	.L148
 2682 00e8 00E0     		b	.L147
 2683              	.L151:
 748:modem.c       ****             break;   
 2684              		.loc 1 748 0 is_stmt 1
 2685 00ea 00BF     		nop
 2686              	.L147:
 2687              	.LBE11:
 751:modem.c       ****     }
 752:modem.c       ****     
 753:modem.c       ****     //parse data here
 754:modem.c       ****     
 755:modem.c       ****     //example $GPSACP: 210926.000,4217.8003N,08341.3158W,2.3,258.2,3,17.8,4.8,2.6,220520,05,00
 756:modem.c       ****     float lat;
 757:modem.c       ****     float lon;
 758:modem.c       ****     float alt;
 759:modem.c       ****     
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 66


 760:modem.c       ****     // Look for $GPSACP:  in uart_received_string and save to sl
 761:modem.c       ****     // char *strstr(const char *haystack, const char *needle) function finds the first occurrence o
 762:modem.c       ****     char *s1 = strstr(uart_received_string,"$GPSACP: ");
 2688              		.loc 1 762 0
 2689 00ec 5A49     		ldr	r1, .L152+52
 2690 00ee 5B48     		ldr	r0, .L152+56
 2691 00f0 FFF7FEFF 		bl	strstr
 2692 00f4 B862     		str	r0, [r7, #40]
 763:modem.c       ****     // Look in sl for lat, long, alt and save in match 
 764:modem.c       ****     // int sscanf(const char *str, const char *format, ...) reads formatted input from a string.
 765:modem.c       ****     int match = sscanf(s1,"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s",&lat,&lon,&alt);
 2693              		.loc 1 765 0
 2694 00f6 07F10C01 		add	r1, r7, #12
 2695 00fa 07F11002 		add	r2, r7, #16
 2696 00fe 07F10803 		add	r3, r7, #8
 2697 0102 0093     		str	r3, [sp]
 2698 0104 0B46     		mov	r3, r1
 2699 0106 5649     		ldr	r1, .L152+60
 2700 0108 B86A     		ldr	r0, [r7, #40]
 2701 010a FFF7FEFF 		bl	sscanf
 2702 010e 7862     		str	r0, [r7, #36]
 766:modem.c       ****     if(match >= 3){
 2703              		.loc 1 766 0
 2704 0110 7B6A     		ldr	r3, [r7, #36]
 2705 0112 022B     		cmp	r3, #2
 2706 0114 60DD     		ble	.L149
 767:modem.c       ****         // Calculate lat and lon
 768:modem.c       ****         // floorf(x) calculates the largest integer that is less than or equal to x. 
 769:modem.c       ****         // fmod(double x, double y) returns the remainder of x divided by y.
 770:modem.c       ****         lat = floorf(lat/100) + fmod(lat,100)/60;
 2707              		.loc 1 770 0
 2708 0116 3B69     		ldr	r3, [r7, #16]	@ float
 2709 0118 5249     		ldr	r1, .L152+64
 2710 011a 1846     		mov	r0, r3
 2711 011c FFF7FEFF 		bl	__aeabi_fdiv
 2712 0120 0346     		mov	r3, r0
 2713 0122 1846     		mov	r0, r3
 2714 0124 FFF7FEFF 		bl	floorf
 2715 0128 0346     		mov	r3, r0
 2716 012a 1846     		mov	r0, r3
 2717 012c FFF7FEFF 		bl	__aeabi_f2d
 2718 0130 0446     		mov	r4, r0
 2719 0132 0D46     		mov	r5, r1
 2720 0134 3B69     		ldr	r3, [r7, #16]	@ float
 2721 0136 1846     		mov	r0, r3
 2722 0138 FFF7FEFF 		bl	__aeabi_f2d
 2723 013c 4FF00002 		mov	r2, #0
 2724 0140 494B     		ldr	r3, .L152+68
 2725 0142 FFF7FEFF 		bl	fmod
 2726 0146 4FF00002 		mov	r2, #0
 2727 014a 484B     		ldr	r3, .L152+72
 2728 014c FFF7FEFF 		bl	__aeabi_ddiv
 2729 0150 0246     		mov	r2, r0
 2730 0152 0B46     		mov	r3, r1
 2731 0154 2046     		mov	r0, r4
 2732 0156 2946     		mov	r1, r5
 2733 0158 FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 67


 2734 015c 0346     		mov	r3, r0
 2735 015e 0C46     		mov	r4, r1
 2736 0160 1846     		mov	r0, r3
 2737 0162 2146     		mov	r1, r4
 2738 0164 FFF7FEFF 		bl	__aeabi_d2f
 2739 0168 0346     		mov	r3, r0
 2740 016a 3B61     		str	r3, [r7, #16]	@ float
 771:modem.c       ****         lon = -(floorf(lon/100) + fmod(lon,100)/60);
 2741              		.loc 1 771 0
 2742 016c FB68     		ldr	r3, [r7, #12]	@ float
 2743 016e 3D49     		ldr	r1, .L152+64
 2744 0170 1846     		mov	r0, r3
 2745 0172 FFF7FEFF 		bl	__aeabi_fdiv
 2746 0176 0346     		mov	r3, r0
 2747 0178 1846     		mov	r0, r3
 2748 017a FFF7FEFF 		bl	floorf
 2749 017e 0346     		mov	r3, r0
 2750 0180 1846     		mov	r0, r3
 2751 0182 FFF7FEFF 		bl	__aeabi_f2d
 2752 0186 0446     		mov	r4, r0
 2753 0188 0D46     		mov	r5, r1
 2754 018a FB68     		ldr	r3, [r7, #12]	@ float
 2755 018c 1846     		mov	r0, r3
 2756 018e FFF7FEFF 		bl	__aeabi_f2d
 2757 0192 4FF00002 		mov	r2, #0
 2758 0196 344B     		ldr	r3, .L152+68
 2759 0198 FFF7FEFF 		bl	fmod
 2760 019c 4FF00002 		mov	r2, #0
 2761 01a0 324B     		ldr	r3, .L152+72
 2762 01a2 FFF7FEFF 		bl	__aeabi_ddiv
 2763 01a6 0246     		mov	r2, r0
 2764 01a8 0B46     		mov	r3, r1
 2765 01aa 2046     		mov	r0, r4
 2766 01ac 2946     		mov	r1, r5
 2767 01ae FFF7FEFF 		bl	__aeabi_dadd
 2768 01b2 0346     		mov	r3, r0
 2769 01b4 0C46     		mov	r4, r1
 2770 01b6 1846     		mov	r0, r3
 2771 01b8 2146     		mov	r1, r4
 2772 01ba FFF7FEFF 		bl	__aeabi_d2f
 2773 01be 0346     		mov	r3, r0
 2774 01c0 83F00043 		eor	r3, r3, #-2147483648
 2775 01c4 FB60     		str	r3, [r7, #12]	@ float
 772:modem.c       ****         gps.altitude = alt; // Save alt, lat, and lon to the variable gps.
 2776              		.loc 1 772 0
 2777 01c6 BB68     		ldr	r3, [r7, #8]	@ float
 2778 01c8 FB61     		str	r3, [r7, #28]	@ float
 773:modem.c       ****         gps.latitude = lat;
 2779              		.loc 1 773 0
 2780 01ca 3B69     		ldr	r3, [r7, #16]	@ float
 2781 01cc 7B61     		str	r3, [r7, #20]	@ float
 774:modem.c       ****         gps.longitude = lon;
 2782              		.loc 1 774 0
 2783 01ce FB68     		ldr	r3, [r7, #12]	@ float
 2784 01d0 BB61     		str	r3, [r7, #24]	@ float
 775:modem.c       ****         gps.valid = 1;
 2785              		.loc 1 775 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 68


 2786 01d2 0123     		movs	r3, #1
 2787 01d4 87F82230 		strb	r3, [r7, #34]
 2788              	.L149:
 776:modem.c       ****     }
 777:modem.c       ****     
 778:modem.c       ****     // Disable LDO, just in case
 779:modem.c       ****     at_write_command("AT#GPIO=5,0,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2789              		.loc 1 779 0
 2790 01d8 4FF4FA62 		mov	r2, #2000
 2791 01dc 1249     		ldr	r1, .L152+4
 2792 01de 2448     		ldr	r0, .L152+76
 2793 01e0 FFF7FEFF 		bl	at_write_command
 780:modem.c       ****     
 781:modem.c       ****     // Flush modem's GPS data, just in case
 782:modem.c       ****     at_write_command("AT$GPSR=0\r","OK",DEFAULT_AT_TIMEOUT);
 2794              		.loc 1 782 0
 2795 01e4 4FF4FA62 		mov	r2, #2000
 2796 01e8 0F49     		ldr	r1, .L152+4
 2797 01ea 2248     		ldr	r0, .L152+80
 2798 01ec FFF7FEFF 		bl	at_write_command
 783:modem.c       ****     
 784:modem.c       ****     
 785:modem.c       ****     
 786:modem.c       ****     
 787:modem.c       ****     
 788:modem.c       ****     /* Relevant to 3g modem, can ignore
 789:modem.c       ****     
 790:modem.c       ****     //Setthe GPS Quality of Servicep arameters. Inorder,theyare<horiz_accuracy(inmeters)>,<vertical
 791:modem.c       ****     //AT$GPSQOS=50,50,100,0
 792:modem.c       ****     at_write_command("AT$GPSQOS=50,50,100,0\r","OK",DEFAULT_AT_TIMEOUT);
 793:modem.c       ****     
 794:modem.c       ****     //SettheSUPLLocationPlatform(SLP)addressoftheserverthatwillprovidetheA-GPS data:
 795:modem.c       ****     at_write_command("AT$LCSSLP=1,\"supl.google.com\"\r","OK",DEFAULT_AT_TIMEOUT);
 796:modem.c       ****     
 797:modem.c       ****     //unlock contedt, simnce its being used by modem
 798:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 799:modem.c       ****     //Lock context 1 for LoCation Services (LCS) use only
 800:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",5000u);
 801:modem.c       ****     
 802:modem.c       ****     //unlock contedt, simnce its being used by modem
 803:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 804:modem.c       ****     
 805:modem.c       ****     //EnableunsolicitedNMEAGPSdataintheformatof<NMEASENTENCE><CR>
 806:modem.c       ****     at_write_command("AT$GPSNMUN=2,1,0,0,0,0,0\r","OK",DEFAULT_AT_TIMEOUT);
 807:modem.c       ****     
 808:modem.c       ****     //StartGPSlocationservicerequest.Sendingthiscommandsets$GPSP=1
 809:modem.c       ****    uint8 gps_status = 0;
 810:modem.c       ****     for(uint16 i=0;i<200;i++){
 811:modem.c       ****         gps_status = at_write_command("AT$GPSSLSR=1,1,,,,,0,255\r","N",3000u);
 812:modem.c       ****         if(gps_status){
 813:modem.c       ****             break;   
 814:modem.c       ****         }
 815:modem.c       ****   }
 816:modem.c       ****     
 817:modem.c       ****     //$GPGGA,030307.691,4217.7923,N,08341.3240,W,1,05,2.25,225.0,M,,M,,0000*6E
 818:modem.c       ****     //$GPGGA,213852.000,4600.8755,N,09327.7008,W,1,05,3.00,292.0,M,,M,,0000*6E
 819:modem.c       ****     if(gps_status){
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 69


 820:modem.c       ****         float lat,lon,alt = 0;
 821:modem.c       ****         if(sscanf(uart_received_string,"%*s,%f,N,%f,W,%*s",&lat,&lon) > 0){
 822:modem.c       ****             gps.altitude = alt;
 823:modem.c       ****             gps.latitude = lat/60;
 824:modem.c       ****             gps.longitude = lon/60;
 825:modem.c       ****             gps.valid = 1;
 826:modem.c       ****         }
 827:modem.c       ****         
 828:modem.c       ****     }
 829:modem.c       ****     
 830:modem.c       ****     //turn off gps
 831:modem.c       ****     //AT$GPSP=0
 832:modem.c       ****     at_write_command("AT$GPSP=0\r","OK",DEFAULT_AT_TIMEOUT);
 833:modem.c       ****     
 834:modem.c       ****     */
 835:modem.c       **** 
 836:modem.c       ****     // Calculate time to lock into GPS location and save in variable lock_time
 837:modem.c       ****     lock_time = getTimeStamp() - lock_time;
 2799              		.loc 1 837 0
 2800 01f0 FFF7FEFF 		bl	getTimeStamp
 2801 01f4 0246     		mov	r2, r0
 2802 01f6 3B6B     		ldr	r3, [r7, #48]
 2803 01f8 D31A     		subs	r3, r2, r3
 2804 01fa 3B63     		str	r3, [r7, #48]
 838:modem.c       ****     gps.time_to_lock = lock_time;
 2805              		.loc 1 838 0
 2806 01fc 3B6B     		ldr	r3, [r7, #48]
 2807 01fe 9BB2     		uxth	r3, r3
 2808 0200 3B84     		strh	r3, [r7, #32]	@ movhi
 839:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Time to lock GPS: %d", gps.time_to_lock);
 2809              		.loc 1 839 0
 2810 0202 3B8C     		ldrh	r3, [r7, #32]
 2811 0204 1A46     		mov	r2, r3
 2812 0206 1C49     		ldr	r1, .L152+84
 2813 0208 0020     		movs	r0, #0
 2814 020a FFF7FEFF 		bl	printNotif
 840:modem.c       ****     
 841:modem.c       ****     return gps;
 2815              		.loc 1 841 0
 2816 020e 7B68     		ldr	r3, [r7, #4]
 2817 0210 1C46     		mov	r4, r3
 2818 0212 07F11403 		add	r3, r7, #20
 2819 0216 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2820 0218 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2821              	.L142:
 842:modem.c       ****     
 843:modem.c       **** }
 2822              		.loc 1 843 0
 2823 021c 7868     		ldr	r0, [r7, #4]
 2824 021e 3837     		adds	r7, r7, #56
 2825              		.cfi_def_cfa_offset 16
 2826 0220 BD46     		mov	sp, r7
 2827              		.cfi_def_cfa_register 13
 2828              		@ sp needed
 2829 0222 B0BD     		pop	{r4, r5, r7, pc}
 2830              	.L153:
 2831              		.align	2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 70


 2832              	.L152:
 2833 0224 00000000 		.word	modem_state
 2834 0228 00000000 		.word	.LC0
 2835 022c 38060000 		.word	.LC66
 2836 0230 4C060000 		.word	.LC67
 2837 0234 5C060000 		.word	.LC68
 2838 0238 68060000 		.word	.LC69
 2839 023c 78060000 		.word	.LC70
 2840 0240 9C060000 		.word	.LC71
 2841 0244 AC060000 		.word	.LC72
 2842 0248 D8020000 		.word	.LC27
 2843 024c BC060000 		.word	.LC73
 2844 0250 D4060000 		.word	.LC74
 2845 0254 D8060000 		.word	.LC75
 2846 0258 E4060000 		.word	.LC76
 2847 025c 00000000 		.word	uart_received_string
 2848 0260 F0060000 		.word	.LC77
 2849 0264 0000C842 		.word	1120403456
 2850 0268 00005940 		.word	1079574528
 2851 026c 00004E40 		.word	1078853632
 2852 0270 10070000 		.word	.LC78
 2853 0274 24070000 		.word	.LC79
 2854 0278 30070000 		.word	.LC80
 2855              		.cfi_endproc
 2856              	.LFE87:
 2857              		.size	modem_get_gps_coordinates, .-modem_get_gps_coordinates
 2858              		.text
 2859              	.Letext0:
 2860              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2861              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2862              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2863              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2864              		.file 6 "testing.h"
 2865              		.file 7 "data.h"
 2866              		.file 8 "modem.h"
 2867              		.file 9 "notoriOS.h"
 2868              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 2869              		.section	.debug_info,"",%progbits
 2870              	.Ldebug_info0:
 2871 0000 D20B0000 		.4byte	0xbd2
 2872 0004 0400     		.2byte	0x4
 2873 0006 00000000 		.4byte	.Ldebug_abbrev0
 2874 000a 04       		.byte	0x4
 2875 000b 01       		.uleb128 0x1
 2876 000c 64000000 		.4byte	.LASF159
 2877 0010 0C       		.byte	0xc
 2878 0011 CC030000 		.4byte	.LASF160
 2879 0015 5B060000 		.4byte	.LASF161
 2880 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2881 001d 00000000 		.4byte	0
 2882 0021 00000000 		.4byte	.Ldebug_line0
 2883 0025 02       		.uleb128 0x2
 2884 0026 01       		.byte	0x1
 2885 0027 06       		.byte	0x6
 2886 0028 67010000 		.4byte	.LASF0
 2887 002c 03       		.uleb128 0x3
 2888 002d 38000000 		.4byte	.LASF4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 71


 2889 0031 02       		.byte	0x2
 2890 0032 1D       		.byte	0x1d
 2891 0033 37000000 		.4byte	0x37
 2892 0037 02       		.uleb128 0x2
 2893 0038 01       		.byte	0x1
 2894 0039 08       		.byte	0x8
 2895 003a 9A050000 		.4byte	.LASF1
 2896 003e 02       		.uleb128 0x2
 2897 003f 02       		.byte	0x2
 2898 0040 05       		.byte	0x5
 2899 0041 04040000 		.4byte	.LASF2
 2900 0045 02       		.uleb128 0x2
 2901 0046 02       		.byte	0x2
 2902 0047 07       		.byte	0x7
 2903 0048 66020000 		.4byte	.LASF3
 2904 004c 03       		.uleb128 0x3
 2905 004d 19040000 		.4byte	.LASF5
 2906 0051 02       		.byte	0x2
 2907 0052 3F       		.byte	0x3f
 2908 0053 57000000 		.4byte	0x57
 2909 0057 02       		.uleb128 0x2
 2910 0058 04       		.byte	0x4
 2911 0059 05       		.byte	0x5
 2912 005a E0010000 		.4byte	.LASF6
 2913 005e 03       		.uleb128 0x3
 2914 005f FA060000 		.4byte	.LASF7
 2915 0063 02       		.byte	0x2
 2916 0064 41       		.byte	0x41
 2917 0065 69000000 		.4byte	0x69
 2918 0069 02       		.uleb128 0x2
 2919 006a 04       		.byte	0x4
 2920 006b 07       		.byte	0x7
 2921 006c 39030000 		.4byte	.LASF8
 2922 0070 02       		.uleb128 0x2
 2923 0071 08       		.byte	0x8
 2924 0072 05       		.byte	0x5
 2925 0073 59010000 		.4byte	.LASF9
 2926 0077 02       		.uleb128 0x2
 2927 0078 08       		.byte	0x8
 2928 0079 07       		.byte	0x7
 2929 007a FF000000 		.4byte	.LASF10
 2930 007e 04       		.uleb128 0x4
 2931 007f 04       		.byte	0x4
 2932 0080 05       		.byte	0x5
 2933 0081 696E7400 		.ascii	"int\000"
 2934 0085 02       		.uleb128 0x2
 2935 0086 04       		.byte	0x4
 2936 0087 07       		.byte	0x7
 2937 0088 C1060000 		.4byte	.LASF11
 2938 008c 03       		.uleb128 0x3
 2939 008d 03080000 		.4byte	.LASF12
 2940 0091 03       		.byte	0x3
 2941 0092 18       		.byte	0x18
 2942 0093 2C000000 		.4byte	0x2c
 2943 0097 03       		.uleb128 0x3
 2944 0098 92050000 		.4byte	.LASF13
 2945 009c 03       		.byte	0x3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 72


 2946 009d 2C       		.byte	0x2c
 2947 009e 4C000000 		.4byte	0x4c
 2948 00a2 03       		.uleb128 0x3
 2949 00a3 93070000 		.4byte	.LASF14
 2950 00a7 03       		.byte	0x3
 2951 00a8 30       		.byte	0x30
 2952 00a9 5E000000 		.4byte	0x5e
 2953 00ad 05       		.uleb128 0x5
 2954 00ae 18020000 		.4byte	.LASF15
 2955 00b2 04       		.byte	0x4
 2956 00b3 9201     		.2byte	0x192
 2957 00b5 37000000 		.4byte	0x37
 2958 00b9 05       		.uleb128 0x5
 2959 00ba 0B000000 		.4byte	.LASF16
 2960 00be 04       		.byte	0x4
 2961 00bf 9301     		.2byte	0x193
 2962 00c1 45000000 		.4byte	0x45
 2963 00c5 05       		.uleb128 0x5
 2964 00c6 79020000 		.4byte	.LASF17
 2965 00ca 04       		.byte	0x4
 2966 00cb 9401     		.2byte	0x194
 2967 00cd 69000000 		.4byte	0x69
 2968 00d1 05       		.uleb128 0x5
 2969 00d2 0B080000 		.4byte	.LASF18
 2970 00d6 04       		.byte	0x4
 2971 00d7 9601     		.2byte	0x196
 2972 00d9 3E000000 		.4byte	0x3e
 2973 00dd 05       		.uleb128 0x5
 2974 00de 25020000 		.4byte	.LASF19
 2975 00e2 04       		.byte	0x4
 2976 00e3 9701     		.2byte	0x197
 2977 00e5 57000000 		.4byte	0x57
 2978 00e9 02       		.uleb128 0x2
 2979 00ea 04       		.byte	0x4
 2980 00eb 04       		.byte	0x4
 2981 00ec 4B050000 		.4byte	.LASF20
 2982 00f0 02       		.uleb128 0x2
 2983 00f1 08       		.byte	0x8
 2984 00f2 04       		.byte	0x4
 2985 00f3 1E020000 		.4byte	.LASF21
 2986 00f7 02       		.uleb128 0x2
 2987 00f8 01       		.byte	0x1
 2988 00f9 08       		.byte	0x8
 2989 00fa A8060000 		.4byte	.LASF22
 2990 00fe 02       		.uleb128 0x2
 2991 00ff 08       		.byte	0x8
 2992 0100 04       		.byte	0x4
 2993 0101 9C060000 		.4byte	.LASF23
 2994 0105 02       		.uleb128 0x2
 2995 0106 04       		.byte	0x4
 2996 0107 07       		.byte	0x7
 2997 0108 9B040000 		.4byte	.LASF24
 2998 010c 06       		.uleb128 0x6
 2999 010d 04       		.byte	0x4
 3000 010e F7000000 		.4byte	0xf7
 3001 0112 06       		.uleb128 0x6
 3002 0113 04       		.byte	0x4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 73


 3003 0114 18010000 		.4byte	0x118
 3004 0118 07       		.uleb128 0x7
 3005 0119 F7000000 		.4byte	0xf7
 3006 011d 08       		.uleb128 0x8
 3007 011e F7000000 		.4byte	0xf7
 3008 0122 2D010000 		.4byte	0x12d
 3009 0126 09       		.uleb128 0x9
 3010 0127 05010000 		.4byte	0x105
 3011 012b 17       		.byte	0x17
 3012 012c 00       		.byte	0
 3013 012d 0A       		.uleb128 0xa
 3014 012e 746D00   		.ascii	"tm\000"
 3015 0131 24       		.byte	0x24
 3016 0132 05       		.byte	0x5
 3017 0133 21       		.byte	0x21
 3018 0134 A5010000 		.4byte	0x1a5
 3019 0138 0B       		.uleb128 0xb
 3020 0139 9C070000 		.4byte	.LASF25
 3021 013d 05       		.byte	0x5
 3022 013e 23       		.byte	0x23
 3023 013f 7E000000 		.4byte	0x7e
 3024 0143 00       		.byte	0
 3025 0144 0B       		.uleb128 0xb
 3026 0145 94040000 		.4byte	.LASF26
 3027 0149 05       		.byte	0x5
 3028 014a 24       		.byte	0x24
 3029 014b 7E000000 		.4byte	0x7e
 3030 014f 04       		.byte	0x4
 3031 0150 0B       		.uleb128 0xb
 3032 0151 18000000 		.4byte	.LASF27
 3033 0155 05       		.byte	0x5
 3034 0156 25       		.byte	0x25
 3035 0157 7E000000 		.4byte	0x7e
 3036 015b 08       		.byte	0x8
 3037 015c 0B       		.uleb128 0xb
 3038 015d 7E070000 		.4byte	.LASF28
 3039 0161 05       		.byte	0x5
 3040 0162 26       		.byte	0x26
 3041 0163 7E000000 		.4byte	0x7e
 3042 0167 0C       		.byte	0xc
 3043 0168 0B       		.uleb128 0xb
 3044 0169 AF020000 		.4byte	.LASF29
 3045 016d 05       		.byte	0x5
 3046 016e 27       		.byte	0x27
 3047 016f 7E000000 		.4byte	0x7e
 3048 0173 10       		.byte	0x10
 3049 0174 0B       		.uleb128 0xb
 3050 0175 FB020000 		.4byte	.LASF30
 3051 0179 05       		.byte	0x5
 3052 017a 28       		.byte	0x28
 3053 017b 7E000000 		.4byte	0x7e
 3054 017f 14       		.byte	0x14
 3055 0180 0B       		.uleb128 0xb
 3056 0181 3C060000 		.4byte	.LASF31
 3057 0185 05       		.byte	0x5
 3058 0186 29       		.byte	0x29
 3059 0187 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 74


 3060 018b 18       		.byte	0x18
 3061 018c 0B       		.uleb128 0xb
 3062 018d 20000000 		.4byte	.LASF32
 3063 0191 05       		.byte	0x5
 3064 0192 2A       		.byte	0x2a
 3065 0193 7E000000 		.4byte	0x7e
 3066 0197 1C       		.byte	0x1c
 3067 0198 0B       		.uleb128 0xb
 3068 0199 93030000 		.4byte	.LASF33
 3069 019d 05       		.byte	0x5
 3070 019e 2B       		.byte	0x2b
 3071 019f 7E000000 		.4byte	0x7e
 3072 01a3 20       		.byte	0x20
 3073 01a4 00       		.byte	0
 3074 01a5 0C       		.uleb128 0xc
 3075 01a6 8101     		.2byte	0x181
 3076 01a8 06       		.byte	0x6
 3077 01a9 0A       		.byte	0xa
 3078 01aa D3010000 		.4byte	0x1d3
 3079 01ae 0B       		.uleb128 0xb
 3080 01af E5040000 		.4byte	.LASF34
 3081 01b3 06       		.byte	0x6
 3082 01b4 0C       		.byte	0xc
 3083 01b5 D3010000 		.4byte	0x1d3
 3084 01b9 00       		.byte	0
 3085 01ba 0B       		.uleb128 0xb
 3086 01bb D4070000 		.4byte	.LASF35
 3087 01bf 06       		.byte	0x6
 3088 01c0 0D       		.byte	0xd
 3089 01c1 AD000000 		.4byte	0xad
 3090 01c5 80       		.byte	0x80
 3091 01c6 0B       		.uleb128 0xb
 3092 01c7 10060000 		.4byte	.LASF36
 3093 01cb 06       		.byte	0x6
 3094 01cc 0F       		.byte	0xf
 3095 01cd E3010000 		.4byte	0x1e3
 3096 01d1 81       		.byte	0x81
 3097 01d2 00       		.byte	0
 3098 01d3 08       		.uleb128 0x8
 3099 01d4 F7000000 		.4byte	0xf7
 3100 01d8 E3010000 		.4byte	0x1e3
 3101 01dc 09       		.uleb128 0x9
 3102 01dd 05010000 		.4byte	0x105
 3103 01e1 7F       		.byte	0x7f
 3104 01e2 00       		.byte	0
 3105 01e3 08       		.uleb128 0x8
 3106 01e4 F7000000 		.4byte	0xf7
 3107 01e8 F3010000 		.4byte	0x1f3
 3108 01ec 09       		.uleb128 0x9
 3109 01ed 05010000 		.4byte	0x105
 3110 01f1 FF       		.byte	0xff
 3111 01f2 00       		.byte	0
 3112 01f3 03       		.uleb128 0x3
 3113 01f4 F8050000 		.4byte	.LASF37
 3114 01f8 06       		.byte	0x6
 3115 01f9 10       		.byte	0x10
 3116 01fa A5010000 		.4byte	0x1a5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 75


 3117 01fe 0D       		.uleb128 0xd
 3118 01ff 2C       		.byte	0x2c
 3119 0200 07       		.byte	0x7
 3120 0201 14       		.byte	0x14
 3121 0202 2B020000 		.4byte	0x22b
 3122 0206 0E       		.uleb128 0xe
 3123 0207 6B657900 		.ascii	"key\000"
 3124 020b 07       		.byte	0x7
 3125 020c 15       		.byte	0x15
 3126 020d 2B020000 		.4byte	0x22b
 3127 0211 00       		.byte	0
 3128 0212 0B       		.uleb128 0xb
 3129 0213 12000000 		.4byte	.LASF38
 3130 0217 07       		.byte	0x7
 3131 0218 16       		.byte	0x16
 3132 0219 2B020000 		.4byte	0x22b
 3133 021d 14       		.byte	0x14
 3134 021e 0B       		.uleb128 0xb
 3135 021f 75080000 		.4byte	.LASF39
 3136 0223 07       		.byte	0x7
 3137 0224 17       		.byte	0x17
 3138 0225 DD000000 		.4byte	0xdd
 3139 0229 28       		.byte	0x28
 3140 022a 00       		.byte	0
 3141 022b 08       		.uleb128 0x8
 3142 022c F7000000 		.4byte	0xf7
 3143 0230 3B020000 		.4byte	0x23b
 3144 0234 09       		.uleb128 0x9
 3145 0235 05010000 		.4byte	0x105
 3146 0239 13       		.byte	0x13
 3147 023a 00       		.byte	0
 3148 023b 03       		.uleb128 0x3
 3149 023c 23030000 		.4byte	.LASF40
 3150 0240 07       		.byte	0x7
 3151 0241 19       		.byte	0x19
 3152 0242 FE010000 		.4byte	0x1fe
 3153 0246 0D       		.uleb128 0xd
 3154 0247 3C       		.byte	0x3c
 3155 0248 08       		.byte	0x8
 3156 0249 36       		.byte	0x36
 3157 024a 73020000 		.4byte	0x273
 3158 024e 0B       		.uleb128 0xb
 3159 024f 77070000 		.4byte	.LASF41
 3160 0253 08       		.byte	0x8
 3161 0254 37       		.byte	0x37
 3162 0255 2B020000 		.4byte	0x22b
 3163 0259 00       		.byte	0
 3164 025a 0B       		.uleb128 0xb
 3165 025b D3060000 		.4byte	.LASF42
 3166 025f 08       		.byte	0x8
 3167 0260 38       		.byte	0x38
 3168 0261 2B020000 		.4byte	0x22b
 3169 0265 14       		.byte	0x14
 3170 0266 0B       		.uleb128 0xb
 3171 0267 0B060000 		.4byte	.LASF43
 3172 026b 08       		.byte	0x8
 3173 026c 39       		.byte	0x39
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 76


 3174 026d 2B020000 		.4byte	0x22b
 3175 0271 28       		.byte	0x28
 3176 0272 00       		.byte	0
 3177 0273 03       		.uleb128 0x3
 3178 0274 E7060000 		.4byte	.LASF44
 3179 0278 08       		.byte	0x8
 3180 0279 3B       		.byte	0x3b
 3181 027a 46020000 		.4byte	0x246
 3182 027e 0D       		.uleb128 0xd
 3183 027f 20       		.byte	0x20
 3184 0280 08       		.byte	0x8
 3185 0281 3D       		.byte	0x3d
 3186 0282 E7020000 		.4byte	0x2e7
 3187 0286 0B       		.uleb128 0xb
 3188 0287 DA010000 		.4byte	.LASF45
 3189 028b 08       		.byte	0x8
 3190 028c 3E       		.byte	0x3e
 3191 028d 7E000000 		.4byte	0x7e
 3192 0291 00       		.byte	0
 3193 0292 0E       		.uleb128 0xe
 3194 0293 62657200 		.ascii	"ber\000"
 3195 0297 08       		.byte	0x8
 3196 0298 3F       		.byte	0x3f
 3197 0299 7E000000 		.4byte	0x7e
 3198 029d 04       		.byte	0x4
 3199 029e 0B       		.uleb128 0xb
 3200 029f D9050000 		.4byte	.LASF46
 3201 02a3 08       		.byte	0x8
 3202 02a4 40       		.byte	0x40
 3203 02a5 7E000000 		.4byte	0x7e
 3204 02a9 08       		.byte	0x8
 3205 02aa 0B       		.uleb128 0xb
 3206 02ab 73010000 		.4byte	.LASF47
 3207 02af 08       		.byte	0x8
 3208 02b0 41       		.byte	0x41
 3209 02b1 7E000000 		.4byte	0x7e
 3210 02b5 0C       		.byte	0xc
 3211 02b6 0B       		.uleb128 0xb
 3212 02b7 BE050000 		.4byte	.LASF48
 3213 02bb 08       		.byte	0x8
 3214 02bc 42       		.byte	0x42
 3215 02bd 7E000000 		.4byte	0x7e
 3216 02c1 10       		.byte	0x10
 3217 02c2 0B       		.uleb128 0xb
 3218 02c3 17060000 		.4byte	.LASF49
 3219 02c7 08       		.byte	0x8
 3220 02c8 43       		.byte	0x43
 3221 02c9 7E000000 		.4byte	0x7e
 3222 02cd 14       		.byte	0x14
 3223 02ce 0B       		.uleb128 0xb
 3224 02cf 86010000 		.4byte	.LASF50
 3225 02d3 08       		.byte	0x8
 3226 02d4 44       		.byte	0x44
 3227 02d5 7E000000 		.4byte	0x7e
 3228 02d9 18       		.byte	0x18
 3229 02da 0B       		.uleb128 0xb
 3230 02db E7030000 		.4byte	.LASF51
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 77


 3231 02df 08       		.byte	0x8
 3232 02e0 45       		.byte	0x45
 3233 02e1 7E000000 		.4byte	0x7e
 3234 02e5 1C       		.byte	0x1c
 3235 02e6 00       		.byte	0
 3236 02e7 03       		.uleb128 0x3
 3237 02e8 1C060000 		.4byte	.LASF52
 3238 02ec 08       		.byte	0x8
 3239 02ed 47       		.byte	0x47
 3240 02ee 7E020000 		.4byte	0x27e
 3241 02f2 0D       		.uleb128 0xd
 3242 02f3 10       		.byte	0x10
 3243 02f4 08       		.byte	0x8
 3244 02f5 49       		.byte	0x49
 3245 02f6 37030000 		.4byte	0x337
 3246 02fa 0B       		.uleb128 0xb
 3247 02fb DC040000 		.4byte	.LASF53
 3248 02ff 08       		.byte	0x8
 3249 0300 4A       		.byte	0x4a
 3250 0301 E9000000 		.4byte	0xe9
 3251 0305 00       		.byte	0
 3252 0306 0B       		.uleb128 0xb
 3253 0307 5A000000 		.4byte	.LASF54
 3254 030b 08       		.byte	0x8
 3255 030c 4B       		.byte	0x4b
 3256 030d E9000000 		.4byte	0xe9
 3257 0311 04       		.byte	0x4
 3258 0312 0B       		.uleb128 0xb
 3259 0313 0F020000 		.4byte	.LASF55
 3260 0317 08       		.byte	0x8
 3261 0318 4C       		.byte	0x4c
 3262 0319 E9000000 		.4byte	0xe9
 3263 031d 08       		.byte	0x8
 3264 031e 0B       		.uleb128 0xb
 3265 031f 79030000 		.4byte	.LASF56
 3266 0323 08       		.byte	0x8
 3267 0324 4D       		.byte	0x4d
 3268 0325 B9000000 		.4byte	0xb9
 3269 0329 0C       		.byte	0xc
 3270 032a 0B       		.uleb128 0xb
 3271 032b 86070000 		.4byte	.LASF57
 3272 032f 08       		.byte	0x8
 3273 0330 4E       		.byte	0x4e
 3274 0331 AD000000 		.4byte	0xad
 3275 0335 0E       		.byte	0xe
 3276 0336 00       		.byte	0
 3277 0337 03       		.uleb128 0x3
 3278 0338 F4060000 		.4byte	.LASF58
 3279 033c 08       		.byte	0x8
 3280 033d 50       		.byte	0x50
 3281 033e F2020000 		.4byte	0x2f2
 3282 0342 0D       		.uleb128 0xd
 3283 0343 05       		.byte	0x5
 3284 0344 08       		.byte	0x8
 3285 0345 53       		.byte	0x53
 3286 0346 87030000 		.4byte	0x387
 3287 034a 0B       		.uleb128 0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 78


 3288 034b 2B020000 		.4byte	.LASF59
 3289 034f 08       		.byte	0x8
 3290 0350 55       		.byte	0x55
 3291 0351 AD000000 		.4byte	0xad
 3292 0355 00       		.byte	0
 3293 0356 0B       		.uleb128 0xb
 3294 0357 70050000 		.4byte	.LASF60
 3295 035b 08       		.byte	0x8
 3296 035c 57       		.byte	0x57
 3297 035d 87030000 		.4byte	0x387
 3298 0361 01       		.byte	0x1
 3299 0362 0B       		.uleb128 0xb
 3300 0363 17070000 		.4byte	.LASF61
 3301 0367 08       		.byte	0x8
 3302 0368 59       		.byte	0x59
 3303 0369 AD000000 		.4byte	0xad
 3304 036d 02       		.byte	0x2
 3305 036e 0B       		.uleb128 0xb
 3306 036f C3050000 		.4byte	.LASF62
 3307 0373 08       		.byte	0x8
 3308 0374 5B       		.byte	0x5b
 3309 0375 AD000000 		.4byte	0xad
 3310 0379 03       		.byte	0x3
 3311 037a 0B       		.uleb128 0xb
 3312 037b B6020000 		.4byte	.LASF63
 3313 037f 08       		.byte	0x8
 3314 0380 5E       		.byte	0x5e
 3315 0381 AD000000 		.4byte	0xad
 3316 0385 04       		.byte	0x4
 3317 0386 00       		.byte	0
 3318 0387 02       		.uleb128 0x2
 3319 0388 01       		.byte	0x1
 3320 0389 02       		.byte	0x2
 3321 038a 8C050000 		.4byte	.LASF64
 3322 038e 03       		.uleb128 0x3
 3323 038f 5F040000 		.4byte	.LASF65
 3324 0393 08       		.byte	0x8
 3325 0394 60       		.byte	0x60
 3326 0395 42030000 		.4byte	0x342
 3327 0399 0D       		.uleb128 0xd
 3328 039a 06       		.byte	0x6
 3329 039b 09       		.byte	0x9
 3330 039c 2E       		.byte	0x2e
 3331 039d D2030000 		.4byte	0x3d2
 3332 03a1 0B       		.uleb128 0xb
 3333 03a2 89020000 		.4byte	.LASF66
 3334 03a6 09       		.byte	0x9
 3335 03a7 30       		.byte	0x30
 3336 03a8 B9000000 		.4byte	0xb9
 3337 03ac 00       		.byte	0
 3338 03ad 0B       		.uleb128 0xb
 3339 03ae E9010000 		.4byte	.LASF67
 3340 03b2 09       		.byte	0x9
 3341 03b3 31       		.byte	0x31
 3342 03b4 D1000000 		.4byte	0xd1
 3343 03b8 02       		.byte	0x2
 3344 03b9 0B       		.uleb128 0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 79


 3345 03ba 23080000 		.4byte	.LASF68
 3346 03be 09       		.byte	0x9
 3347 03bf 32       		.byte	0x32
 3348 03c0 AD000000 		.4byte	0xad
 3349 03c4 04       		.byte	0x4
 3350 03c5 0B       		.uleb128 0xb
 3351 03c6 42000000 		.4byte	.LASF69
 3352 03ca 09       		.byte	0x9
 3353 03cb 33       		.byte	0x33
 3354 03cc AD000000 		.4byte	0xad
 3355 03d0 05       		.byte	0x5
 3356 03d1 00       		.byte	0
 3357 03d2 03       		.uleb128 0x3
 3358 03d3 86050000 		.4byte	.LASF70
 3359 03d7 09       		.byte	0x9
 3360 03d8 36       		.byte	0x36
 3361 03d9 DD030000 		.4byte	0x3dd
 3362 03dd 0F       		.uleb128 0xf
 3363 03de 99030000 		.4byte	0x399
 3364 03e2 0D       		.uleb128 0xd
 3365 03e3 1C       		.byte	0x1c
 3366 03e4 09       		.byte	0x9
 3367 03e5 39       		.byte	0x39
 3368 03e6 03040000 		.4byte	0x403
 3369 03ea 0B       		.uleb128 0xb
 3370 03eb 9C030000 		.4byte	.LASF71
 3371 03ef 09       		.byte	0x9
 3372 03f0 3B       		.byte	0x3b
 3373 03f1 03040000 		.4byte	0x403
 3374 03f5 00       		.byte	0
 3375 03f6 0B       		.uleb128 0xb
 3376 03f7 AF030000 		.4byte	.LASF72
 3377 03fb 09       		.byte	0x9
 3378 03fc 3C       		.byte	0x3c
 3379 03fd 1D010000 		.4byte	0x11d
 3380 0401 04       		.byte	0x4
 3381 0402 00       		.byte	0
 3382 0403 06       		.uleb128 0x6
 3383 0404 04       		.byte	0x4
 3384 0405 73020000 		.4byte	0x273
 3385 0409 03       		.uleb128 0x3
 3386 040a 54040000 		.4byte	.LASF73
 3387 040e 09       		.byte	0x9
 3388 040f 3E       		.byte	0x3e
 3389 0410 E2030000 		.4byte	0x3e2
 3390 0414 0D       		.uleb128 0xd
 3391 0415 68       		.byte	0x68
 3392 0416 09       		.byte	0x9
 3393 0417 44       		.byte	0x44
 3394 0418 35040000 		.4byte	0x435
 3395 041c 0B       		.uleb128 0xb
 3396 041d A7030000 		.4byte	.LASF74
 3397 0421 09       		.byte	0x9
 3398 0422 49       		.byte	0x49
 3399 0423 35040000 		.4byte	0x435
 3400 0427 00       		.byte	0
 3401 0428 0B       		.uleb128 0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 80


 3402 0429 8B030000 		.4byte	.LASF75
 3403 042d 09       		.byte	0x9
 3404 042e 4A       		.byte	0x4a
 3405 042f 7E000000 		.4byte	0x7e
 3406 0433 64       		.byte	0x64
 3407 0434 00       		.byte	0
 3408 0435 08       		.uleb128 0x8
 3409 0436 F7000000 		.4byte	0xf7
 3410 043a 45040000 		.4byte	0x445
 3411 043e 09       		.uleb128 0x9
 3412 043f 05010000 		.4byte	0x105
 3413 0443 63       		.byte	0x63
 3414 0444 00       		.byte	0
 3415 0445 03       		.uleb128 0x3
 3416 0446 F4070000 		.4byte	.LASF76
 3417 044a 09       		.byte	0x9
 3418 044b 50       		.byte	0x50
 3419 044c 14040000 		.4byte	0x414
 3420 0450 10       		.uleb128 0x10
 3421 0451 79050000 		.4byte	.LASF108
 3422 0455 01       		.byte	0x1
 3423 0456 12       		.byte	0x12
 3424 0457 00000000 		.4byte	.LFB64
 3425 045b 44000000 		.4byte	.LFE64-.LFB64
 3426 045f 01       		.uleb128 0x1
 3427 0460 9C       		.byte	0x9c
 3428 0461 11       		.uleb128 0x11
 3429 0462 51050000 		.4byte	.LASF77
 3430 0466 01       		.byte	0x1
 3431 0467 1C       		.byte	0x1c
 3432 0468 00000000 		.4byte	.LFB65
 3433 046c 6C000000 		.4byte	.LFE65-.LFB65
 3434 0470 01       		.uleb128 0x1
 3435 0471 9C       		.byte	0x9c
 3436 0472 11       		.uleb128 0x11
 3437 0473 5F070000 		.4byte	.LASF78
 3438 0477 01       		.byte	0x1
 3439 0478 36       		.byte	0x36
 3440 0479 00000000 		.4byte	.LFB66
 3441 047d 32000000 		.4byte	.LFE66-.LFB66
 3442 0481 01       		.uleb128 0x1
 3443 0482 9C       		.byte	0x9c
 3444 0483 11       		.uleb128 0x11
 3445 0484 0D030000 		.4byte	.LASF79
 3446 0488 01       		.byte	0x1
 3447 0489 46       		.byte	0x46
 3448 048a 00000000 		.4byte	.LFB67
 3449 048e 20000000 		.4byte	.LFE67-.LFB67
 3450 0492 01       		.uleb128 0x1
 3451 0493 9C       		.byte	0x9c
 3452 0494 11       		.uleb128 0x11
 3453 0495 64080000 		.4byte	.LASF80
 3454 0499 01       		.byte	0x1
 3455 049a 4F       		.byte	0x4f
 3456 049b 00000000 		.4byte	.LFB68
 3457 049f 40000000 		.4byte	.LFE68-.LFB68
 3458 04a3 01       		.uleb128 0x1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 81


 3459 04a4 9C       		.byte	0x9c
 3460 04a5 12       		.uleb128 0x12
 3461 04a6 BD030000 		.4byte	.LASF94
 3462 04aa 01       		.byte	0x1
 3463 04ab 61       		.byte	0x61
 3464 04ac AD000000 		.4byte	0xad
 3465 04b0 00000000 		.4byte	.LFB69
 3466 04b4 DC000000 		.4byte	.LFE69-.LFB69
 3467 04b8 01       		.uleb128 0x1
 3468 04b9 9C       		.byte	0x9c
 3469 04ba 19050000 		.4byte	0x519
 3470 04be 13       		.uleb128 0x13
 3471 04bf 11080000 		.4byte	.LASF81
 3472 04c3 01       		.byte	0x1
 3473 04c4 6A       		.byte	0x6a
 3474 04c5 AD000000 		.4byte	0xad
 3475 04c9 02       		.uleb128 0x2
 3476 04ca 91       		.byte	0x91
 3477 04cb 77       		.sleb128 -9
 3478 04cc 13       		.uleb128 0x13
 3479 04cd 1A080000 		.4byte	.LASF82
 3480 04d1 01       		.byte	0x1
 3481 04d2 6B       		.byte	0x6b
 3482 04d3 AD000000 		.4byte	0xad
 3483 04d7 02       		.uleb128 0x2
 3484 04d8 91       		.byte	0x91
 3485 04d9 74       		.sleb128 -12
 3486 04da 13       		.uleb128 0x13
 3487 04db 31080000 		.4byte	.LASF83
 3488 04df 01       		.byte	0x1
 3489 04e0 6D       		.byte	0x6d
 3490 04e1 57000000 		.4byte	0x57
 3491 04e5 02       		.uleb128 0x2
 3492 04e6 91       		.byte	0x91
 3493 04e7 70       		.sleb128 -16
 3494 04e8 14       		.uleb128 0x14
 3495 04e9 26000000 		.4byte	.LBB2
 3496 04ed 4A000000 		.4byte	.LBE2-.LBB2
 3497 04f1 13       		.uleb128 0x13
 3498 04f2 1A080000 		.4byte	.LASF82
 3499 04f6 01       		.byte	0x1
 3500 04f7 70       		.byte	0x70
 3501 04f8 AD000000 		.4byte	0xad
 3502 04fc 02       		.uleb128 0x2
 3503 04fd 91       		.byte	0x91
 3504 04fe 76       		.sleb128 -10
 3505 04ff 14       		.uleb128 0x14
 3506 0500 2C000000 		.4byte	.LBB3
 3507 0504 2A000000 		.4byte	.LBE3-.LBB3
 3508 0508 13       		.uleb128 0x13
 3509 0509 2F030000 		.4byte	.LASF84
 3510 050d 01       		.byte	0x1
 3511 050e 72       		.byte	0x72
 3512 050f AD000000 		.4byte	0xad
 3513 0513 02       		.uleb128 0x2
 3514 0514 91       		.byte	0x91
 3515 0515 75       		.sleb128 -11
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 82


 3516 0516 00       		.byte	0
 3517 0517 00       		.byte	0
 3518 0518 00       		.byte	0
 3519 0519 11       		.uleb128 0x11
 3520 051a 44060000 		.4byte	.LASF85
 3521 051e 01       		.byte	0x1
 3522 051f 93       		.byte	0x93
 3523 0520 00000000 		.4byte	.LFB70
 3524 0524 1C000000 		.4byte	.LFE70-.LFB70
 3525 0528 01       		.uleb128 0x1
 3526 0529 9C       		.byte	0x9c
 3527 052a 11       		.uleb128 0x11
 3528 052b 2A060000 		.4byte	.LASF86
 3529 052f 01       		.byte	0x1
 3530 0530 9B       		.byte	0x9b
 3531 0531 00000000 		.4byte	.LFB71
 3532 0535 28000000 		.4byte	.LFE71-.LFB71
 3533 0539 01       		.uleb128 0x1
 3534 053a 9C       		.byte	0x9c
 3535 053b 15       		.uleb128 0x15
 3536 053c 43040000 		.4byte	.LASF98
 3537 0540 01       		.byte	0x1
 3538 0541 A6       		.byte	0xa6
 3539 0542 8C000000 		.4byte	0x8c
 3540 0546 00000000 		.4byte	.LFB72
 3541 054a C8000000 		.4byte	.LFE72-.LFB72
 3542 054e 01       		.uleb128 0x1
 3543 054f 9C       		.byte	0x9c
 3544 0550 CD050000 		.4byte	0x5cd
 3545 0554 16       		.uleb128 0x16
 3546 0555 31050000 		.4byte	.LASF87
 3547 0559 01       		.byte	0x1
 3548 055a A6       		.byte	0xa6
 3549 055b 0C010000 		.4byte	0x10c
 3550 055f 02       		.uleb128 0x2
 3551 0560 91       		.byte	0x91
 3552 0561 5C       		.sleb128 -36
 3553 0562 16       		.uleb128 0x16
 3554 0563 3B080000 		.4byte	.LASF88
 3555 0567 01       		.byte	0x1
 3556 0568 A6       		.byte	0xa6
 3557 0569 0C010000 		.4byte	0x10c
 3558 056d 02       		.uleb128 0x2
 3559 056e 91       		.byte	0x91
 3560 056f 58       		.sleb128 -40
 3561 0570 16       		.uleb128 0x16
 3562 0571 5A030000 		.4byte	.LASF89
 3563 0575 01       		.byte	0x1
 3564 0576 A6       		.byte	0xa6
 3565 0577 A2000000 		.4byte	0xa2
 3566 057b 02       		.uleb128 0x2
 3567 057c 91       		.byte	0x91
 3568 057d 54       		.sleb128 -44
 3569 057e 13       		.uleb128 0x13
 3570 057f 38040000 		.4byte	.LASF90
 3571 0583 01       		.byte	0x1
 3572 0584 A8       		.byte	0xa8
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 83


 3573 0585 C5000000 		.4byte	0xc5
 3574 0589 02       		.uleb128 0x2
 3575 058a 91       		.byte	0x91
 3576 058b 74       		.sleb128 -12
 3577 058c 14       		.uleb128 0x14
 3578 058d 16000000 		.4byte	.LBB4
 3579 0591 88000000 		.4byte	.LBE4-.LBB4
 3580 0595 13       		.uleb128 0x13
 3581 0596 3A050000 		.4byte	.LASF91
 3582 059a 01       		.byte	0x1
 3583 059b AC       		.byte	0xac
 3584 059c 0C010000 		.4byte	0x10c
 3585 05a0 02       		.uleb128 0x2
 3586 05a1 91       		.byte	0x91
 3587 05a2 64       		.sleb128 -28
 3588 05a3 13       		.uleb128 0x13
 3589 05a4 B8050000 		.4byte	.LASF92
 3590 05a8 01       		.byte	0x1
 3591 05a9 AD       		.byte	0xad
 3592 05aa A2000000 		.4byte	0xa2
 3593 05ae 02       		.uleb128 0x2
 3594 05af 91       		.byte	0x91
 3595 05b0 6C       		.sleb128 -20
 3596 05b1 17       		.uleb128 0x17
 3597 05b2 6900     		.ascii	"i\000"
 3598 05b4 01       		.byte	0x1
 3599 05b5 AE       		.byte	0xae
 3600 05b6 A2000000 		.4byte	0xa2
 3601 05ba 02       		.uleb128 0x2
 3602 05bb 91       		.byte	0x91
 3603 05bc 70       		.sleb128 -16
 3604 05bd 13       		.uleb128 0x13
 3605 05be 80020000 		.4byte	.LASF93
 3606 05c2 01       		.byte	0x1
 3607 05c3 AE       		.byte	0xae
 3608 05c4 A2000000 		.4byte	0xa2
 3609 05c8 02       		.uleb128 0x2
 3610 05c9 91       		.byte	0x91
 3611 05ca 68       		.sleb128 -24
 3612 05cb 00       		.byte	0
 3613 05cc 00       		.byte	0
 3614 05cd 12       		.uleb128 0x12
 3615 05ce 06050000 		.4byte	.LASF95
 3616 05d2 01       		.byte	0x1
 3617 05d3 DA       		.byte	0xda
 3618 05d4 F3010000 		.4byte	0x1f3
 3619 05d8 00000000 		.4byte	.LFB73
 3620 05dc 00010000 		.4byte	.LFE73-.LFB73
 3621 05e0 01       		.uleb128 0x1
 3622 05e1 9C       		.byte	0x9c
 3623 05e2 24060000 		.4byte	0x624
 3624 05e6 13       		.uleb128 0x13
 3625 05e7 2E010000 		.4byte	.LASF96
 3626 05eb 01       		.byte	0x1
 3627 05ec DC       		.byte	0xdc
 3628 05ed F3010000 		.4byte	0x1f3
 3629 05f1 03       		.uleb128 0x3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 84


 3630 05f2 91       		.byte	0x91
 3631 05f3 E47C     		.sleb128 -412
 3632 05f5 14       		.uleb128 0x14
 3633 05f6 4A000000 		.4byte	.LBB5
 3634 05fa 86000000 		.4byte	.LBE5-.LBB5
 3635 05fe 17       		.uleb128 0x17
 3636 05ff 6900     		.ascii	"i\000"
 3637 0601 01       		.byte	0x1
 3638 0602 E3       		.byte	0xe3
 3639 0603 7E000000 		.4byte	0x7e
 3640 0607 02       		.uleb128 0x2
 3641 0608 91       		.byte	0x91
 3642 0609 6C       		.sleb128 -20
 3643 060a 14       		.uleb128 0x14
 3644 060b 70000000 		.4byte	.LBB6
 3645 060f 46000000 		.4byte	.LBE6-.LBB6
 3646 0613 13       		.uleb128 0x13
 3647 0614 59020000 		.4byte	.LASF97
 3648 0618 01       		.byte	0x1
 3649 0619 F0       		.byte	0xf0
 3650 061a 57000000 		.4byte	0x57
 3651 061e 02       		.uleb128 0x2
 3652 061f 91       		.byte	0x91
 3653 0620 68       		.sleb128 -24
 3654 0621 00       		.byte	0
 3655 0622 00       		.byte	0
 3656 0623 00       		.byte	0
 3657 0624 18       		.uleb128 0x18
 3658 0625 4B030000 		.4byte	.LASF99
 3659 0629 01       		.byte	0x1
 3660 062a 0401     		.2byte	0x104
 3661 062c AD000000 		.4byte	0xad
 3662 0630 00000000 		.4byte	.LFB74
 3663 0634 78000000 		.4byte	.LFE74-.LFB74
 3664 0638 01       		.uleb128 0x1
 3665 0639 9C       		.byte	0x9c
 3666 063a 95060000 		.4byte	0x695
 3667 063e 19       		.uleb128 0x19
 3668 063f 23040000 		.4byte	.LASF100
 3669 0643 01       		.byte	0x1
 3670 0644 0401     		.2byte	0x104
 3671 0646 0C010000 		.4byte	0x10c
 3672 064a 02       		.uleb128 0x2
 3673 064b 91       		.byte	0x91
 3674 064c 6C       		.sleb128 -20
 3675 064d 19       		.uleb128 0x19
 3676 064e D4030000 		.4byte	.LASF101
 3677 0652 01       		.byte	0x1
 3678 0653 0401     		.2byte	0x104
 3679 0655 12010000 		.4byte	0x112
 3680 0659 02       		.uleb128 0x2
 3681 065a 91       		.byte	0x91
 3682 065b 68       		.sleb128 -24
 3683 065c 19       		.uleb128 0x19
 3684 065d FA030000 		.4byte	.LASF102
 3685 0661 01       		.byte	0x1
 3686 0662 0401     		.2byte	0x104
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 85


 3687 0664 12010000 		.4byte	0x112
 3688 0668 02       		.uleb128 0x2
 3689 0669 91       		.byte	0x91
 3690 066a 64       		.sleb128 -28
 3691 066b 19       		.uleb128 0x19
 3692 066c E0030000 		.4byte	.LASF103
 3693 0670 01       		.byte	0x1
 3694 0671 0401     		.2byte	0x104
 3695 0673 0C010000 		.4byte	0x10c
 3696 0677 02       		.uleb128 0x2
 3697 0678 91       		.byte	0x91
 3698 0679 60       		.sleb128 -32
 3699 067a 1A       		.uleb128 0x1a
 3700 067b 6100     		.ascii	"a\000"
 3701 067d 01       		.byte	0x1
 3702 067e 0601     		.2byte	0x106
 3703 0680 0C010000 		.4byte	0x10c
 3704 0684 02       		.uleb128 0x2
 3705 0685 91       		.byte	0x91
 3706 0686 74       		.sleb128 -12
 3707 0687 1A       		.uleb128 0x1a
 3708 0688 6200     		.ascii	"b\000"
 3709 068a 01       		.byte	0x1
 3710 068b 0601     		.2byte	0x106
 3711 068d 0C010000 		.4byte	0x10c
 3712 0691 02       		.uleb128 0x2
 3713 0692 91       		.byte	0x91
 3714 0693 70       		.sleb128 -16
 3715 0694 00       		.byte	0
 3716 0695 1B       		.uleb128 0x1b
 3717 0696 AD060000 		.4byte	.LASF104
 3718 069a 01       		.byte	0x1
 3719 069b 2301     		.2byte	0x123
 3720 069d AD000000 		.4byte	0xad
 3721 06a1 00000000 		.4byte	.LFB75
 3722 06a5 74010000 		.4byte	.LFE75-.LFB75
 3723 06a9 01       		.uleb128 0x1
 3724 06aa 9C       		.byte	0x9c
 3725 06ab C7060000 		.4byte	0x6c7
 3726 06af 14       		.uleb128 0x14
 3727 06b0 2E000000 		.4byte	.LBB7
 3728 06b4 68000000 		.4byte	.LBE7-.LBB7
 3729 06b8 1A       		.uleb128 0x1a
 3730 06b9 6900     		.ascii	"i\000"
 3731 06bb 01       		.byte	0x1
 3732 06bc 3101     		.2byte	0x131
 3733 06be AD000000 		.4byte	0xad
 3734 06c2 02       		.uleb128 0x2
 3735 06c3 91       		.byte	0x91
 3736 06c4 77       		.sleb128 -9
 3737 06c5 00       		.byte	0
 3738 06c6 00       		.byte	0
 3739 06c7 1B       		.uleb128 0x1b
 3740 06c8 AA040000 		.4byte	.LASF105
 3741 06cc 01       		.byte	0x1
 3742 06cd 7501     		.2byte	0x175
 3743 06cf AD000000 		.4byte	0xad
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 86


 3744 06d3 00000000 		.4byte	.LFB76
 3745 06d7 B8000000 		.4byte	.LFE76-.LFB76
 3746 06db 01       		.uleb128 0x1
 3747 06dc 9C       		.byte	0x9c
 3748 06dd 0A070000 		.4byte	0x70a
 3749 06e1 1C       		.uleb128 0x1c
 3750 06e2 D4070000 		.4byte	.LASF35
 3751 06e6 01       		.byte	0x1
 3752 06e7 7901     		.2byte	0x179
 3753 06e9 AD000000 		.4byte	0xad
 3754 06ed 02       		.uleb128 0x2
 3755 06ee 91       		.byte	0x91
 3756 06ef 77       		.sleb128 -9
 3757 06f0 14       		.uleb128 0x14
 3758 06f1 36000000 		.4byte	.LBB8
 3759 06f5 48000000 		.4byte	.LBE8-.LBB8
 3760 06f9 1C       		.uleb128 0x1c
 3761 06fa 28040000 		.4byte	.LASF106
 3762 06fe 01       		.byte	0x1
 3763 06ff 8101     		.2byte	0x181
 3764 0701 0A070000 		.4byte	0x70a
 3765 0705 02       		.uleb128 0x2
 3766 0706 91       		.byte	0x91
 3767 0707 6C       		.sleb128 -20
 3768 0708 00       		.byte	0
 3769 0709 00       		.byte	0
 3770 070a 08       		.uleb128 0x8
 3771 070b F7000000 		.4byte	0xf7
 3772 070f 1A070000 		.4byte	0x71a
 3773 0713 09       		.uleb128 0x9
 3774 0714 05010000 		.4byte	0x105
 3775 0718 09       		.byte	0x9
 3776 0719 00       		.byte	0
 3777 071a 1D       		.uleb128 0x1d
 3778 071b B3010000 		.4byte	.LASF107
 3779 071f 01       		.byte	0x1
 3780 0720 9301     		.2byte	0x193
 3781 0722 00000000 		.4byte	.LFB77
 3782 0726 1C000000 		.4byte	.LFE77-.LFB77
 3783 072a 01       		.uleb128 0x1
 3784 072b 9C       		.byte	0x9c
 3785 072c 1E       		.uleb128 0x1e
 3786 072d 24070000 		.4byte	.LASF109
 3787 0731 01       		.byte	0x1
 3788 0732 A301     		.2byte	0x1a3
 3789 0734 AD000000 		.4byte	0xad
 3790 0738 00000000 		.4byte	.LFB78
 3791 073c 28000000 		.4byte	.LFE78-.LFB78
 3792 0740 01       		.uleb128 0x1
 3793 0741 9C       		.byte	0x9c
 3794 0742 1F       		.uleb128 0x1f
 3795 0743 62030000 		.4byte	.LASF112
 3796 0747 01       		.byte	0x1
 3797 0748 AE01     		.2byte	0x1ae
 3798 074a 00000000 		.4byte	.LFB79
 3799 074e 84000000 		.4byte	.LFE79-.LFB79
 3800 0752 01       		.uleb128 0x1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 87


 3801 0753 9C       		.byte	0x9c
 3802 0754 68070000 		.4byte	0x768
 3803 0758 1C       		.uleb128 0x1c
 3804 0759 11050000 		.4byte	.LASF110
 3805 075d 01       		.byte	0x1
 3806 075e BB01     		.2byte	0x1bb
 3807 0760 7E000000 		.4byte	0x7e
 3808 0764 02       		.uleb128 0x2
 3809 0765 91       		.byte	0x91
 3810 0766 74       		.sleb128 -12
 3811 0767 00       		.byte	0
 3812 0768 20       		.uleb128 0x20
 3813 0769 DB020000 		.4byte	.LASF111
 3814 076d 01       		.byte	0x1
 3815 076e CD01     		.2byte	0x1cd
 3816 0770 00000000 		.4byte	.LFB80
 3817 0774 30000000 		.4byte	.LFE80-.LFB80
 3818 0778 01       		.uleb128 0x1
 3819 0779 9C       		.byte	0x9c
 3820 077a 1F       		.uleb128 0x1f
 3821 077b A3070000 		.4byte	.LASF113
 3822 077f 01       		.byte	0x1
 3823 0780 D601     		.2byte	0x1d6
 3824 0782 00000000 		.4byte	.LFB81
 3825 0786 0C020000 		.4byte	.LFE81-.LFB81
 3826 078a 01       		.uleb128 0x1
 3827 078b 9C       		.byte	0x9c
 3828 078c 2D080000 		.4byte	0x82d
 3829 0790 1C       		.uleb128 0x1c
 3830 0791 CD050000 		.4byte	.LASF114
 3831 0795 01       		.byte	0x1
 3832 0796 D901     		.2byte	0x1d9
 3833 0798 0A070000 		.4byte	0x70a
 3834 079c 02       		.uleb128 0x2
 3835 079d 91       		.byte	0x91
 3836 079e 64       		.sleb128 -28
 3837 079f 1C       		.uleb128 0x1c
 3838 07a0 4E020000 		.4byte	.LASF115
 3839 07a4 01       		.byte	0x1
 3840 07a5 DA01     		.2byte	0x1da
 3841 07a7 0A070000 		.4byte	0x70a
 3842 07ab 02       		.uleb128 0x2
 3843 07ac 91       		.byte	0x91
 3844 07ad 58       		.sleb128 -40
 3845 07ae 1C       		.uleb128 0x1c
 3846 07af C6070000 		.4byte	.LASF116
 3847 07b3 01       		.byte	0x1
 3848 07b4 DB01     		.2byte	0x1db
 3849 07b6 0A070000 		.4byte	0x70a
 3850 07ba 02       		.uleb128 0x2
 3851 07bb 91       		.byte	0x91
 3852 07bc 4C       		.sleb128 -52
 3853 07bd 1C       		.uleb128 0x1c
 3854 07be 62050000 		.4byte	.LASF117
 3855 07c2 01       		.byte	0x1
 3856 07c3 DC01     		.2byte	0x1dc
 3857 07c5 0A070000 		.4byte	0x70a
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 88


 3858 07c9 02       		.uleb128 0x2
 3859 07ca 91       		.byte	0x91
 3860 07cb 40       		.sleb128 -64
 3861 07cc 1C       		.uleb128 0x1c
 3862 07cd CE020000 		.4byte	.LASF118
 3863 07d1 01       		.byte	0x1
 3864 07d2 DD01     		.2byte	0x1dd
 3865 07d4 0A070000 		.4byte	0x70a
 3866 07d8 03       		.uleb128 0x3
 3867 07d9 91       		.byte	0x91
 3868 07da B47F     		.sleb128 -76
 3869 07dc 1C       		.uleb128 0x1c
 3870 07dd 2B020000 		.4byte	.LASF59
 3871 07e1 01       		.byte	0x1
 3872 07e2 ED01     		.2byte	0x1ed
 3873 07e4 7E000000 		.4byte	0x7e
 3874 07e8 03       		.uleb128 0x3
 3875 07e9 91       		.byte	0x91
 3876 07ea B07F     		.sleb128 -80
 3877 07ec 1C       		.uleb128 0x1c
 3878 07ed 70050000 		.4byte	.LASF60
 3879 07f1 01       		.byte	0x1
 3880 07f2 ED01     		.2byte	0x1ed
 3881 07f4 7E000000 		.4byte	0x7e
 3882 07f8 03       		.uleb128 0x3
 3883 07f9 91       		.byte	0x91
 3884 07fa AC7F     		.sleb128 -84
 3885 07fc 1C       		.uleb128 0x1c
 3886 07fd 16010000 		.4byte	.LASF119
 3887 0801 01       		.byte	0x1
 3888 0802 ED01     		.2byte	0x1ed
 3889 0804 7E000000 		.4byte	0x7e
 3890 0808 03       		.uleb128 0x3
 3891 0809 91       		.byte	0x91
 3892 080a A87F     		.sleb128 -88
 3893 080c 1C       		.uleb128 0x1c
 3894 080d 76040000 		.4byte	.LASF120
 3895 0811 01       		.byte	0x1
 3896 0812 ED01     		.2byte	0x1ed
 3897 0814 7E000000 		.4byte	0x7e
 3898 0818 03       		.uleb128 0x3
 3899 0819 91       		.byte	0x91
 3900 081a A47F     		.sleb128 -92
 3901 081c 1C       		.uleb128 0x1c
 3902 081d 2D040000 		.4byte	.LASF121
 3903 0821 01       		.byte	0x1
 3904 0822 ED01     		.2byte	0x1ed
 3905 0824 7E000000 		.4byte	0x7e
 3906 0828 03       		.uleb128 0x3
 3907 0829 91       		.byte	0x91
 3908 082a A07F     		.sleb128 -96
 3909 082c 00       		.byte	0
 3910 082d 1F       		.uleb128 0x1f
 3911 082e 35020000 		.4byte	.LASF122
 3912 0832 01       		.byte	0x1
 3913 0833 1502     		.2byte	0x215
 3914 0835 00000000 		.4byte	.LFB82
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 89


 3915 0839 68010000 		.4byte	.LFE82-.LFB82
 3916 083d 01       		.uleb128 0x1
 3917 083e 9C       		.byte	0x9c
 3918 083f 5D080000 		.4byte	0x85d
 3919 0843 14       		.uleb128 0x14
 3920 0844 DA000000 		.4byte	.LBB9
 3921 0848 38000000 		.4byte	.LBE9-.LBB9
 3922 084c 1C       		.uleb128 0x1c
 3923 084d CE060000 		.4byte	.LASF123
 3924 0851 01       		.byte	0x1
 3925 0852 4302     		.2byte	0x243
 3926 0854 0A070000 		.4byte	0x70a
 3927 0858 02       		.uleb128 0x2
 3928 0859 91       		.byte	0x91
 3929 085a 6C       		.sleb128 -20
 3930 085b 00       		.byte	0
 3931 085c 00       		.byte	0
 3932 085d 1B       		.uleb128 0x1b
 3933 085e 98020000 		.4byte	.LASF124
 3934 0862 01       		.byte	0x1
 3935 0863 5602     		.2byte	0x256
 3936 0865 57000000 		.4byte	0x57
 3937 0869 00000000 		.4byte	.LFB83
 3938 086d 44010000 		.4byte	.LFE83-.LFB83
 3939 0871 01       		.uleb128 0x1
 3940 0872 9C       		.byte	0x9c
 3941 0873 19090000 		.4byte	0x919
 3942 0877 1C       		.uleb128 0x1c
 3943 0878 0E040000 		.4byte	.LASF125
 3944 087c 01       		.byte	0x1
 3945 087d 6102     		.2byte	0x261
 3946 087f 57000000 		.4byte	0x57
 3947 0883 02       		.uleb128 0x2
 3948 0884 91       		.byte	0x91
 3949 0885 74       		.sleb128 -12
 3950 0886 14       		.uleb128 0x14
 3951 0887 30000000 		.4byte	.LBB10
 3952 088b DE000000 		.4byte	.LBE10-.LBB10
 3953 088f 1C       		.uleb128 0x1c
 3954 0890 59020000 		.4byte	.LASF97
 3955 0894 01       		.byte	0x1
 3956 0895 6602     		.2byte	0x266
 3957 0897 19090000 		.4byte	0x919
 3958 089b 02       		.uleb128 0x2
 3959 089c 91       		.byte	0x91
 3960 089d 54       		.sleb128 -44
 3961 089e 1A       		.uleb128 0x1a
 3962 089f 7400     		.ascii	"t\000"
 3963 08a1 01       		.byte	0x1
 3964 08a2 6C02     		.2byte	0x26c
 3965 08a4 2D010000 		.4byte	0x12d
 3966 08a8 03       		.uleb128 0x3
 3967 08a9 91       		.byte	0x91
 3968 08aa 947F     		.sleb128 -108
 3969 08ac 1C       		.uleb128 0x1c
 3970 08ad D5010000 		.4byte	.LASF126
 3971 08b1 01       		.byte	0x1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 90


 3972 08b2 6F02     		.2byte	0x26f
 3973 08b4 7E000000 		.4byte	0x7e
 3974 08b8 02       		.uleb128 0x2
 3975 08b9 91       		.byte	0x91
 3976 08ba 50       		.sleb128 -48
 3977 08bb 1C       		.uleb128 0x1c
 3978 08bc A4040000 		.4byte	.LASF127
 3979 08c0 01       		.byte	0x1
 3980 08c1 6F02     		.2byte	0x26f
 3981 08c3 7E000000 		.4byte	0x7e
 3982 08c7 02       		.uleb128 0x2
 3983 08c8 91       		.byte	0x91
 3984 08c9 4C       		.sleb128 -52
 3985 08ca 1A       		.uleb128 0x1a
 3986 08cb 64617900 		.ascii	"day\000"
 3987 08cf 01       		.byte	0x1
 3988 08d0 6F02     		.2byte	0x26f
 3989 08d2 7E000000 		.4byte	0x7e
 3990 08d6 02       		.uleb128 0x2
 3991 08d7 91       		.byte	0x91
 3992 08d8 48       		.sleb128 -56
 3993 08d9 1C       		.uleb128 0x1c
 3994 08da 2C050000 		.4byte	.LASF128
 3995 08de 01       		.byte	0x1
 3996 08df 6F02     		.2byte	0x26f
 3997 08e1 7E000000 		.4byte	0x7e
 3998 08e5 02       		.uleb128 0x2
 3999 08e6 91       		.byte	0x91
 4000 08e7 44       		.sleb128 -60
 4001 08e8 1C       		.uleb128 0x1c
 4002 08e9 8C070000 		.4byte	.LASF129
 4003 08ed 01       		.byte	0x1
 4004 08ee 6F02     		.2byte	0x26f
 4005 08f0 7E000000 		.4byte	0x7e
 4006 08f4 02       		.uleb128 0x2
 4007 08f5 91       		.byte	0x91
 4008 08f6 40       		.sleb128 -64
 4009 08f7 1C       		.uleb128 0x1c
 4010 08f8 CE010000 		.4byte	.LASF130
 4011 08fc 01       		.byte	0x1
 4012 08fd 6F02     		.2byte	0x26f
 4013 08ff 7E000000 		.4byte	0x7e
 4014 0903 03       		.uleb128 0x3
 4015 0904 91       		.byte	0x91
 4016 0905 BC7F     		.sleb128 -68
 4017 0907 1C       		.uleb128 0x1c
 4018 0908 00000000 		.4byte	.LASF131
 4019 090c 01       		.byte	0x1
 4020 090d 6F02     		.2byte	0x26f
 4021 090f 7E000000 		.4byte	0x7e
 4022 0913 03       		.uleb128 0x3
 4023 0914 91       		.byte	0x91
 4024 0915 B87F     		.sleb128 -72
 4025 0917 00       		.byte	0
 4026 0918 00       		.byte	0
 4027 0919 08       		.uleb128 0x8
 4028 091a F7000000 		.4byte	0xf7
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 91


 4029 091e 29090000 		.4byte	0x929
 4030 0922 09       		.uleb128 0x9
 4031 0923 05010000 		.4byte	0x105
 4032 0927 1D       		.byte	0x1d
 4033 0928 00       		.byte	0
 4034 0929 21       		.uleb128 0x21
 4035 092a FF010000 		.4byte	.LASF132
 4036 092e 01       		.byte	0x1
 4037 092f 8F02     		.2byte	0x28f
 4038 0931 AD000000 		.4byte	0xad
 4039 0935 00000000 		.4byte	.LFB84
 4040 0939 14000000 		.4byte	.LFE84-.LFB84
 4041 093d 01       		.uleb128 0x1
 4042 093e 9C       		.byte	0x9c
 4043 093f 1D       		.uleb128 0x1d
 4044 0940 C2020000 		.4byte	.LASF133
 4045 0944 01       		.byte	0x1
 4046 0945 9402     		.2byte	0x294
 4047 0947 00000000 		.4byte	.LFB85
 4048 094b 1A000000 		.4byte	.LFE85-.LFB85
 4049 094f 01       		.uleb128 0x1
 4050 0950 9C       		.byte	0x9c
 4051 0951 1D       		.uleb128 0x1d
 4052 0952 F2000000 		.4byte	.LASF134
 4053 0956 01       		.byte	0x1
 4054 0957 A102     		.2byte	0x2a1
 4055 0959 00000000 		.4byte	.LFB86
 4056 095d 2A000000 		.4byte	.LFE86-.LFB86
 4057 0961 01       		.uleb128 0x1
 4058 0962 9C       		.byte	0x9c
 4059 0963 1B       		.uleb128 0x1b
 4060 0964 DE050000 		.4byte	.LASF135
 4061 0968 01       		.byte	0x1
 4062 0969 B402     		.2byte	0x2b4
 4063 096b 37030000 		.4byte	0x337
 4064 096f 00000000 		.4byte	.LFB87
 4065 0973 7C020000 		.4byte	.LFE87-.LFB87
 4066 0977 01       		.uleb128 0x1
 4067 0978 9C       		.byte	0x9c
 4068 0979 0C0A0000 		.4byte	0xa0c
 4069 097d 1A       		.uleb128 0x1a
 4070 097e 67707300 		.ascii	"gps\000"
 4071 0982 01       		.byte	0x1
 4072 0983 B502     		.2byte	0x2b5
 4073 0985 37030000 		.4byte	0x337
 4074 0989 02       		.uleb128 0x2
 4075 098a 91       		.byte	0x91
 4076 098b 4C       		.sleb128 -52
 4077 098c 1C       		.uleb128 0x1c
 4078 098d 4D080000 		.4byte	.LASF136
 4079 0991 01       		.byte	0x1
 4080 0992 C102     		.2byte	0x2c1
 4081 0994 57000000 		.4byte	0x57
 4082 0998 02       		.uleb128 0x2
 4083 0999 91       		.byte	0x91
 4084 099a 68       		.sleb128 -24
 4085 099b 1C       		.uleb128 0x1c
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 92


 4086 099c 54070000 		.4byte	.LASF137
 4087 09a0 01       		.byte	0x1
 4088 09a1 E802     		.2byte	0x2e8
 4089 09a3 AD000000 		.4byte	0xad
 4090 09a7 02       		.uleb128 0x2
 4091 09a8 91       		.byte	0x91
 4092 09a9 67       		.sleb128 -25
 4093 09aa 1A       		.uleb128 0x1a
 4094 09ab 6C617400 		.ascii	"lat\000"
 4095 09af 01       		.byte	0x1
 4096 09b0 F402     		.2byte	0x2f4
 4097 09b2 E9000000 		.4byte	0xe9
 4098 09b6 02       		.uleb128 0x2
 4099 09b7 91       		.byte	0x91
 4100 09b8 48       		.sleb128 -56
 4101 09b9 1A       		.uleb128 0x1a
 4102 09ba 6C6F6E00 		.ascii	"lon\000"
 4103 09be 01       		.byte	0x1
 4104 09bf F502     		.2byte	0x2f5
 4105 09c1 E9000000 		.4byte	0xe9
 4106 09c5 02       		.uleb128 0x2
 4107 09c6 91       		.byte	0x91
 4108 09c7 44       		.sleb128 -60
 4109 09c8 1A       		.uleb128 0x1a
 4110 09c9 616C7400 		.ascii	"alt\000"
 4111 09cd 01       		.byte	0x1
 4112 09ce F602     		.2byte	0x2f6
 4113 09d0 E9000000 		.4byte	0xe9
 4114 09d4 02       		.uleb128 0x2
 4115 09d5 91       		.byte	0x91
 4116 09d6 40       		.sleb128 -64
 4117 09d7 1A       		.uleb128 0x1a
 4118 09d8 733100   		.ascii	"s1\000"
 4119 09db 01       		.byte	0x1
 4120 09dc FA02     		.2byte	0x2fa
 4121 09de 0C010000 		.4byte	0x10c
 4122 09e2 02       		.uleb128 0x2
 4123 09e3 91       		.byte	0x91
 4124 09e4 60       		.sleb128 -32
 4125 09e5 1C       		.uleb128 0x1c
 4126 09e6 11050000 		.4byte	.LASF110
 4127 09ea 01       		.byte	0x1
 4128 09eb FD02     		.2byte	0x2fd
 4129 09ed 7E000000 		.4byte	0x7e
 4130 09f1 02       		.uleb128 0x2
 4131 09f2 91       		.byte	0x91
 4132 09f3 5C       		.sleb128 -36
 4133 09f4 14       		.uleb128 0x14
 4134 09f5 B4000000 		.4byte	.LBB11
 4135 09f9 38000000 		.4byte	.LBE11-.LBB11
 4136 09fd 1A       		.uleb128 0x1a
 4137 09fe 6900     		.ascii	"i\000"
 4138 0a00 01       		.byte	0x1
 4139 0a01 E902     		.2byte	0x2e9
 4140 0a03 B9000000 		.4byte	0xb9
 4141 0a07 02       		.uleb128 0x2
 4142 0a08 91       		.byte	0x91
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 93


 4143 0a09 6E       		.sleb128 -18
 4144 0a0a 00       		.byte	0
 4145 0a0b 00       		.byte	0
 4146 0a0c 22       		.uleb128 0x22
 4147 0a0d 40010000 		.4byte	.LASF138
 4148 0a11 0A       		.byte	0xa
 4149 0a12 1207     		.2byte	0x712
 4150 0a14 180A0000 		.4byte	0xa18
 4151 0a18 0F       		.uleb128 0xf
 4152 0a19 97000000 		.4byte	0x97
 4153 0a1d 23       		.uleb128 0x23
 4154 0a1e 28000000 		.4byte	.LASF139
 4155 0a22 07       		.byte	0x7
 4156 0a23 11       		.byte	0x11
 4157 0a24 87030000 		.4byte	0x387
 4158 0a28 05       		.uleb128 0x5
 4159 0a29 03       		.byte	0x3
 4160 0a2a 00000000 		.4byte	buffer_overflow
 4161 0a2e 23       		.uleb128 0x23
 4162 0a2f 82040000 		.4byte	.LASF140
 4163 0a33 07       		.byte	0x7
 4164 0a34 22       		.byte	0x22
 4165 0a35 B9000000 		.4byte	0xb9
 4166 0a39 05       		.uleb128 0x5
 4167 0a3a 03       		.byte	0x3
 4168 0a3b 00000000 		.4byte	dataPointsInStack
 4169 0a3f 23       		.uleb128 0x23
 4170 0a40 DB070000 		.4byte	.LASF141
 4171 0a44 07       		.byte	0x7
 4172 0a45 23       		.byte	0x23
 4173 0a46 B9000000 		.4byte	0xb9
 4174 0a4a 05       		.uleb128 0x5
 4175 0a4b 03       		.byte	0x3
 4176 0a4c 00000000 		.4byte	dataPointsInStackDesired
 4177 0a50 08       		.uleb128 0x8
 4178 0a51 3B020000 		.4byte	0x23b
 4179 0a55 600A0000 		.4byte	0xa60
 4180 0a59 09       		.uleb128 0x9
 4181 0a5a 05010000 		.4byte	0x105
 4182 0a5e 95       		.byte	0x95
 4183 0a5f 00       		.byte	0
 4184 0a60 23       		.uleb128 0x23
 4185 0a61 86030000 		.4byte	.LASF142
 4186 0a65 07       		.byte	0x7
 4187 0a66 24       		.byte	0x24
 4188 0a67 500A0000 		.4byte	0xa50
 4189 0a6b 05       		.uleb128 0x5
 4190 0a6c 03       		.byte	0x3
 4191 0a6d 00000000 		.4byte	data
 4192 0a71 23       		.uleb128 0x23
 4193 0a72 22010000 		.4byte	.LASF143
 4194 0a76 08       		.byte	0x8
 4195 0a77 20       		.byte	0x20
 4196 0a78 AD000000 		.4byte	0xad
 4197 0a7c 05       		.uleb128 0x5
 4198 0a7d 03       		.byte	0x3
 4199 0a7e 00000000 		.4byte	modem_state
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 94


 4200 0a82 23       		.uleb128 0x23
 4201 0a83 3D070000 		.4byte	.LASF144
 4202 0a87 08       		.byte	0x8
 4203 0a88 63       		.byte	0x63
 4204 0a89 DD000000 		.4byte	0xdd
 4205 0a8d 05       		.uleb128 0x5
 4206 0a8e 03       		.byte	0x3
 4207 0a8f 00000000 		.4byte	modem_start_time_stamp
 4208 0a93 23       		.uleb128 0x23
 4209 0a94 9C030000 		.4byte	.LASF71
 4210 0a98 08       		.byte	0x8
 4211 0a99 64       		.byte	0x64
 4212 0a9a 73020000 		.4byte	0x273
 4213 0a9e 05       		.uleb128 0x5
 4214 0a9f 03       		.byte	0x3
 4215 0aa0 00000000 		.4byte	modem_info
 4216 0aa4 23       		.uleb128 0x23
 4217 0aa5 4D010000 		.4byte	.LASF145
 4218 0aa9 08       		.byte	0x8
 4219 0aaa 65       		.byte	0x65
 4220 0aab E7020000 		.4byte	0x2e7
 4221 0aaf 05       		.uleb128 0x5
 4222 0ab0 03       		.byte	0x3
 4223 0ab1 00000000 		.4byte	modem_stats
 4224 0ab5 23       		.uleb128 0x23
 4225 0ab6 17050000 		.4byte	.LASF146
 4226 0aba 08       		.byte	0x8
 4227 0abb 66       		.byte	0x66
 4228 0abc 8E030000 		.4byte	0x38e
 4229 0ac0 05       		.uleb128 0x5
 4230 0ac1 03       		.byte	0x3
 4231 0ac2 00000000 		.4byte	updatable_parameters
 4232 0ac6 08       		.uleb128 0x8
 4233 0ac7 F7000000 		.4byte	0xf7
 4234 0acb D70A0000 		.4byte	0xad7
 4235 0acf 24       		.uleb128 0x24
 4236 0ad0 05010000 		.4byte	0x105
 4237 0ad4 0F27     		.2byte	0x270f
 4238 0ad6 00       		.byte	0
 4239 0ad7 23       		.uleb128 0x23
 4240 0ad8 57080000 		.4byte	.LASF147
 4241 0adc 09       		.byte	0x9
 4242 0add 18       		.byte	0x18
 4243 0ade C60A0000 		.4byte	0xac6
 4244 0ae2 05       		.uleb128 0x5
 4245 0ae3 03       		.byte	0x3
 4246 0ae4 00000000 		.4byte	http_request
 4247 0ae8 23       		.uleb128 0x23
 4248 0ae9 A9010000 		.4byte	.LASF148
 4249 0aed 09       		.byte	0x9
 4250 0aee 19       		.byte	0x19
 4251 0aef C60A0000 		.4byte	0xac6
 4252 0af3 05       		.uleb128 0x5
 4253 0af4 03       		.byte	0x3
 4254 0af5 00000000 		.4byte	http_body
 4255 0af9 08       		.uleb128 0x8
 4256 0afa F7000000 		.4byte	0xf7
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 95


 4257 0afe 090B0000 		.4byte	0xb09
 4258 0b02 09       		.uleb128 0x9
 4259 0b03 05010000 		.4byte	0x105
 4260 0b07 C7       		.byte	0xc7
 4261 0b08 00       		.byte	0
 4262 0b09 23       		.uleb128 0x23
 4263 0b0a DC060000 		.4byte	.LASF149
 4264 0b0e 09       		.byte	0x9
 4265 0b0f 1A       		.byte	0x1a
 4266 0b10 F90A0000 		.4byte	0xaf9
 4267 0b14 05       		.uleb128 0x5
 4268 0b15 03       		.byte	0x3
 4269 0b16 00000000 		.4byte	http_route
 4270 0b1a 23       		.uleb128 0x23
 4271 0b1b FF050000 		.4byte	.LASF150
 4272 0b1f 09       		.byte	0x9
 4273 0b20 41       		.byte	0x41
 4274 0b21 09040000 		.4byte	0x409
 4275 0b25 05       		.uleb128 0x5
 4276 0b26 03       		.byte	0x3
 4277 0b27 00000000 		.4byte	system_info
 4278 0b2b 23       		.uleb128 0x23
 4279 0b2c A8050000 		.4byte	.LASF151
 4280 0b30 09       		.byte	0x9
 4281 0b31 53       		.byte	0x53
 4282 0b32 45040000 		.4byte	0x445
 4283 0b36 05       		.uleb128 0x5
 4284 0b37 03       		.byte	0x3
 4285 0b38 00000000 		.4byte	system_settings
 4286 0b3c 23       		.uleb128 0x23
 4287 0b3d 33010000 		.4byte	.LASF152
 4288 0b41 09       		.byte	0x9
 4289 0b42 6F       		.byte	0x6f
 4290 0b43 D2030000 		.4byte	0x3d2
 4291 0b47 05       		.uleb128 0x5
 4292 0b48 03       		.byte	0x3
 4293 0b49 00000000 		.4byte	alarmMeasure
 4294 0b4d 23       		.uleb128 0x23
 4295 0b4e 78010000 		.4byte	.LASF153
 4296 0b52 09       		.byte	0x9
 4297 0b53 70       		.byte	0x70
 4298 0b54 AD000000 		.4byte	0xad
 4299 0b58 05       		.uleb128 0x5
 4300 0b59 03       		.byte	0x3
 4301 0b5a 00000000 		.4byte	timeToMeasure
 4302 0b5e 23       		.uleb128 0x23
 4303 0b5f 03030000 		.4byte	.LASF154
 4304 0b63 09       		.byte	0x9
 4305 0b64 71       		.byte	0x71
 4306 0b65 D2030000 		.4byte	0x3d2
 4307 0b69 05       		.uleb128 0x5
 4308 0b6a 03       		.byte	0x3
 4309 0b6b 00000000 		.4byte	alarmSync
 4310 0b6f 23       		.uleb128 0x23
 4311 0b70 9E010000 		.4byte	.LASF155
 4312 0b74 09       		.byte	0x9
 4313 0b75 72       		.byte	0x72
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 96


 4314 0b76 AD000000 		.4byte	0xad
 4315 0b7a 05       		.uleb128 0x5
 4316 0b7b 03       		.byte	0x3
 4317 0b7c 00000000 		.4byte	timeToSync
 4318 0b80 23       		.uleb128 0x23
 4319 0b81 EF040000 		.4byte	.LASF156
 4320 0b85 09       		.byte	0x9
 4321 0b86 73       		.byte	0x73
 4322 0b87 AD000000 		.4byte	0xad
 4323 0b8b 05       		.uleb128 0x5
 4324 0b8c 03       		.byte	0x3
 4325 0b8d 00000000 		.4byte	timeToSycnRemoteParams
 4326 0b91 25       		.uleb128 0x25
 4327 0b92 68657900 		.ascii	"hey\000"
 4328 0b96 09       		.byte	0x9
 4329 0b97 74       		.byte	0x74
 4330 0b98 AD000000 		.4byte	0xad
 4331 0b9c 05       		.uleb128 0x5
 4332 0b9d 03       		.byte	0x3
 4333 0b9e 00000000 		.4byte	hey
 4334 0ba2 08       		.uleb128 0x8
 4335 0ba3 F7000000 		.4byte	0xf7
 4336 0ba7 B30B0000 		.4byte	0xbb3
 4337 0bab 24       		.uleb128 0x24
 4338 0bac 05010000 		.4byte	0x105
 4339 0bb0 FF03     		.2byte	0x3ff
 4340 0bb2 00       		.byte	0
 4341 0bb3 23       		.uleb128 0x23
 4342 0bb4 C7040000 		.4byte	.LASF157
 4343 0bb8 01       		.byte	0x1
 4344 0bb9 05       		.byte	0x5
 4345 0bba A20B0000 		.4byte	0xba2
 4346 0bbe 05       		.uleb128 0x5
 4347 0bbf 03       		.byte	0x3
 4348 0bc0 00000000 		.4byte	uart_received_string
 4349 0bc4 23       		.uleb128 0x23
 4350 0bc5 05070000 		.4byte	.LASF158
 4351 0bc9 01       		.byte	0x1
 4352 0bca 06       		.byte	0x6
 4353 0bcb D1000000 		.4byte	0xd1
 4354 0bcf 05       		.uleb128 0x5
 4355 0bd0 03       		.byte	0x3
 4356 0bd1 00000000 		.4byte	uart_string_index
 4357 0bd5 00       		.byte	0
 4358              		.section	.debug_abbrev,"",%progbits
 4359              	.Ldebug_abbrev0:
 4360 0000 01       		.uleb128 0x1
 4361 0001 11       		.uleb128 0x11
 4362 0002 01       		.byte	0x1
 4363 0003 25       		.uleb128 0x25
 4364 0004 0E       		.uleb128 0xe
 4365 0005 13       		.uleb128 0x13
 4366 0006 0B       		.uleb128 0xb
 4367 0007 03       		.uleb128 0x3
 4368 0008 0E       		.uleb128 0xe
 4369 0009 1B       		.uleb128 0x1b
 4370 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 97


 4371 000b 55       		.uleb128 0x55
 4372 000c 17       		.uleb128 0x17
 4373 000d 11       		.uleb128 0x11
 4374 000e 01       		.uleb128 0x1
 4375 000f 10       		.uleb128 0x10
 4376 0010 17       		.uleb128 0x17
 4377 0011 00       		.byte	0
 4378 0012 00       		.byte	0
 4379 0013 02       		.uleb128 0x2
 4380 0014 24       		.uleb128 0x24
 4381 0015 00       		.byte	0
 4382 0016 0B       		.uleb128 0xb
 4383 0017 0B       		.uleb128 0xb
 4384 0018 3E       		.uleb128 0x3e
 4385 0019 0B       		.uleb128 0xb
 4386 001a 03       		.uleb128 0x3
 4387 001b 0E       		.uleb128 0xe
 4388 001c 00       		.byte	0
 4389 001d 00       		.byte	0
 4390 001e 03       		.uleb128 0x3
 4391 001f 16       		.uleb128 0x16
 4392 0020 00       		.byte	0
 4393 0021 03       		.uleb128 0x3
 4394 0022 0E       		.uleb128 0xe
 4395 0023 3A       		.uleb128 0x3a
 4396 0024 0B       		.uleb128 0xb
 4397 0025 3B       		.uleb128 0x3b
 4398 0026 0B       		.uleb128 0xb
 4399 0027 49       		.uleb128 0x49
 4400 0028 13       		.uleb128 0x13
 4401 0029 00       		.byte	0
 4402 002a 00       		.byte	0
 4403 002b 04       		.uleb128 0x4
 4404 002c 24       		.uleb128 0x24
 4405 002d 00       		.byte	0
 4406 002e 0B       		.uleb128 0xb
 4407 002f 0B       		.uleb128 0xb
 4408 0030 3E       		.uleb128 0x3e
 4409 0031 0B       		.uleb128 0xb
 4410 0032 03       		.uleb128 0x3
 4411 0033 08       		.uleb128 0x8
 4412 0034 00       		.byte	0
 4413 0035 00       		.byte	0
 4414 0036 05       		.uleb128 0x5
 4415 0037 16       		.uleb128 0x16
 4416 0038 00       		.byte	0
 4417 0039 03       		.uleb128 0x3
 4418 003a 0E       		.uleb128 0xe
 4419 003b 3A       		.uleb128 0x3a
 4420 003c 0B       		.uleb128 0xb
 4421 003d 3B       		.uleb128 0x3b
 4422 003e 05       		.uleb128 0x5
 4423 003f 49       		.uleb128 0x49
 4424 0040 13       		.uleb128 0x13
 4425 0041 00       		.byte	0
 4426 0042 00       		.byte	0
 4427 0043 06       		.uleb128 0x6
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 98


 4428 0044 0F       		.uleb128 0xf
 4429 0045 00       		.byte	0
 4430 0046 0B       		.uleb128 0xb
 4431 0047 0B       		.uleb128 0xb
 4432 0048 49       		.uleb128 0x49
 4433 0049 13       		.uleb128 0x13
 4434 004a 00       		.byte	0
 4435 004b 00       		.byte	0
 4436 004c 07       		.uleb128 0x7
 4437 004d 26       		.uleb128 0x26
 4438 004e 00       		.byte	0
 4439 004f 49       		.uleb128 0x49
 4440 0050 13       		.uleb128 0x13
 4441 0051 00       		.byte	0
 4442 0052 00       		.byte	0
 4443 0053 08       		.uleb128 0x8
 4444 0054 01       		.uleb128 0x1
 4445 0055 01       		.byte	0x1
 4446 0056 49       		.uleb128 0x49
 4447 0057 13       		.uleb128 0x13
 4448 0058 01       		.uleb128 0x1
 4449 0059 13       		.uleb128 0x13
 4450 005a 00       		.byte	0
 4451 005b 00       		.byte	0
 4452 005c 09       		.uleb128 0x9
 4453 005d 21       		.uleb128 0x21
 4454 005e 00       		.byte	0
 4455 005f 49       		.uleb128 0x49
 4456 0060 13       		.uleb128 0x13
 4457 0061 2F       		.uleb128 0x2f
 4458 0062 0B       		.uleb128 0xb
 4459 0063 00       		.byte	0
 4460 0064 00       		.byte	0
 4461 0065 0A       		.uleb128 0xa
 4462 0066 13       		.uleb128 0x13
 4463 0067 01       		.byte	0x1
 4464 0068 03       		.uleb128 0x3
 4465 0069 08       		.uleb128 0x8
 4466 006a 0B       		.uleb128 0xb
 4467 006b 0B       		.uleb128 0xb
 4468 006c 3A       		.uleb128 0x3a
 4469 006d 0B       		.uleb128 0xb
 4470 006e 3B       		.uleb128 0x3b
 4471 006f 0B       		.uleb128 0xb
 4472 0070 01       		.uleb128 0x1
 4473 0071 13       		.uleb128 0x13
 4474 0072 00       		.byte	0
 4475 0073 00       		.byte	0
 4476 0074 0B       		.uleb128 0xb
 4477 0075 0D       		.uleb128 0xd
 4478 0076 00       		.byte	0
 4479 0077 03       		.uleb128 0x3
 4480 0078 0E       		.uleb128 0xe
 4481 0079 3A       		.uleb128 0x3a
 4482 007a 0B       		.uleb128 0xb
 4483 007b 3B       		.uleb128 0x3b
 4484 007c 0B       		.uleb128 0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 99


 4485 007d 49       		.uleb128 0x49
 4486 007e 13       		.uleb128 0x13
 4487 007f 38       		.uleb128 0x38
 4488 0080 0B       		.uleb128 0xb
 4489 0081 00       		.byte	0
 4490 0082 00       		.byte	0
 4491 0083 0C       		.uleb128 0xc
 4492 0084 13       		.uleb128 0x13
 4493 0085 01       		.byte	0x1
 4494 0086 0B       		.uleb128 0xb
 4495 0087 05       		.uleb128 0x5
 4496 0088 3A       		.uleb128 0x3a
 4497 0089 0B       		.uleb128 0xb
 4498 008a 3B       		.uleb128 0x3b
 4499 008b 0B       		.uleb128 0xb
 4500 008c 01       		.uleb128 0x1
 4501 008d 13       		.uleb128 0x13
 4502 008e 00       		.byte	0
 4503 008f 00       		.byte	0
 4504 0090 0D       		.uleb128 0xd
 4505 0091 13       		.uleb128 0x13
 4506 0092 01       		.byte	0x1
 4507 0093 0B       		.uleb128 0xb
 4508 0094 0B       		.uleb128 0xb
 4509 0095 3A       		.uleb128 0x3a
 4510 0096 0B       		.uleb128 0xb
 4511 0097 3B       		.uleb128 0x3b
 4512 0098 0B       		.uleb128 0xb
 4513 0099 01       		.uleb128 0x1
 4514 009a 13       		.uleb128 0x13
 4515 009b 00       		.byte	0
 4516 009c 00       		.byte	0
 4517 009d 0E       		.uleb128 0xe
 4518 009e 0D       		.uleb128 0xd
 4519 009f 00       		.byte	0
 4520 00a0 03       		.uleb128 0x3
 4521 00a1 08       		.uleb128 0x8
 4522 00a2 3A       		.uleb128 0x3a
 4523 00a3 0B       		.uleb128 0xb
 4524 00a4 3B       		.uleb128 0x3b
 4525 00a5 0B       		.uleb128 0xb
 4526 00a6 49       		.uleb128 0x49
 4527 00a7 13       		.uleb128 0x13
 4528 00a8 38       		.uleb128 0x38
 4529 00a9 0B       		.uleb128 0xb
 4530 00aa 00       		.byte	0
 4531 00ab 00       		.byte	0
 4532 00ac 0F       		.uleb128 0xf
 4533 00ad 35       		.uleb128 0x35
 4534 00ae 00       		.byte	0
 4535 00af 49       		.uleb128 0x49
 4536 00b0 13       		.uleb128 0x13
 4537 00b1 00       		.byte	0
 4538 00b2 00       		.byte	0
 4539 00b3 10       		.uleb128 0x10
 4540 00b4 2E       		.uleb128 0x2e
 4541 00b5 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 100


 4542 00b6 3F       		.uleb128 0x3f
 4543 00b7 19       		.uleb128 0x19
 4544 00b8 03       		.uleb128 0x3
 4545 00b9 0E       		.uleb128 0xe
 4546 00ba 3A       		.uleb128 0x3a
 4547 00bb 0B       		.uleb128 0xb
 4548 00bc 3B       		.uleb128 0x3b
 4549 00bd 0B       		.uleb128 0xb
 4550 00be 27       		.uleb128 0x27
 4551 00bf 19       		.uleb128 0x19
 4552 00c0 11       		.uleb128 0x11
 4553 00c1 01       		.uleb128 0x1
 4554 00c2 12       		.uleb128 0x12
 4555 00c3 06       		.uleb128 0x6
 4556 00c4 40       		.uleb128 0x40
 4557 00c5 18       		.uleb128 0x18
 4558 00c6 9642     		.uleb128 0x2116
 4559 00c8 19       		.uleb128 0x19
 4560 00c9 00       		.byte	0
 4561 00ca 00       		.byte	0
 4562 00cb 11       		.uleb128 0x11
 4563 00cc 2E       		.uleb128 0x2e
 4564 00cd 00       		.byte	0
 4565 00ce 3F       		.uleb128 0x3f
 4566 00cf 19       		.uleb128 0x19
 4567 00d0 03       		.uleb128 0x3
 4568 00d1 0E       		.uleb128 0xe
 4569 00d2 3A       		.uleb128 0x3a
 4570 00d3 0B       		.uleb128 0xb
 4571 00d4 3B       		.uleb128 0x3b
 4572 00d5 0B       		.uleb128 0xb
 4573 00d6 11       		.uleb128 0x11
 4574 00d7 01       		.uleb128 0x1
 4575 00d8 12       		.uleb128 0x12
 4576 00d9 06       		.uleb128 0x6
 4577 00da 40       		.uleb128 0x40
 4578 00db 18       		.uleb128 0x18
 4579 00dc 9642     		.uleb128 0x2116
 4580 00de 19       		.uleb128 0x19
 4581 00df 00       		.byte	0
 4582 00e0 00       		.byte	0
 4583 00e1 12       		.uleb128 0x12
 4584 00e2 2E       		.uleb128 0x2e
 4585 00e3 01       		.byte	0x1
 4586 00e4 3F       		.uleb128 0x3f
 4587 00e5 19       		.uleb128 0x19
 4588 00e6 03       		.uleb128 0x3
 4589 00e7 0E       		.uleb128 0xe
 4590 00e8 3A       		.uleb128 0x3a
 4591 00e9 0B       		.uleb128 0xb
 4592 00ea 3B       		.uleb128 0x3b
 4593 00eb 0B       		.uleb128 0xb
 4594 00ec 49       		.uleb128 0x49
 4595 00ed 13       		.uleb128 0x13
 4596 00ee 11       		.uleb128 0x11
 4597 00ef 01       		.uleb128 0x1
 4598 00f0 12       		.uleb128 0x12
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 101


 4599 00f1 06       		.uleb128 0x6
 4600 00f2 40       		.uleb128 0x40
 4601 00f3 18       		.uleb128 0x18
 4602 00f4 9642     		.uleb128 0x2116
 4603 00f6 19       		.uleb128 0x19
 4604 00f7 01       		.uleb128 0x1
 4605 00f8 13       		.uleb128 0x13
 4606 00f9 00       		.byte	0
 4607 00fa 00       		.byte	0
 4608 00fb 13       		.uleb128 0x13
 4609 00fc 34       		.uleb128 0x34
 4610 00fd 00       		.byte	0
 4611 00fe 03       		.uleb128 0x3
 4612 00ff 0E       		.uleb128 0xe
 4613 0100 3A       		.uleb128 0x3a
 4614 0101 0B       		.uleb128 0xb
 4615 0102 3B       		.uleb128 0x3b
 4616 0103 0B       		.uleb128 0xb
 4617 0104 49       		.uleb128 0x49
 4618 0105 13       		.uleb128 0x13
 4619 0106 02       		.uleb128 0x2
 4620 0107 18       		.uleb128 0x18
 4621 0108 00       		.byte	0
 4622 0109 00       		.byte	0
 4623 010a 14       		.uleb128 0x14
 4624 010b 0B       		.uleb128 0xb
 4625 010c 01       		.byte	0x1
 4626 010d 11       		.uleb128 0x11
 4627 010e 01       		.uleb128 0x1
 4628 010f 12       		.uleb128 0x12
 4629 0110 06       		.uleb128 0x6
 4630 0111 00       		.byte	0
 4631 0112 00       		.byte	0
 4632 0113 15       		.uleb128 0x15
 4633 0114 2E       		.uleb128 0x2e
 4634 0115 01       		.byte	0x1
 4635 0116 3F       		.uleb128 0x3f
 4636 0117 19       		.uleb128 0x19
 4637 0118 03       		.uleb128 0x3
 4638 0119 0E       		.uleb128 0xe
 4639 011a 3A       		.uleb128 0x3a
 4640 011b 0B       		.uleb128 0xb
 4641 011c 3B       		.uleb128 0x3b
 4642 011d 0B       		.uleb128 0xb
 4643 011e 27       		.uleb128 0x27
 4644 011f 19       		.uleb128 0x19
 4645 0120 49       		.uleb128 0x49
 4646 0121 13       		.uleb128 0x13
 4647 0122 11       		.uleb128 0x11
 4648 0123 01       		.uleb128 0x1
 4649 0124 12       		.uleb128 0x12
 4650 0125 06       		.uleb128 0x6
 4651 0126 40       		.uleb128 0x40
 4652 0127 18       		.uleb128 0x18
 4653 0128 9642     		.uleb128 0x2116
 4654 012a 19       		.uleb128 0x19
 4655 012b 01       		.uleb128 0x1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 102


 4656 012c 13       		.uleb128 0x13
 4657 012d 00       		.byte	0
 4658 012e 00       		.byte	0
 4659 012f 16       		.uleb128 0x16
 4660 0130 05       		.uleb128 0x5
 4661 0131 00       		.byte	0
 4662 0132 03       		.uleb128 0x3
 4663 0133 0E       		.uleb128 0xe
 4664 0134 3A       		.uleb128 0x3a
 4665 0135 0B       		.uleb128 0xb
 4666 0136 3B       		.uleb128 0x3b
 4667 0137 0B       		.uleb128 0xb
 4668 0138 49       		.uleb128 0x49
 4669 0139 13       		.uleb128 0x13
 4670 013a 02       		.uleb128 0x2
 4671 013b 18       		.uleb128 0x18
 4672 013c 00       		.byte	0
 4673 013d 00       		.byte	0
 4674 013e 17       		.uleb128 0x17
 4675 013f 34       		.uleb128 0x34
 4676 0140 00       		.byte	0
 4677 0141 03       		.uleb128 0x3
 4678 0142 08       		.uleb128 0x8
 4679 0143 3A       		.uleb128 0x3a
 4680 0144 0B       		.uleb128 0xb
 4681 0145 3B       		.uleb128 0x3b
 4682 0146 0B       		.uleb128 0xb
 4683 0147 49       		.uleb128 0x49
 4684 0148 13       		.uleb128 0x13
 4685 0149 02       		.uleb128 0x2
 4686 014a 18       		.uleb128 0x18
 4687 014b 00       		.byte	0
 4688 014c 00       		.byte	0
 4689 014d 18       		.uleb128 0x18
 4690 014e 2E       		.uleb128 0x2e
 4691 014f 01       		.byte	0x1
 4692 0150 3F       		.uleb128 0x3f
 4693 0151 19       		.uleb128 0x19
 4694 0152 03       		.uleb128 0x3
 4695 0153 0E       		.uleb128 0xe
 4696 0154 3A       		.uleb128 0x3a
 4697 0155 0B       		.uleb128 0xb
 4698 0156 3B       		.uleb128 0x3b
 4699 0157 05       		.uleb128 0x5
 4700 0158 27       		.uleb128 0x27
 4701 0159 19       		.uleb128 0x19
 4702 015a 49       		.uleb128 0x49
 4703 015b 13       		.uleb128 0x13
 4704 015c 11       		.uleb128 0x11
 4705 015d 01       		.uleb128 0x1
 4706 015e 12       		.uleb128 0x12
 4707 015f 06       		.uleb128 0x6
 4708 0160 40       		.uleb128 0x40
 4709 0161 18       		.uleb128 0x18
 4710 0162 9642     		.uleb128 0x2116
 4711 0164 19       		.uleb128 0x19
 4712 0165 01       		.uleb128 0x1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 103


 4713 0166 13       		.uleb128 0x13
 4714 0167 00       		.byte	0
 4715 0168 00       		.byte	0
 4716 0169 19       		.uleb128 0x19
 4717 016a 05       		.uleb128 0x5
 4718 016b 00       		.byte	0
 4719 016c 03       		.uleb128 0x3
 4720 016d 0E       		.uleb128 0xe
 4721 016e 3A       		.uleb128 0x3a
 4722 016f 0B       		.uleb128 0xb
 4723 0170 3B       		.uleb128 0x3b
 4724 0171 05       		.uleb128 0x5
 4725 0172 49       		.uleb128 0x49
 4726 0173 13       		.uleb128 0x13
 4727 0174 02       		.uleb128 0x2
 4728 0175 18       		.uleb128 0x18
 4729 0176 00       		.byte	0
 4730 0177 00       		.byte	0
 4731 0178 1A       		.uleb128 0x1a
 4732 0179 34       		.uleb128 0x34
 4733 017a 00       		.byte	0
 4734 017b 03       		.uleb128 0x3
 4735 017c 08       		.uleb128 0x8
 4736 017d 3A       		.uleb128 0x3a
 4737 017e 0B       		.uleb128 0xb
 4738 017f 3B       		.uleb128 0x3b
 4739 0180 05       		.uleb128 0x5
 4740 0181 49       		.uleb128 0x49
 4741 0182 13       		.uleb128 0x13
 4742 0183 02       		.uleb128 0x2
 4743 0184 18       		.uleb128 0x18
 4744 0185 00       		.byte	0
 4745 0186 00       		.byte	0
 4746 0187 1B       		.uleb128 0x1b
 4747 0188 2E       		.uleb128 0x2e
 4748 0189 01       		.byte	0x1
 4749 018a 3F       		.uleb128 0x3f
 4750 018b 19       		.uleb128 0x19
 4751 018c 03       		.uleb128 0x3
 4752 018d 0E       		.uleb128 0xe
 4753 018e 3A       		.uleb128 0x3a
 4754 018f 0B       		.uleb128 0xb
 4755 0190 3B       		.uleb128 0x3b
 4756 0191 05       		.uleb128 0x5
 4757 0192 49       		.uleb128 0x49
 4758 0193 13       		.uleb128 0x13
 4759 0194 11       		.uleb128 0x11
 4760 0195 01       		.uleb128 0x1
 4761 0196 12       		.uleb128 0x12
 4762 0197 06       		.uleb128 0x6
 4763 0198 40       		.uleb128 0x40
 4764 0199 18       		.uleb128 0x18
 4765 019a 9642     		.uleb128 0x2116
 4766 019c 19       		.uleb128 0x19
 4767 019d 01       		.uleb128 0x1
 4768 019e 13       		.uleb128 0x13
 4769 019f 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 104


 4770 01a0 00       		.byte	0
 4771 01a1 1C       		.uleb128 0x1c
 4772 01a2 34       		.uleb128 0x34
 4773 01a3 00       		.byte	0
 4774 01a4 03       		.uleb128 0x3
 4775 01a5 0E       		.uleb128 0xe
 4776 01a6 3A       		.uleb128 0x3a
 4777 01a7 0B       		.uleb128 0xb
 4778 01a8 3B       		.uleb128 0x3b
 4779 01a9 05       		.uleb128 0x5
 4780 01aa 49       		.uleb128 0x49
 4781 01ab 13       		.uleb128 0x13
 4782 01ac 02       		.uleb128 0x2
 4783 01ad 18       		.uleb128 0x18
 4784 01ae 00       		.byte	0
 4785 01af 00       		.byte	0
 4786 01b0 1D       		.uleb128 0x1d
 4787 01b1 2E       		.uleb128 0x2e
 4788 01b2 00       		.byte	0
 4789 01b3 3F       		.uleb128 0x3f
 4790 01b4 19       		.uleb128 0x19
 4791 01b5 03       		.uleb128 0x3
 4792 01b6 0E       		.uleb128 0xe
 4793 01b7 3A       		.uleb128 0x3a
 4794 01b8 0B       		.uleb128 0xb
 4795 01b9 3B       		.uleb128 0x3b
 4796 01ba 05       		.uleb128 0x5
 4797 01bb 11       		.uleb128 0x11
 4798 01bc 01       		.uleb128 0x1
 4799 01bd 12       		.uleb128 0x12
 4800 01be 06       		.uleb128 0x6
 4801 01bf 40       		.uleb128 0x40
 4802 01c0 18       		.uleb128 0x18
 4803 01c1 9642     		.uleb128 0x2116
 4804 01c3 19       		.uleb128 0x19
 4805 01c4 00       		.byte	0
 4806 01c5 00       		.byte	0
 4807 01c6 1E       		.uleb128 0x1e
 4808 01c7 2E       		.uleb128 0x2e
 4809 01c8 00       		.byte	0
 4810 01c9 3F       		.uleb128 0x3f
 4811 01ca 19       		.uleb128 0x19
 4812 01cb 03       		.uleb128 0x3
 4813 01cc 0E       		.uleb128 0xe
 4814 01cd 3A       		.uleb128 0x3a
 4815 01ce 0B       		.uleb128 0xb
 4816 01cf 3B       		.uleb128 0x3b
 4817 01d0 05       		.uleb128 0x5
 4818 01d1 49       		.uleb128 0x49
 4819 01d2 13       		.uleb128 0x13
 4820 01d3 11       		.uleb128 0x11
 4821 01d4 01       		.uleb128 0x1
 4822 01d5 12       		.uleb128 0x12
 4823 01d6 06       		.uleb128 0x6
 4824 01d7 40       		.uleb128 0x40
 4825 01d8 18       		.uleb128 0x18
 4826 01d9 9642     		.uleb128 0x2116
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 105


 4827 01db 19       		.uleb128 0x19
 4828 01dc 00       		.byte	0
 4829 01dd 00       		.byte	0
 4830 01de 1F       		.uleb128 0x1f
 4831 01df 2E       		.uleb128 0x2e
 4832 01e0 01       		.byte	0x1
 4833 01e1 3F       		.uleb128 0x3f
 4834 01e2 19       		.uleb128 0x19
 4835 01e3 03       		.uleb128 0x3
 4836 01e4 0E       		.uleb128 0xe
 4837 01e5 3A       		.uleb128 0x3a
 4838 01e6 0B       		.uleb128 0xb
 4839 01e7 3B       		.uleb128 0x3b
 4840 01e8 05       		.uleb128 0x5
 4841 01e9 11       		.uleb128 0x11
 4842 01ea 01       		.uleb128 0x1
 4843 01eb 12       		.uleb128 0x12
 4844 01ec 06       		.uleb128 0x6
 4845 01ed 40       		.uleb128 0x40
 4846 01ee 18       		.uleb128 0x18
 4847 01ef 9642     		.uleb128 0x2116
 4848 01f1 19       		.uleb128 0x19
 4849 01f2 01       		.uleb128 0x1
 4850 01f3 13       		.uleb128 0x13
 4851 01f4 00       		.byte	0
 4852 01f5 00       		.byte	0
 4853 01f6 20       		.uleb128 0x20
 4854 01f7 2E       		.uleb128 0x2e
 4855 01f8 00       		.byte	0
 4856 01f9 3F       		.uleb128 0x3f
 4857 01fa 19       		.uleb128 0x19
 4858 01fb 03       		.uleb128 0x3
 4859 01fc 0E       		.uleb128 0xe
 4860 01fd 3A       		.uleb128 0x3a
 4861 01fe 0B       		.uleb128 0xb
 4862 01ff 3B       		.uleb128 0x3b
 4863 0200 05       		.uleb128 0x5
 4864 0201 11       		.uleb128 0x11
 4865 0202 01       		.uleb128 0x1
 4866 0203 12       		.uleb128 0x12
 4867 0204 06       		.uleb128 0x6
 4868 0205 40       		.uleb128 0x40
 4869 0206 18       		.uleb128 0x18
 4870 0207 9742     		.uleb128 0x2117
 4871 0209 19       		.uleb128 0x19
 4872 020a 00       		.byte	0
 4873 020b 00       		.byte	0
 4874 020c 21       		.uleb128 0x21
 4875 020d 2E       		.uleb128 0x2e
 4876 020e 00       		.byte	0
 4877 020f 3F       		.uleb128 0x3f
 4878 0210 19       		.uleb128 0x19
 4879 0211 03       		.uleb128 0x3
 4880 0212 0E       		.uleb128 0xe
 4881 0213 3A       		.uleb128 0x3a
 4882 0214 0B       		.uleb128 0xb
 4883 0215 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 106


 4884 0216 05       		.uleb128 0x5
 4885 0217 49       		.uleb128 0x49
 4886 0218 13       		.uleb128 0x13
 4887 0219 11       		.uleb128 0x11
 4888 021a 01       		.uleb128 0x1
 4889 021b 12       		.uleb128 0x12
 4890 021c 06       		.uleb128 0x6
 4891 021d 40       		.uleb128 0x40
 4892 021e 18       		.uleb128 0x18
 4893 021f 9742     		.uleb128 0x2117
 4894 0221 19       		.uleb128 0x19
 4895 0222 00       		.byte	0
 4896 0223 00       		.byte	0
 4897 0224 22       		.uleb128 0x22
 4898 0225 34       		.uleb128 0x34
 4899 0226 00       		.byte	0
 4900 0227 03       		.uleb128 0x3
 4901 0228 0E       		.uleb128 0xe
 4902 0229 3A       		.uleb128 0x3a
 4903 022a 0B       		.uleb128 0xb
 4904 022b 3B       		.uleb128 0x3b
 4905 022c 05       		.uleb128 0x5
 4906 022d 49       		.uleb128 0x49
 4907 022e 13       		.uleb128 0x13
 4908 022f 3F       		.uleb128 0x3f
 4909 0230 19       		.uleb128 0x19
 4910 0231 3C       		.uleb128 0x3c
 4911 0232 19       		.uleb128 0x19
 4912 0233 00       		.byte	0
 4913 0234 00       		.byte	0
 4914 0235 23       		.uleb128 0x23
 4915 0236 34       		.uleb128 0x34
 4916 0237 00       		.byte	0
 4917 0238 03       		.uleb128 0x3
 4918 0239 0E       		.uleb128 0xe
 4919 023a 3A       		.uleb128 0x3a
 4920 023b 0B       		.uleb128 0xb
 4921 023c 3B       		.uleb128 0x3b
 4922 023d 0B       		.uleb128 0xb
 4923 023e 49       		.uleb128 0x49
 4924 023f 13       		.uleb128 0x13
 4925 0240 3F       		.uleb128 0x3f
 4926 0241 19       		.uleb128 0x19
 4927 0242 02       		.uleb128 0x2
 4928 0243 18       		.uleb128 0x18
 4929 0244 00       		.byte	0
 4930 0245 00       		.byte	0
 4931 0246 24       		.uleb128 0x24
 4932 0247 21       		.uleb128 0x21
 4933 0248 00       		.byte	0
 4934 0249 49       		.uleb128 0x49
 4935 024a 13       		.uleb128 0x13
 4936 024b 2F       		.uleb128 0x2f
 4937 024c 05       		.uleb128 0x5
 4938 024d 00       		.byte	0
 4939 024e 00       		.byte	0
 4940 024f 25       		.uleb128 0x25
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 107


 4941 0250 34       		.uleb128 0x34
 4942 0251 00       		.byte	0
 4943 0252 03       		.uleb128 0x3
 4944 0253 08       		.uleb128 0x8
 4945 0254 3A       		.uleb128 0x3a
 4946 0255 0B       		.uleb128 0xb
 4947 0256 3B       		.uleb128 0x3b
 4948 0257 0B       		.uleb128 0xb
 4949 0258 49       		.uleb128 0x49
 4950 0259 13       		.uleb128 0x13
 4951 025a 3F       		.uleb128 0x3f
 4952 025b 19       		.uleb128 0x19
 4953 025c 02       		.uleb128 0x2
 4954 025d 18       		.uleb128 0x18
 4955 025e 00       		.byte	0
 4956 025f 00       		.byte	0
 4957 0260 00       		.byte	0
 4958              		.section	.debug_aranges,"",%progbits
 4959 0000 D4000000 		.4byte	0xd4
 4960 0004 0200     		.2byte	0x2
 4961 0006 00000000 		.4byte	.Ldebug_info0
 4962 000a 04       		.byte	0x4
 4963 000b 00       		.byte	0
 4964 000c 0000     		.2byte	0
 4965 000e 0000     		.2byte	0
 4966 0010 00000000 		.4byte	.LFB64
 4967 0014 44000000 		.4byte	.LFE64-.LFB64
 4968 0018 00000000 		.4byte	.LFB65
 4969 001c 6C000000 		.4byte	.LFE65-.LFB65
 4970 0020 00000000 		.4byte	.LFB66
 4971 0024 32000000 		.4byte	.LFE66-.LFB66
 4972 0028 00000000 		.4byte	.LFB67
 4973 002c 20000000 		.4byte	.LFE67-.LFB67
 4974 0030 00000000 		.4byte	.LFB68
 4975 0034 40000000 		.4byte	.LFE68-.LFB68
 4976 0038 00000000 		.4byte	.LFB69
 4977 003c DC000000 		.4byte	.LFE69-.LFB69
 4978 0040 00000000 		.4byte	.LFB70
 4979 0044 1C000000 		.4byte	.LFE70-.LFB70
 4980 0048 00000000 		.4byte	.LFB71
 4981 004c 28000000 		.4byte	.LFE71-.LFB71
 4982 0050 00000000 		.4byte	.LFB72
 4983 0054 C8000000 		.4byte	.LFE72-.LFB72
 4984 0058 00000000 		.4byte	.LFB73
 4985 005c 00010000 		.4byte	.LFE73-.LFB73
 4986 0060 00000000 		.4byte	.LFB74
 4987 0064 78000000 		.4byte	.LFE74-.LFB74
 4988 0068 00000000 		.4byte	.LFB75
 4989 006c 74010000 		.4byte	.LFE75-.LFB75
 4990 0070 00000000 		.4byte	.LFB76
 4991 0074 B8000000 		.4byte	.LFE76-.LFB76
 4992 0078 00000000 		.4byte	.LFB77
 4993 007c 1C000000 		.4byte	.LFE77-.LFB77
 4994 0080 00000000 		.4byte	.LFB78
 4995 0084 28000000 		.4byte	.LFE78-.LFB78
 4996 0088 00000000 		.4byte	.LFB79
 4997 008c 84000000 		.4byte	.LFE79-.LFB79
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 108


 4998 0090 00000000 		.4byte	.LFB80
 4999 0094 30000000 		.4byte	.LFE80-.LFB80
 5000 0098 00000000 		.4byte	.LFB81
 5001 009c 0C020000 		.4byte	.LFE81-.LFB81
 5002 00a0 00000000 		.4byte	.LFB82
 5003 00a4 68010000 		.4byte	.LFE82-.LFB82
 5004 00a8 00000000 		.4byte	.LFB83
 5005 00ac 44010000 		.4byte	.LFE83-.LFB83
 5006 00b0 00000000 		.4byte	.LFB84
 5007 00b4 14000000 		.4byte	.LFE84-.LFB84
 5008 00b8 00000000 		.4byte	.LFB85
 5009 00bc 1A000000 		.4byte	.LFE85-.LFB85
 5010 00c0 00000000 		.4byte	.LFB86
 5011 00c4 2A000000 		.4byte	.LFE86-.LFB86
 5012 00c8 00000000 		.4byte	.LFB87
 5013 00cc 7C020000 		.4byte	.LFE87-.LFB87
 5014 00d0 00000000 		.4byte	0
 5015 00d4 00000000 		.4byte	0
 5016              		.section	.debug_ranges,"",%progbits
 5017              	.Ldebug_ranges0:
 5018 0000 00000000 		.4byte	.LFB64
 5019 0004 44000000 		.4byte	.LFE64
 5020 0008 00000000 		.4byte	.LFB65
 5021 000c 6C000000 		.4byte	.LFE65
 5022 0010 00000000 		.4byte	.LFB66
 5023 0014 32000000 		.4byte	.LFE66
 5024 0018 00000000 		.4byte	.LFB67
 5025 001c 20000000 		.4byte	.LFE67
 5026 0020 00000000 		.4byte	.LFB68
 5027 0024 40000000 		.4byte	.LFE68
 5028 0028 00000000 		.4byte	.LFB69
 5029 002c DC000000 		.4byte	.LFE69
 5030 0030 00000000 		.4byte	.LFB70
 5031 0034 1C000000 		.4byte	.LFE70
 5032 0038 00000000 		.4byte	.LFB71
 5033 003c 28000000 		.4byte	.LFE71
 5034 0040 00000000 		.4byte	.LFB72
 5035 0044 C8000000 		.4byte	.LFE72
 5036 0048 00000000 		.4byte	.LFB73
 5037 004c 00010000 		.4byte	.LFE73
 5038 0050 00000000 		.4byte	.LFB74
 5039 0054 78000000 		.4byte	.LFE74
 5040 0058 00000000 		.4byte	.LFB75
 5041 005c 74010000 		.4byte	.LFE75
 5042 0060 00000000 		.4byte	.LFB76
 5043 0064 B8000000 		.4byte	.LFE76
 5044 0068 00000000 		.4byte	.LFB77
 5045 006c 1C000000 		.4byte	.LFE77
 5046 0070 00000000 		.4byte	.LFB78
 5047 0074 28000000 		.4byte	.LFE78
 5048 0078 00000000 		.4byte	.LFB79
 5049 007c 84000000 		.4byte	.LFE79
 5050 0080 00000000 		.4byte	.LFB80
 5051 0084 30000000 		.4byte	.LFE80
 5052 0088 00000000 		.4byte	.LFB81
 5053 008c 0C020000 		.4byte	.LFE81
 5054 0090 00000000 		.4byte	.LFB82
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 109


 5055 0094 68010000 		.4byte	.LFE82
 5056 0098 00000000 		.4byte	.LFB83
 5057 009c 44010000 		.4byte	.LFE83
 5058 00a0 00000000 		.4byte	.LFB84
 5059 00a4 14000000 		.4byte	.LFE84
 5060 00a8 00000000 		.4byte	.LFB85
 5061 00ac 1A000000 		.4byte	.LFE85
 5062 00b0 00000000 		.4byte	.LFB86
 5063 00b4 2A000000 		.4byte	.LFE86
 5064 00b8 00000000 		.4byte	.LFB87
 5065 00bc 7C020000 		.4byte	.LFE87
 5066 00c0 00000000 		.4byte	0
 5067 00c4 00000000 		.4byte	0
 5068              		.section	.debug_line,"",%progbits
 5069              	.Ldebug_line0:
 5070 0000 68050000 		.section	.debug_str,"MS",%progbits,1
 5070      0200EF01 
 5070      00000201 
 5070      FB0E0D00 
 5070      01010101 
 5071              	.LASF131:
 5072 0000 676D745F 		.ascii	"gmt_offset\000"
 5072      6F666673 
 5072      657400
 5073              	.LASF16:
 5074 000b 75696E74 		.ascii	"uint16\000"
 5074      313600
 5075              	.LASF38:
 5076 0012 76616C75 		.ascii	"value\000"
 5076      6500
 5077              	.LASF27:
 5078 0018 746D5F68 		.ascii	"tm_hour\000"
 5078      6F757200 
 5079              	.LASF32:
 5080 0020 746D5F79 		.ascii	"tm_yday\000"
 5080      64617900 
 5081              	.LASF139:
 5082 0028 62756666 		.ascii	"buffer_overflow\000"
 5082      65725F6F 
 5082      76657266 
 5082      6C6F7700 
 5083              	.LASF4:
 5084 0038 5F5F7569 		.ascii	"__uint8_t\000"
 5084      6E74385F 
 5084      7400
 5085              	.LASF69:
 5086 0042 636F756E 		.ascii	"countDownResetCondition\000"
 5086      74446F77 
 5086      6E526573 
 5086      6574436F 
 5086      6E646974 
 5087              	.LASF54:
 5088 005a 6C6F6E67 		.ascii	"longitude\000"
 5088      69747564 
 5088      6500
 5089              	.LASF159:
 5090 0064 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 110


 5090      43313120 
 5090      352E342E 
 5090      31203230 
 5090      31363036 
 5091 0097 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 5091      20726576 
 5091      6973696F 
 5091      6E203233 
 5091      37373135 
 5092 00ca 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5092      66756E63 
 5092      74696F6E 
 5092      2D736563 
 5092      74696F6E 
 5093              	.LASF134:
 5094 00f2 6D6F6465 		.ascii	"modem_wakeup\000"
 5094      6D5F7761 
 5094      6B657570 
 5094      00
 5095              	.LASF10:
 5096 00ff 6C6F6E67 		.ascii	"long long unsigned int\000"
 5096      206C6F6E 
 5096      6720756E 
 5096      7369676E 
 5096      65642069 
 5097              	.LASF119:
 5098 0116 73616D70 		.ascii	"sample_freq\000"
 5098      6C655F66 
 5098      72657100 
 5099              	.LASF143:
 5100 0122 6D6F6465 		.ascii	"modem_state\000"
 5100      6D5F7374 
 5100      61746500 
 5101              	.LASF96:
 5102 012e 74657374 		.ascii	"test\000"
 5102      00
 5103              	.LASF152:
 5104 0133 616C6172 		.ascii	"alarmMeasure\000"
 5104      6D4D6561 
 5104      73757265 
 5104      00
 5105              	.LASF138:
 5106 0140 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5106      52784275 
 5106      66666572 
 5106      00
 5107              	.LASF145:
 5108 014d 6D6F6465 		.ascii	"modem_stats\000"
 5108      6D5F7374 
 5108      61747300 
 5109              	.LASF9:
 5110 0159 6C6F6E67 		.ascii	"long long int\000"
 5110      206C6F6E 
 5110      6720696E 
 5110      7400
 5111              	.LASF0:
 5112 0167 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 111


 5112      65642063 
 5112      68617200 
 5113              	.LASF47:
 5114 0173 65636E6F 		.ascii	"ecno\000"
 5114      00
 5115              	.LASF153:
 5116 0178 74696D65 		.ascii	"timeToMeasure\000"
 5116      546F4D65 
 5116      61737572 
 5116      6500
 5117              	.LASF50:
 5118 0186 74696D65 		.ascii	"time_to_network_connect\000"
 5118      5F746F5F 
 5118      6E657477 
 5118      6F726B5F 
 5118      636F6E6E 
 5119              	.LASF155:
 5120 019e 74696D65 		.ascii	"timeToSync\000"
 5120      546F5379 
 5120      6E6300
 5121              	.LASF148:
 5122 01a9 68747470 		.ascii	"http_body\000"
 5122      5F626F64 
 5122      7900
 5123              	.LASF107:
 5124 01b3 7365745F 		.ascii	"set_up_internet_connection\000"
 5124      75705F69 
 5124      6E746572 
 5124      6E65745F 
 5124      636F6E6E 
 5125              	.LASF130:
 5126 01ce 7365636F 		.ascii	"second\000"
 5126      6E6400
 5127              	.LASF126:
 5128 01d5 79656172 		.ascii	"year\000"
 5128      00
 5129              	.LASF45:
 5130 01da 72786C65 		.ascii	"rxlev\000"
 5130      7600
 5131              	.LASF6:
 5132 01e0 6C6F6E67 		.ascii	"long int\000"
 5132      20696E74 
 5132      00
 5133              	.LASF67:
 5134 01e9 63757272 		.ascii	"currentCountDownValue\000"
 5134      656E7443 
 5134      6F756E74 
 5134      446F776E 
 5134      56616C75 
 5135              	.LASF132:
 5136 01ff 6D6F6465 		.ascii	"modem_get_state\000"
 5136      6D5F6765 
 5136      745F7374 
 5136      61746500 
 5137              	.LASF55:
 5138 020f 616C7469 		.ascii	"altitude\000"
 5138      74756465 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 112


 5138      00
 5139              	.LASF15:
 5140 0218 75696E74 		.ascii	"uint8\000"
 5140      3800
 5141              	.LASF21:
 5142 021e 646F7562 		.ascii	"double\000"
 5142      6C6500
 5143              	.LASF19:
 5144 0225 696E7433 		.ascii	"int32\000"
 5144      3200
 5145              	.LASF59:
 5146 022b 6E6F6465 		.ascii	"node_type\000"
 5146      5F747970 
 5146      6500
 5147              	.LASF122:
 5148 0235 6D6F6465 		.ascii	"modem_configure_settings\000"
 5148      6D5F636F 
 5148      6E666967 
 5148      7572655F 
 5148      73657474 
 5149              	.LASF115:
 5150 024e 735F7369 		.ascii	"s_sim_type\000"
 5150      6D5F7479 
 5150      706500
 5151              	.LASF97:
 5152 0259 6E657477 		.ascii	"network_time\000"
 5152      6F726B5F 
 5152      74696D65 
 5152      00
 5153              	.LASF3:
 5154 0266 73686F72 		.ascii	"short unsigned int\000"
 5154      7420756E 
 5154      7369676E 
 5154      65642069 
 5154      6E7400
 5155              	.LASF17:
 5156 0279 75696E74 		.ascii	"uint32\000"
 5156      333200
 5157              	.LASF93:
 5158 0280 696E7465 		.ascii	"interval\000"
 5158      7276616C 
 5158      00
 5159              	.LASF66:
 5160 0289 636F756E 		.ascii	"countDownValue\000"
 5160      74446F77 
 5160      6E56616C 
 5160      756500
 5161              	.LASF124:
 5162 0298 6D6F6465 		.ascii	"modem_get_network_time\000"
 5162      6D5F6765 
 5162      745F6E65 
 5162      74776F72 
 5162      6B5F7469 
 5163              	.LASF29:
 5164 02af 746D5F6D 		.ascii	"tm_mon\000"
 5164      6F6E00
 5165              	.LASF63:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 113


 5166 02b6 64656275 		.ascii	"debug_level\000"
 5166      675F6C65 
 5166      76656C00 
 5167              	.LASF133:
 5168 02c2 6D6F6465 		.ascii	"modem_sleep\000"
 5168      6D5F736C 
 5168      65657000 
 5169              	.LASF118:
 5170 02ce 735F6465 		.ascii	"s_debug_freq\000"
 5170      6275675F 
 5170      66726571 
 5170      00
 5171              	.LASF111:
 5172 02db 75706461 		.ascii	"updatable_parameters_initialize\000"
 5172      7461626C 
 5172      655F7061 
 5172      72616D65 
 5172      74657273 
 5173              	.LASF30:
 5174 02fb 746D5F79 		.ascii	"tm_year\000"
 5174      65617200 
 5175              	.LASF154:
 5176 0303 616C6172 		.ascii	"alarmSync\000"
 5176      6D53796E 
 5176      6300
 5177              	.LASF79:
 5178 030d 70696E73 		.ascii	"pins_configure_active\000"
 5178      5F636F6E 
 5178      66696775 
 5178      72655F61 
 5178      63746976 
 5179              	.LASF40:
 5180 0323 6B65795F 		.ascii	"key_value_t\000"
 5180      76616C75 
 5180      655F7400 
 5181              	.LASF84:
 5182 032f 7077725F 		.ascii	"pwr_check\000"
 5182      63686563 
 5182      6B00
 5183              	.LASF8:
 5184 0339 6C6F6E67 		.ascii	"long unsigned int\000"
 5184      20756E73 
 5184      69676E65 
 5184      6420696E 
 5184      7400
 5185              	.LASF99:
 5186 034b 65787472 		.ascii	"extract_string\000"
 5186      6163745F 
 5186      73747269 
 5186      6E6700
 5187              	.LASF89:
 5188 035a 74696D65 		.ascii	"timeout\000"
 5188      6F757400 
 5189              	.LASF112:
 5190 0362 6765745F 		.ascii	"get_cell_network_stats\000"
 5190      63656C6C 
 5190      5F6E6574 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 114


 5190      776F726B 
 5190      5F737461 
 5191              	.LASF56:
 5192 0379 74696D65 		.ascii	"time_to_lock\000"
 5192      5F746F5F 
 5192      6C6F636B 
 5192      00
 5193              	.LASF142:
 5194 0386 64617461 		.ascii	"data\000"
 5194      00
 5195              	.LASF75:
 5196 038b 65705F70 		.ascii	"ep_port\000"
 5196      6F727400 
 5197              	.LASF33:
 5198 0393 746D5F69 		.ascii	"tm_isdst\000"
 5198      73647374 
 5198      00
 5199              	.LASF71:
 5200 039c 6D6F6465 		.ascii	"modem_info\000"
 5200      6D5F696E 
 5200      666F00
 5201              	.LASF74:
 5202 03a7 65705F68 		.ascii	"ep_host\000"
 5202      6F737400 
 5203              	.LASF72:
 5204 03af 63686970 		.ascii	"chip_uniqueId\000"
 5204      5F756E69 
 5204      71756549 
 5204      6400
 5205              	.LASF94:
 5206 03bd 6D6F6465 		.ascii	"modem_power_up\000"
 5206      6D5F706F 
 5206      7765725F 
 5206      757000
 5207              	.LASF160:
 5208 03cc 6D6F6465 		.ascii	"modem.c\000"
 5208      6D2E6300 
 5209              	.LASF101:
 5210 03d4 62656769 		.ascii	"beginMarker\000"
 5210      6E4D6172 
 5210      6B657200 
 5211              	.LASF103:
 5212 03e0 74617267 		.ascii	"target\000"
 5212      657400
 5213              	.LASF51:
 5214 03e7 74696D65 		.ascii	"time_to_acquire_ip\000"
 5214      5F746F5F 
 5214      61637175 
 5214      6972655F 
 5214      697000
 5215              	.LASF102:
 5216 03fa 656E644D 		.ascii	"endMarker\000"
 5216      61726B65 
 5216      7200
 5217              	.LASF2:
 5218 0404 73686F72 		.ascii	"short int\000"
 5218      7420696E 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 115


 5218      7400
 5219              	.LASF125:
 5220 040e 65706F63 		.ascii	"epoch_time\000"
 5220      685F7469 
 5220      6D6500
 5221              	.LASF5:
 5222 0419 5F5F696E 		.ascii	"__int32_t\000"
 5222      7433325F 
 5222      7400
 5223              	.LASF100:
 5224 0423 66726F6D 		.ascii	"from\000"
 5224      00
 5225              	.LASF106:
 5226 0428 63726567 		.ascii	"creg\000"
 5226      00
 5227              	.LASF121:
 5228 042d 64656275 		.ascii	"debug_freq\000"
 5228      675F6672 
 5228      657100
 5229              	.LASF90:
 5230 0438 61745F61 		.ascii	"at_attempt\000"
 5230      7474656D 
 5230      707400
 5231              	.LASF98:
 5232 0443 61745F77 		.ascii	"at_write_command\000"
 5232      72697465 
 5232      5F636F6D 
 5232      6D616E64 
 5232      00
 5233              	.LASF73:
 5234 0454 7379735F 		.ascii	"sys_info_t\000"
 5234      696E666F 
 5234      5F7400
 5235              	.LASF65:
 5236 045f 75706461 		.ascii	"updatable_parameters_t\000"
 5236      7461626C 
 5236      655F7061 
 5236      72616D65 
 5236      74657273 
 5237              	.LASF120:
 5238 0476 7265706F 		.ascii	"report_freq\000"
 5238      72745F66 
 5238      72657100 
 5239              	.LASF140:
 5240 0482 64617461 		.ascii	"dataPointsInStack\000"
 5240      506F696E 
 5240      7473496E 
 5240      53746163 
 5240      6B00
 5241              	.LASF26:
 5242 0494 746D5F6D 		.ascii	"tm_min\000"
 5242      696E00
 5243              	.LASF24:
 5244 049b 73697A65 		.ascii	"sizetype\000"
 5244      74797065 
 5244      00
 5245              	.LASF127:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 116


 5246 04a4 6D6F6E74 		.ascii	"month\000"
 5246      6800
 5247              	.LASF105:
 5248 04aa 69735F63 		.ascii	"is_connected_to_cell_network\000"
 5248      6F6E6E65 
 5248      63746564 
 5248      5F746F5F 
 5248      63656C6C 
 5249              	.LASF157:
 5250 04c7 75617274 		.ascii	"uart_received_string\000"
 5250      5F726563 
 5250      65697665 
 5250      645F7374 
 5250      72696E67 
 5251              	.LASF53:
 5252 04dc 6C617469 		.ascii	"latitude\000"
 5252      74756465 
 5252      00
 5253              	.LASF34:
 5254 04e5 74657374 		.ascii	"test_name\000"
 5254      5F6E616D 
 5254      6500
 5255              	.LASF156:
 5256 04ef 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 5256      546F5379 
 5256      636E5265 
 5256      6D6F7465 
 5256      50617261 
 5257              	.LASF95:
 5258 0506 6D6F6465 		.ascii	"modem_test\000"
 5258      6D5F7465 
 5258      737400
 5259              	.LASF110:
 5260 0511 6D617463 		.ascii	"match\000"
 5260      6800
 5261              	.LASF146:
 5262 0517 75706461 		.ascii	"updatable_parameters\000"
 5262      7461626C 
 5262      655F7061 
 5262      72616D65 
 5262      74657273 
 5263              	.LASF128:
 5264 052c 686F7572 		.ascii	"hour\000"
 5264      00
 5265              	.LASF87:
 5266 0531 636F6D6D 		.ascii	"commands\000"
 5266      616E6473 
 5266      00
 5267              	.LASF91:
 5268 053a 636F6D70 		.ascii	"compare_location\000"
 5268      6172655F 
 5268      6C6F6361 
 5268      74696F6E 
 5268      00
 5269              	.LASF20:
 5270 054b 666C6F61 		.ascii	"float\000"
 5270      7400
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 117


 5271              	.LASF77:
 5272 0551 6D6F6465 		.ascii	"modem_initialize\000"
 5272      6D5F696E 
 5272      69746961 
 5272      6C697A65 
 5272      00
 5273              	.LASF117:
 5274 0562 735F7265 		.ascii	"s_report_freq\000"
 5274      706F7274 
 5274      5F667265 
 5274      7100
 5275              	.LASF60:
 5276 0570 73696D5F 		.ascii	"sim_type\000"
 5276      74797065 
 5276      00
 5277              	.LASF108:
 5278 0579 6973725F 		.ascii	"isr_telit_rx\000"
 5278      74656C69 
 5278      745F7278 
 5278      00
 5279              	.LASF70:
 5280 0586 616C6172 		.ascii	"alarm\000"
 5280      6D00
 5281              	.LASF64:
 5282 058c 5F426F6F 		.ascii	"_Bool\000"
 5282      6C00
 5283              	.LASF13:
 5284 0592 696E7433 		.ascii	"int32_t\000"
 5284      325F7400 
 5285              	.LASF1:
 5286 059a 756E7369 		.ascii	"unsigned char\000"
 5286      676E6564 
 5286      20636861 
 5286      7200
 5287              	.LASF151:
 5288 05a8 73797374 		.ascii	"system_settings\000"
 5288      656D5F73 
 5288      65747469 
 5288      6E677300 
 5289              	.LASF92:
 5290 05b8 64656C61 		.ascii	"delay\000"
 5290      7900
 5291              	.LASF48:
 5292 05be 72737271 		.ascii	"rsrq\000"
 5292      00
 5293              	.LASF62:
 5294 05c3 73796E63 		.ascii	"sync_time\000"
 5294      5F74696D 
 5294      6500
 5295              	.LASF114:
 5296 05cd 735F6E6F 		.ascii	"s_node_type\000"
 5296      64655F74 
 5296      79706500 
 5297              	.LASF46:
 5298 05d9 72736370 		.ascii	"rscp\000"
 5298      00
 5299              	.LASF135:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 118


 5300 05de 6D6F6465 		.ascii	"modem_get_gps_coordinates\000"
 5300      6D5F6765 
 5300      745F6770 
 5300      735F636F 
 5300      6F726469 
 5301              	.LASF37:
 5302 05f8 74657374 		.ascii	"test_t\000"
 5302      5F7400
 5303              	.LASF150:
 5304 05ff 73797374 		.ascii	"system_info\000"
 5304      656D5F69 
 5304      6E666F00 
 5305              	.LASF43:
 5306 060b 696D6569 		.ascii	"imei\000"
 5306      00
 5307              	.LASF36:
 5308 0610 72656173 		.ascii	"reason\000"
 5308      6F6E00
 5309              	.LASF49:
 5310 0617 72737270 		.ascii	"rsrp\000"
 5310      00
 5311              	.LASF52:
 5312 061c 6D6F6465 		.ascii	"modem_stats_t\000"
 5312      6D5F7374 
 5312      6174735F 
 5312      7400
 5313              	.LASF86:
 5314 062a 75617274 		.ascii	"uart_string_reset\000"
 5314      5F737472 
 5314      696E675F 
 5314      72657365 
 5314      7400
 5315              	.LASF31:
 5316 063c 746D5F77 		.ascii	"tm_wday\000"
 5316      64617900 
 5317              	.LASF85:
 5318 0644 6D6F6465 		.ascii	"modem_soft_power_cycle\000"
 5318      6D5F736F 
 5318      66745F70 
 5318      6F776572 
 5318      5F637963 
 5319              	.LASF161:
 5320 065b 433A5C55 		.ascii	"C:\\Users\\jniej\\OneDrive\\Documents\\GitHub\\noto"
 5320      73657273 
 5320      5C6A6E69 
 5320      656A5C4F 
 5320      6E654472 
 5321 0688 72694F53 		.ascii	"riOS\\notoriOS.cydsn\000"
 5321      5C6E6F74 
 5321      6F72694F 
 5321      532E6379 
 5321      64736E00 
 5322              	.LASF23:
 5323 069c 6C6F6E67 		.ascii	"long double\000"
 5323      20646F75 
 5323      626C6500 
 5324              	.LASF22:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 119


 5325 06a8 63686172 		.ascii	"char\000"
 5325      00
 5326              	.LASF104:
 5327 06ad 6D6F6465 		.ascii	"modem_process_tasks\000"
 5327      6D5F7072 
 5327      6F636573 
 5327      735F7461 
 5327      736B7300 
 5328              	.LASF11:
 5329 06c1 756E7369 		.ascii	"unsigned int\000"
 5329      676E6564 
 5329      20696E74 
 5329      00
 5330              	.LASF123:
 5331 06ce 4346554E 		.ascii	"CFUN\000"
 5331      00
 5332              	.LASF42:
 5333 06d3 6D6F6465 		.ascii	"model_id\000"
 5333      6C5F6964 
 5333      00
 5334              	.LASF149:
 5335 06dc 68747470 		.ascii	"http_route\000"
 5335      5F726F75 
 5335      746500
 5336              	.LASF44:
 5337 06e7 6D6F6465 		.ascii	"modem_info_t\000"
 5337      6D5F696E 
 5337      666F5F74 
 5337      00
 5338              	.LASF58:
 5339 06f4 6770735F 		.ascii	"gps_t\000"
 5339      7400
 5340              	.LASF7:
 5341 06fa 5F5F7569 		.ascii	"__uint32_t\000"
 5341      6E743332 
 5341      5F7400
 5342              	.LASF158:
 5343 0705 75617274 		.ascii	"uart_string_index\000"
 5343      5F737472 
 5343      696E675F 
 5343      696E6465 
 5343      7800
 5344              	.LASF61:
 5345 0717 6D656173 		.ascii	"measure_time\000"
 5345      7572655F 
 5345      74696D65 
 5345      00
 5346              	.LASF109:
 5347 0724 69735F63 		.ascii	"is_connected_to_internet\000"
 5347      6F6E6E65 
 5347      63746564 
 5347      5F746F5F 
 5347      696E7465 
 5348              	.LASF144:
 5349 073d 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 5349      6D5F7374 
 5349      6172745F 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 120


 5349      74696D65 
 5349      5F737461 
 5350              	.LASF137:
 5351 0754 6770735F 		.ascii	"gps_status\000"
 5351      73746174 
 5351      757300
 5352              	.LASF78:
 5353 075f 70696E73 		.ascii	"pins_configure_inactive\000"
 5353      5F636F6E 
 5353      66696775 
 5353      72655F69 
 5353      6E616374 
 5354              	.LASF41:
 5355 0777 73696D5F 		.ascii	"sim_id\000"
 5355      696400
 5356              	.LASF28:
 5357 077e 746D5F6D 		.ascii	"tm_mday\000"
 5357      64617900 
 5358              	.LASF57:
 5359 0786 76616C69 		.ascii	"valid\000"
 5359      6400
 5360              	.LASF129:
 5361 078c 6D696E75 		.ascii	"minute\000"
 5361      746500
 5362              	.LASF14:
 5363 0793 75696E74 		.ascii	"uint32_t\000"
 5363      33325F74 
 5363      00
 5364              	.LASF25:
 5365 079c 746D5F73 		.ascii	"tm_sec\000"
 5365      656300
 5366              	.LASF113:
 5367 07a3 6765745F 		.ascii	"get_updated_parameters_from_malcom\000"
 5367      75706461 
 5367      7465645F 
 5367      70617261 
 5367      6D657465 
 5368              	.LASF116:
 5369 07c6 735F7361 		.ascii	"s_sample_freq\000"
 5369      6D706C65 
 5369      5F667265 
 5369      7100
 5370              	.LASF35:
 5371 07d4 73746174 		.ascii	"status\000"
 5371      757300
 5372              	.LASF141:
 5373 07db 64617461 		.ascii	"dataPointsInStackDesired\000"
 5373      506F696E 
 5373      7473496E 
 5373      53746163 
 5373      6B446573 
 5374              	.LASF76:
 5375 07f4 7379735F 		.ascii	"sys_settings_t\000"
 5375      73657474 
 5375      696E6773 
 5375      5F7400
 5376              	.LASF12:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccCswuqq.s 			page 121


 5377 0803 75696E74 		.ascii	"uint8_t\000"
 5377      385F7400 
 5378              	.LASF18:
 5379 080b 696E7431 		.ascii	"int16\000"
 5379      3600
 5380              	.LASF81:
 5381 0811 61745F72 		.ascii	"at_ready\000"
 5381      65616479 
 5381      00
 5382              	.LASF82:
 5383 081a 61747465 		.ascii	"attempts\000"
 5383      6D707473 
 5383      00
 5384              	.LASF68:
 5385 0823 636F756E 		.ascii	"countDownType\000"
 5385      74446F77 
 5385      6E547970 
 5385      6500
 5386              	.LASF83:
 5387 0831 626F6F74 		.ascii	"boot_time\000"
 5387      5F74696D 
 5387      6500
 5388              	.LASF88:
 5389 083b 65787065 		.ascii	"expected_response\000"
 5389      63746564 
 5389      5F726573 
 5389      706F6E73 
 5389      6500
 5390              	.LASF136:
 5391 084d 6C6F636B 		.ascii	"lock_time\000"
 5391      5F74696D 
 5391      6500
 5392              	.LASF147:
 5393 0857 68747470 		.ascii	"http_request\000"
 5393      5F726571 
 5393      75657374 
 5393      00
 5394              	.LASF80:
 5395 0864 6D6F6465 		.ascii	"modem_power_down\000"
 5395      6D5F706F 
 5395      7765725F 
 5395      646F776E 
 5395      00
 5396              	.LASF39:
 5397 0875 74696D65 		.ascii	"timeStamp\000"
 5397      5374616D 
 5397      7000
 5398              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
