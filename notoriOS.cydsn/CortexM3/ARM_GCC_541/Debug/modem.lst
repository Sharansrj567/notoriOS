ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"modem.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.syntax unified
  24              		.global _printf_float
  25              		.thumb
  26              		.syntax unified
  27              		.comm	modem_state,1,1
  28              		.comm	modem_start_time_stamp,4,4
  29              		.comm	modem_info,60,4
  30              		.comm	modem_stats,32,4
  31              		.comm	updatable_parameters,5,4
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.comm	uart_received_string,1024,4
  44              		.global	uart_string_index
  45              		.bss
  46              		.align	1
  47              		.type	uart_string_index, %object
  48              		.size	uart_string_index, 2
  49              	uart_string_index:
  50 0000 0000     		.space	2
  51              		.section	.text.isr_telit_rx,"ax",%progbits
  52              		.align	2
  53              		.global	isr_telit_rx
  54              		.thumb
  55              		.thumb_func
  56              		.type	isr_telit_rx, %function
  57              	isr_telit_rx:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 2


  58              	.LFB64:
  59              		.file 1 "modem.c"
   1:modem.c       **** //Methods for Telit modem 
   2:modem.c       **** #include "modem.h"
   3:modem.c       **** #include "notoriOS.h"
   4:modem.c       **** 
   5:modem.c       **** char uart_received_string[1024];
   6:modem.c       **** int16 uart_string_index=0;
   7:modem.c       **** 
   8:modem.c       **** #define DEFAULT_AT_TIMEOUT 2000u // Send command and wait 2000 ms
   9:modem.c       **** #define NO_AT_TIMEOUT 0u // Send command, no timeout/ don't wait 
  10:modem.c       **** 
  11:modem.c       **** #define TIMEOUT_NETWORK_CONNECT 180 //seconds
  12:modem.c       **** #define TIMEOUT_IP_ACQUIRE 230 //seconds (cummulatinve) add to TIMEOUT_NETWORK_CONNECT
  13:modem.c       **** 
  14:modem.c       **** CY_ISR_PROTO(isr_telit_rx); // Declares a custom ISR function "isr_telit_rx" using the CY_ISR_PROTO
  15:modem.c       **** 
  16:modem.c       **** // Define the custom ISR function "isr_telit_rx" using the CY_ISR macro
  17:modem.c       **** // Get each character from Telit and saves it to uart_received_string
  18:modem.c       **** CY_ISR(isr_telit_rx){      
  60              		.loc 1 18 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64 0000 98B5     		push	{r3, r4, r7, lr}
  65              		.cfi_def_cfa_offset 16
  66              		.cfi_offset 3, -16
  67              		.cfi_offset 4, -12
  68              		.cfi_offset 7, -8
  69              		.cfi_offset 14, -4
  70 0002 00AF     		add	r7, sp, #0
  71              		.cfi_def_cfa_register 7
  19:modem.c       ****     // UART_Telit_GetRxBufferSize() returns the number of received bytes available in the RX buffer
  20:modem.c       ****     while(UART_Telit_GetRxBufferSize()==1){
  72              		.loc 1 20 0
  73 0004 12E0     		b	.L2
  74              	.L3:
  21:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  75              		.loc 1 21 0
  76 0006 0D4B     		ldr	r3, .L4
  77 0008 B3F90030 		ldrsh	r3, [r3]
  78 000c 1C46     		mov	r4, r3
  79 000e FFF7FEFF 		bl	UART_Telit_GetChar
  80 0012 0346     		mov	r3, r0
  81 0014 1A46     		mov	r2, r3
  82 0016 0A4B     		ldr	r3, .L4+4
  83 0018 1A55     		strb	r2, [r3, r4]
  22:modem.c       ****         uart_string_index++;
  84              		.loc 1 22 0
  85 001a 084B     		ldr	r3, .L4
  86 001c B3F90030 		ldrsh	r3, [r3]
  87 0020 9BB2     		uxth	r3, r3
  88 0022 0133     		adds	r3, r3, #1
  89 0024 9BB2     		uxth	r3, r3
  90 0026 1AB2     		sxth	r2, r3
  91 0028 044B     		ldr	r3, .L4
  92 002a 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 3


  93              	.L2:
  20:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  94              		.loc 1 20 0
  95 002c FFF7FEFF 		bl	UART_Telit_GetRxBufferSize
  96 0030 0346     		mov	r3, r0
  97 0032 012B     		cmp	r3, #1
  98 0034 E7D0     		beq	.L3
  23:modem.c       ****     }
  24:modem.c       **** 
  25:modem.c       **** }
  99              		.loc 1 25 0
 100 0036 00BF     		nop
 101 0038 98BD     		pop	{r3, r4, r7, pc}
 102              	.L5:
 103 003a 00BF     		.align	2
 104              	.L4:
 105 003c 00000000 		.word	uart_string_index
 106 0040 00000000 		.word	uart_received_string
 107              		.cfi_endproc
 108              	.LFE64:
 109              		.size	isr_telit_rx, .-isr_telit_rx
 110              		.section	.text.modem_initialize,"ax",%progbits
 111              		.align	2
 112              		.global	modem_initialize
 113              		.thumb
 114              		.thumb_func
 115              		.type	modem_initialize, %function
 116              	modem_initialize:
 117              	.LFB65:
  26:modem.c       **** 
  27:modem.c       **** // Initialize the modem
  28:modem.c       **** void modem_initialize(){
 118              		.loc 1 28 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 1, uses_anonymous_args = 0
 122 0000 80B5     		push	{r7, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 7, -8
 125              		.cfi_offset 14, -4
 126 0002 00AF     		add	r7, sp, #0
 127              		.cfi_def_cfa_register 7
  29:modem.c       ****     // Don't do much except make sure that all the modem pins are pulled low
  30:modem.c       ****     // Also make sure that the TX PIN is fully disabled
  31:modem.c       ****     pins_configure_inactive();
 128              		.loc 1 31 0
 129 0004 FFF7FEFF 		bl	pins_configure_inactive
  32:modem.c       ****     modem_state = 0;
 130              		.loc 1 32 0
 131 0008 154B     		ldr	r3, .L7
 132 000a 0022     		movs	r2, #0
 133 000c 1A70     		strb	r2, [r3]
  33:modem.c       ****     //initialize states
  34:modem.c       ****     modem_info.imei[0] = '\0';
 134              		.loc 1 34 0
 135 000e 154B     		ldr	r3, .L7+4
 136 0010 0022     		movs	r2, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 4


 137 0012 83F82820 		strb	r2, [r3, #40]
  35:modem.c       ****     modem_info.model_id[0] = '\0';
 138              		.loc 1 35 0
 139 0016 134B     		ldr	r3, .L7+4
 140 0018 0022     		movs	r2, #0
 141 001a 1A75     		strb	r2, [r3, #20]
  36:modem.c       ****     modem_info.sim_id[0] = '\0';
 142              		.loc 1 36 0
 143 001c 114B     		ldr	r3, .L7+4
 144 001e 0022     		movs	r2, #0
 145 0020 1A70     		strb	r2, [r3]
  37:modem.c       ****     modem_stats.rxlev = 0;
 146              		.loc 1 37 0
 147 0022 114B     		ldr	r3, .L7+8
 148 0024 0022     		movs	r2, #0
 149 0026 1A60     		str	r2, [r3]
  38:modem.c       ****     modem_stats.ber = 0;
 150              		.loc 1 38 0
 151 0028 0F4B     		ldr	r3, .L7+8
 152 002a 0022     		movs	r2, #0
 153 002c 5A60     		str	r2, [r3, #4]
  39:modem.c       ****     modem_stats.rscp = 0;
 154              		.loc 1 39 0
 155 002e 0E4B     		ldr	r3, .L7+8
 156 0030 0022     		movs	r2, #0
 157 0032 9A60     		str	r2, [r3, #8]
  40:modem.c       ****     modem_stats.ecno = 0;
 158              		.loc 1 40 0
 159 0034 0C4B     		ldr	r3, .L7+8
 160 0036 0022     		movs	r2, #0
 161 0038 DA60     		str	r2, [r3, #12]
  41:modem.c       ****     modem_stats.rsrq = 0;
 162              		.loc 1 41 0
 163 003a 0B4B     		ldr	r3, .L7+8
 164 003c 0022     		movs	r2, #0
 165 003e 1A61     		str	r2, [r3, #16]
  42:modem.c       ****     modem_stats.rsrp = 0;
 166              		.loc 1 42 0
 167 0040 094B     		ldr	r3, .L7+8
 168 0042 0022     		movs	r2, #0
 169 0044 5A61     		str	r2, [r3, #20]
  43:modem.c       ****     modem_stats.time_to_acquire_ip = 0;
 170              		.loc 1 43 0
 171 0046 084B     		ldr	r3, .L7+8
 172 0048 0022     		movs	r2, #0
 173 004a DA61     		str	r2, [r3, #28]
  44:modem.c       ****     modem_stats.time_to_network_connect = 0;
 174              		.loc 1 44 0
 175 004c 064B     		ldr	r3, .L7+8
 176 004e 0022     		movs	r2, #0
 177 0050 9A61     		str	r2, [r3, #24]
  45:modem.c       ****     // Disable the RX Pin interrupt, and only enable it during long timeouts
  46:modem.c       ****     // Rx_Telit_SetInterruptMode(): Configures the interrupt mode for each of the Pins component's 
  47:modem.c       ****     // Rx_Telit_0_INTR selects the first pin in the list, and Rx_Telit_INTR_NONE disables the Rx pi
  48:modem.c       ****     Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 178              		.loc 1 48 0
 179 0052 0021     		movs	r1, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 5


 180 0054 4020     		movs	r0, #64
 181 0056 FFF7FEFF 		bl	Rx_Telit_SetInterruptMode
  49:modem.c       ****     
  50:modem.c       **** }
 182              		.loc 1 50 0
 183 005a 00BF     		nop
 184 005c 80BD     		pop	{r7, pc}
 185              	.L8:
 186 005e 00BF     		.align	2
 187              	.L7:
 188 0060 00000000 		.word	modem_state
 189 0064 00000000 		.word	modem_info
 190 0068 00000000 		.word	modem_stats
 191              		.cfi_endproc
 192              	.LFE65:
 193              		.size	modem_initialize, .-modem_initialize
 194              		.section	.text.pins_configure_inactive,"ax",%progbits
 195              		.align	2
 196              		.global	pins_configure_inactive
 197              		.thumb
 198              		.thumb_func
 199              		.type	pins_configure_inactive, %function
 200              	pins_configure_inactive:
 201              	.LFB66:
  51:modem.c       **** 
  52:modem.c       **** 
  53:modem.c       **** // To be used when the modem power is to be "killed" conpletely to conserve power
  54:modem.c       **** void pins_configure_inactive(){
 202              		.loc 1 54 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 1, uses_anonymous_args = 0
 206 0000 80B5     		push	{r7, lr}
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 7, -8
 209              		.cfi_offset 14, -4
 210 0002 00AF     		add	r7, sp, #0
 211              		.cfi_def_cfa_register 7
  55:modem.c       ****    
  56:modem.c       ****    Telit_ControlReg_Write(0u); // Physically disconect UART pin
 212              		.loc 1 56 0
 213 0004 0020     		movs	r0, #0
 214 0006 FFF7FEFF 		bl	Telit_ControlReg_Write
  57:modem.c       ****    Rx_Telit_SetDriveMode(PIN_DM_STRONG); // Set drive mode
 215              		.loc 1 57 0
 216 000a 0C20     		movs	r0, #12
 217 000c FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  58:modem.c       **** 
  59:modem.c       ****    Pin_Telit_pwr_Write(OFF); // Kill power to modem (pulls pin low).
 218              		.loc 1 59 0
 219 0010 0020     		movs	r0, #0
 220 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  60:modem.c       **** 
  61:modem.c       ****    // Pull down all of these, just in case (turns the off).
  62:modem.c       ****    Rx_Telit_Write(OFF); 
 221              		.loc 1 62 0
 222 0016 0020     		movs	r0, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 6


 223 0018 FFF7FEFF 		bl	Rx_Telit_Write
  63:modem.c       ****    Tx_Telit_Write(OFF);
 224              		.loc 1 63 0
 225 001c 0020     		movs	r0, #0
 226 001e FFF7FEFF 		bl	Tx_Telit_Write
  64:modem.c       ****    Pin_Telit_ONOFF_Write(OFF);
 227              		.loc 1 64 0
 228 0022 0020     		movs	r0, #0
 229 0024 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
  65:modem.c       ****    Pin_Telit_SWRDY_Write(OFF);
 230              		.loc 1 65 0
 231 0028 0020     		movs	r0, #0
 232 002a FFF7FEFF 		bl	Pin_Telit_SWRDY_Write
  66:modem.c       ****     
  67:modem.c       **** }
 233              		.loc 1 67 0
 234 002e 00BF     		nop
 235 0030 80BD     		pop	{r7, pc}
 236              		.cfi_endproc
 237              	.LFE66:
 238              		.size	pins_configure_inactive, .-pins_configure_inactive
 239 0032 00BF     		.section	.text.pins_configure_active,"ax",%progbits
 240              		.align	2
 241              		.global	pins_configure_active
 242              		.thumb
 243              		.thumb_func
 244              		.type	pins_configure_active, %function
 245              	pins_configure_active:
 246              	.LFB67:
  68:modem.c       **** 
  69:modem.c       **** // Turns on power and configures all UART pin modes
  70:modem.c       **** void pins_configure_active(){
 247              		.loc 1 70 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 1, uses_anonymous_args = 0
 251 0000 80B5     		push	{r7, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 7, -8
 254              		.cfi_offset 14, -4
 255 0002 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
  71:modem.c       ****     
  72:modem.c       ****     Rx_Telit_SetDriveMode(PIN_DM_DIG_HIZ); // Power up. Set RX pin to High Impedance Digital mode.
 257              		.loc 1 72 0
 258 0004 0220     		movs	r0, #2
 259 0006 FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  73:modem.c       ****     Telit_ControlReg_Write(1u); // Pull Telit_ControlReg pin high (turns it on).
 260              		.loc 1 73 0
 261 000a 0120     		movs	r0, #1
 262 000c FFF7FEFF 		bl	Telit_ControlReg_Write
  74:modem.c       ****     Pin_Telit_pwr_Write(ON); // Pulls Telit_pwr pin high (turns it on).
 263              		.loc 1 74 0
 264 0010 0120     		movs	r0, #1
 265 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  75:modem.c       ****     CyDelay(100u); // Give the MOSFET a few ms to stalbilise power 
 266              		.loc 1 75 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 7


 267 0016 6420     		movs	r0, #100
 268 0018 FFF7FEFF 		bl	CyDelay
  76:modem.c       **** }
 269              		.loc 1 76 0
 270 001c 00BF     		nop
 271 001e 80BD     		pop	{r7, pc}
 272              		.cfi_endproc
 273              	.LFE67:
 274              		.size	pins_configure_active, .-pins_configure_active
 275              		.section	.rodata
 276              		.align	2
 277              	.LC0:
 278 0000 4F4B00   		.ascii	"OK\000"
 279 0003 00       		.align	2
 280              	.LC1:
 281 0004 41542353 		.ascii	"AT#SHDN\015\000"
 281      48444E0D 
 281      00
 282              		.section	.text.modem_power_down,"ax",%progbits
 283              		.align	2
 284              		.global	modem_power_down
 285              		.thumb
 286              		.thumb_func
 287              		.type	modem_power_down, %function
 288              	modem_power_down:
 289              	.LFB68:
  77:modem.c       **** 
  78:modem.c       **** // Power down the modem -- completely "kill" modem to conserve power.
  79:modem.c       **** void modem_power_down(){
 290              		.loc 1 79 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294 0000 80B5     		push	{r7, lr}
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 7, -8
 297              		.cfi_offset 14, -4
 298 0002 00AF     		add	r7, sp, #0
 299              		.cfi_def_cfa_register 7
  80:modem.c       ****     // AT Command to modem for Software Shut Down - #SHDN
  81:modem.c       ****     // \r is carriage return, it is necessary for the modem to know it got a command
  82:modem.c       ****     at_write_command("AT#SHDN\r","OK",5000u); 
 300              		.loc 1 82 0
 301 0004 41F28832 		movw	r2, #5000
 302 0008 0B49     		ldr	r1, .L12
 303 000a 0C48     		ldr	r0, .L12+4
 304 000c FFF7FEFF 		bl	at_write_command
  83:modem.c       ****    
  84:modem.c       ****     // Soft power cycle makes sure that the modem is all the way on (like holding on button on for 
  85:modem.c       ****     modem_soft_power_cycle();
 305              		.loc 1 85 0
 306 0010 FFF7FEFF 		bl	modem_soft_power_cycle
  86:modem.c       ****     CyDelay(1000u);
 307              		.loc 1 86 0
 308 0014 4FF47A70 		mov	r0, #1000
 309 0018 FFF7FEFF 		bl	CyDelay
  87:modem.c       ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 8


  88:modem.c       ****     UART_Telit_Stop(); // Disables the UART operation.
 310              		.loc 1 88 0
 311 001c FFF7FEFF 		bl	UART_Telit_Stop
  89:modem.c       ****     isr_telit_rx_Stop(); // Disables and removes the interrupt.
 312              		.loc 1 89 0
 313 0020 FFF7FEFF 		bl	isr_telit_rx_Stop
  90:modem.c       ****     pins_configure_inactive(); // We want the modem power to be "killed" completely to conserve pow
 314              		.loc 1 90 0
 315 0024 FFF7FEFF 		bl	pins_configure_inactive
  91:modem.c       ****     Pin_Regulator_PWM_Write(0u);
 316              		.loc 1 91 0
 317 0028 0020     		movs	r0, #0
 318 002a FFF7FEFF 		bl	Pin_Regulator_PWM_Write
  92:modem.c       ****     modem_state = MODEM_STATE_OFF;
 319              		.loc 1 92 0
 320 002e 044B     		ldr	r3, .L12+8
 321 0030 0022     		movs	r2, #0
 322 0032 1A70     		strb	r2, [r3]
  93:modem.c       ****     
  94:modem.c       **** }
 323              		.loc 1 94 0
 324 0034 00BF     		nop
 325 0036 80BD     		pop	{r7, pc}
 326              	.L13:
 327              		.align	2
 328              	.L12:
 329 0038 00000000 		.word	.LC0
 330 003c 04000000 		.word	.LC1
 331 0040 00000000 		.word	modem_state
 332              		.cfi_endproc
 333              	.LFE68:
 334              		.size	modem_power_down, .-modem_power_down
 335              		.section	.rodata
 336 000d 000000   		.align	2
 337              	.LC2:
 338 0010 41544530 		.ascii	"ATE0\015\000"
 338      0D00
 339 0016 0000     		.align	2
 340              	.LC3:
 341 0018 4D6F6465 		.ascii	"Modem boot time: %d\000"
 341      6D20626F 
 341      6F742074 
 341      696D653A 
 341      20256400 
 342              		.align	2
 343              	.LC4:
 344 002c 4D6F6465 		.ascii	"Modem ready for AT commands after %d attempt(s).\000"
 344      6D207265 
 344      61647920 
 344      666F7220 
 344      41542063 
 345 005d 000000   		.align	2
 346              	.LC5:
 347 0060 4E6F2072 		.ascii	"No response from modem.\000"
 347      6573706F 
 347      6E736520 
 347      66726F6D 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 9


 347      206D6F64 
 348              		.section	.text.modem_power_up,"ax",%progbits
 349              		.align	2
 350              		.global	modem_power_up
 351              		.thumb
 352              		.thumb_func
 353              		.type	modem_power_up, %function
 354              	modem_power_up:
 355              	.LFB69:
  95:modem.c       **** 
  96:modem.c       **** // This puts all the modem pins into a state that won't leak power
  97:modem.c       **** // Please call restore_pins() to bring them abck to function when they are needed for UART
  98:modem.c       **** uint8 modem_power_up(){
 356              		.loc 1 98 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 8
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360 0000 80B5     		push	{r7, lr}
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 7, -8
 363              		.cfi_offset 14, -4
 364 0002 82B0     		sub	sp, sp, #8
 365              		.cfi_def_cfa_offset 16
 366 0004 00AF     		add	r7, sp, #0
 367              		.cfi_def_cfa_register 7
  99:modem.c       ****     Pin_Regulator_PWM_Write(1u);
 368              		.loc 1 99 0
 369 0006 0120     		movs	r0, #1
 370 0008 FFF7FEFF 		bl	Pin_Regulator_PWM_Write
 100:modem.c       ****     pins_configure_active(); // Turns on power and configures all UART pin modes
 371              		.loc 1 100 0
 372 000c FFF7FEFF 		bl	pins_configure_active
 101:modem.c       ****     UART_Telit_Start(); // Sets the initVar variable, calls the UART_Telit_Init() function, and the
 373              		.loc 1 101 0
 374 0010 FFF7FEFF 		bl	UART_Telit_Start
 102:modem.c       ****     isr_telit_rx_StartEx(isr_telit_rx); // Sets up the interrupt and enables it. 
 375              		.loc 1 102 0
 376 0014 2A48     		ldr	r0, .L27
 377 0016 FFF7FEFF 		bl	isr_telit_rx_StartEx
 103:modem.c       **** 
 104:modem.c       ****     modem_soft_power_cycle(); // Soft power cycle makes sure that the modem is all the way on (like
 378              		.loc 1 104 0
 379 001a FFF7FEFF 		bl	modem_soft_power_cycle
 105:modem.c       ****     
 106:modem.c       ****     // Turn off ECHO command (doesn't repeat your command back to you).
 107:modem.c       ****     uint8 at_ready = 0;
 380              		.loc 1 107 0
 381 001e 0023     		movs	r3, #0
 382 0020 FB71     		strb	r3, [r7, #7]
 108:modem.c       ****     uint8 attempts = 0;
 383              		.loc 1 108 0
 384 0022 0023     		movs	r3, #0
 385 0024 3B71     		strb	r3, [r7, #4]
 109:modem.c       ****     // Create variable boot_time of the current time stamp.
 110:modem.c       ****     long boot_time = getTimeStamp();
 386              		.loc 1 110 0
 387 0026 FFF7FEFF 		bl	getTimeStamp
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 10


 388 002a 3860     		str	r0, [r7]
 389              	.LBB2:
 111:modem.c       ****     
 112:modem.c       ****     //it takes the 4G modem 10+secs (max 20) to boot up, so keep hitting it with AT commands until 
 113:modem.c       ****     for(uint8 attempts = 0; attempts<3; attempts++){
 390              		.loc 1 113 0
 391 002c 0023     		movs	r3, #0
 392 002e BB71     		strb	r3, [r7, #6]
 393 0030 1CE0     		b	.L15
 394              	.L22:
 395              	.LBB3:
 114:modem.c       ****         
 115:modem.c       ****         for(uint8 pwr_check = 0; pwr_check<20; pwr_check++){
 396              		.loc 1 115 0
 397 0032 0023     		movs	r3, #0
 398 0034 7B71     		strb	r3, [r7, #5]
 399 0036 0EE0     		b	.L16
 400              	.L19:
 116:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 117:modem.c       ****             if(at_write_command("ATE0\r","OK",1000u)){
 401              		.loc 1 117 0
 402 0038 4FF47A72 		mov	r2, #1000
 403 003c 2149     		ldr	r1, .L27+4
 404 003e 2248     		ldr	r0, .L27+8
 405 0040 FFF7FEFF 		bl	at_write_command
 406 0044 0346     		mov	r3, r0
 407 0046 002B     		cmp	r3, #0
 408 0048 02D0     		beq	.L17
 118:modem.c       ****                 at_ready = 1;
 409              		.loc 1 118 0
 410 004a 0123     		movs	r3, #1
 411 004c FB71     		strb	r3, [r7, #7]
 119:modem.c       ****                 break;
 412              		.loc 1 119 0
 413 004e 05E0     		b	.L18
 414              	.L17:
 115:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 415              		.loc 1 115 0 discriminator 2
 416 0050 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 417 0052 0133     		adds	r3, r3, #1
 418 0054 7B71     		strb	r3, [r7, #5]
 419              	.L16:
 115:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 420              		.loc 1 115 0 is_stmt 0 discriminator 1
 421 0056 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 422 0058 132B     		cmp	r3, #19
 423 005a EDD9     		bls	.L19
 424              	.L18:
 425              	.LBE3:
 120:modem.c       ****             }
 121:modem.c       ****         }
 122:modem.c       ****             
 123:modem.c       ****         if(at_ready == 1){
 426              		.loc 1 123 0 is_stmt 1
 427 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 428 005e 012B     		cmp	r3, #1
 429 0060 08D0     		beq	.L26
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 11


 124:modem.c       ****             break;
 125:modem.c       ****         }else{
 126:modem.c       ****             // Soft power cycle makes sure that the modem is all the way on (like holding on button
 127:modem.c       ****             modem_soft_power_cycle();
 430              		.loc 1 127 0 discriminator 2
 431 0062 FFF7FEFF 		bl	modem_soft_power_cycle
 113:modem.c       ****         
 432              		.loc 1 113 0 discriminator 2
 433 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 434 0068 0133     		adds	r3, r3, #1
 435 006a BB71     		strb	r3, [r7, #6]
 436              	.L15:
 113:modem.c       ****         
 437              		.loc 1 113 0 is_stmt 0 discriminator 1
 438 006c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 439 006e 022B     		cmp	r3, #2
 440 0070 DFD9     		bls	.L22
 441 0072 00E0     		b	.L21
 442              	.L26:
 124:modem.c       ****             break;
 443              		.loc 1 124 0 is_stmt 1
 444 0074 00BF     		nop
 445              	.L21:
 446              	.LBE2:
 128:modem.c       ****         }
 129:modem.c       ****     }
 130:modem.c       ****     // Calculate boot up time and save to variable boot_time.
 131:modem.c       ****     boot_time = getTimeStamp();
 447              		.loc 1 131 0
 448 0076 FFF7FEFF 		bl	getTimeStamp
 449 007a 3860     		str	r0, [r7]
 132:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Modem boot time: %d",boot_time);
 450              		.loc 1 132 0
 451 007c 3A68     		ldr	r2, [r7]
 452 007e 1349     		ldr	r1, .L27+12
 453 0080 0020     		movs	r0, #0
 454 0082 FFF7FEFF 		bl	printNotif
 133:modem.c       ****    
 134:modem.c       ****     if(at_ready == 1){
 455              		.loc 1 134 0
 456 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 457 0088 012B     		cmp	r3, #1
 458 008a 0AD1     		bne	.L23
 135:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Modem ready for AT commands after %d attempt(s).",attempts);
 459              		.loc 1 135 0
 460 008c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 461 008e 1A46     		mov	r2, r3
 462 0090 0F49     		ldr	r1, .L27+16
 463 0092 0020     		movs	r0, #0
 464 0094 FFF7FEFF 		bl	printNotif
 136:modem.c       ****         modem_state = MODEM_STATE_STARTUP;
 465              		.loc 1 136 0
 466 0098 0E4B     		ldr	r3, .L27+20
 467 009a 0122     		movs	r2, #1
 468 009c 1A70     		strb	r2, [r3]
 137:modem.c       ****     }else{
 138:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"No response from modem.");
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 12


 139:modem.c       ****         modem_state = MODEM_STATE_OFF;
 140:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 141:modem.c       ****         modem_power_down();
 142:modem.c       ****         return 0u;
 143:modem.c       ****     }
 144:modem.c       ****     return 1u;
 469              		.loc 1 144 0
 470 009e 0123     		movs	r3, #1
 471 00a0 09E0     		b	.L25
 472              	.L23:
 138:modem.c       ****         modem_state = MODEM_STATE_OFF;
 473              		.loc 1 138 0
 474 00a2 0D49     		ldr	r1, .L27+24
 475 00a4 0220     		movs	r0, #2
 476 00a6 FFF7FEFF 		bl	printNotif
 139:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 477              		.loc 1 139 0
 478 00aa 0A4B     		ldr	r3, .L27+20
 479 00ac 0022     		movs	r2, #0
 480 00ae 1A70     		strb	r2, [r3]
 141:modem.c       ****         return 0u;
 481              		.loc 1 141 0
 482 00b0 FFF7FEFF 		bl	modem_power_down
 142:modem.c       ****     }
 483              		.loc 1 142 0
 484 00b4 0023     		movs	r3, #0
 485              	.L25:
 145:modem.c       **** }
 486              		.loc 1 145 0
 487 00b6 1846     		mov	r0, r3
 488 00b8 0837     		adds	r7, r7, #8
 489              		.cfi_def_cfa_offset 8
 490 00ba BD46     		mov	sp, r7
 491              		.cfi_def_cfa_register 13
 492              		@ sp needed
 493 00bc 80BD     		pop	{r7, pc}
 494              	.L28:
 495 00be 00BF     		.align	2
 496              	.L27:
 497 00c0 00000000 		.word	isr_telit_rx
 498 00c4 00000000 		.word	.LC0
 499 00c8 10000000 		.word	.LC2
 500 00cc 18000000 		.word	.LC3
 501 00d0 2C000000 		.word	.LC4
 502 00d4 00000000 		.word	modem_state
 503 00d8 60000000 		.word	.LC5
 504              		.cfi_endproc
 505              	.LFE69:
 506              		.size	modem_power_up, .-modem_power_up
 507              		.section	.text.modem_soft_power_cycle,"ax",%progbits
 508              		.align	2
 509              		.global	modem_soft_power_cycle
 510              		.thumb
 511              		.thumb_func
 512              		.type	modem_soft_power_cycle, %function
 513              	modem_soft_power_cycle:
 514              	.LFB70:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 13


 146:modem.c       **** 
 147:modem.c       **** // Puts modem in soft power cycle -- modem has power but isn't all the way on, so soft power cycle 
 148:modem.c       **** void modem_soft_power_cycle(){
 515              		.loc 1 148 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 1, uses_anonymous_args = 0
 519 0000 80B5     		push	{r7, lr}
 520              		.cfi_def_cfa_offset 8
 521              		.cfi_offset 7, -8
 522              		.cfi_offset 14, -4
 523 0002 00AF     		add	r7, sp, #0
 524              		.cfi_def_cfa_register 7
 149:modem.c       ****     Pin_Telit_ONOFF_Write(1u); // Pulls Telit_ONOFF pin high
 525              		.loc 1 149 0
 526 0004 0120     		movs	r0, #1
 527 0006 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 150:modem.c       ****     CyDelay(2000u); // Give modem a sec to boot
 528              		.loc 1 150 0
 529 000a 4FF4FA60 		mov	r0, #2000
 530 000e FFF7FEFF 		bl	CyDelay
 151:modem.c       ****     Pin_Telit_ONOFF_Write(0u); // Pulls Telit_ONOFF pin low
 531              		.loc 1 151 0
 532 0012 0020     		movs	r0, #0
 533 0014 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 152:modem.c       ****     
 153:modem.c       **** }
 534              		.loc 1 153 0
 535 0018 00BF     		nop
 536 001a 80BD     		pop	{r7, pc}
 537              		.cfi_endproc
 538              	.LFE70:
 539              		.size	modem_soft_power_cycle, .-modem_soft_power_cycle
 540              		.section	.text.uart_string_reset,"ax",%progbits
 541              		.align	2
 542              		.global	uart_string_reset
 543              		.thumb
 544              		.thumb_func
 545              		.type	uart_string_reset, %function
 546              	uart_string_reset:
 547              	.LFB71:
 154:modem.c       **** 
 155:modem.c       **** // Clear and reset the uart_received_string variable and uart_string_index for the next transmissio
 156:modem.c       **** void uart_string_reset(){
 548              		.loc 1 156 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 1, uses_anonymous_args = 0
 552 0000 80B5     		push	{r7, lr}
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 7, -8
 555              		.cfi_offset 14, -4
 556 0002 00AF     		add	r7, sp, #0
 557              		.cfi_def_cfa_register 7
 157:modem.c       ****     uart_string_index=0;
 558              		.loc 1 157 0
 559 0004 064B     		ldr	r3, .L31
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 14


 560 0006 0022     		movs	r2, #0
 561 0008 1A80     		strh	r2, [r3]	@ movhi
 158:modem.c       ****     // memset(void *str, int c, size_t n) copies the character c (an unsigned char) to the first n 
 159:modem.c       ****     memset(uart_received_string,'\0',sizeof(uart_received_string));
 562              		.loc 1 159 0
 563 000a 4FF48062 		mov	r2, #1024
 564 000e 0021     		movs	r1, #0
 565 0010 0448     		ldr	r0, .L31+4
 566 0012 FFF7FEFF 		bl	memset
 160:modem.c       ****     // Clears the receiver memory buffer and hardware RX FIFO of all received data.
 161:modem.c       ****     UART_Telit_ClearRxBuffer();
 567              		.loc 1 161 0
 568 0016 FFF7FEFF 		bl	UART_Telit_ClearRxBuffer
 162:modem.c       **** }
 569              		.loc 1 162 0
 570 001a 00BF     		nop
 571 001c 80BD     		pop	{r7, pc}
 572              	.L32:
 573 001e 00BF     		.align	2
 574              	.L31:
 575 0020 00000000 		.word	uart_string_index
 576 0024 00000000 		.word	uart_received_string
 577              		.cfi_endproc
 578              	.LFE71:
 579              		.size	uart_string_reset, .-uart_string_reset
 580              		.section	.rodata
 581              		.align	2
 582              	.LC6:
 583 0078 4D6F6465 		.ascii	"Modem sent AT command without timeout: %s\015\012\000"
 583      6D207365 
 583      6E742041 
 583      5420636F 
 583      6D6D616E 
 584              		.align	2
 585              	.LC7:
 586 00a4 4D6F6465 		.ascii	"Modem Received expected AT Response on first Try:\012"
 586      6D205265 
 586      63656976 
 586      65642065 
 586      78706563 
 587 00d6 436F6D6D 		.ascii	"Command: %s\012Received: %s\015\012\000"
 587      616E643A 
 587      2025730A 
 587      52656365 
 587      69766564 
 588 00f1 000000   		.align	2
 589              	.LC8:
 590 00f4 4D6F6465 		.ascii	"Modem required %d tries to receive AT Response: %s\015"
 590      6D207265 
 590      71756972 
 590      65642025 
 590      64207472 
 591 0127 0A00     		.ascii	"\012\000"
 592 0129 000000   		.align	2
 593              	.LC9:
 594 012c 436F756C 		.ascii	"Could not write AT command: %s\012 Received: %s\012"
 594      64206E6F 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 15


 594      74207772 
 594      69746520 
 594      41542063 
 595 0159 00       		.ascii	"\000"
 596              		.section	.text.at_write_command,"ax",%progbits
 597              		.align	2
 598              		.global	at_write_command
 599              		.thumb
 600              		.thumb_func
 601              		.type	at_write_command, %function
 602              	at_write_command:
 603              	.LFB72:
 163:modem.c       **** 
 164:modem.c       **** // Modem controlled  via  the  serial  interface  using  the  standard  AT commands.
 165:modem.c       **** // AT is an ATTENTION command and is used as a prefix to other parameters in a string. 
 166:modem.c       **** // Sends commands to the modem
 167:modem.c       **** uint8_t at_write_command(char* commands, char* expected_response,uint32_t timeout){
 604              		.loc 1 167 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 40
 607              		@ frame_needed = 1, uses_anonymous_args = 0
 608 0000 80B5     		push	{r7, lr}
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 7, -8
 611              		.cfi_offset 14, -4
 612 0002 8AB0     		sub	sp, sp, #40
 613              		.cfi_def_cfa_offset 48
 614 0004 00AF     		add	r7, sp, #0
 615              		.cfi_def_cfa_register 7
 616 0006 F860     		str	r0, [r7, #12]
 617 0008 B960     		str	r1, [r7, #8]
 618 000a 7A60     		str	r2, [r7, #4]
 168:modem.c       **** 
 169:modem.c       ****     uint32 at_attempt = 0;
 619              		.loc 1 169 0
 620 000c 0023     		movs	r3, #0
 621 000e 7B62     		str	r3, [r7, #36]
 170:modem.c       ****     
 171:modem.c       ****     for(at_attempt = 0; at_attempt < 3; at_attempt++) {
 622              		.loc 1 171 0
 623 0010 0023     		movs	r3, #0
 624 0012 7B62     		str	r3, [r7, #36]
 625 0014 46E0     		b	.L34
 626              	.L42:
 627              	.LBB4:
 172:modem.c       ****         
 173:modem.c       ****         char* compare_location;
 174:modem.c       ****         uint32_t delay=10;
 628              		.loc 1 174 0
 629 0016 0A23     		movs	r3, #10
 630 0018 FB61     		str	r3, [r7, #28]
 175:modem.c       ****         uint32_t i, interval=timeout/delay;        
 631              		.loc 1 175 0
 632 001a 7A68     		ldr	r2, [r7, #4]
 633 001c FB69     		ldr	r3, [r7, #28]
 634 001e B2FBF3F3 		udiv	r3, r2, r3
 635 0022 BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 16


 176:modem.c       ****         
 177:modem.c       ****         // Clear and reset the uart_received_string variable and uart_string_index for the next tra
 178:modem.c       ****         uart_string_reset();
 636              		.loc 1 178 0
 637 0024 FFF7FEFF 		bl	uart_string_reset
 179:modem.c       ****         
 180:modem.c       ****         // Sends a NULL terminated string to the TX buffer for transmission.
 181:modem.c       ****         UART_Telit_PutString(commands);
 638              		.loc 1 181 0
 639 0028 F868     		ldr	r0, [r7, #12]
 640 002a FFF7FEFF 		bl	UART_Telit_PutString
 182:modem.c       ****         
 183:modem.c       ****         
 184:modem.c       ****         // If no timeout, no need to wait for response
 185:modem.c       ****         if(timeout == NO_AT_TIMEOUT){
 641              		.loc 1 185 0
 642 002e 7B68     		ldr	r3, [r7, #4]
 643 0030 002B     		cmp	r3, #0
 644 0032 06D1     		bne	.L35
 186:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem sent AT command without timeout: %s\r\n", commands);
 645              		.loc 1 186 0
 646 0034 FA68     		ldr	r2, [r7, #12]
 647 0036 1F49     		ldr	r1, .L43
 648 0038 0020     		movs	r0, #0
 649 003a FFF7FEFF 		bl	printNotif
 187:modem.c       ****             return 1u;
 650              		.loc 1 187 0
 651 003e 0123     		movs	r3, #1
 652 0040 34E0     		b	.L36
 653              	.L35:
 188:modem.c       ****         }
 189:modem.c       ****       
 190:modem.c       ****      
 191:modem.c       ****         for(i=0;i<interval;i++){ 
 654              		.loc 1 191 0
 655 0042 0023     		movs	r3, #0
 656 0044 3B62     		str	r3, [r7, #32]
 657 0046 20E0     		b	.L37
 658              	.L41:
 192:modem.c       ****             CyDelay((uint32) delay);
 659              		.loc 1 192 0
 660 0048 F869     		ldr	r0, [r7, #28]
 661 004a FFF7FEFF 		bl	CyDelay
 193:modem.c       ****             // strstr(const char *haystack, const char *needle) function finds the first occurrence
 194:modem.c       ****             // Returns a pointer to the first occurrence in haystack of any of the entire sequence 
 195:modem.c       ****             compare_location=strstr(uart_received_string,expected_response);        
 662              		.loc 1 195 0
 663 004e B968     		ldr	r1, [r7, #8]
 664 0050 1948     		ldr	r0, .L43+4
 665 0052 FFF7FEFF 		bl	strstr
 666 0056 7861     		str	r0, [r7, #20]
 196:modem.c       ****             if(compare_location!=NULL) {
 667              		.loc 1 196 0
 668 0058 7B69     		ldr	r3, [r7, #20]
 669 005a 002B     		cmp	r3, #0
 670 005c 12D0     		beq	.L38
 197:modem.c       ****                 if (at_attempt == 0){
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 17


 671              		.loc 1 197 0
 672 005e 7B6A     		ldr	r3, [r7, #36]
 673 0060 002B     		cmp	r3, #0
 674 0062 06D1     		bne	.L39
 198:modem.c       ****                     // we add \n for new line to make it easier to decipher
 199:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT,"Modem Received expected AT Response on first Try:\
 675              		.loc 1 199 0
 676 0064 144B     		ldr	r3, .L43+4
 677 0066 FA68     		ldr	r2, [r7, #12]
 678 0068 1449     		ldr	r1, .L43+8
 679 006a 0020     		movs	r0, #0
 680 006c FFF7FEFF 		bl	printNotif
 681 0070 06E0     		b	.L40
 682              	.L39:
 200:modem.c       ****                 }else{
 201:modem.c       ****                     printNotif(NOTIF_TYPE_WARNING,"Modem required %d tries to receive AT Response: 
 683              		.loc 1 201 0
 684 0072 7B6A     		ldr	r3, [r7, #36]
 685 0074 5A1C     		adds	r2, r3, #1
 686 0076 104B     		ldr	r3, .L43+4
 687 0078 1149     		ldr	r1, .L43+12
 688 007a 0120     		movs	r0, #1
 689 007c FFF7FEFF 		bl	printNotif
 690              	.L40:
 202:modem.c       ****                  
 203:modem.c       ****                 }
 204:modem.c       ****                 return(1);
 691              		.loc 1 204 0
 692 0080 0123     		movs	r3, #1
 693 0082 13E0     		b	.L36
 694              	.L38:
 191:modem.c       ****             CyDelay((uint32) delay);
 695              		.loc 1 191 0 discriminator 2
 696 0084 3B6A     		ldr	r3, [r7, #32]
 697 0086 0133     		adds	r3, r3, #1
 698 0088 3B62     		str	r3, [r7, #32]
 699              	.L37:
 191:modem.c       ****             CyDelay((uint32) delay);
 700              		.loc 1 191 0 is_stmt 0 discriminator 1
 701 008a 3A6A     		ldr	r2, [r7, #32]
 702 008c BB69     		ldr	r3, [r7, #24]
 703 008e 9A42     		cmp	r2, r3
 704 0090 DAD3     		bcc	.L41
 205:modem.c       ****             }
 206:modem.c       ****             
 207:modem.c       ****         }  
 208:modem.c       ****         
 209:modem.c       ****         // Something went wrong, restart UART
 210:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not write AT command: %s\n Received: %s\n", commands,uar
 705              		.loc 1 210 0 is_stmt 1 discriminator 2
 706 0092 094B     		ldr	r3, .L43+4
 707 0094 FA68     		ldr	r2, [r7, #12]
 708 0096 0B49     		ldr	r1, .L43+16
 709 0098 0220     		movs	r0, #2
 710 009a FFF7FEFF 		bl	printNotif
 711              	.LBE4:
 171:modem.c       ****         
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 18


 712              		.loc 1 171 0 discriminator 2
 713 009e 7B6A     		ldr	r3, [r7, #36]
 714 00a0 0133     		adds	r3, r3, #1
 715 00a2 7B62     		str	r3, [r7, #36]
 716              	.L34:
 171:modem.c       ****         
 717              		.loc 1 171 0 is_stmt 0 discriminator 1
 718 00a4 7B6A     		ldr	r3, [r7, #36]
 719 00a6 022B     		cmp	r3, #2
 720 00a8 B5D9     		bls	.L42
 211:modem.c       ****       
 212:modem.c       ****     }
 213:modem.c       ****    // printNotif(NOTIF_TYPE_ERROR,"Modem AT response timeout: %s\r\n", commands);
 214:modem.c       ****           
 215:modem.c       ****     return(0);    
 721              		.loc 1 215 0 is_stmt 1
 722 00aa 0023     		movs	r3, #0
 723              	.L36:
 216:modem.c       **** }
 724              		.loc 1 216 0
 725 00ac 1846     		mov	r0, r3
 726 00ae 2837     		adds	r7, r7, #40
 727              		.cfi_def_cfa_offset 8
 728 00b0 BD46     		mov	sp, r7
 729              		.cfi_def_cfa_register 13
 730              		@ sp needed
 731 00b2 80BD     		pop	{r7, pc}
 732              	.L44:
 733              		.align	2
 734              	.L43:
 735 00b4 78000000 		.word	.LC6
 736 00b8 00000000 		.word	uart_received_string
 737 00bc A4000000 		.word	.LC7
 738 00c0 F4000000 		.word	.LC8
 739 00c4 2C010000 		.word	.LC9
 740              		.cfi_endproc
 741              	.LFE72:
 742              		.size	at_write_command, .-at_write_command
 743              		.section	.rodata
 744 015a 0000     		.align	2
 745              	.LC10:
 746 015c 54455354 		.ascii	"TEST_MODEM\000"
 746      5F4D4F44 
 746      454D00
 747 0167 00       		.align	2
 748              	.LC11:
 749 0168 4E6F2072 		.ascii	"No reponse from modem.\000"
 749      65706F6E 
 749      73652066 
 749      726F6D20 
 749      6D6F6465 
 750 017f 00       		.align	2
 751              	.LC12:
 752 0180 4D6F6465 		.ascii	"Modem connected to network.\000"
 752      6D20636F 
 752      6E6E6563 
 752      74656420 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 19


 752      746F206E 
 753              		.section	.text.modem_test,"ax",%progbits
 754              		.align	2
 755              		.global	modem_test
 756              		.thumb
 757              		.thumb_func
 758              		.type	modem_test, %function
 759              	modem_test:
 760              	.LFB73:
 217:modem.c       **** 
 218:modem.c       **** // Test modem -- needs fleshed out
 219:modem.c       **** test_t modem_test(){
 761              		.loc 1 219 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 408
 764              		@ frame_needed = 1, uses_anonymous_args = 0
 765 0000 B0B5     		push	{r4, r5, r7, lr}
 766              		.cfi_def_cfa_offset 16
 767              		.cfi_offset 4, -16
 768              		.cfi_offset 5, -12
 769              		.cfi_offset 7, -8
 770              		.cfi_offset 14, -4
 771 0002 E6B0     		sub	sp, sp, #408
 772              		.cfi_def_cfa_offset 424
 773 0004 00AF     		add	r7, sp, #0
 774              		.cfi_def_cfa_register 7
 775 0006 3B1D     		adds	r3, r7, #4
 776 0008 1860     		str	r0, [r3]
 220:modem.c       ****     
 221:modem.c       ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
 222:modem.c       ****     test.status = 0;
 777              		.loc 1 222 0
 778 000a 07F10C03 		add	r3, r7, #12
 779 000e 0022     		movs	r2, #0
 780 0010 83F88020 		strb	r2, [r3, #128]
 223:modem.c       ****     // Print test name and test reason
 224:modem.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_MODEM");
 781              		.loc 1 224 0
 782 0014 07F10C03 		add	r3, r7, #12
 783 0018 364A     		ldr	r2, .L53
 784 001a 07CA     		ldmia	r2, {r0, r1, r2}
 785 001c 03C3     		stmia	r3!, {r0, r1}
 786 001e 1A80     		strh	r2, [r3]	@ movhi
 787 0020 0233     		adds	r3, r3, #2
 788 0022 120C     		lsrs	r2, r2, #16
 789 0024 1A70     		strb	r2, [r3]
 225:modem.c       ****     snprintf(test.reason,sizeof(test.reason),"No reponse from modem.");
 790              		.loc 1 225 0
 791 0026 07F10C03 		add	r3, r7, #12
 792 002a 8133     		adds	r3, r3, #129
 793 002c 324A     		ldr	r2, .L53+4
 794 002e 1C46     		mov	r4, r3
 795 0030 1546     		mov	r5, r2
 796 0032 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 797 0034 2060     		str	r0, [r4]	@ unaligned
 798 0036 6160     		str	r1, [r4, #4]	@ unaligned
 799 0038 A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 20


 800 003a E360     		str	r3, [r4, #12]	@ unaligned
 801 003c 2868     		ldr	r0, [r5]	@ unaligned
 802 003e 2061     		str	r0, [r4, #16]	@ unaligned
 803 0040 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 804 0042 AA79     		ldrb	r2, [r5, #6]
 805 0044 A382     		strh	r3, [r4, #20]	@ unaligned
 806 0046 1346     		mov	r3, r2
 807 0048 A375     		strb	r3, [r4, #22]
 808              	.LBB5:
 226:modem.c       ****    
 227:modem.c       ****     //try the modem 60*1000ms (60 secs)
 228:modem.c       ****     for(int i = 0; i< 60; i++){
 809              		.loc 1 228 0
 810 004a 0023     		movs	r3, #0
 811 004c C7F89431 		str	r3, [r7, #404]
 812 0050 3AE0     		b	.L46
 813              	.L51:
 229:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 230:modem.c       ****         modem_process_tasks();
 814              		.loc 1 230 0
 815 0052 FFF7FEFF 		bl	modem_process_tasks
 231:modem.c       ****          
 232:modem.c       ****         if(modem_get_state() == MODEM_STATE_OFF){
 816              		.loc 1 232 0
 817 0056 FFF7FEFF 		bl	modem_get_state
 818 005a 0346     		mov	r3, r0
 819 005c 002B     		cmp	r3, #0
 820 005e 02D1     		bne	.L47
 233:modem.c       ****             // This puts all the modem points into a state that won't leak power
 234:modem.c       ****             modem_power_up();
 821              		.loc 1 234 0
 822 0060 FFF7FEFF 		bl	modem_power_up
 823 0064 27E0     		b	.L48
 824              	.L47:
 235:modem.c       ****             // Should put this on a max_try counter, so we don't just keep trying to connect over a
 236:modem.c       ****             
 237:modem.c       ****         }else if(modem_get_state() == MODEM_STATE_READY){
 825              		.loc 1 237 0
 826 0066 FFF7FEFF 		bl	modem_get_state
 827 006a 0346     		mov	r3, r0
 828 006c 042B     		cmp	r3, #4
 829 006e 22D1     		bne	.L48
 830              	.LBB6:
 238:modem.c       ****         
 239:modem.c       ****         
 240:modem.c       ****         // Get time, and if it looks good, set the RTC with it
 241:modem.c       ****         long network_time = modem_get_network_time();
 831              		.loc 1 241 0
 832 0070 FFF7FEFF 		bl	modem_get_network_time
 833 0074 C7F89001 		str	r0, [r7, #400]
 242:modem.c       ****         if(network_time != 0){
 834              		.loc 1 242 0
 835 0078 D7F89031 		ldr	r3, [r7, #400]
 836 007c 002B     		cmp	r3, #0
 837 007e 03D0     		beq	.L49
 243:modem.c       ****             setTime(network_time); // Set the system time 
 838              		.loc 1 243 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 21


 839 0080 D7F89001 		ldr	r0, [r7, #400]
 840 0084 FFF7FEFF 		bl	setTime
 841              	.L49:
 244:modem.c       ****         }
 245:modem.c       ****             
 246:modem.c       ****         snprintf(test.reason,sizeof(test.reason),"Modem connected to network.");
 842              		.loc 1 246 0
 843 0088 07F10C03 		add	r3, r7, #12
 844 008c 8133     		adds	r3, r3, #129
 845 008e 1B4A     		ldr	r2, .L53+8
 846 0090 1D46     		mov	r5, r3
 847 0092 1446     		mov	r4, r2
 848 0094 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 849 0096 2860     		str	r0, [r5]	@ unaligned
 850 0098 6960     		str	r1, [r5, #4]	@ unaligned
 851 009a AA60     		str	r2, [r5, #8]	@ unaligned
 852 009c EB60     		str	r3, [r5, #12]	@ unaligned
 853 009e 07CC     		ldmia	r4!, {r0, r1, r2}
 854 00a0 2861     		str	r0, [r5, #16]	@ unaligned
 855 00a2 6961     		str	r1, [r5, #20]	@ unaligned
 856 00a4 AA61     		str	r2, [r5, #24]	@ unaligned
 247:modem.c       ****         test.status = 1;
 857              		.loc 1 247 0
 858 00a6 07F10C03 		add	r3, r7, #12
 859 00aa 0122     		movs	r2, #1
 860 00ac 83F88020 		strb	r2, [r3, #128]
 248:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 249:modem.c       ****         modem_power_down();
 861              		.loc 1 249 0
 862 00b0 FFF7FEFF 		bl	modem_power_down
 250:modem.c       ****         break;
 863              		.loc 1 250 0
 864 00b4 0CE0     		b	.L50
 865              	.L48:
 866              	.LBE6:
 251:modem.c       ****         
 252:modem.c       ****       }
 253:modem.c       ****         CyDelay(1000u);
 867              		.loc 1 253 0 discriminator 2
 868 00b6 4FF47A70 		mov	r0, #1000
 869 00ba FFF7FEFF 		bl	CyDelay
 228:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 870              		.loc 1 228 0 discriminator 2
 871 00be D7F89431 		ldr	r3, [r7, #404]
 872 00c2 0133     		adds	r3, r3, #1
 873 00c4 C7F89431 		str	r3, [r7, #404]
 874              	.L46:
 228:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 875              		.loc 1 228 0 is_stmt 0 discriminator 1
 876 00c8 D7F89431 		ldr	r3, [r7, #404]
 877 00cc 3B2B     		cmp	r3, #59
 878 00ce C0DD     		ble	.L51
 879              	.L50:
 880              	.LBE5:
 254:modem.c       ****         
 255:modem.c       ****     }
 256:modem.c       ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 22


 257:modem.c       ****     return test;
 881              		.loc 1 257 0 is_stmt 1
 882 00d0 3B1D     		adds	r3, r7, #4
 883 00d2 1A68     		ldr	r2, [r3]
 884 00d4 07F10C03 		add	r3, r7, #12
 885 00d8 1046     		mov	r0, r2
 886 00da 1946     		mov	r1, r3
 887 00dc 40F28113 		movw	r3, #385
 888 00e0 1A46     		mov	r2, r3
 889 00e2 FFF7FEFF 		bl	memcpy
 258:modem.c       **** }
 890              		.loc 1 258 0
 891 00e6 3B1D     		adds	r3, r7, #4
 892 00e8 1868     		ldr	r0, [r3]
 893 00ea 07F5CC77 		add	r7, r7, #408
 894              		.cfi_def_cfa_offset 16
 895 00ee BD46     		mov	sp, r7
 896              		.cfi_def_cfa_register 13
 897              		@ sp needed
 898 00f0 B0BD     		pop	{r4, r5, r7, pc}
 899              	.L54:
 900 00f2 00BF     		.align	2
 901              	.L53:
 902 00f4 5C010000 		.word	.LC10
 903 00f8 68010000 		.word	.LC11
 904 00fc 80010000 		.word	.LC12
 905              		.cfi_endproc
 906              	.LFE73:
 907              		.size	modem_test, .-modem_test
 908              		.section	.text.extract_string,"ax",%progbits
 909              		.align	2
 910              		.global	extract_string
 911              		.thumb
 912              		.thumb_func
 913              		.type	extract_string, %function
 914              	extract_string:
 915              	.LFB74:
 259:modem.c       **** 
 260:modem.c       **** // Extract string from the UART
 261:modem.c       **** uint8 extract_string(char* from, const char* beginMarker, const char* endMarker,  char* target){
 916              		.loc 1 261 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 24
 919              		@ frame_needed = 1, uses_anonymous_args = 0
 920 0000 80B5     		push	{r7, lr}
 921              		.cfi_def_cfa_offset 8
 922              		.cfi_offset 7, -8
 923              		.cfi_offset 14, -4
 924 0002 86B0     		sub	sp, sp, #24
 925              		.cfi_def_cfa_offset 32
 926 0004 00AF     		add	r7, sp, #0
 927              		.cfi_def_cfa_register 7
 928 0006 F860     		str	r0, [r7, #12]
 929 0008 B960     		str	r1, [r7, #8]
 930 000a 7A60     		str	r2, [r7, #4]
 931 000c 3B60     		str	r3, [r7]
 262:modem.c       ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 23


 263:modem.c       ****         char *a, *b;
 264:modem.c       ****   
 265:modem.c       ****         // Expect the UART to contain something like "+CESQ: ##,##,##,##,##,##\r\n\r\nOK"
 266:modem.c       ****         // - Search for "+CESQ: ".  Place the starting pointer, a, at the resulting index
 267:modem.c       ****         a = strstr(from,beginMarker);
 932              		.loc 1 267 0
 933 000e B968     		ldr	r1, [r7, #8]
 934 0010 F868     		ldr	r0, [r7, #12]
 935 0012 FFF7FEFF 		bl	strstr
 936 0016 7861     		str	r0, [r7, #20]
 268:modem.c       ****         if (a == NULL) {
 937              		.loc 1 268 0
 938 0018 7B69     		ldr	r3, [r7, #20]
 939 001a 002B     		cmp	r3, #0
 940 001c 01D1     		bne	.L56
 269:modem.c       ****             //puts("+CESQ: not found in uart_received_string");
 270:modem.c       ****             a = from;
 941              		.loc 1 270 0
 942 001e FB68     		ldr	r3, [r7, #12]
 943 0020 7B61     		str	r3, [r7, #20]
 944              	.L56:
 271:modem.c       ****         }
 272:modem.c       ****         // The strlen() function calculates the length of a given string.
 273:modem.c       ****         a += strlen(beginMarker);
 945              		.loc 1 273 0
 946 0022 B868     		ldr	r0, [r7, #8]
 947 0024 FFF7FEFF 		bl	strlen
 948 0028 0246     		mov	r2, r0
 949 002a 7B69     		ldr	r3, [r7, #20]
 950 002c 1344     		add	r3, r3, r2
 951 002e 7B61     		str	r3, [r7, #20]
 274:modem.c       ****         
 275:modem.c       ****         // - Find the end marking and offset by 1
 276:modem.c       ****         // strstr(const char *haystack, const char *needle) function finds the first occurrence of 
 277:modem.c       ****         // Returns a pointer to the first occurrence in haystack of any of the entire sequence of c
 278:modem.c       ****         b = strstr(a,endMarker);
 952              		.loc 1 278 0
 953 0030 7968     		ldr	r1, [r7, #4]
 954 0032 7869     		ldr	r0, [r7, #20]
 955 0034 FFF7FEFF 		bl	strstr
 956 0038 3861     		str	r0, [r7, #16]
 279:modem.c       ****         if (b == NULL) {
 957              		.loc 1 279 0
 958 003a 3B69     		ldr	r3, [r7, #16]
 959 003c 002B     		cmp	r3, #0
 960 003e 06D1     		bne	.L57
 280:modem.c       ****             // Puts("Comma not found in uart_received_string");
 281:modem.c       ****             b=from+strlen(from);
 961              		.loc 1 281 0
 962 0040 F868     		ldr	r0, [r7, #12]
 963 0042 FFF7FEFF 		bl	strlen
 964 0046 0246     		mov	r2, r0
 965 0048 FB68     		ldr	r3, [r7, #12]
 966 004a 1344     		add	r3, r3, r2
 967 004c 3B61     		str	r3, [r7, #16]
 968              	.L57:
 282:modem.c       ****         }        
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 24


 283:modem.c       ****         
 284:modem.c       ****         // Parse the strings and store the respective rssi and fer values
 285:modem.c       ****         strncpy(target,a,b-a);
 969              		.loc 1 285 0
 970 004e 3A69     		ldr	r2, [r7, #16]
 971 0050 7B69     		ldr	r3, [r7, #20]
 972 0052 D31A     		subs	r3, r2, r3
 973 0054 1A46     		mov	r2, r3
 974 0056 7969     		ldr	r1, [r7, #20]
 975 0058 3868     		ldr	r0, [r7]
 976 005a FFF7FEFF 		bl	strncpy
 286:modem.c       ****         target[b-a] = '\0';
 977              		.loc 1 286 0
 978 005e 3A69     		ldr	r2, [r7, #16]
 979 0060 7B69     		ldr	r3, [r7, #20]
 980 0062 D31A     		subs	r3, r2, r3
 981 0064 1A46     		mov	r2, r3
 982 0066 3B68     		ldr	r3, [r7]
 983 0068 1344     		add	r3, r3, r2
 984 006a 0022     		movs	r2, #0
 985 006c 1A70     		strb	r2, [r3]
 287:modem.c       ****         return 1u;
 986              		.loc 1 287 0
 987 006e 0123     		movs	r3, #1
 288:modem.c       ****         
 289:modem.c       **** }
 988              		.loc 1 289 0
 989 0070 1846     		mov	r0, r3
 990 0072 1837     		adds	r7, r7, #24
 991              		.cfi_def_cfa_offset 8
 992 0074 BD46     		mov	sp, r7
 993              		.cfi_def_cfa_register 13
 994              		@ sp needed
 995 0076 80BD     		pop	{r7, pc}
 996              		.cfi_endproc
 997              	.LFE74:
 998              		.size	extract_string, .-extract_string
 999              		.section	.rodata
 1000              		.align	2
 1001              	.LC13:
 1002 019c 54696D65 		.ascii	"Time to connect to network: %d seconds\000"
 1002      20746F20 
 1002      636F6E6E 
 1002      65637420 
 1002      746F206E 
 1003 01c3 00       		.align	2
 1004              	.LC14:
 1005 01c4 4D6F6465 		.ascii	"Modem timed out on network connect\000"
 1005      6D207469 
 1005      6D656420 
 1005      6F757420 
 1005      6F6E206E 
 1006 01e7 00       		.align	2
 1007              	.LC15:
 1008 01e8 41637175 		.ascii	"Acquired IP address: %d seconds\000"
 1008      69726564 
 1008      20495020 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 25


 1008      61646472 
 1008      6573733A 
 1009              		.align	2
 1010              	.LC16:
 1011 0208 4D6F6465 		.ascii	"Modem timed out on IP address acquire.\000"
 1011      6D207469 
 1011      6D656420 
 1011      6F757420 
 1011      6F6E2049 
 1012              		.section	.text.modem_process_tasks,"ax",%progbits
 1013              		.align	2
 1014              		.global	modem_process_tasks
 1015              		.thumb
 1016              		.thumb_func
 1017              		.type	modem_process_tasks, %function
 1018              	modem_process_tasks:
 1019              	.LFB75:
 290:modem.c       **** 
 291:modem.c       **** // Function to startup the modem, connect to the network, and then hand it off to sleep
 292:modem.c       **** uint8 modem_process_tasks(){
 1020              		.loc 1 292 0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 8
 1023              		@ frame_needed = 1, uses_anonymous_args = 0
 1024 0000 80B5     		push	{r7, lr}
 1025              		.cfi_def_cfa_offset 8
 1026              		.cfi_offset 7, -8
 1027              		.cfi_offset 14, -4
 1028 0002 82B0     		sub	sp, sp, #8
 1029              		.cfi_def_cfa_offset 16
 1030 0004 00AF     		add	r7, sp, #0
 1031              		.cfi_def_cfa_register 7
 293:modem.c       ****     // If modem state is "startup" then get the modem start time, configure modem settings, and cha
 294:modem.c       ****     if(modem_state == MODEM_STATE_STARTUP){
 1032              		.loc 1 294 0
 1033 0006 464B     		ldr	r3, .L73
 1034 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1035 000a 012B     		cmp	r3, #1
 1036 000c 0BD1     		bne	.L60
 295:modem.c       ****         
 296:modem.c       ****         modem_start_time_stamp = getTimeStamp(); // Get timestamp for modem start time
 1037              		.loc 1 296 0
 1038 000e FFF7FEFF 		bl	getTimeStamp
 1039 0012 0246     		mov	r2, r0
 1040 0014 434B     		ldr	r3, .L73+4
 1041 0016 1A60     		str	r2, [r3]
 297:modem.c       ****         modem_configure_settings(); // Configure modem settings
 1042              		.loc 1 297 0
 1043 0018 FFF7FEFF 		bl	modem_configure_settings
 298:modem.c       ****         modem_state = MODEM_STATE_WAITING_FOR_NETWORK; // Change modem state 
 1044              		.loc 1 298 0
 1045 001c 404B     		ldr	r3, .L73
 1046 001e 0222     		movs	r2, #2
 1047 0020 1A70     		strb	r2, [r3]
 299:modem.c       ****         return 1u; // Keep going, don't hand off to sleep yet
 1048              		.loc 1 299 0
 1049 0022 0123     		movs	r3, #1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 26


 1050 0024 77E0     		b	.L61
 1051              	.L60:
 300:modem.c       ****         
 301:modem.c       ****     }
 302:modem.c       ****     // Else if modem state is "waiting for network" 
 303:modem.c       ****     else if(modem_state == MODEM_STATE_WAITING_FOR_NETWORK){
 1052              		.loc 1 303 0
 1053 0026 3E4B     		ldr	r3, .L73
 1054 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1055 002a 022B     		cmp	r3, #2
 1056 002c 44D1     		bne	.L62
 1057              	.LBB7:
 304:modem.c       ****         
 305:modem.c       ****         // Check if modem has a good cell signal each second for up to 30 seconds
 306:modem.c       ****         for(uint8 i=0;i<30;i++){
 1058              		.loc 1 306 0
 1059 002e 0023     		movs	r3, #0
 1060 0030 FB71     		strb	r3, [r7, #7]
 1061 0032 10E0     		b	.L63
 1062              	.L66:
 307:modem.c       ****             // Get cell network stats
 308:modem.c       ****             get_cell_network_stats();
 1063              		.loc 1 308 0
 1064 0034 FFF7FEFF 		bl	get_cell_network_stats
 309:modem.c       ****             // If cell signal (rsrp) is strong enough, break and connect to the network
 310:modem.c       ****             // Otherwise, keep checking rsrp
 311:modem.c       ****             if(modem_stats.rsrp > 26 && modem_stats.rsrp != 255){
 1065              		.loc 1 311 0
 1066 0038 3B4B     		ldr	r3, .L73+8
 1067 003a 5B69     		ldr	r3, [r3, #20]
 1068 003c 1A2B     		cmp	r3, #26
 1069 003e 03DD     		ble	.L64
 1070              		.loc 1 311 0 is_stmt 0 discriminator 1
 1071 0040 394B     		ldr	r3, .L73+8
 1072 0042 5B69     		ldr	r3, [r3, #20]
 1073 0044 FF2B     		cmp	r3, #255
 1074 0046 0AD1     		bne	.L72
 1075              	.L64:
 312:modem.c       ****                 break;
 313:modem.c       ****             }
 314:modem.c       ****             // Delay for 1 second
 315:modem.c       ****             CyDelay(1000u);
 1076              		.loc 1 315 0 is_stmt 1 discriminator 2
 1077 0048 4FF47A70 		mov	r0, #1000
 1078 004c FFF7FEFF 		bl	CyDelay
 306:modem.c       ****             // Get cell network stats
 1079              		.loc 1 306 0 discriminator 2
 1080 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1081 0052 0133     		adds	r3, r3, #1
 1082 0054 FB71     		strb	r3, [r7, #7]
 1083              	.L63:
 306:modem.c       ****             // Get cell network stats
 1084              		.loc 1 306 0 is_stmt 0 discriminator 1
 1085 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1086 0058 1D2B     		cmp	r3, #29
 1087 005a EBD9     		bls	.L66
 1088 005c 00E0     		b	.L65
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 27


 1089              	.L72:
 312:modem.c       ****                 break;
 1090              		.loc 1 312 0 is_stmt 1
 1091 005e 00BF     		nop
 1092              	.L65:
 1093              	.LBE7:
 316:modem.c       ****         }
 317:modem.c       ****         
 318:modem.c       ****         // If modem connected to the cell network, save/print the time to connect to the network
 319:modem.c       ****         if(is_connected_to_cell_network()){
 1094              		.loc 1 319 0
 1095 0060 FFF7FEFF 		bl	is_connected_to_cell_network
 1096 0064 0346     		mov	r3, r0
 1097 0066 002B     		cmp	r3, #0
 1098 0068 13D0     		beq	.L67
 320:modem.c       ****       
 321:modem.c       ****              modem_stats.time_to_network_connect = (int)(getTimeStamp() - (int32)modem_start_time_s
 1099              		.loc 1 321 0
 1100 006a FFF7FEFF 		bl	getTimeStamp
 1101 006e 0246     		mov	r2, r0
 1102 0070 2C4B     		ldr	r3, .L73+4
 1103 0072 1B68     		ldr	r3, [r3]
 1104 0074 D31A     		subs	r3, r2, r3
 1105 0076 2C4A     		ldr	r2, .L73+8
 1106 0078 9361     		str	r3, [r2, #24]
 322:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Time to connect to network: %d seconds",
 1107              		.loc 1 322 0
 1108 007a 2B4B     		ldr	r3, .L73+8
 1109 007c 9B69     		ldr	r3, [r3, #24]
 1110 007e 1A46     		mov	r2, r3
 1111 0080 2A49     		ldr	r1, .L73+12
 1112 0082 0020     		movs	r0, #0
 1113 0084 FFF7FEFF 		bl	printNotif
 323:modem.c       ****                                             modem_stats.time_to_network_connect);
 324:modem.c       ****             set_up_internet_connection(); // Setup the internet connection
 1114              		.loc 1 324 0
 1115 0088 FFF7FEFF 		bl	set_up_internet_connection
 325:modem.c       ****             modem_state = MODEM_STATE_WAITING_FOR_IP; // Change modem state 
 1116              		.loc 1 325 0
 1117 008c 244B     		ldr	r3, .L73
 1118 008e 0322     		movs	r2, #3
 1119 0090 1A70     		strb	r2, [r3]
 1120              	.L67:
 326:modem.c       ****         }
 327:modem.c       ****         
 328:modem.c       ****         //power off if we time out should only take ~30 secs to connect to network
 329:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_NETWORK_CONNECT){
 1121              		.loc 1 329 0
 1122 0092 FFF7FEFF 		bl	getTimeStamp
 1123 0096 0246     		mov	r2, r0
 1124 0098 224B     		ldr	r3, .L73+4
 1125 009a 1B68     		ldr	r3, [r3]
 1126 009c D31A     		subs	r3, r2, r3
 1127 009e B42B     		cmp	r3, #180
 1128 00a0 08DD     		ble	.L68
 330:modem.c       ****             modem_state = MODEM_STATE_OFF; // Change modem state
 1129              		.loc 1 330 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 28


 1130 00a2 1F4B     		ldr	r3, .L73
 1131 00a4 0022     		movs	r2, #0
 1132 00a6 1A70     		strb	r2, [r3]
 331:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1133              		.loc 1 331 0
 1134 00a8 FFF7FEFF 		bl	modem_power_down
 332:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on network connect");
 1135              		.loc 1 332 0
 1136 00ac 2049     		ldr	r1, .L73+16
 1137 00ae 0220     		movs	r0, #2
 1138 00b0 FFF7FEFF 		bl	printNotif
 1139              	.L68:
 333:modem.c       ****             
 334:modem.c       ****         }
 335:modem.c       ****         return 0u;//ok to hand off to sleep
 1140              		.loc 1 335 0
 1141 00b4 0023     		movs	r3, #0
 1142 00b6 2EE0     		b	.L61
 1143              	.L62:
 336:modem.c       ****         
 337:modem.c       ****     // Else if modem state is "waiting for IP"
 338:modem.c       ****     }else if(modem_state == MODEM_STATE_WAITING_FOR_IP){
 1144              		.loc 1 338 0
 1145 00b8 194B     		ldr	r3, .L73
 1146 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1147 00bc 032B     		cmp	r3, #3
 1148 00be 29D1     		bne	.L69
 339:modem.c       ****         // If the modem is connected to the internet, change modem state to "ready", save/print tim
 340:modem.c       ****         if(is_connected_to_internet()){
 1149              		.loc 1 340 0
 1150 00c0 FFF7FEFF 		bl	is_connected_to_internet
 1151 00c4 0346     		mov	r3, r0
 1152 00c6 002B     		cmp	r3, #0
 1153 00c8 11D0     		beq	.L70
 341:modem.c       ****             modem_state = MODEM_STATE_READY; // Change modem state
 1154              		.loc 1 341 0
 1155 00ca 154B     		ldr	r3, .L73
 1156 00cc 0422     		movs	r2, #4
 1157 00ce 1A70     		strb	r2, [r3]
 342:modem.c       ****             // Save/print time to acquire IP address
 343:modem.c       ****             modem_stats.time_to_acquire_ip = (int)(getTimeStamp() - (int32)modem_start_time_stamp);
 1158              		.loc 1 343 0
 1159 00d0 FFF7FEFF 		bl	getTimeStamp
 1160 00d4 0246     		mov	r2, r0
 1161 00d6 134B     		ldr	r3, .L73+4
 1162 00d8 1B68     		ldr	r3, [r3]
 1163 00da D31A     		subs	r3, r2, r3
 1164 00dc 124A     		ldr	r2, .L73+8
 1165 00de D361     		str	r3, [r2, #28]
 344:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Acquired IP address: %d seconds",
 1166              		.loc 1 344 0
 1167 00e0 114B     		ldr	r3, .L73+8
 1168 00e2 DB69     		ldr	r3, [r3, #28]
 1169 00e4 1A46     		mov	r2, r3
 1170 00e6 1349     		ldr	r1, .L73+20
 1171 00e8 0020     		movs	r0, #0
 1172 00ea FFF7FEFF 		bl	printNotif
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 29


 1173              	.L70:
 345:modem.c       ****                                             modem_stats.time_to_acquire_ip);
 346:modem.c       ****         }
 347:modem.c       ****         
 348:modem.c       ****         // Power off if we times out should only take ~30 secs to connect to network
 349:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_IP_ACQUIRE){
 1174              		.loc 1 349 0
 1175 00ee FFF7FEFF 		bl	getTimeStamp
 1176 00f2 0246     		mov	r2, r0
 1177 00f4 0B4B     		ldr	r3, .L73+4
 1178 00f6 1B68     		ldr	r3, [r3]
 1179 00f8 D31A     		subs	r3, r2, r3
 1180 00fa E62B     		cmp	r3, #230
 1181 00fc 08DD     		ble	.L71
 350:modem.c       ****             modem_state = MODEM_STATE_OFF;
 1182              		.loc 1 350 0
 1183 00fe 084B     		ldr	r3, .L73
 1184 0100 0022     		movs	r2, #0
 1185 0102 1A70     		strb	r2, [r3]
 351:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1186              		.loc 1 351 0
 1187 0104 FFF7FEFF 		bl	modem_power_down
 352:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on IP address acquire.");
 1188              		.loc 1 352 0
 1189 0108 0B49     		ldr	r1, .L73+24
 1190 010a 0220     		movs	r0, #2
 1191 010c FFF7FEFF 		bl	printNotif
 1192              	.L71:
 353:modem.c       ****       
 354:modem.c       ****         }
 355:modem.c       ****         return 0u;//ok to hand off to sleep
 1193              		.loc 1 355 0
 1194 0110 0023     		movs	r3, #0
 1195 0112 00E0     		b	.L61
 1196              	.L69:
 356:modem.c       ****     }
 357:modem.c       ****     
 358:modem.c       ****     return 0u;
 1197              		.loc 1 358 0
 1198 0114 0023     		movs	r3, #0
 1199              	.L61:
 359:modem.c       ****     
 360:modem.c       **** }
 1200              		.loc 1 360 0
 1201 0116 1846     		mov	r0, r3
 1202 0118 0837     		adds	r7, r7, #8
 1203              		.cfi_def_cfa_offset 8
 1204 011a BD46     		mov	sp, r7
 1205              		.cfi_def_cfa_register 13
 1206              		@ sp needed
 1207 011c 80BD     		pop	{r7, pc}
 1208              	.L74:
 1209 011e 00BF     		.align	2
 1210              	.L73:
 1211 0120 00000000 		.word	modem_state
 1212 0124 00000000 		.word	modem_start_time_stamp
 1213 0128 00000000 		.word	modem_stats
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 30


 1214 012c 9C010000 		.word	.LC13
 1215 0130 C4010000 		.word	.LC14
 1216 0134 E8010000 		.word	.LC15
 1217 0138 08020000 		.word	.LC16
 1218              		.cfi_endproc
 1219              	.LFE75:
 1220              		.size	modem_process_tasks, .-modem_process_tasks
 1221              		.section	.rodata
 1222 022f 00       		.align	2
 1223              	.LC17:
 1224 0230 43686563 		.ascii	"Checking AT+CREG?\000"
 1224      6B696E67 
 1224      2041542B 
 1224      43524547 
 1224      3F00
 1225 0242 0000     		.align	2
 1226              	.LC18:
 1227 0244 41542B43 		.ascii	"AT+CREG?\015\000"
 1227      5245473F 
 1227      0D00
 1228 024e 0000     		.align	2
 1229              	.LC19:
 1230 0250 45787472 		.ascii	"Extracting string AT+CREG?\000"
 1230      61637469 
 1230      6E672073 
 1230      7472696E 
 1230      67204154 
 1231 026b 00       		.align	2
 1232              	.LC20:
 1233 026c 75617274 		.ascii	"uart_received_string: %s\000"
 1233      5F726563 
 1233      65697665 
 1233      645F7374 
 1233      72696E67 
 1234 0285 000000   		.align	2
 1235              	.LC21:
 1236 0288 0D00     		.ascii	"\015\000"
 1237 028a 0000     		.align	2
 1238              	.LC22:
 1239 028c 3A2000   		.ascii	": \000"
 1240 028f 00       		.align	2
 1241              	.LC23:
 1242 0290 52656769 		.ascii	"Registered to network, CREG: %s\000"
 1242      73746572 
 1242      65642074 
 1242      6F206E65 
 1242      74776F72 
 1243              		.align	2
 1244              	.LC24:
 1245 02b0 446F6E65 		.ascii	"Done extracing string AT+CREG?\000"
 1245      20657874 
 1245      72616369 
 1245      6E672073 
 1245      7472696E 
 1246 02cf 00       		.align	2
 1247              	.LC25:
 1248 02d0 302C3100 		.ascii	"0,1\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 31


 1249              		.align	2
 1250              	.LC26:
 1251 02d4 302C3500 		.ascii	"0,5\000"
 1252              		.section	.text.is_connected_to_cell_network,"ax",%progbits
 1253              		.align	2
 1254              		.global	is_connected_to_cell_network
 1255              		.thumb
 1256              		.thumb_func
 1257              		.type	is_connected_to_cell_network, %function
 1258              	is_connected_to_cell_network:
 1259              	.LFB76:
 361:modem.c       **** 
 362:modem.c       **** // Checks network status, writes commands to the modem, then extracts string from UART
 363:modem.c       **** uint8 is_connected_to_cell_network(){
 1260              		.loc 1 363 0
 1261              		.cfi_startproc
 1262              		@ args = 0, pretend = 0, frame = 16
 1263              		@ frame_needed = 1, uses_anonymous_args = 0
 1264 0000 80B5     		push	{r7, lr}
 1265              		.cfi_def_cfa_offset 8
 1266              		.cfi_offset 7, -8
 1267              		.cfi_offset 14, -4
 1268 0002 84B0     		sub	sp, sp, #16
 1269              		.cfi_def_cfa_offset 24
 1270 0004 00AF     		add	r7, sp, #0
 1271              		.cfi_def_cfa_register 7
 364:modem.c       ****     // AT command AT+CREG? is the Network Registration Report to check network status -- need '0,0'
 365:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Checking AT+CREG?");
 1272              		.loc 1 365 0
 1273 0006 2049     		ldr	r1, .L80
 1274 0008 0020     		movs	r0, #0
 1275 000a FFF7FEFF 		bl	printNotif
 366:modem.c       ****     // create new uint8 variable stust and set to equal the output of the function at_write_command
 367:modem.c       ****     uint8 status = at_write_command("AT+CREG?\r", "OK",DEFAULT_AT_TIMEOUT);
 1276              		.loc 1 367 0
 1277 000e 4FF4FA62 		mov	r2, #2000
 1278 0012 1E49     		ldr	r1, .L80+4
 1279 0014 1E48     		ldr	r0, .L80+8
 1280 0016 FFF7FEFF 		bl	at_write_command
 1281 001a 0346     		mov	r3, r0
 1282 001c FB73     		strb	r3, [r7, #15]
 368:modem.c       ****     
 369:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Extracting string AT+CREG?");
 1283              		.loc 1 369 0
 1284 001e 1D49     		ldr	r1, .L80+12
 1285 0020 0020     		movs	r0, #0
 1286 0022 FFF7FEFF 		bl	printNotif
 370:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"uart_received_string: %s",uart_received_string);
 1287              		.loc 1 370 0
 1288 0026 1C4A     		ldr	r2, .L80+16
 1289 0028 1C49     		ldr	r1, .L80+20
 1290 002a 0020     		movs	r0, #0
 1291 002c FFF7FEFF 		bl	printNotif
 371:modem.c       ****     
 372:modem.c       ****     // If the modem has a status
 373:modem.c       ****     if(status){
 1292              		.loc 1 373 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 32


 1293 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1294 0032 002B     		cmp	r3, #0
 1295 0034 23D0     		beq	.L76
 1296              	.LBB8:
 374:modem.c       ****         // Create a character array of length 10 called creg
 375:modem.c       ****         char creg[10];
 376:modem.c       ****         creg[0] = '\0';
 1297              		.loc 1 376 0
 1298 0036 0023     		movs	r3, #0
 1299 0038 3B71     		strb	r3, [r7, #4]
 377:modem.c       ****         // Extract string from the UART
 378:modem.c       ****         extract_string(uart_received_string,": ","\r",creg);
 1300              		.loc 1 378 0
 1301 003a 3B1D     		adds	r3, r7, #4
 1302 003c 184A     		ldr	r2, .L80+24
 1303 003e 1949     		ldr	r1, .L80+28
 1304 0040 1548     		ldr	r0, .L80+16
 1305 0042 FFF7FEFF 		bl	extract_string
 379:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Registered to network, CREG: %s",creg);
 1306              		.loc 1 379 0
 1307 0046 3B1D     		adds	r3, r7, #4
 1308 0048 1A46     		mov	r2, r3
 1309 004a 1749     		ldr	r1, .L80+32
 1310 004c 0020     		movs	r0, #0
 1311 004e FFF7FEFF 		bl	printNotif
 380:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Done extracing string AT+CREG?");
 1312              		.loc 1 380 0
 1313 0052 1649     		ldr	r1, .L80+36
 1314 0054 0020     		movs	r0, #0
 1315 0056 FFF7FEFF 		bl	printNotif
 381:modem.c       ****     
 382:modem.c       ****         // Search creg for "0,1" or "0,5", if either exists and either is not equal to NULL, return
 383:modem.c       ****         if((strstr(creg,"0,1")!=NULL)||(strstr(creg,"0,5")!=NULL)){
 1316              		.loc 1 383 0
 1317 005a 3B1D     		adds	r3, r7, #4
 1318 005c 1449     		ldr	r1, .L80+40
 1319 005e 1846     		mov	r0, r3
 1320 0060 FFF7FEFF 		bl	strstr
 1321 0064 0346     		mov	r3, r0
 1322 0066 002B     		cmp	r3, #0
 1323 0068 07D1     		bne	.L77
 1324              		.loc 1 383 0 is_stmt 0 discriminator 1
 1325 006a 3B1D     		adds	r3, r7, #4
 1326 006c 1149     		ldr	r1, .L80+44
 1327 006e 1846     		mov	r0, r3
 1328 0070 FFF7FEFF 		bl	strstr
 1329 0074 0346     		mov	r3, r0
 1330 0076 002B     		cmp	r3, #0
 1331 0078 01D0     		beq	.L76
 1332              	.L77:
 384:modem.c       ****             return 1u;
 1333              		.loc 1 384 0 is_stmt 1
 1334 007a 0123     		movs	r3, #1
 1335 007c 00E0     		b	.L79
 1336              	.L76:
 1337              	.LBE8:
 385:modem.c       ****         }
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 33


 386:modem.c       ****     }
 387:modem.c       ****     // If the modem doesn't have a status, return 0u
 388:modem.c       ****     return 0u;
 1338              		.loc 1 388 0
 1339 007e 0023     		movs	r3, #0
 1340              	.L79:
 389:modem.c       ****         
 390:modem.c       **** }
 1341              		.loc 1 390 0
 1342 0080 1846     		mov	r0, r3
 1343 0082 1037     		adds	r7, r7, #16
 1344              		.cfi_def_cfa_offset 8
 1345 0084 BD46     		mov	sp, r7
 1346              		.cfi_def_cfa_register 13
 1347              		@ sp needed
 1348 0086 80BD     		pop	{r7, pc}
 1349              	.L81:
 1350              		.align	2
 1351              	.L80:
 1352 0088 30020000 		.word	.LC17
 1353 008c 00000000 		.word	.LC0
 1354 0090 44020000 		.word	.LC18
 1355 0094 50020000 		.word	.LC19
 1356 0098 00000000 		.word	uart_received_string
 1357 009c 6C020000 		.word	.LC20
 1358 00a0 88020000 		.word	.LC21
 1359 00a4 8C020000 		.word	.LC22
 1360 00a8 90020000 		.word	.LC23
 1361 00ac B0020000 		.word	.LC24
 1362 00b0 D0020000 		.word	.LC25
 1363 00b4 D4020000 		.word	.LC26
 1364              		.cfi_endproc
 1365              	.LFE76:
 1366              		.size	is_connected_to_cell_network, .-is_connected_to_cell_network
 1367              		.section	.rodata
 1368              		.align	2
 1369              	.LC27:
 1370 02d8 41542353 		.ascii	"AT#SGACT=1,1\015\012\000"
 1370      47414354 
 1370      3D312C31 
 1370      0D0A00
 1371              		.section	.text.set_up_internet_connection,"ax",%progbits
 1372              		.align	2
 1373              		.global	set_up_internet_connection
 1374              		.thumb
 1375              		.thumb_func
 1376              		.type	set_up_internet_connection, %function
 1377              	set_up_internet_connection:
 1378              	.LFB77:
 391:modem.c       **** 
 392:modem.c       **** // Connect the modem to the internet
 393:modem.c       **** void set_up_internet_connection(){
 1379              		.loc 1 393 0
 1380              		.cfi_startproc
 1381              		@ args = 0, pretend = 0, frame = 0
 1382              		@ frame_needed = 1, uses_anonymous_args = 0
 1383 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 34


 1384              		.cfi_def_cfa_offset 8
 1385              		.cfi_offset 7, -8
 1386              		.cfi_offset 14, -4
 1387 0002 00AF     		add	r7, sp, #0
 1388              		.cfi_def_cfa_register 7
 394:modem.c       ****     
 395:modem.c       ****     //port 3
 396:modem.c       ****    //<connId>,<srMode>,<dataMode>, 
 397:modem.c       ****     //at_write_command("AT#SCFGEXT=1,1,0,0,0,0\r", "OK",DEFAULT_AT_TIMEOUT);////LTE modem relevant
 398:modem.c       ****     
 399:modem.c       ****     //<connId>,<cid>,<pktSz>,<maxTo>,<connTo>,<txTo>
 400:modem.c       ****     //at_write_command("AT#SCFG=1,3,300,90,600,50\r", "OK",DEFAULT_AT_TIMEOUT); //LTE modem relevan
 401:modem.c       ****     // <cid>,<stat>
 402:modem.c       ****    
 403:modem.c       ****     // AT command SGACT is Context Activation command is used to activate the specified PDP context
 404:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",1000u);
 1389              		.loc 1 404 0
 1390 0004 4FF47A72 		mov	r2, #1000
 1391 0008 0249     		ldr	r1, .L83
 1392 000a 0348     		ldr	r0, .L83+4
 1393 000c FFF7FEFF 		bl	at_write_command
 405:modem.c       ****     
 406:modem.c       **** }
 1394              		.loc 1 406 0
 1395 0010 00BF     		nop
 1396 0012 80BD     		pop	{r7, pc}
 1397              	.L84:
 1398              		.align	2
 1399              	.L83:
 1400 0014 00000000 		.word	.LC0
 1401 0018 D8020000 		.word	.LC27
 1402              		.cfi_endproc
 1403              	.LFE77:
 1404              		.size	set_up_internet_connection, .-set_up_internet_connection
 1405              		.section	.rodata
 1406 02e7 00       		.align	2
 1407              	.LC28:
 1408 02e8 312C3100 		.ascii	"1,1\000"
 1409              		.align	2
 1410              	.LC29:
 1411 02ec 41542353 		.ascii	"AT#SGACT?\015\000"
 1411      47414354 
 1411      3F0D00
 1412              		.section	.text.is_connected_to_internet,"ax",%progbits
 1413              		.align	2
 1414              		.global	is_connected_to_internet
 1415              		.thumb
 1416              		.thumb_func
 1417              		.type	is_connected_to_internet, %function
 1418              	is_connected_to_internet:
 1419              	.LFB78:
 407:modem.c       **** 
 408:modem.c       **** // Checks if the modem is connected to the internet
 409:modem.c       **** uint8 is_connected_to_internet(){
 1420              		.loc 1 409 0
 1421              		.cfi_startproc
 1422              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 35


 1423              		@ frame_needed = 1, uses_anonymous_args = 0
 1424 0000 80B5     		push	{r7, lr}
 1425              		.cfi_def_cfa_offset 8
 1426              		.cfi_offset 7, -8
 1427              		.cfi_offset 14, -4
 1428 0002 00AF     		add	r7, sp, #0
 1429              		.cfi_def_cfa_register 7
 410:modem.c       ****     // AT command SGACT? reports the range for the parameters <cid> and <stat>
 411:modem.c       ****     // cid: is the Packet Data Protocol (PDP) Context Identifier which specifies the particular PDP
 412:modem.c       ****     // stat: gives the context staus (0 deactivated and 1 activated)
 413:modem.c       ****     // Check for 3,1 if Verizon 
 414:modem.c       ****     if(at_write_command("AT#SGACT?\r", "1,1",DEFAULT_AT_TIMEOUT)){
 1430              		.loc 1 414 0
 1431 0004 4FF4FA62 		mov	r2, #2000
 1432 0008 0549     		ldr	r1, .L88
 1433 000a 0648     		ldr	r0, .L88+4
 1434 000c FFF7FEFF 		bl	at_write_command
 1435 0010 0346     		mov	r3, r0
 1436 0012 002B     		cmp	r3, #0
 1437 0014 01D0     		beq	.L86
 415:modem.c       ****         return 1u;
 1438              		.loc 1 415 0
 1439 0016 0123     		movs	r3, #1
 1440 0018 00E0     		b	.L87
 1441              	.L86:
 416:modem.c       ****     }
 417:modem.c       ****     return 0u;  
 1442              		.loc 1 417 0
 1443 001a 0023     		movs	r3, #0
 1444              	.L87:
 418:modem.c       **** }
 1445              		.loc 1 418 0
 1446 001c 1846     		mov	r0, r3
 1447 001e 80BD     		pop	{r7, pc}
 1448              	.L89:
 1449              		.align	2
 1450              	.L88:
 1451 0020 E8020000 		.word	.LC28
 1452 0024 EC020000 		.word	.LC29
 1453              		.cfi_endproc
 1454              	.LFE78:
 1455              		.size	is_connected_to_internet, .-is_connected_to_internet
 1456              		.section	.rodata
 1457 02f7 00       		.align	2
 1458              	.LC30:
 1459 02f8 41542B43 		.ascii	"AT+CESQ\015\000"
 1459      4553510D 
 1459      00
 1460 0301 000000   		.align	2
 1461              	.LC31:
 1462 0304 0D0A2B43 		.ascii	"\015\012+CESQ: %d,%d,%d,%d,%d,%d%*s\000"
 1462      4553513A 
 1462      2025642C 
 1462      25642C25 
 1462      642C2564 
 1463              		.section	.text.get_cell_network_stats,"ax",%progbits
 1464              		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 36


 1465              		.global	get_cell_network_stats
 1466              		.thumb
 1467              		.thumb_func
 1468              		.type	get_cell_network_stats, %function
 1469              	get_cell_network_stats:
 1470              	.LFB79:
 419:modem.c       **** 
 420:modem.c       **** void get_cell_network_stats(){
 1471              		.loc 1 420 0
 1472              		.cfi_startproc
 1473              		@ args = 0, pretend = 0, frame = 8
 1474              		@ frame_needed = 1, uses_anonymous_args = 0
 1475 0000 80B5     		push	{r7, lr}
 1476              		.cfi_def_cfa_offset 8
 1477              		.cfi_offset 7, -8
 1478              		.cfi_offset 14, -4
 1479 0002 86B0     		sub	sp, sp, #24
 1480              		.cfi_def_cfa_offset 32
 1481 0004 04AF     		add	r7, sp, #16
 1482              		.cfi_def_cfa 7, 16
 421:modem.c       ****     // Initialize values
 422:modem.c       ****     modem_stats.ber = 255;
 1483              		.loc 1 422 0
 1484 0006 154B     		ldr	r3, .L91
 1485 0008 FF22     		movs	r2, #255
 1486 000a 5A60     		str	r2, [r3, #4]
 423:modem.c       ****     modem_stats.ecno = 255;
 1487              		.loc 1 423 0
 1488 000c 134B     		ldr	r3, .L91
 1489 000e FF22     		movs	r2, #255
 1490 0010 DA60     		str	r2, [r3, #12]
 424:modem.c       ****     modem_stats.rscp = 255;
 1491              		.loc 1 424 0
 1492 0012 124B     		ldr	r3, .L91
 1493 0014 FF22     		movs	r2, #255
 1494 0016 9A60     		str	r2, [r3, #8]
 425:modem.c       ****     modem_stats.rsrp = 255;
 1495              		.loc 1 425 0
 1496 0018 104B     		ldr	r3, .L91
 1497 001a FF22     		movs	r2, #255
 1498 001c 5A61     		str	r2, [r3, #20]
 426:modem.c       ****     modem_stats.rsrq = 255;
 1499              		.loc 1 426 0
 1500 001e 0F4B     		ldr	r3, .L91
 1501 0020 FF22     		movs	r2, #255
 1502 0022 1A61     		str	r2, [r3, #16]
 427:modem.c       ****     modem_stats.rxlev = 255;
 1503              		.loc 1 427 0
 1504 0024 0D4B     		ldr	r3, .L91
 1505 0026 FF22     		movs	r2, #255
 1506 0028 1A60     		str	r2, [r3]
 428:modem.c       **** 
 429:modem.c       ****     //for(uint8 attempts =0; attempts <10; attempts++){
 430:modem.c       ****     at_write_command("AT+CESQ\r", "OK", DEFAULT_AT_TIMEOUT);
 1507              		.loc 1 430 0
 1508 002a 4FF4FA62 		mov	r2, #2000
 1509 002e 0C49     		ldr	r1, .L91+4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 37


 1510 0030 0C48     		ldr	r0, .L91+8
 1511 0032 FFF7FEFF 		bl	at_write_command
 431:modem.c       ****     //CESQ: <rxlev>,<ber>,<rscp>,<ecno>,<rsrq>,<rsrp>
 432:modem.c       **** 
 433:modem.c       ****     int match = sscanf(uart_received_string,"\r\n+CESQ: %d,%d,%d,%d,%d,%d%*s",
 1512              		.loc 1 433 0
 1513 0036 0C4B     		ldr	r3, .L91+12
 1514 0038 0393     		str	r3, [sp, #12]
 1515 003a 0C4B     		ldr	r3, .L91+16
 1516 003c 0293     		str	r3, [sp, #8]
 1517 003e 0C4B     		ldr	r3, .L91+20
 1518 0040 0193     		str	r3, [sp, #4]
 1519 0042 0C4B     		ldr	r3, .L91+24
 1520 0044 0093     		str	r3, [sp]
 1521 0046 0C4B     		ldr	r3, .L91+28
 1522 0048 044A     		ldr	r2, .L91
 1523 004a 0C49     		ldr	r1, .L91+32
 1524 004c 0C48     		ldr	r0, .L91+36
 1525 004e FFF7FEFF 		bl	sscanf
 1526 0052 7860     		str	r0, [r7, #4]
 434:modem.c       ****         &modem_stats.rxlev,
 435:modem.c       ****         &modem_stats.ber,
 436:modem.c       ****         &modem_stats.rscp,
 437:modem.c       ****         &modem_stats.ecno,
 438:modem.c       ****         &modem_stats.rsrq,
 439:modem.c       ****         &modem_stats.rsrp);
 440:modem.c       **** 
 441:modem.c       ****         //check to see if we’re getting a good received signal strength
 442:modem.c       ****         //if(modem_stats.rsrp != 255 && modem_stats.rsrp > 26){// || modem_stats.rxlev !=0){
 443:modem.c       ****         //    break;
 444:modem.c       ****         //}
 445:modem.c       ****         // Delay one second
 446:modem.c       ****         //CyDelay(1000u);
 447:modem.c       ****     //}
 448:modem.c       **** }
 1527              		.loc 1 448 0
 1528 0054 00BF     		nop
 1529 0056 0837     		adds	r7, r7, #8
 1530              		.cfi_def_cfa_offset 8
 1531 0058 BD46     		mov	sp, r7
 1532              		.cfi_def_cfa_register 13
 1533              		@ sp needed
 1534 005a 80BD     		pop	{r7, pc}
 1535              	.L92:
 1536              		.align	2
 1537              	.L91:
 1538 005c 00000000 		.word	modem_stats
 1539 0060 00000000 		.word	.LC0
 1540 0064 F8020000 		.word	.LC30
 1541 0068 14000000 		.word	modem_stats+20
 1542 006c 10000000 		.word	modem_stats+16
 1543 0070 0C000000 		.word	modem_stats+12
 1544 0074 08000000 		.word	modem_stats+8
 1545 0078 04000000 		.word	modem_stats+4
 1546 007c 04030000 		.word	.LC31
 1547 0080 00000000 		.word	uart_received_string
 1548              		.cfi_endproc
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 38


 1549              	.LFE79:
 1550              		.size	get_cell_network_stats, .-get_cell_network_stats
 1551              		.section	.text.updatable_parameters_initialize,"ax",%progbits
 1552              		.align	2
 1553              		.global	updatable_parameters_initialize
 1554              		.thumb
 1555              		.thumb_func
 1556              		.type	updatable_parameters_initialize, %function
 1557              	updatable_parameters_initialize:
 1558              	.LFB80:
 449:modem.c       **** 
 450:modem.c       **** // Initialize updatable parameters (sampling, reporting, and debug frequencies)
 451:modem.c       **** void updatable_parameters_initialize(){
 1559              		.loc 1 451 0
 1560              		.cfi_startproc
 1561              		@ args = 0, pretend = 0, frame = 0
 1562              		@ frame_needed = 1, uses_anonymous_args = 0
 1563              		@ link register save eliminated.
 1564 0000 80B4     		push	{r7}
 1565              		.cfi_def_cfa_offset 4
 1566              		.cfi_offset 7, -4
 1567 0002 00AF     		add	r7, sp, #0
 1568              		.cfi_def_cfa_register 7
 452:modem.c       ****     updatable_parameters.node_type = NODE_TYPE_SONTEK_FLOW;
 1569              		.loc 1 452 0
 1570 0004 094B     		ldr	r3, .L94
 1571 0006 0222     		movs	r2, #2
 1572 0008 1A70     		strb	r2, [r3]
 453:modem.c       ****     updatable_parameters.sim_type = SIM_TYPE_STANDARD;
 1573              		.loc 1 453 0
 1574 000a 084B     		ldr	r3, .L94
 1575 000c 0022     		movs	r2, #0
 1576 000e 5A70     		strb	r2, [r3, #1]
 454:modem.c       ****     updatable_parameters.measure_time = 10u; //in minutes
 1577              		.loc 1 454 0
 1578 0010 064B     		ldr	r3, .L94
 1579 0012 0A22     		movs	r2, #10
 1580 0014 9A70     		strb	r2, [r3, #2]
 455:modem.c       ****     updatable_parameters.sync_time = 60u;   //in minutes
 1581              		.loc 1 455 0
 1582 0016 054B     		ldr	r3, .L94
 1583 0018 3C22     		movs	r2, #60
 1584 001a DA70     		strb	r2, [r3, #3]
 456:modem.c       ****     updatable_parameters.debug_level = 1u;
 1585              		.loc 1 456 0
 1586 001c 034B     		ldr	r3, .L94
 1587 001e 0122     		movs	r2, #1
 1588 0020 1A71     		strb	r2, [r3, #4]
 457:modem.c       **** }
 1589              		.loc 1 457 0
 1590 0022 00BF     		nop
 1591 0024 BD46     		mov	sp, r7
 1592              		.cfi_def_cfa_register 13
 1593              		@ sp needed
 1594 0026 80BC     		pop	{r7}
 1595              		.cfi_restore 7
 1596              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 39


 1597 0028 7047     		bx	lr
 1598              	.L95:
 1599 002a 00BF     		.align	2
 1600              	.L94:
 1601 002c 00000000 		.word	updatable_parameters
 1602              		.cfi_endproc
 1603              	.LFE80:
 1604              		.size	updatable_parameters_initialize, .-updatable_parameters_initialize
 1605              		.section	.rodata
 1606 0322 0000     		.align	2
 1607              	.LC32:
 1608 0324 4E6F6465 		.ascii	"Node_Type: \000"
 1608      5F547970 
 1608      653A2000 
 1609              		.align	2
 1610              	.LC33:
 1611 0330 53494D5F 		.ascii	"SIM_Type: \000"
 1611      54797065 
 1611      3A2000
 1612 033b 00       		.align	2
 1613              	.LC34:
 1614 033c 53616D70 		.ascii	"Sample_Freq: \000"
 1614      6C655F46 
 1614      7265713A 
 1614      2000
 1615 034a 0000     		.align	2
 1616              	.LC35:
 1617 034c 5265706F 		.ascii	"Report_Freq: \000"
 1617      72745F46 
 1617      7265713A 
 1617      2000
 1618 035a 0000     		.align	2
 1619              	.LC36:
 1620 035c 44656275 		.ascii	"Debug_Freq: \000"
 1620      675F4672 
 1620      65713A20 
 1620      00
 1621 0369 000000   		.align	2
 1622              	.LC37:
 1623 036c 256400   		.ascii	"%d\000"
 1624 036f 00       		.align	2
 1625              	.LC38:
 1626 0370 4E6F6465 		.ascii	"Node type changed to: %d\015\012\000"
 1626      20747970 
 1626      65206368 
 1626      616E6765 
 1626      6420746F 
 1627 038b 00       		.align	2
 1628              	.LC39:
 1629 038c 436F756C 		.ascii	"Could not change node type.\000"
 1629      64206E6F 
 1629      74206368 
 1629      616E6765 
 1629      206E6F64 
 1630              		.align	2
 1631              	.LC40:
 1632 03a8 53494D20 		.ascii	"SIM type changed to: %d\015\012\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 40


 1632      74797065 
 1632      20636861 
 1632      6E676564 
 1632      20746F3A 
 1633 03c2 0000     		.align	2
 1634              	.LC41:
 1635 03c4 436F756C 		.ascii	"Could not change SIM type.\000"
 1635      64206E6F 
 1635      74206368 
 1635      616E6765 
 1635      2053494D 
 1636 03df 00       		.align	2
 1637              	.LC42:
 1638 03e0 53616D70 		.ascii	"Sampling frequency changed to: %d\015\012\000"
 1638      6C696E67 
 1638      20667265 
 1638      7175656E 
 1638      63792063 
 1639              		.align	2
 1640              	.LC43:
 1641 0404 436F756C 		.ascii	"Could not parse new sampling frequency value.\000"
 1641      64206E6F 
 1641      74207061 
 1641      72736520 
 1641      6E657720 
 1642 0432 0000     		.align	2
 1643              	.LC44:
 1644 0434 5265706F 		.ascii	"Reporting frequency changed to: %d\015\012\000"
 1644      7274696E 
 1644      67206672 
 1644      65717565 
 1644      6E637920 
 1645 0459 000000   		.align	2
 1646              	.LC45:
 1647 045c 436F756C 		.ascii	"Could not parse new reporting frequency value.\000"
 1647      64206E6F 
 1647      74207061 
 1647      72736520 
 1647      6E657720 
 1648 048b 00       		.align	2
 1649              	.LC46:
 1650 048c 44656275 		.ascii	"Debug printing frequency changed to: %d\015\012\000"
 1650      67207072 
 1650      696E7469 
 1650      6E672066 
 1650      72657175 
 1651 04b6 0000     		.align	2
 1652              	.LC47:
 1653 04b8 436F756C 		.ascii	"Could not parse new debugging frequency value.\000"
 1653      64206E6F 
 1653      74207061 
 1653      72736520 
 1653      6E657720 
 1654              		.section	.text.get_updated_parameters_from_malcom,"ax",%progbits
 1655              		.align	2
 1656              		.global	get_updated_parameters_from_malcom
 1657              		.thumb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 41


 1658              		.thumb_func
 1659              		.type	get_updated_parameters_from_malcom, %function
 1660              	get_updated_parameters_from_malcom:
 1661              	.LFB81:
 458:modem.c       **** 
 459:modem.c       **** // Get the update values for sampling frequency, reporting frequency, and the debug level from the 
 460:modem.c       **** void get_updated_parameters_from_malcom(){
 1662              		.loc 1 460 0
 1663              		.cfi_startproc
 1664              		@ args = 0, pretend = 0, frame = 88
 1665              		@ frame_needed = 1, uses_anonymous_args = 0
 1666 0000 90B5     		push	{r4, r7, lr}
 1667              		.cfi_def_cfa_offset 12
 1668              		.cfi_offset 4, -12
 1669              		.cfi_offset 7, -8
 1670              		.cfi_offset 14, -4
 1671 0002 97B0     		sub	sp, sp, #92
 1672              		.cfi_def_cfa_offset 104
 1673 0004 00AF     		add	r7, sp, #0
 1674              		.cfi_def_cfa_register 7
 461:modem.c       ****     
 462:modem.c       ****     // Create character array of size 1024 characters to hold the uart received string
 463:modem.c       ****     char s_node_type[10];
 464:modem.c       ****     char s_sim_type[10];
 465:modem.c       ****     char s_sample_freq[10];
 466:modem.c       ****     char s_report_freq[10];
 467:modem.c       ****     char s_debug_freq[10];
 468:modem.c       ****     
 469:modem.c       ****     s_node_type[0] = '\0';
 1675              		.loc 1 469 0
 1676 0006 0023     		movs	r3, #0
 1677 0008 87F84C30 		strb	r3, [r7, #76]
 470:modem.c       ****     s_sim_type[0] = '\0';
 1678              		.loc 1 470 0
 1679 000c 0023     		movs	r3, #0
 1680 000e 87F84030 		strb	r3, [r7, #64]
 471:modem.c       ****     s_sample_freq[0] = '\0';
 1681              		.loc 1 471 0
 1682 0012 0023     		movs	r3, #0
 1683 0014 87F83430 		strb	r3, [r7, #52]
 472:modem.c       ****     s_report_freq[0] = '\0';
 1684              		.loc 1 472 0
 1685 0018 0023     		movs	r3, #0
 1686 001a 87F82830 		strb	r3, [r7, #40]
 473:modem.c       ****     s_debug_freq[0] = '\0';
 1687              		.loc 1 473 0
 1688 001e 0023     		movs	r3, #0
 1689 0020 3B77     		strb	r3, [r7, #28]
 474:modem.c       ****     
 475:modem.c       ****     // Extract UART string recieved from the modem and save to variables
 476:modem.c       ****     extract_string(uart_received_string,"Node_Type: ","\r",s_node_type);
 1690              		.loc 1 476 0
 1691 0022 07F14C03 		add	r3, r7, #76
 1692 0026 644A     		ldr	r2, .L108
 1693 0028 6449     		ldr	r1, .L108+4
 1694 002a 6548     		ldr	r0, .L108+8
 1695 002c FFF7FEFF 		bl	extract_string
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 42


 477:modem.c       ****     extract_string(uart_received_string,"SIM_Type: ","\r",s_sim_type);
 1696              		.loc 1 477 0
 1697 0030 07F14003 		add	r3, r7, #64
 1698 0034 604A     		ldr	r2, .L108
 1699 0036 6349     		ldr	r1, .L108+12
 1700 0038 6148     		ldr	r0, .L108+8
 1701 003a FFF7FEFF 		bl	extract_string
 478:modem.c       ****     extract_string(uart_received_string,"Sample_Freq: ","\r",s_sample_freq);
 1702              		.loc 1 478 0
 1703 003e 07F13403 		add	r3, r7, #52
 1704 0042 5D4A     		ldr	r2, .L108
 1705 0044 6049     		ldr	r1, .L108+16
 1706 0046 5E48     		ldr	r0, .L108+8
 1707 0048 FFF7FEFF 		bl	extract_string
 479:modem.c       ****     extract_string(uart_received_string,"Report_Freq: ","\r",s_report_freq);
 1708              		.loc 1 479 0
 1709 004c 07F12803 		add	r3, r7, #40
 1710 0050 594A     		ldr	r2, .L108
 1711 0052 5E49     		ldr	r1, .L108+20
 1712 0054 5A48     		ldr	r0, .L108+8
 1713 0056 FFF7FEFF 		bl	extract_string
 480:modem.c       ****     extract_string(uart_received_string,"Debug_Freq: ","\r",s_debug_freq);
 1714              		.loc 1 480 0
 1715 005a 07F11C03 		add	r3, r7, #28
 1716 005e 564A     		ldr	r2, .L108
 1717 0060 5B49     		ldr	r1, .L108+24
 1718 0062 5748     		ldr	r0, .L108+8
 1719 0064 FFF7FEFF 		bl	extract_string
 481:modem.c       ****     
 482:modem.c       ****     // Create variables for what is sent back from the server
 483:modem.c       ****     int node_type, sim_type, sample_freq, report_freq, debug_freq;
 484:modem.c       ****     
 485:modem.c       ****     // Scan character arrays and save values 
 486:modem.c       ****     if(sscanf(s_node_type, "%d", &node_type)==1){
 1720              		.loc 1 486 0
 1721 0068 07F11802 		add	r2, r7, #24
 1722 006c 07F14C03 		add	r3, r7, #76
 1723 0070 5849     		ldr	r1, .L108+28
 1724 0072 1846     		mov	r0, r3
 1725 0074 FFF7FEFF 		bl	sscanf
 1726 0078 0346     		mov	r3, r0
 1727 007a 012B     		cmp	r3, #1
 1728 007c 0AD1     		bne	.L97
 487:modem.c       ****         updatable_parameters.node_type = node_type;
 1729              		.loc 1 487 0
 1730 007e BB69     		ldr	r3, [r7, #24]
 1731 0080 DAB2     		uxtb	r2, r3
 1732 0082 554B     		ldr	r3, .L108+32
 1733 0084 1A70     		strb	r2, [r3]
 488:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Node type changed to: %d\r\n", node_type);
 1734              		.loc 1 488 0
 1735 0086 BB69     		ldr	r3, [r7, #24]
 1736 0088 1A46     		mov	r2, r3
 1737 008a 5449     		ldr	r1, .L108+36
 1738 008c 0020     		movs	r0, #0
 1739 008e FFF7FEFF 		bl	printNotif
 1740 0092 03E0     		b	.L98
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 43


 1741              	.L97:
 489:modem.c       ****     }else{
 490:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not change node type.");
 1742              		.loc 1 490 0
 1743 0094 5249     		ldr	r1, .L108+40
 1744 0096 0220     		movs	r0, #2
 1745 0098 FFF7FEFF 		bl	printNotif
 1746              	.L98:
 491:modem.c       ****     }
 492:modem.c       ****     if(sscanf(s_sim_type, "%d", &sim_type)==1){
 1747              		.loc 1 492 0
 1748 009c 07F11402 		add	r2, r7, #20
 1749 00a0 07F14003 		add	r3, r7, #64
 1750 00a4 4B49     		ldr	r1, .L108+28
 1751 00a6 1846     		mov	r0, r3
 1752 00a8 FFF7FEFF 		bl	sscanf
 1753 00ac 0346     		mov	r3, r0
 1754 00ae 012B     		cmp	r3, #1
 1755 00b0 0ED1     		bne	.L99
 493:modem.c       ****         updatable_parameters.sim_type = sim_type;
 1756              		.loc 1 493 0
 1757 00b2 7B69     		ldr	r3, [r7, #20]
 1758 00b4 002B     		cmp	r3, #0
 1759 00b6 14BF     		ite	ne
 1760 00b8 0123     		movne	r3, #1
 1761 00ba 0023     		moveq	r3, #0
 1762 00bc DAB2     		uxtb	r2, r3
 1763 00be 464B     		ldr	r3, .L108+32
 1764 00c0 5A70     		strb	r2, [r3, #1]
 494:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "SIM type changed to: %d\r\n", sim_type);
 1765              		.loc 1 494 0
 1766 00c2 7B69     		ldr	r3, [r7, #20]
 1767 00c4 1A46     		mov	r2, r3
 1768 00c6 4749     		ldr	r1, .L108+44
 1769 00c8 0020     		movs	r0, #0
 1770 00ca FFF7FEFF 		bl	printNotif
 1771 00ce 03E0     		b	.L100
 1772              	.L99:
 495:modem.c       ****     }else{
 496:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not change SIM type.");
 1773              		.loc 1 496 0
 1774 00d0 4549     		ldr	r1, .L108+48
 1775 00d2 0220     		movs	r0, #2
 1776 00d4 FFF7FEFF 		bl	printNotif
 1777              	.L100:
 497:modem.c       ****     }
 498:modem.c       ****     if(sscanf(s_sample_freq, "%d", &sample_freq)==1){
 1778              		.loc 1 498 0
 1779 00d8 07F11002 		add	r2, r7, #16
 1780 00dc 07F13403 		add	r3, r7, #52
 1781 00e0 3C49     		ldr	r1, .L108+28
 1782 00e2 1846     		mov	r0, r3
 1783 00e4 FFF7FEFF 		bl	sscanf
 1784 00e8 0346     		mov	r3, r0
 1785 00ea 012B     		cmp	r3, #1
 1786 00ec 19D1     		bne	.L101
 499:modem.c       ****         updatable_parameters.measure_time = sample_freq;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 44


 1787              		.loc 1 499 0
 1788 00ee 3B69     		ldr	r3, [r7, #16]
 1789 00f0 DAB2     		uxtb	r2, r3
 1790 00f2 394B     		ldr	r3, .L108+32
 1791 00f4 9A70     		strb	r2, [r3, #2]
 500:modem.c       ****         // Create a continuous alarm called alarmMeasure that triggers at the required time to take
 501:modem.c       ****         alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_C
 1792              		.loc 1 501 0
 1793 00f6 384B     		ldr	r3, .L108+32
 1794 00f8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1795 00fa 99B2     		uxth	r1, r3
 1796 00fc 3B4C     		ldr	r4, .L108+52
 1797 00fe 3846     		mov	r0, r7
 1798 0100 0723     		movs	r3, #7
 1799 0102 0122     		movs	r2, #1
 1800 0104 FFF7FEFF 		bl	CreateAlarm
 1801 0108 2246     		mov	r2, r4
 1802 010a 3B46     		mov	r3, r7
 1803 010c 1968     		ldr	r1, [r3]	@ unaligned
 1804 010e 1160     		str	r1, [r2]	@ unaligned
 1805 0110 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 1806 0112 9380     		strh	r3, [r2, #4]	@ unaligned
 502:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Sampling frequency changed to: %d\r\n", sample_freq);
 1807              		.loc 1 502 0
 1808 0114 3B69     		ldr	r3, [r7, #16]
 1809 0116 1A46     		mov	r2, r3
 1810 0118 3549     		ldr	r1, .L108+56
 1811 011a 0020     		movs	r0, #0
 1812 011c FFF7FEFF 		bl	printNotif
 1813 0120 03E0     		b	.L102
 1814              	.L101:
 503:modem.c       ****     }else{
 504:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new sampling frequency value.");
 1815              		.loc 1 504 0
 1816 0122 3449     		ldr	r1, .L108+60
 1817 0124 0220     		movs	r0, #2
 1818 0126 FFF7FEFF 		bl	printNotif
 1819              	.L102:
 505:modem.c       ****     }
 506:modem.c       ****     if(sscanf(s_report_freq, "%d", &report_freq)==1){
 1820              		.loc 1 506 0
 1821 012a 07F10C02 		add	r2, r7, #12
 1822 012e 07F12803 		add	r3, r7, #40
 1823 0132 2849     		ldr	r1, .L108+28
 1824 0134 1846     		mov	r0, r3
 1825 0136 FFF7FEFF 		bl	sscanf
 1826 013a 0346     		mov	r3, r0
 1827 013c 012B     		cmp	r3, #1
 1828 013e 19D1     		bne	.L103
 507:modem.c       ****         updatable_parameters.sync_time = report_freq;
 1829              		.loc 1 507 0
 1830 0140 FB68     		ldr	r3, [r7, #12]
 1831 0142 DAB2     		uxtb	r2, r3
 1832 0144 244B     		ldr	r3, .L108+32
 1833 0146 DA70     		strb	r2, [r3, #3]
 508:modem.c       ****         // Create a continuous alarm called alarmSync that triggers at the required time to sync th
 509:modem.c       ****         alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINU
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 45


 1834              		.loc 1 509 0
 1835 0148 234B     		ldr	r3, .L108+32
 1836 014a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1837 014c 99B2     		uxth	r1, r3
 1838 014e 2A4C     		ldr	r4, .L108+64
 1839 0150 3846     		mov	r0, r7
 1840 0152 0723     		movs	r3, #7
 1841 0154 0122     		movs	r2, #1
 1842 0156 FFF7FEFF 		bl	CreateAlarm
 1843 015a 2246     		mov	r2, r4
 1844 015c 3B46     		mov	r3, r7
 1845 015e 1968     		ldr	r1, [r3]	@ unaligned
 1846 0160 1160     		str	r1, [r2]	@ unaligned
 1847 0162 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 1848 0164 9380     		strh	r3, [r2, #4]	@ unaligned
 510:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Reporting frequency changed to: %d\r\n", report_freq);
 1849              		.loc 1 510 0
 1850 0166 FB68     		ldr	r3, [r7, #12]
 1851 0168 1A46     		mov	r2, r3
 1852 016a 2449     		ldr	r1, .L108+68
 1853 016c 0020     		movs	r0, #0
 1854 016e FFF7FEFF 		bl	printNotif
 1855 0172 03E0     		b	.L104
 1856              	.L103:
 511:modem.c       ****         }else{
 512:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new reporting frequency value.");
 1857              		.loc 1 512 0
 1858 0174 2249     		ldr	r1, .L108+72
 1859 0176 0220     		movs	r0, #2
 1860 0178 FFF7FEFF 		bl	printNotif
 1861              	.L104:
 513:modem.c       ****     }
 514:modem.c       ****     if(sscanf(s_debug_freq, "%d", &debug_freq)==1){
 1862              		.loc 1 514 0
 1863 017c 07F10802 		add	r2, r7, #8
 1864 0180 07F11C03 		add	r3, r7, #28
 1865 0184 1349     		ldr	r1, .L108+28
 1866 0186 1846     		mov	r0, r3
 1867 0188 FFF7FEFF 		bl	sscanf
 1868 018c 0346     		mov	r3, r0
 1869 018e 012B     		cmp	r3, #1
 1870 0190 0AD1     		bne	.L105
 515:modem.c       ****         updatable_parameters.debug_level = debug_freq;
 1871              		.loc 1 515 0
 1872 0192 BB68     		ldr	r3, [r7, #8]
 1873 0194 DAB2     		uxtb	r2, r3
 1874 0196 104B     		ldr	r3, .L108+32
 1875 0198 1A71     		strb	r2, [r3, #4]
 516:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Debug printing frequency changed to: %d\r\n", debug_freq);
 1876              		.loc 1 516 0
 1877 019a BB68     		ldr	r3, [r7, #8]
 1878 019c 1A46     		mov	r2, r3
 1879 019e 1949     		ldr	r1, .L108+76
 1880 01a0 0020     		movs	r0, #0
 1881 01a2 FFF7FEFF 		bl	printNotif
 517:modem.c       ****     }else{
 518:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new debugging frequency value.");
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 46


 519:modem.c       ****     }
 520:modem.c       **** }
 1882              		.loc 1 520 0
 1883 01a6 03E0     		b	.L107
 1884              	.L105:
 518:modem.c       ****     }
 1885              		.loc 1 518 0
 1886 01a8 1749     		ldr	r1, .L108+80
 1887 01aa 0220     		movs	r0, #2
 1888 01ac FFF7FEFF 		bl	printNotif
 1889              	.L107:
 1890              		.loc 1 520 0
 1891 01b0 00BF     		nop
 1892 01b2 5C37     		adds	r7, r7, #92
 1893              		.cfi_def_cfa_offset 12
 1894 01b4 BD46     		mov	sp, r7
 1895              		.cfi_def_cfa_register 13
 1896              		@ sp needed
 1897 01b6 90BD     		pop	{r4, r7, pc}
 1898              	.L109:
 1899              		.align	2
 1900              	.L108:
 1901 01b8 88020000 		.word	.LC21
 1902 01bc 24030000 		.word	.LC32
 1903 01c0 00000000 		.word	uart_received_string
 1904 01c4 30030000 		.word	.LC33
 1905 01c8 3C030000 		.word	.LC34
 1906 01cc 4C030000 		.word	.LC35
 1907 01d0 5C030000 		.word	.LC36
 1908 01d4 6C030000 		.word	.LC37
 1909 01d8 00000000 		.word	updatable_parameters
 1910 01dc 70030000 		.word	.LC38
 1911 01e0 8C030000 		.word	.LC39
 1912 01e4 A8030000 		.word	.LC40
 1913 01e8 C4030000 		.word	.LC41
 1914 01ec 00000000 		.word	alarmMeasure
 1915 01f0 E0030000 		.word	.LC42
 1916 01f4 04040000 		.word	.LC43
 1917 01f8 00000000 		.word	alarmSync
 1918 01fc 34040000 		.word	.LC44
 1919 0200 5C040000 		.word	.LC45
 1920 0204 8C040000 		.word	.LC46
 1921 0208 B8040000 		.word	.LC47
 1922              		.cfi_endproc
 1923              	.LFE81:
 1924              		.size	get_updated_parameters_from_malcom, .-get_updated_parameters_from_malcom
 1925              		.section	.rodata
 1926 04e7 00       		.align	2
 1927              	.LC48:
 1928 04e8 41542343 		.ascii	"AT#CGMM\015\000"
 1928      474D4D0D 
 1928      00
 1929 04f1 000000   		.align	2
 1930              	.LC49:
 1931 04f4 4D6F6465 		.ascii	"Modem Model: %s\000"
 1931      6D204D6F 
 1931      64656C3A 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 47


 1931      20257300 
 1932              		.align	2
 1933              	.LC50:
 1934 0504 41542343 		.ascii	"AT#CCID\015\000"
 1934      4349440D 
 1934      00
 1935 050d 000000   		.align	2
 1936              	.LC51:
 1937 0510 53494D20 		.ascii	"SIM ID: %s\000"
 1937      49443A20 
 1937      257300
 1938 051b 00       		.align	2
 1939              	.LC52:
 1940 051c 41542B43 		.ascii	"AT+CGSN\015\000"
 1940      47534E0D 
 1940      00
 1941 0525 000000   		.align	2
 1942              	.LC53:
 1943 0528 494D4549 		.ascii	"IMEI: %s\000"
 1943      3A202573 
 1943      00
 1944 0531 000000   		.align	2
 1945              	.LC54:
 1946 0534 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\015\012"
 1946      4744434F 
 1946      4E543D31 
 1946      2C224950 
 1946      222C2277 
 1947 055d 00       		.ascii	"\000"
 1948 055e 0000     		.align	2
 1949              	.LC55:
 1950 0560 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"super\"\015\012\000"
 1950      4744434F 
 1950      4E543D31 
 1950      2C224950 
 1950      222C2273 
 1951              		.align	2
 1952              	.LC56:
 1953 057c 41542B43 		.ascii	"AT+CFUN?\015\000"
 1953      46554E3F 
 1953      0D00
 1954 0586 0000     		.align	2
 1955              	.LC57:
 1956 0588 4346554E 		.ascii	"CFUN: %s\000"
 1956      3A202573 
 1956      00
 1957 0591 000000   		.align	2
 1958              	.LC58:
 1959 0594 41542B43 		.ascii	"AT+CFUN=1\015\000"
 1959      46554E3D 
 1959      310D00
 1960              		.section	.text.modem_configure_settings,"ax",%progbits
 1961              		.align	2
 1962              		.global	modem_configure_settings
 1963              		.thumb
 1964              		.thumb_func
 1965              		.type	modem_configure_settings, %function
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 48


 1966              	modem_configure_settings:
 1967              	.LFB82:
 521:modem.c       ****     
 522:modem.c       **** // Configure the modem settings
 523:modem.c       **** void modem_configure_settings(){
 1968              		.loc 1 523 0
 1969              		.cfi_startproc
 1970              		@ args = 0, pretend = 0, frame = 16
 1971              		@ frame_needed = 1, uses_anonymous_args = 0
 1972 0000 80B5     		push	{r7, lr}
 1973              		.cfi_def_cfa_offset 8
 1974              		.cfi_offset 7, -8
 1975              		.cfi_offset 14, -4
 1976 0002 84B0     		sub	sp, sp, #16
 1977              		.cfi_def_cfa_offset 24
 1978 0004 00AF     		add	r7, sp, #0
 1979              		.cfi_def_cfa_register 7
 524:modem.c       ****     
 525:modem.c       ****     // Save/print modem model ID number
 526:modem.c       ****     if(modem_info.model_id[0] == '\0'){
 1980              		.loc 1 526 0
 1981 0006 454B     		ldr	r3, .L119
 1982 0008 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1983 000a 002B     		cmp	r3, #0
 1984 000c 13D1     		bne	.L111
 527:modem.c       ****         // AT command #CGMM returns the "device model identification" code with the command echo.
 528:modem.c       ****         if(at_write_command("AT#CGMM\r","OK",DEFAULT_AT_TIMEOUT)){
 1985              		.loc 1 528 0
 1986 000e 4FF4FA62 		mov	r2, #2000
 1987 0012 4349     		ldr	r1, .L119+4
 1988 0014 4348     		ldr	r0, .L119+8
 1989 0016 FFF7FEFF 		bl	at_write_command
 1990 001a 0346     		mov	r3, r0
 1991 001c 002B     		cmp	r3, #0
 1992 001e 0AD0     		beq	.L111
 529:modem.c       ****             // Extract modem model ID number string from the UART
 530:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.model_id);
 1993              		.loc 1 530 0
 1994 0020 414B     		ldr	r3, .L119+12
 1995 0022 424A     		ldr	r2, .L119+16
 1996 0024 4249     		ldr	r1, .L119+20
 1997 0026 4348     		ldr	r0, .L119+24
 1998 0028 FFF7FEFF 		bl	extract_string
 531:modem.c       ****             // Print modem model ID number
 532:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem Model: %s",modem_info.model_id);
 1999              		.loc 1 532 0
 2000 002c 3E4A     		ldr	r2, .L119+12
 2001 002e 4249     		ldr	r1, .L119+28
 2002 0030 0020     		movs	r0, #0
 2003 0032 FFF7FEFF 		bl	printNotif
 2004              	.L111:
 533:modem.c       ****         }
 534:modem.c       ****     }
 535:modem.c       ****     
 536:modem.c       ****    // Save/print SIM-card ID
 537:modem.c       ****    if(modem_info.sim_id[0] == '\0'){
 2005              		.loc 1 537 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 49


 2006 0036 394B     		ldr	r3, .L119
 2007 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2008 003a 002B     		cmp	r3, #0
 2009 003c 13D1     		bne	.L112
 538:modem.c       ****         // AT command #CCID is an execution command that reads the SIM number 
 539:modem.c       ****         if(at_write_command("AT#CCID\r", "OK", DEFAULT_AT_TIMEOUT)){
 2010              		.loc 1 539 0
 2011 003e 4FF4FA62 		mov	r2, #2000
 2012 0042 3749     		ldr	r1, .L119+4
 2013 0044 3D48     		ldr	r0, .L119+32
 2014 0046 FFF7FEFF 		bl	at_write_command
 2015 004a 0346     		mov	r3, r0
 2016 004c 002B     		cmp	r3, #0
 2017 004e 0AD0     		beq	.L112
 540:modem.c       ****             // Extract SIM-card ID string from the UART
 541:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.sim_id);
 2018              		.loc 1 541 0
 2019 0050 324B     		ldr	r3, .L119
 2020 0052 364A     		ldr	r2, .L119+16
 2021 0054 3649     		ldr	r1, .L119+20
 2022 0056 3748     		ldr	r0, .L119+24
 2023 0058 FFF7FEFF 		bl	extract_string
 542:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"SIM ID: %s",modem_info.sim_id);
 2024              		.loc 1 542 0
 2025 005c 2F4A     		ldr	r2, .L119
 2026 005e 3849     		ldr	r1, .L119+36
 2027 0060 0020     		movs	r0, #0
 2028 0062 FFF7FEFF 		bl	printNotif
 2029              	.L112:
 543:modem.c       ****         }
 544:modem.c       ****    }
 545:modem.c       **** 
 546:modem.c       ****     // Save/print modem IMEI
 547:modem.c       ****     if(modem_info.imei[0] == '\0'){
 2030              		.loc 1 547 0
 2031 0066 2D4B     		ldr	r3, .L119
 2032 0068 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 2033 006c 002B     		cmp	r3, #0
 2034 006e 13D1     		bne	.L113
 548:modem.c       ****         // AT command #CGSN returns the product serial number, identified as the IMEI of the mobile
 549:modem.c       ****         if(at_write_command("AT+CGSN\r","OK",DEFAULT_AT_TIMEOUT)){
 2035              		.loc 1 549 0
 2036 0070 4FF4FA62 		mov	r2, #2000
 2037 0074 2A49     		ldr	r1, .L119+4
 2038 0076 3348     		ldr	r0, .L119+40
 2039 0078 FFF7FEFF 		bl	at_write_command
 2040 007c 0346     		mov	r3, r0
 2041 007e 002B     		cmp	r3, #0
 2042 0080 0AD0     		beq	.L113
 550:modem.c       ****             // Extract modem IMEI number string from the UART
 551:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.imei);
 2043              		.loc 1 551 0
 2044 0082 314B     		ldr	r3, .L119+44
 2045 0084 294A     		ldr	r2, .L119+16
 2046 0086 2A49     		ldr	r1, .L119+20
 2047 0088 2A48     		ldr	r0, .L119+24
 2048 008a FFF7FEFF 		bl	extract_string
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 50


 552:modem.c       ****             // Print modem IMEI number
 553:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"IMEI: %s",modem_info.imei);
 2049              		.loc 1 553 0
 2050 008e 2E4A     		ldr	r2, .L119+44
 2051 0090 2E49     		ldr	r1, .L119+48
 2052 0092 0020     		movs	r0, #0
 2053 0094 FFF7FEFF 		bl	printNotif
 2054              	.L113:
 554:modem.c       ****         } 
 555:modem.c       ****     }
 556:modem.c       ****     
 557:modem.c       ****     // Configure protocol and cellular end point
 558:modem.c       ****     // AT command +CGDCONT defines the PDP context parameter values for a PDP context identified by
 559:modem.c       ****     if(updatable_parameters.sim_type == SIM_TYPE_STANDARD){
 2055              		.loc 1 559 0
 2056 0098 2D4B     		ldr	r3, .L119+52
 2057 009a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2058 009c 83F00103 		eor	r3, r3, #1
 2059 00a0 DBB2     		uxtb	r3, r3
 2060 00a2 002B     		cmp	r3, #0
 2061 00a4 06D0     		beq	.L114
 560:modem.c       ****         at_write_command("AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\r\n", "OK", DEFAULT_AT_TIMEOU
 2062              		.loc 1 560 0
 2063 00a6 4FF4FA62 		mov	r2, #2000
 2064 00aa 1D49     		ldr	r1, .L119+4
 2065 00ac 2948     		ldr	r0, .L119+56
 2066 00ae FFF7FEFF 		bl	at_write_command
 2067 00b2 09E0     		b	.L115
 2068              	.L114:
 561:modem.c       ****     
 562:modem.c       ****     }else if(updatable_parameters.sim_type == SIM_TYPE_SUPER){
 2069              		.loc 1 562 0
 2070 00b4 264B     		ldr	r3, .L119+52
 2071 00b6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2072 00b8 002B     		cmp	r3, #0
 2073 00ba 05D0     		beq	.L115
 563:modem.c       ****         at_write_command("AT+CGDCONT=1,\"IP\",\"super\"\r\n", "OK", DEFAULT_AT_TIMEOUT);
 2074              		.loc 1 563 0
 2075 00bc 4FF4FA62 		mov	r2, #2000
 2076 00c0 1749     		ldr	r1, .L119+4
 2077 00c2 2548     		ldr	r0, .L119+60
 2078 00c4 FFF7FEFF 		bl	at_write_command
 2079              	.L115:
 564:modem.c       ****     }
 565:modem.c       ****     
 566:modem.c       ****     // Check if modem power savings is enabled. If so, disable it so we can send data.
 567:modem.c       ****     // AT command +CFUN? is a read command that reports the current setting of <fun> which is the p
 568:modem.c       ****     if(at_write_command("AT+CFUN?\r", "OK",DEFAULT_AT_TIMEOUT)){
 2080              		.loc 1 568 0
 2081 00c8 4FF4FA62 		mov	r2, #2000
 2082 00cc 1449     		ldr	r1, .L119+4
 2083 00ce 2348     		ldr	r0, .L119+64
 2084 00d0 FFF7FEFF 		bl	at_write_command
 2085 00d4 0346     		mov	r3, r0
 2086 00d6 002B     		cmp	r3, #0
 2087 00d8 1BD0     		beq	.L118
 2088              	.LBB9:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 51


 569:modem.c       ****         char CFUN[10]; // Create a character array of length 10 called CFUN 
 570:modem.c       ****         CFUN[0] = '\0';
 2089              		.loc 1 570 0
 2090 00da 0023     		movs	r3, #0
 2091 00dc 3B71     		strb	r3, [r7, #4]
 571:modem.c       ****         // Extract UART string recieved from the modem
 572:modem.c       ****         extract_string(uart_received_string,": ","\r",CFUN);
 2092              		.loc 1 572 0
 2093 00de 3B1D     		adds	r3, r7, #4
 2094 00e0 124A     		ldr	r2, .L119+16
 2095 00e2 1349     		ldr	r1, .L119+20
 2096 00e4 1348     		ldr	r0, .L119+24
 2097 00e6 FFF7FEFF 		bl	extract_string
 573:modem.c       ****         // Print UART string recieved from the modem
 574:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"CFUN: %s",CFUN);
 2098              		.loc 1 574 0
 2099 00ea 3B1D     		adds	r3, r7, #4
 2100 00ec 1A46     		mov	r2, r3
 2101 00ee 1C49     		ldr	r1, .L119+68
 2102 00f0 0020     		movs	r0, #0
 2103 00f2 FFF7FEFF 		bl	printNotif
 575:modem.c       ****         // Search CRUN for "1", if "1" exists, it will return 1u otherwise it will return NULL
 576:modem.c       ****         // If it returns NULL, then write another command to the modem
 577:modem.c       ****         if(strstr(CFUN,"1") == NULL){
 2104              		.loc 1 577 0
 2105 00f6 3B1D     		adds	r3, r7, #4
 2106 00f8 3121     		movs	r1, #49
 2107 00fa 1846     		mov	r0, r3
 2108 00fc FFF7FEFF 		bl	strchr
 2109 0100 0346     		mov	r3, r0
 2110 0102 002B     		cmp	r3, #0
 2111 0104 05D1     		bne	.L118
 578:modem.c       ****             // AT command +CFUN= is a set command which selects the level of functionality in the m
 579:modem.c       ****             // = 1 means mobile full functionality with power saving disabled 
 580:modem.c       ****             at_write_command("AT+CFUN=1\r", "OK",DEFAULT_AT_TIMEOUT);
 2112              		.loc 1 580 0
 2113 0106 4FF4FA62 		mov	r2, #2000
 2114 010a 0549     		ldr	r1, .L119+4
 2115 010c 1548     		ldr	r0, .L119+72
 2116 010e FFF7FEFF 		bl	at_write_command
 2117              	.L118:
 2118              	.LBE9:
 581:modem.c       ****         }
 582:modem.c       ****     }
 583:modem.c       **** 
 584:modem.c       ****     
 585:modem.c       **** }
 2119              		.loc 1 585 0
 2120 0112 00BF     		nop
 2121 0114 1037     		adds	r7, r7, #16
 2122              		.cfi_def_cfa_offset 8
 2123 0116 BD46     		mov	sp, r7
 2124              		.cfi_def_cfa_register 13
 2125              		@ sp needed
 2126 0118 80BD     		pop	{r7, pc}
 2127              	.L120:
 2128 011a 00BF     		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 52


 2129              	.L119:
 2130 011c 00000000 		.word	modem_info
 2131 0120 00000000 		.word	.LC0
 2132 0124 E8040000 		.word	.LC48
 2133 0128 14000000 		.word	modem_info+20
 2134 012c 88020000 		.word	.LC21
 2135 0130 8C020000 		.word	.LC22
 2136 0134 00000000 		.word	uart_received_string
 2137 0138 F4040000 		.word	.LC49
 2138 013c 04050000 		.word	.LC50
 2139 0140 10050000 		.word	.LC51
 2140 0144 1C050000 		.word	.LC52
 2141 0148 28000000 		.word	modem_info+40
 2142 014c 28050000 		.word	.LC53
 2143 0150 00000000 		.word	updatable_parameters
 2144 0154 34050000 		.word	.LC54
 2145 0158 60050000 		.word	.LC55
 2146 015c 7C050000 		.word	.LC56
 2147 0160 88050000 		.word	.LC57
 2148 0164 94050000 		.word	.LC58
 2149              		.cfi_endproc
 2150              	.LFE82:
 2151              		.size	modem_configure_settings, .-modem_configure_settings
 2152              		.section	.rodata
 2153 059f 00       		.align	2
 2154              	.LC59:
 2155 05a0 4D6F6465 		.ascii	"Modem not ready to get time. Not conncted to networ"
 2155      6D206E6F 
 2155      74207265 
 2155      61647920 
 2155      746F2067 
 2156 05d3 6B2E00   		.ascii	"k.\000"
 2157 05d6 0000     		.align	2
 2158              	.LC60:
 2159 05d8 41542B43 		.ascii	"AT+CCLK?\015\000"
 2159      434C4B3F 
 2159      0D00
 2160 05e2 0000     		.align	2
 2161              	.LC61:
 2162 05e4 220D00   		.ascii	"\"\015\000"
 2163 05e7 00       		.align	2
 2164              	.LC62:
 2165 05e8 3A202200 		.ascii	": \"\000"
 2166              		.align	2
 2167              	.LC63:
 2168 05ec 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d-%d\000"
 2168      642F2564 
 2168      2C25643A 
 2168      25643A25 
 2168      642D2564 
 2169 0601 000000   		.align	2
 2170              	.LC64:
 2171 0604 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d+%d\000"
 2171      642F2564 
 2171      2C25643A 
 2171      25643A25 
 2171      642B2564 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 53


 2172 0619 000000   		.align	2
 2173              	.LC65:
 2174 061c 436F756C 		.ascii	"Could not parse modem time.\000"
 2174      64206E6F 
 2174      74207061 
 2174      72736520 
 2174      6D6F6465 
 2175              		.section	.text.modem_get_network_time,"ax",%progbits
 2176              		.align	2
 2177              		.global	modem_get_network_time
 2178              		.thumb
 2179              		.thumb_func
 2180              		.type	modem_get_network_time, %function
 2181              	modem_get_network_time:
 2182              	.LFB83:
 586:modem.c       **** 
 587:modem.c       **** //returns 0 if modem can't get time
 588:modem.c       **** long modem_get_network_time(){
 2183              		.loc 1 588 0
 2184              		.cfi_startproc
 2185              		@ args = 0, pretend = 0, frame = 104
 2186              		@ frame_needed = 1, uses_anonymous_args = 0
 2187 0000 80B5     		push	{r7, lr}
 2188              		.cfi_def_cfa_offset 8
 2189              		.cfi_offset 7, -8
 2190              		.cfi_offset 14, -4
 2191 0002 A0B0     		sub	sp, sp, #128
 2192              		.cfi_def_cfa_offset 136
 2193 0004 06AF     		add	r7, sp, #24
 2194              		.cfi_def_cfa 7, 112
 589:modem.c       ****     
 590:modem.c       ****     //modem reposen format (careful to include the quotes "")
 591:modem.c       ****     //+CCLK: "20/05/01,10:48:33-16" the "-16" is the number of quarter hourts (15 mins) from GMT ti
 592:modem.c       ****     //ex: 14:48 GMT
 593:modem.c       **** 
 594:modem.c       ****     // If modem_state is not "ready", then print error and return 0
 595:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2195              		.loc 1 595 0
 2196 0006 444B     		ldr	r3, .L128
 2197 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2198 000a 042B     		cmp	r3, #4
 2199 000c 05D0     		beq	.L122
 596:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Modem not ready to get time. Not conncted to network.");
 2200              		.loc 1 596 0
 2201 000e 4349     		ldr	r1, .L128+4
 2202 0010 0220     		movs	r0, #2
 2203 0012 FFF7FEFF 		bl	printNotif
 597:modem.c       ****         return 0;   
 2204              		.loc 1 597 0
 2205 0016 0023     		movs	r3, #0
 2206 0018 7AE0     		b	.L123
 2207              	.L122:
 598:modem.c       ****     }
 599:modem.c       ****     long epoch_time = 0; // Create variable of long time and set equal to 0
 2208              		.loc 1 599 0
 2209 001a 0023     		movs	r3, #0
 2210 001c 7B66     		str	r3, [r7, #100]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 54


 600:modem.c       ****     
 601:modem.c       ****     // AT command +CCLK? is a read command that returns the current setting of the real-time clock 
 602:modem.c       ****     if(at_write_command("AT+CCLK?\r","OK",DEFAULT_AT_TIMEOUT)){
 2211              		.loc 1 602 0
 2212 001e 4FF4FA62 		mov	r2, #2000
 2213 0022 3F49     		ldr	r1, .L128+8
 2214 0024 3F48     		ldr	r0, .L128+12
 2215 0026 FFF7FEFF 		bl	at_write_command
 2216 002a 0346     		mov	r3, r0
 2217 002c 002B     		cmp	r3, #0
 2218 002e 6ED0     		beq	.L124
 2219              	.LBB10:
 603:modem.c       ****         // need to set this to /0
 604:modem.c       ****         char network_time[30]; // Create a character array of length 30 called network_time 
 605:modem.c       ****         network_time[0] = '\0';
 2220              		.loc 1 605 0
 2221 0030 0023     		movs	r3, #0
 2222 0032 87F84430 		strb	r3, [r7, #68]
 606:modem.c       ****         // Extract UART string recieved from the modem and save to variable network_time
 607:modem.c       ****         extract_string(uart_received_string,": \"","\"\r",network_time);
 2223              		.loc 1 607 0
 2224 0036 07F14403 		add	r3, r7, #68
 2225 003a 3B4A     		ldr	r2, .L128+16
 2226 003c 3B49     		ldr	r1, .L128+20
 2227 003e 3C48     		ldr	r0, .L128+24
 2228 0040 FFF7FEFF 		bl	extract_string
 608:modem.c       ****         
 609:modem.c       ****         ///////////////////  
 610:modem.c       ****         struct tm t; // Creates variable t of struct tm
 611:modem.c       ****         
 612:modem.c       ****         // Creates a bunch of variables of type int and sets them to 0
 613:modem.c       ****         int year, month, day, hour, minute, second, gmt_offset = 0;
 2229              		.loc 1 613 0
 2230 0044 0023     		movs	r3, #0
 2231 0046 BB62     		str	r3, [r7, #40]
 614:modem.c       ****       
 615:modem.c       ****         // Determines the GMT offset 
 616:modem.c       ****         // int sscanf(const char *str, const char *format, ...) reads formatted input from a string
 617:modem.c       ****         // On success, the function returns the number of variables filled. In the case of an input
 618:modem.c       ****         if(sscanf(network_time,"%d/%d/%d,%d:%d:%d-%d",&year,&month,&day,&hour,&minute,&second,&gmt_
 2232              		.loc 1 618 0
 2233 0048 07F13C01 		add	r1, r7, #60
 2234 004c 07F14002 		add	r2, r7, #64
 2235 0050 07F14400 		add	r0, r7, #68
 2236 0054 07F12803 		add	r3, r7, #40
 2237 0058 0493     		str	r3, [sp, #16]
 2238 005a 07F12C03 		add	r3, r7, #44
 2239 005e 0393     		str	r3, [sp, #12]
 2240 0060 07F13003 		add	r3, r7, #48
 2241 0064 0293     		str	r3, [sp, #8]
 2242 0066 07F13403 		add	r3, r7, #52
 2243 006a 0193     		str	r3, [sp, #4]
 2244 006c 07F13803 		add	r3, r7, #56
 2245 0070 0093     		str	r3, [sp]
 2246 0072 0B46     		mov	r3, r1
 2247 0074 2F49     		ldr	r1, .L128+28
 2248 0076 FFF7FEFF 		bl	sscanf
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 55


 2249 007a 0346     		mov	r3, r0
 2250 007c 072B     		cmp	r3, #7
 2251 007e 06D1     		bne	.L125
 619:modem.c       ****             gmt_offset = gmt_offset*(900);
 2252              		.loc 1 619 0
 2253 0080 BB6A     		ldr	r3, [r7, #40]
 2254 0082 4FF46172 		mov	r2, #900
 2255 0086 02FB03F3 		mul	r3, r2, r3
 2256 008a BB62     		str	r3, [r7, #40]
 2257 008c 27E0     		b	.L126
 2258              	.L125:
 620:modem.c       ****         }else if(sscanf(network_time,"%d/%d/%d,%d:%d:%d+%d",&year,&month,&day,&hour,&minute,&second
 2259              		.loc 1 620 0
 2260 008e 07F13C01 		add	r1, r7, #60
 2261 0092 07F14002 		add	r2, r7, #64
 2262 0096 07F14400 		add	r0, r7, #68
 2263 009a 07F12803 		add	r3, r7, #40
 2264 009e 0493     		str	r3, [sp, #16]
 2265 00a0 07F12C03 		add	r3, r7, #44
 2266 00a4 0393     		str	r3, [sp, #12]
 2267 00a6 07F13003 		add	r3, r7, #48
 2268 00aa 0293     		str	r3, [sp, #8]
 2269 00ac 07F13403 		add	r3, r7, #52
 2270 00b0 0193     		str	r3, [sp, #4]
 2271 00b2 07F13803 		add	r3, r7, #56
 2272 00b6 0093     		str	r3, [sp]
 2273 00b8 0B46     		mov	r3, r1
 2274 00ba 1F49     		ldr	r1, .L128+32
 2275 00bc FFF7FEFF 		bl	sscanf
 2276 00c0 0346     		mov	r3, r0
 2277 00c2 072B     		cmp	r3, #7
 2278 00c4 05D1     		bne	.L127
 621:modem.c       ****             gmt_offset = gmt_offset*(-900);
 2279              		.loc 1 621 0
 2280 00c6 BB6A     		ldr	r3, [r7, #40]
 2281 00c8 1C4A     		ldr	r2, .L128+36
 2282 00ca 02FB03F3 		mul	r3, r2, r3
 2283 00ce BB62     		str	r3, [r7, #40]
 2284 00d0 05E0     		b	.L126
 2285              	.L127:
 622:modem.c       ****         }else{
 623:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Could not parse modem time.");
 2286              		.loc 1 623 0
 2287 00d2 1B49     		ldr	r1, .L128+40
 2288 00d4 0220     		movs	r0, #2
 2289 00d6 FFF7FEFF 		bl	printNotif
 624:modem.c       ****             return 0;  // Return 0 if cannot get time 
 2290              		.loc 1 624 0
 2291 00da 0023     		movs	r3, #0
 2292 00dc 18E0     		b	.L123
 2293              	.L126:
 625:modem.c       ****         }
 626:modem.c       ****         
 627:modem.c       ****         // Sets each variable to the correct time 
 628:modem.c       ****         t.tm_sec = second;
 2294              		.loc 1 628 0
 2295 00de FB6A     		ldr	r3, [r7, #44]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 56


 2296 00e0 7B60     		str	r3, [r7, #4]
 629:modem.c       ****         t.tm_min = minute;
 2297              		.loc 1 629 0
 2298 00e2 3B6B     		ldr	r3, [r7, #48]
 2299 00e4 BB60     		str	r3, [r7, #8]
 630:modem.c       ****         t.tm_hour = hour;
 2300              		.loc 1 630 0
 2301 00e6 7B6B     		ldr	r3, [r7, #52]
 2302 00e8 FB60     		str	r3, [r7, #12]
 631:modem.c       ****         t.tm_year = year + 100;    // Year since 1900
 2303              		.loc 1 631 0
 2304 00ea 3B6C     		ldr	r3, [r7, #64]
 2305 00ec 6433     		adds	r3, r3, #100
 2306 00ee BB61     		str	r3, [r7, #24]
 632:modem.c       ****         t.tm_mon = month-1;        // Month, where 0 = jan
 2307              		.loc 1 632 0
 2308 00f0 FB6B     		ldr	r3, [r7, #60]
 2309 00f2 013B     		subs	r3, r3, #1
 2310 00f4 7B61     		str	r3, [r7, #20]
 633:modem.c       ****         t.tm_mday = day;           // Day of the month
 2311              		.loc 1 633 0
 2312 00f6 BB6B     		ldr	r3, [r7, #56]
 2313 00f8 3B61     		str	r3, [r7, #16]
 634:modem.c       ****         t.tm_isdst = 0;            // Is Daylight Savings on? 1 = yes, 0 = no, -1 = unknown
 2314              		.loc 1 634 0
 2315 00fa 0023     		movs	r3, #0
 2316 00fc 7B62     		str	r3, [r7, #36]
 635:modem.c       ****     
 636:modem.c       ****         // Set variable epoch-time to be equal to the local time plus the GMT offset
 637:modem.c       ****         // the mktime function converts a broken-down local time (pointed to by timeptr) and return
 638:modem.c       ****         epoch_time = mktime(&t) + gmt_offset;
 2317              		.loc 1 638 0
 2318 00fe 3B1D     		adds	r3, r7, #4
 2319 0100 1846     		mov	r0, r3
 2320 0102 FFF7FEFF 		bl	mktime
 2321 0106 0246     		mov	r2, r0
 2322 0108 BB6A     		ldr	r3, [r7, #40]
 2323 010a 1344     		add	r3, r3, r2
 2324 010c 7B66     		str	r3, [r7, #100]
 2325              	.L124:
 2326              	.LBE10:
 639:modem.c       ****     }
 640:modem.c       ****     
 641:modem.c       ****     return epoch_time;
 2327              		.loc 1 641 0
 2328 010e 7B6E     		ldr	r3, [r7, #100]
 2329              	.L123:
 642:modem.c       **** }
 2330              		.loc 1 642 0
 2331 0110 1846     		mov	r0, r3
 2332 0112 6837     		adds	r7, r7, #104
 2333              		.cfi_def_cfa_offset 8
 2334 0114 BD46     		mov	sp, r7
 2335              		.cfi_def_cfa_register 13
 2336              		@ sp needed
 2337 0116 80BD     		pop	{r7, pc}
 2338              	.L129:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 57


 2339              		.align	2
 2340              	.L128:
 2341 0118 00000000 		.word	modem_state
 2342 011c A0050000 		.word	.LC59
 2343 0120 00000000 		.word	.LC0
 2344 0124 D8050000 		.word	.LC60
 2345 0128 E4050000 		.word	.LC61
 2346 012c E8050000 		.word	.LC62
 2347 0130 00000000 		.word	uart_received_string
 2348 0134 EC050000 		.word	.LC63
 2349 0138 04060000 		.word	.LC64
 2350 013c 7CFCFFFF 		.word	-900
 2351 0140 1C060000 		.word	.LC65
 2352              		.cfi_endproc
 2353              	.LFE83:
 2354              		.size	modem_get_network_time, .-modem_get_network_time
 2355              		.section	.text.modem_get_state,"ax",%progbits
 2356              		.align	2
 2357              		.global	modem_get_state
 2358              		.thumb
 2359              		.thumb_func
 2360              		.type	modem_get_state, %function
 2361              	modem_get_state:
 2362              	.LFB84:
 643:modem.c       **** 
 644:modem.c       **** // Get the modem state
 645:modem.c       **** uint8 modem_get_state(){
 2363              		.loc 1 645 0
 2364              		.cfi_startproc
 2365              		@ args = 0, pretend = 0, frame = 0
 2366              		@ frame_needed = 1, uses_anonymous_args = 0
 2367              		@ link register save eliminated.
 2368 0000 80B4     		push	{r7}
 2369              		.cfi_def_cfa_offset 4
 2370              		.cfi_offset 7, -4
 2371 0002 00AF     		add	r7, sp, #0
 2372              		.cfi_def_cfa_register 7
 646:modem.c       ****     return modem_state;
 2373              		.loc 1 646 0
 2374 0004 024B     		ldr	r3, .L132
 2375 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 647:modem.c       **** }
 2376              		.loc 1 647 0
 2377 0008 1846     		mov	r0, r3
 2378 000a BD46     		mov	sp, r7
 2379              		.cfi_def_cfa_register 13
 2380              		@ sp needed
 2381 000c 80BC     		pop	{r7}
 2382              		.cfi_restore 7
 2383              		.cfi_def_cfa_offset 0
 2384 000e 7047     		bx	lr
 2385              	.L133:
 2386              		.align	2
 2387              	.L132:
 2388 0010 00000000 		.word	modem_state
 2389              		.cfi_endproc
 2390              	.LFE84:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 58


 2391              		.size	modem_get_state, .-modem_get_state
 2392              		.section	.text.modem_sleep,"ax",%progbits
 2393              		.align	2
 2394              		.global	modem_sleep
 2395              		.thumb
 2396              		.thumb_func
 2397              		.type	modem_sleep, %function
 2398              	modem_sleep:
 2399              	.LFB85:
 648:modem.c       **** 
 649:modem.c       **** // Set modem to sleep
 650:modem.c       **** void modem_sleep(){
 2400              		.loc 1 650 0
 2401              		.cfi_startproc
 2402              		@ args = 0, pretend = 0, frame = 0
 2403              		@ frame_needed = 1, uses_anonymous_args = 0
 2404 0000 80B5     		push	{r7, lr}
 2405              		.cfi_def_cfa_offset 8
 2406              		.cfi_offset 7, -8
 2407              		.cfi_offset 14, -4
 2408 0002 00AF     		add	r7, sp, #0
 2409              		.cfi_def_cfa_register 7
 651:modem.c       ****     // If the modem_state is not "off" then put it to sleep
 652:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2410              		.loc 1 652 0
 2411 0004 FFF7FEFF 		bl	modem_get_state
 2412 0008 0346     		mov	r3, r0
 2413 000a 002B     		cmp	r3, #0
 2414 000c 03D0     		beq	.L136
 653:modem.c       **** 
 654:modem.c       ****         Telit_ControlReg_Sleep(); // Prepares the modem for entering the low power mode.
 2415              		.loc 1 654 0
 2416 000e FFF7FEFF 		bl	Telit_ControlReg_Sleep
 655:modem.c       ****         UART_Telit_Sleep(); // Saves the current component state, calls the UART_Telit_Stop() funct
 2417              		.loc 1 655 0
 2418 0012 FFF7FEFF 		bl	UART_Telit_Sleep
 2419              	.L136:
 656:modem.c       ****         
 657:modem.c       ****         // Set interrupt on RX pin to wakeup chip from sleep if UART comm starts
 658:modem.c       ****        // Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_FALLING);
 659:modem.c       ****      }
 660:modem.c       **** }
 2420              		.loc 1 660 0
 2421 0016 00BF     		nop
 2422 0018 80BD     		pop	{r7, pc}
 2423              		.cfi_endproc
 2424              	.LFE85:
 2425              		.size	modem_sleep, .-modem_sleep
 2426 001a 00BF     		.section	.text.modem_wakeup,"ax",%progbits
 2427              		.align	2
 2428              		.global	modem_wakeup
 2429              		.thumb
 2430              		.thumb_func
 2431              		.type	modem_wakeup, %function
 2432              	modem_wakeup:
 2433              	.LFB86:
 661:modem.c       **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 59


 662:modem.c       **** // Wakeup the modem
 663:modem.c       **** void modem_wakeup(){
 2434              		.loc 1 663 0
 2435              		.cfi_startproc
 2436              		@ args = 0, pretend = 0, frame = 0
 2437              		@ frame_needed = 1, uses_anonymous_args = 0
 2438 0000 80B5     		push	{r7, lr}
 2439              		.cfi_def_cfa_offset 8
 2440              		.cfi_offset 7, -8
 2441              		.cfi_offset 14, -4
 2442 0002 00AF     		add	r7, sp, #0
 2443              		.cfi_def_cfa_register 7
 664:modem.c       ****     // If modem state is not off then wake it up
 665:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2444              		.loc 1 665 0
 2445 0004 FFF7FEFF 		bl	modem_get_state
 2446 0008 0346     		mov	r3, r0
 2447 000a 002B     		cmp	r3, #0
 2448 000c 0BD0     		beq	.L139
 666:modem.c       ****         Telit_ControlReg_Wakeup(); // Restores the modem after waking up from the low power mode.
 2449              		.loc 1 666 0
 2450 000e FFF7FEFF 		bl	Telit_ControlReg_Wakeup
 667:modem.c       ****         // Calls the UART_Telit_RestoreConfig() function to restore the configuration.
 668:modem.c       ****         // If the modem was enabled before the UART_Telit_Sleep() function was called, the UART_Tel
 669:modem.c       ****         UART_Telit_Wakeup();
 2451              		.loc 1 669 0
 2452 0012 FFF7FEFF 		bl	UART_Telit_Wakeup
 670:modem.c       ****         // Remove the need for this pin itterupt
 671:modem.c       ****         //Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 672:modem.c       ****         
 673:modem.c       ****         // If woken up from pin, go ahead and delay for 100ms to allow modem UART to deliver the me
 674:modem.c       ****         if(modem_get_state() == MODEM_STATE_WAITING_FOR_IP){
 2453              		.loc 1 674 0
 2454 0016 FFF7FEFF 		bl	modem_get_state
 2455 001a 0346     		mov	r3, r0
 2456 001c 032B     		cmp	r3, #3
 2457 001e 02D1     		bne	.L139
 675:modem.c       ****             CyDelay(100u);
 2458              		.loc 1 675 0
 2459 0020 6420     		movs	r0, #100
 2460 0022 FFF7FEFF 		bl	CyDelay
 2461              	.L139:
 676:modem.c       ****         }
 677:modem.c       ****      }
 678:modem.c       **** }
 2462              		.loc 1 678 0
 2463 0026 00BF     		nop
 2464 0028 80BD     		pop	{r7, pc}
 2465              		.cfi_endproc
 2466              	.LFE86:
 2467              		.size	modem_wakeup, .-modem_wakeup
 2468 002a 00BF     		.section	.rodata
 2469              		.align	2
 2470              	.LC66:
 2471 0638 41542347 		.ascii	"AT#GPIO=5,1,1,0\015\000"
 2471      50494F3D 
 2471      352C312C 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 60


 2471      312C300D 
 2471      00
 2472 0649 000000   		.align	2
 2473              	.LC67:
 2474 064c 41542453 		.ascii	"AT$SUPLSEC=1\015\000"
 2474      55504C53 
 2474      45433D31 
 2474      0D00
 2475 065a 0000     		.align	2
 2476              	.LC68:
 2477 065c 41542453 		.ascii	"AT$SUPLV=2\015\000"
 2477      55504C56 
 2477      3D320D00 
 2478              		.align	2
 2479              	.LC69:
 2480 0668 41542441 		.ascii	"AT$AGPSEN=1\015\000"
 2480      47505345 
 2480      4E3D310D 
 2480      00
 2481 0675 000000   		.align	2
 2482              	.LC70:
 2483 0678 41542453 		.ascii	"AT$SLP=1,\"supl.google.com:7275\"\015\000"
 2483      4C503D31 
 2483      2C227375 
 2483      706C2E67 
 2483      6F6F676C 
 2484 0699 000000   		.align	2
 2485              	.LC71:
 2486 069c 41542353 		.ascii	"AT#SGACT=1,0\015\012\000"
 2486      47414354 
 2486      3D312C30 
 2486      0D0A00
 2487 06ab 00       		.align	2
 2488              	.LC72:
 2489 06ac 4154244C 		.ascii	"AT$LCSLK=1,1\015\000"
 2489      43534C4B 
 2489      3D312C31 
 2489      0D00
 2490 06ba 0000     		.align	2
 2491              	.LC73:
 2492 06bc 41542447 		.ascii	"AT$GPSSLSR=1,1,,,,,2\015\000"
 2492      5053534C 
 2492      53523D31 
 2492      2C312C2C 
 2492      2C2C2C32 
 2493 06d2 0000     		.align	2
 2494              	.LC74:
 2495 06d4 4E00     		.ascii	"N\000"
 2496 06d6 0000     		.align	2
 2497              	.LC75:
 2498 06d8 41542447 		.ascii	"AT$GPSACP\015\000"
 2498      50534143 
 2498      500D00
 2499 06e3 00       		.align	2
 2500              	.LC76:
 2501 06e4 24475053 		.ascii	"$GPSACP: \000"
 2501      4143503A 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 61


 2501      2000
 2502 06ee 0000     		.align	2
 2503              	.LC77:
 2504 06f0 24475053 		.ascii	"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s\000"
 2504      4143503A 
 2504      20252A66 
 2504      2C25664E 
 2504      2C256657 
 2505              		.global	__aeabi_fdiv
 2506              		.global	__aeabi_f2d
 2507              		.global	__aeabi_ddiv
 2508              		.global	__aeabi_dadd
 2509              		.global	__aeabi_d2f
 2510              		.align	2
 2511              	.LC78:
 2512 0710 41542347 		.ascii	"AT#GPIO=5,0,1,0\015\000"
 2512      50494F3D 
 2512      352C302C 
 2512      312C300D 
 2512      00
 2513 0721 000000   		.align	2
 2514              	.LC79:
 2515 0724 41542447 		.ascii	"AT$GPSR=0\015\000"
 2515      5053523D 
 2515      300D00
 2516 072f 00       		.align	2
 2517              	.LC80:
 2518 0730 54696D65 		.ascii	"Time to lock GPS: %d\000"
 2518      20746F20 
 2518      6C6F636B 
 2518      20475053 
 2518      3A202564 
 2519              		.section	.text.modem_get_gps_coordinates,"ax",%progbits
 2520              		.align	2
 2521              		.global	modem_get_gps_coordinates
 2522              		.thumb
 2523              		.thumb_func
 2524              		.type	modem_get_gps_coordinates, %function
 2525              	modem_get_gps_coordinates:
 2526              	.LFB87:
 679:modem.c       **** 
 680:modem.c       ****     
 681:modem.c       **** // Returns lat,lom,alt data from Assited GPS (AGPS) system
 682:modem.c       **** gps_t modem_get_gps_coordinates(){
 2527              		.loc 1 682 0
 2528              		.cfi_startproc
 2529              		@ args = 0, pretend = 0, frame = 56
 2530              		@ frame_needed = 1, uses_anonymous_args = 0
 2531 0000 B0B5     		push	{r4, r5, r7, lr}
 2532              		.cfi_def_cfa_offset 16
 2533              		.cfi_offset 4, -16
 2534              		.cfi_offset 5, -12
 2535              		.cfi_offset 7, -8
 2536              		.cfi_offset 14, -4
 2537 0002 90B0     		sub	sp, sp, #64
 2538              		.cfi_def_cfa_offset 80
 2539 0004 02AF     		add	r7, sp, #8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 62


 2540              		.cfi_def_cfa 7, 72
 2541 0006 7860     		str	r0, [r7, #4]
 683:modem.c       ****     gps_t gps;
 684:modem.c       ****     gps.altitude = 0;
 2542              		.loc 1 684 0
 2543 0008 4FF00003 		mov	r3, #0
 2544 000c FB61     		str	r3, [r7, #28]	@ float
 685:modem.c       ****     gps.longitude = 0;
 2545              		.loc 1 685 0
 2546 000e 4FF00003 		mov	r3, #0
 2547 0012 BB61     		str	r3, [r7, #24]	@ float
 686:modem.c       ****     gps.latitude = 0;
 2548              		.loc 1 686 0
 2549 0014 4FF00003 		mov	r3, #0
 2550 0018 7B61     		str	r3, [r7, #20]	@ float
 687:modem.c       ****     gps.time_to_lock =0;
 2551              		.loc 1 687 0
 2552 001a 0023     		movs	r3, #0
 2553 001c 3B84     		strh	r3, [r7, #32]	@ movhi
 688:modem.c       ****     gps.valid = 0;
 2554              		.loc 1 688 0
 2555 001e 0023     		movs	r3, #0
 2556 0020 87F82230 		strb	r3, [r7, #34]
 689:modem.c       ****     
 690:modem.c       ****     //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 691:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2557              		.loc 1 691 0
 2558 0024 7F4B     		ldr	r3, .L150
 2559 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2560 0028 042B     		cmp	r3, #4
 2561 002a 07D0     		beq	.L141
 692:modem.c       ****         return gps;//where valid = 0
 2562              		.loc 1 692 0
 2563 002c 7B68     		ldr	r3, [r7, #4]
 2564 002e 1C46     		mov	r4, r3
 2565 0030 07F11403 		add	r3, r7, #20
 2566 0034 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2567 0036 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2568 003a EFE0     		b	.L140
 2569              	.L141:
 693:modem.c       ****     }
 694:modem.c       ****     
 695:modem.c       ****     long lock_time = getTimeStamp();
 2570              		.loc 1 695 0
 2571 003c FFF7FEFF 		bl	getTimeStamp
 2572 0040 3863     		str	r0, [r7, #48]
 696:modem.c       ****     
 697:modem.c       ****     // Enable this for the LTER module
 698:modem.c       ****     // Enable GPS Low-Dropout Regulator
 699:modem.c       ****     at_write_command("AT#GPIO=5,1,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2573              		.loc 1 699 0
 2574 0042 4FF4FA62 		mov	r2, #2000
 2575 0046 7849     		ldr	r1, .L150+4
 2576 0048 7848     		ldr	r0, .L150+8
 2577 004a FFF7FEFF 		bl	at_write_command
 700:modem.c       ****     
 701:modem.c       ****     // Configure SUPL connection params
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 63


 702:modem.c       ****     at_write_command("AT$SUPLSEC=1\r","OK",DEFAULT_AT_TIMEOUT);
 2578              		.loc 1 702 0
 2579 004e 4FF4FA62 		mov	r2, #2000
 2580 0052 7549     		ldr	r1, .L150+4
 2581 0054 7648     		ldr	r0, .L150+12
 2582 0056 FFF7FEFF 		bl	at_write_command
 703:modem.c       ****     
 704:modem.c       ****     // Use SUPL2.0
 705:modem.c       ****     at_write_command("AT$SUPLV=2\r","OK",DEFAULT_AT_TIMEOUT);
 2583              		.loc 1 705 0
 2584 005a 4FF4FA62 		mov	r2, #2000
 2585 005e 7249     		ldr	r1, .L150+4
 2586 0060 7448     		ldr	r0, .L150+16
 2587 0062 FFF7FEFF 		bl	at_write_command
 706:modem.c       ****     
 707:modem.c       ****     // Enable AGPS service
 708:modem.c       ****     at_write_command("AT$AGPSEN=1\r","OK",DEFAULT_AT_TIMEOUT);
 2588              		.loc 1 708 0
 2589 0066 4FF4FA62 		mov	r2, #2000
 2590 006a 6F49     		ldr	r1, .L150+4
 2591 006c 7248     		ldr	r0, .L150+20
 2592 006e FFF7FEFF 		bl	at_write_command
 709:modem.c       ****     
 710:modem.c       ****     // Chose SUPL server, use google public service
 711:modem.c       ****     at_write_command("AT$SLP=1,\"supl.google.com:7275\"\r","OK",DEFAULT_AT_TIMEOUT);
 2593              		.loc 1 711 0
 2594 0072 4FF4FA62 		mov	r2, #2000
 2595 0076 6C49     		ldr	r1, .L150+4
 2596 0078 7048     		ldr	r0, .L150+24
 2597 007a FFF7FEFF 		bl	at_write_command
 712:modem.c       ****     
 713:modem.c       ****     //pdp context has to be locked to carrier for this to work
 714:modem.c       ****     
 715:modem.c       ****     // Unlock context since it needs to be used by modem
 716:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 2598              		.loc 1 716 0
 2599 007e 4FF4FA62 		mov	r2, #2000
 2600 0082 6949     		ldr	r1, .L150+4
 2601 0084 6E48     		ldr	r0, .L150+28
 2602 0086 FFF7FEFF 		bl	at_write_command
 717:modem.c       ****     
 718:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",DEFAULT_AT_TIMEOUT);//ATT
 2603              		.loc 1 718 0
 2604 008a 4FF4FA62 		mov	r2, #2000
 2605 008e 6649     		ldr	r1, .L150+4
 2606 0090 6C48     		ldr	r0, .L150+32
 2607 0092 FFF7FEFF 		bl	at_write_command
 719:modem.c       ****     //at_write_command("AT$LCSLK=1,3\r","OK",DEFAULT_AT_TIMEOUT);//Verizon
 720:modem.c       ****     
 721:modem.c       ****     // Relock the context
 722:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 2608              		.loc 1 722 0
 2609 0096 42F21072 		movw	r2, #10000
 2610 009a 6349     		ldr	r1, .L150+4
 2611 009c 6A48     		ldr	r0, .L150+36
 2612 009e FFF7FEFF 		bl	at_write_command
 723:modem.c       ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 64


 724:modem.c       ****     //start AGPS service
 725:modem.c       ****     at_write_command("AT$GPSSLSR=1,1,,,,,2\r","OK",DEFAULT_AT_TIMEOUT); 
 2613              		.loc 1 725 0
 2614 00a2 4FF4FA62 		mov	r2, #2000
 2615 00a6 6049     		ldr	r1, .L150+4
 2616 00a8 6848     		ldr	r0, .L150+40
 2617 00aa FFF7FEFF 		bl	at_write_command
 726:modem.c       ****     
 727:modem.c       ****     
 728:modem.c       ****     // Start the AGPS service
 729:modem.c       ****     // Will keep receiving a buynch of commas without numbers, until GPS locks
 730:modem.c       ****     // Good lock will return a string with "N" and "W" coordinates
 731:modem.c       ****     
 732:modem.c       ****     
 733:modem.c       ****  
 734:modem.c       ****     uint8 gps_status = 0;
 2618              		.loc 1 734 0
 2619 00ae 0023     		movs	r3, #0
 2620 00b0 87F82F30 		strb	r3, [r7, #47]
 2621              	.LBB11:
 735:modem.c       ****     for(uint16 i=0;i<200;i++){
 2622              		.loc 1 735 0
 2623 00b4 0023     		movs	r3, #0
 2624 00b6 FB86     		strh	r3, [r7, #54]	@ movhi
 2625 00b8 13E0     		b	.L143
 2626              	.L146:
 736:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2627              		.loc 1 736 0
 2628 00ba 4FF4FA62 		mov	r2, #2000
 2629 00be 6449     		ldr	r1, .L150+44
 2630 00c0 6448     		ldr	r0, .L150+48
 2631 00c2 FFF7FEFF 		bl	at_write_command
 2632 00c6 0346     		mov	r3, r0
 2633 00c8 87F82F30 		strb	r3, [r7, #47]
 737:modem.c       ****         if(gps_status){
 2634              		.loc 1 737 0
 2635 00cc 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2636 00d0 002B     		cmp	r3, #0
 2637 00d2 0AD1     		bne	.L149
 738:modem.c       ****             break;   
 739:modem.c       ****         }
 740:modem.c       ****         CyDelay(1000u);// Wait for a second -- BLOCKING. Could be more elegant to incorporate this 
 2638              		.loc 1 740 0 discriminator 2
 2639 00d4 4FF47A70 		mov	r0, #1000
 2640 00d8 FFF7FEFF 		bl	CyDelay
 735:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2641              		.loc 1 735 0 discriminator 2
 2642 00dc FB8E     		ldrh	r3, [r7, #54]
 2643 00de 0133     		adds	r3, r3, #1
 2644 00e0 FB86     		strh	r3, [r7, #54]	@ movhi
 2645              	.L143:
 735:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2646              		.loc 1 735 0 is_stmt 0 discriminator 1
 2647 00e2 FB8E     		ldrh	r3, [r7, #54]
 2648 00e4 C72B     		cmp	r3, #199
 2649 00e6 E8D9     		bls	.L146
 2650 00e8 00E0     		b	.L145
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 65


 2651              	.L149:
 738:modem.c       ****             break;   
 2652              		.loc 1 738 0 is_stmt 1
 2653 00ea 00BF     		nop
 2654              	.L145:
 2655              	.LBE11:
 741:modem.c       ****     }
 742:modem.c       ****     
 743:modem.c       ****     //parse data here
 744:modem.c       ****     
 745:modem.c       ****     //example $GPSACP: 210926.000,4217.8003N,08341.3158W,2.3,258.2,3,17.8,4.8,2.6,220520,05,00
 746:modem.c       ****     float lat;
 747:modem.c       ****     float lon;
 748:modem.c       ****     float alt;
 749:modem.c       ****     
 750:modem.c       ****     // Look for $GPSACP:  in uart_received_string and save to sl
 751:modem.c       ****     // char *strstr(const char *haystack, const char *needle) function finds the first occurrence o
 752:modem.c       ****     char *s1 = strstr(uart_received_string,"$GPSACP: ");
 2656              		.loc 1 752 0
 2657 00ec 5A49     		ldr	r1, .L150+52
 2658 00ee 5B48     		ldr	r0, .L150+56
 2659 00f0 FFF7FEFF 		bl	strstr
 2660 00f4 B862     		str	r0, [r7, #40]
 753:modem.c       ****     // Look in sl for lat, long, alt and save in match 
 754:modem.c       ****     // int sscanf(const char *str, const char *format, ...) reads formatted input from a string.
 755:modem.c       ****     int match = sscanf(s1,"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s",&lat,&lon,&alt);
 2661              		.loc 1 755 0
 2662 00f6 07F10C01 		add	r1, r7, #12
 2663 00fa 07F11002 		add	r2, r7, #16
 2664 00fe 07F10803 		add	r3, r7, #8
 2665 0102 0093     		str	r3, [sp]
 2666 0104 0B46     		mov	r3, r1
 2667 0106 5649     		ldr	r1, .L150+60
 2668 0108 B86A     		ldr	r0, [r7, #40]
 2669 010a FFF7FEFF 		bl	sscanf
 2670 010e 7862     		str	r0, [r7, #36]
 756:modem.c       ****     if(match >= 3){
 2671              		.loc 1 756 0
 2672 0110 7B6A     		ldr	r3, [r7, #36]
 2673 0112 022B     		cmp	r3, #2
 2674 0114 60DD     		ble	.L147
 757:modem.c       ****         // Calculate lat and lon
 758:modem.c       ****         // floorf(x) calculates the largest integer that is less than or equal to x. 
 759:modem.c       ****         // fmod(double x, double y) returns the remainder of x divided by y.
 760:modem.c       ****         lat = floorf(lat/100) + fmod(lat,100)/60;
 2675              		.loc 1 760 0
 2676 0116 3B69     		ldr	r3, [r7, #16]	@ float
 2677 0118 5249     		ldr	r1, .L150+64
 2678 011a 1846     		mov	r0, r3
 2679 011c FFF7FEFF 		bl	__aeabi_fdiv
 2680 0120 0346     		mov	r3, r0
 2681 0122 1846     		mov	r0, r3
 2682 0124 FFF7FEFF 		bl	floorf
 2683 0128 0346     		mov	r3, r0
 2684 012a 1846     		mov	r0, r3
 2685 012c FFF7FEFF 		bl	__aeabi_f2d
 2686 0130 0446     		mov	r4, r0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 66


 2687 0132 0D46     		mov	r5, r1
 2688 0134 3B69     		ldr	r3, [r7, #16]	@ float
 2689 0136 1846     		mov	r0, r3
 2690 0138 FFF7FEFF 		bl	__aeabi_f2d
 2691 013c 4FF00002 		mov	r2, #0
 2692 0140 494B     		ldr	r3, .L150+68
 2693 0142 FFF7FEFF 		bl	fmod
 2694 0146 4FF00002 		mov	r2, #0
 2695 014a 484B     		ldr	r3, .L150+72
 2696 014c FFF7FEFF 		bl	__aeabi_ddiv
 2697 0150 0246     		mov	r2, r0
 2698 0152 0B46     		mov	r3, r1
 2699 0154 2046     		mov	r0, r4
 2700 0156 2946     		mov	r1, r5
 2701 0158 FFF7FEFF 		bl	__aeabi_dadd
 2702 015c 0346     		mov	r3, r0
 2703 015e 0C46     		mov	r4, r1
 2704 0160 1846     		mov	r0, r3
 2705 0162 2146     		mov	r1, r4
 2706 0164 FFF7FEFF 		bl	__aeabi_d2f
 2707 0168 0346     		mov	r3, r0
 2708 016a 3B61     		str	r3, [r7, #16]	@ float
 761:modem.c       ****         lon = -(floorf(lon/100) + fmod(lon,100)/60);
 2709              		.loc 1 761 0
 2710 016c FB68     		ldr	r3, [r7, #12]	@ float
 2711 016e 3D49     		ldr	r1, .L150+64
 2712 0170 1846     		mov	r0, r3
 2713 0172 FFF7FEFF 		bl	__aeabi_fdiv
 2714 0176 0346     		mov	r3, r0
 2715 0178 1846     		mov	r0, r3
 2716 017a FFF7FEFF 		bl	floorf
 2717 017e 0346     		mov	r3, r0
 2718 0180 1846     		mov	r0, r3
 2719 0182 FFF7FEFF 		bl	__aeabi_f2d
 2720 0186 0446     		mov	r4, r0
 2721 0188 0D46     		mov	r5, r1
 2722 018a FB68     		ldr	r3, [r7, #12]	@ float
 2723 018c 1846     		mov	r0, r3
 2724 018e FFF7FEFF 		bl	__aeabi_f2d
 2725 0192 4FF00002 		mov	r2, #0
 2726 0196 344B     		ldr	r3, .L150+68
 2727 0198 FFF7FEFF 		bl	fmod
 2728 019c 4FF00002 		mov	r2, #0
 2729 01a0 324B     		ldr	r3, .L150+72
 2730 01a2 FFF7FEFF 		bl	__aeabi_ddiv
 2731 01a6 0246     		mov	r2, r0
 2732 01a8 0B46     		mov	r3, r1
 2733 01aa 2046     		mov	r0, r4
 2734 01ac 2946     		mov	r1, r5
 2735 01ae FFF7FEFF 		bl	__aeabi_dadd
 2736 01b2 0346     		mov	r3, r0
 2737 01b4 0C46     		mov	r4, r1
 2738 01b6 1846     		mov	r0, r3
 2739 01b8 2146     		mov	r1, r4
 2740 01ba FFF7FEFF 		bl	__aeabi_d2f
 2741 01be 0346     		mov	r3, r0
 2742 01c0 83F00043 		eor	r3, r3, #-2147483648
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 67


 2743 01c4 FB60     		str	r3, [r7, #12]	@ float
 762:modem.c       ****         gps.altitude = alt; // Save alt, lat, and lon to the variable gps.
 2744              		.loc 1 762 0
 2745 01c6 BB68     		ldr	r3, [r7, #8]	@ float
 2746 01c8 FB61     		str	r3, [r7, #28]	@ float
 763:modem.c       ****         gps.latitude = lat;
 2747              		.loc 1 763 0
 2748 01ca 3B69     		ldr	r3, [r7, #16]	@ float
 2749 01cc 7B61     		str	r3, [r7, #20]	@ float
 764:modem.c       ****         gps.longitude = lon;
 2750              		.loc 1 764 0
 2751 01ce FB68     		ldr	r3, [r7, #12]	@ float
 2752 01d0 BB61     		str	r3, [r7, #24]	@ float
 765:modem.c       ****         gps.valid = 1;
 2753              		.loc 1 765 0
 2754 01d2 0123     		movs	r3, #1
 2755 01d4 87F82230 		strb	r3, [r7, #34]
 2756              	.L147:
 766:modem.c       ****     }
 767:modem.c       ****     
 768:modem.c       ****     // Disable LDO, just in case
 769:modem.c       ****     at_write_command("AT#GPIO=5,0,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2757              		.loc 1 769 0
 2758 01d8 4FF4FA62 		mov	r2, #2000
 2759 01dc 1249     		ldr	r1, .L150+4
 2760 01de 2448     		ldr	r0, .L150+76
 2761 01e0 FFF7FEFF 		bl	at_write_command
 770:modem.c       ****     
 771:modem.c       ****     // Flush modem's GPS data, just in case
 772:modem.c       ****     at_write_command("AT$GPSR=0\r","OK",DEFAULT_AT_TIMEOUT);
 2762              		.loc 1 772 0
 2763 01e4 4FF4FA62 		mov	r2, #2000
 2764 01e8 0F49     		ldr	r1, .L150+4
 2765 01ea 2248     		ldr	r0, .L150+80
 2766 01ec FFF7FEFF 		bl	at_write_command
 773:modem.c       ****     
 774:modem.c       ****     
 775:modem.c       ****     
 776:modem.c       ****     
 777:modem.c       ****     
 778:modem.c       ****     /* Relevant to 3g modem, can ignore
 779:modem.c       ****     
 780:modem.c       ****     //Setthe GPS Quality of Servicep arameters. Inorder,theyare<horiz_accuracy(inmeters)>,<vertical
 781:modem.c       ****     //AT$GPSQOS=50,50,100,0
 782:modem.c       ****     at_write_command("AT$GPSQOS=50,50,100,0\r","OK",DEFAULT_AT_TIMEOUT);
 783:modem.c       ****     
 784:modem.c       ****     //SettheSUPLLocationPlatform(SLP)addressoftheserverthatwillprovidetheA-GPS data:
 785:modem.c       ****     at_write_command("AT$LCSSLP=1,\"supl.google.com\"\r","OK",DEFAULT_AT_TIMEOUT);
 786:modem.c       ****     
 787:modem.c       ****     //unlock contedt, simnce its being used by modem
 788:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 789:modem.c       ****     //Lock context 1 for LoCation Services (LCS) use only
 790:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",5000u);
 791:modem.c       ****     
 792:modem.c       ****     //unlock contedt, simnce its being used by modem
 793:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 794:modem.c       ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 68


 795:modem.c       ****     //EnableunsolicitedNMEAGPSdataintheformatof<NMEASENTENCE><CR>
 796:modem.c       ****     at_write_command("AT$GPSNMUN=2,1,0,0,0,0,0\r","OK",DEFAULT_AT_TIMEOUT);
 797:modem.c       ****     
 798:modem.c       ****     //StartGPSlocationservicerequest.Sendingthiscommandsets$GPSP=1
 799:modem.c       ****    uint8 gps_status = 0;
 800:modem.c       ****     for(uint16 i=0;i<200;i++){
 801:modem.c       ****         gps_status = at_write_command("AT$GPSSLSR=1,1,,,,,0,255\r","N",3000u);
 802:modem.c       ****         if(gps_status){
 803:modem.c       ****             break;   
 804:modem.c       ****         }
 805:modem.c       ****   }
 806:modem.c       ****     
 807:modem.c       ****     //$GPGGA,030307.691,4217.7923,N,08341.3240,W,1,05,2.25,225.0,M,,M,,0000*6E
 808:modem.c       ****     //$GPGGA,213852.000,4600.8755,N,09327.7008,W,1,05,3.00,292.0,M,,M,,0000*6E
 809:modem.c       ****     if(gps_status){
 810:modem.c       ****         float lat,lon,alt = 0;
 811:modem.c       ****         if(sscanf(uart_received_string,"%*s,%f,N,%f,W,%*s",&lat,&lon) > 0){
 812:modem.c       ****             gps.altitude = alt;
 813:modem.c       ****             gps.latitude = lat/60;
 814:modem.c       ****             gps.longitude = lon/60;
 815:modem.c       ****             gps.valid = 1;
 816:modem.c       ****         }
 817:modem.c       ****         
 818:modem.c       ****     }
 819:modem.c       ****     
 820:modem.c       ****     //turn off gps
 821:modem.c       ****     //AT$GPSP=0
 822:modem.c       ****     at_write_command("AT$GPSP=0\r","OK",DEFAULT_AT_TIMEOUT);
 823:modem.c       ****     
 824:modem.c       ****     */
 825:modem.c       **** 
 826:modem.c       ****     // Calculate time to lock into GPS location and save in variable lock_time
 827:modem.c       ****     lock_time = getTimeStamp() - lock_time;
 2767              		.loc 1 827 0
 2768 01f0 FFF7FEFF 		bl	getTimeStamp
 2769 01f4 0246     		mov	r2, r0
 2770 01f6 3B6B     		ldr	r3, [r7, #48]
 2771 01f8 D31A     		subs	r3, r2, r3
 2772 01fa 3B63     		str	r3, [r7, #48]
 828:modem.c       ****     gps.time_to_lock = lock_time;
 2773              		.loc 1 828 0
 2774 01fc 3B6B     		ldr	r3, [r7, #48]
 2775 01fe 9BB2     		uxth	r3, r3
 2776 0200 3B84     		strh	r3, [r7, #32]	@ movhi
 829:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Time to lock GPS: %d", gps.time_to_lock);
 2777              		.loc 1 829 0
 2778 0202 3B8C     		ldrh	r3, [r7, #32]
 2779 0204 1A46     		mov	r2, r3
 2780 0206 1C49     		ldr	r1, .L150+84
 2781 0208 0020     		movs	r0, #0
 2782 020a FFF7FEFF 		bl	printNotif
 830:modem.c       ****     
 831:modem.c       ****     return gps;
 2783              		.loc 1 831 0
 2784 020e 7B68     		ldr	r3, [r7, #4]
 2785 0210 1C46     		mov	r4, r3
 2786 0212 07F11403 		add	r3, r7, #20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 69


 2787 0216 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2788 0218 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2789              	.L140:
 832:modem.c       ****     
 833:modem.c       **** }
 2790              		.loc 1 833 0
 2791 021c 7868     		ldr	r0, [r7, #4]
 2792 021e 3837     		adds	r7, r7, #56
 2793              		.cfi_def_cfa_offset 16
 2794 0220 BD46     		mov	sp, r7
 2795              		.cfi_def_cfa_register 13
 2796              		@ sp needed
 2797 0222 B0BD     		pop	{r4, r5, r7, pc}
 2798              	.L151:
 2799              		.align	2
 2800              	.L150:
 2801 0224 00000000 		.word	modem_state
 2802 0228 00000000 		.word	.LC0
 2803 022c 38060000 		.word	.LC66
 2804 0230 4C060000 		.word	.LC67
 2805 0234 5C060000 		.word	.LC68
 2806 0238 68060000 		.word	.LC69
 2807 023c 78060000 		.word	.LC70
 2808 0240 9C060000 		.word	.LC71
 2809 0244 AC060000 		.word	.LC72
 2810 0248 D8020000 		.word	.LC27
 2811 024c BC060000 		.word	.LC73
 2812 0250 D4060000 		.word	.LC74
 2813 0254 D8060000 		.word	.LC75
 2814 0258 E4060000 		.word	.LC76
 2815 025c 00000000 		.word	uart_received_string
 2816 0260 F0060000 		.word	.LC77
 2817 0264 0000C842 		.word	1120403456
 2818 0268 00005940 		.word	1079574528
 2819 026c 00004E40 		.word	1078853632
 2820 0270 10070000 		.word	.LC78
 2821 0274 24070000 		.word	.LC79
 2822 0278 30070000 		.word	.LC80
 2823              		.cfi_endproc
 2824              	.LFE87:
 2825              		.size	modem_get_gps_coordinates, .-modem_get_gps_coordinates
 2826              		.text
 2827              	.Letext0:
 2828              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2829              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2830              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2831              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2832              		.file 6 "testing.h"
 2833              		.file 7 "data.h"
 2834              		.file 8 "modem.h"
 2835              		.file 9 "notoriOS.h"
 2836              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 2837              		.section	.debug_info,"",%progbits
 2838              	.Ldebug_info0:
 2839 0000 D20B0000 		.4byte	0xbd2
 2840 0004 0400     		.2byte	0x4
 2841 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 70


 2842 000a 04       		.byte	0x4
 2843 000b 01       		.uleb128 0x1
 2844 000c 64000000 		.4byte	.LASF159
 2845 0010 0C       		.byte	0xc
 2846 0011 F2030000 		.4byte	.LASF160
 2847 0015 CD020000 		.4byte	.LASF161
 2848 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2849 001d 00000000 		.4byte	0
 2850 0021 00000000 		.4byte	.Ldebug_line0
 2851 0025 02       		.uleb128 0x2
 2852 0026 01       		.byte	0x1
 2853 0027 06       		.byte	0x6
 2854 0028 67010000 		.4byte	.LASF0
 2855 002c 03       		.uleb128 0x3
 2856 002d 38000000 		.4byte	.LASF4
 2857 0031 02       		.byte	0x2
 2858 0032 1D       		.byte	0x1d
 2859 0033 37000000 		.4byte	0x37
 2860 0037 02       		.uleb128 0x2
 2861 0038 01       		.byte	0x1
 2862 0039 08       		.byte	0x8
 2863 003a C0050000 		.4byte	.LASF1
 2864 003e 02       		.uleb128 0x2
 2865 003f 02       		.byte	0x2
 2866 0040 05       		.byte	0x5
 2867 0041 2A040000 		.4byte	.LASF2
 2868 0045 02       		.uleb128 0x2
 2869 0046 02       		.byte	0x2
 2870 0047 07       		.byte	0x7
 2871 0048 75020000 		.4byte	.LASF3
 2872 004c 03       		.uleb128 0x3
 2873 004d 3F040000 		.4byte	.LASF5
 2874 0051 02       		.byte	0x2
 2875 0052 3F       		.byte	0x3f
 2876 0053 57000000 		.4byte	0x57
 2877 0057 02       		.uleb128 0x2
 2878 0058 04       		.byte	0x4
 2879 0059 05       		.byte	0x5
 2880 005a EF010000 		.4byte	.LASF6
 2881 005e 03       		.uleb128 0x3
 2882 005f 98020000 		.4byte	.LASF7
 2883 0063 02       		.byte	0x2
 2884 0064 41       		.byte	0x41
 2885 0065 69000000 		.4byte	0x69
 2886 0069 02       		.uleb128 0x2
 2887 006a 04       		.byte	0x4
 2888 006b 07       		.byte	0x7
 2889 006c 5F030000 		.4byte	.LASF8
 2890 0070 02       		.uleb128 0x2
 2891 0071 08       		.byte	0x8
 2892 0072 05       		.byte	0x5
 2893 0073 59010000 		.4byte	.LASF9
 2894 0077 02       		.uleb128 0x2
 2895 0078 08       		.byte	0x8
 2896 0079 07       		.byte	0x7
 2897 007a FF000000 		.4byte	.LASF10
 2898 007e 04       		.uleb128 0x4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 71


 2899 007f 04       		.byte	0x4
 2900 0080 05       		.byte	0x5
 2901 0081 696E7400 		.ascii	"int\000"
 2902 0085 02       		.uleb128 0x2
 2903 0086 04       		.byte	0x4
 2904 0087 07       		.byte	0x7
 2905 0088 A6060000 		.4byte	.LASF11
 2906 008c 03       		.uleb128 0x3
 2907 008d DD070000 		.4byte	.LASF12
 2908 0091 03       		.byte	0x3
 2909 0092 18       		.byte	0x18
 2910 0093 2C000000 		.4byte	0x2c
 2911 0097 03       		.uleb128 0x3
 2912 0098 B8050000 		.4byte	.LASF13
 2913 009c 03       		.byte	0x3
 2914 009d 2C       		.byte	0x2c
 2915 009e 4C000000 		.4byte	0x4c
 2916 00a2 03       		.uleb128 0x3
 2917 00a3 6D070000 		.4byte	.LASF14
 2918 00a7 03       		.byte	0x3
 2919 00a8 30       		.byte	0x30
 2920 00a9 5E000000 		.4byte	0x5e
 2921 00ad 05       		.uleb128 0x5
 2922 00ae 27020000 		.4byte	.LASF15
 2923 00b2 04       		.byte	0x4
 2924 00b3 9201     		.2byte	0x192
 2925 00b5 37000000 		.4byte	0x37
 2926 00b9 05       		.uleb128 0x5
 2927 00ba 0B000000 		.4byte	.LASF16
 2928 00be 04       		.byte	0x4
 2929 00bf 9301     		.2byte	0x193
 2930 00c1 45000000 		.4byte	0x45
 2931 00c5 05       		.uleb128 0x5
 2932 00c6 88020000 		.4byte	.LASF17
 2933 00ca 04       		.byte	0x4
 2934 00cb 9401     		.2byte	0x194
 2935 00cd 69000000 		.4byte	0x69
 2936 00d1 05       		.uleb128 0x5
 2937 00d2 E5070000 		.4byte	.LASF18
 2938 00d6 04       		.byte	0x4
 2939 00d7 9601     		.2byte	0x196
 2940 00d9 3E000000 		.4byte	0x3e
 2941 00dd 05       		.uleb128 0x5
 2942 00de 34020000 		.4byte	.LASF19
 2943 00e2 04       		.byte	0x4
 2944 00e3 9701     		.2byte	0x197
 2945 00e5 57000000 		.4byte	0x57
 2946 00e9 02       		.uleb128 0x2
 2947 00ea 04       		.byte	0x4
 2948 00eb 04       		.byte	0x4
 2949 00ec 71050000 		.4byte	.LASF20
 2950 00f0 02       		.uleb128 0x2
 2951 00f1 08       		.byte	0x8
 2952 00f2 04       		.byte	0x4
 2953 00f3 2D020000 		.4byte	.LASF21
 2954 00f7 02       		.uleb128 0x2
 2955 00f8 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 72


 2956 00f9 08       		.byte	0x8
 2957 00fa 8D060000 		.4byte	.LASF22
 2958 00fe 02       		.uleb128 0x2
 2959 00ff 08       		.byte	0x8
 2960 0100 04       		.byte	0x4
 2961 0101 81060000 		.4byte	.LASF23
 2962 0105 02       		.uleb128 0x2
 2963 0106 04       		.byte	0x4
 2964 0107 07       		.byte	0x7
 2965 0108 C1040000 		.4byte	.LASF24
 2966 010c 06       		.uleb128 0x6
 2967 010d 04       		.byte	0x4
 2968 010e F7000000 		.4byte	0xf7
 2969 0112 06       		.uleb128 0x6
 2970 0113 04       		.byte	0x4
 2971 0114 18010000 		.4byte	0x118
 2972 0118 07       		.uleb128 0x7
 2973 0119 F7000000 		.4byte	0xf7
 2974 011d 08       		.uleb128 0x8
 2975 011e F7000000 		.4byte	0xf7
 2976 0122 2D010000 		.4byte	0x12d
 2977 0126 09       		.uleb128 0x9
 2978 0127 05010000 		.4byte	0x105
 2979 012b 17       		.byte	0x17
 2980 012c 00       		.byte	0
 2981 012d 0A       		.uleb128 0xa
 2982 012e 746D00   		.ascii	"tm\000"
 2983 0131 24       		.byte	0x24
 2984 0132 05       		.byte	0x5
 2985 0133 21       		.byte	0x21
 2986 0134 A5010000 		.4byte	0x1a5
 2987 0138 0B       		.uleb128 0xb
 2988 0139 76070000 		.4byte	.LASF25
 2989 013d 05       		.byte	0x5
 2990 013e 23       		.byte	0x23
 2991 013f 7E000000 		.4byte	0x7e
 2992 0143 00       		.byte	0
 2993 0144 0B       		.uleb128 0xb
 2994 0145 BA040000 		.4byte	.LASF26
 2995 0149 05       		.byte	0x5
 2996 014a 24       		.byte	0x24
 2997 014b 7E000000 		.4byte	0x7e
 2998 014f 04       		.byte	0x4
 2999 0150 0B       		.uleb128 0xb
 3000 0151 18000000 		.4byte	.LASF27
 3001 0155 05       		.byte	0x5
 3002 0156 25       		.byte	0x25
 3003 0157 7E000000 		.4byte	0x7e
 3004 015b 08       		.byte	0x8
 3005 015c 0B       		.uleb128 0xb
 3006 015d 58070000 		.4byte	.LASF28
 3007 0161 05       		.byte	0x5
 3008 0162 26       		.byte	0x26
 3009 0163 7E000000 		.4byte	0x7e
 3010 0167 0C       		.byte	0xc
 3011 0168 0B       		.uleb128 0xb
 3012 0169 BA020000 		.4byte	.LASF29
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 73


 3013 016d 05       		.byte	0x5
 3014 016e 27       		.byte	0x27
 3015 016f 7E000000 		.4byte	0x7e
 3016 0173 10       		.byte	0x10
 3017 0174 0B       		.uleb128 0xb
 3018 0175 21030000 		.4byte	.LASF30
 3019 0179 05       		.byte	0x5
 3020 017a 28       		.byte	0x28
 3021 017b 7E000000 		.4byte	0x7e
 3022 017f 14       		.byte	0x14
 3023 0180 0B       		.uleb128 0xb
 3024 0181 62060000 		.4byte	.LASF31
 3025 0185 05       		.byte	0x5
 3026 0186 29       		.byte	0x29
 3027 0187 7E000000 		.4byte	0x7e
 3028 018b 18       		.byte	0x18
 3029 018c 0B       		.uleb128 0xb
 3030 018d 20000000 		.4byte	.LASF32
 3031 0191 05       		.byte	0x5
 3032 0192 2A       		.byte	0x2a
 3033 0193 7E000000 		.4byte	0x7e
 3034 0197 1C       		.byte	0x1c
 3035 0198 0B       		.uleb128 0xb
 3036 0199 B9030000 		.4byte	.LASF33
 3037 019d 05       		.byte	0x5
 3038 019e 2B       		.byte	0x2b
 3039 019f 7E000000 		.4byte	0x7e
 3040 01a3 20       		.byte	0x20
 3041 01a4 00       		.byte	0
 3042 01a5 0C       		.uleb128 0xc
 3043 01a6 8101     		.2byte	0x181
 3044 01a8 06       		.byte	0x6
 3045 01a9 0A       		.byte	0xa
 3046 01aa D3010000 		.4byte	0x1d3
 3047 01ae 0B       		.uleb128 0xb
 3048 01af 0B050000 		.4byte	.LASF34
 3049 01b3 06       		.byte	0x6
 3050 01b4 0C       		.byte	0xc
 3051 01b5 D3010000 		.4byte	0x1d3
 3052 01b9 00       		.byte	0
 3053 01ba 0B       		.uleb128 0xb
 3054 01bb AE070000 		.4byte	.LASF35
 3055 01bf 06       		.byte	0x6
 3056 01c0 0D       		.byte	0xd
 3057 01c1 AD000000 		.4byte	0xad
 3058 01c5 80       		.byte	0x80
 3059 01c6 0B       		.uleb128 0xb
 3060 01c7 36060000 		.4byte	.LASF36
 3061 01cb 06       		.byte	0x6
 3062 01cc 0F       		.byte	0xf
 3063 01cd E3010000 		.4byte	0x1e3
 3064 01d1 81       		.byte	0x81
 3065 01d2 00       		.byte	0
 3066 01d3 08       		.uleb128 0x8
 3067 01d4 F7000000 		.4byte	0xf7
 3068 01d8 E3010000 		.4byte	0x1e3
 3069 01dc 09       		.uleb128 0x9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 74


 3070 01dd 05010000 		.4byte	0x105
 3071 01e1 7F       		.byte	0x7f
 3072 01e2 00       		.byte	0
 3073 01e3 08       		.uleb128 0x8
 3074 01e4 F7000000 		.4byte	0xf7
 3075 01e8 F3010000 		.4byte	0x1f3
 3076 01ec 09       		.uleb128 0x9
 3077 01ed 05010000 		.4byte	0x105
 3078 01f1 FF       		.byte	0xff
 3079 01f2 00       		.byte	0
 3080 01f3 03       		.uleb128 0x3
 3081 01f4 1E060000 		.4byte	.LASF37
 3082 01f8 06       		.byte	0x6
 3083 01f9 10       		.byte	0x10
 3084 01fa A5010000 		.4byte	0x1a5
 3085 01fe 0D       		.uleb128 0xd
 3086 01ff 2C       		.byte	0x2c
 3087 0200 07       		.byte	0x7
 3088 0201 14       		.byte	0x14
 3089 0202 2B020000 		.4byte	0x22b
 3090 0206 0E       		.uleb128 0xe
 3091 0207 6B657900 		.ascii	"key\000"
 3092 020b 07       		.byte	0x7
 3093 020c 15       		.byte	0x15
 3094 020d 2B020000 		.4byte	0x22b
 3095 0211 00       		.byte	0
 3096 0212 0B       		.uleb128 0xb
 3097 0213 12000000 		.4byte	.LASF38
 3098 0217 07       		.byte	0x7
 3099 0218 16       		.byte	0x16
 3100 0219 2B020000 		.4byte	0x22b
 3101 021d 14       		.byte	0x14
 3102 021e 0B       		.uleb128 0xb
 3103 021f 4F080000 		.4byte	.LASF39
 3104 0223 07       		.byte	0x7
 3105 0224 17       		.byte	0x17
 3106 0225 DD000000 		.4byte	0xdd
 3107 0229 28       		.byte	0x28
 3108 022a 00       		.byte	0
 3109 022b 08       		.uleb128 0x8
 3110 022c F7000000 		.4byte	0xf7
 3111 0230 3B020000 		.4byte	0x23b
 3112 0234 09       		.uleb128 0x9
 3113 0235 05010000 		.4byte	0x105
 3114 0239 13       		.byte	0x13
 3115 023a 00       		.byte	0
 3116 023b 03       		.uleb128 0x3
 3117 023c 49030000 		.4byte	.LASF40
 3118 0240 07       		.byte	0x7
 3119 0241 19       		.byte	0x19
 3120 0242 FE010000 		.4byte	0x1fe
 3121 0246 0D       		.uleb128 0xd
 3122 0247 3C       		.byte	0x3c
 3123 0248 08       		.byte	0x8
 3124 0249 36       		.byte	0x36
 3125 024a 73020000 		.4byte	0x273
 3126 024e 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 75


 3127 024f 51070000 		.4byte	.LASF41
 3128 0253 08       		.byte	0x8
 3129 0254 37       		.byte	0x37
 3130 0255 2B020000 		.4byte	0x22b
 3131 0259 00       		.byte	0
 3132 025a 0B       		.uleb128 0xb
 3133 025b B8060000 		.4byte	.LASF42
 3134 025f 08       		.byte	0x8
 3135 0260 38       		.byte	0x38
 3136 0261 2B020000 		.4byte	0x22b
 3137 0265 14       		.byte	0x14
 3138 0266 0B       		.uleb128 0xb
 3139 0267 31060000 		.4byte	.LASF43
 3140 026b 08       		.byte	0x8
 3141 026c 39       		.byte	0x39
 3142 026d 2B020000 		.4byte	0x22b
 3143 0271 28       		.byte	0x28
 3144 0272 00       		.byte	0
 3145 0273 03       		.uleb128 0x3
 3146 0274 CC060000 		.4byte	.LASF44
 3147 0278 08       		.byte	0x8
 3148 0279 3B       		.byte	0x3b
 3149 027a 46020000 		.4byte	0x246
 3150 027e 0D       		.uleb128 0xd
 3151 027f 20       		.byte	0x20
 3152 0280 08       		.byte	0x8
 3153 0281 3D       		.byte	0x3d
 3154 0282 E7020000 		.4byte	0x2e7
 3155 0286 0B       		.uleb128 0xb
 3156 0287 E9010000 		.4byte	.LASF45
 3157 028b 08       		.byte	0x8
 3158 028c 3E       		.byte	0x3e
 3159 028d 7E000000 		.4byte	0x7e
 3160 0291 00       		.byte	0
 3161 0292 0E       		.uleb128 0xe
 3162 0293 62657200 		.ascii	"ber\000"
 3163 0297 08       		.byte	0x8
 3164 0298 3F       		.byte	0x3f
 3165 0299 7E000000 		.4byte	0x7e
 3166 029d 04       		.byte	0x4
 3167 029e 0B       		.uleb128 0xb
 3168 029f FF050000 		.4byte	.LASF46
 3169 02a3 08       		.byte	0x8
 3170 02a4 40       		.byte	0x40
 3171 02a5 7E000000 		.4byte	0x7e
 3172 02a9 08       		.byte	0x8
 3173 02aa 0B       		.uleb128 0xb
 3174 02ab 73010000 		.4byte	.LASF47
 3175 02af 08       		.byte	0x8
 3176 02b0 41       		.byte	0x41
 3177 02b1 7E000000 		.4byte	0x7e
 3178 02b5 0C       		.byte	0xc
 3179 02b6 0B       		.uleb128 0xb
 3180 02b7 E4050000 		.4byte	.LASF48
 3181 02bb 08       		.byte	0x8
 3182 02bc 42       		.byte	0x42
 3183 02bd 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 76


 3184 02c1 10       		.byte	0x10
 3185 02c2 0B       		.uleb128 0xb
 3186 02c3 3D060000 		.4byte	.LASF49
 3187 02c7 08       		.byte	0x8
 3188 02c8 43       		.byte	0x43
 3189 02c9 7E000000 		.4byte	0x7e
 3190 02cd 14       		.byte	0x14
 3191 02ce 0B       		.uleb128 0xb
 3192 02cf 95010000 		.4byte	.LASF50
 3193 02d3 08       		.byte	0x8
 3194 02d4 44       		.byte	0x44
 3195 02d5 7E000000 		.4byte	0x7e
 3196 02d9 18       		.byte	0x18
 3197 02da 0B       		.uleb128 0xb
 3198 02db 0D040000 		.4byte	.LASF51
 3199 02df 08       		.byte	0x8
 3200 02e0 45       		.byte	0x45
 3201 02e1 7E000000 		.4byte	0x7e
 3202 02e5 1C       		.byte	0x1c
 3203 02e6 00       		.byte	0
 3204 02e7 03       		.uleb128 0x3
 3205 02e8 42060000 		.4byte	.LASF52
 3206 02ec 08       		.byte	0x8
 3207 02ed 47       		.byte	0x47
 3208 02ee 7E020000 		.4byte	0x27e
 3209 02f2 0D       		.uleb128 0xd
 3210 02f3 10       		.byte	0x10
 3211 02f4 08       		.byte	0x8
 3212 02f5 49       		.byte	0x49
 3213 02f6 37030000 		.4byte	0x337
 3214 02fa 0B       		.uleb128 0xb
 3215 02fb 02050000 		.4byte	.LASF53
 3216 02ff 08       		.byte	0x8
 3217 0300 4A       		.byte	0x4a
 3218 0301 E9000000 		.4byte	0xe9
 3219 0305 00       		.byte	0
 3220 0306 0B       		.uleb128 0xb
 3221 0307 5A000000 		.4byte	.LASF54
 3222 030b 08       		.byte	0x8
 3223 030c 4B       		.byte	0x4b
 3224 030d E9000000 		.4byte	0xe9
 3225 0311 04       		.byte	0x4
 3226 0312 0B       		.uleb128 0xb
 3227 0313 1E020000 		.4byte	.LASF55
 3228 0317 08       		.byte	0x8
 3229 0318 4C       		.byte	0x4c
 3230 0319 E9000000 		.4byte	0xe9
 3231 031d 08       		.byte	0x8
 3232 031e 0B       		.uleb128 0xb
 3233 031f 9F030000 		.4byte	.LASF56
 3234 0323 08       		.byte	0x8
 3235 0324 4D       		.byte	0x4d
 3236 0325 B9000000 		.4byte	0xb9
 3237 0329 0C       		.byte	0xc
 3238 032a 0B       		.uleb128 0xb
 3239 032b 60070000 		.4byte	.LASF57
 3240 032f 08       		.byte	0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 77


 3241 0330 4E       		.byte	0x4e
 3242 0331 AD000000 		.4byte	0xad
 3243 0335 0E       		.byte	0xe
 3244 0336 00       		.byte	0
 3245 0337 03       		.uleb128 0x3
 3246 0338 D9060000 		.4byte	.LASF58
 3247 033c 08       		.byte	0x8
 3248 033d 50       		.byte	0x50
 3249 033e F2020000 		.4byte	0x2f2
 3250 0342 0D       		.uleb128 0xd
 3251 0343 05       		.byte	0x5
 3252 0344 08       		.byte	0x8
 3253 0345 53       		.byte	0x53
 3254 0346 87030000 		.4byte	0x387
 3255 034a 0B       		.uleb128 0xb
 3256 034b 3A020000 		.4byte	.LASF59
 3257 034f 08       		.byte	0x8
 3258 0350 55       		.byte	0x55
 3259 0351 AD000000 		.4byte	0xad
 3260 0355 00       		.byte	0
 3261 0356 0B       		.uleb128 0xb
 3262 0357 96050000 		.4byte	.LASF60
 3263 035b 08       		.byte	0x8
 3264 035c 57       		.byte	0x57
 3265 035d 87030000 		.4byte	0x387
 3266 0361 01       		.byte	0x1
 3267 0362 0B       		.uleb128 0xb
 3268 0363 F1060000 		.4byte	.LASF61
 3269 0367 08       		.byte	0x8
 3270 0368 59       		.byte	0x59
 3271 0369 AD000000 		.4byte	0xad
 3272 036d 02       		.byte	0x2
 3273 036e 0B       		.uleb128 0xb
 3274 036f E9050000 		.4byte	.LASF62
 3275 0373 08       		.byte	0x8
 3276 0374 5B       		.byte	0x5b
 3277 0375 AD000000 		.4byte	0xad
 3278 0379 03       		.byte	0x3
 3279 037a 0B       		.uleb128 0xb
 3280 037b C1020000 		.4byte	.LASF63
 3281 037f 08       		.byte	0x8
 3282 0380 5E       		.byte	0x5e
 3283 0381 AD000000 		.4byte	0xad
 3284 0385 04       		.byte	0x4
 3285 0386 00       		.byte	0
 3286 0387 02       		.uleb128 0x2
 3287 0388 01       		.byte	0x1
 3288 0389 02       		.byte	0x2
 3289 038a B2050000 		.4byte	.LASF64
 3290 038e 03       		.uleb128 0x3
 3291 038f 85040000 		.4byte	.LASF65
 3292 0393 08       		.byte	0x8
 3293 0394 60       		.byte	0x60
 3294 0395 42030000 		.4byte	0x342
 3295 0399 0D       		.uleb128 0xd
 3296 039a 06       		.byte	0x6
 3297 039b 09       		.byte	0x9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 78


 3298 039c 2E       		.byte	0x2e
 3299 039d D2030000 		.4byte	0x3d2
 3300 03a1 0B       		.uleb128 0xb
 3301 03a2 78010000 		.4byte	.LASF66
 3302 03a6 09       		.byte	0x9
 3303 03a7 30       		.byte	0x30
 3304 03a8 B9000000 		.4byte	0xb9
 3305 03ac 00       		.byte	0
 3306 03ad 0B       		.uleb128 0xb
 3307 03ae F8010000 		.4byte	.LASF67
 3308 03b2 09       		.byte	0x9
 3309 03b3 31       		.byte	0x31
 3310 03b4 D1000000 		.4byte	0xd1
 3311 03b8 02       		.byte	0x2
 3312 03b9 0B       		.uleb128 0xb
 3313 03ba FD070000 		.4byte	.LASF68
 3314 03be 09       		.byte	0x9
 3315 03bf 32       		.byte	0x32
 3316 03c0 AD000000 		.4byte	0xad
 3317 03c4 04       		.byte	0x4
 3318 03c5 0B       		.uleb128 0xb
 3319 03c6 42000000 		.4byte	.LASF69
 3320 03ca 09       		.byte	0x9
 3321 03cb 33       		.byte	0x33
 3322 03cc AD000000 		.4byte	0xad
 3323 03d0 05       		.byte	0x5
 3324 03d1 00       		.byte	0
 3325 03d2 03       		.uleb128 0x3
 3326 03d3 AC050000 		.4byte	.LASF70
 3327 03d7 09       		.byte	0x9
 3328 03d8 36       		.byte	0x36
 3329 03d9 DD030000 		.4byte	0x3dd
 3330 03dd 0F       		.uleb128 0xf
 3331 03de 99030000 		.4byte	0x399
 3332 03e2 0D       		.uleb128 0xd
 3333 03e3 1C       		.byte	0x1c
 3334 03e4 09       		.byte	0x9
 3335 03e5 39       		.byte	0x39
 3336 03e6 03040000 		.4byte	0x403
 3337 03ea 0B       		.uleb128 0xb
 3338 03eb C2030000 		.4byte	.LASF71
 3339 03ef 09       		.byte	0x9
 3340 03f0 3B       		.byte	0x3b
 3341 03f1 03040000 		.4byte	0x403
 3342 03f5 00       		.byte	0
 3343 03f6 0B       		.uleb128 0xb
 3344 03f7 D5030000 		.4byte	.LASF72
 3345 03fb 09       		.byte	0x9
 3346 03fc 3C       		.byte	0x3c
 3347 03fd 1D010000 		.4byte	0x11d
 3348 0401 04       		.byte	0x4
 3349 0402 00       		.byte	0
 3350 0403 06       		.uleb128 0x6
 3351 0404 04       		.byte	0x4
 3352 0405 73020000 		.4byte	0x273
 3353 0409 03       		.uleb128 0x3
 3354 040a 7A040000 		.4byte	.LASF73
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 79


 3355 040e 09       		.byte	0x9
 3356 040f 3E       		.byte	0x3e
 3357 0410 E2030000 		.4byte	0x3e2
 3358 0414 0D       		.uleb128 0xd
 3359 0415 68       		.byte	0x68
 3360 0416 09       		.byte	0x9
 3361 0417 44       		.byte	0x44
 3362 0418 35040000 		.4byte	0x435
 3363 041c 0B       		.uleb128 0xb
 3364 041d CD030000 		.4byte	.LASF74
 3365 0421 09       		.byte	0x9
 3366 0422 49       		.byte	0x49
 3367 0423 35040000 		.4byte	0x435
 3368 0427 00       		.byte	0
 3369 0428 0B       		.uleb128 0xb
 3370 0429 B1030000 		.4byte	.LASF75
 3371 042d 09       		.byte	0x9
 3372 042e 4A       		.byte	0x4a
 3373 042f 7E000000 		.4byte	0x7e
 3374 0433 64       		.byte	0x64
 3375 0434 00       		.byte	0
 3376 0435 08       		.uleb128 0x8
 3377 0436 F7000000 		.4byte	0xf7
 3378 043a 45040000 		.4byte	0x445
 3379 043e 09       		.uleb128 0x9
 3380 043f 05010000 		.4byte	0x105
 3381 0443 63       		.byte	0x63
 3382 0444 00       		.byte	0
 3383 0445 03       		.uleb128 0x3
 3384 0446 CE070000 		.4byte	.LASF76
 3385 044a 09       		.byte	0x9
 3386 044b 50       		.byte	0x50
 3387 044c 14040000 		.4byte	0x414
 3388 0450 10       		.uleb128 0x10
 3389 0451 9F050000 		.4byte	.LASF108
 3390 0455 01       		.byte	0x1
 3391 0456 12       		.byte	0x12
 3392 0457 00000000 		.4byte	.LFB64
 3393 045b 44000000 		.4byte	.LFE64-.LFB64
 3394 045f 01       		.uleb128 0x1
 3395 0460 9C       		.byte	0x9c
 3396 0461 11       		.uleb128 0x11
 3397 0462 77050000 		.4byte	.LASF77
 3398 0466 01       		.byte	0x1
 3399 0467 1C       		.byte	0x1c
 3400 0468 00000000 		.4byte	.LFB65
 3401 046c 6C000000 		.4byte	.LFE65-.LFB65
 3402 0470 01       		.uleb128 0x1
 3403 0471 9C       		.byte	0x9c
 3404 0472 11       		.uleb128 0x11
 3405 0473 39070000 		.4byte	.LASF78
 3406 0477 01       		.byte	0x1
 3407 0478 36       		.byte	0x36
 3408 0479 00000000 		.4byte	.LFB66
 3409 047d 32000000 		.4byte	.LFE66-.LFB66
 3410 0481 01       		.uleb128 0x1
 3411 0482 9C       		.byte	0x9c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 80


 3412 0483 11       		.uleb128 0x11
 3413 0484 33030000 		.4byte	.LASF79
 3414 0488 01       		.byte	0x1
 3415 0489 46       		.byte	0x46
 3416 048a 00000000 		.4byte	.LFB67
 3417 048e 20000000 		.4byte	.LFE67-.LFB67
 3418 0492 01       		.uleb128 0x1
 3419 0493 9C       		.byte	0x9c
 3420 0494 11       		.uleb128 0x11
 3421 0495 3E080000 		.4byte	.LASF80
 3422 0499 01       		.byte	0x1
 3423 049a 4F       		.byte	0x4f
 3424 049b 00000000 		.4byte	.LFB68
 3425 049f 44000000 		.4byte	.LFE68-.LFB68
 3426 04a3 01       		.uleb128 0x1
 3427 04a4 9C       		.byte	0x9c
 3428 04a5 12       		.uleb128 0x12
 3429 04a6 E3030000 		.4byte	.LASF94
 3430 04aa 01       		.byte	0x1
 3431 04ab 62       		.byte	0x62
 3432 04ac AD000000 		.4byte	0xad
 3433 04b0 00000000 		.4byte	.LFB69
 3434 04b4 DC000000 		.4byte	.LFE69-.LFB69
 3435 04b8 01       		.uleb128 0x1
 3436 04b9 9C       		.byte	0x9c
 3437 04ba 19050000 		.4byte	0x519
 3438 04be 13       		.uleb128 0x13
 3439 04bf EB070000 		.4byte	.LASF81
 3440 04c3 01       		.byte	0x1
 3441 04c4 6B       		.byte	0x6b
 3442 04c5 AD000000 		.4byte	0xad
 3443 04c9 02       		.uleb128 0x2
 3444 04ca 91       		.byte	0x91
 3445 04cb 77       		.sleb128 -9
 3446 04cc 13       		.uleb128 0x13
 3447 04cd F4070000 		.4byte	.LASF82
 3448 04d1 01       		.byte	0x1
 3449 04d2 6C       		.byte	0x6c
 3450 04d3 AD000000 		.4byte	0xad
 3451 04d7 02       		.uleb128 0x2
 3452 04d8 91       		.byte	0x91
 3453 04d9 74       		.sleb128 -12
 3454 04da 13       		.uleb128 0x13
 3455 04db 0B080000 		.4byte	.LASF83
 3456 04df 01       		.byte	0x1
 3457 04e0 6E       		.byte	0x6e
 3458 04e1 57000000 		.4byte	0x57
 3459 04e5 02       		.uleb128 0x2
 3460 04e6 91       		.byte	0x91
 3461 04e7 70       		.sleb128 -16
 3462 04e8 14       		.uleb128 0x14
 3463 04e9 2C000000 		.4byte	.LBB2
 3464 04ed 4A000000 		.4byte	.LBE2-.LBB2
 3465 04f1 13       		.uleb128 0x13
 3466 04f2 F4070000 		.4byte	.LASF82
 3467 04f6 01       		.byte	0x1
 3468 04f7 71       		.byte	0x71
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 81


 3469 04f8 AD000000 		.4byte	0xad
 3470 04fc 02       		.uleb128 0x2
 3471 04fd 91       		.byte	0x91
 3472 04fe 76       		.sleb128 -10
 3473 04ff 14       		.uleb128 0x14
 3474 0500 32000000 		.4byte	.LBB3
 3475 0504 2A000000 		.4byte	.LBE3-.LBB3
 3476 0508 13       		.uleb128 0x13
 3477 0509 55030000 		.4byte	.LASF84
 3478 050d 01       		.byte	0x1
 3479 050e 73       		.byte	0x73
 3480 050f AD000000 		.4byte	0xad
 3481 0513 02       		.uleb128 0x2
 3482 0514 91       		.byte	0x91
 3483 0515 75       		.sleb128 -11
 3484 0516 00       		.byte	0
 3485 0517 00       		.byte	0
 3486 0518 00       		.byte	0
 3487 0519 11       		.uleb128 0x11
 3488 051a 6A060000 		.4byte	.LASF85
 3489 051e 01       		.byte	0x1
 3490 051f 94       		.byte	0x94
 3491 0520 00000000 		.4byte	.LFB70
 3492 0524 1C000000 		.4byte	.LFE70-.LFB70
 3493 0528 01       		.uleb128 0x1
 3494 0529 9C       		.byte	0x9c
 3495 052a 11       		.uleb128 0x11
 3496 052b 50060000 		.4byte	.LASF86
 3497 052f 01       		.byte	0x1
 3498 0530 9C       		.byte	0x9c
 3499 0531 00000000 		.4byte	.LFB71
 3500 0535 28000000 		.4byte	.LFE71-.LFB71
 3501 0539 01       		.uleb128 0x1
 3502 053a 9C       		.byte	0x9c
 3503 053b 15       		.uleb128 0x15
 3504 053c 69040000 		.4byte	.LASF98
 3505 0540 01       		.byte	0x1
 3506 0541 A7       		.byte	0xa7
 3507 0542 8C000000 		.4byte	0x8c
 3508 0546 00000000 		.4byte	.LFB72
 3509 054a C8000000 		.4byte	.LFE72-.LFB72
 3510 054e 01       		.uleb128 0x1
 3511 054f 9C       		.byte	0x9c
 3512 0550 CD050000 		.4byte	0x5cd
 3513 0554 16       		.uleb128 0x16
 3514 0555 57050000 		.4byte	.LASF87
 3515 0559 01       		.byte	0x1
 3516 055a A7       		.byte	0xa7
 3517 055b 0C010000 		.4byte	0x10c
 3518 055f 02       		.uleb128 0x2
 3519 0560 91       		.byte	0x91
 3520 0561 5C       		.sleb128 -36
 3521 0562 16       		.uleb128 0x16
 3522 0563 15080000 		.4byte	.LASF88
 3523 0567 01       		.byte	0x1
 3524 0568 A7       		.byte	0xa7
 3525 0569 0C010000 		.4byte	0x10c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 82


 3526 056d 02       		.uleb128 0x2
 3527 056e 91       		.byte	0x91
 3528 056f 58       		.sleb128 -40
 3529 0570 16       		.uleb128 0x16
 3530 0571 80030000 		.4byte	.LASF89
 3531 0575 01       		.byte	0x1
 3532 0576 A7       		.byte	0xa7
 3533 0577 A2000000 		.4byte	0xa2
 3534 057b 02       		.uleb128 0x2
 3535 057c 91       		.byte	0x91
 3536 057d 54       		.sleb128 -44
 3537 057e 13       		.uleb128 0x13
 3538 057f 5E040000 		.4byte	.LASF90
 3539 0583 01       		.byte	0x1
 3540 0584 A9       		.byte	0xa9
 3541 0585 C5000000 		.4byte	0xc5
 3542 0589 02       		.uleb128 0x2
 3543 058a 91       		.byte	0x91
 3544 058b 74       		.sleb128 -12
 3545 058c 14       		.uleb128 0x14
 3546 058d 16000000 		.4byte	.LBB4
 3547 0591 88000000 		.4byte	.LBE4-.LBB4
 3548 0595 13       		.uleb128 0x13
 3549 0596 60050000 		.4byte	.LASF91
 3550 059a 01       		.byte	0x1
 3551 059b AD       		.byte	0xad
 3552 059c 0C010000 		.4byte	0x10c
 3553 05a0 02       		.uleb128 0x2
 3554 05a1 91       		.byte	0x91
 3555 05a2 64       		.sleb128 -28
 3556 05a3 13       		.uleb128 0x13
 3557 05a4 DE050000 		.4byte	.LASF92
 3558 05a8 01       		.byte	0x1
 3559 05a9 AE       		.byte	0xae
 3560 05aa A2000000 		.4byte	0xa2
 3561 05ae 02       		.uleb128 0x2
 3562 05af 91       		.byte	0x91
 3563 05b0 6C       		.sleb128 -20
 3564 05b1 17       		.uleb128 0x17
 3565 05b2 6900     		.ascii	"i\000"
 3566 05b4 01       		.byte	0x1
 3567 05b5 AF       		.byte	0xaf
 3568 05b6 A2000000 		.4byte	0xa2
 3569 05ba 02       		.uleb128 0x2
 3570 05bb 91       		.byte	0x91
 3571 05bc 70       		.sleb128 -16
 3572 05bd 13       		.uleb128 0x13
 3573 05be 8F020000 		.4byte	.LASF93
 3574 05c2 01       		.byte	0x1
 3575 05c3 AF       		.byte	0xaf
 3576 05c4 A2000000 		.4byte	0xa2
 3577 05c8 02       		.uleb128 0x2
 3578 05c9 91       		.byte	0x91
 3579 05ca 68       		.sleb128 -24
 3580 05cb 00       		.byte	0
 3581 05cc 00       		.byte	0
 3582 05cd 12       		.uleb128 0x12
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 83


 3583 05ce 2C050000 		.4byte	.LASF95
 3584 05d2 01       		.byte	0x1
 3585 05d3 DB       		.byte	0xdb
 3586 05d4 F3010000 		.4byte	0x1f3
 3587 05d8 00000000 		.4byte	.LFB73
 3588 05dc 00010000 		.4byte	.LFE73-.LFB73
 3589 05e0 01       		.uleb128 0x1
 3590 05e1 9C       		.byte	0x9c
 3591 05e2 24060000 		.4byte	0x624
 3592 05e6 13       		.uleb128 0x13
 3593 05e7 2E010000 		.4byte	.LASF96
 3594 05eb 01       		.byte	0x1
 3595 05ec DD       		.byte	0xdd
 3596 05ed F3010000 		.4byte	0x1f3
 3597 05f1 03       		.uleb128 0x3
 3598 05f2 91       		.byte	0x91
 3599 05f3 E47C     		.sleb128 -412
 3600 05f5 14       		.uleb128 0x14
 3601 05f6 4A000000 		.4byte	.LBB5
 3602 05fa 86000000 		.4byte	.LBE5-.LBB5
 3603 05fe 17       		.uleb128 0x17
 3604 05ff 6900     		.ascii	"i\000"
 3605 0601 01       		.byte	0x1
 3606 0602 E4       		.byte	0xe4
 3607 0603 7E000000 		.4byte	0x7e
 3608 0607 02       		.uleb128 0x2
 3609 0608 91       		.byte	0x91
 3610 0609 6C       		.sleb128 -20
 3611 060a 14       		.uleb128 0x14
 3612 060b 70000000 		.4byte	.LBB6
 3613 060f 46000000 		.4byte	.LBE6-.LBB6
 3614 0613 13       		.uleb128 0x13
 3615 0614 68020000 		.4byte	.LASF97
 3616 0618 01       		.byte	0x1
 3617 0619 F1       		.byte	0xf1
 3618 061a 57000000 		.4byte	0x57
 3619 061e 02       		.uleb128 0x2
 3620 061f 91       		.byte	0x91
 3621 0620 68       		.sleb128 -24
 3622 0621 00       		.byte	0
 3623 0622 00       		.byte	0
 3624 0623 00       		.byte	0
 3625 0624 18       		.uleb128 0x18
 3626 0625 71030000 		.4byte	.LASF99
 3627 0629 01       		.byte	0x1
 3628 062a 0501     		.2byte	0x105
 3629 062c AD000000 		.4byte	0xad
 3630 0630 00000000 		.4byte	.LFB74
 3631 0634 78000000 		.4byte	.LFE74-.LFB74
 3632 0638 01       		.uleb128 0x1
 3633 0639 9C       		.byte	0x9c
 3634 063a 95060000 		.4byte	0x695
 3635 063e 19       		.uleb128 0x19
 3636 063f 49040000 		.4byte	.LASF100
 3637 0643 01       		.byte	0x1
 3638 0644 0501     		.2byte	0x105
 3639 0646 0C010000 		.4byte	0x10c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 84


 3640 064a 02       		.uleb128 0x2
 3641 064b 91       		.byte	0x91
 3642 064c 6C       		.sleb128 -20
 3643 064d 19       		.uleb128 0x19
 3644 064e FA030000 		.4byte	.LASF101
 3645 0652 01       		.byte	0x1
 3646 0653 0501     		.2byte	0x105
 3647 0655 12010000 		.4byte	0x112
 3648 0659 02       		.uleb128 0x2
 3649 065a 91       		.byte	0x91
 3650 065b 68       		.sleb128 -24
 3651 065c 19       		.uleb128 0x19
 3652 065d 20040000 		.4byte	.LASF102
 3653 0661 01       		.byte	0x1
 3654 0662 0501     		.2byte	0x105
 3655 0664 12010000 		.4byte	0x112
 3656 0668 02       		.uleb128 0x2
 3657 0669 91       		.byte	0x91
 3658 066a 64       		.sleb128 -28
 3659 066b 19       		.uleb128 0x19
 3660 066c 06040000 		.4byte	.LASF103
 3661 0670 01       		.byte	0x1
 3662 0671 0501     		.2byte	0x105
 3663 0673 0C010000 		.4byte	0x10c
 3664 0677 02       		.uleb128 0x2
 3665 0678 91       		.byte	0x91
 3666 0679 60       		.sleb128 -32
 3667 067a 1A       		.uleb128 0x1a
 3668 067b 6100     		.ascii	"a\000"
 3669 067d 01       		.byte	0x1
 3670 067e 0701     		.2byte	0x107
 3671 0680 0C010000 		.4byte	0x10c
 3672 0684 02       		.uleb128 0x2
 3673 0685 91       		.byte	0x91
 3674 0686 74       		.sleb128 -12
 3675 0687 1A       		.uleb128 0x1a
 3676 0688 6200     		.ascii	"b\000"
 3677 068a 01       		.byte	0x1
 3678 068b 0701     		.2byte	0x107
 3679 068d 0C010000 		.4byte	0x10c
 3680 0691 02       		.uleb128 0x2
 3681 0692 91       		.byte	0x91
 3682 0693 70       		.sleb128 -16
 3683 0694 00       		.byte	0
 3684 0695 1B       		.uleb128 0x1b
 3685 0696 92060000 		.4byte	.LASF104
 3686 069a 01       		.byte	0x1
 3687 069b 2401     		.2byte	0x124
 3688 069d AD000000 		.4byte	0xad
 3689 06a1 00000000 		.4byte	.LFB75
 3690 06a5 3C010000 		.4byte	.LFE75-.LFB75
 3691 06a9 01       		.uleb128 0x1
 3692 06aa 9C       		.byte	0x9c
 3693 06ab C7060000 		.4byte	0x6c7
 3694 06af 14       		.uleb128 0x14
 3695 06b0 2E000000 		.4byte	.LBB7
 3696 06b4 32000000 		.4byte	.LBE7-.LBB7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 85


 3697 06b8 1A       		.uleb128 0x1a
 3698 06b9 6900     		.ascii	"i\000"
 3699 06bb 01       		.byte	0x1
 3700 06bc 3201     		.2byte	0x132
 3701 06be AD000000 		.4byte	0xad
 3702 06c2 02       		.uleb128 0x2
 3703 06c3 91       		.byte	0x91
 3704 06c4 77       		.sleb128 -9
 3705 06c5 00       		.byte	0
 3706 06c6 00       		.byte	0
 3707 06c7 1B       		.uleb128 0x1b
 3708 06c8 D0040000 		.4byte	.LASF105
 3709 06cc 01       		.byte	0x1
 3710 06cd 6B01     		.2byte	0x16b
 3711 06cf AD000000 		.4byte	0xad
 3712 06d3 00000000 		.4byte	.LFB76
 3713 06d7 B8000000 		.4byte	.LFE76-.LFB76
 3714 06db 01       		.uleb128 0x1
 3715 06dc 9C       		.byte	0x9c
 3716 06dd 0A070000 		.4byte	0x70a
 3717 06e1 1C       		.uleb128 0x1c
 3718 06e2 AE070000 		.4byte	.LASF35
 3719 06e6 01       		.byte	0x1
 3720 06e7 6F01     		.2byte	0x16f
 3721 06e9 AD000000 		.4byte	0xad
 3722 06ed 02       		.uleb128 0x2
 3723 06ee 91       		.byte	0x91
 3724 06ef 77       		.sleb128 -9
 3725 06f0 14       		.uleb128 0x14
 3726 06f1 36000000 		.4byte	.LBB8
 3727 06f5 48000000 		.4byte	.LBE8-.LBB8
 3728 06f9 1C       		.uleb128 0x1c
 3729 06fa 4E040000 		.4byte	.LASF106
 3730 06fe 01       		.byte	0x1
 3731 06ff 7701     		.2byte	0x177
 3732 0701 0A070000 		.4byte	0x70a
 3733 0705 02       		.uleb128 0x2
 3734 0706 91       		.byte	0x91
 3735 0707 6C       		.sleb128 -20
 3736 0708 00       		.byte	0
 3737 0709 00       		.byte	0
 3738 070a 08       		.uleb128 0x8
 3739 070b F7000000 		.4byte	0xf7
 3740 070f 1A070000 		.4byte	0x71a
 3741 0713 09       		.uleb128 0x9
 3742 0714 05010000 		.4byte	0x105
 3743 0718 09       		.byte	0x9
 3744 0719 00       		.byte	0
 3745 071a 1D       		.uleb128 0x1d
 3746 071b C2010000 		.4byte	.LASF107
 3747 071f 01       		.byte	0x1
 3748 0720 8901     		.2byte	0x189
 3749 0722 00000000 		.4byte	.LFB77
 3750 0726 1C000000 		.4byte	.LFE77-.LFB77
 3751 072a 01       		.uleb128 0x1
 3752 072b 9C       		.byte	0x9c
 3753 072c 1E       		.uleb128 0x1e
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 86


 3754 072d FE060000 		.4byte	.LASF109
 3755 0731 01       		.byte	0x1
 3756 0732 9901     		.2byte	0x199
 3757 0734 AD000000 		.4byte	0xad
 3758 0738 00000000 		.4byte	.LFB78
 3759 073c 28000000 		.4byte	.LFE78-.LFB78
 3760 0740 01       		.uleb128 0x1
 3761 0741 9C       		.byte	0x9c
 3762 0742 1F       		.uleb128 0x1f
 3763 0743 88030000 		.4byte	.LASF112
 3764 0747 01       		.byte	0x1
 3765 0748 A401     		.2byte	0x1a4
 3766 074a 00000000 		.4byte	.LFB79
 3767 074e 84000000 		.4byte	.LFE79-.LFB79
 3768 0752 01       		.uleb128 0x1
 3769 0753 9C       		.byte	0x9c
 3770 0754 68070000 		.4byte	0x768
 3771 0758 1C       		.uleb128 0x1c
 3772 0759 37050000 		.4byte	.LASF110
 3773 075d 01       		.byte	0x1
 3774 075e B101     		.2byte	0x1b1
 3775 0760 7E000000 		.4byte	0x7e
 3776 0764 02       		.uleb128 0x2
 3777 0765 91       		.byte	0x91
 3778 0766 74       		.sleb128 -12
 3779 0767 00       		.byte	0
 3780 0768 20       		.uleb128 0x20
 3781 0769 01030000 		.4byte	.LASF111
 3782 076d 01       		.byte	0x1
 3783 076e C301     		.2byte	0x1c3
 3784 0770 00000000 		.4byte	.LFB80
 3785 0774 30000000 		.4byte	.LFE80-.LFB80
 3786 0778 01       		.uleb128 0x1
 3787 0779 9C       		.byte	0x9c
 3788 077a 1F       		.uleb128 0x1f
 3789 077b 7D070000 		.4byte	.LASF113
 3790 077f 01       		.byte	0x1
 3791 0780 CC01     		.2byte	0x1cc
 3792 0782 00000000 		.4byte	.LFB81
 3793 0786 0C020000 		.4byte	.LFE81-.LFB81
 3794 078a 01       		.uleb128 0x1
 3795 078b 9C       		.byte	0x9c
 3796 078c 2D080000 		.4byte	0x82d
 3797 0790 1C       		.uleb128 0x1c
 3798 0791 F3050000 		.4byte	.LASF114
 3799 0795 01       		.byte	0x1
 3800 0796 CF01     		.2byte	0x1cf
 3801 0798 0A070000 		.4byte	0x70a
 3802 079c 02       		.uleb128 0x2
 3803 079d 91       		.byte	0x91
 3804 079e 64       		.sleb128 -28
 3805 079f 1C       		.uleb128 0x1c
 3806 07a0 5D020000 		.4byte	.LASF115
 3807 07a4 01       		.byte	0x1
 3808 07a5 D001     		.2byte	0x1d0
 3809 07a7 0A070000 		.4byte	0x70a
 3810 07ab 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 87


 3811 07ac 91       		.byte	0x91
 3812 07ad 58       		.sleb128 -40
 3813 07ae 1C       		.uleb128 0x1c
 3814 07af A0070000 		.4byte	.LASF116
 3815 07b3 01       		.byte	0x1
 3816 07b4 D101     		.2byte	0x1d1
 3817 07b6 0A070000 		.4byte	0x70a
 3818 07ba 02       		.uleb128 0x2
 3819 07bb 91       		.byte	0x91
 3820 07bc 4C       		.sleb128 -52
 3821 07bd 1C       		.uleb128 0x1c
 3822 07be 88050000 		.4byte	.LASF117
 3823 07c2 01       		.byte	0x1
 3824 07c3 D201     		.2byte	0x1d2
 3825 07c5 0A070000 		.4byte	0x70a
 3826 07c9 02       		.uleb128 0x2
 3827 07ca 91       		.byte	0x91
 3828 07cb 40       		.sleb128 -64
 3829 07cc 1C       		.uleb128 0x1c
 3830 07cd F4020000 		.4byte	.LASF118
 3831 07d1 01       		.byte	0x1
 3832 07d2 D301     		.2byte	0x1d3
 3833 07d4 0A070000 		.4byte	0x70a
 3834 07d8 03       		.uleb128 0x3
 3835 07d9 91       		.byte	0x91
 3836 07da B47F     		.sleb128 -76
 3837 07dc 1C       		.uleb128 0x1c
 3838 07dd 3A020000 		.4byte	.LASF59
 3839 07e1 01       		.byte	0x1
 3840 07e2 E301     		.2byte	0x1e3
 3841 07e4 7E000000 		.4byte	0x7e
 3842 07e8 03       		.uleb128 0x3
 3843 07e9 91       		.byte	0x91
 3844 07ea B07F     		.sleb128 -80
 3845 07ec 1C       		.uleb128 0x1c
 3846 07ed 96050000 		.4byte	.LASF60
 3847 07f1 01       		.byte	0x1
 3848 07f2 E301     		.2byte	0x1e3
 3849 07f4 7E000000 		.4byte	0x7e
 3850 07f8 03       		.uleb128 0x3
 3851 07f9 91       		.byte	0x91
 3852 07fa AC7F     		.sleb128 -84
 3853 07fc 1C       		.uleb128 0x1c
 3854 07fd 16010000 		.4byte	.LASF119
 3855 0801 01       		.byte	0x1
 3856 0802 E301     		.2byte	0x1e3
 3857 0804 7E000000 		.4byte	0x7e
 3858 0808 03       		.uleb128 0x3
 3859 0809 91       		.byte	0x91
 3860 080a A87F     		.sleb128 -88
 3861 080c 1C       		.uleb128 0x1c
 3862 080d 9C040000 		.4byte	.LASF120
 3863 0811 01       		.byte	0x1
 3864 0812 E301     		.2byte	0x1e3
 3865 0814 7E000000 		.4byte	0x7e
 3866 0818 03       		.uleb128 0x3
 3867 0819 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 88


 3868 081a A47F     		.sleb128 -92
 3869 081c 1C       		.uleb128 0x1c
 3870 081d 53040000 		.4byte	.LASF121
 3871 0821 01       		.byte	0x1
 3872 0822 E301     		.2byte	0x1e3
 3873 0824 7E000000 		.4byte	0x7e
 3874 0828 03       		.uleb128 0x3
 3875 0829 91       		.byte	0x91
 3876 082a A07F     		.sleb128 -96
 3877 082c 00       		.byte	0
 3878 082d 1F       		.uleb128 0x1f
 3879 082e 44020000 		.4byte	.LASF122
 3880 0832 01       		.byte	0x1
 3881 0833 0B02     		.2byte	0x20b
 3882 0835 00000000 		.4byte	.LFB82
 3883 0839 68010000 		.4byte	.LFE82-.LFB82
 3884 083d 01       		.uleb128 0x1
 3885 083e 9C       		.byte	0x9c
 3886 083f 5D080000 		.4byte	0x85d
 3887 0843 14       		.uleb128 0x14
 3888 0844 DA000000 		.4byte	.LBB9
 3889 0848 38000000 		.4byte	.LBE9-.LBB9
 3890 084c 1C       		.uleb128 0x1c
 3891 084d B3060000 		.4byte	.LASF123
 3892 0851 01       		.byte	0x1
 3893 0852 3902     		.2byte	0x239
 3894 0854 0A070000 		.4byte	0x70a
 3895 0858 02       		.uleb128 0x2
 3896 0859 91       		.byte	0x91
 3897 085a 6C       		.sleb128 -20
 3898 085b 00       		.byte	0
 3899 085c 00       		.byte	0
 3900 085d 1B       		.uleb128 0x1b
 3901 085e A3020000 		.4byte	.LASF124
 3902 0862 01       		.byte	0x1
 3903 0863 4C02     		.2byte	0x24c
 3904 0865 57000000 		.4byte	0x57
 3905 0869 00000000 		.4byte	.LFB83
 3906 086d 44010000 		.4byte	.LFE83-.LFB83
 3907 0871 01       		.uleb128 0x1
 3908 0872 9C       		.byte	0x9c
 3909 0873 19090000 		.4byte	0x919
 3910 0877 1C       		.uleb128 0x1c
 3911 0878 34040000 		.4byte	.LASF125
 3912 087c 01       		.byte	0x1
 3913 087d 5702     		.2byte	0x257
 3914 087f 57000000 		.4byte	0x57
 3915 0883 02       		.uleb128 0x2
 3916 0884 91       		.byte	0x91
 3917 0885 74       		.sleb128 -12
 3918 0886 14       		.uleb128 0x14
 3919 0887 30000000 		.4byte	.LBB10
 3920 088b DE000000 		.4byte	.LBE10-.LBB10
 3921 088f 1C       		.uleb128 0x1c
 3922 0890 68020000 		.4byte	.LASF97
 3923 0894 01       		.byte	0x1
 3924 0895 5C02     		.2byte	0x25c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 89


 3925 0897 19090000 		.4byte	0x919
 3926 089b 02       		.uleb128 0x2
 3927 089c 91       		.byte	0x91
 3928 089d 54       		.sleb128 -44
 3929 089e 1A       		.uleb128 0x1a
 3930 089f 7400     		.ascii	"t\000"
 3931 08a1 01       		.byte	0x1
 3932 08a2 6202     		.2byte	0x262
 3933 08a4 2D010000 		.4byte	0x12d
 3934 08a8 03       		.uleb128 0x3
 3935 08a9 91       		.byte	0x91
 3936 08aa 947F     		.sleb128 -108
 3937 08ac 1C       		.uleb128 0x1c
 3938 08ad E4010000 		.4byte	.LASF126
 3939 08b1 01       		.byte	0x1
 3940 08b2 6502     		.2byte	0x265
 3941 08b4 7E000000 		.4byte	0x7e
 3942 08b8 02       		.uleb128 0x2
 3943 08b9 91       		.byte	0x91
 3944 08ba 50       		.sleb128 -48
 3945 08bb 1C       		.uleb128 0x1c
 3946 08bc CA040000 		.4byte	.LASF127
 3947 08c0 01       		.byte	0x1
 3948 08c1 6502     		.2byte	0x265
 3949 08c3 7E000000 		.4byte	0x7e
 3950 08c7 02       		.uleb128 0x2
 3951 08c8 91       		.byte	0x91
 3952 08c9 4C       		.sleb128 -52
 3953 08ca 1A       		.uleb128 0x1a
 3954 08cb 64617900 		.ascii	"day\000"
 3955 08cf 01       		.byte	0x1
 3956 08d0 6502     		.2byte	0x265
 3957 08d2 7E000000 		.4byte	0x7e
 3958 08d6 02       		.uleb128 0x2
 3959 08d7 91       		.byte	0x91
 3960 08d8 48       		.sleb128 -56
 3961 08d9 1C       		.uleb128 0x1c
 3962 08da 52050000 		.4byte	.LASF128
 3963 08de 01       		.byte	0x1
 3964 08df 6502     		.2byte	0x265
 3965 08e1 7E000000 		.4byte	0x7e
 3966 08e5 02       		.uleb128 0x2
 3967 08e6 91       		.byte	0x91
 3968 08e7 44       		.sleb128 -60
 3969 08e8 1C       		.uleb128 0x1c
 3970 08e9 66070000 		.4byte	.LASF129
 3971 08ed 01       		.byte	0x1
 3972 08ee 6502     		.2byte	0x265
 3973 08f0 7E000000 		.4byte	0x7e
 3974 08f4 02       		.uleb128 0x2
 3975 08f5 91       		.byte	0x91
 3976 08f6 40       		.sleb128 -64
 3977 08f7 1C       		.uleb128 0x1c
 3978 08f8 DD010000 		.4byte	.LASF130
 3979 08fc 01       		.byte	0x1
 3980 08fd 6502     		.2byte	0x265
 3981 08ff 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 90


 3982 0903 03       		.uleb128 0x3
 3983 0904 91       		.byte	0x91
 3984 0905 BC7F     		.sleb128 -68
 3985 0907 1C       		.uleb128 0x1c
 3986 0908 00000000 		.4byte	.LASF131
 3987 090c 01       		.byte	0x1
 3988 090d 6502     		.2byte	0x265
 3989 090f 7E000000 		.4byte	0x7e
 3990 0913 03       		.uleb128 0x3
 3991 0914 91       		.byte	0x91
 3992 0915 B87F     		.sleb128 -72
 3993 0917 00       		.byte	0
 3994 0918 00       		.byte	0
 3995 0919 08       		.uleb128 0x8
 3996 091a F7000000 		.4byte	0xf7
 3997 091e 29090000 		.4byte	0x929
 3998 0922 09       		.uleb128 0x9
 3999 0923 05010000 		.4byte	0x105
 4000 0927 1D       		.byte	0x1d
 4001 0928 00       		.byte	0
 4002 0929 21       		.uleb128 0x21
 4003 092a 0E020000 		.4byte	.LASF132
 4004 092e 01       		.byte	0x1
 4005 092f 8502     		.2byte	0x285
 4006 0931 AD000000 		.4byte	0xad
 4007 0935 00000000 		.4byte	.LFB84
 4008 0939 14000000 		.4byte	.LFE84-.LFB84
 4009 093d 01       		.uleb128 0x1
 4010 093e 9C       		.byte	0x9c
 4011 093f 1D       		.uleb128 0x1d
 4012 0940 E8020000 		.4byte	.LASF133
 4013 0944 01       		.byte	0x1
 4014 0945 8A02     		.2byte	0x28a
 4015 0947 00000000 		.4byte	.LFB85
 4016 094b 1A000000 		.4byte	.LFE85-.LFB85
 4017 094f 01       		.uleb128 0x1
 4018 0950 9C       		.byte	0x9c
 4019 0951 1D       		.uleb128 0x1d
 4020 0952 F2000000 		.4byte	.LASF134
 4021 0956 01       		.byte	0x1
 4022 0957 9702     		.2byte	0x297
 4023 0959 00000000 		.4byte	.LFB86
 4024 095d 2A000000 		.4byte	.LFE86-.LFB86
 4025 0961 01       		.uleb128 0x1
 4026 0962 9C       		.byte	0x9c
 4027 0963 1B       		.uleb128 0x1b
 4028 0964 04060000 		.4byte	.LASF135
 4029 0968 01       		.byte	0x1
 4030 0969 AA02     		.2byte	0x2aa
 4031 096b 37030000 		.4byte	0x337
 4032 096f 00000000 		.4byte	.LFB87
 4033 0973 7C020000 		.4byte	.LFE87-.LFB87
 4034 0977 01       		.uleb128 0x1
 4035 0978 9C       		.byte	0x9c
 4036 0979 0C0A0000 		.4byte	0xa0c
 4037 097d 1A       		.uleb128 0x1a
 4038 097e 67707300 		.ascii	"gps\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 91


 4039 0982 01       		.byte	0x1
 4040 0983 AB02     		.2byte	0x2ab
 4041 0985 37030000 		.4byte	0x337
 4042 0989 02       		.uleb128 0x2
 4043 098a 91       		.byte	0x91
 4044 098b 4C       		.sleb128 -52
 4045 098c 1C       		.uleb128 0x1c
 4046 098d 27080000 		.4byte	.LASF136
 4047 0991 01       		.byte	0x1
 4048 0992 B702     		.2byte	0x2b7
 4049 0994 57000000 		.4byte	0x57
 4050 0998 02       		.uleb128 0x2
 4051 0999 91       		.byte	0x91
 4052 099a 68       		.sleb128 -24
 4053 099b 1C       		.uleb128 0x1c
 4054 099c 2E070000 		.4byte	.LASF137
 4055 09a0 01       		.byte	0x1
 4056 09a1 DE02     		.2byte	0x2de
 4057 09a3 AD000000 		.4byte	0xad
 4058 09a7 02       		.uleb128 0x2
 4059 09a8 91       		.byte	0x91
 4060 09a9 67       		.sleb128 -25
 4061 09aa 1A       		.uleb128 0x1a
 4062 09ab 6C617400 		.ascii	"lat\000"
 4063 09af 01       		.byte	0x1
 4064 09b0 EA02     		.2byte	0x2ea
 4065 09b2 E9000000 		.4byte	0xe9
 4066 09b6 02       		.uleb128 0x2
 4067 09b7 91       		.byte	0x91
 4068 09b8 48       		.sleb128 -56
 4069 09b9 1A       		.uleb128 0x1a
 4070 09ba 6C6F6E00 		.ascii	"lon\000"
 4071 09be 01       		.byte	0x1
 4072 09bf EB02     		.2byte	0x2eb
 4073 09c1 E9000000 		.4byte	0xe9
 4074 09c5 02       		.uleb128 0x2
 4075 09c6 91       		.byte	0x91
 4076 09c7 44       		.sleb128 -60
 4077 09c8 1A       		.uleb128 0x1a
 4078 09c9 616C7400 		.ascii	"alt\000"
 4079 09cd 01       		.byte	0x1
 4080 09ce EC02     		.2byte	0x2ec
 4081 09d0 E9000000 		.4byte	0xe9
 4082 09d4 02       		.uleb128 0x2
 4083 09d5 91       		.byte	0x91
 4084 09d6 40       		.sleb128 -64
 4085 09d7 1A       		.uleb128 0x1a
 4086 09d8 733100   		.ascii	"s1\000"
 4087 09db 01       		.byte	0x1
 4088 09dc F002     		.2byte	0x2f0
 4089 09de 0C010000 		.4byte	0x10c
 4090 09e2 02       		.uleb128 0x2
 4091 09e3 91       		.byte	0x91
 4092 09e4 60       		.sleb128 -32
 4093 09e5 1C       		.uleb128 0x1c
 4094 09e6 37050000 		.4byte	.LASF110
 4095 09ea 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 92


 4096 09eb F302     		.2byte	0x2f3
 4097 09ed 7E000000 		.4byte	0x7e
 4098 09f1 02       		.uleb128 0x2
 4099 09f2 91       		.byte	0x91
 4100 09f3 5C       		.sleb128 -36
 4101 09f4 14       		.uleb128 0x14
 4102 09f5 B4000000 		.4byte	.LBB11
 4103 09f9 38000000 		.4byte	.LBE11-.LBB11
 4104 09fd 1A       		.uleb128 0x1a
 4105 09fe 6900     		.ascii	"i\000"
 4106 0a00 01       		.byte	0x1
 4107 0a01 DF02     		.2byte	0x2df
 4108 0a03 B9000000 		.4byte	0xb9
 4109 0a07 02       		.uleb128 0x2
 4110 0a08 91       		.byte	0x91
 4111 0a09 6E       		.sleb128 -18
 4112 0a0a 00       		.byte	0
 4113 0a0b 00       		.byte	0
 4114 0a0c 22       		.uleb128 0x22
 4115 0a0d 40010000 		.4byte	.LASF138
 4116 0a11 0A       		.byte	0xa
 4117 0a12 1207     		.2byte	0x712
 4118 0a14 180A0000 		.4byte	0xa18
 4119 0a18 0F       		.uleb128 0xf
 4120 0a19 97000000 		.4byte	0x97
 4121 0a1d 23       		.uleb128 0x23
 4122 0a1e 28000000 		.4byte	.LASF139
 4123 0a22 07       		.byte	0x7
 4124 0a23 11       		.byte	0x11
 4125 0a24 87030000 		.4byte	0x387
 4126 0a28 05       		.uleb128 0x5
 4127 0a29 03       		.byte	0x3
 4128 0a2a 00000000 		.4byte	buffer_overflow
 4129 0a2e 23       		.uleb128 0x23
 4130 0a2f A8040000 		.4byte	.LASF140
 4131 0a33 07       		.byte	0x7
 4132 0a34 22       		.byte	0x22
 4133 0a35 B9000000 		.4byte	0xb9
 4134 0a39 05       		.uleb128 0x5
 4135 0a3a 03       		.byte	0x3
 4136 0a3b 00000000 		.4byte	dataPointsInStack
 4137 0a3f 23       		.uleb128 0x23
 4138 0a40 B5070000 		.4byte	.LASF141
 4139 0a44 07       		.byte	0x7
 4140 0a45 23       		.byte	0x23
 4141 0a46 B9000000 		.4byte	0xb9
 4142 0a4a 05       		.uleb128 0x5
 4143 0a4b 03       		.byte	0x3
 4144 0a4c 00000000 		.4byte	dataPointsInStackDesired
 4145 0a50 08       		.uleb128 0x8
 4146 0a51 3B020000 		.4byte	0x23b
 4147 0a55 600A0000 		.4byte	0xa60
 4148 0a59 09       		.uleb128 0x9
 4149 0a5a 05010000 		.4byte	0x105
 4150 0a5e 95       		.byte	0x95
 4151 0a5f 00       		.byte	0
 4152 0a60 23       		.uleb128 0x23
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 93


 4153 0a61 AC030000 		.4byte	.LASF142
 4154 0a65 07       		.byte	0x7
 4155 0a66 24       		.byte	0x24
 4156 0a67 500A0000 		.4byte	0xa50
 4157 0a6b 05       		.uleb128 0x5
 4158 0a6c 03       		.byte	0x3
 4159 0a6d 00000000 		.4byte	data
 4160 0a71 23       		.uleb128 0x23
 4161 0a72 22010000 		.4byte	.LASF143
 4162 0a76 08       		.byte	0x8
 4163 0a77 20       		.byte	0x20
 4164 0a78 AD000000 		.4byte	0xad
 4165 0a7c 05       		.uleb128 0x5
 4166 0a7d 03       		.byte	0x3
 4167 0a7e 00000000 		.4byte	modem_state
 4168 0a82 23       		.uleb128 0x23
 4169 0a83 17070000 		.4byte	.LASF144
 4170 0a87 08       		.byte	0x8
 4171 0a88 63       		.byte	0x63
 4172 0a89 DD000000 		.4byte	0xdd
 4173 0a8d 05       		.uleb128 0x5
 4174 0a8e 03       		.byte	0x3
 4175 0a8f 00000000 		.4byte	modem_start_time_stamp
 4176 0a93 23       		.uleb128 0x23
 4177 0a94 C2030000 		.4byte	.LASF71
 4178 0a98 08       		.byte	0x8
 4179 0a99 64       		.byte	0x64
 4180 0a9a 73020000 		.4byte	0x273
 4181 0a9e 05       		.uleb128 0x5
 4182 0a9f 03       		.byte	0x3
 4183 0aa0 00000000 		.4byte	modem_info
 4184 0aa4 23       		.uleb128 0x23
 4185 0aa5 4D010000 		.4byte	.LASF145
 4186 0aa9 08       		.byte	0x8
 4187 0aaa 65       		.byte	0x65
 4188 0aab E7020000 		.4byte	0x2e7
 4189 0aaf 05       		.uleb128 0x5
 4190 0ab0 03       		.byte	0x3
 4191 0ab1 00000000 		.4byte	modem_stats
 4192 0ab5 23       		.uleb128 0x23
 4193 0ab6 3D050000 		.4byte	.LASF146
 4194 0aba 08       		.byte	0x8
 4195 0abb 66       		.byte	0x66
 4196 0abc 8E030000 		.4byte	0x38e
 4197 0ac0 05       		.uleb128 0x5
 4198 0ac1 03       		.byte	0x3
 4199 0ac2 00000000 		.4byte	updatable_parameters
 4200 0ac6 08       		.uleb128 0x8
 4201 0ac7 F7000000 		.4byte	0xf7
 4202 0acb D70A0000 		.4byte	0xad7
 4203 0acf 24       		.uleb128 0x24
 4204 0ad0 05010000 		.4byte	0x105
 4205 0ad4 0F27     		.2byte	0x270f
 4206 0ad6 00       		.byte	0
 4207 0ad7 23       		.uleb128 0x23
 4208 0ad8 31080000 		.4byte	.LASF147
 4209 0adc 09       		.byte	0x9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 94


 4210 0add 18       		.byte	0x18
 4211 0ade C60A0000 		.4byte	0xac6
 4212 0ae2 05       		.uleb128 0x5
 4213 0ae3 03       		.byte	0x3
 4214 0ae4 00000000 		.4byte	http_request
 4215 0ae8 23       		.uleb128 0x23
 4216 0ae9 B8010000 		.4byte	.LASF148
 4217 0aed 09       		.byte	0x9
 4218 0aee 19       		.byte	0x19
 4219 0aef C60A0000 		.4byte	0xac6
 4220 0af3 05       		.uleb128 0x5
 4221 0af4 03       		.byte	0x3
 4222 0af5 00000000 		.4byte	http_body
 4223 0af9 08       		.uleb128 0x8
 4224 0afa F7000000 		.4byte	0xf7
 4225 0afe 090B0000 		.4byte	0xb09
 4226 0b02 09       		.uleb128 0x9
 4227 0b03 05010000 		.4byte	0x105
 4228 0b07 C7       		.byte	0xc7
 4229 0b08 00       		.byte	0
 4230 0b09 23       		.uleb128 0x23
 4231 0b0a C1060000 		.4byte	.LASF149
 4232 0b0e 09       		.byte	0x9
 4233 0b0f 1A       		.byte	0x1a
 4234 0b10 F90A0000 		.4byte	0xaf9
 4235 0b14 05       		.uleb128 0x5
 4236 0b15 03       		.byte	0x3
 4237 0b16 00000000 		.4byte	http_route
 4238 0b1a 23       		.uleb128 0x23
 4239 0b1b 25060000 		.4byte	.LASF150
 4240 0b1f 09       		.byte	0x9
 4241 0b20 41       		.byte	0x41
 4242 0b21 09040000 		.4byte	0x409
 4243 0b25 05       		.uleb128 0x5
 4244 0b26 03       		.byte	0x3
 4245 0b27 00000000 		.4byte	system_info
 4246 0b2b 23       		.uleb128 0x23
 4247 0b2c CE050000 		.4byte	.LASF151
 4248 0b30 09       		.byte	0x9
 4249 0b31 53       		.byte	0x53
 4250 0b32 45040000 		.4byte	0x445
 4251 0b36 05       		.uleb128 0x5
 4252 0b37 03       		.byte	0x3
 4253 0b38 00000000 		.4byte	system_settings
 4254 0b3c 23       		.uleb128 0x23
 4255 0b3d 33010000 		.4byte	.LASF152
 4256 0b41 09       		.byte	0x9
 4257 0b42 6F       		.byte	0x6f
 4258 0b43 D2030000 		.4byte	0x3d2
 4259 0b47 05       		.uleb128 0x5
 4260 0b48 03       		.byte	0x3
 4261 0b49 00000000 		.4byte	alarmMeasure
 4262 0b4d 23       		.uleb128 0x23
 4263 0b4e 87010000 		.4byte	.LASF153
 4264 0b52 09       		.byte	0x9
 4265 0b53 70       		.byte	0x70
 4266 0b54 AD000000 		.4byte	0xad
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 95


 4267 0b58 05       		.uleb128 0x5
 4268 0b59 03       		.byte	0x3
 4269 0b5a 00000000 		.4byte	timeToMeasure
 4270 0b5e 23       		.uleb128 0x23
 4271 0b5f 29030000 		.4byte	.LASF154
 4272 0b63 09       		.byte	0x9
 4273 0b64 71       		.byte	0x71
 4274 0b65 D2030000 		.4byte	0x3d2
 4275 0b69 05       		.uleb128 0x5
 4276 0b6a 03       		.byte	0x3
 4277 0b6b 00000000 		.4byte	alarmSync
 4278 0b6f 23       		.uleb128 0x23
 4279 0b70 AD010000 		.4byte	.LASF155
 4280 0b74 09       		.byte	0x9
 4281 0b75 72       		.byte	0x72
 4282 0b76 AD000000 		.4byte	0xad
 4283 0b7a 05       		.uleb128 0x5
 4284 0b7b 03       		.byte	0x3
 4285 0b7c 00000000 		.4byte	timeToSync
 4286 0b80 23       		.uleb128 0x23
 4287 0b81 15050000 		.4byte	.LASF156
 4288 0b85 09       		.byte	0x9
 4289 0b86 73       		.byte	0x73
 4290 0b87 AD000000 		.4byte	0xad
 4291 0b8b 05       		.uleb128 0x5
 4292 0b8c 03       		.byte	0x3
 4293 0b8d 00000000 		.4byte	timeToSycnRemoteParams
 4294 0b91 25       		.uleb128 0x25
 4295 0b92 68657900 		.ascii	"hey\000"
 4296 0b96 09       		.byte	0x9
 4297 0b97 74       		.byte	0x74
 4298 0b98 AD000000 		.4byte	0xad
 4299 0b9c 05       		.uleb128 0x5
 4300 0b9d 03       		.byte	0x3
 4301 0b9e 00000000 		.4byte	hey
 4302 0ba2 08       		.uleb128 0x8
 4303 0ba3 F7000000 		.4byte	0xf7
 4304 0ba7 B30B0000 		.4byte	0xbb3
 4305 0bab 24       		.uleb128 0x24
 4306 0bac 05010000 		.4byte	0x105
 4307 0bb0 FF03     		.2byte	0x3ff
 4308 0bb2 00       		.byte	0
 4309 0bb3 23       		.uleb128 0x23
 4310 0bb4 ED040000 		.4byte	.LASF157
 4311 0bb8 01       		.byte	0x1
 4312 0bb9 05       		.byte	0x5
 4313 0bba A20B0000 		.4byte	0xba2
 4314 0bbe 05       		.uleb128 0x5
 4315 0bbf 03       		.byte	0x3
 4316 0bc0 00000000 		.4byte	uart_received_string
 4317 0bc4 23       		.uleb128 0x23
 4318 0bc5 DF060000 		.4byte	.LASF158
 4319 0bc9 01       		.byte	0x1
 4320 0bca 06       		.byte	0x6
 4321 0bcb D1000000 		.4byte	0xd1
 4322 0bcf 05       		.uleb128 0x5
 4323 0bd0 03       		.byte	0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 96


 4324 0bd1 00000000 		.4byte	uart_string_index
 4325 0bd5 00       		.byte	0
 4326              		.section	.debug_abbrev,"",%progbits
 4327              	.Ldebug_abbrev0:
 4328 0000 01       		.uleb128 0x1
 4329 0001 11       		.uleb128 0x11
 4330 0002 01       		.byte	0x1
 4331 0003 25       		.uleb128 0x25
 4332 0004 0E       		.uleb128 0xe
 4333 0005 13       		.uleb128 0x13
 4334 0006 0B       		.uleb128 0xb
 4335 0007 03       		.uleb128 0x3
 4336 0008 0E       		.uleb128 0xe
 4337 0009 1B       		.uleb128 0x1b
 4338 000a 0E       		.uleb128 0xe
 4339 000b 55       		.uleb128 0x55
 4340 000c 17       		.uleb128 0x17
 4341 000d 11       		.uleb128 0x11
 4342 000e 01       		.uleb128 0x1
 4343 000f 10       		.uleb128 0x10
 4344 0010 17       		.uleb128 0x17
 4345 0011 00       		.byte	0
 4346 0012 00       		.byte	0
 4347 0013 02       		.uleb128 0x2
 4348 0014 24       		.uleb128 0x24
 4349 0015 00       		.byte	0
 4350 0016 0B       		.uleb128 0xb
 4351 0017 0B       		.uleb128 0xb
 4352 0018 3E       		.uleb128 0x3e
 4353 0019 0B       		.uleb128 0xb
 4354 001a 03       		.uleb128 0x3
 4355 001b 0E       		.uleb128 0xe
 4356 001c 00       		.byte	0
 4357 001d 00       		.byte	0
 4358 001e 03       		.uleb128 0x3
 4359 001f 16       		.uleb128 0x16
 4360 0020 00       		.byte	0
 4361 0021 03       		.uleb128 0x3
 4362 0022 0E       		.uleb128 0xe
 4363 0023 3A       		.uleb128 0x3a
 4364 0024 0B       		.uleb128 0xb
 4365 0025 3B       		.uleb128 0x3b
 4366 0026 0B       		.uleb128 0xb
 4367 0027 49       		.uleb128 0x49
 4368 0028 13       		.uleb128 0x13
 4369 0029 00       		.byte	0
 4370 002a 00       		.byte	0
 4371 002b 04       		.uleb128 0x4
 4372 002c 24       		.uleb128 0x24
 4373 002d 00       		.byte	0
 4374 002e 0B       		.uleb128 0xb
 4375 002f 0B       		.uleb128 0xb
 4376 0030 3E       		.uleb128 0x3e
 4377 0031 0B       		.uleb128 0xb
 4378 0032 03       		.uleb128 0x3
 4379 0033 08       		.uleb128 0x8
 4380 0034 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 97


 4381 0035 00       		.byte	0
 4382 0036 05       		.uleb128 0x5
 4383 0037 16       		.uleb128 0x16
 4384 0038 00       		.byte	0
 4385 0039 03       		.uleb128 0x3
 4386 003a 0E       		.uleb128 0xe
 4387 003b 3A       		.uleb128 0x3a
 4388 003c 0B       		.uleb128 0xb
 4389 003d 3B       		.uleb128 0x3b
 4390 003e 05       		.uleb128 0x5
 4391 003f 49       		.uleb128 0x49
 4392 0040 13       		.uleb128 0x13
 4393 0041 00       		.byte	0
 4394 0042 00       		.byte	0
 4395 0043 06       		.uleb128 0x6
 4396 0044 0F       		.uleb128 0xf
 4397 0045 00       		.byte	0
 4398 0046 0B       		.uleb128 0xb
 4399 0047 0B       		.uleb128 0xb
 4400 0048 49       		.uleb128 0x49
 4401 0049 13       		.uleb128 0x13
 4402 004a 00       		.byte	0
 4403 004b 00       		.byte	0
 4404 004c 07       		.uleb128 0x7
 4405 004d 26       		.uleb128 0x26
 4406 004e 00       		.byte	0
 4407 004f 49       		.uleb128 0x49
 4408 0050 13       		.uleb128 0x13
 4409 0051 00       		.byte	0
 4410 0052 00       		.byte	0
 4411 0053 08       		.uleb128 0x8
 4412 0054 01       		.uleb128 0x1
 4413 0055 01       		.byte	0x1
 4414 0056 49       		.uleb128 0x49
 4415 0057 13       		.uleb128 0x13
 4416 0058 01       		.uleb128 0x1
 4417 0059 13       		.uleb128 0x13
 4418 005a 00       		.byte	0
 4419 005b 00       		.byte	0
 4420 005c 09       		.uleb128 0x9
 4421 005d 21       		.uleb128 0x21
 4422 005e 00       		.byte	0
 4423 005f 49       		.uleb128 0x49
 4424 0060 13       		.uleb128 0x13
 4425 0061 2F       		.uleb128 0x2f
 4426 0062 0B       		.uleb128 0xb
 4427 0063 00       		.byte	0
 4428 0064 00       		.byte	0
 4429 0065 0A       		.uleb128 0xa
 4430 0066 13       		.uleb128 0x13
 4431 0067 01       		.byte	0x1
 4432 0068 03       		.uleb128 0x3
 4433 0069 08       		.uleb128 0x8
 4434 006a 0B       		.uleb128 0xb
 4435 006b 0B       		.uleb128 0xb
 4436 006c 3A       		.uleb128 0x3a
 4437 006d 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 98


 4438 006e 3B       		.uleb128 0x3b
 4439 006f 0B       		.uleb128 0xb
 4440 0070 01       		.uleb128 0x1
 4441 0071 13       		.uleb128 0x13
 4442 0072 00       		.byte	0
 4443 0073 00       		.byte	0
 4444 0074 0B       		.uleb128 0xb
 4445 0075 0D       		.uleb128 0xd
 4446 0076 00       		.byte	0
 4447 0077 03       		.uleb128 0x3
 4448 0078 0E       		.uleb128 0xe
 4449 0079 3A       		.uleb128 0x3a
 4450 007a 0B       		.uleb128 0xb
 4451 007b 3B       		.uleb128 0x3b
 4452 007c 0B       		.uleb128 0xb
 4453 007d 49       		.uleb128 0x49
 4454 007e 13       		.uleb128 0x13
 4455 007f 38       		.uleb128 0x38
 4456 0080 0B       		.uleb128 0xb
 4457 0081 00       		.byte	0
 4458 0082 00       		.byte	0
 4459 0083 0C       		.uleb128 0xc
 4460 0084 13       		.uleb128 0x13
 4461 0085 01       		.byte	0x1
 4462 0086 0B       		.uleb128 0xb
 4463 0087 05       		.uleb128 0x5
 4464 0088 3A       		.uleb128 0x3a
 4465 0089 0B       		.uleb128 0xb
 4466 008a 3B       		.uleb128 0x3b
 4467 008b 0B       		.uleb128 0xb
 4468 008c 01       		.uleb128 0x1
 4469 008d 13       		.uleb128 0x13
 4470 008e 00       		.byte	0
 4471 008f 00       		.byte	0
 4472 0090 0D       		.uleb128 0xd
 4473 0091 13       		.uleb128 0x13
 4474 0092 01       		.byte	0x1
 4475 0093 0B       		.uleb128 0xb
 4476 0094 0B       		.uleb128 0xb
 4477 0095 3A       		.uleb128 0x3a
 4478 0096 0B       		.uleb128 0xb
 4479 0097 3B       		.uleb128 0x3b
 4480 0098 0B       		.uleb128 0xb
 4481 0099 01       		.uleb128 0x1
 4482 009a 13       		.uleb128 0x13
 4483 009b 00       		.byte	0
 4484 009c 00       		.byte	0
 4485 009d 0E       		.uleb128 0xe
 4486 009e 0D       		.uleb128 0xd
 4487 009f 00       		.byte	0
 4488 00a0 03       		.uleb128 0x3
 4489 00a1 08       		.uleb128 0x8
 4490 00a2 3A       		.uleb128 0x3a
 4491 00a3 0B       		.uleb128 0xb
 4492 00a4 3B       		.uleb128 0x3b
 4493 00a5 0B       		.uleb128 0xb
 4494 00a6 49       		.uleb128 0x49
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 99


 4495 00a7 13       		.uleb128 0x13
 4496 00a8 38       		.uleb128 0x38
 4497 00a9 0B       		.uleb128 0xb
 4498 00aa 00       		.byte	0
 4499 00ab 00       		.byte	0
 4500 00ac 0F       		.uleb128 0xf
 4501 00ad 35       		.uleb128 0x35
 4502 00ae 00       		.byte	0
 4503 00af 49       		.uleb128 0x49
 4504 00b0 13       		.uleb128 0x13
 4505 00b1 00       		.byte	0
 4506 00b2 00       		.byte	0
 4507 00b3 10       		.uleb128 0x10
 4508 00b4 2E       		.uleb128 0x2e
 4509 00b5 00       		.byte	0
 4510 00b6 3F       		.uleb128 0x3f
 4511 00b7 19       		.uleb128 0x19
 4512 00b8 03       		.uleb128 0x3
 4513 00b9 0E       		.uleb128 0xe
 4514 00ba 3A       		.uleb128 0x3a
 4515 00bb 0B       		.uleb128 0xb
 4516 00bc 3B       		.uleb128 0x3b
 4517 00bd 0B       		.uleb128 0xb
 4518 00be 27       		.uleb128 0x27
 4519 00bf 19       		.uleb128 0x19
 4520 00c0 11       		.uleb128 0x11
 4521 00c1 01       		.uleb128 0x1
 4522 00c2 12       		.uleb128 0x12
 4523 00c3 06       		.uleb128 0x6
 4524 00c4 40       		.uleb128 0x40
 4525 00c5 18       		.uleb128 0x18
 4526 00c6 9642     		.uleb128 0x2116
 4527 00c8 19       		.uleb128 0x19
 4528 00c9 00       		.byte	0
 4529 00ca 00       		.byte	0
 4530 00cb 11       		.uleb128 0x11
 4531 00cc 2E       		.uleb128 0x2e
 4532 00cd 00       		.byte	0
 4533 00ce 3F       		.uleb128 0x3f
 4534 00cf 19       		.uleb128 0x19
 4535 00d0 03       		.uleb128 0x3
 4536 00d1 0E       		.uleb128 0xe
 4537 00d2 3A       		.uleb128 0x3a
 4538 00d3 0B       		.uleb128 0xb
 4539 00d4 3B       		.uleb128 0x3b
 4540 00d5 0B       		.uleb128 0xb
 4541 00d6 11       		.uleb128 0x11
 4542 00d7 01       		.uleb128 0x1
 4543 00d8 12       		.uleb128 0x12
 4544 00d9 06       		.uleb128 0x6
 4545 00da 40       		.uleb128 0x40
 4546 00db 18       		.uleb128 0x18
 4547 00dc 9642     		.uleb128 0x2116
 4548 00de 19       		.uleb128 0x19
 4549 00df 00       		.byte	0
 4550 00e0 00       		.byte	0
 4551 00e1 12       		.uleb128 0x12
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 100


 4552 00e2 2E       		.uleb128 0x2e
 4553 00e3 01       		.byte	0x1
 4554 00e4 3F       		.uleb128 0x3f
 4555 00e5 19       		.uleb128 0x19
 4556 00e6 03       		.uleb128 0x3
 4557 00e7 0E       		.uleb128 0xe
 4558 00e8 3A       		.uleb128 0x3a
 4559 00e9 0B       		.uleb128 0xb
 4560 00ea 3B       		.uleb128 0x3b
 4561 00eb 0B       		.uleb128 0xb
 4562 00ec 49       		.uleb128 0x49
 4563 00ed 13       		.uleb128 0x13
 4564 00ee 11       		.uleb128 0x11
 4565 00ef 01       		.uleb128 0x1
 4566 00f0 12       		.uleb128 0x12
 4567 00f1 06       		.uleb128 0x6
 4568 00f2 40       		.uleb128 0x40
 4569 00f3 18       		.uleb128 0x18
 4570 00f4 9642     		.uleb128 0x2116
 4571 00f6 19       		.uleb128 0x19
 4572 00f7 01       		.uleb128 0x1
 4573 00f8 13       		.uleb128 0x13
 4574 00f9 00       		.byte	0
 4575 00fa 00       		.byte	0
 4576 00fb 13       		.uleb128 0x13
 4577 00fc 34       		.uleb128 0x34
 4578 00fd 00       		.byte	0
 4579 00fe 03       		.uleb128 0x3
 4580 00ff 0E       		.uleb128 0xe
 4581 0100 3A       		.uleb128 0x3a
 4582 0101 0B       		.uleb128 0xb
 4583 0102 3B       		.uleb128 0x3b
 4584 0103 0B       		.uleb128 0xb
 4585 0104 49       		.uleb128 0x49
 4586 0105 13       		.uleb128 0x13
 4587 0106 02       		.uleb128 0x2
 4588 0107 18       		.uleb128 0x18
 4589 0108 00       		.byte	0
 4590 0109 00       		.byte	0
 4591 010a 14       		.uleb128 0x14
 4592 010b 0B       		.uleb128 0xb
 4593 010c 01       		.byte	0x1
 4594 010d 11       		.uleb128 0x11
 4595 010e 01       		.uleb128 0x1
 4596 010f 12       		.uleb128 0x12
 4597 0110 06       		.uleb128 0x6
 4598 0111 00       		.byte	0
 4599 0112 00       		.byte	0
 4600 0113 15       		.uleb128 0x15
 4601 0114 2E       		.uleb128 0x2e
 4602 0115 01       		.byte	0x1
 4603 0116 3F       		.uleb128 0x3f
 4604 0117 19       		.uleb128 0x19
 4605 0118 03       		.uleb128 0x3
 4606 0119 0E       		.uleb128 0xe
 4607 011a 3A       		.uleb128 0x3a
 4608 011b 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 101


 4609 011c 3B       		.uleb128 0x3b
 4610 011d 0B       		.uleb128 0xb
 4611 011e 27       		.uleb128 0x27
 4612 011f 19       		.uleb128 0x19
 4613 0120 49       		.uleb128 0x49
 4614 0121 13       		.uleb128 0x13
 4615 0122 11       		.uleb128 0x11
 4616 0123 01       		.uleb128 0x1
 4617 0124 12       		.uleb128 0x12
 4618 0125 06       		.uleb128 0x6
 4619 0126 40       		.uleb128 0x40
 4620 0127 18       		.uleb128 0x18
 4621 0128 9642     		.uleb128 0x2116
 4622 012a 19       		.uleb128 0x19
 4623 012b 01       		.uleb128 0x1
 4624 012c 13       		.uleb128 0x13
 4625 012d 00       		.byte	0
 4626 012e 00       		.byte	0
 4627 012f 16       		.uleb128 0x16
 4628 0130 05       		.uleb128 0x5
 4629 0131 00       		.byte	0
 4630 0132 03       		.uleb128 0x3
 4631 0133 0E       		.uleb128 0xe
 4632 0134 3A       		.uleb128 0x3a
 4633 0135 0B       		.uleb128 0xb
 4634 0136 3B       		.uleb128 0x3b
 4635 0137 0B       		.uleb128 0xb
 4636 0138 49       		.uleb128 0x49
 4637 0139 13       		.uleb128 0x13
 4638 013a 02       		.uleb128 0x2
 4639 013b 18       		.uleb128 0x18
 4640 013c 00       		.byte	0
 4641 013d 00       		.byte	0
 4642 013e 17       		.uleb128 0x17
 4643 013f 34       		.uleb128 0x34
 4644 0140 00       		.byte	0
 4645 0141 03       		.uleb128 0x3
 4646 0142 08       		.uleb128 0x8
 4647 0143 3A       		.uleb128 0x3a
 4648 0144 0B       		.uleb128 0xb
 4649 0145 3B       		.uleb128 0x3b
 4650 0146 0B       		.uleb128 0xb
 4651 0147 49       		.uleb128 0x49
 4652 0148 13       		.uleb128 0x13
 4653 0149 02       		.uleb128 0x2
 4654 014a 18       		.uleb128 0x18
 4655 014b 00       		.byte	0
 4656 014c 00       		.byte	0
 4657 014d 18       		.uleb128 0x18
 4658 014e 2E       		.uleb128 0x2e
 4659 014f 01       		.byte	0x1
 4660 0150 3F       		.uleb128 0x3f
 4661 0151 19       		.uleb128 0x19
 4662 0152 03       		.uleb128 0x3
 4663 0153 0E       		.uleb128 0xe
 4664 0154 3A       		.uleb128 0x3a
 4665 0155 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 102


 4666 0156 3B       		.uleb128 0x3b
 4667 0157 05       		.uleb128 0x5
 4668 0158 27       		.uleb128 0x27
 4669 0159 19       		.uleb128 0x19
 4670 015a 49       		.uleb128 0x49
 4671 015b 13       		.uleb128 0x13
 4672 015c 11       		.uleb128 0x11
 4673 015d 01       		.uleb128 0x1
 4674 015e 12       		.uleb128 0x12
 4675 015f 06       		.uleb128 0x6
 4676 0160 40       		.uleb128 0x40
 4677 0161 18       		.uleb128 0x18
 4678 0162 9642     		.uleb128 0x2116
 4679 0164 19       		.uleb128 0x19
 4680 0165 01       		.uleb128 0x1
 4681 0166 13       		.uleb128 0x13
 4682 0167 00       		.byte	0
 4683 0168 00       		.byte	0
 4684 0169 19       		.uleb128 0x19
 4685 016a 05       		.uleb128 0x5
 4686 016b 00       		.byte	0
 4687 016c 03       		.uleb128 0x3
 4688 016d 0E       		.uleb128 0xe
 4689 016e 3A       		.uleb128 0x3a
 4690 016f 0B       		.uleb128 0xb
 4691 0170 3B       		.uleb128 0x3b
 4692 0171 05       		.uleb128 0x5
 4693 0172 49       		.uleb128 0x49
 4694 0173 13       		.uleb128 0x13
 4695 0174 02       		.uleb128 0x2
 4696 0175 18       		.uleb128 0x18
 4697 0176 00       		.byte	0
 4698 0177 00       		.byte	0
 4699 0178 1A       		.uleb128 0x1a
 4700 0179 34       		.uleb128 0x34
 4701 017a 00       		.byte	0
 4702 017b 03       		.uleb128 0x3
 4703 017c 08       		.uleb128 0x8
 4704 017d 3A       		.uleb128 0x3a
 4705 017e 0B       		.uleb128 0xb
 4706 017f 3B       		.uleb128 0x3b
 4707 0180 05       		.uleb128 0x5
 4708 0181 49       		.uleb128 0x49
 4709 0182 13       		.uleb128 0x13
 4710 0183 02       		.uleb128 0x2
 4711 0184 18       		.uleb128 0x18
 4712 0185 00       		.byte	0
 4713 0186 00       		.byte	0
 4714 0187 1B       		.uleb128 0x1b
 4715 0188 2E       		.uleb128 0x2e
 4716 0189 01       		.byte	0x1
 4717 018a 3F       		.uleb128 0x3f
 4718 018b 19       		.uleb128 0x19
 4719 018c 03       		.uleb128 0x3
 4720 018d 0E       		.uleb128 0xe
 4721 018e 3A       		.uleb128 0x3a
 4722 018f 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 103


 4723 0190 3B       		.uleb128 0x3b
 4724 0191 05       		.uleb128 0x5
 4725 0192 49       		.uleb128 0x49
 4726 0193 13       		.uleb128 0x13
 4727 0194 11       		.uleb128 0x11
 4728 0195 01       		.uleb128 0x1
 4729 0196 12       		.uleb128 0x12
 4730 0197 06       		.uleb128 0x6
 4731 0198 40       		.uleb128 0x40
 4732 0199 18       		.uleb128 0x18
 4733 019a 9642     		.uleb128 0x2116
 4734 019c 19       		.uleb128 0x19
 4735 019d 01       		.uleb128 0x1
 4736 019e 13       		.uleb128 0x13
 4737 019f 00       		.byte	0
 4738 01a0 00       		.byte	0
 4739 01a1 1C       		.uleb128 0x1c
 4740 01a2 34       		.uleb128 0x34
 4741 01a3 00       		.byte	0
 4742 01a4 03       		.uleb128 0x3
 4743 01a5 0E       		.uleb128 0xe
 4744 01a6 3A       		.uleb128 0x3a
 4745 01a7 0B       		.uleb128 0xb
 4746 01a8 3B       		.uleb128 0x3b
 4747 01a9 05       		.uleb128 0x5
 4748 01aa 49       		.uleb128 0x49
 4749 01ab 13       		.uleb128 0x13
 4750 01ac 02       		.uleb128 0x2
 4751 01ad 18       		.uleb128 0x18
 4752 01ae 00       		.byte	0
 4753 01af 00       		.byte	0
 4754 01b0 1D       		.uleb128 0x1d
 4755 01b1 2E       		.uleb128 0x2e
 4756 01b2 00       		.byte	0
 4757 01b3 3F       		.uleb128 0x3f
 4758 01b4 19       		.uleb128 0x19
 4759 01b5 03       		.uleb128 0x3
 4760 01b6 0E       		.uleb128 0xe
 4761 01b7 3A       		.uleb128 0x3a
 4762 01b8 0B       		.uleb128 0xb
 4763 01b9 3B       		.uleb128 0x3b
 4764 01ba 05       		.uleb128 0x5
 4765 01bb 11       		.uleb128 0x11
 4766 01bc 01       		.uleb128 0x1
 4767 01bd 12       		.uleb128 0x12
 4768 01be 06       		.uleb128 0x6
 4769 01bf 40       		.uleb128 0x40
 4770 01c0 18       		.uleb128 0x18
 4771 01c1 9642     		.uleb128 0x2116
 4772 01c3 19       		.uleb128 0x19
 4773 01c4 00       		.byte	0
 4774 01c5 00       		.byte	0
 4775 01c6 1E       		.uleb128 0x1e
 4776 01c7 2E       		.uleb128 0x2e
 4777 01c8 00       		.byte	0
 4778 01c9 3F       		.uleb128 0x3f
 4779 01ca 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 104


 4780 01cb 03       		.uleb128 0x3
 4781 01cc 0E       		.uleb128 0xe
 4782 01cd 3A       		.uleb128 0x3a
 4783 01ce 0B       		.uleb128 0xb
 4784 01cf 3B       		.uleb128 0x3b
 4785 01d0 05       		.uleb128 0x5
 4786 01d1 49       		.uleb128 0x49
 4787 01d2 13       		.uleb128 0x13
 4788 01d3 11       		.uleb128 0x11
 4789 01d4 01       		.uleb128 0x1
 4790 01d5 12       		.uleb128 0x12
 4791 01d6 06       		.uleb128 0x6
 4792 01d7 40       		.uleb128 0x40
 4793 01d8 18       		.uleb128 0x18
 4794 01d9 9642     		.uleb128 0x2116
 4795 01db 19       		.uleb128 0x19
 4796 01dc 00       		.byte	0
 4797 01dd 00       		.byte	0
 4798 01de 1F       		.uleb128 0x1f
 4799 01df 2E       		.uleb128 0x2e
 4800 01e0 01       		.byte	0x1
 4801 01e1 3F       		.uleb128 0x3f
 4802 01e2 19       		.uleb128 0x19
 4803 01e3 03       		.uleb128 0x3
 4804 01e4 0E       		.uleb128 0xe
 4805 01e5 3A       		.uleb128 0x3a
 4806 01e6 0B       		.uleb128 0xb
 4807 01e7 3B       		.uleb128 0x3b
 4808 01e8 05       		.uleb128 0x5
 4809 01e9 11       		.uleb128 0x11
 4810 01ea 01       		.uleb128 0x1
 4811 01eb 12       		.uleb128 0x12
 4812 01ec 06       		.uleb128 0x6
 4813 01ed 40       		.uleb128 0x40
 4814 01ee 18       		.uleb128 0x18
 4815 01ef 9642     		.uleb128 0x2116
 4816 01f1 19       		.uleb128 0x19
 4817 01f2 01       		.uleb128 0x1
 4818 01f3 13       		.uleb128 0x13
 4819 01f4 00       		.byte	0
 4820 01f5 00       		.byte	0
 4821 01f6 20       		.uleb128 0x20
 4822 01f7 2E       		.uleb128 0x2e
 4823 01f8 00       		.byte	0
 4824 01f9 3F       		.uleb128 0x3f
 4825 01fa 19       		.uleb128 0x19
 4826 01fb 03       		.uleb128 0x3
 4827 01fc 0E       		.uleb128 0xe
 4828 01fd 3A       		.uleb128 0x3a
 4829 01fe 0B       		.uleb128 0xb
 4830 01ff 3B       		.uleb128 0x3b
 4831 0200 05       		.uleb128 0x5
 4832 0201 11       		.uleb128 0x11
 4833 0202 01       		.uleb128 0x1
 4834 0203 12       		.uleb128 0x12
 4835 0204 06       		.uleb128 0x6
 4836 0205 40       		.uleb128 0x40
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 105


 4837 0206 18       		.uleb128 0x18
 4838 0207 9742     		.uleb128 0x2117
 4839 0209 19       		.uleb128 0x19
 4840 020a 00       		.byte	0
 4841 020b 00       		.byte	0
 4842 020c 21       		.uleb128 0x21
 4843 020d 2E       		.uleb128 0x2e
 4844 020e 00       		.byte	0
 4845 020f 3F       		.uleb128 0x3f
 4846 0210 19       		.uleb128 0x19
 4847 0211 03       		.uleb128 0x3
 4848 0212 0E       		.uleb128 0xe
 4849 0213 3A       		.uleb128 0x3a
 4850 0214 0B       		.uleb128 0xb
 4851 0215 3B       		.uleb128 0x3b
 4852 0216 05       		.uleb128 0x5
 4853 0217 49       		.uleb128 0x49
 4854 0218 13       		.uleb128 0x13
 4855 0219 11       		.uleb128 0x11
 4856 021a 01       		.uleb128 0x1
 4857 021b 12       		.uleb128 0x12
 4858 021c 06       		.uleb128 0x6
 4859 021d 40       		.uleb128 0x40
 4860 021e 18       		.uleb128 0x18
 4861 021f 9742     		.uleb128 0x2117
 4862 0221 19       		.uleb128 0x19
 4863 0222 00       		.byte	0
 4864 0223 00       		.byte	0
 4865 0224 22       		.uleb128 0x22
 4866 0225 34       		.uleb128 0x34
 4867 0226 00       		.byte	0
 4868 0227 03       		.uleb128 0x3
 4869 0228 0E       		.uleb128 0xe
 4870 0229 3A       		.uleb128 0x3a
 4871 022a 0B       		.uleb128 0xb
 4872 022b 3B       		.uleb128 0x3b
 4873 022c 05       		.uleb128 0x5
 4874 022d 49       		.uleb128 0x49
 4875 022e 13       		.uleb128 0x13
 4876 022f 3F       		.uleb128 0x3f
 4877 0230 19       		.uleb128 0x19
 4878 0231 3C       		.uleb128 0x3c
 4879 0232 19       		.uleb128 0x19
 4880 0233 00       		.byte	0
 4881 0234 00       		.byte	0
 4882 0235 23       		.uleb128 0x23
 4883 0236 34       		.uleb128 0x34
 4884 0237 00       		.byte	0
 4885 0238 03       		.uleb128 0x3
 4886 0239 0E       		.uleb128 0xe
 4887 023a 3A       		.uleb128 0x3a
 4888 023b 0B       		.uleb128 0xb
 4889 023c 3B       		.uleb128 0x3b
 4890 023d 0B       		.uleb128 0xb
 4891 023e 49       		.uleb128 0x49
 4892 023f 13       		.uleb128 0x13
 4893 0240 3F       		.uleb128 0x3f
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 106


 4894 0241 19       		.uleb128 0x19
 4895 0242 02       		.uleb128 0x2
 4896 0243 18       		.uleb128 0x18
 4897 0244 00       		.byte	0
 4898 0245 00       		.byte	0
 4899 0246 24       		.uleb128 0x24
 4900 0247 21       		.uleb128 0x21
 4901 0248 00       		.byte	0
 4902 0249 49       		.uleb128 0x49
 4903 024a 13       		.uleb128 0x13
 4904 024b 2F       		.uleb128 0x2f
 4905 024c 05       		.uleb128 0x5
 4906 024d 00       		.byte	0
 4907 024e 00       		.byte	0
 4908 024f 25       		.uleb128 0x25
 4909 0250 34       		.uleb128 0x34
 4910 0251 00       		.byte	0
 4911 0252 03       		.uleb128 0x3
 4912 0253 08       		.uleb128 0x8
 4913 0254 3A       		.uleb128 0x3a
 4914 0255 0B       		.uleb128 0xb
 4915 0256 3B       		.uleb128 0x3b
 4916 0257 0B       		.uleb128 0xb
 4917 0258 49       		.uleb128 0x49
 4918 0259 13       		.uleb128 0x13
 4919 025a 3F       		.uleb128 0x3f
 4920 025b 19       		.uleb128 0x19
 4921 025c 02       		.uleb128 0x2
 4922 025d 18       		.uleb128 0x18
 4923 025e 00       		.byte	0
 4924 025f 00       		.byte	0
 4925 0260 00       		.byte	0
 4926              		.section	.debug_aranges,"",%progbits
 4927 0000 D4000000 		.4byte	0xd4
 4928 0004 0200     		.2byte	0x2
 4929 0006 00000000 		.4byte	.Ldebug_info0
 4930 000a 04       		.byte	0x4
 4931 000b 00       		.byte	0
 4932 000c 0000     		.2byte	0
 4933 000e 0000     		.2byte	0
 4934 0010 00000000 		.4byte	.LFB64
 4935 0014 44000000 		.4byte	.LFE64-.LFB64
 4936 0018 00000000 		.4byte	.LFB65
 4937 001c 6C000000 		.4byte	.LFE65-.LFB65
 4938 0020 00000000 		.4byte	.LFB66
 4939 0024 32000000 		.4byte	.LFE66-.LFB66
 4940 0028 00000000 		.4byte	.LFB67
 4941 002c 20000000 		.4byte	.LFE67-.LFB67
 4942 0030 00000000 		.4byte	.LFB68
 4943 0034 44000000 		.4byte	.LFE68-.LFB68
 4944 0038 00000000 		.4byte	.LFB69
 4945 003c DC000000 		.4byte	.LFE69-.LFB69
 4946 0040 00000000 		.4byte	.LFB70
 4947 0044 1C000000 		.4byte	.LFE70-.LFB70
 4948 0048 00000000 		.4byte	.LFB71
 4949 004c 28000000 		.4byte	.LFE71-.LFB71
 4950 0050 00000000 		.4byte	.LFB72
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 107


 4951 0054 C8000000 		.4byte	.LFE72-.LFB72
 4952 0058 00000000 		.4byte	.LFB73
 4953 005c 00010000 		.4byte	.LFE73-.LFB73
 4954 0060 00000000 		.4byte	.LFB74
 4955 0064 78000000 		.4byte	.LFE74-.LFB74
 4956 0068 00000000 		.4byte	.LFB75
 4957 006c 3C010000 		.4byte	.LFE75-.LFB75
 4958 0070 00000000 		.4byte	.LFB76
 4959 0074 B8000000 		.4byte	.LFE76-.LFB76
 4960 0078 00000000 		.4byte	.LFB77
 4961 007c 1C000000 		.4byte	.LFE77-.LFB77
 4962 0080 00000000 		.4byte	.LFB78
 4963 0084 28000000 		.4byte	.LFE78-.LFB78
 4964 0088 00000000 		.4byte	.LFB79
 4965 008c 84000000 		.4byte	.LFE79-.LFB79
 4966 0090 00000000 		.4byte	.LFB80
 4967 0094 30000000 		.4byte	.LFE80-.LFB80
 4968 0098 00000000 		.4byte	.LFB81
 4969 009c 0C020000 		.4byte	.LFE81-.LFB81
 4970 00a0 00000000 		.4byte	.LFB82
 4971 00a4 68010000 		.4byte	.LFE82-.LFB82
 4972 00a8 00000000 		.4byte	.LFB83
 4973 00ac 44010000 		.4byte	.LFE83-.LFB83
 4974 00b0 00000000 		.4byte	.LFB84
 4975 00b4 14000000 		.4byte	.LFE84-.LFB84
 4976 00b8 00000000 		.4byte	.LFB85
 4977 00bc 1A000000 		.4byte	.LFE85-.LFB85
 4978 00c0 00000000 		.4byte	.LFB86
 4979 00c4 2A000000 		.4byte	.LFE86-.LFB86
 4980 00c8 00000000 		.4byte	.LFB87
 4981 00cc 7C020000 		.4byte	.LFE87-.LFB87
 4982 00d0 00000000 		.4byte	0
 4983 00d4 00000000 		.4byte	0
 4984              		.section	.debug_ranges,"",%progbits
 4985              	.Ldebug_ranges0:
 4986 0000 00000000 		.4byte	.LFB64
 4987 0004 44000000 		.4byte	.LFE64
 4988 0008 00000000 		.4byte	.LFB65
 4989 000c 6C000000 		.4byte	.LFE65
 4990 0010 00000000 		.4byte	.LFB66
 4991 0014 32000000 		.4byte	.LFE66
 4992 0018 00000000 		.4byte	.LFB67
 4993 001c 20000000 		.4byte	.LFE67
 4994 0020 00000000 		.4byte	.LFB68
 4995 0024 44000000 		.4byte	.LFE68
 4996 0028 00000000 		.4byte	.LFB69
 4997 002c DC000000 		.4byte	.LFE69
 4998 0030 00000000 		.4byte	.LFB70
 4999 0034 1C000000 		.4byte	.LFE70
 5000 0038 00000000 		.4byte	.LFB71
 5001 003c 28000000 		.4byte	.LFE71
 5002 0040 00000000 		.4byte	.LFB72
 5003 0044 C8000000 		.4byte	.LFE72
 5004 0048 00000000 		.4byte	.LFB73
 5005 004c 00010000 		.4byte	.LFE73
 5006 0050 00000000 		.4byte	.LFB74
 5007 0054 78000000 		.4byte	.LFE74
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 108


 5008 0058 00000000 		.4byte	.LFB75
 5009 005c 3C010000 		.4byte	.LFE75
 5010 0060 00000000 		.4byte	.LFB76
 5011 0064 B8000000 		.4byte	.LFE76
 5012 0068 00000000 		.4byte	.LFB77
 5013 006c 1C000000 		.4byte	.LFE77
 5014 0070 00000000 		.4byte	.LFB78
 5015 0074 28000000 		.4byte	.LFE78
 5016 0078 00000000 		.4byte	.LFB79
 5017 007c 84000000 		.4byte	.LFE79
 5018 0080 00000000 		.4byte	.LFB80
 5019 0084 30000000 		.4byte	.LFE80
 5020 0088 00000000 		.4byte	.LFB81
 5021 008c 0C020000 		.4byte	.LFE81
 5022 0090 00000000 		.4byte	.LFB82
 5023 0094 68010000 		.4byte	.LFE82
 5024 0098 00000000 		.4byte	.LFB83
 5025 009c 44010000 		.4byte	.LFE83
 5026 00a0 00000000 		.4byte	.LFB84
 5027 00a4 14000000 		.4byte	.LFE84
 5028 00a8 00000000 		.4byte	.LFB85
 5029 00ac 1A000000 		.4byte	.LFE85
 5030 00b0 00000000 		.4byte	.LFB86
 5031 00b4 2A000000 		.4byte	.LFE86
 5032 00b8 00000000 		.4byte	.LFB87
 5033 00bc 7C020000 		.4byte	.LFE87
 5034 00c0 00000000 		.4byte	0
 5035 00c4 00000000 		.4byte	0
 5036              		.section	.debug_line,"",%progbits
 5037              	.Ldebug_line0:
 5038 0000 54050000 		.section	.debug_str,"MS",%progbits,1
 5038      0200EF01 
 5038      00000201 
 5038      FB0E0D00 
 5038      01010101 
 5039              	.LASF131:
 5040 0000 676D745F 		.ascii	"gmt_offset\000"
 5040      6F666673 
 5040      657400
 5041              	.LASF16:
 5042 000b 75696E74 		.ascii	"uint16\000"
 5042      313600
 5043              	.LASF38:
 5044 0012 76616C75 		.ascii	"value\000"
 5044      6500
 5045              	.LASF27:
 5046 0018 746D5F68 		.ascii	"tm_hour\000"
 5046      6F757200 
 5047              	.LASF32:
 5048 0020 746D5F79 		.ascii	"tm_yday\000"
 5048      64617900 
 5049              	.LASF139:
 5050 0028 62756666 		.ascii	"buffer_overflow\000"
 5050      65725F6F 
 5050      76657266 
 5050      6C6F7700 
 5051              	.LASF4:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 109


 5052 0038 5F5F7569 		.ascii	"__uint8_t\000"
 5052      6E74385F 
 5052      7400
 5053              	.LASF69:
 5054 0042 636F756E 		.ascii	"countDownResetCondition\000"
 5054      74446F77 
 5054      6E526573 
 5054      6574436F 
 5054      6E646974 
 5055              	.LASF54:
 5056 005a 6C6F6E67 		.ascii	"longitude\000"
 5056      69747564 
 5056      6500
 5057              	.LASF159:
 5058 0064 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5058      43313120 
 5058      352E342E 
 5058      31203230 
 5058      31363036 
 5059 0097 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 5059      20726576 
 5059      6973696F 
 5059      6E203233 
 5059      37373135 
 5060 00ca 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5060      66756E63 
 5060      74696F6E 
 5060      2D736563 
 5060      74696F6E 
 5061              	.LASF134:
 5062 00f2 6D6F6465 		.ascii	"modem_wakeup\000"
 5062      6D5F7761 
 5062      6B657570 
 5062      00
 5063              	.LASF10:
 5064 00ff 6C6F6E67 		.ascii	"long long unsigned int\000"
 5064      206C6F6E 
 5064      6720756E 
 5064      7369676E 
 5064      65642069 
 5065              	.LASF119:
 5066 0116 73616D70 		.ascii	"sample_freq\000"
 5066      6C655F66 
 5066      72657100 
 5067              	.LASF143:
 5068 0122 6D6F6465 		.ascii	"modem_state\000"
 5068      6D5F7374 
 5068      61746500 
 5069              	.LASF96:
 5070 012e 74657374 		.ascii	"test\000"
 5070      00
 5071              	.LASF152:
 5072 0133 616C6172 		.ascii	"alarmMeasure\000"
 5072      6D4D6561 
 5072      73757265 
 5072      00
 5073              	.LASF138:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 110


 5074 0140 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5074      52784275 
 5074      66666572 
 5074      00
 5075              	.LASF145:
 5076 014d 6D6F6465 		.ascii	"modem_stats\000"
 5076      6D5F7374 
 5076      61747300 
 5077              	.LASF9:
 5078 0159 6C6F6E67 		.ascii	"long long int\000"
 5078      206C6F6E 
 5078      6720696E 
 5078      7400
 5079              	.LASF0:
 5080 0167 7369676E 		.ascii	"signed char\000"
 5080      65642063 
 5080      68617200 
 5081              	.LASF47:
 5082 0173 65636E6F 		.ascii	"ecno\000"
 5082      00
 5083              	.LASF66:
 5084 0178 636F756E 		.ascii	"countDownValue\000"
 5084      74446F77 
 5084      6E56616C 
 5084      756500
 5085              	.LASF153:
 5086 0187 74696D65 		.ascii	"timeToMeasure\000"
 5086      546F4D65 
 5086      61737572 
 5086      6500
 5087              	.LASF50:
 5088 0195 74696D65 		.ascii	"time_to_network_connect\000"
 5088      5F746F5F 
 5088      6E657477 
 5088      6F726B5F 
 5088      636F6E6E 
 5089              	.LASF155:
 5090 01ad 74696D65 		.ascii	"timeToSync\000"
 5090      546F5379 
 5090      6E6300
 5091              	.LASF148:
 5092 01b8 68747470 		.ascii	"http_body\000"
 5092      5F626F64 
 5092      7900
 5093              	.LASF107:
 5094 01c2 7365745F 		.ascii	"set_up_internet_connection\000"
 5094      75705F69 
 5094      6E746572 
 5094      6E65745F 
 5094      636F6E6E 
 5095              	.LASF130:
 5096 01dd 7365636F 		.ascii	"second\000"
 5096      6E6400
 5097              	.LASF126:
 5098 01e4 79656172 		.ascii	"year\000"
 5098      00
 5099              	.LASF45:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 111


 5100 01e9 72786C65 		.ascii	"rxlev\000"
 5100      7600
 5101              	.LASF6:
 5102 01ef 6C6F6E67 		.ascii	"long int\000"
 5102      20696E74 
 5102      00
 5103              	.LASF67:
 5104 01f8 63757272 		.ascii	"currentCountDownValue\000"
 5104      656E7443 
 5104      6F756E74 
 5104      446F776E 
 5104      56616C75 
 5105              	.LASF132:
 5106 020e 6D6F6465 		.ascii	"modem_get_state\000"
 5106      6D5F6765 
 5106      745F7374 
 5106      61746500 
 5107              	.LASF55:
 5108 021e 616C7469 		.ascii	"altitude\000"
 5108      74756465 
 5108      00
 5109              	.LASF15:
 5110 0227 75696E74 		.ascii	"uint8\000"
 5110      3800
 5111              	.LASF21:
 5112 022d 646F7562 		.ascii	"double\000"
 5112      6C6500
 5113              	.LASF19:
 5114 0234 696E7433 		.ascii	"int32\000"
 5114      3200
 5115              	.LASF59:
 5116 023a 6E6F6465 		.ascii	"node_type\000"
 5116      5F747970 
 5116      6500
 5117              	.LASF122:
 5118 0244 6D6F6465 		.ascii	"modem_configure_settings\000"
 5118      6D5F636F 
 5118      6E666967 
 5118      7572655F 
 5118      73657474 
 5119              	.LASF115:
 5120 025d 735F7369 		.ascii	"s_sim_type\000"
 5120      6D5F7479 
 5120      706500
 5121              	.LASF97:
 5122 0268 6E657477 		.ascii	"network_time\000"
 5122      6F726B5F 
 5122      74696D65 
 5122      00
 5123              	.LASF3:
 5124 0275 73686F72 		.ascii	"short unsigned int\000"
 5124      7420756E 
 5124      7369676E 
 5124      65642069 
 5124      6E7400
 5125              	.LASF17:
 5126 0288 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 112


 5126      333200
 5127              	.LASF93:
 5128 028f 696E7465 		.ascii	"interval\000"
 5128      7276616C 
 5128      00
 5129              	.LASF7:
 5130 0298 5F5F7569 		.ascii	"__uint32_t\000"
 5130      6E743332 
 5130      5F7400
 5131              	.LASF124:
 5132 02a3 6D6F6465 		.ascii	"modem_get_network_time\000"
 5132      6D5F6765 
 5132      745F6E65 
 5132      74776F72 
 5132      6B5F7469 
 5133              	.LASF29:
 5134 02ba 746D5F6D 		.ascii	"tm_mon\000"
 5134      6F6E00
 5135              	.LASF63:
 5136 02c1 64656275 		.ascii	"debug_level\000"
 5136      675F6C65 
 5136      76656C00 
 5137              	.LASF161:
 5138 02cd 433A5C6E 		.ascii	"C:\\notoriOS\\notoriOS.cydsn\000"
 5138      6F746F72 
 5138      694F535C 
 5138      6E6F746F 
 5138      72694F53 
 5139              	.LASF133:
 5140 02e8 6D6F6465 		.ascii	"modem_sleep\000"
 5140      6D5F736C 
 5140      65657000 
 5141              	.LASF118:
 5142 02f4 735F6465 		.ascii	"s_debug_freq\000"
 5142      6275675F 
 5142      66726571 
 5142      00
 5143              	.LASF111:
 5144 0301 75706461 		.ascii	"updatable_parameters_initialize\000"
 5144      7461626C 
 5144      655F7061 
 5144      72616D65 
 5144      74657273 
 5145              	.LASF30:
 5146 0321 746D5F79 		.ascii	"tm_year\000"
 5146      65617200 
 5147              	.LASF154:
 5148 0329 616C6172 		.ascii	"alarmSync\000"
 5148      6D53796E 
 5148      6300
 5149              	.LASF79:
 5150 0333 70696E73 		.ascii	"pins_configure_active\000"
 5150      5F636F6E 
 5150      66696775 
 5150      72655F61 
 5150      63746976 
 5151              	.LASF40:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 113


 5152 0349 6B65795F 		.ascii	"key_value_t\000"
 5152      76616C75 
 5152      655F7400 
 5153              	.LASF84:
 5154 0355 7077725F 		.ascii	"pwr_check\000"
 5154      63686563 
 5154      6B00
 5155              	.LASF8:
 5156 035f 6C6F6E67 		.ascii	"long unsigned int\000"
 5156      20756E73 
 5156      69676E65 
 5156      6420696E 
 5156      7400
 5157              	.LASF99:
 5158 0371 65787472 		.ascii	"extract_string\000"
 5158      6163745F 
 5158      73747269 
 5158      6E6700
 5159              	.LASF89:
 5160 0380 74696D65 		.ascii	"timeout\000"
 5160      6F757400 
 5161              	.LASF112:
 5162 0388 6765745F 		.ascii	"get_cell_network_stats\000"
 5162      63656C6C 
 5162      5F6E6574 
 5162      776F726B 
 5162      5F737461 
 5163              	.LASF56:
 5164 039f 74696D65 		.ascii	"time_to_lock\000"
 5164      5F746F5F 
 5164      6C6F636B 
 5164      00
 5165              	.LASF142:
 5166 03ac 64617461 		.ascii	"data\000"
 5166      00
 5167              	.LASF75:
 5168 03b1 65705F70 		.ascii	"ep_port\000"
 5168      6F727400 
 5169              	.LASF33:
 5170 03b9 746D5F69 		.ascii	"tm_isdst\000"
 5170      73647374 
 5170      00
 5171              	.LASF71:
 5172 03c2 6D6F6465 		.ascii	"modem_info\000"
 5172      6D5F696E 
 5172      666F00
 5173              	.LASF74:
 5174 03cd 65705F68 		.ascii	"ep_host\000"
 5174      6F737400 
 5175              	.LASF72:
 5176 03d5 63686970 		.ascii	"chip_uniqueId\000"
 5176      5F756E69 
 5176      71756549 
 5176      6400
 5177              	.LASF94:
 5178 03e3 6D6F6465 		.ascii	"modem_power_up\000"
 5178      6D5F706F 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 114


 5178      7765725F 
 5178      757000
 5179              	.LASF160:
 5180 03f2 6D6F6465 		.ascii	"modem.c\000"
 5180      6D2E6300 
 5181              	.LASF101:
 5182 03fa 62656769 		.ascii	"beginMarker\000"
 5182      6E4D6172 
 5182      6B657200 
 5183              	.LASF103:
 5184 0406 74617267 		.ascii	"target\000"
 5184      657400
 5185              	.LASF51:
 5186 040d 74696D65 		.ascii	"time_to_acquire_ip\000"
 5186      5F746F5F 
 5186      61637175 
 5186      6972655F 
 5186      697000
 5187              	.LASF102:
 5188 0420 656E644D 		.ascii	"endMarker\000"
 5188      61726B65 
 5188      7200
 5189              	.LASF2:
 5190 042a 73686F72 		.ascii	"short int\000"
 5190      7420696E 
 5190      7400
 5191              	.LASF125:
 5192 0434 65706F63 		.ascii	"epoch_time\000"
 5192      685F7469 
 5192      6D6500
 5193              	.LASF5:
 5194 043f 5F5F696E 		.ascii	"__int32_t\000"
 5194      7433325F 
 5194      7400
 5195              	.LASF100:
 5196 0449 66726F6D 		.ascii	"from\000"
 5196      00
 5197              	.LASF106:
 5198 044e 63726567 		.ascii	"creg\000"
 5198      00
 5199              	.LASF121:
 5200 0453 64656275 		.ascii	"debug_freq\000"
 5200      675F6672 
 5200      657100
 5201              	.LASF90:
 5202 045e 61745F61 		.ascii	"at_attempt\000"
 5202      7474656D 
 5202      707400
 5203              	.LASF98:
 5204 0469 61745F77 		.ascii	"at_write_command\000"
 5204      72697465 
 5204      5F636F6D 
 5204      6D616E64 
 5204      00
 5205              	.LASF73:
 5206 047a 7379735F 		.ascii	"sys_info_t\000"
 5206      696E666F 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 115


 5206      5F7400
 5207              	.LASF65:
 5208 0485 75706461 		.ascii	"updatable_parameters_t\000"
 5208      7461626C 
 5208      655F7061 
 5208      72616D65 
 5208      74657273 
 5209              	.LASF120:
 5210 049c 7265706F 		.ascii	"report_freq\000"
 5210      72745F66 
 5210      72657100 
 5211              	.LASF140:
 5212 04a8 64617461 		.ascii	"dataPointsInStack\000"
 5212      506F696E 
 5212      7473496E 
 5212      53746163 
 5212      6B00
 5213              	.LASF26:
 5214 04ba 746D5F6D 		.ascii	"tm_min\000"
 5214      696E00
 5215              	.LASF24:
 5216 04c1 73697A65 		.ascii	"sizetype\000"
 5216      74797065 
 5216      00
 5217              	.LASF127:
 5218 04ca 6D6F6E74 		.ascii	"month\000"
 5218      6800
 5219              	.LASF105:
 5220 04d0 69735F63 		.ascii	"is_connected_to_cell_network\000"
 5220      6F6E6E65 
 5220      63746564 
 5220      5F746F5F 
 5220      63656C6C 
 5221              	.LASF157:
 5222 04ed 75617274 		.ascii	"uart_received_string\000"
 5222      5F726563 
 5222      65697665 
 5222      645F7374 
 5222      72696E67 
 5223              	.LASF53:
 5224 0502 6C617469 		.ascii	"latitude\000"
 5224      74756465 
 5224      00
 5225              	.LASF34:
 5226 050b 74657374 		.ascii	"test_name\000"
 5226      5F6E616D 
 5226      6500
 5227              	.LASF156:
 5228 0515 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 5228      546F5379 
 5228      636E5265 
 5228      6D6F7465 
 5228      50617261 
 5229              	.LASF95:
 5230 052c 6D6F6465 		.ascii	"modem_test\000"
 5230      6D5F7465 
 5230      737400
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 116


 5231              	.LASF110:
 5232 0537 6D617463 		.ascii	"match\000"
 5232      6800
 5233              	.LASF146:
 5234 053d 75706461 		.ascii	"updatable_parameters\000"
 5234      7461626C 
 5234      655F7061 
 5234      72616D65 
 5234      74657273 
 5235              	.LASF128:
 5236 0552 686F7572 		.ascii	"hour\000"
 5236      00
 5237              	.LASF87:
 5238 0557 636F6D6D 		.ascii	"commands\000"
 5238      616E6473 
 5238      00
 5239              	.LASF91:
 5240 0560 636F6D70 		.ascii	"compare_location\000"
 5240      6172655F 
 5240      6C6F6361 
 5240      74696F6E 
 5240      00
 5241              	.LASF20:
 5242 0571 666C6F61 		.ascii	"float\000"
 5242      7400
 5243              	.LASF77:
 5244 0577 6D6F6465 		.ascii	"modem_initialize\000"
 5244      6D5F696E 
 5244      69746961 
 5244      6C697A65 
 5244      00
 5245              	.LASF117:
 5246 0588 735F7265 		.ascii	"s_report_freq\000"
 5246      706F7274 
 5246      5F667265 
 5246      7100
 5247              	.LASF60:
 5248 0596 73696D5F 		.ascii	"sim_type\000"
 5248      74797065 
 5248      00
 5249              	.LASF108:
 5250 059f 6973725F 		.ascii	"isr_telit_rx\000"
 5250      74656C69 
 5250      745F7278 
 5250      00
 5251              	.LASF70:
 5252 05ac 616C6172 		.ascii	"alarm\000"
 5252      6D00
 5253              	.LASF64:
 5254 05b2 5F426F6F 		.ascii	"_Bool\000"
 5254      6C00
 5255              	.LASF13:
 5256 05b8 696E7433 		.ascii	"int32_t\000"
 5256      325F7400 
 5257              	.LASF1:
 5258 05c0 756E7369 		.ascii	"unsigned char\000"
 5258      676E6564 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 117


 5258      20636861 
 5258      7200
 5259              	.LASF151:
 5260 05ce 73797374 		.ascii	"system_settings\000"
 5260      656D5F73 
 5260      65747469 
 5260      6E677300 
 5261              	.LASF92:
 5262 05de 64656C61 		.ascii	"delay\000"
 5262      7900
 5263              	.LASF48:
 5264 05e4 72737271 		.ascii	"rsrq\000"
 5264      00
 5265              	.LASF62:
 5266 05e9 73796E63 		.ascii	"sync_time\000"
 5266      5F74696D 
 5266      6500
 5267              	.LASF114:
 5268 05f3 735F6E6F 		.ascii	"s_node_type\000"
 5268      64655F74 
 5268      79706500 
 5269              	.LASF46:
 5270 05ff 72736370 		.ascii	"rscp\000"
 5270      00
 5271              	.LASF135:
 5272 0604 6D6F6465 		.ascii	"modem_get_gps_coordinates\000"
 5272      6D5F6765 
 5272      745F6770 
 5272      735F636F 
 5272      6F726469 
 5273              	.LASF37:
 5274 061e 74657374 		.ascii	"test_t\000"
 5274      5F7400
 5275              	.LASF150:
 5276 0625 73797374 		.ascii	"system_info\000"
 5276      656D5F69 
 5276      6E666F00 
 5277              	.LASF43:
 5278 0631 696D6569 		.ascii	"imei\000"
 5278      00
 5279              	.LASF36:
 5280 0636 72656173 		.ascii	"reason\000"
 5280      6F6E00
 5281              	.LASF49:
 5282 063d 72737270 		.ascii	"rsrp\000"
 5282      00
 5283              	.LASF52:
 5284 0642 6D6F6465 		.ascii	"modem_stats_t\000"
 5284      6D5F7374 
 5284      6174735F 
 5284      7400
 5285              	.LASF86:
 5286 0650 75617274 		.ascii	"uart_string_reset\000"
 5286      5F737472 
 5286      696E675F 
 5286      72657365 
 5286      7400
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 118


 5287              	.LASF31:
 5288 0662 746D5F77 		.ascii	"tm_wday\000"
 5288      64617900 
 5289              	.LASF85:
 5290 066a 6D6F6465 		.ascii	"modem_soft_power_cycle\000"
 5290      6D5F736F 
 5290      66745F70 
 5290      6F776572 
 5290      5F637963 
 5291              	.LASF23:
 5292 0681 6C6F6E67 		.ascii	"long double\000"
 5292      20646F75 
 5292      626C6500 
 5293              	.LASF22:
 5294 068d 63686172 		.ascii	"char\000"
 5294      00
 5295              	.LASF104:
 5296 0692 6D6F6465 		.ascii	"modem_process_tasks\000"
 5296      6D5F7072 
 5296      6F636573 
 5296      735F7461 
 5296      736B7300 
 5297              	.LASF11:
 5298 06a6 756E7369 		.ascii	"unsigned int\000"
 5298      676E6564 
 5298      20696E74 
 5298      00
 5299              	.LASF123:
 5300 06b3 4346554E 		.ascii	"CFUN\000"
 5300      00
 5301              	.LASF42:
 5302 06b8 6D6F6465 		.ascii	"model_id\000"
 5302      6C5F6964 
 5302      00
 5303              	.LASF149:
 5304 06c1 68747470 		.ascii	"http_route\000"
 5304      5F726F75 
 5304      746500
 5305              	.LASF44:
 5306 06cc 6D6F6465 		.ascii	"modem_info_t\000"
 5306      6D5F696E 
 5306      666F5F74 
 5306      00
 5307              	.LASF58:
 5308 06d9 6770735F 		.ascii	"gps_t\000"
 5308      7400
 5309              	.LASF158:
 5310 06df 75617274 		.ascii	"uart_string_index\000"
 5310      5F737472 
 5310      696E675F 
 5310      696E6465 
 5310      7800
 5311              	.LASF61:
 5312 06f1 6D656173 		.ascii	"measure_time\000"
 5312      7572655F 
 5312      74696D65 
 5312      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 119


 5313              	.LASF109:
 5314 06fe 69735F63 		.ascii	"is_connected_to_internet\000"
 5314      6F6E6E65 
 5314      63746564 
 5314      5F746F5F 
 5314      696E7465 
 5315              	.LASF144:
 5316 0717 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 5316      6D5F7374 
 5316      6172745F 
 5316      74696D65 
 5316      5F737461 
 5317              	.LASF137:
 5318 072e 6770735F 		.ascii	"gps_status\000"
 5318      73746174 
 5318      757300
 5319              	.LASF78:
 5320 0739 70696E73 		.ascii	"pins_configure_inactive\000"
 5320      5F636F6E 
 5320      66696775 
 5320      72655F69 
 5320      6E616374 
 5321              	.LASF41:
 5322 0751 73696D5F 		.ascii	"sim_id\000"
 5322      696400
 5323              	.LASF28:
 5324 0758 746D5F6D 		.ascii	"tm_mday\000"
 5324      64617900 
 5325              	.LASF57:
 5326 0760 76616C69 		.ascii	"valid\000"
 5326      6400
 5327              	.LASF129:
 5328 0766 6D696E75 		.ascii	"minute\000"
 5328      746500
 5329              	.LASF14:
 5330 076d 75696E74 		.ascii	"uint32_t\000"
 5330      33325F74 
 5330      00
 5331              	.LASF25:
 5332 0776 746D5F73 		.ascii	"tm_sec\000"
 5332      656300
 5333              	.LASF113:
 5334 077d 6765745F 		.ascii	"get_updated_parameters_from_malcom\000"
 5334      75706461 
 5334      7465645F 
 5334      70617261 
 5334      6D657465 
 5335              	.LASF116:
 5336 07a0 735F7361 		.ascii	"s_sample_freq\000"
 5336      6D706C65 
 5336      5F667265 
 5336      7100
 5337              	.LASF35:
 5338 07ae 73746174 		.ascii	"status\000"
 5338      757300
 5339              	.LASF141:
 5340 07b5 64617461 		.ascii	"dataPointsInStackDesired\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 120


 5340      506F696E 
 5340      7473496E 
 5340      53746163 
 5340      6B446573 
 5341              	.LASF76:
 5342 07ce 7379735F 		.ascii	"sys_settings_t\000"
 5342      73657474 
 5342      696E6773 
 5342      5F7400
 5343              	.LASF12:
 5344 07dd 75696E74 		.ascii	"uint8_t\000"
 5344      385F7400 
 5345              	.LASF18:
 5346 07e5 696E7431 		.ascii	"int16\000"
 5346      3600
 5347              	.LASF81:
 5348 07eb 61745F72 		.ascii	"at_ready\000"
 5348      65616479 
 5348      00
 5349              	.LASF82:
 5350 07f4 61747465 		.ascii	"attempts\000"
 5350      6D707473 
 5350      00
 5351              	.LASF68:
 5352 07fd 636F756E 		.ascii	"countDownType\000"
 5352      74446F77 
 5352      6E547970 
 5352      6500
 5353              	.LASF83:
 5354 080b 626F6F74 		.ascii	"boot_time\000"
 5354      5F74696D 
 5354      6500
 5355              	.LASF88:
 5356 0815 65787065 		.ascii	"expected_response\000"
 5356      63746564 
 5356      5F726573 
 5356      706F6E73 
 5356      6500
 5357              	.LASF136:
 5358 0827 6C6F636B 		.ascii	"lock_time\000"
 5358      5F74696D 
 5358      6500
 5359              	.LASF147:
 5360 0831 68747470 		.ascii	"http_request\000"
 5360      5F726571 
 5360      75657374 
 5360      00
 5361              	.LASF80:
 5362 083e 6D6F6465 		.ascii	"modem_power_down\000"
 5362      6D5F706F 
 5362      7765725F 
 5362      646F776E 
 5362      00
 5363              	.LASF39:
 5364 084f 74696D65 		.ascii	"timeStamp\000"
 5364      5374616D 
 5364      7000
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccyPLSst.s 			page 121


 5365              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
