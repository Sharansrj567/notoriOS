ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"modem.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.syntax unified
  24              		.global _printf_float
  25              		.thumb
  26              		.syntax unified
  27              		.comm	modem_state,1,1
  28              		.comm	modem_start_time_stamp,4,4
  29              		.comm	modem_info,60,4
  30              		.comm	modem_stats,32,4
  31              		.comm	updatable_parameters,5,4
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.comm	uart_received_string,1024,4
  44              		.global	uart_string_index
  45              		.bss
  46              		.align	1
  47              		.type	uart_string_index, %object
  48              		.size	uart_string_index, 2
  49              	uart_string_index:
  50 0000 0000     		.space	2
  51              		.section	.text.isr_telit_rx,"ax",%progbits
  52              		.align	2
  53              		.global	isr_telit_rx
  54              		.thumb
  55              		.thumb_func
  56              		.type	isr_telit_rx, %function
  57              	isr_telit_rx:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 2


  58              	.LFB64:
  59              		.file 1 "modem.c"
   1:modem.c       **** //Methods for Telit modem 
   2:modem.c       **** #include "modem.h"
   3:modem.c       **** #include "notoriOS.h"
   4:modem.c       **** 
   5:modem.c       **** char uart_received_string[1024];
   6:modem.c       **** int16 uart_string_index=0;
   7:modem.c       **** 
   8:modem.c       **** #define DEFAULT_AT_TIMEOUT 2000u // Send command and wait 2000 ms
   9:modem.c       **** #define NO_AT_TIMEOUT 0u // Send command, no timeout/ don't wait 
  10:modem.c       **** 
  11:modem.c       **** #define TIMEOUT_NETWORK_CONNECT 180 //seconds
  12:modem.c       **** #define TIMEOUT_IP_ACQUIRE 230 //seconds (cummulatinve) add to TIMEOUT_NETWORK_CONNECT
  13:modem.c       **** 
  14:modem.c       **** CY_ISR_PROTO(isr_telit_rx); // Declares a custom ISR function "isr_telit_rx" using the CY_ISR_PROTO
  15:modem.c       **** 
  16:modem.c       **** // Define the custom ISR function "isr_telit_rx" using the CY_ISR macro
  17:modem.c       **** // Get each character from Telit and saves it to uart_received_string
  18:modem.c       **** CY_ISR(isr_telit_rx){      
  60              		.loc 1 18 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64 0000 98B5     		push	{r3, r4, r7, lr}
  65              		.cfi_def_cfa_offset 16
  66              		.cfi_offset 3, -16
  67              		.cfi_offset 4, -12
  68              		.cfi_offset 7, -8
  69              		.cfi_offset 14, -4
  70 0002 00AF     		add	r7, sp, #0
  71              		.cfi_def_cfa_register 7
  19:modem.c       ****     // UART_Telit_GetRxBufferSize() returns the number of received bytes available in the RX buffer
  20:modem.c       ****     while(UART_Telit_GetRxBufferSize()==1){
  72              		.loc 1 20 0
  73 0004 12E0     		b	.L2
  74              	.L3:
  21:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  75              		.loc 1 21 0
  76 0006 0D4B     		ldr	r3, .L4
  77 0008 B3F90030 		ldrsh	r3, [r3]
  78 000c 1C46     		mov	r4, r3
  79 000e FFF7FEFF 		bl	UART_Telit_GetChar
  80 0012 0346     		mov	r3, r0
  81 0014 1A46     		mov	r2, r3
  82 0016 0A4B     		ldr	r3, .L4+4
  83 0018 1A55     		strb	r2, [r3, r4]
  22:modem.c       ****         uart_string_index++;
  84              		.loc 1 22 0
  85 001a 084B     		ldr	r3, .L4
  86 001c B3F90030 		ldrsh	r3, [r3]
  87 0020 9BB2     		uxth	r3, r3
  88 0022 0133     		adds	r3, r3, #1
  89 0024 9BB2     		uxth	r3, r3
  90 0026 1AB2     		sxth	r2, r3
  91 0028 044B     		ldr	r3, .L4
  92 002a 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 3


  93              	.L2:
  20:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  94              		.loc 1 20 0
  95 002c FFF7FEFF 		bl	UART_Telit_GetRxBufferSize
  96 0030 0346     		mov	r3, r0
  97 0032 012B     		cmp	r3, #1
  98 0034 E7D0     		beq	.L3
  23:modem.c       ****     }
  24:modem.c       **** 
  25:modem.c       **** }
  99              		.loc 1 25 0
 100 0036 00BF     		nop
 101 0038 98BD     		pop	{r3, r4, r7, pc}
 102              	.L5:
 103 003a 00BF     		.align	2
 104              	.L4:
 105 003c 00000000 		.word	uart_string_index
 106 0040 00000000 		.word	uart_received_string
 107              		.cfi_endproc
 108              	.LFE64:
 109              		.size	isr_telit_rx, .-isr_telit_rx
 110              		.section	.text.modem_initialize,"ax",%progbits
 111              		.align	2
 112              		.global	modem_initialize
 113              		.thumb
 114              		.thumb_func
 115              		.type	modem_initialize, %function
 116              	modem_initialize:
 117              	.LFB65:
  26:modem.c       **** 
  27:modem.c       **** // Initialize the modem
  28:modem.c       **** void modem_initialize(){
 118              		.loc 1 28 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 1, uses_anonymous_args = 0
 122 0000 80B5     		push	{r7, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 7, -8
 125              		.cfi_offset 14, -4
 126 0002 00AF     		add	r7, sp, #0
 127              		.cfi_def_cfa_register 7
  29:modem.c       ****     // Don't do much except make sure that all the modem pins are pulled low
  30:modem.c       ****     // Also make sure that the TX PIN is fully disabled
  31:modem.c       ****     pins_configure_inactive();
 128              		.loc 1 31 0
 129 0004 FFF7FEFF 		bl	pins_configure_inactive
  32:modem.c       ****     modem_state = 0;
 130              		.loc 1 32 0
 131 0008 154B     		ldr	r3, .L7
 132 000a 0022     		movs	r2, #0
 133 000c 1A70     		strb	r2, [r3]
  33:modem.c       ****     //initialize states
  34:modem.c       ****     modem_info.imei[0] = '\0';
 134              		.loc 1 34 0
 135 000e 154B     		ldr	r3, .L7+4
 136 0010 0022     		movs	r2, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 4


 137 0012 83F82820 		strb	r2, [r3, #40]
  35:modem.c       ****     modem_info.model_id[0] = '\0';
 138              		.loc 1 35 0
 139 0016 134B     		ldr	r3, .L7+4
 140 0018 0022     		movs	r2, #0
 141 001a 1A75     		strb	r2, [r3, #20]
  36:modem.c       ****     modem_info.sim_id[0] = '\0';
 142              		.loc 1 36 0
 143 001c 114B     		ldr	r3, .L7+4
 144 001e 0022     		movs	r2, #0
 145 0020 1A70     		strb	r2, [r3]
  37:modem.c       ****     modem_stats.rxlev = 0;
 146              		.loc 1 37 0
 147 0022 114B     		ldr	r3, .L7+8
 148 0024 0022     		movs	r2, #0
 149 0026 1A60     		str	r2, [r3]
  38:modem.c       ****     modem_stats.ber = 0;
 150              		.loc 1 38 0
 151 0028 0F4B     		ldr	r3, .L7+8
 152 002a 0022     		movs	r2, #0
 153 002c 5A60     		str	r2, [r3, #4]
  39:modem.c       ****     modem_stats.rscp = 0;
 154              		.loc 1 39 0
 155 002e 0E4B     		ldr	r3, .L7+8
 156 0030 0022     		movs	r2, #0
 157 0032 9A60     		str	r2, [r3, #8]
  40:modem.c       ****     modem_stats.ecno = 0;
 158              		.loc 1 40 0
 159 0034 0C4B     		ldr	r3, .L7+8
 160 0036 0022     		movs	r2, #0
 161 0038 DA60     		str	r2, [r3, #12]
  41:modem.c       ****     modem_stats.rsrq = 0;
 162              		.loc 1 41 0
 163 003a 0B4B     		ldr	r3, .L7+8
 164 003c 0022     		movs	r2, #0
 165 003e 1A61     		str	r2, [r3, #16]
  42:modem.c       ****     modem_stats.rsrp = 0;
 166              		.loc 1 42 0
 167 0040 094B     		ldr	r3, .L7+8
 168 0042 0022     		movs	r2, #0
 169 0044 5A61     		str	r2, [r3, #20]
  43:modem.c       ****     modem_stats.time_to_acquire_ip = 0;
 170              		.loc 1 43 0
 171 0046 084B     		ldr	r3, .L7+8
 172 0048 0022     		movs	r2, #0
 173 004a DA61     		str	r2, [r3, #28]
  44:modem.c       ****     modem_stats.time_to_network_connect = 0;
 174              		.loc 1 44 0
 175 004c 064B     		ldr	r3, .L7+8
 176 004e 0022     		movs	r2, #0
 177 0050 9A61     		str	r2, [r3, #24]
  45:modem.c       ****     // Disable the RX Pin interrupt, and only enable it during long timeouts
  46:modem.c       ****     // Rx_Telit_SetInterruptMode(): Configures the interrupt mode for each of the Pins component's 
  47:modem.c       ****     // Rx_Telit_0_INTR selects the first pin in the list, and Rx_Telit_INTR_NONE disables the Rx pi
  48:modem.c       ****     Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 178              		.loc 1 48 0
 179 0052 0021     		movs	r1, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 5


 180 0054 4020     		movs	r0, #64
 181 0056 FFF7FEFF 		bl	Rx_Telit_SetInterruptMode
  49:modem.c       ****     
  50:modem.c       **** }
 182              		.loc 1 50 0
 183 005a 00BF     		nop
 184 005c 80BD     		pop	{r7, pc}
 185              	.L8:
 186 005e 00BF     		.align	2
 187              	.L7:
 188 0060 00000000 		.word	modem_state
 189 0064 00000000 		.word	modem_info
 190 0068 00000000 		.word	modem_stats
 191              		.cfi_endproc
 192              	.LFE65:
 193              		.size	modem_initialize, .-modem_initialize
 194              		.section	.text.pins_configure_inactive,"ax",%progbits
 195              		.align	2
 196              		.global	pins_configure_inactive
 197              		.thumb
 198              		.thumb_func
 199              		.type	pins_configure_inactive, %function
 200              	pins_configure_inactive:
 201              	.LFB66:
  51:modem.c       **** 
  52:modem.c       **** 
  53:modem.c       **** // To be used when the modem power is to be "killed" conpletely to conserve power
  54:modem.c       **** void pins_configure_inactive(){
 202              		.loc 1 54 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 1, uses_anonymous_args = 0
 206 0000 80B5     		push	{r7, lr}
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 7, -8
 209              		.cfi_offset 14, -4
 210 0002 00AF     		add	r7, sp, #0
 211              		.cfi_def_cfa_register 7
  55:modem.c       ****    
  56:modem.c       ****    Telit_ControlReg_Write(0u); // Physically disconect UART pin
 212              		.loc 1 56 0
 213 0004 0020     		movs	r0, #0
 214 0006 FFF7FEFF 		bl	Telit_ControlReg_Write
  57:modem.c       ****    Rx_Telit_SetDriveMode(PIN_DM_STRONG); // Set drive mode
 215              		.loc 1 57 0
 216 000a 0C20     		movs	r0, #12
 217 000c FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  58:modem.c       **** 
  59:modem.c       ****    Pin_Telit_pwr_Write(OFF); // Kill power to modem (pulls pin low).
 218              		.loc 1 59 0
 219 0010 0020     		movs	r0, #0
 220 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  60:modem.c       **** 
  61:modem.c       ****    // Pull down all of these, just in case (turns the off).
  62:modem.c       ****    Rx_Telit_Write(OFF); 
 221              		.loc 1 62 0
 222 0016 0020     		movs	r0, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 6


 223 0018 FFF7FEFF 		bl	Rx_Telit_Write
  63:modem.c       ****    Tx_Telit_Write(OFF);
 224              		.loc 1 63 0
 225 001c 0020     		movs	r0, #0
 226 001e FFF7FEFF 		bl	Tx_Telit_Write
  64:modem.c       ****    Pin_Telit_ONOFF_Write(OFF);
 227              		.loc 1 64 0
 228 0022 0020     		movs	r0, #0
 229 0024 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
  65:modem.c       ****    Pin_Telit_SWRDY_Write(OFF);
 230              		.loc 1 65 0
 231 0028 0020     		movs	r0, #0
 232 002a FFF7FEFF 		bl	Pin_Telit_SWRDY_Write
  66:modem.c       ****     
  67:modem.c       **** }
 233              		.loc 1 67 0
 234 002e 00BF     		nop
 235 0030 80BD     		pop	{r7, pc}
 236              		.cfi_endproc
 237              	.LFE66:
 238              		.size	pins_configure_inactive, .-pins_configure_inactive
 239 0032 00BF     		.section	.text.pins_configure_active,"ax",%progbits
 240              		.align	2
 241              		.global	pins_configure_active
 242              		.thumb
 243              		.thumb_func
 244              		.type	pins_configure_active, %function
 245              	pins_configure_active:
 246              	.LFB67:
  68:modem.c       **** 
  69:modem.c       **** // Turns on power and configures all UART pin modes
  70:modem.c       **** void pins_configure_active(){
 247              		.loc 1 70 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 1, uses_anonymous_args = 0
 251 0000 80B5     		push	{r7, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 7, -8
 254              		.cfi_offset 14, -4
 255 0002 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
  71:modem.c       ****     
  72:modem.c       ****     Rx_Telit_SetDriveMode(PIN_DM_DIG_HIZ); // Power up. Set RX pin to High Impedance Digital mode.
 257              		.loc 1 72 0
 258 0004 0220     		movs	r0, #2
 259 0006 FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  73:modem.c       ****     Telit_ControlReg_Write(1u); // Pull Telit_ControlReg pin high (turns it on).
 260              		.loc 1 73 0
 261 000a 0120     		movs	r0, #1
 262 000c FFF7FEFF 		bl	Telit_ControlReg_Write
  74:modem.c       ****     Pin_Telit_pwr_Write(ON); // Pulls Telit_pwr pin high (turns it on).
 263              		.loc 1 74 0
 264 0010 0120     		movs	r0, #1
 265 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  75:modem.c       ****     CyDelay(100u); // Give the MOSFET a few ms to stalbilise power 
 266              		.loc 1 75 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 7


 267 0016 6420     		movs	r0, #100
 268 0018 FFF7FEFF 		bl	CyDelay
  76:modem.c       **** }
 269              		.loc 1 76 0
 270 001c 00BF     		nop
 271 001e 80BD     		pop	{r7, pc}
 272              		.cfi_endproc
 273              	.LFE67:
 274              		.size	pins_configure_active, .-pins_configure_active
 275              		.section	.rodata
 276              		.align	2
 277              	.LC0:
 278 0000 4F4B00   		.ascii	"OK\000"
 279 0003 00       		.align	2
 280              	.LC1:
 281 0004 41542353 		.ascii	"AT#SHDN\015\000"
 281      48444E0D 
 281      00
 282              		.section	.text.modem_power_down,"ax",%progbits
 283              		.align	2
 284              		.global	modem_power_down
 285              		.thumb
 286              		.thumb_func
 287              		.type	modem_power_down, %function
 288              	modem_power_down:
 289              	.LFB68:
  77:modem.c       **** 
  78:modem.c       **** // Power down the modem -- completely "kill" modem to conserve power.
  79:modem.c       **** void modem_power_down(){
 290              		.loc 1 79 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294 0000 80B5     		push	{r7, lr}
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 7, -8
 297              		.cfi_offset 14, -4
 298 0002 00AF     		add	r7, sp, #0
 299              		.cfi_def_cfa_register 7
  80:modem.c       ****     // AT Command to modem for Software Shut Down - #SHDN
  81:modem.c       ****     // \r is carriage return, it is necessary for the modem to know it got a command
  82:modem.c       ****     at_write_command("AT#SHDN\r","OK",5000u); 
 300              		.loc 1 82 0
 301 0004 41F28832 		movw	r2, #5000
 302 0008 0B49     		ldr	r1, .L12
 303 000a 0C48     		ldr	r0, .L12+4
 304 000c FFF7FEFF 		bl	at_write_command
  83:modem.c       ****    
  84:modem.c       ****     // Soft power cycle makes sure that the modem is all the way on (like holding on button on for 
  85:modem.c       ****     modem_soft_power_cycle();
 305              		.loc 1 85 0
 306 0010 FFF7FEFF 		bl	modem_soft_power_cycle
  86:modem.c       ****     CyDelay(1000u);
 307              		.loc 1 86 0
 308 0014 4FF47A70 		mov	r0, #1000
 309 0018 FFF7FEFF 		bl	CyDelay
  87:modem.c       ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 8


  88:modem.c       ****     UART_Telit_Stop(); // Disables the UART operation.
 310              		.loc 1 88 0
 311 001c FFF7FEFF 		bl	UART_Telit_Stop
  89:modem.c       ****     isr_telit_rx_Stop(); // Disables and removes the interrupt.
 312              		.loc 1 89 0
 313 0020 FFF7FEFF 		bl	isr_telit_rx_Stop
  90:modem.c       ****     pins_configure_inactive(); // We want the modem power to be "killed" completely to conserve pow
 314              		.loc 1 90 0
 315 0024 FFF7FEFF 		bl	pins_configure_inactive
  91:modem.c       ****     Pin_Regulator_PWM_Write(0u);
 316              		.loc 1 91 0
 317 0028 0020     		movs	r0, #0
 318 002a FFF7FEFF 		bl	Pin_Regulator_PWM_Write
  92:modem.c       ****     modem_state = MODEM_STATE_OFF;
 319              		.loc 1 92 0
 320 002e 044B     		ldr	r3, .L12+8
 321 0030 0022     		movs	r2, #0
 322 0032 1A70     		strb	r2, [r3]
  93:modem.c       ****     
  94:modem.c       **** }
 323              		.loc 1 94 0
 324 0034 00BF     		nop
 325 0036 80BD     		pop	{r7, pc}
 326              	.L13:
 327              		.align	2
 328              	.L12:
 329 0038 00000000 		.word	.LC0
 330 003c 04000000 		.word	.LC1
 331 0040 00000000 		.word	modem_state
 332              		.cfi_endproc
 333              	.LFE68:
 334              		.size	modem_power_down, .-modem_power_down
 335              		.section	.rodata
 336 000d 000000   		.align	2
 337              	.LC2:
 338 0010 41544530 		.ascii	"ATE0\015\000"
 338      0D00
 339 0016 0000     		.align	2
 340              	.LC3:
 341 0018 4D6F6465 		.ascii	"Modem boot time: %d\000"
 341      6D20626F 
 341      6F742074 
 341      696D653A 
 341      20256400 
 342              		.align	2
 343              	.LC4:
 344 002c 4D6F6465 		.ascii	"Modem ready for AT commands after %d attempt(s).\000"
 344      6D207265 
 344      61647920 
 344      666F7220 
 344      41542063 
 345 005d 000000   		.align	2
 346              	.LC5:
 347 0060 4E6F2072 		.ascii	"No response from modem.\000"
 347      6573706F 
 347      6E736520 
 347      66726F6D 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 9


 347      206D6F64 
 348              		.section	.text.modem_power_up,"ax",%progbits
 349              		.align	2
 350              		.global	modem_power_up
 351              		.thumb
 352              		.thumb_func
 353              		.type	modem_power_up, %function
 354              	modem_power_up:
 355              	.LFB69:
  95:modem.c       **** 
  96:modem.c       **** // This puts all the modem pins into a state that won't leak power
  97:modem.c       **** // Please call restore_pins() to bring them abck to function when they are needed for UART
  98:modem.c       **** uint8 modem_power_up(){
 356              		.loc 1 98 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 8
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360 0000 80B5     		push	{r7, lr}
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 7, -8
 363              		.cfi_offset 14, -4
 364 0002 82B0     		sub	sp, sp, #8
 365              		.cfi_def_cfa_offset 16
 366 0004 00AF     		add	r7, sp, #0
 367              		.cfi_def_cfa_register 7
  99:modem.c       ****     Pin_Regulator_PWM_Write(1u);
 368              		.loc 1 99 0
 369 0006 0120     		movs	r0, #1
 370 0008 FFF7FEFF 		bl	Pin_Regulator_PWM_Write
 100:modem.c       ****     pins_configure_active(); // Turns on power and configures all UART pin modes
 371              		.loc 1 100 0
 372 000c FFF7FEFF 		bl	pins_configure_active
 101:modem.c       ****     UART_Telit_Start(); // Sets the initVar variable, calls the UART_Telit_Init() function, and the
 373              		.loc 1 101 0
 374 0010 FFF7FEFF 		bl	UART_Telit_Start
 102:modem.c       ****     isr_telit_rx_StartEx(isr_telit_rx); // Sets up the interrupt and enables it. 
 375              		.loc 1 102 0
 376 0014 2B48     		ldr	r0, .L27
 377 0016 FFF7FEFF 		bl	isr_telit_rx_StartEx
 103:modem.c       **** 
 104:modem.c       ****     modem_soft_power_cycle(); // Soft power cycle makes sure that the modem is all the way on (like
 378              		.loc 1 104 0
 379 001a FFF7FEFF 		bl	modem_soft_power_cycle
 105:modem.c       ****     
 106:modem.c       ****     // Turn off ECHO command (doesn't repeat your command back to you).
 107:modem.c       ****     uint8 at_ready = 0;
 380              		.loc 1 107 0
 381 001e 0023     		movs	r3, #0
 382 0020 FB71     		strb	r3, [r7, #7]
 108:modem.c       ****     uint8 attempts = 0;
 383              		.loc 1 108 0
 384 0022 0023     		movs	r3, #0
 385 0024 3B71     		strb	r3, [r7, #4]
 109:modem.c       ****     // Create variable boot_time of the current time stamp.
 110:modem.c       ****     long boot_time = getTimeStamp();
 386              		.loc 1 110 0
 387 0026 FFF7FEFF 		bl	getTimeStamp
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 10


 388 002a 3860     		str	r0, [r7]
 389              	.LBB2:
 111:modem.c       ****     
 112:modem.c       ****     //it takes the 4G modem 10+secs (max 20) to boot up, so keep hitting it with AT commands until 
 113:modem.c       ****     for(uint8 attempts = 0; attempts<3; attempts++){
 390              		.loc 1 113 0
 391 002c 0023     		movs	r3, #0
 392 002e BB71     		strb	r3, [r7, #6]
 393 0030 1CE0     		b	.L15
 394              	.L22:
 395              	.LBB3:
 114:modem.c       ****         
 115:modem.c       ****         for(uint8 pwr_check = 0; pwr_check<20; pwr_check++){
 396              		.loc 1 115 0
 397 0032 0023     		movs	r3, #0
 398 0034 7B71     		strb	r3, [r7, #5]
 399 0036 0EE0     		b	.L16
 400              	.L19:
 116:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 117:modem.c       ****             if(at_write_command("ATE0\r","OK",1000u)){
 401              		.loc 1 117 0
 402 0038 4FF47A72 		mov	r2, #1000
 403 003c 2249     		ldr	r1, .L27+4
 404 003e 2348     		ldr	r0, .L27+8
 405 0040 FFF7FEFF 		bl	at_write_command
 406 0044 0346     		mov	r3, r0
 407 0046 002B     		cmp	r3, #0
 408 0048 02D0     		beq	.L17
 118:modem.c       ****                 at_ready = 1;
 409              		.loc 1 118 0
 410 004a 0123     		movs	r3, #1
 411 004c FB71     		strb	r3, [r7, #7]
 119:modem.c       ****                 break;
 412              		.loc 1 119 0
 413 004e 05E0     		b	.L18
 414              	.L17:
 115:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 415              		.loc 1 115 0 discriminator 2
 416 0050 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 417 0052 0133     		adds	r3, r3, #1
 418 0054 7B71     		strb	r3, [r7, #5]
 419              	.L16:
 115:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 420              		.loc 1 115 0 is_stmt 0 discriminator 1
 421 0056 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 422 0058 132B     		cmp	r3, #19
 423 005a EDD9     		bls	.L19
 424              	.L18:
 425              	.LBE3:
 120:modem.c       ****             }
 121:modem.c       ****         }
 122:modem.c       ****             
 123:modem.c       ****         if(at_ready == 1){
 426              		.loc 1 123 0 is_stmt 1
 427 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 428 005e 012B     		cmp	r3, #1
 429 0060 08D0     		beq	.L26
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 11


 124:modem.c       ****             break;
 125:modem.c       ****         }else{
 126:modem.c       ****             // Soft power cycle makes sure that the modem is all the way on (like holding on button
 127:modem.c       ****             modem_soft_power_cycle();
 430              		.loc 1 127 0 discriminator 2
 431 0062 FFF7FEFF 		bl	modem_soft_power_cycle
 113:modem.c       ****         
 432              		.loc 1 113 0 discriminator 2
 433 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 434 0068 0133     		adds	r3, r3, #1
 435 006a BB71     		strb	r3, [r7, #6]
 436              	.L15:
 113:modem.c       ****         
 437              		.loc 1 113 0 is_stmt 0 discriminator 1
 438 006c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 439 006e 022B     		cmp	r3, #2
 440 0070 DFD9     		bls	.L22
 441 0072 00E0     		b	.L21
 442              	.L26:
 124:modem.c       ****             break;
 443              		.loc 1 124 0 is_stmt 1
 444 0074 00BF     		nop
 445              	.L21:
 446              	.LBE2:
 128:modem.c       ****         }
 129:modem.c       ****     }
 130:modem.c       ****     // Calculate boot up time and save to variable boot_time.
 131:modem.c       ****     boot_time = getTimeStamp() - boot_time;
 447              		.loc 1 131 0
 448 0076 FFF7FEFF 		bl	getTimeStamp
 449 007a 0246     		mov	r2, r0
 450 007c 3B68     		ldr	r3, [r7]
 451 007e D31A     		subs	r3, r2, r3
 452 0080 3B60     		str	r3, [r7]
 132:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Modem boot time: %d",boot_time);
 453              		.loc 1 132 0
 454 0082 3A68     		ldr	r2, [r7]
 455 0084 1249     		ldr	r1, .L27+12
 456 0086 0020     		movs	r0, #0
 457 0088 FFF7FEFF 		bl	printNotif
 133:modem.c       ****    
 134:modem.c       ****     if(at_ready == 1){
 458              		.loc 1 134 0
 459 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 460 008e 012B     		cmp	r3, #1
 461 0090 0AD1     		bne	.L23
 135:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Modem ready for AT commands after %d attempt(s).",attempts);
 462              		.loc 1 135 0
 463 0092 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 464 0094 1A46     		mov	r2, r3
 465 0096 0F49     		ldr	r1, .L27+16
 466 0098 0020     		movs	r0, #0
 467 009a FFF7FEFF 		bl	printNotif
 136:modem.c       ****         modem_state = MODEM_STATE_STARTUP;
 468              		.loc 1 136 0
 469 009e 0E4B     		ldr	r3, .L27+20
 470 00a0 0122     		movs	r2, #1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 12


 471 00a2 1A70     		strb	r2, [r3]
 137:modem.c       ****     }else{
 138:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"No response from modem.");
 139:modem.c       ****         modem_state = MODEM_STATE_OFF;
 140:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 141:modem.c       ****         modem_power_down();
 142:modem.c       ****         return 0u;
 143:modem.c       ****     }
 144:modem.c       ****     return 1u;
 472              		.loc 1 144 0
 473 00a4 0123     		movs	r3, #1
 474 00a6 09E0     		b	.L25
 475              	.L23:
 138:modem.c       ****         modem_state = MODEM_STATE_OFF;
 476              		.loc 1 138 0
 477 00a8 0C49     		ldr	r1, .L27+24
 478 00aa 0220     		movs	r0, #2
 479 00ac FFF7FEFF 		bl	printNotif
 139:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 480              		.loc 1 139 0
 481 00b0 094B     		ldr	r3, .L27+20
 482 00b2 0022     		movs	r2, #0
 483 00b4 1A70     		strb	r2, [r3]
 141:modem.c       ****         return 0u;
 484              		.loc 1 141 0
 485 00b6 FFF7FEFF 		bl	modem_power_down
 142:modem.c       ****     }
 486              		.loc 1 142 0
 487 00ba 0023     		movs	r3, #0
 488              	.L25:
 145:modem.c       **** }
 489              		.loc 1 145 0
 490 00bc 1846     		mov	r0, r3
 491 00be 0837     		adds	r7, r7, #8
 492              		.cfi_def_cfa_offset 8
 493 00c0 BD46     		mov	sp, r7
 494              		.cfi_def_cfa_register 13
 495              		@ sp needed
 496 00c2 80BD     		pop	{r7, pc}
 497              	.L28:
 498              		.align	2
 499              	.L27:
 500 00c4 00000000 		.word	isr_telit_rx
 501 00c8 00000000 		.word	.LC0
 502 00cc 10000000 		.word	.LC2
 503 00d0 18000000 		.word	.LC3
 504 00d4 2C000000 		.word	.LC4
 505 00d8 00000000 		.word	modem_state
 506 00dc 60000000 		.word	.LC5
 507              		.cfi_endproc
 508              	.LFE69:
 509              		.size	modem_power_up, .-modem_power_up
 510              		.section	.text.modem_soft_power_cycle,"ax",%progbits
 511              		.align	2
 512              		.global	modem_soft_power_cycle
 513              		.thumb
 514              		.thumb_func
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 13


 515              		.type	modem_soft_power_cycle, %function
 516              	modem_soft_power_cycle:
 517              	.LFB70:
 146:modem.c       **** 
 147:modem.c       **** // Puts modem in soft power cycle -- modem has power but isn't all the way on, so soft power cycle 
 148:modem.c       **** void modem_soft_power_cycle(){
 518              		.loc 1 148 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 1, uses_anonymous_args = 0
 522 0000 80B5     		push	{r7, lr}
 523              		.cfi_def_cfa_offset 8
 524              		.cfi_offset 7, -8
 525              		.cfi_offset 14, -4
 526 0002 00AF     		add	r7, sp, #0
 527              		.cfi_def_cfa_register 7
 149:modem.c       ****     Pin_Telit_ONOFF_Write(1u); // Pulls Telit_ONOFF pin high
 528              		.loc 1 149 0
 529 0004 0120     		movs	r0, #1
 530 0006 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 150:modem.c       ****     CyDelay(2000u); // Give modem a sec to boot
 531              		.loc 1 150 0
 532 000a 4FF4FA60 		mov	r0, #2000
 533 000e FFF7FEFF 		bl	CyDelay
 151:modem.c       ****     Pin_Telit_ONOFF_Write(0u); // Pulls Telit_ONOFF pin low
 534              		.loc 1 151 0
 535 0012 0020     		movs	r0, #0
 536 0014 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 152:modem.c       ****     
 153:modem.c       **** }
 537              		.loc 1 153 0
 538 0018 00BF     		nop
 539 001a 80BD     		pop	{r7, pc}
 540              		.cfi_endproc
 541              	.LFE70:
 542              		.size	modem_soft_power_cycle, .-modem_soft_power_cycle
 543              		.section	.text.uart_string_reset,"ax",%progbits
 544              		.align	2
 545              		.global	uart_string_reset
 546              		.thumb
 547              		.thumb_func
 548              		.type	uart_string_reset, %function
 549              	uart_string_reset:
 550              	.LFB71:
 154:modem.c       **** 
 155:modem.c       **** // Clear and reset the uart_received_string variable and uart_string_index for the next transmissio
 156:modem.c       **** void uart_string_reset(){
 551              		.loc 1 156 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 1, uses_anonymous_args = 0
 555 0000 80B5     		push	{r7, lr}
 556              		.cfi_def_cfa_offset 8
 557              		.cfi_offset 7, -8
 558              		.cfi_offset 14, -4
 559 0002 00AF     		add	r7, sp, #0
 560              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 14


 157:modem.c       ****     uart_string_index=0;
 561              		.loc 1 157 0
 562 0004 064B     		ldr	r3, .L31
 563 0006 0022     		movs	r2, #0
 564 0008 1A80     		strh	r2, [r3]	@ movhi
 158:modem.c       ****     // memset(void *str, int c, size_t n) copies the character c (an unsigned char) to the first n 
 159:modem.c       ****     memset(uart_received_string,'\0',sizeof(uart_received_string));
 565              		.loc 1 159 0
 566 000a 4FF48062 		mov	r2, #1024
 567 000e 0021     		movs	r1, #0
 568 0010 0448     		ldr	r0, .L31+4
 569 0012 FFF7FEFF 		bl	memset
 160:modem.c       ****     // Clears the receiver memory buffer and hardware RX FIFO of all received data.
 161:modem.c       ****     UART_Telit_ClearRxBuffer();
 570              		.loc 1 161 0
 571 0016 FFF7FEFF 		bl	UART_Telit_ClearRxBuffer
 162:modem.c       **** }
 572              		.loc 1 162 0
 573 001a 00BF     		nop
 574 001c 80BD     		pop	{r7, pc}
 575              	.L32:
 576 001e 00BF     		.align	2
 577              	.L31:
 578 0020 00000000 		.word	uart_string_index
 579 0024 00000000 		.word	uart_received_string
 580              		.cfi_endproc
 581              	.LFE71:
 582              		.size	uart_string_reset, .-uart_string_reset
 583              		.section	.rodata
 584              		.align	2
 585              	.LC6:
 586 0078 4D6F6465 		.ascii	"Modem sent AT command without timeout: %s\015\012\000"
 586      6D207365 
 586      6E742041 
 586      5420636F 
 586      6D6D616E 
 587              		.align	2
 588              	.LC7:
 589 00a4 4D6F6465 		.ascii	"Modem Received expected AT Response on first Try:\012"
 589      6D205265 
 589      63656976 
 589      65642065 
 589      78706563 
 590 00d6 436F6D6D 		.ascii	"Command: %s\012Received: %s\015\012\000"
 590      616E643A 
 590      2025730A 
 590      52656365 
 590      69766564 
 591 00f1 000000   		.align	2
 592              	.LC8:
 593 00f4 4D6F6465 		.ascii	"Modem required %d tries to receive AT Response: %s\015"
 593      6D207265 
 593      71756972 
 593      65642025 
 593      64207472 
 594 0127 0A00     		.ascii	"\012\000"
 595 0129 000000   		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 15


 596              	.LC9:
 597 012c 436F756C 		.ascii	"Could not write AT command: %s\012 Received: %s\012"
 597      64206E6F 
 597      74207772 
 597      69746520 
 597      41542063 
 598 0159 00       		.ascii	"\000"
 599              		.section	.text.at_write_command,"ax",%progbits
 600              		.align	2
 601              		.global	at_write_command
 602              		.thumb
 603              		.thumb_func
 604              		.type	at_write_command, %function
 605              	at_write_command:
 606              	.LFB72:
 163:modem.c       **** 
 164:modem.c       **** // Modem controlled  via  the  serial  interface  using  the  standard  AT commands.
 165:modem.c       **** // AT is an ATTENTION command and is used as a prefix to other parameters in a string. 
 166:modem.c       **** // Sends commands to the modem
 167:modem.c       **** uint8_t at_write_command(char* commands, char* expected_response,uint32_t timeout){
 607              		.loc 1 167 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 40
 610              		@ frame_needed = 1, uses_anonymous_args = 0
 611 0000 80B5     		push	{r7, lr}
 612              		.cfi_def_cfa_offset 8
 613              		.cfi_offset 7, -8
 614              		.cfi_offset 14, -4
 615 0002 8AB0     		sub	sp, sp, #40
 616              		.cfi_def_cfa_offset 48
 617 0004 00AF     		add	r7, sp, #0
 618              		.cfi_def_cfa_register 7
 619 0006 F860     		str	r0, [r7, #12]
 620 0008 B960     		str	r1, [r7, #8]
 621 000a 7A60     		str	r2, [r7, #4]
 168:modem.c       **** 
 169:modem.c       ****     uint32 at_attempt = 0;
 622              		.loc 1 169 0
 623 000c 0023     		movs	r3, #0
 624 000e 7B62     		str	r3, [r7, #36]
 170:modem.c       ****     
 171:modem.c       ****     for(at_attempt = 0; at_attempt < 3; at_attempt++) {
 625              		.loc 1 171 0
 626 0010 0023     		movs	r3, #0
 627 0012 7B62     		str	r3, [r7, #36]
 628 0014 46E0     		b	.L34
 629              	.L42:
 630              	.LBB4:
 172:modem.c       ****         
 173:modem.c       ****         char* compare_location;
 174:modem.c       ****         uint32_t delay=10;
 631              		.loc 1 174 0
 632 0016 0A23     		movs	r3, #10
 633 0018 FB61     		str	r3, [r7, #28]
 175:modem.c       ****         uint32_t i, interval=timeout/delay;        
 634              		.loc 1 175 0
 635 001a 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 16


 636 001c FB69     		ldr	r3, [r7, #28]
 637 001e B2FBF3F3 		udiv	r3, r2, r3
 638 0022 BB61     		str	r3, [r7, #24]
 176:modem.c       ****         
 177:modem.c       ****         // Clear and reset the uart_received_string variable and uart_string_index for the next tra
 178:modem.c       ****         uart_string_reset();
 639              		.loc 1 178 0
 640 0024 FFF7FEFF 		bl	uart_string_reset
 179:modem.c       ****         
 180:modem.c       ****         // Sends a NULL terminated string to the TX buffer for transmission.
 181:modem.c       ****         UART_Telit_PutString(commands);
 641              		.loc 1 181 0
 642 0028 F868     		ldr	r0, [r7, #12]
 643 002a FFF7FEFF 		bl	UART_Telit_PutString
 182:modem.c       ****         
 183:modem.c       ****         
 184:modem.c       ****         // If no timeout, no need to wait for response
 185:modem.c       ****         if(timeout == NO_AT_TIMEOUT){
 644              		.loc 1 185 0
 645 002e 7B68     		ldr	r3, [r7, #4]
 646 0030 002B     		cmp	r3, #0
 647 0032 06D1     		bne	.L35
 186:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem sent AT command without timeout: %s\r\n", commands);
 648              		.loc 1 186 0
 649 0034 FA68     		ldr	r2, [r7, #12]
 650 0036 1F49     		ldr	r1, .L43
 651 0038 0020     		movs	r0, #0
 652 003a FFF7FEFF 		bl	printNotif
 187:modem.c       ****             return 1u;
 653              		.loc 1 187 0
 654 003e 0123     		movs	r3, #1
 655 0040 34E0     		b	.L36
 656              	.L35:
 188:modem.c       ****         }
 189:modem.c       ****       
 190:modem.c       ****      
 191:modem.c       ****         for(i=0;i<interval;i++){ 
 657              		.loc 1 191 0
 658 0042 0023     		movs	r3, #0
 659 0044 3B62     		str	r3, [r7, #32]
 660 0046 20E0     		b	.L37
 661              	.L41:
 192:modem.c       ****             CyDelay((uint32) delay);
 662              		.loc 1 192 0
 663 0048 F869     		ldr	r0, [r7, #28]
 664 004a FFF7FEFF 		bl	CyDelay
 193:modem.c       ****             // strstr(const char *haystack, const char *needle) function finds the first occurrence
 194:modem.c       ****             // Returns a pointer to the first occurrence in haystack of any of the entire sequence 
 195:modem.c       ****             compare_location=strstr(uart_received_string,expected_response);        
 665              		.loc 1 195 0
 666 004e B968     		ldr	r1, [r7, #8]
 667 0050 1948     		ldr	r0, .L43+4
 668 0052 FFF7FEFF 		bl	strstr
 669 0056 7861     		str	r0, [r7, #20]
 196:modem.c       ****             if(compare_location!=NULL) {
 670              		.loc 1 196 0
 671 0058 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 17


 672 005a 002B     		cmp	r3, #0
 673 005c 12D0     		beq	.L38
 197:modem.c       ****                 if (at_attempt == 0){
 674              		.loc 1 197 0
 675 005e 7B6A     		ldr	r3, [r7, #36]
 676 0060 002B     		cmp	r3, #0
 677 0062 06D1     		bne	.L39
 198:modem.c       ****                     // we add \n for new line to make it easier to decipher
 199:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT,"Modem Received expected AT Response on first Try:\
 678              		.loc 1 199 0
 679 0064 144B     		ldr	r3, .L43+4
 680 0066 FA68     		ldr	r2, [r7, #12]
 681 0068 1449     		ldr	r1, .L43+8
 682 006a 0020     		movs	r0, #0
 683 006c FFF7FEFF 		bl	printNotif
 684 0070 06E0     		b	.L40
 685              	.L39:
 200:modem.c       ****                 }else{
 201:modem.c       ****                     printNotif(NOTIF_TYPE_WARNING,"Modem required %d tries to receive AT Response: 
 686              		.loc 1 201 0
 687 0072 7B6A     		ldr	r3, [r7, #36]
 688 0074 5A1C     		adds	r2, r3, #1
 689 0076 104B     		ldr	r3, .L43+4
 690 0078 1149     		ldr	r1, .L43+12
 691 007a 0120     		movs	r0, #1
 692 007c FFF7FEFF 		bl	printNotif
 693              	.L40:
 202:modem.c       ****                  
 203:modem.c       ****                 }
 204:modem.c       ****                 return(1);
 694              		.loc 1 204 0
 695 0080 0123     		movs	r3, #1
 696 0082 13E0     		b	.L36
 697              	.L38:
 191:modem.c       ****             CyDelay((uint32) delay);
 698              		.loc 1 191 0 discriminator 2
 699 0084 3B6A     		ldr	r3, [r7, #32]
 700 0086 0133     		adds	r3, r3, #1
 701 0088 3B62     		str	r3, [r7, #32]
 702              	.L37:
 191:modem.c       ****             CyDelay((uint32) delay);
 703              		.loc 1 191 0 is_stmt 0 discriminator 1
 704 008a 3A6A     		ldr	r2, [r7, #32]
 705 008c BB69     		ldr	r3, [r7, #24]
 706 008e 9A42     		cmp	r2, r3
 707 0090 DAD3     		bcc	.L41
 205:modem.c       ****             }
 206:modem.c       ****             
 207:modem.c       ****         }  
 208:modem.c       ****         
 209:modem.c       ****         // Something went wrong, restart UART
 210:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not write AT command: %s\n Received: %s\n", commands,uar
 708              		.loc 1 210 0 is_stmt 1 discriminator 2
 709 0092 094B     		ldr	r3, .L43+4
 710 0094 FA68     		ldr	r2, [r7, #12]
 711 0096 0B49     		ldr	r1, .L43+16
 712 0098 0220     		movs	r0, #2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 18


 713 009a FFF7FEFF 		bl	printNotif
 714              	.LBE4:
 171:modem.c       ****         
 715              		.loc 1 171 0 discriminator 2
 716 009e 7B6A     		ldr	r3, [r7, #36]
 717 00a0 0133     		adds	r3, r3, #1
 718 00a2 7B62     		str	r3, [r7, #36]
 719              	.L34:
 171:modem.c       ****         
 720              		.loc 1 171 0 is_stmt 0 discriminator 1
 721 00a4 7B6A     		ldr	r3, [r7, #36]
 722 00a6 022B     		cmp	r3, #2
 723 00a8 B5D9     		bls	.L42
 211:modem.c       ****       
 212:modem.c       ****     }
 213:modem.c       ****    // printNotif(NOTIF_TYPE_ERROR,"Modem AT response timeout: %s\r\n", commands);
 214:modem.c       ****           
 215:modem.c       ****     return(0);    
 724              		.loc 1 215 0 is_stmt 1
 725 00aa 0023     		movs	r3, #0
 726              	.L36:
 216:modem.c       **** }
 727              		.loc 1 216 0
 728 00ac 1846     		mov	r0, r3
 729 00ae 2837     		adds	r7, r7, #40
 730              		.cfi_def_cfa_offset 8
 731 00b0 BD46     		mov	sp, r7
 732              		.cfi_def_cfa_register 13
 733              		@ sp needed
 734 00b2 80BD     		pop	{r7, pc}
 735              	.L44:
 736              		.align	2
 737              	.L43:
 738 00b4 78000000 		.word	.LC6
 739 00b8 00000000 		.word	uart_received_string
 740 00bc A4000000 		.word	.LC7
 741 00c0 F4000000 		.word	.LC8
 742 00c4 2C010000 		.word	.LC9
 743              		.cfi_endproc
 744              	.LFE72:
 745              		.size	at_write_command, .-at_write_command
 746              		.section	.rodata
 747 015a 0000     		.align	2
 748              	.LC10:
 749 015c 54455354 		.ascii	"TEST_MODEM\000"
 749      5F4D4F44 
 749      454D00
 750 0167 00       		.align	2
 751              	.LC11:
 752 0168 4E6F2072 		.ascii	"No reponse from modem.\000"
 752      65706F6E 
 752      73652066 
 752      726F6D20 
 752      6D6F6465 
 753 017f 00       		.align	2
 754              	.LC12:
 755 0180 4D6F6465 		.ascii	"Modem connected to network.\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 19


 755      6D20636F 
 755      6E6E6563 
 755      74656420 
 755      746F206E 
 756              		.section	.text.modem_test,"ax",%progbits
 757              		.align	2
 758              		.global	modem_test
 759              		.thumb
 760              		.thumb_func
 761              		.type	modem_test, %function
 762              	modem_test:
 763              	.LFB73:
 217:modem.c       **** 
 218:modem.c       **** // Test modem -- needs fleshed out
 219:modem.c       **** test_t modem_test(){
 764              		.loc 1 219 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 408
 767              		@ frame_needed = 1, uses_anonymous_args = 0
 768 0000 B0B5     		push	{r4, r5, r7, lr}
 769              		.cfi_def_cfa_offset 16
 770              		.cfi_offset 4, -16
 771              		.cfi_offset 5, -12
 772              		.cfi_offset 7, -8
 773              		.cfi_offset 14, -4
 774 0002 E6B0     		sub	sp, sp, #408
 775              		.cfi_def_cfa_offset 424
 776 0004 00AF     		add	r7, sp, #0
 777              		.cfi_def_cfa_register 7
 778 0006 3B1D     		adds	r3, r7, #4
 779 0008 1860     		str	r0, [r3]
 220:modem.c       ****     
 221:modem.c       ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
 222:modem.c       ****     test.status = 0;
 780              		.loc 1 222 0
 781 000a 07F10C03 		add	r3, r7, #12
 782 000e 0022     		movs	r2, #0
 783 0010 83F88020 		strb	r2, [r3, #128]
 223:modem.c       ****     // Print test name and test reason
 224:modem.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_MODEM");
 784              		.loc 1 224 0
 785 0014 07F10C03 		add	r3, r7, #12
 786 0018 364A     		ldr	r2, .L53
 787 001a 07CA     		ldmia	r2, {r0, r1, r2}
 788 001c 03C3     		stmia	r3!, {r0, r1}
 789 001e 1A80     		strh	r2, [r3]	@ movhi
 790 0020 0233     		adds	r3, r3, #2
 791 0022 120C     		lsrs	r2, r2, #16
 792 0024 1A70     		strb	r2, [r3]
 225:modem.c       ****     snprintf(test.reason,sizeof(test.reason),"No reponse from modem.");
 793              		.loc 1 225 0
 794 0026 07F10C03 		add	r3, r7, #12
 795 002a 8133     		adds	r3, r3, #129
 796 002c 324A     		ldr	r2, .L53+4
 797 002e 1C46     		mov	r4, r3
 798 0030 1546     		mov	r5, r2
 799 0032 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 20


 800 0034 2060     		str	r0, [r4]	@ unaligned
 801 0036 6160     		str	r1, [r4, #4]	@ unaligned
 802 0038 A260     		str	r2, [r4, #8]	@ unaligned
 803 003a E360     		str	r3, [r4, #12]	@ unaligned
 804 003c 2868     		ldr	r0, [r5]	@ unaligned
 805 003e 2061     		str	r0, [r4, #16]	@ unaligned
 806 0040 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 807 0042 AA79     		ldrb	r2, [r5, #6]
 808 0044 A382     		strh	r3, [r4, #20]	@ unaligned
 809 0046 1346     		mov	r3, r2
 810 0048 A375     		strb	r3, [r4, #22]
 811              	.LBB5:
 226:modem.c       ****    
 227:modem.c       ****     //try the modem 60*1000ms (60 secs)
 228:modem.c       ****     for(int i = 0; i< 60; i++){
 812              		.loc 1 228 0
 813 004a 0023     		movs	r3, #0
 814 004c C7F89431 		str	r3, [r7, #404]
 815 0050 3AE0     		b	.L46
 816              	.L51:
 229:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 230:modem.c       ****         modem_process_tasks();
 817              		.loc 1 230 0
 818 0052 FFF7FEFF 		bl	modem_process_tasks
 231:modem.c       ****          
 232:modem.c       ****         if(modem_get_state() == MODEM_STATE_OFF){
 819              		.loc 1 232 0
 820 0056 FFF7FEFF 		bl	modem_get_state
 821 005a 0346     		mov	r3, r0
 822 005c 002B     		cmp	r3, #0
 823 005e 02D1     		bne	.L47
 233:modem.c       ****             // This puts all the modem points into a state that won't leak power
 234:modem.c       ****             modem_power_up();
 824              		.loc 1 234 0
 825 0060 FFF7FEFF 		bl	modem_power_up
 826 0064 27E0     		b	.L48
 827              	.L47:
 235:modem.c       ****             // Should put this on a max_try counter, so we don't just keep trying to connect over a
 236:modem.c       ****             
 237:modem.c       ****         }else if(modem_get_state() == MODEM_STATE_READY){
 828              		.loc 1 237 0
 829 0066 FFF7FEFF 		bl	modem_get_state
 830 006a 0346     		mov	r3, r0
 831 006c 042B     		cmp	r3, #4
 832 006e 22D1     		bne	.L48
 833              	.LBB6:
 238:modem.c       ****         
 239:modem.c       ****         
 240:modem.c       ****         // Get time, and if it looks good, set the RTC with it
 241:modem.c       ****         long network_time = modem_get_network_time();
 834              		.loc 1 241 0
 835 0070 FFF7FEFF 		bl	modem_get_network_time
 836 0074 C7F89001 		str	r0, [r7, #400]
 242:modem.c       ****         if(network_time != 0){
 837              		.loc 1 242 0
 838 0078 D7F89031 		ldr	r3, [r7, #400]
 839 007c 002B     		cmp	r3, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 21


 840 007e 03D0     		beq	.L49
 243:modem.c       ****             setTime(network_time); // Set the system time 
 841              		.loc 1 243 0
 842 0080 D7F89001 		ldr	r0, [r7, #400]
 843 0084 FFF7FEFF 		bl	setTime
 844              	.L49:
 244:modem.c       ****         }
 245:modem.c       ****             
 246:modem.c       ****         snprintf(test.reason,sizeof(test.reason),"Modem connected to network.");
 845              		.loc 1 246 0
 846 0088 07F10C03 		add	r3, r7, #12
 847 008c 8133     		adds	r3, r3, #129
 848 008e 1B4A     		ldr	r2, .L53+8
 849 0090 1D46     		mov	r5, r3
 850 0092 1446     		mov	r4, r2
 851 0094 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 852 0096 2860     		str	r0, [r5]	@ unaligned
 853 0098 6960     		str	r1, [r5, #4]	@ unaligned
 854 009a AA60     		str	r2, [r5, #8]	@ unaligned
 855 009c EB60     		str	r3, [r5, #12]	@ unaligned
 856 009e 07CC     		ldmia	r4!, {r0, r1, r2}
 857 00a0 2861     		str	r0, [r5, #16]	@ unaligned
 858 00a2 6961     		str	r1, [r5, #20]	@ unaligned
 859 00a4 AA61     		str	r2, [r5, #24]	@ unaligned
 247:modem.c       ****         test.status = 1;
 860              		.loc 1 247 0
 861 00a6 07F10C03 		add	r3, r7, #12
 862 00aa 0122     		movs	r2, #1
 863 00ac 83F88020 		strb	r2, [r3, #128]
 248:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 249:modem.c       ****         modem_power_down();
 864              		.loc 1 249 0
 865 00b0 FFF7FEFF 		bl	modem_power_down
 250:modem.c       ****         break;
 866              		.loc 1 250 0
 867 00b4 0CE0     		b	.L50
 868              	.L48:
 869              	.LBE6:
 251:modem.c       ****         
 252:modem.c       ****       }
 253:modem.c       ****         CyDelay(1000u);
 870              		.loc 1 253 0 discriminator 2
 871 00b6 4FF47A70 		mov	r0, #1000
 872 00ba FFF7FEFF 		bl	CyDelay
 228:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 873              		.loc 1 228 0 discriminator 2
 874 00be D7F89431 		ldr	r3, [r7, #404]
 875 00c2 0133     		adds	r3, r3, #1
 876 00c4 C7F89431 		str	r3, [r7, #404]
 877              	.L46:
 228:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 878              		.loc 1 228 0 is_stmt 0 discriminator 1
 879 00c8 D7F89431 		ldr	r3, [r7, #404]
 880 00cc 3B2B     		cmp	r3, #59
 881 00ce C0DD     		ble	.L51
 882              	.L50:
 883              	.LBE5:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 22


 254:modem.c       ****         
 255:modem.c       ****     }
 256:modem.c       ****     
 257:modem.c       ****     return test;
 884              		.loc 1 257 0 is_stmt 1
 885 00d0 3B1D     		adds	r3, r7, #4
 886 00d2 1A68     		ldr	r2, [r3]
 887 00d4 07F10C03 		add	r3, r7, #12
 888 00d8 1046     		mov	r0, r2
 889 00da 1946     		mov	r1, r3
 890 00dc 40F28113 		movw	r3, #385
 891 00e0 1A46     		mov	r2, r3
 892 00e2 FFF7FEFF 		bl	memcpy
 258:modem.c       **** }
 893              		.loc 1 258 0
 894 00e6 3B1D     		adds	r3, r7, #4
 895 00e8 1868     		ldr	r0, [r3]
 896 00ea 07F5CC77 		add	r7, r7, #408
 897              		.cfi_def_cfa_offset 16
 898 00ee BD46     		mov	sp, r7
 899              		.cfi_def_cfa_register 13
 900              		@ sp needed
 901 00f0 B0BD     		pop	{r4, r5, r7, pc}
 902              	.L54:
 903 00f2 00BF     		.align	2
 904              	.L53:
 905 00f4 5C010000 		.word	.LC10
 906 00f8 68010000 		.word	.LC11
 907 00fc 80010000 		.word	.LC12
 908              		.cfi_endproc
 909              	.LFE73:
 910              		.size	modem_test, .-modem_test
 911              		.section	.text.extract_string,"ax",%progbits
 912              		.align	2
 913              		.global	extract_string
 914              		.thumb
 915              		.thumb_func
 916              		.type	extract_string, %function
 917              	extract_string:
 918              	.LFB74:
 259:modem.c       **** 
 260:modem.c       **** // Extract string from the UART
 261:modem.c       **** uint8 extract_string(char* from, const char* beginMarker, const char* endMarker,  char* target){
 919              		.loc 1 261 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 24
 922              		@ frame_needed = 1, uses_anonymous_args = 0
 923 0000 80B5     		push	{r7, lr}
 924              		.cfi_def_cfa_offset 8
 925              		.cfi_offset 7, -8
 926              		.cfi_offset 14, -4
 927 0002 86B0     		sub	sp, sp, #24
 928              		.cfi_def_cfa_offset 32
 929 0004 00AF     		add	r7, sp, #0
 930              		.cfi_def_cfa_register 7
 931 0006 F860     		str	r0, [r7, #12]
 932 0008 B960     		str	r1, [r7, #8]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 23


 933 000a 7A60     		str	r2, [r7, #4]
 934 000c 3B60     		str	r3, [r7]
 262:modem.c       ****     
 263:modem.c       ****         char *a, *b;
 264:modem.c       ****   
 265:modem.c       ****         // Expect the UART to contain something like "+CESQ: ##,##,##,##,##,##\r\n\r\nOK"
 266:modem.c       ****         // - Search for "+CESQ: ".  Place the starting pointer, a, at the resulting index
 267:modem.c       ****         a = strstr(from,beginMarker);
 935              		.loc 1 267 0
 936 000e B968     		ldr	r1, [r7, #8]
 937 0010 F868     		ldr	r0, [r7, #12]
 938 0012 FFF7FEFF 		bl	strstr
 939 0016 7861     		str	r0, [r7, #20]
 268:modem.c       ****         if (a == NULL) {
 940              		.loc 1 268 0
 941 0018 7B69     		ldr	r3, [r7, #20]
 942 001a 002B     		cmp	r3, #0
 943 001c 01D1     		bne	.L56
 269:modem.c       ****             //puts("+CESQ: not found in uart_received_string");
 270:modem.c       ****             a = from;
 944              		.loc 1 270 0
 945 001e FB68     		ldr	r3, [r7, #12]
 946 0020 7B61     		str	r3, [r7, #20]
 947              	.L56:
 271:modem.c       ****         }
 272:modem.c       ****         // The strlen() function calculates the length of a given string.
 273:modem.c       ****         a += strlen(beginMarker);
 948              		.loc 1 273 0
 949 0022 B868     		ldr	r0, [r7, #8]
 950 0024 FFF7FEFF 		bl	strlen
 951 0028 0246     		mov	r2, r0
 952 002a 7B69     		ldr	r3, [r7, #20]
 953 002c 1344     		add	r3, r3, r2
 954 002e 7B61     		str	r3, [r7, #20]
 274:modem.c       ****         
 275:modem.c       ****         // - Find the end marking and offset by 1
 276:modem.c       ****         // strstr(const char *haystack, const char *needle) function finds the first occurrence of 
 277:modem.c       ****         // Returns a pointer to the first occurrence in haystack of any of the entire sequence of c
 278:modem.c       ****         b = strstr(a,endMarker);
 955              		.loc 1 278 0
 956 0030 7968     		ldr	r1, [r7, #4]
 957 0032 7869     		ldr	r0, [r7, #20]
 958 0034 FFF7FEFF 		bl	strstr
 959 0038 3861     		str	r0, [r7, #16]
 279:modem.c       ****         if (b == NULL) {
 960              		.loc 1 279 0
 961 003a 3B69     		ldr	r3, [r7, #16]
 962 003c 002B     		cmp	r3, #0
 963 003e 06D1     		bne	.L57
 280:modem.c       ****             // Puts("Comma not found in uart_received_string");
 281:modem.c       ****             b=from+strlen(from);
 964              		.loc 1 281 0
 965 0040 F868     		ldr	r0, [r7, #12]
 966 0042 FFF7FEFF 		bl	strlen
 967 0046 0246     		mov	r2, r0
 968 0048 FB68     		ldr	r3, [r7, #12]
 969 004a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 24


 970 004c 3B61     		str	r3, [r7, #16]
 971              	.L57:
 282:modem.c       ****         }        
 283:modem.c       ****         
 284:modem.c       ****         // Parse the strings and store the respective rssi and fer values
 285:modem.c       ****         strncpy(target,a,b-a);
 972              		.loc 1 285 0
 973 004e 3A69     		ldr	r2, [r7, #16]
 974 0050 7B69     		ldr	r3, [r7, #20]
 975 0052 D31A     		subs	r3, r2, r3
 976 0054 1A46     		mov	r2, r3
 977 0056 7969     		ldr	r1, [r7, #20]
 978 0058 3868     		ldr	r0, [r7]
 979 005a FFF7FEFF 		bl	strncpy
 286:modem.c       ****         target[b-a] = '\0';
 980              		.loc 1 286 0
 981 005e 3A69     		ldr	r2, [r7, #16]
 982 0060 7B69     		ldr	r3, [r7, #20]
 983 0062 D31A     		subs	r3, r2, r3
 984 0064 1A46     		mov	r2, r3
 985 0066 3B68     		ldr	r3, [r7]
 986 0068 1344     		add	r3, r3, r2
 987 006a 0022     		movs	r2, #0
 988 006c 1A70     		strb	r2, [r3]
 287:modem.c       ****         return 1u;
 989              		.loc 1 287 0
 990 006e 0123     		movs	r3, #1
 288:modem.c       ****         
 289:modem.c       **** }
 991              		.loc 1 289 0
 992 0070 1846     		mov	r0, r3
 993 0072 1837     		adds	r7, r7, #24
 994              		.cfi_def_cfa_offset 8
 995 0074 BD46     		mov	sp, r7
 996              		.cfi_def_cfa_register 13
 997              		@ sp needed
 998 0076 80BD     		pop	{r7, pc}
 999              		.cfi_endproc
 1000              	.LFE74:
 1001              		.size	extract_string, .-extract_string
 1002              		.section	.rodata
 1003              		.align	2
 1004              	.LC13:
 1005 019c 54696D65 		.ascii	"Time to connect to network: %d seconds\000"
 1005      20746F20 
 1005      636F6E6E 
 1005      65637420 
 1005      746F206E 
 1006 01c3 00       		.align	2
 1007              	.LC14:
 1008 01c4 4D6F6465 		.ascii	"Modem timed out on network connect\000"
 1008      6D207469 
 1008      6D656420 
 1008      6F757420 
 1008      6F6E206E 
 1009 01e7 00       		.align	2
 1010              	.LC15:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 25


 1011 01e8 41637175 		.ascii	"Acquired IP address: %d seconds\000"
 1011      69726564 
 1011      20495020 
 1011      61646472 
 1011      6573733A 
 1012              		.align	2
 1013              	.LC16:
 1014 0208 4D6F6465 		.ascii	"Modem timed out on IP address acquire.\000"
 1014      6D207469 
 1014      6D656420 
 1014      6F757420 
 1014      6F6E2049 
 1015              		.section	.text.modem_process_tasks,"ax",%progbits
 1016              		.align	2
 1017              		.global	modem_process_tasks
 1018              		.thumb
 1019              		.thumb_func
 1020              		.type	modem_process_tasks, %function
 1021              	modem_process_tasks:
 1022              	.LFB75:
 290:modem.c       **** 
 291:modem.c       **** // Function to startup the modem, connect to the network, and then hand it off to sleep
 292:modem.c       **** uint8 modem_process_tasks(){
 1023              		.loc 1 292 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 8
 1026              		@ frame_needed = 1, uses_anonymous_args = 0
 1027 0000 80B5     		push	{r7, lr}
 1028              		.cfi_def_cfa_offset 8
 1029              		.cfi_offset 7, -8
 1030              		.cfi_offset 14, -4
 1031 0002 82B0     		sub	sp, sp, #8
 1032              		.cfi_def_cfa_offset 16
 1033 0004 00AF     		add	r7, sp, #0
 1034              		.cfi_def_cfa_register 7
 293:modem.c       ****     // If modem state is "startup" then get the modem start time, configure modem settings, and cha
 294:modem.c       ****     if(modem_state == MODEM_STATE_STARTUP){
 1035              		.loc 1 294 0
 1036 0006 464B     		ldr	r3, .L73
 1037 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1038 000a 012B     		cmp	r3, #1
 1039 000c 0BD1     		bne	.L60
 295:modem.c       ****         
 296:modem.c       ****         modem_start_time_stamp = getTimeStamp(); // Get timestamp for modem start time
 1040              		.loc 1 296 0
 1041 000e FFF7FEFF 		bl	getTimeStamp
 1042 0012 0246     		mov	r2, r0
 1043 0014 434B     		ldr	r3, .L73+4
 1044 0016 1A60     		str	r2, [r3]
 297:modem.c       ****         modem_configure_settings(); // Configure modem settings
 1045              		.loc 1 297 0
 1046 0018 FFF7FEFF 		bl	modem_configure_settings
 298:modem.c       ****         modem_state = MODEM_STATE_WAITING_FOR_NETWORK; // Change modem state 
 1047              		.loc 1 298 0
 1048 001c 404B     		ldr	r3, .L73
 1049 001e 0222     		movs	r2, #2
 1050 0020 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 26


 299:modem.c       ****         return 1u; // Keep going, don't hand off to sleep yet
 1051              		.loc 1 299 0
 1052 0022 0123     		movs	r3, #1
 1053 0024 77E0     		b	.L61
 1054              	.L60:
 300:modem.c       ****         
 301:modem.c       ****     }
 302:modem.c       ****     // Else if modem state is "waiting for network" 
 303:modem.c       ****     else if(modem_state == MODEM_STATE_WAITING_FOR_NETWORK){
 1055              		.loc 1 303 0
 1056 0026 3E4B     		ldr	r3, .L73
 1057 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1058 002a 022B     		cmp	r3, #2
 1059 002c 44D1     		bne	.L62
 1060              	.LBB7:
 304:modem.c       ****         
 305:modem.c       ****         // Check if modem has a good cell signal each second for up to 30 seconds
 306:modem.c       ****         for(uint8 i=0;i<30;i++){
 1061              		.loc 1 306 0
 1062 002e 0023     		movs	r3, #0
 1063 0030 FB71     		strb	r3, [r7, #7]
 1064 0032 10E0     		b	.L63
 1065              	.L66:
 307:modem.c       ****             // Get cell network stats
 308:modem.c       ****             get_cell_network_stats();
 1066              		.loc 1 308 0
 1067 0034 FFF7FEFF 		bl	get_cell_network_stats
 309:modem.c       ****             // If cell signal (rsrp) is strong enough, break and connect to the network
 310:modem.c       ****             // Otherwise, keep checking rsrp
 311:modem.c       ****             if(modem_stats.rsrp > 26 && modem_stats.rsrp != 255){
 1068              		.loc 1 311 0
 1069 0038 3B4B     		ldr	r3, .L73+8
 1070 003a 5B69     		ldr	r3, [r3, #20]
 1071 003c 1A2B     		cmp	r3, #26
 1072 003e 03DD     		ble	.L64
 1073              		.loc 1 311 0 is_stmt 0 discriminator 1
 1074 0040 394B     		ldr	r3, .L73+8
 1075 0042 5B69     		ldr	r3, [r3, #20]
 1076 0044 FF2B     		cmp	r3, #255
 1077 0046 0AD1     		bne	.L72
 1078              	.L64:
 312:modem.c       ****                 break;
 313:modem.c       ****             }
 314:modem.c       ****             // Delay for 1 second
 315:modem.c       ****             CyDelay(1000u);
 1079              		.loc 1 315 0 is_stmt 1 discriminator 2
 1080 0048 4FF47A70 		mov	r0, #1000
 1081 004c FFF7FEFF 		bl	CyDelay
 306:modem.c       ****             // Get cell network stats
 1082              		.loc 1 306 0 discriminator 2
 1083 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1084 0052 0133     		adds	r3, r3, #1
 1085 0054 FB71     		strb	r3, [r7, #7]
 1086              	.L63:
 306:modem.c       ****             // Get cell network stats
 1087              		.loc 1 306 0 is_stmt 0 discriminator 1
 1088 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 27


 1089 0058 1D2B     		cmp	r3, #29
 1090 005a EBD9     		bls	.L66
 1091 005c 00E0     		b	.L65
 1092              	.L72:
 312:modem.c       ****                 break;
 1093              		.loc 1 312 0 is_stmt 1
 1094 005e 00BF     		nop
 1095              	.L65:
 1096              	.LBE7:
 316:modem.c       ****         }
 317:modem.c       ****         
 318:modem.c       ****         // If modem connected to the cell network, save/print the time to connect to the network
 319:modem.c       ****         if(is_connected_to_cell_network()){
 1097              		.loc 1 319 0
 1098 0060 FFF7FEFF 		bl	is_connected_to_cell_network
 1099 0064 0346     		mov	r3, r0
 1100 0066 002B     		cmp	r3, #0
 1101 0068 13D0     		beq	.L67
 320:modem.c       ****       
 321:modem.c       ****              modem_stats.time_to_network_connect = (int)(getTimeStamp() - (int32)modem_start_time_s
 1102              		.loc 1 321 0
 1103 006a FFF7FEFF 		bl	getTimeStamp
 1104 006e 0246     		mov	r2, r0
 1105 0070 2C4B     		ldr	r3, .L73+4
 1106 0072 1B68     		ldr	r3, [r3]
 1107 0074 D31A     		subs	r3, r2, r3
 1108 0076 2C4A     		ldr	r2, .L73+8
 1109 0078 9361     		str	r3, [r2, #24]
 322:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Time to connect to network: %d seconds",
 1110              		.loc 1 322 0
 1111 007a 2B4B     		ldr	r3, .L73+8
 1112 007c 9B69     		ldr	r3, [r3, #24]
 1113 007e 1A46     		mov	r2, r3
 1114 0080 2A49     		ldr	r1, .L73+12
 1115 0082 0020     		movs	r0, #0
 1116 0084 FFF7FEFF 		bl	printNotif
 323:modem.c       ****                                             modem_stats.time_to_network_connect);
 324:modem.c       ****             set_up_internet_connection(); // Setup the internet connection
 1117              		.loc 1 324 0
 1118 0088 FFF7FEFF 		bl	set_up_internet_connection
 325:modem.c       ****             modem_state = MODEM_STATE_WAITING_FOR_IP; // Change modem state 
 1119              		.loc 1 325 0
 1120 008c 244B     		ldr	r3, .L73
 1121 008e 0322     		movs	r2, #3
 1122 0090 1A70     		strb	r2, [r3]
 1123              	.L67:
 326:modem.c       ****         }
 327:modem.c       ****         
 328:modem.c       ****         //power off if we time out should only take ~30 secs to connect to network
 329:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_NETWORK_CONNECT){
 1124              		.loc 1 329 0
 1125 0092 FFF7FEFF 		bl	getTimeStamp
 1126 0096 0246     		mov	r2, r0
 1127 0098 224B     		ldr	r3, .L73+4
 1128 009a 1B68     		ldr	r3, [r3]
 1129 009c D31A     		subs	r3, r2, r3
 1130 009e B42B     		cmp	r3, #180
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 28


 1131 00a0 08DD     		ble	.L68
 330:modem.c       ****             modem_state = MODEM_STATE_OFF; // Change modem state
 1132              		.loc 1 330 0
 1133 00a2 1F4B     		ldr	r3, .L73
 1134 00a4 0022     		movs	r2, #0
 1135 00a6 1A70     		strb	r2, [r3]
 331:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1136              		.loc 1 331 0
 1137 00a8 FFF7FEFF 		bl	modem_power_down
 332:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on network connect");
 1138              		.loc 1 332 0
 1139 00ac 2049     		ldr	r1, .L73+16
 1140 00ae 0220     		movs	r0, #2
 1141 00b0 FFF7FEFF 		bl	printNotif
 1142              	.L68:
 333:modem.c       ****             
 334:modem.c       ****         }
 335:modem.c       ****         return 0u;//ok to hand off to sleep
 1143              		.loc 1 335 0
 1144 00b4 0023     		movs	r3, #0
 1145 00b6 2EE0     		b	.L61
 1146              	.L62:
 336:modem.c       ****         
 337:modem.c       ****     // Else if modem state is "waiting for IP"
 338:modem.c       ****     }else if(modem_state == MODEM_STATE_WAITING_FOR_IP){
 1147              		.loc 1 338 0
 1148 00b8 194B     		ldr	r3, .L73
 1149 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1150 00bc 032B     		cmp	r3, #3
 1151 00be 29D1     		bne	.L69
 339:modem.c       ****         // If the modem is connected to the internet, change modem state to "ready", save/print tim
 340:modem.c       ****         if(is_connected_to_internet()){
 1152              		.loc 1 340 0
 1153 00c0 FFF7FEFF 		bl	is_connected_to_internet
 1154 00c4 0346     		mov	r3, r0
 1155 00c6 002B     		cmp	r3, #0
 1156 00c8 11D0     		beq	.L70
 341:modem.c       ****             modem_state = MODEM_STATE_READY; // Change modem state
 1157              		.loc 1 341 0
 1158 00ca 154B     		ldr	r3, .L73
 1159 00cc 0422     		movs	r2, #4
 1160 00ce 1A70     		strb	r2, [r3]
 342:modem.c       ****             // Save/print time to acquire IP address
 343:modem.c       ****             modem_stats.time_to_acquire_ip = (int)(getTimeStamp() - (int32)modem_start_time_stamp);
 1161              		.loc 1 343 0
 1162 00d0 FFF7FEFF 		bl	getTimeStamp
 1163 00d4 0246     		mov	r2, r0
 1164 00d6 134B     		ldr	r3, .L73+4
 1165 00d8 1B68     		ldr	r3, [r3]
 1166 00da D31A     		subs	r3, r2, r3
 1167 00dc 124A     		ldr	r2, .L73+8
 1168 00de D361     		str	r3, [r2, #28]
 344:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Acquired IP address: %d seconds",
 1169              		.loc 1 344 0
 1170 00e0 114B     		ldr	r3, .L73+8
 1171 00e2 DB69     		ldr	r3, [r3, #28]
 1172 00e4 1A46     		mov	r2, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 29


 1173 00e6 1349     		ldr	r1, .L73+20
 1174 00e8 0020     		movs	r0, #0
 1175 00ea FFF7FEFF 		bl	printNotif
 1176              	.L70:
 345:modem.c       ****                                             modem_stats.time_to_acquire_ip);
 346:modem.c       ****         }
 347:modem.c       ****         
 348:modem.c       ****         // Power off if we times out should only take ~30 secs to connect to network
 349:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_IP_ACQUIRE){
 1177              		.loc 1 349 0
 1178 00ee FFF7FEFF 		bl	getTimeStamp
 1179 00f2 0246     		mov	r2, r0
 1180 00f4 0B4B     		ldr	r3, .L73+4
 1181 00f6 1B68     		ldr	r3, [r3]
 1182 00f8 D31A     		subs	r3, r2, r3
 1183 00fa E62B     		cmp	r3, #230
 1184 00fc 08DD     		ble	.L71
 350:modem.c       ****             modem_state = MODEM_STATE_OFF;
 1185              		.loc 1 350 0
 1186 00fe 084B     		ldr	r3, .L73
 1187 0100 0022     		movs	r2, #0
 1188 0102 1A70     		strb	r2, [r3]
 351:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1189              		.loc 1 351 0
 1190 0104 FFF7FEFF 		bl	modem_power_down
 352:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on IP address acquire.");
 1191              		.loc 1 352 0
 1192 0108 0B49     		ldr	r1, .L73+24
 1193 010a 0220     		movs	r0, #2
 1194 010c FFF7FEFF 		bl	printNotif
 1195              	.L71:
 353:modem.c       ****       
 354:modem.c       ****         }
 355:modem.c       ****         return 0u;//ok to hand off to sleep
 1196              		.loc 1 355 0
 1197 0110 0023     		movs	r3, #0
 1198 0112 00E0     		b	.L61
 1199              	.L69:
 356:modem.c       ****     }
 357:modem.c       ****     
 358:modem.c       ****     return 0u;
 1200              		.loc 1 358 0
 1201 0114 0023     		movs	r3, #0
 1202              	.L61:
 359:modem.c       ****     
 360:modem.c       **** }
 1203              		.loc 1 360 0
 1204 0116 1846     		mov	r0, r3
 1205 0118 0837     		adds	r7, r7, #8
 1206              		.cfi_def_cfa_offset 8
 1207 011a BD46     		mov	sp, r7
 1208              		.cfi_def_cfa_register 13
 1209              		@ sp needed
 1210 011c 80BD     		pop	{r7, pc}
 1211              	.L74:
 1212 011e 00BF     		.align	2
 1213              	.L73:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 30


 1214 0120 00000000 		.word	modem_state
 1215 0124 00000000 		.word	modem_start_time_stamp
 1216 0128 00000000 		.word	modem_stats
 1217 012c 9C010000 		.word	.LC13
 1218 0130 C4010000 		.word	.LC14
 1219 0134 E8010000 		.word	.LC15
 1220 0138 08020000 		.word	.LC16
 1221              		.cfi_endproc
 1222              	.LFE75:
 1223              		.size	modem_process_tasks, .-modem_process_tasks
 1224              		.section	.rodata
 1225 022f 00       		.align	2
 1226              	.LC17:
 1227 0230 43686563 		.ascii	"Checking AT+CREG?\000"
 1227      6B696E67 
 1227      2041542B 
 1227      43524547 
 1227      3F00
 1228 0242 0000     		.align	2
 1229              	.LC18:
 1230 0244 41542B43 		.ascii	"AT+CREG?\015\000"
 1230      5245473F 
 1230      0D00
 1231 024e 0000     		.align	2
 1232              	.LC19:
 1233 0250 45787472 		.ascii	"Extracting string AT+CREG?\000"
 1233      61637469 
 1233      6E672073 
 1233      7472696E 
 1233      67204154 
 1234 026b 00       		.align	2
 1235              	.LC20:
 1236 026c 75617274 		.ascii	"uart_received_string: %s\000"
 1236      5F726563 
 1236      65697665 
 1236      645F7374 
 1236      72696E67 
 1237 0285 000000   		.align	2
 1238              	.LC21:
 1239 0288 0D00     		.ascii	"\015\000"
 1240 028a 0000     		.align	2
 1241              	.LC22:
 1242 028c 3A2000   		.ascii	": \000"
 1243 028f 00       		.align	2
 1244              	.LC23:
 1245 0290 52656769 		.ascii	"Registered to network, CREG: %s\000"
 1245      73746572 
 1245      65642074 
 1245      6F206E65 
 1245      74776F72 
 1246              		.align	2
 1247              	.LC24:
 1248 02b0 446F6E65 		.ascii	"Done extracing string AT+CREG?\000"
 1248      20657874 
 1248      72616369 
 1248      6E672073 
 1248      7472696E 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 31


 1249 02cf 00       		.align	2
 1250              	.LC25:
 1251 02d0 302C3100 		.ascii	"0,1\000"
 1252              		.align	2
 1253              	.LC26:
 1254 02d4 302C3500 		.ascii	"0,5\000"
 1255              		.section	.text.is_connected_to_cell_network,"ax",%progbits
 1256              		.align	2
 1257              		.global	is_connected_to_cell_network
 1258              		.thumb
 1259              		.thumb_func
 1260              		.type	is_connected_to_cell_network, %function
 1261              	is_connected_to_cell_network:
 1262              	.LFB76:
 361:modem.c       **** 
 362:modem.c       **** // Checks network status, writes commands to the modem, then extracts string from UART
 363:modem.c       **** uint8 is_connected_to_cell_network(){
 1263              		.loc 1 363 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 16
 1266              		@ frame_needed = 1, uses_anonymous_args = 0
 1267 0000 80B5     		push	{r7, lr}
 1268              		.cfi_def_cfa_offset 8
 1269              		.cfi_offset 7, -8
 1270              		.cfi_offset 14, -4
 1271 0002 84B0     		sub	sp, sp, #16
 1272              		.cfi_def_cfa_offset 24
 1273 0004 00AF     		add	r7, sp, #0
 1274              		.cfi_def_cfa_register 7
 364:modem.c       ****     // AT command AT+CREG? is the Network Registration Report to check network status -- need '0,0'
 365:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Checking AT+CREG?");
 1275              		.loc 1 365 0
 1276 0006 2049     		ldr	r1, .L80
 1277 0008 0020     		movs	r0, #0
 1278 000a FFF7FEFF 		bl	printNotif
 366:modem.c       ****     // create new uint8 variable stust and set to equal the output of the function at_write_command
 367:modem.c       ****     uint8 status = at_write_command("AT+CREG?\r", "OK",DEFAULT_AT_TIMEOUT);
 1279              		.loc 1 367 0
 1280 000e 4FF4FA62 		mov	r2, #2000
 1281 0012 1E49     		ldr	r1, .L80+4
 1282 0014 1E48     		ldr	r0, .L80+8
 1283 0016 FFF7FEFF 		bl	at_write_command
 1284 001a 0346     		mov	r3, r0
 1285 001c FB73     		strb	r3, [r7, #15]
 368:modem.c       ****     
 369:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Extracting string AT+CREG?");
 1286              		.loc 1 369 0
 1287 001e 1D49     		ldr	r1, .L80+12
 1288 0020 0020     		movs	r0, #0
 1289 0022 FFF7FEFF 		bl	printNotif
 370:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"uart_received_string: %s",uart_received_string);
 1290              		.loc 1 370 0
 1291 0026 1C4A     		ldr	r2, .L80+16
 1292 0028 1C49     		ldr	r1, .L80+20
 1293 002a 0020     		movs	r0, #0
 1294 002c FFF7FEFF 		bl	printNotif
 371:modem.c       ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 32


 372:modem.c       ****     // If the modem has a status
 373:modem.c       ****     if(status){
 1295              		.loc 1 373 0
 1296 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1297 0032 002B     		cmp	r3, #0
 1298 0034 23D0     		beq	.L76
 1299              	.LBB8:
 374:modem.c       ****         // Create a character array of length 10 called creg
 375:modem.c       ****         char creg[10];
 376:modem.c       ****         creg[0] = '\0';
 1300              		.loc 1 376 0
 1301 0036 0023     		movs	r3, #0
 1302 0038 3B71     		strb	r3, [r7, #4]
 377:modem.c       ****         // Extract string from the UART
 378:modem.c       ****         extract_string(uart_received_string,": ","\r",creg);
 1303              		.loc 1 378 0
 1304 003a 3B1D     		adds	r3, r7, #4
 1305 003c 184A     		ldr	r2, .L80+24
 1306 003e 1949     		ldr	r1, .L80+28
 1307 0040 1548     		ldr	r0, .L80+16
 1308 0042 FFF7FEFF 		bl	extract_string
 379:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Registered to network, CREG: %s",creg);
 1309              		.loc 1 379 0
 1310 0046 3B1D     		adds	r3, r7, #4
 1311 0048 1A46     		mov	r2, r3
 1312 004a 1749     		ldr	r1, .L80+32
 1313 004c 0020     		movs	r0, #0
 1314 004e FFF7FEFF 		bl	printNotif
 380:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Done extracing string AT+CREG?");
 1315              		.loc 1 380 0
 1316 0052 1649     		ldr	r1, .L80+36
 1317 0054 0020     		movs	r0, #0
 1318 0056 FFF7FEFF 		bl	printNotif
 381:modem.c       ****     
 382:modem.c       ****         // Search creg for "0,1" or "0,5", if either exists and either is not equal to NULL, return
 383:modem.c       ****         if((strstr(creg,"0,1")!=NULL)||(strstr(creg,"0,5")!=NULL)){
 1319              		.loc 1 383 0
 1320 005a 3B1D     		adds	r3, r7, #4
 1321 005c 1449     		ldr	r1, .L80+40
 1322 005e 1846     		mov	r0, r3
 1323 0060 FFF7FEFF 		bl	strstr
 1324 0064 0346     		mov	r3, r0
 1325 0066 002B     		cmp	r3, #0
 1326 0068 07D1     		bne	.L77
 1327              		.loc 1 383 0 is_stmt 0 discriminator 1
 1328 006a 3B1D     		adds	r3, r7, #4
 1329 006c 1149     		ldr	r1, .L80+44
 1330 006e 1846     		mov	r0, r3
 1331 0070 FFF7FEFF 		bl	strstr
 1332 0074 0346     		mov	r3, r0
 1333 0076 002B     		cmp	r3, #0
 1334 0078 01D0     		beq	.L76
 1335              	.L77:
 384:modem.c       ****             return 1u;
 1336              		.loc 1 384 0 is_stmt 1
 1337 007a 0123     		movs	r3, #1
 1338 007c 00E0     		b	.L79
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 33


 1339              	.L76:
 1340              	.LBE8:
 385:modem.c       ****         }
 386:modem.c       ****     }
 387:modem.c       ****     // If the modem doesn't have a status, return 0u
 388:modem.c       ****     return 0u;
 1341              		.loc 1 388 0
 1342 007e 0023     		movs	r3, #0
 1343              	.L79:
 389:modem.c       ****         
 390:modem.c       **** }
 1344              		.loc 1 390 0
 1345 0080 1846     		mov	r0, r3
 1346 0082 1037     		adds	r7, r7, #16
 1347              		.cfi_def_cfa_offset 8
 1348 0084 BD46     		mov	sp, r7
 1349              		.cfi_def_cfa_register 13
 1350              		@ sp needed
 1351 0086 80BD     		pop	{r7, pc}
 1352              	.L81:
 1353              		.align	2
 1354              	.L80:
 1355 0088 30020000 		.word	.LC17
 1356 008c 00000000 		.word	.LC0
 1357 0090 44020000 		.word	.LC18
 1358 0094 50020000 		.word	.LC19
 1359 0098 00000000 		.word	uart_received_string
 1360 009c 6C020000 		.word	.LC20
 1361 00a0 88020000 		.word	.LC21
 1362 00a4 8C020000 		.word	.LC22
 1363 00a8 90020000 		.word	.LC23
 1364 00ac B0020000 		.word	.LC24
 1365 00b0 D0020000 		.word	.LC25
 1366 00b4 D4020000 		.word	.LC26
 1367              		.cfi_endproc
 1368              	.LFE76:
 1369              		.size	is_connected_to_cell_network, .-is_connected_to_cell_network
 1370              		.section	.rodata
 1371              		.align	2
 1372              	.LC27:
 1373 02d8 41542353 		.ascii	"AT#SGACT=1,1\015\012\000"
 1373      47414354 
 1373      3D312C31 
 1373      0D0A00
 1374              		.section	.text.set_up_internet_connection,"ax",%progbits
 1375              		.align	2
 1376              		.global	set_up_internet_connection
 1377              		.thumb
 1378              		.thumb_func
 1379              		.type	set_up_internet_connection, %function
 1380              	set_up_internet_connection:
 1381              	.LFB77:
 391:modem.c       **** 
 392:modem.c       **** // Connect the modem to the internet
 393:modem.c       **** void set_up_internet_connection(){
 1382              		.loc 1 393 0
 1383              		.cfi_startproc
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 34


 1384              		@ args = 0, pretend = 0, frame = 0
 1385              		@ frame_needed = 1, uses_anonymous_args = 0
 1386 0000 80B5     		push	{r7, lr}
 1387              		.cfi_def_cfa_offset 8
 1388              		.cfi_offset 7, -8
 1389              		.cfi_offset 14, -4
 1390 0002 00AF     		add	r7, sp, #0
 1391              		.cfi_def_cfa_register 7
 394:modem.c       ****     
 395:modem.c       ****     //port 3
 396:modem.c       ****    //<connId>,<srMode>,<dataMode>, 
 397:modem.c       ****     //at_write_command("AT#SCFGEXT=1,1,0,0,0,0\r", "OK",DEFAULT_AT_TIMEOUT);////LTE modem relevant
 398:modem.c       ****     
 399:modem.c       ****     //<connId>,<cid>,<pktSz>,<maxTo>,<connTo>,<txTo>
 400:modem.c       ****     //at_write_command("AT#SCFG=1,3,300,90,600,50\r", "OK",DEFAULT_AT_TIMEOUT); //LTE modem relevan
 401:modem.c       ****     // <cid>,<stat>
 402:modem.c       ****    
 403:modem.c       ****     // AT command SGACT is Context Activation command is used to activate the specified PDP context
 404:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",1000u);
 1392              		.loc 1 404 0
 1393 0004 4FF47A72 		mov	r2, #1000
 1394 0008 0249     		ldr	r1, .L83
 1395 000a 0348     		ldr	r0, .L83+4
 1396 000c FFF7FEFF 		bl	at_write_command
 405:modem.c       ****     
 406:modem.c       **** }
 1397              		.loc 1 406 0
 1398 0010 00BF     		nop
 1399 0012 80BD     		pop	{r7, pc}
 1400              	.L84:
 1401              		.align	2
 1402              	.L83:
 1403 0014 00000000 		.word	.LC0
 1404 0018 D8020000 		.word	.LC27
 1405              		.cfi_endproc
 1406              	.LFE77:
 1407              		.size	set_up_internet_connection, .-set_up_internet_connection
 1408              		.section	.rodata
 1409 02e7 00       		.align	2
 1410              	.LC28:
 1411 02e8 312C3100 		.ascii	"1,1\000"
 1412              		.align	2
 1413              	.LC29:
 1414 02ec 41542353 		.ascii	"AT#SGACT?\015\000"
 1414      47414354 
 1414      3F0D00
 1415              		.section	.text.is_connected_to_internet,"ax",%progbits
 1416              		.align	2
 1417              		.global	is_connected_to_internet
 1418              		.thumb
 1419              		.thumb_func
 1420              		.type	is_connected_to_internet, %function
 1421              	is_connected_to_internet:
 1422              	.LFB78:
 407:modem.c       **** 
 408:modem.c       **** // Checks if the modem is connected to the internet
 409:modem.c       **** uint8 is_connected_to_internet(){
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 35


 1423              		.loc 1 409 0
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 0
 1426              		@ frame_needed = 1, uses_anonymous_args = 0
 1427 0000 80B5     		push	{r7, lr}
 1428              		.cfi_def_cfa_offset 8
 1429              		.cfi_offset 7, -8
 1430              		.cfi_offset 14, -4
 1431 0002 00AF     		add	r7, sp, #0
 1432              		.cfi_def_cfa_register 7
 410:modem.c       ****     // AT command SGACT? reports the range for the parameters <cid> and <stat>
 411:modem.c       ****     // cid: is the Packet Data Protocol (PDP) Context Identifier which specifies the particular PDP
 412:modem.c       ****     // stat: gives the context staus (0 deactivated and 1 activated)
 413:modem.c       ****     // Check for 3,1 if Verizon 
 414:modem.c       ****     if(at_write_command("AT#SGACT?\r", "1,1",DEFAULT_AT_TIMEOUT)){
 1433              		.loc 1 414 0
 1434 0004 4FF4FA62 		mov	r2, #2000
 1435 0008 0549     		ldr	r1, .L88
 1436 000a 0648     		ldr	r0, .L88+4
 1437 000c FFF7FEFF 		bl	at_write_command
 1438 0010 0346     		mov	r3, r0
 1439 0012 002B     		cmp	r3, #0
 1440 0014 01D0     		beq	.L86
 415:modem.c       ****         return 1u;
 1441              		.loc 1 415 0
 1442 0016 0123     		movs	r3, #1
 1443 0018 00E0     		b	.L87
 1444              	.L86:
 416:modem.c       ****     }
 417:modem.c       ****     return 0u;  
 1445              		.loc 1 417 0
 1446 001a 0023     		movs	r3, #0
 1447              	.L87:
 418:modem.c       **** }
 1448              		.loc 1 418 0
 1449 001c 1846     		mov	r0, r3
 1450 001e 80BD     		pop	{r7, pc}
 1451              	.L89:
 1452              		.align	2
 1453              	.L88:
 1454 0020 E8020000 		.word	.LC28
 1455 0024 EC020000 		.word	.LC29
 1456              		.cfi_endproc
 1457              	.LFE78:
 1458              		.size	is_connected_to_internet, .-is_connected_to_internet
 1459              		.section	.rodata
 1460 02f7 00       		.align	2
 1461              	.LC30:
 1462 02f8 41542B43 		.ascii	"AT+CESQ\015\000"
 1462      4553510D 
 1462      00
 1463 0301 000000   		.align	2
 1464              	.LC31:
 1465 0304 0D0A2B43 		.ascii	"\015\012+CESQ: %d,%d,%d,%d,%d,%d%*s\000"
 1465      4553513A 
 1465      2025642C 
 1465      25642C25 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 36


 1465      642C2564 
 1466              		.section	.text.get_cell_network_stats,"ax",%progbits
 1467              		.align	2
 1468              		.global	get_cell_network_stats
 1469              		.thumb
 1470              		.thumb_func
 1471              		.type	get_cell_network_stats, %function
 1472              	get_cell_network_stats:
 1473              	.LFB79:
 419:modem.c       **** 
 420:modem.c       **** void get_cell_network_stats(){
 1474              		.loc 1 420 0
 1475              		.cfi_startproc
 1476              		@ args = 0, pretend = 0, frame = 8
 1477              		@ frame_needed = 1, uses_anonymous_args = 0
 1478 0000 80B5     		push	{r7, lr}
 1479              		.cfi_def_cfa_offset 8
 1480              		.cfi_offset 7, -8
 1481              		.cfi_offset 14, -4
 1482 0002 86B0     		sub	sp, sp, #24
 1483              		.cfi_def_cfa_offset 32
 1484 0004 04AF     		add	r7, sp, #16
 1485              		.cfi_def_cfa 7, 16
 421:modem.c       ****     // Initialize values
 422:modem.c       ****     modem_stats.ber = 255;
 1486              		.loc 1 422 0
 1487 0006 154B     		ldr	r3, .L91
 1488 0008 FF22     		movs	r2, #255
 1489 000a 5A60     		str	r2, [r3, #4]
 423:modem.c       ****     modem_stats.ecno = 255;
 1490              		.loc 1 423 0
 1491 000c 134B     		ldr	r3, .L91
 1492 000e FF22     		movs	r2, #255
 1493 0010 DA60     		str	r2, [r3, #12]
 424:modem.c       ****     modem_stats.rscp = 255;
 1494              		.loc 1 424 0
 1495 0012 124B     		ldr	r3, .L91
 1496 0014 FF22     		movs	r2, #255
 1497 0016 9A60     		str	r2, [r3, #8]
 425:modem.c       ****     modem_stats.rsrp = 255;
 1498              		.loc 1 425 0
 1499 0018 104B     		ldr	r3, .L91
 1500 001a FF22     		movs	r2, #255
 1501 001c 5A61     		str	r2, [r3, #20]
 426:modem.c       ****     modem_stats.rsrq = 255;
 1502              		.loc 1 426 0
 1503 001e 0F4B     		ldr	r3, .L91
 1504 0020 FF22     		movs	r2, #255
 1505 0022 1A61     		str	r2, [r3, #16]
 427:modem.c       ****     modem_stats.rxlev = 255;
 1506              		.loc 1 427 0
 1507 0024 0D4B     		ldr	r3, .L91
 1508 0026 FF22     		movs	r2, #255
 1509 0028 1A60     		str	r2, [r3]
 428:modem.c       **** 
 429:modem.c       ****     //for(uint8 attempts =0; attempts <10; attempts++){
 430:modem.c       ****     at_write_command("AT+CESQ\r", "OK", DEFAULT_AT_TIMEOUT);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 37


 1510              		.loc 1 430 0
 1511 002a 4FF4FA62 		mov	r2, #2000
 1512 002e 0C49     		ldr	r1, .L91+4
 1513 0030 0C48     		ldr	r0, .L91+8
 1514 0032 FFF7FEFF 		bl	at_write_command
 431:modem.c       ****     //CESQ: <rxlev>,<ber>,<rscp>,<ecno>,<rsrq>,<rsrp>
 432:modem.c       **** 
 433:modem.c       ****     int match = sscanf(uart_received_string,"\r\n+CESQ: %d,%d,%d,%d,%d,%d%*s",
 1515              		.loc 1 433 0
 1516 0036 0C4B     		ldr	r3, .L91+12
 1517 0038 0393     		str	r3, [sp, #12]
 1518 003a 0C4B     		ldr	r3, .L91+16
 1519 003c 0293     		str	r3, [sp, #8]
 1520 003e 0C4B     		ldr	r3, .L91+20
 1521 0040 0193     		str	r3, [sp, #4]
 1522 0042 0C4B     		ldr	r3, .L91+24
 1523 0044 0093     		str	r3, [sp]
 1524 0046 0C4B     		ldr	r3, .L91+28
 1525 0048 044A     		ldr	r2, .L91
 1526 004a 0C49     		ldr	r1, .L91+32
 1527 004c 0C48     		ldr	r0, .L91+36
 1528 004e FFF7FEFF 		bl	sscanf
 1529 0052 7860     		str	r0, [r7, #4]
 434:modem.c       ****         &modem_stats.rxlev,
 435:modem.c       ****         &modem_stats.ber,
 436:modem.c       ****         &modem_stats.rscp,
 437:modem.c       ****         &modem_stats.ecno,
 438:modem.c       ****         &modem_stats.rsrq,
 439:modem.c       ****         &modem_stats.rsrp);
 440:modem.c       **** 
 441:modem.c       ****         //check to see if we’re getting a good received signal strength
 442:modem.c       ****         //if(modem_stats.rsrp != 255 && modem_stats.rsrp > 26){// || modem_stats.rxlev !=0){
 443:modem.c       ****         //    break;
 444:modem.c       ****         //}
 445:modem.c       ****         // Delay one second
 446:modem.c       ****         //CyDelay(1000u);
 447:modem.c       ****     //}
 448:modem.c       **** }
 1530              		.loc 1 448 0
 1531 0054 00BF     		nop
 1532 0056 0837     		adds	r7, r7, #8
 1533              		.cfi_def_cfa_offset 8
 1534 0058 BD46     		mov	sp, r7
 1535              		.cfi_def_cfa_register 13
 1536              		@ sp needed
 1537 005a 80BD     		pop	{r7, pc}
 1538              	.L92:
 1539              		.align	2
 1540              	.L91:
 1541 005c 00000000 		.word	modem_stats
 1542 0060 00000000 		.word	.LC0
 1543 0064 F8020000 		.word	.LC30
 1544 0068 14000000 		.word	modem_stats+20
 1545 006c 10000000 		.word	modem_stats+16
 1546 0070 0C000000 		.word	modem_stats+12
 1547 0074 08000000 		.word	modem_stats+8
 1548 0078 04000000 		.word	modem_stats+4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 38


 1549 007c 04030000 		.word	.LC31
 1550 0080 00000000 		.word	uart_received_string
 1551              		.cfi_endproc
 1552              	.LFE79:
 1553              		.size	get_cell_network_stats, .-get_cell_network_stats
 1554              		.section	.text.updatable_parameters_initialize,"ax",%progbits
 1555              		.align	2
 1556              		.global	updatable_parameters_initialize
 1557              		.thumb
 1558              		.thumb_func
 1559              		.type	updatable_parameters_initialize, %function
 1560              	updatable_parameters_initialize:
 1561              	.LFB80:
 449:modem.c       **** 
 450:modem.c       **** // Initialize updatable parameters (sampling, reporting, and debug frequencies)
 451:modem.c       **** void updatable_parameters_initialize(){
 1562              		.loc 1 451 0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 0
 1565              		@ frame_needed = 1, uses_anonymous_args = 0
 1566              		@ link register save eliminated.
 1567 0000 80B4     		push	{r7}
 1568              		.cfi_def_cfa_offset 4
 1569              		.cfi_offset 7, -4
 1570 0002 00AF     		add	r7, sp, #0
 1571              		.cfi_def_cfa_register 7
 452:modem.c       ****     updatable_parameters.node_type = NODE_TYPE_SONTEK_FLOW;
 1572              		.loc 1 452 0
 1573 0004 094B     		ldr	r3, .L94
 1574 0006 0222     		movs	r2, #2
 1575 0008 1A70     		strb	r2, [r3]
 453:modem.c       ****     updatable_parameters.sim_type = SIM_TYPE_SUPER;
 1576              		.loc 1 453 0
 1577 000a 084B     		ldr	r3, .L94
 1578 000c 0122     		movs	r2, #1
 1579 000e 5A70     		strb	r2, [r3, #1]
 454:modem.c       ****     updatable_parameters.measure_time = 10u; //in minutes
 1580              		.loc 1 454 0
 1581 0010 064B     		ldr	r3, .L94
 1582 0012 0A22     		movs	r2, #10
 1583 0014 9A70     		strb	r2, [r3, #2]
 455:modem.c       ****     updatable_parameters.sync_time = 60u;   //in minutes
 1584              		.loc 1 455 0
 1585 0016 054B     		ldr	r3, .L94
 1586 0018 3C22     		movs	r2, #60
 1587 001a DA70     		strb	r2, [r3, #3]
 456:modem.c       ****     updatable_parameters.debug_level = 1u;
 1588              		.loc 1 456 0
 1589 001c 034B     		ldr	r3, .L94
 1590 001e 0122     		movs	r2, #1
 1591 0020 1A71     		strb	r2, [r3, #4]
 457:modem.c       **** }
 1592              		.loc 1 457 0
 1593 0022 00BF     		nop
 1594 0024 BD46     		mov	sp, r7
 1595              		.cfi_def_cfa_register 13
 1596              		@ sp needed
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 39


 1597 0026 80BC     		pop	{r7}
 1598              		.cfi_restore 7
 1599              		.cfi_def_cfa_offset 0
 1600 0028 7047     		bx	lr
 1601              	.L95:
 1602 002a 00BF     		.align	2
 1603              	.L94:
 1604 002c 00000000 		.word	updatable_parameters
 1605              		.cfi_endproc
 1606              	.LFE80:
 1607              		.size	updatable_parameters_initialize, .-updatable_parameters_initialize
 1608              		.section	.rodata
 1609 0322 0000     		.align	2
 1610              	.LC32:
 1611 0324 4E6F6465 		.ascii	"Node_Type: \000"
 1611      5F547970 
 1611      653A2000 
 1612              		.align	2
 1613              	.LC33:
 1614 0330 53494D5F 		.ascii	"SIM_Type: \000"
 1614      54797065 
 1614      3A2000
 1615 033b 00       		.align	2
 1616              	.LC34:
 1617 033c 53616D70 		.ascii	"Sample_Freq: \000"
 1617      6C655F46 
 1617      7265713A 
 1617      2000
 1618 034a 0000     		.align	2
 1619              	.LC35:
 1620 034c 5265706F 		.ascii	"Report_Freq: \000"
 1620      72745F46 
 1620      7265713A 
 1620      2000
 1621 035a 0000     		.align	2
 1622              	.LC36:
 1623 035c 44656275 		.ascii	"Debug_Freq: \000"
 1623      675F4672 
 1623      65713A20 
 1623      00
 1624 0369 000000   		.align	2
 1625              	.LC37:
 1626 036c 256400   		.ascii	"%d\000"
 1627 036f 00       		.align	2
 1628              	.LC38:
 1629 0370 4E6F6465 		.ascii	"Node type changed to: %d\015\012\000"
 1629      20747970 
 1629      65206368 
 1629      616E6765 
 1629      6420746F 
 1630 038b 00       		.align	2
 1631              	.LC39:
 1632 038c 436F756C 		.ascii	"Could not change node type.\000"
 1632      64206E6F 
 1632      74206368 
 1632      616E6765 
 1632      206E6F64 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 40


 1633              		.align	2
 1634              	.LC40:
 1635 03a8 53494D20 		.ascii	"SIM type changed to: %d\015\012\000"
 1635      74797065 
 1635      20636861 
 1635      6E676564 
 1635      20746F3A 
 1636 03c2 0000     		.align	2
 1637              	.LC41:
 1638 03c4 436F756C 		.ascii	"Could not change SIM type.\000"
 1638      64206E6F 
 1638      74206368 
 1638      616E6765 
 1638      2053494D 
 1639 03df 00       		.align	2
 1640              	.LC42:
 1641 03e0 53616D70 		.ascii	"Sampling frequency changed to: %d\015\012\000"
 1641      6C696E67 
 1641      20667265 
 1641      7175656E 
 1641      63792063 
 1642              		.align	2
 1643              	.LC43:
 1644 0404 436F756C 		.ascii	"Could not parse new sampling frequency value.\000"
 1644      64206E6F 
 1644      74207061 
 1644      72736520 
 1644      6E657720 
 1645 0432 0000     		.align	2
 1646              	.LC44:
 1647 0434 5265706F 		.ascii	"Reporting frequency changed to: %d\015\012\000"
 1647      7274696E 
 1647      67206672 
 1647      65717565 
 1647      6E637920 
 1648 0459 000000   		.align	2
 1649              	.LC45:
 1650 045c 436F756C 		.ascii	"Could not parse new reporting frequency value.\000"
 1650      64206E6F 
 1650      74207061 
 1650      72736520 
 1650      6E657720 
 1651 048b 00       		.align	2
 1652              	.LC46:
 1653 048c 44656275 		.ascii	"Debug printing frequency changed to: %d\015\012\000"
 1653      67207072 
 1653      696E7469 
 1653      6E672066 
 1653      72657175 
 1654 04b6 0000     		.align	2
 1655              	.LC47:
 1656 04b8 436F756C 		.ascii	"Could not parse new debugging frequency value.\000"
 1656      64206E6F 
 1656      74207061 
 1656      72736520 
 1656      6E657720 
 1657              		.section	.text.get_updated_parameters_from_malcom,"ax",%progbits
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 41


 1658              		.align	2
 1659              		.global	get_updated_parameters_from_malcom
 1660              		.thumb
 1661              		.thumb_func
 1662              		.type	get_updated_parameters_from_malcom, %function
 1663              	get_updated_parameters_from_malcom:
 1664              	.LFB81:
 458:modem.c       **** 
 459:modem.c       **** // Get the update values for sampling frequency, reporting frequency, and the debug level from the 
 460:modem.c       **** void get_updated_parameters_from_malcom(){
 1665              		.loc 1 460 0
 1666              		.cfi_startproc
 1667              		@ args = 0, pretend = 0, frame = 88
 1668              		@ frame_needed = 1, uses_anonymous_args = 0
 1669 0000 90B5     		push	{r4, r7, lr}
 1670              		.cfi_def_cfa_offset 12
 1671              		.cfi_offset 4, -12
 1672              		.cfi_offset 7, -8
 1673              		.cfi_offset 14, -4
 1674 0002 97B0     		sub	sp, sp, #92
 1675              		.cfi_def_cfa_offset 104
 1676 0004 00AF     		add	r7, sp, #0
 1677              		.cfi_def_cfa_register 7
 461:modem.c       ****     
 462:modem.c       ****     // Create character array of size 1024 characters to hold the uart received string
 463:modem.c       ****     char s_node_type[10];
 464:modem.c       ****     char s_sim_type[10];
 465:modem.c       ****     char s_sample_freq[10];
 466:modem.c       ****     char s_report_freq[10];
 467:modem.c       ****     char s_debug_freq[10];
 468:modem.c       ****     
 469:modem.c       ****     s_node_type[0] = '\0';
 1678              		.loc 1 469 0
 1679 0006 0023     		movs	r3, #0
 1680 0008 87F84C30 		strb	r3, [r7, #76]
 470:modem.c       ****     s_sim_type[0] = '\0';
 1681              		.loc 1 470 0
 1682 000c 0023     		movs	r3, #0
 1683 000e 87F84030 		strb	r3, [r7, #64]
 471:modem.c       ****     s_sample_freq[0] = '\0';
 1684              		.loc 1 471 0
 1685 0012 0023     		movs	r3, #0
 1686 0014 87F83430 		strb	r3, [r7, #52]
 472:modem.c       ****     s_report_freq[0] = '\0';
 1687              		.loc 1 472 0
 1688 0018 0023     		movs	r3, #0
 1689 001a 87F82830 		strb	r3, [r7, #40]
 473:modem.c       ****     s_debug_freq[0] = '\0';
 1690              		.loc 1 473 0
 1691 001e 0023     		movs	r3, #0
 1692 0020 3B77     		strb	r3, [r7, #28]
 474:modem.c       ****     
 475:modem.c       ****     // Extract UART string recieved from the modem and save to variables
 476:modem.c       ****     extract_string(uart_received_string,"Node_Type: ","\r",s_node_type);
 1693              		.loc 1 476 0
 1694 0022 07F14C03 		add	r3, r7, #76
 1695 0026 644A     		ldr	r2, .L108
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 42


 1696 0028 6449     		ldr	r1, .L108+4
 1697 002a 6548     		ldr	r0, .L108+8
 1698 002c FFF7FEFF 		bl	extract_string
 477:modem.c       ****     extract_string(uart_received_string,"SIM_Type: ","\r",s_sim_type);
 1699              		.loc 1 477 0
 1700 0030 07F14003 		add	r3, r7, #64
 1701 0034 604A     		ldr	r2, .L108
 1702 0036 6349     		ldr	r1, .L108+12
 1703 0038 6148     		ldr	r0, .L108+8
 1704 003a FFF7FEFF 		bl	extract_string
 478:modem.c       ****     extract_string(uart_received_string,"Sample_Freq: ","\r",s_sample_freq);
 1705              		.loc 1 478 0
 1706 003e 07F13403 		add	r3, r7, #52
 1707 0042 5D4A     		ldr	r2, .L108
 1708 0044 6049     		ldr	r1, .L108+16
 1709 0046 5E48     		ldr	r0, .L108+8
 1710 0048 FFF7FEFF 		bl	extract_string
 479:modem.c       ****     extract_string(uart_received_string,"Report_Freq: ","\r",s_report_freq);
 1711              		.loc 1 479 0
 1712 004c 07F12803 		add	r3, r7, #40
 1713 0050 594A     		ldr	r2, .L108
 1714 0052 5E49     		ldr	r1, .L108+20
 1715 0054 5A48     		ldr	r0, .L108+8
 1716 0056 FFF7FEFF 		bl	extract_string
 480:modem.c       ****     extract_string(uart_received_string,"Debug_Freq: ","\r",s_debug_freq);
 1717              		.loc 1 480 0
 1718 005a 07F11C03 		add	r3, r7, #28
 1719 005e 564A     		ldr	r2, .L108
 1720 0060 5B49     		ldr	r1, .L108+24
 1721 0062 5748     		ldr	r0, .L108+8
 1722 0064 FFF7FEFF 		bl	extract_string
 481:modem.c       ****     
 482:modem.c       ****     // Create variables for what is sent back from the server
 483:modem.c       ****     int node_type, sim_type, sample_freq, report_freq, debug_freq;
 484:modem.c       ****     
 485:modem.c       ****     // Scan character arrays and save values 
 486:modem.c       ****     if(sscanf(s_node_type, "%d", &node_type)==1){
 1723              		.loc 1 486 0
 1724 0068 07F11802 		add	r2, r7, #24
 1725 006c 07F14C03 		add	r3, r7, #76
 1726 0070 5849     		ldr	r1, .L108+28
 1727 0072 1846     		mov	r0, r3
 1728 0074 FFF7FEFF 		bl	sscanf
 1729 0078 0346     		mov	r3, r0
 1730 007a 012B     		cmp	r3, #1
 1731 007c 0AD1     		bne	.L97
 487:modem.c       ****         updatable_parameters.node_type = node_type;
 1732              		.loc 1 487 0
 1733 007e BB69     		ldr	r3, [r7, #24]
 1734 0080 DAB2     		uxtb	r2, r3
 1735 0082 554B     		ldr	r3, .L108+32
 1736 0084 1A70     		strb	r2, [r3]
 488:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Node type changed to: %d\r\n", node_type);
 1737              		.loc 1 488 0
 1738 0086 BB69     		ldr	r3, [r7, #24]
 1739 0088 1A46     		mov	r2, r3
 1740 008a 5449     		ldr	r1, .L108+36
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 43


 1741 008c 0020     		movs	r0, #0
 1742 008e FFF7FEFF 		bl	printNotif
 1743 0092 03E0     		b	.L98
 1744              	.L97:
 489:modem.c       ****     }else{
 490:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not change node type.");
 1745              		.loc 1 490 0
 1746 0094 5249     		ldr	r1, .L108+40
 1747 0096 0220     		movs	r0, #2
 1748 0098 FFF7FEFF 		bl	printNotif
 1749              	.L98:
 491:modem.c       ****     }
 492:modem.c       ****     if(sscanf(s_sim_type, "%d", &sim_type)==1){
 1750              		.loc 1 492 0
 1751 009c 07F11402 		add	r2, r7, #20
 1752 00a0 07F14003 		add	r3, r7, #64
 1753 00a4 4B49     		ldr	r1, .L108+28
 1754 00a6 1846     		mov	r0, r3
 1755 00a8 FFF7FEFF 		bl	sscanf
 1756 00ac 0346     		mov	r3, r0
 1757 00ae 012B     		cmp	r3, #1
 1758 00b0 0ED1     		bne	.L99
 493:modem.c       ****         updatable_parameters.sim_type = sim_type;
 1759              		.loc 1 493 0
 1760 00b2 7B69     		ldr	r3, [r7, #20]
 1761 00b4 002B     		cmp	r3, #0
 1762 00b6 14BF     		ite	ne
 1763 00b8 0123     		movne	r3, #1
 1764 00ba 0023     		moveq	r3, #0
 1765 00bc DAB2     		uxtb	r2, r3
 1766 00be 464B     		ldr	r3, .L108+32
 1767 00c0 5A70     		strb	r2, [r3, #1]
 494:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "SIM type changed to: %d\r\n", sim_type);
 1768              		.loc 1 494 0
 1769 00c2 7B69     		ldr	r3, [r7, #20]
 1770 00c4 1A46     		mov	r2, r3
 1771 00c6 4749     		ldr	r1, .L108+44
 1772 00c8 0020     		movs	r0, #0
 1773 00ca FFF7FEFF 		bl	printNotif
 1774 00ce 03E0     		b	.L100
 1775              	.L99:
 495:modem.c       ****     }else{
 496:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not change SIM type.");
 1776              		.loc 1 496 0
 1777 00d0 4549     		ldr	r1, .L108+48
 1778 00d2 0220     		movs	r0, #2
 1779 00d4 FFF7FEFF 		bl	printNotif
 1780              	.L100:
 497:modem.c       ****     }
 498:modem.c       ****     if(sscanf(s_sample_freq, "%d", &sample_freq)==1){
 1781              		.loc 1 498 0
 1782 00d8 07F11002 		add	r2, r7, #16
 1783 00dc 07F13403 		add	r3, r7, #52
 1784 00e0 3C49     		ldr	r1, .L108+28
 1785 00e2 1846     		mov	r0, r3
 1786 00e4 FFF7FEFF 		bl	sscanf
 1787 00e8 0346     		mov	r3, r0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 44


 1788 00ea 012B     		cmp	r3, #1
 1789 00ec 19D1     		bne	.L101
 499:modem.c       ****         updatable_parameters.measure_time = sample_freq;
 1790              		.loc 1 499 0
 1791 00ee 3B69     		ldr	r3, [r7, #16]
 1792 00f0 DAB2     		uxtb	r2, r3
 1793 00f2 394B     		ldr	r3, .L108+32
 1794 00f4 9A70     		strb	r2, [r3, #2]
 500:modem.c       ****         // Create a continuous alarm called alarmMeasure that triggers at the required time to take
 501:modem.c       ****         alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_C
 1795              		.loc 1 501 0
 1796 00f6 384B     		ldr	r3, .L108+32
 1797 00f8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1798 00fa 99B2     		uxth	r1, r3
 1799 00fc 3B4C     		ldr	r4, .L108+52
 1800 00fe 3846     		mov	r0, r7
 1801 0100 0723     		movs	r3, #7
 1802 0102 0122     		movs	r2, #1
 1803 0104 FFF7FEFF 		bl	CreateAlarm
 1804 0108 2246     		mov	r2, r4
 1805 010a 3B46     		mov	r3, r7
 1806 010c 1968     		ldr	r1, [r3]	@ unaligned
 1807 010e 1160     		str	r1, [r2]	@ unaligned
 1808 0110 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 1809 0112 9380     		strh	r3, [r2, #4]	@ unaligned
 502:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Sampling frequency changed to: %d\r\n", sample_freq);
 1810              		.loc 1 502 0
 1811 0114 3B69     		ldr	r3, [r7, #16]
 1812 0116 1A46     		mov	r2, r3
 1813 0118 3549     		ldr	r1, .L108+56
 1814 011a 0020     		movs	r0, #0
 1815 011c FFF7FEFF 		bl	printNotif
 1816 0120 03E0     		b	.L102
 1817              	.L101:
 503:modem.c       ****     }else{
 504:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new sampling frequency value.");
 1818              		.loc 1 504 0
 1819 0122 3449     		ldr	r1, .L108+60
 1820 0124 0220     		movs	r0, #2
 1821 0126 FFF7FEFF 		bl	printNotif
 1822              	.L102:
 505:modem.c       ****     }
 506:modem.c       ****     if(sscanf(s_report_freq, "%d", &report_freq)==1){
 1823              		.loc 1 506 0
 1824 012a 07F10C02 		add	r2, r7, #12
 1825 012e 07F12803 		add	r3, r7, #40
 1826 0132 2849     		ldr	r1, .L108+28
 1827 0134 1846     		mov	r0, r3
 1828 0136 FFF7FEFF 		bl	sscanf
 1829 013a 0346     		mov	r3, r0
 1830 013c 012B     		cmp	r3, #1
 1831 013e 19D1     		bne	.L103
 507:modem.c       ****         updatable_parameters.sync_time = report_freq;
 1832              		.loc 1 507 0
 1833 0140 FB68     		ldr	r3, [r7, #12]
 1834 0142 DAB2     		uxtb	r2, r3
 1835 0144 244B     		ldr	r3, .L108+32
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 45


 1836 0146 DA70     		strb	r2, [r3, #3]
 508:modem.c       ****         // Create a continuous alarm called alarmSync that triggers at the required time to sync th
 509:modem.c       ****         alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINU
 1837              		.loc 1 509 0
 1838 0148 234B     		ldr	r3, .L108+32
 1839 014a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1840 014c 99B2     		uxth	r1, r3
 1841 014e 2A4C     		ldr	r4, .L108+64
 1842 0150 3846     		mov	r0, r7
 1843 0152 0723     		movs	r3, #7
 1844 0154 0122     		movs	r2, #1
 1845 0156 FFF7FEFF 		bl	CreateAlarm
 1846 015a 2246     		mov	r2, r4
 1847 015c 3B46     		mov	r3, r7
 1848 015e 1968     		ldr	r1, [r3]	@ unaligned
 1849 0160 1160     		str	r1, [r2]	@ unaligned
 1850 0162 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 1851 0164 9380     		strh	r3, [r2, #4]	@ unaligned
 510:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Reporting frequency changed to: %d\r\n", report_freq);
 1852              		.loc 1 510 0
 1853 0166 FB68     		ldr	r3, [r7, #12]
 1854 0168 1A46     		mov	r2, r3
 1855 016a 2449     		ldr	r1, .L108+68
 1856 016c 0020     		movs	r0, #0
 1857 016e FFF7FEFF 		bl	printNotif
 1858 0172 03E0     		b	.L104
 1859              	.L103:
 511:modem.c       ****         }else{
 512:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new reporting frequency value.");
 1860              		.loc 1 512 0
 1861 0174 2249     		ldr	r1, .L108+72
 1862 0176 0220     		movs	r0, #2
 1863 0178 FFF7FEFF 		bl	printNotif
 1864              	.L104:
 513:modem.c       ****     }
 514:modem.c       ****     if(sscanf(s_debug_freq, "%d", &debug_freq)==1){
 1865              		.loc 1 514 0
 1866 017c 07F10802 		add	r2, r7, #8
 1867 0180 07F11C03 		add	r3, r7, #28
 1868 0184 1349     		ldr	r1, .L108+28
 1869 0186 1846     		mov	r0, r3
 1870 0188 FFF7FEFF 		bl	sscanf
 1871 018c 0346     		mov	r3, r0
 1872 018e 012B     		cmp	r3, #1
 1873 0190 0AD1     		bne	.L105
 515:modem.c       ****         updatable_parameters.debug_level = debug_freq;
 1874              		.loc 1 515 0
 1875 0192 BB68     		ldr	r3, [r7, #8]
 1876 0194 DAB2     		uxtb	r2, r3
 1877 0196 104B     		ldr	r3, .L108+32
 1878 0198 1A71     		strb	r2, [r3, #4]
 516:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Debug printing frequency changed to: %d\r\n", debug_freq);
 1879              		.loc 1 516 0
 1880 019a BB68     		ldr	r3, [r7, #8]
 1881 019c 1A46     		mov	r2, r3
 1882 019e 1949     		ldr	r1, .L108+76
 1883 01a0 0020     		movs	r0, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 46


 1884 01a2 FFF7FEFF 		bl	printNotif
 517:modem.c       ****     }else{
 518:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new debugging frequency value.");
 519:modem.c       ****     }
 520:modem.c       **** }
 1885              		.loc 1 520 0
 1886 01a6 03E0     		b	.L107
 1887              	.L105:
 518:modem.c       ****     }
 1888              		.loc 1 518 0
 1889 01a8 1749     		ldr	r1, .L108+80
 1890 01aa 0220     		movs	r0, #2
 1891 01ac FFF7FEFF 		bl	printNotif
 1892              	.L107:
 1893              		.loc 1 520 0
 1894 01b0 00BF     		nop
 1895 01b2 5C37     		adds	r7, r7, #92
 1896              		.cfi_def_cfa_offset 12
 1897 01b4 BD46     		mov	sp, r7
 1898              		.cfi_def_cfa_register 13
 1899              		@ sp needed
 1900 01b6 90BD     		pop	{r4, r7, pc}
 1901              	.L109:
 1902              		.align	2
 1903              	.L108:
 1904 01b8 88020000 		.word	.LC21
 1905 01bc 24030000 		.word	.LC32
 1906 01c0 00000000 		.word	uart_received_string
 1907 01c4 30030000 		.word	.LC33
 1908 01c8 3C030000 		.word	.LC34
 1909 01cc 4C030000 		.word	.LC35
 1910 01d0 5C030000 		.word	.LC36
 1911 01d4 6C030000 		.word	.LC37
 1912 01d8 00000000 		.word	updatable_parameters
 1913 01dc 70030000 		.word	.LC38
 1914 01e0 8C030000 		.word	.LC39
 1915 01e4 A8030000 		.word	.LC40
 1916 01e8 C4030000 		.word	.LC41
 1917 01ec 00000000 		.word	alarmMeasure
 1918 01f0 E0030000 		.word	.LC42
 1919 01f4 04040000 		.word	.LC43
 1920 01f8 00000000 		.word	alarmSync
 1921 01fc 34040000 		.word	.LC44
 1922 0200 5C040000 		.word	.LC45
 1923 0204 8C040000 		.word	.LC46
 1924 0208 B8040000 		.word	.LC47
 1925              		.cfi_endproc
 1926              	.LFE81:
 1927              		.size	get_updated_parameters_from_malcom, .-get_updated_parameters_from_malcom
 1928              		.section	.rodata
 1929 04e7 00       		.align	2
 1930              	.LC48:
 1931 04e8 41542343 		.ascii	"AT#CGMM\015\000"
 1931      474D4D0D 
 1931      00
 1932 04f1 000000   		.align	2
 1933              	.LC49:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 47


 1934 04f4 4D6F6465 		.ascii	"Modem Model: %s\000"
 1934      6D204D6F 
 1934      64656C3A 
 1934      20257300 
 1935              		.align	2
 1936              	.LC50:
 1937 0504 41542343 		.ascii	"AT#CCID\015\000"
 1937      4349440D 
 1937      00
 1938 050d 000000   		.align	2
 1939              	.LC51:
 1940 0510 53494D20 		.ascii	"SIM ID: %s\000"
 1940      49443A20 
 1940      257300
 1941 051b 00       		.align	2
 1942              	.LC52:
 1943 051c 41542B43 		.ascii	"AT+CGSN\015\000"
 1943      47534E0D 
 1943      00
 1944 0525 000000   		.align	2
 1945              	.LC53:
 1946 0528 494D4549 		.ascii	"IMEI: %s\000"
 1946      3A202573 
 1946      00
 1947 0531 000000   		.align	2
 1948              	.LC54:
 1949 0534 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\015\012"
 1949      4744434F 
 1949      4E543D31 
 1949      2C224950 
 1949      222C2277 
 1950 055d 00       		.ascii	"\000"
 1951 055e 0000     		.align	2
 1952              	.LC55:
 1953 0560 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"super\"\015\012\000"
 1953      4744434F 
 1953      4E543D31 
 1953      2C224950 
 1953      222C2273 
 1954              		.align	2
 1955              	.LC56:
 1956 057c 41542B43 		.ascii	"AT+CFUN?\015\000"
 1956      46554E3F 
 1956      0D00
 1957 0586 0000     		.align	2
 1958              	.LC57:
 1959 0588 4346554E 		.ascii	"CFUN: %s\000"
 1959      3A202573 
 1959      00
 1960 0591 000000   		.align	2
 1961              	.LC58:
 1962 0594 41542B43 		.ascii	"AT+CFUN=1\015\000"
 1962      46554E3D 
 1962      310D00
 1963              		.section	.text.modem_configure_settings,"ax",%progbits
 1964              		.align	2
 1965              		.global	modem_configure_settings
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 48


 1966              		.thumb
 1967              		.thumb_func
 1968              		.type	modem_configure_settings, %function
 1969              	modem_configure_settings:
 1970              	.LFB82:
 521:modem.c       ****     
 522:modem.c       **** // Configure the modem settings
 523:modem.c       **** void modem_configure_settings(){
 1971              		.loc 1 523 0
 1972              		.cfi_startproc
 1973              		@ args = 0, pretend = 0, frame = 16
 1974              		@ frame_needed = 1, uses_anonymous_args = 0
 1975 0000 80B5     		push	{r7, lr}
 1976              		.cfi_def_cfa_offset 8
 1977              		.cfi_offset 7, -8
 1978              		.cfi_offset 14, -4
 1979 0002 84B0     		sub	sp, sp, #16
 1980              		.cfi_def_cfa_offset 24
 1981 0004 00AF     		add	r7, sp, #0
 1982              		.cfi_def_cfa_register 7
 524:modem.c       ****     
 525:modem.c       ****     // Save/print modem model ID number
 526:modem.c       ****     if(modem_info.model_id[0] == '\0'){
 1983              		.loc 1 526 0
 1984 0006 454B     		ldr	r3, .L119
 1985 0008 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1986 000a 002B     		cmp	r3, #0
 1987 000c 13D1     		bne	.L111
 527:modem.c       ****         // AT command #CGMM returns the "device model identification" code with the command echo.
 528:modem.c       ****         if(at_write_command("AT#CGMM\r","OK",DEFAULT_AT_TIMEOUT)){
 1988              		.loc 1 528 0
 1989 000e 4FF4FA62 		mov	r2, #2000
 1990 0012 4349     		ldr	r1, .L119+4
 1991 0014 4348     		ldr	r0, .L119+8
 1992 0016 FFF7FEFF 		bl	at_write_command
 1993 001a 0346     		mov	r3, r0
 1994 001c 002B     		cmp	r3, #0
 1995 001e 0AD0     		beq	.L111
 529:modem.c       ****             // Extract modem model ID number string from the UART
 530:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.model_id);
 1996              		.loc 1 530 0
 1997 0020 414B     		ldr	r3, .L119+12
 1998 0022 424A     		ldr	r2, .L119+16
 1999 0024 4249     		ldr	r1, .L119+20
 2000 0026 4348     		ldr	r0, .L119+24
 2001 0028 FFF7FEFF 		bl	extract_string
 531:modem.c       ****             // Print modem model ID number
 532:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem Model: %s",modem_info.model_id);
 2002              		.loc 1 532 0
 2003 002c 3E4A     		ldr	r2, .L119+12
 2004 002e 4249     		ldr	r1, .L119+28
 2005 0030 0020     		movs	r0, #0
 2006 0032 FFF7FEFF 		bl	printNotif
 2007              	.L111:
 533:modem.c       ****         }
 534:modem.c       ****     }
 535:modem.c       ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 49


 536:modem.c       ****    // Save/print SIM-card ID
 537:modem.c       ****    if(modem_info.sim_id[0] == '\0'){
 2008              		.loc 1 537 0
 2009 0036 394B     		ldr	r3, .L119
 2010 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2011 003a 002B     		cmp	r3, #0
 2012 003c 13D1     		bne	.L112
 538:modem.c       ****         // AT command #CCID is an execution command that reads the SIM number 
 539:modem.c       ****         if(at_write_command("AT#CCID\r", "OK", DEFAULT_AT_TIMEOUT)){
 2013              		.loc 1 539 0
 2014 003e 4FF4FA62 		mov	r2, #2000
 2015 0042 3749     		ldr	r1, .L119+4
 2016 0044 3D48     		ldr	r0, .L119+32
 2017 0046 FFF7FEFF 		bl	at_write_command
 2018 004a 0346     		mov	r3, r0
 2019 004c 002B     		cmp	r3, #0
 2020 004e 0AD0     		beq	.L112
 540:modem.c       ****             // Extract SIM-card ID string from the UART
 541:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.sim_id);
 2021              		.loc 1 541 0
 2022 0050 324B     		ldr	r3, .L119
 2023 0052 364A     		ldr	r2, .L119+16
 2024 0054 3649     		ldr	r1, .L119+20
 2025 0056 3748     		ldr	r0, .L119+24
 2026 0058 FFF7FEFF 		bl	extract_string
 542:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"SIM ID: %s",modem_info.sim_id);
 2027              		.loc 1 542 0
 2028 005c 2F4A     		ldr	r2, .L119
 2029 005e 3849     		ldr	r1, .L119+36
 2030 0060 0020     		movs	r0, #0
 2031 0062 FFF7FEFF 		bl	printNotif
 2032              	.L112:
 543:modem.c       ****         }
 544:modem.c       ****    }
 545:modem.c       **** 
 546:modem.c       ****     // Save/print modem IMEI
 547:modem.c       ****     if(modem_info.imei[0] == '\0'){
 2033              		.loc 1 547 0
 2034 0066 2D4B     		ldr	r3, .L119
 2035 0068 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 2036 006c 002B     		cmp	r3, #0
 2037 006e 13D1     		bne	.L113
 548:modem.c       ****         // AT command #CGSN returns the product serial number, identified as the IMEI of the mobile
 549:modem.c       ****         if(at_write_command("AT+CGSN\r","OK",DEFAULT_AT_TIMEOUT)){
 2038              		.loc 1 549 0
 2039 0070 4FF4FA62 		mov	r2, #2000
 2040 0074 2A49     		ldr	r1, .L119+4
 2041 0076 3348     		ldr	r0, .L119+40
 2042 0078 FFF7FEFF 		bl	at_write_command
 2043 007c 0346     		mov	r3, r0
 2044 007e 002B     		cmp	r3, #0
 2045 0080 0AD0     		beq	.L113
 550:modem.c       ****             // Extract modem IMEI number string from the UART
 551:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.imei);
 2046              		.loc 1 551 0
 2047 0082 314B     		ldr	r3, .L119+44
 2048 0084 294A     		ldr	r2, .L119+16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 50


 2049 0086 2A49     		ldr	r1, .L119+20
 2050 0088 2A48     		ldr	r0, .L119+24
 2051 008a FFF7FEFF 		bl	extract_string
 552:modem.c       ****             // Print modem IMEI number
 553:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"IMEI: %s",modem_info.imei);
 2052              		.loc 1 553 0
 2053 008e 2E4A     		ldr	r2, .L119+44
 2054 0090 2E49     		ldr	r1, .L119+48
 2055 0092 0020     		movs	r0, #0
 2056 0094 FFF7FEFF 		bl	printNotif
 2057              	.L113:
 554:modem.c       ****         } 
 555:modem.c       ****     }
 556:modem.c       ****     
 557:modem.c       ****     // Configure protocol and cellular end point
 558:modem.c       ****     // AT command +CGDCONT defines the PDP context parameter values for a PDP context identified by
 559:modem.c       ****     if(updatable_parameters.sim_type == SIM_TYPE_STANDARD){
 2058              		.loc 1 559 0
 2059 0098 2D4B     		ldr	r3, .L119+52
 2060 009a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2061 009c 83F00103 		eor	r3, r3, #1
 2062 00a0 DBB2     		uxtb	r3, r3
 2063 00a2 002B     		cmp	r3, #0
 2064 00a4 06D0     		beq	.L114
 560:modem.c       ****         at_write_command("AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\r\n", "OK", DEFAULT_AT_TIMEOU
 2065              		.loc 1 560 0
 2066 00a6 4FF4FA62 		mov	r2, #2000
 2067 00aa 1D49     		ldr	r1, .L119+4
 2068 00ac 2948     		ldr	r0, .L119+56
 2069 00ae FFF7FEFF 		bl	at_write_command
 2070 00b2 09E0     		b	.L115
 2071              	.L114:
 561:modem.c       ****     
 562:modem.c       ****     }else if(updatable_parameters.sim_type == SIM_TYPE_SUPER){
 2072              		.loc 1 562 0
 2073 00b4 264B     		ldr	r3, .L119+52
 2074 00b6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2075 00b8 002B     		cmp	r3, #0
 2076 00ba 05D0     		beq	.L115
 563:modem.c       ****         at_write_command("AT+CGDCONT=1,\"IP\",\"super\"\r\n", "OK", DEFAULT_AT_TIMEOUT);
 2077              		.loc 1 563 0
 2078 00bc 4FF4FA62 		mov	r2, #2000
 2079 00c0 1749     		ldr	r1, .L119+4
 2080 00c2 2548     		ldr	r0, .L119+60
 2081 00c4 FFF7FEFF 		bl	at_write_command
 2082              	.L115:
 564:modem.c       ****     }
 565:modem.c       ****     
 566:modem.c       ****     // Check if modem power savings is enabled. If so, disable it so we can send data.
 567:modem.c       ****     // AT command +CFUN? is a read command that reports the current setting of <fun> which is the p
 568:modem.c       ****     if(at_write_command("AT+CFUN?\r", "OK",DEFAULT_AT_TIMEOUT)){
 2083              		.loc 1 568 0
 2084 00c8 4FF4FA62 		mov	r2, #2000
 2085 00cc 1449     		ldr	r1, .L119+4
 2086 00ce 2348     		ldr	r0, .L119+64
 2087 00d0 FFF7FEFF 		bl	at_write_command
 2088 00d4 0346     		mov	r3, r0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 51


 2089 00d6 002B     		cmp	r3, #0
 2090 00d8 1BD0     		beq	.L118
 2091              	.LBB9:
 569:modem.c       ****         char CFUN[10]; // Create a character array of length 10 called CFUN 
 570:modem.c       ****         CFUN[0] = '\0';
 2092              		.loc 1 570 0
 2093 00da 0023     		movs	r3, #0
 2094 00dc 3B71     		strb	r3, [r7, #4]
 571:modem.c       ****         // Extract UART string recieved from the modem
 572:modem.c       ****         extract_string(uart_received_string,": ","\r",CFUN);
 2095              		.loc 1 572 0
 2096 00de 3B1D     		adds	r3, r7, #4
 2097 00e0 124A     		ldr	r2, .L119+16
 2098 00e2 1349     		ldr	r1, .L119+20
 2099 00e4 1348     		ldr	r0, .L119+24
 2100 00e6 FFF7FEFF 		bl	extract_string
 573:modem.c       ****         // Print UART string recieved from the modem
 574:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"CFUN: %s",CFUN);
 2101              		.loc 1 574 0
 2102 00ea 3B1D     		adds	r3, r7, #4
 2103 00ec 1A46     		mov	r2, r3
 2104 00ee 1C49     		ldr	r1, .L119+68
 2105 00f0 0020     		movs	r0, #0
 2106 00f2 FFF7FEFF 		bl	printNotif
 575:modem.c       ****         // Search CRUN for "1", if "1" exists, it will return 1u otherwise it will return NULL
 576:modem.c       ****         // If it returns NULL, then write another command to the modem
 577:modem.c       ****         if(strstr(CFUN,"1") == NULL){
 2107              		.loc 1 577 0
 2108 00f6 3B1D     		adds	r3, r7, #4
 2109 00f8 3121     		movs	r1, #49
 2110 00fa 1846     		mov	r0, r3
 2111 00fc FFF7FEFF 		bl	strchr
 2112 0100 0346     		mov	r3, r0
 2113 0102 002B     		cmp	r3, #0
 2114 0104 05D1     		bne	.L118
 578:modem.c       ****             // AT command +CFUN= is a set command which selects the level of functionality in the m
 579:modem.c       ****             // = 1 means mobile full functionality with power saving disabled 
 580:modem.c       ****             at_write_command("AT+CFUN=1\r", "OK",DEFAULT_AT_TIMEOUT);
 2115              		.loc 1 580 0
 2116 0106 4FF4FA62 		mov	r2, #2000
 2117 010a 0549     		ldr	r1, .L119+4
 2118 010c 1548     		ldr	r0, .L119+72
 2119 010e FFF7FEFF 		bl	at_write_command
 2120              	.L118:
 2121              	.LBE9:
 581:modem.c       ****         }
 582:modem.c       ****     }
 583:modem.c       **** 
 584:modem.c       ****     
 585:modem.c       **** }
 2122              		.loc 1 585 0
 2123 0112 00BF     		nop
 2124 0114 1037     		adds	r7, r7, #16
 2125              		.cfi_def_cfa_offset 8
 2126 0116 BD46     		mov	sp, r7
 2127              		.cfi_def_cfa_register 13
 2128              		@ sp needed
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 52


 2129 0118 80BD     		pop	{r7, pc}
 2130              	.L120:
 2131 011a 00BF     		.align	2
 2132              	.L119:
 2133 011c 00000000 		.word	modem_info
 2134 0120 00000000 		.word	.LC0
 2135 0124 E8040000 		.word	.LC48
 2136 0128 14000000 		.word	modem_info+20
 2137 012c 88020000 		.word	.LC21
 2138 0130 8C020000 		.word	.LC22
 2139 0134 00000000 		.word	uart_received_string
 2140 0138 F4040000 		.word	.LC49
 2141 013c 04050000 		.word	.LC50
 2142 0140 10050000 		.word	.LC51
 2143 0144 1C050000 		.word	.LC52
 2144 0148 28000000 		.word	modem_info+40
 2145 014c 28050000 		.word	.LC53
 2146 0150 00000000 		.word	updatable_parameters
 2147 0154 34050000 		.word	.LC54
 2148 0158 60050000 		.word	.LC55
 2149 015c 7C050000 		.word	.LC56
 2150 0160 88050000 		.word	.LC57
 2151 0164 94050000 		.word	.LC58
 2152              		.cfi_endproc
 2153              	.LFE82:
 2154              		.size	modem_configure_settings, .-modem_configure_settings
 2155              		.section	.rodata
 2156 059f 00       		.align	2
 2157              	.LC59:
 2158 05a0 4D6F6465 		.ascii	"Modem not ready to get time. Not conncted to networ"
 2158      6D206E6F 
 2158      74207265 
 2158      61647920 
 2158      746F2067 
 2159 05d3 6B2E00   		.ascii	"k.\000"
 2160 05d6 0000     		.align	2
 2161              	.LC60:
 2162 05d8 41542B43 		.ascii	"AT+CCLK?\015\000"
 2162      434C4B3F 
 2162      0D00
 2163 05e2 0000     		.align	2
 2164              	.LC61:
 2165 05e4 220D00   		.ascii	"\"\015\000"
 2166 05e7 00       		.align	2
 2167              	.LC62:
 2168 05e8 3A202200 		.ascii	": \"\000"
 2169              		.align	2
 2170              	.LC63:
 2171 05ec 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d-%d\000"
 2171      642F2564 
 2171      2C25643A 
 2171      25643A25 
 2171      642D2564 
 2172 0601 000000   		.align	2
 2173              	.LC64:
 2174 0604 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d+%d\000"
 2174      642F2564 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 53


 2174      2C25643A 
 2174      25643A25 
 2174      642B2564 
 2175 0619 000000   		.align	2
 2176              	.LC65:
 2177 061c 436F756C 		.ascii	"Could not parse modem time.\000"
 2177      64206E6F 
 2177      74207061 
 2177      72736520 
 2177      6D6F6465 
 2178              		.section	.text.modem_get_network_time,"ax",%progbits
 2179              		.align	2
 2180              		.global	modem_get_network_time
 2181              		.thumb
 2182              		.thumb_func
 2183              		.type	modem_get_network_time, %function
 2184              	modem_get_network_time:
 2185              	.LFB83:
 586:modem.c       **** 
 587:modem.c       **** //returns 0 if modem can't get time
 588:modem.c       **** long modem_get_network_time(){
 2186              		.loc 1 588 0
 2187              		.cfi_startproc
 2188              		@ args = 0, pretend = 0, frame = 104
 2189              		@ frame_needed = 1, uses_anonymous_args = 0
 2190 0000 80B5     		push	{r7, lr}
 2191              		.cfi_def_cfa_offset 8
 2192              		.cfi_offset 7, -8
 2193              		.cfi_offset 14, -4
 2194 0002 A0B0     		sub	sp, sp, #128
 2195              		.cfi_def_cfa_offset 136
 2196 0004 06AF     		add	r7, sp, #24
 2197              		.cfi_def_cfa 7, 112
 589:modem.c       ****     
 590:modem.c       ****     //modem reposen format (careful to include the quotes "")
 591:modem.c       ****     //+CCLK: "20/05/01,10:48:33-16" the "-16" is the number of quarter hourts (15 mins) from GMT ti
 592:modem.c       ****     //ex: 14:48 GMT
 593:modem.c       **** 
 594:modem.c       ****     // If modem_state is not "ready", then print error and return 0
 595:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2198              		.loc 1 595 0
 2199 0006 444B     		ldr	r3, .L128
 2200 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2201 000a 042B     		cmp	r3, #4
 2202 000c 05D0     		beq	.L122
 596:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Modem not ready to get time. Not conncted to network.");
 2203              		.loc 1 596 0
 2204 000e 4349     		ldr	r1, .L128+4
 2205 0010 0220     		movs	r0, #2
 2206 0012 FFF7FEFF 		bl	printNotif
 597:modem.c       ****         return 0;   
 2207              		.loc 1 597 0
 2208 0016 0023     		movs	r3, #0
 2209 0018 7AE0     		b	.L123
 2210              	.L122:
 598:modem.c       ****     }
 599:modem.c       ****     long epoch_time = 0; // Create variable of long time and set equal to 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 54


 2211              		.loc 1 599 0
 2212 001a 0023     		movs	r3, #0
 2213 001c 7B66     		str	r3, [r7, #100]
 600:modem.c       ****     
 601:modem.c       ****     // AT command +CCLK? is a read command that returns the current setting of the real-time clock 
 602:modem.c       ****     if(at_write_command("AT+CCLK?\r","OK",DEFAULT_AT_TIMEOUT)){
 2214              		.loc 1 602 0
 2215 001e 4FF4FA62 		mov	r2, #2000
 2216 0022 3F49     		ldr	r1, .L128+8
 2217 0024 3F48     		ldr	r0, .L128+12
 2218 0026 FFF7FEFF 		bl	at_write_command
 2219 002a 0346     		mov	r3, r0
 2220 002c 002B     		cmp	r3, #0
 2221 002e 6ED0     		beq	.L124
 2222              	.LBB10:
 603:modem.c       ****         // need to set this to /0
 604:modem.c       ****         char network_time[30]; // Create a character array of length 30 called network_time 
 605:modem.c       ****         network_time[0] = '\0';
 2223              		.loc 1 605 0
 2224 0030 0023     		movs	r3, #0
 2225 0032 87F84430 		strb	r3, [r7, #68]
 606:modem.c       ****         // Extract UART string recieved from the modem and save to variable network_time
 607:modem.c       ****         extract_string(uart_received_string,": \"","\"\r",network_time);
 2226              		.loc 1 607 0
 2227 0036 07F14403 		add	r3, r7, #68
 2228 003a 3B4A     		ldr	r2, .L128+16
 2229 003c 3B49     		ldr	r1, .L128+20
 2230 003e 3C48     		ldr	r0, .L128+24
 2231 0040 FFF7FEFF 		bl	extract_string
 608:modem.c       ****         
 609:modem.c       ****         ///////////////////  
 610:modem.c       ****         struct tm t; // Creates variable t of struct tm
 611:modem.c       ****         
 612:modem.c       ****         // Creates a bunch of variables of type int and sets them to 0
 613:modem.c       ****         int year, month, day, hour, minute, second, gmt_offset = 0;
 2232              		.loc 1 613 0
 2233 0044 0023     		movs	r3, #0
 2234 0046 BB62     		str	r3, [r7, #40]
 614:modem.c       ****       
 615:modem.c       ****         // Determines the GMT offset 
 616:modem.c       ****         // int sscanf(const char *str, const char *format, ...) reads formatted input from a string
 617:modem.c       ****         // On success, the function returns the number of variables filled. In the case of an input
 618:modem.c       ****         if(sscanf(network_time,"%d/%d/%d,%d:%d:%d-%d",&year,&month,&day,&hour,&minute,&second,&gmt_
 2235              		.loc 1 618 0
 2236 0048 07F13C01 		add	r1, r7, #60
 2237 004c 07F14002 		add	r2, r7, #64
 2238 0050 07F14400 		add	r0, r7, #68
 2239 0054 07F12803 		add	r3, r7, #40
 2240 0058 0493     		str	r3, [sp, #16]
 2241 005a 07F12C03 		add	r3, r7, #44
 2242 005e 0393     		str	r3, [sp, #12]
 2243 0060 07F13003 		add	r3, r7, #48
 2244 0064 0293     		str	r3, [sp, #8]
 2245 0066 07F13403 		add	r3, r7, #52
 2246 006a 0193     		str	r3, [sp, #4]
 2247 006c 07F13803 		add	r3, r7, #56
 2248 0070 0093     		str	r3, [sp]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 55


 2249 0072 0B46     		mov	r3, r1
 2250 0074 2F49     		ldr	r1, .L128+28
 2251 0076 FFF7FEFF 		bl	sscanf
 2252 007a 0346     		mov	r3, r0
 2253 007c 072B     		cmp	r3, #7
 2254 007e 06D1     		bne	.L125
 619:modem.c       ****             gmt_offset = gmt_offset*(900);
 2255              		.loc 1 619 0
 2256 0080 BB6A     		ldr	r3, [r7, #40]
 2257 0082 4FF46172 		mov	r2, #900
 2258 0086 02FB03F3 		mul	r3, r2, r3
 2259 008a BB62     		str	r3, [r7, #40]
 2260 008c 27E0     		b	.L126
 2261              	.L125:
 620:modem.c       ****         }else if(sscanf(network_time,"%d/%d/%d,%d:%d:%d+%d",&year,&month,&day,&hour,&minute,&second
 2262              		.loc 1 620 0
 2263 008e 07F13C01 		add	r1, r7, #60
 2264 0092 07F14002 		add	r2, r7, #64
 2265 0096 07F14400 		add	r0, r7, #68
 2266 009a 07F12803 		add	r3, r7, #40
 2267 009e 0493     		str	r3, [sp, #16]
 2268 00a0 07F12C03 		add	r3, r7, #44
 2269 00a4 0393     		str	r3, [sp, #12]
 2270 00a6 07F13003 		add	r3, r7, #48
 2271 00aa 0293     		str	r3, [sp, #8]
 2272 00ac 07F13403 		add	r3, r7, #52
 2273 00b0 0193     		str	r3, [sp, #4]
 2274 00b2 07F13803 		add	r3, r7, #56
 2275 00b6 0093     		str	r3, [sp]
 2276 00b8 0B46     		mov	r3, r1
 2277 00ba 1F49     		ldr	r1, .L128+32
 2278 00bc FFF7FEFF 		bl	sscanf
 2279 00c0 0346     		mov	r3, r0
 2280 00c2 072B     		cmp	r3, #7
 2281 00c4 05D1     		bne	.L127
 621:modem.c       ****             gmt_offset = gmt_offset*(-900);
 2282              		.loc 1 621 0
 2283 00c6 BB6A     		ldr	r3, [r7, #40]
 2284 00c8 1C4A     		ldr	r2, .L128+36
 2285 00ca 02FB03F3 		mul	r3, r2, r3
 2286 00ce BB62     		str	r3, [r7, #40]
 2287 00d0 05E0     		b	.L126
 2288              	.L127:
 622:modem.c       ****         }else{
 623:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Could not parse modem time.");
 2289              		.loc 1 623 0
 2290 00d2 1B49     		ldr	r1, .L128+40
 2291 00d4 0220     		movs	r0, #2
 2292 00d6 FFF7FEFF 		bl	printNotif
 624:modem.c       ****             return 0;  // Return 0 if cannot get time 
 2293              		.loc 1 624 0
 2294 00da 0023     		movs	r3, #0
 2295 00dc 18E0     		b	.L123
 2296              	.L126:
 625:modem.c       ****         }
 626:modem.c       ****         
 627:modem.c       ****         // Sets each variable to the correct time 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 56


 628:modem.c       ****         t.tm_sec = second;
 2297              		.loc 1 628 0
 2298 00de FB6A     		ldr	r3, [r7, #44]
 2299 00e0 7B60     		str	r3, [r7, #4]
 629:modem.c       ****         t.tm_min = minute;
 2300              		.loc 1 629 0
 2301 00e2 3B6B     		ldr	r3, [r7, #48]
 2302 00e4 BB60     		str	r3, [r7, #8]
 630:modem.c       ****         t.tm_hour = hour;
 2303              		.loc 1 630 0
 2304 00e6 7B6B     		ldr	r3, [r7, #52]
 2305 00e8 FB60     		str	r3, [r7, #12]
 631:modem.c       ****         t.tm_year = year + 100;    // Year since 1900
 2306              		.loc 1 631 0
 2307 00ea 3B6C     		ldr	r3, [r7, #64]
 2308 00ec 6433     		adds	r3, r3, #100
 2309 00ee BB61     		str	r3, [r7, #24]
 632:modem.c       ****         t.tm_mon = month-1;        // Month, where 0 = jan
 2310              		.loc 1 632 0
 2311 00f0 FB6B     		ldr	r3, [r7, #60]
 2312 00f2 013B     		subs	r3, r3, #1
 2313 00f4 7B61     		str	r3, [r7, #20]
 633:modem.c       ****         t.tm_mday = day;           // Day of the month
 2314              		.loc 1 633 0
 2315 00f6 BB6B     		ldr	r3, [r7, #56]
 2316 00f8 3B61     		str	r3, [r7, #16]
 634:modem.c       ****         t.tm_isdst = 0;            // Is Daylight Savings on? 1 = yes, 0 = no, -1 = unknown
 2317              		.loc 1 634 0
 2318 00fa 0023     		movs	r3, #0
 2319 00fc 7B62     		str	r3, [r7, #36]
 635:modem.c       ****     
 636:modem.c       ****         // Set variable epoch-time to be equal to the local time plus the GMT offset
 637:modem.c       ****         // the mktime function converts a broken-down local time (pointed to by timeptr) and return
 638:modem.c       ****         epoch_time = mktime(&t) + gmt_offset;
 2320              		.loc 1 638 0
 2321 00fe 3B1D     		adds	r3, r7, #4
 2322 0100 1846     		mov	r0, r3
 2323 0102 FFF7FEFF 		bl	mktime
 2324 0106 0246     		mov	r2, r0
 2325 0108 BB6A     		ldr	r3, [r7, #40]
 2326 010a 1344     		add	r3, r3, r2
 2327 010c 7B66     		str	r3, [r7, #100]
 2328              	.L124:
 2329              	.LBE10:
 639:modem.c       ****     }
 640:modem.c       ****     
 641:modem.c       ****     return epoch_time;
 2330              		.loc 1 641 0
 2331 010e 7B6E     		ldr	r3, [r7, #100]
 2332              	.L123:
 642:modem.c       **** }
 2333              		.loc 1 642 0
 2334 0110 1846     		mov	r0, r3
 2335 0112 6837     		adds	r7, r7, #104
 2336              		.cfi_def_cfa_offset 8
 2337 0114 BD46     		mov	sp, r7
 2338              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 57


 2339              		@ sp needed
 2340 0116 80BD     		pop	{r7, pc}
 2341              	.L129:
 2342              		.align	2
 2343              	.L128:
 2344 0118 00000000 		.word	modem_state
 2345 011c A0050000 		.word	.LC59
 2346 0120 00000000 		.word	.LC0
 2347 0124 D8050000 		.word	.LC60
 2348 0128 E4050000 		.word	.LC61
 2349 012c E8050000 		.word	.LC62
 2350 0130 00000000 		.word	uart_received_string
 2351 0134 EC050000 		.word	.LC63
 2352 0138 04060000 		.word	.LC64
 2353 013c 7CFCFFFF 		.word	-900
 2354 0140 1C060000 		.word	.LC65
 2355              		.cfi_endproc
 2356              	.LFE83:
 2357              		.size	modem_get_network_time, .-modem_get_network_time
 2358              		.section	.text.modem_get_state,"ax",%progbits
 2359              		.align	2
 2360              		.global	modem_get_state
 2361              		.thumb
 2362              		.thumb_func
 2363              		.type	modem_get_state, %function
 2364              	modem_get_state:
 2365              	.LFB84:
 643:modem.c       **** 
 644:modem.c       **** // Get the modem state
 645:modem.c       **** uint8 modem_get_state(){
 2366              		.loc 1 645 0
 2367              		.cfi_startproc
 2368              		@ args = 0, pretend = 0, frame = 0
 2369              		@ frame_needed = 1, uses_anonymous_args = 0
 2370              		@ link register save eliminated.
 2371 0000 80B4     		push	{r7}
 2372              		.cfi_def_cfa_offset 4
 2373              		.cfi_offset 7, -4
 2374 0002 00AF     		add	r7, sp, #0
 2375              		.cfi_def_cfa_register 7
 646:modem.c       ****     return modem_state;
 2376              		.loc 1 646 0
 2377 0004 024B     		ldr	r3, .L132
 2378 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 647:modem.c       **** }
 2379              		.loc 1 647 0
 2380 0008 1846     		mov	r0, r3
 2381 000a BD46     		mov	sp, r7
 2382              		.cfi_def_cfa_register 13
 2383              		@ sp needed
 2384 000c 80BC     		pop	{r7}
 2385              		.cfi_restore 7
 2386              		.cfi_def_cfa_offset 0
 2387 000e 7047     		bx	lr
 2388              	.L133:
 2389              		.align	2
 2390              	.L132:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 58


 2391 0010 00000000 		.word	modem_state
 2392              		.cfi_endproc
 2393              	.LFE84:
 2394              		.size	modem_get_state, .-modem_get_state
 2395              		.section	.text.modem_sleep,"ax",%progbits
 2396              		.align	2
 2397              		.global	modem_sleep
 2398              		.thumb
 2399              		.thumb_func
 2400              		.type	modem_sleep, %function
 2401              	modem_sleep:
 2402              	.LFB85:
 648:modem.c       **** 
 649:modem.c       **** // Set modem to sleep
 650:modem.c       **** void modem_sleep(){
 2403              		.loc 1 650 0
 2404              		.cfi_startproc
 2405              		@ args = 0, pretend = 0, frame = 0
 2406              		@ frame_needed = 1, uses_anonymous_args = 0
 2407 0000 80B5     		push	{r7, lr}
 2408              		.cfi_def_cfa_offset 8
 2409              		.cfi_offset 7, -8
 2410              		.cfi_offset 14, -4
 2411 0002 00AF     		add	r7, sp, #0
 2412              		.cfi_def_cfa_register 7
 651:modem.c       ****     // If the modem_state is not "off" then put it to sleep
 652:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2413              		.loc 1 652 0
 2414 0004 FFF7FEFF 		bl	modem_get_state
 2415 0008 0346     		mov	r3, r0
 2416 000a 002B     		cmp	r3, #0
 2417 000c 03D0     		beq	.L136
 653:modem.c       **** 
 654:modem.c       ****         Telit_ControlReg_Sleep(); // Prepares the modem for entering the low power mode.
 2418              		.loc 1 654 0
 2419 000e FFF7FEFF 		bl	Telit_ControlReg_Sleep
 655:modem.c       ****         UART_Telit_Sleep(); // Saves the current component state, calls the UART_Telit_Stop() funct
 2420              		.loc 1 655 0
 2421 0012 FFF7FEFF 		bl	UART_Telit_Sleep
 2422              	.L136:
 656:modem.c       ****         
 657:modem.c       ****         // Set interrupt on RX pin to wakeup chip from sleep if UART comm starts
 658:modem.c       ****        // Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_FALLING);
 659:modem.c       ****      }
 660:modem.c       **** }
 2423              		.loc 1 660 0
 2424 0016 00BF     		nop
 2425 0018 80BD     		pop	{r7, pc}
 2426              		.cfi_endproc
 2427              	.LFE85:
 2428              		.size	modem_sleep, .-modem_sleep
 2429 001a 00BF     		.section	.text.modem_wakeup,"ax",%progbits
 2430              		.align	2
 2431              		.global	modem_wakeup
 2432              		.thumb
 2433              		.thumb_func
 2434              		.type	modem_wakeup, %function
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 59


 2435              	modem_wakeup:
 2436              	.LFB86:
 661:modem.c       **** 
 662:modem.c       **** // Wakeup the modem
 663:modem.c       **** void modem_wakeup(){
 2437              		.loc 1 663 0
 2438              		.cfi_startproc
 2439              		@ args = 0, pretend = 0, frame = 0
 2440              		@ frame_needed = 1, uses_anonymous_args = 0
 2441 0000 80B5     		push	{r7, lr}
 2442              		.cfi_def_cfa_offset 8
 2443              		.cfi_offset 7, -8
 2444              		.cfi_offset 14, -4
 2445 0002 00AF     		add	r7, sp, #0
 2446              		.cfi_def_cfa_register 7
 664:modem.c       ****     // If modem state is not off then wake it up
 665:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2447              		.loc 1 665 0
 2448 0004 FFF7FEFF 		bl	modem_get_state
 2449 0008 0346     		mov	r3, r0
 2450 000a 002B     		cmp	r3, #0
 2451 000c 0BD0     		beq	.L139
 666:modem.c       ****         Telit_ControlReg_Wakeup(); // Restores the modem after waking up from the low power mode.
 2452              		.loc 1 666 0
 2453 000e FFF7FEFF 		bl	Telit_ControlReg_Wakeup
 667:modem.c       ****         // Calls the UART_Telit_RestoreConfig() function to restore the configuration.
 668:modem.c       ****         // If the modem was enabled before the UART_Telit_Sleep() function was called, the UART_Tel
 669:modem.c       ****         UART_Telit_Wakeup();
 2454              		.loc 1 669 0
 2455 0012 FFF7FEFF 		bl	UART_Telit_Wakeup
 670:modem.c       ****         // Remove the need for this pin itterupt
 671:modem.c       ****         //Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 672:modem.c       ****         
 673:modem.c       ****         // If woken up from pin, go ahead and delay for 100ms to allow modem UART to deliver the me
 674:modem.c       ****         if(modem_get_state() == MODEM_STATE_WAITING_FOR_IP){
 2456              		.loc 1 674 0
 2457 0016 FFF7FEFF 		bl	modem_get_state
 2458 001a 0346     		mov	r3, r0
 2459 001c 032B     		cmp	r3, #3
 2460 001e 02D1     		bne	.L139
 675:modem.c       ****             CyDelay(100u);
 2461              		.loc 1 675 0
 2462 0020 6420     		movs	r0, #100
 2463 0022 FFF7FEFF 		bl	CyDelay
 2464              	.L139:
 676:modem.c       ****         }
 677:modem.c       ****      }
 678:modem.c       **** }
 2465              		.loc 1 678 0
 2466 0026 00BF     		nop
 2467 0028 80BD     		pop	{r7, pc}
 2468              		.cfi_endproc
 2469              	.LFE86:
 2470              		.size	modem_wakeup, .-modem_wakeup
 2471 002a 00BF     		.section	.rodata
 2472              		.align	2
 2473              	.LC66:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 60


 2474 0638 41542347 		.ascii	"AT#GPIO=5,1,1,0\015\000"
 2474      50494F3D 
 2474      352C312C 
 2474      312C300D 
 2474      00
 2475 0649 000000   		.align	2
 2476              	.LC67:
 2477 064c 41542453 		.ascii	"AT$SUPLSEC=1\015\000"
 2477      55504C53 
 2477      45433D31 
 2477      0D00
 2478 065a 0000     		.align	2
 2479              	.LC68:
 2480 065c 41542453 		.ascii	"AT$SUPLV=2\015\000"
 2480      55504C56 
 2480      3D320D00 
 2481              		.align	2
 2482              	.LC69:
 2483 0668 41542441 		.ascii	"AT$AGPSEN=1\015\000"
 2483      47505345 
 2483      4E3D310D 
 2483      00
 2484 0675 000000   		.align	2
 2485              	.LC70:
 2486 0678 41542453 		.ascii	"AT$SLP=1,\"supl.google.com:7275\"\015\000"
 2486      4C503D31 
 2486      2C227375 
 2486      706C2E67 
 2486      6F6F676C 
 2487 0699 000000   		.align	2
 2488              	.LC71:
 2489 069c 41542353 		.ascii	"AT#SGACT=1,0\015\012\000"
 2489      47414354 
 2489      3D312C30 
 2489      0D0A00
 2490 06ab 00       		.align	2
 2491              	.LC72:
 2492 06ac 4154244C 		.ascii	"AT$LCSLK=1,1\015\000"
 2492      43534C4B 
 2492      3D312C31 
 2492      0D00
 2493 06ba 0000     		.align	2
 2494              	.LC73:
 2495 06bc 41542447 		.ascii	"AT$GPSSLSR=1,1,,,,,2\015\000"
 2495      5053534C 
 2495      53523D31 
 2495      2C312C2C 
 2495      2C2C2C32 
 2496 06d2 0000     		.align	2
 2497              	.LC74:
 2498 06d4 4E00     		.ascii	"N\000"
 2499 06d6 0000     		.align	2
 2500              	.LC75:
 2501 06d8 41542447 		.ascii	"AT$GPSACP\015\000"
 2501      50534143 
 2501      500D00
 2502 06e3 00       		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 61


 2503              	.LC76:
 2504 06e4 24475053 		.ascii	"$GPSACP: \000"
 2504      4143503A 
 2504      2000
 2505 06ee 0000     		.align	2
 2506              	.LC77:
 2507 06f0 24475053 		.ascii	"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s\000"
 2507      4143503A 
 2507      20252A66 
 2507      2C25664E 
 2507      2C256657 
 2508              		.global	__aeabi_fdiv
 2509              		.global	__aeabi_f2d
 2510              		.global	__aeabi_ddiv
 2511              		.global	__aeabi_dadd
 2512              		.global	__aeabi_d2f
 2513              		.align	2
 2514              	.LC78:
 2515 0710 41542347 		.ascii	"AT#GPIO=5,0,1,0\015\000"
 2515      50494F3D 
 2515      352C302C 
 2515      312C300D 
 2515      00
 2516 0721 000000   		.align	2
 2517              	.LC79:
 2518 0724 41542447 		.ascii	"AT$GPSR=0\015\000"
 2518      5053523D 
 2518      300D00
 2519 072f 00       		.align	2
 2520              	.LC80:
 2521 0730 54696D65 		.ascii	"Time to lock GPS: %d\000"
 2521      20746F20 
 2521      6C6F636B 
 2521      20475053 
 2521      3A202564 
 2522              		.section	.text.modem_get_gps_coordinates,"ax",%progbits
 2523              		.align	2
 2524              		.global	modem_get_gps_coordinates
 2525              		.thumb
 2526              		.thumb_func
 2527              		.type	modem_get_gps_coordinates, %function
 2528              	modem_get_gps_coordinates:
 2529              	.LFB87:
 679:modem.c       **** 
 680:modem.c       ****     
 681:modem.c       **** // Returns lat,lom,alt data from Assited GPS (AGPS) system
 682:modem.c       **** gps_t modem_get_gps_coordinates(){
 2530              		.loc 1 682 0
 2531              		.cfi_startproc
 2532              		@ args = 0, pretend = 0, frame = 56
 2533              		@ frame_needed = 1, uses_anonymous_args = 0
 2534 0000 B0B5     		push	{r4, r5, r7, lr}
 2535              		.cfi_def_cfa_offset 16
 2536              		.cfi_offset 4, -16
 2537              		.cfi_offset 5, -12
 2538              		.cfi_offset 7, -8
 2539              		.cfi_offset 14, -4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 62


 2540 0002 90B0     		sub	sp, sp, #64
 2541              		.cfi_def_cfa_offset 80
 2542 0004 02AF     		add	r7, sp, #8
 2543              		.cfi_def_cfa 7, 72
 2544 0006 7860     		str	r0, [r7, #4]
 683:modem.c       ****     gps_t gps;
 684:modem.c       ****     gps.altitude = 0;
 2545              		.loc 1 684 0
 2546 0008 4FF00003 		mov	r3, #0
 2547 000c FB61     		str	r3, [r7, #28]	@ float
 685:modem.c       ****     gps.longitude = 0;
 2548              		.loc 1 685 0
 2549 000e 4FF00003 		mov	r3, #0
 2550 0012 BB61     		str	r3, [r7, #24]	@ float
 686:modem.c       ****     gps.latitude = 0;
 2551              		.loc 1 686 0
 2552 0014 4FF00003 		mov	r3, #0
 2553 0018 7B61     		str	r3, [r7, #20]	@ float
 687:modem.c       ****     gps.time_to_lock =0;
 2554              		.loc 1 687 0
 2555 001a 0023     		movs	r3, #0
 2556 001c 3B84     		strh	r3, [r7, #32]	@ movhi
 688:modem.c       ****     gps.valid = 0;
 2557              		.loc 1 688 0
 2558 001e 0023     		movs	r3, #0
 2559 0020 87F82230 		strb	r3, [r7, #34]
 689:modem.c       ****     
 690:modem.c       ****     //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 691:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2560              		.loc 1 691 0
 2561 0024 7F4B     		ldr	r3, .L150
 2562 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2563 0028 042B     		cmp	r3, #4
 2564 002a 07D0     		beq	.L141
 692:modem.c       ****         return gps;//where valid = 0
 2565              		.loc 1 692 0
 2566 002c 7B68     		ldr	r3, [r7, #4]
 2567 002e 1C46     		mov	r4, r3
 2568 0030 07F11403 		add	r3, r7, #20
 2569 0034 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2570 0036 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2571 003a EFE0     		b	.L140
 2572              	.L141:
 693:modem.c       ****     }
 694:modem.c       ****     
 695:modem.c       ****     long lock_time = getTimeStamp();
 2573              		.loc 1 695 0
 2574 003c FFF7FEFF 		bl	getTimeStamp
 2575 0040 3863     		str	r0, [r7, #48]
 696:modem.c       ****     
 697:modem.c       ****     // Enable this for the LTER module
 698:modem.c       ****     // Enable GPS Low-Dropout Regulator
 699:modem.c       ****     at_write_command("AT#GPIO=5,1,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2576              		.loc 1 699 0
 2577 0042 4FF4FA62 		mov	r2, #2000
 2578 0046 7849     		ldr	r1, .L150+4
 2579 0048 7848     		ldr	r0, .L150+8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 63


 2580 004a FFF7FEFF 		bl	at_write_command
 700:modem.c       ****     
 701:modem.c       ****     // Configure SUPL connection params
 702:modem.c       ****     at_write_command("AT$SUPLSEC=1\r","OK",DEFAULT_AT_TIMEOUT);
 2581              		.loc 1 702 0
 2582 004e 4FF4FA62 		mov	r2, #2000
 2583 0052 7549     		ldr	r1, .L150+4
 2584 0054 7648     		ldr	r0, .L150+12
 2585 0056 FFF7FEFF 		bl	at_write_command
 703:modem.c       ****     
 704:modem.c       ****     // Use SUPL2.0
 705:modem.c       ****     at_write_command("AT$SUPLV=2\r","OK",DEFAULT_AT_TIMEOUT);
 2586              		.loc 1 705 0
 2587 005a 4FF4FA62 		mov	r2, #2000
 2588 005e 7249     		ldr	r1, .L150+4
 2589 0060 7448     		ldr	r0, .L150+16
 2590 0062 FFF7FEFF 		bl	at_write_command
 706:modem.c       ****     
 707:modem.c       ****     // Enable AGPS service
 708:modem.c       ****     at_write_command("AT$AGPSEN=1\r","OK",DEFAULT_AT_TIMEOUT);
 2591              		.loc 1 708 0
 2592 0066 4FF4FA62 		mov	r2, #2000
 2593 006a 6F49     		ldr	r1, .L150+4
 2594 006c 7248     		ldr	r0, .L150+20
 2595 006e FFF7FEFF 		bl	at_write_command
 709:modem.c       ****     
 710:modem.c       ****     // Chose SUPL server, use google public service
 711:modem.c       ****     at_write_command("AT$SLP=1,\"supl.google.com:7275\"\r","OK",DEFAULT_AT_TIMEOUT);
 2596              		.loc 1 711 0
 2597 0072 4FF4FA62 		mov	r2, #2000
 2598 0076 6C49     		ldr	r1, .L150+4
 2599 0078 7048     		ldr	r0, .L150+24
 2600 007a FFF7FEFF 		bl	at_write_command
 712:modem.c       ****     
 713:modem.c       ****     //pdp context has to be locked to carrier for this to work
 714:modem.c       ****     
 715:modem.c       ****     // Unlock context since it needs to be used by modem
 716:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 2601              		.loc 1 716 0
 2602 007e 4FF4FA62 		mov	r2, #2000
 2603 0082 6949     		ldr	r1, .L150+4
 2604 0084 6E48     		ldr	r0, .L150+28
 2605 0086 FFF7FEFF 		bl	at_write_command
 717:modem.c       ****     
 718:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",DEFAULT_AT_TIMEOUT);//ATT
 2606              		.loc 1 718 0
 2607 008a 4FF4FA62 		mov	r2, #2000
 2608 008e 6649     		ldr	r1, .L150+4
 2609 0090 6C48     		ldr	r0, .L150+32
 2610 0092 FFF7FEFF 		bl	at_write_command
 719:modem.c       ****     //at_write_command("AT$LCSLK=1,3\r","OK",DEFAULT_AT_TIMEOUT);//Verizon
 720:modem.c       ****     
 721:modem.c       ****     // Relock the context
 722:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 2611              		.loc 1 722 0
 2612 0096 42F21072 		movw	r2, #10000
 2613 009a 6349     		ldr	r1, .L150+4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 64


 2614 009c 6A48     		ldr	r0, .L150+36
 2615 009e FFF7FEFF 		bl	at_write_command
 723:modem.c       ****     
 724:modem.c       ****     //start AGPS service
 725:modem.c       ****     at_write_command("AT$GPSSLSR=1,1,,,,,2\r","OK",DEFAULT_AT_TIMEOUT); 
 2616              		.loc 1 725 0
 2617 00a2 4FF4FA62 		mov	r2, #2000
 2618 00a6 6049     		ldr	r1, .L150+4
 2619 00a8 6848     		ldr	r0, .L150+40
 2620 00aa FFF7FEFF 		bl	at_write_command
 726:modem.c       ****     
 727:modem.c       ****     
 728:modem.c       ****     // Start the AGPS service
 729:modem.c       ****     // Will keep receiving a buynch of commas without numbers, until GPS locks
 730:modem.c       ****     // Good lock will return a string with "N" and "W" coordinates
 731:modem.c       ****     
 732:modem.c       ****     
 733:modem.c       ****  
 734:modem.c       ****     uint8 gps_status = 0;
 2621              		.loc 1 734 0
 2622 00ae 0023     		movs	r3, #0
 2623 00b0 87F82F30 		strb	r3, [r7, #47]
 2624              	.LBB11:
 735:modem.c       ****     for(uint16 i=0;i<200;i++){
 2625              		.loc 1 735 0
 2626 00b4 0023     		movs	r3, #0
 2627 00b6 FB86     		strh	r3, [r7, #54]	@ movhi
 2628 00b8 13E0     		b	.L143
 2629              	.L146:
 736:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2630              		.loc 1 736 0
 2631 00ba 4FF4FA62 		mov	r2, #2000
 2632 00be 6449     		ldr	r1, .L150+44
 2633 00c0 6448     		ldr	r0, .L150+48
 2634 00c2 FFF7FEFF 		bl	at_write_command
 2635 00c6 0346     		mov	r3, r0
 2636 00c8 87F82F30 		strb	r3, [r7, #47]
 737:modem.c       ****         if(gps_status){
 2637              		.loc 1 737 0
 2638 00cc 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2639 00d0 002B     		cmp	r3, #0
 2640 00d2 0AD1     		bne	.L149
 738:modem.c       ****             break;   
 739:modem.c       ****         }
 740:modem.c       ****         CyDelay(1000u);// Wait for a second -- BLOCKING. Could be more elegant to incorporate this 
 2641              		.loc 1 740 0 discriminator 2
 2642 00d4 4FF47A70 		mov	r0, #1000
 2643 00d8 FFF7FEFF 		bl	CyDelay
 735:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2644              		.loc 1 735 0 discriminator 2
 2645 00dc FB8E     		ldrh	r3, [r7, #54]
 2646 00de 0133     		adds	r3, r3, #1
 2647 00e0 FB86     		strh	r3, [r7, #54]	@ movhi
 2648              	.L143:
 735:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2649              		.loc 1 735 0 is_stmt 0 discriminator 1
 2650 00e2 FB8E     		ldrh	r3, [r7, #54]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 65


 2651 00e4 C72B     		cmp	r3, #199
 2652 00e6 E8D9     		bls	.L146
 2653 00e8 00E0     		b	.L145
 2654              	.L149:
 738:modem.c       ****             break;   
 2655              		.loc 1 738 0 is_stmt 1
 2656 00ea 00BF     		nop
 2657              	.L145:
 2658              	.LBE11:
 741:modem.c       ****     }
 742:modem.c       ****     
 743:modem.c       ****     //parse data here
 744:modem.c       ****     
 745:modem.c       ****     //example $GPSACP: 210926.000,4217.8003N,08341.3158W,2.3,258.2,3,17.8,4.8,2.6,220520,05,00
 746:modem.c       ****     float lat;
 747:modem.c       ****     float lon;
 748:modem.c       ****     float alt;
 749:modem.c       ****     
 750:modem.c       ****     // Look for $GPSACP:  in uart_received_string and save to sl
 751:modem.c       ****     // char *strstr(const char *haystack, const char *needle) function finds the first occurrence o
 752:modem.c       ****     char *s1 = strstr(uart_received_string,"$GPSACP: ");
 2659              		.loc 1 752 0
 2660 00ec 5A49     		ldr	r1, .L150+52
 2661 00ee 5B48     		ldr	r0, .L150+56
 2662 00f0 FFF7FEFF 		bl	strstr
 2663 00f4 B862     		str	r0, [r7, #40]
 753:modem.c       ****     // Look in sl for lat, long, alt and save in match 
 754:modem.c       ****     // int sscanf(const char *str, const char *format, ...) reads formatted input from a string.
 755:modem.c       ****     int match = sscanf(s1,"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s",&lat,&lon,&alt);
 2664              		.loc 1 755 0
 2665 00f6 07F10C01 		add	r1, r7, #12
 2666 00fa 07F11002 		add	r2, r7, #16
 2667 00fe 07F10803 		add	r3, r7, #8
 2668 0102 0093     		str	r3, [sp]
 2669 0104 0B46     		mov	r3, r1
 2670 0106 5649     		ldr	r1, .L150+60
 2671 0108 B86A     		ldr	r0, [r7, #40]
 2672 010a FFF7FEFF 		bl	sscanf
 2673 010e 7862     		str	r0, [r7, #36]
 756:modem.c       ****     if(match >= 3){
 2674              		.loc 1 756 0
 2675 0110 7B6A     		ldr	r3, [r7, #36]
 2676 0112 022B     		cmp	r3, #2
 2677 0114 60DD     		ble	.L147
 757:modem.c       ****         // Calculate lat and lon
 758:modem.c       ****         // floorf(x) calculates the largest integer that is less than or equal to x. 
 759:modem.c       ****         // fmod(double x, double y) returns the remainder of x divided by y.
 760:modem.c       ****         lat = floorf(lat/100) + fmod(lat,100)/60;
 2678              		.loc 1 760 0
 2679 0116 3B69     		ldr	r3, [r7, #16]	@ float
 2680 0118 5249     		ldr	r1, .L150+64
 2681 011a 1846     		mov	r0, r3
 2682 011c FFF7FEFF 		bl	__aeabi_fdiv
 2683 0120 0346     		mov	r3, r0
 2684 0122 1846     		mov	r0, r3
 2685 0124 FFF7FEFF 		bl	floorf
 2686 0128 0346     		mov	r3, r0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 66


 2687 012a 1846     		mov	r0, r3
 2688 012c FFF7FEFF 		bl	__aeabi_f2d
 2689 0130 0446     		mov	r4, r0
 2690 0132 0D46     		mov	r5, r1
 2691 0134 3B69     		ldr	r3, [r7, #16]	@ float
 2692 0136 1846     		mov	r0, r3
 2693 0138 FFF7FEFF 		bl	__aeabi_f2d
 2694 013c 4FF00002 		mov	r2, #0
 2695 0140 494B     		ldr	r3, .L150+68
 2696 0142 FFF7FEFF 		bl	fmod
 2697 0146 4FF00002 		mov	r2, #0
 2698 014a 484B     		ldr	r3, .L150+72
 2699 014c FFF7FEFF 		bl	__aeabi_ddiv
 2700 0150 0246     		mov	r2, r0
 2701 0152 0B46     		mov	r3, r1
 2702 0154 2046     		mov	r0, r4
 2703 0156 2946     		mov	r1, r5
 2704 0158 FFF7FEFF 		bl	__aeabi_dadd
 2705 015c 0346     		mov	r3, r0
 2706 015e 0C46     		mov	r4, r1
 2707 0160 1846     		mov	r0, r3
 2708 0162 2146     		mov	r1, r4
 2709 0164 FFF7FEFF 		bl	__aeabi_d2f
 2710 0168 0346     		mov	r3, r0
 2711 016a 3B61     		str	r3, [r7, #16]	@ float
 761:modem.c       ****         lon = -(floorf(lon/100) + fmod(lon,100)/60);
 2712              		.loc 1 761 0
 2713 016c FB68     		ldr	r3, [r7, #12]	@ float
 2714 016e 3D49     		ldr	r1, .L150+64
 2715 0170 1846     		mov	r0, r3
 2716 0172 FFF7FEFF 		bl	__aeabi_fdiv
 2717 0176 0346     		mov	r3, r0
 2718 0178 1846     		mov	r0, r3
 2719 017a FFF7FEFF 		bl	floorf
 2720 017e 0346     		mov	r3, r0
 2721 0180 1846     		mov	r0, r3
 2722 0182 FFF7FEFF 		bl	__aeabi_f2d
 2723 0186 0446     		mov	r4, r0
 2724 0188 0D46     		mov	r5, r1
 2725 018a FB68     		ldr	r3, [r7, #12]	@ float
 2726 018c 1846     		mov	r0, r3
 2727 018e FFF7FEFF 		bl	__aeabi_f2d
 2728 0192 4FF00002 		mov	r2, #0
 2729 0196 344B     		ldr	r3, .L150+68
 2730 0198 FFF7FEFF 		bl	fmod
 2731 019c 4FF00002 		mov	r2, #0
 2732 01a0 324B     		ldr	r3, .L150+72
 2733 01a2 FFF7FEFF 		bl	__aeabi_ddiv
 2734 01a6 0246     		mov	r2, r0
 2735 01a8 0B46     		mov	r3, r1
 2736 01aa 2046     		mov	r0, r4
 2737 01ac 2946     		mov	r1, r5
 2738 01ae FFF7FEFF 		bl	__aeabi_dadd
 2739 01b2 0346     		mov	r3, r0
 2740 01b4 0C46     		mov	r4, r1
 2741 01b6 1846     		mov	r0, r3
 2742 01b8 2146     		mov	r1, r4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 67


 2743 01ba FFF7FEFF 		bl	__aeabi_d2f
 2744 01be 0346     		mov	r3, r0
 2745 01c0 83F00043 		eor	r3, r3, #-2147483648
 2746 01c4 FB60     		str	r3, [r7, #12]	@ float
 762:modem.c       ****         gps.altitude = alt; // Save alt, lat, and lon to the variable gps.
 2747              		.loc 1 762 0
 2748 01c6 BB68     		ldr	r3, [r7, #8]	@ float
 2749 01c8 FB61     		str	r3, [r7, #28]	@ float
 763:modem.c       ****         gps.latitude = lat;
 2750              		.loc 1 763 0
 2751 01ca 3B69     		ldr	r3, [r7, #16]	@ float
 2752 01cc 7B61     		str	r3, [r7, #20]	@ float
 764:modem.c       ****         gps.longitude = lon;
 2753              		.loc 1 764 0
 2754 01ce FB68     		ldr	r3, [r7, #12]	@ float
 2755 01d0 BB61     		str	r3, [r7, #24]	@ float
 765:modem.c       ****         gps.valid = 1;
 2756              		.loc 1 765 0
 2757 01d2 0123     		movs	r3, #1
 2758 01d4 87F82230 		strb	r3, [r7, #34]
 2759              	.L147:
 766:modem.c       ****     }
 767:modem.c       ****     
 768:modem.c       ****     // Disable LDO, just in case
 769:modem.c       ****     at_write_command("AT#GPIO=5,0,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2760              		.loc 1 769 0
 2761 01d8 4FF4FA62 		mov	r2, #2000
 2762 01dc 1249     		ldr	r1, .L150+4
 2763 01de 2448     		ldr	r0, .L150+76
 2764 01e0 FFF7FEFF 		bl	at_write_command
 770:modem.c       ****     
 771:modem.c       ****     // Flush modem's GPS data, just in case
 772:modem.c       ****     at_write_command("AT$GPSR=0\r","OK",DEFAULT_AT_TIMEOUT);
 2765              		.loc 1 772 0
 2766 01e4 4FF4FA62 		mov	r2, #2000
 2767 01e8 0F49     		ldr	r1, .L150+4
 2768 01ea 2248     		ldr	r0, .L150+80
 2769 01ec FFF7FEFF 		bl	at_write_command
 773:modem.c       ****     
 774:modem.c       ****     
 775:modem.c       ****     
 776:modem.c       ****     
 777:modem.c       ****     
 778:modem.c       ****     /* Relevant to 3g modem, can ignore
 779:modem.c       ****     
 780:modem.c       ****     //Setthe GPS Quality of Servicep arameters. Inorder,theyare<horiz_accuracy(inmeters)>,<vertical
 781:modem.c       ****     //AT$GPSQOS=50,50,100,0
 782:modem.c       ****     at_write_command("AT$GPSQOS=50,50,100,0\r","OK",DEFAULT_AT_TIMEOUT);
 783:modem.c       ****     
 784:modem.c       ****     //SettheSUPLLocationPlatform(SLP)addressoftheserverthatwillprovidetheA-GPS data:
 785:modem.c       ****     at_write_command("AT$LCSSLP=1,\"supl.google.com\"\r","OK",DEFAULT_AT_TIMEOUT);
 786:modem.c       ****     
 787:modem.c       ****     //unlock contedt, simnce its being used by modem
 788:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 789:modem.c       ****     //Lock context 1 for LoCation Services (LCS) use only
 790:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",5000u);
 791:modem.c       ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 68


 792:modem.c       ****     //unlock contedt, simnce its being used by modem
 793:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 794:modem.c       ****     
 795:modem.c       ****     //EnableunsolicitedNMEAGPSdataintheformatof<NMEASENTENCE><CR>
 796:modem.c       ****     at_write_command("AT$GPSNMUN=2,1,0,0,0,0,0\r","OK",DEFAULT_AT_TIMEOUT);
 797:modem.c       ****     
 798:modem.c       ****     //StartGPSlocationservicerequest.Sendingthiscommandsets$GPSP=1
 799:modem.c       ****    uint8 gps_status = 0;
 800:modem.c       ****     for(uint16 i=0;i<200;i++){
 801:modem.c       ****         gps_status = at_write_command("AT$GPSSLSR=1,1,,,,,0,255\r","N",3000u);
 802:modem.c       ****         if(gps_status){
 803:modem.c       ****             break;   
 804:modem.c       ****         }
 805:modem.c       ****   }
 806:modem.c       ****     
 807:modem.c       ****     //$GPGGA,030307.691,4217.7923,N,08341.3240,W,1,05,2.25,225.0,M,,M,,0000*6E
 808:modem.c       ****     //$GPGGA,213852.000,4600.8755,N,09327.7008,W,1,05,3.00,292.0,M,,M,,0000*6E
 809:modem.c       ****     if(gps_status){
 810:modem.c       ****         float lat,lon,alt = 0;
 811:modem.c       ****         if(sscanf(uart_received_string,"%*s,%f,N,%f,W,%*s",&lat,&lon) > 0){
 812:modem.c       ****             gps.altitude = alt;
 813:modem.c       ****             gps.latitude = lat/60;
 814:modem.c       ****             gps.longitude = lon/60;
 815:modem.c       ****             gps.valid = 1;
 816:modem.c       ****         }
 817:modem.c       ****         
 818:modem.c       ****     }
 819:modem.c       ****     
 820:modem.c       ****     //turn off gps
 821:modem.c       ****     //AT$GPSP=0
 822:modem.c       ****     at_write_command("AT$GPSP=0\r","OK",DEFAULT_AT_TIMEOUT);
 823:modem.c       ****     
 824:modem.c       ****     */
 825:modem.c       **** 
 826:modem.c       ****     // Calculate time to lock into GPS location and save in variable lock_time
 827:modem.c       ****     lock_time = getTimeStamp() - lock_time;
 2770              		.loc 1 827 0
 2771 01f0 FFF7FEFF 		bl	getTimeStamp
 2772 01f4 0246     		mov	r2, r0
 2773 01f6 3B6B     		ldr	r3, [r7, #48]
 2774 01f8 D31A     		subs	r3, r2, r3
 2775 01fa 3B63     		str	r3, [r7, #48]
 828:modem.c       ****     gps.time_to_lock = lock_time;
 2776              		.loc 1 828 0
 2777 01fc 3B6B     		ldr	r3, [r7, #48]
 2778 01fe 9BB2     		uxth	r3, r3
 2779 0200 3B84     		strh	r3, [r7, #32]	@ movhi
 829:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Time to lock GPS: %d", gps.time_to_lock);
 2780              		.loc 1 829 0
 2781 0202 3B8C     		ldrh	r3, [r7, #32]
 2782 0204 1A46     		mov	r2, r3
 2783 0206 1C49     		ldr	r1, .L150+84
 2784 0208 0020     		movs	r0, #0
 2785 020a FFF7FEFF 		bl	printNotif
 830:modem.c       ****     
 831:modem.c       ****     return gps;
 2786              		.loc 1 831 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 69


 2787 020e 7B68     		ldr	r3, [r7, #4]
 2788 0210 1C46     		mov	r4, r3
 2789 0212 07F11403 		add	r3, r7, #20
 2790 0216 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2791 0218 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2792              	.L140:
 832:modem.c       ****     
 833:modem.c       **** }
 2793              		.loc 1 833 0
 2794 021c 7868     		ldr	r0, [r7, #4]
 2795 021e 3837     		adds	r7, r7, #56
 2796              		.cfi_def_cfa_offset 16
 2797 0220 BD46     		mov	sp, r7
 2798              		.cfi_def_cfa_register 13
 2799              		@ sp needed
 2800 0222 B0BD     		pop	{r4, r5, r7, pc}
 2801              	.L151:
 2802              		.align	2
 2803              	.L150:
 2804 0224 00000000 		.word	modem_state
 2805 0228 00000000 		.word	.LC0
 2806 022c 38060000 		.word	.LC66
 2807 0230 4C060000 		.word	.LC67
 2808 0234 5C060000 		.word	.LC68
 2809 0238 68060000 		.word	.LC69
 2810 023c 78060000 		.word	.LC70
 2811 0240 9C060000 		.word	.LC71
 2812 0244 AC060000 		.word	.LC72
 2813 0248 D8020000 		.word	.LC27
 2814 024c BC060000 		.word	.LC73
 2815 0250 D4060000 		.word	.LC74
 2816 0254 D8060000 		.word	.LC75
 2817 0258 E4060000 		.word	.LC76
 2818 025c 00000000 		.word	uart_received_string
 2819 0260 F0060000 		.word	.LC77
 2820 0264 0000C842 		.word	1120403456
 2821 0268 00005940 		.word	1079574528
 2822 026c 00004E40 		.word	1078853632
 2823 0270 10070000 		.word	.LC78
 2824 0274 24070000 		.word	.LC79
 2825 0278 30070000 		.word	.LC80
 2826              		.cfi_endproc
 2827              	.LFE87:
 2828              		.size	modem_get_gps_coordinates, .-modem_get_gps_coordinates
 2829              		.text
 2830              	.Letext0:
 2831              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2832              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2833              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2834              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2835              		.file 6 "testing.h"
 2836              		.file 7 "data.h"
 2837              		.file 8 "modem.h"
 2838              		.file 9 "notoriOS.h"
 2839              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 2840              		.section	.debug_info,"",%progbits
 2841              	.Ldebug_info0:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 70


 2842 0000 D20B0000 		.4byte	0xbd2
 2843 0004 0400     		.2byte	0x4
 2844 0006 00000000 		.4byte	.Ldebug_abbrev0
 2845 000a 04       		.byte	0x4
 2846 000b 01       		.uleb128 0x1
 2847 000c 64000000 		.4byte	.LASF159
 2848 0010 0C       		.byte	0xc
 2849 0011 F2030000 		.4byte	.LASF160
 2850 0015 CD020000 		.4byte	.LASF161
 2851 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2852 001d 00000000 		.4byte	0
 2853 0021 00000000 		.4byte	.Ldebug_line0
 2854 0025 02       		.uleb128 0x2
 2855 0026 01       		.byte	0x1
 2856 0027 06       		.byte	0x6
 2857 0028 67010000 		.4byte	.LASF0
 2858 002c 03       		.uleb128 0x3
 2859 002d 38000000 		.4byte	.LASF4
 2860 0031 02       		.byte	0x2
 2861 0032 1D       		.byte	0x1d
 2862 0033 37000000 		.4byte	0x37
 2863 0037 02       		.uleb128 0x2
 2864 0038 01       		.byte	0x1
 2865 0039 08       		.byte	0x8
 2866 003a C0050000 		.4byte	.LASF1
 2867 003e 02       		.uleb128 0x2
 2868 003f 02       		.byte	0x2
 2869 0040 05       		.byte	0x5
 2870 0041 2A040000 		.4byte	.LASF2
 2871 0045 02       		.uleb128 0x2
 2872 0046 02       		.byte	0x2
 2873 0047 07       		.byte	0x7
 2874 0048 75020000 		.4byte	.LASF3
 2875 004c 03       		.uleb128 0x3
 2876 004d 3F040000 		.4byte	.LASF5
 2877 0051 02       		.byte	0x2
 2878 0052 3F       		.byte	0x3f
 2879 0053 57000000 		.4byte	0x57
 2880 0057 02       		.uleb128 0x2
 2881 0058 04       		.byte	0x4
 2882 0059 05       		.byte	0x5
 2883 005a EF010000 		.4byte	.LASF6
 2884 005e 03       		.uleb128 0x3
 2885 005f 98020000 		.4byte	.LASF7
 2886 0063 02       		.byte	0x2
 2887 0064 41       		.byte	0x41
 2888 0065 69000000 		.4byte	0x69
 2889 0069 02       		.uleb128 0x2
 2890 006a 04       		.byte	0x4
 2891 006b 07       		.byte	0x7
 2892 006c 5F030000 		.4byte	.LASF8
 2893 0070 02       		.uleb128 0x2
 2894 0071 08       		.byte	0x8
 2895 0072 05       		.byte	0x5
 2896 0073 59010000 		.4byte	.LASF9
 2897 0077 02       		.uleb128 0x2
 2898 0078 08       		.byte	0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 71


 2899 0079 07       		.byte	0x7
 2900 007a FF000000 		.4byte	.LASF10
 2901 007e 04       		.uleb128 0x4
 2902 007f 04       		.byte	0x4
 2903 0080 05       		.byte	0x5
 2904 0081 696E7400 		.ascii	"int\000"
 2905 0085 02       		.uleb128 0x2
 2906 0086 04       		.byte	0x4
 2907 0087 07       		.byte	0x7
 2908 0088 A6060000 		.4byte	.LASF11
 2909 008c 03       		.uleb128 0x3
 2910 008d DD070000 		.4byte	.LASF12
 2911 0091 03       		.byte	0x3
 2912 0092 18       		.byte	0x18
 2913 0093 2C000000 		.4byte	0x2c
 2914 0097 03       		.uleb128 0x3
 2915 0098 B8050000 		.4byte	.LASF13
 2916 009c 03       		.byte	0x3
 2917 009d 2C       		.byte	0x2c
 2918 009e 4C000000 		.4byte	0x4c
 2919 00a2 03       		.uleb128 0x3
 2920 00a3 6D070000 		.4byte	.LASF14
 2921 00a7 03       		.byte	0x3
 2922 00a8 30       		.byte	0x30
 2923 00a9 5E000000 		.4byte	0x5e
 2924 00ad 05       		.uleb128 0x5
 2925 00ae 27020000 		.4byte	.LASF15
 2926 00b2 04       		.byte	0x4
 2927 00b3 9201     		.2byte	0x192
 2928 00b5 37000000 		.4byte	0x37
 2929 00b9 05       		.uleb128 0x5
 2930 00ba 0B000000 		.4byte	.LASF16
 2931 00be 04       		.byte	0x4
 2932 00bf 9301     		.2byte	0x193
 2933 00c1 45000000 		.4byte	0x45
 2934 00c5 05       		.uleb128 0x5
 2935 00c6 88020000 		.4byte	.LASF17
 2936 00ca 04       		.byte	0x4
 2937 00cb 9401     		.2byte	0x194
 2938 00cd 69000000 		.4byte	0x69
 2939 00d1 05       		.uleb128 0x5
 2940 00d2 E5070000 		.4byte	.LASF18
 2941 00d6 04       		.byte	0x4
 2942 00d7 9601     		.2byte	0x196
 2943 00d9 3E000000 		.4byte	0x3e
 2944 00dd 05       		.uleb128 0x5
 2945 00de 34020000 		.4byte	.LASF19
 2946 00e2 04       		.byte	0x4
 2947 00e3 9701     		.2byte	0x197
 2948 00e5 57000000 		.4byte	0x57
 2949 00e9 02       		.uleb128 0x2
 2950 00ea 04       		.byte	0x4
 2951 00eb 04       		.byte	0x4
 2952 00ec 71050000 		.4byte	.LASF20
 2953 00f0 02       		.uleb128 0x2
 2954 00f1 08       		.byte	0x8
 2955 00f2 04       		.byte	0x4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 72


 2956 00f3 2D020000 		.4byte	.LASF21
 2957 00f7 02       		.uleb128 0x2
 2958 00f8 01       		.byte	0x1
 2959 00f9 08       		.byte	0x8
 2960 00fa 8D060000 		.4byte	.LASF22
 2961 00fe 02       		.uleb128 0x2
 2962 00ff 08       		.byte	0x8
 2963 0100 04       		.byte	0x4
 2964 0101 81060000 		.4byte	.LASF23
 2965 0105 02       		.uleb128 0x2
 2966 0106 04       		.byte	0x4
 2967 0107 07       		.byte	0x7
 2968 0108 C1040000 		.4byte	.LASF24
 2969 010c 06       		.uleb128 0x6
 2970 010d 04       		.byte	0x4
 2971 010e F7000000 		.4byte	0xf7
 2972 0112 06       		.uleb128 0x6
 2973 0113 04       		.byte	0x4
 2974 0114 18010000 		.4byte	0x118
 2975 0118 07       		.uleb128 0x7
 2976 0119 F7000000 		.4byte	0xf7
 2977 011d 08       		.uleb128 0x8
 2978 011e F7000000 		.4byte	0xf7
 2979 0122 2D010000 		.4byte	0x12d
 2980 0126 09       		.uleb128 0x9
 2981 0127 05010000 		.4byte	0x105
 2982 012b 17       		.byte	0x17
 2983 012c 00       		.byte	0
 2984 012d 0A       		.uleb128 0xa
 2985 012e 746D00   		.ascii	"tm\000"
 2986 0131 24       		.byte	0x24
 2987 0132 05       		.byte	0x5
 2988 0133 21       		.byte	0x21
 2989 0134 A5010000 		.4byte	0x1a5
 2990 0138 0B       		.uleb128 0xb
 2991 0139 76070000 		.4byte	.LASF25
 2992 013d 05       		.byte	0x5
 2993 013e 23       		.byte	0x23
 2994 013f 7E000000 		.4byte	0x7e
 2995 0143 00       		.byte	0
 2996 0144 0B       		.uleb128 0xb
 2997 0145 BA040000 		.4byte	.LASF26
 2998 0149 05       		.byte	0x5
 2999 014a 24       		.byte	0x24
 3000 014b 7E000000 		.4byte	0x7e
 3001 014f 04       		.byte	0x4
 3002 0150 0B       		.uleb128 0xb
 3003 0151 18000000 		.4byte	.LASF27
 3004 0155 05       		.byte	0x5
 3005 0156 25       		.byte	0x25
 3006 0157 7E000000 		.4byte	0x7e
 3007 015b 08       		.byte	0x8
 3008 015c 0B       		.uleb128 0xb
 3009 015d 58070000 		.4byte	.LASF28
 3010 0161 05       		.byte	0x5
 3011 0162 26       		.byte	0x26
 3012 0163 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 73


 3013 0167 0C       		.byte	0xc
 3014 0168 0B       		.uleb128 0xb
 3015 0169 BA020000 		.4byte	.LASF29
 3016 016d 05       		.byte	0x5
 3017 016e 27       		.byte	0x27
 3018 016f 7E000000 		.4byte	0x7e
 3019 0173 10       		.byte	0x10
 3020 0174 0B       		.uleb128 0xb
 3021 0175 21030000 		.4byte	.LASF30
 3022 0179 05       		.byte	0x5
 3023 017a 28       		.byte	0x28
 3024 017b 7E000000 		.4byte	0x7e
 3025 017f 14       		.byte	0x14
 3026 0180 0B       		.uleb128 0xb
 3027 0181 62060000 		.4byte	.LASF31
 3028 0185 05       		.byte	0x5
 3029 0186 29       		.byte	0x29
 3030 0187 7E000000 		.4byte	0x7e
 3031 018b 18       		.byte	0x18
 3032 018c 0B       		.uleb128 0xb
 3033 018d 20000000 		.4byte	.LASF32
 3034 0191 05       		.byte	0x5
 3035 0192 2A       		.byte	0x2a
 3036 0193 7E000000 		.4byte	0x7e
 3037 0197 1C       		.byte	0x1c
 3038 0198 0B       		.uleb128 0xb
 3039 0199 B9030000 		.4byte	.LASF33
 3040 019d 05       		.byte	0x5
 3041 019e 2B       		.byte	0x2b
 3042 019f 7E000000 		.4byte	0x7e
 3043 01a3 20       		.byte	0x20
 3044 01a4 00       		.byte	0
 3045 01a5 0C       		.uleb128 0xc
 3046 01a6 8101     		.2byte	0x181
 3047 01a8 06       		.byte	0x6
 3048 01a9 0A       		.byte	0xa
 3049 01aa D3010000 		.4byte	0x1d3
 3050 01ae 0B       		.uleb128 0xb
 3051 01af 0B050000 		.4byte	.LASF34
 3052 01b3 06       		.byte	0x6
 3053 01b4 0C       		.byte	0xc
 3054 01b5 D3010000 		.4byte	0x1d3
 3055 01b9 00       		.byte	0
 3056 01ba 0B       		.uleb128 0xb
 3057 01bb AE070000 		.4byte	.LASF35
 3058 01bf 06       		.byte	0x6
 3059 01c0 0D       		.byte	0xd
 3060 01c1 AD000000 		.4byte	0xad
 3061 01c5 80       		.byte	0x80
 3062 01c6 0B       		.uleb128 0xb
 3063 01c7 36060000 		.4byte	.LASF36
 3064 01cb 06       		.byte	0x6
 3065 01cc 0F       		.byte	0xf
 3066 01cd E3010000 		.4byte	0x1e3
 3067 01d1 81       		.byte	0x81
 3068 01d2 00       		.byte	0
 3069 01d3 08       		.uleb128 0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 74


 3070 01d4 F7000000 		.4byte	0xf7
 3071 01d8 E3010000 		.4byte	0x1e3
 3072 01dc 09       		.uleb128 0x9
 3073 01dd 05010000 		.4byte	0x105
 3074 01e1 7F       		.byte	0x7f
 3075 01e2 00       		.byte	0
 3076 01e3 08       		.uleb128 0x8
 3077 01e4 F7000000 		.4byte	0xf7
 3078 01e8 F3010000 		.4byte	0x1f3
 3079 01ec 09       		.uleb128 0x9
 3080 01ed 05010000 		.4byte	0x105
 3081 01f1 FF       		.byte	0xff
 3082 01f2 00       		.byte	0
 3083 01f3 03       		.uleb128 0x3
 3084 01f4 1E060000 		.4byte	.LASF37
 3085 01f8 06       		.byte	0x6
 3086 01f9 10       		.byte	0x10
 3087 01fa A5010000 		.4byte	0x1a5
 3088 01fe 0D       		.uleb128 0xd
 3089 01ff 2C       		.byte	0x2c
 3090 0200 07       		.byte	0x7
 3091 0201 14       		.byte	0x14
 3092 0202 2B020000 		.4byte	0x22b
 3093 0206 0E       		.uleb128 0xe
 3094 0207 6B657900 		.ascii	"key\000"
 3095 020b 07       		.byte	0x7
 3096 020c 15       		.byte	0x15
 3097 020d 2B020000 		.4byte	0x22b
 3098 0211 00       		.byte	0
 3099 0212 0B       		.uleb128 0xb
 3100 0213 12000000 		.4byte	.LASF38
 3101 0217 07       		.byte	0x7
 3102 0218 16       		.byte	0x16
 3103 0219 2B020000 		.4byte	0x22b
 3104 021d 14       		.byte	0x14
 3105 021e 0B       		.uleb128 0xb
 3106 021f 4F080000 		.4byte	.LASF39
 3107 0223 07       		.byte	0x7
 3108 0224 17       		.byte	0x17
 3109 0225 DD000000 		.4byte	0xdd
 3110 0229 28       		.byte	0x28
 3111 022a 00       		.byte	0
 3112 022b 08       		.uleb128 0x8
 3113 022c F7000000 		.4byte	0xf7
 3114 0230 3B020000 		.4byte	0x23b
 3115 0234 09       		.uleb128 0x9
 3116 0235 05010000 		.4byte	0x105
 3117 0239 13       		.byte	0x13
 3118 023a 00       		.byte	0
 3119 023b 03       		.uleb128 0x3
 3120 023c 49030000 		.4byte	.LASF40
 3121 0240 07       		.byte	0x7
 3122 0241 19       		.byte	0x19
 3123 0242 FE010000 		.4byte	0x1fe
 3124 0246 0D       		.uleb128 0xd
 3125 0247 3C       		.byte	0x3c
 3126 0248 08       		.byte	0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 75


 3127 0249 36       		.byte	0x36
 3128 024a 73020000 		.4byte	0x273
 3129 024e 0B       		.uleb128 0xb
 3130 024f 51070000 		.4byte	.LASF41
 3131 0253 08       		.byte	0x8
 3132 0254 37       		.byte	0x37
 3133 0255 2B020000 		.4byte	0x22b
 3134 0259 00       		.byte	0
 3135 025a 0B       		.uleb128 0xb
 3136 025b B8060000 		.4byte	.LASF42
 3137 025f 08       		.byte	0x8
 3138 0260 38       		.byte	0x38
 3139 0261 2B020000 		.4byte	0x22b
 3140 0265 14       		.byte	0x14
 3141 0266 0B       		.uleb128 0xb
 3142 0267 31060000 		.4byte	.LASF43
 3143 026b 08       		.byte	0x8
 3144 026c 39       		.byte	0x39
 3145 026d 2B020000 		.4byte	0x22b
 3146 0271 28       		.byte	0x28
 3147 0272 00       		.byte	0
 3148 0273 03       		.uleb128 0x3
 3149 0274 CC060000 		.4byte	.LASF44
 3150 0278 08       		.byte	0x8
 3151 0279 3B       		.byte	0x3b
 3152 027a 46020000 		.4byte	0x246
 3153 027e 0D       		.uleb128 0xd
 3154 027f 20       		.byte	0x20
 3155 0280 08       		.byte	0x8
 3156 0281 3D       		.byte	0x3d
 3157 0282 E7020000 		.4byte	0x2e7
 3158 0286 0B       		.uleb128 0xb
 3159 0287 E9010000 		.4byte	.LASF45
 3160 028b 08       		.byte	0x8
 3161 028c 3E       		.byte	0x3e
 3162 028d 7E000000 		.4byte	0x7e
 3163 0291 00       		.byte	0
 3164 0292 0E       		.uleb128 0xe
 3165 0293 62657200 		.ascii	"ber\000"
 3166 0297 08       		.byte	0x8
 3167 0298 3F       		.byte	0x3f
 3168 0299 7E000000 		.4byte	0x7e
 3169 029d 04       		.byte	0x4
 3170 029e 0B       		.uleb128 0xb
 3171 029f FF050000 		.4byte	.LASF46
 3172 02a3 08       		.byte	0x8
 3173 02a4 40       		.byte	0x40
 3174 02a5 7E000000 		.4byte	0x7e
 3175 02a9 08       		.byte	0x8
 3176 02aa 0B       		.uleb128 0xb
 3177 02ab 73010000 		.4byte	.LASF47
 3178 02af 08       		.byte	0x8
 3179 02b0 41       		.byte	0x41
 3180 02b1 7E000000 		.4byte	0x7e
 3181 02b5 0C       		.byte	0xc
 3182 02b6 0B       		.uleb128 0xb
 3183 02b7 E4050000 		.4byte	.LASF48
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 76


 3184 02bb 08       		.byte	0x8
 3185 02bc 42       		.byte	0x42
 3186 02bd 7E000000 		.4byte	0x7e
 3187 02c1 10       		.byte	0x10
 3188 02c2 0B       		.uleb128 0xb
 3189 02c3 3D060000 		.4byte	.LASF49
 3190 02c7 08       		.byte	0x8
 3191 02c8 43       		.byte	0x43
 3192 02c9 7E000000 		.4byte	0x7e
 3193 02cd 14       		.byte	0x14
 3194 02ce 0B       		.uleb128 0xb
 3195 02cf 95010000 		.4byte	.LASF50
 3196 02d3 08       		.byte	0x8
 3197 02d4 44       		.byte	0x44
 3198 02d5 7E000000 		.4byte	0x7e
 3199 02d9 18       		.byte	0x18
 3200 02da 0B       		.uleb128 0xb
 3201 02db 0D040000 		.4byte	.LASF51
 3202 02df 08       		.byte	0x8
 3203 02e0 45       		.byte	0x45
 3204 02e1 7E000000 		.4byte	0x7e
 3205 02e5 1C       		.byte	0x1c
 3206 02e6 00       		.byte	0
 3207 02e7 03       		.uleb128 0x3
 3208 02e8 42060000 		.4byte	.LASF52
 3209 02ec 08       		.byte	0x8
 3210 02ed 47       		.byte	0x47
 3211 02ee 7E020000 		.4byte	0x27e
 3212 02f2 0D       		.uleb128 0xd
 3213 02f3 10       		.byte	0x10
 3214 02f4 08       		.byte	0x8
 3215 02f5 49       		.byte	0x49
 3216 02f6 37030000 		.4byte	0x337
 3217 02fa 0B       		.uleb128 0xb
 3218 02fb 02050000 		.4byte	.LASF53
 3219 02ff 08       		.byte	0x8
 3220 0300 4A       		.byte	0x4a
 3221 0301 E9000000 		.4byte	0xe9
 3222 0305 00       		.byte	0
 3223 0306 0B       		.uleb128 0xb
 3224 0307 5A000000 		.4byte	.LASF54
 3225 030b 08       		.byte	0x8
 3226 030c 4B       		.byte	0x4b
 3227 030d E9000000 		.4byte	0xe9
 3228 0311 04       		.byte	0x4
 3229 0312 0B       		.uleb128 0xb
 3230 0313 1E020000 		.4byte	.LASF55
 3231 0317 08       		.byte	0x8
 3232 0318 4C       		.byte	0x4c
 3233 0319 E9000000 		.4byte	0xe9
 3234 031d 08       		.byte	0x8
 3235 031e 0B       		.uleb128 0xb
 3236 031f 9F030000 		.4byte	.LASF56
 3237 0323 08       		.byte	0x8
 3238 0324 4D       		.byte	0x4d
 3239 0325 B9000000 		.4byte	0xb9
 3240 0329 0C       		.byte	0xc
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 77


 3241 032a 0B       		.uleb128 0xb
 3242 032b 60070000 		.4byte	.LASF57
 3243 032f 08       		.byte	0x8
 3244 0330 4E       		.byte	0x4e
 3245 0331 AD000000 		.4byte	0xad
 3246 0335 0E       		.byte	0xe
 3247 0336 00       		.byte	0
 3248 0337 03       		.uleb128 0x3
 3249 0338 D9060000 		.4byte	.LASF58
 3250 033c 08       		.byte	0x8
 3251 033d 50       		.byte	0x50
 3252 033e F2020000 		.4byte	0x2f2
 3253 0342 0D       		.uleb128 0xd
 3254 0343 05       		.byte	0x5
 3255 0344 08       		.byte	0x8
 3256 0345 53       		.byte	0x53
 3257 0346 87030000 		.4byte	0x387
 3258 034a 0B       		.uleb128 0xb
 3259 034b 3A020000 		.4byte	.LASF59
 3260 034f 08       		.byte	0x8
 3261 0350 55       		.byte	0x55
 3262 0351 AD000000 		.4byte	0xad
 3263 0355 00       		.byte	0
 3264 0356 0B       		.uleb128 0xb
 3265 0357 96050000 		.4byte	.LASF60
 3266 035b 08       		.byte	0x8
 3267 035c 57       		.byte	0x57
 3268 035d 87030000 		.4byte	0x387
 3269 0361 01       		.byte	0x1
 3270 0362 0B       		.uleb128 0xb
 3271 0363 F1060000 		.4byte	.LASF61
 3272 0367 08       		.byte	0x8
 3273 0368 59       		.byte	0x59
 3274 0369 AD000000 		.4byte	0xad
 3275 036d 02       		.byte	0x2
 3276 036e 0B       		.uleb128 0xb
 3277 036f E9050000 		.4byte	.LASF62
 3278 0373 08       		.byte	0x8
 3279 0374 5B       		.byte	0x5b
 3280 0375 AD000000 		.4byte	0xad
 3281 0379 03       		.byte	0x3
 3282 037a 0B       		.uleb128 0xb
 3283 037b C1020000 		.4byte	.LASF63
 3284 037f 08       		.byte	0x8
 3285 0380 5E       		.byte	0x5e
 3286 0381 AD000000 		.4byte	0xad
 3287 0385 04       		.byte	0x4
 3288 0386 00       		.byte	0
 3289 0387 02       		.uleb128 0x2
 3290 0388 01       		.byte	0x1
 3291 0389 02       		.byte	0x2
 3292 038a B2050000 		.4byte	.LASF64
 3293 038e 03       		.uleb128 0x3
 3294 038f 85040000 		.4byte	.LASF65
 3295 0393 08       		.byte	0x8
 3296 0394 60       		.byte	0x60
 3297 0395 42030000 		.4byte	0x342
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 78


 3298 0399 0D       		.uleb128 0xd
 3299 039a 06       		.byte	0x6
 3300 039b 09       		.byte	0x9
 3301 039c 2E       		.byte	0x2e
 3302 039d D2030000 		.4byte	0x3d2
 3303 03a1 0B       		.uleb128 0xb
 3304 03a2 78010000 		.4byte	.LASF66
 3305 03a6 09       		.byte	0x9
 3306 03a7 30       		.byte	0x30
 3307 03a8 B9000000 		.4byte	0xb9
 3308 03ac 00       		.byte	0
 3309 03ad 0B       		.uleb128 0xb
 3310 03ae F8010000 		.4byte	.LASF67
 3311 03b2 09       		.byte	0x9
 3312 03b3 31       		.byte	0x31
 3313 03b4 D1000000 		.4byte	0xd1
 3314 03b8 02       		.byte	0x2
 3315 03b9 0B       		.uleb128 0xb
 3316 03ba FD070000 		.4byte	.LASF68
 3317 03be 09       		.byte	0x9
 3318 03bf 32       		.byte	0x32
 3319 03c0 AD000000 		.4byte	0xad
 3320 03c4 04       		.byte	0x4
 3321 03c5 0B       		.uleb128 0xb
 3322 03c6 42000000 		.4byte	.LASF69
 3323 03ca 09       		.byte	0x9
 3324 03cb 33       		.byte	0x33
 3325 03cc AD000000 		.4byte	0xad
 3326 03d0 05       		.byte	0x5
 3327 03d1 00       		.byte	0
 3328 03d2 03       		.uleb128 0x3
 3329 03d3 AC050000 		.4byte	.LASF70
 3330 03d7 09       		.byte	0x9
 3331 03d8 36       		.byte	0x36
 3332 03d9 DD030000 		.4byte	0x3dd
 3333 03dd 0F       		.uleb128 0xf
 3334 03de 99030000 		.4byte	0x399
 3335 03e2 0D       		.uleb128 0xd
 3336 03e3 1C       		.byte	0x1c
 3337 03e4 09       		.byte	0x9
 3338 03e5 39       		.byte	0x39
 3339 03e6 03040000 		.4byte	0x403
 3340 03ea 0B       		.uleb128 0xb
 3341 03eb C2030000 		.4byte	.LASF71
 3342 03ef 09       		.byte	0x9
 3343 03f0 3B       		.byte	0x3b
 3344 03f1 03040000 		.4byte	0x403
 3345 03f5 00       		.byte	0
 3346 03f6 0B       		.uleb128 0xb
 3347 03f7 D5030000 		.4byte	.LASF72
 3348 03fb 09       		.byte	0x9
 3349 03fc 3C       		.byte	0x3c
 3350 03fd 1D010000 		.4byte	0x11d
 3351 0401 04       		.byte	0x4
 3352 0402 00       		.byte	0
 3353 0403 06       		.uleb128 0x6
 3354 0404 04       		.byte	0x4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 79


 3355 0405 73020000 		.4byte	0x273
 3356 0409 03       		.uleb128 0x3
 3357 040a 7A040000 		.4byte	.LASF73
 3358 040e 09       		.byte	0x9
 3359 040f 3E       		.byte	0x3e
 3360 0410 E2030000 		.4byte	0x3e2
 3361 0414 0D       		.uleb128 0xd
 3362 0415 68       		.byte	0x68
 3363 0416 09       		.byte	0x9
 3364 0417 44       		.byte	0x44
 3365 0418 35040000 		.4byte	0x435
 3366 041c 0B       		.uleb128 0xb
 3367 041d CD030000 		.4byte	.LASF74
 3368 0421 09       		.byte	0x9
 3369 0422 49       		.byte	0x49
 3370 0423 35040000 		.4byte	0x435
 3371 0427 00       		.byte	0
 3372 0428 0B       		.uleb128 0xb
 3373 0429 B1030000 		.4byte	.LASF75
 3374 042d 09       		.byte	0x9
 3375 042e 4A       		.byte	0x4a
 3376 042f 7E000000 		.4byte	0x7e
 3377 0433 64       		.byte	0x64
 3378 0434 00       		.byte	0
 3379 0435 08       		.uleb128 0x8
 3380 0436 F7000000 		.4byte	0xf7
 3381 043a 45040000 		.4byte	0x445
 3382 043e 09       		.uleb128 0x9
 3383 043f 05010000 		.4byte	0x105
 3384 0443 63       		.byte	0x63
 3385 0444 00       		.byte	0
 3386 0445 03       		.uleb128 0x3
 3387 0446 CE070000 		.4byte	.LASF76
 3388 044a 09       		.byte	0x9
 3389 044b 50       		.byte	0x50
 3390 044c 14040000 		.4byte	0x414
 3391 0450 10       		.uleb128 0x10
 3392 0451 9F050000 		.4byte	.LASF108
 3393 0455 01       		.byte	0x1
 3394 0456 12       		.byte	0x12
 3395 0457 00000000 		.4byte	.LFB64
 3396 045b 44000000 		.4byte	.LFE64-.LFB64
 3397 045f 01       		.uleb128 0x1
 3398 0460 9C       		.byte	0x9c
 3399 0461 11       		.uleb128 0x11
 3400 0462 77050000 		.4byte	.LASF77
 3401 0466 01       		.byte	0x1
 3402 0467 1C       		.byte	0x1c
 3403 0468 00000000 		.4byte	.LFB65
 3404 046c 6C000000 		.4byte	.LFE65-.LFB65
 3405 0470 01       		.uleb128 0x1
 3406 0471 9C       		.byte	0x9c
 3407 0472 11       		.uleb128 0x11
 3408 0473 39070000 		.4byte	.LASF78
 3409 0477 01       		.byte	0x1
 3410 0478 36       		.byte	0x36
 3411 0479 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 80


 3412 047d 32000000 		.4byte	.LFE66-.LFB66
 3413 0481 01       		.uleb128 0x1
 3414 0482 9C       		.byte	0x9c
 3415 0483 11       		.uleb128 0x11
 3416 0484 33030000 		.4byte	.LASF79
 3417 0488 01       		.byte	0x1
 3418 0489 46       		.byte	0x46
 3419 048a 00000000 		.4byte	.LFB67
 3420 048e 20000000 		.4byte	.LFE67-.LFB67
 3421 0492 01       		.uleb128 0x1
 3422 0493 9C       		.byte	0x9c
 3423 0494 11       		.uleb128 0x11
 3424 0495 3E080000 		.4byte	.LASF80
 3425 0499 01       		.byte	0x1
 3426 049a 4F       		.byte	0x4f
 3427 049b 00000000 		.4byte	.LFB68
 3428 049f 44000000 		.4byte	.LFE68-.LFB68
 3429 04a3 01       		.uleb128 0x1
 3430 04a4 9C       		.byte	0x9c
 3431 04a5 12       		.uleb128 0x12
 3432 04a6 E3030000 		.4byte	.LASF94
 3433 04aa 01       		.byte	0x1
 3434 04ab 62       		.byte	0x62
 3435 04ac AD000000 		.4byte	0xad
 3436 04b0 00000000 		.4byte	.LFB69
 3437 04b4 E0000000 		.4byte	.LFE69-.LFB69
 3438 04b8 01       		.uleb128 0x1
 3439 04b9 9C       		.byte	0x9c
 3440 04ba 19050000 		.4byte	0x519
 3441 04be 13       		.uleb128 0x13
 3442 04bf EB070000 		.4byte	.LASF81
 3443 04c3 01       		.byte	0x1
 3444 04c4 6B       		.byte	0x6b
 3445 04c5 AD000000 		.4byte	0xad
 3446 04c9 02       		.uleb128 0x2
 3447 04ca 91       		.byte	0x91
 3448 04cb 77       		.sleb128 -9
 3449 04cc 13       		.uleb128 0x13
 3450 04cd F4070000 		.4byte	.LASF82
 3451 04d1 01       		.byte	0x1
 3452 04d2 6C       		.byte	0x6c
 3453 04d3 AD000000 		.4byte	0xad
 3454 04d7 02       		.uleb128 0x2
 3455 04d8 91       		.byte	0x91
 3456 04d9 74       		.sleb128 -12
 3457 04da 13       		.uleb128 0x13
 3458 04db 0B080000 		.4byte	.LASF83
 3459 04df 01       		.byte	0x1
 3460 04e0 6E       		.byte	0x6e
 3461 04e1 57000000 		.4byte	0x57
 3462 04e5 02       		.uleb128 0x2
 3463 04e6 91       		.byte	0x91
 3464 04e7 70       		.sleb128 -16
 3465 04e8 14       		.uleb128 0x14
 3466 04e9 2C000000 		.4byte	.LBB2
 3467 04ed 4A000000 		.4byte	.LBE2-.LBB2
 3468 04f1 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 81


 3469 04f2 F4070000 		.4byte	.LASF82
 3470 04f6 01       		.byte	0x1
 3471 04f7 71       		.byte	0x71
 3472 04f8 AD000000 		.4byte	0xad
 3473 04fc 02       		.uleb128 0x2
 3474 04fd 91       		.byte	0x91
 3475 04fe 76       		.sleb128 -10
 3476 04ff 14       		.uleb128 0x14
 3477 0500 32000000 		.4byte	.LBB3
 3478 0504 2A000000 		.4byte	.LBE3-.LBB3
 3479 0508 13       		.uleb128 0x13
 3480 0509 55030000 		.4byte	.LASF84
 3481 050d 01       		.byte	0x1
 3482 050e 73       		.byte	0x73
 3483 050f AD000000 		.4byte	0xad
 3484 0513 02       		.uleb128 0x2
 3485 0514 91       		.byte	0x91
 3486 0515 75       		.sleb128 -11
 3487 0516 00       		.byte	0
 3488 0517 00       		.byte	0
 3489 0518 00       		.byte	0
 3490 0519 11       		.uleb128 0x11
 3491 051a 6A060000 		.4byte	.LASF85
 3492 051e 01       		.byte	0x1
 3493 051f 94       		.byte	0x94
 3494 0520 00000000 		.4byte	.LFB70
 3495 0524 1C000000 		.4byte	.LFE70-.LFB70
 3496 0528 01       		.uleb128 0x1
 3497 0529 9C       		.byte	0x9c
 3498 052a 11       		.uleb128 0x11
 3499 052b 50060000 		.4byte	.LASF86
 3500 052f 01       		.byte	0x1
 3501 0530 9C       		.byte	0x9c
 3502 0531 00000000 		.4byte	.LFB71
 3503 0535 28000000 		.4byte	.LFE71-.LFB71
 3504 0539 01       		.uleb128 0x1
 3505 053a 9C       		.byte	0x9c
 3506 053b 15       		.uleb128 0x15
 3507 053c 69040000 		.4byte	.LASF98
 3508 0540 01       		.byte	0x1
 3509 0541 A7       		.byte	0xa7
 3510 0542 8C000000 		.4byte	0x8c
 3511 0546 00000000 		.4byte	.LFB72
 3512 054a C8000000 		.4byte	.LFE72-.LFB72
 3513 054e 01       		.uleb128 0x1
 3514 054f 9C       		.byte	0x9c
 3515 0550 CD050000 		.4byte	0x5cd
 3516 0554 16       		.uleb128 0x16
 3517 0555 57050000 		.4byte	.LASF87
 3518 0559 01       		.byte	0x1
 3519 055a A7       		.byte	0xa7
 3520 055b 0C010000 		.4byte	0x10c
 3521 055f 02       		.uleb128 0x2
 3522 0560 91       		.byte	0x91
 3523 0561 5C       		.sleb128 -36
 3524 0562 16       		.uleb128 0x16
 3525 0563 15080000 		.4byte	.LASF88
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 82


 3526 0567 01       		.byte	0x1
 3527 0568 A7       		.byte	0xa7
 3528 0569 0C010000 		.4byte	0x10c
 3529 056d 02       		.uleb128 0x2
 3530 056e 91       		.byte	0x91
 3531 056f 58       		.sleb128 -40
 3532 0570 16       		.uleb128 0x16
 3533 0571 80030000 		.4byte	.LASF89
 3534 0575 01       		.byte	0x1
 3535 0576 A7       		.byte	0xa7
 3536 0577 A2000000 		.4byte	0xa2
 3537 057b 02       		.uleb128 0x2
 3538 057c 91       		.byte	0x91
 3539 057d 54       		.sleb128 -44
 3540 057e 13       		.uleb128 0x13
 3541 057f 5E040000 		.4byte	.LASF90
 3542 0583 01       		.byte	0x1
 3543 0584 A9       		.byte	0xa9
 3544 0585 C5000000 		.4byte	0xc5
 3545 0589 02       		.uleb128 0x2
 3546 058a 91       		.byte	0x91
 3547 058b 74       		.sleb128 -12
 3548 058c 14       		.uleb128 0x14
 3549 058d 16000000 		.4byte	.LBB4
 3550 0591 88000000 		.4byte	.LBE4-.LBB4
 3551 0595 13       		.uleb128 0x13
 3552 0596 60050000 		.4byte	.LASF91
 3553 059a 01       		.byte	0x1
 3554 059b AD       		.byte	0xad
 3555 059c 0C010000 		.4byte	0x10c
 3556 05a0 02       		.uleb128 0x2
 3557 05a1 91       		.byte	0x91
 3558 05a2 64       		.sleb128 -28
 3559 05a3 13       		.uleb128 0x13
 3560 05a4 DE050000 		.4byte	.LASF92
 3561 05a8 01       		.byte	0x1
 3562 05a9 AE       		.byte	0xae
 3563 05aa A2000000 		.4byte	0xa2
 3564 05ae 02       		.uleb128 0x2
 3565 05af 91       		.byte	0x91
 3566 05b0 6C       		.sleb128 -20
 3567 05b1 17       		.uleb128 0x17
 3568 05b2 6900     		.ascii	"i\000"
 3569 05b4 01       		.byte	0x1
 3570 05b5 AF       		.byte	0xaf
 3571 05b6 A2000000 		.4byte	0xa2
 3572 05ba 02       		.uleb128 0x2
 3573 05bb 91       		.byte	0x91
 3574 05bc 70       		.sleb128 -16
 3575 05bd 13       		.uleb128 0x13
 3576 05be 8F020000 		.4byte	.LASF93
 3577 05c2 01       		.byte	0x1
 3578 05c3 AF       		.byte	0xaf
 3579 05c4 A2000000 		.4byte	0xa2
 3580 05c8 02       		.uleb128 0x2
 3581 05c9 91       		.byte	0x91
 3582 05ca 68       		.sleb128 -24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 83


 3583 05cb 00       		.byte	0
 3584 05cc 00       		.byte	0
 3585 05cd 12       		.uleb128 0x12
 3586 05ce 2C050000 		.4byte	.LASF95
 3587 05d2 01       		.byte	0x1
 3588 05d3 DB       		.byte	0xdb
 3589 05d4 F3010000 		.4byte	0x1f3
 3590 05d8 00000000 		.4byte	.LFB73
 3591 05dc 00010000 		.4byte	.LFE73-.LFB73
 3592 05e0 01       		.uleb128 0x1
 3593 05e1 9C       		.byte	0x9c
 3594 05e2 24060000 		.4byte	0x624
 3595 05e6 13       		.uleb128 0x13
 3596 05e7 2E010000 		.4byte	.LASF96
 3597 05eb 01       		.byte	0x1
 3598 05ec DD       		.byte	0xdd
 3599 05ed F3010000 		.4byte	0x1f3
 3600 05f1 03       		.uleb128 0x3
 3601 05f2 91       		.byte	0x91
 3602 05f3 E47C     		.sleb128 -412
 3603 05f5 14       		.uleb128 0x14
 3604 05f6 4A000000 		.4byte	.LBB5
 3605 05fa 86000000 		.4byte	.LBE5-.LBB5
 3606 05fe 17       		.uleb128 0x17
 3607 05ff 6900     		.ascii	"i\000"
 3608 0601 01       		.byte	0x1
 3609 0602 E4       		.byte	0xe4
 3610 0603 7E000000 		.4byte	0x7e
 3611 0607 02       		.uleb128 0x2
 3612 0608 91       		.byte	0x91
 3613 0609 6C       		.sleb128 -20
 3614 060a 14       		.uleb128 0x14
 3615 060b 70000000 		.4byte	.LBB6
 3616 060f 46000000 		.4byte	.LBE6-.LBB6
 3617 0613 13       		.uleb128 0x13
 3618 0614 68020000 		.4byte	.LASF97
 3619 0618 01       		.byte	0x1
 3620 0619 F1       		.byte	0xf1
 3621 061a 57000000 		.4byte	0x57
 3622 061e 02       		.uleb128 0x2
 3623 061f 91       		.byte	0x91
 3624 0620 68       		.sleb128 -24
 3625 0621 00       		.byte	0
 3626 0622 00       		.byte	0
 3627 0623 00       		.byte	0
 3628 0624 18       		.uleb128 0x18
 3629 0625 71030000 		.4byte	.LASF99
 3630 0629 01       		.byte	0x1
 3631 062a 0501     		.2byte	0x105
 3632 062c AD000000 		.4byte	0xad
 3633 0630 00000000 		.4byte	.LFB74
 3634 0634 78000000 		.4byte	.LFE74-.LFB74
 3635 0638 01       		.uleb128 0x1
 3636 0639 9C       		.byte	0x9c
 3637 063a 95060000 		.4byte	0x695
 3638 063e 19       		.uleb128 0x19
 3639 063f 49040000 		.4byte	.LASF100
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 84


 3640 0643 01       		.byte	0x1
 3641 0644 0501     		.2byte	0x105
 3642 0646 0C010000 		.4byte	0x10c
 3643 064a 02       		.uleb128 0x2
 3644 064b 91       		.byte	0x91
 3645 064c 6C       		.sleb128 -20
 3646 064d 19       		.uleb128 0x19
 3647 064e FA030000 		.4byte	.LASF101
 3648 0652 01       		.byte	0x1
 3649 0653 0501     		.2byte	0x105
 3650 0655 12010000 		.4byte	0x112
 3651 0659 02       		.uleb128 0x2
 3652 065a 91       		.byte	0x91
 3653 065b 68       		.sleb128 -24
 3654 065c 19       		.uleb128 0x19
 3655 065d 20040000 		.4byte	.LASF102
 3656 0661 01       		.byte	0x1
 3657 0662 0501     		.2byte	0x105
 3658 0664 12010000 		.4byte	0x112
 3659 0668 02       		.uleb128 0x2
 3660 0669 91       		.byte	0x91
 3661 066a 64       		.sleb128 -28
 3662 066b 19       		.uleb128 0x19
 3663 066c 06040000 		.4byte	.LASF103
 3664 0670 01       		.byte	0x1
 3665 0671 0501     		.2byte	0x105
 3666 0673 0C010000 		.4byte	0x10c
 3667 0677 02       		.uleb128 0x2
 3668 0678 91       		.byte	0x91
 3669 0679 60       		.sleb128 -32
 3670 067a 1A       		.uleb128 0x1a
 3671 067b 6100     		.ascii	"a\000"
 3672 067d 01       		.byte	0x1
 3673 067e 0701     		.2byte	0x107
 3674 0680 0C010000 		.4byte	0x10c
 3675 0684 02       		.uleb128 0x2
 3676 0685 91       		.byte	0x91
 3677 0686 74       		.sleb128 -12
 3678 0687 1A       		.uleb128 0x1a
 3679 0688 6200     		.ascii	"b\000"
 3680 068a 01       		.byte	0x1
 3681 068b 0701     		.2byte	0x107
 3682 068d 0C010000 		.4byte	0x10c
 3683 0691 02       		.uleb128 0x2
 3684 0692 91       		.byte	0x91
 3685 0693 70       		.sleb128 -16
 3686 0694 00       		.byte	0
 3687 0695 1B       		.uleb128 0x1b
 3688 0696 92060000 		.4byte	.LASF104
 3689 069a 01       		.byte	0x1
 3690 069b 2401     		.2byte	0x124
 3691 069d AD000000 		.4byte	0xad
 3692 06a1 00000000 		.4byte	.LFB75
 3693 06a5 3C010000 		.4byte	.LFE75-.LFB75
 3694 06a9 01       		.uleb128 0x1
 3695 06aa 9C       		.byte	0x9c
 3696 06ab C7060000 		.4byte	0x6c7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 85


 3697 06af 14       		.uleb128 0x14
 3698 06b0 2E000000 		.4byte	.LBB7
 3699 06b4 32000000 		.4byte	.LBE7-.LBB7
 3700 06b8 1A       		.uleb128 0x1a
 3701 06b9 6900     		.ascii	"i\000"
 3702 06bb 01       		.byte	0x1
 3703 06bc 3201     		.2byte	0x132
 3704 06be AD000000 		.4byte	0xad
 3705 06c2 02       		.uleb128 0x2
 3706 06c3 91       		.byte	0x91
 3707 06c4 77       		.sleb128 -9
 3708 06c5 00       		.byte	0
 3709 06c6 00       		.byte	0
 3710 06c7 1B       		.uleb128 0x1b
 3711 06c8 D0040000 		.4byte	.LASF105
 3712 06cc 01       		.byte	0x1
 3713 06cd 6B01     		.2byte	0x16b
 3714 06cf AD000000 		.4byte	0xad
 3715 06d3 00000000 		.4byte	.LFB76
 3716 06d7 B8000000 		.4byte	.LFE76-.LFB76
 3717 06db 01       		.uleb128 0x1
 3718 06dc 9C       		.byte	0x9c
 3719 06dd 0A070000 		.4byte	0x70a
 3720 06e1 1C       		.uleb128 0x1c
 3721 06e2 AE070000 		.4byte	.LASF35
 3722 06e6 01       		.byte	0x1
 3723 06e7 6F01     		.2byte	0x16f
 3724 06e9 AD000000 		.4byte	0xad
 3725 06ed 02       		.uleb128 0x2
 3726 06ee 91       		.byte	0x91
 3727 06ef 77       		.sleb128 -9
 3728 06f0 14       		.uleb128 0x14
 3729 06f1 36000000 		.4byte	.LBB8
 3730 06f5 48000000 		.4byte	.LBE8-.LBB8
 3731 06f9 1C       		.uleb128 0x1c
 3732 06fa 4E040000 		.4byte	.LASF106
 3733 06fe 01       		.byte	0x1
 3734 06ff 7701     		.2byte	0x177
 3735 0701 0A070000 		.4byte	0x70a
 3736 0705 02       		.uleb128 0x2
 3737 0706 91       		.byte	0x91
 3738 0707 6C       		.sleb128 -20
 3739 0708 00       		.byte	0
 3740 0709 00       		.byte	0
 3741 070a 08       		.uleb128 0x8
 3742 070b F7000000 		.4byte	0xf7
 3743 070f 1A070000 		.4byte	0x71a
 3744 0713 09       		.uleb128 0x9
 3745 0714 05010000 		.4byte	0x105
 3746 0718 09       		.byte	0x9
 3747 0719 00       		.byte	0
 3748 071a 1D       		.uleb128 0x1d
 3749 071b C2010000 		.4byte	.LASF107
 3750 071f 01       		.byte	0x1
 3751 0720 8901     		.2byte	0x189
 3752 0722 00000000 		.4byte	.LFB77
 3753 0726 1C000000 		.4byte	.LFE77-.LFB77
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 86


 3754 072a 01       		.uleb128 0x1
 3755 072b 9C       		.byte	0x9c
 3756 072c 1E       		.uleb128 0x1e
 3757 072d FE060000 		.4byte	.LASF109
 3758 0731 01       		.byte	0x1
 3759 0732 9901     		.2byte	0x199
 3760 0734 AD000000 		.4byte	0xad
 3761 0738 00000000 		.4byte	.LFB78
 3762 073c 28000000 		.4byte	.LFE78-.LFB78
 3763 0740 01       		.uleb128 0x1
 3764 0741 9C       		.byte	0x9c
 3765 0742 1F       		.uleb128 0x1f
 3766 0743 88030000 		.4byte	.LASF112
 3767 0747 01       		.byte	0x1
 3768 0748 A401     		.2byte	0x1a4
 3769 074a 00000000 		.4byte	.LFB79
 3770 074e 84000000 		.4byte	.LFE79-.LFB79
 3771 0752 01       		.uleb128 0x1
 3772 0753 9C       		.byte	0x9c
 3773 0754 68070000 		.4byte	0x768
 3774 0758 1C       		.uleb128 0x1c
 3775 0759 37050000 		.4byte	.LASF110
 3776 075d 01       		.byte	0x1
 3777 075e B101     		.2byte	0x1b1
 3778 0760 7E000000 		.4byte	0x7e
 3779 0764 02       		.uleb128 0x2
 3780 0765 91       		.byte	0x91
 3781 0766 74       		.sleb128 -12
 3782 0767 00       		.byte	0
 3783 0768 20       		.uleb128 0x20
 3784 0769 01030000 		.4byte	.LASF111
 3785 076d 01       		.byte	0x1
 3786 076e C301     		.2byte	0x1c3
 3787 0770 00000000 		.4byte	.LFB80
 3788 0774 30000000 		.4byte	.LFE80-.LFB80
 3789 0778 01       		.uleb128 0x1
 3790 0779 9C       		.byte	0x9c
 3791 077a 1F       		.uleb128 0x1f
 3792 077b 7D070000 		.4byte	.LASF113
 3793 077f 01       		.byte	0x1
 3794 0780 CC01     		.2byte	0x1cc
 3795 0782 00000000 		.4byte	.LFB81
 3796 0786 0C020000 		.4byte	.LFE81-.LFB81
 3797 078a 01       		.uleb128 0x1
 3798 078b 9C       		.byte	0x9c
 3799 078c 2D080000 		.4byte	0x82d
 3800 0790 1C       		.uleb128 0x1c
 3801 0791 F3050000 		.4byte	.LASF114
 3802 0795 01       		.byte	0x1
 3803 0796 CF01     		.2byte	0x1cf
 3804 0798 0A070000 		.4byte	0x70a
 3805 079c 02       		.uleb128 0x2
 3806 079d 91       		.byte	0x91
 3807 079e 64       		.sleb128 -28
 3808 079f 1C       		.uleb128 0x1c
 3809 07a0 5D020000 		.4byte	.LASF115
 3810 07a4 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 87


 3811 07a5 D001     		.2byte	0x1d0
 3812 07a7 0A070000 		.4byte	0x70a
 3813 07ab 02       		.uleb128 0x2
 3814 07ac 91       		.byte	0x91
 3815 07ad 58       		.sleb128 -40
 3816 07ae 1C       		.uleb128 0x1c
 3817 07af A0070000 		.4byte	.LASF116
 3818 07b3 01       		.byte	0x1
 3819 07b4 D101     		.2byte	0x1d1
 3820 07b6 0A070000 		.4byte	0x70a
 3821 07ba 02       		.uleb128 0x2
 3822 07bb 91       		.byte	0x91
 3823 07bc 4C       		.sleb128 -52
 3824 07bd 1C       		.uleb128 0x1c
 3825 07be 88050000 		.4byte	.LASF117
 3826 07c2 01       		.byte	0x1
 3827 07c3 D201     		.2byte	0x1d2
 3828 07c5 0A070000 		.4byte	0x70a
 3829 07c9 02       		.uleb128 0x2
 3830 07ca 91       		.byte	0x91
 3831 07cb 40       		.sleb128 -64
 3832 07cc 1C       		.uleb128 0x1c
 3833 07cd F4020000 		.4byte	.LASF118
 3834 07d1 01       		.byte	0x1
 3835 07d2 D301     		.2byte	0x1d3
 3836 07d4 0A070000 		.4byte	0x70a
 3837 07d8 03       		.uleb128 0x3
 3838 07d9 91       		.byte	0x91
 3839 07da B47F     		.sleb128 -76
 3840 07dc 1C       		.uleb128 0x1c
 3841 07dd 3A020000 		.4byte	.LASF59
 3842 07e1 01       		.byte	0x1
 3843 07e2 E301     		.2byte	0x1e3
 3844 07e4 7E000000 		.4byte	0x7e
 3845 07e8 03       		.uleb128 0x3
 3846 07e9 91       		.byte	0x91
 3847 07ea B07F     		.sleb128 -80
 3848 07ec 1C       		.uleb128 0x1c
 3849 07ed 96050000 		.4byte	.LASF60
 3850 07f1 01       		.byte	0x1
 3851 07f2 E301     		.2byte	0x1e3
 3852 07f4 7E000000 		.4byte	0x7e
 3853 07f8 03       		.uleb128 0x3
 3854 07f9 91       		.byte	0x91
 3855 07fa AC7F     		.sleb128 -84
 3856 07fc 1C       		.uleb128 0x1c
 3857 07fd 16010000 		.4byte	.LASF119
 3858 0801 01       		.byte	0x1
 3859 0802 E301     		.2byte	0x1e3
 3860 0804 7E000000 		.4byte	0x7e
 3861 0808 03       		.uleb128 0x3
 3862 0809 91       		.byte	0x91
 3863 080a A87F     		.sleb128 -88
 3864 080c 1C       		.uleb128 0x1c
 3865 080d 9C040000 		.4byte	.LASF120
 3866 0811 01       		.byte	0x1
 3867 0812 E301     		.2byte	0x1e3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 88


 3868 0814 7E000000 		.4byte	0x7e
 3869 0818 03       		.uleb128 0x3
 3870 0819 91       		.byte	0x91
 3871 081a A47F     		.sleb128 -92
 3872 081c 1C       		.uleb128 0x1c
 3873 081d 53040000 		.4byte	.LASF121
 3874 0821 01       		.byte	0x1
 3875 0822 E301     		.2byte	0x1e3
 3876 0824 7E000000 		.4byte	0x7e
 3877 0828 03       		.uleb128 0x3
 3878 0829 91       		.byte	0x91
 3879 082a A07F     		.sleb128 -96
 3880 082c 00       		.byte	0
 3881 082d 1F       		.uleb128 0x1f
 3882 082e 44020000 		.4byte	.LASF122
 3883 0832 01       		.byte	0x1
 3884 0833 0B02     		.2byte	0x20b
 3885 0835 00000000 		.4byte	.LFB82
 3886 0839 68010000 		.4byte	.LFE82-.LFB82
 3887 083d 01       		.uleb128 0x1
 3888 083e 9C       		.byte	0x9c
 3889 083f 5D080000 		.4byte	0x85d
 3890 0843 14       		.uleb128 0x14
 3891 0844 DA000000 		.4byte	.LBB9
 3892 0848 38000000 		.4byte	.LBE9-.LBB9
 3893 084c 1C       		.uleb128 0x1c
 3894 084d B3060000 		.4byte	.LASF123
 3895 0851 01       		.byte	0x1
 3896 0852 3902     		.2byte	0x239
 3897 0854 0A070000 		.4byte	0x70a
 3898 0858 02       		.uleb128 0x2
 3899 0859 91       		.byte	0x91
 3900 085a 6C       		.sleb128 -20
 3901 085b 00       		.byte	0
 3902 085c 00       		.byte	0
 3903 085d 1B       		.uleb128 0x1b
 3904 085e A3020000 		.4byte	.LASF124
 3905 0862 01       		.byte	0x1
 3906 0863 4C02     		.2byte	0x24c
 3907 0865 57000000 		.4byte	0x57
 3908 0869 00000000 		.4byte	.LFB83
 3909 086d 44010000 		.4byte	.LFE83-.LFB83
 3910 0871 01       		.uleb128 0x1
 3911 0872 9C       		.byte	0x9c
 3912 0873 19090000 		.4byte	0x919
 3913 0877 1C       		.uleb128 0x1c
 3914 0878 34040000 		.4byte	.LASF125
 3915 087c 01       		.byte	0x1
 3916 087d 5702     		.2byte	0x257
 3917 087f 57000000 		.4byte	0x57
 3918 0883 02       		.uleb128 0x2
 3919 0884 91       		.byte	0x91
 3920 0885 74       		.sleb128 -12
 3921 0886 14       		.uleb128 0x14
 3922 0887 30000000 		.4byte	.LBB10
 3923 088b DE000000 		.4byte	.LBE10-.LBB10
 3924 088f 1C       		.uleb128 0x1c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 89


 3925 0890 68020000 		.4byte	.LASF97
 3926 0894 01       		.byte	0x1
 3927 0895 5C02     		.2byte	0x25c
 3928 0897 19090000 		.4byte	0x919
 3929 089b 02       		.uleb128 0x2
 3930 089c 91       		.byte	0x91
 3931 089d 54       		.sleb128 -44
 3932 089e 1A       		.uleb128 0x1a
 3933 089f 7400     		.ascii	"t\000"
 3934 08a1 01       		.byte	0x1
 3935 08a2 6202     		.2byte	0x262
 3936 08a4 2D010000 		.4byte	0x12d
 3937 08a8 03       		.uleb128 0x3
 3938 08a9 91       		.byte	0x91
 3939 08aa 947F     		.sleb128 -108
 3940 08ac 1C       		.uleb128 0x1c
 3941 08ad E4010000 		.4byte	.LASF126
 3942 08b1 01       		.byte	0x1
 3943 08b2 6502     		.2byte	0x265
 3944 08b4 7E000000 		.4byte	0x7e
 3945 08b8 02       		.uleb128 0x2
 3946 08b9 91       		.byte	0x91
 3947 08ba 50       		.sleb128 -48
 3948 08bb 1C       		.uleb128 0x1c
 3949 08bc CA040000 		.4byte	.LASF127
 3950 08c0 01       		.byte	0x1
 3951 08c1 6502     		.2byte	0x265
 3952 08c3 7E000000 		.4byte	0x7e
 3953 08c7 02       		.uleb128 0x2
 3954 08c8 91       		.byte	0x91
 3955 08c9 4C       		.sleb128 -52
 3956 08ca 1A       		.uleb128 0x1a
 3957 08cb 64617900 		.ascii	"day\000"
 3958 08cf 01       		.byte	0x1
 3959 08d0 6502     		.2byte	0x265
 3960 08d2 7E000000 		.4byte	0x7e
 3961 08d6 02       		.uleb128 0x2
 3962 08d7 91       		.byte	0x91
 3963 08d8 48       		.sleb128 -56
 3964 08d9 1C       		.uleb128 0x1c
 3965 08da 52050000 		.4byte	.LASF128
 3966 08de 01       		.byte	0x1
 3967 08df 6502     		.2byte	0x265
 3968 08e1 7E000000 		.4byte	0x7e
 3969 08e5 02       		.uleb128 0x2
 3970 08e6 91       		.byte	0x91
 3971 08e7 44       		.sleb128 -60
 3972 08e8 1C       		.uleb128 0x1c
 3973 08e9 66070000 		.4byte	.LASF129
 3974 08ed 01       		.byte	0x1
 3975 08ee 6502     		.2byte	0x265
 3976 08f0 7E000000 		.4byte	0x7e
 3977 08f4 02       		.uleb128 0x2
 3978 08f5 91       		.byte	0x91
 3979 08f6 40       		.sleb128 -64
 3980 08f7 1C       		.uleb128 0x1c
 3981 08f8 DD010000 		.4byte	.LASF130
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 90


 3982 08fc 01       		.byte	0x1
 3983 08fd 6502     		.2byte	0x265
 3984 08ff 7E000000 		.4byte	0x7e
 3985 0903 03       		.uleb128 0x3
 3986 0904 91       		.byte	0x91
 3987 0905 BC7F     		.sleb128 -68
 3988 0907 1C       		.uleb128 0x1c
 3989 0908 00000000 		.4byte	.LASF131
 3990 090c 01       		.byte	0x1
 3991 090d 6502     		.2byte	0x265
 3992 090f 7E000000 		.4byte	0x7e
 3993 0913 03       		.uleb128 0x3
 3994 0914 91       		.byte	0x91
 3995 0915 B87F     		.sleb128 -72
 3996 0917 00       		.byte	0
 3997 0918 00       		.byte	0
 3998 0919 08       		.uleb128 0x8
 3999 091a F7000000 		.4byte	0xf7
 4000 091e 29090000 		.4byte	0x929
 4001 0922 09       		.uleb128 0x9
 4002 0923 05010000 		.4byte	0x105
 4003 0927 1D       		.byte	0x1d
 4004 0928 00       		.byte	0
 4005 0929 21       		.uleb128 0x21
 4006 092a 0E020000 		.4byte	.LASF132
 4007 092e 01       		.byte	0x1
 4008 092f 8502     		.2byte	0x285
 4009 0931 AD000000 		.4byte	0xad
 4010 0935 00000000 		.4byte	.LFB84
 4011 0939 14000000 		.4byte	.LFE84-.LFB84
 4012 093d 01       		.uleb128 0x1
 4013 093e 9C       		.byte	0x9c
 4014 093f 1D       		.uleb128 0x1d
 4015 0940 E8020000 		.4byte	.LASF133
 4016 0944 01       		.byte	0x1
 4017 0945 8A02     		.2byte	0x28a
 4018 0947 00000000 		.4byte	.LFB85
 4019 094b 1A000000 		.4byte	.LFE85-.LFB85
 4020 094f 01       		.uleb128 0x1
 4021 0950 9C       		.byte	0x9c
 4022 0951 1D       		.uleb128 0x1d
 4023 0952 F2000000 		.4byte	.LASF134
 4024 0956 01       		.byte	0x1
 4025 0957 9702     		.2byte	0x297
 4026 0959 00000000 		.4byte	.LFB86
 4027 095d 2A000000 		.4byte	.LFE86-.LFB86
 4028 0961 01       		.uleb128 0x1
 4029 0962 9C       		.byte	0x9c
 4030 0963 1B       		.uleb128 0x1b
 4031 0964 04060000 		.4byte	.LASF135
 4032 0968 01       		.byte	0x1
 4033 0969 AA02     		.2byte	0x2aa
 4034 096b 37030000 		.4byte	0x337
 4035 096f 00000000 		.4byte	.LFB87
 4036 0973 7C020000 		.4byte	.LFE87-.LFB87
 4037 0977 01       		.uleb128 0x1
 4038 0978 9C       		.byte	0x9c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 91


 4039 0979 0C0A0000 		.4byte	0xa0c
 4040 097d 1A       		.uleb128 0x1a
 4041 097e 67707300 		.ascii	"gps\000"
 4042 0982 01       		.byte	0x1
 4043 0983 AB02     		.2byte	0x2ab
 4044 0985 37030000 		.4byte	0x337
 4045 0989 02       		.uleb128 0x2
 4046 098a 91       		.byte	0x91
 4047 098b 4C       		.sleb128 -52
 4048 098c 1C       		.uleb128 0x1c
 4049 098d 27080000 		.4byte	.LASF136
 4050 0991 01       		.byte	0x1
 4051 0992 B702     		.2byte	0x2b7
 4052 0994 57000000 		.4byte	0x57
 4053 0998 02       		.uleb128 0x2
 4054 0999 91       		.byte	0x91
 4055 099a 68       		.sleb128 -24
 4056 099b 1C       		.uleb128 0x1c
 4057 099c 2E070000 		.4byte	.LASF137
 4058 09a0 01       		.byte	0x1
 4059 09a1 DE02     		.2byte	0x2de
 4060 09a3 AD000000 		.4byte	0xad
 4061 09a7 02       		.uleb128 0x2
 4062 09a8 91       		.byte	0x91
 4063 09a9 67       		.sleb128 -25
 4064 09aa 1A       		.uleb128 0x1a
 4065 09ab 6C617400 		.ascii	"lat\000"
 4066 09af 01       		.byte	0x1
 4067 09b0 EA02     		.2byte	0x2ea
 4068 09b2 E9000000 		.4byte	0xe9
 4069 09b6 02       		.uleb128 0x2
 4070 09b7 91       		.byte	0x91
 4071 09b8 48       		.sleb128 -56
 4072 09b9 1A       		.uleb128 0x1a
 4073 09ba 6C6F6E00 		.ascii	"lon\000"
 4074 09be 01       		.byte	0x1
 4075 09bf EB02     		.2byte	0x2eb
 4076 09c1 E9000000 		.4byte	0xe9
 4077 09c5 02       		.uleb128 0x2
 4078 09c6 91       		.byte	0x91
 4079 09c7 44       		.sleb128 -60
 4080 09c8 1A       		.uleb128 0x1a
 4081 09c9 616C7400 		.ascii	"alt\000"
 4082 09cd 01       		.byte	0x1
 4083 09ce EC02     		.2byte	0x2ec
 4084 09d0 E9000000 		.4byte	0xe9
 4085 09d4 02       		.uleb128 0x2
 4086 09d5 91       		.byte	0x91
 4087 09d6 40       		.sleb128 -64
 4088 09d7 1A       		.uleb128 0x1a
 4089 09d8 733100   		.ascii	"s1\000"
 4090 09db 01       		.byte	0x1
 4091 09dc F002     		.2byte	0x2f0
 4092 09de 0C010000 		.4byte	0x10c
 4093 09e2 02       		.uleb128 0x2
 4094 09e3 91       		.byte	0x91
 4095 09e4 60       		.sleb128 -32
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 92


 4096 09e5 1C       		.uleb128 0x1c
 4097 09e6 37050000 		.4byte	.LASF110
 4098 09ea 01       		.byte	0x1
 4099 09eb F302     		.2byte	0x2f3
 4100 09ed 7E000000 		.4byte	0x7e
 4101 09f1 02       		.uleb128 0x2
 4102 09f2 91       		.byte	0x91
 4103 09f3 5C       		.sleb128 -36
 4104 09f4 14       		.uleb128 0x14
 4105 09f5 B4000000 		.4byte	.LBB11
 4106 09f9 38000000 		.4byte	.LBE11-.LBB11
 4107 09fd 1A       		.uleb128 0x1a
 4108 09fe 6900     		.ascii	"i\000"
 4109 0a00 01       		.byte	0x1
 4110 0a01 DF02     		.2byte	0x2df
 4111 0a03 B9000000 		.4byte	0xb9
 4112 0a07 02       		.uleb128 0x2
 4113 0a08 91       		.byte	0x91
 4114 0a09 6E       		.sleb128 -18
 4115 0a0a 00       		.byte	0
 4116 0a0b 00       		.byte	0
 4117 0a0c 22       		.uleb128 0x22
 4118 0a0d 40010000 		.4byte	.LASF138
 4119 0a11 0A       		.byte	0xa
 4120 0a12 1207     		.2byte	0x712
 4121 0a14 180A0000 		.4byte	0xa18
 4122 0a18 0F       		.uleb128 0xf
 4123 0a19 97000000 		.4byte	0x97
 4124 0a1d 23       		.uleb128 0x23
 4125 0a1e 28000000 		.4byte	.LASF139
 4126 0a22 07       		.byte	0x7
 4127 0a23 11       		.byte	0x11
 4128 0a24 87030000 		.4byte	0x387
 4129 0a28 05       		.uleb128 0x5
 4130 0a29 03       		.byte	0x3
 4131 0a2a 00000000 		.4byte	buffer_overflow
 4132 0a2e 23       		.uleb128 0x23
 4133 0a2f A8040000 		.4byte	.LASF140
 4134 0a33 07       		.byte	0x7
 4135 0a34 22       		.byte	0x22
 4136 0a35 B9000000 		.4byte	0xb9
 4137 0a39 05       		.uleb128 0x5
 4138 0a3a 03       		.byte	0x3
 4139 0a3b 00000000 		.4byte	dataPointsInStack
 4140 0a3f 23       		.uleb128 0x23
 4141 0a40 B5070000 		.4byte	.LASF141
 4142 0a44 07       		.byte	0x7
 4143 0a45 23       		.byte	0x23
 4144 0a46 B9000000 		.4byte	0xb9
 4145 0a4a 05       		.uleb128 0x5
 4146 0a4b 03       		.byte	0x3
 4147 0a4c 00000000 		.4byte	dataPointsInStackDesired
 4148 0a50 08       		.uleb128 0x8
 4149 0a51 3B020000 		.4byte	0x23b
 4150 0a55 600A0000 		.4byte	0xa60
 4151 0a59 09       		.uleb128 0x9
 4152 0a5a 05010000 		.4byte	0x105
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 93


 4153 0a5e 95       		.byte	0x95
 4154 0a5f 00       		.byte	0
 4155 0a60 23       		.uleb128 0x23
 4156 0a61 AC030000 		.4byte	.LASF142
 4157 0a65 07       		.byte	0x7
 4158 0a66 24       		.byte	0x24
 4159 0a67 500A0000 		.4byte	0xa50
 4160 0a6b 05       		.uleb128 0x5
 4161 0a6c 03       		.byte	0x3
 4162 0a6d 00000000 		.4byte	data
 4163 0a71 23       		.uleb128 0x23
 4164 0a72 22010000 		.4byte	.LASF143
 4165 0a76 08       		.byte	0x8
 4166 0a77 20       		.byte	0x20
 4167 0a78 AD000000 		.4byte	0xad
 4168 0a7c 05       		.uleb128 0x5
 4169 0a7d 03       		.byte	0x3
 4170 0a7e 00000000 		.4byte	modem_state
 4171 0a82 23       		.uleb128 0x23
 4172 0a83 17070000 		.4byte	.LASF144
 4173 0a87 08       		.byte	0x8
 4174 0a88 63       		.byte	0x63
 4175 0a89 DD000000 		.4byte	0xdd
 4176 0a8d 05       		.uleb128 0x5
 4177 0a8e 03       		.byte	0x3
 4178 0a8f 00000000 		.4byte	modem_start_time_stamp
 4179 0a93 23       		.uleb128 0x23
 4180 0a94 C2030000 		.4byte	.LASF71
 4181 0a98 08       		.byte	0x8
 4182 0a99 64       		.byte	0x64
 4183 0a9a 73020000 		.4byte	0x273
 4184 0a9e 05       		.uleb128 0x5
 4185 0a9f 03       		.byte	0x3
 4186 0aa0 00000000 		.4byte	modem_info
 4187 0aa4 23       		.uleb128 0x23
 4188 0aa5 4D010000 		.4byte	.LASF145
 4189 0aa9 08       		.byte	0x8
 4190 0aaa 65       		.byte	0x65
 4191 0aab E7020000 		.4byte	0x2e7
 4192 0aaf 05       		.uleb128 0x5
 4193 0ab0 03       		.byte	0x3
 4194 0ab1 00000000 		.4byte	modem_stats
 4195 0ab5 23       		.uleb128 0x23
 4196 0ab6 3D050000 		.4byte	.LASF146
 4197 0aba 08       		.byte	0x8
 4198 0abb 66       		.byte	0x66
 4199 0abc 8E030000 		.4byte	0x38e
 4200 0ac0 05       		.uleb128 0x5
 4201 0ac1 03       		.byte	0x3
 4202 0ac2 00000000 		.4byte	updatable_parameters
 4203 0ac6 08       		.uleb128 0x8
 4204 0ac7 F7000000 		.4byte	0xf7
 4205 0acb D70A0000 		.4byte	0xad7
 4206 0acf 24       		.uleb128 0x24
 4207 0ad0 05010000 		.4byte	0x105
 4208 0ad4 0F27     		.2byte	0x270f
 4209 0ad6 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 94


 4210 0ad7 23       		.uleb128 0x23
 4211 0ad8 31080000 		.4byte	.LASF147
 4212 0adc 09       		.byte	0x9
 4213 0add 18       		.byte	0x18
 4214 0ade C60A0000 		.4byte	0xac6
 4215 0ae2 05       		.uleb128 0x5
 4216 0ae3 03       		.byte	0x3
 4217 0ae4 00000000 		.4byte	http_request
 4218 0ae8 23       		.uleb128 0x23
 4219 0ae9 B8010000 		.4byte	.LASF148
 4220 0aed 09       		.byte	0x9
 4221 0aee 19       		.byte	0x19
 4222 0aef C60A0000 		.4byte	0xac6
 4223 0af3 05       		.uleb128 0x5
 4224 0af4 03       		.byte	0x3
 4225 0af5 00000000 		.4byte	http_body
 4226 0af9 08       		.uleb128 0x8
 4227 0afa F7000000 		.4byte	0xf7
 4228 0afe 090B0000 		.4byte	0xb09
 4229 0b02 09       		.uleb128 0x9
 4230 0b03 05010000 		.4byte	0x105
 4231 0b07 C7       		.byte	0xc7
 4232 0b08 00       		.byte	0
 4233 0b09 23       		.uleb128 0x23
 4234 0b0a C1060000 		.4byte	.LASF149
 4235 0b0e 09       		.byte	0x9
 4236 0b0f 1A       		.byte	0x1a
 4237 0b10 F90A0000 		.4byte	0xaf9
 4238 0b14 05       		.uleb128 0x5
 4239 0b15 03       		.byte	0x3
 4240 0b16 00000000 		.4byte	http_route
 4241 0b1a 23       		.uleb128 0x23
 4242 0b1b 25060000 		.4byte	.LASF150
 4243 0b1f 09       		.byte	0x9
 4244 0b20 41       		.byte	0x41
 4245 0b21 09040000 		.4byte	0x409
 4246 0b25 05       		.uleb128 0x5
 4247 0b26 03       		.byte	0x3
 4248 0b27 00000000 		.4byte	system_info
 4249 0b2b 23       		.uleb128 0x23
 4250 0b2c CE050000 		.4byte	.LASF151
 4251 0b30 09       		.byte	0x9
 4252 0b31 53       		.byte	0x53
 4253 0b32 45040000 		.4byte	0x445
 4254 0b36 05       		.uleb128 0x5
 4255 0b37 03       		.byte	0x3
 4256 0b38 00000000 		.4byte	system_settings
 4257 0b3c 23       		.uleb128 0x23
 4258 0b3d 33010000 		.4byte	.LASF152
 4259 0b41 09       		.byte	0x9
 4260 0b42 6F       		.byte	0x6f
 4261 0b43 D2030000 		.4byte	0x3d2
 4262 0b47 05       		.uleb128 0x5
 4263 0b48 03       		.byte	0x3
 4264 0b49 00000000 		.4byte	alarmMeasure
 4265 0b4d 23       		.uleb128 0x23
 4266 0b4e 87010000 		.4byte	.LASF153
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 95


 4267 0b52 09       		.byte	0x9
 4268 0b53 70       		.byte	0x70
 4269 0b54 AD000000 		.4byte	0xad
 4270 0b58 05       		.uleb128 0x5
 4271 0b59 03       		.byte	0x3
 4272 0b5a 00000000 		.4byte	timeToMeasure
 4273 0b5e 23       		.uleb128 0x23
 4274 0b5f 29030000 		.4byte	.LASF154
 4275 0b63 09       		.byte	0x9
 4276 0b64 71       		.byte	0x71
 4277 0b65 D2030000 		.4byte	0x3d2
 4278 0b69 05       		.uleb128 0x5
 4279 0b6a 03       		.byte	0x3
 4280 0b6b 00000000 		.4byte	alarmSync
 4281 0b6f 23       		.uleb128 0x23
 4282 0b70 AD010000 		.4byte	.LASF155
 4283 0b74 09       		.byte	0x9
 4284 0b75 72       		.byte	0x72
 4285 0b76 AD000000 		.4byte	0xad
 4286 0b7a 05       		.uleb128 0x5
 4287 0b7b 03       		.byte	0x3
 4288 0b7c 00000000 		.4byte	timeToSync
 4289 0b80 23       		.uleb128 0x23
 4290 0b81 15050000 		.4byte	.LASF156
 4291 0b85 09       		.byte	0x9
 4292 0b86 73       		.byte	0x73
 4293 0b87 AD000000 		.4byte	0xad
 4294 0b8b 05       		.uleb128 0x5
 4295 0b8c 03       		.byte	0x3
 4296 0b8d 00000000 		.4byte	timeToSycnRemoteParams
 4297 0b91 25       		.uleb128 0x25
 4298 0b92 68657900 		.ascii	"hey\000"
 4299 0b96 09       		.byte	0x9
 4300 0b97 74       		.byte	0x74
 4301 0b98 AD000000 		.4byte	0xad
 4302 0b9c 05       		.uleb128 0x5
 4303 0b9d 03       		.byte	0x3
 4304 0b9e 00000000 		.4byte	hey
 4305 0ba2 08       		.uleb128 0x8
 4306 0ba3 F7000000 		.4byte	0xf7
 4307 0ba7 B30B0000 		.4byte	0xbb3
 4308 0bab 24       		.uleb128 0x24
 4309 0bac 05010000 		.4byte	0x105
 4310 0bb0 FF03     		.2byte	0x3ff
 4311 0bb2 00       		.byte	0
 4312 0bb3 23       		.uleb128 0x23
 4313 0bb4 ED040000 		.4byte	.LASF157
 4314 0bb8 01       		.byte	0x1
 4315 0bb9 05       		.byte	0x5
 4316 0bba A20B0000 		.4byte	0xba2
 4317 0bbe 05       		.uleb128 0x5
 4318 0bbf 03       		.byte	0x3
 4319 0bc0 00000000 		.4byte	uart_received_string
 4320 0bc4 23       		.uleb128 0x23
 4321 0bc5 DF060000 		.4byte	.LASF158
 4322 0bc9 01       		.byte	0x1
 4323 0bca 06       		.byte	0x6
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 96


 4324 0bcb D1000000 		.4byte	0xd1
 4325 0bcf 05       		.uleb128 0x5
 4326 0bd0 03       		.byte	0x3
 4327 0bd1 00000000 		.4byte	uart_string_index
 4328 0bd5 00       		.byte	0
 4329              		.section	.debug_abbrev,"",%progbits
 4330              	.Ldebug_abbrev0:
 4331 0000 01       		.uleb128 0x1
 4332 0001 11       		.uleb128 0x11
 4333 0002 01       		.byte	0x1
 4334 0003 25       		.uleb128 0x25
 4335 0004 0E       		.uleb128 0xe
 4336 0005 13       		.uleb128 0x13
 4337 0006 0B       		.uleb128 0xb
 4338 0007 03       		.uleb128 0x3
 4339 0008 0E       		.uleb128 0xe
 4340 0009 1B       		.uleb128 0x1b
 4341 000a 0E       		.uleb128 0xe
 4342 000b 55       		.uleb128 0x55
 4343 000c 17       		.uleb128 0x17
 4344 000d 11       		.uleb128 0x11
 4345 000e 01       		.uleb128 0x1
 4346 000f 10       		.uleb128 0x10
 4347 0010 17       		.uleb128 0x17
 4348 0011 00       		.byte	0
 4349 0012 00       		.byte	0
 4350 0013 02       		.uleb128 0x2
 4351 0014 24       		.uleb128 0x24
 4352 0015 00       		.byte	0
 4353 0016 0B       		.uleb128 0xb
 4354 0017 0B       		.uleb128 0xb
 4355 0018 3E       		.uleb128 0x3e
 4356 0019 0B       		.uleb128 0xb
 4357 001a 03       		.uleb128 0x3
 4358 001b 0E       		.uleb128 0xe
 4359 001c 00       		.byte	0
 4360 001d 00       		.byte	0
 4361 001e 03       		.uleb128 0x3
 4362 001f 16       		.uleb128 0x16
 4363 0020 00       		.byte	0
 4364 0021 03       		.uleb128 0x3
 4365 0022 0E       		.uleb128 0xe
 4366 0023 3A       		.uleb128 0x3a
 4367 0024 0B       		.uleb128 0xb
 4368 0025 3B       		.uleb128 0x3b
 4369 0026 0B       		.uleb128 0xb
 4370 0027 49       		.uleb128 0x49
 4371 0028 13       		.uleb128 0x13
 4372 0029 00       		.byte	0
 4373 002a 00       		.byte	0
 4374 002b 04       		.uleb128 0x4
 4375 002c 24       		.uleb128 0x24
 4376 002d 00       		.byte	0
 4377 002e 0B       		.uleb128 0xb
 4378 002f 0B       		.uleb128 0xb
 4379 0030 3E       		.uleb128 0x3e
 4380 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 97


 4381 0032 03       		.uleb128 0x3
 4382 0033 08       		.uleb128 0x8
 4383 0034 00       		.byte	0
 4384 0035 00       		.byte	0
 4385 0036 05       		.uleb128 0x5
 4386 0037 16       		.uleb128 0x16
 4387 0038 00       		.byte	0
 4388 0039 03       		.uleb128 0x3
 4389 003a 0E       		.uleb128 0xe
 4390 003b 3A       		.uleb128 0x3a
 4391 003c 0B       		.uleb128 0xb
 4392 003d 3B       		.uleb128 0x3b
 4393 003e 05       		.uleb128 0x5
 4394 003f 49       		.uleb128 0x49
 4395 0040 13       		.uleb128 0x13
 4396 0041 00       		.byte	0
 4397 0042 00       		.byte	0
 4398 0043 06       		.uleb128 0x6
 4399 0044 0F       		.uleb128 0xf
 4400 0045 00       		.byte	0
 4401 0046 0B       		.uleb128 0xb
 4402 0047 0B       		.uleb128 0xb
 4403 0048 49       		.uleb128 0x49
 4404 0049 13       		.uleb128 0x13
 4405 004a 00       		.byte	0
 4406 004b 00       		.byte	0
 4407 004c 07       		.uleb128 0x7
 4408 004d 26       		.uleb128 0x26
 4409 004e 00       		.byte	0
 4410 004f 49       		.uleb128 0x49
 4411 0050 13       		.uleb128 0x13
 4412 0051 00       		.byte	0
 4413 0052 00       		.byte	0
 4414 0053 08       		.uleb128 0x8
 4415 0054 01       		.uleb128 0x1
 4416 0055 01       		.byte	0x1
 4417 0056 49       		.uleb128 0x49
 4418 0057 13       		.uleb128 0x13
 4419 0058 01       		.uleb128 0x1
 4420 0059 13       		.uleb128 0x13
 4421 005a 00       		.byte	0
 4422 005b 00       		.byte	0
 4423 005c 09       		.uleb128 0x9
 4424 005d 21       		.uleb128 0x21
 4425 005e 00       		.byte	0
 4426 005f 49       		.uleb128 0x49
 4427 0060 13       		.uleb128 0x13
 4428 0061 2F       		.uleb128 0x2f
 4429 0062 0B       		.uleb128 0xb
 4430 0063 00       		.byte	0
 4431 0064 00       		.byte	0
 4432 0065 0A       		.uleb128 0xa
 4433 0066 13       		.uleb128 0x13
 4434 0067 01       		.byte	0x1
 4435 0068 03       		.uleb128 0x3
 4436 0069 08       		.uleb128 0x8
 4437 006a 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 98


 4438 006b 0B       		.uleb128 0xb
 4439 006c 3A       		.uleb128 0x3a
 4440 006d 0B       		.uleb128 0xb
 4441 006e 3B       		.uleb128 0x3b
 4442 006f 0B       		.uleb128 0xb
 4443 0070 01       		.uleb128 0x1
 4444 0071 13       		.uleb128 0x13
 4445 0072 00       		.byte	0
 4446 0073 00       		.byte	0
 4447 0074 0B       		.uleb128 0xb
 4448 0075 0D       		.uleb128 0xd
 4449 0076 00       		.byte	0
 4450 0077 03       		.uleb128 0x3
 4451 0078 0E       		.uleb128 0xe
 4452 0079 3A       		.uleb128 0x3a
 4453 007a 0B       		.uleb128 0xb
 4454 007b 3B       		.uleb128 0x3b
 4455 007c 0B       		.uleb128 0xb
 4456 007d 49       		.uleb128 0x49
 4457 007e 13       		.uleb128 0x13
 4458 007f 38       		.uleb128 0x38
 4459 0080 0B       		.uleb128 0xb
 4460 0081 00       		.byte	0
 4461 0082 00       		.byte	0
 4462 0083 0C       		.uleb128 0xc
 4463 0084 13       		.uleb128 0x13
 4464 0085 01       		.byte	0x1
 4465 0086 0B       		.uleb128 0xb
 4466 0087 05       		.uleb128 0x5
 4467 0088 3A       		.uleb128 0x3a
 4468 0089 0B       		.uleb128 0xb
 4469 008a 3B       		.uleb128 0x3b
 4470 008b 0B       		.uleb128 0xb
 4471 008c 01       		.uleb128 0x1
 4472 008d 13       		.uleb128 0x13
 4473 008e 00       		.byte	0
 4474 008f 00       		.byte	0
 4475 0090 0D       		.uleb128 0xd
 4476 0091 13       		.uleb128 0x13
 4477 0092 01       		.byte	0x1
 4478 0093 0B       		.uleb128 0xb
 4479 0094 0B       		.uleb128 0xb
 4480 0095 3A       		.uleb128 0x3a
 4481 0096 0B       		.uleb128 0xb
 4482 0097 3B       		.uleb128 0x3b
 4483 0098 0B       		.uleb128 0xb
 4484 0099 01       		.uleb128 0x1
 4485 009a 13       		.uleb128 0x13
 4486 009b 00       		.byte	0
 4487 009c 00       		.byte	0
 4488 009d 0E       		.uleb128 0xe
 4489 009e 0D       		.uleb128 0xd
 4490 009f 00       		.byte	0
 4491 00a0 03       		.uleb128 0x3
 4492 00a1 08       		.uleb128 0x8
 4493 00a2 3A       		.uleb128 0x3a
 4494 00a3 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 99


 4495 00a4 3B       		.uleb128 0x3b
 4496 00a5 0B       		.uleb128 0xb
 4497 00a6 49       		.uleb128 0x49
 4498 00a7 13       		.uleb128 0x13
 4499 00a8 38       		.uleb128 0x38
 4500 00a9 0B       		.uleb128 0xb
 4501 00aa 00       		.byte	0
 4502 00ab 00       		.byte	0
 4503 00ac 0F       		.uleb128 0xf
 4504 00ad 35       		.uleb128 0x35
 4505 00ae 00       		.byte	0
 4506 00af 49       		.uleb128 0x49
 4507 00b0 13       		.uleb128 0x13
 4508 00b1 00       		.byte	0
 4509 00b2 00       		.byte	0
 4510 00b3 10       		.uleb128 0x10
 4511 00b4 2E       		.uleb128 0x2e
 4512 00b5 00       		.byte	0
 4513 00b6 3F       		.uleb128 0x3f
 4514 00b7 19       		.uleb128 0x19
 4515 00b8 03       		.uleb128 0x3
 4516 00b9 0E       		.uleb128 0xe
 4517 00ba 3A       		.uleb128 0x3a
 4518 00bb 0B       		.uleb128 0xb
 4519 00bc 3B       		.uleb128 0x3b
 4520 00bd 0B       		.uleb128 0xb
 4521 00be 27       		.uleb128 0x27
 4522 00bf 19       		.uleb128 0x19
 4523 00c0 11       		.uleb128 0x11
 4524 00c1 01       		.uleb128 0x1
 4525 00c2 12       		.uleb128 0x12
 4526 00c3 06       		.uleb128 0x6
 4527 00c4 40       		.uleb128 0x40
 4528 00c5 18       		.uleb128 0x18
 4529 00c6 9642     		.uleb128 0x2116
 4530 00c8 19       		.uleb128 0x19
 4531 00c9 00       		.byte	0
 4532 00ca 00       		.byte	0
 4533 00cb 11       		.uleb128 0x11
 4534 00cc 2E       		.uleb128 0x2e
 4535 00cd 00       		.byte	0
 4536 00ce 3F       		.uleb128 0x3f
 4537 00cf 19       		.uleb128 0x19
 4538 00d0 03       		.uleb128 0x3
 4539 00d1 0E       		.uleb128 0xe
 4540 00d2 3A       		.uleb128 0x3a
 4541 00d3 0B       		.uleb128 0xb
 4542 00d4 3B       		.uleb128 0x3b
 4543 00d5 0B       		.uleb128 0xb
 4544 00d6 11       		.uleb128 0x11
 4545 00d7 01       		.uleb128 0x1
 4546 00d8 12       		.uleb128 0x12
 4547 00d9 06       		.uleb128 0x6
 4548 00da 40       		.uleb128 0x40
 4549 00db 18       		.uleb128 0x18
 4550 00dc 9642     		.uleb128 0x2116
 4551 00de 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 100


 4552 00df 00       		.byte	0
 4553 00e0 00       		.byte	0
 4554 00e1 12       		.uleb128 0x12
 4555 00e2 2E       		.uleb128 0x2e
 4556 00e3 01       		.byte	0x1
 4557 00e4 3F       		.uleb128 0x3f
 4558 00e5 19       		.uleb128 0x19
 4559 00e6 03       		.uleb128 0x3
 4560 00e7 0E       		.uleb128 0xe
 4561 00e8 3A       		.uleb128 0x3a
 4562 00e9 0B       		.uleb128 0xb
 4563 00ea 3B       		.uleb128 0x3b
 4564 00eb 0B       		.uleb128 0xb
 4565 00ec 49       		.uleb128 0x49
 4566 00ed 13       		.uleb128 0x13
 4567 00ee 11       		.uleb128 0x11
 4568 00ef 01       		.uleb128 0x1
 4569 00f0 12       		.uleb128 0x12
 4570 00f1 06       		.uleb128 0x6
 4571 00f2 40       		.uleb128 0x40
 4572 00f3 18       		.uleb128 0x18
 4573 00f4 9642     		.uleb128 0x2116
 4574 00f6 19       		.uleb128 0x19
 4575 00f7 01       		.uleb128 0x1
 4576 00f8 13       		.uleb128 0x13
 4577 00f9 00       		.byte	0
 4578 00fa 00       		.byte	0
 4579 00fb 13       		.uleb128 0x13
 4580 00fc 34       		.uleb128 0x34
 4581 00fd 00       		.byte	0
 4582 00fe 03       		.uleb128 0x3
 4583 00ff 0E       		.uleb128 0xe
 4584 0100 3A       		.uleb128 0x3a
 4585 0101 0B       		.uleb128 0xb
 4586 0102 3B       		.uleb128 0x3b
 4587 0103 0B       		.uleb128 0xb
 4588 0104 49       		.uleb128 0x49
 4589 0105 13       		.uleb128 0x13
 4590 0106 02       		.uleb128 0x2
 4591 0107 18       		.uleb128 0x18
 4592 0108 00       		.byte	0
 4593 0109 00       		.byte	0
 4594 010a 14       		.uleb128 0x14
 4595 010b 0B       		.uleb128 0xb
 4596 010c 01       		.byte	0x1
 4597 010d 11       		.uleb128 0x11
 4598 010e 01       		.uleb128 0x1
 4599 010f 12       		.uleb128 0x12
 4600 0110 06       		.uleb128 0x6
 4601 0111 00       		.byte	0
 4602 0112 00       		.byte	0
 4603 0113 15       		.uleb128 0x15
 4604 0114 2E       		.uleb128 0x2e
 4605 0115 01       		.byte	0x1
 4606 0116 3F       		.uleb128 0x3f
 4607 0117 19       		.uleb128 0x19
 4608 0118 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 101


 4609 0119 0E       		.uleb128 0xe
 4610 011a 3A       		.uleb128 0x3a
 4611 011b 0B       		.uleb128 0xb
 4612 011c 3B       		.uleb128 0x3b
 4613 011d 0B       		.uleb128 0xb
 4614 011e 27       		.uleb128 0x27
 4615 011f 19       		.uleb128 0x19
 4616 0120 49       		.uleb128 0x49
 4617 0121 13       		.uleb128 0x13
 4618 0122 11       		.uleb128 0x11
 4619 0123 01       		.uleb128 0x1
 4620 0124 12       		.uleb128 0x12
 4621 0125 06       		.uleb128 0x6
 4622 0126 40       		.uleb128 0x40
 4623 0127 18       		.uleb128 0x18
 4624 0128 9642     		.uleb128 0x2116
 4625 012a 19       		.uleb128 0x19
 4626 012b 01       		.uleb128 0x1
 4627 012c 13       		.uleb128 0x13
 4628 012d 00       		.byte	0
 4629 012e 00       		.byte	0
 4630 012f 16       		.uleb128 0x16
 4631 0130 05       		.uleb128 0x5
 4632 0131 00       		.byte	0
 4633 0132 03       		.uleb128 0x3
 4634 0133 0E       		.uleb128 0xe
 4635 0134 3A       		.uleb128 0x3a
 4636 0135 0B       		.uleb128 0xb
 4637 0136 3B       		.uleb128 0x3b
 4638 0137 0B       		.uleb128 0xb
 4639 0138 49       		.uleb128 0x49
 4640 0139 13       		.uleb128 0x13
 4641 013a 02       		.uleb128 0x2
 4642 013b 18       		.uleb128 0x18
 4643 013c 00       		.byte	0
 4644 013d 00       		.byte	0
 4645 013e 17       		.uleb128 0x17
 4646 013f 34       		.uleb128 0x34
 4647 0140 00       		.byte	0
 4648 0141 03       		.uleb128 0x3
 4649 0142 08       		.uleb128 0x8
 4650 0143 3A       		.uleb128 0x3a
 4651 0144 0B       		.uleb128 0xb
 4652 0145 3B       		.uleb128 0x3b
 4653 0146 0B       		.uleb128 0xb
 4654 0147 49       		.uleb128 0x49
 4655 0148 13       		.uleb128 0x13
 4656 0149 02       		.uleb128 0x2
 4657 014a 18       		.uleb128 0x18
 4658 014b 00       		.byte	0
 4659 014c 00       		.byte	0
 4660 014d 18       		.uleb128 0x18
 4661 014e 2E       		.uleb128 0x2e
 4662 014f 01       		.byte	0x1
 4663 0150 3F       		.uleb128 0x3f
 4664 0151 19       		.uleb128 0x19
 4665 0152 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 102


 4666 0153 0E       		.uleb128 0xe
 4667 0154 3A       		.uleb128 0x3a
 4668 0155 0B       		.uleb128 0xb
 4669 0156 3B       		.uleb128 0x3b
 4670 0157 05       		.uleb128 0x5
 4671 0158 27       		.uleb128 0x27
 4672 0159 19       		.uleb128 0x19
 4673 015a 49       		.uleb128 0x49
 4674 015b 13       		.uleb128 0x13
 4675 015c 11       		.uleb128 0x11
 4676 015d 01       		.uleb128 0x1
 4677 015e 12       		.uleb128 0x12
 4678 015f 06       		.uleb128 0x6
 4679 0160 40       		.uleb128 0x40
 4680 0161 18       		.uleb128 0x18
 4681 0162 9642     		.uleb128 0x2116
 4682 0164 19       		.uleb128 0x19
 4683 0165 01       		.uleb128 0x1
 4684 0166 13       		.uleb128 0x13
 4685 0167 00       		.byte	0
 4686 0168 00       		.byte	0
 4687 0169 19       		.uleb128 0x19
 4688 016a 05       		.uleb128 0x5
 4689 016b 00       		.byte	0
 4690 016c 03       		.uleb128 0x3
 4691 016d 0E       		.uleb128 0xe
 4692 016e 3A       		.uleb128 0x3a
 4693 016f 0B       		.uleb128 0xb
 4694 0170 3B       		.uleb128 0x3b
 4695 0171 05       		.uleb128 0x5
 4696 0172 49       		.uleb128 0x49
 4697 0173 13       		.uleb128 0x13
 4698 0174 02       		.uleb128 0x2
 4699 0175 18       		.uleb128 0x18
 4700 0176 00       		.byte	0
 4701 0177 00       		.byte	0
 4702 0178 1A       		.uleb128 0x1a
 4703 0179 34       		.uleb128 0x34
 4704 017a 00       		.byte	0
 4705 017b 03       		.uleb128 0x3
 4706 017c 08       		.uleb128 0x8
 4707 017d 3A       		.uleb128 0x3a
 4708 017e 0B       		.uleb128 0xb
 4709 017f 3B       		.uleb128 0x3b
 4710 0180 05       		.uleb128 0x5
 4711 0181 49       		.uleb128 0x49
 4712 0182 13       		.uleb128 0x13
 4713 0183 02       		.uleb128 0x2
 4714 0184 18       		.uleb128 0x18
 4715 0185 00       		.byte	0
 4716 0186 00       		.byte	0
 4717 0187 1B       		.uleb128 0x1b
 4718 0188 2E       		.uleb128 0x2e
 4719 0189 01       		.byte	0x1
 4720 018a 3F       		.uleb128 0x3f
 4721 018b 19       		.uleb128 0x19
 4722 018c 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 103


 4723 018d 0E       		.uleb128 0xe
 4724 018e 3A       		.uleb128 0x3a
 4725 018f 0B       		.uleb128 0xb
 4726 0190 3B       		.uleb128 0x3b
 4727 0191 05       		.uleb128 0x5
 4728 0192 49       		.uleb128 0x49
 4729 0193 13       		.uleb128 0x13
 4730 0194 11       		.uleb128 0x11
 4731 0195 01       		.uleb128 0x1
 4732 0196 12       		.uleb128 0x12
 4733 0197 06       		.uleb128 0x6
 4734 0198 40       		.uleb128 0x40
 4735 0199 18       		.uleb128 0x18
 4736 019a 9642     		.uleb128 0x2116
 4737 019c 19       		.uleb128 0x19
 4738 019d 01       		.uleb128 0x1
 4739 019e 13       		.uleb128 0x13
 4740 019f 00       		.byte	0
 4741 01a0 00       		.byte	0
 4742 01a1 1C       		.uleb128 0x1c
 4743 01a2 34       		.uleb128 0x34
 4744 01a3 00       		.byte	0
 4745 01a4 03       		.uleb128 0x3
 4746 01a5 0E       		.uleb128 0xe
 4747 01a6 3A       		.uleb128 0x3a
 4748 01a7 0B       		.uleb128 0xb
 4749 01a8 3B       		.uleb128 0x3b
 4750 01a9 05       		.uleb128 0x5
 4751 01aa 49       		.uleb128 0x49
 4752 01ab 13       		.uleb128 0x13
 4753 01ac 02       		.uleb128 0x2
 4754 01ad 18       		.uleb128 0x18
 4755 01ae 00       		.byte	0
 4756 01af 00       		.byte	0
 4757 01b0 1D       		.uleb128 0x1d
 4758 01b1 2E       		.uleb128 0x2e
 4759 01b2 00       		.byte	0
 4760 01b3 3F       		.uleb128 0x3f
 4761 01b4 19       		.uleb128 0x19
 4762 01b5 03       		.uleb128 0x3
 4763 01b6 0E       		.uleb128 0xe
 4764 01b7 3A       		.uleb128 0x3a
 4765 01b8 0B       		.uleb128 0xb
 4766 01b9 3B       		.uleb128 0x3b
 4767 01ba 05       		.uleb128 0x5
 4768 01bb 11       		.uleb128 0x11
 4769 01bc 01       		.uleb128 0x1
 4770 01bd 12       		.uleb128 0x12
 4771 01be 06       		.uleb128 0x6
 4772 01bf 40       		.uleb128 0x40
 4773 01c0 18       		.uleb128 0x18
 4774 01c1 9642     		.uleb128 0x2116
 4775 01c3 19       		.uleb128 0x19
 4776 01c4 00       		.byte	0
 4777 01c5 00       		.byte	0
 4778 01c6 1E       		.uleb128 0x1e
 4779 01c7 2E       		.uleb128 0x2e
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 104


 4780 01c8 00       		.byte	0
 4781 01c9 3F       		.uleb128 0x3f
 4782 01ca 19       		.uleb128 0x19
 4783 01cb 03       		.uleb128 0x3
 4784 01cc 0E       		.uleb128 0xe
 4785 01cd 3A       		.uleb128 0x3a
 4786 01ce 0B       		.uleb128 0xb
 4787 01cf 3B       		.uleb128 0x3b
 4788 01d0 05       		.uleb128 0x5
 4789 01d1 49       		.uleb128 0x49
 4790 01d2 13       		.uleb128 0x13
 4791 01d3 11       		.uleb128 0x11
 4792 01d4 01       		.uleb128 0x1
 4793 01d5 12       		.uleb128 0x12
 4794 01d6 06       		.uleb128 0x6
 4795 01d7 40       		.uleb128 0x40
 4796 01d8 18       		.uleb128 0x18
 4797 01d9 9642     		.uleb128 0x2116
 4798 01db 19       		.uleb128 0x19
 4799 01dc 00       		.byte	0
 4800 01dd 00       		.byte	0
 4801 01de 1F       		.uleb128 0x1f
 4802 01df 2E       		.uleb128 0x2e
 4803 01e0 01       		.byte	0x1
 4804 01e1 3F       		.uleb128 0x3f
 4805 01e2 19       		.uleb128 0x19
 4806 01e3 03       		.uleb128 0x3
 4807 01e4 0E       		.uleb128 0xe
 4808 01e5 3A       		.uleb128 0x3a
 4809 01e6 0B       		.uleb128 0xb
 4810 01e7 3B       		.uleb128 0x3b
 4811 01e8 05       		.uleb128 0x5
 4812 01e9 11       		.uleb128 0x11
 4813 01ea 01       		.uleb128 0x1
 4814 01eb 12       		.uleb128 0x12
 4815 01ec 06       		.uleb128 0x6
 4816 01ed 40       		.uleb128 0x40
 4817 01ee 18       		.uleb128 0x18
 4818 01ef 9642     		.uleb128 0x2116
 4819 01f1 19       		.uleb128 0x19
 4820 01f2 01       		.uleb128 0x1
 4821 01f3 13       		.uleb128 0x13
 4822 01f4 00       		.byte	0
 4823 01f5 00       		.byte	0
 4824 01f6 20       		.uleb128 0x20
 4825 01f7 2E       		.uleb128 0x2e
 4826 01f8 00       		.byte	0
 4827 01f9 3F       		.uleb128 0x3f
 4828 01fa 19       		.uleb128 0x19
 4829 01fb 03       		.uleb128 0x3
 4830 01fc 0E       		.uleb128 0xe
 4831 01fd 3A       		.uleb128 0x3a
 4832 01fe 0B       		.uleb128 0xb
 4833 01ff 3B       		.uleb128 0x3b
 4834 0200 05       		.uleb128 0x5
 4835 0201 11       		.uleb128 0x11
 4836 0202 01       		.uleb128 0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 105


 4837 0203 12       		.uleb128 0x12
 4838 0204 06       		.uleb128 0x6
 4839 0205 40       		.uleb128 0x40
 4840 0206 18       		.uleb128 0x18
 4841 0207 9742     		.uleb128 0x2117
 4842 0209 19       		.uleb128 0x19
 4843 020a 00       		.byte	0
 4844 020b 00       		.byte	0
 4845 020c 21       		.uleb128 0x21
 4846 020d 2E       		.uleb128 0x2e
 4847 020e 00       		.byte	0
 4848 020f 3F       		.uleb128 0x3f
 4849 0210 19       		.uleb128 0x19
 4850 0211 03       		.uleb128 0x3
 4851 0212 0E       		.uleb128 0xe
 4852 0213 3A       		.uleb128 0x3a
 4853 0214 0B       		.uleb128 0xb
 4854 0215 3B       		.uleb128 0x3b
 4855 0216 05       		.uleb128 0x5
 4856 0217 49       		.uleb128 0x49
 4857 0218 13       		.uleb128 0x13
 4858 0219 11       		.uleb128 0x11
 4859 021a 01       		.uleb128 0x1
 4860 021b 12       		.uleb128 0x12
 4861 021c 06       		.uleb128 0x6
 4862 021d 40       		.uleb128 0x40
 4863 021e 18       		.uleb128 0x18
 4864 021f 9742     		.uleb128 0x2117
 4865 0221 19       		.uleb128 0x19
 4866 0222 00       		.byte	0
 4867 0223 00       		.byte	0
 4868 0224 22       		.uleb128 0x22
 4869 0225 34       		.uleb128 0x34
 4870 0226 00       		.byte	0
 4871 0227 03       		.uleb128 0x3
 4872 0228 0E       		.uleb128 0xe
 4873 0229 3A       		.uleb128 0x3a
 4874 022a 0B       		.uleb128 0xb
 4875 022b 3B       		.uleb128 0x3b
 4876 022c 05       		.uleb128 0x5
 4877 022d 49       		.uleb128 0x49
 4878 022e 13       		.uleb128 0x13
 4879 022f 3F       		.uleb128 0x3f
 4880 0230 19       		.uleb128 0x19
 4881 0231 3C       		.uleb128 0x3c
 4882 0232 19       		.uleb128 0x19
 4883 0233 00       		.byte	0
 4884 0234 00       		.byte	0
 4885 0235 23       		.uleb128 0x23
 4886 0236 34       		.uleb128 0x34
 4887 0237 00       		.byte	0
 4888 0238 03       		.uleb128 0x3
 4889 0239 0E       		.uleb128 0xe
 4890 023a 3A       		.uleb128 0x3a
 4891 023b 0B       		.uleb128 0xb
 4892 023c 3B       		.uleb128 0x3b
 4893 023d 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 106


 4894 023e 49       		.uleb128 0x49
 4895 023f 13       		.uleb128 0x13
 4896 0240 3F       		.uleb128 0x3f
 4897 0241 19       		.uleb128 0x19
 4898 0242 02       		.uleb128 0x2
 4899 0243 18       		.uleb128 0x18
 4900 0244 00       		.byte	0
 4901 0245 00       		.byte	0
 4902 0246 24       		.uleb128 0x24
 4903 0247 21       		.uleb128 0x21
 4904 0248 00       		.byte	0
 4905 0249 49       		.uleb128 0x49
 4906 024a 13       		.uleb128 0x13
 4907 024b 2F       		.uleb128 0x2f
 4908 024c 05       		.uleb128 0x5
 4909 024d 00       		.byte	0
 4910 024e 00       		.byte	0
 4911 024f 25       		.uleb128 0x25
 4912 0250 34       		.uleb128 0x34
 4913 0251 00       		.byte	0
 4914 0252 03       		.uleb128 0x3
 4915 0253 08       		.uleb128 0x8
 4916 0254 3A       		.uleb128 0x3a
 4917 0255 0B       		.uleb128 0xb
 4918 0256 3B       		.uleb128 0x3b
 4919 0257 0B       		.uleb128 0xb
 4920 0258 49       		.uleb128 0x49
 4921 0259 13       		.uleb128 0x13
 4922 025a 3F       		.uleb128 0x3f
 4923 025b 19       		.uleb128 0x19
 4924 025c 02       		.uleb128 0x2
 4925 025d 18       		.uleb128 0x18
 4926 025e 00       		.byte	0
 4927 025f 00       		.byte	0
 4928 0260 00       		.byte	0
 4929              		.section	.debug_aranges,"",%progbits
 4930 0000 D4000000 		.4byte	0xd4
 4931 0004 0200     		.2byte	0x2
 4932 0006 00000000 		.4byte	.Ldebug_info0
 4933 000a 04       		.byte	0x4
 4934 000b 00       		.byte	0
 4935 000c 0000     		.2byte	0
 4936 000e 0000     		.2byte	0
 4937 0010 00000000 		.4byte	.LFB64
 4938 0014 44000000 		.4byte	.LFE64-.LFB64
 4939 0018 00000000 		.4byte	.LFB65
 4940 001c 6C000000 		.4byte	.LFE65-.LFB65
 4941 0020 00000000 		.4byte	.LFB66
 4942 0024 32000000 		.4byte	.LFE66-.LFB66
 4943 0028 00000000 		.4byte	.LFB67
 4944 002c 20000000 		.4byte	.LFE67-.LFB67
 4945 0030 00000000 		.4byte	.LFB68
 4946 0034 44000000 		.4byte	.LFE68-.LFB68
 4947 0038 00000000 		.4byte	.LFB69
 4948 003c E0000000 		.4byte	.LFE69-.LFB69
 4949 0040 00000000 		.4byte	.LFB70
 4950 0044 1C000000 		.4byte	.LFE70-.LFB70
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 107


 4951 0048 00000000 		.4byte	.LFB71
 4952 004c 28000000 		.4byte	.LFE71-.LFB71
 4953 0050 00000000 		.4byte	.LFB72
 4954 0054 C8000000 		.4byte	.LFE72-.LFB72
 4955 0058 00000000 		.4byte	.LFB73
 4956 005c 00010000 		.4byte	.LFE73-.LFB73
 4957 0060 00000000 		.4byte	.LFB74
 4958 0064 78000000 		.4byte	.LFE74-.LFB74
 4959 0068 00000000 		.4byte	.LFB75
 4960 006c 3C010000 		.4byte	.LFE75-.LFB75
 4961 0070 00000000 		.4byte	.LFB76
 4962 0074 B8000000 		.4byte	.LFE76-.LFB76
 4963 0078 00000000 		.4byte	.LFB77
 4964 007c 1C000000 		.4byte	.LFE77-.LFB77
 4965 0080 00000000 		.4byte	.LFB78
 4966 0084 28000000 		.4byte	.LFE78-.LFB78
 4967 0088 00000000 		.4byte	.LFB79
 4968 008c 84000000 		.4byte	.LFE79-.LFB79
 4969 0090 00000000 		.4byte	.LFB80
 4970 0094 30000000 		.4byte	.LFE80-.LFB80
 4971 0098 00000000 		.4byte	.LFB81
 4972 009c 0C020000 		.4byte	.LFE81-.LFB81
 4973 00a0 00000000 		.4byte	.LFB82
 4974 00a4 68010000 		.4byte	.LFE82-.LFB82
 4975 00a8 00000000 		.4byte	.LFB83
 4976 00ac 44010000 		.4byte	.LFE83-.LFB83
 4977 00b0 00000000 		.4byte	.LFB84
 4978 00b4 14000000 		.4byte	.LFE84-.LFB84
 4979 00b8 00000000 		.4byte	.LFB85
 4980 00bc 1A000000 		.4byte	.LFE85-.LFB85
 4981 00c0 00000000 		.4byte	.LFB86
 4982 00c4 2A000000 		.4byte	.LFE86-.LFB86
 4983 00c8 00000000 		.4byte	.LFB87
 4984 00cc 7C020000 		.4byte	.LFE87-.LFB87
 4985 00d0 00000000 		.4byte	0
 4986 00d4 00000000 		.4byte	0
 4987              		.section	.debug_ranges,"",%progbits
 4988              	.Ldebug_ranges0:
 4989 0000 00000000 		.4byte	.LFB64
 4990 0004 44000000 		.4byte	.LFE64
 4991 0008 00000000 		.4byte	.LFB65
 4992 000c 6C000000 		.4byte	.LFE65
 4993 0010 00000000 		.4byte	.LFB66
 4994 0014 32000000 		.4byte	.LFE66
 4995 0018 00000000 		.4byte	.LFB67
 4996 001c 20000000 		.4byte	.LFE67
 4997 0020 00000000 		.4byte	.LFB68
 4998 0024 44000000 		.4byte	.LFE68
 4999 0028 00000000 		.4byte	.LFB69
 5000 002c E0000000 		.4byte	.LFE69
 5001 0030 00000000 		.4byte	.LFB70
 5002 0034 1C000000 		.4byte	.LFE70
 5003 0038 00000000 		.4byte	.LFB71
 5004 003c 28000000 		.4byte	.LFE71
 5005 0040 00000000 		.4byte	.LFB72
 5006 0044 C8000000 		.4byte	.LFE72
 5007 0048 00000000 		.4byte	.LFB73
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 108


 5008 004c 00010000 		.4byte	.LFE73
 5009 0050 00000000 		.4byte	.LFB74
 5010 0054 78000000 		.4byte	.LFE74
 5011 0058 00000000 		.4byte	.LFB75
 5012 005c 3C010000 		.4byte	.LFE75
 5013 0060 00000000 		.4byte	.LFB76
 5014 0064 B8000000 		.4byte	.LFE76
 5015 0068 00000000 		.4byte	.LFB77
 5016 006c 1C000000 		.4byte	.LFE77
 5017 0070 00000000 		.4byte	.LFB78
 5018 0074 28000000 		.4byte	.LFE78
 5019 0078 00000000 		.4byte	.LFB79
 5020 007c 84000000 		.4byte	.LFE79
 5021 0080 00000000 		.4byte	.LFB80
 5022 0084 30000000 		.4byte	.LFE80
 5023 0088 00000000 		.4byte	.LFB81
 5024 008c 0C020000 		.4byte	.LFE81
 5025 0090 00000000 		.4byte	.LFB82
 5026 0094 68010000 		.4byte	.LFE82
 5027 0098 00000000 		.4byte	.LFB83
 5028 009c 44010000 		.4byte	.LFE83
 5029 00a0 00000000 		.4byte	.LFB84
 5030 00a4 14000000 		.4byte	.LFE84
 5031 00a8 00000000 		.4byte	.LFB85
 5032 00ac 1A000000 		.4byte	.LFE85
 5033 00b0 00000000 		.4byte	.LFB86
 5034 00b4 2A000000 		.4byte	.LFE86
 5035 00b8 00000000 		.4byte	.LFB87
 5036 00bc 7C020000 		.4byte	.LFE87
 5037 00c0 00000000 		.4byte	0
 5038 00c4 00000000 		.4byte	0
 5039              		.section	.debug_line,"",%progbits
 5040              	.Ldebug_line0:
 5041 0000 54050000 		.section	.debug_str,"MS",%progbits,1
 5041      0200EF01 
 5041      00000201 
 5041      FB0E0D00 
 5041      01010101 
 5042              	.LASF131:
 5043 0000 676D745F 		.ascii	"gmt_offset\000"
 5043      6F666673 
 5043      657400
 5044              	.LASF16:
 5045 000b 75696E74 		.ascii	"uint16\000"
 5045      313600
 5046              	.LASF38:
 5047 0012 76616C75 		.ascii	"value\000"
 5047      6500
 5048              	.LASF27:
 5049 0018 746D5F68 		.ascii	"tm_hour\000"
 5049      6F757200 
 5050              	.LASF32:
 5051 0020 746D5F79 		.ascii	"tm_yday\000"
 5051      64617900 
 5052              	.LASF139:
 5053 0028 62756666 		.ascii	"buffer_overflow\000"
 5053      65725F6F 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 109


 5053      76657266 
 5053      6C6F7700 
 5054              	.LASF4:
 5055 0038 5F5F7569 		.ascii	"__uint8_t\000"
 5055      6E74385F 
 5055      7400
 5056              	.LASF69:
 5057 0042 636F756E 		.ascii	"countDownResetCondition\000"
 5057      74446F77 
 5057      6E526573 
 5057      6574436F 
 5057      6E646974 
 5058              	.LASF54:
 5059 005a 6C6F6E67 		.ascii	"longitude\000"
 5059      69747564 
 5059      6500
 5060              	.LASF159:
 5061 0064 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5061      43313120 
 5061      352E342E 
 5061      31203230 
 5061      31363036 
 5062 0097 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 5062      20726576 
 5062      6973696F 
 5062      6E203233 
 5062      37373135 
 5063 00ca 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5063      66756E63 
 5063      74696F6E 
 5063      2D736563 
 5063      74696F6E 
 5064              	.LASF134:
 5065 00f2 6D6F6465 		.ascii	"modem_wakeup\000"
 5065      6D5F7761 
 5065      6B657570 
 5065      00
 5066              	.LASF10:
 5067 00ff 6C6F6E67 		.ascii	"long long unsigned int\000"
 5067      206C6F6E 
 5067      6720756E 
 5067      7369676E 
 5067      65642069 
 5068              	.LASF119:
 5069 0116 73616D70 		.ascii	"sample_freq\000"
 5069      6C655F66 
 5069      72657100 
 5070              	.LASF143:
 5071 0122 6D6F6465 		.ascii	"modem_state\000"
 5071      6D5F7374 
 5071      61746500 
 5072              	.LASF96:
 5073 012e 74657374 		.ascii	"test\000"
 5073      00
 5074              	.LASF152:
 5075 0133 616C6172 		.ascii	"alarmMeasure\000"
 5075      6D4D6561 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 110


 5075      73757265 
 5075      00
 5076              	.LASF138:
 5077 0140 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5077      52784275 
 5077      66666572 
 5077      00
 5078              	.LASF145:
 5079 014d 6D6F6465 		.ascii	"modem_stats\000"
 5079      6D5F7374 
 5079      61747300 
 5080              	.LASF9:
 5081 0159 6C6F6E67 		.ascii	"long long int\000"
 5081      206C6F6E 
 5081      6720696E 
 5081      7400
 5082              	.LASF0:
 5083 0167 7369676E 		.ascii	"signed char\000"
 5083      65642063 
 5083      68617200 
 5084              	.LASF47:
 5085 0173 65636E6F 		.ascii	"ecno\000"
 5085      00
 5086              	.LASF66:
 5087 0178 636F756E 		.ascii	"countDownValue\000"
 5087      74446F77 
 5087      6E56616C 
 5087      756500
 5088              	.LASF153:
 5089 0187 74696D65 		.ascii	"timeToMeasure\000"
 5089      546F4D65 
 5089      61737572 
 5089      6500
 5090              	.LASF50:
 5091 0195 74696D65 		.ascii	"time_to_network_connect\000"
 5091      5F746F5F 
 5091      6E657477 
 5091      6F726B5F 
 5091      636F6E6E 
 5092              	.LASF155:
 5093 01ad 74696D65 		.ascii	"timeToSync\000"
 5093      546F5379 
 5093      6E6300
 5094              	.LASF148:
 5095 01b8 68747470 		.ascii	"http_body\000"
 5095      5F626F64 
 5095      7900
 5096              	.LASF107:
 5097 01c2 7365745F 		.ascii	"set_up_internet_connection\000"
 5097      75705F69 
 5097      6E746572 
 5097      6E65745F 
 5097      636F6E6E 
 5098              	.LASF130:
 5099 01dd 7365636F 		.ascii	"second\000"
 5099      6E6400
 5100              	.LASF126:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 111


 5101 01e4 79656172 		.ascii	"year\000"
 5101      00
 5102              	.LASF45:
 5103 01e9 72786C65 		.ascii	"rxlev\000"
 5103      7600
 5104              	.LASF6:
 5105 01ef 6C6F6E67 		.ascii	"long int\000"
 5105      20696E74 
 5105      00
 5106              	.LASF67:
 5107 01f8 63757272 		.ascii	"currentCountDownValue\000"
 5107      656E7443 
 5107      6F756E74 
 5107      446F776E 
 5107      56616C75 
 5108              	.LASF132:
 5109 020e 6D6F6465 		.ascii	"modem_get_state\000"
 5109      6D5F6765 
 5109      745F7374 
 5109      61746500 
 5110              	.LASF55:
 5111 021e 616C7469 		.ascii	"altitude\000"
 5111      74756465 
 5111      00
 5112              	.LASF15:
 5113 0227 75696E74 		.ascii	"uint8\000"
 5113      3800
 5114              	.LASF21:
 5115 022d 646F7562 		.ascii	"double\000"
 5115      6C6500
 5116              	.LASF19:
 5117 0234 696E7433 		.ascii	"int32\000"
 5117      3200
 5118              	.LASF59:
 5119 023a 6E6F6465 		.ascii	"node_type\000"
 5119      5F747970 
 5119      6500
 5120              	.LASF122:
 5121 0244 6D6F6465 		.ascii	"modem_configure_settings\000"
 5121      6D5F636F 
 5121      6E666967 
 5121      7572655F 
 5121      73657474 
 5122              	.LASF115:
 5123 025d 735F7369 		.ascii	"s_sim_type\000"
 5123      6D5F7479 
 5123      706500
 5124              	.LASF97:
 5125 0268 6E657477 		.ascii	"network_time\000"
 5125      6F726B5F 
 5125      74696D65 
 5125      00
 5126              	.LASF3:
 5127 0275 73686F72 		.ascii	"short unsigned int\000"
 5127      7420756E 
 5127      7369676E 
 5127      65642069 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 112


 5127      6E7400
 5128              	.LASF17:
 5129 0288 75696E74 		.ascii	"uint32\000"
 5129      333200
 5130              	.LASF93:
 5131 028f 696E7465 		.ascii	"interval\000"
 5131      7276616C 
 5131      00
 5132              	.LASF7:
 5133 0298 5F5F7569 		.ascii	"__uint32_t\000"
 5133      6E743332 
 5133      5F7400
 5134              	.LASF124:
 5135 02a3 6D6F6465 		.ascii	"modem_get_network_time\000"
 5135      6D5F6765 
 5135      745F6E65 
 5135      74776F72 
 5135      6B5F7469 
 5136              	.LASF29:
 5137 02ba 746D5F6D 		.ascii	"tm_mon\000"
 5137      6F6E00
 5138              	.LASF63:
 5139 02c1 64656275 		.ascii	"debug_level\000"
 5139      675F6C65 
 5139      76656C00 
 5140              	.LASF161:
 5141 02cd 433A5C6E 		.ascii	"C:\\notoriOS\\notoriOS.cydsn\000"
 5141      6F746F72 
 5141      694F535C 
 5141      6E6F746F 
 5141      72694F53 
 5142              	.LASF133:
 5143 02e8 6D6F6465 		.ascii	"modem_sleep\000"
 5143      6D5F736C 
 5143      65657000 
 5144              	.LASF118:
 5145 02f4 735F6465 		.ascii	"s_debug_freq\000"
 5145      6275675F 
 5145      66726571 
 5145      00
 5146              	.LASF111:
 5147 0301 75706461 		.ascii	"updatable_parameters_initialize\000"
 5147      7461626C 
 5147      655F7061 
 5147      72616D65 
 5147      74657273 
 5148              	.LASF30:
 5149 0321 746D5F79 		.ascii	"tm_year\000"
 5149      65617200 
 5150              	.LASF154:
 5151 0329 616C6172 		.ascii	"alarmSync\000"
 5151      6D53796E 
 5151      6300
 5152              	.LASF79:
 5153 0333 70696E73 		.ascii	"pins_configure_active\000"
 5153      5F636F6E 
 5153      66696775 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 113


 5153      72655F61 
 5153      63746976 
 5154              	.LASF40:
 5155 0349 6B65795F 		.ascii	"key_value_t\000"
 5155      76616C75 
 5155      655F7400 
 5156              	.LASF84:
 5157 0355 7077725F 		.ascii	"pwr_check\000"
 5157      63686563 
 5157      6B00
 5158              	.LASF8:
 5159 035f 6C6F6E67 		.ascii	"long unsigned int\000"
 5159      20756E73 
 5159      69676E65 
 5159      6420696E 
 5159      7400
 5160              	.LASF99:
 5161 0371 65787472 		.ascii	"extract_string\000"
 5161      6163745F 
 5161      73747269 
 5161      6E6700
 5162              	.LASF89:
 5163 0380 74696D65 		.ascii	"timeout\000"
 5163      6F757400 
 5164              	.LASF112:
 5165 0388 6765745F 		.ascii	"get_cell_network_stats\000"
 5165      63656C6C 
 5165      5F6E6574 
 5165      776F726B 
 5165      5F737461 
 5166              	.LASF56:
 5167 039f 74696D65 		.ascii	"time_to_lock\000"
 5167      5F746F5F 
 5167      6C6F636B 
 5167      00
 5168              	.LASF142:
 5169 03ac 64617461 		.ascii	"data\000"
 5169      00
 5170              	.LASF75:
 5171 03b1 65705F70 		.ascii	"ep_port\000"
 5171      6F727400 
 5172              	.LASF33:
 5173 03b9 746D5F69 		.ascii	"tm_isdst\000"
 5173      73647374 
 5173      00
 5174              	.LASF71:
 5175 03c2 6D6F6465 		.ascii	"modem_info\000"
 5175      6D5F696E 
 5175      666F00
 5176              	.LASF74:
 5177 03cd 65705F68 		.ascii	"ep_host\000"
 5177      6F737400 
 5178              	.LASF72:
 5179 03d5 63686970 		.ascii	"chip_uniqueId\000"
 5179      5F756E69 
 5179      71756549 
 5179      6400
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 114


 5180              	.LASF94:
 5181 03e3 6D6F6465 		.ascii	"modem_power_up\000"
 5181      6D5F706F 
 5181      7765725F 
 5181      757000
 5182              	.LASF160:
 5183 03f2 6D6F6465 		.ascii	"modem.c\000"
 5183      6D2E6300 
 5184              	.LASF101:
 5185 03fa 62656769 		.ascii	"beginMarker\000"
 5185      6E4D6172 
 5185      6B657200 
 5186              	.LASF103:
 5187 0406 74617267 		.ascii	"target\000"
 5187      657400
 5188              	.LASF51:
 5189 040d 74696D65 		.ascii	"time_to_acquire_ip\000"
 5189      5F746F5F 
 5189      61637175 
 5189      6972655F 
 5189      697000
 5190              	.LASF102:
 5191 0420 656E644D 		.ascii	"endMarker\000"
 5191      61726B65 
 5191      7200
 5192              	.LASF2:
 5193 042a 73686F72 		.ascii	"short int\000"
 5193      7420696E 
 5193      7400
 5194              	.LASF125:
 5195 0434 65706F63 		.ascii	"epoch_time\000"
 5195      685F7469 
 5195      6D6500
 5196              	.LASF5:
 5197 043f 5F5F696E 		.ascii	"__int32_t\000"
 5197      7433325F 
 5197      7400
 5198              	.LASF100:
 5199 0449 66726F6D 		.ascii	"from\000"
 5199      00
 5200              	.LASF106:
 5201 044e 63726567 		.ascii	"creg\000"
 5201      00
 5202              	.LASF121:
 5203 0453 64656275 		.ascii	"debug_freq\000"
 5203      675F6672 
 5203      657100
 5204              	.LASF90:
 5205 045e 61745F61 		.ascii	"at_attempt\000"
 5205      7474656D 
 5205      707400
 5206              	.LASF98:
 5207 0469 61745F77 		.ascii	"at_write_command\000"
 5207      72697465 
 5207      5F636F6D 
 5207      6D616E64 
 5207      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 115


 5208              	.LASF73:
 5209 047a 7379735F 		.ascii	"sys_info_t\000"
 5209      696E666F 
 5209      5F7400
 5210              	.LASF65:
 5211 0485 75706461 		.ascii	"updatable_parameters_t\000"
 5211      7461626C 
 5211      655F7061 
 5211      72616D65 
 5211      74657273 
 5212              	.LASF120:
 5213 049c 7265706F 		.ascii	"report_freq\000"
 5213      72745F66 
 5213      72657100 
 5214              	.LASF140:
 5215 04a8 64617461 		.ascii	"dataPointsInStack\000"
 5215      506F696E 
 5215      7473496E 
 5215      53746163 
 5215      6B00
 5216              	.LASF26:
 5217 04ba 746D5F6D 		.ascii	"tm_min\000"
 5217      696E00
 5218              	.LASF24:
 5219 04c1 73697A65 		.ascii	"sizetype\000"
 5219      74797065 
 5219      00
 5220              	.LASF127:
 5221 04ca 6D6F6E74 		.ascii	"month\000"
 5221      6800
 5222              	.LASF105:
 5223 04d0 69735F63 		.ascii	"is_connected_to_cell_network\000"
 5223      6F6E6E65 
 5223      63746564 
 5223      5F746F5F 
 5223      63656C6C 
 5224              	.LASF157:
 5225 04ed 75617274 		.ascii	"uart_received_string\000"
 5225      5F726563 
 5225      65697665 
 5225      645F7374 
 5225      72696E67 
 5226              	.LASF53:
 5227 0502 6C617469 		.ascii	"latitude\000"
 5227      74756465 
 5227      00
 5228              	.LASF34:
 5229 050b 74657374 		.ascii	"test_name\000"
 5229      5F6E616D 
 5229      6500
 5230              	.LASF156:
 5231 0515 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 5231      546F5379 
 5231      636E5265 
 5231      6D6F7465 
 5231      50617261 
 5232              	.LASF95:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 116


 5233 052c 6D6F6465 		.ascii	"modem_test\000"
 5233      6D5F7465 
 5233      737400
 5234              	.LASF110:
 5235 0537 6D617463 		.ascii	"match\000"
 5235      6800
 5236              	.LASF146:
 5237 053d 75706461 		.ascii	"updatable_parameters\000"
 5237      7461626C 
 5237      655F7061 
 5237      72616D65 
 5237      74657273 
 5238              	.LASF128:
 5239 0552 686F7572 		.ascii	"hour\000"
 5239      00
 5240              	.LASF87:
 5241 0557 636F6D6D 		.ascii	"commands\000"
 5241      616E6473 
 5241      00
 5242              	.LASF91:
 5243 0560 636F6D70 		.ascii	"compare_location\000"
 5243      6172655F 
 5243      6C6F6361 
 5243      74696F6E 
 5243      00
 5244              	.LASF20:
 5245 0571 666C6F61 		.ascii	"float\000"
 5245      7400
 5246              	.LASF77:
 5247 0577 6D6F6465 		.ascii	"modem_initialize\000"
 5247      6D5F696E 
 5247      69746961 
 5247      6C697A65 
 5247      00
 5248              	.LASF117:
 5249 0588 735F7265 		.ascii	"s_report_freq\000"
 5249      706F7274 
 5249      5F667265 
 5249      7100
 5250              	.LASF60:
 5251 0596 73696D5F 		.ascii	"sim_type\000"
 5251      74797065 
 5251      00
 5252              	.LASF108:
 5253 059f 6973725F 		.ascii	"isr_telit_rx\000"
 5253      74656C69 
 5253      745F7278 
 5253      00
 5254              	.LASF70:
 5255 05ac 616C6172 		.ascii	"alarm\000"
 5255      6D00
 5256              	.LASF64:
 5257 05b2 5F426F6F 		.ascii	"_Bool\000"
 5257      6C00
 5258              	.LASF13:
 5259 05b8 696E7433 		.ascii	"int32_t\000"
 5259      325F7400 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 117


 5260              	.LASF1:
 5261 05c0 756E7369 		.ascii	"unsigned char\000"
 5261      676E6564 
 5261      20636861 
 5261      7200
 5262              	.LASF151:
 5263 05ce 73797374 		.ascii	"system_settings\000"
 5263      656D5F73 
 5263      65747469 
 5263      6E677300 
 5264              	.LASF92:
 5265 05de 64656C61 		.ascii	"delay\000"
 5265      7900
 5266              	.LASF48:
 5267 05e4 72737271 		.ascii	"rsrq\000"
 5267      00
 5268              	.LASF62:
 5269 05e9 73796E63 		.ascii	"sync_time\000"
 5269      5F74696D 
 5269      6500
 5270              	.LASF114:
 5271 05f3 735F6E6F 		.ascii	"s_node_type\000"
 5271      64655F74 
 5271      79706500 
 5272              	.LASF46:
 5273 05ff 72736370 		.ascii	"rscp\000"
 5273      00
 5274              	.LASF135:
 5275 0604 6D6F6465 		.ascii	"modem_get_gps_coordinates\000"
 5275      6D5F6765 
 5275      745F6770 
 5275      735F636F 
 5275      6F726469 
 5276              	.LASF37:
 5277 061e 74657374 		.ascii	"test_t\000"
 5277      5F7400
 5278              	.LASF150:
 5279 0625 73797374 		.ascii	"system_info\000"
 5279      656D5F69 
 5279      6E666F00 
 5280              	.LASF43:
 5281 0631 696D6569 		.ascii	"imei\000"
 5281      00
 5282              	.LASF36:
 5283 0636 72656173 		.ascii	"reason\000"
 5283      6F6E00
 5284              	.LASF49:
 5285 063d 72737270 		.ascii	"rsrp\000"
 5285      00
 5286              	.LASF52:
 5287 0642 6D6F6465 		.ascii	"modem_stats_t\000"
 5287      6D5F7374 
 5287      6174735F 
 5287      7400
 5288              	.LASF86:
 5289 0650 75617274 		.ascii	"uart_string_reset\000"
 5289      5F737472 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 118


 5289      696E675F 
 5289      72657365 
 5289      7400
 5290              	.LASF31:
 5291 0662 746D5F77 		.ascii	"tm_wday\000"
 5291      64617900 
 5292              	.LASF85:
 5293 066a 6D6F6465 		.ascii	"modem_soft_power_cycle\000"
 5293      6D5F736F 
 5293      66745F70 
 5293      6F776572 
 5293      5F637963 
 5294              	.LASF23:
 5295 0681 6C6F6E67 		.ascii	"long double\000"
 5295      20646F75 
 5295      626C6500 
 5296              	.LASF22:
 5297 068d 63686172 		.ascii	"char\000"
 5297      00
 5298              	.LASF104:
 5299 0692 6D6F6465 		.ascii	"modem_process_tasks\000"
 5299      6D5F7072 
 5299      6F636573 
 5299      735F7461 
 5299      736B7300 
 5300              	.LASF11:
 5301 06a6 756E7369 		.ascii	"unsigned int\000"
 5301      676E6564 
 5301      20696E74 
 5301      00
 5302              	.LASF123:
 5303 06b3 4346554E 		.ascii	"CFUN\000"
 5303      00
 5304              	.LASF42:
 5305 06b8 6D6F6465 		.ascii	"model_id\000"
 5305      6C5F6964 
 5305      00
 5306              	.LASF149:
 5307 06c1 68747470 		.ascii	"http_route\000"
 5307      5F726F75 
 5307      746500
 5308              	.LASF44:
 5309 06cc 6D6F6465 		.ascii	"modem_info_t\000"
 5309      6D5F696E 
 5309      666F5F74 
 5309      00
 5310              	.LASF58:
 5311 06d9 6770735F 		.ascii	"gps_t\000"
 5311      7400
 5312              	.LASF158:
 5313 06df 75617274 		.ascii	"uart_string_index\000"
 5313      5F737472 
 5313      696E675F 
 5313      696E6465 
 5313      7800
 5314              	.LASF61:
 5315 06f1 6D656173 		.ascii	"measure_time\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 119


 5315      7572655F 
 5315      74696D65 
 5315      00
 5316              	.LASF109:
 5317 06fe 69735F63 		.ascii	"is_connected_to_internet\000"
 5317      6F6E6E65 
 5317      63746564 
 5317      5F746F5F 
 5317      696E7465 
 5318              	.LASF144:
 5319 0717 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 5319      6D5F7374 
 5319      6172745F 
 5319      74696D65 
 5319      5F737461 
 5320              	.LASF137:
 5321 072e 6770735F 		.ascii	"gps_status\000"
 5321      73746174 
 5321      757300
 5322              	.LASF78:
 5323 0739 70696E73 		.ascii	"pins_configure_inactive\000"
 5323      5F636F6E 
 5323      66696775 
 5323      72655F69 
 5323      6E616374 
 5324              	.LASF41:
 5325 0751 73696D5F 		.ascii	"sim_id\000"
 5325      696400
 5326              	.LASF28:
 5327 0758 746D5F6D 		.ascii	"tm_mday\000"
 5327      64617900 
 5328              	.LASF57:
 5329 0760 76616C69 		.ascii	"valid\000"
 5329      6400
 5330              	.LASF129:
 5331 0766 6D696E75 		.ascii	"minute\000"
 5331      746500
 5332              	.LASF14:
 5333 076d 75696E74 		.ascii	"uint32_t\000"
 5333      33325F74 
 5333      00
 5334              	.LASF25:
 5335 0776 746D5F73 		.ascii	"tm_sec\000"
 5335      656300
 5336              	.LASF113:
 5337 077d 6765745F 		.ascii	"get_updated_parameters_from_malcom\000"
 5337      75706461 
 5337      7465645F 
 5337      70617261 
 5337      6D657465 
 5338              	.LASF116:
 5339 07a0 735F7361 		.ascii	"s_sample_freq\000"
 5339      6D706C65 
 5339      5F667265 
 5339      7100
 5340              	.LASF35:
 5341 07ae 73746174 		.ascii	"status\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 120


 5341      757300
 5342              	.LASF141:
 5343 07b5 64617461 		.ascii	"dataPointsInStackDesired\000"
 5343      506F696E 
 5343      7473496E 
 5343      53746163 
 5343      6B446573 
 5344              	.LASF76:
 5345 07ce 7379735F 		.ascii	"sys_settings_t\000"
 5345      73657474 
 5345      696E6773 
 5345      5F7400
 5346              	.LASF12:
 5347 07dd 75696E74 		.ascii	"uint8_t\000"
 5347      385F7400 
 5348              	.LASF18:
 5349 07e5 696E7431 		.ascii	"int16\000"
 5349      3600
 5350              	.LASF81:
 5351 07eb 61745F72 		.ascii	"at_ready\000"
 5351      65616479 
 5351      00
 5352              	.LASF82:
 5353 07f4 61747465 		.ascii	"attempts\000"
 5353      6D707473 
 5353      00
 5354              	.LASF68:
 5355 07fd 636F756E 		.ascii	"countDownType\000"
 5355      74446F77 
 5355      6E547970 
 5355      6500
 5356              	.LASF83:
 5357 080b 626F6F74 		.ascii	"boot_time\000"
 5357      5F74696D 
 5357      6500
 5358              	.LASF88:
 5359 0815 65787065 		.ascii	"expected_response\000"
 5359      63746564 
 5359      5F726573 
 5359      706F6E73 
 5359      6500
 5360              	.LASF136:
 5361 0827 6C6F636B 		.ascii	"lock_time\000"
 5361      5F74696D 
 5361      6500
 5362              	.LASF147:
 5363 0831 68747470 		.ascii	"http_request\000"
 5363      5F726571 
 5363      75657374 
 5363      00
 5364              	.LASF80:
 5365 083e 6D6F6465 		.ascii	"modem_power_down\000"
 5365      6D5F706F 
 5365      7765725F 
 5365      646F776E 
 5365      00
 5366              	.LASF39:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lYert.s 			page 121


 5367 084f 74696D65 		.ascii	"timeStamp\000"
 5367      5374616D 
 5367      7000
 5368              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
