ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"modem.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.syntax unified
  24              		.global _printf_float
  25              		.thumb
  26              		.syntax unified
  27              		.comm	modem_state,1,1
  28              		.comm	modem_start_time_stamp,4,4
  29              		.comm	modem_info,60,4
  30              		.comm	modem_stats,32,4
  31              		.comm	updatable_parameters,10,4
  32              		.comm	App_LED_enabled,1,1
  33              		.comm	app_led_inbox,100,4
  34              		.comm	level_sensor_inbox,100,4
  35              		.comm	level_sensor_enabled,1,1
  36              		.comm	valve_diameter,4,4
  37              		.comm	valve_type,10,4
  38              		.comm	valve_enabled,1,1
  39              		.comm	valve_inbox,100,4
  40              		.comm	autosampler_enabled,1,1
  41              		.comm	autosampler_inbox,100,4
  42              		.comm	http_request,10000,4
  43              		.comm	http_body,10000,4
  44              		.comm	http_route,200,4
  45              		.comm	system_info,28,4
  46              		.comm	system_settings,104,4
  47              		.comm	alarmMeasure,6,4
  48              		.comm	timeToMeasure,1,1
  49              		.comm	alarmSync,6,4
  50              		.comm	timeToSync,1,1
  51              		.comm	timeToSycnRemoteParams,1,1
  52              		.comm	hey,1,1
  53              		.comm	alarmAppLED,6,4
  54              		.comm	timeToAppLED,1,1
  55              		.comm	alarmLevelSensor,6,4
  56              		.comm	timeToLevelSensor,1,1
  57              		.comm	alarmDownstreamLevelSensor,6,4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 2


  58              		.comm	timeToDownstreamLevelSensor,1,1
  59              		.comm	alarmValve,6,4
  60              		.comm	timeToValve,1,1
  61              		.comm	alarmAutosampler,6,4
  62              		.comm	timeToAutosampler,1,1
  63              		.comm	uart_received_string,1024,4
  64              		.global	uart_string_index
  65              		.bss
  66              		.align	1
  67              		.type	uart_string_index, %object
  68              		.size	uart_string_index, 2
  69              	uart_string_index:
  70 0000 0000     		.space	2
  71              		.section	.text.isr_telit_rx,"ax",%progbits
  72              		.align	2
  73              		.global	isr_telit_rx
  74              		.thumb
  75              		.thumb_func
  76              		.type	isr_telit_rx, %function
  77              	isr_telit_rx:
  78              	.LFB64:
  79              		.file 1 "modem.c"
   1:modem.c       **** //Methods for Telit modem 
   2:modem.c       **** #include "modem.h"
   3:modem.c       **** #include "notoriOS.h"
   4:modem.c       **** 
   5:modem.c       **** char uart_received_string[1024];
   6:modem.c       **** int16 uart_string_index=0;
   7:modem.c       **** 
   8:modem.c       **** #define DEFAULT_AT_TIMEOUT 2000u // Send command and wait 2000 ms
   9:modem.c       **** #define NO_AT_TIMEOUT 0u // Send command, no timeout/ don't wait 
  10:modem.c       **** 
  11:modem.c       **** #define TIMEOUT_NETWORK_CONNECT 180 //seconds
  12:modem.c       **** #define TIMEOUT_IP_ACQUIRE 230 //seconds (cummulatinve) add to TIMEOUT_NETWORK_CONNECT
  13:modem.c       **** 
  14:modem.c       **** CY_ISR_PROTO(isr_telit_rx); // Declares a custom ISR function "isr_telit_rx" using the CY_ISR_PROTO
  15:modem.c       **** 
  16:modem.c       **** // Define the custom ISR function "isr_telit_rx" using the CY_ISR macro
  17:modem.c       **** // Get each character from Telit and saves it to uart_received_string
  18:modem.c       **** CY_ISR(isr_telit_rx){      
  80              		.loc 1 18 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84 0000 98B5     		push	{r3, r4, r7, lr}
  85              		.cfi_def_cfa_offset 16
  86              		.cfi_offset 3, -16
  87              		.cfi_offset 4, -12
  88              		.cfi_offset 7, -8
  89              		.cfi_offset 14, -4
  90 0002 00AF     		add	r7, sp, #0
  91              		.cfi_def_cfa_register 7
  19:modem.c       ****     // UART_Telit_GetRxBufferSize() returns the number of received bytes available in the RX buffer
  20:modem.c       ****     while(UART_Telit_GetRxBufferSize()==1){
  92              		.loc 1 20 0
  93 0004 12E0     		b	.L2
  94              	.L3:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 3


  21:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  95              		.loc 1 21 0
  96 0006 0D4B     		ldr	r3, .L4
  97 0008 B3F90030 		ldrsh	r3, [r3]
  98 000c 1C46     		mov	r4, r3
  99 000e FFF7FEFF 		bl	UART_Telit_GetChar
 100 0012 0346     		mov	r3, r0
 101 0014 1A46     		mov	r2, r3
 102 0016 0A4B     		ldr	r3, .L4+4
 103 0018 1A55     		strb	r2, [r3, r4]
  22:modem.c       ****         uart_string_index++;
 104              		.loc 1 22 0
 105 001a 084B     		ldr	r3, .L4
 106 001c B3F90030 		ldrsh	r3, [r3]
 107 0020 9BB2     		uxth	r3, r3
 108 0022 0133     		adds	r3, r3, #1
 109 0024 9BB2     		uxth	r3, r3
 110 0026 1AB2     		sxth	r2, r3
 111 0028 044B     		ldr	r3, .L4
 112 002a 1A80     		strh	r2, [r3]	@ movhi
 113              	.L2:
  20:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
 114              		.loc 1 20 0
 115 002c FFF7FEFF 		bl	UART_Telit_GetRxBufferSize
 116 0030 0346     		mov	r3, r0
 117 0032 012B     		cmp	r3, #1
 118 0034 E7D0     		beq	.L3
  23:modem.c       ****     }
  24:modem.c       **** 
  25:modem.c       **** }
 119              		.loc 1 25 0
 120 0036 00BF     		nop
 121 0038 98BD     		pop	{r3, r4, r7, pc}
 122              	.L5:
 123 003a 00BF     		.align	2
 124              	.L4:
 125 003c 00000000 		.word	uart_string_index
 126 0040 00000000 		.word	uart_received_string
 127              		.cfi_endproc
 128              	.LFE64:
 129              		.size	isr_telit_rx, .-isr_telit_rx
 130              		.section	.text.modem_initialize,"ax",%progbits
 131              		.align	2
 132              		.global	modem_initialize
 133              		.thumb
 134              		.thumb_func
 135              		.type	modem_initialize, %function
 136              	modem_initialize:
 137              	.LFB65:
  26:modem.c       **** 
  27:modem.c       **** // Initialize the modem
  28:modem.c       **** void modem_initialize(){
 138              		.loc 1 28 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 1, uses_anonymous_args = 0
 142 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 4


 143              		.cfi_def_cfa_offset 8
 144              		.cfi_offset 7, -8
 145              		.cfi_offset 14, -4
 146 0002 00AF     		add	r7, sp, #0
 147              		.cfi_def_cfa_register 7
  29:modem.c       ****     // Don't do much except make sure that all the modem pins are pulled low
  30:modem.c       ****     // Also make sure that the TX PIN is fully disabled
  31:modem.c       ****     pins_configure_inactive();
 148              		.loc 1 31 0
 149 0004 FFF7FEFF 		bl	pins_configure_inactive
  32:modem.c       ****     modem_state = 0;
 150              		.loc 1 32 0
 151 0008 154B     		ldr	r3, .L7
 152 000a 0022     		movs	r2, #0
 153 000c 1A70     		strb	r2, [r3]
  33:modem.c       ****     //initialize states
  34:modem.c       ****     modem_info.imei[0] = '\0';
 154              		.loc 1 34 0
 155 000e 154B     		ldr	r3, .L7+4
 156 0010 0022     		movs	r2, #0
 157 0012 83F82820 		strb	r2, [r3, #40]
  35:modem.c       ****     modem_info.model_id[0] = '\0';
 158              		.loc 1 35 0
 159 0016 134B     		ldr	r3, .L7+4
 160 0018 0022     		movs	r2, #0
 161 001a 1A75     		strb	r2, [r3, #20]
  36:modem.c       ****     modem_info.sim_id[0] = '\0';
 162              		.loc 1 36 0
 163 001c 114B     		ldr	r3, .L7+4
 164 001e 0022     		movs	r2, #0
 165 0020 1A70     		strb	r2, [r3]
  37:modem.c       ****     modem_stats.rxlev = 0;
 166              		.loc 1 37 0
 167 0022 114B     		ldr	r3, .L7+8
 168 0024 0022     		movs	r2, #0
 169 0026 1A60     		str	r2, [r3]
  38:modem.c       ****     modem_stats.ber = 0;
 170              		.loc 1 38 0
 171 0028 0F4B     		ldr	r3, .L7+8
 172 002a 0022     		movs	r2, #0
 173 002c 5A60     		str	r2, [r3, #4]
  39:modem.c       ****     modem_stats.rscp = 0;
 174              		.loc 1 39 0
 175 002e 0E4B     		ldr	r3, .L7+8
 176 0030 0022     		movs	r2, #0
 177 0032 9A60     		str	r2, [r3, #8]
  40:modem.c       ****     modem_stats.ecno = 0;
 178              		.loc 1 40 0
 179 0034 0C4B     		ldr	r3, .L7+8
 180 0036 0022     		movs	r2, #0
 181 0038 DA60     		str	r2, [r3, #12]
  41:modem.c       ****     modem_stats.rsrq = 0;
 182              		.loc 1 41 0
 183 003a 0B4B     		ldr	r3, .L7+8
 184 003c 0022     		movs	r2, #0
 185 003e 1A61     		str	r2, [r3, #16]
  42:modem.c       ****     modem_stats.rsrp = 0;
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 5


 186              		.loc 1 42 0
 187 0040 094B     		ldr	r3, .L7+8
 188 0042 0022     		movs	r2, #0
 189 0044 5A61     		str	r2, [r3, #20]
  43:modem.c       ****     modem_stats.time_to_acquire_ip = 0;
 190              		.loc 1 43 0
 191 0046 084B     		ldr	r3, .L7+8
 192 0048 0022     		movs	r2, #0
 193 004a DA61     		str	r2, [r3, #28]
  44:modem.c       ****     modem_stats.time_to_network_connect = 0;
 194              		.loc 1 44 0
 195 004c 064B     		ldr	r3, .L7+8
 196 004e 0022     		movs	r2, #0
 197 0050 9A61     		str	r2, [r3, #24]
  45:modem.c       ****     // Disable the RX Pin interrupt, and only enable it during long timeouts
  46:modem.c       ****     // Rx_Telit_SetInterruptMode(): Configures the interrupt mode for each of the Pins component's 
  47:modem.c       ****     // Rx_Telit_0_INTR selects the first pin in the list, and Rx_Telit_INTR_NONE disables the Rx pi
  48:modem.c       ****     Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 198              		.loc 1 48 0
 199 0052 0021     		movs	r1, #0
 200 0054 4020     		movs	r0, #64
 201 0056 FFF7FEFF 		bl	Rx_Telit_SetInterruptMode
  49:modem.c       ****     
  50:modem.c       **** }
 202              		.loc 1 50 0
 203 005a 00BF     		nop
 204 005c 80BD     		pop	{r7, pc}
 205              	.L8:
 206 005e 00BF     		.align	2
 207              	.L7:
 208 0060 00000000 		.word	modem_state
 209 0064 00000000 		.word	modem_info
 210 0068 00000000 		.word	modem_stats
 211              		.cfi_endproc
 212              	.LFE65:
 213              		.size	modem_initialize, .-modem_initialize
 214              		.section	.text.pins_configure_inactive,"ax",%progbits
 215              		.align	2
 216              		.global	pins_configure_inactive
 217              		.thumb
 218              		.thumb_func
 219              		.type	pins_configure_inactive, %function
 220              	pins_configure_inactive:
 221              	.LFB66:
  51:modem.c       **** 
  52:modem.c       **** 
  53:modem.c       **** // To be used when the modem power is to be "killed" conpletely to conserve power
  54:modem.c       **** void pins_configure_inactive(){
 222              		.loc 1 54 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226 0000 80B5     		push	{r7, lr}
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 7, -8
 229              		.cfi_offset 14, -4
 230 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 6


 231              		.cfi_def_cfa_register 7
  55:modem.c       ****    
  56:modem.c       ****    Telit_ControlReg_Write(0u); // Physically disconect UART pin
 232              		.loc 1 56 0
 233 0004 0020     		movs	r0, #0
 234 0006 FFF7FEFF 		bl	Telit_ControlReg_Write
  57:modem.c       ****    Rx_Telit_SetDriveMode(PIN_DM_STRONG); // Set drive mode
 235              		.loc 1 57 0
 236 000a 0C20     		movs	r0, #12
 237 000c FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  58:modem.c       **** 
  59:modem.c       ****    Pin_Telit_pwr_Write(OFF); // Kill power to modem (pulls pin low).
 238              		.loc 1 59 0
 239 0010 0020     		movs	r0, #0
 240 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  60:modem.c       **** 
  61:modem.c       ****    // Pull down all of these, just in case (turns the off).
  62:modem.c       ****    Rx_Telit_Write(OFF); 
 241              		.loc 1 62 0
 242 0016 0020     		movs	r0, #0
 243 0018 FFF7FEFF 		bl	Rx_Telit_Write
  63:modem.c       ****    Tx_Telit_Write(OFF);
 244              		.loc 1 63 0
 245 001c 0020     		movs	r0, #0
 246 001e FFF7FEFF 		bl	Tx_Telit_Write
  64:modem.c       ****    Pin_Telit_ONOFF_Write(OFF);
 247              		.loc 1 64 0
 248 0022 0020     		movs	r0, #0
 249 0024 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
  65:modem.c       ****    Pin_Telit_SWRDY_Write(OFF);
 250              		.loc 1 65 0
 251 0028 0020     		movs	r0, #0
 252 002a FFF7FEFF 		bl	Pin_Telit_SWRDY_Write
  66:modem.c       ****     
  67:modem.c       **** }
 253              		.loc 1 67 0
 254 002e 00BF     		nop
 255 0030 80BD     		pop	{r7, pc}
 256              		.cfi_endproc
 257              	.LFE66:
 258              		.size	pins_configure_inactive, .-pins_configure_inactive
 259 0032 00BF     		.section	.text.pins_configure_active,"ax",%progbits
 260              		.align	2
 261              		.global	pins_configure_active
 262              		.thumb
 263              		.thumb_func
 264              		.type	pins_configure_active, %function
 265              	pins_configure_active:
 266              	.LFB67:
  68:modem.c       **** 
  69:modem.c       **** // Turns on power and configures all UART pin modes
  70:modem.c       **** void pins_configure_active(){
 267              		.loc 1 70 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 1, uses_anonymous_args = 0
 271 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 7


 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 7, -8
 274              		.cfi_offset 14, -4
 275 0002 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
  71:modem.c       ****     
  72:modem.c       ****     Rx_Telit_SetDriveMode(PIN_DM_DIG_HIZ); // Power up. Set RX pin to High Impedance Digital mode.
 277              		.loc 1 72 0
 278 0004 0220     		movs	r0, #2
 279 0006 FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  73:modem.c       ****     Telit_ControlReg_Write(1u); // Pull Telit_ControlReg pin high (turns it on).
 280              		.loc 1 73 0
 281 000a 0120     		movs	r0, #1
 282 000c FFF7FEFF 		bl	Telit_ControlReg_Write
  74:modem.c       ****     Pin_Telit_pwr_Write(ON); // Pulls Telit_pwr pin high (turns it on).
 283              		.loc 1 74 0
 284 0010 0120     		movs	r0, #1
 285 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  75:modem.c       ****     CyDelay(100u); // Give the MOSFET a few ms to stalbilise power 
 286              		.loc 1 75 0
 287 0016 6420     		movs	r0, #100
 288 0018 FFF7FEFF 		bl	CyDelay
  76:modem.c       **** }
 289              		.loc 1 76 0
 290 001c 00BF     		nop
 291 001e 80BD     		pop	{r7, pc}
 292              		.cfi_endproc
 293              	.LFE67:
 294              		.size	pins_configure_active, .-pins_configure_active
 295              		.section	.rodata
 296              		.align	2
 297              	.LC0:
 298 0000 4F4B00   		.ascii	"OK\000"
 299 0003 00       		.align	2
 300              	.LC1:
 301 0004 41542353 		.ascii	"AT#SHDN\015\000"
 301      48444E0D 
 301      00
 302              		.section	.text.modem_power_down,"ax",%progbits
 303              		.align	2
 304              		.global	modem_power_down
 305              		.thumb
 306              		.thumb_func
 307              		.type	modem_power_down, %function
 308              	modem_power_down:
 309              	.LFB68:
  77:modem.c       **** 
  78:modem.c       **** // Power down the modem -- completely "kill" modem to conserve power.
  79:modem.c       **** void modem_power_down(){
 310              		.loc 1 79 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 1, uses_anonymous_args = 0
 314 0000 80B5     		push	{r7, lr}
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 7, -8
 317              		.cfi_offset 14, -4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 8


 318 0002 00AF     		add	r7, sp, #0
 319              		.cfi_def_cfa_register 7
  80:modem.c       ****     // AT Command to modem for Software Shut Down - #SHDN
  81:modem.c       ****     // \r is carriage return, it is necessary for the modem to know it got a command
  82:modem.c       ****     at_write_command("AT#SHDN\r","OK",5000u); 
 320              		.loc 1 82 0
 321 0004 41F28832 		movw	r2, #5000
 322 0008 0A49     		ldr	r1, .L12
 323 000a 0B48     		ldr	r0, .L12+4
 324 000c FFF7FEFF 		bl	at_write_command
  83:modem.c       ****    
  84:modem.c       ****     // Soft power cycle makes sure that the modem is all the way on (like holding on button on for 
  85:modem.c       ****     modem_soft_power_cycle();
 325              		.loc 1 85 0
 326 0010 FFF7FEFF 		bl	modem_soft_power_cycle
  86:modem.c       ****     CyDelay(1000u);
 327              		.loc 1 86 0
 328 0014 4FF47A70 		mov	r0, #1000
 329 0018 FFF7FEFF 		bl	CyDelay
  87:modem.c       ****     
  88:modem.c       ****     UART_Telit_Stop(); // Disables the UART operation.
 330              		.loc 1 88 0
 331 001c FFF7FEFF 		bl	UART_Telit_Stop
  89:modem.c       ****     isr_telit_rx_Stop(); // Disables and removes the interrupt.
 332              		.loc 1 89 0
 333 0020 FFF7FEFF 		bl	isr_telit_rx_Stop
  90:modem.c       ****     pins_configure_inactive(); // We want the modem power to be "killed" completely to conserve pow
 334              		.loc 1 90 0
 335 0024 FFF7FEFF 		bl	pins_configure_inactive
  91:modem.c       ****     modem_state = MODEM_STATE_OFF;
 336              		.loc 1 91 0
 337 0028 044B     		ldr	r3, .L12+8
 338 002a 0022     		movs	r2, #0
 339 002c 1A70     		strb	r2, [r3]
  92:modem.c       ****     
  93:modem.c       **** }
 340              		.loc 1 93 0
 341 002e 00BF     		nop
 342 0030 80BD     		pop	{r7, pc}
 343              	.L13:
 344 0032 00BF     		.align	2
 345              	.L12:
 346 0034 00000000 		.word	.LC0
 347 0038 04000000 		.word	.LC1
 348 003c 00000000 		.word	modem_state
 349              		.cfi_endproc
 350              	.LFE68:
 351              		.size	modem_power_down, .-modem_power_down
 352              		.section	.rodata
 353 000d 000000   		.align	2
 354              	.LC2:
 355 0010 41544530 		.ascii	"ATE0\015\000"
 355      0D00
 356 0016 0000     		.align	2
 357              	.LC3:
 358 0018 4D6F6465 		.ascii	"Modem boot time: %d\000"
 358      6D20626F 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 9


 358      6F742074 
 358      696D653A 
 358      20256400 
 359              		.align	2
 360              	.LC4:
 361 002c 4D6F6465 		.ascii	"Modem ready for AT commands after %d attempt(s).\000"
 361      6D207265 
 361      61647920 
 361      666F7220 
 361      41542063 
 362 005d 000000   		.align	2
 363              	.LC5:
 364 0060 4E6F2072 		.ascii	"No response from modem.\000"
 364      6573706F 
 364      6E736520 
 364      66726F6D 
 364      206D6F64 
 365              		.section	.text.modem_power_up,"ax",%progbits
 366              		.align	2
 367              		.global	modem_power_up
 368              		.thumb
 369              		.thumb_func
 370              		.type	modem_power_up, %function
 371              	modem_power_up:
 372              	.LFB69:
  94:modem.c       **** 
  95:modem.c       **** // This puts all the modem pins into a state that won't leak power
  96:modem.c       **** // Please call restore_pins() to bring them abck to function when they are needed for UART
  97:modem.c       **** uint8 modem_power_up(){
 373              		.loc 1 97 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 8
 376              		@ frame_needed = 1, uses_anonymous_args = 0
 377 0000 80B5     		push	{r7, lr}
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 7, -8
 380              		.cfi_offset 14, -4
 381 0002 82B0     		sub	sp, sp, #8
 382              		.cfi_def_cfa_offset 16
 383 0004 00AF     		add	r7, sp, #0
 384              		.cfi_def_cfa_register 7
  98:modem.c       **** 
  99:modem.c       ****     pins_configure_active(); // Turns on power and configures all UART pin modes
 385              		.loc 1 99 0
 386 0006 FFF7FEFF 		bl	pins_configure_active
 100:modem.c       ****     UART_Telit_Start(); // Sets the initVar variable, calls the UART_Telit_Init() function, and the
 387              		.loc 1 100 0
 388 000a FFF7FEFF 		bl	UART_Telit_Start
 101:modem.c       ****     isr_telit_rx_StartEx(isr_telit_rx); // Sets up the interrupt and enables it. 
 389              		.loc 1 101 0
 390 000e 2C48     		ldr	r0, .L27
 391 0010 FFF7FEFF 		bl	isr_telit_rx_StartEx
 102:modem.c       **** 
 103:modem.c       ****     modem_soft_power_cycle(); // Soft power cycle makes sure that the modem is all the way on (like
 392              		.loc 1 103 0
 393 0014 FFF7FEFF 		bl	modem_soft_power_cycle
 104:modem.c       ****     
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 10


 105:modem.c       ****     // Turn off ECHO command (doesn't repeat your command back to you).
 106:modem.c       ****     uint8 at_ready = 0;
 394              		.loc 1 106 0
 395 0018 0023     		movs	r3, #0
 396 001a FB71     		strb	r3, [r7, #7]
 107:modem.c       ****     uint8 attempts = 0;
 397              		.loc 1 107 0
 398 001c 0023     		movs	r3, #0
 399 001e 3B71     		strb	r3, [r7, #4]
 108:modem.c       ****     // Create variable boot_time of the current time stamp.
 109:modem.c       ****     long boot_time = getTimeStamp();
 400              		.loc 1 109 0
 401 0020 FFF7FEFF 		bl	getTimeStamp
 402 0024 3860     		str	r0, [r7]
 403              	.LBB2:
 110:modem.c       ****     
 111:modem.c       ****     //it takes the 4G modem 10+secs (max 20) to boot up, so keep hitting it with AT commands until 
 112:modem.c       ****     for(uint8 attempts = 0; attempts<3; attempts++){
 404              		.loc 1 112 0
 405 0026 0023     		movs	r3, #0
 406 0028 BB71     		strb	r3, [r7, #6]
 407 002a 1CE0     		b	.L15
 408              	.L22:
 409              	.LBB3:
 113:modem.c       ****         
 114:modem.c       ****         for(uint8 pwr_check = 0; pwr_check<20; pwr_check++){
 410              		.loc 1 114 0
 411 002c 0023     		movs	r3, #0
 412 002e 7B71     		strb	r3, [r7, #5]
 413 0030 0EE0     		b	.L16
 414              	.L19:
 115:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 116:modem.c       ****             if(at_write_command("ATE0\r","OK",1000u)){
 415              		.loc 1 116 0
 416 0032 4FF47A72 		mov	r2, #1000
 417 0036 2349     		ldr	r1, .L27+4
 418 0038 2348     		ldr	r0, .L27+8
 419 003a FFF7FEFF 		bl	at_write_command
 420 003e 0346     		mov	r3, r0
 421 0040 002B     		cmp	r3, #0
 422 0042 02D0     		beq	.L17
 117:modem.c       ****                 at_ready = 1;
 423              		.loc 1 117 0
 424 0044 0123     		movs	r3, #1
 425 0046 FB71     		strb	r3, [r7, #7]
 118:modem.c       ****                 break;
 426              		.loc 1 118 0
 427 0048 05E0     		b	.L18
 428              	.L17:
 114:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 429              		.loc 1 114 0 discriminator 2
 430 004a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 431 004c 0133     		adds	r3, r3, #1
 432 004e 7B71     		strb	r3, [r7, #5]
 433              	.L16:
 114:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 434              		.loc 1 114 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 11


 435 0050 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 436 0052 132B     		cmp	r3, #19
 437 0054 EDD9     		bls	.L19
 438              	.L18:
 439              	.LBE3:
 119:modem.c       ****             }
 120:modem.c       ****         }
 121:modem.c       ****             
 122:modem.c       ****         if(at_ready == 1){
 440              		.loc 1 122 0 is_stmt 1
 441 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 442 0058 012B     		cmp	r3, #1
 443 005a 08D0     		beq	.L26
 123:modem.c       ****             break;
 124:modem.c       ****         }else{
 125:modem.c       ****             // Soft power cycle makes sure that the modem is all the way on (like holding on button
 126:modem.c       ****             modem_soft_power_cycle();
 444              		.loc 1 126 0 discriminator 2
 445 005c FFF7FEFF 		bl	modem_soft_power_cycle
 112:modem.c       ****         
 446              		.loc 1 112 0 discriminator 2
 447 0060 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 448 0062 0133     		adds	r3, r3, #1
 449 0064 BB71     		strb	r3, [r7, #6]
 450              	.L15:
 112:modem.c       ****         
 451              		.loc 1 112 0 is_stmt 0 discriminator 1
 452 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 453 0068 022B     		cmp	r3, #2
 454 006a DFD9     		bls	.L22
 455 006c 00E0     		b	.L21
 456              	.L26:
 123:modem.c       ****             break;
 457              		.loc 1 123 0 is_stmt 1
 458 006e 00BF     		nop
 459              	.L21:
 460              	.LBE2:
 127:modem.c       ****         }
 128:modem.c       ****     }
 129:modem.c       ****     // Calculate boot up time and save to variable boot_time.
 130:modem.c       ****     boot_time = getTimeStamp() - boot_time;
 461              		.loc 1 130 0
 462 0070 FFF7FEFF 		bl	getTimeStamp
 463 0074 0246     		mov	r2, r0
 464 0076 3B68     		ldr	r3, [r7]
 465 0078 D31A     		subs	r3, r2, r3
 466 007a 3B60     		str	r3, [r7]
 131:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Modem boot time: %d",boot_time);
 467              		.loc 1 131 0
 468 007c 3A68     		ldr	r2, [r7]
 469 007e 1349     		ldr	r1, .L27+12
 470 0080 0020     		movs	r0, #0
 471 0082 FFF7FEFF 		bl	printNotif
 132:modem.c       ****    
 133:modem.c       ****     if(at_ready == 1){
 472              		.loc 1 133 0
 473 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 12


 474 0088 012B     		cmp	r3, #1
 475 008a 0AD1     		bne	.L23
 134:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Modem ready for AT commands after %d attempt(s).",attempts);
 476              		.loc 1 134 0
 477 008c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 478 008e 1A46     		mov	r2, r3
 479 0090 0F49     		ldr	r1, .L27+16
 480 0092 0020     		movs	r0, #0
 481 0094 FFF7FEFF 		bl	printNotif
 135:modem.c       ****         modem_state = MODEM_STATE_STARTUP;
 482              		.loc 1 135 0
 483 0098 0E4B     		ldr	r3, .L27+20
 484 009a 0122     		movs	r2, #1
 485 009c 1A70     		strb	r2, [r3]
 136:modem.c       ****     }else{
 137:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"No response from modem.");
 138:modem.c       ****         modem_state = MODEM_STATE_OFF;
 139:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 140:modem.c       ****         modem_power_down();
 141:modem.c       ****         return 0u;
 142:modem.c       ****     }
 143:modem.c       ****     return 1u;
 486              		.loc 1 143 0
 487 009e 0123     		movs	r3, #1
 488 00a0 09E0     		b	.L25
 489              	.L23:
 137:modem.c       ****         modem_state = MODEM_STATE_OFF;
 490              		.loc 1 137 0
 491 00a2 0D49     		ldr	r1, .L27+24
 492 00a4 0220     		movs	r0, #2
 493 00a6 FFF7FEFF 		bl	printNotif
 138:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 494              		.loc 1 138 0
 495 00aa 0A4B     		ldr	r3, .L27+20
 496 00ac 0022     		movs	r2, #0
 497 00ae 1A70     		strb	r2, [r3]
 140:modem.c       ****         return 0u;
 498              		.loc 1 140 0
 499 00b0 FFF7FEFF 		bl	modem_power_down
 141:modem.c       ****     }
 500              		.loc 1 141 0
 501 00b4 0023     		movs	r3, #0
 502              	.L25:
 144:modem.c       **** }
 503              		.loc 1 144 0
 504 00b6 1846     		mov	r0, r3
 505 00b8 0837     		adds	r7, r7, #8
 506              		.cfi_def_cfa_offset 8
 507 00ba BD46     		mov	sp, r7
 508              		.cfi_def_cfa_register 13
 509              		@ sp needed
 510 00bc 80BD     		pop	{r7, pc}
 511              	.L28:
 512 00be 00BF     		.align	2
 513              	.L27:
 514 00c0 00000000 		.word	isr_telit_rx
 515 00c4 00000000 		.word	.LC0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 13


 516 00c8 10000000 		.word	.LC2
 517 00cc 18000000 		.word	.LC3
 518 00d0 2C000000 		.word	.LC4
 519 00d4 00000000 		.word	modem_state
 520 00d8 60000000 		.word	.LC5
 521              		.cfi_endproc
 522              	.LFE69:
 523              		.size	modem_power_up, .-modem_power_up
 524              		.section	.text.modem_soft_power_cycle,"ax",%progbits
 525              		.align	2
 526              		.global	modem_soft_power_cycle
 527              		.thumb
 528              		.thumb_func
 529              		.type	modem_soft_power_cycle, %function
 530              	modem_soft_power_cycle:
 531              	.LFB70:
 145:modem.c       **** 
 146:modem.c       **** // Puts modem in soft power cycle -- modem has power but isn't all the way on, so soft power cycle 
 147:modem.c       **** void modem_soft_power_cycle(){
 532              		.loc 1 147 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536 0000 80B5     		push	{r7, lr}
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 7, -8
 539              		.cfi_offset 14, -4
 540 0002 00AF     		add	r7, sp, #0
 541              		.cfi_def_cfa_register 7
 148:modem.c       ****     Pin_Telit_ONOFF_Write(1u); // Pulls Telit_ONOFF pin high
 542              		.loc 1 148 0
 543 0004 0120     		movs	r0, #1
 544 0006 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 149:modem.c       ****     CyDelay(2000u); // Give modem a sec to boot
 545              		.loc 1 149 0
 546 000a 4FF4FA60 		mov	r0, #2000
 547 000e FFF7FEFF 		bl	CyDelay
 150:modem.c       ****     Pin_Telit_ONOFF_Write(0u); // Pulls Telit_ONOFF pin low
 548              		.loc 1 150 0
 549 0012 0020     		movs	r0, #0
 550 0014 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 151:modem.c       ****     
 152:modem.c       **** }
 551              		.loc 1 152 0
 552 0018 00BF     		nop
 553 001a 80BD     		pop	{r7, pc}
 554              		.cfi_endproc
 555              	.LFE70:
 556              		.size	modem_soft_power_cycle, .-modem_soft_power_cycle
 557              		.section	.text.uart_string_reset,"ax",%progbits
 558              		.align	2
 559              		.global	uart_string_reset
 560              		.thumb
 561              		.thumb_func
 562              		.type	uart_string_reset, %function
 563              	uart_string_reset:
 564              	.LFB71:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 14


 153:modem.c       **** 
 154:modem.c       **** // Clear and reset the uart_received_string variable and uart_string_index for the next transmissio
 155:modem.c       **** void uart_string_reset(){
 565              		.loc 1 155 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 1, uses_anonymous_args = 0
 569 0000 80B5     		push	{r7, lr}
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 7, -8
 572              		.cfi_offset 14, -4
 573 0002 00AF     		add	r7, sp, #0
 574              		.cfi_def_cfa_register 7
 156:modem.c       ****     uart_string_index=0;
 575              		.loc 1 156 0
 576 0004 064B     		ldr	r3, .L31
 577 0006 0022     		movs	r2, #0
 578 0008 1A80     		strh	r2, [r3]	@ movhi
 157:modem.c       ****     // memset(void *str, int c, size_t n) copies the character c (an unsigned char) to the first n 
 158:modem.c       ****     memset(uart_received_string,'\0',sizeof(uart_received_string));
 579              		.loc 1 158 0
 580 000a 4FF48062 		mov	r2, #1024
 581 000e 0021     		movs	r1, #0
 582 0010 0448     		ldr	r0, .L31+4
 583 0012 FFF7FEFF 		bl	memset
 159:modem.c       ****     // Clears the receiver memory buffer and hardware RX FIFO of all received data.
 160:modem.c       ****     UART_Telit_ClearRxBuffer();
 584              		.loc 1 160 0
 585 0016 FFF7FEFF 		bl	UART_Telit_ClearRxBuffer
 161:modem.c       **** }
 586              		.loc 1 161 0
 587 001a 00BF     		nop
 588 001c 80BD     		pop	{r7, pc}
 589              	.L32:
 590 001e 00BF     		.align	2
 591              	.L31:
 592 0020 00000000 		.word	uart_string_index
 593 0024 00000000 		.word	uart_received_string
 594              		.cfi_endproc
 595              	.LFE71:
 596              		.size	uart_string_reset, .-uart_string_reset
 597              		.section	.rodata
 598              		.align	2
 599              	.LC6:
 600 0078 4D6F6465 		.ascii	"Modem sent AT command without timeout: %s\015\012\000"
 600      6D207365 
 600      6E742041 
 600      5420636F 
 600      6D6D616E 
 601              		.align	2
 602              	.LC7:
 603 00a4 4D6F6465 		.ascii	"Modem Received expected AT Response on first Try:\012"
 603      6D205265 
 603      63656976 
 603      65642065 
 603      78706563 
 604 00d6 436F6D6D 		.ascii	"Command: %s\012Received: %s\015\012\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 15


 604      616E643A 
 604      2025730A 
 604      52656365 
 604      69766564 
 605 00f1 000000   		.align	2
 606              	.LC8:
 607 00f4 4D6F6465 		.ascii	"Modem required %d tries to receive AT Response: %s\015"
 607      6D207265 
 607      71756972 
 607      65642025 
 607      64207472 
 608 0127 0A00     		.ascii	"\012\000"
 609 0129 000000   		.align	2
 610              	.LC9:
 611 012c 436F756C 		.ascii	"Could not write AT command: %s\012 Received: %s\012"
 611      64206E6F 
 611      74207772 
 611      69746520 
 611      41542063 
 612 0159 00       		.ascii	"\000"
 613              		.section	.text.at_write_command,"ax",%progbits
 614              		.align	2
 615              		.global	at_write_command
 616              		.thumb
 617              		.thumb_func
 618              		.type	at_write_command, %function
 619              	at_write_command:
 620              	.LFB72:
 162:modem.c       **** 
 163:modem.c       **** // Modem controlled  via  the  serial  interface  using  the  standard  AT commands.
 164:modem.c       **** // AT is an ATTENTION command and is used as a prefix to other parameters in a string. 
 165:modem.c       **** // Sends commands to the modem
 166:modem.c       **** uint8_t at_write_command(char* commands, char* expected_response,uint32_t timeout){
 621              		.loc 1 166 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 40
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625 0000 80B5     		push	{r7, lr}
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 7, -8
 628              		.cfi_offset 14, -4
 629 0002 8AB0     		sub	sp, sp, #40
 630              		.cfi_def_cfa_offset 48
 631 0004 00AF     		add	r7, sp, #0
 632              		.cfi_def_cfa_register 7
 633 0006 F860     		str	r0, [r7, #12]
 634 0008 B960     		str	r1, [r7, #8]
 635 000a 7A60     		str	r2, [r7, #4]
 167:modem.c       **** 
 168:modem.c       ****     uint32 at_attempt = 0;
 636              		.loc 1 168 0
 637 000c 0023     		movs	r3, #0
 638 000e 7B62     		str	r3, [r7, #36]
 169:modem.c       ****     
 170:modem.c       ****     for(at_attempt = 0; at_attempt < 3; at_attempt++) {
 639              		.loc 1 170 0
 640 0010 0023     		movs	r3, #0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 16


 641 0012 7B62     		str	r3, [r7, #36]
 642 0014 46E0     		b	.L34
 643              	.L42:
 644              	.LBB4:
 171:modem.c       ****         
 172:modem.c       ****         char* compare_location;
 173:modem.c       ****         uint32_t delay=10;
 645              		.loc 1 173 0
 646 0016 0A23     		movs	r3, #10
 647 0018 FB61     		str	r3, [r7, #28]
 174:modem.c       ****         uint32_t i, interval=timeout/delay;        
 648              		.loc 1 174 0
 649 001a 7A68     		ldr	r2, [r7, #4]
 650 001c FB69     		ldr	r3, [r7, #28]
 651 001e B2FBF3F3 		udiv	r3, r2, r3
 652 0022 BB61     		str	r3, [r7, #24]
 175:modem.c       ****         
 176:modem.c       ****         // Clear and reset the uart_received_string variable and uart_string_index for the next tra
 177:modem.c       ****         uart_string_reset();
 653              		.loc 1 177 0
 654 0024 FFF7FEFF 		bl	uart_string_reset
 178:modem.c       ****         
 179:modem.c       ****         // Sends a NULL terminated string to the TX buffer for transmission.
 180:modem.c       ****         UART_Telit_PutString(commands);
 655              		.loc 1 180 0
 656 0028 F868     		ldr	r0, [r7, #12]
 657 002a FFF7FEFF 		bl	UART_Telit_PutString
 181:modem.c       ****         
 182:modem.c       ****         
 183:modem.c       ****         // If no timeout, no need to wait for response
 184:modem.c       ****         if(timeout == NO_AT_TIMEOUT){
 658              		.loc 1 184 0
 659 002e 7B68     		ldr	r3, [r7, #4]
 660 0030 002B     		cmp	r3, #0
 661 0032 06D1     		bne	.L35
 185:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem sent AT command without timeout: %s\r\n", commands);
 662              		.loc 1 185 0
 663 0034 FA68     		ldr	r2, [r7, #12]
 664 0036 1F49     		ldr	r1, .L43
 665 0038 0020     		movs	r0, #0
 666 003a FFF7FEFF 		bl	printNotif
 186:modem.c       ****             return 1u;
 667              		.loc 1 186 0
 668 003e 0123     		movs	r3, #1
 669 0040 34E0     		b	.L36
 670              	.L35:
 187:modem.c       ****         }
 188:modem.c       ****       
 189:modem.c       ****      
 190:modem.c       ****         for(i=0;i<interval;i++){ 
 671              		.loc 1 190 0
 672 0042 0023     		movs	r3, #0
 673 0044 3B62     		str	r3, [r7, #32]
 674 0046 20E0     		b	.L37
 675              	.L41:
 191:modem.c       ****             CyDelay((uint32) delay);
 676              		.loc 1 191 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 17


 677 0048 F869     		ldr	r0, [r7, #28]
 678 004a FFF7FEFF 		bl	CyDelay
 192:modem.c       ****             // strstr(const char *haystack, const char *needle) function finds the first occurrence
 193:modem.c       ****             // Returns a pointer to the first occurrence in haystack of any of the entire sequence 
 194:modem.c       ****             compare_location=strstr(uart_received_string,expected_response);        
 679              		.loc 1 194 0
 680 004e B968     		ldr	r1, [r7, #8]
 681 0050 1948     		ldr	r0, .L43+4
 682 0052 FFF7FEFF 		bl	strstr
 683 0056 7861     		str	r0, [r7, #20]
 195:modem.c       ****             if(compare_location!=NULL) {
 684              		.loc 1 195 0
 685 0058 7B69     		ldr	r3, [r7, #20]
 686 005a 002B     		cmp	r3, #0
 687 005c 12D0     		beq	.L38
 196:modem.c       ****                 if (at_attempt == 0){
 688              		.loc 1 196 0
 689 005e 7B6A     		ldr	r3, [r7, #36]
 690 0060 002B     		cmp	r3, #0
 691 0062 06D1     		bne	.L39
 197:modem.c       ****                     // we add \n for new line to make it easier to decipher
 198:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT,"Modem Received expected AT Response on first Try:\
 692              		.loc 1 198 0
 693 0064 144B     		ldr	r3, .L43+4
 694 0066 FA68     		ldr	r2, [r7, #12]
 695 0068 1449     		ldr	r1, .L43+8
 696 006a 0020     		movs	r0, #0
 697 006c FFF7FEFF 		bl	printNotif
 698 0070 06E0     		b	.L40
 699              	.L39:
 199:modem.c       ****                 }else{
 200:modem.c       ****                     printNotif(NOTIF_TYPE_WARNING,"Modem required %d tries to receive AT Response: 
 700              		.loc 1 200 0
 701 0072 7B6A     		ldr	r3, [r7, #36]
 702 0074 5A1C     		adds	r2, r3, #1
 703 0076 104B     		ldr	r3, .L43+4
 704 0078 1149     		ldr	r1, .L43+12
 705 007a 0120     		movs	r0, #1
 706 007c FFF7FEFF 		bl	printNotif
 707              	.L40:
 201:modem.c       ****                  
 202:modem.c       ****                 }
 203:modem.c       ****                 return(1);
 708              		.loc 1 203 0
 709 0080 0123     		movs	r3, #1
 710 0082 13E0     		b	.L36
 711              	.L38:
 190:modem.c       ****             CyDelay((uint32) delay);
 712              		.loc 1 190 0 discriminator 2
 713 0084 3B6A     		ldr	r3, [r7, #32]
 714 0086 0133     		adds	r3, r3, #1
 715 0088 3B62     		str	r3, [r7, #32]
 716              	.L37:
 190:modem.c       ****             CyDelay((uint32) delay);
 717              		.loc 1 190 0 is_stmt 0 discriminator 1
 718 008a 3A6A     		ldr	r2, [r7, #32]
 719 008c BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 18


 720 008e 9A42     		cmp	r2, r3
 721 0090 DAD3     		bcc	.L41
 204:modem.c       ****             }
 205:modem.c       ****             
 206:modem.c       ****         }  
 207:modem.c       ****         
 208:modem.c       ****         // Something went wrong, restart UART
 209:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not write AT command: %s\n Received: %s\n", commands,uar
 722              		.loc 1 209 0 is_stmt 1 discriminator 2
 723 0092 094B     		ldr	r3, .L43+4
 724 0094 FA68     		ldr	r2, [r7, #12]
 725 0096 0B49     		ldr	r1, .L43+16
 726 0098 0220     		movs	r0, #2
 727 009a FFF7FEFF 		bl	printNotif
 728              	.LBE4:
 170:modem.c       ****         
 729              		.loc 1 170 0 discriminator 2
 730 009e 7B6A     		ldr	r3, [r7, #36]
 731 00a0 0133     		adds	r3, r3, #1
 732 00a2 7B62     		str	r3, [r7, #36]
 733              	.L34:
 170:modem.c       ****         
 734              		.loc 1 170 0 is_stmt 0 discriminator 1
 735 00a4 7B6A     		ldr	r3, [r7, #36]
 736 00a6 022B     		cmp	r3, #2
 737 00a8 B5D9     		bls	.L42
 210:modem.c       ****       
 211:modem.c       ****     }
 212:modem.c       ****    // printNotif(NOTIF_TYPE_ERROR,"Modem AT response timeout: %s\r\n", commands);
 213:modem.c       ****           
 214:modem.c       ****     return(0);    
 738              		.loc 1 214 0 is_stmt 1
 739 00aa 0023     		movs	r3, #0
 740              	.L36:
 215:modem.c       **** }
 741              		.loc 1 215 0
 742 00ac 1846     		mov	r0, r3
 743 00ae 2837     		adds	r7, r7, #40
 744              		.cfi_def_cfa_offset 8
 745 00b0 BD46     		mov	sp, r7
 746              		.cfi_def_cfa_register 13
 747              		@ sp needed
 748 00b2 80BD     		pop	{r7, pc}
 749              	.L44:
 750              		.align	2
 751              	.L43:
 752 00b4 78000000 		.word	.LC6
 753 00b8 00000000 		.word	uart_received_string
 754 00bc A4000000 		.word	.LC7
 755 00c0 F4000000 		.word	.LC8
 756 00c4 2C010000 		.word	.LC9
 757              		.cfi_endproc
 758              	.LFE72:
 759              		.size	at_write_command, .-at_write_command
 760              		.section	.rodata
 761 015a 0000     		.align	2
 762              	.LC10:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 19


 763 015c 54455354 		.ascii	"TEST_MODEM\000"
 763      5F4D4F44 
 763      454D00
 764 0167 00       		.align	2
 765              	.LC11:
 766 0168 4E6F2072 		.ascii	"No reponse from modem.\000"
 766      65706F6E 
 766      73652066 
 766      726F6D20 
 766      6D6F6465 
 767 017f 00       		.align	2
 768              	.LC12:
 769 0180 4D6F6465 		.ascii	"Modem connected to network.\000"
 769      6D20636F 
 769      6E6E6563 
 769      74656420 
 769      746F206E 
 770              		.section	.text.modem_test,"ax",%progbits
 771              		.align	2
 772              		.global	modem_test
 773              		.thumb
 774              		.thumb_func
 775              		.type	modem_test, %function
 776              	modem_test:
 777              	.LFB73:
 216:modem.c       **** 
 217:modem.c       **** // Test modem -- needs fleshed out
 218:modem.c       **** test_t modem_test(){
 778              		.loc 1 218 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 408
 781              		@ frame_needed = 1, uses_anonymous_args = 0
 782 0000 B0B5     		push	{r4, r5, r7, lr}
 783              		.cfi_def_cfa_offset 16
 784              		.cfi_offset 4, -16
 785              		.cfi_offset 5, -12
 786              		.cfi_offset 7, -8
 787              		.cfi_offset 14, -4
 788 0002 E6B0     		sub	sp, sp, #408
 789              		.cfi_def_cfa_offset 424
 790 0004 00AF     		add	r7, sp, #0
 791              		.cfi_def_cfa_register 7
 792 0006 3B1D     		adds	r3, r7, #4
 793 0008 1860     		str	r0, [r3]
 219:modem.c       ****     
 220:modem.c       ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
 221:modem.c       ****     test.status = 0;
 794              		.loc 1 221 0
 795 000a 07F10C03 		add	r3, r7, #12
 796 000e 0022     		movs	r2, #0
 797 0010 83F88020 		strb	r2, [r3, #128]
 222:modem.c       ****     // Print test name and test reason
 223:modem.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_MODEM");
 798              		.loc 1 223 0
 799 0014 07F10C03 		add	r3, r7, #12
 800 0018 364A     		ldr	r2, .L53
 801 001a 07CA     		ldmia	r2, {r0, r1, r2}
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 20


 802 001c 03C3     		stmia	r3!, {r0, r1}
 803 001e 1A80     		strh	r2, [r3]	@ movhi
 804 0020 0233     		adds	r3, r3, #2
 805 0022 120C     		lsrs	r2, r2, #16
 806 0024 1A70     		strb	r2, [r3]
 224:modem.c       ****     snprintf(test.reason,sizeof(test.reason),"No reponse from modem.");
 807              		.loc 1 224 0
 808 0026 07F10C03 		add	r3, r7, #12
 809 002a 8133     		adds	r3, r3, #129
 810 002c 324A     		ldr	r2, .L53+4
 811 002e 1C46     		mov	r4, r3
 812 0030 1546     		mov	r5, r2
 813 0032 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 814 0034 2060     		str	r0, [r4]	@ unaligned
 815 0036 6160     		str	r1, [r4, #4]	@ unaligned
 816 0038 A260     		str	r2, [r4, #8]	@ unaligned
 817 003a E360     		str	r3, [r4, #12]	@ unaligned
 818 003c 2868     		ldr	r0, [r5]	@ unaligned
 819 003e 2061     		str	r0, [r4, #16]	@ unaligned
 820 0040 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 821 0042 AA79     		ldrb	r2, [r5, #6]
 822 0044 A382     		strh	r3, [r4, #20]	@ unaligned
 823 0046 1346     		mov	r3, r2
 824 0048 A375     		strb	r3, [r4, #22]
 825              	.LBB5:
 225:modem.c       ****    
 226:modem.c       ****     //try the modem 60*1000ms (60 secs)
 227:modem.c       ****     for(int i = 0; i< 60; i++){
 826              		.loc 1 227 0
 827 004a 0023     		movs	r3, #0
 828 004c C7F89431 		str	r3, [r7, #404]
 829 0050 3AE0     		b	.L46
 830              	.L51:
 228:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 229:modem.c       ****         modem_process_tasks();
 831              		.loc 1 229 0
 832 0052 FFF7FEFF 		bl	modem_process_tasks
 230:modem.c       ****          
 231:modem.c       ****         if(modem_get_state() == MODEM_STATE_OFF){
 833              		.loc 1 231 0
 834 0056 FFF7FEFF 		bl	modem_get_state
 835 005a 0346     		mov	r3, r0
 836 005c 002B     		cmp	r3, #0
 837 005e 02D1     		bne	.L47
 232:modem.c       ****             // This puts all the modem points into a state that won't leak power
 233:modem.c       ****             modem_power_up();
 838              		.loc 1 233 0
 839 0060 FFF7FEFF 		bl	modem_power_up
 840 0064 27E0     		b	.L48
 841              	.L47:
 234:modem.c       ****             // Should put this on a max_try counter, so we don't just keep trying to connect over a
 235:modem.c       ****             
 236:modem.c       ****         }else if(modem_get_state() == MODEM_STATE_READY){
 842              		.loc 1 236 0
 843 0066 FFF7FEFF 		bl	modem_get_state
 844 006a 0346     		mov	r3, r0
 845 006c 042B     		cmp	r3, #4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 21


 846 006e 22D1     		bne	.L48
 847              	.LBB6:
 237:modem.c       ****         
 238:modem.c       ****         
 239:modem.c       ****         // Get time, and if it looks good, set the RTC with it
 240:modem.c       ****         long network_time = modem_get_network_time();
 848              		.loc 1 240 0
 849 0070 FFF7FEFF 		bl	modem_get_network_time
 850 0074 C7F89001 		str	r0, [r7, #400]
 241:modem.c       ****         if(network_time != 0){
 851              		.loc 1 241 0
 852 0078 D7F89031 		ldr	r3, [r7, #400]
 853 007c 002B     		cmp	r3, #0
 854 007e 03D0     		beq	.L49
 242:modem.c       ****             setTime(network_time); // Set the system time 
 855              		.loc 1 242 0
 856 0080 D7F89001 		ldr	r0, [r7, #400]
 857 0084 FFF7FEFF 		bl	setTime
 858              	.L49:
 243:modem.c       ****         }
 244:modem.c       ****             
 245:modem.c       ****         snprintf(test.reason,sizeof(test.reason),"Modem connected to network.");
 859              		.loc 1 245 0
 860 0088 07F10C03 		add	r3, r7, #12
 861 008c 8133     		adds	r3, r3, #129
 862 008e 1B4A     		ldr	r2, .L53+8
 863 0090 1D46     		mov	r5, r3
 864 0092 1446     		mov	r4, r2
 865 0094 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 866 0096 2860     		str	r0, [r5]	@ unaligned
 867 0098 6960     		str	r1, [r5, #4]	@ unaligned
 868 009a AA60     		str	r2, [r5, #8]	@ unaligned
 869 009c EB60     		str	r3, [r5, #12]	@ unaligned
 870 009e 07CC     		ldmia	r4!, {r0, r1, r2}
 871 00a0 2861     		str	r0, [r5, #16]	@ unaligned
 872 00a2 6961     		str	r1, [r5, #20]	@ unaligned
 873 00a4 AA61     		str	r2, [r5, #24]	@ unaligned
 246:modem.c       ****         test.status = 1;
 874              		.loc 1 246 0
 875 00a6 07F10C03 		add	r3, r7, #12
 876 00aa 0122     		movs	r2, #1
 877 00ac 83F88020 		strb	r2, [r3, #128]
 247:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 248:modem.c       ****         modem_power_down();
 878              		.loc 1 248 0
 879 00b0 FFF7FEFF 		bl	modem_power_down
 249:modem.c       ****         break;
 880              		.loc 1 249 0
 881 00b4 0CE0     		b	.L50
 882              	.L48:
 883              	.LBE6:
 250:modem.c       ****         
 251:modem.c       ****       }
 252:modem.c       ****         CyDelay(1000u);
 884              		.loc 1 252 0 discriminator 2
 885 00b6 4FF47A70 		mov	r0, #1000
 886 00ba FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 22


 227:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 887              		.loc 1 227 0 discriminator 2
 888 00be D7F89431 		ldr	r3, [r7, #404]
 889 00c2 0133     		adds	r3, r3, #1
 890 00c4 C7F89431 		str	r3, [r7, #404]
 891              	.L46:
 227:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 892              		.loc 1 227 0 is_stmt 0 discriminator 1
 893 00c8 D7F89431 		ldr	r3, [r7, #404]
 894 00cc 3B2B     		cmp	r3, #59
 895 00ce C0DD     		ble	.L51
 896              	.L50:
 897              	.LBE5:
 253:modem.c       ****         
 254:modem.c       ****     }
 255:modem.c       ****     
 256:modem.c       ****     return test;
 898              		.loc 1 256 0 is_stmt 1
 899 00d0 3B1D     		adds	r3, r7, #4
 900 00d2 1A68     		ldr	r2, [r3]
 901 00d4 07F10C03 		add	r3, r7, #12
 902 00d8 1046     		mov	r0, r2
 903 00da 1946     		mov	r1, r3
 904 00dc 40F28113 		movw	r3, #385
 905 00e0 1A46     		mov	r2, r3
 906 00e2 FFF7FEFF 		bl	memcpy
 257:modem.c       **** }
 907              		.loc 1 257 0
 908 00e6 3B1D     		adds	r3, r7, #4
 909 00e8 1868     		ldr	r0, [r3]
 910 00ea 07F5CC77 		add	r7, r7, #408
 911              		.cfi_def_cfa_offset 16
 912 00ee BD46     		mov	sp, r7
 913              		.cfi_def_cfa_register 13
 914              		@ sp needed
 915 00f0 B0BD     		pop	{r4, r5, r7, pc}
 916              	.L54:
 917 00f2 00BF     		.align	2
 918              	.L53:
 919 00f4 5C010000 		.word	.LC10
 920 00f8 68010000 		.word	.LC11
 921 00fc 80010000 		.word	.LC12
 922              		.cfi_endproc
 923              	.LFE73:
 924              		.size	modem_test, .-modem_test
 925              		.section	.text.extract_string,"ax",%progbits
 926              		.align	2
 927              		.global	extract_string
 928              		.thumb
 929              		.thumb_func
 930              		.type	extract_string, %function
 931              	extract_string:
 932              	.LFB74:
 258:modem.c       **** 
 259:modem.c       **** // Extract string from the UART
 260:modem.c       **** uint8 extract_string(char* from, const char* beginMarker, const char* endMarker,  char* target){
 933              		.loc 1 260 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 23


 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 24
 936              		@ frame_needed = 1, uses_anonymous_args = 0
 937 0000 80B5     		push	{r7, lr}
 938              		.cfi_def_cfa_offset 8
 939              		.cfi_offset 7, -8
 940              		.cfi_offset 14, -4
 941 0002 86B0     		sub	sp, sp, #24
 942              		.cfi_def_cfa_offset 32
 943 0004 00AF     		add	r7, sp, #0
 944              		.cfi_def_cfa_register 7
 945 0006 F860     		str	r0, [r7, #12]
 946 0008 B960     		str	r1, [r7, #8]
 947 000a 7A60     		str	r2, [r7, #4]
 948 000c 3B60     		str	r3, [r7]
 261:modem.c       ****     
 262:modem.c       ****         char *a, *b;
 263:modem.c       ****   
 264:modem.c       ****         // Expect the UART to contain something like "+CESQ: ##,##,##,##,##,##\r\n\r\nOK"
 265:modem.c       ****         // - Search for "+CESQ: ".  Place the starting pointer, a, at the resulting index
 266:modem.c       ****         a = strstr(from,beginMarker);
 949              		.loc 1 266 0
 950 000e B968     		ldr	r1, [r7, #8]
 951 0010 F868     		ldr	r0, [r7, #12]
 952 0012 FFF7FEFF 		bl	strstr
 953 0016 7861     		str	r0, [r7, #20]
 267:modem.c       ****         if (a == NULL) {
 954              		.loc 1 267 0
 955 0018 7B69     		ldr	r3, [r7, #20]
 956 001a 002B     		cmp	r3, #0
 957 001c 01D1     		bne	.L56
 268:modem.c       ****             //puts("+CESQ: not found in uart_received_string");
 269:modem.c       ****             a = from;
 958              		.loc 1 269 0
 959 001e FB68     		ldr	r3, [r7, #12]
 960 0020 7B61     		str	r3, [r7, #20]
 961              	.L56:
 270:modem.c       ****         }
 271:modem.c       ****         // The strlen() function calculates the length of a given string.
 272:modem.c       ****         a += strlen(beginMarker);
 962              		.loc 1 272 0
 963 0022 B868     		ldr	r0, [r7, #8]
 964 0024 FFF7FEFF 		bl	strlen
 965 0028 0246     		mov	r2, r0
 966 002a 7B69     		ldr	r3, [r7, #20]
 967 002c 1344     		add	r3, r3, r2
 968 002e 7B61     		str	r3, [r7, #20]
 273:modem.c       ****         
 274:modem.c       ****         // - Find the end marking and offset by 1
 275:modem.c       ****         // strstr(const char *haystack, const char *needle) function finds the first occurrence of 
 276:modem.c       ****         // Returns a pointer to the first occurrence in haystack of any of the entire sequence of c
 277:modem.c       ****         b = strstr(a,endMarker);
 969              		.loc 1 277 0
 970 0030 7968     		ldr	r1, [r7, #4]
 971 0032 7869     		ldr	r0, [r7, #20]
 972 0034 FFF7FEFF 		bl	strstr
 973 0038 3861     		str	r0, [r7, #16]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 24


 278:modem.c       ****         if (b == NULL) {
 974              		.loc 1 278 0
 975 003a 3B69     		ldr	r3, [r7, #16]
 976 003c 002B     		cmp	r3, #0
 977 003e 06D1     		bne	.L57
 279:modem.c       ****             // Puts("Comma not found in uart_received_string");
 280:modem.c       ****             b=from+strlen(from);
 978              		.loc 1 280 0
 979 0040 F868     		ldr	r0, [r7, #12]
 980 0042 FFF7FEFF 		bl	strlen
 981 0046 0246     		mov	r2, r0
 982 0048 FB68     		ldr	r3, [r7, #12]
 983 004a 1344     		add	r3, r3, r2
 984 004c 3B61     		str	r3, [r7, #16]
 985              	.L57:
 281:modem.c       ****         }        
 282:modem.c       ****         
 283:modem.c       ****         // Parse the strings and store the respective rssi and fer values
 284:modem.c       ****         strncpy(target,a,b-a);
 986              		.loc 1 284 0
 987 004e 3A69     		ldr	r2, [r7, #16]
 988 0050 7B69     		ldr	r3, [r7, #20]
 989 0052 D31A     		subs	r3, r2, r3
 990 0054 1A46     		mov	r2, r3
 991 0056 7969     		ldr	r1, [r7, #20]
 992 0058 3868     		ldr	r0, [r7]
 993 005a FFF7FEFF 		bl	strncpy
 285:modem.c       ****         target[b-a] = '\0';
 994              		.loc 1 285 0
 995 005e 3A69     		ldr	r2, [r7, #16]
 996 0060 7B69     		ldr	r3, [r7, #20]
 997 0062 D31A     		subs	r3, r2, r3
 998 0064 1A46     		mov	r2, r3
 999 0066 3B68     		ldr	r3, [r7]
 1000 0068 1344     		add	r3, r3, r2
 1001 006a 0022     		movs	r2, #0
 1002 006c 1A70     		strb	r2, [r3]
 286:modem.c       ****         return 1u;
 1003              		.loc 1 286 0
 1004 006e 0123     		movs	r3, #1
 287:modem.c       ****         
 288:modem.c       **** }
 1005              		.loc 1 288 0
 1006 0070 1846     		mov	r0, r3
 1007 0072 1837     		adds	r7, r7, #24
 1008              		.cfi_def_cfa_offset 8
 1009 0074 BD46     		mov	sp, r7
 1010              		.cfi_def_cfa_register 13
 1011              		@ sp needed
 1012 0076 80BD     		pop	{r7, pc}
 1013              		.cfi_endproc
 1014              	.LFE74:
 1015              		.size	extract_string, .-extract_string
 1016              		.section	.rodata
 1017              		.align	2
 1018              	.LC13:
 1019 019c 54696D65 		.ascii	"Time to connect to network: %d seconds\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 25


 1019      20746F20 
 1019      636F6E6E 
 1019      65637420 
 1019      746F206E 
 1020 01c3 00       		.align	2
 1021              	.LC14:
 1022 01c4 4D6F6465 		.ascii	"Modem timed out on network connect\000"
 1022      6D207469 
 1022      6D656420 
 1022      6F757420 
 1022      6F6E206E 
 1023 01e7 00       		.align	2
 1024              	.LC15:
 1025 01e8 41637175 		.ascii	"Acquired IP address: %d seconds\000"
 1025      69726564 
 1025      20495020 
 1025      61646472 
 1025      6573733A 
 1026              		.align	2
 1027              	.LC16:
 1028 0208 4D6F6465 		.ascii	"Modem timed out on IP address acquire.\000"
 1028      6D207469 
 1028      6D656420 
 1028      6F757420 
 1028      6F6E2049 
 1029              		.section	.text.modem_process_tasks,"ax",%progbits
 1030              		.align	2
 1031              		.global	modem_process_tasks
 1032              		.thumb
 1033              		.thumb_func
 1034              		.type	modem_process_tasks, %function
 1035              	modem_process_tasks:
 1036              	.LFB75:
 289:modem.c       **** 
 290:modem.c       **** // Function to startup the modem, connect to the network, and then hand it off to sleep
 291:modem.c       **** uint8 modem_process_tasks(){
 1037              		.loc 1 291 0
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 8
 1040              		@ frame_needed = 1, uses_anonymous_args = 0
 1041 0000 80B5     		push	{r7, lr}
 1042              		.cfi_def_cfa_offset 8
 1043              		.cfi_offset 7, -8
 1044              		.cfi_offset 14, -4
 1045 0002 82B0     		sub	sp, sp, #8
 1046              		.cfi_def_cfa_offset 16
 1047 0004 00AF     		add	r7, sp, #0
 1048              		.cfi_def_cfa_register 7
 292:modem.c       ****     // If modem state is "startup" then get the modem start time, configure modem settings, and cha
 293:modem.c       ****     if(modem_state == MODEM_STATE_STARTUP){
 1049              		.loc 1 293 0
 1050 0006 534B     		ldr	r3, .L75
 1051 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1052 000a 012B     		cmp	r3, #1
 1053 000c 0BD1     		bne	.L60
 294:modem.c       ****         
 295:modem.c       ****         modem_start_time_stamp = getTimeStamp(); // Get timestamp for modem start time
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 26


 1054              		.loc 1 295 0
 1055 000e FFF7FEFF 		bl	getTimeStamp
 1056 0012 0246     		mov	r2, r0
 1057 0014 504B     		ldr	r3, .L75+4
 1058 0016 1A60     		str	r2, [r3]
 296:modem.c       ****         modem_configure_settings(); // Configure modem settings
 1059              		.loc 1 296 0
 1060 0018 FFF7FEFF 		bl	modem_configure_settings
 297:modem.c       ****         modem_state = MODEM_STATE_WAITING_FOR_NETWORK; // Change modem state 
 1061              		.loc 1 297 0
 1062 001c 4D4B     		ldr	r3, .L75
 1063 001e 0222     		movs	r2, #2
 1064 0020 1A70     		strb	r2, [r3]
 298:modem.c       ****         return 1u; // Keep going, don't hand off to sleep yet
 1065              		.loc 1 298 0
 1066 0022 0123     		movs	r3, #1
 1067 0024 92E0     		b	.L61
 1068              	.L60:
 299:modem.c       ****         
 300:modem.c       ****     }
 301:modem.c       ****     // Else if modem state is "waiting for network" 
 302:modem.c       ****     else if(modem_state == MODEM_STATE_WAITING_FOR_NETWORK){
 1069              		.loc 1 302 0
 1070 0026 4B4B     		ldr	r3, .L75
 1071 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1072 002a 022B     		cmp	r3, #2
 1073 002c 5FD1     		bne	.L62
 1074              	.LBB7:
 303:modem.c       ****         
 304:modem.c       ****         // Check if modem has a good cell signal each second for up to 30 seconds
 305:modem.c       ****         for(uint8 i=0;i<30;i++){
 1075              		.loc 1 305 0
 1076 002e 0023     		movs	r3, #0
 1077 0030 FB71     		strb	r3, [r7, #7]
 1078 0032 2BE0     		b	.L63
 1079              	.L68:
 306:modem.c       ****             // Get cell network stats
 307:modem.c       ****             get_cell_network_stats();
 1080              		.loc 1 307 0
 1081 0034 FFF7FEFF 		bl	get_cell_network_stats
 308:modem.c       ****             // If SIM is standard, check rsrp
 309:modem.c       ****             if(updatable_parameters.sim_type == SIM_TYPE_STANDARD){
 1082              		.loc 1 309 0
 1083 0038 484B     		ldr	r3, .L75+8
 1084 003a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1085 003c 83F00103 		eor	r3, r3, #1
 1086 0040 DBB2     		uxtb	r3, r3
 1087 0042 002B     		cmp	r3, #0
 1088 0044 07D0     		beq	.L64
 310:modem.c       ****                 // If cell signal (rsrp) is strong enough, break and connect to the network
 311:modem.c       ****                 // Otherwise, keep checking rsrp
 312:modem.c       ****                 if(modem_stats.rsrp > 26 && modem_stats.rsrp != 255){
 1089              		.loc 1 312 0
 1090 0046 464B     		ldr	r3, .L75+12
 1091 0048 5B69     		ldr	r3, [r3, #20]
 1092 004a 1A2B     		cmp	r3, #26
 1093 004c 03DD     		ble	.L64
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 27


 1094              		.loc 1 312 0 is_stmt 0 discriminator 1
 1095 004e 444B     		ldr	r3, .L75+12
 1096 0050 5B69     		ldr	r3, [r3, #20]
 1097 0052 FF2B     		cmp	r3, #255
 1098 0054 1ED1     		bne	.L74
 1099              	.L64:
 313:modem.c       ****                     break;
 314:modem.c       ****                 }
 315:modem.c       ****             }
 316:modem.c       ****             // If SIM is super, check if rsrp or rscp are strong enough
 317:modem.c       ****             if(updatable_parameters.sim_type == SIM_TYPE_SUPER){
 1100              		.loc 1 317 0 is_stmt 1
 1101 0056 414B     		ldr	r3, .L75+8
 1102 0058 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1103 005a 002B     		cmp	r3, #0
 1104 005c 0FD0     		beq	.L66
 318:modem.c       ****                 // If cell signal is strong enough, break and connect to the network
 319:modem.c       ****                 // Otherwise, keep checking rsrp or rscp
 320:modem.c       ****                 if((modem_stats.rscp > 36 && modem_stats.rscp != 255)||(modem_stats.rsrp > 26 && mo
 1105              		.loc 1 320 0
 1106 005e 404B     		ldr	r3, .L75+12
 1107 0060 9B68     		ldr	r3, [r3, #8]
 1108 0062 242B     		cmp	r3, #36
 1109 0064 03DD     		ble	.L67
 1110              		.loc 1 320 0 is_stmt 0 discriminator 1
 1111 0066 3E4B     		ldr	r3, .L75+12
 1112 0068 9B68     		ldr	r3, [r3, #8]
 1113 006a FF2B     		cmp	r3, #255
 1114 006c 13D1     		bne	.L65
 1115              	.L67:
 1116              		.loc 1 320 0 discriminator 3
 1117 006e 3C4B     		ldr	r3, .L75+12
 1118 0070 5B69     		ldr	r3, [r3, #20]
 1119 0072 1A2B     		cmp	r3, #26
 1120 0074 03DD     		ble	.L66
 1121              		.loc 1 320 0 discriminator 4
 1122 0076 3A4B     		ldr	r3, .L75+12
 1123 0078 5B69     		ldr	r3, [r3, #20]
 1124 007a FF2B     		cmp	r3, #255
 1125 007c 0BD1     		bne	.L65
 1126              	.L66:
 321:modem.c       ****                     break;
 322:modem.c       ****                 }
 323:modem.c       ****             }
 324:modem.c       ****             // Delay for 1 second
 325:modem.c       ****             CyDelay(1000u);
 1127              		.loc 1 325 0 is_stmt 1 discriminator 2
 1128 007e 4FF47A70 		mov	r0, #1000
 1129 0082 FFF7FEFF 		bl	CyDelay
 305:modem.c       ****             // Get cell network stats
 1130              		.loc 1 305 0 discriminator 2
 1131 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1132 0088 0133     		adds	r3, r3, #1
 1133 008a FB71     		strb	r3, [r7, #7]
 1134              	.L63:
 305:modem.c       ****             // Get cell network stats
 1135              		.loc 1 305 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 28


 1136 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1137 008e 1D2B     		cmp	r3, #29
 1138 0090 D0D9     		bls	.L68
 1139 0092 00E0     		b	.L65
 1140              	.L74:
 313:modem.c       ****                 }
 1141              		.loc 1 313 0 is_stmt 1
 1142 0094 00BF     		nop
 1143              	.L65:
 1144              	.LBE7:
 326:modem.c       ****         }
 327:modem.c       ****         
 328:modem.c       ****         // If modem connected to the cell network, save/print the time to connect to the network
 329:modem.c       ****         if(is_connected_to_cell_network()){
 1145              		.loc 1 329 0
 1146 0096 FFF7FEFF 		bl	is_connected_to_cell_network
 1147 009a 0346     		mov	r3, r0
 1148 009c 002B     		cmp	r3, #0
 1149 009e 13D0     		beq	.L69
 330:modem.c       ****       
 331:modem.c       ****              modem_stats.time_to_network_connect = (int)(getTimeStamp() - (int32)modem_start_time_s
 1150              		.loc 1 331 0
 1151 00a0 FFF7FEFF 		bl	getTimeStamp
 1152 00a4 0246     		mov	r2, r0
 1153 00a6 2C4B     		ldr	r3, .L75+4
 1154 00a8 1B68     		ldr	r3, [r3]
 1155 00aa D31A     		subs	r3, r2, r3
 1156 00ac 2C4A     		ldr	r2, .L75+12
 1157 00ae 9361     		str	r3, [r2, #24]
 332:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Time to connect to network: %d seconds",
 1158              		.loc 1 332 0
 1159 00b0 2B4B     		ldr	r3, .L75+12
 1160 00b2 9B69     		ldr	r3, [r3, #24]
 1161 00b4 1A46     		mov	r2, r3
 1162 00b6 2B49     		ldr	r1, .L75+16
 1163 00b8 0020     		movs	r0, #0
 1164 00ba FFF7FEFF 		bl	printNotif
 333:modem.c       ****                                             modem_stats.time_to_network_connect);
 334:modem.c       ****             set_up_internet_connection(); // Setup the internet connection
 1165              		.loc 1 334 0
 1166 00be FFF7FEFF 		bl	set_up_internet_connection
 335:modem.c       ****             modem_state = MODEM_STATE_WAITING_FOR_IP; // Change modem state 
 1167              		.loc 1 335 0
 1168 00c2 244B     		ldr	r3, .L75
 1169 00c4 0322     		movs	r2, #3
 1170 00c6 1A70     		strb	r2, [r3]
 1171              	.L69:
 336:modem.c       ****         }
 337:modem.c       ****         
 338:modem.c       ****         //power off if we time out should only take ~30 secs to connect to network
 339:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_NETWORK_CONNECT){
 1172              		.loc 1 339 0
 1173 00c8 FFF7FEFF 		bl	getTimeStamp
 1174 00cc 0246     		mov	r2, r0
 1175 00ce 224B     		ldr	r3, .L75+4
 1176 00d0 1B68     		ldr	r3, [r3]
 1177 00d2 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 29


 1178 00d4 B42B     		cmp	r3, #180
 1179 00d6 08DD     		ble	.L70
 340:modem.c       ****             modem_state = MODEM_STATE_OFF; // Change modem state
 1180              		.loc 1 340 0
 1181 00d8 1E4B     		ldr	r3, .L75
 1182 00da 0022     		movs	r2, #0
 1183 00dc 1A70     		strb	r2, [r3]
 341:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1184              		.loc 1 341 0
 1185 00de FFF7FEFF 		bl	modem_power_down
 342:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on network connect");
 1186              		.loc 1 342 0
 1187 00e2 2149     		ldr	r1, .L75+20
 1188 00e4 0220     		movs	r0, #2
 1189 00e6 FFF7FEFF 		bl	printNotif
 1190              	.L70:
 343:modem.c       ****             
 344:modem.c       ****         }
 345:modem.c       ****         return 0u;//ok to hand off to sleep
 1191              		.loc 1 345 0
 1192 00ea 0023     		movs	r3, #0
 1193 00ec 2EE0     		b	.L61
 1194              	.L62:
 346:modem.c       ****         
 347:modem.c       ****     // Else if modem state is "waiting for IP"
 348:modem.c       ****     }else if(modem_state == MODEM_STATE_WAITING_FOR_IP){
 1195              		.loc 1 348 0
 1196 00ee 194B     		ldr	r3, .L75
 1197 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1198 00f2 032B     		cmp	r3, #3
 1199 00f4 29D1     		bne	.L71
 349:modem.c       ****         // If the modem is connected to the internet, change modem state to "ready", save/print tim
 350:modem.c       ****         if(is_connected_to_internet()){
 1200              		.loc 1 350 0
 1201 00f6 FFF7FEFF 		bl	is_connected_to_internet
 1202 00fa 0346     		mov	r3, r0
 1203 00fc 002B     		cmp	r3, #0
 1204 00fe 11D0     		beq	.L72
 351:modem.c       ****             modem_state = MODEM_STATE_READY; // Change modem state
 1205              		.loc 1 351 0
 1206 0100 144B     		ldr	r3, .L75
 1207 0102 0422     		movs	r2, #4
 1208 0104 1A70     		strb	r2, [r3]
 352:modem.c       ****             // Save/print time to acquire IP address
 353:modem.c       ****             modem_stats.time_to_acquire_ip = (int)(getTimeStamp() - (int32)modem_start_time_stamp);
 1209              		.loc 1 353 0
 1210 0106 FFF7FEFF 		bl	getTimeStamp
 1211 010a 0246     		mov	r2, r0
 1212 010c 124B     		ldr	r3, .L75+4
 1213 010e 1B68     		ldr	r3, [r3]
 1214 0110 D31A     		subs	r3, r2, r3
 1215 0112 134A     		ldr	r2, .L75+12
 1216 0114 D361     		str	r3, [r2, #28]
 354:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Acquired IP address: %d seconds",
 1217              		.loc 1 354 0
 1218 0116 124B     		ldr	r3, .L75+12
 1219 0118 DB69     		ldr	r3, [r3, #28]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 30


 1220 011a 1A46     		mov	r2, r3
 1221 011c 1349     		ldr	r1, .L75+24
 1222 011e 0020     		movs	r0, #0
 1223 0120 FFF7FEFF 		bl	printNotif
 1224              	.L72:
 355:modem.c       ****                                             modem_stats.time_to_acquire_ip);
 356:modem.c       ****         }
 357:modem.c       ****         
 358:modem.c       ****         // Power off if we times out should only take ~30 secs to connect to network
 359:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_IP_ACQUIRE){
 1225              		.loc 1 359 0
 1226 0124 FFF7FEFF 		bl	getTimeStamp
 1227 0128 0246     		mov	r2, r0
 1228 012a 0B4B     		ldr	r3, .L75+4
 1229 012c 1B68     		ldr	r3, [r3]
 1230 012e D31A     		subs	r3, r2, r3
 1231 0130 E62B     		cmp	r3, #230
 1232 0132 08DD     		ble	.L73
 360:modem.c       ****             modem_state = MODEM_STATE_OFF;
 1233              		.loc 1 360 0
 1234 0134 074B     		ldr	r3, .L75
 1235 0136 0022     		movs	r2, #0
 1236 0138 1A70     		strb	r2, [r3]
 361:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1237              		.loc 1 361 0
 1238 013a FFF7FEFF 		bl	modem_power_down
 362:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on IP address acquire.");
 1239              		.loc 1 362 0
 1240 013e 0C49     		ldr	r1, .L75+28
 1241 0140 0220     		movs	r0, #2
 1242 0142 FFF7FEFF 		bl	printNotif
 1243              	.L73:
 363:modem.c       ****       
 364:modem.c       ****         }
 365:modem.c       ****         return 0u;//ok to hand off to sleep
 1244              		.loc 1 365 0
 1245 0146 0023     		movs	r3, #0
 1246 0148 00E0     		b	.L61
 1247              	.L71:
 366:modem.c       ****     }
 367:modem.c       ****     
 368:modem.c       ****     return 0u;
 1248              		.loc 1 368 0
 1249 014a 0023     		movs	r3, #0
 1250              	.L61:
 369:modem.c       ****     
 370:modem.c       **** }
 1251              		.loc 1 370 0
 1252 014c 1846     		mov	r0, r3
 1253 014e 0837     		adds	r7, r7, #8
 1254              		.cfi_def_cfa_offset 8
 1255 0150 BD46     		mov	sp, r7
 1256              		.cfi_def_cfa_register 13
 1257              		@ sp needed
 1258 0152 80BD     		pop	{r7, pc}
 1259              	.L76:
 1260              		.align	2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 31


 1261              	.L75:
 1262 0154 00000000 		.word	modem_state
 1263 0158 00000000 		.word	modem_start_time_stamp
 1264 015c 00000000 		.word	updatable_parameters
 1265 0160 00000000 		.word	modem_stats
 1266 0164 9C010000 		.word	.LC13
 1267 0168 C4010000 		.word	.LC14
 1268 016c E8010000 		.word	.LC15
 1269 0170 08020000 		.word	.LC16
 1270              		.cfi_endproc
 1271              	.LFE75:
 1272              		.size	modem_process_tasks, .-modem_process_tasks
 1273              		.section	.rodata
 1274 022f 00       		.align	2
 1275              	.LC17:
 1276 0230 43686563 		.ascii	"Checking AT+CREG?\000"
 1276      6B696E67 
 1276      2041542B 
 1276      43524547 
 1276      3F00
 1277 0242 0000     		.align	2
 1278              	.LC18:
 1279 0244 41542B43 		.ascii	"AT+CREG?\015\000"
 1279      5245473F 
 1279      0D00
 1280 024e 0000     		.align	2
 1281              	.LC19:
 1282 0250 45787472 		.ascii	"Extracting string AT+CREG?\000"
 1282      61637469 
 1282      6E672073 
 1282      7472696E 
 1282      67204154 
 1283 026b 00       		.align	2
 1284              	.LC20:
 1285 026c 75617274 		.ascii	"uart_received_string: %s\000"
 1285      5F726563 
 1285      65697665 
 1285      645F7374 
 1285      72696E67 
 1286 0285 000000   		.align	2
 1287              	.LC21:
 1288 0288 0D00     		.ascii	"\015\000"
 1289 028a 0000     		.align	2
 1290              	.LC22:
 1291 028c 3A2000   		.ascii	": \000"
 1292 028f 00       		.align	2
 1293              	.LC23:
 1294 0290 52656769 		.ascii	"Registered to network, CREG: %s\000"
 1294      73746572 
 1294      65642074 
 1294      6F206E65 
 1294      74776F72 
 1295              		.align	2
 1296              	.LC24:
 1297 02b0 446F6E65 		.ascii	"Done extracing string AT+CREG?\000"
 1297      20657874 
 1297      72616369 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 32


 1297      6E672073 
 1297      7472696E 
 1298 02cf 00       		.align	2
 1299              	.LC25:
 1300 02d0 302C3100 		.ascii	"0,1\000"
 1301              		.align	2
 1302              	.LC26:
 1303 02d4 302C3500 		.ascii	"0,5\000"
 1304              		.section	.text.is_connected_to_cell_network,"ax",%progbits
 1305              		.align	2
 1306              		.global	is_connected_to_cell_network
 1307              		.thumb
 1308              		.thumb_func
 1309              		.type	is_connected_to_cell_network, %function
 1310              	is_connected_to_cell_network:
 1311              	.LFB76:
 371:modem.c       **** 
 372:modem.c       **** // Checks network status, writes commands to the modem, then extracts string from UART
 373:modem.c       **** uint8 is_connected_to_cell_network(){
 1312              		.loc 1 373 0
 1313              		.cfi_startproc
 1314              		@ args = 0, pretend = 0, frame = 16
 1315              		@ frame_needed = 1, uses_anonymous_args = 0
 1316 0000 80B5     		push	{r7, lr}
 1317              		.cfi_def_cfa_offset 8
 1318              		.cfi_offset 7, -8
 1319              		.cfi_offset 14, -4
 1320 0002 84B0     		sub	sp, sp, #16
 1321              		.cfi_def_cfa_offset 24
 1322 0004 00AF     		add	r7, sp, #0
 1323              		.cfi_def_cfa_register 7
 374:modem.c       ****     // AT command AT+CREG? is the Network Registration Report to check network status -- need '0,0'
 375:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Checking AT+CREG?");
 1324              		.loc 1 375 0
 1325 0006 2049     		ldr	r1, .L82
 1326 0008 0020     		movs	r0, #0
 1327 000a FFF7FEFF 		bl	printNotif
 376:modem.c       ****     // create new uint8 variable stust and set to equal the output of the function at_write_command
 377:modem.c       ****     uint8 status = at_write_command("AT+CREG?\r", "OK",DEFAULT_AT_TIMEOUT);
 1328              		.loc 1 377 0
 1329 000e 4FF4FA62 		mov	r2, #2000
 1330 0012 1E49     		ldr	r1, .L82+4
 1331 0014 1E48     		ldr	r0, .L82+8
 1332 0016 FFF7FEFF 		bl	at_write_command
 1333 001a 0346     		mov	r3, r0
 1334 001c FB73     		strb	r3, [r7, #15]
 378:modem.c       ****     
 379:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Extracting string AT+CREG?");
 1335              		.loc 1 379 0
 1336 001e 1D49     		ldr	r1, .L82+12
 1337 0020 0020     		movs	r0, #0
 1338 0022 FFF7FEFF 		bl	printNotif
 380:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"uart_received_string: %s",uart_received_string);
 1339              		.loc 1 380 0
 1340 0026 1C4A     		ldr	r2, .L82+16
 1341 0028 1C49     		ldr	r1, .L82+20
 1342 002a 0020     		movs	r0, #0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 33


 1343 002c FFF7FEFF 		bl	printNotif
 381:modem.c       ****     
 382:modem.c       ****     // If the modem has a status
 383:modem.c       ****     if(status){
 1344              		.loc 1 383 0
 1345 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1346 0032 002B     		cmp	r3, #0
 1347 0034 23D0     		beq	.L78
 1348              	.LBB8:
 384:modem.c       ****         // Create a character array of length 10 called creg
 385:modem.c       ****         char creg[10];
 386:modem.c       ****         creg[0] = '\0';
 1349              		.loc 1 386 0
 1350 0036 0023     		movs	r3, #0
 1351 0038 3B71     		strb	r3, [r7, #4]
 387:modem.c       ****         // Extract string from the UART
 388:modem.c       ****         extract_string(uart_received_string,": ","\r",creg);
 1352              		.loc 1 388 0
 1353 003a 3B1D     		adds	r3, r7, #4
 1354 003c 184A     		ldr	r2, .L82+24
 1355 003e 1949     		ldr	r1, .L82+28
 1356 0040 1548     		ldr	r0, .L82+16
 1357 0042 FFF7FEFF 		bl	extract_string
 389:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Registered to network, CREG: %s",creg);
 1358              		.loc 1 389 0
 1359 0046 3B1D     		adds	r3, r7, #4
 1360 0048 1A46     		mov	r2, r3
 1361 004a 1749     		ldr	r1, .L82+32
 1362 004c 0020     		movs	r0, #0
 1363 004e FFF7FEFF 		bl	printNotif
 390:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Done extracing string AT+CREG?");
 1364              		.loc 1 390 0
 1365 0052 1649     		ldr	r1, .L82+36
 1366 0054 0020     		movs	r0, #0
 1367 0056 FFF7FEFF 		bl	printNotif
 391:modem.c       ****     
 392:modem.c       ****         // Search creg for "0,1" or "0,5", if either exists and either is not equal to NULL, return
 393:modem.c       ****         if((strstr(creg,"0,1")!=NULL)||(strstr(creg,"0,5")!=NULL)){
 1368              		.loc 1 393 0
 1369 005a 3B1D     		adds	r3, r7, #4
 1370 005c 1449     		ldr	r1, .L82+40
 1371 005e 1846     		mov	r0, r3
 1372 0060 FFF7FEFF 		bl	strstr
 1373 0064 0346     		mov	r3, r0
 1374 0066 002B     		cmp	r3, #0
 1375 0068 07D1     		bne	.L79
 1376              		.loc 1 393 0 is_stmt 0 discriminator 1
 1377 006a 3B1D     		adds	r3, r7, #4
 1378 006c 1149     		ldr	r1, .L82+44
 1379 006e 1846     		mov	r0, r3
 1380 0070 FFF7FEFF 		bl	strstr
 1381 0074 0346     		mov	r3, r0
 1382 0076 002B     		cmp	r3, #0
 1383 0078 01D0     		beq	.L78
 1384              	.L79:
 394:modem.c       ****             return 1u;
 1385              		.loc 1 394 0 is_stmt 1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 34


 1386 007a 0123     		movs	r3, #1
 1387 007c 00E0     		b	.L81
 1388              	.L78:
 1389              	.LBE8:
 395:modem.c       ****         }
 396:modem.c       ****     }
 397:modem.c       ****     // If the modem doesn't have a status, return 0u
 398:modem.c       ****     return 0u;
 1390              		.loc 1 398 0
 1391 007e 0023     		movs	r3, #0
 1392              	.L81:
 399:modem.c       ****         
 400:modem.c       **** }
 1393              		.loc 1 400 0
 1394 0080 1846     		mov	r0, r3
 1395 0082 1037     		adds	r7, r7, #16
 1396              		.cfi_def_cfa_offset 8
 1397 0084 BD46     		mov	sp, r7
 1398              		.cfi_def_cfa_register 13
 1399              		@ sp needed
 1400 0086 80BD     		pop	{r7, pc}
 1401              	.L83:
 1402              		.align	2
 1403              	.L82:
 1404 0088 30020000 		.word	.LC17
 1405 008c 00000000 		.word	.LC0
 1406 0090 44020000 		.word	.LC18
 1407 0094 50020000 		.word	.LC19
 1408 0098 00000000 		.word	uart_received_string
 1409 009c 6C020000 		.word	.LC20
 1410 00a0 88020000 		.word	.LC21
 1411 00a4 8C020000 		.word	.LC22
 1412 00a8 90020000 		.word	.LC23
 1413 00ac B0020000 		.word	.LC24
 1414 00b0 D0020000 		.word	.LC25
 1415 00b4 D4020000 		.word	.LC26
 1416              		.cfi_endproc
 1417              	.LFE76:
 1418              		.size	is_connected_to_cell_network, .-is_connected_to_cell_network
 1419              		.section	.rodata
 1420              		.align	2
 1421              	.LC27:
 1422 02d8 41542353 		.ascii	"AT#SGACT=1,1\015\012\000"
 1422      47414354 
 1422      3D312C31 
 1422      0D0A00
 1423              		.section	.text.set_up_internet_connection,"ax",%progbits
 1424              		.align	2
 1425              		.global	set_up_internet_connection
 1426              		.thumb
 1427              		.thumb_func
 1428              		.type	set_up_internet_connection, %function
 1429              	set_up_internet_connection:
 1430              	.LFB77:
 401:modem.c       **** 
 402:modem.c       **** // Connect the modem to the internet
 403:modem.c       **** void set_up_internet_connection(){
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 35


 1431              		.loc 1 403 0
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 0
 1434              		@ frame_needed = 1, uses_anonymous_args = 0
 1435 0000 80B5     		push	{r7, lr}
 1436              		.cfi_def_cfa_offset 8
 1437              		.cfi_offset 7, -8
 1438              		.cfi_offset 14, -4
 1439 0002 00AF     		add	r7, sp, #0
 1440              		.cfi_def_cfa_register 7
 404:modem.c       ****     
 405:modem.c       ****     //port 3
 406:modem.c       ****    //<connId>,<srMode>,<dataMode>, 
 407:modem.c       ****     //at_write_command("AT#SCFGEXT=1,1,0,0,0,0\r", "OK",DEFAULT_AT_TIMEOUT);////LTE modem relevant
 408:modem.c       ****     
 409:modem.c       ****     //<connId>,<cid>,<pktSz>,<maxTo>,<connTo>,<txTo>
 410:modem.c       ****     //at_write_command("AT#SCFG=1,3,300,90,600,50\r", "OK",DEFAULT_AT_TIMEOUT); //LTE modem relevan
 411:modem.c       ****     // <cid>,<stat>
 412:modem.c       ****    
 413:modem.c       ****     // AT command SGACT is Context Activation command is used to activate the specified PDP context
 414:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",1000u);
 1441              		.loc 1 414 0
 1442 0004 4FF47A72 		mov	r2, #1000
 1443 0008 0249     		ldr	r1, .L85
 1444 000a 0348     		ldr	r0, .L85+4
 1445 000c FFF7FEFF 		bl	at_write_command
 415:modem.c       ****     
 416:modem.c       **** }
 1446              		.loc 1 416 0
 1447 0010 00BF     		nop
 1448 0012 80BD     		pop	{r7, pc}
 1449              	.L86:
 1450              		.align	2
 1451              	.L85:
 1452 0014 00000000 		.word	.LC0
 1453 0018 D8020000 		.word	.LC27
 1454              		.cfi_endproc
 1455              	.LFE77:
 1456              		.size	set_up_internet_connection, .-set_up_internet_connection
 1457              		.section	.rodata
 1458 02e7 00       		.align	2
 1459              	.LC28:
 1460 02e8 312C3100 		.ascii	"1,1\000"
 1461              		.align	2
 1462              	.LC29:
 1463 02ec 41542353 		.ascii	"AT#SGACT?\015\000"
 1463      47414354 
 1463      3F0D00
 1464              		.section	.text.is_connected_to_internet,"ax",%progbits
 1465              		.align	2
 1466              		.global	is_connected_to_internet
 1467              		.thumb
 1468              		.thumb_func
 1469              		.type	is_connected_to_internet, %function
 1470              	is_connected_to_internet:
 1471              	.LFB78:
 417:modem.c       **** 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 36


 418:modem.c       **** // Checks if the modem is connected to the internet
 419:modem.c       **** uint8 is_connected_to_internet(){
 1472              		.loc 1 419 0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 0
 1475              		@ frame_needed = 1, uses_anonymous_args = 0
 1476 0000 80B5     		push	{r7, lr}
 1477              		.cfi_def_cfa_offset 8
 1478              		.cfi_offset 7, -8
 1479              		.cfi_offset 14, -4
 1480 0002 00AF     		add	r7, sp, #0
 1481              		.cfi_def_cfa_register 7
 420:modem.c       ****     // AT command SGACT? reports the range for the parameters <cid> and <stat>
 421:modem.c       ****     // cid: is the Packet Data Protocol (PDP) Context Identifier which specifies the particular PDP
 422:modem.c       ****     // stat: gives the context staus (0 deactivated and 1 activated)
 423:modem.c       ****     // Check for 3,1 if Verizon 
 424:modem.c       ****     if(at_write_command("AT#SGACT?\r", "1,1",DEFAULT_AT_TIMEOUT)){
 1482              		.loc 1 424 0
 1483 0004 4FF4FA62 		mov	r2, #2000
 1484 0008 0549     		ldr	r1, .L90
 1485 000a 0648     		ldr	r0, .L90+4
 1486 000c FFF7FEFF 		bl	at_write_command
 1487 0010 0346     		mov	r3, r0
 1488 0012 002B     		cmp	r3, #0
 1489 0014 01D0     		beq	.L88
 425:modem.c       ****         return 1u;
 1490              		.loc 1 425 0
 1491 0016 0123     		movs	r3, #1
 1492 0018 00E0     		b	.L89
 1493              	.L88:
 426:modem.c       ****     }
 427:modem.c       ****     return 0u;  
 1494              		.loc 1 427 0
 1495 001a 0023     		movs	r3, #0
 1496              	.L89:
 428:modem.c       **** }
 1497              		.loc 1 428 0
 1498 001c 1846     		mov	r0, r3
 1499 001e 80BD     		pop	{r7, pc}
 1500              	.L91:
 1501              		.align	2
 1502              	.L90:
 1503 0020 E8020000 		.word	.LC28
 1504 0024 EC020000 		.word	.LC29
 1505              		.cfi_endproc
 1506              	.LFE78:
 1507              		.size	is_connected_to_internet, .-is_connected_to_internet
 1508              		.section	.rodata
 1509 02f7 00       		.align	2
 1510              	.LC30:
 1511 02f8 41542B43 		.ascii	"AT+CESQ\015\000"
 1511      4553510D 
 1511      00
 1512 0301 000000   		.align	2
 1513              	.LC31:
 1514 0304 0D0A2B43 		.ascii	"\015\012+CESQ: %d,%d,%d,%d,%d,%d%*s\000"
 1514      4553513A 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 37


 1514      2025642C 
 1514      25642C25 
 1514      642C2564 
 1515              		.section	.text.get_cell_network_stats,"ax",%progbits
 1516              		.align	2
 1517              		.global	get_cell_network_stats
 1518              		.thumb
 1519              		.thumb_func
 1520              		.type	get_cell_network_stats, %function
 1521              	get_cell_network_stats:
 1522              	.LFB79:
 429:modem.c       **** 
 430:modem.c       **** void get_cell_network_stats(){
 1523              		.loc 1 430 0
 1524              		.cfi_startproc
 1525              		@ args = 0, pretend = 0, frame = 8
 1526              		@ frame_needed = 1, uses_anonymous_args = 0
 1527 0000 80B5     		push	{r7, lr}
 1528              		.cfi_def_cfa_offset 8
 1529              		.cfi_offset 7, -8
 1530              		.cfi_offset 14, -4
 1531 0002 86B0     		sub	sp, sp, #24
 1532              		.cfi_def_cfa_offset 32
 1533 0004 04AF     		add	r7, sp, #16
 1534              		.cfi_def_cfa 7, 16
 431:modem.c       ****     // Initialize values
 432:modem.c       ****     modem_stats.ber = 255;
 1535              		.loc 1 432 0
 1536 0006 154B     		ldr	r3, .L93
 1537 0008 FF22     		movs	r2, #255
 1538 000a 5A60     		str	r2, [r3, #4]
 433:modem.c       ****     modem_stats.ecno = 255;
 1539              		.loc 1 433 0
 1540 000c 134B     		ldr	r3, .L93
 1541 000e FF22     		movs	r2, #255
 1542 0010 DA60     		str	r2, [r3, #12]
 434:modem.c       ****     modem_stats.rscp = 255;
 1543              		.loc 1 434 0
 1544 0012 124B     		ldr	r3, .L93
 1545 0014 FF22     		movs	r2, #255
 1546 0016 9A60     		str	r2, [r3, #8]
 435:modem.c       ****     modem_stats.rsrp = 255;
 1547              		.loc 1 435 0
 1548 0018 104B     		ldr	r3, .L93
 1549 001a FF22     		movs	r2, #255
 1550 001c 5A61     		str	r2, [r3, #20]
 436:modem.c       ****     modem_stats.rsrq = 255;
 1551              		.loc 1 436 0
 1552 001e 0F4B     		ldr	r3, .L93
 1553 0020 FF22     		movs	r2, #255
 1554 0022 1A61     		str	r2, [r3, #16]
 437:modem.c       ****     modem_stats.rxlev = 255;
 1555              		.loc 1 437 0
 1556 0024 0D4B     		ldr	r3, .L93
 1557 0026 FF22     		movs	r2, #255
 1558 0028 1A60     		str	r2, [r3]
 438:modem.c       **** 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 38


 439:modem.c       ****     //for(uint8 attempts =0; attempts <10; attempts++){
 440:modem.c       ****     at_write_command("AT+CESQ\r", "OK", DEFAULT_AT_TIMEOUT);
 1559              		.loc 1 440 0
 1560 002a 4FF4FA62 		mov	r2, #2000
 1561 002e 0C49     		ldr	r1, .L93+4
 1562 0030 0C48     		ldr	r0, .L93+8
 1563 0032 FFF7FEFF 		bl	at_write_command
 441:modem.c       ****     //CESQ: <rxlev>,<ber>,<rscp>,<ecno>,<rsrq>,<rsrp>
 442:modem.c       **** 
 443:modem.c       ****     int match = sscanf(uart_received_string,"\r\n+CESQ: %d,%d,%d,%d,%d,%d%*s",
 1564              		.loc 1 443 0
 1565 0036 0C4B     		ldr	r3, .L93+12
 1566 0038 0393     		str	r3, [sp, #12]
 1567 003a 0C4B     		ldr	r3, .L93+16
 1568 003c 0293     		str	r3, [sp, #8]
 1569 003e 0C4B     		ldr	r3, .L93+20
 1570 0040 0193     		str	r3, [sp, #4]
 1571 0042 0C4B     		ldr	r3, .L93+24
 1572 0044 0093     		str	r3, [sp]
 1573 0046 0C4B     		ldr	r3, .L93+28
 1574 0048 044A     		ldr	r2, .L93
 1575 004a 0C49     		ldr	r1, .L93+32
 1576 004c 0C48     		ldr	r0, .L93+36
 1577 004e FFF7FEFF 		bl	sscanf
 1578 0052 7860     		str	r0, [r7, #4]
 444:modem.c       ****         &modem_stats.rxlev,
 445:modem.c       ****         &modem_stats.ber,
 446:modem.c       ****         &modem_stats.rscp,
 447:modem.c       ****         &modem_stats.ecno,
 448:modem.c       ****         &modem_stats.rsrq,
 449:modem.c       ****         &modem_stats.rsrp);
 450:modem.c       **** 
 451:modem.c       ****         //check to see if we’re getting a good received signal strength
 452:modem.c       ****         //if(modem_stats.rsrp != 255 && modem_stats.rsrp > 26){// || modem_stats.rxlev !=0){
 453:modem.c       ****         //    break;
 454:modem.c       ****         //}
 455:modem.c       ****         // Delay one second
 456:modem.c       ****         //CyDelay(1000u);
 457:modem.c       ****     //}
 458:modem.c       **** }
 1579              		.loc 1 458 0
 1580 0054 00BF     		nop
 1581 0056 0837     		adds	r7, r7, #8
 1582              		.cfi_def_cfa_offset 8
 1583 0058 BD46     		mov	sp, r7
 1584              		.cfi_def_cfa_register 13
 1585              		@ sp needed
 1586 005a 80BD     		pop	{r7, pc}
 1587              	.L94:
 1588              		.align	2
 1589              	.L93:
 1590 005c 00000000 		.word	modem_stats
 1591 0060 00000000 		.word	.LC0
 1592 0064 F8020000 		.word	.LC30
 1593 0068 14000000 		.word	modem_stats+20
 1594 006c 10000000 		.word	modem_stats+16
 1595 0070 0C000000 		.word	modem_stats+12
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 39


 1596 0074 08000000 		.word	modem_stats+8
 1597 0078 04000000 		.word	modem_stats+4
 1598 007c 04030000 		.word	.LC31
 1599 0080 00000000 		.word	uart_received_string
 1600              		.cfi_endproc
 1601              	.LFE79:
 1602              		.size	get_cell_network_stats, .-get_cell_network_stats
 1603              		.section	.text.updatable_parameters_initialize,"ax",%progbits
 1604              		.align	2
 1605              		.global	updatable_parameters_initialize
 1606              		.thumb
 1607              		.thumb_func
 1608              		.type	updatable_parameters_initialize, %function
 1609              	updatable_parameters_initialize:
 1610              	.LFB80:
 459:modem.c       **** 
 460:modem.c       **** // Initialize updatable parameters (sampling, reporting, and debug frequencies)
 461:modem.c       **** void updatable_parameters_initialize(){
 1611              		.loc 1 461 0
 1612              		.cfi_startproc
 1613              		@ args = 0, pretend = 0, frame = 0
 1614              		@ frame_needed = 1, uses_anonymous_args = 0
 1615              		@ link register save eliminated.
 1616 0000 80B4     		push	{r7}
 1617              		.cfi_def_cfa_offset 4
 1618              		.cfi_offset 7, -4
 1619 0002 00AF     		add	r7, sp, #0
 1620              		.cfi_def_cfa_register 7
 462:modem.c       ****     updatable_parameters.node_type = NODE_TYPE_DEPTH;
 1621              		.loc 1 462 0
 1622 0004 104B     		ldr	r3, .L96
 1623 0006 0022     		movs	r2, #0
 1624 0008 1A70     		strb	r2, [r3]
 463:modem.c       ****     updatable_parameters.sim_type = SIM_TYPE_SUPER;
 1625              		.loc 1 463 0
 1626 000a 0F4B     		ldr	r3, .L96
 1627 000c 0122     		movs	r2, #1
 1628 000e 5A70     		strb	r2, [r3, #1]
 464:modem.c       ****     updatable_parameters.measure_time = 1u;
 1629              		.loc 1 464 0
 1630 0010 0D4B     		ldr	r3, .L96
 1631 0012 0122     		movs	r2, #1
 1632 0014 9A70     		strb	r2, [r3, #2]
 465:modem.c       ****     updatable_parameters.sync_time = 1u;
 1633              		.loc 1 465 0
 1634 0016 0C4B     		ldr	r3, .L96
 1635 0018 0122     		movs	r2, #1
 1636 001a DA70     		strb	r2, [r3, #3]
 466:modem.c       ****     updatable_parameters.debug_level = 1u;
 1637              		.loc 1 466 0
 1638 001c 0A4B     		ldr	r3, .L96
 1639 001e 0122     		movs	r2, #1
 1640 0020 1A71     		strb	r2, [r3, #4]
 467:modem.c       ****     
 468:modem.c       ****     // App timers
 469:modem.c       ****     // APP_INTERFACE-------------------------------------------------------------------------------
 470:modem.c       ****     updatable_parameters.App_LED_freq = 120u; 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 40


 1641              		.loc 1 470 0
 1642 0022 094B     		ldr	r3, .L96
 1643 0024 7822     		movs	r2, #120
 1644 0026 5A71     		strb	r2, [r3, #5]
 471:modem.c       ****     updatable_parameters.Level_Sensor_freq = 120u; 
 1645              		.loc 1 471 0
 1646 0028 074B     		ldr	r3, .L96
 1647 002a 7822     		movs	r2, #120
 1648 002c 9A71     		strb	r2, [r3, #6]
 472:modem.c       ****     updatable_parameters.Downstream_Level_Sensor_freq = 120u;
 1649              		.loc 1 472 0
 1650 002e 064B     		ldr	r3, .L96
 1651 0030 7822     		movs	r2, #120
 1652 0032 DA71     		strb	r2, [r3, #7]
 473:modem.c       ****     updatable_parameters.Valve_freq = 120u;
 1653              		.loc 1 473 0
 1654 0034 044B     		ldr	r3, .L96
 1655 0036 7822     		movs	r2, #120
 1656 0038 1A72     		strb	r2, [r3, #8]
 474:modem.c       ****     updatable_parameters.Autosampler_freq = 120u;
 1657              		.loc 1 474 0
 1658 003a 034B     		ldr	r3, .L96
 1659 003c 7822     		movs	r2, #120
 1660 003e 5A72     		strb	r2, [r3, #9]
 475:modem.c       ****     /* app add on
 476:modem.c       ****     updatable_parameters.<Name>_freq = 120u;
 477:modem.c       ****     */
 478:modem.c       ****      //--------------------------------------------------------------------------------------------
 479:modem.c       **** }
 1661              		.loc 1 479 0
 1662 0040 00BF     		nop
 1663 0042 BD46     		mov	sp, r7
 1664              		.cfi_def_cfa_register 13
 1665              		@ sp needed
 1666 0044 80BC     		pop	{r7}
 1667              		.cfi_restore 7
 1668              		.cfi_def_cfa_offset 0
 1669 0046 7047     		bx	lr
 1670              	.L97:
 1671              		.align	2
 1672              	.L96:
 1673 0048 00000000 		.word	updatable_parameters
 1674              		.cfi_endproc
 1675              	.LFE80:
 1676              		.size	updatable_parameters_initialize, .-updatable_parameters_initialize
 1677              		.section	.rodata
 1678 0322 0000     		.align	2
 1679              	.LC32:
 1680 0324 4E6F6465 		.ascii	"Node_Type: \000"
 1680      5F547970 
 1680      653A2000 
 1681              		.align	2
 1682              	.LC33:
 1683 0330 53494D5F 		.ascii	"SIM_Type: \000"
 1683      54797065 
 1683      3A2000
 1684 033b 00       		.align	2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 41


 1685              	.LC34:
 1686 033c 53616D70 		.ascii	"Sample_Freq: \000"
 1686      6C655F46 
 1686      7265713A 
 1686      2000
 1687 034a 0000     		.align	2
 1688              	.LC35:
 1689 034c 5265706F 		.ascii	"Report_Freq: \000"
 1689      72745F46 
 1689      7265713A 
 1689      2000
 1690 035a 0000     		.align	2
 1691              	.LC36:
 1692 035c 44656275 		.ascii	"Debug_Freq: \000"
 1692      675F4672 
 1692      65713A20 
 1692      00
 1693 0369 000000   		.align	2
 1694              	.LC37:
 1695 036c 41707073 		.ascii	"Apps_Enabled: \000"
 1695      5F456E61 
 1695      626C6564 
 1695      3A2000
 1696 037b 00       		.align	2
 1697              	.LC38:
 1698 037c 4170705F 		.ascii	"App_LED\000"
 1698      4C454400 
 1699              		.align	2
 1700              	.LC39:
 1701 0384 4C657665 		.ascii	"Level_Sensor\000"
 1701      6C5F5365 
 1701      6E736F72 
 1701      00
 1702 0391 000000   		.align	2
 1703              	.LC40:
 1704 0394 56616C76 		.ascii	"Valve\000"
 1704      6500
 1705 039a 0000     		.align	2
 1706              	.LC41:
 1707 039c 4175746F 		.ascii	"Autosampler\000"
 1707      73616D70 
 1707      6C657200 
 1708              		.align	2
 1709              	.LC42:
 1710 03a8 4170705F 		.ascii	"App_LED: \000"
 1710      4C45443A 
 1710      2000
 1711 03b2 0000     		.align	2
 1712              	.LC43:
 1713 03b4 4C657665 		.ascii	"Level_Sensor: \000"
 1713      6C5F5365 
 1713      6E736F72 
 1713      3A2000
 1714 03c3 00       		.align	2
 1715              	.LC44:
 1716 03c4 56616C76 		.ascii	"Valve:\000"
 1716      653A00
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 42


 1717 03cb 00       		.align	2
 1718              	.LC45:
 1719 03cc 4175746F 		.ascii	"Autosampler:\000"
 1719      73616D70 
 1719      6C65723A 
 1719      00
 1720 03d9 000000   		.align	2
 1721              	.LC46:
 1722 03dc 256400   		.ascii	"%d\000"
 1723 03df 00       		.align	2
 1724              	.LC47:
 1725 03e0 4E6F6465 		.ascii	"Node type changed to: %d\015\012\000"
 1725      20747970 
 1725      65206368 
 1725      616E6765 
 1725      6420746F 
 1726 03fb 00       		.align	2
 1727              	.LC48:
 1728 03fc 436F756C 		.ascii	"Could not change node type.\000"
 1728      64206E6F 
 1728      74206368 
 1728      616E6765 
 1728      206E6F64 
 1729              		.align	2
 1730              	.LC49:
 1731 0418 53494D20 		.ascii	"SIM type changed to: %d\015\012\000"
 1731      74797065 
 1731      20636861 
 1731      6E676564 
 1731      20746F3A 
 1732 0432 0000     		.align	2
 1733              	.LC50:
 1734 0434 436F756C 		.ascii	"Could not change SIM type.\000"
 1734      64206E6F 
 1734      74206368 
 1734      616E6765 
 1734      2053494D 
 1735 044f 00       		.align	2
 1736              	.LC51:
 1737 0450 53616D70 		.ascii	"Sampling frequency changed to: %d\015\012\000"
 1737      6C696E67 
 1737      20667265 
 1737      7175656E 
 1737      63792063 
 1738              		.align	2
 1739              	.LC52:
 1740 0474 436F756C 		.ascii	"Could not parse new sampling frequency value.\000"
 1740      64206E6F 
 1740      74207061 
 1740      72736520 
 1740      6E657720 
 1741 04a2 0000     		.align	2
 1742              	.LC53:
 1743 04a4 5265706F 		.ascii	"Reporting frequency changed to: %d\015\012\000"
 1743      7274696E 
 1743      67206672 
 1743      65717565 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 43


 1743      6E637920 
 1744 04c9 000000   		.align	2
 1745              	.LC54:
 1746 04cc 436F756C 		.ascii	"Could not parse new reporting frequency value.\000"
 1746      64206E6F 
 1746      74207061 
 1746      72736520 
 1746      6E657720 
 1747 04fb 00       		.align	2
 1748              	.LC55:
 1749 04fc 44656275 		.ascii	"Debug printing frequency changed to: %d\015\012\000"
 1749      67207072 
 1749      696E7469 
 1749      6E672066 
 1749      72657175 
 1750 0526 0000     		.align	2
 1751              	.LC56:
 1752 0528 436F756C 		.ascii	"Could not parse new debugging frequency value.\000"
 1752      64206E6F 
 1752      74207061 
 1752      72736520 
 1752      6E657720 
 1753 0557 00       		.align	2
 1754              	.LC57:
 1755 0558 46726571 		.ascii	"Freq=\000"
 1755      3D00
 1756 055e 0000     		.align	2
 1757              	.LC58:
 1758 0560 4170705F 		.ascii	"App_LED frequency changed to: %d\015\012\000"
 1758      4C454420 
 1758      66726571 
 1758      75656E63 
 1758      79206368 
 1759 0583 00       		.align	2
 1760              	.LC59:
 1761 0584 436F756C 		.ascii	"Could not parse new App_LED frequency value.\000"
 1761      64206E6F 
 1761      74207061 
 1761      72736520 
 1761      6E657720 
 1762 05b1 000000   		.align	2
 1763              	.LC60:
 1764 05b4 4E6F2041 		.ascii	"No App_LED frequency value indicated.\000"
 1764      70705F4C 
 1764      45442066 
 1764      72657175 
 1764      656E6379 
 1765 05da 0000     		.align	2
 1766              	.LC61:
 1767 05dc 4C657665 		.ascii	"Level_Sensor frequency changed to: %d\015\012\000"
 1767      6C5F5365 
 1767      6E736F72 
 1767      20667265 
 1767      7175656E 
 1768              		.align	2
 1769              	.LC62:
 1770 0604 436F756C 		.ascii	"Could not parse new Level_Sensor frequency value.\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 44


 1770      64206E6F 
 1770      74207061 
 1770      72736520 
 1770      6E657720 
 1771 0636 0000     		.align	2
 1772              	.LC63:
 1773 0638 4E6F204C 		.ascii	"No Level_Sensor frequency value indicated.\000"
 1773      6576656C 
 1773      5F53656E 
 1773      736F7220 
 1773      66726571 
 1774 0663 00       		.align	2
 1775              	.LC64:
 1776 0664 4175746F 		.ascii	"Autosampler frequency changed to: %d\015\012\000"
 1776      73616D70 
 1776      6C657220 
 1776      66726571 
 1776      75656E63 
 1777 068b 00       		.align	2
 1778              	.LC65:
 1779 068c 436F756C 		.ascii	"Could not parse new Autosampler frequency value.\000"
 1779      64206E6F 
 1779      74207061 
 1779      72736520 
 1779      6E657720 
 1780 06bd 000000   		.align	2
 1781              	.LC66:
 1782 06c0 4E6F2041 		.ascii	"No Autosampler frequency value indicated.\000"
 1782      75746F73 
 1782      616D706C 
 1782      65722066 
 1782      72657175 
 1783              		.section	.text.get_updated_parameters_from_malcom,"ax",%progbits
 1784              		.align	2
 1785              		.global	get_updated_parameters_from_malcom
 1786              		.thumb
 1787              		.thumb_func
 1788              		.type	get_updated_parameters_from_malcom, %function
 1789              	get_updated_parameters_from_malcom:
 1790              	.LFB81:
 480:modem.c       **** 
 481:modem.c       **** // Get the update values for sampling frequency, reporting frequency, and the debug level from the 
 482:modem.c       **** void get_updated_parameters_from_malcom(){
 1791              		.loc 1 482 0
 1792              		.cfi_startproc
 1793              		@ args = 0, pretend = 0, frame = 904
 1794              		@ frame_needed = 1, uses_anonymous_args = 0
 1795 0000 90B5     		push	{r4, r7, lr}
 1796              		.cfi_def_cfa_offset 12
 1797              		.cfi_offset 4, -12
 1798              		.cfi_offset 7, -8
 1799              		.cfi_offset 14, -4
 1800 0002 ADF5637D 		sub	sp, sp, #908
 1801              		.cfi_def_cfa_offset 920
 1802 0006 00AF     		add	r7, sp, #0
 1803              		.cfi_def_cfa_register 7
 483:modem.c       ****     
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 45


 484:modem.c       ****     // Create character array of size 1024 characters to hold the uart received string
 485:modem.c       ****     char s_node_type[10];
 486:modem.c       ****     char s_sim_type[10];
 487:modem.c       ****     char s_sample_freq[10];
 488:modem.c       ****     char s_report_freq[10];
 489:modem.c       ****     char s_debug_freq[10];
 490:modem.c       ****     
 491:modem.c       ****     //apps
 492:modem.c       ****     // APP_INTERFACE-------------------------------------------------------------------------------
 493:modem.c       ****     char s_app_led[100];
 494:modem.c       ****     s_app_led[0] = '\0';
 1804              		.loc 1 494 0
 1805 0008 0023     		movs	r3, #0
 1806 000a 87F8E832 		strb	r3, [r7, #744]
 495:modem.c       ****     
 496:modem.c       ****     char s_level_sensor[100];
 497:modem.c       ****     s_level_sensor[0] = '\0';
 1807              		.loc 1 497 0
 1808 000e 07F52173 		add	r3, r7, #644
 1809 0012 0022     		movs	r2, #0
 1810 0014 1A70     		strb	r2, [r3]
 498:modem.c       ****     
 499:modem.c       ****     char s_down_level_sensor[100];
 500:modem.c       ****     s_down_level_sensor[0] = '\0';
 1811              		.loc 1 500 0
 1812 0016 07F50873 		add	r3, r7, #544
 1813 001a 0022     		movs	r2, #0
 1814 001c 1A70     		strb	r2, [r3]
 501:modem.c       ****     
 502:modem.c       ****     char s_valve[100];
 503:modem.c       ****     s_valve[0] = '\0';
 1815              		.loc 1 503 0
 1816 001e 07F5DE73 		add	r3, r7, #444
 1817 0022 0022     		movs	r2, #0
 1818 0024 1A70     		strb	r2, [r3]
 504:modem.c       **** 
 505:modem.c       ****     char s_autosampler[100];
 506:modem.c       ****     s_autosampler[0] = '\0';
 1819              		.loc 1 506 0
 1820 0026 07F5AC73 		add	r3, r7, #344
 1821 002a 0022     		movs	r2, #0
 1822 002c 1A70     		strb	r2, [r3]
 507:modem.c       **** 
 508:modem.c       ****     /* app add template
 509:modem.c       ****     char s_<name>[100];
 510:modem.c       ****     s_<name>[0] = '\0';
 511:modem.c       ****     */
 512:modem.c       ****     
 513:modem.c       ****     char s_apps_enabled[200];
 514:modem.c       ****     s_apps_enabled[0]='\0';
 1823              		.loc 1 514 0
 1824 002e 07F19003 		add	r3, r7, #144
 1825 0032 0022     		movs	r2, #0
 1826 0034 1A70     		strb	r2, [r3]
 515:modem.c       ****     //---------------------------------------------------------------------------------------------
 516:modem.c       ****     
 517:modem.c       ****     s_node_type[0] = '\0';
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 46


 1827              		.loc 1 517 0
 1828 0036 0023     		movs	r3, #0
 1829 0038 87F87C33 		strb	r3, [r7, #892]
 518:modem.c       ****     s_sim_type[0] = '\0';
 1830              		.loc 1 518 0
 1831 003c 0023     		movs	r3, #0
 1832 003e 87F87033 		strb	r3, [r7, #880]
 519:modem.c       ****     s_sample_freq[0] = '\0';
 1833              		.loc 1 519 0
 1834 0042 0023     		movs	r3, #0
 1835 0044 87F86433 		strb	r3, [r7, #868]
 520:modem.c       ****     s_report_freq[0] = '\0';
 1836              		.loc 1 520 0
 1837 0048 0023     		movs	r3, #0
 1838 004a 87F85833 		strb	r3, [r7, #856]
 521:modem.c       ****     s_debug_freq[0] = '\0';
 1839              		.loc 1 521 0
 1840 004e 0023     		movs	r3, #0
 1841 0050 87F84C33 		strb	r3, [r7, #844]
 522:modem.c       ****     
 523:modem.c       ****     // Extract UART string recieved from the modem and save to variables
 524:modem.c       ****     extract_string(uart_received_string,"Node_Type: ","\r",s_node_type);
 1842              		.loc 1 524 0
 1843 0054 07F55F73 		add	r3, r7, #892
 1844 0058 A64A     		ldr	r2, .L124
 1845 005a A749     		ldr	r1, .L124+4
 1846 005c A748     		ldr	r0, .L124+8
 1847 005e FFF7FEFF 		bl	extract_string
 525:modem.c       ****     extract_string(uart_received_string,"SIM_Type: ","\r",s_sim_type);
 1848              		.loc 1 525 0
 1849 0062 07F55C73 		add	r3, r7, #880
 1850 0066 A34A     		ldr	r2, .L124
 1851 0068 A549     		ldr	r1, .L124+12
 1852 006a A448     		ldr	r0, .L124+8
 1853 006c FFF7FEFF 		bl	extract_string
 526:modem.c       ****     extract_string(uart_received_string,"Sample_Freq: ","\r",s_sample_freq);
 1854              		.loc 1 526 0
 1855 0070 07F55973 		add	r3, r7, #868
 1856 0074 9F4A     		ldr	r2, .L124
 1857 0076 A349     		ldr	r1, .L124+16
 1858 0078 A048     		ldr	r0, .L124+8
 1859 007a FFF7FEFF 		bl	extract_string
 527:modem.c       ****     extract_string(uart_received_string,"Report_Freq: ","\r",s_report_freq);
 1860              		.loc 1 527 0
 1861 007e 07F55673 		add	r3, r7, #856
 1862 0082 9C4A     		ldr	r2, .L124
 1863 0084 A049     		ldr	r1, .L124+20
 1864 0086 9D48     		ldr	r0, .L124+8
 1865 0088 FFF7FEFF 		bl	extract_string
 528:modem.c       ****     extract_string(uart_received_string,"Debug_Freq: ","\r",s_debug_freq);
 1866              		.loc 1 528 0
 1867 008c 07F55373 		add	r3, r7, #844
 1868 0090 984A     		ldr	r2, .L124
 1869 0092 9E49     		ldr	r1, .L124+24
 1870 0094 9948     		ldr	r0, .L124+8
 1871 0096 FFF7FEFF 		bl	extract_string
 529:modem.c       ****     
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 47


 530:modem.c       ****     // which apps are enabled?
 531:modem.c       ****  // APP_INTERFACE----------------------------------------------------------------------------------
 532:modem.c       ****     if (strstr(uart_received_string,"Apps_Enabled: ")){
 1872              		.loc 1 532 0
 1873 009a 9D49     		ldr	r1, .L124+28
 1874 009c 9748     		ldr	r0, .L124+8
 1875 009e FFF7FEFF 		bl	strstr
 1876 00a2 0346     		mov	r3, r0
 1877 00a4 002B     		cmp	r3, #0
 1878 00a6 41D0     		beq	.L99
 533:modem.c       ****         extract_string(uart_received_string,"Apps_Enabled: ","\r",s_apps_enabled);
 1879              		.loc 1 533 0
 1880 00a8 07F19003 		add	r3, r7, #144
 1881 00ac 914A     		ldr	r2, .L124
 1882 00ae 9849     		ldr	r1, .L124+28
 1883 00b0 9248     		ldr	r0, .L124+8
 1884 00b2 FFF7FEFF 		bl	extract_string
 534:modem.c       ****         // if an app is in this string, turn it on
 535:modem.c       ****         // if we this app in the enabled list, turn it on, else we ensure it is disabled
 536:modem.c       ****         /*************Testing new form of truncated code*********/
 537:modem.c       ****         App_LED_enabled = (strstr(s_apps_enabled,"App_LED")!=NULL) ? 1 : 0;
 1885              		.loc 1 537 0
 1886 00b6 07F19003 		add	r3, r7, #144
 1887 00ba 9649     		ldr	r1, .L124+32
 1888 00bc 1846     		mov	r0, r3
 1889 00be FFF7FEFF 		bl	strstr
 1890 00c2 0346     		mov	r3, r0
 1891 00c4 002B     		cmp	r3, #0
 1892 00c6 14BF     		ite	ne
 1893 00c8 0123     		movne	r3, #1
 1894 00ca 0023     		moveq	r3, #0
 1895 00cc DBB2     		uxtb	r3, r3
 1896 00ce 1A46     		mov	r2, r3
 1897 00d0 914B     		ldr	r3, .L124+36
 1898 00d2 1A70     		strb	r2, [r3]
 538:modem.c       ****         level_sensor_enabled = (strstr(s_apps_enabled,"Level_Sensor")!=NULL) ? 1 : 0;
 1899              		.loc 1 538 0
 1900 00d4 07F19003 		add	r3, r7, #144
 1901 00d8 9049     		ldr	r1, .L124+40
 1902 00da 1846     		mov	r0, r3
 1903 00dc FFF7FEFF 		bl	strstr
 1904 00e0 0346     		mov	r3, r0
 1905 00e2 002B     		cmp	r3, #0
 1906 00e4 14BF     		ite	ne
 1907 00e6 0123     		movne	r3, #1
 1908 00e8 0023     		moveq	r3, #0
 1909 00ea DAB2     		uxtb	r2, r3
 1910 00ec 8C4B     		ldr	r3, .L124+44
 1911 00ee 1A70     		strb	r2, [r3]
 539:modem.c       ****         //downstream_level_sensor_enabled = (strstr(s_apps_enabled,"Downstream_Level") != NULL) ? 1
 540:modem.c       ****         valve_enabled = (strstr(s_apps_enabled, "Valve") != NULL) ? 1 : 0;
 1912              		.loc 1 540 0
 1913 00f0 07F19003 		add	r3, r7, #144
 1914 00f4 8B49     		ldr	r1, .L124+48
 1915 00f6 1846     		mov	r0, r3
 1916 00f8 FFF7FEFF 		bl	strstr
 1917 00fc 0346     		mov	r3, r0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 48


 1918 00fe 002B     		cmp	r3, #0
 1919 0100 14BF     		ite	ne
 1920 0102 0123     		movne	r3, #1
 1921 0104 0023     		moveq	r3, #0
 1922 0106 DBB2     		uxtb	r3, r3
 1923 0108 1A46     		mov	r2, r3
 1924 010a 874B     		ldr	r3, .L124+52
 1925 010c 1A70     		strb	r2, [r3]
 541:modem.c       ****         autosampler_enabled = (strstr(s_apps_enabled, "Autosampler") != NULL) ? 1 : 0;
 1926              		.loc 1 541 0
 1927 010e 07F19003 		add	r3, r7, #144
 1928 0112 8649     		ldr	r1, .L124+56
 1929 0114 1846     		mov	r0, r3
 1930 0116 FFF7FEFF 		bl	strstr
 1931 011a 0346     		mov	r3, r0
 1932 011c 002B     		cmp	r3, #0
 1933 011e 14BF     		ite	ne
 1934 0120 0123     		movne	r3, #1
 1935 0122 0023     		moveq	r3, #0
 1936 0124 DBB2     		uxtb	r3, r3
 1937 0126 1A46     		mov	r2, r3
 1938 0128 814B     		ldr	r3, .L124+60
 1939 012a 1A70     		strb	r2, [r3]
 1940              	.L99:
 542:modem.c       ****         /* app add template 
 543:modem.c       ****         <name>_enabled = (strstr(s_apps_enabled, "<Name>") != NULL) ? 1 : 0;
 544:modem.c       ****         */
 545:modem.c       **** 
 546:modem.c       ****         /* old code structure
 547:modem.c       ****         (strstr(s_apps_enabled, "<Name>") != NULL)? <name>_enabled = 1 : <name>_enabled = 0;
 548:modem.c       ****         
 549:modem.c       ****         // if we see level sensor in the enabled list, turn it on
 550:modem.c       ****         if (strstr(s_apps_enabled,"Level_Sensor")!=NULL){level_sensor_enabled = 1};        
 551:modem.c       ****         // if an app is currently on and not in this string, turn it off  
 552:modem.c       ****         else if (level_sensor_enabled){level_sensor_enabled = 0;}
 553:modem.c       ****         
 554:modem.c       ****         if (strstr(s_apps_enabled,"App_LED")!=NULL){
 555:modem.c       ****             // if we this app in the enabled list, turn it on
 556:modem.c       ****             App_LED_enabled = 1;
 557:modem.c       ****         }
 558:modem.c       ****         else if (App_LED_enabled){
 559:modem.c       ****             App_LED_enabled = 0;
 560:modem.c       ****         }
 561:modem.c       ****         
 562:modem.c       ****         if (strstr(s_apps_enabled,"Downstream_Level") != NULL){
 563:modem.c       ****             downstream_level_sensor_enabled = 1;
 564:modem.c       ****         }        
 565:modem.c       ****         // if an app is currently on and not in this string, turn it off  
 566:modem.c       ****         else if (downstream_level_sensor_enabled){ 
 567:modem.c       ****             downstream_level_sensor_enabled = 0;
 568:modem.c       ****         }
 569:modem.c       ****         
 570:modem.c       ****         if (strstr(s_apps_enabled, "Valve") != NULL){
 571:modem.c       ****             valve_enabled = 1u;
 572:modem.c       ****         }
 573:modem.c       ****         else if(valve_enabled){
 574:modem.c       ****             valve_enabled = 0u;
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 49


 575:modem.c       ****         }
 576:modem.c       ****         
 577:modem.c       ****         if (strstr(s_apps_enabled, "Autosampler") != NULL){
 578:modem.c       ****             autosampler_enabled = 1u;
 579:modem.c       ****         }
 580:modem.c       ****         else if(autosampler_enabled){
 581:modem.c       ****             autosampler_enabled = 0u;
 582:modem.c       ****         }
 583:modem.c       ****         */
 584:modem.c       ****         
 585:modem.c       ****     }
 586:modem.c       ****     //---------------------------------------------------------------------------------------------
 587:modem.c       **** 
 588:modem.c       **** 
 589:modem.c       ****         
 590:modem.c       ****     
 591:modem.c       ****     // update app parameters (valve open %, measuring freq, etc)
 592:modem.c       ****     // APP_INTERFACE ------------------------------------------------------------------------------
 593:modem.c       ****     extract_string(uart_received_string,"App_LED: ","\r",s_app_led);
 1941              		.loc 1 593 0
 1942 012c 07F53A73 		add	r3, r7, #744
 1943 0130 704A     		ldr	r2, .L124
 1944 0132 8049     		ldr	r1, .L124+64
 1945 0134 7148     		ldr	r0, .L124+8
 1946 0136 FFF7FEFF 		bl	extract_string
 594:modem.c       ****     App_LED_Update(s_app_led);
 1947              		.loc 1 594 0
 1948 013a 07F53A73 		add	r3, r7, #744
 1949 013e 1846     		mov	r0, r3
 1950 0140 FFF7FEFF 		bl	App_LED_Update
 595:modem.c       ****     
 596:modem.c       ****     extract_string(uart_received_string,"Level_Sensor: ","\r",s_level_sensor);
 1951              		.loc 1 596 0
 1952 0144 07F52173 		add	r3, r7, #644
 1953 0148 6A4A     		ldr	r2, .L124
 1954 014a 7B49     		ldr	r1, .L124+68
 1955 014c 6B48     		ldr	r0, .L124+8
 1956 014e FFF7FEFF 		bl	extract_string
 597:modem.c       ****     Level_Sensor_Update(s_level_sensor);
 1957              		.loc 1 597 0
 1958 0152 07F52173 		add	r3, r7, #644
 1959 0156 1846     		mov	r0, r3
 1960 0158 FFF7FEFF 		bl	Level_Sensor_Update
 598:modem.c       ****     
 599:modem.c       ****     //extract_string(uart_received_string,"Downstream_Level: ","\r",s_down_level_sensor);
 600:modem.c       ****     //Downstream_Level_Sensor_Update(s_down_level_sensor);
 601:modem.c       ****     
 602:modem.c       ****     extract_string(uart_received_string,"Valve:","\r", s_valve);
 1961              		.loc 1 602 0
 1962 015c 07F5DE73 		add	r3, r7, #444
 1963 0160 644A     		ldr	r2, .L124
 1964 0162 7649     		ldr	r1, .L124+72
 1965 0164 6548     		ldr	r0, .L124+8
 1966 0166 FFF7FEFF 		bl	extract_string
 603:modem.c       ****     Valve_Update(s_valve);
 1967              		.loc 1 603 0
 1968 016a 07F5DE73 		add	r3, r7, #444
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 50


 1969 016e 1846     		mov	r0, r3
 1970 0170 FFF7FEFF 		bl	Valve_Update
 604:modem.c       **** 
 605:modem.c       ****     extract_string(uart_received_string,"Autosampler:","\r", s_autosampler);
 1971              		.loc 1 605 0
 1972 0174 07F5AC73 		add	r3, r7, #344
 1973 0178 5E4A     		ldr	r2, .L124
 1974 017a 7149     		ldr	r1, .L124+76
 1975 017c 5F48     		ldr	r0, .L124+8
 1976 017e FFF7FEFF 		bl	extract_string
 606:modem.c       ****     Autosampler_Update(s_autosampler);
 1977              		.loc 1 606 0
 1978 0182 07F5AC73 		add	r3, r7, #344
 1979 0186 1846     		mov	r0, r3
 1980 0188 FFF7FEFF 		bl	Autosampler_Update
 607:modem.c       ****     
 608:modem.c       ****     /* app add template
 609:modem.c       ****     extract_string(uart_received_string,"<Name>:","\r", s_<name>);
 610:modem.c       ****     <Name>_Update(s_<name>);
 611:modem.c       ****     */
 612:modem.c       **** 
 613:modem.c       ****     // Create variables for what is sent back from the server
 614:modem.c       ****     int node_type, sim_type, sample_freq, report_freq, debug_freq, \
 615:modem.c       ****     app_led_freq, level_sensor_freq, down_level_freq, valve_freq, autosampler_freq;
 616:modem.c       ****     
 617:modem.c       ****     // Scan character arrays and save values 
 618:modem.c       ****     
 619:modem.c       ****     if(sscanf(s_node_type, "%d", &node_type)==1){
 1981              		.loc 1 619 0
 1982 018c 07F18C02 		add	r2, r7, #140
 1983 0190 07F55F73 		add	r3, r7, #892
 1984 0194 6B49     		ldr	r1, .L124+80
 1985 0196 1846     		mov	r0, r3
 1986 0198 FFF7FEFF 		bl	sscanf
 1987 019c 0346     		mov	r3, r0
 1988 019e 012B     		cmp	r3, #1
 1989 01a0 0ED1     		bne	.L100
 620:modem.c       ****         updatable_parameters.node_type = node_type;
 1990              		.loc 1 620 0
 1991 01a2 07F18C03 		add	r3, r7, #140
 1992 01a6 1B68     		ldr	r3, [r3]
 1993 01a8 DAB2     		uxtb	r2, r3
 1994 01aa 674B     		ldr	r3, .L124+84
 1995 01ac 1A70     		strb	r2, [r3]
 621:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Node type changed to: %d\r\n", node_type);
 1996              		.loc 1 621 0
 1997 01ae 07F18C03 		add	r3, r7, #140
 1998 01b2 1B68     		ldr	r3, [r3]
 1999 01b4 1A46     		mov	r2, r3
 2000 01b6 6549     		ldr	r1, .L124+88
 2001 01b8 0020     		movs	r0, #0
 2002 01ba FFF7FEFF 		bl	printNotif
 2003 01be 03E0     		b	.L101
 2004              	.L100:
 622:modem.c       ****     }else{
 623:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not change node type.");
 2005              		.loc 1 623 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 51


 2006 01c0 6349     		ldr	r1, .L124+92
 2007 01c2 0220     		movs	r0, #2
 2008 01c4 FFF7FEFF 		bl	printNotif
 2009              	.L101:
 624:modem.c       ****     }
 625:modem.c       ****     
 626:modem.c       ****     if(sscanf(s_sim_type, "%d", &sim_type)==1){
 2010              		.loc 1 626 0
 2011 01c8 07F18802 		add	r2, r7, #136
 2012 01cc 07F55C73 		add	r3, r7, #880
 2013 01d0 5C49     		ldr	r1, .L124+80
 2014 01d2 1846     		mov	r0, r3
 2015 01d4 FFF7FEFF 		bl	sscanf
 2016 01d8 0346     		mov	r3, r0
 2017 01da 012B     		cmp	r3, #1
 2018 01dc 12D1     		bne	.L102
 627:modem.c       ****         updatable_parameters.sim_type = sim_type;
 2019              		.loc 1 627 0
 2020 01de 07F18803 		add	r3, r7, #136
 2021 01e2 1B68     		ldr	r3, [r3]
 2022 01e4 002B     		cmp	r3, #0
 2023 01e6 14BF     		ite	ne
 2024 01e8 0123     		movne	r3, #1
 2025 01ea 0023     		moveq	r3, #0
 2026 01ec DAB2     		uxtb	r2, r3
 2027 01ee 564B     		ldr	r3, .L124+84
 2028 01f0 5A70     		strb	r2, [r3, #1]
 628:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "SIM type changed to: %d\r\n", sim_type);
 2029              		.loc 1 628 0
 2030 01f2 07F18803 		add	r3, r7, #136
 2031 01f6 1B68     		ldr	r3, [r3]
 2032 01f8 1A46     		mov	r2, r3
 2033 01fa 5649     		ldr	r1, .L124+96
 2034 01fc 0020     		movs	r0, #0
 2035 01fe FFF7FEFF 		bl	printNotif
 2036 0202 03E0     		b	.L103
 2037              	.L102:
 629:modem.c       ****     }else{
 630:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not change SIM type.");
 2038              		.loc 1 630 0
 2039 0204 5449     		ldr	r1, .L124+100
 2040 0206 0220     		movs	r0, #2
 2041 0208 FFF7FEFF 		bl	printNotif
 2042              	.L103:
 631:modem.c       ****     }
 632:modem.c       ****     if(sscanf(s_sample_freq, "%d", &sample_freq)==1){
 2043              		.loc 1 632 0
 2044 020c 07F18402 		add	r2, r7, #132
 2045 0210 07F55973 		add	r3, r7, #868
 2046 0214 4B49     		ldr	r1, .L124+80
 2047 0216 1846     		mov	r0, r3
 2048 0218 FFF7FEFF 		bl	sscanf
 2049 021c 0346     		mov	r3, r0
 2050 021e 012B     		cmp	r3, #1
 2051 0220 1DD1     		bne	.L104
 633:modem.c       ****         updatable_parameters.measure_time = sample_freq;
 2052              		.loc 1 633 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 52


 2053 0222 07F18403 		add	r3, r7, #132
 2054 0226 1B68     		ldr	r3, [r3]
 2055 0228 DAB2     		uxtb	r2, r3
 2056 022a 474B     		ldr	r3, .L124+84
 2057 022c 9A70     		strb	r2, [r3, #2]
 634:modem.c       ****         // Create a continuous alarm called alarmMeasure that triggers at the required time to take
 635:modem.c       ****         alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_C
 2058              		.loc 1 635 0
 2059 022e 464B     		ldr	r3, .L124+84
 2060 0230 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2061 0232 99B2     		uxth	r1, r3
 2062 0234 494C     		ldr	r4, .L124+104
 2063 0236 3846     		mov	r0, r7
 2064 0238 0723     		movs	r3, #7
 2065 023a 0122     		movs	r2, #1
 2066 023c FFF7FEFF 		bl	CreateAlarm
 2067 0240 3A46     		mov	r2, r7
 2068 0242 2346     		mov	r3, r4
 2069 0244 1168     		ldr	r1, [r2]	@ unaligned
 2070 0246 1960     		str	r1, [r3]	@ unaligned
 2071 0248 9288     		ldrh	r2, [r2, #4]	@ unaligned
 2072 024a 9A80     		strh	r2, [r3, #4]	@ unaligned
 636:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Sampling frequency changed to: %d\r\n", sample_freq);
 2073              		.loc 1 636 0
 2074 024c 07F18403 		add	r3, r7, #132
 2075 0250 1B68     		ldr	r3, [r3]
 2076 0252 1A46     		mov	r2, r3
 2077 0254 4249     		ldr	r1, .L124+108
 2078 0256 0020     		movs	r0, #0
 2079 0258 FFF7FEFF 		bl	printNotif
 2080 025c 03E0     		b	.L105
 2081              	.L104:
 637:modem.c       ****     }else{
 638:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new sampling frequency value.");
 2082              		.loc 1 638 0
 2083 025e 4149     		ldr	r1, .L124+112
 2084 0260 0220     		movs	r0, #2
 2085 0262 FFF7FEFF 		bl	printNotif
 2086              	.L105:
 639:modem.c       ****     }
 640:modem.c       ****     if(sscanf(s_report_freq, "%d", &report_freq)==1){
 2087              		.loc 1 640 0
 2088 0266 07F18002 		add	r2, r7, #128
 2089 026a 07F55673 		add	r3, r7, #856
 2090 026e 3549     		ldr	r1, .L124+80
 2091 0270 1846     		mov	r0, r3
 2092 0272 FFF7FEFF 		bl	sscanf
 2093 0276 0346     		mov	r3, r0
 2094 0278 012B     		cmp	r3, #1
 2095 027a 1DD1     		bne	.L106
 641:modem.c       ****         updatable_parameters.sync_time = report_freq;
 2096              		.loc 1 641 0
 2097 027c 07F18003 		add	r3, r7, #128
 2098 0280 1B68     		ldr	r3, [r3]
 2099 0282 DAB2     		uxtb	r2, r3
 2100 0284 304B     		ldr	r3, .L124+84
 2101 0286 DA70     		strb	r2, [r3, #3]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 53


 642:modem.c       ****         // Create a continuous alarm called alarmSync that triggers at the required time to sync th
 643:modem.c       ****         alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINU
 2102              		.loc 1 643 0
 2103 0288 2F4B     		ldr	r3, .L124+84
 2104 028a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2105 028c 99B2     		uxth	r1, r3
 2106 028e 364C     		ldr	r4, .L124+116
 2107 0290 3846     		mov	r0, r7
 2108 0292 0723     		movs	r3, #7
 2109 0294 0122     		movs	r2, #1
 2110 0296 FFF7FEFF 		bl	CreateAlarm
 2111 029a 3A46     		mov	r2, r7
 2112 029c 2346     		mov	r3, r4
 2113 029e 1168     		ldr	r1, [r2]	@ unaligned
 2114 02a0 1960     		str	r1, [r3]	@ unaligned
 2115 02a2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 2116 02a4 9A80     		strh	r2, [r3, #4]	@ unaligned
 644:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Reporting frequency changed to: %d\r\n", report_freq);
 2117              		.loc 1 644 0
 2118 02a6 07F18003 		add	r3, r7, #128
 2119 02aa 1B68     		ldr	r3, [r3]
 2120 02ac 1A46     		mov	r2, r3
 2121 02ae 2F49     		ldr	r1, .L124+120
 2122 02b0 0020     		movs	r0, #0
 2123 02b2 FFF7FEFF 		bl	printNotif
 2124 02b6 03E0     		b	.L107
 2125              	.L106:
 645:modem.c       ****         }else{
 646:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new reporting frequency value.");
 2126              		.loc 1 646 0
 2127 02b8 2D49     		ldr	r1, .L124+124
 2128 02ba 0220     		movs	r0, #2
 2129 02bc FFF7FEFF 		bl	printNotif
 2130              	.L107:
 647:modem.c       ****     }
 648:modem.c       ****     if(sscanf(s_debug_freq, "%d", &debug_freq)==1){
 2131              		.loc 1 648 0
 2132 02c0 07F17C02 		add	r2, r7, #124
 2133 02c4 07F55373 		add	r3, r7, #844
 2134 02c8 1E49     		ldr	r1, .L124+80
 2135 02ca 1846     		mov	r0, r3
 2136 02cc FFF7FEFF 		bl	sscanf
 2137 02d0 0346     		mov	r3, r0
 2138 02d2 012B     		cmp	r3, #1
 2139 02d4 50D1     		bne	.L108
 649:modem.c       ****         updatable_parameters.debug_level = debug_freq;
 2140              		.loc 1 649 0
 2141 02d6 07F17C03 		add	r3, r7, #124
 2142 02da 1B68     		ldr	r3, [r3]
 2143 02dc DAB2     		uxtb	r2, r3
 2144 02de 1A4B     		ldr	r3, .L124+84
 2145 02e0 1A71     		strb	r2, [r3, #4]
 650:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Debug printing frequency changed to: %d\r\n", debug_freq);
 2146              		.loc 1 650 0
 2147 02e2 07F17C03 		add	r3, r7, #124
 2148 02e6 1B68     		ldr	r3, [r3]
 2149 02e8 1A46     		mov	r2, r3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 54


 2150 02ea 2249     		ldr	r1, .L124+128
 2151 02ec 0020     		movs	r0, #0
 2152 02ee FFF7FEFF 		bl	printNotif
 2153 02f2 45E0     		b	.L109
 2154              	.L125:
 2155              		.align	2
 2156              	.L124:
 2157 02f4 88020000 		.word	.LC21
 2158 02f8 24030000 		.word	.LC32
 2159 02fc 00000000 		.word	uart_received_string
 2160 0300 30030000 		.word	.LC33
 2161 0304 3C030000 		.word	.LC34
 2162 0308 4C030000 		.word	.LC35
 2163 030c 5C030000 		.word	.LC36
 2164 0310 6C030000 		.word	.LC37
 2165 0314 7C030000 		.word	.LC38
 2166 0318 00000000 		.word	App_LED_enabled
 2167 031c 84030000 		.word	.LC39
 2168 0320 00000000 		.word	level_sensor_enabled
 2169 0324 94030000 		.word	.LC40
 2170 0328 00000000 		.word	valve_enabled
 2171 032c 9C030000 		.word	.LC41
 2172 0330 00000000 		.word	autosampler_enabled
 2173 0334 A8030000 		.word	.LC42
 2174 0338 B4030000 		.word	.LC43
 2175 033c C4030000 		.word	.LC44
 2176 0340 CC030000 		.word	.LC45
 2177 0344 DC030000 		.word	.LC46
 2178 0348 00000000 		.word	updatable_parameters
 2179 034c E0030000 		.word	.LC47
 2180 0350 FC030000 		.word	.LC48
 2181 0354 18040000 		.word	.LC49
 2182 0358 34040000 		.word	.LC50
 2183 035c 00000000 		.word	alarmMeasure
 2184 0360 50040000 		.word	.LC51
 2185 0364 74040000 		.word	.LC52
 2186 0368 00000000 		.word	alarmSync
 2187 036c A4040000 		.word	.LC53
 2188 0370 CC040000 		.word	.LC54
 2189 0374 FC040000 		.word	.LC55
 2190              	.L108:
 651:modem.c       ****     }else{
 652:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new debugging frequency value.");
 2191              		.loc 1 652 0
 2192 0378 8549     		ldr	r1, .L126
 2193 037a 0220     		movs	r0, #2
 2194 037c FFF7FEFF 		bl	printNotif
 2195              	.L109:
 653:modem.c       ****     }
 654:modem.c       ****     
 655:modem.c       ****     // app alarm frequency updates
 656:modem.c       ****     // APP_INTERFACE-------------------------------------------------------------------------------
 657:modem.c       ****     if (updatable_parameters.node_type == NODE_TYPE_CUSTOM){
 2196              		.loc 1 657 0
 2197 0380 844B     		ldr	r3, .L126+4
 2198 0382 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2199 0384 042B     		cmp	r3, #4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 55


 2200 0386 40F0FD80 		bne	.L123
 2201              	.LBB9:
 658:modem.c       ****         char temp[100];
 659:modem.c       ****         temp[0] = '\0'; 
 2202              		.loc 1 659 0
 2203 038a 07F10C03 		add	r3, r7, #12
 2204 038e 0022     		movs	r2, #0
 2205 0390 1A70     		strb	r2, [r3]
 660:modem.c       ****         
 661:modem.c       ****         if(App_LED_enabled){ //if you're not enabled, don't talk
 2206              		.loc 1 661 0
 2207 0392 814B     		ldr	r3, .L126+8
 2208 0394 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2209 0396 002B     		cmp	r3, #0
 2210 0398 4ED0     		beq	.L111
 662:modem.c       ****             if (strstr(s_app_led,"Freq=")!=NULL){
 2211              		.loc 1 662 0
 2212 039a 07F53A73 		add	r3, r7, #744
 2213 039e 7F49     		ldr	r1, .L126+12
 2214 03a0 1846     		mov	r0, r3
 2215 03a2 FFF7FEFF 		bl	strstr
 2216 03a6 0346     		mov	r3, r0
 2217 03a8 002B     		cmp	r3, #0
 2218 03aa 41D0     		beq	.L112
 663:modem.c       ****                 temp[0] = '\0';
 2219              		.loc 1 663 0
 2220 03ac 07F10C03 		add	r3, r7, #12
 2221 03b0 0022     		movs	r2, #0
 2222 03b2 1A70     		strb	r2, [r3]
 664:modem.c       ****                 strcpy(temp,s_app_led);
 2223              		.loc 1 664 0
 2224 03b4 07F53A72 		add	r2, r7, #744
 2225 03b8 07F10C03 		add	r3, r7, #12
 2226 03bc 1146     		mov	r1, r2
 2227 03be 1846     		mov	r0, r3
 2228 03c0 FFF7FEFF 		bl	strcpy
 665:modem.c       ****                 extract_string(temp,"Freq=","\r",s_app_led); // grab level app frequency
 2229              		.loc 1 665 0
 2230 03c4 07F53A73 		add	r3, r7, #744
 2231 03c8 07F10C00 		add	r0, r7, #12
 2232 03cc 744A     		ldr	r2, .L126+16
 2233 03ce 7349     		ldr	r1, .L126+12
 2234 03d0 FFF7FEFF 		bl	extract_string
 666:modem.c       ****                 if(sscanf(s_app_led, "%d", &app_led_freq)==1){
 2235              		.loc 1 666 0
 2236 03d4 07F17802 		add	r2, r7, #120
 2237 03d8 07F53A73 		add	r3, r7, #744
 2238 03dc 7149     		ldr	r1, .L126+20
 2239 03de 1846     		mov	r0, r3
 2240 03e0 FFF7FEFF 		bl	sscanf
 2241 03e4 0346     		mov	r3, r0
 2242 03e6 012B     		cmp	r3, #1
 2243 03e8 1DD1     		bne	.L113
 667:modem.c       ****                     updatable_parameters.App_LED_freq = app_led_freq;
 2244              		.loc 1 667 0
 2245 03ea 07F17803 		add	r3, r7, #120
 2246 03ee 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 56


 2247 03f0 DAB2     		uxtb	r2, r3
 2248 03f2 684B     		ldr	r3, .L126+4
 2249 03f4 5A71     		strb	r2, [r3, #5]
 668:modem.c       ****                     // update the alarm to the new frequency
 669:modem.c       ****                     alarmAppLED = CreateAlarm(updatable_parameters.App_LED_freq,ALARM_TYPE_MINUTE,A
 2250              		.loc 1 669 0
 2251 03f6 674B     		ldr	r3, .L126+4
 2252 03f8 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 2253 03fa 99B2     		uxth	r1, r3
 2254 03fc 6A4C     		ldr	r4, .L126+24
 2255 03fe 3846     		mov	r0, r7
 2256 0400 0723     		movs	r3, #7
 2257 0402 0122     		movs	r2, #1
 2258 0404 FFF7FEFF 		bl	CreateAlarm
 2259 0408 3A46     		mov	r2, r7
 2260 040a 2346     		mov	r3, r4
 2261 040c 1168     		ldr	r1, [r2]	@ unaligned
 2262 040e 1960     		str	r1, [r3]	@ unaligned
 2263 0410 9288     		ldrh	r2, [r2, #4]	@ unaligned
 2264 0412 9A80     		strh	r2, [r3, #4]	@ unaligned
 670:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT, "App_LED frequency changed to: %d\r\n", app_led_fr
 2265              		.loc 1 670 0
 2266 0414 07F17803 		add	r3, r7, #120
 2267 0418 1B68     		ldr	r3, [r3]
 2268 041a 1A46     		mov	r2, r3
 2269 041c 6349     		ldr	r1, .L126+28
 2270 041e 0020     		movs	r0, #0
 2271 0420 FFF7FEFF 		bl	printNotif
 2272 0424 08E0     		b	.L111
 2273              	.L113:
 671:modem.c       ****                 } 
 672:modem.c       ****                 else{
 673:modem.c       ****                     printNotif(NOTIF_TYPE_ERROR,"Could not parse new App_LED frequency value.");
 2274              		.loc 1 673 0
 2275 0426 6249     		ldr	r1, .L126+32
 2276 0428 0220     		movs	r0, #2
 2277 042a FFF7FEFF 		bl	printNotif
 2278 042e 03E0     		b	.L111
 2279              	.L112:
 674:modem.c       ****                 }
 675:modem.c       ****             }
 676:modem.c       ****             else{
 677:modem.c       ****                 printNotif(NOTIF_TYPE_ERROR,"No App_LED frequency value indicated.");
 2280              		.loc 1 677 0
 2281 0430 6049     		ldr	r1, .L126+36
 2282 0432 0220     		movs	r0, #2
 2283 0434 FFF7FEFF 		bl	printNotif
 2284              	.L111:
 678:modem.c       ****             }
 679:modem.c       ****         }
 680:modem.c       ****         if(level_sensor_enabled){
 2285              		.loc 1 680 0
 2286 0438 5F4B     		ldr	r3, .L126+40
 2287 043a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2288 043c 002B     		cmp	r3, #0
 2289 043e 4ED0     		beq	.L115
 681:modem.c       ****             if (strstr(s_level_sensor,"Freq=")!=NULL){
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 57


 2290              		.loc 1 681 0
 2291 0440 07F52173 		add	r3, r7, #644
 2292 0444 5549     		ldr	r1, .L126+12
 2293 0446 1846     		mov	r0, r3
 2294 0448 FFF7FEFF 		bl	strstr
 2295 044c 0346     		mov	r3, r0
 2296 044e 002B     		cmp	r3, #0
 2297 0450 41D0     		beq	.L116
 682:modem.c       ****                 temp[0] = '\0';
 2298              		.loc 1 682 0
 2299 0452 07F10C03 		add	r3, r7, #12
 2300 0456 0022     		movs	r2, #0
 2301 0458 1A70     		strb	r2, [r3]
 683:modem.c       ****                 strcpy(temp,s_level_sensor);
 2302              		.loc 1 683 0
 2303 045a 07F52172 		add	r2, r7, #644
 2304 045e 07F10C03 		add	r3, r7, #12
 2305 0462 1146     		mov	r1, r2
 2306 0464 1846     		mov	r0, r3
 2307 0466 FFF7FEFF 		bl	strcpy
 684:modem.c       ****                 extract_string(temp,"Freq=","\r",s_level_sensor); // grab level app frequency
 2308              		.loc 1 684 0
 2309 046a 07F52173 		add	r3, r7, #644
 2310 046e 07F10C00 		add	r0, r7, #12
 2311 0472 4B4A     		ldr	r2, .L126+16
 2312 0474 4949     		ldr	r1, .L126+12
 2313 0476 FFF7FEFF 		bl	extract_string
 685:modem.c       ****                 if(sscanf(s_level_sensor, "%d", &level_sensor_freq)==1){
 2314              		.loc 1 685 0
 2315 047a 07F17402 		add	r2, r7, #116
 2316 047e 07F52173 		add	r3, r7, #644
 2317 0482 4849     		ldr	r1, .L126+20
 2318 0484 1846     		mov	r0, r3
 2319 0486 FFF7FEFF 		bl	sscanf
 2320 048a 0346     		mov	r3, r0
 2321 048c 012B     		cmp	r3, #1
 2322 048e 1DD1     		bne	.L117
 686:modem.c       ****                     updatable_parameters.Level_Sensor_freq = level_sensor_freq;
 2323              		.loc 1 686 0
 2324 0490 07F17403 		add	r3, r7, #116
 2325 0494 1B68     		ldr	r3, [r3]
 2326 0496 DAB2     		uxtb	r2, r3
 2327 0498 3E4B     		ldr	r3, .L126+4
 2328 049a 9A71     		strb	r2, [r3, #6]
 687:modem.c       ****                     alarmLevelSensor = CreateAlarm(updatable_parameters.Level_Sensor_freq,ALARM_TYP
 2329              		.loc 1 687 0
 2330 049c 3D4B     		ldr	r3, .L126+4
 2331 049e 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 2332 04a0 99B2     		uxth	r1, r3
 2333 04a2 464C     		ldr	r4, .L126+44
 2334 04a4 3846     		mov	r0, r7
 2335 04a6 0723     		movs	r3, #7
 2336 04a8 0122     		movs	r2, #1
 2337 04aa FFF7FEFF 		bl	CreateAlarm
 2338 04ae 3A46     		mov	r2, r7
 2339 04b0 2346     		mov	r3, r4
 2340 04b2 1168     		ldr	r1, [r2]	@ unaligned
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 58


 2341 04b4 1960     		str	r1, [r3]	@ unaligned
 2342 04b6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 2343 04b8 9A80     		strh	r2, [r3, #4]	@ unaligned
 688:modem.c       **** 
 689:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT, "Level_Sensor frequency changed to: %d\r\n", level
 2344              		.loc 1 689 0
 2345 04ba 07F17403 		add	r3, r7, #116
 2346 04be 1B68     		ldr	r3, [r3]
 2347 04c0 1A46     		mov	r2, r3
 2348 04c2 3F49     		ldr	r1, .L126+48
 2349 04c4 0020     		movs	r0, #0
 2350 04c6 FFF7FEFF 		bl	printNotif
 2351 04ca 08E0     		b	.L115
 2352              	.L117:
 690:modem.c       ****                 } 
 691:modem.c       ****                 else{
 692:modem.c       ****                     printNotif(NOTIF_TYPE_ERROR,"Could not parse new Level_Sensor frequency value."
 2353              		.loc 1 692 0
 2354 04cc 3D49     		ldr	r1, .L126+52
 2355 04ce 0220     		movs	r0, #2
 2356 04d0 FFF7FEFF 		bl	printNotif
 2357 04d4 03E0     		b	.L115
 2358              	.L116:
 693:modem.c       ****                 }
 694:modem.c       ****             }
 695:modem.c       ****             else{
 696:modem.c       ****                 printNotif(NOTIF_TYPE_ERROR,"No Level_Sensor frequency value indicated.");
 2359              		.loc 1 696 0
 2360 04d6 3C49     		ldr	r1, .L126+56
 2361 04d8 0220     		movs	r0, #2
 2362 04da FFF7FEFF 		bl	printNotif
 2363              	.L115:
 697:modem.c       ****             }
 698:modem.c       ****         }
 699:modem.c       ****         /*
 700:modem.c       ****         if(downstream_level_sensor_enabled){ 
 701:modem.c       ****             if (strstr(s_down_level_sensor,"Freq=") !=NULL){
 702:modem.c       ****                 temp[0] = '\0';
 703:modem.c       ****                 strcpy(temp,s_down_level_sensor); // this temp may not actually be used
 704:modem.c       ****                 extract_string(temp,"Freq=","\r",s_down_level_sensor); // grab level app frequency
 705:modem.c       ****                 if(sscanf(s_down_level_sensor, "%d", &down_level_freq)==1){
 706:modem.c       ****                     updatable_parameters.Downstream_Level_Sensor_freq = down_level_freq;
 707:modem.c       ****                     alarmDownstreamLevelSensor = CreateAlarm(updatable_parameters.Downstream_Level_
 708:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT, "Downstream_Level_Sensor frequency changed to: %d\
 709:modem.c       ****                 } 
 710:modem.c       ****                 else{
 711:modem.c       ****                     printNotif(NOTIF_TYPE_ERROR,"Could not parse new Downstream_Level_Sensor freque
 712:modem.c       ****                 }
 713:modem.c       ****             }
 714:modem.c       ****             else{
 715:modem.c       ****                 printNotif(NOTIF_TYPE_ERROR,"No Downstream_Level_Sensor frequency value indicated."
 716:modem.c       ****             }
 717:modem.c       ****         }
 718:modem.c       ****         */
 719:modem.c       ****         /*
 720:modem.c       ****         if(valve_enabled){ 
 721:modem.c       ****             if (strstr(s_valve,"Freq=") !=NULL){
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 59


 722:modem.c       ****                 temp[0] = '\0';
 723:modem.c       ****                 strcpy(temp,s_valve);
 724:modem.c       ****                 extract_string(temp,"Freq=","\r",s_valve); // grab valve frequency
 725:modem.c       ****                 if(sscanf(s_valve, "%d", &valve_freq)==1){
 726:modem.c       ****                     updatable_parameters.Valve_freq = valve_freq;
 727:modem.c       ****                     alarmDownstreamLevelSensor = CreateAlarm(updatable_parameters.Valve_freq,ALARM_
 728:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT, "Valve frequency changed to: %d\r\n", valve_freq);
 729:modem.c       ****                 } 
 730:modem.c       ****                 else{
 731:modem.c       ****                     printNotif(NOTIF_TYPE_ERROR,"Could not parse new Valve frequency value.");
 732:modem.c       ****                 }
 733:modem.c       ****             }
 734:modem.c       ****             else{
 735:modem.c       ****                 printNotif(NOTIF_TYPE_ERROR,"No Valve frequency value indicated.");
 736:modem.c       ****             }
 737:modem.c       ****         }
 738:modem.c       ****         */
 739:modem.c       ****         if(autosampler_enabled){ 
 2364              		.loc 1 739 0
 2365 04de 3B4B     		ldr	r3, .L126+60
 2366 04e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2367 04e2 002B     		cmp	r3, #0
 2368 04e4 4ED0     		beq	.L123
 740:modem.c       ****             if (strstr(s_autosampler,"Freq=") !=NULL){
 2369              		.loc 1 740 0
 2370 04e6 07F5AC73 		add	r3, r7, #344
 2371 04ea 2C49     		ldr	r1, .L126+12
 2372 04ec 1846     		mov	r0, r3
 2373 04ee FFF7FEFF 		bl	strstr
 2374 04f2 0346     		mov	r3, r0
 2375 04f4 002B     		cmp	r3, #0
 2376 04f6 41D0     		beq	.L120
 741:modem.c       ****                 temp[0] = '\0';
 2377              		.loc 1 741 0
 2378 04f8 07F10C03 		add	r3, r7, #12
 2379 04fc 0022     		movs	r2, #0
 2380 04fe 1A70     		strb	r2, [r3]
 742:modem.c       ****                 strcpy(temp,s_autosampler); // this temp may not actually be used
 2381              		.loc 1 742 0
 2382 0500 07F5AC72 		add	r2, r7, #344
 2383 0504 07F10C03 		add	r3, r7, #12
 2384 0508 1146     		mov	r1, r2
 2385 050a 1846     		mov	r0, r3
 2386 050c FFF7FEFF 		bl	strcpy
 743:modem.c       ****                 extract_string(temp,"Freq=","\r",s_autosampler); // grab autosampler app frequency
 2387              		.loc 1 743 0
 2388 0510 07F5AC73 		add	r3, r7, #344
 2389 0514 07F10C00 		add	r0, r7, #12
 2390 0518 214A     		ldr	r2, .L126+16
 2391 051a 2049     		ldr	r1, .L126+12
 2392 051c FFF7FEFF 		bl	extract_string
 744:modem.c       ****                 if(sscanf(s_autosampler, "%d", &autosampler_freq)==1){
 2393              		.loc 1 744 0
 2394 0520 07F17002 		add	r2, r7, #112
 2395 0524 07F5AC73 		add	r3, r7, #344
 2396 0528 1E49     		ldr	r1, .L126+20
 2397 052a 1846     		mov	r0, r3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 60


 2398 052c FFF7FEFF 		bl	sscanf
 2399 0530 0346     		mov	r3, r0
 2400 0532 012B     		cmp	r3, #1
 2401 0534 1DD1     		bne	.L121
 745:modem.c       ****                     updatable_parameters.Autosampler_freq = autosampler_freq;
 2402              		.loc 1 745 0
 2403 0536 07F17003 		add	r3, r7, #112
 2404 053a 1B68     		ldr	r3, [r3]
 2405 053c DAB2     		uxtb	r2, r3
 2406 053e 154B     		ldr	r3, .L126+4
 2407 0540 5A72     		strb	r2, [r3, #9]
 746:modem.c       ****                     alarmAutosampler = CreateAlarm(updatable_parameters.Autosampler_freq,ALARM_TYPE
 2408              		.loc 1 746 0
 2409 0542 144B     		ldr	r3, .L126+4
 2410 0544 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 2411 0546 99B2     		uxth	r1, r3
 2412 0548 214C     		ldr	r4, .L126+64
 2413 054a 3846     		mov	r0, r7
 2414 054c 0723     		movs	r3, #7
 2415 054e 0122     		movs	r2, #1
 2416 0550 FFF7FEFF 		bl	CreateAlarm
 2417 0554 3A46     		mov	r2, r7
 2418 0556 2346     		mov	r3, r4
 2419 0558 1168     		ldr	r1, [r2]	@ unaligned
 2420 055a 1960     		str	r1, [r3]	@ unaligned
 2421 055c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 2422 055e 9A80     		strh	r2, [r3, #4]	@ unaligned
 747:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT, "Autosampler frequency changed to: %d\r\n", autosa
 2423              		.loc 1 747 0
 2424 0560 07F17003 		add	r3, r7, #112
 2425 0564 1B68     		ldr	r3, [r3]
 2426 0566 1A46     		mov	r2, r3
 2427 0568 1A49     		ldr	r1, .L126+68
 2428 056a 0020     		movs	r0, #0
 2429 056c FFF7FEFF 		bl	printNotif
 2430              	.LBE9:
 748:modem.c       ****                 } 
 749:modem.c       ****                 else{
 750:modem.c       ****                     printNotif(NOTIF_TYPE_ERROR,"Could not parse new Autosampler frequency value.")
 751:modem.c       ****                 }
 752:modem.c       ****             }
 753:modem.c       ****             else{
 754:modem.c       ****                 printNotif(NOTIF_TYPE_ERROR,"No Autosampler frequency value indicated.");
 755:modem.c       ****             }
 756:modem.c       ****         }
 757:modem.c       ****         /* app add template
 758:modem.c       ****         if(<name>_enabled){ 
 759:modem.c       ****             if (strstr(s_<name>,"Freq=") !=NULL){
 760:modem.c       ****                 temp[0] = '\0';
 761:modem.c       ****                 strcpy(temp,s_<name>); // this temp may not actually be used
 762:modem.c       ****                 extract_string(temp,"Freq=","\r",s_<name>); // grab <name> app frequency
 763:modem.c       ****                 if(sscanf(s_<name>, "%d", &<name>_freq)==1){
 764:modem.c       ****                     updatable_parameters.Autosampler_freq = <name>_freq;
 765:modem.c       ****                     alarm<Name> = CreateAlarm(updatable_parameters.<Name>_freq,ALARM_TYPE_MINUTE,AL
 766:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT, "<Name> frequency changed to: %d\r\n", <name>_freq
 767:modem.c       ****                 } 
 768:modem.c       ****                 else{
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 61


 769:modem.c       ****                     printNotif(NOTIF_TYPE_ERROR,"Could not parse new <Name>frequency value.");
 770:modem.c       ****                 }
 771:modem.c       ****             }
 772:modem.c       ****             else{
 773:modem.c       ****                 printNotif(NOTIF_TYPE_ERROR,"No <Name> frequency value indicated.");
 774:modem.c       ****             }
 775:modem.c       ****         }
 776:modem.c       ****         */
 777:modem.c       ****     
 778:modem.c       ****     }   
 779:modem.c       ****     //---------------------------------------------------------------------------------------------
 780:modem.c       **** }
 2431              		.loc 1 780 0
 2432 0570 08E0     		b	.L123
 2433              	.L121:
 2434              	.LBB10:
 750:modem.c       ****                 }
 2435              		.loc 1 750 0
 2436 0572 1949     		ldr	r1, .L126+72
 2437 0574 0220     		movs	r0, #2
 2438 0576 FFF7FEFF 		bl	printNotif
 2439              	.LBE10:
 2440              		.loc 1 780 0
 2441 057a 03E0     		b	.L123
 2442              	.L120:
 2443              	.LBB11:
 754:modem.c       ****             }
 2444              		.loc 1 754 0
 2445 057c 1749     		ldr	r1, .L126+76
 2446 057e 0220     		movs	r0, #2
 2447 0580 FFF7FEFF 		bl	printNotif
 2448              	.L123:
 2449              	.LBE11:
 2450              		.loc 1 780 0
 2451 0584 00BF     		nop
 2452 0586 07F56377 		add	r7, r7, #908
 2453              		.cfi_def_cfa_offset 12
 2454 058a BD46     		mov	sp, r7
 2455              		.cfi_def_cfa_register 13
 2456              		@ sp needed
 2457 058c 90BD     		pop	{r4, r7, pc}
 2458              	.L127:
 2459 058e 00BF     		.align	2
 2460              	.L126:
 2461 0590 28050000 		.word	.LC56
 2462 0594 00000000 		.word	updatable_parameters
 2463 0598 00000000 		.word	App_LED_enabled
 2464 059c 58050000 		.word	.LC57
 2465 05a0 88020000 		.word	.LC21
 2466 05a4 DC030000 		.word	.LC46
 2467 05a8 00000000 		.word	alarmAppLED
 2468 05ac 60050000 		.word	.LC58
 2469 05b0 84050000 		.word	.LC59
 2470 05b4 B4050000 		.word	.LC60
 2471 05b8 00000000 		.word	level_sensor_enabled
 2472 05bc 00000000 		.word	alarmLevelSensor
 2473 05c0 DC050000 		.word	.LC61
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 62


 2474 05c4 04060000 		.word	.LC62
 2475 05c8 38060000 		.word	.LC63
 2476 05cc 00000000 		.word	autosampler_enabled
 2477 05d0 00000000 		.word	alarmAutosampler
 2478 05d4 64060000 		.word	.LC64
 2479 05d8 8C060000 		.word	.LC65
 2480 05dc C0060000 		.word	.LC66
 2481              		.cfi_endproc
 2482              	.LFE81:
 2483              		.size	get_updated_parameters_from_malcom, .-get_updated_parameters_from_malcom
 2484              		.section	.rodata
 2485 06ea 0000     		.align	2
 2486              	.LC67:
 2487 06ec 41542343 		.ascii	"AT#CGMM\015\000"
 2487      474D4D0D 
 2487      00
 2488 06f5 000000   		.align	2
 2489              	.LC68:
 2490 06f8 4D6F6465 		.ascii	"Modem Model: %s\000"
 2490      6D204D6F 
 2490      64656C3A 
 2490      20257300 
 2491              		.align	2
 2492              	.LC69:
 2493 0708 41542343 		.ascii	"AT#CCID\015\000"
 2493      4349440D 
 2493      00
 2494 0711 000000   		.align	2
 2495              	.LC70:
 2496 0714 53494D20 		.ascii	"SIM ID: %s\000"
 2496      49443A20 
 2496      257300
 2497 071f 00       		.align	2
 2498              	.LC71:
 2499 0720 41542B43 		.ascii	"AT+CGSN\015\000"
 2499      47534E0D 
 2499      00
 2500 0729 000000   		.align	2
 2501              	.LC72:
 2502 072c 494D4549 		.ascii	"IMEI: %s\000"
 2502      3A202573 
 2502      00
 2503 0735 000000   		.align	2
 2504              	.LC73:
 2505 0738 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\015\012"
 2505      4744434F 
 2505      4E543D31 
 2505      2C224950 
 2505      222C2277 
 2506 0761 00       		.ascii	"\000"
 2507 0762 0000     		.align	2
 2508              	.LC74:
 2509 0764 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"super\"\015\012\000"
 2509      4744434F 
 2509      4E543D31 
 2509      2C224950 
 2509      222C2273 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 63


 2510              		.align	2
 2511              	.LC75:
 2512 0780 41542B43 		.ascii	"AT+CFUN?\015\000"
 2512      46554E3F 
 2512      0D00
 2513 078a 0000     		.align	2
 2514              	.LC76:
 2515 078c 4346554E 		.ascii	"CFUN: %s\000"
 2515      3A202573 
 2515      00
 2516 0795 000000   		.align	2
 2517              	.LC77:
 2518 0798 41542B43 		.ascii	"AT+CFUN=1\015\000"
 2518      46554E3D 
 2518      310D00
 2519              		.section	.text.modem_configure_settings,"ax",%progbits
 2520              		.align	2
 2521              		.global	modem_configure_settings
 2522              		.thumb
 2523              		.thumb_func
 2524              		.type	modem_configure_settings, %function
 2525              	modem_configure_settings:
 2526              	.LFB82:
 781:modem.c       ****     
 782:modem.c       **** // Configure the modem settings
 783:modem.c       **** void modem_configure_settings(){
 2527              		.loc 1 783 0
 2528              		.cfi_startproc
 2529              		@ args = 0, pretend = 0, frame = 16
 2530              		@ frame_needed = 1, uses_anonymous_args = 0
 2531 0000 80B5     		push	{r7, lr}
 2532              		.cfi_def_cfa_offset 8
 2533              		.cfi_offset 7, -8
 2534              		.cfi_offset 14, -4
 2535 0002 84B0     		sub	sp, sp, #16
 2536              		.cfi_def_cfa_offset 24
 2537 0004 00AF     		add	r7, sp, #0
 2538              		.cfi_def_cfa_register 7
 784:modem.c       ****     
 785:modem.c       ****     // Save/print modem model ID number
 786:modem.c       ****     if(modem_info.model_id[0] == '\0'){
 2539              		.loc 1 786 0
 2540 0006 454B     		ldr	r3, .L137
 2541 0008 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 2542 000a 002B     		cmp	r3, #0
 2543 000c 13D1     		bne	.L129
 787:modem.c       ****         // AT command #CGMM returns the "device model identification" code with the command echo.
 788:modem.c       ****         if(at_write_command("AT#CGMM\r","OK",DEFAULT_AT_TIMEOUT)){
 2544              		.loc 1 788 0
 2545 000e 4FF4FA62 		mov	r2, #2000
 2546 0012 4349     		ldr	r1, .L137+4
 2547 0014 4348     		ldr	r0, .L137+8
 2548 0016 FFF7FEFF 		bl	at_write_command
 2549 001a 0346     		mov	r3, r0
 2550 001c 002B     		cmp	r3, #0
 2551 001e 0AD0     		beq	.L129
 789:modem.c       ****             // Extract modem model ID number string from the UART
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 64


 790:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.model_id);
 2552              		.loc 1 790 0
 2553 0020 414B     		ldr	r3, .L137+12
 2554 0022 424A     		ldr	r2, .L137+16
 2555 0024 4249     		ldr	r1, .L137+20
 2556 0026 4348     		ldr	r0, .L137+24
 2557 0028 FFF7FEFF 		bl	extract_string
 791:modem.c       ****             // Print modem model ID number
 792:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem Model: %s",modem_info.model_id);
 2558              		.loc 1 792 0
 2559 002c 3E4A     		ldr	r2, .L137+12
 2560 002e 4249     		ldr	r1, .L137+28
 2561 0030 0020     		movs	r0, #0
 2562 0032 FFF7FEFF 		bl	printNotif
 2563              	.L129:
 793:modem.c       ****         }
 794:modem.c       ****     }
 795:modem.c       ****     
 796:modem.c       ****    // Save/print SIM-card ID
 797:modem.c       ****    if(modem_info.sim_id[0] == '\0'){
 2564              		.loc 1 797 0
 2565 0036 394B     		ldr	r3, .L137
 2566 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2567 003a 002B     		cmp	r3, #0
 2568 003c 13D1     		bne	.L130
 798:modem.c       ****         // AT command #CCID is an execution command that reads the SIM number 
 799:modem.c       ****         if(at_write_command("AT#CCID\r", "OK", DEFAULT_AT_TIMEOUT)){
 2569              		.loc 1 799 0
 2570 003e 4FF4FA62 		mov	r2, #2000
 2571 0042 3749     		ldr	r1, .L137+4
 2572 0044 3D48     		ldr	r0, .L137+32
 2573 0046 FFF7FEFF 		bl	at_write_command
 2574 004a 0346     		mov	r3, r0
 2575 004c 002B     		cmp	r3, #0
 2576 004e 0AD0     		beq	.L130
 800:modem.c       ****             // Extract SIM-card ID string from the UART
 801:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.sim_id);
 2577              		.loc 1 801 0
 2578 0050 324B     		ldr	r3, .L137
 2579 0052 364A     		ldr	r2, .L137+16
 2580 0054 3649     		ldr	r1, .L137+20
 2581 0056 3748     		ldr	r0, .L137+24
 2582 0058 FFF7FEFF 		bl	extract_string
 802:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"SIM ID: %s",modem_info.sim_id);
 2583              		.loc 1 802 0
 2584 005c 2F4A     		ldr	r2, .L137
 2585 005e 3849     		ldr	r1, .L137+36
 2586 0060 0020     		movs	r0, #0
 2587 0062 FFF7FEFF 		bl	printNotif
 2588              	.L130:
 803:modem.c       ****         }
 804:modem.c       ****    }
 805:modem.c       **** 
 806:modem.c       ****     // Save/print modem IMEI
 807:modem.c       ****     if(modem_info.imei[0] == '\0'){
 2589              		.loc 1 807 0
 2590 0066 2D4B     		ldr	r3, .L137
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 65


 2591 0068 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 2592 006c 002B     		cmp	r3, #0
 2593 006e 13D1     		bne	.L131
 808:modem.c       ****         // AT command #CGSN returns the product serial number, identified as the IMEI of the mobile
 809:modem.c       ****         if(at_write_command("AT+CGSN\r","OK",DEFAULT_AT_TIMEOUT)){
 2594              		.loc 1 809 0
 2595 0070 4FF4FA62 		mov	r2, #2000
 2596 0074 2A49     		ldr	r1, .L137+4
 2597 0076 3348     		ldr	r0, .L137+40
 2598 0078 FFF7FEFF 		bl	at_write_command
 2599 007c 0346     		mov	r3, r0
 2600 007e 002B     		cmp	r3, #0
 2601 0080 0AD0     		beq	.L131
 810:modem.c       ****             // Extract modem IMEI number string from the UART
 811:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.imei);
 2602              		.loc 1 811 0
 2603 0082 314B     		ldr	r3, .L137+44
 2604 0084 294A     		ldr	r2, .L137+16
 2605 0086 2A49     		ldr	r1, .L137+20
 2606 0088 2A48     		ldr	r0, .L137+24
 2607 008a FFF7FEFF 		bl	extract_string
 812:modem.c       ****             // Print modem IMEI number
 813:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"IMEI: %s",modem_info.imei);
 2608              		.loc 1 813 0
 2609 008e 2E4A     		ldr	r2, .L137+44
 2610 0090 2E49     		ldr	r1, .L137+48
 2611 0092 0020     		movs	r0, #0
 2612 0094 FFF7FEFF 		bl	printNotif
 2613              	.L131:
 814:modem.c       ****         } 
 815:modem.c       ****     }
 816:modem.c       ****     
 817:modem.c       ****     // Configure protocol and cellular end point
 818:modem.c       ****     // AT command +CGDCONT defines the PDP context parameter values for a PDP context identified by
 819:modem.c       ****     if(updatable_parameters.sim_type == SIM_TYPE_STANDARD){
 2614              		.loc 1 819 0
 2615 0098 2D4B     		ldr	r3, .L137+52
 2616 009a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2617 009c 83F00103 		eor	r3, r3, #1
 2618 00a0 DBB2     		uxtb	r3, r3
 2619 00a2 002B     		cmp	r3, #0
 2620 00a4 06D0     		beq	.L132
 820:modem.c       ****         at_write_command("AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\r\n", "OK", DEFAULT_AT_TIMEOU
 2621              		.loc 1 820 0
 2622 00a6 4FF4FA62 		mov	r2, #2000
 2623 00aa 1D49     		ldr	r1, .L137+4
 2624 00ac 2948     		ldr	r0, .L137+56
 2625 00ae FFF7FEFF 		bl	at_write_command
 2626 00b2 09E0     		b	.L133
 2627              	.L132:
 821:modem.c       ****     
 822:modem.c       ****     }else if(updatable_parameters.sim_type == SIM_TYPE_SUPER){
 2628              		.loc 1 822 0
 2629 00b4 264B     		ldr	r3, .L137+52
 2630 00b6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2631 00b8 002B     		cmp	r3, #0
 2632 00ba 05D0     		beq	.L133
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 66


 823:modem.c       ****         at_write_command("AT+CGDCONT=1,\"IP\",\"super\"\r\n", "OK", DEFAULT_AT_TIMEOUT);
 2633              		.loc 1 823 0
 2634 00bc 4FF4FA62 		mov	r2, #2000
 2635 00c0 1749     		ldr	r1, .L137+4
 2636 00c2 2548     		ldr	r0, .L137+60
 2637 00c4 FFF7FEFF 		bl	at_write_command
 2638              	.L133:
 824:modem.c       ****     }
 825:modem.c       ****     
 826:modem.c       ****     // Check if modem power savings is enabled. If so, disable it so we can send data.
 827:modem.c       ****     // AT command +CFUN? is a read command that reports the current setting of <fun> which is the p
 828:modem.c       ****     if(at_write_command("AT+CFUN?\r", "OK",DEFAULT_AT_TIMEOUT)){
 2639              		.loc 1 828 0
 2640 00c8 4FF4FA62 		mov	r2, #2000
 2641 00cc 1449     		ldr	r1, .L137+4
 2642 00ce 2348     		ldr	r0, .L137+64
 2643 00d0 FFF7FEFF 		bl	at_write_command
 2644 00d4 0346     		mov	r3, r0
 2645 00d6 002B     		cmp	r3, #0
 2646 00d8 1BD0     		beq	.L136
 2647              	.LBB12:
 829:modem.c       ****         char CFUN[10]; // Create a character array of length 10 called CFUN 
 830:modem.c       ****         CFUN[0] = '\0';
 2648              		.loc 1 830 0
 2649 00da 0023     		movs	r3, #0
 2650 00dc 3B71     		strb	r3, [r7, #4]
 831:modem.c       ****         // Extract UART string recieved from the modem
 832:modem.c       ****         extract_string(uart_received_string,": ","\r",CFUN);
 2651              		.loc 1 832 0
 2652 00de 3B1D     		adds	r3, r7, #4
 2653 00e0 124A     		ldr	r2, .L137+16
 2654 00e2 1349     		ldr	r1, .L137+20
 2655 00e4 1348     		ldr	r0, .L137+24
 2656 00e6 FFF7FEFF 		bl	extract_string
 833:modem.c       ****         // Print UART string recieved from the modem
 834:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"CFUN: %s",CFUN);
 2657              		.loc 1 834 0
 2658 00ea 3B1D     		adds	r3, r7, #4
 2659 00ec 1A46     		mov	r2, r3
 2660 00ee 1C49     		ldr	r1, .L137+68
 2661 00f0 0020     		movs	r0, #0
 2662 00f2 FFF7FEFF 		bl	printNotif
 835:modem.c       ****         // Search CRUN for "1", if "1" exists, it will return 1u otherwise it will return NULL
 836:modem.c       ****         // If it returns NULL, then write another command to the modem
 837:modem.c       ****         if(strstr(CFUN,"1") == NULL){
 2663              		.loc 1 837 0
 2664 00f6 3B1D     		adds	r3, r7, #4
 2665 00f8 3121     		movs	r1, #49
 2666 00fa 1846     		mov	r0, r3
 2667 00fc FFF7FEFF 		bl	strchr
 2668 0100 0346     		mov	r3, r0
 2669 0102 002B     		cmp	r3, #0
 2670 0104 05D1     		bne	.L136
 838:modem.c       ****             // AT command +CFUN= is a set command which selects the level of functionality in the m
 839:modem.c       ****             // = 1 means mobile full functionality with power saving disabled 
 840:modem.c       ****             at_write_command("AT+CFUN=1\r", "OK",DEFAULT_AT_TIMEOUT);
 2671              		.loc 1 840 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 67


 2672 0106 4FF4FA62 		mov	r2, #2000
 2673 010a 0549     		ldr	r1, .L137+4
 2674 010c 1548     		ldr	r0, .L137+72
 2675 010e FFF7FEFF 		bl	at_write_command
 2676              	.L136:
 2677              	.LBE12:
 841:modem.c       ****         }
 842:modem.c       ****     }
 843:modem.c       **** 
 844:modem.c       ****     
 845:modem.c       **** }
 2678              		.loc 1 845 0
 2679 0112 00BF     		nop
 2680 0114 1037     		adds	r7, r7, #16
 2681              		.cfi_def_cfa_offset 8
 2682 0116 BD46     		mov	sp, r7
 2683              		.cfi_def_cfa_register 13
 2684              		@ sp needed
 2685 0118 80BD     		pop	{r7, pc}
 2686              	.L138:
 2687 011a 00BF     		.align	2
 2688              	.L137:
 2689 011c 00000000 		.word	modem_info
 2690 0120 00000000 		.word	.LC0
 2691 0124 EC060000 		.word	.LC67
 2692 0128 14000000 		.word	modem_info+20
 2693 012c 88020000 		.word	.LC21
 2694 0130 8C020000 		.word	.LC22
 2695 0134 00000000 		.word	uart_received_string
 2696 0138 F8060000 		.word	.LC68
 2697 013c 08070000 		.word	.LC69
 2698 0140 14070000 		.word	.LC70
 2699 0144 20070000 		.word	.LC71
 2700 0148 28000000 		.word	modem_info+40
 2701 014c 2C070000 		.word	.LC72
 2702 0150 00000000 		.word	updatable_parameters
 2703 0154 38070000 		.word	.LC73
 2704 0158 64070000 		.word	.LC74
 2705 015c 80070000 		.word	.LC75
 2706 0160 8C070000 		.word	.LC76
 2707 0164 98070000 		.word	.LC77
 2708              		.cfi_endproc
 2709              	.LFE82:
 2710              		.size	modem_configure_settings, .-modem_configure_settings
 2711              		.section	.rodata
 2712 07a3 00       		.align	2
 2713              	.LC78:
 2714 07a4 4D6F6465 		.ascii	"Modem not ready to get time. Not conncted to networ"
 2714      6D206E6F 
 2714      74207265 
 2714      61647920 
 2714      746F2067 
 2715 07d7 6B2E00   		.ascii	"k.\000"
 2716 07da 0000     		.align	2
 2717              	.LC79:
 2718 07dc 41542B43 		.ascii	"AT+CCLK?\015\000"
 2718      434C4B3F 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 68


 2718      0D00
 2719 07e6 0000     		.align	2
 2720              	.LC80:
 2721 07e8 220D00   		.ascii	"\"\015\000"
 2722 07eb 00       		.align	2
 2723              	.LC81:
 2724 07ec 3A202200 		.ascii	": \"\000"
 2725              		.align	2
 2726              	.LC82:
 2727 07f0 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d-%d\000"
 2727      642F2564 
 2727      2C25643A 
 2727      25643A25 
 2727      642D2564 
 2728 0805 000000   		.align	2
 2729              	.LC83:
 2730 0808 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d+%d\000"
 2730      642F2564 
 2730      2C25643A 
 2730      25643A25 
 2730      642B2564 
 2731 081d 000000   		.align	2
 2732              	.LC84:
 2733 0820 436F756C 		.ascii	"Could not parse modem time.\000"
 2733      64206E6F 
 2733      74207061 
 2733      72736520 
 2733      6D6F6465 
 2734              		.section	.text.modem_get_network_time,"ax",%progbits
 2735              		.align	2
 2736              		.global	modem_get_network_time
 2737              		.thumb
 2738              		.thumb_func
 2739              		.type	modem_get_network_time, %function
 2740              	modem_get_network_time:
 2741              	.LFB83:
 846:modem.c       **** 
 847:modem.c       **** //returns 0 if modem can't get time
 848:modem.c       **** long modem_get_network_time(){
 2742              		.loc 1 848 0
 2743              		.cfi_startproc
 2744              		@ args = 0, pretend = 0, frame = 104
 2745              		@ frame_needed = 1, uses_anonymous_args = 0
 2746 0000 80B5     		push	{r7, lr}
 2747              		.cfi_def_cfa_offset 8
 2748              		.cfi_offset 7, -8
 2749              		.cfi_offset 14, -4
 2750 0002 A0B0     		sub	sp, sp, #128
 2751              		.cfi_def_cfa_offset 136
 2752 0004 06AF     		add	r7, sp, #24
 2753              		.cfi_def_cfa 7, 112
 849:modem.c       ****     
 850:modem.c       ****     //modem reposen format (careful to include the quotes "")
 851:modem.c       ****     //+CCLK: "20/05/01,10:48:33-16" the "-16" is the number of quarter hourts (15 mins) from GMT ti
 852:modem.c       ****     //ex: 14:48 GMT
 853:modem.c       **** 
 854:modem.c       ****     // If modem_state is not "ready", then print error and return 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 69


 855:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2754              		.loc 1 855 0
 2755 0006 444B     		ldr	r3, .L146
 2756 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2757 000a 042B     		cmp	r3, #4
 2758 000c 05D0     		beq	.L140
 856:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Modem not ready to get time. Not conncted to network.");
 2759              		.loc 1 856 0
 2760 000e 4349     		ldr	r1, .L146+4
 2761 0010 0220     		movs	r0, #2
 2762 0012 FFF7FEFF 		bl	printNotif
 857:modem.c       ****         return 0;   
 2763              		.loc 1 857 0
 2764 0016 0023     		movs	r3, #0
 2765 0018 7AE0     		b	.L141
 2766              	.L140:
 858:modem.c       ****     }
 859:modem.c       ****     long epoch_time = 0; // Create variable of long time and set equal to 0
 2767              		.loc 1 859 0
 2768 001a 0023     		movs	r3, #0
 2769 001c 7B66     		str	r3, [r7, #100]
 860:modem.c       ****     
 861:modem.c       ****     // AT command +CCLK? is a read command that returns the current setting of the real-time clock 
 862:modem.c       ****     if(at_write_command("AT+CCLK?\r","OK",DEFAULT_AT_TIMEOUT)){
 2770              		.loc 1 862 0
 2771 001e 4FF4FA62 		mov	r2, #2000
 2772 0022 3F49     		ldr	r1, .L146+8
 2773 0024 3F48     		ldr	r0, .L146+12
 2774 0026 FFF7FEFF 		bl	at_write_command
 2775 002a 0346     		mov	r3, r0
 2776 002c 002B     		cmp	r3, #0
 2777 002e 6ED0     		beq	.L142
 2778              	.LBB13:
 863:modem.c       ****         // need to set this to /0
 864:modem.c       ****         char network_time[30]; // Create a character array of length 30 called network_time 
 865:modem.c       ****         network_time[0] = '\0';
 2779              		.loc 1 865 0
 2780 0030 0023     		movs	r3, #0
 2781 0032 87F84430 		strb	r3, [r7, #68]
 866:modem.c       ****         // Extract UART string recieved from the modem and save to variable network_time
 867:modem.c       ****         extract_string(uart_received_string,": \"","\"\r",network_time);
 2782              		.loc 1 867 0
 2783 0036 07F14403 		add	r3, r7, #68
 2784 003a 3B4A     		ldr	r2, .L146+16
 2785 003c 3B49     		ldr	r1, .L146+20
 2786 003e 3C48     		ldr	r0, .L146+24
 2787 0040 FFF7FEFF 		bl	extract_string
 868:modem.c       ****         
 869:modem.c       ****         ///////////////////  
 870:modem.c       ****         struct tm t; // Creates variable t of struct tm
 871:modem.c       ****         
 872:modem.c       ****         // Creates a bunch of variables of type int and sets them to 0
 873:modem.c       ****         int year, month, day, hour, minute, second, gmt_offset = 0;
 2788              		.loc 1 873 0
 2789 0044 0023     		movs	r3, #0
 2790 0046 BB62     		str	r3, [r7, #40]
 874:modem.c       ****       
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 70


 875:modem.c       ****         // Determines the GMT offset 
 876:modem.c       ****         // int sscanf(const char *str, const char *format, ...) reads formatted input from a string
 877:modem.c       ****         // On success, the function returns the number of variables filled. In the case of an input
 878:modem.c       ****         if(sscanf(network_time,"%d/%d/%d,%d:%d:%d-%d",&year,&month,&day,&hour,&minute,&second,&gmt_
 2791              		.loc 1 878 0
 2792 0048 07F13C01 		add	r1, r7, #60
 2793 004c 07F14002 		add	r2, r7, #64
 2794 0050 07F14400 		add	r0, r7, #68
 2795 0054 07F12803 		add	r3, r7, #40
 2796 0058 0493     		str	r3, [sp, #16]
 2797 005a 07F12C03 		add	r3, r7, #44
 2798 005e 0393     		str	r3, [sp, #12]
 2799 0060 07F13003 		add	r3, r7, #48
 2800 0064 0293     		str	r3, [sp, #8]
 2801 0066 07F13403 		add	r3, r7, #52
 2802 006a 0193     		str	r3, [sp, #4]
 2803 006c 07F13803 		add	r3, r7, #56
 2804 0070 0093     		str	r3, [sp]
 2805 0072 0B46     		mov	r3, r1
 2806 0074 2F49     		ldr	r1, .L146+28
 2807 0076 FFF7FEFF 		bl	sscanf
 2808 007a 0346     		mov	r3, r0
 2809 007c 072B     		cmp	r3, #7
 2810 007e 06D1     		bne	.L143
 879:modem.c       ****             gmt_offset = gmt_offset*(900);
 2811              		.loc 1 879 0
 2812 0080 BB6A     		ldr	r3, [r7, #40]
 2813 0082 4FF46172 		mov	r2, #900
 2814 0086 02FB03F3 		mul	r3, r2, r3
 2815 008a BB62     		str	r3, [r7, #40]
 2816 008c 27E0     		b	.L144
 2817              	.L143:
 880:modem.c       ****         }else if(sscanf(network_time,"%d/%d/%d,%d:%d:%d+%d",&year,&month,&day,&hour,&minute,&second
 2818              		.loc 1 880 0
 2819 008e 07F13C01 		add	r1, r7, #60
 2820 0092 07F14002 		add	r2, r7, #64
 2821 0096 07F14400 		add	r0, r7, #68
 2822 009a 07F12803 		add	r3, r7, #40
 2823 009e 0493     		str	r3, [sp, #16]
 2824 00a0 07F12C03 		add	r3, r7, #44
 2825 00a4 0393     		str	r3, [sp, #12]
 2826 00a6 07F13003 		add	r3, r7, #48
 2827 00aa 0293     		str	r3, [sp, #8]
 2828 00ac 07F13403 		add	r3, r7, #52
 2829 00b0 0193     		str	r3, [sp, #4]
 2830 00b2 07F13803 		add	r3, r7, #56
 2831 00b6 0093     		str	r3, [sp]
 2832 00b8 0B46     		mov	r3, r1
 2833 00ba 1F49     		ldr	r1, .L146+32
 2834 00bc FFF7FEFF 		bl	sscanf
 2835 00c0 0346     		mov	r3, r0
 2836 00c2 072B     		cmp	r3, #7
 2837 00c4 05D1     		bne	.L145
 881:modem.c       ****             gmt_offset = gmt_offset*(-900);
 2838              		.loc 1 881 0
 2839 00c6 BB6A     		ldr	r3, [r7, #40]
 2840 00c8 1C4A     		ldr	r2, .L146+36
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 71


 2841 00ca 02FB03F3 		mul	r3, r2, r3
 2842 00ce BB62     		str	r3, [r7, #40]
 2843 00d0 05E0     		b	.L144
 2844              	.L145:
 882:modem.c       ****         }else{
 883:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Could not parse modem time.");
 2845              		.loc 1 883 0
 2846 00d2 1B49     		ldr	r1, .L146+40
 2847 00d4 0220     		movs	r0, #2
 2848 00d6 FFF7FEFF 		bl	printNotif
 884:modem.c       ****             return 0;  // Return 0 if cannot get time 
 2849              		.loc 1 884 0
 2850 00da 0023     		movs	r3, #0
 2851 00dc 18E0     		b	.L141
 2852              	.L144:
 885:modem.c       ****         }
 886:modem.c       ****         
 887:modem.c       ****         // Sets each variable to the correct time 
 888:modem.c       ****         t.tm_sec = second;
 2853              		.loc 1 888 0
 2854 00de FB6A     		ldr	r3, [r7, #44]
 2855 00e0 7B60     		str	r3, [r7, #4]
 889:modem.c       ****         t.tm_min = minute;
 2856              		.loc 1 889 0
 2857 00e2 3B6B     		ldr	r3, [r7, #48]
 2858 00e4 BB60     		str	r3, [r7, #8]
 890:modem.c       ****         t.tm_hour = hour;
 2859              		.loc 1 890 0
 2860 00e6 7B6B     		ldr	r3, [r7, #52]
 2861 00e8 FB60     		str	r3, [r7, #12]
 891:modem.c       ****         t.tm_year = year + 100;    // Year since 1900
 2862              		.loc 1 891 0
 2863 00ea 3B6C     		ldr	r3, [r7, #64]
 2864 00ec 6433     		adds	r3, r3, #100
 2865 00ee BB61     		str	r3, [r7, #24]
 892:modem.c       ****         t.tm_mon = month-1;        // Month, where 0 = jan
 2866              		.loc 1 892 0
 2867 00f0 FB6B     		ldr	r3, [r7, #60]
 2868 00f2 013B     		subs	r3, r3, #1
 2869 00f4 7B61     		str	r3, [r7, #20]
 893:modem.c       ****         t.tm_mday = day;           // Day of the month
 2870              		.loc 1 893 0
 2871 00f6 BB6B     		ldr	r3, [r7, #56]
 2872 00f8 3B61     		str	r3, [r7, #16]
 894:modem.c       ****         t.tm_isdst = 0;            // Is Daylight Savings on? 1 = yes, 0 = no, -1 = unknown
 2873              		.loc 1 894 0
 2874 00fa 0023     		movs	r3, #0
 2875 00fc 7B62     		str	r3, [r7, #36]
 895:modem.c       ****     
 896:modem.c       ****         // Set variable epoch-time to be equal to the local time plus the GMT offset
 897:modem.c       ****         // the mktime function converts a broken-down local time (pointed to by timeptr) and return
 898:modem.c       ****         epoch_time = mktime(&t) + gmt_offset;
 2876              		.loc 1 898 0
 2877 00fe 3B1D     		adds	r3, r7, #4
 2878 0100 1846     		mov	r0, r3
 2879 0102 FFF7FEFF 		bl	mktime
 2880 0106 0246     		mov	r2, r0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 72


 2881 0108 BB6A     		ldr	r3, [r7, #40]
 2882 010a 1344     		add	r3, r3, r2
 2883 010c 7B66     		str	r3, [r7, #100]
 2884              	.L142:
 2885              	.LBE13:
 899:modem.c       ****     }
 900:modem.c       ****     
 901:modem.c       ****     return epoch_time;
 2886              		.loc 1 901 0
 2887 010e 7B6E     		ldr	r3, [r7, #100]
 2888              	.L141:
 902:modem.c       **** }
 2889              		.loc 1 902 0
 2890 0110 1846     		mov	r0, r3
 2891 0112 6837     		adds	r7, r7, #104
 2892              		.cfi_def_cfa_offset 8
 2893 0114 BD46     		mov	sp, r7
 2894              		.cfi_def_cfa_register 13
 2895              		@ sp needed
 2896 0116 80BD     		pop	{r7, pc}
 2897              	.L147:
 2898              		.align	2
 2899              	.L146:
 2900 0118 00000000 		.word	modem_state
 2901 011c A4070000 		.word	.LC78
 2902 0120 00000000 		.word	.LC0
 2903 0124 DC070000 		.word	.LC79
 2904 0128 E8070000 		.word	.LC80
 2905 012c EC070000 		.word	.LC81
 2906 0130 00000000 		.word	uart_received_string
 2907 0134 F0070000 		.word	.LC82
 2908 0138 08080000 		.word	.LC83
 2909 013c 7CFCFFFF 		.word	-900
 2910 0140 20080000 		.word	.LC84
 2911              		.cfi_endproc
 2912              	.LFE83:
 2913              		.size	modem_get_network_time, .-modem_get_network_time
 2914              		.section	.text.modem_get_state,"ax",%progbits
 2915              		.align	2
 2916              		.global	modem_get_state
 2917              		.thumb
 2918              		.thumb_func
 2919              		.type	modem_get_state, %function
 2920              	modem_get_state:
 2921              	.LFB84:
 903:modem.c       **** 
 904:modem.c       **** // Get the modem state
 905:modem.c       **** uint8 modem_get_state(){
 2922              		.loc 1 905 0
 2923              		.cfi_startproc
 2924              		@ args = 0, pretend = 0, frame = 0
 2925              		@ frame_needed = 1, uses_anonymous_args = 0
 2926              		@ link register save eliminated.
 2927 0000 80B4     		push	{r7}
 2928              		.cfi_def_cfa_offset 4
 2929              		.cfi_offset 7, -4
 2930 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 73


 2931              		.cfi_def_cfa_register 7
 906:modem.c       ****     return modem_state;
 2932              		.loc 1 906 0
 2933 0004 024B     		ldr	r3, .L150
 2934 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 907:modem.c       **** }
 2935              		.loc 1 907 0
 2936 0008 1846     		mov	r0, r3
 2937 000a BD46     		mov	sp, r7
 2938              		.cfi_def_cfa_register 13
 2939              		@ sp needed
 2940 000c 80BC     		pop	{r7}
 2941              		.cfi_restore 7
 2942              		.cfi_def_cfa_offset 0
 2943 000e 7047     		bx	lr
 2944              	.L151:
 2945              		.align	2
 2946              	.L150:
 2947 0010 00000000 		.word	modem_state
 2948              		.cfi_endproc
 2949              	.LFE84:
 2950              		.size	modem_get_state, .-modem_get_state
 2951              		.section	.text.modem_sleep,"ax",%progbits
 2952              		.align	2
 2953              		.global	modem_sleep
 2954              		.thumb
 2955              		.thumb_func
 2956              		.type	modem_sleep, %function
 2957              	modem_sleep:
 2958              	.LFB85:
 908:modem.c       **** 
 909:modem.c       **** // Set modem to sleep
 910:modem.c       **** void modem_sleep(){
 2959              		.loc 1 910 0
 2960              		.cfi_startproc
 2961              		@ args = 0, pretend = 0, frame = 0
 2962              		@ frame_needed = 1, uses_anonymous_args = 0
 2963 0000 80B5     		push	{r7, lr}
 2964              		.cfi_def_cfa_offset 8
 2965              		.cfi_offset 7, -8
 2966              		.cfi_offset 14, -4
 2967 0002 00AF     		add	r7, sp, #0
 2968              		.cfi_def_cfa_register 7
 911:modem.c       ****     // If the modem_state is not "off" then put it to sleep
 912:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2969              		.loc 1 912 0
 2970 0004 FFF7FEFF 		bl	modem_get_state
 2971 0008 0346     		mov	r3, r0
 2972 000a 002B     		cmp	r3, #0
 2973 000c 03D0     		beq	.L154
 913:modem.c       **** 
 914:modem.c       ****         Telit_ControlReg_Sleep(); // Prepares the modem for entering the low power mode.
 2974              		.loc 1 914 0
 2975 000e FFF7FEFF 		bl	Telit_ControlReg_Sleep
 915:modem.c       ****         UART_Telit_Sleep(); // Saves the current component state, calls the UART_Telit_Stop() funct
 2976              		.loc 1 915 0
 2977 0012 FFF7FEFF 		bl	UART_Telit_Sleep
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 74


 2978              	.L154:
 916:modem.c       ****         
 917:modem.c       ****         // Set interrupt on RX pin to wakeup chip from sleep if UART comm starts
 918:modem.c       ****        // Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_FALLING);
 919:modem.c       ****      }
 920:modem.c       **** }
 2979              		.loc 1 920 0
 2980 0016 00BF     		nop
 2981 0018 80BD     		pop	{r7, pc}
 2982              		.cfi_endproc
 2983              	.LFE85:
 2984              		.size	modem_sleep, .-modem_sleep
 2985 001a 00BF     		.section	.text.modem_wakeup,"ax",%progbits
 2986              		.align	2
 2987              		.global	modem_wakeup
 2988              		.thumb
 2989              		.thumb_func
 2990              		.type	modem_wakeup, %function
 2991              	modem_wakeup:
 2992              	.LFB86:
 921:modem.c       **** 
 922:modem.c       **** // Wakeup the modem
 923:modem.c       **** void modem_wakeup(){
 2993              		.loc 1 923 0
 2994              		.cfi_startproc
 2995              		@ args = 0, pretend = 0, frame = 0
 2996              		@ frame_needed = 1, uses_anonymous_args = 0
 2997 0000 80B5     		push	{r7, lr}
 2998              		.cfi_def_cfa_offset 8
 2999              		.cfi_offset 7, -8
 3000              		.cfi_offset 14, -4
 3001 0002 00AF     		add	r7, sp, #0
 3002              		.cfi_def_cfa_register 7
 924:modem.c       ****     // If modem state is not off then wake it up
 925:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 3003              		.loc 1 925 0
 3004 0004 FFF7FEFF 		bl	modem_get_state
 3005 0008 0346     		mov	r3, r0
 3006 000a 002B     		cmp	r3, #0
 3007 000c 0BD0     		beq	.L157
 926:modem.c       ****         Telit_ControlReg_Wakeup(); // Restores the modem after waking up from the low power mode.
 3008              		.loc 1 926 0
 3009 000e FFF7FEFF 		bl	Telit_ControlReg_Wakeup
 927:modem.c       ****         // Calls the UART_Telit_RestoreConfig() function to restore the configuration.
 928:modem.c       ****         // If the modem was enabled before the UART_Telit_Sleep() function was called, the UART_Tel
 929:modem.c       ****         UART_Telit_Wakeup();
 3010              		.loc 1 929 0
 3011 0012 FFF7FEFF 		bl	UART_Telit_Wakeup
 930:modem.c       ****         // Remove the need for this pin itterupt
 931:modem.c       ****         //Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 932:modem.c       ****         
 933:modem.c       ****         // If woken up from pin, go ahead and delay for 100ms to allow modem UART to deliver the me
 934:modem.c       ****         if(modem_get_state() == MODEM_STATE_WAITING_FOR_IP){
 3012              		.loc 1 934 0
 3013 0016 FFF7FEFF 		bl	modem_get_state
 3014 001a 0346     		mov	r3, r0
 3015 001c 032B     		cmp	r3, #3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 75


 3016 001e 02D1     		bne	.L157
 935:modem.c       ****             CyDelay(100u);
 3017              		.loc 1 935 0
 3018 0020 6420     		movs	r0, #100
 3019 0022 FFF7FEFF 		bl	CyDelay
 3020              	.L157:
 936:modem.c       ****         }
 937:modem.c       ****      }
 938:modem.c       **** }
 3021              		.loc 1 938 0
 3022 0026 00BF     		nop
 3023 0028 80BD     		pop	{r7, pc}
 3024              		.cfi_endproc
 3025              	.LFE86:
 3026              		.size	modem_wakeup, .-modem_wakeup
 3027 002a 00BF     		.section	.rodata
 3028              		.align	2
 3029              	.LC85:
 3030 083c 41542347 		.ascii	"AT#GPIO=5,1,1,0\015\000"
 3030      50494F3D 
 3030      352C312C 
 3030      312C300D 
 3030      00
 3031 084d 000000   		.align	2
 3032              	.LC86:
 3033 0850 41542453 		.ascii	"AT$SUPLSEC=1\015\000"
 3033      55504C53 
 3033      45433D31 
 3033      0D00
 3034 085e 0000     		.align	2
 3035              	.LC87:
 3036 0860 41542453 		.ascii	"AT$SUPLV=2\015\000"
 3036      55504C56 
 3036      3D320D00 
 3037              		.align	2
 3038              	.LC88:
 3039 086c 41542441 		.ascii	"AT$AGPSEN=1\015\000"
 3039      47505345 
 3039      4E3D310D 
 3039      00
 3040 0879 000000   		.align	2
 3041              	.LC89:
 3042 087c 41542453 		.ascii	"AT$SLP=1,\"supl.google.com:7275\"\015\000"
 3042      4C503D31 
 3042      2C227375 
 3042      706C2E67 
 3042      6F6F676C 
 3043 089d 000000   		.align	2
 3044              	.LC90:
 3045 08a0 41542353 		.ascii	"AT#SGACT=1,0\015\012\000"
 3045      47414354 
 3045      3D312C30 
 3045      0D0A00
 3046 08af 00       		.align	2
 3047              	.LC91:
 3048 08b0 4154244C 		.ascii	"AT$LCSLK=1,1\015\000"
 3048      43534C4B 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 76


 3048      3D312C31 
 3048      0D00
 3049 08be 0000     		.align	2
 3050              	.LC92:
 3051 08c0 41542447 		.ascii	"AT$GPSSLSR=1,1,,,,,2\015\000"
 3051      5053534C 
 3051      53523D31 
 3051      2C312C2C 
 3051      2C2C2C32 
 3052 08d6 0000     		.align	2
 3053              	.LC93:
 3054 08d8 4E00     		.ascii	"N\000"
 3055 08da 0000     		.align	2
 3056              	.LC94:
 3057 08dc 41542447 		.ascii	"AT$GPSACP\015\000"
 3057      50534143 
 3057      500D00
 3058 08e7 00       		.align	2
 3059              	.LC95:
 3060 08e8 24475053 		.ascii	"$GPSACP: \000"
 3060      4143503A 
 3060      2000
 3061 08f2 0000     		.align	2
 3062              	.LC96:
 3063 08f4 24475053 		.ascii	"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s\000"
 3063      4143503A 
 3063      20252A66 
 3063      2C25664E 
 3063      2C256657 
 3064              		.global	__aeabi_fdiv
 3065              		.global	__aeabi_f2d
 3066              		.global	__aeabi_ddiv
 3067              		.global	__aeabi_dadd
 3068              		.global	__aeabi_d2f
 3069              		.align	2
 3070              	.LC97:
 3071 0914 41542347 		.ascii	"AT#GPIO=5,0,1,0\015\000"
 3071      50494F3D 
 3071      352C302C 
 3071      312C300D 
 3071      00
 3072 0925 000000   		.align	2
 3073              	.LC98:
 3074 0928 41542447 		.ascii	"AT$GPSR=0\015\000"
 3074      5053523D 
 3074      300D00
 3075 0933 00       		.align	2
 3076              	.LC99:
 3077 0934 54696D65 		.ascii	"Time to lock GPS: %d\000"
 3077      20746F20 
 3077      6C6F636B 
 3077      20475053 
 3077      3A202564 
 3078              		.section	.text.modem_get_gps_coordinates,"ax",%progbits
 3079              		.align	2
 3080              		.global	modem_get_gps_coordinates
 3081              		.thumb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 77


 3082              		.thumb_func
 3083              		.type	modem_get_gps_coordinates, %function
 3084              	modem_get_gps_coordinates:
 3085              	.LFB87:
 939:modem.c       **** 
 940:modem.c       ****     
 941:modem.c       **** // Returns lat,lom,alt data from Assited GPS (AGPS) system
 942:modem.c       **** gps_t modem_get_gps_coordinates(){
 3086              		.loc 1 942 0
 3087              		.cfi_startproc
 3088              		@ args = 0, pretend = 0, frame = 56
 3089              		@ frame_needed = 1, uses_anonymous_args = 0
 3090 0000 B0B5     		push	{r4, r5, r7, lr}
 3091              		.cfi_def_cfa_offset 16
 3092              		.cfi_offset 4, -16
 3093              		.cfi_offset 5, -12
 3094              		.cfi_offset 7, -8
 3095              		.cfi_offset 14, -4
 3096 0002 90B0     		sub	sp, sp, #64
 3097              		.cfi_def_cfa_offset 80
 3098 0004 02AF     		add	r7, sp, #8
 3099              		.cfi_def_cfa 7, 72
 3100 0006 7860     		str	r0, [r7, #4]
 943:modem.c       ****     gps_t gps;
 944:modem.c       ****     gps.altitude = 0;
 3101              		.loc 1 944 0
 3102 0008 4FF00003 		mov	r3, #0
 3103 000c FB61     		str	r3, [r7, #28]	@ float
 945:modem.c       ****     gps.longitude = 0;
 3104              		.loc 1 945 0
 3105 000e 4FF00003 		mov	r3, #0
 3106 0012 BB61     		str	r3, [r7, #24]	@ float
 946:modem.c       ****     gps.latitude = 0;
 3107              		.loc 1 946 0
 3108 0014 4FF00003 		mov	r3, #0
 3109 0018 7B61     		str	r3, [r7, #20]	@ float
 947:modem.c       ****     gps.time_to_lock =0;
 3110              		.loc 1 947 0
 3111 001a 0023     		movs	r3, #0
 3112 001c 3B84     		strh	r3, [r7, #32]	@ movhi
 948:modem.c       ****     gps.valid = 0;
 3113              		.loc 1 948 0
 3114 001e 0023     		movs	r3, #0
 3115 0020 87F82230 		strb	r3, [r7, #34]
 949:modem.c       ****     
 950:modem.c       ****     //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 951:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 3116              		.loc 1 951 0
 3117 0024 7F4B     		ldr	r3, .L168
 3118 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3119 0028 042B     		cmp	r3, #4
 3120 002a 07D0     		beq	.L159
 952:modem.c       ****         return gps;//where valid = 0
 3121              		.loc 1 952 0
 3122 002c 7B68     		ldr	r3, [r7, #4]
 3123 002e 1C46     		mov	r4, r3
 3124 0030 07F11403 		add	r3, r7, #20
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 78


 3125 0034 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3126 0036 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3127 003a EFE0     		b	.L158
 3128              	.L159:
 953:modem.c       ****     }
 954:modem.c       ****     
 955:modem.c       ****     long lock_time = getTimeStamp();
 3129              		.loc 1 955 0
 3130 003c FFF7FEFF 		bl	getTimeStamp
 3131 0040 3863     		str	r0, [r7, #48]
 956:modem.c       ****     
 957:modem.c       ****     // Enable this for the LTER module
 958:modem.c       ****     // Enable GPS Low-Dropout Regulator
 959:modem.c       ****     at_write_command("AT#GPIO=5,1,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 3132              		.loc 1 959 0
 3133 0042 4FF4FA62 		mov	r2, #2000
 3134 0046 7849     		ldr	r1, .L168+4
 3135 0048 7848     		ldr	r0, .L168+8
 3136 004a FFF7FEFF 		bl	at_write_command
 960:modem.c       ****     
 961:modem.c       ****     // Configure SUPL connection params
 962:modem.c       ****     at_write_command("AT$SUPLSEC=1\r","OK",DEFAULT_AT_TIMEOUT);
 3137              		.loc 1 962 0
 3138 004e 4FF4FA62 		mov	r2, #2000
 3139 0052 7549     		ldr	r1, .L168+4
 3140 0054 7648     		ldr	r0, .L168+12
 3141 0056 FFF7FEFF 		bl	at_write_command
 963:modem.c       ****     
 964:modem.c       ****     // Use SUPL2.0
 965:modem.c       ****     at_write_command("AT$SUPLV=2\r","OK",DEFAULT_AT_TIMEOUT);
 3142              		.loc 1 965 0
 3143 005a 4FF4FA62 		mov	r2, #2000
 3144 005e 7249     		ldr	r1, .L168+4
 3145 0060 7448     		ldr	r0, .L168+16
 3146 0062 FFF7FEFF 		bl	at_write_command
 966:modem.c       ****     
 967:modem.c       ****     // Enable AGPS service
 968:modem.c       ****     at_write_command("AT$AGPSEN=1\r","OK",DEFAULT_AT_TIMEOUT);
 3147              		.loc 1 968 0
 3148 0066 4FF4FA62 		mov	r2, #2000
 3149 006a 6F49     		ldr	r1, .L168+4
 3150 006c 7248     		ldr	r0, .L168+20
 3151 006e FFF7FEFF 		bl	at_write_command
 969:modem.c       ****     
 970:modem.c       ****     // Chose SUPL server, use google public service
 971:modem.c       ****     at_write_command("AT$SLP=1,\"supl.google.com:7275\"\r","OK",DEFAULT_AT_TIMEOUT);
 3152              		.loc 1 971 0
 3153 0072 4FF4FA62 		mov	r2, #2000
 3154 0076 6C49     		ldr	r1, .L168+4
 3155 0078 7048     		ldr	r0, .L168+24
 3156 007a FFF7FEFF 		bl	at_write_command
 972:modem.c       ****     
 973:modem.c       ****     //pdp context has to be locked to carrier for this to work
 974:modem.c       ****     
 975:modem.c       ****     // Unlock context since it needs to be used by modem
 976:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 3157              		.loc 1 976 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 79


 3158 007e 4FF4FA62 		mov	r2, #2000
 3159 0082 6949     		ldr	r1, .L168+4
 3160 0084 6E48     		ldr	r0, .L168+28
 3161 0086 FFF7FEFF 		bl	at_write_command
 977:modem.c       ****     
 978:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",DEFAULT_AT_TIMEOUT);//ATT
 3162              		.loc 1 978 0
 3163 008a 4FF4FA62 		mov	r2, #2000
 3164 008e 6649     		ldr	r1, .L168+4
 3165 0090 6C48     		ldr	r0, .L168+32
 3166 0092 FFF7FEFF 		bl	at_write_command
 979:modem.c       ****     //at_write_command("AT$LCSLK=1,3\r","OK",DEFAULT_AT_TIMEOUT);//Verizon
 980:modem.c       ****     
 981:modem.c       ****     // Relock the context
 982:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 3167              		.loc 1 982 0
 3168 0096 42F21072 		movw	r2, #10000
 3169 009a 6349     		ldr	r1, .L168+4
 3170 009c 6A48     		ldr	r0, .L168+36
 3171 009e FFF7FEFF 		bl	at_write_command
 983:modem.c       ****     
 984:modem.c       ****     //start AGPS service
 985:modem.c       ****     at_write_command("AT$GPSSLSR=1,1,,,,,2\r","OK",DEFAULT_AT_TIMEOUT); 
 3172              		.loc 1 985 0
 3173 00a2 4FF4FA62 		mov	r2, #2000
 3174 00a6 6049     		ldr	r1, .L168+4
 3175 00a8 6848     		ldr	r0, .L168+40
 3176 00aa FFF7FEFF 		bl	at_write_command
 986:modem.c       ****     
 987:modem.c       ****     
 988:modem.c       ****     // Start the AGPS service
 989:modem.c       ****     // Will keep receiving a buynch of commas without numbers, until GPS locks
 990:modem.c       ****     // Good lock will return a string with "N" and "W" coordinates
 991:modem.c       ****     
 992:modem.c       ****     
 993:modem.c       ****  
 994:modem.c       ****     uint8 gps_status = 0;
 3177              		.loc 1 994 0
 3178 00ae 0023     		movs	r3, #0
 3179 00b0 87F82F30 		strb	r3, [r7, #47]
 3180              	.LBB14:
 995:modem.c       ****     for(uint16 i=0;i<200;i++){
 3181              		.loc 1 995 0
 3182 00b4 0023     		movs	r3, #0
 3183 00b6 FB86     		strh	r3, [r7, #54]	@ movhi
 3184 00b8 13E0     		b	.L161
 3185              	.L164:
 996:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 3186              		.loc 1 996 0
 3187 00ba 4FF4FA62 		mov	r2, #2000
 3188 00be 6449     		ldr	r1, .L168+44
 3189 00c0 6448     		ldr	r0, .L168+48
 3190 00c2 FFF7FEFF 		bl	at_write_command
 3191 00c6 0346     		mov	r3, r0
 3192 00c8 87F82F30 		strb	r3, [r7, #47]
 997:modem.c       ****         if(gps_status){
 3193              		.loc 1 997 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 80


 3194 00cc 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3195 00d0 002B     		cmp	r3, #0
 3196 00d2 0AD1     		bne	.L167
 998:modem.c       ****             break;   
 999:modem.c       ****         }
1000:modem.c       ****         CyDelay(1000u);// Wait for a second -- BLOCKING. Could be more elegant to incorporate this 
 3197              		.loc 1 1000 0 discriminator 2
 3198 00d4 4FF47A70 		mov	r0, #1000
 3199 00d8 FFF7FEFF 		bl	CyDelay
 995:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 3200              		.loc 1 995 0 discriminator 2
 3201 00dc FB8E     		ldrh	r3, [r7, #54]
 3202 00de 0133     		adds	r3, r3, #1
 3203 00e0 FB86     		strh	r3, [r7, #54]	@ movhi
 3204              	.L161:
 995:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 3205              		.loc 1 995 0 is_stmt 0 discriminator 1
 3206 00e2 FB8E     		ldrh	r3, [r7, #54]
 3207 00e4 C72B     		cmp	r3, #199
 3208 00e6 E8D9     		bls	.L164
 3209 00e8 00E0     		b	.L163
 3210              	.L167:
 998:modem.c       ****             break;   
 3211              		.loc 1 998 0 is_stmt 1
 3212 00ea 00BF     		nop
 3213              	.L163:
 3214              	.LBE14:
1001:modem.c       ****     }
1002:modem.c       ****     
1003:modem.c       ****     //parse data here
1004:modem.c       ****     
1005:modem.c       ****     //example $GPSACP: 210926.000,4217.8003N,08341.3158W,2.3,258.2,3,17.8,4.8,2.6,220520,05,00
1006:modem.c       ****     float lat;
1007:modem.c       ****     float lon;
1008:modem.c       ****     float alt;
1009:modem.c       ****     
1010:modem.c       ****     // Look for $GPSACP:  in uart_received_string and save to sl
1011:modem.c       ****     // char *strstr(const char *haystack, const char *needle) function finds the first occurrence o
1012:modem.c       ****     char *s1 = strstr(uart_received_string,"$GPSACP: ");
 3215              		.loc 1 1012 0
 3216 00ec 5A49     		ldr	r1, .L168+52
 3217 00ee 5B48     		ldr	r0, .L168+56
 3218 00f0 FFF7FEFF 		bl	strstr
 3219 00f4 B862     		str	r0, [r7, #40]
1013:modem.c       ****     // Look in sl for lat, long, alt and save in match 
1014:modem.c       ****     // int sscanf(const char *str, const char *format, ...) reads formatted input from a string.
1015:modem.c       ****     int match = sscanf(s1,"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s",&lat,&lon,&alt);
 3220              		.loc 1 1015 0
 3221 00f6 07F10C01 		add	r1, r7, #12
 3222 00fa 07F11002 		add	r2, r7, #16
 3223 00fe 07F10803 		add	r3, r7, #8
 3224 0102 0093     		str	r3, [sp]
 3225 0104 0B46     		mov	r3, r1
 3226 0106 5649     		ldr	r1, .L168+60
 3227 0108 B86A     		ldr	r0, [r7, #40]
 3228 010a FFF7FEFF 		bl	sscanf
 3229 010e 7862     		str	r0, [r7, #36]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 81


1016:modem.c       ****     if(match >= 3){
 3230              		.loc 1 1016 0
 3231 0110 7B6A     		ldr	r3, [r7, #36]
 3232 0112 022B     		cmp	r3, #2
 3233 0114 60DD     		ble	.L165
1017:modem.c       ****         // Calculate lat and lon
1018:modem.c       ****         // floorf(x) calculates the largest integer that is less than or equal to x. 
1019:modem.c       ****         // fmod(double x, double y) returns the remainder of x divided by y.
1020:modem.c       ****         lat = floorf(lat/100) + fmod(lat,100)/60;
 3234              		.loc 1 1020 0
 3235 0116 3B69     		ldr	r3, [r7, #16]	@ float
 3236 0118 5249     		ldr	r1, .L168+64
 3237 011a 1846     		mov	r0, r3
 3238 011c FFF7FEFF 		bl	__aeabi_fdiv
 3239 0120 0346     		mov	r3, r0
 3240 0122 1846     		mov	r0, r3
 3241 0124 FFF7FEFF 		bl	floorf
 3242 0128 0346     		mov	r3, r0
 3243 012a 1846     		mov	r0, r3
 3244 012c FFF7FEFF 		bl	__aeabi_f2d
 3245 0130 0446     		mov	r4, r0
 3246 0132 0D46     		mov	r5, r1
 3247 0134 3B69     		ldr	r3, [r7, #16]	@ float
 3248 0136 1846     		mov	r0, r3
 3249 0138 FFF7FEFF 		bl	__aeabi_f2d
 3250 013c 4FF00002 		mov	r2, #0
 3251 0140 494B     		ldr	r3, .L168+68
 3252 0142 FFF7FEFF 		bl	fmod
 3253 0146 4FF00002 		mov	r2, #0
 3254 014a 484B     		ldr	r3, .L168+72
 3255 014c FFF7FEFF 		bl	__aeabi_ddiv
 3256 0150 0246     		mov	r2, r0
 3257 0152 0B46     		mov	r3, r1
 3258 0154 2046     		mov	r0, r4
 3259 0156 2946     		mov	r1, r5
 3260 0158 FFF7FEFF 		bl	__aeabi_dadd
 3261 015c 0346     		mov	r3, r0
 3262 015e 0C46     		mov	r4, r1
 3263 0160 1846     		mov	r0, r3
 3264 0162 2146     		mov	r1, r4
 3265 0164 FFF7FEFF 		bl	__aeabi_d2f
 3266 0168 0346     		mov	r3, r0
 3267 016a 3B61     		str	r3, [r7, #16]	@ float
1021:modem.c       ****         lon = -(floorf(lon/100) + fmod(lon,100)/60);
 3268              		.loc 1 1021 0
 3269 016c FB68     		ldr	r3, [r7, #12]	@ float
 3270 016e 3D49     		ldr	r1, .L168+64
 3271 0170 1846     		mov	r0, r3
 3272 0172 FFF7FEFF 		bl	__aeabi_fdiv
 3273 0176 0346     		mov	r3, r0
 3274 0178 1846     		mov	r0, r3
 3275 017a FFF7FEFF 		bl	floorf
 3276 017e 0346     		mov	r3, r0
 3277 0180 1846     		mov	r0, r3
 3278 0182 FFF7FEFF 		bl	__aeabi_f2d
 3279 0186 0446     		mov	r4, r0
 3280 0188 0D46     		mov	r5, r1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 82


 3281 018a FB68     		ldr	r3, [r7, #12]	@ float
 3282 018c 1846     		mov	r0, r3
 3283 018e FFF7FEFF 		bl	__aeabi_f2d
 3284 0192 4FF00002 		mov	r2, #0
 3285 0196 344B     		ldr	r3, .L168+68
 3286 0198 FFF7FEFF 		bl	fmod
 3287 019c 4FF00002 		mov	r2, #0
 3288 01a0 324B     		ldr	r3, .L168+72
 3289 01a2 FFF7FEFF 		bl	__aeabi_ddiv
 3290 01a6 0246     		mov	r2, r0
 3291 01a8 0B46     		mov	r3, r1
 3292 01aa 2046     		mov	r0, r4
 3293 01ac 2946     		mov	r1, r5
 3294 01ae FFF7FEFF 		bl	__aeabi_dadd
 3295 01b2 0346     		mov	r3, r0
 3296 01b4 0C46     		mov	r4, r1
 3297 01b6 1846     		mov	r0, r3
 3298 01b8 2146     		mov	r1, r4
 3299 01ba FFF7FEFF 		bl	__aeabi_d2f
 3300 01be 0346     		mov	r3, r0
 3301 01c0 83F00043 		eor	r3, r3, #-2147483648
 3302 01c4 FB60     		str	r3, [r7, #12]	@ float
1022:modem.c       ****         gps.altitude = alt; // Save alt, lat, and lon to the variable gps.
 3303              		.loc 1 1022 0
 3304 01c6 BB68     		ldr	r3, [r7, #8]	@ float
 3305 01c8 FB61     		str	r3, [r7, #28]	@ float
1023:modem.c       ****         gps.latitude = lat;
 3306              		.loc 1 1023 0
 3307 01ca 3B69     		ldr	r3, [r7, #16]	@ float
 3308 01cc 7B61     		str	r3, [r7, #20]	@ float
1024:modem.c       ****         gps.longitude = lon;
 3309              		.loc 1 1024 0
 3310 01ce FB68     		ldr	r3, [r7, #12]	@ float
 3311 01d0 BB61     		str	r3, [r7, #24]	@ float
1025:modem.c       ****         gps.valid = 1;
 3312              		.loc 1 1025 0
 3313 01d2 0123     		movs	r3, #1
 3314 01d4 87F82230 		strb	r3, [r7, #34]
 3315              	.L165:
1026:modem.c       ****     }
1027:modem.c       ****     
1028:modem.c       ****     // Disable LDO, just in case
1029:modem.c       ****     at_write_command("AT#GPIO=5,0,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 3316              		.loc 1 1029 0
 3317 01d8 4FF4FA62 		mov	r2, #2000
 3318 01dc 1249     		ldr	r1, .L168+4
 3319 01de 2448     		ldr	r0, .L168+76
 3320 01e0 FFF7FEFF 		bl	at_write_command
1030:modem.c       ****     
1031:modem.c       ****     // Flush modem's GPS data, just in case
1032:modem.c       ****     at_write_command("AT$GPSR=0\r","OK",DEFAULT_AT_TIMEOUT);
 3321              		.loc 1 1032 0
 3322 01e4 4FF4FA62 		mov	r2, #2000
 3323 01e8 0F49     		ldr	r1, .L168+4
 3324 01ea 2248     		ldr	r0, .L168+80
 3325 01ec FFF7FEFF 		bl	at_write_command
1033:modem.c       ****     
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 83


1034:modem.c       ****     
1035:modem.c       ****     
1036:modem.c       ****     
1037:modem.c       ****     
1038:modem.c       ****     /* Relevant to 3g modem, can ignore
1039:modem.c       ****     
1040:modem.c       ****     //Setthe GPS Quality of Servicep arameters. Inorder,theyare<horiz_accuracy(inmeters)>,<vertical
1041:modem.c       ****     //AT$GPSQOS=50,50,100,0
1042:modem.c       ****     at_write_command("AT$GPSQOS=50,50,100,0\r","OK",DEFAULT_AT_TIMEOUT);
1043:modem.c       ****     
1044:modem.c       ****     //SettheSUPLLocationPlatform(SLP)addressoftheserverthatwillprovidetheA-GPS data:
1045:modem.c       ****     at_write_command("AT$LCSSLP=1,\"supl.google.com\"\r","OK",DEFAULT_AT_TIMEOUT);
1046:modem.c       ****     
1047:modem.c       ****     //unlock contedt, simnce its being used by modem
1048:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
1049:modem.c       ****     //Lock context 1 for LoCation Services (LCS) use only
1050:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",5000u);
1051:modem.c       ****     
1052:modem.c       ****     //unlock contedt, simnce its being used by modem
1053:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
1054:modem.c       ****     
1055:modem.c       ****     //EnableunsolicitedNMEAGPSdataintheformatof<NMEASENTENCE><CR>
1056:modem.c       ****     at_write_command("AT$GPSNMUN=2,1,0,0,0,0,0\r","OK",DEFAULT_AT_TIMEOUT);
1057:modem.c       ****     
1058:modem.c       ****     //StartGPSlocationservicerequest.Sendingthiscommandsets$GPSP=1
1059:modem.c       ****    uint8 gps_status = 0;
1060:modem.c       ****     for(uint16 i=0;i<200;i++){
1061:modem.c       ****         gps_status = at_write_command("AT$GPSSLSR=1,1,,,,,0,255\r","N",3000u);
1062:modem.c       ****         if(gps_status){
1063:modem.c       ****             break;   
1064:modem.c       ****         }
1065:modem.c       ****   }
1066:modem.c       ****     
1067:modem.c       ****     //$GPGGA,030307.691,4217.7923,N,08341.3240,W,1,05,2.25,225.0,M,,M,,0000*6E
1068:modem.c       ****     //$GPGGA,213852.000,4600.8755,N,09327.7008,W,1,05,3.00,292.0,M,,M,,0000*6E
1069:modem.c       ****     if(gps_status){
1070:modem.c       ****         float lat,lon,alt = 0;
1071:modem.c       ****         if(sscanf(uart_received_string,"%*s,%f,N,%f,W,%*s",&lat,&lon) > 0){
1072:modem.c       ****             gps.altitude = alt;
1073:modem.c       ****             gps.latitude = lat/60;
1074:modem.c       ****             gps.longitude = lon/60;
1075:modem.c       ****             gps.valid = 1;
1076:modem.c       ****         }
1077:modem.c       ****         
1078:modem.c       ****     }
1079:modem.c       ****     
1080:modem.c       ****     //turn off gps
1081:modem.c       ****     //AT$GPSP=0
1082:modem.c       ****     at_write_command("AT$GPSP=0\r","OK",DEFAULT_AT_TIMEOUT);
1083:modem.c       ****     
1084:modem.c       ****     */
1085:modem.c       **** 
1086:modem.c       ****     // Calculate time to lock into GPS location and save in variable lock_time
1087:modem.c       ****     lock_time = getTimeStamp() - lock_time;
 3326              		.loc 1 1087 0
 3327 01f0 FFF7FEFF 		bl	getTimeStamp
 3328 01f4 0246     		mov	r2, r0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 84


 3329 01f6 3B6B     		ldr	r3, [r7, #48]
 3330 01f8 D31A     		subs	r3, r2, r3
 3331 01fa 3B63     		str	r3, [r7, #48]
1088:modem.c       ****     gps.time_to_lock = lock_time;
 3332              		.loc 1 1088 0
 3333 01fc 3B6B     		ldr	r3, [r7, #48]
 3334 01fe 9BB2     		uxth	r3, r3
 3335 0200 3B84     		strh	r3, [r7, #32]	@ movhi
1089:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Time to lock GPS: %d", gps.time_to_lock);
 3336              		.loc 1 1089 0
 3337 0202 3B8C     		ldrh	r3, [r7, #32]
 3338 0204 1A46     		mov	r2, r3
 3339 0206 1C49     		ldr	r1, .L168+84
 3340 0208 0020     		movs	r0, #0
 3341 020a FFF7FEFF 		bl	printNotif
1090:modem.c       ****     
1091:modem.c       ****     return gps;
 3342              		.loc 1 1091 0
 3343 020e 7B68     		ldr	r3, [r7, #4]
 3344 0210 1C46     		mov	r4, r3
 3345 0212 07F11403 		add	r3, r7, #20
 3346 0216 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3347 0218 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3348              	.L158:
1092:modem.c       ****     
1093:modem.c       **** }
 3349              		.loc 1 1093 0
 3350 021c 7868     		ldr	r0, [r7, #4]
 3351 021e 3837     		adds	r7, r7, #56
 3352              		.cfi_def_cfa_offset 16
 3353 0220 BD46     		mov	sp, r7
 3354              		.cfi_def_cfa_register 13
 3355              		@ sp needed
 3356 0222 B0BD     		pop	{r4, r5, r7, pc}
 3357              	.L169:
 3358              		.align	2
 3359              	.L168:
 3360 0224 00000000 		.word	modem_state
 3361 0228 00000000 		.word	.LC0
 3362 022c 3C080000 		.word	.LC85
 3363 0230 50080000 		.word	.LC86
 3364 0234 60080000 		.word	.LC87
 3365 0238 6C080000 		.word	.LC88
 3366 023c 7C080000 		.word	.LC89
 3367 0240 A0080000 		.word	.LC90
 3368 0244 B0080000 		.word	.LC91
 3369 0248 D8020000 		.word	.LC27
 3370 024c C0080000 		.word	.LC92
 3371 0250 D8080000 		.word	.LC93
 3372 0254 DC080000 		.word	.LC94
 3373 0258 E8080000 		.word	.LC95
 3374 025c 00000000 		.word	uart_received_string
 3375 0260 F4080000 		.word	.LC96
 3376 0264 0000C842 		.word	1120403456
 3377 0268 00005940 		.word	1079574528
 3378 026c 00004E40 		.word	1078853632
 3379 0270 14090000 		.word	.LC97
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 85


 3380 0274 28090000 		.word	.LC98
 3381 0278 34090000 		.word	.LC99
 3382              		.cfi_endproc
 3383              	.LFE87:
 3384              		.size	modem_get_gps_coordinates, .-modem_get_gps_coordinates
 3385              		.text
 3386              	.Letext0:
 3387              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 3388              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 3389              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 3390              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 3391              		.file 6 "testing.h"
 3392              		.file 7 "data.h"
 3393              		.file 8 "modem.h"
 3394              		.file 9 "notoriOS.h"
 3395              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 3396              		.file 11 "App_LED.h"
 3397              		.file 12 "level_sensor.h"
 3398              		.file 13 "valve.h"
 3399              		.file 14 "autosampler.h"
 3400              		.section	.debug_info,"",%progbits
 3401              	.Ldebug_info0:
 3402 0000 2C0E0000 		.4byte	0xe2c
 3403 0004 0400     		.2byte	0x4
 3404 0006 00000000 		.4byte	.Ldebug_abbrev0
 3405 000a 04       		.byte	0x4
 3406 000b 01       		.uleb128 0x1
 3407 000c B2000000 		.4byte	.LASF197
 3408 0010 0C       		.byte	0xc
 3409 0011 84040000 		.4byte	.LASF198
 3410 0015 22060000 		.4byte	.LASF199
 3411 0019 20000000 		.4byte	.Ldebug_ranges0+0x20
 3412 001d 00000000 		.4byte	0
 3413 0021 00000000 		.4byte	.Ldebug_line0
 3414 0025 02       		.uleb128 0x2
 3415 0026 01       		.byte	0x1
 3416 0027 06       		.byte	0x6
 3417 0028 B5010000 		.4byte	.LASF0
 3418 002c 03       		.uleb128 0x3
 3419 002d 58000000 		.4byte	.LASF4
 3420 0031 02       		.byte	0x2
 3421 0032 1D       		.byte	0x1d
 3422 0033 37000000 		.4byte	0x37
 3423 0037 02       		.uleb128 0x2
 3424 0038 01       		.byte	0x1
 3425 0039 08       		.byte	0x8
 3426 003a EB060000 		.4byte	.LASF1
 3427 003e 02       		.uleb128 0x2
 3428 003f 02       		.byte	0x2
 3429 0040 05       		.byte	0x5
 3430 0041 BC040000 		.4byte	.LASF2
 3431 0045 02       		.uleb128 0x2
 3432 0046 02       		.byte	0x2
 3433 0047 07       		.byte	0x7
 3434 0048 0B030000 		.4byte	.LASF3
 3435 004c 03       		.uleb128 0x3
 3436 004d D1040000 		.4byte	.LASF5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 86


 3437 0051 02       		.byte	0x2
 3438 0052 3F       		.byte	0x3f
 3439 0053 57000000 		.4byte	0x57
 3440 0057 02       		.uleb128 0x2
 3441 0058 04       		.byte	0x4
 3442 0059 05       		.byte	0x5
 3443 005a 67020000 		.4byte	.LASF6
 3444 005e 03       		.uleb128 0x3
 3445 005f 4D080000 		.4byte	.LASF7
 3446 0063 02       		.byte	0x2
 3447 0064 41       		.byte	0x41
 3448 0065 69000000 		.4byte	0x69
 3449 0069 02       		.uleb128 0x2
 3450 006a 04       		.byte	0x4
 3451 006b 07       		.byte	0x7
 3452 006c E7030000 		.4byte	.LASF8
 3453 0070 02       		.uleb128 0x2
 3454 0071 08       		.byte	0x8
 3455 0072 05       		.byte	0x5
 3456 0073 A7010000 		.4byte	.LASF9
 3457 0077 02       		.uleb128 0x2
 3458 0078 08       		.byte	0x8
 3459 0079 07       		.byte	0x7
 3460 007a 4D010000 		.4byte	.LASF10
 3461 007e 04       		.uleb128 0x4
 3462 007f 04       		.byte	0x4
 3463 0080 05       		.byte	0x5
 3464 0081 696E7400 		.ascii	"int\000"
 3465 0085 02       		.uleb128 0x2
 3466 0086 04       		.byte	0x4
 3467 0087 07       		.byte	0x7
 3468 0088 09080000 		.4byte	.LASF11
 3469 008c 03       		.uleb128 0x3
 3470 008d 070A0000 		.4byte	.LASF12
 3471 0091 03       		.byte	0x3
 3472 0092 18       		.byte	0x18
 3473 0093 2C000000 		.4byte	0x2c
 3474 0097 03       		.uleb128 0x3
 3475 0098 E3060000 		.4byte	.LASF13
 3476 009c 03       		.byte	0x3
 3477 009d 2C       		.byte	0x2c
 3478 009e 4C000000 		.4byte	0x4c
 3479 00a2 03       		.uleb128 0x3
 3480 00a3 1C090000 		.4byte	.LASF14
 3481 00a7 03       		.byte	0x3
 3482 00a8 30       		.byte	0x30
 3483 00a9 5E000000 		.4byte	0x5e
 3484 00ad 05       		.uleb128 0x5
 3485 00ae A5020000 		.4byte	.LASF15
 3486 00b2 04       		.byte	0x4
 3487 00b3 9201     		.2byte	0x192
 3488 00b5 37000000 		.4byte	0x37
 3489 00b9 05       		.uleb128 0x5
 3490 00ba 17000000 		.4byte	.LASF16
 3491 00be 04       		.byte	0x4
 3492 00bf 9301     		.2byte	0x193
 3493 00c1 45000000 		.4byte	0x45
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 87


 3494 00c5 05       		.uleb128 0x5
 3495 00c6 1E030000 		.4byte	.LASF17
 3496 00ca 04       		.byte	0x4
 3497 00cb 9401     		.2byte	0x194
 3498 00cd 69000000 		.4byte	0x69
 3499 00d1 05       		.uleb128 0x5
 3500 00d2 D4050000 		.4byte	.LASF18
 3501 00d6 04       		.byte	0x4
 3502 00d7 9601     		.2byte	0x196
 3503 00d9 3E000000 		.4byte	0x3e
 3504 00dd 05       		.uleb128 0x5
 3505 00de CA020000 		.4byte	.LASF19
 3506 00e2 04       		.byte	0x4
 3507 00e3 9701     		.2byte	0x197
 3508 00e5 57000000 		.4byte	0x57
 3509 00e9 05       		.uleb128 0x5
 3510 00ea 79050000 		.4byte	.LASF20
 3511 00ee 04       		.byte	0x4
 3512 00ef 9801     		.2byte	0x198
 3513 00f1 F5000000 		.4byte	0xf5
 3514 00f5 02       		.uleb128 0x2
 3515 00f6 04       		.byte	0x4
 3516 00f7 04       		.byte	0x4
 3517 00f8 82060000 		.4byte	.LASF21
 3518 00fc 02       		.uleb128 0x2
 3519 00fd 08       		.byte	0x8
 3520 00fe 04       		.byte	0x4
 3521 00ff AC0A0000 		.4byte	.LASF22
 3522 0103 02       		.uleb128 0x2
 3523 0104 01       		.byte	0x1
 3524 0105 08       		.byte	0x8
 3525 0106 F0070000 		.4byte	.LASF23
 3526 010a 02       		.uleb128 0x2
 3527 010b 08       		.byte	0x8
 3528 010c 04       		.byte	0x4
 3529 010d E4070000 		.4byte	.LASF24
 3530 0111 02       		.uleb128 0x2
 3531 0112 04       		.byte	0x4
 3532 0113 07       		.byte	0x7
 3533 0114 81050000 		.4byte	.LASF25
 3534 0118 06       		.uleb128 0x6
 3535 0119 04       		.byte	0x4
 3536 011a 03010000 		.4byte	0x103
 3537 011e 06       		.uleb128 0x6
 3538 011f 04       		.byte	0x4
 3539 0120 24010000 		.4byte	0x124
 3540 0124 07       		.uleb128 0x7
 3541 0125 03010000 		.4byte	0x103
 3542 0129 08       		.uleb128 0x8
 3543 012a 03010000 		.4byte	0x103
 3544 012e 39010000 		.4byte	0x139
 3545 0132 09       		.uleb128 0x9
 3546 0133 11010000 		.4byte	0x111
 3547 0137 17       		.byte	0x17
 3548 0138 00       		.byte	0
 3549 0139 0A       		.uleb128 0xa
 3550 013a 746D00   		.ascii	"tm\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 88


 3551 013d 24       		.byte	0x24
 3552 013e 05       		.byte	0x5
 3553 013f 21       		.byte	0x21
 3554 0140 B1010000 		.4byte	0x1b1
 3555 0144 0B       		.uleb128 0xb
 3556 0145 25090000 		.4byte	.LASF26
 3557 0149 05       		.byte	0x5
 3558 014a 23       		.byte	0x23
 3559 014b 7E000000 		.4byte	0x7e
 3560 014f 00       		.byte	0
 3561 0150 0B       		.uleb128 0xb
 3562 0151 72050000 		.4byte	.LASF27
 3563 0155 05       		.byte	0x5
 3564 0156 24       		.byte	0x24
 3565 0157 7E000000 		.4byte	0x7e
 3566 015b 04       		.byte	0x4
 3567 015c 0B       		.uleb128 0xb
 3568 015d 24000000 		.4byte	.LASF28
 3569 0161 05       		.byte	0x5
 3570 0162 25       		.byte	0x25
 3571 0163 7E000000 		.4byte	0x7e
 3572 0167 08       		.byte	0x8
 3573 0168 0B       		.uleb128 0xb
 3574 0169 E5080000 		.4byte	.LASF29
 3575 016d 05       		.byte	0x5
 3576 016e 26       		.byte	0x26
 3577 016f 7E000000 		.4byte	0x7e
 3578 0173 0C       		.byte	0xc
 3579 0174 0B       		.uleb128 0xb
 3580 0175 54030000 		.4byte	.LASF30
 3581 0179 05       		.byte	0x5
 3582 017a 27       		.byte	0x27
 3583 017b 7E000000 		.4byte	0x7e
 3584 017f 10       		.byte	0x10
 3585 0180 0B       		.uleb128 0xb
 3586 0181 AF030000 		.4byte	.LASF31
 3587 0185 05       		.byte	0x5
 3588 0186 28       		.byte	0x28
 3589 0187 7E000000 		.4byte	0x7e
 3590 018b 14       		.byte	0x14
 3591 018c 0B       		.uleb128 0xb
 3592 018d A0070000 		.4byte	.LASF32
 3593 0191 05       		.byte	0x5
 3594 0192 29       		.byte	0x29
 3595 0193 7E000000 		.4byte	0x7e
 3596 0197 18       		.byte	0x18
 3597 0198 0B       		.uleb128 0xb
 3598 0199 2C000000 		.4byte	.LASF33
 3599 019d 05       		.byte	0x5
 3600 019e 2A       		.byte	0x2a
 3601 019f 7E000000 		.4byte	0x7e
 3602 01a3 1C       		.byte	0x1c
 3603 01a4 0B       		.uleb128 0xb
 3604 01a5 4B040000 		.4byte	.LASF34
 3605 01a9 05       		.byte	0x5
 3606 01aa 2B       		.byte	0x2b
 3607 01ab 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 89


 3608 01af 20       		.byte	0x20
 3609 01b0 00       		.byte	0
 3610 01b1 0C       		.uleb128 0xc
 3611 01b2 8101     		.2byte	0x181
 3612 01b4 06       		.byte	0x6
 3613 01b5 0A       		.byte	0xa
 3614 01b6 DF010000 		.4byte	0x1df
 3615 01ba 0B       		.uleb128 0xb
 3616 01bb CA050000 		.4byte	.LASF35
 3617 01bf 06       		.byte	0x6
 3618 01c0 0C       		.byte	0xc
 3619 01c1 DF010000 		.4byte	0x1df
 3620 01c5 00       		.byte	0
 3621 01c6 0B       		.uleb128 0xb
 3622 01c7 6B090000 		.4byte	.LASF36
 3623 01cb 06       		.byte	0x6
 3624 01cc 0D       		.byte	0xd
 3625 01cd AD000000 		.4byte	0xad
 3626 01d1 80       		.byte	0x80
 3627 01d2 0B       		.uleb128 0xb
 3628 01d3 63070000 		.4byte	.LASF37
 3629 01d7 06       		.byte	0x6
 3630 01d8 0F       		.byte	0xf
 3631 01d9 EF010000 		.4byte	0x1ef
 3632 01dd 81       		.byte	0x81
 3633 01de 00       		.byte	0
 3634 01df 08       		.uleb128 0x8
 3635 01e0 03010000 		.4byte	0x103
 3636 01e4 EF010000 		.4byte	0x1ef
 3637 01e8 09       		.uleb128 0x9
 3638 01e9 11010000 		.4byte	0x111
 3639 01ed 7F       		.byte	0x7f
 3640 01ee 00       		.byte	0
 3641 01ef 08       		.uleb128 0x8
 3642 01f0 03010000 		.4byte	0x103
 3643 01f4 FF010000 		.4byte	0x1ff
 3644 01f8 09       		.uleb128 0x9
 3645 01f9 11010000 		.4byte	0x111
 3646 01fd FF       		.byte	0xff
 3647 01fe 00       		.byte	0
 3648 01ff 03       		.uleb128 0x3
 3649 0200 49070000 		.4byte	.LASF38
 3650 0204 06       		.byte	0x6
 3651 0205 10       		.byte	0x10
 3652 0206 B1010000 		.4byte	0x1b1
 3653 020a 0D       		.uleb128 0xd
 3654 020b 2C       		.byte	0x2c
 3655 020c 07       		.byte	0x7
 3656 020d 14       		.byte	0x14
 3657 020e 37020000 		.4byte	0x237
 3658 0212 0E       		.uleb128 0xe
 3659 0213 6B657900 		.ascii	"key\000"
 3660 0217 07       		.byte	0x7
 3661 0218 15       		.byte	0x15
 3662 0219 37020000 		.4byte	0x237
 3663 021d 00       		.byte	0
 3664 021e 0B       		.uleb128 0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 90


 3665 021f 1E000000 		.4byte	.LASF39
 3666 0223 07       		.byte	0x7
 3667 0224 16       		.byte	0x16
 3668 0225 37020000 		.4byte	0x237
 3669 0229 14       		.byte	0x14
 3670 022a 0B       		.uleb128 0xb
 3671 022b 27040000 		.4byte	.LASF40
 3672 022f 07       		.byte	0x7
 3673 0230 17       		.byte	0x17
 3674 0231 DD000000 		.4byte	0xdd
 3675 0235 28       		.byte	0x28
 3676 0236 00       		.byte	0
 3677 0237 08       		.uleb128 0x8
 3678 0238 03010000 		.4byte	0x103
 3679 023c 47020000 		.4byte	0x247
 3680 0240 09       		.uleb128 0x9
 3681 0241 11010000 		.4byte	0x111
 3682 0245 13       		.byte	0x13
 3683 0246 00       		.byte	0
 3684 0247 03       		.uleb128 0x3
 3685 0248 D1030000 		.4byte	.LASF41
 3686 024c 07       		.byte	0x7
 3687 024d 19       		.byte	0x19
 3688 024e 0A020000 		.4byte	0x20a
 3689 0252 0D       		.uleb128 0xd
 3690 0253 3C       		.byte	0x3c
 3691 0254 08       		.byte	0x8
 3692 0255 36       		.byte	0x36
 3693 0256 7F020000 		.4byte	0x27f
 3694 025a 0B       		.uleb128 0xb
 3695 025b DE080000 		.4byte	.LASF42
 3696 025f 08       		.byte	0x8
 3697 0260 37       		.byte	0x37
 3698 0261 37020000 		.4byte	0x237
 3699 0265 00       		.byte	0
 3700 0266 0B       		.uleb128 0xb
 3701 0267 26080000 		.4byte	.LASF43
 3702 026b 08       		.byte	0x8
 3703 026c 38       		.byte	0x38
 3704 026d 37020000 		.4byte	0x237
 3705 0271 14       		.byte	0x14
 3706 0272 0B       		.uleb128 0xb
 3707 0273 5E070000 		.4byte	.LASF44
 3708 0277 08       		.byte	0x8
 3709 0278 39       		.byte	0x39
 3710 0279 37020000 		.4byte	0x237
 3711 027d 28       		.byte	0x28
 3712 027e 00       		.byte	0
 3713 027f 03       		.uleb128 0x3
 3714 0280 3A080000 		.4byte	.LASF45
 3715 0284 08       		.byte	0x8
 3716 0285 3B       		.byte	0x3b
 3717 0286 52020000 		.4byte	0x252
 3718 028a 0D       		.uleb128 0xd
 3719 028b 20       		.byte	0x20
 3720 028c 08       		.byte	0x8
 3721 028d 3D       		.byte	0x3d
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 91


 3722 028e F3020000 		.4byte	0x2f3
 3723 0292 0B       		.uleb128 0xb
 3724 0293 70020000 		.4byte	.LASF46
 3725 0297 08       		.byte	0x8
 3726 0298 3E       		.byte	0x3e
 3727 0299 7E000000 		.4byte	0x7e
 3728 029d 00       		.byte	0
 3729 029e 0E       		.uleb128 0xe
 3730 029f 62657200 		.ascii	"ber\000"
 3731 02a3 08       		.byte	0x8
 3732 02a4 3F       		.byte	0x3f
 3733 02a5 7E000000 		.4byte	0x7e
 3734 02a9 04       		.byte	0x4
 3735 02aa 0B       		.uleb128 0xb
 3736 02ab 2A070000 		.4byte	.LASF47
 3737 02af 08       		.byte	0x8
 3738 02b0 40       		.byte	0x40
 3739 02b1 7E000000 		.4byte	0x7e
 3740 02b5 08       		.byte	0x8
 3741 02b6 0B       		.uleb128 0xb
 3742 02b7 C1010000 		.4byte	.LASF48
 3743 02bb 08       		.byte	0x8
 3744 02bc 41       		.byte	0x41
 3745 02bd 7E000000 		.4byte	0x7e
 3746 02c1 0C       		.byte	0xc
 3747 02c2 0B       		.uleb128 0xb
 3748 02c3 0F070000 		.4byte	.LASF49
 3749 02c7 08       		.byte	0x8
 3750 02c8 42       		.byte	0x42
 3751 02c9 7E000000 		.4byte	0x7e
 3752 02cd 10       		.byte	0x10
 3753 02ce 0B       		.uleb128 0xb
 3754 02cf 6A070000 		.4byte	.LASF50
 3755 02d3 08       		.byte	0x8
 3756 02d4 43       		.byte	0x43
 3757 02d5 7E000000 		.4byte	0x7e
 3758 02d9 14       		.byte	0x14
 3759 02da 0B       		.uleb128 0xb
 3760 02db D4010000 		.4byte	.LASF51
 3761 02df 08       		.byte	0x8
 3762 02e0 44       		.byte	0x44
 3763 02e1 7E000000 		.4byte	0x7e
 3764 02e5 18       		.byte	0x18
 3765 02e6 0B       		.uleb128 0xb
 3766 02e7 9F040000 		.4byte	.LASF52
 3767 02eb 08       		.byte	0x8
 3768 02ec 45       		.byte	0x45
 3769 02ed 7E000000 		.4byte	0x7e
 3770 02f1 1C       		.byte	0x1c
 3771 02f2 00       		.byte	0
 3772 02f3 03       		.uleb128 0x3
 3773 02f4 6F070000 		.4byte	.LASF53
 3774 02f8 08       		.byte	0x8
 3775 02f9 47       		.byte	0x47
 3776 02fa 8A020000 		.4byte	0x28a
 3777 02fe 0D       		.uleb128 0xd
 3778 02ff 10       		.byte	0x10
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 92


 3779 0300 08       		.byte	0x8
 3780 0301 49       		.byte	0x49
 3781 0302 43030000 		.4byte	0x343
 3782 0306 0B       		.uleb128 0xb
 3783 0307 C1050000 		.4byte	.LASF54
 3784 030b 08       		.byte	0x8
 3785 030c 4A       		.byte	0x4a
 3786 030d F5000000 		.4byte	0xf5
 3787 0311 00       		.byte	0
 3788 0312 0B       		.uleb128 0xb
 3789 0313 A8000000 		.4byte	.LASF55
 3790 0317 08       		.byte	0x8
 3791 0318 4B       		.byte	0x4b
 3792 0319 F5000000 		.4byte	0xf5
 3793 031d 04       		.byte	0x4
 3794 031e 0B       		.uleb128 0xb
 3795 031f 9C020000 		.4byte	.LASF56
 3796 0323 08       		.byte	0x8
 3797 0324 4C       		.byte	0x4c
 3798 0325 F5000000 		.4byte	0xf5
 3799 0329 08       		.byte	0x8
 3800 032a 0B       		.uleb128 0xb
 3801 032b 31040000 		.4byte	.LASF57
 3802 032f 08       		.byte	0x8
 3803 0330 4D       		.byte	0x4d
 3804 0331 B9000000 		.4byte	0xb9
 3805 0335 0C       		.byte	0xc
 3806 0336 0B       		.uleb128 0xb
 3807 0337 F9080000 		.4byte	.LASF58
 3808 033b 08       		.byte	0x8
 3809 033c 4E       		.byte	0x4e
 3810 033d AD000000 		.4byte	0xad
 3811 0341 0E       		.byte	0xe
 3812 0342 00       		.byte	0
 3813 0343 03       		.uleb128 0x3
 3814 0344 47080000 		.4byte	.LASF59
 3815 0348 08       		.byte	0x8
 3816 0349 50       		.byte	0x50
 3817 034a FE020000 		.4byte	0x2fe
 3818 034e 0D       		.uleb128 0xd
 3819 034f 0A       		.byte	0xa
 3820 0350 08       		.byte	0x8
 3821 0351 53       		.byte	0x53
 3822 0352 CF030000 		.4byte	0x3cf
 3823 0356 0B       		.uleb128 0xb
 3824 0357 D0020000 		.4byte	.LASF60
 3825 035b 08       		.byte	0x8
 3826 035c 55       		.byte	0x55
 3827 035d AD000000 		.4byte	0xad
 3828 0361 00       		.byte	0
 3829 0362 0B       		.uleb128 0xb
 3830 0363 B6060000 		.4byte	.LASF61
 3831 0367 08       		.byte	0x8
 3832 0368 57       		.byte	0x57
 3833 0369 CF030000 		.4byte	0x3cf
 3834 036d 01       		.byte	0x1
 3835 036e 0B       		.uleb128 0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 93


 3836 036f 6A080000 		.4byte	.LASF62
 3837 0373 08       		.byte	0x8
 3838 0374 59       		.byte	0x59
 3839 0375 AD000000 		.4byte	0xad
 3840 0379 02       		.byte	0x2
 3841 037a 0B       		.uleb128 0xb
 3842 037b 14070000 		.4byte	.LASF63
 3843 037f 08       		.byte	0x8
 3844 0380 5B       		.byte	0x5b
 3845 0381 AD000000 		.4byte	0xad
 3846 0385 03       		.byte	0x3
 3847 0386 0B       		.uleb128 0xb
 3848 0387 6A030000 		.4byte	.LASF64
 3849 038b 08       		.byte	0x8
 3850 038c 5E       		.byte	0x5e
 3851 038d AD000000 		.4byte	0xad
 3852 0391 04       		.byte	0x4
 3853 0392 0B       		.uleb128 0xb
 3854 0393 CF090000 		.4byte	.LASF65
 3855 0397 08       		.byte	0x8
 3856 0398 63       		.byte	0x63
 3857 0399 AD000000 		.4byte	0xad
 3858 039d 05       		.byte	0x5
 3859 039e 0B       		.uleb128 0xb
 3860 039f BF070000 		.4byte	.LASF66
 3861 03a3 08       		.byte	0x8
 3862 03a4 65       		.byte	0x65
 3863 03a5 AD000000 		.4byte	0xad
 3864 03a9 06       		.byte	0x6
 3865 03aa 0B       		.uleb128 0xb
 3866 03ab B2090000 		.4byte	.LASF67
 3867 03af 08       		.byte	0x8
 3868 03b0 66       		.byte	0x66
 3869 03b1 AD000000 		.4byte	0xad
 3870 03b5 07       		.byte	0x7
 3871 03b6 0B       		.uleb128 0xb
 3872 03b7 BF060000 		.4byte	.LASF68
 3873 03bb 08       		.byte	0x8
 3874 03bc 67       		.byte	0x67
 3875 03bd AD000000 		.4byte	0xad
 3876 03c1 08       		.byte	0x8
 3877 03c2 0B       		.uleb128 0xb
 3878 03c3 350A0000 		.4byte	.LASF69
 3879 03c7 08       		.byte	0x8
 3880 03c8 68       		.byte	0x68
 3881 03c9 AD000000 		.4byte	0xad
 3882 03cd 09       		.byte	0x9
 3883 03ce 00       		.byte	0
 3884 03cf 02       		.uleb128 0x2
 3885 03d0 01       		.byte	0x1
 3886 03d1 02       		.byte	0x2
 3887 03d2 DD060000 		.4byte	.LASF70
 3888 03d6 03       		.uleb128 0x3
 3889 03d7 2B050000 		.4byte	.LASF71
 3890 03db 08       		.byte	0x8
 3891 03dc 6E       		.byte	0x6e
 3892 03dd 4E030000 		.4byte	0x34e
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 94


 3893 03e1 0D       		.uleb128 0xd
 3894 03e2 06       		.byte	0x6
 3895 03e3 09       		.byte	0x9
 3896 03e4 35       		.byte	0x35
 3897 03e5 1A040000 		.4byte	0x41a
 3898 03e9 0B       		.uleb128 0xb
 3899 03ea 2E030000 		.4byte	.LASF72
 3900 03ee 09       		.byte	0x9
 3901 03ef 37       		.byte	0x37
 3902 03f0 B9000000 		.4byte	0xb9
 3903 03f4 00       		.byte	0
 3904 03f5 0B       		.uleb128 0xb
 3905 03f6 76020000 		.4byte	.LASF73
 3906 03fa 09       		.byte	0x9
 3907 03fb 38       		.byte	0x38
 3908 03fc D1000000 		.4byte	0xd1
 3909 0400 02       		.byte	0x2
 3910 0401 0B       		.uleb128 0xb
 3911 0402 4F0A0000 		.4byte	.LASF74
 3912 0406 09       		.byte	0x9
 3913 0407 39       		.byte	0x39
 3914 0408 AD000000 		.4byte	0xad
 3915 040c 04       		.byte	0x4
 3916 040d 0B       		.uleb128 0xb
 3917 040e 73000000 		.4byte	.LASF75
 3918 0412 09       		.byte	0x9
 3919 0413 3A       		.byte	0x3a
 3920 0414 AD000000 		.4byte	0xad
 3921 0418 05       		.byte	0x5
 3922 0419 00       		.byte	0
 3923 041a 03       		.uleb128 0x3
 3924 041b D7060000 		.4byte	.LASF76
 3925 041f 09       		.byte	0x9
 3926 0420 3D       		.byte	0x3d
 3927 0421 25040000 		.4byte	0x425
 3928 0425 0F       		.uleb128 0xf
 3929 0426 E1030000 		.4byte	0x3e1
 3930 042a 0D       		.uleb128 0xd
 3931 042b 1C       		.byte	0x1c
 3932 042c 09       		.byte	0x9
 3933 042d 40       		.byte	0x40
 3934 042e 4B040000 		.4byte	0x44b
 3935 0432 0B       		.uleb128 0xb
 3936 0433 54040000 		.4byte	.LASF77
 3937 0437 09       		.byte	0x9
 3938 0438 42       		.byte	0x42
 3939 0439 4B040000 		.4byte	0x44b
 3940 043d 00       		.byte	0
 3941 043e 0B       		.uleb128 0xb
 3942 043f 67040000 		.4byte	.LASF78
 3943 0443 09       		.byte	0x9
 3944 0444 43       		.byte	0x43
 3945 0445 29010000 		.4byte	0x129
 3946 0449 04       		.byte	0x4
 3947 044a 00       		.byte	0
 3948 044b 06       		.uleb128 0x6
 3949 044c 04       		.byte	0x4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 95


 3950 044d 7F020000 		.4byte	0x27f
 3951 0451 03       		.uleb128 0x3
 3952 0452 20050000 		.4byte	.LASF79
 3953 0456 09       		.byte	0x9
 3954 0457 45       		.byte	0x45
 3955 0458 2A040000 		.4byte	0x42a
 3956 045c 0D       		.uleb128 0xd
 3957 045d 68       		.byte	0x68
 3958 045e 09       		.byte	0x9
 3959 045f 4B       		.byte	0x4b
 3960 0460 7D040000 		.4byte	0x47d
 3961 0464 0B       		.uleb128 0xb
 3962 0465 5F040000 		.4byte	.LASF80
 3963 0469 09       		.byte	0x9
 3964 046a 50       		.byte	0x50
 3965 046b 7D040000 		.4byte	0x47d
 3966 046f 00       		.byte	0
 3967 0470 0B       		.uleb128 0xb
 3968 0471 43040000 		.4byte	.LASF81
 3969 0475 09       		.byte	0x9
 3970 0476 51       		.byte	0x51
 3971 0477 7E000000 		.4byte	0x7e
 3972 047b 64       		.byte	0x64
 3973 047c 00       		.byte	0
 3974 047d 08       		.uleb128 0x8
 3975 047e 03010000 		.4byte	0x103
 3976 0482 8D040000 		.4byte	0x48d
 3977 0486 09       		.uleb128 0x9
 3978 0487 11010000 		.4byte	0x111
 3979 048b 63       		.byte	0x63
 3980 048c 00       		.byte	0
 3981 048d 03       		.uleb128 0x3
 3982 048e DC090000 		.4byte	.LASF82
 3983 0492 09       		.byte	0x9
 3984 0493 57       		.byte	0x57
 3985 0494 5C040000 		.4byte	0x45c
 3986 0498 10       		.uleb128 0x10
 3987 0499 CA060000 		.4byte	.LASF114
 3988 049d 01       		.byte	0x1
 3989 049e 12       		.byte	0x12
 3990 049f 00000000 		.4byte	.LFB64
 3991 04a3 44000000 		.4byte	.LFE64-.LFB64
 3992 04a7 01       		.uleb128 0x1
 3993 04a8 9C       		.byte	0x9c
 3994 04a9 11       		.uleb128 0x11
 3995 04aa 88060000 		.4byte	.LASF83
 3996 04ae 01       		.byte	0x1
 3997 04af 1C       		.byte	0x1c
 3998 04b0 00000000 		.4byte	.LFB65
 3999 04b4 6C000000 		.4byte	.LFE65-.LFB65
 4000 04b8 01       		.uleb128 0x1
 4001 04b9 9C       		.byte	0x9c
 4002 04ba 11       		.uleb128 0x11
 4003 04bb BC080000 		.4byte	.LASF84
 4004 04bf 01       		.byte	0x1
 4005 04c0 36       		.byte	0x36
 4006 04c1 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 96


 4007 04c5 32000000 		.4byte	.LFE66-.LFB66
 4008 04c9 01       		.uleb128 0x1
 4009 04ca 9C       		.byte	0x9c
 4010 04cb 11       		.uleb128 0x11
 4011 04cc FF080000 		.4byte	.LASF85
 4012 04d0 01       		.byte	0x1
 4013 04d1 46       		.byte	0x46
 4014 04d2 00000000 		.4byte	.LFB67
 4015 04d6 20000000 		.4byte	.LFE67-.LFB67
 4016 04da 01       		.uleb128 0x1
 4017 04db 9C       		.byte	0x9c
 4018 04dc 11       		.uleb128 0x11
 4019 04dd 9B0A0000 		.4byte	.LASF86
 4020 04e1 01       		.byte	0x1
 4021 04e2 4F       		.byte	0x4f
 4022 04e3 00000000 		.4byte	.LFB68
 4023 04e7 40000000 		.4byte	.LFE68-.LFB68
 4024 04eb 01       		.uleb128 0x1
 4025 04ec 9C       		.byte	0x9c
 4026 04ed 12       		.uleb128 0x12
 4027 04ee 75040000 		.4byte	.LASF100
 4028 04f2 01       		.byte	0x1
 4029 04f3 61       		.byte	0x61
 4030 04f4 AD000000 		.4byte	0xad
 4031 04f8 00000000 		.4byte	.LFB69
 4032 04fc DC000000 		.4byte	.LFE69-.LFB69
 4033 0500 01       		.uleb128 0x1
 4034 0501 9C       		.byte	0x9c
 4035 0502 61050000 		.4byte	0x561
 4036 0506 13       		.uleb128 0x13
 4037 0507 2C0A0000 		.4byte	.LASF87
 4038 050b 01       		.byte	0x1
 4039 050c 6A       		.byte	0x6a
 4040 050d AD000000 		.4byte	0xad
 4041 0511 02       		.uleb128 0x2
 4042 0512 91       		.byte	0x91
 4043 0513 77       		.sleb128 -9
 4044 0514 13       		.uleb128 0x13
 4045 0515 460A0000 		.4byte	.LASF88
 4046 0519 01       		.byte	0x1
 4047 051a 6B       		.byte	0x6b
 4048 051b AD000000 		.4byte	0xad
 4049 051f 02       		.uleb128 0x2
 4050 0520 91       		.byte	0x91
 4051 0521 74       		.sleb128 -12
 4052 0522 13       		.uleb128 0x13
 4053 0523 680A0000 		.4byte	.LASF89
 4054 0527 01       		.byte	0x1
 4055 0528 6D       		.byte	0x6d
 4056 0529 57000000 		.4byte	0x57
 4057 052d 02       		.uleb128 0x2
 4058 052e 91       		.byte	0x91
 4059 052f 70       		.sleb128 -16
 4060 0530 14       		.uleb128 0x14
 4061 0531 26000000 		.4byte	.LBB2
 4062 0535 4A000000 		.4byte	.LBE2-.LBB2
 4063 0539 13       		.uleb128 0x13
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 97


 4064 053a 460A0000 		.4byte	.LASF88
 4065 053e 01       		.byte	0x1
 4066 053f 70       		.byte	0x70
 4067 0540 AD000000 		.4byte	0xad
 4068 0544 02       		.uleb128 0x2
 4069 0545 91       		.byte	0x91
 4070 0546 76       		.sleb128 -10
 4071 0547 14       		.uleb128 0x14
 4072 0548 2C000000 		.4byte	.LBB3
 4073 054c 2A000000 		.4byte	.LBE3-.LBB3
 4074 0550 13       		.uleb128 0x13
 4075 0551 DD030000 		.4byte	.LASF90
 4076 0555 01       		.byte	0x1
 4077 0556 72       		.byte	0x72
 4078 0557 AD000000 		.4byte	0xad
 4079 055b 02       		.uleb128 0x2
 4080 055c 91       		.byte	0x91
 4081 055d 75       		.sleb128 -11
 4082 055e 00       		.byte	0
 4083 055f 00       		.byte	0
 4084 0560 00       		.byte	0
 4085 0561 11       		.uleb128 0x11
 4086 0562 A8070000 		.4byte	.LASF91
 4087 0566 01       		.byte	0x1
 4088 0567 93       		.byte	0x93
 4089 0568 00000000 		.4byte	.LFB70
 4090 056c 1C000000 		.4byte	.LFE70-.LFB70
 4091 0570 01       		.uleb128 0x1
 4092 0571 9C       		.byte	0x9c
 4093 0572 11       		.uleb128 0x11
 4094 0573 7D070000 		.4byte	.LASF92
 4095 0577 01       		.byte	0x1
 4096 0578 9B       		.byte	0x9b
 4097 0579 00000000 		.4byte	.LFB71
 4098 057d 28000000 		.4byte	.LFE71-.LFB71
 4099 0581 01       		.uleb128 0x1
 4100 0582 9C       		.byte	0x9c
 4101 0583 15       		.uleb128 0x15
 4102 0584 0F050000 		.4byte	.LASF104
 4103 0588 01       		.byte	0x1
 4104 0589 A6       		.byte	0xa6
 4105 058a 8C000000 		.4byte	0x8c
 4106 058e 00000000 		.4byte	.LFB72
 4107 0592 C8000000 		.4byte	.LFE72-.LFB72
 4108 0596 01       		.uleb128 0x1
 4109 0597 9C       		.byte	0x9c
 4110 0598 15060000 		.4byte	0x615
 4111 059c 16       		.uleb128 0x16
 4112 059d 68060000 		.4byte	.LASF93
 4113 05a1 01       		.byte	0x1
 4114 05a2 A6       		.byte	0xa6
 4115 05a3 18010000 		.4byte	0x118
 4116 05a7 02       		.uleb128 0x2
 4117 05a8 91       		.byte	0x91
 4118 05a9 5C       		.sleb128 -36
 4119 05aa 16       		.uleb128 0x16
 4120 05ab 720A0000 		.4byte	.LASF94
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 98


 4121 05af 01       		.byte	0x1
 4122 05b0 A6       		.byte	0xa6
 4123 05b1 18010000 		.4byte	0x118
 4124 05b5 02       		.uleb128 0x2
 4125 05b6 91       		.byte	0x91
 4126 05b7 58       		.sleb128 -40
 4127 05b8 16       		.uleb128 0x16
 4128 05b9 08040000 		.4byte	.LASF95
 4129 05bd 01       		.byte	0x1
 4130 05be A6       		.byte	0xa6
 4131 05bf A2000000 		.4byte	0xa2
 4132 05c3 02       		.uleb128 0x2
 4133 05c4 91       		.byte	0x91
 4134 05c5 54       		.sleb128 -44
 4135 05c6 13       		.uleb128 0x13
 4136 05c7 FC040000 		.4byte	.LASF96
 4137 05cb 01       		.byte	0x1
 4138 05cc A8       		.byte	0xa8
 4139 05cd C5000000 		.4byte	0xc5
 4140 05d1 02       		.uleb128 0x2
 4141 05d2 91       		.byte	0x91
 4142 05d3 74       		.sleb128 -12
 4143 05d4 14       		.uleb128 0x14
 4144 05d5 16000000 		.4byte	.LBB4
 4145 05d9 88000000 		.4byte	.LBE4-.LBB4
 4146 05dd 13       		.uleb128 0x13
 4147 05de 71060000 		.4byte	.LASF97
 4148 05e2 01       		.byte	0x1
 4149 05e3 AC       		.byte	0xac
 4150 05e4 18010000 		.4byte	0x118
 4151 05e8 02       		.uleb128 0x2
 4152 05e9 91       		.byte	0x91
 4153 05ea 64       		.sleb128 -28
 4154 05eb 13       		.uleb128 0x13
 4155 05ec 09070000 		.4byte	.LASF98
 4156 05f0 01       		.byte	0x1
 4157 05f1 AD       		.byte	0xad
 4158 05f2 A2000000 		.4byte	0xa2
 4159 05f6 02       		.uleb128 0x2
 4160 05f7 91       		.byte	0x91
 4161 05f8 6C       		.sleb128 -20
 4162 05f9 17       		.uleb128 0x17
 4163 05fa 6900     		.ascii	"i\000"
 4164 05fc 01       		.byte	0x1
 4165 05fd AE       		.byte	0xae
 4166 05fe A2000000 		.4byte	0xa2
 4167 0602 02       		.uleb128 0x2
 4168 0603 91       		.byte	0x91
 4169 0604 70       		.sleb128 -16
 4170 0605 13       		.uleb128 0x13
 4171 0606 25030000 		.4byte	.LASF99
 4172 060a 01       		.byte	0x1
 4173 060b AE       		.byte	0xae
 4174 060c A2000000 		.4byte	0xa2
 4175 0610 02       		.uleb128 0x2
 4176 0611 91       		.byte	0x91
 4177 0612 68       		.sleb128 -24
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 99


 4178 0613 00       		.byte	0
 4179 0614 00       		.byte	0
 4180 0615 12       		.uleb128 0x12
 4181 0616 FC050000 		.4byte	.LASF101
 4182 061a 01       		.byte	0x1
 4183 061b DA       		.byte	0xda
 4184 061c FF010000 		.4byte	0x1ff
 4185 0620 00000000 		.4byte	.LFB73
 4186 0624 00010000 		.4byte	.LFE73-.LFB73
 4187 0628 01       		.uleb128 0x1
 4188 0629 9C       		.byte	0x9c
 4189 062a 6C060000 		.4byte	0x66c
 4190 062e 13       		.uleb128 0x13
 4191 062f 7C010000 		.4byte	.LASF102
 4192 0633 01       		.byte	0x1
 4193 0634 DC       		.byte	0xdc
 4194 0635 FF010000 		.4byte	0x1ff
 4195 0639 03       		.uleb128 0x3
 4196 063a 91       		.byte	0x91
 4197 063b E47C     		.sleb128 -412
 4198 063d 14       		.uleb128 0x14
 4199 063e 4A000000 		.4byte	.LBB5
 4200 0642 86000000 		.4byte	.LBE5-.LBB5
 4201 0646 17       		.uleb128 0x17
 4202 0647 6900     		.ascii	"i\000"
 4203 0649 01       		.byte	0x1
 4204 064a E3       		.byte	0xe3
 4205 064b 7E000000 		.4byte	0x7e
 4206 064f 02       		.uleb128 0x2
 4207 0650 91       		.byte	0x91
 4208 0651 6C       		.sleb128 -20
 4209 0652 14       		.uleb128 0x14
 4210 0653 70000000 		.4byte	.LBB6
 4211 0657 46000000 		.4byte	.LBE6-.LBB6
 4212 065b 13       		.uleb128 0x13
 4213 065c FE020000 		.4byte	.LASF103
 4214 0660 01       		.byte	0x1
 4215 0661 F0       		.byte	0xf0
 4216 0662 57000000 		.4byte	0x57
 4217 0666 02       		.uleb128 0x2
 4218 0667 91       		.byte	0x91
 4219 0668 68       		.sleb128 -24
 4220 0669 00       		.byte	0
 4221 066a 00       		.byte	0
 4222 066b 00       		.byte	0
 4223 066c 18       		.uleb128 0x18
 4224 066d F9030000 		.4byte	.LASF105
 4225 0671 01       		.byte	0x1
 4226 0672 0401     		.2byte	0x104
 4227 0674 AD000000 		.4byte	0xad
 4228 0678 00000000 		.4byte	.LFB74
 4229 067c 78000000 		.4byte	.LFE74-.LFB74
 4230 0680 01       		.uleb128 0x1
 4231 0681 9C       		.byte	0x9c
 4232 0682 DD060000 		.4byte	0x6dd
 4233 0686 19       		.uleb128 0x19
 4234 0687 E7040000 		.4byte	.LASF106
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 100


 4235 068b 01       		.byte	0x1
 4236 068c 0401     		.2byte	0x104
 4237 068e 18010000 		.4byte	0x118
 4238 0692 02       		.uleb128 0x2
 4239 0693 91       		.byte	0x91
 4240 0694 6C       		.sleb128 -20
 4241 0695 19       		.uleb128 0x19
 4242 0696 8C040000 		.4byte	.LASF107
 4243 069a 01       		.byte	0x1
 4244 069b 0401     		.2byte	0x104
 4245 069d 1E010000 		.4byte	0x11e
 4246 06a1 02       		.uleb128 0x2
 4247 06a2 91       		.byte	0x91
 4248 06a3 68       		.sleb128 -24
 4249 06a4 19       		.uleb128 0x19
 4250 06a5 B2040000 		.4byte	.LASF108
 4251 06a9 01       		.byte	0x1
 4252 06aa 0401     		.2byte	0x104
 4253 06ac 1E010000 		.4byte	0x11e
 4254 06b0 02       		.uleb128 0x2
 4255 06b1 91       		.byte	0x91
 4256 06b2 64       		.sleb128 -28
 4257 06b3 19       		.uleb128 0x19
 4258 06b4 98040000 		.4byte	.LASF109
 4259 06b8 01       		.byte	0x1
 4260 06b9 0401     		.2byte	0x104
 4261 06bb 18010000 		.4byte	0x118
 4262 06bf 02       		.uleb128 0x2
 4263 06c0 91       		.byte	0x91
 4264 06c1 60       		.sleb128 -32
 4265 06c2 1A       		.uleb128 0x1a
 4266 06c3 6100     		.ascii	"a\000"
 4267 06c5 01       		.byte	0x1
 4268 06c6 0601     		.2byte	0x106
 4269 06c8 18010000 		.4byte	0x118
 4270 06cc 02       		.uleb128 0x2
 4271 06cd 91       		.byte	0x91
 4272 06ce 74       		.sleb128 -12
 4273 06cf 1A       		.uleb128 0x1a
 4274 06d0 6200     		.ascii	"b\000"
 4275 06d2 01       		.byte	0x1
 4276 06d3 0601     		.2byte	0x106
 4277 06d5 18010000 		.4byte	0x118
 4278 06d9 02       		.uleb128 0x2
 4279 06da 91       		.byte	0x91
 4280 06db 70       		.sleb128 -16
 4281 06dc 00       		.byte	0
 4282 06dd 1B       		.uleb128 0x1b
 4283 06de F5070000 		.4byte	.LASF110
 4284 06e2 01       		.byte	0x1
 4285 06e3 2301     		.2byte	0x123
 4286 06e5 AD000000 		.4byte	0xad
 4287 06e9 00000000 		.4byte	.LFB75
 4288 06ed 74010000 		.4byte	.LFE75-.LFB75
 4289 06f1 01       		.uleb128 0x1
 4290 06f2 9C       		.byte	0x9c
 4291 06f3 0F070000 		.4byte	0x70f
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 101


 4292 06f7 14       		.uleb128 0x14
 4293 06f8 2E000000 		.4byte	.LBB7
 4294 06fc 68000000 		.4byte	.LBE7-.LBB7
 4295 0700 1A       		.uleb128 0x1a
 4296 0701 6900     		.ascii	"i\000"
 4297 0703 01       		.byte	0x1
 4298 0704 3101     		.2byte	0x131
 4299 0706 AD000000 		.4byte	0xad
 4300 070a 02       		.uleb128 0x2
 4301 070b 91       		.byte	0x91
 4302 070c 77       		.sleb128 -9
 4303 070d 00       		.byte	0
 4304 070e 00       		.byte	0
 4305 070f 1B       		.uleb128 0x1b
 4306 0710 A4050000 		.4byte	.LASF111
 4307 0714 01       		.byte	0x1
 4308 0715 7501     		.2byte	0x175
 4309 0717 AD000000 		.4byte	0xad
 4310 071b 00000000 		.4byte	.LFB76
 4311 071f B8000000 		.4byte	.LFE76-.LFB76
 4312 0723 01       		.uleb128 0x1
 4313 0724 9C       		.byte	0x9c
 4314 0725 52070000 		.4byte	0x752
 4315 0729 1C       		.uleb128 0x1c
 4316 072a 6B090000 		.4byte	.LASF36
 4317 072e 01       		.byte	0x1
 4318 072f 7901     		.2byte	0x179
 4319 0731 AD000000 		.4byte	0xad
 4320 0735 02       		.uleb128 0x2
 4321 0736 91       		.byte	0x91
 4322 0737 77       		.sleb128 -9
 4323 0738 14       		.uleb128 0x14
 4324 0739 36000000 		.4byte	.LBB8
 4325 073d 48000000 		.4byte	.LBE8-.LBB8
 4326 0741 1C       		.uleb128 0x1c
 4327 0742 EC040000 		.4byte	.LASF112
 4328 0746 01       		.byte	0x1
 4329 0747 8101     		.2byte	0x181
 4330 0749 52070000 		.4byte	0x752
 4331 074d 02       		.uleb128 0x2
 4332 074e 91       		.byte	0x91
 4333 074f 6C       		.sleb128 -20
 4334 0750 00       		.byte	0
 4335 0751 00       		.byte	0
 4336 0752 08       		.uleb128 0x8
 4337 0753 03010000 		.4byte	0x103
 4338 0757 62070000 		.4byte	0x762
 4339 075b 09       		.uleb128 0x9
 4340 075c 11010000 		.4byte	0x111
 4341 0760 09       		.byte	0x9
 4342 0761 00       		.byte	0
 4343 0762 1D       		.uleb128 0x1d
 4344 0763 11020000 		.4byte	.LASF113
 4345 0767 01       		.byte	0x1
 4346 0768 9301     		.2byte	0x193
 4347 076a 00000000 		.4byte	.LFB77
 4348 076e 1C000000 		.4byte	.LFE77-.LFB77
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 102


 4349 0772 01       		.uleb128 0x1
 4350 0773 9C       		.byte	0x9c
 4351 0774 1E       		.uleb128 0x1e
 4352 0775 77080000 		.4byte	.LASF115
 4353 0779 01       		.byte	0x1
 4354 077a A301     		.2byte	0x1a3
 4355 077c AD000000 		.4byte	0xad
 4356 0780 00000000 		.4byte	.LFB78
 4357 0784 28000000 		.4byte	.LFE78-.LFB78
 4358 0788 01       		.uleb128 0x1
 4359 0789 9C       		.byte	0x9c
 4360 078a 1F       		.uleb128 0x1f
 4361 078b 10040000 		.4byte	.LASF118
 4362 078f 01       		.byte	0x1
 4363 0790 AE01     		.2byte	0x1ae
 4364 0792 00000000 		.4byte	.LFB79
 4365 0796 84000000 		.4byte	.LFE79-.LFB79
 4366 079a 01       		.uleb128 0x1
 4367 079b 9C       		.byte	0x9c
 4368 079c B0070000 		.4byte	0x7b0
 4369 07a0 1C       		.uleb128 0x1c
 4370 07a1 07060000 		.4byte	.LASF116
 4371 07a5 01       		.byte	0x1
 4372 07a6 BB01     		.2byte	0x1bb
 4373 07a8 7E000000 		.4byte	0x7e
 4374 07ac 02       		.uleb128 0x2
 4375 07ad 91       		.byte	0x91
 4376 07ae 74       		.sleb128 -12
 4377 07af 00       		.byte	0
 4378 07b0 20       		.uleb128 0x20
 4379 07b1 8F030000 		.4byte	.LASF117
 4380 07b5 01       		.byte	0x1
 4381 07b6 CD01     		.2byte	0x1cd
 4382 07b8 00000000 		.4byte	.LFB80
 4383 07bc 4C000000 		.4byte	.LFE80-.LFB80
 4384 07c0 01       		.uleb128 0x1
 4385 07c1 9C       		.byte	0x9c
 4386 07c2 1F       		.uleb128 0x1f
 4387 07c3 3A090000 		.4byte	.LASF119
 4388 07c7 01       		.byte	0x1
 4389 07c8 E201     		.2byte	0x1e2
 4390 07ca 00000000 		.4byte	.LFB81
 4391 07ce E0050000 		.4byte	.LFE81-.LFB81
 4392 07d2 01       		.uleb128 0x1
 4393 07d3 9C       		.byte	0x9c
 4394 07d4 33090000 		.4byte	0x933
 4395 07d8 1C       		.uleb128 0x1c
 4396 07d9 1E070000 		.4byte	.LASF120
 4397 07dd 01       		.byte	0x1
 4398 07de E501     		.2byte	0x1e5
 4399 07e0 52070000 		.4byte	0x752
 4400 07e4 02       		.uleb128 0x2
 4401 07e5 91       		.byte	0x91
 4402 07e6 64       		.sleb128 -28
 4403 07e7 1C       		.uleb128 0x1c
 4404 07e8 F3020000 		.4byte	.LASF121
 4405 07ec 01       		.byte	0x1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 103


 4406 07ed E601     		.2byte	0x1e6
 4407 07ef 52070000 		.4byte	0x752
 4408 07f3 02       		.uleb128 0x2
 4409 07f4 91       		.byte	0x91
 4410 07f5 58       		.sleb128 -40
 4411 07f6 1C       		.uleb128 0x1c
 4412 07f7 5D090000 		.4byte	.LASF122
 4413 07fb 01       		.byte	0x1
 4414 07fc E701     		.2byte	0x1e7
 4415 07fe 52070000 		.4byte	0x752
 4416 0802 02       		.uleb128 0x2
 4417 0803 91       		.byte	0x91
 4418 0804 4C       		.sleb128 -52
 4419 0805 1C       		.uleb128 0x1c
 4420 0806 99060000 		.4byte	.LASF123
 4421 080a 01       		.byte	0x1
 4422 080b E801     		.2byte	0x1e8
 4423 080d 52070000 		.4byte	0x752
 4424 0811 02       		.uleb128 0x2
 4425 0812 91       		.byte	0x91
 4426 0813 40       		.sleb128 -64
 4427 0814 1C       		.uleb128 0x1c
 4428 0815 82030000 		.4byte	.LASF124
 4429 0819 01       		.byte	0x1
 4430 081a E901     		.2byte	0x1e9
 4431 081c 52070000 		.4byte	0x752
 4432 0820 03       		.uleb128 0x3
 4433 0821 91       		.byte	0x91
 4434 0822 B47F     		.sleb128 -76
 4435 0824 1C       		.uleb128 0x1c
 4436 0825 D4080000 		.4byte	.LASF125
 4437 0829 01       		.byte	0x1
 4438 082a ED01     		.2byte	0x1ed
 4439 082c 7D040000 		.4byte	0x47d
 4440 0830 03       		.uleb128 0x3
 4441 0831 91       		.byte	0x91
 4442 0832 D07E     		.sleb128 -176
 4443 0834 1C       		.uleb128 0x1c
 4444 0835 5B030000 		.4byte	.LASF126
 4445 0839 01       		.byte	0x1
 4446 083a F001     		.2byte	0x1f0
 4447 083c 7D040000 		.4byte	0x47d
 4448 0840 03       		.uleb128 0x3
 4449 0841 91       		.byte	0x91
 4450 0842 EC7D     		.sleb128 -276
 4451 0844 1C       		.uleb128 0x1c
 4452 0845 8A050000 		.4byte	.LASF127
 4453 0849 01       		.byte	0x1
 4454 084a F301     		.2byte	0x1f3
 4455 084c 7D040000 		.4byte	0x47d
 4456 0850 03       		.uleb128 0x3
 4457 0851 91       		.byte	0x91
 4458 0852 887D     		.sleb128 -376
 4459 0854 1C       		.uleb128 0x1c
 4460 0855 07050000 		.4byte	.LASF128
 4461 0859 01       		.byte	0x1
 4462 085a F601     		.2byte	0x1f6
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 104


 4463 085c 7D040000 		.4byte	0x47d
 4464 0860 03       		.uleb128 0x3
 4465 0861 91       		.byte	0x91
 4466 0862 A47C     		.sleb128 -476
 4467 0864 1C       		.uleb128 0x1c
 4468 0865 50070000 		.4byte	.LASF129
 4469 0869 01       		.byte	0x1
 4470 086a F901     		.2byte	0x1f9
 4471 086c 7D040000 		.4byte	0x47d
 4472 0870 03       		.uleb128 0x3
 4473 0871 91       		.byte	0x91
 4474 0872 C07B     		.sleb128 -576
 4475 0874 1C       		.uleb128 0x1c
 4476 0875 A7060000 		.4byte	.LASF130
 4477 0879 01       		.byte	0x1
 4478 087a 0102     		.2byte	0x201
 4479 087c 33090000 		.4byte	0x933
 4480 0880 03       		.uleb128 0x3
 4481 0881 91       		.byte	0x91
 4482 0882 F879     		.sleb128 -776
 4483 0884 1C       		.uleb128 0x1c
 4484 0885 D0020000 		.4byte	.LASF60
 4485 0889 01       		.byte	0x1
 4486 088a 6602     		.2byte	0x266
 4487 088c 7E000000 		.4byte	0x7e
 4488 0890 03       		.uleb128 0x3
 4489 0891 91       		.byte	0x91
 4490 0892 F479     		.sleb128 -780
 4491 0894 1C       		.uleb128 0x1c
 4492 0895 B6060000 		.4byte	.LASF61
 4493 0899 01       		.byte	0x1
 4494 089a 6602     		.2byte	0x266
 4495 089c 7E000000 		.4byte	0x7e
 4496 08a0 03       		.uleb128 0x3
 4497 08a1 91       		.byte	0x91
 4498 08a2 F079     		.sleb128 -784
 4499 08a4 1C       		.uleb128 0x1c
 4500 08a5 64010000 		.4byte	.LASF131
 4501 08a9 01       		.byte	0x1
 4502 08aa 6602     		.2byte	0x266
 4503 08ac 7E000000 		.4byte	0x7e
 4504 08b0 03       		.uleb128 0x3
 4505 08b1 91       		.byte	0x91
 4506 08b2 EC79     		.sleb128 -788
 4507 08b4 1C       		.uleb128 0x1c
 4508 08b5 42050000 		.4byte	.LASF132
 4509 08b9 01       		.byte	0x1
 4510 08ba 6602     		.2byte	0x266
 4511 08bc 7E000000 		.4byte	0x7e
 4512 08c0 03       		.uleb128 0x3
 4513 08c1 91       		.byte	0x91
 4514 08c2 E879     		.sleb128 -792
 4515 08c4 1C       		.uleb128 0x1c
 4516 08c5 F1040000 		.4byte	.LASF133
 4517 08c9 01       		.byte	0x1
 4518 08ca 6602     		.2byte	0x266
 4519 08cc 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 105


 4520 08d0 03       		.uleb128 0x3
 4521 08d1 91       		.byte	0x91
 4522 08d2 E479     		.sleb128 -796
 4523 08d4 1C       		.uleb128 0x1c
 4524 08d5 C10A0000 		.4byte	.LASF134
 4525 08d9 01       		.byte	0x1
 4526 08da 6702     		.2byte	0x267
 4527 08dc 7E000000 		.4byte	0x7e
 4528 08e0 03       		.uleb128 0x3
 4529 08e1 91       		.byte	0x91
 4530 08e2 E079     		.sleb128 -800
 4531 08e4 1C       		.uleb128 0x1c
 4532 08e5 AB020000 		.4byte	.LASF135
 4533 08e9 01       		.byte	0x1
 4534 08ea 6702     		.2byte	0x267
 4535 08ec 7E000000 		.4byte	0x7e
 4536 08f0 03       		.uleb128 0x3
 4537 08f1 91       		.byte	0x91
 4538 08f2 DC79     		.sleb128 -804
 4539 08f4 21       		.uleb128 0x21
 4540 08f5 F7010000 		.4byte	.LASF136
 4541 08f9 01       		.byte	0x1
 4542 08fa 6702     		.2byte	0x267
 4543 08fc 7E000000 		.4byte	0x7e
 4544 0900 21       		.uleb128 0x21
 4545 0901 5D0A0000 		.4byte	.LASF137
 4546 0905 01       		.byte	0x1
 4547 0906 6702     		.2byte	0x267
 4548 0908 7E000000 		.4byte	0x7e
 4549 090c 1C       		.uleb128 0x1c
 4550 090d 62000000 		.4byte	.LASF138
 4551 0911 01       		.byte	0x1
 4552 0912 6702     		.2byte	0x267
 4553 0914 7E000000 		.4byte	0x7e
 4554 0918 03       		.uleb128 0x3
 4555 0919 91       		.byte	0x91
 4556 091a D879     		.sleb128 -808
 4557 091c 22       		.uleb128 0x22
 4558 091d 00000000 		.4byte	.Ldebug_ranges0+0
 4559 0921 1C       		.uleb128 0x1c
 4560 0922 62020000 		.4byte	.LASF139
 4561 0926 01       		.byte	0x1
 4562 0927 9202     		.2byte	0x292
 4563 0929 7D040000 		.4byte	0x47d
 4564 092d 03       		.uleb128 0x3
 4565 092e 91       		.byte	0x91
 4566 092f F478     		.sleb128 -908
 4567 0931 00       		.byte	0
 4568 0932 00       		.byte	0
 4569 0933 08       		.uleb128 0x8
 4570 0934 03010000 		.4byte	0x103
 4571 0938 43090000 		.4byte	0x943
 4572 093c 09       		.uleb128 0x9
 4573 093d 11010000 		.4byte	0x111
 4574 0941 C7       		.byte	0xc7
 4575 0942 00       		.byte	0
 4576 0943 1F       		.uleb128 0x1f
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 106


 4577 0944 DA020000 		.4byte	.LASF140
 4578 0948 01       		.byte	0x1
 4579 0949 0F03     		.2byte	0x30f
 4580 094b 00000000 		.4byte	.LFB82
 4581 094f 68010000 		.4byte	.LFE82-.LFB82
 4582 0953 01       		.uleb128 0x1
 4583 0954 9C       		.byte	0x9c
 4584 0955 73090000 		.4byte	0x973
 4585 0959 14       		.uleb128 0x14
 4586 095a DA000000 		.4byte	.LBB12
 4587 095e 38000000 		.4byte	.LBE12-.LBB12
 4588 0962 1C       		.uleb128 0x1c
 4589 0963 16080000 		.4byte	.LASF141
 4590 0967 01       		.byte	0x1
 4591 0968 3D03     		.2byte	0x33d
 4592 096a 52070000 		.4byte	0x752
 4593 096e 02       		.uleb128 0x2
 4594 096f 91       		.byte	0x91
 4595 0970 6C       		.sleb128 -20
 4596 0971 00       		.byte	0
 4597 0972 00       		.byte	0
 4598 0973 1B       		.uleb128 0x1b
 4599 0974 3D030000 		.4byte	.LASF142
 4600 0978 01       		.byte	0x1
 4601 0979 5003     		.2byte	0x350
 4602 097b 57000000 		.4byte	0x57
 4603 097f 00000000 		.4byte	.LFB83
 4604 0983 44010000 		.4byte	.LFE83-.LFB83
 4605 0987 01       		.uleb128 0x1
 4606 0988 9C       		.byte	0x9c
 4607 0989 2F0A0000 		.4byte	0xa2f
 4608 098d 1C       		.uleb128 0x1c
 4609 098e C6040000 		.4byte	.LASF143
 4610 0992 01       		.byte	0x1
 4611 0993 5B03     		.2byte	0x35b
 4612 0995 57000000 		.4byte	0x57
 4613 0999 02       		.uleb128 0x2
 4614 099a 91       		.byte	0x91
 4615 099b 74       		.sleb128 -12
 4616 099c 14       		.uleb128 0x14
 4617 099d 30000000 		.4byte	.LBB13
 4618 09a1 DE000000 		.4byte	.LBE13-.LBB13
 4619 09a5 1C       		.uleb128 0x1c
 4620 09a6 FE020000 		.4byte	.LASF103
 4621 09aa 01       		.byte	0x1
 4622 09ab 6003     		.2byte	0x360
 4623 09ad 2F0A0000 		.4byte	0xa2f
 4624 09b1 02       		.uleb128 0x2
 4625 09b2 91       		.byte	0x91
 4626 09b3 54       		.sleb128 -44
 4627 09b4 1A       		.uleb128 0x1a
 4628 09b5 7400     		.ascii	"t\000"
 4629 09b7 01       		.byte	0x1
 4630 09b8 6603     		.2byte	0x366
 4631 09ba 39010000 		.4byte	0x139
 4632 09be 03       		.uleb128 0x3
 4633 09bf 91       		.byte	0x91
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 107


 4634 09c0 947F     		.sleb128 -108
 4635 09c2 1C       		.uleb128 0x1c
 4636 09c3 42020000 		.4byte	.LASF144
 4637 09c7 01       		.byte	0x1
 4638 09c8 6903     		.2byte	0x369
 4639 09ca 7E000000 		.4byte	0x7e
 4640 09ce 02       		.uleb128 0x2
 4641 09cf 91       		.byte	0x91
 4642 09d0 50       		.sleb128 -48
 4643 09d1 1C       		.uleb128 0x1c
 4644 09d2 9E050000 		.4byte	.LASF145
 4645 09d6 01       		.byte	0x1
 4646 09d7 6903     		.2byte	0x369
 4647 09d9 7E000000 		.4byte	0x7e
 4648 09dd 02       		.uleb128 0x2
 4649 09de 91       		.byte	0x91
 4650 09df 4C       		.sleb128 -52
 4651 09e0 1A       		.uleb128 0x1a
 4652 09e1 64617900 		.ascii	"day\000"
 4653 09e5 01       		.byte	0x1
 4654 09e6 6903     		.2byte	0x369
 4655 09e8 7E000000 		.4byte	0x7e
 4656 09ec 02       		.uleb128 0x2
 4657 09ed 91       		.byte	0x91
 4658 09ee 48       		.sleb128 -56
 4659 09ef 1C       		.uleb128 0x1c
 4660 09f0 63060000 		.4byte	.LASF146
 4661 09f4 01       		.byte	0x1
 4662 09f5 6903     		.2byte	0x369
 4663 09f7 7E000000 		.4byte	0x7e
 4664 09fb 02       		.uleb128 0x2
 4665 09fc 91       		.byte	0x91
 4666 09fd 44       		.sleb128 -60
 4667 09fe 1C       		.uleb128 0x1c
 4668 09ff 15090000 		.4byte	.LASF147
 4669 0a03 01       		.byte	0x1
 4670 0a04 6903     		.2byte	0x369
 4671 0a06 7E000000 		.4byte	0x7e
 4672 0a0a 02       		.uleb128 0x2
 4673 0a0b 91       		.byte	0x91
 4674 0a0c 40       		.sleb128 -64
 4675 0a0d 1C       		.uleb128 0x1c
 4676 0a0e 3B020000 		.4byte	.LASF148
 4677 0a12 01       		.byte	0x1
 4678 0a13 6903     		.2byte	0x369
 4679 0a15 7E000000 		.4byte	0x7e
 4680 0a19 03       		.uleb128 0x3
 4681 0a1a 91       		.byte	0x91
 4682 0a1b BC7F     		.sleb128 -68
 4683 0a1d 1C       		.uleb128 0x1c
 4684 0a1e 0C000000 		.4byte	.LASF149
 4685 0a22 01       		.byte	0x1
 4686 0a23 6903     		.2byte	0x369
 4687 0a25 7E000000 		.4byte	0x7e
 4688 0a29 03       		.uleb128 0x3
 4689 0a2a 91       		.byte	0x91
 4690 0a2b B87F     		.sleb128 -72
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 108


 4691 0a2d 00       		.byte	0
 4692 0a2e 00       		.byte	0
 4693 0a2f 08       		.uleb128 0x8
 4694 0a30 03010000 		.4byte	0x103
 4695 0a34 3F0A0000 		.4byte	0xa3f
 4696 0a38 09       		.uleb128 0x9
 4697 0a39 11010000 		.4byte	0x111
 4698 0a3d 1D       		.byte	0x1d
 4699 0a3e 00       		.byte	0
 4700 0a3f 23       		.uleb128 0x23
 4701 0a40 8C020000 		.4byte	.LASF150
 4702 0a44 01       		.byte	0x1
 4703 0a45 8903     		.2byte	0x389
 4704 0a47 AD000000 		.4byte	0xad
 4705 0a4b 00000000 		.4byte	.LFB84
 4706 0a4f 14000000 		.4byte	.LFE84-.LFB84
 4707 0a53 01       		.uleb128 0x1
 4708 0a54 9C       		.byte	0x9c
 4709 0a55 1D       		.uleb128 0x1d
 4710 0a56 76030000 		.4byte	.LASF151
 4711 0a5a 01       		.byte	0x1
 4712 0a5b 8E03     		.2byte	0x38e
 4713 0a5d 00000000 		.4byte	.LFB85
 4714 0a61 1A000000 		.4byte	.LFE85-.LFB85
 4715 0a65 01       		.uleb128 0x1
 4716 0a66 9C       		.byte	0x9c
 4717 0a67 1D       		.uleb128 0x1d
 4718 0a68 40010000 		.4byte	.LASF152
 4719 0a6c 01       		.byte	0x1
 4720 0a6d 9B03     		.2byte	0x39b
 4721 0a6f 00000000 		.4byte	.LFB86
 4722 0a73 2A000000 		.4byte	.LFE86-.LFB86
 4723 0a77 01       		.uleb128 0x1
 4724 0a78 9C       		.byte	0x9c
 4725 0a79 1B       		.uleb128 0x1b
 4726 0a7a 2F070000 		.4byte	.LASF153
 4727 0a7e 01       		.byte	0x1
 4728 0a7f AE03     		.2byte	0x3ae
 4729 0a81 43030000 		.4byte	0x343
 4730 0a85 00000000 		.4byte	.LFB87
 4731 0a89 7C020000 		.4byte	.LFE87-.LFB87
 4732 0a8d 01       		.uleb128 0x1
 4733 0a8e 9C       		.byte	0x9c
 4734 0a8f 220B0000 		.4byte	0xb22
 4735 0a93 1A       		.uleb128 0x1a
 4736 0a94 67707300 		.ascii	"gps\000"
 4737 0a98 01       		.byte	0x1
 4738 0a99 AF03     		.2byte	0x3af
 4739 0a9b 43030000 		.4byte	0x343
 4740 0a9f 02       		.uleb128 0x2
 4741 0aa0 91       		.byte	0x91
 4742 0aa1 4C       		.sleb128 -52
 4743 0aa2 1C       		.uleb128 0x1c
 4744 0aa3 840A0000 		.4byte	.LASF154
 4745 0aa7 01       		.byte	0x1
 4746 0aa8 BB03     		.2byte	0x3bb
 4747 0aaa 57000000 		.4byte	0x57
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 109


 4748 0aae 02       		.uleb128 0x2
 4749 0aaf 91       		.byte	0x91
 4750 0ab0 68       		.sleb128 -24
 4751 0ab1 1C       		.uleb128 0x1c
 4752 0ab2 DA050000 		.4byte	.LASF155
 4753 0ab6 01       		.byte	0x1
 4754 0ab7 E203     		.2byte	0x3e2
 4755 0ab9 AD000000 		.4byte	0xad
 4756 0abd 02       		.uleb128 0x2
 4757 0abe 91       		.byte	0x91
 4758 0abf 67       		.sleb128 -25
 4759 0ac0 1A       		.uleb128 0x1a
 4760 0ac1 6C617400 		.ascii	"lat\000"
 4761 0ac5 01       		.byte	0x1
 4762 0ac6 EE03     		.2byte	0x3ee
 4763 0ac8 F5000000 		.4byte	0xf5
 4764 0acc 02       		.uleb128 0x2
 4765 0acd 91       		.byte	0x91
 4766 0ace 48       		.sleb128 -56
 4767 0acf 1A       		.uleb128 0x1a
 4768 0ad0 6C6F6E00 		.ascii	"lon\000"
 4769 0ad4 01       		.byte	0x1
 4770 0ad5 EF03     		.2byte	0x3ef
 4771 0ad7 F5000000 		.4byte	0xf5
 4772 0adb 02       		.uleb128 0x2
 4773 0adc 91       		.byte	0x91
 4774 0add 44       		.sleb128 -60
 4775 0ade 1A       		.uleb128 0x1a
 4776 0adf 616C7400 		.ascii	"alt\000"
 4777 0ae3 01       		.byte	0x1
 4778 0ae4 F003     		.2byte	0x3f0
 4779 0ae6 F5000000 		.4byte	0xf5
 4780 0aea 02       		.uleb128 0x2
 4781 0aeb 91       		.byte	0x91
 4782 0aec 40       		.sleb128 -64
 4783 0aed 1A       		.uleb128 0x1a
 4784 0aee 733100   		.ascii	"s1\000"
 4785 0af1 01       		.byte	0x1
 4786 0af2 F403     		.2byte	0x3f4
 4787 0af4 18010000 		.4byte	0x118
 4788 0af8 02       		.uleb128 0x2
 4789 0af9 91       		.byte	0x91
 4790 0afa 60       		.sleb128 -32
 4791 0afb 1C       		.uleb128 0x1c
 4792 0afc 07060000 		.4byte	.LASF116
 4793 0b00 01       		.byte	0x1
 4794 0b01 F703     		.2byte	0x3f7
 4795 0b03 7E000000 		.4byte	0x7e
 4796 0b07 02       		.uleb128 0x2
 4797 0b08 91       		.byte	0x91
 4798 0b09 5C       		.sleb128 -36
 4799 0b0a 14       		.uleb128 0x14
 4800 0b0b B4000000 		.4byte	.LBB14
 4801 0b0f 38000000 		.4byte	.LBE14-.LBB14
 4802 0b13 1A       		.uleb128 0x1a
 4803 0b14 6900     		.ascii	"i\000"
 4804 0b16 01       		.byte	0x1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 110


 4805 0b17 E303     		.2byte	0x3e3
 4806 0b19 B9000000 		.4byte	0xb9
 4807 0b1d 02       		.uleb128 0x2
 4808 0b1e 91       		.byte	0x91
 4809 0b1f 6E       		.sleb128 -18
 4810 0b20 00       		.byte	0
 4811 0b21 00       		.byte	0
 4812 0b22 24       		.uleb128 0x24
 4813 0b23 8E010000 		.4byte	.LASF156
 4814 0b27 0A       		.byte	0xa
 4815 0b28 1207     		.2byte	0x712
 4816 0b2a 2E0B0000 		.4byte	0xb2e
 4817 0b2e 0F       		.uleb128 0xf
 4818 0b2f 97000000 		.4byte	0x97
 4819 0b33 25       		.uleb128 0x25
 4820 0b34 48000000 		.4byte	.LASF157
 4821 0b38 07       		.byte	0x7
 4822 0b39 11       		.byte	0x11
 4823 0b3a CF030000 		.4byte	0x3cf
 4824 0b3e 05       		.uleb128 0x5
 4825 0b3f 03       		.byte	0x3
 4826 0b40 00000000 		.4byte	buffer_overflow
 4827 0b44 25       		.uleb128 0x25
 4828 0b45 4E050000 		.4byte	.LASF158
 4829 0b49 07       		.byte	0x7
 4830 0b4a 22       		.byte	0x22
 4831 0b4b B9000000 		.4byte	0xb9
 4832 0b4f 05       		.uleb128 0x5
 4833 0b50 03       		.byte	0x3
 4834 0b51 00000000 		.4byte	dataPointsInStack
 4835 0b55 25       		.uleb128 0x25
 4836 0b56 99090000 		.4byte	.LASF159
 4837 0b5a 07       		.byte	0x7
 4838 0b5b 23       		.byte	0x23
 4839 0b5c B9000000 		.4byte	0xb9
 4840 0b60 05       		.uleb128 0x5
 4841 0b61 03       		.byte	0x3
 4842 0b62 00000000 		.4byte	dataPointsInStackDesired
 4843 0b66 08       		.uleb128 0x8
 4844 0b67 47020000 		.4byte	0x247
 4845 0b6b 760B0000 		.4byte	0xb76
 4846 0b6f 09       		.uleb128 0x9
 4847 0b70 11010000 		.4byte	0x111
 4848 0b74 95       		.byte	0x95
 4849 0b75 00       		.byte	0
 4850 0b76 25       		.uleb128 0x25
 4851 0b77 3E040000 		.4byte	.LASF160
 4852 0b7b 07       		.byte	0x7
 4853 0b7c 24       		.byte	0x24
 4854 0b7d 660B0000 		.4byte	0xb66
 4855 0b81 05       		.uleb128 0x5
 4856 0b82 03       		.byte	0x3
 4857 0b83 00000000 		.4byte	data
 4858 0b87 25       		.uleb128 0x25
 4859 0b88 70010000 		.4byte	.LASF161
 4860 0b8c 08       		.byte	0x8
 4861 0b8d 20       		.byte	0x20
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 111


 4862 0b8e AD000000 		.4byte	0xad
 4863 0b92 05       		.uleb128 0x5
 4864 0b93 03       		.byte	0x3
 4865 0b94 00000000 		.4byte	modem_state
 4866 0b98 25       		.uleb128 0x25
 4867 0b99 90080000 		.4byte	.LASF162
 4868 0b9d 08       		.byte	0x8
 4869 0b9e 71       		.byte	0x71
 4870 0b9f DD000000 		.4byte	0xdd
 4871 0ba3 05       		.uleb128 0x5
 4872 0ba4 03       		.byte	0x3
 4873 0ba5 00000000 		.4byte	modem_start_time_stamp
 4874 0ba9 25       		.uleb128 0x25
 4875 0baa 54040000 		.4byte	.LASF77
 4876 0bae 08       		.byte	0x8
 4877 0baf 72       		.byte	0x72
 4878 0bb0 7F020000 		.4byte	0x27f
 4879 0bb4 05       		.uleb128 0x5
 4880 0bb5 03       		.byte	0x3
 4881 0bb6 00000000 		.4byte	modem_info
 4882 0bba 25       		.uleb128 0x25
 4883 0bbb 9B010000 		.4byte	.LASF163
 4884 0bbf 08       		.byte	0x8
 4885 0bc0 73       		.byte	0x73
 4886 0bc1 F3020000 		.4byte	0x2f3
 4887 0bc5 05       		.uleb128 0x5
 4888 0bc6 03       		.byte	0x3
 4889 0bc7 00000000 		.4byte	modem_stats
 4890 0bcb 25       		.uleb128 0x25
 4891 0bcc 0D060000 		.4byte	.LASF164
 4892 0bd0 08       		.byte	0x8
 4893 0bd1 74       		.byte	0x74
 4894 0bd2 D6030000 		.4byte	0x3d6
 4895 0bd6 05       		.uleb128 0x5
 4896 0bd7 03       		.byte	0x3
 4897 0bd8 00000000 		.4byte	updatable_parameters
 4898 0bdc 25       		.uleb128 0x25
 4899 0bdd C1030000 		.4byte	.LASF165
 4900 0be1 0B       		.byte	0xb
 4901 0be2 07       		.byte	0x7
 4902 0be3 AD000000 		.4byte	0xad
 4903 0be7 05       		.uleb128 0x5
 4904 0be8 03       		.byte	0x3
 4905 0be9 00000000 		.4byte	App_LED_enabled
 4906 0bed 25       		.uleb128 0x25
 4907 0bee B30A0000 		.4byte	.LASF166
 4908 0bf2 0B       		.byte	0xb
 4909 0bf3 08       		.byte	0x8
 4910 0bf4 7D040000 		.4byte	0x47d
 4911 0bf8 05       		.uleb128 0x5
 4912 0bf9 03       		.byte	0x3
 4913 0bfa 00000000 		.4byte	app_led_inbox
 4914 0bfe 25       		.uleb128 0x25
 4915 0bff D1070000 		.4byte	.LASF167
 4916 0c03 0C       		.byte	0xc
 4917 0c04 25       		.byte	0x25
 4918 0c05 7D040000 		.4byte	0x47d
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 112


 4919 0c09 05       		.uleb128 0x5
 4920 0c0a 03       		.byte	0x3
 4921 0c0b 00000000 		.4byte	level_sensor_inbox
 4922 0c0f 25       		.uleb128 0x25
 4923 0c10 84090000 		.4byte	.LASF168
 4924 0c14 0C       		.byte	0xc
 4925 0c15 27       		.byte	0x27
 4926 0c16 CF030000 		.4byte	0x3cf
 4927 0c1a 05       		.uleb128 0x5
 4928 0c1b 03       		.byte	0x3
 4929 0c1c 00000000 		.4byte	level_sensor_enabled
 4930 0c20 25       		.uleb128 0x25
 4931 0c21 2C020000 		.4byte	.LASF169
 4932 0c25 0D       		.byte	0xd
 4933 0c26 2A       		.byte	0x2a
 4934 0c27 E9000000 		.4byte	0xe9
 4935 0c2b 05       		.uleb128 0x5
 4936 0c2c 03       		.byte	0x3
 4937 0c2d 00000000 		.4byte	valve_diameter
 4938 0c31 25       		.uleb128 0x25
 4939 0c32 9D000000 		.4byte	.LASF170
 4940 0c36 0D       		.byte	0xd
 4941 0c37 2B       		.byte	0x2b
 4942 0c38 52070000 		.4byte	0x752
 4943 0c3c 05       		.uleb128 0x5
 4944 0c3d 03       		.byte	0x3
 4945 0c3e 00000000 		.4byte	valve_type
 4946 0c42 25       		.uleb128 0x25
 4947 0c43 2C090000 		.4byte	.LASF171
 4948 0c47 0D       		.byte	0xd
 4949 0c48 30       		.byte	0x30
 4950 0c49 AD000000 		.4byte	0xad
 4951 0c4d 05       		.uleb128 0x5
 4952 0c4e 03       		.byte	0x3
 4953 0c4f 00000000 		.4byte	valve_enabled
 4954 0c53 25       		.uleb128 0x25
 4955 0c54 200A0000 		.4byte	.LASF172
 4956 0c58 0D       		.byte	0xd
 4957 0c59 31       		.byte	0x31
 4958 0c5a 7D040000 		.4byte	0x47d
 4959 0c5e 05       		.uleb128 0x5
 4960 0c5f 03       		.byte	0x3
 4961 0c60 00000000 		.4byte	valve_inbox
 4962 0c64 25       		.uleb128 0x25
 4963 0c65 34000000 		.4byte	.LASF173
 4964 0c69 0E       		.byte	0xe
 4965 0c6a 69       		.byte	0x69
 4966 0c6b AD000000 		.4byte	0xad
 4967 0c6f 05       		.uleb128 0x5
 4968 0c70 03       		.byte	0x3
 4969 0c71 00000000 		.4byte	autosampler_enabled
 4970 0c75 25       		.uleb128 0x25
 4971 0c76 60050000 		.4byte	.LASF174
 4972 0c7a 0E       		.byte	0xe
 4973 0c7b 6B       		.byte	0x6b
 4974 0c7c 7D040000 		.4byte	0x47d
 4975 0c80 05       		.uleb128 0x5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 113


 4976 0c81 03       		.byte	0x3
 4977 0c82 00000000 		.4byte	autosampler_inbox
 4978 0c86 08       		.uleb128 0x8
 4979 0c87 03010000 		.4byte	0x103
 4980 0c8b 970C0000 		.4byte	0xc97
 4981 0c8f 26       		.uleb128 0x26
 4982 0c90 11010000 		.4byte	0x111
 4983 0c94 0F27     		.2byte	0x270f
 4984 0c96 00       		.byte	0
 4985 0c97 25       		.uleb128 0x25
 4986 0c98 8E0A0000 		.4byte	.LASF175
 4987 0c9c 09       		.byte	0x9
 4988 0c9d 1F       		.byte	0x1f
 4989 0c9e 860C0000 		.4byte	0xc86
 4990 0ca2 05       		.uleb128 0x5
 4991 0ca3 03       		.byte	0x3
 4992 0ca4 00000000 		.4byte	http_request
 4993 0ca8 25       		.uleb128 0x25
 4994 0ca9 07020000 		.4byte	.LASF176
 4995 0cad 09       		.byte	0x9
 4996 0cae 20       		.byte	0x20
 4997 0caf 860C0000 		.4byte	0xc86
 4998 0cb3 05       		.uleb128 0x5
 4999 0cb4 03       		.byte	0x3
 5000 0cb5 00000000 		.4byte	http_body
 5001 0cb9 25       		.uleb128 0x25
 5002 0cba 2F080000 		.4byte	.LASF177
 5003 0cbe 09       		.byte	0x9
 5004 0cbf 21       		.byte	0x21
 5005 0cc0 33090000 		.4byte	0x933
 5006 0cc4 05       		.uleb128 0x5
 5007 0cc5 03       		.byte	0x3
 5008 0cc6 00000000 		.4byte	http_route
 5009 0cca 25       		.uleb128 0x25
 5010 0ccb ED080000 		.4byte	.LASF178
 5011 0ccf 09       		.byte	0x9
 5012 0cd0 48       		.byte	0x48
 5013 0cd1 51040000 		.4byte	0x451
 5014 0cd5 05       		.uleb128 0x5
 5015 0cd6 03       		.byte	0x3
 5016 0cd7 00000000 		.4byte	system_info
 5017 0cdb 25       		.uleb128 0x25
 5018 0cdc F9060000 		.4byte	.LASF179
 5019 0ce0 09       		.byte	0x9
 5020 0ce1 5A       		.byte	0x5a
 5021 0ce2 8D040000 		.4byte	0x48d
 5022 0ce6 05       		.uleb128 0x5
 5023 0ce7 03       		.byte	0x3
 5024 0ce8 00000000 		.4byte	system_settings
 5025 0cec 25       		.uleb128 0x25
 5026 0ced 81010000 		.4byte	.LASF180
 5027 0cf1 09       		.byte	0x9
 5028 0cf2 76       		.byte	0x76
 5029 0cf3 1A040000 		.4byte	0x41a
 5030 0cf7 05       		.uleb128 0x5
 5031 0cf8 03       		.byte	0x3
 5032 0cf9 00000000 		.4byte	alarmMeasure
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 114


 5033 0cfd 25       		.uleb128 0x25
 5034 0cfe C6010000 		.4byte	.LASF181
 5035 0d02 09       		.byte	0x9
 5036 0d03 77       		.byte	0x77
 5037 0d04 AD000000 		.4byte	0xad
 5038 0d08 05       		.uleb128 0x5
 5039 0d09 03       		.byte	0x3
 5040 0d0a 00000000 		.4byte	timeToMeasure
 5041 0d0e 25       		.uleb128 0x25
 5042 0d0f B7030000 		.4byte	.LASF182
 5043 0d13 09       		.byte	0x9
 5044 0d14 78       		.byte	0x78
 5045 0d15 1A040000 		.4byte	0x41a
 5046 0d19 05       		.uleb128 0x5
 5047 0d1a 03       		.byte	0x3
 5048 0d1b 00000000 		.4byte	alarmSync
 5049 0d1f 25       		.uleb128 0x25
 5050 0d20 EC010000 		.4byte	.LASF183
 5051 0d24 09       		.byte	0x9
 5052 0d25 79       		.byte	0x79
 5053 0d26 AD000000 		.4byte	0xad
 5054 0d2a 05       		.uleb128 0x5
 5055 0d2b 03       		.byte	0x3
 5056 0d2c 00000000 		.4byte	timeToSync
 5057 0d30 25       		.uleb128 0x25
 5058 0d31 E5050000 		.4byte	.LASF184
 5059 0d35 09       		.byte	0x9
 5060 0d36 7A       		.byte	0x7a
 5061 0d37 AD000000 		.4byte	0xad
 5062 0d3b 05       		.uleb128 0x5
 5063 0d3c 03       		.byte	0x3
 5064 0d3d 00000000 		.4byte	timeToSycnRemoteParams
 5065 0d41 27       		.uleb128 0x27
 5066 0d42 68657900 		.ascii	"hey\000"
 5067 0d46 09       		.byte	0x9
 5068 0d47 7B       		.byte	0x7b
 5069 0d48 AD000000 		.4byte	0xad
 5070 0d4c 05       		.uleb128 0x5
 5071 0d4d 03       		.byte	0x3
 5072 0d4e 00000000 		.4byte	hey
 5073 0d52 25       		.uleb128 0x25
 5074 0d53 DB040000 		.4byte	.LASF185
 5075 0d57 09       		.byte	0x9
 5076 0d58 7F       		.byte	0x7f
 5077 0d59 1A040000 		.4byte	0x41a
 5078 0d5d 05       		.uleb128 0x5
 5079 0d5e 03       		.byte	0x3
 5080 0d5f 00000000 		.4byte	alarmAppLED
 5081 0d63 25       		.uleb128 0x25
 5082 0d64 BD020000 		.4byte	.LASF186
 5083 0d68 09       		.byte	0x9
 5084 0d69 80       		.byte	0x80
 5085 0d6a AD000000 		.4byte	0xad
 5086 0d6e 05       		.uleb128 0x5
 5087 0d6f 03       		.byte	0x3
 5088 0d70 00000000 		.4byte	timeToAppLED
 5089 0d74 25       		.uleb128 0x25
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 115


 5090 0d75 8F070000 		.4byte	.LASF187
 5091 0d79 09       		.byte	0x9
 5092 0d7a 82       		.byte	0x82
 5093 0d7b 1A040000 		.4byte	0x41a
 5094 0d7f 05       		.uleb128 0x5
 5095 0d80 03       		.byte	0x3
 5096 0d81 00000000 		.4byte	alarmLevelSensor
 5097 0d85 25       		.uleb128 0x25
 5098 0d86 72090000 		.4byte	.LASF188
 5099 0d8a 09       		.byte	0x9
 5100 0d8b 83       		.byte	0x83
 5101 0d8c AD000000 		.4byte	0xad
 5102 0d90 05       		.uleb128 0x5
 5103 0d91 03       		.byte	0x3
 5104 0d92 00000000 		.4byte	timeToLevelSensor
 5105 0d96 25       		.uleb128 0x25
 5106 0d97 47020000 		.4byte	.LASF189
 5107 0d9b 09       		.byte	0x9
 5108 0d9c 85       		.byte	0x85
 5109 0d9d 1A040000 		.4byte	0x41a
 5110 0da1 05       		.uleb128 0x5
 5111 0da2 03       		.byte	0x3
 5112 0da3 00000000 		.4byte	alarmDownstreamLevelSensor
 5113 0da7 25       		.uleb128 0x25
 5114 0da8 EB090000 		.4byte	.LASF190
 5115 0dac 09       		.byte	0x9
 5116 0dad 86       		.byte	0x86
 5117 0dae AD000000 		.4byte	0xad
 5118 0db2 05       		.uleb128 0x5
 5119 0db3 03       		.byte	0x3
 5120 0db4 00000000 		.4byte	timeToDownstreamLevelSensor
 5121 0db8 25       		.uleb128 0x25
 5122 0db9 1B080000 		.4byte	.LASF191
 5123 0dbd 09       		.byte	0x9
 5124 0dbe 88       		.byte	0x88
 5125 0dbf 1A040000 		.4byte	0x41a
 5126 0dc3 05       		.uleb128 0x5
 5127 0dc4 03       		.byte	0x3
 5128 0dc5 00000000 		.4byte	alarmValve
 5129 0dc9 25       		.uleb128 0x25
 5130 0dca 00000000 		.4byte	.LASF192
 5131 0dce 09       		.byte	0x9
 5132 0dcf 89       		.byte	0x89
 5133 0dd0 AD000000 		.4byte	0xad
 5134 0dd4 05       		.uleb128 0x5
 5135 0dd5 03       		.byte	0x3
 5136 0dd6 00000000 		.4byte	timeToValve
 5137 0dda 25       		.uleb128 0x25
 5138 0ddb 0F0A0000 		.4byte	.LASF193
 5139 0ddf 09       		.byte	0x9
 5140 0de0 8B       		.byte	0x8b
 5141 0de1 1A040000 		.4byte	0x41a
 5142 0de5 05       		.uleb128 0x5
 5143 0de6 03       		.byte	0x3
 5144 0de7 00000000 		.4byte	alarmAutosampler
 5145 0deb 25       		.uleb128 0x25
 5146 0dec 8B000000 		.4byte	.LASF194
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 116


 5147 0df0 09       		.byte	0x9
 5148 0df1 8C       		.byte	0x8c
 5149 0df2 AD000000 		.4byte	0xad
 5150 0df6 05       		.uleb128 0x5
 5151 0df7 03       		.byte	0x3
 5152 0df8 00000000 		.4byte	timeToAutosampler
 5153 0dfc 08       		.uleb128 0x8
 5154 0dfd 03010000 		.4byte	0x103
 5155 0e01 0D0E0000 		.4byte	0xe0d
 5156 0e05 26       		.uleb128 0x26
 5157 0e06 11010000 		.4byte	0x111
 5158 0e0a FF03     		.2byte	0x3ff
 5159 0e0c 00       		.byte	0
 5160 0e0d 25       		.uleb128 0x25
 5161 0e0e A7080000 		.4byte	.LASF195
 5162 0e12 01       		.byte	0x1
 5163 0e13 05       		.byte	0x5
 5164 0e14 FC0D0000 		.4byte	0xdfc
 5165 0e18 05       		.uleb128 0x5
 5166 0e19 03       		.byte	0x3
 5167 0e1a 00000000 		.4byte	uart_received_string
 5168 0e1e 25       		.uleb128 0x25
 5169 0e1f 58080000 		.4byte	.LASF196
 5170 0e23 01       		.byte	0x1
 5171 0e24 06       		.byte	0x6
 5172 0e25 D1000000 		.4byte	0xd1
 5173 0e29 05       		.uleb128 0x5
 5174 0e2a 03       		.byte	0x3
 5175 0e2b 00000000 		.4byte	uart_string_index
 5176 0e2f 00       		.byte	0
 5177              		.section	.debug_abbrev,"",%progbits
 5178              	.Ldebug_abbrev0:
 5179 0000 01       		.uleb128 0x1
 5180 0001 11       		.uleb128 0x11
 5181 0002 01       		.byte	0x1
 5182 0003 25       		.uleb128 0x25
 5183 0004 0E       		.uleb128 0xe
 5184 0005 13       		.uleb128 0x13
 5185 0006 0B       		.uleb128 0xb
 5186 0007 03       		.uleb128 0x3
 5187 0008 0E       		.uleb128 0xe
 5188 0009 1B       		.uleb128 0x1b
 5189 000a 0E       		.uleb128 0xe
 5190 000b 55       		.uleb128 0x55
 5191 000c 17       		.uleb128 0x17
 5192 000d 11       		.uleb128 0x11
 5193 000e 01       		.uleb128 0x1
 5194 000f 10       		.uleb128 0x10
 5195 0010 17       		.uleb128 0x17
 5196 0011 00       		.byte	0
 5197 0012 00       		.byte	0
 5198 0013 02       		.uleb128 0x2
 5199 0014 24       		.uleb128 0x24
 5200 0015 00       		.byte	0
 5201 0016 0B       		.uleb128 0xb
 5202 0017 0B       		.uleb128 0xb
 5203 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 117


 5204 0019 0B       		.uleb128 0xb
 5205 001a 03       		.uleb128 0x3
 5206 001b 0E       		.uleb128 0xe
 5207 001c 00       		.byte	0
 5208 001d 00       		.byte	0
 5209 001e 03       		.uleb128 0x3
 5210 001f 16       		.uleb128 0x16
 5211 0020 00       		.byte	0
 5212 0021 03       		.uleb128 0x3
 5213 0022 0E       		.uleb128 0xe
 5214 0023 3A       		.uleb128 0x3a
 5215 0024 0B       		.uleb128 0xb
 5216 0025 3B       		.uleb128 0x3b
 5217 0026 0B       		.uleb128 0xb
 5218 0027 49       		.uleb128 0x49
 5219 0028 13       		.uleb128 0x13
 5220 0029 00       		.byte	0
 5221 002a 00       		.byte	0
 5222 002b 04       		.uleb128 0x4
 5223 002c 24       		.uleb128 0x24
 5224 002d 00       		.byte	0
 5225 002e 0B       		.uleb128 0xb
 5226 002f 0B       		.uleb128 0xb
 5227 0030 3E       		.uleb128 0x3e
 5228 0031 0B       		.uleb128 0xb
 5229 0032 03       		.uleb128 0x3
 5230 0033 08       		.uleb128 0x8
 5231 0034 00       		.byte	0
 5232 0035 00       		.byte	0
 5233 0036 05       		.uleb128 0x5
 5234 0037 16       		.uleb128 0x16
 5235 0038 00       		.byte	0
 5236 0039 03       		.uleb128 0x3
 5237 003a 0E       		.uleb128 0xe
 5238 003b 3A       		.uleb128 0x3a
 5239 003c 0B       		.uleb128 0xb
 5240 003d 3B       		.uleb128 0x3b
 5241 003e 05       		.uleb128 0x5
 5242 003f 49       		.uleb128 0x49
 5243 0040 13       		.uleb128 0x13
 5244 0041 00       		.byte	0
 5245 0042 00       		.byte	0
 5246 0043 06       		.uleb128 0x6
 5247 0044 0F       		.uleb128 0xf
 5248 0045 00       		.byte	0
 5249 0046 0B       		.uleb128 0xb
 5250 0047 0B       		.uleb128 0xb
 5251 0048 49       		.uleb128 0x49
 5252 0049 13       		.uleb128 0x13
 5253 004a 00       		.byte	0
 5254 004b 00       		.byte	0
 5255 004c 07       		.uleb128 0x7
 5256 004d 26       		.uleb128 0x26
 5257 004e 00       		.byte	0
 5258 004f 49       		.uleb128 0x49
 5259 0050 13       		.uleb128 0x13
 5260 0051 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 118


 5261 0052 00       		.byte	0
 5262 0053 08       		.uleb128 0x8
 5263 0054 01       		.uleb128 0x1
 5264 0055 01       		.byte	0x1
 5265 0056 49       		.uleb128 0x49
 5266 0057 13       		.uleb128 0x13
 5267 0058 01       		.uleb128 0x1
 5268 0059 13       		.uleb128 0x13
 5269 005a 00       		.byte	0
 5270 005b 00       		.byte	0
 5271 005c 09       		.uleb128 0x9
 5272 005d 21       		.uleb128 0x21
 5273 005e 00       		.byte	0
 5274 005f 49       		.uleb128 0x49
 5275 0060 13       		.uleb128 0x13
 5276 0061 2F       		.uleb128 0x2f
 5277 0062 0B       		.uleb128 0xb
 5278 0063 00       		.byte	0
 5279 0064 00       		.byte	0
 5280 0065 0A       		.uleb128 0xa
 5281 0066 13       		.uleb128 0x13
 5282 0067 01       		.byte	0x1
 5283 0068 03       		.uleb128 0x3
 5284 0069 08       		.uleb128 0x8
 5285 006a 0B       		.uleb128 0xb
 5286 006b 0B       		.uleb128 0xb
 5287 006c 3A       		.uleb128 0x3a
 5288 006d 0B       		.uleb128 0xb
 5289 006e 3B       		.uleb128 0x3b
 5290 006f 0B       		.uleb128 0xb
 5291 0070 01       		.uleb128 0x1
 5292 0071 13       		.uleb128 0x13
 5293 0072 00       		.byte	0
 5294 0073 00       		.byte	0
 5295 0074 0B       		.uleb128 0xb
 5296 0075 0D       		.uleb128 0xd
 5297 0076 00       		.byte	0
 5298 0077 03       		.uleb128 0x3
 5299 0078 0E       		.uleb128 0xe
 5300 0079 3A       		.uleb128 0x3a
 5301 007a 0B       		.uleb128 0xb
 5302 007b 3B       		.uleb128 0x3b
 5303 007c 0B       		.uleb128 0xb
 5304 007d 49       		.uleb128 0x49
 5305 007e 13       		.uleb128 0x13
 5306 007f 38       		.uleb128 0x38
 5307 0080 0B       		.uleb128 0xb
 5308 0081 00       		.byte	0
 5309 0082 00       		.byte	0
 5310 0083 0C       		.uleb128 0xc
 5311 0084 13       		.uleb128 0x13
 5312 0085 01       		.byte	0x1
 5313 0086 0B       		.uleb128 0xb
 5314 0087 05       		.uleb128 0x5
 5315 0088 3A       		.uleb128 0x3a
 5316 0089 0B       		.uleb128 0xb
 5317 008a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 119


 5318 008b 0B       		.uleb128 0xb
 5319 008c 01       		.uleb128 0x1
 5320 008d 13       		.uleb128 0x13
 5321 008e 00       		.byte	0
 5322 008f 00       		.byte	0
 5323 0090 0D       		.uleb128 0xd
 5324 0091 13       		.uleb128 0x13
 5325 0092 01       		.byte	0x1
 5326 0093 0B       		.uleb128 0xb
 5327 0094 0B       		.uleb128 0xb
 5328 0095 3A       		.uleb128 0x3a
 5329 0096 0B       		.uleb128 0xb
 5330 0097 3B       		.uleb128 0x3b
 5331 0098 0B       		.uleb128 0xb
 5332 0099 01       		.uleb128 0x1
 5333 009a 13       		.uleb128 0x13
 5334 009b 00       		.byte	0
 5335 009c 00       		.byte	0
 5336 009d 0E       		.uleb128 0xe
 5337 009e 0D       		.uleb128 0xd
 5338 009f 00       		.byte	0
 5339 00a0 03       		.uleb128 0x3
 5340 00a1 08       		.uleb128 0x8
 5341 00a2 3A       		.uleb128 0x3a
 5342 00a3 0B       		.uleb128 0xb
 5343 00a4 3B       		.uleb128 0x3b
 5344 00a5 0B       		.uleb128 0xb
 5345 00a6 49       		.uleb128 0x49
 5346 00a7 13       		.uleb128 0x13
 5347 00a8 38       		.uleb128 0x38
 5348 00a9 0B       		.uleb128 0xb
 5349 00aa 00       		.byte	0
 5350 00ab 00       		.byte	0
 5351 00ac 0F       		.uleb128 0xf
 5352 00ad 35       		.uleb128 0x35
 5353 00ae 00       		.byte	0
 5354 00af 49       		.uleb128 0x49
 5355 00b0 13       		.uleb128 0x13
 5356 00b1 00       		.byte	0
 5357 00b2 00       		.byte	0
 5358 00b3 10       		.uleb128 0x10
 5359 00b4 2E       		.uleb128 0x2e
 5360 00b5 00       		.byte	0
 5361 00b6 3F       		.uleb128 0x3f
 5362 00b7 19       		.uleb128 0x19
 5363 00b8 03       		.uleb128 0x3
 5364 00b9 0E       		.uleb128 0xe
 5365 00ba 3A       		.uleb128 0x3a
 5366 00bb 0B       		.uleb128 0xb
 5367 00bc 3B       		.uleb128 0x3b
 5368 00bd 0B       		.uleb128 0xb
 5369 00be 27       		.uleb128 0x27
 5370 00bf 19       		.uleb128 0x19
 5371 00c0 11       		.uleb128 0x11
 5372 00c1 01       		.uleb128 0x1
 5373 00c2 12       		.uleb128 0x12
 5374 00c3 06       		.uleb128 0x6
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 120


 5375 00c4 40       		.uleb128 0x40
 5376 00c5 18       		.uleb128 0x18
 5377 00c6 9642     		.uleb128 0x2116
 5378 00c8 19       		.uleb128 0x19
 5379 00c9 00       		.byte	0
 5380 00ca 00       		.byte	0
 5381 00cb 11       		.uleb128 0x11
 5382 00cc 2E       		.uleb128 0x2e
 5383 00cd 00       		.byte	0
 5384 00ce 3F       		.uleb128 0x3f
 5385 00cf 19       		.uleb128 0x19
 5386 00d0 03       		.uleb128 0x3
 5387 00d1 0E       		.uleb128 0xe
 5388 00d2 3A       		.uleb128 0x3a
 5389 00d3 0B       		.uleb128 0xb
 5390 00d4 3B       		.uleb128 0x3b
 5391 00d5 0B       		.uleb128 0xb
 5392 00d6 11       		.uleb128 0x11
 5393 00d7 01       		.uleb128 0x1
 5394 00d8 12       		.uleb128 0x12
 5395 00d9 06       		.uleb128 0x6
 5396 00da 40       		.uleb128 0x40
 5397 00db 18       		.uleb128 0x18
 5398 00dc 9642     		.uleb128 0x2116
 5399 00de 19       		.uleb128 0x19
 5400 00df 00       		.byte	0
 5401 00e0 00       		.byte	0
 5402 00e1 12       		.uleb128 0x12
 5403 00e2 2E       		.uleb128 0x2e
 5404 00e3 01       		.byte	0x1
 5405 00e4 3F       		.uleb128 0x3f
 5406 00e5 19       		.uleb128 0x19
 5407 00e6 03       		.uleb128 0x3
 5408 00e7 0E       		.uleb128 0xe
 5409 00e8 3A       		.uleb128 0x3a
 5410 00e9 0B       		.uleb128 0xb
 5411 00ea 3B       		.uleb128 0x3b
 5412 00eb 0B       		.uleb128 0xb
 5413 00ec 49       		.uleb128 0x49
 5414 00ed 13       		.uleb128 0x13
 5415 00ee 11       		.uleb128 0x11
 5416 00ef 01       		.uleb128 0x1
 5417 00f0 12       		.uleb128 0x12
 5418 00f1 06       		.uleb128 0x6
 5419 00f2 40       		.uleb128 0x40
 5420 00f3 18       		.uleb128 0x18
 5421 00f4 9642     		.uleb128 0x2116
 5422 00f6 19       		.uleb128 0x19
 5423 00f7 01       		.uleb128 0x1
 5424 00f8 13       		.uleb128 0x13
 5425 00f9 00       		.byte	0
 5426 00fa 00       		.byte	0
 5427 00fb 13       		.uleb128 0x13
 5428 00fc 34       		.uleb128 0x34
 5429 00fd 00       		.byte	0
 5430 00fe 03       		.uleb128 0x3
 5431 00ff 0E       		.uleb128 0xe
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 121


 5432 0100 3A       		.uleb128 0x3a
 5433 0101 0B       		.uleb128 0xb
 5434 0102 3B       		.uleb128 0x3b
 5435 0103 0B       		.uleb128 0xb
 5436 0104 49       		.uleb128 0x49
 5437 0105 13       		.uleb128 0x13
 5438 0106 02       		.uleb128 0x2
 5439 0107 18       		.uleb128 0x18
 5440 0108 00       		.byte	0
 5441 0109 00       		.byte	0
 5442 010a 14       		.uleb128 0x14
 5443 010b 0B       		.uleb128 0xb
 5444 010c 01       		.byte	0x1
 5445 010d 11       		.uleb128 0x11
 5446 010e 01       		.uleb128 0x1
 5447 010f 12       		.uleb128 0x12
 5448 0110 06       		.uleb128 0x6
 5449 0111 00       		.byte	0
 5450 0112 00       		.byte	0
 5451 0113 15       		.uleb128 0x15
 5452 0114 2E       		.uleb128 0x2e
 5453 0115 01       		.byte	0x1
 5454 0116 3F       		.uleb128 0x3f
 5455 0117 19       		.uleb128 0x19
 5456 0118 03       		.uleb128 0x3
 5457 0119 0E       		.uleb128 0xe
 5458 011a 3A       		.uleb128 0x3a
 5459 011b 0B       		.uleb128 0xb
 5460 011c 3B       		.uleb128 0x3b
 5461 011d 0B       		.uleb128 0xb
 5462 011e 27       		.uleb128 0x27
 5463 011f 19       		.uleb128 0x19
 5464 0120 49       		.uleb128 0x49
 5465 0121 13       		.uleb128 0x13
 5466 0122 11       		.uleb128 0x11
 5467 0123 01       		.uleb128 0x1
 5468 0124 12       		.uleb128 0x12
 5469 0125 06       		.uleb128 0x6
 5470 0126 40       		.uleb128 0x40
 5471 0127 18       		.uleb128 0x18
 5472 0128 9642     		.uleb128 0x2116
 5473 012a 19       		.uleb128 0x19
 5474 012b 01       		.uleb128 0x1
 5475 012c 13       		.uleb128 0x13
 5476 012d 00       		.byte	0
 5477 012e 00       		.byte	0
 5478 012f 16       		.uleb128 0x16
 5479 0130 05       		.uleb128 0x5
 5480 0131 00       		.byte	0
 5481 0132 03       		.uleb128 0x3
 5482 0133 0E       		.uleb128 0xe
 5483 0134 3A       		.uleb128 0x3a
 5484 0135 0B       		.uleb128 0xb
 5485 0136 3B       		.uleb128 0x3b
 5486 0137 0B       		.uleb128 0xb
 5487 0138 49       		.uleb128 0x49
 5488 0139 13       		.uleb128 0x13
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 122


 5489 013a 02       		.uleb128 0x2
 5490 013b 18       		.uleb128 0x18
 5491 013c 00       		.byte	0
 5492 013d 00       		.byte	0
 5493 013e 17       		.uleb128 0x17
 5494 013f 34       		.uleb128 0x34
 5495 0140 00       		.byte	0
 5496 0141 03       		.uleb128 0x3
 5497 0142 08       		.uleb128 0x8
 5498 0143 3A       		.uleb128 0x3a
 5499 0144 0B       		.uleb128 0xb
 5500 0145 3B       		.uleb128 0x3b
 5501 0146 0B       		.uleb128 0xb
 5502 0147 49       		.uleb128 0x49
 5503 0148 13       		.uleb128 0x13
 5504 0149 02       		.uleb128 0x2
 5505 014a 18       		.uleb128 0x18
 5506 014b 00       		.byte	0
 5507 014c 00       		.byte	0
 5508 014d 18       		.uleb128 0x18
 5509 014e 2E       		.uleb128 0x2e
 5510 014f 01       		.byte	0x1
 5511 0150 3F       		.uleb128 0x3f
 5512 0151 19       		.uleb128 0x19
 5513 0152 03       		.uleb128 0x3
 5514 0153 0E       		.uleb128 0xe
 5515 0154 3A       		.uleb128 0x3a
 5516 0155 0B       		.uleb128 0xb
 5517 0156 3B       		.uleb128 0x3b
 5518 0157 05       		.uleb128 0x5
 5519 0158 27       		.uleb128 0x27
 5520 0159 19       		.uleb128 0x19
 5521 015a 49       		.uleb128 0x49
 5522 015b 13       		.uleb128 0x13
 5523 015c 11       		.uleb128 0x11
 5524 015d 01       		.uleb128 0x1
 5525 015e 12       		.uleb128 0x12
 5526 015f 06       		.uleb128 0x6
 5527 0160 40       		.uleb128 0x40
 5528 0161 18       		.uleb128 0x18
 5529 0162 9642     		.uleb128 0x2116
 5530 0164 19       		.uleb128 0x19
 5531 0165 01       		.uleb128 0x1
 5532 0166 13       		.uleb128 0x13
 5533 0167 00       		.byte	0
 5534 0168 00       		.byte	0
 5535 0169 19       		.uleb128 0x19
 5536 016a 05       		.uleb128 0x5
 5537 016b 00       		.byte	0
 5538 016c 03       		.uleb128 0x3
 5539 016d 0E       		.uleb128 0xe
 5540 016e 3A       		.uleb128 0x3a
 5541 016f 0B       		.uleb128 0xb
 5542 0170 3B       		.uleb128 0x3b
 5543 0171 05       		.uleb128 0x5
 5544 0172 49       		.uleb128 0x49
 5545 0173 13       		.uleb128 0x13
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 123


 5546 0174 02       		.uleb128 0x2
 5547 0175 18       		.uleb128 0x18
 5548 0176 00       		.byte	0
 5549 0177 00       		.byte	0
 5550 0178 1A       		.uleb128 0x1a
 5551 0179 34       		.uleb128 0x34
 5552 017a 00       		.byte	0
 5553 017b 03       		.uleb128 0x3
 5554 017c 08       		.uleb128 0x8
 5555 017d 3A       		.uleb128 0x3a
 5556 017e 0B       		.uleb128 0xb
 5557 017f 3B       		.uleb128 0x3b
 5558 0180 05       		.uleb128 0x5
 5559 0181 49       		.uleb128 0x49
 5560 0182 13       		.uleb128 0x13
 5561 0183 02       		.uleb128 0x2
 5562 0184 18       		.uleb128 0x18
 5563 0185 00       		.byte	0
 5564 0186 00       		.byte	0
 5565 0187 1B       		.uleb128 0x1b
 5566 0188 2E       		.uleb128 0x2e
 5567 0189 01       		.byte	0x1
 5568 018a 3F       		.uleb128 0x3f
 5569 018b 19       		.uleb128 0x19
 5570 018c 03       		.uleb128 0x3
 5571 018d 0E       		.uleb128 0xe
 5572 018e 3A       		.uleb128 0x3a
 5573 018f 0B       		.uleb128 0xb
 5574 0190 3B       		.uleb128 0x3b
 5575 0191 05       		.uleb128 0x5
 5576 0192 49       		.uleb128 0x49
 5577 0193 13       		.uleb128 0x13
 5578 0194 11       		.uleb128 0x11
 5579 0195 01       		.uleb128 0x1
 5580 0196 12       		.uleb128 0x12
 5581 0197 06       		.uleb128 0x6
 5582 0198 40       		.uleb128 0x40
 5583 0199 18       		.uleb128 0x18
 5584 019a 9642     		.uleb128 0x2116
 5585 019c 19       		.uleb128 0x19
 5586 019d 01       		.uleb128 0x1
 5587 019e 13       		.uleb128 0x13
 5588 019f 00       		.byte	0
 5589 01a0 00       		.byte	0
 5590 01a1 1C       		.uleb128 0x1c
 5591 01a2 34       		.uleb128 0x34
 5592 01a3 00       		.byte	0
 5593 01a4 03       		.uleb128 0x3
 5594 01a5 0E       		.uleb128 0xe
 5595 01a6 3A       		.uleb128 0x3a
 5596 01a7 0B       		.uleb128 0xb
 5597 01a8 3B       		.uleb128 0x3b
 5598 01a9 05       		.uleb128 0x5
 5599 01aa 49       		.uleb128 0x49
 5600 01ab 13       		.uleb128 0x13
 5601 01ac 02       		.uleb128 0x2
 5602 01ad 18       		.uleb128 0x18
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 124


 5603 01ae 00       		.byte	0
 5604 01af 00       		.byte	0
 5605 01b0 1D       		.uleb128 0x1d
 5606 01b1 2E       		.uleb128 0x2e
 5607 01b2 00       		.byte	0
 5608 01b3 3F       		.uleb128 0x3f
 5609 01b4 19       		.uleb128 0x19
 5610 01b5 03       		.uleb128 0x3
 5611 01b6 0E       		.uleb128 0xe
 5612 01b7 3A       		.uleb128 0x3a
 5613 01b8 0B       		.uleb128 0xb
 5614 01b9 3B       		.uleb128 0x3b
 5615 01ba 05       		.uleb128 0x5
 5616 01bb 11       		.uleb128 0x11
 5617 01bc 01       		.uleb128 0x1
 5618 01bd 12       		.uleb128 0x12
 5619 01be 06       		.uleb128 0x6
 5620 01bf 40       		.uleb128 0x40
 5621 01c0 18       		.uleb128 0x18
 5622 01c1 9642     		.uleb128 0x2116
 5623 01c3 19       		.uleb128 0x19
 5624 01c4 00       		.byte	0
 5625 01c5 00       		.byte	0
 5626 01c6 1E       		.uleb128 0x1e
 5627 01c7 2E       		.uleb128 0x2e
 5628 01c8 00       		.byte	0
 5629 01c9 3F       		.uleb128 0x3f
 5630 01ca 19       		.uleb128 0x19
 5631 01cb 03       		.uleb128 0x3
 5632 01cc 0E       		.uleb128 0xe
 5633 01cd 3A       		.uleb128 0x3a
 5634 01ce 0B       		.uleb128 0xb
 5635 01cf 3B       		.uleb128 0x3b
 5636 01d0 05       		.uleb128 0x5
 5637 01d1 49       		.uleb128 0x49
 5638 01d2 13       		.uleb128 0x13
 5639 01d3 11       		.uleb128 0x11
 5640 01d4 01       		.uleb128 0x1
 5641 01d5 12       		.uleb128 0x12
 5642 01d6 06       		.uleb128 0x6
 5643 01d7 40       		.uleb128 0x40
 5644 01d8 18       		.uleb128 0x18
 5645 01d9 9642     		.uleb128 0x2116
 5646 01db 19       		.uleb128 0x19
 5647 01dc 00       		.byte	0
 5648 01dd 00       		.byte	0
 5649 01de 1F       		.uleb128 0x1f
 5650 01df 2E       		.uleb128 0x2e
 5651 01e0 01       		.byte	0x1
 5652 01e1 3F       		.uleb128 0x3f
 5653 01e2 19       		.uleb128 0x19
 5654 01e3 03       		.uleb128 0x3
 5655 01e4 0E       		.uleb128 0xe
 5656 01e5 3A       		.uleb128 0x3a
 5657 01e6 0B       		.uleb128 0xb
 5658 01e7 3B       		.uleb128 0x3b
 5659 01e8 05       		.uleb128 0x5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 125


 5660 01e9 11       		.uleb128 0x11
 5661 01ea 01       		.uleb128 0x1
 5662 01eb 12       		.uleb128 0x12
 5663 01ec 06       		.uleb128 0x6
 5664 01ed 40       		.uleb128 0x40
 5665 01ee 18       		.uleb128 0x18
 5666 01ef 9642     		.uleb128 0x2116
 5667 01f1 19       		.uleb128 0x19
 5668 01f2 01       		.uleb128 0x1
 5669 01f3 13       		.uleb128 0x13
 5670 01f4 00       		.byte	0
 5671 01f5 00       		.byte	0
 5672 01f6 20       		.uleb128 0x20
 5673 01f7 2E       		.uleb128 0x2e
 5674 01f8 00       		.byte	0
 5675 01f9 3F       		.uleb128 0x3f
 5676 01fa 19       		.uleb128 0x19
 5677 01fb 03       		.uleb128 0x3
 5678 01fc 0E       		.uleb128 0xe
 5679 01fd 3A       		.uleb128 0x3a
 5680 01fe 0B       		.uleb128 0xb
 5681 01ff 3B       		.uleb128 0x3b
 5682 0200 05       		.uleb128 0x5
 5683 0201 11       		.uleb128 0x11
 5684 0202 01       		.uleb128 0x1
 5685 0203 12       		.uleb128 0x12
 5686 0204 06       		.uleb128 0x6
 5687 0205 40       		.uleb128 0x40
 5688 0206 18       		.uleb128 0x18
 5689 0207 9742     		.uleb128 0x2117
 5690 0209 19       		.uleb128 0x19
 5691 020a 00       		.byte	0
 5692 020b 00       		.byte	0
 5693 020c 21       		.uleb128 0x21
 5694 020d 34       		.uleb128 0x34
 5695 020e 00       		.byte	0
 5696 020f 03       		.uleb128 0x3
 5697 0210 0E       		.uleb128 0xe
 5698 0211 3A       		.uleb128 0x3a
 5699 0212 0B       		.uleb128 0xb
 5700 0213 3B       		.uleb128 0x3b
 5701 0214 05       		.uleb128 0x5
 5702 0215 49       		.uleb128 0x49
 5703 0216 13       		.uleb128 0x13
 5704 0217 00       		.byte	0
 5705 0218 00       		.byte	0
 5706 0219 22       		.uleb128 0x22
 5707 021a 0B       		.uleb128 0xb
 5708 021b 01       		.byte	0x1
 5709 021c 55       		.uleb128 0x55
 5710 021d 17       		.uleb128 0x17
 5711 021e 00       		.byte	0
 5712 021f 00       		.byte	0
 5713 0220 23       		.uleb128 0x23
 5714 0221 2E       		.uleb128 0x2e
 5715 0222 00       		.byte	0
 5716 0223 3F       		.uleb128 0x3f
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 126


 5717 0224 19       		.uleb128 0x19
 5718 0225 03       		.uleb128 0x3
 5719 0226 0E       		.uleb128 0xe
 5720 0227 3A       		.uleb128 0x3a
 5721 0228 0B       		.uleb128 0xb
 5722 0229 3B       		.uleb128 0x3b
 5723 022a 05       		.uleb128 0x5
 5724 022b 49       		.uleb128 0x49
 5725 022c 13       		.uleb128 0x13
 5726 022d 11       		.uleb128 0x11
 5727 022e 01       		.uleb128 0x1
 5728 022f 12       		.uleb128 0x12
 5729 0230 06       		.uleb128 0x6
 5730 0231 40       		.uleb128 0x40
 5731 0232 18       		.uleb128 0x18
 5732 0233 9742     		.uleb128 0x2117
 5733 0235 19       		.uleb128 0x19
 5734 0236 00       		.byte	0
 5735 0237 00       		.byte	0
 5736 0238 24       		.uleb128 0x24
 5737 0239 34       		.uleb128 0x34
 5738 023a 00       		.byte	0
 5739 023b 03       		.uleb128 0x3
 5740 023c 0E       		.uleb128 0xe
 5741 023d 3A       		.uleb128 0x3a
 5742 023e 0B       		.uleb128 0xb
 5743 023f 3B       		.uleb128 0x3b
 5744 0240 05       		.uleb128 0x5
 5745 0241 49       		.uleb128 0x49
 5746 0242 13       		.uleb128 0x13
 5747 0243 3F       		.uleb128 0x3f
 5748 0244 19       		.uleb128 0x19
 5749 0245 3C       		.uleb128 0x3c
 5750 0246 19       		.uleb128 0x19
 5751 0247 00       		.byte	0
 5752 0248 00       		.byte	0
 5753 0249 25       		.uleb128 0x25
 5754 024a 34       		.uleb128 0x34
 5755 024b 00       		.byte	0
 5756 024c 03       		.uleb128 0x3
 5757 024d 0E       		.uleb128 0xe
 5758 024e 3A       		.uleb128 0x3a
 5759 024f 0B       		.uleb128 0xb
 5760 0250 3B       		.uleb128 0x3b
 5761 0251 0B       		.uleb128 0xb
 5762 0252 49       		.uleb128 0x49
 5763 0253 13       		.uleb128 0x13
 5764 0254 3F       		.uleb128 0x3f
 5765 0255 19       		.uleb128 0x19
 5766 0256 02       		.uleb128 0x2
 5767 0257 18       		.uleb128 0x18
 5768 0258 00       		.byte	0
 5769 0259 00       		.byte	0
 5770 025a 26       		.uleb128 0x26
 5771 025b 21       		.uleb128 0x21
 5772 025c 00       		.byte	0
 5773 025d 49       		.uleb128 0x49
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 127


 5774 025e 13       		.uleb128 0x13
 5775 025f 2F       		.uleb128 0x2f
 5776 0260 05       		.uleb128 0x5
 5777 0261 00       		.byte	0
 5778 0262 00       		.byte	0
 5779 0263 27       		.uleb128 0x27
 5780 0264 34       		.uleb128 0x34
 5781 0265 00       		.byte	0
 5782 0266 03       		.uleb128 0x3
 5783 0267 08       		.uleb128 0x8
 5784 0268 3A       		.uleb128 0x3a
 5785 0269 0B       		.uleb128 0xb
 5786 026a 3B       		.uleb128 0x3b
 5787 026b 0B       		.uleb128 0xb
 5788 026c 49       		.uleb128 0x49
 5789 026d 13       		.uleb128 0x13
 5790 026e 3F       		.uleb128 0x3f
 5791 026f 19       		.uleb128 0x19
 5792 0270 02       		.uleb128 0x2
 5793 0271 18       		.uleb128 0x18
 5794 0272 00       		.byte	0
 5795 0273 00       		.byte	0
 5796 0274 00       		.byte	0
 5797              		.section	.debug_aranges,"",%progbits
 5798 0000 D4000000 		.4byte	0xd4
 5799 0004 0200     		.2byte	0x2
 5800 0006 00000000 		.4byte	.Ldebug_info0
 5801 000a 04       		.byte	0x4
 5802 000b 00       		.byte	0
 5803 000c 0000     		.2byte	0
 5804 000e 0000     		.2byte	0
 5805 0010 00000000 		.4byte	.LFB64
 5806 0014 44000000 		.4byte	.LFE64-.LFB64
 5807 0018 00000000 		.4byte	.LFB65
 5808 001c 6C000000 		.4byte	.LFE65-.LFB65
 5809 0020 00000000 		.4byte	.LFB66
 5810 0024 32000000 		.4byte	.LFE66-.LFB66
 5811 0028 00000000 		.4byte	.LFB67
 5812 002c 20000000 		.4byte	.LFE67-.LFB67
 5813 0030 00000000 		.4byte	.LFB68
 5814 0034 40000000 		.4byte	.LFE68-.LFB68
 5815 0038 00000000 		.4byte	.LFB69
 5816 003c DC000000 		.4byte	.LFE69-.LFB69
 5817 0040 00000000 		.4byte	.LFB70
 5818 0044 1C000000 		.4byte	.LFE70-.LFB70
 5819 0048 00000000 		.4byte	.LFB71
 5820 004c 28000000 		.4byte	.LFE71-.LFB71
 5821 0050 00000000 		.4byte	.LFB72
 5822 0054 C8000000 		.4byte	.LFE72-.LFB72
 5823 0058 00000000 		.4byte	.LFB73
 5824 005c 00010000 		.4byte	.LFE73-.LFB73
 5825 0060 00000000 		.4byte	.LFB74
 5826 0064 78000000 		.4byte	.LFE74-.LFB74
 5827 0068 00000000 		.4byte	.LFB75
 5828 006c 74010000 		.4byte	.LFE75-.LFB75
 5829 0070 00000000 		.4byte	.LFB76
 5830 0074 B8000000 		.4byte	.LFE76-.LFB76
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 128


 5831 0078 00000000 		.4byte	.LFB77
 5832 007c 1C000000 		.4byte	.LFE77-.LFB77
 5833 0080 00000000 		.4byte	.LFB78
 5834 0084 28000000 		.4byte	.LFE78-.LFB78
 5835 0088 00000000 		.4byte	.LFB79
 5836 008c 84000000 		.4byte	.LFE79-.LFB79
 5837 0090 00000000 		.4byte	.LFB80
 5838 0094 4C000000 		.4byte	.LFE80-.LFB80
 5839 0098 00000000 		.4byte	.LFB81
 5840 009c E0050000 		.4byte	.LFE81-.LFB81
 5841 00a0 00000000 		.4byte	.LFB82
 5842 00a4 68010000 		.4byte	.LFE82-.LFB82
 5843 00a8 00000000 		.4byte	.LFB83
 5844 00ac 44010000 		.4byte	.LFE83-.LFB83
 5845 00b0 00000000 		.4byte	.LFB84
 5846 00b4 14000000 		.4byte	.LFE84-.LFB84
 5847 00b8 00000000 		.4byte	.LFB85
 5848 00bc 1A000000 		.4byte	.LFE85-.LFB85
 5849 00c0 00000000 		.4byte	.LFB86
 5850 00c4 2A000000 		.4byte	.LFE86-.LFB86
 5851 00c8 00000000 		.4byte	.LFB87
 5852 00cc 7C020000 		.4byte	.LFE87-.LFB87
 5853 00d0 00000000 		.4byte	0
 5854 00d4 00000000 		.4byte	0
 5855              		.section	.debug_ranges,"",%progbits
 5856              	.Ldebug_ranges0:
 5857 0000 8A030000 		.4byte	.LBB9
 5858 0004 70050000 		.4byte	.LBE9
 5859 0008 72050000 		.4byte	.LBB10
 5860 000c 7A050000 		.4byte	.LBE10
 5861 0010 7C050000 		.4byte	.LBB11
 5862 0014 84050000 		.4byte	.LBE11
 5863 0018 00000000 		.4byte	0
 5864 001c 00000000 		.4byte	0
 5865 0020 00000000 		.4byte	.LFB64
 5866 0024 44000000 		.4byte	.LFE64
 5867 0028 00000000 		.4byte	.LFB65
 5868 002c 6C000000 		.4byte	.LFE65
 5869 0030 00000000 		.4byte	.LFB66
 5870 0034 32000000 		.4byte	.LFE66
 5871 0038 00000000 		.4byte	.LFB67
 5872 003c 20000000 		.4byte	.LFE67
 5873 0040 00000000 		.4byte	.LFB68
 5874 0044 40000000 		.4byte	.LFE68
 5875 0048 00000000 		.4byte	.LFB69
 5876 004c DC000000 		.4byte	.LFE69
 5877 0050 00000000 		.4byte	.LFB70
 5878 0054 1C000000 		.4byte	.LFE70
 5879 0058 00000000 		.4byte	.LFB71
 5880 005c 28000000 		.4byte	.LFE71
 5881 0060 00000000 		.4byte	.LFB72
 5882 0064 C8000000 		.4byte	.LFE72
 5883 0068 00000000 		.4byte	.LFB73
 5884 006c 00010000 		.4byte	.LFE73
 5885 0070 00000000 		.4byte	.LFB74
 5886 0074 78000000 		.4byte	.LFE74
 5887 0078 00000000 		.4byte	.LFB75
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 129


 5888 007c 74010000 		.4byte	.LFE75
 5889 0080 00000000 		.4byte	.LFB76
 5890 0084 B8000000 		.4byte	.LFE76
 5891 0088 00000000 		.4byte	.LFB77
 5892 008c 1C000000 		.4byte	.LFE77
 5893 0090 00000000 		.4byte	.LFB78
 5894 0094 28000000 		.4byte	.LFE78
 5895 0098 00000000 		.4byte	.LFB79
 5896 009c 84000000 		.4byte	.LFE79
 5897 00a0 00000000 		.4byte	.LFB80
 5898 00a4 4C000000 		.4byte	.LFE80
 5899 00a8 00000000 		.4byte	.LFB81
 5900 00ac E0050000 		.4byte	.LFE81
 5901 00b0 00000000 		.4byte	.LFB82
 5902 00b4 68010000 		.4byte	.LFE82
 5903 00b8 00000000 		.4byte	.LFB83
 5904 00bc 44010000 		.4byte	.LFE83
 5905 00c0 00000000 		.4byte	.LFB84
 5906 00c4 14000000 		.4byte	.LFE84
 5907 00c8 00000000 		.4byte	.LFB85
 5908 00cc 1A000000 		.4byte	.LFE85
 5909 00d0 00000000 		.4byte	.LFB86
 5910 00d4 2A000000 		.4byte	.LFE86
 5911 00d8 00000000 		.4byte	.LFB87
 5912 00dc 7C020000 		.4byte	.LFE87
 5913 00e0 00000000 		.4byte	0
 5914 00e4 00000000 		.4byte	0
 5915              		.section	.debug_line,"",%progbits
 5916              	.Ldebug_line0:
 5917 0000 F2050000 		.section	.debug_str,"MS",%progbits,1
 5917      02002A02 
 5917      00000201 
 5917      FB0E0D00 
 5917      01010101 
 5918              	.LASF192:
 5919 0000 74696D65 		.ascii	"timeToValve\000"
 5919      546F5661 
 5919      6C766500 
 5920              	.LASF149:
 5921 000c 676D745F 		.ascii	"gmt_offset\000"
 5921      6F666673 
 5921      657400
 5922              	.LASF16:
 5923 0017 75696E74 		.ascii	"uint16\000"
 5923      313600
 5924              	.LASF39:
 5925 001e 76616C75 		.ascii	"value\000"
 5925      6500
 5926              	.LASF28:
 5927 0024 746D5F68 		.ascii	"tm_hour\000"
 5927      6F757200 
 5928              	.LASF33:
 5929 002c 746D5F79 		.ascii	"tm_yday\000"
 5929      64617900 
 5930              	.LASF173:
 5931 0034 6175746F 		.ascii	"autosampler_enabled\000"
 5931      73616D70 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 130


 5931      6C65725F 
 5931      656E6162 
 5931      6C656400 
 5932              	.LASF157:
 5933 0048 62756666 		.ascii	"buffer_overflow\000"
 5933      65725F6F 
 5933      76657266 
 5933      6C6F7700 
 5934              	.LASF4:
 5935 0058 5F5F7569 		.ascii	"__uint8_t\000"
 5935      6E74385F 
 5935      7400
 5936              	.LASF138:
 5937 0062 6175746F 		.ascii	"autosampler_freq\000"
 5937      73616D70 
 5937      6C65725F 
 5937      66726571 
 5937      00
 5938              	.LASF75:
 5939 0073 636F756E 		.ascii	"countDownResetCondition\000"
 5939      74446F77 
 5939      6E526573 
 5939      6574436F 
 5939      6E646974 
 5940              	.LASF194:
 5941 008b 74696D65 		.ascii	"timeToAutosampler\000"
 5941      546F4175 
 5941      746F7361 
 5941      6D706C65 
 5941      7200
 5942              	.LASF170:
 5943 009d 76616C76 		.ascii	"valve_type\000"
 5943      655F7479 
 5943      706500
 5944              	.LASF55:
 5945 00a8 6C6F6E67 		.ascii	"longitude\000"
 5945      69747564 
 5945      6500
 5946              	.LASF197:
 5947 00b2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5947      43313120 
 5947      352E342E 
 5947      31203230 
 5947      31363036 
 5948 00e5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 5948      20726576 
 5948      6973696F 
 5948      6E203233 
 5948      37373135 
 5949 0118 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5949      66756E63 
 5949      74696F6E 
 5949      2D736563 
 5949      74696F6E 
 5950              	.LASF152:
 5951 0140 6D6F6465 		.ascii	"modem_wakeup\000"
 5951      6D5F7761 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 131


 5951      6B657570 
 5951      00
 5952              	.LASF10:
 5953 014d 6C6F6E67 		.ascii	"long long unsigned int\000"
 5953      206C6F6E 
 5953      6720756E 
 5953      7369676E 
 5953      65642069 
 5954              	.LASF131:
 5955 0164 73616D70 		.ascii	"sample_freq\000"
 5955      6C655F66 
 5955      72657100 
 5956              	.LASF161:
 5957 0170 6D6F6465 		.ascii	"modem_state\000"
 5957      6D5F7374 
 5957      61746500 
 5958              	.LASF102:
 5959 017c 74657374 		.ascii	"test\000"
 5959      00
 5960              	.LASF180:
 5961 0181 616C6172 		.ascii	"alarmMeasure\000"
 5961      6D4D6561 
 5961      73757265 
 5961      00
 5962              	.LASF156:
 5963 018e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5963      52784275 
 5963      66666572 
 5963      00
 5964              	.LASF163:
 5965 019b 6D6F6465 		.ascii	"modem_stats\000"
 5965      6D5F7374 
 5965      61747300 
 5966              	.LASF9:
 5967 01a7 6C6F6E67 		.ascii	"long long int\000"
 5967      206C6F6E 
 5967      6720696E 
 5967      7400
 5968              	.LASF0:
 5969 01b5 7369676E 		.ascii	"signed char\000"
 5969      65642063 
 5969      68617200 
 5970              	.LASF48:
 5971 01c1 65636E6F 		.ascii	"ecno\000"
 5971      00
 5972              	.LASF181:
 5973 01c6 74696D65 		.ascii	"timeToMeasure\000"
 5973      546F4D65 
 5973      61737572 
 5973      6500
 5974              	.LASF51:
 5975 01d4 74696D65 		.ascii	"time_to_network_connect\000"
 5975      5F746F5F 
 5975      6E657477 
 5975      6F726B5F 
 5975      636F6E6E 
 5976              	.LASF183:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 132


 5977 01ec 74696D65 		.ascii	"timeToSync\000"
 5977      546F5379 
 5977      6E6300
 5978              	.LASF136:
 5979 01f7 646F776E 		.ascii	"down_level_freq\000"
 5979      5F6C6576 
 5979      656C5F66 
 5979      72657100 
 5980              	.LASF176:
 5981 0207 68747470 		.ascii	"http_body\000"
 5981      5F626F64 
 5981      7900
 5982              	.LASF113:
 5983 0211 7365745F 		.ascii	"set_up_internet_connection\000"
 5983      75705F69 
 5983      6E746572 
 5983      6E65745F 
 5983      636F6E6E 
 5984              	.LASF169:
 5985 022c 76616C76 		.ascii	"valve_diameter\000"
 5985      655F6469 
 5985      616D6574 
 5985      657200
 5986              	.LASF148:
 5987 023b 7365636F 		.ascii	"second\000"
 5987      6E6400
 5988              	.LASF144:
 5989 0242 79656172 		.ascii	"year\000"
 5989      00
 5990              	.LASF189:
 5991 0247 616C6172 		.ascii	"alarmDownstreamLevelSensor\000"
 5991      6D446F77 
 5991      6E737472 
 5991      65616D4C 
 5991      6576656C 
 5992              	.LASF139:
 5993 0262 74656D70 		.ascii	"temp\000"
 5993      00
 5994              	.LASF6:
 5995 0267 6C6F6E67 		.ascii	"long int\000"
 5995      20696E74 
 5995      00
 5996              	.LASF46:
 5997 0270 72786C65 		.ascii	"rxlev\000"
 5997      7600
 5998              	.LASF73:
 5999 0276 63757272 		.ascii	"currentCountDownValue\000"
 5999      656E7443 
 5999      6F756E74 
 5999      446F776E 
 5999      56616C75 
 6000              	.LASF150:
 6001 028c 6D6F6465 		.ascii	"modem_get_state\000"
 6001      6D5F6765 
 6001      745F7374 
 6001      61746500 
 6002              	.LASF56:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 133


 6003 029c 616C7469 		.ascii	"altitude\000"
 6003      74756465 
 6003      00
 6004              	.LASF15:
 6005 02a5 75696E74 		.ascii	"uint8\000"
 6005      3800
 6006              	.LASF135:
 6007 02ab 6C657665 		.ascii	"level_sensor_freq\000"
 6007      6C5F7365 
 6007      6E736F72 
 6007      5F667265 
 6007      7100
 6008              	.LASF186:
 6009 02bd 74696D65 		.ascii	"timeToAppLED\000"
 6009      546F4170 
 6009      704C4544 
 6009      00
 6010              	.LASF19:
 6011 02ca 696E7433 		.ascii	"int32\000"
 6011      3200
 6012              	.LASF60:
 6013 02d0 6E6F6465 		.ascii	"node_type\000"
 6013      5F747970 
 6013      6500
 6014              	.LASF140:
 6015 02da 6D6F6465 		.ascii	"modem_configure_settings\000"
 6015      6D5F636F 
 6015      6E666967 
 6015      7572655F 
 6015      73657474 
 6016              	.LASF121:
 6017 02f3 735F7369 		.ascii	"s_sim_type\000"
 6017      6D5F7479 
 6017      706500
 6018              	.LASF103:
 6019 02fe 6E657477 		.ascii	"network_time\000"
 6019      6F726B5F 
 6019      74696D65 
 6019      00
 6020              	.LASF3:
 6021 030b 73686F72 		.ascii	"short unsigned int\000"
 6021      7420756E 
 6021      7369676E 
 6021      65642069 
 6021      6E7400
 6022              	.LASF17:
 6023 031e 75696E74 		.ascii	"uint32\000"
 6023      333200
 6024              	.LASF99:
 6025 0325 696E7465 		.ascii	"interval\000"
 6025      7276616C 
 6025      00
 6026              	.LASF72:
 6027 032e 636F756E 		.ascii	"countDownValue\000"
 6027      74446F77 
 6027      6E56616C 
 6027      756500
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 134


 6028              	.LASF142:
 6029 033d 6D6F6465 		.ascii	"modem_get_network_time\000"
 6029      6D5F6765 
 6029      745F6E65 
 6029      74776F72 
 6029      6B5F7469 
 6030              	.LASF30:
 6031 0354 746D5F6D 		.ascii	"tm_mon\000"
 6031      6F6E00
 6032              	.LASF126:
 6033 035b 735F6C65 		.ascii	"s_level_sensor\000"
 6033      76656C5F 
 6033      73656E73 
 6033      6F7200
 6034              	.LASF64:
 6035 036a 64656275 		.ascii	"debug_level\000"
 6035      675F6C65 
 6035      76656C00 
 6036              	.LASF151:
 6037 0376 6D6F6465 		.ascii	"modem_sleep\000"
 6037      6D5F736C 
 6037      65657000 
 6038              	.LASF124:
 6039 0382 735F6465 		.ascii	"s_debug_freq\000"
 6039      6275675F 
 6039      66726571 
 6039      00
 6040              	.LASF117:
 6041 038f 75706461 		.ascii	"updatable_parameters_initialize\000"
 6041      7461626C 
 6041      655F7061 
 6041      72616D65 
 6041      74657273 
 6042              	.LASF31:
 6043 03af 746D5F79 		.ascii	"tm_year\000"
 6043      65617200 
 6044              	.LASF182:
 6045 03b7 616C6172 		.ascii	"alarmSync\000"
 6045      6D53796E 
 6045      6300
 6046              	.LASF165:
 6047 03c1 4170705F 		.ascii	"App_LED_enabled\000"
 6047      4C45445F 
 6047      656E6162 
 6047      6C656400 
 6048              	.LASF41:
 6049 03d1 6B65795F 		.ascii	"key_value_t\000"
 6049      76616C75 
 6049      655F7400 
 6050              	.LASF90:
 6051 03dd 7077725F 		.ascii	"pwr_check\000"
 6051      63686563 
 6051      6B00
 6052              	.LASF8:
 6053 03e7 6C6F6E67 		.ascii	"long unsigned int\000"
 6053      20756E73 
 6053      69676E65 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 135


 6053      6420696E 
 6053      7400
 6054              	.LASF105:
 6055 03f9 65787472 		.ascii	"extract_string\000"
 6055      6163745F 
 6055      73747269 
 6055      6E6700
 6056              	.LASF95:
 6057 0408 74696D65 		.ascii	"timeout\000"
 6057      6F757400 
 6058              	.LASF118:
 6059 0410 6765745F 		.ascii	"get_cell_network_stats\000"
 6059      63656C6C 
 6059      5F6E6574 
 6059      776F726B 
 6059      5F737461 
 6060              	.LASF40:
 6061 0427 74696D65 		.ascii	"timeStamp\000"
 6061      5374616D 
 6061      7000
 6062              	.LASF57:
 6063 0431 74696D65 		.ascii	"time_to_lock\000"
 6063      5F746F5F 
 6063      6C6F636B 
 6063      00
 6064              	.LASF160:
 6065 043e 64617461 		.ascii	"data\000"
 6065      00
 6066              	.LASF81:
 6067 0443 65705F70 		.ascii	"ep_port\000"
 6067      6F727400 
 6068              	.LASF34:
 6069 044b 746D5F69 		.ascii	"tm_isdst\000"
 6069      73647374 
 6069      00
 6070              	.LASF77:
 6071 0454 6D6F6465 		.ascii	"modem_info\000"
 6071      6D5F696E 
 6071      666F00
 6072              	.LASF80:
 6073 045f 65705F68 		.ascii	"ep_host\000"
 6073      6F737400 
 6074              	.LASF78:
 6075 0467 63686970 		.ascii	"chip_uniqueId\000"
 6075      5F756E69 
 6075      71756549 
 6075      6400
 6076              	.LASF100:
 6077 0475 6D6F6465 		.ascii	"modem_power_up\000"
 6077      6D5F706F 
 6077      7765725F 
 6077      757000
 6078              	.LASF198:
 6079 0484 6D6F6465 		.ascii	"modem.c\000"
 6079      6D2E6300 
 6080              	.LASF107:
 6081 048c 62656769 		.ascii	"beginMarker\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 136


 6081      6E4D6172 
 6081      6B657200 
 6082              	.LASF109:
 6083 0498 74617267 		.ascii	"target\000"
 6083      657400
 6084              	.LASF52:
 6085 049f 74696D65 		.ascii	"time_to_acquire_ip\000"
 6085      5F746F5F 
 6085      61637175 
 6085      6972655F 
 6085      697000
 6086              	.LASF108:
 6087 04b2 656E644D 		.ascii	"endMarker\000"
 6087      61726B65 
 6087      7200
 6088              	.LASF2:
 6089 04bc 73686F72 		.ascii	"short int\000"
 6089      7420696E 
 6089      7400
 6090              	.LASF143:
 6091 04c6 65706F63 		.ascii	"epoch_time\000"
 6091      685F7469 
 6091      6D6500
 6092              	.LASF5:
 6093 04d1 5F5F696E 		.ascii	"__int32_t\000"
 6093      7433325F 
 6093      7400
 6094              	.LASF185:
 6095 04db 616C6172 		.ascii	"alarmAppLED\000"
 6095      6D417070 
 6095      4C454400 
 6096              	.LASF106:
 6097 04e7 66726F6D 		.ascii	"from\000"
 6097      00
 6098              	.LASF112:
 6099 04ec 63726567 		.ascii	"creg\000"
 6099      00
 6100              	.LASF133:
 6101 04f1 64656275 		.ascii	"debug_freq\000"
 6101      675F6672 
 6101      657100
 6102              	.LASF96:
 6103 04fc 61745F61 		.ascii	"at_attempt\000"
 6103      7474656D 
 6103      707400
 6104              	.LASF128:
 6105 0507 735F7661 		.ascii	"s_valve\000"
 6105      6C766500 
 6106              	.LASF104:
 6107 050f 61745F77 		.ascii	"at_write_command\000"
 6107      72697465 
 6107      5F636F6D 
 6107      6D616E64 
 6107      00
 6108              	.LASF79:
 6109 0520 7379735F 		.ascii	"sys_info_t\000"
 6109      696E666F 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 137


 6109      5F7400
 6110              	.LASF71:
 6111 052b 75706461 		.ascii	"updatable_parameters_t\000"
 6111      7461626C 
 6111      655F7061 
 6111      72616D65 
 6111      74657273 
 6112              	.LASF132:
 6113 0542 7265706F 		.ascii	"report_freq\000"
 6113      72745F66 
 6113      72657100 
 6114              	.LASF158:
 6115 054e 64617461 		.ascii	"dataPointsInStack\000"
 6115      506F696E 
 6115      7473496E 
 6115      53746163 
 6115      6B00
 6116              	.LASF174:
 6117 0560 6175746F 		.ascii	"autosampler_inbox\000"
 6117      73616D70 
 6117      6C65725F 
 6117      696E626F 
 6117      7800
 6118              	.LASF27:
 6119 0572 746D5F6D 		.ascii	"tm_min\000"
 6119      696E00
 6120              	.LASF20:
 6121 0579 666C6F61 		.ascii	"float32\000"
 6121      74333200 
 6122              	.LASF25:
 6123 0581 73697A65 		.ascii	"sizetype\000"
 6123      74797065 
 6123      00
 6124              	.LASF127:
 6125 058a 735F646F 		.ascii	"s_down_level_sensor\000"
 6125      776E5F6C 
 6125      6576656C 
 6125      5F73656E 
 6125      736F7200 
 6126              	.LASF145:
 6127 059e 6D6F6E74 		.ascii	"month\000"
 6127      6800
 6128              	.LASF111:
 6129 05a4 69735F63 		.ascii	"is_connected_to_cell_network\000"
 6129      6F6E6E65 
 6129      63746564 
 6129      5F746F5F 
 6129      63656C6C 
 6130              	.LASF54:
 6131 05c1 6C617469 		.ascii	"latitude\000"
 6131      74756465 
 6131      00
 6132              	.LASF35:
 6133 05ca 74657374 		.ascii	"test_name\000"
 6133      5F6E616D 
 6133      6500
 6134              	.LASF18:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 138


 6135 05d4 696E7431 		.ascii	"int16\000"
 6135      3600
 6136              	.LASF155:
 6137 05da 6770735F 		.ascii	"gps_status\000"
 6137      73746174 
 6137      757300
 6138              	.LASF184:
 6139 05e5 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 6139      546F5379 
 6139      636E5265 
 6139      6D6F7465 
 6139      50617261 
 6140              	.LASF101:
 6141 05fc 6D6F6465 		.ascii	"modem_test\000"
 6141      6D5F7465 
 6141      737400
 6142              	.LASF116:
 6143 0607 6D617463 		.ascii	"match\000"
 6143      6800
 6144              	.LASF164:
 6145 060d 75706461 		.ascii	"updatable_parameters\000"
 6145      7461626C 
 6145      655F7061 
 6145      72616D65 
 6145      74657273 
 6146              	.LASF199:
 6147 0622 433A5C55 		.ascii	"C:\\Users\\jniej\\OneDrive\\Documents\\GitHub\\noto"
 6147      73657273 
 6147      5C6A6E69 
 6147      656A5C4F 
 6147      6E654472 
 6148 064f 72694F53 		.ascii	"riOS\\notoriOS.cydsn\000"
 6148      5C6E6F74 
 6148      6F72694F 
 6148      532E6379 
 6148      64736E00 
 6149              	.LASF146:
 6150 0663 686F7572 		.ascii	"hour\000"
 6150      00
 6151              	.LASF93:
 6152 0668 636F6D6D 		.ascii	"commands\000"
 6152      616E6473 
 6152      00
 6153              	.LASF97:
 6154 0671 636F6D70 		.ascii	"compare_location\000"
 6154      6172655F 
 6154      6C6F6361 
 6154      74696F6E 
 6154      00
 6155              	.LASF21:
 6156 0682 666C6F61 		.ascii	"float\000"
 6156      7400
 6157              	.LASF83:
 6158 0688 6D6F6465 		.ascii	"modem_initialize\000"
 6158      6D5F696E 
 6158      69746961 
 6158      6C697A65 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 139


 6158      00
 6159              	.LASF123:
 6160 0699 735F7265 		.ascii	"s_report_freq\000"
 6160      706F7274 
 6160      5F667265 
 6160      7100
 6161              	.LASF130:
 6162 06a7 735F6170 		.ascii	"s_apps_enabled\000"
 6162      70735F65 
 6162      6E61626C 
 6162      656400
 6163              	.LASF61:
 6164 06b6 73696D5F 		.ascii	"sim_type\000"
 6164      74797065 
 6164      00
 6165              	.LASF68:
 6166 06bf 56616C76 		.ascii	"Valve_freq\000"
 6166      655F6672 
 6166      657100
 6167              	.LASF114:
 6168 06ca 6973725F 		.ascii	"isr_telit_rx\000"
 6168      74656C69 
 6168      745F7278 
 6168      00
 6169              	.LASF76:
 6170 06d7 616C6172 		.ascii	"alarm\000"
 6170      6D00
 6171              	.LASF70:
 6172 06dd 5F426F6F 		.ascii	"_Bool\000"
 6172      6C00
 6173              	.LASF13:
 6174 06e3 696E7433 		.ascii	"int32_t\000"
 6174      325F7400 
 6175              	.LASF1:
 6176 06eb 756E7369 		.ascii	"unsigned char\000"
 6176      676E6564 
 6176      20636861 
 6176      7200
 6177              	.LASF179:
 6178 06f9 73797374 		.ascii	"system_settings\000"
 6178      656D5F73 
 6178      65747469 
 6178      6E677300 
 6179              	.LASF98:
 6180 0709 64656C61 		.ascii	"delay\000"
 6180      7900
 6181              	.LASF49:
 6182 070f 72737271 		.ascii	"rsrq\000"
 6182      00
 6183              	.LASF63:
 6184 0714 73796E63 		.ascii	"sync_time\000"
 6184      5F74696D 
 6184      6500
 6185              	.LASF120:
 6186 071e 735F6E6F 		.ascii	"s_node_type\000"
 6186      64655F74 
 6186      79706500 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 140


 6187              	.LASF47:
 6188 072a 72736370 		.ascii	"rscp\000"
 6188      00
 6189              	.LASF153:
 6190 072f 6D6F6465 		.ascii	"modem_get_gps_coordinates\000"
 6190      6D5F6765 
 6190      745F6770 
 6190      735F636F 
 6190      6F726469 
 6191              	.LASF38:
 6192 0749 74657374 		.ascii	"test_t\000"
 6192      5F7400
 6193              	.LASF129:
 6194 0750 735F6175 		.ascii	"s_autosampler\000"
 6194      746F7361 
 6194      6D706C65 
 6194      7200
 6195              	.LASF44:
 6196 075e 696D6569 		.ascii	"imei\000"
 6196      00
 6197              	.LASF37:
 6198 0763 72656173 		.ascii	"reason\000"
 6198      6F6E00
 6199              	.LASF50:
 6200 076a 72737270 		.ascii	"rsrp\000"
 6200      00
 6201              	.LASF53:
 6202 076f 6D6F6465 		.ascii	"modem_stats_t\000"
 6202      6D5F7374 
 6202      6174735F 
 6202      7400
 6203              	.LASF92:
 6204 077d 75617274 		.ascii	"uart_string_reset\000"
 6204      5F737472 
 6204      696E675F 
 6204      72657365 
 6204      7400
 6205              	.LASF187:
 6206 078f 616C6172 		.ascii	"alarmLevelSensor\000"
 6206      6D4C6576 
 6206      656C5365 
 6206      6E736F72 
 6206      00
 6207              	.LASF32:
 6208 07a0 746D5F77 		.ascii	"tm_wday\000"
 6208      64617900 
 6209              	.LASF91:
 6210 07a8 6D6F6465 		.ascii	"modem_soft_power_cycle\000"
 6210      6D5F736F 
 6210      66745F70 
 6210      6F776572 
 6210      5F637963 
 6211              	.LASF66:
 6212 07bf 4C657665 		.ascii	"Level_Sensor_freq\000"
 6212      6C5F5365 
 6212      6E736F72 
 6212      5F667265 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 141


 6212      7100
 6213              	.LASF167:
 6214 07d1 6C657665 		.ascii	"level_sensor_inbox\000"
 6214      6C5F7365 
 6214      6E736F72 
 6214      5F696E62 
 6214      6F7800
 6215              	.LASF24:
 6216 07e4 6C6F6E67 		.ascii	"long double\000"
 6216      20646F75 
 6216      626C6500 
 6217              	.LASF23:
 6218 07f0 63686172 		.ascii	"char\000"
 6218      00
 6219              	.LASF110:
 6220 07f5 6D6F6465 		.ascii	"modem_process_tasks\000"
 6220      6D5F7072 
 6220      6F636573 
 6220      735F7461 
 6220      736B7300 
 6221              	.LASF11:
 6222 0809 756E7369 		.ascii	"unsigned int\000"
 6222      676E6564 
 6222      20696E74 
 6222      00
 6223              	.LASF141:
 6224 0816 4346554E 		.ascii	"CFUN\000"
 6224      00
 6225              	.LASF191:
 6226 081b 616C6172 		.ascii	"alarmValve\000"
 6226      6D56616C 
 6226      766500
 6227              	.LASF43:
 6228 0826 6D6F6465 		.ascii	"model_id\000"
 6228      6C5F6964 
 6228      00
 6229              	.LASF177:
 6230 082f 68747470 		.ascii	"http_route\000"
 6230      5F726F75 
 6230      746500
 6231              	.LASF45:
 6232 083a 6D6F6465 		.ascii	"modem_info_t\000"
 6232      6D5F696E 
 6232      666F5F74 
 6232      00
 6233              	.LASF59:
 6234 0847 6770735F 		.ascii	"gps_t\000"
 6234      7400
 6235              	.LASF7:
 6236 084d 5F5F7569 		.ascii	"__uint32_t\000"
 6236      6E743332 
 6236      5F7400
 6237              	.LASF196:
 6238 0858 75617274 		.ascii	"uart_string_index\000"
 6238      5F737472 
 6238      696E675F 
 6238      696E6465 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 142


 6238      7800
 6239              	.LASF62:
 6240 086a 6D656173 		.ascii	"measure_time\000"
 6240      7572655F 
 6240      74696D65 
 6240      00
 6241              	.LASF115:
 6242 0877 69735F63 		.ascii	"is_connected_to_internet\000"
 6242      6F6E6E65 
 6242      63746564 
 6242      5F746F5F 
 6242      696E7465 
 6243              	.LASF162:
 6244 0890 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 6244      6D5F7374 
 6244      6172745F 
 6244      74696D65 
 6244      5F737461 
 6245              	.LASF195:
 6246 08a7 75617274 		.ascii	"uart_received_string\000"
 6246      5F726563 
 6246      65697665 
 6246      645F7374 
 6246      72696E67 
 6247              	.LASF84:
 6248 08bc 70696E73 		.ascii	"pins_configure_inactive\000"
 6248      5F636F6E 
 6248      66696775 
 6248      72655F69 
 6248      6E616374 
 6249              	.LASF125:
 6250 08d4 735F6170 		.ascii	"s_app_led\000"
 6250      705F6C65 
 6250      6400
 6251              	.LASF42:
 6252 08de 73696D5F 		.ascii	"sim_id\000"
 6252      696400
 6253              	.LASF29:
 6254 08e5 746D5F6D 		.ascii	"tm_mday\000"
 6254      64617900 
 6255              	.LASF178:
 6256 08ed 73797374 		.ascii	"system_info\000"
 6256      656D5F69 
 6256      6E666F00 
 6257              	.LASF58:
 6258 08f9 76616C69 		.ascii	"valid\000"
 6258      6400
 6259              	.LASF85:
 6260 08ff 70696E73 		.ascii	"pins_configure_active\000"
 6260      5F636F6E 
 6260      66696775 
 6260      72655F61 
 6260      63746976 
 6261              	.LASF147:
 6262 0915 6D696E75 		.ascii	"minute\000"
 6262      746500
 6263              	.LASF14:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 143


 6264 091c 75696E74 		.ascii	"uint32_t\000"
 6264      33325F74 
 6264      00
 6265              	.LASF26:
 6266 0925 746D5F73 		.ascii	"tm_sec\000"
 6266      656300
 6267              	.LASF171:
 6268 092c 76616C76 		.ascii	"valve_enabled\000"
 6268      655F656E 
 6268      61626C65 
 6268      6400
 6269              	.LASF119:
 6270 093a 6765745F 		.ascii	"get_updated_parameters_from_malcom\000"
 6270      75706461 
 6270      7465645F 
 6270      70617261 
 6270      6D657465 
 6271              	.LASF122:
 6272 095d 735F7361 		.ascii	"s_sample_freq\000"
 6272      6D706C65 
 6272      5F667265 
 6272      7100
 6273              	.LASF36:
 6274 096b 73746174 		.ascii	"status\000"
 6274      757300
 6275              	.LASF188:
 6276 0972 74696D65 		.ascii	"timeToLevelSensor\000"
 6276      546F4C65 
 6276      76656C53 
 6276      656E736F 
 6276      7200
 6277              	.LASF168:
 6278 0984 6C657665 		.ascii	"level_sensor_enabled\000"
 6278      6C5F7365 
 6278      6E736F72 
 6278      5F656E61 
 6278      626C6564 
 6279              	.LASF159:
 6280 0999 64617461 		.ascii	"dataPointsInStackDesired\000"
 6280      506F696E 
 6280      7473496E 
 6280      53746163 
 6280      6B446573 
 6281              	.LASF67:
 6282 09b2 446F776E 		.ascii	"Downstream_Level_Sensor_freq\000"
 6282      73747265 
 6282      616D5F4C 
 6282      6576656C 
 6282      5F53656E 
 6283              	.LASF65:
 6284 09cf 4170705F 		.ascii	"App_LED_freq\000"
 6284      4C45445F 
 6284      66726571 
 6284      00
 6285              	.LASF82:
 6286 09dc 7379735F 		.ascii	"sys_settings_t\000"
 6286      73657474 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 144


 6286      696E6773 
 6286      5F7400
 6287              	.LASF190:
 6288 09eb 74696D65 		.ascii	"timeToDownstreamLevelSensor\000"
 6288      546F446F 
 6288      776E7374 
 6288      7265616D 
 6288      4C657665 
 6289              	.LASF12:
 6290 0a07 75696E74 		.ascii	"uint8_t\000"
 6290      385F7400 
 6291              	.LASF193:
 6292 0a0f 616C6172 		.ascii	"alarmAutosampler\000"
 6292      6D417574 
 6292      6F73616D 
 6292      706C6572 
 6292      00
 6293              	.LASF172:
 6294 0a20 76616C76 		.ascii	"valve_inbox\000"
 6294      655F696E 
 6294      626F7800 
 6295              	.LASF87:
 6296 0a2c 61745F72 		.ascii	"at_ready\000"
 6296      65616479 
 6296      00
 6297              	.LASF69:
 6298 0a35 4175746F 		.ascii	"Autosampler_freq\000"
 6298      73616D70 
 6298      6C65725F 
 6298      66726571 
 6298      00
 6299              	.LASF88:
 6300 0a46 61747465 		.ascii	"attempts\000"
 6300      6D707473 
 6300      00
 6301              	.LASF74:
 6302 0a4f 636F756E 		.ascii	"countDownType\000"
 6302      74446F77 
 6302      6E547970 
 6302      6500
 6303              	.LASF137:
 6304 0a5d 76616C76 		.ascii	"valve_freq\000"
 6304      655F6672 
 6304      657100
 6305              	.LASF89:
 6306 0a68 626F6F74 		.ascii	"boot_time\000"
 6306      5F74696D 
 6306      6500
 6307              	.LASF94:
 6308 0a72 65787065 		.ascii	"expected_response\000"
 6308      63746564 
 6308      5F726573 
 6308      706F6E73 
 6308      6500
 6309              	.LASF154:
 6310 0a84 6C6F636B 		.ascii	"lock_time\000"
 6310      5F74696D 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccgeHsMw.s 			page 145


 6310      6500
 6311              	.LASF175:
 6312 0a8e 68747470 		.ascii	"http_request\000"
 6312      5F726571 
 6312      75657374 
 6312      00
 6313              	.LASF86:
 6314 0a9b 6D6F6465 		.ascii	"modem_power_down\000"
 6314      6D5F706F 
 6314      7765725F 
 6314      646F776E 
 6314      00
 6315              	.LASF22:
 6316 0aac 646F7562 		.ascii	"double\000"
 6316      6C6500
 6317              	.LASF166:
 6318 0ab3 6170705F 		.ascii	"app_led_inbox\000"
 6318      6C65645F 
 6318      696E626F 
 6318      7800
 6319              	.LASF134:
 6320 0ac1 6170705F 		.ascii	"app_led_freq\000"
 6320      6C65645F 
 6320      66726571 
 6320      00
 6321              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
