ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"modem.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.syntax unified
  24              		.global _printf_float
  25              		.thumb
  26              		.syntax unified
  27              		.comm	modem_state,1,1
  28              		.comm	modem_start_time_stamp,4,4
  29              		.comm	modem_info,60,4
  30              		.comm	modem_stats,32,4
  31              		.comm	updatable_parameters,10,4
  32              		.comm	App_LED_enabled,1,1
  33              		.comm	app_led_inbox,100,4
  34              		.comm	level_sensor_inbox,100,4
  35              		.comm	level_sensor_enabled,1,1
  36              		.comm	downstream_level_sensor_inbox,100,4
  37              		.comm	downstream_level_sensor_enabled,1,1
  38              		.comm	valve_diameter,4,4
  39              		.comm	valve_type,10,4
  40              		.comm	valve_enabled,1,1
  41              		.comm	valve_inbox,100,4
  42              		.comm	autosampler_enabled,1,1
  43              		.comm	autosampler_inbox,100,4
  44              		.comm	http_request,10000,4
  45              		.comm	http_body,10000,4
  46              		.comm	http_route,200,4
  47              		.comm	system_info,28,4
  48              		.comm	system_settings,104,4
  49              		.comm	alarmMeasure,6,4
  50              		.comm	timeToMeasure,1,1
  51              		.comm	alarmSync,6,4
  52              		.comm	timeToSync,1,1
  53              		.comm	timeToSycnRemoteParams,1,1
  54              		.comm	hey,1,1
  55              		.comm	alarmAppLED,6,4
  56              		.comm	timeToAppLED,1,1
  57              		.comm	alarmLevelSensor,6,4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 2


  58              		.comm	timeToLevelSensor,1,1
  59              		.comm	alarmDownstreamLevelSensor,6,4
  60              		.comm	timeToDownstreamLevelSensor,1,1
  61              		.comm	alarmValve,6,4
  62              		.comm	timeToValve,1,1
  63              		.comm	alarmAutosampler,6,4
  64              		.comm	timeToAutosampler,1,1
  65              		.comm	uart_received_string,1024,4
  66              		.global	uart_string_index
  67              		.bss
  68              		.align	1
  69              		.type	uart_string_index, %object
  70              		.size	uart_string_index, 2
  71              	uart_string_index:
  72 0000 0000     		.space	2
  73              		.section	.text.isr_telit_rx,"ax",%progbits
  74              		.align	2
  75              		.global	isr_telit_rx
  76              		.thumb
  77              		.thumb_func
  78              		.type	isr_telit_rx, %function
  79              	isr_telit_rx:
  80              	.LFB64:
  81              		.file 1 "modem.c"
   1:modem.c       **** //Methods for Telit modem 
   2:modem.c       **** #include "modem.h"
   3:modem.c       **** #include "notoriOS.h"
   4:modem.c       **** 
   5:modem.c       **** char uart_received_string[1024];
   6:modem.c       **** int16 uart_string_index=0;
   7:modem.c       **** 
   8:modem.c       **** #define DEFAULT_AT_TIMEOUT 2000u // Send command and wait 2000 ms
   9:modem.c       **** #define NO_AT_TIMEOUT 0u // Send command, no timeout/ don't wait 
  10:modem.c       **** 
  11:modem.c       **** #define TIMEOUT_NETWORK_CONNECT 180 //seconds
  12:modem.c       **** #define TIMEOUT_IP_ACQUIRE 230 //seconds (cummulatinve) add to TIMEOUT_NETWORK_CONNECT
  13:modem.c       **** 
  14:modem.c       **** CY_ISR_PROTO(isr_telit_rx); // Declares a custom ISR function "isr_telit_rx" using the CY_ISR_PROTO
  15:modem.c       **** 
  16:modem.c       **** // Define the custom ISR function "isr_telit_rx" using the CY_ISR macro
  17:modem.c       **** // Get each character from Telit and saves it to uart_received_string
  18:modem.c       **** CY_ISR(isr_telit_rx){      
  82              		.loc 1 18 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 1, uses_anonymous_args = 0
  86 0000 98B5     		push	{r3, r4, r7, lr}
  87              		.cfi_def_cfa_offset 16
  88              		.cfi_offset 3, -16
  89              		.cfi_offset 4, -12
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 00AF     		add	r7, sp, #0
  93              		.cfi_def_cfa_register 7
  19:modem.c       ****     // UART_Telit_GetRxBufferSize() returns the number of received bytes available in the RX buffer
  20:modem.c       ****     while(UART_Telit_GetRxBufferSize()==1){
  94              		.loc 1 20 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 3


  95 0004 12E0     		b	.L2
  96              	.L3:
  21:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  97              		.loc 1 21 0
  98 0006 0D4B     		ldr	r3, .L4
  99 0008 B3F90030 		ldrsh	r3, [r3]
 100 000c 1C46     		mov	r4, r3
 101 000e FFF7FEFF 		bl	UART_Telit_GetChar
 102 0012 0346     		mov	r3, r0
 103 0014 1A46     		mov	r2, r3
 104 0016 0A4B     		ldr	r3, .L4+4
 105 0018 1A55     		strb	r2, [r3, r4]
  22:modem.c       ****         uart_string_index++;
 106              		.loc 1 22 0
 107 001a 084B     		ldr	r3, .L4
 108 001c B3F90030 		ldrsh	r3, [r3]
 109 0020 9BB2     		uxth	r3, r3
 110 0022 0133     		adds	r3, r3, #1
 111 0024 9BB2     		uxth	r3, r3
 112 0026 1AB2     		sxth	r2, r3
 113 0028 044B     		ldr	r3, .L4
 114 002a 1A80     		strh	r2, [r3]	@ movhi
 115              	.L2:
  20:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
 116              		.loc 1 20 0
 117 002c FFF7FEFF 		bl	UART_Telit_GetRxBufferSize
 118 0030 0346     		mov	r3, r0
 119 0032 012B     		cmp	r3, #1
 120 0034 E7D0     		beq	.L3
  23:modem.c       ****     }
  24:modem.c       **** 
  25:modem.c       **** }
 121              		.loc 1 25 0
 122 0036 00BF     		nop
 123 0038 98BD     		pop	{r3, r4, r7, pc}
 124              	.L5:
 125 003a 00BF     		.align	2
 126              	.L4:
 127 003c 00000000 		.word	uart_string_index
 128 0040 00000000 		.word	uart_received_string
 129              		.cfi_endproc
 130              	.LFE64:
 131              		.size	isr_telit_rx, .-isr_telit_rx
 132              		.section	.text.modem_initialize,"ax",%progbits
 133              		.align	2
 134              		.global	modem_initialize
 135              		.thumb
 136              		.thumb_func
 137              		.type	modem_initialize, %function
 138              	modem_initialize:
 139              	.LFB65:
  26:modem.c       **** 
  27:modem.c       **** // Initialize the modem
  28:modem.c       **** void modem_initialize(){
 140              		.loc 1 28 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 4


 143              		@ frame_needed = 1, uses_anonymous_args = 0
 144 0000 80B5     		push	{r7, lr}
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 7, -8
 147              		.cfi_offset 14, -4
 148 0002 00AF     		add	r7, sp, #0
 149              		.cfi_def_cfa_register 7
  29:modem.c       ****     // Don't do much except make sure that all the modem pins are pulled low
  30:modem.c       ****     // Also make sure that the TX PIN is fully disabled
  31:modem.c       ****     pins_configure_inactive();
 150              		.loc 1 31 0
 151 0004 FFF7FEFF 		bl	pins_configure_inactive
  32:modem.c       ****     modem_state = 0;
 152              		.loc 1 32 0
 153 0008 154B     		ldr	r3, .L7
 154 000a 0022     		movs	r2, #0
 155 000c 1A70     		strb	r2, [r3]
  33:modem.c       ****     //initialize states
  34:modem.c       ****     modem_info.imei[0] = '\0';
 156              		.loc 1 34 0
 157 000e 154B     		ldr	r3, .L7+4
 158 0010 0022     		movs	r2, #0
 159 0012 83F82820 		strb	r2, [r3, #40]
  35:modem.c       ****     modem_info.model_id[0] = '\0';
 160              		.loc 1 35 0
 161 0016 134B     		ldr	r3, .L7+4
 162 0018 0022     		movs	r2, #0
 163 001a 1A75     		strb	r2, [r3, #20]
  36:modem.c       ****     modem_info.sim_id[0] = '\0';
 164              		.loc 1 36 0
 165 001c 114B     		ldr	r3, .L7+4
 166 001e 0022     		movs	r2, #0
 167 0020 1A70     		strb	r2, [r3]
  37:modem.c       ****     modem_stats.rxlev = 0;
 168              		.loc 1 37 0
 169 0022 114B     		ldr	r3, .L7+8
 170 0024 0022     		movs	r2, #0
 171 0026 1A60     		str	r2, [r3]
  38:modem.c       ****     modem_stats.ber = 0;
 172              		.loc 1 38 0
 173 0028 0F4B     		ldr	r3, .L7+8
 174 002a 0022     		movs	r2, #0
 175 002c 5A60     		str	r2, [r3, #4]
  39:modem.c       ****     modem_stats.rscp = 0;
 176              		.loc 1 39 0
 177 002e 0E4B     		ldr	r3, .L7+8
 178 0030 0022     		movs	r2, #0
 179 0032 9A60     		str	r2, [r3, #8]
  40:modem.c       ****     modem_stats.ecno = 0;
 180              		.loc 1 40 0
 181 0034 0C4B     		ldr	r3, .L7+8
 182 0036 0022     		movs	r2, #0
 183 0038 DA60     		str	r2, [r3, #12]
  41:modem.c       ****     modem_stats.rsrq = 0;
 184              		.loc 1 41 0
 185 003a 0B4B     		ldr	r3, .L7+8
 186 003c 0022     		movs	r2, #0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 5


 187 003e 1A61     		str	r2, [r3, #16]
  42:modem.c       ****     modem_stats.rsrp = 0;
 188              		.loc 1 42 0
 189 0040 094B     		ldr	r3, .L7+8
 190 0042 0022     		movs	r2, #0
 191 0044 5A61     		str	r2, [r3, #20]
  43:modem.c       ****     modem_stats.time_to_acquire_ip = 0;
 192              		.loc 1 43 0
 193 0046 084B     		ldr	r3, .L7+8
 194 0048 0022     		movs	r2, #0
 195 004a DA61     		str	r2, [r3, #28]
  44:modem.c       ****     modem_stats.time_to_network_connect = 0;
 196              		.loc 1 44 0
 197 004c 064B     		ldr	r3, .L7+8
 198 004e 0022     		movs	r2, #0
 199 0050 9A61     		str	r2, [r3, #24]
  45:modem.c       ****     // Disable the RX Pin interrupt, and only enable it during long timeouts
  46:modem.c       ****     // Rx_Telit_SetInterruptMode(): Configures the interrupt mode for each of the Pins component's 
  47:modem.c       ****     // Rx_Telit_0_INTR selects the first pin in the list, and Rx_Telit_INTR_NONE disables the Rx pi
  48:modem.c       ****     Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 200              		.loc 1 48 0
 201 0052 0021     		movs	r1, #0
 202 0054 4020     		movs	r0, #64
 203 0056 FFF7FEFF 		bl	Rx_Telit_SetInterruptMode
  49:modem.c       ****     
  50:modem.c       **** }
 204              		.loc 1 50 0
 205 005a 00BF     		nop
 206 005c 80BD     		pop	{r7, pc}
 207              	.L8:
 208 005e 00BF     		.align	2
 209              	.L7:
 210 0060 00000000 		.word	modem_state
 211 0064 00000000 		.word	modem_info
 212 0068 00000000 		.word	modem_stats
 213              		.cfi_endproc
 214              	.LFE65:
 215              		.size	modem_initialize, .-modem_initialize
 216              		.section	.text.pins_configure_inactive,"ax",%progbits
 217              		.align	2
 218              		.global	pins_configure_inactive
 219              		.thumb
 220              		.thumb_func
 221              		.type	pins_configure_inactive, %function
 222              	pins_configure_inactive:
 223              	.LFB66:
  51:modem.c       **** 
  52:modem.c       **** 
  53:modem.c       **** // To be used when the modem power is to be "killed" conpletely to conserve power
  54:modem.c       **** void pins_configure_inactive(){
 224              		.loc 1 54 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228 0000 80B5     		push	{r7, lr}
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 7, -8
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 6


 231              		.cfi_offset 14, -4
 232 0002 00AF     		add	r7, sp, #0
 233              		.cfi_def_cfa_register 7
  55:modem.c       ****    
  56:modem.c       ****    Telit_ControlReg_Write(0u); // Physically disconect UART pin
 234              		.loc 1 56 0
 235 0004 0020     		movs	r0, #0
 236 0006 FFF7FEFF 		bl	Telit_ControlReg_Write
  57:modem.c       ****    Rx_Telit_SetDriveMode(PIN_DM_STRONG); // Set drive mode
 237              		.loc 1 57 0
 238 000a 0C20     		movs	r0, #12
 239 000c FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  58:modem.c       **** 
  59:modem.c       ****    Pin_Telit_pwr_Write(OFF); // Kill power to modem (pulls pin low).
 240              		.loc 1 59 0
 241 0010 0020     		movs	r0, #0
 242 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  60:modem.c       **** 
  61:modem.c       ****    // Pull down all of these, just in case (turns the off).
  62:modem.c       ****    Rx_Telit_Write(OFF); 
 243              		.loc 1 62 0
 244 0016 0020     		movs	r0, #0
 245 0018 FFF7FEFF 		bl	Rx_Telit_Write
  63:modem.c       ****    Tx_Telit_Write(OFF);
 246              		.loc 1 63 0
 247 001c 0020     		movs	r0, #0
 248 001e FFF7FEFF 		bl	Tx_Telit_Write
  64:modem.c       ****    Pin_Telit_ONOFF_Write(OFF);
 249              		.loc 1 64 0
 250 0022 0020     		movs	r0, #0
 251 0024 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
  65:modem.c       ****    Pin_Telit_SWRDY_Write(OFF);
 252              		.loc 1 65 0
 253 0028 0020     		movs	r0, #0
 254 002a FFF7FEFF 		bl	Pin_Telit_SWRDY_Write
  66:modem.c       ****     
  67:modem.c       **** }
 255              		.loc 1 67 0
 256 002e 00BF     		nop
 257 0030 80BD     		pop	{r7, pc}
 258              		.cfi_endproc
 259              	.LFE66:
 260              		.size	pins_configure_inactive, .-pins_configure_inactive
 261 0032 00BF     		.section	.text.pins_configure_active,"ax",%progbits
 262              		.align	2
 263              		.global	pins_configure_active
 264              		.thumb
 265              		.thumb_func
 266              		.type	pins_configure_active, %function
 267              	pins_configure_active:
 268              	.LFB67:
  68:modem.c       **** 
  69:modem.c       **** // Turns on power and configures all UART pin modes
  70:modem.c       **** void pins_configure_active(){
 269              		.loc 1 70 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 7


 272              		@ frame_needed = 1, uses_anonymous_args = 0
 273 0000 80B5     		push	{r7, lr}
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 7, -8
 276              		.cfi_offset 14, -4
 277 0002 00AF     		add	r7, sp, #0
 278              		.cfi_def_cfa_register 7
  71:modem.c       ****     
  72:modem.c       ****     Rx_Telit_SetDriveMode(PIN_DM_DIG_HIZ); // Power up. Set RX pin to High Impedance Digital mode.
 279              		.loc 1 72 0
 280 0004 0220     		movs	r0, #2
 281 0006 FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  73:modem.c       ****     Telit_ControlReg_Write(1u); // Pull Telit_ControlReg pin high (turns it on).
 282              		.loc 1 73 0
 283 000a 0120     		movs	r0, #1
 284 000c FFF7FEFF 		bl	Telit_ControlReg_Write
  74:modem.c       ****     Pin_Telit_pwr_Write(ON); // Pulls Telit_pwr pin high (turns it on).
 285              		.loc 1 74 0
 286 0010 0120     		movs	r0, #1
 287 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  75:modem.c       ****     CyDelay(100u); // Give the MOSFET a few ms to stalbilise power 
 288              		.loc 1 75 0
 289 0016 6420     		movs	r0, #100
 290 0018 FFF7FEFF 		bl	CyDelay
  76:modem.c       **** }
 291              		.loc 1 76 0
 292 001c 00BF     		nop
 293 001e 80BD     		pop	{r7, pc}
 294              		.cfi_endproc
 295              	.LFE67:
 296              		.size	pins_configure_active, .-pins_configure_active
 297              		.section	.rodata
 298              		.align	2
 299              	.LC0:
 300 0000 4F4B00   		.ascii	"OK\000"
 301 0003 00       		.align	2
 302              	.LC1:
 303 0004 41542353 		.ascii	"AT#SHDN\015\000"
 303      48444E0D 
 303      00
 304              		.section	.text.modem_power_down,"ax",%progbits
 305              		.align	2
 306              		.global	modem_power_down
 307              		.thumb
 308              		.thumb_func
 309              		.type	modem_power_down, %function
 310              	modem_power_down:
 311              	.LFB68:
  77:modem.c       **** 
  78:modem.c       **** // Power down the modem -- completely "kill" modem to conserve power.
  79:modem.c       **** void modem_power_down(){
 312              		.loc 1 79 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 1, uses_anonymous_args = 0
 316 0000 80B5     		push	{r7, lr}
 317              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 8


 318              		.cfi_offset 7, -8
 319              		.cfi_offset 14, -4
 320 0002 00AF     		add	r7, sp, #0
 321              		.cfi_def_cfa_register 7
  80:modem.c       ****     // AT Command to modem for Software Shut Down - #SHDN
  81:modem.c       ****     // \r is carriage return, it is necessary for the modem to know it got a command
  82:modem.c       ****     at_write_command("AT#SHDN\r","OK",5000u); 
 322              		.loc 1 82 0
 323 0004 41F28832 		movw	r2, #5000
 324 0008 0A49     		ldr	r1, .L12
 325 000a 0B48     		ldr	r0, .L12+4
 326 000c FFF7FEFF 		bl	at_write_command
  83:modem.c       ****    
  84:modem.c       ****     // Soft power cycle makes sure that the modem is all the way on (like holding on button on for 
  85:modem.c       ****     modem_soft_power_cycle();
 327              		.loc 1 85 0
 328 0010 FFF7FEFF 		bl	modem_soft_power_cycle
  86:modem.c       ****     CyDelay(1000u);
 329              		.loc 1 86 0
 330 0014 4FF47A70 		mov	r0, #1000
 331 0018 FFF7FEFF 		bl	CyDelay
  87:modem.c       ****     
  88:modem.c       ****     UART_Telit_Stop(); // Disables the UART operation.
 332              		.loc 1 88 0
 333 001c FFF7FEFF 		bl	UART_Telit_Stop
  89:modem.c       ****     isr_telit_rx_Stop(); // Disables and removes the interrupt.
 334              		.loc 1 89 0
 335 0020 FFF7FEFF 		bl	isr_telit_rx_Stop
  90:modem.c       ****     pins_configure_inactive(); // We want the modem power to be "killed" completely to conserve pow
 336              		.loc 1 90 0
 337 0024 FFF7FEFF 		bl	pins_configure_inactive
  91:modem.c       ****     modem_state = MODEM_STATE_OFF;
 338              		.loc 1 91 0
 339 0028 044B     		ldr	r3, .L12+8
 340 002a 0022     		movs	r2, #0
 341 002c 1A70     		strb	r2, [r3]
  92:modem.c       ****     
  93:modem.c       **** }
 342              		.loc 1 93 0
 343 002e 00BF     		nop
 344 0030 80BD     		pop	{r7, pc}
 345              	.L13:
 346 0032 00BF     		.align	2
 347              	.L12:
 348 0034 00000000 		.word	.LC0
 349 0038 04000000 		.word	.LC1
 350 003c 00000000 		.word	modem_state
 351              		.cfi_endproc
 352              	.LFE68:
 353              		.size	modem_power_down, .-modem_power_down
 354              		.section	.rodata
 355 000d 000000   		.align	2
 356              	.LC2:
 357 0010 41544530 		.ascii	"ATE0\015\000"
 357      0D00
 358 0016 0000     		.align	2
 359              	.LC3:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 9


 360 0018 4D6F6465 		.ascii	"Modem boot time: %d\000"
 360      6D20626F 
 360      6F742074 
 360      696D653A 
 360      20256400 
 361              		.align	2
 362              	.LC4:
 363 002c 4D6F6465 		.ascii	"Modem ready for AT commands after %d attempt(s).\000"
 363      6D207265 
 363      61647920 
 363      666F7220 
 363      41542063 
 364 005d 000000   		.align	2
 365              	.LC5:
 366 0060 4E6F2072 		.ascii	"No response from modem.\000"
 366      6573706F 
 366      6E736520 
 366      66726F6D 
 366      206D6F64 
 367              		.section	.text.modem_power_up,"ax",%progbits
 368              		.align	2
 369              		.global	modem_power_up
 370              		.thumb
 371              		.thumb_func
 372              		.type	modem_power_up, %function
 373              	modem_power_up:
 374              	.LFB69:
  94:modem.c       **** 
  95:modem.c       **** // This puts all the modem pins into a state that won't leak power
  96:modem.c       **** // Please call restore_pins() to bring them abck to function when they are needed for UART
  97:modem.c       **** uint8 modem_power_up(){
 375              		.loc 1 97 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 8
 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379 0000 80B5     		push	{r7, lr}
 380              		.cfi_def_cfa_offset 8
 381              		.cfi_offset 7, -8
 382              		.cfi_offset 14, -4
 383 0002 82B0     		sub	sp, sp, #8
 384              		.cfi_def_cfa_offset 16
 385 0004 00AF     		add	r7, sp, #0
 386              		.cfi_def_cfa_register 7
  98:modem.c       **** 
  99:modem.c       ****     pins_configure_active(); // Turns on power and configures all UART pin modes
 387              		.loc 1 99 0
 388 0006 FFF7FEFF 		bl	pins_configure_active
 100:modem.c       ****     UART_Telit_Start(); // Sets the initVar variable, calls the UART_Telit_Init() function, and the
 389              		.loc 1 100 0
 390 000a FFF7FEFF 		bl	UART_Telit_Start
 101:modem.c       ****     isr_telit_rx_StartEx(isr_telit_rx); // Sets up the interrupt and enables it. 
 391              		.loc 1 101 0
 392 000e 2C48     		ldr	r0, .L27
 393 0010 FFF7FEFF 		bl	isr_telit_rx_StartEx
 102:modem.c       **** 
 103:modem.c       ****     modem_soft_power_cycle(); // Soft power cycle makes sure that the modem is all the way on (like
 394              		.loc 1 103 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 10


 395 0014 FFF7FEFF 		bl	modem_soft_power_cycle
 104:modem.c       ****     
 105:modem.c       ****     // Turn off ECHO command (doesn't repeat your command back to you).
 106:modem.c       ****     uint8 at_ready = 0;
 396              		.loc 1 106 0
 397 0018 0023     		movs	r3, #0
 398 001a FB71     		strb	r3, [r7, #7]
 107:modem.c       ****     uint8 attempts = 0;
 399              		.loc 1 107 0
 400 001c 0023     		movs	r3, #0
 401 001e 3B71     		strb	r3, [r7, #4]
 108:modem.c       ****     // Create variable boot_time of the current time stamp.
 109:modem.c       ****     long boot_time = getTimeStamp();
 402              		.loc 1 109 0
 403 0020 FFF7FEFF 		bl	getTimeStamp
 404 0024 3860     		str	r0, [r7]
 405              	.LBB2:
 110:modem.c       ****     
 111:modem.c       ****     //it takes the 4G modem 10+secs (max 20) to boot up, so keep hitting it with AT commands until 
 112:modem.c       ****     for(uint8 attempts = 0; attempts<3; attempts++){
 406              		.loc 1 112 0
 407 0026 0023     		movs	r3, #0
 408 0028 BB71     		strb	r3, [r7, #6]
 409 002a 1CE0     		b	.L15
 410              	.L22:
 411              	.LBB3:
 113:modem.c       ****         
 114:modem.c       ****         for(uint8 pwr_check = 0; pwr_check<20; pwr_check++){
 412              		.loc 1 114 0
 413 002c 0023     		movs	r3, #0
 414 002e 7B71     		strb	r3, [r7, #5]
 415 0030 0EE0     		b	.L16
 416              	.L19:
 115:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 116:modem.c       ****             if(at_write_command("ATE0\r","OK",1000u)){
 417              		.loc 1 116 0
 418 0032 4FF47A72 		mov	r2, #1000
 419 0036 2349     		ldr	r1, .L27+4
 420 0038 2348     		ldr	r0, .L27+8
 421 003a FFF7FEFF 		bl	at_write_command
 422 003e 0346     		mov	r3, r0
 423 0040 002B     		cmp	r3, #0
 424 0042 02D0     		beq	.L17
 117:modem.c       ****                 at_ready = 1;
 425              		.loc 1 117 0
 426 0044 0123     		movs	r3, #1
 427 0046 FB71     		strb	r3, [r7, #7]
 118:modem.c       ****                 break;
 428              		.loc 1 118 0
 429 0048 05E0     		b	.L18
 430              	.L17:
 114:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 431              		.loc 1 114 0 discriminator 2
 432 004a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 433 004c 0133     		adds	r3, r3, #1
 434 004e 7B71     		strb	r3, [r7, #5]
 435              	.L16:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 11


 114:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 436              		.loc 1 114 0 is_stmt 0 discriminator 1
 437 0050 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 438 0052 132B     		cmp	r3, #19
 439 0054 EDD9     		bls	.L19
 440              	.L18:
 441              	.LBE3:
 119:modem.c       ****             }
 120:modem.c       ****         }
 121:modem.c       ****             
 122:modem.c       ****         if(at_ready == 1){
 442              		.loc 1 122 0 is_stmt 1
 443 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 444 0058 012B     		cmp	r3, #1
 445 005a 08D0     		beq	.L26
 123:modem.c       ****             break;
 124:modem.c       ****         }else{
 125:modem.c       ****             // Soft power cycle makes sure that the modem is all the way on (like holding on button
 126:modem.c       ****             modem_soft_power_cycle();
 446              		.loc 1 126 0 discriminator 2
 447 005c FFF7FEFF 		bl	modem_soft_power_cycle
 112:modem.c       ****         
 448              		.loc 1 112 0 discriminator 2
 449 0060 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 450 0062 0133     		adds	r3, r3, #1
 451 0064 BB71     		strb	r3, [r7, #6]
 452              	.L15:
 112:modem.c       ****         
 453              		.loc 1 112 0 is_stmt 0 discriminator 1
 454 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 455 0068 022B     		cmp	r3, #2
 456 006a DFD9     		bls	.L22
 457 006c 00E0     		b	.L21
 458              	.L26:
 123:modem.c       ****             break;
 459              		.loc 1 123 0 is_stmt 1
 460 006e 00BF     		nop
 461              	.L21:
 462              	.LBE2:
 127:modem.c       ****         }
 128:modem.c       ****     }
 129:modem.c       ****     // Calculate boot up time and save to variable boot_time.
 130:modem.c       ****     boot_time = getTimeStamp() - boot_time;
 463              		.loc 1 130 0
 464 0070 FFF7FEFF 		bl	getTimeStamp
 465 0074 0246     		mov	r2, r0
 466 0076 3B68     		ldr	r3, [r7]
 467 0078 D31A     		subs	r3, r2, r3
 468 007a 3B60     		str	r3, [r7]
 131:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Modem boot time: %d",boot_time);
 469              		.loc 1 131 0
 470 007c 3A68     		ldr	r2, [r7]
 471 007e 1349     		ldr	r1, .L27+12
 472 0080 0020     		movs	r0, #0
 473 0082 FFF7FEFF 		bl	printNotif
 132:modem.c       ****    
 133:modem.c       ****     if(at_ready == 1){
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 12


 474              		.loc 1 133 0
 475 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 476 0088 012B     		cmp	r3, #1
 477 008a 0AD1     		bne	.L23
 134:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Modem ready for AT commands after %d attempt(s).",attempts);
 478              		.loc 1 134 0
 479 008c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 480 008e 1A46     		mov	r2, r3
 481 0090 0F49     		ldr	r1, .L27+16
 482 0092 0020     		movs	r0, #0
 483 0094 FFF7FEFF 		bl	printNotif
 135:modem.c       ****         modem_state = MODEM_STATE_STARTUP;
 484              		.loc 1 135 0
 485 0098 0E4B     		ldr	r3, .L27+20
 486 009a 0122     		movs	r2, #1
 487 009c 1A70     		strb	r2, [r3]
 136:modem.c       ****     }else{
 137:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"No response from modem.");
 138:modem.c       ****         modem_state = MODEM_STATE_OFF;
 139:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 140:modem.c       ****         modem_power_down();
 141:modem.c       ****         return 0u;
 142:modem.c       ****     }
 143:modem.c       ****     return 1u;
 488              		.loc 1 143 0
 489 009e 0123     		movs	r3, #1
 490 00a0 09E0     		b	.L25
 491              	.L23:
 137:modem.c       ****         modem_state = MODEM_STATE_OFF;
 492              		.loc 1 137 0
 493 00a2 0D49     		ldr	r1, .L27+24
 494 00a4 0220     		movs	r0, #2
 495 00a6 FFF7FEFF 		bl	printNotif
 138:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 496              		.loc 1 138 0
 497 00aa 0A4B     		ldr	r3, .L27+20
 498 00ac 0022     		movs	r2, #0
 499 00ae 1A70     		strb	r2, [r3]
 140:modem.c       ****         return 0u;
 500              		.loc 1 140 0
 501 00b0 FFF7FEFF 		bl	modem_power_down
 141:modem.c       ****     }
 502              		.loc 1 141 0
 503 00b4 0023     		movs	r3, #0
 504              	.L25:
 144:modem.c       **** }
 505              		.loc 1 144 0
 506 00b6 1846     		mov	r0, r3
 507 00b8 0837     		adds	r7, r7, #8
 508              		.cfi_def_cfa_offset 8
 509 00ba BD46     		mov	sp, r7
 510              		.cfi_def_cfa_register 13
 511              		@ sp needed
 512 00bc 80BD     		pop	{r7, pc}
 513              	.L28:
 514 00be 00BF     		.align	2
 515              	.L27:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 13


 516 00c0 00000000 		.word	isr_telit_rx
 517 00c4 00000000 		.word	.LC0
 518 00c8 10000000 		.word	.LC2
 519 00cc 18000000 		.word	.LC3
 520 00d0 2C000000 		.word	.LC4
 521 00d4 00000000 		.word	modem_state
 522 00d8 60000000 		.word	.LC5
 523              		.cfi_endproc
 524              	.LFE69:
 525              		.size	modem_power_up, .-modem_power_up
 526              		.section	.text.modem_soft_power_cycle,"ax",%progbits
 527              		.align	2
 528              		.global	modem_soft_power_cycle
 529              		.thumb
 530              		.thumb_func
 531              		.type	modem_soft_power_cycle, %function
 532              	modem_soft_power_cycle:
 533              	.LFB70:
 145:modem.c       **** 
 146:modem.c       **** // Puts modem in soft power cycle -- modem has power but isn't all the way on, so soft power cycle 
 147:modem.c       **** void modem_soft_power_cycle(){
 534              		.loc 1 147 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 1, uses_anonymous_args = 0
 538 0000 80B5     		push	{r7, lr}
 539              		.cfi_def_cfa_offset 8
 540              		.cfi_offset 7, -8
 541              		.cfi_offset 14, -4
 542 0002 00AF     		add	r7, sp, #0
 543              		.cfi_def_cfa_register 7
 148:modem.c       ****     Pin_Telit_ONOFF_Write(1u); // Pulls Telit_ONOFF pin high
 544              		.loc 1 148 0
 545 0004 0120     		movs	r0, #1
 546 0006 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 149:modem.c       ****     CyDelay(2000u); // Give modem a sec to boot
 547              		.loc 1 149 0
 548 000a 4FF4FA60 		mov	r0, #2000
 549 000e FFF7FEFF 		bl	CyDelay
 150:modem.c       ****     Pin_Telit_ONOFF_Write(0u); // Pulls Telit_ONOFF pin low
 550              		.loc 1 150 0
 551 0012 0020     		movs	r0, #0
 552 0014 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 151:modem.c       ****     
 152:modem.c       **** }
 553              		.loc 1 152 0
 554 0018 00BF     		nop
 555 001a 80BD     		pop	{r7, pc}
 556              		.cfi_endproc
 557              	.LFE70:
 558              		.size	modem_soft_power_cycle, .-modem_soft_power_cycle
 559              		.section	.text.uart_string_reset,"ax",%progbits
 560              		.align	2
 561              		.global	uart_string_reset
 562              		.thumb
 563              		.thumb_func
 564              		.type	uart_string_reset, %function
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 14


 565              	uart_string_reset:
 566              	.LFB71:
 153:modem.c       **** 
 154:modem.c       **** // Clear and reset the uart_received_string variable and uart_string_index for the next transmissio
 155:modem.c       **** void uart_string_reset(){
 567              		.loc 1 155 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 1, uses_anonymous_args = 0
 571 0000 80B5     		push	{r7, lr}
 572              		.cfi_def_cfa_offset 8
 573              		.cfi_offset 7, -8
 574              		.cfi_offset 14, -4
 575 0002 00AF     		add	r7, sp, #0
 576              		.cfi_def_cfa_register 7
 156:modem.c       ****     uart_string_index=0;
 577              		.loc 1 156 0
 578 0004 064B     		ldr	r3, .L31
 579 0006 0022     		movs	r2, #0
 580 0008 1A80     		strh	r2, [r3]	@ movhi
 157:modem.c       ****     // memset(void *str, int c, size_t n) copies the character c (an unsigned char) to the first n 
 158:modem.c       ****     memset(uart_received_string,'\0',sizeof(uart_received_string));
 581              		.loc 1 158 0
 582 000a 4FF48062 		mov	r2, #1024
 583 000e 0021     		movs	r1, #0
 584 0010 0448     		ldr	r0, .L31+4
 585 0012 FFF7FEFF 		bl	memset
 159:modem.c       ****     // Clears the receiver memory buffer and hardware RX FIFO of all received data.
 160:modem.c       ****     UART_Telit_ClearRxBuffer();
 586              		.loc 1 160 0
 587 0016 FFF7FEFF 		bl	UART_Telit_ClearRxBuffer
 161:modem.c       **** }
 588              		.loc 1 161 0
 589 001a 00BF     		nop
 590 001c 80BD     		pop	{r7, pc}
 591              	.L32:
 592 001e 00BF     		.align	2
 593              	.L31:
 594 0020 00000000 		.word	uart_string_index
 595 0024 00000000 		.word	uart_received_string
 596              		.cfi_endproc
 597              	.LFE71:
 598              		.size	uart_string_reset, .-uart_string_reset
 599              		.section	.rodata
 600              		.align	2
 601              	.LC6:
 602 0078 4D6F6465 		.ascii	"Modem sent AT command without timeout: %s\015\012\000"
 602      6D207365 
 602      6E742041 
 602      5420636F 
 602      6D6D616E 
 603              		.align	2
 604              	.LC7:
 605 00a4 4D6F6465 		.ascii	"Modem Received expected AT Response on first Try:\012"
 605      6D205265 
 605      63656976 
 605      65642065 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 15


 605      78706563 
 606 00d6 436F6D6D 		.ascii	"Command: %s\012Received: %s\015\012\000"
 606      616E643A 
 606      2025730A 
 606      52656365 
 606      69766564 
 607 00f1 000000   		.align	2
 608              	.LC8:
 609 00f4 4D6F6465 		.ascii	"Modem required %d tries to receive AT Response: %s\015"
 609      6D207265 
 609      71756972 
 609      65642025 
 609      64207472 
 610 0127 0A00     		.ascii	"\012\000"
 611 0129 000000   		.align	2
 612              	.LC9:
 613 012c 436F756C 		.ascii	"Could not write AT command: %s\012 Received: %s\012"
 613      64206E6F 
 613      74207772 
 613      69746520 
 613      41542063 
 614 0159 00       		.ascii	"\000"
 615              		.section	.text.at_write_command,"ax",%progbits
 616              		.align	2
 617              		.global	at_write_command
 618              		.thumb
 619              		.thumb_func
 620              		.type	at_write_command, %function
 621              	at_write_command:
 622              	.LFB72:
 162:modem.c       **** 
 163:modem.c       **** // Modem controlled  via  the  serial  interface  using  the  standard  AT commands.
 164:modem.c       **** // AT is an ATTENTION command and is used as a prefix to other parameters in a string. 
 165:modem.c       **** // Sends commands to the modem
 166:modem.c       **** uint8_t at_write_command(char* commands, char* expected_response,uint32_t timeout){
 623              		.loc 1 166 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 40
 626              		@ frame_needed = 1, uses_anonymous_args = 0
 627 0000 80B5     		push	{r7, lr}
 628              		.cfi_def_cfa_offset 8
 629              		.cfi_offset 7, -8
 630              		.cfi_offset 14, -4
 631 0002 8AB0     		sub	sp, sp, #40
 632              		.cfi_def_cfa_offset 48
 633 0004 00AF     		add	r7, sp, #0
 634              		.cfi_def_cfa_register 7
 635 0006 F860     		str	r0, [r7, #12]
 636 0008 B960     		str	r1, [r7, #8]
 637 000a 7A60     		str	r2, [r7, #4]
 167:modem.c       **** 
 168:modem.c       ****     uint32 at_attempt = 0;
 638              		.loc 1 168 0
 639 000c 0023     		movs	r3, #0
 640 000e 7B62     		str	r3, [r7, #36]
 169:modem.c       ****     
 170:modem.c       ****     for(at_attempt = 0; at_attempt < 3; at_attempt++) {
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 16


 641              		.loc 1 170 0
 642 0010 0023     		movs	r3, #0
 643 0012 7B62     		str	r3, [r7, #36]
 644 0014 46E0     		b	.L34
 645              	.L42:
 646              	.LBB4:
 171:modem.c       ****         
 172:modem.c       ****         char* compare_location;
 173:modem.c       ****         uint32_t delay=10;
 647              		.loc 1 173 0
 648 0016 0A23     		movs	r3, #10
 649 0018 FB61     		str	r3, [r7, #28]
 174:modem.c       ****         uint32_t i, interval=timeout/delay;        
 650              		.loc 1 174 0
 651 001a 7A68     		ldr	r2, [r7, #4]
 652 001c FB69     		ldr	r3, [r7, #28]
 653 001e B2FBF3F3 		udiv	r3, r2, r3
 654 0022 BB61     		str	r3, [r7, #24]
 175:modem.c       ****         
 176:modem.c       ****         // Clear and reset the uart_received_string variable and uart_string_index for the next tra
 177:modem.c       ****         uart_string_reset();
 655              		.loc 1 177 0
 656 0024 FFF7FEFF 		bl	uart_string_reset
 178:modem.c       ****         
 179:modem.c       ****         // Sends a NULL terminated string to the TX buffer for transmission.
 180:modem.c       ****         UART_Telit_PutString(commands);
 657              		.loc 1 180 0
 658 0028 F868     		ldr	r0, [r7, #12]
 659 002a FFF7FEFF 		bl	UART_Telit_PutString
 181:modem.c       ****         
 182:modem.c       ****         
 183:modem.c       ****         // If no timeout, no need to wait for response
 184:modem.c       ****         if(timeout == NO_AT_TIMEOUT){
 660              		.loc 1 184 0
 661 002e 7B68     		ldr	r3, [r7, #4]
 662 0030 002B     		cmp	r3, #0
 663 0032 06D1     		bne	.L35
 185:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem sent AT command without timeout: %s\r\n", commands);
 664              		.loc 1 185 0
 665 0034 FA68     		ldr	r2, [r7, #12]
 666 0036 1F49     		ldr	r1, .L43
 667 0038 0020     		movs	r0, #0
 668 003a FFF7FEFF 		bl	printNotif
 186:modem.c       ****             return 1u;
 669              		.loc 1 186 0
 670 003e 0123     		movs	r3, #1
 671 0040 34E0     		b	.L36
 672              	.L35:
 187:modem.c       ****         }
 188:modem.c       ****       
 189:modem.c       ****      
 190:modem.c       ****         for(i=0;i<interval;i++){ 
 673              		.loc 1 190 0
 674 0042 0023     		movs	r3, #0
 675 0044 3B62     		str	r3, [r7, #32]
 676 0046 20E0     		b	.L37
 677              	.L41:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 17


 191:modem.c       ****             CyDelay((uint32) delay);
 678              		.loc 1 191 0
 679 0048 F869     		ldr	r0, [r7, #28]
 680 004a FFF7FEFF 		bl	CyDelay
 192:modem.c       ****             // strstr(const char *haystack, const char *needle) function finds the first occurrence
 193:modem.c       ****             // Returns a pointer to the first occurrence in haystack of any of the entire sequence 
 194:modem.c       ****             compare_location=strstr(uart_received_string,expected_response);        
 681              		.loc 1 194 0
 682 004e B968     		ldr	r1, [r7, #8]
 683 0050 1948     		ldr	r0, .L43+4
 684 0052 FFF7FEFF 		bl	strstr
 685 0056 7861     		str	r0, [r7, #20]
 195:modem.c       ****             if(compare_location!=NULL) {
 686              		.loc 1 195 0
 687 0058 7B69     		ldr	r3, [r7, #20]
 688 005a 002B     		cmp	r3, #0
 689 005c 12D0     		beq	.L38
 196:modem.c       ****                 if (at_attempt == 0){
 690              		.loc 1 196 0
 691 005e 7B6A     		ldr	r3, [r7, #36]
 692 0060 002B     		cmp	r3, #0
 693 0062 06D1     		bne	.L39
 197:modem.c       ****                     // we add \n for new line to make it easier to decipher
 198:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT,"Modem Received expected AT Response on first Try:\
 694              		.loc 1 198 0
 695 0064 144B     		ldr	r3, .L43+4
 696 0066 FA68     		ldr	r2, [r7, #12]
 697 0068 1449     		ldr	r1, .L43+8
 698 006a 0020     		movs	r0, #0
 699 006c FFF7FEFF 		bl	printNotif
 700 0070 06E0     		b	.L40
 701              	.L39:
 199:modem.c       ****                 }else{
 200:modem.c       ****                     printNotif(NOTIF_TYPE_WARNING,"Modem required %d tries to receive AT Response: 
 702              		.loc 1 200 0
 703 0072 7B6A     		ldr	r3, [r7, #36]
 704 0074 5A1C     		adds	r2, r3, #1
 705 0076 104B     		ldr	r3, .L43+4
 706 0078 1149     		ldr	r1, .L43+12
 707 007a 0120     		movs	r0, #1
 708 007c FFF7FEFF 		bl	printNotif
 709              	.L40:
 201:modem.c       ****                  
 202:modem.c       ****                 }
 203:modem.c       ****                 return(1);
 710              		.loc 1 203 0
 711 0080 0123     		movs	r3, #1
 712 0082 13E0     		b	.L36
 713              	.L38:
 190:modem.c       ****             CyDelay((uint32) delay);
 714              		.loc 1 190 0 discriminator 2
 715 0084 3B6A     		ldr	r3, [r7, #32]
 716 0086 0133     		adds	r3, r3, #1
 717 0088 3B62     		str	r3, [r7, #32]
 718              	.L37:
 190:modem.c       ****             CyDelay((uint32) delay);
 719              		.loc 1 190 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 18


 720 008a 3A6A     		ldr	r2, [r7, #32]
 721 008c BB69     		ldr	r3, [r7, #24]
 722 008e 9A42     		cmp	r2, r3
 723 0090 DAD3     		bcc	.L41
 204:modem.c       ****             }
 205:modem.c       ****             
 206:modem.c       ****         }  
 207:modem.c       ****         
 208:modem.c       ****         // Something went wrong, restart UART
 209:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not write AT command: %s\n Received: %s\n", commands,uar
 724              		.loc 1 209 0 is_stmt 1 discriminator 2
 725 0092 094B     		ldr	r3, .L43+4
 726 0094 FA68     		ldr	r2, [r7, #12]
 727 0096 0B49     		ldr	r1, .L43+16
 728 0098 0220     		movs	r0, #2
 729 009a FFF7FEFF 		bl	printNotif
 730              	.LBE4:
 170:modem.c       ****         
 731              		.loc 1 170 0 discriminator 2
 732 009e 7B6A     		ldr	r3, [r7, #36]
 733 00a0 0133     		adds	r3, r3, #1
 734 00a2 7B62     		str	r3, [r7, #36]
 735              	.L34:
 170:modem.c       ****         
 736              		.loc 1 170 0 is_stmt 0 discriminator 1
 737 00a4 7B6A     		ldr	r3, [r7, #36]
 738 00a6 022B     		cmp	r3, #2
 739 00a8 B5D9     		bls	.L42
 210:modem.c       ****       
 211:modem.c       ****     }
 212:modem.c       ****    // printNotif(NOTIF_TYPE_ERROR,"Modem AT response timeout: %s\r\n", commands);
 213:modem.c       ****           
 214:modem.c       ****     return(0);    
 740              		.loc 1 214 0 is_stmt 1
 741 00aa 0023     		movs	r3, #0
 742              	.L36:
 215:modem.c       **** }
 743              		.loc 1 215 0
 744 00ac 1846     		mov	r0, r3
 745 00ae 2837     		adds	r7, r7, #40
 746              		.cfi_def_cfa_offset 8
 747 00b0 BD46     		mov	sp, r7
 748              		.cfi_def_cfa_register 13
 749              		@ sp needed
 750 00b2 80BD     		pop	{r7, pc}
 751              	.L44:
 752              		.align	2
 753              	.L43:
 754 00b4 78000000 		.word	.LC6
 755 00b8 00000000 		.word	uart_received_string
 756 00bc A4000000 		.word	.LC7
 757 00c0 F4000000 		.word	.LC8
 758 00c4 2C010000 		.word	.LC9
 759              		.cfi_endproc
 760              	.LFE72:
 761              		.size	at_write_command, .-at_write_command
 762              		.section	.rodata
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 19


 763 015a 0000     		.align	2
 764              	.LC10:
 765 015c 54455354 		.ascii	"TEST_MODEM\000"
 765      5F4D4F44 
 765      454D00
 766 0167 00       		.align	2
 767              	.LC11:
 768 0168 4E6F2072 		.ascii	"No reponse from modem.\000"
 768      65706F6E 
 768      73652066 
 768      726F6D20 
 768      6D6F6465 
 769 017f 00       		.align	2
 770              	.LC12:
 771 0180 4D6F6465 		.ascii	"Modem connected to network.\000"
 771      6D20636F 
 771      6E6E6563 
 771      74656420 
 771      746F206E 
 772              		.section	.text.modem_test,"ax",%progbits
 773              		.align	2
 774              		.global	modem_test
 775              		.thumb
 776              		.thumb_func
 777              		.type	modem_test, %function
 778              	modem_test:
 779              	.LFB73:
 216:modem.c       **** 
 217:modem.c       **** // Test modem -- needs fleshed out
 218:modem.c       **** test_t modem_test(){
 780              		.loc 1 218 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 408
 783              		@ frame_needed = 1, uses_anonymous_args = 0
 784 0000 B0B5     		push	{r4, r5, r7, lr}
 785              		.cfi_def_cfa_offset 16
 786              		.cfi_offset 4, -16
 787              		.cfi_offset 5, -12
 788              		.cfi_offset 7, -8
 789              		.cfi_offset 14, -4
 790 0002 E6B0     		sub	sp, sp, #408
 791              		.cfi_def_cfa_offset 424
 792 0004 00AF     		add	r7, sp, #0
 793              		.cfi_def_cfa_register 7
 794 0006 3B1D     		adds	r3, r7, #4
 795 0008 1860     		str	r0, [r3]
 219:modem.c       ****     
 220:modem.c       ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
 221:modem.c       ****     test.status = 0;
 796              		.loc 1 221 0
 797 000a 07F10C03 		add	r3, r7, #12
 798 000e 0022     		movs	r2, #0
 799 0010 83F88020 		strb	r2, [r3, #128]
 222:modem.c       ****     // Print test name and test reason
 223:modem.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_MODEM");
 800              		.loc 1 223 0
 801 0014 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 20


 802 0018 364A     		ldr	r2, .L53
 803 001a 07CA     		ldmia	r2, {r0, r1, r2}
 804 001c 03C3     		stmia	r3!, {r0, r1}
 805 001e 1A80     		strh	r2, [r3]	@ movhi
 806 0020 0233     		adds	r3, r3, #2
 807 0022 120C     		lsrs	r2, r2, #16
 808 0024 1A70     		strb	r2, [r3]
 224:modem.c       ****     snprintf(test.reason,sizeof(test.reason),"No reponse from modem.");
 809              		.loc 1 224 0
 810 0026 07F10C03 		add	r3, r7, #12
 811 002a 8133     		adds	r3, r3, #129
 812 002c 324A     		ldr	r2, .L53+4
 813 002e 1C46     		mov	r4, r3
 814 0030 1546     		mov	r5, r2
 815 0032 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 816 0034 2060     		str	r0, [r4]	@ unaligned
 817 0036 6160     		str	r1, [r4, #4]	@ unaligned
 818 0038 A260     		str	r2, [r4, #8]	@ unaligned
 819 003a E360     		str	r3, [r4, #12]	@ unaligned
 820 003c 2868     		ldr	r0, [r5]	@ unaligned
 821 003e 2061     		str	r0, [r4, #16]	@ unaligned
 822 0040 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 823 0042 AA79     		ldrb	r2, [r5, #6]
 824 0044 A382     		strh	r3, [r4, #20]	@ unaligned
 825 0046 1346     		mov	r3, r2
 826 0048 A375     		strb	r3, [r4, #22]
 827              	.LBB5:
 225:modem.c       ****    
 226:modem.c       ****     //try the modem 60*1000ms (60 secs)
 227:modem.c       ****     for(int i = 0; i< 60; i++){
 828              		.loc 1 227 0
 829 004a 0023     		movs	r3, #0
 830 004c C7F89431 		str	r3, [r7, #404]
 831 0050 3AE0     		b	.L46
 832              	.L51:
 228:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 229:modem.c       ****         modem_process_tasks();
 833              		.loc 1 229 0
 834 0052 FFF7FEFF 		bl	modem_process_tasks
 230:modem.c       ****          
 231:modem.c       ****         if(modem_get_state() == MODEM_STATE_OFF){
 835              		.loc 1 231 0
 836 0056 FFF7FEFF 		bl	modem_get_state
 837 005a 0346     		mov	r3, r0
 838 005c 002B     		cmp	r3, #0
 839 005e 02D1     		bne	.L47
 232:modem.c       ****             // This puts all the modem points into a state that won't leak power
 233:modem.c       ****             modem_power_up();
 840              		.loc 1 233 0
 841 0060 FFF7FEFF 		bl	modem_power_up
 842 0064 27E0     		b	.L48
 843              	.L47:
 234:modem.c       ****             // Should put this on a max_try counter, so we don't just keep trying to connect over a
 235:modem.c       ****             
 236:modem.c       ****         }else if(modem_get_state() == MODEM_STATE_READY){
 844              		.loc 1 236 0
 845 0066 FFF7FEFF 		bl	modem_get_state
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 21


 846 006a 0346     		mov	r3, r0
 847 006c 042B     		cmp	r3, #4
 848 006e 22D1     		bne	.L48
 849              	.LBB6:
 237:modem.c       ****         
 238:modem.c       ****         
 239:modem.c       ****         // Get time, and if it looks good, set the RTC with it
 240:modem.c       ****         long network_time = modem_get_network_time();
 850              		.loc 1 240 0
 851 0070 FFF7FEFF 		bl	modem_get_network_time
 852 0074 C7F89001 		str	r0, [r7, #400]
 241:modem.c       ****         if(network_time != 0){
 853              		.loc 1 241 0
 854 0078 D7F89031 		ldr	r3, [r7, #400]
 855 007c 002B     		cmp	r3, #0
 856 007e 03D0     		beq	.L49
 242:modem.c       ****             setTime(network_time); // Set the system time 
 857              		.loc 1 242 0
 858 0080 D7F89001 		ldr	r0, [r7, #400]
 859 0084 FFF7FEFF 		bl	setTime
 860              	.L49:
 243:modem.c       ****         }
 244:modem.c       ****             
 245:modem.c       ****         snprintf(test.reason,sizeof(test.reason),"Modem connected to network.");
 861              		.loc 1 245 0
 862 0088 07F10C03 		add	r3, r7, #12
 863 008c 8133     		adds	r3, r3, #129
 864 008e 1B4A     		ldr	r2, .L53+8
 865 0090 1D46     		mov	r5, r3
 866 0092 1446     		mov	r4, r2
 867 0094 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 868 0096 2860     		str	r0, [r5]	@ unaligned
 869 0098 6960     		str	r1, [r5, #4]	@ unaligned
 870 009a AA60     		str	r2, [r5, #8]	@ unaligned
 871 009c EB60     		str	r3, [r5, #12]	@ unaligned
 872 009e 07CC     		ldmia	r4!, {r0, r1, r2}
 873 00a0 2861     		str	r0, [r5, #16]	@ unaligned
 874 00a2 6961     		str	r1, [r5, #20]	@ unaligned
 875 00a4 AA61     		str	r2, [r5, #24]	@ unaligned
 246:modem.c       ****         test.status = 1;
 876              		.loc 1 246 0
 877 00a6 07F10C03 		add	r3, r7, #12
 878 00aa 0122     		movs	r2, #1
 879 00ac 83F88020 		strb	r2, [r3, #128]
 247:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 248:modem.c       ****         modem_power_down();
 880              		.loc 1 248 0
 881 00b0 FFF7FEFF 		bl	modem_power_down
 249:modem.c       ****         break;
 882              		.loc 1 249 0
 883 00b4 0CE0     		b	.L50
 884              	.L48:
 885              	.LBE6:
 250:modem.c       ****         
 251:modem.c       ****       }
 252:modem.c       ****         CyDelay(1000u);
 886              		.loc 1 252 0 discriminator 2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 22


 887 00b6 4FF47A70 		mov	r0, #1000
 888 00ba FFF7FEFF 		bl	CyDelay
 227:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 889              		.loc 1 227 0 discriminator 2
 890 00be D7F89431 		ldr	r3, [r7, #404]
 891 00c2 0133     		adds	r3, r3, #1
 892 00c4 C7F89431 		str	r3, [r7, #404]
 893              	.L46:
 227:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 894              		.loc 1 227 0 is_stmt 0 discriminator 1
 895 00c8 D7F89431 		ldr	r3, [r7, #404]
 896 00cc 3B2B     		cmp	r3, #59
 897 00ce C0DD     		ble	.L51
 898              	.L50:
 899              	.LBE5:
 253:modem.c       ****         
 254:modem.c       ****     }
 255:modem.c       ****     
 256:modem.c       ****     return test;
 900              		.loc 1 256 0 is_stmt 1
 901 00d0 3B1D     		adds	r3, r7, #4
 902 00d2 1A68     		ldr	r2, [r3]
 903 00d4 07F10C03 		add	r3, r7, #12
 904 00d8 1046     		mov	r0, r2
 905 00da 1946     		mov	r1, r3
 906 00dc 40F28113 		movw	r3, #385
 907 00e0 1A46     		mov	r2, r3
 908 00e2 FFF7FEFF 		bl	memcpy
 257:modem.c       **** }
 909              		.loc 1 257 0
 910 00e6 3B1D     		adds	r3, r7, #4
 911 00e8 1868     		ldr	r0, [r3]
 912 00ea 07F5CC77 		add	r7, r7, #408
 913              		.cfi_def_cfa_offset 16
 914 00ee BD46     		mov	sp, r7
 915              		.cfi_def_cfa_register 13
 916              		@ sp needed
 917 00f0 B0BD     		pop	{r4, r5, r7, pc}
 918              	.L54:
 919 00f2 00BF     		.align	2
 920              	.L53:
 921 00f4 5C010000 		.word	.LC10
 922 00f8 68010000 		.word	.LC11
 923 00fc 80010000 		.word	.LC12
 924              		.cfi_endproc
 925              	.LFE73:
 926              		.size	modem_test, .-modem_test
 927              		.section	.text.extract_string,"ax",%progbits
 928              		.align	2
 929              		.global	extract_string
 930              		.thumb
 931              		.thumb_func
 932              		.type	extract_string, %function
 933              	extract_string:
 934              	.LFB74:
 258:modem.c       **** 
 259:modem.c       **** // Extract string from the UART
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 23


 260:modem.c       **** uint8 extract_string(char* from, const char* beginMarker, const char* endMarker,  char* target){
 935              		.loc 1 260 0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 24
 938              		@ frame_needed = 1, uses_anonymous_args = 0
 939 0000 80B5     		push	{r7, lr}
 940              		.cfi_def_cfa_offset 8
 941              		.cfi_offset 7, -8
 942              		.cfi_offset 14, -4
 943 0002 86B0     		sub	sp, sp, #24
 944              		.cfi_def_cfa_offset 32
 945 0004 00AF     		add	r7, sp, #0
 946              		.cfi_def_cfa_register 7
 947 0006 F860     		str	r0, [r7, #12]
 948 0008 B960     		str	r1, [r7, #8]
 949 000a 7A60     		str	r2, [r7, #4]
 950 000c 3B60     		str	r3, [r7]
 261:modem.c       ****     
 262:modem.c       ****         char *a, *b;
 263:modem.c       ****   
 264:modem.c       ****         // Expect the UART to contain something like "+CESQ: ##,##,##,##,##,##\r\n\r\nOK"
 265:modem.c       ****         // - Search for "+CESQ: ".  Place the starting pointer, a, at the resulting index
 266:modem.c       ****         a = strstr(from,beginMarker);
 951              		.loc 1 266 0
 952 000e B968     		ldr	r1, [r7, #8]
 953 0010 F868     		ldr	r0, [r7, #12]
 954 0012 FFF7FEFF 		bl	strstr
 955 0016 7861     		str	r0, [r7, #20]
 267:modem.c       ****         if (a == NULL) {
 956              		.loc 1 267 0
 957 0018 7B69     		ldr	r3, [r7, #20]
 958 001a 002B     		cmp	r3, #0
 959 001c 01D1     		bne	.L56
 268:modem.c       ****             //puts("+CESQ: not found in uart_received_string");
 269:modem.c       ****             a = from;
 960              		.loc 1 269 0
 961 001e FB68     		ldr	r3, [r7, #12]
 962 0020 7B61     		str	r3, [r7, #20]
 963              	.L56:
 270:modem.c       ****         }
 271:modem.c       ****         // The strlen() function calculates the length of a given string.
 272:modem.c       ****         a += strlen(beginMarker);
 964              		.loc 1 272 0
 965 0022 B868     		ldr	r0, [r7, #8]
 966 0024 FFF7FEFF 		bl	strlen
 967 0028 0246     		mov	r2, r0
 968 002a 7B69     		ldr	r3, [r7, #20]
 969 002c 1344     		add	r3, r3, r2
 970 002e 7B61     		str	r3, [r7, #20]
 273:modem.c       ****         
 274:modem.c       ****         // - Find the end marking and offset by 1
 275:modem.c       ****         // strstr(const char *haystack, const char *needle) function finds the first occurrence of 
 276:modem.c       ****         // Returns a pointer to the first occurrence in haystack of any of the entire sequence of c
 277:modem.c       ****         b = strstr(a,endMarker);
 971              		.loc 1 277 0
 972 0030 7968     		ldr	r1, [r7, #4]
 973 0032 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 24


 974 0034 FFF7FEFF 		bl	strstr
 975 0038 3861     		str	r0, [r7, #16]
 278:modem.c       ****         if (b == NULL) {
 976              		.loc 1 278 0
 977 003a 3B69     		ldr	r3, [r7, #16]
 978 003c 002B     		cmp	r3, #0
 979 003e 06D1     		bne	.L57
 279:modem.c       ****             // Puts("Comma not found in uart_received_string");
 280:modem.c       ****             b=from+strlen(from);
 980              		.loc 1 280 0
 981 0040 F868     		ldr	r0, [r7, #12]
 982 0042 FFF7FEFF 		bl	strlen
 983 0046 0246     		mov	r2, r0
 984 0048 FB68     		ldr	r3, [r7, #12]
 985 004a 1344     		add	r3, r3, r2
 986 004c 3B61     		str	r3, [r7, #16]
 987              	.L57:
 281:modem.c       ****         }        
 282:modem.c       ****         
 283:modem.c       ****         // Parse the strings and store the respective rssi and fer values
 284:modem.c       ****         strncpy(target,a,b-a);
 988              		.loc 1 284 0
 989 004e 3A69     		ldr	r2, [r7, #16]
 990 0050 7B69     		ldr	r3, [r7, #20]
 991 0052 D31A     		subs	r3, r2, r3
 992 0054 1A46     		mov	r2, r3
 993 0056 7969     		ldr	r1, [r7, #20]
 994 0058 3868     		ldr	r0, [r7]
 995 005a FFF7FEFF 		bl	strncpy
 285:modem.c       ****         target[b-a] = '\0';
 996              		.loc 1 285 0
 997 005e 3A69     		ldr	r2, [r7, #16]
 998 0060 7B69     		ldr	r3, [r7, #20]
 999 0062 D31A     		subs	r3, r2, r3
 1000 0064 1A46     		mov	r2, r3
 1001 0066 3B68     		ldr	r3, [r7]
 1002 0068 1344     		add	r3, r3, r2
 1003 006a 0022     		movs	r2, #0
 1004 006c 1A70     		strb	r2, [r3]
 286:modem.c       ****         return 1u;
 1005              		.loc 1 286 0
 1006 006e 0123     		movs	r3, #1
 287:modem.c       ****         
 288:modem.c       **** }
 1007              		.loc 1 288 0
 1008 0070 1846     		mov	r0, r3
 1009 0072 1837     		adds	r7, r7, #24
 1010              		.cfi_def_cfa_offset 8
 1011 0074 BD46     		mov	sp, r7
 1012              		.cfi_def_cfa_register 13
 1013              		@ sp needed
 1014 0076 80BD     		pop	{r7, pc}
 1015              		.cfi_endproc
 1016              	.LFE74:
 1017              		.size	extract_string, .-extract_string
 1018              		.section	.rodata
 1019              		.align	2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 25


 1020              	.LC13:
 1021 019c 54696D65 		.ascii	"Time to connect to network: %d seconds\000"
 1021      20746F20 
 1021      636F6E6E 
 1021      65637420 
 1021      746F206E 
 1022 01c3 00       		.align	2
 1023              	.LC14:
 1024 01c4 4D6F6465 		.ascii	"Modem timed out on network connect\000"
 1024      6D207469 
 1024      6D656420 
 1024      6F757420 
 1024      6F6E206E 
 1025 01e7 00       		.align	2
 1026              	.LC15:
 1027 01e8 41637175 		.ascii	"Acquired IP address: %d seconds\000"
 1027      69726564 
 1027      20495020 
 1027      61646472 
 1027      6573733A 
 1028              		.align	2
 1029              	.LC16:
 1030 0208 4D6F6465 		.ascii	"Modem timed out on IP address acquire.\000"
 1030      6D207469 
 1030      6D656420 
 1030      6F757420 
 1030      6F6E2049 
 1031              		.section	.text.modem_process_tasks,"ax",%progbits
 1032              		.align	2
 1033              		.global	modem_process_tasks
 1034              		.thumb
 1035              		.thumb_func
 1036              		.type	modem_process_tasks, %function
 1037              	modem_process_tasks:
 1038              	.LFB75:
 289:modem.c       **** 
 290:modem.c       **** // Function to startup the modem, connect to the network, and then hand it off to sleep
 291:modem.c       **** uint8 modem_process_tasks(){
 1039              		.loc 1 291 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 8
 1042              		@ frame_needed = 1, uses_anonymous_args = 0
 1043 0000 80B5     		push	{r7, lr}
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 7, -8
 1046              		.cfi_offset 14, -4
 1047 0002 82B0     		sub	sp, sp, #8
 1048              		.cfi_def_cfa_offset 16
 1049 0004 00AF     		add	r7, sp, #0
 1050              		.cfi_def_cfa_register 7
 292:modem.c       ****     // If modem state is "startup" then get the modem start time, configure modem settings, and cha
 293:modem.c       ****     if(modem_state == MODEM_STATE_STARTUP){
 1051              		.loc 1 293 0
 1052 0006 534B     		ldr	r3, .L75
 1053 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1054 000a 012B     		cmp	r3, #1
 1055 000c 0BD1     		bne	.L60
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 26


 294:modem.c       ****         
 295:modem.c       ****         modem_start_time_stamp = getTimeStamp(); // Get timestamp for modem start time
 1056              		.loc 1 295 0
 1057 000e FFF7FEFF 		bl	getTimeStamp
 1058 0012 0246     		mov	r2, r0
 1059 0014 504B     		ldr	r3, .L75+4
 1060 0016 1A60     		str	r2, [r3]
 296:modem.c       ****         modem_configure_settings(); // Configure modem settings
 1061              		.loc 1 296 0
 1062 0018 FFF7FEFF 		bl	modem_configure_settings
 297:modem.c       ****         modem_state = MODEM_STATE_WAITING_FOR_NETWORK; // Change modem state 
 1063              		.loc 1 297 0
 1064 001c 4D4B     		ldr	r3, .L75
 1065 001e 0222     		movs	r2, #2
 1066 0020 1A70     		strb	r2, [r3]
 298:modem.c       ****         return 1u; // Keep going, don't hand off to sleep yet
 1067              		.loc 1 298 0
 1068 0022 0123     		movs	r3, #1
 1069 0024 92E0     		b	.L61
 1070              	.L60:
 299:modem.c       ****         
 300:modem.c       ****     }
 301:modem.c       ****     // Else if modem state is "waiting for network" 
 302:modem.c       ****     else if(modem_state == MODEM_STATE_WAITING_FOR_NETWORK){
 1071              		.loc 1 302 0
 1072 0026 4B4B     		ldr	r3, .L75
 1073 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1074 002a 022B     		cmp	r3, #2
 1075 002c 5FD1     		bne	.L62
 1076              	.LBB7:
 303:modem.c       ****         
 304:modem.c       ****         // Check if modem has a good cell signal each second for up to 30 seconds
 305:modem.c       ****         for(uint8 i=0;i<30;i++){
 1077              		.loc 1 305 0
 1078 002e 0023     		movs	r3, #0
 1079 0030 FB71     		strb	r3, [r7, #7]
 1080 0032 2BE0     		b	.L63
 1081              	.L68:
 306:modem.c       ****             // Get cell network stats
 307:modem.c       ****             get_cell_network_stats();
 1082              		.loc 1 307 0
 1083 0034 FFF7FEFF 		bl	get_cell_network_stats
 308:modem.c       ****             // If SIM is standard, check rsrp
 309:modem.c       ****             if(updatable_parameters.sim_type == SIM_TYPE_STANDARD){
 1084              		.loc 1 309 0
 1085 0038 484B     		ldr	r3, .L75+8
 1086 003a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1087 003c 83F00103 		eor	r3, r3, #1
 1088 0040 DBB2     		uxtb	r3, r3
 1089 0042 002B     		cmp	r3, #0
 1090 0044 07D0     		beq	.L64
 310:modem.c       ****                 // If cell signal (rsrp) is strong enough, break and connect to the network
 311:modem.c       ****                 // Otherwise, keep checking rsrp
 312:modem.c       ****                 if(modem_stats.rsrp > 26 && modem_stats.rsrp != 255){
 1091              		.loc 1 312 0
 1092 0046 464B     		ldr	r3, .L75+12
 1093 0048 5B69     		ldr	r3, [r3, #20]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 27


 1094 004a 1A2B     		cmp	r3, #26
 1095 004c 03DD     		ble	.L64
 1096              		.loc 1 312 0 is_stmt 0 discriminator 1
 1097 004e 444B     		ldr	r3, .L75+12
 1098 0050 5B69     		ldr	r3, [r3, #20]
 1099 0052 FF2B     		cmp	r3, #255
 1100 0054 1ED1     		bne	.L74
 1101              	.L64:
 313:modem.c       ****                     break;
 314:modem.c       ****                 }
 315:modem.c       ****             }
 316:modem.c       ****             // If SIM is super, check if rsrp or rscp are strong enough
 317:modem.c       ****             if(updatable_parameters.sim_type == SIM_TYPE_SUPER){
 1102              		.loc 1 317 0 is_stmt 1
 1103 0056 414B     		ldr	r3, .L75+8
 1104 0058 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1105 005a 002B     		cmp	r3, #0
 1106 005c 0FD0     		beq	.L66
 318:modem.c       ****                 // If cell signal is strong enough, break and connect to the network
 319:modem.c       ****                 // Otherwise, keep checking rsrp or rscp
 320:modem.c       ****                 if((modem_stats.rscp > 36 && modem_stats.rscp != 255)||(modem_stats.rsrp > 26 && mo
 1107              		.loc 1 320 0
 1108 005e 404B     		ldr	r3, .L75+12
 1109 0060 9B68     		ldr	r3, [r3, #8]
 1110 0062 242B     		cmp	r3, #36
 1111 0064 03DD     		ble	.L67
 1112              		.loc 1 320 0 is_stmt 0 discriminator 1
 1113 0066 3E4B     		ldr	r3, .L75+12
 1114 0068 9B68     		ldr	r3, [r3, #8]
 1115 006a FF2B     		cmp	r3, #255
 1116 006c 13D1     		bne	.L65
 1117              	.L67:
 1118              		.loc 1 320 0 discriminator 3
 1119 006e 3C4B     		ldr	r3, .L75+12
 1120 0070 5B69     		ldr	r3, [r3, #20]
 1121 0072 1A2B     		cmp	r3, #26
 1122 0074 03DD     		ble	.L66
 1123              		.loc 1 320 0 discriminator 4
 1124 0076 3A4B     		ldr	r3, .L75+12
 1125 0078 5B69     		ldr	r3, [r3, #20]
 1126 007a FF2B     		cmp	r3, #255
 1127 007c 0BD1     		bne	.L65
 1128              	.L66:
 321:modem.c       ****                     break;
 322:modem.c       ****                 }
 323:modem.c       ****             }
 324:modem.c       ****             // Delay for 1 second
 325:modem.c       ****             CyDelay(1000u);
 1129              		.loc 1 325 0 is_stmt 1 discriminator 2
 1130 007e 4FF47A70 		mov	r0, #1000
 1131 0082 FFF7FEFF 		bl	CyDelay
 305:modem.c       ****             // Get cell network stats
 1132              		.loc 1 305 0 discriminator 2
 1133 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1134 0088 0133     		adds	r3, r3, #1
 1135 008a FB71     		strb	r3, [r7, #7]
 1136              	.L63:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 28


 305:modem.c       ****             // Get cell network stats
 1137              		.loc 1 305 0 is_stmt 0 discriminator 1
 1138 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1139 008e 1D2B     		cmp	r3, #29
 1140 0090 D0D9     		bls	.L68
 1141 0092 00E0     		b	.L65
 1142              	.L74:
 313:modem.c       ****                 }
 1143              		.loc 1 313 0 is_stmt 1
 1144 0094 00BF     		nop
 1145              	.L65:
 1146              	.LBE7:
 326:modem.c       ****         }
 327:modem.c       ****         
 328:modem.c       ****         // If modem connected to the cell network, save/print the time to connect to the network
 329:modem.c       ****         if(is_connected_to_cell_network()){
 1147              		.loc 1 329 0
 1148 0096 FFF7FEFF 		bl	is_connected_to_cell_network
 1149 009a 0346     		mov	r3, r0
 1150 009c 002B     		cmp	r3, #0
 1151 009e 13D0     		beq	.L69
 330:modem.c       ****       
 331:modem.c       ****              modem_stats.time_to_network_connect = (int)(getTimeStamp() - (int32)modem_start_time_s
 1152              		.loc 1 331 0
 1153 00a0 FFF7FEFF 		bl	getTimeStamp
 1154 00a4 0246     		mov	r2, r0
 1155 00a6 2C4B     		ldr	r3, .L75+4
 1156 00a8 1B68     		ldr	r3, [r3]
 1157 00aa D31A     		subs	r3, r2, r3
 1158 00ac 2C4A     		ldr	r2, .L75+12
 1159 00ae 9361     		str	r3, [r2, #24]
 332:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Time to connect to network: %d seconds",
 1160              		.loc 1 332 0
 1161 00b0 2B4B     		ldr	r3, .L75+12
 1162 00b2 9B69     		ldr	r3, [r3, #24]
 1163 00b4 1A46     		mov	r2, r3
 1164 00b6 2B49     		ldr	r1, .L75+16
 1165 00b8 0020     		movs	r0, #0
 1166 00ba FFF7FEFF 		bl	printNotif
 333:modem.c       ****                                             modem_stats.time_to_network_connect);
 334:modem.c       ****             set_up_internet_connection(); // Setup the internet connection
 1167              		.loc 1 334 0
 1168 00be FFF7FEFF 		bl	set_up_internet_connection
 335:modem.c       ****             modem_state = MODEM_STATE_WAITING_FOR_IP; // Change modem state 
 1169              		.loc 1 335 0
 1170 00c2 244B     		ldr	r3, .L75
 1171 00c4 0322     		movs	r2, #3
 1172 00c6 1A70     		strb	r2, [r3]
 1173              	.L69:
 336:modem.c       ****         }
 337:modem.c       ****         
 338:modem.c       ****         //power off if we time out should only take ~30 secs to connect to network
 339:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_NETWORK_CONNECT){
 1174              		.loc 1 339 0
 1175 00c8 FFF7FEFF 		bl	getTimeStamp
 1176 00cc 0246     		mov	r2, r0
 1177 00ce 224B     		ldr	r3, .L75+4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 29


 1178 00d0 1B68     		ldr	r3, [r3]
 1179 00d2 D31A     		subs	r3, r2, r3
 1180 00d4 B42B     		cmp	r3, #180
 1181 00d6 08DD     		ble	.L70
 340:modem.c       ****             modem_state = MODEM_STATE_OFF; // Change modem state
 1182              		.loc 1 340 0
 1183 00d8 1E4B     		ldr	r3, .L75
 1184 00da 0022     		movs	r2, #0
 1185 00dc 1A70     		strb	r2, [r3]
 341:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1186              		.loc 1 341 0
 1187 00de FFF7FEFF 		bl	modem_power_down
 342:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on network connect");
 1188              		.loc 1 342 0
 1189 00e2 2149     		ldr	r1, .L75+20
 1190 00e4 0220     		movs	r0, #2
 1191 00e6 FFF7FEFF 		bl	printNotif
 1192              	.L70:
 343:modem.c       ****             
 344:modem.c       ****         }
 345:modem.c       ****         return 0u;//ok to hand off to sleep
 1193              		.loc 1 345 0
 1194 00ea 0023     		movs	r3, #0
 1195 00ec 2EE0     		b	.L61
 1196              	.L62:
 346:modem.c       ****         
 347:modem.c       ****     // Else if modem state is "waiting for IP"
 348:modem.c       ****     }else if(modem_state == MODEM_STATE_WAITING_FOR_IP){
 1197              		.loc 1 348 0
 1198 00ee 194B     		ldr	r3, .L75
 1199 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1200 00f2 032B     		cmp	r3, #3
 1201 00f4 29D1     		bne	.L71
 349:modem.c       ****         // If the modem is connected to the internet, change modem state to "ready", save/print tim
 350:modem.c       ****         if(is_connected_to_internet()){
 1202              		.loc 1 350 0
 1203 00f6 FFF7FEFF 		bl	is_connected_to_internet
 1204 00fa 0346     		mov	r3, r0
 1205 00fc 002B     		cmp	r3, #0
 1206 00fe 11D0     		beq	.L72
 351:modem.c       ****             modem_state = MODEM_STATE_READY; // Change modem state
 1207              		.loc 1 351 0
 1208 0100 144B     		ldr	r3, .L75
 1209 0102 0422     		movs	r2, #4
 1210 0104 1A70     		strb	r2, [r3]
 352:modem.c       ****             // Save/print time to acquire IP address
 353:modem.c       ****             modem_stats.time_to_acquire_ip = (int)(getTimeStamp() - (int32)modem_start_time_stamp);
 1211              		.loc 1 353 0
 1212 0106 FFF7FEFF 		bl	getTimeStamp
 1213 010a 0246     		mov	r2, r0
 1214 010c 124B     		ldr	r3, .L75+4
 1215 010e 1B68     		ldr	r3, [r3]
 1216 0110 D31A     		subs	r3, r2, r3
 1217 0112 134A     		ldr	r2, .L75+12
 1218 0114 D361     		str	r3, [r2, #28]
 354:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Acquired IP address: %d seconds",
 1219              		.loc 1 354 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 30


 1220 0116 124B     		ldr	r3, .L75+12
 1221 0118 DB69     		ldr	r3, [r3, #28]
 1222 011a 1A46     		mov	r2, r3
 1223 011c 1349     		ldr	r1, .L75+24
 1224 011e 0020     		movs	r0, #0
 1225 0120 FFF7FEFF 		bl	printNotif
 1226              	.L72:
 355:modem.c       ****                                             modem_stats.time_to_acquire_ip);
 356:modem.c       ****         }
 357:modem.c       ****         
 358:modem.c       ****         // Power off if we times out should only take ~30 secs to connect to network
 359:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_IP_ACQUIRE){
 1227              		.loc 1 359 0
 1228 0124 FFF7FEFF 		bl	getTimeStamp
 1229 0128 0246     		mov	r2, r0
 1230 012a 0B4B     		ldr	r3, .L75+4
 1231 012c 1B68     		ldr	r3, [r3]
 1232 012e D31A     		subs	r3, r2, r3
 1233 0130 E62B     		cmp	r3, #230
 1234 0132 08DD     		ble	.L73
 360:modem.c       ****             modem_state = MODEM_STATE_OFF;
 1235              		.loc 1 360 0
 1236 0134 074B     		ldr	r3, .L75
 1237 0136 0022     		movs	r2, #0
 1238 0138 1A70     		strb	r2, [r3]
 361:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1239              		.loc 1 361 0
 1240 013a FFF7FEFF 		bl	modem_power_down
 362:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on IP address acquire.");
 1241              		.loc 1 362 0
 1242 013e 0C49     		ldr	r1, .L75+28
 1243 0140 0220     		movs	r0, #2
 1244 0142 FFF7FEFF 		bl	printNotif
 1245              	.L73:
 363:modem.c       ****       
 364:modem.c       ****         }
 365:modem.c       ****         return 0u;//ok to hand off to sleep
 1246              		.loc 1 365 0
 1247 0146 0023     		movs	r3, #0
 1248 0148 00E0     		b	.L61
 1249              	.L71:
 366:modem.c       ****     }
 367:modem.c       ****     
 368:modem.c       ****     return 0u;
 1250              		.loc 1 368 0
 1251 014a 0023     		movs	r3, #0
 1252              	.L61:
 369:modem.c       ****     
 370:modem.c       **** }
 1253              		.loc 1 370 0
 1254 014c 1846     		mov	r0, r3
 1255 014e 0837     		adds	r7, r7, #8
 1256              		.cfi_def_cfa_offset 8
 1257 0150 BD46     		mov	sp, r7
 1258              		.cfi_def_cfa_register 13
 1259              		@ sp needed
 1260 0152 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 31


 1261              	.L76:
 1262              		.align	2
 1263              	.L75:
 1264 0154 00000000 		.word	modem_state
 1265 0158 00000000 		.word	modem_start_time_stamp
 1266 015c 00000000 		.word	updatable_parameters
 1267 0160 00000000 		.word	modem_stats
 1268 0164 9C010000 		.word	.LC13
 1269 0168 C4010000 		.word	.LC14
 1270 016c E8010000 		.word	.LC15
 1271 0170 08020000 		.word	.LC16
 1272              		.cfi_endproc
 1273              	.LFE75:
 1274              		.size	modem_process_tasks, .-modem_process_tasks
 1275              		.section	.rodata
 1276 022f 00       		.align	2
 1277              	.LC17:
 1278 0230 43686563 		.ascii	"Checking AT+CREG?\000"
 1278      6B696E67 
 1278      2041542B 
 1278      43524547 
 1278      3F00
 1279 0242 0000     		.align	2
 1280              	.LC18:
 1281 0244 41542B43 		.ascii	"AT+CREG?\015\000"
 1281      5245473F 
 1281      0D00
 1282 024e 0000     		.align	2
 1283              	.LC19:
 1284 0250 45787472 		.ascii	"Extracting string AT+CREG?\000"
 1284      61637469 
 1284      6E672073 
 1284      7472696E 
 1284      67204154 
 1285 026b 00       		.align	2
 1286              	.LC20:
 1287 026c 75617274 		.ascii	"uart_received_string: %s\000"
 1287      5F726563 
 1287      65697665 
 1287      645F7374 
 1287      72696E67 
 1288 0285 000000   		.align	2
 1289              	.LC21:
 1290 0288 0D00     		.ascii	"\015\000"
 1291 028a 0000     		.align	2
 1292              	.LC22:
 1293 028c 3A2000   		.ascii	": \000"
 1294 028f 00       		.align	2
 1295              	.LC23:
 1296 0290 52656769 		.ascii	"Registered to network, CREG: %s\000"
 1296      73746572 
 1296      65642074 
 1296      6F206E65 
 1296      74776F72 
 1297              		.align	2
 1298              	.LC24:
 1299 02b0 446F6E65 		.ascii	"Done extracing string AT+CREG?\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 32


 1299      20657874 
 1299      72616369 
 1299      6E672073 
 1299      7472696E 
 1300 02cf 00       		.align	2
 1301              	.LC25:
 1302 02d0 302C3100 		.ascii	"0,1\000"
 1303              		.align	2
 1304              	.LC26:
 1305 02d4 302C3500 		.ascii	"0,5\000"
 1306              		.section	.text.is_connected_to_cell_network,"ax",%progbits
 1307              		.align	2
 1308              		.global	is_connected_to_cell_network
 1309              		.thumb
 1310              		.thumb_func
 1311              		.type	is_connected_to_cell_network, %function
 1312              	is_connected_to_cell_network:
 1313              	.LFB76:
 371:modem.c       **** 
 372:modem.c       **** // Checks network status, writes commands to the modem, then extracts string from UART
 373:modem.c       **** uint8 is_connected_to_cell_network(){
 1314              		.loc 1 373 0
 1315              		.cfi_startproc
 1316              		@ args = 0, pretend = 0, frame = 16
 1317              		@ frame_needed = 1, uses_anonymous_args = 0
 1318 0000 80B5     		push	{r7, lr}
 1319              		.cfi_def_cfa_offset 8
 1320              		.cfi_offset 7, -8
 1321              		.cfi_offset 14, -4
 1322 0002 84B0     		sub	sp, sp, #16
 1323              		.cfi_def_cfa_offset 24
 1324 0004 00AF     		add	r7, sp, #0
 1325              		.cfi_def_cfa_register 7
 374:modem.c       ****     // AT command AT+CREG? is the Network Registration Report to check network status -- need '0,0'
 375:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Checking AT+CREG?");
 1326              		.loc 1 375 0
 1327 0006 2049     		ldr	r1, .L82
 1328 0008 0020     		movs	r0, #0
 1329 000a FFF7FEFF 		bl	printNotif
 376:modem.c       ****     // create new uint8 variable stust and set to equal the output of the function at_write_command
 377:modem.c       ****     uint8 status = at_write_command("AT+CREG?\r", "OK",DEFAULT_AT_TIMEOUT);
 1330              		.loc 1 377 0
 1331 000e 4FF4FA62 		mov	r2, #2000
 1332 0012 1E49     		ldr	r1, .L82+4
 1333 0014 1E48     		ldr	r0, .L82+8
 1334 0016 FFF7FEFF 		bl	at_write_command
 1335 001a 0346     		mov	r3, r0
 1336 001c FB73     		strb	r3, [r7, #15]
 378:modem.c       ****     
 379:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Extracting string AT+CREG?");
 1337              		.loc 1 379 0
 1338 001e 1D49     		ldr	r1, .L82+12
 1339 0020 0020     		movs	r0, #0
 1340 0022 FFF7FEFF 		bl	printNotif
 380:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"uart_received_string: %s",uart_received_string);
 1341              		.loc 1 380 0
 1342 0026 1C4A     		ldr	r2, .L82+16
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 33


 1343 0028 1C49     		ldr	r1, .L82+20
 1344 002a 0020     		movs	r0, #0
 1345 002c FFF7FEFF 		bl	printNotif
 381:modem.c       ****     
 382:modem.c       ****     // If the modem has a status
 383:modem.c       ****     if(status){
 1346              		.loc 1 383 0
 1347 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1348 0032 002B     		cmp	r3, #0
 1349 0034 23D0     		beq	.L78
 1350              	.LBB8:
 384:modem.c       ****         // Create a character array of length 10 called creg
 385:modem.c       ****         char creg[10];
 386:modem.c       ****         creg[0] = '\0';
 1351              		.loc 1 386 0
 1352 0036 0023     		movs	r3, #0
 1353 0038 3B71     		strb	r3, [r7, #4]
 387:modem.c       ****         // Extract string from the UART
 388:modem.c       ****         extract_string(uart_received_string,": ","\r",creg);
 1354              		.loc 1 388 0
 1355 003a 3B1D     		adds	r3, r7, #4
 1356 003c 184A     		ldr	r2, .L82+24
 1357 003e 1949     		ldr	r1, .L82+28
 1358 0040 1548     		ldr	r0, .L82+16
 1359 0042 FFF7FEFF 		bl	extract_string
 389:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Registered to network, CREG: %s",creg);
 1360              		.loc 1 389 0
 1361 0046 3B1D     		adds	r3, r7, #4
 1362 0048 1A46     		mov	r2, r3
 1363 004a 1749     		ldr	r1, .L82+32
 1364 004c 0020     		movs	r0, #0
 1365 004e FFF7FEFF 		bl	printNotif
 390:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Done extracing string AT+CREG?");
 1366              		.loc 1 390 0
 1367 0052 1649     		ldr	r1, .L82+36
 1368 0054 0020     		movs	r0, #0
 1369 0056 FFF7FEFF 		bl	printNotif
 391:modem.c       ****     
 392:modem.c       ****         // Search creg for "0,1" or "0,5", if either exists and either is not equal to NULL, return
 393:modem.c       ****         if((strstr(creg,"0,1")!=NULL)||(strstr(creg,"0,5")!=NULL)){
 1370              		.loc 1 393 0
 1371 005a 3B1D     		adds	r3, r7, #4
 1372 005c 1449     		ldr	r1, .L82+40
 1373 005e 1846     		mov	r0, r3
 1374 0060 FFF7FEFF 		bl	strstr
 1375 0064 0346     		mov	r3, r0
 1376 0066 002B     		cmp	r3, #0
 1377 0068 07D1     		bne	.L79
 1378              		.loc 1 393 0 is_stmt 0 discriminator 1
 1379 006a 3B1D     		adds	r3, r7, #4
 1380 006c 1149     		ldr	r1, .L82+44
 1381 006e 1846     		mov	r0, r3
 1382 0070 FFF7FEFF 		bl	strstr
 1383 0074 0346     		mov	r3, r0
 1384 0076 002B     		cmp	r3, #0
 1385 0078 01D0     		beq	.L78
 1386              	.L79:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 34


 394:modem.c       ****             return 1u;
 1387              		.loc 1 394 0 is_stmt 1
 1388 007a 0123     		movs	r3, #1
 1389 007c 00E0     		b	.L81
 1390              	.L78:
 1391              	.LBE8:
 395:modem.c       ****         }
 396:modem.c       ****     }
 397:modem.c       ****     // If the modem doesn't have a status, return 0u
 398:modem.c       ****     return 0u;
 1392              		.loc 1 398 0
 1393 007e 0023     		movs	r3, #0
 1394              	.L81:
 399:modem.c       ****         
 400:modem.c       **** }
 1395              		.loc 1 400 0
 1396 0080 1846     		mov	r0, r3
 1397 0082 1037     		adds	r7, r7, #16
 1398              		.cfi_def_cfa_offset 8
 1399 0084 BD46     		mov	sp, r7
 1400              		.cfi_def_cfa_register 13
 1401              		@ sp needed
 1402 0086 80BD     		pop	{r7, pc}
 1403              	.L83:
 1404              		.align	2
 1405              	.L82:
 1406 0088 30020000 		.word	.LC17
 1407 008c 00000000 		.word	.LC0
 1408 0090 44020000 		.word	.LC18
 1409 0094 50020000 		.word	.LC19
 1410 0098 00000000 		.word	uart_received_string
 1411 009c 6C020000 		.word	.LC20
 1412 00a0 88020000 		.word	.LC21
 1413 00a4 8C020000 		.word	.LC22
 1414 00a8 90020000 		.word	.LC23
 1415 00ac B0020000 		.word	.LC24
 1416 00b0 D0020000 		.word	.LC25
 1417 00b4 D4020000 		.word	.LC26
 1418              		.cfi_endproc
 1419              	.LFE76:
 1420              		.size	is_connected_to_cell_network, .-is_connected_to_cell_network
 1421              		.section	.rodata
 1422              		.align	2
 1423              	.LC27:
 1424 02d8 41542353 		.ascii	"AT#SGACT=1,1\015\012\000"
 1424      47414354 
 1424      3D312C31 
 1424      0D0A00
 1425              		.section	.text.set_up_internet_connection,"ax",%progbits
 1426              		.align	2
 1427              		.global	set_up_internet_connection
 1428              		.thumb
 1429              		.thumb_func
 1430              		.type	set_up_internet_connection, %function
 1431              	set_up_internet_connection:
 1432              	.LFB77:
 401:modem.c       **** 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 35


 402:modem.c       **** // Connect the modem to the internet
 403:modem.c       **** void set_up_internet_connection(){
 1433              		.loc 1 403 0
 1434              		.cfi_startproc
 1435              		@ args = 0, pretend = 0, frame = 0
 1436              		@ frame_needed = 1, uses_anonymous_args = 0
 1437 0000 80B5     		push	{r7, lr}
 1438              		.cfi_def_cfa_offset 8
 1439              		.cfi_offset 7, -8
 1440              		.cfi_offset 14, -4
 1441 0002 00AF     		add	r7, sp, #0
 1442              		.cfi_def_cfa_register 7
 404:modem.c       ****     
 405:modem.c       ****     //port 3
 406:modem.c       ****    //<connId>,<srMode>,<dataMode>, 
 407:modem.c       ****     //at_write_command("AT#SCFGEXT=1,1,0,0,0,0\r", "OK",DEFAULT_AT_TIMEOUT);////LTE modem relevant
 408:modem.c       ****     
 409:modem.c       ****     //<connId>,<cid>,<pktSz>,<maxTo>,<connTo>,<txTo>
 410:modem.c       ****     //at_write_command("AT#SCFG=1,3,300,90,600,50\r", "OK",DEFAULT_AT_TIMEOUT); //LTE modem relevan
 411:modem.c       ****     // <cid>,<stat>
 412:modem.c       ****    
 413:modem.c       ****     // AT command SGACT is Context Activation command is used to activate the specified PDP context
 414:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",1000u);
 1443              		.loc 1 414 0
 1444 0004 4FF47A72 		mov	r2, #1000
 1445 0008 0249     		ldr	r1, .L85
 1446 000a 0348     		ldr	r0, .L85+4
 1447 000c FFF7FEFF 		bl	at_write_command
 415:modem.c       ****     
 416:modem.c       **** }
 1448              		.loc 1 416 0
 1449 0010 00BF     		nop
 1450 0012 80BD     		pop	{r7, pc}
 1451              	.L86:
 1452              		.align	2
 1453              	.L85:
 1454 0014 00000000 		.word	.LC0
 1455 0018 D8020000 		.word	.LC27
 1456              		.cfi_endproc
 1457              	.LFE77:
 1458              		.size	set_up_internet_connection, .-set_up_internet_connection
 1459              		.section	.rodata
 1460 02e7 00       		.align	2
 1461              	.LC28:
 1462 02e8 312C3100 		.ascii	"1,1\000"
 1463              		.align	2
 1464              	.LC29:
 1465 02ec 41542353 		.ascii	"AT#SGACT?\015\000"
 1465      47414354 
 1465      3F0D00
 1466              		.section	.text.is_connected_to_internet,"ax",%progbits
 1467              		.align	2
 1468              		.global	is_connected_to_internet
 1469              		.thumb
 1470              		.thumb_func
 1471              		.type	is_connected_to_internet, %function
 1472              	is_connected_to_internet:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 36


 1473              	.LFB78:
 417:modem.c       **** 
 418:modem.c       **** // Checks if the modem is connected to the internet
 419:modem.c       **** uint8 is_connected_to_internet(){
 1474              		.loc 1 419 0
 1475              		.cfi_startproc
 1476              		@ args = 0, pretend = 0, frame = 0
 1477              		@ frame_needed = 1, uses_anonymous_args = 0
 1478 0000 80B5     		push	{r7, lr}
 1479              		.cfi_def_cfa_offset 8
 1480              		.cfi_offset 7, -8
 1481              		.cfi_offset 14, -4
 1482 0002 00AF     		add	r7, sp, #0
 1483              		.cfi_def_cfa_register 7
 420:modem.c       ****     // AT command SGACT? reports the range for the parameters <cid> and <stat>
 421:modem.c       ****     // cid: is the Packet Data Protocol (PDP) Context Identifier which specifies the particular PDP
 422:modem.c       ****     // stat: gives the context staus (0 deactivated and 1 activated)
 423:modem.c       ****     // Check for 3,1 if Verizon 
 424:modem.c       ****     if(at_write_command("AT#SGACT?\r", "1,1",DEFAULT_AT_TIMEOUT)){
 1484              		.loc 1 424 0
 1485 0004 4FF4FA62 		mov	r2, #2000
 1486 0008 0549     		ldr	r1, .L90
 1487 000a 0648     		ldr	r0, .L90+4
 1488 000c FFF7FEFF 		bl	at_write_command
 1489 0010 0346     		mov	r3, r0
 1490 0012 002B     		cmp	r3, #0
 1491 0014 01D0     		beq	.L88
 425:modem.c       ****         return 1u;
 1492              		.loc 1 425 0
 1493 0016 0123     		movs	r3, #1
 1494 0018 00E0     		b	.L89
 1495              	.L88:
 426:modem.c       ****     }
 427:modem.c       ****     return 0u;  
 1496              		.loc 1 427 0
 1497 001a 0023     		movs	r3, #0
 1498              	.L89:
 428:modem.c       **** }
 1499              		.loc 1 428 0
 1500 001c 1846     		mov	r0, r3
 1501 001e 80BD     		pop	{r7, pc}
 1502              	.L91:
 1503              		.align	2
 1504              	.L90:
 1505 0020 E8020000 		.word	.LC28
 1506 0024 EC020000 		.word	.LC29
 1507              		.cfi_endproc
 1508              	.LFE78:
 1509              		.size	is_connected_to_internet, .-is_connected_to_internet
 1510              		.section	.rodata
 1511 02f7 00       		.align	2
 1512              	.LC30:
 1513 02f8 41542B43 		.ascii	"AT+CESQ\015\000"
 1513      4553510D 
 1513      00
 1514 0301 000000   		.align	2
 1515              	.LC31:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 37


 1516 0304 0D0A2B43 		.ascii	"\015\012+CESQ: %d,%d,%d,%d,%d,%d%*s\000"
 1516      4553513A 
 1516      2025642C 
 1516      25642C25 
 1516      642C2564 
 1517              		.section	.text.get_cell_network_stats,"ax",%progbits
 1518              		.align	2
 1519              		.global	get_cell_network_stats
 1520              		.thumb
 1521              		.thumb_func
 1522              		.type	get_cell_network_stats, %function
 1523              	get_cell_network_stats:
 1524              	.LFB79:
 429:modem.c       **** 
 430:modem.c       **** void get_cell_network_stats(){
 1525              		.loc 1 430 0
 1526              		.cfi_startproc
 1527              		@ args = 0, pretend = 0, frame = 8
 1528              		@ frame_needed = 1, uses_anonymous_args = 0
 1529 0000 80B5     		push	{r7, lr}
 1530              		.cfi_def_cfa_offset 8
 1531              		.cfi_offset 7, -8
 1532              		.cfi_offset 14, -4
 1533 0002 86B0     		sub	sp, sp, #24
 1534              		.cfi_def_cfa_offset 32
 1535 0004 04AF     		add	r7, sp, #16
 1536              		.cfi_def_cfa 7, 16
 431:modem.c       ****     // Initialize values
 432:modem.c       ****     modem_stats.ber = 255;
 1537              		.loc 1 432 0
 1538 0006 154B     		ldr	r3, .L93
 1539 0008 FF22     		movs	r2, #255
 1540 000a 5A60     		str	r2, [r3, #4]
 433:modem.c       ****     modem_stats.ecno = 255;
 1541              		.loc 1 433 0
 1542 000c 134B     		ldr	r3, .L93
 1543 000e FF22     		movs	r2, #255
 1544 0010 DA60     		str	r2, [r3, #12]
 434:modem.c       ****     modem_stats.rscp = 255;
 1545              		.loc 1 434 0
 1546 0012 124B     		ldr	r3, .L93
 1547 0014 FF22     		movs	r2, #255
 1548 0016 9A60     		str	r2, [r3, #8]
 435:modem.c       ****     modem_stats.rsrp = 255;
 1549              		.loc 1 435 0
 1550 0018 104B     		ldr	r3, .L93
 1551 001a FF22     		movs	r2, #255
 1552 001c 5A61     		str	r2, [r3, #20]
 436:modem.c       ****     modem_stats.rsrq = 255;
 1553              		.loc 1 436 0
 1554 001e 0F4B     		ldr	r3, .L93
 1555 0020 FF22     		movs	r2, #255
 1556 0022 1A61     		str	r2, [r3, #16]
 437:modem.c       ****     modem_stats.rxlev = 255;
 1557              		.loc 1 437 0
 1558 0024 0D4B     		ldr	r3, .L93
 1559 0026 FF22     		movs	r2, #255
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 38


 1560 0028 1A60     		str	r2, [r3]
 438:modem.c       **** 
 439:modem.c       ****     //for(uint8 attempts =0; attempts <10; attempts++){
 440:modem.c       ****     at_write_command("AT+CESQ\r", "OK", DEFAULT_AT_TIMEOUT);
 1561              		.loc 1 440 0
 1562 002a 4FF4FA62 		mov	r2, #2000
 1563 002e 0C49     		ldr	r1, .L93+4
 1564 0030 0C48     		ldr	r0, .L93+8
 1565 0032 FFF7FEFF 		bl	at_write_command
 441:modem.c       ****     //CESQ: <rxlev>,<ber>,<rscp>,<ecno>,<rsrq>,<rsrp>
 442:modem.c       **** 
 443:modem.c       ****     int match = sscanf(uart_received_string,"\r\n+CESQ: %d,%d,%d,%d,%d,%d%*s",
 1566              		.loc 1 443 0
 1567 0036 0C4B     		ldr	r3, .L93+12
 1568 0038 0393     		str	r3, [sp, #12]
 1569 003a 0C4B     		ldr	r3, .L93+16
 1570 003c 0293     		str	r3, [sp, #8]
 1571 003e 0C4B     		ldr	r3, .L93+20
 1572 0040 0193     		str	r3, [sp, #4]
 1573 0042 0C4B     		ldr	r3, .L93+24
 1574 0044 0093     		str	r3, [sp]
 1575 0046 0C4B     		ldr	r3, .L93+28
 1576 0048 044A     		ldr	r2, .L93
 1577 004a 0C49     		ldr	r1, .L93+32
 1578 004c 0C48     		ldr	r0, .L93+36
 1579 004e FFF7FEFF 		bl	sscanf
 1580 0052 7860     		str	r0, [r7, #4]
 444:modem.c       ****         &modem_stats.rxlev,
 445:modem.c       ****         &modem_stats.ber,
 446:modem.c       ****         &modem_stats.rscp,
 447:modem.c       ****         &modem_stats.ecno,
 448:modem.c       ****         &modem_stats.rsrq,
 449:modem.c       ****         &modem_stats.rsrp);
 450:modem.c       **** 
 451:modem.c       ****         //check to see if we’re getting a good received signal strength
 452:modem.c       ****         //if(modem_stats.rsrp != 255 && modem_stats.rsrp > 26){// || modem_stats.rxlev !=0){
 453:modem.c       ****         //    break;
 454:modem.c       ****         //}
 455:modem.c       ****         // Delay one second
 456:modem.c       ****         //CyDelay(1000u);
 457:modem.c       ****     //}
 458:modem.c       **** }
 1581              		.loc 1 458 0
 1582 0054 00BF     		nop
 1583 0056 0837     		adds	r7, r7, #8
 1584              		.cfi_def_cfa_offset 8
 1585 0058 BD46     		mov	sp, r7
 1586              		.cfi_def_cfa_register 13
 1587              		@ sp needed
 1588 005a 80BD     		pop	{r7, pc}
 1589              	.L94:
 1590              		.align	2
 1591              	.L93:
 1592 005c 00000000 		.word	modem_stats
 1593 0060 00000000 		.word	.LC0
 1594 0064 F8020000 		.word	.LC30
 1595 0068 14000000 		.word	modem_stats+20
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 39


 1596 006c 10000000 		.word	modem_stats+16
 1597 0070 0C000000 		.word	modem_stats+12
 1598 0074 08000000 		.word	modem_stats+8
 1599 0078 04000000 		.word	modem_stats+4
 1600 007c 04030000 		.word	.LC31
 1601 0080 00000000 		.word	uart_received_string
 1602              		.cfi_endproc
 1603              	.LFE79:
 1604              		.size	get_cell_network_stats, .-get_cell_network_stats
 1605              		.section	.text.updatable_parameters_initialize,"ax",%progbits
 1606              		.align	2
 1607              		.global	updatable_parameters_initialize
 1608              		.thumb
 1609              		.thumb_func
 1610              		.type	updatable_parameters_initialize, %function
 1611              	updatable_parameters_initialize:
 1612              	.LFB80:
 459:modem.c       **** 
 460:modem.c       **** // Initialize updatable parameters (sampling, reporting, and debug frequencies)
 461:modem.c       **** void updatable_parameters_initialize(){
 1613              		.loc 1 461 0
 1614              		.cfi_startproc
 1615              		@ args = 0, pretend = 0, frame = 0
 1616              		@ frame_needed = 1, uses_anonymous_args = 0
 1617              		@ link register save eliminated.
 1618 0000 80B4     		push	{r7}
 1619              		.cfi_def_cfa_offset 4
 1620              		.cfi_offset 7, -4
 1621 0002 00AF     		add	r7, sp, #0
 1622              		.cfi_def_cfa_register 7
 462:modem.c       ****     updatable_parameters.node_type = NODE_TYPE_DEPTH;
 1623              		.loc 1 462 0
 1624 0004 104B     		ldr	r3, .L96
 1625 0006 0022     		movs	r2, #0
 1626 0008 1A70     		strb	r2, [r3]
 463:modem.c       ****     updatable_parameters.sim_type = SIM_TYPE_SUPER;
 1627              		.loc 1 463 0
 1628 000a 0F4B     		ldr	r3, .L96
 1629 000c 0122     		movs	r2, #1
 1630 000e 5A70     		strb	r2, [r3, #1]
 464:modem.c       ****     updatable_parameters.measure_time = 1u;
 1631              		.loc 1 464 0
 1632 0010 0D4B     		ldr	r3, .L96
 1633 0012 0122     		movs	r2, #1
 1634 0014 9A70     		strb	r2, [r3, #2]
 465:modem.c       ****     updatable_parameters.sync_time = 1u;
 1635              		.loc 1 465 0
 1636 0016 0C4B     		ldr	r3, .L96
 1637 0018 0122     		movs	r2, #1
 1638 001a DA70     		strb	r2, [r3, #3]
 466:modem.c       ****     updatable_parameters.debug_level = 1u;
 1639              		.loc 1 466 0
 1640 001c 0A4B     		ldr	r3, .L96
 1641 001e 0122     		movs	r2, #1
 1642 0020 1A71     		strb	r2, [r3, #4]
 467:modem.c       ****     
 468:modem.c       ****     // App timers
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 40


 469:modem.c       ****     // APP_INTERFACE-------------------------------------------------------------------------------
 470:modem.c       ****     updatable_parameters.App_LED_freq = 120u; 
 1643              		.loc 1 470 0
 1644 0022 094B     		ldr	r3, .L96
 1645 0024 7822     		movs	r2, #120
 1646 0026 5A71     		strb	r2, [r3, #5]
 471:modem.c       ****     updatable_parameters.Level_Sensor_freq = 120u; 
 1647              		.loc 1 471 0
 1648 0028 074B     		ldr	r3, .L96
 1649 002a 7822     		movs	r2, #120
 1650 002c 9A71     		strb	r2, [r3, #6]
 472:modem.c       ****     updatable_parameters.Downstream_Level_Sensor_freq = 120u;
 1651              		.loc 1 472 0
 1652 002e 064B     		ldr	r3, .L96
 1653 0030 7822     		movs	r2, #120
 1654 0032 DA71     		strb	r2, [r3, #7]
 473:modem.c       ****     updatable_parameters.Valve_freq = 120u;
 1655              		.loc 1 473 0
 1656 0034 044B     		ldr	r3, .L96
 1657 0036 7822     		movs	r2, #120
 1658 0038 1A72     		strb	r2, [r3, #8]
 474:modem.c       ****     updatable_parameters.Autosampler_freq = 120u;
 1659              		.loc 1 474 0
 1660 003a 034B     		ldr	r3, .L96
 1661 003c 7822     		movs	r2, #120
 1662 003e 5A72     		strb	r2, [r3, #9]
 475:modem.c       ****     /* app add on
 476:modem.c       ****     updatable_parameters.<Name>_freq = 120u;
 477:modem.c       ****     */
 478:modem.c       ****      //--------------------------------------------------------------------------------------------
 479:modem.c       **** }
 1663              		.loc 1 479 0
 1664 0040 00BF     		nop
 1665 0042 BD46     		mov	sp, r7
 1666              		.cfi_def_cfa_register 13
 1667              		@ sp needed
 1668 0044 80BC     		pop	{r7}
 1669              		.cfi_restore 7
 1670              		.cfi_def_cfa_offset 0
 1671 0046 7047     		bx	lr
 1672              	.L97:
 1673              		.align	2
 1674              	.L96:
 1675 0048 00000000 		.word	updatable_parameters
 1676              		.cfi_endproc
 1677              	.LFE80:
 1678              		.size	updatable_parameters_initialize, .-updatable_parameters_initialize
 1679              		.section	.rodata
 1680 0322 0000     		.align	2
 1681              	.LC32:
 1682 0324 4E6F6465 		.ascii	"Node_Type: \000"
 1682      5F547970 
 1682      653A2000 
 1683              		.align	2
 1684              	.LC33:
 1685 0330 53494D5F 		.ascii	"SIM_Type: \000"
 1685      54797065 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 41


 1685      3A2000
 1686 033b 00       		.align	2
 1687              	.LC34:
 1688 033c 53616D70 		.ascii	"Sample_Freq: \000"
 1688      6C655F46 
 1688      7265713A 
 1688      2000
 1689 034a 0000     		.align	2
 1690              	.LC35:
 1691 034c 5265706F 		.ascii	"Report_Freq: \000"
 1691      72745F46 
 1691      7265713A 
 1691      2000
 1692 035a 0000     		.align	2
 1693              	.LC36:
 1694 035c 44656275 		.ascii	"Debug_Freq: \000"
 1694      675F4672 
 1694      65713A20 
 1694      00
 1695 0369 000000   		.align	2
 1696              	.LC37:
 1697 036c 41707073 		.ascii	"Apps_Enabled: \000"
 1697      5F456E61 
 1697      626C6564 
 1697      3A2000
 1698 037b 00       		.align	2
 1699              	.LC38:
 1700 037c 4170705F 		.ascii	"App_LED\000"
 1700      4C454400 
 1701              		.align	2
 1702              	.LC39:
 1703 0384 4C657665 		.ascii	"Level_Sensor\000"
 1703      6C5F5365 
 1703      6E736F72 
 1703      00
 1704 0391 000000   		.align	2
 1705              	.LC40:
 1706 0394 446F776E 		.ascii	"Downstream_Level\000"
 1706      73747265 
 1706      616D5F4C 
 1706      6576656C 
 1706      00
 1707 03a5 000000   		.align	2
 1708              	.LC41:
 1709 03a8 56616C76 		.ascii	"Valve\000"
 1709      6500
 1710 03ae 0000     		.align	2
 1711              	.LC42:
 1712 03b0 4175746F 		.ascii	"Autosampler\000"
 1712      73616D70 
 1712      6C657200 
 1713              		.align	2
 1714              	.LC43:
 1715 03bc 4170705F 		.ascii	"App_LED: \000"
 1715      4C45443A 
 1715      2000
 1716 03c6 0000     		.align	2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 42


 1717              	.LC44:
 1718 03c8 4C657665 		.ascii	"Level_Sensor: \000"
 1718      6C5F5365 
 1718      6E736F72 
 1718      3A2000
 1719 03d7 00       		.align	2
 1720              	.LC45:
 1721 03d8 446F776E 		.ascii	"Downstream_Level: \000"
 1721      73747265 
 1721      616D5F4C 
 1721      6576656C 
 1721      3A2000
 1722 03eb 00       		.align	2
 1723              	.LC46:
 1724 03ec 56616C76 		.ascii	"Valve:\000"
 1724      653A00
 1725 03f3 00       		.align	2
 1726              	.LC47:
 1727 03f4 4175746F 		.ascii	"Autosampler:\000"
 1727      73616D70 
 1727      6C65723A 
 1727      00
 1728 0401 000000   		.align	2
 1729              	.LC48:
 1730 0404 256400   		.ascii	"%d\000"
 1731 0407 00       		.align	2
 1732              	.LC49:
 1733 0408 4E6F6465 		.ascii	"Node type changed to: %d\015\012\000"
 1733      20747970 
 1733      65206368 
 1733      616E6765 
 1733      6420746F 
 1734 0423 00       		.align	2
 1735              	.LC50:
 1736 0424 436F756C 		.ascii	"Could not change node type.\000"
 1736      64206E6F 
 1736      74206368 
 1736      616E6765 
 1736      206E6F64 
 1737              		.align	2
 1738              	.LC51:
 1739 0440 53494D20 		.ascii	"SIM type changed to: %d\015\012\000"
 1739      74797065 
 1739      20636861 
 1739      6E676564 
 1739      20746F3A 
 1740 045a 0000     		.align	2
 1741              	.LC52:
 1742 045c 436F756C 		.ascii	"Could not change SIM type.\000"
 1742      64206E6F 
 1742      74206368 
 1742      616E6765 
 1742      2053494D 
 1743 0477 00       		.align	2
 1744              	.LC53:
 1745 0478 53616D70 		.ascii	"Sampling frequency changed to: %d\015\012\000"
 1745      6C696E67 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 43


 1745      20667265 
 1745      7175656E 
 1745      63792063 
 1746              		.align	2
 1747              	.LC54:
 1748 049c 436F756C 		.ascii	"Could not parse new sampling frequency value.\000"
 1748      64206E6F 
 1748      74207061 
 1748      72736520 
 1748      6E657720 
 1749 04ca 0000     		.align	2
 1750              	.LC55:
 1751 04cc 5265706F 		.ascii	"Reporting frequency changed to: %d\015\012\000"
 1751      7274696E 
 1751      67206672 
 1751      65717565 
 1751      6E637920 
 1752 04f1 000000   		.align	2
 1753              	.LC56:
 1754 04f4 436F756C 		.ascii	"Could not parse new reporting frequency value.\000"
 1754      64206E6F 
 1754      74207061 
 1754      72736520 
 1754      6E657720 
 1755 0523 00       		.align	2
 1756              	.LC57:
 1757 0524 44656275 		.ascii	"Debug printing frequency changed to: %d\015\012\000"
 1757      67207072 
 1757      696E7469 
 1757      6E672066 
 1757      72657175 
 1758 054e 0000     		.align	2
 1759              	.LC58:
 1760 0550 436F756C 		.ascii	"Could not parse new debugging frequency value.\000"
 1760      64206E6F 
 1760      74207061 
 1760      72736520 
 1760      6E657720 
 1761 057f 00       		.align	2
 1762              	.LC59:
 1763 0580 46726571 		.ascii	"Freq=\000"
 1763      3D00
 1764 0586 0000     		.align	2
 1765              	.LC60:
 1766 0588 4170705F 		.ascii	"App_LED frequency changed to: %d\015\012\000"
 1766      4C454420 
 1766      66726571 
 1766      75656E63 
 1766      79206368 
 1767 05ab 00       		.align	2
 1768              	.LC61:
 1769 05ac 436F756C 		.ascii	"Could not parse new App_LED frequency value.\000"
 1769      64206E6F 
 1769      74207061 
 1769      72736520 
 1769      6E657720 
 1770 05d9 000000   		.align	2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 44


 1771              	.LC62:
 1772 05dc 4E6F2041 		.ascii	"No App_LED frequency value indicated.\000"
 1772      70705F4C 
 1772      45442066 
 1772      72657175 
 1772      656E6379 
 1773 0602 0000     		.align	2
 1774              	.LC63:
 1775 0604 4C657665 		.ascii	"Level_Sensor frequency changed to: %d\015\012\000"
 1775      6C5F5365 
 1775      6E736F72 
 1775      20667265 
 1775      7175656E 
 1776              		.align	2
 1777              	.LC64:
 1778 062c 436F756C 		.ascii	"Could not parse new Level_Sensor frequency value.\000"
 1778      64206E6F 
 1778      74207061 
 1778      72736520 
 1778      6E657720 
 1779 065e 0000     		.align	2
 1780              	.LC65:
 1781 0660 4E6F204C 		.ascii	"No Level_Sensor frequency value indicated.\000"
 1781      6576656C 
 1781      5F53656E 
 1781      736F7220 
 1781      66726571 
 1782 068b 00       		.align	2
 1783              	.LC66:
 1784 068c 446F776E 		.ascii	"Downstream_Level_Sensor frequency changed to: %d\015"
 1784      73747265 
 1784      616D5F4C 
 1784      6576656C 
 1784      5F53656E 
 1785 06bd 0A00     		.ascii	"\012\000"
 1786 06bf 00       		.align	2
 1787              	.LC67:
 1788 06c0 436F756C 		.ascii	"Could not parse new Downstream_Level_Sensor frequen"
 1788      64206E6F 
 1788      74207061 
 1788      72736520 
 1788      6E657720 
 1789 06f3 63792076 		.ascii	"cy value.\000"
 1789      616C7565 
 1789      2E00
 1790 06fd 000000   		.align	2
 1791              	.LC68:
 1792 0700 4E6F2044 		.ascii	"No Downstream_Level_Sensor frequency value indicate"
 1792      6F776E73 
 1792      74726561 
 1792      6D5F4C65 
 1792      76656C5F 
 1793 0733 642E00   		.ascii	"d.\000"
 1794 0736 0000     		.align	2
 1795              	.LC69:
 1796 0738 4175746F 		.ascii	"Autosampler frequency changed to: %d\015\012\000"
 1796      73616D70 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 45


 1796      6C657220 
 1796      66726571 
 1796      75656E63 
 1797 075f 00       		.align	2
 1798              	.LC70:
 1799 0760 436F756C 		.ascii	"Could not parse new Autosampler frequency value.\000"
 1799      64206E6F 
 1799      74207061 
 1799      72736520 
 1799      6E657720 
 1800 0791 000000   		.align	2
 1801              	.LC71:
 1802 0794 4E6F2041 		.ascii	"No Autosampler frequency value indicated.\000"
 1802      75746F73 
 1802      616D706C 
 1802      65722066 
 1802      72657175 
 1803              		.section	.text.get_updated_parameters_from_malcom,"ax",%progbits
 1804              		.align	2
 1805              		.global	get_updated_parameters_from_malcom
 1806              		.thumb
 1807              		.thumb_func
 1808              		.type	get_updated_parameters_from_malcom, %function
 1809              	get_updated_parameters_from_malcom:
 1810              	.LFB81:
 480:modem.c       **** 
 481:modem.c       **** // Get the update values for sampling frequency, reporting frequency, and the debug level from the 
 482:modem.c       **** void get_updated_parameters_from_malcom(){
 1811              		.loc 1 482 0
 1812              		.cfi_startproc
 1813              		@ args = 0, pretend = 0, frame = 904
 1814              		@ frame_needed = 1, uses_anonymous_args = 0
 1815 0000 90B5     		push	{r4, r7, lr}
 1816              		.cfi_def_cfa_offset 12
 1817              		.cfi_offset 4, -12
 1818              		.cfi_offset 7, -8
 1819              		.cfi_offset 14, -4
 1820 0002 ADF5637D 		sub	sp, sp, #908
 1821              		.cfi_def_cfa_offset 920
 1822 0006 00AF     		add	r7, sp, #0
 1823              		.cfi_def_cfa_register 7
 483:modem.c       ****     
 484:modem.c       ****     // Create character array of size 1024 characters to hold the uart received string
 485:modem.c       ****     char s_node_type[10];
 486:modem.c       ****     char s_sim_type[10];
 487:modem.c       ****     char s_sample_freq[10];
 488:modem.c       ****     char s_report_freq[10];
 489:modem.c       ****     char s_debug_freq[10];
 490:modem.c       ****     
 491:modem.c       ****     //apps
 492:modem.c       ****     // APP_INTERFACE-------------------------------------------------------------------------------
 493:modem.c       ****     char s_app_led[100];
 494:modem.c       ****     s_app_led[0] = '\0';
 1824              		.loc 1 494 0
 1825 0008 0023     		movs	r3, #0
 1826 000a 87F8E832 		strb	r3, [r7, #744]
 495:modem.c       ****     
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 46


 496:modem.c       ****     char s_level_sensor[100];
 497:modem.c       ****     s_level_sensor[0] = '\0';
 1827              		.loc 1 497 0
 1828 000e 07F52173 		add	r3, r7, #644
 1829 0012 0022     		movs	r2, #0
 1830 0014 1A70     		strb	r2, [r3]
 498:modem.c       ****     
 499:modem.c       ****     char s_down_level_sensor[100];
 500:modem.c       ****     s_down_level_sensor[0] = '\0';
 1831              		.loc 1 500 0
 1832 0016 07F50873 		add	r3, r7, #544
 1833 001a 0022     		movs	r2, #0
 1834 001c 1A70     		strb	r2, [r3]
 501:modem.c       ****     
 502:modem.c       ****     char s_valve[100];
 503:modem.c       ****     s_valve[0] = '\0';
 1835              		.loc 1 503 0
 1836 001e 07F5DE73 		add	r3, r7, #444
 1837 0022 0022     		movs	r2, #0
 1838 0024 1A70     		strb	r2, [r3]
 504:modem.c       **** 
 505:modem.c       ****     char s_autosampler[100];
 506:modem.c       ****     s_autosampler[0] = '\0';
 1839              		.loc 1 506 0
 1840 0026 07F5AC73 		add	r3, r7, #344
 1841 002a 0022     		movs	r2, #0
 1842 002c 1A70     		strb	r2, [r3]
 507:modem.c       **** 
 508:modem.c       ****     /* app add template
 509:modem.c       ****     char s_<name>[100];
 510:modem.c       ****     s_<name>[0] = '\0';
 511:modem.c       ****     */
 512:modem.c       ****     
 513:modem.c       ****     char s_apps_enabled[200];
 514:modem.c       ****     s_apps_enabled[0]='\0';
 1843              		.loc 1 514 0
 1844 002e 07F19003 		add	r3, r7, #144
 1845 0032 0022     		movs	r2, #0
 1846 0034 1A70     		strb	r2, [r3]
 515:modem.c       ****     //---------------------------------------------------------------------------------------------
 516:modem.c       ****     
 517:modem.c       ****     s_node_type[0] = '\0';
 1847              		.loc 1 517 0
 1848 0036 0023     		movs	r3, #0
 1849 0038 87F87C33 		strb	r3, [r7, #892]
 518:modem.c       ****     s_sim_type[0] = '\0';
 1850              		.loc 1 518 0
 1851 003c 0023     		movs	r3, #0
 1852 003e 87F87033 		strb	r3, [r7, #880]
 519:modem.c       ****     s_sample_freq[0] = '\0';
 1853              		.loc 1 519 0
 1854 0042 0023     		movs	r3, #0
 1855 0044 87F86433 		strb	r3, [r7, #868]
 520:modem.c       ****     s_report_freq[0] = '\0';
 1856              		.loc 1 520 0
 1857 0048 0023     		movs	r3, #0
 1858 004a 87F85833 		strb	r3, [r7, #856]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 47


 521:modem.c       ****     s_debug_freq[0] = '\0';
 1859              		.loc 1 521 0
 1860 004e 0023     		movs	r3, #0
 1861 0050 87F84C33 		strb	r3, [r7, #844]
 522:modem.c       ****     
 523:modem.c       ****     // Extract UART string recieved from the modem and save to variables
 524:modem.c       ****     extract_string(uart_received_string,"Node_Type: ","\r",s_node_type);
 1862              		.loc 1 524 0
 1863 0054 07F55F73 		add	r3, r7, #892
 1864 0058 B34A     		ldr	r2, .L128
 1865 005a B449     		ldr	r1, .L128+4
 1866 005c B448     		ldr	r0, .L128+8
 1867 005e FFF7FEFF 		bl	extract_string
 525:modem.c       ****     extract_string(uart_received_string,"SIM_Type: ","\r",s_sim_type);
 1868              		.loc 1 525 0
 1869 0062 07F55C73 		add	r3, r7, #880
 1870 0066 B04A     		ldr	r2, .L128
 1871 0068 B249     		ldr	r1, .L128+12
 1872 006a B148     		ldr	r0, .L128+8
 1873 006c FFF7FEFF 		bl	extract_string
 526:modem.c       ****     extract_string(uart_received_string,"Sample_Freq: ","\r",s_sample_freq);
 1874              		.loc 1 526 0
 1875 0070 07F55973 		add	r3, r7, #868
 1876 0074 AC4A     		ldr	r2, .L128
 1877 0076 B049     		ldr	r1, .L128+16
 1878 0078 AD48     		ldr	r0, .L128+8
 1879 007a FFF7FEFF 		bl	extract_string
 527:modem.c       ****     extract_string(uart_received_string,"Report_Freq: ","\r",s_report_freq);
 1880              		.loc 1 527 0
 1881 007e 07F55673 		add	r3, r7, #856
 1882 0082 A94A     		ldr	r2, .L128
 1883 0084 AD49     		ldr	r1, .L128+20
 1884 0086 AA48     		ldr	r0, .L128+8
 1885 0088 FFF7FEFF 		bl	extract_string
 528:modem.c       ****     extract_string(uart_received_string,"Debug_Freq: ","\r",s_debug_freq);
 1886              		.loc 1 528 0
 1887 008c 07F55373 		add	r3, r7, #844
 1888 0090 A54A     		ldr	r2, .L128
 1889 0092 AB49     		ldr	r1, .L128+24
 1890 0094 A648     		ldr	r0, .L128+8
 1891 0096 FFF7FEFF 		bl	extract_string
 529:modem.c       ****     
 530:modem.c       ****     // which apps are enabled?
 531:modem.c       ****  // APP_INTERFACE----------------------------------------------------------------------------------
 532:modem.c       ****     if (strstr(uart_received_string,"Apps_Enabled: ")){
 1892              		.loc 1 532 0
 1893 009a AA49     		ldr	r1, .L128+28
 1894 009c A448     		ldr	r0, .L128+8
 1895 009e FFF7FEFF 		bl	strstr
 1896 00a2 0346     		mov	r3, r0
 1897 00a4 002B     		cmp	r3, #0
 1898 00a6 4FD0     		beq	.L99
 533:modem.c       ****         extract_string(uart_received_string,"Apps_Enabled: ","\r",s_apps_enabled);
 1899              		.loc 1 533 0
 1900 00a8 07F19003 		add	r3, r7, #144
 1901 00ac 9E4A     		ldr	r2, .L128
 1902 00ae A549     		ldr	r1, .L128+28
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 48


 1903 00b0 9F48     		ldr	r0, .L128+8
 1904 00b2 FFF7FEFF 		bl	extract_string
 534:modem.c       ****         // if an app is in this string, turn it on
 535:modem.c       ****         // if we this app in the enabled list, turn it on, else we ensure it is disabled
 536:modem.c       ****         /*************Testing new form of truncated code*********/
 537:modem.c       ****         App_LED_enabled = (strstr(s_apps_enabled,"App_LED")!=NULL) ? 1 : 0;
 1905              		.loc 1 537 0
 1906 00b6 07F19003 		add	r3, r7, #144
 1907 00ba A349     		ldr	r1, .L128+32
 1908 00bc 1846     		mov	r0, r3
 1909 00be FFF7FEFF 		bl	strstr
 1910 00c2 0346     		mov	r3, r0
 1911 00c4 002B     		cmp	r3, #0
 1912 00c6 14BF     		ite	ne
 1913 00c8 0123     		movne	r3, #1
 1914 00ca 0023     		moveq	r3, #0
 1915 00cc DBB2     		uxtb	r3, r3
 1916 00ce 1A46     		mov	r2, r3
 1917 00d0 9E4B     		ldr	r3, .L128+36
 1918 00d2 1A70     		strb	r2, [r3]
 538:modem.c       ****         level_sensor_enabled = (strstr(s_apps_enabled,"Level_Sensor")!=NULL) ? 1 : 0;
 1919              		.loc 1 538 0
 1920 00d4 07F19003 		add	r3, r7, #144
 1921 00d8 9D49     		ldr	r1, .L128+40
 1922 00da 1846     		mov	r0, r3
 1923 00dc FFF7FEFF 		bl	strstr
 1924 00e0 0346     		mov	r3, r0
 1925 00e2 002B     		cmp	r3, #0
 1926 00e4 14BF     		ite	ne
 1927 00e6 0123     		movne	r3, #1
 1928 00e8 0023     		moveq	r3, #0
 1929 00ea DAB2     		uxtb	r2, r3
 1930 00ec 994B     		ldr	r3, .L128+44
 1931 00ee 1A70     		strb	r2, [r3]
 539:modem.c       ****         downstream_level_sensor_enabled = (strstr(s_apps_enabled,"Downstream_Level") != NULL) ? 1 :
 1932              		.loc 1 539 0
 1933 00f0 07F19003 		add	r3, r7, #144
 1934 00f4 9849     		ldr	r1, .L128+48
 1935 00f6 1846     		mov	r0, r3
 1936 00f8 FFF7FEFF 		bl	strstr
 1937 00fc 0346     		mov	r3, r0
 1938 00fe 002B     		cmp	r3, #0
 1939 0100 14BF     		ite	ne
 1940 0102 0123     		movne	r3, #1
 1941 0104 0023     		moveq	r3, #0
 1942 0106 DAB2     		uxtb	r2, r3
 1943 0108 944B     		ldr	r3, .L128+52
 1944 010a 1A70     		strb	r2, [r3]
 540:modem.c       ****         valve_enabled = (strstr(s_apps_enabled, "Valve") != NULL) ? 1 : 0;
 1945              		.loc 1 540 0
 1946 010c 07F19003 		add	r3, r7, #144
 1947 0110 9349     		ldr	r1, .L128+56
 1948 0112 1846     		mov	r0, r3
 1949 0114 FFF7FEFF 		bl	strstr
 1950 0118 0346     		mov	r3, r0
 1951 011a 002B     		cmp	r3, #0
 1952 011c 14BF     		ite	ne
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 49


 1953 011e 0123     		movne	r3, #1
 1954 0120 0023     		moveq	r3, #0
 1955 0122 DBB2     		uxtb	r3, r3
 1956 0124 1A46     		mov	r2, r3
 1957 0126 8F4B     		ldr	r3, .L128+60
 1958 0128 1A70     		strb	r2, [r3]
 541:modem.c       ****         autosampler_enabled = (strstr(s_apps_enabled, "Autosampler") != NULL) ? 1 : 0;
 1959              		.loc 1 541 0
 1960 012a 07F19003 		add	r3, r7, #144
 1961 012e 8E49     		ldr	r1, .L128+64
 1962 0130 1846     		mov	r0, r3
 1963 0132 FFF7FEFF 		bl	strstr
 1964 0136 0346     		mov	r3, r0
 1965 0138 002B     		cmp	r3, #0
 1966 013a 14BF     		ite	ne
 1967 013c 0123     		movne	r3, #1
 1968 013e 0023     		moveq	r3, #0
 1969 0140 DBB2     		uxtb	r3, r3
 1970 0142 1A46     		mov	r2, r3
 1971 0144 894B     		ldr	r3, .L128+68
 1972 0146 1A70     		strb	r2, [r3]
 1973              	.L99:
 542:modem.c       ****         /* app add template 
 543:modem.c       ****         <name>_enabled = (strstr(s_apps_enabled, "<Name>") != NULL) ? 1 : 0;
 544:modem.c       ****         */
 545:modem.c       **** 
 546:modem.c       ****         /* old code structure
 547:modem.c       ****         (strstr(s_apps_enabled, "<Name>") != NULL)? <name>_enabled = 1 : <name>_enabled = 0;
 548:modem.c       ****         
 549:modem.c       ****         // if we see level sensor in the enabled list, turn it on
 550:modem.c       ****         if (strstr(s_apps_enabled,"Level_Sensor")!=NULL){level_sensor_enabled = 1};        
 551:modem.c       ****         // if an app is currently on and not in this string, turn it off  
 552:modem.c       ****         else if (level_sensor_enabled){level_sensor_enabled = 0;}
 553:modem.c       ****         
 554:modem.c       ****         if (strstr(s_apps_enabled,"App_LED")!=NULL){
 555:modem.c       ****             // if we this app in the enabled list, turn it on
 556:modem.c       ****             App_LED_enabled = 1;
 557:modem.c       ****         }
 558:modem.c       ****         else if (App_LED_enabled){
 559:modem.c       ****             App_LED_enabled = 0;
 560:modem.c       ****         }
 561:modem.c       ****         
 562:modem.c       ****         if (strstr(s_apps_enabled,"Downstream_Level") != NULL){
 563:modem.c       ****             downstream_level_sensor_enabled = 1;
 564:modem.c       ****         }        
 565:modem.c       ****         // if an app is currently on and not in this string, turn it off  
 566:modem.c       ****         else if (downstream_level_sensor_enabled){ 
 567:modem.c       ****             downstream_level_sensor_enabled = 0;
 568:modem.c       ****         }
 569:modem.c       ****         
 570:modem.c       ****         if (strstr(s_apps_enabled, "Valve") != NULL){
 571:modem.c       ****             valve_enabled = 1u;
 572:modem.c       ****         }
 573:modem.c       ****         else if(valve_enabled){
 574:modem.c       ****             valve_enabled = 0u;
 575:modem.c       ****         }
 576:modem.c       ****         
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 50


 577:modem.c       ****         if (strstr(s_apps_enabled, "Autosampler") != NULL){
 578:modem.c       ****             autosampler_enabled = 1u;
 579:modem.c       ****         }
 580:modem.c       ****         else if(autosampler_enabled){
 581:modem.c       ****             autosampler_enabled = 0u;
 582:modem.c       ****         }
 583:modem.c       ****         */
 584:modem.c       ****         
 585:modem.c       ****     }
 586:modem.c       ****     //---------------------------------------------------------------------------------------------
 587:modem.c       **** 
 588:modem.c       **** 
 589:modem.c       ****         
 590:modem.c       ****     
 591:modem.c       ****     // update app parameters (valve open %, measuring freq, etc)
 592:modem.c       ****     // APP_INTERFACE ------------------------------------------------------------------------------
 593:modem.c       ****     extract_string(uart_received_string,"App_LED: ","\r",s_app_led);
 1974              		.loc 1 593 0
 1975 0148 07F53A73 		add	r3, r7, #744
 1976 014c 764A     		ldr	r2, .L128
 1977 014e 8849     		ldr	r1, .L128+72
 1978 0150 7748     		ldr	r0, .L128+8
 1979 0152 FFF7FEFF 		bl	extract_string
 594:modem.c       ****     App_LED_Update(s_app_led);
 1980              		.loc 1 594 0
 1981 0156 07F53A73 		add	r3, r7, #744
 1982 015a 1846     		mov	r0, r3
 1983 015c FFF7FEFF 		bl	App_LED_Update
 595:modem.c       ****     
 596:modem.c       ****     extract_string(uart_received_string,"Level_Sensor: ","\r",s_level_sensor);
 1984              		.loc 1 596 0
 1985 0160 07F52173 		add	r3, r7, #644
 1986 0164 704A     		ldr	r2, .L128
 1987 0166 8349     		ldr	r1, .L128+76
 1988 0168 7148     		ldr	r0, .L128+8
 1989 016a FFF7FEFF 		bl	extract_string
 597:modem.c       ****     Level_Sensor_Update(s_level_sensor);
 1990              		.loc 1 597 0
 1991 016e 07F52173 		add	r3, r7, #644
 1992 0172 1846     		mov	r0, r3
 1993 0174 FFF7FEFF 		bl	Level_Sensor_Update
 598:modem.c       ****     
 599:modem.c       ****     extract_string(uart_received_string,"Downstream_Level: ","\r",s_down_level_sensor);
 1994              		.loc 1 599 0
 1995 0178 07F50873 		add	r3, r7, #544
 1996 017c 6A4A     		ldr	r2, .L128
 1997 017e 7E49     		ldr	r1, .L128+80
 1998 0180 6B48     		ldr	r0, .L128+8
 1999 0182 FFF7FEFF 		bl	extract_string
 600:modem.c       ****     Downstream_Level_Sensor_Update(s_down_level_sensor);
 2000              		.loc 1 600 0
 2001 0186 07F50873 		add	r3, r7, #544
 2002 018a 1846     		mov	r0, r3
 2003 018c FFF7FEFF 		bl	Downstream_Level_Sensor_Update
 601:modem.c       ****     
 602:modem.c       ****     extract_string(uart_received_string,"Valve:","\r", s_valve);
 2004              		.loc 1 602 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 51


 2005 0190 07F5DE73 		add	r3, r7, #444
 2006 0194 644A     		ldr	r2, .L128
 2007 0196 7949     		ldr	r1, .L128+84
 2008 0198 6548     		ldr	r0, .L128+8
 2009 019a FFF7FEFF 		bl	extract_string
 603:modem.c       ****     Valve_Update(s_valve);
 2010              		.loc 1 603 0
 2011 019e 07F5DE73 		add	r3, r7, #444
 2012 01a2 1846     		mov	r0, r3
 2013 01a4 FFF7FEFF 		bl	Valve_Update
 604:modem.c       **** 
 605:modem.c       ****     extract_string(uart_received_string,"Autosampler:","\r", s_autosampler);
 2014              		.loc 1 605 0
 2015 01a8 07F5AC73 		add	r3, r7, #344
 2016 01ac 5E4A     		ldr	r2, .L128
 2017 01ae 7449     		ldr	r1, .L128+88
 2018 01b0 5F48     		ldr	r0, .L128+8
 2019 01b2 FFF7FEFF 		bl	extract_string
 606:modem.c       ****     Autosampler_Update(s_autosampler);
 2020              		.loc 1 606 0
 2021 01b6 07F5AC73 		add	r3, r7, #344
 2022 01ba 1846     		mov	r0, r3
 2023 01bc FFF7FEFF 		bl	Autosampler_Update
 607:modem.c       ****     
 608:modem.c       ****     /* app add template
 609:modem.c       ****     extract_string(uart_received_string,"<Name>:","\r", s_<name>);
 610:modem.c       ****     <Name>_Update(s_<name>);
 611:modem.c       ****     */
 612:modem.c       **** 
 613:modem.c       ****     // Create variables for what is sent back from the server
 614:modem.c       ****     int node_type, sim_type, sample_freq, report_freq, debug_freq, \
 615:modem.c       ****     app_led_freq, level_sensor_freq, down_level_freq, valve_freq, autosampler_freq;
 616:modem.c       ****     
 617:modem.c       ****     // Scan character arrays and save values 
 618:modem.c       ****     
 619:modem.c       ****     if(sscanf(s_node_type, "%d", &node_type)==1){
 2024              		.loc 1 619 0
 2025 01c0 07F18C02 		add	r2, r7, #140
 2026 01c4 07F55F73 		add	r3, r7, #892
 2027 01c8 6E49     		ldr	r1, .L128+92
 2028 01ca 1846     		mov	r0, r3
 2029 01cc FFF7FEFF 		bl	sscanf
 2030 01d0 0346     		mov	r3, r0
 2031 01d2 012B     		cmp	r3, #1
 2032 01d4 0ED1     		bne	.L100
 620:modem.c       ****         updatable_parameters.node_type = node_type;
 2033              		.loc 1 620 0
 2034 01d6 07F18C03 		add	r3, r7, #140
 2035 01da 1B68     		ldr	r3, [r3]
 2036 01dc DAB2     		uxtb	r2, r3
 2037 01de 6A4B     		ldr	r3, .L128+96
 2038 01e0 1A70     		strb	r2, [r3]
 621:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Node type changed to: %d\r\n", node_type);
 2039              		.loc 1 621 0
 2040 01e2 07F18C03 		add	r3, r7, #140
 2041 01e6 1B68     		ldr	r3, [r3]
 2042 01e8 1A46     		mov	r2, r3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 52


 2043 01ea 6849     		ldr	r1, .L128+100
 2044 01ec 0020     		movs	r0, #0
 2045 01ee FFF7FEFF 		bl	printNotif
 2046 01f2 03E0     		b	.L101
 2047              	.L100:
 622:modem.c       ****     }else{
 623:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not change node type.");
 2048              		.loc 1 623 0
 2049 01f4 6649     		ldr	r1, .L128+104
 2050 01f6 0220     		movs	r0, #2
 2051 01f8 FFF7FEFF 		bl	printNotif
 2052              	.L101:
 624:modem.c       ****     }
 625:modem.c       ****     
 626:modem.c       ****     if(sscanf(s_sim_type, "%d", &sim_type)==1){
 2053              		.loc 1 626 0
 2054 01fc 07F18802 		add	r2, r7, #136
 2055 0200 07F55C73 		add	r3, r7, #880
 2056 0204 5F49     		ldr	r1, .L128+92
 2057 0206 1846     		mov	r0, r3
 2058 0208 FFF7FEFF 		bl	sscanf
 2059 020c 0346     		mov	r3, r0
 2060 020e 012B     		cmp	r3, #1
 2061 0210 12D1     		bne	.L102
 627:modem.c       ****         updatable_parameters.sim_type = sim_type;
 2062              		.loc 1 627 0
 2063 0212 07F18803 		add	r3, r7, #136
 2064 0216 1B68     		ldr	r3, [r3]
 2065 0218 002B     		cmp	r3, #0
 2066 021a 14BF     		ite	ne
 2067 021c 0123     		movne	r3, #1
 2068 021e 0023     		moveq	r3, #0
 2069 0220 DAB2     		uxtb	r2, r3
 2070 0222 594B     		ldr	r3, .L128+96
 2071 0224 5A70     		strb	r2, [r3, #1]
 628:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "SIM type changed to: %d\r\n", sim_type);
 2072              		.loc 1 628 0
 2073 0226 07F18803 		add	r3, r7, #136
 2074 022a 1B68     		ldr	r3, [r3]
 2075 022c 1A46     		mov	r2, r3
 2076 022e 5949     		ldr	r1, .L128+108
 2077 0230 0020     		movs	r0, #0
 2078 0232 FFF7FEFF 		bl	printNotif
 2079 0236 03E0     		b	.L103
 2080              	.L102:
 629:modem.c       ****     }else{
 630:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not change SIM type.");
 2081              		.loc 1 630 0
 2082 0238 5749     		ldr	r1, .L128+112
 2083 023a 0220     		movs	r0, #2
 2084 023c FFF7FEFF 		bl	printNotif
 2085              	.L103:
 631:modem.c       ****     }
 632:modem.c       ****     if(sscanf(s_sample_freq, "%d", &sample_freq)==1){
 2086              		.loc 1 632 0
 2087 0240 07F18402 		add	r2, r7, #132
 2088 0244 07F55973 		add	r3, r7, #868
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 53


 2089 0248 4E49     		ldr	r1, .L128+92
 2090 024a 1846     		mov	r0, r3
 2091 024c FFF7FEFF 		bl	sscanf
 2092 0250 0346     		mov	r3, r0
 2093 0252 012B     		cmp	r3, #1
 2094 0254 1DD1     		bne	.L104
 633:modem.c       ****         updatable_parameters.measure_time = sample_freq;
 2095              		.loc 1 633 0
 2096 0256 07F18403 		add	r3, r7, #132
 2097 025a 1B68     		ldr	r3, [r3]
 2098 025c DAB2     		uxtb	r2, r3
 2099 025e 4A4B     		ldr	r3, .L128+96
 2100 0260 9A70     		strb	r2, [r3, #2]
 634:modem.c       ****         // Create a continuous alarm called alarmMeasure that triggers at the required time to take
 635:modem.c       ****         alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_C
 2101              		.loc 1 635 0
 2102 0262 494B     		ldr	r3, .L128+96
 2103 0264 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2104 0266 99B2     		uxth	r1, r3
 2105 0268 4C4C     		ldr	r4, .L128+116
 2106 026a 3846     		mov	r0, r7
 2107 026c 0723     		movs	r3, #7
 2108 026e 0122     		movs	r2, #1
 2109 0270 FFF7FEFF 		bl	CreateAlarm
 2110 0274 3A46     		mov	r2, r7
 2111 0276 2346     		mov	r3, r4
 2112 0278 1168     		ldr	r1, [r2]	@ unaligned
 2113 027a 1960     		str	r1, [r3]	@ unaligned
 2114 027c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 2115 027e 9A80     		strh	r2, [r3, #4]	@ unaligned
 636:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Sampling frequency changed to: %d\r\n", sample_freq);
 2116              		.loc 1 636 0
 2117 0280 07F18403 		add	r3, r7, #132
 2118 0284 1B68     		ldr	r3, [r3]
 2119 0286 1A46     		mov	r2, r3
 2120 0288 4549     		ldr	r1, .L128+120
 2121 028a 0020     		movs	r0, #0
 2122 028c FFF7FEFF 		bl	printNotif
 2123 0290 03E0     		b	.L105
 2124              	.L104:
 637:modem.c       ****     }else{
 638:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new sampling frequency value.");
 2125              		.loc 1 638 0
 2126 0292 4449     		ldr	r1, .L128+124
 2127 0294 0220     		movs	r0, #2
 2128 0296 FFF7FEFF 		bl	printNotif
 2129              	.L105:
 639:modem.c       ****     }
 640:modem.c       ****     if(sscanf(s_report_freq, "%d", &report_freq)==1){
 2130              		.loc 1 640 0
 2131 029a 07F18002 		add	r2, r7, #128
 2132 029e 07F55673 		add	r3, r7, #856
 2133 02a2 3849     		ldr	r1, .L128+92
 2134 02a4 1846     		mov	r0, r3
 2135 02a6 FFF7FEFF 		bl	sscanf
 2136 02aa 0346     		mov	r3, r0
 2137 02ac 012B     		cmp	r3, #1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 54


 2138 02ae 1DD1     		bne	.L106
 641:modem.c       ****         updatable_parameters.sync_time = report_freq;
 2139              		.loc 1 641 0
 2140 02b0 07F18003 		add	r3, r7, #128
 2141 02b4 1B68     		ldr	r3, [r3]
 2142 02b6 DAB2     		uxtb	r2, r3
 2143 02b8 334B     		ldr	r3, .L128+96
 2144 02ba DA70     		strb	r2, [r3, #3]
 642:modem.c       ****         // Create a continuous alarm called alarmSync that triggers at the required time to sync th
 643:modem.c       ****         alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINU
 2145              		.loc 1 643 0
 2146 02bc 324B     		ldr	r3, .L128+96
 2147 02be DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2148 02c0 99B2     		uxth	r1, r3
 2149 02c2 394C     		ldr	r4, .L128+128
 2150 02c4 3846     		mov	r0, r7
 2151 02c6 0723     		movs	r3, #7
 2152 02c8 0122     		movs	r2, #1
 2153 02ca FFF7FEFF 		bl	CreateAlarm
 2154 02ce 3A46     		mov	r2, r7
 2155 02d0 2346     		mov	r3, r4
 2156 02d2 1168     		ldr	r1, [r2]	@ unaligned
 2157 02d4 1960     		str	r1, [r3]	@ unaligned
 2158 02d6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 2159 02d8 9A80     		strh	r2, [r3, #4]	@ unaligned
 644:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Reporting frequency changed to: %d\r\n", report_freq);
 2160              		.loc 1 644 0
 2161 02da 07F18003 		add	r3, r7, #128
 2162 02de 1B68     		ldr	r3, [r3]
 2163 02e0 1A46     		mov	r2, r3
 2164 02e2 3249     		ldr	r1, .L128+132
 2165 02e4 0020     		movs	r0, #0
 2166 02e6 FFF7FEFF 		bl	printNotif
 2167 02ea 03E0     		b	.L107
 2168              	.L106:
 645:modem.c       ****         }else{
 646:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new reporting frequency value.");
 2169              		.loc 1 646 0
 2170 02ec 3049     		ldr	r1, .L128+136
 2171 02ee 0220     		movs	r0, #2
 2172 02f0 FFF7FEFF 		bl	printNotif
 2173              	.L107:
 647:modem.c       ****     }
 648:modem.c       ****     if(sscanf(s_debug_freq, "%d", &debug_freq)==1){
 2174              		.loc 1 648 0
 2175 02f4 07F17C02 		add	r2, r7, #124
 2176 02f8 07F55373 		add	r3, r7, #844
 2177 02fc 2149     		ldr	r1, .L128+92
 2178 02fe 1846     		mov	r0, r3
 2179 0300 FFF7FEFF 		bl	sscanf
 2180 0304 0346     		mov	r3, r0
 2181 0306 012B     		cmp	r3, #1
 2182 0308 56D1     		bne	.L108
 649:modem.c       ****         updatable_parameters.debug_level = debug_freq;
 2183              		.loc 1 649 0
 2184 030a 07F17C03 		add	r3, r7, #124
 2185 030e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 55


 2186 0310 DAB2     		uxtb	r2, r3
 2187 0312 1D4B     		ldr	r3, .L128+96
 2188 0314 1A71     		strb	r2, [r3, #4]
 650:modem.c       ****         printNotif(NOTIF_TYPE_EVENT, "Debug printing frequency changed to: %d\r\n", debug_freq);
 2189              		.loc 1 650 0
 2190 0316 07F17C03 		add	r3, r7, #124
 2191 031a 1B68     		ldr	r3, [r3]
 2192 031c 1A46     		mov	r2, r3
 2193 031e 2549     		ldr	r1, .L128+140
 2194 0320 0020     		movs	r0, #0
 2195 0322 FFF7FEFF 		bl	printNotif
 2196 0326 4BE0     		b	.L109
 2197              	.L129:
 2198              		.align	2
 2199              	.L128:
 2200 0328 88020000 		.word	.LC21
 2201 032c 24030000 		.word	.LC32
 2202 0330 00000000 		.word	uart_received_string
 2203 0334 30030000 		.word	.LC33
 2204 0338 3C030000 		.word	.LC34
 2205 033c 4C030000 		.word	.LC35
 2206 0340 5C030000 		.word	.LC36
 2207 0344 6C030000 		.word	.LC37
 2208 0348 7C030000 		.word	.LC38
 2209 034c 00000000 		.word	App_LED_enabled
 2210 0350 84030000 		.word	.LC39
 2211 0354 00000000 		.word	level_sensor_enabled
 2212 0358 94030000 		.word	.LC40
 2213 035c 00000000 		.word	downstream_level_sensor_enabled
 2214 0360 A8030000 		.word	.LC41
 2215 0364 00000000 		.word	valve_enabled
 2216 0368 B0030000 		.word	.LC42
 2217 036c 00000000 		.word	autosampler_enabled
 2218 0370 BC030000 		.word	.LC43
 2219 0374 C8030000 		.word	.LC44
 2220 0378 D8030000 		.word	.LC45
 2221 037c EC030000 		.word	.LC46
 2222 0380 F4030000 		.word	.LC47
 2223 0384 04040000 		.word	.LC48
 2224 0388 00000000 		.word	updatable_parameters
 2225 038c 08040000 		.word	.LC49
 2226 0390 24040000 		.word	.LC50
 2227 0394 40040000 		.word	.LC51
 2228 0398 5C040000 		.word	.LC52
 2229 039c 00000000 		.word	alarmMeasure
 2230 03a0 78040000 		.word	.LC53
 2231 03a4 9C040000 		.word	.LC54
 2232 03a8 00000000 		.word	alarmSync
 2233 03ac CC040000 		.word	.LC55
 2234 03b0 F4040000 		.word	.LC56
 2235 03b4 24050000 		.word	.LC57
 2236              	.L108:
 651:modem.c       ****     }else{
 652:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not parse new debugging frequency value.");
 2237              		.loc 1 652 0
 2238 03b8 AE49     		ldr	r1, .L130
 2239 03ba 0220     		movs	r0, #2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 56


 2240 03bc FFF7FEFF 		bl	printNotif
 2241              	.L109:
 653:modem.c       ****     }
 654:modem.c       ****     
 655:modem.c       ****     // app alarm frequency updates
 656:modem.c       ****     // APP_INTERFACE-------------------------------------------------------------------------------
 657:modem.c       ****     if (updatable_parameters.node_type == NODE_TYPE_CUSTOM){
 2242              		.loc 1 657 0
 2243 03c0 AD4B     		ldr	r3, .L130+4
 2244 03c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2245 03c4 042B     		cmp	r3, #4
 2246 03c6 40F05081 		bne	.L127
 2247              	.LBB9:
 658:modem.c       ****         char temp[100];
 659:modem.c       ****         temp[0] = '\0'; 
 2248              		.loc 1 659 0
 2249 03ca 07F10803 		add	r3, r7, #8
 2250 03ce 0022     		movs	r2, #0
 2251 03d0 1A70     		strb	r2, [r3]
 660:modem.c       ****         
 661:modem.c       ****         if(App_LED_enabled){ //if you're not enabled, don't talk
 2252              		.loc 1 661 0
 2253 03d2 AA4B     		ldr	r3, .L130+8
 2254 03d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2255 03d6 002B     		cmp	r3, #0
 2256 03d8 4ED0     		beq	.L111
 662:modem.c       ****             if (strstr(s_app_led,"Freq=")!=NULL){
 2257              		.loc 1 662 0
 2258 03da 07F53A73 		add	r3, r7, #744
 2259 03de A849     		ldr	r1, .L130+12
 2260 03e0 1846     		mov	r0, r3
 2261 03e2 FFF7FEFF 		bl	strstr
 2262 03e6 0346     		mov	r3, r0
 2263 03e8 002B     		cmp	r3, #0
 2264 03ea 41D0     		beq	.L112
 663:modem.c       ****                 temp[0] = '\0';
 2265              		.loc 1 663 0
 2266 03ec 07F10803 		add	r3, r7, #8
 2267 03f0 0022     		movs	r2, #0
 2268 03f2 1A70     		strb	r2, [r3]
 664:modem.c       ****                 strcpy(temp,s_app_led);
 2269              		.loc 1 664 0
 2270 03f4 07F53A72 		add	r2, r7, #744
 2271 03f8 07F10803 		add	r3, r7, #8
 2272 03fc 1146     		mov	r1, r2
 2273 03fe 1846     		mov	r0, r3
 2274 0400 FFF7FEFF 		bl	strcpy
 665:modem.c       ****                 extract_string(temp,"Freq=","\r",s_app_led); // grab level app frequency
 2275              		.loc 1 665 0
 2276 0404 07F53A73 		add	r3, r7, #744
 2277 0408 07F10800 		add	r0, r7, #8
 2278 040c 9D4A     		ldr	r2, .L130+16
 2279 040e 9C49     		ldr	r1, .L130+12
 2280 0410 FFF7FEFF 		bl	extract_string
 666:modem.c       ****                 if(sscanf(s_app_led, "%d", &app_led_freq)==1){
 2281              		.loc 1 666 0
 2282 0414 07F17802 		add	r2, r7, #120
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 57


 2283 0418 07F53A73 		add	r3, r7, #744
 2284 041c 9A49     		ldr	r1, .L130+20
 2285 041e 1846     		mov	r0, r3
 2286 0420 FFF7FEFF 		bl	sscanf
 2287 0424 0346     		mov	r3, r0
 2288 0426 012B     		cmp	r3, #1
 2289 0428 1DD1     		bne	.L113
 667:modem.c       ****                     updatable_parameters.App_LED_freq = app_led_freq;
 2290              		.loc 1 667 0
 2291 042a 07F17803 		add	r3, r7, #120
 2292 042e 1B68     		ldr	r3, [r3]
 2293 0430 DAB2     		uxtb	r2, r3
 2294 0432 914B     		ldr	r3, .L130+4
 2295 0434 5A71     		strb	r2, [r3, #5]
 668:modem.c       ****                     // update the alarm to the new frequency
 669:modem.c       ****                     alarmAppLED = CreateAlarm(updatable_parameters.App_LED_freq,ALARM_TYPE_MINUTE,A
 2296              		.loc 1 669 0
 2297 0436 904B     		ldr	r3, .L130+4
 2298 0438 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 2299 043a 99B2     		uxth	r1, r3
 2300 043c 934C     		ldr	r4, .L130+24
 2301 043e 3846     		mov	r0, r7
 2302 0440 0723     		movs	r3, #7
 2303 0442 0122     		movs	r2, #1
 2304 0444 FFF7FEFF 		bl	CreateAlarm
 2305 0448 3A46     		mov	r2, r7
 2306 044a 2346     		mov	r3, r4
 2307 044c 1168     		ldr	r1, [r2]	@ unaligned
 2308 044e 1960     		str	r1, [r3]	@ unaligned
 2309 0450 9288     		ldrh	r2, [r2, #4]	@ unaligned
 2310 0452 9A80     		strh	r2, [r3, #4]	@ unaligned
 670:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT, "App_LED frequency changed to: %d\r\n", app_led_fr
 2311              		.loc 1 670 0
 2312 0454 07F17803 		add	r3, r7, #120
 2313 0458 1B68     		ldr	r3, [r3]
 2314 045a 1A46     		mov	r2, r3
 2315 045c 8C49     		ldr	r1, .L130+28
 2316 045e 0020     		movs	r0, #0
 2317 0460 FFF7FEFF 		bl	printNotif
 2318 0464 08E0     		b	.L111
 2319              	.L113:
 671:modem.c       ****                 } 
 672:modem.c       ****                 else{
 673:modem.c       ****                     printNotif(NOTIF_TYPE_ERROR,"Could not parse new App_LED frequency value.");
 2320              		.loc 1 673 0
 2321 0466 8B49     		ldr	r1, .L130+32
 2322 0468 0220     		movs	r0, #2
 2323 046a FFF7FEFF 		bl	printNotif
 2324 046e 03E0     		b	.L111
 2325              	.L112:
 674:modem.c       ****                 }
 675:modem.c       ****             }
 676:modem.c       ****             else{
 677:modem.c       ****                 printNotif(NOTIF_TYPE_ERROR,"No App_LED frequency value indicated.");
 2326              		.loc 1 677 0
 2327 0470 8949     		ldr	r1, .L130+36
 2328 0472 0220     		movs	r0, #2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 58


 2329 0474 FFF7FEFF 		bl	printNotif
 2330              	.L111:
 678:modem.c       ****             }
 679:modem.c       ****         }
 680:modem.c       ****         if(level_sensor_enabled){
 2331              		.loc 1 680 0
 2332 0478 884B     		ldr	r3, .L130+40
 2333 047a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2334 047c 002B     		cmp	r3, #0
 2335 047e 4ED0     		beq	.L115
 681:modem.c       ****             if (strstr(s_level_sensor,"Freq=")!=NULL){
 2336              		.loc 1 681 0
 2337 0480 07F52173 		add	r3, r7, #644
 2338 0484 7E49     		ldr	r1, .L130+12
 2339 0486 1846     		mov	r0, r3
 2340 0488 FFF7FEFF 		bl	strstr
 2341 048c 0346     		mov	r3, r0
 2342 048e 002B     		cmp	r3, #0
 2343 0490 41D0     		beq	.L116
 682:modem.c       ****                 temp[0] = '\0';
 2344              		.loc 1 682 0
 2345 0492 07F10803 		add	r3, r7, #8
 2346 0496 0022     		movs	r2, #0
 2347 0498 1A70     		strb	r2, [r3]
 683:modem.c       ****                 strcpy(temp,s_level_sensor);
 2348              		.loc 1 683 0
 2349 049a 07F52172 		add	r2, r7, #644
 2350 049e 07F10803 		add	r3, r7, #8
 2351 04a2 1146     		mov	r1, r2
 2352 04a4 1846     		mov	r0, r3
 2353 04a6 FFF7FEFF 		bl	strcpy
 684:modem.c       ****                 extract_string(temp,"Freq=","\r",s_level_sensor); // grab level app frequency
 2354              		.loc 1 684 0
 2355 04aa 07F52173 		add	r3, r7, #644
 2356 04ae 07F10800 		add	r0, r7, #8
 2357 04b2 744A     		ldr	r2, .L130+16
 2358 04b4 7249     		ldr	r1, .L130+12
 2359 04b6 FFF7FEFF 		bl	extract_string
 685:modem.c       ****                 if(sscanf(s_level_sensor, "%d", &level_sensor_freq)==1){
 2360              		.loc 1 685 0
 2361 04ba 07F17402 		add	r2, r7, #116
 2362 04be 07F52173 		add	r3, r7, #644
 2363 04c2 7149     		ldr	r1, .L130+20
 2364 04c4 1846     		mov	r0, r3
 2365 04c6 FFF7FEFF 		bl	sscanf
 2366 04ca 0346     		mov	r3, r0
 2367 04cc 012B     		cmp	r3, #1
 2368 04ce 1DD1     		bne	.L117
 686:modem.c       ****                     updatable_parameters.Level_Sensor_freq = level_sensor_freq;
 2369              		.loc 1 686 0
 2370 04d0 07F17403 		add	r3, r7, #116
 2371 04d4 1B68     		ldr	r3, [r3]
 2372 04d6 DAB2     		uxtb	r2, r3
 2373 04d8 674B     		ldr	r3, .L130+4
 2374 04da 9A71     		strb	r2, [r3, #6]
 687:modem.c       ****                     alarmLevelSensor = CreateAlarm(updatable_parameters.Level_Sensor_freq,ALARM_TYP
 2375              		.loc 1 687 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 59


 2376 04dc 664B     		ldr	r3, .L130+4
 2377 04de 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 2378 04e0 99B2     		uxth	r1, r3
 2379 04e2 6F4C     		ldr	r4, .L130+44
 2380 04e4 3846     		mov	r0, r7
 2381 04e6 0723     		movs	r3, #7
 2382 04e8 0122     		movs	r2, #1
 2383 04ea FFF7FEFF 		bl	CreateAlarm
 2384 04ee 3A46     		mov	r2, r7
 2385 04f0 2346     		mov	r3, r4
 2386 04f2 1168     		ldr	r1, [r2]	@ unaligned
 2387 04f4 1960     		str	r1, [r3]	@ unaligned
 2388 04f6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 2389 04f8 9A80     		strh	r2, [r3, #4]	@ unaligned
 688:modem.c       **** 
 689:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT, "Level_Sensor frequency changed to: %d\r\n", level
 2390              		.loc 1 689 0
 2391 04fa 07F17403 		add	r3, r7, #116
 2392 04fe 1B68     		ldr	r3, [r3]
 2393 0500 1A46     		mov	r2, r3
 2394 0502 6849     		ldr	r1, .L130+48
 2395 0504 0020     		movs	r0, #0
 2396 0506 FFF7FEFF 		bl	printNotif
 2397 050a 08E0     		b	.L115
 2398              	.L117:
 690:modem.c       ****                 } 
 691:modem.c       ****                 else{
 692:modem.c       ****                     printNotif(NOTIF_TYPE_ERROR,"Could not parse new Level_Sensor frequency value."
 2399              		.loc 1 692 0
 2400 050c 6649     		ldr	r1, .L130+52
 2401 050e 0220     		movs	r0, #2
 2402 0510 FFF7FEFF 		bl	printNotif
 2403 0514 03E0     		b	.L115
 2404              	.L116:
 693:modem.c       ****                 }
 694:modem.c       ****             }
 695:modem.c       ****             else{
 696:modem.c       ****                 printNotif(NOTIF_TYPE_ERROR,"No Level_Sensor frequency value indicated.");
 2405              		.loc 1 696 0
 2406 0516 6549     		ldr	r1, .L130+56
 2407 0518 0220     		movs	r0, #2
 2408 051a FFF7FEFF 		bl	printNotif
 2409              	.L115:
 697:modem.c       ****             }
 698:modem.c       ****         }
 699:modem.c       ****         if(downstream_level_sensor_enabled){ 
 2410              		.loc 1 699 0
 2411 051e 644B     		ldr	r3, .L130+60
 2412 0520 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2413 0522 002B     		cmp	r3, #0
 2414 0524 4ED0     		beq	.L119
 700:modem.c       ****             if (strstr(s_down_level_sensor,"Freq=") !=NULL){
 2415              		.loc 1 700 0
 2416 0526 07F50873 		add	r3, r7, #544
 2417 052a 5549     		ldr	r1, .L130+12
 2418 052c 1846     		mov	r0, r3
 2419 052e FFF7FEFF 		bl	strstr
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 60


 2420 0532 0346     		mov	r3, r0
 2421 0534 002B     		cmp	r3, #0
 2422 0536 41D0     		beq	.L120
 701:modem.c       ****                 temp[0] = '\0';
 2423              		.loc 1 701 0
 2424 0538 07F10803 		add	r3, r7, #8
 2425 053c 0022     		movs	r2, #0
 2426 053e 1A70     		strb	r2, [r3]
 702:modem.c       ****                 strcpy(temp,s_down_level_sensor); // this temp may not actually be used
 2427              		.loc 1 702 0
 2428 0540 07F50872 		add	r2, r7, #544
 2429 0544 07F10803 		add	r3, r7, #8
 2430 0548 1146     		mov	r1, r2
 2431 054a 1846     		mov	r0, r3
 2432 054c FFF7FEFF 		bl	strcpy
 703:modem.c       ****                 extract_string(temp,"Freq=","\r",s_down_level_sensor); // grab level app frequency
 2433              		.loc 1 703 0
 2434 0550 07F50873 		add	r3, r7, #544
 2435 0554 07F10800 		add	r0, r7, #8
 2436 0558 4A4A     		ldr	r2, .L130+16
 2437 055a 4949     		ldr	r1, .L130+12
 2438 055c FFF7FEFF 		bl	extract_string
 704:modem.c       ****                 if(sscanf(s_down_level_sensor, "%d", &down_level_freq)==1){
 2439              		.loc 1 704 0
 2440 0560 07F17002 		add	r2, r7, #112
 2441 0564 07F50873 		add	r3, r7, #544
 2442 0568 4749     		ldr	r1, .L130+20
 2443 056a 1846     		mov	r0, r3
 2444 056c FFF7FEFF 		bl	sscanf
 2445 0570 0346     		mov	r3, r0
 2446 0572 012B     		cmp	r3, #1
 2447 0574 1DD1     		bne	.L121
 705:modem.c       ****                     updatable_parameters.Downstream_Level_Sensor_freq = down_level_freq;
 2448              		.loc 1 705 0
 2449 0576 07F17003 		add	r3, r7, #112
 2450 057a 1B68     		ldr	r3, [r3]
 2451 057c DAB2     		uxtb	r2, r3
 2452 057e 3E4B     		ldr	r3, .L130+4
 2453 0580 DA71     		strb	r2, [r3, #7]
 706:modem.c       ****                     alarmDownstreamLevelSensor = CreateAlarm(updatable_parameters.Downstream_Level_
 2454              		.loc 1 706 0
 2455 0582 3D4B     		ldr	r3, .L130+4
 2456 0584 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 2457 0586 99B2     		uxth	r1, r3
 2458 0588 4A4C     		ldr	r4, .L130+64
 2459 058a 3846     		mov	r0, r7
 2460 058c 0723     		movs	r3, #7
 2461 058e 0122     		movs	r2, #1
 2462 0590 FFF7FEFF 		bl	CreateAlarm
 2463 0594 3A46     		mov	r2, r7
 2464 0596 2346     		mov	r3, r4
 2465 0598 1168     		ldr	r1, [r2]	@ unaligned
 2466 059a 1960     		str	r1, [r3]	@ unaligned
 2467 059c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 2468 059e 9A80     		strh	r2, [r3, #4]	@ unaligned
 707:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT, "Downstream_Level_Sensor frequency changed to: %d\
 2469              		.loc 1 707 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 61


 2470 05a0 07F17003 		add	r3, r7, #112
 2471 05a4 1B68     		ldr	r3, [r3]
 2472 05a6 1A46     		mov	r2, r3
 2473 05a8 4349     		ldr	r1, .L130+68
 2474 05aa 0020     		movs	r0, #0
 2475 05ac FFF7FEFF 		bl	printNotif
 2476 05b0 08E0     		b	.L119
 2477              	.L121:
 708:modem.c       ****                 } 
 709:modem.c       ****                 else{
 710:modem.c       ****                     printNotif(NOTIF_TYPE_ERROR,"Could not parse new Downstream_Level_Sensor freque
 2478              		.loc 1 710 0
 2479 05b2 4249     		ldr	r1, .L130+72
 2480 05b4 0220     		movs	r0, #2
 2481 05b6 FFF7FEFF 		bl	printNotif
 2482 05ba 03E0     		b	.L119
 2483              	.L120:
 711:modem.c       ****                 }
 712:modem.c       ****             }
 713:modem.c       ****             else{
 714:modem.c       ****                 printNotif(NOTIF_TYPE_ERROR,"No Downstream_Level_Sensor frequency value indicated."
 2484              		.loc 1 714 0
 2485 05bc 4049     		ldr	r1, .L130+76
 2486 05be 0220     		movs	r0, #2
 2487 05c0 FFF7FEFF 		bl	printNotif
 2488              	.L119:
 715:modem.c       ****             }
 716:modem.c       ****         }
 717:modem.c       ****         /*
 718:modem.c       ****         if(valve_enabled){ 
 719:modem.c       ****             if (strstr(s_valve,"Freq=") !=NULL){
 720:modem.c       ****                 temp[0] = '\0';
 721:modem.c       ****                 strcpy(temp,s_valve);
 722:modem.c       ****                 extract_string(temp,"Freq=","\r",s_valve); // grab valve frequency
 723:modem.c       ****                 if(sscanf(s_valve, "%d", &valve_freq)==1){
 724:modem.c       ****                     updatable_parameters.Valve_freq = valve_freq;
 725:modem.c       ****                     alarmDownstreamLevelSensor = CreateAlarm(updatable_parameters.Valve_freq,ALARM_
 726:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT, "Valve frequency changed to: %d\r\n", valve_freq);
 727:modem.c       ****                 } 
 728:modem.c       ****                 else{
 729:modem.c       ****                     printNotif(NOTIF_TYPE_ERROR,"Could not parse new Valve frequency value.");
 730:modem.c       ****                 }
 731:modem.c       ****             }
 732:modem.c       ****             else{
 733:modem.c       ****                 printNotif(NOTIF_TYPE_ERROR,"No Valve frequency value indicated.");
 734:modem.c       ****             }
 735:modem.c       ****         }
 736:modem.c       ****         */
 737:modem.c       ****         if(autosampler_enabled){ 
 2489              		.loc 1 737 0
 2490 05c4 3F4B     		ldr	r3, .L130+80
 2491 05c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2492 05c8 002B     		cmp	r3, #0
 2493 05ca 4ED0     		beq	.L127
 738:modem.c       ****             if (strstr(s_autosampler,"Freq=") !=NULL){
 2494              		.loc 1 738 0
 2495 05cc 07F5AC73 		add	r3, r7, #344
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 62


 2496 05d0 2B49     		ldr	r1, .L130+12
 2497 05d2 1846     		mov	r0, r3
 2498 05d4 FFF7FEFF 		bl	strstr
 2499 05d8 0346     		mov	r3, r0
 2500 05da 002B     		cmp	r3, #0
 2501 05dc 41D0     		beq	.L124
 739:modem.c       ****                 temp[0] = '\0';
 2502              		.loc 1 739 0
 2503 05de 07F10803 		add	r3, r7, #8
 2504 05e2 0022     		movs	r2, #0
 2505 05e4 1A70     		strb	r2, [r3]
 740:modem.c       ****                 strcpy(temp,s_autosampler); // this temp may not actually be used
 2506              		.loc 1 740 0
 2507 05e6 07F5AC72 		add	r2, r7, #344
 2508 05ea 07F10803 		add	r3, r7, #8
 2509 05ee 1146     		mov	r1, r2
 2510 05f0 1846     		mov	r0, r3
 2511 05f2 FFF7FEFF 		bl	strcpy
 741:modem.c       ****                 extract_string(temp,"Freq=","\r",s_autosampler); // grab autosampler app frequency
 2512              		.loc 1 741 0
 2513 05f6 07F5AC73 		add	r3, r7, #344
 2514 05fa 07F10800 		add	r0, r7, #8
 2515 05fe 214A     		ldr	r2, .L130+16
 2516 0600 1F49     		ldr	r1, .L130+12
 2517 0602 FFF7FEFF 		bl	extract_string
 742:modem.c       ****                 if(sscanf(s_autosampler, "%d", &autosampler_freq)==1){
 2518              		.loc 1 742 0
 2519 0606 07F16C02 		add	r2, r7, #108
 2520 060a 07F5AC73 		add	r3, r7, #344
 2521 060e 1E49     		ldr	r1, .L130+20
 2522 0610 1846     		mov	r0, r3
 2523 0612 FFF7FEFF 		bl	sscanf
 2524 0616 0346     		mov	r3, r0
 2525 0618 012B     		cmp	r3, #1
 2526 061a 1DD1     		bne	.L125
 743:modem.c       ****                     updatable_parameters.Autosampler_freq = autosampler_freq;
 2527              		.loc 1 743 0
 2528 061c 07F16C03 		add	r3, r7, #108
 2529 0620 1B68     		ldr	r3, [r3]
 2530 0622 DAB2     		uxtb	r2, r3
 2531 0624 144B     		ldr	r3, .L130+4
 2532 0626 5A72     		strb	r2, [r3, #9]
 744:modem.c       ****                     alarmAutosampler = CreateAlarm(updatable_parameters.Autosampler_freq,ALARM_TYPE
 2533              		.loc 1 744 0
 2534 0628 134B     		ldr	r3, .L130+4
 2535 062a 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 2536 062c 99B2     		uxth	r1, r3
 2537 062e 264C     		ldr	r4, .L130+84
 2538 0630 3846     		mov	r0, r7
 2539 0632 0723     		movs	r3, #7
 2540 0634 0122     		movs	r2, #1
 2541 0636 FFF7FEFF 		bl	CreateAlarm
 2542 063a 3A46     		mov	r2, r7
 2543 063c 2346     		mov	r3, r4
 2544 063e 1168     		ldr	r1, [r2]	@ unaligned
 2545 0640 1960     		str	r1, [r3]	@ unaligned
 2546 0642 9288     		ldrh	r2, [r2, #4]	@ unaligned
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 63


 2547 0644 9A80     		strh	r2, [r3, #4]	@ unaligned
 745:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT, "Autosampler frequency changed to: %d\r\n", autosa
 2548              		.loc 1 745 0
 2549 0646 07F16C03 		add	r3, r7, #108
 2550 064a 1B68     		ldr	r3, [r3]
 2551 064c 1A46     		mov	r2, r3
 2552 064e 1F49     		ldr	r1, .L130+88
 2553 0650 0020     		movs	r0, #0
 2554 0652 FFF7FEFF 		bl	printNotif
 2555              	.LBE9:
 746:modem.c       ****                 } 
 747:modem.c       ****                 else{
 748:modem.c       ****                     printNotif(NOTIF_TYPE_ERROR,"Could not parse new Autosampler frequency value.")
 749:modem.c       ****                 }
 750:modem.c       ****             }
 751:modem.c       ****             else{
 752:modem.c       ****                 printNotif(NOTIF_TYPE_ERROR,"No Autosampler frequency value indicated.");
 753:modem.c       ****             }
 754:modem.c       ****         }
 755:modem.c       ****         /* app add template
 756:modem.c       ****         if(<name>_enabled){ 
 757:modem.c       ****             if (strstr(s_<name>,"Freq=") !=NULL){
 758:modem.c       ****                 temp[0] = '\0';
 759:modem.c       ****                 strcpy(temp,s_<name>); // this temp may not actually be used
 760:modem.c       ****                 extract_string(temp,"Freq=","\r",s_<name>); // grab <name> app frequency
 761:modem.c       ****                 if(sscanf(s_<name>, "%d", &<name>_freq)==1){
 762:modem.c       ****                     updatable_parameters.Autosampler_freq = <name>_freq;
 763:modem.c       ****                     alarm<Name> = CreateAlarm(updatable_parameters.<Name>_freq,ALARM_TYPE_MINUTE,AL
 764:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT, "<Name> frequency changed to: %d\r\n", <name>_freq
 765:modem.c       ****                 } 
 766:modem.c       ****                 else{
 767:modem.c       ****                     printNotif(NOTIF_TYPE_ERROR,"Could not parse new <Name>frequency value.");
 768:modem.c       ****                 }
 769:modem.c       ****             }
 770:modem.c       ****             else{
 771:modem.c       ****                 printNotif(NOTIF_TYPE_ERROR,"No <Name> frequency value indicated.");
 772:modem.c       ****             }
 773:modem.c       ****         }
 774:modem.c       ****         */
 775:modem.c       ****     
 776:modem.c       ****     }   
 777:modem.c       ****     //---------------------------------------------------------------------------------------------
 778:modem.c       **** }
 2556              		.loc 1 778 0
 2557 0656 08E0     		b	.L127
 2558              	.L125:
 2559              	.LBB10:
 748:modem.c       ****                 }
 2560              		.loc 1 748 0
 2561 0658 1D49     		ldr	r1, .L130+92
 2562 065a 0220     		movs	r0, #2
 2563 065c FFF7FEFF 		bl	printNotif
 2564              	.LBE10:
 2565              		.loc 1 778 0
 2566 0660 03E0     		b	.L127
 2567              	.L124:
 2568              	.LBB11:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 64


 752:modem.c       ****             }
 2569              		.loc 1 752 0
 2570 0662 1C49     		ldr	r1, .L130+96
 2571 0664 0220     		movs	r0, #2
 2572 0666 FFF7FEFF 		bl	printNotif
 2573              	.L127:
 2574              	.LBE11:
 2575              		.loc 1 778 0
 2576 066a 00BF     		nop
 2577 066c 07F56377 		add	r7, r7, #908
 2578              		.cfi_def_cfa_offset 12
 2579 0670 BD46     		mov	sp, r7
 2580              		.cfi_def_cfa_register 13
 2581              		@ sp needed
 2582 0672 90BD     		pop	{r4, r7, pc}
 2583              	.L131:
 2584              		.align	2
 2585              	.L130:
 2586 0674 50050000 		.word	.LC58
 2587 0678 00000000 		.word	updatable_parameters
 2588 067c 00000000 		.word	App_LED_enabled
 2589 0680 80050000 		.word	.LC59
 2590 0684 88020000 		.word	.LC21
 2591 0688 04040000 		.word	.LC48
 2592 068c 00000000 		.word	alarmAppLED
 2593 0690 88050000 		.word	.LC60
 2594 0694 AC050000 		.word	.LC61
 2595 0698 DC050000 		.word	.LC62
 2596 069c 00000000 		.word	level_sensor_enabled
 2597 06a0 00000000 		.word	alarmLevelSensor
 2598 06a4 04060000 		.word	.LC63
 2599 06a8 2C060000 		.word	.LC64
 2600 06ac 60060000 		.word	.LC65
 2601 06b0 00000000 		.word	downstream_level_sensor_enabled
 2602 06b4 00000000 		.word	alarmDownstreamLevelSensor
 2603 06b8 8C060000 		.word	.LC66
 2604 06bc C0060000 		.word	.LC67
 2605 06c0 00070000 		.word	.LC68
 2606 06c4 00000000 		.word	autosampler_enabled
 2607 06c8 00000000 		.word	alarmAutosampler
 2608 06cc 38070000 		.word	.LC69
 2609 06d0 60070000 		.word	.LC70
 2610 06d4 94070000 		.word	.LC71
 2611              		.cfi_endproc
 2612              	.LFE81:
 2613              		.size	get_updated_parameters_from_malcom, .-get_updated_parameters_from_malcom
 2614              		.section	.rodata
 2615 07be 0000     		.align	2
 2616              	.LC72:
 2617 07c0 41542343 		.ascii	"AT#CGMM\015\000"
 2617      474D4D0D 
 2617      00
 2618 07c9 000000   		.align	2
 2619              	.LC73:
 2620 07cc 4D6F6465 		.ascii	"Modem Model: %s\000"
 2620      6D204D6F 
 2620      64656C3A 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 65


 2620      20257300 
 2621              		.align	2
 2622              	.LC74:
 2623 07dc 41542343 		.ascii	"AT#CCID\015\000"
 2623      4349440D 
 2623      00
 2624 07e5 000000   		.align	2
 2625              	.LC75:
 2626 07e8 53494D20 		.ascii	"SIM ID: %s\000"
 2626      49443A20 
 2626      257300
 2627 07f3 00       		.align	2
 2628              	.LC76:
 2629 07f4 41542B43 		.ascii	"AT+CGSN\015\000"
 2629      47534E0D 
 2629      00
 2630 07fd 000000   		.align	2
 2631              	.LC77:
 2632 0800 494D4549 		.ascii	"IMEI: %s\000"
 2632      3A202573 
 2632      00
 2633 0809 000000   		.align	2
 2634              	.LC78:
 2635 080c 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\015\012"
 2635      4744434F 
 2635      4E543D31 
 2635      2C224950 
 2635      222C2277 
 2636 0835 00       		.ascii	"\000"
 2637 0836 0000     		.align	2
 2638              	.LC79:
 2639 0838 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"super\"\015\012\000"
 2639      4744434F 
 2639      4E543D31 
 2639      2C224950 
 2639      222C2273 
 2640              		.align	2
 2641              	.LC80:
 2642 0854 41542B43 		.ascii	"AT+CFUN?\015\000"
 2642      46554E3F 
 2642      0D00
 2643 085e 0000     		.align	2
 2644              	.LC81:
 2645 0860 4346554E 		.ascii	"CFUN: %s\000"
 2645      3A202573 
 2645      00
 2646 0869 000000   		.align	2
 2647              	.LC82:
 2648 086c 41542B43 		.ascii	"AT+CFUN=1\015\000"
 2648      46554E3D 
 2648      310D00
 2649              		.section	.text.modem_configure_settings,"ax",%progbits
 2650              		.align	2
 2651              		.global	modem_configure_settings
 2652              		.thumb
 2653              		.thumb_func
 2654              		.type	modem_configure_settings, %function
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 66


 2655              	modem_configure_settings:
 2656              	.LFB82:
 779:modem.c       ****     
 780:modem.c       **** // Configure the modem settings
 781:modem.c       **** void modem_configure_settings(){
 2657              		.loc 1 781 0
 2658              		.cfi_startproc
 2659              		@ args = 0, pretend = 0, frame = 16
 2660              		@ frame_needed = 1, uses_anonymous_args = 0
 2661 0000 80B5     		push	{r7, lr}
 2662              		.cfi_def_cfa_offset 8
 2663              		.cfi_offset 7, -8
 2664              		.cfi_offset 14, -4
 2665 0002 84B0     		sub	sp, sp, #16
 2666              		.cfi_def_cfa_offset 24
 2667 0004 00AF     		add	r7, sp, #0
 2668              		.cfi_def_cfa_register 7
 782:modem.c       ****     
 783:modem.c       ****     // Save/print modem model ID number
 784:modem.c       ****     if(modem_info.model_id[0] == '\0'){
 2669              		.loc 1 784 0
 2670 0006 454B     		ldr	r3, .L141
 2671 0008 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 2672 000a 002B     		cmp	r3, #0
 2673 000c 13D1     		bne	.L133
 785:modem.c       ****         // AT command #CGMM returns the "device model identification" code with the command echo.
 786:modem.c       ****         if(at_write_command("AT#CGMM\r","OK",DEFAULT_AT_TIMEOUT)){
 2674              		.loc 1 786 0
 2675 000e 4FF4FA62 		mov	r2, #2000
 2676 0012 4349     		ldr	r1, .L141+4
 2677 0014 4348     		ldr	r0, .L141+8
 2678 0016 FFF7FEFF 		bl	at_write_command
 2679 001a 0346     		mov	r3, r0
 2680 001c 002B     		cmp	r3, #0
 2681 001e 0AD0     		beq	.L133
 787:modem.c       ****             // Extract modem model ID number string from the UART
 788:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.model_id);
 2682              		.loc 1 788 0
 2683 0020 414B     		ldr	r3, .L141+12
 2684 0022 424A     		ldr	r2, .L141+16
 2685 0024 4249     		ldr	r1, .L141+20
 2686 0026 4348     		ldr	r0, .L141+24
 2687 0028 FFF7FEFF 		bl	extract_string
 789:modem.c       ****             // Print modem model ID number
 790:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem Model: %s",modem_info.model_id);
 2688              		.loc 1 790 0
 2689 002c 3E4A     		ldr	r2, .L141+12
 2690 002e 4249     		ldr	r1, .L141+28
 2691 0030 0020     		movs	r0, #0
 2692 0032 FFF7FEFF 		bl	printNotif
 2693              	.L133:
 791:modem.c       ****         }
 792:modem.c       ****     }
 793:modem.c       ****     
 794:modem.c       ****    // Save/print SIM-card ID
 795:modem.c       ****    if(modem_info.sim_id[0] == '\0'){
 2694              		.loc 1 795 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 67


 2695 0036 394B     		ldr	r3, .L141
 2696 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2697 003a 002B     		cmp	r3, #0
 2698 003c 13D1     		bne	.L134
 796:modem.c       ****         // AT command #CCID is an execution command that reads the SIM number 
 797:modem.c       ****         if(at_write_command("AT#CCID\r", "OK", DEFAULT_AT_TIMEOUT)){
 2699              		.loc 1 797 0
 2700 003e 4FF4FA62 		mov	r2, #2000
 2701 0042 3749     		ldr	r1, .L141+4
 2702 0044 3D48     		ldr	r0, .L141+32
 2703 0046 FFF7FEFF 		bl	at_write_command
 2704 004a 0346     		mov	r3, r0
 2705 004c 002B     		cmp	r3, #0
 2706 004e 0AD0     		beq	.L134
 798:modem.c       ****             // Extract SIM-card ID string from the UART
 799:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.sim_id);
 2707              		.loc 1 799 0
 2708 0050 324B     		ldr	r3, .L141
 2709 0052 364A     		ldr	r2, .L141+16
 2710 0054 3649     		ldr	r1, .L141+20
 2711 0056 3748     		ldr	r0, .L141+24
 2712 0058 FFF7FEFF 		bl	extract_string
 800:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"SIM ID: %s",modem_info.sim_id);
 2713              		.loc 1 800 0
 2714 005c 2F4A     		ldr	r2, .L141
 2715 005e 3849     		ldr	r1, .L141+36
 2716 0060 0020     		movs	r0, #0
 2717 0062 FFF7FEFF 		bl	printNotif
 2718              	.L134:
 801:modem.c       ****         }
 802:modem.c       ****    }
 803:modem.c       **** 
 804:modem.c       ****     // Save/print modem IMEI
 805:modem.c       ****     if(modem_info.imei[0] == '\0'){
 2719              		.loc 1 805 0
 2720 0066 2D4B     		ldr	r3, .L141
 2721 0068 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 2722 006c 002B     		cmp	r3, #0
 2723 006e 13D1     		bne	.L135
 806:modem.c       ****         // AT command #CGSN returns the product serial number, identified as the IMEI of the mobile
 807:modem.c       ****         if(at_write_command("AT+CGSN\r","OK",DEFAULT_AT_TIMEOUT)){
 2724              		.loc 1 807 0
 2725 0070 4FF4FA62 		mov	r2, #2000
 2726 0074 2A49     		ldr	r1, .L141+4
 2727 0076 3348     		ldr	r0, .L141+40
 2728 0078 FFF7FEFF 		bl	at_write_command
 2729 007c 0346     		mov	r3, r0
 2730 007e 002B     		cmp	r3, #0
 2731 0080 0AD0     		beq	.L135
 808:modem.c       ****             // Extract modem IMEI number string from the UART
 809:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.imei);
 2732              		.loc 1 809 0
 2733 0082 314B     		ldr	r3, .L141+44
 2734 0084 294A     		ldr	r2, .L141+16
 2735 0086 2A49     		ldr	r1, .L141+20
 2736 0088 2A48     		ldr	r0, .L141+24
 2737 008a FFF7FEFF 		bl	extract_string
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 68


 810:modem.c       ****             // Print modem IMEI number
 811:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"IMEI: %s",modem_info.imei);
 2738              		.loc 1 811 0
 2739 008e 2E4A     		ldr	r2, .L141+44
 2740 0090 2E49     		ldr	r1, .L141+48
 2741 0092 0020     		movs	r0, #0
 2742 0094 FFF7FEFF 		bl	printNotif
 2743              	.L135:
 812:modem.c       ****         } 
 813:modem.c       ****     }
 814:modem.c       ****     
 815:modem.c       ****     // Configure protocol and cellular end point
 816:modem.c       ****     // AT command +CGDCONT defines the PDP context parameter values for a PDP context identified by
 817:modem.c       ****     if(updatable_parameters.sim_type == SIM_TYPE_STANDARD){
 2744              		.loc 1 817 0
 2745 0098 2D4B     		ldr	r3, .L141+52
 2746 009a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2747 009c 83F00103 		eor	r3, r3, #1
 2748 00a0 DBB2     		uxtb	r3, r3
 2749 00a2 002B     		cmp	r3, #0
 2750 00a4 06D0     		beq	.L136
 818:modem.c       ****         at_write_command("AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\r\n", "OK", DEFAULT_AT_TIMEOU
 2751              		.loc 1 818 0
 2752 00a6 4FF4FA62 		mov	r2, #2000
 2753 00aa 1D49     		ldr	r1, .L141+4
 2754 00ac 2948     		ldr	r0, .L141+56
 2755 00ae FFF7FEFF 		bl	at_write_command
 2756 00b2 09E0     		b	.L137
 2757              	.L136:
 819:modem.c       ****     
 820:modem.c       ****     }else if(updatable_parameters.sim_type == SIM_TYPE_SUPER){
 2758              		.loc 1 820 0
 2759 00b4 264B     		ldr	r3, .L141+52
 2760 00b6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2761 00b8 002B     		cmp	r3, #0
 2762 00ba 05D0     		beq	.L137
 821:modem.c       ****         at_write_command("AT+CGDCONT=1,\"IP\",\"super\"\r\n", "OK", DEFAULT_AT_TIMEOUT);
 2763              		.loc 1 821 0
 2764 00bc 4FF4FA62 		mov	r2, #2000
 2765 00c0 1749     		ldr	r1, .L141+4
 2766 00c2 2548     		ldr	r0, .L141+60
 2767 00c4 FFF7FEFF 		bl	at_write_command
 2768              	.L137:
 822:modem.c       ****     }
 823:modem.c       ****     
 824:modem.c       ****     // Check if modem power savings is enabled. If so, disable it so we can send data.
 825:modem.c       ****     // AT command +CFUN? is a read command that reports the current setting of <fun> which is the p
 826:modem.c       ****     if(at_write_command("AT+CFUN?\r", "OK",DEFAULT_AT_TIMEOUT)){
 2769              		.loc 1 826 0
 2770 00c8 4FF4FA62 		mov	r2, #2000
 2771 00cc 1449     		ldr	r1, .L141+4
 2772 00ce 2348     		ldr	r0, .L141+64
 2773 00d0 FFF7FEFF 		bl	at_write_command
 2774 00d4 0346     		mov	r3, r0
 2775 00d6 002B     		cmp	r3, #0
 2776 00d8 1BD0     		beq	.L140
 2777              	.LBB12:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 69


 827:modem.c       ****         char CFUN[10]; // Create a character array of length 10 called CFUN 
 828:modem.c       ****         CFUN[0] = '\0';
 2778              		.loc 1 828 0
 2779 00da 0023     		movs	r3, #0
 2780 00dc 3B71     		strb	r3, [r7, #4]
 829:modem.c       ****         // Extract UART string recieved from the modem
 830:modem.c       ****         extract_string(uart_received_string,": ","\r",CFUN);
 2781              		.loc 1 830 0
 2782 00de 3B1D     		adds	r3, r7, #4
 2783 00e0 124A     		ldr	r2, .L141+16
 2784 00e2 1349     		ldr	r1, .L141+20
 2785 00e4 1348     		ldr	r0, .L141+24
 2786 00e6 FFF7FEFF 		bl	extract_string
 831:modem.c       ****         // Print UART string recieved from the modem
 832:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"CFUN: %s",CFUN);
 2787              		.loc 1 832 0
 2788 00ea 3B1D     		adds	r3, r7, #4
 2789 00ec 1A46     		mov	r2, r3
 2790 00ee 1C49     		ldr	r1, .L141+68
 2791 00f0 0020     		movs	r0, #0
 2792 00f2 FFF7FEFF 		bl	printNotif
 833:modem.c       ****         // Search CRUN for "1", if "1" exists, it will return 1u otherwise it will return NULL
 834:modem.c       ****         // If it returns NULL, then write another command to the modem
 835:modem.c       ****         if(strstr(CFUN,"1") == NULL){
 2793              		.loc 1 835 0
 2794 00f6 3B1D     		adds	r3, r7, #4
 2795 00f8 3121     		movs	r1, #49
 2796 00fa 1846     		mov	r0, r3
 2797 00fc FFF7FEFF 		bl	strchr
 2798 0100 0346     		mov	r3, r0
 2799 0102 002B     		cmp	r3, #0
 2800 0104 05D1     		bne	.L140
 836:modem.c       ****             // AT command +CFUN= is a set command which selects the level of functionality in the m
 837:modem.c       ****             // = 1 means mobile full functionality with power saving disabled 
 838:modem.c       ****             at_write_command("AT+CFUN=1\r", "OK",DEFAULT_AT_TIMEOUT);
 2801              		.loc 1 838 0
 2802 0106 4FF4FA62 		mov	r2, #2000
 2803 010a 0549     		ldr	r1, .L141+4
 2804 010c 1548     		ldr	r0, .L141+72
 2805 010e FFF7FEFF 		bl	at_write_command
 2806              	.L140:
 2807              	.LBE12:
 839:modem.c       ****         }
 840:modem.c       ****     }
 841:modem.c       **** 
 842:modem.c       ****     
 843:modem.c       **** }
 2808              		.loc 1 843 0
 2809 0112 00BF     		nop
 2810 0114 1037     		adds	r7, r7, #16
 2811              		.cfi_def_cfa_offset 8
 2812 0116 BD46     		mov	sp, r7
 2813              		.cfi_def_cfa_register 13
 2814              		@ sp needed
 2815 0118 80BD     		pop	{r7, pc}
 2816              	.L142:
 2817 011a 00BF     		.align	2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 70


 2818              	.L141:
 2819 011c 00000000 		.word	modem_info
 2820 0120 00000000 		.word	.LC0
 2821 0124 C0070000 		.word	.LC72
 2822 0128 14000000 		.word	modem_info+20
 2823 012c 88020000 		.word	.LC21
 2824 0130 8C020000 		.word	.LC22
 2825 0134 00000000 		.word	uart_received_string
 2826 0138 CC070000 		.word	.LC73
 2827 013c DC070000 		.word	.LC74
 2828 0140 E8070000 		.word	.LC75
 2829 0144 F4070000 		.word	.LC76
 2830 0148 28000000 		.word	modem_info+40
 2831 014c 00080000 		.word	.LC77
 2832 0150 00000000 		.word	updatable_parameters
 2833 0154 0C080000 		.word	.LC78
 2834 0158 38080000 		.word	.LC79
 2835 015c 54080000 		.word	.LC80
 2836 0160 60080000 		.word	.LC81
 2837 0164 6C080000 		.word	.LC82
 2838              		.cfi_endproc
 2839              	.LFE82:
 2840              		.size	modem_configure_settings, .-modem_configure_settings
 2841              		.section	.rodata
 2842 0877 00       		.align	2
 2843              	.LC83:
 2844 0878 4D6F6465 		.ascii	"Modem not ready to get time. Not conncted to networ"
 2844      6D206E6F 
 2844      74207265 
 2844      61647920 
 2844      746F2067 
 2845 08ab 6B2E00   		.ascii	"k.\000"
 2846 08ae 0000     		.align	2
 2847              	.LC84:
 2848 08b0 41542B43 		.ascii	"AT+CCLK?\015\000"
 2848      434C4B3F 
 2848      0D00
 2849 08ba 0000     		.align	2
 2850              	.LC85:
 2851 08bc 220D00   		.ascii	"\"\015\000"
 2852 08bf 00       		.align	2
 2853              	.LC86:
 2854 08c0 3A202200 		.ascii	": \"\000"
 2855              		.align	2
 2856              	.LC87:
 2857 08c4 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d-%d\000"
 2857      642F2564 
 2857      2C25643A 
 2857      25643A25 
 2857      642D2564 
 2858 08d9 000000   		.align	2
 2859              	.LC88:
 2860 08dc 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d+%d\000"
 2860      642F2564 
 2860      2C25643A 
 2860      25643A25 
 2860      642B2564 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 71


 2861 08f1 000000   		.align	2
 2862              	.LC89:
 2863 08f4 436F756C 		.ascii	"Could not parse modem time.\000"
 2863      64206E6F 
 2863      74207061 
 2863      72736520 
 2863      6D6F6465 
 2864              		.section	.text.modem_get_network_time,"ax",%progbits
 2865              		.align	2
 2866              		.global	modem_get_network_time
 2867              		.thumb
 2868              		.thumb_func
 2869              		.type	modem_get_network_time, %function
 2870              	modem_get_network_time:
 2871              	.LFB83:
 844:modem.c       **** 
 845:modem.c       **** //returns 0 if modem can't get time
 846:modem.c       **** long modem_get_network_time(){
 2872              		.loc 1 846 0
 2873              		.cfi_startproc
 2874              		@ args = 0, pretend = 0, frame = 104
 2875              		@ frame_needed = 1, uses_anonymous_args = 0
 2876 0000 80B5     		push	{r7, lr}
 2877              		.cfi_def_cfa_offset 8
 2878              		.cfi_offset 7, -8
 2879              		.cfi_offset 14, -4
 2880 0002 A0B0     		sub	sp, sp, #128
 2881              		.cfi_def_cfa_offset 136
 2882 0004 06AF     		add	r7, sp, #24
 2883              		.cfi_def_cfa 7, 112
 847:modem.c       ****     
 848:modem.c       ****     //modem reposen format (careful to include the quotes "")
 849:modem.c       ****     //+CCLK: "20/05/01,10:48:33-16" the "-16" is the number of quarter hourts (15 mins) from GMT ti
 850:modem.c       ****     //ex: 14:48 GMT
 851:modem.c       **** 
 852:modem.c       ****     // If modem_state is not "ready", then print error and return 0
 853:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2884              		.loc 1 853 0
 2885 0006 444B     		ldr	r3, .L150
 2886 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2887 000a 042B     		cmp	r3, #4
 2888 000c 05D0     		beq	.L144
 854:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Modem not ready to get time. Not conncted to network.");
 2889              		.loc 1 854 0
 2890 000e 4349     		ldr	r1, .L150+4
 2891 0010 0220     		movs	r0, #2
 2892 0012 FFF7FEFF 		bl	printNotif
 855:modem.c       ****         return 0;   
 2893              		.loc 1 855 0
 2894 0016 0023     		movs	r3, #0
 2895 0018 7AE0     		b	.L145
 2896              	.L144:
 856:modem.c       ****     }
 857:modem.c       ****     long epoch_time = 0; // Create variable of long time and set equal to 0
 2897              		.loc 1 857 0
 2898 001a 0023     		movs	r3, #0
 2899 001c 7B66     		str	r3, [r7, #100]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 72


 858:modem.c       ****     
 859:modem.c       ****     // AT command +CCLK? is a read command that returns the current setting of the real-time clock 
 860:modem.c       ****     if(at_write_command("AT+CCLK?\r","OK",DEFAULT_AT_TIMEOUT)){
 2900              		.loc 1 860 0
 2901 001e 4FF4FA62 		mov	r2, #2000
 2902 0022 3F49     		ldr	r1, .L150+8
 2903 0024 3F48     		ldr	r0, .L150+12
 2904 0026 FFF7FEFF 		bl	at_write_command
 2905 002a 0346     		mov	r3, r0
 2906 002c 002B     		cmp	r3, #0
 2907 002e 6ED0     		beq	.L146
 2908              	.LBB13:
 861:modem.c       ****         // need to set this to /0
 862:modem.c       ****         char network_time[30]; // Create a character array of length 30 called network_time 
 863:modem.c       ****         network_time[0] = '\0';
 2909              		.loc 1 863 0
 2910 0030 0023     		movs	r3, #0
 2911 0032 87F84430 		strb	r3, [r7, #68]
 864:modem.c       ****         // Extract UART string recieved from the modem and save to variable network_time
 865:modem.c       ****         extract_string(uart_received_string,": \"","\"\r",network_time);
 2912              		.loc 1 865 0
 2913 0036 07F14403 		add	r3, r7, #68
 2914 003a 3B4A     		ldr	r2, .L150+16
 2915 003c 3B49     		ldr	r1, .L150+20
 2916 003e 3C48     		ldr	r0, .L150+24
 2917 0040 FFF7FEFF 		bl	extract_string
 866:modem.c       ****         
 867:modem.c       ****         ///////////////////  
 868:modem.c       ****         struct tm t; // Creates variable t of struct tm
 869:modem.c       ****         
 870:modem.c       ****         // Creates a bunch of variables of type int and sets them to 0
 871:modem.c       ****         int year, month, day, hour, minute, second, gmt_offset = 0;
 2918              		.loc 1 871 0
 2919 0044 0023     		movs	r3, #0
 2920 0046 BB62     		str	r3, [r7, #40]
 872:modem.c       ****       
 873:modem.c       ****         // Determines the GMT offset 
 874:modem.c       ****         // int sscanf(const char *str, const char *format, ...) reads formatted input from a string
 875:modem.c       ****         // On success, the function returns the number of variables filled. In the case of an input
 876:modem.c       ****         if(sscanf(network_time,"%d/%d/%d,%d:%d:%d-%d",&year,&month,&day,&hour,&minute,&second,&gmt_
 2921              		.loc 1 876 0
 2922 0048 07F13C01 		add	r1, r7, #60
 2923 004c 07F14002 		add	r2, r7, #64
 2924 0050 07F14400 		add	r0, r7, #68
 2925 0054 07F12803 		add	r3, r7, #40
 2926 0058 0493     		str	r3, [sp, #16]
 2927 005a 07F12C03 		add	r3, r7, #44
 2928 005e 0393     		str	r3, [sp, #12]
 2929 0060 07F13003 		add	r3, r7, #48
 2930 0064 0293     		str	r3, [sp, #8]
 2931 0066 07F13403 		add	r3, r7, #52
 2932 006a 0193     		str	r3, [sp, #4]
 2933 006c 07F13803 		add	r3, r7, #56
 2934 0070 0093     		str	r3, [sp]
 2935 0072 0B46     		mov	r3, r1
 2936 0074 2F49     		ldr	r1, .L150+28
 2937 0076 FFF7FEFF 		bl	sscanf
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 73


 2938 007a 0346     		mov	r3, r0
 2939 007c 072B     		cmp	r3, #7
 2940 007e 06D1     		bne	.L147
 877:modem.c       ****             gmt_offset = gmt_offset*(900);
 2941              		.loc 1 877 0
 2942 0080 BB6A     		ldr	r3, [r7, #40]
 2943 0082 4FF46172 		mov	r2, #900
 2944 0086 02FB03F3 		mul	r3, r2, r3
 2945 008a BB62     		str	r3, [r7, #40]
 2946 008c 27E0     		b	.L148
 2947              	.L147:
 878:modem.c       ****         }else if(sscanf(network_time,"%d/%d/%d,%d:%d:%d+%d",&year,&month,&day,&hour,&minute,&second
 2948              		.loc 1 878 0
 2949 008e 07F13C01 		add	r1, r7, #60
 2950 0092 07F14002 		add	r2, r7, #64
 2951 0096 07F14400 		add	r0, r7, #68
 2952 009a 07F12803 		add	r3, r7, #40
 2953 009e 0493     		str	r3, [sp, #16]
 2954 00a0 07F12C03 		add	r3, r7, #44
 2955 00a4 0393     		str	r3, [sp, #12]
 2956 00a6 07F13003 		add	r3, r7, #48
 2957 00aa 0293     		str	r3, [sp, #8]
 2958 00ac 07F13403 		add	r3, r7, #52
 2959 00b0 0193     		str	r3, [sp, #4]
 2960 00b2 07F13803 		add	r3, r7, #56
 2961 00b6 0093     		str	r3, [sp]
 2962 00b8 0B46     		mov	r3, r1
 2963 00ba 1F49     		ldr	r1, .L150+32
 2964 00bc FFF7FEFF 		bl	sscanf
 2965 00c0 0346     		mov	r3, r0
 2966 00c2 072B     		cmp	r3, #7
 2967 00c4 05D1     		bne	.L149
 879:modem.c       ****             gmt_offset = gmt_offset*(-900);
 2968              		.loc 1 879 0
 2969 00c6 BB6A     		ldr	r3, [r7, #40]
 2970 00c8 1C4A     		ldr	r2, .L150+36
 2971 00ca 02FB03F3 		mul	r3, r2, r3
 2972 00ce BB62     		str	r3, [r7, #40]
 2973 00d0 05E0     		b	.L148
 2974              	.L149:
 880:modem.c       ****         }else{
 881:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Could not parse modem time.");
 2975              		.loc 1 881 0
 2976 00d2 1B49     		ldr	r1, .L150+40
 2977 00d4 0220     		movs	r0, #2
 2978 00d6 FFF7FEFF 		bl	printNotif
 882:modem.c       ****             return 0;  // Return 0 if cannot get time 
 2979              		.loc 1 882 0
 2980 00da 0023     		movs	r3, #0
 2981 00dc 18E0     		b	.L145
 2982              	.L148:
 883:modem.c       ****         }
 884:modem.c       ****         
 885:modem.c       ****         // Sets each variable to the correct time 
 886:modem.c       ****         t.tm_sec = second;
 2983              		.loc 1 886 0
 2984 00de FB6A     		ldr	r3, [r7, #44]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 74


 2985 00e0 7B60     		str	r3, [r7, #4]
 887:modem.c       ****         t.tm_min = minute;
 2986              		.loc 1 887 0
 2987 00e2 3B6B     		ldr	r3, [r7, #48]
 2988 00e4 BB60     		str	r3, [r7, #8]
 888:modem.c       ****         t.tm_hour = hour;
 2989              		.loc 1 888 0
 2990 00e6 7B6B     		ldr	r3, [r7, #52]
 2991 00e8 FB60     		str	r3, [r7, #12]
 889:modem.c       ****         t.tm_year = year + 100;    // Year since 1900
 2992              		.loc 1 889 0
 2993 00ea 3B6C     		ldr	r3, [r7, #64]
 2994 00ec 6433     		adds	r3, r3, #100
 2995 00ee BB61     		str	r3, [r7, #24]
 890:modem.c       ****         t.tm_mon = month-1;        // Month, where 0 = jan
 2996              		.loc 1 890 0
 2997 00f0 FB6B     		ldr	r3, [r7, #60]
 2998 00f2 013B     		subs	r3, r3, #1
 2999 00f4 7B61     		str	r3, [r7, #20]
 891:modem.c       ****         t.tm_mday = day;           // Day of the month
 3000              		.loc 1 891 0
 3001 00f6 BB6B     		ldr	r3, [r7, #56]
 3002 00f8 3B61     		str	r3, [r7, #16]
 892:modem.c       ****         t.tm_isdst = 0;            // Is Daylight Savings on? 1 = yes, 0 = no, -1 = unknown
 3003              		.loc 1 892 0
 3004 00fa 0023     		movs	r3, #0
 3005 00fc 7B62     		str	r3, [r7, #36]
 893:modem.c       ****     
 894:modem.c       ****         // Set variable epoch-time to be equal to the local time plus the GMT offset
 895:modem.c       ****         // the mktime function converts a broken-down local time (pointed to by timeptr) and return
 896:modem.c       ****         epoch_time = mktime(&t) + gmt_offset;
 3006              		.loc 1 896 0
 3007 00fe 3B1D     		adds	r3, r7, #4
 3008 0100 1846     		mov	r0, r3
 3009 0102 FFF7FEFF 		bl	mktime
 3010 0106 0246     		mov	r2, r0
 3011 0108 BB6A     		ldr	r3, [r7, #40]
 3012 010a 1344     		add	r3, r3, r2
 3013 010c 7B66     		str	r3, [r7, #100]
 3014              	.L146:
 3015              	.LBE13:
 897:modem.c       ****     }
 898:modem.c       ****     
 899:modem.c       ****     return epoch_time;
 3016              		.loc 1 899 0
 3017 010e 7B6E     		ldr	r3, [r7, #100]
 3018              	.L145:
 900:modem.c       **** }
 3019              		.loc 1 900 0
 3020 0110 1846     		mov	r0, r3
 3021 0112 6837     		adds	r7, r7, #104
 3022              		.cfi_def_cfa_offset 8
 3023 0114 BD46     		mov	sp, r7
 3024              		.cfi_def_cfa_register 13
 3025              		@ sp needed
 3026 0116 80BD     		pop	{r7, pc}
 3027              	.L151:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 75


 3028              		.align	2
 3029              	.L150:
 3030 0118 00000000 		.word	modem_state
 3031 011c 78080000 		.word	.LC83
 3032 0120 00000000 		.word	.LC0
 3033 0124 B0080000 		.word	.LC84
 3034 0128 BC080000 		.word	.LC85
 3035 012c C0080000 		.word	.LC86
 3036 0130 00000000 		.word	uart_received_string
 3037 0134 C4080000 		.word	.LC87
 3038 0138 DC080000 		.word	.LC88
 3039 013c 7CFCFFFF 		.word	-900
 3040 0140 F4080000 		.word	.LC89
 3041              		.cfi_endproc
 3042              	.LFE83:
 3043              		.size	modem_get_network_time, .-modem_get_network_time
 3044              		.section	.text.modem_get_state,"ax",%progbits
 3045              		.align	2
 3046              		.global	modem_get_state
 3047              		.thumb
 3048              		.thumb_func
 3049              		.type	modem_get_state, %function
 3050              	modem_get_state:
 3051              	.LFB84:
 901:modem.c       **** 
 902:modem.c       **** // Get the modem state
 903:modem.c       **** uint8 modem_get_state(){
 3052              		.loc 1 903 0
 3053              		.cfi_startproc
 3054              		@ args = 0, pretend = 0, frame = 0
 3055              		@ frame_needed = 1, uses_anonymous_args = 0
 3056              		@ link register save eliminated.
 3057 0000 80B4     		push	{r7}
 3058              		.cfi_def_cfa_offset 4
 3059              		.cfi_offset 7, -4
 3060 0002 00AF     		add	r7, sp, #0
 3061              		.cfi_def_cfa_register 7
 904:modem.c       ****     return modem_state;
 3062              		.loc 1 904 0
 3063 0004 024B     		ldr	r3, .L154
 3064 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 905:modem.c       **** }
 3065              		.loc 1 905 0
 3066 0008 1846     		mov	r0, r3
 3067 000a BD46     		mov	sp, r7
 3068              		.cfi_def_cfa_register 13
 3069              		@ sp needed
 3070 000c 80BC     		pop	{r7}
 3071              		.cfi_restore 7
 3072              		.cfi_def_cfa_offset 0
 3073 000e 7047     		bx	lr
 3074              	.L155:
 3075              		.align	2
 3076              	.L154:
 3077 0010 00000000 		.word	modem_state
 3078              		.cfi_endproc
 3079              	.LFE84:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 76


 3080              		.size	modem_get_state, .-modem_get_state
 3081              		.section	.text.modem_sleep,"ax",%progbits
 3082              		.align	2
 3083              		.global	modem_sleep
 3084              		.thumb
 3085              		.thumb_func
 3086              		.type	modem_sleep, %function
 3087              	modem_sleep:
 3088              	.LFB85:
 906:modem.c       **** 
 907:modem.c       **** // Set modem to sleep
 908:modem.c       **** void modem_sleep(){
 3089              		.loc 1 908 0
 3090              		.cfi_startproc
 3091              		@ args = 0, pretend = 0, frame = 0
 3092              		@ frame_needed = 1, uses_anonymous_args = 0
 3093 0000 80B5     		push	{r7, lr}
 3094              		.cfi_def_cfa_offset 8
 3095              		.cfi_offset 7, -8
 3096              		.cfi_offset 14, -4
 3097 0002 00AF     		add	r7, sp, #0
 3098              		.cfi_def_cfa_register 7
 909:modem.c       ****     // If the modem_state is not "off" then put it to sleep
 910:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 3099              		.loc 1 910 0
 3100 0004 FFF7FEFF 		bl	modem_get_state
 3101 0008 0346     		mov	r3, r0
 3102 000a 002B     		cmp	r3, #0
 3103 000c 03D0     		beq	.L158
 911:modem.c       **** 
 912:modem.c       ****         Telit_ControlReg_Sleep(); // Prepares the modem for entering the low power mode.
 3104              		.loc 1 912 0
 3105 000e FFF7FEFF 		bl	Telit_ControlReg_Sleep
 913:modem.c       ****         UART_Telit_Sleep(); // Saves the current component state, calls the UART_Telit_Stop() funct
 3106              		.loc 1 913 0
 3107 0012 FFF7FEFF 		bl	UART_Telit_Sleep
 3108              	.L158:
 914:modem.c       ****         
 915:modem.c       ****         // Set interrupt on RX pin to wakeup chip from sleep if UART comm starts
 916:modem.c       ****        // Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_FALLING);
 917:modem.c       ****      }
 918:modem.c       **** }
 3109              		.loc 1 918 0
 3110 0016 00BF     		nop
 3111 0018 80BD     		pop	{r7, pc}
 3112              		.cfi_endproc
 3113              	.LFE85:
 3114              		.size	modem_sleep, .-modem_sleep
 3115 001a 00BF     		.section	.text.modem_wakeup,"ax",%progbits
 3116              		.align	2
 3117              		.global	modem_wakeup
 3118              		.thumb
 3119              		.thumb_func
 3120              		.type	modem_wakeup, %function
 3121              	modem_wakeup:
 3122              	.LFB86:
 919:modem.c       **** 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 77


 920:modem.c       **** // Wakeup the modem
 921:modem.c       **** void modem_wakeup(){
 3123              		.loc 1 921 0
 3124              		.cfi_startproc
 3125              		@ args = 0, pretend = 0, frame = 0
 3126              		@ frame_needed = 1, uses_anonymous_args = 0
 3127 0000 80B5     		push	{r7, lr}
 3128              		.cfi_def_cfa_offset 8
 3129              		.cfi_offset 7, -8
 3130              		.cfi_offset 14, -4
 3131 0002 00AF     		add	r7, sp, #0
 3132              		.cfi_def_cfa_register 7
 922:modem.c       ****     // If modem state is not off then wake it up
 923:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 3133              		.loc 1 923 0
 3134 0004 FFF7FEFF 		bl	modem_get_state
 3135 0008 0346     		mov	r3, r0
 3136 000a 002B     		cmp	r3, #0
 3137 000c 0BD0     		beq	.L161
 924:modem.c       ****         Telit_ControlReg_Wakeup(); // Restores the modem after waking up from the low power mode.
 3138              		.loc 1 924 0
 3139 000e FFF7FEFF 		bl	Telit_ControlReg_Wakeup
 925:modem.c       ****         // Calls the UART_Telit_RestoreConfig() function to restore the configuration.
 926:modem.c       ****         // If the modem was enabled before the UART_Telit_Sleep() function was called, the UART_Tel
 927:modem.c       ****         UART_Telit_Wakeup();
 3140              		.loc 1 927 0
 3141 0012 FFF7FEFF 		bl	UART_Telit_Wakeup
 928:modem.c       ****         // Remove the need for this pin itterupt
 929:modem.c       ****         //Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 930:modem.c       ****         
 931:modem.c       ****         // If woken up from pin, go ahead and delay for 100ms to allow modem UART to deliver the me
 932:modem.c       ****         if(modem_get_state() == MODEM_STATE_WAITING_FOR_IP){
 3142              		.loc 1 932 0
 3143 0016 FFF7FEFF 		bl	modem_get_state
 3144 001a 0346     		mov	r3, r0
 3145 001c 032B     		cmp	r3, #3
 3146 001e 02D1     		bne	.L161
 933:modem.c       ****             CyDelay(100u);
 3147              		.loc 1 933 0
 3148 0020 6420     		movs	r0, #100
 3149 0022 FFF7FEFF 		bl	CyDelay
 3150              	.L161:
 934:modem.c       ****         }
 935:modem.c       ****      }
 936:modem.c       **** }
 3151              		.loc 1 936 0
 3152 0026 00BF     		nop
 3153 0028 80BD     		pop	{r7, pc}
 3154              		.cfi_endproc
 3155              	.LFE86:
 3156              		.size	modem_wakeup, .-modem_wakeup
 3157 002a 00BF     		.section	.rodata
 3158              		.align	2
 3159              	.LC90:
 3160 0910 41542347 		.ascii	"AT#GPIO=5,1,1,0\015\000"
 3160      50494F3D 
 3160      352C312C 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 78


 3160      312C300D 
 3160      00
 3161 0921 000000   		.align	2
 3162              	.LC91:
 3163 0924 41542453 		.ascii	"AT$SUPLSEC=1\015\000"
 3163      55504C53 
 3163      45433D31 
 3163      0D00
 3164 0932 0000     		.align	2
 3165              	.LC92:
 3166 0934 41542453 		.ascii	"AT$SUPLV=2\015\000"
 3166      55504C56 
 3166      3D320D00 
 3167              		.align	2
 3168              	.LC93:
 3169 0940 41542441 		.ascii	"AT$AGPSEN=1\015\000"
 3169      47505345 
 3169      4E3D310D 
 3169      00
 3170 094d 000000   		.align	2
 3171              	.LC94:
 3172 0950 41542453 		.ascii	"AT$SLP=1,\"supl.google.com:7275\"\015\000"
 3172      4C503D31 
 3172      2C227375 
 3172      706C2E67 
 3172      6F6F676C 
 3173 0971 000000   		.align	2
 3174              	.LC95:
 3175 0974 41542353 		.ascii	"AT#SGACT=1,0\015\012\000"
 3175      47414354 
 3175      3D312C30 
 3175      0D0A00
 3176 0983 00       		.align	2
 3177              	.LC96:
 3178 0984 4154244C 		.ascii	"AT$LCSLK=1,1\015\000"
 3178      43534C4B 
 3178      3D312C31 
 3178      0D00
 3179 0992 0000     		.align	2
 3180              	.LC97:
 3181 0994 41542447 		.ascii	"AT$GPSSLSR=1,1,,,,,2\015\000"
 3181      5053534C 
 3181      53523D31 
 3181      2C312C2C 
 3181      2C2C2C32 
 3182 09aa 0000     		.align	2
 3183              	.LC98:
 3184 09ac 4E00     		.ascii	"N\000"
 3185 09ae 0000     		.align	2
 3186              	.LC99:
 3187 09b0 41542447 		.ascii	"AT$GPSACP\015\000"
 3187      50534143 
 3187      500D00
 3188 09bb 00       		.align	2
 3189              	.LC100:
 3190 09bc 24475053 		.ascii	"$GPSACP: \000"
 3190      4143503A 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 79


 3190      2000
 3191 09c6 0000     		.align	2
 3192              	.LC101:
 3193 09c8 24475053 		.ascii	"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s\000"
 3193      4143503A 
 3193      20252A66 
 3193      2C25664E 
 3193      2C256657 
 3194              		.global	__aeabi_fdiv
 3195              		.global	__aeabi_f2d
 3196              		.global	__aeabi_ddiv
 3197              		.global	__aeabi_dadd
 3198              		.global	__aeabi_d2f
 3199              		.align	2
 3200              	.LC102:
 3201 09e8 41542347 		.ascii	"AT#GPIO=5,0,1,0\015\000"
 3201      50494F3D 
 3201      352C302C 
 3201      312C300D 
 3201      00
 3202 09f9 000000   		.align	2
 3203              	.LC103:
 3204 09fc 41542447 		.ascii	"AT$GPSR=0\015\000"
 3204      5053523D 
 3204      300D00
 3205 0a07 00       		.align	2
 3206              	.LC104:
 3207 0a08 54696D65 		.ascii	"Time to lock GPS: %d\000"
 3207      20746F20 
 3207      6C6F636B 
 3207      20475053 
 3207      3A202564 
 3208              		.section	.text.modem_get_gps_coordinates,"ax",%progbits
 3209              		.align	2
 3210              		.global	modem_get_gps_coordinates
 3211              		.thumb
 3212              		.thumb_func
 3213              		.type	modem_get_gps_coordinates, %function
 3214              	modem_get_gps_coordinates:
 3215              	.LFB87:
 937:modem.c       **** 
 938:modem.c       ****     
 939:modem.c       **** // Returns lat,lom,alt data from Assited GPS (AGPS) system
 940:modem.c       **** gps_t modem_get_gps_coordinates(){
 3216              		.loc 1 940 0
 3217              		.cfi_startproc
 3218              		@ args = 0, pretend = 0, frame = 56
 3219              		@ frame_needed = 1, uses_anonymous_args = 0
 3220 0000 B0B5     		push	{r4, r5, r7, lr}
 3221              		.cfi_def_cfa_offset 16
 3222              		.cfi_offset 4, -16
 3223              		.cfi_offset 5, -12
 3224              		.cfi_offset 7, -8
 3225              		.cfi_offset 14, -4
 3226 0002 90B0     		sub	sp, sp, #64
 3227              		.cfi_def_cfa_offset 80
 3228 0004 02AF     		add	r7, sp, #8
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 80


 3229              		.cfi_def_cfa 7, 72
 3230 0006 7860     		str	r0, [r7, #4]
 941:modem.c       ****     gps_t gps;
 942:modem.c       ****     gps.altitude = 0;
 3231              		.loc 1 942 0
 3232 0008 4FF00003 		mov	r3, #0
 3233 000c FB61     		str	r3, [r7, #28]	@ float
 943:modem.c       ****     gps.longitude = 0;
 3234              		.loc 1 943 0
 3235 000e 4FF00003 		mov	r3, #0
 3236 0012 BB61     		str	r3, [r7, #24]	@ float
 944:modem.c       ****     gps.latitude = 0;
 3237              		.loc 1 944 0
 3238 0014 4FF00003 		mov	r3, #0
 3239 0018 7B61     		str	r3, [r7, #20]	@ float
 945:modem.c       ****     gps.time_to_lock =0;
 3240              		.loc 1 945 0
 3241 001a 0023     		movs	r3, #0
 3242 001c 3B84     		strh	r3, [r7, #32]	@ movhi
 946:modem.c       ****     gps.valid = 0;
 3243              		.loc 1 946 0
 3244 001e 0023     		movs	r3, #0
 3245 0020 87F82230 		strb	r3, [r7, #34]
 947:modem.c       ****     
 948:modem.c       ****     //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 949:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 3246              		.loc 1 949 0
 3247 0024 7F4B     		ldr	r3, .L172
 3248 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3249 0028 042B     		cmp	r3, #4
 3250 002a 07D0     		beq	.L163
 950:modem.c       ****         return gps;//where valid = 0
 3251              		.loc 1 950 0
 3252 002c 7B68     		ldr	r3, [r7, #4]
 3253 002e 1C46     		mov	r4, r3
 3254 0030 07F11403 		add	r3, r7, #20
 3255 0034 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3256 0036 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3257 003a EFE0     		b	.L162
 3258              	.L163:
 951:modem.c       ****     }
 952:modem.c       ****     
 953:modem.c       ****     long lock_time = getTimeStamp();
 3259              		.loc 1 953 0
 3260 003c FFF7FEFF 		bl	getTimeStamp
 3261 0040 3863     		str	r0, [r7, #48]
 954:modem.c       ****     
 955:modem.c       ****     // Enable this for the LTER module
 956:modem.c       ****     // Enable GPS Low-Dropout Regulator
 957:modem.c       ****     at_write_command("AT#GPIO=5,1,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 3262              		.loc 1 957 0
 3263 0042 4FF4FA62 		mov	r2, #2000
 3264 0046 7849     		ldr	r1, .L172+4
 3265 0048 7848     		ldr	r0, .L172+8
 3266 004a FFF7FEFF 		bl	at_write_command
 958:modem.c       ****     
 959:modem.c       ****     // Configure SUPL connection params
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 81


 960:modem.c       ****     at_write_command("AT$SUPLSEC=1\r","OK",DEFAULT_AT_TIMEOUT);
 3267              		.loc 1 960 0
 3268 004e 4FF4FA62 		mov	r2, #2000
 3269 0052 7549     		ldr	r1, .L172+4
 3270 0054 7648     		ldr	r0, .L172+12
 3271 0056 FFF7FEFF 		bl	at_write_command
 961:modem.c       ****     
 962:modem.c       ****     // Use SUPL2.0
 963:modem.c       ****     at_write_command("AT$SUPLV=2\r","OK",DEFAULT_AT_TIMEOUT);
 3272              		.loc 1 963 0
 3273 005a 4FF4FA62 		mov	r2, #2000
 3274 005e 7249     		ldr	r1, .L172+4
 3275 0060 7448     		ldr	r0, .L172+16
 3276 0062 FFF7FEFF 		bl	at_write_command
 964:modem.c       ****     
 965:modem.c       ****     // Enable AGPS service
 966:modem.c       ****     at_write_command("AT$AGPSEN=1\r","OK",DEFAULT_AT_TIMEOUT);
 3277              		.loc 1 966 0
 3278 0066 4FF4FA62 		mov	r2, #2000
 3279 006a 6F49     		ldr	r1, .L172+4
 3280 006c 7248     		ldr	r0, .L172+20
 3281 006e FFF7FEFF 		bl	at_write_command
 967:modem.c       ****     
 968:modem.c       ****     // Chose SUPL server, use google public service
 969:modem.c       ****     at_write_command("AT$SLP=1,\"supl.google.com:7275\"\r","OK",DEFAULT_AT_TIMEOUT);
 3282              		.loc 1 969 0
 3283 0072 4FF4FA62 		mov	r2, #2000
 3284 0076 6C49     		ldr	r1, .L172+4
 3285 0078 7048     		ldr	r0, .L172+24
 3286 007a FFF7FEFF 		bl	at_write_command
 970:modem.c       ****     
 971:modem.c       ****     //pdp context has to be locked to carrier for this to work
 972:modem.c       ****     
 973:modem.c       ****     // Unlock context since it needs to be used by modem
 974:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 3287              		.loc 1 974 0
 3288 007e 4FF4FA62 		mov	r2, #2000
 3289 0082 6949     		ldr	r1, .L172+4
 3290 0084 6E48     		ldr	r0, .L172+28
 3291 0086 FFF7FEFF 		bl	at_write_command
 975:modem.c       ****     
 976:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",DEFAULT_AT_TIMEOUT);//ATT
 3292              		.loc 1 976 0
 3293 008a 4FF4FA62 		mov	r2, #2000
 3294 008e 6649     		ldr	r1, .L172+4
 3295 0090 6C48     		ldr	r0, .L172+32
 3296 0092 FFF7FEFF 		bl	at_write_command
 977:modem.c       ****     //at_write_command("AT$LCSLK=1,3\r","OK",DEFAULT_AT_TIMEOUT);//Verizon
 978:modem.c       ****     
 979:modem.c       ****     // Relock the context
 980:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 3297              		.loc 1 980 0
 3298 0096 42F21072 		movw	r2, #10000
 3299 009a 6349     		ldr	r1, .L172+4
 3300 009c 6A48     		ldr	r0, .L172+36
 3301 009e FFF7FEFF 		bl	at_write_command
 981:modem.c       ****     
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 82


 982:modem.c       ****     //start AGPS service
 983:modem.c       ****     at_write_command("AT$GPSSLSR=1,1,,,,,2\r","OK",DEFAULT_AT_TIMEOUT); 
 3302              		.loc 1 983 0
 3303 00a2 4FF4FA62 		mov	r2, #2000
 3304 00a6 6049     		ldr	r1, .L172+4
 3305 00a8 6848     		ldr	r0, .L172+40
 3306 00aa FFF7FEFF 		bl	at_write_command
 984:modem.c       ****     
 985:modem.c       ****     
 986:modem.c       ****     // Start the AGPS service
 987:modem.c       ****     // Will keep receiving a buynch of commas without numbers, until GPS locks
 988:modem.c       ****     // Good lock will return a string with "N" and "W" coordinates
 989:modem.c       ****     
 990:modem.c       ****     
 991:modem.c       ****  
 992:modem.c       ****     uint8 gps_status = 0;
 3307              		.loc 1 992 0
 3308 00ae 0023     		movs	r3, #0
 3309 00b0 87F82F30 		strb	r3, [r7, #47]
 3310              	.LBB14:
 993:modem.c       ****     for(uint16 i=0;i<200;i++){
 3311              		.loc 1 993 0
 3312 00b4 0023     		movs	r3, #0
 3313 00b6 FB86     		strh	r3, [r7, #54]	@ movhi
 3314 00b8 13E0     		b	.L165
 3315              	.L168:
 994:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 3316              		.loc 1 994 0
 3317 00ba 4FF4FA62 		mov	r2, #2000
 3318 00be 6449     		ldr	r1, .L172+44
 3319 00c0 6448     		ldr	r0, .L172+48
 3320 00c2 FFF7FEFF 		bl	at_write_command
 3321 00c6 0346     		mov	r3, r0
 3322 00c8 87F82F30 		strb	r3, [r7, #47]
 995:modem.c       ****         if(gps_status){
 3323              		.loc 1 995 0
 3324 00cc 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3325 00d0 002B     		cmp	r3, #0
 3326 00d2 0AD1     		bne	.L171
 996:modem.c       ****             break;   
 997:modem.c       ****         }
 998:modem.c       ****         CyDelay(1000u);// Wait for a second -- BLOCKING. Could be more elegant to incorporate this 
 3327              		.loc 1 998 0 discriminator 2
 3328 00d4 4FF47A70 		mov	r0, #1000
 3329 00d8 FFF7FEFF 		bl	CyDelay
 993:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 3330              		.loc 1 993 0 discriminator 2
 3331 00dc FB8E     		ldrh	r3, [r7, #54]
 3332 00de 0133     		adds	r3, r3, #1
 3333 00e0 FB86     		strh	r3, [r7, #54]	@ movhi
 3334              	.L165:
 993:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 3335              		.loc 1 993 0 is_stmt 0 discriminator 1
 3336 00e2 FB8E     		ldrh	r3, [r7, #54]
 3337 00e4 C72B     		cmp	r3, #199
 3338 00e6 E8D9     		bls	.L168
 3339 00e8 00E0     		b	.L167
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 83


 3340              	.L171:
 996:modem.c       ****             break;   
 3341              		.loc 1 996 0 is_stmt 1
 3342 00ea 00BF     		nop
 3343              	.L167:
 3344              	.LBE14:
 999:modem.c       ****     }
1000:modem.c       ****     
1001:modem.c       ****     //parse data here
1002:modem.c       ****     
1003:modem.c       ****     //example $GPSACP: 210926.000,4217.8003N,08341.3158W,2.3,258.2,3,17.8,4.8,2.6,220520,05,00
1004:modem.c       ****     float lat;
1005:modem.c       ****     float lon;
1006:modem.c       ****     float alt;
1007:modem.c       ****     
1008:modem.c       ****     // Look for $GPSACP:  in uart_received_string and save to sl
1009:modem.c       ****     // char *strstr(const char *haystack, const char *needle) function finds the first occurrence o
1010:modem.c       ****     char *s1 = strstr(uart_received_string,"$GPSACP: ");
 3345              		.loc 1 1010 0
 3346 00ec 5A49     		ldr	r1, .L172+52
 3347 00ee 5B48     		ldr	r0, .L172+56
 3348 00f0 FFF7FEFF 		bl	strstr
 3349 00f4 B862     		str	r0, [r7, #40]
1011:modem.c       ****     // Look in sl for lat, long, alt and save in match 
1012:modem.c       ****     // int sscanf(const char *str, const char *format, ...) reads formatted input from a string.
1013:modem.c       ****     int match = sscanf(s1,"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s",&lat,&lon,&alt);
 3350              		.loc 1 1013 0
 3351 00f6 07F10C01 		add	r1, r7, #12
 3352 00fa 07F11002 		add	r2, r7, #16
 3353 00fe 07F10803 		add	r3, r7, #8
 3354 0102 0093     		str	r3, [sp]
 3355 0104 0B46     		mov	r3, r1
 3356 0106 5649     		ldr	r1, .L172+60
 3357 0108 B86A     		ldr	r0, [r7, #40]
 3358 010a FFF7FEFF 		bl	sscanf
 3359 010e 7862     		str	r0, [r7, #36]
1014:modem.c       ****     if(match >= 3){
 3360              		.loc 1 1014 0
 3361 0110 7B6A     		ldr	r3, [r7, #36]
 3362 0112 022B     		cmp	r3, #2
 3363 0114 60DD     		ble	.L169
1015:modem.c       ****         // Calculate lat and lon
1016:modem.c       ****         // floorf(x) calculates the largest integer that is less than or equal to x. 
1017:modem.c       ****         // fmod(double x, double y) returns the remainder of x divided by y.
1018:modem.c       ****         lat = floorf(lat/100) + fmod(lat,100)/60;
 3364              		.loc 1 1018 0
 3365 0116 3B69     		ldr	r3, [r7, #16]	@ float
 3366 0118 5249     		ldr	r1, .L172+64
 3367 011a 1846     		mov	r0, r3
 3368 011c FFF7FEFF 		bl	__aeabi_fdiv
 3369 0120 0346     		mov	r3, r0
 3370 0122 1846     		mov	r0, r3
 3371 0124 FFF7FEFF 		bl	floorf
 3372 0128 0346     		mov	r3, r0
 3373 012a 1846     		mov	r0, r3
 3374 012c FFF7FEFF 		bl	__aeabi_f2d
 3375 0130 0446     		mov	r4, r0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 84


 3376 0132 0D46     		mov	r5, r1
 3377 0134 3B69     		ldr	r3, [r7, #16]	@ float
 3378 0136 1846     		mov	r0, r3
 3379 0138 FFF7FEFF 		bl	__aeabi_f2d
 3380 013c 4FF00002 		mov	r2, #0
 3381 0140 494B     		ldr	r3, .L172+68
 3382 0142 FFF7FEFF 		bl	fmod
 3383 0146 4FF00002 		mov	r2, #0
 3384 014a 484B     		ldr	r3, .L172+72
 3385 014c FFF7FEFF 		bl	__aeabi_ddiv
 3386 0150 0246     		mov	r2, r0
 3387 0152 0B46     		mov	r3, r1
 3388 0154 2046     		mov	r0, r4
 3389 0156 2946     		mov	r1, r5
 3390 0158 FFF7FEFF 		bl	__aeabi_dadd
 3391 015c 0346     		mov	r3, r0
 3392 015e 0C46     		mov	r4, r1
 3393 0160 1846     		mov	r0, r3
 3394 0162 2146     		mov	r1, r4
 3395 0164 FFF7FEFF 		bl	__aeabi_d2f
 3396 0168 0346     		mov	r3, r0
 3397 016a 3B61     		str	r3, [r7, #16]	@ float
1019:modem.c       ****         lon = -(floorf(lon/100) + fmod(lon,100)/60);
 3398              		.loc 1 1019 0
 3399 016c FB68     		ldr	r3, [r7, #12]	@ float
 3400 016e 3D49     		ldr	r1, .L172+64
 3401 0170 1846     		mov	r0, r3
 3402 0172 FFF7FEFF 		bl	__aeabi_fdiv
 3403 0176 0346     		mov	r3, r0
 3404 0178 1846     		mov	r0, r3
 3405 017a FFF7FEFF 		bl	floorf
 3406 017e 0346     		mov	r3, r0
 3407 0180 1846     		mov	r0, r3
 3408 0182 FFF7FEFF 		bl	__aeabi_f2d
 3409 0186 0446     		mov	r4, r0
 3410 0188 0D46     		mov	r5, r1
 3411 018a FB68     		ldr	r3, [r7, #12]	@ float
 3412 018c 1846     		mov	r0, r3
 3413 018e FFF7FEFF 		bl	__aeabi_f2d
 3414 0192 4FF00002 		mov	r2, #0
 3415 0196 344B     		ldr	r3, .L172+68
 3416 0198 FFF7FEFF 		bl	fmod
 3417 019c 4FF00002 		mov	r2, #0
 3418 01a0 324B     		ldr	r3, .L172+72
 3419 01a2 FFF7FEFF 		bl	__aeabi_ddiv
 3420 01a6 0246     		mov	r2, r0
 3421 01a8 0B46     		mov	r3, r1
 3422 01aa 2046     		mov	r0, r4
 3423 01ac 2946     		mov	r1, r5
 3424 01ae FFF7FEFF 		bl	__aeabi_dadd
 3425 01b2 0346     		mov	r3, r0
 3426 01b4 0C46     		mov	r4, r1
 3427 01b6 1846     		mov	r0, r3
 3428 01b8 2146     		mov	r1, r4
 3429 01ba FFF7FEFF 		bl	__aeabi_d2f
 3430 01be 0346     		mov	r3, r0
 3431 01c0 83F00043 		eor	r3, r3, #-2147483648
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 85


 3432 01c4 FB60     		str	r3, [r7, #12]	@ float
1020:modem.c       ****         gps.altitude = alt; // Save alt, lat, and lon to the variable gps.
 3433              		.loc 1 1020 0
 3434 01c6 BB68     		ldr	r3, [r7, #8]	@ float
 3435 01c8 FB61     		str	r3, [r7, #28]	@ float
1021:modem.c       ****         gps.latitude = lat;
 3436              		.loc 1 1021 0
 3437 01ca 3B69     		ldr	r3, [r7, #16]	@ float
 3438 01cc 7B61     		str	r3, [r7, #20]	@ float
1022:modem.c       ****         gps.longitude = lon;
 3439              		.loc 1 1022 0
 3440 01ce FB68     		ldr	r3, [r7, #12]	@ float
 3441 01d0 BB61     		str	r3, [r7, #24]	@ float
1023:modem.c       ****         gps.valid = 1;
 3442              		.loc 1 1023 0
 3443 01d2 0123     		movs	r3, #1
 3444 01d4 87F82230 		strb	r3, [r7, #34]
 3445              	.L169:
1024:modem.c       ****     }
1025:modem.c       ****     
1026:modem.c       ****     // Disable LDO, just in case
1027:modem.c       ****     at_write_command("AT#GPIO=5,0,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 3446              		.loc 1 1027 0
 3447 01d8 4FF4FA62 		mov	r2, #2000
 3448 01dc 1249     		ldr	r1, .L172+4
 3449 01de 2448     		ldr	r0, .L172+76
 3450 01e0 FFF7FEFF 		bl	at_write_command
1028:modem.c       ****     
1029:modem.c       ****     // Flush modem's GPS data, just in case
1030:modem.c       ****     at_write_command("AT$GPSR=0\r","OK",DEFAULT_AT_TIMEOUT);
 3451              		.loc 1 1030 0
 3452 01e4 4FF4FA62 		mov	r2, #2000
 3453 01e8 0F49     		ldr	r1, .L172+4
 3454 01ea 2248     		ldr	r0, .L172+80
 3455 01ec FFF7FEFF 		bl	at_write_command
1031:modem.c       ****     
1032:modem.c       ****     
1033:modem.c       ****     
1034:modem.c       ****     
1035:modem.c       ****     
1036:modem.c       ****     /* Relevant to 3g modem, can ignore
1037:modem.c       ****     
1038:modem.c       ****     //Setthe GPS Quality of Servicep arameters. Inorder,theyare<horiz_accuracy(inmeters)>,<vertical
1039:modem.c       ****     //AT$GPSQOS=50,50,100,0
1040:modem.c       ****     at_write_command("AT$GPSQOS=50,50,100,0\r","OK",DEFAULT_AT_TIMEOUT);
1041:modem.c       ****     
1042:modem.c       ****     //SettheSUPLLocationPlatform(SLP)addressoftheserverthatwillprovidetheA-GPS data:
1043:modem.c       ****     at_write_command("AT$LCSSLP=1,\"supl.google.com\"\r","OK",DEFAULT_AT_TIMEOUT);
1044:modem.c       ****     
1045:modem.c       ****     //unlock contedt, simnce its being used by modem
1046:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
1047:modem.c       ****     //Lock context 1 for LoCation Services (LCS) use only
1048:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",5000u);
1049:modem.c       ****     
1050:modem.c       ****     //unlock contedt, simnce its being used by modem
1051:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
1052:modem.c       ****     
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 86


1053:modem.c       ****     //EnableunsolicitedNMEAGPSdataintheformatof<NMEASENTENCE><CR>
1054:modem.c       ****     at_write_command("AT$GPSNMUN=2,1,0,0,0,0,0\r","OK",DEFAULT_AT_TIMEOUT);
1055:modem.c       ****     
1056:modem.c       ****     //StartGPSlocationservicerequest.Sendingthiscommandsets$GPSP=1
1057:modem.c       ****    uint8 gps_status = 0;
1058:modem.c       ****     for(uint16 i=0;i<200;i++){
1059:modem.c       ****         gps_status = at_write_command("AT$GPSSLSR=1,1,,,,,0,255\r","N",3000u);
1060:modem.c       ****         if(gps_status){
1061:modem.c       ****             break;   
1062:modem.c       ****         }
1063:modem.c       ****   }
1064:modem.c       ****     
1065:modem.c       ****     //$GPGGA,030307.691,4217.7923,N,08341.3240,W,1,05,2.25,225.0,M,,M,,0000*6E
1066:modem.c       ****     //$GPGGA,213852.000,4600.8755,N,09327.7008,W,1,05,3.00,292.0,M,,M,,0000*6E
1067:modem.c       ****     if(gps_status){
1068:modem.c       ****         float lat,lon,alt = 0;
1069:modem.c       ****         if(sscanf(uart_received_string,"%*s,%f,N,%f,W,%*s",&lat,&lon) > 0){
1070:modem.c       ****             gps.altitude = alt;
1071:modem.c       ****             gps.latitude = lat/60;
1072:modem.c       ****             gps.longitude = lon/60;
1073:modem.c       ****             gps.valid = 1;
1074:modem.c       ****         }
1075:modem.c       ****         
1076:modem.c       ****     }
1077:modem.c       ****     
1078:modem.c       ****     //turn off gps
1079:modem.c       ****     //AT$GPSP=0
1080:modem.c       ****     at_write_command("AT$GPSP=0\r","OK",DEFAULT_AT_TIMEOUT);
1081:modem.c       ****     
1082:modem.c       ****     */
1083:modem.c       **** 
1084:modem.c       ****     // Calculate time to lock into GPS location and save in variable lock_time
1085:modem.c       ****     lock_time = getTimeStamp() - lock_time;
 3456              		.loc 1 1085 0
 3457 01f0 FFF7FEFF 		bl	getTimeStamp
 3458 01f4 0246     		mov	r2, r0
 3459 01f6 3B6B     		ldr	r3, [r7, #48]
 3460 01f8 D31A     		subs	r3, r2, r3
 3461 01fa 3B63     		str	r3, [r7, #48]
1086:modem.c       ****     gps.time_to_lock = lock_time;
 3462              		.loc 1 1086 0
 3463 01fc 3B6B     		ldr	r3, [r7, #48]
 3464 01fe 9BB2     		uxth	r3, r3
 3465 0200 3B84     		strh	r3, [r7, #32]	@ movhi
1087:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Time to lock GPS: %d", gps.time_to_lock);
 3466              		.loc 1 1087 0
 3467 0202 3B8C     		ldrh	r3, [r7, #32]
 3468 0204 1A46     		mov	r2, r3
 3469 0206 1C49     		ldr	r1, .L172+84
 3470 0208 0020     		movs	r0, #0
 3471 020a FFF7FEFF 		bl	printNotif
1088:modem.c       ****     
1089:modem.c       ****     return gps;
 3472              		.loc 1 1089 0
 3473 020e 7B68     		ldr	r3, [r7, #4]
 3474 0210 1C46     		mov	r4, r3
 3475 0212 07F11403 		add	r3, r7, #20
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 87


 3476 0216 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 3477 0218 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3478              	.L162:
1090:modem.c       ****     
1091:modem.c       **** }
 3479              		.loc 1 1091 0
 3480 021c 7868     		ldr	r0, [r7, #4]
 3481 021e 3837     		adds	r7, r7, #56
 3482              		.cfi_def_cfa_offset 16
 3483 0220 BD46     		mov	sp, r7
 3484              		.cfi_def_cfa_register 13
 3485              		@ sp needed
 3486 0222 B0BD     		pop	{r4, r5, r7, pc}
 3487              	.L173:
 3488              		.align	2
 3489              	.L172:
 3490 0224 00000000 		.word	modem_state
 3491 0228 00000000 		.word	.LC0
 3492 022c 10090000 		.word	.LC90
 3493 0230 24090000 		.word	.LC91
 3494 0234 34090000 		.word	.LC92
 3495 0238 40090000 		.word	.LC93
 3496 023c 50090000 		.word	.LC94
 3497 0240 74090000 		.word	.LC95
 3498 0244 84090000 		.word	.LC96
 3499 0248 D8020000 		.word	.LC27
 3500 024c 94090000 		.word	.LC97
 3501 0250 AC090000 		.word	.LC98
 3502 0254 B0090000 		.word	.LC99
 3503 0258 BC090000 		.word	.LC100
 3504 025c 00000000 		.word	uart_received_string
 3505 0260 C8090000 		.word	.LC101
 3506 0264 0000C842 		.word	1120403456
 3507 0268 00005940 		.word	1079574528
 3508 026c 00004E40 		.word	1078853632
 3509 0270 E8090000 		.word	.LC102
 3510 0274 FC090000 		.word	.LC103
 3511 0278 080A0000 		.word	.LC104
 3512              		.cfi_endproc
 3513              	.LFE87:
 3514              		.size	modem_get_gps_coordinates, .-modem_get_gps_coordinates
 3515              		.text
 3516              	.Letext0:
 3517              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 3518              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 3519              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 3520              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 3521              		.file 6 "testing.h"
 3522              		.file 7 "data.h"
 3523              		.file 8 "modem.h"
 3524              		.file 9 "notoriOS.h"
 3525              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 3526              		.file 11 "App_LED.h"
 3527              		.file 12 "level_sensor.h"
 3528              		.file 13 "downstream_level_sensor.h"
 3529              		.file 14 "valve.h"
 3530              		.file 15 "autosampler.h"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 88


 3531              		.section	.debug_info,"",%progbits
 3532              	.Ldebug_info0:
 3533 0000 520E0000 		.4byte	0xe52
 3534 0004 0400     		.2byte	0x4
 3535 0006 00000000 		.4byte	.Ldebug_abbrev0
 3536 000a 04       		.byte	0x4
 3537 000b 01       		.uleb128 0x1
 3538 000c B2000000 		.4byte	.LASF198
 3539 0010 0C       		.byte	0xc
 3540 0011 84040000 		.4byte	.LASF199
 3541 0015 42060000 		.4byte	.LASF200
 3542 0019 20000000 		.4byte	.Ldebug_ranges0+0x20
 3543 001d 00000000 		.4byte	0
 3544 0021 00000000 		.4byte	.Ldebug_line0
 3545 0025 02       		.uleb128 0x2
 3546 0026 01       		.byte	0x1
 3547 0027 06       		.byte	0x6
 3548 0028 B5010000 		.4byte	.LASF0
 3549 002c 03       		.uleb128 0x3
 3550 002d 58000000 		.4byte	.LASF4
 3551 0031 02       		.byte	0x2
 3552 0032 1D       		.byte	0x1d
 3553 0033 37000000 		.4byte	0x37
 3554 0037 02       		.uleb128 0x2
 3555 0038 01       		.byte	0x1
 3556 0039 08       		.byte	0x8
 3557 003a 0B070000 		.4byte	.LASF1
 3558 003e 02       		.uleb128 0x2
 3559 003f 02       		.byte	0x2
 3560 0040 05       		.byte	0x5
 3561 0041 BC040000 		.4byte	.LASF2
 3562 0045 02       		.uleb128 0x2
 3563 0046 02       		.byte	0x2
 3564 0047 07       		.byte	0x7
 3565 0048 0B030000 		.4byte	.LASF3
 3566 004c 03       		.uleb128 0x3
 3567 004d D1040000 		.4byte	.LASF5
 3568 0051 02       		.byte	0x2
 3569 0052 3F       		.byte	0x3f
 3570 0053 57000000 		.4byte	0x57
 3571 0057 02       		.uleb128 0x2
 3572 0058 04       		.byte	0x4
 3573 0059 05       		.byte	0x5
 3574 005a 67020000 		.4byte	.LASF6
 3575 005e 03       		.uleb128 0x3
 3576 005f 6D080000 		.4byte	.LASF7
 3577 0063 02       		.byte	0x2
 3578 0064 41       		.byte	0x41
 3579 0065 69000000 		.4byte	0x69
 3580 0069 02       		.uleb128 0x2
 3581 006a 04       		.byte	0x4
 3582 006b 07       		.byte	0x7
 3583 006c E7030000 		.4byte	.LASF8
 3584 0070 02       		.uleb128 0x2
 3585 0071 08       		.byte	0x8
 3586 0072 05       		.byte	0x5
 3587 0073 A7010000 		.4byte	.LASF9
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 89


 3588 0077 02       		.uleb128 0x2
 3589 0078 08       		.byte	0x8
 3590 0079 07       		.byte	0x7
 3591 007a 4D010000 		.4byte	.LASF10
 3592 007e 04       		.uleb128 0x4
 3593 007f 04       		.byte	0x4
 3594 0080 05       		.byte	0x5
 3595 0081 696E7400 		.ascii	"int\000"
 3596 0085 02       		.uleb128 0x2
 3597 0086 04       		.byte	0x4
 3598 0087 07       		.byte	0x7
 3599 0088 29080000 		.4byte	.LASF11
 3600 008c 03       		.uleb128 0x3
 3601 008d 270A0000 		.4byte	.LASF12
 3602 0091 03       		.byte	0x3
 3603 0092 18       		.byte	0x18
 3604 0093 2C000000 		.4byte	0x2c
 3605 0097 03       		.uleb128 0x3
 3606 0098 03070000 		.4byte	.LASF13
 3607 009c 03       		.byte	0x3
 3608 009d 2C       		.byte	0x2c
 3609 009e 4C000000 		.4byte	0x4c
 3610 00a2 03       		.uleb128 0x3
 3611 00a3 3C090000 		.4byte	.LASF14
 3612 00a7 03       		.byte	0x3
 3613 00a8 30       		.byte	0x30
 3614 00a9 5E000000 		.4byte	0x5e
 3615 00ad 05       		.uleb128 0x5
 3616 00ae A5020000 		.4byte	.LASF15
 3617 00b2 04       		.byte	0x4
 3618 00b3 9201     		.2byte	0x192
 3619 00b5 37000000 		.4byte	0x37
 3620 00b9 05       		.uleb128 0x5
 3621 00ba 17000000 		.4byte	.LASF16
 3622 00be 04       		.byte	0x4
 3623 00bf 9301     		.2byte	0x193
 3624 00c1 45000000 		.4byte	0x45
 3625 00c5 05       		.uleb128 0x5
 3626 00c6 1E030000 		.4byte	.LASF17
 3627 00ca 04       		.byte	0x4
 3628 00cb 9401     		.2byte	0x194
 3629 00cd 69000000 		.4byte	0x69
 3630 00d1 05       		.uleb128 0x5
 3631 00d2 F4050000 		.4byte	.LASF18
 3632 00d6 04       		.byte	0x4
 3633 00d7 9601     		.2byte	0x196
 3634 00d9 3E000000 		.4byte	0x3e
 3635 00dd 05       		.uleb128 0x5
 3636 00de CA020000 		.4byte	.LASF19
 3637 00e2 04       		.byte	0x4
 3638 00e3 9701     		.2byte	0x197
 3639 00e5 57000000 		.4byte	0x57
 3640 00e9 05       		.uleb128 0x5
 3641 00ea 99050000 		.4byte	.LASF20
 3642 00ee 04       		.byte	0x4
 3643 00ef 9801     		.2byte	0x198
 3644 00f1 F5000000 		.4byte	0xf5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 90


 3645 00f5 02       		.uleb128 0x2
 3646 00f6 04       		.byte	0x4
 3647 00f7 04       		.byte	0x4
 3648 00f8 A2060000 		.4byte	.LASF21
 3649 00fc 02       		.uleb128 0x2
 3650 00fd 08       		.byte	0x8
 3651 00fe 04       		.byte	0x4
 3652 00ff CC0A0000 		.4byte	.LASF22
 3653 0103 02       		.uleb128 0x2
 3654 0104 01       		.byte	0x1
 3655 0105 08       		.byte	0x8
 3656 0106 10080000 		.4byte	.LASF23
 3657 010a 02       		.uleb128 0x2
 3658 010b 08       		.byte	0x8
 3659 010c 04       		.byte	0x4
 3660 010d 04080000 		.4byte	.LASF24
 3661 0111 02       		.uleb128 0x2
 3662 0112 04       		.byte	0x4
 3663 0113 07       		.byte	0x7
 3664 0114 A1050000 		.4byte	.LASF25
 3665 0118 06       		.uleb128 0x6
 3666 0119 04       		.byte	0x4
 3667 011a 03010000 		.4byte	0x103
 3668 011e 06       		.uleb128 0x6
 3669 011f 04       		.byte	0x4
 3670 0120 24010000 		.4byte	0x124
 3671 0124 07       		.uleb128 0x7
 3672 0125 03010000 		.4byte	0x103
 3673 0129 08       		.uleb128 0x8
 3674 012a 03010000 		.4byte	0x103
 3675 012e 39010000 		.4byte	0x139
 3676 0132 09       		.uleb128 0x9
 3677 0133 11010000 		.4byte	0x111
 3678 0137 17       		.byte	0x17
 3679 0138 00       		.byte	0
 3680 0139 0A       		.uleb128 0xa
 3681 013a 746D00   		.ascii	"tm\000"
 3682 013d 24       		.byte	0x24
 3683 013e 05       		.byte	0x5
 3684 013f 21       		.byte	0x21
 3685 0140 B1010000 		.4byte	0x1b1
 3686 0144 0B       		.uleb128 0xb
 3687 0145 45090000 		.4byte	.LASF26
 3688 0149 05       		.byte	0x5
 3689 014a 23       		.byte	0x23
 3690 014b 7E000000 		.4byte	0x7e
 3691 014f 00       		.byte	0
 3692 0150 0B       		.uleb128 0xb
 3693 0151 92050000 		.4byte	.LASF27
 3694 0155 05       		.byte	0x5
 3695 0156 24       		.byte	0x24
 3696 0157 7E000000 		.4byte	0x7e
 3697 015b 04       		.byte	0x4
 3698 015c 0B       		.uleb128 0xb
 3699 015d 24000000 		.4byte	.LASF28
 3700 0161 05       		.byte	0x5
 3701 0162 25       		.byte	0x25
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 91


 3702 0163 7E000000 		.4byte	0x7e
 3703 0167 08       		.byte	0x8
 3704 0168 0B       		.uleb128 0xb
 3705 0169 05090000 		.4byte	.LASF29
 3706 016d 05       		.byte	0x5
 3707 016e 26       		.byte	0x26
 3708 016f 7E000000 		.4byte	0x7e
 3709 0173 0C       		.byte	0xc
 3710 0174 0B       		.uleb128 0xb
 3711 0175 54030000 		.4byte	.LASF30
 3712 0179 05       		.byte	0x5
 3713 017a 27       		.byte	0x27
 3714 017b 7E000000 		.4byte	0x7e
 3715 017f 10       		.byte	0x10
 3716 0180 0B       		.uleb128 0xb
 3717 0181 AF030000 		.4byte	.LASF31
 3718 0185 05       		.byte	0x5
 3719 0186 28       		.byte	0x28
 3720 0187 7E000000 		.4byte	0x7e
 3721 018b 14       		.byte	0x14
 3722 018c 0B       		.uleb128 0xb
 3723 018d C0070000 		.4byte	.LASF32
 3724 0191 05       		.byte	0x5
 3725 0192 29       		.byte	0x29
 3726 0193 7E000000 		.4byte	0x7e
 3727 0197 18       		.byte	0x18
 3728 0198 0B       		.uleb128 0xb
 3729 0199 2C000000 		.4byte	.LASF33
 3730 019d 05       		.byte	0x5
 3731 019e 2A       		.byte	0x2a
 3732 019f 7E000000 		.4byte	0x7e
 3733 01a3 1C       		.byte	0x1c
 3734 01a4 0B       		.uleb128 0xb
 3735 01a5 4B040000 		.4byte	.LASF34
 3736 01a9 05       		.byte	0x5
 3737 01aa 2B       		.byte	0x2b
 3738 01ab 7E000000 		.4byte	0x7e
 3739 01af 20       		.byte	0x20
 3740 01b0 00       		.byte	0
 3741 01b1 0C       		.uleb128 0xc
 3742 01b2 8101     		.2byte	0x181
 3743 01b4 06       		.byte	0x6
 3744 01b5 0A       		.byte	0xa
 3745 01b6 DF010000 		.4byte	0x1df
 3746 01ba 0B       		.uleb128 0xb
 3747 01bb EA050000 		.4byte	.LASF35
 3748 01bf 06       		.byte	0x6
 3749 01c0 0C       		.byte	0xc
 3750 01c1 DF010000 		.4byte	0x1df
 3751 01c5 00       		.byte	0
 3752 01c6 0B       		.uleb128 0xb
 3753 01c7 8B090000 		.4byte	.LASF36
 3754 01cb 06       		.byte	0x6
 3755 01cc 0D       		.byte	0xd
 3756 01cd AD000000 		.4byte	0xad
 3757 01d1 80       		.byte	0x80
 3758 01d2 0B       		.uleb128 0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 92


 3759 01d3 83070000 		.4byte	.LASF37
 3760 01d7 06       		.byte	0x6
 3761 01d8 0F       		.byte	0xf
 3762 01d9 EF010000 		.4byte	0x1ef
 3763 01dd 81       		.byte	0x81
 3764 01de 00       		.byte	0
 3765 01df 08       		.uleb128 0x8
 3766 01e0 03010000 		.4byte	0x103
 3767 01e4 EF010000 		.4byte	0x1ef
 3768 01e8 09       		.uleb128 0x9
 3769 01e9 11010000 		.4byte	0x111
 3770 01ed 7F       		.byte	0x7f
 3771 01ee 00       		.byte	0
 3772 01ef 08       		.uleb128 0x8
 3773 01f0 03010000 		.4byte	0x103
 3774 01f4 FF010000 		.4byte	0x1ff
 3775 01f8 09       		.uleb128 0x9
 3776 01f9 11010000 		.4byte	0x111
 3777 01fd FF       		.byte	0xff
 3778 01fe 00       		.byte	0
 3779 01ff 03       		.uleb128 0x3
 3780 0200 69070000 		.4byte	.LASF38
 3781 0204 06       		.byte	0x6
 3782 0205 10       		.byte	0x10
 3783 0206 B1010000 		.4byte	0x1b1
 3784 020a 0D       		.uleb128 0xd
 3785 020b 2C       		.byte	0x2c
 3786 020c 07       		.byte	0x7
 3787 020d 14       		.byte	0x14
 3788 020e 37020000 		.4byte	0x237
 3789 0212 0E       		.uleb128 0xe
 3790 0213 6B657900 		.ascii	"key\000"
 3791 0217 07       		.byte	0x7
 3792 0218 15       		.byte	0x15
 3793 0219 37020000 		.4byte	0x237
 3794 021d 00       		.byte	0
 3795 021e 0B       		.uleb128 0xb
 3796 021f 1E000000 		.4byte	.LASF39
 3797 0223 07       		.byte	0x7
 3798 0224 16       		.byte	0x16
 3799 0225 37020000 		.4byte	0x237
 3800 0229 14       		.byte	0x14
 3801 022a 0B       		.uleb128 0xb
 3802 022b 27040000 		.4byte	.LASF40
 3803 022f 07       		.byte	0x7
 3804 0230 17       		.byte	0x17
 3805 0231 DD000000 		.4byte	0xdd
 3806 0235 28       		.byte	0x28
 3807 0236 00       		.byte	0
 3808 0237 08       		.uleb128 0x8
 3809 0238 03010000 		.4byte	0x103
 3810 023c 47020000 		.4byte	0x247
 3811 0240 09       		.uleb128 0x9
 3812 0241 11010000 		.4byte	0x111
 3813 0245 13       		.byte	0x13
 3814 0246 00       		.byte	0
 3815 0247 03       		.uleb128 0x3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 93


 3816 0248 D1030000 		.4byte	.LASF41
 3817 024c 07       		.byte	0x7
 3818 024d 19       		.byte	0x19
 3819 024e 0A020000 		.4byte	0x20a
 3820 0252 0D       		.uleb128 0xd
 3821 0253 3C       		.byte	0x3c
 3822 0254 08       		.byte	0x8
 3823 0255 36       		.byte	0x36
 3824 0256 7F020000 		.4byte	0x27f
 3825 025a 0B       		.uleb128 0xb
 3826 025b FE080000 		.4byte	.LASF42
 3827 025f 08       		.byte	0x8
 3828 0260 37       		.byte	0x37
 3829 0261 37020000 		.4byte	0x237
 3830 0265 00       		.byte	0
 3831 0266 0B       		.uleb128 0xb
 3832 0267 46080000 		.4byte	.LASF43
 3833 026b 08       		.byte	0x8
 3834 026c 38       		.byte	0x38
 3835 026d 37020000 		.4byte	0x237
 3836 0271 14       		.byte	0x14
 3837 0272 0B       		.uleb128 0xb
 3838 0273 7E070000 		.4byte	.LASF44
 3839 0277 08       		.byte	0x8
 3840 0278 39       		.byte	0x39
 3841 0279 37020000 		.4byte	0x237
 3842 027d 28       		.byte	0x28
 3843 027e 00       		.byte	0
 3844 027f 03       		.uleb128 0x3
 3845 0280 5A080000 		.4byte	.LASF45
 3846 0284 08       		.byte	0x8
 3847 0285 3B       		.byte	0x3b
 3848 0286 52020000 		.4byte	0x252
 3849 028a 0D       		.uleb128 0xd
 3850 028b 20       		.byte	0x20
 3851 028c 08       		.byte	0x8
 3852 028d 3D       		.byte	0x3d
 3853 028e F3020000 		.4byte	0x2f3
 3854 0292 0B       		.uleb128 0xb
 3855 0293 70020000 		.4byte	.LASF46
 3856 0297 08       		.byte	0x8
 3857 0298 3E       		.byte	0x3e
 3858 0299 7E000000 		.4byte	0x7e
 3859 029d 00       		.byte	0
 3860 029e 0E       		.uleb128 0xe
 3861 029f 62657200 		.ascii	"ber\000"
 3862 02a3 08       		.byte	0x8
 3863 02a4 3F       		.byte	0x3f
 3864 02a5 7E000000 		.4byte	0x7e
 3865 02a9 04       		.byte	0x4
 3866 02aa 0B       		.uleb128 0xb
 3867 02ab 4A070000 		.4byte	.LASF47
 3868 02af 08       		.byte	0x8
 3869 02b0 40       		.byte	0x40
 3870 02b1 7E000000 		.4byte	0x7e
 3871 02b5 08       		.byte	0x8
 3872 02b6 0B       		.uleb128 0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 94


 3873 02b7 C1010000 		.4byte	.LASF48
 3874 02bb 08       		.byte	0x8
 3875 02bc 41       		.byte	0x41
 3876 02bd 7E000000 		.4byte	0x7e
 3877 02c1 0C       		.byte	0xc
 3878 02c2 0B       		.uleb128 0xb
 3879 02c3 2F070000 		.4byte	.LASF49
 3880 02c7 08       		.byte	0x8
 3881 02c8 42       		.byte	0x42
 3882 02c9 7E000000 		.4byte	0x7e
 3883 02cd 10       		.byte	0x10
 3884 02ce 0B       		.uleb128 0xb
 3885 02cf 8A070000 		.4byte	.LASF50
 3886 02d3 08       		.byte	0x8
 3887 02d4 43       		.byte	0x43
 3888 02d5 7E000000 		.4byte	0x7e
 3889 02d9 14       		.byte	0x14
 3890 02da 0B       		.uleb128 0xb
 3891 02db D4010000 		.4byte	.LASF51
 3892 02df 08       		.byte	0x8
 3893 02e0 44       		.byte	0x44
 3894 02e1 7E000000 		.4byte	0x7e
 3895 02e5 18       		.byte	0x18
 3896 02e6 0B       		.uleb128 0xb
 3897 02e7 9F040000 		.4byte	.LASF52
 3898 02eb 08       		.byte	0x8
 3899 02ec 45       		.byte	0x45
 3900 02ed 7E000000 		.4byte	0x7e
 3901 02f1 1C       		.byte	0x1c
 3902 02f2 00       		.byte	0
 3903 02f3 03       		.uleb128 0x3
 3904 02f4 8F070000 		.4byte	.LASF53
 3905 02f8 08       		.byte	0x8
 3906 02f9 47       		.byte	0x47
 3907 02fa 8A020000 		.4byte	0x28a
 3908 02fe 0D       		.uleb128 0xd
 3909 02ff 10       		.byte	0x10
 3910 0300 08       		.byte	0x8
 3911 0301 49       		.byte	0x49
 3912 0302 43030000 		.4byte	0x343
 3913 0306 0B       		.uleb128 0xb
 3914 0307 E1050000 		.4byte	.LASF54
 3915 030b 08       		.byte	0x8
 3916 030c 4A       		.byte	0x4a
 3917 030d F5000000 		.4byte	0xf5
 3918 0311 00       		.byte	0
 3919 0312 0B       		.uleb128 0xb
 3920 0313 A8000000 		.4byte	.LASF55
 3921 0317 08       		.byte	0x8
 3922 0318 4B       		.byte	0x4b
 3923 0319 F5000000 		.4byte	0xf5
 3924 031d 04       		.byte	0x4
 3925 031e 0B       		.uleb128 0xb
 3926 031f 9C020000 		.4byte	.LASF56
 3927 0323 08       		.byte	0x8
 3928 0324 4C       		.byte	0x4c
 3929 0325 F5000000 		.4byte	0xf5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 95


 3930 0329 08       		.byte	0x8
 3931 032a 0B       		.uleb128 0xb
 3932 032b 31040000 		.4byte	.LASF57
 3933 032f 08       		.byte	0x8
 3934 0330 4D       		.byte	0x4d
 3935 0331 B9000000 		.4byte	0xb9
 3936 0335 0C       		.byte	0xc
 3937 0336 0B       		.uleb128 0xb
 3938 0337 19090000 		.4byte	.LASF58
 3939 033b 08       		.byte	0x8
 3940 033c 4E       		.byte	0x4e
 3941 033d AD000000 		.4byte	0xad
 3942 0341 0E       		.byte	0xe
 3943 0342 00       		.byte	0
 3944 0343 03       		.uleb128 0x3
 3945 0344 67080000 		.4byte	.LASF59
 3946 0348 08       		.byte	0x8
 3947 0349 50       		.byte	0x50
 3948 034a FE020000 		.4byte	0x2fe
 3949 034e 0D       		.uleb128 0xd
 3950 034f 0A       		.byte	0xa
 3951 0350 08       		.byte	0x8
 3952 0351 53       		.byte	0x53
 3953 0352 CF030000 		.4byte	0x3cf
 3954 0356 0B       		.uleb128 0xb
 3955 0357 D0020000 		.4byte	.LASF60
 3956 035b 08       		.byte	0x8
 3957 035c 55       		.byte	0x55
 3958 035d AD000000 		.4byte	0xad
 3959 0361 00       		.byte	0
 3960 0362 0B       		.uleb128 0xb
 3961 0363 D6060000 		.4byte	.LASF61
 3962 0367 08       		.byte	0x8
 3963 0368 57       		.byte	0x57
 3964 0369 CF030000 		.4byte	0x3cf
 3965 036d 01       		.byte	0x1
 3966 036e 0B       		.uleb128 0xb
 3967 036f 8A080000 		.4byte	.LASF62
 3968 0373 08       		.byte	0x8
 3969 0374 59       		.byte	0x59
 3970 0375 AD000000 		.4byte	0xad
 3971 0379 02       		.byte	0x2
 3972 037a 0B       		.uleb128 0xb
 3973 037b 34070000 		.4byte	.LASF63
 3974 037f 08       		.byte	0x8
 3975 0380 5B       		.byte	0x5b
 3976 0381 AD000000 		.4byte	0xad
 3977 0385 03       		.byte	0x3
 3978 0386 0B       		.uleb128 0xb
 3979 0387 6A030000 		.4byte	.LASF64
 3980 038b 08       		.byte	0x8
 3981 038c 5E       		.byte	0x5e
 3982 038d AD000000 		.4byte	0xad
 3983 0391 04       		.byte	0x4
 3984 0392 0B       		.uleb128 0xb
 3985 0393 EF090000 		.4byte	.LASF65
 3986 0397 08       		.byte	0x8
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 96


 3987 0398 63       		.byte	0x63
 3988 0399 AD000000 		.4byte	0xad
 3989 039d 05       		.byte	0x5
 3990 039e 0B       		.uleb128 0xb
 3991 039f DF070000 		.4byte	.LASF66
 3992 03a3 08       		.byte	0x8
 3993 03a4 65       		.byte	0x65
 3994 03a5 AD000000 		.4byte	0xad
 3995 03a9 06       		.byte	0x6
 3996 03aa 0B       		.uleb128 0xb
 3997 03ab D2090000 		.4byte	.LASF67
 3998 03af 08       		.byte	0x8
 3999 03b0 66       		.byte	0x66
 4000 03b1 AD000000 		.4byte	0xad
 4001 03b5 07       		.byte	0x7
 4002 03b6 0B       		.uleb128 0xb
 4003 03b7 DF060000 		.4byte	.LASF68
 4004 03bb 08       		.byte	0x8
 4005 03bc 67       		.byte	0x67
 4006 03bd AD000000 		.4byte	0xad
 4007 03c1 08       		.byte	0x8
 4008 03c2 0B       		.uleb128 0xb
 4009 03c3 550A0000 		.4byte	.LASF69
 4010 03c7 08       		.byte	0x8
 4011 03c8 68       		.byte	0x68
 4012 03c9 AD000000 		.4byte	0xad
 4013 03cd 09       		.byte	0x9
 4014 03ce 00       		.byte	0
 4015 03cf 02       		.uleb128 0x2
 4016 03d0 01       		.byte	0x1
 4017 03d1 02       		.byte	0x2
 4018 03d2 FD060000 		.4byte	.LASF70
 4019 03d6 03       		.uleb128 0x3
 4020 03d7 4B050000 		.4byte	.LASF71
 4021 03db 08       		.byte	0x8
 4022 03dc 6E       		.byte	0x6e
 4023 03dd 4E030000 		.4byte	0x34e
 4024 03e1 0D       		.uleb128 0xd
 4025 03e2 06       		.byte	0x6
 4026 03e3 09       		.byte	0x9
 4027 03e4 35       		.byte	0x35
 4028 03e5 1A040000 		.4byte	0x41a
 4029 03e9 0B       		.uleb128 0xb
 4030 03ea 2E030000 		.4byte	.LASF72
 4031 03ee 09       		.byte	0x9
 4032 03ef 37       		.byte	0x37
 4033 03f0 B9000000 		.4byte	0xb9
 4034 03f4 00       		.byte	0
 4035 03f5 0B       		.uleb128 0xb
 4036 03f6 76020000 		.4byte	.LASF73
 4037 03fa 09       		.byte	0x9
 4038 03fb 38       		.byte	0x38
 4039 03fc D1000000 		.4byte	0xd1
 4040 0400 02       		.byte	0x2
 4041 0401 0B       		.uleb128 0xb
 4042 0402 6F0A0000 		.4byte	.LASF74
 4043 0406 09       		.byte	0x9
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 97


 4044 0407 39       		.byte	0x39
 4045 0408 AD000000 		.4byte	0xad
 4046 040c 04       		.byte	0x4
 4047 040d 0B       		.uleb128 0xb
 4048 040e 73000000 		.4byte	.LASF75
 4049 0412 09       		.byte	0x9
 4050 0413 3A       		.byte	0x3a
 4051 0414 AD000000 		.4byte	0xad
 4052 0418 05       		.byte	0x5
 4053 0419 00       		.byte	0
 4054 041a 03       		.uleb128 0x3
 4055 041b F7060000 		.4byte	.LASF76
 4056 041f 09       		.byte	0x9
 4057 0420 3D       		.byte	0x3d
 4058 0421 25040000 		.4byte	0x425
 4059 0425 0F       		.uleb128 0xf
 4060 0426 E1030000 		.4byte	0x3e1
 4061 042a 0D       		.uleb128 0xd
 4062 042b 1C       		.byte	0x1c
 4063 042c 09       		.byte	0x9
 4064 042d 40       		.byte	0x40
 4065 042e 4B040000 		.4byte	0x44b
 4066 0432 0B       		.uleb128 0xb
 4067 0433 54040000 		.4byte	.LASF77
 4068 0437 09       		.byte	0x9
 4069 0438 42       		.byte	0x42
 4070 0439 4B040000 		.4byte	0x44b
 4071 043d 00       		.byte	0
 4072 043e 0B       		.uleb128 0xb
 4073 043f 67040000 		.4byte	.LASF78
 4074 0443 09       		.byte	0x9
 4075 0444 43       		.byte	0x43
 4076 0445 29010000 		.4byte	0x129
 4077 0449 04       		.byte	0x4
 4078 044a 00       		.byte	0
 4079 044b 06       		.uleb128 0x6
 4080 044c 04       		.byte	0x4
 4081 044d 7F020000 		.4byte	0x27f
 4082 0451 03       		.uleb128 0x3
 4083 0452 40050000 		.4byte	.LASF79
 4084 0456 09       		.byte	0x9
 4085 0457 45       		.byte	0x45
 4086 0458 2A040000 		.4byte	0x42a
 4087 045c 0D       		.uleb128 0xd
 4088 045d 68       		.byte	0x68
 4089 045e 09       		.byte	0x9
 4090 045f 4B       		.byte	0x4b
 4091 0460 7D040000 		.4byte	0x47d
 4092 0464 0B       		.uleb128 0xb
 4093 0465 5F040000 		.4byte	.LASF80
 4094 0469 09       		.byte	0x9
 4095 046a 50       		.byte	0x50
 4096 046b 7D040000 		.4byte	0x47d
 4097 046f 00       		.byte	0
 4098 0470 0B       		.uleb128 0xb
 4099 0471 43040000 		.4byte	.LASF81
 4100 0475 09       		.byte	0x9
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 98


 4101 0476 51       		.byte	0x51
 4102 0477 7E000000 		.4byte	0x7e
 4103 047b 64       		.byte	0x64
 4104 047c 00       		.byte	0
 4105 047d 08       		.uleb128 0x8
 4106 047e 03010000 		.4byte	0x103
 4107 0482 8D040000 		.4byte	0x48d
 4108 0486 09       		.uleb128 0x9
 4109 0487 11010000 		.4byte	0x111
 4110 048b 63       		.byte	0x63
 4111 048c 00       		.byte	0
 4112 048d 03       		.uleb128 0x3
 4113 048e FC090000 		.4byte	.LASF82
 4114 0492 09       		.byte	0x9
 4115 0493 57       		.byte	0x57
 4116 0494 5C040000 		.4byte	0x45c
 4117 0498 10       		.uleb128 0x10
 4118 0499 EA060000 		.4byte	.LASF114
 4119 049d 01       		.byte	0x1
 4120 049e 12       		.byte	0x12
 4121 049f 00000000 		.4byte	.LFB64
 4122 04a3 44000000 		.4byte	.LFE64-.LFB64
 4123 04a7 01       		.uleb128 0x1
 4124 04a8 9C       		.byte	0x9c
 4125 04a9 11       		.uleb128 0x11
 4126 04aa A8060000 		.4byte	.LASF83
 4127 04ae 01       		.byte	0x1
 4128 04af 1C       		.byte	0x1c
 4129 04b0 00000000 		.4byte	.LFB65
 4130 04b4 6C000000 		.4byte	.LFE65-.LFB65
 4131 04b8 01       		.uleb128 0x1
 4132 04b9 9C       		.byte	0x9c
 4133 04ba 11       		.uleb128 0x11
 4134 04bb DC080000 		.4byte	.LASF84
 4135 04bf 01       		.byte	0x1
 4136 04c0 36       		.byte	0x36
 4137 04c1 00000000 		.4byte	.LFB66
 4138 04c5 32000000 		.4byte	.LFE66-.LFB66
 4139 04c9 01       		.uleb128 0x1
 4140 04ca 9C       		.byte	0x9c
 4141 04cb 11       		.uleb128 0x11
 4142 04cc 1F090000 		.4byte	.LASF85
 4143 04d0 01       		.byte	0x1
 4144 04d1 46       		.byte	0x46
 4145 04d2 00000000 		.4byte	.LFB67
 4146 04d6 20000000 		.4byte	.LFE67-.LFB67
 4147 04da 01       		.uleb128 0x1
 4148 04db 9C       		.byte	0x9c
 4149 04dc 11       		.uleb128 0x11
 4150 04dd BB0A0000 		.4byte	.LASF86
 4151 04e1 01       		.byte	0x1
 4152 04e2 4F       		.byte	0x4f
 4153 04e3 00000000 		.4byte	.LFB68
 4154 04e7 40000000 		.4byte	.LFE68-.LFB68
 4155 04eb 01       		.uleb128 0x1
 4156 04ec 9C       		.byte	0x9c
 4157 04ed 12       		.uleb128 0x12
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 99


 4158 04ee 75040000 		.4byte	.LASF100
 4159 04f2 01       		.byte	0x1
 4160 04f3 61       		.byte	0x61
 4161 04f4 AD000000 		.4byte	0xad
 4162 04f8 00000000 		.4byte	.LFB69
 4163 04fc DC000000 		.4byte	.LFE69-.LFB69
 4164 0500 01       		.uleb128 0x1
 4165 0501 9C       		.byte	0x9c
 4166 0502 61050000 		.4byte	0x561
 4167 0506 13       		.uleb128 0x13
 4168 0507 4C0A0000 		.4byte	.LASF87
 4169 050b 01       		.byte	0x1
 4170 050c 6A       		.byte	0x6a
 4171 050d AD000000 		.4byte	0xad
 4172 0511 02       		.uleb128 0x2
 4173 0512 91       		.byte	0x91
 4174 0513 77       		.sleb128 -9
 4175 0514 13       		.uleb128 0x13
 4176 0515 660A0000 		.4byte	.LASF88
 4177 0519 01       		.byte	0x1
 4178 051a 6B       		.byte	0x6b
 4179 051b AD000000 		.4byte	0xad
 4180 051f 02       		.uleb128 0x2
 4181 0520 91       		.byte	0x91
 4182 0521 74       		.sleb128 -12
 4183 0522 13       		.uleb128 0x13
 4184 0523 880A0000 		.4byte	.LASF89
 4185 0527 01       		.byte	0x1
 4186 0528 6D       		.byte	0x6d
 4187 0529 57000000 		.4byte	0x57
 4188 052d 02       		.uleb128 0x2
 4189 052e 91       		.byte	0x91
 4190 052f 70       		.sleb128 -16
 4191 0530 14       		.uleb128 0x14
 4192 0531 26000000 		.4byte	.LBB2
 4193 0535 4A000000 		.4byte	.LBE2-.LBB2
 4194 0539 13       		.uleb128 0x13
 4195 053a 660A0000 		.4byte	.LASF88
 4196 053e 01       		.byte	0x1
 4197 053f 70       		.byte	0x70
 4198 0540 AD000000 		.4byte	0xad
 4199 0544 02       		.uleb128 0x2
 4200 0545 91       		.byte	0x91
 4201 0546 76       		.sleb128 -10
 4202 0547 14       		.uleb128 0x14
 4203 0548 2C000000 		.4byte	.LBB3
 4204 054c 2A000000 		.4byte	.LBE3-.LBB3
 4205 0550 13       		.uleb128 0x13
 4206 0551 DD030000 		.4byte	.LASF90
 4207 0555 01       		.byte	0x1
 4208 0556 72       		.byte	0x72
 4209 0557 AD000000 		.4byte	0xad
 4210 055b 02       		.uleb128 0x2
 4211 055c 91       		.byte	0x91
 4212 055d 75       		.sleb128 -11
 4213 055e 00       		.byte	0
 4214 055f 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 100


 4215 0560 00       		.byte	0
 4216 0561 11       		.uleb128 0x11
 4217 0562 C8070000 		.4byte	.LASF91
 4218 0566 01       		.byte	0x1
 4219 0567 93       		.byte	0x93
 4220 0568 00000000 		.4byte	.LFB70
 4221 056c 1C000000 		.4byte	.LFE70-.LFB70
 4222 0570 01       		.uleb128 0x1
 4223 0571 9C       		.byte	0x9c
 4224 0572 11       		.uleb128 0x11
 4225 0573 9D070000 		.4byte	.LASF92
 4226 0577 01       		.byte	0x1
 4227 0578 9B       		.byte	0x9b
 4228 0579 00000000 		.4byte	.LFB71
 4229 057d 28000000 		.4byte	.LFE71-.LFB71
 4230 0581 01       		.uleb128 0x1
 4231 0582 9C       		.byte	0x9c
 4232 0583 15       		.uleb128 0x15
 4233 0584 2F050000 		.4byte	.LASF104
 4234 0588 01       		.byte	0x1
 4235 0589 A6       		.byte	0xa6
 4236 058a 8C000000 		.4byte	0x8c
 4237 058e 00000000 		.4byte	.LFB72
 4238 0592 C8000000 		.4byte	.LFE72-.LFB72
 4239 0596 01       		.uleb128 0x1
 4240 0597 9C       		.byte	0x9c
 4241 0598 15060000 		.4byte	0x615
 4242 059c 16       		.uleb128 0x16
 4243 059d 88060000 		.4byte	.LASF93
 4244 05a1 01       		.byte	0x1
 4245 05a2 A6       		.byte	0xa6
 4246 05a3 18010000 		.4byte	0x118
 4247 05a7 02       		.uleb128 0x2
 4248 05a8 91       		.byte	0x91
 4249 05a9 5C       		.sleb128 -36
 4250 05aa 16       		.uleb128 0x16
 4251 05ab 920A0000 		.4byte	.LASF94
 4252 05af 01       		.byte	0x1
 4253 05b0 A6       		.byte	0xa6
 4254 05b1 18010000 		.4byte	0x118
 4255 05b5 02       		.uleb128 0x2
 4256 05b6 91       		.byte	0x91
 4257 05b7 58       		.sleb128 -40
 4258 05b8 16       		.uleb128 0x16
 4259 05b9 08040000 		.4byte	.LASF95
 4260 05bd 01       		.byte	0x1
 4261 05be A6       		.byte	0xa6
 4262 05bf A2000000 		.4byte	0xa2
 4263 05c3 02       		.uleb128 0x2
 4264 05c4 91       		.byte	0x91
 4265 05c5 54       		.sleb128 -44
 4266 05c6 13       		.uleb128 0x13
 4267 05c7 FC040000 		.4byte	.LASF96
 4268 05cb 01       		.byte	0x1
 4269 05cc A8       		.byte	0xa8
 4270 05cd C5000000 		.4byte	0xc5
 4271 05d1 02       		.uleb128 0x2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 101


 4272 05d2 91       		.byte	0x91
 4273 05d3 74       		.sleb128 -12
 4274 05d4 14       		.uleb128 0x14
 4275 05d5 16000000 		.4byte	.LBB4
 4276 05d9 88000000 		.4byte	.LBE4-.LBB4
 4277 05dd 13       		.uleb128 0x13
 4278 05de 91060000 		.4byte	.LASF97
 4279 05e2 01       		.byte	0x1
 4280 05e3 AC       		.byte	0xac
 4281 05e4 18010000 		.4byte	0x118
 4282 05e8 02       		.uleb128 0x2
 4283 05e9 91       		.byte	0x91
 4284 05ea 64       		.sleb128 -28
 4285 05eb 13       		.uleb128 0x13
 4286 05ec 29070000 		.4byte	.LASF98
 4287 05f0 01       		.byte	0x1
 4288 05f1 AD       		.byte	0xad
 4289 05f2 A2000000 		.4byte	0xa2
 4290 05f6 02       		.uleb128 0x2
 4291 05f7 91       		.byte	0x91
 4292 05f8 6C       		.sleb128 -20
 4293 05f9 17       		.uleb128 0x17
 4294 05fa 6900     		.ascii	"i\000"
 4295 05fc 01       		.byte	0x1
 4296 05fd AE       		.byte	0xae
 4297 05fe A2000000 		.4byte	0xa2
 4298 0602 02       		.uleb128 0x2
 4299 0603 91       		.byte	0x91
 4300 0604 70       		.sleb128 -16
 4301 0605 13       		.uleb128 0x13
 4302 0606 25030000 		.4byte	.LASF99
 4303 060a 01       		.byte	0x1
 4304 060b AE       		.byte	0xae
 4305 060c A2000000 		.4byte	0xa2
 4306 0610 02       		.uleb128 0x2
 4307 0611 91       		.byte	0x91
 4308 0612 68       		.sleb128 -24
 4309 0613 00       		.byte	0
 4310 0614 00       		.byte	0
 4311 0615 12       		.uleb128 0x12
 4312 0616 1C060000 		.4byte	.LASF101
 4313 061a 01       		.byte	0x1
 4314 061b DA       		.byte	0xda
 4315 061c FF010000 		.4byte	0x1ff
 4316 0620 00000000 		.4byte	.LFB73
 4317 0624 00010000 		.4byte	.LFE73-.LFB73
 4318 0628 01       		.uleb128 0x1
 4319 0629 9C       		.byte	0x9c
 4320 062a 6C060000 		.4byte	0x66c
 4321 062e 13       		.uleb128 0x13
 4322 062f 7C010000 		.4byte	.LASF102
 4323 0633 01       		.byte	0x1
 4324 0634 DC       		.byte	0xdc
 4325 0635 FF010000 		.4byte	0x1ff
 4326 0639 03       		.uleb128 0x3
 4327 063a 91       		.byte	0x91
 4328 063b E47C     		.sleb128 -412
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 102


 4329 063d 14       		.uleb128 0x14
 4330 063e 4A000000 		.4byte	.LBB5
 4331 0642 86000000 		.4byte	.LBE5-.LBB5
 4332 0646 17       		.uleb128 0x17
 4333 0647 6900     		.ascii	"i\000"
 4334 0649 01       		.byte	0x1
 4335 064a E3       		.byte	0xe3
 4336 064b 7E000000 		.4byte	0x7e
 4337 064f 02       		.uleb128 0x2
 4338 0650 91       		.byte	0x91
 4339 0651 6C       		.sleb128 -20
 4340 0652 14       		.uleb128 0x14
 4341 0653 70000000 		.4byte	.LBB6
 4342 0657 46000000 		.4byte	.LBE6-.LBB6
 4343 065b 13       		.uleb128 0x13
 4344 065c FE020000 		.4byte	.LASF103
 4345 0660 01       		.byte	0x1
 4346 0661 F0       		.byte	0xf0
 4347 0662 57000000 		.4byte	0x57
 4348 0666 02       		.uleb128 0x2
 4349 0667 91       		.byte	0x91
 4350 0668 68       		.sleb128 -24
 4351 0669 00       		.byte	0
 4352 066a 00       		.byte	0
 4353 066b 00       		.byte	0
 4354 066c 18       		.uleb128 0x18
 4355 066d F9030000 		.4byte	.LASF105
 4356 0671 01       		.byte	0x1
 4357 0672 0401     		.2byte	0x104
 4358 0674 AD000000 		.4byte	0xad
 4359 0678 00000000 		.4byte	.LFB74
 4360 067c 78000000 		.4byte	.LFE74-.LFB74
 4361 0680 01       		.uleb128 0x1
 4362 0681 9C       		.byte	0x9c
 4363 0682 DD060000 		.4byte	0x6dd
 4364 0686 19       		.uleb128 0x19
 4365 0687 E7040000 		.4byte	.LASF106
 4366 068b 01       		.byte	0x1
 4367 068c 0401     		.2byte	0x104
 4368 068e 18010000 		.4byte	0x118
 4369 0692 02       		.uleb128 0x2
 4370 0693 91       		.byte	0x91
 4371 0694 6C       		.sleb128 -20
 4372 0695 19       		.uleb128 0x19
 4373 0696 8C040000 		.4byte	.LASF107
 4374 069a 01       		.byte	0x1
 4375 069b 0401     		.2byte	0x104
 4376 069d 1E010000 		.4byte	0x11e
 4377 06a1 02       		.uleb128 0x2
 4378 06a2 91       		.byte	0x91
 4379 06a3 68       		.sleb128 -24
 4380 06a4 19       		.uleb128 0x19
 4381 06a5 B2040000 		.4byte	.LASF108
 4382 06a9 01       		.byte	0x1
 4383 06aa 0401     		.2byte	0x104
 4384 06ac 1E010000 		.4byte	0x11e
 4385 06b0 02       		.uleb128 0x2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 103


 4386 06b1 91       		.byte	0x91
 4387 06b2 64       		.sleb128 -28
 4388 06b3 19       		.uleb128 0x19
 4389 06b4 98040000 		.4byte	.LASF109
 4390 06b8 01       		.byte	0x1
 4391 06b9 0401     		.2byte	0x104
 4392 06bb 18010000 		.4byte	0x118
 4393 06bf 02       		.uleb128 0x2
 4394 06c0 91       		.byte	0x91
 4395 06c1 60       		.sleb128 -32
 4396 06c2 1A       		.uleb128 0x1a
 4397 06c3 6100     		.ascii	"a\000"
 4398 06c5 01       		.byte	0x1
 4399 06c6 0601     		.2byte	0x106
 4400 06c8 18010000 		.4byte	0x118
 4401 06cc 02       		.uleb128 0x2
 4402 06cd 91       		.byte	0x91
 4403 06ce 74       		.sleb128 -12
 4404 06cf 1A       		.uleb128 0x1a
 4405 06d0 6200     		.ascii	"b\000"
 4406 06d2 01       		.byte	0x1
 4407 06d3 0601     		.2byte	0x106
 4408 06d5 18010000 		.4byte	0x118
 4409 06d9 02       		.uleb128 0x2
 4410 06da 91       		.byte	0x91
 4411 06db 70       		.sleb128 -16
 4412 06dc 00       		.byte	0
 4413 06dd 1B       		.uleb128 0x1b
 4414 06de 15080000 		.4byte	.LASF110
 4415 06e2 01       		.byte	0x1
 4416 06e3 2301     		.2byte	0x123
 4417 06e5 AD000000 		.4byte	0xad
 4418 06e9 00000000 		.4byte	.LFB75
 4419 06ed 74010000 		.4byte	.LFE75-.LFB75
 4420 06f1 01       		.uleb128 0x1
 4421 06f2 9C       		.byte	0x9c
 4422 06f3 0F070000 		.4byte	0x70f
 4423 06f7 14       		.uleb128 0x14
 4424 06f8 2E000000 		.4byte	.LBB7
 4425 06fc 68000000 		.4byte	.LBE7-.LBB7
 4426 0700 1A       		.uleb128 0x1a
 4427 0701 6900     		.ascii	"i\000"
 4428 0703 01       		.byte	0x1
 4429 0704 3101     		.2byte	0x131
 4430 0706 AD000000 		.4byte	0xad
 4431 070a 02       		.uleb128 0x2
 4432 070b 91       		.byte	0x91
 4433 070c 77       		.sleb128 -9
 4434 070d 00       		.byte	0
 4435 070e 00       		.byte	0
 4436 070f 1B       		.uleb128 0x1b
 4437 0710 C4050000 		.4byte	.LASF111
 4438 0714 01       		.byte	0x1
 4439 0715 7501     		.2byte	0x175
 4440 0717 AD000000 		.4byte	0xad
 4441 071b 00000000 		.4byte	.LFB76
 4442 071f B8000000 		.4byte	.LFE76-.LFB76
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 104


 4443 0723 01       		.uleb128 0x1
 4444 0724 9C       		.byte	0x9c
 4445 0725 52070000 		.4byte	0x752
 4446 0729 1C       		.uleb128 0x1c
 4447 072a 8B090000 		.4byte	.LASF36
 4448 072e 01       		.byte	0x1
 4449 072f 7901     		.2byte	0x179
 4450 0731 AD000000 		.4byte	0xad
 4451 0735 02       		.uleb128 0x2
 4452 0736 91       		.byte	0x91
 4453 0737 77       		.sleb128 -9
 4454 0738 14       		.uleb128 0x14
 4455 0739 36000000 		.4byte	.LBB8
 4456 073d 48000000 		.4byte	.LBE8-.LBB8
 4457 0741 1C       		.uleb128 0x1c
 4458 0742 EC040000 		.4byte	.LASF112
 4459 0746 01       		.byte	0x1
 4460 0747 8101     		.2byte	0x181
 4461 0749 52070000 		.4byte	0x752
 4462 074d 02       		.uleb128 0x2
 4463 074e 91       		.byte	0x91
 4464 074f 6C       		.sleb128 -20
 4465 0750 00       		.byte	0
 4466 0751 00       		.byte	0
 4467 0752 08       		.uleb128 0x8
 4468 0753 03010000 		.4byte	0x103
 4469 0757 62070000 		.4byte	0x762
 4470 075b 09       		.uleb128 0x9
 4471 075c 11010000 		.4byte	0x111
 4472 0760 09       		.byte	0x9
 4473 0761 00       		.byte	0
 4474 0762 1D       		.uleb128 0x1d
 4475 0763 11020000 		.4byte	.LASF113
 4476 0767 01       		.byte	0x1
 4477 0768 9301     		.2byte	0x193
 4478 076a 00000000 		.4byte	.LFB77
 4479 076e 1C000000 		.4byte	.LFE77-.LFB77
 4480 0772 01       		.uleb128 0x1
 4481 0773 9C       		.byte	0x9c
 4482 0774 1E       		.uleb128 0x1e
 4483 0775 97080000 		.4byte	.LASF115
 4484 0779 01       		.byte	0x1
 4485 077a A301     		.2byte	0x1a3
 4486 077c AD000000 		.4byte	0xad
 4487 0780 00000000 		.4byte	.LFB78
 4488 0784 28000000 		.4byte	.LFE78-.LFB78
 4489 0788 01       		.uleb128 0x1
 4490 0789 9C       		.byte	0x9c
 4491 078a 1F       		.uleb128 0x1f
 4492 078b 10040000 		.4byte	.LASF118
 4493 078f 01       		.byte	0x1
 4494 0790 AE01     		.2byte	0x1ae
 4495 0792 00000000 		.4byte	.LFB79
 4496 0796 84000000 		.4byte	.LFE79-.LFB79
 4497 079a 01       		.uleb128 0x1
 4498 079b 9C       		.byte	0x9c
 4499 079c B0070000 		.4byte	0x7b0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 105


 4500 07a0 1C       		.uleb128 0x1c
 4501 07a1 27060000 		.4byte	.LASF116
 4502 07a5 01       		.byte	0x1
 4503 07a6 BB01     		.2byte	0x1bb
 4504 07a8 7E000000 		.4byte	0x7e
 4505 07ac 02       		.uleb128 0x2
 4506 07ad 91       		.byte	0x91
 4507 07ae 74       		.sleb128 -12
 4508 07af 00       		.byte	0
 4509 07b0 20       		.uleb128 0x20
 4510 07b1 8F030000 		.4byte	.LASF117
 4511 07b5 01       		.byte	0x1
 4512 07b6 CD01     		.2byte	0x1cd
 4513 07b8 00000000 		.4byte	.LFB80
 4514 07bc 4C000000 		.4byte	.LFE80-.LFB80
 4515 07c0 01       		.uleb128 0x1
 4516 07c1 9C       		.byte	0x9c
 4517 07c2 1F       		.uleb128 0x1f
 4518 07c3 5A090000 		.4byte	.LASF119
 4519 07c7 01       		.byte	0x1
 4520 07c8 E201     		.2byte	0x1e2
 4521 07ca 00000000 		.4byte	.LFB81
 4522 07ce D8060000 		.4byte	.LFE81-.LFB81
 4523 07d2 01       		.uleb128 0x1
 4524 07d3 9C       		.byte	0x9c
 4525 07d4 37090000 		.4byte	0x937
 4526 07d8 1C       		.uleb128 0x1c
 4527 07d9 3E070000 		.4byte	.LASF120
 4528 07dd 01       		.byte	0x1
 4529 07de E501     		.2byte	0x1e5
 4530 07e0 52070000 		.4byte	0x752
 4531 07e4 02       		.uleb128 0x2
 4532 07e5 91       		.byte	0x91
 4533 07e6 64       		.sleb128 -28
 4534 07e7 1C       		.uleb128 0x1c
 4535 07e8 F3020000 		.4byte	.LASF121
 4536 07ec 01       		.byte	0x1
 4537 07ed E601     		.2byte	0x1e6
 4538 07ef 52070000 		.4byte	0x752
 4539 07f3 02       		.uleb128 0x2
 4540 07f4 91       		.byte	0x91
 4541 07f5 58       		.sleb128 -40
 4542 07f6 1C       		.uleb128 0x1c
 4543 07f7 7D090000 		.4byte	.LASF122
 4544 07fb 01       		.byte	0x1
 4545 07fc E701     		.2byte	0x1e7
 4546 07fe 52070000 		.4byte	0x752
 4547 0802 02       		.uleb128 0x2
 4548 0803 91       		.byte	0x91
 4549 0804 4C       		.sleb128 -52
 4550 0805 1C       		.uleb128 0x1c
 4551 0806 B9060000 		.4byte	.LASF123
 4552 080a 01       		.byte	0x1
 4553 080b E801     		.2byte	0x1e8
 4554 080d 52070000 		.4byte	0x752
 4555 0811 02       		.uleb128 0x2
 4556 0812 91       		.byte	0x91
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 106


 4557 0813 40       		.sleb128 -64
 4558 0814 1C       		.uleb128 0x1c
 4559 0815 82030000 		.4byte	.LASF124
 4560 0819 01       		.byte	0x1
 4561 081a E901     		.2byte	0x1e9
 4562 081c 52070000 		.4byte	0x752
 4563 0820 03       		.uleb128 0x3
 4564 0821 91       		.byte	0x91
 4565 0822 B47F     		.sleb128 -76
 4566 0824 1C       		.uleb128 0x1c
 4567 0825 F4080000 		.4byte	.LASF125
 4568 0829 01       		.byte	0x1
 4569 082a ED01     		.2byte	0x1ed
 4570 082c 7D040000 		.4byte	0x47d
 4571 0830 03       		.uleb128 0x3
 4572 0831 91       		.byte	0x91
 4573 0832 D07E     		.sleb128 -176
 4574 0834 1C       		.uleb128 0x1c
 4575 0835 5B030000 		.4byte	.LASF126
 4576 0839 01       		.byte	0x1
 4577 083a F001     		.2byte	0x1f0
 4578 083c 7D040000 		.4byte	0x47d
 4579 0840 03       		.uleb128 0x3
 4580 0841 91       		.byte	0x91
 4581 0842 EC7D     		.sleb128 -276
 4582 0844 1C       		.uleb128 0x1c
 4583 0845 AA050000 		.4byte	.LASF127
 4584 0849 01       		.byte	0x1
 4585 084a F301     		.2byte	0x1f3
 4586 084c 7D040000 		.4byte	0x47d
 4587 0850 03       		.uleb128 0x3
 4588 0851 91       		.byte	0x91
 4589 0852 887D     		.sleb128 -376
 4590 0854 1C       		.uleb128 0x1c
 4591 0855 07050000 		.4byte	.LASF128
 4592 0859 01       		.byte	0x1
 4593 085a F601     		.2byte	0x1f6
 4594 085c 7D040000 		.4byte	0x47d
 4595 0860 03       		.uleb128 0x3
 4596 0861 91       		.byte	0x91
 4597 0862 A47C     		.sleb128 -476
 4598 0864 1C       		.uleb128 0x1c
 4599 0865 70070000 		.4byte	.LASF129
 4600 0869 01       		.byte	0x1
 4601 086a F901     		.2byte	0x1f9
 4602 086c 7D040000 		.4byte	0x47d
 4603 0870 03       		.uleb128 0x3
 4604 0871 91       		.byte	0x91
 4605 0872 C07B     		.sleb128 -576
 4606 0874 1C       		.uleb128 0x1c
 4607 0875 C7060000 		.4byte	.LASF130
 4608 0879 01       		.byte	0x1
 4609 087a 0102     		.2byte	0x201
 4610 087c 37090000 		.4byte	0x937
 4611 0880 03       		.uleb128 0x3
 4612 0881 91       		.byte	0x91
 4613 0882 F879     		.sleb128 -776
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 107


 4614 0884 1C       		.uleb128 0x1c
 4615 0885 D0020000 		.4byte	.LASF60
 4616 0889 01       		.byte	0x1
 4617 088a 6602     		.2byte	0x266
 4618 088c 7E000000 		.4byte	0x7e
 4619 0890 03       		.uleb128 0x3
 4620 0891 91       		.byte	0x91
 4621 0892 F479     		.sleb128 -780
 4622 0894 1C       		.uleb128 0x1c
 4623 0895 D6060000 		.4byte	.LASF61
 4624 0899 01       		.byte	0x1
 4625 089a 6602     		.2byte	0x266
 4626 089c 7E000000 		.4byte	0x7e
 4627 08a0 03       		.uleb128 0x3
 4628 08a1 91       		.byte	0x91
 4629 08a2 F079     		.sleb128 -784
 4630 08a4 1C       		.uleb128 0x1c
 4631 08a5 64010000 		.4byte	.LASF131
 4632 08a9 01       		.byte	0x1
 4633 08aa 6602     		.2byte	0x266
 4634 08ac 7E000000 		.4byte	0x7e
 4635 08b0 03       		.uleb128 0x3
 4636 08b1 91       		.byte	0x91
 4637 08b2 EC79     		.sleb128 -788
 4638 08b4 1C       		.uleb128 0x1c
 4639 08b5 62050000 		.4byte	.LASF132
 4640 08b9 01       		.byte	0x1
 4641 08ba 6602     		.2byte	0x266
 4642 08bc 7E000000 		.4byte	0x7e
 4643 08c0 03       		.uleb128 0x3
 4644 08c1 91       		.byte	0x91
 4645 08c2 E879     		.sleb128 -792
 4646 08c4 1C       		.uleb128 0x1c
 4647 08c5 F1040000 		.4byte	.LASF133
 4648 08c9 01       		.byte	0x1
 4649 08ca 6602     		.2byte	0x266
 4650 08cc 7E000000 		.4byte	0x7e
 4651 08d0 03       		.uleb128 0x3
 4652 08d1 91       		.byte	0x91
 4653 08d2 E479     		.sleb128 -796
 4654 08d4 1C       		.uleb128 0x1c
 4655 08d5 FF0A0000 		.4byte	.LASF134
 4656 08d9 01       		.byte	0x1
 4657 08da 6702     		.2byte	0x267
 4658 08dc 7E000000 		.4byte	0x7e
 4659 08e0 03       		.uleb128 0x3
 4660 08e1 91       		.byte	0x91
 4661 08e2 E079     		.sleb128 -800
 4662 08e4 1C       		.uleb128 0x1c
 4663 08e5 AB020000 		.4byte	.LASF135
 4664 08e9 01       		.byte	0x1
 4665 08ea 6702     		.2byte	0x267
 4666 08ec 7E000000 		.4byte	0x7e
 4667 08f0 03       		.uleb128 0x3
 4668 08f1 91       		.byte	0x91
 4669 08f2 DC79     		.sleb128 -804
 4670 08f4 1C       		.uleb128 0x1c
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 108


 4671 08f5 F7010000 		.4byte	.LASF136
 4672 08f9 01       		.byte	0x1
 4673 08fa 6702     		.2byte	0x267
 4674 08fc 7E000000 		.4byte	0x7e
 4675 0900 03       		.uleb128 0x3
 4676 0901 91       		.byte	0x91
 4677 0902 D879     		.sleb128 -808
 4678 0904 21       		.uleb128 0x21
 4679 0905 7D0A0000 		.4byte	.LASF201
 4680 0909 01       		.byte	0x1
 4681 090a 6702     		.2byte	0x267
 4682 090c 7E000000 		.4byte	0x7e
 4683 0910 1C       		.uleb128 0x1c
 4684 0911 62000000 		.4byte	.LASF137
 4685 0915 01       		.byte	0x1
 4686 0916 6702     		.2byte	0x267
 4687 0918 7E000000 		.4byte	0x7e
 4688 091c 03       		.uleb128 0x3
 4689 091d 91       		.byte	0x91
 4690 091e D479     		.sleb128 -812
 4691 0920 22       		.uleb128 0x22
 4692 0921 00000000 		.4byte	.Ldebug_ranges0+0
 4693 0925 1C       		.uleb128 0x1c
 4694 0926 62020000 		.4byte	.LASF138
 4695 092a 01       		.byte	0x1
 4696 092b 9202     		.2byte	0x292
 4697 092d 7D040000 		.4byte	0x47d
 4698 0931 03       		.uleb128 0x3
 4699 0932 91       		.byte	0x91
 4700 0933 F078     		.sleb128 -912
 4701 0935 00       		.byte	0
 4702 0936 00       		.byte	0
 4703 0937 08       		.uleb128 0x8
 4704 0938 03010000 		.4byte	0x103
 4705 093c 47090000 		.4byte	0x947
 4706 0940 09       		.uleb128 0x9
 4707 0941 11010000 		.4byte	0x111
 4708 0945 C7       		.byte	0xc7
 4709 0946 00       		.byte	0
 4710 0947 1F       		.uleb128 0x1f
 4711 0948 DA020000 		.4byte	.LASF139
 4712 094c 01       		.byte	0x1
 4713 094d 0D03     		.2byte	0x30d
 4714 094f 00000000 		.4byte	.LFB82
 4715 0953 68010000 		.4byte	.LFE82-.LFB82
 4716 0957 01       		.uleb128 0x1
 4717 0958 9C       		.byte	0x9c
 4718 0959 77090000 		.4byte	0x977
 4719 095d 14       		.uleb128 0x14
 4720 095e DA000000 		.4byte	.LBB12
 4721 0962 38000000 		.4byte	.LBE12-.LBB12
 4722 0966 1C       		.uleb128 0x1c
 4723 0967 36080000 		.4byte	.LASF140
 4724 096b 01       		.byte	0x1
 4725 096c 3B03     		.2byte	0x33b
 4726 096e 52070000 		.4byte	0x752
 4727 0972 02       		.uleb128 0x2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 109


 4728 0973 91       		.byte	0x91
 4729 0974 6C       		.sleb128 -20
 4730 0975 00       		.byte	0
 4731 0976 00       		.byte	0
 4732 0977 1B       		.uleb128 0x1b
 4733 0978 3D030000 		.4byte	.LASF141
 4734 097c 01       		.byte	0x1
 4735 097d 4E03     		.2byte	0x34e
 4736 097f 57000000 		.4byte	0x57
 4737 0983 00000000 		.4byte	.LFB83
 4738 0987 44010000 		.4byte	.LFE83-.LFB83
 4739 098b 01       		.uleb128 0x1
 4740 098c 9C       		.byte	0x9c
 4741 098d 330A0000 		.4byte	0xa33
 4742 0991 1C       		.uleb128 0x1c
 4743 0992 C6040000 		.4byte	.LASF142
 4744 0996 01       		.byte	0x1
 4745 0997 5903     		.2byte	0x359
 4746 0999 57000000 		.4byte	0x57
 4747 099d 02       		.uleb128 0x2
 4748 099e 91       		.byte	0x91
 4749 099f 74       		.sleb128 -12
 4750 09a0 14       		.uleb128 0x14
 4751 09a1 30000000 		.4byte	.LBB13
 4752 09a5 DE000000 		.4byte	.LBE13-.LBB13
 4753 09a9 1C       		.uleb128 0x1c
 4754 09aa FE020000 		.4byte	.LASF103
 4755 09ae 01       		.byte	0x1
 4756 09af 5E03     		.2byte	0x35e
 4757 09b1 330A0000 		.4byte	0xa33
 4758 09b5 02       		.uleb128 0x2
 4759 09b6 91       		.byte	0x91
 4760 09b7 54       		.sleb128 -44
 4761 09b8 1A       		.uleb128 0x1a
 4762 09b9 7400     		.ascii	"t\000"
 4763 09bb 01       		.byte	0x1
 4764 09bc 6403     		.2byte	0x364
 4765 09be 39010000 		.4byte	0x139
 4766 09c2 03       		.uleb128 0x3
 4767 09c3 91       		.byte	0x91
 4768 09c4 947F     		.sleb128 -108
 4769 09c6 1C       		.uleb128 0x1c
 4770 09c7 42020000 		.4byte	.LASF143
 4771 09cb 01       		.byte	0x1
 4772 09cc 6703     		.2byte	0x367
 4773 09ce 7E000000 		.4byte	0x7e
 4774 09d2 02       		.uleb128 0x2
 4775 09d3 91       		.byte	0x91
 4776 09d4 50       		.sleb128 -48
 4777 09d5 1C       		.uleb128 0x1c
 4778 09d6 BE050000 		.4byte	.LASF144
 4779 09da 01       		.byte	0x1
 4780 09db 6703     		.2byte	0x367
 4781 09dd 7E000000 		.4byte	0x7e
 4782 09e1 02       		.uleb128 0x2
 4783 09e2 91       		.byte	0x91
 4784 09e3 4C       		.sleb128 -52
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 110


 4785 09e4 1A       		.uleb128 0x1a
 4786 09e5 64617900 		.ascii	"day\000"
 4787 09e9 01       		.byte	0x1
 4788 09ea 6703     		.2byte	0x367
 4789 09ec 7E000000 		.4byte	0x7e
 4790 09f0 02       		.uleb128 0x2
 4791 09f1 91       		.byte	0x91
 4792 09f2 48       		.sleb128 -56
 4793 09f3 1C       		.uleb128 0x1c
 4794 09f4 83060000 		.4byte	.LASF145
 4795 09f8 01       		.byte	0x1
 4796 09f9 6703     		.2byte	0x367
 4797 09fb 7E000000 		.4byte	0x7e
 4798 09ff 02       		.uleb128 0x2
 4799 0a00 91       		.byte	0x91
 4800 0a01 44       		.sleb128 -60
 4801 0a02 1C       		.uleb128 0x1c
 4802 0a03 35090000 		.4byte	.LASF146
 4803 0a07 01       		.byte	0x1
 4804 0a08 6703     		.2byte	0x367
 4805 0a0a 7E000000 		.4byte	0x7e
 4806 0a0e 02       		.uleb128 0x2
 4807 0a0f 91       		.byte	0x91
 4808 0a10 40       		.sleb128 -64
 4809 0a11 1C       		.uleb128 0x1c
 4810 0a12 3B020000 		.4byte	.LASF147
 4811 0a16 01       		.byte	0x1
 4812 0a17 6703     		.2byte	0x367
 4813 0a19 7E000000 		.4byte	0x7e
 4814 0a1d 03       		.uleb128 0x3
 4815 0a1e 91       		.byte	0x91
 4816 0a1f BC7F     		.sleb128 -68
 4817 0a21 1C       		.uleb128 0x1c
 4818 0a22 0C000000 		.4byte	.LASF148
 4819 0a26 01       		.byte	0x1
 4820 0a27 6703     		.2byte	0x367
 4821 0a29 7E000000 		.4byte	0x7e
 4822 0a2d 03       		.uleb128 0x3
 4823 0a2e 91       		.byte	0x91
 4824 0a2f B87F     		.sleb128 -72
 4825 0a31 00       		.byte	0
 4826 0a32 00       		.byte	0
 4827 0a33 08       		.uleb128 0x8
 4828 0a34 03010000 		.4byte	0x103
 4829 0a38 430A0000 		.4byte	0xa43
 4830 0a3c 09       		.uleb128 0x9
 4831 0a3d 11010000 		.4byte	0x111
 4832 0a41 1D       		.byte	0x1d
 4833 0a42 00       		.byte	0
 4834 0a43 23       		.uleb128 0x23
 4835 0a44 8C020000 		.4byte	.LASF149
 4836 0a48 01       		.byte	0x1
 4837 0a49 8703     		.2byte	0x387
 4838 0a4b AD000000 		.4byte	0xad
 4839 0a4f 00000000 		.4byte	.LFB84
 4840 0a53 14000000 		.4byte	.LFE84-.LFB84
 4841 0a57 01       		.uleb128 0x1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 111


 4842 0a58 9C       		.byte	0x9c
 4843 0a59 1D       		.uleb128 0x1d
 4844 0a5a 76030000 		.4byte	.LASF150
 4845 0a5e 01       		.byte	0x1
 4846 0a5f 8C03     		.2byte	0x38c
 4847 0a61 00000000 		.4byte	.LFB85
 4848 0a65 1A000000 		.4byte	.LFE85-.LFB85
 4849 0a69 01       		.uleb128 0x1
 4850 0a6a 9C       		.byte	0x9c
 4851 0a6b 1D       		.uleb128 0x1d
 4852 0a6c 40010000 		.4byte	.LASF151
 4853 0a70 01       		.byte	0x1
 4854 0a71 9903     		.2byte	0x399
 4855 0a73 00000000 		.4byte	.LFB86
 4856 0a77 2A000000 		.4byte	.LFE86-.LFB86
 4857 0a7b 01       		.uleb128 0x1
 4858 0a7c 9C       		.byte	0x9c
 4859 0a7d 1B       		.uleb128 0x1b
 4860 0a7e 4F070000 		.4byte	.LASF152
 4861 0a82 01       		.byte	0x1
 4862 0a83 AC03     		.2byte	0x3ac
 4863 0a85 43030000 		.4byte	0x343
 4864 0a89 00000000 		.4byte	.LFB87
 4865 0a8d 7C020000 		.4byte	.LFE87-.LFB87
 4866 0a91 01       		.uleb128 0x1
 4867 0a92 9C       		.byte	0x9c
 4868 0a93 260B0000 		.4byte	0xb26
 4869 0a97 1A       		.uleb128 0x1a
 4870 0a98 67707300 		.ascii	"gps\000"
 4871 0a9c 01       		.byte	0x1
 4872 0a9d AD03     		.2byte	0x3ad
 4873 0a9f 43030000 		.4byte	0x343
 4874 0aa3 02       		.uleb128 0x2
 4875 0aa4 91       		.byte	0x91
 4876 0aa5 4C       		.sleb128 -52
 4877 0aa6 1C       		.uleb128 0x1c
 4878 0aa7 A40A0000 		.4byte	.LASF153
 4879 0aab 01       		.byte	0x1
 4880 0aac B903     		.2byte	0x3b9
 4881 0aae 57000000 		.4byte	0x57
 4882 0ab2 02       		.uleb128 0x2
 4883 0ab3 91       		.byte	0x91
 4884 0ab4 68       		.sleb128 -24
 4885 0ab5 1C       		.uleb128 0x1c
 4886 0ab6 FA050000 		.4byte	.LASF154
 4887 0aba 01       		.byte	0x1
 4888 0abb E003     		.2byte	0x3e0
 4889 0abd AD000000 		.4byte	0xad
 4890 0ac1 02       		.uleb128 0x2
 4891 0ac2 91       		.byte	0x91
 4892 0ac3 67       		.sleb128 -25
 4893 0ac4 1A       		.uleb128 0x1a
 4894 0ac5 6C617400 		.ascii	"lat\000"
 4895 0ac9 01       		.byte	0x1
 4896 0aca EC03     		.2byte	0x3ec
 4897 0acc F5000000 		.4byte	0xf5
 4898 0ad0 02       		.uleb128 0x2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 112


 4899 0ad1 91       		.byte	0x91
 4900 0ad2 48       		.sleb128 -56
 4901 0ad3 1A       		.uleb128 0x1a
 4902 0ad4 6C6F6E00 		.ascii	"lon\000"
 4903 0ad8 01       		.byte	0x1
 4904 0ad9 ED03     		.2byte	0x3ed
 4905 0adb F5000000 		.4byte	0xf5
 4906 0adf 02       		.uleb128 0x2
 4907 0ae0 91       		.byte	0x91
 4908 0ae1 44       		.sleb128 -60
 4909 0ae2 1A       		.uleb128 0x1a
 4910 0ae3 616C7400 		.ascii	"alt\000"
 4911 0ae7 01       		.byte	0x1
 4912 0ae8 EE03     		.2byte	0x3ee
 4913 0aea F5000000 		.4byte	0xf5
 4914 0aee 02       		.uleb128 0x2
 4915 0aef 91       		.byte	0x91
 4916 0af0 40       		.sleb128 -64
 4917 0af1 1A       		.uleb128 0x1a
 4918 0af2 733100   		.ascii	"s1\000"
 4919 0af5 01       		.byte	0x1
 4920 0af6 F203     		.2byte	0x3f2
 4921 0af8 18010000 		.4byte	0x118
 4922 0afc 02       		.uleb128 0x2
 4923 0afd 91       		.byte	0x91
 4924 0afe 60       		.sleb128 -32
 4925 0aff 1C       		.uleb128 0x1c
 4926 0b00 27060000 		.4byte	.LASF116
 4927 0b04 01       		.byte	0x1
 4928 0b05 F503     		.2byte	0x3f5
 4929 0b07 7E000000 		.4byte	0x7e
 4930 0b0b 02       		.uleb128 0x2
 4931 0b0c 91       		.byte	0x91
 4932 0b0d 5C       		.sleb128 -36
 4933 0b0e 14       		.uleb128 0x14
 4934 0b0f B4000000 		.4byte	.LBB14
 4935 0b13 38000000 		.4byte	.LBE14-.LBB14
 4936 0b17 1A       		.uleb128 0x1a
 4937 0b18 6900     		.ascii	"i\000"
 4938 0b1a 01       		.byte	0x1
 4939 0b1b E103     		.2byte	0x3e1
 4940 0b1d B9000000 		.4byte	0xb9
 4941 0b21 02       		.uleb128 0x2
 4942 0b22 91       		.byte	0x91
 4943 0b23 6E       		.sleb128 -18
 4944 0b24 00       		.byte	0
 4945 0b25 00       		.byte	0
 4946 0b26 24       		.uleb128 0x24
 4947 0b27 8E010000 		.4byte	.LASF155
 4948 0b2b 0A       		.byte	0xa
 4949 0b2c 1207     		.2byte	0x712
 4950 0b2e 320B0000 		.4byte	0xb32
 4951 0b32 0F       		.uleb128 0xf
 4952 0b33 97000000 		.4byte	0x97
 4953 0b37 25       		.uleb128 0x25
 4954 0b38 48000000 		.4byte	.LASF156
 4955 0b3c 07       		.byte	0x7
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 113


 4956 0b3d 11       		.byte	0x11
 4957 0b3e CF030000 		.4byte	0x3cf
 4958 0b42 05       		.uleb128 0x5
 4959 0b43 03       		.byte	0x3
 4960 0b44 00000000 		.4byte	buffer_overflow
 4961 0b48 25       		.uleb128 0x25
 4962 0b49 6E050000 		.4byte	.LASF157
 4963 0b4d 07       		.byte	0x7
 4964 0b4e 22       		.byte	0x22
 4965 0b4f B9000000 		.4byte	0xb9
 4966 0b53 05       		.uleb128 0x5
 4967 0b54 03       		.byte	0x3
 4968 0b55 00000000 		.4byte	dataPointsInStack
 4969 0b59 25       		.uleb128 0x25
 4970 0b5a B9090000 		.4byte	.LASF158
 4971 0b5e 07       		.byte	0x7
 4972 0b5f 23       		.byte	0x23
 4973 0b60 B9000000 		.4byte	0xb9
 4974 0b64 05       		.uleb128 0x5
 4975 0b65 03       		.byte	0x3
 4976 0b66 00000000 		.4byte	dataPointsInStackDesired
 4977 0b6a 08       		.uleb128 0x8
 4978 0b6b 47020000 		.4byte	0x247
 4979 0b6f 7A0B0000 		.4byte	0xb7a
 4980 0b73 09       		.uleb128 0x9
 4981 0b74 11010000 		.4byte	0x111
 4982 0b78 95       		.byte	0x95
 4983 0b79 00       		.byte	0
 4984 0b7a 25       		.uleb128 0x25
 4985 0b7b 3E040000 		.4byte	.LASF159
 4986 0b7f 07       		.byte	0x7
 4987 0b80 24       		.byte	0x24
 4988 0b81 6A0B0000 		.4byte	0xb6a
 4989 0b85 05       		.uleb128 0x5
 4990 0b86 03       		.byte	0x3
 4991 0b87 00000000 		.4byte	data
 4992 0b8b 25       		.uleb128 0x25
 4993 0b8c 70010000 		.4byte	.LASF160
 4994 0b90 08       		.byte	0x8
 4995 0b91 20       		.byte	0x20
 4996 0b92 AD000000 		.4byte	0xad
 4997 0b96 05       		.uleb128 0x5
 4998 0b97 03       		.byte	0x3
 4999 0b98 00000000 		.4byte	modem_state
 5000 0b9c 25       		.uleb128 0x25
 5001 0b9d B0080000 		.4byte	.LASF161
 5002 0ba1 08       		.byte	0x8
 5003 0ba2 71       		.byte	0x71
 5004 0ba3 DD000000 		.4byte	0xdd
 5005 0ba7 05       		.uleb128 0x5
 5006 0ba8 03       		.byte	0x3
 5007 0ba9 00000000 		.4byte	modem_start_time_stamp
 5008 0bad 25       		.uleb128 0x25
 5009 0bae 54040000 		.4byte	.LASF77
 5010 0bb2 08       		.byte	0x8
 5011 0bb3 72       		.byte	0x72
 5012 0bb4 7F020000 		.4byte	0x27f
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 114


 5013 0bb8 05       		.uleb128 0x5
 5014 0bb9 03       		.byte	0x3
 5015 0bba 00000000 		.4byte	modem_info
 5016 0bbe 25       		.uleb128 0x25
 5017 0bbf 9B010000 		.4byte	.LASF162
 5018 0bc3 08       		.byte	0x8
 5019 0bc4 73       		.byte	0x73
 5020 0bc5 F3020000 		.4byte	0x2f3
 5021 0bc9 05       		.uleb128 0x5
 5022 0bca 03       		.byte	0x3
 5023 0bcb 00000000 		.4byte	modem_stats
 5024 0bcf 25       		.uleb128 0x25
 5025 0bd0 2D060000 		.4byte	.LASF163
 5026 0bd4 08       		.byte	0x8
 5027 0bd5 74       		.byte	0x74
 5028 0bd6 D6030000 		.4byte	0x3d6
 5029 0bda 05       		.uleb128 0x5
 5030 0bdb 03       		.byte	0x3
 5031 0bdc 00000000 		.4byte	updatable_parameters
 5032 0be0 25       		.uleb128 0x25
 5033 0be1 C1030000 		.4byte	.LASF164
 5034 0be5 0B       		.byte	0xb
 5035 0be6 07       		.byte	0x7
 5036 0be7 AD000000 		.4byte	0xad
 5037 0beb 05       		.uleb128 0x5
 5038 0bec 03       		.byte	0x3
 5039 0bed 00000000 		.4byte	App_LED_enabled
 5040 0bf1 25       		.uleb128 0x25
 5041 0bf2 D30A0000 		.4byte	.LASF165
 5042 0bf6 0B       		.byte	0xb
 5043 0bf7 08       		.byte	0x8
 5044 0bf8 7D040000 		.4byte	0x47d
 5045 0bfc 05       		.uleb128 0x5
 5046 0bfd 03       		.byte	0x3
 5047 0bfe 00000000 		.4byte	app_led_inbox
 5048 0c02 25       		.uleb128 0x25
 5049 0c03 F1070000 		.4byte	.LASF166
 5050 0c07 0C       		.byte	0xc
 5051 0c08 25       		.byte	0x25
 5052 0c09 7D040000 		.4byte	0x47d
 5053 0c0d 05       		.uleb128 0x5
 5054 0c0e 03       		.byte	0x3
 5055 0c0f 00000000 		.4byte	level_sensor_inbox
 5056 0c13 25       		.uleb128 0x25
 5057 0c14 A4090000 		.4byte	.LASF167
 5058 0c18 0C       		.byte	0xc
 5059 0c19 27       		.byte	0x27
 5060 0c1a CF030000 		.4byte	0x3cf
 5061 0c1e 05       		.uleb128 0x5
 5062 0c1f 03       		.byte	0x3
 5063 0c20 00000000 		.4byte	level_sensor_enabled
 5064 0c24 25       		.uleb128 0x25
 5065 0c25 E10A0000 		.4byte	.LASF168
 5066 0c29 0D       		.byte	0xd
 5067 0c2a 0F       		.byte	0xf
 5068 0c2b 7D040000 		.4byte	0x47d
 5069 0c2f 05       		.uleb128 0x5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 115


 5070 0c30 03       		.byte	0x3
 5071 0c31 00000000 		.4byte	downstream_level_sensor_inbox
 5072 0c35 25       		.uleb128 0x25
 5073 0c36 0F050000 		.4byte	.LASF169
 5074 0c3a 0D       		.byte	0xd
 5075 0c3b 11       		.byte	0x11
 5076 0c3c CF030000 		.4byte	0x3cf
 5077 0c40 05       		.uleb128 0x5
 5078 0c41 03       		.byte	0x3
 5079 0c42 00000000 		.4byte	downstream_level_sensor_enabled
 5080 0c46 25       		.uleb128 0x25
 5081 0c47 2C020000 		.4byte	.LASF170
 5082 0c4b 0E       		.byte	0xe
 5083 0c4c 2A       		.byte	0x2a
 5084 0c4d E9000000 		.4byte	0xe9
 5085 0c51 05       		.uleb128 0x5
 5086 0c52 03       		.byte	0x3
 5087 0c53 00000000 		.4byte	valve_diameter
 5088 0c57 25       		.uleb128 0x25
 5089 0c58 9D000000 		.4byte	.LASF171
 5090 0c5c 0E       		.byte	0xe
 5091 0c5d 2B       		.byte	0x2b
 5092 0c5e 52070000 		.4byte	0x752
 5093 0c62 05       		.uleb128 0x5
 5094 0c63 03       		.byte	0x3
 5095 0c64 00000000 		.4byte	valve_type
 5096 0c68 25       		.uleb128 0x25
 5097 0c69 4C090000 		.4byte	.LASF172
 5098 0c6d 0E       		.byte	0xe
 5099 0c6e 30       		.byte	0x30
 5100 0c6f AD000000 		.4byte	0xad
 5101 0c73 05       		.uleb128 0x5
 5102 0c74 03       		.byte	0x3
 5103 0c75 00000000 		.4byte	valve_enabled
 5104 0c79 25       		.uleb128 0x25
 5105 0c7a 400A0000 		.4byte	.LASF173
 5106 0c7e 0E       		.byte	0xe
 5107 0c7f 31       		.byte	0x31
 5108 0c80 7D040000 		.4byte	0x47d
 5109 0c84 05       		.uleb128 0x5
 5110 0c85 03       		.byte	0x3
 5111 0c86 00000000 		.4byte	valve_inbox
 5112 0c8a 25       		.uleb128 0x25
 5113 0c8b 34000000 		.4byte	.LASF174
 5114 0c8f 0F       		.byte	0xf
 5115 0c90 69       		.byte	0x69
 5116 0c91 AD000000 		.4byte	0xad
 5117 0c95 05       		.uleb128 0x5
 5118 0c96 03       		.byte	0x3
 5119 0c97 00000000 		.4byte	autosampler_enabled
 5120 0c9b 25       		.uleb128 0x25
 5121 0c9c 80050000 		.4byte	.LASF175
 5122 0ca0 0F       		.byte	0xf
 5123 0ca1 6B       		.byte	0x6b
 5124 0ca2 7D040000 		.4byte	0x47d
 5125 0ca6 05       		.uleb128 0x5
 5126 0ca7 03       		.byte	0x3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 116


 5127 0ca8 00000000 		.4byte	autosampler_inbox
 5128 0cac 08       		.uleb128 0x8
 5129 0cad 03010000 		.4byte	0x103
 5130 0cb1 BD0C0000 		.4byte	0xcbd
 5131 0cb5 26       		.uleb128 0x26
 5132 0cb6 11010000 		.4byte	0x111
 5133 0cba 0F27     		.2byte	0x270f
 5134 0cbc 00       		.byte	0
 5135 0cbd 25       		.uleb128 0x25
 5136 0cbe AE0A0000 		.4byte	.LASF176
 5137 0cc2 09       		.byte	0x9
 5138 0cc3 1F       		.byte	0x1f
 5139 0cc4 AC0C0000 		.4byte	0xcac
 5140 0cc8 05       		.uleb128 0x5
 5141 0cc9 03       		.byte	0x3
 5142 0cca 00000000 		.4byte	http_request
 5143 0cce 25       		.uleb128 0x25
 5144 0ccf 07020000 		.4byte	.LASF177
 5145 0cd3 09       		.byte	0x9
 5146 0cd4 20       		.byte	0x20
 5147 0cd5 AC0C0000 		.4byte	0xcac
 5148 0cd9 05       		.uleb128 0x5
 5149 0cda 03       		.byte	0x3
 5150 0cdb 00000000 		.4byte	http_body
 5151 0cdf 25       		.uleb128 0x25
 5152 0ce0 4F080000 		.4byte	.LASF178
 5153 0ce4 09       		.byte	0x9
 5154 0ce5 21       		.byte	0x21
 5155 0ce6 37090000 		.4byte	0x937
 5156 0cea 05       		.uleb128 0x5
 5157 0ceb 03       		.byte	0x3
 5158 0cec 00000000 		.4byte	http_route
 5159 0cf0 25       		.uleb128 0x25
 5160 0cf1 0D090000 		.4byte	.LASF179
 5161 0cf5 09       		.byte	0x9
 5162 0cf6 48       		.byte	0x48
 5163 0cf7 51040000 		.4byte	0x451
 5164 0cfb 05       		.uleb128 0x5
 5165 0cfc 03       		.byte	0x3
 5166 0cfd 00000000 		.4byte	system_info
 5167 0d01 25       		.uleb128 0x25
 5168 0d02 19070000 		.4byte	.LASF180
 5169 0d06 09       		.byte	0x9
 5170 0d07 5A       		.byte	0x5a
 5171 0d08 8D040000 		.4byte	0x48d
 5172 0d0c 05       		.uleb128 0x5
 5173 0d0d 03       		.byte	0x3
 5174 0d0e 00000000 		.4byte	system_settings
 5175 0d12 25       		.uleb128 0x25
 5176 0d13 81010000 		.4byte	.LASF181
 5177 0d17 09       		.byte	0x9
 5178 0d18 76       		.byte	0x76
 5179 0d19 1A040000 		.4byte	0x41a
 5180 0d1d 05       		.uleb128 0x5
 5181 0d1e 03       		.byte	0x3
 5182 0d1f 00000000 		.4byte	alarmMeasure
 5183 0d23 25       		.uleb128 0x25
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 117


 5184 0d24 C6010000 		.4byte	.LASF182
 5185 0d28 09       		.byte	0x9
 5186 0d29 77       		.byte	0x77
 5187 0d2a AD000000 		.4byte	0xad
 5188 0d2e 05       		.uleb128 0x5
 5189 0d2f 03       		.byte	0x3
 5190 0d30 00000000 		.4byte	timeToMeasure
 5191 0d34 25       		.uleb128 0x25
 5192 0d35 B7030000 		.4byte	.LASF183
 5193 0d39 09       		.byte	0x9
 5194 0d3a 78       		.byte	0x78
 5195 0d3b 1A040000 		.4byte	0x41a
 5196 0d3f 05       		.uleb128 0x5
 5197 0d40 03       		.byte	0x3
 5198 0d41 00000000 		.4byte	alarmSync
 5199 0d45 25       		.uleb128 0x25
 5200 0d46 EC010000 		.4byte	.LASF184
 5201 0d4a 09       		.byte	0x9
 5202 0d4b 79       		.byte	0x79
 5203 0d4c AD000000 		.4byte	0xad
 5204 0d50 05       		.uleb128 0x5
 5205 0d51 03       		.byte	0x3
 5206 0d52 00000000 		.4byte	timeToSync
 5207 0d56 25       		.uleb128 0x25
 5208 0d57 05060000 		.4byte	.LASF185
 5209 0d5b 09       		.byte	0x9
 5210 0d5c 7A       		.byte	0x7a
 5211 0d5d AD000000 		.4byte	0xad
 5212 0d61 05       		.uleb128 0x5
 5213 0d62 03       		.byte	0x3
 5214 0d63 00000000 		.4byte	timeToSycnRemoteParams
 5215 0d67 27       		.uleb128 0x27
 5216 0d68 68657900 		.ascii	"hey\000"
 5217 0d6c 09       		.byte	0x9
 5218 0d6d 7B       		.byte	0x7b
 5219 0d6e AD000000 		.4byte	0xad
 5220 0d72 05       		.uleb128 0x5
 5221 0d73 03       		.byte	0x3
 5222 0d74 00000000 		.4byte	hey
 5223 0d78 25       		.uleb128 0x25
 5224 0d79 DB040000 		.4byte	.LASF186
 5225 0d7d 09       		.byte	0x9
 5226 0d7e 7F       		.byte	0x7f
 5227 0d7f 1A040000 		.4byte	0x41a
 5228 0d83 05       		.uleb128 0x5
 5229 0d84 03       		.byte	0x3
 5230 0d85 00000000 		.4byte	alarmAppLED
 5231 0d89 25       		.uleb128 0x25
 5232 0d8a BD020000 		.4byte	.LASF187
 5233 0d8e 09       		.byte	0x9
 5234 0d8f 80       		.byte	0x80
 5235 0d90 AD000000 		.4byte	0xad
 5236 0d94 05       		.uleb128 0x5
 5237 0d95 03       		.byte	0x3
 5238 0d96 00000000 		.4byte	timeToAppLED
 5239 0d9a 25       		.uleb128 0x25
 5240 0d9b AF070000 		.4byte	.LASF188
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 118


 5241 0d9f 09       		.byte	0x9
 5242 0da0 82       		.byte	0x82
 5243 0da1 1A040000 		.4byte	0x41a
 5244 0da5 05       		.uleb128 0x5
 5245 0da6 03       		.byte	0x3
 5246 0da7 00000000 		.4byte	alarmLevelSensor
 5247 0dab 25       		.uleb128 0x25
 5248 0dac 92090000 		.4byte	.LASF189
 5249 0db0 09       		.byte	0x9
 5250 0db1 83       		.byte	0x83
 5251 0db2 AD000000 		.4byte	0xad
 5252 0db6 05       		.uleb128 0x5
 5253 0db7 03       		.byte	0x3
 5254 0db8 00000000 		.4byte	timeToLevelSensor
 5255 0dbc 25       		.uleb128 0x25
 5256 0dbd 47020000 		.4byte	.LASF190
 5257 0dc1 09       		.byte	0x9
 5258 0dc2 85       		.byte	0x85
 5259 0dc3 1A040000 		.4byte	0x41a
 5260 0dc7 05       		.uleb128 0x5
 5261 0dc8 03       		.byte	0x3
 5262 0dc9 00000000 		.4byte	alarmDownstreamLevelSensor
 5263 0dcd 25       		.uleb128 0x25
 5264 0dce 0B0A0000 		.4byte	.LASF191
 5265 0dd2 09       		.byte	0x9
 5266 0dd3 86       		.byte	0x86
 5267 0dd4 AD000000 		.4byte	0xad
 5268 0dd8 05       		.uleb128 0x5
 5269 0dd9 03       		.byte	0x3
 5270 0dda 00000000 		.4byte	timeToDownstreamLevelSensor
 5271 0dde 25       		.uleb128 0x25
 5272 0ddf 3B080000 		.4byte	.LASF192
 5273 0de3 09       		.byte	0x9
 5274 0de4 88       		.byte	0x88
 5275 0de5 1A040000 		.4byte	0x41a
 5276 0de9 05       		.uleb128 0x5
 5277 0dea 03       		.byte	0x3
 5278 0deb 00000000 		.4byte	alarmValve
 5279 0def 25       		.uleb128 0x25
 5280 0df0 00000000 		.4byte	.LASF193
 5281 0df4 09       		.byte	0x9
 5282 0df5 89       		.byte	0x89
 5283 0df6 AD000000 		.4byte	0xad
 5284 0dfa 05       		.uleb128 0x5
 5285 0dfb 03       		.byte	0x3
 5286 0dfc 00000000 		.4byte	timeToValve
 5287 0e00 25       		.uleb128 0x25
 5288 0e01 2F0A0000 		.4byte	.LASF194
 5289 0e05 09       		.byte	0x9
 5290 0e06 8B       		.byte	0x8b
 5291 0e07 1A040000 		.4byte	0x41a
 5292 0e0b 05       		.uleb128 0x5
 5293 0e0c 03       		.byte	0x3
 5294 0e0d 00000000 		.4byte	alarmAutosampler
 5295 0e11 25       		.uleb128 0x25
 5296 0e12 8B000000 		.4byte	.LASF195
 5297 0e16 09       		.byte	0x9
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 119


 5298 0e17 8C       		.byte	0x8c
 5299 0e18 AD000000 		.4byte	0xad
 5300 0e1c 05       		.uleb128 0x5
 5301 0e1d 03       		.byte	0x3
 5302 0e1e 00000000 		.4byte	timeToAutosampler
 5303 0e22 08       		.uleb128 0x8
 5304 0e23 03010000 		.4byte	0x103
 5305 0e27 330E0000 		.4byte	0xe33
 5306 0e2b 26       		.uleb128 0x26
 5307 0e2c 11010000 		.4byte	0x111
 5308 0e30 FF03     		.2byte	0x3ff
 5309 0e32 00       		.byte	0
 5310 0e33 25       		.uleb128 0x25
 5311 0e34 C7080000 		.4byte	.LASF196
 5312 0e38 01       		.byte	0x1
 5313 0e39 05       		.byte	0x5
 5314 0e3a 220E0000 		.4byte	0xe22
 5315 0e3e 05       		.uleb128 0x5
 5316 0e3f 03       		.byte	0x3
 5317 0e40 00000000 		.4byte	uart_received_string
 5318 0e44 25       		.uleb128 0x25
 5319 0e45 78080000 		.4byte	.LASF197
 5320 0e49 01       		.byte	0x1
 5321 0e4a 06       		.byte	0x6
 5322 0e4b D1000000 		.4byte	0xd1
 5323 0e4f 05       		.uleb128 0x5
 5324 0e50 03       		.byte	0x3
 5325 0e51 00000000 		.4byte	uart_string_index
 5326 0e55 00       		.byte	0
 5327              		.section	.debug_abbrev,"",%progbits
 5328              	.Ldebug_abbrev0:
 5329 0000 01       		.uleb128 0x1
 5330 0001 11       		.uleb128 0x11
 5331 0002 01       		.byte	0x1
 5332 0003 25       		.uleb128 0x25
 5333 0004 0E       		.uleb128 0xe
 5334 0005 13       		.uleb128 0x13
 5335 0006 0B       		.uleb128 0xb
 5336 0007 03       		.uleb128 0x3
 5337 0008 0E       		.uleb128 0xe
 5338 0009 1B       		.uleb128 0x1b
 5339 000a 0E       		.uleb128 0xe
 5340 000b 55       		.uleb128 0x55
 5341 000c 17       		.uleb128 0x17
 5342 000d 11       		.uleb128 0x11
 5343 000e 01       		.uleb128 0x1
 5344 000f 10       		.uleb128 0x10
 5345 0010 17       		.uleb128 0x17
 5346 0011 00       		.byte	0
 5347 0012 00       		.byte	0
 5348 0013 02       		.uleb128 0x2
 5349 0014 24       		.uleb128 0x24
 5350 0015 00       		.byte	0
 5351 0016 0B       		.uleb128 0xb
 5352 0017 0B       		.uleb128 0xb
 5353 0018 3E       		.uleb128 0x3e
 5354 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 120


 5355 001a 03       		.uleb128 0x3
 5356 001b 0E       		.uleb128 0xe
 5357 001c 00       		.byte	0
 5358 001d 00       		.byte	0
 5359 001e 03       		.uleb128 0x3
 5360 001f 16       		.uleb128 0x16
 5361 0020 00       		.byte	0
 5362 0021 03       		.uleb128 0x3
 5363 0022 0E       		.uleb128 0xe
 5364 0023 3A       		.uleb128 0x3a
 5365 0024 0B       		.uleb128 0xb
 5366 0025 3B       		.uleb128 0x3b
 5367 0026 0B       		.uleb128 0xb
 5368 0027 49       		.uleb128 0x49
 5369 0028 13       		.uleb128 0x13
 5370 0029 00       		.byte	0
 5371 002a 00       		.byte	0
 5372 002b 04       		.uleb128 0x4
 5373 002c 24       		.uleb128 0x24
 5374 002d 00       		.byte	0
 5375 002e 0B       		.uleb128 0xb
 5376 002f 0B       		.uleb128 0xb
 5377 0030 3E       		.uleb128 0x3e
 5378 0031 0B       		.uleb128 0xb
 5379 0032 03       		.uleb128 0x3
 5380 0033 08       		.uleb128 0x8
 5381 0034 00       		.byte	0
 5382 0035 00       		.byte	0
 5383 0036 05       		.uleb128 0x5
 5384 0037 16       		.uleb128 0x16
 5385 0038 00       		.byte	0
 5386 0039 03       		.uleb128 0x3
 5387 003a 0E       		.uleb128 0xe
 5388 003b 3A       		.uleb128 0x3a
 5389 003c 0B       		.uleb128 0xb
 5390 003d 3B       		.uleb128 0x3b
 5391 003e 05       		.uleb128 0x5
 5392 003f 49       		.uleb128 0x49
 5393 0040 13       		.uleb128 0x13
 5394 0041 00       		.byte	0
 5395 0042 00       		.byte	0
 5396 0043 06       		.uleb128 0x6
 5397 0044 0F       		.uleb128 0xf
 5398 0045 00       		.byte	0
 5399 0046 0B       		.uleb128 0xb
 5400 0047 0B       		.uleb128 0xb
 5401 0048 49       		.uleb128 0x49
 5402 0049 13       		.uleb128 0x13
 5403 004a 00       		.byte	0
 5404 004b 00       		.byte	0
 5405 004c 07       		.uleb128 0x7
 5406 004d 26       		.uleb128 0x26
 5407 004e 00       		.byte	0
 5408 004f 49       		.uleb128 0x49
 5409 0050 13       		.uleb128 0x13
 5410 0051 00       		.byte	0
 5411 0052 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 121


 5412 0053 08       		.uleb128 0x8
 5413 0054 01       		.uleb128 0x1
 5414 0055 01       		.byte	0x1
 5415 0056 49       		.uleb128 0x49
 5416 0057 13       		.uleb128 0x13
 5417 0058 01       		.uleb128 0x1
 5418 0059 13       		.uleb128 0x13
 5419 005a 00       		.byte	0
 5420 005b 00       		.byte	0
 5421 005c 09       		.uleb128 0x9
 5422 005d 21       		.uleb128 0x21
 5423 005e 00       		.byte	0
 5424 005f 49       		.uleb128 0x49
 5425 0060 13       		.uleb128 0x13
 5426 0061 2F       		.uleb128 0x2f
 5427 0062 0B       		.uleb128 0xb
 5428 0063 00       		.byte	0
 5429 0064 00       		.byte	0
 5430 0065 0A       		.uleb128 0xa
 5431 0066 13       		.uleb128 0x13
 5432 0067 01       		.byte	0x1
 5433 0068 03       		.uleb128 0x3
 5434 0069 08       		.uleb128 0x8
 5435 006a 0B       		.uleb128 0xb
 5436 006b 0B       		.uleb128 0xb
 5437 006c 3A       		.uleb128 0x3a
 5438 006d 0B       		.uleb128 0xb
 5439 006e 3B       		.uleb128 0x3b
 5440 006f 0B       		.uleb128 0xb
 5441 0070 01       		.uleb128 0x1
 5442 0071 13       		.uleb128 0x13
 5443 0072 00       		.byte	0
 5444 0073 00       		.byte	0
 5445 0074 0B       		.uleb128 0xb
 5446 0075 0D       		.uleb128 0xd
 5447 0076 00       		.byte	0
 5448 0077 03       		.uleb128 0x3
 5449 0078 0E       		.uleb128 0xe
 5450 0079 3A       		.uleb128 0x3a
 5451 007a 0B       		.uleb128 0xb
 5452 007b 3B       		.uleb128 0x3b
 5453 007c 0B       		.uleb128 0xb
 5454 007d 49       		.uleb128 0x49
 5455 007e 13       		.uleb128 0x13
 5456 007f 38       		.uleb128 0x38
 5457 0080 0B       		.uleb128 0xb
 5458 0081 00       		.byte	0
 5459 0082 00       		.byte	0
 5460 0083 0C       		.uleb128 0xc
 5461 0084 13       		.uleb128 0x13
 5462 0085 01       		.byte	0x1
 5463 0086 0B       		.uleb128 0xb
 5464 0087 05       		.uleb128 0x5
 5465 0088 3A       		.uleb128 0x3a
 5466 0089 0B       		.uleb128 0xb
 5467 008a 3B       		.uleb128 0x3b
 5468 008b 0B       		.uleb128 0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 122


 5469 008c 01       		.uleb128 0x1
 5470 008d 13       		.uleb128 0x13
 5471 008e 00       		.byte	0
 5472 008f 00       		.byte	0
 5473 0090 0D       		.uleb128 0xd
 5474 0091 13       		.uleb128 0x13
 5475 0092 01       		.byte	0x1
 5476 0093 0B       		.uleb128 0xb
 5477 0094 0B       		.uleb128 0xb
 5478 0095 3A       		.uleb128 0x3a
 5479 0096 0B       		.uleb128 0xb
 5480 0097 3B       		.uleb128 0x3b
 5481 0098 0B       		.uleb128 0xb
 5482 0099 01       		.uleb128 0x1
 5483 009a 13       		.uleb128 0x13
 5484 009b 00       		.byte	0
 5485 009c 00       		.byte	0
 5486 009d 0E       		.uleb128 0xe
 5487 009e 0D       		.uleb128 0xd
 5488 009f 00       		.byte	0
 5489 00a0 03       		.uleb128 0x3
 5490 00a1 08       		.uleb128 0x8
 5491 00a2 3A       		.uleb128 0x3a
 5492 00a3 0B       		.uleb128 0xb
 5493 00a4 3B       		.uleb128 0x3b
 5494 00a5 0B       		.uleb128 0xb
 5495 00a6 49       		.uleb128 0x49
 5496 00a7 13       		.uleb128 0x13
 5497 00a8 38       		.uleb128 0x38
 5498 00a9 0B       		.uleb128 0xb
 5499 00aa 00       		.byte	0
 5500 00ab 00       		.byte	0
 5501 00ac 0F       		.uleb128 0xf
 5502 00ad 35       		.uleb128 0x35
 5503 00ae 00       		.byte	0
 5504 00af 49       		.uleb128 0x49
 5505 00b0 13       		.uleb128 0x13
 5506 00b1 00       		.byte	0
 5507 00b2 00       		.byte	0
 5508 00b3 10       		.uleb128 0x10
 5509 00b4 2E       		.uleb128 0x2e
 5510 00b5 00       		.byte	0
 5511 00b6 3F       		.uleb128 0x3f
 5512 00b7 19       		.uleb128 0x19
 5513 00b8 03       		.uleb128 0x3
 5514 00b9 0E       		.uleb128 0xe
 5515 00ba 3A       		.uleb128 0x3a
 5516 00bb 0B       		.uleb128 0xb
 5517 00bc 3B       		.uleb128 0x3b
 5518 00bd 0B       		.uleb128 0xb
 5519 00be 27       		.uleb128 0x27
 5520 00bf 19       		.uleb128 0x19
 5521 00c0 11       		.uleb128 0x11
 5522 00c1 01       		.uleb128 0x1
 5523 00c2 12       		.uleb128 0x12
 5524 00c3 06       		.uleb128 0x6
 5525 00c4 40       		.uleb128 0x40
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 123


 5526 00c5 18       		.uleb128 0x18
 5527 00c6 9642     		.uleb128 0x2116
 5528 00c8 19       		.uleb128 0x19
 5529 00c9 00       		.byte	0
 5530 00ca 00       		.byte	0
 5531 00cb 11       		.uleb128 0x11
 5532 00cc 2E       		.uleb128 0x2e
 5533 00cd 00       		.byte	0
 5534 00ce 3F       		.uleb128 0x3f
 5535 00cf 19       		.uleb128 0x19
 5536 00d0 03       		.uleb128 0x3
 5537 00d1 0E       		.uleb128 0xe
 5538 00d2 3A       		.uleb128 0x3a
 5539 00d3 0B       		.uleb128 0xb
 5540 00d4 3B       		.uleb128 0x3b
 5541 00d5 0B       		.uleb128 0xb
 5542 00d6 11       		.uleb128 0x11
 5543 00d7 01       		.uleb128 0x1
 5544 00d8 12       		.uleb128 0x12
 5545 00d9 06       		.uleb128 0x6
 5546 00da 40       		.uleb128 0x40
 5547 00db 18       		.uleb128 0x18
 5548 00dc 9642     		.uleb128 0x2116
 5549 00de 19       		.uleb128 0x19
 5550 00df 00       		.byte	0
 5551 00e0 00       		.byte	0
 5552 00e1 12       		.uleb128 0x12
 5553 00e2 2E       		.uleb128 0x2e
 5554 00e3 01       		.byte	0x1
 5555 00e4 3F       		.uleb128 0x3f
 5556 00e5 19       		.uleb128 0x19
 5557 00e6 03       		.uleb128 0x3
 5558 00e7 0E       		.uleb128 0xe
 5559 00e8 3A       		.uleb128 0x3a
 5560 00e9 0B       		.uleb128 0xb
 5561 00ea 3B       		.uleb128 0x3b
 5562 00eb 0B       		.uleb128 0xb
 5563 00ec 49       		.uleb128 0x49
 5564 00ed 13       		.uleb128 0x13
 5565 00ee 11       		.uleb128 0x11
 5566 00ef 01       		.uleb128 0x1
 5567 00f0 12       		.uleb128 0x12
 5568 00f1 06       		.uleb128 0x6
 5569 00f2 40       		.uleb128 0x40
 5570 00f3 18       		.uleb128 0x18
 5571 00f4 9642     		.uleb128 0x2116
 5572 00f6 19       		.uleb128 0x19
 5573 00f7 01       		.uleb128 0x1
 5574 00f8 13       		.uleb128 0x13
 5575 00f9 00       		.byte	0
 5576 00fa 00       		.byte	0
 5577 00fb 13       		.uleb128 0x13
 5578 00fc 34       		.uleb128 0x34
 5579 00fd 00       		.byte	0
 5580 00fe 03       		.uleb128 0x3
 5581 00ff 0E       		.uleb128 0xe
 5582 0100 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 124


 5583 0101 0B       		.uleb128 0xb
 5584 0102 3B       		.uleb128 0x3b
 5585 0103 0B       		.uleb128 0xb
 5586 0104 49       		.uleb128 0x49
 5587 0105 13       		.uleb128 0x13
 5588 0106 02       		.uleb128 0x2
 5589 0107 18       		.uleb128 0x18
 5590 0108 00       		.byte	0
 5591 0109 00       		.byte	0
 5592 010a 14       		.uleb128 0x14
 5593 010b 0B       		.uleb128 0xb
 5594 010c 01       		.byte	0x1
 5595 010d 11       		.uleb128 0x11
 5596 010e 01       		.uleb128 0x1
 5597 010f 12       		.uleb128 0x12
 5598 0110 06       		.uleb128 0x6
 5599 0111 00       		.byte	0
 5600 0112 00       		.byte	0
 5601 0113 15       		.uleb128 0x15
 5602 0114 2E       		.uleb128 0x2e
 5603 0115 01       		.byte	0x1
 5604 0116 3F       		.uleb128 0x3f
 5605 0117 19       		.uleb128 0x19
 5606 0118 03       		.uleb128 0x3
 5607 0119 0E       		.uleb128 0xe
 5608 011a 3A       		.uleb128 0x3a
 5609 011b 0B       		.uleb128 0xb
 5610 011c 3B       		.uleb128 0x3b
 5611 011d 0B       		.uleb128 0xb
 5612 011e 27       		.uleb128 0x27
 5613 011f 19       		.uleb128 0x19
 5614 0120 49       		.uleb128 0x49
 5615 0121 13       		.uleb128 0x13
 5616 0122 11       		.uleb128 0x11
 5617 0123 01       		.uleb128 0x1
 5618 0124 12       		.uleb128 0x12
 5619 0125 06       		.uleb128 0x6
 5620 0126 40       		.uleb128 0x40
 5621 0127 18       		.uleb128 0x18
 5622 0128 9642     		.uleb128 0x2116
 5623 012a 19       		.uleb128 0x19
 5624 012b 01       		.uleb128 0x1
 5625 012c 13       		.uleb128 0x13
 5626 012d 00       		.byte	0
 5627 012e 00       		.byte	0
 5628 012f 16       		.uleb128 0x16
 5629 0130 05       		.uleb128 0x5
 5630 0131 00       		.byte	0
 5631 0132 03       		.uleb128 0x3
 5632 0133 0E       		.uleb128 0xe
 5633 0134 3A       		.uleb128 0x3a
 5634 0135 0B       		.uleb128 0xb
 5635 0136 3B       		.uleb128 0x3b
 5636 0137 0B       		.uleb128 0xb
 5637 0138 49       		.uleb128 0x49
 5638 0139 13       		.uleb128 0x13
 5639 013a 02       		.uleb128 0x2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 125


 5640 013b 18       		.uleb128 0x18
 5641 013c 00       		.byte	0
 5642 013d 00       		.byte	0
 5643 013e 17       		.uleb128 0x17
 5644 013f 34       		.uleb128 0x34
 5645 0140 00       		.byte	0
 5646 0141 03       		.uleb128 0x3
 5647 0142 08       		.uleb128 0x8
 5648 0143 3A       		.uleb128 0x3a
 5649 0144 0B       		.uleb128 0xb
 5650 0145 3B       		.uleb128 0x3b
 5651 0146 0B       		.uleb128 0xb
 5652 0147 49       		.uleb128 0x49
 5653 0148 13       		.uleb128 0x13
 5654 0149 02       		.uleb128 0x2
 5655 014a 18       		.uleb128 0x18
 5656 014b 00       		.byte	0
 5657 014c 00       		.byte	0
 5658 014d 18       		.uleb128 0x18
 5659 014e 2E       		.uleb128 0x2e
 5660 014f 01       		.byte	0x1
 5661 0150 3F       		.uleb128 0x3f
 5662 0151 19       		.uleb128 0x19
 5663 0152 03       		.uleb128 0x3
 5664 0153 0E       		.uleb128 0xe
 5665 0154 3A       		.uleb128 0x3a
 5666 0155 0B       		.uleb128 0xb
 5667 0156 3B       		.uleb128 0x3b
 5668 0157 05       		.uleb128 0x5
 5669 0158 27       		.uleb128 0x27
 5670 0159 19       		.uleb128 0x19
 5671 015a 49       		.uleb128 0x49
 5672 015b 13       		.uleb128 0x13
 5673 015c 11       		.uleb128 0x11
 5674 015d 01       		.uleb128 0x1
 5675 015e 12       		.uleb128 0x12
 5676 015f 06       		.uleb128 0x6
 5677 0160 40       		.uleb128 0x40
 5678 0161 18       		.uleb128 0x18
 5679 0162 9642     		.uleb128 0x2116
 5680 0164 19       		.uleb128 0x19
 5681 0165 01       		.uleb128 0x1
 5682 0166 13       		.uleb128 0x13
 5683 0167 00       		.byte	0
 5684 0168 00       		.byte	0
 5685 0169 19       		.uleb128 0x19
 5686 016a 05       		.uleb128 0x5
 5687 016b 00       		.byte	0
 5688 016c 03       		.uleb128 0x3
 5689 016d 0E       		.uleb128 0xe
 5690 016e 3A       		.uleb128 0x3a
 5691 016f 0B       		.uleb128 0xb
 5692 0170 3B       		.uleb128 0x3b
 5693 0171 05       		.uleb128 0x5
 5694 0172 49       		.uleb128 0x49
 5695 0173 13       		.uleb128 0x13
 5696 0174 02       		.uleb128 0x2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 126


 5697 0175 18       		.uleb128 0x18
 5698 0176 00       		.byte	0
 5699 0177 00       		.byte	0
 5700 0178 1A       		.uleb128 0x1a
 5701 0179 34       		.uleb128 0x34
 5702 017a 00       		.byte	0
 5703 017b 03       		.uleb128 0x3
 5704 017c 08       		.uleb128 0x8
 5705 017d 3A       		.uleb128 0x3a
 5706 017e 0B       		.uleb128 0xb
 5707 017f 3B       		.uleb128 0x3b
 5708 0180 05       		.uleb128 0x5
 5709 0181 49       		.uleb128 0x49
 5710 0182 13       		.uleb128 0x13
 5711 0183 02       		.uleb128 0x2
 5712 0184 18       		.uleb128 0x18
 5713 0185 00       		.byte	0
 5714 0186 00       		.byte	0
 5715 0187 1B       		.uleb128 0x1b
 5716 0188 2E       		.uleb128 0x2e
 5717 0189 01       		.byte	0x1
 5718 018a 3F       		.uleb128 0x3f
 5719 018b 19       		.uleb128 0x19
 5720 018c 03       		.uleb128 0x3
 5721 018d 0E       		.uleb128 0xe
 5722 018e 3A       		.uleb128 0x3a
 5723 018f 0B       		.uleb128 0xb
 5724 0190 3B       		.uleb128 0x3b
 5725 0191 05       		.uleb128 0x5
 5726 0192 49       		.uleb128 0x49
 5727 0193 13       		.uleb128 0x13
 5728 0194 11       		.uleb128 0x11
 5729 0195 01       		.uleb128 0x1
 5730 0196 12       		.uleb128 0x12
 5731 0197 06       		.uleb128 0x6
 5732 0198 40       		.uleb128 0x40
 5733 0199 18       		.uleb128 0x18
 5734 019a 9642     		.uleb128 0x2116
 5735 019c 19       		.uleb128 0x19
 5736 019d 01       		.uleb128 0x1
 5737 019e 13       		.uleb128 0x13
 5738 019f 00       		.byte	0
 5739 01a0 00       		.byte	0
 5740 01a1 1C       		.uleb128 0x1c
 5741 01a2 34       		.uleb128 0x34
 5742 01a3 00       		.byte	0
 5743 01a4 03       		.uleb128 0x3
 5744 01a5 0E       		.uleb128 0xe
 5745 01a6 3A       		.uleb128 0x3a
 5746 01a7 0B       		.uleb128 0xb
 5747 01a8 3B       		.uleb128 0x3b
 5748 01a9 05       		.uleb128 0x5
 5749 01aa 49       		.uleb128 0x49
 5750 01ab 13       		.uleb128 0x13
 5751 01ac 02       		.uleb128 0x2
 5752 01ad 18       		.uleb128 0x18
 5753 01ae 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 127


 5754 01af 00       		.byte	0
 5755 01b0 1D       		.uleb128 0x1d
 5756 01b1 2E       		.uleb128 0x2e
 5757 01b2 00       		.byte	0
 5758 01b3 3F       		.uleb128 0x3f
 5759 01b4 19       		.uleb128 0x19
 5760 01b5 03       		.uleb128 0x3
 5761 01b6 0E       		.uleb128 0xe
 5762 01b7 3A       		.uleb128 0x3a
 5763 01b8 0B       		.uleb128 0xb
 5764 01b9 3B       		.uleb128 0x3b
 5765 01ba 05       		.uleb128 0x5
 5766 01bb 11       		.uleb128 0x11
 5767 01bc 01       		.uleb128 0x1
 5768 01bd 12       		.uleb128 0x12
 5769 01be 06       		.uleb128 0x6
 5770 01bf 40       		.uleb128 0x40
 5771 01c0 18       		.uleb128 0x18
 5772 01c1 9642     		.uleb128 0x2116
 5773 01c3 19       		.uleb128 0x19
 5774 01c4 00       		.byte	0
 5775 01c5 00       		.byte	0
 5776 01c6 1E       		.uleb128 0x1e
 5777 01c7 2E       		.uleb128 0x2e
 5778 01c8 00       		.byte	0
 5779 01c9 3F       		.uleb128 0x3f
 5780 01ca 19       		.uleb128 0x19
 5781 01cb 03       		.uleb128 0x3
 5782 01cc 0E       		.uleb128 0xe
 5783 01cd 3A       		.uleb128 0x3a
 5784 01ce 0B       		.uleb128 0xb
 5785 01cf 3B       		.uleb128 0x3b
 5786 01d0 05       		.uleb128 0x5
 5787 01d1 49       		.uleb128 0x49
 5788 01d2 13       		.uleb128 0x13
 5789 01d3 11       		.uleb128 0x11
 5790 01d4 01       		.uleb128 0x1
 5791 01d5 12       		.uleb128 0x12
 5792 01d6 06       		.uleb128 0x6
 5793 01d7 40       		.uleb128 0x40
 5794 01d8 18       		.uleb128 0x18
 5795 01d9 9642     		.uleb128 0x2116
 5796 01db 19       		.uleb128 0x19
 5797 01dc 00       		.byte	0
 5798 01dd 00       		.byte	0
 5799 01de 1F       		.uleb128 0x1f
 5800 01df 2E       		.uleb128 0x2e
 5801 01e0 01       		.byte	0x1
 5802 01e1 3F       		.uleb128 0x3f
 5803 01e2 19       		.uleb128 0x19
 5804 01e3 03       		.uleb128 0x3
 5805 01e4 0E       		.uleb128 0xe
 5806 01e5 3A       		.uleb128 0x3a
 5807 01e6 0B       		.uleb128 0xb
 5808 01e7 3B       		.uleb128 0x3b
 5809 01e8 05       		.uleb128 0x5
 5810 01e9 11       		.uleb128 0x11
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 128


 5811 01ea 01       		.uleb128 0x1
 5812 01eb 12       		.uleb128 0x12
 5813 01ec 06       		.uleb128 0x6
 5814 01ed 40       		.uleb128 0x40
 5815 01ee 18       		.uleb128 0x18
 5816 01ef 9642     		.uleb128 0x2116
 5817 01f1 19       		.uleb128 0x19
 5818 01f2 01       		.uleb128 0x1
 5819 01f3 13       		.uleb128 0x13
 5820 01f4 00       		.byte	0
 5821 01f5 00       		.byte	0
 5822 01f6 20       		.uleb128 0x20
 5823 01f7 2E       		.uleb128 0x2e
 5824 01f8 00       		.byte	0
 5825 01f9 3F       		.uleb128 0x3f
 5826 01fa 19       		.uleb128 0x19
 5827 01fb 03       		.uleb128 0x3
 5828 01fc 0E       		.uleb128 0xe
 5829 01fd 3A       		.uleb128 0x3a
 5830 01fe 0B       		.uleb128 0xb
 5831 01ff 3B       		.uleb128 0x3b
 5832 0200 05       		.uleb128 0x5
 5833 0201 11       		.uleb128 0x11
 5834 0202 01       		.uleb128 0x1
 5835 0203 12       		.uleb128 0x12
 5836 0204 06       		.uleb128 0x6
 5837 0205 40       		.uleb128 0x40
 5838 0206 18       		.uleb128 0x18
 5839 0207 9742     		.uleb128 0x2117
 5840 0209 19       		.uleb128 0x19
 5841 020a 00       		.byte	0
 5842 020b 00       		.byte	0
 5843 020c 21       		.uleb128 0x21
 5844 020d 34       		.uleb128 0x34
 5845 020e 00       		.byte	0
 5846 020f 03       		.uleb128 0x3
 5847 0210 0E       		.uleb128 0xe
 5848 0211 3A       		.uleb128 0x3a
 5849 0212 0B       		.uleb128 0xb
 5850 0213 3B       		.uleb128 0x3b
 5851 0214 05       		.uleb128 0x5
 5852 0215 49       		.uleb128 0x49
 5853 0216 13       		.uleb128 0x13
 5854 0217 00       		.byte	0
 5855 0218 00       		.byte	0
 5856 0219 22       		.uleb128 0x22
 5857 021a 0B       		.uleb128 0xb
 5858 021b 01       		.byte	0x1
 5859 021c 55       		.uleb128 0x55
 5860 021d 17       		.uleb128 0x17
 5861 021e 00       		.byte	0
 5862 021f 00       		.byte	0
 5863 0220 23       		.uleb128 0x23
 5864 0221 2E       		.uleb128 0x2e
 5865 0222 00       		.byte	0
 5866 0223 3F       		.uleb128 0x3f
 5867 0224 19       		.uleb128 0x19
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 129


 5868 0225 03       		.uleb128 0x3
 5869 0226 0E       		.uleb128 0xe
 5870 0227 3A       		.uleb128 0x3a
 5871 0228 0B       		.uleb128 0xb
 5872 0229 3B       		.uleb128 0x3b
 5873 022a 05       		.uleb128 0x5
 5874 022b 49       		.uleb128 0x49
 5875 022c 13       		.uleb128 0x13
 5876 022d 11       		.uleb128 0x11
 5877 022e 01       		.uleb128 0x1
 5878 022f 12       		.uleb128 0x12
 5879 0230 06       		.uleb128 0x6
 5880 0231 40       		.uleb128 0x40
 5881 0232 18       		.uleb128 0x18
 5882 0233 9742     		.uleb128 0x2117
 5883 0235 19       		.uleb128 0x19
 5884 0236 00       		.byte	0
 5885 0237 00       		.byte	0
 5886 0238 24       		.uleb128 0x24
 5887 0239 34       		.uleb128 0x34
 5888 023a 00       		.byte	0
 5889 023b 03       		.uleb128 0x3
 5890 023c 0E       		.uleb128 0xe
 5891 023d 3A       		.uleb128 0x3a
 5892 023e 0B       		.uleb128 0xb
 5893 023f 3B       		.uleb128 0x3b
 5894 0240 05       		.uleb128 0x5
 5895 0241 49       		.uleb128 0x49
 5896 0242 13       		.uleb128 0x13
 5897 0243 3F       		.uleb128 0x3f
 5898 0244 19       		.uleb128 0x19
 5899 0245 3C       		.uleb128 0x3c
 5900 0246 19       		.uleb128 0x19
 5901 0247 00       		.byte	0
 5902 0248 00       		.byte	0
 5903 0249 25       		.uleb128 0x25
 5904 024a 34       		.uleb128 0x34
 5905 024b 00       		.byte	0
 5906 024c 03       		.uleb128 0x3
 5907 024d 0E       		.uleb128 0xe
 5908 024e 3A       		.uleb128 0x3a
 5909 024f 0B       		.uleb128 0xb
 5910 0250 3B       		.uleb128 0x3b
 5911 0251 0B       		.uleb128 0xb
 5912 0252 49       		.uleb128 0x49
 5913 0253 13       		.uleb128 0x13
 5914 0254 3F       		.uleb128 0x3f
 5915 0255 19       		.uleb128 0x19
 5916 0256 02       		.uleb128 0x2
 5917 0257 18       		.uleb128 0x18
 5918 0258 00       		.byte	0
 5919 0259 00       		.byte	0
 5920 025a 26       		.uleb128 0x26
 5921 025b 21       		.uleb128 0x21
 5922 025c 00       		.byte	0
 5923 025d 49       		.uleb128 0x49
 5924 025e 13       		.uleb128 0x13
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 130


 5925 025f 2F       		.uleb128 0x2f
 5926 0260 05       		.uleb128 0x5
 5927 0261 00       		.byte	0
 5928 0262 00       		.byte	0
 5929 0263 27       		.uleb128 0x27
 5930 0264 34       		.uleb128 0x34
 5931 0265 00       		.byte	0
 5932 0266 03       		.uleb128 0x3
 5933 0267 08       		.uleb128 0x8
 5934 0268 3A       		.uleb128 0x3a
 5935 0269 0B       		.uleb128 0xb
 5936 026a 3B       		.uleb128 0x3b
 5937 026b 0B       		.uleb128 0xb
 5938 026c 49       		.uleb128 0x49
 5939 026d 13       		.uleb128 0x13
 5940 026e 3F       		.uleb128 0x3f
 5941 026f 19       		.uleb128 0x19
 5942 0270 02       		.uleb128 0x2
 5943 0271 18       		.uleb128 0x18
 5944 0272 00       		.byte	0
 5945 0273 00       		.byte	0
 5946 0274 00       		.byte	0
 5947              		.section	.debug_aranges,"",%progbits
 5948 0000 D4000000 		.4byte	0xd4
 5949 0004 0200     		.2byte	0x2
 5950 0006 00000000 		.4byte	.Ldebug_info0
 5951 000a 04       		.byte	0x4
 5952 000b 00       		.byte	0
 5953 000c 0000     		.2byte	0
 5954 000e 0000     		.2byte	0
 5955 0010 00000000 		.4byte	.LFB64
 5956 0014 44000000 		.4byte	.LFE64-.LFB64
 5957 0018 00000000 		.4byte	.LFB65
 5958 001c 6C000000 		.4byte	.LFE65-.LFB65
 5959 0020 00000000 		.4byte	.LFB66
 5960 0024 32000000 		.4byte	.LFE66-.LFB66
 5961 0028 00000000 		.4byte	.LFB67
 5962 002c 20000000 		.4byte	.LFE67-.LFB67
 5963 0030 00000000 		.4byte	.LFB68
 5964 0034 40000000 		.4byte	.LFE68-.LFB68
 5965 0038 00000000 		.4byte	.LFB69
 5966 003c DC000000 		.4byte	.LFE69-.LFB69
 5967 0040 00000000 		.4byte	.LFB70
 5968 0044 1C000000 		.4byte	.LFE70-.LFB70
 5969 0048 00000000 		.4byte	.LFB71
 5970 004c 28000000 		.4byte	.LFE71-.LFB71
 5971 0050 00000000 		.4byte	.LFB72
 5972 0054 C8000000 		.4byte	.LFE72-.LFB72
 5973 0058 00000000 		.4byte	.LFB73
 5974 005c 00010000 		.4byte	.LFE73-.LFB73
 5975 0060 00000000 		.4byte	.LFB74
 5976 0064 78000000 		.4byte	.LFE74-.LFB74
 5977 0068 00000000 		.4byte	.LFB75
 5978 006c 74010000 		.4byte	.LFE75-.LFB75
 5979 0070 00000000 		.4byte	.LFB76
 5980 0074 B8000000 		.4byte	.LFE76-.LFB76
 5981 0078 00000000 		.4byte	.LFB77
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 131


 5982 007c 1C000000 		.4byte	.LFE77-.LFB77
 5983 0080 00000000 		.4byte	.LFB78
 5984 0084 28000000 		.4byte	.LFE78-.LFB78
 5985 0088 00000000 		.4byte	.LFB79
 5986 008c 84000000 		.4byte	.LFE79-.LFB79
 5987 0090 00000000 		.4byte	.LFB80
 5988 0094 4C000000 		.4byte	.LFE80-.LFB80
 5989 0098 00000000 		.4byte	.LFB81
 5990 009c D8060000 		.4byte	.LFE81-.LFB81
 5991 00a0 00000000 		.4byte	.LFB82
 5992 00a4 68010000 		.4byte	.LFE82-.LFB82
 5993 00a8 00000000 		.4byte	.LFB83
 5994 00ac 44010000 		.4byte	.LFE83-.LFB83
 5995 00b0 00000000 		.4byte	.LFB84
 5996 00b4 14000000 		.4byte	.LFE84-.LFB84
 5997 00b8 00000000 		.4byte	.LFB85
 5998 00bc 1A000000 		.4byte	.LFE85-.LFB85
 5999 00c0 00000000 		.4byte	.LFB86
 6000 00c4 2A000000 		.4byte	.LFE86-.LFB86
 6001 00c8 00000000 		.4byte	.LFB87
 6002 00cc 7C020000 		.4byte	.LFE87-.LFB87
 6003 00d0 00000000 		.4byte	0
 6004 00d4 00000000 		.4byte	0
 6005              		.section	.debug_ranges,"",%progbits
 6006              	.Ldebug_ranges0:
 6007 0000 CA030000 		.4byte	.LBB9
 6008 0004 56060000 		.4byte	.LBE9
 6009 0008 58060000 		.4byte	.LBB10
 6010 000c 60060000 		.4byte	.LBE10
 6011 0010 62060000 		.4byte	.LBB11
 6012 0014 6A060000 		.4byte	.LBE11
 6013 0018 00000000 		.4byte	0
 6014 001c 00000000 		.4byte	0
 6015 0020 00000000 		.4byte	.LFB64
 6016 0024 44000000 		.4byte	.LFE64
 6017 0028 00000000 		.4byte	.LFB65
 6018 002c 6C000000 		.4byte	.LFE65
 6019 0030 00000000 		.4byte	.LFB66
 6020 0034 32000000 		.4byte	.LFE66
 6021 0038 00000000 		.4byte	.LFB67
 6022 003c 20000000 		.4byte	.LFE67
 6023 0040 00000000 		.4byte	.LFB68
 6024 0044 40000000 		.4byte	.LFE68
 6025 0048 00000000 		.4byte	.LFB69
 6026 004c DC000000 		.4byte	.LFE69
 6027 0050 00000000 		.4byte	.LFB70
 6028 0054 1C000000 		.4byte	.LFE70
 6029 0058 00000000 		.4byte	.LFB71
 6030 005c 28000000 		.4byte	.LFE71
 6031 0060 00000000 		.4byte	.LFB72
 6032 0064 C8000000 		.4byte	.LFE72
 6033 0068 00000000 		.4byte	.LFB73
 6034 006c 00010000 		.4byte	.LFE73
 6035 0070 00000000 		.4byte	.LFB74
 6036 0074 78000000 		.4byte	.LFE74
 6037 0078 00000000 		.4byte	.LFB75
 6038 007c 74010000 		.4byte	.LFE75
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 132


 6039 0080 00000000 		.4byte	.LFB76
 6040 0084 B8000000 		.4byte	.LFE76
 6041 0088 00000000 		.4byte	.LFB77
 6042 008c 1C000000 		.4byte	.LFE77
 6043 0090 00000000 		.4byte	.LFB78
 6044 0094 28000000 		.4byte	.LFE78
 6045 0098 00000000 		.4byte	.LFB79
 6046 009c 84000000 		.4byte	.LFE79
 6047 00a0 00000000 		.4byte	.LFB80
 6048 00a4 4C000000 		.4byte	.LFE80
 6049 00a8 00000000 		.4byte	.LFB81
 6050 00ac D8060000 		.4byte	.LFE81
 6051 00b0 00000000 		.4byte	.LFB82
 6052 00b4 68010000 		.4byte	.LFE82
 6053 00b8 00000000 		.4byte	.LFB83
 6054 00bc 44010000 		.4byte	.LFE83
 6055 00c0 00000000 		.4byte	.LFB84
 6056 00c4 14000000 		.4byte	.LFE84
 6057 00c8 00000000 		.4byte	.LFB85
 6058 00cc 1A000000 		.4byte	.LFE85
 6059 00d0 00000000 		.4byte	.LFB86
 6060 00d4 2A000000 		.4byte	.LFE86
 6061 00d8 00000000 		.4byte	.LFB87
 6062 00dc 7C020000 		.4byte	.LFE87
 6063 00e0 00000000 		.4byte	0
 6064 00e4 00000000 		.4byte	0
 6065              		.section	.debug_line,"",%progbits
 6066              	.Ldebug_line0:
 6067 0000 1D060000 		.section	.debug_str,"MS",%progbits,1
 6067      02004702 
 6067      00000201 
 6067      FB0E0D00 
 6067      01010101 
 6068              	.LASF193:
 6069 0000 74696D65 		.ascii	"timeToValve\000"
 6069      546F5661 
 6069      6C766500 
 6070              	.LASF148:
 6071 000c 676D745F 		.ascii	"gmt_offset\000"
 6071      6F666673 
 6071      657400
 6072              	.LASF16:
 6073 0017 75696E74 		.ascii	"uint16\000"
 6073      313600
 6074              	.LASF39:
 6075 001e 76616C75 		.ascii	"value\000"
 6075      6500
 6076              	.LASF28:
 6077 0024 746D5F68 		.ascii	"tm_hour\000"
 6077      6F757200 
 6078              	.LASF33:
 6079 002c 746D5F79 		.ascii	"tm_yday\000"
 6079      64617900 
 6080              	.LASF174:
 6081 0034 6175746F 		.ascii	"autosampler_enabled\000"
 6081      73616D70 
 6081      6C65725F 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 133


 6081      656E6162 
 6081      6C656400 
 6082              	.LASF156:
 6083 0048 62756666 		.ascii	"buffer_overflow\000"
 6083      65725F6F 
 6083      76657266 
 6083      6C6F7700 
 6084              	.LASF4:
 6085 0058 5F5F7569 		.ascii	"__uint8_t\000"
 6085      6E74385F 
 6085      7400
 6086              	.LASF137:
 6087 0062 6175746F 		.ascii	"autosampler_freq\000"
 6087      73616D70 
 6087      6C65725F 
 6087      66726571 
 6087      00
 6088              	.LASF75:
 6089 0073 636F756E 		.ascii	"countDownResetCondition\000"
 6089      74446F77 
 6089      6E526573 
 6089      6574436F 
 6089      6E646974 
 6090              	.LASF195:
 6091 008b 74696D65 		.ascii	"timeToAutosampler\000"
 6091      546F4175 
 6091      746F7361 
 6091      6D706C65 
 6091      7200
 6092              	.LASF171:
 6093 009d 76616C76 		.ascii	"valve_type\000"
 6093      655F7479 
 6093      706500
 6094              	.LASF55:
 6095 00a8 6C6F6E67 		.ascii	"longitude\000"
 6095      69747564 
 6095      6500
 6096              	.LASF198:
 6097 00b2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6097      43313120 
 6097      352E342E 
 6097      31203230 
 6097      31363036 
 6098 00e5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 6098      20726576 
 6098      6973696F 
 6098      6E203233 
 6098      37373135 
 6099 0118 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 6099      66756E63 
 6099      74696F6E 
 6099      2D736563 
 6099      74696F6E 
 6100              	.LASF151:
 6101 0140 6D6F6465 		.ascii	"modem_wakeup\000"
 6101      6D5F7761 
 6101      6B657570 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 134


 6101      00
 6102              	.LASF10:
 6103 014d 6C6F6E67 		.ascii	"long long unsigned int\000"
 6103      206C6F6E 
 6103      6720756E 
 6103      7369676E 
 6103      65642069 
 6104              	.LASF131:
 6105 0164 73616D70 		.ascii	"sample_freq\000"
 6105      6C655F66 
 6105      72657100 
 6106              	.LASF160:
 6107 0170 6D6F6465 		.ascii	"modem_state\000"
 6107      6D5F7374 
 6107      61746500 
 6108              	.LASF102:
 6109 017c 74657374 		.ascii	"test\000"
 6109      00
 6110              	.LASF181:
 6111 0181 616C6172 		.ascii	"alarmMeasure\000"
 6111      6D4D6561 
 6111      73757265 
 6111      00
 6112              	.LASF155:
 6113 018e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6113      52784275 
 6113      66666572 
 6113      00
 6114              	.LASF162:
 6115 019b 6D6F6465 		.ascii	"modem_stats\000"
 6115      6D5F7374 
 6115      61747300 
 6116              	.LASF9:
 6117 01a7 6C6F6E67 		.ascii	"long long int\000"
 6117      206C6F6E 
 6117      6720696E 
 6117      7400
 6118              	.LASF0:
 6119 01b5 7369676E 		.ascii	"signed char\000"
 6119      65642063 
 6119      68617200 
 6120              	.LASF48:
 6121 01c1 65636E6F 		.ascii	"ecno\000"
 6121      00
 6122              	.LASF182:
 6123 01c6 74696D65 		.ascii	"timeToMeasure\000"
 6123      546F4D65 
 6123      61737572 
 6123      6500
 6124              	.LASF51:
 6125 01d4 74696D65 		.ascii	"time_to_network_connect\000"
 6125      5F746F5F 
 6125      6E657477 
 6125      6F726B5F 
 6125      636F6E6E 
 6126              	.LASF184:
 6127 01ec 74696D65 		.ascii	"timeToSync\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 135


 6127      546F5379 
 6127      6E6300
 6128              	.LASF136:
 6129 01f7 646F776E 		.ascii	"down_level_freq\000"
 6129      5F6C6576 
 6129      656C5F66 
 6129      72657100 
 6130              	.LASF177:
 6131 0207 68747470 		.ascii	"http_body\000"
 6131      5F626F64 
 6131      7900
 6132              	.LASF113:
 6133 0211 7365745F 		.ascii	"set_up_internet_connection\000"
 6133      75705F69 
 6133      6E746572 
 6133      6E65745F 
 6133      636F6E6E 
 6134              	.LASF170:
 6135 022c 76616C76 		.ascii	"valve_diameter\000"
 6135      655F6469 
 6135      616D6574 
 6135      657200
 6136              	.LASF147:
 6137 023b 7365636F 		.ascii	"second\000"
 6137      6E6400
 6138              	.LASF143:
 6139 0242 79656172 		.ascii	"year\000"
 6139      00
 6140              	.LASF190:
 6141 0247 616C6172 		.ascii	"alarmDownstreamLevelSensor\000"
 6141      6D446F77 
 6141      6E737472 
 6141      65616D4C 
 6141      6576656C 
 6142              	.LASF138:
 6143 0262 74656D70 		.ascii	"temp\000"
 6143      00
 6144              	.LASF6:
 6145 0267 6C6F6E67 		.ascii	"long int\000"
 6145      20696E74 
 6145      00
 6146              	.LASF46:
 6147 0270 72786C65 		.ascii	"rxlev\000"
 6147      7600
 6148              	.LASF73:
 6149 0276 63757272 		.ascii	"currentCountDownValue\000"
 6149      656E7443 
 6149      6F756E74 
 6149      446F776E 
 6149      56616C75 
 6150              	.LASF149:
 6151 028c 6D6F6465 		.ascii	"modem_get_state\000"
 6151      6D5F6765 
 6151      745F7374 
 6151      61746500 
 6152              	.LASF56:
 6153 029c 616C7469 		.ascii	"altitude\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 136


 6153      74756465 
 6153      00
 6154              	.LASF15:
 6155 02a5 75696E74 		.ascii	"uint8\000"
 6155      3800
 6156              	.LASF135:
 6157 02ab 6C657665 		.ascii	"level_sensor_freq\000"
 6157      6C5F7365 
 6157      6E736F72 
 6157      5F667265 
 6157      7100
 6158              	.LASF187:
 6159 02bd 74696D65 		.ascii	"timeToAppLED\000"
 6159      546F4170 
 6159      704C4544 
 6159      00
 6160              	.LASF19:
 6161 02ca 696E7433 		.ascii	"int32\000"
 6161      3200
 6162              	.LASF60:
 6163 02d0 6E6F6465 		.ascii	"node_type\000"
 6163      5F747970 
 6163      6500
 6164              	.LASF139:
 6165 02da 6D6F6465 		.ascii	"modem_configure_settings\000"
 6165      6D5F636F 
 6165      6E666967 
 6165      7572655F 
 6165      73657474 
 6166              	.LASF121:
 6167 02f3 735F7369 		.ascii	"s_sim_type\000"
 6167      6D5F7479 
 6167      706500
 6168              	.LASF103:
 6169 02fe 6E657477 		.ascii	"network_time\000"
 6169      6F726B5F 
 6169      74696D65 
 6169      00
 6170              	.LASF3:
 6171 030b 73686F72 		.ascii	"short unsigned int\000"
 6171      7420756E 
 6171      7369676E 
 6171      65642069 
 6171      6E7400
 6172              	.LASF17:
 6173 031e 75696E74 		.ascii	"uint32\000"
 6173      333200
 6174              	.LASF99:
 6175 0325 696E7465 		.ascii	"interval\000"
 6175      7276616C 
 6175      00
 6176              	.LASF72:
 6177 032e 636F756E 		.ascii	"countDownValue\000"
 6177      74446F77 
 6177      6E56616C 
 6177      756500
 6178              	.LASF141:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 137


 6179 033d 6D6F6465 		.ascii	"modem_get_network_time\000"
 6179      6D5F6765 
 6179      745F6E65 
 6179      74776F72 
 6179      6B5F7469 
 6180              	.LASF30:
 6181 0354 746D5F6D 		.ascii	"tm_mon\000"
 6181      6F6E00
 6182              	.LASF126:
 6183 035b 735F6C65 		.ascii	"s_level_sensor\000"
 6183      76656C5F 
 6183      73656E73 
 6183      6F7200
 6184              	.LASF64:
 6185 036a 64656275 		.ascii	"debug_level\000"
 6185      675F6C65 
 6185      76656C00 
 6186              	.LASF150:
 6187 0376 6D6F6465 		.ascii	"modem_sleep\000"
 6187      6D5F736C 
 6187      65657000 
 6188              	.LASF124:
 6189 0382 735F6465 		.ascii	"s_debug_freq\000"
 6189      6275675F 
 6189      66726571 
 6189      00
 6190              	.LASF117:
 6191 038f 75706461 		.ascii	"updatable_parameters_initialize\000"
 6191      7461626C 
 6191      655F7061 
 6191      72616D65 
 6191      74657273 
 6192              	.LASF31:
 6193 03af 746D5F79 		.ascii	"tm_year\000"
 6193      65617200 
 6194              	.LASF183:
 6195 03b7 616C6172 		.ascii	"alarmSync\000"
 6195      6D53796E 
 6195      6300
 6196              	.LASF164:
 6197 03c1 4170705F 		.ascii	"App_LED_enabled\000"
 6197      4C45445F 
 6197      656E6162 
 6197      6C656400 
 6198              	.LASF41:
 6199 03d1 6B65795F 		.ascii	"key_value_t\000"
 6199      76616C75 
 6199      655F7400 
 6200              	.LASF90:
 6201 03dd 7077725F 		.ascii	"pwr_check\000"
 6201      63686563 
 6201      6B00
 6202              	.LASF8:
 6203 03e7 6C6F6E67 		.ascii	"long unsigned int\000"
 6203      20756E73 
 6203      69676E65 
 6203      6420696E 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 138


 6203      7400
 6204              	.LASF105:
 6205 03f9 65787472 		.ascii	"extract_string\000"
 6205      6163745F 
 6205      73747269 
 6205      6E6700
 6206              	.LASF95:
 6207 0408 74696D65 		.ascii	"timeout\000"
 6207      6F757400 
 6208              	.LASF118:
 6209 0410 6765745F 		.ascii	"get_cell_network_stats\000"
 6209      63656C6C 
 6209      5F6E6574 
 6209      776F726B 
 6209      5F737461 
 6210              	.LASF40:
 6211 0427 74696D65 		.ascii	"timeStamp\000"
 6211      5374616D 
 6211      7000
 6212              	.LASF57:
 6213 0431 74696D65 		.ascii	"time_to_lock\000"
 6213      5F746F5F 
 6213      6C6F636B 
 6213      00
 6214              	.LASF159:
 6215 043e 64617461 		.ascii	"data\000"
 6215      00
 6216              	.LASF81:
 6217 0443 65705F70 		.ascii	"ep_port\000"
 6217      6F727400 
 6218              	.LASF34:
 6219 044b 746D5F69 		.ascii	"tm_isdst\000"
 6219      73647374 
 6219      00
 6220              	.LASF77:
 6221 0454 6D6F6465 		.ascii	"modem_info\000"
 6221      6D5F696E 
 6221      666F00
 6222              	.LASF80:
 6223 045f 65705F68 		.ascii	"ep_host\000"
 6223      6F737400 
 6224              	.LASF78:
 6225 0467 63686970 		.ascii	"chip_uniqueId\000"
 6225      5F756E69 
 6225      71756549 
 6225      6400
 6226              	.LASF100:
 6227 0475 6D6F6465 		.ascii	"modem_power_up\000"
 6227      6D5F706F 
 6227      7765725F 
 6227      757000
 6228              	.LASF199:
 6229 0484 6D6F6465 		.ascii	"modem.c\000"
 6229      6D2E6300 
 6230              	.LASF107:
 6231 048c 62656769 		.ascii	"beginMarker\000"
 6231      6E4D6172 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 139


 6231      6B657200 
 6232              	.LASF109:
 6233 0498 74617267 		.ascii	"target\000"
 6233      657400
 6234              	.LASF52:
 6235 049f 74696D65 		.ascii	"time_to_acquire_ip\000"
 6235      5F746F5F 
 6235      61637175 
 6235      6972655F 
 6235      697000
 6236              	.LASF108:
 6237 04b2 656E644D 		.ascii	"endMarker\000"
 6237      61726B65 
 6237      7200
 6238              	.LASF2:
 6239 04bc 73686F72 		.ascii	"short int\000"
 6239      7420696E 
 6239      7400
 6240              	.LASF142:
 6241 04c6 65706F63 		.ascii	"epoch_time\000"
 6241      685F7469 
 6241      6D6500
 6242              	.LASF5:
 6243 04d1 5F5F696E 		.ascii	"__int32_t\000"
 6243      7433325F 
 6243      7400
 6244              	.LASF186:
 6245 04db 616C6172 		.ascii	"alarmAppLED\000"
 6245      6D417070 
 6245      4C454400 
 6246              	.LASF106:
 6247 04e7 66726F6D 		.ascii	"from\000"
 6247      00
 6248              	.LASF112:
 6249 04ec 63726567 		.ascii	"creg\000"
 6249      00
 6250              	.LASF133:
 6251 04f1 64656275 		.ascii	"debug_freq\000"
 6251      675F6672 
 6251      657100
 6252              	.LASF96:
 6253 04fc 61745F61 		.ascii	"at_attempt\000"
 6253      7474656D 
 6253      707400
 6254              	.LASF128:
 6255 0507 735F7661 		.ascii	"s_valve\000"
 6255      6C766500 
 6256              	.LASF169:
 6257 050f 646F776E 		.ascii	"downstream_level_sensor_enabled\000"
 6257      73747265 
 6257      616D5F6C 
 6257      6576656C 
 6257      5F73656E 
 6258              	.LASF104:
 6259 052f 61745F77 		.ascii	"at_write_command\000"
 6259      72697465 
 6259      5F636F6D 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 140


 6259      6D616E64 
 6259      00
 6260              	.LASF79:
 6261 0540 7379735F 		.ascii	"sys_info_t\000"
 6261      696E666F 
 6261      5F7400
 6262              	.LASF71:
 6263 054b 75706461 		.ascii	"updatable_parameters_t\000"
 6263      7461626C 
 6263      655F7061 
 6263      72616D65 
 6263      74657273 
 6264              	.LASF132:
 6265 0562 7265706F 		.ascii	"report_freq\000"
 6265      72745F66 
 6265      72657100 
 6266              	.LASF157:
 6267 056e 64617461 		.ascii	"dataPointsInStack\000"
 6267      506F696E 
 6267      7473496E 
 6267      53746163 
 6267      6B00
 6268              	.LASF175:
 6269 0580 6175746F 		.ascii	"autosampler_inbox\000"
 6269      73616D70 
 6269      6C65725F 
 6269      696E626F 
 6269      7800
 6270              	.LASF27:
 6271 0592 746D5F6D 		.ascii	"tm_min\000"
 6271      696E00
 6272              	.LASF20:
 6273 0599 666C6F61 		.ascii	"float32\000"
 6273      74333200 
 6274              	.LASF25:
 6275 05a1 73697A65 		.ascii	"sizetype\000"
 6275      74797065 
 6275      00
 6276              	.LASF127:
 6277 05aa 735F646F 		.ascii	"s_down_level_sensor\000"
 6277      776E5F6C 
 6277      6576656C 
 6277      5F73656E 
 6277      736F7200 
 6278              	.LASF144:
 6279 05be 6D6F6E74 		.ascii	"month\000"
 6279      6800
 6280              	.LASF111:
 6281 05c4 69735F63 		.ascii	"is_connected_to_cell_network\000"
 6281      6F6E6E65 
 6281      63746564 
 6281      5F746F5F 
 6281      63656C6C 
 6282              	.LASF54:
 6283 05e1 6C617469 		.ascii	"latitude\000"
 6283      74756465 
 6283      00
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 141


 6284              	.LASF35:
 6285 05ea 74657374 		.ascii	"test_name\000"
 6285      5F6E616D 
 6285      6500
 6286              	.LASF18:
 6287 05f4 696E7431 		.ascii	"int16\000"
 6287      3600
 6288              	.LASF154:
 6289 05fa 6770735F 		.ascii	"gps_status\000"
 6289      73746174 
 6289      757300
 6290              	.LASF185:
 6291 0605 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 6291      546F5379 
 6291      636E5265 
 6291      6D6F7465 
 6291      50617261 
 6292              	.LASF101:
 6293 061c 6D6F6465 		.ascii	"modem_test\000"
 6293      6D5F7465 
 6293      737400
 6294              	.LASF116:
 6295 0627 6D617463 		.ascii	"match\000"
 6295      6800
 6296              	.LASF163:
 6297 062d 75706461 		.ascii	"updatable_parameters\000"
 6297      7461626C 
 6297      655F7061 
 6297      72616D65 
 6297      74657273 
 6298              	.LASF200:
 6299 0642 433A5C55 		.ascii	"C:\\Users\\jniej\\OneDrive\\Documents\\GitHub\\noto"
 6299      73657273 
 6299      5C6A6E69 
 6299      656A5C4F 
 6299      6E654472 
 6300 066f 72694F53 		.ascii	"riOS\\notoriOS.cydsn\000"
 6300      5C6E6F74 
 6300      6F72694F 
 6300      532E6379 
 6300      64736E00 
 6301              	.LASF145:
 6302 0683 686F7572 		.ascii	"hour\000"
 6302      00
 6303              	.LASF93:
 6304 0688 636F6D6D 		.ascii	"commands\000"
 6304      616E6473 
 6304      00
 6305              	.LASF97:
 6306 0691 636F6D70 		.ascii	"compare_location\000"
 6306      6172655F 
 6306      6C6F6361 
 6306      74696F6E 
 6306      00
 6307              	.LASF21:
 6308 06a2 666C6F61 		.ascii	"float\000"
 6308      7400
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 142


 6309              	.LASF83:
 6310 06a8 6D6F6465 		.ascii	"modem_initialize\000"
 6310      6D5F696E 
 6310      69746961 
 6310      6C697A65 
 6310      00
 6311              	.LASF123:
 6312 06b9 735F7265 		.ascii	"s_report_freq\000"
 6312      706F7274 
 6312      5F667265 
 6312      7100
 6313              	.LASF130:
 6314 06c7 735F6170 		.ascii	"s_apps_enabled\000"
 6314      70735F65 
 6314      6E61626C 
 6314      656400
 6315              	.LASF61:
 6316 06d6 73696D5F 		.ascii	"sim_type\000"
 6316      74797065 
 6316      00
 6317              	.LASF68:
 6318 06df 56616C76 		.ascii	"Valve_freq\000"
 6318      655F6672 
 6318      657100
 6319              	.LASF114:
 6320 06ea 6973725F 		.ascii	"isr_telit_rx\000"
 6320      74656C69 
 6320      745F7278 
 6320      00
 6321              	.LASF76:
 6322 06f7 616C6172 		.ascii	"alarm\000"
 6322      6D00
 6323              	.LASF70:
 6324 06fd 5F426F6F 		.ascii	"_Bool\000"
 6324      6C00
 6325              	.LASF13:
 6326 0703 696E7433 		.ascii	"int32_t\000"
 6326      325F7400 
 6327              	.LASF1:
 6328 070b 756E7369 		.ascii	"unsigned char\000"
 6328      676E6564 
 6328      20636861 
 6328      7200
 6329              	.LASF180:
 6330 0719 73797374 		.ascii	"system_settings\000"
 6330      656D5F73 
 6330      65747469 
 6330      6E677300 
 6331              	.LASF98:
 6332 0729 64656C61 		.ascii	"delay\000"
 6332      7900
 6333              	.LASF49:
 6334 072f 72737271 		.ascii	"rsrq\000"
 6334      00
 6335              	.LASF63:
 6336 0734 73796E63 		.ascii	"sync_time\000"
 6336      5F74696D 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 143


 6336      6500
 6337              	.LASF120:
 6338 073e 735F6E6F 		.ascii	"s_node_type\000"
 6338      64655F74 
 6338      79706500 
 6339              	.LASF47:
 6340 074a 72736370 		.ascii	"rscp\000"
 6340      00
 6341              	.LASF152:
 6342 074f 6D6F6465 		.ascii	"modem_get_gps_coordinates\000"
 6342      6D5F6765 
 6342      745F6770 
 6342      735F636F 
 6342      6F726469 
 6343              	.LASF38:
 6344 0769 74657374 		.ascii	"test_t\000"
 6344      5F7400
 6345              	.LASF129:
 6346 0770 735F6175 		.ascii	"s_autosampler\000"
 6346      746F7361 
 6346      6D706C65 
 6346      7200
 6347              	.LASF44:
 6348 077e 696D6569 		.ascii	"imei\000"
 6348      00
 6349              	.LASF37:
 6350 0783 72656173 		.ascii	"reason\000"
 6350      6F6E00
 6351              	.LASF50:
 6352 078a 72737270 		.ascii	"rsrp\000"
 6352      00
 6353              	.LASF53:
 6354 078f 6D6F6465 		.ascii	"modem_stats_t\000"
 6354      6D5F7374 
 6354      6174735F 
 6354      7400
 6355              	.LASF92:
 6356 079d 75617274 		.ascii	"uart_string_reset\000"
 6356      5F737472 
 6356      696E675F 
 6356      72657365 
 6356      7400
 6357              	.LASF188:
 6358 07af 616C6172 		.ascii	"alarmLevelSensor\000"
 6358      6D4C6576 
 6358      656C5365 
 6358      6E736F72 
 6358      00
 6359              	.LASF32:
 6360 07c0 746D5F77 		.ascii	"tm_wday\000"
 6360      64617900 
 6361              	.LASF91:
 6362 07c8 6D6F6465 		.ascii	"modem_soft_power_cycle\000"
 6362      6D5F736F 
 6362      66745F70 
 6362      6F776572 
 6362      5F637963 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 144


 6363              	.LASF66:
 6364 07df 4C657665 		.ascii	"Level_Sensor_freq\000"
 6364      6C5F5365 
 6364      6E736F72 
 6364      5F667265 
 6364      7100
 6365              	.LASF166:
 6366 07f1 6C657665 		.ascii	"level_sensor_inbox\000"
 6366      6C5F7365 
 6366      6E736F72 
 6366      5F696E62 
 6366      6F7800
 6367              	.LASF24:
 6368 0804 6C6F6E67 		.ascii	"long double\000"
 6368      20646F75 
 6368      626C6500 
 6369              	.LASF23:
 6370 0810 63686172 		.ascii	"char\000"
 6370      00
 6371              	.LASF110:
 6372 0815 6D6F6465 		.ascii	"modem_process_tasks\000"
 6372      6D5F7072 
 6372      6F636573 
 6372      735F7461 
 6372      736B7300 
 6373              	.LASF11:
 6374 0829 756E7369 		.ascii	"unsigned int\000"
 6374      676E6564 
 6374      20696E74 
 6374      00
 6375              	.LASF140:
 6376 0836 4346554E 		.ascii	"CFUN\000"
 6376      00
 6377              	.LASF192:
 6378 083b 616C6172 		.ascii	"alarmValve\000"
 6378      6D56616C 
 6378      766500
 6379              	.LASF43:
 6380 0846 6D6F6465 		.ascii	"model_id\000"
 6380      6C5F6964 
 6380      00
 6381              	.LASF178:
 6382 084f 68747470 		.ascii	"http_route\000"
 6382      5F726F75 
 6382      746500
 6383              	.LASF45:
 6384 085a 6D6F6465 		.ascii	"modem_info_t\000"
 6384      6D5F696E 
 6384      666F5F74 
 6384      00
 6385              	.LASF59:
 6386 0867 6770735F 		.ascii	"gps_t\000"
 6386      7400
 6387              	.LASF7:
 6388 086d 5F5F7569 		.ascii	"__uint32_t\000"
 6388      6E743332 
 6388      5F7400
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 145


 6389              	.LASF197:
 6390 0878 75617274 		.ascii	"uart_string_index\000"
 6390      5F737472 
 6390      696E675F 
 6390      696E6465 
 6390      7800
 6391              	.LASF62:
 6392 088a 6D656173 		.ascii	"measure_time\000"
 6392      7572655F 
 6392      74696D65 
 6392      00
 6393              	.LASF115:
 6394 0897 69735F63 		.ascii	"is_connected_to_internet\000"
 6394      6F6E6E65 
 6394      63746564 
 6394      5F746F5F 
 6394      696E7465 
 6395              	.LASF161:
 6396 08b0 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 6396      6D5F7374 
 6396      6172745F 
 6396      74696D65 
 6396      5F737461 
 6397              	.LASF196:
 6398 08c7 75617274 		.ascii	"uart_received_string\000"
 6398      5F726563 
 6398      65697665 
 6398      645F7374 
 6398      72696E67 
 6399              	.LASF84:
 6400 08dc 70696E73 		.ascii	"pins_configure_inactive\000"
 6400      5F636F6E 
 6400      66696775 
 6400      72655F69 
 6400      6E616374 
 6401              	.LASF125:
 6402 08f4 735F6170 		.ascii	"s_app_led\000"
 6402      705F6C65 
 6402      6400
 6403              	.LASF42:
 6404 08fe 73696D5F 		.ascii	"sim_id\000"
 6404      696400
 6405              	.LASF29:
 6406 0905 746D5F6D 		.ascii	"tm_mday\000"
 6406      64617900 
 6407              	.LASF179:
 6408 090d 73797374 		.ascii	"system_info\000"
 6408      656D5F69 
 6408      6E666F00 
 6409              	.LASF58:
 6410 0919 76616C69 		.ascii	"valid\000"
 6410      6400
 6411              	.LASF85:
 6412 091f 70696E73 		.ascii	"pins_configure_active\000"
 6412      5F636F6E 
 6412      66696775 
 6412      72655F61 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 146


 6412      63746976 
 6413              	.LASF146:
 6414 0935 6D696E75 		.ascii	"minute\000"
 6414      746500
 6415              	.LASF14:
 6416 093c 75696E74 		.ascii	"uint32_t\000"
 6416      33325F74 
 6416      00
 6417              	.LASF26:
 6418 0945 746D5F73 		.ascii	"tm_sec\000"
 6418      656300
 6419              	.LASF172:
 6420 094c 76616C76 		.ascii	"valve_enabled\000"
 6420      655F656E 
 6420      61626C65 
 6420      6400
 6421              	.LASF119:
 6422 095a 6765745F 		.ascii	"get_updated_parameters_from_malcom\000"
 6422      75706461 
 6422      7465645F 
 6422      70617261 
 6422      6D657465 
 6423              	.LASF122:
 6424 097d 735F7361 		.ascii	"s_sample_freq\000"
 6424      6D706C65 
 6424      5F667265 
 6424      7100
 6425              	.LASF36:
 6426 098b 73746174 		.ascii	"status\000"
 6426      757300
 6427              	.LASF189:
 6428 0992 74696D65 		.ascii	"timeToLevelSensor\000"
 6428      546F4C65 
 6428      76656C53 
 6428      656E736F 
 6428      7200
 6429              	.LASF167:
 6430 09a4 6C657665 		.ascii	"level_sensor_enabled\000"
 6430      6C5F7365 
 6430      6E736F72 
 6430      5F656E61 
 6430      626C6564 
 6431              	.LASF158:
 6432 09b9 64617461 		.ascii	"dataPointsInStackDesired\000"
 6432      506F696E 
 6432      7473496E 
 6432      53746163 
 6432      6B446573 
 6433              	.LASF67:
 6434 09d2 446F776E 		.ascii	"Downstream_Level_Sensor_freq\000"
 6434      73747265 
 6434      616D5F4C 
 6434      6576656C 
 6434      5F53656E 
 6435              	.LASF65:
 6436 09ef 4170705F 		.ascii	"App_LED_freq\000"
 6436      4C45445F 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 147


 6436      66726571 
 6436      00
 6437              	.LASF82:
 6438 09fc 7379735F 		.ascii	"sys_settings_t\000"
 6438      73657474 
 6438      696E6773 
 6438      5F7400
 6439              	.LASF191:
 6440 0a0b 74696D65 		.ascii	"timeToDownstreamLevelSensor\000"
 6440      546F446F 
 6440      776E7374 
 6440      7265616D 
 6440      4C657665 
 6441              	.LASF12:
 6442 0a27 75696E74 		.ascii	"uint8_t\000"
 6442      385F7400 
 6443              	.LASF194:
 6444 0a2f 616C6172 		.ascii	"alarmAutosampler\000"
 6444      6D417574 
 6444      6F73616D 
 6444      706C6572 
 6444      00
 6445              	.LASF173:
 6446 0a40 76616C76 		.ascii	"valve_inbox\000"
 6446      655F696E 
 6446      626F7800 
 6447              	.LASF87:
 6448 0a4c 61745F72 		.ascii	"at_ready\000"
 6448      65616479 
 6448      00
 6449              	.LASF69:
 6450 0a55 4175746F 		.ascii	"Autosampler_freq\000"
 6450      73616D70 
 6450      6C65725F 
 6450      66726571 
 6450      00
 6451              	.LASF88:
 6452 0a66 61747465 		.ascii	"attempts\000"
 6452      6D707473 
 6452      00
 6453              	.LASF74:
 6454 0a6f 636F756E 		.ascii	"countDownType\000"
 6454      74446F77 
 6454      6E547970 
 6454      6500
 6455              	.LASF201:
 6456 0a7d 76616C76 		.ascii	"valve_freq\000"
 6456      655F6672 
 6456      657100
 6457              	.LASF89:
 6458 0a88 626F6F74 		.ascii	"boot_time\000"
 6458      5F74696D 
 6458      6500
 6459              	.LASF94:
 6460 0a92 65787065 		.ascii	"expected_response\000"
 6460      63746564 
 6460      5F726573 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccj8euXA.s 			page 148


 6460      706F6E73 
 6460      6500
 6461              	.LASF153:
 6462 0aa4 6C6F636B 		.ascii	"lock_time\000"
 6462      5F74696D 
 6462      6500
 6463              	.LASF176:
 6464 0aae 68747470 		.ascii	"http_request\000"
 6464      5F726571 
 6464      75657374 
 6464      00
 6465              	.LASF86:
 6466 0abb 6D6F6465 		.ascii	"modem_power_down\000"
 6466      6D5F706F 
 6466      7765725F 
 6466      646F776E 
 6466      00
 6467              	.LASF22:
 6468 0acc 646F7562 		.ascii	"double\000"
 6468      6C6500
 6469              	.LASF165:
 6470 0ad3 6170705F 		.ascii	"app_led_inbox\000"
 6470      6C65645F 
 6470      696E626F 
 6470      7800
 6471              	.LASF168:
 6472 0ae1 646F776E 		.ascii	"downstream_level_sensor_inbox\000"
 6472      73747265 
 6472      616D5F6C 
 6472      6576656C 
 6472      5F73656E 
 6473              	.LASF134:
 6474 0aff 6170705F 		.ascii	"app_led_freq\000"
 6474      6C65645F 
 6474      66726571 
 6474      00
 6475              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
