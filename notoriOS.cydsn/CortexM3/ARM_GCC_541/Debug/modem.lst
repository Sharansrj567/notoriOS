ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"modem.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	modem_state,1,1
  20              		.comm	modem_start_time_stamp,4,4
  21              		.comm	modem_info,60,4
  22              		.comm	modem_stats,16,4
  23              		.syntax unified
  24              		.global _printf_float
  25              		.thumb
  26              		.syntax unified
  27              		.comm	dataPointsInStack,2,2
  28              		.comm	dataPointsInStackDesired,2,2
  29              		.comm	data,6600,4
  30              		.comm	http_request,10000,4
  31              		.comm	http_body,10000,4
  32              		.comm	http_route,200,4
  33              		.comm	system_info,28,4
  34              		.comm	system_settings,324,4
  35              		.comm	uart_received_string,1024,4
  36              		.global	uart_string_index
  37              		.bss
  38              		.align	1
  39              		.type	uart_string_index, %object
  40              		.size	uart_string_index, 2
  41              	uart_string_index:
  42 0000 0000     		.space	2
  43              		.section	.text.isr_telit_rx,"ax",%progbits
  44              		.align	2
  45              		.global	isr_telit_rx
  46              		.thumb
  47              		.thumb_func
  48              		.type	isr_telit_rx, %function
  49              	isr_telit_rx:
  50              	.LFB64:
  51              		.file 1 "modem.c"
   1:modem.c       **** //Methods for Telit modem 
   2:modem.c       **** #include "modem.h"
   3:modem.c       **** #include "notoriOS.h"
   4:modem.c       **** #include "debug.h"
   5:modem.c       **** #include "data.h"
   6:modem.c       **** #include <math.h>
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 2


   7:modem.c       **** #include <stdio.h>
   8:modem.c       **** 
   9:modem.c       **** char uart_received_string[1024];
  10:modem.c       **** int16 uart_string_index=0;
  11:modem.c       **** 
  12:modem.c       **** #define DEFAULT_AT_TIMEOUT 2000u // Send command and wait 2000 ms
  13:modem.c       **** #define NO_AT_TIMEOUT 0u // Send command, no timeout/ don't wait 
  14:modem.c       **** 
  15:modem.c       **** #define TIMEOUT_NETWORK_CONNECT 200 //seconds
  16:modem.c       **** #define TIMEOUT_IP_ACQUIRE 230 //seconds (cummulatinve) add to TIMEOUT_NETWORK_CONNECT
  17:modem.c       **** 
  18:modem.c       **** CY_ISR_PROTO(isr_telit_rx); // Declares a custom ISR function "isr_telit_rx" using the CY_ISR_PROTO
  19:modem.c       **** 
  20:modem.c       **** // Define the custom ISR function "isr_telit_rx" using the CY_ISR macro
  21:modem.c       **** // Get each character from Telit and saves it to uart_received_string
  22:modem.c       **** CY_ISR(isr_telit_rx){      
  52              		.loc 1 22 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 98B5     		push	{r3, r4, r7, lr}
  57              		.cfi_def_cfa_offset 16
  58              		.cfi_offset 3, -16
  59              		.cfi_offset 4, -12
  60              		.cfi_offset 7, -8
  61              		.cfi_offset 14, -4
  62 0002 00AF     		add	r7, sp, #0
  63              		.cfi_def_cfa_register 7
  23:modem.c       ****     // UART_Telit_GetRxBufferSize() returns the number of received bytes available in the RX buffer
  24:modem.c       ****     while(UART_Telit_GetRxBufferSize()==1){
  64              		.loc 1 24 0
  65 0004 12E0     		b	.L2
  66              	.L3:
  25:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  67              		.loc 1 25 0
  68 0006 0D4B     		ldr	r3, .L4
  69 0008 B3F90030 		ldrsh	r3, [r3]
  70 000c 1C46     		mov	r4, r3
  71 000e FFF7FEFF 		bl	UART_Telit_GetChar
  72 0012 0346     		mov	r3, r0
  73 0014 1A46     		mov	r2, r3
  74 0016 0A4B     		ldr	r3, .L4+4
  75 0018 1A55     		strb	r2, [r3, r4]
  26:modem.c       ****         uart_string_index++;
  76              		.loc 1 26 0
  77 001a 084B     		ldr	r3, .L4
  78 001c B3F90030 		ldrsh	r3, [r3]
  79 0020 9BB2     		uxth	r3, r3
  80 0022 0133     		adds	r3, r3, #1
  81 0024 9BB2     		uxth	r3, r3
  82 0026 1AB2     		sxth	r2, r3
  83 0028 044B     		ldr	r3, .L4
  84 002a 1A80     		strh	r2, [r3]	@ movhi
  85              	.L2:
  24:modem.c       ****         uart_received_string[uart_string_index]=UART_Telit_GetChar();
  86              		.loc 1 24 0
  87 002c FFF7FEFF 		bl	UART_Telit_GetRxBufferSize
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 3


  88 0030 0346     		mov	r3, r0
  89 0032 012B     		cmp	r3, #1
  90 0034 E7D0     		beq	.L3
  27:modem.c       ****     }
  28:modem.c       **** 
  29:modem.c       **** }
  91              		.loc 1 29 0
  92 0036 00BF     		nop
  93 0038 98BD     		pop	{r3, r4, r7, pc}
  94              	.L5:
  95 003a 00BF     		.align	2
  96              	.L4:
  97 003c 00000000 		.word	uart_string_index
  98 0040 00000000 		.word	uart_received_string
  99              		.cfi_endproc
 100              	.LFE64:
 101              		.size	isr_telit_rx, .-isr_telit_rx
 102              		.section	.text.modem_initialize,"ax",%progbits
 103              		.align	2
 104              		.global	modem_initialize
 105              		.thumb
 106              		.thumb_func
 107              		.type	modem_initialize, %function
 108              	modem_initialize:
 109              	.LFB65:
  30:modem.c       **** 
  31:modem.c       **** // Initialize the modem
  32:modem.c       **** void modem_initialize(){
 110              		.loc 1 32 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 1, uses_anonymous_args = 0
 114 0000 80B5     		push	{r7, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 118 0002 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
  33:modem.c       ****     // Don't do much except make sure that all the modem pins are pulled low
  34:modem.c       ****     // Also make sure that the TX PIN is fully disabled
  35:modem.c       ****     pins_configure_inactive();
 120              		.loc 1 35 0
 121 0004 FFF7FEFF 		bl	pins_configure_inactive
  36:modem.c       ****     modem_state = 0;
 122              		.loc 1 36 0
 123 0008 154B     		ldr	r3, .L7
 124 000a 0022     		movs	r2, #0
 125 000c 1A70     		strb	r2, [r3]
  37:modem.c       ****     //initialize states
  38:modem.c       ****     modem_info.imei[0] = '\0';
 126              		.loc 1 38 0
 127 000e 154B     		ldr	r3, .L7+4
 128 0010 0022     		movs	r2, #0
 129 0012 83F82820 		strb	r2, [r3, #40]
  39:modem.c       ****     modem_info.model_id[0] = '\0';
 130              		.loc 1 39 0
 131 0016 134B     		ldr	r3, .L7+4
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 4


 132 0018 0022     		movs	r2, #0
 133 001a 1A75     		strb	r2, [r3, #20]
  40:modem.c       ****     modem_info.sim_id[0] = '\0';
 134              		.loc 1 40 0
 135 001c 114B     		ldr	r3, .L7+4
 136 001e 0022     		movs	r2, #0
 137 0020 1A70     		strb	r2, [r3]
  41:modem.c       ****     modem_stats.rssi = 0;
 138              		.loc 1 41 0
 139 0022 114B     		ldr	r3, .L7+8
 140 0024 0022     		movs	r2, #0
 141 0026 1A70     		strb	r2, [r3]
  42:modem.c       ****     modem_stats.ber = 0;
 142              		.loc 1 42 0
 143 0028 0F4B     		ldr	r3, .L7+8
 144 002a 0022     		movs	r2, #0
 145 002c 5A70     		strb	r2, [r3, #1]
  43:modem.c       ****     modem_stats.rscp = 0;
 146              		.loc 1 43 0
 147 002e 0E4B     		ldr	r3, .L7+8
 148 0030 0022     		movs	r2, #0
 149 0032 9A70     		strb	r2, [r3, #2]
  44:modem.c       ****     modem_stats.ecno = 0;
 150              		.loc 1 44 0
 151 0034 0C4B     		ldr	r3, .L7+8
 152 0036 0022     		movs	r2, #0
 153 0038 DA70     		strb	r2, [r3, #3]
  45:modem.c       ****     modem_stats.rsrq = 0;
 154              		.loc 1 45 0
 155 003a 0B4B     		ldr	r3, .L7+8
 156 003c 0022     		movs	r2, #0
 157 003e 1A71     		strb	r2, [r3, #4]
  46:modem.c       ****     modem_stats.rsrp = 0;
 158              		.loc 1 46 0
 159 0040 094B     		ldr	r3, .L7+8
 160 0042 0022     		movs	r2, #0
 161 0044 5A71     		strb	r2, [r3, #5]
  47:modem.c       ****     modem_stats.time_to_acquire_ip = 0;
 162              		.loc 1 47 0
 163 0046 084B     		ldr	r3, .L7+8
 164 0048 0022     		movs	r2, #0
 165 004a DA60     		str	r2, [r3, #12]
  48:modem.c       ****     modem_stats.time_to_network_connect = 0;
 166              		.loc 1 48 0
 167 004c 064B     		ldr	r3, .L7+8
 168 004e 0022     		movs	r2, #0
 169 0050 9A60     		str	r2, [r3, #8]
  49:modem.c       ****     // Disable the RX Pin interrupt, and only enable it during long timeouts
  50:modem.c       ****     // Rx_Telit_SetInterruptMode(): Configures the interrupt mode for each of the Pins component's 
  51:modem.c       ****     // Rx_Telit_0_INTR selects the first pin in the list, and Rx_Telit_INTR_NONE disables the Rx pi
  52:modem.c       ****     Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 170              		.loc 1 52 0
 171 0052 0021     		movs	r1, #0
 172 0054 4020     		movs	r0, #64
 173 0056 FFF7FEFF 		bl	Rx_Telit_SetInterruptMode
  53:modem.c       ****     
  54:modem.c       **** }
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 5


 174              		.loc 1 54 0
 175 005a 00BF     		nop
 176 005c 80BD     		pop	{r7, pc}
 177              	.L8:
 178 005e 00BF     		.align	2
 179              	.L7:
 180 0060 00000000 		.word	modem_state
 181 0064 00000000 		.word	modem_info
 182 0068 00000000 		.word	modem_stats
 183              		.cfi_endproc
 184              	.LFE65:
 185              		.size	modem_initialize, .-modem_initialize
 186              		.section	.text.pins_configure_inactive,"ax",%progbits
 187              		.align	2
 188              		.global	pins_configure_inactive
 189              		.thumb
 190              		.thumb_func
 191              		.type	pins_configure_inactive, %function
 192              	pins_configure_inactive:
 193              	.LFB66:
  55:modem.c       **** 
  56:modem.c       **** 
  57:modem.c       **** // To be used when the modem power is to be "killed" conpletely to conserve power
  58:modem.c       **** void pins_configure_inactive(){
 194              		.loc 1 58 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 1, uses_anonymous_args = 0
 198 0000 80B5     		push	{r7, lr}
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 7, -8
 201              		.cfi_offset 14, -4
 202 0002 00AF     		add	r7, sp, #0
 203              		.cfi_def_cfa_register 7
  59:modem.c       ****    
  60:modem.c       ****    Telit_ControlReg_Write(0u); // Physically disconect UART pin
 204              		.loc 1 60 0
 205 0004 0020     		movs	r0, #0
 206 0006 FFF7FEFF 		bl	Telit_ControlReg_Write
  61:modem.c       ****    Rx_Telit_SetDriveMode(PIN_DM_STRONG); // Set drive mode
 207              		.loc 1 61 0
 208 000a 0C20     		movs	r0, #12
 209 000c FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  62:modem.c       **** 
  63:modem.c       ****    Pin_Telit_pwr_Write(OFF); // Kill power to modem (pulls pin low).
 210              		.loc 1 63 0
 211 0010 0020     		movs	r0, #0
 212 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  64:modem.c       **** 
  65:modem.c       ****    // Pull down all of these, just in case (turns the off).
  66:modem.c       ****    Rx_Telit_Write(OFF); 
 213              		.loc 1 66 0
 214 0016 0020     		movs	r0, #0
 215 0018 FFF7FEFF 		bl	Rx_Telit_Write
  67:modem.c       ****    Tx_Telit_Write(OFF);
 216              		.loc 1 67 0
 217 001c 0020     		movs	r0, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 6


 218 001e FFF7FEFF 		bl	Tx_Telit_Write
  68:modem.c       ****    Pin_Telit_ONOFF_Write(OFF);
 219              		.loc 1 68 0
 220 0022 0020     		movs	r0, #0
 221 0024 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
  69:modem.c       ****    Pin_Telit_SWRDY_Write(OFF);
 222              		.loc 1 69 0
 223 0028 0020     		movs	r0, #0
 224 002a FFF7FEFF 		bl	Pin_Telit_SWRDY_Write
  70:modem.c       ****     
  71:modem.c       **** }
 225              		.loc 1 71 0
 226 002e 00BF     		nop
 227 0030 80BD     		pop	{r7, pc}
 228              		.cfi_endproc
 229              	.LFE66:
 230              		.size	pins_configure_inactive, .-pins_configure_inactive
 231 0032 00BF     		.section	.text.pins_configure_active,"ax",%progbits
 232              		.align	2
 233              		.global	pins_configure_active
 234              		.thumb
 235              		.thumb_func
 236              		.type	pins_configure_active, %function
 237              	pins_configure_active:
 238              	.LFB67:
  72:modem.c       **** 
  73:modem.c       **** // Turns on power and configures all UART pin modes
  74:modem.c       **** void pins_configure_active(){
 239              		.loc 1 74 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243 0000 80B5     		push	{r7, lr}
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 7, -8
 246              		.cfi_offset 14, -4
 247 0002 00AF     		add	r7, sp, #0
 248              		.cfi_def_cfa_register 7
  75:modem.c       ****     
  76:modem.c       ****     Rx_Telit_SetDriveMode(PIN_DM_DIG_HIZ); // Power up. Set RX pin to High Impedance Digital mode.
 249              		.loc 1 76 0
 250 0004 0220     		movs	r0, #2
 251 0006 FFF7FEFF 		bl	Rx_Telit_SetDriveMode
  77:modem.c       ****     Telit_ControlReg_Write(1u); // Pull Telit_ControlReg pin high (turns it on).
 252              		.loc 1 77 0
 253 000a 0120     		movs	r0, #1
 254 000c FFF7FEFF 		bl	Telit_ControlReg_Write
  78:modem.c       ****     Pin_Telit_pwr_Write(ON); // Pulls Telit_pwr pin high (turns it on).
 255              		.loc 1 78 0
 256 0010 0120     		movs	r0, #1
 257 0012 FFF7FEFF 		bl	Pin_Telit_pwr_Write
  79:modem.c       ****     CyDelay(100u); // Give the MOSFET a few ms to stalbilise power 
 258              		.loc 1 79 0
 259 0016 6420     		movs	r0, #100
 260 0018 FFF7FEFF 		bl	CyDelay
  80:modem.c       **** }
 261              		.loc 1 80 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 7


 262 001c 00BF     		nop
 263 001e 80BD     		pop	{r7, pc}
 264              		.cfi_endproc
 265              	.LFE67:
 266              		.size	pins_configure_active, .-pins_configure_active
 267              		.section	.rodata
 268              		.align	2
 269              	.LC0:
 270 0000 4F4B00   		.ascii	"OK\000"
 271 0003 00       		.align	2
 272              	.LC1:
 273 0004 41542353 		.ascii	"AT#SHDN\015\000"
 273      48444E0D 
 273      00
 274              		.section	.text.modem_power_down,"ax",%progbits
 275              		.align	2
 276              		.global	modem_power_down
 277              		.thumb
 278              		.thumb_func
 279              		.type	modem_power_down, %function
 280              	modem_power_down:
 281              	.LFB68:
  81:modem.c       **** 
  82:modem.c       **** // Power down the modem -- completely "kill" modem to conserve power.
  83:modem.c       **** void modem_power_down(){
 282              		.loc 1 83 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 1, uses_anonymous_args = 0
 286 0000 80B5     		push	{r7, lr}
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 7, -8
 289              		.cfi_offset 14, -4
 290 0002 00AF     		add	r7, sp, #0
 291              		.cfi_def_cfa_register 7
  84:modem.c       ****     // AT Command to modem for Software Shut Down - #SHDN
  85:modem.c       ****     // \r is carriage return, it is necessary for the modem to know it got a command
  86:modem.c       ****     at_write_command("AT#SHDN\r","OK",5000u); 
 292              		.loc 1 86 0
 293 0004 41F28832 		movw	r2, #5000
 294 0008 0A49     		ldr	r1, .L12
 295 000a 0B48     		ldr	r0, .L12+4
 296 000c FFF7FEFF 		bl	at_write_command
  87:modem.c       ****    
  88:modem.c       ****     // Soft power cycle makes sure that the modem is all the way on (like holding on button on for 
  89:modem.c       ****     modem_soft_power_cycle();
 297              		.loc 1 89 0
 298 0010 FFF7FEFF 		bl	modem_soft_power_cycle
  90:modem.c       ****     CyDelay(1000u);
 299              		.loc 1 90 0
 300 0014 4FF47A70 		mov	r0, #1000
 301 0018 FFF7FEFF 		bl	CyDelay
  91:modem.c       ****     
  92:modem.c       ****     UART_Telit_Stop(); // Disables the UART operation.
 302              		.loc 1 92 0
 303 001c FFF7FEFF 		bl	UART_Telit_Stop
  93:modem.c       ****     isr_telit_rx_Stop(); // Disables and removes the interrupt.
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 8


 304              		.loc 1 93 0
 305 0020 FFF7FEFF 		bl	isr_telit_rx_Stop
  94:modem.c       ****     pins_configure_inactive(); // We want the modem power to be "killed" completely to conserve pow
 306              		.loc 1 94 0
 307 0024 FFF7FEFF 		bl	pins_configure_inactive
  95:modem.c       ****     modem_state = MODEM_STATE_OFF;
 308              		.loc 1 95 0
 309 0028 044B     		ldr	r3, .L12+8
 310 002a 0022     		movs	r2, #0
 311 002c 1A70     		strb	r2, [r3]
  96:modem.c       ****     
  97:modem.c       **** }
 312              		.loc 1 97 0
 313 002e 00BF     		nop
 314 0030 80BD     		pop	{r7, pc}
 315              	.L13:
 316 0032 00BF     		.align	2
 317              	.L12:
 318 0034 00000000 		.word	.LC0
 319 0038 04000000 		.word	.LC1
 320 003c 00000000 		.word	modem_state
 321              		.cfi_endproc
 322              	.LFE68:
 323              		.size	modem_power_down, .-modem_power_down
 324              		.section	.rodata
 325 000d 000000   		.align	2
 326              	.LC2:
 327 0010 41544530 		.ascii	"ATE0\015\000"
 327      0D00
 328 0016 0000     		.align	2
 329              	.LC3:
 330 0018 4D6F6465 		.ascii	"Modem boot time: %d\000"
 330      6D20626F 
 330      6F742074 
 330      696D653A 
 330      20256400 
 331              		.align	2
 332              	.LC4:
 333 002c 4D6F6465 		.ascii	"Modem ready for AT commands after %d attempt(s).\000"
 333      6D207265 
 333      61647920 
 333      666F7220 
 333      41542063 
 334 005d 000000   		.align	2
 335              	.LC5:
 336 0060 4E6F2072 		.ascii	"No response from modem.\000"
 336      6573706F 
 336      6E736520 
 336      66726F6D 
 336      206D6F64 
 337              		.section	.text.modem_power_up,"ax",%progbits
 338              		.align	2
 339              		.global	modem_power_up
 340              		.thumb
 341              		.thumb_func
 342              		.type	modem_power_up, %function
 343              	modem_power_up:
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 9


 344              	.LFB69:
  98:modem.c       **** 
  99:modem.c       **** // This puts all the modem pints into a state that won't leak power
 100:modem.c       **** // Please call restore_pins() to bring them abck to function when they are needed for UART
 101:modem.c       **** uint8 modem_power_up(){
 345              		.loc 1 101 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 8
 348              		@ frame_needed = 1, uses_anonymous_args = 0
 349 0000 80B5     		push	{r7, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 0002 82B0     		sub	sp, sp, #8
 354              		.cfi_def_cfa_offset 16
 355 0004 00AF     		add	r7, sp, #0
 356              		.cfi_def_cfa_register 7
 102:modem.c       **** 
 103:modem.c       ****     pins_configure_active(); // Turns on power and configures all UART pin modes
 357              		.loc 1 103 0
 358 0006 FFF7FEFF 		bl	pins_configure_active
 104:modem.c       ****     UART_Telit_Start(); // Sets the initVar variable, calls the UART_Telit_Init() function, and the
 359              		.loc 1 104 0
 360 000a FFF7FEFF 		bl	UART_Telit_Start
 105:modem.c       ****     isr_telit_rx_StartEx(isr_telit_rx); // Sets up the interrupt and enables it. 
 361              		.loc 1 105 0
 362 000e 2C48     		ldr	r0, .L27
 363 0010 FFF7FEFF 		bl	isr_telit_rx_StartEx
 106:modem.c       **** 
 107:modem.c       ****     modem_soft_power_cycle(); // Soft power cycle makes sure that the modem is all the way on (like
 364              		.loc 1 107 0
 365 0014 FFF7FEFF 		bl	modem_soft_power_cycle
 108:modem.c       ****     
 109:modem.c       ****     // Turn off ECHO command (doesn't repeat your command back to you).
 110:modem.c       ****     uint8 at_ready = 0;
 366              		.loc 1 110 0
 367 0018 0023     		movs	r3, #0
 368 001a FB71     		strb	r3, [r7, #7]
 111:modem.c       ****     uint8 attempts = 0;
 369              		.loc 1 111 0
 370 001c 0023     		movs	r3, #0
 371 001e 3B71     		strb	r3, [r7, #4]
 112:modem.c       ****     // Create variable boot_time of the current time stamp.
 113:modem.c       ****     long boot_time = getTimeStamp();
 372              		.loc 1 113 0
 373 0020 FFF7FEFF 		bl	getTimeStamp
 374 0024 3860     		str	r0, [r7]
 375              	.LBB2:
 114:modem.c       ****     
 115:modem.c       ****     //it takes the 4G modem 10+secs (max 20) to boot up, so keep hitting it with AT commands until 
 116:modem.c       ****     for(uint8 attempts = 0; attempts<3; attempts++){
 376              		.loc 1 116 0
 377 0026 0023     		movs	r3, #0
 378 0028 BB71     		strb	r3, [r7, #6]
 379 002a 1CE0     		b	.L15
 380              	.L22:
 381              	.LBB3:
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 10


 117:modem.c       ****         
 118:modem.c       ****         for(uint8 pwr_check = 0; pwr_check<20; pwr_check++){
 382              		.loc 1 118 0
 383 002c 0023     		movs	r3, #0
 384 002e 7B71     		strb	r3, [r7, #5]
 385 0030 0EE0     		b	.L16
 386              	.L19:
 119:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 120:modem.c       ****             if(at_write_command("ATE0\r","OK",1000u)){
 387              		.loc 1 120 0
 388 0032 4FF47A72 		mov	r2, #1000
 389 0036 2349     		ldr	r1, .L27+4
 390 0038 2348     		ldr	r0, .L27+8
 391 003a FFF7FEFF 		bl	at_write_command
 392 003e 0346     		mov	r3, r0
 393 0040 002B     		cmp	r3, #0
 394 0042 02D0     		beq	.L17
 121:modem.c       ****                 at_ready = 1;
 395              		.loc 1 121 0
 396 0044 0123     		movs	r3, #1
 397 0046 FB71     		strb	r3, [r7, #7]
 122:modem.c       ****                 break;
 398              		.loc 1 122 0
 399 0048 05E0     		b	.L18
 400              	.L17:
 118:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 401              		.loc 1 118 0 discriminator 2
 402 004a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 403 004c 0133     		adds	r3, r3, #1
 404 004e 7B71     		strb	r3, [r7, #5]
 405              	.L16:
 118:modem.c       ****             // AT command ATE0 disables the command echo (doesn't repeat your command back to you).
 406              		.loc 1 118 0 is_stmt 0 discriminator 1
 407 0050 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 408 0052 132B     		cmp	r3, #19
 409 0054 EDD9     		bls	.L19
 410              	.L18:
 411              	.LBE3:
 123:modem.c       ****             }
 124:modem.c       ****         }
 125:modem.c       ****             
 126:modem.c       ****         if(at_ready == 1){
 412              		.loc 1 126 0 is_stmt 1
 413 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 414 0058 012B     		cmp	r3, #1
 415 005a 08D0     		beq	.L26
 127:modem.c       ****             break;
 128:modem.c       ****         }else{
 129:modem.c       ****             // Soft power cycle makes sure that the modem is all the way on (like holding on button
 130:modem.c       ****             modem_soft_power_cycle();
 416              		.loc 1 130 0 discriminator 2
 417 005c FFF7FEFF 		bl	modem_soft_power_cycle
 116:modem.c       ****         
 418              		.loc 1 116 0 discriminator 2
 419 0060 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 420 0062 0133     		adds	r3, r3, #1
 421 0064 BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 11


 422              	.L15:
 116:modem.c       ****         
 423              		.loc 1 116 0 is_stmt 0 discriminator 1
 424 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 425 0068 022B     		cmp	r3, #2
 426 006a DFD9     		bls	.L22
 427 006c 00E0     		b	.L21
 428              	.L26:
 127:modem.c       ****             break;
 429              		.loc 1 127 0 is_stmt 1
 430 006e 00BF     		nop
 431              	.L21:
 432              	.LBE2:
 131:modem.c       ****         }
 132:modem.c       ****     }
 133:modem.c       ****     // Calculate boot up time and save to variable boot_time.
 134:modem.c       ****     boot_time = getTimeStamp() - boot_time;
 433              		.loc 1 134 0
 434 0070 FFF7FEFF 		bl	getTimeStamp
 435 0074 0246     		mov	r2, r0
 436 0076 3B68     		ldr	r3, [r7]
 437 0078 D31A     		subs	r3, r2, r3
 438 007a 3B60     		str	r3, [r7]
 135:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Modem boot time: %d",boot_time);
 439              		.loc 1 135 0
 440 007c 3A68     		ldr	r2, [r7]
 441 007e 1349     		ldr	r1, .L27+12
 442 0080 0020     		movs	r0, #0
 443 0082 FFF7FEFF 		bl	printNotif
 136:modem.c       ****    
 137:modem.c       ****     if(at_ready == 1){
 444              		.loc 1 137 0
 445 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 446 0088 012B     		cmp	r3, #1
 447 008a 0AD1     		bne	.L23
 138:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Modem ready for AT commands after %d attempt(s).",attempts);
 448              		.loc 1 138 0
 449 008c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 450 008e 1A46     		mov	r2, r3
 451 0090 0F49     		ldr	r1, .L27+16
 452 0092 0020     		movs	r0, #0
 453 0094 FFF7FEFF 		bl	printNotif
 139:modem.c       ****         modem_state = MODEM_STATE_STARTUP;
 454              		.loc 1 139 0
 455 0098 0E4B     		ldr	r3, .L27+20
 456 009a 0122     		movs	r2, #1
 457 009c 1A70     		strb	r2, [r3]
 140:modem.c       ****     }else{
 141:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"No response from modem.");
 142:modem.c       ****         modem_state = MODEM_STATE_OFF;
 143:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 144:modem.c       ****         modem_power_down();
 145:modem.c       ****         return 0u;
 146:modem.c       ****     }
 147:modem.c       ****     return 1u;
 458              		.loc 1 147 0
 459 009e 0123     		movs	r3, #1
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 12


 460 00a0 09E0     		b	.L25
 461              	.L23:
 141:modem.c       ****         modem_state = MODEM_STATE_OFF;
 462              		.loc 1 141 0
 463 00a2 0D49     		ldr	r1, .L27+24
 464 00a4 0220     		movs	r0, #2
 465 00a6 FFF7FEFF 		bl	printNotif
 142:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 466              		.loc 1 142 0
 467 00aa 0A4B     		ldr	r3, .L27+20
 468 00ac 0022     		movs	r2, #0
 469 00ae 1A70     		strb	r2, [r3]
 144:modem.c       ****         return 0u;
 470              		.loc 1 144 0
 471 00b0 FFF7FEFF 		bl	modem_power_down
 145:modem.c       ****     }
 472              		.loc 1 145 0
 473 00b4 0023     		movs	r3, #0
 474              	.L25:
 148:modem.c       **** }
 475              		.loc 1 148 0
 476 00b6 1846     		mov	r0, r3
 477 00b8 0837     		adds	r7, r7, #8
 478              		.cfi_def_cfa_offset 8
 479 00ba BD46     		mov	sp, r7
 480              		.cfi_def_cfa_register 13
 481              		@ sp needed
 482 00bc 80BD     		pop	{r7, pc}
 483              	.L28:
 484 00be 00BF     		.align	2
 485              	.L27:
 486 00c0 00000000 		.word	isr_telit_rx
 487 00c4 00000000 		.word	.LC0
 488 00c8 10000000 		.word	.LC2
 489 00cc 18000000 		.word	.LC3
 490 00d0 2C000000 		.word	.LC4
 491 00d4 00000000 		.word	modem_state
 492 00d8 60000000 		.word	.LC5
 493              		.cfi_endproc
 494              	.LFE69:
 495              		.size	modem_power_up, .-modem_power_up
 496              		.section	.text.modem_soft_power_cycle,"ax",%progbits
 497              		.align	2
 498              		.global	modem_soft_power_cycle
 499              		.thumb
 500              		.thumb_func
 501              		.type	modem_soft_power_cycle, %function
 502              	modem_soft_power_cycle:
 503              	.LFB70:
 149:modem.c       **** 
 150:modem.c       **** // Puts modem in soft power cycle -- modem has power but isn't all the way on, so soft power cycle 
 151:modem.c       **** void modem_soft_power_cycle(){
 504              		.loc 1 151 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 1, uses_anonymous_args = 0
 508 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 13


 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 7, -8
 511              		.cfi_offset 14, -4
 512 0002 00AF     		add	r7, sp, #0
 513              		.cfi_def_cfa_register 7
 152:modem.c       ****     Pin_Telit_ONOFF_Write(1u); // Pulls Telit_ONOFF pin high
 514              		.loc 1 152 0
 515 0004 0120     		movs	r0, #1
 516 0006 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 153:modem.c       ****     CyDelay(2000u); // Give modem a sec to boot
 517              		.loc 1 153 0
 518 000a 4FF4FA60 		mov	r0, #2000
 519 000e FFF7FEFF 		bl	CyDelay
 154:modem.c       ****     Pin_Telit_ONOFF_Write(0u); // Pulls Telit_ONOFF pin low
 520              		.loc 1 154 0
 521 0012 0020     		movs	r0, #0
 522 0014 FFF7FEFF 		bl	Pin_Telit_ONOFF_Write
 155:modem.c       ****     
 156:modem.c       **** }
 523              		.loc 1 156 0
 524 0018 00BF     		nop
 525 001a 80BD     		pop	{r7, pc}
 526              		.cfi_endproc
 527              	.LFE70:
 528              		.size	modem_soft_power_cycle, .-modem_soft_power_cycle
 529              		.section	.text.uart_string_reset,"ax",%progbits
 530              		.align	2
 531              		.global	uart_string_reset
 532              		.thumb
 533              		.thumb_func
 534              		.type	uart_string_reset, %function
 535              	uart_string_reset:
 536              	.LFB71:
 157:modem.c       **** 
 158:modem.c       **** // Clear and reset the uart_received_string variable and uart_string_index for the next transmissio
 159:modem.c       **** void uart_string_reset(){
 537              		.loc 1 159 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 1, uses_anonymous_args = 0
 541 0000 80B5     		push	{r7, lr}
 542              		.cfi_def_cfa_offset 8
 543              		.cfi_offset 7, -8
 544              		.cfi_offset 14, -4
 545 0002 00AF     		add	r7, sp, #0
 546              		.cfi_def_cfa_register 7
 160:modem.c       ****     uart_string_index=0;
 547              		.loc 1 160 0
 548 0004 064B     		ldr	r3, .L31
 549 0006 0022     		movs	r2, #0
 550 0008 1A80     		strh	r2, [r3]	@ movhi
 161:modem.c       ****     // memset(void *str, int c, size_t n) copies the character c (an unsigned char) to the first n 
 162:modem.c       ****     memset(uart_received_string,'\0',sizeof(uart_received_string));
 551              		.loc 1 162 0
 552 000a 4FF48062 		mov	r2, #1024
 553 000e 0021     		movs	r1, #0
 554 0010 0448     		ldr	r0, .L31+4
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 14


 555 0012 FFF7FEFF 		bl	memset
 163:modem.c       ****     // Clears the receiver memory buffer and hardware RX FIFO of all received data.
 164:modem.c       ****     UART_Telit_ClearRxBuffer();
 556              		.loc 1 164 0
 557 0016 FFF7FEFF 		bl	UART_Telit_ClearRxBuffer
 165:modem.c       **** }
 558              		.loc 1 165 0
 559 001a 00BF     		nop
 560 001c 80BD     		pop	{r7, pc}
 561              	.L32:
 562 001e 00BF     		.align	2
 563              	.L31:
 564 0020 00000000 		.word	uart_string_index
 565 0024 00000000 		.word	uart_received_string
 566              		.cfi_endproc
 567              	.LFE71:
 568              		.size	uart_string_reset, .-uart_string_reset
 569              		.section	.rodata
 570              		.align	2
 571              	.LC6:
 572 0078 4D6F6465 		.ascii	"Modem sent AT command without timeout: %s\015\012\000"
 572      6D207365 
 572      6E742041 
 572      5420636F 
 572      6D6D616E 
 573              		.align	2
 574              	.LC7:
 575 00a4 4D6F6465 		.ascii	"Modem Received expected AT Response on first Try:\012"
 575      6D205265 
 575      63656976 
 575      65642065 
 575      78706563 
 576 00d6 436F6D6D 		.ascii	"Command: %s\012Received: %s\015\012\000"
 576      616E643A 
 576      2025730A 
 576      52656365 
 576      69766564 
 577 00f1 000000   		.align	2
 578              	.LC8:
 579 00f4 4D6F6465 		.ascii	"Modem required %d tries to receive AT Response: %s\015"
 579      6D207265 
 579      71756972 
 579      65642025 
 579      64207472 
 580 0127 0A00     		.ascii	"\012\000"
 581 0129 000000   		.align	2
 582              	.LC9:
 583 012c 436F756C 		.ascii	"Could not write AT command: %s\012 Received: %s\012"
 583      64206E6F 
 583      74207772 
 583      69746520 
 583      41542063 
 584 0159 00       		.ascii	"\000"
 585              		.section	.text.at_write_command,"ax",%progbits
 586              		.align	2
 587              		.global	at_write_command
 588              		.thumb
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 15


 589              		.thumb_func
 590              		.type	at_write_command, %function
 591              	at_write_command:
 592              	.LFB72:
 166:modem.c       **** 
 167:modem.c       **** // Modem controlled  via  the  serial  interface  using  the  standard  AT commands.
 168:modem.c       **** // AT is an ATTENTION command and is used as a prefix to other parameters in a string. 
 169:modem.c       **** // Sends commands to the modem
 170:modem.c       **** uint8_t at_write_command(char* commands, char* expected_response,uint32_t timeout){
 593              		.loc 1 170 0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 40
 596              		@ frame_needed = 1, uses_anonymous_args = 0
 597 0000 80B5     		push	{r7, lr}
 598              		.cfi_def_cfa_offset 8
 599              		.cfi_offset 7, -8
 600              		.cfi_offset 14, -4
 601 0002 8AB0     		sub	sp, sp, #40
 602              		.cfi_def_cfa_offset 48
 603 0004 00AF     		add	r7, sp, #0
 604              		.cfi_def_cfa_register 7
 605 0006 F860     		str	r0, [r7, #12]
 606 0008 B960     		str	r1, [r7, #8]
 607 000a 7A60     		str	r2, [r7, #4]
 171:modem.c       **** 
 172:modem.c       ****     uint32 at_attempt = 0;
 608              		.loc 1 172 0
 609 000c 0023     		movs	r3, #0
 610 000e 7B62     		str	r3, [r7, #36]
 173:modem.c       ****     
 174:modem.c       ****     for(at_attempt = 0; at_attempt < 3; at_attempt++) {
 611              		.loc 1 174 0
 612 0010 0023     		movs	r3, #0
 613 0012 7B62     		str	r3, [r7, #36]
 614 0014 46E0     		b	.L34
 615              	.L42:
 616              	.LBB4:
 175:modem.c       ****         
 176:modem.c       ****         char* compare_location;
 177:modem.c       ****         uint32_t delay=10;
 617              		.loc 1 177 0
 618 0016 0A23     		movs	r3, #10
 619 0018 FB61     		str	r3, [r7, #28]
 178:modem.c       ****         uint32_t i, interval=timeout/delay;        
 620              		.loc 1 178 0
 621 001a 7A68     		ldr	r2, [r7, #4]
 622 001c FB69     		ldr	r3, [r7, #28]
 623 001e B2FBF3F3 		udiv	r3, r2, r3
 624 0022 BB61     		str	r3, [r7, #24]
 179:modem.c       ****         
 180:modem.c       ****         // Clear and reset the uart_received_string variable and uart_string_index for the next tra
 181:modem.c       ****         uart_string_reset();
 625              		.loc 1 181 0
 626 0024 FFF7FEFF 		bl	uart_string_reset
 182:modem.c       ****         
 183:modem.c       ****         // Sends a NULL terminated string to the TX buffer for transmission.
 184:modem.c       ****         UART_Telit_PutString(commands);
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 16


 627              		.loc 1 184 0
 628 0028 F868     		ldr	r0, [r7, #12]
 629 002a FFF7FEFF 		bl	UART_Telit_PutString
 185:modem.c       ****         
 186:modem.c       ****         
 187:modem.c       ****         // If no timeout, no need to wait for response
 188:modem.c       ****         if(timeout == NO_AT_TIMEOUT){
 630              		.loc 1 188 0
 631 002e 7B68     		ldr	r3, [r7, #4]
 632 0030 002B     		cmp	r3, #0
 633 0032 06D1     		bne	.L35
 189:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem sent AT command without timeout: %s\r\n", commands);
 634              		.loc 1 189 0
 635 0034 FA68     		ldr	r2, [r7, #12]
 636 0036 1F49     		ldr	r1, .L43
 637 0038 0020     		movs	r0, #0
 638 003a FFF7FEFF 		bl	printNotif
 190:modem.c       ****             return 1u;
 639              		.loc 1 190 0
 640 003e 0123     		movs	r3, #1
 641 0040 34E0     		b	.L36
 642              	.L35:
 191:modem.c       ****         }
 192:modem.c       ****       
 193:modem.c       ****      
 194:modem.c       ****         for(i=0;i<interval;i++){ 
 643              		.loc 1 194 0
 644 0042 0023     		movs	r3, #0
 645 0044 3B62     		str	r3, [r7, #32]
 646 0046 20E0     		b	.L37
 647              	.L41:
 195:modem.c       ****             CyDelay((uint32) delay);
 648              		.loc 1 195 0
 649 0048 F869     		ldr	r0, [r7, #28]
 650 004a FFF7FEFF 		bl	CyDelay
 196:modem.c       ****             // strstr(const char *haystack, const char *needle) function finds the first occurrence
 197:modem.c       ****             // Returns a pointer to the first occurrence in haystack of any of the entire sequence 
 198:modem.c       ****             compare_location=strstr(uart_received_string,expected_response);        
 651              		.loc 1 198 0
 652 004e B968     		ldr	r1, [r7, #8]
 653 0050 1948     		ldr	r0, .L43+4
 654 0052 FFF7FEFF 		bl	strstr
 655 0056 7861     		str	r0, [r7, #20]
 199:modem.c       ****             if(compare_location!=NULL) {
 656              		.loc 1 199 0
 657 0058 7B69     		ldr	r3, [r7, #20]
 658 005a 002B     		cmp	r3, #0
 659 005c 12D0     		beq	.L38
 200:modem.c       ****                 if (at_attempt == 0){
 660              		.loc 1 200 0
 661 005e 7B6A     		ldr	r3, [r7, #36]
 662 0060 002B     		cmp	r3, #0
 663 0062 06D1     		bne	.L39
 201:modem.c       ****                     // we add \n for new line to make it easier to decipher
 202:modem.c       ****                     printNotif(NOTIF_TYPE_EVENT,"Modem Received expected AT Response on first Try:\
 664              		.loc 1 202 0
 665 0064 144B     		ldr	r3, .L43+4
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 17


 666 0066 FA68     		ldr	r2, [r7, #12]
 667 0068 1449     		ldr	r1, .L43+8
 668 006a 0020     		movs	r0, #0
 669 006c FFF7FEFF 		bl	printNotif
 670 0070 06E0     		b	.L40
 671              	.L39:
 203:modem.c       ****                 }else{
 204:modem.c       ****                     printNotif(NOTIF_TYPE_WARNING,"Modem required %d tries to receive AT Response: 
 672              		.loc 1 204 0
 673 0072 7B6A     		ldr	r3, [r7, #36]
 674 0074 5A1C     		adds	r2, r3, #1
 675 0076 104B     		ldr	r3, .L43+4
 676 0078 1149     		ldr	r1, .L43+12
 677 007a 0120     		movs	r0, #1
 678 007c FFF7FEFF 		bl	printNotif
 679              	.L40:
 205:modem.c       ****                  
 206:modem.c       ****                 }
 207:modem.c       ****                 return(1);
 680              		.loc 1 207 0
 681 0080 0123     		movs	r3, #1
 682 0082 13E0     		b	.L36
 683              	.L38:
 194:modem.c       ****             CyDelay((uint32) delay);
 684              		.loc 1 194 0 discriminator 2
 685 0084 3B6A     		ldr	r3, [r7, #32]
 686 0086 0133     		adds	r3, r3, #1
 687 0088 3B62     		str	r3, [r7, #32]
 688              	.L37:
 194:modem.c       ****             CyDelay((uint32) delay);
 689              		.loc 1 194 0 is_stmt 0 discriminator 1
 690 008a 3A6A     		ldr	r2, [r7, #32]
 691 008c BB69     		ldr	r3, [r7, #24]
 692 008e 9A42     		cmp	r2, r3
 693 0090 DAD3     		bcc	.L41
 208:modem.c       ****             }
 209:modem.c       ****             
 210:modem.c       ****         }  
 211:modem.c       ****         
 212:modem.c       ****         // Something went wrong, restart UART
 213:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Could not write AT command: %s\n Received: %s\n", commands,uar
 694              		.loc 1 213 0 is_stmt 1 discriminator 2
 695 0092 094B     		ldr	r3, .L43+4
 696 0094 FA68     		ldr	r2, [r7, #12]
 697 0096 0B49     		ldr	r1, .L43+16
 698 0098 0220     		movs	r0, #2
 699 009a FFF7FEFF 		bl	printNotif
 700              	.LBE4:
 174:modem.c       ****         
 701              		.loc 1 174 0 discriminator 2
 702 009e 7B6A     		ldr	r3, [r7, #36]
 703 00a0 0133     		adds	r3, r3, #1
 704 00a2 7B62     		str	r3, [r7, #36]
 705              	.L34:
 174:modem.c       ****         
 706              		.loc 1 174 0 is_stmt 0 discriminator 1
 707 00a4 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 18


 708 00a6 022B     		cmp	r3, #2
 709 00a8 B5D9     		bls	.L42
 214:modem.c       ****       
 215:modem.c       ****     }
 216:modem.c       ****    // printNotif(NOTIF_TYPE_ERROR,"Modem AT response timeout: %s\r\n", commands);
 217:modem.c       ****           
 218:modem.c       ****     return(0);    
 710              		.loc 1 218 0 is_stmt 1
 711 00aa 0023     		movs	r3, #0
 712              	.L36:
 219:modem.c       **** }
 713              		.loc 1 219 0
 714 00ac 1846     		mov	r0, r3
 715 00ae 2837     		adds	r7, r7, #40
 716              		.cfi_def_cfa_offset 8
 717 00b0 BD46     		mov	sp, r7
 718              		.cfi_def_cfa_register 13
 719              		@ sp needed
 720 00b2 80BD     		pop	{r7, pc}
 721              	.L44:
 722              		.align	2
 723              	.L43:
 724 00b4 78000000 		.word	.LC6
 725 00b8 00000000 		.word	uart_received_string
 726 00bc A4000000 		.word	.LC7
 727 00c0 F4000000 		.word	.LC8
 728 00c4 2C010000 		.word	.LC9
 729              		.cfi_endproc
 730              	.LFE72:
 731              		.size	at_write_command, .-at_write_command
 732              		.section	.rodata
 733 015a 0000     		.align	2
 734              	.LC10:
 735 015c 54455354 		.ascii	"TEST_MODEM\000"
 735      5F4D4F44 
 735      454D00
 736 0167 00       		.align	2
 737              	.LC11:
 738 0168 4E6F2072 		.ascii	"No reponse from modem.\000"
 738      65706F6E 
 738      73652066 
 738      726F6D20 
 738      6D6F6465 
 739 017f 00       		.align	2
 740              	.LC12:
 741 0180 4D6F6465 		.ascii	"Modem connected to network.\000"
 741      6D20636F 
 741      6E6E6563 
 741      74656420 
 741      746F206E 
 742              		.section	.text.modem_test,"ax",%progbits
 743              		.align	2
 744              		.global	modem_test
 745              		.thumb
 746              		.thumb_func
 747              		.type	modem_test, %function
 748              	modem_test:
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 19


 749              	.LFB73:
 220:modem.c       **** 
 221:modem.c       **** // Test modem -- needs fleshed out
 222:modem.c       **** test_t modem_test(){
 750              		.loc 1 222 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 408
 753              		@ frame_needed = 1, uses_anonymous_args = 0
 754 0000 B0B5     		push	{r4, r5, r7, lr}
 755              		.cfi_def_cfa_offset 16
 756              		.cfi_offset 4, -16
 757              		.cfi_offset 5, -12
 758              		.cfi_offset 7, -8
 759              		.cfi_offset 14, -4
 760 0002 E6B0     		sub	sp, sp, #408
 761              		.cfi_def_cfa_offset 424
 762 0004 00AF     		add	r7, sp, #0
 763              		.cfi_def_cfa_register 7
 764 0006 3B1D     		adds	r3, r7, #4
 765 0008 1860     		str	r0, [r3]
 223:modem.c       ****     
 224:modem.c       ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
 225:modem.c       ****     test.status = 0;
 766              		.loc 1 225 0
 767 000a 07F10C03 		add	r3, r7, #12
 768 000e 0022     		movs	r2, #0
 769 0010 83F88020 		strb	r2, [r3, #128]
 226:modem.c       ****     // Print test name and test reason
 227:modem.c       ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_MODEM");
 770              		.loc 1 227 0
 771 0014 07F10C03 		add	r3, r7, #12
 772 0018 354A     		ldr	r2, .L53
 773 001a 07CA     		ldmia	r2, {r0, r1, r2}
 774 001c 03C3     		stmia	r3!, {r0, r1}
 775 001e 1A80     		strh	r2, [r3]	@ movhi
 776 0020 0233     		adds	r3, r3, #2
 777 0022 120C     		lsrs	r2, r2, #16
 778 0024 1A70     		strb	r2, [r3]
 228:modem.c       ****     snprintf(test.reason,sizeof(test.reason),"No reponse from modem.");
 779              		.loc 1 228 0
 780 0026 07F10C03 		add	r3, r7, #12
 781 002a 8133     		adds	r3, r3, #129
 782 002c 314A     		ldr	r2, .L53+4
 783 002e 1C46     		mov	r4, r3
 784 0030 1546     		mov	r5, r2
 785 0032 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 786 0034 2060     		str	r0, [r4]	@ unaligned
 787 0036 6160     		str	r1, [r4, #4]	@ unaligned
 788 0038 A260     		str	r2, [r4, #8]	@ unaligned
 789 003a E360     		str	r3, [r4, #12]	@ unaligned
 790 003c 2868     		ldr	r0, [r5]	@ unaligned
 791 003e 2061     		str	r0, [r4, #16]	@ unaligned
 792 0040 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 793 0042 AA79     		ldrb	r2, [r5, #6]
 794 0044 A382     		strh	r3, [r4, #20]	@ unaligned
 795 0046 1346     		mov	r3, r2
 796 0048 A375     		strb	r3, [r4, #22]
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 20


 797              	.LBB5:
 229:modem.c       ****    
 230:modem.c       ****     //try the modem 60*100 (60 secs)
 231:modem.c       ****     for(int i = 0; i< 60; i++){
 798              		.loc 1 231 0
 799 004a 0023     		movs	r3, #0
 800 004c C7F89431 		str	r3, [r7, #404]
 801 0050 39E0     		b	.L46
 802              	.L51:
 232:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 233:modem.c       ****         modem_process_tasks();
 803              		.loc 1 233 0
 804 0052 FFF7FEFF 		bl	modem_process_tasks
 234:modem.c       ****          
 235:modem.c       ****         if(modem_get_state() == MODEM_STATE_OFF){
 805              		.loc 1 235 0
 806 0056 FFF7FEFF 		bl	modem_get_state
 807 005a 0346     		mov	r3, r0
 808 005c 002B     		cmp	r3, #0
 809 005e 02D1     		bne	.L47
 236:modem.c       ****             // This puts all the modem points into a state that won't leak power
 237:modem.c       ****             modem_power_up();
 810              		.loc 1 237 0
 811 0060 FFF7FEFF 		bl	modem_power_up
 812 0064 27E0     		b	.L48
 813              	.L47:
 238:modem.c       ****             // Should put this on a max_try counter, so we don't just keep trying to connect over a
 239:modem.c       ****             
 240:modem.c       ****         }else if(modem_get_state() == MODEM_STATE_READY){
 814              		.loc 1 240 0
 815 0066 FFF7FEFF 		bl	modem_get_state
 816 006a 0346     		mov	r3, r0
 817 006c 042B     		cmp	r3, #4
 818 006e 22D1     		bne	.L48
 819              	.LBB6:
 241:modem.c       ****         
 242:modem.c       ****         
 243:modem.c       ****         // Get time, and if it looks good, set the RTC with it
 244:modem.c       ****         long network_time = modem_get_network_time();
 820              		.loc 1 244 0
 821 0070 FFF7FEFF 		bl	modem_get_network_time
 822 0074 C7F89001 		str	r0, [r7, #400]
 245:modem.c       ****         if(network_time != 0){
 823              		.loc 1 245 0
 824 0078 D7F89031 		ldr	r3, [r7, #400]
 825 007c 002B     		cmp	r3, #0
 826 007e 03D0     		beq	.L49
 246:modem.c       ****             setTime(network_time); // Set the system time 
 827              		.loc 1 246 0
 828 0080 D7F89001 		ldr	r0, [r7, #400]
 829 0084 FFF7FEFF 		bl	setTime
 830              	.L49:
 247:modem.c       ****         }
 248:modem.c       ****             
 249:modem.c       ****         snprintf(test.reason,sizeof(test.reason),"Modem connected to network.");
 831              		.loc 1 249 0
 832 0088 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 21


 833 008c 8133     		adds	r3, r3, #129
 834 008e 1A4A     		ldr	r2, .L53+8
 835 0090 1D46     		mov	r5, r3
 836 0092 1446     		mov	r4, r2
 837 0094 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 838 0096 2860     		str	r0, [r5]	@ unaligned
 839 0098 6960     		str	r1, [r5, #4]	@ unaligned
 840 009a AA60     		str	r2, [r5, #8]	@ unaligned
 841 009c EB60     		str	r3, [r5, #12]	@ unaligned
 842 009e 07CC     		ldmia	r4!, {r0, r1, r2}
 843 00a0 2861     		str	r0, [r5, #16]	@ unaligned
 844 00a2 6961     		str	r1, [r5, #20]	@ unaligned
 845 00a4 AA61     		str	r2, [r5, #24]	@ unaligned
 250:modem.c       ****         test.status = 1;
 846              		.loc 1 250 0
 847 00a6 07F10C03 		add	r3, r7, #12
 848 00aa 0122     		movs	r2, #1
 849 00ac 83F88020 		strb	r2, [r3, #128]
 251:modem.c       ****         // Power down the modem -- completely "kill" modem to conserve power.
 252:modem.c       ****         modem_power_down();
 850              		.loc 1 252 0
 851 00b0 FFF7FEFF 		bl	modem_power_down
 253:modem.c       ****         break;
 852              		.loc 1 253 0
 853 00b4 0BE0     		b	.L50
 854              	.L48:
 855              	.LBE6:
 254:modem.c       ****         
 255:modem.c       ****       }
 256:modem.c       ****         CyDelay(100u);
 856              		.loc 1 256 0 discriminator 2
 857 00b6 6420     		movs	r0, #100
 858 00b8 FFF7FEFF 		bl	CyDelay
 231:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 859              		.loc 1 231 0 discriminator 2
 860 00bc D7F89431 		ldr	r3, [r7, #404]
 861 00c0 0133     		adds	r3, r3, #1
 862 00c2 C7F89431 		str	r3, [r7, #404]
 863              	.L46:
 231:modem.c       ****         // Function to startup the modem, connect to the network, and then hand it off to sleep.
 864              		.loc 1 231 0 is_stmt 0 discriminator 1
 865 00c6 D7F89431 		ldr	r3, [r7, #404]
 866 00ca 3B2B     		cmp	r3, #59
 867 00cc C1DD     		ble	.L51
 868              	.L50:
 869              	.LBE5:
 257:modem.c       ****         
 258:modem.c       ****     }
 259:modem.c       ****     
 260:modem.c       ****     return test;
 870              		.loc 1 260 0 is_stmt 1
 871 00ce 3B1D     		adds	r3, r7, #4
 872 00d0 1A68     		ldr	r2, [r3]
 873 00d2 07F10C03 		add	r3, r7, #12
 874 00d6 1046     		mov	r0, r2
 875 00d8 1946     		mov	r1, r3
 876 00da 40F28113 		movw	r3, #385
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 22


 877 00de 1A46     		mov	r2, r3
 878 00e0 FFF7FEFF 		bl	memcpy
 261:modem.c       **** }
 879              		.loc 1 261 0
 880 00e4 3B1D     		adds	r3, r7, #4
 881 00e6 1868     		ldr	r0, [r3]
 882 00e8 07F5CC77 		add	r7, r7, #408
 883              		.cfi_def_cfa_offset 16
 884 00ec BD46     		mov	sp, r7
 885              		.cfi_def_cfa_register 13
 886              		@ sp needed
 887 00ee B0BD     		pop	{r4, r5, r7, pc}
 888              	.L54:
 889              		.align	2
 890              	.L53:
 891 00f0 5C010000 		.word	.LC10
 892 00f4 68010000 		.word	.LC11
 893 00f8 80010000 		.word	.LC12
 894              		.cfi_endproc
 895              	.LFE73:
 896              		.size	modem_test, .-modem_test
 897              		.section	.text.extract_string,"ax",%progbits
 898              		.align	2
 899              		.global	extract_string
 900              		.thumb
 901              		.thumb_func
 902              		.type	extract_string, %function
 903              	extract_string:
 904              	.LFB74:
 262:modem.c       **** 
 263:modem.c       **** // Extract string from the UART
 264:modem.c       **** uint8 extract_string(char* from, const char* beginMarker, const char* endMarker,  char* target){
 905              		.loc 1 264 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 24
 908              		@ frame_needed = 1, uses_anonymous_args = 0
 909 0000 80B5     		push	{r7, lr}
 910              		.cfi_def_cfa_offset 8
 911              		.cfi_offset 7, -8
 912              		.cfi_offset 14, -4
 913 0002 86B0     		sub	sp, sp, #24
 914              		.cfi_def_cfa_offset 32
 915 0004 00AF     		add	r7, sp, #0
 916              		.cfi_def_cfa_register 7
 917 0006 F860     		str	r0, [r7, #12]
 918 0008 B960     		str	r1, [r7, #8]
 919 000a 7A60     		str	r2, [r7, #4]
 920 000c 3B60     		str	r3, [r7]
 265:modem.c       ****     
 266:modem.c       ****         char *a, *b;
 267:modem.c       ****   
 268:modem.c       ****         // Expect the UART to contain something like "+CESQ: ##,##,##,##,##,##\r\n\r\nOK"
 269:modem.c       ****         // - Search for "+CESQ: ".  Place the starting pointer, a, at the resulting index
 270:modem.c       ****         a = strstr(from,beginMarker);
 921              		.loc 1 270 0
 922 000e B968     		ldr	r1, [r7, #8]
 923 0010 F868     		ldr	r0, [r7, #12]
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 23


 924 0012 FFF7FEFF 		bl	strstr
 925 0016 7861     		str	r0, [r7, #20]
 271:modem.c       ****         if (a == NULL) {
 926              		.loc 1 271 0
 927 0018 7B69     		ldr	r3, [r7, #20]
 928 001a 002B     		cmp	r3, #0
 929 001c 01D1     		bne	.L56
 272:modem.c       ****             //puts("+CESQ: not found in uart_received_string");
 273:modem.c       ****             a = from;
 930              		.loc 1 273 0
 931 001e FB68     		ldr	r3, [r7, #12]
 932 0020 7B61     		str	r3, [r7, #20]
 933              	.L56:
 274:modem.c       ****         }
 275:modem.c       ****         // The strlen() function calculates the length of a given string.
 276:modem.c       ****         a += strlen(beginMarker);
 934              		.loc 1 276 0
 935 0022 B868     		ldr	r0, [r7, #8]
 936 0024 FFF7FEFF 		bl	strlen
 937 0028 0246     		mov	r2, r0
 938 002a 7B69     		ldr	r3, [r7, #20]
 939 002c 1344     		add	r3, r3, r2
 940 002e 7B61     		str	r3, [r7, #20]
 277:modem.c       ****         
 278:modem.c       ****         // - Find the end marking and offset by 1
 279:modem.c       ****         // strstr(const char *haystack, const char *needle) function finds the first occurrence of 
 280:modem.c       ****         // Returns a pointer to the first occurrence in haystack of any of the entire sequence of c
 281:modem.c       ****         b = strstr(a,endMarker);
 941              		.loc 1 281 0
 942 0030 7968     		ldr	r1, [r7, #4]
 943 0032 7869     		ldr	r0, [r7, #20]
 944 0034 FFF7FEFF 		bl	strstr
 945 0038 3861     		str	r0, [r7, #16]
 282:modem.c       ****         if (b == NULL) {
 946              		.loc 1 282 0
 947 003a 3B69     		ldr	r3, [r7, #16]
 948 003c 002B     		cmp	r3, #0
 949 003e 06D1     		bne	.L57
 283:modem.c       ****             // Puts("Comma not found in uart_received_string");
 284:modem.c       ****             b=from+strlen(from);
 950              		.loc 1 284 0
 951 0040 F868     		ldr	r0, [r7, #12]
 952 0042 FFF7FEFF 		bl	strlen
 953 0046 0246     		mov	r2, r0
 954 0048 FB68     		ldr	r3, [r7, #12]
 955 004a 1344     		add	r3, r3, r2
 956 004c 3B61     		str	r3, [r7, #16]
 957              	.L57:
 285:modem.c       ****         }        
 286:modem.c       ****         
 287:modem.c       ****         // Parse the strings and store the respective rssi and fer values
 288:modem.c       ****         strncpy(target,a,b-a);
 958              		.loc 1 288 0
 959 004e 3A69     		ldr	r2, [r7, #16]
 960 0050 7B69     		ldr	r3, [r7, #20]
 961 0052 D31A     		subs	r3, r2, r3
 962 0054 1A46     		mov	r2, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 24


 963 0056 7969     		ldr	r1, [r7, #20]
 964 0058 3868     		ldr	r0, [r7]
 965 005a FFF7FEFF 		bl	strncpy
 289:modem.c       ****         target[b-a] = '\0';
 966              		.loc 1 289 0
 967 005e 3A69     		ldr	r2, [r7, #16]
 968 0060 7B69     		ldr	r3, [r7, #20]
 969 0062 D31A     		subs	r3, r2, r3
 970 0064 1A46     		mov	r2, r3
 971 0066 3B68     		ldr	r3, [r7]
 972 0068 1344     		add	r3, r3, r2
 973 006a 0022     		movs	r2, #0
 974 006c 1A70     		strb	r2, [r3]
 290:modem.c       ****         return 1u;
 975              		.loc 1 290 0
 976 006e 0123     		movs	r3, #1
 291:modem.c       ****         
 292:modem.c       **** }
 977              		.loc 1 292 0
 978 0070 1846     		mov	r0, r3
 979 0072 1837     		adds	r7, r7, #24
 980              		.cfi_def_cfa_offset 8
 981 0074 BD46     		mov	sp, r7
 982              		.cfi_def_cfa_register 13
 983              		@ sp needed
 984 0076 80BD     		pop	{r7, pc}
 985              		.cfi_endproc
 986              	.LFE74:
 987              		.size	extract_string, .-extract_string
 988              		.section	.rodata
 989              		.align	2
 990              	.LC13:
 991 019c 54696D65 		.ascii	"Time to connecto to network: %d seconds\000"
 991      20746F20 
 991      636F6E6E 
 991      6563746F 
 991      20746F20 
 992              		.align	2
 993              	.LC14:
 994 01c4 4D6F6465 		.ascii	"Modem timed out on network connect\000"
 994      6D207469 
 994      6D656420 
 994      6F757420 
 994      6F6E206E 
 995 01e7 00       		.align	2
 996              	.LC15:
 997 01e8 41637175 		.ascii	"Acquired IP address: %d seconds\000"
 997      69726564 
 997      20495020 
 997      61646472 
 997      6573733A 
 998              		.align	2
 999              	.LC16:
 1000 0208 4D6F6465 		.ascii	"Modem timed out on IP address acquire.\000"
 1000      6D207469 
 1000      6D656420 
 1000      6F757420 
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 25


 1000      6F6E2049 
 1001              		.section	.text.modem_process_tasks,"ax",%progbits
 1002              		.align	2
 1003              		.global	modem_process_tasks
 1004              		.thumb
 1005              		.thumb_func
 1006              		.type	modem_process_tasks, %function
 1007              	modem_process_tasks:
 1008              	.LFB75:
 293:modem.c       **** 
 294:modem.c       **** // Function to startup the modem, connect to the network, and then hand it off to sleep
 295:modem.c       **** uint8 modem_process_tasks(){
 1009              		.loc 1 295 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 8
 1012              		@ frame_needed = 1, uses_anonymous_args = 0
 1013 0000 80B5     		push	{r7, lr}
 1014              		.cfi_def_cfa_offset 8
 1015              		.cfi_offset 7, -8
 1016              		.cfi_offset 14, -4
 1017 0002 82B0     		sub	sp, sp, #8
 1018              		.cfi_def_cfa_offset 16
 1019 0004 00AF     		add	r7, sp, #0
 1020              		.cfi_def_cfa_register 7
 296:modem.c       ****     // If modem state is "startup" then get the modem start time, configure modem settings, and cha
 297:modem.c       ****     if(modem_state == MODEM_STATE_STARTUP){
 1021              		.loc 1 297 0
 1022 0006 474B     		ldr	r3, .L73
 1023 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1024 000a 012B     		cmp	r3, #1
 1025 000c 0BD1     		bne	.L60
 298:modem.c       ****         
 299:modem.c       ****         modem_start_time_stamp = getTimeStamp(); // Get timestamp for modem start time
 1026              		.loc 1 299 0
 1027 000e FFF7FEFF 		bl	getTimeStamp
 1028 0012 0246     		mov	r2, r0
 1029 0014 444B     		ldr	r3, .L73+4
 1030 0016 1A60     		str	r2, [r3]
 300:modem.c       ****         modem_configure_settings(); // Configure modem settings
 1031              		.loc 1 300 0
 1032 0018 FFF7FEFF 		bl	modem_configure_settings
 301:modem.c       ****         modem_state = MODEM_STATE_WAITING_FOR_NETWORK; // Change modem state 
 1033              		.loc 1 301 0
 1034 001c 414B     		ldr	r3, .L73
 1035 001e 0222     		movs	r2, #2
 1036 0020 1A70     		strb	r2, [r3]
 302:modem.c       ****         return 1u; // Keep going, don't hand off to sleep yet
 1037              		.loc 1 302 0
 1038 0022 0123     		movs	r3, #1
 1039 0024 79E0     		b	.L61
 1040              	.L60:
 303:modem.c       ****         
 304:modem.c       ****     }
 305:modem.c       ****     // Else if modem state is "waiting for network" 
 306:modem.c       ****     else if(modem_state == MODEM_STATE_WAITING_FOR_NETWORK){
 1041              		.loc 1 306 0
 1042 0026 3F4B     		ldr	r3, .L73
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 26


 1043 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1044 002a 022B     		cmp	r3, #2
 1045 002c 46D1     		bne	.L62
 1046              	.LBB7:
 307:modem.c       ****         // Check if modem has a good cell signal each second for up to a minute
 308:modem.c       ****        for(uint8 i=0;i<60;i++){
 1047              		.loc 1 308 0
 1048 002e 0023     		movs	r3, #0
 1049 0030 FB71     		strb	r3, [r7, #7]
 1050 0032 10E0     		b	.L63
 1051              	.L66:
 309:modem.c       ****             // Get cell network stats
 310:modem.c       ****             get_cell_network_stats();
 1052              		.loc 1 310 0
 1053 0034 FFF7FEFF 		bl	get_cell_network_stats
 311:modem.c       ****             // If cell signal (rsrp) is strong enough, break and connect to the network
 312:modem.c       ****             // Otherwise, keep checking rsrp
 313:modem.c       ****             if(modem_stats.rsrp > 26 && modem_stats.rsrp != 255){
 1054              		.loc 1 313 0
 1055 0038 3C4B     		ldr	r3, .L73+8
 1056 003a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1057 003c 1A2B     		cmp	r3, #26
 1058 003e 03D9     		bls	.L64
 1059              		.loc 1 313 0 is_stmt 0 discriminator 1
 1060 0040 3A4B     		ldr	r3, .L73+8
 1061 0042 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1062 0044 FF2B     		cmp	r3, #255
 1063 0046 0AD1     		bne	.L72
 1064              	.L64:
 314:modem.c       ****                 break;
 315:modem.c       ****             }
 316:modem.c       ****             // Delay for 1 second
 317:modem.c       ****             CyDelay(1000u);
 1065              		.loc 1 317 0 is_stmt 1 discriminator 2
 1066 0048 4FF47A70 		mov	r0, #1000
 1067 004c FFF7FEFF 		bl	CyDelay
 308:modem.c       ****             // Get cell network stats
 1068              		.loc 1 308 0 discriminator 2
 1069 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1070 0052 0133     		adds	r3, r3, #1
 1071 0054 FB71     		strb	r3, [r7, #7]
 1072              	.L63:
 308:modem.c       ****             // Get cell network stats
 1073              		.loc 1 308 0 is_stmt 0 discriminator 1
 1074 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1075 0058 3B2B     		cmp	r3, #59
 1076 005a EBD9     		bls	.L66
 1077 005c 00E0     		b	.L65
 1078              	.L72:
 314:modem.c       ****                 break;
 1079              		.loc 1 314 0 is_stmt 1
 1080 005e 00BF     		nop
 1081              	.L65:
 1082              	.LBE7:
 318:modem.c       ****         }
 319:modem.c       ****         
 320:modem.c       ****         // If modem connected to the cell network, save/print the time to connect to the network
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 27


 321:modem.c       ****         if(is_connected_to_cell_network()){
 1083              		.loc 1 321 0
 1084 0060 FFF7FEFF 		bl	is_connected_to_cell_network
 1085 0064 0346     		mov	r3, r0
 1086 0066 002B     		cmp	r3, #0
 1087 0068 15D0     		beq	.L67
 322:modem.c       ****       
 323:modem.c       ****              modem_stats.time_to_network_connect = (int)(getTimeStamp() - (int32)modem_start_time_s
 1088              		.loc 1 323 0
 1089 006a FFF7FEFF 		bl	getTimeStamp
 1090 006e 0246     		mov	r2, r0
 1091 0070 2D4B     		ldr	r3, .L73+4
 1092 0072 1B68     		ldr	r3, [r3]
 1093 0074 D31A     		subs	r3, r2, r3
 1094 0076 2D4A     		ldr	r2, .L73+8
 1095 0078 9360     		str	r3, [r2, #8]
 324:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Time to connecto to network: %d seconds",
 1096              		.loc 1 324 0
 1097 007a 2C4B     		ldr	r3, .L73+8
 1098 007c 9B68     		ldr	r3, [r3, #8]
 1099 007e 1A46     		mov	r2, r3
 1100 0080 2B49     		ldr	r1, .L73+12
 1101 0082 0020     		movs	r0, #0
 1102 0084 FFF7FEFF 		bl	printNotif
 325:modem.c       ****                                             modem_stats.time_to_network_connect);
 326:modem.c       ****             get_cell_network_stats(); // Get cell network stats
 1103              		.loc 1 326 0
 1104 0088 FFF7FEFF 		bl	get_cell_network_stats
 327:modem.c       ****             set_up_internet_connection(); // Setup the internet connection
 1105              		.loc 1 327 0
 1106 008c FFF7FEFF 		bl	set_up_internet_connection
 328:modem.c       ****             modem_state = MODEM_STATE_WAITING_FOR_IP; // Change modem state 
 1107              		.loc 1 328 0
 1108 0090 244B     		ldr	r3, .L73
 1109 0092 0322     		movs	r2, #3
 1110 0094 1A70     		strb	r2, [r3]
 1111              	.L67:
 329:modem.c       ****         }
 330:modem.c       **** 
 331:modem.c       ****         //power off if we times out shold only take ~30 secs to connect to network
 332:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_NETWORK_CONNECT){
 1112              		.loc 1 332 0
 1113 0096 FFF7FEFF 		bl	getTimeStamp
 1114 009a 0246     		mov	r2, r0
 1115 009c 224B     		ldr	r3, .L73+4
 1116 009e 1B68     		ldr	r3, [r3]
 1117 00a0 D31A     		subs	r3, r2, r3
 1118 00a2 C82B     		cmp	r3, #200
 1119 00a4 08DD     		ble	.L68
 333:modem.c       ****             modem_state = MODEM_STATE_OFF; // Change modem state
 1120              		.loc 1 333 0
 1121 00a6 1F4B     		ldr	r3, .L73
 1122 00a8 0022     		movs	r2, #0
 1123 00aa 1A70     		strb	r2, [r3]
 334:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1124              		.loc 1 334 0
 1125 00ac FFF7FEFF 		bl	modem_power_down
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 28


 335:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on network connect");
 1126              		.loc 1 335 0
 1127 00b0 2049     		ldr	r1, .L73+16
 1128 00b2 0220     		movs	r0, #2
 1129 00b4 FFF7FEFF 		bl	printNotif
 1130              	.L68:
 336:modem.c       ****             
 337:modem.c       ****         }
 338:modem.c       ****         
 339:modem.c       ****         return 0u;//ok to hand off to sleep
 1131              		.loc 1 339 0
 1132 00b8 0023     		movs	r3, #0
 1133 00ba 2EE0     		b	.L61
 1134              	.L62:
 340:modem.c       ****         
 341:modem.c       ****     // Else if modem state is "waiting for IP"
 342:modem.c       ****     }else if(modem_state == MODEM_STATE_WAITING_FOR_IP){
 1135              		.loc 1 342 0
 1136 00bc 194B     		ldr	r3, .L73
 1137 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1138 00c0 032B     		cmp	r3, #3
 1139 00c2 29D1     		bne	.L69
 343:modem.c       ****         // If the modem is connected to the internet, change modem state to "ready", save/print tim
 344:modem.c       ****         if(is_connected_to_internet()){
 1140              		.loc 1 344 0
 1141 00c4 FFF7FEFF 		bl	is_connected_to_internet
 1142 00c8 0346     		mov	r3, r0
 1143 00ca 002B     		cmp	r3, #0
 1144 00cc 11D0     		beq	.L70
 345:modem.c       ****             modem_state = MODEM_STATE_READY; // Change modem state
 1145              		.loc 1 345 0
 1146 00ce 154B     		ldr	r3, .L73
 1147 00d0 0422     		movs	r2, #4
 1148 00d2 1A70     		strb	r2, [r3]
 346:modem.c       ****             // Save/print time to acquire IP address
 347:modem.c       ****             modem_stats.time_to_acquire_ip = (int)(getTimeStamp() - (int32)modem_start_time_stamp);
 1149              		.loc 1 347 0
 1150 00d4 FFF7FEFF 		bl	getTimeStamp
 1151 00d8 0246     		mov	r2, r0
 1152 00da 134B     		ldr	r3, .L73+4
 1153 00dc 1B68     		ldr	r3, [r3]
 1154 00de D31A     		subs	r3, r2, r3
 1155 00e0 124A     		ldr	r2, .L73+8
 1156 00e2 D360     		str	r3, [r2, #12]
 348:modem.c       ****              printNotif(NOTIF_TYPE_EVENT,"Acquired IP address: %d seconds",
 1157              		.loc 1 348 0
 1158 00e4 114B     		ldr	r3, .L73+8
 1159 00e6 DB68     		ldr	r3, [r3, #12]
 1160 00e8 1A46     		mov	r2, r3
 1161 00ea 1349     		ldr	r1, .L73+20
 1162 00ec 0020     		movs	r0, #0
 1163 00ee FFF7FEFF 		bl	printNotif
 1164              	.L70:
 349:modem.c       ****                                             modem_stats.time_to_acquire_ip);
 350:modem.c       ****         }
 351:modem.c       ****         
 352:modem.c       ****         // Power off if we times out shold only take ~30 secs to connect to network
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 29


 353:modem.c       ****         if((int)(getTimeStamp()-(int32)modem_start_time_stamp) > TIMEOUT_IP_ACQUIRE){
 1165              		.loc 1 353 0
 1166 00f2 FFF7FEFF 		bl	getTimeStamp
 1167 00f6 0246     		mov	r2, r0
 1168 00f8 0B4B     		ldr	r3, .L73+4
 1169 00fa 1B68     		ldr	r3, [r3]
 1170 00fc D31A     		subs	r3, r2, r3
 1171 00fe E62B     		cmp	r3, #230
 1172 0100 08DD     		ble	.L71
 354:modem.c       ****             modem_state = MODEM_STATE_OFF;
 1173              		.loc 1 354 0
 1174 0102 084B     		ldr	r3, .L73
 1175 0104 0022     		movs	r2, #0
 1176 0106 1A70     		strb	r2, [r3]
 355:modem.c       ****             modem_power_down(); // Power down the modem -- completely "kill" modem to conserve powe
 1177              		.loc 1 355 0
 1178 0108 FFF7FEFF 		bl	modem_power_down
 356:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Modem timed out on IP address acquire.");
 1179              		.loc 1 356 0
 1180 010c 0B49     		ldr	r1, .L73+24
 1181 010e 0220     		movs	r0, #2
 1182 0110 FFF7FEFF 		bl	printNotif
 1183              	.L71:
 357:modem.c       ****       
 358:modem.c       ****         }
 359:modem.c       ****         return 0u;//ok to hand off to sleep
 1184              		.loc 1 359 0
 1185 0114 0023     		movs	r3, #0
 1186 0116 00E0     		b	.L61
 1187              	.L69:
 360:modem.c       ****     }
 361:modem.c       ****     
 362:modem.c       ****     return 0u;
 1188              		.loc 1 362 0
 1189 0118 0023     		movs	r3, #0
 1190              	.L61:
 363:modem.c       ****     
 364:modem.c       **** }
 1191              		.loc 1 364 0
 1192 011a 1846     		mov	r0, r3
 1193 011c 0837     		adds	r7, r7, #8
 1194              		.cfi_def_cfa_offset 8
 1195 011e BD46     		mov	sp, r7
 1196              		.cfi_def_cfa_register 13
 1197              		@ sp needed
 1198 0120 80BD     		pop	{r7, pc}
 1199              	.L74:
 1200 0122 00BF     		.align	2
 1201              	.L73:
 1202 0124 00000000 		.word	modem_state
 1203 0128 00000000 		.word	modem_start_time_stamp
 1204 012c 00000000 		.word	modem_stats
 1205 0130 9C010000 		.word	.LC13
 1206 0134 C4010000 		.word	.LC14
 1207 0138 E8010000 		.word	.LC15
 1208 013c 08020000 		.word	.LC16
 1209              		.cfi_endproc
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 30


 1210              	.LFE75:
 1211              		.size	modem_process_tasks, .-modem_process_tasks
 1212              		.section	.rodata
 1213 022f 00       		.align	2
 1214              	.LC17:
 1215 0230 43686563 		.ascii	"Checking AT+CREG?\000"
 1215      6B696E67 
 1215      2041542B 
 1215      43524547 
 1215      3F00
 1216 0242 0000     		.align	2
 1217              	.LC18:
 1218 0244 41542B43 		.ascii	"AT+CREG?\015\000"
 1218      5245473F 
 1218      0D00
 1219 024e 0000     		.align	2
 1220              	.LC19:
 1221 0250 45787472 		.ascii	"Extracting string AT+CREG?\000"
 1221      61637469 
 1221      6E672073 
 1221      7472696E 
 1221      67204154 
 1222 026b 00       		.align	2
 1223              	.LC20:
 1224 026c 75617274 		.ascii	"uart_received_string: %s\000"
 1224      5F726563 
 1224      65697665 
 1224      645F7374 
 1224      72696E67 
 1225 0285 000000   		.align	2
 1226              	.LC21:
 1227 0288 0D00     		.ascii	"\015\000"
 1228 028a 0000     		.align	2
 1229              	.LC22:
 1230 028c 3A2000   		.ascii	": \000"
 1231 028f 00       		.align	2
 1232              	.LC23:
 1233 0290 52656769 		.ascii	"Registered to network, CREG: %s\000"
 1233      73746572 
 1233      65642074 
 1233      6F206E65 
 1233      74776F72 
 1234              		.align	2
 1235              	.LC24:
 1236 02b0 446F6E65 		.ascii	"Done extracing string AT+CREG?\000"
 1236      20657874 
 1236      72616369 
 1236      6E672073 
 1236      7472696E 
 1237 02cf 00       		.align	2
 1238              	.LC25:
 1239 02d0 302C3100 		.ascii	"0,1\000"
 1240              		.align	2
 1241              	.LC26:
 1242 02d4 302C3500 		.ascii	"0,5\000"
 1243              		.section	.text.is_connected_to_cell_network,"ax",%progbits
 1244              		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 31


 1245              		.global	is_connected_to_cell_network
 1246              		.thumb
 1247              		.thumb_func
 1248              		.type	is_connected_to_cell_network, %function
 1249              	is_connected_to_cell_network:
 1250              	.LFB76:
 365:modem.c       **** 
 366:modem.c       **** // Checks network status, writes commands to the modem, then extracts string from UART
 367:modem.c       **** uint8 is_connected_to_cell_network(){
 1251              		.loc 1 367 0
 1252              		.cfi_startproc
 1253              		@ args = 0, pretend = 0, frame = 16
 1254              		@ frame_needed = 1, uses_anonymous_args = 0
 1255 0000 80B5     		push	{r7, lr}
 1256              		.cfi_def_cfa_offset 8
 1257              		.cfi_offset 7, -8
 1258              		.cfi_offset 14, -4
 1259 0002 84B0     		sub	sp, sp, #16
 1260              		.cfi_def_cfa_offset 24
 1261 0004 00AF     		add	r7, sp, #0
 1262              		.cfi_def_cfa_register 7
 368:modem.c       ****     // AT command AT+CREG? is the Network Registration Report to check network status -- need '0,0'
 369:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Checking AT+CREG?");
 1263              		.loc 1 369 0
 1264 0006 1F49     		ldr	r1, .L80
 1265 0008 0020     		movs	r0, #0
 1266 000a FFF7FEFF 		bl	printNotif
 370:modem.c       ****     // create new uint8 variable stust and set to equal the output of the function at_write_command
 371:modem.c       ****     uint8 status = at_write_command("AT+CREG?\r", "OK",DEFAULT_AT_TIMEOUT);
 1267              		.loc 1 371 0
 1268 000e 4FF4FA62 		mov	r2, #2000
 1269 0012 1D49     		ldr	r1, .L80+4
 1270 0014 1D48     		ldr	r0, .L80+8
 1271 0016 FFF7FEFF 		bl	at_write_command
 1272 001a 0346     		mov	r3, r0
 1273 001c FB73     		strb	r3, [r7, #15]
 372:modem.c       ****     
 373:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Extracting string AT+CREG?");
 1274              		.loc 1 373 0
 1275 001e 1C49     		ldr	r1, .L80+12
 1276 0020 0020     		movs	r0, #0
 1277 0022 FFF7FEFF 		bl	printNotif
 374:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"uart_received_string: %s",uart_received_string);
 1278              		.loc 1 374 0
 1279 0026 1B4A     		ldr	r2, .L80+16
 1280 0028 1B49     		ldr	r1, .L80+20
 1281 002a 0020     		movs	r0, #0
 1282 002c FFF7FEFF 		bl	printNotif
 375:modem.c       ****     
 376:modem.c       ****     // If the modem has a status
 377:modem.c       ****     if(status){
 1283              		.loc 1 377 0
 1284 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1285 0032 002B     		cmp	r3, #0
 1286 0034 21D0     		beq	.L76
 1287              	.LBB8:
 378:modem.c       ****         // Create a character array of length 10 called creg
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 32


 379:modem.c       ****         char creg[10];
 380:modem.c       ****         // Extract string from the UART
 381:modem.c       ****         extract_string(uart_received_string,": ","\r",creg);
 1288              		.loc 1 381 0
 1289 0036 3B1D     		adds	r3, r7, #4
 1290 0038 184A     		ldr	r2, .L80+24
 1291 003a 1949     		ldr	r1, .L80+28
 1292 003c 1548     		ldr	r0, .L80+16
 1293 003e FFF7FEFF 		bl	extract_string
 382:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Registered to network, CREG: %s",creg);
 1294              		.loc 1 382 0
 1295 0042 3B1D     		adds	r3, r7, #4
 1296 0044 1A46     		mov	r2, r3
 1297 0046 1749     		ldr	r1, .L80+32
 1298 0048 0020     		movs	r0, #0
 1299 004a FFF7FEFF 		bl	printNotif
 383:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Done extracing string AT+CREG?");
 1300              		.loc 1 383 0
 1301 004e 1649     		ldr	r1, .L80+36
 1302 0050 0020     		movs	r0, #0
 1303 0052 FFF7FEFF 		bl	printNotif
 384:modem.c       ****     
 385:modem.c       ****         // Search creg for "0,1" or "0,5", if either exists and either is not equal to NULL, return
 386:modem.c       ****         if((strstr(creg,"0,1")!=NULL)||(strstr(creg,"0,5")!=NULL)){
 1304              		.loc 1 386 0
 1305 0056 3B1D     		adds	r3, r7, #4
 1306 0058 1449     		ldr	r1, .L80+40
 1307 005a 1846     		mov	r0, r3
 1308 005c FFF7FEFF 		bl	strstr
 1309 0060 0346     		mov	r3, r0
 1310 0062 002B     		cmp	r3, #0
 1311 0064 07D1     		bne	.L77
 1312              		.loc 1 386 0 is_stmt 0 discriminator 1
 1313 0066 3B1D     		adds	r3, r7, #4
 1314 0068 1149     		ldr	r1, .L80+44
 1315 006a 1846     		mov	r0, r3
 1316 006c FFF7FEFF 		bl	strstr
 1317 0070 0346     		mov	r3, r0
 1318 0072 002B     		cmp	r3, #0
 1319 0074 01D0     		beq	.L76
 1320              	.L77:
 387:modem.c       ****             //time_network_connect = getTimeStamp();
 388:modem.c       ****             return 1u;
 1321              		.loc 1 388 0 is_stmt 1
 1322 0076 0123     		movs	r3, #1
 1323 0078 00E0     		b	.L79
 1324              	.L76:
 1325              	.LBE8:
 389:modem.c       ****         }
 390:modem.c       ****     }
 391:modem.c       ****     // If the modem doesn't have a status, return 0u
 392:modem.c       ****     return 0u;
 1326              		.loc 1 392 0
 1327 007a 0023     		movs	r3, #0
 1328              	.L79:
 393:modem.c       ****         
 394:modem.c       **** }
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 33


 1329              		.loc 1 394 0
 1330 007c 1846     		mov	r0, r3
 1331 007e 1037     		adds	r7, r7, #16
 1332              		.cfi_def_cfa_offset 8
 1333 0080 BD46     		mov	sp, r7
 1334              		.cfi_def_cfa_register 13
 1335              		@ sp needed
 1336 0082 80BD     		pop	{r7, pc}
 1337              	.L81:
 1338              		.align	2
 1339              	.L80:
 1340 0084 30020000 		.word	.LC17
 1341 0088 00000000 		.word	.LC0
 1342 008c 44020000 		.word	.LC18
 1343 0090 50020000 		.word	.LC19
 1344 0094 00000000 		.word	uart_received_string
 1345 0098 6C020000 		.word	.LC20
 1346 009c 88020000 		.word	.LC21
 1347 00a0 8C020000 		.word	.LC22
 1348 00a4 90020000 		.word	.LC23
 1349 00a8 B0020000 		.word	.LC24
 1350 00ac D0020000 		.word	.LC25
 1351 00b0 D4020000 		.word	.LC26
 1352              		.cfi_endproc
 1353              	.LFE76:
 1354              		.size	is_connected_to_cell_network, .-is_connected_to_cell_network
 1355              		.section	.rodata
 1356              		.align	2
 1357              	.LC27:
 1358 02d8 41542353 		.ascii	"AT#SGACT=1,1\015\012\000"
 1358      47414354 
 1358      3D312C31 
 1358      0D0A00
 1359              		.section	.text.set_up_internet_connection,"ax",%progbits
 1360              		.align	2
 1361              		.global	set_up_internet_connection
 1362              		.thumb
 1363              		.thumb_func
 1364              		.type	set_up_internet_connection, %function
 1365              	set_up_internet_connection:
 1366              	.LFB77:
 395:modem.c       **** 
 396:modem.c       **** // Connect the modem to the internet
 397:modem.c       **** void set_up_internet_connection(){
 1367              		.loc 1 397 0
 1368              		.cfi_startproc
 1369              		@ args = 0, pretend = 0, frame = 0
 1370              		@ frame_needed = 1, uses_anonymous_args = 0
 1371 0000 80B5     		push	{r7, lr}
 1372              		.cfi_def_cfa_offset 8
 1373              		.cfi_offset 7, -8
 1374              		.cfi_offset 14, -4
 1375 0002 00AF     		add	r7, sp, #0
 1376              		.cfi_def_cfa_register 7
 398:modem.c       ****     
 399:modem.c       ****     //port 3
 400:modem.c       ****    //<connId>,<srMode>,<dataMode>, 
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 34


 401:modem.c       ****     //at_write_command("AT#SCFGEXT=1,1,0,0,0,0\r", "OK",DEFAULT_AT_TIMEOUT);////LTE modem relevant
 402:modem.c       ****     
 403:modem.c       ****     //<connId>,<cid>,<pktSz>,<maxTo>,<connTo>,<txTo>
 404:modem.c       ****     //at_write_command("AT#SCFG=1,3,300,90,600,50\r", "OK",DEFAULT_AT_TIMEOUT); //LTE modem relevan
 405:modem.c       ****     // <cid>,<stat>
 406:modem.c       ****    
 407:modem.c       ****     // AT command SGACT is Context Activation command is used to activate the specified PDP context
 408:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",1000u);
 1377              		.loc 1 408 0
 1378 0004 4FF47A72 		mov	r2, #1000
 1379 0008 0249     		ldr	r1, .L83
 1380 000a 0348     		ldr	r0, .L83+4
 1381 000c FFF7FEFF 		bl	at_write_command
 409:modem.c       ****     
 410:modem.c       **** }
 1382              		.loc 1 410 0
 1383 0010 00BF     		nop
 1384 0012 80BD     		pop	{r7, pc}
 1385              	.L84:
 1386              		.align	2
 1387              	.L83:
 1388 0014 00000000 		.word	.LC0
 1389 0018 D8020000 		.word	.LC27
 1390              		.cfi_endproc
 1391              	.LFE77:
 1392              		.size	set_up_internet_connection, .-set_up_internet_connection
 1393              		.section	.rodata
 1394 02e7 00       		.align	2
 1395              	.LC28:
 1396 02e8 312C3100 		.ascii	"1,1\000"
 1397              		.align	2
 1398              	.LC29:
 1399 02ec 41542353 		.ascii	"AT#SGACT?\015\000"
 1399      47414354 
 1399      3F0D00
 1400              		.section	.text.is_connected_to_internet,"ax",%progbits
 1401              		.align	2
 1402              		.global	is_connected_to_internet
 1403              		.thumb
 1404              		.thumb_func
 1405              		.type	is_connected_to_internet, %function
 1406              	is_connected_to_internet:
 1407              	.LFB78:
 411:modem.c       **** 
 412:modem.c       **** // Checks if the modem is connected to the internet
 413:modem.c       **** uint8 is_connected_to_internet(){
 1408              		.loc 1 413 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 0
 1411              		@ frame_needed = 1, uses_anonymous_args = 0
 1412 0000 80B5     		push	{r7, lr}
 1413              		.cfi_def_cfa_offset 8
 1414              		.cfi_offset 7, -8
 1415              		.cfi_offset 14, -4
 1416 0002 00AF     		add	r7, sp, #0
 1417              		.cfi_def_cfa_register 7
 414:modem.c       ****     // AT command SGACT? reports the range for the parameters <cid> and <stat>
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 35


 415:modem.c       ****     // cid: is the Packet Data Protocol (PDP) Context Identifier which specifies the particular PDP
 416:modem.c       ****     // stat: gives the context staus (0 deactivated and 1 activated)
 417:modem.c       ****     // Check for 3,1 if Verizon 
 418:modem.c       ****     if(at_write_command("AT#SGACT?\r", "1,1",DEFAULT_AT_TIMEOUT)){
 1418              		.loc 1 418 0
 1419 0004 4FF4FA62 		mov	r2, #2000
 1420 0008 0549     		ldr	r1, .L88
 1421 000a 0648     		ldr	r0, .L88+4
 1422 000c FFF7FEFF 		bl	at_write_command
 1423 0010 0346     		mov	r3, r0
 1424 0012 002B     		cmp	r3, #0
 1425 0014 01D0     		beq	.L86
 419:modem.c       ****         return 1u;
 1426              		.loc 1 419 0
 1427 0016 0123     		movs	r3, #1
 1428 0018 00E0     		b	.L87
 1429              	.L86:
 420:modem.c       ****     }
 421:modem.c       ****     return 0u;  
 1430              		.loc 1 421 0
 1431 001a 0023     		movs	r3, #0
 1432              	.L87:
 422:modem.c       **** }
 1433              		.loc 1 422 0
 1434 001c 1846     		mov	r0, r3
 1435 001e 80BD     		pop	{r7, pc}
 1436              	.L89:
 1437              		.align	2
 1438              	.L88:
 1439 0020 E8020000 		.word	.LC28
 1440 0024 EC020000 		.word	.LC29
 1441              		.cfi_endproc
 1442              	.LFE78:
 1443              		.size	is_connected_to_internet, .-is_connected_to_internet
 1444              		.section	.rodata
 1445 02f7 00       		.align	2
 1446              	.LC30:
 1447 02f8 41542B43 		.ascii	"AT+CESQ\015\000"
 1447      4553510D 
 1447      00
 1448 0301 000000   		.align	2
 1449              	.LC31:
 1450 0304 4E657477 		.ascii	"Network STts: %s\000"
 1450      6F726B20 
 1450      53547473 
 1450      3A202573 
 1450      00
 1451 0315 000000   		.align	2
 1452              	.LC32:
 1453 0318 2C00     		.ascii	",\000"
 1454              		.section	.text.get_cell_network_stats,"ax",%progbits
 1455              		.align	2
 1456              		.global	get_cell_network_stats
 1457              		.thumb
 1458              		.thumb_func
 1459              		.type	get_cell_network_stats, %function
 1460              	get_cell_network_stats:
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 36


 1461              	.LFB79:
 423:modem.c       **** 
 424:modem.c       **** // Get cellular network stats 
 425:modem.c       **** void get_cell_network_stats(){
 1462              		.loc 1 425 0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 40
 1465              		@ frame_needed = 1, uses_anonymous_args = 0
 1466 0000 80B5     		push	{r7, lr}
 1467              		.cfi_def_cfa_offset 8
 1468              		.cfi_offset 7, -8
 1469              		.cfi_offset 14, -4
 1470 0002 8AB0     		sub	sp, sp, #40
 1471              		.cfi_def_cfa_offset 48
 1472 0004 00AF     		add	r7, sp, #0
 1473              		.cfi_def_cfa_register 7
 1474              	.LBB9:
 426:modem.c       ****     // Gets RSSI and FER values
 427:modem.c       ****     // RSSI (Received Signal Strength Indicator) is a measurement of how well your device can hear 
 428:modem.c       ****     // RSRQ (Reference Signal Received Quality) (or SQ for short) gives the signal quality. 
 429:modem.c       ****     for(uint8 attempts =0; attempts <10; attempts++){
 1475              		.loc 1 429 0
 1476 0006 0023     		movs	r3, #0
 1477 0008 87F82730 		strb	r3, [r7, #39]
 1478 000c 77E0     		b	.L91
 1479              	.L100:
 1480              	.LBB10:
 430:modem.c       ****         // AT command CESQ checks Signal Quality
 431:modem.c       ****         at_write_command("AT+CESQ\r", "OK",DEFAULT_AT_TIMEOUT);
 1481              		.loc 1 431 0
 1482 000e 4FF4FA62 		mov	r2, #2000
 1483 0012 3F49     		ldr	r1, .L102
 1484 0014 3F48     		ldr	r0, .L102+4
 1485 0016 FFF7FEFF 		bl	at_write_command
 432:modem.c       ****         
 433:modem.c       ****         char cesq[30]; // Create a character array of length 30 called cesq 
 434:modem.c       ****         // Extract string from the UART
 435:modem.c       ****         extract_string(uart_received_string,": ","\r",cesq);
 1486              		.loc 1 435 0
 1487 001a 3B46     		mov	r3, r7
 1488 001c 3E4A     		ldr	r2, .L102+8
 1489 001e 3F49     		ldr	r1, .L102+12
 1490 0020 3F48     		ldr	r0, .L102+16
 1491 0022 FFF7FEFF 		bl	extract_string
 436:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"Network STts: %s",cesq);
 1492              		.loc 1 436 0
 1493 0026 3B46     		mov	r3, r7
 1494 0028 1A46     		mov	r2, r3
 1495 002a 3E49     		ldr	r1, .L102+20
 1496 002c 0020     		movs	r0, #0
 1497 002e FFF7FEFF 		bl	printNotif
 437:modem.c       ****         
 438:modem.c       ****         char *token; // Create a character variable pointer
 439:modem.c       ****         // strtok(): breaks "cesq" into smaller string when sees ","
 440:modem.c       ****         token = strtok(cesq,",");
 1498              		.loc 1 440 0
 1499 0032 3B46     		mov	r3, r7
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 37


 1500 0034 3C49     		ldr	r1, .L102+24
 1501 0036 1846     		mov	r0, r3
 1502 0038 FFF7FEFF 		bl	strtok
 1503 003c 3862     		str	r0, [r7, #32]
 441:modem.c       ****         // If token is not NULL then set modem_stats.rssi equal to the integer "token"
 442:modem.c       ****         // int atoi(const char *str) converts the string argument str to an integer (type int).
 443:modem.c       ****         if(token != NULL){
 1504              		.loc 1 443 0
 1505 003e 3B6A     		ldr	r3, [r7, #32]
 1506 0040 002B     		cmp	r3, #0
 1507 0042 06D0     		beq	.L92
 444:modem.c       ****             modem_stats.rssi = atoi(token);
 1508              		.loc 1 444 0
 1509 0044 386A     		ldr	r0, [r7, #32]
 1510 0046 FFF7FEFF 		bl	atoi
 1511 004a 0346     		mov	r3, r0
 1512 004c DAB2     		uxtb	r2, r3
 1513 004e 374B     		ldr	r3, .L102+28
 1514 0050 1A70     		strb	r2, [r3]
 1515              	.L92:
 445:modem.c       ****         }
 446:modem.c       ****         token = strtok(NULL,",");
 1516              		.loc 1 446 0
 1517 0052 3549     		ldr	r1, .L102+24
 1518 0054 0020     		movs	r0, #0
 1519 0056 FFF7FEFF 		bl	strtok
 1520 005a 3862     		str	r0, [r7, #32]
 447:modem.c       ****         if(token != NULL){
 1521              		.loc 1 447 0
 1522 005c 3B6A     		ldr	r3, [r7, #32]
 1523 005e 002B     		cmp	r3, #0
 1524 0060 06D0     		beq	.L93
 448:modem.c       ****             modem_stats.ber = atoi(token);
 1525              		.loc 1 448 0
 1526 0062 386A     		ldr	r0, [r7, #32]
 1527 0064 FFF7FEFF 		bl	atoi
 1528 0068 0346     		mov	r3, r0
 1529 006a DAB2     		uxtb	r2, r3
 1530 006c 2F4B     		ldr	r3, .L102+28
 1531 006e 5A70     		strb	r2, [r3, #1]
 1532              	.L93:
 449:modem.c       ****         }
 450:modem.c       ****         token = strtok(NULL,",");
 1533              		.loc 1 450 0
 1534 0070 2D49     		ldr	r1, .L102+24
 1535 0072 0020     		movs	r0, #0
 1536 0074 FFF7FEFF 		bl	strtok
 1537 0078 3862     		str	r0, [r7, #32]
 451:modem.c       ****         if(token != NULL){
 1538              		.loc 1 451 0
 1539 007a 3B6A     		ldr	r3, [r7, #32]
 1540 007c 002B     		cmp	r3, #0
 1541 007e 06D0     		beq	.L94
 452:modem.c       ****             modem_stats.rscp = atoi(token);
 1542              		.loc 1 452 0
 1543 0080 386A     		ldr	r0, [r7, #32]
 1544 0082 FFF7FEFF 		bl	atoi
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 38


 1545 0086 0346     		mov	r3, r0
 1546 0088 DAB2     		uxtb	r2, r3
 1547 008a 284B     		ldr	r3, .L102+28
 1548 008c 9A70     		strb	r2, [r3, #2]
 1549              	.L94:
 453:modem.c       ****         }
 454:modem.c       ****         token = strtok(NULL,",");
 1550              		.loc 1 454 0
 1551 008e 2649     		ldr	r1, .L102+24
 1552 0090 0020     		movs	r0, #0
 1553 0092 FFF7FEFF 		bl	strtok
 1554 0096 3862     		str	r0, [r7, #32]
 455:modem.c       ****         if(token != NULL){
 1555              		.loc 1 455 0
 1556 0098 3B6A     		ldr	r3, [r7, #32]
 1557 009a 002B     		cmp	r3, #0
 1558 009c 06D0     		beq	.L95
 456:modem.c       ****             modem_stats.ecno = atoi(token);
 1559              		.loc 1 456 0
 1560 009e 386A     		ldr	r0, [r7, #32]
 1561 00a0 FFF7FEFF 		bl	atoi
 1562 00a4 0346     		mov	r3, r0
 1563 00a6 DAB2     		uxtb	r2, r3
 1564 00a8 204B     		ldr	r3, .L102+28
 1565 00aa DA70     		strb	r2, [r3, #3]
 1566              	.L95:
 457:modem.c       ****         }
 458:modem.c       ****         token = strtok(NULL,",");
 1567              		.loc 1 458 0
 1568 00ac 1E49     		ldr	r1, .L102+24
 1569 00ae 0020     		movs	r0, #0
 1570 00b0 FFF7FEFF 		bl	strtok
 1571 00b4 3862     		str	r0, [r7, #32]
 459:modem.c       ****         if(token != NULL){
 1572              		.loc 1 459 0
 1573 00b6 3B6A     		ldr	r3, [r7, #32]
 1574 00b8 002B     		cmp	r3, #0
 1575 00ba 06D0     		beq	.L96
 460:modem.c       ****             modem_stats.rsrq = atoi(token);
 1576              		.loc 1 460 0
 1577 00bc 386A     		ldr	r0, [r7, #32]
 1578 00be FFF7FEFF 		bl	atoi
 1579 00c2 0346     		mov	r3, r0
 1580 00c4 DAB2     		uxtb	r2, r3
 1581 00c6 194B     		ldr	r3, .L102+28
 1582 00c8 1A71     		strb	r2, [r3, #4]
 1583              	.L96:
 461:modem.c       ****         }
 462:modem.c       ****         token = strtok(NULL,",");
 1584              		.loc 1 462 0
 1585 00ca 1749     		ldr	r1, .L102+24
 1586 00cc 0020     		movs	r0, #0
 1587 00ce FFF7FEFF 		bl	strtok
 1588 00d2 3862     		str	r0, [r7, #32]
 463:modem.c       ****         if(token != NULL){
 1589              		.loc 1 463 0
 1590 00d4 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 39


 1591 00d6 002B     		cmp	r3, #0
 1592 00d8 06D0     		beq	.L97
 464:modem.c       ****             modem_stats.rsrp = atoi(token);
 1593              		.loc 1 464 0
 1594 00da 386A     		ldr	r0, [r7, #32]
 1595 00dc FFF7FEFF 		bl	atoi
 1596 00e0 0346     		mov	r3, r0
 1597 00e2 DAB2     		uxtb	r2, r3
 1598 00e4 114B     		ldr	r3, .L102+28
 1599 00e6 5A71     		strb	r2, [r3, #5]
 1600              	.L97:
 465:modem.c       ****         }
 466:modem.c       ****         // If rsrp is not equal to 255 then break.
 467:modem.c       ****         if(modem_stats.rsrp != 255){
 1601              		.loc 1 467 0
 1602 00e8 104B     		ldr	r3, .L102+28
 1603 00ea 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1604 00ec FF2B     		cmp	r3, #255
 1605 00ee 01D0     		beq	.L98
 468:modem.c       ****             break;
 1606              		.loc 1 468 0
 1607 00f0 00BF     		nop
 1608              	.LBE10:
 1609              	.LBE9:
 469:modem.c       ****         }
 470:modem.c       ****     }
 471:modem.c       **** }
 1610              		.loc 1 471 0
 1611 00f2 08E0     		b	.L101
 1612              	.L98:
 1613              	.LBB11:
 429:modem.c       ****         // AT command CESQ checks Signal Quality
 1614              		.loc 1 429 0
 1615 00f4 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1616 00f8 0133     		adds	r3, r3, #1
 1617 00fa 87F82730 		strb	r3, [r7, #39]
 1618              	.L91:
 429:modem.c       ****         // AT command CESQ checks Signal Quality
 1619              		.loc 1 429 0 is_stmt 0 discriminator 1
 1620 00fe 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1621 0102 092B     		cmp	r3, #9
 1622 0104 83D9     		bls	.L100
 1623              	.L101:
 1624              	.LBE11:
 1625              		.loc 1 471 0 is_stmt 1
 1626 0106 00BF     		nop
 1627 0108 2837     		adds	r7, r7, #40
 1628              		.cfi_def_cfa_offset 8
 1629 010a BD46     		mov	sp, r7
 1630              		.cfi_def_cfa_register 13
 1631              		@ sp needed
 1632 010c 80BD     		pop	{r7, pc}
 1633              	.L103:
 1634 010e 00BF     		.align	2
 1635              	.L102:
 1636 0110 00000000 		.word	.LC0
 1637 0114 F8020000 		.word	.LC30
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 40


 1638 0118 88020000 		.word	.LC21
 1639 011c 8C020000 		.word	.LC22
 1640 0120 00000000 		.word	uart_received_string
 1641 0124 04030000 		.word	.LC31
 1642 0128 18030000 		.word	.LC32
 1643 012c 00000000 		.word	modem_stats
 1644              		.cfi_endproc
 1645              	.LFE79:
 1646              		.size	get_cell_network_stats, .-get_cell_network_stats
 1647              		.section	.rodata
 1648 031a 0000     		.align	2
 1649              	.LC33:
 1650 031c 41542343 		.ascii	"AT#CGMM\015\000"
 1650      474D4D0D 
 1650      00
 1651 0325 000000   		.align	2
 1652              	.LC34:
 1653 0328 4D6F6465 		.ascii	"Modem Model: %s\000"
 1653      6D204D6F 
 1653      64656C3A 
 1653      20257300 
 1654              		.align	2
 1655              	.LC35:
 1656 0338 41542343 		.ascii	"AT#CCID\015\000"
 1656      4349440D 
 1656      00
 1657 0341 000000   		.align	2
 1658              	.LC36:
 1659 0344 53494D20 		.ascii	"SIM ID: %s\000"
 1659      49443A20 
 1659      257300
 1660 034f 00       		.align	2
 1661              	.LC37:
 1662 0350 41542B43 		.ascii	"AT+CGSN\015\000"
 1662      47534E0D 
 1662      00
 1663 0359 000000   		.align	2
 1664              	.LC38:
 1665 035c 494D4549 		.ascii	"IMEI: %s\000"
 1665      3A202573 
 1665      00
 1666 0365 000000   		.align	2
 1667              	.LC39:
 1668 0368 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\015\012"
 1668      4744434F 
 1668      4E543D31 
 1668      2C224950 
 1668      222C2277 
 1669 0391 00       		.ascii	"\000"
 1670 0392 0000     		.align	2
 1671              	.LC40:
 1672 0394 41542B43 		.ascii	"AT+CFUN?\015\000"
 1672      46554E3F 
 1672      0D00
 1673 039e 0000     		.align	2
 1674              	.LC41:
 1675 03a0 4346554E 		.ascii	"CFUN: %s\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 41


 1675      3A202573 
 1675      00
 1676 03a9 000000   		.align	2
 1677              	.LC42:
 1678 03ac 41542B43 		.ascii	"AT+CFUN=1\015\000"
 1678      46554E3D 
 1678      310D00
 1679              		.section	.text.modem_configure_settings,"ax",%progbits
 1680              		.align	2
 1681              		.global	modem_configure_settings
 1682              		.thumb
 1683              		.thumb_func
 1684              		.type	modem_configure_settings, %function
 1685              	modem_configure_settings:
 1686              	.LFB80:
 472:modem.c       ****     
 473:modem.c       ****     
 474:modem.c       **** // Configure the modem settings
 475:modem.c       **** void modem_configure_settings(){
 1687              		.loc 1 475 0
 1688              		.cfi_startproc
 1689              		@ args = 0, pretend = 0, frame = 16
 1690              		@ frame_needed = 1, uses_anonymous_args = 0
 1691 0000 80B5     		push	{r7, lr}
 1692              		.cfi_def_cfa_offset 8
 1693              		.cfi_offset 7, -8
 1694              		.cfi_offset 14, -4
 1695 0002 84B0     		sub	sp, sp, #16
 1696              		.cfi_def_cfa_offset 24
 1697 0004 00AF     		add	r7, sp, #0
 1698              		.cfi_def_cfa_register 7
 476:modem.c       ****     
 477:modem.c       ****     // Save/print modem model ID number
 478:modem.c       ****     if(modem_info.model_id[0] == '\0'){
 1699              		.loc 1 478 0
 1700 0006 3B4B     		ldr	r3, .L111
 1701 0008 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1702 000a 002B     		cmp	r3, #0
 1703 000c 13D1     		bne	.L105
 479:modem.c       ****         // AT command #CGMM returns the "device model identification" code with the command echo.
 480:modem.c       ****         if(at_write_command("AT#CGMM\r","OK",DEFAULT_AT_TIMEOUT)){
 1704              		.loc 1 480 0
 1705 000e 4FF4FA62 		mov	r2, #2000
 1706 0012 3949     		ldr	r1, .L111+4
 1707 0014 3948     		ldr	r0, .L111+8
 1708 0016 FFF7FEFF 		bl	at_write_command
 1709 001a 0346     		mov	r3, r0
 1710 001c 002B     		cmp	r3, #0
 1711 001e 0AD0     		beq	.L105
 481:modem.c       ****             // Extract modem model ID number string from the UART
 482:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.model_id);
 1712              		.loc 1 482 0
 1713 0020 374B     		ldr	r3, .L111+12
 1714 0022 384A     		ldr	r2, .L111+16
 1715 0024 3849     		ldr	r1, .L111+20
 1716 0026 3948     		ldr	r0, .L111+24
 1717 0028 FFF7FEFF 		bl	extract_string
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 42


 483:modem.c       ****             // Print modem model ID number
 484:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"Modem Model: %s",modem_info.model_id);
 1718              		.loc 1 484 0
 1719 002c 344A     		ldr	r2, .L111+12
 1720 002e 3849     		ldr	r1, .L111+28
 1721 0030 0020     		movs	r0, #0
 1722 0032 FFF7FEFF 		bl	printNotif
 1723              	.L105:
 485:modem.c       ****         }
 486:modem.c       ****     }
 487:modem.c       ****     
 488:modem.c       ****    // Save/print SIM-card ID
 489:modem.c       ****    if(modem_info.sim_id[0] == '\0'){
 1724              		.loc 1 489 0
 1725 0036 2F4B     		ldr	r3, .L111
 1726 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1727 003a 002B     		cmp	r3, #0
 1728 003c 13D1     		bne	.L106
 490:modem.c       ****         // AT command #CCID is an execution command that reads the SIM number 
 491:modem.c       ****         if(at_write_command("AT#CCID\r", "OK", DEFAULT_AT_TIMEOUT)){
 1729              		.loc 1 491 0
 1730 003e 4FF4FA62 		mov	r2, #2000
 1731 0042 2D49     		ldr	r1, .L111+4
 1732 0044 3348     		ldr	r0, .L111+32
 1733 0046 FFF7FEFF 		bl	at_write_command
 1734 004a 0346     		mov	r3, r0
 1735 004c 002B     		cmp	r3, #0
 1736 004e 0AD0     		beq	.L106
 492:modem.c       ****             // Extract SIM-card ID string from the UART
 493:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.sim_id);
 1737              		.loc 1 493 0
 1738 0050 284B     		ldr	r3, .L111
 1739 0052 2C4A     		ldr	r2, .L111+16
 1740 0054 2C49     		ldr	r1, .L111+20
 1741 0056 2D48     		ldr	r0, .L111+24
 1742 0058 FFF7FEFF 		bl	extract_string
 494:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"SIM ID: %s",modem_info.sim_id);
 1743              		.loc 1 494 0
 1744 005c 254A     		ldr	r2, .L111
 1745 005e 2E49     		ldr	r1, .L111+36
 1746 0060 0020     		movs	r0, #0
 1747 0062 FFF7FEFF 		bl	printNotif
 1748              	.L106:
 495:modem.c       ****         }
 496:modem.c       ****    }
 497:modem.c       **** 
 498:modem.c       ****     // Save/print modem IMEI
 499:modem.c       ****     if(modem_info.imei[0] == '\0'){
 1749              		.loc 1 499 0
 1750 0066 234B     		ldr	r3, .L111
 1751 0068 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1752 006c 002B     		cmp	r3, #0
 1753 006e 13D1     		bne	.L107
 500:modem.c       ****         // AT command #CGSN returns the product serial number, identified as the IMEI of the mobile
 501:modem.c       ****         if(at_write_command("AT+CGSN\r","OK",DEFAULT_AT_TIMEOUT)){
 1754              		.loc 1 501 0
 1755 0070 4FF4FA62 		mov	r2, #2000
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 43


 1756 0074 2049     		ldr	r1, .L111+4
 1757 0076 2948     		ldr	r0, .L111+40
 1758 0078 FFF7FEFF 		bl	at_write_command
 1759 007c 0346     		mov	r3, r0
 1760 007e 002B     		cmp	r3, #0
 1761 0080 0AD0     		beq	.L107
 502:modem.c       ****             // Extract modem IMEI number string from the UART
 503:modem.c       ****             extract_string(uart_received_string,": ","\r",modem_info.imei);
 1762              		.loc 1 503 0
 1763 0082 274B     		ldr	r3, .L111+44
 1764 0084 1F4A     		ldr	r2, .L111+16
 1765 0086 2049     		ldr	r1, .L111+20
 1766 0088 2048     		ldr	r0, .L111+24
 1767 008a FFF7FEFF 		bl	extract_string
 504:modem.c       ****             // Print modem IMEI number
 505:modem.c       ****             printNotif(NOTIF_TYPE_EVENT,"IMEI: %s",modem_info.imei);
 1768              		.loc 1 505 0
 1769 008e 244A     		ldr	r2, .L111+44
 1770 0090 2449     		ldr	r1, .L111+48
 1771 0092 0020     		movs	r0, #0
 1772 0094 FFF7FEFF 		bl	printNotif
 1773              	.L107:
 506:modem.c       ****         } 
 507:modem.c       ****     }
 508:modem.c       ****     
 509:modem.c       ****     // Configure protocol and cellular end point
 510:modem.c       ****     // AT command +CGDCONT defines the PDP context parameter values for a PDP context identified by
 511:modem.c       ****     at_write_command("AT+CGDCONT=1,\"IP\",\"wireless.twilio.com\"\r\n", "OK", DEFAULT_AT_TIMEOUT);
 1774              		.loc 1 511 0
 1775 0098 4FF4FA62 		mov	r2, #2000
 1776 009c 1649     		ldr	r1, .L111+4
 1777 009e 2248     		ldr	r0, .L111+52
 1778 00a0 FFF7FEFF 		bl	at_write_command
 512:modem.c       ****     
 513:modem.c       ****     // Check if modem power savings is enabled. If so, disable it so we can send data.
 514:modem.c       ****     // AT command +CFUN? is a read command that reports the current setting of <fun> which is the p
 515:modem.c       ****     if(at_write_command("AT+CFUN?\r", "OK",DEFAULT_AT_TIMEOUT)){
 1779              		.loc 1 515 0
 1780 00a4 4FF4FA62 		mov	r2, #2000
 1781 00a8 1349     		ldr	r1, .L111+4
 1782 00aa 2048     		ldr	r0, .L111+56
 1783 00ac FFF7FEFF 		bl	at_write_command
 1784 00b0 0346     		mov	r3, r0
 1785 00b2 002B     		cmp	r3, #0
 1786 00b4 19D0     		beq	.L110
 1787              	.LBB12:
 516:modem.c       ****         char CFUN[10]; // Create a character array of length 10 called CFUN 
 517:modem.c       ****         // Extract UART string recieved from the modem
 518:modem.c       ****         extract_string(uart_received_string,": ","\r",CFUN);
 1788              		.loc 1 518 0
 1789 00b6 3B1D     		adds	r3, r7, #4
 1790 00b8 124A     		ldr	r2, .L111+16
 1791 00ba 1349     		ldr	r1, .L111+20
 1792 00bc 1348     		ldr	r0, .L111+24
 1793 00be FFF7FEFF 		bl	extract_string
 519:modem.c       ****         // Print UART string recieved from the modem
 520:modem.c       ****         printNotif(NOTIF_TYPE_EVENT,"CFUN: %s",CFUN);
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 44


 1794              		.loc 1 520 0
 1795 00c2 3B1D     		adds	r3, r7, #4
 1796 00c4 1A46     		mov	r2, r3
 1797 00c6 1A49     		ldr	r1, .L111+60
 1798 00c8 0020     		movs	r0, #0
 1799 00ca FFF7FEFF 		bl	printNotif
 521:modem.c       ****         // Search CRUN for "1", if "1" exists, it will return 1u otherwise it will return NULL
 522:modem.c       ****         // If it returns NULL, then write another command to the modem
 523:modem.c       ****         if(strstr(CFUN,"1") == NULL){
 1800              		.loc 1 523 0
 1801 00ce 3B1D     		adds	r3, r7, #4
 1802 00d0 3121     		movs	r1, #49
 1803 00d2 1846     		mov	r0, r3
 1804 00d4 FFF7FEFF 		bl	strchr
 1805 00d8 0346     		mov	r3, r0
 1806 00da 002B     		cmp	r3, #0
 1807 00dc 05D1     		bne	.L110
 524:modem.c       ****             // AT command +CFUN= is a set command which selects the level of functionality in the m
 525:modem.c       ****             // = 1 means mobile full functionality with power saving disabled 
 526:modem.c       ****             at_write_command("AT+CFUN=1\r", "OK",DEFAULT_AT_TIMEOUT);
 1808              		.loc 1 526 0
 1809 00de 4FF4FA62 		mov	r2, #2000
 1810 00e2 0549     		ldr	r1, .L111+4
 1811 00e4 1348     		ldr	r0, .L111+64
 1812 00e6 FFF7FEFF 		bl	at_write_command
 1813              	.L110:
 1814              	.LBE12:
 527:modem.c       ****         }
 528:modem.c       ****     }
 529:modem.c       **** 
 530:modem.c       ****     
 531:modem.c       **** }
 1815              		.loc 1 531 0
 1816 00ea 00BF     		nop
 1817 00ec 1037     		adds	r7, r7, #16
 1818              		.cfi_def_cfa_offset 8
 1819 00ee BD46     		mov	sp, r7
 1820              		.cfi_def_cfa_register 13
 1821              		@ sp needed
 1822 00f0 80BD     		pop	{r7, pc}
 1823              	.L112:
 1824 00f2 00BF     		.align	2
 1825              	.L111:
 1826 00f4 00000000 		.word	modem_info
 1827 00f8 00000000 		.word	.LC0
 1828 00fc 1C030000 		.word	.LC33
 1829 0100 14000000 		.word	modem_info+20
 1830 0104 88020000 		.word	.LC21
 1831 0108 8C020000 		.word	.LC22
 1832 010c 00000000 		.word	uart_received_string
 1833 0110 28030000 		.word	.LC34
 1834 0114 38030000 		.word	.LC35
 1835 0118 44030000 		.word	.LC36
 1836 011c 50030000 		.word	.LC37
 1837 0120 28000000 		.word	modem_info+40
 1838 0124 5C030000 		.word	.LC38
 1839 0128 68030000 		.word	.LC39
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 45


 1840 012c 94030000 		.word	.LC40
 1841 0130 A0030000 		.word	.LC41
 1842 0134 AC030000 		.word	.LC42
 1843              		.cfi_endproc
 1844              	.LFE80:
 1845              		.size	modem_configure_settings, .-modem_configure_settings
 1846              		.section	.rodata
 1847 03b7 00       		.align	2
 1848              	.LC43:
 1849 03b8 4D6F6465 		.ascii	"Modem not ready to get time. Not conncted to networ"
 1849      6D206E6F 
 1849      74207265 
 1849      61647920 
 1849      746F2067 
 1850 03eb 6B2E00   		.ascii	"k.\000"
 1851 03ee 0000     		.align	2
 1852              	.LC44:
 1853 03f0 41542B43 		.ascii	"AT+CCLK?\015\000"
 1853      434C4B3F 
 1853      0D00
 1854 03fa 0000     		.align	2
 1855              	.LC45:
 1856 03fc 220D00   		.ascii	"\"\015\000"
 1857 03ff 00       		.align	2
 1858              	.LC46:
 1859 0400 3A202200 		.ascii	": \"\000"
 1860              		.align	2
 1861              	.LC47:
 1862 0404 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d-%d\000"
 1862      642F2564 
 1862      2C25643A 
 1862      25643A25 
 1862      642D2564 
 1863 0419 000000   		.align	2
 1864              	.LC48:
 1865 041c 25642F25 		.ascii	"%d/%d/%d,%d:%d:%d+%d\000"
 1865      642F2564 
 1865      2C25643A 
 1865      25643A25 
 1865      642B2564 
 1866 0431 000000   		.align	2
 1867              	.LC49:
 1868 0434 436F756C 		.ascii	"Could not parse modem time.\000"
 1868      64206E6F 
 1868      74207061 
 1868      72736520 
 1868      6D6F6465 
 1869              		.section	.text.modem_get_network_time,"ax",%progbits
 1870              		.align	2
 1871              		.global	modem_get_network_time
 1872              		.thumb
 1873              		.thumb_func
 1874              		.type	modem_get_network_time, %function
 1875              	modem_get_network_time:
 1876              	.LFB81:
 532:modem.c       **** 
 533:modem.c       **** //returns 0 if modem can't get time
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 46


 534:modem.c       **** long modem_get_network_time(){
 1877              		.loc 1 534 0
 1878              		.cfi_startproc
 1879              		@ args = 0, pretend = 0, frame = 104
 1880              		@ frame_needed = 1, uses_anonymous_args = 0
 1881 0000 80B5     		push	{r7, lr}
 1882              		.cfi_def_cfa_offset 8
 1883              		.cfi_offset 7, -8
 1884              		.cfi_offset 14, -4
 1885 0002 A0B0     		sub	sp, sp, #128
 1886              		.cfi_def_cfa_offset 136
 1887 0004 06AF     		add	r7, sp, #24
 1888              		.cfi_def_cfa 7, 112
 535:modem.c       ****     
 536:modem.c       ****     //modem reposen format (careful to include the quotes "")
 537:modem.c       ****     //+CCLK: "20/05/01,10:48:33-16" the "-16" is the number of quarter hourts (15 mins) from GMT ti
 538:modem.c       ****     //ex: 14:48 GMT
 539:modem.c       **** 
 540:modem.c       ****     // If modem_state is not "ready", then print error and return 0
 541:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 1889              		.loc 1 541 0
 1890 0006 444B     		ldr	r3, .L120
 1891 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1892 000a 042B     		cmp	r3, #4
 1893 000c 05D0     		beq	.L114
 542:modem.c       ****         printNotif(NOTIF_TYPE_ERROR,"Modem not ready to get time. Not conncted to network.");
 1894              		.loc 1 542 0
 1895 000e 4349     		ldr	r1, .L120+4
 1896 0010 0220     		movs	r0, #2
 1897 0012 FFF7FEFF 		bl	printNotif
 543:modem.c       ****         return 0;   
 1898              		.loc 1 543 0
 1899 0016 0023     		movs	r3, #0
 1900 0018 7AE0     		b	.L115
 1901              	.L114:
 544:modem.c       ****     }
 545:modem.c       ****     long epoch_time = 0; // Create variable of long time and set equal to 0
 1902              		.loc 1 545 0
 1903 001a 0023     		movs	r3, #0
 1904 001c 7B66     		str	r3, [r7, #100]
 546:modem.c       ****     
 547:modem.c       ****     // AT command +CCLK? is a read command that returns the current setting of the real-time clock 
 548:modem.c       ****     if(at_write_command("AT+CCLK?\r","OK",DEFAULT_AT_TIMEOUT)){
 1905              		.loc 1 548 0
 1906 001e 4FF4FA62 		mov	r2, #2000
 1907 0022 3F49     		ldr	r1, .L120+8
 1908 0024 3F48     		ldr	r0, .L120+12
 1909 0026 FFF7FEFF 		bl	at_write_command
 1910 002a 0346     		mov	r3, r0
 1911 002c 002B     		cmp	r3, #0
 1912 002e 6ED0     		beq	.L116
 1913              	.LBB13:
 549:modem.c       ****         // need to set this to /0
 550:modem.c       ****         char network_time[30]; // Create a character array of length 30 called network_time 
 551:modem.c       ****         network_time[0] = '\0';
 1914              		.loc 1 551 0
 1915 0030 0023     		movs	r3, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 47


 1916 0032 87F84430 		strb	r3, [r7, #68]
 552:modem.c       ****         // Extract UART string recieved from the modem and save to variable network_time
 553:modem.c       ****         extract_string(uart_received_string,": \"","\"\r",network_time);
 1917              		.loc 1 553 0
 1918 0036 07F14403 		add	r3, r7, #68
 1919 003a 3B4A     		ldr	r2, .L120+16
 1920 003c 3B49     		ldr	r1, .L120+20
 1921 003e 3C48     		ldr	r0, .L120+24
 1922 0040 FFF7FEFF 		bl	extract_string
 554:modem.c       ****         
 555:modem.c       ****         ///////////////////  
 556:modem.c       ****         struct tm t; // Creates variable t of struct tm
 557:modem.c       ****         
 558:modem.c       ****         // Creates a bunch of variables of type int and sets them to 0
 559:modem.c       ****         int year, month, day, hour, minute, second, gmt_offset = 0;
 1923              		.loc 1 559 0
 1924 0044 0023     		movs	r3, #0
 1925 0046 BB62     		str	r3, [r7, #40]
 560:modem.c       ****       
 561:modem.c       ****         // Determines the GMT offset 
 562:modem.c       ****         // int sscanf(const char *str, const char *format, ...) reads formatted input from a string
 563:modem.c       ****         // On success, the function returns the number of variables filled. In the case of an input
 564:modem.c       ****         if(sscanf(network_time,"%d/%d/%d,%d:%d:%d-%d",&year,&month,&day,&hour,&minute,&second,&gmt_
 1926              		.loc 1 564 0
 1927 0048 07F13C01 		add	r1, r7, #60
 1928 004c 07F14002 		add	r2, r7, #64
 1929 0050 07F14400 		add	r0, r7, #68
 1930 0054 07F12803 		add	r3, r7, #40
 1931 0058 0493     		str	r3, [sp, #16]
 1932 005a 07F12C03 		add	r3, r7, #44
 1933 005e 0393     		str	r3, [sp, #12]
 1934 0060 07F13003 		add	r3, r7, #48
 1935 0064 0293     		str	r3, [sp, #8]
 1936 0066 07F13403 		add	r3, r7, #52
 1937 006a 0193     		str	r3, [sp, #4]
 1938 006c 07F13803 		add	r3, r7, #56
 1939 0070 0093     		str	r3, [sp]
 1940 0072 0B46     		mov	r3, r1
 1941 0074 2F49     		ldr	r1, .L120+28
 1942 0076 FFF7FEFF 		bl	sscanf
 1943 007a 0346     		mov	r3, r0
 1944 007c 072B     		cmp	r3, #7
 1945 007e 06D1     		bne	.L117
 565:modem.c       ****             gmt_offset = gmt_offset*(900);
 1946              		.loc 1 565 0
 1947 0080 BB6A     		ldr	r3, [r7, #40]
 1948 0082 4FF46172 		mov	r2, #900
 1949 0086 02FB03F3 		mul	r3, r2, r3
 1950 008a BB62     		str	r3, [r7, #40]
 1951 008c 27E0     		b	.L118
 1952              	.L117:
 566:modem.c       ****         }else if(sscanf(network_time,"%d/%d/%d,%d:%d:%d+%d",&year,&month,&day,&hour,&minute,&second
 1953              		.loc 1 566 0
 1954 008e 07F13C01 		add	r1, r7, #60
 1955 0092 07F14002 		add	r2, r7, #64
 1956 0096 07F14400 		add	r0, r7, #68
 1957 009a 07F12803 		add	r3, r7, #40
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 48


 1958 009e 0493     		str	r3, [sp, #16]
 1959 00a0 07F12C03 		add	r3, r7, #44
 1960 00a4 0393     		str	r3, [sp, #12]
 1961 00a6 07F13003 		add	r3, r7, #48
 1962 00aa 0293     		str	r3, [sp, #8]
 1963 00ac 07F13403 		add	r3, r7, #52
 1964 00b0 0193     		str	r3, [sp, #4]
 1965 00b2 07F13803 		add	r3, r7, #56
 1966 00b6 0093     		str	r3, [sp]
 1967 00b8 0B46     		mov	r3, r1
 1968 00ba 1F49     		ldr	r1, .L120+32
 1969 00bc FFF7FEFF 		bl	sscanf
 1970 00c0 0346     		mov	r3, r0
 1971 00c2 072B     		cmp	r3, #7
 1972 00c4 05D1     		bne	.L119
 567:modem.c       ****             gmt_offset = gmt_offset*(-900);
 1973              		.loc 1 567 0
 1974 00c6 BB6A     		ldr	r3, [r7, #40]
 1975 00c8 1C4A     		ldr	r2, .L120+36
 1976 00ca 02FB03F3 		mul	r3, r2, r3
 1977 00ce BB62     		str	r3, [r7, #40]
 1978 00d0 05E0     		b	.L118
 1979              	.L119:
 568:modem.c       ****         }else{
 569:modem.c       ****             printNotif(NOTIF_TYPE_ERROR,"Could not parse modem time.");
 1980              		.loc 1 569 0
 1981 00d2 1B49     		ldr	r1, .L120+40
 1982 00d4 0220     		movs	r0, #2
 1983 00d6 FFF7FEFF 		bl	printNotif
 570:modem.c       ****             return 0;  // Return 0 if cannot get time 
 1984              		.loc 1 570 0
 1985 00da 0023     		movs	r3, #0
 1986 00dc 18E0     		b	.L115
 1987              	.L118:
 571:modem.c       ****         }
 572:modem.c       ****         
 573:modem.c       ****         // Sets each variable to the correct time 
 574:modem.c       ****         t.tm_sec = second;
 1988              		.loc 1 574 0
 1989 00de FB6A     		ldr	r3, [r7, #44]
 1990 00e0 7B60     		str	r3, [r7, #4]
 575:modem.c       ****         t.tm_min = minute;
 1991              		.loc 1 575 0
 1992 00e2 3B6B     		ldr	r3, [r7, #48]
 1993 00e4 BB60     		str	r3, [r7, #8]
 576:modem.c       ****         t.tm_hour = hour;
 1994              		.loc 1 576 0
 1995 00e6 7B6B     		ldr	r3, [r7, #52]
 1996 00e8 FB60     		str	r3, [r7, #12]
 577:modem.c       ****         t.tm_year = year + 100;    // Year since 1900
 1997              		.loc 1 577 0
 1998 00ea 3B6C     		ldr	r3, [r7, #64]
 1999 00ec 6433     		adds	r3, r3, #100
 2000 00ee BB61     		str	r3, [r7, #24]
 578:modem.c       ****         t.tm_mon = month-1;        // Month, where 0 = jan
 2001              		.loc 1 578 0
 2002 00f0 FB6B     		ldr	r3, [r7, #60]
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 49


 2003 00f2 013B     		subs	r3, r3, #1
 2004 00f4 7B61     		str	r3, [r7, #20]
 579:modem.c       ****         t.tm_mday = day;           // Day of the month
 2005              		.loc 1 579 0
 2006 00f6 BB6B     		ldr	r3, [r7, #56]
 2007 00f8 3B61     		str	r3, [r7, #16]
 580:modem.c       ****         t.tm_isdst = 0;            // Is Daylight Savings on? 1 = yes, 0 = no, -1 = unknown
 2008              		.loc 1 580 0
 2009 00fa 0023     		movs	r3, #0
 2010 00fc 7B62     		str	r3, [r7, #36]
 581:modem.c       ****     
 582:modem.c       ****         // Set variable epoch-time to be equal to the local time plus the GMT offset
 583:modem.c       ****         // the mktime function converts a broken-down local time (pointed to by timeptr) and return
 584:modem.c       ****         epoch_time = mktime(&t) + gmt_offset;
 2011              		.loc 1 584 0
 2012 00fe 3B1D     		adds	r3, r7, #4
 2013 0100 1846     		mov	r0, r3
 2014 0102 FFF7FEFF 		bl	mktime
 2015 0106 0246     		mov	r2, r0
 2016 0108 BB6A     		ldr	r3, [r7, #40]
 2017 010a 1344     		add	r3, r3, r2
 2018 010c 7B66     		str	r3, [r7, #100]
 2019              	.L116:
 2020              	.LBE13:
 585:modem.c       ****     }
 586:modem.c       ****     
 587:modem.c       ****     return epoch_time;
 2021              		.loc 1 587 0
 2022 010e 7B6E     		ldr	r3, [r7, #100]
 2023              	.L115:
 588:modem.c       **** }
 2024              		.loc 1 588 0
 2025 0110 1846     		mov	r0, r3
 2026 0112 6837     		adds	r7, r7, #104
 2027              		.cfi_def_cfa_offset 8
 2028 0114 BD46     		mov	sp, r7
 2029              		.cfi_def_cfa_register 13
 2030              		@ sp needed
 2031 0116 80BD     		pop	{r7, pc}
 2032              	.L121:
 2033              		.align	2
 2034              	.L120:
 2035 0118 00000000 		.word	modem_state
 2036 011c B8030000 		.word	.LC43
 2037 0120 00000000 		.word	.LC0
 2038 0124 F0030000 		.word	.LC44
 2039 0128 FC030000 		.word	.LC45
 2040 012c 00040000 		.word	.LC46
 2041 0130 00000000 		.word	uart_received_string
 2042 0134 04040000 		.word	.LC47
 2043 0138 1C040000 		.word	.LC48
 2044 013c 7CFCFFFF 		.word	-900
 2045 0140 34040000 		.word	.LC49
 2046              		.cfi_endproc
 2047              	.LFE81:
 2048              		.size	modem_get_network_time, .-modem_get_network_time
 2049              		.section	.text.modem_get_state,"ax",%progbits
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 50


 2050              		.align	2
 2051              		.global	modem_get_state
 2052              		.thumb
 2053              		.thumb_func
 2054              		.type	modem_get_state, %function
 2055              	modem_get_state:
 2056              	.LFB82:
 589:modem.c       **** 
 590:modem.c       **** // Get the modem state
 591:modem.c       **** uint8 modem_get_state(){
 2057              		.loc 1 591 0
 2058              		.cfi_startproc
 2059              		@ args = 0, pretend = 0, frame = 0
 2060              		@ frame_needed = 1, uses_anonymous_args = 0
 2061              		@ link register save eliminated.
 2062 0000 80B4     		push	{r7}
 2063              		.cfi_def_cfa_offset 4
 2064              		.cfi_offset 7, -4
 2065 0002 00AF     		add	r7, sp, #0
 2066              		.cfi_def_cfa_register 7
 592:modem.c       ****     return modem_state;
 2067              		.loc 1 592 0
 2068 0004 024B     		ldr	r3, .L124
 2069 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 593:modem.c       **** }
 2070              		.loc 1 593 0
 2071 0008 1846     		mov	r0, r3
 2072 000a BD46     		mov	sp, r7
 2073              		.cfi_def_cfa_register 13
 2074              		@ sp needed
 2075 000c 80BC     		pop	{r7}
 2076              		.cfi_restore 7
 2077              		.cfi_def_cfa_offset 0
 2078 000e 7047     		bx	lr
 2079              	.L125:
 2080              		.align	2
 2081              	.L124:
 2082 0010 00000000 		.word	modem_state
 2083              		.cfi_endproc
 2084              	.LFE82:
 2085              		.size	modem_get_state, .-modem_get_state
 2086              		.section	.text.modem_sleep,"ax",%progbits
 2087              		.align	2
 2088              		.global	modem_sleep
 2089              		.thumb
 2090              		.thumb_func
 2091              		.type	modem_sleep, %function
 2092              	modem_sleep:
 2093              	.LFB83:
 594:modem.c       **** 
 595:modem.c       **** // Set modem to sleep
 596:modem.c       **** void modem_sleep(){
 2094              		.loc 1 596 0
 2095              		.cfi_startproc
 2096              		@ args = 0, pretend = 0, frame = 0
 2097              		@ frame_needed = 1, uses_anonymous_args = 0
 2098 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 51


 2099              		.cfi_def_cfa_offset 8
 2100              		.cfi_offset 7, -8
 2101              		.cfi_offset 14, -4
 2102 0002 00AF     		add	r7, sp, #0
 2103              		.cfi_def_cfa_register 7
 597:modem.c       ****     // If the modem_state is not "off" then put it to sleep
 598:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2104              		.loc 1 598 0
 2105 0004 FFF7FEFF 		bl	modem_get_state
 2106 0008 0346     		mov	r3, r0
 2107 000a 002B     		cmp	r3, #0
 2108 000c 03D0     		beq	.L128
 599:modem.c       **** 
 600:modem.c       ****         Telit_ControlReg_Sleep(); // Prepares the modem for entering the low power mode.
 2109              		.loc 1 600 0
 2110 000e FFF7FEFF 		bl	Telit_ControlReg_Sleep
 601:modem.c       ****         UART_Telit_Sleep(); // Saves the current component state, calls the UART_Telit_Stop() funct
 2111              		.loc 1 601 0
 2112 0012 FFF7FEFF 		bl	UART_Telit_Sleep
 2113              	.L128:
 602:modem.c       ****         
 603:modem.c       ****         // Set interrupt on RX pin to wakeup chip from sleep if UART comm starts
 604:modem.c       ****        // Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_FALLING);
 605:modem.c       ****      }
 606:modem.c       **** }
 2114              		.loc 1 606 0
 2115 0016 00BF     		nop
 2116 0018 80BD     		pop	{r7, pc}
 2117              		.cfi_endproc
 2118              	.LFE83:
 2119              		.size	modem_sleep, .-modem_sleep
 2120 001a 00BF     		.section	.text.modem_wakeup,"ax",%progbits
 2121              		.align	2
 2122              		.global	modem_wakeup
 2123              		.thumb
 2124              		.thumb_func
 2125              		.type	modem_wakeup, %function
 2126              	modem_wakeup:
 2127              	.LFB84:
 607:modem.c       **** 
 608:modem.c       **** // Wakeup the modem
 609:modem.c       **** void modem_wakeup(){
 2128              		.loc 1 609 0
 2129              		.cfi_startproc
 2130              		@ args = 0, pretend = 0, frame = 0
 2131              		@ frame_needed = 1, uses_anonymous_args = 0
 2132 0000 80B5     		push	{r7, lr}
 2133              		.cfi_def_cfa_offset 8
 2134              		.cfi_offset 7, -8
 2135              		.cfi_offset 14, -4
 2136 0002 00AF     		add	r7, sp, #0
 2137              		.cfi_def_cfa_register 7
 610:modem.c       ****     // If modem state is not off then wake it up
 611:modem.c       ****     if(modem_get_state() != MODEM_STATE_OFF){
 2138              		.loc 1 611 0
 2139 0004 FFF7FEFF 		bl	modem_get_state
 2140 0008 0346     		mov	r3, r0
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 52


 2141 000a 002B     		cmp	r3, #0
 2142 000c 0BD0     		beq	.L131
 612:modem.c       ****         Telit_ControlReg_Wakeup(); // Restores the modem after waking up from the low power mode.
 2143              		.loc 1 612 0
 2144 000e FFF7FEFF 		bl	Telit_ControlReg_Wakeup
 613:modem.c       ****         // Calls the UART_Telit_RestoreConfig() function to restore the configuration.
 614:modem.c       ****         // If the modem was enabled before the UART_Telit_Sleep() function was called, the UART_Tel
 615:modem.c       ****         UART_Telit_Wakeup();
 2145              		.loc 1 615 0
 2146 0012 FFF7FEFF 		bl	UART_Telit_Wakeup
 616:modem.c       ****         // Remove the need for this pin itterupt
 617:modem.c       ****         //Rx_Telit_SetInterruptMode(Rx_Telit_0_INTR,Rx_Telit_INTR_NONE);
 618:modem.c       ****         
 619:modem.c       ****         // If woken up from pin, go ahead and delay for 100ms to allow modem UART to deliver the me
 620:modem.c       ****         if(modem_get_state() == MODEM_STATE_WAITING_FOR_IP){
 2147              		.loc 1 620 0
 2148 0016 FFF7FEFF 		bl	modem_get_state
 2149 001a 0346     		mov	r3, r0
 2150 001c 032B     		cmp	r3, #3
 2151 001e 02D1     		bne	.L131
 621:modem.c       ****             CyDelay(100u);
 2152              		.loc 1 621 0
 2153 0020 6420     		movs	r0, #100
 2154 0022 FFF7FEFF 		bl	CyDelay
 2155              	.L131:
 622:modem.c       ****         }
 623:modem.c       ****         
 624:modem.c       ****      }
 625:modem.c       ****     
 626:modem.c       **** }
 2156              		.loc 1 626 0
 2157 0026 00BF     		nop
 2158 0028 80BD     		pop	{r7, pc}
 2159              		.cfi_endproc
 2160              	.LFE84:
 2161              		.size	modem_wakeup, .-modem_wakeup
 2162 002a 00BF     		.section	.rodata
 2163              		.align	2
 2164              	.LC50:
 2165 0450 41542347 		.ascii	"AT#GPIO=5,1,1,0\015\000"
 2165      50494F3D 
 2165      352C312C 
 2165      312C300D 
 2165      00
 2166 0461 000000   		.align	2
 2167              	.LC51:
 2168 0464 41542453 		.ascii	"AT$SUPLSEC=1\015\000"
 2168      55504C53 
 2168      45433D31 
 2168      0D00
 2169 0472 0000     		.align	2
 2170              	.LC52:
 2171 0474 41542453 		.ascii	"AT$SUPLV=2\015\000"
 2171      55504C56 
 2171      3D320D00 
 2172              		.align	2
 2173              	.LC53:
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 53


 2174 0480 41542441 		.ascii	"AT$AGPSEN=1\015\000"
 2174      47505345 
 2174      4E3D310D 
 2174      00
 2175 048d 000000   		.align	2
 2176              	.LC54:
 2177 0490 41542453 		.ascii	"AT$SLP=1,\"supl.google.com:7275\"\015\000"
 2177      4C503D31 
 2177      2C227375 
 2177      706C2E67 
 2177      6F6F676C 
 2178 04b1 000000   		.align	2
 2179              	.LC55:
 2180 04b4 41542353 		.ascii	"AT#SGACT=1,0\015\012\000"
 2180      47414354 
 2180      3D312C30 
 2180      0D0A00
 2181 04c3 00       		.align	2
 2182              	.LC56:
 2183 04c4 4154244C 		.ascii	"AT$LCSLK=1,1\015\000"
 2183      43534C4B 
 2183      3D312C31 
 2183      0D00
 2184 04d2 0000     		.align	2
 2185              	.LC57:
 2186 04d4 41542447 		.ascii	"AT$GPSSLSR=1,1,,,,,2\015\000"
 2186      5053534C 
 2186      53523D31 
 2186      2C312C2C 
 2186      2C2C2C32 
 2187 04ea 0000     		.align	2
 2188              	.LC58:
 2189 04ec 4E00     		.ascii	"N\000"
 2190 04ee 0000     		.align	2
 2191              	.LC59:
 2192 04f0 41542447 		.ascii	"AT$GPSACP\015\000"
 2192      50534143 
 2192      500D00
 2193 04fb 00       		.align	2
 2194              	.LC60:
 2195 04fc 24475053 		.ascii	"$GPSACP: \000"
 2195      4143503A 
 2195      2000
 2196 0506 0000     		.align	2
 2197              	.LC61:
 2198 0508 24475053 		.ascii	"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s\000"
 2198      4143503A 
 2198      20252A66 
 2198      2C25664E 
 2198      2C256657 
 2199              		.global	__aeabi_fdiv
 2200              		.global	__aeabi_f2d
 2201              		.global	__aeabi_ddiv
 2202              		.global	__aeabi_dadd
 2203              		.global	__aeabi_d2f
 2204              		.align	2
 2205              	.LC62:
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 54


 2206 0528 41542347 		.ascii	"AT#GPIO=5,0,1,0\015\000"
 2206      50494F3D 
 2206      352C302C 
 2206      312C300D 
 2206      00
 2207 0539 000000   		.align	2
 2208              	.LC63:
 2209 053c 41542447 		.ascii	"AT$GPSR=0\015\000"
 2209      5053523D 
 2209      300D00
 2210 0547 00       		.align	2
 2211              	.LC64:
 2212 0548 54696D65 		.ascii	"Time to lock GPS: %d\000"
 2212      20746F20 
 2212      6C6F636B 
 2212      20475053 
 2212      3A202564 
 2213              		.section	.text.modem_get_gps_coordinates,"ax",%progbits
 2214              		.align	2
 2215              		.global	modem_get_gps_coordinates
 2216              		.thumb
 2217              		.thumb_func
 2218              		.type	modem_get_gps_coordinates, %function
 2219              	modem_get_gps_coordinates:
 2220              	.LFB85:
 627:modem.c       **** 
 628:modem.c       **** 
 629:modem.c       ****     
 630:modem.c       **** // Returns lat,lom,alt data from Assited GPS (AGPS) system
 631:modem.c       **** gps_t modem_get_gps_coordinates(){
 2221              		.loc 1 631 0
 2222              		.cfi_startproc
 2223              		@ args = 0, pretend = 0, frame = 56
 2224              		@ frame_needed = 1, uses_anonymous_args = 0
 2225 0000 B0B5     		push	{r4, r5, r7, lr}
 2226              		.cfi_def_cfa_offset 16
 2227              		.cfi_offset 4, -16
 2228              		.cfi_offset 5, -12
 2229              		.cfi_offset 7, -8
 2230              		.cfi_offset 14, -4
 2231 0002 90B0     		sub	sp, sp, #64
 2232              		.cfi_def_cfa_offset 80
 2233 0004 02AF     		add	r7, sp, #8
 2234              		.cfi_def_cfa 7, 72
 2235 0006 7860     		str	r0, [r7, #4]
 632:modem.c       ****     gps_t gps;
 633:modem.c       ****     gps.altitude = 0;
 2236              		.loc 1 633 0
 2237 0008 4FF00003 		mov	r3, #0
 2238 000c FB61     		str	r3, [r7, #28]	@ float
 634:modem.c       ****     gps.longitude = 0;
 2239              		.loc 1 634 0
 2240 000e 4FF00003 		mov	r3, #0
 2241 0012 BB61     		str	r3, [r7, #24]	@ float
 635:modem.c       ****     gps.latitude = 0;
 2242              		.loc 1 635 0
 2243 0014 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 55


 2244 0018 7B61     		str	r3, [r7, #20]	@ float
 636:modem.c       ****     gps.time_to_lock =0;
 2245              		.loc 1 636 0
 2246 001a 0023     		movs	r3, #0
 2247 001c 3B84     		strh	r3, [r7, #32]	@ movhi
 637:modem.c       ****     gps.valid = 0;
 2248              		.loc 1 637 0
 2249 001e 0023     		movs	r3, #0
 2250 0020 87F82230 		strb	r3, [r7, #34]
 638:modem.c       ****     
 639:modem.c       ****     //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 640:modem.c       ****     if(modem_state != MODEM_STATE_READY){
 2251              		.loc 1 640 0
 2252 0024 7F4B     		ldr	r3, .L142
 2253 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2254 0028 042B     		cmp	r3, #4
 2255 002a 07D0     		beq	.L133
 641:modem.c       ****         return gps;//where valid = 0
 2256              		.loc 1 641 0
 2257 002c 7B68     		ldr	r3, [r7, #4]
 2258 002e 1C46     		mov	r4, r3
 2259 0030 07F11403 		add	r3, r7, #20
 2260 0034 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2261 0036 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2262 003a EFE0     		b	.L132
 2263              	.L133:
 642:modem.c       ****     }
 643:modem.c       ****     
 644:modem.c       ****     long lock_time = getTimeStamp();
 2264              		.loc 1 644 0
 2265 003c FFF7FEFF 		bl	getTimeStamp
 2266 0040 3863     		str	r0, [r7, #48]
 645:modem.c       ****     
 646:modem.c       ****     // Enable this for the LTER module
 647:modem.c       ****     // Enable GPS Low-Dropout Regulator
 648:modem.c       ****     at_write_command("AT#GPIO=5,1,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2267              		.loc 1 648 0
 2268 0042 4FF4FA62 		mov	r2, #2000
 2269 0046 7849     		ldr	r1, .L142+4
 2270 0048 7848     		ldr	r0, .L142+8
 2271 004a FFF7FEFF 		bl	at_write_command
 649:modem.c       ****     
 650:modem.c       ****     // Configure SUPL connection params
 651:modem.c       ****     at_write_command("AT$SUPLSEC=1\r","OK",DEFAULT_AT_TIMEOUT);
 2272              		.loc 1 651 0
 2273 004e 4FF4FA62 		mov	r2, #2000
 2274 0052 7549     		ldr	r1, .L142+4
 2275 0054 7648     		ldr	r0, .L142+12
 2276 0056 FFF7FEFF 		bl	at_write_command
 652:modem.c       ****     
 653:modem.c       ****     // Use SUPL2.0
 654:modem.c       ****     at_write_command("AT$SUPLV=2\r","OK",DEFAULT_AT_TIMEOUT);
 2277              		.loc 1 654 0
 2278 005a 4FF4FA62 		mov	r2, #2000
 2279 005e 7249     		ldr	r1, .L142+4
 2280 0060 7448     		ldr	r0, .L142+16
 2281 0062 FFF7FEFF 		bl	at_write_command
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 56


 655:modem.c       ****     
 656:modem.c       ****     // Enable AGPS service
 657:modem.c       ****     at_write_command("AT$AGPSEN=1\r","OK",DEFAULT_AT_TIMEOUT);
 2282              		.loc 1 657 0
 2283 0066 4FF4FA62 		mov	r2, #2000
 2284 006a 6F49     		ldr	r1, .L142+4
 2285 006c 7248     		ldr	r0, .L142+20
 2286 006e FFF7FEFF 		bl	at_write_command
 658:modem.c       ****     
 659:modem.c       ****     // Chose SUPL server, use google public service
 660:modem.c       ****     at_write_command("AT$SLP=1,\"supl.google.com:7275\"\r","OK",DEFAULT_AT_TIMEOUT);
 2287              		.loc 1 660 0
 2288 0072 4FF4FA62 		mov	r2, #2000
 2289 0076 6C49     		ldr	r1, .L142+4
 2290 0078 7048     		ldr	r0, .L142+24
 2291 007a FFF7FEFF 		bl	at_write_command
 661:modem.c       ****     
 662:modem.c       ****     //pdp context has to be locked to carrier for this to work
 663:modem.c       ****     
 664:modem.c       ****     // Unlock context since it needs to be used by modem
 665:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 2292              		.loc 1 665 0
 2293 007e 4FF4FA62 		mov	r2, #2000
 2294 0082 6949     		ldr	r1, .L142+4
 2295 0084 6E48     		ldr	r0, .L142+28
 2296 0086 FFF7FEFF 		bl	at_write_command
 666:modem.c       ****     
 667:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",DEFAULT_AT_TIMEOUT);//ATT
 2297              		.loc 1 667 0
 2298 008a 4FF4FA62 		mov	r2, #2000
 2299 008e 6649     		ldr	r1, .L142+4
 2300 0090 6C48     		ldr	r0, .L142+32
 2301 0092 FFF7FEFF 		bl	at_write_command
 668:modem.c       ****     //at_write_command("AT$LCSLK=1,3\r","OK",DEFAULT_AT_TIMEOUT);//Verizon
 669:modem.c       ****     
 670:modem.c       ****     // Relock the context
 671:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 2302              		.loc 1 671 0
 2303 0096 42F21072 		movw	r2, #10000
 2304 009a 6349     		ldr	r1, .L142+4
 2305 009c 6A48     		ldr	r0, .L142+36
 2306 009e FFF7FEFF 		bl	at_write_command
 672:modem.c       ****     
 673:modem.c       ****     //start AGPS service
 674:modem.c       ****     at_write_command("AT$GPSSLSR=1,1,,,,,2\r","OK",DEFAULT_AT_TIMEOUT); 
 2307              		.loc 1 674 0
 2308 00a2 4FF4FA62 		mov	r2, #2000
 2309 00a6 6049     		ldr	r1, .L142+4
 2310 00a8 6848     		ldr	r0, .L142+40
 2311 00aa FFF7FEFF 		bl	at_write_command
 675:modem.c       ****     
 676:modem.c       ****     
 677:modem.c       ****     // Start the AGPS service
 678:modem.c       ****     // Will keep receiving a buynch of commas without numbers, until GPS locks
 679:modem.c       ****     // Good lock will return a string with "N" and "W" coordinates
 680:modem.c       ****     
 681:modem.c       ****     
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 57


 682:modem.c       ****  
 683:modem.c       ****     uint8 gps_status = 0;
 2312              		.loc 1 683 0
 2313 00ae 0023     		movs	r3, #0
 2314 00b0 87F82F30 		strb	r3, [r7, #47]
 2315              	.LBB14:
 684:modem.c       ****     for(uint16 i=0;i<200;i++){
 2316              		.loc 1 684 0
 2317 00b4 0023     		movs	r3, #0
 2318 00b6 FB86     		strh	r3, [r7, #54]	@ movhi
 2319 00b8 13E0     		b	.L135
 2320              	.L138:
 685:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2321              		.loc 1 685 0
 2322 00ba 4FF4FA62 		mov	r2, #2000
 2323 00be 6449     		ldr	r1, .L142+44
 2324 00c0 6448     		ldr	r0, .L142+48
 2325 00c2 FFF7FEFF 		bl	at_write_command
 2326 00c6 0346     		mov	r3, r0
 2327 00c8 87F82F30 		strb	r3, [r7, #47]
 686:modem.c       ****         if(gps_status){
 2328              		.loc 1 686 0
 2329 00cc 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2330 00d0 002B     		cmp	r3, #0
 2331 00d2 0AD1     		bne	.L141
 687:modem.c       ****             break;   
 688:modem.c       ****         }
 689:modem.c       ****         CyDelay(1000u);// Wait for a second -- BLOCKING. Could be more elegant to incorporate this 
 2332              		.loc 1 689 0 discriminator 2
 2333 00d4 4FF47A70 		mov	r0, #1000
 2334 00d8 FFF7FEFF 		bl	CyDelay
 684:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2335              		.loc 1 684 0 discriminator 2
 2336 00dc FB8E     		ldrh	r3, [r7, #54]
 2337 00de 0133     		adds	r3, r3, #1
 2338 00e0 FB86     		strh	r3, [r7, #54]	@ movhi
 2339              	.L135:
 684:modem.c       ****         gps_status = at_write_command("AT$GPSACP\r","N",DEFAULT_AT_TIMEOUT);//ATT
 2340              		.loc 1 684 0 is_stmt 0 discriminator 1
 2341 00e2 FB8E     		ldrh	r3, [r7, #54]
 2342 00e4 C72B     		cmp	r3, #199
 2343 00e6 E8D9     		bls	.L138
 2344 00e8 00E0     		b	.L137
 2345              	.L141:
 687:modem.c       ****             break;   
 2346              		.loc 1 687 0 is_stmt 1
 2347 00ea 00BF     		nop
 2348              	.L137:
 2349              	.LBE14:
 690:modem.c       ****     }
 691:modem.c       ****     
 692:modem.c       ****     //parse data here
 693:modem.c       ****     
 694:modem.c       ****     //example $GPSACP: 210926.000,4217.8003N,08341.3158W,2.3,258.2,3,17.8,4.8,2.6,220520,05,00
 695:modem.c       ****     float lat;
 696:modem.c       ****     float lon;
 697:modem.c       ****     float alt;
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 58


 698:modem.c       ****     
 699:modem.c       ****     // Look for $GPSACP:  in uart_received_string and save to sl
 700:modem.c       ****     // char *strstr(const char *haystack, const char *needle) function finds the first occurrence o
 701:modem.c       ****     char *s1 = strstr(uart_received_string,"$GPSACP: ");
 2350              		.loc 1 701 0
 2351 00ec 5A49     		ldr	r1, .L142+52
 2352 00ee 5B48     		ldr	r0, .L142+56
 2353 00f0 FFF7FEFF 		bl	strstr
 2354 00f4 B862     		str	r0, [r7, #40]
 702:modem.c       ****     // Look in sl for lat, long, alt and save in match 
 703:modem.c       ****     // int sscanf(const char *str, const char *format, ...) reads formatted input from a string.
 704:modem.c       ****     int match = sscanf(s1,"$GPSACP: %*f,%fN,%fW,%*f,%f,%*s",&lat,&lon,&alt);
 2355              		.loc 1 704 0
 2356 00f6 07F10C01 		add	r1, r7, #12
 2357 00fa 07F11002 		add	r2, r7, #16
 2358 00fe 07F10803 		add	r3, r7, #8
 2359 0102 0093     		str	r3, [sp]
 2360 0104 0B46     		mov	r3, r1
 2361 0106 5649     		ldr	r1, .L142+60
 2362 0108 B86A     		ldr	r0, [r7, #40]
 2363 010a FFF7FEFF 		bl	sscanf
 2364 010e 7862     		str	r0, [r7, #36]
 705:modem.c       ****     if(match >= 3){
 2365              		.loc 1 705 0
 2366 0110 7B6A     		ldr	r3, [r7, #36]
 2367 0112 022B     		cmp	r3, #2
 2368 0114 60DD     		ble	.L139
 706:modem.c       ****         // Calculate lat and lon
 707:modem.c       ****         // floorf(x) calculates the largest integer that is less than or equal to x. 
 708:modem.c       ****         // fmod(double x, double y) returns the remainder of x divided by y.
 709:modem.c       ****         lat = floorf(lat/100) + fmod(lat,100)/60;
 2369              		.loc 1 709 0
 2370 0116 3B69     		ldr	r3, [r7, #16]	@ float
 2371 0118 5249     		ldr	r1, .L142+64
 2372 011a 1846     		mov	r0, r3
 2373 011c FFF7FEFF 		bl	__aeabi_fdiv
 2374 0120 0346     		mov	r3, r0
 2375 0122 1846     		mov	r0, r3
 2376 0124 FFF7FEFF 		bl	floorf
 2377 0128 0346     		mov	r3, r0
 2378 012a 1846     		mov	r0, r3
 2379 012c FFF7FEFF 		bl	__aeabi_f2d
 2380 0130 0446     		mov	r4, r0
 2381 0132 0D46     		mov	r5, r1
 2382 0134 3B69     		ldr	r3, [r7, #16]	@ float
 2383 0136 1846     		mov	r0, r3
 2384 0138 FFF7FEFF 		bl	__aeabi_f2d
 2385 013c 4FF00002 		mov	r2, #0
 2386 0140 494B     		ldr	r3, .L142+68
 2387 0142 FFF7FEFF 		bl	fmod
 2388 0146 4FF00002 		mov	r2, #0
 2389 014a 484B     		ldr	r3, .L142+72
 2390 014c FFF7FEFF 		bl	__aeabi_ddiv
 2391 0150 0246     		mov	r2, r0
 2392 0152 0B46     		mov	r3, r1
 2393 0154 2046     		mov	r0, r4
 2394 0156 2946     		mov	r1, r5
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 59


 2395 0158 FFF7FEFF 		bl	__aeabi_dadd
 2396 015c 0346     		mov	r3, r0
 2397 015e 0C46     		mov	r4, r1
 2398 0160 1846     		mov	r0, r3
 2399 0162 2146     		mov	r1, r4
 2400 0164 FFF7FEFF 		bl	__aeabi_d2f
 2401 0168 0346     		mov	r3, r0
 2402 016a 3B61     		str	r3, [r7, #16]	@ float
 710:modem.c       ****         lon = -(floorf(lon/100) + fmod(lon,100)/60);
 2403              		.loc 1 710 0
 2404 016c FB68     		ldr	r3, [r7, #12]	@ float
 2405 016e 3D49     		ldr	r1, .L142+64
 2406 0170 1846     		mov	r0, r3
 2407 0172 FFF7FEFF 		bl	__aeabi_fdiv
 2408 0176 0346     		mov	r3, r0
 2409 0178 1846     		mov	r0, r3
 2410 017a FFF7FEFF 		bl	floorf
 2411 017e 0346     		mov	r3, r0
 2412 0180 1846     		mov	r0, r3
 2413 0182 FFF7FEFF 		bl	__aeabi_f2d
 2414 0186 0446     		mov	r4, r0
 2415 0188 0D46     		mov	r5, r1
 2416 018a FB68     		ldr	r3, [r7, #12]	@ float
 2417 018c 1846     		mov	r0, r3
 2418 018e FFF7FEFF 		bl	__aeabi_f2d
 2419 0192 4FF00002 		mov	r2, #0
 2420 0196 344B     		ldr	r3, .L142+68
 2421 0198 FFF7FEFF 		bl	fmod
 2422 019c 4FF00002 		mov	r2, #0
 2423 01a0 324B     		ldr	r3, .L142+72
 2424 01a2 FFF7FEFF 		bl	__aeabi_ddiv
 2425 01a6 0246     		mov	r2, r0
 2426 01a8 0B46     		mov	r3, r1
 2427 01aa 2046     		mov	r0, r4
 2428 01ac 2946     		mov	r1, r5
 2429 01ae FFF7FEFF 		bl	__aeabi_dadd
 2430 01b2 0346     		mov	r3, r0
 2431 01b4 0C46     		mov	r4, r1
 2432 01b6 1846     		mov	r0, r3
 2433 01b8 2146     		mov	r1, r4
 2434 01ba FFF7FEFF 		bl	__aeabi_d2f
 2435 01be 0346     		mov	r3, r0
 2436 01c0 83F00043 		eor	r3, r3, #-2147483648
 2437 01c4 FB60     		str	r3, [r7, #12]	@ float
 711:modem.c       ****         gps.altitude = alt; // Save alt, lat, and lon to the variable gps.
 2438              		.loc 1 711 0
 2439 01c6 BB68     		ldr	r3, [r7, #8]	@ float
 2440 01c8 FB61     		str	r3, [r7, #28]	@ float
 712:modem.c       ****         gps.latitude = lat;
 2441              		.loc 1 712 0
 2442 01ca 3B69     		ldr	r3, [r7, #16]	@ float
 2443 01cc 7B61     		str	r3, [r7, #20]	@ float
 713:modem.c       ****         gps.longitude = lon;
 2444              		.loc 1 713 0
 2445 01ce FB68     		ldr	r3, [r7, #12]	@ float
 2446 01d0 BB61     		str	r3, [r7, #24]	@ float
 714:modem.c       ****         gps.valid = 1;
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 60


 2447              		.loc 1 714 0
 2448 01d2 0123     		movs	r3, #1
 2449 01d4 87F82230 		strb	r3, [r7, #34]
 2450              	.L139:
 715:modem.c       ****     }
 716:modem.c       ****     
 717:modem.c       ****     // Disable LDO, just in case
 718:modem.c       ****     at_write_command("AT#GPIO=5,0,1,0\r","OK",DEFAULT_AT_TIMEOUT);
 2451              		.loc 1 718 0
 2452 01d8 4FF4FA62 		mov	r2, #2000
 2453 01dc 1249     		ldr	r1, .L142+4
 2454 01de 2448     		ldr	r0, .L142+76
 2455 01e0 FFF7FEFF 		bl	at_write_command
 719:modem.c       ****     
 720:modem.c       ****     // Flush modem's GPS data, just in case
 721:modem.c       ****     at_write_command("AT$GPSR=0\r","OK",DEFAULT_AT_TIMEOUT);
 2456              		.loc 1 721 0
 2457 01e4 4FF4FA62 		mov	r2, #2000
 2458 01e8 0F49     		ldr	r1, .L142+4
 2459 01ea 2248     		ldr	r0, .L142+80
 2460 01ec FFF7FEFF 		bl	at_write_command
 722:modem.c       ****     
 723:modem.c       ****     
 724:modem.c       ****     
 725:modem.c       ****     
 726:modem.c       ****     
 727:modem.c       ****     /* Relevant to 3g modem, can ignore
 728:modem.c       ****     
 729:modem.c       ****     //Setthe GPS Quality of Servicep arameters. Inorder,theyare<horiz_accuracy(inmeters)>,<vertical
 730:modem.c       ****     //AT$GPSQOS=50,50,100,0
 731:modem.c       ****     at_write_command("AT$GPSQOS=50,50,100,0\r","OK",DEFAULT_AT_TIMEOUT);
 732:modem.c       ****     
 733:modem.c       ****     //SettheSUPLLocationPlatform(SLP)addressoftheserverthatwillprovidetheA-GPS data:
 734:modem.c       ****     at_write_command("AT$LCSSLP=1,\"supl.google.com\"\r","OK",DEFAULT_AT_TIMEOUT);
 735:modem.c       ****     
 736:modem.c       ****     //unlock contedt, simnce its being used by modem
 737:modem.c       ****     at_write_command("AT#SGACT=1,0\r\n", "OK",DEFAULT_AT_TIMEOUT);
 738:modem.c       ****     //Lock context 1 for LoCation Services (LCS) use only
 739:modem.c       ****     at_write_command("AT$LCSLK=1,1\r","OK",5000u);
 740:modem.c       ****     
 741:modem.c       ****     //unlock contedt, simnce its being used by modem
 742:modem.c       ****     at_write_command("AT#SGACT=1,1\r\n", "OK",10000u);
 743:modem.c       ****     
 744:modem.c       ****     //EnableunsolicitedNMEAGPSdataintheformatof<NMEASENTENCE><CR>
 745:modem.c       ****     at_write_command("AT$GPSNMUN=2,1,0,0,0,0,0\r","OK",DEFAULT_AT_TIMEOUT);
 746:modem.c       ****     
 747:modem.c       ****     //StartGPSlocationservicerequest.Sendingthiscommandsets$GPSP=1
 748:modem.c       ****    uint8 gps_status = 0;
 749:modem.c       ****     for(uint16 i=0;i<200;i++){
 750:modem.c       ****         gps_status = at_write_command("AT$GPSSLSR=1,1,,,,,0,255\r","N",3000u);
 751:modem.c       ****         if(gps_status){
 752:modem.c       ****             break;   
 753:modem.c       ****         }
 754:modem.c       ****   }
 755:modem.c       ****     
 756:modem.c       ****     //$GPGGA,030307.691,4217.7923,N,08341.3240,W,1,05,2.25,225.0,M,,M,,0000*6E
 757:modem.c       ****     //$GPGGA,213852.000,4600.8755,N,09327.7008,W,1,05,3.00,292.0,M,,M,,0000*6E
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 61


 758:modem.c       ****     if(gps_status){
 759:modem.c       ****         float lat,lon,alt = 0;
 760:modem.c       ****         if(sscanf(uart_received_string,"%*s,%f,N,%f,W,%*s",&lat,&lon) > 0){
 761:modem.c       ****             gps.altitude = alt;
 762:modem.c       ****             gps.latitude = lat/60;
 763:modem.c       ****             gps.longitude = lon/60;
 764:modem.c       ****             gps.valid = 1;
 765:modem.c       ****         }
 766:modem.c       ****         
 767:modem.c       ****     }
 768:modem.c       ****     
 769:modem.c       ****     //turn off gps
 770:modem.c       ****     //AT$GPSP=0
 771:modem.c       ****     at_write_command("AT$GPSP=0\r","OK",DEFAULT_AT_TIMEOUT);
 772:modem.c       ****     
 773:modem.c       ****     */
 774:modem.c       **** 
 775:modem.c       ****     // Calculate time to lock into GPS location and save in variable lock_time
 776:modem.c       ****     lock_time = getTimeStamp() - lock_time;
 2461              		.loc 1 776 0
 2462 01f0 FFF7FEFF 		bl	getTimeStamp
 2463 01f4 0246     		mov	r2, r0
 2464 01f6 3B6B     		ldr	r3, [r7, #48]
 2465 01f8 D31A     		subs	r3, r2, r3
 2466 01fa 3B63     		str	r3, [r7, #48]
 777:modem.c       ****     gps.time_to_lock = lock_time;
 2467              		.loc 1 777 0
 2468 01fc 3B6B     		ldr	r3, [r7, #48]
 2469 01fe 9BB2     		uxth	r3, r3
 2470 0200 3B84     		strh	r3, [r7, #32]	@ movhi
 778:modem.c       ****     printNotif(NOTIF_TYPE_EVENT,"Time to lock GPS: %d", gps.time_to_lock);
 2471              		.loc 1 778 0
 2472 0202 3B8C     		ldrh	r3, [r7, #32]
 2473 0204 1A46     		mov	r2, r3
 2474 0206 1C49     		ldr	r1, .L142+84
 2475 0208 0020     		movs	r0, #0
 2476 020a FFF7FEFF 		bl	printNotif
 779:modem.c       ****     
 780:modem.c       ****     return gps;
 2477              		.loc 1 780 0
 2478 020e 7B68     		ldr	r3, [r7, #4]
 2479 0210 1C46     		mov	r4, r3
 2480 0212 07F11403 		add	r3, r7, #20
 2481 0216 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 2482 0218 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 2483              	.L132:
 781:modem.c       ****     
 782:modem.c       **** }
 2484              		.loc 1 782 0
 2485 021c 7868     		ldr	r0, [r7, #4]
 2486 021e 3837     		adds	r7, r7, #56
 2487              		.cfi_def_cfa_offset 16
 2488 0220 BD46     		mov	sp, r7
 2489              		.cfi_def_cfa_register 13
 2490              		@ sp needed
 2491 0222 B0BD     		pop	{r4, r5, r7, pc}
 2492              	.L143:
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 62


 2493              		.align	2
 2494              	.L142:
 2495 0224 00000000 		.word	modem_state
 2496 0228 00000000 		.word	.LC0
 2497 022c 50040000 		.word	.LC50
 2498 0230 64040000 		.word	.LC51
 2499 0234 74040000 		.word	.LC52
 2500 0238 80040000 		.word	.LC53
 2501 023c 90040000 		.word	.LC54
 2502 0240 B4040000 		.word	.LC55
 2503 0244 C4040000 		.word	.LC56
 2504 0248 D8020000 		.word	.LC27
 2505 024c D4040000 		.word	.LC57
 2506 0250 EC040000 		.word	.LC58
 2507 0254 F0040000 		.word	.LC59
 2508 0258 FC040000 		.word	.LC60
 2509 025c 00000000 		.word	uart_received_string
 2510 0260 08050000 		.word	.LC61
 2511 0264 0000C842 		.word	1120403456
 2512 0268 00005940 		.word	1079574528
 2513 026c 00004E40 		.word	1078853632
 2514 0270 28050000 		.word	.LC62
 2515 0274 3C050000 		.word	.LC63
 2516 0278 48050000 		.word	.LC64
 2517              		.cfi_endproc
 2518              	.LFE85:
 2519              		.size	modem_get_gps_coordinates, .-modem_get_gps_coordinates
 2520              		.text
 2521              	.Letext0:
 2522              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 2523              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 2524              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2525              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 2526              		.file 6 "testing.h"
 2527              		.file 7 "modem.h"
 2528              		.file 8 "data.h"
 2529              		.file 9 "notoriOS.h"
 2530              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 2531              		.section	.debug_info,"",%progbits
 2532              	.Ldebug_info0:
 2533 0000 550A0000 		.4byte	0xa55
 2534 0004 0400     		.2byte	0x4
 2535 0006 00000000 		.4byte	.Ldebug_abbrev0
 2536 000a 04       		.byte	0x4
 2537 000b 01       		.uleb128 0x1
 2538 000c 3C000000 		.4byte	.LASF136
 2539 0010 0C       		.byte	0xc
 2540 0011 18030000 		.4byte	.LASF137
 2541 0015 54040000 		.4byte	.LASF138
 2542 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 2543 001d 00000000 		.4byte	0
 2544 0021 00000000 		.4byte	.Ldebug_line0
 2545 0025 02       		.uleb128 0x2
 2546 0026 01       		.byte	0x1
 2547 0027 06       		.byte	0x6
 2548 0028 26010000 		.4byte	.LASF0
 2549 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 63


 2550 002d 28000000 		.4byte	.LASF4
 2551 0031 02       		.byte	0x2
 2552 0032 1D       		.byte	0x1d
 2553 0033 37000000 		.4byte	0x37
 2554 0037 02       		.uleb128 0x2
 2555 0038 01       		.byte	0x1
 2556 0039 08       		.byte	0x8
 2557 003a B0040000 		.4byte	.LASF1
 2558 003e 02       		.uleb128 0x2
 2559 003f 02       		.byte	0x2
 2560 0040 05       		.byte	0x5
 2561 0041 50030000 		.4byte	.LASF2
 2562 0045 02       		.uleb128 0x2
 2563 0046 02       		.byte	0x2
 2564 0047 07       		.byte	0x7
 2565 0048 E3010000 		.4byte	.LASF3
 2566 004c 03       		.uleb128 0x3
 2567 004d 65030000 		.4byte	.LASF5
 2568 0051 02       		.byte	0x2
 2569 0052 3F       		.byte	0x3f
 2570 0053 57000000 		.4byte	0x57
 2571 0057 02       		.uleb128 0x2
 2572 0058 04       		.byte	0x4
 2573 0059 05       		.byte	0x5
 2574 005a 80010000 		.4byte	.LASF6
 2575 005e 03       		.uleb128 0x3
 2576 005f 06020000 		.4byte	.LASF7
 2577 0063 02       		.byte	0x2
 2578 0064 41       		.byte	0x41
 2579 0065 69000000 		.4byte	0x69
 2580 0069 02       		.uleb128 0x2
 2581 006a 04       		.byte	0x4
 2582 006b 07       		.byte	0x7
 2583 006c 7D020000 		.4byte	.LASF8
 2584 0070 02       		.uleb128 0x2
 2585 0071 08       		.byte	0x8
 2586 0072 05       		.byte	0x5
 2587 0073 18010000 		.4byte	.LASF9
 2588 0077 02       		.uleb128 0x2
 2589 0078 08       		.byte	0x8
 2590 0079 07       		.byte	0x7
 2591 007a D7000000 		.4byte	.LASF10
 2592 007e 04       		.uleb128 0x4
 2593 007f 04       		.byte	0x4
 2594 0080 05       		.byte	0x5
 2595 0081 696E7400 		.ascii	"int\000"
 2596 0085 02       		.uleb128 0x2
 2597 0086 04       		.byte	0x4
 2598 0087 07       		.byte	0x7
 2599 0088 85050000 		.4byte	.LASF11
 2600 008c 03       		.uleb128 0x3
 2601 008d 7E060000 		.4byte	.LASF12
 2602 0091 03       		.byte	0x3
 2603 0092 18       		.byte	0x18
 2604 0093 2C000000 		.4byte	0x2c
 2605 0097 03       		.uleb128 0x3
 2606 0098 A8040000 		.4byte	.LASF13
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 64


 2607 009c 03       		.byte	0x3
 2608 009d 2C       		.byte	0x2c
 2609 009e 4C000000 		.4byte	0x4c
 2610 00a2 03       		.uleb128 0x3
 2611 00a3 3F060000 		.4byte	.LASF14
 2612 00a7 03       		.byte	0x3
 2613 00a8 30       		.byte	0x30
 2614 00a9 5E000000 		.4byte	0x5e
 2615 00ad 05       		.uleb128 0x5
 2616 00ae A2010000 		.4byte	.LASF15
 2617 00b2 04       		.byte	0x4
 2618 00b3 9201     		.2byte	0x192
 2619 00b5 37000000 		.4byte	0x37
 2620 00b9 05       		.uleb128 0x5
 2621 00ba 0B000000 		.4byte	.LASF16
 2622 00be 04       		.byte	0x4
 2623 00bf 9301     		.2byte	0x193
 2624 00c1 45000000 		.4byte	0x45
 2625 00c5 05       		.uleb128 0x5
 2626 00c6 F6010000 		.4byte	.LASF17
 2627 00ca 04       		.byte	0x4
 2628 00cb 9401     		.2byte	0x194
 2629 00cd 69000000 		.4byte	0x69
 2630 00d1 05       		.uleb128 0x5
 2631 00d2 92060000 		.4byte	.LASF18
 2632 00d6 04       		.byte	0x4
 2633 00d7 9601     		.2byte	0x196
 2634 00d9 3E000000 		.4byte	0x3e
 2635 00dd 05       		.uleb128 0x5
 2636 00de B7010000 		.4byte	.LASF19
 2637 00e2 04       		.byte	0x4
 2638 00e3 9701     		.2byte	0x197
 2639 00e5 57000000 		.4byte	0x57
 2640 00e9 02       		.uleb128 0x2
 2641 00ea 04       		.byte	0x4
 2642 00eb 04       		.byte	0x4
 2643 00ec 37040000 		.4byte	.LASF20
 2644 00f0 02       		.uleb128 0x2
 2645 00f1 08       		.byte	0x8
 2646 00f2 04       		.byte	0x4
 2647 00f3 B0010000 		.4byte	.LASF21
 2648 00f7 02       		.uleb128 0x2
 2649 00f8 01       		.byte	0x1
 2650 00f9 08       		.byte	0x8
 2651 00fa 6C050000 		.4byte	.LASF22
 2652 00fe 02       		.uleb128 0x2
 2653 00ff 08       		.byte	0x8
 2654 0100 04       		.byte	0x4
 2655 0101 60050000 		.4byte	.LASF23
 2656 0105 02       		.uleb128 0x2
 2657 0106 04       		.byte	0x4
 2658 0107 07       		.byte	0x7
 2659 0108 B9030000 		.4byte	.LASF24
 2660 010c 06       		.uleb128 0x6
 2661 010d 04       		.byte	0x4
 2662 010e F7000000 		.4byte	0xf7
 2663 0112 06       		.uleb128 0x6
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 65


 2664 0113 04       		.byte	0x4
 2665 0114 18010000 		.4byte	0x118
 2666 0118 07       		.uleb128 0x7
 2667 0119 F7000000 		.4byte	0xf7
 2668 011d 08       		.uleb128 0x8
 2669 011e F7000000 		.4byte	0xf7
 2670 0122 2D010000 		.4byte	0x12d
 2671 0126 09       		.uleb128 0x9
 2672 0127 05010000 		.4byte	0x105
 2673 012b 17       		.byte	0x17
 2674 012c 00       		.byte	0
 2675 012d 0A       		.uleb128 0xa
 2676 012e 746D00   		.ascii	"tm\000"
 2677 0131 24       		.byte	0x24
 2678 0132 05       		.byte	0x5
 2679 0133 21       		.byte	0x21
 2680 0134 A5010000 		.4byte	0x1a5
 2681 0138 0B       		.uleb128 0xb
 2682 0139 48060000 		.4byte	.LASF25
 2683 013d 05       		.byte	0x5
 2684 013e 23       		.byte	0x23
 2685 013f 7E000000 		.4byte	0x7e
 2686 0143 00       		.byte	0
 2687 0144 0B       		.uleb128 0xb
 2688 0145 B2030000 		.4byte	.LASF26
 2689 0149 05       		.byte	0x5
 2690 014a 24       		.byte	0x24
 2691 014b 7E000000 		.4byte	0x7e
 2692 014f 04       		.byte	0x4
 2693 0150 0B       		.uleb128 0xb
 2694 0151 18000000 		.4byte	.LASF27
 2695 0155 05       		.byte	0x5
 2696 0156 25       		.byte	0x25
 2697 0157 7E000000 		.4byte	0x7e
 2698 015b 08       		.byte	0x8
 2699 015c 0B       		.uleb128 0xb
 2700 015d 2A060000 		.4byte	.LASF28
 2701 0161 05       		.byte	0x5
 2702 0162 26       		.byte	0x26
 2703 0163 7E000000 		.4byte	0x7e
 2704 0167 0C       		.byte	0xc
 2705 0168 0B       		.uleb128 0xb
 2706 0169 28020000 		.4byte	.LASF29
 2707 016d 05       		.byte	0x5
 2708 016e 27       		.byte	0x27
 2709 016f 7E000000 		.4byte	0x7e
 2710 0173 10       		.byte	0x10
 2711 0174 0B       		.uleb128 0xb
 2712 0175 43020000 		.4byte	.LASF30
 2713 0179 05       		.byte	0x5
 2714 017a 28       		.byte	0x28
 2715 017b 7E000000 		.4byte	0x7e
 2716 017f 14       		.byte	0x14
 2717 0180 0B       		.uleb128 0xb
 2718 0181 41050000 		.4byte	.LASF31
 2719 0185 05       		.byte	0x5
 2720 0186 29       		.byte	0x29
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 66


 2721 0187 7E000000 		.4byte	0x7e
 2722 018b 18       		.byte	0x18
 2723 018c 0B       		.uleb128 0xb
 2724 018d 20000000 		.4byte	.LASF32
 2725 0191 05       		.byte	0x5
 2726 0192 2A       		.byte	0x2a
 2727 0193 7E000000 		.4byte	0x7e
 2728 0197 1C       		.byte	0x1c
 2729 0198 0B       		.uleb128 0xb
 2730 0199 DF020000 		.4byte	.LASF33
 2731 019d 05       		.byte	0x5
 2732 019e 2B       		.byte	0x2b
 2733 019f 7E000000 		.4byte	0x7e
 2734 01a3 20       		.byte	0x20
 2735 01a4 00       		.byte	0
 2736 01a5 0C       		.uleb128 0xc
 2737 01a6 8101     		.2byte	0x181
 2738 01a8 06       		.byte	0x6
 2739 01a9 0A       		.byte	0xa
 2740 01aa D3010000 		.4byte	0x1d3
 2741 01ae 0B       		.uleb128 0xb
 2742 01af FD030000 		.4byte	.LASF34
 2743 01b3 06       		.byte	0x6
 2744 01b4 0C       		.byte	0xc
 2745 01b5 D3010000 		.4byte	0x1d3
 2746 01b9 00       		.byte	0
 2747 01ba 0B       		.uleb128 0xb
 2748 01bb 4F060000 		.4byte	.LASF35
 2749 01bf 06       		.byte	0x6
 2750 01c0 0D       		.byte	0xd
 2751 01c1 AD000000 		.4byte	0xad
 2752 01c5 80       		.byte	0x80
 2753 01c6 0B       		.uleb128 0xb
 2754 01c7 15050000 		.4byte	.LASF36
 2755 01cb 06       		.byte	0x6
 2756 01cc 0F       		.byte	0xf
 2757 01cd E3010000 		.4byte	0x1e3
 2758 01d1 81       		.byte	0x81
 2759 01d2 00       		.byte	0
 2760 01d3 08       		.uleb128 0x8
 2761 01d4 F7000000 		.4byte	0xf7
 2762 01d8 E3010000 		.4byte	0x1e3
 2763 01dc 09       		.uleb128 0x9
 2764 01dd 05010000 		.4byte	0x105
 2765 01e1 7F       		.byte	0x7f
 2766 01e2 00       		.byte	0
 2767 01e3 08       		.uleb128 0x8
 2768 01e4 F7000000 		.4byte	0xf7
 2769 01e8 F3010000 		.4byte	0x1f3
 2770 01ec 09       		.uleb128 0x9
 2771 01ed 05010000 		.4byte	0x105
 2772 01f1 FF       		.byte	0xff
 2773 01f2 00       		.byte	0
 2774 01f3 03       		.uleb128 0x3
 2775 01f4 FD040000 		.4byte	.LASF37
 2776 01f8 06       		.byte	0x6
 2777 01f9 10       		.byte	0x10
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 67


 2778 01fa A5010000 		.4byte	0x1a5
 2779 01fe 0D       		.uleb128 0xd
 2780 01ff 3C       		.byte	0x3c
 2781 0200 07       		.byte	0x7
 2782 0201 2C       		.byte	0x2c
 2783 0202 2B020000 		.4byte	0x22b
 2784 0206 0B       		.uleb128 0xb
 2785 0207 23060000 		.4byte	.LASF38
 2786 020b 07       		.byte	0x7
 2787 020c 2D       		.byte	0x2d
 2788 020d 2B020000 		.4byte	0x22b
 2789 0211 00       		.byte	0
 2790 0212 0B       		.uleb128 0xb
 2791 0213 97050000 		.4byte	.LASF39
 2792 0217 07       		.byte	0x7
 2793 0218 2E       		.byte	0x2e
 2794 0219 2B020000 		.4byte	0x22b
 2795 021d 14       		.byte	0x14
 2796 021e 0B       		.uleb128 0xb
 2797 021f 10050000 		.4byte	.LASF40
 2798 0223 07       		.byte	0x7
 2799 0224 2F       		.byte	0x2f
 2800 0225 2B020000 		.4byte	0x22b
 2801 0229 28       		.byte	0x28
 2802 022a 00       		.byte	0
 2803 022b 08       		.uleb128 0x8
 2804 022c F7000000 		.4byte	0xf7
 2805 0230 3B020000 		.4byte	0x23b
 2806 0234 09       		.uleb128 0x9
 2807 0235 05010000 		.4byte	0x105
 2808 0239 13       		.byte	0x13
 2809 023a 00       		.byte	0
 2810 023b 03       		.uleb128 0x3
 2811 023c AB050000 		.4byte	.LASF41
 2812 0240 07       		.byte	0x7
 2813 0241 30       		.byte	0x30
 2814 0242 FE010000 		.4byte	0x1fe
 2815 0246 0D       		.uleb128 0xd
 2816 0247 10       		.byte	0x10
 2817 0248 07       		.byte	0x7
 2818 0249 32       		.byte	0x32
 2819 024a AF020000 		.4byte	0x2af
 2820 024e 0B       		.uleb128 0xb
 2821 024f C6060000 		.4byte	.LASF42
 2822 0253 07       		.byte	0x7
 2823 0254 33       		.byte	0x33
 2824 0255 AD000000 		.4byte	0xad
 2825 0259 00       		.byte	0
 2826 025a 0E       		.uleb128 0xe
 2827 025b 62657200 		.ascii	"ber\000"
 2828 025f 07       		.byte	0x7
 2829 0260 34       		.byte	0x34
 2830 0261 AD000000 		.4byte	0xad
 2831 0265 01       		.byte	0x1
 2832 0266 0B       		.uleb128 0xb
 2833 0267 DE040000 		.4byte	.LASF43
 2834 026b 07       		.byte	0x7
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 68


 2835 026c 35       		.byte	0x35
 2836 026d AD000000 		.4byte	0xad
 2837 0271 02       		.byte	0x2
 2838 0272 0B       		.uleb128 0xb
 2839 0273 32010000 		.4byte	.LASF44
 2840 0277 07       		.byte	0x7
 2841 0278 36       		.byte	0x36
 2842 0279 AD000000 		.4byte	0xad
 2843 027d 03       		.byte	0x3
 2844 027e 0B       		.uleb128 0xb
 2845 027f D4040000 		.4byte	.LASF45
 2846 0283 07       		.byte	0x7
 2847 0284 37       		.byte	0x37
 2848 0285 AD000000 		.4byte	0xad
 2849 0289 04       		.byte	0x4
 2850 028a 0B       		.uleb128 0xb
 2851 028b 1C050000 		.4byte	.LASF46
 2852 028f 07       		.byte	0x7
 2853 0290 38       		.byte	0x38
 2854 0291 AD000000 		.4byte	0xad
 2855 0295 05       		.byte	0x5
 2856 0296 0B       		.uleb128 0xb
 2857 0297 37010000 		.4byte	.LASF47
 2858 029b 07       		.byte	0x7
 2859 029c 39       		.byte	0x39
 2860 029d 7E000000 		.4byte	0x7e
 2861 02a1 08       		.byte	0x8
 2862 02a2 0B       		.uleb128 0xb
 2863 02a3 33030000 		.4byte	.LASF48
 2864 02a7 07       		.byte	0x7
 2865 02a8 3A       		.byte	0x3a
 2866 02a9 7E000000 		.4byte	0x7e
 2867 02ad 0C       		.byte	0xc
 2868 02ae 00       		.byte	0
 2869 02af 03       		.uleb128 0x3
 2870 02b0 21050000 		.4byte	.LASF49
 2871 02b4 07       		.byte	0x7
 2872 02b5 3B       		.byte	0x3b
 2873 02b6 46020000 		.4byte	0x246
 2874 02ba 0D       		.uleb128 0xd
 2875 02bb 10       		.byte	0x10
 2876 02bc 07       		.byte	0x7
 2877 02bd 3D       		.byte	0x3d
 2878 02be FF020000 		.4byte	0x2ff
 2879 02c2 0B       		.uleb128 0xb
 2880 02c3 F4030000 		.4byte	.LASF50
 2881 02c7 07       		.byte	0x7
 2882 02c8 3E       		.byte	0x3e
 2883 02c9 E9000000 		.4byte	0xe9
 2884 02cd 00       		.byte	0
 2885 02ce 0B       		.uleb128 0xb
 2886 02cf 32000000 		.4byte	.LASF51
 2887 02d3 07       		.byte	0x7
 2888 02d4 3F       		.byte	0x3f
 2889 02d5 E9000000 		.4byte	0xe9
 2890 02d9 04       		.byte	0x4
 2891 02da 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 69


 2892 02db 99010000 		.4byte	.LASF52
 2893 02df 07       		.byte	0x7
 2894 02e0 40       		.byte	0x40
 2895 02e1 E9000000 		.4byte	0xe9
 2896 02e5 08       		.byte	0x8
 2897 02e6 0B       		.uleb128 0xb
 2898 02e7 BD020000 		.4byte	.LASF53
 2899 02eb 07       		.byte	0x7
 2900 02ec 41       		.byte	0x41
 2901 02ed B9000000 		.4byte	0xb9
 2902 02f1 0C       		.byte	0xc
 2903 02f2 0B       		.uleb128 0xb
 2904 02f3 32060000 		.4byte	.LASF54
 2905 02f7 07       		.byte	0x7
 2906 02f8 42       		.byte	0x42
 2907 02f9 AD000000 		.4byte	0xad
 2908 02fd 0E       		.byte	0xe
 2909 02fe 00       		.byte	0
 2910 02ff 03       		.uleb128 0x3
 2911 0300 B8050000 		.4byte	.LASF55
 2912 0304 07       		.byte	0x7
 2913 0305 44       		.byte	0x44
 2914 0306 BA020000 		.4byte	0x2ba
 2915 030a 0D       		.uleb128 0xd
 2916 030b 2C       		.byte	0x2c
 2917 030c 08       		.byte	0x8
 2918 030d 10       		.byte	0x10
 2919 030e 37030000 		.4byte	0x337
 2920 0312 0E       		.uleb128 0xe
 2921 0313 6B657900 		.ascii	"key\000"
 2922 0317 08       		.byte	0x8
 2923 0318 11       		.byte	0x11
 2924 0319 2B020000 		.4byte	0x22b
 2925 031d 00       		.byte	0
 2926 031e 0B       		.uleb128 0xb
 2927 031f 12000000 		.4byte	.LASF56
 2928 0323 08       		.byte	0x8
 2929 0324 12       		.byte	0x12
 2930 0325 2B020000 		.4byte	0x22b
 2931 0329 14       		.byte	0x14
 2932 032a 0B       		.uleb128 0xb
 2933 032b F3060000 		.4byte	.LASF57
 2934 032f 08       		.byte	0x8
 2935 0330 13       		.byte	0x13
 2936 0331 DD000000 		.4byte	0xdd
 2937 0335 28       		.byte	0x28
 2938 0336 00       		.byte	0
 2939 0337 03       		.uleb128 0x3
 2940 0338 67020000 		.4byte	.LASF58
 2941 033c 08       		.byte	0x8
 2942 033d 14       		.byte	0x14
 2943 033e 0A030000 		.4byte	0x30a
 2944 0342 0D       		.uleb128 0xd
 2945 0343 1C       		.byte	0x1c
 2946 0344 09       		.byte	0x9
 2947 0345 37       		.byte	0x37
 2948 0346 63030000 		.4byte	0x363
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 70


 2949 034a 0B       		.uleb128 0xb
 2950 034b E8020000 		.4byte	.LASF59
 2951 034f 09       		.byte	0x9
 2952 0350 39       		.byte	0x39
 2953 0351 63030000 		.4byte	0x363
 2954 0355 00       		.byte	0
 2955 0356 0B       		.uleb128 0xb
 2956 0357 FB020000 		.4byte	.LASF60
 2957 035b 09       		.byte	0x9
 2958 035c 3A       		.byte	0x3a
 2959 035d 1D010000 		.4byte	0x11d
 2960 0361 04       		.byte	0x4
 2961 0362 00       		.byte	0
 2962 0363 06       		.uleb128 0x6
 2963 0364 04       		.byte	0x4
 2964 0365 3B020000 		.4byte	0x23b
 2965 0369 03       		.uleb128 0x3
 2966 036a 95030000 		.4byte	.LASF61
 2967 036e 09       		.byte	0x9
 2968 036f 3C       		.byte	0x3c
 2969 0370 42030000 		.4byte	0x342
 2970 0374 0C       		.uleb128 0xc
 2971 0375 4401     		.2byte	0x144
 2972 0377 09       		.byte	0x9
 2973 0378 42       		.byte	0x42
 2974 0379 C7030000 		.4byte	0x3c7
 2975 037d 0B       		.uleb128 0xb
 2976 037e A8010000 		.4byte	.LASF62
 2977 0382 09       		.byte	0x9
 2978 0383 45       		.byte	0x45
 2979 0384 2B020000 		.4byte	0x22b
 2980 0388 00       		.byte	0
 2981 0389 0B       		.uleb128 0xb
 2982 038a F3020000 		.4byte	.LASF63
 2983 038e 09       		.byte	0x9
 2984 038f 47       		.byte	0x47
 2985 0390 C7030000 		.4byte	0x3c7
 2986 0394 14       		.byte	0x14
 2987 0395 0B       		.uleb128 0xb
 2988 0396 D7020000 		.4byte	.LASF64
 2989 039a 09       		.byte	0x9
 2990 039b 48       		.byte	0x48
 2991 039c 7E000000 		.4byte	0x7e
 2992 03a0 78       		.byte	0x78
 2993 03a1 0B       		.uleb128 0xb
 2994 03a2 CF020000 		.4byte	.LASF65
 2995 03a6 09       		.byte	0x9
 2996 03a7 49       		.byte	0x49
 2997 03a8 D7030000 		.4byte	0x3d7
 2998 03ac 7C       		.byte	0x7c
 2999 03ad 0B       		.uleb128 0xb
 3000 03ae 2F020000 		.4byte	.LASF66
 3001 03b2 09       		.byte	0x9
 3002 03b3 4A       		.byte	0x4a
 3003 03b4 C7030000 		.4byte	0x3c7
 3004 03b8 AE       		.byte	0xae
 3005 03b9 0F       		.uleb128 0xf
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 71


 3006 03ba 86060000 		.4byte	.LASF67
 3007 03be 09       		.byte	0x9
 3008 03bf 4B       		.byte	0x4b
 3009 03c0 D7030000 		.4byte	0x3d7
 3010 03c4 1201     		.2byte	0x112
 3011 03c6 00       		.byte	0
 3012 03c7 08       		.uleb128 0x8
 3013 03c8 F7000000 		.4byte	0xf7
 3014 03cc D7030000 		.4byte	0x3d7
 3015 03d0 09       		.uleb128 0x9
 3016 03d1 05010000 		.4byte	0x105
 3017 03d5 63       		.byte	0x63
 3018 03d6 00       		.byte	0
 3019 03d7 08       		.uleb128 0x8
 3020 03d8 F7000000 		.4byte	0xf7
 3021 03dc E7030000 		.4byte	0x3e7
 3022 03e0 09       		.uleb128 0x9
 3023 03e1 05010000 		.4byte	0x105
 3024 03e5 31       		.byte	0x31
 3025 03e6 00       		.byte	0
 3026 03e7 03       		.uleb128 0x3
 3027 03e8 6F060000 		.4byte	.LASF68
 3028 03ec 09       		.byte	0x9
 3029 03ed 4E       		.byte	0x4e
 3030 03ee 74030000 		.4byte	0x374
 3031 03f2 10       		.uleb128 0x10
 3032 03f3 9B040000 		.4byte	.LASF100
 3033 03f7 01       		.byte	0x1
 3034 03f8 16       		.byte	0x16
 3035 03f9 00000000 		.4byte	.LFB64
 3036 03fd 44000000 		.4byte	.LFE64-.LFB64
 3037 0401 01       		.uleb128 0x1
 3038 0402 9C       		.byte	0x9c
 3039 0403 11       		.uleb128 0x11
 3040 0404 3D040000 		.4byte	.LASF69
 3041 0408 01       		.byte	0x1
 3042 0409 20       		.byte	0x20
 3043 040a 00000000 		.4byte	.LFB65
 3044 040e 6C000000 		.4byte	.LFE65-.LFB65
 3045 0412 01       		.uleb128 0x1
 3046 0413 9C       		.byte	0x9c
 3047 0414 11       		.uleb128 0x11
 3048 0415 0B060000 		.4byte	.LASF70
 3049 0419 01       		.byte	0x1
 3050 041a 3A       		.byte	0x3a
 3051 041b 00000000 		.4byte	.LFB66
 3052 041f 32000000 		.4byte	.LFE66-.LFB66
 3053 0423 01       		.uleb128 0x1
 3054 0424 9C       		.byte	0x9c
 3055 0425 11       		.uleb128 0x11
 3056 0426 51020000 		.4byte	.LASF71
 3057 042a 01       		.byte	0x1
 3058 042b 4A       		.byte	0x4a
 3059 042c 00000000 		.4byte	.LFB67
 3060 0430 20000000 		.4byte	.LFE67-.LFB67
 3061 0434 01       		.uleb128 0x1
 3062 0435 9C       		.byte	0x9c
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 72


 3063 0436 11       		.uleb128 0x11
 3064 0437 E2060000 		.4byte	.LASF72
 3065 043b 01       		.byte	0x1
 3066 043c 53       		.byte	0x53
 3067 043d 00000000 		.4byte	.LFB68
 3068 0441 40000000 		.4byte	.LFE68-.LFB68
 3069 0445 01       		.uleb128 0x1
 3070 0446 9C       		.byte	0x9c
 3071 0447 12       		.uleb128 0x12
 3072 0448 09030000 		.4byte	.LASF86
 3073 044c 01       		.byte	0x1
 3074 044d 65       		.byte	0x65
 3075 044e AD000000 		.4byte	0xad
 3076 0452 00000000 		.4byte	.LFB69
 3077 0456 DC000000 		.4byte	.LFE69-.LFB69
 3078 045a 01       		.uleb128 0x1
 3079 045b 9C       		.byte	0x9c
 3080 045c BB040000 		.4byte	0x4bb
 3081 0460 13       		.uleb128 0x13
 3082 0461 98060000 		.4byte	.LASF73
 3083 0465 01       		.byte	0x1
 3084 0466 6E       		.byte	0x6e
 3085 0467 AD000000 		.4byte	0xad
 3086 046b 02       		.uleb128 0x2
 3087 046c 91       		.byte	0x91
 3088 046d 77       		.sleb128 -9
 3089 046e 13       		.uleb128 0x13
 3090 046f A1060000 		.4byte	.LASF74
 3091 0473 01       		.byte	0x1
 3092 0474 6F       		.byte	0x6f
 3093 0475 AD000000 		.4byte	0xad
 3094 0479 02       		.uleb128 0x2
 3095 047a 91       		.byte	0x91
 3096 047b 74       		.sleb128 -12
 3097 047c 13       		.uleb128 0x13
 3098 047d AA060000 		.4byte	.LASF75
 3099 0481 01       		.byte	0x1
 3100 0482 71       		.byte	0x71
 3101 0483 57000000 		.4byte	0x57
 3102 0487 02       		.uleb128 0x2
 3103 0488 91       		.byte	0x91
 3104 0489 70       		.sleb128 -16
 3105 048a 14       		.uleb128 0x14
 3106 048b 26000000 		.4byte	.LBB2
 3107 048f 4A000000 		.4byte	.LBE2-.LBB2
 3108 0493 13       		.uleb128 0x13
 3109 0494 A1060000 		.4byte	.LASF74
 3110 0498 01       		.byte	0x1
 3111 0499 74       		.byte	0x74
 3112 049a AD000000 		.4byte	0xad
 3113 049e 02       		.uleb128 0x2
 3114 049f 91       		.byte	0x91
 3115 04a0 76       		.sleb128 -10
 3116 04a1 14       		.uleb128 0x14
 3117 04a2 2C000000 		.4byte	.LBB3
 3118 04a6 2A000000 		.4byte	.LBE3-.LBB3
 3119 04aa 13       		.uleb128 0x13
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 73


 3120 04ab 73020000 		.4byte	.LASF76
 3121 04af 01       		.byte	0x1
 3122 04b0 76       		.byte	0x76
 3123 04b1 AD000000 		.4byte	0xad
 3124 04b5 02       		.uleb128 0x2
 3125 04b6 91       		.byte	0x91
 3126 04b7 75       		.sleb128 -11
 3127 04b8 00       		.byte	0
 3128 04b9 00       		.byte	0
 3129 04ba 00       		.byte	0
 3130 04bb 11       		.uleb128 0x11
 3131 04bc 49050000 		.4byte	.LASF77
 3132 04c0 01       		.byte	0x1
 3133 04c1 97       		.byte	0x97
 3134 04c2 00000000 		.4byte	.LFB70
 3135 04c6 1C000000 		.4byte	.LFE70-.LFB70
 3136 04ca 01       		.uleb128 0x1
 3137 04cb 9C       		.byte	0x9c
 3138 04cc 11       		.uleb128 0x11
 3139 04cd 2F050000 		.4byte	.LASF78
 3140 04d1 01       		.byte	0x1
 3141 04d2 9F       		.byte	0x9f
 3142 04d3 00000000 		.4byte	.LFB71
 3143 04d7 28000000 		.4byte	.LFE71-.LFB71
 3144 04db 01       		.uleb128 0x1
 3145 04dc 9C       		.byte	0x9c
 3146 04dd 15       		.uleb128 0x15
 3147 04de 84030000 		.4byte	.LASF90
 3148 04e2 01       		.byte	0x1
 3149 04e3 AA       		.byte	0xaa
 3150 04e4 8C000000 		.4byte	0x8c
 3151 04e8 00000000 		.4byte	.LFB72
 3152 04ec C8000000 		.4byte	.LFE72-.LFB72
 3153 04f0 01       		.uleb128 0x1
 3154 04f1 9C       		.byte	0x9c
 3155 04f2 6F050000 		.4byte	0x56f
 3156 04f6 16       		.uleb128 0x16
 3157 04f7 1D040000 		.4byte	.LASF79
 3158 04fb 01       		.byte	0x1
 3159 04fc AA       		.byte	0xaa
 3160 04fd 0C010000 		.4byte	0x10c
 3161 0501 02       		.uleb128 0x2
 3162 0502 91       		.byte	0x91
 3163 0503 5C       		.sleb128 -36
 3164 0504 16       		.uleb128 0x16
 3165 0505 B4060000 		.4byte	.LASF80
 3166 0509 01       		.byte	0x1
 3167 050a AA       		.byte	0xaa
 3168 050b 0C010000 		.4byte	0x10c
 3169 050f 02       		.uleb128 0x2
 3170 0510 91       		.byte	0x91
 3171 0511 58       		.sleb128 -40
 3172 0512 16       		.uleb128 0x16
 3173 0513 9E020000 		.4byte	.LASF81
 3174 0517 01       		.byte	0x1
 3175 0518 AA       		.byte	0xaa
 3176 0519 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 74


 3177 051d 02       		.uleb128 0x2
 3178 051e 91       		.byte	0x91
 3179 051f 54       		.sleb128 -44
 3180 0520 13       		.uleb128 0x13
 3181 0521 79030000 		.4byte	.LASF82
 3182 0525 01       		.byte	0x1
 3183 0526 AC       		.byte	0xac
 3184 0527 C5000000 		.4byte	0xc5
 3185 052b 02       		.uleb128 0x2
 3186 052c 91       		.byte	0x91
 3187 052d 74       		.sleb128 -12
 3188 052e 14       		.uleb128 0x14
 3189 052f 16000000 		.4byte	.LBB4
 3190 0533 88000000 		.4byte	.LBE4-.LBB4
 3191 0537 13       		.uleb128 0x13
 3192 0538 26040000 		.4byte	.LASF83
 3193 053c 01       		.byte	0x1
 3194 053d B0       		.byte	0xb0
 3195 053e 0C010000 		.4byte	0x10c
 3196 0542 02       		.uleb128 0x2
 3197 0543 91       		.byte	0x91
 3198 0544 64       		.sleb128 -28
 3199 0545 13       		.uleb128 0x13
 3200 0546 CE040000 		.4byte	.LASF84
 3201 054a 01       		.byte	0x1
 3202 054b B1       		.byte	0xb1
 3203 054c A2000000 		.4byte	0xa2
 3204 0550 02       		.uleb128 0x2
 3205 0551 91       		.byte	0x91
 3206 0552 6C       		.sleb128 -20
 3207 0553 17       		.uleb128 0x17
 3208 0554 6900     		.ascii	"i\000"
 3209 0556 01       		.byte	0x1
 3210 0557 B2       		.byte	0xb2
 3211 0558 A2000000 		.4byte	0xa2
 3212 055c 02       		.uleb128 0x2
 3213 055d 91       		.byte	0x91
 3214 055e 70       		.sleb128 -16
 3215 055f 13       		.uleb128 0x13
 3216 0560 FD010000 		.4byte	.LASF85
 3217 0564 01       		.byte	0x1
 3218 0565 B2       		.byte	0xb2
 3219 0566 A2000000 		.4byte	0xa2
 3220 056a 02       		.uleb128 0x2
 3221 056b 91       		.byte	0x91
 3222 056c 68       		.sleb128 -24
 3223 056d 00       		.byte	0
 3224 056e 00       		.byte	0
 3225 056f 12       		.uleb128 0x12
 3226 0570 07040000 		.4byte	.LASF87
 3227 0574 01       		.byte	0x1
 3228 0575 DE       		.byte	0xde
 3229 0576 F3010000 		.4byte	0x1f3
 3230 057a 00000000 		.4byte	.LFB73
 3231 057e FC000000 		.4byte	.LFE73-.LFB73
 3232 0582 01       		.uleb128 0x1
 3233 0583 9C       		.byte	0x9c
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 75


 3234 0584 C6050000 		.4byte	0x5c6
 3235 0588 13       		.uleb128 0x13
 3236 0589 FA000000 		.4byte	.LASF88
 3237 058d 01       		.byte	0x1
 3238 058e E0       		.byte	0xe0
 3239 058f F3010000 		.4byte	0x1f3
 3240 0593 03       		.uleb128 0x3
 3241 0594 91       		.byte	0x91
 3242 0595 E47C     		.sleb128 -412
 3243 0597 14       		.uleb128 0x14
 3244 0598 4A000000 		.4byte	.LBB5
 3245 059c 84000000 		.4byte	.LBE5-.LBB5
 3246 05a0 17       		.uleb128 0x17
 3247 05a1 6900     		.ascii	"i\000"
 3248 05a3 01       		.byte	0x1
 3249 05a4 E7       		.byte	0xe7
 3250 05a5 7E000000 		.4byte	0x7e
 3251 05a9 02       		.uleb128 0x2
 3252 05aa 91       		.byte	0x91
 3253 05ab 6C       		.sleb128 -20
 3254 05ac 14       		.uleb128 0x14
 3255 05ad 70000000 		.4byte	.LBB6
 3256 05b1 46000000 		.4byte	.LBE6-.LBB6
 3257 05b5 13       		.uleb128 0x13
 3258 05b6 D6010000 		.4byte	.LASF89
 3259 05ba 01       		.byte	0x1
 3260 05bb F4       		.byte	0xf4
 3261 05bc 57000000 		.4byte	0x57
 3262 05c0 02       		.uleb128 0x2
 3263 05c1 91       		.byte	0x91
 3264 05c2 68       		.sleb128 -24
 3265 05c3 00       		.byte	0
 3266 05c4 00       		.byte	0
 3267 05c5 00       		.byte	0
 3268 05c6 18       		.uleb128 0x18
 3269 05c7 8F020000 		.4byte	.LASF91
 3270 05cb 01       		.byte	0x1
 3271 05cc 0801     		.2byte	0x108
 3272 05ce AD000000 		.4byte	0xad
 3273 05d2 00000000 		.4byte	.LFB74
 3274 05d6 78000000 		.4byte	.LFE74-.LFB74
 3275 05da 01       		.uleb128 0x1
 3276 05db 9C       		.byte	0x9c
 3277 05dc 37060000 		.4byte	0x637
 3278 05e0 19       		.uleb128 0x19
 3279 05e1 6F030000 		.4byte	.LASF92
 3280 05e5 01       		.byte	0x1
 3281 05e6 0801     		.2byte	0x108
 3282 05e8 0C010000 		.4byte	0x10c
 3283 05ec 02       		.uleb128 0x2
 3284 05ed 91       		.byte	0x91
 3285 05ee 6C       		.sleb128 -20
 3286 05ef 19       		.uleb128 0x19
 3287 05f0 20030000 		.4byte	.LASF93
 3288 05f4 01       		.byte	0x1
 3289 05f5 0801     		.2byte	0x108
 3290 05f7 12010000 		.4byte	0x112
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 76


 3291 05fb 02       		.uleb128 0x2
 3292 05fc 91       		.byte	0x91
 3293 05fd 68       		.sleb128 -24
 3294 05fe 19       		.uleb128 0x19
 3295 05ff 46030000 		.4byte	.LASF94
 3296 0603 01       		.byte	0x1
 3297 0604 0801     		.2byte	0x108
 3298 0606 12010000 		.4byte	0x112
 3299 060a 02       		.uleb128 0x2
 3300 060b 91       		.byte	0x91
 3301 060c 64       		.sleb128 -28
 3302 060d 19       		.uleb128 0x19
 3303 060e 2C030000 		.4byte	.LASF95
 3304 0612 01       		.byte	0x1
 3305 0613 0801     		.2byte	0x108
 3306 0615 0C010000 		.4byte	0x10c
 3307 0619 02       		.uleb128 0x2
 3308 061a 91       		.byte	0x91
 3309 061b 60       		.sleb128 -32
 3310 061c 1A       		.uleb128 0x1a
 3311 061d 6100     		.ascii	"a\000"
 3312 061f 01       		.byte	0x1
 3313 0620 0A01     		.2byte	0x10a
 3314 0622 0C010000 		.4byte	0x10c
 3315 0626 02       		.uleb128 0x2
 3316 0627 91       		.byte	0x91
 3317 0628 74       		.sleb128 -12
 3318 0629 1A       		.uleb128 0x1a
 3319 062a 6200     		.ascii	"b\000"
 3320 062c 01       		.byte	0x1
 3321 062d 0A01     		.2byte	0x10a
 3322 062f 0C010000 		.4byte	0x10c
 3323 0633 02       		.uleb128 0x2
 3324 0634 91       		.byte	0x91
 3325 0635 70       		.sleb128 -16
 3326 0636 00       		.byte	0
 3327 0637 1B       		.uleb128 0x1b
 3328 0638 71050000 		.4byte	.LASF96
 3329 063c 01       		.byte	0x1
 3330 063d 2701     		.2byte	0x127
 3331 063f AD000000 		.4byte	0xad
 3332 0643 00000000 		.4byte	.LFB75
 3333 0647 40010000 		.4byte	.LFE75-.LFB75
 3334 064b 01       		.uleb128 0x1
 3335 064c 9C       		.byte	0x9c
 3336 064d 69060000 		.4byte	0x669
 3337 0651 14       		.uleb128 0x14
 3338 0652 2E000000 		.4byte	.LBB7
 3339 0656 32000000 		.4byte	.LBE7-.LBB7
 3340 065a 1A       		.uleb128 0x1a
 3341 065b 6900     		.ascii	"i\000"
 3342 065d 01       		.byte	0x1
 3343 065e 3401     		.2byte	0x134
 3344 0660 AD000000 		.4byte	0xad
 3345 0664 02       		.uleb128 0x2
 3346 0665 91       		.byte	0x91
 3347 0666 77       		.sleb128 -9
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 77


 3348 0667 00       		.byte	0
 3349 0668 00       		.byte	0
 3350 0669 1B       		.uleb128 0x1b
 3351 066a C2030000 		.4byte	.LASF97
 3352 066e 01       		.byte	0x1
 3353 066f 6F01     		.2byte	0x16f
 3354 0671 AD000000 		.4byte	0xad
 3355 0675 00000000 		.4byte	.LFB76
 3356 0679 B4000000 		.4byte	.LFE76-.LFB76
 3357 067d 01       		.uleb128 0x1
 3358 067e 9C       		.byte	0x9c
 3359 067f AC060000 		.4byte	0x6ac
 3360 0683 1C       		.uleb128 0x1c
 3361 0684 4F060000 		.4byte	.LASF35
 3362 0688 01       		.byte	0x1
 3363 0689 7301     		.2byte	0x173
 3364 068b AD000000 		.4byte	0xad
 3365 068f 02       		.uleb128 0x2
 3366 0690 91       		.byte	0x91
 3367 0691 77       		.sleb128 -9
 3368 0692 14       		.uleb128 0x14
 3369 0693 36000000 		.4byte	.LBB8
 3370 0697 44000000 		.4byte	.LBE8-.LBB8
 3371 069b 1C       		.uleb128 0x1c
 3372 069c 74030000 		.4byte	.LASF98
 3373 06a0 01       		.byte	0x1
 3374 06a1 7B01     		.2byte	0x17b
 3375 06a3 AC060000 		.4byte	0x6ac
 3376 06a7 02       		.uleb128 0x2
 3377 06a8 91       		.byte	0x91
 3378 06a9 6C       		.sleb128 -20
 3379 06aa 00       		.byte	0
 3380 06ab 00       		.byte	0
 3381 06ac 08       		.uleb128 0x8
 3382 06ad F7000000 		.4byte	0xf7
 3383 06b1 BC060000 		.4byte	0x6bc
 3384 06b5 09       		.uleb128 0x9
 3385 06b6 05010000 		.4byte	0x105
 3386 06ba 09       		.byte	0x9
 3387 06bb 00       		.byte	0
 3388 06bc 1D       		.uleb128 0x1d
 3389 06bd 59010000 		.4byte	.LASF99
 3390 06c1 01       		.byte	0x1
 3391 06c2 8D01     		.2byte	0x18d
 3392 06c4 00000000 		.4byte	.LFB77
 3393 06c8 1C000000 		.4byte	.LFE77-.LFB77
 3394 06cc 01       		.uleb128 0x1
 3395 06cd 9C       		.byte	0x9c
 3396 06ce 1E       		.uleb128 0x1e
 3397 06cf D0050000 		.4byte	.LASF101
 3398 06d3 01       		.byte	0x1
 3399 06d4 9D01     		.2byte	0x19d
 3400 06d6 AD000000 		.4byte	0xad
 3401 06da 00000000 		.4byte	.LFB78
 3402 06de 28000000 		.4byte	.LFE78-.LFB78
 3403 06e2 01       		.uleb128 0x1
 3404 06e3 9C       		.byte	0x9c
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 78


 3405 06e4 1F       		.uleb128 0x1f
 3406 06e5 A6020000 		.4byte	.LASF104
 3407 06e9 01       		.byte	0x1
 3408 06ea A901     		.2byte	0x1a9
 3409 06ec 00000000 		.4byte	.LFB79
 3410 06f0 30010000 		.4byte	.LFE79-.LFB79
 3411 06f4 01       		.uleb128 0x1
 3412 06f5 9C       		.byte	0x9c
 3413 06f6 38070000 		.4byte	0x738
 3414 06fa 20       		.uleb128 0x20
 3415 06fb 00000000 		.4byte	.Ldebug_ranges0+0
 3416 06ff 1C       		.uleb128 0x1c
 3417 0700 A1060000 		.4byte	.LASF74
 3418 0704 01       		.byte	0x1
 3419 0705 AD01     		.2byte	0x1ad
 3420 0707 AD000000 		.4byte	0xad
 3421 070b 02       		.uleb128 0x2
 3422 070c 91       		.byte	0x91
 3423 070d 77       		.sleb128 -9
 3424 070e 14       		.uleb128 0x14
 3425 070f 0E000000 		.4byte	.LBB10
 3426 0713 E4000000 		.4byte	.LBE10-.LBB10
 3427 0717 1C       		.uleb128 0x1c
 3428 0718 D9040000 		.4byte	.LASF102
 3429 071c 01       		.byte	0x1
 3430 071d B101     		.2byte	0x1b1
 3431 071f 38070000 		.4byte	0x738
 3432 0723 02       		.uleb128 0x2
 3433 0724 91       		.byte	0x91
 3434 0725 50       		.sleb128 -48
 3435 0726 1C       		.uleb128 0x1c
 3436 0727 4E040000 		.4byte	.LASF103
 3437 072b 01       		.byte	0x1
 3438 072c B601     		.2byte	0x1b6
 3439 072e 0C010000 		.4byte	0x10c
 3440 0732 02       		.uleb128 0x2
 3441 0733 91       		.byte	0x91
 3442 0734 70       		.sleb128 -16
 3443 0735 00       		.byte	0
 3444 0736 00       		.byte	0
 3445 0737 00       		.byte	0
 3446 0738 08       		.uleb128 0x8
 3447 0739 F7000000 		.4byte	0xf7
 3448 073d 48070000 		.4byte	0x748
 3449 0741 09       		.uleb128 0x9
 3450 0742 05010000 		.4byte	0x105
 3451 0746 1D       		.byte	0x1d
 3452 0747 00       		.byte	0
 3453 0748 1F       		.uleb128 0x1f
 3454 0749 BD010000 		.4byte	.LASF105
 3455 074d 01       		.byte	0x1
 3456 074e DB01     		.2byte	0x1db
 3457 0750 00000000 		.4byte	.LFB80
 3458 0754 38010000 		.4byte	.LFE80-.LFB80
 3459 0758 01       		.uleb128 0x1
 3460 0759 9C       		.byte	0x9c
 3461 075a 78070000 		.4byte	0x778
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 79


 3462 075e 14       		.uleb128 0x14
 3463 075f B6000000 		.4byte	.LBB12
 3464 0763 34000000 		.4byte	.LBE12-.LBB12
 3465 0767 1C       		.uleb128 0x1c
 3466 0768 92050000 		.4byte	.LASF106
 3467 076c 01       		.byte	0x1
 3468 076d 0402     		.2byte	0x204
 3469 076f AC060000 		.4byte	0x6ac
 3470 0773 02       		.uleb128 0x2
 3471 0774 91       		.byte	0x91
 3472 0775 6C       		.sleb128 -20
 3473 0776 00       		.byte	0
 3474 0777 00       		.byte	0
 3475 0778 1B       		.uleb128 0x1b
 3476 0779 11020000 		.4byte	.LASF107
 3477 077d 01       		.byte	0x1
 3478 077e 1602     		.2byte	0x216
 3479 0780 57000000 		.4byte	0x57
 3480 0784 00000000 		.4byte	.LFB81
 3481 0788 44010000 		.4byte	.LFE81-.LFB81
 3482 078c 01       		.uleb128 0x1
 3483 078d 9C       		.byte	0x9c
 3484 078e 34080000 		.4byte	0x834
 3485 0792 1C       		.uleb128 0x1c
 3486 0793 5A030000 		.4byte	.LASF108
 3487 0797 01       		.byte	0x1
 3488 0798 2102     		.2byte	0x221
 3489 079a 57000000 		.4byte	0x57
 3490 079e 02       		.uleb128 0x2
 3491 079f 91       		.byte	0x91
 3492 07a0 74       		.sleb128 -12
 3493 07a1 14       		.uleb128 0x14
 3494 07a2 30000000 		.4byte	.LBB13
 3495 07a6 DE000000 		.4byte	.LBE13-.LBB13
 3496 07aa 1C       		.uleb128 0x1c
 3497 07ab D6010000 		.4byte	.LASF89
 3498 07af 01       		.byte	0x1
 3499 07b0 2602     		.2byte	0x226
 3500 07b2 38070000 		.4byte	0x738
 3501 07b6 02       		.uleb128 0x2
 3502 07b7 91       		.byte	0x91
 3503 07b8 54       		.sleb128 -44
 3504 07b9 1A       		.uleb128 0x1a
 3505 07ba 7400     		.ascii	"t\000"
 3506 07bc 01       		.byte	0x1
 3507 07bd 2C02     		.2byte	0x22c
 3508 07bf 2D010000 		.4byte	0x12d
 3509 07c3 03       		.uleb128 0x3
 3510 07c4 91       		.byte	0x91
 3511 07c5 947F     		.sleb128 -108
 3512 07c7 1C       		.uleb128 0x1c
 3513 07c8 7B010000 		.4byte	.LASF109
 3514 07cc 01       		.byte	0x1
 3515 07cd 2F02     		.2byte	0x22f
 3516 07cf 7E000000 		.4byte	0x7e
 3517 07d3 02       		.uleb128 0x2
 3518 07d4 91       		.byte	0x91
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 80


 3519 07d5 50       		.sleb128 -48
 3520 07d6 1C       		.uleb128 0x1c
 3521 07d7 4B020000 		.4byte	.LASF110
 3522 07db 01       		.byte	0x1
 3523 07dc 2F02     		.2byte	0x22f
 3524 07de 7E000000 		.4byte	0x7e
 3525 07e2 02       		.uleb128 0x2
 3526 07e3 91       		.byte	0x91
 3527 07e4 4C       		.sleb128 -52
 3528 07e5 1A       		.uleb128 0x1a
 3529 07e6 64617900 		.ascii	"day\000"
 3530 07ea 01       		.byte	0x1
 3531 07eb 2F02     		.2byte	0x22f
 3532 07ed 7E000000 		.4byte	0x7e
 3533 07f1 02       		.uleb128 0x2
 3534 07f2 91       		.byte	0x91
 3535 07f3 48       		.sleb128 -56
 3536 07f4 1C       		.uleb128 0x1c
 3537 07f5 18040000 		.4byte	.LASF111
 3538 07f9 01       		.byte	0x1
 3539 07fa 2F02     		.2byte	0x22f
 3540 07fc 7E000000 		.4byte	0x7e
 3541 0800 02       		.uleb128 0x2
 3542 0801 91       		.byte	0x91
 3543 0802 44       		.sleb128 -60
 3544 0803 1C       		.uleb128 0x1c
 3545 0804 38060000 		.4byte	.LASF112
 3546 0808 01       		.byte	0x1
 3547 0809 2F02     		.2byte	0x22f
 3548 080b 7E000000 		.4byte	0x7e
 3549 080f 02       		.uleb128 0x2
 3550 0810 91       		.byte	0x91
 3551 0811 40       		.sleb128 -64
 3552 0812 1C       		.uleb128 0x1c
 3553 0813 74010000 		.4byte	.LASF113
 3554 0817 01       		.byte	0x1
 3555 0818 2F02     		.2byte	0x22f
 3556 081a 7E000000 		.4byte	0x7e
 3557 081e 03       		.uleb128 0x3
 3558 081f 91       		.byte	0x91
 3559 0820 BC7F     		.sleb128 -68
 3560 0822 1C       		.uleb128 0x1c
 3561 0823 00000000 		.4byte	.LASF114
 3562 0827 01       		.byte	0x1
 3563 0828 2F02     		.2byte	0x22f
 3564 082a 7E000000 		.4byte	0x7e
 3565 082e 03       		.uleb128 0x3
 3566 082f 91       		.byte	0x91
 3567 0830 B87F     		.sleb128 -72
 3568 0832 00       		.byte	0
 3569 0833 00       		.byte	0
 3570 0834 21       		.uleb128 0x21
 3571 0835 89010000 		.4byte	.LASF115
 3572 0839 01       		.byte	0x1
 3573 083a 4F02     		.2byte	0x24f
 3574 083c AD000000 		.4byte	0xad
 3575 0840 00000000 		.4byte	.LFB82
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 81


 3576 0844 14000000 		.4byte	.LFE82-.LFB82
 3577 0848 01       		.uleb128 0x1
 3578 0849 9C       		.byte	0x9c
 3579 084a 1D       		.uleb128 0x1d
 3580 084b 37020000 		.4byte	.LASF116
 3581 084f 01       		.byte	0x1
 3582 0850 5402     		.2byte	0x254
 3583 0852 00000000 		.4byte	.LFB83
 3584 0856 1A000000 		.4byte	.LFE83-.LFB83
 3585 085a 01       		.uleb128 0x1
 3586 085b 9C       		.byte	0x9c
 3587 085c 1D       		.uleb128 0x1d
 3588 085d CA000000 		.4byte	.LASF117
 3589 0861 01       		.byte	0x1
 3590 0862 6102     		.2byte	0x261
 3591 0864 00000000 		.4byte	.LFB84
 3592 0868 2A000000 		.4byte	.LFE84-.LFB84
 3593 086c 01       		.uleb128 0x1
 3594 086d 9C       		.byte	0x9c
 3595 086e 1B       		.uleb128 0x1b
 3596 086f E3040000 		.4byte	.LASF118
 3597 0873 01       		.byte	0x1
 3598 0874 7702     		.2byte	0x277
 3599 0876 FF020000 		.4byte	0x2ff
 3600 087a 00000000 		.4byte	.LFB85
 3601 087e 7C020000 		.4byte	.LFE85-.LFB85
 3602 0882 01       		.uleb128 0x1
 3603 0883 9C       		.byte	0x9c
 3604 0884 17090000 		.4byte	0x917
 3605 0888 1A       		.uleb128 0x1a
 3606 0889 67707300 		.ascii	"gps\000"
 3607 088d 01       		.byte	0x1
 3608 088e 7802     		.2byte	0x278
 3609 0890 FF020000 		.4byte	0x2ff
 3610 0894 02       		.uleb128 0x2
 3611 0895 91       		.byte	0x91
 3612 0896 4C       		.sleb128 -52
 3613 0897 1C       		.uleb128 0x1c
 3614 0898 CB060000 		.4byte	.LASF119
 3615 089c 01       		.byte	0x1
 3616 089d 8402     		.2byte	0x284
 3617 089f 57000000 		.4byte	0x57
 3618 08a3 02       		.uleb128 0x2
 3619 08a4 91       		.byte	0x91
 3620 08a5 68       		.sleb128 -24
 3621 08a6 1C       		.uleb128 0x1c
 3622 08a7 00060000 		.4byte	.LASF120
 3623 08ab 01       		.byte	0x1
 3624 08ac AB02     		.2byte	0x2ab
 3625 08ae AD000000 		.4byte	0xad
 3626 08b2 02       		.uleb128 0x2
 3627 08b3 91       		.byte	0x91
 3628 08b4 67       		.sleb128 -25
 3629 08b5 1A       		.uleb128 0x1a
 3630 08b6 6C617400 		.ascii	"lat\000"
 3631 08ba 01       		.byte	0x1
 3632 08bb B702     		.2byte	0x2b7
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 82


 3633 08bd E9000000 		.4byte	0xe9
 3634 08c1 02       		.uleb128 0x2
 3635 08c2 91       		.byte	0x91
 3636 08c3 48       		.sleb128 -56
 3637 08c4 1A       		.uleb128 0x1a
 3638 08c5 6C6F6E00 		.ascii	"lon\000"
 3639 08c9 01       		.byte	0x1
 3640 08ca B802     		.2byte	0x2b8
 3641 08cc E9000000 		.4byte	0xe9
 3642 08d0 02       		.uleb128 0x2
 3643 08d1 91       		.byte	0x91
 3644 08d2 44       		.sleb128 -60
 3645 08d3 1A       		.uleb128 0x1a
 3646 08d4 616C7400 		.ascii	"alt\000"
 3647 08d8 01       		.byte	0x1
 3648 08d9 B902     		.2byte	0x2b9
 3649 08db E9000000 		.4byte	0xe9
 3650 08df 02       		.uleb128 0x2
 3651 08e0 91       		.byte	0x91
 3652 08e1 40       		.sleb128 -64
 3653 08e2 1A       		.uleb128 0x1a
 3654 08e3 733100   		.ascii	"s1\000"
 3655 08e6 01       		.byte	0x1
 3656 08e7 BD02     		.2byte	0x2bd
 3657 08e9 0C010000 		.4byte	0x10c
 3658 08ed 02       		.uleb128 0x2
 3659 08ee 91       		.byte	0x91
 3660 08ef 60       		.sleb128 -32
 3661 08f0 1C       		.uleb128 0x1c
 3662 08f1 12040000 		.4byte	.LASF121
 3663 08f5 01       		.byte	0x1
 3664 08f6 C002     		.2byte	0x2c0
 3665 08f8 7E000000 		.4byte	0x7e
 3666 08fc 02       		.uleb128 0x2
 3667 08fd 91       		.byte	0x91
 3668 08fe 5C       		.sleb128 -36
 3669 08ff 14       		.uleb128 0x14
 3670 0900 B4000000 		.4byte	.LBB14
 3671 0904 38000000 		.4byte	.LBE14-.LBB14
 3672 0908 1A       		.uleb128 0x1a
 3673 0909 6900     		.ascii	"i\000"
 3674 090b 01       		.byte	0x1
 3675 090c AC02     		.2byte	0x2ac
 3676 090e B9000000 		.4byte	0xb9
 3677 0912 02       		.uleb128 0x2
 3678 0913 91       		.byte	0x91
 3679 0914 6E       		.sleb128 -18
 3680 0915 00       		.byte	0
 3681 0916 00       		.byte	0
 3682 0917 22       		.uleb128 0x22
 3683 0918 FF000000 		.4byte	.LASF122
 3684 091c 0A       		.byte	0xa
 3685 091d 1207     		.2byte	0x712
 3686 091f 23090000 		.4byte	0x923
 3687 0923 23       		.uleb128 0x23
 3688 0924 97000000 		.4byte	0x97
 3689 0928 24       		.uleb128 0x24
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 83


 3690 0929 EE000000 		.4byte	.LASF123
 3691 092d 07       		.byte	0x7
 3692 092e 15       		.byte	0x15
 3693 092f AD000000 		.4byte	0xad
 3694 0933 05       		.uleb128 0x5
 3695 0934 03       		.byte	0x3
 3696 0935 00000000 		.4byte	modem_state
 3697 0939 24       		.uleb128 0x24
 3698 093a E9050000 		.4byte	.LASF124
 3699 093e 07       		.byte	0x7
 3700 093f 49       		.byte	0x49
 3701 0940 DD000000 		.4byte	0xdd
 3702 0944 05       		.uleb128 0x5
 3703 0945 03       		.byte	0x3
 3704 0946 00000000 		.4byte	modem_start_time_stamp
 3705 094a 24       		.uleb128 0x24
 3706 094b E8020000 		.4byte	.LASF59
 3707 094f 07       		.byte	0x7
 3708 0950 4A       		.byte	0x4a
 3709 0951 3B020000 		.4byte	0x23b
 3710 0955 05       		.uleb128 0x5
 3711 0956 03       		.byte	0x3
 3712 0957 00000000 		.4byte	modem_info
 3713 095b 24       		.uleb128 0x24
 3714 095c 0C010000 		.4byte	.LASF125
 3715 0960 07       		.byte	0x7
 3716 0961 4B       		.byte	0x4b
 3717 0962 AF020000 		.4byte	0x2af
 3718 0966 05       		.uleb128 0x5
 3719 0967 03       		.byte	0x3
 3720 0968 00000000 		.4byte	modem_stats
 3721 096c 24       		.uleb128 0x24
 3722 096d A0030000 		.4byte	.LASF126
 3723 0971 08       		.byte	0x8
 3724 0972 1D       		.byte	0x1d
 3725 0973 B9000000 		.4byte	0xb9
 3726 0977 05       		.uleb128 0x5
 3727 0978 03       		.byte	0x3
 3728 0979 00000000 		.4byte	dataPointsInStack
 3729 097d 24       		.uleb128 0x24
 3730 097e 56060000 		.4byte	.LASF127
 3731 0982 08       		.byte	0x8
 3732 0983 1E       		.byte	0x1e
 3733 0984 B9000000 		.4byte	0xb9
 3734 0988 05       		.uleb128 0x5
 3735 0989 03       		.byte	0x3
 3736 098a 00000000 		.4byte	dataPointsInStackDesired
 3737 098e 08       		.uleb128 0x8
 3738 098f 37030000 		.4byte	0x337
 3739 0993 9E090000 		.4byte	0x99e
 3740 0997 09       		.uleb128 0x9
 3741 0998 05010000 		.4byte	0x105
 3742 099c 95       		.byte	0x95
 3743 099d 00       		.byte	0
 3744 099e 24       		.uleb128 0x24
 3745 099f CA020000 		.4byte	.LASF128
 3746 09a3 08       		.byte	0x8
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 84


 3747 09a4 1F       		.byte	0x1f
 3748 09a5 8E090000 		.4byte	0x98e
 3749 09a9 05       		.uleb128 0x5
 3750 09aa 03       		.byte	0x3
 3751 09ab 00000000 		.4byte	data
 3752 09af 08       		.uleb128 0x8
 3753 09b0 F7000000 		.4byte	0xf7
 3754 09b4 C0090000 		.4byte	0x9c0
 3755 09b8 25       		.uleb128 0x25
 3756 09b9 05010000 		.4byte	0x105
 3757 09bd 0F27     		.2byte	0x270f
 3758 09bf 00       		.byte	0
 3759 09c0 24       		.uleb128 0x24
 3760 09c1 D5060000 		.4byte	.LASF129
 3761 09c5 09       		.byte	0x9
 3762 09c6 16       		.byte	0x16
 3763 09c7 AF090000 		.4byte	0x9af
 3764 09cb 05       		.uleb128 0x5
 3765 09cc 03       		.byte	0x3
 3766 09cd 00000000 		.4byte	http_request
 3767 09d1 24       		.uleb128 0x24
 3768 09d2 4F010000 		.4byte	.LASF130
 3769 09d6 09       		.byte	0x9
 3770 09d7 17       		.byte	0x17
 3771 09d8 AF090000 		.4byte	0x9af
 3772 09dc 05       		.uleb128 0x5
 3773 09dd 03       		.byte	0x3
 3774 09de 00000000 		.4byte	http_body
 3775 09e2 08       		.uleb128 0x8
 3776 09e3 F7000000 		.4byte	0xf7
 3777 09e7 F2090000 		.4byte	0x9f2
 3778 09eb 09       		.uleb128 0x9
 3779 09ec 05010000 		.4byte	0x105
 3780 09f0 C7       		.byte	0xc7
 3781 09f1 00       		.byte	0
 3782 09f2 24       		.uleb128 0x24
 3783 09f3 A0050000 		.4byte	.LASF131
 3784 09f7 09       		.byte	0x9
 3785 09f8 18       		.byte	0x18
 3786 09f9 E2090000 		.4byte	0x9e2
 3787 09fd 05       		.uleb128 0x5
 3788 09fe 03       		.byte	0x3
 3789 09ff 00000000 		.4byte	http_route
 3790 0a03 24       		.uleb128 0x24
 3791 0a04 04050000 		.4byte	.LASF132
 3792 0a08 09       		.byte	0x9
 3793 0a09 3F       		.byte	0x3f
 3794 0a0a 69030000 		.4byte	0x369
 3795 0a0e 05       		.uleb128 0x5
 3796 0a0f 03       		.byte	0x3
 3797 0a10 00000000 		.4byte	system_info
 3798 0a14 24       		.uleb128 0x24
 3799 0a15 BE040000 		.4byte	.LASF133
 3800 0a19 09       		.byte	0x9
 3801 0a1a 51       		.byte	0x51
 3802 0a1b E7030000 		.4byte	0x3e7
 3803 0a1f 05       		.uleb128 0x5
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 85


 3804 0a20 03       		.byte	0x3
 3805 0a21 00000000 		.4byte	system_settings
 3806 0a25 08       		.uleb128 0x8
 3807 0a26 F7000000 		.4byte	0xf7
 3808 0a2a 360A0000 		.4byte	0xa36
 3809 0a2e 25       		.uleb128 0x25
 3810 0a2f 05010000 		.4byte	0x105
 3811 0a33 FF03     		.2byte	0x3ff
 3812 0a35 00       		.byte	0
 3813 0a36 24       		.uleb128 0x24
 3814 0a37 DF030000 		.4byte	.LASF134
 3815 0a3b 01       		.byte	0x1
 3816 0a3c 09       		.byte	0x9
 3817 0a3d 250A0000 		.4byte	0xa25
 3818 0a41 05       		.uleb128 0x5
 3819 0a42 03       		.byte	0x3
 3820 0a43 00000000 		.4byte	uart_received_string
 3821 0a47 24       		.uleb128 0x24
 3822 0a48 BE050000 		.4byte	.LASF135
 3823 0a4c 01       		.byte	0x1
 3824 0a4d 0A       		.byte	0xa
 3825 0a4e D1000000 		.4byte	0xd1
 3826 0a52 05       		.uleb128 0x5
 3827 0a53 03       		.byte	0x3
 3828 0a54 00000000 		.4byte	uart_string_index
 3829 0a58 00       		.byte	0
 3830              		.section	.debug_abbrev,"",%progbits
 3831              	.Ldebug_abbrev0:
 3832 0000 01       		.uleb128 0x1
 3833 0001 11       		.uleb128 0x11
 3834 0002 01       		.byte	0x1
 3835 0003 25       		.uleb128 0x25
 3836 0004 0E       		.uleb128 0xe
 3837 0005 13       		.uleb128 0x13
 3838 0006 0B       		.uleb128 0xb
 3839 0007 03       		.uleb128 0x3
 3840 0008 0E       		.uleb128 0xe
 3841 0009 1B       		.uleb128 0x1b
 3842 000a 0E       		.uleb128 0xe
 3843 000b 55       		.uleb128 0x55
 3844 000c 17       		.uleb128 0x17
 3845 000d 11       		.uleb128 0x11
 3846 000e 01       		.uleb128 0x1
 3847 000f 10       		.uleb128 0x10
 3848 0010 17       		.uleb128 0x17
 3849 0011 00       		.byte	0
 3850 0012 00       		.byte	0
 3851 0013 02       		.uleb128 0x2
 3852 0014 24       		.uleb128 0x24
 3853 0015 00       		.byte	0
 3854 0016 0B       		.uleb128 0xb
 3855 0017 0B       		.uleb128 0xb
 3856 0018 3E       		.uleb128 0x3e
 3857 0019 0B       		.uleb128 0xb
 3858 001a 03       		.uleb128 0x3
 3859 001b 0E       		.uleb128 0xe
 3860 001c 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 86


 3861 001d 00       		.byte	0
 3862 001e 03       		.uleb128 0x3
 3863 001f 16       		.uleb128 0x16
 3864 0020 00       		.byte	0
 3865 0021 03       		.uleb128 0x3
 3866 0022 0E       		.uleb128 0xe
 3867 0023 3A       		.uleb128 0x3a
 3868 0024 0B       		.uleb128 0xb
 3869 0025 3B       		.uleb128 0x3b
 3870 0026 0B       		.uleb128 0xb
 3871 0027 49       		.uleb128 0x49
 3872 0028 13       		.uleb128 0x13
 3873 0029 00       		.byte	0
 3874 002a 00       		.byte	0
 3875 002b 04       		.uleb128 0x4
 3876 002c 24       		.uleb128 0x24
 3877 002d 00       		.byte	0
 3878 002e 0B       		.uleb128 0xb
 3879 002f 0B       		.uleb128 0xb
 3880 0030 3E       		.uleb128 0x3e
 3881 0031 0B       		.uleb128 0xb
 3882 0032 03       		.uleb128 0x3
 3883 0033 08       		.uleb128 0x8
 3884 0034 00       		.byte	0
 3885 0035 00       		.byte	0
 3886 0036 05       		.uleb128 0x5
 3887 0037 16       		.uleb128 0x16
 3888 0038 00       		.byte	0
 3889 0039 03       		.uleb128 0x3
 3890 003a 0E       		.uleb128 0xe
 3891 003b 3A       		.uleb128 0x3a
 3892 003c 0B       		.uleb128 0xb
 3893 003d 3B       		.uleb128 0x3b
 3894 003e 05       		.uleb128 0x5
 3895 003f 49       		.uleb128 0x49
 3896 0040 13       		.uleb128 0x13
 3897 0041 00       		.byte	0
 3898 0042 00       		.byte	0
 3899 0043 06       		.uleb128 0x6
 3900 0044 0F       		.uleb128 0xf
 3901 0045 00       		.byte	0
 3902 0046 0B       		.uleb128 0xb
 3903 0047 0B       		.uleb128 0xb
 3904 0048 49       		.uleb128 0x49
 3905 0049 13       		.uleb128 0x13
 3906 004a 00       		.byte	0
 3907 004b 00       		.byte	0
 3908 004c 07       		.uleb128 0x7
 3909 004d 26       		.uleb128 0x26
 3910 004e 00       		.byte	0
 3911 004f 49       		.uleb128 0x49
 3912 0050 13       		.uleb128 0x13
 3913 0051 00       		.byte	0
 3914 0052 00       		.byte	0
 3915 0053 08       		.uleb128 0x8
 3916 0054 01       		.uleb128 0x1
 3917 0055 01       		.byte	0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 87


 3918 0056 49       		.uleb128 0x49
 3919 0057 13       		.uleb128 0x13
 3920 0058 01       		.uleb128 0x1
 3921 0059 13       		.uleb128 0x13
 3922 005a 00       		.byte	0
 3923 005b 00       		.byte	0
 3924 005c 09       		.uleb128 0x9
 3925 005d 21       		.uleb128 0x21
 3926 005e 00       		.byte	0
 3927 005f 49       		.uleb128 0x49
 3928 0060 13       		.uleb128 0x13
 3929 0061 2F       		.uleb128 0x2f
 3930 0062 0B       		.uleb128 0xb
 3931 0063 00       		.byte	0
 3932 0064 00       		.byte	0
 3933 0065 0A       		.uleb128 0xa
 3934 0066 13       		.uleb128 0x13
 3935 0067 01       		.byte	0x1
 3936 0068 03       		.uleb128 0x3
 3937 0069 08       		.uleb128 0x8
 3938 006a 0B       		.uleb128 0xb
 3939 006b 0B       		.uleb128 0xb
 3940 006c 3A       		.uleb128 0x3a
 3941 006d 0B       		.uleb128 0xb
 3942 006e 3B       		.uleb128 0x3b
 3943 006f 0B       		.uleb128 0xb
 3944 0070 01       		.uleb128 0x1
 3945 0071 13       		.uleb128 0x13
 3946 0072 00       		.byte	0
 3947 0073 00       		.byte	0
 3948 0074 0B       		.uleb128 0xb
 3949 0075 0D       		.uleb128 0xd
 3950 0076 00       		.byte	0
 3951 0077 03       		.uleb128 0x3
 3952 0078 0E       		.uleb128 0xe
 3953 0079 3A       		.uleb128 0x3a
 3954 007a 0B       		.uleb128 0xb
 3955 007b 3B       		.uleb128 0x3b
 3956 007c 0B       		.uleb128 0xb
 3957 007d 49       		.uleb128 0x49
 3958 007e 13       		.uleb128 0x13
 3959 007f 38       		.uleb128 0x38
 3960 0080 0B       		.uleb128 0xb
 3961 0081 00       		.byte	0
 3962 0082 00       		.byte	0
 3963 0083 0C       		.uleb128 0xc
 3964 0084 13       		.uleb128 0x13
 3965 0085 01       		.byte	0x1
 3966 0086 0B       		.uleb128 0xb
 3967 0087 05       		.uleb128 0x5
 3968 0088 3A       		.uleb128 0x3a
 3969 0089 0B       		.uleb128 0xb
 3970 008a 3B       		.uleb128 0x3b
 3971 008b 0B       		.uleb128 0xb
 3972 008c 01       		.uleb128 0x1
 3973 008d 13       		.uleb128 0x13
 3974 008e 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 88


 3975 008f 00       		.byte	0
 3976 0090 0D       		.uleb128 0xd
 3977 0091 13       		.uleb128 0x13
 3978 0092 01       		.byte	0x1
 3979 0093 0B       		.uleb128 0xb
 3980 0094 0B       		.uleb128 0xb
 3981 0095 3A       		.uleb128 0x3a
 3982 0096 0B       		.uleb128 0xb
 3983 0097 3B       		.uleb128 0x3b
 3984 0098 0B       		.uleb128 0xb
 3985 0099 01       		.uleb128 0x1
 3986 009a 13       		.uleb128 0x13
 3987 009b 00       		.byte	0
 3988 009c 00       		.byte	0
 3989 009d 0E       		.uleb128 0xe
 3990 009e 0D       		.uleb128 0xd
 3991 009f 00       		.byte	0
 3992 00a0 03       		.uleb128 0x3
 3993 00a1 08       		.uleb128 0x8
 3994 00a2 3A       		.uleb128 0x3a
 3995 00a3 0B       		.uleb128 0xb
 3996 00a4 3B       		.uleb128 0x3b
 3997 00a5 0B       		.uleb128 0xb
 3998 00a6 49       		.uleb128 0x49
 3999 00a7 13       		.uleb128 0x13
 4000 00a8 38       		.uleb128 0x38
 4001 00a9 0B       		.uleb128 0xb
 4002 00aa 00       		.byte	0
 4003 00ab 00       		.byte	0
 4004 00ac 0F       		.uleb128 0xf
 4005 00ad 0D       		.uleb128 0xd
 4006 00ae 00       		.byte	0
 4007 00af 03       		.uleb128 0x3
 4008 00b0 0E       		.uleb128 0xe
 4009 00b1 3A       		.uleb128 0x3a
 4010 00b2 0B       		.uleb128 0xb
 4011 00b3 3B       		.uleb128 0x3b
 4012 00b4 0B       		.uleb128 0xb
 4013 00b5 49       		.uleb128 0x49
 4014 00b6 13       		.uleb128 0x13
 4015 00b7 38       		.uleb128 0x38
 4016 00b8 05       		.uleb128 0x5
 4017 00b9 00       		.byte	0
 4018 00ba 00       		.byte	0
 4019 00bb 10       		.uleb128 0x10
 4020 00bc 2E       		.uleb128 0x2e
 4021 00bd 00       		.byte	0
 4022 00be 3F       		.uleb128 0x3f
 4023 00bf 19       		.uleb128 0x19
 4024 00c0 03       		.uleb128 0x3
 4025 00c1 0E       		.uleb128 0xe
 4026 00c2 3A       		.uleb128 0x3a
 4027 00c3 0B       		.uleb128 0xb
 4028 00c4 3B       		.uleb128 0x3b
 4029 00c5 0B       		.uleb128 0xb
 4030 00c6 27       		.uleb128 0x27
 4031 00c7 19       		.uleb128 0x19
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 89


 4032 00c8 11       		.uleb128 0x11
 4033 00c9 01       		.uleb128 0x1
 4034 00ca 12       		.uleb128 0x12
 4035 00cb 06       		.uleb128 0x6
 4036 00cc 40       		.uleb128 0x40
 4037 00cd 18       		.uleb128 0x18
 4038 00ce 9642     		.uleb128 0x2116
 4039 00d0 19       		.uleb128 0x19
 4040 00d1 00       		.byte	0
 4041 00d2 00       		.byte	0
 4042 00d3 11       		.uleb128 0x11
 4043 00d4 2E       		.uleb128 0x2e
 4044 00d5 00       		.byte	0
 4045 00d6 3F       		.uleb128 0x3f
 4046 00d7 19       		.uleb128 0x19
 4047 00d8 03       		.uleb128 0x3
 4048 00d9 0E       		.uleb128 0xe
 4049 00da 3A       		.uleb128 0x3a
 4050 00db 0B       		.uleb128 0xb
 4051 00dc 3B       		.uleb128 0x3b
 4052 00dd 0B       		.uleb128 0xb
 4053 00de 11       		.uleb128 0x11
 4054 00df 01       		.uleb128 0x1
 4055 00e0 12       		.uleb128 0x12
 4056 00e1 06       		.uleb128 0x6
 4057 00e2 40       		.uleb128 0x40
 4058 00e3 18       		.uleb128 0x18
 4059 00e4 9642     		.uleb128 0x2116
 4060 00e6 19       		.uleb128 0x19
 4061 00e7 00       		.byte	0
 4062 00e8 00       		.byte	0
 4063 00e9 12       		.uleb128 0x12
 4064 00ea 2E       		.uleb128 0x2e
 4065 00eb 01       		.byte	0x1
 4066 00ec 3F       		.uleb128 0x3f
 4067 00ed 19       		.uleb128 0x19
 4068 00ee 03       		.uleb128 0x3
 4069 00ef 0E       		.uleb128 0xe
 4070 00f0 3A       		.uleb128 0x3a
 4071 00f1 0B       		.uleb128 0xb
 4072 00f2 3B       		.uleb128 0x3b
 4073 00f3 0B       		.uleb128 0xb
 4074 00f4 49       		.uleb128 0x49
 4075 00f5 13       		.uleb128 0x13
 4076 00f6 11       		.uleb128 0x11
 4077 00f7 01       		.uleb128 0x1
 4078 00f8 12       		.uleb128 0x12
 4079 00f9 06       		.uleb128 0x6
 4080 00fa 40       		.uleb128 0x40
 4081 00fb 18       		.uleb128 0x18
 4082 00fc 9642     		.uleb128 0x2116
 4083 00fe 19       		.uleb128 0x19
 4084 00ff 01       		.uleb128 0x1
 4085 0100 13       		.uleb128 0x13
 4086 0101 00       		.byte	0
 4087 0102 00       		.byte	0
 4088 0103 13       		.uleb128 0x13
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 90


 4089 0104 34       		.uleb128 0x34
 4090 0105 00       		.byte	0
 4091 0106 03       		.uleb128 0x3
 4092 0107 0E       		.uleb128 0xe
 4093 0108 3A       		.uleb128 0x3a
 4094 0109 0B       		.uleb128 0xb
 4095 010a 3B       		.uleb128 0x3b
 4096 010b 0B       		.uleb128 0xb
 4097 010c 49       		.uleb128 0x49
 4098 010d 13       		.uleb128 0x13
 4099 010e 02       		.uleb128 0x2
 4100 010f 18       		.uleb128 0x18
 4101 0110 00       		.byte	0
 4102 0111 00       		.byte	0
 4103 0112 14       		.uleb128 0x14
 4104 0113 0B       		.uleb128 0xb
 4105 0114 01       		.byte	0x1
 4106 0115 11       		.uleb128 0x11
 4107 0116 01       		.uleb128 0x1
 4108 0117 12       		.uleb128 0x12
 4109 0118 06       		.uleb128 0x6
 4110 0119 00       		.byte	0
 4111 011a 00       		.byte	0
 4112 011b 15       		.uleb128 0x15
 4113 011c 2E       		.uleb128 0x2e
 4114 011d 01       		.byte	0x1
 4115 011e 3F       		.uleb128 0x3f
 4116 011f 19       		.uleb128 0x19
 4117 0120 03       		.uleb128 0x3
 4118 0121 0E       		.uleb128 0xe
 4119 0122 3A       		.uleb128 0x3a
 4120 0123 0B       		.uleb128 0xb
 4121 0124 3B       		.uleb128 0x3b
 4122 0125 0B       		.uleb128 0xb
 4123 0126 27       		.uleb128 0x27
 4124 0127 19       		.uleb128 0x19
 4125 0128 49       		.uleb128 0x49
 4126 0129 13       		.uleb128 0x13
 4127 012a 11       		.uleb128 0x11
 4128 012b 01       		.uleb128 0x1
 4129 012c 12       		.uleb128 0x12
 4130 012d 06       		.uleb128 0x6
 4131 012e 40       		.uleb128 0x40
 4132 012f 18       		.uleb128 0x18
 4133 0130 9642     		.uleb128 0x2116
 4134 0132 19       		.uleb128 0x19
 4135 0133 01       		.uleb128 0x1
 4136 0134 13       		.uleb128 0x13
 4137 0135 00       		.byte	0
 4138 0136 00       		.byte	0
 4139 0137 16       		.uleb128 0x16
 4140 0138 05       		.uleb128 0x5
 4141 0139 00       		.byte	0
 4142 013a 03       		.uleb128 0x3
 4143 013b 0E       		.uleb128 0xe
 4144 013c 3A       		.uleb128 0x3a
 4145 013d 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 91


 4146 013e 3B       		.uleb128 0x3b
 4147 013f 0B       		.uleb128 0xb
 4148 0140 49       		.uleb128 0x49
 4149 0141 13       		.uleb128 0x13
 4150 0142 02       		.uleb128 0x2
 4151 0143 18       		.uleb128 0x18
 4152 0144 00       		.byte	0
 4153 0145 00       		.byte	0
 4154 0146 17       		.uleb128 0x17
 4155 0147 34       		.uleb128 0x34
 4156 0148 00       		.byte	0
 4157 0149 03       		.uleb128 0x3
 4158 014a 08       		.uleb128 0x8
 4159 014b 3A       		.uleb128 0x3a
 4160 014c 0B       		.uleb128 0xb
 4161 014d 3B       		.uleb128 0x3b
 4162 014e 0B       		.uleb128 0xb
 4163 014f 49       		.uleb128 0x49
 4164 0150 13       		.uleb128 0x13
 4165 0151 02       		.uleb128 0x2
 4166 0152 18       		.uleb128 0x18
 4167 0153 00       		.byte	0
 4168 0154 00       		.byte	0
 4169 0155 18       		.uleb128 0x18
 4170 0156 2E       		.uleb128 0x2e
 4171 0157 01       		.byte	0x1
 4172 0158 3F       		.uleb128 0x3f
 4173 0159 19       		.uleb128 0x19
 4174 015a 03       		.uleb128 0x3
 4175 015b 0E       		.uleb128 0xe
 4176 015c 3A       		.uleb128 0x3a
 4177 015d 0B       		.uleb128 0xb
 4178 015e 3B       		.uleb128 0x3b
 4179 015f 05       		.uleb128 0x5
 4180 0160 27       		.uleb128 0x27
 4181 0161 19       		.uleb128 0x19
 4182 0162 49       		.uleb128 0x49
 4183 0163 13       		.uleb128 0x13
 4184 0164 11       		.uleb128 0x11
 4185 0165 01       		.uleb128 0x1
 4186 0166 12       		.uleb128 0x12
 4187 0167 06       		.uleb128 0x6
 4188 0168 40       		.uleb128 0x40
 4189 0169 18       		.uleb128 0x18
 4190 016a 9642     		.uleb128 0x2116
 4191 016c 19       		.uleb128 0x19
 4192 016d 01       		.uleb128 0x1
 4193 016e 13       		.uleb128 0x13
 4194 016f 00       		.byte	0
 4195 0170 00       		.byte	0
 4196 0171 19       		.uleb128 0x19
 4197 0172 05       		.uleb128 0x5
 4198 0173 00       		.byte	0
 4199 0174 03       		.uleb128 0x3
 4200 0175 0E       		.uleb128 0xe
 4201 0176 3A       		.uleb128 0x3a
 4202 0177 0B       		.uleb128 0xb
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 92


 4203 0178 3B       		.uleb128 0x3b
 4204 0179 05       		.uleb128 0x5
 4205 017a 49       		.uleb128 0x49
 4206 017b 13       		.uleb128 0x13
 4207 017c 02       		.uleb128 0x2
 4208 017d 18       		.uleb128 0x18
 4209 017e 00       		.byte	0
 4210 017f 00       		.byte	0
 4211 0180 1A       		.uleb128 0x1a
 4212 0181 34       		.uleb128 0x34
 4213 0182 00       		.byte	0
 4214 0183 03       		.uleb128 0x3
 4215 0184 08       		.uleb128 0x8
 4216 0185 3A       		.uleb128 0x3a
 4217 0186 0B       		.uleb128 0xb
 4218 0187 3B       		.uleb128 0x3b
 4219 0188 05       		.uleb128 0x5
 4220 0189 49       		.uleb128 0x49
 4221 018a 13       		.uleb128 0x13
 4222 018b 02       		.uleb128 0x2
 4223 018c 18       		.uleb128 0x18
 4224 018d 00       		.byte	0
 4225 018e 00       		.byte	0
 4226 018f 1B       		.uleb128 0x1b
 4227 0190 2E       		.uleb128 0x2e
 4228 0191 01       		.byte	0x1
 4229 0192 3F       		.uleb128 0x3f
 4230 0193 19       		.uleb128 0x19
 4231 0194 03       		.uleb128 0x3
 4232 0195 0E       		.uleb128 0xe
 4233 0196 3A       		.uleb128 0x3a
 4234 0197 0B       		.uleb128 0xb
 4235 0198 3B       		.uleb128 0x3b
 4236 0199 05       		.uleb128 0x5
 4237 019a 49       		.uleb128 0x49
 4238 019b 13       		.uleb128 0x13
 4239 019c 11       		.uleb128 0x11
 4240 019d 01       		.uleb128 0x1
 4241 019e 12       		.uleb128 0x12
 4242 019f 06       		.uleb128 0x6
 4243 01a0 40       		.uleb128 0x40
 4244 01a1 18       		.uleb128 0x18
 4245 01a2 9642     		.uleb128 0x2116
 4246 01a4 19       		.uleb128 0x19
 4247 01a5 01       		.uleb128 0x1
 4248 01a6 13       		.uleb128 0x13
 4249 01a7 00       		.byte	0
 4250 01a8 00       		.byte	0
 4251 01a9 1C       		.uleb128 0x1c
 4252 01aa 34       		.uleb128 0x34
 4253 01ab 00       		.byte	0
 4254 01ac 03       		.uleb128 0x3
 4255 01ad 0E       		.uleb128 0xe
 4256 01ae 3A       		.uleb128 0x3a
 4257 01af 0B       		.uleb128 0xb
 4258 01b0 3B       		.uleb128 0x3b
 4259 01b1 05       		.uleb128 0x5
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 93


 4260 01b2 49       		.uleb128 0x49
 4261 01b3 13       		.uleb128 0x13
 4262 01b4 02       		.uleb128 0x2
 4263 01b5 18       		.uleb128 0x18
 4264 01b6 00       		.byte	0
 4265 01b7 00       		.byte	0
 4266 01b8 1D       		.uleb128 0x1d
 4267 01b9 2E       		.uleb128 0x2e
 4268 01ba 00       		.byte	0
 4269 01bb 3F       		.uleb128 0x3f
 4270 01bc 19       		.uleb128 0x19
 4271 01bd 03       		.uleb128 0x3
 4272 01be 0E       		.uleb128 0xe
 4273 01bf 3A       		.uleb128 0x3a
 4274 01c0 0B       		.uleb128 0xb
 4275 01c1 3B       		.uleb128 0x3b
 4276 01c2 05       		.uleb128 0x5
 4277 01c3 11       		.uleb128 0x11
 4278 01c4 01       		.uleb128 0x1
 4279 01c5 12       		.uleb128 0x12
 4280 01c6 06       		.uleb128 0x6
 4281 01c7 40       		.uleb128 0x40
 4282 01c8 18       		.uleb128 0x18
 4283 01c9 9642     		.uleb128 0x2116
 4284 01cb 19       		.uleb128 0x19
 4285 01cc 00       		.byte	0
 4286 01cd 00       		.byte	0
 4287 01ce 1E       		.uleb128 0x1e
 4288 01cf 2E       		.uleb128 0x2e
 4289 01d0 00       		.byte	0
 4290 01d1 3F       		.uleb128 0x3f
 4291 01d2 19       		.uleb128 0x19
 4292 01d3 03       		.uleb128 0x3
 4293 01d4 0E       		.uleb128 0xe
 4294 01d5 3A       		.uleb128 0x3a
 4295 01d6 0B       		.uleb128 0xb
 4296 01d7 3B       		.uleb128 0x3b
 4297 01d8 05       		.uleb128 0x5
 4298 01d9 49       		.uleb128 0x49
 4299 01da 13       		.uleb128 0x13
 4300 01db 11       		.uleb128 0x11
 4301 01dc 01       		.uleb128 0x1
 4302 01dd 12       		.uleb128 0x12
 4303 01de 06       		.uleb128 0x6
 4304 01df 40       		.uleb128 0x40
 4305 01e0 18       		.uleb128 0x18
 4306 01e1 9642     		.uleb128 0x2116
 4307 01e3 19       		.uleb128 0x19
 4308 01e4 00       		.byte	0
 4309 01e5 00       		.byte	0
 4310 01e6 1F       		.uleb128 0x1f
 4311 01e7 2E       		.uleb128 0x2e
 4312 01e8 01       		.byte	0x1
 4313 01e9 3F       		.uleb128 0x3f
 4314 01ea 19       		.uleb128 0x19
 4315 01eb 03       		.uleb128 0x3
 4316 01ec 0E       		.uleb128 0xe
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 94


 4317 01ed 3A       		.uleb128 0x3a
 4318 01ee 0B       		.uleb128 0xb
 4319 01ef 3B       		.uleb128 0x3b
 4320 01f0 05       		.uleb128 0x5
 4321 01f1 11       		.uleb128 0x11
 4322 01f2 01       		.uleb128 0x1
 4323 01f3 12       		.uleb128 0x12
 4324 01f4 06       		.uleb128 0x6
 4325 01f5 40       		.uleb128 0x40
 4326 01f6 18       		.uleb128 0x18
 4327 01f7 9642     		.uleb128 0x2116
 4328 01f9 19       		.uleb128 0x19
 4329 01fa 01       		.uleb128 0x1
 4330 01fb 13       		.uleb128 0x13
 4331 01fc 00       		.byte	0
 4332 01fd 00       		.byte	0
 4333 01fe 20       		.uleb128 0x20
 4334 01ff 0B       		.uleb128 0xb
 4335 0200 01       		.byte	0x1
 4336 0201 55       		.uleb128 0x55
 4337 0202 17       		.uleb128 0x17
 4338 0203 00       		.byte	0
 4339 0204 00       		.byte	0
 4340 0205 21       		.uleb128 0x21
 4341 0206 2E       		.uleb128 0x2e
 4342 0207 00       		.byte	0
 4343 0208 3F       		.uleb128 0x3f
 4344 0209 19       		.uleb128 0x19
 4345 020a 03       		.uleb128 0x3
 4346 020b 0E       		.uleb128 0xe
 4347 020c 3A       		.uleb128 0x3a
 4348 020d 0B       		.uleb128 0xb
 4349 020e 3B       		.uleb128 0x3b
 4350 020f 05       		.uleb128 0x5
 4351 0210 49       		.uleb128 0x49
 4352 0211 13       		.uleb128 0x13
 4353 0212 11       		.uleb128 0x11
 4354 0213 01       		.uleb128 0x1
 4355 0214 12       		.uleb128 0x12
 4356 0215 06       		.uleb128 0x6
 4357 0216 40       		.uleb128 0x40
 4358 0217 18       		.uleb128 0x18
 4359 0218 9742     		.uleb128 0x2117
 4360 021a 19       		.uleb128 0x19
 4361 021b 00       		.byte	0
 4362 021c 00       		.byte	0
 4363 021d 22       		.uleb128 0x22
 4364 021e 34       		.uleb128 0x34
 4365 021f 00       		.byte	0
 4366 0220 03       		.uleb128 0x3
 4367 0221 0E       		.uleb128 0xe
 4368 0222 3A       		.uleb128 0x3a
 4369 0223 0B       		.uleb128 0xb
 4370 0224 3B       		.uleb128 0x3b
 4371 0225 05       		.uleb128 0x5
 4372 0226 49       		.uleb128 0x49
 4373 0227 13       		.uleb128 0x13
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 95


 4374 0228 3F       		.uleb128 0x3f
 4375 0229 19       		.uleb128 0x19
 4376 022a 3C       		.uleb128 0x3c
 4377 022b 19       		.uleb128 0x19
 4378 022c 00       		.byte	0
 4379 022d 00       		.byte	0
 4380 022e 23       		.uleb128 0x23
 4381 022f 35       		.uleb128 0x35
 4382 0230 00       		.byte	0
 4383 0231 49       		.uleb128 0x49
 4384 0232 13       		.uleb128 0x13
 4385 0233 00       		.byte	0
 4386 0234 00       		.byte	0
 4387 0235 24       		.uleb128 0x24
 4388 0236 34       		.uleb128 0x34
 4389 0237 00       		.byte	0
 4390 0238 03       		.uleb128 0x3
 4391 0239 0E       		.uleb128 0xe
 4392 023a 3A       		.uleb128 0x3a
 4393 023b 0B       		.uleb128 0xb
 4394 023c 3B       		.uleb128 0x3b
 4395 023d 0B       		.uleb128 0xb
 4396 023e 49       		.uleb128 0x49
 4397 023f 13       		.uleb128 0x13
 4398 0240 3F       		.uleb128 0x3f
 4399 0241 19       		.uleb128 0x19
 4400 0242 02       		.uleb128 0x2
 4401 0243 18       		.uleb128 0x18
 4402 0244 00       		.byte	0
 4403 0245 00       		.byte	0
 4404 0246 25       		.uleb128 0x25
 4405 0247 21       		.uleb128 0x21
 4406 0248 00       		.byte	0
 4407 0249 49       		.uleb128 0x49
 4408 024a 13       		.uleb128 0x13
 4409 024b 2F       		.uleb128 0x2f
 4410 024c 05       		.uleb128 0x5
 4411 024d 00       		.byte	0
 4412 024e 00       		.byte	0
 4413 024f 00       		.byte	0
 4414              		.section	.debug_aranges,"",%progbits
 4415 0000 C4000000 		.4byte	0xc4
 4416 0004 0200     		.2byte	0x2
 4417 0006 00000000 		.4byte	.Ldebug_info0
 4418 000a 04       		.byte	0x4
 4419 000b 00       		.byte	0
 4420 000c 0000     		.2byte	0
 4421 000e 0000     		.2byte	0
 4422 0010 00000000 		.4byte	.LFB64
 4423 0014 44000000 		.4byte	.LFE64-.LFB64
 4424 0018 00000000 		.4byte	.LFB65
 4425 001c 6C000000 		.4byte	.LFE65-.LFB65
 4426 0020 00000000 		.4byte	.LFB66
 4427 0024 32000000 		.4byte	.LFE66-.LFB66
 4428 0028 00000000 		.4byte	.LFB67
 4429 002c 20000000 		.4byte	.LFE67-.LFB67
 4430 0030 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 96


 4431 0034 40000000 		.4byte	.LFE68-.LFB68
 4432 0038 00000000 		.4byte	.LFB69
 4433 003c DC000000 		.4byte	.LFE69-.LFB69
 4434 0040 00000000 		.4byte	.LFB70
 4435 0044 1C000000 		.4byte	.LFE70-.LFB70
 4436 0048 00000000 		.4byte	.LFB71
 4437 004c 28000000 		.4byte	.LFE71-.LFB71
 4438 0050 00000000 		.4byte	.LFB72
 4439 0054 C8000000 		.4byte	.LFE72-.LFB72
 4440 0058 00000000 		.4byte	.LFB73
 4441 005c FC000000 		.4byte	.LFE73-.LFB73
 4442 0060 00000000 		.4byte	.LFB74
 4443 0064 78000000 		.4byte	.LFE74-.LFB74
 4444 0068 00000000 		.4byte	.LFB75
 4445 006c 40010000 		.4byte	.LFE75-.LFB75
 4446 0070 00000000 		.4byte	.LFB76
 4447 0074 B4000000 		.4byte	.LFE76-.LFB76
 4448 0078 00000000 		.4byte	.LFB77
 4449 007c 1C000000 		.4byte	.LFE77-.LFB77
 4450 0080 00000000 		.4byte	.LFB78
 4451 0084 28000000 		.4byte	.LFE78-.LFB78
 4452 0088 00000000 		.4byte	.LFB79
 4453 008c 30010000 		.4byte	.LFE79-.LFB79
 4454 0090 00000000 		.4byte	.LFB80
 4455 0094 38010000 		.4byte	.LFE80-.LFB80
 4456 0098 00000000 		.4byte	.LFB81
 4457 009c 44010000 		.4byte	.LFE81-.LFB81
 4458 00a0 00000000 		.4byte	.LFB82
 4459 00a4 14000000 		.4byte	.LFE82-.LFB82
 4460 00a8 00000000 		.4byte	.LFB83
 4461 00ac 1A000000 		.4byte	.LFE83-.LFB83
 4462 00b0 00000000 		.4byte	.LFB84
 4463 00b4 2A000000 		.4byte	.LFE84-.LFB84
 4464 00b8 00000000 		.4byte	.LFB85
 4465 00bc 7C020000 		.4byte	.LFE85-.LFB85
 4466 00c0 00000000 		.4byte	0
 4467 00c4 00000000 		.4byte	0
 4468              		.section	.debug_ranges,"",%progbits
 4469              	.Ldebug_ranges0:
 4470 0000 06000000 		.4byte	.LBB9
 4471 0004 F2000000 		.4byte	.LBE9
 4472 0008 F4000000 		.4byte	.LBB11
 4473 000c 06010000 		.4byte	.LBE11
 4474 0010 00000000 		.4byte	0
 4475 0014 00000000 		.4byte	0
 4476 0018 00000000 		.4byte	.LFB64
 4477 001c 44000000 		.4byte	.LFE64
 4478 0020 00000000 		.4byte	.LFB65
 4479 0024 6C000000 		.4byte	.LFE65
 4480 0028 00000000 		.4byte	.LFB66
 4481 002c 32000000 		.4byte	.LFE66
 4482 0030 00000000 		.4byte	.LFB67
 4483 0034 20000000 		.4byte	.LFE67
 4484 0038 00000000 		.4byte	.LFB68
 4485 003c 40000000 		.4byte	.LFE68
 4486 0040 00000000 		.4byte	.LFB69
 4487 0044 DC000000 		.4byte	.LFE69
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 97


 4488 0048 00000000 		.4byte	.LFB70
 4489 004c 1C000000 		.4byte	.LFE70
 4490 0050 00000000 		.4byte	.LFB71
 4491 0054 28000000 		.4byte	.LFE71
 4492 0058 00000000 		.4byte	.LFB72
 4493 005c C8000000 		.4byte	.LFE72
 4494 0060 00000000 		.4byte	.LFB73
 4495 0064 FC000000 		.4byte	.LFE73
 4496 0068 00000000 		.4byte	.LFB74
 4497 006c 78000000 		.4byte	.LFE74
 4498 0070 00000000 		.4byte	.LFB75
 4499 0074 40010000 		.4byte	.LFE75
 4500 0078 00000000 		.4byte	.LFB76
 4501 007c B4000000 		.4byte	.LFE76
 4502 0080 00000000 		.4byte	.LFB77
 4503 0084 1C000000 		.4byte	.LFE77
 4504 0088 00000000 		.4byte	.LFB78
 4505 008c 28000000 		.4byte	.LFE78
 4506 0090 00000000 		.4byte	.LFB79
 4507 0094 30010000 		.4byte	.LFE79
 4508 0098 00000000 		.4byte	.LFB80
 4509 009c 38010000 		.4byte	.LFE80
 4510 00a0 00000000 		.4byte	.LFB81
 4511 00a4 44010000 		.4byte	.LFE81
 4512 00a8 00000000 		.4byte	.LFB82
 4513 00ac 14000000 		.4byte	.LFE82
 4514 00b0 00000000 		.4byte	.LFB83
 4515 00b4 1A000000 		.4byte	.LFE83
 4516 00b8 00000000 		.4byte	.LFB84
 4517 00bc 2A000000 		.4byte	.LFE84
 4518 00c0 00000000 		.4byte	.LFB85
 4519 00c4 7C020000 		.4byte	.LFE85
 4520 00c8 00000000 		.4byte	0
 4521 00cc 00000000 		.4byte	0
 4522              		.section	.debug_line,"",%progbits
 4523              	.Ldebug_line0:
 4524 0000 1F050000 		.section	.debug_str,"MS",%progbits,1
 4524      0200EF01 
 4524      00000201 
 4524      FB0E0D00 
 4524      01010101 
 4525              	.LASF114:
 4526 0000 676D745F 		.ascii	"gmt_offset\000"
 4526      6F666673 
 4526      657400
 4527              	.LASF16:
 4528 000b 75696E74 		.ascii	"uint16\000"
 4528      313600
 4529              	.LASF56:
 4530 0012 76616C75 		.ascii	"value\000"
 4530      6500
 4531              	.LASF27:
 4532 0018 746D5F68 		.ascii	"tm_hour\000"
 4532      6F757200 
 4533              	.LASF32:
 4534 0020 746D5F79 		.ascii	"tm_yday\000"
 4534      64617900 
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 98


 4535              	.LASF4:
 4536 0028 5F5F7569 		.ascii	"__uint8_t\000"
 4536      6E74385F 
 4536      7400
 4537              	.LASF51:
 4538 0032 6C6F6E67 		.ascii	"longitude\000"
 4538      69747564 
 4538      6500
 4539              	.LASF136:
 4540 003c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4540      43313120 
 4540      352E342E 
 4540      31203230 
 4540      31363036 
 4541 006f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4541      20726576 
 4541      6973696F 
 4541      6E203233 
 4541      37373135 
 4542 00a2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4542      66756E63 
 4542      74696F6E 
 4542      2D736563 
 4542      74696F6E 
 4543              	.LASF117:
 4544 00ca 6D6F6465 		.ascii	"modem_wakeup\000"
 4544      6D5F7761 
 4544      6B657570 
 4544      00
 4545              	.LASF10:
 4546 00d7 6C6F6E67 		.ascii	"long long unsigned int\000"
 4546      206C6F6E 
 4546      6720756E 
 4546      7369676E 
 4546      65642069 
 4547              	.LASF123:
 4548 00ee 6D6F6465 		.ascii	"modem_state\000"
 4548      6D5F7374 
 4548      61746500 
 4549              	.LASF88:
 4550 00fa 74657374 		.ascii	"test\000"
 4550      00
 4551              	.LASF122:
 4552 00ff 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4552      52784275 
 4552      66666572 
 4552      00
 4553              	.LASF125:
 4554 010c 6D6F6465 		.ascii	"modem_stats\000"
 4554      6D5F7374 
 4554      61747300 
 4555              	.LASF9:
 4556 0118 6C6F6E67 		.ascii	"long long int\000"
 4556      206C6F6E 
 4556      6720696E 
 4556      7400
 4557              	.LASF0:
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 99


 4558 0126 7369676E 		.ascii	"signed char\000"
 4558      65642063 
 4558      68617200 
 4559              	.LASF44:
 4560 0132 65636E6F 		.ascii	"ecno\000"
 4560      00
 4561              	.LASF47:
 4562 0137 74696D65 		.ascii	"time_to_network_connect\000"
 4562      5F746F5F 
 4562      6E657477 
 4562      6F726B5F 
 4562      636F6E6E 
 4563              	.LASF130:
 4564 014f 68747470 		.ascii	"http_body\000"
 4564      5F626F64 
 4564      7900
 4565              	.LASF99:
 4566 0159 7365745F 		.ascii	"set_up_internet_connection\000"
 4566      75705F69 
 4566      6E746572 
 4566      6E65745F 
 4566      636F6E6E 
 4567              	.LASF113:
 4568 0174 7365636F 		.ascii	"second\000"
 4568      6E6400
 4569              	.LASF109:
 4570 017b 79656172 		.ascii	"year\000"
 4570      00
 4571              	.LASF6:
 4572 0180 6C6F6E67 		.ascii	"long int\000"
 4572      20696E74 
 4572      00
 4573              	.LASF115:
 4574 0189 6D6F6465 		.ascii	"modem_get_state\000"
 4574      6D5F6765 
 4574      745F7374 
 4574      61746500 
 4575              	.LASF52:
 4576 0199 616C7469 		.ascii	"altitude\000"
 4576      74756465 
 4576      00
 4577              	.LASF15:
 4578 01a2 75696E74 		.ascii	"uint8\000"
 4578      3800
 4579              	.LASF62:
 4580 01a8 6E6F6465 		.ascii	"node_id\000"
 4580      5F696400 
 4581              	.LASF21:
 4582 01b0 646F7562 		.ascii	"double\000"
 4582      6C6500
 4583              	.LASF19:
 4584 01b7 696E7433 		.ascii	"int32\000"
 4584      3200
 4585              	.LASF105:
 4586 01bd 6D6F6465 		.ascii	"modem_configure_settings\000"
 4586      6D5F636F 
 4586      6E666967 
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 100


 4586      7572655F 
 4586      73657474 
 4587              	.LASF89:
 4588 01d6 6E657477 		.ascii	"network_time\000"
 4588      6F726B5F 
 4588      74696D65 
 4588      00
 4589              	.LASF3:
 4590 01e3 73686F72 		.ascii	"short unsigned int\000"
 4590      7420756E 
 4590      7369676E 
 4590      65642069 
 4590      6E7400
 4591              	.LASF17:
 4592 01f6 75696E74 		.ascii	"uint32\000"
 4592      333200
 4593              	.LASF85:
 4594 01fd 696E7465 		.ascii	"interval\000"
 4594      7276616C 
 4594      00
 4595              	.LASF7:
 4596 0206 5F5F7569 		.ascii	"__uint32_t\000"
 4596      6E743332 
 4596      5F7400
 4597              	.LASF107:
 4598 0211 6D6F6465 		.ascii	"modem_get_network_time\000"
 4598      6D5F6765 
 4598      745F6E65 
 4598      74776F72 
 4598      6B5F7469 
 4599              	.LASF29:
 4600 0228 746D5F6D 		.ascii	"tm_mon\000"
 4600      6F6E00
 4601              	.LASF66:
 4602 022f 65705F70 		.ascii	"ep_pswd\000"
 4602      73776400 
 4603              	.LASF116:
 4604 0237 6D6F6465 		.ascii	"modem_sleep\000"
 4604      6D5F736C 
 4604      65657000 
 4605              	.LASF30:
 4606 0243 746D5F79 		.ascii	"tm_year\000"
 4606      65617200 
 4607              	.LASF110:
 4608 024b 6D6F6E74 		.ascii	"month\000"
 4608      6800
 4609              	.LASF71:
 4610 0251 70696E73 		.ascii	"pins_configure_active\000"
 4610      5F636F6E 
 4610      66696775 
 4610      72655F61 
 4610      63746976 
 4611              	.LASF58:
 4612 0267 6B65795F 		.ascii	"key_value_t\000"
 4612      76616C75 
 4612      655F7400 
 4613              	.LASF76:
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 101


 4614 0273 7077725F 		.ascii	"pwr_check\000"
 4614      63686563 
 4614      6B00
 4615              	.LASF8:
 4616 027d 6C6F6E67 		.ascii	"long unsigned int\000"
 4616      20756E73 
 4616      69676E65 
 4616      6420696E 
 4616      7400
 4617              	.LASF91:
 4618 028f 65787472 		.ascii	"extract_string\000"
 4618      6163745F 
 4618      73747269 
 4618      6E6700
 4619              	.LASF81:
 4620 029e 74696D65 		.ascii	"timeout\000"
 4620      6F757400 
 4621              	.LASF104:
 4622 02a6 6765745F 		.ascii	"get_cell_network_stats\000"
 4622      63656C6C 
 4622      5F6E6574 
 4622      776F726B 
 4622      5F737461 
 4623              	.LASF53:
 4624 02bd 74696D65 		.ascii	"time_to_lock\000"
 4624      5F746F5F 
 4624      6C6F636B 
 4624      00
 4625              	.LASF128:
 4626 02ca 64617461 		.ascii	"data\000"
 4626      00
 4627              	.LASF65:
 4628 02cf 65705F75 		.ascii	"ep_user\000"
 4628      73657200 
 4629              	.LASF64:
 4630 02d7 65705F70 		.ascii	"ep_port\000"
 4630      6F727400 
 4631              	.LASF33:
 4632 02df 746D5F69 		.ascii	"tm_isdst\000"
 4632      73647374 
 4632      00
 4633              	.LASF59:
 4634 02e8 6D6F6465 		.ascii	"modem_info\000"
 4634      6D5F696E 
 4634      666F00
 4635              	.LASF63:
 4636 02f3 65705F68 		.ascii	"ep_host\000"
 4636      6F737400 
 4637              	.LASF60:
 4638 02fb 63686970 		.ascii	"chip_uniqueId\000"
 4638      5F756E69 
 4638      71756549 
 4638      6400
 4639              	.LASF86:
 4640 0309 6D6F6465 		.ascii	"modem_power_up\000"
 4640      6D5F706F 
 4640      7765725F 
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 102


 4640      757000
 4641              	.LASF137:
 4642 0318 6D6F6465 		.ascii	"modem.c\000"
 4642      6D2E6300 
 4643              	.LASF93:
 4644 0320 62656769 		.ascii	"beginMarker\000"
 4644      6E4D6172 
 4644      6B657200 
 4645              	.LASF95:
 4646 032c 74617267 		.ascii	"target\000"
 4646      657400
 4647              	.LASF48:
 4648 0333 74696D65 		.ascii	"time_to_acquire_ip\000"
 4648      5F746F5F 
 4648      61637175 
 4648      6972655F 
 4648      697000
 4649              	.LASF94:
 4650 0346 656E644D 		.ascii	"endMarker\000"
 4650      61726B65 
 4650      7200
 4651              	.LASF2:
 4652 0350 73686F72 		.ascii	"short int\000"
 4652      7420696E 
 4652      7400
 4653              	.LASF108:
 4654 035a 65706F63 		.ascii	"epoch_time\000"
 4654      685F7469 
 4654      6D6500
 4655              	.LASF5:
 4656 0365 5F5F696E 		.ascii	"__int32_t\000"
 4656      7433325F 
 4656      7400
 4657              	.LASF92:
 4658 036f 66726F6D 		.ascii	"from\000"
 4658      00
 4659              	.LASF98:
 4660 0374 63726567 		.ascii	"creg\000"
 4660      00
 4661              	.LASF82:
 4662 0379 61745F61 		.ascii	"at_attempt\000"
 4662      7474656D 
 4662      707400
 4663              	.LASF90:
 4664 0384 61745F77 		.ascii	"at_write_command\000"
 4664      72697465 
 4664      5F636F6D 
 4664      6D616E64 
 4664      00
 4665              	.LASF61:
 4666 0395 7379735F 		.ascii	"sys_info_t\000"
 4666      696E666F 
 4666      5F7400
 4667              	.LASF126:
 4668 03a0 64617461 		.ascii	"dataPointsInStack\000"
 4668      506F696E 
 4668      7473496E 
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 103


 4668      53746163 
 4668      6B00
 4669              	.LASF26:
 4670 03b2 746D5F6D 		.ascii	"tm_min\000"
 4670      696E00
 4671              	.LASF24:
 4672 03b9 73697A65 		.ascii	"sizetype\000"
 4672      74797065 
 4672      00
 4673              	.LASF97:
 4674 03c2 69735F63 		.ascii	"is_connected_to_cell_network\000"
 4674      6F6E6E65 
 4674      63746564 
 4674      5F746F5F 
 4674      63656C6C 
 4675              	.LASF134:
 4676 03df 75617274 		.ascii	"uart_received_string\000"
 4676      5F726563 
 4676      65697665 
 4676      645F7374 
 4676      72696E67 
 4677              	.LASF50:
 4678 03f4 6C617469 		.ascii	"latitude\000"
 4678      74756465 
 4678      00
 4679              	.LASF34:
 4680 03fd 74657374 		.ascii	"test_name\000"
 4680      5F6E616D 
 4680      6500
 4681              	.LASF87:
 4682 0407 6D6F6465 		.ascii	"modem_test\000"
 4682      6D5F7465 
 4682      737400
 4683              	.LASF121:
 4684 0412 6D617463 		.ascii	"match\000"
 4684      6800
 4685              	.LASF111:
 4686 0418 686F7572 		.ascii	"hour\000"
 4686      00
 4687              	.LASF79:
 4688 041d 636F6D6D 		.ascii	"commands\000"
 4688      616E6473 
 4688      00
 4689              	.LASF83:
 4690 0426 636F6D70 		.ascii	"compare_location\000"
 4690      6172655F 
 4690      6C6F6361 
 4690      74696F6E 
 4690      00
 4691              	.LASF20:
 4692 0437 666C6F61 		.ascii	"float\000"
 4692      7400
 4693              	.LASF69:
 4694 043d 6D6F6465 		.ascii	"modem_initialize\000"
 4694      6D5F696E 
 4694      69746961 
 4694      6C697A65 
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 104


 4694      00
 4695              	.LASF103:
 4696 044e 746F6B65 		.ascii	"token\000"
 4696      6E00
 4697              	.LASF138:
 4698 0454 433A5C55 		.ascii	"C:\\Users\\hail\\Desktop\\Brooke Research\\notoriOS"
 4698      73657273 
 4698      5C686169 
 4698      6C5C4465 
 4698      736B746F 
 4699 0482 5C6E6F74 		.ascii	"\\notoriOS\\notoriOS.cydsn\000"
 4699      6F72694F 
 4699      535C6E6F 
 4699      746F7269 
 4699      4F532E63 
 4700              	.LASF100:
 4701 049b 6973725F 		.ascii	"isr_telit_rx\000"
 4701      74656C69 
 4701      745F7278 
 4701      00
 4702              	.LASF13:
 4703 04a8 696E7433 		.ascii	"int32_t\000"
 4703      325F7400 
 4704              	.LASF1:
 4705 04b0 756E7369 		.ascii	"unsigned char\000"
 4705      676E6564 
 4705      20636861 
 4705      7200
 4706              	.LASF133:
 4707 04be 73797374 		.ascii	"system_settings\000"
 4707      656D5F73 
 4707      65747469 
 4707      6E677300 
 4708              	.LASF84:
 4709 04ce 64656C61 		.ascii	"delay\000"
 4709      7900
 4710              	.LASF45:
 4711 04d4 72737271 		.ascii	"rsrq\000"
 4711      00
 4712              	.LASF102:
 4713 04d9 63657371 		.ascii	"cesq\000"
 4713      00
 4714              	.LASF43:
 4715 04de 72736370 		.ascii	"rscp\000"
 4715      00
 4716              	.LASF118:
 4717 04e3 6D6F6465 		.ascii	"modem_get_gps_coordinates\000"
 4717      6D5F6765 
 4717      745F6770 
 4717      735F636F 
 4717      6F726469 
 4718              	.LASF37:
 4719 04fd 74657374 		.ascii	"test_t\000"
 4719      5F7400
 4720              	.LASF132:
 4721 0504 73797374 		.ascii	"system_info\000"
 4721      656D5F69 
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 105


 4721      6E666F00 
 4722              	.LASF40:
 4723 0510 696D6569 		.ascii	"imei\000"
 4723      00
 4724              	.LASF36:
 4725 0515 72656173 		.ascii	"reason\000"
 4725      6F6E00
 4726              	.LASF46:
 4727 051c 72737270 		.ascii	"rsrp\000"
 4727      00
 4728              	.LASF49:
 4729 0521 6D6F6465 		.ascii	"modem_stats_t\000"
 4729      6D5F7374 
 4729      6174735F 
 4729      7400
 4730              	.LASF78:
 4731 052f 75617274 		.ascii	"uart_string_reset\000"
 4731      5F737472 
 4731      696E675F 
 4731      72657365 
 4731      7400
 4732              	.LASF31:
 4733 0541 746D5F77 		.ascii	"tm_wday\000"
 4733      64617900 
 4734              	.LASF77:
 4735 0549 6D6F6465 		.ascii	"modem_soft_power_cycle\000"
 4735      6D5F736F 
 4735      66745F70 
 4735      6F776572 
 4735      5F637963 
 4736              	.LASF23:
 4737 0560 6C6F6E67 		.ascii	"long double\000"
 4737      20646F75 
 4737      626C6500 
 4738              	.LASF22:
 4739 056c 63686172 		.ascii	"char\000"
 4739      00
 4740              	.LASF96:
 4741 0571 6D6F6465 		.ascii	"modem_process_tasks\000"
 4741      6D5F7072 
 4741      6F636573 
 4741      735F7461 
 4741      736B7300 
 4742              	.LASF11:
 4743 0585 756E7369 		.ascii	"unsigned int\000"
 4743      676E6564 
 4743      20696E74 
 4743      00
 4744              	.LASF106:
 4745 0592 4346554E 		.ascii	"CFUN\000"
 4745      00
 4746              	.LASF39:
 4747 0597 6D6F6465 		.ascii	"model_id\000"
 4747      6C5F6964 
 4747      00
 4748              	.LASF131:
 4749 05a0 68747470 		.ascii	"http_route\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 106


 4749      5F726F75 
 4749      746500
 4750              	.LASF41:
 4751 05ab 6D6F6465 		.ascii	"modem_info_t\000"
 4751      6D5F696E 
 4751      666F5F74 
 4751      00
 4752              	.LASF55:
 4753 05b8 6770735F 		.ascii	"gps_t\000"
 4753      7400
 4754              	.LASF135:
 4755 05be 75617274 		.ascii	"uart_string_index\000"
 4755      5F737472 
 4755      696E675F 
 4755      696E6465 
 4755      7800
 4756              	.LASF101:
 4757 05d0 69735F63 		.ascii	"is_connected_to_internet\000"
 4757      6F6E6E65 
 4757      63746564 
 4757      5F746F5F 
 4757      696E7465 
 4758              	.LASF124:
 4759 05e9 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4759      6D5F7374 
 4759      6172745F 
 4759      74696D65 
 4759      5F737461 
 4760              	.LASF120:
 4761 0600 6770735F 		.ascii	"gps_status\000"
 4761      73746174 
 4761      757300
 4762              	.LASF70:
 4763 060b 70696E73 		.ascii	"pins_configure_inactive\000"
 4763      5F636F6E 
 4763      66696775 
 4763      72655F69 
 4763      6E616374 
 4764              	.LASF38:
 4765 0623 73696D5F 		.ascii	"sim_id\000"
 4765      696400
 4766              	.LASF28:
 4767 062a 746D5F6D 		.ascii	"tm_mday\000"
 4767      64617900 
 4768              	.LASF54:
 4769 0632 76616C69 		.ascii	"valid\000"
 4769      6400
 4770              	.LASF112:
 4771 0638 6D696E75 		.ascii	"minute\000"
 4771      746500
 4772              	.LASF14:
 4773 063f 75696E74 		.ascii	"uint32_t\000"
 4773      33325F74 
 4773      00
 4774              	.LASF25:
 4775 0648 746D5F73 		.ascii	"tm_sec\000"
 4775      656300
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 107


 4776              	.LASF35:
 4777 064f 73746174 		.ascii	"status\000"
 4777      757300
 4778              	.LASF127:
 4779 0656 64617461 		.ascii	"dataPointsInStackDesired\000"
 4779      506F696E 
 4779      7473496E 
 4779      53746163 
 4779      6B446573 
 4780              	.LASF68:
 4781 066f 7379735F 		.ascii	"sys_settings_t\000"
 4781      73657474 
 4781      696E6773 
 4781      5F7400
 4782              	.LASF12:
 4783 067e 75696E74 		.ascii	"uint8_t\000"
 4783      385F7400 
 4784              	.LASF67:
 4785 0686 65705F64 		.ascii	"ep_database\000"
 4785      61746162 
 4785      61736500 
 4786              	.LASF18:
 4787 0692 696E7431 		.ascii	"int16\000"
 4787      3600
 4788              	.LASF73:
 4789 0698 61745F72 		.ascii	"at_ready\000"
 4789      65616479 
 4789      00
 4790              	.LASF74:
 4791 06a1 61747465 		.ascii	"attempts\000"
 4791      6D707473 
 4791      00
 4792              	.LASF75:
 4793 06aa 626F6F74 		.ascii	"boot_time\000"
 4793      5F74696D 
 4793      6500
 4794              	.LASF80:
 4795 06b4 65787065 		.ascii	"expected_response\000"
 4795      63746564 
 4795      5F726573 
 4795      706F6E73 
 4795      6500
 4796              	.LASF42:
 4797 06c6 72737369 		.ascii	"rssi\000"
 4797      00
 4798              	.LASF119:
 4799 06cb 6C6F636B 		.ascii	"lock_time\000"
 4799      5F74696D 
 4799      6500
 4800              	.LASF129:
 4801 06d5 68747470 		.ascii	"http_request\000"
 4801      5F726571 
 4801      75657374 
 4801      00
 4802              	.LASF72:
 4803 06e2 6D6F6465 		.ascii	"modem_power_down\000"
 4803      6D5F706F 
ARM GAS  C:\Users\hail\AppData\Local\Temp\cc1P7c86.s 			page 108


 4803      7765725F 
 4803      646F776E 
 4803      00
 4804              	.LASF57:
 4805 06f3 74696D65 		.ascii	"timeStamp\000"
 4805      5374616D 
 4805      7000
 4806              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
