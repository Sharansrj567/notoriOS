ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RTC_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,6,4
  28              		.comm	gps_data,16,4
  29              		.syntax unified
  30              		.global _printf_float
  31              		.thumb
  32              		.syntax unified
  33              		.comm	http_request,10000,4
  34              		.comm	http_body,10000,4
  35              		.comm	http_route,200,4
  36              		.comm	system_info,28,4
  37              		.comm	system_settings,104,4
  38              		.comm	alarmMeasure,6,4
  39              		.comm	timeToMeasure,1,1
  40              		.comm	alarmSync,6,4
  41              		.comm	timeToSync,1,1
  42              		.comm	timeToSycnRemoteParams,1,1
  43              		.comm	hey,1,1
  44              		.section	.text.RTC_EverySecondHandler,"ax",%progbits
  45              		.align	2
  46              		.thumb
  47              		.thumb_func
  48              		.type	RTC_EverySecondHandler, %function
  49              	RTC_EverySecondHandler:
  50              	.LFB64:
  51              		.file 1 "Generated_Source\\PSoC5\\RTC_INT.c"
   1:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/RTC_INT.c **** * File Name: RTC_INT.c
   3:Generated_Source\PSoC5/RTC_INT.c **** * Version 2.0
   4:Generated_Source\PSoC5/RTC_INT.c **** *
   5:Generated_Source\PSoC5/RTC_INT.c **** * Description:
   6:Generated_Source\PSoC5/RTC_INT.c **** *  This file contains the Interrupt Service Routine (ISR) for the RTC component.
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 2


   7:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt routine has entry pointes to overflow on time or date.
   8:Generated_Source\PSoC5/RTC_INT.c **** *
   9:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  10:Generated_Source\PSoC5/RTC_INT.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/RTC_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/RTC_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/RTC_INT.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/RTC_INT.c **** 
  16:Generated_Source\PSoC5/RTC_INT.c **** #include "RTC.h"
  17:Generated_Source\PSoC5/RTC_INT.c **** #include "CyLib.h"
  18:Generated_Source\PSoC5/RTC_INT.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/RTC_INT.c **** 
  20:Generated_Source\PSoC5/RTC_INT.c **** /* Function Prototypes */
  21:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void);
  22:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void);
  23:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void);
  24:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void);
  25:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void);
  26:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void);
  27:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void);
  28:Generated_Source\PSoC5/RTC_INT.c **** 
  29:Generated_Source\PSoC5/RTC_INT.c **** 
  30:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  31:Generated_Source\PSoC5/RTC_INT.c **** *  Place your includes, defines and code here
  32:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  33:Generated_Source\PSoC5/RTC_INT.c **** /* `#START RTC_ISR_DEFINITION` */
  34:Generated_Source\PSoC5/RTC_INT.c **** 
  35:Generated_Source\PSoC5/RTC_INT.c **** #include "notoriOS.h"
  36:Generated_Source\PSoC5/RTC_INT.c **** 
  37:Generated_Source\PSoC5/RTC_INT.c **** /* `#END` */
  38:Generated_Source\PSoC5/RTC_INT.c **** 
  39:Generated_Source\PSoC5/RTC_INT.c **** 
  40:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EverySecondHandler
  42:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  43:Generated_Source\PSoC5/RTC_INT.c **** *
  44:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  45:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every second.
  46:Generated_Source\PSoC5/RTC_INT.c **** *
  47:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  48:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  49:Generated_Source\PSoC5/RTC_INT.c **** *
  50:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  51:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  52:Generated_Source\PSoC5/RTC_INT.c **** *
  53:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  54:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void)
  55:Generated_Source\PSoC5/RTC_INT.c **** {
  52              		.loc 1 55 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 3


  60 0002 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  56:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every second handler code here. */
  57:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_SECOND_HANDLER_CODE` */
  58:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_SECOND);
  62              		.loc 1 58 0
  63 0004 0020     		movs	r0, #0
  64 0006 FFF7FEFF 		bl	AyoItsTime
  59:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  60:Generated_Source\PSoC5/RTC_INT.c ****     
  61:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_SECOND_HANDLER_CALLBACK
  62:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler_Callback();
  63:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_SECOND_HANDLER_CALLBACK */
  64:Generated_Source\PSoC5/RTC_INT.c **** }
  65              		.loc 1 64 0
  66 000a 00BF     		nop
  67 000c 80BD     		pop	{r7, pc}
  68              		.cfi_endproc
  69              	.LFE64:
  70              		.size	RTC_EverySecondHandler, .-RTC_EverySecondHandler
  71 000e 00BF     		.section	.text.RTC_EveryMinuteHandler,"ax",%progbits
  72              		.align	2
  73              		.thumb
  74              		.thumb_func
  75              		.type	RTC_EveryMinuteHandler, %function
  76              	RTC_EveryMinuteHandler:
  77              	.LFB65:
  65:Generated_Source\PSoC5/RTC_INT.c **** 
  66:Generated_Source\PSoC5/RTC_INT.c **** 
  67:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  68:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMinuteHandler
  69:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  70:Generated_Source\PSoC5/RTC_INT.c **** *
  71:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  72:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every minute.
  73:Generated_Source\PSoC5/RTC_INT.c **** *
  74:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  75:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  76:Generated_Source\PSoC5/RTC_INT.c **** *
  77:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  78:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  79:Generated_Source\PSoC5/RTC_INT.c **** *
  80:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  81:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void)
  82:Generated_Source\PSoC5/RTC_INT.c **** {
  78              		.loc 1 82 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82 0000 80B5     		push	{r7, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 7, -8
  85              		.cfi_offset 14, -4
  86 0002 00AF     		add	r7, sp, #0
  87              		.cfi_def_cfa_register 7
  83:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every minute handler code here. */
  84:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MINUTE_HANDLER_CODE` */
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 4


  85:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_MINUTE);
  88              		.loc 1 85 0
  89 0004 0120     		movs	r0, #1
  90 0006 FFF7FEFF 		bl	AyoItsTime
  86:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  87:Generated_Source\PSoC5/RTC_INT.c **** 
  88:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MINUTE_HANDLER_CALLBACK
  89:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMinuteHandler_Callback();
  90:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MINUTE_HANDLER_CALLBACK */    
  91:Generated_Source\PSoC5/RTC_INT.c **** }
  91              		.loc 1 91 0
  92 000a 00BF     		nop
  93 000c 80BD     		pop	{r7, pc}
  94              		.cfi_endproc
  95              	.LFE65:
  96              		.size	RTC_EveryMinuteHandler, .-RTC_EveryMinuteHandler
  97 000e 00BF     		.section	.text.RTC_EveryHourHandler,"ax",%progbits
  98              		.align	2
  99              		.thumb
 100              		.thumb_func
 101              		.type	RTC_EveryHourHandler, %function
 102              	RTC_EveryHourHandler:
 103              	.LFB66:
  92:Generated_Source\PSoC5/RTC_INT.c **** 
  93:Generated_Source\PSoC5/RTC_INT.c **** 
  94:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  95:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryHourHandler
  96:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  97:Generated_Source\PSoC5/RTC_INT.c **** *
  98:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  99:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every hour.
 100:Generated_Source\PSoC5/RTC_INT.c **** *
 101:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 102:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 103:Generated_Source\PSoC5/RTC_INT.c **** *
 104:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 105:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 106:Generated_Source\PSoC5/RTC_INT.c **** *
 107:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 108:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void)
 109:Generated_Source\PSoC5/RTC_INT.c **** {
 104              		.loc 1 109 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 1, uses_anonymous_args = 0
 108 0000 80B5     		push	{r7, lr}
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 7, -8
 111              		.cfi_offset 14, -4
 112 0002 00AF     		add	r7, sp, #0
 113              		.cfi_def_cfa_register 7
 110:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every hour handler code here. */
 111:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_HOUR_HANDLER_CODE` */
 112:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_HOUR);
 114              		.loc 1 112 0
 115 0004 0220     		movs	r0, #2
 116 0006 FFF7FEFF 		bl	AyoItsTime
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 5


 113:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 114:Generated_Source\PSoC5/RTC_INT.c ****     
 115:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_HOUR_HANDLER_CALLBACK
 116:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryHourHandler_Callback();
 117:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_HOUR_HANDLER_CALLBACK */
 118:Generated_Source\PSoC5/RTC_INT.c **** }
 117              		.loc 1 118 0
 118 000a 00BF     		nop
 119 000c 80BD     		pop	{r7, pc}
 120              		.cfi_endproc
 121              	.LFE66:
 122              		.size	RTC_EveryHourHandler, .-RTC_EveryHourHandler
 123 000e 00BF     		.section	.text.RTC_EveryDayHandler,"ax",%progbits
 124              		.align	2
 125              		.thumb
 126              		.thumb_func
 127              		.type	RTC_EveryDayHandler, %function
 128              	RTC_EveryDayHandler:
 129              	.LFB67:
 119:Generated_Source\PSoC5/RTC_INT.c **** 
 120:Generated_Source\PSoC5/RTC_INT.c **** 
 121:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 122:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryDayHandler
 123:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 124:Generated_Source\PSoC5/RTC_INT.c **** *
 125:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 126:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every day.
 127:Generated_Source\PSoC5/RTC_INT.c **** *
 128:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 129:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 130:Generated_Source\PSoC5/RTC_INT.c **** *
 131:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 132:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 133:Generated_Source\PSoC5/RTC_INT.c **** *
 134:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 135:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void)
 136:Generated_Source\PSoC5/RTC_INT.c **** {
 130              		.loc 1 136 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134 0000 80B5     		push	{r7, lr}
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 138 0002 00AF     		add	r7, sp, #0
 139              		.cfi_def_cfa_register 7
 137:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your everyday handler code here. */
 138:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_DAY_HANDLER_CODE` */
 139:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_DAY);
 140              		.loc 1 139 0
 141 0004 0320     		movs	r0, #3
 142 0006 FFF7FEFF 		bl	AyoItsTime
 140:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 141:Generated_Source\PSoC5/RTC_INT.c ****     
 142:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_DAY_HANDLER_CALLBACK
 143:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryDayHandler_Callback();
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 6


 144:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_DAY_HANDLER_CALLBACK */
 145:Generated_Source\PSoC5/RTC_INT.c **** }
 143              		.loc 1 145 0
 144 000a 00BF     		nop
 145 000c 80BD     		pop	{r7, pc}
 146              		.cfi_endproc
 147              	.LFE67:
 148              		.size	RTC_EveryDayHandler, .-RTC_EveryDayHandler
 149 000e 00BF     		.section	.text.RTC_EveryWeekHandler,"ax",%progbits
 150              		.align	2
 151              		.thumb
 152              		.thumb_func
 153              		.type	RTC_EveryWeekHandler, %function
 154              	RTC_EveryWeekHandler:
 155              	.LFB68:
 146:Generated_Source\PSoC5/RTC_INT.c **** 
 147:Generated_Source\PSoC5/RTC_INT.c **** 
 148:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 149:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryWeekHandler
 150:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 151:Generated_Source\PSoC5/RTC_INT.c **** *
 152:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 153:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every week.
 154:Generated_Source\PSoC5/RTC_INT.c **** *
 155:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 156:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 157:Generated_Source\PSoC5/RTC_INT.c **** *
 158:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 159:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 160:Generated_Source\PSoC5/RTC_INT.c **** *
 161:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 162:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void)
 163:Generated_Source\PSoC5/RTC_INT.c **** {
 156              		.loc 1 163 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 1, uses_anonymous_args = 0
 160 0000 80B5     		push	{r7, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 7, -8
 163              		.cfi_offset 14, -4
 164 0002 00AF     		add	r7, sp, #0
 165              		.cfi_def_cfa_register 7
 164:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every week handler code here. */
 165:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_WEEK_HANDLER_CODE` */
 166:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_WEEK);
 166              		.loc 1 166 0
 167 0004 0420     		movs	r0, #4
 168 0006 FFF7FEFF 		bl	AyoItsTime
 167:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 168:Generated_Source\PSoC5/RTC_INT.c **** 
 169:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_WEEK_HANDLER_CALLBACK
 170:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryWeekHandler_Callback();
 171:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_WEEK_HANDLER_CALLBACK */
 172:Generated_Source\PSoC5/RTC_INT.c **** }
 169              		.loc 1 172 0
 170 000a 00BF     		nop
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 7


 171 000c 80BD     		pop	{r7, pc}
 172              		.cfi_endproc
 173              	.LFE68:
 174              		.size	RTC_EveryWeekHandler, .-RTC_EveryWeekHandler
 175 000e 00BF     		.section	.text.RTC_EveryMonthHandler,"ax",%progbits
 176              		.align	2
 177              		.thumb
 178              		.thumb_func
 179              		.type	RTC_EveryMonthHandler, %function
 180              	RTC_EveryMonthHandler:
 181              	.LFB69:
 173:Generated_Source\PSoC5/RTC_INT.c **** 
 174:Generated_Source\PSoC5/RTC_INT.c **** 
 175:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMonthHandler
 177:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 178:Generated_Source\PSoC5/RTC_INT.c **** *
 179:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 180:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every month.
 181:Generated_Source\PSoC5/RTC_INT.c **** *
 182:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 183:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 184:Generated_Source\PSoC5/RTC_INT.c **** *
 185:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 186:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 187:Generated_Source\PSoC5/RTC_INT.c **** *
 188:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 189:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void)
 190:Generated_Source\PSoC5/RTC_INT.c **** {
 182              		.loc 1 190 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186 0000 80B5     		push	{r7, lr}
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 7, -8
 189              		.cfi_offset 14, -4
 190 0002 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
 191:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every month handler code here. */
 192:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MONTH_HANDLER_CODE` */
 193:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_MONTH);
 192              		.loc 1 193 0
 193 0004 0520     		movs	r0, #5
 194 0006 FFF7FEFF 		bl	AyoItsTime
 194:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 195:Generated_Source\PSoC5/RTC_INT.c ****     
 196:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MONTH_HANDLER_CALLBACK
 197:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMonthHandler_Callback();
 198:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MONTH_HANDLER_CALLBACK */
 199:Generated_Source\PSoC5/RTC_INT.c **** }
 195              		.loc 1 199 0
 196 000a 00BF     		nop
 197 000c 80BD     		pop	{r7, pc}
 198              		.cfi_endproc
 199              	.LFE69:
 200              		.size	RTC_EveryMonthHandler, .-RTC_EveryMonthHandler
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 8


 201 000e 00BF     		.section	.text.RTC_EveryYearHandler,"ax",%progbits
 202              		.align	2
 203              		.thumb
 204              		.thumb_func
 205              		.type	RTC_EveryYearHandler, %function
 206              	RTC_EveryYearHandler:
 207              	.LFB70:
 200:Generated_Source\PSoC5/RTC_INT.c **** 
 201:Generated_Source\PSoC5/RTC_INT.c **** 
 202:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 203:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryYearHandler
 204:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 205:Generated_Source\PSoC5/RTC_INT.c **** *
 206:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 207:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every year.
 208:Generated_Source\PSoC5/RTC_INT.c **** *
 209:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 210:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 211:Generated_Source\PSoC5/RTC_INT.c **** *
 212:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 213:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 214:Generated_Source\PSoC5/RTC_INT.c **** *
 215:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 216:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void)
 217:Generated_Source\PSoC5/RTC_INT.c **** {
 208              		.loc 1 217 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 1, uses_anonymous_args = 0
 212 0000 80B5     		push	{r7, lr}
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 7, -8
 215              		.cfi_offset 14, -4
 216 0002 00AF     		add	r7, sp, #0
 217              		.cfi_def_cfa_register 7
 218:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every year handler code here. */
 219:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_YEAR_HANDLER_CODE` */
 220:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_YEAR);
 218              		.loc 1 220 0
 219 0004 0620     		movs	r0, #6
 220 0006 FFF7FEFF 		bl	AyoItsTime
 221:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 222:Generated_Source\PSoC5/RTC_INT.c **** 
 223:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_YEAR_HANDLER_CALLBACK
 224:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryYearHandler_Callback();
 225:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_YEAR_HANDLER_CALLBACK */    
 226:Generated_Source\PSoC5/RTC_INT.c **** }
 221              		.loc 1 226 0
 222 000a 00BF     		nop
 223 000c 80BD     		pop	{r7, pc}
 224              		.cfi_endproc
 225              	.LFE70:
 226              		.size	RTC_EveryYearHandler, .-RTC_EveryYearHandler
 227 000e 00BF     		.section	.text.RTC_ISR,"ax",%progbits
 228              		.align	2
 229              		.global	RTC_ISR
 230              		.thumb
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 9


 231              		.thumb_func
 232              		.type	RTC_ISR, %function
 233              	RTC_ISR:
 234              	.LFB71:
 227:Generated_Source\PSoC5/RTC_INT.c **** 
 228:Generated_Source\PSoC5/RTC_INT.c **** 
 229:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/RTC_INT.c **** * Function Name: RTC_ISR
 231:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 232:Generated_Source\PSoC5/RTC_INT.c **** *
 233:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 234:Generated_Source\PSoC5/RTC_INT.c **** *  This ISR is executed on 1PPS (one pulse per second) event.
 235:Generated_Source\PSoC5/RTC_INT.c **** *  Global interrupt must be enabled to invoke this ISR.
 236:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt trigs every second.
 237:Generated_Source\PSoC5/RTC_INT.c **** *
 238:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 239:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 240:Generated_Source\PSoC5/RTC_INT.c **** *
 241:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 242:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 243:Generated_Source\PSoC5/RTC_INT.c **** *
 244:Generated_Source\PSoC5/RTC_INT.c **** * Global variables:
 245:Generated_Source\PSoC5/RTC_INT.c **** * RTC_currentTimeDate, RTC_dstTimeDateStart,
 246:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStop, RTC_dstTimeDateStart,
 247:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCfgTimeDate, RTC_statusDateTime,
 248:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStartStatus,
 249:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStopStatus, RTC_alarmCurStatus: global
 250:Generated_Source\PSoC5/RTC_INT.c **** *  variables are used for the time/date, DST and alarm update procedure.
 251:Generated_Source\PSoC5/RTC_INT.c **** *
 252:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStart and RTC_currentTimeDate:
 253:Generated_Source\PSoC5/RTC_INT.c **** *  are modified with the updated values.
 254:Generated_Source\PSoC5/RTC_INT.c **** *
 255:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_statusDateTime, RTC_dstStartStatus,
 256:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStopStatus,
 257:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCurStatus: global variables could be modified while
 258:Generated_Source\PSoC5/RTC_INT.c **** *  current time/date is updated.
 259:Generated_Source\PSoC5/RTC_INT.c **** *
 260:Generated_Source\PSoC5/RTC_INT.c **** * Side Effects:
 261:Generated_Source\PSoC5/RTC_INT.c **** *  Clears all interrupt status bits (react_int, limact_int, onepps_int, ctw_int,
 262:Generated_Source\PSoC5/RTC_INT.c **** *  and  ftw_int) in Power Manager Interrupt Status Register. If an interrupt
 263:Generated_Source\PSoC5/RTC_INT.c **** *  gets generated at the same time as a clear, the bit will remain set (which
 264:Generated_Source\PSoC5/RTC_INT.c **** *  causes another interrupt).
 265:Generated_Source\PSoC5/RTC_INT.c **** *
 266:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 267:Generated_Source\PSoC5/RTC_INT.c **** CY_ISR(RTC_ISR)
 268:Generated_Source\PSoC5/RTC_INT.c **** {
 235              		.loc 1 268 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 8
 238              		@ frame_needed = 1, uses_anonymous_args = 0
 239 0000 80B5     		push	{r7, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 7, -8
 242              		.cfi_offset 14, -4
 243 0002 82B0     		sub	sp, sp, #8
 244              		.cfi_def_cfa_offset 16
 245 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 10


 246              		.cfi_def_cfa_register 7
 269:Generated_Source\PSoC5/RTC_INT.c ****     uint8 RTC_tmp;
 270:Generated_Source\PSoC5/RTC_INT.c **** 
 271:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_ENTRY_CALLBACK
 272:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_EntryCallback();
 273:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_ENTRY_CALLBACK */
 274:Generated_Source\PSoC5/RTC_INT.c ****     
 275:Generated_Source\PSoC5/RTC_INT.c ****     /* Clear OPPS interrupt status flag */
 276:Generated_Source\PSoC5/RTC_INT.c ****     (void) CyPmReadStatus(CY_PM_ONEPPS_INT);
 247              		.loc 1 276 0
 248 0006 0420     		movs	r0, #4
 249 0008 FFF7FEFF 		bl	CyPmReadStatus
 277:Generated_Source\PSoC5/RTC_INT.c **** 
 278:Generated_Source\PSoC5/RTC_INT.c ****     /* Increment seconds counter */
 279:Generated_Source\PSoC5/RTC_INT.c ****     RTC_currentTimeDate.Sec++;
 250              		.loc 1 279 0
 251 000c 9E4B     		ldr	r3, .L48
 252 000e 1B78     		ldrb	r3, [r3]
 253 0010 DBB2     		uxtb	r3, r3
 254 0012 0133     		adds	r3, r3, #1
 255 0014 DAB2     		uxtb	r2, r3
 256 0016 9C4B     		ldr	r3, .L48
 257 0018 1A70     		strb	r2, [r3]
 280:Generated_Source\PSoC5/RTC_INT.c **** 
 281:Generated_Source\PSoC5/RTC_INT.c ****     /* Check if minute elapsed */
 282:Generated_Source\PSoC5/RTC_INT.c ****     if(RTC_currentTimeDate.Sec > RTC_MINUTE_ELAPSED)
 258              		.loc 1 282 0
 259 001a 9B4B     		ldr	r3, .L48
 260 001c 1B78     		ldrb	r3, [r3]
 261 001e DBB2     		uxtb	r3, r3
 262 0020 3B2B     		cmp	r3, #59
 263 0022 40F2A682 		bls	.L9
 283:Generated_Source\PSoC5/RTC_INT.c ****     {
 284:Generated_Source\PSoC5/RTC_INT.c ****         /* Inc Min */
 285:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Min++;
 264              		.loc 1 285 0
 265 0026 984B     		ldr	r3, .L48
 266 0028 5B78     		ldrb	r3, [r3, #1]
 267 002a DBB2     		uxtb	r3, r3
 268 002c 0133     		adds	r3, r3, #1
 269 002e DAB2     		uxtb	r2, r3
 270 0030 954B     		ldr	r3, .L48
 271 0032 5A70     		strb	r2, [r3, #1]
 286:Generated_Source\PSoC5/RTC_INT.c **** 
 287:Generated_Source\PSoC5/RTC_INT.c ****         /* Clear Sec */
 288:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Sec = 0u;
 272              		.loc 1 288 0
 273 0034 944B     		ldr	r3, .L48
 274 0036 0022     		movs	r2, #0
 275 0038 1A70     		strb	r2, [r3]
 289:Generated_Source\PSoC5/RTC_INT.c **** 
 290:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 276              		.loc 1 290 0
 277 003a 934B     		ldr	r3, .L48
 278 003c 5B78     		ldrb	r3, [r3, #1]
 279 003e DBB2     		uxtb	r3, r3
 280 0040 3B2B     		cmp	r3, #59
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 11


 281 0042 40F24682 		bls	.L10
 291:Generated_Source\PSoC5/RTC_INT.c ****         {
 292:Generated_Source\PSoC5/RTC_INT.c ****             /* Inc HOUR */
 293:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Hour++;
 282              		.loc 1 293 0
 283 0046 904B     		ldr	r3, .L48
 284 0048 9B78     		ldrb	r3, [r3, #2]
 285 004a DBB2     		uxtb	r3, r3
 286 004c 0133     		adds	r3, r3, #1
 287 004e DAB2     		uxtb	r2, r3
 288 0050 8D4B     		ldr	r3, .L48
 289 0052 9A70     		strb	r2, [r3, #2]
 294:Generated_Source\PSoC5/RTC_INT.c **** 
 295:Generated_Source\PSoC5/RTC_INT.c ****             /* Clear Min */
 296:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Min = 0u;
 290              		.loc 1 296 0
 291 0054 8C4B     		ldr	r3, .L48
 292 0056 0022     		movs	r2, #0
 293 0058 5A70     		strb	r2, [r3, #1]
 297:Generated_Source\PSoC5/RTC_INT.c **** 
 298:Generated_Source\PSoC5/RTC_INT.c ****             /* Day roll over */
 299:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 294              		.loc 1 299 0
 295 005a 8B4B     		ldr	r3, .L48
 296 005c 9B78     		ldrb	r3, [r3, #2]
 297 005e DBB2     		uxtb	r3, r3
 298 0060 172B     		cmp	r3, #23
 299 0062 40F2DD81 		bls	.L11
 300:Generated_Source\PSoC5/RTC_INT.c ****             {
 301:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfMonth */
 302:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfMonth++;
 300              		.loc 1 302 0
 301 0066 884B     		ldr	r3, .L48
 302 0068 1B79     		ldrb	r3, [r3, #4]
 303 006a DBB2     		uxtb	r3, r3
 304 006c 0133     		adds	r3, r3, #1
 305 006e DAB2     		uxtb	r2, r3
 306 0070 854B     		ldr	r3, .L48
 307 0072 1A71     		strb	r2, [r3, #4]
 303:Generated_Source\PSoC5/RTC_INT.c **** 
 304:Generated_Source\PSoC5/RTC_INT.c ****                 /* Clear Hour */
 305:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.Hour = 0u;
 308              		.loc 1 305 0
 309 0074 844B     		ldr	r3, .L48
 310 0076 0022     		movs	r2, #0
 311 0078 9A70     		strb	r2, [r3, #2]
 306:Generated_Source\PSoC5/RTC_INT.c **** 
 307:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfYear */
 308:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfYear++;
 312              		.loc 1 308 0
 313 007a 834B     		ldr	r3, .L48
 314 007c DB88     		ldrh	r3, [r3, #6]	@ movhi
 315 007e 9BB2     		uxth	r3, r3
 316 0080 0133     		adds	r3, r3, #1
 317 0082 9AB2     		uxth	r2, r3
 318 0084 804B     		ldr	r3, .L48
 319 0086 DA80     		strh	r2, [r3, #6]	@ movhi
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 12


 309:Generated_Source\PSoC5/RTC_INT.c **** 
 310:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfWeek */
 311:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfWeek++;
 320              		.loc 1 311 0
 321 0088 7F4B     		ldr	r3, .L48
 322 008a DB78     		ldrb	r3, [r3, #3]
 323 008c DBB2     		uxtb	r3, r3
 324 008e 0133     		adds	r3, r3, #1
 325 0090 DAB2     		uxtb	r2, r3
 326 0092 7D4B     		ldr	r3, .L48
 327 0094 DA70     		strb	r2, [r3, #3]
 312:Generated_Source\PSoC5/RTC_INT.c **** 
 313:Generated_Source\PSoC5/RTC_INT.c ****                 /* Check DayOfWeek */
 314:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 328              		.loc 1 314 0
 329 0096 7C4B     		ldr	r3, .L48
 330 0098 DB78     		ldrb	r3, [r3, #3]
 331 009a DBB2     		uxtb	r3, r3
 332 009c 072B     		cmp	r3, #7
 333 009e 02D9     		bls	.L12
 315:Generated_Source\PSoC5/RTC_INT.c ****                 {
 316:Generated_Source\PSoC5/RTC_INT.c ****                     /* start new week */
 317:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfWeek = 1u;
 334              		.loc 1 317 0
 335 00a0 794B     		ldr	r3, .L48
 336 00a2 0122     		movs	r2, #1
 337 00a4 DA70     		strb	r2, [r3, #3]
 338              	.L12:
 318:Generated_Source\PSoC5/RTC_INT.c ****                 }
 319:Generated_Source\PSoC5/RTC_INT.c **** 
 320:Generated_Source\PSoC5/RTC_INT.c ****                 /* Day of month roll over.
 321:Generated_Source\PSoC5/RTC_INT.c ****                 * Check if day of month greater than 29 in February of leap year or
 322:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than 28 NOT in February of NON leap year or
 323:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than it should be in every month in non leap year
 324:Generated_Source\PSoC5/RTC_INT.c ****                 */
 325:Generated_Source\PSoC5/RTC_INT.c ****                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 339              		.loc 1 325 0
 340 00a6 794B     		ldr	r3, .L48+4
 341 00a8 1B78     		ldrb	r3, [r3]
 342 00aa DBB2     		uxtb	r3, r3
 343 00ac 03F00203 		and	r3, r3, #2
 344 00b0 002B     		cmp	r3, #0
 345 00b2 11D0     		beq	.L13
 326:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 346              		.loc 1 326 0 discriminator 1
 347 00b4 744B     		ldr	r3, .L48
 348 00b6 1B7A     		ldrb	r3, [r3, #8]
 349 00b8 DBB2     		uxtb	r3, r3
 325:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 350              		.loc 1 325 0 discriminator 1
 351 00ba 022B     		cmp	r3, #2
 352 00bc 0CD1     		bne	.L13
 327:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 353              		.loc 1 327 0
 354 00be 724B     		ldr	r3, .L48
 355 00c0 1B79     		ldrb	r3, [r3, #4]
 356 00c2 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 13


 357 00c4 1946     		mov	r1, r3
 328:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 358              		.loc 1 328 0
 359 00c6 704B     		ldr	r3, .L48
 360 00c8 1B7A     		ldrb	r3, [r3, #8]
 361 00ca DBB2     		uxtb	r3, r3
 362 00cc 013B     		subs	r3, r3, #1
 363 00ce 704A     		ldr	r2, .L48+8
 364 00d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 365 00d2 0133     		adds	r3, r3, #1
 326:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 366              		.loc 1 326 0
 367 00d4 9942     		cmp	r1, r3
 368 00d6 2AD8     		bhi	.L14
 369              	.L13:
 329:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 370              		.loc 1 329 0
 371 00d8 6C4B     		ldr	r3, .L48+4
 372 00da 1B78     		ldrb	r3, [r3]
 373 00dc DBB2     		uxtb	r3, r3
 374 00de 03F00203 		and	r3, r3, #2
 328:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 375              		.loc 1 328 0
 376 00e2 002B     		cmp	r3, #0
 377 00e4 0FD0     		beq	.L15
 330:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 378              		.loc 1 330 0
 379 00e6 684B     		ldr	r3, .L48
 380 00e8 1B7A     		ldrb	r3, [r3, #8]
 381 00ea DBB2     		uxtb	r3, r3
 329:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 382              		.loc 1 329 0
 383 00ec 022B     		cmp	r3, #2
 384 00ee 0AD0     		beq	.L15
 331:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 385              		.loc 1 331 0
 386 00f0 654B     		ldr	r3, .L48
 387 00f2 1B79     		ldrb	r3, [r3, #4]
 388 00f4 DAB2     		uxtb	r2, r3
 332:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 389              		.loc 1 332 0
 390 00f6 644B     		ldr	r3, .L48
 391 00f8 1B7A     		ldrb	r3, [r3, #8]
 392 00fa DBB2     		uxtb	r3, r3
 393 00fc 013B     		subs	r3, r3, #1
 394 00fe 6449     		ldr	r1, .L48+8
 395 0100 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 330:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 396              		.loc 1 330 0
 397 0102 9A42     		cmp	r2, r3
 398 0104 13D8     		bhi	.L14
 399              	.L15:
 333:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 400              		.loc 1 333 0
 401 0106 614B     		ldr	r3, .L48+4
 402 0108 1B78     		ldrb	r3, [r3]
 403 010a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 14


 404 010c 03F00203 		and	r3, r3, #2
 332:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 405              		.loc 1 332 0
 406 0110 002B     		cmp	r3, #0
 407 0112 40F0F480 		bne	.L16
 334:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 408              		.loc 1 334 0
 409 0116 5C4B     		ldr	r3, .L48
 410 0118 1B79     		ldrb	r3, [r3, #4]
 411 011a DAB2     		uxtb	r2, r3
 335:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 412              		.loc 1 335 0
 413 011c 5A4B     		ldr	r3, .L48
 414 011e 1B7A     		ldrb	r3, [r3, #8]
 415 0120 DBB2     		uxtb	r3, r3
 416 0122 013B     		subs	r3, r3, #1
 417 0124 5A49     		ldr	r1, .L48+8
 418 0126 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 333:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 419              		.loc 1 333 0
 420 0128 9A42     		cmp	r2, r3
 421 012a 40F2E880 		bls	.L16
 422              	.L14:
 336:Generated_Source\PSoC5/RTC_INT.c ****                 {
 337:Generated_Source\PSoC5/RTC_INT.c ****                     /* Inc Month */
 338:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.Month++;
 423              		.loc 1 338 0
 424 012e 564B     		ldr	r3, .L48
 425 0130 1B7A     		ldrb	r3, [r3, #8]
 426 0132 DBB2     		uxtb	r3, r3
 427 0134 0133     		adds	r3, r3, #1
 428 0136 DAB2     		uxtb	r2, r3
 429 0138 534B     		ldr	r3, .L48
 430 013a 1A72     		strb	r2, [r3, #8]
 339:Generated_Source\PSoC5/RTC_INT.c **** 
 340:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set first day of month */
 341:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfMonth = 1u;
 431              		.loc 1 341 0
 432 013c 524B     		ldr	r3, .L48
 433 013e 0122     		movs	r2, #1
 434 0140 1A71     		strb	r2, [r3, #4]
 342:Generated_Source\PSoC5/RTC_INT.c **** 
 343:Generated_Source\PSoC5/RTC_INT.c ****                     /* Year roll over */
 344:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 435              		.loc 1 344 0
 436 0142 514B     		ldr	r3, .L48
 437 0144 1B7A     		ldrb	r3, [r3, #8]
 438 0146 DBB2     		uxtb	r3, r3
 439 0148 0C2B     		cmp	r3, #12
 440 014a 40F28580 		bls	.L17
 345:Generated_Source\PSoC5/RTC_INT.c ****                     {
 346:Generated_Source\PSoC5/RTC_INT.c ****                         /* Inc Year */
 347:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Year++;
 441              		.loc 1 347 0
 442 014e 4E4B     		ldr	r3, .L48
 443 0150 5B89     		ldrh	r3, [r3, #10]	@ movhi
 444 0152 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 15


 445 0154 0133     		adds	r3, r3, #1
 446 0156 9AB2     		uxth	r2, r3
 447 0158 4B4B     		ldr	r3, .L48
 448 015a 5A81     		strh	r2, [r3, #10]	@ movhi
 348:Generated_Source\PSoC5/RTC_INT.c **** 
 349:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first month of year */
 350:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Month = 1u;
 449              		.loc 1 350 0
 450 015c 4A4B     		ldr	r3, .L48
 451 015e 0122     		movs	r2, #1
 452 0160 1A72     		strb	r2, [r3, #8]
 351:Generated_Source\PSoC5/RTC_INT.c **** 
 352:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first day of year */
 353:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.DayOfYear = 1u;
 453              		.loc 1 353 0
 454 0162 494B     		ldr	r3, .L48
 455 0164 0122     		movs	r2, #1
 456 0166 DA80     		strh	r2, [r3, #6]	@ movhi
 354:Generated_Source\PSoC5/RTC_INT.c **** 
 355:Generated_Source\PSoC5/RTC_INT.c ****                         /* Is this year leap */
 356:Generated_Source\PSoC5/RTC_INT.c ****                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 457              		.loc 1 356 0
 458 0168 474B     		ldr	r3, .L48
 459 016a 5B89     		ldrh	r3, [r3, #10]	@ movhi
 460 016c 9BB2     		uxth	r3, r3
 461 016e 494A     		ldr	r2, .L48+12
 462 0170 A2FB0312 		umull	r1, r2, r2, r3
 463 0174 D209     		lsrs	r2, r2, #7
 464 0176 4FF4C871 		mov	r1, #400
 465 017a 01FB02F2 		mul	r2, r1, r2
 466 017e 9B1A     		subs	r3, r3, r2
 467 0180 9BB2     		uxth	r3, r3
 468 0182 002B     		cmp	r3, #0
 469 0184 15D0     		beq	.L18
 470              		.loc 1 356 0 is_stmt 0 discriminator 1
 471 0186 404B     		ldr	r3, .L48
 472 0188 5B89     		ldrh	r3, [r3, #10]	@ movhi
 473 018a 9BB2     		uxth	r3, r3
 474 018c 03F00303 		and	r3, r3, #3
 475 0190 9BB2     		uxth	r3, r3
 476 0192 002B     		cmp	r3, #0
 477 0194 16D1     		bne	.L19
 478              		.loc 1 356 0 discriminator 2
 479 0196 3C4B     		ldr	r3, .L48
 480 0198 5B89     		ldrh	r3, [r3, #10]	@ movhi
 481 019a 9BB2     		uxth	r3, r3
 482 019c 3D4A     		ldr	r2, .L48+12
 483 019e A2FB0312 		umull	r1, r2, r2, r3
 484 01a2 5209     		lsrs	r2, r2, #5
 485 01a4 6421     		movs	r1, #100
 486 01a6 01FB02F2 		mul	r2, r1, r2
 487 01aa 9B1A     		subs	r3, r3, r2
 488 01ac 9BB2     		uxth	r3, r3
 489 01ae 002B     		cmp	r3, #0
 490 01b0 08D0     		beq	.L19
 491              	.L18:
 357:Generated_Source\PSoC5/RTC_INT.c ****                         {
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 16


 358:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set leap year flag */
 359:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_LY;
 492              		.loc 1 359 0 is_stmt 1
 493 01b2 364B     		ldr	r3, .L48+4
 494 01b4 1B78     		ldrb	r3, [r3]
 495 01b6 DBB2     		uxtb	r3, r3
 496 01b8 43F00203 		orr	r3, r3, #2
 497 01bc DAB2     		uxtb	r2, r3
 498 01be 334B     		ldr	r3, .L48+4
 499 01c0 1A70     		strb	r2, [r3]
 500 01c2 07E0     		b	.L20
 501              	.L19:
 360:Generated_Source\PSoC5/RTC_INT.c ****                         }
 361:Generated_Source\PSoC5/RTC_INT.c ****                         else    /* not leap year */
 362:Generated_Source\PSoC5/RTC_INT.c ****                         {
 363:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear leap year */
 364:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 502              		.loc 1 364 0
 503 01c4 314B     		ldr	r3, .L48+4
 504 01c6 1B78     		ldrb	r3, [r3]
 505 01c8 DBB2     		uxtb	r3, r3
 506 01ca 23F00203 		bic	r3, r3, #2
 507 01ce DAB2     		uxtb	r2, r3
 508 01d0 2E4B     		ldr	r3, .L48+4
 509 01d2 1A70     		strb	r2, [r3]
 510              	.L20:
 365:Generated_Source\PSoC5/RTC_INT.c ****                         }
 366:Generated_Source\PSoC5/RTC_INT.c **** 
 367:Generated_Source\PSoC5/RTC_INT.c ****                         /* Alarm YEAR */
 368:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 511              		.loc 1 368 0
 512 01d4 304B     		ldr	r3, .L48+16
 513 01d6 1B78     		ldrb	r3, [r3]
 514 01d8 DBB2     		uxtb	r3, r3
 515 01da 5BB2     		sxtb	r3, r3
 516 01dc 002B     		cmp	r3, #0
 517 01de 18DA     		bge	.L21
 369:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_ALARM_YEAR_MASK))
 370:Generated_Source\PSoC5/RTC_INT.c ****                         {
 371:Generated_Source\PSoC5/RTC_INT.c ****                             /* Years match */
 372:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 518              		.loc 1 372 0
 519 01e0 2E4B     		ldr	r3, .L48+20
 520 01e2 5B89     		ldrh	r3, [r3, #10]	@ movhi
 521 01e4 9AB2     		uxth	r2, r3
 522 01e6 284B     		ldr	r3, .L48
 523 01e8 5B89     		ldrh	r3, [r3, #10]	@ movhi
 524 01ea 9BB2     		uxth	r3, r3
 525 01ec 9A42     		cmp	r2, r3
 526 01ee 08D1     		bne	.L22
 373:Generated_Source\PSoC5/RTC_INT.c ****                             {
 374:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Rise year alarm */
 375:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 527              		.loc 1 375 0
 528 01f0 2B4B     		ldr	r3, .L48+24
 529 01f2 1B78     		ldrb	r3, [r3]
 530 01f4 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 17


 531 01f6 63F07F03 		orn	r3, r3, #127
 532 01fa DAB2     		uxtb	r2, r3
 533 01fc 284B     		ldr	r3, .L48+24
 534 01fe 1A70     		strb	r2, [r3]
 535 0200 07E0     		b	.L21
 536              	.L22:
 376:Generated_Source\PSoC5/RTC_INT.c ****                             }
 377:Generated_Source\PSoC5/RTC_INT.c ****                             else    /* Years do not match */
 378:Generated_Source\PSoC5/RTC_INT.c ****                             {
 379:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Clear year alarm */
 380:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 537              		.loc 1 380 0
 538 0202 274B     		ldr	r3, .L48+24
 539 0204 1B78     		ldrb	r3, [r3]
 540 0206 DBB2     		uxtb	r3, r3
 541 0208 03F07F03 		and	r3, r3, #127
 542 020c DAB2     		uxtb	r2, r3
 543 020e 244B     		ldr	r3, .L48+24
 544 0210 1A70     		strb	r2, [r3]
 545              	.L21:
 381:Generated_Source\PSoC5/RTC_INT.c ****                             }
 382:Generated_Source\PSoC5/RTC_INT.c ****                         } /* do not alarm year */
 383:Generated_Source\PSoC5/RTC_INT.c **** 
 384:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set Alarm flag event */
 385:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_tmp = RTC_alarmCfgMask;
 546              		.loc 1 385 0
 547 0212 214B     		ldr	r3, .L48+16
 548 0214 1B78     		ldrb	r3, [r3]
 549 0216 FB71     		strb	r3, [r7, #7]
 386:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_SET_ALARM(RTC_tmp,
 550              		.loc 1 386 0
 551 0218 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 552 021a 002B     		cmp	r3, #0
 553 021c 13D0     		beq	.L23
 554              		.loc 1 386 0 is_stmt 0 discriminator 1
 555 021e 204B     		ldr	r3, .L48+24
 556 0220 1B78     		ldrb	r3, [r3]
 557 0222 DAB2     		uxtb	r2, r3
 558 0224 FB79     		ldrb	r3, [r7, #7]
 559 0226 1340     		ands	r3, r3, r2
 560 0228 DBB2     		uxtb	r3, r3
 561 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 562 022c 9A42     		cmp	r2, r3
 563 022e 0AD1     		bne	.L23
 564              		.loc 1 386 0 discriminator 2
 565 0230 164B     		ldr	r3, .L48+4
 566 0232 1B78     		ldrb	r3, [r3]
 567 0234 DBB2     		uxtb	r3, r3
 568 0236 43F00803 		orr	r3, r3, #8
 569 023a DAB2     		uxtb	r2, r3
 570 023c 134B     		ldr	r3, .L48+4
 571 023e 1A70     		strb	r2, [r3]
 572 0240 174B     		ldr	r3, .L48+24
 573 0242 0022     		movs	r2, #0
 574 0244 1A70     		strb	r2, [r3]
 575              	.L23:
 387:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_alarmCurStatus,
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 18


 388:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_statusDateTime);
 389:Generated_Source\PSoC5/RTC_INT.c **** 
 390:Generated_Source\PSoC5/RTC_INT.c ****                         /* Every Year */
 391:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 576              		.loc 1 391 0 is_stmt 1
 577 0246 174B     		ldr	r3, .L48+28
 578 0248 1B78     		ldrb	r3, [r3]
 579 024a DBB2     		uxtb	r3, r3
 580 024c 03F04003 		and	r3, r3, #64
 581 0250 002B     		cmp	r3, #0
 582 0252 01D0     		beq	.L17
 392:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_INTERVAL_YEAR_MASK))
 393:Generated_Source\PSoC5/RTC_INT.c ****                         {
 394:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_EveryYearHandler();
 583              		.loc 1 394 0
 584 0254 FFF7FEFF 		bl	RTC_EveryYearHandler
 585              	.L17:
 395:Generated_Source\PSoC5/RTC_INT.c ****                         }
 396:Generated_Source\PSoC5/RTC_INT.c **** 
 397:Generated_Source\PSoC5/RTC_INT.c ****                     } /* Month > 12 */
 398:Generated_Source\PSoC5/RTC_INT.c **** 
 399:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 400:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 586              		.loc 1 400 0
 587 0258 0F4B     		ldr	r3, .L48+16
 588 025a 1B78     		ldrb	r3, [r3]
 589 025c DBB2     		uxtb	r3, r3
 590 025e 03F04003 		and	r3, r3, #64
 591 0262 002B     		cmp	r3, #0
 592 0264 28D0     		beq	.L24
 401:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 402:Generated_Source\PSoC5/RTC_INT.c ****                     {
 403:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 593              		.loc 1 403 0
 594 0266 0D4B     		ldr	r3, .L48+20
 595 0268 1B7A     		ldrb	r3, [r3, #8]
 596 026a DAB2     		uxtb	r2, r3
 597 026c 064B     		ldr	r3, .L48
 598 026e 1B7A     		ldrb	r3, [r3, #8]
 599 0270 DBB2     		uxtb	r3, r3
 600 0272 9A42     		cmp	r2, r3
 601 0274 18D1     		bne	.L25
 404:Generated_Source\PSoC5/RTC_INT.c ****                         {
 405:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set month alarm */
 406:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 602              		.loc 1 406 0
 603 0276 0A4B     		ldr	r3, .L48+24
 604 0278 1B78     		ldrb	r3, [r3]
 605 027a DBB2     		uxtb	r3, r3
 606 027c 43F04003 		orr	r3, r3, #64
 607 0280 DAB2     		uxtb	r2, r3
 608 0282 074B     		ldr	r3, .L48+24
 609 0284 1A70     		strb	r2, [r3]
 610 0286 17E0     		b	.L24
 611              	.L49:
 612              		.align	2
 613              	.L48:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 19


 614 0288 00000000 		.word	RTC_currentTimeDate
 615 028c 00000000 		.word	RTC_statusDateTime
 616 0290 00000000 		.word	RTC_daysInMonths
 617 0294 1F85EB51 		.word	1374389535
 618 0298 00000000 		.word	RTC_alarmCfgMask
 619 029c 00000000 		.word	RTC_alarmCfgTimeDate
 620 02a0 00000000 		.word	RTC_alarmCurStatus
 621 02a4 00000000 		.word	RTC_intervalCfgMask
 622              	.L25:
 407:Generated_Source\PSoC5/RTC_INT.c ****                         }
 408:Generated_Source\PSoC5/RTC_INT.c ****                         else
 409:Generated_Source\PSoC5/RTC_INT.c ****                         {
 410:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear month alarm */
 411:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 623              		.loc 1 411 0
 624 02a8 964B     		ldr	r3, .L50
 625 02aa 1B78     		ldrb	r3, [r3]
 626 02ac DBB2     		uxtb	r3, r3
 627 02ae 23F04003 		bic	r3, r3, #64
 628 02b2 DAB2     		uxtb	r2, r3
 629 02b4 934B     		ldr	r3, .L50
 630 02b6 1A70     		strb	r2, [r3]
 631              	.L24:
 412:Generated_Source\PSoC5/RTC_INT.c ****                         }
 413:Generated_Source\PSoC5/RTC_INT.c ****                     }   /* Month alarm is masked */
 414:Generated_Source\PSoC5/RTC_INT.c **** 
 415:Generated_Source\PSoC5/RTC_INT.c ****                     #if (1u == RTC_DST_FUNC_ENABLE)
 416:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 417:Generated_Source\PSoC5/RTC_INT.c ****                         {
 418:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus |= RTC_DST_MONTH;
 419:Generated_Source\PSoC5/RTC_INT.c ****                         }
 420:Generated_Source\PSoC5/RTC_INT.c ****                         else
 421:Generated_Source\PSoC5/RTC_INT.c ****                         {
 422:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 423:Generated_Source\PSoC5/RTC_INT.c ****                         }
 424:Generated_Source\PSoC5/RTC_INT.c **** 
 425:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStart.Month == RTC_currentTimeDate.Month)
 426:Generated_Source\PSoC5/RTC_INT.c ****                         {
 427:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus |= RTC_DST_MONTH;
 428:Generated_Source\PSoC5/RTC_INT.c ****                         }
 429:Generated_Source\PSoC5/RTC_INT.c ****                         else
 430:Generated_Source\PSoC5/RTC_INT.c ****                         {
 431:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus &= (uint8)(~RTC_DST_MONTH);
 432:Generated_Source\PSoC5/RTC_INT.c ****                         }
 433:Generated_Source\PSoC5/RTC_INT.c ****                     #endif /* 1u == RTC_DST_FUNC_ENABLE */
 434:Generated_Source\PSoC5/RTC_INT.c **** 
 435:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 436:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 632              		.loc 1 436 0
 633 02b8 934B     		ldr	r3, .L50+4
 634 02ba 1B78     		ldrb	r3, [r3]
 635 02bc FB71     		strb	r3, [r7, #7]
 437:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 636              		.loc 1 437 0
 637 02be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 638 02c0 002B     		cmp	r3, #0
 639 02c2 13D0     		beq	.L26
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 20


 640              		.loc 1 437 0 is_stmt 0 discriminator 1
 641 02c4 8F4B     		ldr	r3, .L50
 642 02c6 1B78     		ldrb	r3, [r3]
 643 02c8 DAB2     		uxtb	r2, r3
 644 02ca FB79     		ldrb	r3, [r7, #7]
 645 02cc 1340     		ands	r3, r3, r2
 646 02ce DBB2     		uxtb	r3, r3
 647 02d0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 648 02d2 9A42     		cmp	r2, r3
 649 02d4 0AD1     		bne	.L26
 650              		.loc 1 437 0 discriminator 2
 651 02d6 8D4B     		ldr	r3, .L50+8
 652 02d8 1B78     		ldrb	r3, [r3]
 653 02da DBB2     		uxtb	r3, r3
 654 02dc 43F00803 		orr	r3, r3, #8
 655 02e0 DAB2     		uxtb	r2, r3
 656 02e2 8A4B     		ldr	r3, .L50+8
 657 02e4 1A70     		strb	r2, [r3]
 658 02e6 874B     		ldr	r3, .L50
 659 02e8 0022     		movs	r2, #0
 660 02ea 1A70     		strb	r2, [r3]
 661              	.L26:
 438:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 439:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 440:Generated_Source\PSoC5/RTC_INT.c **** 
 441:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Month */
 442:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 662              		.loc 1 442 0 is_stmt 1
 663 02ec 884B     		ldr	r3, .L50+12
 664 02ee 1B78     		ldrb	r3, [r3]
 665 02f0 DBB2     		uxtb	r3, r3
 666 02f2 03F02003 		and	r3, r3, #32
 667 02f6 002B     		cmp	r3, #0
 668 02f8 01D0     		beq	.L16
 443:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_MONTH_MASK))
 444:Generated_Source\PSoC5/RTC_INT.c ****                     {
 445:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_EveryMonthHandler();
 669              		.loc 1 445 0
 670 02fa FFF7FEFF 		bl	RTC_EveryMonthHandler
 671              	.L16:
 446:Generated_Source\PSoC5/RTC_INT.c ****                     }
 447:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day roll over */
 448:Generated_Source\PSoC5/RTC_INT.c **** 
 449:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFWEEK */
 450:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 672              		.loc 1 450 0
 673 02fe 824B     		ldr	r3, .L50+4
 674 0300 1B78     		ldrb	r3, [r3]
 675 0302 DBB2     		uxtb	r3, r3
 676 0304 03F00803 		and	r3, r3, #8
 677 0308 002B     		cmp	r3, #0
 678 030a 18D0     		beq	.L27
 451:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFWEEK_MASK))
 452:Generated_Source\PSoC5/RTC_INT.c ****                 {
 453:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 679              		.loc 1 453 0
 680 030c 814B     		ldr	r3, .L50+16
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 21


 681 030e DB78     		ldrb	r3, [r3, #3]
 682 0310 DAB2     		uxtb	r2, r3
 683 0312 814B     		ldr	r3, .L50+20
 684 0314 DB78     		ldrb	r3, [r3, #3]
 685 0316 DBB2     		uxtb	r3, r3
 686 0318 9A42     		cmp	r2, r3
 687 031a 08D1     		bne	.L28
 454:Generated_Source\PSoC5/RTC_INT.c ****                     {
 455:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of week alarm */
 456:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 688              		.loc 1 456 0
 689 031c 794B     		ldr	r3, .L50
 690 031e 1B78     		ldrb	r3, [r3]
 691 0320 DBB2     		uxtb	r3, r3
 692 0322 43F00803 		orr	r3, r3, #8
 693 0326 DAB2     		uxtb	r2, r3
 694 0328 764B     		ldr	r3, .L50
 695 032a 1A70     		strb	r2, [r3]
 696 032c 07E0     		b	.L27
 697              	.L28:
 457:Generated_Source\PSoC5/RTC_INT.c ****                     }
 458:Generated_Source\PSoC5/RTC_INT.c ****                     else
 459:Generated_Source\PSoC5/RTC_INT.c ****                     {
 460:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of week alarm */
 461:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 698              		.loc 1 461 0
 699 032e 754B     		ldr	r3, .L50
 700 0330 1B78     		ldrb	r3, [r3]
 701 0332 DBB2     		uxtb	r3, r3
 702 0334 23F00803 		bic	r3, r3, #8
 703 0338 DAB2     		uxtb	r2, r3
 704 033a 724B     		ldr	r3, .L50
 705 033c 1A70     		strb	r2, [r3]
 706              	.L27:
 462:Generated_Source\PSoC5/RTC_INT.c ****                     }
 463:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of week alarm is masked */
 464:Generated_Source\PSoC5/RTC_INT.c **** 
 465:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFYEAR */
 466:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 707              		.loc 1 466 0
 708 033e 724B     		ldr	r3, .L50+4
 709 0340 1B78     		ldrb	r3, [r3]
 710 0342 DBB2     		uxtb	r3, r3
 711 0344 03F02003 		and	r3, r3, #32
 712 0348 002B     		cmp	r3, #0
 713 034a 18D0     		beq	.L29
 467:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFYEAR_MASK))
 468:Generated_Source\PSoC5/RTC_INT.c ****                 {
 469:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 714              		.loc 1 469 0
 715 034c 714B     		ldr	r3, .L50+16
 716 034e DB88     		ldrh	r3, [r3, #6]	@ movhi
 717 0350 9AB2     		uxth	r2, r3
 718 0352 714B     		ldr	r3, .L50+20
 719 0354 DB88     		ldrh	r3, [r3, #6]	@ movhi
 720 0356 9BB2     		uxth	r3, r3
 721 0358 9A42     		cmp	r2, r3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 22


 722 035a 08D1     		bne	.L30
 470:Generated_Source\PSoC5/RTC_INT.c ****                     {
 471:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of year alarm */
 472:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 723              		.loc 1 472 0
 724 035c 694B     		ldr	r3, .L50
 725 035e 1B78     		ldrb	r3, [r3]
 726 0360 DBB2     		uxtb	r3, r3
 727 0362 43F02003 		orr	r3, r3, #32
 728 0366 DAB2     		uxtb	r2, r3
 729 0368 664B     		ldr	r3, .L50
 730 036a 1A70     		strb	r2, [r3]
 731 036c 07E0     		b	.L29
 732              	.L30:
 473:Generated_Source\PSoC5/RTC_INT.c ****                     }
 474:Generated_Source\PSoC5/RTC_INT.c ****                     else
 475:Generated_Source\PSoC5/RTC_INT.c ****                     {
 476:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of year alarm */
 477:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 733              		.loc 1 477 0
 734 036e 654B     		ldr	r3, .L50
 735 0370 1B78     		ldrb	r3, [r3]
 736 0372 DBB2     		uxtb	r3, r3
 737 0374 23F02003 		bic	r3, r3, #32
 738 0378 DAB2     		uxtb	r2, r3
 739 037a 624B     		ldr	r3, .L50
 740 037c 1A70     		strb	r2, [r3]
 741              	.L29:
 478:Generated_Source\PSoC5/RTC_INT.c ****                     }
 479:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of year alarm is masked */
 480:Generated_Source\PSoC5/RTC_INT.c **** 
 481:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFMONTH */
 482:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 742              		.loc 1 482 0
 743 037e 624B     		ldr	r3, .L50+4
 744 0380 1B78     		ldrb	r3, [r3]
 745 0382 DBB2     		uxtb	r3, r3
 746 0384 03F01003 		and	r3, r3, #16
 747 0388 002B     		cmp	r3, #0
 748 038a 18D0     		beq	.L31
 483:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_ALARM_DAYOFMONTH_MASK))
 484:Generated_Source\PSoC5/RTC_INT.c ****                 {
 485:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 749              		.loc 1 485 0
 750 038c 614B     		ldr	r3, .L50+16
 751 038e 1B79     		ldrb	r3, [r3, #4]
 752 0390 DAB2     		uxtb	r2, r3
 753 0392 614B     		ldr	r3, .L50+20
 754 0394 1B79     		ldrb	r3, [r3, #4]
 755 0396 DBB2     		uxtb	r3, r3
 756 0398 9A42     		cmp	r2, r3
 757 039a 08D1     		bne	.L32
 486:Generated_Source\PSoC5/RTC_INT.c ****                     {
 487:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of month alarm */
 488:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 758              		.loc 1 488 0
 759 039c 594B     		ldr	r3, .L50
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 23


 760 039e 1B78     		ldrb	r3, [r3]
 761 03a0 DBB2     		uxtb	r3, r3
 762 03a2 43F01003 		orr	r3, r3, #16
 763 03a6 DAB2     		uxtb	r2, r3
 764 03a8 564B     		ldr	r3, .L50
 765 03aa 1A70     		strb	r2, [r3]
 766 03ac 07E0     		b	.L31
 767              	.L32:
 489:Generated_Source\PSoC5/RTC_INT.c ****                     }
 490:Generated_Source\PSoC5/RTC_INT.c ****                     else
 491:Generated_Source\PSoC5/RTC_INT.c ****                     {
 492:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of month alarm */
 493:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 768              		.loc 1 493 0
 769 03ae 554B     		ldr	r3, .L50
 770 03b0 1B78     		ldrb	r3, [r3]
 771 03b2 DBB2     		uxtb	r3, r3
 772 03b4 23F01003 		bic	r3, r3, #16
 773 03b8 DAB2     		uxtb	r2, r3
 774 03ba 524B     		ldr	r3, .L50
 775 03bc 1A70     		strb	r2, [r3]
 776              	.L31:
 494:Generated_Source\PSoC5/RTC_INT.c ****                     }
 495:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of month alarm is masked */
 496:Generated_Source\PSoC5/RTC_INT.c **** 
 497:Generated_Source\PSoC5/RTC_INT.c ****                 #if (1u == RTC_DST_FUNC_ENABLE)
 498:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStop.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 499:Generated_Source\PSoC5/RTC_INT.c ****                     {
 500:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 501:Generated_Source\PSoC5/RTC_INT.c ****                     }
 502:Generated_Source\PSoC5/RTC_INT.c ****                     else
 503:Generated_Source\PSoC5/RTC_INT.c ****                     {
 504:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 505:Generated_Source\PSoC5/RTC_INT.c ****                     }
 506:Generated_Source\PSoC5/RTC_INT.c **** 
 507:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStart.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 508:Generated_Source\PSoC5/RTC_INT.c ****                     {
 509:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus |= RTC_DST_DAYOFMONTH;
 510:Generated_Source\PSoC5/RTC_INT.c ****                     }
 511:Generated_Source\PSoC5/RTC_INT.c ****                     else
 512:Generated_Source\PSoC5/RTC_INT.c ****                     {
 513:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 514:Generated_Source\PSoC5/RTC_INT.c ****                     }
 515:Generated_Source\PSoC5/RTC_INT.c ****                 #endif /* 1u == RTC_DST_FUNC_ENABLE */
 516:Generated_Source\PSoC5/RTC_INT.c **** 
 517:Generated_Source\PSoC5/RTC_INT.c ****                 /* Set Alarm flag event */
 518:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_tmp = RTC_alarmCfgMask;
 777              		.loc 1 518 0
 778 03be 524B     		ldr	r3, .L50+4
 779 03c0 1B78     		ldrb	r3, [r3]
 780 03c2 FB71     		strb	r3, [r7, #7]
 519:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_SET_ALARM(RTC_tmp,
 781              		.loc 1 519 0
 782 03c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 783 03c6 002B     		cmp	r3, #0
 784 03c8 13D0     		beq	.L33
 785              		.loc 1 519 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 24


 786 03ca 4E4B     		ldr	r3, .L50
 787 03cc 1B78     		ldrb	r3, [r3]
 788 03ce DAB2     		uxtb	r2, r3
 789 03d0 FB79     		ldrb	r3, [r7, #7]
 790 03d2 1340     		ands	r3, r3, r2
 791 03d4 DBB2     		uxtb	r3, r3
 792 03d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 793 03d8 9A42     		cmp	r2, r3
 794 03da 0AD1     		bne	.L33
 795              		.loc 1 519 0 discriminator 2
 796 03dc 4B4B     		ldr	r3, .L50+8
 797 03de 1B78     		ldrb	r3, [r3]
 798 03e0 DBB2     		uxtb	r3, r3
 799 03e2 43F00803 		orr	r3, r3, #8
 800 03e6 DAB2     		uxtb	r2, r3
 801 03e8 484B     		ldr	r3, .L50+8
 802 03ea 1A70     		strb	r2, [r3]
 803 03ec 454B     		ldr	r3, .L50
 804 03ee 0022     		movs	r2, #0
 805 03f0 1A70     		strb	r2, [r3]
 806              	.L33:
 520:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_alarmCurStatus,
 521:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_statusDateTime);
 522:Generated_Source\PSoC5/RTC_INT.c **** 
 523:Generated_Source\PSoC5/RTC_INT.c ****                 /* Every Day */
 524:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 807              		.loc 1 524 0 is_stmt 1
 808 03f2 474B     		ldr	r3, .L50+12
 809 03f4 1B78     		ldrb	r3, [r3]
 810 03f6 DBB2     		uxtb	r3, r3
 811 03f8 03F00803 		and	r3, r3, #8
 812 03fc 002B     		cmp	r3, #0
 813 03fe 01D0     		beq	.L34
 525:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_INTERVAL_DAY_MASK))
 526:Generated_Source\PSoC5/RTC_INT.c ****                 {
 527:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_EveryDayHandler();
 814              		.loc 1 527 0
 815 0400 FFF7FEFF 		bl	RTC_EveryDayHandler
 816              	.L34:
 528:Generated_Source\PSoC5/RTC_INT.c ****                 }
 529:Generated_Source\PSoC5/RTC_INT.c **** 
 530:Generated_Source\PSoC5/RTC_INT.c ****                 if(1u == RTC_currentTimeDate.DayOfWeek)
 817              		.loc 1 530 0
 818 0404 444B     		ldr	r3, .L50+20
 819 0406 DB78     		ldrb	r3, [r3, #3]
 820 0408 DBB2     		uxtb	r3, r3
 821 040a 012B     		cmp	r3, #1
 822 040c 08D1     		bne	.L11
 531:Generated_Source\PSoC5/RTC_INT.c ****                 {
 532:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Week */
 533:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 823              		.loc 1 533 0
 824 040e 404B     		ldr	r3, .L50+12
 825 0410 1B78     		ldrb	r3, [r3]
 826 0412 DBB2     		uxtb	r3, r3
 827 0414 03F01003 		and	r3, r3, #16
 828 0418 002B     		cmp	r3, #0
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 25


 829 041a 01D0     		beq	.L11
 534:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_WEEK_MASK))
 535:Generated_Source\PSoC5/RTC_INT.c ****                     {
 536:Generated_Source\PSoC5/RTC_INT.c ****                        RTC_EveryWeekHandler();
 830              		.loc 1 536 0
 831 041c FFF7FEFF 		bl	RTC_EveryWeekHandler
 832              	.L11:
 537:Generated_Source\PSoC5/RTC_INT.c ****                     }
 538:Generated_Source\PSoC5/RTC_INT.c ****                 }
 539:Generated_Source\PSoC5/RTC_INT.c **** 
 540:Generated_Source\PSoC5/RTC_INT.c ****             } /* End of day roll over */
 541:Generated_Source\PSoC5/RTC_INT.c **** 
 542:Generated_Source\PSoC5/RTC_INT.c ****             /* Status set PM/AM flag */
 543:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 833              		.loc 1 543 0
 834 0420 3D4B     		ldr	r3, .L50+20
 835 0422 9B78     		ldrb	r3, [r3, #2]
 836 0424 DBB2     		uxtb	r3, r3
 837 0426 0B2B     		cmp	r3, #11
 838 0428 08D8     		bhi	.L35
 544:Generated_Source\PSoC5/RTC_INT.c ****             {
 545:Generated_Source\PSoC5/RTC_INT.c ****                 /* AM Hour 00:00-11:59, flag zero */
 546:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 839              		.loc 1 546 0
 840 042a 384B     		ldr	r3, .L50+8
 841 042c 1B78     		ldrb	r3, [r3]
 842 042e DBB2     		uxtb	r3, r3
 843 0430 23F00403 		bic	r3, r3, #4
 844 0434 DAB2     		uxtb	r2, r3
 845 0436 354B     		ldr	r3, .L50+8
 846 0438 1A70     		strb	r2, [r3]
 847 043a 07E0     		b	.L36
 848              	.L35:
 547:Generated_Source\PSoC5/RTC_INT.c ****             }
 548:Generated_Source\PSoC5/RTC_INT.c ****             else
 549:Generated_Source\PSoC5/RTC_INT.c ****             {
 550:Generated_Source\PSoC5/RTC_INT.c ****                 /* PM Hour 12:00-23:59, flag set */
 551:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime |= RTC_STATUS_AM_PM;
 849              		.loc 1 551 0
 850 043c 334B     		ldr	r3, .L50+8
 851 043e 1B78     		ldrb	r3, [r3]
 852 0440 DBB2     		uxtb	r3, r3
 853 0442 43F00403 		orr	r3, r3, #4
 854 0446 DAB2     		uxtb	r2, r3
 855 0448 304B     		ldr	r3, .L50+8
 856 044a 1A70     		strb	r2, [r3]
 857              	.L36:
 552:Generated_Source\PSoC5/RTC_INT.c ****             }
 553:Generated_Source\PSoC5/RTC_INT.c **** 
 554:Generated_Source\PSoC5/RTC_INT.c ****             #if (1u == RTC_DST_FUNC_ENABLE)
 555:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStop.Hour == RTC_currentTimeDate.Hour)
 556:Generated_Source\PSoC5/RTC_INT.c ****                 {
 557:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus |= RTC_DST_HOUR;
 558:Generated_Source\PSoC5/RTC_INT.c ****                 }
 559:Generated_Source\PSoC5/RTC_INT.c ****                 else
 560:Generated_Source\PSoC5/RTC_INT.c ****                 {
 561:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus &= (uint8)(~RTC_DST_HOUR);
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 26


 562:Generated_Source\PSoC5/RTC_INT.c ****                 }
 563:Generated_Source\PSoC5/RTC_INT.c **** 
 564:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStart.Hour == RTC_currentTimeDate.Hour)
 565:Generated_Source\PSoC5/RTC_INT.c ****                 {
 566:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStartStatus |= RTC_DST_HOUR;
 567:Generated_Source\PSoC5/RTC_INT.c ****                 }
 568:Generated_Source\PSoC5/RTC_INT.c ****                 else
 569:Generated_Source\PSoC5/RTC_INT.c ****                 {
 570:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_dstStartStatus &= (uint8)(~RTC_DST_HOUR);
 571:Generated_Source\PSoC5/RTC_INT.c ****                 }
 572:Generated_Source\PSoC5/RTC_INT.c **** 
 573:Generated_Source\PSoC5/RTC_INT.c ****                 /* DST Enable ? */
 574:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_ENABLE))
 575:Generated_Source\PSoC5/RTC_INT.c ****                 {
 576:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_statusDateTime, RTC_STATUS_DST))
 577:Generated_Source\PSoC5/RTC_INT.c ****                     {
 578:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStopStatus, RTC_DST_HOUR |
 579:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_DAYOFMONTH | RTC_DST_MONTH))
 580:Generated_Source\PSoC5/RTC_INT.c ****                         {
 581:Generated_Source\PSoC5/RTC_INT.c ****                             /* Substruct from current value of minutes, number of minutes
 582:Generated_Source\PSoC5/RTC_INT.c ****                             * in DST offset which is out of complete hour
 583:Generated_Source\PSoC5/RTC_INT.c ****                             */
 584:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min -=
 585:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 586:Generated_Source\PSoC5/RTC_INT.c **** 
 587:Generated_Source\PSoC5/RTC_INT.c ****                             /* Is minute value negative? */
 588:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 589:Generated_Source\PSoC5/RTC_INT.c ****                             {
 590:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 591:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED -     (~currentTimeDate.Min    ) ==
 592:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED + 1 - (~currentTimeDate.Min + 1)
 593:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 594:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min = RTC_HOUR_ELAPSED -
 595:Generated_Source\PSoC5/RTC_INT.c ****                                                              ((uint8)(~RTC_currentTimeDate.Min));
 596:Generated_Source\PSoC5/RTC_INT.c **** 
 597:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour--;
 598:Generated_Source\PSoC5/RTC_INT.c ****                             }
 599:Generated_Source\PSoC5/RTC_INT.c **** 
 600:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour -= RTC_dstOffsetMin /
 601:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 602:Generated_Source\PSoC5/RTC_INT.c **** 
 603:Generated_Source\PSoC5/RTC_INT.c ****                             /* Day roll over
 604:Generated_Source\PSoC5/RTC_INT.c ****                             * Is hour value negative? */
 605:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 606:Generated_Source\PSoC5/RTC_INT.c ****                             {
 607:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 608:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED - (~currentTimeDate.Hour) ==
 609:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED + 1 - (~currentTimeDate.Hour + 1)
 610:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 611:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour = RTC_DAY_ELAPSED -
 612:Generated_Source\PSoC5/RTC_INT.c ****                                                               ((uint8)(~RTC_currentTimeDate.Hour));
 613:Generated_Source\PSoC5/RTC_INT.c **** 
 614:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 615:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 616:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 617:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 618:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 27


 619:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 620:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 621:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 622:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 623:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 624:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 625:Generated_Source\PSoC5/RTC_INT.c **** 
 626:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth--;
 627:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear--;
 628:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek--;
 629:Generated_Source\PSoC5/RTC_INT.c **** 
 630:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfWeek)
 631:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 632:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = RTC_DAYS_IN_WEEK;
 633:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 634:Generated_Source\PSoC5/RTC_INT.c **** 
 635:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfMonth)
 636:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 637:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month--;
 638:Generated_Source\PSoC5/RTC_INT.c ****                                     if(0u == RTC_currentTimeDate.Month)
 639:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 640:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_DECEMBER;
 641:Generated_Source\PSoC5/RTC_INT.c **** 
 642:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfMonth =
 643:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 644:Generated_Source\PSoC5/RTC_INT.c **** 
 645:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year--;
 646:Generated_Source\PSoC5/RTC_INT.c **** 
 647:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 648:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 649:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 650:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 651:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear =
 652:Generated_Source\PSoC5/RTC_INT.c ****                                                                                     RTC_DAYS_IN_LEA
 653:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 654:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 655:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 656:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 657:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear = RTC_DAYS_IN_YEAR;
 658:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 659:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 660:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 661:Generated_Source\PSoC5/RTC_INT.c ****                                     else
 662:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 663:Generated_Source\PSoC5/RTC_INT.c ****                                         /* Day of month roll over.
 664:Generated_Source\PSoC5/RTC_INT.c ****                                         * Check if day of month February 29 of leap year
 665:Generated_Source\PSoC5/RTC_INT.c ****                                         */
 666:Generated_Source\PSoC5/RTC_INT.c ****                                         if((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 667:Generated_Source\PSoC5/RTC_INT.c ****                                             (RTC_currentTimeDate.Month == RTC_FEBRUARY))
 668:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 669:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
 670:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u]
 671:Generated_Source\PSoC5/RTC_INT.c ****                                             + 1u;
 672:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 673:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 674:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 675:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 28


 676:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 677:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 678:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 679:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 680:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 681:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 682:Generated_Source\PSoC5/RTC_INT.c ****                             }
 683:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
 684:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus = 0u;
 685:Generated_Source\PSoC5/RTC_INT.c ****                         }
 686:Generated_Source\PSoC5/RTC_INT.c ****                     }
 687:Generated_Source\PSoC5/RTC_INT.c ****                     else
 688:Generated_Source\PSoC5/RTC_INT.c ****                     {
 689:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStartStatus,
 690:Generated_Source\PSoC5/RTC_INT.c ****                                                       (RTC_DST_HOUR | RTC_DST_DAYOFMONTH |
 691:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_MONTH)))
 692:Generated_Source\PSoC5/RTC_INT.c ****                         {
 693:Generated_Source\PSoC5/RTC_INT.c ****                             /* Add Hour and Min */
 694:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min +=
 695:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 696:Generated_Source\PSoC5/RTC_INT.c **** 
 697:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 698:Generated_Source\PSoC5/RTC_INT.c ****                             {
 699:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust Min */
 700:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min -= (RTC_HOUR_ELAPSED + 1u);
 701:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour++;
 702:Generated_Source\PSoC5/RTC_INT.c ****                             }
 703:Generated_Source\PSoC5/RTC_INT.c **** 
 704:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour += RTC_dstOffsetMin /
 705:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 706:Generated_Source\PSoC5/RTC_INT.c **** 
 707:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 708:Generated_Source\PSoC5/RTC_INT.c ****                             {
 709:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust hour, add day */
 710:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour -= (RTC_DAY_ELAPSED + 1u);
 711:Generated_Source\PSoC5/RTC_INT.c **** 
 712:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 713:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 714:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 715:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 716:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 717:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 718:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 719:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 720:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 721:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 722:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 723:Generated_Source\PSoC5/RTC_INT.c **** 
 724:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth++;
 725:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear++;
 726:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek++;
 727:Generated_Source\PSoC5/RTC_INT.c **** 
 728:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 729:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 730:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = 1u;
 731:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 732:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 29


 733:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Day of month roll over.
 734:Generated_Source\PSoC5/RTC_INT.c ****                                 * Check if day of month greater than 29 in February of leap year or
 735:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than 28 NOT in February of NON leap year 
 736:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than it should be in every month in non l
 737:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 738:Generated_Source\PSoC5/RTC_INT.c ****                                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 739:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 740:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 741:Generated_Source\PSoC5/RTC_INT.c ****                                   (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 742:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 743:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month != RTC_FEBRUARY)  &&
 744:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 745:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 746:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY)) &&
 747:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 748:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 749:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 750:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month++;
 751:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfMonth = 1u;
 752:Generated_Source\PSoC5/RTC_INT.c ****                                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 753:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 754:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_JANUARY;
 755:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year++;
 756:Generated_Source\PSoC5/RTC_INT.c **** 
 757:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 758:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 759:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 760:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 761:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 762:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 763:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 764:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 765:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 766:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfYear = 1u;
 767:Generated_Source\PSoC5/RTC_INT.c **** 
 768:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 769:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 770:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 771:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 772:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 773:Generated_Source\PSoC5/RTC_INT.c ****                             }
 774:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_DST;
 775:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus = 0u;
 776:Generated_Source\PSoC5/RTC_INT.c **** 
 777:Generated_Source\PSoC5/RTC_INT.c ****                             /* Month */
 778:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 779:Generated_Source\PSoC5/RTC_INT.c ****                             {
 780:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_MONTH;
 781:Generated_Source\PSoC5/RTC_INT.c ****                             }
 782:Generated_Source\PSoC5/RTC_INT.c ****                             else
 783:Generated_Source\PSoC5/RTC_INT.c ****                             {
 784:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 785:Generated_Source\PSoC5/RTC_INT.c ****                             }
 786:Generated_Source\PSoC5/RTC_INT.c **** 
 787:Generated_Source\PSoC5/RTC_INT.c ****                             /* DayOfMonth */
 788:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.DayOfMonth ==
 789:Generated_Source\PSoC5/RTC_INT.c ****                                                                             RTC_currentTimeDate.Day
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 30


 790:Generated_Source\PSoC5/RTC_INT.c ****                             {
 791:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 792:Generated_Source\PSoC5/RTC_INT.c ****                             }
 793:Generated_Source\PSoC5/RTC_INT.c ****                             else
 794:Generated_Source\PSoC5/RTC_INT.c ****                             {
 795:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 796:Generated_Source\PSoC5/RTC_INT.c ****                             }
 797:Generated_Source\PSoC5/RTC_INT.c ****                         }
 798:Generated_Source\PSoC5/RTC_INT.c ****                     }
 799:Generated_Source\PSoC5/RTC_INT.c **** 
 800:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFWEEK */
 801:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 802:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFWEEK_MASK))
 803:Generated_Source\PSoC5/RTC_INT.c ****                     {
 804:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 805:Generated_Source\PSoC5/RTC_INT.c ****                         {
 806:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 807:Generated_Source\PSoC5/RTC_INT.c ****                         }
 808:Generated_Source\PSoC5/RTC_INT.c ****                         else
 809:Generated_Source\PSoC5/RTC_INT.c ****                         {
 810:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 811:Generated_Source\PSoC5/RTC_INT.c ****                         }
 812:Generated_Source\PSoC5/RTC_INT.c ****                     }
 813:Generated_Source\PSoC5/RTC_INT.c **** 
 814:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFYEAR */
 815:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 816:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFYEAR_MASK))
 817:Generated_Source\PSoC5/RTC_INT.c ****                     {
 818:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 819:Generated_Source\PSoC5/RTC_INT.c ****                         {
 820:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 821:Generated_Source\PSoC5/RTC_INT.c ****                         }
 822:Generated_Source\PSoC5/RTC_INT.c ****                         else
 823:Generated_Source\PSoC5/RTC_INT.c ****                         {
 824:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 825:Generated_Source\PSoC5/RTC_INT.c ****                         }
 826:Generated_Source\PSoC5/RTC_INT.c ****                     }
 827:Generated_Source\PSoC5/RTC_INT.c **** 
 828:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFMONTH */
 829:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 830:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFMONTH_MASK))
 831:Generated_Source\PSoC5/RTC_INT.c ****                     {
 832:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 833:Generated_Source\PSoC5/RTC_INT.c ****                         {
 834:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 835:Generated_Source\PSoC5/RTC_INT.c ****                         }
 836:Generated_Source\PSoC5/RTC_INT.c ****                         else
 837:Generated_Source\PSoC5/RTC_INT.c ****                         {
 838:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 839:Generated_Source\PSoC5/RTC_INT.c ****                         }
 840:Generated_Source\PSoC5/RTC_INT.c ****                     }
 841:Generated_Source\PSoC5/RTC_INT.c **** 
 842:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 843:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 844:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 845:Generated_Source\PSoC5/RTC_INT.c ****                     {
 846:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 31


 847:Generated_Source\PSoC5/RTC_INT.c ****                         {
 848:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 849:Generated_Source\PSoC5/RTC_INT.c ****                         }
 850:Generated_Source\PSoC5/RTC_INT.c ****                         else
 851:Generated_Source\PSoC5/RTC_INT.c ****                         {
 852:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 853:Generated_Source\PSoC5/RTC_INT.c ****                         }
 854:Generated_Source\PSoC5/RTC_INT.c ****                     }
 855:Generated_Source\PSoC5/RTC_INT.c **** 
 856:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm YEAR */
 857:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 858:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_YEAR_MASK))
 859:Generated_Source\PSoC5/RTC_INT.c ****                     {
 860:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 861:Generated_Source\PSoC5/RTC_INT.c ****                         {
 862:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 863:Generated_Source\PSoC5/RTC_INT.c ****                         }
 864:Generated_Source\PSoC5/RTC_INT.c ****                         else
 865:Generated_Source\PSoC5/RTC_INT.c ****                         {
 866:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 867:Generated_Source\PSoC5/RTC_INT.c ****                         }
 868:Generated_Source\PSoC5/RTC_INT.c ****                     }
 869:Generated_Source\PSoC5/RTC_INT.c **** 
 870:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 871:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 872:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 873:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 874:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 875:Generated_Source\PSoC5/RTC_INT.c ****                 }
 876:Generated_Source\PSoC5/RTC_INT.c ****             #endif /* 1u == RTC_DST_FUNC_ENABLE */
 877:Generated_Source\PSoC5/RTC_INT.c **** 
 878:Generated_Source\PSoC5/RTC_INT.c ****             /* Alarm HOUR */
 879:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_HOUR_MASK))
 858              		.loc 1 879 0
 859 044c 2E4B     		ldr	r3, .L50+4
 860 044e 1B78     		ldrb	r3, [r3]
 861 0450 DBB2     		uxtb	r3, r3
 862 0452 03F00403 		and	r3, r3, #4
 863 0456 002B     		cmp	r3, #0
 864 0458 18D0     		beq	.L37
 880:Generated_Source\PSoC5/RTC_INT.c ****             {
 881:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_alarmCfgTimeDate.Hour == RTC_currentTimeDate.Hour)
 865              		.loc 1 881 0
 866 045a 2E4B     		ldr	r3, .L50+16
 867 045c 9B78     		ldrb	r3, [r3, #2]
 868 045e DAB2     		uxtb	r2, r3
 869 0460 2D4B     		ldr	r3, .L50+20
 870 0462 9B78     		ldrb	r3, [r3, #2]
 871 0464 DBB2     		uxtb	r3, r3
 872 0466 9A42     		cmp	r2, r3
 873 0468 08D1     		bne	.L38
 882:Generated_Source\PSoC5/RTC_INT.c ****                 {
 883:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus |= RTC_ALARM_HOUR_MASK;
 874              		.loc 1 883 0
 875 046a 264B     		ldr	r3, .L50
 876 046c 1B78     		ldrb	r3, [r3]
 877 046e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 32


 878 0470 43F00403 		orr	r3, r3, #4
 879 0474 DAB2     		uxtb	r2, r3
 880 0476 234B     		ldr	r3, .L50
 881 0478 1A70     		strb	r2, [r3]
 882 047a 07E0     		b	.L37
 883              	.L38:
 884:Generated_Source\PSoC5/RTC_INT.c ****                 }
 885:Generated_Source\PSoC5/RTC_INT.c ****                 else
 886:Generated_Source\PSoC5/RTC_INT.c ****                 {
 887:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_HOUR_MASK);
 884              		.loc 1 887 0
 885 047c 214B     		ldr	r3, .L50
 886 047e 1B78     		ldrb	r3, [r3]
 887 0480 DBB2     		uxtb	r3, r3
 888 0482 23F00403 		bic	r3, r3, #4
 889 0486 DAB2     		uxtb	r2, r3
 890 0488 1E4B     		ldr	r3, .L50
 891 048a 1A70     		strb	r2, [r3]
 892              	.L37:
 888:Generated_Source\PSoC5/RTC_INT.c ****                 }
 889:Generated_Source\PSoC5/RTC_INT.c ****             }
 890:Generated_Source\PSoC5/RTC_INT.c **** 
 891:Generated_Source\PSoC5/RTC_INT.c ****             /* Set Alarm flag event */
 892:Generated_Source\PSoC5/RTC_INT.c ****             RTC_tmp = RTC_alarmCfgMask;
 893              		.loc 1 892 0
 894 048c 1E4B     		ldr	r3, .L50+4
 895 048e 1B78     		ldrb	r3, [r3]
 896 0490 FB71     		strb	r3, [r7, #7]
 893:Generated_Source\PSoC5/RTC_INT.c ****             RTC_SET_ALARM(RTC_tmp,
 897              		.loc 1 893 0
 898 0492 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 899 0494 002B     		cmp	r3, #0
 900 0496 13D0     		beq	.L39
 901              		.loc 1 893 0 is_stmt 0 discriminator 1
 902 0498 1A4B     		ldr	r3, .L50
 903 049a 1B78     		ldrb	r3, [r3]
 904 049c DAB2     		uxtb	r2, r3
 905 049e FB79     		ldrb	r3, [r7, #7]
 906 04a0 1340     		ands	r3, r3, r2
 907 04a2 DBB2     		uxtb	r3, r3
 908 04a4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 909 04a6 9A42     		cmp	r2, r3
 910 04a8 0AD1     		bne	.L39
 911              		.loc 1 893 0 discriminator 2
 912 04aa 184B     		ldr	r3, .L50+8
 913 04ac 1B78     		ldrb	r3, [r3]
 914 04ae DBB2     		uxtb	r3, r3
 915 04b0 43F00803 		orr	r3, r3, #8
 916 04b4 DAB2     		uxtb	r2, r3
 917 04b6 154B     		ldr	r3, .L50+8
 918 04b8 1A70     		strb	r2, [r3]
 919 04ba 124B     		ldr	r3, .L50
 920 04bc 0022     		movs	r2, #0
 921 04be 1A70     		strb	r2, [r3]
 922              	.L39:
 894:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_alarmCurStatus,
 895:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_statusDateTime);
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 33


 896:Generated_Source\PSoC5/RTC_INT.c **** 
 897:Generated_Source\PSoC5/RTC_INT.c ****             /* Every Hour */
 898:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_HOUR_MASK))
 923              		.loc 1 898 0 is_stmt 1
 924 04c0 134B     		ldr	r3, .L50+12
 925 04c2 1B78     		ldrb	r3, [r3]
 926 04c4 DBB2     		uxtb	r3, r3
 927 04c6 03F00403 		and	r3, r3, #4
 928 04ca 002B     		cmp	r3, #0
 929 04cc 01D0     		beq	.L10
 899:Generated_Source\PSoC5/RTC_INT.c ****             {
 900:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_EveryHourHandler();
 930              		.loc 1 900 0
 931 04ce FFF7FEFF 		bl	RTC_EveryHourHandler
 932              	.L10:
 901:Generated_Source\PSoC5/RTC_INT.c ****             }
 902:Generated_Source\PSoC5/RTC_INT.c ****         } /* Min > 59 = Hour */
 903:Generated_Source\PSoC5/RTC_INT.c **** 
 904:Generated_Source\PSoC5/RTC_INT.c ****         /* Alarm MIN */
 905:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_MIN_MASK))
 933              		.loc 1 905 0
 934 04d2 0D4B     		ldr	r3, .L50+4
 935 04d4 1B78     		ldrb	r3, [r3]
 936 04d6 DBB2     		uxtb	r3, r3
 937 04d8 03F00203 		and	r3, r3, #2
 938 04dc 002B     		cmp	r3, #0
 939 04de 25D0     		beq	.L40
 906:Generated_Source\PSoC5/RTC_INT.c ****         {
 907:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_alarmCfgTimeDate.Min == RTC_currentTimeDate.Min)
 940              		.loc 1 907 0
 941 04e0 0C4B     		ldr	r3, .L50+16
 942 04e2 5B78     		ldrb	r3, [r3, #1]
 943 04e4 DAB2     		uxtb	r2, r3
 944 04e6 0C4B     		ldr	r3, .L50+20
 945 04e8 5B78     		ldrb	r3, [r3, #1]
 946 04ea DBB2     		uxtb	r3, r3
 947 04ec 9A42     		cmp	r2, r3
 948 04ee 15D1     		bne	.L41
 908:Generated_Source\PSoC5/RTC_INT.c ****             {
 909:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus |= RTC_ALARM_MIN_MASK;
 949              		.loc 1 909 0
 950 04f0 044B     		ldr	r3, .L50
 951 04f2 1B78     		ldrb	r3, [r3]
 952 04f4 DBB2     		uxtb	r3, r3
 953 04f6 43F00203 		orr	r3, r3, #2
 954 04fa DAB2     		uxtb	r2, r3
 955 04fc 014B     		ldr	r3, .L50
 956 04fe 1A70     		strb	r2, [r3]
 957 0500 14E0     		b	.L40
 958              	.L51:
 959 0502 00BF     		.align	2
 960              	.L50:
 961 0504 00000000 		.word	RTC_alarmCurStatus
 962 0508 00000000 		.word	RTC_alarmCfgMask
 963 050c 00000000 		.word	RTC_statusDateTime
 964 0510 00000000 		.word	RTC_intervalCfgMask
 965 0514 00000000 		.word	RTC_alarmCfgTimeDate
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 34


 966 0518 00000000 		.word	RTC_currentTimeDate
 967              	.L41:
 910:Generated_Source\PSoC5/RTC_INT.c ****             }
 911:Generated_Source\PSoC5/RTC_INT.c ****             else
 912:Generated_Source\PSoC5/RTC_INT.c ****             {
 913:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MIN_MASK);
 968              		.loc 1 913 0
 969 051c 384B     		ldr	r3, .L52
 970 051e 1B78     		ldrb	r3, [r3]
 971 0520 DBB2     		uxtb	r3, r3
 972 0522 23F00203 		bic	r3, r3, #2
 973 0526 DAB2     		uxtb	r2, r3
 974 0528 354B     		ldr	r3, .L52
 975 052a 1A70     		strb	r2, [r3]
 976              	.L40:
 914:Generated_Source\PSoC5/RTC_INT.c ****             }
 915:Generated_Source\PSoC5/RTC_INT.c ****         }
 916:Generated_Source\PSoC5/RTC_INT.c **** 
 917:Generated_Source\PSoC5/RTC_INT.c ****         /* Set Alarm flag event */
 918:Generated_Source\PSoC5/RTC_INT.c ****         RTC_tmp = RTC_alarmCfgMask;
 977              		.loc 1 918 0
 978 052c 354B     		ldr	r3, .L52+4
 979 052e 1B78     		ldrb	r3, [r3]
 980 0530 FB71     		strb	r3, [r7, #7]
 919:Generated_Source\PSoC5/RTC_INT.c ****         RTC_SET_ALARM(RTC_tmp,
 981              		.loc 1 919 0
 982 0532 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 983 0534 002B     		cmp	r3, #0
 984 0536 13D0     		beq	.L42
 985              		.loc 1 919 0 is_stmt 0 discriminator 1
 986 0538 314B     		ldr	r3, .L52
 987 053a 1B78     		ldrb	r3, [r3]
 988 053c DAB2     		uxtb	r2, r3
 989 053e FB79     		ldrb	r3, [r7, #7]
 990 0540 1340     		ands	r3, r3, r2
 991 0542 DBB2     		uxtb	r3, r3
 992 0544 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 993 0546 9A42     		cmp	r2, r3
 994 0548 0AD1     		bne	.L42
 995              		.loc 1 919 0 discriminator 2
 996 054a 2F4B     		ldr	r3, .L52+8
 997 054c 1B78     		ldrb	r3, [r3]
 998 054e DBB2     		uxtb	r3, r3
 999 0550 43F00803 		orr	r3, r3, #8
 1000 0554 DAB2     		uxtb	r2, r3
 1001 0556 2C4B     		ldr	r3, .L52+8
 1002 0558 1A70     		strb	r2, [r3]
 1003 055a 294B     		ldr	r3, .L52
 1004 055c 0022     		movs	r2, #0
 1005 055e 1A70     		strb	r2, [r3]
 1006              	.L42:
 920:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_alarmCurStatus,
 921:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_statusDateTime);
 922:Generated_Source\PSoC5/RTC_INT.c **** 
 923:Generated_Source\PSoC5/RTC_INT.c ****         /* Every Min */
 924:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_MIN_MASK))
 1007              		.loc 1 924 0 is_stmt 1
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 35


 1008 0560 2A4B     		ldr	r3, .L52+12
 1009 0562 1B78     		ldrb	r3, [r3]
 1010 0564 DBB2     		uxtb	r3, r3
 1011 0566 03F00203 		and	r3, r3, #2
 1012 056a 002B     		cmp	r3, #0
 1013 056c 01D0     		beq	.L9
 925:Generated_Source\PSoC5/RTC_INT.c ****         {
 926:Generated_Source\PSoC5/RTC_INT.c ****             RTC_EveryMinuteHandler();
 1014              		.loc 1 926 0
 1015 056e FFF7FEFF 		bl	RTC_EveryMinuteHandler
 1016              	.L9:
 927:Generated_Source\PSoC5/RTC_INT.c ****         }
 928:Generated_Source\PSoC5/RTC_INT.c ****     } /* Sec */
 929:Generated_Source\PSoC5/RTC_INT.c **** 
 930:Generated_Source\PSoC5/RTC_INT.c ****     /* Alarm SEC */
 931:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_SEC_MASK))
 1017              		.loc 1 931 0
 1018 0572 244B     		ldr	r3, .L52+4
 1019 0574 1B78     		ldrb	r3, [r3]
 1020 0576 DBB2     		uxtb	r3, r3
 1021 0578 03F00103 		and	r3, r3, #1
 1022 057c 002B     		cmp	r3, #0
 1023 057e 18D0     		beq	.L43
 932:Generated_Source\PSoC5/RTC_INT.c ****     {
 933:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_alarmCfgTimeDate.Sec == RTC_currentTimeDate.Sec)
 1024              		.loc 1 933 0
 1025 0580 234B     		ldr	r3, .L52+16
 1026 0582 1B78     		ldrb	r3, [r3]
 1027 0584 DAB2     		uxtb	r2, r3
 1028 0586 234B     		ldr	r3, .L52+20
 1029 0588 1B78     		ldrb	r3, [r3]
 1030 058a DBB2     		uxtb	r3, r3
 1031 058c 9A42     		cmp	r2, r3
 1032 058e 08D1     		bne	.L44
 934:Generated_Source\PSoC5/RTC_INT.c ****         {
 935:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus |= RTC_ALARM_SEC_MASK;
 1033              		.loc 1 935 0
 1034 0590 1B4B     		ldr	r3, .L52
 1035 0592 1B78     		ldrb	r3, [r3]
 1036 0594 DBB2     		uxtb	r3, r3
 1037 0596 43F00103 		orr	r3, r3, #1
 1038 059a DAB2     		uxtb	r2, r3
 1039 059c 184B     		ldr	r3, .L52
 1040 059e 1A70     		strb	r2, [r3]
 1041 05a0 07E0     		b	.L43
 1042              	.L44:
 936:Generated_Source\PSoC5/RTC_INT.c ****         }
 937:Generated_Source\PSoC5/RTC_INT.c ****         else
 938:Generated_Source\PSoC5/RTC_INT.c ****         {
 939:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_SEC_MASK);
 1043              		.loc 1 939 0
 1044 05a2 174B     		ldr	r3, .L52
 1045 05a4 1B78     		ldrb	r3, [r3]
 1046 05a6 DBB2     		uxtb	r3, r3
 1047 05a8 23F00103 		bic	r3, r3, #1
 1048 05ac DAB2     		uxtb	r2, r3
 1049 05ae 144B     		ldr	r3, .L52
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 36


 1050 05b0 1A70     		strb	r2, [r3]
 1051              	.L43:
 940:Generated_Source\PSoC5/RTC_INT.c ****         }
 941:Generated_Source\PSoC5/RTC_INT.c ****     }
 942:Generated_Source\PSoC5/RTC_INT.c **** 
 943:Generated_Source\PSoC5/RTC_INT.c ****     /* Set Alarm flag event */
 944:Generated_Source\PSoC5/RTC_INT.c ****     RTC_tmp = RTC_alarmCfgMask;
 1052              		.loc 1 944 0
 1053 05b2 144B     		ldr	r3, .L52+4
 1054 05b4 1B78     		ldrb	r3, [r3]
 1055 05b6 FB71     		strb	r3, [r7, #7]
 945:Generated_Source\PSoC5/RTC_INT.c ****     RTC_SET_ALARM(RTC_tmp, RTC_alarmCurStatus, RTC_statusDateTime);
 1056              		.loc 1 945 0
 1057 05b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1058 05ba 002B     		cmp	r3, #0
 1059 05bc 13D0     		beq	.L45
 1060              		.loc 1 945 0 is_stmt 0 discriminator 1
 1061 05be 104B     		ldr	r3, .L52
 1062 05c0 1B78     		ldrb	r3, [r3]
 1063 05c2 DAB2     		uxtb	r2, r3
 1064 05c4 FB79     		ldrb	r3, [r7, #7]
 1065 05c6 1340     		ands	r3, r3, r2
 1066 05c8 DBB2     		uxtb	r3, r3
 1067 05ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1068 05cc 9A42     		cmp	r2, r3
 1069 05ce 0AD1     		bne	.L45
 1070              		.loc 1 945 0 discriminator 2
 1071 05d0 0D4B     		ldr	r3, .L52+8
 1072 05d2 1B78     		ldrb	r3, [r3]
 1073 05d4 DBB2     		uxtb	r3, r3
 1074 05d6 43F00803 		orr	r3, r3, #8
 1075 05da DAB2     		uxtb	r2, r3
 1076 05dc 0A4B     		ldr	r3, .L52+8
 1077 05de 1A70     		strb	r2, [r3]
 1078 05e0 074B     		ldr	r3, .L52
 1079 05e2 0022     		movs	r2, #0
 1080 05e4 1A70     		strb	r2, [r3]
 1081              	.L45:
 946:Generated_Source\PSoC5/RTC_INT.c **** 
 947:Generated_Source\PSoC5/RTC_INT.c ****     /* Execute every second handler if needed */
 948:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_SEC_MASK))
 1082              		.loc 1 948 0 is_stmt 1
 1083 05e6 094B     		ldr	r3, .L52+12
 1084 05e8 1B78     		ldrb	r3, [r3]
 1085 05ea DBB2     		uxtb	r3, r3
 1086 05ec 03F00103 		and	r3, r3, #1
 1087 05f0 002B     		cmp	r3, #0
 1088 05f2 01D0     		beq	.L47
 949:Generated_Source\PSoC5/RTC_INT.c ****     {
 950:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler();
 1089              		.loc 1 950 0
 1090 05f4 FFF7FEFF 		bl	RTC_EverySecondHandler
 1091              	.L47:
 951:Generated_Source\PSoC5/RTC_INT.c ****     }
 952:Generated_Source\PSoC5/RTC_INT.c ****     
 953:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_EXIT_CALLBACK
 954:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_ExitCallback();
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 37


 955:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_EXIT_CALLBACK */
 956:Generated_Source\PSoC5/RTC_INT.c **** }
 1092              		.loc 1 956 0
 1093 05f8 00BF     		nop
 1094 05fa 0837     		adds	r7, r7, #8
 1095              		.cfi_def_cfa_offset 8
 1096 05fc BD46     		mov	sp, r7
 1097              		.cfi_def_cfa_register 13
 1098              		@ sp needed
 1099 05fe 80BD     		pop	{r7, pc}
 1100              	.L53:
 1101              		.align	2
 1102              	.L52:
 1103 0600 00000000 		.word	RTC_alarmCurStatus
 1104 0604 00000000 		.word	RTC_alarmCfgMask
 1105 0608 00000000 		.word	RTC_statusDateTime
 1106 060c 00000000 		.word	RTC_intervalCfgMask
 1107 0610 00000000 		.word	RTC_alarmCfgTimeDate
 1108 0614 00000000 		.word	RTC_currentTimeDate
 1109              		.cfi_endproc
 1110              	.LFE71:
 1111              		.size	RTC_ISR, .-RTC_ISR
 1112              		.text
 1113              	.Letext0:
 1114              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1115              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1116              		.file 4 "Generated_Source\\PSoC5\\cytypes.h"
 1117              		.file 5 "Generated_Source\\PSoC5\\RTC.h"
 1118              		.file 6 "./data.h"
 1119              		.file 7 "./modem.h"
 1120              		.file 8 "./notoriOS.h"
 1121              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 1122              		.section	.debug_info,"",%progbits
 1123              	.Ldebug_info0:
 1124 0000 6F060000 		.4byte	0x66f
 1125 0004 0400     		.2byte	0x4
 1126 0006 00000000 		.4byte	.Ldebug_abbrev0
 1127 000a 04       		.byte	0x4
 1128 000b 01       		.uleb128 0x1
 1129 000c 87000000 		.4byte	.LASF100
 1130 0010 0C       		.byte	0xc
 1131 0011 33050000 		.4byte	.LASF101
 1132 0015 54030000 		.4byte	.LASF102
 1133 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1134 001d 00000000 		.4byte	0
 1135 0021 00000000 		.4byte	.Ldebug_line0
 1136 0025 02       		.uleb128 0x2
 1137 0026 01       		.byte	0x1
 1138 0027 06       		.byte	0x6
 1139 0028 BE020000 		.4byte	.LASF0
 1140 002c 02       		.uleb128 0x2
 1141 002d 01       		.byte	0x1
 1142 002e 08       		.byte	0x8
 1143 002f 73020000 		.4byte	.LASF1
 1144 0033 02       		.uleb128 0x2
 1145 0034 02       		.byte	0x2
 1146 0035 05       		.byte	0x5
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 38


 1147 0036 6C000000 		.4byte	.LASF2
 1148 003a 02       		.uleb128 0x2
 1149 003b 02       		.byte	0x2
 1150 003c 07       		.byte	0x7
 1151 003d B4030000 		.4byte	.LASF3
 1152 0041 03       		.uleb128 0x3
 1153 0042 07050000 		.4byte	.LASF9
 1154 0046 02       		.byte	0x2
 1155 0047 3F       		.byte	0x3f
 1156 0048 4C000000 		.4byte	0x4c
 1157 004c 02       		.uleb128 0x2
 1158 004d 04       		.byte	0x4
 1159 004e 05       		.byte	0x5
 1160 004f F1010000 		.4byte	.LASF4
 1161 0053 02       		.uleb128 0x2
 1162 0054 04       		.byte	0x4
 1163 0055 07       		.byte	0x7
 1164 0056 8B040000 		.4byte	.LASF5
 1165 005a 02       		.uleb128 0x2
 1166 005b 08       		.byte	0x8
 1167 005c 05       		.byte	0x5
 1168 005d D5010000 		.4byte	.LASF6
 1169 0061 02       		.uleb128 0x2
 1170 0062 08       		.byte	0x8
 1171 0063 07       		.byte	0x7
 1172 0064 DF020000 		.4byte	.LASF7
 1173 0068 04       		.uleb128 0x4
 1174 0069 04       		.byte	0x4
 1175 006a 05       		.byte	0x5
 1176 006b 696E7400 		.ascii	"int\000"
 1177 006f 02       		.uleb128 0x2
 1178 0070 04       		.byte	0x4
 1179 0071 07       		.byte	0x7
 1180 0072 1A030000 		.4byte	.LASF8
 1181 0076 03       		.uleb128 0x3
 1182 0077 03040000 		.4byte	.LASF10
 1183 007b 03       		.byte	0x3
 1184 007c 2C       		.byte	0x2c
 1185 007d 41000000 		.4byte	0x41
 1186 0081 05       		.uleb128 0x5
 1187 0082 7B010000 		.4byte	.LASF11
 1188 0086 04       		.byte	0x4
 1189 0087 9201     		.2byte	0x192
 1190 0089 2C000000 		.4byte	0x2c
 1191 008d 05       		.uleb128 0x5
 1192 008e 5A010000 		.4byte	.LASF12
 1193 0092 04       		.byte	0x4
 1194 0093 9301     		.2byte	0x193
 1195 0095 3A000000 		.4byte	0x3a
 1196 0099 05       		.uleb128 0x5
 1197 009a 86010000 		.4byte	.LASF13
 1198 009e 04       		.byte	0x4
 1199 009f 9601     		.2byte	0x196
 1200 00a1 33000000 		.4byte	0x33
 1201 00a5 05       		.uleb128 0x5
 1202 00a6 9D040000 		.4byte	.LASF14
 1203 00aa 04       		.byte	0x4
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 39


 1204 00ab 9701     		.2byte	0x197
 1205 00ad 4C000000 		.4byte	0x4c
 1206 00b1 02       		.uleb128 0x2
 1207 00b2 04       		.byte	0x4
 1208 00b3 04       		.byte	0x4
 1209 00b4 C5010000 		.4byte	.LASF15
 1210 00b8 02       		.uleb128 0x2
 1211 00b9 08       		.byte	0x8
 1212 00ba 04       		.byte	0x4
 1213 00bb A3040000 		.4byte	.LASF16
 1214 00bf 02       		.uleb128 0x2
 1215 00c0 01       		.byte	0x1
 1216 00c1 08       		.byte	0x8
 1217 00c2 EC010000 		.4byte	.LASF17
 1218 00c6 06       		.uleb128 0x6
 1219 00c7 81000000 		.4byte	0x81
 1220 00cb 07       		.uleb128 0x7
 1221 00cc 0C       		.byte	0xc
 1222 00cd 05       		.byte	0x5
 1223 00ce 30       		.byte	0x30
 1224 00cf 34010000 		.4byte	0x134
 1225 00d3 08       		.uleb128 0x8
 1226 00d4 53656300 		.ascii	"Sec\000"
 1227 00d8 05       		.byte	0x5
 1228 00d9 32       		.byte	0x32
 1229 00da 81000000 		.4byte	0x81
 1230 00de 00       		.byte	0
 1231 00df 08       		.uleb128 0x8
 1232 00e0 4D696E00 		.ascii	"Min\000"
 1233 00e4 05       		.byte	0x5
 1234 00e5 33       		.byte	0x33
 1235 00e6 81000000 		.4byte	0x81
 1236 00ea 01       		.byte	0x1
 1237 00eb 09       		.uleb128 0x9
 1238 00ec 3C010000 		.4byte	.LASF18
 1239 00f0 05       		.byte	0x5
 1240 00f1 34       		.byte	0x34
 1241 00f2 81000000 		.4byte	0x81
 1242 00f6 02       		.byte	0x2
 1243 00f7 09       		.uleb128 0x9
 1244 00f8 CB010000 		.4byte	.LASF19
 1245 00fc 05       		.byte	0x5
 1246 00fd 35       		.byte	0x35
 1247 00fe 81000000 		.4byte	0x81
 1248 0102 03       		.byte	0x3
 1249 0103 09       		.uleb128 0x9
 1250 0104 59040000 		.4byte	.LASF20
 1251 0108 05       		.byte	0x5
 1252 0109 36       		.byte	0x36
 1253 010a 81000000 		.4byte	0x81
 1254 010e 04       		.byte	0x4
 1255 010f 09       		.uleb128 0x9
 1256 0110 D7050000 		.4byte	.LASF21
 1257 0114 05       		.byte	0x5
 1258 0115 37       		.byte	0x37
 1259 0116 8D000000 		.4byte	0x8d
 1260 011a 06       		.byte	0x6
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 40


 1261 011b 09       		.uleb128 0x9
 1262 011c 30020000 		.4byte	.LASF22
 1263 0120 05       		.byte	0x5
 1264 0121 38       		.byte	0x38
 1265 0122 81000000 		.4byte	0x81
 1266 0126 08       		.byte	0x8
 1267 0127 09       		.uleb128 0x9
 1268 0128 22020000 		.4byte	.LASF23
 1269 012c 05       		.byte	0x5
 1270 012d 39       		.byte	0x39
 1271 012e 8D000000 		.4byte	0x8d
 1272 0132 0A       		.byte	0xa
 1273 0133 00       		.byte	0
 1274 0134 03       		.uleb128 0x3
 1275 0135 89050000 		.4byte	.LASF24
 1276 0139 05       		.byte	0x5
 1277 013a 3A       		.byte	0x3a
 1278 013b 3F010000 		.4byte	0x13f
 1279 013f 06       		.uleb128 0x6
 1280 0140 CB000000 		.4byte	0xcb
 1281 0144 02       		.uleb128 0x2
 1282 0145 08       		.byte	0x8
 1283 0146 04       		.byte	0x4
 1284 0147 67020000 		.4byte	.LASF25
 1285 014b 02       		.uleb128 0x2
 1286 014c 04       		.byte	0x4
 1287 014d 07       		.byte	0x7
 1288 014e 76000000 		.4byte	.LASF26
 1289 0152 0A       		.uleb128 0xa
 1290 0153 BF000000 		.4byte	0xbf
 1291 0157 62010000 		.4byte	0x162
 1292 015b 0B       		.uleb128 0xb
 1293 015c 4B010000 		.4byte	0x14b
 1294 0160 17       		.byte	0x17
 1295 0161 00       		.byte	0
 1296 0162 07       		.uleb128 0x7
 1297 0163 2C       		.byte	0x2c
 1298 0164 06       		.byte	0x6
 1299 0165 14       		.byte	0x14
 1300 0166 8F010000 		.4byte	0x18f
 1301 016a 08       		.uleb128 0x8
 1302 016b 6B657900 		.ascii	"key\000"
 1303 016f 06       		.byte	0x6
 1304 0170 15       		.byte	0x15
 1305 0171 8F010000 		.4byte	0x18f
 1306 0175 00       		.byte	0
 1307 0176 09       		.uleb128 0x9
 1308 0177 54010000 		.4byte	.LASF27
 1309 017b 06       		.byte	0x6
 1310 017c 16       		.byte	0x16
 1311 017d 8F010000 		.4byte	0x18f
 1312 0181 14       		.byte	0x14
 1313 0182 09       		.uleb128 0x9
 1314 0183 8C010000 		.4byte	.LASF28
 1315 0187 06       		.byte	0x6
 1316 0188 17       		.byte	0x17
 1317 0189 A5000000 		.4byte	0xa5
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 41


 1318 018d 28       		.byte	0x28
 1319 018e 00       		.byte	0
 1320 018f 0A       		.uleb128 0xa
 1321 0190 BF000000 		.4byte	0xbf
 1322 0194 9F010000 		.4byte	0x19f
 1323 0198 0B       		.uleb128 0xb
 1324 0199 4B010000 		.4byte	0x14b
 1325 019d 13       		.byte	0x13
 1326 019e 00       		.byte	0
 1327 019f 03       		.uleb128 0x3
 1328 01a0 27030000 		.4byte	.LASF29
 1329 01a4 06       		.byte	0x6
 1330 01a5 19       		.byte	0x19
 1331 01a6 62010000 		.4byte	0x162
 1332 01aa 07       		.uleb128 0x7
 1333 01ab 3C       		.byte	0x3c
 1334 01ac 07       		.byte	0x7
 1335 01ad 39       		.byte	0x39
 1336 01ae D7010000 		.4byte	0x1d7
 1337 01b2 09       		.uleb128 0x9
 1338 01b3 20000000 		.4byte	.LASF30
 1339 01b7 07       		.byte	0x7
 1340 01b8 3A       		.byte	0x3a
 1341 01b9 8F010000 		.4byte	0x18f
 1342 01bd 00       		.byte	0
 1343 01be 09       		.uleb128 0x9
 1344 01bf 06000000 		.4byte	.LASF31
 1345 01c3 07       		.byte	0x7
 1346 01c4 3B       		.byte	0x3b
 1347 01c5 8F010000 		.4byte	0x18f
 1348 01c9 14       		.byte	0x14
 1349 01ca 09       		.uleb128 0x9
 1350 01cb FE030000 		.4byte	.LASF32
 1351 01cf 07       		.byte	0x7
 1352 01d0 3C       		.byte	0x3c
 1353 01d1 8F010000 		.4byte	0x18f
 1354 01d5 28       		.byte	0x28
 1355 01d6 00       		.byte	0
 1356 01d7 03       		.uleb128 0x3
 1357 01d8 D9040000 		.4byte	.LASF33
 1358 01dc 07       		.byte	0x7
 1359 01dd 3E       		.byte	0x3e
 1360 01de AA010000 		.4byte	0x1aa
 1361 01e2 07       		.uleb128 0x7
 1362 01e3 20       		.byte	0x20
 1363 01e4 07       		.byte	0x7
 1364 01e5 40       		.byte	0x40
 1365 01e6 4B020000 		.4byte	0x24b
 1366 01ea 09       		.uleb128 0x9
 1367 01eb 33030000 		.4byte	.LASF34
 1368 01ef 07       		.byte	0x7
 1369 01f0 41       		.byte	0x41
 1370 01f1 68000000 		.4byte	0x68
 1371 01f5 00       		.byte	0
 1372 01f6 08       		.uleb128 0x8
 1373 01f7 62657200 		.ascii	"ber\000"
 1374 01fb 07       		.byte	0x7
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 42


 1375 01fc 42       		.byte	0x42
 1376 01fd 68000000 		.4byte	0x68
 1377 0201 04       		.byte	0x4
 1378 0202 09       		.uleb128 0x9
 1379 0203 81010000 		.4byte	.LASF35
 1380 0207 07       		.byte	0x7
 1381 0208 43       		.byte	0x43
 1382 0209 68000000 		.4byte	0x68
 1383 020d 08       		.byte	0x8
 1384 020e 09       		.uleb128 0x9
 1385 020f 4F010000 		.4byte	.LASF36
 1386 0213 07       		.byte	0x7
 1387 0214 44       		.byte	0x44
 1388 0215 68000000 		.4byte	0x68
 1389 0219 0C       		.byte	0xc
 1390 021a 09       		.uleb128 0x9
 1391 021b 64040000 		.4byte	.LASF37
 1392 021f 07       		.byte	0x7
 1393 0220 45       		.byte	0x45
 1394 0221 68000000 		.4byte	0x68
 1395 0225 10       		.byte	0x10
 1396 0226 09       		.uleb128 0x9
 1397 0227 81020000 		.4byte	.LASF38
 1398 022b 07       		.byte	0x7
 1399 022c 46       		.byte	0x46
 1400 022d 68000000 		.4byte	0x68
 1401 0231 14       		.byte	0x14
 1402 0232 09       		.uleb128 0x9
 1403 0233 C7030000 		.4byte	.LASF39
 1404 0237 07       		.byte	0x7
 1405 0238 47       		.byte	0x47
 1406 0239 68000000 		.4byte	0x68
 1407 023d 18       		.byte	0x18
 1408 023e 09       		.uleb128 0x9
 1409 023f EB030000 		.4byte	.LASF40
 1410 0243 07       		.byte	0x7
 1411 0244 48       		.byte	0x48
 1412 0245 68000000 		.4byte	0x68
 1413 0249 1C       		.byte	0x1c
 1414 024a 00       		.byte	0
 1415 024b 03       		.uleb128 0x3
 1416 024c 13040000 		.4byte	.LASF41
 1417 0250 07       		.byte	0x7
 1418 0251 4A       		.byte	0x4a
 1419 0252 E2010000 		.4byte	0x1e2
 1420 0256 07       		.uleb128 0x7
 1421 0257 10       		.byte	0x10
 1422 0258 07       		.byte	0x7
 1423 0259 4C       		.byte	0x4c
 1424 025a 9B020000 		.4byte	0x29b
 1425 025e 09       		.uleb128 0x9
 1426 025f 43030000 		.4byte	.LASF42
 1427 0263 07       		.byte	0x7
 1428 0264 4D       		.byte	0x4d
 1429 0265 B1000000 		.4byte	0xb1
 1430 0269 00       		.byte	0
 1431 026a 09       		.uleb128 0x9
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 43


 1432 026b 29050000 		.4byte	.LASF43
 1433 026f 07       		.byte	0x7
 1434 0270 4E       		.byte	0x4e
 1435 0271 B1000000 		.4byte	0xb1
 1436 0275 04       		.byte	0x4
 1437 0276 09       		.uleb128 0x9
 1438 0277 E3010000 		.4byte	.LASF44
 1439 027b 07       		.byte	0x7
 1440 027c 4F       		.byte	0x4f
 1441 027d B1000000 		.4byte	0xb1
 1442 0281 08       		.byte	0x8
 1443 0282 09       		.uleb128 0x9
 1444 0283 15010000 		.4byte	.LASF45
 1445 0287 07       		.byte	0x7
 1446 0288 50       		.byte	0x50
 1447 0289 8D000000 		.4byte	0x8d
 1448 028d 0C       		.byte	0xc
 1449 028e 09       		.uleb128 0x9
 1450 028f 00000000 		.4byte	.LASF46
 1451 0293 07       		.byte	0x7
 1452 0294 51       		.byte	0x51
 1453 0295 81000000 		.4byte	0x81
 1454 0299 0E       		.byte	0xe
 1455 029a 00       		.byte	0
 1456 029b 03       		.uleb128 0x3
 1457 029c 3E040000 		.4byte	.LASF47
 1458 02a0 07       		.byte	0x7
 1459 02a1 53       		.byte	0x53
 1460 02a2 56020000 		.4byte	0x256
 1461 02a6 07       		.uleb128 0x7
 1462 02a7 06       		.byte	0x6
 1463 02a8 07       		.byte	0x7
 1464 02a9 56       		.byte	0x56
 1465 02aa F7020000 		.4byte	0x2f7
 1466 02ae 09       		.uleb128 0x9
 1467 02af B5050000 		.4byte	.LASF48
 1468 02b3 07       		.byte	0x7
 1469 02b4 58       		.byte	0x58
 1470 02b5 81000000 		.4byte	0x81
 1471 02b9 00       		.byte	0
 1472 02ba 09       		.uleb128 0x9
 1473 02bb A0030000 		.4byte	.LASF49
 1474 02bf 07       		.byte	0x7
 1475 02c0 5A       		.byte	0x5a
 1476 02c1 F7020000 		.4byte	0x2f7
 1477 02c5 01       		.byte	0x1
 1478 02c6 09       		.uleb128 0x9
 1479 02c7 50020000 		.4byte	.LASF50
 1480 02cb 07       		.byte	0x7
 1481 02cc 5C       		.byte	0x5c
 1482 02cd 81000000 		.4byte	0x81
 1483 02d1 02       		.byte	0x2
 1484 02d2 09       		.uleb128 0x9
 1485 02d3 39030000 		.4byte	.LASF51
 1486 02d7 07       		.byte	0x7
 1487 02d8 5E       		.byte	0x5e
 1488 02d9 81000000 		.4byte	0x81
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 44


 1489 02dd 03       		.byte	0x3
 1490 02de 09       		.uleb128 0x9
 1491 02df CD040000 		.4byte	.LASF52
 1492 02e3 07       		.byte	0x7
 1493 02e4 61       		.byte	0x61
 1494 02e5 81000000 		.4byte	0x81
 1495 02e9 04       		.byte	0x4
 1496 02ea 08       		.uleb128 0x8
 1497 02eb 67707300 		.ascii	"gps\000"
 1498 02ef 07       		.byte	0x7
 1499 02f0 63       		.byte	0x63
 1500 02f1 81000000 		.4byte	0x81
 1501 02f5 05       		.byte	0x5
 1502 02f6 00       		.byte	0
 1503 02f7 02       		.uleb128 0x2
 1504 02f8 01       		.byte	0x1
 1505 02f9 02       		.byte	0x2
 1506 02fa 21040000 		.4byte	.LASF53
 1507 02fe 03       		.uleb128 0x3
 1508 02ff 89030000 		.4byte	.LASF54
 1509 0303 07       		.byte	0x7
 1510 0304 65       		.byte	0x65
 1511 0305 A6020000 		.4byte	0x2a6
 1512 0309 07       		.uleb128 0x7
 1513 030a 06       		.byte	0x6
 1514 030b 08       		.byte	0x8
 1515 030c 2D       		.byte	0x2d
 1516 030d 42030000 		.4byte	0x342
 1517 0311 09       		.uleb128 0x9
 1518 0312 5D000000 		.4byte	.LASF55
 1519 0316 08       		.byte	0x8
 1520 0317 2F       		.byte	0x2f
 1521 0318 8D000000 		.4byte	0x8d
 1522 031c 00       		.byte	0
 1523 031d 09       		.uleb128 0x9
 1524 031e 47000000 		.4byte	.LASF56
 1525 0322 08       		.byte	0x8
 1526 0323 30       		.byte	0x30
 1527 0324 99000000 		.4byte	0x99
 1528 0328 02       		.byte	0x2
 1529 0329 09       		.uleb128 0x9
 1530 032a E6040000 		.4byte	.LASF57
 1531 032e 08       		.byte	0x8
 1532 032f 31       		.byte	0x31
 1533 0330 81000000 		.4byte	0x81
 1534 0334 04       		.byte	0x4
 1535 0335 09       		.uleb128 0x9
 1536 0336 11050000 		.4byte	.LASF58
 1537 033a 08       		.byte	0x8
 1538 033b 32       		.byte	0x32
 1539 033c 81000000 		.4byte	0x81
 1540 0340 05       		.byte	0x5
 1541 0341 00       		.byte	0
 1542 0342 03       		.uleb128 0x3
 1543 0343 4A020000 		.4byte	.LASF59
 1544 0347 08       		.byte	0x8
 1545 0348 35       		.byte	0x35
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 45


 1546 0349 4D030000 		.4byte	0x34d
 1547 034d 06       		.uleb128 0x6
 1548 034e 09030000 		.4byte	0x309
 1549 0352 07       		.uleb128 0x7
 1550 0353 1C       		.byte	0x1c
 1551 0354 08       		.byte	0x8
 1552 0355 38       		.byte	0x38
 1553 0356 73030000 		.4byte	0x373
 1554 035a 09       		.uleb128 0x9
 1555 035b 0A020000 		.4byte	.LASF60
 1556 035f 08       		.byte	0x8
 1557 0360 3A       		.byte	0x3a
 1558 0361 73030000 		.4byte	0x373
 1559 0365 00       		.byte	0
 1560 0366 09       		.uleb128 0x9
 1561 0367 41010000 		.4byte	.LASF61
 1562 036b 08       		.byte	0x8
 1563 036c 3B       		.byte	0x3b
 1564 036d 52010000 		.4byte	0x152
 1565 0371 04       		.byte	0x4
 1566 0372 00       		.byte	0
 1567 0373 0C       		.uleb128 0xc
 1568 0374 04       		.byte	0x4
 1569 0375 D7010000 		.4byte	0x1d7
 1570 0379 03       		.uleb128 0x3
 1571 037a A9030000 		.4byte	.LASF62
 1572 037e 08       		.byte	0x8
 1573 037f 3D       		.byte	0x3d
 1574 0380 52030000 		.4byte	0x352
 1575 0384 07       		.uleb128 0x7
 1576 0385 68       		.byte	0x68
 1577 0386 08       		.byte	0x8
 1578 0387 43       		.byte	0x43
 1579 0388 A5030000 		.4byte	0x3a5
 1580 038c 09       		.uleb128 0x9
 1581 038d 7F000000 		.4byte	.LASF63
 1582 0391 08       		.byte	0x8
 1583 0392 48       		.byte	0x48
 1584 0393 A5030000 		.4byte	0x3a5
 1585 0397 00       		.byte	0
 1586 0398 09       		.uleb128 0x9
 1587 0399 61010000 		.4byte	.LASF64
 1588 039d 08       		.byte	0x8
 1589 039e 49       		.byte	0x49
 1590 039f 68000000 		.4byte	0x68
 1591 03a3 64       		.byte	0x64
 1592 03a4 00       		.byte	0
 1593 03a5 0A       		.uleb128 0xa
 1594 03a6 BF000000 		.4byte	0xbf
 1595 03aa B5030000 		.4byte	0x3b5
 1596 03ae 0B       		.uleb128 0xb
 1597 03af 4B010000 		.4byte	0x14b
 1598 03b3 63       		.byte	0x63
 1599 03b4 00       		.byte	0
 1600 03b5 03       		.uleb128 0x3
 1601 03b6 38000000 		.4byte	.LASF65
 1602 03ba 08       		.byte	0x8
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 46


 1603 03bb 4F       		.byte	0x4f
 1604 03bc 84030000 		.4byte	0x384
 1605 03c0 0D       		.uleb128 0xd
 1606 03c1 AA040000 		.4byte	.LASF66
 1607 03c5 01       		.byte	0x1
 1608 03c6 36       		.byte	0x36
 1609 03c7 00000000 		.4byte	.LFB64
 1610 03cb 0E000000 		.4byte	.LFE64-.LFB64
 1611 03cf 01       		.uleb128 0x1
 1612 03d0 9C       		.byte	0x9c
 1613 03d1 0D       		.uleb128 0xd
 1614 03d2 74040000 		.4byte	.LASF67
 1615 03d6 01       		.byte	0x1
 1616 03d7 51       		.byte	0x51
 1617 03d8 00000000 		.4byte	.LFB65
 1618 03dc 0E000000 		.4byte	.LFE65-.LFB65
 1619 03e0 01       		.uleb128 0x1
 1620 03e1 9C       		.byte	0x9c
 1621 03e2 0D       		.uleb128 0xd
 1622 03e3 44040000 		.4byte	.LASF68
 1623 03e7 01       		.byte	0x1
 1624 03e8 6C       		.byte	0x6c
 1625 03e9 00000000 		.4byte	.LFB66
 1626 03ed 0E000000 		.4byte	.LFE66-.LFB66
 1627 03f1 01       		.uleb128 0x1
 1628 03f2 9C       		.byte	0x9c
 1629 03f3 0D       		.uleb128 0xd
 1630 03f4 36020000 		.4byte	.LASF69
 1631 03f8 01       		.byte	0x1
 1632 03f9 87       		.byte	0x87
 1633 03fa 00000000 		.4byte	.LFB67
 1634 03fe 0E000000 		.4byte	.LFE67-.LFB67
 1635 0402 01       		.uleb128 0x1
 1636 0403 9C       		.byte	0x9c
 1637 0404 0D       		.uleb128 0xd
 1638 0405 22010000 		.4byte	.LASF70
 1639 0409 01       		.byte	0x1
 1640 040a A2       		.byte	0xa2
 1641 040b 00000000 		.4byte	.LFB68
 1642 040f 0E000000 		.4byte	.LFE68-.LFB68
 1643 0413 01       		.uleb128 0x1
 1644 0414 9C       		.byte	0x9c
 1645 0415 0D       		.uleb128 0xd
 1646 0416 96010000 		.4byte	.LASF71
 1647 041a 01       		.byte	0x1
 1648 041b BD       		.byte	0xbd
 1649 041c 00000000 		.4byte	.LFB69
 1650 0420 0E000000 		.4byte	.LFE69-.LFB69
 1651 0424 01       		.uleb128 0x1
 1652 0425 9C       		.byte	0x9c
 1653 0426 0D       		.uleb128 0xd
 1654 0427 CA020000 		.4byte	.LASF72
 1655 042b 01       		.byte	0x1
 1656 042c D8       		.byte	0xd8
 1657 042d 00000000 		.4byte	.LFB70
 1658 0431 0E000000 		.4byte	.LFE70-.LFB70
 1659 0435 01       		.uleb128 0x1
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 47


 1660 0436 9C       		.byte	0x9c
 1661 0437 0E       		.uleb128 0xe
 1662 0438 4C030000 		.4byte	.LASF103
 1663 043c 01       		.byte	0x1
 1664 043d 0B01     		.2byte	0x10b
 1665 043f 00000000 		.4byte	.LFB71
 1666 0443 18060000 		.4byte	.LFE71-.LFB71
 1667 0447 01       		.uleb128 0x1
 1668 0448 9C       		.byte	0x9c
 1669 0449 5D040000 		.4byte	0x45d
 1670 044d 0F       		.uleb128 0xf
 1671 044e 0B040000 		.4byte	.LASF104
 1672 0452 01       		.byte	0x1
 1673 0453 0D01     		.2byte	0x10d
 1674 0455 81000000 		.4byte	0x81
 1675 0459 02       		.uleb128 0x2
 1676 045a 91       		.byte	0x91
 1677 045b 77       		.sleb128 -9
 1678 045c 00       		.byte	0
 1679 045d 10       		.uleb128 0x10
 1680 045e 9D020000 		.4byte	.LASF73
 1681 0462 05       		.byte	0x5
 1682 0463 2D01     		.2byte	0x12d
 1683 0465 34010000 		.4byte	0x134
 1684 0469 10       		.uleb128 0x10
 1685 046a 06030000 		.4byte	.LASF74
 1686 046e 05       		.byte	0x5
 1687 046f 2E01     		.2byte	0x12e
 1688 0471 34010000 		.4byte	0x134
 1689 0475 10       		.uleb128 0x10
 1690 0476 0F000000 		.4byte	.LASF75
 1691 047a 05       		.byte	0x5
 1692 047b 3901     		.2byte	0x139
 1693 047d C6000000 		.4byte	0xc6
 1694 0481 10       		.uleb128 0x10
 1695 0482 54050000 		.4byte	.LASF76
 1696 0486 05       		.byte	0x5
 1697 0487 3A01     		.2byte	0x13a
 1698 0489 C6000000 		.4byte	0xc6
 1699 048d 10       		.uleb128 0x10
 1700 048e 97050000 		.4byte	.LASF77
 1701 0492 05       		.byte	0x5
 1702 0493 3B01     		.2byte	0x13b
 1703 0495 C6000000 		.4byte	0xc6
 1704 0499 10       		.uleb128 0x10
 1705 049a F4040000 		.4byte	.LASF78
 1706 049e 05       		.byte	0x5
 1707 049f 3C01     		.2byte	0x13c
 1708 04a1 C6000000 		.4byte	0xc6
 1709 04a5 0A       		.uleb128 0xa
 1710 04a6 B5040000 		.4byte	0x4b5
 1711 04aa B5040000 		.4byte	0x4b5
 1712 04ae 0B       		.uleb128 0xb
 1713 04af 4B010000 		.4byte	0x14b
 1714 04b3 0B       		.byte	0xb
 1715 04b4 00       		.byte	0
 1716 04b5 11       		.uleb128 0x11
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 48


 1717 04b6 81000000 		.4byte	0x81
 1718 04ba 10       		.uleb128 0x10
 1719 04bb 27000000 		.4byte	.LASF79
 1720 04bf 05       		.byte	0x5
 1721 04c0 3E01     		.2byte	0x13e
 1722 04c2 C6040000 		.4byte	0x4c6
 1723 04c6 11       		.uleb128 0x11
 1724 04c7 A5040000 		.4byte	0x4a5
 1725 04cb 10       		.uleb128 0x10
 1726 04cc 7C050000 		.4byte	.LASF80
 1727 04d0 09       		.byte	0x9
 1728 04d1 1207     		.2byte	0x712
 1729 04d3 D7040000 		.4byte	0x4d7
 1730 04d7 06       		.uleb128 0x6
 1731 04d8 76000000 		.4byte	0x76
 1732 04dc 12       		.uleb128 0x12
 1733 04dd FA010000 		.4byte	.LASF81
 1734 04e1 06       		.byte	0x6
 1735 04e2 11       		.byte	0x11
 1736 04e3 F7020000 		.4byte	0x2f7
 1737 04e7 05       		.uleb128 0x5
 1738 04e8 03       		.byte	0x3
 1739 04e9 00000000 		.4byte	buffer_overflow
 1740 04ed 12       		.uleb128 0x12
 1741 04ee 69010000 		.4byte	.LASF82
 1742 04f2 06       		.byte	0x6
 1743 04f3 22       		.byte	0x22
 1744 04f4 8D000000 		.4byte	0x8d
 1745 04f8 05       		.uleb128 0x5
 1746 04f9 03       		.byte	0x3
 1747 04fa 00000000 		.4byte	dataPointsInStack
 1748 04fe 12       		.uleb128 0x12
 1749 04ff AC010000 		.4byte	.LASF83
 1750 0503 06       		.byte	0x6
 1751 0504 23       		.byte	0x23
 1752 0505 8D000000 		.4byte	0x8d
 1753 0509 05       		.uleb128 0x5
 1754 050a 03       		.byte	0x3
 1755 050b 00000000 		.4byte	dataPointsInStackDesired
 1756 050f 0A       		.uleb128 0xa
 1757 0510 9F010000 		.4byte	0x19f
 1758 0514 1F050000 		.4byte	0x51f
 1759 0518 0B       		.uleb128 0xb
 1760 0519 4B010000 		.4byte	0x14b
 1761 051d 95       		.byte	0x95
 1762 051e 00       		.byte	0
 1763 051f 12       		.uleb128 0x12
 1764 0520 37010000 		.4byte	.LASF84
 1765 0524 06       		.byte	0x6
 1766 0525 24       		.byte	0x24
 1767 0526 0F050000 		.4byte	0x50f
 1768 052a 05       		.uleb128 0x5
 1769 052b 03       		.byte	0x3
 1770 052c 00000000 		.4byte	data
 1771 0530 12       		.uleb128 0x12
 1772 0531 B2020000 		.4byte	.LASF85
 1773 0535 07       		.byte	0x7
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 49


 1774 0536 23       		.byte	0x23
 1775 0537 81000000 		.4byte	0x81
 1776 053b 05       		.uleb128 0x5
 1777 053c 03       		.byte	0x3
 1778 053d 00000000 		.4byte	modem_state
 1779 0541 12       		.uleb128 0x12
 1780 0542 86020000 		.4byte	.LASF86
 1781 0546 07       		.byte	0x7
 1782 0547 69       		.byte	0x69
 1783 0548 A5000000 		.4byte	0xa5
 1784 054c 05       		.uleb128 0x5
 1785 054d 03       		.byte	0x3
 1786 054e 00000000 		.4byte	modem_start_time_stamp
 1787 0552 12       		.uleb128 0x12
 1788 0553 0A020000 		.4byte	.LASF60
 1789 0557 07       		.byte	0x7
 1790 0558 6A       		.byte	0x6a
 1791 0559 D7010000 		.4byte	0x1d7
 1792 055d 05       		.uleb128 0x5
 1793 055e 03       		.byte	0x3
 1794 055f 00000000 		.4byte	modem_info
 1795 0563 12       		.uleb128 0x12
 1796 0564 C1040000 		.4byte	.LASF87
 1797 0568 07       		.byte	0x7
 1798 0569 6B       		.byte	0x6b
 1799 056a 4B020000 		.4byte	0x24b
 1800 056e 05       		.uleb128 0x5
 1801 056f 03       		.byte	0x3
 1802 0570 00000000 		.4byte	modem_stats
 1803 0574 12       		.uleb128 0x12
 1804 0575 67050000 		.4byte	.LASF88
 1805 0579 07       		.byte	0x7
 1806 057a 6C       		.byte	0x6c
 1807 057b FE020000 		.4byte	0x2fe
 1808 057f 05       		.uleb128 0x5
 1809 0580 03       		.byte	0x3
 1810 0581 00000000 		.4byte	updatable_parameters
 1811 0585 12       		.uleb128 0x12
 1812 0586 27020000 		.4byte	.LASF89
 1813 058a 07       		.byte	0x7
 1814 058b 6D       		.byte	0x6d
 1815 058c 9B020000 		.4byte	0x29b
 1816 0590 05       		.uleb128 0x5
 1817 0591 03       		.byte	0x3
 1818 0592 00000000 		.4byte	gps_data
 1819 0596 0A       		.uleb128 0xa
 1820 0597 BF000000 		.4byte	0xbf
 1821 059b A7050000 		.4byte	0x5a7
 1822 059f 13       		.uleb128 0x13
 1823 05a0 4B010000 		.4byte	0x14b
 1824 05a4 0F27     		.2byte	0x270f
 1825 05a6 00       		.byte	0
 1826 05a7 12       		.uleb128 0x12
 1827 05a8 BF050000 		.4byte	.LASF90
 1828 05ac 08       		.byte	0x8
 1829 05ad 17       		.byte	0x17
 1830 05ae 96050000 		.4byte	0x596
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 50


 1831 05b2 05       		.uleb128 0x5
 1832 05b3 03       		.byte	0x3
 1833 05b4 00000000 		.4byte	http_request
 1834 05b8 12       		.uleb128 0x12
 1835 05b9 AB050000 		.4byte	.LASF91
 1836 05bd 08       		.byte	0x8
 1837 05be 18       		.byte	0x18
 1838 05bf 96050000 		.4byte	0x596
 1839 05c3 05       		.uleb128 0x5
 1840 05c4 03       		.byte	0x3
 1841 05c5 00000000 		.4byte	http_body
 1842 05c9 0A       		.uleb128 0xa
 1843 05ca BF000000 		.4byte	0xbf
 1844 05ce D9050000 		.4byte	0x5d9
 1845 05d2 0B       		.uleb128 0xb
 1846 05d3 4B010000 		.4byte	0x14b
 1847 05d7 C7       		.byte	0xc7
 1848 05d8 00       		.byte	0
 1849 05d9 12       		.uleb128 0x12
 1850 05da 69040000 		.4byte	.LASF92
 1851 05de 08       		.byte	0x8
 1852 05df 19       		.byte	0x19
 1853 05e0 C9050000 		.4byte	0x5c9
 1854 05e4 05       		.uleb128 0x5
 1855 05e5 03       		.byte	0x3
 1856 05e6 00000000 		.4byte	http_route
 1857 05ea 12       		.uleb128 0x12
 1858 05eb DF030000 		.4byte	.LASF93
 1859 05ef 08       		.byte	0x8
 1860 05f0 40       		.byte	0x40
 1861 05f1 79030000 		.4byte	0x379
 1862 05f5 05       		.uleb128 0x5
 1863 05f6 03       		.byte	0x3
 1864 05f7 00000000 		.4byte	system_info
 1865 05fb 12       		.uleb128 0x12
 1866 05fc F6020000 		.4byte	.LASF94
 1867 0600 08       		.byte	0x8
 1868 0601 52       		.byte	0x52
 1869 0602 B5030000 		.4byte	0x3b5
 1870 0606 05       		.uleb128 0x5
 1871 0607 03       		.byte	0x3
 1872 0608 00000000 		.4byte	system_settings
 1873 060c 12       		.uleb128 0x12
 1874 060d 15020000 		.4byte	.LASF95
 1875 0611 08       		.byte	0x8
 1876 0612 6E       		.byte	0x6e
 1877 0613 42030000 		.4byte	0x342
 1878 0617 05       		.uleb128 0x5
 1879 0618 03       		.byte	0x3
 1880 0619 00000000 		.4byte	alarmMeasure
 1881 061d 12       		.uleb128 0x12
 1882 061e 7B030000 		.4byte	.LASF96
 1883 0622 08       		.byte	0x8
 1884 0623 6F       		.byte	0x6f
 1885 0624 81000000 		.4byte	0x81
 1886 0628 05       		.uleb128 0x5
 1887 0629 03       		.byte	0x3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 51


 1888 062a 00000000 		.4byte	timeToMeasure
 1889 062e 12       		.uleb128 0x12
 1890 062f 5D020000 		.4byte	.LASF97
 1891 0633 08       		.byte	0x8
 1892 0634 70       		.byte	0x70
 1893 0635 42030000 		.4byte	0x342
 1894 0639 05       		.uleb128 0x5
 1895 063a 03       		.byte	0x3
 1896 063b 00000000 		.4byte	alarmSync
 1897 063f 12       		.uleb128 0x12
 1898 0640 CC050000 		.4byte	.LASF98
 1899 0644 08       		.byte	0x8
 1900 0645 71       		.byte	0x71
 1901 0646 81000000 		.4byte	0x81
 1902 064a 05       		.uleb128 0x5
 1903 064b 03       		.byte	0x3
 1904 064c 00000000 		.4byte	timeToSync
 1905 0650 12       		.uleb128 0x12
 1906 0651 27040000 		.4byte	.LASF99
 1907 0655 08       		.byte	0x8
 1908 0656 72       		.byte	0x72
 1909 0657 81000000 		.4byte	0x81
 1910 065b 05       		.uleb128 0x5
 1911 065c 03       		.byte	0x3
 1912 065d 00000000 		.4byte	timeToSycnRemoteParams
 1913 0661 14       		.uleb128 0x14
 1914 0662 68657900 		.ascii	"hey\000"
 1915 0666 08       		.byte	0x8
 1916 0667 73       		.byte	0x73
 1917 0668 81000000 		.4byte	0x81
 1918 066c 05       		.uleb128 0x5
 1919 066d 03       		.byte	0x3
 1920 066e 00000000 		.4byte	hey
 1921 0672 00       		.byte	0
 1922              		.section	.debug_abbrev,"",%progbits
 1923              	.Ldebug_abbrev0:
 1924 0000 01       		.uleb128 0x1
 1925 0001 11       		.uleb128 0x11
 1926 0002 01       		.byte	0x1
 1927 0003 25       		.uleb128 0x25
 1928 0004 0E       		.uleb128 0xe
 1929 0005 13       		.uleb128 0x13
 1930 0006 0B       		.uleb128 0xb
 1931 0007 03       		.uleb128 0x3
 1932 0008 0E       		.uleb128 0xe
 1933 0009 1B       		.uleb128 0x1b
 1934 000a 0E       		.uleb128 0xe
 1935 000b 55       		.uleb128 0x55
 1936 000c 17       		.uleb128 0x17
 1937 000d 11       		.uleb128 0x11
 1938 000e 01       		.uleb128 0x1
 1939 000f 10       		.uleb128 0x10
 1940 0010 17       		.uleb128 0x17
 1941 0011 00       		.byte	0
 1942 0012 00       		.byte	0
 1943 0013 02       		.uleb128 0x2
 1944 0014 24       		.uleb128 0x24
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 52


 1945 0015 00       		.byte	0
 1946 0016 0B       		.uleb128 0xb
 1947 0017 0B       		.uleb128 0xb
 1948 0018 3E       		.uleb128 0x3e
 1949 0019 0B       		.uleb128 0xb
 1950 001a 03       		.uleb128 0x3
 1951 001b 0E       		.uleb128 0xe
 1952 001c 00       		.byte	0
 1953 001d 00       		.byte	0
 1954 001e 03       		.uleb128 0x3
 1955 001f 16       		.uleb128 0x16
 1956 0020 00       		.byte	0
 1957 0021 03       		.uleb128 0x3
 1958 0022 0E       		.uleb128 0xe
 1959 0023 3A       		.uleb128 0x3a
 1960 0024 0B       		.uleb128 0xb
 1961 0025 3B       		.uleb128 0x3b
 1962 0026 0B       		.uleb128 0xb
 1963 0027 49       		.uleb128 0x49
 1964 0028 13       		.uleb128 0x13
 1965 0029 00       		.byte	0
 1966 002a 00       		.byte	0
 1967 002b 04       		.uleb128 0x4
 1968 002c 24       		.uleb128 0x24
 1969 002d 00       		.byte	0
 1970 002e 0B       		.uleb128 0xb
 1971 002f 0B       		.uleb128 0xb
 1972 0030 3E       		.uleb128 0x3e
 1973 0031 0B       		.uleb128 0xb
 1974 0032 03       		.uleb128 0x3
 1975 0033 08       		.uleb128 0x8
 1976 0034 00       		.byte	0
 1977 0035 00       		.byte	0
 1978 0036 05       		.uleb128 0x5
 1979 0037 16       		.uleb128 0x16
 1980 0038 00       		.byte	0
 1981 0039 03       		.uleb128 0x3
 1982 003a 0E       		.uleb128 0xe
 1983 003b 3A       		.uleb128 0x3a
 1984 003c 0B       		.uleb128 0xb
 1985 003d 3B       		.uleb128 0x3b
 1986 003e 05       		.uleb128 0x5
 1987 003f 49       		.uleb128 0x49
 1988 0040 13       		.uleb128 0x13
 1989 0041 00       		.byte	0
 1990 0042 00       		.byte	0
 1991 0043 06       		.uleb128 0x6
 1992 0044 35       		.uleb128 0x35
 1993 0045 00       		.byte	0
 1994 0046 49       		.uleb128 0x49
 1995 0047 13       		.uleb128 0x13
 1996 0048 00       		.byte	0
 1997 0049 00       		.byte	0
 1998 004a 07       		.uleb128 0x7
 1999 004b 13       		.uleb128 0x13
 2000 004c 01       		.byte	0x1
 2001 004d 0B       		.uleb128 0xb
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 53


 2002 004e 0B       		.uleb128 0xb
 2003 004f 3A       		.uleb128 0x3a
 2004 0050 0B       		.uleb128 0xb
 2005 0051 3B       		.uleb128 0x3b
 2006 0052 0B       		.uleb128 0xb
 2007 0053 01       		.uleb128 0x1
 2008 0054 13       		.uleb128 0x13
 2009 0055 00       		.byte	0
 2010 0056 00       		.byte	0
 2011 0057 08       		.uleb128 0x8
 2012 0058 0D       		.uleb128 0xd
 2013 0059 00       		.byte	0
 2014 005a 03       		.uleb128 0x3
 2015 005b 08       		.uleb128 0x8
 2016 005c 3A       		.uleb128 0x3a
 2017 005d 0B       		.uleb128 0xb
 2018 005e 3B       		.uleb128 0x3b
 2019 005f 0B       		.uleb128 0xb
 2020 0060 49       		.uleb128 0x49
 2021 0061 13       		.uleb128 0x13
 2022 0062 38       		.uleb128 0x38
 2023 0063 0B       		.uleb128 0xb
 2024 0064 00       		.byte	0
 2025 0065 00       		.byte	0
 2026 0066 09       		.uleb128 0x9
 2027 0067 0D       		.uleb128 0xd
 2028 0068 00       		.byte	0
 2029 0069 03       		.uleb128 0x3
 2030 006a 0E       		.uleb128 0xe
 2031 006b 3A       		.uleb128 0x3a
 2032 006c 0B       		.uleb128 0xb
 2033 006d 3B       		.uleb128 0x3b
 2034 006e 0B       		.uleb128 0xb
 2035 006f 49       		.uleb128 0x49
 2036 0070 13       		.uleb128 0x13
 2037 0071 38       		.uleb128 0x38
 2038 0072 0B       		.uleb128 0xb
 2039 0073 00       		.byte	0
 2040 0074 00       		.byte	0
 2041 0075 0A       		.uleb128 0xa
 2042 0076 01       		.uleb128 0x1
 2043 0077 01       		.byte	0x1
 2044 0078 49       		.uleb128 0x49
 2045 0079 13       		.uleb128 0x13
 2046 007a 01       		.uleb128 0x1
 2047 007b 13       		.uleb128 0x13
 2048 007c 00       		.byte	0
 2049 007d 00       		.byte	0
 2050 007e 0B       		.uleb128 0xb
 2051 007f 21       		.uleb128 0x21
 2052 0080 00       		.byte	0
 2053 0081 49       		.uleb128 0x49
 2054 0082 13       		.uleb128 0x13
 2055 0083 2F       		.uleb128 0x2f
 2056 0084 0B       		.uleb128 0xb
 2057 0085 00       		.byte	0
 2058 0086 00       		.byte	0
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 54


 2059 0087 0C       		.uleb128 0xc
 2060 0088 0F       		.uleb128 0xf
 2061 0089 00       		.byte	0
 2062 008a 0B       		.uleb128 0xb
 2063 008b 0B       		.uleb128 0xb
 2064 008c 49       		.uleb128 0x49
 2065 008d 13       		.uleb128 0x13
 2066 008e 00       		.byte	0
 2067 008f 00       		.byte	0
 2068 0090 0D       		.uleb128 0xd
 2069 0091 2E       		.uleb128 0x2e
 2070 0092 00       		.byte	0
 2071 0093 03       		.uleb128 0x3
 2072 0094 0E       		.uleb128 0xe
 2073 0095 3A       		.uleb128 0x3a
 2074 0096 0B       		.uleb128 0xb
 2075 0097 3B       		.uleb128 0x3b
 2076 0098 0B       		.uleb128 0xb
 2077 0099 27       		.uleb128 0x27
 2078 009a 19       		.uleb128 0x19
 2079 009b 11       		.uleb128 0x11
 2080 009c 01       		.uleb128 0x1
 2081 009d 12       		.uleb128 0x12
 2082 009e 06       		.uleb128 0x6
 2083 009f 40       		.uleb128 0x40
 2084 00a0 18       		.uleb128 0x18
 2085 00a1 9642     		.uleb128 0x2116
 2086 00a3 19       		.uleb128 0x19
 2087 00a4 00       		.byte	0
 2088 00a5 00       		.byte	0
 2089 00a6 0E       		.uleb128 0xe
 2090 00a7 2E       		.uleb128 0x2e
 2091 00a8 01       		.byte	0x1
 2092 00a9 3F       		.uleb128 0x3f
 2093 00aa 19       		.uleb128 0x19
 2094 00ab 03       		.uleb128 0x3
 2095 00ac 0E       		.uleb128 0xe
 2096 00ad 3A       		.uleb128 0x3a
 2097 00ae 0B       		.uleb128 0xb
 2098 00af 3B       		.uleb128 0x3b
 2099 00b0 05       		.uleb128 0x5
 2100 00b1 27       		.uleb128 0x27
 2101 00b2 19       		.uleb128 0x19
 2102 00b3 11       		.uleb128 0x11
 2103 00b4 01       		.uleb128 0x1
 2104 00b5 12       		.uleb128 0x12
 2105 00b6 06       		.uleb128 0x6
 2106 00b7 40       		.uleb128 0x40
 2107 00b8 18       		.uleb128 0x18
 2108 00b9 9642     		.uleb128 0x2116
 2109 00bb 19       		.uleb128 0x19
 2110 00bc 01       		.uleb128 0x1
 2111 00bd 13       		.uleb128 0x13
 2112 00be 00       		.byte	0
 2113 00bf 00       		.byte	0
 2114 00c0 0F       		.uleb128 0xf
 2115 00c1 34       		.uleb128 0x34
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 55


 2116 00c2 00       		.byte	0
 2117 00c3 03       		.uleb128 0x3
 2118 00c4 0E       		.uleb128 0xe
 2119 00c5 3A       		.uleb128 0x3a
 2120 00c6 0B       		.uleb128 0xb
 2121 00c7 3B       		.uleb128 0x3b
 2122 00c8 05       		.uleb128 0x5
 2123 00c9 49       		.uleb128 0x49
 2124 00ca 13       		.uleb128 0x13
 2125 00cb 02       		.uleb128 0x2
 2126 00cc 18       		.uleb128 0x18
 2127 00cd 00       		.byte	0
 2128 00ce 00       		.byte	0
 2129 00cf 10       		.uleb128 0x10
 2130 00d0 34       		.uleb128 0x34
 2131 00d1 00       		.byte	0
 2132 00d2 03       		.uleb128 0x3
 2133 00d3 0E       		.uleb128 0xe
 2134 00d4 3A       		.uleb128 0x3a
 2135 00d5 0B       		.uleb128 0xb
 2136 00d6 3B       		.uleb128 0x3b
 2137 00d7 05       		.uleb128 0x5
 2138 00d8 49       		.uleb128 0x49
 2139 00d9 13       		.uleb128 0x13
 2140 00da 3F       		.uleb128 0x3f
 2141 00db 19       		.uleb128 0x19
 2142 00dc 3C       		.uleb128 0x3c
 2143 00dd 19       		.uleb128 0x19
 2144 00de 00       		.byte	0
 2145 00df 00       		.byte	0
 2146 00e0 11       		.uleb128 0x11
 2147 00e1 26       		.uleb128 0x26
 2148 00e2 00       		.byte	0
 2149 00e3 49       		.uleb128 0x49
 2150 00e4 13       		.uleb128 0x13
 2151 00e5 00       		.byte	0
 2152 00e6 00       		.byte	0
 2153 00e7 12       		.uleb128 0x12
 2154 00e8 34       		.uleb128 0x34
 2155 00e9 00       		.byte	0
 2156 00ea 03       		.uleb128 0x3
 2157 00eb 0E       		.uleb128 0xe
 2158 00ec 3A       		.uleb128 0x3a
 2159 00ed 0B       		.uleb128 0xb
 2160 00ee 3B       		.uleb128 0x3b
 2161 00ef 0B       		.uleb128 0xb
 2162 00f0 49       		.uleb128 0x49
 2163 00f1 13       		.uleb128 0x13
 2164 00f2 3F       		.uleb128 0x3f
 2165 00f3 19       		.uleb128 0x19
 2166 00f4 02       		.uleb128 0x2
 2167 00f5 18       		.uleb128 0x18
 2168 00f6 00       		.byte	0
 2169 00f7 00       		.byte	0
 2170 00f8 13       		.uleb128 0x13
 2171 00f9 21       		.uleb128 0x21
 2172 00fa 00       		.byte	0
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 56


 2173 00fb 49       		.uleb128 0x49
 2174 00fc 13       		.uleb128 0x13
 2175 00fd 2F       		.uleb128 0x2f
 2176 00fe 05       		.uleb128 0x5
 2177 00ff 00       		.byte	0
 2178 0100 00       		.byte	0
 2179 0101 14       		.uleb128 0x14
 2180 0102 34       		.uleb128 0x34
 2181 0103 00       		.byte	0
 2182 0104 03       		.uleb128 0x3
 2183 0105 08       		.uleb128 0x8
 2184 0106 3A       		.uleb128 0x3a
 2185 0107 0B       		.uleb128 0xb
 2186 0108 3B       		.uleb128 0x3b
 2187 0109 0B       		.uleb128 0xb
 2188 010a 49       		.uleb128 0x49
 2189 010b 13       		.uleb128 0x13
 2190 010c 3F       		.uleb128 0x3f
 2191 010d 19       		.uleb128 0x19
 2192 010e 02       		.uleb128 0x2
 2193 010f 18       		.uleb128 0x18
 2194 0110 00       		.byte	0
 2195 0111 00       		.byte	0
 2196 0112 00       		.byte	0
 2197              		.section	.debug_aranges,"",%progbits
 2198 0000 54000000 		.4byte	0x54
 2199 0004 0200     		.2byte	0x2
 2200 0006 00000000 		.4byte	.Ldebug_info0
 2201 000a 04       		.byte	0x4
 2202 000b 00       		.byte	0
 2203 000c 0000     		.2byte	0
 2204 000e 0000     		.2byte	0
 2205 0010 00000000 		.4byte	.LFB64
 2206 0014 0E000000 		.4byte	.LFE64-.LFB64
 2207 0018 00000000 		.4byte	.LFB65
 2208 001c 0E000000 		.4byte	.LFE65-.LFB65
 2209 0020 00000000 		.4byte	.LFB66
 2210 0024 0E000000 		.4byte	.LFE66-.LFB66
 2211 0028 00000000 		.4byte	.LFB67
 2212 002c 0E000000 		.4byte	.LFE67-.LFB67
 2213 0030 00000000 		.4byte	.LFB68
 2214 0034 0E000000 		.4byte	.LFE68-.LFB68
 2215 0038 00000000 		.4byte	.LFB69
 2216 003c 0E000000 		.4byte	.LFE69-.LFB69
 2217 0040 00000000 		.4byte	.LFB70
 2218 0044 0E000000 		.4byte	.LFE70-.LFB70
 2219 0048 00000000 		.4byte	.LFB71
 2220 004c 18060000 		.4byte	.LFE71-.LFB71
 2221 0050 00000000 		.4byte	0
 2222 0054 00000000 		.4byte	0
 2223              		.section	.debug_ranges,"",%progbits
 2224              	.Ldebug_ranges0:
 2225 0000 00000000 		.4byte	.LFB64
 2226 0004 0E000000 		.4byte	.LFE64
 2227 0008 00000000 		.4byte	.LFB65
 2228 000c 0E000000 		.4byte	.LFE65
 2229 0010 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 57


 2230 0014 0E000000 		.4byte	.LFE66
 2231 0018 00000000 		.4byte	.LFB67
 2232 001c 0E000000 		.4byte	.LFE67
 2233 0020 00000000 		.4byte	.LFB68
 2234 0024 0E000000 		.4byte	.LFE68
 2235 0028 00000000 		.4byte	.LFB69
 2236 002c 0E000000 		.4byte	.LFE69
 2237 0030 00000000 		.4byte	.LFB70
 2238 0034 0E000000 		.4byte	.LFE70
 2239 0038 00000000 		.4byte	.LFB71
 2240 003c 18060000 		.4byte	.LFE71
 2241 0040 00000000 		.4byte	0
 2242 0044 00000000 		.4byte	0
 2243              		.section	.debug_line,"",%progbits
 2244              	.Ldebug_line0:
 2245 0000 E2020000 		.section	.debug_str,"MS",%progbits,1
 2245      02008101 
 2245      00000201 
 2245      FB0E0D00 
 2245      01010101 
 2246              	.LASF46:
 2247 0000 76616C69 		.ascii	"valid\000"
 2247      6400
 2248              	.LASF31:
 2249 0006 6D6F6465 		.ascii	"model_id\000"
 2249      6C5F6964 
 2249      00
 2250              	.LASF75:
 2251 000f 5254435F 		.ascii	"RTC_alarmCfgMask\000"
 2251      616C6172 
 2251      6D436667 
 2251      4D61736B 
 2251      00
 2252              	.LASF30:
 2253 0020 73696D5F 		.ascii	"sim_id\000"
 2253      696400
 2254              	.LASF79:
 2255 0027 5254435F 		.ascii	"RTC_daysInMonths\000"
 2255      64617973 
 2255      496E4D6F 
 2255      6E746873 
 2255      00
 2256              	.LASF65:
 2257 0038 7379735F 		.ascii	"sys_settings_t\000"
 2257      73657474 
 2257      696E6773 
 2257      5F7400
 2258              	.LASF56:
 2259 0047 63757272 		.ascii	"currentCountDownValue\000"
 2259      656E7443 
 2259      6F756E74 
 2259      446F776E 
 2259      56616C75 
 2260              	.LASF55:
 2261 005d 636F756E 		.ascii	"countDownValue\000"
 2261      74446F77 
 2261      6E56616C 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 58


 2261      756500
 2262              	.LASF2:
 2263 006c 73686F72 		.ascii	"short int\000"
 2263      7420696E 
 2263      7400
 2264              	.LASF26:
 2265 0076 73697A65 		.ascii	"sizetype\000"
 2265      74797065 
 2265      00
 2266              	.LASF63:
 2267 007f 65705F68 		.ascii	"ep_host\000"
 2267      6F737400 
 2268              	.LASF100:
 2269 0087 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2269      43313120 
 2269      352E342E 
 2269      31203230 
 2269      31363036 
 2270 00ba 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2270      20726576 
 2270      6973696F 
 2270      6E203233 
 2270      37373135 
 2271 00ed 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2271      66756E63 
 2271      74696F6E 
 2271      2D736563 
 2271      74696F6E 
 2272              	.LASF45:
 2273 0115 74696D65 		.ascii	"time_to_lock\000"
 2273      5F746F5F 
 2273      6C6F636B 
 2273      00
 2274              	.LASF70:
 2275 0122 5254435F 		.ascii	"RTC_EveryWeekHandler\000"
 2275      45766572 
 2275      79576565 
 2275      6B48616E 
 2275      646C6572 
 2276              	.LASF84:
 2277 0137 64617461 		.ascii	"data\000"
 2277      00
 2278              	.LASF18:
 2279 013c 486F7572 		.ascii	"Hour\000"
 2279      00
 2280              	.LASF61:
 2281 0141 63686970 		.ascii	"chip_uniqueId\000"
 2281      5F756E69 
 2281      71756549 
 2281      6400
 2282              	.LASF36:
 2283 014f 65636E6F 		.ascii	"ecno\000"
 2283      00
 2284              	.LASF27:
 2285 0154 76616C75 		.ascii	"value\000"
 2285      6500
 2286              	.LASF12:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 59


 2287 015a 75696E74 		.ascii	"uint16\000"
 2287      313600
 2288              	.LASF64:
 2289 0161 65705F70 		.ascii	"ep_port\000"
 2289      6F727400 
 2290              	.LASF82:
 2291 0169 64617461 		.ascii	"dataPointsInStack\000"
 2291      506F696E 
 2291      7473496E 
 2291      53746163 
 2291      6B00
 2292              	.LASF11:
 2293 017b 75696E74 		.ascii	"uint8\000"
 2293      3800
 2294              	.LASF35:
 2295 0181 72736370 		.ascii	"rscp\000"
 2295      00
 2296              	.LASF13:
 2297 0186 696E7431 		.ascii	"int16\000"
 2297      3600
 2298              	.LASF28:
 2299 018c 74696D65 		.ascii	"timeStamp\000"
 2299      5374616D 
 2299      7000
 2300              	.LASF71:
 2301 0196 5254435F 		.ascii	"RTC_EveryMonthHandler\000"
 2301      45766572 
 2301      794D6F6E 
 2301      74684861 
 2301      6E646C65 
 2302              	.LASF83:
 2303 01ac 64617461 		.ascii	"dataPointsInStackDesired\000"
 2303      506F696E 
 2303      7473496E 
 2303      53746163 
 2303      6B446573 
 2304              	.LASF15:
 2305 01c5 666C6F61 		.ascii	"float\000"
 2305      7400
 2306              	.LASF19:
 2307 01cb 4461794F 		.ascii	"DayOfWeek\000"
 2307      66576565 
 2307      6B00
 2308              	.LASF6:
 2309 01d5 6C6F6E67 		.ascii	"long long int\000"
 2309      206C6F6E 
 2309      6720696E 
 2309      7400
 2310              	.LASF44:
 2311 01e3 616C7469 		.ascii	"altitude\000"
 2311      74756465 
 2311      00
 2312              	.LASF17:
 2313 01ec 63686172 		.ascii	"char\000"
 2313      00
 2314              	.LASF4:
 2315 01f1 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 60


 2315      20696E74 
 2315      00
 2316              	.LASF81:
 2317 01fa 62756666 		.ascii	"buffer_overflow\000"
 2317      65725F6F 
 2317      76657266 
 2317      6C6F7700 
 2318              	.LASF60:
 2319 020a 6D6F6465 		.ascii	"modem_info\000"
 2319      6D5F696E 
 2319      666F00
 2320              	.LASF95:
 2321 0215 616C6172 		.ascii	"alarmMeasure\000"
 2321      6D4D6561 
 2321      73757265 
 2321      00
 2322              	.LASF23:
 2323 0222 59656172 		.ascii	"Year\000"
 2323      00
 2324              	.LASF89:
 2325 0227 6770735F 		.ascii	"gps_data\000"
 2325      64617461 
 2325      00
 2326              	.LASF22:
 2327 0230 4D6F6E74 		.ascii	"Month\000"
 2327      6800
 2328              	.LASF69:
 2329 0236 5254435F 		.ascii	"RTC_EveryDayHandler\000"
 2329      45766572 
 2329      79446179 
 2329      48616E64 
 2329      6C657200 
 2330              	.LASF59:
 2331 024a 616C6172 		.ascii	"alarm\000"
 2331      6D00
 2332              	.LASF50:
 2333 0250 6D656173 		.ascii	"measure_time\000"
 2333      7572655F 
 2333      74696D65 
 2333      00
 2334              	.LASF97:
 2335 025d 616C6172 		.ascii	"alarmSync\000"
 2335      6D53796E 
 2335      6300
 2336              	.LASF25:
 2337 0267 6C6F6E67 		.ascii	"long double\000"
 2337      20646F75 
 2337      626C6500 
 2338              	.LASF1:
 2339 0273 756E7369 		.ascii	"unsigned char\000"
 2339      676E6564 
 2339      20636861 
 2339      7200
 2340              	.LASF38:
 2341 0281 72737270 		.ascii	"rsrp\000"
 2341      00
 2342              	.LASF86:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 61


 2343 0286 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2343      6D5F7374 
 2343      6172745F 
 2343      74696D65 
 2343      5F737461 
 2344              	.LASF73:
 2345 029d 5254435F 		.ascii	"RTC_alarmCfgTimeDate\000"
 2345      616C6172 
 2345      6D436667 
 2345      54696D65 
 2345      44617465 
 2346              	.LASF85:
 2347 02b2 6D6F6465 		.ascii	"modem_state\000"
 2347      6D5F7374 
 2347      61746500 
 2348              	.LASF0:
 2349 02be 7369676E 		.ascii	"signed char\000"
 2349      65642063 
 2349      68617200 
 2350              	.LASF72:
 2351 02ca 5254435F 		.ascii	"RTC_EveryYearHandler\000"
 2351      45766572 
 2351      79596561 
 2351      7248616E 
 2351      646C6572 
 2352              	.LASF7:
 2353 02df 6C6F6E67 		.ascii	"long long unsigned int\000"
 2353      206C6F6E 
 2353      6720756E 
 2353      7369676E 
 2353      65642069 
 2354              	.LASF94:
 2355 02f6 73797374 		.ascii	"system_settings\000"
 2355      656D5F73 
 2355      65747469 
 2355      6E677300 
 2356              	.LASF74:
 2357 0306 5254435F 		.ascii	"RTC_currentTimeDate\000"
 2357      63757272 
 2357      656E7454 
 2357      696D6544 
 2357      61746500 
 2358              	.LASF8:
 2359 031a 756E7369 		.ascii	"unsigned int\000"
 2359      676E6564 
 2359      20696E74 
 2359      00
 2360              	.LASF29:
 2361 0327 6B65795F 		.ascii	"key_value_t\000"
 2361      76616C75 
 2361      655F7400 
 2362              	.LASF34:
 2363 0333 72786C65 		.ascii	"rxlev\000"
 2363      7600
 2364              	.LASF51:
 2365 0339 73796E63 		.ascii	"sync_time\000"
 2365      5F74696D 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 62


 2365      6500
 2366              	.LASF42:
 2367 0343 6C617469 		.ascii	"latitude\000"
 2367      74756465 
 2367      00
 2368              	.LASF103:
 2369 034c 5254435F 		.ascii	"RTC_ISR\000"
 2369      49535200 
 2370              	.LASF102:
 2371 0354 443A5C47 		.ascii	"D:\\Github repo\\notoriOS\\notoriOS.cydsn\000"
 2371      69746875 
 2371      62207265 
 2371      706F5C6E 
 2371      6F746F72 
 2372              	.LASF96:
 2373 037b 74696D65 		.ascii	"timeToMeasure\000"
 2373      546F4D65 
 2373      61737572 
 2373      6500
 2374              	.LASF54:
 2375 0389 75706461 		.ascii	"updatable_parameters_t\000"
 2375      7461626C 
 2375      655F7061 
 2375      72616D65 
 2375      74657273 
 2376              	.LASF49:
 2377 03a0 73696D5F 		.ascii	"sim_type\000"
 2377      74797065 
 2377      00
 2378              	.LASF62:
 2379 03a9 7379735F 		.ascii	"sys_info_t\000"
 2379      696E666F 
 2379      5F7400
 2380              	.LASF3:
 2381 03b4 73686F72 		.ascii	"short unsigned int\000"
 2381      7420756E 
 2381      7369676E 
 2381      65642069 
 2381      6E7400
 2382              	.LASF39:
 2383 03c7 74696D65 		.ascii	"time_to_network_connect\000"
 2383      5F746F5F 
 2383      6E657477 
 2383      6F726B5F 
 2383      636F6E6E 
 2384              	.LASF93:
 2385 03df 73797374 		.ascii	"system_info\000"
 2385      656D5F69 
 2385      6E666F00 
 2386              	.LASF40:
 2387 03eb 74696D65 		.ascii	"time_to_acquire_ip\000"
 2387      5F746F5F 
 2387      61637175 
 2387      6972655F 
 2387      697000
 2388              	.LASF32:
 2389 03fe 696D6569 		.ascii	"imei\000"
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 63


 2389      00
 2390              	.LASF10:
 2391 0403 696E7433 		.ascii	"int32_t\000"
 2391      325F7400 
 2392              	.LASF104:
 2393 040b 5254435F 		.ascii	"RTC_tmp\000"
 2393      746D7000 
 2394              	.LASF41:
 2395 0413 6D6F6465 		.ascii	"modem_stats_t\000"
 2395      6D5F7374 
 2395      6174735F 
 2395      7400
 2396              	.LASF53:
 2397 0421 5F426F6F 		.ascii	"_Bool\000"
 2397      6C00
 2398              	.LASF99:
 2399 0427 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2399      546F5379 
 2399      636E5265 
 2399      6D6F7465 
 2399      50617261 
 2400              	.LASF47:
 2401 043e 6770735F 		.ascii	"gps_t\000"
 2401      7400
 2402              	.LASF68:
 2403 0444 5254435F 		.ascii	"RTC_EveryHourHandler\000"
 2403      45766572 
 2403      79486F75 
 2403      7248616E 
 2403      646C6572 
 2404              	.LASF20:
 2405 0459 4461794F 		.ascii	"DayOfMonth\000"
 2405      664D6F6E 
 2405      746800
 2406              	.LASF37:
 2407 0464 72737271 		.ascii	"rsrq\000"
 2407      00
 2408              	.LASF92:
 2409 0469 68747470 		.ascii	"http_route\000"
 2409      5F726F75 
 2409      746500
 2410              	.LASF67:
 2411 0474 5254435F 		.ascii	"RTC_EveryMinuteHandler\000"
 2411      45766572 
 2411      794D696E 
 2411      75746548 
 2411      616E646C 
 2412              	.LASF5:
 2413 048b 6C6F6E67 		.ascii	"long unsigned int\000"
 2413      20756E73 
 2413      69676E65 
 2413      6420696E 
 2413      7400
 2414              	.LASF14:
 2415 049d 696E7433 		.ascii	"int32\000"
 2415      3200
 2416              	.LASF16:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 64


 2417 04a3 646F7562 		.ascii	"double\000"
 2417      6C6500
 2418              	.LASF66:
 2419 04aa 5254435F 		.ascii	"RTC_EverySecondHandler\000"
 2419      45766572 
 2419      79536563 
 2419      6F6E6448 
 2419      616E646C 
 2420              	.LASF87:
 2421 04c1 6D6F6465 		.ascii	"modem_stats\000"
 2421      6D5F7374 
 2421      61747300 
 2422              	.LASF52:
 2423 04cd 64656275 		.ascii	"debug_level\000"
 2423      675F6C65 
 2423      76656C00 
 2424              	.LASF33:
 2425 04d9 6D6F6465 		.ascii	"modem_info_t\000"
 2425      6D5F696E 
 2425      666F5F74 
 2425      00
 2426              	.LASF57:
 2427 04e6 636F756E 		.ascii	"countDownType\000"
 2427      74446F77 
 2427      6E547970 
 2427      6500
 2428              	.LASF78:
 2429 04f4 5254435F 		.ascii	"RTC_statusDateTime\000"
 2429      73746174 
 2429      75734461 
 2429      74655469 
 2429      6D6500
 2430              	.LASF9:
 2431 0507 5F5F696E 		.ascii	"__int32_t\000"
 2431      7433325F 
 2431      7400
 2432              	.LASF58:
 2433 0511 636F756E 		.ascii	"countDownResetCondition\000"
 2433      74446F77 
 2433      6E526573 
 2433      6574436F 
 2433      6E646974 
 2434              	.LASF43:
 2435 0529 6C6F6E67 		.ascii	"longitude\000"
 2435      69747564 
 2435      6500
 2436              	.LASF101:
 2437 0533 47656E65 		.ascii	"Generated_Source\\PSoC5\\RTC_INT.c\000"
 2437      72617465 
 2437      645F536F 
 2437      75726365 
 2437      5C50536F 
 2438              	.LASF76:
 2439 0554 5254435F 		.ascii	"RTC_alarmCurStatus\000"
 2439      616C6172 
 2439      6D437572 
 2439      53746174 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccq4fE6b.s 			page 65


 2439      757300
 2440              	.LASF88:
 2441 0567 75706461 		.ascii	"updatable_parameters\000"
 2441      7461626C 
 2441      655F7061 
 2441      72616D65 
 2441      74657273 
 2442              	.LASF80:
 2443 057c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2443      52784275 
 2443      66666572 
 2443      00
 2444              	.LASF24:
 2445 0589 5254435F 		.ascii	"RTC_TIME_DATE\000"
 2445      54494D45 
 2445      5F444154 
 2445      4500
 2446              	.LASF77:
 2447 0597 5254435F 		.ascii	"RTC_intervalCfgMask\000"
 2447      696E7465 
 2447      7276616C 
 2447      4366674D 
 2447      61736B00 
 2448              	.LASF91:
 2449 05ab 68747470 		.ascii	"http_body\000"
 2449      5F626F64 
 2449      7900
 2450              	.LASF48:
 2451 05b5 6E6F6465 		.ascii	"node_type\000"
 2451      5F747970 
 2451      6500
 2452              	.LASF90:
 2453 05bf 68747470 		.ascii	"http_request\000"
 2453      5F726571 
 2453      75657374 
 2453      00
 2454              	.LASF98:
 2455 05cc 74696D65 		.ascii	"timeToSync\000"
 2455      546F5379 
 2455      6E6300
 2456              	.LASF21:
 2457 05d7 4461794F 		.ascii	"DayOfYear\000"
 2457      66596561 
 2457      7200
 2458              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
