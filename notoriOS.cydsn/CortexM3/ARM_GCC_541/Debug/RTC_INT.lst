ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RTC_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	modem_state,1,1
  20              		.comm	modem_start_time_stamp,4,4
  21              		.comm	modem_info,60,4
  22              		.comm	modem_stats,16,4
  23              		.comm	updatable_parameters,3,4
  24              		.syntax unified
  25              		.global _printf_float
  26              		.thumb
  27              		.syntax unified
  28              		.comm	dataPointsInStack,2,2
  29              		.comm	dataPointsInStackDesired,2,2
  30              		.comm	data,6600,4
  31              		.comm	http_request,10000,4
  32              		.comm	http_body,10000,4
  33              		.comm	http_route,200,4
  34              		.comm	system_info,28,4
  35              		.comm	system_settings,104,4
  36              		.comm	alarmMeasure,6,4
  37              		.comm	timeToMeasure,1,1
  38              		.comm	alarmSync,6,4
  39              		.comm	timeToSync,1,1
  40              		.comm	timeToSycnRemoteParams,1,1
  41              		.comm	try_counter,1,1
  42              		.section	.text.RTC_EverySecondHandler,"ax",%progbits
  43              		.align	2
  44              		.thumb
  45              		.thumb_func
  46              		.type	RTC_EverySecondHandler, %function
  47              	RTC_EverySecondHandler:
  48              	.LFB64:
  49              		.file 1 "Generated_Source\\PSoC5\\RTC_INT.c"
   1:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/RTC_INT.c **** * File Name: RTC_INT.c
   3:Generated_Source\PSoC5/RTC_INT.c **** * Version 2.0
   4:Generated_Source\PSoC5/RTC_INT.c **** *
   5:Generated_Source\PSoC5/RTC_INT.c **** * Description:
   6:Generated_Source\PSoC5/RTC_INT.c **** *  This file contains the Interrupt Service Routine (ISR) for the RTC component.
   7:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt routine has entry pointes to overflow on time or date.
   8:Generated_Source\PSoC5/RTC_INT.c **** *
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 2


   9:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  10:Generated_Source\PSoC5/RTC_INT.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/RTC_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/RTC_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/RTC_INT.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/RTC_INT.c **** 
  16:Generated_Source\PSoC5/RTC_INT.c **** #include "RTC.h"
  17:Generated_Source\PSoC5/RTC_INT.c **** #include "CyLib.h"
  18:Generated_Source\PSoC5/RTC_INT.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/RTC_INT.c **** 
  20:Generated_Source\PSoC5/RTC_INT.c **** /* Function Prototypes */
  21:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void);
  22:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void);
  23:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void);
  24:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void);
  25:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void);
  26:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void);
  27:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void);
  28:Generated_Source\PSoC5/RTC_INT.c **** 
  29:Generated_Source\PSoC5/RTC_INT.c **** 
  30:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  31:Generated_Source\PSoC5/RTC_INT.c **** *  Place your includes, defines and code here
  32:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  33:Generated_Source\PSoC5/RTC_INT.c **** /* `#START RTC_ISR_DEFINITION` */
  34:Generated_Source\PSoC5/RTC_INT.c **** 
  35:Generated_Source\PSoC5/RTC_INT.c **** #include "notoriOS.h"
  36:Generated_Source\PSoC5/RTC_INT.c **** 
  37:Generated_Source\PSoC5/RTC_INT.c **** /* `#END` */
  38:Generated_Source\PSoC5/RTC_INT.c **** 
  39:Generated_Source\PSoC5/RTC_INT.c **** 
  40:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EverySecondHandler
  42:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  43:Generated_Source\PSoC5/RTC_INT.c **** *
  44:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  45:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every second.
  46:Generated_Source\PSoC5/RTC_INT.c **** *
  47:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  48:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  49:Generated_Source\PSoC5/RTC_INT.c **** *
  50:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  51:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  52:Generated_Source\PSoC5/RTC_INT.c **** *
  53:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  54:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void)
  55:Generated_Source\PSoC5/RTC_INT.c **** {
  50              		.loc 1 55 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 1, uses_anonymous_args = 0
  54 0000 80B5     		push	{r7, lr}
  55              		.cfi_def_cfa_offset 8
  56              		.cfi_offset 7, -8
  57              		.cfi_offset 14, -4
  58 0002 00AF     		add	r7, sp, #0
  59              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 3


  56:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every second handler code here. */
  57:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_SECOND_HANDLER_CODE` */
  58:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_SECOND);
  60              		.loc 1 58 0
  61 0004 0020     		movs	r0, #0
  62 0006 FFF7FEFF 		bl	AyoItsTime
  59:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  60:Generated_Source\PSoC5/RTC_INT.c ****     
  61:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_SECOND_HANDLER_CALLBACK
  62:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler_Callback();
  63:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_SECOND_HANDLER_CALLBACK */
  64:Generated_Source\PSoC5/RTC_INT.c **** }
  63              		.loc 1 64 0
  64 000a 00BF     		nop
  65 000c 80BD     		pop	{r7, pc}
  66              		.cfi_endproc
  67              	.LFE64:
  68              		.size	RTC_EverySecondHandler, .-RTC_EverySecondHandler
  69 000e 00BF     		.section	.text.RTC_EveryMinuteHandler,"ax",%progbits
  70              		.align	2
  71              		.thumb
  72              		.thumb_func
  73              		.type	RTC_EveryMinuteHandler, %function
  74              	RTC_EveryMinuteHandler:
  75              	.LFB65:
  65:Generated_Source\PSoC5/RTC_INT.c **** 
  66:Generated_Source\PSoC5/RTC_INT.c **** 
  67:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  68:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMinuteHandler
  69:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  70:Generated_Source\PSoC5/RTC_INT.c **** *
  71:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  72:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every minute.
  73:Generated_Source\PSoC5/RTC_INT.c **** *
  74:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  75:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  76:Generated_Source\PSoC5/RTC_INT.c **** *
  77:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  78:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  79:Generated_Source\PSoC5/RTC_INT.c **** *
  80:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  81:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void)
  82:Generated_Source\PSoC5/RTC_INT.c **** {
  76              		.loc 1 82 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80 0000 80B5     		push	{r7, lr}
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0002 00AF     		add	r7, sp, #0
  85              		.cfi_def_cfa_register 7
  83:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every minute handler code here. */
  84:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MINUTE_HANDLER_CODE` */
  85:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_MINUTE);
  86              		.loc 1 85 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 4


  87 0004 0120     		movs	r0, #1
  88 0006 FFF7FEFF 		bl	AyoItsTime
  86:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  87:Generated_Source\PSoC5/RTC_INT.c **** 
  88:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MINUTE_HANDLER_CALLBACK
  89:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMinuteHandler_Callback();
  90:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MINUTE_HANDLER_CALLBACK */    
  91:Generated_Source\PSoC5/RTC_INT.c **** }
  89              		.loc 1 91 0
  90 000a 00BF     		nop
  91 000c 80BD     		pop	{r7, pc}
  92              		.cfi_endproc
  93              	.LFE65:
  94              		.size	RTC_EveryMinuteHandler, .-RTC_EveryMinuteHandler
  95 000e 00BF     		.section	.text.RTC_EveryHourHandler,"ax",%progbits
  96              		.align	2
  97              		.thumb
  98              		.thumb_func
  99              		.type	RTC_EveryHourHandler, %function
 100              	RTC_EveryHourHandler:
 101              	.LFB66:
  92:Generated_Source\PSoC5/RTC_INT.c **** 
  93:Generated_Source\PSoC5/RTC_INT.c **** 
  94:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  95:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryHourHandler
  96:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  97:Generated_Source\PSoC5/RTC_INT.c **** *
  98:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  99:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every hour.
 100:Generated_Source\PSoC5/RTC_INT.c **** *
 101:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 102:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 103:Generated_Source\PSoC5/RTC_INT.c **** *
 104:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 105:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 106:Generated_Source\PSoC5/RTC_INT.c **** *
 107:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 108:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void)
 109:Generated_Source\PSoC5/RTC_INT.c **** {
 102              		.loc 1 109 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 1, uses_anonymous_args = 0
 106 0000 80B5     		push	{r7, lr}
 107              		.cfi_def_cfa_offset 8
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 00AF     		add	r7, sp, #0
 111              		.cfi_def_cfa_register 7
 110:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every hour handler code here. */
 111:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_HOUR_HANDLER_CODE` */
 112:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_HOUR);
 112              		.loc 1 112 0
 113 0004 0220     		movs	r0, #2
 114 0006 FFF7FEFF 		bl	AyoItsTime
 113:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 114:Generated_Source\PSoC5/RTC_INT.c ****     
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 5


 115:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_HOUR_HANDLER_CALLBACK
 116:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryHourHandler_Callback();
 117:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_HOUR_HANDLER_CALLBACK */
 118:Generated_Source\PSoC5/RTC_INT.c **** }
 115              		.loc 1 118 0
 116 000a 00BF     		nop
 117 000c 80BD     		pop	{r7, pc}
 118              		.cfi_endproc
 119              	.LFE66:
 120              		.size	RTC_EveryHourHandler, .-RTC_EveryHourHandler
 121 000e 00BF     		.section	.text.RTC_EveryDayHandler,"ax",%progbits
 122              		.align	2
 123              		.thumb
 124              		.thumb_func
 125              		.type	RTC_EveryDayHandler, %function
 126              	RTC_EveryDayHandler:
 127              	.LFB67:
 119:Generated_Source\PSoC5/RTC_INT.c **** 
 120:Generated_Source\PSoC5/RTC_INT.c **** 
 121:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 122:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryDayHandler
 123:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 124:Generated_Source\PSoC5/RTC_INT.c **** *
 125:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 126:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every day.
 127:Generated_Source\PSoC5/RTC_INT.c **** *
 128:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 129:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 130:Generated_Source\PSoC5/RTC_INT.c **** *
 131:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 132:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 133:Generated_Source\PSoC5/RTC_INT.c **** *
 134:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 135:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void)
 136:Generated_Source\PSoC5/RTC_INT.c **** {
 128              		.loc 1 136 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 1, uses_anonymous_args = 0
 132 0000 80B5     		push	{r7, lr}
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 7, -8
 135              		.cfi_offset 14, -4
 136 0002 00AF     		add	r7, sp, #0
 137              		.cfi_def_cfa_register 7
 137:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your everyday handler code here. */
 138:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_DAY_HANDLER_CODE` */
 139:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_DAY);
 138              		.loc 1 139 0
 139 0004 0320     		movs	r0, #3
 140 0006 FFF7FEFF 		bl	AyoItsTime
 140:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 141:Generated_Source\PSoC5/RTC_INT.c ****     
 142:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_DAY_HANDLER_CALLBACK
 143:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryDayHandler_Callback();
 144:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_DAY_HANDLER_CALLBACK */
 145:Generated_Source\PSoC5/RTC_INT.c **** }
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 6


 141              		.loc 1 145 0
 142 000a 00BF     		nop
 143 000c 80BD     		pop	{r7, pc}
 144              		.cfi_endproc
 145              	.LFE67:
 146              		.size	RTC_EveryDayHandler, .-RTC_EveryDayHandler
 147 000e 00BF     		.section	.text.RTC_EveryWeekHandler,"ax",%progbits
 148              		.align	2
 149              		.thumb
 150              		.thumb_func
 151              		.type	RTC_EveryWeekHandler, %function
 152              	RTC_EveryWeekHandler:
 153              	.LFB68:
 146:Generated_Source\PSoC5/RTC_INT.c **** 
 147:Generated_Source\PSoC5/RTC_INT.c **** 
 148:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 149:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryWeekHandler
 150:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 151:Generated_Source\PSoC5/RTC_INT.c **** *
 152:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 153:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every week.
 154:Generated_Source\PSoC5/RTC_INT.c **** *
 155:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 156:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 157:Generated_Source\PSoC5/RTC_INT.c **** *
 158:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 159:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 160:Generated_Source\PSoC5/RTC_INT.c **** *
 161:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 162:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void)
 163:Generated_Source\PSoC5/RTC_INT.c **** {
 154              		.loc 1 163 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 1, uses_anonymous_args = 0
 158 0000 80B5     		push	{r7, lr}
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162 0002 00AF     		add	r7, sp, #0
 163              		.cfi_def_cfa_register 7
 164:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every week handler code here. */
 165:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_WEEK_HANDLER_CODE` */
 166:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_WEEK);
 164              		.loc 1 166 0
 165 0004 0420     		movs	r0, #4
 166 0006 FFF7FEFF 		bl	AyoItsTime
 167:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 168:Generated_Source\PSoC5/RTC_INT.c **** 
 169:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_WEEK_HANDLER_CALLBACK
 170:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryWeekHandler_Callback();
 171:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_WEEK_HANDLER_CALLBACK */
 172:Generated_Source\PSoC5/RTC_INT.c **** }
 167              		.loc 1 172 0
 168 000a 00BF     		nop
 169 000c 80BD     		pop	{r7, pc}
 170              		.cfi_endproc
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 7


 171              	.LFE68:
 172              		.size	RTC_EveryWeekHandler, .-RTC_EveryWeekHandler
 173 000e 00BF     		.section	.text.RTC_EveryMonthHandler,"ax",%progbits
 174              		.align	2
 175              		.thumb
 176              		.thumb_func
 177              		.type	RTC_EveryMonthHandler, %function
 178              	RTC_EveryMonthHandler:
 179              	.LFB69:
 173:Generated_Source\PSoC5/RTC_INT.c **** 
 174:Generated_Source\PSoC5/RTC_INT.c **** 
 175:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMonthHandler
 177:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 178:Generated_Source\PSoC5/RTC_INT.c **** *
 179:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 180:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every month.
 181:Generated_Source\PSoC5/RTC_INT.c **** *
 182:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 183:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 184:Generated_Source\PSoC5/RTC_INT.c **** *
 185:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 186:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 187:Generated_Source\PSoC5/RTC_INT.c **** *
 188:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 189:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void)
 190:Generated_Source\PSoC5/RTC_INT.c **** {
 180              		.loc 1 190 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 1, uses_anonymous_args = 0
 184 0000 80B5     		push	{r7, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 00AF     		add	r7, sp, #0
 189              		.cfi_def_cfa_register 7
 191:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every month handler code here. */
 192:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MONTH_HANDLER_CODE` */
 193:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_MONTH);
 190              		.loc 1 193 0
 191 0004 0520     		movs	r0, #5
 192 0006 FFF7FEFF 		bl	AyoItsTime
 194:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 195:Generated_Source\PSoC5/RTC_INT.c ****     
 196:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MONTH_HANDLER_CALLBACK
 197:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMonthHandler_Callback();
 198:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MONTH_HANDLER_CALLBACK */
 199:Generated_Source\PSoC5/RTC_INT.c **** }
 193              		.loc 1 199 0
 194 000a 00BF     		nop
 195 000c 80BD     		pop	{r7, pc}
 196              		.cfi_endproc
 197              	.LFE69:
 198              		.size	RTC_EveryMonthHandler, .-RTC_EveryMonthHandler
 199 000e 00BF     		.section	.text.RTC_EveryYearHandler,"ax",%progbits
 200              		.align	2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 8


 201              		.thumb
 202              		.thumb_func
 203              		.type	RTC_EveryYearHandler, %function
 204              	RTC_EveryYearHandler:
 205              	.LFB70:
 200:Generated_Source\PSoC5/RTC_INT.c **** 
 201:Generated_Source\PSoC5/RTC_INT.c **** 
 202:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 203:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryYearHandler
 204:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 205:Generated_Source\PSoC5/RTC_INT.c **** *
 206:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 207:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every year.
 208:Generated_Source\PSoC5/RTC_INT.c **** *
 209:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 210:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 211:Generated_Source\PSoC5/RTC_INT.c **** *
 212:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 213:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 214:Generated_Source\PSoC5/RTC_INT.c **** *
 215:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 216:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void)
 217:Generated_Source\PSoC5/RTC_INT.c **** {
 206              		.loc 1 217 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 1, uses_anonymous_args = 0
 210 0000 80B5     		push	{r7, lr}
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 7, -8
 213              		.cfi_offset 14, -4
 214 0002 00AF     		add	r7, sp, #0
 215              		.cfi_def_cfa_register 7
 218:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every year handler code here. */
 219:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_YEAR_HANDLER_CODE` */
 220:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_YEAR);
 216              		.loc 1 220 0
 217 0004 0620     		movs	r0, #6
 218 0006 FFF7FEFF 		bl	AyoItsTime
 221:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 222:Generated_Source\PSoC5/RTC_INT.c **** 
 223:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_YEAR_HANDLER_CALLBACK
 224:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryYearHandler_Callback();
 225:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_YEAR_HANDLER_CALLBACK */    
 226:Generated_Source\PSoC5/RTC_INT.c **** }
 219              		.loc 1 226 0
 220 000a 00BF     		nop
 221 000c 80BD     		pop	{r7, pc}
 222              		.cfi_endproc
 223              	.LFE70:
 224              		.size	RTC_EveryYearHandler, .-RTC_EveryYearHandler
 225 000e 00BF     		.section	.text.RTC_ISR,"ax",%progbits
 226              		.align	2
 227              		.global	RTC_ISR
 228              		.thumb
 229              		.thumb_func
 230              		.type	RTC_ISR, %function
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 9


 231              	RTC_ISR:
 232              	.LFB71:
 227:Generated_Source\PSoC5/RTC_INT.c **** 
 228:Generated_Source\PSoC5/RTC_INT.c **** 
 229:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/RTC_INT.c **** * Function Name: RTC_ISR
 231:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 232:Generated_Source\PSoC5/RTC_INT.c **** *
 233:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 234:Generated_Source\PSoC5/RTC_INT.c **** *  This ISR is executed on 1PPS (one pulse per second) event.
 235:Generated_Source\PSoC5/RTC_INT.c **** *  Global interrupt must be enabled to invoke this ISR.
 236:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt trigs every second.
 237:Generated_Source\PSoC5/RTC_INT.c **** *
 238:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 239:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 240:Generated_Source\PSoC5/RTC_INT.c **** *
 241:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 242:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 243:Generated_Source\PSoC5/RTC_INT.c **** *
 244:Generated_Source\PSoC5/RTC_INT.c **** * Global variables:
 245:Generated_Source\PSoC5/RTC_INT.c **** * RTC_currentTimeDate, RTC_dstTimeDateStart,
 246:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStop, RTC_dstTimeDateStart,
 247:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCfgTimeDate, RTC_statusDateTime,
 248:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStartStatus,
 249:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStopStatus, RTC_alarmCurStatus: global
 250:Generated_Source\PSoC5/RTC_INT.c **** *  variables are used for the time/date, DST and alarm update procedure.
 251:Generated_Source\PSoC5/RTC_INT.c **** *
 252:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStart and RTC_currentTimeDate:
 253:Generated_Source\PSoC5/RTC_INT.c **** *  are modified with the updated values.
 254:Generated_Source\PSoC5/RTC_INT.c **** *
 255:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_statusDateTime, RTC_dstStartStatus,
 256:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStopStatus,
 257:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCurStatus: global variables could be modified while
 258:Generated_Source\PSoC5/RTC_INT.c **** *  current time/date is updated.
 259:Generated_Source\PSoC5/RTC_INT.c **** *
 260:Generated_Source\PSoC5/RTC_INT.c **** * Side Effects:
 261:Generated_Source\PSoC5/RTC_INT.c **** *  Clears all interrupt status bits (react_int, limact_int, onepps_int, ctw_int,
 262:Generated_Source\PSoC5/RTC_INT.c **** *  and  ftw_int) in Power Manager Interrupt Status Register. If an interrupt
 263:Generated_Source\PSoC5/RTC_INT.c **** *  gets generated at the same time as a clear, the bit will remain set (which
 264:Generated_Source\PSoC5/RTC_INT.c **** *  causes another interrupt).
 265:Generated_Source\PSoC5/RTC_INT.c **** *
 266:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 267:Generated_Source\PSoC5/RTC_INT.c **** CY_ISR(RTC_ISR)
 268:Generated_Source\PSoC5/RTC_INT.c **** {
 233              		.loc 1 268 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 8
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237 0000 80B5     		push	{r7, lr}
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 7, -8
 240              		.cfi_offset 14, -4
 241 0002 82B0     		sub	sp, sp, #8
 242              		.cfi_def_cfa_offset 16
 243 0004 00AF     		add	r7, sp, #0
 244              		.cfi_def_cfa_register 7
 269:Generated_Source\PSoC5/RTC_INT.c ****     uint8 RTC_tmp;
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 10


 270:Generated_Source\PSoC5/RTC_INT.c **** 
 271:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_ENTRY_CALLBACK
 272:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_EntryCallback();
 273:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_ENTRY_CALLBACK */
 274:Generated_Source\PSoC5/RTC_INT.c ****     
 275:Generated_Source\PSoC5/RTC_INT.c ****     /* Clear OPPS interrupt status flag */
 276:Generated_Source\PSoC5/RTC_INT.c ****     (void) CyPmReadStatus(CY_PM_ONEPPS_INT);
 245              		.loc 1 276 0
 246 0006 0420     		movs	r0, #4
 247 0008 FFF7FEFF 		bl	CyPmReadStatus
 277:Generated_Source\PSoC5/RTC_INT.c **** 
 278:Generated_Source\PSoC5/RTC_INT.c ****     /* Increment seconds counter */
 279:Generated_Source\PSoC5/RTC_INT.c ****     RTC_currentTimeDate.Sec++;
 248              		.loc 1 279 0
 249 000c 9E4B     		ldr	r3, .L48
 250 000e 1B78     		ldrb	r3, [r3]
 251 0010 DBB2     		uxtb	r3, r3
 252 0012 0133     		adds	r3, r3, #1
 253 0014 DAB2     		uxtb	r2, r3
 254 0016 9C4B     		ldr	r3, .L48
 255 0018 1A70     		strb	r2, [r3]
 280:Generated_Source\PSoC5/RTC_INT.c **** 
 281:Generated_Source\PSoC5/RTC_INT.c ****     /* Check if minute elapsed */
 282:Generated_Source\PSoC5/RTC_INT.c ****     if(RTC_currentTimeDate.Sec > RTC_MINUTE_ELAPSED)
 256              		.loc 1 282 0
 257 001a 9B4B     		ldr	r3, .L48
 258 001c 1B78     		ldrb	r3, [r3]
 259 001e DBB2     		uxtb	r3, r3
 260 0020 3B2B     		cmp	r3, #59
 261 0022 40F2A682 		bls	.L9
 283:Generated_Source\PSoC5/RTC_INT.c ****     {
 284:Generated_Source\PSoC5/RTC_INT.c ****         /* Inc Min */
 285:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Min++;
 262              		.loc 1 285 0
 263 0026 984B     		ldr	r3, .L48
 264 0028 5B78     		ldrb	r3, [r3, #1]
 265 002a DBB2     		uxtb	r3, r3
 266 002c 0133     		adds	r3, r3, #1
 267 002e DAB2     		uxtb	r2, r3
 268 0030 954B     		ldr	r3, .L48
 269 0032 5A70     		strb	r2, [r3, #1]
 286:Generated_Source\PSoC5/RTC_INT.c **** 
 287:Generated_Source\PSoC5/RTC_INT.c ****         /* Clear Sec */
 288:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Sec = 0u;
 270              		.loc 1 288 0
 271 0034 944B     		ldr	r3, .L48
 272 0036 0022     		movs	r2, #0
 273 0038 1A70     		strb	r2, [r3]
 289:Generated_Source\PSoC5/RTC_INT.c **** 
 290:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 274              		.loc 1 290 0
 275 003a 934B     		ldr	r3, .L48
 276 003c 5B78     		ldrb	r3, [r3, #1]
 277 003e DBB2     		uxtb	r3, r3
 278 0040 3B2B     		cmp	r3, #59
 279 0042 40F24682 		bls	.L10
 291:Generated_Source\PSoC5/RTC_INT.c ****         {
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 11


 292:Generated_Source\PSoC5/RTC_INT.c ****             /* Inc HOUR */
 293:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Hour++;
 280              		.loc 1 293 0
 281 0046 904B     		ldr	r3, .L48
 282 0048 9B78     		ldrb	r3, [r3, #2]
 283 004a DBB2     		uxtb	r3, r3
 284 004c 0133     		adds	r3, r3, #1
 285 004e DAB2     		uxtb	r2, r3
 286 0050 8D4B     		ldr	r3, .L48
 287 0052 9A70     		strb	r2, [r3, #2]
 294:Generated_Source\PSoC5/RTC_INT.c **** 
 295:Generated_Source\PSoC5/RTC_INT.c ****             /* Clear Min */
 296:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Min = 0u;
 288              		.loc 1 296 0
 289 0054 8C4B     		ldr	r3, .L48
 290 0056 0022     		movs	r2, #0
 291 0058 5A70     		strb	r2, [r3, #1]
 297:Generated_Source\PSoC5/RTC_INT.c **** 
 298:Generated_Source\PSoC5/RTC_INT.c ****             /* Day roll over */
 299:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 292              		.loc 1 299 0
 293 005a 8B4B     		ldr	r3, .L48
 294 005c 9B78     		ldrb	r3, [r3, #2]
 295 005e DBB2     		uxtb	r3, r3
 296 0060 172B     		cmp	r3, #23
 297 0062 40F2DD81 		bls	.L11
 300:Generated_Source\PSoC5/RTC_INT.c ****             {
 301:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfMonth */
 302:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfMonth++;
 298              		.loc 1 302 0
 299 0066 884B     		ldr	r3, .L48
 300 0068 1B79     		ldrb	r3, [r3, #4]
 301 006a DBB2     		uxtb	r3, r3
 302 006c 0133     		adds	r3, r3, #1
 303 006e DAB2     		uxtb	r2, r3
 304 0070 854B     		ldr	r3, .L48
 305 0072 1A71     		strb	r2, [r3, #4]
 303:Generated_Source\PSoC5/RTC_INT.c **** 
 304:Generated_Source\PSoC5/RTC_INT.c ****                 /* Clear Hour */
 305:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.Hour = 0u;
 306              		.loc 1 305 0
 307 0074 844B     		ldr	r3, .L48
 308 0076 0022     		movs	r2, #0
 309 0078 9A70     		strb	r2, [r3, #2]
 306:Generated_Source\PSoC5/RTC_INT.c **** 
 307:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfYear */
 308:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfYear++;
 310              		.loc 1 308 0
 311 007a 834B     		ldr	r3, .L48
 312 007c DB88     		ldrh	r3, [r3, #6]	@ movhi
 313 007e 9BB2     		uxth	r3, r3
 314 0080 0133     		adds	r3, r3, #1
 315 0082 9AB2     		uxth	r2, r3
 316 0084 804B     		ldr	r3, .L48
 317 0086 DA80     		strh	r2, [r3, #6]	@ movhi
 309:Generated_Source\PSoC5/RTC_INT.c **** 
 310:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfWeek */
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 12


 311:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfWeek++;
 318              		.loc 1 311 0
 319 0088 7F4B     		ldr	r3, .L48
 320 008a DB78     		ldrb	r3, [r3, #3]
 321 008c DBB2     		uxtb	r3, r3
 322 008e 0133     		adds	r3, r3, #1
 323 0090 DAB2     		uxtb	r2, r3
 324 0092 7D4B     		ldr	r3, .L48
 325 0094 DA70     		strb	r2, [r3, #3]
 312:Generated_Source\PSoC5/RTC_INT.c **** 
 313:Generated_Source\PSoC5/RTC_INT.c ****                 /* Check DayOfWeek */
 314:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 326              		.loc 1 314 0
 327 0096 7C4B     		ldr	r3, .L48
 328 0098 DB78     		ldrb	r3, [r3, #3]
 329 009a DBB2     		uxtb	r3, r3
 330 009c 072B     		cmp	r3, #7
 331 009e 02D9     		bls	.L12
 315:Generated_Source\PSoC5/RTC_INT.c ****                 {
 316:Generated_Source\PSoC5/RTC_INT.c ****                     /* start new week */
 317:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfWeek = 1u;
 332              		.loc 1 317 0
 333 00a0 794B     		ldr	r3, .L48
 334 00a2 0122     		movs	r2, #1
 335 00a4 DA70     		strb	r2, [r3, #3]
 336              	.L12:
 318:Generated_Source\PSoC5/RTC_INT.c ****                 }
 319:Generated_Source\PSoC5/RTC_INT.c **** 
 320:Generated_Source\PSoC5/RTC_INT.c ****                 /* Day of month roll over.
 321:Generated_Source\PSoC5/RTC_INT.c ****                 * Check if day of month greater than 29 in February of leap year or
 322:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than 28 NOT in February of NON leap year or
 323:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than it should be in every month in non leap year
 324:Generated_Source\PSoC5/RTC_INT.c ****                 */
 325:Generated_Source\PSoC5/RTC_INT.c ****                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 337              		.loc 1 325 0
 338 00a6 794B     		ldr	r3, .L48+4
 339 00a8 1B78     		ldrb	r3, [r3]
 340 00aa DBB2     		uxtb	r3, r3
 341 00ac 03F00203 		and	r3, r3, #2
 342 00b0 002B     		cmp	r3, #0
 343 00b2 11D0     		beq	.L13
 326:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 344              		.loc 1 326 0 discriminator 1
 345 00b4 744B     		ldr	r3, .L48
 346 00b6 1B7A     		ldrb	r3, [r3, #8]
 347 00b8 DBB2     		uxtb	r3, r3
 325:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 348              		.loc 1 325 0 discriminator 1
 349 00ba 022B     		cmp	r3, #2
 350 00bc 0CD1     		bne	.L13
 327:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 351              		.loc 1 327 0
 352 00be 724B     		ldr	r3, .L48
 353 00c0 1B79     		ldrb	r3, [r3, #4]
 354 00c2 DBB2     		uxtb	r3, r3
 355 00c4 1946     		mov	r1, r3
 328:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 13


 356              		.loc 1 328 0
 357 00c6 704B     		ldr	r3, .L48
 358 00c8 1B7A     		ldrb	r3, [r3, #8]
 359 00ca DBB2     		uxtb	r3, r3
 360 00cc 013B     		subs	r3, r3, #1
 361 00ce 704A     		ldr	r2, .L48+8
 362 00d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 363 00d2 0133     		adds	r3, r3, #1
 326:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 364              		.loc 1 326 0
 365 00d4 9942     		cmp	r1, r3
 366 00d6 2AD8     		bhi	.L14
 367              	.L13:
 329:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 368              		.loc 1 329 0
 369 00d8 6C4B     		ldr	r3, .L48+4
 370 00da 1B78     		ldrb	r3, [r3]
 371 00dc DBB2     		uxtb	r3, r3
 372 00de 03F00203 		and	r3, r3, #2
 328:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 373              		.loc 1 328 0
 374 00e2 002B     		cmp	r3, #0
 375 00e4 0FD0     		beq	.L15
 330:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 376              		.loc 1 330 0
 377 00e6 684B     		ldr	r3, .L48
 378 00e8 1B7A     		ldrb	r3, [r3, #8]
 379 00ea DBB2     		uxtb	r3, r3
 329:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 380              		.loc 1 329 0
 381 00ec 022B     		cmp	r3, #2
 382 00ee 0AD0     		beq	.L15
 331:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 383              		.loc 1 331 0
 384 00f0 654B     		ldr	r3, .L48
 385 00f2 1B79     		ldrb	r3, [r3, #4]
 386 00f4 DAB2     		uxtb	r2, r3
 332:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 387              		.loc 1 332 0
 388 00f6 644B     		ldr	r3, .L48
 389 00f8 1B7A     		ldrb	r3, [r3, #8]
 390 00fa DBB2     		uxtb	r3, r3
 391 00fc 013B     		subs	r3, r3, #1
 392 00fe 6449     		ldr	r1, .L48+8
 393 0100 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 330:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 394              		.loc 1 330 0
 395 0102 9A42     		cmp	r2, r3
 396 0104 13D8     		bhi	.L14
 397              	.L15:
 333:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 398              		.loc 1 333 0
 399 0106 614B     		ldr	r3, .L48+4
 400 0108 1B78     		ldrb	r3, [r3]
 401 010a DBB2     		uxtb	r3, r3
 402 010c 03F00203 		and	r3, r3, #2
 332:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 14


 403              		.loc 1 332 0
 404 0110 002B     		cmp	r3, #0
 405 0112 40F0F480 		bne	.L16
 334:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 406              		.loc 1 334 0
 407 0116 5C4B     		ldr	r3, .L48
 408 0118 1B79     		ldrb	r3, [r3, #4]
 409 011a DAB2     		uxtb	r2, r3
 335:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 410              		.loc 1 335 0
 411 011c 5A4B     		ldr	r3, .L48
 412 011e 1B7A     		ldrb	r3, [r3, #8]
 413 0120 DBB2     		uxtb	r3, r3
 414 0122 013B     		subs	r3, r3, #1
 415 0124 5A49     		ldr	r1, .L48+8
 416 0126 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 333:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 417              		.loc 1 333 0
 418 0128 9A42     		cmp	r2, r3
 419 012a 40F2E880 		bls	.L16
 420              	.L14:
 336:Generated_Source\PSoC5/RTC_INT.c ****                 {
 337:Generated_Source\PSoC5/RTC_INT.c ****                     /* Inc Month */
 338:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.Month++;
 421              		.loc 1 338 0
 422 012e 564B     		ldr	r3, .L48
 423 0130 1B7A     		ldrb	r3, [r3, #8]
 424 0132 DBB2     		uxtb	r3, r3
 425 0134 0133     		adds	r3, r3, #1
 426 0136 DAB2     		uxtb	r2, r3
 427 0138 534B     		ldr	r3, .L48
 428 013a 1A72     		strb	r2, [r3, #8]
 339:Generated_Source\PSoC5/RTC_INT.c **** 
 340:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set first day of month */
 341:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfMonth = 1u;
 429              		.loc 1 341 0
 430 013c 524B     		ldr	r3, .L48
 431 013e 0122     		movs	r2, #1
 432 0140 1A71     		strb	r2, [r3, #4]
 342:Generated_Source\PSoC5/RTC_INT.c **** 
 343:Generated_Source\PSoC5/RTC_INT.c ****                     /* Year roll over */
 344:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 433              		.loc 1 344 0
 434 0142 514B     		ldr	r3, .L48
 435 0144 1B7A     		ldrb	r3, [r3, #8]
 436 0146 DBB2     		uxtb	r3, r3
 437 0148 0C2B     		cmp	r3, #12
 438 014a 40F28580 		bls	.L17
 345:Generated_Source\PSoC5/RTC_INT.c ****                     {
 346:Generated_Source\PSoC5/RTC_INT.c ****                         /* Inc Year */
 347:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Year++;
 439              		.loc 1 347 0
 440 014e 4E4B     		ldr	r3, .L48
 441 0150 5B89     		ldrh	r3, [r3, #10]	@ movhi
 442 0152 9BB2     		uxth	r3, r3
 443 0154 0133     		adds	r3, r3, #1
 444 0156 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 15


 445 0158 4B4B     		ldr	r3, .L48
 446 015a 5A81     		strh	r2, [r3, #10]	@ movhi
 348:Generated_Source\PSoC5/RTC_INT.c **** 
 349:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first month of year */
 350:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Month = 1u;
 447              		.loc 1 350 0
 448 015c 4A4B     		ldr	r3, .L48
 449 015e 0122     		movs	r2, #1
 450 0160 1A72     		strb	r2, [r3, #8]
 351:Generated_Source\PSoC5/RTC_INT.c **** 
 352:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first day of year */
 353:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.DayOfYear = 1u;
 451              		.loc 1 353 0
 452 0162 494B     		ldr	r3, .L48
 453 0164 0122     		movs	r2, #1
 454 0166 DA80     		strh	r2, [r3, #6]	@ movhi
 354:Generated_Source\PSoC5/RTC_INT.c **** 
 355:Generated_Source\PSoC5/RTC_INT.c ****                         /* Is this year leap */
 356:Generated_Source\PSoC5/RTC_INT.c ****                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 455              		.loc 1 356 0
 456 0168 474B     		ldr	r3, .L48
 457 016a 5B89     		ldrh	r3, [r3, #10]	@ movhi
 458 016c 9BB2     		uxth	r3, r3
 459 016e 494A     		ldr	r2, .L48+12
 460 0170 A2FB0312 		umull	r1, r2, r2, r3
 461 0174 D209     		lsrs	r2, r2, #7
 462 0176 4FF4C871 		mov	r1, #400
 463 017a 01FB02F2 		mul	r2, r1, r2
 464 017e 9B1A     		subs	r3, r3, r2
 465 0180 9BB2     		uxth	r3, r3
 466 0182 002B     		cmp	r3, #0
 467 0184 15D0     		beq	.L18
 468              		.loc 1 356 0 is_stmt 0 discriminator 1
 469 0186 404B     		ldr	r3, .L48
 470 0188 5B89     		ldrh	r3, [r3, #10]	@ movhi
 471 018a 9BB2     		uxth	r3, r3
 472 018c 03F00303 		and	r3, r3, #3
 473 0190 9BB2     		uxth	r3, r3
 474 0192 002B     		cmp	r3, #0
 475 0194 16D1     		bne	.L19
 476              		.loc 1 356 0 discriminator 2
 477 0196 3C4B     		ldr	r3, .L48
 478 0198 5B89     		ldrh	r3, [r3, #10]	@ movhi
 479 019a 9BB2     		uxth	r3, r3
 480 019c 3D4A     		ldr	r2, .L48+12
 481 019e A2FB0312 		umull	r1, r2, r2, r3
 482 01a2 5209     		lsrs	r2, r2, #5
 483 01a4 6421     		movs	r1, #100
 484 01a6 01FB02F2 		mul	r2, r1, r2
 485 01aa 9B1A     		subs	r3, r3, r2
 486 01ac 9BB2     		uxth	r3, r3
 487 01ae 002B     		cmp	r3, #0
 488 01b0 08D0     		beq	.L19
 489              	.L18:
 357:Generated_Source\PSoC5/RTC_INT.c ****                         {
 358:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set leap year flag */
 359:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_LY;
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 16


 490              		.loc 1 359 0 is_stmt 1
 491 01b2 364B     		ldr	r3, .L48+4
 492 01b4 1B78     		ldrb	r3, [r3]
 493 01b6 DBB2     		uxtb	r3, r3
 494 01b8 43F00203 		orr	r3, r3, #2
 495 01bc DAB2     		uxtb	r2, r3
 496 01be 334B     		ldr	r3, .L48+4
 497 01c0 1A70     		strb	r2, [r3]
 498 01c2 07E0     		b	.L20
 499              	.L19:
 360:Generated_Source\PSoC5/RTC_INT.c ****                         }
 361:Generated_Source\PSoC5/RTC_INT.c ****                         else    /* not leap year */
 362:Generated_Source\PSoC5/RTC_INT.c ****                         {
 363:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear leap year */
 364:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 500              		.loc 1 364 0
 501 01c4 314B     		ldr	r3, .L48+4
 502 01c6 1B78     		ldrb	r3, [r3]
 503 01c8 DBB2     		uxtb	r3, r3
 504 01ca 23F00203 		bic	r3, r3, #2
 505 01ce DAB2     		uxtb	r2, r3
 506 01d0 2E4B     		ldr	r3, .L48+4
 507 01d2 1A70     		strb	r2, [r3]
 508              	.L20:
 365:Generated_Source\PSoC5/RTC_INT.c ****                         }
 366:Generated_Source\PSoC5/RTC_INT.c **** 
 367:Generated_Source\PSoC5/RTC_INT.c ****                         /* Alarm YEAR */
 368:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 509              		.loc 1 368 0
 510 01d4 304B     		ldr	r3, .L48+16
 511 01d6 1B78     		ldrb	r3, [r3]
 512 01d8 DBB2     		uxtb	r3, r3
 513 01da 5BB2     		sxtb	r3, r3
 514 01dc 002B     		cmp	r3, #0
 515 01de 18DA     		bge	.L21
 369:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_ALARM_YEAR_MASK))
 370:Generated_Source\PSoC5/RTC_INT.c ****                         {
 371:Generated_Source\PSoC5/RTC_INT.c ****                             /* Years match */
 372:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 516              		.loc 1 372 0
 517 01e0 2E4B     		ldr	r3, .L48+20
 518 01e2 5B89     		ldrh	r3, [r3, #10]	@ movhi
 519 01e4 9AB2     		uxth	r2, r3
 520 01e6 284B     		ldr	r3, .L48
 521 01e8 5B89     		ldrh	r3, [r3, #10]	@ movhi
 522 01ea 9BB2     		uxth	r3, r3
 523 01ec 9A42     		cmp	r2, r3
 524 01ee 08D1     		bne	.L22
 373:Generated_Source\PSoC5/RTC_INT.c ****                             {
 374:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Rise year alarm */
 375:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 525              		.loc 1 375 0
 526 01f0 2B4B     		ldr	r3, .L48+24
 527 01f2 1B78     		ldrb	r3, [r3]
 528 01f4 DBB2     		uxtb	r3, r3
 529 01f6 63F07F03 		orn	r3, r3, #127
 530 01fa DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 17


 531 01fc 284B     		ldr	r3, .L48+24
 532 01fe 1A70     		strb	r2, [r3]
 533 0200 07E0     		b	.L21
 534              	.L22:
 376:Generated_Source\PSoC5/RTC_INT.c ****                             }
 377:Generated_Source\PSoC5/RTC_INT.c ****                             else    /* Years do not match */
 378:Generated_Source\PSoC5/RTC_INT.c ****                             {
 379:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Clear year alarm */
 380:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 535              		.loc 1 380 0
 536 0202 274B     		ldr	r3, .L48+24
 537 0204 1B78     		ldrb	r3, [r3]
 538 0206 DBB2     		uxtb	r3, r3
 539 0208 03F07F03 		and	r3, r3, #127
 540 020c DAB2     		uxtb	r2, r3
 541 020e 244B     		ldr	r3, .L48+24
 542 0210 1A70     		strb	r2, [r3]
 543              	.L21:
 381:Generated_Source\PSoC5/RTC_INT.c ****                             }
 382:Generated_Source\PSoC5/RTC_INT.c ****                         } /* do not alarm year */
 383:Generated_Source\PSoC5/RTC_INT.c **** 
 384:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set Alarm flag event */
 385:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_tmp = RTC_alarmCfgMask;
 544              		.loc 1 385 0
 545 0212 214B     		ldr	r3, .L48+16
 546 0214 1B78     		ldrb	r3, [r3]
 547 0216 FB71     		strb	r3, [r7, #7]
 386:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_SET_ALARM(RTC_tmp,
 548              		.loc 1 386 0
 549 0218 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 550 021a 002B     		cmp	r3, #0
 551 021c 13D0     		beq	.L23
 552              		.loc 1 386 0 is_stmt 0 discriminator 1
 553 021e 204B     		ldr	r3, .L48+24
 554 0220 1B78     		ldrb	r3, [r3]
 555 0222 DAB2     		uxtb	r2, r3
 556 0224 FB79     		ldrb	r3, [r7, #7]
 557 0226 1340     		ands	r3, r3, r2
 558 0228 DBB2     		uxtb	r3, r3
 559 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 560 022c 9A42     		cmp	r2, r3
 561 022e 0AD1     		bne	.L23
 562              		.loc 1 386 0 discriminator 2
 563 0230 164B     		ldr	r3, .L48+4
 564 0232 1B78     		ldrb	r3, [r3]
 565 0234 DBB2     		uxtb	r3, r3
 566 0236 43F00803 		orr	r3, r3, #8
 567 023a DAB2     		uxtb	r2, r3
 568 023c 134B     		ldr	r3, .L48+4
 569 023e 1A70     		strb	r2, [r3]
 570 0240 174B     		ldr	r3, .L48+24
 571 0242 0022     		movs	r2, #0
 572 0244 1A70     		strb	r2, [r3]
 573              	.L23:
 387:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_alarmCurStatus,
 388:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_statusDateTime);
 389:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 18


 390:Generated_Source\PSoC5/RTC_INT.c ****                         /* Every Year */
 391:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 574              		.loc 1 391 0 is_stmt 1
 575 0246 174B     		ldr	r3, .L48+28
 576 0248 1B78     		ldrb	r3, [r3]
 577 024a DBB2     		uxtb	r3, r3
 578 024c 03F04003 		and	r3, r3, #64
 579 0250 002B     		cmp	r3, #0
 580 0252 01D0     		beq	.L17
 392:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_INTERVAL_YEAR_MASK))
 393:Generated_Source\PSoC5/RTC_INT.c ****                         {
 394:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_EveryYearHandler();
 581              		.loc 1 394 0
 582 0254 FFF7FEFF 		bl	RTC_EveryYearHandler
 583              	.L17:
 395:Generated_Source\PSoC5/RTC_INT.c ****                         }
 396:Generated_Source\PSoC5/RTC_INT.c **** 
 397:Generated_Source\PSoC5/RTC_INT.c ****                     } /* Month > 12 */
 398:Generated_Source\PSoC5/RTC_INT.c **** 
 399:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 400:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 584              		.loc 1 400 0
 585 0258 0F4B     		ldr	r3, .L48+16
 586 025a 1B78     		ldrb	r3, [r3]
 587 025c DBB2     		uxtb	r3, r3
 588 025e 03F04003 		and	r3, r3, #64
 589 0262 002B     		cmp	r3, #0
 590 0264 28D0     		beq	.L24
 401:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 402:Generated_Source\PSoC5/RTC_INT.c ****                     {
 403:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 591              		.loc 1 403 0
 592 0266 0D4B     		ldr	r3, .L48+20
 593 0268 1B7A     		ldrb	r3, [r3, #8]
 594 026a DAB2     		uxtb	r2, r3
 595 026c 064B     		ldr	r3, .L48
 596 026e 1B7A     		ldrb	r3, [r3, #8]
 597 0270 DBB2     		uxtb	r3, r3
 598 0272 9A42     		cmp	r2, r3
 599 0274 18D1     		bne	.L25
 404:Generated_Source\PSoC5/RTC_INT.c ****                         {
 405:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set month alarm */
 406:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 600              		.loc 1 406 0
 601 0276 0A4B     		ldr	r3, .L48+24
 602 0278 1B78     		ldrb	r3, [r3]
 603 027a DBB2     		uxtb	r3, r3
 604 027c 43F04003 		orr	r3, r3, #64
 605 0280 DAB2     		uxtb	r2, r3
 606 0282 074B     		ldr	r3, .L48+24
 607 0284 1A70     		strb	r2, [r3]
 608 0286 17E0     		b	.L24
 609              	.L49:
 610              		.align	2
 611              	.L48:
 612 0288 00000000 		.word	RTC_currentTimeDate
 613 028c 00000000 		.word	RTC_statusDateTime
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 19


 614 0290 00000000 		.word	RTC_daysInMonths
 615 0294 1F85EB51 		.word	1374389535
 616 0298 00000000 		.word	RTC_alarmCfgMask
 617 029c 00000000 		.word	RTC_alarmCfgTimeDate
 618 02a0 00000000 		.word	RTC_alarmCurStatus
 619 02a4 00000000 		.word	RTC_intervalCfgMask
 620              	.L25:
 407:Generated_Source\PSoC5/RTC_INT.c ****                         }
 408:Generated_Source\PSoC5/RTC_INT.c ****                         else
 409:Generated_Source\PSoC5/RTC_INT.c ****                         {
 410:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear month alarm */
 411:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 621              		.loc 1 411 0
 622 02a8 964B     		ldr	r3, .L50
 623 02aa 1B78     		ldrb	r3, [r3]
 624 02ac DBB2     		uxtb	r3, r3
 625 02ae 23F04003 		bic	r3, r3, #64
 626 02b2 DAB2     		uxtb	r2, r3
 627 02b4 934B     		ldr	r3, .L50
 628 02b6 1A70     		strb	r2, [r3]
 629              	.L24:
 412:Generated_Source\PSoC5/RTC_INT.c ****                         }
 413:Generated_Source\PSoC5/RTC_INT.c ****                     }   /* Month alarm is masked */
 414:Generated_Source\PSoC5/RTC_INT.c **** 
 415:Generated_Source\PSoC5/RTC_INT.c ****                     #if (1u == RTC_DST_FUNC_ENABLE)
 416:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 417:Generated_Source\PSoC5/RTC_INT.c ****                         {
 418:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus |= RTC_DST_MONTH;
 419:Generated_Source\PSoC5/RTC_INT.c ****                         }
 420:Generated_Source\PSoC5/RTC_INT.c ****                         else
 421:Generated_Source\PSoC5/RTC_INT.c ****                         {
 422:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 423:Generated_Source\PSoC5/RTC_INT.c ****                         }
 424:Generated_Source\PSoC5/RTC_INT.c **** 
 425:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStart.Month == RTC_currentTimeDate.Month)
 426:Generated_Source\PSoC5/RTC_INT.c ****                         {
 427:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus |= RTC_DST_MONTH;
 428:Generated_Source\PSoC5/RTC_INT.c ****                         }
 429:Generated_Source\PSoC5/RTC_INT.c ****                         else
 430:Generated_Source\PSoC5/RTC_INT.c ****                         {
 431:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus &= (uint8)(~RTC_DST_MONTH);
 432:Generated_Source\PSoC5/RTC_INT.c ****                         }
 433:Generated_Source\PSoC5/RTC_INT.c ****                     #endif /* 1u == RTC_DST_FUNC_ENABLE */
 434:Generated_Source\PSoC5/RTC_INT.c **** 
 435:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 436:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 630              		.loc 1 436 0
 631 02b8 934B     		ldr	r3, .L50+4
 632 02ba 1B78     		ldrb	r3, [r3]
 633 02bc FB71     		strb	r3, [r7, #7]
 437:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 634              		.loc 1 437 0
 635 02be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 636 02c0 002B     		cmp	r3, #0
 637 02c2 13D0     		beq	.L26
 638              		.loc 1 437 0 is_stmt 0 discriminator 1
 639 02c4 8F4B     		ldr	r3, .L50
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 20


 640 02c6 1B78     		ldrb	r3, [r3]
 641 02c8 DAB2     		uxtb	r2, r3
 642 02ca FB79     		ldrb	r3, [r7, #7]
 643 02cc 1340     		ands	r3, r3, r2
 644 02ce DBB2     		uxtb	r3, r3
 645 02d0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 646 02d2 9A42     		cmp	r2, r3
 647 02d4 0AD1     		bne	.L26
 648              		.loc 1 437 0 discriminator 2
 649 02d6 8D4B     		ldr	r3, .L50+8
 650 02d8 1B78     		ldrb	r3, [r3]
 651 02da DBB2     		uxtb	r3, r3
 652 02dc 43F00803 		orr	r3, r3, #8
 653 02e0 DAB2     		uxtb	r2, r3
 654 02e2 8A4B     		ldr	r3, .L50+8
 655 02e4 1A70     		strb	r2, [r3]
 656 02e6 874B     		ldr	r3, .L50
 657 02e8 0022     		movs	r2, #0
 658 02ea 1A70     		strb	r2, [r3]
 659              	.L26:
 438:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 439:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 440:Generated_Source\PSoC5/RTC_INT.c **** 
 441:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Month */
 442:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 660              		.loc 1 442 0 is_stmt 1
 661 02ec 884B     		ldr	r3, .L50+12
 662 02ee 1B78     		ldrb	r3, [r3]
 663 02f0 DBB2     		uxtb	r3, r3
 664 02f2 03F02003 		and	r3, r3, #32
 665 02f6 002B     		cmp	r3, #0
 666 02f8 01D0     		beq	.L16
 443:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_MONTH_MASK))
 444:Generated_Source\PSoC5/RTC_INT.c ****                     {
 445:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_EveryMonthHandler();
 667              		.loc 1 445 0
 668 02fa FFF7FEFF 		bl	RTC_EveryMonthHandler
 669              	.L16:
 446:Generated_Source\PSoC5/RTC_INT.c ****                     }
 447:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day roll over */
 448:Generated_Source\PSoC5/RTC_INT.c **** 
 449:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFWEEK */
 450:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 670              		.loc 1 450 0
 671 02fe 824B     		ldr	r3, .L50+4
 672 0300 1B78     		ldrb	r3, [r3]
 673 0302 DBB2     		uxtb	r3, r3
 674 0304 03F00803 		and	r3, r3, #8
 675 0308 002B     		cmp	r3, #0
 676 030a 18D0     		beq	.L27
 451:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFWEEK_MASK))
 452:Generated_Source\PSoC5/RTC_INT.c ****                 {
 453:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 677              		.loc 1 453 0
 678 030c 814B     		ldr	r3, .L50+16
 679 030e DB78     		ldrb	r3, [r3, #3]
 680 0310 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 21


 681 0312 814B     		ldr	r3, .L50+20
 682 0314 DB78     		ldrb	r3, [r3, #3]
 683 0316 DBB2     		uxtb	r3, r3
 684 0318 9A42     		cmp	r2, r3
 685 031a 08D1     		bne	.L28
 454:Generated_Source\PSoC5/RTC_INT.c ****                     {
 455:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of week alarm */
 456:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 686              		.loc 1 456 0
 687 031c 794B     		ldr	r3, .L50
 688 031e 1B78     		ldrb	r3, [r3]
 689 0320 DBB2     		uxtb	r3, r3
 690 0322 43F00803 		orr	r3, r3, #8
 691 0326 DAB2     		uxtb	r2, r3
 692 0328 764B     		ldr	r3, .L50
 693 032a 1A70     		strb	r2, [r3]
 694 032c 07E0     		b	.L27
 695              	.L28:
 457:Generated_Source\PSoC5/RTC_INT.c ****                     }
 458:Generated_Source\PSoC5/RTC_INT.c ****                     else
 459:Generated_Source\PSoC5/RTC_INT.c ****                     {
 460:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of week alarm */
 461:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 696              		.loc 1 461 0
 697 032e 754B     		ldr	r3, .L50
 698 0330 1B78     		ldrb	r3, [r3]
 699 0332 DBB2     		uxtb	r3, r3
 700 0334 23F00803 		bic	r3, r3, #8
 701 0338 DAB2     		uxtb	r2, r3
 702 033a 724B     		ldr	r3, .L50
 703 033c 1A70     		strb	r2, [r3]
 704              	.L27:
 462:Generated_Source\PSoC5/RTC_INT.c ****                     }
 463:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of week alarm is masked */
 464:Generated_Source\PSoC5/RTC_INT.c **** 
 465:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFYEAR */
 466:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 705              		.loc 1 466 0
 706 033e 724B     		ldr	r3, .L50+4
 707 0340 1B78     		ldrb	r3, [r3]
 708 0342 DBB2     		uxtb	r3, r3
 709 0344 03F02003 		and	r3, r3, #32
 710 0348 002B     		cmp	r3, #0
 711 034a 18D0     		beq	.L29
 467:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFYEAR_MASK))
 468:Generated_Source\PSoC5/RTC_INT.c ****                 {
 469:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 712              		.loc 1 469 0
 713 034c 714B     		ldr	r3, .L50+16
 714 034e DB88     		ldrh	r3, [r3, #6]	@ movhi
 715 0350 9AB2     		uxth	r2, r3
 716 0352 714B     		ldr	r3, .L50+20
 717 0354 DB88     		ldrh	r3, [r3, #6]	@ movhi
 718 0356 9BB2     		uxth	r3, r3
 719 0358 9A42     		cmp	r2, r3
 720 035a 08D1     		bne	.L30
 470:Generated_Source\PSoC5/RTC_INT.c ****                     {
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 22


 471:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of year alarm */
 472:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 721              		.loc 1 472 0
 722 035c 694B     		ldr	r3, .L50
 723 035e 1B78     		ldrb	r3, [r3]
 724 0360 DBB2     		uxtb	r3, r3
 725 0362 43F02003 		orr	r3, r3, #32
 726 0366 DAB2     		uxtb	r2, r3
 727 0368 664B     		ldr	r3, .L50
 728 036a 1A70     		strb	r2, [r3]
 729 036c 07E0     		b	.L29
 730              	.L30:
 473:Generated_Source\PSoC5/RTC_INT.c ****                     }
 474:Generated_Source\PSoC5/RTC_INT.c ****                     else
 475:Generated_Source\PSoC5/RTC_INT.c ****                     {
 476:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of year alarm */
 477:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 731              		.loc 1 477 0
 732 036e 654B     		ldr	r3, .L50
 733 0370 1B78     		ldrb	r3, [r3]
 734 0372 DBB2     		uxtb	r3, r3
 735 0374 23F02003 		bic	r3, r3, #32
 736 0378 DAB2     		uxtb	r2, r3
 737 037a 624B     		ldr	r3, .L50
 738 037c 1A70     		strb	r2, [r3]
 739              	.L29:
 478:Generated_Source\PSoC5/RTC_INT.c ****                     }
 479:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of year alarm is masked */
 480:Generated_Source\PSoC5/RTC_INT.c **** 
 481:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFMONTH */
 482:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 740              		.loc 1 482 0
 741 037e 624B     		ldr	r3, .L50+4
 742 0380 1B78     		ldrb	r3, [r3]
 743 0382 DBB2     		uxtb	r3, r3
 744 0384 03F01003 		and	r3, r3, #16
 745 0388 002B     		cmp	r3, #0
 746 038a 18D0     		beq	.L31
 483:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_ALARM_DAYOFMONTH_MASK))
 484:Generated_Source\PSoC5/RTC_INT.c ****                 {
 485:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 747              		.loc 1 485 0
 748 038c 614B     		ldr	r3, .L50+16
 749 038e 1B79     		ldrb	r3, [r3, #4]
 750 0390 DAB2     		uxtb	r2, r3
 751 0392 614B     		ldr	r3, .L50+20
 752 0394 1B79     		ldrb	r3, [r3, #4]
 753 0396 DBB2     		uxtb	r3, r3
 754 0398 9A42     		cmp	r2, r3
 755 039a 08D1     		bne	.L32
 486:Generated_Source\PSoC5/RTC_INT.c ****                     {
 487:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of month alarm */
 488:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 756              		.loc 1 488 0
 757 039c 594B     		ldr	r3, .L50
 758 039e 1B78     		ldrb	r3, [r3]
 759 03a0 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 23


 760 03a2 43F01003 		orr	r3, r3, #16
 761 03a6 DAB2     		uxtb	r2, r3
 762 03a8 564B     		ldr	r3, .L50
 763 03aa 1A70     		strb	r2, [r3]
 764 03ac 07E0     		b	.L31
 765              	.L32:
 489:Generated_Source\PSoC5/RTC_INT.c ****                     }
 490:Generated_Source\PSoC5/RTC_INT.c ****                     else
 491:Generated_Source\PSoC5/RTC_INT.c ****                     {
 492:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of month alarm */
 493:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 766              		.loc 1 493 0
 767 03ae 554B     		ldr	r3, .L50
 768 03b0 1B78     		ldrb	r3, [r3]
 769 03b2 DBB2     		uxtb	r3, r3
 770 03b4 23F01003 		bic	r3, r3, #16
 771 03b8 DAB2     		uxtb	r2, r3
 772 03ba 524B     		ldr	r3, .L50
 773 03bc 1A70     		strb	r2, [r3]
 774              	.L31:
 494:Generated_Source\PSoC5/RTC_INT.c ****                     }
 495:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of month alarm is masked */
 496:Generated_Source\PSoC5/RTC_INT.c **** 
 497:Generated_Source\PSoC5/RTC_INT.c ****                 #if (1u == RTC_DST_FUNC_ENABLE)
 498:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStop.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 499:Generated_Source\PSoC5/RTC_INT.c ****                     {
 500:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 501:Generated_Source\PSoC5/RTC_INT.c ****                     }
 502:Generated_Source\PSoC5/RTC_INT.c ****                     else
 503:Generated_Source\PSoC5/RTC_INT.c ****                     {
 504:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 505:Generated_Source\PSoC5/RTC_INT.c ****                     }
 506:Generated_Source\PSoC5/RTC_INT.c **** 
 507:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStart.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 508:Generated_Source\PSoC5/RTC_INT.c ****                     {
 509:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus |= RTC_DST_DAYOFMONTH;
 510:Generated_Source\PSoC5/RTC_INT.c ****                     }
 511:Generated_Source\PSoC5/RTC_INT.c ****                     else
 512:Generated_Source\PSoC5/RTC_INT.c ****                     {
 513:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 514:Generated_Source\PSoC5/RTC_INT.c ****                     }
 515:Generated_Source\PSoC5/RTC_INT.c ****                 #endif /* 1u == RTC_DST_FUNC_ENABLE */
 516:Generated_Source\PSoC5/RTC_INT.c **** 
 517:Generated_Source\PSoC5/RTC_INT.c ****                 /* Set Alarm flag event */
 518:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_tmp = RTC_alarmCfgMask;
 775              		.loc 1 518 0
 776 03be 524B     		ldr	r3, .L50+4
 777 03c0 1B78     		ldrb	r3, [r3]
 778 03c2 FB71     		strb	r3, [r7, #7]
 519:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_SET_ALARM(RTC_tmp,
 779              		.loc 1 519 0
 780 03c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 781 03c6 002B     		cmp	r3, #0
 782 03c8 13D0     		beq	.L33
 783              		.loc 1 519 0 is_stmt 0 discriminator 1
 784 03ca 4E4B     		ldr	r3, .L50
 785 03cc 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 24


 786 03ce DAB2     		uxtb	r2, r3
 787 03d0 FB79     		ldrb	r3, [r7, #7]
 788 03d2 1340     		ands	r3, r3, r2
 789 03d4 DBB2     		uxtb	r3, r3
 790 03d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 791 03d8 9A42     		cmp	r2, r3
 792 03da 0AD1     		bne	.L33
 793              		.loc 1 519 0 discriminator 2
 794 03dc 4B4B     		ldr	r3, .L50+8
 795 03de 1B78     		ldrb	r3, [r3]
 796 03e0 DBB2     		uxtb	r3, r3
 797 03e2 43F00803 		orr	r3, r3, #8
 798 03e6 DAB2     		uxtb	r2, r3
 799 03e8 484B     		ldr	r3, .L50+8
 800 03ea 1A70     		strb	r2, [r3]
 801 03ec 454B     		ldr	r3, .L50
 802 03ee 0022     		movs	r2, #0
 803 03f0 1A70     		strb	r2, [r3]
 804              	.L33:
 520:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_alarmCurStatus,
 521:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_statusDateTime);
 522:Generated_Source\PSoC5/RTC_INT.c **** 
 523:Generated_Source\PSoC5/RTC_INT.c ****                 /* Every Day */
 524:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 805              		.loc 1 524 0 is_stmt 1
 806 03f2 474B     		ldr	r3, .L50+12
 807 03f4 1B78     		ldrb	r3, [r3]
 808 03f6 DBB2     		uxtb	r3, r3
 809 03f8 03F00803 		and	r3, r3, #8
 810 03fc 002B     		cmp	r3, #0
 811 03fe 01D0     		beq	.L34
 525:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_INTERVAL_DAY_MASK))
 526:Generated_Source\PSoC5/RTC_INT.c ****                 {
 527:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_EveryDayHandler();
 812              		.loc 1 527 0
 813 0400 FFF7FEFF 		bl	RTC_EveryDayHandler
 814              	.L34:
 528:Generated_Source\PSoC5/RTC_INT.c ****                 }
 529:Generated_Source\PSoC5/RTC_INT.c **** 
 530:Generated_Source\PSoC5/RTC_INT.c ****                 if(1u == RTC_currentTimeDate.DayOfWeek)
 815              		.loc 1 530 0
 816 0404 444B     		ldr	r3, .L50+20
 817 0406 DB78     		ldrb	r3, [r3, #3]
 818 0408 DBB2     		uxtb	r3, r3
 819 040a 012B     		cmp	r3, #1
 820 040c 08D1     		bne	.L11
 531:Generated_Source\PSoC5/RTC_INT.c ****                 {
 532:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Week */
 533:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 821              		.loc 1 533 0
 822 040e 404B     		ldr	r3, .L50+12
 823 0410 1B78     		ldrb	r3, [r3]
 824 0412 DBB2     		uxtb	r3, r3
 825 0414 03F01003 		and	r3, r3, #16
 826 0418 002B     		cmp	r3, #0
 827 041a 01D0     		beq	.L11
 534:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_WEEK_MASK))
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 25


 535:Generated_Source\PSoC5/RTC_INT.c ****                     {
 536:Generated_Source\PSoC5/RTC_INT.c ****                        RTC_EveryWeekHandler();
 828              		.loc 1 536 0
 829 041c FFF7FEFF 		bl	RTC_EveryWeekHandler
 830              	.L11:
 537:Generated_Source\PSoC5/RTC_INT.c ****                     }
 538:Generated_Source\PSoC5/RTC_INT.c ****                 }
 539:Generated_Source\PSoC5/RTC_INT.c **** 
 540:Generated_Source\PSoC5/RTC_INT.c ****             } /* End of day roll over */
 541:Generated_Source\PSoC5/RTC_INT.c **** 
 542:Generated_Source\PSoC5/RTC_INT.c ****             /* Status set PM/AM flag */
 543:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 831              		.loc 1 543 0
 832 0420 3D4B     		ldr	r3, .L50+20
 833 0422 9B78     		ldrb	r3, [r3, #2]
 834 0424 DBB2     		uxtb	r3, r3
 835 0426 0B2B     		cmp	r3, #11
 836 0428 08D8     		bhi	.L35
 544:Generated_Source\PSoC5/RTC_INT.c ****             {
 545:Generated_Source\PSoC5/RTC_INT.c ****                 /* AM Hour 00:00-11:59, flag zero */
 546:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 837              		.loc 1 546 0
 838 042a 384B     		ldr	r3, .L50+8
 839 042c 1B78     		ldrb	r3, [r3]
 840 042e DBB2     		uxtb	r3, r3
 841 0430 23F00403 		bic	r3, r3, #4
 842 0434 DAB2     		uxtb	r2, r3
 843 0436 354B     		ldr	r3, .L50+8
 844 0438 1A70     		strb	r2, [r3]
 845 043a 07E0     		b	.L36
 846              	.L35:
 547:Generated_Source\PSoC5/RTC_INT.c ****             }
 548:Generated_Source\PSoC5/RTC_INT.c ****             else
 549:Generated_Source\PSoC5/RTC_INT.c ****             {
 550:Generated_Source\PSoC5/RTC_INT.c ****                 /* PM Hour 12:00-23:59, flag set */
 551:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime |= RTC_STATUS_AM_PM;
 847              		.loc 1 551 0
 848 043c 334B     		ldr	r3, .L50+8
 849 043e 1B78     		ldrb	r3, [r3]
 850 0440 DBB2     		uxtb	r3, r3
 851 0442 43F00403 		orr	r3, r3, #4
 852 0446 DAB2     		uxtb	r2, r3
 853 0448 304B     		ldr	r3, .L50+8
 854 044a 1A70     		strb	r2, [r3]
 855              	.L36:
 552:Generated_Source\PSoC5/RTC_INT.c ****             }
 553:Generated_Source\PSoC5/RTC_INT.c **** 
 554:Generated_Source\PSoC5/RTC_INT.c ****             #if (1u == RTC_DST_FUNC_ENABLE)
 555:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStop.Hour == RTC_currentTimeDate.Hour)
 556:Generated_Source\PSoC5/RTC_INT.c ****                 {
 557:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus |= RTC_DST_HOUR;
 558:Generated_Source\PSoC5/RTC_INT.c ****                 }
 559:Generated_Source\PSoC5/RTC_INT.c ****                 else
 560:Generated_Source\PSoC5/RTC_INT.c ****                 {
 561:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus &= (uint8)(~RTC_DST_HOUR);
 562:Generated_Source\PSoC5/RTC_INT.c ****                 }
 563:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 26


 564:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStart.Hour == RTC_currentTimeDate.Hour)
 565:Generated_Source\PSoC5/RTC_INT.c ****                 {
 566:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStartStatus |= RTC_DST_HOUR;
 567:Generated_Source\PSoC5/RTC_INT.c ****                 }
 568:Generated_Source\PSoC5/RTC_INT.c ****                 else
 569:Generated_Source\PSoC5/RTC_INT.c ****                 {
 570:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_dstStartStatus &= (uint8)(~RTC_DST_HOUR);
 571:Generated_Source\PSoC5/RTC_INT.c ****                 }
 572:Generated_Source\PSoC5/RTC_INT.c **** 
 573:Generated_Source\PSoC5/RTC_INT.c ****                 /* DST Enable ? */
 574:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_ENABLE))
 575:Generated_Source\PSoC5/RTC_INT.c ****                 {
 576:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_statusDateTime, RTC_STATUS_DST))
 577:Generated_Source\PSoC5/RTC_INT.c ****                     {
 578:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStopStatus, RTC_DST_HOUR |
 579:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_DAYOFMONTH | RTC_DST_MONTH))
 580:Generated_Source\PSoC5/RTC_INT.c ****                         {
 581:Generated_Source\PSoC5/RTC_INT.c ****                             /* Substruct from current value of minutes, number of minutes
 582:Generated_Source\PSoC5/RTC_INT.c ****                             * in DST offset which is out of complete hour
 583:Generated_Source\PSoC5/RTC_INT.c ****                             */
 584:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min -=
 585:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 586:Generated_Source\PSoC5/RTC_INT.c **** 
 587:Generated_Source\PSoC5/RTC_INT.c ****                             /* Is minute value negative? */
 588:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 589:Generated_Source\PSoC5/RTC_INT.c ****                             {
 590:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 591:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED -     (~currentTimeDate.Min    ) ==
 592:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED + 1 - (~currentTimeDate.Min + 1)
 593:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 594:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min = RTC_HOUR_ELAPSED -
 595:Generated_Source\PSoC5/RTC_INT.c ****                                                              ((uint8)(~RTC_currentTimeDate.Min));
 596:Generated_Source\PSoC5/RTC_INT.c **** 
 597:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour--;
 598:Generated_Source\PSoC5/RTC_INT.c ****                             }
 599:Generated_Source\PSoC5/RTC_INT.c **** 
 600:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour -= RTC_dstOffsetMin /
 601:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 602:Generated_Source\PSoC5/RTC_INT.c **** 
 603:Generated_Source\PSoC5/RTC_INT.c ****                             /* Day roll over
 604:Generated_Source\PSoC5/RTC_INT.c ****                             * Is hour value negative? */
 605:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 606:Generated_Source\PSoC5/RTC_INT.c ****                             {
 607:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 608:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED - (~currentTimeDate.Hour) ==
 609:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED + 1 - (~currentTimeDate.Hour + 1)
 610:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 611:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour = RTC_DAY_ELAPSED -
 612:Generated_Source\PSoC5/RTC_INT.c ****                                                               ((uint8)(~RTC_currentTimeDate.Hour));
 613:Generated_Source\PSoC5/RTC_INT.c **** 
 614:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 615:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 616:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 617:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 618:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 619:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 620:Generated_Source\PSoC5/RTC_INT.c ****                                 else
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 27


 621:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 622:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 623:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 624:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 625:Generated_Source\PSoC5/RTC_INT.c **** 
 626:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth--;
 627:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear--;
 628:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek--;
 629:Generated_Source\PSoC5/RTC_INT.c **** 
 630:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfWeek)
 631:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 632:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = RTC_DAYS_IN_WEEK;
 633:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 634:Generated_Source\PSoC5/RTC_INT.c **** 
 635:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfMonth)
 636:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 637:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month--;
 638:Generated_Source\PSoC5/RTC_INT.c ****                                     if(0u == RTC_currentTimeDate.Month)
 639:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 640:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_DECEMBER;
 641:Generated_Source\PSoC5/RTC_INT.c **** 
 642:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfMonth =
 643:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 644:Generated_Source\PSoC5/RTC_INT.c **** 
 645:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year--;
 646:Generated_Source\PSoC5/RTC_INT.c **** 
 647:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 648:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 649:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 650:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 651:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear =
 652:Generated_Source\PSoC5/RTC_INT.c ****                                                                                     RTC_DAYS_IN_LEA
 653:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 654:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 655:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 656:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 657:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear = RTC_DAYS_IN_YEAR;
 658:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 659:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 660:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 661:Generated_Source\PSoC5/RTC_INT.c ****                                     else
 662:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 663:Generated_Source\PSoC5/RTC_INT.c ****                                         /* Day of month roll over.
 664:Generated_Source\PSoC5/RTC_INT.c ****                                         * Check if day of month February 29 of leap year
 665:Generated_Source\PSoC5/RTC_INT.c ****                                         */
 666:Generated_Source\PSoC5/RTC_INT.c ****                                         if((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 667:Generated_Source\PSoC5/RTC_INT.c ****                                             (RTC_currentTimeDate.Month == RTC_FEBRUARY))
 668:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 669:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
 670:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u]
 671:Generated_Source\PSoC5/RTC_INT.c ****                                             + 1u;
 672:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 673:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 674:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 675:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
 676:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 677:Generated_Source\PSoC5/RTC_INT.c ****                                         }
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 28


 678:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 679:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 680:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 681:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 682:Generated_Source\PSoC5/RTC_INT.c ****                             }
 683:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
 684:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus = 0u;
 685:Generated_Source\PSoC5/RTC_INT.c ****                         }
 686:Generated_Source\PSoC5/RTC_INT.c ****                     }
 687:Generated_Source\PSoC5/RTC_INT.c ****                     else
 688:Generated_Source\PSoC5/RTC_INT.c ****                     {
 689:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStartStatus,
 690:Generated_Source\PSoC5/RTC_INT.c ****                                                       (RTC_DST_HOUR | RTC_DST_DAYOFMONTH |
 691:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_MONTH)))
 692:Generated_Source\PSoC5/RTC_INT.c ****                         {
 693:Generated_Source\PSoC5/RTC_INT.c ****                             /* Add Hour and Min */
 694:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min +=
 695:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 696:Generated_Source\PSoC5/RTC_INT.c **** 
 697:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 698:Generated_Source\PSoC5/RTC_INT.c ****                             {
 699:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust Min */
 700:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min -= (RTC_HOUR_ELAPSED + 1u);
 701:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour++;
 702:Generated_Source\PSoC5/RTC_INT.c ****                             }
 703:Generated_Source\PSoC5/RTC_INT.c **** 
 704:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour += RTC_dstOffsetMin /
 705:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 706:Generated_Source\PSoC5/RTC_INT.c **** 
 707:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 708:Generated_Source\PSoC5/RTC_INT.c ****                             {
 709:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust hour, add day */
 710:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour -= (RTC_DAY_ELAPSED + 1u);
 711:Generated_Source\PSoC5/RTC_INT.c **** 
 712:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 713:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 714:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 715:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 716:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 717:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 718:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 719:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 720:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 721:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 722:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 723:Generated_Source\PSoC5/RTC_INT.c **** 
 724:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth++;
 725:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear++;
 726:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek++;
 727:Generated_Source\PSoC5/RTC_INT.c **** 
 728:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 729:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 730:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = 1u;
 731:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 732:Generated_Source\PSoC5/RTC_INT.c **** 
 733:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Day of month roll over.
 734:Generated_Source\PSoC5/RTC_INT.c ****                                 * Check if day of month greater than 29 in February of leap year or
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 29


 735:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than 28 NOT in February of NON leap year 
 736:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than it should be in every month in non l
 737:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 738:Generated_Source\PSoC5/RTC_INT.c ****                                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 739:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 740:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 741:Generated_Source\PSoC5/RTC_INT.c ****                                   (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 742:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 743:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month != RTC_FEBRUARY)  &&
 744:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 745:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 746:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY)) &&
 747:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 748:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 749:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 750:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month++;
 751:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfMonth = 1u;
 752:Generated_Source\PSoC5/RTC_INT.c ****                                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 753:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 754:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_JANUARY;
 755:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year++;
 756:Generated_Source\PSoC5/RTC_INT.c **** 
 757:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 758:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 759:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 760:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 761:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 762:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 763:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 764:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 765:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 766:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfYear = 1u;
 767:Generated_Source\PSoC5/RTC_INT.c **** 
 768:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 769:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 770:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 771:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 772:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 773:Generated_Source\PSoC5/RTC_INT.c ****                             }
 774:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_DST;
 775:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus = 0u;
 776:Generated_Source\PSoC5/RTC_INT.c **** 
 777:Generated_Source\PSoC5/RTC_INT.c ****                             /* Month */
 778:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 779:Generated_Source\PSoC5/RTC_INT.c ****                             {
 780:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_MONTH;
 781:Generated_Source\PSoC5/RTC_INT.c ****                             }
 782:Generated_Source\PSoC5/RTC_INT.c ****                             else
 783:Generated_Source\PSoC5/RTC_INT.c ****                             {
 784:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 785:Generated_Source\PSoC5/RTC_INT.c ****                             }
 786:Generated_Source\PSoC5/RTC_INT.c **** 
 787:Generated_Source\PSoC5/RTC_INT.c ****                             /* DayOfMonth */
 788:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.DayOfMonth ==
 789:Generated_Source\PSoC5/RTC_INT.c ****                                                                             RTC_currentTimeDate.Day
 790:Generated_Source\PSoC5/RTC_INT.c ****                             {
 791:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 30


 792:Generated_Source\PSoC5/RTC_INT.c ****                             }
 793:Generated_Source\PSoC5/RTC_INT.c ****                             else
 794:Generated_Source\PSoC5/RTC_INT.c ****                             {
 795:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 796:Generated_Source\PSoC5/RTC_INT.c ****                             }
 797:Generated_Source\PSoC5/RTC_INT.c ****                         }
 798:Generated_Source\PSoC5/RTC_INT.c ****                     }
 799:Generated_Source\PSoC5/RTC_INT.c **** 
 800:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFWEEK */
 801:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 802:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFWEEK_MASK))
 803:Generated_Source\PSoC5/RTC_INT.c ****                     {
 804:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 805:Generated_Source\PSoC5/RTC_INT.c ****                         {
 806:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 807:Generated_Source\PSoC5/RTC_INT.c ****                         }
 808:Generated_Source\PSoC5/RTC_INT.c ****                         else
 809:Generated_Source\PSoC5/RTC_INT.c ****                         {
 810:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 811:Generated_Source\PSoC5/RTC_INT.c ****                         }
 812:Generated_Source\PSoC5/RTC_INT.c ****                     }
 813:Generated_Source\PSoC5/RTC_INT.c **** 
 814:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFYEAR */
 815:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 816:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFYEAR_MASK))
 817:Generated_Source\PSoC5/RTC_INT.c ****                     {
 818:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 819:Generated_Source\PSoC5/RTC_INT.c ****                         {
 820:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 821:Generated_Source\PSoC5/RTC_INT.c ****                         }
 822:Generated_Source\PSoC5/RTC_INT.c ****                         else
 823:Generated_Source\PSoC5/RTC_INT.c ****                         {
 824:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 825:Generated_Source\PSoC5/RTC_INT.c ****                         }
 826:Generated_Source\PSoC5/RTC_INT.c ****                     }
 827:Generated_Source\PSoC5/RTC_INT.c **** 
 828:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFMONTH */
 829:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 830:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFMONTH_MASK))
 831:Generated_Source\PSoC5/RTC_INT.c ****                     {
 832:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 833:Generated_Source\PSoC5/RTC_INT.c ****                         {
 834:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 835:Generated_Source\PSoC5/RTC_INT.c ****                         }
 836:Generated_Source\PSoC5/RTC_INT.c ****                         else
 837:Generated_Source\PSoC5/RTC_INT.c ****                         {
 838:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 839:Generated_Source\PSoC5/RTC_INT.c ****                         }
 840:Generated_Source\PSoC5/RTC_INT.c ****                     }
 841:Generated_Source\PSoC5/RTC_INT.c **** 
 842:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 843:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 844:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 845:Generated_Source\PSoC5/RTC_INT.c ****                     {
 846:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 847:Generated_Source\PSoC5/RTC_INT.c ****                         {
 848:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 31


 849:Generated_Source\PSoC5/RTC_INT.c ****                         }
 850:Generated_Source\PSoC5/RTC_INT.c ****                         else
 851:Generated_Source\PSoC5/RTC_INT.c ****                         {
 852:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 853:Generated_Source\PSoC5/RTC_INT.c ****                         }
 854:Generated_Source\PSoC5/RTC_INT.c ****                     }
 855:Generated_Source\PSoC5/RTC_INT.c **** 
 856:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm YEAR */
 857:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 858:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_YEAR_MASK))
 859:Generated_Source\PSoC5/RTC_INT.c ****                     {
 860:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 861:Generated_Source\PSoC5/RTC_INT.c ****                         {
 862:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 863:Generated_Source\PSoC5/RTC_INT.c ****                         }
 864:Generated_Source\PSoC5/RTC_INT.c ****                         else
 865:Generated_Source\PSoC5/RTC_INT.c ****                         {
 866:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 867:Generated_Source\PSoC5/RTC_INT.c ****                         }
 868:Generated_Source\PSoC5/RTC_INT.c ****                     }
 869:Generated_Source\PSoC5/RTC_INT.c **** 
 870:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 871:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 872:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 873:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 874:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 875:Generated_Source\PSoC5/RTC_INT.c ****                 }
 876:Generated_Source\PSoC5/RTC_INT.c ****             #endif /* 1u == RTC_DST_FUNC_ENABLE */
 877:Generated_Source\PSoC5/RTC_INT.c **** 
 878:Generated_Source\PSoC5/RTC_INT.c ****             /* Alarm HOUR */
 879:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_HOUR_MASK))
 856              		.loc 1 879 0
 857 044c 2E4B     		ldr	r3, .L50+4
 858 044e 1B78     		ldrb	r3, [r3]
 859 0450 DBB2     		uxtb	r3, r3
 860 0452 03F00403 		and	r3, r3, #4
 861 0456 002B     		cmp	r3, #0
 862 0458 18D0     		beq	.L37
 880:Generated_Source\PSoC5/RTC_INT.c ****             {
 881:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_alarmCfgTimeDate.Hour == RTC_currentTimeDate.Hour)
 863              		.loc 1 881 0
 864 045a 2E4B     		ldr	r3, .L50+16
 865 045c 9B78     		ldrb	r3, [r3, #2]
 866 045e DAB2     		uxtb	r2, r3
 867 0460 2D4B     		ldr	r3, .L50+20
 868 0462 9B78     		ldrb	r3, [r3, #2]
 869 0464 DBB2     		uxtb	r3, r3
 870 0466 9A42     		cmp	r2, r3
 871 0468 08D1     		bne	.L38
 882:Generated_Source\PSoC5/RTC_INT.c ****                 {
 883:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus |= RTC_ALARM_HOUR_MASK;
 872              		.loc 1 883 0
 873 046a 264B     		ldr	r3, .L50
 874 046c 1B78     		ldrb	r3, [r3]
 875 046e DBB2     		uxtb	r3, r3
 876 0470 43F00403 		orr	r3, r3, #4
 877 0474 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 32


 878 0476 234B     		ldr	r3, .L50
 879 0478 1A70     		strb	r2, [r3]
 880 047a 07E0     		b	.L37
 881              	.L38:
 884:Generated_Source\PSoC5/RTC_INT.c ****                 }
 885:Generated_Source\PSoC5/RTC_INT.c ****                 else
 886:Generated_Source\PSoC5/RTC_INT.c ****                 {
 887:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_HOUR_MASK);
 882              		.loc 1 887 0
 883 047c 214B     		ldr	r3, .L50
 884 047e 1B78     		ldrb	r3, [r3]
 885 0480 DBB2     		uxtb	r3, r3
 886 0482 23F00403 		bic	r3, r3, #4
 887 0486 DAB2     		uxtb	r2, r3
 888 0488 1E4B     		ldr	r3, .L50
 889 048a 1A70     		strb	r2, [r3]
 890              	.L37:
 888:Generated_Source\PSoC5/RTC_INT.c ****                 }
 889:Generated_Source\PSoC5/RTC_INT.c ****             }
 890:Generated_Source\PSoC5/RTC_INT.c **** 
 891:Generated_Source\PSoC5/RTC_INT.c ****             /* Set Alarm flag event */
 892:Generated_Source\PSoC5/RTC_INT.c ****             RTC_tmp = RTC_alarmCfgMask;
 891              		.loc 1 892 0
 892 048c 1E4B     		ldr	r3, .L50+4
 893 048e 1B78     		ldrb	r3, [r3]
 894 0490 FB71     		strb	r3, [r7, #7]
 893:Generated_Source\PSoC5/RTC_INT.c ****             RTC_SET_ALARM(RTC_tmp,
 895              		.loc 1 893 0
 896 0492 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 897 0494 002B     		cmp	r3, #0
 898 0496 13D0     		beq	.L39
 899              		.loc 1 893 0 is_stmt 0 discriminator 1
 900 0498 1A4B     		ldr	r3, .L50
 901 049a 1B78     		ldrb	r3, [r3]
 902 049c DAB2     		uxtb	r2, r3
 903 049e FB79     		ldrb	r3, [r7, #7]
 904 04a0 1340     		ands	r3, r3, r2
 905 04a2 DBB2     		uxtb	r3, r3
 906 04a4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 907 04a6 9A42     		cmp	r2, r3
 908 04a8 0AD1     		bne	.L39
 909              		.loc 1 893 0 discriminator 2
 910 04aa 184B     		ldr	r3, .L50+8
 911 04ac 1B78     		ldrb	r3, [r3]
 912 04ae DBB2     		uxtb	r3, r3
 913 04b0 43F00803 		orr	r3, r3, #8
 914 04b4 DAB2     		uxtb	r2, r3
 915 04b6 154B     		ldr	r3, .L50+8
 916 04b8 1A70     		strb	r2, [r3]
 917 04ba 124B     		ldr	r3, .L50
 918 04bc 0022     		movs	r2, #0
 919 04be 1A70     		strb	r2, [r3]
 920              	.L39:
 894:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_alarmCurStatus,
 895:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_statusDateTime);
 896:Generated_Source\PSoC5/RTC_INT.c **** 
 897:Generated_Source\PSoC5/RTC_INT.c ****             /* Every Hour */
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 33


 898:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_HOUR_MASK))
 921              		.loc 1 898 0 is_stmt 1
 922 04c0 134B     		ldr	r3, .L50+12
 923 04c2 1B78     		ldrb	r3, [r3]
 924 04c4 DBB2     		uxtb	r3, r3
 925 04c6 03F00403 		and	r3, r3, #4
 926 04ca 002B     		cmp	r3, #0
 927 04cc 01D0     		beq	.L10
 899:Generated_Source\PSoC5/RTC_INT.c ****             {
 900:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_EveryHourHandler();
 928              		.loc 1 900 0
 929 04ce FFF7FEFF 		bl	RTC_EveryHourHandler
 930              	.L10:
 901:Generated_Source\PSoC5/RTC_INT.c ****             }
 902:Generated_Source\PSoC5/RTC_INT.c ****         } /* Min > 59 = Hour */
 903:Generated_Source\PSoC5/RTC_INT.c **** 
 904:Generated_Source\PSoC5/RTC_INT.c ****         /* Alarm MIN */
 905:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_MIN_MASK))
 931              		.loc 1 905 0
 932 04d2 0D4B     		ldr	r3, .L50+4
 933 04d4 1B78     		ldrb	r3, [r3]
 934 04d6 DBB2     		uxtb	r3, r3
 935 04d8 03F00203 		and	r3, r3, #2
 936 04dc 002B     		cmp	r3, #0
 937 04de 25D0     		beq	.L40
 906:Generated_Source\PSoC5/RTC_INT.c ****         {
 907:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_alarmCfgTimeDate.Min == RTC_currentTimeDate.Min)
 938              		.loc 1 907 0
 939 04e0 0C4B     		ldr	r3, .L50+16
 940 04e2 5B78     		ldrb	r3, [r3, #1]
 941 04e4 DAB2     		uxtb	r2, r3
 942 04e6 0C4B     		ldr	r3, .L50+20
 943 04e8 5B78     		ldrb	r3, [r3, #1]
 944 04ea DBB2     		uxtb	r3, r3
 945 04ec 9A42     		cmp	r2, r3
 946 04ee 15D1     		bne	.L41
 908:Generated_Source\PSoC5/RTC_INT.c ****             {
 909:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus |= RTC_ALARM_MIN_MASK;
 947              		.loc 1 909 0
 948 04f0 044B     		ldr	r3, .L50
 949 04f2 1B78     		ldrb	r3, [r3]
 950 04f4 DBB2     		uxtb	r3, r3
 951 04f6 43F00203 		orr	r3, r3, #2
 952 04fa DAB2     		uxtb	r2, r3
 953 04fc 014B     		ldr	r3, .L50
 954 04fe 1A70     		strb	r2, [r3]
 955 0500 14E0     		b	.L40
 956              	.L51:
 957 0502 00BF     		.align	2
 958              	.L50:
 959 0504 00000000 		.word	RTC_alarmCurStatus
 960 0508 00000000 		.word	RTC_alarmCfgMask
 961 050c 00000000 		.word	RTC_statusDateTime
 962 0510 00000000 		.word	RTC_intervalCfgMask
 963 0514 00000000 		.word	RTC_alarmCfgTimeDate
 964 0518 00000000 		.word	RTC_currentTimeDate
 965              	.L41:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 34


 910:Generated_Source\PSoC5/RTC_INT.c ****             }
 911:Generated_Source\PSoC5/RTC_INT.c ****             else
 912:Generated_Source\PSoC5/RTC_INT.c ****             {
 913:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MIN_MASK);
 966              		.loc 1 913 0
 967 051c 384B     		ldr	r3, .L52
 968 051e 1B78     		ldrb	r3, [r3]
 969 0520 DBB2     		uxtb	r3, r3
 970 0522 23F00203 		bic	r3, r3, #2
 971 0526 DAB2     		uxtb	r2, r3
 972 0528 354B     		ldr	r3, .L52
 973 052a 1A70     		strb	r2, [r3]
 974              	.L40:
 914:Generated_Source\PSoC5/RTC_INT.c ****             }
 915:Generated_Source\PSoC5/RTC_INT.c ****         }
 916:Generated_Source\PSoC5/RTC_INT.c **** 
 917:Generated_Source\PSoC5/RTC_INT.c ****         /* Set Alarm flag event */
 918:Generated_Source\PSoC5/RTC_INT.c ****         RTC_tmp = RTC_alarmCfgMask;
 975              		.loc 1 918 0
 976 052c 354B     		ldr	r3, .L52+4
 977 052e 1B78     		ldrb	r3, [r3]
 978 0530 FB71     		strb	r3, [r7, #7]
 919:Generated_Source\PSoC5/RTC_INT.c ****         RTC_SET_ALARM(RTC_tmp,
 979              		.loc 1 919 0
 980 0532 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 981 0534 002B     		cmp	r3, #0
 982 0536 13D0     		beq	.L42
 983              		.loc 1 919 0 is_stmt 0 discriminator 1
 984 0538 314B     		ldr	r3, .L52
 985 053a 1B78     		ldrb	r3, [r3]
 986 053c DAB2     		uxtb	r2, r3
 987 053e FB79     		ldrb	r3, [r7, #7]
 988 0540 1340     		ands	r3, r3, r2
 989 0542 DBB2     		uxtb	r3, r3
 990 0544 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 991 0546 9A42     		cmp	r2, r3
 992 0548 0AD1     		bne	.L42
 993              		.loc 1 919 0 discriminator 2
 994 054a 2F4B     		ldr	r3, .L52+8
 995 054c 1B78     		ldrb	r3, [r3]
 996 054e DBB2     		uxtb	r3, r3
 997 0550 43F00803 		orr	r3, r3, #8
 998 0554 DAB2     		uxtb	r2, r3
 999 0556 2C4B     		ldr	r3, .L52+8
 1000 0558 1A70     		strb	r2, [r3]
 1001 055a 294B     		ldr	r3, .L52
 1002 055c 0022     		movs	r2, #0
 1003 055e 1A70     		strb	r2, [r3]
 1004              	.L42:
 920:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_alarmCurStatus,
 921:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_statusDateTime);
 922:Generated_Source\PSoC5/RTC_INT.c **** 
 923:Generated_Source\PSoC5/RTC_INT.c ****         /* Every Min */
 924:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_MIN_MASK))
 1005              		.loc 1 924 0 is_stmt 1
 1006 0560 2A4B     		ldr	r3, .L52+12
 1007 0562 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 35


 1008 0564 DBB2     		uxtb	r3, r3
 1009 0566 03F00203 		and	r3, r3, #2
 1010 056a 002B     		cmp	r3, #0
 1011 056c 01D0     		beq	.L9
 925:Generated_Source\PSoC5/RTC_INT.c ****         {
 926:Generated_Source\PSoC5/RTC_INT.c ****             RTC_EveryMinuteHandler();
 1012              		.loc 1 926 0
 1013 056e FFF7FEFF 		bl	RTC_EveryMinuteHandler
 1014              	.L9:
 927:Generated_Source\PSoC5/RTC_INT.c ****         }
 928:Generated_Source\PSoC5/RTC_INT.c ****     } /* Sec */
 929:Generated_Source\PSoC5/RTC_INT.c **** 
 930:Generated_Source\PSoC5/RTC_INT.c ****     /* Alarm SEC */
 931:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_SEC_MASK))
 1015              		.loc 1 931 0
 1016 0572 244B     		ldr	r3, .L52+4
 1017 0574 1B78     		ldrb	r3, [r3]
 1018 0576 DBB2     		uxtb	r3, r3
 1019 0578 03F00103 		and	r3, r3, #1
 1020 057c 002B     		cmp	r3, #0
 1021 057e 18D0     		beq	.L43
 932:Generated_Source\PSoC5/RTC_INT.c ****     {
 933:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_alarmCfgTimeDate.Sec == RTC_currentTimeDate.Sec)
 1022              		.loc 1 933 0
 1023 0580 234B     		ldr	r3, .L52+16
 1024 0582 1B78     		ldrb	r3, [r3]
 1025 0584 DAB2     		uxtb	r2, r3
 1026 0586 234B     		ldr	r3, .L52+20
 1027 0588 1B78     		ldrb	r3, [r3]
 1028 058a DBB2     		uxtb	r3, r3
 1029 058c 9A42     		cmp	r2, r3
 1030 058e 08D1     		bne	.L44
 934:Generated_Source\PSoC5/RTC_INT.c ****         {
 935:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus |= RTC_ALARM_SEC_MASK;
 1031              		.loc 1 935 0
 1032 0590 1B4B     		ldr	r3, .L52
 1033 0592 1B78     		ldrb	r3, [r3]
 1034 0594 DBB2     		uxtb	r3, r3
 1035 0596 43F00103 		orr	r3, r3, #1
 1036 059a DAB2     		uxtb	r2, r3
 1037 059c 184B     		ldr	r3, .L52
 1038 059e 1A70     		strb	r2, [r3]
 1039 05a0 07E0     		b	.L43
 1040              	.L44:
 936:Generated_Source\PSoC5/RTC_INT.c ****         }
 937:Generated_Source\PSoC5/RTC_INT.c ****         else
 938:Generated_Source\PSoC5/RTC_INT.c ****         {
 939:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_SEC_MASK);
 1041              		.loc 1 939 0
 1042 05a2 174B     		ldr	r3, .L52
 1043 05a4 1B78     		ldrb	r3, [r3]
 1044 05a6 DBB2     		uxtb	r3, r3
 1045 05a8 23F00103 		bic	r3, r3, #1
 1046 05ac DAB2     		uxtb	r2, r3
 1047 05ae 144B     		ldr	r3, .L52
 1048 05b0 1A70     		strb	r2, [r3]
 1049              	.L43:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 36


 940:Generated_Source\PSoC5/RTC_INT.c ****         }
 941:Generated_Source\PSoC5/RTC_INT.c ****     }
 942:Generated_Source\PSoC5/RTC_INT.c **** 
 943:Generated_Source\PSoC5/RTC_INT.c ****     /* Set Alarm flag event */
 944:Generated_Source\PSoC5/RTC_INT.c ****     RTC_tmp = RTC_alarmCfgMask;
 1050              		.loc 1 944 0
 1051 05b2 144B     		ldr	r3, .L52+4
 1052 05b4 1B78     		ldrb	r3, [r3]
 1053 05b6 FB71     		strb	r3, [r7, #7]
 945:Generated_Source\PSoC5/RTC_INT.c ****     RTC_SET_ALARM(RTC_tmp, RTC_alarmCurStatus, RTC_statusDateTime);
 1054              		.loc 1 945 0
 1055 05b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1056 05ba 002B     		cmp	r3, #0
 1057 05bc 13D0     		beq	.L45
 1058              		.loc 1 945 0 is_stmt 0 discriminator 1
 1059 05be 104B     		ldr	r3, .L52
 1060 05c0 1B78     		ldrb	r3, [r3]
 1061 05c2 DAB2     		uxtb	r2, r3
 1062 05c4 FB79     		ldrb	r3, [r7, #7]
 1063 05c6 1340     		ands	r3, r3, r2
 1064 05c8 DBB2     		uxtb	r3, r3
 1065 05ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1066 05cc 9A42     		cmp	r2, r3
 1067 05ce 0AD1     		bne	.L45
 1068              		.loc 1 945 0 discriminator 2
 1069 05d0 0D4B     		ldr	r3, .L52+8
 1070 05d2 1B78     		ldrb	r3, [r3]
 1071 05d4 DBB2     		uxtb	r3, r3
 1072 05d6 43F00803 		orr	r3, r3, #8
 1073 05da DAB2     		uxtb	r2, r3
 1074 05dc 0A4B     		ldr	r3, .L52+8
 1075 05de 1A70     		strb	r2, [r3]
 1076 05e0 074B     		ldr	r3, .L52
 1077 05e2 0022     		movs	r2, #0
 1078 05e4 1A70     		strb	r2, [r3]
 1079              	.L45:
 946:Generated_Source\PSoC5/RTC_INT.c **** 
 947:Generated_Source\PSoC5/RTC_INT.c ****     /* Execute every second handler if needed */
 948:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_SEC_MASK))
 1080              		.loc 1 948 0 is_stmt 1
 1081 05e6 094B     		ldr	r3, .L52+12
 1082 05e8 1B78     		ldrb	r3, [r3]
 1083 05ea DBB2     		uxtb	r3, r3
 1084 05ec 03F00103 		and	r3, r3, #1
 1085 05f0 002B     		cmp	r3, #0
 1086 05f2 01D0     		beq	.L47
 949:Generated_Source\PSoC5/RTC_INT.c ****     {
 950:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler();
 1087              		.loc 1 950 0
 1088 05f4 FFF7FEFF 		bl	RTC_EverySecondHandler
 1089              	.L47:
 951:Generated_Source\PSoC5/RTC_INT.c ****     }
 952:Generated_Source\PSoC5/RTC_INT.c ****     
 953:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_EXIT_CALLBACK
 954:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_ExitCallback();
 955:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_EXIT_CALLBACK */
 956:Generated_Source\PSoC5/RTC_INT.c **** }
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 37


 1090              		.loc 1 956 0
 1091 05f8 00BF     		nop
 1092 05fa 0837     		adds	r7, r7, #8
 1093              		.cfi_def_cfa_offset 8
 1094 05fc BD46     		mov	sp, r7
 1095              		.cfi_def_cfa_register 13
 1096              		@ sp needed
 1097 05fe 80BD     		pop	{r7, pc}
 1098              	.L53:
 1099              		.align	2
 1100              	.L52:
 1101 0600 00000000 		.word	RTC_alarmCurStatus
 1102 0604 00000000 		.word	RTC_alarmCfgMask
 1103 0608 00000000 		.word	RTC_statusDateTime
 1104 060c 00000000 		.word	RTC_intervalCfgMask
 1105 0610 00000000 		.word	RTC_alarmCfgTimeDate
 1106 0614 00000000 		.word	RTC_currentTimeDate
 1107              		.cfi_endproc
 1108              	.LFE71:
 1109              		.size	RTC_ISR, .-RTC_ISR
 1110              		.text
 1111              	.Letext0:
 1112              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 1113              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 1114              		.file 4 "Generated_Source\\PSoC5\\cytypes.h"
 1115              		.file 5 "Generated_Source\\PSoC5\\RTC.h"
 1116              		.file 6 "./modem.h"
 1117              		.file 7 "./data.h"
 1118              		.file 8 "./notoriOS.h"
 1119              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 1120              		.section	.debug_info,"",%progbits
 1121              	.Ldebug_info0:
 1122 0000 D2050000 		.4byte	0x5d2
 1123 0004 0400     		.2byte	0x4
 1124 0006 00000000 		.4byte	.Ldebug_abbrev0
 1125 000a 04       		.byte	0x4
 1126 000b 01       		.uleb128 0x1
 1127 000c 81000000 		.4byte	.LASF90
 1128 0010 0C       		.byte	0xc
 1129 0011 19050000 		.4byte	.LASF91
 1130 0015 38030000 		.4byte	.LASF92
 1131 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1132 001d 00000000 		.4byte	0
 1133 0021 00000000 		.4byte	.Ldebug_line0
 1134 0025 02       		.uleb128 0x2
 1135 0026 01       		.byte	0x1
 1136 0027 06       		.byte	0x6
 1137 0028 B9020000 		.4byte	.LASF0
 1138 002c 02       		.uleb128 0x2
 1139 002d 01       		.byte	0x1
 1140 002e 08       		.byte	0x8
 1141 002f 6E020000 		.4byte	.LASF1
 1142 0033 02       		.uleb128 0x2
 1143 0034 02       		.byte	0x2
 1144 0035 05       		.byte	0x5
 1145 0036 66000000 		.4byte	.LASF2
 1146 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 38


 1147 003b 02       		.byte	0x2
 1148 003c 07       		.byte	0x7
 1149 003d B7030000 		.4byte	.LASF3
 1150 0041 03       		.uleb128 0x3
 1151 0042 F7040000 		.4byte	.LASF9
 1152 0046 02       		.byte	0x2
 1153 0047 3F       		.byte	0x3f
 1154 0048 4C000000 		.4byte	0x4c
 1155 004c 02       		.uleb128 0x2
 1156 004d 04       		.byte	0x4
 1157 004e 05       		.byte	0x5
 1158 004f E6010000 		.4byte	.LASF4
 1159 0053 02       		.uleb128 0x2
 1160 0054 04       		.byte	0x4
 1161 0055 07       		.byte	0x7
 1162 0056 88040000 		.4byte	.LASF5
 1163 005a 02       		.uleb128 0x2
 1164 005b 08       		.byte	0x8
 1165 005c 05       		.byte	0x5
 1166 005d C6010000 		.4byte	.LASF6
 1167 0061 02       		.uleb128 0x2
 1168 0062 08       		.byte	0x8
 1169 0063 07       		.byte	0x7
 1170 0064 DA020000 		.4byte	.LASF7
 1171 0068 04       		.uleb128 0x4
 1172 0069 04       		.byte	0x4
 1173 006a 05       		.byte	0x5
 1174 006b 696E7400 		.ascii	"int\000"
 1175 006f 02       		.uleb128 0x2
 1176 0070 04       		.byte	0x4
 1177 0071 07       		.byte	0x7
 1178 0072 15030000 		.4byte	.LASF8
 1179 0076 03       		.uleb128 0x3
 1180 0077 06040000 		.4byte	.LASF10
 1181 007b 03       		.byte	0x3
 1182 007c 2C       		.byte	0x2c
 1183 007d 41000000 		.4byte	0x41
 1184 0081 05       		.uleb128 0x5
 1185 0082 82010000 		.4byte	.LASF11
 1186 0086 04       		.byte	0x4
 1187 0087 9201     		.2byte	0x192
 1188 0089 2C000000 		.4byte	0x2c
 1189 008d 05       		.uleb128 0x5
 1190 008e 61010000 		.4byte	.LASF12
 1191 0092 04       		.byte	0x4
 1192 0093 9301     		.2byte	0x193
 1193 0095 3A000000 		.4byte	0x3a
 1194 0099 05       		.uleb128 0x5
 1195 009a 8D010000 		.4byte	.LASF13
 1196 009e 04       		.byte	0x4
 1197 009f 9601     		.2byte	0x196
 1198 00a1 33000000 		.4byte	0x33
 1199 00a5 05       		.uleb128 0x5
 1200 00a6 9A040000 		.4byte	.LASF14
 1201 00aa 04       		.byte	0x4
 1202 00ab 9701     		.2byte	0x197
 1203 00ad 4C000000 		.4byte	0x4c
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 39


 1204 00b1 02       		.uleb128 0x2
 1205 00b2 04       		.byte	0x4
 1206 00b3 04       		.byte	0x4
 1207 00b4 B6010000 		.4byte	.LASF15
 1208 00b8 02       		.uleb128 0x2
 1209 00b9 08       		.byte	0x8
 1210 00ba 04       		.byte	0x4
 1211 00bb A0040000 		.4byte	.LASF16
 1212 00bf 02       		.uleb128 0x2
 1213 00c0 01       		.byte	0x1
 1214 00c1 08       		.byte	0x8
 1215 00c2 D4010000 		.4byte	.LASF17
 1216 00c6 06       		.uleb128 0x6
 1217 00c7 81000000 		.4byte	0x81
 1218 00cb 07       		.uleb128 0x7
 1219 00cc 0C       		.byte	0xc
 1220 00cd 05       		.byte	0x5
 1221 00ce 30       		.byte	0x30
 1222 00cf 34010000 		.4byte	0x134
 1223 00d3 08       		.uleb128 0x8
 1224 00d4 53656300 		.ascii	"Sec\000"
 1225 00d8 05       		.byte	0x5
 1226 00d9 32       		.byte	0x32
 1227 00da 81000000 		.4byte	0x81
 1228 00de 00       		.byte	0
 1229 00df 08       		.uleb128 0x8
 1230 00e0 4D696E00 		.ascii	"Min\000"
 1231 00e4 05       		.byte	0x5
 1232 00e5 33       		.byte	0x33
 1233 00e6 81000000 		.4byte	0x81
 1234 00ea 01       		.byte	0x1
 1235 00eb 09       		.uleb128 0x9
 1236 00ec 29010000 		.4byte	.LASF18
 1237 00f0 05       		.byte	0x5
 1238 00f1 34       		.byte	0x34
 1239 00f2 81000000 		.4byte	0x81
 1240 00f6 02       		.byte	0x2
 1241 00f7 09       		.uleb128 0x9
 1242 00f8 BC010000 		.4byte	.LASF19
 1243 00fc 05       		.byte	0x5
 1244 00fd 35       		.byte	0x35
 1245 00fe 81000000 		.4byte	0x81
 1246 0102 03       		.byte	0x3
 1247 0103 09       		.uleb128 0x9
 1248 0104 56040000 		.4byte	.LASF20
 1249 0108 05       		.byte	0x5
 1250 0109 36       		.byte	0x36
 1251 010a 81000000 		.4byte	0x81
 1252 010e 04       		.byte	0x4
 1253 010f 09       		.uleb128 0x9
 1254 0110 9B050000 		.4byte	.LASF21
 1255 0114 05       		.byte	0x5
 1256 0115 37       		.byte	0x37
 1257 0116 8D000000 		.4byte	0x8d
 1258 011a 06       		.byte	0x6
 1259 011b 09       		.uleb128 0x9
 1260 011c 22020000 		.4byte	.LASF22
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 40


 1261 0120 05       		.byte	0x5
 1262 0121 38       		.byte	0x38
 1263 0122 81000000 		.4byte	0x81
 1264 0126 08       		.byte	0x8
 1265 0127 09       		.uleb128 0x9
 1266 0128 1D020000 		.4byte	.LASF23
 1267 012c 05       		.byte	0x5
 1268 012d 39       		.byte	0x39
 1269 012e 8D000000 		.4byte	0x8d
 1270 0132 0A       		.byte	0xa
 1271 0133 00       		.byte	0
 1272 0134 03       		.uleb128 0x3
 1273 0135 6F050000 		.4byte	.LASF24
 1274 0139 05       		.byte	0x5
 1275 013a 3A       		.byte	0x3a
 1276 013b 3F010000 		.4byte	0x13f
 1277 013f 06       		.uleb128 0x6
 1278 0140 CB000000 		.4byte	0xcb
 1279 0144 02       		.uleb128 0x2
 1280 0145 08       		.byte	0x8
 1281 0146 04       		.byte	0x4
 1282 0147 62020000 		.4byte	.LASF25
 1283 014b 02       		.uleb128 0x2
 1284 014c 04       		.byte	0x4
 1285 014d 07       		.byte	0x7
 1286 014e 70000000 		.4byte	.LASF26
 1287 0152 0A       		.uleb128 0xa
 1288 0153 BF000000 		.4byte	0xbf
 1289 0157 62010000 		.4byte	0x162
 1290 015b 0B       		.uleb128 0xb
 1291 015c 4B010000 		.4byte	0x14b
 1292 0160 17       		.byte	0x17
 1293 0161 00       		.byte	0
 1294 0162 07       		.uleb128 0x7
 1295 0163 3C       		.byte	0x3c
 1296 0164 06       		.byte	0x6
 1297 0165 2E       		.byte	0x2e
 1298 0166 8F010000 		.4byte	0x18f
 1299 016a 09       		.uleb128 0x9
 1300 016b 1A000000 		.4byte	.LASF27
 1301 016f 06       		.byte	0x6
 1302 0170 2F       		.byte	0x2f
 1303 0171 8F010000 		.4byte	0x18f
 1304 0175 00       		.byte	0
 1305 0176 09       		.uleb128 0x9
 1306 0177 00000000 		.4byte	.LASF28
 1307 017b 06       		.byte	0x6
 1308 017c 30       		.byte	0x30
 1309 017d 8F010000 		.4byte	0x18f
 1310 0181 14       		.byte	0x14
 1311 0182 09       		.uleb128 0x9
 1312 0183 01040000 		.4byte	.LASF29
 1313 0187 06       		.byte	0x6
 1314 0188 31       		.byte	0x31
 1315 0189 8F010000 		.4byte	0x18f
 1316 018d 28       		.byte	0x28
 1317 018e 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 41


 1318 018f 0A       		.uleb128 0xa
 1319 0190 BF000000 		.4byte	0xbf
 1320 0194 9F010000 		.4byte	0x19f
 1321 0198 0B       		.uleb128 0xb
 1322 0199 4B010000 		.4byte	0x14b
 1323 019d 13       		.byte	0x13
 1324 019e 00       		.byte	0
 1325 019f 03       		.uleb128 0x3
 1326 01a0 D9010000 		.4byte	.LASF30
 1327 01a4 06       		.byte	0x6
 1328 01a5 32       		.byte	0x32
 1329 01a6 62010000 		.4byte	0x162
 1330 01aa 07       		.uleb128 0x7
 1331 01ab 10       		.byte	0x10
 1332 01ac 06       		.byte	0x6
 1333 01ad 34       		.byte	0x34
 1334 01ae 13020000 		.4byte	0x213
 1335 01b2 09       		.uleb128 0x9
 1336 01b3 28020000 		.4byte	.LASF31
 1337 01b7 06       		.byte	0x6
 1338 01b8 35       		.byte	0x35
 1339 01b9 81000000 		.4byte	0x81
 1340 01bd 00       		.byte	0
 1341 01be 08       		.uleb128 0x8
 1342 01bf 62657200 		.ascii	"ber\000"
 1343 01c3 06       		.byte	0x6
 1344 01c4 36       		.byte	0x36
 1345 01c5 81000000 		.4byte	0x81
 1346 01c9 01       		.byte	0x1
 1347 01ca 09       		.uleb128 0x9
 1348 01cb 88010000 		.4byte	.LASF32
 1349 01cf 06       		.byte	0x6
 1350 01d0 37       		.byte	0x37
 1351 01d1 81000000 		.4byte	0x81
 1352 01d5 02       		.byte	0x2
 1353 01d6 09       		.uleb128 0x9
 1354 01d7 3C010000 		.4byte	.LASF33
 1355 01db 06       		.byte	0x6
 1356 01dc 38       		.byte	0x38
 1357 01dd 81000000 		.4byte	0x81
 1358 01e1 03       		.byte	0x3
 1359 01e2 09       		.uleb128 0x9
 1360 01e3 61040000 		.4byte	.LASF34
 1361 01e7 06       		.byte	0x6
 1362 01e8 39       		.byte	0x39
 1363 01e9 81000000 		.4byte	0x81
 1364 01ed 04       		.byte	0x4
 1365 01ee 09       		.uleb128 0x9
 1366 01ef 7C020000 		.4byte	.LASF35
 1367 01f3 06       		.byte	0x6
 1368 01f4 3A       		.byte	0x3a
 1369 01f5 81000000 		.4byte	0x81
 1370 01f9 05       		.byte	0x5
 1371 01fa 09       		.uleb128 0x9
 1372 01fb CA030000 		.4byte	.LASF36
 1373 01ff 06       		.byte	0x6
 1374 0200 3B       		.byte	0x3b
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 42


 1375 0201 68000000 		.4byte	0x68
 1376 0205 08       		.byte	0x8
 1377 0206 09       		.uleb128 0x9
 1378 0207 EE030000 		.4byte	.LASF37
 1379 020b 06       		.byte	0x6
 1380 020c 3C       		.byte	0x3c
 1381 020d 68000000 		.4byte	0x68
 1382 0211 0C       		.byte	0xc
 1383 0212 00       		.byte	0
 1384 0213 03       		.uleb128 0x3
 1385 0214 16040000 		.4byte	.LASF38
 1386 0218 06       		.byte	0x6
 1387 0219 3D       		.byte	0x3d
 1388 021a AA010000 		.4byte	0x1aa
 1389 021e 07       		.uleb128 0x7
 1390 021f 03       		.byte	0x3
 1391 0220 06       		.byte	0x6
 1392 0221 49       		.byte	0x49
 1393 0222 4B020000 		.4byte	0x24b
 1394 0226 09       		.uleb128 0x9
 1395 0227 4B020000 		.4byte	.LASF39
 1396 022b 06       		.byte	0x6
 1397 022c 4C       		.byte	0x4c
 1398 022d 81000000 		.4byte	0x81
 1399 0231 00       		.byte	0
 1400 0232 09       		.uleb128 0x9
 1401 0233 2E030000 		.4byte	.LASF40
 1402 0237 06       		.byte	0x6
 1403 0238 4E       		.byte	0x4e
 1404 0239 81000000 		.4byte	0x81
 1405 023d 01       		.byte	0x1
 1406 023e 09       		.uleb128 0x9
 1407 023f CA040000 		.4byte	.LASF41
 1408 0243 06       		.byte	0x6
 1409 0244 51       		.byte	0x51
 1410 0245 81000000 		.4byte	0x81
 1411 0249 02       		.byte	0x2
 1412 024a 00       		.byte	0
 1413 024b 03       		.uleb128 0x3
 1414 024c 95030000 		.4byte	.LASF42
 1415 0250 06       		.byte	0x6
 1416 0251 52       		.byte	0x52
 1417 0252 1E020000 		.4byte	0x21e
 1418 0256 07       		.uleb128 0x7
 1419 0257 2C       		.byte	0x2c
 1420 0258 07       		.byte	0x7
 1421 0259 10       		.byte	0x10
 1422 025a 83020000 		.4byte	0x283
 1423 025e 08       		.uleb128 0x8
 1424 025f 6B657900 		.ascii	"key\000"
 1425 0263 07       		.byte	0x7
 1426 0264 11       		.byte	0x11
 1427 0265 8F010000 		.4byte	0x18f
 1428 0269 00       		.byte	0
 1429 026a 09       		.uleb128 0x9
 1430 026b 7D050000 		.4byte	.LASF43
 1431 026f 07       		.byte	0x7
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 43


 1432 0270 12       		.byte	0x12
 1433 0271 8F010000 		.4byte	0x18f
 1434 0275 14       		.byte	0x14
 1435 0276 09       		.uleb128 0x9
 1436 0277 93010000 		.4byte	.LASF44
 1437 027b 07       		.byte	0x7
 1438 027c 13       		.byte	0x13
 1439 027d A5000000 		.4byte	0xa5
 1440 0281 28       		.byte	0x28
 1441 0282 00       		.byte	0
 1442 0283 03       		.uleb128 0x3
 1443 0284 22030000 		.4byte	.LASF45
 1444 0288 07       		.byte	0x7
 1445 0289 14       		.byte	0x14
 1446 028a 56020000 		.4byte	0x256
 1447 028e 07       		.uleb128 0x7
 1448 028f 06       		.byte	0x6
 1449 0290 08       		.byte	0x8
 1450 0291 2B       		.byte	0x2b
 1451 0292 C7020000 		.4byte	0x2c7
 1452 0296 09       		.uleb128 0x9
 1453 0297 57000000 		.4byte	.LASF46
 1454 029b 08       		.byte	0x8
 1455 029c 2D       		.byte	0x2d
 1456 029d 8D000000 		.4byte	0x8d
 1457 02a1 00       		.byte	0
 1458 02a2 09       		.uleb128 0x9
 1459 02a3 41000000 		.4byte	.LASF47
 1460 02a7 08       		.byte	0x8
 1461 02a8 2E       		.byte	0x2e
 1462 02a9 99000000 		.4byte	0x99
 1463 02ad 02       		.byte	0x2
 1464 02ae 09       		.uleb128 0x9
 1465 02af D6040000 		.4byte	.LASF48
 1466 02b3 08       		.byte	0x8
 1467 02b4 2F       		.byte	0x2f
 1468 02b5 81000000 		.4byte	0x81
 1469 02b9 04       		.byte	0x4
 1470 02ba 09       		.uleb128 0x9
 1471 02bb 01050000 		.4byte	.LASF49
 1472 02bf 08       		.byte	0x8
 1473 02c0 30       		.byte	0x30
 1474 02c1 81000000 		.4byte	0x81
 1475 02c5 05       		.byte	0x5
 1476 02c6 00       		.byte	0
 1477 02c7 03       		.uleb128 0x3
 1478 02c8 24040000 		.4byte	.LASF50
 1479 02cc 08       		.byte	0x8
 1480 02cd 33       		.byte	0x33
 1481 02ce D2020000 		.4byte	0x2d2
 1482 02d2 06       		.uleb128 0x6
 1483 02d3 8E020000 		.4byte	0x28e
 1484 02d7 07       		.uleb128 0x7
 1485 02d8 1C       		.byte	0x1c
 1486 02d9 08       		.byte	0x8
 1487 02da 36       		.byte	0x36
 1488 02db F8020000 		.4byte	0x2f8
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 44


 1489 02df 09       		.uleb128 0x9
 1490 02e0 EF010000 		.4byte	.LASF51
 1491 02e4 08       		.byte	0x8
 1492 02e5 38       		.byte	0x38
 1493 02e6 F8020000 		.4byte	0x2f8
 1494 02ea 00       		.byte	0
 1495 02eb 09       		.uleb128 0x9
 1496 02ec 2E010000 		.4byte	.LASF52
 1497 02f0 08       		.byte	0x8
 1498 02f1 39       		.byte	0x39
 1499 02f2 52010000 		.4byte	0x152
 1500 02f6 04       		.byte	0x4
 1501 02f7 00       		.byte	0
 1502 02f8 0C       		.uleb128 0xc
 1503 02f9 04       		.byte	0x4
 1504 02fa 9F010000 		.4byte	0x19f
 1505 02fe 03       		.uleb128 0x3
 1506 02ff AC030000 		.4byte	.LASF53
 1507 0303 08       		.byte	0x8
 1508 0304 3B       		.byte	0x3b
 1509 0305 D7020000 		.4byte	0x2d7
 1510 0309 07       		.uleb128 0x7
 1511 030a 68       		.byte	0x68
 1512 030b 08       		.byte	0x8
 1513 030c 41       		.byte	0x41
 1514 030d 2A030000 		.4byte	0x32a
 1515 0311 09       		.uleb128 0x9
 1516 0312 79000000 		.4byte	.LASF54
 1517 0316 08       		.byte	0x8
 1518 0317 46       		.byte	0x46
 1519 0318 2A030000 		.4byte	0x32a
 1520 031c 00       		.byte	0
 1521 031d 09       		.uleb128 0x9
 1522 031e 68010000 		.4byte	.LASF55
 1523 0322 08       		.byte	0x8
 1524 0323 47       		.byte	0x47
 1525 0324 68000000 		.4byte	0x68
 1526 0328 64       		.byte	0x64
 1527 0329 00       		.byte	0
 1528 032a 0A       		.uleb128 0xa
 1529 032b BF000000 		.4byte	0xbf
 1530 032f 3A030000 		.4byte	0x33a
 1531 0333 0B       		.uleb128 0xb
 1532 0334 4B010000 		.4byte	0x14b
 1533 0338 63       		.byte	0x63
 1534 0339 00       		.byte	0
 1535 033a 03       		.uleb128 0x3
 1536 033b 32000000 		.4byte	.LASF56
 1537 033f 08       		.byte	0x8
 1538 0340 4D       		.byte	0x4d
 1539 0341 09030000 		.4byte	0x309
 1540 0345 0D       		.uleb128 0xd
 1541 0346 A7040000 		.4byte	.LASF57
 1542 034a 01       		.byte	0x1
 1543 034b 36       		.byte	0x36
 1544 034c 00000000 		.4byte	.LFB64
 1545 0350 0E000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 45


 1546 0354 01       		.uleb128 0x1
 1547 0355 9C       		.byte	0x9c
 1548 0356 0D       		.uleb128 0xd
 1549 0357 71040000 		.4byte	.LASF58
 1550 035b 01       		.byte	0x1
 1551 035c 51       		.byte	0x51
 1552 035d 00000000 		.4byte	.LFB65
 1553 0361 0E000000 		.4byte	.LFE65-.LFB65
 1554 0365 01       		.uleb128 0x1
 1555 0366 9C       		.byte	0x9c
 1556 0367 0D       		.uleb128 0xd
 1557 0368 41040000 		.4byte	.LASF59
 1558 036c 01       		.byte	0x1
 1559 036d 6C       		.byte	0x6c
 1560 036e 00000000 		.4byte	.LFB66
 1561 0372 0E000000 		.4byte	.LFE66-.LFB66
 1562 0376 01       		.uleb128 0x1
 1563 0377 9C       		.byte	0x9c
 1564 0378 0D       		.uleb128 0xd
 1565 0379 2D020000 		.4byte	.LASF60
 1566 037d 01       		.byte	0x1
 1567 037e 87       		.byte	0x87
 1568 037f 00000000 		.4byte	.LFB67
 1569 0383 0E000000 		.4byte	.LFE67-.LFB67
 1570 0387 01       		.uleb128 0x1
 1571 0388 9C       		.byte	0x9c
 1572 0389 0D       		.uleb128 0xd
 1573 038a 0F010000 		.4byte	.LASF61
 1574 038e 01       		.byte	0x1
 1575 038f A2       		.byte	0xa2
 1576 0390 00000000 		.4byte	.LFB68
 1577 0394 0E000000 		.4byte	.LFE68-.LFB68
 1578 0398 01       		.uleb128 0x1
 1579 0399 9C       		.byte	0x9c
 1580 039a 0D       		.uleb128 0xd
 1581 039b FA010000 		.4byte	.LASF62
 1582 039f 01       		.byte	0x1
 1583 03a0 BD       		.byte	0xbd
 1584 03a1 00000000 		.4byte	.LFB69
 1585 03a5 0E000000 		.4byte	.LFE69-.LFB69
 1586 03a9 01       		.uleb128 0x1
 1587 03aa 9C       		.byte	0x9c
 1588 03ab 0D       		.uleb128 0xd
 1589 03ac C5020000 		.4byte	.LASF63
 1590 03b0 01       		.byte	0x1
 1591 03b1 D8       		.byte	0xd8
 1592 03b2 00000000 		.4byte	.LFB70
 1593 03b6 0E000000 		.4byte	.LFE70-.LFB70
 1594 03ba 01       		.uleb128 0x1
 1595 03bb 9C       		.byte	0x9c
 1596 03bc 0E       		.uleb128 0xe
 1597 03bd 7F030000 		.4byte	.LASF93
 1598 03c1 01       		.byte	0x1
 1599 03c2 0B01     		.2byte	0x10b
 1600 03c4 00000000 		.4byte	.LFB71
 1601 03c8 18060000 		.4byte	.LFE71-.LFB71
 1602 03cc 01       		.uleb128 0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 46


 1603 03cd 9C       		.byte	0x9c
 1604 03ce E2030000 		.4byte	0x3e2
 1605 03d2 0F       		.uleb128 0xf
 1606 03d3 0E040000 		.4byte	.LASF94
 1607 03d7 01       		.byte	0x1
 1608 03d8 0D01     		.2byte	0x10d
 1609 03da 81000000 		.4byte	0x81
 1610 03de 02       		.uleb128 0x2
 1611 03df 91       		.byte	0x91
 1612 03e0 77       		.sleb128 -9
 1613 03e1 00       		.byte	0
 1614 03e2 10       		.uleb128 0x10
 1615 03e3 98020000 		.4byte	.LASF64
 1616 03e7 05       		.byte	0x5
 1617 03e8 2D01     		.2byte	0x12d
 1618 03ea 34010000 		.4byte	0x134
 1619 03ee 10       		.uleb128 0x10
 1620 03ef 01030000 		.4byte	.LASF65
 1621 03f3 05       		.byte	0x5
 1622 03f4 2E01     		.2byte	0x12e
 1623 03f6 34010000 		.4byte	0x134
 1624 03fa 10       		.uleb128 0x10
 1625 03fb 09000000 		.4byte	.LASF66
 1626 03ff 05       		.byte	0x5
 1627 0400 3901     		.2byte	0x139
 1628 0402 C6000000 		.4byte	0xc6
 1629 0406 10       		.uleb128 0x10
 1630 0407 3A050000 		.4byte	.LASF67
 1631 040b 05       		.byte	0x5
 1632 040c 3A01     		.2byte	0x13a
 1633 040e C6000000 		.4byte	0xc6
 1634 0412 10       		.uleb128 0x10
 1635 0413 4D010000 		.4byte	.LASF68
 1636 0417 05       		.byte	0x5
 1637 0418 3B01     		.2byte	0x13b
 1638 041a C6000000 		.4byte	0xc6
 1639 041e 10       		.uleb128 0x10
 1640 041f E4040000 		.4byte	.LASF69
 1641 0423 05       		.byte	0x5
 1642 0424 3C01     		.2byte	0x13c
 1643 0426 C6000000 		.4byte	0xc6
 1644 042a 0A       		.uleb128 0xa
 1645 042b 3A040000 		.4byte	0x43a
 1646 042f 3A040000 		.4byte	0x43a
 1647 0433 0B       		.uleb128 0xb
 1648 0434 4B010000 		.4byte	0x14b
 1649 0438 0B       		.byte	0xb
 1650 0439 00       		.byte	0
 1651 043a 11       		.uleb128 0x11
 1652 043b 81000000 		.4byte	0x81
 1653 043f 10       		.uleb128 0x10
 1654 0440 21000000 		.4byte	.LASF70
 1655 0444 05       		.byte	0x5
 1656 0445 3E01     		.2byte	0x13e
 1657 0447 4B040000 		.4byte	0x44b
 1658 044b 11       		.uleb128 0x11
 1659 044c 2A040000 		.4byte	0x42a
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 47


 1660 0450 10       		.uleb128 0x10
 1661 0451 62050000 		.4byte	.LASF71
 1662 0455 09       		.byte	0x9
 1663 0456 1207     		.2byte	0x712
 1664 0458 5C040000 		.4byte	0x45c
 1665 045c 06       		.uleb128 0x6
 1666 045d 76000000 		.4byte	0x76
 1667 0461 12       		.uleb128 0x12
 1668 0462 AD020000 		.4byte	.LASF72
 1669 0466 06       		.byte	0x6
 1670 0467 16       		.byte	0x16
 1671 0468 81000000 		.4byte	0x81
 1672 046c 05       		.uleb128 0x5
 1673 046d 03       		.byte	0x3
 1674 046e 00000000 		.4byte	modem_state
 1675 0472 12       		.uleb128 0x12
 1676 0473 81020000 		.4byte	.LASF73
 1677 0477 06       		.byte	0x6
 1678 0478 55       		.byte	0x55
 1679 0479 A5000000 		.4byte	0xa5
 1680 047d 05       		.uleb128 0x5
 1681 047e 03       		.byte	0x3
 1682 047f 00000000 		.4byte	modem_start_time_stamp
 1683 0483 12       		.uleb128 0x12
 1684 0484 EF010000 		.4byte	.LASF51
 1685 0488 06       		.byte	0x6
 1686 0489 56       		.byte	0x56
 1687 048a 9F010000 		.4byte	0x19f
 1688 048e 05       		.uleb128 0x5
 1689 048f 03       		.byte	0x3
 1690 0490 00000000 		.4byte	modem_info
 1691 0494 12       		.uleb128 0x12
 1692 0495 BE040000 		.4byte	.LASF74
 1693 0499 06       		.byte	0x6
 1694 049a 57       		.byte	0x57
 1695 049b 13020000 		.4byte	0x213
 1696 049f 05       		.uleb128 0x5
 1697 04a0 03       		.byte	0x3
 1698 04a1 00000000 		.4byte	modem_stats
 1699 04a5 12       		.uleb128 0x12
 1700 04a6 4D050000 		.4byte	.LASF75
 1701 04aa 06       		.byte	0x6
 1702 04ab 58       		.byte	0x58
 1703 04ac 4B020000 		.4byte	0x24b
 1704 04b0 05       		.uleb128 0x5
 1705 04b1 03       		.byte	0x3
 1706 04b2 00000000 		.4byte	updatable_parameters
 1707 04b6 12       		.uleb128 0x12
 1708 04b7 70010000 		.4byte	.LASF76
 1709 04bb 07       		.byte	0x7
 1710 04bc 1D       		.byte	0x1d
 1711 04bd 8D000000 		.4byte	0x8d
 1712 04c1 05       		.uleb128 0x5
 1713 04c2 03       		.byte	0x3
 1714 04c3 00000000 		.4byte	dataPointsInStack
 1715 04c7 12       		.uleb128 0x12
 1716 04c8 9D010000 		.4byte	.LASF77
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 48


 1717 04cc 07       		.byte	0x7
 1718 04cd 1E       		.byte	0x1e
 1719 04ce 8D000000 		.4byte	0x8d
 1720 04d2 05       		.uleb128 0x5
 1721 04d3 03       		.byte	0x3
 1722 04d4 00000000 		.4byte	dataPointsInStackDesired
 1723 04d8 0A       		.uleb128 0xa
 1724 04d9 83020000 		.4byte	0x283
 1725 04dd E8040000 		.4byte	0x4e8
 1726 04e1 0B       		.uleb128 0xb
 1727 04e2 4B010000 		.4byte	0x14b
 1728 04e6 95       		.byte	0x95
 1729 04e7 00       		.byte	0
 1730 04e8 12       		.uleb128 0x12
 1731 04e9 24010000 		.4byte	.LASF78
 1732 04ed 07       		.byte	0x7
 1733 04ee 1F       		.byte	0x1f
 1734 04ef D8040000 		.4byte	0x4d8
 1735 04f3 05       		.uleb128 0x5
 1736 04f4 03       		.byte	0x3
 1737 04f5 00000000 		.4byte	data
 1738 04f9 0A       		.uleb128 0xa
 1739 04fa BF000000 		.4byte	0xbf
 1740 04fe 0A050000 		.4byte	0x50a
 1741 0502 13       		.uleb128 0x13
 1742 0503 4B010000 		.4byte	0x14b
 1743 0507 0F27     		.2byte	0x270f
 1744 0509 00       		.byte	0
 1745 050a 12       		.uleb128 0x12
 1746 050b 83050000 		.4byte	.LASF79
 1747 050f 08       		.byte	0x8
 1748 0510 15       		.byte	0x15
 1749 0511 F9040000 		.4byte	0x4f9
 1750 0515 05       		.uleb128 0x5
 1751 0516 03       		.byte	0x3
 1752 0517 00000000 		.4byte	http_request
 1753 051b 12       		.uleb128 0x12
 1754 051c 41020000 		.4byte	.LASF80
 1755 0520 08       		.byte	0x8
 1756 0521 16       		.byte	0x16
 1757 0522 F9040000 		.4byte	0x4f9
 1758 0526 05       		.uleb128 0x5
 1759 0527 03       		.byte	0x3
 1760 0528 00000000 		.4byte	http_body
 1761 052c 0A       		.uleb128 0xa
 1762 052d BF000000 		.4byte	0xbf
 1763 0531 3C050000 		.4byte	0x53c
 1764 0535 0B       		.uleb128 0xb
 1765 0536 4B010000 		.4byte	0x14b
 1766 053a C7       		.byte	0xc7
 1767 053b 00       		.byte	0
 1768 053c 12       		.uleb128 0x12
 1769 053d 66040000 		.4byte	.LASF81
 1770 0541 08       		.byte	0x8
 1771 0542 17       		.byte	0x17
 1772 0543 2C050000 		.4byte	0x52c
 1773 0547 05       		.uleb128 0x5
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 49


 1774 0548 03       		.byte	0x3
 1775 0549 00000000 		.4byte	http_route
 1776 054d 12       		.uleb128 0x12
 1777 054e E2030000 		.4byte	.LASF82
 1778 0552 08       		.byte	0x8
 1779 0553 3E       		.byte	0x3e
 1780 0554 FE020000 		.4byte	0x2fe
 1781 0558 05       		.uleb128 0x5
 1782 0559 03       		.byte	0x3
 1783 055a 00000000 		.4byte	system_info
 1784 055e 12       		.uleb128 0x12
 1785 055f F1020000 		.4byte	.LASF83
 1786 0563 08       		.byte	0x8
 1787 0564 50       		.byte	0x50
 1788 0565 3A030000 		.4byte	0x33a
 1789 0569 05       		.uleb128 0x5
 1790 056a 03       		.byte	0x3
 1791 056b 00000000 		.4byte	system_settings
 1792 056f 12       		.uleb128 0x12
 1793 0570 10020000 		.4byte	.LASF84
 1794 0574 08       		.byte	0x8
 1795 0575 6C       		.byte	0x6c
 1796 0576 C7020000 		.4byte	0x2c7
 1797 057a 05       		.uleb128 0x5
 1798 057b 03       		.byte	0x3
 1799 057c 00000000 		.4byte	alarmMeasure
 1800 0580 12       		.uleb128 0x12
 1801 0581 87030000 		.4byte	.LASF85
 1802 0585 08       		.byte	0x8
 1803 0586 6D       		.byte	0x6d
 1804 0587 81000000 		.4byte	0x81
 1805 058b 05       		.uleb128 0x5
 1806 058c 03       		.byte	0x3
 1807 058d 00000000 		.4byte	timeToMeasure
 1808 0591 12       		.uleb128 0x12
 1809 0592 58020000 		.4byte	.LASF86
 1810 0596 08       		.byte	0x8
 1811 0597 6E       		.byte	0x6e
 1812 0598 C7020000 		.4byte	0x2c7
 1813 059c 05       		.uleb128 0x5
 1814 059d 03       		.byte	0x3
 1815 059e 00000000 		.4byte	alarmSync
 1816 05a2 12       		.uleb128 0x12
 1817 05a3 90050000 		.4byte	.LASF87
 1818 05a7 08       		.byte	0x8
 1819 05a8 6F       		.byte	0x6f
 1820 05a9 81000000 		.4byte	0x81
 1821 05ad 05       		.uleb128 0x5
 1822 05ae 03       		.byte	0x3
 1823 05af 00000000 		.4byte	timeToSync
 1824 05b3 12       		.uleb128 0x12
 1825 05b4 2A040000 		.4byte	.LASF88
 1826 05b8 08       		.byte	0x8
 1827 05b9 70       		.byte	0x70
 1828 05ba 81000000 		.4byte	0x81
 1829 05be 05       		.uleb128 0x5
 1830 05bf 03       		.byte	0x3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 50


 1831 05c0 00000000 		.4byte	timeToSycnRemoteParams
 1832 05c4 12       		.uleb128 0x12
 1833 05c5 41010000 		.4byte	.LASF89
 1834 05c9 08       		.byte	0x8
 1835 05ca 71       		.byte	0x71
 1836 05cb 81000000 		.4byte	0x81
 1837 05cf 05       		.uleb128 0x5
 1838 05d0 03       		.byte	0x3
 1839 05d1 00000000 		.4byte	try_counter
 1840 05d5 00       		.byte	0
 1841              		.section	.debug_abbrev,"",%progbits
 1842              	.Ldebug_abbrev0:
 1843 0000 01       		.uleb128 0x1
 1844 0001 11       		.uleb128 0x11
 1845 0002 01       		.byte	0x1
 1846 0003 25       		.uleb128 0x25
 1847 0004 0E       		.uleb128 0xe
 1848 0005 13       		.uleb128 0x13
 1849 0006 0B       		.uleb128 0xb
 1850 0007 03       		.uleb128 0x3
 1851 0008 0E       		.uleb128 0xe
 1852 0009 1B       		.uleb128 0x1b
 1853 000a 0E       		.uleb128 0xe
 1854 000b 55       		.uleb128 0x55
 1855 000c 17       		.uleb128 0x17
 1856 000d 11       		.uleb128 0x11
 1857 000e 01       		.uleb128 0x1
 1858 000f 10       		.uleb128 0x10
 1859 0010 17       		.uleb128 0x17
 1860 0011 00       		.byte	0
 1861 0012 00       		.byte	0
 1862 0013 02       		.uleb128 0x2
 1863 0014 24       		.uleb128 0x24
 1864 0015 00       		.byte	0
 1865 0016 0B       		.uleb128 0xb
 1866 0017 0B       		.uleb128 0xb
 1867 0018 3E       		.uleb128 0x3e
 1868 0019 0B       		.uleb128 0xb
 1869 001a 03       		.uleb128 0x3
 1870 001b 0E       		.uleb128 0xe
 1871 001c 00       		.byte	0
 1872 001d 00       		.byte	0
 1873 001e 03       		.uleb128 0x3
 1874 001f 16       		.uleb128 0x16
 1875 0020 00       		.byte	0
 1876 0021 03       		.uleb128 0x3
 1877 0022 0E       		.uleb128 0xe
 1878 0023 3A       		.uleb128 0x3a
 1879 0024 0B       		.uleb128 0xb
 1880 0025 3B       		.uleb128 0x3b
 1881 0026 0B       		.uleb128 0xb
 1882 0027 49       		.uleb128 0x49
 1883 0028 13       		.uleb128 0x13
 1884 0029 00       		.byte	0
 1885 002a 00       		.byte	0
 1886 002b 04       		.uleb128 0x4
 1887 002c 24       		.uleb128 0x24
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 51


 1888 002d 00       		.byte	0
 1889 002e 0B       		.uleb128 0xb
 1890 002f 0B       		.uleb128 0xb
 1891 0030 3E       		.uleb128 0x3e
 1892 0031 0B       		.uleb128 0xb
 1893 0032 03       		.uleb128 0x3
 1894 0033 08       		.uleb128 0x8
 1895 0034 00       		.byte	0
 1896 0035 00       		.byte	0
 1897 0036 05       		.uleb128 0x5
 1898 0037 16       		.uleb128 0x16
 1899 0038 00       		.byte	0
 1900 0039 03       		.uleb128 0x3
 1901 003a 0E       		.uleb128 0xe
 1902 003b 3A       		.uleb128 0x3a
 1903 003c 0B       		.uleb128 0xb
 1904 003d 3B       		.uleb128 0x3b
 1905 003e 05       		.uleb128 0x5
 1906 003f 49       		.uleb128 0x49
 1907 0040 13       		.uleb128 0x13
 1908 0041 00       		.byte	0
 1909 0042 00       		.byte	0
 1910 0043 06       		.uleb128 0x6
 1911 0044 35       		.uleb128 0x35
 1912 0045 00       		.byte	0
 1913 0046 49       		.uleb128 0x49
 1914 0047 13       		.uleb128 0x13
 1915 0048 00       		.byte	0
 1916 0049 00       		.byte	0
 1917 004a 07       		.uleb128 0x7
 1918 004b 13       		.uleb128 0x13
 1919 004c 01       		.byte	0x1
 1920 004d 0B       		.uleb128 0xb
 1921 004e 0B       		.uleb128 0xb
 1922 004f 3A       		.uleb128 0x3a
 1923 0050 0B       		.uleb128 0xb
 1924 0051 3B       		.uleb128 0x3b
 1925 0052 0B       		.uleb128 0xb
 1926 0053 01       		.uleb128 0x1
 1927 0054 13       		.uleb128 0x13
 1928 0055 00       		.byte	0
 1929 0056 00       		.byte	0
 1930 0057 08       		.uleb128 0x8
 1931 0058 0D       		.uleb128 0xd
 1932 0059 00       		.byte	0
 1933 005a 03       		.uleb128 0x3
 1934 005b 08       		.uleb128 0x8
 1935 005c 3A       		.uleb128 0x3a
 1936 005d 0B       		.uleb128 0xb
 1937 005e 3B       		.uleb128 0x3b
 1938 005f 0B       		.uleb128 0xb
 1939 0060 49       		.uleb128 0x49
 1940 0061 13       		.uleb128 0x13
 1941 0062 38       		.uleb128 0x38
 1942 0063 0B       		.uleb128 0xb
 1943 0064 00       		.byte	0
 1944 0065 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 52


 1945 0066 09       		.uleb128 0x9
 1946 0067 0D       		.uleb128 0xd
 1947 0068 00       		.byte	0
 1948 0069 03       		.uleb128 0x3
 1949 006a 0E       		.uleb128 0xe
 1950 006b 3A       		.uleb128 0x3a
 1951 006c 0B       		.uleb128 0xb
 1952 006d 3B       		.uleb128 0x3b
 1953 006e 0B       		.uleb128 0xb
 1954 006f 49       		.uleb128 0x49
 1955 0070 13       		.uleb128 0x13
 1956 0071 38       		.uleb128 0x38
 1957 0072 0B       		.uleb128 0xb
 1958 0073 00       		.byte	0
 1959 0074 00       		.byte	0
 1960 0075 0A       		.uleb128 0xa
 1961 0076 01       		.uleb128 0x1
 1962 0077 01       		.byte	0x1
 1963 0078 49       		.uleb128 0x49
 1964 0079 13       		.uleb128 0x13
 1965 007a 01       		.uleb128 0x1
 1966 007b 13       		.uleb128 0x13
 1967 007c 00       		.byte	0
 1968 007d 00       		.byte	0
 1969 007e 0B       		.uleb128 0xb
 1970 007f 21       		.uleb128 0x21
 1971 0080 00       		.byte	0
 1972 0081 49       		.uleb128 0x49
 1973 0082 13       		.uleb128 0x13
 1974 0083 2F       		.uleb128 0x2f
 1975 0084 0B       		.uleb128 0xb
 1976 0085 00       		.byte	0
 1977 0086 00       		.byte	0
 1978 0087 0C       		.uleb128 0xc
 1979 0088 0F       		.uleb128 0xf
 1980 0089 00       		.byte	0
 1981 008a 0B       		.uleb128 0xb
 1982 008b 0B       		.uleb128 0xb
 1983 008c 49       		.uleb128 0x49
 1984 008d 13       		.uleb128 0x13
 1985 008e 00       		.byte	0
 1986 008f 00       		.byte	0
 1987 0090 0D       		.uleb128 0xd
 1988 0091 2E       		.uleb128 0x2e
 1989 0092 00       		.byte	0
 1990 0093 03       		.uleb128 0x3
 1991 0094 0E       		.uleb128 0xe
 1992 0095 3A       		.uleb128 0x3a
 1993 0096 0B       		.uleb128 0xb
 1994 0097 3B       		.uleb128 0x3b
 1995 0098 0B       		.uleb128 0xb
 1996 0099 27       		.uleb128 0x27
 1997 009a 19       		.uleb128 0x19
 1998 009b 11       		.uleb128 0x11
 1999 009c 01       		.uleb128 0x1
 2000 009d 12       		.uleb128 0x12
 2001 009e 06       		.uleb128 0x6
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 53


 2002 009f 40       		.uleb128 0x40
 2003 00a0 18       		.uleb128 0x18
 2004 00a1 9642     		.uleb128 0x2116
 2005 00a3 19       		.uleb128 0x19
 2006 00a4 00       		.byte	0
 2007 00a5 00       		.byte	0
 2008 00a6 0E       		.uleb128 0xe
 2009 00a7 2E       		.uleb128 0x2e
 2010 00a8 01       		.byte	0x1
 2011 00a9 3F       		.uleb128 0x3f
 2012 00aa 19       		.uleb128 0x19
 2013 00ab 03       		.uleb128 0x3
 2014 00ac 0E       		.uleb128 0xe
 2015 00ad 3A       		.uleb128 0x3a
 2016 00ae 0B       		.uleb128 0xb
 2017 00af 3B       		.uleb128 0x3b
 2018 00b0 05       		.uleb128 0x5
 2019 00b1 27       		.uleb128 0x27
 2020 00b2 19       		.uleb128 0x19
 2021 00b3 11       		.uleb128 0x11
 2022 00b4 01       		.uleb128 0x1
 2023 00b5 12       		.uleb128 0x12
 2024 00b6 06       		.uleb128 0x6
 2025 00b7 40       		.uleb128 0x40
 2026 00b8 18       		.uleb128 0x18
 2027 00b9 9642     		.uleb128 0x2116
 2028 00bb 19       		.uleb128 0x19
 2029 00bc 01       		.uleb128 0x1
 2030 00bd 13       		.uleb128 0x13
 2031 00be 00       		.byte	0
 2032 00bf 00       		.byte	0
 2033 00c0 0F       		.uleb128 0xf
 2034 00c1 34       		.uleb128 0x34
 2035 00c2 00       		.byte	0
 2036 00c3 03       		.uleb128 0x3
 2037 00c4 0E       		.uleb128 0xe
 2038 00c5 3A       		.uleb128 0x3a
 2039 00c6 0B       		.uleb128 0xb
 2040 00c7 3B       		.uleb128 0x3b
 2041 00c8 05       		.uleb128 0x5
 2042 00c9 49       		.uleb128 0x49
 2043 00ca 13       		.uleb128 0x13
 2044 00cb 02       		.uleb128 0x2
 2045 00cc 18       		.uleb128 0x18
 2046 00cd 00       		.byte	0
 2047 00ce 00       		.byte	0
 2048 00cf 10       		.uleb128 0x10
 2049 00d0 34       		.uleb128 0x34
 2050 00d1 00       		.byte	0
 2051 00d2 03       		.uleb128 0x3
 2052 00d3 0E       		.uleb128 0xe
 2053 00d4 3A       		.uleb128 0x3a
 2054 00d5 0B       		.uleb128 0xb
 2055 00d6 3B       		.uleb128 0x3b
 2056 00d7 05       		.uleb128 0x5
 2057 00d8 49       		.uleb128 0x49
 2058 00d9 13       		.uleb128 0x13
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 54


 2059 00da 3F       		.uleb128 0x3f
 2060 00db 19       		.uleb128 0x19
 2061 00dc 3C       		.uleb128 0x3c
 2062 00dd 19       		.uleb128 0x19
 2063 00de 00       		.byte	0
 2064 00df 00       		.byte	0
 2065 00e0 11       		.uleb128 0x11
 2066 00e1 26       		.uleb128 0x26
 2067 00e2 00       		.byte	0
 2068 00e3 49       		.uleb128 0x49
 2069 00e4 13       		.uleb128 0x13
 2070 00e5 00       		.byte	0
 2071 00e6 00       		.byte	0
 2072 00e7 12       		.uleb128 0x12
 2073 00e8 34       		.uleb128 0x34
 2074 00e9 00       		.byte	0
 2075 00ea 03       		.uleb128 0x3
 2076 00eb 0E       		.uleb128 0xe
 2077 00ec 3A       		.uleb128 0x3a
 2078 00ed 0B       		.uleb128 0xb
 2079 00ee 3B       		.uleb128 0x3b
 2080 00ef 0B       		.uleb128 0xb
 2081 00f0 49       		.uleb128 0x49
 2082 00f1 13       		.uleb128 0x13
 2083 00f2 3F       		.uleb128 0x3f
 2084 00f3 19       		.uleb128 0x19
 2085 00f4 02       		.uleb128 0x2
 2086 00f5 18       		.uleb128 0x18
 2087 00f6 00       		.byte	0
 2088 00f7 00       		.byte	0
 2089 00f8 13       		.uleb128 0x13
 2090 00f9 21       		.uleb128 0x21
 2091 00fa 00       		.byte	0
 2092 00fb 49       		.uleb128 0x49
 2093 00fc 13       		.uleb128 0x13
 2094 00fd 2F       		.uleb128 0x2f
 2095 00fe 05       		.uleb128 0x5
 2096 00ff 00       		.byte	0
 2097 0100 00       		.byte	0
 2098 0101 00       		.byte	0
 2099              		.section	.debug_aranges,"",%progbits
 2100 0000 54000000 		.4byte	0x54
 2101 0004 0200     		.2byte	0x2
 2102 0006 00000000 		.4byte	.Ldebug_info0
 2103 000a 04       		.byte	0x4
 2104 000b 00       		.byte	0
 2105 000c 0000     		.2byte	0
 2106 000e 0000     		.2byte	0
 2107 0010 00000000 		.4byte	.LFB64
 2108 0014 0E000000 		.4byte	.LFE64-.LFB64
 2109 0018 00000000 		.4byte	.LFB65
 2110 001c 0E000000 		.4byte	.LFE65-.LFB65
 2111 0020 00000000 		.4byte	.LFB66
 2112 0024 0E000000 		.4byte	.LFE66-.LFB66
 2113 0028 00000000 		.4byte	.LFB67
 2114 002c 0E000000 		.4byte	.LFE67-.LFB67
 2115 0030 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 55


 2116 0034 0E000000 		.4byte	.LFE68-.LFB68
 2117 0038 00000000 		.4byte	.LFB69
 2118 003c 0E000000 		.4byte	.LFE69-.LFB69
 2119 0040 00000000 		.4byte	.LFB70
 2120 0044 0E000000 		.4byte	.LFE70-.LFB70
 2121 0048 00000000 		.4byte	.LFB71
 2122 004c 18060000 		.4byte	.LFE71-.LFB71
 2123 0050 00000000 		.4byte	0
 2124 0054 00000000 		.4byte	0
 2125              		.section	.debug_ranges,"",%progbits
 2126              	.Ldebug_ranges0:
 2127 0000 00000000 		.4byte	.LFB64
 2128 0004 0E000000 		.4byte	.LFE64
 2129 0008 00000000 		.4byte	.LFB65
 2130 000c 0E000000 		.4byte	.LFE65
 2131 0010 00000000 		.4byte	.LFB66
 2132 0014 0E000000 		.4byte	.LFE66
 2133 0018 00000000 		.4byte	.LFB67
 2134 001c 0E000000 		.4byte	.LFE67
 2135 0020 00000000 		.4byte	.LFB68
 2136 0024 0E000000 		.4byte	.LFE68
 2137 0028 00000000 		.4byte	.LFB69
 2138 002c 0E000000 		.4byte	.LFE69
 2139 0030 00000000 		.4byte	.LFB70
 2140 0034 0E000000 		.4byte	.LFE70
 2141 0038 00000000 		.4byte	.LFB71
 2142 003c 18060000 		.4byte	.LFE71
 2143 0040 00000000 		.4byte	0
 2144 0044 00000000 		.4byte	0
 2145              		.section	.debug_line,"",%progbits
 2146              	.Ldebug_line0:
 2147 0000 E2020000 		.section	.debug_str,"MS",%progbits,1
 2147      02008101 
 2147      00000201 
 2147      FB0E0D00 
 2147      01010101 
 2148              	.LASF28:
 2149 0000 6D6F6465 		.ascii	"model_id\000"
 2149      6C5F6964 
 2149      00
 2150              	.LASF66:
 2151 0009 5254435F 		.ascii	"RTC_alarmCfgMask\000"
 2151      616C6172 
 2151      6D436667 
 2151      4D61736B 
 2151      00
 2152              	.LASF27:
 2153 001a 73696D5F 		.ascii	"sim_id\000"
 2153      696400
 2154              	.LASF70:
 2155 0021 5254435F 		.ascii	"RTC_daysInMonths\000"
 2155      64617973 
 2155      496E4D6F 
 2155      6E746873 
 2155      00
 2156              	.LASF56:
 2157 0032 7379735F 		.ascii	"sys_settings_t\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 56


 2157      73657474 
 2157      696E6773 
 2157      5F7400
 2158              	.LASF47:
 2159 0041 63757272 		.ascii	"currentCountDownValue\000"
 2159      656E7443 
 2159      6F756E74 
 2159      446F776E 
 2159      56616C75 
 2160              	.LASF46:
 2161 0057 636F756E 		.ascii	"countDownValue\000"
 2161      74446F77 
 2161      6E56616C 
 2161      756500
 2162              	.LASF2:
 2163 0066 73686F72 		.ascii	"short int\000"
 2163      7420696E 
 2163      7400
 2164              	.LASF26:
 2165 0070 73697A65 		.ascii	"sizetype\000"
 2165      74797065 
 2165      00
 2166              	.LASF54:
 2167 0079 65705F68 		.ascii	"ep_host\000"
 2167      6F737400 
 2168              	.LASF90:
 2169 0081 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2169      43313120 
 2169      352E342E 
 2169      31203230 
 2169      31363036 
 2170 00b4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2170      20726576 
 2170      6973696F 
 2170      6E203233 
 2170      37373135 
 2171 00e7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2171      66756E63 
 2171      74696F6E 
 2171      2D736563 
 2171      74696F6E 
 2172              	.LASF61:
 2173 010f 5254435F 		.ascii	"RTC_EveryWeekHandler\000"
 2173      45766572 
 2173      79576565 
 2173      6B48616E 
 2173      646C6572 
 2174              	.LASF78:
 2175 0124 64617461 		.ascii	"data\000"
 2175      00
 2176              	.LASF18:
 2177 0129 486F7572 		.ascii	"Hour\000"
 2177      00
 2178              	.LASF52:
 2179 012e 63686970 		.ascii	"chip_uniqueId\000"
 2179      5F756E69 
 2179      71756549 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 57


 2179      6400
 2180              	.LASF33:
 2181 013c 65636E6F 		.ascii	"ecno\000"
 2181      00
 2182              	.LASF89:
 2183 0141 7472795F 		.ascii	"try_counter\000"
 2183      636F756E 
 2183      74657200 
 2184              	.LASF68:
 2185 014d 5254435F 		.ascii	"RTC_intervalCfgMask\000"
 2185      696E7465 
 2185      7276616C 
 2185      4366674D 
 2185      61736B00 
 2186              	.LASF12:
 2187 0161 75696E74 		.ascii	"uint16\000"
 2187      313600
 2188              	.LASF55:
 2189 0168 65705F70 		.ascii	"ep_port\000"
 2189      6F727400 
 2190              	.LASF76:
 2191 0170 64617461 		.ascii	"dataPointsInStack\000"
 2191      506F696E 
 2191      7473496E 
 2191      53746163 
 2191      6B00
 2192              	.LASF11:
 2193 0182 75696E74 		.ascii	"uint8\000"
 2193      3800
 2194              	.LASF32:
 2195 0188 72736370 		.ascii	"rscp\000"
 2195      00
 2196              	.LASF13:
 2197 018d 696E7431 		.ascii	"int16\000"
 2197      3600
 2198              	.LASF44:
 2199 0193 74696D65 		.ascii	"timeStamp\000"
 2199      5374616D 
 2199      7000
 2200              	.LASF77:
 2201 019d 64617461 		.ascii	"dataPointsInStackDesired\000"
 2201      506F696E 
 2201      7473496E 
 2201      53746163 
 2201      6B446573 
 2202              	.LASF15:
 2203 01b6 666C6F61 		.ascii	"float\000"
 2203      7400
 2204              	.LASF19:
 2205 01bc 4461794F 		.ascii	"DayOfWeek\000"
 2205      66576565 
 2205      6B00
 2206              	.LASF6:
 2207 01c6 6C6F6E67 		.ascii	"long long int\000"
 2207      206C6F6E 
 2207      6720696E 
 2207      7400
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 58


 2208              	.LASF17:
 2209 01d4 63686172 		.ascii	"char\000"
 2209      00
 2210              	.LASF30:
 2211 01d9 6D6F6465 		.ascii	"modem_info_t\000"
 2211      6D5F696E 
 2211      666F5F74 
 2211      00
 2212              	.LASF4:
 2213 01e6 6C6F6E67 		.ascii	"long int\000"
 2213      20696E74 
 2213      00
 2214              	.LASF51:
 2215 01ef 6D6F6465 		.ascii	"modem_info\000"
 2215      6D5F696E 
 2215      666F00
 2216              	.LASF62:
 2217 01fa 5254435F 		.ascii	"RTC_EveryMonthHandler\000"
 2217      45766572 
 2217      794D6F6E 
 2217      74684861 
 2217      6E646C65 
 2218              	.LASF84:
 2219 0210 616C6172 		.ascii	"alarmMeasure\000"
 2219      6D4D6561 
 2219      73757265 
 2219      00
 2220              	.LASF23:
 2221 021d 59656172 		.ascii	"Year\000"
 2221      00
 2222              	.LASF22:
 2223 0222 4D6F6E74 		.ascii	"Month\000"
 2223      6800
 2224              	.LASF31:
 2225 0228 72737369 		.ascii	"rssi\000"
 2225      00
 2226              	.LASF60:
 2227 022d 5254435F 		.ascii	"RTC_EveryDayHandler\000"
 2227      45766572 
 2227      79446179 
 2227      48616E64 
 2227      6C657200 
 2228              	.LASF80:
 2229 0241 68747470 		.ascii	"http_body\000"
 2229      5F626F64 
 2229      7900
 2230              	.LASF39:
 2231 024b 6D656173 		.ascii	"measure_time\000"
 2231      7572655F 
 2231      74696D65 
 2231      00
 2232              	.LASF86:
 2233 0258 616C6172 		.ascii	"alarmSync\000"
 2233      6D53796E 
 2233      6300
 2234              	.LASF25:
 2235 0262 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 59


 2235      20646F75 
 2235      626C6500 
 2236              	.LASF1:
 2237 026e 756E7369 		.ascii	"unsigned char\000"
 2237      676E6564 
 2237      20636861 
 2237      7200
 2238              	.LASF35:
 2239 027c 72737270 		.ascii	"rsrp\000"
 2239      00
 2240              	.LASF73:
 2241 0281 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2241      6D5F7374 
 2241      6172745F 
 2241      74696D65 
 2241      5F737461 
 2242              	.LASF64:
 2243 0298 5254435F 		.ascii	"RTC_alarmCfgTimeDate\000"
 2243      616C6172 
 2243      6D436667 
 2243      54696D65 
 2243      44617465 
 2244              	.LASF72:
 2245 02ad 6D6F6465 		.ascii	"modem_state\000"
 2245      6D5F7374 
 2245      61746500 
 2246              	.LASF0:
 2247 02b9 7369676E 		.ascii	"signed char\000"
 2247      65642063 
 2247      68617200 
 2248              	.LASF63:
 2249 02c5 5254435F 		.ascii	"RTC_EveryYearHandler\000"
 2249      45766572 
 2249      79596561 
 2249      7248616E 
 2249      646C6572 
 2250              	.LASF7:
 2251 02da 6C6F6E67 		.ascii	"long long unsigned int\000"
 2251      206C6F6E 
 2251      6720756E 
 2251      7369676E 
 2251      65642069 
 2252              	.LASF83:
 2253 02f1 73797374 		.ascii	"system_settings\000"
 2253      656D5F73 
 2253      65747469 
 2253      6E677300 
 2254              	.LASF65:
 2255 0301 5254435F 		.ascii	"RTC_currentTimeDate\000"
 2255      63757272 
 2255      656E7454 
 2255      696D6544 
 2255      61746500 
 2256              	.LASF8:
 2257 0315 756E7369 		.ascii	"unsigned int\000"
 2257      676E6564 
 2257      20696E74 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 60


 2257      00
 2258              	.LASF45:
 2259 0322 6B65795F 		.ascii	"key_value_t\000"
 2259      76616C75 
 2259      655F7400 
 2260              	.LASF40:
 2261 032e 73796E63 		.ascii	"sync_time\000"
 2261      5F74696D 
 2261      6500
 2262              	.LASF92:
 2263 0338 433A5C55 		.ascii	"C:\\Users\\hail\\Desktop\\Brooke Research\\notoriOS"
 2263      73657273 
 2263      5C686169 
 2263      6C5C4465 
 2263      736B746F 
 2264 0366 5C6E6F74 		.ascii	"\\notoriOS\\notoriOS.cydsn\000"
 2264      6F72694F 
 2264      535C6E6F 
 2264      746F7269 
 2264      4F532E63 
 2265              	.LASF93:
 2266 037f 5254435F 		.ascii	"RTC_ISR\000"
 2266      49535200 
 2267              	.LASF85:
 2268 0387 74696D65 		.ascii	"timeToMeasure\000"
 2268      546F4D65 
 2268      61737572 
 2268      6500
 2269              	.LASF42:
 2270 0395 75706461 		.ascii	"updatable_parameters_t\000"
 2270      7461626C 
 2270      655F7061 
 2270      72616D65 
 2270      74657273 
 2271              	.LASF53:
 2272 03ac 7379735F 		.ascii	"sys_info_t\000"
 2272      696E666F 
 2272      5F7400
 2273              	.LASF3:
 2274 03b7 73686F72 		.ascii	"short unsigned int\000"
 2274      7420756E 
 2274      7369676E 
 2274      65642069 
 2274      6E7400
 2275              	.LASF36:
 2276 03ca 74696D65 		.ascii	"time_to_network_connect\000"
 2276      5F746F5F 
 2276      6E657477 
 2276      6F726B5F 
 2276      636F6E6E 
 2277              	.LASF82:
 2278 03e2 73797374 		.ascii	"system_info\000"
 2278      656D5F69 
 2278      6E666F00 
 2279              	.LASF37:
 2280 03ee 74696D65 		.ascii	"time_to_acquire_ip\000"
 2280      5F746F5F 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 61


 2280      61637175 
 2280      6972655F 
 2280      697000
 2281              	.LASF29:
 2282 0401 696D6569 		.ascii	"imei\000"
 2282      00
 2283              	.LASF10:
 2284 0406 696E7433 		.ascii	"int32_t\000"
 2284      325F7400 
 2285              	.LASF94:
 2286 040e 5254435F 		.ascii	"RTC_tmp\000"
 2286      746D7000 
 2287              	.LASF38:
 2288 0416 6D6F6465 		.ascii	"modem_stats_t\000"
 2288      6D5F7374 
 2288      6174735F 
 2288      7400
 2289              	.LASF50:
 2290 0424 616C6172 		.ascii	"alarm\000"
 2290      6D00
 2291              	.LASF88:
 2292 042a 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2292      546F5379 
 2292      636E5265 
 2292      6D6F7465 
 2292      50617261 
 2293              	.LASF59:
 2294 0441 5254435F 		.ascii	"RTC_EveryHourHandler\000"
 2294      45766572 
 2294      79486F75 
 2294      7248616E 
 2294      646C6572 
 2295              	.LASF20:
 2296 0456 4461794F 		.ascii	"DayOfMonth\000"
 2296      664D6F6E 
 2296      746800
 2297              	.LASF34:
 2298 0461 72737271 		.ascii	"rsrq\000"
 2298      00
 2299              	.LASF81:
 2300 0466 68747470 		.ascii	"http_route\000"
 2300      5F726F75 
 2300      746500
 2301              	.LASF58:
 2302 0471 5254435F 		.ascii	"RTC_EveryMinuteHandler\000"
 2302      45766572 
 2302      794D696E 
 2302      75746548 
 2302      616E646C 
 2303              	.LASF5:
 2304 0488 6C6F6E67 		.ascii	"long unsigned int\000"
 2304      20756E73 
 2304      69676E65 
 2304      6420696E 
 2304      7400
 2305              	.LASF14:
 2306 049a 696E7433 		.ascii	"int32\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 62


 2306      3200
 2307              	.LASF16:
 2308 04a0 646F7562 		.ascii	"double\000"
 2308      6C6500
 2309              	.LASF57:
 2310 04a7 5254435F 		.ascii	"RTC_EverySecondHandler\000"
 2310      45766572 
 2310      79536563 
 2310      6F6E6448 
 2310      616E646C 
 2311              	.LASF74:
 2312 04be 6D6F6465 		.ascii	"modem_stats\000"
 2312      6D5F7374 
 2312      61747300 
 2313              	.LASF41:
 2314 04ca 64656275 		.ascii	"debug_level\000"
 2314      675F6C65 
 2314      76656C00 
 2315              	.LASF48:
 2316 04d6 636F756E 		.ascii	"countDownType\000"
 2316      74446F77 
 2316      6E547970 
 2316      6500
 2317              	.LASF69:
 2318 04e4 5254435F 		.ascii	"RTC_statusDateTime\000"
 2318      73746174 
 2318      75734461 
 2318      74655469 
 2318      6D6500
 2319              	.LASF9:
 2320 04f7 5F5F696E 		.ascii	"__int32_t\000"
 2320      7433325F 
 2320      7400
 2321              	.LASF49:
 2322 0501 636F756E 		.ascii	"countDownResetCondition\000"
 2322      74446F77 
 2322      6E526573 
 2322      6574436F 
 2322      6E646974 
 2323              	.LASF91:
 2324 0519 47656E65 		.ascii	"Generated_Source\\PSoC5\\RTC_INT.c\000"
 2324      72617465 
 2324      645F536F 
 2324      75726365 
 2324      5C50536F 
 2325              	.LASF67:
 2326 053a 5254435F 		.ascii	"RTC_alarmCurStatus\000"
 2326      616C6172 
 2326      6D437572 
 2326      53746174 
 2326      757300
 2327              	.LASF75:
 2328 054d 75706461 		.ascii	"updatable_parameters\000"
 2328      7461626C 
 2328      655F7061 
 2328      72616D65 
 2328      74657273 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccrQ6isO.s 			page 63


 2329              	.LASF71:
 2330 0562 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2330      52784275 
 2330      66666572 
 2330      00
 2331              	.LASF24:
 2332 056f 5254435F 		.ascii	"RTC_TIME_DATE\000"
 2332      54494D45 
 2332      5F444154 
 2332      4500
 2333              	.LASF43:
 2334 057d 76616C75 		.ascii	"value\000"
 2334      6500
 2335              	.LASF79:
 2336 0583 68747470 		.ascii	"http_request\000"
 2336      5F726571 
 2336      75657374 
 2336      00
 2337              	.LASF87:
 2338 0590 74696D65 		.ascii	"timeToSync\000"
 2338      546F5379 
 2338      6E6300
 2339              	.LASF21:
 2340 059b 4461794F 		.ascii	"DayOfYear\000"
 2340      66596561 
 2340      7200
 2341              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
