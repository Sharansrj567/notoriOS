ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RTC_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,10,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	App_LED_enabled,1,1
  33              		.comm	app_led_inbox,100,4
  34              		.comm	level_sensor_inbox,100,4
  35              		.comm	level_sensor_enabled,1,1
  36              		.comm	valve_diameter,4,4
  37              		.comm	valve_type,10,4
  38              		.comm	valve_enabled,1,1
  39              		.comm	valve_inbox,100,4
  40              		.comm	autosampler_enabled,1,1
  41              		.comm	autosampler_inbox,100,4
  42              		.comm	http_request,10000,4
  43              		.comm	http_body,10000,4
  44              		.comm	http_route,200,4
  45              		.comm	system_info,28,4
  46              		.comm	system_settings,104,4
  47              		.comm	alarmMeasure,6,4
  48              		.comm	timeToMeasure,1,1
  49              		.comm	alarmSync,6,4
  50              		.comm	timeToSync,1,1
  51              		.comm	timeToSycnRemoteParams,1,1
  52              		.comm	hey,1,1
  53              		.comm	alarmAppLED,6,4
  54              		.comm	timeToAppLED,1,1
  55              		.comm	alarmLevelSensor,6,4
  56              		.comm	timeToLevelSensor,1,1
  57              		.comm	alarmDownstreamLevelSensor,6,4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 2


  58              		.comm	timeToDownstreamLevelSensor,1,1
  59              		.comm	alarmValve,6,4
  60              		.comm	timeToValve,1,1
  61              		.comm	alarmAutosampler,6,4
  62              		.comm	timeToAutosampler,1,1
  63              		.section	.text.RTC_EverySecondHandler,"ax",%progbits
  64              		.align	2
  65              		.thumb
  66              		.thumb_func
  67              		.type	RTC_EverySecondHandler, %function
  68              	RTC_EverySecondHandler:
  69              	.LFB64:
  70              		.file 1 "Generated_Source\\PSoC5\\RTC_INT.c"
   1:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/RTC_INT.c **** * File Name: RTC_INT.c
   3:Generated_Source\PSoC5/RTC_INT.c **** * Version 2.0
   4:Generated_Source\PSoC5/RTC_INT.c **** *
   5:Generated_Source\PSoC5/RTC_INT.c **** * Description:
   6:Generated_Source\PSoC5/RTC_INT.c **** *  This file contains the Interrupt Service Routine (ISR) for the RTC component.
   7:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt routine has entry pointes to overflow on time or date.
   8:Generated_Source\PSoC5/RTC_INT.c **** *
   9:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  10:Generated_Source\PSoC5/RTC_INT.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/RTC_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/RTC_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/RTC_INT.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/RTC_INT.c **** 
  16:Generated_Source\PSoC5/RTC_INT.c **** #include "RTC.h"
  17:Generated_Source\PSoC5/RTC_INT.c **** #include "CyLib.h"
  18:Generated_Source\PSoC5/RTC_INT.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/RTC_INT.c **** 
  20:Generated_Source\PSoC5/RTC_INT.c **** /* Function Prototypes */
  21:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void);
  22:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void);
  23:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void);
  24:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void);
  25:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void);
  26:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void);
  27:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void);
  28:Generated_Source\PSoC5/RTC_INT.c **** 
  29:Generated_Source\PSoC5/RTC_INT.c **** 
  30:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  31:Generated_Source\PSoC5/RTC_INT.c **** *  Place your includes, defines and code here
  32:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  33:Generated_Source\PSoC5/RTC_INT.c **** /* `#START RTC_ISR_DEFINITION` */
  34:Generated_Source\PSoC5/RTC_INT.c **** 
  35:Generated_Source\PSoC5/RTC_INT.c **** #include "notoriOS.h"
  36:Generated_Source\PSoC5/RTC_INT.c **** 
  37:Generated_Source\PSoC5/RTC_INT.c **** /* `#END` */
  38:Generated_Source\PSoC5/RTC_INT.c **** 
  39:Generated_Source\PSoC5/RTC_INT.c **** 
  40:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EverySecondHandler
  42:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  43:Generated_Source\PSoC5/RTC_INT.c **** *
  44:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 3


  45:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every second.
  46:Generated_Source\PSoC5/RTC_INT.c **** *
  47:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  48:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  49:Generated_Source\PSoC5/RTC_INT.c **** *
  50:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  51:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  52:Generated_Source\PSoC5/RTC_INT.c **** *
  53:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  54:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void)
  55:Generated_Source\PSoC5/RTC_INT.c **** {
  71              		.loc 1 55 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 1, uses_anonymous_args = 0
  75 0000 80B5     		push	{r7, lr}
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 7, -8
  78              		.cfi_offset 14, -4
  79 0002 00AF     		add	r7, sp, #0
  80              		.cfi_def_cfa_register 7
  56:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every second handler code here. */
  57:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_SECOND_HANDLER_CODE` */
  58:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_SECOND);
  81              		.loc 1 58 0
  82 0004 0020     		movs	r0, #0
  83 0006 FFF7FEFF 		bl	AyoItsTime
  59:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  60:Generated_Source\PSoC5/RTC_INT.c ****     
  61:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_SECOND_HANDLER_CALLBACK
  62:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler_Callback();
  63:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_SECOND_HANDLER_CALLBACK */
  64:Generated_Source\PSoC5/RTC_INT.c **** }
  84              		.loc 1 64 0
  85 000a 00BF     		nop
  86 000c 80BD     		pop	{r7, pc}
  87              		.cfi_endproc
  88              	.LFE64:
  89              		.size	RTC_EverySecondHandler, .-RTC_EverySecondHandler
  90 000e 00BF     		.section	.text.RTC_EveryMinuteHandler,"ax",%progbits
  91              		.align	2
  92              		.thumb
  93              		.thumb_func
  94              		.type	RTC_EveryMinuteHandler, %function
  95              	RTC_EveryMinuteHandler:
  96              	.LFB65:
  65:Generated_Source\PSoC5/RTC_INT.c **** 
  66:Generated_Source\PSoC5/RTC_INT.c **** 
  67:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  68:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMinuteHandler
  69:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  70:Generated_Source\PSoC5/RTC_INT.c **** *
  71:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  72:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every minute.
  73:Generated_Source\PSoC5/RTC_INT.c **** *
  74:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  75:Generated_Source\PSoC5/RTC_INT.c **** *  None.
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 4


  76:Generated_Source\PSoC5/RTC_INT.c **** *
  77:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  78:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  79:Generated_Source\PSoC5/RTC_INT.c **** *
  80:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  81:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void)
  82:Generated_Source\PSoC5/RTC_INT.c **** {
  97              		.loc 1 82 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 1, uses_anonymous_args = 0
 101 0000 80B5     		push	{r7, lr}
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 7, -8
 104              		.cfi_offset 14, -4
 105 0002 00AF     		add	r7, sp, #0
 106              		.cfi_def_cfa_register 7
  83:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every minute handler code here. */
  84:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MINUTE_HANDLER_CODE` */
  85:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_MINUTE);
 107              		.loc 1 85 0
 108 0004 0120     		movs	r0, #1
 109 0006 FFF7FEFF 		bl	AyoItsTime
  86:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  87:Generated_Source\PSoC5/RTC_INT.c **** 
  88:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MINUTE_HANDLER_CALLBACK
  89:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMinuteHandler_Callback();
  90:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MINUTE_HANDLER_CALLBACK */    
  91:Generated_Source\PSoC5/RTC_INT.c **** }
 110              		.loc 1 91 0
 111 000a 00BF     		nop
 112 000c 80BD     		pop	{r7, pc}
 113              		.cfi_endproc
 114              	.LFE65:
 115              		.size	RTC_EveryMinuteHandler, .-RTC_EveryMinuteHandler
 116 000e 00BF     		.section	.text.RTC_EveryHourHandler,"ax",%progbits
 117              		.align	2
 118              		.thumb
 119              		.thumb_func
 120              		.type	RTC_EveryHourHandler, %function
 121              	RTC_EveryHourHandler:
 122              	.LFB66:
  92:Generated_Source\PSoC5/RTC_INT.c **** 
  93:Generated_Source\PSoC5/RTC_INT.c **** 
  94:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  95:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryHourHandler
  96:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  97:Generated_Source\PSoC5/RTC_INT.c **** *
  98:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  99:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every hour.
 100:Generated_Source\PSoC5/RTC_INT.c **** *
 101:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 102:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 103:Generated_Source\PSoC5/RTC_INT.c **** *
 104:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 105:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 106:Generated_Source\PSoC5/RTC_INT.c **** *
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 5


 107:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 108:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void)
 109:Generated_Source\PSoC5/RTC_INT.c **** {
 123              		.loc 1 109 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 1, uses_anonymous_args = 0
 127 0000 80B5     		push	{r7, lr}
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 7, -8
 130              		.cfi_offset 14, -4
 131 0002 00AF     		add	r7, sp, #0
 132              		.cfi_def_cfa_register 7
 110:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every hour handler code here. */
 111:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_HOUR_HANDLER_CODE` */
 112:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_HOUR);
 133              		.loc 1 112 0
 134 0004 0220     		movs	r0, #2
 135 0006 FFF7FEFF 		bl	AyoItsTime
 113:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 114:Generated_Source\PSoC5/RTC_INT.c ****     
 115:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_HOUR_HANDLER_CALLBACK
 116:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryHourHandler_Callback();
 117:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_HOUR_HANDLER_CALLBACK */
 118:Generated_Source\PSoC5/RTC_INT.c **** }
 136              		.loc 1 118 0
 137 000a 00BF     		nop
 138 000c 80BD     		pop	{r7, pc}
 139              		.cfi_endproc
 140              	.LFE66:
 141              		.size	RTC_EveryHourHandler, .-RTC_EveryHourHandler
 142 000e 00BF     		.section	.text.RTC_EveryDayHandler,"ax",%progbits
 143              		.align	2
 144              		.thumb
 145              		.thumb_func
 146              		.type	RTC_EveryDayHandler, %function
 147              	RTC_EveryDayHandler:
 148              	.LFB67:
 119:Generated_Source\PSoC5/RTC_INT.c **** 
 120:Generated_Source\PSoC5/RTC_INT.c **** 
 121:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 122:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryDayHandler
 123:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 124:Generated_Source\PSoC5/RTC_INT.c **** *
 125:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 126:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every day.
 127:Generated_Source\PSoC5/RTC_INT.c **** *
 128:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 129:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 130:Generated_Source\PSoC5/RTC_INT.c **** *
 131:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 132:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 133:Generated_Source\PSoC5/RTC_INT.c **** *
 134:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 135:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void)
 136:Generated_Source\PSoC5/RTC_INT.c **** {
 149              		.loc 1 136 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 6


 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153 0000 80B5     		push	{r7, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 00AF     		add	r7, sp, #0
 158              		.cfi_def_cfa_register 7
 137:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your everyday handler code here. */
 138:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_DAY_HANDLER_CODE` */
 139:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_DAY);
 159              		.loc 1 139 0
 160 0004 0320     		movs	r0, #3
 161 0006 FFF7FEFF 		bl	AyoItsTime
 140:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 141:Generated_Source\PSoC5/RTC_INT.c ****     
 142:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_DAY_HANDLER_CALLBACK
 143:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryDayHandler_Callback();
 144:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_DAY_HANDLER_CALLBACK */
 145:Generated_Source\PSoC5/RTC_INT.c **** }
 162              		.loc 1 145 0
 163 000a 00BF     		nop
 164 000c 80BD     		pop	{r7, pc}
 165              		.cfi_endproc
 166              	.LFE67:
 167              		.size	RTC_EveryDayHandler, .-RTC_EveryDayHandler
 168 000e 00BF     		.section	.text.RTC_EveryWeekHandler,"ax",%progbits
 169              		.align	2
 170              		.thumb
 171              		.thumb_func
 172              		.type	RTC_EveryWeekHandler, %function
 173              	RTC_EveryWeekHandler:
 174              	.LFB68:
 146:Generated_Source\PSoC5/RTC_INT.c **** 
 147:Generated_Source\PSoC5/RTC_INT.c **** 
 148:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 149:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryWeekHandler
 150:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 151:Generated_Source\PSoC5/RTC_INT.c **** *
 152:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 153:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every week.
 154:Generated_Source\PSoC5/RTC_INT.c **** *
 155:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 156:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 157:Generated_Source\PSoC5/RTC_INT.c **** *
 158:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 159:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 160:Generated_Source\PSoC5/RTC_INT.c **** *
 161:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 162:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void)
 163:Generated_Source\PSoC5/RTC_INT.c **** {
 175              		.loc 1 163 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 7


 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
 164:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every week handler code here. */
 165:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_WEEK_HANDLER_CODE` */
 166:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_WEEK);
 185              		.loc 1 166 0
 186 0004 0420     		movs	r0, #4
 187 0006 FFF7FEFF 		bl	AyoItsTime
 167:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 168:Generated_Source\PSoC5/RTC_INT.c **** 
 169:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_WEEK_HANDLER_CALLBACK
 170:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryWeekHandler_Callback();
 171:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_WEEK_HANDLER_CALLBACK */
 172:Generated_Source\PSoC5/RTC_INT.c **** }
 188              		.loc 1 172 0
 189 000a 00BF     		nop
 190 000c 80BD     		pop	{r7, pc}
 191              		.cfi_endproc
 192              	.LFE68:
 193              		.size	RTC_EveryWeekHandler, .-RTC_EveryWeekHandler
 194 000e 00BF     		.section	.text.RTC_EveryMonthHandler,"ax",%progbits
 195              		.align	2
 196              		.thumb
 197              		.thumb_func
 198              		.type	RTC_EveryMonthHandler, %function
 199              	RTC_EveryMonthHandler:
 200              	.LFB69:
 173:Generated_Source\PSoC5/RTC_INT.c **** 
 174:Generated_Source\PSoC5/RTC_INT.c **** 
 175:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMonthHandler
 177:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 178:Generated_Source\PSoC5/RTC_INT.c **** *
 179:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 180:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every month.
 181:Generated_Source\PSoC5/RTC_INT.c **** *
 182:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 183:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 184:Generated_Source\PSoC5/RTC_INT.c **** *
 185:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 186:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 187:Generated_Source\PSoC5/RTC_INT.c **** *
 188:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 189:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void)
 190:Generated_Source\PSoC5/RTC_INT.c **** {
 201              		.loc 1 190 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 1, uses_anonymous_args = 0
 205 0000 80B5     		push	{r7, lr}
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 209 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 8


 210              		.cfi_def_cfa_register 7
 191:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every month handler code here. */
 192:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MONTH_HANDLER_CODE` */
 193:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_MONTH);
 211              		.loc 1 193 0
 212 0004 0520     		movs	r0, #5
 213 0006 FFF7FEFF 		bl	AyoItsTime
 194:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 195:Generated_Source\PSoC5/RTC_INT.c ****     
 196:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MONTH_HANDLER_CALLBACK
 197:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMonthHandler_Callback();
 198:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MONTH_HANDLER_CALLBACK */
 199:Generated_Source\PSoC5/RTC_INT.c **** }
 214              		.loc 1 199 0
 215 000a 00BF     		nop
 216 000c 80BD     		pop	{r7, pc}
 217              		.cfi_endproc
 218              	.LFE69:
 219              		.size	RTC_EveryMonthHandler, .-RTC_EveryMonthHandler
 220 000e 00BF     		.section	.text.RTC_EveryYearHandler,"ax",%progbits
 221              		.align	2
 222              		.thumb
 223              		.thumb_func
 224              		.type	RTC_EveryYearHandler, %function
 225              	RTC_EveryYearHandler:
 226              	.LFB70:
 200:Generated_Source\PSoC5/RTC_INT.c **** 
 201:Generated_Source\PSoC5/RTC_INT.c **** 
 202:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 203:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryYearHandler
 204:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 205:Generated_Source\PSoC5/RTC_INT.c **** *
 206:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 207:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every year.
 208:Generated_Source\PSoC5/RTC_INT.c **** *
 209:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 210:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 211:Generated_Source\PSoC5/RTC_INT.c **** *
 212:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 213:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 214:Generated_Source\PSoC5/RTC_INT.c **** *
 215:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 216:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void)
 217:Generated_Source\PSoC5/RTC_INT.c **** {
 227              		.loc 1 217 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231 0000 80B5     		push	{r7, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
 218:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every year handler code here. */
 219:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_YEAR_HANDLER_CODE` */
 220:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_YEAR);
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 9


 237              		.loc 1 220 0
 238 0004 0620     		movs	r0, #6
 239 0006 FFF7FEFF 		bl	AyoItsTime
 221:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 222:Generated_Source\PSoC5/RTC_INT.c **** 
 223:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_YEAR_HANDLER_CALLBACK
 224:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryYearHandler_Callback();
 225:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_YEAR_HANDLER_CALLBACK */    
 226:Generated_Source\PSoC5/RTC_INT.c **** }
 240              		.loc 1 226 0
 241 000a 00BF     		nop
 242 000c 80BD     		pop	{r7, pc}
 243              		.cfi_endproc
 244              	.LFE70:
 245              		.size	RTC_EveryYearHandler, .-RTC_EveryYearHandler
 246 000e 00BF     		.section	.text.RTC_ISR,"ax",%progbits
 247              		.align	2
 248              		.global	RTC_ISR
 249              		.thumb
 250              		.thumb_func
 251              		.type	RTC_ISR, %function
 252              	RTC_ISR:
 253              	.LFB71:
 227:Generated_Source\PSoC5/RTC_INT.c **** 
 228:Generated_Source\PSoC5/RTC_INT.c **** 
 229:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/RTC_INT.c **** * Function Name: RTC_ISR
 231:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 232:Generated_Source\PSoC5/RTC_INT.c **** *
 233:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 234:Generated_Source\PSoC5/RTC_INT.c **** *  This ISR is executed on 1PPS (one pulse per second) event.
 235:Generated_Source\PSoC5/RTC_INT.c **** *  Global interrupt must be enabled to invoke this ISR.
 236:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt trigs every second.
 237:Generated_Source\PSoC5/RTC_INT.c **** *
 238:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 239:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 240:Generated_Source\PSoC5/RTC_INT.c **** *
 241:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 242:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 243:Generated_Source\PSoC5/RTC_INT.c **** *
 244:Generated_Source\PSoC5/RTC_INT.c **** * Global variables:
 245:Generated_Source\PSoC5/RTC_INT.c **** * RTC_currentTimeDate, RTC_dstTimeDateStart,
 246:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStop, RTC_dstTimeDateStart,
 247:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCfgTimeDate, RTC_statusDateTime,
 248:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStartStatus,
 249:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStopStatus, RTC_alarmCurStatus: global
 250:Generated_Source\PSoC5/RTC_INT.c **** *  variables are used for the time/date, DST and alarm update procedure.
 251:Generated_Source\PSoC5/RTC_INT.c **** *
 252:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStart and RTC_currentTimeDate:
 253:Generated_Source\PSoC5/RTC_INT.c **** *  are modified with the updated values.
 254:Generated_Source\PSoC5/RTC_INT.c **** *
 255:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_statusDateTime, RTC_dstStartStatus,
 256:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStopStatus,
 257:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCurStatus: global variables could be modified while
 258:Generated_Source\PSoC5/RTC_INT.c **** *  current time/date is updated.
 259:Generated_Source\PSoC5/RTC_INT.c **** *
 260:Generated_Source\PSoC5/RTC_INT.c **** * Side Effects:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 10


 261:Generated_Source\PSoC5/RTC_INT.c **** *  Clears all interrupt status bits (react_int, limact_int, onepps_int, ctw_int,
 262:Generated_Source\PSoC5/RTC_INT.c **** *  and  ftw_int) in Power Manager Interrupt Status Register. If an interrupt
 263:Generated_Source\PSoC5/RTC_INT.c **** *  gets generated at the same time as a clear, the bit will remain set (which
 264:Generated_Source\PSoC5/RTC_INT.c **** *  causes another interrupt).
 265:Generated_Source\PSoC5/RTC_INT.c **** *
 266:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 267:Generated_Source\PSoC5/RTC_INT.c **** CY_ISR(RTC_ISR)
 268:Generated_Source\PSoC5/RTC_INT.c **** {
 254              		.loc 1 268 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 8
 257              		@ frame_needed = 1, uses_anonymous_args = 0
 258 0000 80B5     		push	{r7, lr}
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 7, -8
 261              		.cfi_offset 14, -4
 262 0002 82B0     		sub	sp, sp, #8
 263              		.cfi_def_cfa_offset 16
 264 0004 00AF     		add	r7, sp, #0
 265              		.cfi_def_cfa_register 7
 269:Generated_Source\PSoC5/RTC_INT.c ****     uint8 RTC_tmp;
 270:Generated_Source\PSoC5/RTC_INT.c **** 
 271:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_ENTRY_CALLBACK
 272:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_EntryCallback();
 273:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_ENTRY_CALLBACK */
 274:Generated_Source\PSoC5/RTC_INT.c ****     
 275:Generated_Source\PSoC5/RTC_INT.c ****     /* Clear OPPS interrupt status flag */
 276:Generated_Source\PSoC5/RTC_INT.c ****     (void) CyPmReadStatus(CY_PM_ONEPPS_INT);
 266              		.loc 1 276 0
 267 0006 0420     		movs	r0, #4
 268 0008 FFF7FEFF 		bl	CyPmReadStatus
 277:Generated_Source\PSoC5/RTC_INT.c **** 
 278:Generated_Source\PSoC5/RTC_INT.c ****     /* Increment seconds counter */
 279:Generated_Source\PSoC5/RTC_INT.c ****     RTC_currentTimeDate.Sec++;
 269              		.loc 1 279 0
 270 000c 9E4B     		ldr	r3, .L48
 271 000e 1B78     		ldrb	r3, [r3]
 272 0010 DBB2     		uxtb	r3, r3
 273 0012 0133     		adds	r3, r3, #1
 274 0014 DAB2     		uxtb	r2, r3
 275 0016 9C4B     		ldr	r3, .L48
 276 0018 1A70     		strb	r2, [r3]
 280:Generated_Source\PSoC5/RTC_INT.c **** 
 281:Generated_Source\PSoC5/RTC_INT.c ****     /* Check if minute elapsed */
 282:Generated_Source\PSoC5/RTC_INT.c ****     if(RTC_currentTimeDate.Sec > RTC_MINUTE_ELAPSED)
 277              		.loc 1 282 0
 278 001a 9B4B     		ldr	r3, .L48
 279 001c 1B78     		ldrb	r3, [r3]
 280 001e DBB2     		uxtb	r3, r3
 281 0020 3B2B     		cmp	r3, #59
 282 0022 40F2A682 		bls	.L9
 283:Generated_Source\PSoC5/RTC_INT.c ****     {
 284:Generated_Source\PSoC5/RTC_INT.c ****         /* Inc Min */
 285:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Min++;
 283              		.loc 1 285 0
 284 0026 984B     		ldr	r3, .L48
 285 0028 5B78     		ldrb	r3, [r3, #1]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 11


 286 002a DBB2     		uxtb	r3, r3
 287 002c 0133     		adds	r3, r3, #1
 288 002e DAB2     		uxtb	r2, r3
 289 0030 954B     		ldr	r3, .L48
 290 0032 5A70     		strb	r2, [r3, #1]
 286:Generated_Source\PSoC5/RTC_INT.c **** 
 287:Generated_Source\PSoC5/RTC_INT.c ****         /* Clear Sec */
 288:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Sec = 0u;
 291              		.loc 1 288 0
 292 0034 944B     		ldr	r3, .L48
 293 0036 0022     		movs	r2, #0
 294 0038 1A70     		strb	r2, [r3]
 289:Generated_Source\PSoC5/RTC_INT.c **** 
 290:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 295              		.loc 1 290 0
 296 003a 934B     		ldr	r3, .L48
 297 003c 5B78     		ldrb	r3, [r3, #1]
 298 003e DBB2     		uxtb	r3, r3
 299 0040 3B2B     		cmp	r3, #59
 300 0042 40F24682 		bls	.L10
 291:Generated_Source\PSoC5/RTC_INT.c ****         {
 292:Generated_Source\PSoC5/RTC_INT.c ****             /* Inc HOUR */
 293:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Hour++;
 301              		.loc 1 293 0
 302 0046 904B     		ldr	r3, .L48
 303 0048 9B78     		ldrb	r3, [r3, #2]
 304 004a DBB2     		uxtb	r3, r3
 305 004c 0133     		adds	r3, r3, #1
 306 004e DAB2     		uxtb	r2, r3
 307 0050 8D4B     		ldr	r3, .L48
 308 0052 9A70     		strb	r2, [r3, #2]
 294:Generated_Source\PSoC5/RTC_INT.c **** 
 295:Generated_Source\PSoC5/RTC_INT.c ****             /* Clear Min */
 296:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Min = 0u;
 309              		.loc 1 296 0
 310 0054 8C4B     		ldr	r3, .L48
 311 0056 0022     		movs	r2, #0
 312 0058 5A70     		strb	r2, [r3, #1]
 297:Generated_Source\PSoC5/RTC_INT.c **** 
 298:Generated_Source\PSoC5/RTC_INT.c ****             /* Day roll over */
 299:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 313              		.loc 1 299 0
 314 005a 8B4B     		ldr	r3, .L48
 315 005c 9B78     		ldrb	r3, [r3, #2]
 316 005e DBB2     		uxtb	r3, r3
 317 0060 172B     		cmp	r3, #23
 318 0062 40F2DD81 		bls	.L11
 300:Generated_Source\PSoC5/RTC_INT.c ****             {
 301:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfMonth */
 302:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfMonth++;
 319              		.loc 1 302 0
 320 0066 884B     		ldr	r3, .L48
 321 0068 1B79     		ldrb	r3, [r3, #4]
 322 006a DBB2     		uxtb	r3, r3
 323 006c 0133     		adds	r3, r3, #1
 324 006e DAB2     		uxtb	r2, r3
 325 0070 854B     		ldr	r3, .L48
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 12


 326 0072 1A71     		strb	r2, [r3, #4]
 303:Generated_Source\PSoC5/RTC_INT.c **** 
 304:Generated_Source\PSoC5/RTC_INT.c ****                 /* Clear Hour */
 305:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.Hour = 0u;
 327              		.loc 1 305 0
 328 0074 844B     		ldr	r3, .L48
 329 0076 0022     		movs	r2, #0
 330 0078 9A70     		strb	r2, [r3, #2]
 306:Generated_Source\PSoC5/RTC_INT.c **** 
 307:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfYear */
 308:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfYear++;
 331              		.loc 1 308 0
 332 007a 834B     		ldr	r3, .L48
 333 007c DB88     		ldrh	r3, [r3, #6]	@ movhi
 334 007e 9BB2     		uxth	r3, r3
 335 0080 0133     		adds	r3, r3, #1
 336 0082 9AB2     		uxth	r2, r3
 337 0084 804B     		ldr	r3, .L48
 338 0086 DA80     		strh	r2, [r3, #6]	@ movhi
 309:Generated_Source\PSoC5/RTC_INT.c **** 
 310:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfWeek */
 311:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfWeek++;
 339              		.loc 1 311 0
 340 0088 7F4B     		ldr	r3, .L48
 341 008a DB78     		ldrb	r3, [r3, #3]
 342 008c DBB2     		uxtb	r3, r3
 343 008e 0133     		adds	r3, r3, #1
 344 0090 DAB2     		uxtb	r2, r3
 345 0092 7D4B     		ldr	r3, .L48
 346 0094 DA70     		strb	r2, [r3, #3]
 312:Generated_Source\PSoC5/RTC_INT.c **** 
 313:Generated_Source\PSoC5/RTC_INT.c ****                 /* Check DayOfWeek */
 314:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 347              		.loc 1 314 0
 348 0096 7C4B     		ldr	r3, .L48
 349 0098 DB78     		ldrb	r3, [r3, #3]
 350 009a DBB2     		uxtb	r3, r3
 351 009c 072B     		cmp	r3, #7
 352 009e 02D9     		bls	.L12
 315:Generated_Source\PSoC5/RTC_INT.c ****                 {
 316:Generated_Source\PSoC5/RTC_INT.c ****                     /* start new week */
 317:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfWeek = 1u;
 353              		.loc 1 317 0
 354 00a0 794B     		ldr	r3, .L48
 355 00a2 0122     		movs	r2, #1
 356 00a4 DA70     		strb	r2, [r3, #3]
 357              	.L12:
 318:Generated_Source\PSoC5/RTC_INT.c ****                 }
 319:Generated_Source\PSoC5/RTC_INT.c **** 
 320:Generated_Source\PSoC5/RTC_INT.c ****                 /* Day of month roll over.
 321:Generated_Source\PSoC5/RTC_INT.c ****                 * Check if day of month greater than 29 in February of leap year or
 322:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than 28 NOT in February of NON leap year or
 323:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than it should be in every month in non leap year
 324:Generated_Source\PSoC5/RTC_INT.c ****                 */
 325:Generated_Source\PSoC5/RTC_INT.c ****                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 358              		.loc 1 325 0
 359 00a6 794B     		ldr	r3, .L48+4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 13


 360 00a8 1B78     		ldrb	r3, [r3]
 361 00aa DBB2     		uxtb	r3, r3
 362 00ac 03F00203 		and	r3, r3, #2
 363 00b0 002B     		cmp	r3, #0
 364 00b2 11D0     		beq	.L13
 326:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 365              		.loc 1 326 0 discriminator 1
 366 00b4 744B     		ldr	r3, .L48
 367 00b6 1B7A     		ldrb	r3, [r3, #8]
 368 00b8 DBB2     		uxtb	r3, r3
 325:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 369              		.loc 1 325 0 discriminator 1
 370 00ba 022B     		cmp	r3, #2
 371 00bc 0CD1     		bne	.L13
 327:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 372              		.loc 1 327 0
 373 00be 724B     		ldr	r3, .L48
 374 00c0 1B79     		ldrb	r3, [r3, #4]
 375 00c2 DBB2     		uxtb	r3, r3
 376 00c4 1946     		mov	r1, r3
 328:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 377              		.loc 1 328 0
 378 00c6 704B     		ldr	r3, .L48
 379 00c8 1B7A     		ldrb	r3, [r3, #8]
 380 00ca DBB2     		uxtb	r3, r3
 381 00cc 013B     		subs	r3, r3, #1
 382 00ce 704A     		ldr	r2, .L48+8
 383 00d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 384 00d2 0133     		adds	r3, r3, #1
 326:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 385              		.loc 1 326 0
 386 00d4 9942     		cmp	r1, r3
 387 00d6 2AD8     		bhi	.L14
 388              	.L13:
 329:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 389              		.loc 1 329 0
 390 00d8 6C4B     		ldr	r3, .L48+4
 391 00da 1B78     		ldrb	r3, [r3]
 392 00dc DBB2     		uxtb	r3, r3
 393 00de 03F00203 		and	r3, r3, #2
 328:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 394              		.loc 1 328 0
 395 00e2 002B     		cmp	r3, #0
 396 00e4 0FD0     		beq	.L15
 330:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 397              		.loc 1 330 0
 398 00e6 684B     		ldr	r3, .L48
 399 00e8 1B7A     		ldrb	r3, [r3, #8]
 400 00ea DBB2     		uxtb	r3, r3
 329:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 401              		.loc 1 329 0
 402 00ec 022B     		cmp	r3, #2
 403 00ee 0AD0     		beq	.L15
 331:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 404              		.loc 1 331 0
 405 00f0 654B     		ldr	r3, .L48
 406 00f2 1B79     		ldrb	r3, [r3, #4]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 14


 407 00f4 DAB2     		uxtb	r2, r3
 332:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 408              		.loc 1 332 0
 409 00f6 644B     		ldr	r3, .L48
 410 00f8 1B7A     		ldrb	r3, [r3, #8]
 411 00fa DBB2     		uxtb	r3, r3
 412 00fc 013B     		subs	r3, r3, #1
 413 00fe 6449     		ldr	r1, .L48+8
 414 0100 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 330:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 415              		.loc 1 330 0
 416 0102 9A42     		cmp	r2, r3
 417 0104 13D8     		bhi	.L14
 418              	.L15:
 333:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 419              		.loc 1 333 0
 420 0106 614B     		ldr	r3, .L48+4
 421 0108 1B78     		ldrb	r3, [r3]
 422 010a DBB2     		uxtb	r3, r3
 423 010c 03F00203 		and	r3, r3, #2
 332:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 424              		.loc 1 332 0
 425 0110 002B     		cmp	r3, #0
 426 0112 40F0F480 		bne	.L16
 334:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 427              		.loc 1 334 0
 428 0116 5C4B     		ldr	r3, .L48
 429 0118 1B79     		ldrb	r3, [r3, #4]
 430 011a DAB2     		uxtb	r2, r3
 335:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 431              		.loc 1 335 0
 432 011c 5A4B     		ldr	r3, .L48
 433 011e 1B7A     		ldrb	r3, [r3, #8]
 434 0120 DBB2     		uxtb	r3, r3
 435 0122 013B     		subs	r3, r3, #1
 436 0124 5A49     		ldr	r1, .L48+8
 437 0126 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 333:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 438              		.loc 1 333 0
 439 0128 9A42     		cmp	r2, r3
 440 012a 40F2E880 		bls	.L16
 441              	.L14:
 336:Generated_Source\PSoC5/RTC_INT.c ****                 {
 337:Generated_Source\PSoC5/RTC_INT.c ****                     /* Inc Month */
 338:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.Month++;
 442              		.loc 1 338 0
 443 012e 564B     		ldr	r3, .L48
 444 0130 1B7A     		ldrb	r3, [r3, #8]
 445 0132 DBB2     		uxtb	r3, r3
 446 0134 0133     		adds	r3, r3, #1
 447 0136 DAB2     		uxtb	r2, r3
 448 0138 534B     		ldr	r3, .L48
 449 013a 1A72     		strb	r2, [r3, #8]
 339:Generated_Source\PSoC5/RTC_INT.c **** 
 340:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set first day of month */
 341:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfMonth = 1u;
 450              		.loc 1 341 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 15


 451 013c 524B     		ldr	r3, .L48
 452 013e 0122     		movs	r2, #1
 453 0140 1A71     		strb	r2, [r3, #4]
 342:Generated_Source\PSoC5/RTC_INT.c **** 
 343:Generated_Source\PSoC5/RTC_INT.c ****                     /* Year roll over */
 344:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 454              		.loc 1 344 0
 455 0142 514B     		ldr	r3, .L48
 456 0144 1B7A     		ldrb	r3, [r3, #8]
 457 0146 DBB2     		uxtb	r3, r3
 458 0148 0C2B     		cmp	r3, #12
 459 014a 40F28580 		bls	.L17
 345:Generated_Source\PSoC5/RTC_INT.c ****                     {
 346:Generated_Source\PSoC5/RTC_INT.c ****                         /* Inc Year */
 347:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Year++;
 460              		.loc 1 347 0
 461 014e 4E4B     		ldr	r3, .L48
 462 0150 5B89     		ldrh	r3, [r3, #10]	@ movhi
 463 0152 9BB2     		uxth	r3, r3
 464 0154 0133     		adds	r3, r3, #1
 465 0156 9AB2     		uxth	r2, r3
 466 0158 4B4B     		ldr	r3, .L48
 467 015a 5A81     		strh	r2, [r3, #10]	@ movhi
 348:Generated_Source\PSoC5/RTC_INT.c **** 
 349:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first month of year */
 350:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Month = 1u;
 468              		.loc 1 350 0
 469 015c 4A4B     		ldr	r3, .L48
 470 015e 0122     		movs	r2, #1
 471 0160 1A72     		strb	r2, [r3, #8]
 351:Generated_Source\PSoC5/RTC_INT.c **** 
 352:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first day of year */
 353:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.DayOfYear = 1u;
 472              		.loc 1 353 0
 473 0162 494B     		ldr	r3, .L48
 474 0164 0122     		movs	r2, #1
 475 0166 DA80     		strh	r2, [r3, #6]	@ movhi
 354:Generated_Source\PSoC5/RTC_INT.c **** 
 355:Generated_Source\PSoC5/RTC_INT.c ****                         /* Is this year leap */
 356:Generated_Source\PSoC5/RTC_INT.c ****                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 476              		.loc 1 356 0
 477 0168 474B     		ldr	r3, .L48
 478 016a 5B89     		ldrh	r3, [r3, #10]	@ movhi
 479 016c 9BB2     		uxth	r3, r3
 480 016e 494A     		ldr	r2, .L48+12
 481 0170 A2FB0312 		umull	r1, r2, r2, r3
 482 0174 D209     		lsrs	r2, r2, #7
 483 0176 4FF4C871 		mov	r1, #400
 484 017a 01FB02F2 		mul	r2, r1, r2
 485 017e 9B1A     		subs	r3, r3, r2
 486 0180 9BB2     		uxth	r3, r3
 487 0182 002B     		cmp	r3, #0
 488 0184 15D0     		beq	.L18
 489              		.loc 1 356 0 is_stmt 0 discriminator 1
 490 0186 404B     		ldr	r3, .L48
 491 0188 5B89     		ldrh	r3, [r3, #10]	@ movhi
 492 018a 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 16


 493 018c 03F00303 		and	r3, r3, #3
 494 0190 9BB2     		uxth	r3, r3
 495 0192 002B     		cmp	r3, #0
 496 0194 16D1     		bne	.L19
 497              		.loc 1 356 0 discriminator 2
 498 0196 3C4B     		ldr	r3, .L48
 499 0198 5B89     		ldrh	r3, [r3, #10]	@ movhi
 500 019a 9BB2     		uxth	r3, r3
 501 019c 3D4A     		ldr	r2, .L48+12
 502 019e A2FB0312 		umull	r1, r2, r2, r3
 503 01a2 5209     		lsrs	r2, r2, #5
 504 01a4 6421     		movs	r1, #100
 505 01a6 01FB02F2 		mul	r2, r1, r2
 506 01aa 9B1A     		subs	r3, r3, r2
 507 01ac 9BB2     		uxth	r3, r3
 508 01ae 002B     		cmp	r3, #0
 509 01b0 08D0     		beq	.L19
 510              	.L18:
 357:Generated_Source\PSoC5/RTC_INT.c ****                         {
 358:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set leap year flag */
 359:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_LY;
 511              		.loc 1 359 0 is_stmt 1
 512 01b2 364B     		ldr	r3, .L48+4
 513 01b4 1B78     		ldrb	r3, [r3]
 514 01b6 DBB2     		uxtb	r3, r3
 515 01b8 43F00203 		orr	r3, r3, #2
 516 01bc DAB2     		uxtb	r2, r3
 517 01be 334B     		ldr	r3, .L48+4
 518 01c0 1A70     		strb	r2, [r3]
 519 01c2 07E0     		b	.L20
 520              	.L19:
 360:Generated_Source\PSoC5/RTC_INT.c ****                         }
 361:Generated_Source\PSoC5/RTC_INT.c ****                         else    /* not leap year */
 362:Generated_Source\PSoC5/RTC_INT.c ****                         {
 363:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear leap year */
 364:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 521              		.loc 1 364 0
 522 01c4 314B     		ldr	r3, .L48+4
 523 01c6 1B78     		ldrb	r3, [r3]
 524 01c8 DBB2     		uxtb	r3, r3
 525 01ca 23F00203 		bic	r3, r3, #2
 526 01ce DAB2     		uxtb	r2, r3
 527 01d0 2E4B     		ldr	r3, .L48+4
 528 01d2 1A70     		strb	r2, [r3]
 529              	.L20:
 365:Generated_Source\PSoC5/RTC_INT.c ****                         }
 366:Generated_Source\PSoC5/RTC_INT.c **** 
 367:Generated_Source\PSoC5/RTC_INT.c ****                         /* Alarm YEAR */
 368:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 530              		.loc 1 368 0
 531 01d4 304B     		ldr	r3, .L48+16
 532 01d6 1B78     		ldrb	r3, [r3]
 533 01d8 DBB2     		uxtb	r3, r3
 534 01da 5BB2     		sxtb	r3, r3
 535 01dc 002B     		cmp	r3, #0
 536 01de 18DA     		bge	.L21
 369:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_ALARM_YEAR_MASK))
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 17


 370:Generated_Source\PSoC5/RTC_INT.c ****                         {
 371:Generated_Source\PSoC5/RTC_INT.c ****                             /* Years match */
 372:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 537              		.loc 1 372 0
 538 01e0 2E4B     		ldr	r3, .L48+20
 539 01e2 5B89     		ldrh	r3, [r3, #10]	@ movhi
 540 01e4 9AB2     		uxth	r2, r3
 541 01e6 284B     		ldr	r3, .L48
 542 01e8 5B89     		ldrh	r3, [r3, #10]	@ movhi
 543 01ea 9BB2     		uxth	r3, r3
 544 01ec 9A42     		cmp	r2, r3
 545 01ee 08D1     		bne	.L22
 373:Generated_Source\PSoC5/RTC_INT.c ****                             {
 374:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Rise year alarm */
 375:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 546              		.loc 1 375 0
 547 01f0 2B4B     		ldr	r3, .L48+24
 548 01f2 1B78     		ldrb	r3, [r3]
 549 01f4 DBB2     		uxtb	r3, r3
 550 01f6 63F07F03 		orn	r3, r3, #127
 551 01fa DAB2     		uxtb	r2, r3
 552 01fc 284B     		ldr	r3, .L48+24
 553 01fe 1A70     		strb	r2, [r3]
 554 0200 07E0     		b	.L21
 555              	.L22:
 376:Generated_Source\PSoC5/RTC_INT.c ****                             }
 377:Generated_Source\PSoC5/RTC_INT.c ****                             else    /* Years do not match */
 378:Generated_Source\PSoC5/RTC_INT.c ****                             {
 379:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Clear year alarm */
 380:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 556              		.loc 1 380 0
 557 0202 274B     		ldr	r3, .L48+24
 558 0204 1B78     		ldrb	r3, [r3]
 559 0206 DBB2     		uxtb	r3, r3
 560 0208 03F07F03 		and	r3, r3, #127
 561 020c DAB2     		uxtb	r2, r3
 562 020e 244B     		ldr	r3, .L48+24
 563 0210 1A70     		strb	r2, [r3]
 564              	.L21:
 381:Generated_Source\PSoC5/RTC_INT.c ****                             }
 382:Generated_Source\PSoC5/RTC_INT.c ****                         } /* do not alarm year */
 383:Generated_Source\PSoC5/RTC_INT.c **** 
 384:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set Alarm flag event */
 385:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_tmp = RTC_alarmCfgMask;
 565              		.loc 1 385 0
 566 0212 214B     		ldr	r3, .L48+16
 567 0214 1B78     		ldrb	r3, [r3]
 568 0216 FB71     		strb	r3, [r7, #7]
 386:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_SET_ALARM(RTC_tmp,
 569              		.loc 1 386 0
 570 0218 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 571 021a 002B     		cmp	r3, #0
 572 021c 13D0     		beq	.L23
 573              		.loc 1 386 0 is_stmt 0 discriminator 1
 574 021e 204B     		ldr	r3, .L48+24
 575 0220 1B78     		ldrb	r3, [r3]
 576 0222 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 18


 577 0224 FB79     		ldrb	r3, [r7, #7]
 578 0226 1340     		ands	r3, r3, r2
 579 0228 DBB2     		uxtb	r3, r3
 580 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 581 022c 9A42     		cmp	r2, r3
 582 022e 0AD1     		bne	.L23
 583              		.loc 1 386 0 discriminator 2
 584 0230 164B     		ldr	r3, .L48+4
 585 0232 1B78     		ldrb	r3, [r3]
 586 0234 DBB2     		uxtb	r3, r3
 587 0236 43F00803 		orr	r3, r3, #8
 588 023a DAB2     		uxtb	r2, r3
 589 023c 134B     		ldr	r3, .L48+4
 590 023e 1A70     		strb	r2, [r3]
 591 0240 174B     		ldr	r3, .L48+24
 592 0242 0022     		movs	r2, #0
 593 0244 1A70     		strb	r2, [r3]
 594              	.L23:
 387:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_alarmCurStatus,
 388:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_statusDateTime);
 389:Generated_Source\PSoC5/RTC_INT.c **** 
 390:Generated_Source\PSoC5/RTC_INT.c ****                         /* Every Year */
 391:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 595              		.loc 1 391 0 is_stmt 1
 596 0246 174B     		ldr	r3, .L48+28
 597 0248 1B78     		ldrb	r3, [r3]
 598 024a DBB2     		uxtb	r3, r3
 599 024c 03F04003 		and	r3, r3, #64
 600 0250 002B     		cmp	r3, #0
 601 0252 01D0     		beq	.L17
 392:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_INTERVAL_YEAR_MASK))
 393:Generated_Source\PSoC5/RTC_INT.c ****                         {
 394:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_EveryYearHandler();
 602              		.loc 1 394 0
 603 0254 FFF7FEFF 		bl	RTC_EveryYearHandler
 604              	.L17:
 395:Generated_Source\PSoC5/RTC_INT.c ****                         }
 396:Generated_Source\PSoC5/RTC_INT.c **** 
 397:Generated_Source\PSoC5/RTC_INT.c ****                     } /* Month > 12 */
 398:Generated_Source\PSoC5/RTC_INT.c **** 
 399:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 400:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 605              		.loc 1 400 0
 606 0258 0F4B     		ldr	r3, .L48+16
 607 025a 1B78     		ldrb	r3, [r3]
 608 025c DBB2     		uxtb	r3, r3
 609 025e 03F04003 		and	r3, r3, #64
 610 0262 002B     		cmp	r3, #0
 611 0264 28D0     		beq	.L24
 401:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 402:Generated_Source\PSoC5/RTC_INT.c ****                     {
 403:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 612              		.loc 1 403 0
 613 0266 0D4B     		ldr	r3, .L48+20
 614 0268 1B7A     		ldrb	r3, [r3, #8]
 615 026a DAB2     		uxtb	r2, r3
 616 026c 064B     		ldr	r3, .L48
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 19


 617 026e 1B7A     		ldrb	r3, [r3, #8]
 618 0270 DBB2     		uxtb	r3, r3
 619 0272 9A42     		cmp	r2, r3
 620 0274 18D1     		bne	.L25
 404:Generated_Source\PSoC5/RTC_INT.c ****                         {
 405:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set month alarm */
 406:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 621              		.loc 1 406 0
 622 0276 0A4B     		ldr	r3, .L48+24
 623 0278 1B78     		ldrb	r3, [r3]
 624 027a DBB2     		uxtb	r3, r3
 625 027c 43F04003 		orr	r3, r3, #64
 626 0280 DAB2     		uxtb	r2, r3
 627 0282 074B     		ldr	r3, .L48+24
 628 0284 1A70     		strb	r2, [r3]
 629 0286 17E0     		b	.L24
 630              	.L49:
 631              		.align	2
 632              	.L48:
 633 0288 00000000 		.word	RTC_currentTimeDate
 634 028c 00000000 		.word	RTC_statusDateTime
 635 0290 00000000 		.word	RTC_daysInMonths
 636 0294 1F85EB51 		.word	1374389535
 637 0298 00000000 		.word	RTC_alarmCfgMask
 638 029c 00000000 		.word	RTC_alarmCfgTimeDate
 639 02a0 00000000 		.word	RTC_alarmCurStatus
 640 02a4 00000000 		.word	RTC_intervalCfgMask
 641              	.L25:
 407:Generated_Source\PSoC5/RTC_INT.c ****                         }
 408:Generated_Source\PSoC5/RTC_INT.c ****                         else
 409:Generated_Source\PSoC5/RTC_INT.c ****                         {
 410:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear month alarm */
 411:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 642              		.loc 1 411 0
 643 02a8 964B     		ldr	r3, .L50
 644 02aa 1B78     		ldrb	r3, [r3]
 645 02ac DBB2     		uxtb	r3, r3
 646 02ae 23F04003 		bic	r3, r3, #64
 647 02b2 DAB2     		uxtb	r2, r3
 648 02b4 934B     		ldr	r3, .L50
 649 02b6 1A70     		strb	r2, [r3]
 650              	.L24:
 412:Generated_Source\PSoC5/RTC_INT.c ****                         }
 413:Generated_Source\PSoC5/RTC_INT.c ****                     }   /* Month alarm is masked */
 414:Generated_Source\PSoC5/RTC_INT.c **** 
 415:Generated_Source\PSoC5/RTC_INT.c ****                     #if (1u == RTC_DST_FUNC_ENABLE)
 416:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 417:Generated_Source\PSoC5/RTC_INT.c ****                         {
 418:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus |= RTC_DST_MONTH;
 419:Generated_Source\PSoC5/RTC_INT.c ****                         }
 420:Generated_Source\PSoC5/RTC_INT.c ****                         else
 421:Generated_Source\PSoC5/RTC_INT.c ****                         {
 422:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 423:Generated_Source\PSoC5/RTC_INT.c ****                         }
 424:Generated_Source\PSoC5/RTC_INT.c **** 
 425:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStart.Month == RTC_currentTimeDate.Month)
 426:Generated_Source\PSoC5/RTC_INT.c ****                         {
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 20


 427:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus |= RTC_DST_MONTH;
 428:Generated_Source\PSoC5/RTC_INT.c ****                         }
 429:Generated_Source\PSoC5/RTC_INT.c ****                         else
 430:Generated_Source\PSoC5/RTC_INT.c ****                         {
 431:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus &= (uint8)(~RTC_DST_MONTH);
 432:Generated_Source\PSoC5/RTC_INT.c ****                         }
 433:Generated_Source\PSoC5/RTC_INT.c ****                     #endif /* 1u == RTC_DST_FUNC_ENABLE */
 434:Generated_Source\PSoC5/RTC_INT.c **** 
 435:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 436:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 651              		.loc 1 436 0
 652 02b8 934B     		ldr	r3, .L50+4
 653 02ba 1B78     		ldrb	r3, [r3]
 654 02bc FB71     		strb	r3, [r7, #7]
 437:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 655              		.loc 1 437 0
 656 02be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 657 02c0 002B     		cmp	r3, #0
 658 02c2 13D0     		beq	.L26
 659              		.loc 1 437 0 is_stmt 0 discriminator 1
 660 02c4 8F4B     		ldr	r3, .L50
 661 02c6 1B78     		ldrb	r3, [r3]
 662 02c8 DAB2     		uxtb	r2, r3
 663 02ca FB79     		ldrb	r3, [r7, #7]
 664 02cc 1340     		ands	r3, r3, r2
 665 02ce DBB2     		uxtb	r3, r3
 666 02d0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 667 02d2 9A42     		cmp	r2, r3
 668 02d4 0AD1     		bne	.L26
 669              		.loc 1 437 0 discriminator 2
 670 02d6 8D4B     		ldr	r3, .L50+8
 671 02d8 1B78     		ldrb	r3, [r3]
 672 02da DBB2     		uxtb	r3, r3
 673 02dc 43F00803 		orr	r3, r3, #8
 674 02e0 DAB2     		uxtb	r2, r3
 675 02e2 8A4B     		ldr	r3, .L50+8
 676 02e4 1A70     		strb	r2, [r3]
 677 02e6 874B     		ldr	r3, .L50
 678 02e8 0022     		movs	r2, #0
 679 02ea 1A70     		strb	r2, [r3]
 680              	.L26:
 438:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 439:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 440:Generated_Source\PSoC5/RTC_INT.c **** 
 441:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Month */
 442:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 681              		.loc 1 442 0 is_stmt 1
 682 02ec 884B     		ldr	r3, .L50+12
 683 02ee 1B78     		ldrb	r3, [r3]
 684 02f0 DBB2     		uxtb	r3, r3
 685 02f2 03F02003 		and	r3, r3, #32
 686 02f6 002B     		cmp	r3, #0
 687 02f8 01D0     		beq	.L16
 443:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_MONTH_MASK))
 444:Generated_Source\PSoC5/RTC_INT.c ****                     {
 445:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_EveryMonthHandler();
 688              		.loc 1 445 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 21


 689 02fa FFF7FEFF 		bl	RTC_EveryMonthHandler
 690              	.L16:
 446:Generated_Source\PSoC5/RTC_INT.c ****                     }
 447:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day roll over */
 448:Generated_Source\PSoC5/RTC_INT.c **** 
 449:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFWEEK */
 450:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 691              		.loc 1 450 0
 692 02fe 824B     		ldr	r3, .L50+4
 693 0300 1B78     		ldrb	r3, [r3]
 694 0302 DBB2     		uxtb	r3, r3
 695 0304 03F00803 		and	r3, r3, #8
 696 0308 002B     		cmp	r3, #0
 697 030a 18D0     		beq	.L27
 451:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFWEEK_MASK))
 452:Generated_Source\PSoC5/RTC_INT.c ****                 {
 453:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 698              		.loc 1 453 0
 699 030c 814B     		ldr	r3, .L50+16
 700 030e DB78     		ldrb	r3, [r3, #3]
 701 0310 DAB2     		uxtb	r2, r3
 702 0312 814B     		ldr	r3, .L50+20
 703 0314 DB78     		ldrb	r3, [r3, #3]
 704 0316 DBB2     		uxtb	r3, r3
 705 0318 9A42     		cmp	r2, r3
 706 031a 08D1     		bne	.L28
 454:Generated_Source\PSoC5/RTC_INT.c ****                     {
 455:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of week alarm */
 456:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 707              		.loc 1 456 0
 708 031c 794B     		ldr	r3, .L50
 709 031e 1B78     		ldrb	r3, [r3]
 710 0320 DBB2     		uxtb	r3, r3
 711 0322 43F00803 		orr	r3, r3, #8
 712 0326 DAB2     		uxtb	r2, r3
 713 0328 764B     		ldr	r3, .L50
 714 032a 1A70     		strb	r2, [r3]
 715 032c 07E0     		b	.L27
 716              	.L28:
 457:Generated_Source\PSoC5/RTC_INT.c ****                     }
 458:Generated_Source\PSoC5/RTC_INT.c ****                     else
 459:Generated_Source\PSoC5/RTC_INT.c ****                     {
 460:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of week alarm */
 461:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 717              		.loc 1 461 0
 718 032e 754B     		ldr	r3, .L50
 719 0330 1B78     		ldrb	r3, [r3]
 720 0332 DBB2     		uxtb	r3, r3
 721 0334 23F00803 		bic	r3, r3, #8
 722 0338 DAB2     		uxtb	r2, r3
 723 033a 724B     		ldr	r3, .L50
 724 033c 1A70     		strb	r2, [r3]
 725              	.L27:
 462:Generated_Source\PSoC5/RTC_INT.c ****                     }
 463:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of week alarm is masked */
 464:Generated_Source\PSoC5/RTC_INT.c **** 
 465:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFYEAR */
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 22


 466:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 726              		.loc 1 466 0
 727 033e 724B     		ldr	r3, .L50+4
 728 0340 1B78     		ldrb	r3, [r3]
 729 0342 DBB2     		uxtb	r3, r3
 730 0344 03F02003 		and	r3, r3, #32
 731 0348 002B     		cmp	r3, #0
 732 034a 18D0     		beq	.L29
 467:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFYEAR_MASK))
 468:Generated_Source\PSoC5/RTC_INT.c ****                 {
 469:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 733              		.loc 1 469 0
 734 034c 714B     		ldr	r3, .L50+16
 735 034e DB88     		ldrh	r3, [r3, #6]	@ movhi
 736 0350 9AB2     		uxth	r2, r3
 737 0352 714B     		ldr	r3, .L50+20
 738 0354 DB88     		ldrh	r3, [r3, #6]	@ movhi
 739 0356 9BB2     		uxth	r3, r3
 740 0358 9A42     		cmp	r2, r3
 741 035a 08D1     		bne	.L30
 470:Generated_Source\PSoC5/RTC_INT.c ****                     {
 471:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of year alarm */
 472:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 742              		.loc 1 472 0
 743 035c 694B     		ldr	r3, .L50
 744 035e 1B78     		ldrb	r3, [r3]
 745 0360 DBB2     		uxtb	r3, r3
 746 0362 43F02003 		orr	r3, r3, #32
 747 0366 DAB2     		uxtb	r2, r3
 748 0368 664B     		ldr	r3, .L50
 749 036a 1A70     		strb	r2, [r3]
 750 036c 07E0     		b	.L29
 751              	.L30:
 473:Generated_Source\PSoC5/RTC_INT.c ****                     }
 474:Generated_Source\PSoC5/RTC_INT.c ****                     else
 475:Generated_Source\PSoC5/RTC_INT.c ****                     {
 476:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of year alarm */
 477:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 752              		.loc 1 477 0
 753 036e 654B     		ldr	r3, .L50
 754 0370 1B78     		ldrb	r3, [r3]
 755 0372 DBB2     		uxtb	r3, r3
 756 0374 23F02003 		bic	r3, r3, #32
 757 0378 DAB2     		uxtb	r2, r3
 758 037a 624B     		ldr	r3, .L50
 759 037c 1A70     		strb	r2, [r3]
 760              	.L29:
 478:Generated_Source\PSoC5/RTC_INT.c ****                     }
 479:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of year alarm is masked */
 480:Generated_Source\PSoC5/RTC_INT.c **** 
 481:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFMONTH */
 482:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 761              		.loc 1 482 0
 762 037e 624B     		ldr	r3, .L50+4
 763 0380 1B78     		ldrb	r3, [r3]
 764 0382 DBB2     		uxtb	r3, r3
 765 0384 03F01003 		and	r3, r3, #16
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 23


 766 0388 002B     		cmp	r3, #0
 767 038a 18D0     		beq	.L31
 483:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_ALARM_DAYOFMONTH_MASK))
 484:Generated_Source\PSoC5/RTC_INT.c ****                 {
 485:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 768              		.loc 1 485 0
 769 038c 614B     		ldr	r3, .L50+16
 770 038e 1B79     		ldrb	r3, [r3, #4]
 771 0390 DAB2     		uxtb	r2, r3
 772 0392 614B     		ldr	r3, .L50+20
 773 0394 1B79     		ldrb	r3, [r3, #4]
 774 0396 DBB2     		uxtb	r3, r3
 775 0398 9A42     		cmp	r2, r3
 776 039a 08D1     		bne	.L32
 486:Generated_Source\PSoC5/RTC_INT.c ****                     {
 487:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of month alarm */
 488:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 777              		.loc 1 488 0
 778 039c 594B     		ldr	r3, .L50
 779 039e 1B78     		ldrb	r3, [r3]
 780 03a0 DBB2     		uxtb	r3, r3
 781 03a2 43F01003 		orr	r3, r3, #16
 782 03a6 DAB2     		uxtb	r2, r3
 783 03a8 564B     		ldr	r3, .L50
 784 03aa 1A70     		strb	r2, [r3]
 785 03ac 07E0     		b	.L31
 786              	.L32:
 489:Generated_Source\PSoC5/RTC_INT.c ****                     }
 490:Generated_Source\PSoC5/RTC_INT.c ****                     else
 491:Generated_Source\PSoC5/RTC_INT.c ****                     {
 492:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of month alarm */
 493:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 787              		.loc 1 493 0
 788 03ae 554B     		ldr	r3, .L50
 789 03b0 1B78     		ldrb	r3, [r3]
 790 03b2 DBB2     		uxtb	r3, r3
 791 03b4 23F01003 		bic	r3, r3, #16
 792 03b8 DAB2     		uxtb	r2, r3
 793 03ba 524B     		ldr	r3, .L50
 794 03bc 1A70     		strb	r2, [r3]
 795              	.L31:
 494:Generated_Source\PSoC5/RTC_INT.c ****                     }
 495:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of month alarm is masked */
 496:Generated_Source\PSoC5/RTC_INT.c **** 
 497:Generated_Source\PSoC5/RTC_INT.c ****                 #if (1u == RTC_DST_FUNC_ENABLE)
 498:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStop.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 499:Generated_Source\PSoC5/RTC_INT.c ****                     {
 500:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 501:Generated_Source\PSoC5/RTC_INT.c ****                     }
 502:Generated_Source\PSoC5/RTC_INT.c ****                     else
 503:Generated_Source\PSoC5/RTC_INT.c ****                     {
 504:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 505:Generated_Source\PSoC5/RTC_INT.c ****                     }
 506:Generated_Source\PSoC5/RTC_INT.c **** 
 507:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStart.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 508:Generated_Source\PSoC5/RTC_INT.c ****                     {
 509:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus |= RTC_DST_DAYOFMONTH;
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 24


 510:Generated_Source\PSoC5/RTC_INT.c ****                     }
 511:Generated_Source\PSoC5/RTC_INT.c ****                     else
 512:Generated_Source\PSoC5/RTC_INT.c ****                     {
 513:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 514:Generated_Source\PSoC5/RTC_INT.c ****                     }
 515:Generated_Source\PSoC5/RTC_INT.c ****                 #endif /* 1u == RTC_DST_FUNC_ENABLE */
 516:Generated_Source\PSoC5/RTC_INT.c **** 
 517:Generated_Source\PSoC5/RTC_INT.c ****                 /* Set Alarm flag event */
 518:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_tmp = RTC_alarmCfgMask;
 796              		.loc 1 518 0
 797 03be 524B     		ldr	r3, .L50+4
 798 03c0 1B78     		ldrb	r3, [r3]
 799 03c2 FB71     		strb	r3, [r7, #7]
 519:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_SET_ALARM(RTC_tmp,
 800              		.loc 1 519 0
 801 03c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 802 03c6 002B     		cmp	r3, #0
 803 03c8 13D0     		beq	.L33
 804              		.loc 1 519 0 is_stmt 0 discriminator 1
 805 03ca 4E4B     		ldr	r3, .L50
 806 03cc 1B78     		ldrb	r3, [r3]
 807 03ce DAB2     		uxtb	r2, r3
 808 03d0 FB79     		ldrb	r3, [r7, #7]
 809 03d2 1340     		ands	r3, r3, r2
 810 03d4 DBB2     		uxtb	r3, r3
 811 03d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 812 03d8 9A42     		cmp	r2, r3
 813 03da 0AD1     		bne	.L33
 814              		.loc 1 519 0 discriminator 2
 815 03dc 4B4B     		ldr	r3, .L50+8
 816 03de 1B78     		ldrb	r3, [r3]
 817 03e0 DBB2     		uxtb	r3, r3
 818 03e2 43F00803 		orr	r3, r3, #8
 819 03e6 DAB2     		uxtb	r2, r3
 820 03e8 484B     		ldr	r3, .L50+8
 821 03ea 1A70     		strb	r2, [r3]
 822 03ec 454B     		ldr	r3, .L50
 823 03ee 0022     		movs	r2, #0
 824 03f0 1A70     		strb	r2, [r3]
 825              	.L33:
 520:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_alarmCurStatus,
 521:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_statusDateTime);
 522:Generated_Source\PSoC5/RTC_INT.c **** 
 523:Generated_Source\PSoC5/RTC_INT.c ****                 /* Every Day */
 524:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 826              		.loc 1 524 0 is_stmt 1
 827 03f2 474B     		ldr	r3, .L50+12
 828 03f4 1B78     		ldrb	r3, [r3]
 829 03f6 DBB2     		uxtb	r3, r3
 830 03f8 03F00803 		and	r3, r3, #8
 831 03fc 002B     		cmp	r3, #0
 832 03fe 01D0     		beq	.L34
 525:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_INTERVAL_DAY_MASK))
 526:Generated_Source\PSoC5/RTC_INT.c ****                 {
 527:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_EveryDayHandler();
 833              		.loc 1 527 0
 834 0400 FFF7FEFF 		bl	RTC_EveryDayHandler
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 25


 835              	.L34:
 528:Generated_Source\PSoC5/RTC_INT.c ****                 }
 529:Generated_Source\PSoC5/RTC_INT.c **** 
 530:Generated_Source\PSoC5/RTC_INT.c ****                 if(1u == RTC_currentTimeDate.DayOfWeek)
 836              		.loc 1 530 0
 837 0404 444B     		ldr	r3, .L50+20
 838 0406 DB78     		ldrb	r3, [r3, #3]
 839 0408 DBB2     		uxtb	r3, r3
 840 040a 012B     		cmp	r3, #1
 841 040c 08D1     		bne	.L11
 531:Generated_Source\PSoC5/RTC_INT.c ****                 {
 532:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Week */
 533:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 842              		.loc 1 533 0
 843 040e 404B     		ldr	r3, .L50+12
 844 0410 1B78     		ldrb	r3, [r3]
 845 0412 DBB2     		uxtb	r3, r3
 846 0414 03F01003 		and	r3, r3, #16
 847 0418 002B     		cmp	r3, #0
 848 041a 01D0     		beq	.L11
 534:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_WEEK_MASK))
 535:Generated_Source\PSoC5/RTC_INT.c ****                     {
 536:Generated_Source\PSoC5/RTC_INT.c ****                        RTC_EveryWeekHandler();
 849              		.loc 1 536 0
 850 041c FFF7FEFF 		bl	RTC_EveryWeekHandler
 851              	.L11:
 537:Generated_Source\PSoC5/RTC_INT.c ****                     }
 538:Generated_Source\PSoC5/RTC_INT.c ****                 }
 539:Generated_Source\PSoC5/RTC_INT.c **** 
 540:Generated_Source\PSoC5/RTC_INT.c ****             } /* End of day roll over */
 541:Generated_Source\PSoC5/RTC_INT.c **** 
 542:Generated_Source\PSoC5/RTC_INT.c ****             /* Status set PM/AM flag */
 543:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 852              		.loc 1 543 0
 853 0420 3D4B     		ldr	r3, .L50+20
 854 0422 9B78     		ldrb	r3, [r3, #2]
 855 0424 DBB2     		uxtb	r3, r3
 856 0426 0B2B     		cmp	r3, #11
 857 0428 08D8     		bhi	.L35
 544:Generated_Source\PSoC5/RTC_INT.c ****             {
 545:Generated_Source\PSoC5/RTC_INT.c ****                 /* AM Hour 00:00-11:59, flag zero */
 546:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 858              		.loc 1 546 0
 859 042a 384B     		ldr	r3, .L50+8
 860 042c 1B78     		ldrb	r3, [r3]
 861 042e DBB2     		uxtb	r3, r3
 862 0430 23F00403 		bic	r3, r3, #4
 863 0434 DAB2     		uxtb	r2, r3
 864 0436 354B     		ldr	r3, .L50+8
 865 0438 1A70     		strb	r2, [r3]
 866 043a 07E0     		b	.L36
 867              	.L35:
 547:Generated_Source\PSoC5/RTC_INT.c ****             }
 548:Generated_Source\PSoC5/RTC_INT.c ****             else
 549:Generated_Source\PSoC5/RTC_INT.c ****             {
 550:Generated_Source\PSoC5/RTC_INT.c ****                 /* PM Hour 12:00-23:59, flag set */
 551:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime |= RTC_STATUS_AM_PM;
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 26


 868              		.loc 1 551 0
 869 043c 334B     		ldr	r3, .L50+8
 870 043e 1B78     		ldrb	r3, [r3]
 871 0440 DBB2     		uxtb	r3, r3
 872 0442 43F00403 		orr	r3, r3, #4
 873 0446 DAB2     		uxtb	r2, r3
 874 0448 304B     		ldr	r3, .L50+8
 875 044a 1A70     		strb	r2, [r3]
 876              	.L36:
 552:Generated_Source\PSoC5/RTC_INT.c ****             }
 553:Generated_Source\PSoC5/RTC_INT.c **** 
 554:Generated_Source\PSoC5/RTC_INT.c ****             #if (1u == RTC_DST_FUNC_ENABLE)
 555:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStop.Hour == RTC_currentTimeDate.Hour)
 556:Generated_Source\PSoC5/RTC_INT.c ****                 {
 557:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus |= RTC_DST_HOUR;
 558:Generated_Source\PSoC5/RTC_INT.c ****                 }
 559:Generated_Source\PSoC5/RTC_INT.c ****                 else
 560:Generated_Source\PSoC5/RTC_INT.c ****                 {
 561:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus &= (uint8)(~RTC_DST_HOUR);
 562:Generated_Source\PSoC5/RTC_INT.c ****                 }
 563:Generated_Source\PSoC5/RTC_INT.c **** 
 564:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStart.Hour == RTC_currentTimeDate.Hour)
 565:Generated_Source\PSoC5/RTC_INT.c ****                 {
 566:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStartStatus |= RTC_DST_HOUR;
 567:Generated_Source\PSoC5/RTC_INT.c ****                 }
 568:Generated_Source\PSoC5/RTC_INT.c ****                 else
 569:Generated_Source\PSoC5/RTC_INT.c ****                 {
 570:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_dstStartStatus &= (uint8)(~RTC_DST_HOUR);
 571:Generated_Source\PSoC5/RTC_INT.c ****                 }
 572:Generated_Source\PSoC5/RTC_INT.c **** 
 573:Generated_Source\PSoC5/RTC_INT.c ****                 /* DST Enable ? */
 574:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_ENABLE))
 575:Generated_Source\PSoC5/RTC_INT.c ****                 {
 576:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_statusDateTime, RTC_STATUS_DST))
 577:Generated_Source\PSoC5/RTC_INT.c ****                     {
 578:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStopStatus, RTC_DST_HOUR |
 579:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_DAYOFMONTH | RTC_DST_MONTH))
 580:Generated_Source\PSoC5/RTC_INT.c ****                         {
 581:Generated_Source\PSoC5/RTC_INT.c ****                             /* Substruct from current value of minutes, number of minutes
 582:Generated_Source\PSoC5/RTC_INT.c ****                             * in DST offset which is out of complete hour
 583:Generated_Source\PSoC5/RTC_INT.c ****                             */
 584:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min -=
 585:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 586:Generated_Source\PSoC5/RTC_INT.c **** 
 587:Generated_Source\PSoC5/RTC_INT.c ****                             /* Is minute value negative? */
 588:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 589:Generated_Source\PSoC5/RTC_INT.c ****                             {
 590:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 591:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED -     (~currentTimeDate.Min    ) ==
 592:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED + 1 - (~currentTimeDate.Min + 1)
 593:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 594:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min = RTC_HOUR_ELAPSED -
 595:Generated_Source\PSoC5/RTC_INT.c ****                                                              ((uint8)(~RTC_currentTimeDate.Min));
 596:Generated_Source\PSoC5/RTC_INT.c **** 
 597:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour--;
 598:Generated_Source\PSoC5/RTC_INT.c ****                             }
 599:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 27


 600:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour -= RTC_dstOffsetMin /
 601:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 602:Generated_Source\PSoC5/RTC_INT.c **** 
 603:Generated_Source\PSoC5/RTC_INT.c ****                             /* Day roll over
 604:Generated_Source\PSoC5/RTC_INT.c ****                             * Is hour value negative? */
 605:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 606:Generated_Source\PSoC5/RTC_INT.c ****                             {
 607:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 608:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED - (~currentTimeDate.Hour) ==
 609:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED + 1 - (~currentTimeDate.Hour + 1)
 610:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 611:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour = RTC_DAY_ELAPSED -
 612:Generated_Source\PSoC5/RTC_INT.c ****                                                               ((uint8)(~RTC_currentTimeDate.Hour));
 613:Generated_Source\PSoC5/RTC_INT.c **** 
 614:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 615:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 616:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 617:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 618:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 619:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 620:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 621:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 622:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 623:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 624:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 625:Generated_Source\PSoC5/RTC_INT.c **** 
 626:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth--;
 627:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear--;
 628:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek--;
 629:Generated_Source\PSoC5/RTC_INT.c **** 
 630:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfWeek)
 631:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 632:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = RTC_DAYS_IN_WEEK;
 633:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 634:Generated_Source\PSoC5/RTC_INT.c **** 
 635:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfMonth)
 636:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 637:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month--;
 638:Generated_Source\PSoC5/RTC_INT.c ****                                     if(0u == RTC_currentTimeDate.Month)
 639:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 640:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_DECEMBER;
 641:Generated_Source\PSoC5/RTC_INT.c **** 
 642:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfMonth =
 643:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 644:Generated_Source\PSoC5/RTC_INT.c **** 
 645:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year--;
 646:Generated_Source\PSoC5/RTC_INT.c **** 
 647:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 648:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 649:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 650:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 651:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear =
 652:Generated_Source\PSoC5/RTC_INT.c ****                                                                                     RTC_DAYS_IN_LEA
 653:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 654:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 655:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 656:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 28


 657:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear = RTC_DAYS_IN_YEAR;
 658:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 659:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 660:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 661:Generated_Source\PSoC5/RTC_INT.c ****                                     else
 662:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 663:Generated_Source\PSoC5/RTC_INT.c ****                                         /* Day of month roll over.
 664:Generated_Source\PSoC5/RTC_INT.c ****                                         * Check if day of month February 29 of leap year
 665:Generated_Source\PSoC5/RTC_INT.c ****                                         */
 666:Generated_Source\PSoC5/RTC_INT.c ****                                         if((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 667:Generated_Source\PSoC5/RTC_INT.c ****                                             (RTC_currentTimeDate.Month == RTC_FEBRUARY))
 668:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 669:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
 670:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u]
 671:Generated_Source\PSoC5/RTC_INT.c ****                                             + 1u;
 672:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 673:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 674:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 675:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
 676:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 677:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 678:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 679:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 680:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 681:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 682:Generated_Source\PSoC5/RTC_INT.c ****                             }
 683:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
 684:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus = 0u;
 685:Generated_Source\PSoC5/RTC_INT.c ****                         }
 686:Generated_Source\PSoC5/RTC_INT.c ****                     }
 687:Generated_Source\PSoC5/RTC_INT.c ****                     else
 688:Generated_Source\PSoC5/RTC_INT.c ****                     {
 689:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStartStatus,
 690:Generated_Source\PSoC5/RTC_INT.c ****                                                       (RTC_DST_HOUR | RTC_DST_DAYOFMONTH |
 691:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_MONTH)))
 692:Generated_Source\PSoC5/RTC_INT.c ****                         {
 693:Generated_Source\PSoC5/RTC_INT.c ****                             /* Add Hour and Min */
 694:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min +=
 695:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 696:Generated_Source\PSoC5/RTC_INT.c **** 
 697:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 698:Generated_Source\PSoC5/RTC_INT.c ****                             {
 699:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust Min */
 700:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min -= (RTC_HOUR_ELAPSED + 1u);
 701:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour++;
 702:Generated_Source\PSoC5/RTC_INT.c ****                             }
 703:Generated_Source\PSoC5/RTC_INT.c **** 
 704:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour += RTC_dstOffsetMin /
 705:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 706:Generated_Source\PSoC5/RTC_INT.c **** 
 707:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 708:Generated_Source\PSoC5/RTC_INT.c ****                             {
 709:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust hour, add day */
 710:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour -= (RTC_DAY_ELAPSED + 1u);
 711:Generated_Source\PSoC5/RTC_INT.c **** 
 712:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 713:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 29


 714:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 715:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 716:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 717:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 718:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 719:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 720:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 721:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 722:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 723:Generated_Source\PSoC5/RTC_INT.c **** 
 724:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth++;
 725:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear++;
 726:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek++;
 727:Generated_Source\PSoC5/RTC_INT.c **** 
 728:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 729:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 730:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = 1u;
 731:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 732:Generated_Source\PSoC5/RTC_INT.c **** 
 733:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Day of month roll over.
 734:Generated_Source\PSoC5/RTC_INT.c ****                                 * Check if day of month greater than 29 in February of leap year or
 735:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than 28 NOT in February of NON leap year 
 736:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than it should be in every month in non l
 737:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 738:Generated_Source\PSoC5/RTC_INT.c ****                                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 739:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 740:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 741:Generated_Source\PSoC5/RTC_INT.c ****                                   (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 742:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 743:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month != RTC_FEBRUARY)  &&
 744:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 745:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 746:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY)) &&
 747:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 748:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 749:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 750:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month++;
 751:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfMonth = 1u;
 752:Generated_Source\PSoC5/RTC_INT.c ****                                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 753:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 754:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_JANUARY;
 755:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year++;
 756:Generated_Source\PSoC5/RTC_INT.c **** 
 757:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 758:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 759:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 760:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 761:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 762:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 763:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 764:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 765:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 766:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfYear = 1u;
 767:Generated_Source\PSoC5/RTC_INT.c **** 
 768:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 769:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 770:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 30


 771:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 772:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 773:Generated_Source\PSoC5/RTC_INT.c ****                             }
 774:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_DST;
 775:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus = 0u;
 776:Generated_Source\PSoC5/RTC_INT.c **** 
 777:Generated_Source\PSoC5/RTC_INT.c ****                             /* Month */
 778:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 779:Generated_Source\PSoC5/RTC_INT.c ****                             {
 780:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_MONTH;
 781:Generated_Source\PSoC5/RTC_INT.c ****                             }
 782:Generated_Source\PSoC5/RTC_INT.c ****                             else
 783:Generated_Source\PSoC5/RTC_INT.c ****                             {
 784:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 785:Generated_Source\PSoC5/RTC_INT.c ****                             }
 786:Generated_Source\PSoC5/RTC_INT.c **** 
 787:Generated_Source\PSoC5/RTC_INT.c ****                             /* DayOfMonth */
 788:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.DayOfMonth ==
 789:Generated_Source\PSoC5/RTC_INT.c ****                                                                             RTC_currentTimeDate.Day
 790:Generated_Source\PSoC5/RTC_INT.c ****                             {
 791:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 792:Generated_Source\PSoC5/RTC_INT.c ****                             }
 793:Generated_Source\PSoC5/RTC_INT.c ****                             else
 794:Generated_Source\PSoC5/RTC_INT.c ****                             {
 795:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 796:Generated_Source\PSoC5/RTC_INT.c ****                             }
 797:Generated_Source\PSoC5/RTC_INT.c ****                         }
 798:Generated_Source\PSoC5/RTC_INT.c ****                     }
 799:Generated_Source\PSoC5/RTC_INT.c **** 
 800:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFWEEK */
 801:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 802:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFWEEK_MASK))
 803:Generated_Source\PSoC5/RTC_INT.c ****                     {
 804:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 805:Generated_Source\PSoC5/RTC_INT.c ****                         {
 806:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 807:Generated_Source\PSoC5/RTC_INT.c ****                         }
 808:Generated_Source\PSoC5/RTC_INT.c ****                         else
 809:Generated_Source\PSoC5/RTC_INT.c ****                         {
 810:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 811:Generated_Source\PSoC5/RTC_INT.c ****                         }
 812:Generated_Source\PSoC5/RTC_INT.c ****                     }
 813:Generated_Source\PSoC5/RTC_INT.c **** 
 814:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFYEAR */
 815:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 816:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFYEAR_MASK))
 817:Generated_Source\PSoC5/RTC_INT.c ****                     {
 818:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 819:Generated_Source\PSoC5/RTC_INT.c ****                         {
 820:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 821:Generated_Source\PSoC5/RTC_INT.c ****                         }
 822:Generated_Source\PSoC5/RTC_INT.c ****                         else
 823:Generated_Source\PSoC5/RTC_INT.c ****                         {
 824:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 825:Generated_Source\PSoC5/RTC_INT.c ****                         }
 826:Generated_Source\PSoC5/RTC_INT.c ****                     }
 827:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 31


 828:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFMONTH */
 829:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 830:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFMONTH_MASK))
 831:Generated_Source\PSoC5/RTC_INT.c ****                     {
 832:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 833:Generated_Source\PSoC5/RTC_INT.c ****                         {
 834:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 835:Generated_Source\PSoC5/RTC_INT.c ****                         }
 836:Generated_Source\PSoC5/RTC_INT.c ****                         else
 837:Generated_Source\PSoC5/RTC_INT.c ****                         {
 838:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 839:Generated_Source\PSoC5/RTC_INT.c ****                         }
 840:Generated_Source\PSoC5/RTC_INT.c ****                     }
 841:Generated_Source\PSoC5/RTC_INT.c **** 
 842:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 843:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 844:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 845:Generated_Source\PSoC5/RTC_INT.c ****                     {
 846:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 847:Generated_Source\PSoC5/RTC_INT.c ****                         {
 848:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 849:Generated_Source\PSoC5/RTC_INT.c ****                         }
 850:Generated_Source\PSoC5/RTC_INT.c ****                         else
 851:Generated_Source\PSoC5/RTC_INT.c ****                         {
 852:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 853:Generated_Source\PSoC5/RTC_INT.c ****                         }
 854:Generated_Source\PSoC5/RTC_INT.c ****                     }
 855:Generated_Source\PSoC5/RTC_INT.c **** 
 856:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm YEAR */
 857:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 858:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_YEAR_MASK))
 859:Generated_Source\PSoC5/RTC_INT.c ****                     {
 860:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 861:Generated_Source\PSoC5/RTC_INT.c ****                         {
 862:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 863:Generated_Source\PSoC5/RTC_INT.c ****                         }
 864:Generated_Source\PSoC5/RTC_INT.c ****                         else
 865:Generated_Source\PSoC5/RTC_INT.c ****                         {
 866:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 867:Generated_Source\PSoC5/RTC_INT.c ****                         }
 868:Generated_Source\PSoC5/RTC_INT.c ****                     }
 869:Generated_Source\PSoC5/RTC_INT.c **** 
 870:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 871:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 872:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 873:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 874:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 875:Generated_Source\PSoC5/RTC_INT.c ****                 }
 876:Generated_Source\PSoC5/RTC_INT.c ****             #endif /* 1u == RTC_DST_FUNC_ENABLE */
 877:Generated_Source\PSoC5/RTC_INT.c **** 
 878:Generated_Source\PSoC5/RTC_INT.c ****             /* Alarm HOUR */
 879:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_HOUR_MASK))
 877              		.loc 1 879 0
 878 044c 2E4B     		ldr	r3, .L50+4
 879 044e 1B78     		ldrb	r3, [r3]
 880 0450 DBB2     		uxtb	r3, r3
 881 0452 03F00403 		and	r3, r3, #4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 32


 882 0456 002B     		cmp	r3, #0
 883 0458 18D0     		beq	.L37
 880:Generated_Source\PSoC5/RTC_INT.c ****             {
 881:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_alarmCfgTimeDate.Hour == RTC_currentTimeDate.Hour)
 884              		.loc 1 881 0
 885 045a 2E4B     		ldr	r3, .L50+16
 886 045c 9B78     		ldrb	r3, [r3, #2]
 887 045e DAB2     		uxtb	r2, r3
 888 0460 2D4B     		ldr	r3, .L50+20
 889 0462 9B78     		ldrb	r3, [r3, #2]
 890 0464 DBB2     		uxtb	r3, r3
 891 0466 9A42     		cmp	r2, r3
 892 0468 08D1     		bne	.L38
 882:Generated_Source\PSoC5/RTC_INT.c ****                 {
 883:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus |= RTC_ALARM_HOUR_MASK;
 893              		.loc 1 883 0
 894 046a 264B     		ldr	r3, .L50
 895 046c 1B78     		ldrb	r3, [r3]
 896 046e DBB2     		uxtb	r3, r3
 897 0470 43F00403 		orr	r3, r3, #4
 898 0474 DAB2     		uxtb	r2, r3
 899 0476 234B     		ldr	r3, .L50
 900 0478 1A70     		strb	r2, [r3]
 901 047a 07E0     		b	.L37
 902              	.L38:
 884:Generated_Source\PSoC5/RTC_INT.c ****                 }
 885:Generated_Source\PSoC5/RTC_INT.c ****                 else
 886:Generated_Source\PSoC5/RTC_INT.c ****                 {
 887:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_HOUR_MASK);
 903              		.loc 1 887 0
 904 047c 214B     		ldr	r3, .L50
 905 047e 1B78     		ldrb	r3, [r3]
 906 0480 DBB2     		uxtb	r3, r3
 907 0482 23F00403 		bic	r3, r3, #4
 908 0486 DAB2     		uxtb	r2, r3
 909 0488 1E4B     		ldr	r3, .L50
 910 048a 1A70     		strb	r2, [r3]
 911              	.L37:
 888:Generated_Source\PSoC5/RTC_INT.c ****                 }
 889:Generated_Source\PSoC5/RTC_INT.c ****             }
 890:Generated_Source\PSoC5/RTC_INT.c **** 
 891:Generated_Source\PSoC5/RTC_INT.c ****             /* Set Alarm flag event */
 892:Generated_Source\PSoC5/RTC_INT.c ****             RTC_tmp = RTC_alarmCfgMask;
 912              		.loc 1 892 0
 913 048c 1E4B     		ldr	r3, .L50+4
 914 048e 1B78     		ldrb	r3, [r3]
 915 0490 FB71     		strb	r3, [r7, #7]
 893:Generated_Source\PSoC5/RTC_INT.c ****             RTC_SET_ALARM(RTC_tmp,
 916              		.loc 1 893 0
 917 0492 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 918 0494 002B     		cmp	r3, #0
 919 0496 13D0     		beq	.L39
 920              		.loc 1 893 0 is_stmt 0 discriminator 1
 921 0498 1A4B     		ldr	r3, .L50
 922 049a 1B78     		ldrb	r3, [r3]
 923 049c DAB2     		uxtb	r2, r3
 924 049e FB79     		ldrb	r3, [r7, #7]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 33


 925 04a0 1340     		ands	r3, r3, r2
 926 04a2 DBB2     		uxtb	r3, r3
 927 04a4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 928 04a6 9A42     		cmp	r2, r3
 929 04a8 0AD1     		bne	.L39
 930              		.loc 1 893 0 discriminator 2
 931 04aa 184B     		ldr	r3, .L50+8
 932 04ac 1B78     		ldrb	r3, [r3]
 933 04ae DBB2     		uxtb	r3, r3
 934 04b0 43F00803 		orr	r3, r3, #8
 935 04b4 DAB2     		uxtb	r2, r3
 936 04b6 154B     		ldr	r3, .L50+8
 937 04b8 1A70     		strb	r2, [r3]
 938 04ba 124B     		ldr	r3, .L50
 939 04bc 0022     		movs	r2, #0
 940 04be 1A70     		strb	r2, [r3]
 941              	.L39:
 894:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_alarmCurStatus,
 895:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_statusDateTime);
 896:Generated_Source\PSoC5/RTC_INT.c **** 
 897:Generated_Source\PSoC5/RTC_INT.c ****             /* Every Hour */
 898:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_HOUR_MASK))
 942              		.loc 1 898 0 is_stmt 1
 943 04c0 134B     		ldr	r3, .L50+12
 944 04c2 1B78     		ldrb	r3, [r3]
 945 04c4 DBB2     		uxtb	r3, r3
 946 04c6 03F00403 		and	r3, r3, #4
 947 04ca 002B     		cmp	r3, #0
 948 04cc 01D0     		beq	.L10
 899:Generated_Source\PSoC5/RTC_INT.c ****             {
 900:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_EveryHourHandler();
 949              		.loc 1 900 0
 950 04ce FFF7FEFF 		bl	RTC_EveryHourHandler
 951              	.L10:
 901:Generated_Source\PSoC5/RTC_INT.c ****             }
 902:Generated_Source\PSoC5/RTC_INT.c ****         } /* Min > 59 = Hour */
 903:Generated_Source\PSoC5/RTC_INT.c **** 
 904:Generated_Source\PSoC5/RTC_INT.c ****         /* Alarm MIN */
 905:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_MIN_MASK))
 952              		.loc 1 905 0
 953 04d2 0D4B     		ldr	r3, .L50+4
 954 04d4 1B78     		ldrb	r3, [r3]
 955 04d6 DBB2     		uxtb	r3, r3
 956 04d8 03F00203 		and	r3, r3, #2
 957 04dc 002B     		cmp	r3, #0
 958 04de 25D0     		beq	.L40
 906:Generated_Source\PSoC5/RTC_INT.c ****         {
 907:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_alarmCfgTimeDate.Min == RTC_currentTimeDate.Min)
 959              		.loc 1 907 0
 960 04e0 0C4B     		ldr	r3, .L50+16
 961 04e2 5B78     		ldrb	r3, [r3, #1]
 962 04e4 DAB2     		uxtb	r2, r3
 963 04e6 0C4B     		ldr	r3, .L50+20
 964 04e8 5B78     		ldrb	r3, [r3, #1]
 965 04ea DBB2     		uxtb	r3, r3
 966 04ec 9A42     		cmp	r2, r3
 967 04ee 15D1     		bne	.L41
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 34


 908:Generated_Source\PSoC5/RTC_INT.c ****             {
 909:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus |= RTC_ALARM_MIN_MASK;
 968              		.loc 1 909 0
 969 04f0 044B     		ldr	r3, .L50
 970 04f2 1B78     		ldrb	r3, [r3]
 971 04f4 DBB2     		uxtb	r3, r3
 972 04f6 43F00203 		orr	r3, r3, #2
 973 04fa DAB2     		uxtb	r2, r3
 974 04fc 014B     		ldr	r3, .L50
 975 04fe 1A70     		strb	r2, [r3]
 976 0500 14E0     		b	.L40
 977              	.L51:
 978 0502 00BF     		.align	2
 979              	.L50:
 980 0504 00000000 		.word	RTC_alarmCurStatus
 981 0508 00000000 		.word	RTC_alarmCfgMask
 982 050c 00000000 		.word	RTC_statusDateTime
 983 0510 00000000 		.word	RTC_intervalCfgMask
 984 0514 00000000 		.word	RTC_alarmCfgTimeDate
 985 0518 00000000 		.word	RTC_currentTimeDate
 986              	.L41:
 910:Generated_Source\PSoC5/RTC_INT.c ****             }
 911:Generated_Source\PSoC5/RTC_INT.c ****             else
 912:Generated_Source\PSoC5/RTC_INT.c ****             {
 913:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MIN_MASK);
 987              		.loc 1 913 0
 988 051c 384B     		ldr	r3, .L52
 989 051e 1B78     		ldrb	r3, [r3]
 990 0520 DBB2     		uxtb	r3, r3
 991 0522 23F00203 		bic	r3, r3, #2
 992 0526 DAB2     		uxtb	r2, r3
 993 0528 354B     		ldr	r3, .L52
 994 052a 1A70     		strb	r2, [r3]
 995              	.L40:
 914:Generated_Source\PSoC5/RTC_INT.c ****             }
 915:Generated_Source\PSoC5/RTC_INT.c ****         }
 916:Generated_Source\PSoC5/RTC_INT.c **** 
 917:Generated_Source\PSoC5/RTC_INT.c ****         /* Set Alarm flag event */
 918:Generated_Source\PSoC5/RTC_INT.c ****         RTC_tmp = RTC_alarmCfgMask;
 996              		.loc 1 918 0
 997 052c 354B     		ldr	r3, .L52+4
 998 052e 1B78     		ldrb	r3, [r3]
 999 0530 FB71     		strb	r3, [r7, #7]
 919:Generated_Source\PSoC5/RTC_INT.c ****         RTC_SET_ALARM(RTC_tmp,
 1000              		.loc 1 919 0
 1001 0532 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1002 0534 002B     		cmp	r3, #0
 1003 0536 13D0     		beq	.L42
 1004              		.loc 1 919 0 is_stmt 0 discriminator 1
 1005 0538 314B     		ldr	r3, .L52
 1006 053a 1B78     		ldrb	r3, [r3]
 1007 053c DAB2     		uxtb	r2, r3
 1008 053e FB79     		ldrb	r3, [r7, #7]
 1009 0540 1340     		ands	r3, r3, r2
 1010 0542 DBB2     		uxtb	r3, r3
 1011 0544 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1012 0546 9A42     		cmp	r2, r3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 35


 1013 0548 0AD1     		bne	.L42
 1014              		.loc 1 919 0 discriminator 2
 1015 054a 2F4B     		ldr	r3, .L52+8
 1016 054c 1B78     		ldrb	r3, [r3]
 1017 054e DBB2     		uxtb	r3, r3
 1018 0550 43F00803 		orr	r3, r3, #8
 1019 0554 DAB2     		uxtb	r2, r3
 1020 0556 2C4B     		ldr	r3, .L52+8
 1021 0558 1A70     		strb	r2, [r3]
 1022 055a 294B     		ldr	r3, .L52
 1023 055c 0022     		movs	r2, #0
 1024 055e 1A70     		strb	r2, [r3]
 1025              	.L42:
 920:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_alarmCurStatus,
 921:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_statusDateTime);
 922:Generated_Source\PSoC5/RTC_INT.c **** 
 923:Generated_Source\PSoC5/RTC_INT.c ****         /* Every Min */
 924:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_MIN_MASK))
 1026              		.loc 1 924 0 is_stmt 1
 1027 0560 2A4B     		ldr	r3, .L52+12
 1028 0562 1B78     		ldrb	r3, [r3]
 1029 0564 DBB2     		uxtb	r3, r3
 1030 0566 03F00203 		and	r3, r3, #2
 1031 056a 002B     		cmp	r3, #0
 1032 056c 01D0     		beq	.L9
 925:Generated_Source\PSoC5/RTC_INT.c ****         {
 926:Generated_Source\PSoC5/RTC_INT.c ****             RTC_EveryMinuteHandler();
 1033              		.loc 1 926 0
 1034 056e FFF7FEFF 		bl	RTC_EveryMinuteHandler
 1035              	.L9:
 927:Generated_Source\PSoC5/RTC_INT.c ****         }
 928:Generated_Source\PSoC5/RTC_INT.c ****     } /* Sec */
 929:Generated_Source\PSoC5/RTC_INT.c **** 
 930:Generated_Source\PSoC5/RTC_INT.c ****     /* Alarm SEC */
 931:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_SEC_MASK))
 1036              		.loc 1 931 0
 1037 0572 244B     		ldr	r3, .L52+4
 1038 0574 1B78     		ldrb	r3, [r3]
 1039 0576 DBB2     		uxtb	r3, r3
 1040 0578 03F00103 		and	r3, r3, #1
 1041 057c 002B     		cmp	r3, #0
 1042 057e 18D0     		beq	.L43
 932:Generated_Source\PSoC5/RTC_INT.c ****     {
 933:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_alarmCfgTimeDate.Sec == RTC_currentTimeDate.Sec)
 1043              		.loc 1 933 0
 1044 0580 234B     		ldr	r3, .L52+16
 1045 0582 1B78     		ldrb	r3, [r3]
 1046 0584 DAB2     		uxtb	r2, r3
 1047 0586 234B     		ldr	r3, .L52+20
 1048 0588 1B78     		ldrb	r3, [r3]
 1049 058a DBB2     		uxtb	r3, r3
 1050 058c 9A42     		cmp	r2, r3
 1051 058e 08D1     		bne	.L44
 934:Generated_Source\PSoC5/RTC_INT.c ****         {
 935:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus |= RTC_ALARM_SEC_MASK;
 1052              		.loc 1 935 0
 1053 0590 1B4B     		ldr	r3, .L52
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 36


 1054 0592 1B78     		ldrb	r3, [r3]
 1055 0594 DBB2     		uxtb	r3, r3
 1056 0596 43F00103 		orr	r3, r3, #1
 1057 059a DAB2     		uxtb	r2, r3
 1058 059c 184B     		ldr	r3, .L52
 1059 059e 1A70     		strb	r2, [r3]
 1060 05a0 07E0     		b	.L43
 1061              	.L44:
 936:Generated_Source\PSoC5/RTC_INT.c ****         }
 937:Generated_Source\PSoC5/RTC_INT.c ****         else
 938:Generated_Source\PSoC5/RTC_INT.c ****         {
 939:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_SEC_MASK);
 1062              		.loc 1 939 0
 1063 05a2 174B     		ldr	r3, .L52
 1064 05a4 1B78     		ldrb	r3, [r3]
 1065 05a6 DBB2     		uxtb	r3, r3
 1066 05a8 23F00103 		bic	r3, r3, #1
 1067 05ac DAB2     		uxtb	r2, r3
 1068 05ae 144B     		ldr	r3, .L52
 1069 05b0 1A70     		strb	r2, [r3]
 1070              	.L43:
 940:Generated_Source\PSoC5/RTC_INT.c ****         }
 941:Generated_Source\PSoC5/RTC_INT.c ****     }
 942:Generated_Source\PSoC5/RTC_INT.c **** 
 943:Generated_Source\PSoC5/RTC_INT.c ****     /* Set Alarm flag event */
 944:Generated_Source\PSoC5/RTC_INT.c ****     RTC_tmp = RTC_alarmCfgMask;
 1071              		.loc 1 944 0
 1072 05b2 144B     		ldr	r3, .L52+4
 1073 05b4 1B78     		ldrb	r3, [r3]
 1074 05b6 FB71     		strb	r3, [r7, #7]
 945:Generated_Source\PSoC5/RTC_INT.c ****     RTC_SET_ALARM(RTC_tmp, RTC_alarmCurStatus, RTC_statusDateTime);
 1075              		.loc 1 945 0
 1076 05b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1077 05ba 002B     		cmp	r3, #0
 1078 05bc 13D0     		beq	.L45
 1079              		.loc 1 945 0 is_stmt 0 discriminator 1
 1080 05be 104B     		ldr	r3, .L52
 1081 05c0 1B78     		ldrb	r3, [r3]
 1082 05c2 DAB2     		uxtb	r2, r3
 1083 05c4 FB79     		ldrb	r3, [r7, #7]
 1084 05c6 1340     		ands	r3, r3, r2
 1085 05c8 DBB2     		uxtb	r3, r3
 1086 05ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1087 05cc 9A42     		cmp	r2, r3
 1088 05ce 0AD1     		bne	.L45
 1089              		.loc 1 945 0 discriminator 2
 1090 05d0 0D4B     		ldr	r3, .L52+8
 1091 05d2 1B78     		ldrb	r3, [r3]
 1092 05d4 DBB2     		uxtb	r3, r3
 1093 05d6 43F00803 		orr	r3, r3, #8
 1094 05da DAB2     		uxtb	r2, r3
 1095 05dc 0A4B     		ldr	r3, .L52+8
 1096 05de 1A70     		strb	r2, [r3]
 1097 05e0 074B     		ldr	r3, .L52
 1098 05e2 0022     		movs	r2, #0
 1099 05e4 1A70     		strb	r2, [r3]
 1100              	.L45:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 37


 946:Generated_Source\PSoC5/RTC_INT.c **** 
 947:Generated_Source\PSoC5/RTC_INT.c ****     /* Execute every second handler if needed */
 948:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_SEC_MASK))
 1101              		.loc 1 948 0 is_stmt 1
 1102 05e6 094B     		ldr	r3, .L52+12
 1103 05e8 1B78     		ldrb	r3, [r3]
 1104 05ea DBB2     		uxtb	r3, r3
 1105 05ec 03F00103 		and	r3, r3, #1
 1106 05f0 002B     		cmp	r3, #0
 1107 05f2 01D0     		beq	.L47
 949:Generated_Source\PSoC5/RTC_INT.c ****     {
 950:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler();
 1108              		.loc 1 950 0
 1109 05f4 FFF7FEFF 		bl	RTC_EverySecondHandler
 1110              	.L47:
 951:Generated_Source\PSoC5/RTC_INT.c ****     }
 952:Generated_Source\PSoC5/RTC_INT.c ****     
 953:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_EXIT_CALLBACK
 954:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_ExitCallback();
 955:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_EXIT_CALLBACK */
 956:Generated_Source\PSoC5/RTC_INT.c **** }
 1111              		.loc 1 956 0
 1112 05f8 00BF     		nop
 1113 05fa 0837     		adds	r7, r7, #8
 1114              		.cfi_def_cfa_offset 8
 1115 05fc BD46     		mov	sp, r7
 1116              		.cfi_def_cfa_register 13
 1117              		@ sp needed
 1118 05fe 80BD     		pop	{r7, pc}
 1119              	.L53:
 1120              		.align	2
 1121              	.L52:
 1122 0600 00000000 		.word	RTC_alarmCurStatus
 1123 0604 00000000 		.word	RTC_alarmCfgMask
 1124 0608 00000000 		.word	RTC_statusDateTime
 1125 060c 00000000 		.word	RTC_intervalCfgMask
 1126 0610 00000000 		.word	RTC_alarmCfgTimeDate
 1127 0614 00000000 		.word	RTC_currentTimeDate
 1128              		.cfi_endproc
 1129              	.LFE71:
 1130              		.size	RTC_ISR, .-RTC_ISR
 1131              		.text
 1132              	.Letext0:
 1133              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1134              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1135              		.file 4 "Generated_Source\\PSoC5\\cytypes.h"
 1136              		.file 5 "Generated_Source\\PSoC5\\RTC.h"
 1137              		.file 6 "./data.h"
 1138              		.file 7 "./modem.h"
 1139              		.file 8 "./notoriOS.h"
 1140              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 1141              		.file 10 "./App_LED.h"
 1142              		.file 11 "./level_sensor.h"
 1143              		.file 12 "./valve.h"
 1144              		.file 13 "./autosampler.h"
 1145              		.section	.debug_info,"",%progbits
 1146              	.Ldebug_info0:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 38


 1147 0000 AE070000 		.4byte	0x7ae
 1148 0004 0400     		.2byte	0x4
 1149 0006 00000000 		.4byte	.Ldebug_abbrev0
 1150 000a 04       		.byte	0x4
 1151 000b 01       		.uleb128 0x1
 1152 000c 7D000000 		.4byte	.LASF119
 1153 0010 0C       		.byte	0xc
 1154 0011 5F010000 		.4byte	.LASF120
 1155 0015 51040000 		.4byte	.LASF121
 1156 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1157 001d 00000000 		.4byte	0
 1158 0021 00000000 		.4byte	.Ldebug_line0
 1159 0025 02       		.uleb128 0x2
 1160 0026 01       		.byte	0x1
 1161 0027 06       		.byte	0x6
 1162 0028 4A000000 		.4byte	.LASF0
 1163 002c 02       		.uleb128 0x2
 1164 002d 01       		.byte	0x1
 1165 002e 08       		.byte	0x8
 1166 002f CF040000 		.4byte	.LASF1
 1167 0033 02       		.uleb128 0x2
 1168 0034 02       		.byte	0x2
 1169 0035 05       		.byte	0x5
 1170 0036 2A050000 		.4byte	.LASF2
 1171 003a 02       		.uleb128 0x2
 1172 003b 02       		.byte	0x2
 1173 003c 07       		.byte	0x7
 1174 003d 15060000 		.4byte	.LASF3
 1175 0041 03       		.uleb128 0x3
 1176 0042 FE050000 		.4byte	.LASF9
 1177 0046 02       		.byte	0x2
 1178 0047 3F       		.byte	0x3f
 1179 0048 4C000000 		.4byte	0x4c
 1180 004c 02       		.uleb128 0x2
 1181 004d 04       		.byte	0x4
 1182 004e 05       		.byte	0x5
 1183 004f 11020000 		.4byte	.LASF4
 1184 0053 02       		.uleb128 0x2
 1185 0054 04       		.byte	0x4
 1186 0055 07       		.byte	0x7
 1187 0056 DD020000 		.4byte	.LASF5
 1188 005a 02       		.uleb128 0x2
 1189 005b 08       		.byte	0x8
 1190 005c 05       		.byte	0x5
 1191 005d 80010000 		.4byte	.LASF6
 1192 0061 02       		.uleb128 0x2
 1193 0062 08       		.byte	0x8
 1194 0063 07       		.byte	0x7
 1195 0064 11010000 		.4byte	.LASF7
 1196 0068 04       		.uleb128 0x4
 1197 0069 04       		.byte	0x4
 1198 006a 05       		.byte	0x5
 1199 006b 696E7400 		.ascii	"int\000"
 1200 006f 02       		.uleb128 0x2
 1201 0070 04       		.byte	0x4
 1202 0071 07       		.byte	0x7
 1203 0072 C6050000 		.4byte	.LASF8
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 39


 1204 0076 03       		.uleb128 0x3
 1205 0077 C7040000 		.4byte	.LASF10
 1206 007b 03       		.byte	0x3
 1207 007c 2C       		.byte	0x2c
 1208 007d 41000000 		.4byte	0x41
 1209 0081 05       		.uleb128 0x5
 1210 0082 36020000 		.4byte	.LASF11
 1211 0086 04       		.byte	0x4
 1212 0087 9201     		.2byte	0x192
 1213 0089 2C000000 		.4byte	0x2c
 1214 008d 05       		.uleb128 0x5
 1215 008e 08000000 		.4byte	.LASF12
 1216 0092 04       		.byte	0x4
 1217 0093 9301     		.2byte	0x193
 1218 0095 3A000000 		.4byte	0x3a
 1219 0099 05       		.uleb128 0x5
 1220 009a F2030000 		.4byte	.LASF13
 1221 009e 04       		.byte	0x4
 1222 009f 9601     		.2byte	0x196
 1223 00a1 33000000 		.4byte	0x33
 1224 00a5 05       		.uleb128 0x5
 1225 00a6 5C020000 		.4byte	.LASF14
 1226 00aa 04       		.byte	0x4
 1227 00ab 9701     		.2byte	0x197
 1228 00ad 4C000000 		.4byte	0x4c
 1229 00b1 05       		.uleb128 0x5
 1230 00b2 E1030000 		.4byte	.LASF15
 1231 00b6 04       		.byte	0x4
 1232 00b7 9801     		.2byte	0x198
 1233 00b9 BD000000 		.4byte	0xbd
 1234 00bd 02       		.uleb128 0x2
 1235 00be 04       		.byte	0x4
 1236 00bf 04       		.byte	0x4
 1237 00c0 9E040000 		.4byte	.LASF16
 1238 00c4 02       		.uleb128 0x2
 1239 00c5 08       		.byte	0x8
 1240 00c6 04       		.byte	0x4
 1241 00c7 3F070000 		.4byte	.LASF17
 1242 00cb 02       		.uleb128 0x2
 1243 00cc 01       		.byte	0x1
 1244 00cd 08       		.byte	0x8
 1245 00ce C1050000 		.4byte	.LASF18
 1246 00d2 06       		.uleb128 0x6
 1247 00d3 81000000 		.4byte	0x81
 1248 00d7 07       		.uleb128 0x7
 1249 00d8 0C       		.byte	0xc
 1250 00d9 05       		.byte	0x5
 1251 00da 30       		.byte	0x30
 1252 00db 40010000 		.4byte	0x140
 1253 00df 08       		.uleb128 0x8
 1254 00e0 53656300 		.ascii	"Sec\000"
 1255 00e4 05       		.byte	0x5
 1256 00e5 32       		.byte	0x32
 1257 00e6 81000000 		.4byte	0x81
 1258 00ea 00       		.byte	0
 1259 00eb 08       		.uleb128 0x8
 1260 00ec 4D696E00 		.ascii	"Min\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 40


 1261 00f0 05       		.byte	0x5
 1262 00f1 33       		.byte	0x33
 1263 00f2 81000000 		.4byte	0x81
 1264 00f6 01       		.byte	0x1
 1265 00f7 09       		.uleb128 0x9
 1266 00f8 28010000 		.4byte	.LASF19
 1267 00fc 05       		.byte	0x5
 1268 00fd 34       		.byte	0x34
 1269 00fe 81000000 		.4byte	0x81
 1270 0102 02       		.byte	0x2
 1271 0103 09       		.uleb128 0x9
 1272 0104 43050000 		.4byte	.LASF20
 1273 0108 05       		.byte	0x5
 1274 0109 35       		.byte	0x35
 1275 010a 81000000 		.4byte	0x81
 1276 010e 03       		.byte	0x3
 1277 010f 09       		.uleb128 0x9
 1278 0110 FD020000 		.4byte	.LASF21
 1279 0114 05       		.byte	0x5
 1280 0115 36       		.byte	0x36
 1281 0116 81000000 		.4byte	0x81
 1282 011a 04       		.byte	0x4
 1283 011b 09       		.uleb128 0x9
 1284 011c 28070000 		.4byte	.LASF22
 1285 0120 05       		.byte	0x5
 1286 0121 37       		.byte	0x37
 1287 0122 8D000000 		.4byte	0x8d
 1288 0126 06       		.byte	0x6
 1289 0127 09       		.uleb128 0x9
 1290 0128 0B010000 		.4byte	.LASF23
 1291 012c 05       		.byte	0x5
 1292 012d 38       		.byte	0x38
 1293 012e 81000000 		.4byte	0x81
 1294 0132 08       		.byte	0x8
 1295 0133 09       		.uleb128 0x9
 1296 0134 A4040000 		.4byte	.LASF24
 1297 0138 05       		.byte	0x5
 1298 0139 39       		.byte	0x39
 1299 013a 8D000000 		.4byte	0x8d
 1300 013e 0A       		.byte	0xa
 1301 013f 00       		.byte	0
 1302 0140 03       		.uleb128 0x3
 1303 0141 19040000 		.4byte	.LASF25
 1304 0145 05       		.byte	0x5
 1305 0146 3A       		.byte	0x3a
 1306 0147 4B010000 		.4byte	0x14b
 1307 014b 06       		.uleb128 0x6
 1308 014c D7000000 		.4byte	0xd7
 1309 0150 02       		.uleb128 0x2
 1310 0151 08       		.byte	0x8
 1311 0152 04       		.byte	0x4
 1312 0153 B5050000 		.4byte	.LASF26
 1313 0157 02       		.uleb128 0x2
 1314 0158 04       		.byte	0x4
 1315 0159 07       		.byte	0x7
 1316 015a E9030000 		.4byte	.LASF27
 1317 015e 0A       		.uleb128 0xa
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 41


 1318 015f CB000000 		.4byte	0xcb
 1319 0163 6E010000 		.4byte	0x16e
 1320 0167 0B       		.uleb128 0xb
 1321 0168 57010000 		.4byte	0x157
 1322 016c 17       		.byte	0x17
 1323 016d 00       		.byte	0
 1324 016e 07       		.uleb128 0x7
 1325 016f 2C       		.byte	0x2c
 1326 0170 06       		.byte	0x6
 1327 0171 14       		.byte	0x14
 1328 0172 9B010000 		.4byte	0x19b
 1329 0176 08       		.uleb128 0x8
 1330 0177 6B657900 		.ascii	"key\000"
 1331 017b 06       		.byte	0x6
 1332 017c 15       		.byte	0x15
 1333 017d 9B010000 		.4byte	0x19b
 1334 0181 00       		.byte	0
 1335 0182 09       		.uleb128 0x9
 1336 0183 B1020000 		.4byte	.LASF28
 1337 0187 06       		.byte	0x6
 1338 0188 16       		.byte	0x16
 1339 0189 9B010000 		.4byte	0x19b
 1340 018d 14       		.byte	0x14
 1341 018e 09       		.uleb128 0x9
 1342 018f 0F040000 		.4byte	.LASF29
 1343 0193 06       		.byte	0x6
 1344 0194 17       		.byte	0x17
 1345 0195 A5000000 		.4byte	0xa5
 1346 0199 28       		.byte	0x28
 1347 019a 00       		.byte	0
 1348 019b 0A       		.uleb128 0xa
 1349 019c CB000000 		.4byte	0xcb
 1350 01a0 AB010000 		.4byte	0x1ab
 1351 01a4 0B       		.uleb128 0xb
 1352 01a5 57010000 		.4byte	0x157
 1353 01a9 13       		.byte	0x13
 1354 01aa 00       		.byte	0
 1355 01ab 03       		.uleb128 0x3
 1356 01ac D1020000 		.4byte	.LASF30
 1357 01b0 06       		.byte	0x6
 1358 01b1 19       		.byte	0x19
 1359 01b2 6E010000 		.4byte	0x16e
 1360 01b6 07       		.uleb128 0x7
 1361 01b7 3C       		.byte	0x3c
 1362 01b8 07       		.byte	0x7
 1363 01b9 36       		.byte	0x36
 1364 01ba E3010000 		.4byte	0x1e3
 1365 01be 09       		.uleb128 0x9
 1366 01bf 28060000 		.4byte	.LASF31
 1367 01c3 07       		.byte	0x7
 1368 01c4 37       		.byte	0x37
 1369 01c5 9B010000 		.4byte	0x19b
 1370 01c9 00       		.byte	0
 1371 01ca 09       		.uleb128 0x9
 1372 01cb 7A020000 		.4byte	.LASF32
 1373 01cf 07       		.byte	0x7
 1374 01d0 38       		.byte	0x38
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 42


 1375 01d1 9B010000 		.4byte	0x19b
 1376 01d5 14       		.byte	0x14
 1377 01d6 09       		.uleb128 0x9
 1378 01d7 59050000 		.4byte	.LASF33
 1379 01db 07       		.byte	0x7
 1380 01dc 39       		.byte	0x39
 1381 01dd 9B010000 		.4byte	0x19b
 1382 01e1 28       		.byte	0x28
 1383 01e2 00       		.byte	0
 1384 01e3 03       		.uleb128 0x3
 1385 01e4 E3010000 		.4byte	.LASF34
 1386 01e8 07       		.byte	0x7
 1387 01e9 3B       		.byte	0x3b
 1388 01ea B6010000 		.4byte	0x1b6
 1389 01ee 07       		.uleb128 0x7
 1390 01ef 20       		.byte	0x20
 1391 01f0 07       		.byte	0x7
 1392 01f1 3D       		.byte	0x3d
 1393 01f2 57020000 		.4byte	0x257
 1394 01f6 09       		.uleb128 0x9
 1395 01f7 0B020000 		.4byte	.LASF35
 1396 01fb 07       		.byte	0x7
 1397 01fc 3E       		.byte	0x3e
 1398 01fd 68000000 		.4byte	0x68
 1399 0201 00       		.byte	0
 1400 0202 08       		.uleb128 0x8
 1401 0203 62657200 		.ascii	"ber\000"
 1402 0207 07       		.byte	0x7
 1403 0208 3F       		.byte	0x3f
 1404 0209 68000000 		.4byte	0x68
 1405 020d 04       		.byte	0x4
 1406 020e 09       		.uleb128 0x9
 1407 020f 3E050000 		.4byte	.LASF36
 1408 0213 07       		.byte	0x7
 1409 0214 40       		.byte	0x40
 1410 0215 68000000 		.4byte	0x68
 1411 0219 08       		.byte	0x8
 1412 021a 09       		.uleb128 0x9
 1413 021b 8E010000 		.4byte	.LASF37
 1414 021f 07       		.byte	0x7
 1415 0220 41       		.byte	0x41
 1416 0221 68000000 		.4byte	0x68
 1417 0225 0C       		.byte	0xc
 1418 0226 09       		.uleb128 0x9
 1419 0227 11050000 		.4byte	.LASF38
 1420 022b 07       		.byte	0x7
 1421 022c 42       		.byte	0x42
 1422 022d 68000000 		.4byte	0x68
 1423 0231 10       		.byte	0x10
 1424 0232 09       		.uleb128 0x9
 1425 0233 5E050000 		.4byte	.LASF39
 1426 0237 07       		.byte	0x7
 1427 0238 43       		.byte	0x43
 1428 0239 68000000 		.4byte	0x68
 1429 023d 14       		.byte	0x14
 1430 023e 09       		.uleb128 0x9
 1431 023f A7010000 		.4byte	.LASF40
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 43


 1432 0243 07       		.byte	0x7
 1433 0244 44       		.byte	0x44
 1434 0245 68000000 		.4byte	0x68
 1435 0249 18       		.byte	0x18
 1436 024a 09       		.uleb128 0x9
 1437 024b 45030000 		.4byte	.LASF41
 1438 024f 07       		.byte	0x7
 1439 0250 45       		.byte	0x45
 1440 0251 68000000 		.4byte	0x68
 1441 0255 1C       		.byte	0x1c
 1442 0256 00       		.byte	0
 1443 0257 03       		.uleb128 0x3
 1444 0258 71050000 		.4byte	.LASF42
 1445 025c 07       		.byte	0x7
 1446 025d 47       		.byte	0x47
 1447 025e EE010000 		.4byte	0x1ee
 1448 0262 07       		.uleb128 0x7
 1449 0263 0A       		.byte	0xa
 1450 0264 07       		.byte	0x7
 1451 0265 53       		.byte	0x53
 1452 0266 E3020000 		.4byte	0x2e3
 1453 026a 09       		.uleb128 0x9
 1454 026b 62020000 		.4byte	.LASF43
 1455 026f 07       		.byte	0x7
 1456 0270 55       		.byte	0x55
 1457 0271 81000000 		.4byte	0x81
 1458 0275 00       		.byte	0
 1459 0276 09       		.uleb128 0x9
 1460 0277 1F070000 		.4byte	.LASF44
 1461 027b 07       		.byte	0x7
 1462 027c 57       		.byte	0x57
 1463 027d E3020000 		.4byte	0x2e3
 1464 0281 01       		.byte	0x1
 1465 0282 09       		.uleb128 0x9
 1466 0283 08060000 		.4byte	.LASF45
 1467 0287 07       		.byte	0x7
 1468 0288 59       		.byte	0x59
 1469 0289 81000000 		.4byte	0x81
 1470 028d 02       		.byte	0x2
 1471 028e 09       		.uleb128 0x9
 1472 028f 34050000 		.4byte	.LASF46
 1473 0293 07       		.byte	0x7
 1474 0294 5B       		.byte	0x5b
 1475 0295 81000000 		.4byte	0x81
 1476 0299 03       		.byte	0x3
 1477 029a 09       		.uleb128 0x9
 1478 029b 92020000 		.4byte	.LASF47
 1479 029f 07       		.byte	0x7
 1480 02a0 5E       		.byte	0x5e
 1481 02a1 81000000 		.4byte	0x81
 1482 02a5 04       		.byte	0x4
 1483 02a6 09       		.uleb128 0x9
 1484 02a7 AB060000 		.4byte	.LASF48
 1485 02ab 07       		.byte	0x7
 1486 02ac 63       		.byte	0x63
 1487 02ad 81000000 		.4byte	0x81
 1488 02b1 05       		.byte	0x5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 44


 1489 02b2 09       		.uleb128 0x9
 1490 02b3 90050000 		.4byte	.LASF49
 1491 02b7 07       		.byte	0x7
 1492 02b8 65       		.byte	0x65
 1493 02b9 81000000 		.4byte	0x81
 1494 02bd 06       		.byte	0x6
 1495 02be 09       		.uleb128 0x9
 1496 02bf 2F060000 		.4byte	.LASF50
 1497 02c3 07       		.byte	0x7
 1498 02c4 66       		.byte	0x66
 1499 02c5 81000000 		.4byte	0x81
 1500 02c9 07       		.byte	0x7
 1501 02ca 09       		.uleb128 0x9
 1502 02cb 06050000 		.4byte	.LASF51
 1503 02cf 07       		.byte	0x7
 1504 02d0 67       		.byte	0x67
 1505 02d1 81000000 		.4byte	0x81
 1506 02d5 08       		.byte	0x8
 1507 02d6 09       		.uleb128 0x9
 1508 02d7 00070000 		.4byte	.LASF52
 1509 02db 07       		.byte	0x7
 1510 02dc 68       		.byte	0x68
 1511 02dd 81000000 		.4byte	0x81
 1512 02e1 09       		.byte	0x9
 1513 02e2 00       		.byte	0
 1514 02e3 02       		.uleb128 0x2
 1515 02e4 01       		.byte	0x1
 1516 02e5 02       		.byte	0x2
 1517 02e6 C1040000 		.4byte	.LASF53
 1518 02ea 03       		.uleb128 0x3
 1519 02eb 8A030000 		.4byte	.LASF54
 1520 02ef 07       		.byte	0x7
 1521 02f0 6E       		.byte	0x6e
 1522 02f1 62020000 		.4byte	0x262
 1523 02f5 07       		.uleb128 0x7
 1524 02f6 06       		.byte	0x6
 1525 02f7 08       		.byte	0x8
 1526 02f8 35       		.byte	0x35
 1527 02f9 2E030000 		.4byte	0x32e
 1528 02fd 09       		.uleb128 0x9
 1529 02fe 83020000 		.4byte	.LASF55
 1530 0302 08       		.byte	0x8
 1531 0303 37       		.byte	0x37
 1532 0304 8D000000 		.4byte	0x8d
 1533 0308 00       		.byte	0
 1534 0309 09       		.uleb128 0x9
 1535 030a 1A020000 		.4byte	.LASF56
 1536 030e 08       		.byte	0x8
 1537 030f 38       		.byte	0x38
 1538 0310 99000000 		.4byte	0x99
 1539 0314 02       		.byte	0x2
 1540 0315 09       		.uleb128 0x9
 1541 0316 11070000 		.4byte	.LASF57
 1542 031a 08       		.byte	0x8
 1543 031b 39       		.byte	0x39
 1544 031c 81000000 		.4byte	0x81
 1545 0320 04       		.byte	0x4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 45


 1546 0321 09       		.uleb128 0x9
 1547 0322 A9040000 		.4byte	.LASF58
 1548 0326 08       		.byte	0x8
 1549 0327 3A       		.byte	0x3a
 1550 0328 81000000 		.4byte	0x81
 1551 032c 05       		.byte	0x5
 1552 032d 00       		.byte	0
 1553 032e 03       		.uleb128 0x3
 1554 032f 30020000 		.4byte	.LASF59
 1555 0333 08       		.byte	0x8
 1556 0334 3D       		.byte	0x3d
 1557 0335 39030000 		.4byte	0x339
 1558 0339 06       		.uleb128 0x6
 1559 033a F5020000 		.4byte	0x2f5
 1560 033e 07       		.uleb128 0x7
 1561 033f 1C       		.byte	0x1c
 1562 0340 08       		.byte	0x8
 1563 0341 40       		.byte	0x40
 1564 0342 5F030000 		.4byte	0x35f
 1565 0346 09       		.uleb128 0x9
 1566 0347 15030000 		.4byte	.LASF60
 1567 034b 08       		.byte	0x8
 1568 034c 42       		.byte	0x42
 1569 034d 5F030000 		.4byte	0x35f
 1570 0351 00       		.byte	0
 1571 0352 09       		.uleb128 0x9
 1572 0353 6C020000 		.4byte	.LASF61
 1573 0357 08       		.byte	0x8
 1574 0358 43       		.byte	0x43
 1575 0359 5E010000 		.4byte	0x15e
 1576 035d 04       		.byte	0x4
 1577 035e 00       		.byte	0
 1578 035f 0C       		.uleb128 0xc
 1579 0360 04       		.byte	0x4
 1580 0361 E3010000 		.4byte	0x1e3
 1581 0365 03       		.uleb128 0x3
 1582 0366 7F030000 		.4byte	.LASF62
 1583 036a 08       		.byte	0x8
 1584 036b 45       		.byte	0x45
 1585 036c 3E030000 		.4byte	0x33e
 1586 0370 07       		.uleb128 0x7
 1587 0371 68       		.byte	0x68
 1588 0372 08       		.byte	0x8
 1589 0373 4B       		.byte	0x4b
 1590 0374 91030000 		.4byte	0x391
 1591 0378 09       		.uleb128 0x9
 1592 0379 20030000 		.4byte	.LASF63
 1593 037d 08       		.byte	0x8
 1594 037e 50       		.byte	0x50
 1595 037f 91030000 		.4byte	0x391
 1596 0383 00       		.byte	0
 1597 0384 09       		.uleb128 0x9
 1598 0385 0D030000 		.4byte	.LASF64
 1599 0389 08       		.byte	0x8
 1600 038a 51       		.byte	0x51
 1601 038b 68000000 		.4byte	0x68
 1602 038f 64       		.byte	0x64
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 46


 1603 0390 00       		.byte	0
 1604 0391 0A       		.uleb128 0xa
 1605 0392 CB000000 		.4byte	0xcb
 1606 0396 A1030000 		.4byte	0x3a1
 1607 039a 0B       		.uleb128 0xb
 1608 039b 57010000 		.4byte	0x157
 1609 039f 63       		.byte	0x63
 1610 03a0 00       		.byte	0
 1611 03a1 03       		.uleb128 0x3
 1612 03a2 B8060000 		.4byte	.LASF65
 1613 03a6 08       		.byte	0x8
 1614 03a7 57       		.byte	0x57
 1615 03a8 70030000 		.4byte	0x370
 1616 03ac 0D       		.uleb128 0xd
 1617 03ad 33000000 		.4byte	.LASF66
 1618 03b1 01       		.byte	0x1
 1619 03b2 36       		.byte	0x36
 1620 03b3 00000000 		.4byte	.LFB64
 1621 03b7 0E000000 		.4byte	.LFE64-.LFB64
 1622 03bb 01       		.uleb128 0x1
 1623 03bc 9C       		.byte	0x9c
 1624 03bd 0D       		.uleb128 0xd
 1625 03be 4C060000 		.4byte	.LASF67
 1626 03c2 01       		.byte	0x1
 1627 03c3 51       		.byte	0x51
 1628 03c4 00000000 		.4byte	.LFB65
 1629 03c8 0E000000 		.4byte	.LFE65-.LFB65
 1630 03cc 01       		.uleb128 0x1
 1631 03cd 9C       		.byte	0x9c
 1632 03ce 0D       		.uleb128 0xd
 1633 03cf F1040000 		.4byte	.LASF68
 1634 03d3 01       		.byte	0x1
 1635 03d4 6C       		.byte	0x6c
 1636 03d5 00000000 		.4byte	.LFB66
 1637 03d9 0E000000 		.4byte	.LFE66-.LFB66
 1638 03dd 01       		.uleb128 0x1
 1639 03de 9C       		.byte	0x9c
 1640 03df 0D       		.uleb128 0xd
 1641 03e0 93010000 		.4byte	.LASF69
 1642 03e4 01       		.byte	0x1
 1643 03e5 87       		.byte	0x87
 1644 03e6 00000000 		.4byte	.LFB67
 1645 03ea 0E000000 		.4byte	.LFE67-.LFB67
 1646 03ee 01       		.uleb128 0x1
 1647 03ef 9C       		.byte	0x9c
 1648 03f0 0D       		.uleb128 0xd
 1649 03f1 3C040000 		.4byte	.LASF70
 1650 03f5 01       		.byte	0x1
 1651 03f6 A2       		.byte	0xa2
 1652 03f7 00000000 		.4byte	.LFB68
 1653 03fb 0E000000 		.4byte	.LFE68-.LFB68
 1654 03ff 01       		.uleb128 0x1
 1655 0400 9C       		.byte	0x9c
 1656 0401 0D       		.uleb128 0xd
 1657 0402 54070000 		.4byte	.LASF71
 1658 0406 01       		.byte	0x1
 1659 0407 BD       		.byte	0xbd
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 47


 1660 0408 00000000 		.4byte	.LFB69
 1661 040c 0E000000 		.4byte	.LFE69-.LFB69
 1662 0410 01       		.uleb128 0x1
 1663 0411 9C       		.byte	0x9c
 1664 0412 0D       		.uleb128 0xd
 1665 0413 56000000 		.4byte	.LASF72
 1666 0417 01       		.byte	0x1
 1667 0418 D8       		.byte	0xd8
 1668 0419 00000000 		.4byte	.LFB70
 1669 041d 0E000000 		.4byte	.LFE70-.LFB70
 1670 0421 01       		.uleb128 0x1
 1671 0422 9C       		.byte	0x9c
 1672 0423 0E       		.uleb128 0xe
 1673 0424 00000000 		.4byte	.LASF122
 1674 0428 01       		.byte	0x1
 1675 0429 0B01     		.2byte	0x10b
 1676 042b 00000000 		.4byte	.LFB71
 1677 042f 18060000 		.4byte	.LFE71-.LFB71
 1678 0433 01       		.uleb128 0x1
 1679 0434 9C       		.byte	0x9c
 1680 0435 49040000 		.4byte	0x449
 1681 0439 0F       		.uleb128 0xf
 1682 043a 63060000 		.4byte	.LASF123
 1683 043e 01       		.byte	0x1
 1684 043f 0D01     		.2byte	0x10d
 1685 0441 81000000 		.4byte	0x81
 1686 0445 02       		.uleb128 0x2
 1687 0446 91       		.byte	0x91
 1688 0447 77       		.sleb128 -9
 1689 0448 00       		.byte	0
 1690 0449 10       		.uleb128 0x10
 1691 044a E9050000 		.4byte	.LASF73
 1692 044e 05       		.byte	0x5
 1693 044f 2D01     		.2byte	0x12d
 1694 0451 40010000 		.4byte	0x140
 1695 0455 10       		.uleb128 0x10
 1696 0456 DD040000 		.4byte	.LASF74
 1697 045a 05       		.byte	0x5
 1698 045b 2E01     		.2byte	0x12e
 1699 045d 40010000 		.4byte	0x140
 1700 0461 10       		.uleb128 0x10
 1701 0462 28030000 		.4byte	.LASF75
 1702 0466 05       		.byte	0x5
 1703 0467 3901     		.2byte	0x139
 1704 0469 D2000000 		.4byte	0xd2
 1705 046d 10       		.uleb128 0x10
 1706 046e 9E020000 		.4byte	.LASF76
 1707 0472 05       		.byte	0x5
 1708 0473 3A01     		.2byte	0x13a
 1709 0475 D2000000 		.4byte	0xd2
 1710 0479 10       		.uleb128 0x10
 1711 047a 16050000 		.4byte	.LASF77
 1712 047e 05       		.byte	0x5
 1713 047f 3B01     		.2byte	0x13b
 1714 0481 D2000000 		.4byte	0xd2
 1715 0485 10       		.uleb128 0x10
 1716 0486 3C020000 		.4byte	.LASF78
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 48


 1717 048a 05       		.byte	0x5
 1718 048b 3C01     		.2byte	0x13c
 1719 048d D2000000 		.4byte	0xd2
 1720 0491 0A       		.uleb128 0xa
 1721 0492 A1040000 		.4byte	0x4a1
 1722 0496 A1040000 		.4byte	0x4a1
 1723 049a 0B       		.uleb128 0xb
 1724 049b 57010000 		.4byte	0x157
 1725 049f 0B       		.byte	0xb
 1726 04a0 00       		.byte	0
 1727 04a1 11       		.uleb128 0x11
 1728 04a2 81000000 		.4byte	0x81
 1729 04a6 10       		.uleb128 0x10
 1730 04a7 B3030000 		.4byte	.LASF79
 1731 04ab 05       		.byte	0x5
 1732 04ac 3E01     		.2byte	0x13e
 1733 04ae B2040000 		.4byte	0x4b2
 1734 04b2 11       		.uleb128 0x11
 1735 04b3 91040000 		.4byte	0x491
 1736 04b7 10       		.uleb128 0x10
 1737 04b8 46010000 		.4byte	.LASF80
 1738 04bc 09       		.byte	0x9
 1739 04bd 1207     		.2byte	0x712
 1740 04bf C3040000 		.4byte	0x4c3
 1741 04c3 06       		.uleb128 0x6
 1742 04c4 76000000 		.4byte	0x76
 1743 04c8 12       		.uleb128 0x12
 1744 04c9 23000000 		.4byte	.LASF81
 1745 04cd 06       		.byte	0x6
 1746 04ce 11       		.byte	0x11
 1747 04cf E3020000 		.4byte	0x2e3
 1748 04d3 05       		.uleb128 0x5
 1749 04d4 03       		.byte	0x3
 1750 04d5 00000000 		.4byte	buffer_overflow
 1751 04d9 12       		.uleb128 0x12
 1752 04da A1030000 		.4byte	.LASF82
 1753 04de 06       		.byte	0x6
 1754 04df 22       		.byte	0x22
 1755 04e0 8D000000 		.4byte	0x8d
 1756 04e4 05       		.uleb128 0x5
 1757 04e5 03       		.byte	0x3
 1758 04e6 00000000 		.4byte	dataPointsInStack
 1759 04ea 12       		.uleb128 0x12
 1760 04eb 92060000 		.4byte	.LASF83
 1761 04ef 06       		.byte	0x6
 1762 04f0 23       		.byte	0x23
 1763 04f1 8D000000 		.4byte	0x8d
 1764 04f5 05       		.uleb128 0x5
 1765 04f6 03       		.byte	0x3
 1766 04f7 00000000 		.4byte	dataPointsInStackDesired
 1767 04fb 0A       		.uleb128 0xa
 1768 04fc AB010000 		.4byte	0x1ab
 1769 0500 0B050000 		.4byte	0x50b
 1770 0504 0B       		.uleb128 0xb
 1771 0505 57010000 		.4byte	0x157
 1772 0509 95       		.byte	0x95
 1773 050a 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 49


 1774 050b 12       		.uleb128 0x12
 1775 050c 08030000 		.4byte	.LASF84
 1776 0510 06       		.byte	0x6
 1777 0511 24       		.byte	0x24
 1778 0512 FB040000 		.4byte	0x4fb
 1779 0516 05       		.uleb128 0x5
 1780 0517 03       		.byte	0x3
 1781 0518 00000000 		.4byte	data
 1782 051c 12       		.uleb128 0x12
 1783 051d 2D010000 		.4byte	.LASF85
 1784 0521 07       		.byte	0x7
 1785 0522 20       		.byte	0x20
 1786 0523 81000000 		.4byte	0x81
 1787 0527 05       		.uleb128 0x5
 1788 0528 03       		.byte	0x3
 1789 0529 00000000 		.4byte	modem_state
 1790 052d 12       		.uleb128 0x12
 1791 052e 68030000 		.4byte	.LASF86
 1792 0532 07       		.byte	0x7
 1793 0533 71       		.byte	0x71
 1794 0534 A5000000 		.4byte	0xa5
 1795 0538 05       		.uleb128 0x5
 1796 0539 03       		.byte	0x3
 1797 053a 00000000 		.4byte	modem_start_time_stamp
 1798 053e 12       		.uleb128 0x12
 1799 053f 15030000 		.4byte	.LASF60
 1800 0543 07       		.byte	0x7
 1801 0544 72       		.byte	0x72
 1802 0545 E3010000 		.4byte	0x1e3
 1803 0549 05       		.uleb128 0x5
 1804 054a 03       		.byte	0x3
 1805 054b 00000000 		.4byte	modem_info
 1806 054f 12       		.uleb128 0x12
 1807 0550 53010000 		.4byte	.LASF87
 1808 0554 07       		.byte	0x7
 1809 0555 73       		.byte	0x73
 1810 0556 57020000 		.4byte	0x257
 1811 055a 05       		.uleb128 0x5
 1812 055b 03       		.byte	0x3
 1813 055c 00000000 		.4byte	modem_stats
 1814 0560 12       		.uleb128 0x12
 1815 0561 27040000 		.4byte	.LASF88
 1816 0565 07       		.byte	0x7
 1817 0566 74       		.byte	0x74
 1818 0567 EA020000 		.4byte	0x2ea
 1819 056b 05       		.uleb128 0x5
 1820 056c 03       		.byte	0x3
 1821 056d 00000000 		.4byte	updatable_parameters
 1822 0571 12       		.uleb128 0x12
 1823 0572 C1020000 		.4byte	.LASF89
 1824 0576 0A       		.byte	0xa
 1825 0577 07       		.byte	0x7
 1826 0578 81000000 		.4byte	0x81
 1827 057c 05       		.uleb128 0x5
 1828 057d 03       		.byte	0x3
 1829 057e 00000000 		.4byte	App_LED_enabled
 1830 0582 12       		.uleb128 0x12
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 50


 1831 0583 46070000 		.4byte	.LASF90
 1832 0587 0A       		.byte	0xa
 1833 0588 08       		.byte	0x8
 1834 0589 91030000 		.4byte	0x391
 1835 058d 05       		.uleb128 0x5
 1836 058e 03       		.byte	0x3
 1837 058f 00000000 		.4byte	app_led_inbox
 1838 0593 12       		.uleb128 0x12
 1839 0594 A2050000 		.4byte	.LASF91
 1840 0598 0B       		.byte	0xb
 1841 0599 25       		.byte	0x25
 1842 059a 91030000 		.4byte	0x391
 1843 059e 05       		.uleb128 0x5
 1844 059f 03       		.byte	0x3
 1845 05a0 00000000 		.4byte	level_sensor_inbox
 1846 05a4 12       		.uleb128 0x12
 1847 05a5 7D060000 		.4byte	.LASF92
 1848 05a9 0B       		.byte	0xb
 1849 05aa 27       		.byte	0x27
 1850 05ab E3020000 		.4byte	0x2e3
 1851 05af 05       		.uleb128 0x5
 1852 05b0 03       		.byte	0x3
 1853 05b1 00000000 		.4byte	level_sensor_enabled
 1854 05b5 12       		.uleb128 0x12
 1855 05b6 D4010000 		.4byte	.LASF93
 1856 05ba 0C       		.byte	0xc
 1857 05bb 2A       		.byte	0x2a
 1858 05bc B1000000 		.4byte	0xb1
 1859 05c0 05       		.uleb128 0x5
 1860 05c1 03       		.byte	0x3
 1861 05c2 00000000 		.4byte	valve_diameter
 1862 05c6 0A       		.uleb128 0xa
 1863 05c7 CB000000 		.4byte	0xcb
 1864 05cb D6050000 		.4byte	0x5d6
 1865 05cf 0B       		.uleb128 0xb
 1866 05d0 57010000 		.4byte	0x157
 1867 05d4 09       		.byte	0x9
 1868 05d5 00       		.byte	0
 1869 05d6 12       		.uleb128 0x12
 1870 05d7 D6030000 		.4byte	.LASF94
 1871 05db 0C       		.byte	0xc
 1872 05dc 2B       		.byte	0x2b
 1873 05dd C6050000 		.4byte	0x5c6
 1874 05e1 05       		.uleb128 0x5
 1875 05e2 03       		.byte	0x3
 1876 05e3 00000000 		.4byte	valve_type
 1877 05e7 12       		.uleb128 0x12
 1878 05e8 63050000 		.4byte	.LASF95
 1879 05ec 0C       		.byte	0xc
 1880 05ed 30       		.byte	0x30
 1881 05ee 81000000 		.4byte	0x81
 1882 05f2 05       		.uleb128 0x5
 1883 05f3 03       		.byte	0x3
 1884 05f4 00000000 		.4byte	valve_enabled
 1885 05f8 12       		.uleb128 0x12
 1886 05f9 F4060000 		.4byte	.LASF96
 1887 05fd 0C       		.byte	0xc
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 51


 1888 05fe 31       		.byte	0x31
 1889 05ff 91030000 		.4byte	0x391
 1890 0603 05       		.uleb128 0x5
 1891 0604 03       		.byte	0x3
 1892 0605 00000000 		.4byte	valve_inbox
 1893 0609 12       		.uleb128 0x12
 1894 060a 0F000000 		.4byte	.LASF97
 1895 060e 0D       		.byte	0xd
 1896 060f 69       		.byte	0x69
 1897 0610 81000000 		.4byte	0x81
 1898 0614 05       		.uleb128 0x5
 1899 0615 03       		.byte	0x3
 1900 0616 00000000 		.4byte	autosampler_enabled
 1901 061a 12       		.uleb128 0x12
 1902 061b C4030000 		.4byte	.LASF98
 1903 061f 0D       		.byte	0xd
 1904 0620 6B       		.byte	0x6b
 1905 0621 91030000 		.4byte	0x391
 1906 0625 05       		.uleb128 0x5
 1907 0626 03       		.byte	0x3
 1908 0627 00000000 		.4byte	autosampler_inbox
 1909 062b 0A       		.uleb128 0xa
 1910 062c CB000000 		.4byte	0xcb
 1911 0630 3C060000 		.4byte	0x63c
 1912 0634 13       		.uleb128 0x13
 1913 0635 57010000 		.4byte	0x157
 1914 0639 0F27     		.2byte	0x270f
 1915 063b 00       		.byte	0
 1916 063c 12       		.uleb128 0x12
 1917 063d 32070000 		.4byte	.LASF99
 1918 0641 08       		.byte	0x8
 1919 0642 1F       		.byte	0x1f
 1920 0643 2B060000 		.4byte	0x62b
 1921 0647 05       		.uleb128 0x5
 1922 0648 03       		.byte	0x3
 1923 0649 00000000 		.4byte	http_request
 1924 064d 12       		.uleb128 0x12
 1925 064e CA010000 		.4byte	.LASF100
 1926 0652 08       		.byte	0x8
 1927 0653 20       		.byte	0x20
 1928 0654 2B060000 		.4byte	0x62b
 1929 0658 05       		.uleb128 0x5
 1930 0659 03       		.byte	0x3
 1931 065a 00000000 		.4byte	http_body
 1932 065e 0A       		.uleb128 0xa
 1933 065f CB000000 		.4byte	0xcb
 1934 0663 6E060000 		.4byte	0x66e
 1935 0667 0B       		.uleb128 0xb
 1936 0668 57010000 		.4byte	0x157
 1937 066c C7       		.byte	0xc7
 1938 066d 00       		.byte	0
 1939 066e 12       		.uleb128 0x12
 1940 066f DE050000 		.4byte	.LASF101
 1941 0673 08       		.byte	0x8
 1942 0674 21       		.byte	0x21
 1943 0675 5E060000 		.4byte	0x65e
 1944 0679 05       		.uleb128 0x5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 52


 1945 067a 03       		.byte	0x3
 1946 067b 00000000 		.4byte	http_route
 1947 067f 12       		.uleb128 0x12
 1948 0680 4D050000 		.4byte	.LASF102
 1949 0684 08       		.byte	0x8
 1950 0685 48       		.byte	0x48
 1951 0686 65030000 		.4byte	0x365
 1952 068a 05       		.uleb128 0x5
 1953 068b 03       		.byte	0x3
 1954 068c 00000000 		.4byte	system_info
 1955 0690 12       		.uleb128 0x12
 1956 0691 58030000 		.4byte	.LASF103
 1957 0695 08       		.byte	0x8
 1958 0696 5A       		.byte	0x5a
 1959 0697 A1030000 		.4byte	0x3a1
 1960 069b 05       		.uleb128 0x5
 1961 069c 03       		.byte	0x3
 1962 069d 00000000 		.4byte	system_settings
 1963 06a1 12       		.uleb128 0x12
 1964 06a2 39010000 		.4byte	.LASF104
 1965 06a6 08       		.byte	0x8
 1966 06a7 76       		.byte	0x76
 1967 06a8 2E030000 		.4byte	0x32e
 1968 06ac 05       		.uleb128 0x5
 1969 06ad 03       		.byte	0x3
 1970 06ae 00000000 		.4byte	alarmMeasure
 1971 06b2 12       		.uleb128 0x12
 1972 06b3 EF020000 		.4byte	.LASF105
 1973 06b7 08       		.byte	0x8
 1974 06b8 77       		.byte	0x77
 1975 06b9 81000000 		.4byte	0x81
 1976 06bd 05       		.uleb128 0x5
 1977 06be 03       		.byte	0x3
 1978 06bf 00000000 		.4byte	timeToMeasure
 1979 06c3 12       		.uleb128 0x12
 1980 06c4 B7020000 		.4byte	.LASF106
 1981 06c8 08       		.byte	0x8
 1982 06c9 78       		.byte	0x78
 1983 06ca 2E030000 		.4byte	0x32e
 1984 06ce 05       		.uleb128 0x5
 1985 06cf 03       		.byte	0x3
 1986 06d0 00000000 		.4byte	alarmSync
 1987 06d4 12       		.uleb128 0x12
 1988 06d5 BF010000 		.4byte	.LASF107
 1989 06d9 08       		.byte	0x8
 1990 06da 79       		.byte	0x79
 1991 06db 81000000 		.4byte	0x81
 1992 06df 05       		.uleb128 0x5
 1993 06e0 03       		.byte	0x3
 1994 06e1 00000000 		.4byte	timeToSync
 1995 06e5 12       		.uleb128 0x12
 1996 06e6 F8030000 		.4byte	.LASF108
 1997 06ea 08       		.byte	0x8
 1998 06eb 7A       		.byte	0x7a
 1999 06ec 81000000 		.4byte	0x81
 2000 06f0 05       		.uleb128 0x5
 2001 06f1 03       		.byte	0x3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 53


 2002 06f2 00000000 		.4byte	timeToSycnRemoteParams
 2003 06f6 14       		.uleb128 0x14
 2004 06f7 68657900 		.ascii	"hey\000"
 2005 06fb 08       		.byte	0x8
 2006 06fc 7B       		.byte	0x7b
 2007 06fd 81000000 		.4byte	0x81
 2008 0701 05       		.uleb128 0x5
 2009 0702 03       		.byte	0x3
 2010 0703 00000000 		.4byte	hey
 2011 0707 12       		.uleb128 0x12
 2012 0708 39030000 		.4byte	.LASF109
 2013 070c 08       		.byte	0x8
 2014 070d 7F       		.byte	0x7f
 2015 070e 2E030000 		.4byte	0x32e
 2016 0712 05       		.uleb128 0x5
 2017 0713 03       		.byte	0x3
 2018 0714 00000000 		.4byte	alarmAppLED
 2019 0718 12       		.uleb128 0x12
 2020 0719 4F020000 		.4byte	.LASF110
 2021 071d 08       		.byte	0x8
 2022 071e 80       		.byte	0x80
 2023 071f 81000000 		.4byte	0x81
 2024 0723 05       		.uleb128 0x5
 2025 0724 03       		.byte	0x3
 2026 0725 00000000 		.4byte	timeToAppLED
 2027 0729 12       		.uleb128 0x12
 2028 072a 7F050000 		.4byte	.LASF111
 2029 072e 08       		.byte	0x8
 2030 072f 82       		.byte	0x82
 2031 0730 2E030000 		.4byte	0x32e
 2032 0734 05       		.uleb128 0x5
 2033 0735 03       		.byte	0x3
 2034 0736 00000000 		.4byte	alarmLevelSensor
 2035 073a 12       		.uleb128 0x12
 2036 073b 6B060000 		.4byte	.LASF112
 2037 073f 08       		.byte	0x8
 2038 0740 83       		.byte	0x83
 2039 0741 81000000 		.4byte	0x81
 2040 0745 05       		.uleb128 0x5
 2041 0746 03       		.byte	0x3
 2042 0747 00000000 		.4byte	timeToLevelSensor
 2043 074b 12       		.uleb128 0x12
 2044 074c F0010000 		.4byte	.LASF113
 2045 0750 08       		.byte	0x8
 2046 0751 85       		.byte	0x85
 2047 0752 2E030000 		.4byte	0x32e
 2048 0756 05       		.uleb128 0x5
 2049 0757 03       		.byte	0x3
 2050 0758 00000000 		.4byte	alarmDownstreamLevelSensor
 2051 075c 12       		.uleb128 0x12
 2052 075d C7060000 		.4byte	.LASF114
 2053 0761 08       		.byte	0x8
 2054 0762 86       		.byte	0x86
 2055 0763 81000000 		.4byte	0x81
 2056 0767 05       		.uleb128 0x5
 2057 0768 03       		.byte	0x3
 2058 0769 00000000 		.4byte	timeToDownstreamLevelSensor
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 54


 2059 076d 12       		.uleb128 0x12
 2060 076e D3050000 		.4byte	.LASF115
 2061 0772 08       		.byte	0x8
 2062 0773 88       		.byte	0x88
 2063 0774 2E030000 		.4byte	0x32e
 2064 0778 05       		.uleb128 0x5
 2065 0779 03       		.byte	0x3
 2066 077a 00000000 		.4byte	alarmValve
 2067 077e 12       		.uleb128 0x12
 2068 077f 92040000 		.4byte	.LASF116
 2069 0783 08       		.byte	0x8
 2070 0784 89       		.byte	0x89
 2071 0785 81000000 		.4byte	0x81
 2072 0789 05       		.uleb128 0x5
 2073 078a 03       		.byte	0x3
 2074 078b 00000000 		.4byte	timeToValve
 2075 078f 12       		.uleb128 0x12
 2076 0790 E3060000 		.4byte	.LASF117
 2077 0794 08       		.byte	0x8
 2078 0795 8B       		.byte	0x8b
 2079 0796 2E030000 		.4byte	0x32e
 2080 079a 05       		.uleb128 0x5
 2081 079b 03       		.byte	0x3
 2082 079c 00000000 		.4byte	alarmAutosampler
 2083 07a0 12       		.uleb128 0x12
 2084 07a1 6B000000 		.4byte	.LASF118
 2085 07a5 08       		.byte	0x8
 2086 07a6 8C       		.byte	0x8c
 2087 07a7 81000000 		.4byte	0x81
 2088 07ab 05       		.uleb128 0x5
 2089 07ac 03       		.byte	0x3
 2090 07ad 00000000 		.4byte	timeToAutosampler
 2091 07b1 00       		.byte	0
 2092              		.section	.debug_abbrev,"",%progbits
 2093              	.Ldebug_abbrev0:
 2094 0000 01       		.uleb128 0x1
 2095 0001 11       		.uleb128 0x11
 2096 0002 01       		.byte	0x1
 2097 0003 25       		.uleb128 0x25
 2098 0004 0E       		.uleb128 0xe
 2099 0005 13       		.uleb128 0x13
 2100 0006 0B       		.uleb128 0xb
 2101 0007 03       		.uleb128 0x3
 2102 0008 0E       		.uleb128 0xe
 2103 0009 1B       		.uleb128 0x1b
 2104 000a 0E       		.uleb128 0xe
 2105 000b 55       		.uleb128 0x55
 2106 000c 17       		.uleb128 0x17
 2107 000d 11       		.uleb128 0x11
 2108 000e 01       		.uleb128 0x1
 2109 000f 10       		.uleb128 0x10
 2110 0010 17       		.uleb128 0x17
 2111 0011 00       		.byte	0
 2112 0012 00       		.byte	0
 2113 0013 02       		.uleb128 0x2
 2114 0014 24       		.uleb128 0x24
 2115 0015 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 55


 2116 0016 0B       		.uleb128 0xb
 2117 0017 0B       		.uleb128 0xb
 2118 0018 3E       		.uleb128 0x3e
 2119 0019 0B       		.uleb128 0xb
 2120 001a 03       		.uleb128 0x3
 2121 001b 0E       		.uleb128 0xe
 2122 001c 00       		.byte	0
 2123 001d 00       		.byte	0
 2124 001e 03       		.uleb128 0x3
 2125 001f 16       		.uleb128 0x16
 2126 0020 00       		.byte	0
 2127 0021 03       		.uleb128 0x3
 2128 0022 0E       		.uleb128 0xe
 2129 0023 3A       		.uleb128 0x3a
 2130 0024 0B       		.uleb128 0xb
 2131 0025 3B       		.uleb128 0x3b
 2132 0026 0B       		.uleb128 0xb
 2133 0027 49       		.uleb128 0x49
 2134 0028 13       		.uleb128 0x13
 2135 0029 00       		.byte	0
 2136 002a 00       		.byte	0
 2137 002b 04       		.uleb128 0x4
 2138 002c 24       		.uleb128 0x24
 2139 002d 00       		.byte	0
 2140 002e 0B       		.uleb128 0xb
 2141 002f 0B       		.uleb128 0xb
 2142 0030 3E       		.uleb128 0x3e
 2143 0031 0B       		.uleb128 0xb
 2144 0032 03       		.uleb128 0x3
 2145 0033 08       		.uleb128 0x8
 2146 0034 00       		.byte	0
 2147 0035 00       		.byte	0
 2148 0036 05       		.uleb128 0x5
 2149 0037 16       		.uleb128 0x16
 2150 0038 00       		.byte	0
 2151 0039 03       		.uleb128 0x3
 2152 003a 0E       		.uleb128 0xe
 2153 003b 3A       		.uleb128 0x3a
 2154 003c 0B       		.uleb128 0xb
 2155 003d 3B       		.uleb128 0x3b
 2156 003e 05       		.uleb128 0x5
 2157 003f 49       		.uleb128 0x49
 2158 0040 13       		.uleb128 0x13
 2159 0041 00       		.byte	0
 2160 0042 00       		.byte	0
 2161 0043 06       		.uleb128 0x6
 2162 0044 35       		.uleb128 0x35
 2163 0045 00       		.byte	0
 2164 0046 49       		.uleb128 0x49
 2165 0047 13       		.uleb128 0x13
 2166 0048 00       		.byte	0
 2167 0049 00       		.byte	0
 2168 004a 07       		.uleb128 0x7
 2169 004b 13       		.uleb128 0x13
 2170 004c 01       		.byte	0x1
 2171 004d 0B       		.uleb128 0xb
 2172 004e 0B       		.uleb128 0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 56


 2173 004f 3A       		.uleb128 0x3a
 2174 0050 0B       		.uleb128 0xb
 2175 0051 3B       		.uleb128 0x3b
 2176 0052 0B       		.uleb128 0xb
 2177 0053 01       		.uleb128 0x1
 2178 0054 13       		.uleb128 0x13
 2179 0055 00       		.byte	0
 2180 0056 00       		.byte	0
 2181 0057 08       		.uleb128 0x8
 2182 0058 0D       		.uleb128 0xd
 2183 0059 00       		.byte	0
 2184 005a 03       		.uleb128 0x3
 2185 005b 08       		.uleb128 0x8
 2186 005c 3A       		.uleb128 0x3a
 2187 005d 0B       		.uleb128 0xb
 2188 005e 3B       		.uleb128 0x3b
 2189 005f 0B       		.uleb128 0xb
 2190 0060 49       		.uleb128 0x49
 2191 0061 13       		.uleb128 0x13
 2192 0062 38       		.uleb128 0x38
 2193 0063 0B       		.uleb128 0xb
 2194 0064 00       		.byte	0
 2195 0065 00       		.byte	0
 2196 0066 09       		.uleb128 0x9
 2197 0067 0D       		.uleb128 0xd
 2198 0068 00       		.byte	0
 2199 0069 03       		.uleb128 0x3
 2200 006a 0E       		.uleb128 0xe
 2201 006b 3A       		.uleb128 0x3a
 2202 006c 0B       		.uleb128 0xb
 2203 006d 3B       		.uleb128 0x3b
 2204 006e 0B       		.uleb128 0xb
 2205 006f 49       		.uleb128 0x49
 2206 0070 13       		.uleb128 0x13
 2207 0071 38       		.uleb128 0x38
 2208 0072 0B       		.uleb128 0xb
 2209 0073 00       		.byte	0
 2210 0074 00       		.byte	0
 2211 0075 0A       		.uleb128 0xa
 2212 0076 01       		.uleb128 0x1
 2213 0077 01       		.byte	0x1
 2214 0078 49       		.uleb128 0x49
 2215 0079 13       		.uleb128 0x13
 2216 007a 01       		.uleb128 0x1
 2217 007b 13       		.uleb128 0x13
 2218 007c 00       		.byte	0
 2219 007d 00       		.byte	0
 2220 007e 0B       		.uleb128 0xb
 2221 007f 21       		.uleb128 0x21
 2222 0080 00       		.byte	0
 2223 0081 49       		.uleb128 0x49
 2224 0082 13       		.uleb128 0x13
 2225 0083 2F       		.uleb128 0x2f
 2226 0084 0B       		.uleb128 0xb
 2227 0085 00       		.byte	0
 2228 0086 00       		.byte	0
 2229 0087 0C       		.uleb128 0xc
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 57


 2230 0088 0F       		.uleb128 0xf
 2231 0089 00       		.byte	0
 2232 008a 0B       		.uleb128 0xb
 2233 008b 0B       		.uleb128 0xb
 2234 008c 49       		.uleb128 0x49
 2235 008d 13       		.uleb128 0x13
 2236 008e 00       		.byte	0
 2237 008f 00       		.byte	0
 2238 0090 0D       		.uleb128 0xd
 2239 0091 2E       		.uleb128 0x2e
 2240 0092 00       		.byte	0
 2241 0093 03       		.uleb128 0x3
 2242 0094 0E       		.uleb128 0xe
 2243 0095 3A       		.uleb128 0x3a
 2244 0096 0B       		.uleb128 0xb
 2245 0097 3B       		.uleb128 0x3b
 2246 0098 0B       		.uleb128 0xb
 2247 0099 27       		.uleb128 0x27
 2248 009a 19       		.uleb128 0x19
 2249 009b 11       		.uleb128 0x11
 2250 009c 01       		.uleb128 0x1
 2251 009d 12       		.uleb128 0x12
 2252 009e 06       		.uleb128 0x6
 2253 009f 40       		.uleb128 0x40
 2254 00a0 18       		.uleb128 0x18
 2255 00a1 9642     		.uleb128 0x2116
 2256 00a3 19       		.uleb128 0x19
 2257 00a4 00       		.byte	0
 2258 00a5 00       		.byte	0
 2259 00a6 0E       		.uleb128 0xe
 2260 00a7 2E       		.uleb128 0x2e
 2261 00a8 01       		.byte	0x1
 2262 00a9 3F       		.uleb128 0x3f
 2263 00aa 19       		.uleb128 0x19
 2264 00ab 03       		.uleb128 0x3
 2265 00ac 0E       		.uleb128 0xe
 2266 00ad 3A       		.uleb128 0x3a
 2267 00ae 0B       		.uleb128 0xb
 2268 00af 3B       		.uleb128 0x3b
 2269 00b0 05       		.uleb128 0x5
 2270 00b1 27       		.uleb128 0x27
 2271 00b2 19       		.uleb128 0x19
 2272 00b3 11       		.uleb128 0x11
 2273 00b4 01       		.uleb128 0x1
 2274 00b5 12       		.uleb128 0x12
 2275 00b6 06       		.uleb128 0x6
 2276 00b7 40       		.uleb128 0x40
 2277 00b8 18       		.uleb128 0x18
 2278 00b9 9642     		.uleb128 0x2116
 2279 00bb 19       		.uleb128 0x19
 2280 00bc 01       		.uleb128 0x1
 2281 00bd 13       		.uleb128 0x13
 2282 00be 00       		.byte	0
 2283 00bf 00       		.byte	0
 2284 00c0 0F       		.uleb128 0xf
 2285 00c1 34       		.uleb128 0x34
 2286 00c2 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 58


 2287 00c3 03       		.uleb128 0x3
 2288 00c4 0E       		.uleb128 0xe
 2289 00c5 3A       		.uleb128 0x3a
 2290 00c6 0B       		.uleb128 0xb
 2291 00c7 3B       		.uleb128 0x3b
 2292 00c8 05       		.uleb128 0x5
 2293 00c9 49       		.uleb128 0x49
 2294 00ca 13       		.uleb128 0x13
 2295 00cb 02       		.uleb128 0x2
 2296 00cc 18       		.uleb128 0x18
 2297 00cd 00       		.byte	0
 2298 00ce 00       		.byte	0
 2299 00cf 10       		.uleb128 0x10
 2300 00d0 34       		.uleb128 0x34
 2301 00d1 00       		.byte	0
 2302 00d2 03       		.uleb128 0x3
 2303 00d3 0E       		.uleb128 0xe
 2304 00d4 3A       		.uleb128 0x3a
 2305 00d5 0B       		.uleb128 0xb
 2306 00d6 3B       		.uleb128 0x3b
 2307 00d7 05       		.uleb128 0x5
 2308 00d8 49       		.uleb128 0x49
 2309 00d9 13       		.uleb128 0x13
 2310 00da 3F       		.uleb128 0x3f
 2311 00db 19       		.uleb128 0x19
 2312 00dc 3C       		.uleb128 0x3c
 2313 00dd 19       		.uleb128 0x19
 2314 00de 00       		.byte	0
 2315 00df 00       		.byte	0
 2316 00e0 11       		.uleb128 0x11
 2317 00e1 26       		.uleb128 0x26
 2318 00e2 00       		.byte	0
 2319 00e3 49       		.uleb128 0x49
 2320 00e4 13       		.uleb128 0x13
 2321 00e5 00       		.byte	0
 2322 00e6 00       		.byte	0
 2323 00e7 12       		.uleb128 0x12
 2324 00e8 34       		.uleb128 0x34
 2325 00e9 00       		.byte	0
 2326 00ea 03       		.uleb128 0x3
 2327 00eb 0E       		.uleb128 0xe
 2328 00ec 3A       		.uleb128 0x3a
 2329 00ed 0B       		.uleb128 0xb
 2330 00ee 3B       		.uleb128 0x3b
 2331 00ef 0B       		.uleb128 0xb
 2332 00f0 49       		.uleb128 0x49
 2333 00f1 13       		.uleb128 0x13
 2334 00f2 3F       		.uleb128 0x3f
 2335 00f3 19       		.uleb128 0x19
 2336 00f4 02       		.uleb128 0x2
 2337 00f5 18       		.uleb128 0x18
 2338 00f6 00       		.byte	0
 2339 00f7 00       		.byte	0
 2340 00f8 13       		.uleb128 0x13
 2341 00f9 21       		.uleb128 0x21
 2342 00fa 00       		.byte	0
 2343 00fb 49       		.uleb128 0x49
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 59


 2344 00fc 13       		.uleb128 0x13
 2345 00fd 2F       		.uleb128 0x2f
 2346 00fe 05       		.uleb128 0x5
 2347 00ff 00       		.byte	0
 2348 0100 00       		.byte	0
 2349 0101 14       		.uleb128 0x14
 2350 0102 34       		.uleb128 0x34
 2351 0103 00       		.byte	0
 2352 0104 03       		.uleb128 0x3
 2353 0105 08       		.uleb128 0x8
 2354 0106 3A       		.uleb128 0x3a
 2355 0107 0B       		.uleb128 0xb
 2356 0108 3B       		.uleb128 0x3b
 2357 0109 0B       		.uleb128 0xb
 2358 010a 49       		.uleb128 0x49
 2359 010b 13       		.uleb128 0x13
 2360 010c 3F       		.uleb128 0x3f
 2361 010d 19       		.uleb128 0x19
 2362 010e 02       		.uleb128 0x2
 2363 010f 18       		.uleb128 0x18
 2364 0110 00       		.byte	0
 2365 0111 00       		.byte	0
 2366 0112 00       		.byte	0
 2367              		.section	.debug_aranges,"",%progbits
 2368 0000 54000000 		.4byte	0x54
 2369 0004 0200     		.2byte	0x2
 2370 0006 00000000 		.4byte	.Ldebug_info0
 2371 000a 04       		.byte	0x4
 2372 000b 00       		.byte	0
 2373 000c 0000     		.2byte	0
 2374 000e 0000     		.2byte	0
 2375 0010 00000000 		.4byte	.LFB64
 2376 0014 0E000000 		.4byte	.LFE64-.LFB64
 2377 0018 00000000 		.4byte	.LFB65
 2378 001c 0E000000 		.4byte	.LFE65-.LFB65
 2379 0020 00000000 		.4byte	.LFB66
 2380 0024 0E000000 		.4byte	.LFE66-.LFB66
 2381 0028 00000000 		.4byte	.LFB67
 2382 002c 0E000000 		.4byte	.LFE67-.LFB67
 2383 0030 00000000 		.4byte	.LFB68
 2384 0034 0E000000 		.4byte	.LFE68-.LFB68
 2385 0038 00000000 		.4byte	.LFB69
 2386 003c 0E000000 		.4byte	.LFE69-.LFB69
 2387 0040 00000000 		.4byte	.LFB70
 2388 0044 0E000000 		.4byte	.LFE70-.LFB70
 2389 0048 00000000 		.4byte	.LFB71
 2390 004c 18060000 		.4byte	.LFE71-.LFB71
 2391 0050 00000000 		.4byte	0
 2392 0054 00000000 		.4byte	0
 2393              		.section	.debug_ranges,"",%progbits
 2394              	.Ldebug_ranges0:
 2395 0000 00000000 		.4byte	.LFB64
 2396 0004 0E000000 		.4byte	.LFE64
 2397 0008 00000000 		.4byte	.LFB65
 2398 000c 0E000000 		.4byte	.LFE65
 2399 0010 00000000 		.4byte	.LFB66
 2400 0014 0E000000 		.4byte	.LFE66
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 60


 2401 0018 00000000 		.4byte	.LFB67
 2402 001c 0E000000 		.4byte	.LFE67
 2403 0020 00000000 		.4byte	.LFB68
 2404 0024 0E000000 		.4byte	.LFE68
 2405 0028 00000000 		.4byte	.LFB69
 2406 002c 0E000000 		.4byte	.LFE69
 2407 0030 00000000 		.4byte	.LFB70
 2408 0034 0E000000 		.4byte	.LFE70
 2409 0038 00000000 		.4byte	.LFB71
 2410 003c 18060000 		.4byte	.LFE71
 2411 0040 00000000 		.4byte	0
 2412 0044 00000000 		.4byte	0
 2413              		.section	.debug_line,"",%progbits
 2414              	.Ldebug_line0:
 2415 0000 25030000 		.section	.debug_str,"MS",%progbits,1
 2415      0200C401 
 2415      00000201 
 2415      FB0E0D00 
 2415      01010101 
 2416              	.LASF122:
 2417 0000 5254435F 		.ascii	"RTC_ISR\000"
 2417      49535200 
 2418              	.LASF12:
 2419 0008 75696E74 		.ascii	"uint16\000"
 2419      313600
 2420              	.LASF97:
 2421 000f 6175746F 		.ascii	"autosampler_enabled\000"
 2421      73616D70 
 2421      6C65725F 
 2421      656E6162 
 2421      6C656400 
 2422              	.LASF81:
 2423 0023 62756666 		.ascii	"buffer_overflow\000"
 2423      65725F6F 
 2423      76657266 
 2423      6C6F7700 
 2424              	.LASF66:
 2425 0033 5254435F 		.ascii	"RTC_EverySecondHandler\000"
 2425      45766572 
 2425      79536563 
 2425      6F6E6448 
 2425      616E646C 
 2426              	.LASF0:
 2427 004a 7369676E 		.ascii	"signed char\000"
 2427      65642063 
 2427      68617200 
 2428              	.LASF72:
 2429 0056 5254435F 		.ascii	"RTC_EveryYearHandler\000"
 2429      45766572 
 2429      79596561 
 2429      7248616E 
 2429      646C6572 
 2430              	.LASF118:
 2431 006b 74696D65 		.ascii	"timeToAutosampler\000"
 2431      546F4175 
 2431      746F7361 
 2431      6D706C65 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 61


 2431      7200
 2432              	.LASF119:
 2433 007d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2433      43313120 
 2433      352E342E 
 2433      31203230 
 2433      31363036 
 2434 00b0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2434      20726576 
 2434      6973696F 
 2434      6E203233 
 2434      37373135 
 2435 00e3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2435      66756E63 
 2435      74696F6E 
 2435      2D736563 
 2435      74696F6E 
 2436              	.LASF23:
 2437 010b 4D6F6E74 		.ascii	"Month\000"
 2437      6800
 2438              	.LASF7:
 2439 0111 6C6F6E67 		.ascii	"long long unsigned int\000"
 2439      206C6F6E 
 2439      6720756E 
 2439      7369676E 
 2439      65642069 
 2440              	.LASF19:
 2441 0128 486F7572 		.ascii	"Hour\000"
 2441      00
 2442              	.LASF85:
 2443 012d 6D6F6465 		.ascii	"modem_state\000"
 2443      6D5F7374 
 2443      61746500 
 2444              	.LASF104:
 2445 0139 616C6172 		.ascii	"alarmMeasure\000"
 2445      6D4D6561 
 2445      73757265 
 2445      00
 2446              	.LASF80:
 2447 0146 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2447      52784275 
 2447      66666572 
 2447      00
 2448              	.LASF87:
 2449 0153 6D6F6465 		.ascii	"modem_stats\000"
 2449      6D5F7374 
 2449      61747300 
 2450              	.LASF120:
 2451 015f 47656E65 		.ascii	"Generated_Source\\PSoC5\\RTC_INT.c\000"
 2451      72617465 
 2451      645F536F 
 2451      75726365 
 2451      5C50536F 
 2452              	.LASF6:
 2453 0180 6C6F6E67 		.ascii	"long long int\000"
 2453      206C6F6E 
 2453      6720696E 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 62


 2453      7400
 2454              	.LASF37:
 2455 018e 65636E6F 		.ascii	"ecno\000"
 2455      00
 2456              	.LASF69:
 2457 0193 5254435F 		.ascii	"RTC_EveryDayHandler\000"
 2457      45766572 
 2457      79446179 
 2457      48616E64 
 2457      6C657200 
 2458              	.LASF40:
 2459 01a7 74696D65 		.ascii	"time_to_network_connect\000"
 2459      5F746F5F 
 2459      6E657477 
 2459      6F726B5F 
 2459      636F6E6E 
 2460              	.LASF107:
 2461 01bf 74696D65 		.ascii	"timeToSync\000"
 2461      546F5379 
 2461      6E6300
 2462              	.LASF100:
 2463 01ca 68747470 		.ascii	"http_body\000"
 2463      5F626F64 
 2463      7900
 2464              	.LASF93:
 2465 01d4 76616C76 		.ascii	"valve_diameter\000"
 2465      655F6469 
 2465      616D6574 
 2465      657200
 2466              	.LASF34:
 2467 01e3 6D6F6465 		.ascii	"modem_info_t\000"
 2467      6D5F696E 
 2467      666F5F74 
 2467      00
 2468              	.LASF113:
 2469 01f0 616C6172 		.ascii	"alarmDownstreamLevelSensor\000"
 2469      6D446F77 
 2469      6E737472 
 2469      65616D4C 
 2469      6576656C 
 2470              	.LASF35:
 2471 020b 72786C65 		.ascii	"rxlev\000"
 2471      7600
 2472              	.LASF4:
 2473 0211 6C6F6E67 		.ascii	"long int\000"
 2473      20696E74 
 2473      00
 2474              	.LASF56:
 2475 021a 63757272 		.ascii	"currentCountDownValue\000"
 2475      656E7443 
 2475      6F756E74 
 2475      446F776E 
 2475      56616C75 
 2476              	.LASF59:
 2477 0230 616C6172 		.ascii	"alarm\000"
 2477      6D00
 2478              	.LASF11:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 63


 2479 0236 75696E74 		.ascii	"uint8\000"
 2479      3800
 2480              	.LASF78:
 2481 023c 5254435F 		.ascii	"RTC_statusDateTime\000"
 2481      73746174 
 2481      75734461 
 2481      74655469 
 2481      6D6500
 2482              	.LASF110:
 2483 024f 74696D65 		.ascii	"timeToAppLED\000"
 2483      546F4170 
 2483      704C4544 
 2483      00
 2484              	.LASF14:
 2485 025c 696E7433 		.ascii	"int32\000"
 2485      3200
 2486              	.LASF43:
 2487 0262 6E6F6465 		.ascii	"node_type\000"
 2487      5F747970 
 2487      6500
 2488              	.LASF61:
 2489 026c 63686970 		.ascii	"chip_uniqueId\000"
 2489      5F756E69 
 2489      71756549 
 2489      6400
 2490              	.LASF32:
 2491 027a 6D6F6465 		.ascii	"model_id\000"
 2491      6C5F6964 
 2491      00
 2492              	.LASF55:
 2493 0283 636F756E 		.ascii	"countDownValue\000"
 2493      74446F77 
 2493      6E56616C 
 2493      756500
 2494              	.LASF47:
 2495 0292 64656275 		.ascii	"debug_level\000"
 2495      675F6C65 
 2495      76656C00 
 2496              	.LASF76:
 2497 029e 5254435F 		.ascii	"RTC_alarmCurStatus\000"
 2497      616C6172 
 2497      6D437572 
 2497      53746174 
 2497      757300
 2498              	.LASF28:
 2499 02b1 76616C75 		.ascii	"value\000"
 2499      6500
 2500              	.LASF106:
 2501 02b7 616C6172 		.ascii	"alarmSync\000"
 2501      6D53796E 
 2501      6300
 2502              	.LASF89:
 2503 02c1 4170705F 		.ascii	"App_LED_enabled\000"
 2503      4C45445F 
 2503      656E6162 
 2503      6C656400 
 2504              	.LASF30:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 64


 2505 02d1 6B65795F 		.ascii	"key_value_t\000"
 2505      76616C75 
 2505      655F7400 
 2506              	.LASF5:
 2507 02dd 6C6F6E67 		.ascii	"long unsigned int\000"
 2507      20756E73 
 2507      69676E65 
 2507      6420696E 
 2507      7400
 2508              	.LASF105:
 2509 02ef 74696D65 		.ascii	"timeToMeasure\000"
 2509      546F4D65 
 2509      61737572 
 2509      6500
 2510              	.LASF21:
 2511 02fd 4461794F 		.ascii	"DayOfMonth\000"
 2511      664D6F6E 
 2511      746800
 2512              	.LASF84:
 2513 0308 64617461 		.ascii	"data\000"
 2513      00
 2514              	.LASF64:
 2515 030d 65705F70 		.ascii	"ep_port\000"
 2515      6F727400 
 2516              	.LASF60:
 2517 0315 6D6F6465 		.ascii	"modem_info\000"
 2517      6D5F696E 
 2517      666F00
 2518              	.LASF63:
 2519 0320 65705F68 		.ascii	"ep_host\000"
 2519      6F737400 
 2520              	.LASF75:
 2521 0328 5254435F 		.ascii	"RTC_alarmCfgMask\000"
 2521      616C6172 
 2521      6D436667 
 2521      4D61736B 
 2521      00
 2522              	.LASF109:
 2523 0339 616C6172 		.ascii	"alarmAppLED\000"
 2523      6D417070 
 2523      4C454400 
 2524              	.LASF41:
 2525 0345 74696D65 		.ascii	"time_to_acquire_ip\000"
 2525      5F746F5F 
 2525      61637175 
 2525      6972655F 
 2525      697000
 2526              	.LASF103:
 2527 0358 73797374 		.ascii	"system_settings\000"
 2527      656D5F73 
 2527      65747469 
 2527      6E677300 
 2528              	.LASF86:
 2529 0368 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2529      6D5F7374 
 2529      6172745F 
 2529      74696D65 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 65


 2529      5F737461 
 2530              	.LASF62:
 2531 037f 7379735F 		.ascii	"sys_info_t\000"
 2531      696E666F 
 2531      5F7400
 2532              	.LASF54:
 2533 038a 75706461 		.ascii	"updatable_parameters_t\000"
 2533      7461626C 
 2533      655F7061 
 2533      72616D65 
 2533      74657273 
 2534              	.LASF82:
 2535 03a1 64617461 		.ascii	"dataPointsInStack\000"
 2535      506F696E 
 2535      7473496E 
 2535      53746163 
 2535      6B00
 2536              	.LASF79:
 2537 03b3 5254435F 		.ascii	"RTC_daysInMonths\000"
 2537      64617973 
 2537      496E4D6F 
 2537      6E746873 
 2537      00
 2538              	.LASF98:
 2539 03c4 6175746F 		.ascii	"autosampler_inbox\000"
 2539      73616D70 
 2539      6C65725F 
 2539      696E626F 
 2539      7800
 2540              	.LASF94:
 2541 03d6 76616C76 		.ascii	"valve_type\000"
 2541      655F7479 
 2541      706500
 2542              	.LASF15:
 2543 03e1 666C6F61 		.ascii	"float32\000"
 2543      74333200 
 2544              	.LASF27:
 2545 03e9 73697A65 		.ascii	"sizetype\000"
 2545      74797065 
 2545      00
 2546              	.LASF13:
 2547 03f2 696E7431 		.ascii	"int16\000"
 2547      3600
 2548              	.LASF108:
 2549 03f8 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2549      546F5379 
 2549      636E5265 
 2549      6D6F7465 
 2549      50617261 
 2550              	.LASF29:
 2551 040f 74696D65 		.ascii	"timeStamp\000"
 2551      5374616D 
 2551      7000
 2552              	.LASF25:
 2553 0419 5254435F 		.ascii	"RTC_TIME_DATE\000"
 2553      54494D45 
 2553      5F444154 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 66


 2553      4500
 2554              	.LASF88:
 2555 0427 75706461 		.ascii	"updatable_parameters\000"
 2555      7461626C 
 2555      655F7061 
 2555      72616D65 
 2555      74657273 
 2556              	.LASF70:
 2557 043c 5254435F 		.ascii	"RTC_EveryWeekHandler\000"
 2557      45766572 
 2557      79576565 
 2557      6B48616E 
 2557      646C6572 
 2558              	.LASF121:
 2559 0451 433A5C55 		.ascii	"C:\\Users\\jniej\\OneDrive\\Documents\\GitHub\\noto"
 2559      73657273 
 2559      5C6A6E69 
 2559      656A5C4F 
 2559      6E654472 
 2560 047e 72694F53 		.ascii	"riOS\\notoriOS.cydsn\000"
 2560      5C6E6F74 
 2560      6F72694F 
 2560      532E6379 
 2560      64736E00 
 2561              	.LASF116:
 2562 0492 74696D65 		.ascii	"timeToValve\000"
 2562      546F5661 
 2562      6C766500 
 2563              	.LASF16:
 2564 049e 666C6F61 		.ascii	"float\000"
 2564      7400
 2565              	.LASF24:
 2566 04a4 59656172 		.ascii	"Year\000"
 2566      00
 2567              	.LASF58:
 2568 04a9 636F756E 		.ascii	"countDownResetCondition\000"
 2568      74446F77 
 2568      6E526573 
 2568      6574436F 
 2568      6E646974 
 2569              	.LASF53:
 2570 04c1 5F426F6F 		.ascii	"_Bool\000"
 2570      6C00
 2571              	.LASF10:
 2572 04c7 696E7433 		.ascii	"int32_t\000"
 2572      325F7400 
 2573              	.LASF1:
 2574 04cf 756E7369 		.ascii	"unsigned char\000"
 2574      676E6564 
 2574      20636861 
 2574      7200
 2575              	.LASF74:
 2576 04dd 5254435F 		.ascii	"RTC_currentTimeDate\000"
 2576      63757272 
 2576      656E7454 
 2576      696D6544 
 2576      61746500 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 67


 2577              	.LASF68:
 2578 04f1 5254435F 		.ascii	"RTC_EveryHourHandler\000"
 2578      45766572 
 2578      79486F75 
 2578      7248616E 
 2578      646C6572 
 2579              	.LASF51:
 2580 0506 56616C76 		.ascii	"Valve_freq\000"
 2580      655F6672 
 2580      657100
 2581              	.LASF38:
 2582 0511 72737271 		.ascii	"rsrq\000"
 2582      00
 2583              	.LASF77:
 2584 0516 5254435F 		.ascii	"RTC_intervalCfgMask\000"
 2584      696E7465 
 2584      7276616C 
 2584      4366674D 
 2584      61736B00 
 2585              	.LASF2:
 2586 052a 73686F72 		.ascii	"short int\000"
 2586      7420696E 
 2586      7400
 2587              	.LASF46:
 2588 0534 73796E63 		.ascii	"sync_time\000"
 2588      5F74696D 
 2588      6500
 2589              	.LASF36:
 2590 053e 72736370 		.ascii	"rscp\000"
 2590      00
 2591              	.LASF20:
 2592 0543 4461794F 		.ascii	"DayOfWeek\000"
 2592      66576565 
 2592      6B00
 2593              	.LASF102:
 2594 054d 73797374 		.ascii	"system_info\000"
 2594      656D5F69 
 2594      6E666F00 
 2595              	.LASF33:
 2596 0559 696D6569 		.ascii	"imei\000"
 2596      00
 2597              	.LASF39:
 2598 055e 72737270 		.ascii	"rsrp\000"
 2598      00
 2599              	.LASF95:
 2600 0563 76616C76 		.ascii	"valve_enabled\000"
 2600      655F656E 
 2600      61626C65 
 2600      6400
 2601              	.LASF42:
 2602 0571 6D6F6465 		.ascii	"modem_stats_t\000"
 2602      6D5F7374 
 2602      6174735F 
 2602      7400
 2603              	.LASF111:
 2604 057f 616C6172 		.ascii	"alarmLevelSensor\000"
 2604      6D4C6576 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 68


 2604      656C5365 
 2604      6E736F72 
 2604      00
 2605              	.LASF49:
 2606 0590 4C657665 		.ascii	"Level_Sensor_freq\000"
 2606      6C5F5365 
 2606      6E736F72 
 2606      5F667265 
 2606      7100
 2607              	.LASF91:
 2608 05a2 6C657665 		.ascii	"level_sensor_inbox\000"
 2608      6C5F7365 
 2608      6E736F72 
 2608      5F696E62 
 2608      6F7800
 2609              	.LASF26:
 2610 05b5 6C6F6E67 		.ascii	"long double\000"
 2610      20646F75 
 2610      626C6500 
 2611              	.LASF18:
 2612 05c1 63686172 		.ascii	"char\000"
 2612      00
 2613              	.LASF8:
 2614 05c6 756E7369 		.ascii	"unsigned int\000"
 2614      676E6564 
 2614      20696E74 
 2614      00
 2615              	.LASF115:
 2616 05d3 616C6172 		.ascii	"alarmValve\000"
 2616      6D56616C 
 2616      766500
 2617              	.LASF101:
 2618 05de 68747470 		.ascii	"http_route\000"
 2618      5F726F75 
 2618      746500
 2619              	.LASF73:
 2620 05e9 5254435F 		.ascii	"RTC_alarmCfgTimeDate\000"
 2620      616C6172 
 2620      6D436667 
 2620      54696D65 
 2620      44617465 
 2621              	.LASF9:
 2622 05fe 5F5F696E 		.ascii	"__int32_t\000"
 2622      7433325F 
 2622      7400
 2623              	.LASF45:
 2624 0608 6D656173 		.ascii	"measure_time\000"
 2624      7572655F 
 2624      74696D65 
 2624      00
 2625              	.LASF3:
 2626 0615 73686F72 		.ascii	"short unsigned int\000"
 2626      7420756E 
 2626      7369676E 
 2626      65642069 
 2626      6E7400
 2627              	.LASF31:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 69


 2628 0628 73696D5F 		.ascii	"sim_id\000"
 2628      696400
 2629              	.LASF50:
 2630 062f 446F776E 		.ascii	"Downstream_Level_Sensor_freq\000"
 2630      73747265 
 2630      616D5F4C 
 2630      6576656C 
 2630      5F53656E 
 2631              	.LASF67:
 2632 064c 5254435F 		.ascii	"RTC_EveryMinuteHandler\000"
 2632      45766572 
 2632      794D696E 
 2632      75746548 
 2632      616E646C 
 2633              	.LASF123:
 2634 0663 5254435F 		.ascii	"RTC_tmp\000"
 2634      746D7000 
 2635              	.LASF112:
 2636 066b 74696D65 		.ascii	"timeToLevelSensor\000"
 2636      546F4C65 
 2636      76656C53 
 2636      656E736F 
 2636      7200
 2637              	.LASF92:
 2638 067d 6C657665 		.ascii	"level_sensor_enabled\000"
 2638      6C5F7365 
 2638      6E736F72 
 2638      5F656E61 
 2638      626C6564 
 2639              	.LASF83:
 2640 0692 64617461 		.ascii	"dataPointsInStackDesired\000"
 2640      506F696E 
 2640      7473496E 
 2640      53746163 
 2640      6B446573 
 2641              	.LASF48:
 2642 06ab 4170705F 		.ascii	"App_LED_freq\000"
 2642      4C45445F 
 2642      66726571 
 2642      00
 2643              	.LASF65:
 2644 06b8 7379735F 		.ascii	"sys_settings_t\000"
 2644      73657474 
 2644      696E6773 
 2644      5F7400
 2645              	.LASF114:
 2646 06c7 74696D65 		.ascii	"timeToDownstreamLevelSensor\000"
 2646      546F446F 
 2646      776E7374 
 2646      7265616D 
 2646      4C657665 
 2647              	.LASF117:
 2648 06e3 616C6172 		.ascii	"alarmAutosampler\000"
 2648      6D417574 
 2648      6F73616D 
 2648      706C6572 
 2648      00
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccpmgEgH.s 			page 70


 2649              	.LASF96:
 2650 06f4 76616C76 		.ascii	"valve_inbox\000"
 2650      655F696E 
 2650      626F7800 
 2651              	.LASF52:
 2652 0700 4175746F 		.ascii	"Autosampler_freq\000"
 2652      73616D70 
 2652      6C65725F 
 2652      66726571 
 2652      00
 2653              	.LASF57:
 2654 0711 636F756E 		.ascii	"countDownType\000"
 2654      74446F77 
 2654      6E547970 
 2654      6500
 2655              	.LASF44:
 2656 071f 73696D5F 		.ascii	"sim_type\000"
 2656      74797065 
 2656      00
 2657              	.LASF22:
 2658 0728 4461794F 		.ascii	"DayOfYear\000"
 2658      66596561 
 2658      7200
 2659              	.LASF99:
 2660 0732 68747470 		.ascii	"http_request\000"
 2660      5F726571 
 2660      75657374 
 2660      00
 2661              	.LASF17:
 2662 073f 646F7562 		.ascii	"double\000"
 2662      6C6500
 2663              	.LASF90:
 2664 0746 6170705F 		.ascii	"app_led_inbox\000"
 2664      6C65645F 
 2664      696E626F 
 2664      7800
 2665              	.LASF71:
 2666 0754 5254435F 		.ascii	"RTC_EveryMonthHandler\000"
 2666      45766572 
 2666      794D6F6E 
 2666      74684861 
 2666      6E646C65 
 2667              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
