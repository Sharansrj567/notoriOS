ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RTC_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	modem_state,1,1
  20              		.comm	modem_start_time_stamp,4,4
  21              		.comm	modem_info,60,4
  22              		.comm	modem_stats,16,4
  23              		.comm	updatable_parameters,3,4
  24              		.syntax unified
  25              		.global _printf_float
  26              		.thumb
  27              		.syntax unified
  28              		.comm	dataPointsInStack,2,2
  29              		.comm	dataPointsInStackDesired,2,2
  30              		.comm	data,6600,4
  31              		.comm	http_request,10000,4
  32              		.comm	http_body,10000,4
  33              		.comm	http_route,200,4
  34              		.comm	system_info,28,4
  35              		.comm	system_settings,324,4
  36              		.section	.text.RTC_EverySecondHandler,"ax",%progbits
  37              		.align	2
  38              		.thumb
  39              		.thumb_func
  40              		.type	RTC_EverySecondHandler, %function
  41              	RTC_EverySecondHandler:
  42              	.LFB64:
  43              		.file 1 "Generated_Source\\PSoC5\\RTC_INT.c"
   1:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/RTC_INT.c **** * File Name: RTC_INT.c
   3:Generated_Source\PSoC5/RTC_INT.c **** * Version 2.0
   4:Generated_Source\PSoC5/RTC_INT.c **** *
   5:Generated_Source\PSoC5/RTC_INT.c **** * Description:
   6:Generated_Source\PSoC5/RTC_INT.c **** *  This file contains the Interrupt Service Routine (ISR) for the RTC component.
   7:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt routine has entry pointes to overflow on time or date.
   8:Generated_Source\PSoC5/RTC_INT.c **** *
   9:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  10:Generated_Source\PSoC5/RTC_INT.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/RTC_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/RTC_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/RTC_INT.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 2


  15:Generated_Source\PSoC5/RTC_INT.c **** 
  16:Generated_Source\PSoC5/RTC_INT.c **** #include "RTC.h"
  17:Generated_Source\PSoC5/RTC_INT.c **** #include "CyLib.h"
  18:Generated_Source\PSoC5/RTC_INT.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/RTC_INT.c **** 
  20:Generated_Source\PSoC5/RTC_INT.c **** /* Function Prototypes */
  21:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void);
  22:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void);
  23:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void);
  24:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void);
  25:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void);
  26:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void);
  27:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void);
  28:Generated_Source\PSoC5/RTC_INT.c **** 
  29:Generated_Source\PSoC5/RTC_INT.c **** 
  30:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  31:Generated_Source\PSoC5/RTC_INT.c **** *  Place your includes, defines and code here
  32:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  33:Generated_Source\PSoC5/RTC_INT.c **** /* `#START RTC_ISR_DEFINITION` */
  34:Generated_Source\PSoC5/RTC_INT.c **** 
  35:Generated_Source\PSoC5/RTC_INT.c **** #include "notoriOS.h"
  36:Generated_Source\PSoC5/RTC_INT.c **** 
  37:Generated_Source\PSoC5/RTC_INT.c **** /* `#END` */
  38:Generated_Source\PSoC5/RTC_INT.c **** 
  39:Generated_Source\PSoC5/RTC_INT.c **** 
  40:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EverySecondHandler
  42:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  43:Generated_Source\PSoC5/RTC_INT.c **** *
  44:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  45:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every second.
  46:Generated_Source\PSoC5/RTC_INT.c **** *
  47:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  48:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  49:Generated_Source\PSoC5/RTC_INT.c **** *
  50:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  51:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  52:Generated_Source\PSoC5/RTC_INT.c **** *
  53:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  54:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void)
  55:Generated_Source\PSoC5/RTC_INT.c **** {
  44              		.loc 1 55 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 1, uses_anonymous_args = 0
  48 0000 80B5     		push	{r7, lr}
  49              		.cfi_def_cfa_offset 8
  50              		.cfi_offset 7, -8
  51              		.cfi_offset 14, -4
  52 0002 00AF     		add	r7, sp, #0
  53              		.cfi_def_cfa_register 7
  56:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every second handler code here. */
  57:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_SECOND_HANDLER_CODE` */
  58:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_SECOND);
  54              		.loc 1 58 0
  55 0004 0020     		movs	r0, #0
  56 0006 FFF7FEFF 		bl	AyoItsTime
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 3


  59:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  60:Generated_Source\PSoC5/RTC_INT.c ****     
  61:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_SECOND_HANDLER_CALLBACK
  62:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler_Callback();
  63:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_SECOND_HANDLER_CALLBACK */
  64:Generated_Source\PSoC5/RTC_INT.c **** }
  57              		.loc 1 64 0
  58 000a 00BF     		nop
  59 000c 80BD     		pop	{r7, pc}
  60              		.cfi_endproc
  61              	.LFE64:
  62              		.size	RTC_EverySecondHandler, .-RTC_EverySecondHandler
  63 000e 00BF     		.section	.text.RTC_EveryMinuteHandler,"ax",%progbits
  64              		.align	2
  65              		.thumb
  66              		.thumb_func
  67              		.type	RTC_EveryMinuteHandler, %function
  68              	RTC_EveryMinuteHandler:
  69              	.LFB65:
  65:Generated_Source\PSoC5/RTC_INT.c **** 
  66:Generated_Source\PSoC5/RTC_INT.c **** 
  67:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  68:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMinuteHandler
  69:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  70:Generated_Source\PSoC5/RTC_INT.c **** *
  71:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  72:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every minute.
  73:Generated_Source\PSoC5/RTC_INT.c **** *
  74:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  75:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  76:Generated_Source\PSoC5/RTC_INT.c **** *
  77:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  78:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  79:Generated_Source\PSoC5/RTC_INT.c **** *
  80:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  81:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void)
  82:Generated_Source\PSoC5/RTC_INT.c **** {
  70              		.loc 1 82 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74 0000 80B5     		push	{r7, lr}
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 00AF     		add	r7, sp, #0
  79              		.cfi_def_cfa_register 7
  83:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every minute handler code here. */
  84:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MINUTE_HANDLER_CODE` */
  85:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_MINUTE);
  80              		.loc 1 85 0
  81 0004 0120     		movs	r0, #1
  82 0006 FFF7FEFF 		bl	AyoItsTime
  86:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  87:Generated_Source\PSoC5/RTC_INT.c **** 
  88:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MINUTE_HANDLER_CALLBACK
  89:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMinuteHandler_Callback();
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 4


  90:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MINUTE_HANDLER_CALLBACK */    
  91:Generated_Source\PSoC5/RTC_INT.c **** }
  83              		.loc 1 91 0
  84 000a 00BF     		nop
  85 000c 80BD     		pop	{r7, pc}
  86              		.cfi_endproc
  87              	.LFE65:
  88              		.size	RTC_EveryMinuteHandler, .-RTC_EveryMinuteHandler
  89 000e 00BF     		.section	.text.RTC_EveryHourHandler,"ax",%progbits
  90              		.align	2
  91              		.thumb
  92              		.thumb_func
  93              		.type	RTC_EveryHourHandler, %function
  94              	RTC_EveryHourHandler:
  95              	.LFB66:
  92:Generated_Source\PSoC5/RTC_INT.c **** 
  93:Generated_Source\PSoC5/RTC_INT.c **** 
  94:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  95:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryHourHandler
  96:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  97:Generated_Source\PSoC5/RTC_INT.c **** *
  98:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  99:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every hour.
 100:Generated_Source\PSoC5/RTC_INT.c **** *
 101:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 102:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 103:Generated_Source\PSoC5/RTC_INT.c **** *
 104:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 105:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 106:Generated_Source\PSoC5/RTC_INT.c **** *
 107:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 108:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void)
 109:Generated_Source\PSoC5/RTC_INT.c **** {
  96              		.loc 1 109 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100 0000 80B5     		push	{r7, lr}
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 7, -8
 103              		.cfi_offset 14, -4
 104 0002 00AF     		add	r7, sp, #0
 105              		.cfi_def_cfa_register 7
 110:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every hour handler code here. */
 111:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_HOUR_HANDLER_CODE` */
 112:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_HOUR);
 106              		.loc 1 112 0
 107 0004 0220     		movs	r0, #2
 108 0006 FFF7FEFF 		bl	AyoItsTime
 113:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 114:Generated_Source\PSoC5/RTC_INT.c ****     
 115:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_HOUR_HANDLER_CALLBACK
 116:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryHourHandler_Callback();
 117:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_HOUR_HANDLER_CALLBACK */
 118:Generated_Source\PSoC5/RTC_INT.c **** }
 109              		.loc 1 118 0
 110 000a 00BF     		nop
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 5


 111 000c 80BD     		pop	{r7, pc}
 112              		.cfi_endproc
 113              	.LFE66:
 114              		.size	RTC_EveryHourHandler, .-RTC_EveryHourHandler
 115 000e 00BF     		.section	.text.RTC_EveryDayHandler,"ax",%progbits
 116              		.align	2
 117              		.thumb
 118              		.thumb_func
 119              		.type	RTC_EveryDayHandler, %function
 120              	RTC_EveryDayHandler:
 121              	.LFB67:
 119:Generated_Source\PSoC5/RTC_INT.c **** 
 120:Generated_Source\PSoC5/RTC_INT.c **** 
 121:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 122:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryDayHandler
 123:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 124:Generated_Source\PSoC5/RTC_INT.c **** *
 125:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 126:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every day.
 127:Generated_Source\PSoC5/RTC_INT.c **** *
 128:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 129:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 130:Generated_Source\PSoC5/RTC_INT.c **** *
 131:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 132:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 133:Generated_Source\PSoC5/RTC_INT.c **** *
 134:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 135:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void)
 136:Generated_Source\PSoC5/RTC_INT.c **** {
 122              		.loc 1 136 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126 0000 80B5     		push	{r7, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 7, -8
 129              		.cfi_offset 14, -4
 130 0002 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 137:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your everyday handler code here. */
 138:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_DAY_HANDLER_CODE` */
 139:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_DAY);
 132              		.loc 1 139 0
 133 0004 0320     		movs	r0, #3
 134 0006 FFF7FEFF 		bl	AyoItsTime
 140:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 141:Generated_Source\PSoC5/RTC_INT.c ****     
 142:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_DAY_HANDLER_CALLBACK
 143:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryDayHandler_Callback();
 144:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_DAY_HANDLER_CALLBACK */
 145:Generated_Source\PSoC5/RTC_INT.c **** }
 135              		.loc 1 145 0
 136 000a 00BF     		nop
 137 000c 80BD     		pop	{r7, pc}
 138              		.cfi_endproc
 139              	.LFE67:
 140              		.size	RTC_EveryDayHandler, .-RTC_EveryDayHandler
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 6


 141 000e 00BF     		.section	.text.RTC_EveryWeekHandler,"ax",%progbits
 142              		.align	2
 143              		.thumb
 144              		.thumb_func
 145              		.type	RTC_EveryWeekHandler, %function
 146              	RTC_EveryWeekHandler:
 147              	.LFB68:
 146:Generated_Source\PSoC5/RTC_INT.c **** 
 147:Generated_Source\PSoC5/RTC_INT.c **** 
 148:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 149:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryWeekHandler
 150:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 151:Generated_Source\PSoC5/RTC_INT.c **** *
 152:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 153:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every week.
 154:Generated_Source\PSoC5/RTC_INT.c **** *
 155:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 156:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 157:Generated_Source\PSoC5/RTC_INT.c **** *
 158:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 159:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 160:Generated_Source\PSoC5/RTC_INT.c **** *
 161:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 162:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void)
 163:Generated_Source\PSoC5/RTC_INT.c **** {
 148              		.loc 1 163 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 1, uses_anonymous_args = 0
 152 0000 80B5     		push	{r7, lr}
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 7, -8
 155              		.cfi_offset 14, -4
 156 0002 00AF     		add	r7, sp, #0
 157              		.cfi_def_cfa_register 7
 164:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every week handler code here. */
 165:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_WEEK_HANDLER_CODE` */
 166:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_WEEK);
 158              		.loc 1 166 0
 159 0004 0420     		movs	r0, #4
 160 0006 FFF7FEFF 		bl	AyoItsTime
 167:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 168:Generated_Source\PSoC5/RTC_INT.c **** 
 169:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_WEEK_HANDLER_CALLBACK
 170:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryWeekHandler_Callback();
 171:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_WEEK_HANDLER_CALLBACK */
 172:Generated_Source\PSoC5/RTC_INT.c **** }
 161              		.loc 1 172 0
 162 000a 00BF     		nop
 163 000c 80BD     		pop	{r7, pc}
 164              		.cfi_endproc
 165              	.LFE68:
 166              		.size	RTC_EveryWeekHandler, .-RTC_EveryWeekHandler
 167 000e 00BF     		.section	.text.RTC_EveryMonthHandler,"ax",%progbits
 168              		.align	2
 169              		.thumb
 170              		.thumb_func
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 7


 171              		.type	RTC_EveryMonthHandler, %function
 172              	RTC_EveryMonthHandler:
 173              	.LFB69:
 173:Generated_Source\PSoC5/RTC_INT.c **** 
 174:Generated_Source\PSoC5/RTC_INT.c **** 
 175:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMonthHandler
 177:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 178:Generated_Source\PSoC5/RTC_INT.c **** *
 179:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 180:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every month.
 181:Generated_Source\PSoC5/RTC_INT.c **** *
 182:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 183:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 184:Generated_Source\PSoC5/RTC_INT.c **** *
 185:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 186:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 187:Generated_Source\PSoC5/RTC_INT.c **** *
 188:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 189:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void)
 190:Generated_Source\PSoC5/RTC_INT.c **** {
 174              		.loc 1 190 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178 0000 80B5     		push	{r7, lr}
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 191:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every month handler code here. */
 192:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MONTH_HANDLER_CODE` */
 193:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_MONTH);
 184              		.loc 1 193 0
 185 0004 0520     		movs	r0, #5
 186 0006 FFF7FEFF 		bl	AyoItsTime
 194:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 195:Generated_Source\PSoC5/RTC_INT.c ****     
 196:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MONTH_HANDLER_CALLBACK
 197:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMonthHandler_Callback();
 198:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MONTH_HANDLER_CALLBACK */
 199:Generated_Source\PSoC5/RTC_INT.c **** }
 187              		.loc 1 199 0
 188 000a 00BF     		nop
 189 000c 80BD     		pop	{r7, pc}
 190              		.cfi_endproc
 191              	.LFE69:
 192              		.size	RTC_EveryMonthHandler, .-RTC_EveryMonthHandler
 193 000e 00BF     		.section	.text.RTC_EveryYearHandler,"ax",%progbits
 194              		.align	2
 195              		.thumb
 196              		.thumb_func
 197              		.type	RTC_EveryYearHandler, %function
 198              	RTC_EveryYearHandler:
 199              	.LFB70:
 200:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 8


 201:Generated_Source\PSoC5/RTC_INT.c **** 
 202:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 203:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryYearHandler
 204:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 205:Generated_Source\PSoC5/RTC_INT.c **** *
 206:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 207:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every year.
 208:Generated_Source\PSoC5/RTC_INT.c **** *
 209:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 210:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 211:Generated_Source\PSoC5/RTC_INT.c **** *
 212:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 213:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 214:Generated_Source\PSoC5/RTC_INT.c **** *
 215:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 216:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void)
 217:Generated_Source\PSoC5/RTC_INT.c **** {
 200              		.loc 1 217 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204 0000 80B5     		push	{r7, lr}
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 7, -8
 207              		.cfi_offset 14, -4
 208 0002 00AF     		add	r7, sp, #0
 209              		.cfi_def_cfa_register 7
 218:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every year handler code here. */
 219:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_YEAR_HANDLER_CODE` */
 220:Generated_Source\PSoC5/RTC_INT.c ****     AyoItsTime(ALARM_TYPE_YEAR);
 210              		.loc 1 220 0
 211 0004 0620     		movs	r0, #6
 212 0006 FFF7FEFF 		bl	AyoItsTime
 221:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 222:Generated_Source\PSoC5/RTC_INT.c **** 
 223:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_YEAR_HANDLER_CALLBACK
 224:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryYearHandler_Callback();
 225:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_YEAR_HANDLER_CALLBACK */    
 226:Generated_Source\PSoC5/RTC_INT.c **** }
 213              		.loc 1 226 0
 214 000a 00BF     		nop
 215 000c 80BD     		pop	{r7, pc}
 216              		.cfi_endproc
 217              	.LFE70:
 218              		.size	RTC_EveryYearHandler, .-RTC_EveryYearHandler
 219 000e 00BF     		.section	.text.RTC_ISR,"ax",%progbits
 220              		.align	2
 221              		.global	RTC_ISR
 222              		.thumb
 223              		.thumb_func
 224              		.type	RTC_ISR, %function
 225              	RTC_ISR:
 226              	.LFB71:
 227:Generated_Source\PSoC5/RTC_INT.c **** 
 228:Generated_Source\PSoC5/RTC_INT.c **** 
 229:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/RTC_INT.c **** * Function Name: RTC_ISR
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 9


 231:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 232:Generated_Source\PSoC5/RTC_INT.c **** *
 233:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 234:Generated_Source\PSoC5/RTC_INT.c **** *  This ISR is executed on 1PPS (one pulse per second) event.
 235:Generated_Source\PSoC5/RTC_INT.c **** *  Global interrupt must be enabled to invoke this ISR.
 236:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt trigs every second.
 237:Generated_Source\PSoC5/RTC_INT.c **** *
 238:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 239:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 240:Generated_Source\PSoC5/RTC_INT.c **** *
 241:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 242:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 243:Generated_Source\PSoC5/RTC_INT.c **** *
 244:Generated_Source\PSoC5/RTC_INT.c **** * Global variables:
 245:Generated_Source\PSoC5/RTC_INT.c **** * RTC_currentTimeDate, RTC_dstTimeDateStart,
 246:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStop, RTC_dstTimeDateStart,
 247:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCfgTimeDate, RTC_statusDateTime,
 248:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStartStatus,
 249:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStopStatus, RTC_alarmCurStatus: global
 250:Generated_Source\PSoC5/RTC_INT.c **** *  variables are used for the time/date, DST and alarm update procedure.
 251:Generated_Source\PSoC5/RTC_INT.c **** *
 252:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStart and RTC_currentTimeDate:
 253:Generated_Source\PSoC5/RTC_INT.c **** *  are modified with the updated values.
 254:Generated_Source\PSoC5/RTC_INT.c **** *
 255:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_statusDateTime, RTC_dstStartStatus,
 256:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStopStatus,
 257:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCurStatus: global variables could be modified while
 258:Generated_Source\PSoC5/RTC_INT.c **** *  current time/date is updated.
 259:Generated_Source\PSoC5/RTC_INT.c **** *
 260:Generated_Source\PSoC5/RTC_INT.c **** * Side Effects:
 261:Generated_Source\PSoC5/RTC_INT.c **** *  Clears all interrupt status bits (react_int, limact_int, onepps_int, ctw_int,
 262:Generated_Source\PSoC5/RTC_INT.c **** *  and  ftw_int) in Power Manager Interrupt Status Register. If an interrupt
 263:Generated_Source\PSoC5/RTC_INT.c **** *  gets generated at the same time as a clear, the bit will remain set (which
 264:Generated_Source\PSoC5/RTC_INT.c **** *  causes another interrupt).
 265:Generated_Source\PSoC5/RTC_INT.c **** *
 266:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 267:Generated_Source\PSoC5/RTC_INT.c **** CY_ISR(RTC_ISR)
 268:Generated_Source\PSoC5/RTC_INT.c **** {
 227              		.loc 1 268 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 8
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231 0000 80B5     		push	{r7, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 82B0     		sub	sp, sp, #8
 236              		.cfi_def_cfa_offset 16
 237 0004 00AF     		add	r7, sp, #0
 238              		.cfi_def_cfa_register 7
 269:Generated_Source\PSoC5/RTC_INT.c ****     uint8 RTC_tmp;
 270:Generated_Source\PSoC5/RTC_INT.c **** 
 271:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_ENTRY_CALLBACK
 272:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_EntryCallback();
 273:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_ENTRY_CALLBACK */
 274:Generated_Source\PSoC5/RTC_INT.c ****     
 275:Generated_Source\PSoC5/RTC_INT.c ****     /* Clear OPPS interrupt status flag */
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 10


 276:Generated_Source\PSoC5/RTC_INT.c ****     (void) CyPmReadStatus(CY_PM_ONEPPS_INT);
 239              		.loc 1 276 0
 240 0006 0420     		movs	r0, #4
 241 0008 FFF7FEFF 		bl	CyPmReadStatus
 277:Generated_Source\PSoC5/RTC_INT.c **** 
 278:Generated_Source\PSoC5/RTC_INT.c ****     /* Increment seconds counter */
 279:Generated_Source\PSoC5/RTC_INT.c ****     RTC_currentTimeDate.Sec++;
 242              		.loc 1 279 0
 243 000c 9E4B     		ldr	r3, .L48
 244 000e 1B78     		ldrb	r3, [r3]
 245 0010 DBB2     		uxtb	r3, r3
 246 0012 0133     		adds	r3, r3, #1
 247 0014 DAB2     		uxtb	r2, r3
 248 0016 9C4B     		ldr	r3, .L48
 249 0018 1A70     		strb	r2, [r3]
 280:Generated_Source\PSoC5/RTC_INT.c **** 
 281:Generated_Source\PSoC5/RTC_INT.c ****     /* Check if minute elapsed */
 282:Generated_Source\PSoC5/RTC_INT.c ****     if(RTC_currentTimeDate.Sec > RTC_MINUTE_ELAPSED)
 250              		.loc 1 282 0
 251 001a 9B4B     		ldr	r3, .L48
 252 001c 1B78     		ldrb	r3, [r3]
 253 001e DBB2     		uxtb	r3, r3
 254 0020 3B2B     		cmp	r3, #59
 255 0022 40F2A682 		bls	.L9
 283:Generated_Source\PSoC5/RTC_INT.c ****     {
 284:Generated_Source\PSoC5/RTC_INT.c ****         /* Inc Min */
 285:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Min++;
 256              		.loc 1 285 0
 257 0026 984B     		ldr	r3, .L48
 258 0028 5B78     		ldrb	r3, [r3, #1]
 259 002a DBB2     		uxtb	r3, r3
 260 002c 0133     		adds	r3, r3, #1
 261 002e DAB2     		uxtb	r2, r3
 262 0030 954B     		ldr	r3, .L48
 263 0032 5A70     		strb	r2, [r3, #1]
 286:Generated_Source\PSoC5/RTC_INT.c **** 
 287:Generated_Source\PSoC5/RTC_INT.c ****         /* Clear Sec */
 288:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Sec = 0u;
 264              		.loc 1 288 0
 265 0034 944B     		ldr	r3, .L48
 266 0036 0022     		movs	r2, #0
 267 0038 1A70     		strb	r2, [r3]
 289:Generated_Source\PSoC5/RTC_INT.c **** 
 290:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 268              		.loc 1 290 0
 269 003a 934B     		ldr	r3, .L48
 270 003c 5B78     		ldrb	r3, [r3, #1]
 271 003e DBB2     		uxtb	r3, r3
 272 0040 3B2B     		cmp	r3, #59
 273 0042 40F24682 		bls	.L10
 291:Generated_Source\PSoC5/RTC_INT.c ****         {
 292:Generated_Source\PSoC5/RTC_INT.c ****             /* Inc HOUR */
 293:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Hour++;
 274              		.loc 1 293 0
 275 0046 904B     		ldr	r3, .L48
 276 0048 9B78     		ldrb	r3, [r3, #2]
 277 004a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 11


 278 004c 0133     		adds	r3, r3, #1
 279 004e DAB2     		uxtb	r2, r3
 280 0050 8D4B     		ldr	r3, .L48
 281 0052 9A70     		strb	r2, [r3, #2]
 294:Generated_Source\PSoC5/RTC_INT.c **** 
 295:Generated_Source\PSoC5/RTC_INT.c ****             /* Clear Min */
 296:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Min = 0u;
 282              		.loc 1 296 0
 283 0054 8C4B     		ldr	r3, .L48
 284 0056 0022     		movs	r2, #0
 285 0058 5A70     		strb	r2, [r3, #1]
 297:Generated_Source\PSoC5/RTC_INT.c **** 
 298:Generated_Source\PSoC5/RTC_INT.c ****             /* Day roll over */
 299:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 286              		.loc 1 299 0
 287 005a 8B4B     		ldr	r3, .L48
 288 005c 9B78     		ldrb	r3, [r3, #2]
 289 005e DBB2     		uxtb	r3, r3
 290 0060 172B     		cmp	r3, #23
 291 0062 40F2DD81 		bls	.L11
 300:Generated_Source\PSoC5/RTC_INT.c ****             {
 301:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfMonth */
 302:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfMonth++;
 292              		.loc 1 302 0
 293 0066 884B     		ldr	r3, .L48
 294 0068 1B79     		ldrb	r3, [r3, #4]
 295 006a DBB2     		uxtb	r3, r3
 296 006c 0133     		adds	r3, r3, #1
 297 006e DAB2     		uxtb	r2, r3
 298 0070 854B     		ldr	r3, .L48
 299 0072 1A71     		strb	r2, [r3, #4]
 303:Generated_Source\PSoC5/RTC_INT.c **** 
 304:Generated_Source\PSoC5/RTC_INT.c ****                 /* Clear Hour */
 305:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.Hour = 0u;
 300              		.loc 1 305 0
 301 0074 844B     		ldr	r3, .L48
 302 0076 0022     		movs	r2, #0
 303 0078 9A70     		strb	r2, [r3, #2]
 306:Generated_Source\PSoC5/RTC_INT.c **** 
 307:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfYear */
 308:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfYear++;
 304              		.loc 1 308 0
 305 007a 834B     		ldr	r3, .L48
 306 007c DB88     		ldrh	r3, [r3, #6]	@ movhi
 307 007e 9BB2     		uxth	r3, r3
 308 0080 0133     		adds	r3, r3, #1
 309 0082 9AB2     		uxth	r2, r3
 310 0084 804B     		ldr	r3, .L48
 311 0086 DA80     		strh	r2, [r3, #6]	@ movhi
 309:Generated_Source\PSoC5/RTC_INT.c **** 
 310:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfWeek */
 311:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfWeek++;
 312              		.loc 1 311 0
 313 0088 7F4B     		ldr	r3, .L48
 314 008a DB78     		ldrb	r3, [r3, #3]
 315 008c DBB2     		uxtb	r3, r3
 316 008e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 12


 317 0090 DAB2     		uxtb	r2, r3
 318 0092 7D4B     		ldr	r3, .L48
 319 0094 DA70     		strb	r2, [r3, #3]
 312:Generated_Source\PSoC5/RTC_INT.c **** 
 313:Generated_Source\PSoC5/RTC_INT.c ****                 /* Check DayOfWeek */
 314:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 320              		.loc 1 314 0
 321 0096 7C4B     		ldr	r3, .L48
 322 0098 DB78     		ldrb	r3, [r3, #3]
 323 009a DBB2     		uxtb	r3, r3
 324 009c 072B     		cmp	r3, #7
 325 009e 02D9     		bls	.L12
 315:Generated_Source\PSoC5/RTC_INT.c ****                 {
 316:Generated_Source\PSoC5/RTC_INT.c ****                     /* start new week */
 317:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfWeek = 1u;
 326              		.loc 1 317 0
 327 00a0 794B     		ldr	r3, .L48
 328 00a2 0122     		movs	r2, #1
 329 00a4 DA70     		strb	r2, [r3, #3]
 330              	.L12:
 318:Generated_Source\PSoC5/RTC_INT.c ****                 }
 319:Generated_Source\PSoC5/RTC_INT.c **** 
 320:Generated_Source\PSoC5/RTC_INT.c ****                 /* Day of month roll over.
 321:Generated_Source\PSoC5/RTC_INT.c ****                 * Check if day of month greater than 29 in February of leap year or
 322:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than 28 NOT in February of NON leap year or
 323:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than it should be in every month in non leap year
 324:Generated_Source\PSoC5/RTC_INT.c ****                 */
 325:Generated_Source\PSoC5/RTC_INT.c ****                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 331              		.loc 1 325 0
 332 00a6 794B     		ldr	r3, .L48+4
 333 00a8 1B78     		ldrb	r3, [r3]
 334 00aa DBB2     		uxtb	r3, r3
 335 00ac 03F00203 		and	r3, r3, #2
 336 00b0 002B     		cmp	r3, #0
 337 00b2 11D0     		beq	.L13
 326:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 338              		.loc 1 326 0 discriminator 1
 339 00b4 744B     		ldr	r3, .L48
 340 00b6 1B7A     		ldrb	r3, [r3, #8]
 341 00b8 DBB2     		uxtb	r3, r3
 325:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 342              		.loc 1 325 0 discriminator 1
 343 00ba 022B     		cmp	r3, #2
 344 00bc 0CD1     		bne	.L13
 327:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 345              		.loc 1 327 0
 346 00be 724B     		ldr	r3, .L48
 347 00c0 1B79     		ldrb	r3, [r3, #4]
 348 00c2 DBB2     		uxtb	r3, r3
 349 00c4 1946     		mov	r1, r3
 328:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 350              		.loc 1 328 0
 351 00c6 704B     		ldr	r3, .L48
 352 00c8 1B7A     		ldrb	r3, [r3, #8]
 353 00ca DBB2     		uxtb	r3, r3
 354 00cc 013B     		subs	r3, r3, #1
 355 00ce 704A     		ldr	r2, .L48+8
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 13


 356 00d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 357 00d2 0133     		adds	r3, r3, #1
 326:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 358              		.loc 1 326 0
 359 00d4 9942     		cmp	r1, r3
 360 00d6 2AD8     		bhi	.L14
 361              	.L13:
 329:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 362              		.loc 1 329 0
 363 00d8 6C4B     		ldr	r3, .L48+4
 364 00da 1B78     		ldrb	r3, [r3]
 365 00dc DBB2     		uxtb	r3, r3
 366 00de 03F00203 		and	r3, r3, #2
 328:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 367              		.loc 1 328 0
 368 00e2 002B     		cmp	r3, #0
 369 00e4 0FD0     		beq	.L15
 330:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 370              		.loc 1 330 0
 371 00e6 684B     		ldr	r3, .L48
 372 00e8 1B7A     		ldrb	r3, [r3, #8]
 373 00ea DBB2     		uxtb	r3, r3
 329:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 374              		.loc 1 329 0
 375 00ec 022B     		cmp	r3, #2
 376 00ee 0AD0     		beq	.L15
 331:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 377              		.loc 1 331 0
 378 00f0 654B     		ldr	r3, .L48
 379 00f2 1B79     		ldrb	r3, [r3, #4]
 380 00f4 DAB2     		uxtb	r2, r3
 332:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 381              		.loc 1 332 0
 382 00f6 644B     		ldr	r3, .L48
 383 00f8 1B7A     		ldrb	r3, [r3, #8]
 384 00fa DBB2     		uxtb	r3, r3
 385 00fc 013B     		subs	r3, r3, #1
 386 00fe 6449     		ldr	r1, .L48+8
 387 0100 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 330:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 388              		.loc 1 330 0
 389 0102 9A42     		cmp	r2, r3
 390 0104 13D8     		bhi	.L14
 391              	.L15:
 333:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 392              		.loc 1 333 0
 393 0106 614B     		ldr	r3, .L48+4
 394 0108 1B78     		ldrb	r3, [r3]
 395 010a DBB2     		uxtb	r3, r3
 396 010c 03F00203 		and	r3, r3, #2
 332:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 397              		.loc 1 332 0
 398 0110 002B     		cmp	r3, #0
 399 0112 40F0F480 		bne	.L16
 334:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 400              		.loc 1 334 0
 401 0116 5C4B     		ldr	r3, .L48
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 14


 402 0118 1B79     		ldrb	r3, [r3, #4]
 403 011a DAB2     		uxtb	r2, r3
 335:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 404              		.loc 1 335 0
 405 011c 5A4B     		ldr	r3, .L48
 406 011e 1B7A     		ldrb	r3, [r3, #8]
 407 0120 DBB2     		uxtb	r3, r3
 408 0122 013B     		subs	r3, r3, #1
 409 0124 5A49     		ldr	r1, .L48+8
 410 0126 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 333:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 411              		.loc 1 333 0
 412 0128 9A42     		cmp	r2, r3
 413 012a 40F2E880 		bls	.L16
 414              	.L14:
 336:Generated_Source\PSoC5/RTC_INT.c ****                 {
 337:Generated_Source\PSoC5/RTC_INT.c ****                     /* Inc Month */
 338:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.Month++;
 415              		.loc 1 338 0
 416 012e 564B     		ldr	r3, .L48
 417 0130 1B7A     		ldrb	r3, [r3, #8]
 418 0132 DBB2     		uxtb	r3, r3
 419 0134 0133     		adds	r3, r3, #1
 420 0136 DAB2     		uxtb	r2, r3
 421 0138 534B     		ldr	r3, .L48
 422 013a 1A72     		strb	r2, [r3, #8]
 339:Generated_Source\PSoC5/RTC_INT.c **** 
 340:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set first day of month */
 341:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfMonth = 1u;
 423              		.loc 1 341 0
 424 013c 524B     		ldr	r3, .L48
 425 013e 0122     		movs	r2, #1
 426 0140 1A71     		strb	r2, [r3, #4]
 342:Generated_Source\PSoC5/RTC_INT.c **** 
 343:Generated_Source\PSoC5/RTC_INT.c ****                     /* Year roll over */
 344:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 427              		.loc 1 344 0
 428 0142 514B     		ldr	r3, .L48
 429 0144 1B7A     		ldrb	r3, [r3, #8]
 430 0146 DBB2     		uxtb	r3, r3
 431 0148 0C2B     		cmp	r3, #12
 432 014a 40F28580 		bls	.L17
 345:Generated_Source\PSoC5/RTC_INT.c ****                     {
 346:Generated_Source\PSoC5/RTC_INT.c ****                         /* Inc Year */
 347:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Year++;
 433              		.loc 1 347 0
 434 014e 4E4B     		ldr	r3, .L48
 435 0150 5B89     		ldrh	r3, [r3, #10]	@ movhi
 436 0152 9BB2     		uxth	r3, r3
 437 0154 0133     		adds	r3, r3, #1
 438 0156 9AB2     		uxth	r2, r3
 439 0158 4B4B     		ldr	r3, .L48
 440 015a 5A81     		strh	r2, [r3, #10]	@ movhi
 348:Generated_Source\PSoC5/RTC_INT.c **** 
 349:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first month of year */
 350:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Month = 1u;
 441              		.loc 1 350 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 15


 442 015c 4A4B     		ldr	r3, .L48
 443 015e 0122     		movs	r2, #1
 444 0160 1A72     		strb	r2, [r3, #8]
 351:Generated_Source\PSoC5/RTC_INT.c **** 
 352:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first day of year */
 353:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.DayOfYear = 1u;
 445              		.loc 1 353 0
 446 0162 494B     		ldr	r3, .L48
 447 0164 0122     		movs	r2, #1
 448 0166 DA80     		strh	r2, [r3, #6]	@ movhi
 354:Generated_Source\PSoC5/RTC_INT.c **** 
 355:Generated_Source\PSoC5/RTC_INT.c ****                         /* Is this year leap */
 356:Generated_Source\PSoC5/RTC_INT.c ****                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 449              		.loc 1 356 0
 450 0168 474B     		ldr	r3, .L48
 451 016a 5B89     		ldrh	r3, [r3, #10]	@ movhi
 452 016c 9BB2     		uxth	r3, r3
 453 016e 494A     		ldr	r2, .L48+12
 454 0170 A2FB0312 		umull	r1, r2, r2, r3
 455 0174 D209     		lsrs	r2, r2, #7
 456 0176 4FF4C871 		mov	r1, #400
 457 017a 01FB02F2 		mul	r2, r1, r2
 458 017e 9B1A     		subs	r3, r3, r2
 459 0180 9BB2     		uxth	r3, r3
 460 0182 002B     		cmp	r3, #0
 461 0184 15D0     		beq	.L18
 462              		.loc 1 356 0 is_stmt 0 discriminator 1
 463 0186 404B     		ldr	r3, .L48
 464 0188 5B89     		ldrh	r3, [r3, #10]	@ movhi
 465 018a 9BB2     		uxth	r3, r3
 466 018c 03F00303 		and	r3, r3, #3
 467 0190 9BB2     		uxth	r3, r3
 468 0192 002B     		cmp	r3, #0
 469 0194 16D1     		bne	.L19
 470              		.loc 1 356 0 discriminator 2
 471 0196 3C4B     		ldr	r3, .L48
 472 0198 5B89     		ldrh	r3, [r3, #10]	@ movhi
 473 019a 9BB2     		uxth	r3, r3
 474 019c 3D4A     		ldr	r2, .L48+12
 475 019e A2FB0312 		umull	r1, r2, r2, r3
 476 01a2 5209     		lsrs	r2, r2, #5
 477 01a4 6421     		movs	r1, #100
 478 01a6 01FB02F2 		mul	r2, r1, r2
 479 01aa 9B1A     		subs	r3, r3, r2
 480 01ac 9BB2     		uxth	r3, r3
 481 01ae 002B     		cmp	r3, #0
 482 01b0 08D0     		beq	.L19
 483              	.L18:
 357:Generated_Source\PSoC5/RTC_INT.c ****                         {
 358:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set leap year flag */
 359:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_LY;
 484              		.loc 1 359 0 is_stmt 1
 485 01b2 364B     		ldr	r3, .L48+4
 486 01b4 1B78     		ldrb	r3, [r3]
 487 01b6 DBB2     		uxtb	r3, r3
 488 01b8 43F00203 		orr	r3, r3, #2
 489 01bc DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 16


 490 01be 334B     		ldr	r3, .L48+4
 491 01c0 1A70     		strb	r2, [r3]
 492 01c2 07E0     		b	.L20
 493              	.L19:
 360:Generated_Source\PSoC5/RTC_INT.c ****                         }
 361:Generated_Source\PSoC5/RTC_INT.c ****                         else    /* not leap year */
 362:Generated_Source\PSoC5/RTC_INT.c ****                         {
 363:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear leap year */
 364:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 494              		.loc 1 364 0
 495 01c4 314B     		ldr	r3, .L48+4
 496 01c6 1B78     		ldrb	r3, [r3]
 497 01c8 DBB2     		uxtb	r3, r3
 498 01ca 23F00203 		bic	r3, r3, #2
 499 01ce DAB2     		uxtb	r2, r3
 500 01d0 2E4B     		ldr	r3, .L48+4
 501 01d2 1A70     		strb	r2, [r3]
 502              	.L20:
 365:Generated_Source\PSoC5/RTC_INT.c ****                         }
 366:Generated_Source\PSoC5/RTC_INT.c **** 
 367:Generated_Source\PSoC5/RTC_INT.c ****                         /* Alarm YEAR */
 368:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 503              		.loc 1 368 0
 504 01d4 304B     		ldr	r3, .L48+16
 505 01d6 1B78     		ldrb	r3, [r3]
 506 01d8 DBB2     		uxtb	r3, r3
 507 01da 5BB2     		sxtb	r3, r3
 508 01dc 002B     		cmp	r3, #0
 509 01de 18DA     		bge	.L21
 369:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_ALARM_YEAR_MASK))
 370:Generated_Source\PSoC5/RTC_INT.c ****                         {
 371:Generated_Source\PSoC5/RTC_INT.c ****                             /* Years match */
 372:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 510              		.loc 1 372 0
 511 01e0 2E4B     		ldr	r3, .L48+20
 512 01e2 5B89     		ldrh	r3, [r3, #10]	@ movhi
 513 01e4 9AB2     		uxth	r2, r3
 514 01e6 284B     		ldr	r3, .L48
 515 01e8 5B89     		ldrh	r3, [r3, #10]	@ movhi
 516 01ea 9BB2     		uxth	r3, r3
 517 01ec 9A42     		cmp	r2, r3
 518 01ee 08D1     		bne	.L22
 373:Generated_Source\PSoC5/RTC_INT.c ****                             {
 374:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Rise year alarm */
 375:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 519              		.loc 1 375 0
 520 01f0 2B4B     		ldr	r3, .L48+24
 521 01f2 1B78     		ldrb	r3, [r3]
 522 01f4 DBB2     		uxtb	r3, r3
 523 01f6 63F07F03 		orn	r3, r3, #127
 524 01fa DAB2     		uxtb	r2, r3
 525 01fc 284B     		ldr	r3, .L48+24
 526 01fe 1A70     		strb	r2, [r3]
 527 0200 07E0     		b	.L21
 528              	.L22:
 376:Generated_Source\PSoC5/RTC_INT.c ****                             }
 377:Generated_Source\PSoC5/RTC_INT.c ****                             else    /* Years do not match */
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 17


 378:Generated_Source\PSoC5/RTC_INT.c ****                             {
 379:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Clear year alarm */
 380:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 529              		.loc 1 380 0
 530 0202 274B     		ldr	r3, .L48+24
 531 0204 1B78     		ldrb	r3, [r3]
 532 0206 DBB2     		uxtb	r3, r3
 533 0208 03F07F03 		and	r3, r3, #127
 534 020c DAB2     		uxtb	r2, r3
 535 020e 244B     		ldr	r3, .L48+24
 536 0210 1A70     		strb	r2, [r3]
 537              	.L21:
 381:Generated_Source\PSoC5/RTC_INT.c ****                             }
 382:Generated_Source\PSoC5/RTC_INT.c ****                         } /* do not alarm year */
 383:Generated_Source\PSoC5/RTC_INT.c **** 
 384:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set Alarm flag event */
 385:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_tmp = RTC_alarmCfgMask;
 538              		.loc 1 385 0
 539 0212 214B     		ldr	r3, .L48+16
 540 0214 1B78     		ldrb	r3, [r3]
 541 0216 FB71     		strb	r3, [r7, #7]
 386:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_SET_ALARM(RTC_tmp,
 542              		.loc 1 386 0
 543 0218 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 544 021a 002B     		cmp	r3, #0
 545 021c 13D0     		beq	.L23
 546              		.loc 1 386 0 is_stmt 0 discriminator 1
 547 021e 204B     		ldr	r3, .L48+24
 548 0220 1B78     		ldrb	r3, [r3]
 549 0222 DAB2     		uxtb	r2, r3
 550 0224 FB79     		ldrb	r3, [r7, #7]
 551 0226 1340     		ands	r3, r3, r2
 552 0228 DBB2     		uxtb	r3, r3
 553 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 554 022c 9A42     		cmp	r2, r3
 555 022e 0AD1     		bne	.L23
 556              		.loc 1 386 0 discriminator 2
 557 0230 164B     		ldr	r3, .L48+4
 558 0232 1B78     		ldrb	r3, [r3]
 559 0234 DBB2     		uxtb	r3, r3
 560 0236 43F00803 		orr	r3, r3, #8
 561 023a DAB2     		uxtb	r2, r3
 562 023c 134B     		ldr	r3, .L48+4
 563 023e 1A70     		strb	r2, [r3]
 564 0240 174B     		ldr	r3, .L48+24
 565 0242 0022     		movs	r2, #0
 566 0244 1A70     		strb	r2, [r3]
 567              	.L23:
 387:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_alarmCurStatus,
 388:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_statusDateTime);
 389:Generated_Source\PSoC5/RTC_INT.c **** 
 390:Generated_Source\PSoC5/RTC_INT.c ****                         /* Every Year */
 391:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 568              		.loc 1 391 0 is_stmt 1
 569 0246 174B     		ldr	r3, .L48+28
 570 0248 1B78     		ldrb	r3, [r3]
 571 024a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 18


 572 024c 03F04003 		and	r3, r3, #64
 573 0250 002B     		cmp	r3, #0
 574 0252 01D0     		beq	.L17
 392:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_INTERVAL_YEAR_MASK))
 393:Generated_Source\PSoC5/RTC_INT.c ****                         {
 394:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_EveryYearHandler();
 575              		.loc 1 394 0
 576 0254 FFF7FEFF 		bl	RTC_EveryYearHandler
 577              	.L17:
 395:Generated_Source\PSoC5/RTC_INT.c ****                         }
 396:Generated_Source\PSoC5/RTC_INT.c **** 
 397:Generated_Source\PSoC5/RTC_INT.c ****                     } /* Month > 12 */
 398:Generated_Source\PSoC5/RTC_INT.c **** 
 399:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 400:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 578              		.loc 1 400 0
 579 0258 0F4B     		ldr	r3, .L48+16
 580 025a 1B78     		ldrb	r3, [r3]
 581 025c DBB2     		uxtb	r3, r3
 582 025e 03F04003 		and	r3, r3, #64
 583 0262 002B     		cmp	r3, #0
 584 0264 28D0     		beq	.L24
 401:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 402:Generated_Source\PSoC5/RTC_INT.c ****                     {
 403:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 585              		.loc 1 403 0
 586 0266 0D4B     		ldr	r3, .L48+20
 587 0268 1B7A     		ldrb	r3, [r3, #8]
 588 026a DAB2     		uxtb	r2, r3
 589 026c 064B     		ldr	r3, .L48
 590 026e 1B7A     		ldrb	r3, [r3, #8]
 591 0270 DBB2     		uxtb	r3, r3
 592 0272 9A42     		cmp	r2, r3
 593 0274 18D1     		bne	.L25
 404:Generated_Source\PSoC5/RTC_INT.c ****                         {
 405:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set month alarm */
 406:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 594              		.loc 1 406 0
 595 0276 0A4B     		ldr	r3, .L48+24
 596 0278 1B78     		ldrb	r3, [r3]
 597 027a DBB2     		uxtb	r3, r3
 598 027c 43F04003 		orr	r3, r3, #64
 599 0280 DAB2     		uxtb	r2, r3
 600 0282 074B     		ldr	r3, .L48+24
 601 0284 1A70     		strb	r2, [r3]
 602 0286 17E0     		b	.L24
 603              	.L49:
 604              		.align	2
 605              	.L48:
 606 0288 00000000 		.word	RTC_currentTimeDate
 607 028c 00000000 		.word	RTC_statusDateTime
 608 0290 00000000 		.word	RTC_daysInMonths
 609 0294 1F85EB51 		.word	1374389535
 610 0298 00000000 		.word	RTC_alarmCfgMask
 611 029c 00000000 		.word	RTC_alarmCfgTimeDate
 612 02a0 00000000 		.word	RTC_alarmCurStatus
 613 02a4 00000000 		.word	RTC_intervalCfgMask
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 19


 614              	.L25:
 407:Generated_Source\PSoC5/RTC_INT.c ****                         }
 408:Generated_Source\PSoC5/RTC_INT.c ****                         else
 409:Generated_Source\PSoC5/RTC_INT.c ****                         {
 410:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear month alarm */
 411:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 615              		.loc 1 411 0
 616 02a8 964B     		ldr	r3, .L50
 617 02aa 1B78     		ldrb	r3, [r3]
 618 02ac DBB2     		uxtb	r3, r3
 619 02ae 23F04003 		bic	r3, r3, #64
 620 02b2 DAB2     		uxtb	r2, r3
 621 02b4 934B     		ldr	r3, .L50
 622 02b6 1A70     		strb	r2, [r3]
 623              	.L24:
 412:Generated_Source\PSoC5/RTC_INT.c ****                         }
 413:Generated_Source\PSoC5/RTC_INT.c ****                     }   /* Month alarm is masked */
 414:Generated_Source\PSoC5/RTC_INT.c **** 
 415:Generated_Source\PSoC5/RTC_INT.c ****                     #if (1u == RTC_DST_FUNC_ENABLE)
 416:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 417:Generated_Source\PSoC5/RTC_INT.c ****                         {
 418:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus |= RTC_DST_MONTH;
 419:Generated_Source\PSoC5/RTC_INT.c ****                         }
 420:Generated_Source\PSoC5/RTC_INT.c ****                         else
 421:Generated_Source\PSoC5/RTC_INT.c ****                         {
 422:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 423:Generated_Source\PSoC5/RTC_INT.c ****                         }
 424:Generated_Source\PSoC5/RTC_INT.c **** 
 425:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStart.Month == RTC_currentTimeDate.Month)
 426:Generated_Source\PSoC5/RTC_INT.c ****                         {
 427:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus |= RTC_DST_MONTH;
 428:Generated_Source\PSoC5/RTC_INT.c ****                         }
 429:Generated_Source\PSoC5/RTC_INT.c ****                         else
 430:Generated_Source\PSoC5/RTC_INT.c ****                         {
 431:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus &= (uint8)(~RTC_DST_MONTH);
 432:Generated_Source\PSoC5/RTC_INT.c ****                         }
 433:Generated_Source\PSoC5/RTC_INT.c ****                     #endif /* 1u == RTC_DST_FUNC_ENABLE */
 434:Generated_Source\PSoC5/RTC_INT.c **** 
 435:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 436:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 624              		.loc 1 436 0
 625 02b8 934B     		ldr	r3, .L50+4
 626 02ba 1B78     		ldrb	r3, [r3]
 627 02bc FB71     		strb	r3, [r7, #7]
 437:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 628              		.loc 1 437 0
 629 02be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 630 02c0 002B     		cmp	r3, #0
 631 02c2 13D0     		beq	.L26
 632              		.loc 1 437 0 is_stmt 0 discriminator 1
 633 02c4 8F4B     		ldr	r3, .L50
 634 02c6 1B78     		ldrb	r3, [r3]
 635 02c8 DAB2     		uxtb	r2, r3
 636 02ca FB79     		ldrb	r3, [r7, #7]
 637 02cc 1340     		ands	r3, r3, r2
 638 02ce DBB2     		uxtb	r3, r3
 639 02d0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 20


 640 02d2 9A42     		cmp	r2, r3
 641 02d4 0AD1     		bne	.L26
 642              		.loc 1 437 0 discriminator 2
 643 02d6 8D4B     		ldr	r3, .L50+8
 644 02d8 1B78     		ldrb	r3, [r3]
 645 02da DBB2     		uxtb	r3, r3
 646 02dc 43F00803 		orr	r3, r3, #8
 647 02e0 DAB2     		uxtb	r2, r3
 648 02e2 8A4B     		ldr	r3, .L50+8
 649 02e4 1A70     		strb	r2, [r3]
 650 02e6 874B     		ldr	r3, .L50
 651 02e8 0022     		movs	r2, #0
 652 02ea 1A70     		strb	r2, [r3]
 653              	.L26:
 438:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 439:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 440:Generated_Source\PSoC5/RTC_INT.c **** 
 441:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Month */
 442:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 654              		.loc 1 442 0 is_stmt 1
 655 02ec 884B     		ldr	r3, .L50+12
 656 02ee 1B78     		ldrb	r3, [r3]
 657 02f0 DBB2     		uxtb	r3, r3
 658 02f2 03F02003 		and	r3, r3, #32
 659 02f6 002B     		cmp	r3, #0
 660 02f8 01D0     		beq	.L16
 443:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_MONTH_MASK))
 444:Generated_Source\PSoC5/RTC_INT.c ****                     {
 445:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_EveryMonthHandler();
 661              		.loc 1 445 0
 662 02fa FFF7FEFF 		bl	RTC_EveryMonthHandler
 663              	.L16:
 446:Generated_Source\PSoC5/RTC_INT.c ****                     }
 447:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day roll over */
 448:Generated_Source\PSoC5/RTC_INT.c **** 
 449:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFWEEK */
 450:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 664              		.loc 1 450 0
 665 02fe 824B     		ldr	r3, .L50+4
 666 0300 1B78     		ldrb	r3, [r3]
 667 0302 DBB2     		uxtb	r3, r3
 668 0304 03F00803 		and	r3, r3, #8
 669 0308 002B     		cmp	r3, #0
 670 030a 18D0     		beq	.L27
 451:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFWEEK_MASK))
 452:Generated_Source\PSoC5/RTC_INT.c ****                 {
 453:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 671              		.loc 1 453 0
 672 030c 814B     		ldr	r3, .L50+16
 673 030e DB78     		ldrb	r3, [r3, #3]
 674 0310 DAB2     		uxtb	r2, r3
 675 0312 814B     		ldr	r3, .L50+20
 676 0314 DB78     		ldrb	r3, [r3, #3]
 677 0316 DBB2     		uxtb	r3, r3
 678 0318 9A42     		cmp	r2, r3
 679 031a 08D1     		bne	.L28
 454:Generated_Source\PSoC5/RTC_INT.c ****                     {
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 21


 455:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of week alarm */
 456:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 680              		.loc 1 456 0
 681 031c 794B     		ldr	r3, .L50
 682 031e 1B78     		ldrb	r3, [r3]
 683 0320 DBB2     		uxtb	r3, r3
 684 0322 43F00803 		orr	r3, r3, #8
 685 0326 DAB2     		uxtb	r2, r3
 686 0328 764B     		ldr	r3, .L50
 687 032a 1A70     		strb	r2, [r3]
 688 032c 07E0     		b	.L27
 689              	.L28:
 457:Generated_Source\PSoC5/RTC_INT.c ****                     }
 458:Generated_Source\PSoC5/RTC_INT.c ****                     else
 459:Generated_Source\PSoC5/RTC_INT.c ****                     {
 460:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of week alarm */
 461:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 690              		.loc 1 461 0
 691 032e 754B     		ldr	r3, .L50
 692 0330 1B78     		ldrb	r3, [r3]
 693 0332 DBB2     		uxtb	r3, r3
 694 0334 23F00803 		bic	r3, r3, #8
 695 0338 DAB2     		uxtb	r2, r3
 696 033a 724B     		ldr	r3, .L50
 697 033c 1A70     		strb	r2, [r3]
 698              	.L27:
 462:Generated_Source\PSoC5/RTC_INT.c ****                     }
 463:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of week alarm is masked */
 464:Generated_Source\PSoC5/RTC_INT.c **** 
 465:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFYEAR */
 466:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 699              		.loc 1 466 0
 700 033e 724B     		ldr	r3, .L50+4
 701 0340 1B78     		ldrb	r3, [r3]
 702 0342 DBB2     		uxtb	r3, r3
 703 0344 03F02003 		and	r3, r3, #32
 704 0348 002B     		cmp	r3, #0
 705 034a 18D0     		beq	.L29
 467:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFYEAR_MASK))
 468:Generated_Source\PSoC5/RTC_INT.c ****                 {
 469:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 706              		.loc 1 469 0
 707 034c 714B     		ldr	r3, .L50+16
 708 034e DB88     		ldrh	r3, [r3, #6]	@ movhi
 709 0350 9AB2     		uxth	r2, r3
 710 0352 714B     		ldr	r3, .L50+20
 711 0354 DB88     		ldrh	r3, [r3, #6]	@ movhi
 712 0356 9BB2     		uxth	r3, r3
 713 0358 9A42     		cmp	r2, r3
 714 035a 08D1     		bne	.L30
 470:Generated_Source\PSoC5/RTC_INT.c ****                     {
 471:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of year alarm */
 472:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 715              		.loc 1 472 0
 716 035c 694B     		ldr	r3, .L50
 717 035e 1B78     		ldrb	r3, [r3]
 718 0360 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 22


 719 0362 43F02003 		orr	r3, r3, #32
 720 0366 DAB2     		uxtb	r2, r3
 721 0368 664B     		ldr	r3, .L50
 722 036a 1A70     		strb	r2, [r3]
 723 036c 07E0     		b	.L29
 724              	.L30:
 473:Generated_Source\PSoC5/RTC_INT.c ****                     }
 474:Generated_Source\PSoC5/RTC_INT.c ****                     else
 475:Generated_Source\PSoC5/RTC_INT.c ****                     {
 476:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of year alarm */
 477:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 725              		.loc 1 477 0
 726 036e 654B     		ldr	r3, .L50
 727 0370 1B78     		ldrb	r3, [r3]
 728 0372 DBB2     		uxtb	r3, r3
 729 0374 23F02003 		bic	r3, r3, #32
 730 0378 DAB2     		uxtb	r2, r3
 731 037a 624B     		ldr	r3, .L50
 732 037c 1A70     		strb	r2, [r3]
 733              	.L29:
 478:Generated_Source\PSoC5/RTC_INT.c ****                     }
 479:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of year alarm is masked */
 480:Generated_Source\PSoC5/RTC_INT.c **** 
 481:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFMONTH */
 482:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 734              		.loc 1 482 0
 735 037e 624B     		ldr	r3, .L50+4
 736 0380 1B78     		ldrb	r3, [r3]
 737 0382 DBB2     		uxtb	r3, r3
 738 0384 03F01003 		and	r3, r3, #16
 739 0388 002B     		cmp	r3, #0
 740 038a 18D0     		beq	.L31
 483:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_ALARM_DAYOFMONTH_MASK))
 484:Generated_Source\PSoC5/RTC_INT.c ****                 {
 485:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 741              		.loc 1 485 0
 742 038c 614B     		ldr	r3, .L50+16
 743 038e 1B79     		ldrb	r3, [r3, #4]
 744 0390 DAB2     		uxtb	r2, r3
 745 0392 614B     		ldr	r3, .L50+20
 746 0394 1B79     		ldrb	r3, [r3, #4]
 747 0396 DBB2     		uxtb	r3, r3
 748 0398 9A42     		cmp	r2, r3
 749 039a 08D1     		bne	.L32
 486:Generated_Source\PSoC5/RTC_INT.c ****                     {
 487:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of month alarm */
 488:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 750              		.loc 1 488 0
 751 039c 594B     		ldr	r3, .L50
 752 039e 1B78     		ldrb	r3, [r3]
 753 03a0 DBB2     		uxtb	r3, r3
 754 03a2 43F01003 		orr	r3, r3, #16
 755 03a6 DAB2     		uxtb	r2, r3
 756 03a8 564B     		ldr	r3, .L50
 757 03aa 1A70     		strb	r2, [r3]
 758 03ac 07E0     		b	.L31
 759              	.L32:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 23


 489:Generated_Source\PSoC5/RTC_INT.c ****                     }
 490:Generated_Source\PSoC5/RTC_INT.c ****                     else
 491:Generated_Source\PSoC5/RTC_INT.c ****                     {
 492:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of month alarm */
 493:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 760              		.loc 1 493 0
 761 03ae 554B     		ldr	r3, .L50
 762 03b0 1B78     		ldrb	r3, [r3]
 763 03b2 DBB2     		uxtb	r3, r3
 764 03b4 23F01003 		bic	r3, r3, #16
 765 03b8 DAB2     		uxtb	r2, r3
 766 03ba 524B     		ldr	r3, .L50
 767 03bc 1A70     		strb	r2, [r3]
 768              	.L31:
 494:Generated_Source\PSoC5/RTC_INT.c ****                     }
 495:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of month alarm is masked */
 496:Generated_Source\PSoC5/RTC_INT.c **** 
 497:Generated_Source\PSoC5/RTC_INT.c ****                 #if (1u == RTC_DST_FUNC_ENABLE)
 498:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStop.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 499:Generated_Source\PSoC5/RTC_INT.c ****                     {
 500:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 501:Generated_Source\PSoC5/RTC_INT.c ****                     }
 502:Generated_Source\PSoC5/RTC_INT.c ****                     else
 503:Generated_Source\PSoC5/RTC_INT.c ****                     {
 504:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 505:Generated_Source\PSoC5/RTC_INT.c ****                     }
 506:Generated_Source\PSoC5/RTC_INT.c **** 
 507:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStart.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 508:Generated_Source\PSoC5/RTC_INT.c ****                     {
 509:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus |= RTC_DST_DAYOFMONTH;
 510:Generated_Source\PSoC5/RTC_INT.c ****                     }
 511:Generated_Source\PSoC5/RTC_INT.c ****                     else
 512:Generated_Source\PSoC5/RTC_INT.c ****                     {
 513:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 514:Generated_Source\PSoC5/RTC_INT.c ****                     }
 515:Generated_Source\PSoC5/RTC_INT.c ****                 #endif /* 1u == RTC_DST_FUNC_ENABLE */
 516:Generated_Source\PSoC5/RTC_INT.c **** 
 517:Generated_Source\PSoC5/RTC_INT.c ****                 /* Set Alarm flag event */
 518:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_tmp = RTC_alarmCfgMask;
 769              		.loc 1 518 0
 770 03be 524B     		ldr	r3, .L50+4
 771 03c0 1B78     		ldrb	r3, [r3]
 772 03c2 FB71     		strb	r3, [r7, #7]
 519:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_SET_ALARM(RTC_tmp,
 773              		.loc 1 519 0
 774 03c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 775 03c6 002B     		cmp	r3, #0
 776 03c8 13D0     		beq	.L33
 777              		.loc 1 519 0 is_stmt 0 discriminator 1
 778 03ca 4E4B     		ldr	r3, .L50
 779 03cc 1B78     		ldrb	r3, [r3]
 780 03ce DAB2     		uxtb	r2, r3
 781 03d0 FB79     		ldrb	r3, [r7, #7]
 782 03d2 1340     		ands	r3, r3, r2
 783 03d4 DBB2     		uxtb	r3, r3
 784 03d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 785 03d8 9A42     		cmp	r2, r3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 24


 786 03da 0AD1     		bne	.L33
 787              		.loc 1 519 0 discriminator 2
 788 03dc 4B4B     		ldr	r3, .L50+8
 789 03de 1B78     		ldrb	r3, [r3]
 790 03e0 DBB2     		uxtb	r3, r3
 791 03e2 43F00803 		orr	r3, r3, #8
 792 03e6 DAB2     		uxtb	r2, r3
 793 03e8 484B     		ldr	r3, .L50+8
 794 03ea 1A70     		strb	r2, [r3]
 795 03ec 454B     		ldr	r3, .L50
 796 03ee 0022     		movs	r2, #0
 797 03f0 1A70     		strb	r2, [r3]
 798              	.L33:
 520:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_alarmCurStatus,
 521:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_statusDateTime);
 522:Generated_Source\PSoC5/RTC_INT.c **** 
 523:Generated_Source\PSoC5/RTC_INT.c ****                 /* Every Day */
 524:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 799              		.loc 1 524 0 is_stmt 1
 800 03f2 474B     		ldr	r3, .L50+12
 801 03f4 1B78     		ldrb	r3, [r3]
 802 03f6 DBB2     		uxtb	r3, r3
 803 03f8 03F00803 		and	r3, r3, #8
 804 03fc 002B     		cmp	r3, #0
 805 03fe 01D0     		beq	.L34
 525:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_INTERVAL_DAY_MASK))
 526:Generated_Source\PSoC5/RTC_INT.c ****                 {
 527:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_EveryDayHandler();
 806              		.loc 1 527 0
 807 0400 FFF7FEFF 		bl	RTC_EveryDayHandler
 808              	.L34:
 528:Generated_Source\PSoC5/RTC_INT.c ****                 }
 529:Generated_Source\PSoC5/RTC_INT.c **** 
 530:Generated_Source\PSoC5/RTC_INT.c ****                 if(1u == RTC_currentTimeDate.DayOfWeek)
 809              		.loc 1 530 0
 810 0404 444B     		ldr	r3, .L50+20
 811 0406 DB78     		ldrb	r3, [r3, #3]
 812 0408 DBB2     		uxtb	r3, r3
 813 040a 012B     		cmp	r3, #1
 814 040c 08D1     		bne	.L11
 531:Generated_Source\PSoC5/RTC_INT.c ****                 {
 532:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Week */
 533:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 815              		.loc 1 533 0
 816 040e 404B     		ldr	r3, .L50+12
 817 0410 1B78     		ldrb	r3, [r3]
 818 0412 DBB2     		uxtb	r3, r3
 819 0414 03F01003 		and	r3, r3, #16
 820 0418 002B     		cmp	r3, #0
 821 041a 01D0     		beq	.L11
 534:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_WEEK_MASK))
 535:Generated_Source\PSoC5/RTC_INT.c ****                     {
 536:Generated_Source\PSoC5/RTC_INT.c ****                        RTC_EveryWeekHandler();
 822              		.loc 1 536 0
 823 041c FFF7FEFF 		bl	RTC_EveryWeekHandler
 824              	.L11:
 537:Generated_Source\PSoC5/RTC_INT.c ****                     }
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 25


 538:Generated_Source\PSoC5/RTC_INT.c ****                 }
 539:Generated_Source\PSoC5/RTC_INT.c **** 
 540:Generated_Source\PSoC5/RTC_INT.c ****             } /* End of day roll over */
 541:Generated_Source\PSoC5/RTC_INT.c **** 
 542:Generated_Source\PSoC5/RTC_INT.c ****             /* Status set PM/AM flag */
 543:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 825              		.loc 1 543 0
 826 0420 3D4B     		ldr	r3, .L50+20
 827 0422 9B78     		ldrb	r3, [r3, #2]
 828 0424 DBB2     		uxtb	r3, r3
 829 0426 0B2B     		cmp	r3, #11
 830 0428 08D8     		bhi	.L35
 544:Generated_Source\PSoC5/RTC_INT.c ****             {
 545:Generated_Source\PSoC5/RTC_INT.c ****                 /* AM Hour 00:00-11:59, flag zero */
 546:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 831              		.loc 1 546 0
 832 042a 384B     		ldr	r3, .L50+8
 833 042c 1B78     		ldrb	r3, [r3]
 834 042e DBB2     		uxtb	r3, r3
 835 0430 23F00403 		bic	r3, r3, #4
 836 0434 DAB2     		uxtb	r2, r3
 837 0436 354B     		ldr	r3, .L50+8
 838 0438 1A70     		strb	r2, [r3]
 839 043a 07E0     		b	.L36
 840              	.L35:
 547:Generated_Source\PSoC5/RTC_INT.c ****             }
 548:Generated_Source\PSoC5/RTC_INT.c ****             else
 549:Generated_Source\PSoC5/RTC_INT.c ****             {
 550:Generated_Source\PSoC5/RTC_INT.c ****                 /* PM Hour 12:00-23:59, flag set */
 551:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime |= RTC_STATUS_AM_PM;
 841              		.loc 1 551 0
 842 043c 334B     		ldr	r3, .L50+8
 843 043e 1B78     		ldrb	r3, [r3]
 844 0440 DBB2     		uxtb	r3, r3
 845 0442 43F00403 		orr	r3, r3, #4
 846 0446 DAB2     		uxtb	r2, r3
 847 0448 304B     		ldr	r3, .L50+8
 848 044a 1A70     		strb	r2, [r3]
 849              	.L36:
 552:Generated_Source\PSoC5/RTC_INT.c ****             }
 553:Generated_Source\PSoC5/RTC_INT.c **** 
 554:Generated_Source\PSoC5/RTC_INT.c ****             #if (1u == RTC_DST_FUNC_ENABLE)
 555:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStop.Hour == RTC_currentTimeDate.Hour)
 556:Generated_Source\PSoC5/RTC_INT.c ****                 {
 557:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus |= RTC_DST_HOUR;
 558:Generated_Source\PSoC5/RTC_INT.c ****                 }
 559:Generated_Source\PSoC5/RTC_INT.c ****                 else
 560:Generated_Source\PSoC5/RTC_INT.c ****                 {
 561:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus &= (uint8)(~RTC_DST_HOUR);
 562:Generated_Source\PSoC5/RTC_INT.c ****                 }
 563:Generated_Source\PSoC5/RTC_INT.c **** 
 564:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStart.Hour == RTC_currentTimeDate.Hour)
 565:Generated_Source\PSoC5/RTC_INT.c ****                 {
 566:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStartStatus |= RTC_DST_HOUR;
 567:Generated_Source\PSoC5/RTC_INT.c ****                 }
 568:Generated_Source\PSoC5/RTC_INT.c ****                 else
 569:Generated_Source\PSoC5/RTC_INT.c ****                 {
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 26


 570:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_dstStartStatus &= (uint8)(~RTC_DST_HOUR);
 571:Generated_Source\PSoC5/RTC_INT.c ****                 }
 572:Generated_Source\PSoC5/RTC_INT.c **** 
 573:Generated_Source\PSoC5/RTC_INT.c ****                 /* DST Enable ? */
 574:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_ENABLE))
 575:Generated_Source\PSoC5/RTC_INT.c ****                 {
 576:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_statusDateTime, RTC_STATUS_DST))
 577:Generated_Source\PSoC5/RTC_INT.c ****                     {
 578:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStopStatus, RTC_DST_HOUR |
 579:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_DAYOFMONTH | RTC_DST_MONTH))
 580:Generated_Source\PSoC5/RTC_INT.c ****                         {
 581:Generated_Source\PSoC5/RTC_INT.c ****                             /* Substruct from current value of minutes, number of minutes
 582:Generated_Source\PSoC5/RTC_INT.c ****                             * in DST offset which is out of complete hour
 583:Generated_Source\PSoC5/RTC_INT.c ****                             */
 584:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min -=
 585:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 586:Generated_Source\PSoC5/RTC_INT.c **** 
 587:Generated_Source\PSoC5/RTC_INT.c ****                             /* Is minute value negative? */
 588:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 589:Generated_Source\PSoC5/RTC_INT.c ****                             {
 590:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 591:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED -     (~currentTimeDate.Min    ) ==
 592:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED + 1 - (~currentTimeDate.Min + 1)
 593:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 594:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min = RTC_HOUR_ELAPSED -
 595:Generated_Source\PSoC5/RTC_INT.c ****                                                              ((uint8)(~RTC_currentTimeDate.Min));
 596:Generated_Source\PSoC5/RTC_INT.c **** 
 597:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour--;
 598:Generated_Source\PSoC5/RTC_INT.c ****                             }
 599:Generated_Source\PSoC5/RTC_INT.c **** 
 600:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour -= RTC_dstOffsetMin /
 601:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 602:Generated_Source\PSoC5/RTC_INT.c **** 
 603:Generated_Source\PSoC5/RTC_INT.c ****                             /* Day roll over
 604:Generated_Source\PSoC5/RTC_INT.c ****                             * Is hour value negative? */
 605:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 606:Generated_Source\PSoC5/RTC_INT.c ****                             {
 607:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 608:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED - (~currentTimeDate.Hour) ==
 609:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED + 1 - (~currentTimeDate.Hour + 1)
 610:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 611:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour = RTC_DAY_ELAPSED -
 612:Generated_Source\PSoC5/RTC_INT.c ****                                                               ((uint8)(~RTC_currentTimeDate.Hour));
 613:Generated_Source\PSoC5/RTC_INT.c **** 
 614:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 615:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 616:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 617:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 618:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 619:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 620:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 621:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 622:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 623:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 624:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 625:Generated_Source\PSoC5/RTC_INT.c **** 
 626:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth--;
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 27


 627:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear--;
 628:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek--;
 629:Generated_Source\PSoC5/RTC_INT.c **** 
 630:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfWeek)
 631:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 632:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = RTC_DAYS_IN_WEEK;
 633:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 634:Generated_Source\PSoC5/RTC_INT.c **** 
 635:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfMonth)
 636:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 637:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month--;
 638:Generated_Source\PSoC5/RTC_INT.c ****                                     if(0u == RTC_currentTimeDate.Month)
 639:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 640:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_DECEMBER;
 641:Generated_Source\PSoC5/RTC_INT.c **** 
 642:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfMonth =
 643:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 644:Generated_Source\PSoC5/RTC_INT.c **** 
 645:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year--;
 646:Generated_Source\PSoC5/RTC_INT.c **** 
 647:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 648:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 649:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 650:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 651:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear =
 652:Generated_Source\PSoC5/RTC_INT.c ****                                                                                     RTC_DAYS_IN_LEA
 653:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 654:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 655:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 656:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 657:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear = RTC_DAYS_IN_YEAR;
 658:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 659:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 660:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 661:Generated_Source\PSoC5/RTC_INT.c ****                                     else
 662:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 663:Generated_Source\PSoC5/RTC_INT.c ****                                         /* Day of month roll over.
 664:Generated_Source\PSoC5/RTC_INT.c ****                                         * Check if day of month February 29 of leap year
 665:Generated_Source\PSoC5/RTC_INT.c ****                                         */
 666:Generated_Source\PSoC5/RTC_INT.c ****                                         if((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 667:Generated_Source\PSoC5/RTC_INT.c ****                                             (RTC_currentTimeDate.Month == RTC_FEBRUARY))
 668:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 669:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
 670:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u]
 671:Generated_Source\PSoC5/RTC_INT.c ****                                             + 1u;
 672:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 673:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 674:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 675:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
 676:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 677:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 678:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 679:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 680:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 681:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 682:Generated_Source\PSoC5/RTC_INT.c ****                             }
 683:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 28


 684:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus = 0u;
 685:Generated_Source\PSoC5/RTC_INT.c ****                         }
 686:Generated_Source\PSoC5/RTC_INT.c ****                     }
 687:Generated_Source\PSoC5/RTC_INT.c ****                     else
 688:Generated_Source\PSoC5/RTC_INT.c ****                     {
 689:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStartStatus,
 690:Generated_Source\PSoC5/RTC_INT.c ****                                                       (RTC_DST_HOUR | RTC_DST_DAYOFMONTH |
 691:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_MONTH)))
 692:Generated_Source\PSoC5/RTC_INT.c ****                         {
 693:Generated_Source\PSoC5/RTC_INT.c ****                             /* Add Hour and Min */
 694:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min +=
 695:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 696:Generated_Source\PSoC5/RTC_INT.c **** 
 697:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 698:Generated_Source\PSoC5/RTC_INT.c ****                             {
 699:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust Min */
 700:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min -= (RTC_HOUR_ELAPSED + 1u);
 701:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour++;
 702:Generated_Source\PSoC5/RTC_INT.c ****                             }
 703:Generated_Source\PSoC5/RTC_INT.c **** 
 704:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour += RTC_dstOffsetMin /
 705:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 706:Generated_Source\PSoC5/RTC_INT.c **** 
 707:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 708:Generated_Source\PSoC5/RTC_INT.c ****                             {
 709:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust hour, add day */
 710:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour -= (RTC_DAY_ELAPSED + 1u);
 711:Generated_Source\PSoC5/RTC_INT.c **** 
 712:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 713:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 714:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 715:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 716:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 717:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 718:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 719:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 720:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 721:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 722:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 723:Generated_Source\PSoC5/RTC_INT.c **** 
 724:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth++;
 725:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear++;
 726:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek++;
 727:Generated_Source\PSoC5/RTC_INT.c **** 
 728:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 729:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 730:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = 1u;
 731:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 732:Generated_Source\PSoC5/RTC_INT.c **** 
 733:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Day of month roll over.
 734:Generated_Source\PSoC5/RTC_INT.c ****                                 * Check if day of month greater than 29 in February of leap year or
 735:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than 28 NOT in February of NON leap year 
 736:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than it should be in every month in non l
 737:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 738:Generated_Source\PSoC5/RTC_INT.c ****                                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 739:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 740:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 29


 741:Generated_Source\PSoC5/RTC_INT.c ****                                   (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 742:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 743:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month != RTC_FEBRUARY)  &&
 744:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 745:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 746:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY)) &&
 747:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 748:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 749:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 750:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month++;
 751:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfMonth = 1u;
 752:Generated_Source\PSoC5/RTC_INT.c ****                                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 753:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 754:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_JANUARY;
 755:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year++;
 756:Generated_Source\PSoC5/RTC_INT.c **** 
 757:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 758:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 759:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 760:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 761:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 762:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 763:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 764:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 765:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 766:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfYear = 1u;
 767:Generated_Source\PSoC5/RTC_INT.c **** 
 768:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 769:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 770:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 771:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 772:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 773:Generated_Source\PSoC5/RTC_INT.c ****                             }
 774:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_DST;
 775:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus = 0u;
 776:Generated_Source\PSoC5/RTC_INT.c **** 
 777:Generated_Source\PSoC5/RTC_INT.c ****                             /* Month */
 778:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 779:Generated_Source\PSoC5/RTC_INT.c ****                             {
 780:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_MONTH;
 781:Generated_Source\PSoC5/RTC_INT.c ****                             }
 782:Generated_Source\PSoC5/RTC_INT.c ****                             else
 783:Generated_Source\PSoC5/RTC_INT.c ****                             {
 784:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 785:Generated_Source\PSoC5/RTC_INT.c ****                             }
 786:Generated_Source\PSoC5/RTC_INT.c **** 
 787:Generated_Source\PSoC5/RTC_INT.c ****                             /* DayOfMonth */
 788:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.DayOfMonth ==
 789:Generated_Source\PSoC5/RTC_INT.c ****                                                                             RTC_currentTimeDate.Day
 790:Generated_Source\PSoC5/RTC_INT.c ****                             {
 791:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 792:Generated_Source\PSoC5/RTC_INT.c ****                             }
 793:Generated_Source\PSoC5/RTC_INT.c ****                             else
 794:Generated_Source\PSoC5/RTC_INT.c ****                             {
 795:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 796:Generated_Source\PSoC5/RTC_INT.c ****                             }
 797:Generated_Source\PSoC5/RTC_INT.c ****                         }
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 30


 798:Generated_Source\PSoC5/RTC_INT.c ****                     }
 799:Generated_Source\PSoC5/RTC_INT.c **** 
 800:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFWEEK */
 801:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 802:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFWEEK_MASK))
 803:Generated_Source\PSoC5/RTC_INT.c ****                     {
 804:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 805:Generated_Source\PSoC5/RTC_INT.c ****                         {
 806:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 807:Generated_Source\PSoC5/RTC_INT.c ****                         }
 808:Generated_Source\PSoC5/RTC_INT.c ****                         else
 809:Generated_Source\PSoC5/RTC_INT.c ****                         {
 810:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 811:Generated_Source\PSoC5/RTC_INT.c ****                         }
 812:Generated_Source\PSoC5/RTC_INT.c ****                     }
 813:Generated_Source\PSoC5/RTC_INT.c **** 
 814:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFYEAR */
 815:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 816:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFYEAR_MASK))
 817:Generated_Source\PSoC5/RTC_INT.c ****                     {
 818:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 819:Generated_Source\PSoC5/RTC_INT.c ****                         {
 820:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 821:Generated_Source\PSoC5/RTC_INT.c ****                         }
 822:Generated_Source\PSoC5/RTC_INT.c ****                         else
 823:Generated_Source\PSoC5/RTC_INT.c ****                         {
 824:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 825:Generated_Source\PSoC5/RTC_INT.c ****                         }
 826:Generated_Source\PSoC5/RTC_INT.c ****                     }
 827:Generated_Source\PSoC5/RTC_INT.c **** 
 828:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFMONTH */
 829:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 830:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFMONTH_MASK))
 831:Generated_Source\PSoC5/RTC_INT.c ****                     {
 832:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 833:Generated_Source\PSoC5/RTC_INT.c ****                         {
 834:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 835:Generated_Source\PSoC5/RTC_INT.c ****                         }
 836:Generated_Source\PSoC5/RTC_INT.c ****                         else
 837:Generated_Source\PSoC5/RTC_INT.c ****                         {
 838:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 839:Generated_Source\PSoC5/RTC_INT.c ****                         }
 840:Generated_Source\PSoC5/RTC_INT.c ****                     }
 841:Generated_Source\PSoC5/RTC_INT.c **** 
 842:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 843:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 844:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 845:Generated_Source\PSoC5/RTC_INT.c ****                     {
 846:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 847:Generated_Source\PSoC5/RTC_INT.c ****                         {
 848:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 849:Generated_Source\PSoC5/RTC_INT.c ****                         }
 850:Generated_Source\PSoC5/RTC_INT.c ****                         else
 851:Generated_Source\PSoC5/RTC_INT.c ****                         {
 852:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 853:Generated_Source\PSoC5/RTC_INT.c ****                         }
 854:Generated_Source\PSoC5/RTC_INT.c ****                     }
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 31


 855:Generated_Source\PSoC5/RTC_INT.c **** 
 856:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm YEAR */
 857:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 858:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_YEAR_MASK))
 859:Generated_Source\PSoC5/RTC_INT.c ****                     {
 860:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 861:Generated_Source\PSoC5/RTC_INT.c ****                         {
 862:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 863:Generated_Source\PSoC5/RTC_INT.c ****                         }
 864:Generated_Source\PSoC5/RTC_INT.c ****                         else
 865:Generated_Source\PSoC5/RTC_INT.c ****                         {
 866:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 867:Generated_Source\PSoC5/RTC_INT.c ****                         }
 868:Generated_Source\PSoC5/RTC_INT.c ****                     }
 869:Generated_Source\PSoC5/RTC_INT.c **** 
 870:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 871:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 872:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 873:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 874:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 875:Generated_Source\PSoC5/RTC_INT.c ****                 }
 876:Generated_Source\PSoC5/RTC_INT.c ****             #endif /* 1u == RTC_DST_FUNC_ENABLE */
 877:Generated_Source\PSoC5/RTC_INT.c **** 
 878:Generated_Source\PSoC5/RTC_INT.c ****             /* Alarm HOUR */
 879:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_HOUR_MASK))
 850              		.loc 1 879 0
 851 044c 2E4B     		ldr	r3, .L50+4
 852 044e 1B78     		ldrb	r3, [r3]
 853 0450 DBB2     		uxtb	r3, r3
 854 0452 03F00403 		and	r3, r3, #4
 855 0456 002B     		cmp	r3, #0
 856 0458 18D0     		beq	.L37
 880:Generated_Source\PSoC5/RTC_INT.c ****             {
 881:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_alarmCfgTimeDate.Hour == RTC_currentTimeDate.Hour)
 857              		.loc 1 881 0
 858 045a 2E4B     		ldr	r3, .L50+16
 859 045c 9B78     		ldrb	r3, [r3, #2]
 860 045e DAB2     		uxtb	r2, r3
 861 0460 2D4B     		ldr	r3, .L50+20
 862 0462 9B78     		ldrb	r3, [r3, #2]
 863 0464 DBB2     		uxtb	r3, r3
 864 0466 9A42     		cmp	r2, r3
 865 0468 08D1     		bne	.L38
 882:Generated_Source\PSoC5/RTC_INT.c ****                 {
 883:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus |= RTC_ALARM_HOUR_MASK;
 866              		.loc 1 883 0
 867 046a 264B     		ldr	r3, .L50
 868 046c 1B78     		ldrb	r3, [r3]
 869 046e DBB2     		uxtb	r3, r3
 870 0470 43F00403 		orr	r3, r3, #4
 871 0474 DAB2     		uxtb	r2, r3
 872 0476 234B     		ldr	r3, .L50
 873 0478 1A70     		strb	r2, [r3]
 874 047a 07E0     		b	.L37
 875              	.L38:
 884:Generated_Source\PSoC5/RTC_INT.c ****                 }
 885:Generated_Source\PSoC5/RTC_INT.c ****                 else
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 32


 886:Generated_Source\PSoC5/RTC_INT.c ****                 {
 887:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_HOUR_MASK);
 876              		.loc 1 887 0
 877 047c 214B     		ldr	r3, .L50
 878 047e 1B78     		ldrb	r3, [r3]
 879 0480 DBB2     		uxtb	r3, r3
 880 0482 23F00403 		bic	r3, r3, #4
 881 0486 DAB2     		uxtb	r2, r3
 882 0488 1E4B     		ldr	r3, .L50
 883 048a 1A70     		strb	r2, [r3]
 884              	.L37:
 888:Generated_Source\PSoC5/RTC_INT.c ****                 }
 889:Generated_Source\PSoC5/RTC_INT.c ****             }
 890:Generated_Source\PSoC5/RTC_INT.c **** 
 891:Generated_Source\PSoC5/RTC_INT.c ****             /* Set Alarm flag event */
 892:Generated_Source\PSoC5/RTC_INT.c ****             RTC_tmp = RTC_alarmCfgMask;
 885              		.loc 1 892 0
 886 048c 1E4B     		ldr	r3, .L50+4
 887 048e 1B78     		ldrb	r3, [r3]
 888 0490 FB71     		strb	r3, [r7, #7]
 893:Generated_Source\PSoC5/RTC_INT.c ****             RTC_SET_ALARM(RTC_tmp,
 889              		.loc 1 893 0
 890 0492 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 891 0494 002B     		cmp	r3, #0
 892 0496 13D0     		beq	.L39
 893              		.loc 1 893 0 is_stmt 0 discriminator 1
 894 0498 1A4B     		ldr	r3, .L50
 895 049a 1B78     		ldrb	r3, [r3]
 896 049c DAB2     		uxtb	r2, r3
 897 049e FB79     		ldrb	r3, [r7, #7]
 898 04a0 1340     		ands	r3, r3, r2
 899 04a2 DBB2     		uxtb	r3, r3
 900 04a4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 901 04a6 9A42     		cmp	r2, r3
 902 04a8 0AD1     		bne	.L39
 903              		.loc 1 893 0 discriminator 2
 904 04aa 184B     		ldr	r3, .L50+8
 905 04ac 1B78     		ldrb	r3, [r3]
 906 04ae DBB2     		uxtb	r3, r3
 907 04b0 43F00803 		orr	r3, r3, #8
 908 04b4 DAB2     		uxtb	r2, r3
 909 04b6 154B     		ldr	r3, .L50+8
 910 04b8 1A70     		strb	r2, [r3]
 911 04ba 124B     		ldr	r3, .L50
 912 04bc 0022     		movs	r2, #0
 913 04be 1A70     		strb	r2, [r3]
 914              	.L39:
 894:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_alarmCurStatus,
 895:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_statusDateTime);
 896:Generated_Source\PSoC5/RTC_INT.c **** 
 897:Generated_Source\PSoC5/RTC_INT.c ****             /* Every Hour */
 898:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_HOUR_MASK))
 915              		.loc 1 898 0 is_stmt 1
 916 04c0 134B     		ldr	r3, .L50+12
 917 04c2 1B78     		ldrb	r3, [r3]
 918 04c4 DBB2     		uxtb	r3, r3
 919 04c6 03F00403 		and	r3, r3, #4
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 33


 920 04ca 002B     		cmp	r3, #0
 921 04cc 01D0     		beq	.L10
 899:Generated_Source\PSoC5/RTC_INT.c ****             {
 900:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_EveryHourHandler();
 922              		.loc 1 900 0
 923 04ce FFF7FEFF 		bl	RTC_EveryHourHandler
 924              	.L10:
 901:Generated_Source\PSoC5/RTC_INT.c ****             }
 902:Generated_Source\PSoC5/RTC_INT.c ****         } /* Min > 59 = Hour */
 903:Generated_Source\PSoC5/RTC_INT.c **** 
 904:Generated_Source\PSoC5/RTC_INT.c ****         /* Alarm MIN */
 905:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_MIN_MASK))
 925              		.loc 1 905 0
 926 04d2 0D4B     		ldr	r3, .L50+4
 927 04d4 1B78     		ldrb	r3, [r3]
 928 04d6 DBB2     		uxtb	r3, r3
 929 04d8 03F00203 		and	r3, r3, #2
 930 04dc 002B     		cmp	r3, #0
 931 04de 25D0     		beq	.L40
 906:Generated_Source\PSoC5/RTC_INT.c ****         {
 907:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_alarmCfgTimeDate.Min == RTC_currentTimeDate.Min)
 932              		.loc 1 907 0
 933 04e0 0C4B     		ldr	r3, .L50+16
 934 04e2 5B78     		ldrb	r3, [r3, #1]
 935 04e4 DAB2     		uxtb	r2, r3
 936 04e6 0C4B     		ldr	r3, .L50+20
 937 04e8 5B78     		ldrb	r3, [r3, #1]
 938 04ea DBB2     		uxtb	r3, r3
 939 04ec 9A42     		cmp	r2, r3
 940 04ee 15D1     		bne	.L41
 908:Generated_Source\PSoC5/RTC_INT.c ****             {
 909:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus |= RTC_ALARM_MIN_MASK;
 941              		.loc 1 909 0
 942 04f0 044B     		ldr	r3, .L50
 943 04f2 1B78     		ldrb	r3, [r3]
 944 04f4 DBB2     		uxtb	r3, r3
 945 04f6 43F00203 		orr	r3, r3, #2
 946 04fa DAB2     		uxtb	r2, r3
 947 04fc 014B     		ldr	r3, .L50
 948 04fe 1A70     		strb	r2, [r3]
 949 0500 14E0     		b	.L40
 950              	.L51:
 951 0502 00BF     		.align	2
 952              	.L50:
 953 0504 00000000 		.word	RTC_alarmCurStatus
 954 0508 00000000 		.word	RTC_alarmCfgMask
 955 050c 00000000 		.word	RTC_statusDateTime
 956 0510 00000000 		.word	RTC_intervalCfgMask
 957 0514 00000000 		.word	RTC_alarmCfgTimeDate
 958 0518 00000000 		.word	RTC_currentTimeDate
 959              	.L41:
 910:Generated_Source\PSoC5/RTC_INT.c ****             }
 911:Generated_Source\PSoC5/RTC_INT.c ****             else
 912:Generated_Source\PSoC5/RTC_INT.c ****             {
 913:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MIN_MASK);
 960              		.loc 1 913 0
 961 051c 384B     		ldr	r3, .L52
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 34


 962 051e 1B78     		ldrb	r3, [r3]
 963 0520 DBB2     		uxtb	r3, r3
 964 0522 23F00203 		bic	r3, r3, #2
 965 0526 DAB2     		uxtb	r2, r3
 966 0528 354B     		ldr	r3, .L52
 967 052a 1A70     		strb	r2, [r3]
 968              	.L40:
 914:Generated_Source\PSoC5/RTC_INT.c ****             }
 915:Generated_Source\PSoC5/RTC_INT.c ****         }
 916:Generated_Source\PSoC5/RTC_INT.c **** 
 917:Generated_Source\PSoC5/RTC_INT.c ****         /* Set Alarm flag event */
 918:Generated_Source\PSoC5/RTC_INT.c ****         RTC_tmp = RTC_alarmCfgMask;
 969              		.loc 1 918 0
 970 052c 354B     		ldr	r3, .L52+4
 971 052e 1B78     		ldrb	r3, [r3]
 972 0530 FB71     		strb	r3, [r7, #7]
 919:Generated_Source\PSoC5/RTC_INT.c ****         RTC_SET_ALARM(RTC_tmp,
 973              		.loc 1 919 0
 974 0532 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 975 0534 002B     		cmp	r3, #0
 976 0536 13D0     		beq	.L42
 977              		.loc 1 919 0 is_stmt 0 discriminator 1
 978 0538 314B     		ldr	r3, .L52
 979 053a 1B78     		ldrb	r3, [r3]
 980 053c DAB2     		uxtb	r2, r3
 981 053e FB79     		ldrb	r3, [r7, #7]
 982 0540 1340     		ands	r3, r3, r2
 983 0542 DBB2     		uxtb	r3, r3
 984 0544 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 985 0546 9A42     		cmp	r2, r3
 986 0548 0AD1     		bne	.L42
 987              		.loc 1 919 0 discriminator 2
 988 054a 2F4B     		ldr	r3, .L52+8
 989 054c 1B78     		ldrb	r3, [r3]
 990 054e DBB2     		uxtb	r3, r3
 991 0550 43F00803 		orr	r3, r3, #8
 992 0554 DAB2     		uxtb	r2, r3
 993 0556 2C4B     		ldr	r3, .L52+8
 994 0558 1A70     		strb	r2, [r3]
 995 055a 294B     		ldr	r3, .L52
 996 055c 0022     		movs	r2, #0
 997 055e 1A70     		strb	r2, [r3]
 998              	.L42:
 920:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_alarmCurStatus,
 921:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_statusDateTime);
 922:Generated_Source\PSoC5/RTC_INT.c **** 
 923:Generated_Source\PSoC5/RTC_INT.c ****         /* Every Min */
 924:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_MIN_MASK))
 999              		.loc 1 924 0 is_stmt 1
 1000 0560 2A4B     		ldr	r3, .L52+12
 1001 0562 1B78     		ldrb	r3, [r3]
 1002 0564 DBB2     		uxtb	r3, r3
 1003 0566 03F00203 		and	r3, r3, #2
 1004 056a 002B     		cmp	r3, #0
 1005 056c 01D0     		beq	.L9
 925:Generated_Source\PSoC5/RTC_INT.c ****         {
 926:Generated_Source\PSoC5/RTC_INT.c ****             RTC_EveryMinuteHandler();
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 35


 1006              		.loc 1 926 0
 1007 056e FFF7FEFF 		bl	RTC_EveryMinuteHandler
 1008              	.L9:
 927:Generated_Source\PSoC5/RTC_INT.c ****         }
 928:Generated_Source\PSoC5/RTC_INT.c ****     } /* Sec */
 929:Generated_Source\PSoC5/RTC_INT.c **** 
 930:Generated_Source\PSoC5/RTC_INT.c ****     /* Alarm SEC */
 931:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_SEC_MASK))
 1009              		.loc 1 931 0
 1010 0572 244B     		ldr	r3, .L52+4
 1011 0574 1B78     		ldrb	r3, [r3]
 1012 0576 DBB2     		uxtb	r3, r3
 1013 0578 03F00103 		and	r3, r3, #1
 1014 057c 002B     		cmp	r3, #0
 1015 057e 18D0     		beq	.L43
 932:Generated_Source\PSoC5/RTC_INT.c ****     {
 933:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_alarmCfgTimeDate.Sec == RTC_currentTimeDate.Sec)
 1016              		.loc 1 933 0
 1017 0580 234B     		ldr	r3, .L52+16
 1018 0582 1B78     		ldrb	r3, [r3]
 1019 0584 DAB2     		uxtb	r2, r3
 1020 0586 234B     		ldr	r3, .L52+20
 1021 0588 1B78     		ldrb	r3, [r3]
 1022 058a DBB2     		uxtb	r3, r3
 1023 058c 9A42     		cmp	r2, r3
 1024 058e 08D1     		bne	.L44
 934:Generated_Source\PSoC5/RTC_INT.c ****         {
 935:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus |= RTC_ALARM_SEC_MASK;
 1025              		.loc 1 935 0
 1026 0590 1B4B     		ldr	r3, .L52
 1027 0592 1B78     		ldrb	r3, [r3]
 1028 0594 DBB2     		uxtb	r3, r3
 1029 0596 43F00103 		orr	r3, r3, #1
 1030 059a DAB2     		uxtb	r2, r3
 1031 059c 184B     		ldr	r3, .L52
 1032 059e 1A70     		strb	r2, [r3]
 1033 05a0 07E0     		b	.L43
 1034              	.L44:
 936:Generated_Source\PSoC5/RTC_INT.c ****         }
 937:Generated_Source\PSoC5/RTC_INT.c ****         else
 938:Generated_Source\PSoC5/RTC_INT.c ****         {
 939:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_SEC_MASK);
 1035              		.loc 1 939 0
 1036 05a2 174B     		ldr	r3, .L52
 1037 05a4 1B78     		ldrb	r3, [r3]
 1038 05a6 DBB2     		uxtb	r3, r3
 1039 05a8 23F00103 		bic	r3, r3, #1
 1040 05ac DAB2     		uxtb	r2, r3
 1041 05ae 144B     		ldr	r3, .L52
 1042 05b0 1A70     		strb	r2, [r3]
 1043              	.L43:
 940:Generated_Source\PSoC5/RTC_INT.c ****         }
 941:Generated_Source\PSoC5/RTC_INT.c ****     }
 942:Generated_Source\PSoC5/RTC_INT.c **** 
 943:Generated_Source\PSoC5/RTC_INT.c ****     /* Set Alarm flag event */
 944:Generated_Source\PSoC5/RTC_INT.c ****     RTC_tmp = RTC_alarmCfgMask;
 1044              		.loc 1 944 0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 36


 1045 05b2 144B     		ldr	r3, .L52+4
 1046 05b4 1B78     		ldrb	r3, [r3]
 1047 05b6 FB71     		strb	r3, [r7, #7]
 945:Generated_Source\PSoC5/RTC_INT.c ****     RTC_SET_ALARM(RTC_tmp, RTC_alarmCurStatus, RTC_statusDateTime);
 1048              		.loc 1 945 0
 1049 05b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1050 05ba 002B     		cmp	r3, #0
 1051 05bc 13D0     		beq	.L45
 1052              		.loc 1 945 0 is_stmt 0 discriminator 1
 1053 05be 104B     		ldr	r3, .L52
 1054 05c0 1B78     		ldrb	r3, [r3]
 1055 05c2 DAB2     		uxtb	r2, r3
 1056 05c4 FB79     		ldrb	r3, [r7, #7]
 1057 05c6 1340     		ands	r3, r3, r2
 1058 05c8 DBB2     		uxtb	r3, r3
 1059 05ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1060 05cc 9A42     		cmp	r2, r3
 1061 05ce 0AD1     		bne	.L45
 1062              		.loc 1 945 0 discriminator 2
 1063 05d0 0D4B     		ldr	r3, .L52+8
 1064 05d2 1B78     		ldrb	r3, [r3]
 1065 05d4 DBB2     		uxtb	r3, r3
 1066 05d6 43F00803 		orr	r3, r3, #8
 1067 05da DAB2     		uxtb	r2, r3
 1068 05dc 0A4B     		ldr	r3, .L52+8
 1069 05de 1A70     		strb	r2, [r3]
 1070 05e0 074B     		ldr	r3, .L52
 1071 05e2 0022     		movs	r2, #0
 1072 05e4 1A70     		strb	r2, [r3]
 1073              	.L45:
 946:Generated_Source\PSoC5/RTC_INT.c **** 
 947:Generated_Source\PSoC5/RTC_INT.c ****     /* Execute every second handler if needed */
 948:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_SEC_MASK))
 1074              		.loc 1 948 0 is_stmt 1
 1075 05e6 094B     		ldr	r3, .L52+12
 1076 05e8 1B78     		ldrb	r3, [r3]
 1077 05ea DBB2     		uxtb	r3, r3
 1078 05ec 03F00103 		and	r3, r3, #1
 1079 05f0 002B     		cmp	r3, #0
 1080 05f2 01D0     		beq	.L47
 949:Generated_Source\PSoC5/RTC_INT.c ****     {
 950:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler();
 1081              		.loc 1 950 0
 1082 05f4 FFF7FEFF 		bl	RTC_EverySecondHandler
 1083              	.L47:
 951:Generated_Source\PSoC5/RTC_INT.c ****     }
 952:Generated_Source\PSoC5/RTC_INT.c ****     
 953:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_EXIT_CALLBACK
 954:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_ExitCallback();
 955:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_EXIT_CALLBACK */
 956:Generated_Source\PSoC5/RTC_INT.c **** }
 1084              		.loc 1 956 0
 1085 05f8 00BF     		nop
 1086 05fa 0837     		adds	r7, r7, #8
 1087              		.cfi_def_cfa_offset 8
 1088 05fc BD46     		mov	sp, r7
 1089              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 37


 1090              		@ sp needed
 1091 05fe 80BD     		pop	{r7, pc}
 1092              	.L53:
 1093              		.align	2
 1094              	.L52:
 1095 0600 00000000 		.word	RTC_alarmCurStatus
 1096 0604 00000000 		.word	RTC_alarmCfgMask
 1097 0608 00000000 		.word	RTC_statusDateTime
 1098 060c 00000000 		.word	RTC_intervalCfgMask
 1099 0610 00000000 		.word	RTC_alarmCfgTimeDate
 1100 0614 00000000 		.word	RTC_currentTimeDate
 1101              		.cfi_endproc
 1102              	.LFE71:
 1103              		.size	RTC_ISR, .-RTC_ISR
 1104              		.text
 1105              	.Letext0:
 1106              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 1107              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 1108              		.file 4 "Generated_Source\\PSoC5\\cytypes.h"
 1109              		.file 5 "Generated_Source\\PSoC5\\RTC.h"
 1110              		.file 6 "./modem.h"
 1111              		.file 7 "./data.h"
 1112              		.file 8 "./notoriOS.h"
 1113              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 1114              		.section	.debug_info,"",%progbits
 1115              	.Ldebug_info0:
 1116 0000 59050000 		.4byte	0x559
 1117 0004 0400     		.2byte	0x4
 1118 0006 00000000 		.4byte	.Ldebug_abbrev0
 1119 000a 04       		.byte	0x4
 1120 000b 01       		.uleb128 0x1
 1121 000c 5C000000 		.4byte	.LASF82
 1122 0010 0C       		.byte	0xc
 1123 0011 83040000 		.4byte	.LASF83
 1124 0015 EB020000 		.4byte	.LASF84
 1125 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1126 001d 00000000 		.4byte	0
 1127 0021 00000000 		.4byte	.Ldebug_line0
 1128 0025 02       		.uleb128 0x2
 1129 0026 01       		.byte	0x1
 1130 0027 06       		.byte	0x6
 1131 0028 6C020000 		.4byte	.LASF0
 1132 002c 02       		.uleb128 0x2
 1133 002d 01       		.byte	0x1
 1134 002e 08       		.byte	0x8
 1135 002f 26020000 		.4byte	.LASF1
 1136 0033 02       		.uleb128 0x2
 1137 0034 02       		.byte	0x2
 1138 0035 05       		.byte	0x5
 1139 0036 41000000 		.4byte	.LASF2
 1140 003a 02       		.uleb128 0x2
 1141 003b 02       		.byte	0x2
 1142 003c 07       		.byte	0x7
 1143 003d 5C030000 		.4byte	.LASF3
 1144 0041 03       		.uleb128 0x3
 1145 0042 79040000 		.4byte	.LASF9
 1146 0046 02       		.byte	0x2
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 38


 1147 0047 3F       		.byte	0x3f
 1148 0048 4C000000 		.4byte	0x4c
 1149 004c 02       		.uleb128 0x2
 1150 004d 04       		.byte	0x4
 1151 004e 05       		.byte	0x5
 1152 004f BA010000 		.4byte	.LASF4
 1153 0053 02       		.uleb128 0x2
 1154 0054 04       		.byte	0x4
 1155 0055 07       		.byte	0x7
 1156 0056 18040000 		.4byte	.LASF5
 1157 005a 02       		.uleb128 0x2
 1158 005b 08       		.byte	0x8
 1159 005c 05       		.byte	0x5
 1160 005d 9A010000 		.4byte	.LASF6
 1161 0061 02       		.uleb128 0x2
 1162 0062 08       		.byte	0x8
 1163 0063 07       		.byte	0x7
 1164 0064 8D020000 		.4byte	.LASF7
 1165 0068 04       		.uleb128 0x4
 1166 0069 04       		.byte	0x4
 1167 006a 05       		.byte	0x5
 1168 006b 696E7400 		.ascii	"int\000"
 1169 006f 02       		.uleb128 0x2
 1170 0070 04       		.byte	0x4
 1171 0071 07       		.byte	0x7
 1172 0072 C8020000 		.4byte	.LASF8
 1173 0076 03       		.uleb128 0x3
 1174 0077 AB030000 		.4byte	.LASF10
 1175 007b 03       		.byte	0x3
 1176 007c 2C       		.byte	0x2c
 1177 007d 41000000 		.4byte	0x41
 1178 0081 05       		.uleb128 0x5
 1179 0082 43010000 		.4byte	.LASF11
 1180 0086 04       		.byte	0x4
 1181 0087 9201     		.2byte	0x192
 1182 0089 2C000000 		.4byte	0x2c
 1183 008d 05       		.uleb128 0x5
 1184 008e 22010000 		.4byte	.LASF12
 1185 0092 04       		.byte	0x4
 1186 0093 9301     		.2byte	0x193
 1187 0095 3A000000 		.4byte	0x3a
 1188 0099 05       		.uleb128 0x5
 1189 009a 2A040000 		.4byte	.LASF13
 1190 009e 04       		.byte	0x4
 1191 009f 9701     		.2byte	0x197
 1192 00a1 4C000000 		.4byte	0x4c
 1193 00a5 02       		.uleb128 0x2
 1194 00a6 04       		.byte	0x4
 1195 00a7 04       		.byte	0x4
 1196 00a8 8A010000 		.4byte	.LASF14
 1197 00ac 02       		.uleb128 0x2
 1198 00ad 08       		.byte	0x8
 1199 00ae 04       		.byte	0x4
 1200 00af 30040000 		.4byte	.LASF15
 1201 00b3 02       		.uleb128 0x2
 1202 00b4 01       		.byte	0x1
 1203 00b5 08       		.byte	0x8
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 39


 1204 00b6 A8010000 		.4byte	.LASF16
 1205 00ba 06       		.uleb128 0x6
 1206 00bb 81000000 		.4byte	0x81
 1207 00bf 07       		.uleb128 0x7
 1208 00c0 0C       		.byte	0xc
 1209 00c1 05       		.byte	0x5
 1210 00c2 30       		.byte	0x30
 1211 00c3 28010000 		.4byte	0x128
 1212 00c7 08       		.uleb128 0x8
 1213 00c8 53656300 		.ascii	"Sec\000"
 1214 00cc 05       		.byte	0x5
 1215 00cd 32       		.byte	0x32
 1216 00ce 81000000 		.4byte	0x81
 1217 00d2 00       		.byte	0
 1218 00d3 08       		.uleb128 0x8
 1219 00d4 4D696E00 		.ascii	"Min\000"
 1220 00d8 05       		.byte	0x5
 1221 00d9 33       		.byte	0x33
 1222 00da 81000000 		.4byte	0x81
 1223 00de 01       		.byte	0x1
 1224 00df 09       		.uleb128 0x9
 1225 00e0 04010000 		.4byte	.LASF17
 1226 00e4 05       		.byte	0x5
 1227 00e5 34       		.byte	0x34
 1228 00e6 81000000 		.4byte	0x81
 1229 00ea 02       		.byte	0x2
 1230 00eb 09       		.uleb128 0x9
 1231 00ec 90010000 		.4byte	.LASF18
 1232 00f0 05       		.byte	0x5
 1233 00f1 35       		.byte	0x35
 1234 00f2 81000000 		.4byte	0x81
 1235 00f6 03       		.byte	0x3
 1236 00f7 09       		.uleb128 0x9
 1237 00f8 DE030000 		.4byte	.LASF19
 1238 00fc 05       		.byte	0x5
 1239 00fd 36       		.byte	0x36
 1240 00fe 81000000 		.4byte	0x81
 1241 0102 04       		.byte	0x4
 1242 0103 09       		.uleb128 0x9
 1243 0104 15050000 		.4byte	.LASF20
 1244 0108 05       		.byte	0x5
 1245 0109 37       		.byte	0x37
 1246 010a 8D000000 		.4byte	0x8d
 1247 010e 06       		.byte	0x6
 1248 010f 09       		.uleb128 0x9
 1249 0110 14020000 		.4byte	.LASF21
 1250 0114 05       		.byte	0x5
 1251 0115 38       		.byte	0x38
 1252 0116 81000000 		.4byte	0x81
 1253 011a 08       		.byte	0x8
 1254 011b 09       		.uleb128 0x9
 1255 011c E4010000 		.4byte	.LASF22
 1256 0120 05       		.byte	0x5
 1257 0121 39       		.byte	0x39
 1258 0122 8D000000 		.4byte	0x8d
 1259 0126 0A       		.byte	0xa
 1260 0127 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 40


 1261 0128 03       		.uleb128 0x3
 1262 0129 E1040000 		.4byte	.LASF23
 1263 012d 05       		.byte	0x5
 1264 012e 3A       		.byte	0x3a
 1265 012f 33010000 		.4byte	0x133
 1266 0133 06       		.uleb128 0x6
 1267 0134 BF000000 		.4byte	0xbf
 1268 0138 02       		.uleb128 0x2
 1269 0139 08       		.byte	0x8
 1270 013a 04       		.byte	0x4
 1271 013b 1A020000 		.4byte	.LASF24
 1272 013f 02       		.uleb128 0x2
 1273 0140 04       		.byte	0x4
 1274 0141 07       		.byte	0x7
 1275 0142 4B000000 		.4byte	.LASF25
 1276 0146 0A       		.uleb128 0xa
 1277 0147 B3000000 		.4byte	0xb3
 1278 014b 56010000 		.4byte	0x156
 1279 014f 0B       		.uleb128 0xb
 1280 0150 3F010000 		.4byte	0x13f
 1281 0154 17       		.byte	0x17
 1282 0155 00       		.byte	0
 1283 0156 07       		.uleb128 0x7
 1284 0157 3C       		.byte	0x3c
 1285 0158 06       		.byte	0x6
 1286 0159 2E       		.byte	0x2e
 1287 015a 83010000 		.4byte	0x183
 1288 015e 09       		.uleb128 0x9
 1289 015f 1A000000 		.4byte	.LASF26
 1290 0163 06       		.byte	0x6
 1291 0164 2F       		.byte	0x2f
 1292 0165 83010000 		.4byte	0x183
 1293 0169 00       		.byte	0
 1294 016a 09       		.uleb128 0x9
 1295 016b 00000000 		.4byte	.LASF27
 1296 016f 06       		.byte	0x6
 1297 0170 30       		.byte	0x30
 1298 0171 83010000 		.4byte	0x183
 1299 0175 14       		.byte	0x14
 1300 0176 09       		.uleb128 0x9
 1301 0177 A6030000 		.4byte	.LASF28
 1302 017b 06       		.byte	0x6
 1303 017c 31       		.byte	0x31
 1304 017d 83010000 		.4byte	0x183
 1305 0181 28       		.byte	0x28
 1306 0182 00       		.byte	0
 1307 0183 0A       		.uleb128 0xa
 1308 0184 B3000000 		.4byte	0xb3
 1309 0188 93010000 		.4byte	0x193
 1310 018c 0B       		.uleb128 0xb
 1311 018d 3F010000 		.4byte	0x13f
 1312 0191 13       		.byte	0x13
 1313 0192 00       		.byte	0
 1314 0193 03       		.uleb128 0x3
 1315 0194 AD010000 		.4byte	.LASF29
 1316 0198 06       		.byte	0x6
 1317 0199 32       		.byte	0x32
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 41


 1318 019a 56010000 		.4byte	0x156
 1319 019e 07       		.uleb128 0x7
 1320 019f 10       		.byte	0x10
 1321 01a0 06       		.byte	0x6
 1322 01a1 34       		.byte	0x34
 1323 01a2 07020000 		.4byte	0x207
 1324 01a6 09       		.uleb128 0x9
 1325 01a7 10050000 		.4byte	.LASF30
 1326 01ab 06       		.byte	0x6
 1327 01ac 35       		.byte	0x35
 1328 01ad 81000000 		.4byte	0x81
 1329 01b1 00       		.byte	0
 1330 01b2 08       		.uleb128 0x8
 1331 01b3 62657200 		.ascii	"ber\000"
 1332 01b7 06       		.byte	0x6
 1333 01b8 36       		.byte	0x36
 1334 01b9 81000000 		.4byte	0x81
 1335 01bd 01       		.byte	0x1
 1336 01be 09       		.uleb128 0x9
 1337 01bf 5D010000 		.4byte	.LASF31
 1338 01c3 06       		.byte	0x6
 1339 01c4 37       		.byte	0x37
 1340 01c5 81000000 		.4byte	0x81
 1341 01c9 02       		.byte	0x2
 1342 01ca 09       		.uleb128 0x9
 1343 01cb 17010000 		.4byte	.LASF32
 1344 01cf 06       		.byte	0x6
 1345 01d0 38       		.byte	0x38
 1346 01d1 81000000 		.4byte	0x81
 1347 01d5 03       		.byte	0x3
 1348 01d6 09       		.uleb128 0x9
 1349 01d7 E9030000 		.4byte	.LASF33
 1350 01db 06       		.byte	0x6
 1351 01dc 39       		.byte	0x39
 1352 01dd 81000000 		.4byte	0x81
 1353 01e1 04       		.byte	0x4
 1354 01e2 09       		.uleb128 0x9
 1355 01e3 62010000 		.4byte	.LASF34
 1356 01e7 06       		.byte	0x6
 1357 01e8 3A       		.byte	0x3a
 1358 01e9 81000000 		.4byte	0x81
 1359 01ed 05       		.byte	0x5
 1360 01ee 09       		.uleb128 0x9
 1361 01ef 6F030000 		.4byte	.LASF35
 1362 01f3 06       		.byte	0x6
 1363 01f4 3B       		.byte	0x3b
 1364 01f5 68000000 		.4byte	0x68
 1365 01f9 08       		.byte	0x8
 1366 01fa 09       		.uleb128 0x9
 1367 01fb 93030000 		.4byte	.LASF36
 1368 01ff 06       		.byte	0x6
 1369 0200 3C       		.byte	0x3c
 1370 0201 68000000 		.4byte	0x68
 1371 0205 0C       		.byte	0xc
 1372 0206 00       		.byte	0
 1373 0207 03       		.uleb128 0x3
 1374 0208 BB030000 		.4byte	.LASF37
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 42


 1375 020c 06       		.byte	0x6
 1376 020d 3D       		.byte	0x3d
 1377 020e 9E010000 		.4byte	0x19e
 1378 0212 07       		.uleb128 0x7
 1379 0213 03       		.byte	0x3
 1380 0214 06       		.byte	0x6
 1381 0215 49       		.byte	0x49
 1382 0216 3F020000 		.4byte	0x23f
 1383 021a 09       		.uleb128 0x9
 1384 021b 07020000 		.4byte	.LASF38
 1385 021f 06       		.byte	0x6
 1386 0220 4C       		.byte	0x4c
 1387 0221 81000000 		.4byte	0x81
 1388 0225 00       		.byte	0
 1389 0226 09       		.uleb128 0x9
 1390 0227 E1020000 		.4byte	.LASF39
 1391 022b 06       		.byte	0x6
 1392 022c 4E       		.byte	0x4e
 1393 022d 81000000 		.4byte	0x81
 1394 0231 01       		.byte	0x1
 1395 0232 09       		.uleb128 0x9
 1396 0233 5A040000 		.4byte	.LASF40
 1397 0237 06       		.byte	0x6
 1398 0238 51       		.byte	0x51
 1399 0239 81000000 		.4byte	0x81
 1400 023d 02       		.byte	0x2
 1401 023e 00       		.byte	0
 1402 023f 03       		.uleb128 0x3
 1403 0240 3A030000 		.4byte	.LASF41
 1404 0244 06       		.byte	0x6
 1405 0245 52       		.byte	0x52
 1406 0246 12020000 		.4byte	0x212
 1407 024a 07       		.uleb128 0x7
 1408 024b 2C       		.byte	0x2c
 1409 024c 07       		.byte	0x7
 1410 024d 10       		.byte	0x10
 1411 024e 77020000 		.4byte	0x277
 1412 0252 08       		.uleb128 0x8
 1413 0253 6B657900 		.ascii	"key\000"
 1414 0257 07       		.byte	0x7
 1415 0258 11       		.byte	0x11
 1416 0259 83010000 		.4byte	0x183
 1417 025d 00       		.byte	0
 1418 025e 09       		.uleb128 0x9
 1419 025f 1C010000 		.4byte	.LASF42
 1420 0263 07       		.byte	0x7
 1421 0264 12       		.byte	0x12
 1422 0265 83010000 		.4byte	0x183
 1423 0269 14       		.byte	0x14
 1424 026a 09       		.uleb128 0x9
 1425 026b 67010000 		.4byte	.LASF43
 1426 026f 07       		.byte	0x7
 1427 0270 13       		.byte	0x13
 1428 0271 99000000 		.4byte	0x99
 1429 0275 28       		.byte	0x28
 1430 0276 00       		.byte	0
 1431 0277 03       		.uleb128 0x3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 43


 1432 0278 D5020000 		.4byte	.LASF44
 1433 027c 07       		.byte	0x7
 1434 027d 14       		.byte	0x14
 1435 027e 4A020000 		.4byte	0x24a
 1436 0282 07       		.uleb128 0x7
 1437 0283 1C       		.byte	0x1c
 1438 0284 08       		.byte	0x8
 1439 0285 36       		.byte	0x36
 1440 0286 A3020000 		.4byte	0x2a3
 1441 028a 09       		.uleb128 0x9
 1442 028b C3010000 		.4byte	.LASF45
 1443 028f 08       		.byte	0x8
 1444 0290 38       		.byte	0x38
 1445 0291 A3020000 		.4byte	0x2a3
 1446 0295 00       		.byte	0
 1447 0296 09       		.uleb128 0x9
 1448 0297 09010000 		.4byte	.LASF46
 1449 029b 08       		.byte	0x8
 1450 029c 39       		.byte	0x39
 1451 029d 46010000 		.4byte	0x146
 1452 02a1 04       		.byte	0x4
 1453 02a2 00       		.byte	0
 1454 02a3 0C       		.uleb128 0xc
 1455 02a4 04       		.byte	0x4
 1456 02a5 93010000 		.4byte	0x193
 1457 02a9 03       		.uleb128 0x3
 1458 02aa 51030000 		.4byte	.LASF47
 1459 02ae 08       		.byte	0x8
 1460 02af 3B       		.byte	0x3b
 1461 02b0 82020000 		.4byte	0x282
 1462 02b4 0D       		.uleb128 0xd
 1463 02b5 4401     		.2byte	0x144
 1464 02b7 08       		.byte	0x8
 1465 02b8 41       		.byte	0x41
 1466 02b9 07030000 		.4byte	0x307
 1467 02bd 09       		.uleb128 0x9
 1468 02be A4040000 		.4byte	.LASF48
 1469 02c2 08       		.byte	0x8
 1470 02c3 44       		.byte	0x44
 1471 02c4 83010000 		.4byte	0x183
 1472 02c8 00       		.byte	0
 1473 02c9 09       		.uleb128 0x9
 1474 02ca 54000000 		.4byte	.LASF49
 1475 02ce 08       		.byte	0x8
 1476 02cf 46       		.byte	0x46
 1477 02d0 07030000 		.4byte	0x307
 1478 02d4 14       		.byte	0x14
 1479 02d5 09       		.uleb128 0x9
 1480 02d6 29010000 		.4byte	.LASF50
 1481 02da 08       		.byte	0x8
 1482 02db 47       		.byte	0x47
 1483 02dc 68000000 		.4byte	0x68
 1484 02e0 78       		.byte	0x78
 1485 02e1 09       		.uleb128 0x9
 1486 02e2 55010000 		.4byte	.LASF51
 1487 02e6 08       		.byte	0x8
 1488 02e7 48       		.byte	0x48
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 44


 1489 02e8 17030000 		.4byte	0x317
 1490 02ec 7C       		.byte	0x7c
 1491 02ed 09       		.uleb128 0x9
 1492 02ee 10040000 		.4byte	.LASF52
 1493 02f2 08       		.byte	0x8
 1494 02f3 49       		.byte	0x49
 1495 02f4 07030000 		.4byte	0x307
 1496 02f8 AE       		.byte	0xae
 1497 02f9 0E       		.uleb128 0xe
 1498 02fa 49010000 		.4byte	.LASF53
 1499 02fe 08       		.byte	0x8
 1500 02ff 4A       		.byte	0x4a
 1501 0300 17030000 		.4byte	0x317
 1502 0304 1201     		.2byte	0x112
 1503 0306 00       		.byte	0
 1504 0307 0A       		.uleb128 0xa
 1505 0308 B3000000 		.4byte	0xb3
 1506 030c 17030000 		.4byte	0x317
 1507 0310 0B       		.uleb128 0xb
 1508 0311 3F010000 		.4byte	0x13f
 1509 0315 63       		.byte	0x63
 1510 0316 00       		.byte	0
 1511 0317 0A       		.uleb128 0xa
 1512 0318 B3000000 		.4byte	0xb3
 1513 031c 27030000 		.4byte	0x327
 1514 0320 0B       		.uleb128 0xb
 1515 0321 3F010000 		.4byte	0x13f
 1516 0325 31       		.byte	0x31
 1517 0326 00       		.byte	0
 1518 0327 03       		.uleb128 0x3
 1519 0328 32000000 		.4byte	.LASF54
 1520 032c 08       		.byte	0x8
 1521 032d 4D       		.byte	0x4d
 1522 032e B4020000 		.4byte	0x2b4
 1523 0332 0F       		.uleb128 0xf
 1524 0333 37040000 		.4byte	.LASF55
 1525 0337 01       		.byte	0x1
 1526 0338 36       		.byte	0x36
 1527 0339 00000000 		.4byte	.LFB64
 1528 033d 0E000000 		.4byte	.LFE64-.LFB64
 1529 0341 01       		.uleb128 0x1
 1530 0342 9C       		.byte	0x9c
 1531 0343 0F       		.uleb128 0xf
 1532 0344 F9030000 		.4byte	.LASF56
 1533 0348 01       		.byte	0x1
 1534 0349 51       		.byte	0x51
 1535 034a 00000000 		.4byte	.LFB65
 1536 034e 0E000000 		.4byte	.LFE65-.LFB65
 1537 0352 01       		.uleb128 0x1
 1538 0353 9C       		.byte	0x9c
 1539 0354 0F       		.uleb128 0xf
 1540 0355 C9030000 		.4byte	.LASF57
 1541 0359 01       		.byte	0x1
 1542 035a 6C       		.byte	0x6c
 1543 035b 00000000 		.4byte	.LFB66
 1544 035f 0E000000 		.4byte	.LFE66-.LFB66
 1545 0363 01       		.uleb128 0x1
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 45


 1546 0364 9C       		.byte	0x9c
 1547 0365 0F       		.uleb128 0xf
 1548 0366 E9010000 		.4byte	.LASF58
 1549 036a 01       		.byte	0x1
 1550 036b 87       		.byte	0x87
 1551 036c 00000000 		.4byte	.LFB67
 1552 0370 0E000000 		.4byte	.LFE67-.LFB67
 1553 0374 01       		.uleb128 0x1
 1554 0375 9C       		.byte	0x9c
 1555 0376 0F       		.uleb128 0xf
 1556 0377 EA000000 		.4byte	.LASF59
 1557 037b 01       		.byte	0x1
 1558 037c A2       		.byte	0xa2
 1559 037d 00000000 		.4byte	.LFB68
 1560 0381 0E000000 		.4byte	.LFE68-.LFB68
 1561 0385 01       		.uleb128 0x1
 1562 0386 9C       		.byte	0x9c
 1563 0387 0F       		.uleb128 0xf
 1564 0388 CE010000 		.4byte	.LASF60
 1565 038c 01       		.byte	0x1
 1566 038d BD       		.byte	0xbd
 1567 038e 00000000 		.4byte	.LFB69
 1568 0392 0E000000 		.4byte	.LFE69-.LFB69
 1569 0396 01       		.uleb128 0x1
 1570 0397 9C       		.byte	0x9c
 1571 0398 0F       		.uleb128 0xf
 1572 0399 78020000 		.4byte	.LASF61
 1573 039d 01       		.byte	0x1
 1574 039e D8       		.byte	0xd8
 1575 039f 00000000 		.4byte	.LFB70
 1576 03a3 0E000000 		.4byte	.LFE70-.LFB70
 1577 03a7 01       		.uleb128 0x1
 1578 03a8 9C       		.byte	0x9c
 1579 03a9 10       		.uleb128 0x10
 1580 03aa 32030000 		.4byte	.LASF85
 1581 03ae 01       		.byte	0x1
 1582 03af 0B01     		.2byte	0x10b
 1583 03b1 00000000 		.4byte	.LFB71
 1584 03b5 18060000 		.4byte	.LFE71-.LFB71
 1585 03b9 01       		.uleb128 0x1
 1586 03ba 9C       		.byte	0x9c
 1587 03bb CF030000 		.4byte	0x3cf
 1588 03bf 11       		.uleb128 0x11
 1589 03c0 B3030000 		.4byte	.LASF86
 1590 03c4 01       		.byte	0x1
 1591 03c5 0D01     		.2byte	0x10d
 1592 03c7 81000000 		.4byte	0x81
 1593 03cb 02       		.uleb128 0x2
 1594 03cc 91       		.byte	0x91
 1595 03cd 77       		.sleb128 -9
 1596 03ce 00       		.byte	0
 1597 03cf 12       		.uleb128 0x12
 1598 03d0 4B020000 		.4byte	.LASF62
 1599 03d4 05       		.byte	0x5
 1600 03d5 2D01     		.2byte	0x12d
 1601 03d7 28010000 		.4byte	0x128
 1602 03db 12       		.uleb128 0x12
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 46


 1603 03dc B4020000 		.4byte	.LASF63
 1604 03e0 05       		.byte	0x5
 1605 03e1 2E01     		.2byte	0x12e
 1606 03e3 28010000 		.4byte	0x128
 1607 03e7 12       		.uleb128 0x12
 1608 03e8 09000000 		.4byte	.LASF64
 1609 03ec 05       		.byte	0x5
 1610 03ed 3901     		.2byte	0x139
 1611 03ef BA000000 		.4byte	0xba
 1612 03f3 12       		.uleb128 0x12
 1613 03f4 AC040000 		.4byte	.LASF65
 1614 03f8 05       		.byte	0x5
 1615 03f9 3A01     		.2byte	0x13a
 1616 03fb BA000000 		.4byte	0xba
 1617 03ff 12       		.uleb128 0x12
 1618 0400 EF040000 		.4byte	.LASF66
 1619 0404 05       		.byte	0x5
 1620 0405 3B01     		.2byte	0x13b
 1621 0407 BA000000 		.4byte	0xba
 1622 040b 12       		.uleb128 0x12
 1623 040c 66040000 		.4byte	.LASF67
 1624 0410 05       		.byte	0x5
 1625 0411 3C01     		.2byte	0x13c
 1626 0413 BA000000 		.4byte	0xba
 1627 0417 0A       		.uleb128 0xa
 1628 0418 27040000 		.4byte	0x427
 1629 041c 27040000 		.4byte	0x427
 1630 0420 0B       		.uleb128 0xb
 1631 0421 3F010000 		.4byte	0x13f
 1632 0425 0B       		.byte	0xb
 1633 0426 00       		.byte	0
 1634 0427 13       		.uleb128 0x13
 1635 0428 81000000 		.4byte	0x81
 1636 042c 12       		.uleb128 0x12
 1637 042d 21000000 		.4byte	.LASF68
 1638 0431 05       		.byte	0x5
 1639 0432 3E01     		.2byte	0x13e
 1640 0434 38040000 		.4byte	0x438
 1641 0438 13       		.uleb128 0x13
 1642 0439 17040000 		.4byte	0x417
 1643 043d 12       		.uleb128 0x12
 1644 043e D4040000 		.4byte	.LASF69
 1645 0442 09       		.byte	0x9
 1646 0443 1207     		.2byte	0x712
 1647 0445 49040000 		.4byte	0x449
 1648 0449 06       		.uleb128 0x6
 1649 044a 76000000 		.4byte	0x76
 1650 044e 14       		.uleb128 0x14
 1651 044f 60020000 		.4byte	.LASF70
 1652 0453 06       		.byte	0x6
 1653 0454 16       		.byte	0x16
 1654 0455 81000000 		.4byte	0x81
 1655 0459 05       		.uleb128 0x5
 1656 045a 03       		.byte	0x3
 1657 045b 00000000 		.4byte	modem_state
 1658 045f 14       		.uleb128 0x14
 1659 0460 34020000 		.4byte	.LASF71
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 47


 1660 0464 06       		.byte	0x6
 1661 0465 55       		.byte	0x55
 1662 0466 99000000 		.4byte	0x99
 1663 046a 05       		.uleb128 0x5
 1664 046b 03       		.byte	0x3
 1665 046c 00000000 		.4byte	modem_start_time_stamp
 1666 0470 14       		.uleb128 0x14
 1667 0471 C3010000 		.4byte	.LASF45
 1668 0475 06       		.byte	0x6
 1669 0476 56       		.byte	0x56
 1670 0477 93010000 		.4byte	0x193
 1671 047b 05       		.uleb128 0x5
 1672 047c 03       		.byte	0x3
 1673 047d 00000000 		.4byte	modem_info
 1674 0481 14       		.uleb128 0x14
 1675 0482 4E040000 		.4byte	.LASF72
 1676 0486 06       		.byte	0x6
 1677 0487 57       		.byte	0x57
 1678 0488 07020000 		.4byte	0x207
 1679 048c 05       		.uleb128 0x5
 1680 048d 03       		.byte	0x3
 1681 048e 00000000 		.4byte	modem_stats
 1682 0492 14       		.uleb128 0x14
 1683 0493 BF040000 		.4byte	.LASF73
 1684 0497 06       		.byte	0x6
 1685 0498 58       		.byte	0x58
 1686 0499 3F020000 		.4byte	0x23f
 1687 049d 05       		.uleb128 0x5
 1688 049e 03       		.byte	0x3
 1689 049f 00000000 		.4byte	updatable_parameters
 1690 04a3 14       		.uleb128 0x14
 1691 04a4 31010000 		.4byte	.LASF74
 1692 04a8 07       		.byte	0x7
 1693 04a9 1D       		.byte	0x1d
 1694 04aa 8D000000 		.4byte	0x8d
 1695 04ae 05       		.uleb128 0x5
 1696 04af 03       		.byte	0x3
 1697 04b0 00000000 		.4byte	dataPointsInStack
 1698 04b4 14       		.uleb128 0x14
 1699 04b5 71010000 		.4byte	.LASF75
 1700 04b9 07       		.byte	0x7
 1701 04ba 1E       		.byte	0x1e
 1702 04bb 8D000000 		.4byte	0x8d
 1703 04bf 05       		.uleb128 0x5
 1704 04c0 03       		.byte	0x3
 1705 04c1 00000000 		.4byte	dataPointsInStackDesired
 1706 04c5 0A       		.uleb128 0xa
 1707 04c6 77020000 		.4byte	0x277
 1708 04ca D5040000 		.4byte	0x4d5
 1709 04ce 0B       		.uleb128 0xb
 1710 04cf 3F010000 		.4byte	0x13f
 1711 04d3 95       		.byte	0x95
 1712 04d4 00       		.byte	0
 1713 04d5 14       		.uleb128 0x14
 1714 04d6 FF000000 		.4byte	.LASF76
 1715 04da 07       		.byte	0x7
 1716 04db 1F       		.byte	0x1f
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 48


 1717 04dc C5040000 		.4byte	0x4c5
 1718 04e0 05       		.uleb128 0x5
 1719 04e1 03       		.byte	0x3
 1720 04e2 00000000 		.4byte	data
 1721 04e6 0A       		.uleb128 0xa
 1722 04e7 B3000000 		.4byte	0xb3
 1723 04eb F7040000 		.4byte	0x4f7
 1724 04ef 15       		.uleb128 0x15
 1725 04f0 3F010000 		.4byte	0x13f
 1726 04f4 0F27     		.2byte	0x270f
 1727 04f6 00       		.byte	0
 1728 04f7 14       		.uleb128 0x14
 1729 04f8 03050000 		.4byte	.LASF77
 1730 04fc 08       		.byte	0x8
 1731 04fd 15       		.byte	0x15
 1732 04fe E6040000 		.4byte	0x4e6
 1733 0502 05       		.uleb128 0x5
 1734 0503 03       		.byte	0x3
 1735 0504 00000000 		.4byte	http_request
 1736 0508 14       		.uleb128 0x14
 1737 0509 FD010000 		.4byte	.LASF78
 1738 050d 08       		.byte	0x8
 1739 050e 16       		.byte	0x16
 1740 050f E6040000 		.4byte	0x4e6
 1741 0513 05       		.uleb128 0x5
 1742 0514 03       		.byte	0x3
 1743 0515 00000000 		.4byte	http_body
 1744 0519 0A       		.uleb128 0xa
 1745 051a B3000000 		.4byte	0xb3
 1746 051e 29050000 		.4byte	0x529
 1747 0522 0B       		.uleb128 0xb
 1748 0523 3F010000 		.4byte	0x13f
 1749 0527 C7       		.byte	0xc7
 1750 0528 00       		.byte	0
 1751 0529 14       		.uleb128 0x14
 1752 052a EE030000 		.4byte	.LASF79
 1753 052e 08       		.byte	0x8
 1754 052f 17       		.byte	0x17
 1755 0530 19050000 		.4byte	0x519
 1756 0534 05       		.uleb128 0x5
 1757 0535 03       		.byte	0x3
 1758 0536 00000000 		.4byte	http_route
 1759 053a 14       		.uleb128 0x14
 1760 053b 87030000 		.4byte	.LASF80
 1761 053f 08       		.byte	0x8
 1762 0540 3E       		.byte	0x3e
 1763 0541 A9020000 		.4byte	0x2a9
 1764 0545 05       		.uleb128 0x5
 1765 0546 03       		.byte	0x3
 1766 0547 00000000 		.4byte	system_info
 1767 054b 14       		.uleb128 0x14
 1768 054c A4020000 		.4byte	.LASF81
 1769 0550 08       		.byte	0x8
 1770 0551 50       		.byte	0x50
 1771 0552 27030000 		.4byte	0x327
 1772 0556 05       		.uleb128 0x5
 1773 0557 03       		.byte	0x3
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 49


 1774 0558 00000000 		.4byte	system_settings
 1775 055c 00       		.byte	0
 1776              		.section	.debug_abbrev,"",%progbits
 1777              	.Ldebug_abbrev0:
 1778 0000 01       		.uleb128 0x1
 1779 0001 11       		.uleb128 0x11
 1780 0002 01       		.byte	0x1
 1781 0003 25       		.uleb128 0x25
 1782 0004 0E       		.uleb128 0xe
 1783 0005 13       		.uleb128 0x13
 1784 0006 0B       		.uleb128 0xb
 1785 0007 03       		.uleb128 0x3
 1786 0008 0E       		.uleb128 0xe
 1787 0009 1B       		.uleb128 0x1b
 1788 000a 0E       		.uleb128 0xe
 1789 000b 55       		.uleb128 0x55
 1790 000c 17       		.uleb128 0x17
 1791 000d 11       		.uleb128 0x11
 1792 000e 01       		.uleb128 0x1
 1793 000f 10       		.uleb128 0x10
 1794 0010 17       		.uleb128 0x17
 1795 0011 00       		.byte	0
 1796 0012 00       		.byte	0
 1797 0013 02       		.uleb128 0x2
 1798 0014 24       		.uleb128 0x24
 1799 0015 00       		.byte	0
 1800 0016 0B       		.uleb128 0xb
 1801 0017 0B       		.uleb128 0xb
 1802 0018 3E       		.uleb128 0x3e
 1803 0019 0B       		.uleb128 0xb
 1804 001a 03       		.uleb128 0x3
 1805 001b 0E       		.uleb128 0xe
 1806 001c 00       		.byte	0
 1807 001d 00       		.byte	0
 1808 001e 03       		.uleb128 0x3
 1809 001f 16       		.uleb128 0x16
 1810 0020 00       		.byte	0
 1811 0021 03       		.uleb128 0x3
 1812 0022 0E       		.uleb128 0xe
 1813 0023 3A       		.uleb128 0x3a
 1814 0024 0B       		.uleb128 0xb
 1815 0025 3B       		.uleb128 0x3b
 1816 0026 0B       		.uleb128 0xb
 1817 0027 49       		.uleb128 0x49
 1818 0028 13       		.uleb128 0x13
 1819 0029 00       		.byte	0
 1820 002a 00       		.byte	0
 1821 002b 04       		.uleb128 0x4
 1822 002c 24       		.uleb128 0x24
 1823 002d 00       		.byte	0
 1824 002e 0B       		.uleb128 0xb
 1825 002f 0B       		.uleb128 0xb
 1826 0030 3E       		.uleb128 0x3e
 1827 0031 0B       		.uleb128 0xb
 1828 0032 03       		.uleb128 0x3
 1829 0033 08       		.uleb128 0x8
 1830 0034 00       		.byte	0
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 50


 1831 0035 00       		.byte	0
 1832 0036 05       		.uleb128 0x5
 1833 0037 16       		.uleb128 0x16
 1834 0038 00       		.byte	0
 1835 0039 03       		.uleb128 0x3
 1836 003a 0E       		.uleb128 0xe
 1837 003b 3A       		.uleb128 0x3a
 1838 003c 0B       		.uleb128 0xb
 1839 003d 3B       		.uleb128 0x3b
 1840 003e 05       		.uleb128 0x5
 1841 003f 49       		.uleb128 0x49
 1842 0040 13       		.uleb128 0x13
 1843 0041 00       		.byte	0
 1844 0042 00       		.byte	0
 1845 0043 06       		.uleb128 0x6
 1846 0044 35       		.uleb128 0x35
 1847 0045 00       		.byte	0
 1848 0046 49       		.uleb128 0x49
 1849 0047 13       		.uleb128 0x13
 1850 0048 00       		.byte	0
 1851 0049 00       		.byte	0
 1852 004a 07       		.uleb128 0x7
 1853 004b 13       		.uleb128 0x13
 1854 004c 01       		.byte	0x1
 1855 004d 0B       		.uleb128 0xb
 1856 004e 0B       		.uleb128 0xb
 1857 004f 3A       		.uleb128 0x3a
 1858 0050 0B       		.uleb128 0xb
 1859 0051 3B       		.uleb128 0x3b
 1860 0052 0B       		.uleb128 0xb
 1861 0053 01       		.uleb128 0x1
 1862 0054 13       		.uleb128 0x13
 1863 0055 00       		.byte	0
 1864 0056 00       		.byte	0
 1865 0057 08       		.uleb128 0x8
 1866 0058 0D       		.uleb128 0xd
 1867 0059 00       		.byte	0
 1868 005a 03       		.uleb128 0x3
 1869 005b 08       		.uleb128 0x8
 1870 005c 3A       		.uleb128 0x3a
 1871 005d 0B       		.uleb128 0xb
 1872 005e 3B       		.uleb128 0x3b
 1873 005f 0B       		.uleb128 0xb
 1874 0060 49       		.uleb128 0x49
 1875 0061 13       		.uleb128 0x13
 1876 0062 38       		.uleb128 0x38
 1877 0063 0B       		.uleb128 0xb
 1878 0064 00       		.byte	0
 1879 0065 00       		.byte	0
 1880 0066 09       		.uleb128 0x9
 1881 0067 0D       		.uleb128 0xd
 1882 0068 00       		.byte	0
 1883 0069 03       		.uleb128 0x3
 1884 006a 0E       		.uleb128 0xe
 1885 006b 3A       		.uleb128 0x3a
 1886 006c 0B       		.uleb128 0xb
 1887 006d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 51


 1888 006e 0B       		.uleb128 0xb
 1889 006f 49       		.uleb128 0x49
 1890 0070 13       		.uleb128 0x13
 1891 0071 38       		.uleb128 0x38
 1892 0072 0B       		.uleb128 0xb
 1893 0073 00       		.byte	0
 1894 0074 00       		.byte	0
 1895 0075 0A       		.uleb128 0xa
 1896 0076 01       		.uleb128 0x1
 1897 0077 01       		.byte	0x1
 1898 0078 49       		.uleb128 0x49
 1899 0079 13       		.uleb128 0x13
 1900 007a 01       		.uleb128 0x1
 1901 007b 13       		.uleb128 0x13
 1902 007c 00       		.byte	0
 1903 007d 00       		.byte	0
 1904 007e 0B       		.uleb128 0xb
 1905 007f 21       		.uleb128 0x21
 1906 0080 00       		.byte	0
 1907 0081 49       		.uleb128 0x49
 1908 0082 13       		.uleb128 0x13
 1909 0083 2F       		.uleb128 0x2f
 1910 0084 0B       		.uleb128 0xb
 1911 0085 00       		.byte	0
 1912 0086 00       		.byte	0
 1913 0087 0C       		.uleb128 0xc
 1914 0088 0F       		.uleb128 0xf
 1915 0089 00       		.byte	0
 1916 008a 0B       		.uleb128 0xb
 1917 008b 0B       		.uleb128 0xb
 1918 008c 49       		.uleb128 0x49
 1919 008d 13       		.uleb128 0x13
 1920 008e 00       		.byte	0
 1921 008f 00       		.byte	0
 1922 0090 0D       		.uleb128 0xd
 1923 0091 13       		.uleb128 0x13
 1924 0092 01       		.byte	0x1
 1925 0093 0B       		.uleb128 0xb
 1926 0094 05       		.uleb128 0x5
 1927 0095 3A       		.uleb128 0x3a
 1928 0096 0B       		.uleb128 0xb
 1929 0097 3B       		.uleb128 0x3b
 1930 0098 0B       		.uleb128 0xb
 1931 0099 01       		.uleb128 0x1
 1932 009a 13       		.uleb128 0x13
 1933 009b 00       		.byte	0
 1934 009c 00       		.byte	0
 1935 009d 0E       		.uleb128 0xe
 1936 009e 0D       		.uleb128 0xd
 1937 009f 00       		.byte	0
 1938 00a0 03       		.uleb128 0x3
 1939 00a1 0E       		.uleb128 0xe
 1940 00a2 3A       		.uleb128 0x3a
 1941 00a3 0B       		.uleb128 0xb
 1942 00a4 3B       		.uleb128 0x3b
 1943 00a5 0B       		.uleb128 0xb
 1944 00a6 49       		.uleb128 0x49
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 52


 1945 00a7 13       		.uleb128 0x13
 1946 00a8 38       		.uleb128 0x38
 1947 00a9 05       		.uleb128 0x5
 1948 00aa 00       		.byte	0
 1949 00ab 00       		.byte	0
 1950 00ac 0F       		.uleb128 0xf
 1951 00ad 2E       		.uleb128 0x2e
 1952 00ae 00       		.byte	0
 1953 00af 03       		.uleb128 0x3
 1954 00b0 0E       		.uleb128 0xe
 1955 00b1 3A       		.uleb128 0x3a
 1956 00b2 0B       		.uleb128 0xb
 1957 00b3 3B       		.uleb128 0x3b
 1958 00b4 0B       		.uleb128 0xb
 1959 00b5 27       		.uleb128 0x27
 1960 00b6 19       		.uleb128 0x19
 1961 00b7 11       		.uleb128 0x11
 1962 00b8 01       		.uleb128 0x1
 1963 00b9 12       		.uleb128 0x12
 1964 00ba 06       		.uleb128 0x6
 1965 00bb 40       		.uleb128 0x40
 1966 00bc 18       		.uleb128 0x18
 1967 00bd 9642     		.uleb128 0x2116
 1968 00bf 19       		.uleb128 0x19
 1969 00c0 00       		.byte	0
 1970 00c1 00       		.byte	0
 1971 00c2 10       		.uleb128 0x10
 1972 00c3 2E       		.uleb128 0x2e
 1973 00c4 01       		.byte	0x1
 1974 00c5 3F       		.uleb128 0x3f
 1975 00c6 19       		.uleb128 0x19
 1976 00c7 03       		.uleb128 0x3
 1977 00c8 0E       		.uleb128 0xe
 1978 00c9 3A       		.uleb128 0x3a
 1979 00ca 0B       		.uleb128 0xb
 1980 00cb 3B       		.uleb128 0x3b
 1981 00cc 05       		.uleb128 0x5
 1982 00cd 27       		.uleb128 0x27
 1983 00ce 19       		.uleb128 0x19
 1984 00cf 11       		.uleb128 0x11
 1985 00d0 01       		.uleb128 0x1
 1986 00d1 12       		.uleb128 0x12
 1987 00d2 06       		.uleb128 0x6
 1988 00d3 40       		.uleb128 0x40
 1989 00d4 18       		.uleb128 0x18
 1990 00d5 9642     		.uleb128 0x2116
 1991 00d7 19       		.uleb128 0x19
 1992 00d8 01       		.uleb128 0x1
 1993 00d9 13       		.uleb128 0x13
 1994 00da 00       		.byte	0
 1995 00db 00       		.byte	0
 1996 00dc 11       		.uleb128 0x11
 1997 00dd 34       		.uleb128 0x34
 1998 00de 00       		.byte	0
 1999 00df 03       		.uleb128 0x3
 2000 00e0 0E       		.uleb128 0xe
 2001 00e1 3A       		.uleb128 0x3a
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 53


 2002 00e2 0B       		.uleb128 0xb
 2003 00e3 3B       		.uleb128 0x3b
 2004 00e4 05       		.uleb128 0x5
 2005 00e5 49       		.uleb128 0x49
 2006 00e6 13       		.uleb128 0x13
 2007 00e7 02       		.uleb128 0x2
 2008 00e8 18       		.uleb128 0x18
 2009 00e9 00       		.byte	0
 2010 00ea 00       		.byte	0
 2011 00eb 12       		.uleb128 0x12
 2012 00ec 34       		.uleb128 0x34
 2013 00ed 00       		.byte	0
 2014 00ee 03       		.uleb128 0x3
 2015 00ef 0E       		.uleb128 0xe
 2016 00f0 3A       		.uleb128 0x3a
 2017 00f1 0B       		.uleb128 0xb
 2018 00f2 3B       		.uleb128 0x3b
 2019 00f3 05       		.uleb128 0x5
 2020 00f4 49       		.uleb128 0x49
 2021 00f5 13       		.uleb128 0x13
 2022 00f6 3F       		.uleb128 0x3f
 2023 00f7 19       		.uleb128 0x19
 2024 00f8 3C       		.uleb128 0x3c
 2025 00f9 19       		.uleb128 0x19
 2026 00fa 00       		.byte	0
 2027 00fb 00       		.byte	0
 2028 00fc 13       		.uleb128 0x13
 2029 00fd 26       		.uleb128 0x26
 2030 00fe 00       		.byte	0
 2031 00ff 49       		.uleb128 0x49
 2032 0100 13       		.uleb128 0x13
 2033 0101 00       		.byte	0
 2034 0102 00       		.byte	0
 2035 0103 14       		.uleb128 0x14
 2036 0104 34       		.uleb128 0x34
 2037 0105 00       		.byte	0
 2038 0106 03       		.uleb128 0x3
 2039 0107 0E       		.uleb128 0xe
 2040 0108 3A       		.uleb128 0x3a
 2041 0109 0B       		.uleb128 0xb
 2042 010a 3B       		.uleb128 0x3b
 2043 010b 0B       		.uleb128 0xb
 2044 010c 49       		.uleb128 0x49
 2045 010d 13       		.uleb128 0x13
 2046 010e 3F       		.uleb128 0x3f
 2047 010f 19       		.uleb128 0x19
 2048 0110 02       		.uleb128 0x2
 2049 0111 18       		.uleb128 0x18
 2050 0112 00       		.byte	0
 2051 0113 00       		.byte	0
 2052 0114 15       		.uleb128 0x15
 2053 0115 21       		.uleb128 0x21
 2054 0116 00       		.byte	0
 2055 0117 49       		.uleb128 0x49
 2056 0118 13       		.uleb128 0x13
 2057 0119 2F       		.uleb128 0x2f
 2058 011a 05       		.uleb128 0x5
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 54


 2059 011b 00       		.byte	0
 2060 011c 00       		.byte	0
 2061 011d 00       		.byte	0
 2062              		.section	.debug_aranges,"",%progbits
 2063 0000 54000000 		.4byte	0x54
 2064 0004 0200     		.2byte	0x2
 2065 0006 00000000 		.4byte	.Ldebug_info0
 2066 000a 04       		.byte	0x4
 2067 000b 00       		.byte	0
 2068 000c 0000     		.2byte	0
 2069 000e 0000     		.2byte	0
 2070 0010 00000000 		.4byte	.LFB64
 2071 0014 0E000000 		.4byte	.LFE64-.LFB64
 2072 0018 00000000 		.4byte	.LFB65
 2073 001c 0E000000 		.4byte	.LFE65-.LFB65
 2074 0020 00000000 		.4byte	.LFB66
 2075 0024 0E000000 		.4byte	.LFE66-.LFB66
 2076 0028 00000000 		.4byte	.LFB67
 2077 002c 0E000000 		.4byte	.LFE67-.LFB67
 2078 0030 00000000 		.4byte	.LFB68
 2079 0034 0E000000 		.4byte	.LFE68-.LFB68
 2080 0038 00000000 		.4byte	.LFB69
 2081 003c 0E000000 		.4byte	.LFE69-.LFB69
 2082 0040 00000000 		.4byte	.LFB70
 2083 0044 0E000000 		.4byte	.LFE70-.LFB70
 2084 0048 00000000 		.4byte	.LFB71
 2085 004c 18060000 		.4byte	.LFE71-.LFB71
 2086 0050 00000000 		.4byte	0
 2087 0054 00000000 		.4byte	0
 2088              		.section	.debug_ranges,"",%progbits
 2089              	.Ldebug_ranges0:
 2090 0000 00000000 		.4byte	.LFB64
 2091 0004 0E000000 		.4byte	.LFE64
 2092 0008 00000000 		.4byte	.LFB65
 2093 000c 0E000000 		.4byte	.LFE65
 2094 0010 00000000 		.4byte	.LFB66
 2095 0014 0E000000 		.4byte	.LFE66
 2096 0018 00000000 		.4byte	.LFB67
 2097 001c 0E000000 		.4byte	.LFE67
 2098 0020 00000000 		.4byte	.LFB68
 2099 0024 0E000000 		.4byte	.LFE68
 2100 0028 00000000 		.4byte	.LFB69
 2101 002c 0E000000 		.4byte	.LFE69
 2102 0030 00000000 		.4byte	.LFB70
 2103 0034 0E000000 		.4byte	.LFE70
 2104 0038 00000000 		.4byte	.LFB71
 2105 003c 18060000 		.4byte	.LFE71
 2106 0040 00000000 		.4byte	0
 2107 0044 00000000 		.4byte	0
 2108              		.section	.debug_line,"",%progbits
 2109              	.Ldebug_line0:
 2110 0000 E2020000 		.section	.debug_str,"MS",%progbits,1
 2110      02008101 
 2110      00000201 
 2110      FB0E0D00 
 2110      01010101 
 2111              	.LASF27:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 55


 2112 0000 6D6F6465 		.ascii	"model_id\000"
 2112      6C5F6964 
 2112      00
 2113              	.LASF64:
 2114 0009 5254435F 		.ascii	"RTC_alarmCfgMask\000"
 2114      616C6172 
 2114      6D436667 
 2114      4D61736B 
 2114      00
 2115              	.LASF26:
 2116 001a 73696D5F 		.ascii	"sim_id\000"
 2116      696400
 2117              	.LASF68:
 2118 0021 5254435F 		.ascii	"RTC_daysInMonths\000"
 2118      64617973 
 2118      496E4D6F 
 2118      6E746873 
 2118      00
 2119              	.LASF54:
 2120 0032 7379735F 		.ascii	"sys_settings_t\000"
 2120      73657474 
 2120      696E6773 
 2120      5F7400
 2121              	.LASF2:
 2122 0041 73686F72 		.ascii	"short int\000"
 2122      7420696E 
 2122      7400
 2123              	.LASF25:
 2124 004b 73697A65 		.ascii	"sizetype\000"
 2124      74797065 
 2124      00
 2125              	.LASF49:
 2126 0054 65705F68 		.ascii	"ep_host\000"
 2126      6F737400 
 2127              	.LASF82:
 2128 005c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2128      43313120 
 2128      352E342E 
 2128      31203230 
 2128      31363036 
 2129 008f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2129      20726576 
 2129      6973696F 
 2129      6E203233 
 2129      37373135 
 2130 00c2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2130      66756E63 
 2130      74696F6E 
 2130      2D736563 
 2130      74696F6E 
 2131              	.LASF59:
 2132 00ea 5254435F 		.ascii	"RTC_EveryWeekHandler\000"
 2132      45766572 
 2132      79576565 
 2132      6B48616E 
 2132      646C6572 
 2133              	.LASF76:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 56


 2134 00ff 64617461 		.ascii	"data\000"
 2134      00
 2135              	.LASF17:
 2136 0104 486F7572 		.ascii	"Hour\000"
 2136      00
 2137              	.LASF46:
 2138 0109 63686970 		.ascii	"chip_uniqueId\000"
 2138      5F756E69 
 2138      71756549 
 2138      6400
 2139              	.LASF32:
 2140 0117 65636E6F 		.ascii	"ecno\000"
 2140      00
 2141              	.LASF42:
 2142 011c 76616C75 		.ascii	"value\000"
 2142      6500
 2143              	.LASF12:
 2144 0122 75696E74 		.ascii	"uint16\000"
 2144      313600
 2145              	.LASF50:
 2146 0129 65705F70 		.ascii	"ep_port\000"
 2146      6F727400 
 2147              	.LASF74:
 2148 0131 64617461 		.ascii	"dataPointsInStack\000"
 2148      506F696E 
 2148      7473496E 
 2148      53746163 
 2148      6B00
 2149              	.LASF11:
 2150 0143 75696E74 		.ascii	"uint8\000"
 2150      3800
 2151              	.LASF53:
 2152 0149 65705F64 		.ascii	"ep_database\000"
 2152      61746162 
 2152      61736500 
 2153              	.LASF51:
 2154 0155 65705F75 		.ascii	"ep_user\000"
 2154      73657200 
 2155              	.LASF31:
 2156 015d 72736370 		.ascii	"rscp\000"
 2156      00
 2157              	.LASF34:
 2158 0162 72737270 		.ascii	"rsrp\000"
 2158      00
 2159              	.LASF43:
 2160 0167 74696D65 		.ascii	"timeStamp\000"
 2160      5374616D 
 2160      7000
 2161              	.LASF75:
 2162 0171 64617461 		.ascii	"dataPointsInStackDesired\000"
 2162      506F696E 
 2162      7473496E 
 2162      53746163 
 2162      6B446573 
 2163              	.LASF14:
 2164 018a 666C6F61 		.ascii	"float\000"
 2164      7400
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 57


 2165              	.LASF18:
 2166 0190 4461794F 		.ascii	"DayOfWeek\000"
 2166      66576565 
 2166      6B00
 2167              	.LASF6:
 2168 019a 6C6F6E67 		.ascii	"long long int\000"
 2168      206C6F6E 
 2168      6720696E 
 2168      7400
 2169              	.LASF16:
 2170 01a8 63686172 		.ascii	"char\000"
 2170      00
 2171              	.LASF29:
 2172 01ad 6D6F6465 		.ascii	"modem_info_t\000"
 2172      6D5F696E 
 2172      666F5F74 
 2172      00
 2173              	.LASF4:
 2174 01ba 6C6F6E67 		.ascii	"long int\000"
 2174      20696E74 
 2174      00
 2175              	.LASF45:
 2176 01c3 6D6F6465 		.ascii	"modem_info\000"
 2176      6D5F696E 
 2176      666F00
 2177              	.LASF60:
 2178 01ce 5254435F 		.ascii	"RTC_EveryMonthHandler\000"
 2178      45766572 
 2178      794D6F6E 
 2178      74684861 
 2178      6E646C65 
 2179              	.LASF22:
 2180 01e4 59656172 		.ascii	"Year\000"
 2180      00
 2181              	.LASF58:
 2182 01e9 5254435F 		.ascii	"RTC_EveryDayHandler\000"
 2182      45766572 
 2182      79446179 
 2182      48616E64 
 2182      6C657200 
 2183              	.LASF78:
 2184 01fd 68747470 		.ascii	"http_body\000"
 2184      5F626F64 
 2184      7900
 2185              	.LASF38:
 2186 0207 6D656173 		.ascii	"measure_time\000"
 2186      7572655F 
 2186      74696D65 
 2186      00
 2187              	.LASF21:
 2188 0214 4D6F6E74 		.ascii	"Month\000"
 2188      6800
 2189              	.LASF24:
 2190 021a 6C6F6E67 		.ascii	"long double\000"
 2190      20646F75 
 2190      626C6500 
 2191              	.LASF1:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 58


 2192 0226 756E7369 		.ascii	"unsigned char\000"
 2192      676E6564 
 2192      20636861 
 2192      7200
 2193              	.LASF71:
 2194 0234 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2194      6D5F7374 
 2194      6172745F 
 2194      74696D65 
 2194      5F737461 
 2195              	.LASF62:
 2196 024b 5254435F 		.ascii	"RTC_alarmCfgTimeDate\000"
 2196      616C6172 
 2196      6D436667 
 2196      54696D65 
 2196      44617465 
 2197              	.LASF70:
 2198 0260 6D6F6465 		.ascii	"modem_state\000"
 2198      6D5F7374 
 2198      61746500 
 2199              	.LASF0:
 2200 026c 7369676E 		.ascii	"signed char\000"
 2200      65642063 
 2200      68617200 
 2201              	.LASF61:
 2202 0278 5254435F 		.ascii	"RTC_EveryYearHandler\000"
 2202      45766572 
 2202      79596561 
 2202      7248616E 
 2202      646C6572 
 2203              	.LASF7:
 2204 028d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2204      206C6F6E 
 2204      6720756E 
 2204      7369676E 
 2204      65642069 
 2205              	.LASF81:
 2206 02a4 73797374 		.ascii	"system_settings\000"
 2206      656D5F73 
 2206      65747469 
 2206      6E677300 
 2207              	.LASF63:
 2208 02b4 5254435F 		.ascii	"RTC_currentTimeDate\000"
 2208      63757272 
 2208      656E7454 
 2208      696D6544 
 2208      61746500 
 2209              	.LASF8:
 2210 02c8 756E7369 		.ascii	"unsigned int\000"
 2210      676E6564 
 2210      20696E74 
 2210      00
 2211              	.LASF44:
 2212 02d5 6B65795F 		.ascii	"key_value_t\000"
 2212      76616C75 
 2212      655F7400 
 2213              	.LASF39:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 59


 2214 02e1 73796E63 		.ascii	"sync_time\000"
 2214      5F74696D 
 2214      6500
 2215              	.LASF84:
 2216 02eb 433A5C55 		.ascii	"C:\\Users\\hail\\Desktop\\Brooke Research\\notoriOS"
 2216      73657273 
 2216      5C686169 
 2216      6C5C4465 
 2216      736B746F 
 2217 0319 5C6E6F74 		.ascii	"\\notoriOS\\notoriOS.cydsn\000"
 2217      6F72694F 
 2217      535C6E6F 
 2217      746F7269 
 2217      4F532E63 
 2218              	.LASF85:
 2219 0332 5254435F 		.ascii	"RTC_ISR\000"
 2219      49535200 
 2220              	.LASF41:
 2221 033a 75706461 		.ascii	"updatable_parameters_t\000"
 2221      7461626C 
 2221      655F7061 
 2221      72616D65 
 2221      74657273 
 2222              	.LASF47:
 2223 0351 7379735F 		.ascii	"sys_info_t\000"
 2223      696E666F 
 2223      5F7400
 2224              	.LASF3:
 2225 035c 73686F72 		.ascii	"short unsigned int\000"
 2225      7420756E 
 2225      7369676E 
 2225      65642069 
 2225      6E7400
 2226              	.LASF35:
 2227 036f 74696D65 		.ascii	"time_to_network_connect\000"
 2227      5F746F5F 
 2227      6E657477 
 2227      6F726B5F 
 2227      636F6E6E 
 2228              	.LASF80:
 2229 0387 73797374 		.ascii	"system_info\000"
 2229      656D5F69 
 2229      6E666F00 
 2230              	.LASF36:
 2231 0393 74696D65 		.ascii	"time_to_acquire_ip\000"
 2231      5F746F5F 
 2231      61637175 
 2231      6972655F 
 2231      697000
 2232              	.LASF28:
 2233 03a6 696D6569 		.ascii	"imei\000"
 2233      00
 2234              	.LASF10:
 2235 03ab 696E7433 		.ascii	"int32_t\000"
 2235      325F7400 
 2236              	.LASF86:
 2237 03b3 5254435F 		.ascii	"RTC_tmp\000"
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 60


 2237      746D7000 
 2238              	.LASF37:
 2239 03bb 6D6F6465 		.ascii	"modem_stats_t\000"
 2239      6D5F7374 
 2239      6174735F 
 2239      7400
 2240              	.LASF57:
 2241 03c9 5254435F 		.ascii	"RTC_EveryHourHandler\000"
 2241      45766572 
 2241      79486F75 
 2241      7248616E 
 2241      646C6572 
 2242              	.LASF19:
 2243 03de 4461794F 		.ascii	"DayOfMonth\000"
 2243      664D6F6E 
 2243      746800
 2244              	.LASF33:
 2245 03e9 72737271 		.ascii	"rsrq\000"
 2245      00
 2246              	.LASF79:
 2247 03ee 68747470 		.ascii	"http_route\000"
 2247      5F726F75 
 2247      746500
 2248              	.LASF56:
 2249 03f9 5254435F 		.ascii	"RTC_EveryMinuteHandler\000"
 2249      45766572 
 2249      794D696E 
 2249      75746548 
 2249      616E646C 
 2250              	.LASF52:
 2251 0410 65705F70 		.ascii	"ep_pswd\000"
 2251      73776400 
 2252              	.LASF5:
 2253 0418 6C6F6E67 		.ascii	"long unsigned int\000"
 2253      20756E73 
 2253      69676E65 
 2253      6420696E 
 2253      7400
 2254              	.LASF13:
 2255 042a 696E7433 		.ascii	"int32\000"
 2255      3200
 2256              	.LASF15:
 2257 0430 646F7562 		.ascii	"double\000"
 2257      6C6500
 2258              	.LASF55:
 2259 0437 5254435F 		.ascii	"RTC_EverySecondHandler\000"
 2259      45766572 
 2259      79536563 
 2259      6F6E6448 
 2259      616E646C 
 2260              	.LASF72:
 2261 044e 6D6F6465 		.ascii	"modem_stats\000"
 2261      6D5F7374 
 2261      61747300 
 2262              	.LASF40:
 2263 045a 64656275 		.ascii	"debug_level\000"
 2263      675F6C65 
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 61


 2263      76656C00 
 2264              	.LASF67:
 2265 0466 5254435F 		.ascii	"RTC_statusDateTime\000"
 2265      73746174 
 2265      75734461 
 2265      74655469 
 2265      6D6500
 2266              	.LASF9:
 2267 0479 5F5F696E 		.ascii	"__int32_t\000"
 2267      7433325F 
 2267      7400
 2268              	.LASF83:
 2269 0483 47656E65 		.ascii	"Generated_Source\\PSoC5\\RTC_INT.c\000"
 2269      72617465 
 2269      645F536F 
 2269      75726365 
 2269      5C50536F 
 2270              	.LASF48:
 2271 04a4 6E6F6465 		.ascii	"node_id\000"
 2271      5F696400 
 2272              	.LASF65:
 2273 04ac 5254435F 		.ascii	"RTC_alarmCurStatus\000"
 2273      616C6172 
 2273      6D437572 
 2273      53746174 
 2273      757300
 2274              	.LASF73:
 2275 04bf 75706461 		.ascii	"updatable_parameters\000"
 2275      7461626C 
 2275      655F7061 
 2275      72616D65 
 2275      74657273 
 2276              	.LASF69:
 2277 04d4 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2277      52784275 
 2277      66666572 
 2277      00
 2278              	.LASF23:
 2279 04e1 5254435F 		.ascii	"RTC_TIME_DATE\000"
 2279      54494D45 
 2279      5F444154 
 2279      4500
 2280              	.LASF66:
 2281 04ef 5254435F 		.ascii	"RTC_intervalCfgMask\000"
 2281      696E7465 
 2281      7276616C 
 2281      4366674D 
 2281      61736B00 
 2282              	.LASF77:
 2283 0503 68747470 		.ascii	"http_request\000"
 2283      5F726571 
 2283      75657374 
 2283      00
 2284              	.LASF30:
 2285 0510 72737369 		.ascii	"rssi\000"
 2285      00
 2286              	.LASF20:
ARM GAS  C:\Users\hail\AppData\Local\Temp\ccwGBxde.s 			page 62


 2287 0515 4461794F 		.ascii	"DayOfYear\000"
 2287      66596561 
 2287      7200
 2288              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
