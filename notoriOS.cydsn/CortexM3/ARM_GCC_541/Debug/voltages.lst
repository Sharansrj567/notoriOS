ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"voltages.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	level_sensor_inbox,100,4
  20              		.comm	level_sensor_enabled,1,1
  21              		.comm	downstream_level_sensor_inbox,100,4
  22              		.comm	downstream_level_sensor_enabled,1,1
  23              		.comm	valve_enabled,1,1
  24              		.comm	valve_inbox,100,4
  25              		.comm	buffer_overflow,1,1
  26              		.comm	dataPointsInStack,2,2
  27              		.comm	dataPointsInStackDesired,2,2
  28              		.comm	data,6600,4
  29              		.comm	modem_state,1,1
  30              		.comm	modem_start_time_stamp,4,4
  31              		.comm	modem_info,60,4
  32              		.comm	modem_stats,32,4
  33              		.comm	updatable_parameters,9,4
  34              		.syntax unified
  35              		.global _printf_float
  36              		.thumb
  37              		.syntax unified
  38              		.comm	App_LED_enabled,1,1
  39              		.comm	app_led_inbox,100,4
  40              		.comm	http_request,10000,4
  41              		.comm	http_body,10000,4
  42              		.comm	http_route,200,4
  43              		.comm	system_info,28,4
  44              		.comm	system_settings,104,4
  45              		.comm	alarmMeasure,6,4
  46              		.comm	timeToMeasure,1,1
  47              		.comm	alarmSync,6,4
  48              		.comm	timeToSync,1,1
  49              		.comm	timeToSycnRemoteParams,1,1
  50              		.comm	hey,1,1
  51              		.comm	alarmAppLED,6,4
  52              		.comm	timeToAppLED,1,1
  53              		.comm	alarmLevelSensor,6,4
  54              		.comm	timetoLevelSensor,1,1
  55              		.comm	alarmDownstreamLevelSensor,6,4
  56              		.comm	timetoDownstreamLevelSensor,1,1
  57              		.comm	alarmValve,6,4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 2


  58              		.comm	timeToValve,1,1
  59              		.global	__aeabi_f2d
  60              		.global	__aeabi_dsub
  61              		.global	__aeabi_d2f
  62              		.global	__aeabi_fmul
  63              		.global	__aeabi_fsub
  64              		.section	.text.voltage_take_readings,"ax",%progbits
  65              		.align	2
  66              		.global	voltage_take_readings
  67              		.thumb
  68              		.thumb_func
  69              		.type	voltage_take_readings, %function
  70              	voltage_take_readings:
  71              	.LFB64:
  72              		.file 1 "voltages.c"
   1:voltages.c    **** #include "voltages.h"
   2:voltages.c    **** #include "notoriOS.h"
   3:voltages.c    **** #include <math.h>
   4:voltages.c    **** 
   5:voltages.c    **** // Function to take voltage readings and save them in the voltage_t datatype
   6:voltages.c    **** voltage_t voltage_take_readings(){
  73              		.loc 1 6 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 104
  76              		@ frame_needed = 1, uses_anonymous_args = 0
  77 0000 B0B5     		push	{r4, r5, r7, lr}
  78              		.cfi_def_cfa_offset 16
  79              		.cfi_offset 4, -16
  80              		.cfi_offset 5, -12
  81              		.cfi_offset 7, -8
  82              		.cfi_offset 14, -4
  83 0002 9AB0     		sub	sp, sp, #104
  84              		.cfi_def_cfa_offset 120
  85 0004 00AF     		add	r7, sp, #0
  86              		.cfi_def_cfa_register 7
  87 0006 7860     		str	r0, [r7, #4]
   7:voltages.c    ****     
   8:voltages.c    ****     voltage_t voltage;  // Create variable voltage of data structure voltage_t.
   9:voltages.c    ****      
  10:voltages.c    **** 	Battery_Voltage_Enable_Write(ON);   // Flip on the Battery Voltage ADC pin high (turns it on).
  88              		.loc 1 10 0
  89 0008 0120     		movs	r0, #1
  90 000a FFF7FEFF 		bl	Battery_Voltage_Enable_Write
  11:voltages.c    ****     Pressure_Voltage_Enable_Write(ON);  // Flip on the Pressure Transducer Voltage ADC pin high (tu
  91              		.loc 1 11 0
  92 000e 0120     		movs	r0, #1
  93 0010 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  12:voltages.c    ****     
  13:voltages.c    **** 	CyDelay(10u);	    // 10 seconds delay to give time to flip on ADC pin.
  94              		.loc 1 13 0
  95 0014 0A20     		movs	r0, #10
  96 0016 FFF7FEFF 		bl	CyDelay
  14:voltages.c    ****     
  15:voltages.c    ****     AMux_Start();       // Start the Analog Multiplexer
  97              		.loc 1 15 0
  98 001a FFF7FEFF 		bl	AMux_Start
  16:voltages.c    ****  
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 3


  17:voltages.c    ****     ADC_RestoreConfig();// Have to call this and save (See below). Otherwise ADC won't work through
  99              		.loc 1 17 0
 100 001e FFF7FEFF 		bl	ADC_RestoreConfig
  18:voltages.c    ****     
  19:voltages.c    ****     ADC_Start();        // Start the ADC
 101              		.loc 1 19 0
 102 0022 FFF7FEFF 		bl	ADC_Start
 103              	.LBB2:
  20:voltages.c    ****     
  21:voltages.c    ****     float channels[AMux_CHANNELS];
  22:voltages.c    ****     
  23:voltages.c    ****     for(uint8 c = 0; c< AMux_CHANNELS + 1; c++) // Sweep the MUX Channels
 104              		.loc 1 23 0
 105 0026 0023     		movs	r3, #0
 106 0028 87F86730 		strb	r3, [r7, #103]
 107 002c 34E0     		b	.L2
 108              	.L5:
 109              	.LBB3:
  24:voltages.c    ****     {
  25:voltages.c    ****         
  26:voltages.c    ****         int32 readings[N_SAMPLES];  // Creates new int32 array called readings of size N_SAMPLES = 
  27:voltages.c    ****         
  28:voltages.c    ****         AMux_Select(c); // This functions first disconnects all channels then connects the given ch
 110              		.loc 1 28 0
 111 002e 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 112 0032 1846     		mov	r0, r3
 113 0034 FFF7FEFF 		bl	AMux_Select
 114              	.LBB4:
  29:voltages.c    ****         
  30:voltages.c    ****         for(uint16 i=0; i< N_SAMPLES; i++){
 115              		.loc 1 30 0
 116 0038 0023     		movs	r3, #0
 117 003a A7F86430 		strh	r3, [r7, #100]	@ movhi
 118 003e 0FE0     		b	.L3
 119              	.L4:
  31:voltages.c    ****             
  32:voltages.c    ****             readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the
 120              		.loc 1 32 0 discriminator 3
 121 0040 B7F86440 		ldrh	r4, [r7, #100]
 122 0044 FFF7FEFF 		bl	ADC_Read32
 123 0048 0246     		mov	r2, r0
 124 004a A300     		lsls	r3, r4, #2
 125 004c 07F16801 		add	r1, r7, #104
 126 0050 0B44     		add	r3, r3, r1
 127 0052 43F8602C 		str	r2, [r3, #-96]
  30:voltages.c    ****             
 128              		.loc 1 30 0 discriminator 3
 129 0056 B7F86430 		ldrh	r3, [r7, #100]
 130 005a 0133     		adds	r3, r3, #1
 131 005c A7F86430 		strh	r3, [r7, #100]	@ movhi
 132              	.L3:
  30:voltages.c    ****             
 133              		.loc 1 30 0 is_stmt 0 discriminator 1
 134 0060 B7F86430 		ldrh	r3, [r7, #100]
 135 0064 0A2B     		cmp	r3, #10
 136 0066 EBD9     		bls	.L4
 137              	.LBE4:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 4


  33:voltages.c    ****         }
  34:voltages.c    ****         
  35:voltages.c    ****         // Converts the ADC output to Volts as a floating point number. 
  36:voltages.c    ****         // Get the median of readings and return that.
  37:voltages.c    ****         channels[c] = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Get median of re
 138              		.loc 1 37 0 is_stmt 1 discriminator 2
 139 0068 97F86740 		ldrb	r4, [r7, #103]	@ zero_extendqisi2
 140 006c 07F10803 		add	r3, r7, #8
 141 0070 0B21     		movs	r1, #11
 142 0072 1846     		mov	r0, r3
 143 0074 FFF7FEFF 		bl	find_median32
 144 0078 0346     		mov	r3, r0
 145 007a 1846     		mov	r0, r3
 146 007c FFF7FEFF 		bl	ADC_CountsTo_Volts
 147 0080 0246     		mov	r2, r0
 148 0082 A300     		lsls	r3, r4, #2
 149 0084 07F16801 		add	r1, r7, #104
 150 0088 0B44     		add	r3, r3, r1
 151 008a 43F8342C 		str	r2, [r3, #-52]	@ float
 152              	.LBE3:
  23:voltages.c    ****     {
 153              		.loc 1 23 0 discriminator 2
 154 008e 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 155 0092 0133     		adds	r3, r3, #1
 156 0094 87F86730 		strb	r3, [r7, #103]
 157              	.L2:
  23:voltages.c    ****     {
 158              		.loc 1 23 0 is_stmt 0 discriminator 1
 159 0098 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 160 009c 062B     		cmp	r3, #6
 161 009e C6D9     		bls	.L5
 162              	.LBE2:
  38:voltages.c    ****     }
  39:voltages.c    ****     
  40:voltages.c    ****     AMux_Stop();        // Disconnects all Analog Multiplex channels.
 163              		.loc 1 40 0 is_stmt 1
 164 00a0 FFF7FEFF 		bl	AMux_Start
  41:voltages.c    ****     
  42:voltages.c    ****     ADC_SaveConfig();   // Save the register configuration which are not retention.
 165              		.loc 1 42 0
 166 00a4 FFF7FEFF 		bl	ADC_SaveConfig
  43:voltages.c    ****     
  44:voltages.c    ****     ADC_Stop();         // Stops and powers down the ADC component and the internal clock if the ex
 167              		.loc 1 44 0
 168 00a8 FFF7FEFF 		bl	ADC_Stop
  45:voltages.c    ****     
  46:voltages.c    ****     Battery_Voltage_Enable_Write(OFF);  // Pulls Battery ADC pin low (turns it off).
 169              		.loc 1 46 0
 170 00ac 0020     		movs	r0, #0
 171 00ae FFF7FEFF 		bl	Battery_Voltage_Enable_Write
  47:voltages.c    ****     Pressure_Voltage_Enable_Write(OFF);  // Pulls Pressure Transducer ADC pin low (turns it off).
 172              		.loc 1 47 0
 173 00b2 0020     		movs	r0, #0
 174 00b4 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  48:voltages.c    ****     
  49:voltages.c    ****     float offset = channels[0] - 1.024; // Should be 1.024 exactly. BK saw an offset when measuring
 175              		.loc 1 49 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 5


 176 00b8 7B6B     		ldr	r3, [r7, #52]	@ float
 177 00ba 1846     		mov	r0, r3
 178 00bc FFF7FEFF 		bl	__aeabi_f2d
 179 00c0 19A3     		adr	r3, .L7
 180 00c2 D3E90023 		ldrd	r2, [r3]
 181 00c6 FFF7FEFF 		bl	__aeabi_dsub
 182 00ca 0346     		mov	r3, r0
 183 00cc 0C46     		mov	r4, r1
 184 00ce 1846     		mov	r0, r3
 185 00d0 2146     		mov	r1, r4
 186 00d2 FFF7FEFF 		bl	__aeabi_d2f
 187 00d6 0346     		mov	r3, r0
 188 00d8 3B66     		str	r3, [r7, #96]	@ float
  50:voltages.c    ****     voltage.voltage_battery = (channels[ADC_MUX_VBAT] * 11) - offset; // Voltage divider is (1/10) 
 189              		.loc 1 50 0
 190 00da BB6B     		ldr	r3, [r7, #56]	@ float
 191 00dc 1449     		ldr	r1, .L7+8
 192 00de 1846     		mov	r0, r3
 193 00e0 FFF7FEFF 		bl	__aeabi_fmul
 194 00e4 0346     		mov	r3, r0
 195 00e6 396E     		ldr	r1, [r7, #96]	@ float
 196 00e8 1846     		mov	r0, r3
 197 00ea FFF7FEFF 		bl	__aeabi_fsub
 198 00ee 0346     		mov	r3, r0
 199 00f0 FB64     		str	r3, [r7, #76]	@ float
  51:voltages.c    ****     voltage.voltage_solar = channels[ADC_MUX_VSOL] - offset; // Just want voltage here
 200              		.loc 1 51 0
 201 00f2 FB6B     		ldr	r3, [r7, #60]	@ float
 202 00f4 396E     		ldr	r1, [r7, #96]	@ float
 203 00f6 1846     		mov	r0, r3
 204 00f8 FFF7FEFF 		bl	__aeabi_fsub
 205 00fc 0346     		mov	r3, r0
 206 00fe 3B65     		str	r3, [r7, #80]	@ float
  52:voltages.c    ****     // Voltage across sensor resistor gives 100mV drop for max current, which is 800mA
  53:voltages.c    ****     //voltage.voltage_charge_current = 0.1*(channels[ADC_MUX_CHRG] - voltage.voltage_battery);
  54:voltages.c    ****     voltage.voltage_pressure = channels[ADC_MUX_PRTRANS]; // Pressure transducer reading
 207              		.loc 1 54 0
 208 0100 3B6C     		ldr	r3, [r7, #64]	@ float
 209 0102 BB65     		str	r3, [r7, #88]	@ float
  55:voltages.c    **** 
  56:voltages.c    ****     voltage.valid = 1;
 210              		.loc 1 56 0
 211 0104 0123     		movs	r3, #1
 212 0106 87F85C30 		strb	r3, [r7, #92]
  57:voltages.c    ****     
  58:voltages.c    ****     return voltage;
 213              		.loc 1 58 0
 214 010a 7B68     		ldr	r3, [r7, #4]
 215 010c 1D46     		mov	r5, r3
 216 010e 07F14C04 		add	r4, r7, #76
 217 0112 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 218 0114 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 219 0116 2368     		ldr	r3, [r4]
 220 0118 2B60     		str	r3, [r5]
  59:voltages.c    **** }
 221              		.loc 1 59 0
 222 011a 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 6


 223 011c 6837     		adds	r7, r7, #104
 224              		.cfi_def_cfa_offset 16
 225 011e BD46     		mov	sp, r7
 226              		.cfi_def_cfa_register 13
 227              		@ sp needed
 228 0120 B0BD     		pop	{r4, r5, r7, pc}
 229              	.L8:
 230 0122 00BFAFF3 		.align	3
 230      0080
 231              	.L7:
 232 0128 FCA9F1D2 		.word	-755914244
 233 012c 4D62F03F 		.word	1072718413
 234 0130 00003041 		.word	1093664768
 235              		.cfi_endproc
 236              	.LFE64:
 237              		.size	voltage_take_readings, .-voltage_take_readings
 238              		.global	__aeabi_fdiv
 239              		.global	__aeabi_ddiv
 240              		.global	__aeabi_dmul
 241              		.section	.text.pressure_sensor_readings,"ax",%progbits
 242              		.align	2
 243              		.global	pressure_sensor_readings
 244              		.thumb
 245              		.thumb_func
 246              		.type	pressure_sensor_readings, %function
 247              	pressure_sensor_readings:
 248              	.LFB65:
  60:voltages.c    **** 
  61:voltages.c    **** // Function to take Pressure sensor readings and save them in the pressure_t datatype
  62:voltages.c    **** pressure_t pressure_sensor_readings(){
 249              		.loc 1 62 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 96
 252              		@ frame_needed = 1, uses_anonymous_args = 0
 253 0000 90B5     		push	{r4, r7, lr}
 254              		.cfi_def_cfa_offset 12
 255              		.cfi_offset 4, -12
 256              		.cfi_offset 7, -8
 257              		.cfi_offset 14, -4
 258 0002 99B0     		sub	sp, sp, #100
 259              		.cfi_def_cfa_offset 112
 260 0004 00AF     		add	r7, sp, #0
 261              		.cfi_def_cfa_register 7
 262 0006 7860     		str	r0, [r7, #4]
  63:voltages.c    ****     
  64:voltages.c    ****     pressure_t pressure;  // Create variable voltage of data structure voltage_t.
  65:voltages.c    ****     float channels[AMux_CHANNELS];
  66:voltages.c    ****     int32 readings[N_SAMPLES];  // Creates new int32 array called readings of size N_SAMPLES = 11
  67:voltages.c    ****     
  68:voltages.c    ****     AMux_Start();       // Start the Analog Multiplexer
 263              		.loc 1 68 0
 264 0008 FFF7FEFF 		bl	AMux_Start
  69:voltages.c    ****  
  70:voltages.c    ****     ADC_RestoreConfig();// Have to call this and save (See below). Otherwise ADC won't work through
 265              		.loc 1 70 0
 266 000c FFF7FEFF 		bl	ADC_RestoreConfig
  71:voltages.c    ****     
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 7


  72:voltages.c    ****     ADC_Start();        // Start the ADC
 267              		.loc 1 72 0
 268 0010 FFF7FEFF 		bl	ADC_Start
  73:voltages.c    ****     
  74:voltages.c    ****     AMux_Select(ADC_MUX_PRTRANS); // This functions first disconnects all channels then connects th
 269              		.loc 1 74 0
 270 0014 0320     		movs	r0, #3
 271 0016 FFF7FEFF 		bl	AMux_Select
 272              	.LBB5:
  75:voltages.c    ****     
  76:voltages.c    ****     for(uint16 i=0; i< N_SAMPLES; i++){   
 273              		.loc 1 76 0
 274 001a 0023     		movs	r3, #0
 275 001c A7F85E30 		strh	r3, [r7, #94]	@ movhi
 276 0020 0FE0     		b	.L10
 277              	.L11:
  77:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 278              		.loc 1 77 0 discriminator 3
 279 0022 B7F85E40 		ldrh	r4, [r7, #94]
 280 0026 FFF7FEFF 		bl	ADC_Read32
 281 002a 0246     		mov	r2, r0
 282 002c A300     		lsls	r3, r4, #2
 283 002e 07F16001 		add	r1, r7, #96
 284 0032 0B44     		add	r3, r3, r1
 285 0034 43F8582C 		str	r2, [r3, #-88]
  76:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 286              		.loc 1 76 0 discriminator 3
 287 0038 B7F85E30 		ldrh	r3, [r7, #94]
 288 003c 0133     		adds	r3, r3, #1
 289 003e A7F85E30 		strh	r3, [r7, #94]	@ movhi
 290              	.L10:
  76:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 291              		.loc 1 76 0 is_stmt 0 discriminator 1
 292 0042 B7F85E30 		ldrh	r3, [r7, #94]
 293 0046 0A2B     		cmp	r3, #10
 294 0048 EBD9     		bls	.L11
 295              	.LBE5:
  78:voltages.c    ****     }
  79:voltages.c    ****     
  80:voltages.c    ****     // Converts the ADC output to Volts as a floating point number. 
  81:voltages.c    ****     // Get the median of readings and return that.
  82:voltages.c    ****     pressure.pressure_voltage_off = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Ge
 296              		.loc 1 82 0 is_stmt 1
 297 004a 07F10803 		add	r3, r7, #8
 298 004e 0B21     		movs	r1, #11
 299 0050 1846     		mov	r0, r3
 300 0052 FFF7FEFF 		bl	find_median32
 301 0056 0346     		mov	r3, r0
 302 0058 1846     		mov	r0, r3
 303 005a FFF7FEFF 		bl	ADC_CountsTo_Volts
 304 005e 0346     		mov	r3, r0
 305 0060 3B65     		str	r3, [r7, #80]	@ float
  83:voltages.c    ****     pressure.pressure_voltage_off = floorf(pressure.pressure_voltage_off * 100) / 100;
 306              		.loc 1 83 0
 307 0062 3B6D     		ldr	r3, [r7, #80]	@ float
 308 0064 4849     		ldr	r1, .L15+16
 309 0066 1846     		mov	r0, r3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 8


 310 0068 FFF7FEFF 		bl	__aeabi_fmul
 311 006c 0346     		mov	r3, r0
 312 006e 1846     		mov	r0, r3
 313 0070 FFF7FEFF 		bl	floorf
 314 0074 0346     		mov	r3, r0
 315 0076 4449     		ldr	r1, .L15+16
 316 0078 1846     		mov	r0, r3
 317 007a FFF7FEFF 		bl	__aeabi_fdiv
 318 007e 0346     		mov	r3, r0
 319 0080 3B65     		str	r3, [r7, #80]	@ float
  84:voltages.c    ****     
  85:voltages.c    ****     Pressure_Voltage_Enable_Write(ON);  // Flip on the Pressure Transducer Voltage ADC pin high (tu
 320              		.loc 1 85 0
 321 0082 0120     		movs	r0, #1
 322 0084 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  86:voltages.c    ****     
  87:voltages.c    **** 	CyDelay(10u);	    // 10 seconds delay to give time to flip on ADC pin.
 323              		.loc 1 87 0
 324 0088 0A20     		movs	r0, #10
 325 008a FFF7FEFF 		bl	CyDelay
 326              	.LBB6:
  88:voltages.c    ****   
  89:voltages.c    ****     for(uint16 i=0; i< N_SAMPLES; i++){   
 327              		.loc 1 89 0
 328 008e 0023     		movs	r3, #0
 329 0090 A7F85C30 		strh	r3, [r7, #92]	@ movhi
 330 0094 0FE0     		b	.L12
 331              	.L13:
  90:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 332              		.loc 1 90 0 discriminator 3
 333 0096 B7F85C40 		ldrh	r4, [r7, #92]
 334 009a FFF7FEFF 		bl	ADC_Read32
 335 009e 0246     		mov	r2, r0
 336 00a0 A300     		lsls	r3, r4, #2
 337 00a2 07F16001 		add	r1, r7, #96
 338 00a6 0B44     		add	r3, r3, r1
 339 00a8 43F8582C 		str	r2, [r3, #-88]
  89:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 340              		.loc 1 89 0 discriminator 3
 341 00ac B7F85C30 		ldrh	r3, [r7, #92]
 342 00b0 0133     		adds	r3, r3, #1
 343 00b2 A7F85C30 		strh	r3, [r7, #92]	@ movhi
 344              	.L12:
  89:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 345              		.loc 1 89 0 is_stmt 0 discriminator 1
 346 00b6 B7F85C30 		ldrh	r3, [r7, #92]
 347 00ba 0A2B     		cmp	r3, #10
 348 00bc EBD9     		bls	.L13
 349              	.LBE6:
  91:voltages.c    ****     }
  92:voltages.c    ****     
  93:voltages.c    ****     // Converts the ADC output to Volts as a floating point number. 
  94:voltages.c    ****     // Get the median of readings and return that.
  95:voltages.c    ****     pressure.pressure_voltage_on = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Get
 350              		.loc 1 95 0 is_stmt 1
 351 00be 07F10803 		add	r3, r7, #8
 352 00c2 0B21     		movs	r1, #11
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 9


 353 00c4 1846     		mov	r0, r3
 354 00c6 FFF7FEFF 		bl	find_median32
 355 00ca 0346     		mov	r3, r0
 356 00cc 1846     		mov	r0, r3
 357 00ce FFF7FEFF 		bl	ADC_CountsTo_Volts
 358 00d2 0346     		mov	r3, r0
 359 00d4 FB64     		str	r3, [r7, #76]	@ float
  96:voltages.c    ****     
  97:voltages.c    ****     AMux_Stop();        // Disconnects all Analog Multiplex channels.
 360              		.loc 1 97 0
 361 00d6 FFF7FEFF 		bl	AMux_Start
  98:voltages.c    ****     
  99:voltages.c    ****     ADC_SaveConfig();   // Save the register configuration which are not retention.
 362              		.loc 1 99 0
 363 00da FFF7FEFF 		bl	ADC_SaveConfig
 100:voltages.c    ****     
 101:voltages.c    ****     ADC_Stop();         // Stops and powers down the ADC component and the internal clock if the ex
 364              		.loc 1 101 0
 365 00de FFF7FEFF 		bl	ADC_Stop
 102:voltages.c    ****     
 103:voltages.c    ****     Pressure_Voltage_Enable_Write(OFF);  // Pulls Pressure Transducer ADC pin low (turns it off).
 366              		.loc 1 103 0
 367 00e2 0020     		movs	r0, #0
 368 00e4 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 104:voltages.c    ****     // Calculate the pressure transducer current output.
 105:voltages.c    ****     // i=V/R where i= currrent, V= voltage, and R= resistance= 150 ohms. Divide by 1000 to get curr
 106:voltages.c    ****     // Should fall between 4 and 20mA
 107:voltages.c    ****     pressure.pressure_current = (pressure.pressure_voltage_on/ 150.0)*1000; 
 369              		.loc 1 107 0
 370 00e8 FB6C     		ldr	r3, [r7, #76]	@ float
 371 00ea 1846     		mov	r0, r3
 372 00ec FFF7FEFF 		bl	__aeabi_f2d
 373 00f0 21A3     		adr	r3, .L15
 374 00f2 D3E90023 		ldrd	r2, [r3]
 375 00f6 FFF7FEFF 		bl	__aeabi_ddiv
 376 00fa 0346     		mov	r3, r0
 377 00fc 0C46     		mov	r4, r1
 378 00fe 1846     		mov	r0, r3
 379 0100 2146     		mov	r1, r4
 380 0102 4FF00002 		mov	r2, #0
 381 0106 214B     		ldr	r3, .L15+20
 382 0108 FFF7FEFF 		bl	__aeabi_dmul
 383 010c 0346     		mov	r3, r0
 384 010e 0C46     		mov	r4, r1
 385 0110 1846     		mov	r0, r3
 386 0112 2146     		mov	r1, r4
 387 0114 FFF7FEFF 		bl	__aeabi_d2f
 388 0118 0346     		mov	r3, r0
 389 011a 7B65     		str	r3, [r7, #84]	@ float
 108:voltages.c    ****     // Calculate the estimated depth from the pressure transducer.
 109:voltages.c    ****     // d = (Dmax*V/0.016R) - (Dmax/4) where d= depth, V= voltage, R= resistance= 150 ohms, Dmax = s
 110:voltages.c    ****     // Should fall between 0 and 10 ft
 111:voltages.c    ****     pressure.pressure_depth = ((10.0*pressure.pressure_voltage_on)/(0.016*150))-(10.0/4.0);   
 390              		.loc 1 111 0
 391 011c FB6C     		ldr	r3, [r7, #76]	@ float
 392 011e 1846     		mov	r0, r3
 393 0120 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 10


 394 0124 4FF00002 		mov	r2, #0
 395 0128 194B     		ldr	r3, .L15+24
 396 012a FFF7FEFF 		bl	__aeabi_dmul
 397 012e 0346     		mov	r3, r0
 398 0130 0C46     		mov	r4, r1
 399 0132 1846     		mov	r0, r3
 400 0134 2146     		mov	r1, r4
 401 0136 12A3     		adr	r3, .L15+8
 402 0138 D3E90023 		ldrd	r2, [r3]
 403 013c FFF7FEFF 		bl	__aeabi_ddiv
 404 0140 0346     		mov	r3, r0
 405 0142 0C46     		mov	r4, r1
 406 0144 1846     		mov	r0, r3
 407 0146 2146     		mov	r1, r4
 408 0148 4FF00002 		mov	r2, #0
 409 014c 114B     		ldr	r3, .L15+28
 410 014e FFF7FEFF 		bl	__aeabi_dsub
 411 0152 0346     		mov	r3, r0
 412 0154 0C46     		mov	r4, r1
 413 0156 1846     		mov	r0, r3
 414 0158 2146     		mov	r1, r4
 415 015a FFF7FEFF 		bl	__aeabi_d2f
 416 015e 0346     		mov	r3, r0
 417 0160 BB65     		str	r3, [r7, #88]	@ float
 112:voltages.c    ****     return pressure;
 418              		.loc 1 112 0
 419 0162 7B68     		ldr	r3, [r7, #4]
 420 0164 1C46     		mov	r4, r3
 421 0166 07F14C03 		add	r3, r7, #76
 422 016a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 423 016c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 113:voltages.c    **** }
 424              		.loc 1 113 0
 425 0170 7868     		ldr	r0, [r7, #4]
 426 0172 6437     		adds	r7, r7, #100
 427              		.cfi_def_cfa_offset 12
 428 0174 BD46     		mov	sp, r7
 429              		.cfi_def_cfa_register 13
 430              		@ sp needed
 431 0176 90BD     		pop	{r4, r7, pc}
 432              	.L16:
 433              		.align	3
 434              	.L15:
 435 0178 00000000 		.word	0
 436 017c 00C06240 		.word	1080213504
 437 0180 33333333 		.word	858993459
 438 0184 33330340 		.word	1073951539
 439 0188 0000C842 		.word	1120403456
 440 018c 00408F40 		.word	1083129856
 441 0190 00002440 		.word	1076101120
 442 0194 00000440 		.word	1074003968
 443              		.cfi_endproc
 444              	.LFE65:
 445              		.size	pressure_sensor_readings, .-pressure_sensor_readings
 446              		.section	.text.pressure_calculations,"ax",%progbits
 447              		.align	2
 448              		.global	pressure_calculations
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 11


 449              		.thumb
 450              		.thumb_func
 451              		.type	pressure_calculations, %function
 452              	pressure_calculations:
 453              	.LFB66:
 114:voltages.c    **** 
 115:voltages.c    **** // Function to calculate the pressure transducer current and depth estimate.
 116:voltages.c    **** pressure_t pressure_calculations(voltage_t voltage){
 454              		.loc 1 116 0
 455              		.cfi_startproc
 456              		@ args = 24, pretend = 16, frame = 24
 457              		@ frame_needed = 1, uses_anonymous_args = 0
 458 0000 84B0     		sub	sp, sp, #16
 459              		.cfi_def_cfa_offset 16
 460 0002 90B5     		push	{r4, r7, lr}
 461              		.cfi_def_cfa_offset 28
 462              		.cfi_offset 4, -28
 463              		.cfi_offset 7, -24
 464              		.cfi_offset 14, -20
 465 0004 87B0     		sub	sp, sp, #28
 466              		.cfi_def_cfa_offset 56
 467 0006 00AF     		add	r7, sp, #0
 468              		.cfi_def_cfa_register 7
 469 0008 7860     		str	r0, [r7, #4]
 470 000a 07F12C00 		add	r0, r7, #44
 471 000e 80E80E00 		stmia	r0, {r1, r2, r3}
 117:voltages.c    ****     // Create variable pressure of data structure type pressure_t.
 118:voltages.c    ****     pressure_t pressure;
 119:voltages.c    ****     
 120:voltages.c    ****     // Calculate the pressure transducer current output.
 121:voltages.c    ****     // i=V/R where i= currrent, V= voltage, and R= resistance= 150 ohms. Divide by 1000 to get curr
 122:voltages.c    ****     // Should fall between 4 and 20mA
 123:voltages.c    ****     pressure.pressure_current = (voltage.voltage_pressure/ 150.0)/1000; 
 472              		.loc 1 123 0
 473 0012 BB6B     		ldr	r3, [r7, #56]	@ float
 474 0014 1846     		mov	r0, r3
 475 0016 FFF7FEFF 		bl	__aeabi_f2d
 476 001a 23A3     		adr	r3, .L19
 477 001c D3E90023 		ldrd	r2, [r3]
 478 0020 FFF7FEFF 		bl	__aeabi_ddiv
 479 0024 0346     		mov	r3, r0
 480 0026 0C46     		mov	r4, r1
 481 0028 1846     		mov	r0, r3
 482 002a 2146     		mov	r1, r4
 483 002c 4FF00002 		mov	r2, #0
 484 0030 214B     		ldr	r3, .L19+16
 485 0032 FFF7FEFF 		bl	__aeabi_ddiv
 486 0036 0346     		mov	r3, r0
 487 0038 0C46     		mov	r4, r1
 488 003a 1846     		mov	r0, r3
 489 003c 2146     		mov	r1, r4
 490 003e FFF7FEFF 		bl	__aeabi_d2f
 491 0042 0346     		mov	r3, r0
 492 0044 3B61     		str	r3, [r7, #16]	@ float
 124:voltages.c    ****     // Calculate the estimated depth from the pressure transducer.
 125:voltages.c    ****     // d = (Dmax*V/0.016R) - (Dmax/4) where d= depth, V= voltage, R= resistance= 150 ohms, Dmax = s
 126:voltages.c    ****     // Should fall between 0 and 10 ft
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 12


 127:voltages.c    ****     pressure.pressure_depth = ((10.0*voltage.voltage_pressure)/(0.016*150))-(10.0/4.0); 
 493              		.loc 1 127 0
 494 0046 BB6B     		ldr	r3, [r7, #56]	@ float
 495 0048 1846     		mov	r0, r3
 496 004a FFF7FEFF 		bl	__aeabi_f2d
 497 004e 4FF00002 		mov	r2, #0
 498 0052 1A4B     		ldr	r3, .L19+20
 499 0054 FFF7FEFF 		bl	__aeabi_dmul
 500 0058 0346     		mov	r3, r0
 501 005a 0C46     		mov	r4, r1
 502 005c 1846     		mov	r0, r3
 503 005e 2146     		mov	r1, r4
 504 0060 13A3     		adr	r3, .L19+8
 505 0062 D3E90023 		ldrd	r2, [r3]
 506 0066 FFF7FEFF 		bl	__aeabi_ddiv
 507 006a 0346     		mov	r3, r0
 508 006c 0C46     		mov	r4, r1
 509 006e 1846     		mov	r0, r3
 510 0070 2146     		mov	r1, r4
 511 0072 4FF00002 		mov	r2, #0
 512 0076 124B     		ldr	r3, .L19+24
 513 0078 FFF7FEFF 		bl	__aeabi_dsub
 514 007c 0346     		mov	r3, r0
 515 007e 0C46     		mov	r4, r1
 516 0080 1846     		mov	r0, r3
 517 0082 2146     		mov	r1, r4
 518 0084 FFF7FEFF 		bl	__aeabi_d2f
 519 0088 0346     		mov	r3, r0
 520 008a 7B61     		str	r3, [r7, #20]	@ float
 128:voltages.c    ****     return pressure;
 521              		.loc 1 128 0
 522 008c 7B68     		ldr	r3, [r7, #4]
 523 008e 1C46     		mov	r4, r3
 524 0090 07F10803 		add	r3, r7, #8
 525 0094 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 526 0096 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 129:voltages.c    **** }
 527              		.loc 1 129 0
 528 009a 7868     		ldr	r0, [r7, #4]
 529 009c 1C37     		adds	r7, r7, #28
 530              		.cfi_def_cfa_offset 28
 531 009e BD46     		mov	sp, r7
 532              		.cfi_def_cfa_register 13
 533              		@ sp needed
 534 00a0 BDE89040 		pop	{r4, r7, lr}
 535              		.cfi_restore 14
 536              		.cfi_restore 7
 537              		.cfi_restore 4
 538              		.cfi_def_cfa_offset 16
 539 00a4 04B0     		add	sp, sp, #16
 540              		.cfi_def_cfa_offset 0
 541 00a6 7047     		bx	lr
 542              	.L20:
 543              		.align	3
 544              	.L19:
 545 00a8 00000000 		.word	0
 546 00ac 00C06240 		.word	1080213504
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 13


 547 00b0 33333333 		.word	858993459
 548 00b4 33330340 		.word	1073951539
 549 00b8 00408F40 		.word	1083129856
 550 00bc 00002440 		.word	1076101120
 551 00c0 00000440 		.word	1074003968
 552              		.cfi_endproc
 553              	.LFE66:
 554              		.size	pressure_calculations, .-pressure_calculations
 555              		.section	.text.sort32,"ax",%progbits
 556              		.align	2
 557              		.global	sort32
 558              		.thumb
 559              		.thumb_func
 560              		.type	sort32, %function
 561              	sort32:
 562              	.LFB67:
 130:voltages.c    ****     
 131:voltages.c    ****     
 132:voltages.c    **** 
 133:voltages.c    **** // Function to sort the elements in the level readings array
 134:voltages.c    **** void sort32(int32 a[],int32 n) { 
 563              		.loc 1 134 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 16
 566              		@ frame_needed = 1, uses_anonymous_args = 0
 567 0000 80B5     		push	{r7, lr}
 568              		.cfi_def_cfa_offset 8
 569              		.cfi_offset 7, -8
 570              		.cfi_offset 14, -4
 571 0002 84B0     		sub	sp, sp, #16
 572              		.cfi_def_cfa_offset 24
 573 0004 00AF     		add	r7, sp, #0
 574              		.cfi_def_cfa_register 7
 575 0006 7860     		str	r0, [r7, #4]
 576 0008 3960     		str	r1, [r7]
 135:voltages.c    ****    int32 i,j;
 136:voltages.c    **** 
 137:voltages.c    ****    for(i = 0;i < n-1;i++) {
 577              		.loc 1 137 0
 578 000a 0023     		movs	r3, #0
 579 000c FB60     		str	r3, [r7, #12]
 580 000e 28E0     		b	.L22
 581              	.L26:
 138:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 582              		.loc 1 138 0
 583 0010 0023     		movs	r3, #0
 584 0012 BB60     		str	r3, [r7, #8]
 585 0014 1BE0     		b	.L23
 586              	.L25:
 139:voltages.c    ****          if(a[j] > a[j+1])
 587              		.loc 1 139 0
 588 0016 BB68     		ldr	r3, [r7, #8]
 589 0018 9B00     		lsls	r3, r3, #2
 590 001a 7A68     		ldr	r2, [r7, #4]
 591 001c 1344     		add	r3, r3, r2
 592 001e 1A68     		ldr	r2, [r3]
 593 0020 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 14


 594 0022 0133     		adds	r3, r3, #1
 595 0024 9B00     		lsls	r3, r3, #2
 596 0026 7968     		ldr	r1, [r7, #4]
 597 0028 0B44     		add	r3, r3, r1
 598 002a 1B68     		ldr	r3, [r3]
 599 002c 9A42     		cmp	r2, r3
 600 002e 0BDD     		ble	.L24
 140:voltages.c    ****             swap32(&a[j],&a[j+1]);  // Swap the address of a[j] and a[j+1]
 601              		.loc 1 140 0
 602 0030 BB68     		ldr	r3, [r7, #8]
 603 0032 9B00     		lsls	r3, r3, #2
 604 0034 7A68     		ldr	r2, [r7, #4]
 605 0036 D018     		adds	r0, r2, r3
 606 0038 BB68     		ldr	r3, [r7, #8]
 607 003a 0133     		adds	r3, r3, #1
 608 003c 9B00     		lsls	r3, r3, #2
 609 003e 7A68     		ldr	r2, [r7, #4]
 610 0040 1344     		add	r3, r3, r2
 611 0042 1946     		mov	r1, r3
 612 0044 FFF7FEFF 		bl	swap32
 613              	.L24:
 138:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 614              		.loc 1 138 0 discriminator 2
 615 0048 BB68     		ldr	r3, [r7, #8]
 616 004a 0133     		adds	r3, r3, #1
 617 004c BB60     		str	r3, [r7, #8]
 618              	.L23:
 138:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 619              		.loc 1 138 0 is_stmt 0 discriminator 1
 620 004e 3A68     		ldr	r2, [r7]
 621 0050 FB68     		ldr	r3, [r7, #12]
 622 0052 D31A     		subs	r3, r2, r3
 623 0054 5A1E     		subs	r2, r3, #1
 624 0056 BB68     		ldr	r3, [r7, #8]
 625 0058 9A42     		cmp	r2, r3
 626 005a DCDC     		bgt	.L25
 137:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 627              		.loc 1 137 0 is_stmt 1 discriminator 2
 628 005c FB68     		ldr	r3, [r7, #12]
 629 005e 0133     		adds	r3, r3, #1
 630 0060 FB60     		str	r3, [r7, #12]
 631              	.L22:
 137:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 632              		.loc 1 137 0 is_stmt 0 discriminator 1
 633 0062 3B68     		ldr	r3, [r7]
 634 0064 5A1E     		subs	r2, r3, #1
 635 0066 FB68     		ldr	r3, [r7, #12]
 636 0068 9A42     		cmp	r2, r3
 637 006a D1DC     		bgt	.L26
 141:voltages.c    ****       }
 142:voltages.c    ****    }
 143:voltages.c    **** }
 638              		.loc 1 143 0 is_stmt 1
 639 006c 00BF     		nop
 640 006e 1037     		adds	r7, r7, #16
 641              		.cfi_def_cfa_offset 8
 642 0070 BD46     		mov	sp, r7
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 15


 643              		.cfi_def_cfa_register 13
 644              		@ sp needed
 645 0072 80BD     		pop	{r7, pc}
 646              		.cfi_endproc
 647              	.LFE67:
 648              		.size	sort32, .-sort32
 649              		.section	.text.swap32,"ax",%progbits
 650              		.align	2
 651              		.global	swap32
 652              		.thumb
 653              		.thumb_func
 654              		.type	swap32, %function
 655              	swap32:
 656              	.LFB68:
 144:voltages.c    **** 
 145:voltages.c    **** // Function to swap elements in the level readings array in order to sort them
 146:voltages.c    **** void swap32(int32 *p,int32 *q){
 657              		.loc 1 146 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 16
 660              		@ frame_needed = 1, uses_anonymous_args = 0
 661              		@ link register save eliminated.
 662 0000 80B4     		push	{r7}
 663              		.cfi_def_cfa_offset 4
 664              		.cfi_offset 7, -4
 665 0002 85B0     		sub	sp, sp, #20
 666              		.cfi_def_cfa_offset 24
 667 0004 00AF     		add	r7, sp, #0
 668              		.cfi_def_cfa_register 7
 669 0006 7860     		str	r0, [r7, #4]
 670 0008 3960     		str	r1, [r7]
 147:voltages.c    ****    int32 t;
 148:voltages.c    ****    
 149:voltages.c    ****    t=*p; 
 671              		.loc 1 149 0
 672 000a 7B68     		ldr	r3, [r7, #4]
 673 000c 1B68     		ldr	r3, [r3]
 674 000e FB60     		str	r3, [r7, #12]
 150:voltages.c    ****    *p=*q; 
 675              		.loc 1 150 0
 676 0010 3B68     		ldr	r3, [r7]
 677 0012 1A68     		ldr	r2, [r3]
 678 0014 7B68     		ldr	r3, [r7, #4]
 679 0016 1A60     		str	r2, [r3]
 151:voltages.c    ****    *q=t;
 680              		.loc 1 151 0
 681 0018 3B68     		ldr	r3, [r7]
 682 001a FA68     		ldr	r2, [r7, #12]
 683 001c 1A60     		str	r2, [r3]
 152:voltages.c    **** }
 684              		.loc 1 152 0
 685 001e 00BF     		nop
 686 0020 1437     		adds	r7, r7, #20
 687              		.cfi_def_cfa_offset 4
 688 0022 BD46     		mov	sp, r7
 689              		.cfi_def_cfa_register 13
 690              		@ sp needed
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 16


 691 0024 80BC     		pop	{r7}
 692              		.cfi_restore 7
 693              		.cfi_def_cfa_offset 0
 694 0026 7047     		bx	lr
 695              		.cfi_endproc
 696              	.LFE68:
 697              		.size	swap32, .-swap32
 698              		.global	__aeabi_i2d
 699              		.global	__aeabi_d2iz
 700              		.section	.text.find_median32,"ax",%progbits
 701              		.align	2
 702              		.global	find_median32
 703              		.thumb
 704              		.thumb_func
 705              		.type	find_median32, %function
 706              	find_median32:
 707              	.LFB69:
 153:voltages.c    **** 
 154:voltages.c    **** // Function to calculate the median of the array, after array is sorted
 155:voltages.c    **** int32 find_median32(int32 array[] , int32 n)
 156:voltages.c    **** {
 708              		.loc 1 156 0
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 16
 711              		@ frame_needed = 1, uses_anonymous_args = 0
 712 0000 90B5     		push	{r4, r7, lr}
 713              		.cfi_def_cfa_offset 12
 714              		.cfi_offset 4, -12
 715              		.cfi_offset 7, -8
 716              		.cfi_offset 14, -4
 717 0002 85B0     		sub	sp, sp, #20
 718              		.cfi_def_cfa_offset 32
 719 0004 00AF     		add	r7, sp, #0
 720              		.cfi_def_cfa_register 7
 721 0006 7860     		str	r0, [r7, #4]
 722 0008 3960     		str	r1, [r7]
 157:voltages.c    ****     int32 median=0;
 723              		.loc 1 157 0
 724 000a 0023     		movs	r3, #0
 725 000c FB60     		str	r3, [r7, #12]
 158:voltages.c    ****     sort32(array,n);
 726              		.loc 1 158 0
 727 000e 3968     		ldr	r1, [r7]
 728 0010 7868     		ldr	r0, [r7, #4]
 729 0012 FFF7FEFF 		bl	sort32
 159:voltages.c    ****     
 160:voltages.c    ****     // If number of elements are even
 161:voltages.c    ****     if(n%2 == 0)
 730              		.loc 1 161 0
 731 0016 3B68     		ldr	r3, [r7]
 732 0018 03F00103 		and	r3, r3, #1
 733 001c 002B     		cmp	r3, #0
 734 001e 23D1     		bne	.L29
 162:voltages.c    ****         // Median is the average of the  two middle sorted numbers
 163:voltages.c    ****         median = (array[(n-1)/2] + array[n/2])/2.0;
 735              		.loc 1 163 0
 736 0020 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 17


 737 0022 013B     		subs	r3, r3, #1
 738 0024 DA0F     		lsrs	r2, r3, #31
 739 0026 1344     		add	r3, r3, r2
 740 0028 5B10     		asrs	r3, r3, #1
 741 002a 9B00     		lsls	r3, r3, #2
 742 002c 7A68     		ldr	r2, [r7, #4]
 743 002e 1344     		add	r3, r3, r2
 744 0030 1A68     		ldr	r2, [r3]
 745 0032 3B68     		ldr	r3, [r7]
 746 0034 D90F     		lsrs	r1, r3, #31
 747 0036 0B44     		add	r3, r3, r1
 748 0038 5B10     		asrs	r3, r3, #1
 749 003a 9B00     		lsls	r3, r3, #2
 750 003c 7968     		ldr	r1, [r7, #4]
 751 003e 0B44     		add	r3, r3, r1
 752 0040 1B68     		ldr	r3, [r3]
 753 0042 1344     		add	r3, r3, r2
 754 0044 1846     		mov	r0, r3
 755 0046 FFF7FEFF 		bl	__aeabi_i2d
 756 004a 4FF00002 		mov	r2, #0
 757 004e 4FF08043 		mov	r3, #1073741824
 758 0052 FFF7FEFF 		bl	__aeabi_ddiv
 759 0056 0346     		mov	r3, r0
 760 0058 0C46     		mov	r4, r1
 761 005a 1846     		mov	r0, r3
 762 005c 2146     		mov	r1, r4
 763 005e FFF7FEFF 		bl	__aeabi_d2iz
 764 0062 0346     		mov	r3, r0
 765 0064 FB60     		str	r3, [r7, #12]
 766 0066 08E0     		b	.L30
 767              	.L29:
 164:voltages.c    ****     // If number of elements are odd
 165:voltages.c    ****     else
 166:voltages.c    ****         // Median is the the middle sorted number. 
 167:voltages.c    ****         median = array[n/2];
 768              		.loc 1 167 0
 769 0068 3B68     		ldr	r3, [r7]
 770 006a DA0F     		lsrs	r2, r3, #31
 771 006c 1344     		add	r3, r3, r2
 772 006e 5B10     		asrs	r3, r3, #1
 773 0070 9B00     		lsls	r3, r3, #2
 774 0072 7A68     		ldr	r2, [r7, #4]
 775 0074 1344     		add	r3, r3, r2
 776 0076 1B68     		ldr	r3, [r3]
 777 0078 FB60     		str	r3, [r7, #12]
 778              	.L30:
 168:voltages.c    ****     
 169:voltages.c    ****     return median;
 779              		.loc 1 169 0
 780 007a FB68     		ldr	r3, [r7, #12]
 170:voltages.c    **** }
 781              		.loc 1 170 0
 782 007c 1846     		mov	r0, r3
 783 007e 1437     		adds	r7, r7, #20
 784              		.cfi_def_cfa_offset 12
 785 0080 BD46     		mov	sp, r7
 786              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 18


 787              		@ sp needed
 788 0082 90BD     		pop	{r4, r7, pc}
 789              		.cfi_endproc
 790              	.LFE69:
 791              		.size	find_median32, .-find_median32
 792              		.section	.rodata
 793              		.align	2
 794              	.LC0:
 795 0000 54455354 		.ascii	"TEST_ANALOG_VOLTAGES\000"
 795      5F414E41 
 795      4C4F475F 
 795      564F4C54 
 795      41474553 
 796 0015 000000   		.align	2
 797              	.LC1:
 798 0018 56424154 		.ascii	"VBAT=%.3f,VSOL=%.3f,CHRG=%.3f\000"
 798      3D252E33 
 798      662C5653 
 798      4F4C3D25 
 798      2E33662C 
 799              		.section	.text.voltages_test,"ax",%progbits
 800              		.align	2
 801              		.global	voltages_test
 802              		.thumb
 803              		.thumb_func
 804              		.type	voltages_test, %function
 805              	voltages_test:
 806              	.LFB70:
 171:voltages.c    **** 
 172:voltages.c    **** // Test the voltage readings
 173:voltages.c    **** test_t voltages_test(){
 807              		.loc 1 173 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 416
 810              		@ frame_needed = 1, uses_anonymous_args = 0
 811 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 812              		.cfi_def_cfa_offset 24
 813              		.cfi_offset 4, -24
 814              		.cfi_offset 5, -20
 815              		.cfi_offset 7, -16
 816              		.cfi_offset 8, -12
 817              		.cfi_offset 9, -8
 818              		.cfi_offset 14, -4
 819 0004 EEB0     		sub	sp, sp, #440
 820              		.cfi_def_cfa_offset 464
 821 0006 06AF     		add	r7, sp, #24
 822              		.cfi_def_cfa 7, 440
 823 0008 3B1D     		adds	r3, r7, #4
 824 000a 1860     		str	r0, [r3]
 174:voltages.c    ****     // Create variable test of the data structure test_t
 175:voltages.c    ****     test_t test;
 176:voltages.c    ****     test.status = 0;
 825              		.loc 1 176 0
 826 000c 07F11C03 		add	r3, r7, #28
 827 0010 0022     		movs	r2, #0
 828 0012 83F88020 		strb	r2, [r3, #128]
 177:voltages.c    ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_ANALOG_VOLTAGES");
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 19


 829              		.loc 1 177 0
 830 0016 07F11C03 		add	r3, r7, #28
 831 001a 264A     		ldr	r2, .L34
 832 001c 1C46     		mov	r4, r3
 833 001e 1546     		mov	r5, r2
 834 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 835 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 836 0024 95E80300 		ldmia	r5, {r0, r1}
 837 0028 2060     		str	r0, [r4]
 838 002a 0434     		adds	r4, r4, #4
 839 002c 2170     		strb	r1, [r4]
 178:voltages.c    ****     
 179:voltages.c    ****     voltage_t voltage = voltage_take_readings();
 840              		.loc 1 179 0
 841 002e 07F10803 		add	r3, r7, #8
 842 0032 1846     		mov	r0, r3
 843 0034 FFF7FEFF 		bl	voltage_take_readings
 180:voltages.c    ****     
 181:voltages.c    ****     //do some checks here if you want the test to meet some voltage requirement
 182:voltages.c    ****     
 183:voltages.c    ****     snprintf(test.reason,sizeof(test.reason),"VBAT=%.3f,VSOL=%.3f,CHRG=%.3f",
 184:voltages.c    ****             voltage.voltage_battery,
 844              		.loc 1 184 0
 845 0038 07F10803 		add	r3, r7, #8
 846 003c 1B68     		ldr	r3, [r3]	@ float
 183:voltages.c    ****             voltage.voltage_battery,
 847              		.loc 1 183 0
 848 003e 1846     		mov	r0, r3
 849 0040 FFF7FEFF 		bl	__aeabi_f2d
 850 0044 0446     		mov	r4, r0
 851 0046 0D46     		mov	r5, r1
 185:voltages.c    ****             voltage.voltage_solar,
 852              		.loc 1 185 0
 853 0048 07F10803 		add	r3, r7, #8
 854 004c 5B68     		ldr	r3, [r3, #4]	@ float
 183:voltages.c    ****             voltage.voltage_battery,
 855              		.loc 1 183 0
 856 004e 1846     		mov	r0, r3
 857 0050 FFF7FEFF 		bl	__aeabi_f2d
 858 0054 8046     		mov	r8, r0
 859 0056 8946     		mov	r9, r1
 186:voltages.c    ****             voltage.voltage_charge_current);
 860              		.loc 1 186 0
 861 0058 07F10803 		add	r3, r7, #8
 862 005c 9B68     		ldr	r3, [r3, #8]	@ float
 183:voltages.c    ****             voltage.voltage_battery,
 863              		.loc 1 183 0
 864 005e 1846     		mov	r0, r3
 865 0060 FFF7FEFF 		bl	__aeabi_f2d
 866 0064 0246     		mov	r2, r0
 867 0066 0B46     		mov	r3, r1
 868 0068 07F11C01 		add	r1, r7, #28
 869 006c 01F18100 		add	r0, r1, #129
 870 0070 CDE90423 		strd	r2, [sp, #16]
 871 0074 CDE90289 		strd	r8, [sp, #8]
 872 0078 CDE90045 		strd	r4, [sp]
 873 007c 0E4A     		ldr	r2, .L34+4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 20


 874 007e 4FF48071 		mov	r1, #256
 875 0082 FFF7FEFF 		bl	snprintf
 187:voltages.c    ****     
 188:voltages.c    ****     test.status = 1;
 876              		.loc 1 188 0
 877 0086 07F11C03 		add	r3, r7, #28
 878 008a 0122     		movs	r2, #1
 879 008c 83F88020 		strb	r2, [r3, #128]
 189:voltages.c    ****     
 190:voltages.c    ****     return test;
 880              		.loc 1 190 0
 881 0090 3B1D     		adds	r3, r7, #4
 882 0092 1A68     		ldr	r2, [r3]
 883 0094 07F11C03 		add	r3, r7, #28
 884 0098 1046     		mov	r0, r2
 885 009a 1946     		mov	r1, r3
 886 009c 40F28113 		movw	r3, #385
 887 00a0 1A46     		mov	r2, r3
 888 00a2 FFF7FEFF 		bl	memcpy
 191:voltages.c    **** }
 889              		.loc 1 191 0
 890 00a6 3B1D     		adds	r3, r7, #4
 891 00a8 1868     		ldr	r0, [r3]
 892 00aa 07F5D077 		add	r7, r7, #416
 893              		.cfi_def_cfa_offset 24
 894 00ae BD46     		mov	sp, r7
 895              		.cfi_def_cfa_register 13
 896              		@ sp needed
 897 00b0 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 898              	.L35:
 899              		.align	2
 900              	.L34:
 901 00b4 00000000 		.word	.LC0
 902 00b8 18000000 		.word	.LC1
 903              		.cfi_endproc
 904              	.LFE70:
 905              		.size	voltages_test, .-voltages_test
 906              		.section	.rodata
 907 0036 0000     		.align	2
 908              	.LC2:
 909 0038 54455354 		.ascii	"TEST_PRESSURE_SENSOR\000"
 909      5F505245 
 909      53535552 
 909      455F5345 
 909      4E534F52 
 910 004d 000000   		.align	2
 911              	.LC3:
 912 0050 50524553 		.ascii	"PRESSURE=%.3f,PRES_CURRENT=%.3f,PRES_DEPTH=%.3f\000"
 912      53555245 
 912      3D252E33 
 912      662C5052 
 912      45535F43 
 913              		.global	__aeabi_fcmpeq
 914              		.section	.text.pressure_sensor_test,"ax",%progbits
 915              		.align	2
 916              		.global	pressure_sensor_test
 917              		.thumb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 21


 918              		.thumb_func
 919              		.type	pressure_sensor_test, %function
 920              	pressure_sensor_test:
 921              	.LFB71:
 192:voltages.c    **** 
 193:voltages.c    **** // Test the pressure sensor readings
 194:voltages.c    **** test_t pressure_sensor_test(){
 922              		.loc 1 194 0
 923              		.cfi_startproc
 924              		@ args = 0, pretend = 0, frame = 416
 925              		@ frame_needed = 1, uses_anonymous_args = 0
 926 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 927              		.cfi_def_cfa_offset 24
 928              		.cfi_offset 4, -24
 929              		.cfi_offset 5, -20
 930              		.cfi_offset 7, -16
 931              		.cfi_offset 8, -12
 932              		.cfi_offset 9, -8
 933              		.cfi_offset 14, -4
 934 0004 EEB0     		sub	sp, sp, #440
 935              		.cfi_def_cfa_offset 464
 936 0006 06AF     		add	r7, sp, #24
 937              		.cfi_def_cfa 7, 440
 938 0008 3B1D     		adds	r3, r7, #4
 939 000a 1860     		str	r0, [r3]
 195:voltages.c    ****     // Create variable test of the data structure test_t
 196:voltages.c    ****     test_t test;
 197:voltages.c    ****     test.status = 0;
 940              		.loc 1 197 0
 941 000c 07F11C03 		add	r3, r7, #28
 942 0010 0022     		movs	r2, #0
 943 0012 83F88020 		strb	r2, [r3, #128]
 198:voltages.c    ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_PRESSURE_SENSOR");
 944              		.loc 1 198 0
 945 0016 07F11C03 		add	r3, r7, #28
 946 001a 374A     		ldr	r2, .L41
 947 001c 1C46     		mov	r4, r3
 948 001e 1546     		mov	r5, r2
 949 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 950 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 951 0024 95E80300 		ldmia	r5, {r0, r1}
 952 0028 2060     		str	r0, [r4]
 953 002a 0434     		adds	r4, r4, #4
 954 002c 2170     		strb	r1, [r4]
 199:voltages.c    ****     
 200:voltages.c    ****     pressure_t pressure = pressure_sensor_readings();
 955              		.loc 1 200 0
 956 002e 07F10C03 		add	r3, r7, #12
 957 0032 1846     		mov	r0, r3
 958 0034 FFF7FEFF 		bl	pressure_sensor_readings
 201:voltages.c    ****     
 202:voltages.c    ****     //do some checks here if you want the test to meet some voltage requirement
 203:voltages.c    ****     
 204:voltages.c    ****     snprintf(test.reason,sizeof(test.reason),"PRESSURE=%.3f,PRES_CURRENT=%.3f,PRES_DEPTH=%.3f",
 205:voltages.c    ****             pressure.pressure_voltage_on,
 959              		.loc 1 205 0
 960 0038 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 22


 961 003c 1B68     		ldr	r3, [r3]	@ float
 204:voltages.c    ****             pressure.pressure_voltage_on,
 962              		.loc 1 204 0
 963 003e 1846     		mov	r0, r3
 964 0040 FFF7FEFF 		bl	__aeabi_f2d
 965 0044 0446     		mov	r4, r0
 966 0046 0D46     		mov	r5, r1
 206:voltages.c    ****             pressure.pressure_current,
 967              		.loc 1 206 0
 968 0048 07F10C03 		add	r3, r7, #12
 969 004c 9B68     		ldr	r3, [r3, #8]	@ float
 204:voltages.c    ****             pressure.pressure_voltage_on,
 970              		.loc 1 204 0
 971 004e 1846     		mov	r0, r3
 972 0050 FFF7FEFF 		bl	__aeabi_f2d
 973 0054 8046     		mov	r8, r0
 974 0056 8946     		mov	r9, r1
 207:voltages.c    ****             pressure.pressure_depth);
 975              		.loc 1 207 0
 976 0058 07F10C03 		add	r3, r7, #12
 977 005c DB68     		ldr	r3, [r3, #12]	@ float
 204:voltages.c    ****             pressure.pressure_voltage_on,
 978              		.loc 1 204 0
 979 005e 1846     		mov	r0, r3
 980 0060 FFF7FEFF 		bl	__aeabi_f2d
 981 0064 0246     		mov	r2, r0
 982 0066 0B46     		mov	r3, r1
 983 0068 07F11C01 		add	r1, r7, #28
 984 006c 01F18100 		add	r0, r1, #129
 985 0070 CDE90423 		strd	r2, [sp, #16]
 986 0074 CDE90289 		strd	r8, [sp, #8]
 987 0078 CDE90045 		strd	r4, [sp]
 988 007c 1F4A     		ldr	r2, .L41+4
 989 007e 4FF48071 		mov	r1, #256
 990 0082 FFF7FEFF 		bl	snprintf
 208:voltages.c    ****     pressure.pressure_voltage_on = floorf(pressure.pressure_voltage_on * 100) / 100;
 991              		.loc 1 208 0
 992 0086 07F10C03 		add	r3, r7, #12
 993 008a 1B68     		ldr	r3, [r3]	@ float
 994 008c 1C49     		ldr	r1, .L41+8
 995 008e 1846     		mov	r0, r3
 996 0090 FFF7FEFF 		bl	__aeabi_fmul
 997 0094 0346     		mov	r3, r0
 998 0096 1846     		mov	r0, r3
 999 0098 FFF7FEFF 		bl	floorf
 1000 009c 0346     		mov	r3, r0
 1001 009e 1849     		ldr	r1, .L41+8
 1002 00a0 1846     		mov	r0, r3
 1003 00a2 FFF7FEFF 		bl	__aeabi_fdiv
 1004 00a6 0346     		mov	r3, r0
 1005 00a8 1A46     		mov	r2, r3
 1006 00aa 07F10C03 		add	r3, r7, #12
 1007 00ae 1A60     		str	r2, [r3]	@ float
 209:voltages.c    ****     if (pressure.pressure_voltage_off != pressure.pressure_voltage_on) {
 1008              		.loc 1 209 0
 1009 00b0 07F10C03 		add	r3, r7, #12
 1010 00b4 5A68     		ldr	r2, [r3, #4]	@ float
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 23


 1011 00b6 07F10C03 		add	r3, r7, #12
 1012 00ba 1B68     		ldr	r3, [r3]	@ float
 1013 00bc 1946     		mov	r1, r3
 1014 00be 1046     		mov	r0, r2
 1015 00c0 FFF7FEFF 		bl	__aeabi_fcmpeq
 1016 00c4 0346     		mov	r3, r0
 1017 00c6 002B     		cmp	r3, #0
 1018 00c8 04D1     		bne	.L37
 210:voltages.c    ****         test.status = 1;
 1019              		.loc 1 210 0
 1020 00ca 07F11C03 		add	r3, r7, #28
 1021 00ce 0122     		movs	r2, #1
 1022 00d0 83F88020 		strb	r2, [r3, #128]
 1023              	.L37:
 211:voltages.c    ****     }
 212:voltages.c    ****     
 213:voltages.c    ****     return test;
 1024              		.loc 1 213 0
 1025 00d4 3B1D     		adds	r3, r7, #4
 1026 00d6 1A68     		ldr	r2, [r3]
 1027 00d8 07F11C03 		add	r3, r7, #28
 1028 00dc 1046     		mov	r0, r2
 1029 00de 1946     		mov	r1, r3
 1030 00e0 40F28113 		movw	r3, #385
 1031 00e4 1A46     		mov	r2, r3
 1032 00e6 FFF7FEFF 		bl	memcpy
 214:voltages.c    **** }
 1033              		.loc 1 214 0
 1034 00ea 3B1D     		adds	r3, r7, #4
 1035 00ec 1868     		ldr	r0, [r3]
 1036 00ee 07F5D077 		add	r7, r7, #416
 1037              		.cfi_def_cfa_offset 24
 1038 00f2 BD46     		mov	sp, r7
 1039              		.cfi_def_cfa_register 13
 1040              		@ sp needed
 1041 00f4 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 1042              	.L42:
 1043              		.align	2
 1044              	.L41:
 1045 00f8 38000000 		.word	.LC2
 1046 00fc 50000000 		.word	.LC3
 1047 0100 0000C842 		.word	1120403456
 1048              		.cfi_endproc
 1049              	.LFE71:
 1050              		.size	pressure_sensor_test, .-pressure_sensor_test
 1051              		.text
 1052              	.Letext0:
 1053              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1054              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1055              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1056              		.file 5 "testing.h"
 1057              		.file 6 "voltages.h"
 1058              		.file 7 "data.h"
 1059              		.file 8 "modem.h"
 1060              		.file 9 "notoriOS.h"
 1061              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 1062              		.file 11 "level_sensor.h"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 24


 1063              		.file 12 "downstream_level_sensor.h"
 1064              		.file 13 "valve.h"
 1065              		.file 14 "App_LED.h"
 1066              		.section	.debug_info,"",%progbits
 1067              	.Ldebug_info0:
 1068 0000 33090000 		.4byte	0x933
 1069 0004 0400     		.2byte	0x4
 1070 0006 00000000 		.4byte	.Ldebug_abbrev0
 1071 000a 04       		.byte	0x4
 1072 000b 01       		.uleb128 0x1
 1073 000c 6E000000 		.4byte	.LASF123
 1074 0010 0C       		.byte	0xc
 1075 0011 01060000 		.4byte	.LASF124
 1076 0015 07000000 		.4byte	.LASF125
 1077 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1078 001d 00000000 		.4byte	0
 1079 0021 00000000 		.4byte	.Ldebug_line0
 1080 0025 02       		.uleb128 0x2
 1081 0026 01       		.byte	0x1
 1082 0027 06       		.byte	0x6
 1083 0028 84010000 		.4byte	.LASF0
 1084 002c 02       		.uleb128 0x2
 1085 002d 01       		.byte	0x1
 1086 002e 08       		.byte	0x8
 1087 002f B0040000 		.4byte	.LASF1
 1088 0033 02       		.uleb128 0x2
 1089 0034 02       		.byte	0x2
 1090 0035 05       		.byte	0x5
 1091 0036 89030000 		.4byte	.LASF2
 1092 003a 02       		.uleb128 0x2
 1093 003b 02       		.byte	0x2
 1094 003c 07       		.byte	0x7
 1095 003d E7050000 		.4byte	.LASF3
 1096 0041 03       		.uleb128 0x3
 1097 0042 C9050000 		.4byte	.LASF9
 1098 0046 02       		.byte	0x2
 1099 0047 3F       		.byte	0x3f
 1100 0048 4C000000 		.4byte	0x4c
 1101 004c 02       		.uleb128 0x2
 1102 004d 04       		.byte	0x4
 1103 004e 05       		.byte	0x5
 1104 004f 0E020000 		.4byte	.LASF4
 1105 0053 02       		.uleb128 0x2
 1106 0054 04       		.byte	0x4
 1107 0055 07       		.byte	0x7
 1108 0056 10030000 		.4byte	.LASF5
 1109 005a 02       		.uleb128 0x2
 1110 005b 08       		.byte	0x8
 1111 005c 05       		.byte	0x5
 1112 005d 76010000 		.4byte	.LASF6
 1113 0061 02       		.uleb128 0x2
 1114 0062 08       		.byte	0x8
 1115 0063 07       		.byte	0x7
 1116 0064 FC000000 		.4byte	.LASF7
 1117 0068 04       		.uleb128 0x4
 1118 0069 04       		.byte	0x4
 1119 006a 05       		.byte	0x5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 25


 1120 006b 696E7400 		.ascii	"int\000"
 1121 006f 02       		.uleb128 0x2
 1122 0070 04       		.byte	0x4
 1123 0071 07       		.byte	0x7
 1124 0072 A6050000 		.4byte	.LASF8
 1125 0076 03       		.uleb128 0x3
 1126 0077 A8040000 		.4byte	.LASF10
 1127 007b 03       		.byte	0x3
 1128 007c 2C       		.byte	0x2c
 1129 007d 41000000 		.4byte	0x41
 1130 0081 05       		.uleb128 0x5
 1131 0082 4E020000 		.4byte	.LASF11
 1132 0086 04       		.byte	0x4
 1133 0087 9201     		.2byte	0x192
 1134 0089 2C000000 		.4byte	0x2c
 1135 008d 05       		.uleb128 0x5
 1136 008e 00000000 		.4byte	.LASF12
 1137 0092 04       		.byte	0x4
 1138 0093 9301     		.2byte	0x193
 1139 0095 3A000000 		.4byte	0x3a
 1140 0099 05       		.uleb128 0x5
 1141 009a 3A040000 		.4byte	.LASF13
 1142 009e 04       		.byte	0x4
 1143 009f 9601     		.2byte	0x196
 1144 00a1 33000000 		.4byte	0x33
 1145 00a5 05       		.uleb128 0x5
 1146 00a6 61020000 		.4byte	.LASF14
 1147 00aa 04       		.byte	0x4
 1148 00ab 9701     		.2byte	0x197
 1149 00ad 4C000000 		.4byte	0x4c
 1150 00b1 02       		.uleb128 0x2
 1151 00b2 04       		.byte	0x4
 1152 00b3 04       		.byte	0x4
 1153 00b4 9C040000 		.4byte	.LASF15
 1154 00b8 02       		.uleb128 0x2
 1155 00b9 08       		.byte	0x8
 1156 00ba 04       		.byte	0x4
 1157 00bb EE060000 		.4byte	.LASF16
 1158 00bf 02       		.uleb128 0x2
 1159 00c0 01       		.byte	0x1
 1160 00c1 08       		.byte	0x8
 1161 00c2 A1050000 		.4byte	.LASF17
 1162 00c6 02       		.uleb128 0x2
 1163 00c7 08       		.byte	0x8
 1164 00c8 04       		.byte	0x4
 1165 00c9 95050000 		.4byte	.LASF18
 1166 00cd 02       		.uleb128 0x2
 1167 00ce 04       		.byte	0x4
 1168 00cf 07       		.byte	0x7
 1169 00d0 0B040000 		.4byte	.LASF19
 1170 00d4 06       		.uleb128 0x6
 1171 00d5 BF000000 		.4byte	0xbf
 1172 00d9 E4000000 		.4byte	0xe4
 1173 00dd 07       		.uleb128 0x7
 1174 00de CD000000 		.4byte	0xcd
 1175 00e2 17       		.byte	0x17
 1176 00e3 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 26


 1177 00e4 08       		.uleb128 0x8
 1178 00e5 8101     		.2byte	0x181
 1179 00e7 05       		.byte	0x5
 1180 00e8 0A       		.byte	0xa
 1181 00e9 12010000 		.4byte	0x112
 1182 00ed 09       		.uleb128 0x9
 1183 00ee 30040000 		.4byte	.LASF20
 1184 00f2 05       		.byte	0x5
 1185 00f3 0C       		.byte	0xc
 1186 00f4 12010000 		.4byte	0x112
 1187 00f8 00       		.byte	0
 1188 00f9 09       		.uleb128 0x9
 1189 00fa 58060000 		.4byte	.LASF21
 1190 00fe 05       		.byte	0x5
 1191 00ff 0D       		.byte	0xd
 1192 0100 81000000 		.4byte	0x81
 1193 0104 80       		.byte	0x80
 1194 0105 09       		.uleb128 0x9
 1195 0106 33050000 		.4byte	.LASF22
 1196 010a 05       		.byte	0x5
 1197 010b 0F       		.byte	0xf
 1198 010c 22010000 		.4byte	0x122
 1199 0110 81       		.byte	0x81
 1200 0111 00       		.byte	0
 1201 0112 06       		.uleb128 0x6
 1202 0113 BF000000 		.4byte	0xbf
 1203 0117 22010000 		.4byte	0x122
 1204 011b 07       		.uleb128 0x7
 1205 011c CD000000 		.4byte	0xcd
 1206 0120 7F       		.byte	0x7f
 1207 0121 00       		.byte	0
 1208 0122 06       		.uleb128 0x6
 1209 0123 BF000000 		.4byte	0xbf
 1210 0127 32010000 		.4byte	0x132
 1211 012b 07       		.uleb128 0x7
 1212 012c CD000000 		.4byte	0xcd
 1213 0130 FF       		.byte	0xff
 1214 0131 00       		.byte	0
 1215 0132 03       		.uleb128 0x3
 1216 0133 FE040000 		.4byte	.LASF23
 1217 0137 05       		.byte	0x5
 1218 0138 10       		.byte	0x10
 1219 0139 E4000000 		.4byte	0xe4
 1220 013d 0A       		.uleb128 0xa
 1221 013e 14       		.byte	0x14
 1222 013f 06       		.byte	0x6
 1223 0140 13       		.byte	0x13
 1224 0141 82010000 		.4byte	0x182
 1225 0145 09       		.uleb128 0x9
 1226 0146 22030000 		.4byte	.LASF24
 1227 014a 06       		.byte	0x6
 1228 014b 14       		.byte	0x14
 1229 014c B1000000 		.4byte	0xb1
 1230 0150 00       		.byte	0
 1231 0151 09       		.uleb128 0x9
 1232 0152 52030000 		.4byte	.LASF25
 1233 0156 06       		.byte	0x6
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 27


 1234 0157 15       		.byte	0x15
 1235 0158 B1000000 		.4byte	0xb1
 1236 015c 04       		.byte	0x4
 1237 015d 09       		.uleb128 0x9
 1238 015e C6010000 		.4byte	.LASF26
 1239 0162 06       		.byte	0x6
 1240 0163 16       		.byte	0x16
 1241 0164 B1000000 		.4byte	0xb1
 1242 0168 08       		.byte	0x8
 1243 0169 09       		.uleb128 0x9
 1244 016a 7F040000 		.4byte	.LASF27
 1245 016e 06       		.byte	0x6
 1246 016f 17       		.byte	0x17
 1247 0170 B1000000 		.4byte	0xb1
 1248 0174 0C       		.byte	0xc
 1249 0175 09       		.uleb128 0x9
 1250 0176 59050000 		.4byte	.LASF28
 1251 017a 06       		.byte	0x6
 1252 017b 18       		.byte	0x18
 1253 017c 81000000 		.4byte	0x81
 1254 0180 10       		.byte	0x10
 1255 0181 00       		.byte	0
 1256 0182 03       		.uleb128 0x3
 1257 0183 B6030000 		.4byte	.LASF29
 1258 0187 06       		.byte	0x6
 1259 0188 19       		.byte	0x19
 1260 0189 3D010000 		.4byte	0x13d
 1261 018d 0A       		.uleb128 0xa
 1262 018e 10       		.byte	0x10
 1263 018f 06       		.byte	0x6
 1264 0190 1B       		.byte	0x1b
 1265 0191 C6010000 		.4byte	0x1c6
 1266 0195 09       		.uleb128 0x9
 1267 0196 E0020000 		.4byte	.LASF30
 1268 019a 06       		.byte	0x6
 1269 019b 1C       		.byte	0x1c
 1270 019c B1000000 		.4byte	0xb1
 1271 01a0 00       		.byte	0
 1272 01a1 09       		.uleb128 0x9
 1273 01a2 39020000 		.4byte	.LASF31
 1274 01a6 06       		.byte	0x6
 1275 01a7 1D       		.byte	0x1d
 1276 01a8 B1000000 		.4byte	0xb1
 1277 01ac 04       		.byte	0x4
 1278 01ad 09       		.uleb128 0x9
 1279 01ae 48050000 		.4byte	.LASF32
 1280 01b2 06       		.byte	0x6
 1281 01b3 1E       		.byte	0x1e
 1282 01b4 B1000000 		.4byte	0xb1
 1283 01b8 08       		.byte	0x8
 1284 01b9 09       		.uleb128 0x9
 1285 01ba 05050000 		.4byte	.LASF33
 1286 01be 06       		.byte	0x6
 1287 01bf 1F       		.byte	0x1f
 1288 01c0 B1000000 		.4byte	0xb1
 1289 01c4 0C       		.byte	0xc
 1290 01c5 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 28


 1291 01c6 03       		.uleb128 0x3
 1292 01c7 D6060000 		.4byte	.LASF34
 1293 01cb 06       		.byte	0x6
 1294 01cc 20       		.byte	0x20
 1295 01cd 8D010000 		.4byte	0x18d
 1296 01d1 0A       		.uleb128 0xa
 1297 01d2 2C       		.byte	0x2c
 1298 01d3 07       		.byte	0x7
 1299 01d4 14       		.byte	0x14
 1300 01d5 FE010000 		.4byte	0x1fe
 1301 01d9 0B       		.uleb128 0xb
 1302 01da 6B657900 		.ascii	"key\000"
 1303 01de 07       		.byte	0x7
 1304 01df 15       		.byte	0x15
 1305 01e0 FE010000 		.4byte	0x1fe
 1306 01e4 00       		.byte	0
 1307 01e5 09       		.uleb128 0x9
 1308 01e6 B7020000 		.4byte	.LASF35
 1309 01ea 07       		.byte	0x7
 1310 01eb 16       		.byte	0x16
 1311 01ec FE010000 		.4byte	0x1fe
 1312 01f0 14       		.byte	0x14
 1313 01f1 09       		.uleb128 0x9
 1314 01f2 57040000 		.4byte	.LASF36
 1315 01f6 07       		.byte	0x7
 1316 01f7 17       		.byte	0x17
 1317 01f8 A5000000 		.4byte	0xa5
 1318 01fc 28       		.byte	0x28
 1319 01fd 00       		.byte	0
 1320 01fe 06       		.uleb128 0x6
 1321 01ff BF000000 		.4byte	0xbf
 1322 0203 0E020000 		.4byte	0x20e
 1323 0207 07       		.uleb128 0x7
 1324 0208 CD000000 		.4byte	0xcd
 1325 020c 13       		.byte	0x13
 1326 020d 00       		.byte	0
 1327 020e 03       		.uleb128 0x3
 1328 020f 04030000 		.4byte	.LASF37
 1329 0213 07       		.byte	0x7
 1330 0214 19       		.byte	0x19
 1331 0215 D1010000 		.4byte	0x1d1
 1332 0219 0A       		.uleb128 0xa
 1333 021a 3C       		.byte	0x3c
 1334 021b 08       		.byte	0x8
 1335 021c 36       		.byte	0x36
 1336 021d 46020000 		.4byte	0x246
 1337 0221 09       		.uleb128 0x9
 1338 0222 FA050000 		.4byte	.LASF38
 1339 0226 08       		.byte	0x8
 1340 0227 37       		.byte	0x37
 1341 0228 FE010000 		.4byte	0x1fe
 1342 022c 00       		.byte	0
 1343 022d 09       		.uleb128 0x9
 1344 022e 85020000 		.4byte	.LASF39
 1345 0232 08       		.byte	0x8
 1346 0233 38       		.byte	0x38
 1347 0234 FE010000 		.4byte	0x1fe
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 29


 1348 0238 14       		.byte	0x14
 1349 0239 09       		.uleb128 0x9
 1350 023a 2E050000 		.4byte	.LASF40
 1351 023e 08       		.byte	0x8
 1352 023f 39       		.byte	0x39
 1353 0240 FE010000 		.4byte	0x1fe
 1354 0244 28       		.byte	0x28
 1355 0245 00       		.byte	0
 1356 0246 03       		.uleb128 0x3
 1357 0247 DD010000 		.4byte	.LASF41
 1358 024b 08       		.byte	0x8
 1359 024c 3B       		.byte	0x3b
 1360 024d 19020000 		.4byte	0x219
 1361 0251 0A       		.uleb128 0xa
 1362 0252 20       		.byte	0x20
 1363 0253 08       		.byte	0x8
 1364 0254 3D       		.byte	0x3d
 1365 0255 BA020000 		.4byte	0x2ba
 1366 0259 09       		.uleb128 0x9
 1367 025a 17020000 		.4byte	.LASF42
 1368 025e 08       		.byte	0x8
 1369 025f 3E       		.byte	0x3e
 1370 0260 68000000 		.4byte	0x68
 1371 0264 00       		.byte	0
 1372 0265 0B       		.uleb128 0xb
 1373 0266 62657200 		.ascii	"ber\000"
 1374 026a 08       		.byte	0x8
 1375 026b 3F       		.byte	0x3f
 1376 026c 68000000 		.4byte	0x68
 1377 0270 04       		.byte	0x4
 1378 0271 09       		.uleb128 0x9
 1379 0272 14050000 		.4byte	.LASF43
 1380 0276 08       		.byte	0x8
 1381 0277 40       		.byte	0x40
 1382 0278 68000000 		.4byte	0x68
 1383 027c 08       		.byte	0x8
 1384 027d 09       		.uleb128 0x9
 1385 027e 90010000 		.4byte	.LASF44
 1386 0282 08       		.byte	0x8
 1387 0283 41       		.byte	0x41
 1388 0284 68000000 		.4byte	0x68
 1389 0288 0C       		.byte	0xc
 1390 0289 09       		.uleb128 0x9
 1391 028a E8040000 		.4byte	.LASF45
 1392 028e 08       		.byte	0x8
 1393 028f 42       		.byte	0x42
 1394 0290 68000000 		.4byte	0x68
 1395 0294 10       		.byte	0x10
 1396 0295 09       		.uleb128 0x9
 1397 0296 E3040000 		.4byte	.LASF46
 1398 029a 08       		.byte	0x8
 1399 029b 43       		.byte	0x43
 1400 029c 68000000 		.4byte	0x68
 1401 02a0 14       		.byte	0x14
 1402 02a1 09       		.uleb128 0x9
 1403 02a2 A3010000 		.4byte	.LASF47
 1404 02a6 08       		.byte	0x8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 30


 1405 02a7 44       		.byte	0x44
 1406 02a8 68000000 		.4byte	0x68
 1407 02ac 18       		.byte	0x18
 1408 02ad 09       		.uleb128 0x9
 1409 02ae 76030000 		.4byte	.LASF48
 1410 02b2 08       		.byte	0x8
 1411 02b3 45       		.byte	0x45
 1412 02b4 68000000 		.4byte	0x68
 1413 02b8 1C       		.byte	0x1c
 1414 02b9 00       		.byte	0
 1415 02ba 03       		.uleb128 0x3
 1416 02bb 3A050000 		.4byte	.LASF49
 1417 02bf 08       		.byte	0x8
 1418 02c0 47       		.byte	0x47
 1419 02c1 51020000 		.4byte	0x251
 1420 02c5 0A       		.uleb128 0xa
 1421 02c6 09       		.byte	0x9
 1422 02c7 08       		.byte	0x8
 1423 02c8 53       		.byte	0x53
 1424 02c9 3A030000 		.4byte	0x33a
 1425 02cd 09       		.uleb128 0x9
 1426 02ce 67020000 		.4byte	.LASF50
 1427 02d2 08       		.byte	0x8
 1428 02d3 55       		.byte	0x55
 1429 02d4 81000000 		.4byte	0x81
 1430 02d8 00       		.byte	0
 1431 02d9 09       		.uleb128 0x9
 1432 02da CD060000 		.4byte	.LASF51
 1433 02de 08       		.byte	0x8
 1434 02df 57       		.byte	0x57
 1435 02e0 3A030000 		.4byte	0x33a
 1436 02e4 01       		.byte	0x1
 1437 02e5 09       		.uleb128 0x9
 1438 02e6 D3050000 		.4byte	.LASF52
 1439 02ea 08       		.byte	0x8
 1440 02eb 59       		.byte	0x59
 1441 02ec 81000000 		.4byte	0x81
 1442 02f0 02       		.byte	0x2
 1443 02f1 09       		.uleb128 0x9
 1444 02f2 ED040000 		.4byte	.LASF53
 1445 02f6 08       		.byte	0x8
 1446 02f7 5B       		.byte	0x5b
 1447 02f8 81000000 		.4byte	0x81
 1448 02fc 03       		.byte	0x3
 1449 02fd 09       		.uleb128 0x9
 1450 02fe AB020000 		.4byte	.LASF54
 1451 0302 08       		.byte	0x8
 1452 0303 5E       		.byte	0x5e
 1453 0304 81000000 		.4byte	0x81
 1454 0308 04       		.byte	0x4
 1455 0309 09       		.uleb128 0x9
 1456 030a 8D060000 		.4byte	.LASF55
 1457 030e 08       		.byte	0x8
 1458 030f 63       		.byte	0x63
 1459 0310 81000000 		.4byte	0x81
 1460 0314 05       		.byte	0x5
 1461 0315 09       		.uleb128 0x9
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 31


 1462 0316 70050000 		.4byte	.LASF56
 1463 031a 08       		.byte	0x8
 1464 031b 65       		.byte	0x65
 1465 031c 81000000 		.4byte	0x81
 1466 0320 06       		.byte	0x6
 1467 0321 09       		.uleb128 0x9
 1468 0322 0C060000 		.4byte	.LASF57
 1469 0326 08       		.byte	0x8
 1470 0327 66       		.byte	0x66
 1471 0328 81000000 		.4byte	0x81
 1472 032c 07       		.byte	0x7
 1473 032d 09       		.uleb128 0x9
 1474 032e 4D060000 		.4byte	.LASF58
 1475 0332 08       		.byte	0x8
 1476 0333 67       		.byte	0x67
 1477 0334 81000000 		.4byte	0x81
 1478 0338 08       		.byte	0x8
 1479 0339 00       		.byte	0
 1480 033a 02       		.uleb128 0x2
 1481 033b 01       		.byte	0x1
 1482 033c 02       		.byte	0x2
 1483 033d A2040000 		.4byte	.LASF59
 1484 0341 03       		.uleb128 0x3
 1485 0342 13010000 		.4byte	.LASF60
 1486 0346 08       		.byte	0x8
 1487 0347 69       		.byte	0x69
 1488 0348 C5020000 		.4byte	0x2c5
 1489 034c 0A       		.uleb128 0xa
 1490 034d 06       		.byte	0x6
 1491 034e 09       		.byte	0x9
 1492 034f 30       		.byte	0x30
 1493 0350 85030000 		.4byte	0x385
 1494 0354 09       		.uleb128 0x9
 1495 0355 8E020000 		.4byte	.LASF61
 1496 0359 09       		.byte	0x9
 1497 035a 32       		.byte	0x32
 1498 035b 8D000000 		.4byte	0x8d
 1499 035f 00       		.byte	0
 1500 0360 09       		.uleb128 0x9
 1501 0361 1D020000 		.4byte	.LASF62
 1502 0365 09       		.byte	0x9
 1503 0366 33       		.byte	0x33
 1504 0367 99000000 		.4byte	0x99
 1505 036b 02       		.byte	0x2
 1506 036c 09       		.uleb128 0x9
 1507 036d BF060000 		.4byte	.LASF63
 1508 0371 09       		.byte	0x9
 1509 0372 34       		.byte	0x34
 1510 0373 81000000 		.4byte	0x81
 1511 0377 04       		.byte	0x4
 1512 0378 09       		.uleb128 0x9
 1513 0379 56000000 		.4byte	.LASF64
 1514 037d 09       		.byte	0x9
 1515 037e 35       		.byte	0x35
 1516 037f 81000000 		.4byte	0x81
 1517 0383 05       		.byte	0x5
 1518 0384 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 32


 1519 0385 03       		.uleb128 0x3
 1520 0386 33020000 		.4byte	.LASF65
 1521 038a 09       		.byte	0x9
 1522 038b 38       		.byte	0x38
 1523 038c 90030000 		.4byte	0x390
 1524 0390 0C       		.uleb128 0xc
 1525 0391 4C030000 		.4byte	0x34c
 1526 0395 0A       		.uleb128 0xa
 1527 0396 1C       		.byte	0x1c
 1528 0397 09       		.byte	0x9
 1529 0398 3B       		.byte	0x3b
 1530 0399 B6030000 		.4byte	0x3b6
 1531 039d 09       		.uleb128 0x9
 1532 039e 3F030000 		.4byte	.LASF66
 1533 03a2 09       		.byte	0x9
 1534 03a3 3D       		.byte	0x3d
 1535 03a4 B6030000 		.4byte	0x3b6
 1536 03a8 00       		.byte	0
 1537 03a9 09       		.uleb128 0x9
 1538 03aa 77020000 		.4byte	.LASF67
 1539 03ae 09       		.byte	0x9
 1540 03af 3E       		.byte	0x3e
 1541 03b0 D4000000 		.4byte	0xd4
 1542 03b4 04       		.byte	0x4
 1543 03b5 00       		.byte	0
 1544 03b6 0D       		.uleb128 0xd
 1545 03b7 04       		.byte	0x4
 1546 03b8 46020000 		.4byte	0x246
 1547 03bc 03       		.uleb128 0x3
 1548 03bd E0030000 		.4byte	.LASF68
 1549 03c1 09       		.byte	0x9
 1550 03c2 40       		.byte	0x40
 1551 03c3 95030000 		.4byte	0x395
 1552 03c7 0A       		.uleb128 0xa
 1553 03c8 68       		.byte	0x68
 1554 03c9 09       		.byte	0x9
 1555 03ca 46       		.byte	0x46
 1556 03cb E8030000 		.4byte	0x3e8
 1557 03cf 09       		.uleb128 0x9
 1558 03d0 4A030000 		.4byte	.LASF69
 1559 03d4 09       		.byte	0x9
 1560 03d5 4B       		.byte	0x4b
 1561 03d6 E8030000 		.4byte	0x3e8
 1562 03da 00       		.byte	0
 1563 03db 09       		.uleb128 0x9
 1564 03dc 37030000 		.4byte	.LASF70
 1565 03e0 09       		.byte	0x9
 1566 03e1 4C       		.byte	0x4c
 1567 03e2 68000000 		.4byte	0x68
 1568 03e6 64       		.byte	0x64
 1569 03e7 00       		.byte	0
 1570 03e8 06       		.uleb128 0x6
 1571 03e9 BF000000 		.4byte	0xbf
 1572 03ed F8030000 		.4byte	0x3f8
 1573 03f1 07       		.uleb128 0x7
 1574 03f2 CD000000 		.4byte	0xcd
 1575 03f6 63       		.byte	0x63
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 33


 1576 03f7 00       		.byte	0
 1577 03f8 03       		.uleb128 0x3
 1578 03f9 9A060000 		.4byte	.LASF71
 1579 03fd 09       		.byte	0x9
 1580 03fe 52       		.byte	0x52
 1581 03ff C7030000 		.4byte	0x3c7
 1582 0403 0E       		.uleb128 0xe
 1583 0404 29060000 		.4byte	.LASF76
 1584 0408 01       		.byte	0x1
 1585 0409 06       		.byte	0x6
 1586 040a 82010000 		.4byte	0x182
 1587 040e 00000000 		.4byte	.LFB64
 1588 0412 34010000 		.4byte	.LFE64-.LFB64
 1589 0416 01       		.uleb128 0x1
 1590 0417 9C       		.byte	0x9c
 1591 0418 8D040000 		.4byte	0x48d
 1592 041c 0F       		.uleb128 0xf
 1593 041d 2A010000 		.4byte	.LASF72
 1594 0421 01       		.byte	0x1
 1595 0422 08       		.byte	0x8
 1596 0423 82010000 		.4byte	0x182
 1597 0427 02       		.uleb128 0x2
 1598 0428 91       		.byte	0x91
 1599 0429 54       		.sleb128 -44
 1600 042a 0F       		.uleb128 0xf
 1601 042b 05020000 		.4byte	.LASF73
 1602 042f 01       		.byte	0x1
 1603 0430 15       		.byte	0x15
 1604 0431 8D040000 		.4byte	0x48d
 1605 0435 03       		.uleb128 0x3
 1606 0436 91       		.byte	0x91
 1607 0437 BC7F     		.sleb128 -68
 1608 0439 0F       		.uleb128 0xf
 1609 043a E0050000 		.4byte	.LASF74
 1610 043e 01       		.byte	0x1
 1611 043f 31       		.byte	0x31
 1612 0440 B1000000 		.4byte	0xb1
 1613 0444 02       		.uleb128 0x2
 1614 0445 91       		.byte	0x91
 1615 0446 68       		.sleb128 -24
 1616 0447 10       		.uleb128 0x10
 1617 0448 26000000 		.4byte	.LBB2
 1618 044c 7A000000 		.4byte	.LBE2-.LBB2
 1619 0450 11       		.uleb128 0x11
 1620 0451 6300     		.ascii	"c\000"
 1621 0453 01       		.byte	0x1
 1622 0454 17       		.byte	0x17
 1623 0455 81000000 		.4byte	0x81
 1624 0459 02       		.uleb128 0x2
 1625 045a 91       		.byte	0x91
 1626 045b 6F       		.sleb128 -17
 1627 045c 10       		.uleb128 0x10
 1628 045d 2E000000 		.4byte	.LBB3
 1629 0461 60000000 		.4byte	.LBE3-.LBB3
 1630 0465 0F       		.uleb128 0xf
 1631 0466 19050000 		.4byte	.LASF75
 1632 046a 01       		.byte	0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 34


 1633 046b 1A       		.byte	0x1a
 1634 046c 9D040000 		.4byte	0x49d
 1635 0470 03       		.uleb128 0x3
 1636 0471 91       		.byte	0x91
 1637 0472 907F     		.sleb128 -112
 1638 0474 10       		.uleb128 0x10
 1639 0475 38000000 		.4byte	.LBB4
 1640 0479 30000000 		.4byte	.LBE4-.LBB4
 1641 047d 11       		.uleb128 0x11
 1642 047e 6900     		.ascii	"i\000"
 1643 0480 01       		.byte	0x1
 1644 0481 1E       		.byte	0x1e
 1645 0482 8D000000 		.4byte	0x8d
 1646 0486 02       		.uleb128 0x2
 1647 0487 91       		.byte	0x91
 1648 0488 6C       		.sleb128 -20
 1649 0489 00       		.byte	0
 1650 048a 00       		.byte	0
 1651 048b 00       		.byte	0
 1652 048c 00       		.byte	0
 1653 048d 06       		.uleb128 0x6
 1654 048e B1000000 		.4byte	0xb1
 1655 0492 9D040000 		.4byte	0x49d
 1656 0496 07       		.uleb128 0x7
 1657 0497 CD000000 		.4byte	0xcd
 1658 049b 05       		.byte	0x5
 1659 049c 00       		.byte	0
 1660 049d 06       		.uleb128 0x6
 1661 049e A5000000 		.4byte	0xa5
 1662 04a2 AD040000 		.4byte	0x4ad
 1663 04a6 07       		.uleb128 0x7
 1664 04a7 CD000000 		.4byte	0xcd
 1665 04ab 0A       		.byte	0xa
 1666 04ac 00       		.byte	0
 1667 04ad 0E       		.uleb128 0xe
 1668 04ae BD020000 		.4byte	.LASF77
 1669 04b2 01       		.byte	0x1
 1670 04b3 3E       		.byte	0x3e
 1671 04b4 C6010000 		.4byte	0x1c6
 1672 04b8 00000000 		.4byte	.LFB65
 1673 04bc 98010000 		.4byte	.LFE65-.LFB65
 1674 04c0 01       		.uleb128 0x1
 1675 04c1 9C       		.byte	0x9c
 1676 04c2 22050000 		.4byte	0x522
 1677 04c6 0F       		.uleb128 0xf
 1678 04c7 76040000 		.4byte	.LASF78
 1679 04cb 01       		.byte	0x1
 1680 04cc 40       		.byte	0x40
 1681 04cd C6010000 		.4byte	0x1c6
 1682 04d1 02       		.uleb128 0x2
 1683 04d2 91       		.byte	0x91
 1684 04d3 5C       		.sleb128 -36
 1685 04d4 0F       		.uleb128 0xf
 1686 04d5 05020000 		.4byte	.LASF73
 1687 04d9 01       		.byte	0x1
 1688 04da 41       		.byte	0x41
 1689 04db 8D040000 		.4byte	0x48d
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 35


 1690 04df 02       		.uleb128 0x2
 1691 04e0 91       		.byte	0x91
 1692 04e1 44       		.sleb128 -60
 1693 04e2 0F       		.uleb128 0xf
 1694 04e3 19050000 		.4byte	.LASF75
 1695 04e7 01       		.byte	0x1
 1696 04e8 42       		.byte	0x42
 1697 04e9 9D040000 		.4byte	0x49d
 1698 04ed 03       		.uleb128 0x3
 1699 04ee 91       		.byte	0x91
 1700 04ef 987F     		.sleb128 -104
 1701 04f1 12       		.uleb128 0x12
 1702 04f2 1A000000 		.4byte	.LBB5
 1703 04f6 30000000 		.4byte	.LBE5-.LBB5
 1704 04fa 0B050000 		.4byte	0x50b
 1705 04fe 11       		.uleb128 0x11
 1706 04ff 6900     		.ascii	"i\000"
 1707 0501 01       		.byte	0x1
 1708 0502 4C       		.byte	0x4c
 1709 0503 8D000000 		.4byte	0x8d
 1710 0507 02       		.uleb128 0x2
 1711 0508 91       		.byte	0x91
 1712 0509 6E       		.sleb128 -18
 1713 050a 00       		.byte	0
 1714 050b 10       		.uleb128 0x10
 1715 050c 8E000000 		.4byte	.LBB6
 1716 0510 30000000 		.4byte	.LBE6-.LBB6
 1717 0514 11       		.uleb128 0x11
 1718 0515 6900     		.ascii	"i\000"
 1719 0517 01       		.byte	0x1
 1720 0518 59       		.byte	0x59
 1721 0519 8D000000 		.4byte	0x8d
 1722 051d 02       		.uleb128 0x2
 1723 051e 91       		.byte	0x91
 1724 051f 6C       		.sleb128 -20
 1725 0520 00       		.byte	0
 1726 0521 00       		.byte	0
 1727 0522 13       		.uleb128 0x13
 1728 0523 60030000 		.4byte	.LASF81
 1729 0527 01       		.byte	0x1
 1730 0528 74       		.byte	0x74
 1731 0529 C6010000 		.4byte	0x1c6
 1732 052d 00000000 		.4byte	.LFB66
 1733 0531 C4000000 		.4byte	.LFE66-.LFB66
 1734 0535 01       		.uleb128 0x1
 1735 0536 9C       		.byte	0x9c
 1736 0537 58050000 		.4byte	0x558
 1737 053b 14       		.uleb128 0x14
 1738 053c 2A010000 		.4byte	.LASF72
 1739 0540 01       		.byte	0x1
 1740 0541 74       		.byte	0x74
 1741 0542 82010000 		.4byte	0x182
 1742 0546 02       		.uleb128 0x2
 1743 0547 91       		.byte	0x91
 1744 0548 74       		.sleb128 -12
 1745 0549 0F       		.uleb128 0xf
 1746 054a 76040000 		.4byte	.LASF78
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 36


 1747 054e 01       		.byte	0x1
 1748 054f 76       		.byte	0x76
 1749 0550 C6010000 		.4byte	0x1c6
 1750 0554 02       		.uleb128 0x2
 1751 0555 91       		.byte	0x91
 1752 0556 50       		.sleb128 -48
 1753 0557 00       		.byte	0
 1754 0558 15       		.uleb128 0x15
 1755 0559 4F000000 		.4byte	.LASF79
 1756 055d 01       		.byte	0x1
 1757 055e 86       		.byte	0x86
 1758 055f 00000000 		.4byte	.LFB67
 1759 0563 74000000 		.4byte	.LFE67-.LFB67
 1760 0567 01       		.uleb128 0x1
 1761 0568 9C       		.byte	0x9c
 1762 0569 9E050000 		.4byte	0x59e
 1763 056d 16       		.uleb128 0x16
 1764 056e 6100     		.ascii	"a\000"
 1765 0570 01       		.byte	0x1
 1766 0571 86       		.byte	0x86
 1767 0572 9E050000 		.4byte	0x59e
 1768 0576 02       		.uleb128 0x2
 1769 0577 91       		.byte	0x91
 1770 0578 6C       		.sleb128 -20
 1771 0579 16       		.uleb128 0x16
 1772 057a 6E00     		.ascii	"n\000"
 1773 057c 01       		.byte	0x1
 1774 057d 86       		.byte	0x86
 1775 057e A5000000 		.4byte	0xa5
 1776 0582 02       		.uleb128 0x2
 1777 0583 91       		.byte	0x91
 1778 0584 68       		.sleb128 -24
 1779 0585 11       		.uleb128 0x11
 1780 0586 6900     		.ascii	"i\000"
 1781 0588 01       		.byte	0x1
 1782 0589 87       		.byte	0x87
 1783 058a A5000000 		.4byte	0xa5
 1784 058e 02       		.uleb128 0x2
 1785 058f 91       		.byte	0x91
 1786 0590 74       		.sleb128 -12
 1787 0591 11       		.uleb128 0x11
 1788 0592 6A00     		.ascii	"j\000"
 1789 0594 01       		.byte	0x1
 1790 0595 87       		.byte	0x87
 1791 0596 A5000000 		.4byte	0xa5
 1792 059a 02       		.uleb128 0x2
 1793 059b 91       		.byte	0x91
 1794 059c 70       		.sleb128 -16
 1795 059d 00       		.byte	0
 1796 059e 0D       		.uleb128 0xd
 1797 059f 04       		.byte	0x4
 1798 05a0 A5000000 		.4byte	0xa5
 1799 05a4 17       		.uleb128 0x17
 1800 05a5 F7040000 		.4byte	.LASF80
 1801 05a9 01       		.byte	0x1
 1802 05aa 92       		.byte	0x92
 1803 05ab 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 37


 1804 05af 28000000 		.4byte	.LFE68-.LFB68
 1805 05b3 01       		.uleb128 0x1
 1806 05b4 9C       		.byte	0x9c
 1807 05b5 DE050000 		.4byte	0x5de
 1808 05b9 16       		.uleb128 0x16
 1809 05ba 7000     		.ascii	"p\000"
 1810 05bc 01       		.byte	0x1
 1811 05bd 92       		.byte	0x92
 1812 05be 9E050000 		.4byte	0x59e
 1813 05c2 02       		.uleb128 0x2
 1814 05c3 91       		.byte	0x91
 1815 05c4 6C       		.sleb128 -20
 1816 05c5 16       		.uleb128 0x16
 1817 05c6 7100     		.ascii	"q\000"
 1818 05c8 01       		.byte	0x1
 1819 05c9 92       		.byte	0x92
 1820 05ca 9E050000 		.4byte	0x59e
 1821 05ce 02       		.uleb128 0x2
 1822 05cf 91       		.byte	0x91
 1823 05d0 68       		.sleb128 -24
 1824 05d1 11       		.uleb128 0x11
 1825 05d2 7400     		.ascii	"t\000"
 1826 05d4 01       		.byte	0x1
 1827 05d5 93       		.byte	0x93
 1828 05d6 A5000000 		.4byte	0xa5
 1829 05da 02       		.uleb128 0x2
 1830 05db 91       		.byte	0x91
 1831 05dc 74       		.sleb128 -12
 1832 05dd 00       		.byte	0
 1833 05de 13       		.uleb128 0x13
 1834 05df 9D020000 		.4byte	.LASF82
 1835 05e3 01       		.byte	0x1
 1836 05e4 9B       		.byte	0x9b
 1837 05e5 A5000000 		.4byte	0xa5
 1838 05e9 00000000 		.4byte	.LFB69
 1839 05ed 84000000 		.4byte	.LFE69-.LFB69
 1840 05f1 01       		.uleb128 0x1
 1841 05f2 9C       		.byte	0x9c
 1842 05f3 20060000 		.4byte	0x620
 1843 05f7 14       		.uleb128 0x14
 1844 05f8 71020000 		.4byte	.LASF83
 1845 05fc 01       		.byte	0x1
 1846 05fd 9B       		.byte	0x9b
 1847 05fe 9E050000 		.4byte	0x59e
 1848 0602 02       		.uleb128 0x2
 1849 0603 91       		.byte	0x91
 1850 0604 64       		.sleb128 -28
 1851 0605 16       		.uleb128 0x16
 1852 0606 6E00     		.ascii	"n\000"
 1853 0608 01       		.byte	0x1
 1854 0609 9B       		.byte	0x9b
 1855 060a A5000000 		.4byte	0xa5
 1856 060e 02       		.uleb128 0x2
 1857 060f 91       		.byte	0x91
 1858 0610 60       		.sleb128 -32
 1859 0611 0F       		.uleb128 0xf
 1860 0612 51010000 		.4byte	.LASF84
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 38


 1861 0616 01       		.byte	0x1
 1862 0617 9D       		.byte	0x9d
 1863 0618 A5000000 		.4byte	0xa5
 1864 061c 02       		.uleb128 0x2
 1865 061d 91       		.byte	0x91
 1866 061e 6C       		.sleb128 -20
 1867 061f 00       		.byte	0
 1868 0620 0E       		.uleb128 0xe
 1869 0621 EB030000 		.4byte	.LASF85
 1870 0625 01       		.byte	0x1
 1871 0626 AD       		.byte	0xad
 1872 0627 32010000 		.4byte	0x132
 1873 062b 00000000 		.4byte	.LFB70
 1874 062f BC000000 		.4byte	.LFE70-.LFB70
 1875 0633 01       		.uleb128 0x1
 1876 0634 9C       		.byte	0x9c
 1877 0635 58060000 		.4byte	0x658
 1878 0639 0F       		.uleb128 0xf
 1879 063a 32010000 		.4byte	.LASF86
 1880 063e 01       		.byte	0x1
 1881 063f AF       		.byte	0xaf
 1882 0640 32010000 		.4byte	0x132
 1883 0644 03       		.uleb128 0x3
 1884 0645 91       		.byte	0x91
 1885 0646 E47C     		.sleb128 -412
 1886 0648 0F       		.uleb128 0xf
 1887 0649 2A010000 		.4byte	.LASF72
 1888 064d 01       		.byte	0x1
 1889 064e B3       		.byte	0xb3
 1890 064f 82010000 		.4byte	0x182
 1891 0653 03       		.uleb128 0x3
 1892 0654 91       		.byte	0x91
 1893 0655 D07C     		.sleb128 -432
 1894 0657 00       		.byte	0
 1895 0658 0E       		.uleb128 0xe
 1896 0659 BE040000 		.4byte	.LASF87
 1897 065d 01       		.byte	0x1
 1898 065e C2       		.byte	0xc2
 1899 065f 32010000 		.4byte	0x132
 1900 0663 00000000 		.4byte	.LFB71
 1901 0667 04010000 		.4byte	.LFE71-.LFB71
 1902 066b 01       		.uleb128 0x1
 1903 066c 9C       		.byte	0x9c
 1904 066d 90060000 		.4byte	0x690
 1905 0671 0F       		.uleb128 0xf
 1906 0672 32010000 		.4byte	.LASF86
 1907 0676 01       		.byte	0x1
 1908 0677 C4       		.byte	0xc4
 1909 0678 32010000 		.4byte	0x132
 1910 067c 03       		.uleb128 0x3
 1911 067d 91       		.byte	0x91
 1912 067e E47C     		.sleb128 -412
 1913 0680 0F       		.uleb128 0xf
 1914 0681 76040000 		.4byte	.LASF78
 1915 0685 01       		.byte	0x1
 1916 0686 C8       		.byte	0xc8
 1917 0687 C6010000 		.4byte	0x1c6
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 39


 1918 068b 03       		.uleb128 0x3
 1919 068c 91       		.byte	0x91
 1920 068d D47C     		.sleb128 -428
 1921 068f 00       		.byte	0
 1922 0690 18       		.uleb128 0x18
 1923 0691 44010000 		.4byte	.LASF88
 1924 0695 0A       		.byte	0xa
 1925 0696 1207     		.2byte	0x712
 1926 0698 9C060000 		.4byte	0x69c
 1927 069c 0C       		.uleb128 0xc
 1928 069d 76000000 		.4byte	0x76
 1929 06a1 19       		.uleb128 0x19
 1930 06a2 82050000 		.4byte	.LASF89
 1931 06a6 0B       		.byte	0xb
 1932 06a7 25       		.byte	0x25
 1933 06a8 E8030000 		.4byte	0x3e8
 1934 06ac 05       		.uleb128 0x5
 1935 06ad 03       		.byte	0x3
 1936 06ae 00000000 		.4byte	level_sensor_inbox
 1937 06b2 19       		.uleb128 0x19
 1938 06b3 5F060000 		.4byte	.LASF90
 1939 06b7 0B       		.byte	0xb
 1940 06b8 27       		.byte	0x27
 1941 06b9 3A030000 		.4byte	0x33a
 1942 06bd 05       		.uleb128 0x5
 1943 06be 03       		.byte	0x3
 1944 06bf 00000000 		.4byte	level_sensor_enabled
 1945 06c3 19       		.uleb128 0x19
 1946 06c4 03070000 		.4byte	.LASF91
 1947 06c8 0C       		.byte	0xc
 1948 06c9 0F       		.byte	0xf
 1949 06ca E8030000 		.4byte	0x3e8
 1950 06ce 05       		.uleb128 0x5
 1951 06cf 03       		.byte	0x3
 1952 06d0 00000000 		.4byte	downstream_level_sensor_inbox
 1953 06d4 19       		.uleb128 0x19
 1954 06d5 C0030000 		.4byte	.LASF92
 1955 06d9 0C       		.byte	0xc
 1956 06da 11       		.byte	0x11
 1957 06db 3A030000 		.4byte	0x33a
 1958 06df 05       		.uleb128 0x5
 1959 06e0 03       		.byte	0x3
 1960 06e1 00000000 		.4byte	downstream_level_sensor_enabled
 1961 06e5 19       		.uleb128 0x19
 1962 06e6 3F060000 		.4byte	.LASF93
 1963 06ea 0D       		.byte	0xd
 1964 06eb 2D       		.byte	0x2d
 1965 06ec 81000000 		.4byte	0x81
 1966 06f0 05       		.uleb128 0x5
 1967 06f1 03       		.byte	0x3
 1968 06f2 00000000 		.4byte	valve_enabled
 1969 06f6 19       		.uleb128 0x19
 1970 06f7 B3060000 		.4byte	.LASF94
 1971 06fb 0D       		.byte	0xd
 1972 06fc 2E       		.byte	0x2e
 1973 06fd E8030000 		.4byte	0x3e8
 1974 0701 05       		.uleb128 0x5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 40


 1975 0702 03       		.byte	0x3
 1976 0703 00000000 		.4byte	valve_inbox
 1977 0707 19       		.uleb128 0x19
 1978 0708 3F000000 		.4byte	.LASF95
 1979 070c 07       		.byte	0x7
 1980 070d 11       		.byte	0x11
 1981 070e 3A030000 		.4byte	0x33a
 1982 0712 05       		.uleb128 0x5
 1983 0713 03       		.byte	0x3
 1984 0714 00000000 		.4byte	buffer_overflow
 1985 0718 19       		.uleb128 0x19
 1986 0719 F9030000 		.4byte	.LASF96
 1987 071d 07       		.byte	0x7
 1988 071e 22       		.byte	0x22
 1989 071f 8D000000 		.4byte	0x8d
 1990 0723 05       		.uleb128 0x5
 1991 0724 03       		.byte	0x3
 1992 0725 00000000 		.4byte	dataPointsInStack
 1993 0729 19       		.uleb128 0x19
 1994 072a 74060000 		.4byte	.LASF97
 1995 072e 07       		.byte	0x7
 1996 072f 23       		.byte	0x23
 1997 0730 8D000000 		.4byte	0x8d
 1998 0734 05       		.uleb128 0x5
 1999 0735 03       		.byte	0x3
 2000 0736 00000000 		.4byte	dataPointsInStackDesired
 2001 073a 06       		.uleb128 0x6
 2002 073b 0E020000 		.4byte	0x20e
 2003 073f 4A070000 		.4byte	0x74a
 2004 0743 07       		.uleb128 0x7
 2005 0744 CD000000 		.4byte	0xcd
 2006 0748 95       		.byte	0x95
 2007 0749 00       		.byte	0
 2008 074a 19       		.uleb128 0x19
 2009 074b 32030000 		.4byte	.LASF98
 2010 074f 07       		.byte	0x7
 2011 0750 24       		.byte	0x24
 2012 0751 3A070000 		.4byte	0x73a
 2013 0755 05       		.uleb128 0x5
 2014 0756 03       		.byte	0x3
 2015 0757 00000000 		.4byte	data
 2016 075b 19       		.uleb128 0x19
 2017 075c 21070000 		.4byte	.LASF99
 2018 0760 08       		.byte	0x8
 2019 0761 20       		.byte	0x20
 2020 0762 81000000 		.4byte	0x81
 2021 0766 05       		.uleb128 0x5
 2022 0767 03       		.byte	0x3
 2023 0768 00000000 		.4byte	modem_state
 2024 076c 19       		.uleb128 0x19
 2025 076d 9F030000 		.4byte	.LASF100
 2026 0771 08       		.byte	0x8
 2027 0772 6C       		.byte	0x6c
 2028 0773 A5000000 		.4byte	0xa5
 2029 0777 05       		.uleb128 0x5
 2030 0778 03       		.byte	0x3
 2031 0779 00000000 		.4byte	modem_start_time_stamp
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 41


 2032 077d 19       		.uleb128 0x19
 2033 077e 3F030000 		.4byte	.LASF66
 2034 0782 08       		.byte	0x8
 2035 0783 6D       		.byte	0x6d
 2036 0784 46020000 		.4byte	0x246
 2037 0788 05       		.uleb128 0x5
 2038 0789 03       		.byte	0x3
 2039 078a 00000000 		.4byte	modem_info
 2040 078e 19       		.uleb128 0x19
 2041 078f 6A010000 		.4byte	.LASF101
 2042 0793 08       		.byte	0x8
 2043 0794 6E       		.byte	0x6e
 2044 0795 BA020000 		.4byte	0x2ba
 2045 0799 05       		.uleb128 0x5
 2046 079a 03       		.byte	0x3
 2047 079b 00000000 		.4byte	modem_stats
 2048 079f 19       		.uleb128 0x19
 2049 07a0 61040000 		.4byte	.LASF102
 2050 07a4 08       		.byte	0x8
 2051 07a5 6F       		.byte	0x6f
 2052 07a6 41030000 		.4byte	0x341
 2053 07aa 05       		.uleb128 0x5
 2054 07ab 03       		.byte	0x3
 2055 07ac 00000000 		.4byte	updatable_parameters
 2056 07b0 19       		.uleb128 0x19
 2057 07b1 F4020000 		.4byte	.LASF103
 2058 07b5 0E       		.byte	0xe
 2059 07b6 07       		.byte	0x7
 2060 07b7 81000000 		.4byte	0x81
 2061 07bb 05       		.uleb128 0x5
 2062 07bc 03       		.byte	0x3
 2063 07bd 00000000 		.4byte	App_LED_enabled
 2064 07c1 19       		.uleb128 0x19
 2065 07c2 F5060000 		.4byte	.LASF104
 2066 07c6 0E       		.byte	0xe
 2067 07c7 08       		.byte	0x8
 2068 07c8 E8030000 		.4byte	0x3e8
 2069 07cc 05       		.uleb128 0x5
 2070 07cd 03       		.byte	0x3
 2071 07ce 00000000 		.4byte	app_led_inbox
 2072 07d2 06       		.uleb128 0x6
 2073 07d3 BF000000 		.4byte	0xbf
 2074 07d7 E3070000 		.4byte	0x7e3
 2075 07db 1A       		.uleb128 0x1a
 2076 07dc CD000000 		.4byte	0xcd
 2077 07e0 0F27     		.2byte	0x270f
 2078 07e2 00       		.byte	0
 2079 07e3 19       		.uleb128 0x19
 2080 07e4 E1060000 		.4byte	.LASF105
 2081 07e8 09       		.byte	0x9
 2082 07e9 1A       		.byte	0x1a
 2083 07ea D2070000 		.4byte	0x7d2
 2084 07ee 05       		.uleb128 0x5
 2085 07ef 03       		.byte	0x3
 2086 07f0 00000000 		.4byte	http_request
 2087 07f4 19       		.uleb128 0x19
 2088 07f5 A9060000 		.4byte	.LASF106
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 42


 2089 07f9 09       		.byte	0x9
 2090 07fa 1B       		.byte	0x1b
 2091 07fb D2070000 		.4byte	0x7d2
 2092 07ff 05       		.uleb128 0x5
 2093 0800 03       		.byte	0x3
 2094 0801 00000000 		.4byte	http_body
 2095 0805 06       		.uleb128 0x6
 2096 0806 BF000000 		.4byte	0xbf
 2097 080a 15080000 		.4byte	0x815
 2098 080e 07       		.uleb128 0x7
 2099 080f CD000000 		.4byte	0xcd
 2100 0813 C7       		.byte	0xc7
 2101 0814 00       		.byte	0
 2102 0815 19       		.uleb128 0x19
 2103 0816 BE050000 		.4byte	.LASF107
 2104 081a 09       		.byte	0x9
 2105 081b 1C       		.byte	0x1c
 2106 081c 05080000 		.4byte	0x805
 2107 0820 05       		.uleb128 0x5
 2108 0821 03       		.byte	0x3
 2109 0822 00000000 		.4byte	http_route
 2110 0826 19       		.uleb128 0x19
 2111 0827 22050000 		.4byte	.LASF108
 2112 082b 09       		.byte	0x9
 2113 082c 43       		.byte	0x43
 2114 082d BC030000 		.4byte	0x3bc
 2115 0831 05       		.uleb128 0x5
 2116 0832 03       		.byte	0x3
 2117 0833 00000000 		.4byte	system_info
 2118 0837 19       		.uleb128 0x19
 2119 0838 D3040000 		.4byte	.LASF109
 2120 083c 09       		.byte	0x9
 2121 083d 55       		.byte	0x55
 2122 083e F8030000 		.4byte	0x3f8
 2123 0842 05       		.uleb128 0x5
 2124 0843 03       		.byte	0x3
 2125 0844 00000000 		.4byte	system_settings
 2126 0848 19       		.uleb128 0x19
 2127 0849 37010000 		.4byte	.LASF110
 2128 084d 09       		.byte	0x9
 2129 084e 71       		.byte	0x71
 2130 084f 85030000 		.4byte	0x385
 2131 0853 05       		.uleb128 0x5
 2132 0854 03       		.byte	0x3
 2133 0855 00000000 		.4byte	alarmMeasure
 2134 0859 19       		.uleb128 0x19
 2135 085a 95010000 		.4byte	.LASF111
 2136 085e 09       		.byte	0x9
 2137 085f 72       		.byte	0x72
 2138 0860 81000000 		.4byte	0x81
 2139 0864 05       		.uleb128 0x5
 2140 0865 03       		.byte	0x3
 2141 0866 00000000 		.4byte	timeToMeasure
 2142 086a 19       		.uleb128 0x19
 2143 086b D6020000 		.4byte	.LASF112
 2144 086f 09       		.byte	0x9
 2145 0870 73       		.byte	0x73
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 43


 2146 0871 85030000 		.4byte	0x385
 2147 0875 05       		.uleb128 0x5
 2148 0876 03       		.byte	0x3
 2149 0877 00000000 		.4byte	alarmSync
 2150 087b 19       		.uleb128 0x19
 2151 087c BB010000 		.4byte	.LASF113
 2152 0880 09       		.byte	0x9
 2153 0881 74       		.byte	0x74
 2154 0882 81000000 		.4byte	0x81
 2155 0886 05       		.uleb128 0x5
 2156 0887 03       		.byte	0x3
 2157 0888 00000000 		.4byte	timeToSync
 2158 088c 19       		.uleb128 0x19
 2159 088d 40040000 		.4byte	.LASF114
 2160 0891 09       		.byte	0x9
 2161 0892 75       		.byte	0x75
 2162 0893 81000000 		.4byte	0x81
 2163 0897 05       		.uleb128 0x5
 2164 0898 03       		.byte	0x3
 2165 0899 00000000 		.4byte	timeToSycnRemoteParams
 2166 089d 1B       		.uleb128 0x1b
 2167 089e 68657900 		.ascii	"hey\000"
 2168 08a2 09       		.byte	0x9
 2169 08a3 76       		.byte	0x76
 2170 08a4 81000000 		.4byte	0x81
 2171 08a8 05       		.uleb128 0x5
 2172 08a9 03       		.byte	0x3
 2173 08aa 00000000 		.4byte	hey
 2174 08ae 19       		.uleb128 0x19
 2175 08af 93030000 		.4byte	.LASF115
 2176 08b3 09       		.byte	0x9
 2177 08b4 7A       		.byte	0x7a
 2178 08b5 85030000 		.4byte	0x385
 2179 08b9 05       		.uleb128 0x5
 2180 08ba 03       		.byte	0x3
 2181 08bb 00000000 		.4byte	alarmAppLED
 2182 08bf 19       		.uleb128 0x19
 2183 08c0 54020000 		.4byte	.LASF116
 2184 08c4 09       		.byte	0x9
 2185 08c5 7B       		.byte	0x7b
 2186 08c6 81000000 		.4byte	0x81
 2187 08ca 05       		.uleb128 0x5
 2188 08cb 03       		.byte	0x3
 2189 08cc 00000000 		.4byte	timeToAppLED
 2190 08d0 19       		.uleb128 0x19
 2191 08d1 5F050000 		.4byte	.LASF117
 2192 08d5 09       		.byte	0x9
 2193 08d6 7D       		.byte	0x7d
 2194 08d7 85030000 		.4byte	0x385
 2195 08db 05       		.uleb128 0x5
 2196 08dc 03       		.byte	0x3
 2197 08dd 00000000 		.4byte	alarmLevelSensor
 2198 08e1 19       		.uleb128 0x19
 2199 08e2 58010000 		.4byte	.LASF118
 2200 08e6 09       		.byte	0x9
 2201 08e7 7E       		.byte	0x7e
 2202 08e8 81000000 		.4byte	0x81
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 44


 2203 08ec 05       		.uleb128 0x5
 2204 08ed 03       		.byte	0x3
 2205 08ee 00000000 		.4byte	timetoLevelSensor
 2206 08f2 19       		.uleb128 0x19
 2207 08f3 EA010000 		.4byte	.LASF119
 2208 08f7 09       		.byte	0x9
 2209 08f8 80       		.byte	0x80
 2210 08f9 85030000 		.4byte	0x385
 2211 08fd 05       		.uleb128 0x5
 2212 08fe 03       		.byte	0x3
 2213 08ff 00000000 		.4byte	alarmDownstreamLevelSensor
 2214 0903 19       		.uleb128 0x19
 2215 0904 14040000 		.4byte	.LASF120
 2216 0908 09       		.byte	0x9
 2217 0909 81       		.byte	0x81
 2218 090a 81000000 		.4byte	0x81
 2219 090e 05       		.uleb128 0x5
 2220 090f 03       		.byte	0x3
 2221 0910 00000000 		.4byte	timetoDownstreamLevelSensor
 2222 0914 19       		.uleb128 0x19
 2223 0915 B3050000 		.4byte	.LASF121
 2224 0919 09       		.byte	0x9
 2225 091a 83       		.byte	0x83
 2226 091b 85030000 		.4byte	0x385
 2227 091f 05       		.uleb128 0x5
 2228 0920 03       		.byte	0x3
 2229 0921 00000000 		.4byte	alarmValve
 2230 0925 19       		.uleb128 0x19
 2231 0926 90040000 		.4byte	.LASF122
 2232 092a 09       		.byte	0x9
 2233 092b 84       		.byte	0x84
 2234 092c 81000000 		.4byte	0x81
 2235 0930 05       		.uleb128 0x5
 2236 0931 03       		.byte	0x3
 2237 0932 00000000 		.4byte	timeToValve
 2238 0936 00       		.byte	0
 2239              		.section	.debug_abbrev,"",%progbits
 2240              	.Ldebug_abbrev0:
 2241 0000 01       		.uleb128 0x1
 2242 0001 11       		.uleb128 0x11
 2243 0002 01       		.byte	0x1
 2244 0003 25       		.uleb128 0x25
 2245 0004 0E       		.uleb128 0xe
 2246 0005 13       		.uleb128 0x13
 2247 0006 0B       		.uleb128 0xb
 2248 0007 03       		.uleb128 0x3
 2249 0008 0E       		.uleb128 0xe
 2250 0009 1B       		.uleb128 0x1b
 2251 000a 0E       		.uleb128 0xe
 2252 000b 55       		.uleb128 0x55
 2253 000c 17       		.uleb128 0x17
 2254 000d 11       		.uleb128 0x11
 2255 000e 01       		.uleb128 0x1
 2256 000f 10       		.uleb128 0x10
 2257 0010 17       		.uleb128 0x17
 2258 0011 00       		.byte	0
 2259 0012 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 45


 2260 0013 02       		.uleb128 0x2
 2261 0014 24       		.uleb128 0x24
 2262 0015 00       		.byte	0
 2263 0016 0B       		.uleb128 0xb
 2264 0017 0B       		.uleb128 0xb
 2265 0018 3E       		.uleb128 0x3e
 2266 0019 0B       		.uleb128 0xb
 2267 001a 03       		.uleb128 0x3
 2268 001b 0E       		.uleb128 0xe
 2269 001c 00       		.byte	0
 2270 001d 00       		.byte	0
 2271 001e 03       		.uleb128 0x3
 2272 001f 16       		.uleb128 0x16
 2273 0020 00       		.byte	0
 2274 0021 03       		.uleb128 0x3
 2275 0022 0E       		.uleb128 0xe
 2276 0023 3A       		.uleb128 0x3a
 2277 0024 0B       		.uleb128 0xb
 2278 0025 3B       		.uleb128 0x3b
 2279 0026 0B       		.uleb128 0xb
 2280 0027 49       		.uleb128 0x49
 2281 0028 13       		.uleb128 0x13
 2282 0029 00       		.byte	0
 2283 002a 00       		.byte	0
 2284 002b 04       		.uleb128 0x4
 2285 002c 24       		.uleb128 0x24
 2286 002d 00       		.byte	0
 2287 002e 0B       		.uleb128 0xb
 2288 002f 0B       		.uleb128 0xb
 2289 0030 3E       		.uleb128 0x3e
 2290 0031 0B       		.uleb128 0xb
 2291 0032 03       		.uleb128 0x3
 2292 0033 08       		.uleb128 0x8
 2293 0034 00       		.byte	0
 2294 0035 00       		.byte	0
 2295 0036 05       		.uleb128 0x5
 2296 0037 16       		.uleb128 0x16
 2297 0038 00       		.byte	0
 2298 0039 03       		.uleb128 0x3
 2299 003a 0E       		.uleb128 0xe
 2300 003b 3A       		.uleb128 0x3a
 2301 003c 0B       		.uleb128 0xb
 2302 003d 3B       		.uleb128 0x3b
 2303 003e 05       		.uleb128 0x5
 2304 003f 49       		.uleb128 0x49
 2305 0040 13       		.uleb128 0x13
 2306 0041 00       		.byte	0
 2307 0042 00       		.byte	0
 2308 0043 06       		.uleb128 0x6
 2309 0044 01       		.uleb128 0x1
 2310 0045 01       		.byte	0x1
 2311 0046 49       		.uleb128 0x49
 2312 0047 13       		.uleb128 0x13
 2313 0048 01       		.uleb128 0x1
 2314 0049 13       		.uleb128 0x13
 2315 004a 00       		.byte	0
 2316 004b 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 46


 2317 004c 07       		.uleb128 0x7
 2318 004d 21       		.uleb128 0x21
 2319 004e 00       		.byte	0
 2320 004f 49       		.uleb128 0x49
 2321 0050 13       		.uleb128 0x13
 2322 0051 2F       		.uleb128 0x2f
 2323 0052 0B       		.uleb128 0xb
 2324 0053 00       		.byte	0
 2325 0054 00       		.byte	0
 2326 0055 08       		.uleb128 0x8
 2327 0056 13       		.uleb128 0x13
 2328 0057 01       		.byte	0x1
 2329 0058 0B       		.uleb128 0xb
 2330 0059 05       		.uleb128 0x5
 2331 005a 3A       		.uleb128 0x3a
 2332 005b 0B       		.uleb128 0xb
 2333 005c 3B       		.uleb128 0x3b
 2334 005d 0B       		.uleb128 0xb
 2335 005e 01       		.uleb128 0x1
 2336 005f 13       		.uleb128 0x13
 2337 0060 00       		.byte	0
 2338 0061 00       		.byte	0
 2339 0062 09       		.uleb128 0x9
 2340 0063 0D       		.uleb128 0xd
 2341 0064 00       		.byte	0
 2342 0065 03       		.uleb128 0x3
 2343 0066 0E       		.uleb128 0xe
 2344 0067 3A       		.uleb128 0x3a
 2345 0068 0B       		.uleb128 0xb
 2346 0069 3B       		.uleb128 0x3b
 2347 006a 0B       		.uleb128 0xb
 2348 006b 49       		.uleb128 0x49
 2349 006c 13       		.uleb128 0x13
 2350 006d 38       		.uleb128 0x38
 2351 006e 0B       		.uleb128 0xb
 2352 006f 00       		.byte	0
 2353 0070 00       		.byte	0
 2354 0071 0A       		.uleb128 0xa
 2355 0072 13       		.uleb128 0x13
 2356 0073 01       		.byte	0x1
 2357 0074 0B       		.uleb128 0xb
 2358 0075 0B       		.uleb128 0xb
 2359 0076 3A       		.uleb128 0x3a
 2360 0077 0B       		.uleb128 0xb
 2361 0078 3B       		.uleb128 0x3b
 2362 0079 0B       		.uleb128 0xb
 2363 007a 01       		.uleb128 0x1
 2364 007b 13       		.uleb128 0x13
 2365 007c 00       		.byte	0
 2366 007d 00       		.byte	0
 2367 007e 0B       		.uleb128 0xb
 2368 007f 0D       		.uleb128 0xd
 2369 0080 00       		.byte	0
 2370 0081 03       		.uleb128 0x3
 2371 0082 08       		.uleb128 0x8
 2372 0083 3A       		.uleb128 0x3a
 2373 0084 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 47


 2374 0085 3B       		.uleb128 0x3b
 2375 0086 0B       		.uleb128 0xb
 2376 0087 49       		.uleb128 0x49
 2377 0088 13       		.uleb128 0x13
 2378 0089 38       		.uleb128 0x38
 2379 008a 0B       		.uleb128 0xb
 2380 008b 00       		.byte	0
 2381 008c 00       		.byte	0
 2382 008d 0C       		.uleb128 0xc
 2383 008e 35       		.uleb128 0x35
 2384 008f 00       		.byte	0
 2385 0090 49       		.uleb128 0x49
 2386 0091 13       		.uleb128 0x13
 2387 0092 00       		.byte	0
 2388 0093 00       		.byte	0
 2389 0094 0D       		.uleb128 0xd
 2390 0095 0F       		.uleb128 0xf
 2391 0096 00       		.byte	0
 2392 0097 0B       		.uleb128 0xb
 2393 0098 0B       		.uleb128 0xb
 2394 0099 49       		.uleb128 0x49
 2395 009a 13       		.uleb128 0x13
 2396 009b 00       		.byte	0
 2397 009c 00       		.byte	0
 2398 009d 0E       		.uleb128 0xe
 2399 009e 2E       		.uleb128 0x2e
 2400 009f 01       		.byte	0x1
 2401 00a0 3F       		.uleb128 0x3f
 2402 00a1 19       		.uleb128 0x19
 2403 00a2 03       		.uleb128 0x3
 2404 00a3 0E       		.uleb128 0xe
 2405 00a4 3A       		.uleb128 0x3a
 2406 00a5 0B       		.uleb128 0xb
 2407 00a6 3B       		.uleb128 0x3b
 2408 00a7 0B       		.uleb128 0xb
 2409 00a8 49       		.uleb128 0x49
 2410 00a9 13       		.uleb128 0x13
 2411 00aa 11       		.uleb128 0x11
 2412 00ab 01       		.uleb128 0x1
 2413 00ac 12       		.uleb128 0x12
 2414 00ad 06       		.uleb128 0x6
 2415 00ae 40       		.uleb128 0x40
 2416 00af 18       		.uleb128 0x18
 2417 00b0 9642     		.uleb128 0x2116
 2418 00b2 19       		.uleb128 0x19
 2419 00b3 01       		.uleb128 0x1
 2420 00b4 13       		.uleb128 0x13
 2421 00b5 00       		.byte	0
 2422 00b6 00       		.byte	0
 2423 00b7 0F       		.uleb128 0xf
 2424 00b8 34       		.uleb128 0x34
 2425 00b9 00       		.byte	0
 2426 00ba 03       		.uleb128 0x3
 2427 00bb 0E       		.uleb128 0xe
 2428 00bc 3A       		.uleb128 0x3a
 2429 00bd 0B       		.uleb128 0xb
 2430 00be 3B       		.uleb128 0x3b
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 48


 2431 00bf 0B       		.uleb128 0xb
 2432 00c0 49       		.uleb128 0x49
 2433 00c1 13       		.uleb128 0x13
 2434 00c2 02       		.uleb128 0x2
 2435 00c3 18       		.uleb128 0x18
 2436 00c4 00       		.byte	0
 2437 00c5 00       		.byte	0
 2438 00c6 10       		.uleb128 0x10
 2439 00c7 0B       		.uleb128 0xb
 2440 00c8 01       		.byte	0x1
 2441 00c9 11       		.uleb128 0x11
 2442 00ca 01       		.uleb128 0x1
 2443 00cb 12       		.uleb128 0x12
 2444 00cc 06       		.uleb128 0x6
 2445 00cd 00       		.byte	0
 2446 00ce 00       		.byte	0
 2447 00cf 11       		.uleb128 0x11
 2448 00d0 34       		.uleb128 0x34
 2449 00d1 00       		.byte	0
 2450 00d2 03       		.uleb128 0x3
 2451 00d3 08       		.uleb128 0x8
 2452 00d4 3A       		.uleb128 0x3a
 2453 00d5 0B       		.uleb128 0xb
 2454 00d6 3B       		.uleb128 0x3b
 2455 00d7 0B       		.uleb128 0xb
 2456 00d8 49       		.uleb128 0x49
 2457 00d9 13       		.uleb128 0x13
 2458 00da 02       		.uleb128 0x2
 2459 00db 18       		.uleb128 0x18
 2460 00dc 00       		.byte	0
 2461 00dd 00       		.byte	0
 2462 00de 12       		.uleb128 0x12
 2463 00df 0B       		.uleb128 0xb
 2464 00e0 01       		.byte	0x1
 2465 00e1 11       		.uleb128 0x11
 2466 00e2 01       		.uleb128 0x1
 2467 00e3 12       		.uleb128 0x12
 2468 00e4 06       		.uleb128 0x6
 2469 00e5 01       		.uleb128 0x1
 2470 00e6 13       		.uleb128 0x13
 2471 00e7 00       		.byte	0
 2472 00e8 00       		.byte	0
 2473 00e9 13       		.uleb128 0x13
 2474 00ea 2E       		.uleb128 0x2e
 2475 00eb 01       		.byte	0x1
 2476 00ec 3F       		.uleb128 0x3f
 2477 00ed 19       		.uleb128 0x19
 2478 00ee 03       		.uleb128 0x3
 2479 00ef 0E       		.uleb128 0xe
 2480 00f0 3A       		.uleb128 0x3a
 2481 00f1 0B       		.uleb128 0xb
 2482 00f2 3B       		.uleb128 0x3b
 2483 00f3 0B       		.uleb128 0xb
 2484 00f4 27       		.uleb128 0x27
 2485 00f5 19       		.uleb128 0x19
 2486 00f6 49       		.uleb128 0x49
 2487 00f7 13       		.uleb128 0x13
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 49


 2488 00f8 11       		.uleb128 0x11
 2489 00f9 01       		.uleb128 0x1
 2490 00fa 12       		.uleb128 0x12
 2491 00fb 06       		.uleb128 0x6
 2492 00fc 40       		.uleb128 0x40
 2493 00fd 18       		.uleb128 0x18
 2494 00fe 9642     		.uleb128 0x2116
 2495 0100 19       		.uleb128 0x19
 2496 0101 01       		.uleb128 0x1
 2497 0102 13       		.uleb128 0x13
 2498 0103 00       		.byte	0
 2499 0104 00       		.byte	0
 2500 0105 14       		.uleb128 0x14
 2501 0106 05       		.uleb128 0x5
 2502 0107 00       		.byte	0
 2503 0108 03       		.uleb128 0x3
 2504 0109 0E       		.uleb128 0xe
 2505 010a 3A       		.uleb128 0x3a
 2506 010b 0B       		.uleb128 0xb
 2507 010c 3B       		.uleb128 0x3b
 2508 010d 0B       		.uleb128 0xb
 2509 010e 49       		.uleb128 0x49
 2510 010f 13       		.uleb128 0x13
 2511 0110 02       		.uleb128 0x2
 2512 0111 18       		.uleb128 0x18
 2513 0112 00       		.byte	0
 2514 0113 00       		.byte	0
 2515 0114 15       		.uleb128 0x15
 2516 0115 2E       		.uleb128 0x2e
 2517 0116 01       		.byte	0x1
 2518 0117 3F       		.uleb128 0x3f
 2519 0118 19       		.uleb128 0x19
 2520 0119 03       		.uleb128 0x3
 2521 011a 0E       		.uleb128 0xe
 2522 011b 3A       		.uleb128 0x3a
 2523 011c 0B       		.uleb128 0xb
 2524 011d 3B       		.uleb128 0x3b
 2525 011e 0B       		.uleb128 0xb
 2526 011f 27       		.uleb128 0x27
 2527 0120 19       		.uleb128 0x19
 2528 0121 11       		.uleb128 0x11
 2529 0122 01       		.uleb128 0x1
 2530 0123 12       		.uleb128 0x12
 2531 0124 06       		.uleb128 0x6
 2532 0125 40       		.uleb128 0x40
 2533 0126 18       		.uleb128 0x18
 2534 0127 9642     		.uleb128 0x2116
 2535 0129 19       		.uleb128 0x19
 2536 012a 01       		.uleb128 0x1
 2537 012b 13       		.uleb128 0x13
 2538 012c 00       		.byte	0
 2539 012d 00       		.byte	0
 2540 012e 16       		.uleb128 0x16
 2541 012f 05       		.uleb128 0x5
 2542 0130 00       		.byte	0
 2543 0131 03       		.uleb128 0x3
 2544 0132 08       		.uleb128 0x8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 50


 2545 0133 3A       		.uleb128 0x3a
 2546 0134 0B       		.uleb128 0xb
 2547 0135 3B       		.uleb128 0x3b
 2548 0136 0B       		.uleb128 0xb
 2549 0137 49       		.uleb128 0x49
 2550 0138 13       		.uleb128 0x13
 2551 0139 02       		.uleb128 0x2
 2552 013a 18       		.uleb128 0x18
 2553 013b 00       		.byte	0
 2554 013c 00       		.byte	0
 2555 013d 17       		.uleb128 0x17
 2556 013e 2E       		.uleb128 0x2e
 2557 013f 01       		.byte	0x1
 2558 0140 3F       		.uleb128 0x3f
 2559 0141 19       		.uleb128 0x19
 2560 0142 03       		.uleb128 0x3
 2561 0143 0E       		.uleb128 0xe
 2562 0144 3A       		.uleb128 0x3a
 2563 0145 0B       		.uleb128 0xb
 2564 0146 3B       		.uleb128 0x3b
 2565 0147 0B       		.uleb128 0xb
 2566 0148 27       		.uleb128 0x27
 2567 0149 19       		.uleb128 0x19
 2568 014a 11       		.uleb128 0x11
 2569 014b 01       		.uleb128 0x1
 2570 014c 12       		.uleb128 0x12
 2571 014d 06       		.uleb128 0x6
 2572 014e 40       		.uleb128 0x40
 2573 014f 18       		.uleb128 0x18
 2574 0150 9742     		.uleb128 0x2117
 2575 0152 19       		.uleb128 0x19
 2576 0153 01       		.uleb128 0x1
 2577 0154 13       		.uleb128 0x13
 2578 0155 00       		.byte	0
 2579 0156 00       		.byte	0
 2580 0157 18       		.uleb128 0x18
 2581 0158 34       		.uleb128 0x34
 2582 0159 00       		.byte	0
 2583 015a 03       		.uleb128 0x3
 2584 015b 0E       		.uleb128 0xe
 2585 015c 3A       		.uleb128 0x3a
 2586 015d 0B       		.uleb128 0xb
 2587 015e 3B       		.uleb128 0x3b
 2588 015f 05       		.uleb128 0x5
 2589 0160 49       		.uleb128 0x49
 2590 0161 13       		.uleb128 0x13
 2591 0162 3F       		.uleb128 0x3f
 2592 0163 19       		.uleb128 0x19
 2593 0164 3C       		.uleb128 0x3c
 2594 0165 19       		.uleb128 0x19
 2595 0166 00       		.byte	0
 2596 0167 00       		.byte	0
 2597 0168 19       		.uleb128 0x19
 2598 0169 34       		.uleb128 0x34
 2599 016a 00       		.byte	0
 2600 016b 03       		.uleb128 0x3
 2601 016c 0E       		.uleb128 0xe
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 51


 2602 016d 3A       		.uleb128 0x3a
 2603 016e 0B       		.uleb128 0xb
 2604 016f 3B       		.uleb128 0x3b
 2605 0170 0B       		.uleb128 0xb
 2606 0171 49       		.uleb128 0x49
 2607 0172 13       		.uleb128 0x13
 2608 0173 3F       		.uleb128 0x3f
 2609 0174 19       		.uleb128 0x19
 2610 0175 02       		.uleb128 0x2
 2611 0176 18       		.uleb128 0x18
 2612 0177 00       		.byte	0
 2613 0178 00       		.byte	0
 2614 0179 1A       		.uleb128 0x1a
 2615 017a 21       		.uleb128 0x21
 2616 017b 00       		.byte	0
 2617 017c 49       		.uleb128 0x49
 2618 017d 13       		.uleb128 0x13
 2619 017e 2F       		.uleb128 0x2f
 2620 017f 05       		.uleb128 0x5
 2621 0180 00       		.byte	0
 2622 0181 00       		.byte	0
 2623 0182 1B       		.uleb128 0x1b
 2624 0183 34       		.uleb128 0x34
 2625 0184 00       		.byte	0
 2626 0185 03       		.uleb128 0x3
 2627 0186 08       		.uleb128 0x8
 2628 0187 3A       		.uleb128 0x3a
 2629 0188 0B       		.uleb128 0xb
 2630 0189 3B       		.uleb128 0x3b
 2631 018a 0B       		.uleb128 0xb
 2632 018b 49       		.uleb128 0x49
 2633 018c 13       		.uleb128 0x13
 2634 018d 3F       		.uleb128 0x3f
 2635 018e 19       		.uleb128 0x19
 2636 018f 02       		.uleb128 0x2
 2637 0190 18       		.uleb128 0x18
 2638 0191 00       		.byte	0
 2639 0192 00       		.byte	0
 2640 0193 00       		.byte	0
 2641              		.section	.debug_aranges,"",%progbits
 2642 0000 54000000 		.4byte	0x54
 2643 0004 0200     		.2byte	0x2
 2644 0006 00000000 		.4byte	.Ldebug_info0
 2645 000a 04       		.byte	0x4
 2646 000b 00       		.byte	0
 2647 000c 0000     		.2byte	0
 2648 000e 0000     		.2byte	0
 2649 0010 00000000 		.4byte	.LFB64
 2650 0014 34010000 		.4byte	.LFE64-.LFB64
 2651 0018 00000000 		.4byte	.LFB65
 2652 001c 98010000 		.4byte	.LFE65-.LFB65
 2653 0020 00000000 		.4byte	.LFB66
 2654 0024 C4000000 		.4byte	.LFE66-.LFB66
 2655 0028 00000000 		.4byte	.LFB67
 2656 002c 74000000 		.4byte	.LFE67-.LFB67
 2657 0030 00000000 		.4byte	.LFB68
 2658 0034 28000000 		.4byte	.LFE68-.LFB68
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 52


 2659 0038 00000000 		.4byte	.LFB69
 2660 003c 84000000 		.4byte	.LFE69-.LFB69
 2661 0040 00000000 		.4byte	.LFB70
 2662 0044 BC000000 		.4byte	.LFE70-.LFB70
 2663 0048 00000000 		.4byte	.LFB71
 2664 004c 04010000 		.4byte	.LFE71-.LFB71
 2665 0050 00000000 		.4byte	0
 2666 0054 00000000 		.4byte	0
 2667              		.section	.debug_ranges,"",%progbits
 2668              	.Ldebug_ranges0:
 2669 0000 00000000 		.4byte	.LFB64
 2670 0004 34010000 		.4byte	.LFE64
 2671 0008 00000000 		.4byte	.LFB65
 2672 000c 98010000 		.4byte	.LFE65
 2673 0010 00000000 		.4byte	.LFB66
 2674 0014 C4000000 		.4byte	.LFE66
 2675 0018 00000000 		.4byte	.LFB67
 2676 001c 74000000 		.4byte	.LFE67
 2677 0020 00000000 		.4byte	.LFB68
 2678 0024 28000000 		.4byte	.LFE68
 2679 0028 00000000 		.4byte	.LFB69
 2680 002c 84000000 		.4byte	.LFE69
 2681 0030 00000000 		.4byte	.LFB70
 2682 0034 BC000000 		.4byte	.LFE70
 2683 0038 00000000 		.4byte	.LFB71
 2684 003c 04010000 		.4byte	.LFE71
 2685 0040 00000000 		.4byte	0
 2686 0044 00000000 		.4byte	0
 2687              		.section	.debug_line,"",%progbits
 2688              	.Ldebug_line0:
 2689 0000 1A030000 		.section	.debug_str,"MS",%progbits,1
 2689      0200D501 
 2689      00000201 
 2689      FB0E0D00 
 2689      01010101 
 2690              	.LASF12:
 2691 0000 75696E74 		.ascii	"uint16\000"
 2691      313600
 2692              	.LASF125:
 2693 0007 433A5C55 		.ascii	"C:\\Users\\dantz\\Documents\\GitHub\\notoriOS\\noto"
 2693      73657273 
 2693      5C64616E 
 2693      747A5C44 
 2693      6F63756D 
 2694 0034 72694F53 		.ascii	"riOS.cydsn\000"
 2694      2E637964 
 2694      736E00
 2695              	.LASF95:
 2696 003f 62756666 		.ascii	"buffer_overflow\000"
 2696      65725F6F 
 2696      76657266 
 2696      6C6F7700 
 2697              	.LASF79:
 2698 004f 736F7274 		.ascii	"sort32\000"
 2698      333200
 2699              	.LASF64:
 2700 0056 636F756E 		.ascii	"countDownResetCondition\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 53


 2700      74446F77 
 2700      6E526573 
 2700      6574436F 
 2700      6E646974 
 2701              	.LASF123:
 2702 006e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2702      43313120 
 2702      352E342E 
 2702      31203230 
 2702      31363036 
 2703 00a1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2703      20726576 
 2703      6973696F 
 2703      6E203233 
 2703      37373135 
 2704 00d4 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2704      66756E63 
 2704      74696F6E 
 2704      2D736563 
 2704      74696F6E 
 2705              	.LASF7:
 2706 00fc 6C6F6E67 		.ascii	"long long unsigned int\000"
 2706      206C6F6E 
 2706      6720756E 
 2706      7369676E 
 2706      65642069 
 2707              	.LASF60:
 2708 0113 75706461 		.ascii	"updatable_parameters_t\000"
 2708      7461626C 
 2708      655F7061 
 2708      72616D65 
 2708      74657273 
 2709              	.LASF72:
 2710 012a 766F6C74 		.ascii	"voltage\000"
 2710      61676500 
 2711              	.LASF86:
 2712 0132 74657374 		.ascii	"test\000"
 2712      00
 2713              	.LASF110:
 2714 0137 616C6172 		.ascii	"alarmMeasure\000"
 2714      6D4D6561 
 2714      73757265 
 2714      00
 2715              	.LASF88:
 2716 0144 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2716      52784275 
 2716      66666572 
 2716      00
 2717              	.LASF84:
 2718 0151 6D656469 		.ascii	"median\000"
 2718      616E00
 2719              	.LASF118:
 2720 0158 74696D65 		.ascii	"timetoLevelSensor\000"
 2720      746F4C65 
 2720      76656C53 
 2720      656E736F 
 2720      7200
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 54


 2721              	.LASF101:
 2722 016a 6D6F6465 		.ascii	"modem_stats\000"
 2722      6D5F7374 
 2722      61747300 
 2723              	.LASF6:
 2724 0176 6C6F6E67 		.ascii	"long long int\000"
 2724      206C6F6E 
 2724      6720696E 
 2724      7400
 2725              	.LASF0:
 2726 0184 7369676E 		.ascii	"signed char\000"
 2726      65642063 
 2726      68617200 
 2727              	.LASF44:
 2728 0190 65636E6F 		.ascii	"ecno\000"
 2728      00
 2729              	.LASF111:
 2730 0195 74696D65 		.ascii	"timeToMeasure\000"
 2730      546F4D65 
 2730      61737572 
 2730      6500
 2731              	.LASF47:
 2732 01a3 74696D65 		.ascii	"time_to_network_connect\000"
 2732      5F746F5F 
 2732      6E657477 
 2732      6F726B5F 
 2732      636F6E6E 
 2733              	.LASF113:
 2734 01bb 74696D65 		.ascii	"timeToSync\000"
 2734      546F5379 
 2734      6E6300
 2735              	.LASF26:
 2736 01c6 766F6C74 		.ascii	"voltage_charge_current\000"
 2736      6167655F 
 2736      63686172 
 2736      67655F63 
 2736      75727265 
 2737              	.LASF41:
 2738 01dd 6D6F6465 		.ascii	"modem_info_t\000"
 2738      6D5F696E 
 2738      666F5F74 
 2738      00
 2739              	.LASF119:
 2740 01ea 616C6172 		.ascii	"alarmDownstreamLevelSensor\000"
 2740      6D446F77 
 2740      6E737472 
 2740      65616D4C 
 2740      6576656C 
 2741              	.LASF73:
 2742 0205 6368616E 		.ascii	"channels\000"
 2742      6E656C73 
 2742      00
 2743              	.LASF4:
 2744 020e 6C6F6E67 		.ascii	"long int\000"
 2744      20696E74 
 2744      00
 2745              	.LASF42:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 55


 2746 0217 72786C65 		.ascii	"rxlev\000"
 2746      7600
 2747              	.LASF62:
 2748 021d 63757272 		.ascii	"currentCountDownValue\000"
 2748      656E7443 
 2748      6F756E74 
 2748      446F776E 
 2748      56616C75 
 2749              	.LASF65:
 2750 0233 616C6172 		.ascii	"alarm\000"
 2750      6D00
 2751              	.LASF31:
 2752 0239 70726573 		.ascii	"pressure_voltage_off\000"
 2752      73757265 
 2752      5F766F6C 
 2752      74616765 
 2752      5F6F6666 
 2753              	.LASF11:
 2754 024e 75696E74 		.ascii	"uint8\000"
 2754      3800
 2755              	.LASF116:
 2756 0254 74696D65 		.ascii	"timeToAppLED\000"
 2756      546F4170 
 2756      704C4544 
 2756      00
 2757              	.LASF14:
 2758 0261 696E7433 		.ascii	"int32\000"
 2758      3200
 2759              	.LASF50:
 2760 0267 6E6F6465 		.ascii	"node_type\000"
 2760      5F747970 
 2760      6500
 2761              	.LASF83:
 2762 0271 61727261 		.ascii	"array\000"
 2762      7900
 2763              	.LASF67:
 2764 0277 63686970 		.ascii	"chip_uniqueId\000"
 2764      5F756E69 
 2764      71756549 
 2764      6400
 2765              	.LASF39:
 2766 0285 6D6F6465 		.ascii	"model_id\000"
 2766      6C5F6964 
 2766      00
 2767              	.LASF61:
 2768 028e 636F756E 		.ascii	"countDownValue\000"
 2768      74446F77 
 2768      6E56616C 
 2768      756500
 2769              	.LASF82:
 2770 029d 66696E64 		.ascii	"find_median32\000"
 2770      5F6D6564 
 2770      69616E33 
 2770      3200
 2771              	.LASF54:
 2772 02ab 64656275 		.ascii	"debug_level\000"
 2772      675F6C65 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 56


 2772      76656C00 
 2773              	.LASF35:
 2774 02b7 76616C75 		.ascii	"value\000"
 2774      6500
 2775              	.LASF77:
 2776 02bd 70726573 		.ascii	"pressure_sensor_readings\000"
 2776      73757265 
 2776      5F73656E 
 2776      736F725F 
 2776      72656164 
 2777              	.LASF112:
 2778 02d6 616C6172 		.ascii	"alarmSync\000"
 2778      6D53796E 
 2778      6300
 2779              	.LASF30:
 2780 02e0 70726573 		.ascii	"pressure_voltage_on\000"
 2780      73757265 
 2780      5F766F6C 
 2780      74616765 
 2780      5F6F6E00 
 2781              	.LASF103:
 2782 02f4 4170705F 		.ascii	"App_LED_enabled\000"
 2782      4C45445F 
 2782      656E6162 
 2782      6C656400 
 2783              	.LASF37:
 2784 0304 6B65795F 		.ascii	"key_value_t\000"
 2784      76616C75 
 2784      655F7400 
 2785              	.LASF5:
 2786 0310 6C6F6E67 		.ascii	"long unsigned int\000"
 2786      20756E73 
 2786      69676E65 
 2786      6420696E 
 2786      7400
 2787              	.LASF24:
 2788 0322 766F6C74 		.ascii	"voltage_battery\000"
 2788      6167655F 
 2788      62617474 
 2788      65727900 
 2789              	.LASF98:
 2790 0332 64617461 		.ascii	"data\000"
 2790      00
 2791              	.LASF70:
 2792 0337 65705F70 		.ascii	"ep_port\000"
 2792      6F727400 
 2793              	.LASF66:
 2794 033f 6D6F6465 		.ascii	"modem_info\000"
 2794      6D5F696E 
 2794      666F00
 2795              	.LASF69:
 2796 034a 65705F68 		.ascii	"ep_host\000"
 2796      6F737400 
 2797              	.LASF25:
 2798 0352 766F6C74 		.ascii	"voltage_solar\000"
 2798      6167655F 
 2798      736F6C61 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 57


 2798      7200
 2799              	.LASF81:
 2800 0360 70726573 		.ascii	"pressure_calculations\000"
 2800      73757265 
 2800      5F63616C 
 2800      63756C61 
 2800      74696F6E 
 2801              	.LASF48:
 2802 0376 74696D65 		.ascii	"time_to_acquire_ip\000"
 2802      5F746F5F 
 2802      61637175 
 2802      6972655F 
 2802      697000
 2803              	.LASF2:
 2804 0389 73686F72 		.ascii	"short int\000"
 2804      7420696E 
 2804      7400
 2805              	.LASF115:
 2806 0393 616C6172 		.ascii	"alarmAppLED\000"
 2806      6D417070 
 2806      4C454400 
 2807              	.LASF100:
 2808 039f 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2808      6D5F7374 
 2808      6172745F 
 2808      74696D65 
 2808      5F737461 
 2809              	.LASF29:
 2810 03b6 766F6C74 		.ascii	"voltage_t\000"
 2810      6167655F 
 2810      7400
 2811              	.LASF92:
 2812 03c0 646F776E 		.ascii	"downstream_level_sensor_enabled\000"
 2812      73747265 
 2812      616D5F6C 
 2812      6576656C 
 2812      5F73656E 
 2813              	.LASF68:
 2814 03e0 7379735F 		.ascii	"sys_info_t\000"
 2814      696E666F 
 2814      5F7400
 2815              	.LASF85:
 2816 03eb 766F6C74 		.ascii	"voltages_test\000"
 2816      61676573 
 2816      5F746573 
 2816      7400
 2817              	.LASF96:
 2818 03f9 64617461 		.ascii	"dataPointsInStack\000"
 2818      506F696E 
 2818      7473496E 
 2818      53746163 
 2818      6B00
 2819              	.LASF19:
 2820 040b 73697A65 		.ascii	"sizetype\000"
 2820      74797065 
 2820      00
 2821              	.LASF120:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 58


 2822 0414 74696D65 		.ascii	"timetoDownstreamLevelSensor\000"
 2822      746F446F 
 2822      776E7374 
 2822      7265616D 
 2822      4C657665 
 2823              	.LASF20:
 2824 0430 74657374 		.ascii	"test_name\000"
 2824      5F6E616D 
 2824      6500
 2825              	.LASF13:
 2826 043a 696E7431 		.ascii	"int16\000"
 2826      3600
 2827              	.LASF114:
 2828 0440 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2828      546F5379 
 2828      636E5265 
 2828      6D6F7465 
 2828      50617261 
 2829              	.LASF36:
 2830 0457 74696D65 		.ascii	"timeStamp\000"
 2830      5374616D 
 2830      7000
 2831              	.LASF102:
 2832 0461 75706461 		.ascii	"updatable_parameters\000"
 2832      7461626C 
 2832      655F7061 
 2832      72616D65 
 2832      74657273 
 2833              	.LASF78:
 2834 0476 70726573 		.ascii	"pressure\000"
 2834      73757265 
 2834      00
 2835              	.LASF27:
 2836 047f 766F6C74 		.ascii	"voltage_pressure\000"
 2836      6167655F 
 2836      70726573 
 2836      73757265 
 2836      00
 2837              	.LASF122:
 2838 0490 74696D65 		.ascii	"timeToValve\000"
 2838      546F5661 
 2838      6C766500 
 2839              	.LASF15:
 2840 049c 666C6F61 		.ascii	"float\000"
 2840      7400
 2841              	.LASF59:
 2842 04a2 5F426F6F 		.ascii	"_Bool\000"
 2842      6C00
 2843              	.LASF10:
 2844 04a8 696E7433 		.ascii	"int32_t\000"
 2844      325F7400 
 2845              	.LASF1:
 2846 04b0 756E7369 		.ascii	"unsigned char\000"
 2846      676E6564 
 2846      20636861 
 2846      7200
 2847              	.LASF87:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 59


 2848 04be 70726573 		.ascii	"pressure_sensor_test\000"
 2848      73757265 
 2848      5F73656E 
 2848      736F725F 
 2848      74657374 
 2849              	.LASF109:
 2850 04d3 73797374 		.ascii	"system_settings\000"
 2850      656D5F73 
 2850      65747469 
 2850      6E677300 
 2851              	.LASF46:
 2852 04e3 72737270 		.ascii	"rsrp\000"
 2852      00
 2853              	.LASF45:
 2854 04e8 72737271 		.ascii	"rsrq\000"
 2854      00
 2855              	.LASF53:
 2856 04ed 73796E63 		.ascii	"sync_time\000"
 2856      5F74696D 
 2856      6500
 2857              	.LASF80:
 2858 04f7 73776170 		.ascii	"swap32\000"
 2858      333200
 2859              	.LASF23:
 2860 04fe 74657374 		.ascii	"test_t\000"
 2860      5F7400
 2861              	.LASF33:
 2862 0505 70726573 		.ascii	"pressure_depth\000"
 2862      73757265 
 2862      5F646570 
 2862      746800
 2863              	.LASF43:
 2864 0514 72736370 		.ascii	"rscp\000"
 2864      00
 2865              	.LASF75:
 2866 0519 72656164 		.ascii	"readings\000"
 2866      696E6773 
 2866      00
 2867              	.LASF108:
 2868 0522 73797374 		.ascii	"system_info\000"
 2868      656D5F69 
 2868      6E666F00 
 2869              	.LASF40:
 2870 052e 696D6569 		.ascii	"imei\000"
 2870      00
 2871              	.LASF22:
 2872 0533 72656173 		.ascii	"reason\000"
 2872      6F6E00
 2873              	.LASF49:
 2874 053a 6D6F6465 		.ascii	"modem_stats_t\000"
 2874      6D5F7374 
 2874      6174735F 
 2874      7400
 2875              	.LASF32:
 2876 0548 70726573 		.ascii	"pressure_current\000"
 2876      73757265 
 2876      5F637572 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 60


 2876      72656E74 
 2876      00
 2877              	.LASF28:
 2878 0559 76616C69 		.ascii	"valid\000"
 2878      6400
 2879              	.LASF117:
 2880 055f 616C6172 		.ascii	"alarmLevelSensor\000"
 2880      6D4C6576 
 2880      656C5365 
 2880      6E736F72 
 2880      00
 2881              	.LASF56:
 2882 0570 4C657665 		.ascii	"Level_Sensor_freq\000"
 2882      6C5F5365 
 2882      6E736F72 
 2882      5F667265 
 2882      7100
 2883              	.LASF89:
 2884 0582 6C657665 		.ascii	"level_sensor_inbox\000"
 2884      6C5F7365 
 2884      6E736F72 
 2884      5F696E62 
 2884      6F7800
 2885              	.LASF18:
 2886 0595 6C6F6E67 		.ascii	"long double\000"
 2886      20646F75 
 2886      626C6500 
 2887              	.LASF17:
 2888 05a1 63686172 		.ascii	"char\000"
 2888      00
 2889              	.LASF8:
 2890 05a6 756E7369 		.ascii	"unsigned int\000"
 2890      676E6564 
 2890      20696E74 
 2890      00
 2891              	.LASF121:
 2892 05b3 616C6172 		.ascii	"alarmValve\000"
 2892      6D56616C 
 2892      766500
 2893              	.LASF107:
 2894 05be 68747470 		.ascii	"http_route\000"
 2894      5F726F75 
 2894      746500
 2895              	.LASF9:
 2896 05c9 5F5F696E 		.ascii	"__int32_t\000"
 2896      7433325F 
 2896      7400
 2897              	.LASF52:
 2898 05d3 6D656173 		.ascii	"measure_time\000"
 2898      7572655F 
 2898      74696D65 
 2898      00
 2899              	.LASF74:
 2900 05e0 6F666673 		.ascii	"offset\000"
 2900      657400
 2901              	.LASF3:
 2902 05e7 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 61


 2902      7420756E 
 2902      7369676E 
 2902      65642069 
 2902      6E7400
 2903              	.LASF38:
 2904 05fa 73696D5F 		.ascii	"sim_id\000"
 2904      696400
 2905              	.LASF124:
 2906 0601 766F6C74 		.ascii	"voltages.c\000"
 2906      61676573 
 2906      2E6300
 2907              	.LASF57:
 2908 060c 446F776E 		.ascii	"Downstream_Level_Sensor_freq\000"
 2908      73747265 
 2908      616D5F4C 
 2908      6576656C 
 2908      5F53656E 
 2909              	.LASF76:
 2910 0629 766F6C74 		.ascii	"voltage_take_readings\000"
 2910      6167655F 
 2910      74616B65 
 2910      5F726561 
 2910      64696E67 
 2911              	.LASF93:
 2912 063f 76616C76 		.ascii	"valve_enabled\000"
 2912      655F656E 
 2912      61626C65 
 2912      6400
 2913              	.LASF58:
 2914 064d 76616C76 		.ascii	"valve_freq\000"
 2914      655F6672 
 2914      657100
 2915              	.LASF21:
 2916 0658 73746174 		.ascii	"status\000"
 2916      757300
 2917              	.LASF90:
 2918 065f 6C657665 		.ascii	"level_sensor_enabled\000"
 2918      6C5F7365 
 2918      6E736F72 
 2918      5F656E61 
 2918      626C6564 
 2919              	.LASF97:
 2920 0674 64617461 		.ascii	"dataPointsInStackDesired\000"
 2920      506F696E 
 2920      7473496E 
 2920      53746163 
 2920      6B446573 
 2921              	.LASF55:
 2922 068d 4170705F 		.ascii	"App_LED_freq\000"
 2922      4C45445F 
 2922      66726571 
 2922      00
 2923              	.LASF71:
 2924 069a 7379735F 		.ascii	"sys_settings_t\000"
 2924      73657474 
 2924      696E6773 
 2924      5F7400
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccnS7pt0.s 			page 62


 2925              	.LASF106:
 2926 06a9 68747470 		.ascii	"http_body\000"
 2926      5F626F64 
 2926      7900
 2927              	.LASF94:
 2928 06b3 76616C76 		.ascii	"valve_inbox\000"
 2928      655F696E 
 2928      626F7800 
 2929              	.LASF63:
 2930 06bf 636F756E 		.ascii	"countDownType\000"
 2930      74446F77 
 2930      6E547970 
 2930      6500
 2931              	.LASF51:
 2932 06cd 73696D5F 		.ascii	"sim_type\000"
 2932      74797065 
 2932      00
 2933              	.LASF34:
 2934 06d6 70726573 		.ascii	"pressure_t\000"
 2934      73757265 
 2934      5F7400
 2935              	.LASF105:
 2936 06e1 68747470 		.ascii	"http_request\000"
 2936      5F726571 
 2936      75657374 
 2936      00
 2937              	.LASF16:
 2938 06ee 646F7562 		.ascii	"double\000"
 2938      6C6500
 2939              	.LASF104:
 2940 06f5 6170705F 		.ascii	"app_led_inbox\000"
 2940      6C65645F 
 2940      696E626F 
 2940      7800
 2941              	.LASF91:
 2942 0703 646F776E 		.ascii	"downstream_level_sensor_inbox\000"
 2942      73747265 
 2942      616D5F6C 
 2942      6576656C 
 2942      5F73656E 
 2943              	.LASF99:
 2944 0721 6D6F6465 		.ascii	"modem_state\000"
 2944      6D5F7374 
 2944      61746500 
 2945              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
