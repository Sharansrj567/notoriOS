ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"voltages.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,6,4
  28              		.comm	gps_data,16,4
  29              		.syntax unified
  30              		.global _printf_float
  31              		.thumb
  32              		.syntax unified
  33              		.comm	http_request,10000,4
  34              		.comm	http_body,10000,4
  35              		.comm	http_route,200,4
  36              		.comm	system_info,28,4
  37              		.comm	system_settings,104,4
  38              		.comm	alarmMeasure,6,4
  39              		.comm	timeToMeasure,1,1
  40              		.comm	alarmSync,6,4
  41              		.comm	timeToSync,1,1
  42              		.comm	timeToSycnRemoteParams,1,1
  43              		.comm	hey,1,1
  44              		.global	__aeabi_f2d
  45              		.global	__aeabi_dsub
  46              		.global	__aeabi_d2f
  47              		.global	__aeabi_fmul
  48              		.global	__aeabi_fsub
  49              		.section	.text.voltage_take_readings,"ax",%progbits
  50              		.align	2
  51              		.global	voltage_take_readings
  52              		.thumb
  53              		.thumb_func
  54              		.type	voltage_take_readings, %function
  55              	voltage_take_readings:
  56              	.LFB64:
  57              		.file 1 "voltages.c"
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 2


   1:voltages.c    **** #include "voltages.h"
   2:voltages.c    **** #include "notoriOS.h"
   3:voltages.c    **** #include <math.h>
   4:voltages.c    **** 
   5:voltages.c    **** // Function to take voltage readings and save them in the voltage_t datatype
   6:voltages.c    **** voltage_t voltage_take_readings(){
  58              		.loc 1 6 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 96
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62 0000 B0B5     		push	{r4, r5, r7, lr}
  63              		.cfi_def_cfa_offset 16
  64              		.cfi_offset 4, -16
  65              		.cfi_offset 5, -12
  66              		.cfi_offset 7, -8
  67              		.cfi_offset 14, -4
  68 0002 98B0     		sub	sp, sp, #96
  69              		.cfi_def_cfa_offset 112
  70 0004 00AF     		add	r7, sp, #0
  71              		.cfi_def_cfa_register 7
  72 0006 7860     		str	r0, [r7, #4]
   7:voltages.c    ****     
   8:voltages.c    ****     voltage_t voltage;  // Create variable voltage of data structure voltage_t.
   9:voltages.c    ****      
  10:voltages.c    **** 	Battery_Voltage_Enable_Write(ON);   // Flip on the Battery Voltage ADC pin high (turns it on).
  73              		.loc 1 10 0
  74 0008 0120     		movs	r0, #1
  75 000a FFF7FEFF 		bl	Battery_Voltage_Enable_Write
  11:voltages.c    ****     Pressure_Voltage_Enable_Write(ON);  // Flip on the Pressure Transducer Voltage ADC pin high (tu
  76              		.loc 1 11 0
  77 000e 0120     		movs	r0, #1
  78 0010 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  12:voltages.c    ****     
  13:voltages.c    **** 	CyDelay(10u);	    // 10 seconds delay to give time to flip on ADC pin.
  79              		.loc 1 13 0
  80 0014 0A20     		movs	r0, #10
  81 0016 FFF7FEFF 		bl	CyDelay
  14:voltages.c    ****     
  15:voltages.c    ****     AMux_Start();       // Start the Analog Multiplexer
  82              		.loc 1 15 0
  83 001a FFF7FEFF 		bl	AMux_Start
  16:voltages.c    ****  
  17:voltages.c    ****     ADC_RestoreConfig();// Have to call this and save (See below). Otherwise ADC won't work through
  84              		.loc 1 17 0
  85 001e FFF7FEFF 		bl	ADC_RestoreConfig
  18:voltages.c    ****     
  19:voltages.c    ****     ADC_Start();        // Start the ADC
  86              		.loc 1 19 0
  87 0022 FFF7FEFF 		bl	ADC_Start
  88              	.LBB2:
  20:voltages.c    ****     
  21:voltages.c    ****     float channels[AMux_CHANNELS];
  22:voltages.c    ****     
  23:voltages.c    ****     for(uint8 c = 0; c< AMux_CHANNELS + 1; c++) // Sweep the MUX Channels
  89              		.loc 1 23 0
  90 0026 0023     		movs	r3, #0
  91 0028 87F85F30 		strb	r3, [r7, #95]
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 3


  92 002c 34E0     		b	.L2
  93              	.L5:
  94              	.LBB3:
  24:voltages.c    ****     {
  25:voltages.c    ****         
  26:voltages.c    ****         int32 readings[N_SAMPLES];  // Creates new int32 array called readings of size N_SAMPLES = 
  27:voltages.c    ****         
  28:voltages.c    ****         AMux_Select(c); // This functions first disconnects all channels then connects the given ch
  95              		.loc 1 28 0
  96 002e 97F85F30 		ldrb	r3, [r7, #95]	@ zero_extendqisi2
  97 0032 1846     		mov	r0, r3
  98 0034 FFF7FEFF 		bl	AMux_Select
  99              	.LBB4:
  29:voltages.c    ****         
  30:voltages.c    ****         for(uint16 i=0; i< N_SAMPLES; i++){
 100              		.loc 1 30 0
 101 0038 0023     		movs	r3, #0
 102 003a A7F85C30 		strh	r3, [r7, #92]	@ movhi
 103 003e 0FE0     		b	.L3
 104              	.L4:
  31:voltages.c    ****             
  32:voltages.c    ****             readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the
 105              		.loc 1 32 0 discriminator 3
 106 0040 B7F85C40 		ldrh	r4, [r7, #92]
 107 0044 FFF7FEFF 		bl	ADC_Read32
 108 0048 0246     		mov	r2, r0
 109 004a A300     		lsls	r3, r4, #2
 110 004c 07F16001 		add	r1, r7, #96
 111 0050 0B44     		add	r3, r3, r1
 112 0052 43F8582C 		str	r2, [r3, #-88]
  30:voltages.c    ****             
 113              		.loc 1 30 0 discriminator 3
 114 0056 B7F85C30 		ldrh	r3, [r7, #92]
 115 005a 0133     		adds	r3, r3, #1
 116 005c A7F85C30 		strh	r3, [r7, #92]	@ movhi
 117              	.L3:
  30:voltages.c    ****             
 118              		.loc 1 30 0 is_stmt 0 discriminator 1
 119 0060 B7F85C30 		ldrh	r3, [r7, #92]
 120 0064 0A2B     		cmp	r3, #10
 121 0066 EBD9     		bls	.L4
 122              	.LBE4:
  33:voltages.c    ****         }
  34:voltages.c    ****         
  35:voltages.c    ****         // Converts the ADC output to Volts as a floating point number. 
  36:voltages.c    ****         // Get the median of readings and return that.
  37:voltages.c    ****         channels[c] = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Get median of re
 123              		.loc 1 37 0 is_stmt 1 discriminator 2
 124 0068 97F85F40 		ldrb	r4, [r7, #95]	@ zero_extendqisi2
 125 006c 07F10803 		add	r3, r7, #8
 126 0070 0B21     		movs	r1, #11
 127 0072 1846     		mov	r0, r3
 128 0074 FFF7FEFF 		bl	find_median32
 129 0078 0346     		mov	r3, r0
 130 007a 1846     		mov	r0, r3
 131 007c FFF7FEFF 		bl	ADC_CountsTo_Volts
 132 0080 0246     		mov	r2, r0
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 4


 133 0082 A300     		lsls	r3, r4, #2
 134 0084 07F16001 		add	r1, r7, #96
 135 0088 0B44     		add	r3, r3, r1
 136 008a 43F82C2C 		str	r2, [r3, #-44]	@ float
 137              	.LBE3:
  23:voltages.c    ****     {
 138              		.loc 1 23 0 discriminator 2
 139 008e 97F85F30 		ldrb	r3, [r7, #95]	@ zero_extendqisi2
 140 0092 0133     		adds	r3, r3, #1
 141 0094 87F85F30 		strb	r3, [r7, #95]
 142              	.L2:
  23:voltages.c    ****     {
 143              		.loc 1 23 0 is_stmt 0 discriminator 1
 144 0098 97F85F30 		ldrb	r3, [r7, #95]	@ zero_extendqisi2
 145 009c 042B     		cmp	r3, #4
 146 009e C6D9     		bls	.L5
 147              	.LBE2:
  38:voltages.c    ****     }
  39:voltages.c    ****     
  40:voltages.c    ****     AMux_Stop();        // Disconnects all Analog Multiplex channels.
 148              		.loc 1 40 0 is_stmt 1
 149 00a0 FFF7FEFF 		bl	AMux_Start
  41:voltages.c    ****     
  42:voltages.c    ****     ADC_SaveConfig();   // Save the register configuration which are not retention.
 150              		.loc 1 42 0
 151 00a4 FFF7FEFF 		bl	ADC_SaveConfig
  43:voltages.c    ****     
  44:voltages.c    ****     ADC_Stop();         // Stops and powers down the ADC component and the internal clock if the ex
 152              		.loc 1 44 0
 153 00a8 FFF7FEFF 		bl	ADC_Stop
  45:voltages.c    ****     
  46:voltages.c    ****     Battery_Voltage_Enable_Write(OFF);  // Pulls Battery ADC pin low (turns it off).
 154              		.loc 1 46 0
 155 00ac 0020     		movs	r0, #0
 156 00ae FFF7FEFF 		bl	Battery_Voltage_Enable_Write
  47:voltages.c    ****     Pressure_Voltage_Enable_Write(OFF);  // Pulls Pressure Transducer ADC pin low (turns it off).
 157              		.loc 1 47 0
 158 00b2 0020     		movs	r0, #0
 159 00b4 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  48:voltages.c    ****     
  49:voltages.c    ****     float offset = channels[0] - 1.024; // Should be 1.024 exactly. BK saw an offset when measuring
 160              		.loc 1 49 0
 161 00b8 7B6B     		ldr	r3, [r7, #52]	@ float
 162 00ba 1846     		mov	r0, r3
 163 00bc FFF7FEFF 		bl	__aeabi_f2d
 164 00c0 19A3     		adr	r3, .L7
 165 00c2 D3E90023 		ldrd	r2, [r3]
 166 00c6 FFF7FEFF 		bl	__aeabi_dsub
 167 00ca 0346     		mov	r3, r0
 168 00cc 0C46     		mov	r4, r1
 169 00ce 1846     		mov	r0, r3
 170 00d0 2146     		mov	r1, r4
 171 00d2 FFF7FEFF 		bl	__aeabi_d2f
 172 00d6 0346     		mov	r3, r0
 173 00d8 BB65     		str	r3, [r7, #88]	@ float
  50:voltages.c    ****     voltage.voltage_battery = (channels[ADC_MUX_VBAT] * 11) - offset; // Voltage divider is (1/10) 
 174              		.loc 1 50 0
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 5


 175 00da BB6B     		ldr	r3, [r7, #56]	@ float
 176 00dc 1449     		ldr	r1, .L7+8
 177 00de 1846     		mov	r0, r3
 178 00e0 FFF7FEFF 		bl	__aeabi_fmul
 179 00e4 0346     		mov	r3, r0
 180 00e6 B96D     		ldr	r1, [r7, #88]	@ float
 181 00e8 1846     		mov	r0, r3
 182 00ea FFF7FEFF 		bl	__aeabi_fsub
 183 00ee 0346     		mov	r3, r0
 184 00f0 7B64     		str	r3, [r7, #68]	@ float
  51:voltages.c    ****     voltage.voltage_solar = channels[ADC_MUX_VSOL] - offset; // Just want voltage here
 185              		.loc 1 51 0
 186 00f2 FB6B     		ldr	r3, [r7, #60]	@ float
 187 00f4 B96D     		ldr	r1, [r7, #88]	@ float
 188 00f6 1846     		mov	r0, r3
 189 00f8 FFF7FEFF 		bl	__aeabi_fsub
 190 00fc 0346     		mov	r3, r0
 191 00fe BB64     		str	r3, [r7, #72]	@ float
  52:voltages.c    ****     // Voltage across sensor resistor gives 100mV drop for max current, which is 800mA
  53:voltages.c    ****     //voltage.voltage_charge_current = 0.1*(channels[ADC_MUX_CHRG] - voltage.voltage_battery);
  54:voltages.c    ****     voltage.voltage_pressure = channels[ADC_MUX_PRTRANS]; // Pressure transducer reading
 192              		.loc 1 54 0
 193 0100 3B6C     		ldr	r3, [r7, #64]	@ float
 194 0102 3B65     		str	r3, [r7, #80]	@ float
  55:voltages.c    **** 
  56:voltages.c    ****     voltage.valid = 1;
 195              		.loc 1 56 0
 196 0104 0123     		movs	r3, #1
 197 0106 87F85430 		strb	r3, [r7, #84]
  57:voltages.c    ****     
  58:voltages.c    ****     return voltage;
 198              		.loc 1 58 0
 199 010a 7B68     		ldr	r3, [r7, #4]
 200 010c 1D46     		mov	r5, r3
 201 010e 07F14404 		add	r4, r7, #68
 202 0112 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 203 0114 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 204 0116 2368     		ldr	r3, [r4]
 205 0118 2B60     		str	r3, [r5]
  59:voltages.c    **** }
 206              		.loc 1 59 0
 207 011a 7868     		ldr	r0, [r7, #4]
 208 011c 6037     		adds	r7, r7, #96
 209              		.cfi_def_cfa_offset 16
 210 011e BD46     		mov	sp, r7
 211              		.cfi_def_cfa_register 13
 212              		@ sp needed
 213 0120 B0BD     		pop	{r4, r5, r7, pc}
 214              	.L8:
 215 0122 00BFAFF3 		.align	3
 215      0080
 216              	.L7:
 217 0128 FCA9F1D2 		.word	-755914244
 218 012c 4D62F03F 		.word	1072718413
 219 0130 00003041 		.word	1093664768
 220              		.cfi_endproc
 221              	.LFE64:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 6


 222              		.size	voltage_take_readings, .-voltage_take_readings
 223              		.global	__aeabi_fdiv
 224              		.global	__aeabi_ddiv
 225              		.global	__aeabi_dmul
 226              		.section	.text.pressure_sensor_readings,"ax",%progbits
 227              		.align	2
 228              		.global	pressure_sensor_readings
 229              		.thumb
 230              		.thumb_func
 231              		.type	pressure_sensor_readings, %function
 232              	pressure_sensor_readings:
 233              	.LFB65:
  60:voltages.c    **** 
  61:voltages.c    **** // Function to take Pressure sensor readings and save them in the pressure_t datatype
  62:voltages.c    **** pressure_t pressure_sensor_readings(){
 234              		.loc 1 62 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 88
 237              		@ frame_needed = 1, uses_anonymous_args = 0
 238 0000 90B5     		push	{r4, r7, lr}
 239              		.cfi_def_cfa_offset 12
 240              		.cfi_offset 4, -12
 241              		.cfi_offset 7, -8
 242              		.cfi_offset 14, -4
 243 0002 97B0     		sub	sp, sp, #92
 244              		.cfi_def_cfa_offset 104
 245 0004 00AF     		add	r7, sp, #0
 246              		.cfi_def_cfa_register 7
 247 0006 7860     		str	r0, [r7, #4]
  63:voltages.c    ****     
  64:voltages.c    ****     pressure_t pressure;  // Create variable voltage of data structure voltage_t.
  65:voltages.c    ****     float channels[AMux_CHANNELS];
  66:voltages.c    ****     int32 readings[N_SAMPLES];  // Creates new int32 array called readings of size N_SAMPLES = 11
  67:voltages.c    ****     
  68:voltages.c    ****     AMux_Start();       // Start the Analog Multiplexer
 248              		.loc 1 68 0
 249 0008 FFF7FEFF 		bl	AMux_Start
  69:voltages.c    ****  
  70:voltages.c    ****     ADC_RestoreConfig();// Have to call this and save (See below). Otherwise ADC won't work through
 250              		.loc 1 70 0
 251 000c FFF7FEFF 		bl	ADC_RestoreConfig
  71:voltages.c    ****     
  72:voltages.c    ****     ADC_Start();        // Start the ADC
 252              		.loc 1 72 0
 253 0010 FFF7FEFF 		bl	ADC_Start
  73:voltages.c    ****     
  74:voltages.c    ****     AMux_Select(ADC_MUX_PRTRANS); // This functions first disconnects all channels then connects th
 254              		.loc 1 74 0
 255 0014 0320     		movs	r0, #3
 256 0016 FFF7FEFF 		bl	AMux_Select
 257              	.LBB5:
  75:voltages.c    ****     
  76:voltages.c    ****     for(uint16 i=0; i< N_SAMPLES; i++){   
 258              		.loc 1 76 0
 259 001a 0023     		movs	r3, #0
 260 001c A7F85630 		strh	r3, [r7, #86]	@ movhi
 261 0020 0FE0     		b	.L10
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 7


 262              	.L11:
  77:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 263              		.loc 1 77 0 discriminator 3
 264 0022 B7F85640 		ldrh	r4, [r7, #86]
 265 0026 FFF7FEFF 		bl	ADC_Read32
 266 002a 0246     		mov	r2, r0
 267 002c A300     		lsls	r3, r4, #2
 268 002e 07F15801 		add	r1, r7, #88
 269 0032 0B44     		add	r3, r3, r1
 270 0034 43F8502C 		str	r2, [r3, #-80]
  76:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 271              		.loc 1 76 0 discriminator 3
 272 0038 B7F85630 		ldrh	r3, [r7, #86]
 273 003c 0133     		adds	r3, r3, #1
 274 003e A7F85630 		strh	r3, [r7, #86]	@ movhi
 275              	.L10:
  76:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 276              		.loc 1 76 0 is_stmt 0 discriminator 1
 277 0042 B7F85630 		ldrh	r3, [r7, #86]
 278 0046 0A2B     		cmp	r3, #10
 279 0048 EBD9     		bls	.L11
 280              	.LBE5:
  78:voltages.c    ****     }
  79:voltages.c    ****     
  80:voltages.c    ****     // Converts the ADC output to Volts as a floating point number. 
  81:voltages.c    ****     // Get the median of readings and return that.
  82:voltages.c    ****     pressure.pressure_voltage_off = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Ge
 281              		.loc 1 82 0 is_stmt 1
 282 004a 07F10803 		add	r3, r7, #8
 283 004e 0B21     		movs	r1, #11
 284 0050 1846     		mov	r0, r3
 285 0052 FFF7FEFF 		bl	find_median32
 286 0056 0346     		mov	r3, r0
 287 0058 1846     		mov	r0, r3
 288 005a FFF7FEFF 		bl	ADC_CountsTo_Volts
 289 005e 0346     		mov	r3, r0
 290 0060 BB64     		str	r3, [r7, #72]	@ float
  83:voltages.c    ****     pressure.pressure_voltage_off = floorf(pressure.pressure_voltage_off * 100) / 100;
 291              		.loc 1 83 0
 292 0062 BB6C     		ldr	r3, [r7, #72]	@ float
 293 0064 4849     		ldr	r1, .L15+16
 294 0066 1846     		mov	r0, r3
 295 0068 FFF7FEFF 		bl	__aeabi_fmul
 296 006c 0346     		mov	r3, r0
 297 006e 1846     		mov	r0, r3
 298 0070 FFF7FEFF 		bl	floorf
 299 0074 0346     		mov	r3, r0
 300 0076 4449     		ldr	r1, .L15+16
 301 0078 1846     		mov	r0, r3
 302 007a FFF7FEFF 		bl	__aeabi_fdiv
 303 007e 0346     		mov	r3, r0
 304 0080 BB64     		str	r3, [r7, #72]	@ float
  84:voltages.c    ****     
  85:voltages.c    ****     Pressure_Voltage_Enable_Write(ON);  // Flip on the Pressure Transducer Voltage ADC pin high (tu
 305              		.loc 1 85 0
 306 0082 0120     		movs	r0, #1
 307 0084 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 8


  86:voltages.c    ****     
  87:voltages.c    **** 	CyDelay(10u);	    // 10 seconds delay to give time to flip on ADC pin.
 308              		.loc 1 87 0
 309 0088 0A20     		movs	r0, #10
 310 008a FFF7FEFF 		bl	CyDelay
 311              	.LBB6:
  88:voltages.c    ****   
  89:voltages.c    ****     for(uint16 i=0; i< N_SAMPLES; i++){   
 312              		.loc 1 89 0
 313 008e 0023     		movs	r3, #0
 314 0090 A7F85430 		strh	r3, [r7, #84]	@ movhi
 315 0094 0FE0     		b	.L12
 316              	.L13:
  90:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 317              		.loc 1 90 0 discriminator 3
 318 0096 B7F85440 		ldrh	r4, [r7, #84]
 319 009a FFF7FEFF 		bl	ADC_Read32
 320 009e 0246     		mov	r2, r0
 321 00a0 A300     		lsls	r3, r4, #2
 322 00a2 07F15801 		add	r1, r7, #88
 323 00a6 0B44     		add	r3, r3, r1
 324 00a8 43F8502C 		str	r2, [r3, #-80]
  89:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 325              		.loc 1 89 0 discriminator 3
 326 00ac B7F85430 		ldrh	r3, [r7, #84]
 327 00b0 0133     		adds	r3, r3, #1
 328 00b2 A7F85430 		strh	r3, [r7, #84]	@ movhi
 329              	.L12:
  89:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 330              		.loc 1 89 0 is_stmt 0 discriminator 1
 331 00b6 B7F85430 		ldrh	r3, [r7, #84]
 332 00ba 0A2B     		cmp	r3, #10
 333 00bc EBD9     		bls	.L13
 334              	.LBE6:
  91:voltages.c    ****     }
  92:voltages.c    ****     
  93:voltages.c    ****     // Converts the ADC output to Volts as a floating point number. 
  94:voltages.c    ****     // Get the median of readings and return that.
  95:voltages.c    ****     pressure.pressure_voltage_on = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Get
 335              		.loc 1 95 0 is_stmt 1
 336 00be 07F10803 		add	r3, r7, #8
 337 00c2 0B21     		movs	r1, #11
 338 00c4 1846     		mov	r0, r3
 339 00c6 FFF7FEFF 		bl	find_median32
 340 00ca 0346     		mov	r3, r0
 341 00cc 1846     		mov	r0, r3
 342 00ce FFF7FEFF 		bl	ADC_CountsTo_Volts
 343 00d2 0346     		mov	r3, r0
 344 00d4 7B64     		str	r3, [r7, #68]	@ float
  96:voltages.c    ****     
  97:voltages.c    ****     AMux_Stop();        // Disconnects all Analog Multiplex channels.
 345              		.loc 1 97 0
 346 00d6 FFF7FEFF 		bl	AMux_Start
  98:voltages.c    ****     
  99:voltages.c    ****     ADC_SaveConfig();   // Save the register configuration which are not retention.
 347              		.loc 1 99 0
 348 00da FFF7FEFF 		bl	ADC_SaveConfig
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 9


 100:voltages.c    ****     
 101:voltages.c    ****     ADC_Stop();         // Stops and powers down the ADC component and the internal clock if the ex
 349              		.loc 1 101 0
 350 00de FFF7FEFF 		bl	ADC_Stop
 102:voltages.c    ****     
 103:voltages.c    ****     Pressure_Voltage_Enable_Write(OFF);  // Pulls Pressure Transducer ADC pin low (turns it off).
 351              		.loc 1 103 0
 352 00e2 0020     		movs	r0, #0
 353 00e4 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 104:voltages.c    ****     // Calculate the pressure transducer current output.
 105:voltages.c    ****     // i=V/R where i= currrent, V= voltage, and R= resistance= 150 ohms. Divide by 1000 to get curr
 106:voltages.c    ****     // Should fall between 4 and 20mA
 107:voltages.c    ****     pressure.pressure_current = (pressure.pressure_voltage_on/ 150.0)*1000; 
 354              		.loc 1 107 0
 355 00e8 7B6C     		ldr	r3, [r7, #68]	@ float
 356 00ea 1846     		mov	r0, r3
 357 00ec FFF7FEFF 		bl	__aeabi_f2d
 358 00f0 21A3     		adr	r3, .L15
 359 00f2 D3E90023 		ldrd	r2, [r3]
 360 00f6 FFF7FEFF 		bl	__aeabi_ddiv
 361 00fa 0346     		mov	r3, r0
 362 00fc 0C46     		mov	r4, r1
 363 00fe 1846     		mov	r0, r3
 364 0100 2146     		mov	r1, r4
 365 0102 4FF00002 		mov	r2, #0
 366 0106 214B     		ldr	r3, .L15+20
 367 0108 FFF7FEFF 		bl	__aeabi_dmul
 368 010c 0346     		mov	r3, r0
 369 010e 0C46     		mov	r4, r1
 370 0110 1846     		mov	r0, r3
 371 0112 2146     		mov	r1, r4
 372 0114 FFF7FEFF 		bl	__aeabi_d2f
 373 0118 0346     		mov	r3, r0
 374 011a FB64     		str	r3, [r7, #76]	@ float
 108:voltages.c    ****     // Calculate the estimated depth from the pressure transducer.
 109:voltages.c    ****     // d = (Dmax*V/0.016R) - (Dmax/4) where d= depth, V= voltage, R= resistance= 150 ohms, Dmax = s
 110:voltages.c    ****     // Should fall between 0 and 10 ft
 111:voltages.c    ****     pressure.pressure_depth = ((10.0*pressure.pressure_voltage_on)/(0.016*150))-(10.0/4.0);   
 375              		.loc 1 111 0
 376 011c 7B6C     		ldr	r3, [r7, #68]	@ float
 377 011e 1846     		mov	r0, r3
 378 0120 FFF7FEFF 		bl	__aeabi_f2d
 379 0124 4FF00002 		mov	r2, #0
 380 0128 194B     		ldr	r3, .L15+24
 381 012a FFF7FEFF 		bl	__aeabi_dmul
 382 012e 0346     		mov	r3, r0
 383 0130 0C46     		mov	r4, r1
 384 0132 1846     		mov	r0, r3
 385 0134 2146     		mov	r1, r4
 386 0136 12A3     		adr	r3, .L15+8
 387 0138 D3E90023 		ldrd	r2, [r3]
 388 013c FFF7FEFF 		bl	__aeabi_ddiv
 389 0140 0346     		mov	r3, r0
 390 0142 0C46     		mov	r4, r1
 391 0144 1846     		mov	r0, r3
 392 0146 2146     		mov	r1, r4
 393 0148 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 10


 394 014c 114B     		ldr	r3, .L15+28
 395 014e FFF7FEFF 		bl	__aeabi_dsub
 396 0152 0346     		mov	r3, r0
 397 0154 0C46     		mov	r4, r1
 398 0156 1846     		mov	r0, r3
 399 0158 2146     		mov	r1, r4
 400 015a FFF7FEFF 		bl	__aeabi_d2f
 401 015e 0346     		mov	r3, r0
 402 0160 3B65     		str	r3, [r7, #80]	@ float
 112:voltages.c    ****     return pressure;
 403              		.loc 1 112 0
 404 0162 7B68     		ldr	r3, [r7, #4]
 405 0164 1C46     		mov	r4, r3
 406 0166 07F14403 		add	r3, r7, #68
 407 016a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 408 016c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 113:voltages.c    **** }
 409              		.loc 1 113 0
 410 0170 7868     		ldr	r0, [r7, #4]
 411 0172 5C37     		adds	r7, r7, #92
 412              		.cfi_def_cfa_offset 12
 413 0174 BD46     		mov	sp, r7
 414              		.cfi_def_cfa_register 13
 415              		@ sp needed
 416 0176 90BD     		pop	{r4, r7, pc}
 417              	.L16:
 418              		.align	3
 419              	.L15:
 420 0178 00000000 		.word	0
 421 017c 00C06240 		.word	1080213504
 422 0180 33333333 		.word	858993459
 423 0184 33330340 		.word	1073951539
 424 0188 0000C842 		.word	1120403456
 425 018c 00408F40 		.word	1083129856
 426 0190 00002440 		.word	1076101120
 427 0194 00000440 		.word	1074003968
 428              		.cfi_endproc
 429              	.LFE65:
 430              		.size	pressure_sensor_readings, .-pressure_sensor_readings
 431              		.section	.text.pressure_calculations,"ax",%progbits
 432              		.align	2
 433              		.global	pressure_calculations
 434              		.thumb
 435              		.thumb_func
 436              		.type	pressure_calculations, %function
 437              	pressure_calculations:
 438              	.LFB66:
 114:voltages.c    **** 
 115:voltages.c    **** // Function to calculate the pressure transducer current and depth estimate.
 116:voltages.c    **** pressure_t pressure_calculations(voltage_t voltage){
 439              		.loc 1 116 0
 440              		.cfi_startproc
 441              		@ args = 24, pretend = 16, frame = 24
 442              		@ frame_needed = 1, uses_anonymous_args = 0
 443 0000 84B0     		sub	sp, sp, #16
 444              		.cfi_def_cfa_offset 16
 445 0002 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 11


 446              		.cfi_def_cfa_offset 28
 447              		.cfi_offset 4, -28
 448              		.cfi_offset 7, -24
 449              		.cfi_offset 14, -20
 450 0004 87B0     		sub	sp, sp, #28
 451              		.cfi_def_cfa_offset 56
 452 0006 00AF     		add	r7, sp, #0
 453              		.cfi_def_cfa_register 7
 454 0008 7860     		str	r0, [r7, #4]
 455 000a 07F12C00 		add	r0, r7, #44
 456 000e 80E80E00 		stmia	r0, {r1, r2, r3}
 117:voltages.c    ****     // Create variable pressure of data structure type pressure_t.
 118:voltages.c    ****     pressure_t pressure;
 119:voltages.c    ****     
 120:voltages.c    ****     // Calculate the pressure transducer current output.
 121:voltages.c    ****     // i=V/R where i= currrent, V= voltage, and R= resistance= 150 ohms. Divide by 1000 to get curr
 122:voltages.c    ****     // Should fall between 4 and 20mA
 123:voltages.c    ****     pressure.pressure_current = (voltage.voltage_pressure/ 150.0)/1000; 
 457              		.loc 1 123 0
 458 0012 BB6B     		ldr	r3, [r7, #56]	@ float
 459 0014 1846     		mov	r0, r3
 460 0016 FFF7FEFF 		bl	__aeabi_f2d
 461 001a 23A3     		adr	r3, .L19
 462 001c D3E90023 		ldrd	r2, [r3]
 463 0020 FFF7FEFF 		bl	__aeabi_ddiv
 464 0024 0346     		mov	r3, r0
 465 0026 0C46     		mov	r4, r1
 466 0028 1846     		mov	r0, r3
 467 002a 2146     		mov	r1, r4
 468 002c 4FF00002 		mov	r2, #0
 469 0030 214B     		ldr	r3, .L19+16
 470 0032 FFF7FEFF 		bl	__aeabi_ddiv
 471 0036 0346     		mov	r3, r0
 472 0038 0C46     		mov	r4, r1
 473 003a 1846     		mov	r0, r3
 474 003c 2146     		mov	r1, r4
 475 003e FFF7FEFF 		bl	__aeabi_d2f
 476 0042 0346     		mov	r3, r0
 477 0044 3B61     		str	r3, [r7, #16]	@ float
 124:voltages.c    ****     // Calculate the estimated depth from the pressure transducer.
 125:voltages.c    ****     // d = (Dmax*V/0.016R) - (Dmax/4) where d= depth, V= voltage, R= resistance= 150 ohms, Dmax = s
 126:voltages.c    ****     // Should fall between 0 and 10 ft
 127:voltages.c    ****     pressure.pressure_depth = ((10.0*voltage.voltage_pressure)/(0.016*150))-(10.0/4.0); 
 478              		.loc 1 127 0
 479 0046 BB6B     		ldr	r3, [r7, #56]	@ float
 480 0048 1846     		mov	r0, r3
 481 004a FFF7FEFF 		bl	__aeabi_f2d
 482 004e 4FF00002 		mov	r2, #0
 483 0052 1A4B     		ldr	r3, .L19+20
 484 0054 FFF7FEFF 		bl	__aeabi_dmul
 485 0058 0346     		mov	r3, r0
 486 005a 0C46     		mov	r4, r1
 487 005c 1846     		mov	r0, r3
 488 005e 2146     		mov	r1, r4
 489 0060 13A3     		adr	r3, .L19+8
 490 0062 D3E90023 		ldrd	r2, [r3]
 491 0066 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 12


 492 006a 0346     		mov	r3, r0
 493 006c 0C46     		mov	r4, r1
 494 006e 1846     		mov	r0, r3
 495 0070 2146     		mov	r1, r4
 496 0072 4FF00002 		mov	r2, #0
 497 0076 124B     		ldr	r3, .L19+24
 498 0078 FFF7FEFF 		bl	__aeabi_dsub
 499 007c 0346     		mov	r3, r0
 500 007e 0C46     		mov	r4, r1
 501 0080 1846     		mov	r0, r3
 502 0082 2146     		mov	r1, r4
 503 0084 FFF7FEFF 		bl	__aeabi_d2f
 504 0088 0346     		mov	r3, r0
 505 008a 7B61     		str	r3, [r7, #20]	@ float
 128:voltages.c    ****     return pressure;
 506              		.loc 1 128 0
 507 008c 7B68     		ldr	r3, [r7, #4]
 508 008e 1C46     		mov	r4, r3
 509 0090 07F10803 		add	r3, r7, #8
 510 0094 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 511 0096 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 129:voltages.c    **** }
 512              		.loc 1 129 0
 513 009a 7868     		ldr	r0, [r7, #4]
 514 009c 1C37     		adds	r7, r7, #28
 515              		.cfi_def_cfa_offset 28
 516 009e BD46     		mov	sp, r7
 517              		.cfi_def_cfa_register 13
 518              		@ sp needed
 519 00a0 BDE89040 		pop	{r4, r7, lr}
 520              		.cfi_restore 14
 521              		.cfi_restore 7
 522              		.cfi_restore 4
 523              		.cfi_def_cfa_offset 16
 524 00a4 04B0     		add	sp, sp, #16
 525              		.cfi_def_cfa_offset 0
 526 00a6 7047     		bx	lr
 527              	.L20:
 528              		.align	3
 529              	.L19:
 530 00a8 00000000 		.word	0
 531 00ac 00C06240 		.word	1080213504
 532 00b0 33333333 		.word	858993459
 533 00b4 33330340 		.word	1073951539
 534 00b8 00408F40 		.word	1083129856
 535 00bc 00002440 		.word	1076101120
 536 00c0 00000440 		.word	1074003968
 537              		.cfi_endproc
 538              	.LFE66:
 539              		.size	pressure_calculations, .-pressure_calculations
 540              		.section	.text.sort32,"ax",%progbits
 541              		.align	2
 542              		.global	sort32
 543              		.thumb
 544              		.thumb_func
 545              		.type	sort32, %function
 546              	sort32:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 13


 547              	.LFB67:
 130:voltages.c    ****     
 131:voltages.c    ****     
 132:voltages.c    **** 
 133:voltages.c    **** // Function to sort the elements in the level readings array
 134:voltages.c    **** void sort32(int32 a[],int32 n) { 
 548              		.loc 1 134 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 16
 551              		@ frame_needed = 1, uses_anonymous_args = 0
 552 0000 80B5     		push	{r7, lr}
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 7, -8
 555              		.cfi_offset 14, -4
 556 0002 84B0     		sub	sp, sp, #16
 557              		.cfi_def_cfa_offset 24
 558 0004 00AF     		add	r7, sp, #0
 559              		.cfi_def_cfa_register 7
 560 0006 7860     		str	r0, [r7, #4]
 561 0008 3960     		str	r1, [r7]
 135:voltages.c    ****    int32 i,j;
 136:voltages.c    **** 
 137:voltages.c    ****    for(i = 0;i < n-1;i++) {
 562              		.loc 1 137 0
 563 000a 0023     		movs	r3, #0
 564 000c FB60     		str	r3, [r7, #12]
 565 000e 28E0     		b	.L22
 566              	.L26:
 138:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 567              		.loc 1 138 0
 568 0010 0023     		movs	r3, #0
 569 0012 BB60     		str	r3, [r7, #8]
 570 0014 1BE0     		b	.L23
 571              	.L25:
 139:voltages.c    ****          if(a[j] > a[j+1])
 572              		.loc 1 139 0
 573 0016 BB68     		ldr	r3, [r7, #8]
 574 0018 9B00     		lsls	r3, r3, #2
 575 001a 7A68     		ldr	r2, [r7, #4]
 576 001c 1344     		add	r3, r3, r2
 577 001e 1A68     		ldr	r2, [r3]
 578 0020 BB68     		ldr	r3, [r7, #8]
 579 0022 0133     		adds	r3, r3, #1
 580 0024 9B00     		lsls	r3, r3, #2
 581 0026 7968     		ldr	r1, [r7, #4]
 582 0028 0B44     		add	r3, r3, r1
 583 002a 1B68     		ldr	r3, [r3]
 584 002c 9A42     		cmp	r2, r3
 585 002e 0BDD     		ble	.L24
 140:voltages.c    ****             swap32(&a[j],&a[j+1]);  // Swap the address of a[j] and a[j+1]
 586              		.loc 1 140 0
 587 0030 BB68     		ldr	r3, [r7, #8]
 588 0032 9B00     		lsls	r3, r3, #2
 589 0034 7A68     		ldr	r2, [r7, #4]
 590 0036 D018     		adds	r0, r2, r3
 591 0038 BB68     		ldr	r3, [r7, #8]
 592 003a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 14


 593 003c 9B00     		lsls	r3, r3, #2
 594 003e 7A68     		ldr	r2, [r7, #4]
 595 0040 1344     		add	r3, r3, r2
 596 0042 1946     		mov	r1, r3
 597 0044 FFF7FEFF 		bl	swap32
 598              	.L24:
 138:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 599              		.loc 1 138 0 discriminator 2
 600 0048 BB68     		ldr	r3, [r7, #8]
 601 004a 0133     		adds	r3, r3, #1
 602 004c BB60     		str	r3, [r7, #8]
 603              	.L23:
 138:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 604              		.loc 1 138 0 is_stmt 0 discriminator 1
 605 004e 3A68     		ldr	r2, [r7]
 606 0050 FB68     		ldr	r3, [r7, #12]
 607 0052 D31A     		subs	r3, r2, r3
 608 0054 5A1E     		subs	r2, r3, #1
 609 0056 BB68     		ldr	r3, [r7, #8]
 610 0058 9A42     		cmp	r2, r3
 611 005a DCDC     		bgt	.L25
 137:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 612              		.loc 1 137 0 is_stmt 1 discriminator 2
 613 005c FB68     		ldr	r3, [r7, #12]
 614 005e 0133     		adds	r3, r3, #1
 615 0060 FB60     		str	r3, [r7, #12]
 616              	.L22:
 137:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 617              		.loc 1 137 0 is_stmt 0 discriminator 1
 618 0062 3B68     		ldr	r3, [r7]
 619 0064 5A1E     		subs	r2, r3, #1
 620 0066 FB68     		ldr	r3, [r7, #12]
 621 0068 9A42     		cmp	r2, r3
 622 006a D1DC     		bgt	.L26
 141:voltages.c    ****       }
 142:voltages.c    ****    }
 143:voltages.c    **** }
 623              		.loc 1 143 0 is_stmt 1
 624 006c 00BF     		nop
 625 006e 1037     		adds	r7, r7, #16
 626              		.cfi_def_cfa_offset 8
 627 0070 BD46     		mov	sp, r7
 628              		.cfi_def_cfa_register 13
 629              		@ sp needed
 630 0072 80BD     		pop	{r7, pc}
 631              		.cfi_endproc
 632              	.LFE67:
 633              		.size	sort32, .-sort32
 634              		.section	.text.swap32,"ax",%progbits
 635              		.align	2
 636              		.global	swap32
 637              		.thumb
 638              		.thumb_func
 639              		.type	swap32, %function
 640              	swap32:
 641              	.LFB68:
 144:voltages.c    **** 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 15


 145:voltages.c    **** // Function to swap elements in the level readings array in order to sort them
 146:voltages.c    **** void swap32(int32 *p,int32 *q){
 642              		.loc 1 146 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 16
 645              		@ frame_needed = 1, uses_anonymous_args = 0
 646              		@ link register save eliminated.
 647 0000 80B4     		push	{r7}
 648              		.cfi_def_cfa_offset 4
 649              		.cfi_offset 7, -4
 650 0002 85B0     		sub	sp, sp, #20
 651              		.cfi_def_cfa_offset 24
 652 0004 00AF     		add	r7, sp, #0
 653              		.cfi_def_cfa_register 7
 654 0006 7860     		str	r0, [r7, #4]
 655 0008 3960     		str	r1, [r7]
 147:voltages.c    ****    int32 t;
 148:voltages.c    ****    
 149:voltages.c    ****    t=*p; 
 656              		.loc 1 149 0
 657 000a 7B68     		ldr	r3, [r7, #4]
 658 000c 1B68     		ldr	r3, [r3]
 659 000e FB60     		str	r3, [r7, #12]
 150:voltages.c    ****    *p=*q; 
 660              		.loc 1 150 0
 661 0010 3B68     		ldr	r3, [r7]
 662 0012 1A68     		ldr	r2, [r3]
 663 0014 7B68     		ldr	r3, [r7, #4]
 664 0016 1A60     		str	r2, [r3]
 151:voltages.c    ****    *q=t;
 665              		.loc 1 151 0
 666 0018 3B68     		ldr	r3, [r7]
 667 001a FA68     		ldr	r2, [r7, #12]
 668 001c 1A60     		str	r2, [r3]
 152:voltages.c    **** }
 669              		.loc 1 152 0
 670 001e 00BF     		nop
 671 0020 1437     		adds	r7, r7, #20
 672              		.cfi_def_cfa_offset 4
 673 0022 BD46     		mov	sp, r7
 674              		.cfi_def_cfa_register 13
 675              		@ sp needed
 676 0024 80BC     		pop	{r7}
 677              		.cfi_restore 7
 678              		.cfi_def_cfa_offset 0
 679 0026 7047     		bx	lr
 680              		.cfi_endproc
 681              	.LFE68:
 682              		.size	swap32, .-swap32
 683              		.global	__aeabi_i2d
 684              		.global	__aeabi_d2iz
 685              		.section	.text.find_median32,"ax",%progbits
 686              		.align	2
 687              		.global	find_median32
 688              		.thumb
 689              		.thumb_func
 690              		.type	find_median32, %function
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 16


 691              	find_median32:
 692              	.LFB69:
 153:voltages.c    **** 
 154:voltages.c    **** // Function to calculate the median of the array, after array is sorted
 155:voltages.c    **** int32 find_median32(int32 array[] , int32 n)
 156:voltages.c    **** {
 693              		.loc 1 156 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 16
 696              		@ frame_needed = 1, uses_anonymous_args = 0
 697 0000 90B5     		push	{r4, r7, lr}
 698              		.cfi_def_cfa_offset 12
 699              		.cfi_offset 4, -12
 700              		.cfi_offset 7, -8
 701              		.cfi_offset 14, -4
 702 0002 85B0     		sub	sp, sp, #20
 703              		.cfi_def_cfa_offset 32
 704 0004 00AF     		add	r7, sp, #0
 705              		.cfi_def_cfa_register 7
 706 0006 7860     		str	r0, [r7, #4]
 707 0008 3960     		str	r1, [r7]
 157:voltages.c    ****     int32 median=0;
 708              		.loc 1 157 0
 709 000a 0023     		movs	r3, #0
 710 000c FB60     		str	r3, [r7, #12]
 158:voltages.c    ****     sort32(array,n);
 711              		.loc 1 158 0
 712 000e 3968     		ldr	r1, [r7]
 713 0010 7868     		ldr	r0, [r7, #4]
 714 0012 FFF7FEFF 		bl	sort32
 159:voltages.c    ****     
 160:voltages.c    ****     // If number of elements are even
 161:voltages.c    ****     if(n%2 == 0)
 715              		.loc 1 161 0
 716 0016 3B68     		ldr	r3, [r7]
 717 0018 03F00103 		and	r3, r3, #1
 718 001c 002B     		cmp	r3, #0
 719 001e 23D1     		bne	.L29
 162:voltages.c    ****         // Median is the average of the  two middle sorted numbers
 163:voltages.c    ****         median = (array[(n-1)/2] + array[n/2])/2.0;
 720              		.loc 1 163 0
 721 0020 3B68     		ldr	r3, [r7]
 722 0022 013B     		subs	r3, r3, #1
 723 0024 DA0F     		lsrs	r2, r3, #31
 724 0026 1344     		add	r3, r3, r2
 725 0028 5B10     		asrs	r3, r3, #1
 726 002a 9B00     		lsls	r3, r3, #2
 727 002c 7A68     		ldr	r2, [r7, #4]
 728 002e 1344     		add	r3, r3, r2
 729 0030 1A68     		ldr	r2, [r3]
 730 0032 3B68     		ldr	r3, [r7]
 731 0034 D90F     		lsrs	r1, r3, #31
 732 0036 0B44     		add	r3, r3, r1
 733 0038 5B10     		asrs	r3, r3, #1
 734 003a 9B00     		lsls	r3, r3, #2
 735 003c 7968     		ldr	r1, [r7, #4]
 736 003e 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 17


 737 0040 1B68     		ldr	r3, [r3]
 738 0042 1344     		add	r3, r3, r2
 739 0044 1846     		mov	r0, r3
 740 0046 FFF7FEFF 		bl	__aeabi_i2d
 741 004a 4FF00002 		mov	r2, #0
 742 004e 4FF08043 		mov	r3, #1073741824
 743 0052 FFF7FEFF 		bl	__aeabi_ddiv
 744 0056 0346     		mov	r3, r0
 745 0058 0C46     		mov	r4, r1
 746 005a 1846     		mov	r0, r3
 747 005c 2146     		mov	r1, r4
 748 005e FFF7FEFF 		bl	__aeabi_d2iz
 749 0062 0346     		mov	r3, r0
 750 0064 FB60     		str	r3, [r7, #12]
 751 0066 08E0     		b	.L30
 752              	.L29:
 164:voltages.c    ****     // If number of elements are odd
 165:voltages.c    ****     else
 166:voltages.c    ****         // Median is the the middle sorted number. 
 167:voltages.c    ****         median = array[n/2];
 753              		.loc 1 167 0
 754 0068 3B68     		ldr	r3, [r7]
 755 006a DA0F     		lsrs	r2, r3, #31
 756 006c 1344     		add	r3, r3, r2
 757 006e 5B10     		asrs	r3, r3, #1
 758 0070 9B00     		lsls	r3, r3, #2
 759 0072 7A68     		ldr	r2, [r7, #4]
 760 0074 1344     		add	r3, r3, r2
 761 0076 1B68     		ldr	r3, [r3]
 762 0078 FB60     		str	r3, [r7, #12]
 763              	.L30:
 168:voltages.c    ****     
 169:voltages.c    ****     return median;
 764              		.loc 1 169 0
 765 007a FB68     		ldr	r3, [r7, #12]
 170:voltages.c    **** }
 766              		.loc 1 170 0
 767 007c 1846     		mov	r0, r3
 768 007e 1437     		adds	r7, r7, #20
 769              		.cfi_def_cfa_offset 12
 770 0080 BD46     		mov	sp, r7
 771              		.cfi_def_cfa_register 13
 772              		@ sp needed
 773 0082 90BD     		pop	{r4, r7, pc}
 774              		.cfi_endproc
 775              	.LFE69:
 776              		.size	find_median32, .-find_median32
 777              		.section	.rodata
 778              		.align	2
 779              	.LC0:
 780 0000 54455354 		.ascii	"TEST_ANALOG_VOLTAGES\000"
 780      5F414E41 
 780      4C4F475F 
 780      564F4C54 
 780      41474553 
 781 0015 000000   		.align	2
 782              	.LC1:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 18


 783 0018 56424154 		.ascii	"VBAT=%.3f,VSOL=%.3f,CHRG=%.3f\000"
 783      3D252E33 
 783      662C5653 
 783      4F4C3D25 
 783      2E33662C 
 784              		.section	.text.voltages_test,"ax",%progbits
 785              		.align	2
 786              		.global	voltages_test
 787              		.thumb
 788              		.thumb_func
 789              		.type	voltages_test, %function
 790              	voltages_test:
 791              	.LFB70:
 171:voltages.c    **** 
 172:voltages.c    **** // Test the voltage readings
 173:voltages.c    **** test_t voltages_test(){
 792              		.loc 1 173 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 416
 795              		@ frame_needed = 1, uses_anonymous_args = 0
 796 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 797              		.cfi_def_cfa_offset 24
 798              		.cfi_offset 4, -24
 799              		.cfi_offset 5, -20
 800              		.cfi_offset 7, -16
 801              		.cfi_offset 8, -12
 802              		.cfi_offset 9, -8
 803              		.cfi_offset 14, -4
 804 0004 EEB0     		sub	sp, sp, #440
 805              		.cfi_def_cfa_offset 464
 806 0006 06AF     		add	r7, sp, #24
 807              		.cfi_def_cfa 7, 440
 808 0008 3B1D     		adds	r3, r7, #4
 809 000a 1860     		str	r0, [r3]
 174:voltages.c    ****     // Create variable test of the data structure test_t
 175:voltages.c    ****     test_t test;
 176:voltages.c    ****     test.status = 0;
 810              		.loc 1 176 0
 811 000c 07F11C03 		add	r3, r7, #28
 812 0010 0022     		movs	r2, #0
 813 0012 83F88020 		strb	r2, [r3, #128]
 177:voltages.c    ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_ANALOG_VOLTAGES");
 814              		.loc 1 177 0
 815 0016 07F11C03 		add	r3, r7, #28
 816 001a 264A     		ldr	r2, .L34
 817 001c 1C46     		mov	r4, r3
 818 001e 1546     		mov	r5, r2
 819 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 820 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 821 0024 95E80300 		ldmia	r5, {r0, r1}
 822 0028 2060     		str	r0, [r4]
 823 002a 0434     		adds	r4, r4, #4
 824 002c 2170     		strb	r1, [r4]
 178:voltages.c    ****     
 179:voltages.c    ****     voltage_t voltage = voltage_take_readings();
 825              		.loc 1 179 0
 826 002e 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 19


 827 0032 1846     		mov	r0, r3
 828 0034 FFF7FEFF 		bl	voltage_take_readings
 180:voltages.c    ****     
 181:voltages.c    ****     //do some checks here if you want the test to meet some voltage requirement
 182:voltages.c    ****     
 183:voltages.c    ****     snprintf(test.reason,sizeof(test.reason),"VBAT=%.3f,VSOL=%.3f,CHRG=%.3f",
 184:voltages.c    ****             voltage.voltage_battery,
 829              		.loc 1 184 0
 830 0038 07F10803 		add	r3, r7, #8
 831 003c 1B68     		ldr	r3, [r3]	@ float
 183:voltages.c    ****             voltage.voltage_battery,
 832              		.loc 1 183 0
 833 003e 1846     		mov	r0, r3
 834 0040 FFF7FEFF 		bl	__aeabi_f2d
 835 0044 0446     		mov	r4, r0
 836 0046 0D46     		mov	r5, r1
 185:voltages.c    ****             voltage.voltage_solar,
 837              		.loc 1 185 0
 838 0048 07F10803 		add	r3, r7, #8
 839 004c 5B68     		ldr	r3, [r3, #4]	@ float
 183:voltages.c    ****             voltage.voltage_battery,
 840              		.loc 1 183 0
 841 004e 1846     		mov	r0, r3
 842 0050 FFF7FEFF 		bl	__aeabi_f2d
 843 0054 8046     		mov	r8, r0
 844 0056 8946     		mov	r9, r1
 186:voltages.c    ****             voltage.voltage_charge_current);
 845              		.loc 1 186 0
 846 0058 07F10803 		add	r3, r7, #8
 847 005c 9B68     		ldr	r3, [r3, #8]	@ float
 183:voltages.c    ****             voltage.voltage_battery,
 848              		.loc 1 183 0
 849 005e 1846     		mov	r0, r3
 850 0060 FFF7FEFF 		bl	__aeabi_f2d
 851 0064 0246     		mov	r2, r0
 852 0066 0B46     		mov	r3, r1
 853 0068 07F11C01 		add	r1, r7, #28
 854 006c 01F18100 		add	r0, r1, #129
 855 0070 CDE90423 		strd	r2, [sp, #16]
 856 0074 CDE90289 		strd	r8, [sp, #8]
 857 0078 CDE90045 		strd	r4, [sp]
 858 007c 0E4A     		ldr	r2, .L34+4
 859 007e 4FF48071 		mov	r1, #256
 860 0082 FFF7FEFF 		bl	snprintf
 187:voltages.c    ****     
 188:voltages.c    ****     test.status = 1;
 861              		.loc 1 188 0
 862 0086 07F11C03 		add	r3, r7, #28
 863 008a 0122     		movs	r2, #1
 864 008c 83F88020 		strb	r2, [r3, #128]
 189:voltages.c    ****     
 190:voltages.c    ****     return test;
 865              		.loc 1 190 0
 866 0090 3B1D     		adds	r3, r7, #4
 867 0092 1A68     		ldr	r2, [r3]
 868 0094 07F11C03 		add	r3, r7, #28
 869 0098 1046     		mov	r0, r2
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 20


 870 009a 1946     		mov	r1, r3
 871 009c 40F28113 		movw	r3, #385
 872 00a0 1A46     		mov	r2, r3
 873 00a2 FFF7FEFF 		bl	memcpy
 191:voltages.c    **** }
 874              		.loc 1 191 0
 875 00a6 3B1D     		adds	r3, r7, #4
 876 00a8 1868     		ldr	r0, [r3]
 877 00aa 07F5D077 		add	r7, r7, #416
 878              		.cfi_def_cfa_offset 24
 879 00ae BD46     		mov	sp, r7
 880              		.cfi_def_cfa_register 13
 881              		@ sp needed
 882 00b0 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 883              	.L35:
 884              		.align	2
 885              	.L34:
 886 00b4 00000000 		.word	.LC0
 887 00b8 18000000 		.word	.LC1
 888              		.cfi_endproc
 889              	.LFE70:
 890              		.size	voltages_test, .-voltages_test
 891              		.section	.rodata
 892 0036 0000     		.align	2
 893              	.LC2:
 894 0038 54455354 		.ascii	"TEST_PRESSURE_SENSOR\000"
 894      5F505245 
 894      53535552 
 894      455F5345 
 894      4E534F52 
 895 004d 000000   		.align	2
 896              	.LC3:
 897 0050 50524553 		.ascii	"PRESSURE=%.3f,PRES_CURRENT=%.3f,PRES_DEPTH=%.3f\000"
 897      53555245 
 897      3D252E33 
 897      662C5052 
 897      45535F43 
 898              		.global	__aeabi_fcmpeq
 899              		.section	.text.pressure_sensor_test,"ax",%progbits
 900              		.align	2
 901              		.global	pressure_sensor_test
 902              		.thumb
 903              		.thumb_func
 904              		.type	pressure_sensor_test, %function
 905              	pressure_sensor_test:
 906              	.LFB71:
 192:voltages.c    **** 
 193:voltages.c    **** // Test the pressure sensor readings
 194:voltages.c    **** test_t pressure_sensor_test(){
 907              		.loc 1 194 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 416
 910              		@ frame_needed = 1, uses_anonymous_args = 0
 911 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 912              		.cfi_def_cfa_offset 24
 913              		.cfi_offset 4, -24
 914              		.cfi_offset 5, -20
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 21


 915              		.cfi_offset 7, -16
 916              		.cfi_offset 8, -12
 917              		.cfi_offset 9, -8
 918              		.cfi_offset 14, -4
 919 0004 EEB0     		sub	sp, sp, #440
 920              		.cfi_def_cfa_offset 464
 921 0006 06AF     		add	r7, sp, #24
 922              		.cfi_def_cfa 7, 440
 923 0008 3B1D     		adds	r3, r7, #4
 924 000a 1860     		str	r0, [r3]
 195:voltages.c    ****     // Create variable test of the data structure test_t
 196:voltages.c    ****     test_t test;
 197:voltages.c    ****     test.status = 0;
 925              		.loc 1 197 0
 926 000c 07F11C03 		add	r3, r7, #28
 927 0010 0022     		movs	r2, #0
 928 0012 83F88020 		strb	r2, [r3, #128]
 198:voltages.c    ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_PRESSURE_SENSOR");
 929              		.loc 1 198 0
 930 0016 07F11C03 		add	r3, r7, #28
 931 001a 374A     		ldr	r2, .L41
 932 001c 1C46     		mov	r4, r3
 933 001e 1546     		mov	r5, r2
 934 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 935 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 936 0024 95E80300 		ldmia	r5, {r0, r1}
 937 0028 2060     		str	r0, [r4]
 938 002a 0434     		adds	r4, r4, #4
 939 002c 2170     		strb	r1, [r4]
 199:voltages.c    ****     
 200:voltages.c    ****     pressure_t pressure = pressure_sensor_readings();
 940              		.loc 1 200 0
 941 002e 07F10C03 		add	r3, r7, #12
 942 0032 1846     		mov	r0, r3
 943 0034 FFF7FEFF 		bl	pressure_sensor_readings
 201:voltages.c    ****     
 202:voltages.c    ****     //do some checks here if you want the test to meet some voltage requirement
 203:voltages.c    ****     
 204:voltages.c    ****     snprintf(test.reason,sizeof(test.reason),"PRESSURE=%.3f,PRES_CURRENT=%.3f,PRES_DEPTH=%.3f",
 205:voltages.c    ****             pressure.pressure_voltage_on,
 944              		.loc 1 205 0
 945 0038 07F10C03 		add	r3, r7, #12
 946 003c 1B68     		ldr	r3, [r3]	@ float
 204:voltages.c    ****             pressure.pressure_voltage_on,
 947              		.loc 1 204 0
 948 003e 1846     		mov	r0, r3
 949 0040 FFF7FEFF 		bl	__aeabi_f2d
 950 0044 0446     		mov	r4, r0
 951 0046 0D46     		mov	r5, r1
 206:voltages.c    ****             pressure.pressure_current,
 952              		.loc 1 206 0
 953 0048 07F10C03 		add	r3, r7, #12
 954 004c 9B68     		ldr	r3, [r3, #8]	@ float
 204:voltages.c    ****             pressure.pressure_voltage_on,
 955              		.loc 1 204 0
 956 004e 1846     		mov	r0, r3
 957 0050 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 22


 958 0054 8046     		mov	r8, r0
 959 0056 8946     		mov	r9, r1
 207:voltages.c    ****             pressure.pressure_depth);
 960              		.loc 1 207 0
 961 0058 07F10C03 		add	r3, r7, #12
 962 005c DB68     		ldr	r3, [r3, #12]	@ float
 204:voltages.c    ****             pressure.pressure_voltage_on,
 963              		.loc 1 204 0
 964 005e 1846     		mov	r0, r3
 965 0060 FFF7FEFF 		bl	__aeabi_f2d
 966 0064 0246     		mov	r2, r0
 967 0066 0B46     		mov	r3, r1
 968 0068 07F11C01 		add	r1, r7, #28
 969 006c 01F18100 		add	r0, r1, #129
 970 0070 CDE90423 		strd	r2, [sp, #16]
 971 0074 CDE90289 		strd	r8, [sp, #8]
 972 0078 CDE90045 		strd	r4, [sp]
 973 007c 1F4A     		ldr	r2, .L41+4
 974 007e 4FF48071 		mov	r1, #256
 975 0082 FFF7FEFF 		bl	snprintf
 208:voltages.c    ****     pressure.pressure_voltage_on = floorf(pressure.pressure_voltage_on * 100) / 100;
 976              		.loc 1 208 0
 977 0086 07F10C03 		add	r3, r7, #12
 978 008a 1B68     		ldr	r3, [r3]	@ float
 979 008c 1C49     		ldr	r1, .L41+8
 980 008e 1846     		mov	r0, r3
 981 0090 FFF7FEFF 		bl	__aeabi_fmul
 982 0094 0346     		mov	r3, r0
 983 0096 1846     		mov	r0, r3
 984 0098 FFF7FEFF 		bl	floorf
 985 009c 0346     		mov	r3, r0
 986 009e 1849     		ldr	r1, .L41+8
 987 00a0 1846     		mov	r0, r3
 988 00a2 FFF7FEFF 		bl	__aeabi_fdiv
 989 00a6 0346     		mov	r3, r0
 990 00a8 1A46     		mov	r2, r3
 991 00aa 07F10C03 		add	r3, r7, #12
 992 00ae 1A60     		str	r2, [r3]	@ float
 209:voltages.c    ****     if (pressure.pressure_voltage_off != pressure.pressure_voltage_on) {
 993              		.loc 1 209 0
 994 00b0 07F10C03 		add	r3, r7, #12
 995 00b4 5A68     		ldr	r2, [r3, #4]	@ float
 996 00b6 07F10C03 		add	r3, r7, #12
 997 00ba 1B68     		ldr	r3, [r3]	@ float
 998 00bc 1946     		mov	r1, r3
 999 00be 1046     		mov	r0, r2
 1000 00c0 FFF7FEFF 		bl	__aeabi_fcmpeq
 1001 00c4 0346     		mov	r3, r0
 1002 00c6 002B     		cmp	r3, #0
 1003 00c8 04D1     		bne	.L37
 210:voltages.c    ****         test.status = 1;
 1004              		.loc 1 210 0
 1005 00ca 07F11C03 		add	r3, r7, #28
 1006 00ce 0122     		movs	r2, #1
 1007 00d0 83F88020 		strb	r2, [r3, #128]
 1008              	.L37:
 211:voltages.c    ****     }
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 23


 212:voltages.c    ****     
 213:voltages.c    ****     return test;
 1009              		.loc 1 213 0
 1010 00d4 3B1D     		adds	r3, r7, #4
 1011 00d6 1A68     		ldr	r2, [r3]
 1012 00d8 07F11C03 		add	r3, r7, #28
 1013 00dc 1046     		mov	r0, r2
 1014 00de 1946     		mov	r1, r3
 1015 00e0 40F28113 		movw	r3, #385
 1016 00e4 1A46     		mov	r2, r3
 1017 00e6 FFF7FEFF 		bl	memcpy
 214:voltages.c    **** }
 1018              		.loc 1 214 0
 1019 00ea 3B1D     		adds	r3, r7, #4
 1020 00ec 1868     		ldr	r0, [r3]
 1021 00ee 07F5D077 		add	r7, r7, #416
 1022              		.cfi_def_cfa_offset 24
 1023 00f2 BD46     		mov	sp, r7
 1024              		.cfi_def_cfa_register 13
 1025              		@ sp needed
 1026 00f4 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 1027              	.L42:
 1028              		.align	2
 1029              	.L41:
 1030 00f8 38000000 		.word	.LC2
 1031 00fc 50000000 		.word	.LC3
 1032 0100 0000C842 		.word	1120403456
 1033              		.cfi_endproc
 1034              	.LFE71:
 1035              		.size	pressure_sensor_test, .-pressure_sensor_test
 1036              		.text
 1037              	.Letext0:
 1038              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1039              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1040              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1041              		.file 5 "testing.h"
 1042              		.file 6 "voltages.h"
 1043              		.file 7 "data.h"
 1044              		.file 8 "modem.h"
 1045              		.file 9 "notoriOS.h"
 1046              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 1047              		.section	.debug_info,"",%progbits
 1048              	.Ldebug_info0:
 1049 0000 5F080000 		.4byte	0x85f
 1050 0004 0400     		.2byte	0x4
 1051 0006 00000000 		.4byte	.Ldebug_abbrev0
 1052 000a 04       		.byte	0x4
 1053 000b 01       		.uleb128 0x1
 1054 000c AE000000 		.4byte	.LASF109
 1055 0010 0C       		.byte	0xc
 1056 0011 55010000 		.4byte	.LASF110
 1057 0015 A3030000 		.4byte	.LASF111
 1058 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1059 001d 00000000 		.4byte	0
 1060 0021 00000000 		.4byte	.Ldebug_line0
 1061 0025 02       		.uleb128 0x2
 1062 0026 01       		.byte	0x1
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 24


 1063 0027 06       		.byte	0x6
 1064 0028 24030000 		.4byte	.LASF0
 1065 002c 02       		.uleb128 0x2
 1066 002d 01       		.byte	0x1
 1067 002e 08       		.byte	0x8
 1068 002f BF020000 		.4byte	.LASF1
 1069 0033 02       		.uleb128 0x2
 1070 0034 02       		.byte	0x2
 1071 0035 05       		.byte	0x5
 1072 0036 86000000 		.4byte	.LASF2
 1073 003a 02       		.uleb128 0x2
 1074 003b 02       		.byte	0x2
 1075 003c 07       		.byte	0x7
 1076 003d F7030000 		.4byte	.LASF3
 1077 0041 03       		.uleb128 0x3
 1078 0042 25050000 		.4byte	.LASF9
 1079 0046 02       		.byte	0x2
 1080 0047 3F       		.byte	0x3f
 1081 0048 4C000000 		.4byte	0x4c
 1082 004c 02       		.uleb128 0x2
 1083 004d 04       		.byte	0x4
 1084 004e 05       		.byte	0x5
 1085 004f 42020000 		.4byte	.LASF4
 1086 0053 02       		.uleb128 0x2
 1087 0054 04       		.byte	0x4
 1088 0055 07       		.byte	0x7
 1089 0056 DF040000 		.4byte	.LASF5
 1090 005a 02       		.uleb128 0x2
 1091 005b 08       		.byte	0x8
 1092 005c 05       		.byte	0x5
 1093 005d 22020000 		.4byte	.LASF6
 1094 0061 02       		.uleb128 0x2
 1095 0062 08       		.byte	0x8
 1096 0063 07       		.byte	0x7
 1097 0064 30030000 		.4byte	.LASF7
 1098 0068 04       		.uleb128 0x4
 1099 0069 04       		.byte	0x4
 1100 006a 05       		.byte	0x5
 1101 006b 696E7400 		.ascii	"int\000"
 1102 006f 02       		.uleb128 0x2
 1103 0070 04       		.byte	0x4
 1104 0071 07       		.byte	0x7
 1105 0072 65030000 		.4byte	.LASF8
 1106 0076 03       		.uleb128 0x3
 1107 0077 79040000 		.4byte	.LASF10
 1108 007b 03       		.byte	0x3
 1109 007c 2C       		.byte	0x2c
 1110 007d 41000000 		.4byte	0x41
 1111 0081 05       		.uleb128 0x5
 1112 0082 BB010000 		.4byte	.LASF11
 1113 0086 04       		.byte	0x4
 1114 0087 9201     		.2byte	0x192
 1115 0089 2C000000 		.4byte	0x2c
 1116 008d 05       		.uleb128 0x5
 1117 008e CD040000 		.4byte	.LASF12
 1118 0092 04       		.byte	0x4
 1119 0093 9301     		.2byte	0x193
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 25


 1120 0095 3A000000 		.4byte	0x3a
 1121 0099 05       		.uleb128 0x5
 1122 009a 30020000 		.4byte	.LASF13
 1123 009e 04       		.byte	0x4
 1124 009f 9601     		.2byte	0x196
 1125 00a1 33000000 		.4byte	0x33
 1126 00a5 05       		.uleb128 0x5
 1127 00a6 1C020000 		.4byte	.LASF14
 1128 00aa 04       		.byte	0x4
 1129 00ab 9701     		.2byte	0x197
 1130 00ad 4C000000 		.4byte	0x4c
 1131 00b1 02       		.uleb128 0x2
 1132 00b2 04       		.byte	0x4
 1133 00b3 04       		.byte	0x4
 1134 00b4 08020000 		.4byte	.LASF15
 1135 00b8 02       		.uleb128 0x2
 1136 00b9 08       		.byte	0x8
 1137 00ba 04       		.byte	0x4
 1138 00bb F1040000 		.4byte	.LASF16
 1139 00bf 02       		.uleb128 0x2
 1140 00c0 01       		.byte	0x1
 1141 00c1 08       		.byte	0x8
 1142 00c2 36020000 		.4byte	.LASF17
 1143 00c6 02       		.uleb128 0x2
 1144 00c7 08       		.byte	0x8
 1145 00c8 04       		.byte	0x4
 1146 00c9 AA020000 		.4byte	.LASF18
 1147 00cd 02       		.uleb128 0x2
 1148 00ce 04       		.byte	0x4
 1149 00cf 07       		.byte	0x7
 1150 00d0 9D000000 		.4byte	.LASF19
 1151 00d4 06       		.uleb128 0x6
 1152 00d5 BF000000 		.4byte	0xbf
 1153 00d9 E4000000 		.4byte	0xe4
 1154 00dd 07       		.uleb128 0x7
 1155 00de CD000000 		.4byte	0xcd
 1156 00e2 17       		.byte	0x17
 1157 00e3 00       		.byte	0
 1158 00e4 08       		.uleb128 0x8
 1159 00e5 8101     		.2byte	0x181
 1160 00e7 05       		.byte	0x5
 1161 00e8 0A       		.byte	0xa
 1162 00e9 12010000 		.4byte	0x112
 1163 00ed 09       		.uleb128 0x9
 1164 00ee 58050000 		.4byte	.LASF20
 1165 00f2 05       		.byte	0x5
 1166 00f3 0C       		.byte	0xc
 1167 00f4 12010000 		.4byte	0x112
 1168 00f8 00       		.byte	0
 1169 00f9 09       		.uleb128 0x9
 1170 00fa 22040000 		.4byte	.LASF21
 1171 00fe 05       		.byte	0x5
 1172 00ff 0D       		.byte	0xd
 1173 0100 81000000 		.4byte	0x81
 1174 0104 80       		.byte	0x80
 1175 0105 09       		.uleb128 0x9
 1176 0106 3B020000 		.4byte	.LASF22
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 26


 1177 010a 05       		.byte	0x5
 1178 010b 0F       		.byte	0xf
 1179 010c 22010000 		.4byte	0x122
 1180 0110 81       		.byte	0x81
 1181 0111 00       		.byte	0
 1182 0112 06       		.uleb128 0x6
 1183 0113 BF000000 		.4byte	0xbf
 1184 0117 22010000 		.4byte	0x122
 1185 011b 07       		.uleb128 0x7
 1186 011c CD000000 		.4byte	0xcd
 1187 0120 7F       		.byte	0x7f
 1188 0121 00       		.byte	0
 1189 0122 06       		.uleb128 0x6
 1190 0123 BF000000 		.4byte	0xbf
 1191 0127 32010000 		.4byte	0x132
 1192 012b 07       		.uleb128 0x7
 1193 012c CD000000 		.4byte	0xcd
 1194 0130 FF       		.byte	0xff
 1195 0131 00       		.byte	0
 1196 0132 03       		.uleb128 0x3
 1197 0133 51050000 		.4byte	.LASF23
 1198 0137 05       		.byte	0x5
 1199 0138 10       		.byte	0x10
 1200 0139 E4000000 		.4byte	0xe4
 1201 013d 0A       		.uleb128 0xa
 1202 013e 14       		.byte	0x14
 1203 013f 06       		.byte	0x6
 1204 0140 11       		.byte	0x11
 1205 0141 82010000 		.4byte	0x182
 1206 0145 09       		.uleb128 0x9
 1207 0146 85010000 		.4byte	.LASF24
 1208 014a 06       		.byte	0x6
 1209 014b 12       		.byte	0x12
 1210 014c B1000000 		.4byte	0xb1
 1211 0150 00       		.byte	0
 1212 0151 09       		.uleb128 0x9
 1213 0152 1D000000 		.4byte	.LASF25
 1214 0156 06       		.byte	0x6
 1215 0157 13       		.byte	0x13
 1216 0158 B1000000 		.4byte	0xb1
 1217 015c 04       		.byte	0x4
 1218 015d 09       		.uleb128 0x9
 1219 015e A9050000 		.4byte	.LASF26
 1220 0162 06       		.byte	0x6
 1221 0163 14       		.byte	0x14
 1222 0164 B1000000 		.4byte	0xb1
 1223 0168 08       		.byte	0x8
 1224 0169 09       		.uleb128 0x9
 1225 016a 60010000 		.4byte	.LASF27
 1226 016e 06       		.byte	0x6
 1227 016f 15       		.byte	0x15
 1228 0170 B1000000 		.4byte	0xb1
 1229 0174 0C       		.byte	0xc
 1230 0175 09       		.uleb128 0x9
 1231 0176 E2020000 		.4byte	.LASF28
 1232 017a 06       		.byte	0x6
 1233 017b 16       		.byte	0x16
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 27


 1234 017c 81000000 		.4byte	0x81
 1235 0180 10       		.byte	0x10
 1236 0181 00       		.byte	0
 1237 0182 03       		.uleb128 0x3
 1238 0183 6F040000 		.4byte	.LASF29
 1239 0187 06       		.byte	0x6
 1240 0188 17       		.byte	0x17
 1241 0189 3D010000 		.4byte	0x13d
 1242 018d 0A       		.uleb128 0xa
 1243 018e 10       		.byte	0x10
 1244 018f 06       		.byte	0x6
 1245 0190 19       		.byte	0x19
 1246 0191 C6010000 		.4byte	0x1c6
 1247 0195 09       		.uleb128 0x9
 1248 0196 95010000 		.4byte	.LASF30
 1249 019a 06       		.byte	0x6
 1250 019b 1A       		.byte	0x1a
 1251 019c B1000000 		.4byte	0xb1
 1252 01a0 00       		.byte	0
 1253 01a1 09       		.uleb128 0x9
 1254 01a2 29040000 		.4byte	.LASF31
 1255 01a6 06       		.byte	0x6
 1256 01a7 1B       		.byte	0x1b
 1257 01a8 B1000000 		.4byte	0xb1
 1258 01ac 04       		.byte	0x4
 1259 01ad 09       		.uleb128 0x9
 1260 01ae CB050000 		.4byte	.LASF32
 1261 01b2 06       		.byte	0x6
 1262 01b3 1C       		.byte	0x1c
 1263 01b4 B1000000 		.4byte	0xb1
 1264 01b8 08       		.byte	0x8
 1265 01b9 09       		.uleb128 0x9
 1266 01ba 7E020000 		.4byte	.LASF33
 1267 01be 06       		.byte	0x6
 1268 01bf 1D       		.byte	0x1d
 1269 01c0 B1000000 		.4byte	0xb1
 1270 01c4 0C       		.byte	0xc
 1271 01c5 00       		.byte	0
 1272 01c6 03       		.uleb128 0x3
 1273 01c7 D8030000 		.4byte	.LASF34
 1274 01cb 06       		.byte	0x6
 1275 01cc 1E       		.byte	0x1e
 1276 01cd 8D010000 		.4byte	0x18d
 1277 01d1 0A       		.uleb128 0xa
 1278 01d2 2C       		.byte	0x2c
 1279 01d3 07       		.byte	0x7
 1280 01d4 14       		.byte	0x14
 1281 01d5 FE010000 		.4byte	0x1fe
 1282 01d9 0B       		.uleb128 0xb
 1283 01da 6B657900 		.ascii	"key\000"
 1284 01de 07       		.byte	0x7
 1285 01df 15       		.byte	0x15
 1286 01e0 FE010000 		.4byte	0x1fe
 1287 01e4 00       		.byte	0
 1288 01e5 09       		.uleb128 0x9
 1289 01e6 7F010000 		.4byte	.LASF35
 1290 01ea 07       		.byte	0x7
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 28


 1291 01eb 16       		.byte	0x16
 1292 01ec FE010000 		.4byte	0x1fe
 1293 01f0 14       		.byte	0x14
 1294 01f1 09       		.uleb128 0x9
 1295 01f2 CF010000 		.4byte	.LASF36
 1296 01f6 07       		.byte	0x7
 1297 01f7 17       		.byte	0x17
 1298 01f8 A5000000 		.4byte	0xa5
 1299 01fc 28       		.byte	0x28
 1300 01fd 00       		.byte	0
 1301 01fe 06       		.uleb128 0x6
 1302 01ff BF000000 		.4byte	0xbf
 1303 0203 0E020000 		.4byte	0x20e
 1304 0207 07       		.uleb128 0x7
 1305 0208 CD000000 		.4byte	0xcd
 1306 020c 13       		.byte	0x13
 1307 020d 00       		.byte	0
 1308 020e 03       		.uleb128 0x3
 1309 020f 72030000 		.4byte	.LASF37
 1310 0213 07       		.byte	0x7
 1311 0214 19       		.byte	0x19
 1312 0215 D1010000 		.4byte	0x1d1
 1313 0219 0A       		.uleb128 0xa
 1314 021a 3C       		.byte	0x3c
 1315 021b 08       		.byte	0x8
 1316 021c 39       		.byte	0x39
 1317 021d 46020000 		.4byte	0x246
 1318 0221 09       		.uleb128 0x9
 1319 0222 16000000 		.4byte	.LASF38
 1320 0226 08       		.byte	0x8
 1321 0227 3A       		.byte	0x3a
 1322 0228 FE010000 		.4byte	0x1fe
 1323 022c 00       		.byte	0
 1324 022d 09       		.uleb128 0x9
 1325 022e 00000000 		.4byte	.LASF39
 1326 0232 08       		.byte	0x8
 1327 0233 3B       		.byte	0x3b
 1328 0234 FE010000 		.4byte	0x1fe
 1329 0238 14       		.byte	0x14
 1330 0239 09       		.uleb128 0x9
 1331 023a 6A040000 		.4byte	.LASF40
 1332 023e 08       		.byte	0x8
 1333 023f 3C       		.byte	0x3c
 1334 0240 FE010000 		.4byte	0x1fe
 1335 0244 28       		.byte	0x28
 1336 0245 00       		.byte	0
 1337 0246 03       		.uleb128 0x3
 1338 0247 0A050000 		.4byte	.LASF41
 1339 024b 08       		.byte	0x8
 1340 024c 3E       		.byte	0x3e
 1341 024d 19020000 		.4byte	0x219
 1342 0251 0A       		.uleb128 0xa
 1343 0252 20       		.byte	0x20
 1344 0253 08       		.byte	0x8
 1345 0254 40       		.byte	0x40
 1346 0255 BA020000 		.4byte	0x2ba
 1347 0259 09       		.uleb128 0x9
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 29


 1348 025a 7E030000 		.4byte	.LASF42
 1349 025e 08       		.byte	0x8
 1350 025f 41       		.byte	0x41
 1351 0260 68000000 		.4byte	0x68
 1352 0264 00       		.byte	0
 1353 0265 0B       		.uleb128 0xb
 1354 0266 62657200 		.ascii	"ber\000"
 1355 026a 08       		.byte	0x8
 1356 026b 42       		.byte	0x42
 1357 026c 68000000 		.4byte	0x68
 1358 0270 04       		.byte	0x4
 1359 0271 09       		.uleb128 0x9
 1360 0272 CA010000 		.4byte	.LASF43
 1361 0276 08       		.byte	0x8
 1362 0277 43       		.byte	0x43
 1363 0278 68000000 		.4byte	0x68
 1364 027c 08       		.byte	0x8
 1365 027d 09       		.uleb128 0x9
 1366 027e 7A010000 		.4byte	.LASF44
 1367 0282 08       		.byte	0x8
 1368 0283 44       		.byte	0x44
 1369 0284 68000000 		.4byte	0x68
 1370 0288 0C       		.byte	0xc
 1371 0289 09       		.uleb128 0x9
 1372 028a C8040000 		.4byte	.LASF45
 1373 028e 08       		.byte	0x8
 1374 028f 45       		.byte	0x45
 1375 0290 68000000 		.4byte	0x68
 1376 0294 10       		.byte	0x10
 1377 0295 09       		.uleb128 0x9
 1378 0296 BE040000 		.4byte	.LASF46
 1379 029a 08       		.byte	0x8
 1380 029b 46       		.byte	0x46
 1381 029c 68000000 		.4byte	0x68
 1382 02a0 14       		.byte	0x14
 1383 02a1 09       		.uleb128 0x9
 1384 02a2 0A040000 		.4byte	.LASF47
 1385 02a6 08       		.byte	0x8
 1386 02a7 47       		.byte	0x47
 1387 02a8 68000000 		.4byte	0x68
 1388 02ac 18       		.byte	0x18
 1389 02ad 09       		.uleb128 0x9
 1390 02ae 4A040000 		.4byte	.LASF48
 1391 02b2 08       		.byte	0x8
 1392 02b3 48       		.byte	0x48
 1393 02b4 68000000 		.4byte	0x68
 1394 02b8 1C       		.byte	0x1c
 1395 02b9 00       		.byte	0
 1396 02ba 03       		.uleb128 0x3
 1397 02bb 81040000 		.4byte	.LASF49
 1398 02bf 08       		.byte	0x8
 1399 02c0 4A       		.byte	0x4a
 1400 02c1 51020000 		.4byte	0x251
 1401 02c5 0A       		.uleb128 0xa
 1402 02c6 10       		.byte	0x10
 1403 02c7 08       		.byte	0x8
 1404 02c8 4C       		.byte	0x4c
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 30


 1405 02c9 0A030000 		.4byte	0x30a
 1406 02cd 09       		.uleb128 0x9
 1407 02ce 8E030000 		.4byte	.LASF50
 1408 02d2 08       		.byte	0x8
 1409 02d3 4D       		.byte	0x4d
 1410 02d4 B1000000 		.4byte	0xb1
 1411 02d8 00       		.byte	0
 1412 02d9 09       		.uleb128 0x9
 1413 02da 47050000 		.4byte	.LASF51
 1414 02de 08       		.byte	0x8
 1415 02df 4E       		.byte	0x4e
 1416 02e0 B1000000 		.4byte	0xb1
 1417 02e4 04       		.byte	0x4
 1418 02e5 09       		.uleb128 0x9
 1419 02e6 B6020000 		.4byte	.LASF52
 1420 02ea 08       		.byte	0x8
 1421 02eb 4F       		.byte	0x4f
 1422 02ec B1000000 		.4byte	0xb1
 1423 02f0 08       		.byte	0x8
 1424 02f1 09       		.uleb128 0x9
 1425 02f2 3C010000 		.4byte	.LASF53
 1426 02f6 08       		.byte	0x8
 1427 02f7 50       		.byte	0x50
 1428 02f8 8D000000 		.4byte	0x8d
 1429 02fc 0C       		.byte	0xc
 1430 02fd 09       		.uleb128 0x9
 1431 02fe E2020000 		.4byte	.LASF28
 1432 0302 08       		.byte	0x8
 1433 0303 51       		.byte	0x51
 1434 0304 81000000 		.4byte	0x81
 1435 0308 0E       		.byte	0xe
 1436 0309 00       		.byte	0
 1437 030a 03       		.uleb128 0x3
 1438 030b B8040000 		.4byte	.LASF54
 1439 030f 08       		.byte	0x8
 1440 0310 53       		.byte	0x53
 1441 0311 C5020000 		.4byte	0x2c5
 1442 0315 0A       		.uleb128 0xa
 1443 0316 06       		.byte	0x6
 1444 0317 08       		.byte	0x8
 1445 0318 56       		.byte	0x56
 1446 0319 66030000 		.4byte	0x366
 1447 031d 09       		.uleb128 0x9
 1448 031e 9F050000 		.4byte	.LASF55
 1449 0322 08       		.byte	0x8
 1450 0323 58       		.byte	0x58
 1451 0324 81000000 		.4byte	0x81
 1452 0328 00       		.byte	0
 1453 0329 09       		.uleb128 0x9
 1454 032a E3030000 		.4byte	.LASF56
 1455 032e 08       		.byte	0x8
 1456 032f 5A       		.byte	0x5a
 1457 0330 66030000 		.4byte	0x366
 1458 0334 01       		.byte	0x1
 1459 0335 09       		.uleb128 0x9
 1460 0336 93020000 		.4byte	.LASF57
 1461 033a 08       		.byte	0x8
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 31


 1462 033b 5C       		.byte	0x5c
 1463 033c 81000000 		.4byte	0x81
 1464 0340 02       		.byte	0x2
 1465 0341 09       		.uleb128 0x9
 1466 0342 84030000 		.4byte	.LASF58
 1467 0346 08       		.byte	0x8
 1468 0347 5E       		.byte	0x5e
 1469 0348 81000000 		.4byte	0x81
 1470 034c 03       		.byte	0x3
 1471 034d 09       		.uleb128 0x9
 1472 034e FE040000 		.4byte	.LASF59
 1473 0352 08       		.byte	0x8
 1474 0353 61       		.byte	0x61
 1475 0354 81000000 		.4byte	0x81
 1476 0358 04       		.byte	0x4
 1477 0359 0B       		.uleb128 0xb
 1478 035a 67707300 		.ascii	"gps\000"
 1479 035e 08       		.byte	0x8
 1480 035f 63       		.byte	0x63
 1481 0360 81000000 		.4byte	0x81
 1482 0364 05       		.byte	0x5
 1483 0365 00       		.byte	0
 1484 0366 02       		.uleb128 0x2
 1485 0367 01       		.byte	0x1
 1486 0368 02       		.byte	0x2
 1487 0369 9B040000 		.4byte	.LASF60
 1488 036d 03       		.uleb128 0x3
 1489 036e FF020000 		.4byte	.LASF61
 1490 0372 08       		.byte	0x8
 1491 0373 65       		.byte	0x65
 1492 0374 15030000 		.4byte	0x315
 1493 0378 0A       		.uleb128 0xa
 1494 0379 06       		.byte	0x6
 1495 037a 09       		.byte	0x9
 1496 037b 2D       		.byte	0x2d
 1497 037c B1030000 		.4byte	0x3b1
 1498 0380 09       		.uleb128 0x9
 1499 0381 77000000 		.4byte	.LASF62
 1500 0385 09       		.byte	0x9
 1501 0386 2F       		.byte	0x2f
 1502 0387 8D000000 		.4byte	0x8d
 1503 038b 00       		.byte	0
 1504 038c 09       		.uleb128 0x9
 1505 038d 3A000000 		.4byte	.LASF63
 1506 0391 09       		.byte	0x9
 1507 0392 30       		.byte	0x30
 1508 0393 99000000 		.4byte	0x99
 1509 0397 02       		.byte	0x2
 1510 0398 09       		.uleb128 0x9
 1511 0399 17050000 		.4byte	.LASF64
 1512 039d 09       		.byte	0x9
 1513 039e 31       		.byte	0x31
 1514 039f 81000000 		.4byte	0x81
 1515 03a3 04       		.byte	0x4
 1516 03a4 09       		.uleb128 0x9
 1517 03a5 2F050000 		.4byte	.LASF65
 1518 03a9 09       		.byte	0x9
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 32


 1519 03aa 32       		.byte	0x32
 1520 03ab 81000000 		.4byte	0x81
 1521 03af 05       		.byte	0x5
 1522 03b0 00       		.byte	0
 1523 03b1 03       		.uleb128 0x3
 1524 03b2 8D020000 		.4byte	.LASF66
 1525 03b6 09       		.byte	0x9
 1526 03b7 35       		.byte	0x35
 1527 03b8 BC030000 		.4byte	0x3bc
 1528 03bc 0C       		.uleb128 0xc
 1529 03bd 78030000 		.4byte	0x378
 1530 03c1 0A       		.uleb128 0xa
 1531 03c2 1C       		.byte	0x1c
 1532 03c3 09       		.byte	0x9
 1533 03c4 38       		.byte	0x38
 1534 03c5 E2030000 		.4byte	0x3e2
 1535 03c9 09       		.uleb128 0x9
 1536 03ca 63020000 		.4byte	.LASF67
 1537 03ce 09       		.byte	0x9
 1538 03cf 3A       		.byte	0x3a
 1539 03d0 E2030000 		.4byte	0x3e2
 1540 03d4 00       		.byte	0
 1541 03d5 09       		.uleb128 0x9
 1542 03d6 57030000 		.4byte	.LASF68
 1543 03da 09       		.byte	0x9
 1544 03db 3B       		.byte	0x3b
 1545 03dc D4000000 		.4byte	0xd4
 1546 03e0 04       		.byte	0x4
 1547 03e1 00       		.byte	0
 1548 03e2 0D       		.uleb128 0xd
 1549 03e3 04       		.byte	0x4
 1550 03e4 46020000 		.4byte	0x246
 1551 03e8 03       		.uleb128 0x3
 1552 03e9 EC030000 		.4byte	.LASF69
 1553 03ed 09       		.byte	0x9
 1554 03ee 3D       		.byte	0x3d
 1555 03ef C1030000 		.4byte	0x3c1
 1556 03f3 0A       		.uleb128 0xa
 1557 03f4 68       		.byte	0x68
 1558 03f5 09       		.byte	0x9
 1559 03f6 43       		.byte	0x43
 1560 03f7 14040000 		.4byte	0x414
 1561 03fb 09       		.uleb128 0x9
 1562 03fc A6000000 		.4byte	.LASF70
 1563 0400 09       		.byte	0x9
 1564 0401 48       		.byte	0x48
 1565 0402 14040000 		.4byte	0x414
 1566 0406 00       		.byte	0
 1567 0407 09       		.uleb128 0x9
 1568 0408 77050000 		.4byte	.LASF71
 1569 040c 09       		.byte	0x9
 1570 040d 49       		.byte	0x49
 1571 040e 68000000 		.4byte	0x68
 1572 0412 64       		.byte	0x64
 1573 0413 00       		.byte	0
 1574 0414 06       		.uleb128 0x6
 1575 0415 BF000000 		.4byte	0xbf
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 33


 1576 0419 24040000 		.4byte	0x424
 1577 041d 07       		.uleb128 0x7
 1578 041e CD000000 		.4byte	0xcd
 1579 0422 63       		.byte	0x63
 1580 0423 00       		.byte	0
 1581 0424 03       		.uleb128 0x3
 1582 0425 2B000000 		.4byte	.LASF72
 1583 0429 09       		.byte	0x9
 1584 042a 4F       		.byte	0x4f
 1585 042b F3030000 		.4byte	0x3f3
 1586 042f 0E       		.uleb128 0xe
 1587 0430 D9010000 		.4byte	.LASF77
 1588 0434 01       		.byte	0x1
 1589 0435 06       		.byte	0x6
 1590 0436 82010000 		.4byte	0x182
 1591 043a 00000000 		.4byte	.LFB64
 1592 043e 34010000 		.4byte	.LFE64-.LFB64
 1593 0442 01       		.uleb128 0x1
 1594 0443 9C       		.byte	0x9c
 1595 0444 B8040000 		.4byte	0x4b8
 1596 0448 0F       		.uleb128 0xf
 1597 0449 5B020000 		.4byte	.LASF73
 1598 044d 01       		.byte	0x1
 1599 044e 08       		.byte	0x8
 1600 044f 82010000 		.4byte	0x182
 1601 0453 02       		.uleb128 0x2
 1602 0454 91       		.byte	0x91
 1603 0455 54       		.sleb128 -44
 1604 0456 0F       		.uleb128 0xf
 1605 0457 71010000 		.4byte	.LASF74
 1606 045b 01       		.byte	0x1
 1607 045c 15       		.byte	0x15
 1608 045d B8040000 		.4byte	0x4b8
 1609 0461 02       		.uleb128 0x2
 1610 0462 91       		.byte	0x91
 1611 0463 44       		.sleb128 -60
 1612 0464 0F       		.uleb128 0xf
 1613 0465 50000000 		.4byte	.LASF75
 1614 0469 01       		.byte	0x1
 1615 046a 31       		.byte	0x31
 1616 046b B1000000 		.4byte	0xb1
 1617 046f 02       		.uleb128 0x2
 1618 0470 91       		.byte	0x91
 1619 0471 68       		.sleb128 -24
 1620 0472 10       		.uleb128 0x10
 1621 0473 26000000 		.4byte	.LBB2
 1622 0477 7A000000 		.4byte	.LBE2-.LBB2
 1623 047b 11       		.uleb128 0x11
 1624 047c 6300     		.ascii	"c\000"
 1625 047e 01       		.byte	0x1
 1626 047f 17       		.byte	0x17
 1627 0480 81000000 		.4byte	0x81
 1628 0484 02       		.uleb128 0x2
 1629 0485 91       		.byte	0x91
 1630 0486 6F       		.sleb128 -17
 1631 0487 10       		.uleb128 0x10
 1632 0488 2E000000 		.4byte	.LBB3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 34


 1633 048c 60000000 		.4byte	.LBE3-.LBB3
 1634 0490 0F       		.uleb128 0xf
 1635 0491 DC050000 		.4byte	.LASF76
 1636 0495 01       		.byte	0x1
 1637 0496 1A       		.byte	0x1a
 1638 0497 C8040000 		.4byte	0x4c8
 1639 049b 03       		.uleb128 0x3
 1640 049c 91       		.byte	0x91
 1641 049d 987F     		.sleb128 -104
 1642 049f 10       		.uleb128 0x10
 1643 04a0 38000000 		.4byte	.LBB4
 1644 04a4 30000000 		.4byte	.LBE4-.LBB4
 1645 04a8 11       		.uleb128 0x11
 1646 04a9 6900     		.ascii	"i\000"
 1647 04ab 01       		.byte	0x1
 1648 04ac 1E       		.byte	0x1e
 1649 04ad 8D000000 		.4byte	0x8d
 1650 04b1 02       		.uleb128 0x2
 1651 04b2 91       		.byte	0x91
 1652 04b3 6C       		.sleb128 -20
 1653 04b4 00       		.byte	0
 1654 04b5 00       		.byte	0
 1655 04b6 00       		.byte	0
 1656 04b7 00       		.byte	0
 1657 04b8 06       		.uleb128 0x6
 1658 04b9 B1000000 		.4byte	0xb1
 1659 04bd C8040000 		.4byte	0x4c8
 1660 04c1 07       		.uleb128 0x7
 1661 04c2 CD000000 		.4byte	0xcd
 1662 04c6 03       		.byte	0x3
 1663 04c7 00       		.byte	0
 1664 04c8 06       		.uleb128 0x6
 1665 04c9 A5000000 		.4byte	0xa5
 1666 04cd D8040000 		.4byte	0x4d8
 1667 04d1 07       		.uleb128 0x7
 1668 04d2 CD000000 		.4byte	0xcd
 1669 04d6 0A       		.byte	0xa
 1670 04d7 00       		.byte	0
 1671 04d8 0E       		.uleb128 0xe
 1672 04d9 57000000 		.4byte	.LASF78
 1673 04dd 01       		.byte	0x1
 1674 04de 3E       		.byte	0x3e
 1675 04df C6010000 		.4byte	0x1c6
 1676 04e3 00000000 		.4byte	.LFB65
 1677 04e7 98010000 		.4byte	.LFE65-.LFB65
 1678 04eb 01       		.uleb128 0x1
 1679 04ec 9C       		.byte	0x9c
 1680 04ed 4D050000 		.4byte	0x54d
 1681 04f1 0F       		.uleb128 0xf
 1682 04f2 C1010000 		.4byte	.LASF79
 1683 04f6 01       		.byte	0x1
 1684 04f7 40       		.byte	0x40
 1685 04f8 C6010000 		.4byte	0x1c6
 1686 04fc 02       		.uleb128 0x2
 1687 04fd 91       		.byte	0x91
 1688 04fe 5C       		.sleb128 -36
 1689 04ff 0F       		.uleb128 0xf
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 35


 1690 0500 71010000 		.4byte	.LASF74
 1691 0504 01       		.byte	0x1
 1692 0505 41       		.byte	0x41
 1693 0506 B8040000 		.4byte	0x4b8
 1694 050a 02       		.uleb128 0x2
 1695 050b 91       		.byte	0x91
 1696 050c 4C       		.sleb128 -52
 1697 050d 0F       		.uleb128 0xf
 1698 050e DC050000 		.4byte	.LASF76
 1699 0512 01       		.byte	0x1
 1700 0513 42       		.byte	0x42
 1701 0514 C8040000 		.4byte	0x4c8
 1702 0518 03       		.uleb128 0x3
 1703 0519 91       		.byte	0x91
 1704 051a A07F     		.sleb128 -96
 1705 051c 12       		.uleb128 0x12
 1706 051d 1A000000 		.4byte	.LBB5
 1707 0521 30000000 		.4byte	.LBE5-.LBB5
 1708 0525 36050000 		.4byte	0x536
 1709 0529 11       		.uleb128 0x11
 1710 052a 6900     		.ascii	"i\000"
 1711 052c 01       		.byte	0x1
 1712 052d 4C       		.byte	0x4c
 1713 052e 8D000000 		.4byte	0x8d
 1714 0532 02       		.uleb128 0x2
 1715 0533 91       		.byte	0x91
 1716 0534 6E       		.sleb128 -18
 1717 0535 00       		.byte	0
 1718 0536 10       		.uleb128 0x10
 1719 0537 8E000000 		.4byte	.LBB6
 1720 053b 30000000 		.4byte	.LBE6-.LBB6
 1721 053f 11       		.uleb128 0x11
 1722 0540 6900     		.ascii	"i\000"
 1723 0542 01       		.byte	0x1
 1724 0543 59       		.byte	0x59
 1725 0544 8D000000 		.4byte	0x8d
 1726 0548 02       		.uleb128 0x2
 1727 0549 91       		.byte	0x91
 1728 054a 6C       		.sleb128 -20
 1729 054b 00       		.byte	0
 1730 054c 00       		.byte	0
 1731 054d 13       		.uleb128 0x13
 1732 054e 7F050000 		.4byte	.LASF82
 1733 0552 01       		.byte	0x1
 1734 0553 74       		.byte	0x74
 1735 0554 C6010000 		.4byte	0x1c6
 1736 0558 00000000 		.4byte	.LFB66
 1737 055c C4000000 		.4byte	.LFE66-.LFB66
 1738 0560 01       		.uleb128 0x1
 1739 0561 9C       		.byte	0x9c
 1740 0562 83050000 		.4byte	0x583
 1741 0566 14       		.uleb128 0x14
 1742 0567 5B020000 		.4byte	.LASF73
 1743 056b 01       		.byte	0x1
 1744 056c 74       		.byte	0x74
 1745 056d 82010000 		.4byte	0x182
 1746 0571 02       		.uleb128 0x2
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 36


 1747 0572 91       		.byte	0x91
 1748 0573 74       		.sleb128 -12
 1749 0574 0F       		.uleb128 0xf
 1750 0575 C1010000 		.4byte	.LASF79
 1751 0579 01       		.byte	0x1
 1752 057a 76       		.byte	0x76
 1753 057b C6010000 		.4byte	0x1c6
 1754 057f 02       		.uleb128 0x2
 1755 0580 91       		.byte	0x91
 1756 0581 50       		.sleb128 -48
 1757 0582 00       		.byte	0
 1758 0583 15       		.uleb128 0x15
 1759 0584 6E020000 		.4byte	.LASF80
 1760 0588 01       		.byte	0x1
 1761 0589 86       		.byte	0x86
 1762 058a 00000000 		.4byte	.LFB67
 1763 058e 74000000 		.4byte	.LFE67-.LFB67
 1764 0592 01       		.uleb128 0x1
 1765 0593 9C       		.byte	0x9c
 1766 0594 C9050000 		.4byte	0x5c9
 1767 0598 16       		.uleb128 0x16
 1768 0599 6100     		.ascii	"a\000"
 1769 059b 01       		.byte	0x1
 1770 059c 86       		.byte	0x86
 1771 059d C9050000 		.4byte	0x5c9
 1772 05a1 02       		.uleb128 0x2
 1773 05a2 91       		.byte	0x91
 1774 05a3 6C       		.sleb128 -20
 1775 05a4 16       		.uleb128 0x16
 1776 05a5 6E00     		.ascii	"n\000"
 1777 05a7 01       		.byte	0x1
 1778 05a8 86       		.byte	0x86
 1779 05a9 A5000000 		.4byte	0xa5
 1780 05ad 02       		.uleb128 0x2
 1781 05ae 91       		.byte	0x91
 1782 05af 68       		.sleb128 -24
 1783 05b0 11       		.uleb128 0x11
 1784 05b1 6900     		.ascii	"i\000"
 1785 05b3 01       		.byte	0x1
 1786 05b4 87       		.byte	0x87
 1787 05b5 A5000000 		.4byte	0xa5
 1788 05b9 02       		.uleb128 0x2
 1789 05ba 91       		.byte	0x91
 1790 05bb 74       		.sleb128 -12
 1791 05bc 11       		.uleb128 0x11
 1792 05bd 6A00     		.ascii	"j\000"
 1793 05bf 01       		.byte	0x1
 1794 05c0 87       		.byte	0x87
 1795 05c1 A5000000 		.4byte	0xa5
 1796 05c5 02       		.uleb128 0x2
 1797 05c6 91       		.byte	0x91
 1798 05c7 70       		.sleb128 -16
 1799 05c8 00       		.byte	0
 1800 05c9 0D       		.uleb128 0xd
 1801 05ca 04       		.byte	0x4
 1802 05cb A5000000 		.4byte	0xa5
 1803 05cf 17       		.uleb128 0x17
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 37


 1804 05d0 49010000 		.4byte	.LASF81
 1805 05d4 01       		.byte	0x1
 1806 05d5 92       		.byte	0x92
 1807 05d6 00000000 		.4byte	.LFB68
 1808 05da 28000000 		.4byte	.LFE68-.LFB68
 1809 05de 01       		.uleb128 0x1
 1810 05df 9C       		.byte	0x9c
 1811 05e0 09060000 		.4byte	0x609
 1812 05e4 16       		.uleb128 0x16
 1813 05e5 7000     		.ascii	"p\000"
 1814 05e7 01       		.byte	0x1
 1815 05e8 92       		.byte	0x92
 1816 05e9 C9050000 		.4byte	0x5c9
 1817 05ed 02       		.uleb128 0x2
 1818 05ee 91       		.byte	0x91
 1819 05ef 6C       		.sleb128 -20
 1820 05f0 16       		.uleb128 0x16
 1821 05f1 7100     		.ascii	"q\000"
 1822 05f3 01       		.byte	0x1
 1823 05f4 92       		.byte	0x92
 1824 05f5 C9050000 		.4byte	0x5c9
 1825 05f9 02       		.uleb128 0x2
 1826 05fa 91       		.byte	0x91
 1827 05fb 68       		.sleb128 -24
 1828 05fc 11       		.uleb128 0x11
 1829 05fd 7400     		.ascii	"t\000"
 1830 05ff 01       		.byte	0x1
 1831 0600 93       		.byte	0x93
 1832 0601 A5000000 		.4byte	0xa5
 1833 0605 02       		.uleb128 0x2
 1834 0606 91       		.byte	0x91
 1835 0607 74       		.sleb128 -12
 1836 0608 00       		.byte	0
 1837 0609 13       		.uleb128 0x13
 1838 060a 16030000 		.4byte	.LASF83
 1839 060e 01       		.byte	0x1
 1840 060f 9B       		.byte	0x9b
 1841 0610 A5000000 		.4byte	0xa5
 1842 0614 00000000 		.4byte	.LFB69
 1843 0618 84000000 		.4byte	.LFE69-.LFB69
 1844 061c 01       		.uleb128 0x1
 1845 061d 9C       		.byte	0x9c
 1846 061e 4B060000 		.4byte	0x64b
 1847 0622 14       		.uleb128 0x14
 1848 0623 F8040000 		.4byte	.LASF84
 1849 0627 01       		.byte	0x1
 1850 0628 9B       		.byte	0x9b
 1851 0629 C9050000 		.4byte	0x5c9
 1852 062d 02       		.uleb128 0x2
 1853 062e 91       		.byte	0x91
 1854 062f 64       		.sleb128 -28
 1855 0630 16       		.uleb128 0x16
 1856 0631 6E00     		.ascii	"n\000"
 1857 0633 01       		.byte	0x1
 1858 0634 9B       		.byte	0x9b
 1859 0635 A5000000 		.4byte	0xa5
 1860 0639 02       		.uleb128 0x2
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 38


 1861 063a 91       		.byte	0x91
 1862 063b 60       		.sleb128 -32
 1863 063c 0F       		.uleb128 0xf
 1864 063d 70000000 		.4byte	.LASF85
 1865 0641 01       		.byte	0x1
 1866 0642 9D       		.byte	0x9d
 1867 0643 A5000000 		.4byte	0xa5
 1868 0647 02       		.uleb128 0x2
 1869 0648 91       		.byte	0x91
 1870 0649 6C       		.sleb128 -20
 1871 064a 00       		.byte	0
 1872 064b 0E       		.uleb128 0xe
 1873 064c 0E020000 		.4byte	.LASF86
 1874 0650 01       		.byte	0x1
 1875 0651 AD       		.byte	0xad
 1876 0652 32010000 		.4byte	0x132
 1877 0656 00000000 		.4byte	.LFB70
 1878 065a BC000000 		.4byte	.LFE70-.LFB70
 1879 065e 01       		.uleb128 0x1
 1880 065f 9C       		.byte	0x9c
 1881 0660 83060000 		.4byte	0x683
 1882 0664 0F       		.uleb128 0xf
 1883 0665 C3040000 		.4byte	.LASF87
 1884 0669 01       		.byte	0x1
 1885 066a AF       		.byte	0xaf
 1886 066b 32010000 		.4byte	0x132
 1887 066f 03       		.uleb128 0x3
 1888 0670 91       		.byte	0x91
 1889 0671 E47C     		.sleb128 -412
 1890 0673 0F       		.uleb128 0xf
 1891 0674 5B020000 		.4byte	.LASF73
 1892 0678 01       		.byte	0x1
 1893 0679 B3       		.byte	0xb3
 1894 067a 82010000 		.4byte	0x182
 1895 067e 03       		.uleb128 0x3
 1896 067f 91       		.byte	0x91
 1897 0680 D07C     		.sleb128 -432
 1898 0682 00       		.byte	0
 1899 0683 0E       		.uleb128 0xe
 1900 0684 CD020000 		.4byte	.LASF88
 1901 0688 01       		.byte	0x1
 1902 0689 C2       		.byte	0xc2
 1903 068a 32010000 		.4byte	0x132
 1904 068e 00000000 		.4byte	.LFB71
 1905 0692 04010000 		.4byte	.LFE71-.LFB71
 1906 0696 01       		.uleb128 0x1
 1907 0697 9C       		.byte	0x9c
 1908 0698 BB060000 		.4byte	0x6bb
 1909 069c 0F       		.uleb128 0xf
 1910 069d C3040000 		.4byte	.LASF87
 1911 06a1 01       		.byte	0x1
 1912 06a2 C4       		.byte	0xc4
 1913 06a3 32010000 		.4byte	0x132
 1914 06a7 03       		.uleb128 0x3
 1915 06a8 91       		.byte	0x91
 1916 06a9 E47C     		.sleb128 -412
 1917 06ab 0F       		.uleb128 0xf
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 39


 1918 06ac C1010000 		.4byte	.LASF79
 1919 06b0 01       		.byte	0x1
 1920 06b1 C8       		.byte	0xc8
 1921 06b2 C6010000 		.4byte	0x1c6
 1922 06b6 03       		.uleb128 0x3
 1923 06b7 91       		.byte	0x91
 1924 06b8 D47C     		.sleb128 -428
 1925 06ba 00       		.byte	0
 1926 06bb 18       		.uleb128 0x18
 1927 06bc 5D040000 		.4byte	.LASF89
 1928 06c0 0A       		.byte	0xa
 1929 06c1 1207     		.2byte	0x712
 1930 06c3 C7060000 		.4byte	0x6c7
 1931 06c7 0C       		.uleb128 0xc
 1932 06c8 76000000 		.4byte	0x76
 1933 06cc 19       		.uleb128 0x19
 1934 06cd 4B020000 		.4byte	.LASF90
 1935 06d1 07       		.byte	0x7
 1936 06d2 11       		.byte	0x11
 1937 06d3 66030000 		.4byte	0x366
 1938 06d7 05       		.uleb128 0x5
 1939 06d8 03       		.byte	0x3
 1940 06d9 00000000 		.4byte	buffer_overflow
 1941 06dd 19       		.uleb128 0x19
 1942 06de A9010000 		.4byte	.LASF91
 1943 06e2 07       		.byte	0x7
 1944 06e3 22       		.byte	0x22
 1945 06e4 8D000000 		.4byte	0x8d
 1946 06e8 05       		.uleb128 0x5
 1947 06e9 03       		.byte	0x3
 1948 06ea 00000000 		.4byte	dataPointsInStack
 1949 06ee 19       		.uleb128 0x19
 1950 06ef EF010000 		.4byte	.LASF92
 1951 06f3 07       		.byte	0x7
 1952 06f4 23       		.byte	0x23
 1953 06f5 8D000000 		.4byte	0x8d
 1954 06f9 05       		.uleb128 0x5
 1955 06fa 03       		.byte	0x3
 1956 06fb 00000000 		.4byte	dataPointsInStackDesired
 1957 06ff 06       		.uleb128 0x6
 1958 0700 0E020000 		.4byte	0x20e
 1959 0704 0F070000 		.4byte	0x70f
 1960 0708 07       		.uleb128 0x7
 1961 0709 CD000000 		.4byte	0xcd
 1962 070d 95       		.byte	0x95
 1963 070e 00       		.byte	0
 1964 070f 19       		.uleb128 0x19
 1965 0710 50010000 		.4byte	.LASF93
 1966 0714 07       		.byte	0x7
 1967 0715 24       		.byte	0x24
 1968 0716 FF060000 		.4byte	0x6ff
 1969 071a 05       		.uleb128 0x5
 1970 071b 03       		.byte	0x3
 1971 071c 00000000 		.4byte	data
 1972 0720 19       		.uleb128 0x19
 1973 0721 8F040000 		.4byte	.LASF94
 1974 0725 08       		.byte	0x8
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 40


 1975 0726 23       		.byte	0x23
 1976 0727 81000000 		.4byte	0x81
 1977 072b 05       		.uleb128 0x5
 1978 072c 03       		.byte	0x3
 1979 072d 00000000 		.4byte	modem_state
 1980 0731 19       		.uleb128 0x19
 1981 0732 E8020000 		.4byte	.LASF95
 1982 0736 08       		.byte	0x8
 1983 0737 69       		.byte	0x69
 1984 0738 A5000000 		.4byte	0xa5
 1985 073c 05       		.uleb128 0x5
 1986 073d 03       		.byte	0x3
 1987 073e 00000000 		.4byte	modem_start_time_stamp
 1988 0742 19       		.uleb128 0x19
 1989 0743 63020000 		.4byte	.LASF67
 1990 0747 08       		.byte	0x8
 1991 0748 6A       		.byte	0x6a
 1992 0749 46020000 		.4byte	0x246
 1993 074d 05       		.uleb128 0x5
 1994 074e 03       		.byte	0x3
 1995 074f 00000000 		.4byte	modem_info
 1996 0753 19       		.uleb128 0x19
 1997 0754 97030000 		.4byte	.LASF96
 1998 0758 08       		.byte	0x8
 1999 0759 6B       		.byte	0x6b
 2000 075a BA020000 		.4byte	0x2ba
 2001 075e 05       		.uleb128 0x5
 2002 075f 03       		.byte	0x3
 2003 0760 00000000 		.4byte	modem_stats
 2004 0764 19       		.uleb128 0x19
 2005 0765 62050000 		.4byte	.LASF97
 2006 0769 08       		.byte	0x8
 2007 076a 6C       		.byte	0x6c
 2008 076b 6D030000 		.4byte	0x36d
 2009 076f 05       		.uleb128 0x5
 2010 0770 03       		.byte	0x3
 2011 0771 00000000 		.4byte	updatable_parameters
 2012 0775 19       		.uleb128 0x19
 2013 0776 75020000 		.4byte	.LASF98
 2014 077a 08       		.byte	0x8
 2015 077b 6D       		.byte	0x6d
 2016 077c 0A030000 		.4byte	0x30a
 2017 0780 05       		.uleb128 0x5
 2018 0781 03       		.byte	0x3
 2019 0782 00000000 		.4byte	gps_data
 2020 0786 06       		.uleb128 0x6
 2021 0787 BF000000 		.4byte	0xbf
 2022 078b 97070000 		.4byte	0x797
 2023 078f 1A       		.uleb128 0x1a
 2024 0790 CD000000 		.4byte	0xcd
 2025 0794 0F27     		.2byte	0x270f
 2026 0796 00       		.byte	0
 2027 0797 19       		.uleb128 0x19
 2028 0798 90000000 		.4byte	.LASF99
 2029 079c 09       		.byte	0x9
 2030 079d 17       		.byte	0x17
 2031 079e 86070000 		.4byte	0x786
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 41


 2032 07a2 05       		.uleb128 0x5
 2033 07a3 03       		.byte	0x3
 2034 07a4 00000000 		.4byte	http_request
 2035 07a8 19       		.uleb128 0x19
 2036 07a9 95050000 		.4byte	.LASF100
 2037 07ad 09       		.byte	0x9
 2038 07ae 18       		.byte	0x18
 2039 07af 86070000 		.4byte	0x786
 2040 07b3 05       		.uleb128 0x5
 2041 07b4 03       		.byte	0x3
 2042 07b5 00000000 		.4byte	http_body
 2043 07b9 06       		.uleb128 0x6
 2044 07ba BF000000 		.4byte	0xbf
 2045 07be C9070000 		.4byte	0x7c9
 2046 07c2 07       		.uleb128 0x7
 2047 07c3 CD000000 		.4byte	0xcd
 2048 07c7 C7       		.byte	0xc7
 2049 07c8 00       		.byte	0
 2050 07c9 19       		.uleb128 0x19
 2051 07ca D4040000 		.4byte	.LASF101
 2052 07ce 09       		.byte	0x9
 2053 07cf 19       		.byte	0x19
 2054 07d0 B9070000 		.4byte	0x7b9
 2055 07d4 05       		.uleb128 0x5
 2056 07d5 03       		.byte	0x3
 2057 07d6 00000000 		.4byte	http_route
 2058 07da 19       		.uleb128 0x19
 2059 07db 3E040000 		.4byte	.LASF102
 2060 07df 09       		.byte	0x9
 2061 07e0 40       		.byte	0x40
 2062 07e1 E8030000 		.4byte	0x3e8
 2063 07e5 05       		.uleb128 0x5
 2064 07e6 03       		.byte	0x3
 2065 07e7 00000000 		.4byte	system_info
 2066 07eb 19       		.uleb128 0x19
 2067 07ec 47030000 		.4byte	.LASF103
 2068 07f0 09       		.byte	0x9
 2069 07f1 52       		.byte	0x52
 2070 07f2 24040000 		.4byte	0x424
 2071 07f6 05       		.uleb128 0x5
 2072 07f7 03       		.byte	0x3
 2073 07f8 00000000 		.4byte	system_settings
 2074 07fc 19       		.uleb128 0x19
 2075 07fd 09000000 		.4byte	.LASF104
 2076 0801 09       		.byte	0x9
 2077 0802 6E       		.byte	0x6e
 2078 0803 B1030000 		.4byte	0x3b1
 2079 0807 05       		.uleb128 0x5
 2080 0808 03       		.byte	0x3
 2081 0809 00000000 		.4byte	alarmMeasure
 2082 080d 19       		.uleb128 0x19
 2083 080e CA030000 		.4byte	.LASF105
 2084 0812 09       		.byte	0x9
 2085 0813 6F       		.byte	0x6f
 2086 0814 81000000 		.4byte	0x81
 2087 0818 05       		.uleb128 0x5
 2088 0819 03       		.byte	0x3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 42


 2089 081a 00000000 		.4byte	timeToMeasure
 2090 081e 19       		.uleb128 0x19
 2091 081f A0020000 		.4byte	.LASF106
 2092 0823 09       		.byte	0x9
 2093 0824 70       		.byte	0x70
 2094 0825 B1030000 		.4byte	0x3b1
 2095 0829 05       		.uleb128 0x5
 2096 082a 03       		.byte	0x3
 2097 082b 00000000 		.4byte	alarmSync
 2098 082f 19       		.uleb128 0x19
 2099 0830 C0050000 		.4byte	.LASF107
 2100 0834 09       		.byte	0x9
 2101 0835 71       		.byte	0x71
 2102 0836 81000000 		.4byte	0x81
 2103 083a 05       		.uleb128 0x5
 2104 083b 03       		.byte	0x3
 2105 083c 00000000 		.4byte	timeToSync
 2106 0840 19       		.uleb128 0x19
 2107 0841 A1040000 		.4byte	.LASF108
 2108 0845 09       		.byte	0x9
 2109 0846 72       		.byte	0x72
 2110 0847 81000000 		.4byte	0x81
 2111 084b 05       		.uleb128 0x5
 2112 084c 03       		.byte	0x3
 2113 084d 00000000 		.4byte	timeToSycnRemoteParams
 2114 0851 1B       		.uleb128 0x1b
 2115 0852 68657900 		.ascii	"hey\000"
 2116 0856 09       		.byte	0x9
 2117 0857 73       		.byte	0x73
 2118 0858 81000000 		.4byte	0x81
 2119 085c 05       		.uleb128 0x5
 2120 085d 03       		.byte	0x3
 2121 085e 00000000 		.4byte	hey
 2122 0862 00       		.byte	0
 2123              		.section	.debug_abbrev,"",%progbits
 2124              	.Ldebug_abbrev0:
 2125 0000 01       		.uleb128 0x1
 2126 0001 11       		.uleb128 0x11
 2127 0002 01       		.byte	0x1
 2128 0003 25       		.uleb128 0x25
 2129 0004 0E       		.uleb128 0xe
 2130 0005 13       		.uleb128 0x13
 2131 0006 0B       		.uleb128 0xb
 2132 0007 03       		.uleb128 0x3
 2133 0008 0E       		.uleb128 0xe
 2134 0009 1B       		.uleb128 0x1b
 2135 000a 0E       		.uleb128 0xe
 2136 000b 55       		.uleb128 0x55
 2137 000c 17       		.uleb128 0x17
 2138 000d 11       		.uleb128 0x11
 2139 000e 01       		.uleb128 0x1
 2140 000f 10       		.uleb128 0x10
 2141 0010 17       		.uleb128 0x17
 2142 0011 00       		.byte	0
 2143 0012 00       		.byte	0
 2144 0013 02       		.uleb128 0x2
 2145 0014 24       		.uleb128 0x24
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 43


 2146 0015 00       		.byte	0
 2147 0016 0B       		.uleb128 0xb
 2148 0017 0B       		.uleb128 0xb
 2149 0018 3E       		.uleb128 0x3e
 2150 0019 0B       		.uleb128 0xb
 2151 001a 03       		.uleb128 0x3
 2152 001b 0E       		.uleb128 0xe
 2153 001c 00       		.byte	0
 2154 001d 00       		.byte	0
 2155 001e 03       		.uleb128 0x3
 2156 001f 16       		.uleb128 0x16
 2157 0020 00       		.byte	0
 2158 0021 03       		.uleb128 0x3
 2159 0022 0E       		.uleb128 0xe
 2160 0023 3A       		.uleb128 0x3a
 2161 0024 0B       		.uleb128 0xb
 2162 0025 3B       		.uleb128 0x3b
 2163 0026 0B       		.uleb128 0xb
 2164 0027 49       		.uleb128 0x49
 2165 0028 13       		.uleb128 0x13
 2166 0029 00       		.byte	0
 2167 002a 00       		.byte	0
 2168 002b 04       		.uleb128 0x4
 2169 002c 24       		.uleb128 0x24
 2170 002d 00       		.byte	0
 2171 002e 0B       		.uleb128 0xb
 2172 002f 0B       		.uleb128 0xb
 2173 0030 3E       		.uleb128 0x3e
 2174 0031 0B       		.uleb128 0xb
 2175 0032 03       		.uleb128 0x3
 2176 0033 08       		.uleb128 0x8
 2177 0034 00       		.byte	0
 2178 0035 00       		.byte	0
 2179 0036 05       		.uleb128 0x5
 2180 0037 16       		.uleb128 0x16
 2181 0038 00       		.byte	0
 2182 0039 03       		.uleb128 0x3
 2183 003a 0E       		.uleb128 0xe
 2184 003b 3A       		.uleb128 0x3a
 2185 003c 0B       		.uleb128 0xb
 2186 003d 3B       		.uleb128 0x3b
 2187 003e 05       		.uleb128 0x5
 2188 003f 49       		.uleb128 0x49
 2189 0040 13       		.uleb128 0x13
 2190 0041 00       		.byte	0
 2191 0042 00       		.byte	0
 2192 0043 06       		.uleb128 0x6
 2193 0044 01       		.uleb128 0x1
 2194 0045 01       		.byte	0x1
 2195 0046 49       		.uleb128 0x49
 2196 0047 13       		.uleb128 0x13
 2197 0048 01       		.uleb128 0x1
 2198 0049 13       		.uleb128 0x13
 2199 004a 00       		.byte	0
 2200 004b 00       		.byte	0
 2201 004c 07       		.uleb128 0x7
 2202 004d 21       		.uleb128 0x21
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 44


 2203 004e 00       		.byte	0
 2204 004f 49       		.uleb128 0x49
 2205 0050 13       		.uleb128 0x13
 2206 0051 2F       		.uleb128 0x2f
 2207 0052 0B       		.uleb128 0xb
 2208 0053 00       		.byte	0
 2209 0054 00       		.byte	0
 2210 0055 08       		.uleb128 0x8
 2211 0056 13       		.uleb128 0x13
 2212 0057 01       		.byte	0x1
 2213 0058 0B       		.uleb128 0xb
 2214 0059 05       		.uleb128 0x5
 2215 005a 3A       		.uleb128 0x3a
 2216 005b 0B       		.uleb128 0xb
 2217 005c 3B       		.uleb128 0x3b
 2218 005d 0B       		.uleb128 0xb
 2219 005e 01       		.uleb128 0x1
 2220 005f 13       		.uleb128 0x13
 2221 0060 00       		.byte	0
 2222 0061 00       		.byte	0
 2223 0062 09       		.uleb128 0x9
 2224 0063 0D       		.uleb128 0xd
 2225 0064 00       		.byte	0
 2226 0065 03       		.uleb128 0x3
 2227 0066 0E       		.uleb128 0xe
 2228 0067 3A       		.uleb128 0x3a
 2229 0068 0B       		.uleb128 0xb
 2230 0069 3B       		.uleb128 0x3b
 2231 006a 0B       		.uleb128 0xb
 2232 006b 49       		.uleb128 0x49
 2233 006c 13       		.uleb128 0x13
 2234 006d 38       		.uleb128 0x38
 2235 006e 0B       		.uleb128 0xb
 2236 006f 00       		.byte	0
 2237 0070 00       		.byte	0
 2238 0071 0A       		.uleb128 0xa
 2239 0072 13       		.uleb128 0x13
 2240 0073 01       		.byte	0x1
 2241 0074 0B       		.uleb128 0xb
 2242 0075 0B       		.uleb128 0xb
 2243 0076 3A       		.uleb128 0x3a
 2244 0077 0B       		.uleb128 0xb
 2245 0078 3B       		.uleb128 0x3b
 2246 0079 0B       		.uleb128 0xb
 2247 007a 01       		.uleb128 0x1
 2248 007b 13       		.uleb128 0x13
 2249 007c 00       		.byte	0
 2250 007d 00       		.byte	0
 2251 007e 0B       		.uleb128 0xb
 2252 007f 0D       		.uleb128 0xd
 2253 0080 00       		.byte	0
 2254 0081 03       		.uleb128 0x3
 2255 0082 08       		.uleb128 0x8
 2256 0083 3A       		.uleb128 0x3a
 2257 0084 0B       		.uleb128 0xb
 2258 0085 3B       		.uleb128 0x3b
 2259 0086 0B       		.uleb128 0xb
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 45


 2260 0087 49       		.uleb128 0x49
 2261 0088 13       		.uleb128 0x13
 2262 0089 38       		.uleb128 0x38
 2263 008a 0B       		.uleb128 0xb
 2264 008b 00       		.byte	0
 2265 008c 00       		.byte	0
 2266 008d 0C       		.uleb128 0xc
 2267 008e 35       		.uleb128 0x35
 2268 008f 00       		.byte	0
 2269 0090 49       		.uleb128 0x49
 2270 0091 13       		.uleb128 0x13
 2271 0092 00       		.byte	0
 2272 0093 00       		.byte	0
 2273 0094 0D       		.uleb128 0xd
 2274 0095 0F       		.uleb128 0xf
 2275 0096 00       		.byte	0
 2276 0097 0B       		.uleb128 0xb
 2277 0098 0B       		.uleb128 0xb
 2278 0099 49       		.uleb128 0x49
 2279 009a 13       		.uleb128 0x13
 2280 009b 00       		.byte	0
 2281 009c 00       		.byte	0
 2282 009d 0E       		.uleb128 0xe
 2283 009e 2E       		.uleb128 0x2e
 2284 009f 01       		.byte	0x1
 2285 00a0 3F       		.uleb128 0x3f
 2286 00a1 19       		.uleb128 0x19
 2287 00a2 03       		.uleb128 0x3
 2288 00a3 0E       		.uleb128 0xe
 2289 00a4 3A       		.uleb128 0x3a
 2290 00a5 0B       		.uleb128 0xb
 2291 00a6 3B       		.uleb128 0x3b
 2292 00a7 0B       		.uleb128 0xb
 2293 00a8 49       		.uleb128 0x49
 2294 00a9 13       		.uleb128 0x13
 2295 00aa 11       		.uleb128 0x11
 2296 00ab 01       		.uleb128 0x1
 2297 00ac 12       		.uleb128 0x12
 2298 00ad 06       		.uleb128 0x6
 2299 00ae 40       		.uleb128 0x40
 2300 00af 18       		.uleb128 0x18
 2301 00b0 9642     		.uleb128 0x2116
 2302 00b2 19       		.uleb128 0x19
 2303 00b3 01       		.uleb128 0x1
 2304 00b4 13       		.uleb128 0x13
 2305 00b5 00       		.byte	0
 2306 00b6 00       		.byte	0
 2307 00b7 0F       		.uleb128 0xf
 2308 00b8 34       		.uleb128 0x34
 2309 00b9 00       		.byte	0
 2310 00ba 03       		.uleb128 0x3
 2311 00bb 0E       		.uleb128 0xe
 2312 00bc 3A       		.uleb128 0x3a
 2313 00bd 0B       		.uleb128 0xb
 2314 00be 3B       		.uleb128 0x3b
 2315 00bf 0B       		.uleb128 0xb
 2316 00c0 49       		.uleb128 0x49
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 46


 2317 00c1 13       		.uleb128 0x13
 2318 00c2 02       		.uleb128 0x2
 2319 00c3 18       		.uleb128 0x18
 2320 00c4 00       		.byte	0
 2321 00c5 00       		.byte	0
 2322 00c6 10       		.uleb128 0x10
 2323 00c7 0B       		.uleb128 0xb
 2324 00c8 01       		.byte	0x1
 2325 00c9 11       		.uleb128 0x11
 2326 00ca 01       		.uleb128 0x1
 2327 00cb 12       		.uleb128 0x12
 2328 00cc 06       		.uleb128 0x6
 2329 00cd 00       		.byte	0
 2330 00ce 00       		.byte	0
 2331 00cf 11       		.uleb128 0x11
 2332 00d0 34       		.uleb128 0x34
 2333 00d1 00       		.byte	0
 2334 00d2 03       		.uleb128 0x3
 2335 00d3 08       		.uleb128 0x8
 2336 00d4 3A       		.uleb128 0x3a
 2337 00d5 0B       		.uleb128 0xb
 2338 00d6 3B       		.uleb128 0x3b
 2339 00d7 0B       		.uleb128 0xb
 2340 00d8 49       		.uleb128 0x49
 2341 00d9 13       		.uleb128 0x13
 2342 00da 02       		.uleb128 0x2
 2343 00db 18       		.uleb128 0x18
 2344 00dc 00       		.byte	0
 2345 00dd 00       		.byte	0
 2346 00de 12       		.uleb128 0x12
 2347 00df 0B       		.uleb128 0xb
 2348 00e0 01       		.byte	0x1
 2349 00e1 11       		.uleb128 0x11
 2350 00e2 01       		.uleb128 0x1
 2351 00e3 12       		.uleb128 0x12
 2352 00e4 06       		.uleb128 0x6
 2353 00e5 01       		.uleb128 0x1
 2354 00e6 13       		.uleb128 0x13
 2355 00e7 00       		.byte	0
 2356 00e8 00       		.byte	0
 2357 00e9 13       		.uleb128 0x13
 2358 00ea 2E       		.uleb128 0x2e
 2359 00eb 01       		.byte	0x1
 2360 00ec 3F       		.uleb128 0x3f
 2361 00ed 19       		.uleb128 0x19
 2362 00ee 03       		.uleb128 0x3
 2363 00ef 0E       		.uleb128 0xe
 2364 00f0 3A       		.uleb128 0x3a
 2365 00f1 0B       		.uleb128 0xb
 2366 00f2 3B       		.uleb128 0x3b
 2367 00f3 0B       		.uleb128 0xb
 2368 00f4 27       		.uleb128 0x27
 2369 00f5 19       		.uleb128 0x19
 2370 00f6 49       		.uleb128 0x49
 2371 00f7 13       		.uleb128 0x13
 2372 00f8 11       		.uleb128 0x11
 2373 00f9 01       		.uleb128 0x1
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 47


 2374 00fa 12       		.uleb128 0x12
 2375 00fb 06       		.uleb128 0x6
 2376 00fc 40       		.uleb128 0x40
 2377 00fd 18       		.uleb128 0x18
 2378 00fe 9642     		.uleb128 0x2116
 2379 0100 19       		.uleb128 0x19
 2380 0101 01       		.uleb128 0x1
 2381 0102 13       		.uleb128 0x13
 2382 0103 00       		.byte	0
 2383 0104 00       		.byte	0
 2384 0105 14       		.uleb128 0x14
 2385 0106 05       		.uleb128 0x5
 2386 0107 00       		.byte	0
 2387 0108 03       		.uleb128 0x3
 2388 0109 0E       		.uleb128 0xe
 2389 010a 3A       		.uleb128 0x3a
 2390 010b 0B       		.uleb128 0xb
 2391 010c 3B       		.uleb128 0x3b
 2392 010d 0B       		.uleb128 0xb
 2393 010e 49       		.uleb128 0x49
 2394 010f 13       		.uleb128 0x13
 2395 0110 02       		.uleb128 0x2
 2396 0111 18       		.uleb128 0x18
 2397 0112 00       		.byte	0
 2398 0113 00       		.byte	0
 2399 0114 15       		.uleb128 0x15
 2400 0115 2E       		.uleb128 0x2e
 2401 0116 01       		.byte	0x1
 2402 0117 3F       		.uleb128 0x3f
 2403 0118 19       		.uleb128 0x19
 2404 0119 03       		.uleb128 0x3
 2405 011a 0E       		.uleb128 0xe
 2406 011b 3A       		.uleb128 0x3a
 2407 011c 0B       		.uleb128 0xb
 2408 011d 3B       		.uleb128 0x3b
 2409 011e 0B       		.uleb128 0xb
 2410 011f 27       		.uleb128 0x27
 2411 0120 19       		.uleb128 0x19
 2412 0121 11       		.uleb128 0x11
 2413 0122 01       		.uleb128 0x1
 2414 0123 12       		.uleb128 0x12
 2415 0124 06       		.uleb128 0x6
 2416 0125 40       		.uleb128 0x40
 2417 0126 18       		.uleb128 0x18
 2418 0127 9642     		.uleb128 0x2116
 2419 0129 19       		.uleb128 0x19
 2420 012a 01       		.uleb128 0x1
 2421 012b 13       		.uleb128 0x13
 2422 012c 00       		.byte	0
 2423 012d 00       		.byte	0
 2424 012e 16       		.uleb128 0x16
 2425 012f 05       		.uleb128 0x5
 2426 0130 00       		.byte	0
 2427 0131 03       		.uleb128 0x3
 2428 0132 08       		.uleb128 0x8
 2429 0133 3A       		.uleb128 0x3a
 2430 0134 0B       		.uleb128 0xb
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 48


 2431 0135 3B       		.uleb128 0x3b
 2432 0136 0B       		.uleb128 0xb
 2433 0137 49       		.uleb128 0x49
 2434 0138 13       		.uleb128 0x13
 2435 0139 02       		.uleb128 0x2
 2436 013a 18       		.uleb128 0x18
 2437 013b 00       		.byte	0
 2438 013c 00       		.byte	0
 2439 013d 17       		.uleb128 0x17
 2440 013e 2E       		.uleb128 0x2e
 2441 013f 01       		.byte	0x1
 2442 0140 3F       		.uleb128 0x3f
 2443 0141 19       		.uleb128 0x19
 2444 0142 03       		.uleb128 0x3
 2445 0143 0E       		.uleb128 0xe
 2446 0144 3A       		.uleb128 0x3a
 2447 0145 0B       		.uleb128 0xb
 2448 0146 3B       		.uleb128 0x3b
 2449 0147 0B       		.uleb128 0xb
 2450 0148 27       		.uleb128 0x27
 2451 0149 19       		.uleb128 0x19
 2452 014a 11       		.uleb128 0x11
 2453 014b 01       		.uleb128 0x1
 2454 014c 12       		.uleb128 0x12
 2455 014d 06       		.uleb128 0x6
 2456 014e 40       		.uleb128 0x40
 2457 014f 18       		.uleb128 0x18
 2458 0150 9742     		.uleb128 0x2117
 2459 0152 19       		.uleb128 0x19
 2460 0153 01       		.uleb128 0x1
 2461 0154 13       		.uleb128 0x13
 2462 0155 00       		.byte	0
 2463 0156 00       		.byte	0
 2464 0157 18       		.uleb128 0x18
 2465 0158 34       		.uleb128 0x34
 2466 0159 00       		.byte	0
 2467 015a 03       		.uleb128 0x3
 2468 015b 0E       		.uleb128 0xe
 2469 015c 3A       		.uleb128 0x3a
 2470 015d 0B       		.uleb128 0xb
 2471 015e 3B       		.uleb128 0x3b
 2472 015f 05       		.uleb128 0x5
 2473 0160 49       		.uleb128 0x49
 2474 0161 13       		.uleb128 0x13
 2475 0162 3F       		.uleb128 0x3f
 2476 0163 19       		.uleb128 0x19
 2477 0164 3C       		.uleb128 0x3c
 2478 0165 19       		.uleb128 0x19
 2479 0166 00       		.byte	0
 2480 0167 00       		.byte	0
 2481 0168 19       		.uleb128 0x19
 2482 0169 34       		.uleb128 0x34
 2483 016a 00       		.byte	0
 2484 016b 03       		.uleb128 0x3
 2485 016c 0E       		.uleb128 0xe
 2486 016d 3A       		.uleb128 0x3a
 2487 016e 0B       		.uleb128 0xb
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 49


 2488 016f 3B       		.uleb128 0x3b
 2489 0170 0B       		.uleb128 0xb
 2490 0171 49       		.uleb128 0x49
 2491 0172 13       		.uleb128 0x13
 2492 0173 3F       		.uleb128 0x3f
 2493 0174 19       		.uleb128 0x19
 2494 0175 02       		.uleb128 0x2
 2495 0176 18       		.uleb128 0x18
 2496 0177 00       		.byte	0
 2497 0178 00       		.byte	0
 2498 0179 1A       		.uleb128 0x1a
 2499 017a 21       		.uleb128 0x21
 2500 017b 00       		.byte	0
 2501 017c 49       		.uleb128 0x49
 2502 017d 13       		.uleb128 0x13
 2503 017e 2F       		.uleb128 0x2f
 2504 017f 05       		.uleb128 0x5
 2505 0180 00       		.byte	0
 2506 0181 00       		.byte	0
 2507 0182 1B       		.uleb128 0x1b
 2508 0183 34       		.uleb128 0x34
 2509 0184 00       		.byte	0
 2510 0185 03       		.uleb128 0x3
 2511 0186 08       		.uleb128 0x8
 2512 0187 3A       		.uleb128 0x3a
 2513 0188 0B       		.uleb128 0xb
 2514 0189 3B       		.uleb128 0x3b
 2515 018a 0B       		.uleb128 0xb
 2516 018b 49       		.uleb128 0x49
 2517 018c 13       		.uleb128 0x13
 2518 018d 3F       		.uleb128 0x3f
 2519 018e 19       		.uleb128 0x19
 2520 018f 02       		.uleb128 0x2
 2521 0190 18       		.uleb128 0x18
 2522 0191 00       		.byte	0
 2523 0192 00       		.byte	0
 2524 0193 00       		.byte	0
 2525              		.section	.debug_aranges,"",%progbits
 2526 0000 54000000 		.4byte	0x54
 2527 0004 0200     		.2byte	0x2
 2528 0006 00000000 		.4byte	.Ldebug_info0
 2529 000a 04       		.byte	0x4
 2530 000b 00       		.byte	0
 2531 000c 0000     		.2byte	0
 2532 000e 0000     		.2byte	0
 2533 0010 00000000 		.4byte	.LFB64
 2534 0014 34010000 		.4byte	.LFE64-.LFB64
 2535 0018 00000000 		.4byte	.LFB65
 2536 001c 98010000 		.4byte	.LFE65-.LFB65
 2537 0020 00000000 		.4byte	.LFB66
 2538 0024 C4000000 		.4byte	.LFE66-.LFB66
 2539 0028 00000000 		.4byte	.LFB67
 2540 002c 74000000 		.4byte	.LFE67-.LFB67
 2541 0030 00000000 		.4byte	.LFB68
 2542 0034 28000000 		.4byte	.LFE68-.LFB68
 2543 0038 00000000 		.4byte	.LFB69
 2544 003c 84000000 		.4byte	.LFE69-.LFB69
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 50


 2545 0040 00000000 		.4byte	.LFB70
 2546 0044 BC000000 		.4byte	.LFE70-.LFB70
 2547 0048 00000000 		.4byte	.LFB71
 2548 004c 04010000 		.4byte	.LFE71-.LFB71
 2549 0050 00000000 		.4byte	0
 2550 0054 00000000 		.4byte	0
 2551              		.section	.debug_ranges,"",%progbits
 2552              	.Ldebug_ranges0:
 2553 0000 00000000 		.4byte	.LFB64
 2554 0004 34010000 		.4byte	.LFE64
 2555 0008 00000000 		.4byte	.LFB65
 2556 000c 98010000 		.4byte	.LFE65
 2557 0010 00000000 		.4byte	.LFB66
 2558 0014 C4000000 		.4byte	.LFE66
 2559 0018 00000000 		.4byte	.LFB67
 2560 001c 74000000 		.4byte	.LFE67
 2561 0020 00000000 		.4byte	.LFB68
 2562 0024 28000000 		.4byte	.LFE68
 2563 0028 00000000 		.4byte	.LFB69
 2564 002c 84000000 		.4byte	.LFE69
 2565 0030 00000000 		.4byte	.LFB70
 2566 0034 BC000000 		.4byte	.LFE70
 2567 0038 00000000 		.4byte	.LFB71
 2568 003c 04010000 		.4byte	.LFE71
 2569 0040 00000000 		.4byte	0
 2570 0044 00000000 		.4byte	0
 2571              		.section	.debug_line,"",%progbits
 2572              	.Ldebug_line0:
 2573 0000 D3020000 		.section	.debug_str,"MS",%progbits,1
 2573      02008E01 
 2573      00000201 
 2573      FB0E0D00 
 2573      01010101 
 2574              	.LASF39:
 2575 0000 6D6F6465 		.ascii	"model_id\000"
 2575      6C5F6964 
 2575      00
 2576              	.LASF104:
 2577 0009 616C6172 		.ascii	"alarmMeasure\000"
 2577      6D4D6561 
 2577      73757265 
 2577      00
 2578              	.LASF38:
 2579 0016 73696D5F 		.ascii	"sim_id\000"
 2579      696400
 2580              	.LASF25:
 2581 001d 766F6C74 		.ascii	"voltage_solar\000"
 2581      6167655F 
 2581      736F6C61 
 2581      7200
 2582              	.LASF72:
 2583 002b 7379735F 		.ascii	"sys_settings_t\000"
 2583      73657474 
 2583      696E6773 
 2583      5F7400
 2584              	.LASF63:
 2585 003a 63757272 		.ascii	"currentCountDownValue\000"
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 51


 2585      656E7443 
 2585      6F756E74 
 2585      446F776E 
 2585      56616C75 
 2586              	.LASF75:
 2587 0050 6F666673 		.ascii	"offset\000"
 2587      657400
 2588              	.LASF78:
 2589 0057 70726573 		.ascii	"pressure_sensor_readings\000"
 2589      73757265 
 2589      5F73656E 
 2589      736F725F 
 2589      72656164 
 2590              	.LASF85:
 2591 0070 6D656469 		.ascii	"median\000"
 2591      616E00
 2592              	.LASF62:
 2593 0077 636F756E 		.ascii	"countDownValue\000"
 2593      74446F77 
 2593      6E56616C 
 2593      756500
 2594              	.LASF2:
 2595 0086 73686F72 		.ascii	"short int\000"
 2595      7420696E 
 2595      7400
 2596              	.LASF99:
 2597 0090 68747470 		.ascii	"http_request\000"
 2597      5F726571 
 2597      75657374 
 2597      00
 2598              	.LASF19:
 2599 009d 73697A65 		.ascii	"sizetype\000"
 2599      74797065 
 2599      00
 2600              	.LASF70:
 2601 00a6 65705F68 		.ascii	"ep_host\000"
 2601      6F737400 
 2602              	.LASF109:
 2603 00ae 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2603      43313120 
 2603      352E342E 
 2603      31203230 
 2603      31363036 
 2604 00e1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2604      20726576 
 2604      6973696F 
 2604      6E203233 
 2604      37373135 
 2605 0114 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2605      66756E63 
 2605      74696F6E 
 2605      2D736563 
 2605      74696F6E 
 2606              	.LASF53:
 2607 013c 74696D65 		.ascii	"time_to_lock\000"
 2607      5F746F5F 
 2607      6C6F636B 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 52


 2607      00
 2608              	.LASF81:
 2609 0149 73776170 		.ascii	"swap32\000"
 2609      333200
 2610              	.LASF93:
 2611 0150 64617461 		.ascii	"data\000"
 2611      00
 2612              	.LASF110:
 2613 0155 766F6C74 		.ascii	"voltages.c\000"
 2613      61676573 
 2613      2E6300
 2614              	.LASF27:
 2615 0160 766F6C74 		.ascii	"voltage_pressure\000"
 2615      6167655F 
 2615      70726573 
 2615      73757265 
 2615      00
 2616              	.LASF74:
 2617 0171 6368616E 		.ascii	"channels\000"
 2617      6E656C73 
 2617      00
 2618              	.LASF44:
 2619 017a 65636E6F 		.ascii	"ecno\000"
 2619      00
 2620              	.LASF35:
 2621 017f 76616C75 		.ascii	"value\000"
 2621      6500
 2622              	.LASF24:
 2623 0185 766F6C74 		.ascii	"voltage_battery\000"
 2623      6167655F 
 2623      62617474 
 2623      65727900 
 2624              	.LASF30:
 2625 0195 70726573 		.ascii	"pressure_voltage_on\000"
 2625      73757265 
 2625      5F766F6C 
 2625      74616765 
 2625      5F6F6E00 
 2626              	.LASF91:
 2627 01a9 64617461 		.ascii	"dataPointsInStack\000"
 2627      506F696E 
 2627      7473496E 
 2627      53746163 
 2627      6B00
 2628              	.LASF11:
 2629 01bb 75696E74 		.ascii	"uint8\000"
 2629      3800
 2630              	.LASF79:
 2631 01c1 70726573 		.ascii	"pressure\000"
 2631      73757265 
 2631      00
 2632              	.LASF43:
 2633 01ca 72736370 		.ascii	"rscp\000"
 2633      00
 2634              	.LASF36:
 2635 01cf 74696D65 		.ascii	"timeStamp\000"
 2635      5374616D 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 53


 2635      7000
 2636              	.LASF77:
 2637 01d9 766F6C74 		.ascii	"voltage_take_readings\000"
 2637      6167655F 
 2637      74616B65 
 2637      5F726561 
 2637      64696E67 
 2638              	.LASF92:
 2639 01ef 64617461 		.ascii	"dataPointsInStackDesired\000"
 2639      506F696E 
 2639      7473496E 
 2639      53746163 
 2639      6B446573 
 2640              	.LASF15:
 2641 0208 666C6F61 		.ascii	"float\000"
 2641      7400
 2642              	.LASF86:
 2643 020e 766F6C74 		.ascii	"voltages_test\000"
 2643      61676573 
 2643      5F746573 
 2643      7400
 2644              	.LASF14:
 2645 021c 696E7433 		.ascii	"int32\000"
 2645      3200
 2646              	.LASF6:
 2647 0222 6C6F6E67 		.ascii	"long long int\000"
 2647      206C6F6E 
 2647      6720696E 
 2647      7400
 2648              	.LASF13:
 2649 0230 696E7431 		.ascii	"int16\000"
 2649      3600
 2650              	.LASF17:
 2651 0236 63686172 		.ascii	"char\000"
 2651      00
 2652              	.LASF22:
 2653 023b 72656173 		.ascii	"reason\000"
 2653      6F6E00
 2654              	.LASF4:
 2655 0242 6C6F6E67 		.ascii	"long int\000"
 2655      20696E74 
 2655      00
 2656              	.LASF90:
 2657 024b 62756666 		.ascii	"buffer_overflow\000"
 2657      65725F6F 
 2657      76657266 
 2657      6C6F7700 
 2658              	.LASF73:
 2659 025b 766F6C74 		.ascii	"voltage\000"
 2659      61676500 
 2660              	.LASF67:
 2661 0263 6D6F6465 		.ascii	"modem_info\000"
 2661      6D5F696E 
 2661      666F00
 2662              	.LASF80:
 2663 026e 736F7274 		.ascii	"sort32\000"
 2663      333200
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 54


 2664              	.LASF98:
 2665 0275 6770735F 		.ascii	"gps_data\000"
 2665      64617461 
 2665      00
 2666              	.LASF33:
 2667 027e 70726573 		.ascii	"pressure_depth\000"
 2667      73757265 
 2667      5F646570 
 2667      746800
 2668              	.LASF66:
 2669 028d 616C6172 		.ascii	"alarm\000"
 2669      6D00
 2670              	.LASF57:
 2671 0293 6D656173 		.ascii	"measure_time\000"
 2671      7572655F 
 2671      74696D65 
 2671      00
 2672              	.LASF106:
 2673 02a0 616C6172 		.ascii	"alarmSync\000"
 2673      6D53796E 
 2673      6300
 2674              	.LASF18:
 2675 02aa 6C6F6E67 		.ascii	"long double\000"
 2675      20646F75 
 2675      626C6500 
 2676              	.LASF52:
 2677 02b6 616C7469 		.ascii	"altitude\000"
 2677      74756465 
 2677      00
 2678              	.LASF1:
 2679 02bf 756E7369 		.ascii	"unsigned char\000"
 2679      676E6564 
 2679      20636861 
 2679      7200
 2680              	.LASF88:
 2681 02cd 70726573 		.ascii	"pressure_sensor_test\000"
 2681      73757265 
 2681      5F73656E 
 2681      736F725F 
 2681      74657374 
 2682              	.LASF28:
 2683 02e2 76616C69 		.ascii	"valid\000"
 2683      6400
 2684              	.LASF95:
 2685 02e8 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2685      6D5F7374 
 2685      6172745F 
 2685      74696D65 
 2685      5F737461 
 2686              	.LASF61:
 2687 02ff 75706461 		.ascii	"updatable_parameters_t\000"
 2687      7461626C 
 2687      655F7061 
 2687      72616D65 
 2687      74657273 
 2688              	.LASF83:
 2689 0316 66696E64 		.ascii	"find_median32\000"
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 55


 2689      5F6D6564 
 2689      69616E33 
 2689      3200
 2690              	.LASF0:
 2691 0324 7369676E 		.ascii	"signed char\000"
 2691      65642063 
 2691      68617200 
 2692              	.LASF7:
 2693 0330 6C6F6E67 		.ascii	"long long unsigned int\000"
 2693      206C6F6E 
 2693      6720756E 
 2693      7369676E 
 2693      65642069 
 2694              	.LASF103:
 2695 0347 73797374 		.ascii	"system_settings\000"
 2695      656D5F73 
 2695      65747469 
 2695      6E677300 
 2696              	.LASF68:
 2697 0357 63686970 		.ascii	"chip_uniqueId\000"
 2697      5F756E69 
 2697      71756549 
 2697      6400
 2698              	.LASF8:
 2699 0365 756E7369 		.ascii	"unsigned int\000"
 2699      676E6564 
 2699      20696E74 
 2699      00
 2700              	.LASF37:
 2701 0372 6B65795F 		.ascii	"key_value_t\000"
 2701      76616C75 
 2701      655F7400 
 2702              	.LASF42:
 2703 037e 72786C65 		.ascii	"rxlev\000"
 2703      7600
 2704              	.LASF58:
 2705 0384 73796E63 		.ascii	"sync_time\000"
 2705      5F74696D 
 2705      6500
 2706              	.LASF50:
 2707 038e 6C617469 		.ascii	"latitude\000"
 2707      74756465 
 2707      00
 2708              	.LASF96:
 2709 0397 6D6F6465 		.ascii	"modem_stats\000"
 2709      6D5F7374 
 2709      61747300 
 2710              	.LASF111:
 2711 03a3 443A5C47 		.ascii	"D:\\Github repo\\notoriOS\\notoriOS.cydsn\000"
 2711      69746875 
 2711      62207265 
 2711      706F5C6E 
 2711      6F746F72 
 2712              	.LASF105:
 2713 03ca 74696D65 		.ascii	"timeToMeasure\000"
 2713      546F4D65 
 2713      61737572 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 56


 2713      6500
 2714              	.LASF34:
 2715 03d8 70726573 		.ascii	"pressure_t\000"
 2715      73757265 
 2715      5F7400
 2716              	.LASF56:
 2717 03e3 73696D5F 		.ascii	"sim_type\000"
 2717      74797065 
 2717      00
 2718              	.LASF69:
 2719 03ec 7379735F 		.ascii	"sys_info_t\000"
 2719      696E666F 
 2719      5F7400
 2720              	.LASF3:
 2721 03f7 73686F72 		.ascii	"short unsigned int\000"
 2721      7420756E 
 2721      7369676E 
 2721      65642069 
 2721      6E7400
 2722              	.LASF47:
 2723 040a 74696D65 		.ascii	"time_to_network_connect\000"
 2723      5F746F5F 
 2723      6E657477 
 2723      6F726B5F 
 2723      636F6E6E 
 2724              	.LASF21:
 2725 0422 73746174 		.ascii	"status\000"
 2725      757300
 2726              	.LASF31:
 2727 0429 70726573 		.ascii	"pressure_voltage_off\000"
 2727      73757265 
 2727      5F766F6C 
 2727      74616765 
 2727      5F6F6666 
 2728              	.LASF102:
 2729 043e 73797374 		.ascii	"system_info\000"
 2729      656D5F69 
 2729      6E666F00 
 2730              	.LASF48:
 2731 044a 74696D65 		.ascii	"time_to_acquire_ip\000"
 2731      5F746F5F 
 2731      61637175 
 2731      6972655F 
 2731      697000
 2732              	.LASF89:
 2733 045d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2733      52784275 
 2733      66666572 
 2733      00
 2734              	.LASF40:
 2735 046a 696D6569 		.ascii	"imei\000"
 2735      00
 2736              	.LASF29:
 2737 046f 766F6C74 		.ascii	"voltage_t\000"
 2737      6167655F 
 2737      7400
 2738              	.LASF10:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 57


 2739 0479 696E7433 		.ascii	"int32_t\000"
 2739      325F7400 
 2740              	.LASF49:
 2741 0481 6D6F6465 		.ascii	"modem_stats_t\000"
 2741      6D5F7374 
 2741      6174735F 
 2741      7400
 2742              	.LASF94:
 2743 048f 6D6F6465 		.ascii	"modem_state\000"
 2743      6D5F7374 
 2743      61746500 
 2744              	.LASF60:
 2745 049b 5F426F6F 		.ascii	"_Bool\000"
 2745      6C00
 2746              	.LASF108:
 2747 04a1 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2747      546F5379 
 2747      636E5265 
 2747      6D6F7465 
 2747      50617261 
 2748              	.LASF54:
 2749 04b8 6770735F 		.ascii	"gps_t\000"
 2749      7400
 2750              	.LASF46:
 2751 04be 72737270 		.ascii	"rsrp\000"
 2751      00
 2752              	.LASF87:
 2753 04c3 74657374 		.ascii	"test\000"
 2753      00
 2754              	.LASF45:
 2755 04c8 72737271 		.ascii	"rsrq\000"
 2755      00
 2756              	.LASF12:
 2757 04cd 75696E74 		.ascii	"uint16\000"
 2757      313600
 2758              	.LASF101:
 2759 04d4 68747470 		.ascii	"http_route\000"
 2759      5F726F75 
 2759      746500
 2760              	.LASF5:
 2761 04df 6C6F6E67 		.ascii	"long unsigned int\000"
 2761      20756E73 
 2761      69676E65 
 2761      6420696E 
 2761      7400
 2762              	.LASF16:
 2763 04f1 646F7562 		.ascii	"double\000"
 2763      6C6500
 2764              	.LASF84:
 2765 04f8 61727261 		.ascii	"array\000"
 2765      7900
 2766              	.LASF59:
 2767 04fe 64656275 		.ascii	"debug_level\000"
 2767      675F6C65 
 2767      76656C00 
 2768              	.LASF41:
 2769 050a 6D6F6465 		.ascii	"modem_info_t\000"
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 58


 2769      6D5F696E 
 2769      666F5F74 
 2769      00
 2770              	.LASF64:
 2771 0517 636F756E 		.ascii	"countDownType\000"
 2771      74446F77 
 2771      6E547970 
 2771      6500
 2772              	.LASF9:
 2773 0525 5F5F696E 		.ascii	"__int32_t\000"
 2773      7433325F 
 2773      7400
 2774              	.LASF65:
 2775 052f 636F756E 		.ascii	"countDownResetCondition\000"
 2775      74446F77 
 2775      6E526573 
 2775      6574436F 
 2775      6E646974 
 2776              	.LASF51:
 2777 0547 6C6F6E67 		.ascii	"longitude\000"
 2777      69747564 
 2777      6500
 2778              	.LASF23:
 2779 0551 74657374 		.ascii	"test_t\000"
 2779      5F7400
 2780              	.LASF20:
 2781 0558 74657374 		.ascii	"test_name\000"
 2781      5F6E616D 
 2781      6500
 2782              	.LASF97:
 2783 0562 75706461 		.ascii	"updatable_parameters\000"
 2783      7461626C 
 2783      655F7061 
 2783      72616D65 
 2783      74657273 
 2784              	.LASF71:
 2785 0577 65705F70 		.ascii	"ep_port\000"
 2785      6F727400 
 2786              	.LASF82:
 2787 057f 70726573 		.ascii	"pressure_calculations\000"
 2787      73757265 
 2787      5F63616C 
 2787      63756C61 
 2787      74696F6E 
 2788              	.LASF100:
 2789 0595 68747470 		.ascii	"http_body\000"
 2789      5F626F64 
 2789      7900
 2790              	.LASF55:
 2791 059f 6E6F6465 		.ascii	"node_type\000"
 2791      5F747970 
 2791      6500
 2792              	.LASF26:
 2793 05a9 766F6C74 		.ascii	"voltage_charge_current\000"
 2793      6167655F 
 2793      63686172 
 2793      67655F63 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccEqrKXE.s 			page 59


 2793      75727265 
 2794              	.LASF107:
 2795 05c0 74696D65 		.ascii	"timeToSync\000"
 2795      546F5379 
 2795      6E6300
 2796              	.LASF32:
 2797 05cb 70726573 		.ascii	"pressure_current\000"
 2797      73757265 
 2797      5F637572 
 2797      72656E74 
 2797      00
 2798              	.LASF76:
 2799 05dc 72656164 		.ascii	"readings\000"
 2799      696E6773 
 2799      00
 2800              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
