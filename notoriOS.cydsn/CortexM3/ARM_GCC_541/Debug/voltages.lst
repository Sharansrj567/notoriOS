ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"voltages.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,10,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	App_LED_enabled,1,1
  33              		.comm	app_led_inbox,100,4
  34              		.comm	level_sensor_inbox,100,4
  35              		.comm	level_sensor_enabled,1,1
  36              		.comm	valve_diameter,4,4
  37              		.comm	valve_type,10,4
  38              		.comm	valve_enabled,1,1
  39              		.comm	valve_inbox,100,4
  40              		.comm	autosampler_enabled,1,1
  41              		.comm	autosampler_inbox,100,4
  42              		.comm	http_request,10000,4
  43              		.comm	http_body,10000,4
  44              		.comm	http_route,200,4
  45              		.comm	system_info,28,4
  46              		.comm	system_settings,104,4
  47              		.comm	alarmMeasure,6,4
  48              		.comm	timeToMeasure,1,1
  49              		.comm	alarmSync,6,4
  50              		.comm	timeToSync,1,1
  51              		.comm	timeToSycnRemoteParams,1,1
  52              		.comm	hey,1,1
  53              		.comm	alarmAppLED,6,4
  54              		.comm	timeToAppLED,1,1
  55              		.comm	alarmLevelSensor,6,4
  56              		.comm	timeToLevelSensor,1,1
  57              		.comm	alarmDownstreamLevelSensor,6,4
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 2


  58              		.comm	timeToDownstreamLevelSensor,1,1
  59              		.comm	alarmValve,6,4
  60              		.comm	timeToValve,1,1
  61              		.comm	alarmAutosampler,6,4
  62              		.comm	timeToAutosampler,1,1
  63              		.global	__aeabi_f2d
  64              		.global	__aeabi_dsub
  65              		.global	__aeabi_d2f
  66              		.global	__aeabi_fmul
  67              		.global	__aeabi_fsub
  68              		.section	.text.voltage_take_readings,"ax",%progbits
  69              		.align	2
  70              		.global	voltage_take_readings
  71              		.thumb
  72              		.thumb_func
  73              		.type	voltage_take_readings, %function
  74              	voltage_take_readings:
  75              	.LFB64:
  76              		.file 1 "voltages.c"
   1:voltages.c    **** #include "voltages.h"
   2:voltages.c    **** #include "notoriOS.h"
   3:voltages.c    **** #include <math.h>
   4:voltages.c    **** 
   5:voltages.c    **** // Function to take voltage readings and save them in the voltage_t datatype
   6:voltages.c    **** voltage_t voltage_take_readings(){
  77              		.loc 1 6 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 112
  80              		@ frame_needed = 1, uses_anonymous_args = 0
  81 0000 B0B5     		push	{r4, r5, r7, lr}
  82              		.cfi_def_cfa_offset 16
  83              		.cfi_offset 4, -16
  84              		.cfi_offset 5, -12
  85              		.cfi_offset 7, -8
  86              		.cfi_offset 14, -4
  87 0002 9CB0     		sub	sp, sp, #112
  88              		.cfi_def_cfa_offset 128
  89 0004 00AF     		add	r7, sp, #0
  90              		.cfi_def_cfa_register 7
  91 0006 7860     		str	r0, [r7, #4]
   7:voltages.c    ****     
   8:voltages.c    ****     voltage_t voltage;  // Create variable voltage of data structure voltage_t.
   9:voltages.c    ****      
  10:voltages.c    **** 	Battery_Voltage_Enable_Write(ON);   // Flip on the Battery Voltage ADC pin high (turns it on).
  92              		.loc 1 10 0
  93 0008 0120     		movs	r0, #1
  94 000a FFF7FEFF 		bl	Battery_Voltage_Enable_Write
  11:voltages.c    ****     Pressure_Voltage_Enable_Write(ON);  // Flip on the Pressure Transducer Voltage ADC pin high (tu
  95              		.loc 1 11 0
  96 000e 0120     		movs	r0, #1
  97 0010 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  12:voltages.c    ****     
  13:voltages.c    **** 	CyDelay(10u);	    // 10 seconds delay to give time to flip on ADC pin.
  98              		.loc 1 13 0
  99 0014 0A20     		movs	r0, #10
 100 0016 FFF7FEFF 		bl	CyDelay
  14:voltages.c    ****     
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 3


  15:voltages.c    ****     AMux_Start();       // Start the Analog Multiplexer
 101              		.loc 1 15 0
 102 001a FFF7FEFF 		bl	AMux_Start
  16:voltages.c    ****  
  17:voltages.c    ****     ADC_RestoreConfig();// Have to call this and save (See below). Otherwise ADC won't work through
 103              		.loc 1 17 0
 104 001e FFF7FEFF 		bl	ADC_RestoreConfig
  18:voltages.c    ****     
  19:voltages.c    ****     ADC_Start();        // Start the ADC
 105              		.loc 1 19 0
 106 0022 FFF7FEFF 		bl	ADC_Start
 107              	.LBB2:
  20:voltages.c    ****     
  21:voltages.c    ****     float channels[AMux_CHANNELS];
  22:voltages.c    ****     
  23:voltages.c    ****     for(uint8 c = 0; c< AMux_CHANNELS + 1; c++) // Sweep the MUX Channels
 108              		.loc 1 23 0
 109 0026 0023     		movs	r3, #0
 110 0028 87F86F30 		strb	r3, [r7, #111]
 111 002c 34E0     		b	.L2
 112              	.L5:
 113              	.LBB3:
  24:voltages.c    ****     {
  25:voltages.c    ****         
  26:voltages.c    ****         int32 readings[N_SAMPLES];  // Creates new int32 array called readings of size N_SAMPLES = 
  27:voltages.c    ****         
  28:voltages.c    ****         AMux_Select(c); // This functions first disconnects all channels then connects the given ch
 114              		.loc 1 28 0
 115 002e 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 116 0032 1846     		mov	r0, r3
 117 0034 FFF7FEFF 		bl	AMux_Select
 118              	.LBB4:
  29:voltages.c    ****         
  30:voltages.c    ****         for(uint16 i=0; i< N_SAMPLES; i++){
 119              		.loc 1 30 0
 120 0038 0023     		movs	r3, #0
 121 003a A7F86C30 		strh	r3, [r7, #108]	@ movhi
 122 003e 0FE0     		b	.L3
 123              	.L4:
  31:voltages.c    ****             
  32:voltages.c    ****             readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the
 124              		.loc 1 32 0 discriminator 3
 125 0040 B7F86C40 		ldrh	r4, [r7, #108]
 126 0044 FFF7FEFF 		bl	ADC_Read32
 127 0048 0246     		mov	r2, r0
 128 004a A300     		lsls	r3, r4, #2
 129 004c 07F17001 		add	r1, r7, #112
 130 0050 0B44     		add	r3, r3, r1
 131 0052 43F8682C 		str	r2, [r3, #-104]
  30:voltages.c    ****             
 132              		.loc 1 30 0 discriminator 3
 133 0056 B7F86C30 		ldrh	r3, [r7, #108]
 134 005a 0133     		adds	r3, r3, #1
 135 005c A7F86C30 		strh	r3, [r7, #108]	@ movhi
 136              	.L3:
  30:voltages.c    ****             
 137              		.loc 1 30 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 4


 138 0060 B7F86C30 		ldrh	r3, [r7, #108]
 139 0064 0A2B     		cmp	r3, #10
 140 0066 EBD9     		bls	.L4
 141              	.LBE4:
  33:voltages.c    ****         }
  34:voltages.c    ****         
  35:voltages.c    ****         // Converts the ADC output to Volts as a floating point number. 
  36:voltages.c    ****         // Get the median of readings and return that.
  37:voltages.c    ****         channels[c] = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Get median of re
 142              		.loc 1 37 0 is_stmt 1 discriminator 2
 143 0068 97F86F40 		ldrb	r4, [r7, #111]	@ zero_extendqisi2
 144 006c 07F10803 		add	r3, r7, #8
 145 0070 0B21     		movs	r1, #11
 146 0072 1846     		mov	r0, r3
 147 0074 FFF7FEFF 		bl	find_median32
 148 0078 0346     		mov	r3, r0
 149 007a 1846     		mov	r0, r3
 150 007c FFF7FEFF 		bl	ADC_CountsTo_Volts
 151 0080 0246     		mov	r2, r0
 152 0082 A300     		lsls	r3, r4, #2
 153 0084 07F17001 		add	r1, r7, #112
 154 0088 0B44     		add	r3, r3, r1
 155 008a 43F83C2C 		str	r2, [r3, #-60]	@ float
 156              	.LBE3:
  23:voltages.c    ****     {
 157              		.loc 1 23 0 discriminator 2
 158 008e 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 159 0092 0133     		adds	r3, r3, #1
 160 0094 87F86F30 		strb	r3, [r7, #111]
 161              	.L2:
  23:voltages.c    ****     {
 162              		.loc 1 23 0 is_stmt 0 discriminator 1
 163 0098 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 164 009c 082B     		cmp	r3, #8
 165 009e C6D9     		bls	.L5
 166              	.LBE2:
  38:voltages.c    ****     }
  39:voltages.c    ****     
  40:voltages.c    ****     AMux_Stop();        // Disconnects all Analog Multiplex channels.
 167              		.loc 1 40 0 is_stmt 1
 168 00a0 FFF7FEFF 		bl	AMux_Start
  41:voltages.c    ****     
  42:voltages.c    ****     ADC_SaveConfig();   // Save the register configuration which are not retention.
 169              		.loc 1 42 0
 170 00a4 FFF7FEFF 		bl	ADC_SaveConfig
  43:voltages.c    ****     
  44:voltages.c    ****     ADC_Stop();         // Stops and powers down the ADC component and the internal clock if the ex
 171              		.loc 1 44 0
 172 00a8 FFF7FEFF 		bl	ADC_Stop
  45:voltages.c    ****     
  46:voltages.c    ****     Battery_Voltage_Enable_Write(OFF);  // Pulls Battery ADC pin low (turns it off).
 173              		.loc 1 46 0
 174 00ac 0020     		movs	r0, #0
 175 00ae FFF7FEFF 		bl	Battery_Voltage_Enable_Write
  47:voltages.c    ****     Pressure_Voltage_Enable_Write(OFF);  // Pulls Pressure Transducer ADC pin low (turns it off).
 176              		.loc 1 47 0
 177 00b2 0020     		movs	r0, #0
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 5


 178 00b4 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  48:voltages.c    ****     
  49:voltages.c    ****     float offset = channels[0] - 1.024; // Should be 1.024 exactly. BK saw an offset when measuring
 179              		.loc 1 49 0
 180 00b8 7B6B     		ldr	r3, [r7, #52]	@ float
 181 00ba 1846     		mov	r0, r3
 182 00bc FFF7FEFF 		bl	__aeabi_f2d
 183 00c0 19A3     		adr	r3, .L7
 184 00c2 D3E90023 		ldrd	r2, [r3]
 185 00c6 FFF7FEFF 		bl	__aeabi_dsub
 186 00ca 0346     		mov	r3, r0
 187 00cc 0C46     		mov	r4, r1
 188 00ce 1846     		mov	r0, r3
 189 00d0 2146     		mov	r1, r4
 190 00d2 FFF7FEFF 		bl	__aeabi_d2f
 191 00d6 0346     		mov	r3, r0
 192 00d8 BB66     		str	r3, [r7, #104]	@ float
  50:voltages.c    ****     voltage.voltage_battery = (channels[ADC_MUX_VBAT] * 11) - offset; // Voltage divider is (1/10) 
 193              		.loc 1 50 0
 194 00da BB6B     		ldr	r3, [r7, #56]	@ float
 195 00dc 1449     		ldr	r1, .L7+8
 196 00de 1846     		mov	r0, r3
 197 00e0 FFF7FEFF 		bl	__aeabi_fmul
 198 00e4 0346     		mov	r3, r0
 199 00e6 B96E     		ldr	r1, [r7, #104]	@ float
 200 00e8 1846     		mov	r0, r3
 201 00ea FFF7FEFF 		bl	__aeabi_fsub
 202 00ee 0346     		mov	r3, r0
 203 00f0 7B65     		str	r3, [r7, #84]	@ float
  51:voltages.c    ****     voltage.voltage_solar = channels[ADC_MUX_VSOL] - offset; // Just want voltage here
 204              		.loc 1 51 0
 205 00f2 FB6B     		ldr	r3, [r7, #60]	@ float
 206 00f4 B96E     		ldr	r1, [r7, #104]	@ float
 207 00f6 1846     		mov	r0, r3
 208 00f8 FFF7FEFF 		bl	__aeabi_fsub
 209 00fc 0346     		mov	r3, r0
 210 00fe BB65     		str	r3, [r7, #88]	@ float
  52:voltages.c    ****     // Voltage across sensor resistor gives 100mV drop for max current, which is 800mA
  53:voltages.c    ****     //voltage.voltage_charge_current = 0.1*(channels[ADC_MUX_CHRG] - voltage.voltage_battery);
  54:voltages.c    ****     voltage.voltage_pressure = channels[ADC_MUX_PRTRANS]; // Pressure transducer reading
 211              		.loc 1 54 0
 212 0100 3B6C     		ldr	r3, [r7, #64]	@ float
 213 0102 3B66     		str	r3, [r7, #96]	@ float
  55:voltages.c    **** 
  56:voltages.c    ****     voltage.valid = 1;
 214              		.loc 1 56 0
 215 0104 0123     		movs	r3, #1
 216 0106 87F86430 		strb	r3, [r7, #100]
  57:voltages.c    ****     
  58:voltages.c    ****     return voltage;
 217              		.loc 1 58 0
 218 010a 7B68     		ldr	r3, [r7, #4]
 219 010c 1D46     		mov	r5, r3
 220 010e 07F15404 		add	r4, r7, #84
 221 0112 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 222 0114 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 223 0116 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 6


 224 0118 2B60     		str	r3, [r5]
  59:voltages.c    **** }
 225              		.loc 1 59 0
 226 011a 7868     		ldr	r0, [r7, #4]
 227 011c 7037     		adds	r7, r7, #112
 228              		.cfi_def_cfa_offset 16
 229 011e BD46     		mov	sp, r7
 230              		.cfi_def_cfa_register 13
 231              		@ sp needed
 232 0120 B0BD     		pop	{r4, r5, r7, pc}
 233              	.L8:
 234 0122 00BFAFF3 		.align	3
 234      0080
 235              	.L7:
 236 0128 FCA9F1D2 		.word	-755914244
 237 012c 4D62F03F 		.word	1072718413
 238 0130 00003041 		.word	1093664768
 239              		.cfi_endproc
 240              	.LFE64:
 241              		.size	voltage_take_readings, .-voltage_take_readings
 242              		.global	__aeabi_fdiv
 243              		.global	__aeabi_ddiv
 244              		.global	__aeabi_dmul
 245              		.section	.text.pressure_sensor_readings,"ax",%progbits
 246              		.align	2
 247              		.global	pressure_sensor_readings
 248              		.thumb
 249              		.thumb_func
 250              		.type	pressure_sensor_readings, %function
 251              	pressure_sensor_readings:
 252              	.LFB65:
  60:voltages.c    **** 
  61:voltages.c    **** // Function to take Pressure sensor readings and save them in the pressure_t datatype
  62:voltages.c    **** pressure_t pressure_sensor_readings(){
 253              		.loc 1 62 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 104
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0000 90B5     		push	{r4, r7, lr}
 258              		.cfi_def_cfa_offset 12
 259              		.cfi_offset 4, -12
 260              		.cfi_offset 7, -8
 261              		.cfi_offset 14, -4
 262 0002 9BB0     		sub	sp, sp, #108
 263              		.cfi_def_cfa_offset 120
 264 0004 00AF     		add	r7, sp, #0
 265              		.cfi_def_cfa_register 7
 266 0006 7860     		str	r0, [r7, #4]
  63:voltages.c    ****     
  64:voltages.c    ****     pressure_t pressure;  // Create variable voltage of data structure voltage_t.
  65:voltages.c    ****     float channels[AMux_CHANNELS];
  66:voltages.c    ****     int32 readings[N_SAMPLES];  // Creates new int32 array called readings of size N_SAMPLES = 11
  67:voltages.c    ****     
  68:voltages.c    ****     AMux_Start();       // Start the Analog Multiplexer
 267              		.loc 1 68 0
 268 0008 FFF7FEFF 		bl	AMux_Start
  69:voltages.c    ****  
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 7


  70:voltages.c    ****     ADC_RestoreConfig();// Have to call this and save (See below). Otherwise ADC won't work through
 269              		.loc 1 70 0
 270 000c FFF7FEFF 		bl	ADC_RestoreConfig
  71:voltages.c    ****     
  72:voltages.c    ****     ADC_Start();        // Start the ADC
 271              		.loc 1 72 0
 272 0010 FFF7FEFF 		bl	ADC_Start
  73:voltages.c    ****     
  74:voltages.c    ****     AMux_Select(ADC_MUX_PRTRANS); // This functions first disconnects all channels then connects th
 273              		.loc 1 74 0
 274 0014 0320     		movs	r0, #3
 275 0016 FFF7FEFF 		bl	AMux_Select
 276              	.LBB5:
  75:voltages.c    ****     
  76:voltages.c    ****     for(uint16 i=0; i< N_SAMPLES; i++){   
 277              		.loc 1 76 0
 278 001a 0023     		movs	r3, #0
 279 001c A7F86630 		strh	r3, [r7, #102]	@ movhi
 280 0020 0FE0     		b	.L10
 281              	.L11:
  77:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 282              		.loc 1 77 0 discriminator 3
 283 0022 B7F86640 		ldrh	r4, [r7, #102]
 284 0026 FFF7FEFF 		bl	ADC_Read32
 285 002a 0246     		mov	r2, r0
 286 002c A300     		lsls	r3, r4, #2
 287 002e 07F16801 		add	r1, r7, #104
 288 0032 0B44     		add	r3, r3, r1
 289 0034 43F8602C 		str	r2, [r3, #-96]
  76:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 290              		.loc 1 76 0 discriminator 3
 291 0038 B7F86630 		ldrh	r3, [r7, #102]
 292 003c 0133     		adds	r3, r3, #1
 293 003e A7F86630 		strh	r3, [r7, #102]	@ movhi
 294              	.L10:
  76:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 295              		.loc 1 76 0 is_stmt 0 discriminator 1
 296 0042 B7F86630 		ldrh	r3, [r7, #102]
 297 0046 0A2B     		cmp	r3, #10
 298 0048 EBD9     		bls	.L11
 299              	.LBE5:
  78:voltages.c    ****     }
  79:voltages.c    ****     
  80:voltages.c    ****     // Converts the ADC output to Volts as a floating point number. 
  81:voltages.c    ****     // Get the median of readings and return that.
  82:voltages.c    ****     pressure.pressure_voltage_off = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Ge
 300              		.loc 1 82 0 is_stmt 1
 301 004a 07F10803 		add	r3, r7, #8
 302 004e 0B21     		movs	r1, #11
 303 0050 1846     		mov	r0, r3
 304 0052 FFF7FEFF 		bl	find_median32
 305 0056 0346     		mov	r3, r0
 306 0058 1846     		mov	r0, r3
 307 005a FFF7FEFF 		bl	ADC_CountsTo_Volts
 308 005e 0346     		mov	r3, r0
 309 0060 BB65     		str	r3, [r7, #88]	@ float
  83:voltages.c    ****     pressure.pressure_voltage_off = floorf(pressure.pressure_voltage_off * 100) / 100;
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 8


 310              		.loc 1 83 0
 311 0062 BB6D     		ldr	r3, [r7, #88]	@ float
 312 0064 4849     		ldr	r1, .L15+16
 313 0066 1846     		mov	r0, r3
 314 0068 FFF7FEFF 		bl	__aeabi_fmul
 315 006c 0346     		mov	r3, r0
 316 006e 1846     		mov	r0, r3
 317 0070 FFF7FEFF 		bl	floorf
 318 0074 0346     		mov	r3, r0
 319 0076 4449     		ldr	r1, .L15+16
 320 0078 1846     		mov	r0, r3
 321 007a FFF7FEFF 		bl	__aeabi_fdiv
 322 007e 0346     		mov	r3, r0
 323 0080 BB65     		str	r3, [r7, #88]	@ float
  84:voltages.c    ****     
  85:voltages.c    ****     Pressure_Voltage_Enable_Write(ON);  // Flip on the Pressure Transducer Voltage ADC pin high (tu
 324              		.loc 1 85 0
 325 0082 0120     		movs	r0, #1
 326 0084 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  86:voltages.c    ****     
  87:voltages.c    **** 	CyDelay(10u);	    // 10 seconds delay to give time to flip on ADC pin.
 327              		.loc 1 87 0
 328 0088 0A20     		movs	r0, #10
 329 008a FFF7FEFF 		bl	CyDelay
 330              	.LBB6:
  88:voltages.c    ****   
  89:voltages.c    ****     for(uint16 i=0; i< N_SAMPLES; i++){   
 331              		.loc 1 89 0
 332 008e 0023     		movs	r3, #0
 333 0090 A7F86430 		strh	r3, [r7, #100]	@ movhi
 334 0094 0FE0     		b	.L12
 335              	.L13:
  90:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 336              		.loc 1 90 0 discriminator 3
 337 0096 B7F86440 		ldrh	r4, [r7, #100]
 338 009a FFF7FEFF 		bl	ADC_Read32
 339 009e 0246     		mov	r2, r0
 340 00a0 A300     		lsls	r3, r4, #2
 341 00a2 07F16801 		add	r1, r7, #104
 342 00a6 0B44     		add	r3, r3, r1
 343 00a8 43F8602C 		str	r2, [r3, #-96]
  89:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 344              		.loc 1 89 0 discriminator 3
 345 00ac B7F86430 		ldrh	r3, [r7, #100]
 346 00b0 0133     		adds	r3, r3, #1
 347 00b2 A7F86430 		strh	r3, [r7, #100]	@ movhi
 348              	.L12:
  89:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 349              		.loc 1 89 0 is_stmt 0 discriminator 1
 350 00b6 B7F86430 		ldrh	r3, [r7, #100]
 351 00ba 0A2B     		cmp	r3, #10
 352 00bc EBD9     		bls	.L13
 353              	.LBE6:
  91:voltages.c    ****     }
  92:voltages.c    ****     
  93:voltages.c    ****     // Converts the ADC output to Volts as a floating point number. 
  94:voltages.c    ****     // Get the median of readings and return that.
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 9


  95:voltages.c    ****     pressure.pressure_voltage_on = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Get
 354              		.loc 1 95 0 is_stmt 1
 355 00be 07F10803 		add	r3, r7, #8
 356 00c2 0B21     		movs	r1, #11
 357 00c4 1846     		mov	r0, r3
 358 00c6 FFF7FEFF 		bl	find_median32
 359 00ca 0346     		mov	r3, r0
 360 00cc 1846     		mov	r0, r3
 361 00ce FFF7FEFF 		bl	ADC_CountsTo_Volts
 362 00d2 0346     		mov	r3, r0
 363 00d4 7B65     		str	r3, [r7, #84]	@ float
  96:voltages.c    ****     
  97:voltages.c    ****     AMux_Stop();        // Disconnects all Analog Multiplex channels.
 364              		.loc 1 97 0
 365 00d6 FFF7FEFF 		bl	AMux_Start
  98:voltages.c    ****     
  99:voltages.c    ****     ADC_SaveConfig();   // Save the register configuration which are not retention.
 366              		.loc 1 99 0
 367 00da FFF7FEFF 		bl	ADC_SaveConfig
 100:voltages.c    ****     
 101:voltages.c    ****     ADC_Stop();         // Stops and powers down the ADC component and the internal clock if the ex
 368              		.loc 1 101 0
 369 00de FFF7FEFF 		bl	ADC_Stop
 102:voltages.c    ****     
 103:voltages.c    ****     Pressure_Voltage_Enable_Write(OFF);  // Pulls Pressure Transducer ADC pin low (turns it off).
 370              		.loc 1 103 0
 371 00e2 0020     		movs	r0, #0
 372 00e4 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 104:voltages.c    ****     // Calculate the pressure transducer current output.
 105:voltages.c    ****     // i=V/R where i= currrent, V= voltage, and R= resistance= 150 ohms. Divide by 1000 to get curr
 106:voltages.c    ****     // Should fall between 4 and 20mA
 107:voltages.c    ****     pressure.pressure_current = (pressure.pressure_voltage_on/ 150.0)*1000; 
 373              		.loc 1 107 0
 374 00e8 7B6D     		ldr	r3, [r7, #84]	@ float
 375 00ea 1846     		mov	r0, r3
 376 00ec FFF7FEFF 		bl	__aeabi_f2d
 377 00f0 21A3     		adr	r3, .L15
 378 00f2 D3E90023 		ldrd	r2, [r3]
 379 00f6 FFF7FEFF 		bl	__aeabi_ddiv
 380 00fa 0346     		mov	r3, r0
 381 00fc 0C46     		mov	r4, r1
 382 00fe 1846     		mov	r0, r3
 383 0100 2146     		mov	r1, r4
 384 0102 4FF00002 		mov	r2, #0
 385 0106 214B     		ldr	r3, .L15+20
 386 0108 FFF7FEFF 		bl	__aeabi_dmul
 387 010c 0346     		mov	r3, r0
 388 010e 0C46     		mov	r4, r1
 389 0110 1846     		mov	r0, r3
 390 0112 2146     		mov	r1, r4
 391 0114 FFF7FEFF 		bl	__aeabi_d2f
 392 0118 0346     		mov	r3, r0
 393 011a FB65     		str	r3, [r7, #92]	@ float
 108:voltages.c    ****     // Calculate the estimated depth from the pressure transducer.
 109:voltages.c    ****     // d = (Dmax*V/0.016R) - (Dmax/4) where d= depth, V= voltage, R= resistance= 150 ohms, Dmax = s
 110:voltages.c    ****     // Should fall between 0 and 10 ft
 111:voltages.c    ****     pressure.pressure_depth = ((10.0*pressure.pressure_voltage_on)/(0.016*150))-(10.0/4.0);   
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 10


 394              		.loc 1 111 0
 395 011c 7B6D     		ldr	r3, [r7, #84]	@ float
 396 011e 1846     		mov	r0, r3
 397 0120 FFF7FEFF 		bl	__aeabi_f2d
 398 0124 4FF00002 		mov	r2, #0
 399 0128 194B     		ldr	r3, .L15+24
 400 012a FFF7FEFF 		bl	__aeabi_dmul
 401 012e 0346     		mov	r3, r0
 402 0130 0C46     		mov	r4, r1
 403 0132 1846     		mov	r0, r3
 404 0134 2146     		mov	r1, r4
 405 0136 12A3     		adr	r3, .L15+8
 406 0138 D3E90023 		ldrd	r2, [r3]
 407 013c FFF7FEFF 		bl	__aeabi_ddiv
 408 0140 0346     		mov	r3, r0
 409 0142 0C46     		mov	r4, r1
 410 0144 1846     		mov	r0, r3
 411 0146 2146     		mov	r1, r4
 412 0148 4FF00002 		mov	r2, #0
 413 014c 114B     		ldr	r3, .L15+28
 414 014e FFF7FEFF 		bl	__aeabi_dsub
 415 0152 0346     		mov	r3, r0
 416 0154 0C46     		mov	r4, r1
 417 0156 1846     		mov	r0, r3
 418 0158 2146     		mov	r1, r4
 419 015a FFF7FEFF 		bl	__aeabi_d2f
 420 015e 0346     		mov	r3, r0
 421 0160 3B66     		str	r3, [r7, #96]	@ float
 112:voltages.c    ****     return pressure;
 422              		.loc 1 112 0
 423 0162 7B68     		ldr	r3, [r7, #4]
 424 0164 1C46     		mov	r4, r3
 425 0166 07F15403 		add	r3, r7, #84
 426 016a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 427 016c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 113:voltages.c    **** }
 428              		.loc 1 113 0
 429 0170 7868     		ldr	r0, [r7, #4]
 430 0172 6C37     		adds	r7, r7, #108
 431              		.cfi_def_cfa_offset 12
 432 0174 BD46     		mov	sp, r7
 433              		.cfi_def_cfa_register 13
 434              		@ sp needed
 435 0176 90BD     		pop	{r4, r7, pc}
 436              	.L16:
 437              		.align	3
 438              	.L15:
 439 0178 00000000 		.word	0
 440 017c 00C06240 		.word	1080213504
 441 0180 33333333 		.word	858993459
 442 0184 33330340 		.word	1073951539
 443 0188 0000C842 		.word	1120403456
 444 018c 00408F40 		.word	1083129856
 445 0190 00002440 		.word	1076101120
 446 0194 00000440 		.word	1074003968
 447              		.cfi_endproc
 448              	.LFE65:
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 11


 449              		.size	pressure_sensor_readings, .-pressure_sensor_readings
 450              		.section	.text.pressure_calculations,"ax",%progbits
 451              		.align	2
 452              		.global	pressure_calculations
 453              		.thumb
 454              		.thumb_func
 455              		.type	pressure_calculations, %function
 456              	pressure_calculations:
 457              	.LFB66:
 114:voltages.c    **** 
 115:voltages.c    **** // Function to calculate the pressure transducer current and depth estimate.
 116:voltages.c    **** pressure_t pressure_calculations(voltage_t voltage){
 458              		.loc 1 116 0
 459              		.cfi_startproc
 460              		@ args = 24, pretend = 16, frame = 24
 461              		@ frame_needed = 1, uses_anonymous_args = 0
 462 0000 84B0     		sub	sp, sp, #16
 463              		.cfi_def_cfa_offset 16
 464 0002 90B5     		push	{r4, r7, lr}
 465              		.cfi_def_cfa_offset 28
 466              		.cfi_offset 4, -28
 467              		.cfi_offset 7, -24
 468              		.cfi_offset 14, -20
 469 0004 87B0     		sub	sp, sp, #28
 470              		.cfi_def_cfa_offset 56
 471 0006 00AF     		add	r7, sp, #0
 472              		.cfi_def_cfa_register 7
 473 0008 7860     		str	r0, [r7, #4]
 474 000a 07F12C00 		add	r0, r7, #44
 475 000e 80E80E00 		stmia	r0, {r1, r2, r3}
 117:voltages.c    ****     // Create variable pressure of data structure type pressure_t.
 118:voltages.c    ****     pressure_t pressure;
 119:voltages.c    ****     
 120:voltages.c    ****     // Calculate the pressure transducer current output.
 121:voltages.c    ****     // i=V/R where i= currrent, V= voltage, and R= resistance= 150 ohms. Divide by 1000 to get curr
 122:voltages.c    ****     // Should fall between 4 and 20mA
 123:voltages.c    ****     pressure.pressure_current = (voltage.voltage_pressure/ 150.0)/1000; 
 476              		.loc 1 123 0
 477 0012 BB6B     		ldr	r3, [r7, #56]	@ float
 478 0014 1846     		mov	r0, r3
 479 0016 FFF7FEFF 		bl	__aeabi_f2d
 480 001a 23A3     		adr	r3, .L19
 481 001c D3E90023 		ldrd	r2, [r3]
 482 0020 FFF7FEFF 		bl	__aeabi_ddiv
 483 0024 0346     		mov	r3, r0
 484 0026 0C46     		mov	r4, r1
 485 0028 1846     		mov	r0, r3
 486 002a 2146     		mov	r1, r4
 487 002c 4FF00002 		mov	r2, #0
 488 0030 214B     		ldr	r3, .L19+16
 489 0032 FFF7FEFF 		bl	__aeabi_ddiv
 490 0036 0346     		mov	r3, r0
 491 0038 0C46     		mov	r4, r1
 492 003a 1846     		mov	r0, r3
 493 003c 2146     		mov	r1, r4
 494 003e FFF7FEFF 		bl	__aeabi_d2f
 495 0042 0346     		mov	r3, r0
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 12


 496 0044 3B61     		str	r3, [r7, #16]	@ float
 124:voltages.c    ****     // Calculate the estimated depth from the pressure transducer.
 125:voltages.c    ****     // d = (Dmax*V/0.016R) - (Dmax/4) where d= depth, V= voltage, R= resistance= 150 ohms, Dmax = s
 126:voltages.c    ****     // Should fall between 0 and 10 ft
 127:voltages.c    ****     pressure.pressure_depth = ((10.0*voltage.voltage_pressure)/(0.016*150))-(10.0/4.0); 
 497              		.loc 1 127 0
 498 0046 BB6B     		ldr	r3, [r7, #56]	@ float
 499 0048 1846     		mov	r0, r3
 500 004a FFF7FEFF 		bl	__aeabi_f2d
 501 004e 4FF00002 		mov	r2, #0
 502 0052 1A4B     		ldr	r3, .L19+20
 503 0054 FFF7FEFF 		bl	__aeabi_dmul
 504 0058 0346     		mov	r3, r0
 505 005a 0C46     		mov	r4, r1
 506 005c 1846     		mov	r0, r3
 507 005e 2146     		mov	r1, r4
 508 0060 13A3     		adr	r3, .L19+8
 509 0062 D3E90023 		ldrd	r2, [r3]
 510 0066 FFF7FEFF 		bl	__aeabi_ddiv
 511 006a 0346     		mov	r3, r0
 512 006c 0C46     		mov	r4, r1
 513 006e 1846     		mov	r0, r3
 514 0070 2146     		mov	r1, r4
 515 0072 4FF00002 		mov	r2, #0
 516 0076 124B     		ldr	r3, .L19+24
 517 0078 FFF7FEFF 		bl	__aeabi_dsub
 518 007c 0346     		mov	r3, r0
 519 007e 0C46     		mov	r4, r1
 520 0080 1846     		mov	r0, r3
 521 0082 2146     		mov	r1, r4
 522 0084 FFF7FEFF 		bl	__aeabi_d2f
 523 0088 0346     		mov	r3, r0
 524 008a 7B61     		str	r3, [r7, #20]	@ float
 128:voltages.c    ****     return pressure;
 525              		.loc 1 128 0
 526 008c 7B68     		ldr	r3, [r7, #4]
 527 008e 1C46     		mov	r4, r3
 528 0090 07F10803 		add	r3, r7, #8
 529 0094 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 530 0096 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 129:voltages.c    **** }
 531              		.loc 1 129 0
 532 009a 7868     		ldr	r0, [r7, #4]
 533 009c 1C37     		adds	r7, r7, #28
 534              		.cfi_def_cfa_offset 28
 535 009e BD46     		mov	sp, r7
 536              		.cfi_def_cfa_register 13
 537              		@ sp needed
 538 00a0 BDE89040 		pop	{r4, r7, lr}
 539              		.cfi_restore 14
 540              		.cfi_restore 7
 541              		.cfi_restore 4
 542              		.cfi_def_cfa_offset 16
 543 00a4 04B0     		add	sp, sp, #16
 544              		.cfi_def_cfa_offset 0
 545 00a6 7047     		bx	lr
 546              	.L20:
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 13


 547              		.align	3
 548              	.L19:
 549 00a8 00000000 		.word	0
 550 00ac 00C06240 		.word	1080213504
 551 00b0 33333333 		.word	858993459
 552 00b4 33330340 		.word	1073951539
 553 00b8 00408F40 		.word	1083129856
 554 00bc 00002440 		.word	1076101120
 555 00c0 00000440 		.word	1074003968
 556              		.cfi_endproc
 557              	.LFE66:
 558              		.size	pressure_calculations, .-pressure_calculations
 559              		.section	.text.sort32,"ax",%progbits
 560              		.align	2
 561              		.global	sort32
 562              		.thumb
 563              		.thumb_func
 564              		.type	sort32, %function
 565              	sort32:
 566              	.LFB67:
 130:voltages.c    ****     
 131:voltages.c    ****     
 132:voltages.c    **** 
 133:voltages.c    **** // Function to sort the elements in the level readings array
 134:voltages.c    **** void sort32(int32 a[],int32 n) { 
 567              		.loc 1 134 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 16
 570              		@ frame_needed = 1, uses_anonymous_args = 0
 571 0000 80B5     		push	{r7, lr}
 572              		.cfi_def_cfa_offset 8
 573              		.cfi_offset 7, -8
 574              		.cfi_offset 14, -4
 575 0002 84B0     		sub	sp, sp, #16
 576              		.cfi_def_cfa_offset 24
 577 0004 00AF     		add	r7, sp, #0
 578              		.cfi_def_cfa_register 7
 579 0006 7860     		str	r0, [r7, #4]
 580 0008 3960     		str	r1, [r7]
 135:voltages.c    ****    int32 i,j;
 136:voltages.c    **** 
 137:voltages.c    ****    for(i = 0;i < n-1;i++) {
 581              		.loc 1 137 0
 582 000a 0023     		movs	r3, #0
 583 000c FB60     		str	r3, [r7, #12]
 584 000e 28E0     		b	.L22
 585              	.L26:
 138:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 586              		.loc 1 138 0
 587 0010 0023     		movs	r3, #0
 588 0012 BB60     		str	r3, [r7, #8]
 589 0014 1BE0     		b	.L23
 590              	.L25:
 139:voltages.c    ****          if(a[j] > a[j+1])
 591              		.loc 1 139 0
 592 0016 BB68     		ldr	r3, [r7, #8]
 593 0018 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 14


 594 001a 7A68     		ldr	r2, [r7, #4]
 595 001c 1344     		add	r3, r3, r2
 596 001e 1A68     		ldr	r2, [r3]
 597 0020 BB68     		ldr	r3, [r7, #8]
 598 0022 0133     		adds	r3, r3, #1
 599 0024 9B00     		lsls	r3, r3, #2
 600 0026 7968     		ldr	r1, [r7, #4]
 601 0028 0B44     		add	r3, r3, r1
 602 002a 1B68     		ldr	r3, [r3]
 603 002c 9A42     		cmp	r2, r3
 604 002e 0BDD     		ble	.L24
 140:voltages.c    ****             swap32(&a[j],&a[j+1]);  // Swap the address of a[j] and a[j+1]
 605              		.loc 1 140 0
 606 0030 BB68     		ldr	r3, [r7, #8]
 607 0032 9B00     		lsls	r3, r3, #2
 608 0034 7A68     		ldr	r2, [r7, #4]
 609 0036 D018     		adds	r0, r2, r3
 610 0038 BB68     		ldr	r3, [r7, #8]
 611 003a 0133     		adds	r3, r3, #1
 612 003c 9B00     		lsls	r3, r3, #2
 613 003e 7A68     		ldr	r2, [r7, #4]
 614 0040 1344     		add	r3, r3, r2
 615 0042 1946     		mov	r1, r3
 616 0044 FFF7FEFF 		bl	swap32
 617              	.L24:
 138:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 618              		.loc 1 138 0 discriminator 2
 619 0048 BB68     		ldr	r3, [r7, #8]
 620 004a 0133     		adds	r3, r3, #1
 621 004c BB60     		str	r3, [r7, #8]
 622              	.L23:
 138:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 623              		.loc 1 138 0 is_stmt 0 discriminator 1
 624 004e 3A68     		ldr	r2, [r7]
 625 0050 FB68     		ldr	r3, [r7, #12]
 626 0052 D31A     		subs	r3, r2, r3
 627 0054 5A1E     		subs	r2, r3, #1
 628 0056 BB68     		ldr	r3, [r7, #8]
 629 0058 9A42     		cmp	r2, r3
 630 005a DCDC     		bgt	.L25
 137:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 631              		.loc 1 137 0 is_stmt 1 discriminator 2
 632 005c FB68     		ldr	r3, [r7, #12]
 633 005e 0133     		adds	r3, r3, #1
 634 0060 FB60     		str	r3, [r7, #12]
 635              	.L22:
 137:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 636              		.loc 1 137 0 is_stmt 0 discriminator 1
 637 0062 3B68     		ldr	r3, [r7]
 638 0064 5A1E     		subs	r2, r3, #1
 639 0066 FB68     		ldr	r3, [r7, #12]
 640 0068 9A42     		cmp	r2, r3
 641 006a D1DC     		bgt	.L26
 141:voltages.c    ****       }
 142:voltages.c    ****    }
 143:voltages.c    **** }
 642              		.loc 1 143 0 is_stmt 1
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 15


 643 006c 00BF     		nop
 644 006e 1037     		adds	r7, r7, #16
 645              		.cfi_def_cfa_offset 8
 646 0070 BD46     		mov	sp, r7
 647              		.cfi_def_cfa_register 13
 648              		@ sp needed
 649 0072 80BD     		pop	{r7, pc}
 650              		.cfi_endproc
 651              	.LFE67:
 652              		.size	sort32, .-sort32
 653              		.section	.text.swap32,"ax",%progbits
 654              		.align	2
 655              		.global	swap32
 656              		.thumb
 657              		.thumb_func
 658              		.type	swap32, %function
 659              	swap32:
 660              	.LFB68:
 144:voltages.c    **** 
 145:voltages.c    **** // Function to swap elements in the level readings array in order to sort them
 146:voltages.c    **** void swap32(int32 *p,int32 *q){
 661              		.loc 1 146 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 16
 664              		@ frame_needed = 1, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 666 0000 80B4     		push	{r7}
 667              		.cfi_def_cfa_offset 4
 668              		.cfi_offset 7, -4
 669 0002 85B0     		sub	sp, sp, #20
 670              		.cfi_def_cfa_offset 24
 671 0004 00AF     		add	r7, sp, #0
 672              		.cfi_def_cfa_register 7
 673 0006 7860     		str	r0, [r7, #4]
 674 0008 3960     		str	r1, [r7]
 147:voltages.c    ****    int32 t;
 148:voltages.c    ****    
 149:voltages.c    ****    t=*p; 
 675              		.loc 1 149 0
 676 000a 7B68     		ldr	r3, [r7, #4]
 677 000c 1B68     		ldr	r3, [r3]
 678 000e FB60     		str	r3, [r7, #12]
 150:voltages.c    ****    *p=*q; 
 679              		.loc 1 150 0
 680 0010 3B68     		ldr	r3, [r7]
 681 0012 1A68     		ldr	r2, [r3]
 682 0014 7B68     		ldr	r3, [r7, #4]
 683 0016 1A60     		str	r2, [r3]
 151:voltages.c    ****    *q=t;
 684              		.loc 1 151 0
 685 0018 3B68     		ldr	r3, [r7]
 686 001a FA68     		ldr	r2, [r7, #12]
 687 001c 1A60     		str	r2, [r3]
 152:voltages.c    **** }
 688              		.loc 1 152 0
 689 001e 00BF     		nop
 690 0020 1437     		adds	r7, r7, #20
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 16


 691              		.cfi_def_cfa_offset 4
 692 0022 BD46     		mov	sp, r7
 693              		.cfi_def_cfa_register 13
 694              		@ sp needed
 695 0024 80BC     		pop	{r7}
 696              		.cfi_restore 7
 697              		.cfi_def_cfa_offset 0
 698 0026 7047     		bx	lr
 699              		.cfi_endproc
 700              	.LFE68:
 701              		.size	swap32, .-swap32
 702              		.global	__aeabi_i2d
 703              		.global	__aeabi_d2iz
 704              		.section	.text.find_median32,"ax",%progbits
 705              		.align	2
 706              		.global	find_median32
 707              		.thumb
 708              		.thumb_func
 709              		.type	find_median32, %function
 710              	find_median32:
 711              	.LFB69:
 153:voltages.c    **** 
 154:voltages.c    **** // Function to calculate the median of the array, after array is sorted
 155:voltages.c    **** int32 find_median32(int32 array[] , int32 n)
 156:voltages.c    **** {
 712              		.loc 1 156 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 16
 715              		@ frame_needed = 1, uses_anonymous_args = 0
 716 0000 90B5     		push	{r4, r7, lr}
 717              		.cfi_def_cfa_offset 12
 718              		.cfi_offset 4, -12
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 0002 85B0     		sub	sp, sp, #20
 722              		.cfi_def_cfa_offset 32
 723 0004 00AF     		add	r7, sp, #0
 724              		.cfi_def_cfa_register 7
 725 0006 7860     		str	r0, [r7, #4]
 726 0008 3960     		str	r1, [r7]
 157:voltages.c    ****     int32 median=0;
 727              		.loc 1 157 0
 728 000a 0023     		movs	r3, #0
 729 000c FB60     		str	r3, [r7, #12]
 158:voltages.c    ****     sort32(array,n);
 730              		.loc 1 158 0
 731 000e 3968     		ldr	r1, [r7]
 732 0010 7868     		ldr	r0, [r7, #4]
 733 0012 FFF7FEFF 		bl	sort32
 159:voltages.c    ****     
 160:voltages.c    ****     // If number of elements are even
 161:voltages.c    ****     if(n%2 == 0)
 734              		.loc 1 161 0
 735 0016 3B68     		ldr	r3, [r7]
 736 0018 03F00103 		and	r3, r3, #1
 737 001c 002B     		cmp	r3, #0
 738 001e 23D1     		bne	.L29
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 17


 162:voltages.c    ****         // Median is the average of the  two middle sorted numbers
 163:voltages.c    ****         median = (array[(n-1)/2] + array[n/2])/2.0;
 739              		.loc 1 163 0
 740 0020 3B68     		ldr	r3, [r7]
 741 0022 013B     		subs	r3, r3, #1
 742 0024 DA0F     		lsrs	r2, r3, #31
 743 0026 1344     		add	r3, r3, r2
 744 0028 5B10     		asrs	r3, r3, #1
 745 002a 9B00     		lsls	r3, r3, #2
 746 002c 7A68     		ldr	r2, [r7, #4]
 747 002e 1344     		add	r3, r3, r2
 748 0030 1A68     		ldr	r2, [r3]
 749 0032 3B68     		ldr	r3, [r7]
 750 0034 D90F     		lsrs	r1, r3, #31
 751 0036 0B44     		add	r3, r3, r1
 752 0038 5B10     		asrs	r3, r3, #1
 753 003a 9B00     		lsls	r3, r3, #2
 754 003c 7968     		ldr	r1, [r7, #4]
 755 003e 0B44     		add	r3, r3, r1
 756 0040 1B68     		ldr	r3, [r3]
 757 0042 1344     		add	r3, r3, r2
 758 0044 1846     		mov	r0, r3
 759 0046 FFF7FEFF 		bl	__aeabi_i2d
 760 004a 4FF00002 		mov	r2, #0
 761 004e 4FF08043 		mov	r3, #1073741824
 762 0052 FFF7FEFF 		bl	__aeabi_ddiv
 763 0056 0346     		mov	r3, r0
 764 0058 0C46     		mov	r4, r1
 765 005a 1846     		mov	r0, r3
 766 005c 2146     		mov	r1, r4
 767 005e FFF7FEFF 		bl	__aeabi_d2iz
 768 0062 0346     		mov	r3, r0
 769 0064 FB60     		str	r3, [r7, #12]
 770 0066 08E0     		b	.L30
 771              	.L29:
 164:voltages.c    ****     // If number of elements are odd
 165:voltages.c    ****     else
 166:voltages.c    ****         // Median is the the middle sorted number. 
 167:voltages.c    ****         median = array[n/2];
 772              		.loc 1 167 0
 773 0068 3B68     		ldr	r3, [r7]
 774 006a DA0F     		lsrs	r2, r3, #31
 775 006c 1344     		add	r3, r3, r2
 776 006e 5B10     		asrs	r3, r3, #1
 777 0070 9B00     		lsls	r3, r3, #2
 778 0072 7A68     		ldr	r2, [r7, #4]
 779 0074 1344     		add	r3, r3, r2
 780 0076 1B68     		ldr	r3, [r3]
 781 0078 FB60     		str	r3, [r7, #12]
 782              	.L30:
 168:voltages.c    ****     
 169:voltages.c    ****     return median;
 783              		.loc 1 169 0
 784 007a FB68     		ldr	r3, [r7, #12]
 170:voltages.c    **** }
 785              		.loc 1 170 0
 786 007c 1846     		mov	r0, r3
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 18


 787 007e 1437     		adds	r7, r7, #20
 788              		.cfi_def_cfa_offset 12
 789 0080 BD46     		mov	sp, r7
 790              		.cfi_def_cfa_register 13
 791              		@ sp needed
 792 0082 90BD     		pop	{r4, r7, pc}
 793              		.cfi_endproc
 794              	.LFE69:
 795              		.size	find_median32, .-find_median32
 796              		.section	.rodata
 797              		.align	2
 798              	.LC0:
 799 0000 54455354 		.ascii	"TEST_ANALOG_VOLTAGES\000"
 799      5F414E41 
 799      4C4F475F 
 799      564F4C54 
 799      41474553 
 800 0015 000000   		.align	2
 801              	.LC1:
 802 0018 56424154 		.ascii	"VBAT=%.3f,VSOL=%.3f,CHRG=%.3f\000"
 802      3D252E33 
 802      662C5653 
 802      4F4C3D25 
 802      2E33662C 
 803              		.section	.text.voltages_test,"ax",%progbits
 804              		.align	2
 805              		.global	voltages_test
 806              		.thumb
 807              		.thumb_func
 808              		.type	voltages_test, %function
 809              	voltages_test:
 810              	.LFB70:
 171:voltages.c    **** 
 172:voltages.c    **** // Test the voltage readings
 173:voltages.c    **** test_t voltages_test(){
 811              		.loc 1 173 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 416
 814              		@ frame_needed = 1, uses_anonymous_args = 0
 815 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 816              		.cfi_def_cfa_offset 24
 817              		.cfi_offset 4, -24
 818              		.cfi_offset 5, -20
 819              		.cfi_offset 7, -16
 820              		.cfi_offset 8, -12
 821              		.cfi_offset 9, -8
 822              		.cfi_offset 14, -4
 823 0004 EEB0     		sub	sp, sp, #440
 824              		.cfi_def_cfa_offset 464
 825 0006 06AF     		add	r7, sp, #24
 826              		.cfi_def_cfa 7, 440
 827 0008 3B1D     		adds	r3, r7, #4
 828 000a 1860     		str	r0, [r3]
 174:voltages.c    ****     // Create variable test of the data structure test_t
 175:voltages.c    ****     test_t test;
 176:voltages.c    ****     test.status = 0;
 829              		.loc 1 176 0
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 19


 830 000c 07F11C03 		add	r3, r7, #28
 831 0010 0022     		movs	r2, #0
 832 0012 83F88020 		strb	r2, [r3, #128]
 177:voltages.c    ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_ANALOG_VOLTAGES");
 833              		.loc 1 177 0
 834 0016 07F11C03 		add	r3, r7, #28
 835 001a 264A     		ldr	r2, .L34
 836 001c 1C46     		mov	r4, r3
 837 001e 1546     		mov	r5, r2
 838 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 839 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 840 0024 95E80300 		ldmia	r5, {r0, r1}
 841 0028 2060     		str	r0, [r4]
 842 002a 0434     		adds	r4, r4, #4
 843 002c 2170     		strb	r1, [r4]
 178:voltages.c    ****     
 179:voltages.c    ****     voltage_t voltage = voltage_take_readings();
 844              		.loc 1 179 0
 845 002e 07F10803 		add	r3, r7, #8
 846 0032 1846     		mov	r0, r3
 847 0034 FFF7FEFF 		bl	voltage_take_readings
 180:voltages.c    ****     
 181:voltages.c    ****     //do some checks here if you want the test to meet some voltage requirement
 182:voltages.c    ****     
 183:voltages.c    ****     snprintf(test.reason,sizeof(test.reason),"VBAT=%.3f,VSOL=%.3f,CHRG=%.3f",
 184:voltages.c    ****             voltage.voltage_battery,
 848              		.loc 1 184 0
 849 0038 07F10803 		add	r3, r7, #8
 850 003c 1B68     		ldr	r3, [r3]	@ float
 183:voltages.c    ****             voltage.voltage_battery,
 851              		.loc 1 183 0
 852 003e 1846     		mov	r0, r3
 853 0040 FFF7FEFF 		bl	__aeabi_f2d
 854 0044 0446     		mov	r4, r0
 855 0046 0D46     		mov	r5, r1
 185:voltages.c    ****             voltage.voltage_solar,
 856              		.loc 1 185 0
 857 0048 07F10803 		add	r3, r7, #8
 858 004c 5B68     		ldr	r3, [r3, #4]	@ float
 183:voltages.c    ****             voltage.voltage_battery,
 859              		.loc 1 183 0
 860 004e 1846     		mov	r0, r3
 861 0050 FFF7FEFF 		bl	__aeabi_f2d
 862 0054 8046     		mov	r8, r0
 863 0056 8946     		mov	r9, r1
 186:voltages.c    ****             voltage.voltage_charge_current);
 864              		.loc 1 186 0
 865 0058 07F10803 		add	r3, r7, #8
 866 005c 9B68     		ldr	r3, [r3, #8]	@ float
 183:voltages.c    ****             voltage.voltage_battery,
 867              		.loc 1 183 0
 868 005e 1846     		mov	r0, r3
 869 0060 FFF7FEFF 		bl	__aeabi_f2d
 870 0064 0246     		mov	r2, r0
 871 0066 0B46     		mov	r3, r1
 872 0068 07F11C01 		add	r1, r7, #28
 873 006c 01F18100 		add	r0, r1, #129
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 20


 874 0070 CDE90423 		strd	r2, [sp, #16]
 875 0074 CDE90289 		strd	r8, [sp, #8]
 876 0078 CDE90045 		strd	r4, [sp]
 877 007c 0E4A     		ldr	r2, .L34+4
 878 007e 4FF48071 		mov	r1, #256
 879 0082 FFF7FEFF 		bl	snprintf
 187:voltages.c    ****     
 188:voltages.c    ****     test.status = 1;
 880              		.loc 1 188 0
 881 0086 07F11C03 		add	r3, r7, #28
 882 008a 0122     		movs	r2, #1
 883 008c 83F88020 		strb	r2, [r3, #128]
 189:voltages.c    ****     
 190:voltages.c    ****     return test;
 884              		.loc 1 190 0
 885 0090 3B1D     		adds	r3, r7, #4
 886 0092 1A68     		ldr	r2, [r3]
 887 0094 07F11C03 		add	r3, r7, #28
 888 0098 1046     		mov	r0, r2
 889 009a 1946     		mov	r1, r3
 890 009c 40F28113 		movw	r3, #385
 891 00a0 1A46     		mov	r2, r3
 892 00a2 FFF7FEFF 		bl	memcpy
 191:voltages.c    **** }
 893              		.loc 1 191 0
 894 00a6 3B1D     		adds	r3, r7, #4
 895 00a8 1868     		ldr	r0, [r3]
 896 00aa 07F5D077 		add	r7, r7, #416
 897              		.cfi_def_cfa_offset 24
 898 00ae BD46     		mov	sp, r7
 899              		.cfi_def_cfa_register 13
 900              		@ sp needed
 901 00b0 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 902              	.L35:
 903              		.align	2
 904              	.L34:
 905 00b4 00000000 		.word	.LC0
 906 00b8 18000000 		.word	.LC1
 907              		.cfi_endproc
 908              	.LFE70:
 909              		.size	voltages_test, .-voltages_test
 910              		.section	.rodata
 911 0036 0000     		.align	2
 912              	.LC2:
 913 0038 54455354 		.ascii	"TEST_PRESSURE_SENSOR\000"
 913      5F505245 
 913      53535552 
 913      455F5345 
 913      4E534F52 
 914 004d 000000   		.align	2
 915              	.LC3:
 916 0050 50524553 		.ascii	"PRESSURE=%.3f,PRES_CURRENT=%.3f,PRES_DEPTH=%.3f\000"
 916      53555245 
 916      3D252E33 
 916      662C5052 
 916      45535F43 
 917              		.global	__aeabi_fcmpeq
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 21


 918              		.section	.text.pressure_sensor_test,"ax",%progbits
 919              		.align	2
 920              		.global	pressure_sensor_test
 921              		.thumb
 922              		.thumb_func
 923              		.type	pressure_sensor_test, %function
 924              	pressure_sensor_test:
 925              	.LFB71:
 192:voltages.c    **** 
 193:voltages.c    **** // Test the pressure sensor readings
 194:voltages.c    **** test_t pressure_sensor_test(){
 926              		.loc 1 194 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 416
 929              		@ frame_needed = 1, uses_anonymous_args = 0
 930 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 931              		.cfi_def_cfa_offset 24
 932              		.cfi_offset 4, -24
 933              		.cfi_offset 5, -20
 934              		.cfi_offset 7, -16
 935              		.cfi_offset 8, -12
 936              		.cfi_offset 9, -8
 937              		.cfi_offset 14, -4
 938 0004 EEB0     		sub	sp, sp, #440
 939              		.cfi_def_cfa_offset 464
 940 0006 06AF     		add	r7, sp, #24
 941              		.cfi_def_cfa 7, 440
 942 0008 3B1D     		adds	r3, r7, #4
 943 000a 1860     		str	r0, [r3]
 195:voltages.c    ****     // Create variable test of the data structure test_t
 196:voltages.c    ****     test_t test;
 197:voltages.c    ****     test.status = 0;
 944              		.loc 1 197 0
 945 000c 07F11C03 		add	r3, r7, #28
 946 0010 0022     		movs	r2, #0
 947 0012 83F88020 		strb	r2, [r3, #128]
 198:voltages.c    ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_PRESSURE_SENSOR");
 948              		.loc 1 198 0
 949 0016 07F11C03 		add	r3, r7, #28
 950 001a 374A     		ldr	r2, .L41
 951 001c 1C46     		mov	r4, r3
 952 001e 1546     		mov	r5, r2
 953 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 954 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 955 0024 95E80300 		ldmia	r5, {r0, r1}
 956 0028 2060     		str	r0, [r4]
 957 002a 0434     		adds	r4, r4, #4
 958 002c 2170     		strb	r1, [r4]
 199:voltages.c    ****     
 200:voltages.c    ****     pressure_t pressure = pressure_sensor_readings();
 959              		.loc 1 200 0
 960 002e 07F10C03 		add	r3, r7, #12
 961 0032 1846     		mov	r0, r3
 962 0034 FFF7FEFF 		bl	pressure_sensor_readings
 201:voltages.c    ****     
 202:voltages.c    ****     //do some checks here if you want the test to meet some voltage requirement
 203:voltages.c    ****     
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 22


 204:voltages.c    ****     snprintf(test.reason,sizeof(test.reason),"PRESSURE=%.3f,PRES_CURRENT=%.3f,PRES_DEPTH=%.3f",
 205:voltages.c    ****             pressure.pressure_voltage_on,
 963              		.loc 1 205 0
 964 0038 07F10C03 		add	r3, r7, #12
 965 003c 1B68     		ldr	r3, [r3]	@ float
 204:voltages.c    ****             pressure.pressure_voltage_on,
 966              		.loc 1 204 0
 967 003e 1846     		mov	r0, r3
 968 0040 FFF7FEFF 		bl	__aeabi_f2d
 969 0044 0446     		mov	r4, r0
 970 0046 0D46     		mov	r5, r1
 206:voltages.c    ****             pressure.pressure_current,
 971              		.loc 1 206 0
 972 0048 07F10C03 		add	r3, r7, #12
 973 004c 9B68     		ldr	r3, [r3, #8]	@ float
 204:voltages.c    ****             pressure.pressure_voltage_on,
 974              		.loc 1 204 0
 975 004e 1846     		mov	r0, r3
 976 0050 FFF7FEFF 		bl	__aeabi_f2d
 977 0054 8046     		mov	r8, r0
 978 0056 8946     		mov	r9, r1
 207:voltages.c    ****             pressure.pressure_depth);
 979              		.loc 1 207 0
 980 0058 07F10C03 		add	r3, r7, #12
 981 005c DB68     		ldr	r3, [r3, #12]	@ float
 204:voltages.c    ****             pressure.pressure_voltage_on,
 982              		.loc 1 204 0
 983 005e 1846     		mov	r0, r3
 984 0060 FFF7FEFF 		bl	__aeabi_f2d
 985 0064 0246     		mov	r2, r0
 986 0066 0B46     		mov	r3, r1
 987 0068 07F11C01 		add	r1, r7, #28
 988 006c 01F18100 		add	r0, r1, #129
 989 0070 CDE90423 		strd	r2, [sp, #16]
 990 0074 CDE90289 		strd	r8, [sp, #8]
 991 0078 CDE90045 		strd	r4, [sp]
 992 007c 1F4A     		ldr	r2, .L41+4
 993 007e 4FF48071 		mov	r1, #256
 994 0082 FFF7FEFF 		bl	snprintf
 208:voltages.c    ****     pressure.pressure_voltage_on = floorf(pressure.pressure_voltage_on * 100) / 100;
 995              		.loc 1 208 0
 996 0086 07F10C03 		add	r3, r7, #12
 997 008a 1B68     		ldr	r3, [r3]	@ float
 998 008c 1C49     		ldr	r1, .L41+8
 999 008e 1846     		mov	r0, r3
 1000 0090 FFF7FEFF 		bl	__aeabi_fmul
 1001 0094 0346     		mov	r3, r0
 1002 0096 1846     		mov	r0, r3
 1003 0098 FFF7FEFF 		bl	floorf
 1004 009c 0346     		mov	r3, r0
 1005 009e 1849     		ldr	r1, .L41+8
 1006 00a0 1846     		mov	r0, r3
 1007 00a2 FFF7FEFF 		bl	__aeabi_fdiv
 1008 00a6 0346     		mov	r3, r0
 1009 00a8 1A46     		mov	r2, r3
 1010 00aa 07F10C03 		add	r3, r7, #12
 1011 00ae 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 23


 209:voltages.c    ****     if (pressure.pressure_voltage_off != pressure.pressure_voltage_on) {
 1012              		.loc 1 209 0
 1013 00b0 07F10C03 		add	r3, r7, #12
 1014 00b4 5A68     		ldr	r2, [r3, #4]	@ float
 1015 00b6 07F10C03 		add	r3, r7, #12
 1016 00ba 1B68     		ldr	r3, [r3]	@ float
 1017 00bc 1946     		mov	r1, r3
 1018 00be 1046     		mov	r0, r2
 1019 00c0 FFF7FEFF 		bl	__aeabi_fcmpeq
 1020 00c4 0346     		mov	r3, r0
 1021 00c6 002B     		cmp	r3, #0
 1022 00c8 04D1     		bne	.L37
 210:voltages.c    ****         test.status = 1;
 1023              		.loc 1 210 0
 1024 00ca 07F11C03 		add	r3, r7, #28
 1025 00ce 0122     		movs	r2, #1
 1026 00d0 83F88020 		strb	r2, [r3, #128]
 1027              	.L37:
 211:voltages.c    ****     }
 212:voltages.c    ****     
 213:voltages.c    ****     return test;
 1028              		.loc 1 213 0
 1029 00d4 3B1D     		adds	r3, r7, #4
 1030 00d6 1A68     		ldr	r2, [r3]
 1031 00d8 07F11C03 		add	r3, r7, #28
 1032 00dc 1046     		mov	r0, r2
 1033 00de 1946     		mov	r1, r3
 1034 00e0 40F28113 		movw	r3, #385
 1035 00e4 1A46     		mov	r2, r3
 1036 00e6 FFF7FEFF 		bl	memcpy
 214:voltages.c    **** }
 1037              		.loc 1 214 0
 1038 00ea 3B1D     		adds	r3, r7, #4
 1039 00ec 1868     		ldr	r0, [r3]
 1040 00ee 07F5D077 		add	r7, r7, #416
 1041              		.cfi_def_cfa_offset 24
 1042 00f2 BD46     		mov	sp, r7
 1043              		.cfi_def_cfa_register 13
 1044              		@ sp needed
 1045 00f4 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 1046              	.L42:
 1047              		.align	2
 1048              	.L41:
 1049 00f8 38000000 		.word	.LC2
 1050 00fc 50000000 		.word	.LC3
 1051 0100 0000C842 		.word	1120403456
 1052              		.cfi_endproc
 1053              	.LFE71:
 1054              		.size	pressure_sensor_test, .-pressure_sensor_test
 1055              		.text
 1056              	.Letext0:
 1057              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1058              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1059              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1060              		.file 5 "testing.h"
 1061              		.file 6 "voltages.h"
 1062              		.file 7 "data.h"
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 24


 1063              		.file 8 "modem.h"
 1064              		.file 9 "notoriOS.h"
 1065              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 1066              		.file 11 "App_LED.h"
 1067              		.file 12 "level_sensor.h"
 1068              		.file 13 "valve.h"
 1069              		.file 14 "autosampler.h"
 1070              		.section	.debug_info,"",%progbits
 1071              	.Ldebug_info0:
 1072 0000 A0090000 		.4byte	0x9a0
 1073 0004 0400     		.2byte	0x4
 1074 0006 00000000 		.4byte	.Ldebug_abbrev0
 1075 000a 04       		.byte	0x4
 1076 000b 01       		.uleb128 0x1
 1077 000c 5C000000 		.4byte	.LASF129
 1078 0010 0C       		.byte	0xc
 1079 0011 11060000 		.4byte	.LASF130
 1080 0015 4B030000 		.4byte	.LASF131
 1081 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1082 001d 00000000 		.4byte	0
 1083 0021 00000000 		.4byte	.Ldebug_line0
 1084 0025 02       		.uleb128 0x2
 1085 0026 01       		.byte	0x1
 1086 0027 06       		.byte	0x6
 1087 0028 60010000 		.4byte	.LASF0
 1088 002c 02       		.uleb128 0x2
 1089 002d 01       		.byte	0x1
 1090 002e 08       		.byte	0x8
 1091 002f B5040000 		.4byte	.LASF1
 1092 0033 02       		.uleb128 0x2
 1093 0034 02       		.byte	0x2
 1094 0035 05       		.byte	0x5
 1095 0036 A5030000 		.4byte	.LASF2
 1096 003a 02       		.uleb128 0x2
 1097 003b 02       		.byte	0x2
 1098 003c 07       		.byte	0x7
 1099 003d F7050000 		.4byte	.LASF3
 1100 0041 03       		.uleb128 0x3
 1101 0042 D9050000 		.4byte	.LASF9
 1102 0046 02       		.byte	0x2
 1103 0047 3F       		.byte	0x3f
 1104 0048 4C000000 		.4byte	0x4c
 1105 004c 02       		.uleb128 0x2
 1106 004d 04       		.byte	0x4
 1107 004e 05       		.byte	0x5
 1108 004f F9010000 		.4byte	.LASF4
 1109 0053 02       		.uleb128 0x2
 1110 0054 04       		.byte	0x4
 1111 0055 07       		.byte	0x7
 1112 0056 09030000 		.4byte	.LASF5
 1113 005a 02       		.uleb128 0x2
 1114 005b 08       		.byte	0x8
 1115 005c 05       		.byte	0x5
 1116 005d 52010000 		.4byte	.LASF6
 1117 0061 02       		.uleb128 0x2
 1118 0062 08       		.byte	0x8
 1119 0063 07       		.byte	0x7
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 25


 1120 0064 EA000000 		.4byte	.LASF7
 1121 0068 04       		.uleb128 0x4
 1122 0069 04       		.byte	0x4
 1123 006a 05       		.byte	0x5
 1124 006b 696E7400 		.ascii	"int\000"
 1125 006f 02       		.uleb128 0x2
 1126 0070 04       		.byte	0x4
 1127 0071 07       		.byte	0x7
 1128 0072 B6050000 		.4byte	.LASF8
 1129 0076 03       		.uleb128 0x3
 1130 0077 AD040000 		.4byte	.LASF10
 1131 007b 03       		.byte	0x3
 1132 007c 2C       		.byte	0x2c
 1133 007d 41000000 		.4byte	0x41
 1134 0081 05       		.uleb128 0x5
 1135 0082 39020000 		.4byte	.LASF11
 1136 0086 04       		.byte	0x4
 1137 0087 9201     		.2byte	0x192
 1138 0089 2C000000 		.4byte	0x2c
 1139 008d 05       		.uleb128 0x5
 1140 008e 00000000 		.4byte	.LASF12
 1141 0092 04       		.byte	0x4
 1142 0093 9301     		.2byte	0x193
 1143 0095 3A000000 		.4byte	0x3a
 1144 0099 05       		.uleb128 0x5
 1145 009a 3F040000 		.4byte	.LASF13
 1146 009e 04       		.byte	0x4
 1147 009f 9601     		.2byte	0x196
 1148 00a1 33000000 		.4byte	0x33
 1149 00a5 05       		.uleb128 0x5
 1150 00a6 4C020000 		.4byte	.LASF14
 1151 00aa 04       		.byte	0x4
 1152 00ab 9701     		.2byte	0x197
 1153 00ad 4C000000 		.4byte	0x4c
 1154 00b1 05       		.uleb128 0x5
 1155 00b2 24040000 		.4byte	.LASF15
 1156 00b6 04       		.byte	0x4
 1157 00b7 9801     		.2byte	0x198
 1158 00b9 BD000000 		.4byte	0xbd
 1159 00bd 02       		.uleb128 0x2
 1160 00be 04       		.byte	0x4
 1161 00bf 04       		.byte	0x4
 1162 00c0 A1040000 		.4byte	.LASF16
 1163 00c4 02       		.uleb128 0x2
 1164 00c5 08       		.byte	0x8
 1165 00c6 04       		.byte	0x4
 1166 00c7 43070000 		.4byte	.LASF17
 1167 00cb 02       		.uleb128 0x2
 1168 00cc 01       		.byte	0x1
 1169 00cd 08       		.byte	0x8
 1170 00ce B1050000 		.4byte	.LASF18
 1171 00d2 02       		.uleb128 0x2
 1172 00d3 08       		.byte	0x8
 1173 00d4 04       		.byte	0x4
 1174 00d5 A5050000 		.4byte	.LASF19
 1175 00d9 02       		.uleb128 0x2
 1176 00da 04       		.byte	0x4
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 26


 1177 00db 07       		.byte	0x7
 1178 00dc 2C040000 		.4byte	.LASF20
 1179 00e0 06       		.uleb128 0x6
 1180 00e1 CB000000 		.4byte	0xcb
 1181 00e5 F0000000 		.4byte	0xf0
 1182 00e9 07       		.uleb128 0x7
 1183 00ea D9000000 		.4byte	0xd9
 1184 00ee 17       		.byte	0x17
 1185 00ef 00       		.byte	0
 1186 00f0 08       		.uleb128 0x8
 1187 00f1 8101     		.2byte	0x181
 1188 00f3 05       		.byte	0x5
 1189 00f4 0A       		.byte	0xa
 1190 00f5 1E010000 		.4byte	0x11e
 1191 00f9 09       		.uleb128 0x9
 1192 00fa 35040000 		.4byte	.LASF21
 1193 00fe 05       		.byte	0x5
 1194 00ff 0C       		.byte	0xc
 1195 0100 1E010000 		.4byte	0x11e
 1196 0104 00       		.byte	0
 1197 0105 09       		.uleb128 0x9
 1198 0106 5D060000 		.4byte	.LASF22
 1199 010a 05       		.byte	0x5
 1200 010b 0D       		.byte	0xd
 1201 010c 81000000 		.4byte	0x81
 1202 0110 80       		.byte	0x80
 1203 0111 09       		.uleb128 0x9
 1204 0112 3E050000 		.4byte	.LASF23
 1205 0116 05       		.byte	0x5
 1206 0117 0F       		.byte	0xf
 1207 0118 2E010000 		.4byte	0x12e
 1208 011c 81       		.byte	0x81
 1209 011d 00       		.byte	0
 1210 011e 06       		.uleb128 0x6
 1211 011f CB000000 		.4byte	0xcb
 1212 0123 2E010000 		.4byte	0x12e
 1213 0127 07       		.uleb128 0x7
 1214 0128 D9000000 		.4byte	0xd9
 1215 012c 7F       		.byte	0x7f
 1216 012d 00       		.byte	0
 1217 012e 06       		.uleb128 0x6
 1218 012f CB000000 		.4byte	0xcb
 1219 0133 3E010000 		.4byte	0x13e
 1220 0137 07       		.uleb128 0x7
 1221 0138 D9000000 		.4byte	0xd9
 1222 013c FF       		.byte	0xff
 1223 013d 00       		.byte	0
 1224 013e 03       		.uleb128 0x3
 1225 013f 09050000 		.4byte	.LASF24
 1226 0143 05       		.byte	0x5
 1227 0144 10       		.byte	0x10
 1228 0145 F0000000 		.4byte	0xf0
 1229 0149 0A       		.uleb128 0xa
 1230 014a 14       		.byte	0x14
 1231 014b 06       		.byte	0x6
 1232 014c 15       		.byte	0x15
 1233 014d 8E010000 		.4byte	0x18e
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 27


 1234 0151 09       		.uleb128 0x9
 1235 0152 1B030000 		.4byte	.LASF25
 1236 0156 06       		.byte	0x6
 1237 0157 16       		.byte	0x16
 1238 0158 BD000000 		.4byte	0xbd
 1239 015c 00       		.byte	0
 1240 015d 09       		.uleb128 0x9
 1241 015e 88020000 		.4byte	.LASF26
 1242 0162 06       		.byte	0x6
 1243 0163 17       		.byte	0x17
 1244 0164 BD000000 		.4byte	0xbd
 1245 0168 04       		.byte	0x4
 1246 0169 09       		.uleb128 0x9
 1247 016a A2010000 		.4byte	.LASF27
 1248 016e 06       		.byte	0x6
 1249 016f 18       		.byte	0x18
 1250 0170 BD000000 		.4byte	0xbd
 1251 0174 08       		.byte	0x8
 1252 0175 09       		.uleb128 0x9
 1253 0176 84040000 		.4byte	.LASF28
 1254 017a 06       		.byte	0x6
 1255 017b 19       		.byte	0x19
 1256 017c BD000000 		.4byte	0xbd
 1257 0180 0C       		.byte	0xc
 1258 0181 09       		.uleb128 0x9
 1259 0182 69050000 		.4byte	.LASF29
 1260 0186 06       		.byte	0x6
 1261 0187 1A       		.byte	0x1a
 1262 0188 81000000 		.4byte	0x81
 1263 018c 10       		.byte	0x10
 1264 018d 00       		.byte	0
 1265 018e 03       		.uleb128 0x3
 1266 018f D2030000 		.4byte	.LASF30
 1267 0193 06       		.byte	0x6
 1268 0194 1B       		.byte	0x1b
 1269 0195 49010000 		.4byte	0x149
 1270 0199 0A       		.uleb128 0xa
 1271 019a 10       		.byte	0x10
 1272 019b 06       		.byte	0x6
 1273 019c 1D       		.byte	0x1d
 1274 019d D2010000 		.4byte	0x1d2
 1275 01a1 09       		.uleb128 0x9
 1276 01a2 D9020000 		.4byte	.LASF31
 1277 01a6 06       		.byte	0x6
 1278 01a7 1E       		.byte	0x1e
 1279 01a8 BD000000 		.4byte	0xbd
 1280 01ac 00       		.byte	0
 1281 01ad 09       		.uleb128 0x9
 1282 01ae 24020000 		.4byte	.LASF32
 1283 01b2 06       		.byte	0x6
 1284 01b3 1F       		.byte	0x1f
 1285 01b4 BD000000 		.4byte	0xbd
 1286 01b8 04       		.byte	0x4
 1287 01b9 09       		.uleb128 0x9
 1288 01ba 58050000 		.4byte	.LASF33
 1289 01be 06       		.byte	0x6
 1290 01bf 20       		.byte	0x20
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 28


 1291 01c0 BD000000 		.4byte	0xbd
 1292 01c4 08       		.byte	0x8
 1293 01c5 09       		.uleb128 0x9
 1294 01c6 10050000 		.4byte	.LASF34
 1295 01ca 06       		.byte	0x6
 1296 01cb 21       		.byte	0x21
 1297 01cc BD000000 		.4byte	0xbd
 1298 01d0 0C       		.byte	0xc
 1299 01d1 00       		.byte	0
 1300 01d2 03       		.uleb128 0x3
 1301 01d3 2B070000 		.4byte	.LASF35
 1302 01d7 06       		.byte	0x6
 1303 01d8 22       		.byte	0x22
 1304 01d9 99010000 		.4byte	0x199
 1305 01dd 0A       		.uleb128 0xa
 1306 01de 2C       		.byte	0x2c
 1307 01df 07       		.byte	0x7
 1308 01e0 14       		.byte	0x14
 1309 01e1 0A020000 		.4byte	0x20a
 1310 01e5 0B       		.uleb128 0xb
 1311 01e6 6B657900 		.ascii	"key\000"
 1312 01ea 07       		.byte	0x7
 1313 01eb 15       		.byte	0x15
 1314 01ec 0A020000 		.4byte	0x20a
 1315 01f0 00       		.byte	0
 1316 01f1 09       		.uleb128 0x9
 1317 01f2 B0020000 		.4byte	.LASF36
 1318 01f6 07       		.byte	0x7
 1319 01f7 16       		.byte	0x16
 1320 01f8 0A020000 		.4byte	0x20a
 1321 01fc 14       		.byte	0x14
 1322 01fd 09       		.uleb128 0x9
 1323 01fe 5C040000 		.4byte	.LASF37
 1324 0202 07       		.byte	0x7
 1325 0203 17       		.byte	0x17
 1326 0204 A5000000 		.4byte	0xa5
 1327 0208 28       		.byte	0x28
 1328 0209 00       		.byte	0
 1329 020a 06       		.uleb128 0x6
 1330 020b CB000000 		.4byte	0xcb
 1331 020f 1A020000 		.4byte	0x21a
 1332 0213 07       		.uleb128 0x7
 1333 0214 D9000000 		.4byte	0xd9
 1334 0218 13       		.byte	0x13
 1335 0219 00       		.byte	0
 1336 021a 03       		.uleb128 0x3
 1337 021b FD020000 		.4byte	.LASF38
 1338 021f 07       		.byte	0x7
 1339 0220 19       		.byte	0x19
 1340 0221 DD010000 		.4byte	0x1dd
 1341 0225 0A       		.uleb128 0xa
 1342 0226 3C       		.byte	0x3c
 1343 0227 08       		.byte	0x8
 1344 0228 36       		.byte	0x36
 1345 0229 52020000 		.4byte	0x252
 1346 022d 09       		.uleb128 0x9
 1347 022e 0A060000 		.4byte	.LASF39
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 29


 1348 0232 08       		.byte	0x8
 1349 0233 37       		.byte	0x37
 1350 0234 0A020000 		.4byte	0x20a
 1351 0238 00       		.byte	0
 1352 0239 09       		.uleb128 0x9
 1353 023a 70020000 		.4byte	.LASF40
 1354 023e 08       		.byte	0x8
 1355 023f 38       		.byte	0x38
 1356 0240 0A020000 		.4byte	0x20a
 1357 0244 14       		.byte	0x14
 1358 0245 09       		.uleb128 0x9
 1359 0246 39050000 		.4byte	.LASF41
 1360 024a 08       		.byte	0x8
 1361 024b 39       		.byte	0x39
 1362 024c 0A020000 		.4byte	0x20a
 1363 0250 28       		.byte	0x28
 1364 0251 00       		.byte	0
 1365 0252 03       		.uleb128 0x3
 1366 0253 C8010000 		.4byte	.LASF42
 1367 0257 08       		.byte	0x8
 1368 0258 3B       		.byte	0x3b
 1369 0259 25020000 		.4byte	0x225
 1370 025d 0A       		.uleb128 0xa
 1371 025e 20       		.byte	0x20
 1372 025f 08       		.byte	0x8
 1373 0260 3D       		.byte	0x3d
 1374 0261 C6020000 		.4byte	0x2c6
 1375 0265 09       		.uleb128 0x9
 1376 0266 02020000 		.4byte	.LASF43
 1377 026a 08       		.byte	0x8
 1378 026b 3E       		.byte	0x3e
 1379 026c 68000000 		.4byte	0x68
 1380 0270 00       		.byte	0
 1381 0271 0B       		.uleb128 0xb
 1382 0272 62657200 		.ascii	"ber\000"
 1383 0276 08       		.byte	0x8
 1384 0277 3F       		.byte	0x3f
 1385 0278 68000000 		.4byte	0x68
 1386 027c 04       		.byte	0x4
 1387 027d 09       		.uleb128 0x9
 1388 027e 1F050000 		.4byte	.LASF44
 1389 0282 08       		.byte	0x8
 1390 0283 40       		.byte	0x40
 1391 0284 68000000 		.4byte	0x68
 1392 0288 08       		.byte	0x8
 1393 0289 09       		.uleb128 0x9
 1394 028a 6C010000 		.4byte	.LASF45
 1395 028e 08       		.byte	0x8
 1396 028f 41       		.byte	0x41
 1397 0290 68000000 		.4byte	0x68
 1398 0294 0C       		.byte	0xc
 1399 0295 09       		.uleb128 0x9
 1400 0296 F3040000 		.4byte	.LASF46
 1401 029a 08       		.byte	0x8
 1402 029b 42       		.byte	0x42
 1403 029c 68000000 		.4byte	0x68
 1404 02a0 10       		.byte	0x10
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 30


 1405 02a1 09       		.uleb128 0x9
 1406 02a2 45050000 		.4byte	.LASF47
 1407 02a6 08       		.byte	0x8
 1408 02a7 43       		.byte	0x43
 1409 02a8 68000000 		.4byte	0x68
 1410 02ac 14       		.byte	0x14
 1411 02ad 09       		.uleb128 0x9
 1412 02ae 7F010000 		.4byte	.LASF48
 1413 02b2 08       		.byte	0x8
 1414 02b3 44       		.byte	0x44
 1415 02b4 68000000 		.4byte	0x68
 1416 02b8 18       		.byte	0x18
 1417 02b9 09       		.uleb128 0x9
 1418 02ba 92030000 		.4byte	.LASF49
 1419 02be 08       		.byte	0x8
 1420 02bf 45       		.byte	0x45
 1421 02c0 68000000 		.4byte	0x68
 1422 02c4 1C       		.byte	0x1c
 1423 02c5 00       		.byte	0
 1424 02c6 03       		.uleb128 0x3
 1425 02c7 4A050000 		.4byte	.LASF50
 1426 02cb 08       		.byte	0x8
 1427 02cc 47       		.byte	0x47
 1428 02cd 5D020000 		.4byte	0x25d
 1429 02d1 0A       		.uleb128 0xa
 1430 02d2 0A       		.byte	0xa
 1431 02d3 08       		.byte	0x8
 1432 02d4 53       		.byte	0x53
 1433 02d5 52030000 		.4byte	0x352
 1434 02d9 09       		.uleb128 0x9
 1435 02da 52020000 		.4byte	.LASF51
 1436 02de 08       		.byte	0x8
 1437 02df 55       		.byte	0x55
 1438 02e0 81000000 		.4byte	0x81
 1439 02e4 00       		.byte	0
 1440 02e5 09       		.uleb128 0x9
 1441 02e6 22070000 		.4byte	.LASF52
 1442 02ea 08       		.byte	0x8
 1443 02eb 57       		.byte	0x57
 1444 02ec 52030000 		.4byte	0x352
 1445 02f0 01       		.byte	0x1
 1446 02f1 09       		.uleb128 0x9
 1447 02f2 E3050000 		.4byte	.LASF53
 1448 02f6 08       		.byte	0x8
 1449 02f7 59       		.byte	0x59
 1450 02f8 81000000 		.4byte	0x81
 1451 02fc 02       		.byte	0x2
 1452 02fd 09       		.uleb128 0x9
 1453 02fe F8040000 		.4byte	.LASF54
 1454 0302 08       		.byte	0x8
 1455 0303 5B       		.byte	0x5b
 1456 0304 81000000 		.4byte	0x81
 1457 0308 03       		.byte	0x3
 1458 0309 09       		.uleb128 0x9
 1459 030a A4020000 		.4byte	.LASF55
 1460 030e 08       		.byte	0x8
 1461 030f 5E       		.byte	0x5e
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 31


 1462 0310 81000000 		.4byte	0x81
 1463 0314 04       		.byte	0x4
 1464 0315 09       		.uleb128 0x9
 1465 0316 A4060000 		.4byte	.LASF56
 1466 031a 08       		.byte	0x8
 1467 031b 63       		.byte	0x63
 1468 031c 81000000 		.4byte	0x81
 1469 0320 05       		.byte	0x5
 1470 0321 09       		.uleb128 0x9
 1471 0322 80050000 		.4byte	.LASF57
 1472 0326 08       		.byte	0x8
 1473 0327 65       		.byte	0x65
 1474 0328 81000000 		.4byte	0x81
 1475 032c 06       		.byte	0x6
 1476 032d 09       		.uleb128 0x9
 1477 032e 1C060000 		.4byte	.LASF58
 1478 0332 08       		.byte	0x8
 1479 0333 66       		.byte	0x66
 1480 0334 81000000 		.4byte	0x81
 1481 0338 07       		.byte	0x7
 1482 0339 09       		.uleb128 0x9
 1483 033a E8040000 		.4byte	.LASF59
 1484 033e 08       		.byte	0x8
 1485 033f 67       		.byte	0x67
 1486 0340 81000000 		.4byte	0x81
 1487 0344 08       		.byte	0x8
 1488 0345 09       		.uleb128 0x9
 1489 0346 03070000 		.4byte	.LASF60
 1490 034a 08       		.byte	0x8
 1491 034b 68       		.byte	0x68
 1492 034c 81000000 		.4byte	0x81
 1493 0350 09       		.byte	0x9
 1494 0351 00       		.byte	0
 1495 0352 02       		.uleb128 0x2
 1496 0353 01       		.byte	0x1
 1497 0354 02       		.byte	0x2
 1498 0355 A7040000 		.4byte	.LASF61
 1499 0359 03       		.uleb128 0x3
 1500 035a 01010000 		.4byte	.LASF62
 1501 035e 08       		.byte	0x8
 1502 035f 6E       		.byte	0x6e
 1503 0360 D1020000 		.4byte	0x2d1
 1504 0364 0A       		.uleb128 0xa
 1505 0365 06       		.byte	0x6
 1506 0366 09       		.byte	0x9
 1507 0367 35       		.byte	0x35
 1508 0368 9D030000 		.4byte	0x39d
 1509 036c 09       		.uleb128 0x9
 1510 036d 79020000 		.4byte	.LASF63
 1511 0371 09       		.byte	0x9
 1512 0372 37       		.byte	0x37
 1513 0373 8D000000 		.4byte	0x8d
 1514 0377 00       		.byte	0
 1515 0378 09       		.uleb128 0x9
 1516 0379 08020000 		.4byte	.LASF64
 1517 037d 09       		.byte	0x9
 1518 037e 38       		.byte	0x38
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 32


 1519 037f 99000000 		.4byte	0x99
 1520 0383 02       		.byte	0x2
 1521 0384 09       		.uleb128 0x9
 1522 0385 14070000 		.4byte	.LASF65
 1523 0389 09       		.byte	0x9
 1524 038a 39       		.byte	0x39
 1525 038b 81000000 		.4byte	0x81
 1526 038f 04       		.byte	0x4
 1527 0390 09       		.uleb128 0x9
 1528 0391 32000000 		.4byte	.LASF66
 1529 0395 09       		.byte	0x9
 1530 0396 3A       		.byte	0x3a
 1531 0397 81000000 		.4byte	0x81
 1532 039b 05       		.byte	0x5
 1533 039c 00       		.byte	0
 1534 039d 03       		.uleb128 0x3
 1535 039e 1E020000 		.4byte	.LASF67
 1536 03a2 09       		.byte	0x9
 1537 03a3 3D       		.byte	0x3d
 1538 03a4 A8030000 		.4byte	0x3a8
 1539 03a8 0C       		.uleb128 0xc
 1540 03a9 64030000 		.4byte	0x364
 1541 03ad 0A       		.uleb128 0xa
 1542 03ae 1C       		.byte	0x1c
 1543 03af 09       		.byte	0x9
 1544 03b0 40       		.byte	0x40
 1545 03b1 CE030000 		.4byte	0x3ce
 1546 03b5 09       		.uleb128 0x9
 1547 03b6 38030000 		.4byte	.LASF68
 1548 03ba 09       		.byte	0x9
 1549 03bb 42       		.byte	0x42
 1550 03bc CE030000 		.4byte	0x3ce
 1551 03c0 00       		.byte	0
 1552 03c1 09       		.uleb128 0x9
 1553 03c2 62020000 		.4byte	.LASF69
 1554 03c6 09       		.byte	0x9
 1555 03c7 43       		.byte	0x43
 1556 03c8 E0000000 		.4byte	0xe0
 1557 03cc 04       		.byte	0x4
 1558 03cd 00       		.byte	0
 1559 03ce 0D       		.uleb128 0xd
 1560 03cf 04       		.byte	0x4
 1561 03d0 52020000 		.4byte	0x252
 1562 03d4 03       		.uleb128 0x3
 1563 03d5 DC030000 		.4byte	.LASF70
 1564 03d9 09       		.byte	0x9
 1565 03da 45       		.byte	0x45
 1566 03db AD030000 		.4byte	0x3ad
 1567 03df 0A       		.uleb128 0xa
 1568 03e0 68       		.byte	0x68
 1569 03e1 09       		.byte	0x9
 1570 03e2 4B       		.byte	0x4b
 1571 03e3 00040000 		.4byte	0x400
 1572 03e7 09       		.uleb128 0x9
 1573 03e8 43030000 		.4byte	.LASF71
 1574 03ec 09       		.byte	0x9
 1575 03ed 50       		.byte	0x50
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 33


 1576 03ee 00040000 		.4byte	0x400
 1577 03f2 00       		.byte	0
 1578 03f3 09       		.uleb128 0x9
 1579 03f4 30030000 		.4byte	.LASF72
 1580 03f8 09       		.byte	0x9
 1581 03f9 51       		.byte	0x51
 1582 03fa 68000000 		.4byte	0x68
 1583 03fe 64       		.byte	0x64
 1584 03ff 00       		.byte	0
 1585 0400 06       		.uleb128 0x6
 1586 0401 CB000000 		.4byte	0xcb
 1587 0405 10040000 		.4byte	0x410
 1588 0409 07       		.uleb128 0x7
 1589 040a D9000000 		.4byte	0xd9
 1590 040e 63       		.byte	0x63
 1591 040f 00       		.byte	0
 1592 0410 03       		.uleb128 0x3
 1593 0411 B1060000 		.4byte	.LASF73
 1594 0415 09       		.byte	0x9
 1595 0416 57       		.byte	0x57
 1596 0417 DF030000 		.4byte	0x3df
 1597 041b 0E       		.uleb128 0xe
 1598 041c 39060000 		.4byte	.LASF78
 1599 0420 01       		.byte	0x1
 1600 0421 06       		.byte	0x6
 1601 0422 8E010000 		.4byte	0x18e
 1602 0426 00000000 		.4byte	.LFB64
 1603 042a 34010000 		.4byte	.LFE64-.LFB64
 1604 042e 01       		.uleb128 0x1
 1605 042f 9C       		.byte	0x9c
 1606 0430 A5040000 		.4byte	0x4a5
 1607 0434 0F       		.uleb128 0xf
 1608 0435 18010000 		.4byte	.LASF74
 1609 0439 01       		.byte	0x1
 1610 043a 08       		.byte	0x8
 1611 043b 8E010000 		.4byte	0x18e
 1612 043f 02       		.uleb128 0x2
 1613 0440 91       		.byte	0x91
 1614 0441 54       		.sleb128 -44
 1615 0442 0F       		.uleb128 0xf
 1616 0443 F0010000 		.4byte	.LASF75
 1617 0447 01       		.byte	0x1
 1618 0448 15       		.byte	0x15
 1619 0449 A5040000 		.4byte	0x4a5
 1620 044d 03       		.uleb128 0x3
 1621 044e 91       		.byte	0x91
 1622 044f B47F     		.sleb128 -76
 1623 0451 0F       		.uleb128 0xf
 1624 0452 F0050000 		.4byte	.LASF76
 1625 0456 01       		.byte	0x1
 1626 0457 31       		.byte	0x31
 1627 0458 BD000000 		.4byte	0xbd
 1628 045c 02       		.uleb128 0x2
 1629 045d 91       		.byte	0x91
 1630 045e 68       		.sleb128 -24
 1631 045f 10       		.uleb128 0x10
 1632 0460 26000000 		.4byte	.LBB2
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 34


 1633 0464 7A000000 		.4byte	.LBE2-.LBB2
 1634 0468 11       		.uleb128 0x11
 1635 0469 6300     		.ascii	"c\000"
 1636 046b 01       		.byte	0x1
 1637 046c 17       		.byte	0x17
 1638 046d 81000000 		.4byte	0x81
 1639 0471 02       		.uleb128 0x2
 1640 0472 91       		.byte	0x91
 1641 0473 6F       		.sleb128 -17
 1642 0474 10       		.uleb128 0x10
 1643 0475 2E000000 		.4byte	.LBB3
 1644 0479 60000000 		.4byte	.LBE3-.LBB3
 1645 047d 0F       		.uleb128 0xf
 1646 047e 24050000 		.4byte	.LASF77
 1647 0482 01       		.byte	0x1
 1648 0483 1A       		.byte	0x1a
 1649 0484 B5040000 		.4byte	0x4b5
 1650 0488 03       		.uleb128 0x3
 1651 0489 91       		.byte	0x91
 1652 048a 887F     		.sleb128 -120
 1653 048c 10       		.uleb128 0x10
 1654 048d 38000000 		.4byte	.LBB4
 1655 0491 30000000 		.4byte	.LBE4-.LBB4
 1656 0495 11       		.uleb128 0x11
 1657 0496 6900     		.ascii	"i\000"
 1658 0498 01       		.byte	0x1
 1659 0499 1E       		.byte	0x1e
 1660 049a 8D000000 		.4byte	0x8d
 1661 049e 02       		.uleb128 0x2
 1662 049f 91       		.byte	0x91
 1663 04a0 6C       		.sleb128 -20
 1664 04a1 00       		.byte	0
 1665 04a2 00       		.byte	0
 1666 04a3 00       		.byte	0
 1667 04a4 00       		.byte	0
 1668 04a5 06       		.uleb128 0x6
 1669 04a6 BD000000 		.4byte	0xbd
 1670 04aa B5040000 		.4byte	0x4b5
 1671 04ae 07       		.uleb128 0x7
 1672 04af D9000000 		.4byte	0xd9
 1673 04b3 07       		.byte	0x7
 1674 04b4 00       		.byte	0
 1675 04b5 06       		.uleb128 0x6
 1676 04b6 A5000000 		.4byte	0xa5
 1677 04ba C5040000 		.4byte	0x4c5
 1678 04be 07       		.uleb128 0x7
 1679 04bf D9000000 		.4byte	0xd9
 1680 04c3 0A       		.byte	0xa
 1681 04c4 00       		.byte	0
 1682 04c5 0E       		.uleb128 0xe
 1683 04c6 B6020000 		.4byte	.LASF79
 1684 04ca 01       		.byte	0x1
 1685 04cb 3E       		.byte	0x3e
 1686 04cc D2010000 		.4byte	0x1d2
 1687 04d0 00000000 		.4byte	.LFB65
 1688 04d4 98010000 		.4byte	.LFE65-.LFB65
 1689 04d8 01       		.uleb128 0x1
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 35


 1690 04d9 9C       		.byte	0x9c
 1691 04da 3B050000 		.4byte	0x53b
 1692 04de 0F       		.uleb128 0xf
 1693 04df 7B040000 		.4byte	.LASF80
 1694 04e3 01       		.byte	0x1
 1695 04e4 40       		.byte	0x40
 1696 04e5 D2010000 		.4byte	0x1d2
 1697 04e9 02       		.uleb128 0x2
 1698 04ea 91       		.byte	0x91
 1699 04eb 5C       		.sleb128 -36
 1700 04ec 0F       		.uleb128 0xf
 1701 04ed F0010000 		.4byte	.LASF75
 1702 04f1 01       		.byte	0x1
 1703 04f2 41       		.byte	0x41
 1704 04f3 A5040000 		.4byte	0x4a5
 1705 04f7 03       		.uleb128 0x3
 1706 04f8 91       		.byte	0x91
 1707 04f9 BC7F     		.sleb128 -68
 1708 04fb 0F       		.uleb128 0xf
 1709 04fc 24050000 		.4byte	.LASF77
 1710 0500 01       		.byte	0x1
 1711 0501 42       		.byte	0x42
 1712 0502 B5040000 		.4byte	0x4b5
 1713 0506 03       		.uleb128 0x3
 1714 0507 91       		.byte	0x91
 1715 0508 907F     		.sleb128 -112
 1716 050a 12       		.uleb128 0x12
 1717 050b 1A000000 		.4byte	.LBB5
 1718 050f 30000000 		.4byte	.LBE5-.LBB5
 1719 0513 24050000 		.4byte	0x524
 1720 0517 11       		.uleb128 0x11
 1721 0518 6900     		.ascii	"i\000"
 1722 051a 01       		.byte	0x1
 1723 051b 4C       		.byte	0x4c
 1724 051c 8D000000 		.4byte	0x8d
 1725 0520 02       		.uleb128 0x2
 1726 0521 91       		.byte	0x91
 1727 0522 6E       		.sleb128 -18
 1728 0523 00       		.byte	0
 1729 0524 10       		.uleb128 0x10
 1730 0525 8E000000 		.4byte	.LBB6
 1731 0529 30000000 		.4byte	.LBE6-.LBB6
 1732 052d 11       		.uleb128 0x11
 1733 052e 6900     		.ascii	"i\000"
 1734 0530 01       		.byte	0x1
 1735 0531 59       		.byte	0x59
 1736 0532 8D000000 		.4byte	0x8d
 1737 0536 02       		.uleb128 0x2
 1738 0537 91       		.byte	0x91
 1739 0538 6C       		.sleb128 -20
 1740 0539 00       		.byte	0
 1741 053a 00       		.byte	0
 1742 053b 13       		.uleb128 0x13
 1743 053c 7C030000 		.4byte	.LASF83
 1744 0540 01       		.byte	0x1
 1745 0541 74       		.byte	0x74
 1746 0542 D2010000 		.4byte	0x1d2
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 36


 1747 0546 00000000 		.4byte	.LFB66
 1748 054a C4000000 		.4byte	.LFE66-.LFB66
 1749 054e 01       		.uleb128 0x1
 1750 054f 9C       		.byte	0x9c
 1751 0550 71050000 		.4byte	0x571
 1752 0554 14       		.uleb128 0x14
 1753 0555 18010000 		.4byte	.LASF74
 1754 0559 01       		.byte	0x1
 1755 055a 74       		.byte	0x74
 1756 055b 8E010000 		.4byte	0x18e
 1757 055f 02       		.uleb128 0x2
 1758 0560 91       		.byte	0x91
 1759 0561 74       		.sleb128 -12
 1760 0562 0F       		.uleb128 0xf
 1761 0563 7B040000 		.4byte	.LASF80
 1762 0567 01       		.byte	0x1
 1763 0568 76       		.byte	0x76
 1764 0569 D2010000 		.4byte	0x1d2
 1765 056d 02       		.uleb128 0x2
 1766 056e 91       		.byte	0x91
 1767 056f 50       		.sleb128 -48
 1768 0570 00       		.byte	0
 1769 0571 15       		.uleb128 0x15
 1770 0572 2B000000 		.4byte	.LASF81
 1771 0576 01       		.byte	0x1
 1772 0577 86       		.byte	0x86
 1773 0578 00000000 		.4byte	.LFB67
 1774 057c 74000000 		.4byte	.LFE67-.LFB67
 1775 0580 01       		.uleb128 0x1
 1776 0581 9C       		.byte	0x9c
 1777 0582 B7050000 		.4byte	0x5b7
 1778 0586 16       		.uleb128 0x16
 1779 0587 6100     		.ascii	"a\000"
 1780 0589 01       		.byte	0x1
 1781 058a 86       		.byte	0x86
 1782 058b B7050000 		.4byte	0x5b7
 1783 058f 02       		.uleb128 0x2
 1784 0590 91       		.byte	0x91
 1785 0591 6C       		.sleb128 -20
 1786 0592 16       		.uleb128 0x16
 1787 0593 6E00     		.ascii	"n\000"
 1788 0595 01       		.byte	0x1
 1789 0596 86       		.byte	0x86
 1790 0597 A5000000 		.4byte	0xa5
 1791 059b 02       		.uleb128 0x2
 1792 059c 91       		.byte	0x91
 1793 059d 68       		.sleb128 -24
 1794 059e 11       		.uleb128 0x11
 1795 059f 6900     		.ascii	"i\000"
 1796 05a1 01       		.byte	0x1
 1797 05a2 87       		.byte	0x87
 1798 05a3 A5000000 		.4byte	0xa5
 1799 05a7 02       		.uleb128 0x2
 1800 05a8 91       		.byte	0x91
 1801 05a9 74       		.sleb128 -12
 1802 05aa 11       		.uleb128 0x11
 1803 05ab 6A00     		.ascii	"j\000"
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 37


 1804 05ad 01       		.byte	0x1
 1805 05ae 87       		.byte	0x87
 1806 05af A5000000 		.4byte	0xa5
 1807 05b3 02       		.uleb128 0x2
 1808 05b4 91       		.byte	0x91
 1809 05b5 70       		.sleb128 -16
 1810 05b6 00       		.byte	0
 1811 05b7 0D       		.uleb128 0xd
 1812 05b8 04       		.byte	0x4
 1813 05b9 A5000000 		.4byte	0xa5
 1814 05bd 17       		.uleb128 0x17
 1815 05be 02050000 		.4byte	.LASF82
 1816 05c2 01       		.byte	0x1
 1817 05c3 92       		.byte	0x92
 1818 05c4 00000000 		.4byte	.LFB68
 1819 05c8 28000000 		.4byte	.LFE68-.LFB68
 1820 05cc 01       		.uleb128 0x1
 1821 05cd 9C       		.byte	0x9c
 1822 05ce F7050000 		.4byte	0x5f7
 1823 05d2 16       		.uleb128 0x16
 1824 05d3 7000     		.ascii	"p\000"
 1825 05d5 01       		.byte	0x1
 1826 05d6 92       		.byte	0x92
 1827 05d7 B7050000 		.4byte	0x5b7
 1828 05db 02       		.uleb128 0x2
 1829 05dc 91       		.byte	0x91
 1830 05dd 6C       		.sleb128 -20
 1831 05de 16       		.uleb128 0x16
 1832 05df 7100     		.ascii	"q\000"
 1833 05e1 01       		.byte	0x1
 1834 05e2 92       		.byte	0x92
 1835 05e3 B7050000 		.4byte	0x5b7
 1836 05e7 02       		.uleb128 0x2
 1837 05e8 91       		.byte	0x91
 1838 05e9 68       		.sleb128 -24
 1839 05ea 11       		.uleb128 0x11
 1840 05eb 7400     		.ascii	"t\000"
 1841 05ed 01       		.byte	0x1
 1842 05ee 93       		.byte	0x93
 1843 05ef A5000000 		.4byte	0xa5
 1844 05f3 02       		.uleb128 0x2
 1845 05f4 91       		.byte	0x91
 1846 05f5 74       		.sleb128 -12
 1847 05f6 00       		.byte	0
 1848 05f7 13       		.uleb128 0x13
 1849 05f8 96020000 		.4byte	.LASF84
 1850 05fc 01       		.byte	0x1
 1851 05fd 9B       		.byte	0x9b
 1852 05fe A5000000 		.4byte	0xa5
 1853 0602 00000000 		.4byte	.LFB69
 1854 0606 84000000 		.4byte	.LFE69-.LFB69
 1855 060a 01       		.uleb128 0x1
 1856 060b 9C       		.byte	0x9c
 1857 060c 39060000 		.4byte	0x639
 1858 0610 14       		.uleb128 0x14
 1859 0611 5C020000 		.4byte	.LASF85
 1860 0615 01       		.byte	0x1
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 38


 1861 0616 9B       		.byte	0x9b
 1862 0617 B7050000 		.4byte	0x5b7
 1863 061b 02       		.uleb128 0x2
 1864 061c 91       		.byte	0x91
 1865 061d 64       		.sleb128 -28
 1866 061e 16       		.uleb128 0x16
 1867 061f 6E00     		.ascii	"n\000"
 1868 0621 01       		.byte	0x1
 1869 0622 9B       		.byte	0x9b
 1870 0623 A5000000 		.4byte	0xa5
 1871 0627 02       		.uleb128 0x2
 1872 0628 91       		.byte	0x91
 1873 0629 60       		.sleb128 -32
 1874 062a 0F       		.uleb128 0xf
 1875 062b 3F010000 		.4byte	.LASF86
 1876 062f 01       		.byte	0x1
 1877 0630 9D       		.byte	0x9d
 1878 0631 A5000000 		.4byte	0xa5
 1879 0635 02       		.uleb128 0x2
 1880 0636 91       		.byte	0x91
 1881 0637 6C       		.sleb128 -20
 1882 0638 00       		.byte	0
 1883 0639 0E       		.uleb128 0xe
 1884 063a E7030000 		.4byte	.LASF87
 1885 063e 01       		.byte	0x1
 1886 063f AD       		.byte	0xad
 1887 0640 3E010000 		.4byte	0x13e
 1888 0644 00000000 		.4byte	.LFB70
 1889 0648 BC000000 		.4byte	.LFE70-.LFB70
 1890 064c 01       		.uleb128 0x1
 1891 064d 9C       		.byte	0x9c
 1892 064e 71060000 		.4byte	0x671
 1893 0652 0F       		.uleb128 0xf
 1894 0653 20010000 		.4byte	.LASF88
 1895 0657 01       		.byte	0x1
 1896 0658 AF       		.byte	0xaf
 1897 0659 3E010000 		.4byte	0x13e
 1898 065d 03       		.uleb128 0x3
 1899 065e 91       		.byte	0x91
 1900 065f E47C     		.sleb128 -412
 1901 0661 0F       		.uleb128 0xf
 1902 0662 18010000 		.4byte	.LASF74
 1903 0666 01       		.byte	0x1
 1904 0667 B3       		.byte	0xb3
 1905 0668 8E010000 		.4byte	0x18e
 1906 066c 03       		.uleb128 0x3
 1907 066d 91       		.byte	0x91
 1908 066e D07C     		.sleb128 -432
 1909 0670 00       		.byte	0
 1910 0671 0E       		.uleb128 0xe
 1911 0672 C3040000 		.4byte	.LASF89
 1912 0676 01       		.byte	0x1
 1913 0677 C2       		.byte	0xc2
 1914 0678 3E010000 		.4byte	0x13e
 1915 067c 00000000 		.4byte	.LFB71
 1916 0680 04010000 		.4byte	.LFE71-.LFB71
 1917 0684 01       		.uleb128 0x1
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 39


 1918 0685 9C       		.byte	0x9c
 1919 0686 A9060000 		.4byte	0x6a9
 1920 068a 0F       		.uleb128 0xf
 1921 068b 20010000 		.4byte	.LASF88
 1922 068f 01       		.byte	0x1
 1923 0690 C4       		.byte	0xc4
 1924 0691 3E010000 		.4byte	0x13e
 1925 0695 03       		.uleb128 0x3
 1926 0696 91       		.byte	0x91
 1927 0697 E47C     		.sleb128 -412
 1928 0699 0F       		.uleb128 0xf
 1929 069a 7B040000 		.4byte	.LASF80
 1930 069e 01       		.byte	0x1
 1931 069f C8       		.byte	0xc8
 1932 06a0 D2010000 		.4byte	0x1d2
 1933 06a4 03       		.uleb128 0x3
 1934 06a5 91       		.byte	0x91
 1935 06a6 D47C     		.sleb128 -428
 1936 06a8 00       		.byte	0
 1937 06a9 18       		.uleb128 0x18
 1938 06aa 32010000 		.4byte	.LASF90
 1939 06ae 0A       		.byte	0xa
 1940 06af 1207     		.2byte	0x712
 1941 06b1 B5060000 		.4byte	0x6b5
 1942 06b5 0C       		.uleb128 0xc
 1943 06b6 76000000 		.4byte	0x76
 1944 06ba 19       		.uleb128 0x19
 1945 06bb 1B000000 		.4byte	.LASF91
 1946 06bf 07       		.byte	0x7
 1947 06c0 11       		.byte	0x11
 1948 06c1 52030000 		.4byte	0x352
 1949 06c5 05       		.uleb128 0x5
 1950 06c6 03       		.byte	0x3
 1951 06c7 00000000 		.4byte	buffer_overflow
 1952 06cb 19       		.uleb128 0x19
 1953 06cc F5030000 		.4byte	.LASF92
 1954 06d0 07       		.byte	0x7
 1955 06d1 22       		.byte	0x22
 1956 06d2 8D000000 		.4byte	0x8d
 1957 06d6 05       		.uleb128 0x5
 1958 06d7 03       		.byte	0x3
 1959 06d8 00000000 		.4byte	dataPointsInStack
 1960 06dc 19       		.uleb128 0x19
 1961 06dd 8B060000 		.4byte	.LASF93
 1962 06e1 07       		.byte	0x7
 1963 06e2 23       		.byte	0x23
 1964 06e3 8D000000 		.4byte	0x8d
 1965 06e7 05       		.uleb128 0x5
 1966 06e8 03       		.byte	0x3
 1967 06e9 00000000 		.4byte	dataPointsInStackDesired
 1968 06ed 06       		.uleb128 0x6
 1969 06ee 1A020000 		.4byte	0x21a
 1970 06f2 FD060000 		.4byte	0x6fd
 1971 06f6 07       		.uleb128 0x7
 1972 06f7 D9000000 		.4byte	0xd9
 1973 06fb 95       		.byte	0x95
 1974 06fc 00       		.byte	0
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 40


 1975 06fd 19       		.uleb128 0x19
 1976 06fe 2B030000 		.4byte	.LASF94
 1977 0702 07       		.byte	0x7
 1978 0703 24       		.byte	0x24
 1979 0704 ED060000 		.4byte	0x6ed
 1980 0708 05       		.uleb128 0x5
 1981 0709 03       		.byte	0x3
 1982 070a 00000000 		.4byte	data
 1983 070e 19       		.uleb128 0x19
 1984 070f 58070000 		.4byte	.LASF95
 1985 0713 08       		.byte	0x8
 1986 0714 20       		.byte	0x20
 1987 0715 81000000 		.4byte	0x81
 1988 0719 05       		.uleb128 0x5
 1989 071a 03       		.byte	0x3
 1990 071b 00000000 		.4byte	modem_state
 1991 071f 19       		.uleb128 0x19
 1992 0720 BB030000 		.4byte	.LASF96
 1993 0724 08       		.byte	0x8
 1994 0725 71       		.byte	0x71
 1995 0726 A5000000 		.4byte	0xa5
 1996 072a 05       		.uleb128 0x5
 1997 072b 03       		.byte	0x3
 1998 072c 00000000 		.4byte	modem_start_time_stamp
 1999 0730 19       		.uleb128 0x19
 2000 0731 38030000 		.4byte	.LASF68
 2001 0735 08       		.byte	0x8
 2002 0736 72       		.byte	0x72
 2003 0737 52020000 		.4byte	0x252
 2004 073b 05       		.uleb128 0x5
 2005 073c 03       		.byte	0x3
 2006 073d 00000000 		.4byte	modem_info
 2007 0741 19       		.uleb128 0x19
 2008 0742 46010000 		.4byte	.LASF97
 2009 0746 08       		.byte	0x8
 2010 0747 73       		.byte	0x73
 2011 0748 C6020000 		.4byte	0x2c6
 2012 074c 05       		.uleb128 0x5
 2013 074d 03       		.byte	0x3
 2014 074e 00000000 		.4byte	modem_stats
 2015 0752 19       		.uleb128 0x19
 2016 0753 66040000 		.4byte	.LASF98
 2017 0757 08       		.byte	0x8
 2018 0758 74       		.byte	0x74
 2019 0759 59030000 		.4byte	0x359
 2020 075d 05       		.uleb128 0x5
 2021 075e 03       		.byte	0x3
 2022 075f 00000000 		.4byte	updatable_parameters
 2023 0763 19       		.uleb128 0x19
 2024 0764 ED020000 		.4byte	.LASF99
 2025 0768 0B       		.byte	0xb
 2026 0769 07       		.byte	0x7
 2027 076a 81000000 		.4byte	0x81
 2028 076e 05       		.uleb128 0x5
 2029 076f 03       		.byte	0x3
 2030 0770 00000000 		.4byte	App_LED_enabled
 2031 0774 19       		.uleb128 0x19
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 41


 2032 0775 4A070000 		.4byte	.LASF100
 2033 0779 0B       		.byte	0xb
 2034 077a 08       		.byte	0x8
 2035 077b 00040000 		.4byte	0x400
 2036 077f 05       		.uleb128 0x5
 2037 0780 03       		.byte	0x3
 2038 0781 00000000 		.4byte	app_led_inbox
 2039 0785 19       		.uleb128 0x19
 2040 0786 92050000 		.4byte	.LASF101
 2041 078a 0C       		.byte	0xc
 2042 078b 25       		.byte	0x25
 2043 078c 00040000 		.4byte	0x400
 2044 0790 05       		.uleb128 0x5
 2045 0791 03       		.byte	0x3
 2046 0792 00000000 		.4byte	level_sensor_inbox
 2047 0796 19       		.uleb128 0x19
 2048 0797 76060000 		.4byte	.LASF102
 2049 079b 0C       		.byte	0xc
 2050 079c 27       		.byte	0x27
 2051 079d 52030000 		.4byte	0x352
 2052 07a1 05       		.uleb128 0x5
 2053 07a2 03       		.byte	0x3
 2054 07a3 00000000 		.4byte	level_sensor_enabled
 2055 07a7 19       		.uleb128 0x19
 2056 07a8 B9010000 		.4byte	.LASF103
 2057 07ac 0D       		.byte	0xd
 2058 07ad 2A       		.byte	0x2a
 2059 07ae B1000000 		.4byte	0xb1
 2060 07b2 05       		.uleb128 0x5
 2061 07b3 03       		.byte	0x3
 2062 07b4 00000000 		.4byte	valve_diameter
 2063 07b8 06       		.uleb128 0x6
 2064 07b9 CB000000 		.4byte	0xcb
 2065 07bd C8070000 		.4byte	0x7c8
 2066 07c1 07       		.uleb128 0x7
 2067 07c2 D9000000 		.4byte	0xd9
 2068 07c6 09       		.byte	0x9
 2069 07c7 00       		.byte	0
 2070 07c8 19       		.uleb128 0x19
 2071 07c9 19040000 		.4byte	.LASF104
 2072 07cd 0D       		.byte	0xd
 2073 07ce 2B       		.byte	0x2b
 2074 07cf B8070000 		.4byte	0x7b8
 2075 07d3 05       		.uleb128 0x5
 2076 07d4 03       		.byte	0x3
 2077 07d5 00000000 		.4byte	valve_type
 2078 07d9 19       		.uleb128 0x19
 2079 07da 4F060000 		.4byte	.LASF105
 2080 07de 0D       		.byte	0xd
 2081 07df 30       		.byte	0x30
 2082 07e0 81000000 		.4byte	0x81
 2083 07e4 05       		.uleb128 0x5
 2084 07e5 03       		.byte	0x3
 2085 07e6 00000000 		.4byte	valve_enabled
 2086 07ea 19       		.uleb128 0x19
 2087 07eb F7060000 		.4byte	.LASF106
 2088 07ef 0D       		.byte	0xd
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 42


 2089 07f0 31       		.byte	0x31
 2090 07f1 00040000 		.4byte	0x400
 2091 07f5 05       		.uleb128 0x5
 2092 07f6 03       		.byte	0x3
 2093 07f7 00000000 		.4byte	valve_inbox
 2094 07fb 19       		.uleb128 0x19
 2095 07fc 07000000 		.4byte	.LASF107
 2096 0800 0E       		.byte	0xe
 2097 0801 69       		.byte	0x69
 2098 0802 81000000 		.4byte	0x81
 2099 0806 05       		.uleb128 0x5
 2100 0807 03       		.byte	0x3
 2101 0808 00000000 		.4byte	autosampler_enabled
 2102 080c 19       		.uleb128 0x19
 2103 080d 07040000 		.4byte	.LASF108
 2104 0811 0E       		.byte	0xe
 2105 0812 6B       		.byte	0x6b
 2106 0813 00040000 		.4byte	0x400
 2107 0817 05       		.uleb128 0x5
 2108 0818 03       		.byte	0x3
 2109 0819 00000000 		.4byte	autosampler_inbox
 2110 081d 06       		.uleb128 0x6
 2111 081e CB000000 		.4byte	0xcb
 2112 0822 2E080000 		.4byte	0x82e
 2113 0826 1A       		.uleb128 0x1a
 2114 0827 D9000000 		.4byte	0xd9
 2115 082b 0F27     		.2byte	0x270f
 2116 082d 00       		.byte	0
 2117 082e 19       		.uleb128 0x19
 2118 082f 36070000 		.4byte	.LASF109
 2119 0833 09       		.byte	0x9
 2120 0834 1F       		.byte	0x1f
 2121 0835 1D080000 		.4byte	0x81d
 2122 0839 05       		.uleb128 0x5
 2123 083a 03       		.byte	0x3
 2124 083b 00000000 		.4byte	http_request
 2125 083f 19       		.uleb128 0x19
 2126 0840 DC060000 		.4byte	.LASF110
 2127 0844 09       		.byte	0x9
 2128 0845 20       		.byte	0x20
 2129 0846 1D080000 		.4byte	0x81d
 2130 084a 05       		.uleb128 0x5
 2131 084b 03       		.byte	0x3
 2132 084c 00000000 		.4byte	http_body
 2133 0850 06       		.uleb128 0x6
 2134 0851 CB000000 		.4byte	0xcb
 2135 0855 60080000 		.4byte	0x860
 2136 0859 07       		.uleb128 0x7
 2137 085a D9000000 		.4byte	0xd9
 2138 085e C7       		.byte	0xc7
 2139 085f 00       		.byte	0
 2140 0860 19       		.uleb128 0x19
 2141 0861 CE050000 		.4byte	.LASF111
 2142 0865 09       		.byte	0x9
 2143 0866 21       		.byte	0x21
 2144 0867 50080000 		.4byte	0x850
 2145 086b 05       		.uleb128 0x5
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 43


 2146 086c 03       		.byte	0x3
 2147 086d 00000000 		.4byte	http_route
 2148 0871 19       		.uleb128 0x19
 2149 0872 2D050000 		.4byte	.LASF112
 2150 0876 09       		.byte	0x9
 2151 0877 48       		.byte	0x48
 2152 0878 D4030000 		.4byte	0x3d4
 2153 087c 05       		.uleb128 0x5
 2154 087d 03       		.byte	0x3
 2155 087e 00000000 		.4byte	system_info
 2156 0882 19       		.uleb128 0x19
 2157 0883 D8040000 		.4byte	.LASF113
 2158 0887 09       		.byte	0x9
 2159 0888 5A       		.byte	0x5a
 2160 0889 10040000 		.4byte	0x410
 2161 088d 05       		.uleb128 0x5
 2162 088e 03       		.byte	0x3
 2163 088f 00000000 		.4byte	system_settings
 2164 0893 19       		.uleb128 0x19
 2165 0894 25010000 		.4byte	.LASF114
 2166 0898 09       		.byte	0x9
 2167 0899 76       		.byte	0x76
 2168 089a 9D030000 		.4byte	0x39d
 2169 089e 05       		.uleb128 0x5
 2170 089f 03       		.byte	0x3
 2171 08a0 00000000 		.4byte	alarmMeasure
 2172 08a4 19       		.uleb128 0x19
 2173 08a5 71010000 		.4byte	.LASF115
 2174 08a9 09       		.byte	0x9
 2175 08aa 77       		.byte	0x77
 2176 08ab 81000000 		.4byte	0x81
 2177 08af 05       		.uleb128 0x5
 2178 08b0 03       		.byte	0x3
 2179 08b1 00000000 		.4byte	timeToMeasure
 2180 08b5 19       		.uleb128 0x19
 2181 08b6 CF020000 		.4byte	.LASF116
 2182 08ba 09       		.byte	0x9
 2183 08bb 78       		.byte	0x78
 2184 08bc 9D030000 		.4byte	0x39d
 2185 08c0 05       		.uleb128 0x5
 2186 08c1 03       		.byte	0x3
 2187 08c2 00000000 		.4byte	alarmSync
 2188 08c6 19       		.uleb128 0x19
 2189 08c7 97010000 		.4byte	.LASF117
 2190 08cb 09       		.byte	0x9
 2191 08cc 79       		.byte	0x79
 2192 08cd 81000000 		.4byte	0x81
 2193 08d1 05       		.uleb128 0x5
 2194 08d2 03       		.byte	0x3
 2195 08d3 00000000 		.4byte	timeToSync
 2196 08d7 19       		.uleb128 0x19
 2197 08d8 45040000 		.4byte	.LASF118
 2198 08dc 09       		.byte	0x9
 2199 08dd 7A       		.byte	0x7a
 2200 08de 81000000 		.4byte	0x81
 2201 08e2 05       		.uleb128 0x5
 2202 08e3 03       		.byte	0x3
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 44


 2203 08e4 00000000 		.4byte	timeToSycnRemoteParams
 2204 08e8 1B       		.uleb128 0x1b
 2205 08e9 68657900 		.ascii	"hey\000"
 2206 08ed 09       		.byte	0x9
 2207 08ee 7B       		.byte	0x7b
 2208 08ef 81000000 		.4byte	0x81
 2209 08f3 05       		.uleb128 0x5
 2210 08f4 03       		.byte	0x3
 2211 08f5 00000000 		.4byte	hey
 2212 08f9 19       		.uleb128 0x19
 2213 08fa AF030000 		.4byte	.LASF119
 2214 08fe 09       		.byte	0x9
 2215 08ff 7F       		.byte	0x7f
 2216 0900 9D030000 		.4byte	0x39d
 2217 0904 05       		.uleb128 0x5
 2218 0905 03       		.byte	0x3
 2219 0906 00000000 		.4byte	alarmAppLED
 2220 090a 19       		.uleb128 0x19
 2221 090b 3F020000 		.4byte	.LASF120
 2222 090f 09       		.byte	0x9
 2223 0910 80       		.byte	0x80
 2224 0911 81000000 		.4byte	0x81
 2225 0915 05       		.uleb128 0x5
 2226 0916 03       		.byte	0x3
 2227 0917 00000000 		.4byte	timeToAppLED
 2228 091b 19       		.uleb128 0x19
 2229 091c 6F050000 		.4byte	.LASF121
 2230 0920 09       		.byte	0x9
 2231 0921 82       		.byte	0x82
 2232 0922 9D030000 		.4byte	0x39d
 2233 0926 05       		.uleb128 0x5
 2234 0927 03       		.byte	0x3
 2235 0928 00000000 		.4byte	alarmLevelSensor
 2236 092c 19       		.uleb128 0x19
 2237 092d 64060000 		.4byte	.LASF122
 2238 0931 09       		.byte	0x9
 2239 0932 83       		.byte	0x83
 2240 0933 81000000 		.4byte	0x81
 2241 0937 05       		.uleb128 0x5
 2242 0938 03       		.byte	0x3
 2243 0939 00000000 		.4byte	timeToLevelSensor
 2244 093d 19       		.uleb128 0x19
 2245 093e D5010000 		.4byte	.LASF123
 2246 0942 09       		.byte	0x9
 2247 0943 85       		.byte	0x85
 2248 0944 9D030000 		.4byte	0x39d
 2249 0948 05       		.uleb128 0x5
 2250 0949 03       		.byte	0x3
 2251 094a 00000000 		.4byte	alarmDownstreamLevelSensor
 2252 094e 19       		.uleb128 0x19
 2253 094f C0060000 		.4byte	.LASF124
 2254 0953 09       		.byte	0x9
 2255 0954 86       		.byte	0x86
 2256 0955 81000000 		.4byte	0x81
 2257 0959 05       		.uleb128 0x5
 2258 095a 03       		.byte	0x3
 2259 095b 00000000 		.4byte	timeToDownstreamLevelSensor
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 45


 2260 095f 19       		.uleb128 0x19
 2261 0960 C3050000 		.4byte	.LASF125
 2262 0964 09       		.byte	0x9
 2263 0965 88       		.byte	0x88
 2264 0966 9D030000 		.4byte	0x39d
 2265 096a 05       		.uleb128 0x5
 2266 096b 03       		.byte	0x3
 2267 096c 00000000 		.4byte	alarmValve
 2268 0970 19       		.uleb128 0x19
 2269 0971 95040000 		.4byte	.LASF126
 2270 0975 09       		.byte	0x9
 2271 0976 89       		.byte	0x89
 2272 0977 81000000 		.4byte	0x81
 2273 097b 05       		.uleb128 0x5
 2274 097c 03       		.byte	0x3
 2275 097d 00000000 		.4byte	timeToValve
 2276 0981 19       		.uleb128 0x19
 2277 0982 E6060000 		.4byte	.LASF127
 2278 0986 09       		.byte	0x9
 2279 0987 8B       		.byte	0x8b
 2280 0988 9D030000 		.4byte	0x39d
 2281 098c 05       		.uleb128 0x5
 2282 098d 03       		.byte	0x3
 2283 098e 00000000 		.4byte	alarmAutosampler
 2284 0992 19       		.uleb128 0x19
 2285 0993 4A000000 		.4byte	.LASF128
 2286 0997 09       		.byte	0x9
 2287 0998 8C       		.byte	0x8c
 2288 0999 81000000 		.4byte	0x81
 2289 099d 05       		.uleb128 0x5
 2290 099e 03       		.byte	0x3
 2291 099f 00000000 		.4byte	timeToAutosampler
 2292 09a3 00       		.byte	0
 2293              		.section	.debug_abbrev,"",%progbits
 2294              	.Ldebug_abbrev0:
 2295 0000 01       		.uleb128 0x1
 2296 0001 11       		.uleb128 0x11
 2297 0002 01       		.byte	0x1
 2298 0003 25       		.uleb128 0x25
 2299 0004 0E       		.uleb128 0xe
 2300 0005 13       		.uleb128 0x13
 2301 0006 0B       		.uleb128 0xb
 2302 0007 03       		.uleb128 0x3
 2303 0008 0E       		.uleb128 0xe
 2304 0009 1B       		.uleb128 0x1b
 2305 000a 0E       		.uleb128 0xe
 2306 000b 55       		.uleb128 0x55
 2307 000c 17       		.uleb128 0x17
 2308 000d 11       		.uleb128 0x11
 2309 000e 01       		.uleb128 0x1
 2310 000f 10       		.uleb128 0x10
 2311 0010 17       		.uleb128 0x17
 2312 0011 00       		.byte	0
 2313 0012 00       		.byte	0
 2314 0013 02       		.uleb128 0x2
 2315 0014 24       		.uleb128 0x24
 2316 0015 00       		.byte	0
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 46


 2317 0016 0B       		.uleb128 0xb
 2318 0017 0B       		.uleb128 0xb
 2319 0018 3E       		.uleb128 0x3e
 2320 0019 0B       		.uleb128 0xb
 2321 001a 03       		.uleb128 0x3
 2322 001b 0E       		.uleb128 0xe
 2323 001c 00       		.byte	0
 2324 001d 00       		.byte	0
 2325 001e 03       		.uleb128 0x3
 2326 001f 16       		.uleb128 0x16
 2327 0020 00       		.byte	0
 2328 0021 03       		.uleb128 0x3
 2329 0022 0E       		.uleb128 0xe
 2330 0023 3A       		.uleb128 0x3a
 2331 0024 0B       		.uleb128 0xb
 2332 0025 3B       		.uleb128 0x3b
 2333 0026 0B       		.uleb128 0xb
 2334 0027 49       		.uleb128 0x49
 2335 0028 13       		.uleb128 0x13
 2336 0029 00       		.byte	0
 2337 002a 00       		.byte	0
 2338 002b 04       		.uleb128 0x4
 2339 002c 24       		.uleb128 0x24
 2340 002d 00       		.byte	0
 2341 002e 0B       		.uleb128 0xb
 2342 002f 0B       		.uleb128 0xb
 2343 0030 3E       		.uleb128 0x3e
 2344 0031 0B       		.uleb128 0xb
 2345 0032 03       		.uleb128 0x3
 2346 0033 08       		.uleb128 0x8
 2347 0034 00       		.byte	0
 2348 0035 00       		.byte	0
 2349 0036 05       		.uleb128 0x5
 2350 0037 16       		.uleb128 0x16
 2351 0038 00       		.byte	0
 2352 0039 03       		.uleb128 0x3
 2353 003a 0E       		.uleb128 0xe
 2354 003b 3A       		.uleb128 0x3a
 2355 003c 0B       		.uleb128 0xb
 2356 003d 3B       		.uleb128 0x3b
 2357 003e 05       		.uleb128 0x5
 2358 003f 49       		.uleb128 0x49
 2359 0040 13       		.uleb128 0x13
 2360 0041 00       		.byte	0
 2361 0042 00       		.byte	0
 2362 0043 06       		.uleb128 0x6
 2363 0044 01       		.uleb128 0x1
 2364 0045 01       		.byte	0x1
 2365 0046 49       		.uleb128 0x49
 2366 0047 13       		.uleb128 0x13
 2367 0048 01       		.uleb128 0x1
 2368 0049 13       		.uleb128 0x13
 2369 004a 00       		.byte	0
 2370 004b 00       		.byte	0
 2371 004c 07       		.uleb128 0x7
 2372 004d 21       		.uleb128 0x21
 2373 004e 00       		.byte	0
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 47


 2374 004f 49       		.uleb128 0x49
 2375 0050 13       		.uleb128 0x13
 2376 0051 2F       		.uleb128 0x2f
 2377 0052 0B       		.uleb128 0xb
 2378 0053 00       		.byte	0
 2379 0054 00       		.byte	0
 2380 0055 08       		.uleb128 0x8
 2381 0056 13       		.uleb128 0x13
 2382 0057 01       		.byte	0x1
 2383 0058 0B       		.uleb128 0xb
 2384 0059 05       		.uleb128 0x5
 2385 005a 3A       		.uleb128 0x3a
 2386 005b 0B       		.uleb128 0xb
 2387 005c 3B       		.uleb128 0x3b
 2388 005d 0B       		.uleb128 0xb
 2389 005e 01       		.uleb128 0x1
 2390 005f 13       		.uleb128 0x13
 2391 0060 00       		.byte	0
 2392 0061 00       		.byte	0
 2393 0062 09       		.uleb128 0x9
 2394 0063 0D       		.uleb128 0xd
 2395 0064 00       		.byte	0
 2396 0065 03       		.uleb128 0x3
 2397 0066 0E       		.uleb128 0xe
 2398 0067 3A       		.uleb128 0x3a
 2399 0068 0B       		.uleb128 0xb
 2400 0069 3B       		.uleb128 0x3b
 2401 006a 0B       		.uleb128 0xb
 2402 006b 49       		.uleb128 0x49
 2403 006c 13       		.uleb128 0x13
 2404 006d 38       		.uleb128 0x38
 2405 006e 0B       		.uleb128 0xb
 2406 006f 00       		.byte	0
 2407 0070 00       		.byte	0
 2408 0071 0A       		.uleb128 0xa
 2409 0072 13       		.uleb128 0x13
 2410 0073 01       		.byte	0x1
 2411 0074 0B       		.uleb128 0xb
 2412 0075 0B       		.uleb128 0xb
 2413 0076 3A       		.uleb128 0x3a
 2414 0077 0B       		.uleb128 0xb
 2415 0078 3B       		.uleb128 0x3b
 2416 0079 0B       		.uleb128 0xb
 2417 007a 01       		.uleb128 0x1
 2418 007b 13       		.uleb128 0x13
 2419 007c 00       		.byte	0
 2420 007d 00       		.byte	0
 2421 007e 0B       		.uleb128 0xb
 2422 007f 0D       		.uleb128 0xd
 2423 0080 00       		.byte	0
 2424 0081 03       		.uleb128 0x3
 2425 0082 08       		.uleb128 0x8
 2426 0083 3A       		.uleb128 0x3a
 2427 0084 0B       		.uleb128 0xb
 2428 0085 3B       		.uleb128 0x3b
 2429 0086 0B       		.uleb128 0xb
 2430 0087 49       		.uleb128 0x49
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 48


 2431 0088 13       		.uleb128 0x13
 2432 0089 38       		.uleb128 0x38
 2433 008a 0B       		.uleb128 0xb
 2434 008b 00       		.byte	0
 2435 008c 00       		.byte	0
 2436 008d 0C       		.uleb128 0xc
 2437 008e 35       		.uleb128 0x35
 2438 008f 00       		.byte	0
 2439 0090 49       		.uleb128 0x49
 2440 0091 13       		.uleb128 0x13
 2441 0092 00       		.byte	0
 2442 0093 00       		.byte	0
 2443 0094 0D       		.uleb128 0xd
 2444 0095 0F       		.uleb128 0xf
 2445 0096 00       		.byte	0
 2446 0097 0B       		.uleb128 0xb
 2447 0098 0B       		.uleb128 0xb
 2448 0099 49       		.uleb128 0x49
 2449 009a 13       		.uleb128 0x13
 2450 009b 00       		.byte	0
 2451 009c 00       		.byte	0
 2452 009d 0E       		.uleb128 0xe
 2453 009e 2E       		.uleb128 0x2e
 2454 009f 01       		.byte	0x1
 2455 00a0 3F       		.uleb128 0x3f
 2456 00a1 19       		.uleb128 0x19
 2457 00a2 03       		.uleb128 0x3
 2458 00a3 0E       		.uleb128 0xe
 2459 00a4 3A       		.uleb128 0x3a
 2460 00a5 0B       		.uleb128 0xb
 2461 00a6 3B       		.uleb128 0x3b
 2462 00a7 0B       		.uleb128 0xb
 2463 00a8 49       		.uleb128 0x49
 2464 00a9 13       		.uleb128 0x13
 2465 00aa 11       		.uleb128 0x11
 2466 00ab 01       		.uleb128 0x1
 2467 00ac 12       		.uleb128 0x12
 2468 00ad 06       		.uleb128 0x6
 2469 00ae 40       		.uleb128 0x40
 2470 00af 18       		.uleb128 0x18
 2471 00b0 9642     		.uleb128 0x2116
 2472 00b2 19       		.uleb128 0x19
 2473 00b3 01       		.uleb128 0x1
 2474 00b4 13       		.uleb128 0x13
 2475 00b5 00       		.byte	0
 2476 00b6 00       		.byte	0
 2477 00b7 0F       		.uleb128 0xf
 2478 00b8 34       		.uleb128 0x34
 2479 00b9 00       		.byte	0
 2480 00ba 03       		.uleb128 0x3
 2481 00bb 0E       		.uleb128 0xe
 2482 00bc 3A       		.uleb128 0x3a
 2483 00bd 0B       		.uleb128 0xb
 2484 00be 3B       		.uleb128 0x3b
 2485 00bf 0B       		.uleb128 0xb
 2486 00c0 49       		.uleb128 0x49
 2487 00c1 13       		.uleb128 0x13
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 49


 2488 00c2 02       		.uleb128 0x2
 2489 00c3 18       		.uleb128 0x18
 2490 00c4 00       		.byte	0
 2491 00c5 00       		.byte	0
 2492 00c6 10       		.uleb128 0x10
 2493 00c7 0B       		.uleb128 0xb
 2494 00c8 01       		.byte	0x1
 2495 00c9 11       		.uleb128 0x11
 2496 00ca 01       		.uleb128 0x1
 2497 00cb 12       		.uleb128 0x12
 2498 00cc 06       		.uleb128 0x6
 2499 00cd 00       		.byte	0
 2500 00ce 00       		.byte	0
 2501 00cf 11       		.uleb128 0x11
 2502 00d0 34       		.uleb128 0x34
 2503 00d1 00       		.byte	0
 2504 00d2 03       		.uleb128 0x3
 2505 00d3 08       		.uleb128 0x8
 2506 00d4 3A       		.uleb128 0x3a
 2507 00d5 0B       		.uleb128 0xb
 2508 00d6 3B       		.uleb128 0x3b
 2509 00d7 0B       		.uleb128 0xb
 2510 00d8 49       		.uleb128 0x49
 2511 00d9 13       		.uleb128 0x13
 2512 00da 02       		.uleb128 0x2
 2513 00db 18       		.uleb128 0x18
 2514 00dc 00       		.byte	0
 2515 00dd 00       		.byte	0
 2516 00de 12       		.uleb128 0x12
 2517 00df 0B       		.uleb128 0xb
 2518 00e0 01       		.byte	0x1
 2519 00e1 11       		.uleb128 0x11
 2520 00e2 01       		.uleb128 0x1
 2521 00e3 12       		.uleb128 0x12
 2522 00e4 06       		.uleb128 0x6
 2523 00e5 01       		.uleb128 0x1
 2524 00e6 13       		.uleb128 0x13
 2525 00e7 00       		.byte	0
 2526 00e8 00       		.byte	0
 2527 00e9 13       		.uleb128 0x13
 2528 00ea 2E       		.uleb128 0x2e
 2529 00eb 01       		.byte	0x1
 2530 00ec 3F       		.uleb128 0x3f
 2531 00ed 19       		.uleb128 0x19
 2532 00ee 03       		.uleb128 0x3
 2533 00ef 0E       		.uleb128 0xe
 2534 00f0 3A       		.uleb128 0x3a
 2535 00f1 0B       		.uleb128 0xb
 2536 00f2 3B       		.uleb128 0x3b
 2537 00f3 0B       		.uleb128 0xb
 2538 00f4 27       		.uleb128 0x27
 2539 00f5 19       		.uleb128 0x19
 2540 00f6 49       		.uleb128 0x49
 2541 00f7 13       		.uleb128 0x13
 2542 00f8 11       		.uleb128 0x11
 2543 00f9 01       		.uleb128 0x1
 2544 00fa 12       		.uleb128 0x12
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 50


 2545 00fb 06       		.uleb128 0x6
 2546 00fc 40       		.uleb128 0x40
 2547 00fd 18       		.uleb128 0x18
 2548 00fe 9642     		.uleb128 0x2116
 2549 0100 19       		.uleb128 0x19
 2550 0101 01       		.uleb128 0x1
 2551 0102 13       		.uleb128 0x13
 2552 0103 00       		.byte	0
 2553 0104 00       		.byte	0
 2554 0105 14       		.uleb128 0x14
 2555 0106 05       		.uleb128 0x5
 2556 0107 00       		.byte	0
 2557 0108 03       		.uleb128 0x3
 2558 0109 0E       		.uleb128 0xe
 2559 010a 3A       		.uleb128 0x3a
 2560 010b 0B       		.uleb128 0xb
 2561 010c 3B       		.uleb128 0x3b
 2562 010d 0B       		.uleb128 0xb
 2563 010e 49       		.uleb128 0x49
 2564 010f 13       		.uleb128 0x13
 2565 0110 02       		.uleb128 0x2
 2566 0111 18       		.uleb128 0x18
 2567 0112 00       		.byte	0
 2568 0113 00       		.byte	0
 2569 0114 15       		.uleb128 0x15
 2570 0115 2E       		.uleb128 0x2e
 2571 0116 01       		.byte	0x1
 2572 0117 3F       		.uleb128 0x3f
 2573 0118 19       		.uleb128 0x19
 2574 0119 03       		.uleb128 0x3
 2575 011a 0E       		.uleb128 0xe
 2576 011b 3A       		.uleb128 0x3a
 2577 011c 0B       		.uleb128 0xb
 2578 011d 3B       		.uleb128 0x3b
 2579 011e 0B       		.uleb128 0xb
 2580 011f 27       		.uleb128 0x27
 2581 0120 19       		.uleb128 0x19
 2582 0121 11       		.uleb128 0x11
 2583 0122 01       		.uleb128 0x1
 2584 0123 12       		.uleb128 0x12
 2585 0124 06       		.uleb128 0x6
 2586 0125 40       		.uleb128 0x40
 2587 0126 18       		.uleb128 0x18
 2588 0127 9642     		.uleb128 0x2116
 2589 0129 19       		.uleb128 0x19
 2590 012a 01       		.uleb128 0x1
 2591 012b 13       		.uleb128 0x13
 2592 012c 00       		.byte	0
 2593 012d 00       		.byte	0
 2594 012e 16       		.uleb128 0x16
 2595 012f 05       		.uleb128 0x5
 2596 0130 00       		.byte	0
 2597 0131 03       		.uleb128 0x3
 2598 0132 08       		.uleb128 0x8
 2599 0133 3A       		.uleb128 0x3a
 2600 0134 0B       		.uleb128 0xb
 2601 0135 3B       		.uleb128 0x3b
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 51


 2602 0136 0B       		.uleb128 0xb
 2603 0137 49       		.uleb128 0x49
 2604 0138 13       		.uleb128 0x13
 2605 0139 02       		.uleb128 0x2
 2606 013a 18       		.uleb128 0x18
 2607 013b 00       		.byte	0
 2608 013c 00       		.byte	0
 2609 013d 17       		.uleb128 0x17
 2610 013e 2E       		.uleb128 0x2e
 2611 013f 01       		.byte	0x1
 2612 0140 3F       		.uleb128 0x3f
 2613 0141 19       		.uleb128 0x19
 2614 0142 03       		.uleb128 0x3
 2615 0143 0E       		.uleb128 0xe
 2616 0144 3A       		.uleb128 0x3a
 2617 0145 0B       		.uleb128 0xb
 2618 0146 3B       		.uleb128 0x3b
 2619 0147 0B       		.uleb128 0xb
 2620 0148 27       		.uleb128 0x27
 2621 0149 19       		.uleb128 0x19
 2622 014a 11       		.uleb128 0x11
 2623 014b 01       		.uleb128 0x1
 2624 014c 12       		.uleb128 0x12
 2625 014d 06       		.uleb128 0x6
 2626 014e 40       		.uleb128 0x40
 2627 014f 18       		.uleb128 0x18
 2628 0150 9742     		.uleb128 0x2117
 2629 0152 19       		.uleb128 0x19
 2630 0153 01       		.uleb128 0x1
 2631 0154 13       		.uleb128 0x13
 2632 0155 00       		.byte	0
 2633 0156 00       		.byte	0
 2634 0157 18       		.uleb128 0x18
 2635 0158 34       		.uleb128 0x34
 2636 0159 00       		.byte	0
 2637 015a 03       		.uleb128 0x3
 2638 015b 0E       		.uleb128 0xe
 2639 015c 3A       		.uleb128 0x3a
 2640 015d 0B       		.uleb128 0xb
 2641 015e 3B       		.uleb128 0x3b
 2642 015f 05       		.uleb128 0x5
 2643 0160 49       		.uleb128 0x49
 2644 0161 13       		.uleb128 0x13
 2645 0162 3F       		.uleb128 0x3f
 2646 0163 19       		.uleb128 0x19
 2647 0164 3C       		.uleb128 0x3c
 2648 0165 19       		.uleb128 0x19
 2649 0166 00       		.byte	0
 2650 0167 00       		.byte	0
 2651 0168 19       		.uleb128 0x19
 2652 0169 34       		.uleb128 0x34
 2653 016a 00       		.byte	0
 2654 016b 03       		.uleb128 0x3
 2655 016c 0E       		.uleb128 0xe
 2656 016d 3A       		.uleb128 0x3a
 2657 016e 0B       		.uleb128 0xb
 2658 016f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 52


 2659 0170 0B       		.uleb128 0xb
 2660 0171 49       		.uleb128 0x49
 2661 0172 13       		.uleb128 0x13
 2662 0173 3F       		.uleb128 0x3f
 2663 0174 19       		.uleb128 0x19
 2664 0175 02       		.uleb128 0x2
 2665 0176 18       		.uleb128 0x18
 2666 0177 00       		.byte	0
 2667 0178 00       		.byte	0
 2668 0179 1A       		.uleb128 0x1a
 2669 017a 21       		.uleb128 0x21
 2670 017b 00       		.byte	0
 2671 017c 49       		.uleb128 0x49
 2672 017d 13       		.uleb128 0x13
 2673 017e 2F       		.uleb128 0x2f
 2674 017f 05       		.uleb128 0x5
 2675 0180 00       		.byte	0
 2676 0181 00       		.byte	0
 2677 0182 1B       		.uleb128 0x1b
 2678 0183 34       		.uleb128 0x34
 2679 0184 00       		.byte	0
 2680 0185 03       		.uleb128 0x3
 2681 0186 08       		.uleb128 0x8
 2682 0187 3A       		.uleb128 0x3a
 2683 0188 0B       		.uleb128 0xb
 2684 0189 3B       		.uleb128 0x3b
 2685 018a 0B       		.uleb128 0xb
 2686 018b 49       		.uleb128 0x49
 2687 018c 13       		.uleb128 0x13
 2688 018d 3F       		.uleb128 0x3f
 2689 018e 19       		.uleb128 0x19
 2690 018f 02       		.uleb128 0x2
 2691 0190 18       		.uleb128 0x18
 2692 0191 00       		.byte	0
 2693 0192 00       		.byte	0
 2694 0193 00       		.byte	0
 2695              		.section	.debug_aranges,"",%progbits
 2696 0000 54000000 		.4byte	0x54
 2697 0004 0200     		.2byte	0x2
 2698 0006 00000000 		.4byte	.Ldebug_info0
 2699 000a 04       		.byte	0x4
 2700 000b 00       		.byte	0
 2701 000c 0000     		.2byte	0
 2702 000e 0000     		.2byte	0
 2703 0010 00000000 		.4byte	.LFB64
 2704 0014 34010000 		.4byte	.LFE64-.LFB64
 2705 0018 00000000 		.4byte	.LFB65
 2706 001c 98010000 		.4byte	.LFE65-.LFB65
 2707 0020 00000000 		.4byte	.LFB66
 2708 0024 C4000000 		.4byte	.LFE66-.LFB66
 2709 0028 00000000 		.4byte	.LFB67
 2710 002c 74000000 		.4byte	.LFE67-.LFB67
 2711 0030 00000000 		.4byte	.LFB68
 2712 0034 28000000 		.4byte	.LFE68-.LFB68
 2713 0038 00000000 		.4byte	.LFB69
 2714 003c 84000000 		.4byte	.LFE69-.LFB69
 2715 0040 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 53


 2716 0044 BC000000 		.4byte	.LFE70-.LFB70
 2717 0048 00000000 		.4byte	.LFB71
 2718 004c 04010000 		.4byte	.LFE71-.LFB71
 2719 0050 00000000 		.4byte	0
 2720 0054 00000000 		.4byte	0
 2721              		.section	.debug_ranges,"",%progbits
 2722              	.Ldebug_ranges0:
 2723 0000 00000000 		.4byte	.LFB64
 2724 0004 34010000 		.4byte	.LFE64
 2725 0008 00000000 		.4byte	.LFB65
 2726 000c 98010000 		.4byte	.LFE65
 2727 0010 00000000 		.4byte	.LFB66
 2728 0014 C4000000 		.4byte	.LFE66
 2729 0018 00000000 		.4byte	.LFB67
 2730 001c 74000000 		.4byte	.LFE67
 2731 0020 00000000 		.4byte	.LFB68
 2732 0024 28000000 		.4byte	.LFE68
 2733 0028 00000000 		.4byte	.LFB69
 2734 002c 84000000 		.4byte	.LFE69
 2735 0030 00000000 		.4byte	.LFB70
 2736 0034 BC000000 		.4byte	.LFE70
 2737 0038 00000000 		.4byte	.LFB71
 2738 003c 04010000 		.4byte	.LFE71
 2739 0040 00000000 		.4byte	0
 2740 0044 00000000 		.4byte	0
 2741              		.section	.debug_line,"",%progbits
 2742              	.Ldebug_line0:
 2743 0000 0E030000 		.section	.debug_str,"MS",%progbits,1
 2743      0200C901 
 2743      00000201 
 2743      FB0E0D00 
 2743      01010101 
 2744              	.LASF12:
 2745 0000 75696E74 		.ascii	"uint16\000"
 2745      313600
 2746              	.LASF107:
 2747 0007 6175746F 		.ascii	"autosampler_enabled\000"
 2747      73616D70 
 2747      6C65725F 
 2747      656E6162 
 2747      6C656400 
 2748              	.LASF91:
 2749 001b 62756666 		.ascii	"buffer_overflow\000"
 2749      65725F6F 
 2749      76657266 
 2749      6C6F7700 
 2750              	.LASF81:
 2751 002b 736F7274 		.ascii	"sort32\000"
 2751      333200
 2752              	.LASF66:
 2753 0032 636F756E 		.ascii	"countDownResetCondition\000"
 2753      74446F77 
 2753      6E526573 
 2753      6574436F 
 2753      6E646974 
 2754              	.LASF128:
 2755 004a 74696D65 		.ascii	"timeToAutosampler\000"
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 54


 2755      546F4175 
 2755      746F7361 
 2755      6D706C65 
 2755      7200
 2756              	.LASF129:
 2757 005c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2757      43313120 
 2757      352E342E 
 2757      31203230 
 2757      31363036 
 2758 008f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2758      20726576 
 2758      6973696F 
 2758      6E203233 
 2758      37373135 
 2759 00c2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2759      66756E63 
 2759      74696F6E 
 2759      2D736563 
 2759      74696F6E 
 2760              	.LASF7:
 2761 00ea 6C6F6E67 		.ascii	"long long unsigned int\000"
 2761      206C6F6E 
 2761      6720756E 
 2761      7369676E 
 2761      65642069 
 2762              	.LASF62:
 2763 0101 75706461 		.ascii	"updatable_parameters_t\000"
 2763      7461626C 
 2763      655F7061 
 2763      72616D65 
 2763      74657273 
 2764              	.LASF74:
 2765 0118 766F6C74 		.ascii	"voltage\000"
 2765      61676500 
 2766              	.LASF88:
 2767 0120 74657374 		.ascii	"test\000"
 2767      00
 2768              	.LASF114:
 2769 0125 616C6172 		.ascii	"alarmMeasure\000"
 2769      6D4D6561 
 2769      73757265 
 2769      00
 2770              	.LASF90:
 2771 0132 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2771      52784275 
 2771      66666572 
 2771      00
 2772              	.LASF86:
 2773 013f 6D656469 		.ascii	"median\000"
 2773      616E00
 2774              	.LASF97:
 2775 0146 6D6F6465 		.ascii	"modem_stats\000"
 2775      6D5F7374 
 2775      61747300 
 2776              	.LASF6:
 2777 0152 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 55


 2777      206C6F6E 
 2777      6720696E 
 2777      7400
 2778              	.LASF0:
 2779 0160 7369676E 		.ascii	"signed char\000"
 2779      65642063 
 2779      68617200 
 2780              	.LASF45:
 2781 016c 65636E6F 		.ascii	"ecno\000"
 2781      00
 2782              	.LASF115:
 2783 0171 74696D65 		.ascii	"timeToMeasure\000"
 2783      546F4D65 
 2783      61737572 
 2783      6500
 2784              	.LASF48:
 2785 017f 74696D65 		.ascii	"time_to_network_connect\000"
 2785      5F746F5F 
 2785      6E657477 
 2785      6F726B5F 
 2785      636F6E6E 
 2786              	.LASF117:
 2787 0197 74696D65 		.ascii	"timeToSync\000"
 2787      546F5379 
 2787      6E6300
 2788              	.LASF27:
 2789 01a2 766F6C74 		.ascii	"voltage_charge_current\000"
 2789      6167655F 
 2789      63686172 
 2789      67655F63 
 2789      75727265 
 2790              	.LASF103:
 2791 01b9 76616C76 		.ascii	"valve_diameter\000"
 2791      655F6469 
 2791      616D6574 
 2791      657200
 2792              	.LASF42:
 2793 01c8 6D6F6465 		.ascii	"modem_info_t\000"
 2793      6D5F696E 
 2793      666F5F74 
 2793      00
 2794              	.LASF123:
 2795 01d5 616C6172 		.ascii	"alarmDownstreamLevelSensor\000"
 2795      6D446F77 
 2795      6E737472 
 2795      65616D4C 
 2795      6576656C 
 2796              	.LASF75:
 2797 01f0 6368616E 		.ascii	"channels\000"
 2797      6E656C73 
 2797      00
 2798              	.LASF4:
 2799 01f9 6C6F6E67 		.ascii	"long int\000"
 2799      20696E74 
 2799      00
 2800              	.LASF43:
 2801 0202 72786C65 		.ascii	"rxlev\000"
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 56


 2801      7600
 2802              	.LASF64:
 2803 0208 63757272 		.ascii	"currentCountDownValue\000"
 2803      656E7443 
 2803      6F756E74 
 2803      446F776E 
 2803      56616C75 
 2804              	.LASF67:
 2805 021e 616C6172 		.ascii	"alarm\000"
 2805      6D00
 2806              	.LASF32:
 2807 0224 70726573 		.ascii	"pressure_voltage_off\000"
 2807      73757265 
 2807      5F766F6C 
 2807      74616765 
 2807      5F6F6666 
 2808              	.LASF11:
 2809 0239 75696E74 		.ascii	"uint8\000"
 2809      3800
 2810              	.LASF120:
 2811 023f 74696D65 		.ascii	"timeToAppLED\000"
 2811      546F4170 
 2811      704C4544 
 2811      00
 2812              	.LASF14:
 2813 024c 696E7433 		.ascii	"int32\000"
 2813      3200
 2814              	.LASF51:
 2815 0252 6E6F6465 		.ascii	"node_type\000"
 2815      5F747970 
 2815      6500
 2816              	.LASF85:
 2817 025c 61727261 		.ascii	"array\000"
 2817      7900
 2818              	.LASF69:
 2819 0262 63686970 		.ascii	"chip_uniqueId\000"
 2819      5F756E69 
 2819      71756549 
 2819      6400
 2820              	.LASF40:
 2821 0270 6D6F6465 		.ascii	"model_id\000"
 2821      6C5F6964 
 2821      00
 2822              	.LASF63:
 2823 0279 636F756E 		.ascii	"countDownValue\000"
 2823      74446F77 
 2823      6E56616C 
 2823      756500
 2824              	.LASF26:
 2825 0288 766F6C74 		.ascii	"voltage_solar\000"
 2825      6167655F 
 2825      736F6C61 
 2825      7200
 2826              	.LASF84:
 2827 0296 66696E64 		.ascii	"find_median32\000"
 2827      5F6D6564 
 2827      69616E33 
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 57


 2827      3200
 2828              	.LASF55:
 2829 02a4 64656275 		.ascii	"debug_level\000"
 2829      675F6C65 
 2829      76656C00 
 2830              	.LASF36:
 2831 02b0 76616C75 		.ascii	"value\000"
 2831      6500
 2832              	.LASF79:
 2833 02b6 70726573 		.ascii	"pressure_sensor_readings\000"
 2833      73757265 
 2833      5F73656E 
 2833      736F725F 
 2833      72656164 
 2834              	.LASF116:
 2835 02cf 616C6172 		.ascii	"alarmSync\000"
 2835      6D53796E 
 2835      6300
 2836              	.LASF31:
 2837 02d9 70726573 		.ascii	"pressure_voltage_on\000"
 2837      73757265 
 2837      5F766F6C 
 2837      74616765 
 2837      5F6F6E00 
 2838              	.LASF99:
 2839 02ed 4170705F 		.ascii	"App_LED_enabled\000"
 2839      4C45445F 
 2839      656E6162 
 2839      6C656400 
 2840              	.LASF38:
 2841 02fd 6B65795F 		.ascii	"key_value_t\000"
 2841      76616C75 
 2841      655F7400 
 2842              	.LASF5:
 2843 0309 6C6F6E67 		.ascii	"long unsigned int\000"
 2843      20756E73 
 2843      69676E65 
 2843      6420696E 
 2843      7400
 2844              	.LASF25:
 2845 031b 766F6C74 		.ascii	"voltage_battery\000"
 2845      6167655F 
 2845      62617474 
 2845      65727900 
 2846              	.LASF94:
 2847 032b 64617461 		.ascii	"data\000"
 2847      00
 2848              	.LASF72:
 2849 0330 65705F70 		.ascii	"ep_port\000"
 2849      6F727400 
 2850              	.LASF68:
 2851 0338 6D6F6465 		.ascii	"modem_info\000"
 2851      6D5F696E 
 2851      666F00
 2852              	.LASF71:
 2853 0343 65705F68 		.ascii	"ep_host\000"
 2853      6F737400 
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 58


 2854              	.LASF131:
 2855 034b 443A5C44 		.ascii	"D:\\Data\\Stormwater-RA\\notoriOS-og\\notoriOS.cyds"
 2855      6174615C 
 2855      53746F72 
 2855      6D776174 
 2855      65722D52 
 2856 037a 6E00     		.ascii	"n\000"
 2857              	.LASF83:
 2858 037c 70726573 		.ascii	"pressure_calculations\000"
 2858      73757265 
 2858      5F63616C 
 2858      63756C61 
 2858      74696F6E 
 2859              	.LASF49:
 2860 0392 74696D65 		.ascii	"time_to_acquire_ip\000"
 2860      5F746F5F 
 2860      61637175 
 2860      6972655F 
 2860      697000
 2861              	.LASF2:
 2862 03a5 73686F72 		.ascii	"short int\000"
 2862      7420696E 
 2862      7400
 2863              	.LASF119:
 2864 03af 616C6172 		.ascii	"alarmAppLED\000"
 2864      6D417070 
 2864      4C454400 
 2865              	.LASF96:
 2866 03bb 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2866      6D5F7374 
 2866      6172745F 
 2866      74696D65 
 2866      5F737461 
 2867              	.LASF30:
 2868 03d2 766F6C74 		.ascii	"voltage_t\000"
 2868      6167655F 
 2868      7400
 2869              	.LASF70:
 2870 03dc 7379735F 		.ascii	"sys_info_t\000"
 2870      696E666F 
 2870      5F7400
 2871              	.LASF87:
 2872 03e7 766F6C74 		.ascii	"voltages_test\000"
 2872      61676573 
 2872      5F746573 
 2872      7400
 2873              	.LASF92:
 2874 03f5 64617461 		.ascii	"dataPointsInStack\000"
 2874      506F696E 
 2874      7473496E 
 2874      53746163 
 2874      6B00
 2875              	.LASF108:
 2876 0407 6175746F 		.ascii	"autosampler_inbox\000"
 2876      73616D70 
 2876      6C65725F 
 2876      696E626F 
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 59


 2876      7800
 2877              	.LASF104:
 2878 0419 76616C76 		.ascii	"valve_type\000"
 2878      655F7479 
 2878      706500
 2879              	.LASF15:
 2880 0424 666C6F61 		.ascii	"float32\000"
 2880      74333200 
 2881              	.LASF20:
 2882 042c 73697A65 		.ascii	"sizetype\000"
 2882      74797065 
 2882      00
 2883              	.LASF21:
 2884 0435 74657374 		.ascii	"test_name\000"
 2884      5F6E616D 
 2884      6500
 2885              	.LASF13:
 2886 043f 696E7431 		.ascii	"int16\000"
 2886      3600
 2887              	.LASF118:
 2888 0445 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2888      546F5379 
 2888      636E5265 
 2888      6D6F7465 
 2888      50617261 
 2889              	.LASF37:
 2890 045c 74696D65 		.ascii	"timeStamp\000"
 2890      5374616D 
 2890      7000
 2891              	.LASF98:
 2892 0466 75706461 		.ascii	"updatable_parameters\000"
 2892      7461626C 
 2892      655F7061 
 2892      72616D65 
 2892      74657273 
 2893              	.LASF80:
 2894 047b 70726573 		.ascii	"pressure\000"
 2894      73757265 
 2894      00
 2895              	.LASF28:
 2896 0484 766F6C74 		.ascii	"voltage_pressure\000"
 2896      6167655F 
 2896      70726573 
 2896      73757265 
 2896      00
 2897              	.LASF126:
 2898 0495 74696D65 		.ascii	"timeToValve\000"
 2898      546F5661 
 2898      6C766500 
 2899              	.LASF16:
 2900 04a1 666C6F61 		.ascii	"float\000"
 2900      7400
 2901              	.LASF61:
 2902 04a7 5F426F6F 		.ascii	"_Bool\000"
 2902      6C00
 2903              	.LASF10:
 2904 04ad 696E7433 		.ascii	"int32_t\000"
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 60


 2904      325F7400 
 2905              	.LASF1:
 2906 04b5 756E7369 		.ascii	"unsigned char\000"
 2906      676E6564 
 2906      20636861 
 2906      7200
 2907              	.LASF89:
 2908 04c3 70726573 		.ascii	"pressure_sensor_test\000"
 2908      73757265 
 2908      5F73656E 
 2908      736F725F 
 2908      74657374 
 2909              	.LASF113:
 2910 04d8 73797374 		.ascii	"system_settings\000"
 2910      656D5F73 
 2910      65747469 
 2910      6E677300 
 2911              	.LASF59:
 2912 04e8 56616C76 		.ascii	"Valve_freq\000"
 2912      655F6672 
 2912      657100
 2913              	.LASF46:
 2914 04f3 72737271 		.ascii	"rsrq\000"
 2914      00
 2915              	.LASF54:
 2916 04f8 73796E63 		.ascii	"sync_time\000"
 2916      5F74696D 
 2916      6500
 2917              	.LASF82:
 2918 0502 73776170 		.ascii	"swap32\000"
 2918      333200
 2919              	.LASF24:
 2920 0509 74657374 		.ascii	"test_t\000"
 2920      5F7400
 2921              	.LASF34:
 2922 0510 70726573 		.ascii	"pressure_depth\000"
 2922      73757265 
 2922      5F646570 
 2922      746800
 2923              	.LASF44:
 2924 051f 72736370 		.ascii	"rscp\000"
 2924      00
 2925              	.LASF77:
 2926 0524 72656164 		.ascii	"readings\000"
 2926      696E6773 
 2926      00
 2927              	.LASF112:
 2928 052d 73797374 		.ascii	"system_info\000"
 2928      656D5F69 
 2928      6E666F00 
 2929              	.LASF41:
 2930 0539 696D6569 		.ascii	"imei\000"
 2930      00
 2931              	.LASF23:
 2932 053e 72656173 		.ascii	"reason\000"
 2932      6F6E00
 2933              	.LASF47:
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 61


 2934 0545 72737270 		.ascii	"rsrp\000"
 2934      00
 2935              	.LASF50:
 2936 054a 6D6F6465 		.ascii	"modem_stats_t\000"
 2936      6D5F7374 
 2936      6174735F 
 2936      7400
 2937              	.LASF33:
 2938 0558 70726573 		.ascii	"pressure_current\000"
 2938      73757265 
 2938      5F637572 
 2938      72656E74 
 2938      00
 2939              	.LASF29:
 2940 0569 76616C69 		.ascii	"valid\000"
 2940      6400
 2941              	.LASF121:
 2942 056f 616C6172 		.ascii	"alarmLevelSensor\000"
 2942      6D4C6576 
 2942      656C5365 
 2942      6E736F72 
 2942      00
 2943              	.LASF57:
 2944 0580 4C657665 		.ascii	"Level_Sensor_freq\000"
 2944      6C5F5365 
 2944      6E736F72 
 2944      5F667265 
 2944      7100
 2945              	.LASF101:
 2946 0592 6C657665 		.ascii	"level_sensor_inbox\000"
 2946      6C5F7365 
 2946      6E736F72 
 2946      5F696E62 
 2946      6F7800
 2947              	.LASF19:
 2948 05a5 6C6F6E67 		.ascii	"long double\000"
 2948      20646F75 
 2948      626C6500 
 2949              	.LASF18:
 2950 05b1 63686172 		.ascii	"char\000"
 2950      00
 2951              	.LASF8:
 2952 05b6 756E7369 		.ascii	"unsigned int\000"
 2952      676E6564 
 2952      20696E74 
 2952      00
 2953              	.LASF125:
 2954 05c3 616C6172 		.ascii	"alarmValve\000"
 2954      6D56616C 
 2954      766500
 2955              	.LASF111:
 2956 05ce 68747470 		.ascii	"http_route\000"
 2956      5F726F75 
 2956      746500
 2957              	.LASF9:
 2958 05d9 5F5F696E 		.ascii	"__int32_t\000"
 2958      7433325F 
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 62


 2958      7400
 2959              	.LASF53:
 2960 05e3 6D656173 		.ascii	"measure_time\000"
 2960      7572655F 
 2960      74696D65 
 2960      00
 2961              	.LASF76:
 2962 05f0 6F666673 		.ascii	"offset\000"
 2962      657400
 2963              	.LASF3:
 2964 05f7 73686F72 		.ascii	"short unsigned int\000"
 2964      7420756E 
 2964      7369676E 
 2964      65642069 
 2964      6E7400
 2965              	.LASF39:
 2966 060a 73696D5F 		.ascii	"sim_id\000"
 2966      696400
 2967              	.LASF130:
 2968 0611 766F6C74 		.ascii	"voltages.c\000"
 2968      61676573 
 2968      2E6300
 2969              	.LASF58:
 2970 061c 446F776E 		.ascii	"Downstream_Level_Sensor_freq\000"
 2970      73747265 
 2970      616D5F4C 
 2970      6576656C 
 2970      5F53656E 
 2971              	.LASF78:
 2972 0639 766F6C74 		.ascii	"voltage_take_readings\000"
 2972      6167655F 
 2972      74616B65 
 2972      5F726561 
 2972      64696E67 
 2973              	.LASF105:
 2974 064f 76616C76 		.ascii	"valve_enabled\000"
 2974      655F656E 
 2974      61626C65 
 2974      6400
 2975              	.LASF22:
 2976 065d 73746174 		.ascii	"status\000"
 2976      757300
 2977              	.LASF122:
 2978 0664 74696D65 		.ascii	"timeToLevelSensor\000"
 2978      546F4C65 
 2978      76656C53 
 2978      656E736F 
 2978      7200
 2979              	.LASF102:
 2980 0676 6C657665 		.ascii	"level_sensor_enabled\000"
 2980      6C5F7365 
 2980      6E736F72 
 2980      5F656E61 
 2980      626C6564 
 2981              	.LASF93:
 2982 068b 64617461 		.ascii	"dataPointsInStackDesired\000"
 2982      506F696E 
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 63


 2982      7473496E 
 2982      53746163 
 2982      6B446573 
 2983              	.LASF56:
 2984 06a4 4170705F 		.ascii	"App_LED_freq\000"
 2984      4C45445F 
 2984      66726571 
 2984      00
 2985              	.LASF73:
 2986 06b1 7379735F 		.ascii	"sys_settings_t\000"
 2986      73657474 
 2986      696E6773 
 2986      5F7400
 2987              	.LASF124:
 2988 06c0 74696D65 		.ascii	"timeToDownstreamLevelSensor\000"
 2988      546F446F 
 2988      776E7374 
 2988      7265616D 
 2988      4C657665 
 2989              	.LASF110:
 2990 06dc 68747470 		.ascii	"http_body\000"
 2990      5F626F64 
 2990      7900
 2991              	.LASF127:
 2992 06e6 616C6172 		.ascii	"alarmAutosampler\000"
 2992      6D417574 
 2992      6F73616D 
 2992      706C6572 
 2992      00
 2993              	.LASF106:
 2994 06f7 76616C76 		.ascii	"valve_inbox\000"
 2994      655F696E 
 2994      626F7800 
 2995              	.LASF60:
 2996 0703 4175746F 		.ascii	"Autosampler_freq\000"
 2996      73616D70 
 2996      6C65725F 
 2996      66726571 
 2996      00
 2997              	.LASF65:
 2998 0714 636F756E 		.ascii	"countDownType\000"
 2998      74446F77 
 2998      6E547970 
 2998      6500
 2999              	.LASF52:
 3000 0722 73696D5F 		.ascii	"sim_type\000"
 3000      74797065 
 3000      00
 3001              	.LASF35:
 3002 072b 70726573 		.ascii	"pressure_t\000"
 3002      73757265 
 3002      5F7400
 3003              	.LASF109:
 3004 0736 68747470 		.ascii	"http_request\000"
 3004      5F726571 
 3004      75657374 
 3004      00
ARM GAS  C:\Users\shara\AppData\Local\Temp\ccuzqrLD.s 			page 64


 3005              	.LASF17:
 3006 0743 646F7562 		.ascii	"double\000"
 3006      6C6500
 3007              	.LASF100:
 3008 074a 6170705F 		.ascii	"app_led_inbox\000"
 3008      6C65645F 
 3008      696E626F 
 3008      7800
 3009              	.LASF95:
 3010 0758 6D6F6465 		.ascii	"modem_state\000"
 3010      6D5F7374 
 3010      61746500 
 3011              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
