ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"voltages.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.global	__aeabi_f2d
  44              		.global	__aeabi_dsub
  45              		.global	__aeabi_d2f
  46              		.global	__aeabi_fmul
  47              		.global	__aeabi_fsub
  48              		.section	.text.voltage_take_readings,"ax",%progbits
  49              		.align	2
  50              		.global	voltage_take_readings
  51              		.thumb
  52              		.thumb_func
  53              		.type	voltage_take_readings, %function
  54              	voltage_take_readings:
  55              	.LFB64:
  56              		.file 1 "voltages.c"
   1:voltages.c    **** #include "voltages.h"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 2


   2:voltages.c    **** #include "notoriOS.h"
   3:voltages.c    **** #include <math.h>
   4:voltages.c    **** 
   5:voltages.c    **** // Function to take voltage readings and save them in the voltage_t datatype
   6:voltages.c    **** voltage_t voltage_take_readings(){
  57              		.loc 1 6 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 112
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 B0B5     		push	{r4, r5, r7, lr}
  62              		.cfi_def_cfa_offset 16
  63              		.cfi_offset 4, -16
  64              		.cfi_offset 5, -12
  65              		.cfi_offset 7, -8
  66              		.cfi_offset 14, -4
  67 0002 9CB0     		sub	sp, sp, #112
  68              		.cfi_def_cfa_offset 128
  69 0004 00AF     		add	r7, sp, #0
  70              		.cfi_def_cfa_register 7
  71 0006 7860     		str	r0, [r7, #4]
   7:voltages.c    ****     
   8:voltages.c    ****     // if valve type put voltage across valve potentiometer
   9:voltages.c    ****     Valve_POS_Power_Write(1);
  72              		.loc 1 9 0
  73 0008 0120     		movs	r0, #1
  74 000a FFF7FEFF 		bl	Valve_POS_Power_Write
  10:voltages.c    ****     
  11:voltages.c    ****     voltage_t voltage;  // Create variable voltage of data structure voltage_t.
  12:voltages.c    ****      
  13:voltages.c    **** 	Battery_Voltage_Enable_Write(ON);   // Flip on the Battery Voltage ADC pin high (turns it on).
  75              		.loc 1 13 0
  76 000e 0120     		movs	r0, #1
  77 0010 FFF7FEFF 		bl	Battery_Voltage_Enable_Write
  14:voltages.c    ****     Pressure_Voltage_Enable_Write(ON);  // Flip on the Pressure Transducer Voltage ADC pin high (tu
  78              		.loc 1 14 0
  79 0014 0120     		movs	r0, #1
  80 0016 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  15:voltages.c    ****     
  16:voltages.c    **** 	CyDelay(10u);	    // 10 seconds delay to give time to flip on ADC pin.
  81              		.loc 1 16 0
  82 001a 0A20     		movs	r0, #10
  83 001c FFF7FEFF 		bl	CyDelay
  17:voltages.c    ****     
  18:voltages.c    ****     AMux_Start();       // Start the Analog Multiplexer
  84              		.loc 1 18 0
  85 0020 FFF7FEFF 		bl	AMux_Start
  19:voltages.c    ****  
  20:voltages.c    ****     ADC_RestoreConfig();// Have to call this and save (See below). Otherwise ADC won't work through
  86              		.loc 1 20 0
  87 0024 FFF7FEFF 		bl	ADC_RestoreConfig
  21:voltages.c    ****     
  22:voltages.c    ****     ADC_Start();        // Start the ADC
  88              		.loc 1 22 0
  89 0028 FFF7FEFF 		bl	ADC_Start
  90              	.LBB2:
  23:voltages.c    ****     
  24:voltages.c    ****     
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 3


  25:voltages.c    ****     float channels[AMux_CHANNELS];
  26:voltages.c    ****     
  27:voltages.c    ****     for(uint8 c = 0; c< AMux_CHANNELS + 1; c++) // Sweep the MUX Channels
  91              		.loc 1 27 0
  92 002c 0023     		movs	r3, #0
  93 002e 87F86F30 		strb	r3, [r7, #111]
  94 0032 34E0     		b	.L2
  95              	.L5:
  96              	.LBB3:
  28:voltages.c    ****     {
  29:voltages.c    ****         
  30:voltages.c    ****         int32 readings[N_SAMPLES];  // Creates new int32 array called readings of size N_SAMPLES = 
  31:voltages.c    ****         
  32:voltages.c    ****         AMux_Select(c); // This functions first disconnects all channels then connects the given ch
  97              		.loc 1 32 0
  98 0034 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
  99 0038 1846     		mov	r0, r3
 100 003a FFF7FEFF 		bl	AMux_Select
 101              	.LBB4:
  33:voltages.c    ****         
  34:voltages.c    ****         for(uint16 i=0; i< N_SAMPLES; i++){
 102              		.loc 1 34 0
 103 003e 0023     		movs	r3, #0
 104 0040 A7F86C30 		strh	r3, [r7, #108]	@ movhi
 105 0044 0FE0     		b	.L3
 106              	.L4:
  35:voltages.c    ****             
  36:voltages.c    ****             readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the
 107              		.loc 1 36 0 discriminator 3
 108 0046 B7F86C40 		ldrh	r4, [r7, #108]
 109 004a FFF7FEFF 		bl	ADC_Read32
 110 004e 0246     		mov	r2, r0
 111 0050 A300     		lsls	r3, r4, #2
 112 0052 07F17001 		add	r1, r7, #112
 113 0056 0B44     		add	r3, r3, r1
 114 0058 43F8682C 		str	r2, [r3, #-104]
  34:voltages.c    ****             
 115              		.loc 1 34 0 discriminator 3
 116 005c B7F86C30 		ldrh	r3, [r7, #108]
 117 0060 0133     		adds	r3, r3, #1
 118 0062 A7F86C30 		strh	r3, [r7, #108]	@ movhi
 119              	.L3:
  34:voltages.c    ****             
 120              		.loc 1 34 0 is_stmt 0 discriminator 1
 121 0066 B7F86C30 		ldrh	r3, [r7, #108]
 122 006a 0A2B     		cmp	r3, #10
 123 006c EBD9     		bls	.L4
 124              	.LBE4:
  37:voltages.c    ****         }
  38:voltages.c    ****         
  39:voltages.c    ****         // Converts the ADC output to Volts as a floating point number. 
  40:voltages.c    ****         // Get the median of readings and return that.
  41:voltages.c    ****         channels[c] = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Get median of re
 125              		.loc 1 41 0 is_stmt 1 discriminator 2
 126 006e 97F86F40 		ldrb	r4, [r7, #111]	@ zero_extendqisi2
 127 0072 07F10803 		add	r3, r7, #8
 128 0076 0B21     		movs	r1, #11
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 4


 129 0078 1846     		mov	r0, r3
 130 007a FFF7FEFF 		bl	find_median32
 131 007e 0346     		mov	r3, r0
 132 0080 1846     		mov	r0, r3
 133 0082 FFF7FEFF 		bl	ADC_CountsTo_Volts
 134 0086 0246     		mov	r2, r0
 135 0088 A300     		lsls	r3, r4, #2
 136 008a 07F17001 		add	r1, r7, #112
 137 008e 0B44     		add	r3, r3, r1
 138 0090 43F83C2C 		str	r2, [r3, #-60]	@ float
 139              	.LBE3:
  27:voltages.c    ****     {
 140              		.loc 1 27 0 discriminator 2
 141 0094 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 142 0098 0133     		adds	r3, r3, #1
 143 009a 87F86F30 		strb	r3, [r7, #111]
 144              	.L2:
  27:voltages.c    ****     {
 145              		.loc 1 27 0 is_stmt 0 discriminator 1
 146 009e 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 147 00a2 062B     		cmp	r3, #6
 148 00a4 C6D9     		bls	.L5
 149              	.LBE2:
  42:voltages.c    ****     }
  43:voltages.c    ****     
  44:voltages.c    ****     AMux_Stop();        // Disconnects all Analog Multiplex channels.
 150              		.loc 1 44 0 is_stmt 1
 151 00a6 FFF7FEFF 		bl	AMux_Start
  45:voltages.c    ****     
  46:voltages.c    ****     ADC_SaveConfig();   // Save the register configuration which are not retention.
 152              		.loc 1 46 0
 153 00aa FFF7FEFF 		bl	ADC_SaveConfig
  47:voltages.c    ****     
  48:voltages.c    ****     ADC_Stop();         // Stops and powers down the ADC component and the internal clock if the ex
 154              		.loc 1 48 0
 155 00ae FFF7FEFF 		bl	ADC_Stop
  49:voltages.c    ****     
  50:voltages.c    ****     Battery_Voltage_Enable_Write(OFF);  // Pulls Battery ADC pin low (turns it off).
 156              		.loc 1 50 0
 157 00b2 0020     		movs	r0, #0
 158 00b4 FFF7FEFF 		bl	Battery_Voltage_Enable_Write
  51:voltages.c    ****     Pressure_Voltage_Enable_Write(OFF);  // Pulls Pressure Transducer ADC pin low (turns it off).
 159              		.loc 1 51 0
 160 00b8 0020     		movs	r0, #0
 161 00ba FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  52:voltages.c    ****     
  53:voltages.c    ****     float offset = channels[0] - 1.024; // Should be 1.024 exactly. BK saw an offset when measuring
 162              		.loc 1 53 0
 163 00be 7B6B     		ldr	r3, [r7, #52]	@ float
 164 00c0 1846     		mov	r0, r3
 165 00c2 FFF7FEFF 		bl	__aeabi_f2d
 166 00c6 1EA3     		adr	r3, .L7
 167 00c8 D3E90023 		ldrd	r2, [r3]
 168 00cc FFF7FEFF 		bl	__aeabi_dsub
 169 00d0 0346     		mov	r3, r0
 170 00d2 0C46     		mov	r4, r1
 171 00d4 1846     		mov	r0, r3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 5


 172 00d6 2146     		mov	r1, r4
 173 00d8 FFF7FEFF 		bl	__aeabi_d2f
 174 00dc 0346     		mov	r3, r0
 175 00de BB66     		str	r3, [r7, #104]	@ float
  54:voltages.c    ****     voltage.voltage_battery = (channels[ADC_MUX_VBAT] * 11) - offset; // Voltage divider is (1/10) 
 176              		.loc 1 54 0
 177 00e0 BB6B     		ldr	r3, [r7, #56]	@ float
 178 00e2 1949     		ldr	r1, .L7+8
 179 00e4 1846     		mov	r0, r3
 180 00e6 FFF7FEFF 		bl	__aeabi_fmul
 181 00ea 0346     		mov	r3, r0
 182 00ec B96E     		ldr	r1, [r7, #104]	@ float
 183 00ee 1846     		mov	r0, r3
 184 00f0 FFF7FEFF 		bl	__aeabi_fsub
 185 00f4 0346     		mov	r3, r0
 186 00f6 FB64     		str	r3, [r7, #76]	@ float
  55:voltages.c    ****     voltage.voltage_solar = channels[ADC_MUX_VSOL] - offset; // Just want voltage here
 187              		.loc 1 55 0
 188 00f8 FB6B     		ldr	r3, [r7, #60]	@ float
 189 00fa B96E     		ldr	r1, [r7, #104]	@ float
 190 00fc 1846     		mov	r0, r3
 191 00fe FFF7FEFF 		bl	__aeabi_fsub
 192 0102 0346     		mov	r3, r0
 193 0104 3B65     		str	r3, [r7, #80]	@ float
  56:voltages.c    ****     // Voltage across sensor resistor gives 100mV drop for max current, which is 800mA
  57:voltages.c    ****     //voltage.voltage_charge_current = 0.1*(channels[ADC_MUX_CHRG] - voltage.voltage_battery);
  58:voltages.c    ****     voltage.voltage_pressure = channels[ADC_MUX_PRTRANS]; // Pressure transducer reading
 194              		.loc 1 58 0
 195 0106 3B6C     		ldr	r3, [r7, #64]	@ float
 196 0108 BB65     		str	r3, [r7, #88]	@ float
  59:voltages.c    **** 
  60:voltages.c    ****     // VALVE
  61:voltages.c    ****     voltage.voltage_valve_pos = channels[ADC_MUX_Valve_POS_reading]; // blue wire reading (opened p
 197              		.loc 1 61 0
 198 010a 7B6C     		ldr	r3, [r7, #68]	@ float
 199 010c FB65     		str	r3, [r7, #92]	@ float
  62:voltages.c    ****     voltage.voltage_valve_pot_power = channels[ADC_MUX_Valve_POS_Power]; // brown wire power supply
 200              		.loc 1 62 0
 201 010e BB6C     		ldr	r3, [r7, #72]	@ float
 202 0110 3B66     		str	r3, [r7, #96]	@ float
  63:voltages.c    ****     // same pin as Valve_POS_Power
  64:voltages.c    ****     
  65:voltages.c    ****     voltage.valid = 1;
 203              		.loc 1 65 0
 204 0112 0123     		movs	r3, #1
 205 0114 87F86430 		strb	r3, [r7, #100]
  66:voltages.c    ****     
  67:voltages.c    **** 
  68:voltages.c    ****     // if valve type put voltage across valve potentiometer
  69:voltages.c    ****     Valve_POS_Power_Write(0);
 206              		.loc 1 69 0
 207 0118 0020     		movs	r0, #0
 208 011a FFF7FEFF 		bl	Valve_POS_Power_Write
  70:voltages.c    ****     
  71:voltages.c    ****     return voltage;
 209              		.loc 1 71 0
 210 011e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 6


 211 0120 1D46     		mov	r5, r3
 212 0122 07F14C04 		add	r4, r7, #76
 213 0126 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 214 0128 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 215 012a 94E80700 		ldmia	r4, {r0, r1, r2}
 216 012e 85E80700 		stmia	r5, {r0, r1, r2}
  72:voltages.c    **** }
 217              		.loc 1 72 0
 218 0132 7868     		ldr	r0, [r7, #4]
 219 0134 7037     		adds	r7, r7, #112
 220              		.cfi_def_cfa_offset 16
 221 0136 BD46     		mov	sp, r7
 222              		.cfi_def_cfa_register 13
 223              		@ sp needed
 224 0138 B0BD     		pop	{r4, r5, r7, pc}
 225              	.L8:
 226 013a 00BFAFF3 		.align	3
 226      0080
 227              	.L7:
 228 0140 FCA9F1D2 		.word	-755914244
 229 0144 4D62F03F 		.word	1072718413
 230 0148 00003041 		.word	1093664768
 231              		.cfi_endproc
 232              	.LFE64:
 233              		.size	voltage_take_readings, .-voltage_take_readings
 234              		.global	__aeabi_fdiv
 235              		.global	__aeabi_ddiv
 236              		.global	__aeabi_dmul
 237              		.section	.text.pressure_sensor_readings,"ax",%progbits
 238              		.align	2
 239              		.global	pressure_sensor_readings
 240              		.thumb
 241              		.thumb_func
 242              		.type	pressure_sensor_readings, %function
 243              	pressure_sensor_readings:
 244              	.LFB65:
  73:voltages.c    **** 
  74:voltages.c    **** // Function to take Pressure sensor readings and save them in the pressure_t datatype
  75:voltages.c    **** pressure_t pressure_sensor_readings(){
 245              		.loc 1 75 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 96
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 90B5     		push	{r4, r7, lr}
 250              		.cfi_def_cfa_offset 12
 251              		.cfi_offset 4, -12
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 99B0     		sub	sp, sp, #100
 255              		.cfi_def_cfa_offset 112
 256 0004 00AF     		add	r7, sp, #0
 257              		.cfi_def_cfa_register 7
 258 0006 7860     		str	r0, [r7, #4]
  76:voltages.c    ****     
  77:voltages.c    ****     pressure_t pressure;  // Create variable voltage of data structure voltage_t.
  78:voltages.c    ****     float channels[AMux_CHANNELS];
  79:voltages.c    ****     int32 readings[N_SAMPLES];  // Creates new int32 array called readings of size N_SAMPLES = 11
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 7


  80:voltages.c    ****     
  81:voltages.c    ****     AMux_Start();       // Start the Analog Multiplexer
 259              		.loc 1 81 0
 260 0008 FFF7FEFF 		bl	AMux_Start
  82:voltages.c    ****  
  83:voltages.c    ****     ADC_RestoreConfig();// Have to call this and save (See below). Otherwise ADC won't work through
 261              		.loc 1 83 0
 262 000c FFF7FEFF 		bl	ADC_RestoreConfig
  84:voltages.c    ****     
  85:voltages.c    ****     ADC_Start();        // Start the ADC
 263              		.loc 1 85 0
 264 0010 FFF7FEFF 		bl	ADC_Start
  86:voltages.c    ****     
  87:voltages.c    ****     AMux_Select(ADC_MUX_PRTRANS); // This functions first disconnects all channels then connects th
 265              		.loc 1 87 0
 266 0014 0320     		movs	r0, #3
 267 0016 FFF7FEFF 		bl	AMux_Select
 268              	.LBB5:
  88:voltages.c    ****     
  89:voltages.c    ****     for(uint16 i=0; i< N_SAMPLES; i++){   
 269              		.loc 1 89 0
 270 001a 0023     		movs	r3, #0
 271 001c A7F85E30 		strh	r3, [r7, #94]	@ movhi
 272 0020 0FE0     		b	.L10
 273              	.L11:
  90:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 274              		.loc 1 90 0 discriminator 3
 275 0022 B7F85E40 		ldrh	r4, [r7, #94]
 276 0026 FFF7FEFF 		bl	ADC_Read32
 277 002a 0246     		mov	r2, r0
 278 002c A300     		lsls	r3, r4, #2
 279 002e 07F16001 		add	r1, r7, #96
 280 0032 0B44     		add	r3, r3, r1
 281 0034 43F8582C 		str	r2, [r3, #-88]
  89:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 282              		.loc 1 89 0 discriminator 3
 283 0038 B7F85E30 		ldrh	r3, [r7, #94]
 284 003c 0133     		adds	r3, r3, #1
 285 003e A7F85E30 		strh	r3, [r7, #94]	@ movhi
 286              	.L10:
  89:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 287              		.loc 1 89 0 is_stmt 0 discriminator 1
 288 0042 B7F85E30 		ldrh	r3, [r7, #94]
 289 0046 0A2B     		cmp	r3, #10
 290 0048 EBD9     		bls	.L11
 291              	.LBE5:
  91:voltages.c    ****     }
  92:voltages.c    ****     
  93:voltages.c    ****     // Converts the ADC output to Volts as a floating point number. 
  94:voltages.c    ****     // Get the median of readings and return that.
  95:voltages.c    ****     pressure.pressure_voltage_off = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Ge
 292              		.loc 1 95 0 is_stmt 1
 293 004a 07F10803 		add	r3, r7, #8
 294 004e 0B21     		movs	r1, #11
 295 0050 1846     		mov	r0, r3
 296 0052 FFF7FEFF 		bl	find_median32
 297 0056 0346     		mov	r3, r0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 8


 298 0058 1846     		mov	r0, r3
 299 005a FFF7FEFF 		bl	ADC_CountsTo_Volts
 300 005e 0346     		mov	r3, r0
 301 0060 3B65     		str	r3, [r7, #80]	@ float
  96:voltages.c    ****     pressure.pressure_voltage_off = floorf(pressure.pressure_voltage_off * 100) / 100;
 302              		.loc 1 96 0
 303 0062 3B6D     		ldr	r3, [r7, #80]	@ float
 304 0064 4849     		ldr	r1, .L15+16
 305 0066 1846     		mov	r0, r3
 306 0068 FFF7FEFF 		bl	__aeabi_fmul
 307 006c 0346     		mov	r3, r0
 308 006e 1846     		mov	r0, r3
 309 0070 FFF7FEFF 		bl	floorf
 310 0074 0346     		mov	r3, r0
 311 0076 4449     		ldr	r1, .L15+16
 312 0078 1846     		mov	r0, r3
 313 007a FFF7FEFF 		bl	__aeabi_fdiv
 314 007e 0346     		mov	r3, r0
 315 0080 3B65     		str	r3, [r7, #80]	@ float
  97:voltages.c    ****     
  98:voltages.c    ****     Pressure_Voltage_Enable_Write(ON);  // Flip on the Pressure Transducer Voltage ADC pin high (tu
 316              		.loc 1 98 0
 317 0082 0120     		movs	r0, #1
 318 0084 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  99:voltages.c    ****     
 100:voltages.c    **** 	CyDelay(10u);	    // 10 seconds delay to give time to flip on ADC pin.
 319              		.loc 1 100 0
 320 0088 0A20     		movs	r0, #10
 321 008a FFF7FEFF 		bl	CyDelay
 322              	.LBB6:
 101:voltages.c    ****   
 102:voltages.c    ****     for(uint16 i=0; i< N_SAMPLES; i++){   
 323              		.loc 1 102 0
 324 008e 0023     		movs	r3, #0
 325 0090 A7F85C30 		strh	r3, [r7, #92]	@ movhi
 326 0094 0FE0     		b	.L12
 327              	.L13:
 103:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 328              		.loc 1 103 0 discriminator 3
 329 0096 B7F85C40 		ldrh	r4, [r7, #92]
 330 009a FFF7FEFF 		bl	ADC_Read32
 331 009e 0246     		mov	r2, r0
 332 00a0 A300     		lsls	r3, r4, #2
 333 00a2 07F16001 		add	r1, r7, #96
 334 00a6 0B44     		add	r3, r3, r1
 335 00a8 43F8582C 		str	r2, [r3, #-88]
 102:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 336              		.loc 1 102 0 discriminator 3
 337 00ac B7F85C30 		ldrh	r3, [r7, #92]
 338 00b0 0133     		adds	r3, r3, #1
 339 00b2 A7F85C30 		strh	r3, [r7, #92]	@ movhi
 340              	.L12:
 102:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 341              		.loc 1 102 0 is_stmt 0 discriminator 1
 342 00b6 B7F85C30 		ldrh	r3, [r7, #92]
 343 00ba 0A2B     		cmp	r3, #10
 344 00bc EBD9     		bls	.L13
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 9


 345              	.LBE6:
 104:voltages.c    ****     }
 105:voltages.c    ****     
 106:voltages.c    ****     // Converts the ADC output to Volts as a floating point number. 
 107:voltages.c    ****     // Get the median of readings and return that.
 108:voltages.c    ****     pressure.pressure_voltage_on = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Get
 346              		.loc 1 108 0 is_stmt 1
 347 00be 07F10803 		add	r3, r7, #8
 348 00c2 0B21     		movs	r1, #11
 349 00c4 1846     		mov	r0, r3
 350 00c6 FFF7FEFF 		bl	find_median32
 351 00ca 0346     		mov	r3, r0
 352 00cc 1846     		mov	r0, r3
 353 00ce FFF7FEFF 		bl	ADC_CountsTo_Volts
 354 00d2 0346     		mov	r3, r0
 355 00d4 FB64     		str	r3, [r7, #76]	@ float
 109:voltages.c    ****     
 110:voltages.c    ****     AMux_Stop();        // Disconnects all Analog Multiplex channels.
 356              		.loc 1 110 0
 357 00d6 FFF7FEFF 		bl	AMux_Start
 111:voltages.c    ****     
 112:voltages.c    ****     ADC_SaveConfig();   // Save the register configuration which are not retention.
 358              		.loc 1 112 0
 359 00da FFF7FEFF 		bl	ADC_SaveConfig
 113:voltages.c    ****     
 114:voltages.c    ****     ADC_Stop();         // Stops and powers down the ADC component and the internal clock if the ex
 360              		.loc 1 114 0
 361 00de FFF7FEFF 		bl	ADC_Stop
 115:voltages.c    ****     
 116:voltages.c    ****     Pressure_Voltage_Enable_Write(OFF);  // Pulls Pressure Transducer ADC pin low (turns it off).
 362              		.loc 1 116 0
 363 00e2 0020     		movs	r0, #0
 364 00e4 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 117:voltages.c    ****     // Calculate the pressure transducer current output.
 118:voltages.c    ****     // i=V/R where i= currrent, V= voltage, and R= resistance= 150 ohms. Divide by 1000 to get curr
 119:voltages.c    ****     // Should fall between 4 and 20mA
 120:voltages.c    ****     pressure.pressure_current = (pressure.pressure_voltage_on/ 150.0)*1000; 
 365              		.loc 1 120 0
 366 00e8 FB6C     		ldr	r3, [r7, #76]	@ float
 367 00ea 1846     		mov	r0, r3
 368 00ec FFF7FEFF 		bl	__aeabi_f2d
 369 00f0 21A3     		adr	r3, .L15
 370 00f2 D3E90023 		ldrd	r2, [r3]
 371 00f6 FFF7FEFF 		bl	__aeabi_ddiv
 372 00fa 0346     		mov	r3, r0
 373 00fc 0C46     		mov	r4, r1
 374 00fe 1846     		mov	r0, r3
 375 0100 2146     		mov	r1, r4
 376 0102 4FF00002 		mov	r2, #0
 377 0106 214B     		ldr	r3, .L15+20
 378 0108 FFF7FEFF 		bl	__aeabi_dmul
 379 010c 0346     		mov	r3, r0
 380 010e 0C46     		mov	r4, r1
 381 0110 1846     		mov	r0, r3
 382 0112 2146     		mov	r1, r4
 383 0114 FFF7FEFF 		bl	__aeabi_d2f
 384 0118 0346     		mov	r3, r0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 10


 385 011a 7B65     		str	r3, [r7, #84]	@ float
 121:voltages.c    ****     // Calculate the estimated depth from the pressure transducer.
 122:voltages.c    ****     // d = (Dmax*V/0.016R) - (Dmax/4) where d= depth, V= voltage, R= resistance= 150 ohms, Dmax = s
 123:voltages.c    ****     // Should fall between 0 and 10 ft
 124:voltages.c    ****     pressure.pressure_depth = ((10.0*pressure.pressure_voltage_on)/(0.016*150))-(10.0/4.0);   
 386              		.loc 1 124 0
 387 011c FB6C     		ldr	r3, [r7, #76]	@ float
 388 011e 1846     		mov	r0, r3
 389 0120 FFF7FEFF 		bl	__aeabi_f2d
 390 0124 4FF00002 		mov	r2, #0
 391 0128 194B     		ldr	r3, .L15+24
 392 012a FFF7FEFF 		bl	__aeabi_dmul
 393 012e 0346     		mov	r3, r0
 394 0130 0C46     		mov	r4, r1
 395 0132 1846     		mov	r0, r3
 396 0134 2146     		mov	r1, r4
 397 0136 12A3     		adr	r3, .L15+8
 398 0138 D3E90023 		ldrd	r2, [r3]
 399 013c FFF7FEFF 		bl	__aeabi_ddiv
 400 0140 0346     		mov	r3, r0
 401 0142 0C46     		mov	r4, r1
 402 0144 1846     		mov	r0, r3
 403 0146 2146     		mov	r1, r4
 404 0148 4FF00002 		mov	r2, #0
 405 014c 114B     		ldr	r3, .L15+28
 406 014e FFF7FEFF 		bl	__aeabi_dsub
 407 0152 0346     		mov	r3, r0
 408 0154 0C46     		mov	r4, r1
 409 0156 1846     		mov	r0, r3
 410 0158 2146     		mov	r1, r4
 411 015a FFF7FEFF 		bl	__aeabi_d2f
 412 015e 0346     		mov	r3, r0
 413 0160 BB65     		str	r3, [r7, #88]	@ float
 125:voltages.c    ****     return pressure;
 414              		.loc 1 125 0
 415 0162 7B68     		ldr	r3, [r7, #4]
 416 0164 1C46     		mov	r4, r3
 417 0166 07F14C03 		add	r3, r7, #76
 418 016a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 419 016c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 126:voltages.c    **** }
 420              		.loc 1 126 0
 421 0170 7868     		ldr	r0, [r7, #4]
 422 0172 6437     		adds	r7, r7, #100
 423              		.cfi_def_cfa_offset 12
 424 0174 BD46     		mov	sp, r7
 425              		.cfi_def_cfa_register 13
 426              		@ sp needed
 427 0176 90BD     		pop	{r4, r7, pc}
 428              	.L16:
 429              		.align	3
 430              	.L15:
 431 0178 00000000 		.word	0
 432 017c 00C06240 		.word	1080213504
 433 0180 33333333 		.word	858993459
 434 0184 33330340 		.word	1073951539
 435 0188 0000C842 		.word	1120403456
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 11


 436 018c 00408F40 		.word	1083129856
 437 0190 00002440 		.word	1076101120
 438 0194 00000440 		.word	1074003968
 439              		.cfi_endproc
 440              	.LFE65:
 441              		.size	pressure_sensor_readings, .-pressure_sensor_readings
 442              		.section	.text.pressure_calculations,"ax",%progbits
 443              		.align	2
 444              		.global	pressure_calculations
 445              		.thumb
 446              		.thumb_func
 447              		.type	pressure_calculations, %function
 448              	pressure_calculations:
 449              	.LFB66:
 127:voltages.c    **** 
 128:voltages.c    **** // Function to calculate the pressure transducer current and depth estimate.
 129:voltages.c    **** pressure_t pressure_calculations(voltage_t voltage){
 450              		.loc 1 129 0
 451              		.cfi_startproc
 452              		@ args = 32, pretend = 16, frame = 24
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454 0000 84B0     		sub	sp, sp, #16
 455              		.cfi_def_cfa_offset 16
 456 0002 90B5     		push	{r4, r7, lr}
 457              		.cfi_def_cfa_offset 28
 458              		.cfi_offset 4, -28
 459              		.cfi_offset 7, -24
 460              		.cfi_offset 14, -20
 461 0004 87B0     		sub	sp, sp, #28
 462              		.cfi_def_cfa_offset 56
 463 0006 00AF     		add	r7, sp, #0
 464              		.cfi_def_cfa_register 7
 465 0008 7860     		str	r0, [r7, #4]
 466 000a 07F12C00 		add	r0, r7, #44
 467 000e 80E80E00 		stmia	r0, {r1, r2, r3}
 130:voltages.c    ****     // Create variable pressure of data structure type pressure_t.
 131:voltages.c    ****     pressure_t pressure;
 132:voltages.c    ****     
 133:voltages.c    ****     // Calculate the pressure transducer current output.
 134:voltages.c    ****     // i=V/R where i= currrent, V= voltage, and R= resistance= 150 ohms. Divide by 1000 to get curr
 135:voltages.c    ****     // Should fall between 4 and 20mA
 136:voltages.c    ****     pressure.pressure_current = (voltage.voltage_pressure/ 150.0)/1000; 
 468              		.loc 1 136 0
 469 0012 BB6B     		ldr	r3, [r7, #56]	@ float
 470 0014 1846     		mov	r0, r3
 471 0016 FFF7FEFF 		bl	__aeabi_f2d
 472 001a 23A3     		adr	r3, .L19
 473 001c D3E90023 		ldrd	r2, [r3]
 474 0020 FFF7FEFF 		bl	__aeabi_ddiv
 475 0024 0346     		mov	r3, r0
 476 0026 0C46     		mov	r4, r1
 477 0028 1846     		mov	r0, r3
 478 002a 2146     		mov	r1, r4
 479 002c 4FF00002 		mov	r2, #0
 480 0030 214B     		ldr	r3, .L19+16
 481 0032 FFF7FEFF 		bl	__aeabi_ddiv
 482 0036 0346     		mov	r3, r0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 12


 483 0038 0C46     		mov	r4, r1
 484 003a 1846     		mov	r0, r3
 485 003c 2146     		mov	r1, r4
 486 003e FFF7FEFF 		bl	__aeabi_d2f
 487 0042 0346     		mov	r3, r0
 488 0044 3B61     		str	r3, [r7, #16]	@ float
 137:voltages.c    ****     // Calculate the estimated depth from the pressure transducer.
 138:voltages.c    ****     // d = (Dmax*V/0.016R) - (Dmax/4) where d= depth, V= voltage, R= resistance= 150 ohms, Dmax = s
 139:voltages.c    ****     // Should fall between 0 and 10 ft
 140:voltages.c    ****     pressure.pressure_depth = ((10.0*voltage.voltage_pressure)/(0.016*150))-(10.0/4.0); 
 489              		.loc 1 140 0
 490 0046 BB6B     		ldr	r3, [r7, #56]	@ float
 491 0048 1846     		mov	r0, r3
 492 004a FFF7FEFF 		bl	__aeabi_f2d
 493 004e 4FF00002 		mov	r2, #0
 494 0052 1A4B     		ldr	r3, .L19+20
 495 0054 FFF7FEFF 		bl	__aeabi_dmul
 496 0058 0346     		mov	r3, r0
 497 005a 0C46     		mov	r4, r1
 498 005c 1846     		mov	r0, r3
 499 005e 2146     		mov	r1, r4
 500 0060 13A3     		adr	r3, .L19+8
 501 0062 D3E90023 		ldrd	r2, [r3]
 502 0066 FFF7FEFF 		bl	__aeabi_ddiv
 503 006a 0346     		mov	r3, r0
 504 006c 0C46     		mov	r4, r1
 505 006e 1846     		mov	r0, r3
 506 0070 2146     		mov	r1, r4
 507 0072 4FF00002 		mov	r2, #0
 508 0076 124B     		ldr	r3, .L19+24
 509 0078 FFF7FEFF 		bl	__aeabi_dsub
 510 007c 0346     		mov	r3, r0
 511 007e 0C46     		mov	r4, r1
 512 0080 1846     		mov	r0, r3
 513 0082 2146     		mov	r1, r4
 514 0084 FFF7FEFF 		bl	__aeabi_d2f
 515 0088 0346     		mov	r3, r0
 516 008a 7B61     		str	r3, [r7, #20]	@ float
 141:voltages.c    ****     return pressure;
 517              		.loc 1 141 0
 518 008c 7B68     		ldr	r3, [r7, #4]
 519 008e 1C46     		mov	r4, r3
 520 0090 07F10803 		add	r3, r7, #8
 521 0094 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 522 0096 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 142:voltages.c    **** }
 523              		.loc 1 142 0
 524 009a 7868     		ldr	r0, [r7, #4]
 525 009c 1C37     		adds	r7, r7, #28
 526              		.cfi_def_cfa_offset 28
 527 009e BD46     		mov	sp, r7
 528              		.cfi_def_cfa_register 13
 529              		@ sp needed
 530 00a0 BDE89040 		pop	{r4, r7, lr}
 531              		.cfi_restore 14
 532              		.cfi_restore 7
 533              		.cfi_restore 4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 13


 534              		.cfi_def_cfa_offset 16
 535 00a4 04B0     		add	sp, sp, #16
 536              		.cfi_def_cfa_offset 0
 537 00a6 7047     		bx	lr
 538              	.L20:
 539              		.align	3
 540              	.L19:
 541 00a8 00000000 		.word	0
 542 00ac 00C06240 		.word	1080213504
 543 00b0 33333333 		.word	858993459
 544 00b4 33330340 		.word	1073951539
 545 00b8 00408F40 		.word	1083129856
 546 00bc 00002440 		.word	1076101120
 547 00c0 00000440 		.word	1074003968
 548              		.cfi_endproc
 549              	.LFE66:
 550              		.size	pressure_calculations, .-pressure_calculations
 551              		.section	.text.sort32,"ax",%progbits
 552              		.align	2
 553              		.global	sort32
 554              		.thumb
 555              		.thumb_func
 556              		.type	sort32, %function
 557              	sort32:
 558              	.LFB67:
 143:voltages.c    ****     
 144:voltages.c    ****     
 145:voltages.c    **** 
 146:voltages.c    **** // Function to sort the elements in the level readings array
 147:voltages.c    **** void sort32(int32 a[],int32 n) { 
 559              		.loc 1 147 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 16
 562              		@ frame_needed = 1, uses_anonymous_args = 0
 563 0000 80B5     		push	{r7, lr}
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 7, -8
 566              		.cfi_offset 14, -4
 567 0002 84B0     		sub	sp, sp, #16
 568              		.cfi_def_cfa_offset 24
 569 0004 00AF     		add	r7, sp, #0
 570              		.cfi_def_cfa_register 7
 571 0006 7860     		str	r0, [r7, #4]
 572 0008 3960     		str	r1, [r7]
 148:voltages.c    ****    int32 i,j;
 149:voltages.c    **** 
 150:voltages.c    ****    for(i = 0;i < n-1;i++) {
 573              		.loc 1 150 0
 574 000a 0023     		movs	r3, #0
 575 000c FB60     		str	r3, [r7, #12]
 576 000e 28E0     		b	.L22
 577              	.L26:
 151:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 578              		.loc 1 151 0
 579 0010 0023     		movs	r3, #0
 580 0012 BB60     		str	r3, [r7, #8]
 581 0014 1BE0     		b	.L23
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 14


 582              	.L25:
 152:voltages.c    ****          if(a[j] > a[j+1])
 583              		.loc 1 152 0
 584 0016 BB68     		ldr	r3, [r7, #8]
 585 0018 9B00     		lsls	r3, r3, #2
 586 001a 7A68     		ldr	r2, [r7, #4]
 587 001c 1344     		add	r3, r3, r2
 588 001e 1A68     		ldr	r2, [r3]
 589 0020 BB68     		ldr	r3, [r7, #8]
 590 0022 0133     		adds	r3, r3, #1
 591 0024 9B00     		lsls	r3, r3, #2
 592 0026 7968     		ldr	r1, [r7, #4]
 593 0028 0B44     		add	r3, r3, r1
 594 002a 1B68     		ldr	r3, [r3]
 595 002c 9A42     		cmp	r2, r3
 596 002e 0BDD     		ble	.L24
 153:voltages.c    ****             swap32(&a[j],&a[j+1]);  // Swap the address of a[j] and a[j+1]
 597              		.loc 1 153 0
 598 0030 BB68     		ldr	r3, [r7, #8]
 599 0032 9B00     		lsls	r3, r3, #2
 600 0034 7A68     		ldr	r2, [r7, #4]
 601 0036 D018     		adds	r0, r2, r3
 602 0038 BB68     		ldr	r3, [r7, #8]
 603 003a 0133     		adds	r3, r3, #1
 604 003c 9B00     		lsls	r3, r3, #2
 605 003e 7A68     		ldr	r2, [r7, #4]
 606 0040 1344     		add	r3, r3, r2
 607 0042 1946     		mov	r1, r3
 608 0044 FFF7FEFF 		bl	swap32
 609              	.L24:
 151:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 610              		.loc 1 151 0 discriminator 2
 611 0048 BB68     		ldr	r3, [r7, #8]
 612 004a 0133     		adds	r3, r3, #1
 613 004c BB60     		str	r3, [r7, #8]
 614              	.L23:
 151:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 615              		.loc 1 151 0 is_stmt 0 discriminator 1
 616 004e 3A68     		ldr	r2, [r7]
 617 0050 FB68     		ldr	r3, [r7, #12]
 618 0052 D31A     		subs	r3, r2, r3
 619 0054 5A1E     		subs	r2, r3, #1
 620 0056 BB68     		ldr	r3, [r7, #8]
 621 0058 9A42     		cmp	r2, r3
 622 005a DCDC     		bgt	.L25
 150:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 623              		.loc 1 150 0 is_stmt 1 discriminator 2
 624 005c FB68     		ldr	r3, [r7, #12]
 625 005e 0133     		adds	r3, r3, #1
 626 0060 FB60     		str	r3, [r7, #12]
 627              	.L22:
 150:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 628              		.loc 1 150 0 is_stmt 0 discriminator 1
 629 0062 3B68     		ldr	r3, [r7]
 630 0064 5A1E     		subs	r2, r3, #1
 631 0066 FB68     		ldr	r3, [r7, #12]
 632 0068 9A42     		cmp	r2, r3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 15


 633 006a D1DC     		bgt	.L26
 154:voltages.c    ****       }
 155:voltages.c    ****    }
 156:voltages.c    **** }
 634              		.loc 1 156 0 is_stmt 1
 635 006c 00BF     		nop
 636 006e 1037     		adds	r7, r7, #16
 637              		.cfi_def_cfa_offset 8
 638 0070 BD46     		mov	sp, r7
 639              		.cfi_def_cfa_register 13
 640              		@ sp needed
 641 0072 80BD     		pop	{r7, pc}
 642              		.cfi_endproc
 643              	.LFE67:
 644              		.size	sort32, .-sort32
 645              		.section	.text.swap32,"ax",%progbits
 646              		.align	2
 647              		.global	swap32
 648              		.thumb
 649              		.thumb_func
 650              		.type	swap32, %function
 651              	swap32:
 652              	.LFB68:
 157:voltages.c    **** 
 158:voltages.c    **** // Function to swap elements in the level readings array in order to sort them
 159:voltages.c    **** void swap32(int32 *p,int32 *q){
 653              		.loc 1 159 0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 16
 656              		@ frame_needed = 1, uses_anonymous_args = 0
 657              		@ link register save eliminated.
 658 0000 80B4     		push	{r7}
 659              		.cfi_def_cfa_offset 4
 660              		.cfi_offset 7, -4
 661 0002 85B0     		sub	sp, sp, #20
 662              		.cfi_def_cfa_offset 24
 663 0004 00AF     		add	r7, sp, #0
 664              		.cfi_def_cfa_register 7
 665 0006 7860     		str	r0, [r7, #4]
 666 0008 3960     		str	r1, [r7]
 160:voltages.c    ****    int32 t;
 161:voltages.c    ****    
 162:voltages.c    ****    t=*p; 
 667              		.loc 1 162 0
 668 000a 7B68     		ldr	r3, [r7, #4]
 669 000c 1B68     		ldr	r3, [r3]
 670 000e FB60     		str	r3, [r7, #12]
 163:voltages.c    ****    *p=*q; 
 671              		.loc 1 163 0
 672 0010 3B68     		ldr	r3, [r7]
 673 0012 1A68     		ldr	r2, [r3]
 674 0014 7B68     		ldr	r3, [r7, #4]
 675 0016 1A60     		str	r2, [r3]
 164:voltages.c    ****    *q=t;
 676              		.loc 1 164 0
 677 0018 3B68     		ldr	r3, [r7]
 678 001a FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 16


 679 001c 1A60     		str	r2, [r3]
 165:voltages.c    **** }
 680              		.loc 1 165 0
 681 001e 00BF     		nop
 682 0020 1437     		adds	r7, r7, #20
 683              		.cfi_def_cfa_offset 4
 684 0022 BD46     		mov	sp, r7
 685              		.cfi_def_cfa_register 13
 686              		@ sp needed
 687 0024 80BC     		pop	{r7}
 688              		.cfi_restore 7
 689              		.cfi_def_cfa_offset 0
 690 0026 7047     		bx	lr
 691              		.cfi_endproc
 692              	.LFE68:
 693              		.size	swap32, .-swap32
 694              		.global	__aeabi_i2d
 695              		.global	__aeabi_d2iz
 696              		.section	.text.find_median32,"ax",%progbits
 697              		.align	2
 698              		.global	find_median32
 699              		.thumb
 700              		.thumb_func
 701              		.type	find_median32, %function
 702              	find_median32:
 703              	.LFB69:
 166:voltages.c    **** 
 167:voltages.c    **** // Function to calculate the median of the array, after array is sorted
 168:voltages.c    **** int32 find_median32(int32 array[] , int32 n)
 169:voltages.c    **** {
 704              		.loc 1 169 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 16
 707              		@ frame_needed = 1, uses_anonymous_args = 0
 708 0000 90B5     		push	{r4, r7, lr}
 709              		.cfi_def_cfa_offset 12
 710              		.cfi_offset 4, -12
 711              		.cfi_offset 7, -8
 712              		.cfi_offset 14, -4
 713 0002 85B0     		sub	sp, sp, #20
 714              		.cfi_def_cfa_offset 32
 715 0004 00AF     		add	r7, sp, #0
 716              		.cfi_def_cfa_register 7
 717 0006 7860     		str	r0, [r7, #4]
 718 0008 3960     		str	r1, [r7]
 170:voltages.c    ****     int32 median=0;
 719              		.loc 1 170 0
 720 000a 0023     		movs	r3, #0
 721 000c FB60     		str	r3, [r7, #12]
 171:voltages.c    ****     sort32(array,n);
 722              		.loc 1 171 0
 723 000e 3968     		ldr	r1, [r7]
 724 0010 7868     		ldr	r0, [r7, #4]
 725 0012 FFF7FEFF 		bl	sort32
 172:voltages.c    ****     
 173:voltages.c    ****     // If number of elements are even
 174:voltages.c    ****     if(n%2 == 0)
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 17


 726              		.loc 1 174 0
 727 0016 3B68     		ldr	r3, [r7]
 728 0018 03F00103 		and	r3, r3, #1
 729 001c 002B     		cmp	r3, #0
 730 001e 23D1     		bne	.L29
 175:voltages.c    ****         // Median is the average of the  two middle sorted numbers
 176:voltages.c    ****         median = (array[(n-1)/2] + array[n/2])/2.0;
 731              		.loc 1 176 0
 732 0020 3B68     		ldr	r3, [r7]
 733 0022 013B     		subs	r3, r3, #1
 734 0024 DA0F     		lsrs	r2, r3, #31
 735 0026 1344     		add	r3, r3, r2
 736 0028 5B10     		asrs	r3, r3, #1
 737 002a 9B00     		lsls	r3, r3, #2
 738 002c 7A68     		ldr	r2, [r7, #4]
 739 002e 1344     		add	r3, r3, r2
 740 0030 1A68     		ldr	r2, [r3]
 741 0032 3B68     		ldr	r3, [r7]
 742 0034 D90F     		lsrs	r1, r3, #31
 743 0036 0B44     		add	r3, r3, r1
 744 0038 5B10     		asrs	r3, r3, #1
 745 003a 9B00     		lsls	r3, r3, #2
 746 003c 7968     		ldr	r1, [r7, #4]
 747 003e 0B44     		add	r3, r3, r1
 748 0040 1B68     		ldr	r3, [r3]
 749 0042 1344     		add	r3, r3, r2
 750 0044 1846     		mov	r0, r3
 751 0046 FFF7FEFF 		bl	__aeabi_i2d
 752 004a 4FF00002 		mov	r2, #0
 753 004e 4FF08043 		mov	r3, #1073741824
 754 0052 FFF7FEFF 		bl	__aeabi_ddiv
 755 0056 0346     		mov	r3, r0
 756 0058 0C46     		mov	r4, r1
 757 005a 1846     		mov	r0, r3
 758 005c 2146     		mov	r1, r4
 759 005e FFF7FEFF 		bl	__aeabi_d2iz
 760 0062 0346     		mov	r3, r0
 761 0064 FB60     		str	r3, [r7, #12]
 762 0066 08E0     		b	.L30
 763              	.L29:
 177:voltages.c    ****     // If number of elements are odd
 178:voltages.c    ****     else
 179:voltages.c    ****         // Median is the the middle sorted number. 
 180:voltages.c    ****         median = array[n/2];
 764              		.loc 1 180 0
 765 0068 3B68     		ldr	r3, [r7]
 766 006a DA0F     		lsrs	r2, r3, #31
 767 006c 1344     		add	r3, r3, r2
 768 006e 5B10     		asrs	r3, r3, #1
 769 0070 9B00     		lsls	r3, r3, #2
 770 0072 7A68     		ldr	r2, [r7, #4]
 771 0074 1344     		add	r3, r3, r2
 772 0076 1B68     		ldr	r3, [r3]
 773 0078 FB60     		str	r3, [r7, #12]
 774              	.L30:
 181:voltages.c    ****     
 182:voltages.c    ****     return median;
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 18


 775              		.loc 1 182 0
 776 007a FB68     		ldr	r3, [r7, #12]
 183:voltages.c    **** }
 777              		.loc 1 183 0
 778 007c 1846     		mov	r0, r3
 779 007e 1437     		adds	r7, r7, #20
 780              		.cfi_def_cfa_offset 12
 781 0080 BD46     		mov	sp, r7
 782              		.cfi_def_cfa_register 13
 783              		@ sp needed
 784 0082 90BD     		pop	{r4, r7, pc}
 785              		.cfi_endproc
 786              	.LFE69:
 787              		.size	find_median32, .-find_median32
 788              		.section	.rodata
 789              		.align	2
 790              	.LC0:
 791 0000 54455354 		.ascii	"TEST_ANALOG_VOLTAGES\000"
 791      5F414E41 
 791      4C4F475F 
 791      564F4C54 
 791      41474553 
 792 0015 000000   		.align	2
 793              	.LC1:
 794 0018 56424154 		.ascii	"VBAT=%.3f,VSOL=%.3f,CHRG=%.3f\000"
 794      3D252E33 
 794      662C5653 
 794      4F4C3D25 
 794      2E33662C 
 795              		.section	.text.voltages_test,"ax",%progbits
 796              		.align	2
 797              		.global	voltages_test
 798              		.thumb
 799              		.thumb_func
 800              		.type	voltages_test, %function
 801              	voltages_test:
 802              	.LFB70:
 184:voltages.c    **** 
 185:voltages.c    **** // Test the voltage readings
 186:voltages.c    **** test_t voltages_test(){
 803              		.loc 1 186 0
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 424
 806              		@ frame_needed = 1, uses_anonymous_args = 0
 807 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 808              		.cfi_def_cfa_offset 24
 809              		.cfi_offset 4, -24
 810              		.cfi_offset 5, -20
 811              		.cfi_offset 7, -16
 812              		.cfi_offset 8, -12
 813              		.cfi_offset 9, -8
 814              		.cfi_offset 14, -4
 815 0004 F0B0     		sub	sp, sp, #448
 816              		.cfi_def_cfa_offset 472
 817 0006 06AF     		add	r7, sp, #24
 818              		.cfi_def_cfa 7, 448
 819 0008 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 19


 820 000a 1860     		str	r0, [r3]
 187:voltages.c    ****     // Create variable test of the data structure test_t
 188:voltages.c    ****     test_t test;
 189:voltages.c    ****     test.status = 0;
 821              		.loc 1 189 0
 822 000c 07F12403 		add	r3, r7, #36
 823 0010 0022     		movs	r2, #0
 824 0012 83F88020 		strb	r2, [r3, #128]
 190:voltages.c    ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_ANALOG_VOLTAGES");
 825              		.loc 1 190 0
 826 0016 07F12403 		add	r3, r7, #36
 827 001a 264A     		ldr	r2, .L34
 828 001c 1C46     		mov	r4, r3
 829 001e 1546     		mov	r5, r2
 830 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 831 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 832 0024 95E80300 		ldmia	r5, {r0, r1}
 833 0028 2060     		str	r0, [r4]
 834 002a 0434     		adds	r4, r4, #4
 835 002c 2170     		strb	r1, [r4]
 191:voltages.c    ****     
 192:voltages.c    ****     voltage_t voltage = voltage_take_readings();
 836              		.loc 1 192 0
 837 002e 07F10803 		add	r3, r7, #8
 838 0032 1846     		mov	r0, r3
 839 0034 FFF7FEFF 		bl	voltage_take_readings
 193:voltages.c    ****     
 194:voltages.c    ****     //do some checks here if you want the test to meet some voltage requirement
 195:voltages.c    ****     
 196:voltages.c    ****     snprintf(test.reason,sizeof(test.reason),"VBAT=%.3f,VSOL=%.3f,CHRG=%.3f",
 197:voltages.c    ****             voltage.voltage_battery,
 840              		.loc 1 197 0
 841 0038 07F10803 		add	r3, r7, #8
 842 003c 1B68     		ldr	r3, [r3]	@ float
 196:voltages.c    ****             voltage.voltage_battery,
 843              		.loc 1 196 0
 844 003e 1846     		mov	r0, r3
 845 0040 FFF7FEFF 		bl	__aeabi_f2d
 846 0044 0446     		mov	r4, r0
 847 0046 0D46     		mov	r5, r1
 198:voltages.c    ****             voltage.voltage_solar,
 848              		.loc 1 198 0
 849 0048 07F10803 		add	r3, r7, #8
 850 004c 5B68     		ldr	r3, [r3, #4]	@ float
 196:voltages.c    ****             voltage.voltage_battery,
 851              		.loc 1 196 0
 852 004e 1846     		mov	r0, r3
 853 0050 FFF7FEFF 		bl	__aeabi_f2d
 854 0054 8046     		mov	r8, r0
 855 0056 8946     		mov	r9, r1
 199:voltages.c    ****             voltage.voltage_charge_current);
 856              		.loc 1 199 0
 857 0058 07F10803 		add	r3, r7, #8
 858 005c 9B68     		ldr	r3, [r3, #8]	@ float
 196:voltages.c    ****             voltage.voltage_battery,
 859              		.loc 1 196 0
 860 005e 1846     		mov	r0, r3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 20


 861 0060 FFF7FEFF 		bl	__aeabi_f2d
 862 0064 0246     		mov	r2, r0
 863 0066 0B46     		mov	r3, r1
 864 0068 07F12401 		add	r1, r7, #36
 865 006c 01F18100 		add	r0, r1, #129
 866 0070 CDE90423 		strd	r2, [sp, #16]
 867 0074 CDE90289 		strd	r8, [sp, #8]
 868 0078 CDE90045 		strd	r4, [sp]
 869 007c 0E4A     		ldr	r2, .L34+4
 870 007e 4FF48071 		mov	r1, #256
 871 0082 FFF7FEFF 		bl	snprintf
 200:voltages.c    ****     
 201:voltages.c    ****     test.status = 1;
 872              		.loc 1 201 0
 873 0086 07F12403 		add	r3, r7, #36
 874 008a 0122     		movs	r2, #1
 875 008c 83F88020 		strb	r2, [r3, #128]
 202:voltages.c    ****     
 203:voltages.c    ****     return test;
 876              		.loc 1 203 0
 877 0090 3B1D     		adds	r3, r7, #4
 878 0092 1A68     		ldr	r2, [r3]
 879 0094 07F12403 		add	r3, r7, #36
 880 0098 1046     		mov	r0, r2
 881 009a 1946     		mov	r1, r3
 882 009c 40F28113 		movw	r3, #385
 883 00a0 1A46     		mov	r2, r3
 884 00a2 FFF7FEFF 		bl	memcpy
 204:voltages.c    **** }
 885              		.loc 1 204 0
 886 00a6 3B1D     		adds	r3, r7, #4
 887 00a8 1868     		ldr	r0, [r3]
 888 00aa 07F5D477 		add	r7, r7, #424
 889              		.cfi_def_cfa_offset 24
 890 00ae BD46     		mov	sp, r7
 891              		.cfi_def_cfa_register 13
 892              		@ sp needed
 893 00b0 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 894              	.L35:
 895              		.align	2
 896              	.L34:
 897 00b4 00000000 		.word	.LC0
 898 00b8 18000000 		.word	.LC1
 899              		.cfi_endproc
 900              	.LFE70:
 901              		.size	voltages_test, .-voltages_test
 902              		.section	.rodata
 903 0036 0000     		.align	2
 904              	.LC2:
 905 0038 54455354 		.ascii	"TEST_PRESSURE_SENSOR\000"
 905      5F505245 
 905      53535552 
 905      455F5345 
 905      4E534F52 
 906 004d 000000   		.align	2
 907              	.LC3:
 908 0050 50524553 		.ascii	"PRESSURE=%.3f,PRES_CURRENT=%.3f,PRES_DEPTH=%.3f\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 21


 908      53555245 
 908      3D252E33 
 908      662C5052 
 908      45535F43 
 909              		.global	__aeabi_fcmpeq
 910              		.section	.text.pressure_sensor_test,"ax",%progbits
 911              		.align	2
 912              		.global	pressure_sensor_test
 913              		.thumb
 914              		.thumb_func
 915              		.type	pressure_sensor_test, %function
 916              	pressure_sensor_test:
 917              	.LFB71:
 205:voltages.c    **** 
 206:voltages.c    **** // Test the pressure sensor readings
 207:voltages.c    **** test_t pressure_sensor_test(){
 918              		.loc 1 207 0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 416
 921              		@ frame_needed = 1, uses_anonymous_args = 0
 922 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 923              		.cfi_def_cfa_offset 24
 924              		.cfi_offset 4, -24
 925              		.cfi_offset 5, -20
 926              		.cfi_offset 7, -16
 927              		.cfi_offset 8, -12
 928              		.cfi_offset 9, -8
 929              		.cfi_offset 14, -4
 930 0004 EEB0     		sub	sp, sp, #440
 931              		.cfi_def_cfa_offset 464
 932 0006 06AF     		add	r7, sp, #24
 933              		.cfi_def_cfa 7, 440
 934 0008 3B1D     		adds	r3, r7, #4
 935 000a 1860     		str	r0, [r3]
 208:voltages.c    ****     // Create variable test of the data structure test_t
 209:voltages.c    ****     test_t test;
 210:voltages.c    ****     test.status = 0;
 936              		.loc 1 210 0
 937 000c 07F11C03 		add	r3, r7, #28
 938 0010 0022     		movs	r2, #0
 939 0012 83F88020 		strb	r2, [r3, #128]
 211:voltages.c    ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_PRESSURE_SENSOR");
 940              		.loc 1 211 0
 941 0016 07F11C03 		add	r3, r7, #28
 942 001a 374A     		ldr	r2, .L41
 943 001c 1C46     		mov	r4, r3
 944 001e 1546     		mov	r5, r2
 945 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 946 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 947 0024 95E80300 		ldmia	r5, {r0, r1}
 948 0028 2060     		str	r0, [r4]
 949 002a 0434     		adds	r4, r4, #4
 950 002c 2170     		strb	r1, [r4]
 212:voltages.c    ****     
 213:voltages.c    ****     pressure_t pressure = pressure_sensor_readings();
 951              		.loc 1 213 0
 952 002e 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 22


 953 0032 1846     		mov	r0, r3
 954 0034 FFF7FEFF 		bl	pressure_sensor_readings
 214:voltages.c    ****     
 215:voltages.c    ****     //do some checks here if you want the test to meet some voltage requirement
 216:voltages.c    ****     
 217:voltages.c    ****     snprintf(test.reason,sizeof(test.reason),"PRESSURE=%.3f,PRES_CURRENT=%.3f,PRES_DEPTH=%.3f",
 218:voltages.c    ****             pressure.pressure_voltage_on,
 955              		.loc 1 218 0
 956 0038 07F10C03 		add	r3, r7, #12
 957 003c 1B68     		ldr	r3, [r3]	@ float
 217:voltages.c    ****             pressure.pressure_voltage_on,
 958              		.loc 1 217 0
 959 003e 1846     		mov	r0, r3
 960 0040 FFF7FEFF 		bl	__aeabi_f2d
 961 0044 0446     		mov	r4, r0
 962 0046 0D46     		mov	r5, r1
 219:voltages.c    ****             pressure.pressure_current,
 963              		.loc 1 219 0
 964 0048 07F10C03 		add	r3, r7, #12
 965 004c 9B68     		ldr	r3, [r3, #8]	@ float
 217:voltages.c    ****             pressure.pressure_voltage_on,
 966              		.loc 1 217 0
 967 004e 1846     		mov	r0, r3
 968 0050 FFF7FEFF 		bl	__aeabi_f2d
 969 0054 8046     		mov	r8, r0
 970 0056 8946     		mov	r9, r1
 220:voltages.c    ****             pressure.pressure_depth);
 971              		.loc 1 220 0
 972 0058 07F10C03 		add	r3, r7, #12
 973 005c DB68     		ldr	r3, [r3, #12]	@ float
 217:voltages.c    ****             pressure.pressure_voltage_on,
 974              		.loc 1 217 0
 975 005e 1846     		mov	r0, r3
 976 0060 FFF7FEFF 		bl	__aeabi_f2d
 977 0064 0246     		mov	r2, r0
 978 0066 0B46     		mov	r3, r1
 979 0068 07F11C01 		add	r1, r7, #28
 980 006c 01F18100 		add	r0, r1, #129
 981 0070 CDE90423 		strd	r2, [sp, #16]
 982 0074 CDE90289 		strd	r8, [sp, #8]
 983 0078 CDE90045 		strd	r4, [sp]
 984 007c 1F4A     		ldr	r2, .L41+4
 985 007e 4FF48071 		mov	r1, #256
 986 0082 FFF7FEFF 		bl	snprintf
 221:voltages.c    ****     pressure.pressure_voltage_on = floorf(pressure.pressure_voltage_on * 100) / 100;
 987              		.loc 1 221 0
 988 0086 07F10C03 		add	r3, r7, #12
 989 008a 1B68     		ldr	r3, [r3]	@ float
 990 008c 1C49     		ldr	r1, .L41+8
 991 008e 1846     		mov	r0, r3
 992 0090 FFF7FEFF 		bl	__aeabi_fmul
 993 0094 0346     		mov	r3, r0
 994 0096 1846     		mov	r0, r3
 995 0098 FFF7FEFF 		bl	floorf
 996 009c 0346     		mov	r3, r0
 997 009e 1849     		ldr	r1, .L41+8
 998 00a0 1846     		mov	r0, r3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 23


 999 00a2 FFF7FEFF 		bl	__aeabi_fdiv
 1000 00a6 0346     		mov	r3, r0
 1001 00a8 1A46     		mov	r2, r3
 1002 00aa 07F10C03 		add	r3, r7, #12
 1003 00ae 1A60     		str	r2, [r3]	@ float
 222:voltages.c    ****     if (pressure.pressure_voltage_off != pressure.pressure_voltage_on) {
 1004              		.loc 1 222 0
 1005 00b0 07F10C03 		add	r3, r7, #12
 1006 00b4 5A68     		ldr	r2, [r3, #4]	@ float
 1007 00b6 07F10C03 		add	r3, r7, #12
 1008 00ba 1B68     		ldr	r3, [r3]	@ float
 1009 00bc 1946     		mov	r1, r3
 1010 00be 1046     		mov	r0, r2
 1011 00c0 FFF7FEFF 		bl	__aeabi_fcmpeq
 1012 00c4 0346     		mov	r3, r0
 1013 00c6 002B     		cmp	r3, #0
 1014 00c8 04D1     		bne	.L37
 223:voltages.c    ****         test.status = 1;
 1015              		.loc 1 223 0
 1016 00ca 07F11C03 		add	r3, r7, #28
 1017 00ce 0122     		movs	r2, #1
 1018 00d0 83F88020 		strb	r2, [r3, #128]
 1019              	.L37:
 224:voltages.c    ****     }
 225:voltages.c    ****     
 226:voltages.c    ****     return test;
 1020              		.loc 1 226 0
 1021 00d4 3B1D     		adds	r3, r7, #4
 1022 00d6 1A68     		ldr	r2, [r3]
 1023 00d8 07F11C03 		add	r3, r7, #28
 1024 00dc 1046     		mov	r0, r2
 1025 00de 1946     		mov	r1, r3
 1026 00e0 40F28113 		movw	r3, #385
 1027 00e4 1A46     		mov	r2, r3
 1028 00e6 FFF7FEFF 		bl	memcpy
 227:voltages.c    **** }
 1029              		.loc 1 227 0
 1030 00ea 3B1D     		adds	r3, r7, #4
 1031 00ec 1868     		ldr	r0, [r3]
 1032 00ee 07F5D077 		add	r7, r7, #416
 1033              		.cfi_def_cfa_offset 24
 1034 00f2 BD46     		mov	sp, r7
 1035              		.cfi_def_cfa_register 13
 1036              		@ sp needed
 1037 00f4 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 1038              	.L42:
 1039              		.align	2
 1040              	.L41:
 1041 00f8 38000000 		.word	.LC2
 1042 00fc 50000000 		.word	.LC3
 1043 0100 0000C842 		.word	1120403456
 1044              		.cfi_endproc
 1045              	.LFE71:
 1046              		.size	pressure_sensor_test, .-pressure_sensor_test
 1047              		.text
 1048              	.Letext0:
 1049              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 24


 1050              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1051              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1052              		.file 5 "testing.h"
 1053              		.file 6 "voltages.h"
 1054              		.file 7 "data.h"
 1055              		.file 8 "modem.h"
 1056              		.file 9 "notoriOS.h"
 1057              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 1058              		.section	.debug_info,"",%progbits
 1059              	.Ldebug_info0:
 1060 0000 0B080000 		.4byte	0x80b
 1061 0004 0400     		.2byte	0x4
 1062 0006 00000000 		.4byte	.Ldebug_abbrev0
 1063 000a 04       		.byte	0x4
 1064 000b 01       		.uleb128 0x1
 1065 000c AE000000 		.4byte	.LASF105
 1066 0010 0C       		.byte	0xc
 1067 0011 48010000 		.4byte	.LASF106
 1068 0015 73020000 		.4byte	.LASF107
 1069 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1070 001d 00000000 		.4byte	0
 1071 0021 00000000 		.4byte	.Ldebug_line0
 1072 0025 02       		.uleb128 0x2
 1073 0026 01       		.byte	0x1
 1074 0027 06       		.byte	0x6
 1075 0028 51030000 		.4byte	.LASF0
 1076 002c 02       		.uleb128 0x2
 1077 002d 01       		.byte	0x1
 1078 002e 08       		.byte	0x8
 1079 002f EC020000 		.4byte	.LASF1
 1080 0033 02       		.uleb128 0x2
 1081 0034 02       		.byte	0x2
 1082 0035 05       		.byte	0x5
 1083 0036 86000000 		.4byte	.LASF2
 1084 003a 02       		.uleb128 0x2
 1085 003b 02       		.byte	0x2
 1086 003c 07       		.byte	0x7
 1087 003d F4030000 		.4byte	.LASF3
 1088 0041 03       		.uleb128 0x3
 1089 0042 34050000 		.4byte	.LASF9
 1090 0046 02       		.byte	0x2
 1091 0047 3F       		.byte	0x3f
 1092 0048 4C000000 		.4byte	0x4c
 1093 004c 02       		.uleb128 0x2
 1094 004d 04       		.byte	0x4
 1095 004e 05       		.byte	0x5
 1096 004f 33020000 		.4byte	.LASF4
 1097 0053 02       		.uleb128 0x2
 1098 0054 04       		.byte	0x4
 1099 0055 07       		.byte	0x7
 1100 0056 EE040000 		.4byte	.LASF5
 1101 005a 02       		.uleb128 0x2
 1102 005b 08       		.byte	0x8
 1103 005c 05       		.byte	0x5
 1104 005d 01020000 		.4byte	.LASF6
 1105 0061 02       		.uleb128 0x2
 1106 0062 08       		.byte	0x8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 25


 1107 0063 07       		.byte	0x7
 1108 0064 5D030000 		.4byte	.LASF7
 1109 0068 04       		.uleb128 0x4
 1110 0069 04       		.byte	0x4
 1111 006a 05       		.byte	0x5
 1112 006b 696E7400 		.ascii	"int\000"
 1113 006f 02       		.uleb128 0x2
 1114 0070 04       		.byte	0x4
 1115 0071 07       		.byte	0x7
 1116 0072 92030000 		.4byte	.LASF8
 1117 0076 03       		.uleb128 0x3
 1118 0077 76040000 		.4byte	.LASF10
 1119 007b 03       		.byte	0x3
 1120 007c 2C       		.byte	0x2c
 1121 007d 41000000 		.4byte	0x41
 1122 0081 05       		.uleb128 0x5
 1123 0082 9A010000 		.4byte	.LASF11
 1124 0086 04       		.byte	0x4
 1125 0087 9201     		.2byte	0x192
 1126 0089 2C000000 		.4byte	0x2c
 1127 008d 05       		.uleb128 0x5
 1128 008e DC040000 		.4byte	.LASF12
 1129 0092 04       		.byte	0x4
 1130 0093 9301     		.2byte	0x193
 1131 0095 3A000000 		.4byte	0x3a
 1132 0099 05       		.uleb128 0x5
 1133 009a 0F020000 		.4byte	.LASF13
 1134 009e 04       		.byte	0x4
 1135 009f 9601     		.2byte	0x196
 1136 00a1 33000000 		.4byte	0x33
 1137 00a5 05       		.uleb128 0x5
 1138 00a6 FB010000 		.4byte	.LASF14
 1139 00aa 04       		.byte	0x4
 1140 00ab 9701     		.2byte	0x197
 1141 00ad 4C000000 		.4byte	0x4c
 1142 00b1 02       		.uleb128 0x2
 1143 00b2 04       		.byte	0x4
 1144 00b3 04       		.byte	0x4
 1145 00b4 E7010000 		.4byte	.LASF15
 1146 00b8 02       		.uleb128 0x2
 1147 00b9 08       		.byte	0x8
 1148 00ba 04       		.byte	0x4
 1149 00bb 00050000 		.4byte	.LASF16
 1150 00bf 02       		.uleb128 0x2
 1151 00c0 01       		.byte	0x1
 1152 00c1 08       		.byte	0x8
 1153 00c2 27020000 		.4byte	.LASF17
 1154 00c6 02       		.uleb128 0x2
 1155 00c7 08       		.byte	0x8
 1156 00c8 04       		.byte	0x4
 1157 00c9 E0020000 		.4byte	.LASF18
 1158 00cd 02       		.uleb128 0x2
 1159 00ce 04       		.byte	0x4
 1160 00cf 07       		.byte	0x7
 1161 00d0 9D000000 		.4byte	.LASF19
 1162 00d4 06       		.uleb128 0x6
 1163 00d5 BF000000 		.4byte	0xbf
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 26


 1164 00d9 E4000000 		.4byte	0xe4
 1165 00dd 07       		.uleb128 0x7
 1166 00de CD000000 		.4byte	0xcd
 1167 00e2 17       		.byte	0x17
 1168 00e3 00       		.byte	0
 1169 00e4 08       		.uleb128 0x8
 1170 00e5 8101     		.2byte	0x181
 1171 00e7 05       		.byte	0x5
 1172 00e8 0A       		.byte	0xa
 1173 00e9 12010000 		.4byte	0x112
 1174 00ed 09       		.uleb128 0x9
 1175 00ee 5D050000 		.4byte	.LASF20
 1176 00f2 05       		.byte	0x5
 1177 00f3 0C       		.byte	0xc
 1178 00f4 12010000 		.4byte	0x112
 1179 00f8 00       		.byte	0
 1180 00f9 09       		.uleb128 0x9
 1181 00fa 1F040000 		.4byte	.LASF21
 1182 00fe 05       		.byte	0x5
 1183 00ff 0D       		.byte	0xd
 1184 0100 81000000 		.4byte	0x81
 1185 0104 80       		.byte	0x80
 1186 0105 09       		.uleb128 0x9
 1187 0106 2C020000 		.4byte	.LASF22
 1188 010a 05       		.byte	0x5
 1189 010b 0F       		.byte	0xf
 1190 010c 22010000 		.4byte	0x122
 1191 0110 81       		.byte	0x81
 1192 0111 00       		.byte	0
 1193 0112 06       		.uleb128 0x6
 1194 0113 BF000000 		.4byte	0xbf
 1195 0117 22010000 		.4byte	0x122
 1196 011b 07       		.uleb128 0x7
 1197 011c CD000000 		.4byte	0xcd
 1198 0120 7F       		.byte	0x7f
 1199 0121 00       		.byte	0
 1200 0122 06       		.uleb128 0x6
 1201 0123 BF000000 		.4byte	0xbf
 1202 0127 32010000 		.4byte	0x132
 1203 012b 07       		.uleb128 0x7
 1204 012c CD000000 		.4byte	0xcd
 1205 0130 FF       		.byte	0xff
 1206 0131 00       		.byte	0
 1207 0132 03       		.uleb128 0x3
 1208 0133 56050000 		.4byte	.LASF23
 1209 0137 05       		.byte	0x5
 1210 0138 10       		.byte	0x10
 1211 0139 E4000000 		.4byte	0xe4
 1212 013d 0A       		.uleb128 0xa
 1213 013e 1C       		.byte	0x1c
 1214 013f 06       		.byte	0x6
 1215 0140 14       		.byte	0x14
 1216 0141 9A010000 		.4byte	0x19a
 1217 0145 09       		.uleb128 0x9
 1218 0146 78010000 		.4byte	.LASF24
 1219 014a 06       		.byte	0x6
 1220 014b 15       		.byte	0x15
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 27


 1221 014c B1000000 		.4byte	0xb1
 1222 0150 00       		.byte	0
 1223 0151 09       		.uleb128 0x9
 1224 0152 1D000000 		.4byte	.LASF25
 1225 0156 06       		.byte	0x6
 1226 0157 16       		.byte	0x16
 1227 0158 B1000000 		.4byte	0xb1
 1228 015c 04       		.byte	0x4
 1229 015d 09       		.uleb128 0x9
 1230 015e AE050000 		.4byte	.LASF26
 1231 0162 06       		.byte	0x6
 1232 0163 17       		.byte	0x17
 1233 0164 B1000000 		.4byte	0xb1
 1234 0168 08       		.byte	0x8
 1235 0169 09       		.uleb128 0x9
 1236 016a 53010000 		.4byte	.LASF27
 1237 016e 06       		.byte	0x6
 1238 016f 18       		.byte	0x18
 1239 0170 B1000000 		.4byte	0xb1
 1240 0174 0C       		.byte	0xc
 1241 0175 09       		.uleb128 0x9
 1242 0176 15020000 		.4byte	.LASF28
 1243 017a 06       		.byte	0x6
 1244 017b 19       		.byte	0x19
 1245 017c B1000000 		.4byte	0xb1
 1246 0180 10       		.byte	0x10
 1247 0181 09       		.uleb128 0x9
 1248 0182 98040000 		.4byte	.LASF29
 1249 0186 06       		.byte	0x6
 1250 0187 1A       		.byte	0x1a
 1251 0188 B1000000 		.4byte	0xb1
 1252 018c 14       		.byte	0x14
 1253 018d 09       		.uleb128 0x9
 1254 018e 0F030000 		.4byte	.LASF30
 1255 0192 06       		.byte	0x6
 1256 0193 1B       		.byte	0x1b
 1257 0194 81000000 		.4byte	0x81
 1258 0198 18       		.byte	0x18
 1259 0199 00       		.byte	0
 1260 019a 03       		.uleb128 0x3
 1261 019b 6C040000 		.4byte	.LASF31
 1262 019f 06       		.byte	0x6
 1263 01a0 1C       		.byte	0x1c
 1264 01a1 3D010000 		.4byte	0x13d
 1265 01a5 0A       		.uleb128 0xa
 1266 01a6 10       		.byte	0x10
 1267 01a7 06       		.byte	0x6
 1268 01a8 1E       		.byte	0x1e
 1269 01a9 DE010000 		.4byte	0x1de
 1270 01ad 09       		.uleb128 0x9
 1271 01ae 5F020000 		.4byte	.LASF32
 1272 01b2 06       		.byte	0x6
 1273 01b3 1F       		.byte	0x1f
 1274 01b4 B1000000 		.4byte	0xb1
 1275 01b8 00       		.byte	0
 1276 01b9 09       		.uleb128 0x9
 1277 01ba 26040000 		.4byte	.LASF33
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 28


 1278 01be 06       		.byte	0x6
 1279 01bf 20       		.byte	0x20
 1280 01c0 B1000000 		.4byte	0xb1
 1281 01c4 04       		.byte	0x4
 1282 01c5 09       		.uleb128 0x9
 1283 01c6 D0050000 		.4byte	.LASF34
 1284 01ca 06       		.byte	0x6
 1285 01cb 21       		.byte	0x21
 1286 01cc B1000000 		.4byte	0xb1
 1287 01d0 08       		.byte	0x8
 1288 01d1 09       		.uleb128 0x9
 1289 01d2 B4020000 		.4byte	.LASF35
 1290 01d6 06       		.byte	0x6
 1291 01d7 22       		.byte	0x22
 1292 01d8 B1000000 		.4byte	0xb1
 1293 01dc 0C       		.byte	0xc
 1294 01dd 00       		.byte	0
 1295 01de 03       		.uleb128 0x3
 1296 01df D5030000 		.4byte	.LASF36
 1297 01e3 06       		.byte	0x6
 1298 01e4 23       		.byte	0x23
 1299 01e5 A5010000 		.4byte	0x1a5
 1300 01e9 0A       		.uleb128 0xa
 1301 01ea 2C       		.byte	0x2c
 1302 01eb 07       		.byte	0x7
 1303 01ec 14       		.byte	0x14
 1304 01ed 16020000 		.4byte	0x216
 1305 01f1 0B       		.uleb128 0xb
 1306 01f2 6B657900 		.ascii	"key\000"
 1307 01f6 07       		.byte	0x7
 1308 01f7 15       		.byte	0x15
 1309 01f8 16020000 		.4byte	0x216
 1310 01fc 00       		.byte	0
 1311 01fd 09       		.uleb128 0x9
 1312 01fe 72010000 		.4byte	.LASF37
 1313 0202 07       		.byte	0x7
 1314 0203 16       		.byte	0x16
 1315 0204 16020000 		.4byte	0x216
 1316 0208 14       		.byte	0x14
 1317 0209 09       		.uleb128 0x9
 1318 020a AE010000 		.4byte	.LASF38
 1319 020e 07       		.byte	0x7
 1320 020f 17       		.byte	0x17
 1321 0210 A5000000 		.4byte	0xa5
 1322 0214 28       		.byte	0x28
 1323 0215 00       		.byte	0
 1324 0216 06       		.uleb128 0x6
 1325 0217 BF000000 		.4byte	0xbf
 1326 021b 26020000 		.4byte	0x226
 1327 021f 07       		.uleb128 0x7
 1328 0220 CD000000 		.4byte	0xcd
 1329 0224 13       		.byte	0x13
 1330 0225 00       		.byte	0
 1331 0226 03       		.uleb128 0x3
 1332 0227 9F030000 		.4byte	.LASF39
 1333 022b 07       		.byte	0x7
 1334 022c 19       		.byte	0x19
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 29


 1335 022d E9010000 		.4byte	0x1e9
 1336 0231 0A       		.uleb128 0xa
 1337 0232 3C       		.byte	0x3c
 1338 0233 08       		.byte	0x8
 1339 0234 37       		.byte	0x37
 1340 0235 5E020000 		.4byte	0x25e
 1341 0239 09       		.uleb128 0x9
 1342 023a 16000000 		.4byte	.LASF40
 1343 023e 08       		.byte	0x8
 1344 023f 38       		.byte	0x38
 1345 0240 16020000 		.4byte	0x216
 1346 0244 00       		.byte	0
 1347 0245 09       		.uleb128 0x9
 1348 0246 00000000 		.4byte	.LASF41
 1349 024a 08       		.byte	0x8
 1350 024b 39       		.byte	0x39
 1351 024c 16020000 		.4byte	0x216
 1352 0250 14       		.byte	0x14
 1353 0251 09       		.uleb128 0x9
 1354 0252 67040000 		.4byte	.LASF42
 1355 0256 08       		.byte	0x8
 1356 0257 3A       		.byte	0x3a
 1357 0258 16020000 		.4byte	0x216
 1358 025c 28       		.byte	0x28
 1359 025d 00       		.byte	0
 1360 025e 03       		.uleb128 0x3
 1361 025f 19050000 		.4byte	.LASF43
 1362 0263 08       		.byte	0x8
 1363 0264 3C       		.byte	0x3c
 1364 0265 31020000 		.4byte	0x231
 1365 0269 0A       		.uleb128 0xa
 1366 026a 20       		.byte	0x20
 1367 026b 08       		.byte	0x8
 1368 026c 3E       		.byte	0x3e
 1369 026d D2020000 		.4byte	0x2d2
 1370 0271 09       		.uleb128 0x9
 1371 0272 AB030000 		.4byte	.LASF44
 1372 0276 08       		.byte	0x8
 1373 0277 3F       		.byte	0x3f
 1374 0278 68000000 		.4byte	0x68
 1375 027c 00       		.byte	0
 1376 027d 0B       		.uleb128 0xb
 1377 027e 62657200 		.ascii	"ber\000"
 1378 0282 08       		.byte	0x8
 1379 0283 40       		.byte	0x40
 1380 0284 68000000 		.4byte	0x68
 1381 0288 04       		.byte	0x4
 1382 0289 09       		.uleb128 0x9
 1383 028a A9010000 		.4byte	.LASF45
 1384 028e 08       		.byte	0x8
 1385 028f 41       		.byte	0x41
 1386 0290 68000000 		.4byte	0x68
 1387 0294 08       		.byte	0x8
 1388 0295 09       		.uleb128 0x9
 1389 0296 6D010000 		.4byte	.LASF46
 1390 029a 08       		.byte	0x8
 1391 029b 42       		.byte	0x42
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 30


 1392 029c 68000000 		.4byte	0x68
 1393 02a0 0C       		.byte	0xc
 1394 02a1 09       		.uleb128 0x9
 1395 02a2 D7040000 		.4byte	.LASF47
 1396 02a6 08       		.byte	0x8
 1397 02a7 43       		.byte	0x43
 1398 02a8 68000000 		.4byte	0x68
 1399 02ac 10       		.byte	0x10
 1400 02ad 09       		.uleb128 0x9
 1401 02ae CD040000 		.4byte	.LASF48
 1402 02b2 08       		.byte	0x8
 1403 02b3 44       		.byte	0x44
 1404 02b4 68000000 		.4byte	0x68
 1405 02b8 14       		.byte	0x14
 1406 02b9 09       		.uleb128 0x9
 1407 02ba 07040000 		.4byte	.LASF49
 1408 02be 08       		.byte	0x8
 1409 02bf 45       		.byte	0x45
 1410 02c0 68000000 		.4byte	0x68
 1411 02c4 18       		.byte	0x18
 1412 02c5 09       		.uleb128 0x9
 1413 02c6 47040000 		.4byte	.LASF50
 1414 02ca 08       		.byte	0x8
 1415 02cb 46       		.byte	0x46
 1416 02cc 68000000 		.4byte	0x68
 1417 02d0 1C       		.byte	0x1c
 1418 02d1 00       		.byte	0
 1419 02d2 03       		.uleb128 0x3
 1420 02d3 7E040000 		.4byte	.LASF51
 1421 02d7 08       		.byte	0x8
 1422 02d8 48       		.byte	0x48
 1423 02d9 69020000 		.4byte	0x269
 1424 02dd 0A       		.uleb128 0xa
 1425 02de 05       		.byte	0x5
 1426 02df 08       		.byte	0x8
 1427 02e0 54       		.byte	0x54
 1428 02e1 22030000 		.4byte	0x322
 1429 02e5 09       		.uleb128 0x9
 1430 02e6 A4050000 		.4byte	.LASF52
 1431 02ea 08       		.byte	0x8
 1432 02eb 56       		.byte	0x56
 1433 02ec 81000000 		.4byte	0x81
 1434 02f0 00       		.byte	0
 1435 02f1 09       		.uleb128 0x9
 1436 02f2 E0030000 		.4byte	.LASF53
 1437 02f6 08       		.byte	0x8
 1438 02f7 58       		.byte	0x58
 1439 02f8 22030000 		.4byte	0x322
 1440 02fc 01       		.byte	0x1
 1441 02fd 09       		.uleb128 0x9
 1442 02fe C9020000 		.4byte	.LASF54
 1443 0302 08       		.byte	0x8
 1444 0303 5A       		.byte	0x5a
 1445 0304 81000000 		.4byte	0x81
 1446 0308 02       		.byte	0x2
 1447 0309 09       		.uleb128 0x9
 1448 030a B1030000 		.4byte	.LASF55
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 31


 1449 030e 08       		.byte	0x8
 1450 030f 5C       		.byte	0x5c
 1451 0310 81000000 		.4byte	0x81
 1452 0314 03       		.byte	0x3
 1453 0315 09       		.uleb128 0x9
 1454 0316 0D050000 		.4byte	.LASF56
 1455 031a 08       		.byte	0x8
 1456 031b 5F       		.byte	0x5f
 1457 031c 81000000 		.4byte	0x81
 1458 0320 04       		.byte	0x4
 1459 0321 00       		.byte	0
 1460 0322 02       		.uleb128 0x2
 1461 0323 01       		.byte	0x1
 1462 0324 02       		.byte	0x2
 1463 0325 B0040000 		.4byte	.LASF57
 1464 0329 03       		.uleb128 0x3
 1465 032a 2C030000 		.4byte	.LASF58
 1466 032e 08       		.byte	0x8
 1467 032f 61       		.byte	0x61
 1468 0330 DD020000 		.4byte	0x2dd
 1469 0334 0A       		.uleb128 0xa
 1470 0335 06       		.byte	0x6
 1471 0336 09       		.byte	0x9
 1472 0337 2E       		.byte	0x2e
 1473 0338 6D030000 		.4byte	0x36d
 1474 033c 09       		.uleb128 0x9
 1475 033d 77000000 		.4byte	.LASF59
 1476 0341 09       		.byte	0x9
 1477 0342 30       		.byte	0x30
 1478 0343 8D000000 		.4byte	0x8d
 1479 0347 00       		.byte	0
 1480 0348 09       		.uleb128 0x9
 1481 0349 3A000000 		.4byte	.LASF60
 1482 034d 09       		.byte	0x9
 1483 034e 31       		.byte	0x31
 1484 034f 99000000 		.4byte	0x99
 1485 0353 02       		.byte	0x2
 1486 0354 09       		.uleb128 0x9
 1487 0355 26050000 		.4byte	.LASF61
 1488 0359 09       		.byte	0x9
 1489 035a 32       		.byte	0x32
 1490 035b 81000000 		.4byte	0x81
 1491 035f 04       		.byte	0x4
 1492 0360 09       		.uleb128 0x9
 1493 0361 3E050000 		.4byte	.LASF62
 1494 0365 09       		.byte	0x9
 1495 0366 33       		.byte	0x33
 1496 0367 81000000 		.4byte	0x81
 1497 036b 05       		.byte	0x5
 1498 036c 00       		.byte	0
 1499 036d 03       		.uleb128 0x3
 1500 036e C3020000 		.4byte	.LASF63
 1501 0372 09       		.byte	0x9
 1502 0373 36       		.byte	0x36
 1503 0374 78030000 		.4byte	0x378
 1504 0378 0C       		.uleb128 0xc
 1505 0379 34030000 		.4byte	0x334
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 32


 1506 037d 0A       		.uleb128 0xa
 1507 037e 1C       		.byte	0x1c
 1508 037f 09       		.byte	0x9
 1509 0380 39       		.byte	0x39
 1510 0381 9E030000 		.4byte	0x39e
 1511 0385 09       		.uleb128 0x9
 1512 0386 54020000 		.4byte	.LASF64
 1513 038a 09       		.byte	0x9
 1514 038b 3B       		.byte	0x3b
 1515 038c 9E030000 		.4byte	0x39e
 1516 0390 00       		.byte	0
 1517 0391 09       		.uleb128 0x9
 1518 0392 84030000 		.4byte	.LASF65
 1519 0396 09       		.byte	0x9
 1520 0397 3C       		.byte	0x3c
 1521 0398 D4000000 		.4byte	0xd4
 1522 039c 04       		.byte	0x4
 1523 039d 00       		.byte	0
 1524 039e 0D       		.uleb128 0xd
 1525 039f 04       		.byte	0x4
 1526 03a0 5E020000 		.4byte	0x25e
 1527 03a4 03       		.uleb128 0x3
 1528 03a5 E9030000 		.4byte	.LASF66
 1529 03a9 09       		.byte	0x9
 1530 03aa 3E       		.byte	0x3e
 1531 03ab 7D030000 		.4byte	0x37d
 1532 03af 0A       		.uleb128 0xa
 1533 03b0 68       		.byte	0x68
 1534 03b1 09       		.byte	0x9
 1535 03b2 44       		.byte	0x44
 1536 03b3 D0030000 		.4byte	0x3d0
 1537 03b7 09       		.uleb128 0x9
 1538 03b8 A6000000 		.4byte	.LASF67
 1539 03bc 09       		.byte	0x9
 1540 03bd 49       		.byte	0x49
 1541 03be D0030000 		.4byte	0x3d0
 1542 03c2 00       		.byte	0
 1543 03c3 09       		.uleb128 0x9
 1544 03c4 7C050000 		.4byte	.LASF68
 1545 03c8 09       		.byte	0x9
 1546 03c9 4A       		.byte	0x4a
 1547 03ca 68000000 		.4byte	0x68
 1548 03ce 64       		.byte	0x64
 1549 03cf 00       		.byte	0
 1550 03d0 06       		.uleb128 0x6
 1551 03d1 BF000000 		.4byte	0xbf
 1552 03d5 E0030000 		.4byte	0x3e0
 1553 03d9 07       		.uleb128 0x7
 1554 03da CD000000 		.4byte	0xcd
 1555 03de 63       		.byte	0x63
 1556 03df 00       		.byte	0
 1557 03e0 03       		.uleb128 0x3
 1558 03e1 2B000000 		.4byte	.LASF69
 1559 03e5 09       		.byte	0x9
 1560 03e6 50       		.byte	0x50
 1561 03e7 AF030000 		.4byte	0x3af
 1562 03eb 0E       		.uleb128 0xe
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 33


 1563 03ec B8010000 		.4byte	.LASF74
 1564 03f0 01       		.byte	0x1
 1565 03f1 06       		.byte	0x6
 1566 03f2 9A010000 		.4byte	0x19a
 1567 03f6 00000000 		.4byte	.LFB64
 1568 03fa 4C010000 		.4byte	.LFE64-.LFB64
 1569 03fe 01       		.uleb128 0x1
 1570 03ff 9C       		.byte	0x9c
 1571 0400 75040000 		.4byte	0x475
 1572 0404 0F       		.uleb128 0xf
 1573 0405 4C020000 		.4byte	.LASF70
 1574 0409 01       		.byte	0x1
 1575 040a 0B       		.byte	0xb
 1576 040b 9A010000 		.4byte	0x19a
 1577 040f 02       		.uleb128 0x2
 1578 0410 91       		.byte	0x91
 1579 0411 4C       		.sleb128 -52
 1580 0412 0F       		.uleb128 0xf
 1581 0413 64010000 		.4byte	.LASF71
 1582 0417 01       		.byte	0x1
 1583 0418 19       		.byte	0x19
 1584 0419 75040000 		.4byte	0x475
 1585 041d 03       		.uleb128 0x3
 1586 041e 91       		.byte	0x91
 1587 041f B47F     		.sleb128 -76
 1588 0421 0F       		.uleb128 0xf
 1589 0422 50000000 		.4byte	.LASF72
 1590 0426 01       		.byte	0x1
 1591 0427 35       		.byte	0x35
 1592 0428 B1000000 		.4byte	0xb1
 1593 042c 02       		.uleb128 0x2
 1594 042d 91       		.byte	0x91
 1595 042e 68       		.sleb128 -24
 1596 042f 10       		.uleb128 0x10
 1597 0430 2C000000 		.4byte	.LBB2
 1598 0434 7A000000 		.4byte	.LBE2-.LBB2
 1599 0438 11       		.uleb128 0x11
 1600 0439 6300     		.ascii	"c\000"
 1601 043b 01       		.byte	0x1
 1602 043c 1B       		.byte	0x1b
 1603 043d 81000000 		.4byte	0x81
 1604 0441 02       		.uleb128 0x2
 1605 0442 91       		.byte	0x91
 1606 0443 6F       		.sleb128 -17
 1607 0444 10       		.uleb128 0x10
 1608 0445 34000000 		.4byte	.LBB3
 1609 0449 60000000 		.4byte	.LBE3-.LBB3
 1610 044d 0F       		.uleb128 0xf
 1611 044e E1050000 		.4byte	.LASF73
 1612 0452 01       		.byte	0x1
 1613 0453 1E       		.byte	0x1e
 1614 0454 85040000 		.4byte	0x485
 1615 0458 03       		.uleb128 0x3
 1616 0459 91       		.byte	0x91
 1617 045a 887F     		.sleb128 -120
 1618 045c 10       		.uleb128 0x10
 1619 045d 3E000000 		.4byte	.LBB4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 34


 1620 0461 30000000 		.4byte	.LBE4-.LBB4
 1621 0465 11       		.uleb128 0x11
 1622 0466 6900     		.ascii	"i\000"
 1623 0468 01       		.byte	0x1
 1624 0469 22       		.byte	0x22
 1625 046a 8D000000 		.4byte	0x8d
 1626 046e 02       		.uleb128 0x2
 1627 046f 91       		.byte	0x91
 1628 0470 6C       		.sleb128 -20
 1629 0471 00       		.byte	0
 1630 0472 00       		.byte	0
 1631 0473 00       		.byte	0
 1632 0474 00       		.byte	0
 1633 0475 06       		.uleb128 0x6
 1634 0476 B1000000 		.4byte	0xb1
 1635 047a 85040000 		.4byte	0x485
 1636 047e 07       		.uleb128 0x7
 1637 047f CD000000 		.4byte	0xcd
 1638 0483 05       		.byte	0x5
 1639 0484 00       		.byte	0
 1640 0485 06       		.uleb128 0x6
 1641 0486 A5000000 		.4byte	0xa5
 1642 048a 95040000 		.4byte	0x495
 1643 048e 07       		.uleb128 0x7
 1644 048f CD000000 		.4byte	0xcd
 1645 0493 0A       		.byte	0xa
 1646 0494 00       		.byte	0
 1647 0495 0E       		.uleb128 0xe
 1648 0496 57000000 		.4byte	.LASF75
 1649 049a 01       		.byte	0x1
 1650 049b 4B       		.byte	0x4b
 1651 049c DE010000 		.4byte	0x1de
 1652 04a0 00000000 		.4byte	.LFB65
 1653 04a4 98010000 		.4byte	.LFE65-.LFB65
 1654 04a8 01       		.uleb128 0x1
 1655 04a9 9C       		.byte	0x9c
 1656 04aa 0A050000 		.4byte	0x50a
 1657 04ae 0F       		.uleb128 0xf
 1658 04af A0010000 		.4byte	.LASF76
 1659 04b3 01       		.byte	0x1
 1660 04b4 4D       		.byte	0x4d
 1661 04b5 DE010000 		.4byte	0x1de
 1662 04b9 02       		.uleb128 0x2
 1663 04ba 91       		.byte	0x91
 1664 04bb 5C       		.sleb128 -36
 1665 04bc 0F       		.uleb128 0xf
 1666 04bd 64010000 		.4byte	.LASF71
 1667 04c1 01       		.byte	0x1
 1668 04c2 4E       		.byte	0x4e
 1669 04c3 75040000 		.4byte	0x475
 1670 04c7 02       		.uleb128 0x2
 1671 04c8 91       		.byte	0x91
 1672 04c9 44       		.sleb128 -60
 1673 04ca 0F       		.uleb128 0xf
 1674 04cb E1050000 		.4byte	.LASF73
 1675 04cf 01       		.byte	0x1
 1676 04d0 4F       		.byte	0x4f
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 35


 1677 04d1 85040000 		.4byte	0x485
 1678 04d5 03       		.uleb128 0x3
 1679 04d6 91       		.byte	0x91
 1680 04d7 987F     		.sleb128 -104
 1681 04d9 12       		.uleb128 0x12
 1682 04da 1A000000 		.4byte	.LBB5
 1683 04de 30000000 		.4byte	.LBE5-.LBB5
 1684 04e2 F3040000 		.4byte	0x4f3
 1685 04e6 11       		.uleb128 0x11
 1686 04e7 6900     		.ascii	"i\000"
 1687 04e9 01       		.byte	0x1
 1688 04ea 59       		.byte	0x59
 1689 04eb 8D000000 		.4byte	0x8d
 1690 04ef 02       		.uleb128 0x2
 1691 04f0 91       		.byte	0x91
 1692 04f1 6E       		.sleb128 -18
 1693 04f2 00       		.byte	0
 1694 04f3 10       		.uleb128 0x10
 1695 04f4 8E000000 		.4byte	.LBB6
 1696 04f8 30000000 		.4byte	.LBE6-.LBB6
 1697 04fc 11       		.uleb128 0x11
 1698 04fd 6900     		.ascii	"i\000"
 1699 04ff 01       		.byte	0x1
 1700 0500 66       		.byte	0x66
 1701 0501 8D000000 		.4byte	0x8d
 1702 0505 02       		.uleb128 0x2
 1703 0506 91       		.byte	0x91
 1704 0507 6C       		.sleb128 -20
 1705 0508 00       		.byte	0
 1706 0509 00       		.byte	0
 1707 050a 13       		.uleb128 0x13
 1708 050b 84050000 		.4byte	.LASF79
 1709 050f 01       		.byte	0x1
 1710 0510 81       		.byte	0x81
 1711 0511 DE010000 		.4byte	0x1de
 1712 0515 00000000 		.4byte	.LFB66
 1713 0519 C4000000 		.4byte	.LFE66-.LFB66
 1714 051d 01       		.uleb128 0x1
 1715 051e 9C       		.byte	0x9c
 1716 051f 40050000 		.4byte	0x540
 1717 0523 14       		.uleb128 0x14
 1718 0524 4C020000 		.4byte	.LASF70
 1719 0528 01       		.byte	0x1
 1720 0529 81       		.byte	0x81
 1721 052a 9A010000 		.4byte	0x19a
 1722 052e 02       		.uleb128 0x2
 1723 052f 91       		.byte	0x91
 1724 0530 74       		.sleb128 -12
 1725 0531 0F       		.uleb128 0xf
 1726 0532 A0010000 		.4byte	.LASF76
 1727 0536 01       		.byte	0x1
 1728 0537 83       		.byte	0x83
 1729 0538 DE010000 		.4byte	0x1de
 1730 053c 02       		.uleb128 0x2
 1731 053d 91       		.byte	0x91
 1732 053e 50       		.sleb128 -48
 1733 053f 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 36


 1734 0540 15       		.uleb128 0x15
 1735 0541 AD020000 		.4byte	.LASF77
 1736 0545 01       		.byte	0x1
 1737 0546 93       		.byte	0x93
 1738 0547 00000000 		.4byte	.LFB67
 1739 054b 74000000 		.4byte	.LFE67-.LFB67
 1740 054f 01       		.uleb128 0x1
 1741 0550 9C       		.byte	0x9c
 1742 0551 86050000 		.4byte	0x586
 1743 0555 16       		.uleb128 0x16
 1744 0556 6100     		.ascii	"a\000"
 1745 0558 01       		.byte	0x1
 1746 0559 93       		.byte	0x93
 1747 055a 86050000 		.4byte	0x586
 1748 055e 02       		.uleb128 0x2
 1749 055f 91       		.byte	0x91
 1750 0560 6C       		.sleb128 -20
 1751 0561 16       		.uleb128 0x16
 1752 0562 6E00     		.ascii	"n\000"
 1753 0564 01       		.byte	0x1
 1754 0565 93       		.byte	0x93
 1755 0566 A5000000 		.4byte	0xa5
 1756 056a 02       		.uleb128 0x2
 1757 056b 91       		.byte	0x91
 1758 056c 68       		.sleb128 -24
 1759 056d 11       		.uleb128 0x11
 1760 056e 6900     		.ascii	"i\000"
 1761 0570 01       		.byte	0x1
 1762 0571 94       		.byte	0x94
 1763 0572 A5000000 		.4byte	0xa5
 1764 0576 02       		.uleb128 0x2
 1765 0577 91       		.byte	0x91
 1766 0578 74       		.sleb128 -12
 1767 0579 11       		.uleb128 0x11
 1768 057a 6A00     		.ascii	"j\000"
 1769 057c 01       		.byte	0x1
 1770 057d 94       		.byte	0x94
 1771 057e A5000000 		.4byte	0xa5
 1772 0582 02       		.uleb128 0x2
 1773 0583 91       		.byte	0x91
 1774 0584 70       		.sleb128 -16
 1775 0585 00       		.byte	0
 1776 0586 0D       		.uleb128 0xd
 1777 0587 04       		.byte	0x4
 1778 0588 A5000000 		.4byte	0xa5
 1779 058c 17       		.uleb128 0x17
 1780 058d 3C010000 		.4byte	.LASF78
 1781 0591 01       		.byte	0x1
 1782 0592 9F       		.byte	0x9f
 1783 0593 00000000 		.4byte	.LFB68
 1784 0597 28000000 		.4byte	.LFE68-.LFB68
 1785 059b 01       		.uleb128 0x1
 1786 059c 9C       		.byte	0x9c
 1787 059d C6050000 		.4byte	0x5c6
 1788 05a1 16       		.uleb128 0x16
 1789 05a2 7000     		.ascii	"p\000"
 1790 05a4 01       		.byte	0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 37


 1791 05a5 9F       		.byte	0x9f
 1792 05a6 86050000 		.4byte	0x586
 1793 05aa 02       		.uleb128 0x2
 1794 05ab 91       		.byte	0x91
 1795 05ac 6C       		.sleb128 -20
 1796 05ad 16       		.uleb128 0x16
 1797 05ae 7100     		.ascii	"q\000"
 1798 05b0 01       		.byte	0x1
 1799 05b1 9F       		.byte	0x9f
 1800 05b2 86050000 		.4byte	0x586
 1801 05b6 02       		.uleb128 0x2
 1802 05b7 91       		.byte	0x91
 1803 05b8 68       		.sleb128 -24
 1804 05b9 11       		.uleb128 0x11
 1805 05ba 7400     		.ascii	"t\000"
 1806 05bc 01       		.byte	0x1
 1807 05bd A0       		.byte	0xa0
 1808 05be A5000000 		.4byte	0xa5
 1809 05c2 02       		.uleb128 0x2
 1810 05c3 91       		.byte	0x91
 1811 05c4 74       		.sleb128 -12
 1812 05c5 00       		.byte	0
 1813 05c6 13       		.uleb128 0x13
 1814 05c7 43030000 		.4byte	.LASF80
 1815 05cb 01       		.byte	0x1
 1816 05cc A8       		.byte	0xa8
 1817 05cd A5000000 		.4byte	0xa5
 1818 05d1 00000000 		.4byte	.LFB69
 1819 05d5 84000000 		.4byte	.LFE69-.LFB69
 1820 05d9 01       		.uleb128 0x1
 1821 05da 9C       		.byte	0x9c
 1822 05db 08060000 		.4byte	0x608
 1823 05df 14       		.uleb128 0x14
 1824 05e0 07050000 		.4byte	.LASF81
 1825 05e4 01       		.byte	0x1
 1826 05e5 A8       		.byte	0xa8
 1827 05e6 86050000 		.4byte	0x586
 1828 05ea 02       		.uleb128 0x2
 1829 05eb 91       		.byte	0x91
 1830 05ec 64       		.sleb128 -28
 1831 05ed 16       		.uleb128 0x16
 1832 05ee 6E00     		.ascii	"n\000"
 1833 05f0 01       		.byte	0x1
 1834 05f1 A8       		.byte	0xa8
 1835 05f2 A5000000 		.4byte	0xa5
 1836 05f6 02       		.uleb128 0x2
 1837 05f7 91       		.byte	0x91
 1838 05f8 60       		.sleb128 -32
 1839 05f9 0F       		.uleb128 0xf
 1840 05fa 70000000 		.4byte	.LASF82
 1841 05fe 01       		.byte	0x1
 1842 05ff AA       		.byte	0xaa
 1843 0600 A5000000 		.4byte	0xa5
 1844 0604 02       		.uleb128 0x2
 1845 0605 91       		.byte	0x91
 1846 0606 6C       		.sleb128 -20
 1847 0607 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 38


 1848 0608 0E       		.uleb128 0xe
 1849 0609 ED010000 		.4byte	.LASF83
 1850 060d 01       		.byte	0x1
 1851 060e BA       		.byte	0xba
 1852 060f 32010000 		.4byte	0x132
 1853 0613 00000000 		.4byte	.LFB70
 1854 0617 BC000000 		.4byte	.LFE70-.LFB70
 1855 061b 01       		.uleb128 0x1
 1856 061c 9C       		.byte	0x9c
 1857 061d 40060000 		.4byte	0x640
 1858 0621 0F       		.uleb128 0xf
 1859 0622 D2040000 		.4byte	.LASF84
 1860 0626 01       		.byte	0x1
 1861 0627 BC       		.byte	0xbc
 1862 0628 32010000 		.4byte	0x132
 1863 062c 03       		.uleb128 0x3
 1864 062d 91       		.byte	0x91
 1865 062e E47C     		.sleb128 -412
 1866 0630 0F       		.uleb128 0xf
 1867 0631 4C020000 		.4byte	.LASF70
 1868 0635 01       		.byte	0x1
 1869 0636 C0       		.byte	0xc0
 1870 0637 9A010000 		.4byte	0x19a
 1871 063b 03       		.uleb128 0x3
 1872 063c 91       		.byte	0x91
 1873 063d C87C     		.sleb128 -440
 1874 063f 00       		.byte	0
 1875 0640 0E       		.uleb128 0xe
 1876 0641 FA020000 		.4byte	.LASF85
 1877 0645 01       		.byte	0x1
 1878 0646 CF       		.byte	0xcf
 1879 0647 32010000 		.4byte	0x132
 1880 064b 00000000 		.4byte	.LFB71
 1881 064f 04010000 		.4byte	.LFE71-.LFB71
 1882 0653 01       		.uleb128 0x1
 1883 0654 9C       		.byte	0x9c
 1884 0655 78060000 		.4byte	0x678
 1885 0659 0F       		.uleb128 0xf
 1886 065a D2040000 		.4byte	.LASF84
 1887 065e 01       		.byte	0x1
 1888 065f D1       		.byte	0xd1
 1889 0660 32010000 		.4byte	0x132
 1890 0664 03       		.uleb128 0x3
 1891 0665 91       		.byte	0x91
 1892 0666 E47C     		.sleb128 -412
 1893 0668 0F       		.uleb128 0xf
 1894 0669 A0010000 		.4byte	.LASF76
 1895 066d 01       		.byte	0x1
 1896 066e D5       		.byte	0xd5
 1897 066f DE010000 		.4byte	0x1de
 1898 0673 03       		.uleb128 0x3
 1899 0674 91       		.byte	0x91
 1900 0675 D47C     		.sleb128 -428
 1901 0677 00       		.byte	0
 1902 0678 18       		.uleb128 0x18
 1903 0679 5A040000 		.4byte	.LASF86
 1904 067d 0A       		.byte	0xa
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 39


 1905 067e 1207     		.2byte	0x712
 1906 0680 84060000 		.4byte	0x684
 1907 0684 0C       		.uleb128 0xc
 1908 0685 76000000 		.4byte	0x76
 1909 0689 19       		.uleb128 0x19
 1910 068a 3C020000 		.4byte	.LASF87
 1911 068e 07       		.byte	0x7
 1912 068f 11       		.byte	0x11
 1913 0690 22030000 		.4byte	0x322
 1914 0694 05       		.uleb128 0x5
 1915 0695 03       		.byte	0x3
 1916 0696 00000000 		.4byte	buffer_overflow
 1917 069a 19       		.uleb128 0x19
 1918 069b 88010000 		.4byte	.LASF88
 1919 069f 07       		.byte	0x7
 1920 06a0 22       		.byte	0x22
 1921 06a1 8D000000 		.4byte	0x8d
 1922 06a5 05       		.uleb128 0x5
 1923 06a6 03       		.byte	0x3
 1924 06a7 00000000 		.4byte	dataPointsInStack
 1925 06ab 19       		.uleb128 0x19
 1926 06ac CE010000 		.4byte	.LASF89
 1927 06b0 07       		.byte	0x7
 1928 06b1 23       		.byte	0x23
 1929 06b2 8D000000 		.4byte	0x8d
 1930 06b6 05       		.uleb128 0x5
 1931 06b7 03       		.byte	0x3
 1932 06b8 00000000 		.4byte	dataPointsInStackDesired
 1933 06bc 06       		.uleb128 0x6
 1934 06bd 26020000 		.4byte	0x226
 1935 06c1 CC060000 		.4byte	0x6cc
 1936 06c5 07       		.uleb128 0x7
 1937 06c6 CD000000 		.4byte	0xcd
 1938 06ca 95       		.byte	0x95
 1939 06cb 00       		.byte	0
 1940 06cc 19       		.uleb128 0x19
 1941 06cd 43010000 		.4byte	.LASF90
 1942 06d1 07       		.byte	0x7
 1943 06d2 24       		.byte	0x24
 1944 06d3 BC060000 		.4byte	0x6bc
 1945 06d7 05       		.uleb128 0x5
 1946 06d8 03       		.byte	0x3
 1947 06d9 00000000 		.4byte	data
 1948 06dd 19       		.uleb128 0x19
 1949 06de 8C040000 		.4byte	.LASF91
 1950 06e2 08       		.byte	0x8
 1951 06e3 21       		.byte	0x21
 1952 06e4 81000000 		.4byte	0x81
 1953 06e8 05       		.uleb128 0x5
 1954 06e9 03       		.byte	0x3
 1955 06ea 00000000 		.4byte	modem_state
 1956 06ee 19       		.uleb128 0x19
 1957 06ef 15030000 		.4byte	.LASF92
 1958 06f3 08       		.byte	0x8
 1959 06f4 64       		.byte	0x64
 1960 06f5 A5000000 		.4byte	0xa5
 1961 06f9 05       		.uleb128 0x5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 40


 1962 06fa 03       		.byte	0x3
 1963 06fb 00000000 		.4byte	modem_start_time_stamp
 1964 06ff 19       		.uleb128 0x19
 1965 0700 54020000 		.4byte	.LASF64
 1966 0704 08       		.byte	0x8
 1967 0705 65       		.byte	0x65
 1968 0706 5E020000 		.4byte	0x25e
 1969 070a 05       		.uleb128 0x5
 1970 070b 03       		.byte	0x3
 1971 070c 00000000 		.4byte	modem_info
 1972 0710 19       		.uleb128 0x19
 1973 0711 BB030000 		.4byte	.LASF93
 1974 0715 08       		.byte	0x8
 1975 0716 66       		.byte	0x66
 1976 0717 D2020000 		.4byte	0x2d2
 1977 071b 05       		.uleb128 0x5
 1978 071c 03       		.byte	0x3
 1979 071d 00000000 		.4byte	modem_stats
 1980 0721 19       		.uleb128 0x19
 1981 0722 67050000 		.4byte	.LASF94
 1982 0726 08       		.byte	0x8
 1983 0727 67       		.byte	0x67
 1984 0728 29030000 		.4byte	0x329
 1985 072c 05       		.uleb128 0x5
 1986 072d 03       		.byte	0x3
 1987 072e 00000000 		.4byte	updatable_parameters
 1988 0732 06       		.uleb128 0x6
 1989 0733 BF000000 		.4byte	0xbf
 1990 0737 43070000 		.4byte	0x743
 1991 073b 1A       		.uleb128 0x1a
 1992 073c CD000000 		.4byte	0xcd
 1993 0740 0F27     		.2byte	0x270f
 1994 0742 00       		.byte	0
 1995 0743 19       		.uleb128 0x19
 1996 0744 90000000 		.4byte	.LASF95
 1997 0748 09       		.byte	0x9
 1998 0749 18       		.byte	0x18
 1999 074a 32070000 		.4byte	0x732
 2000 074e 05       		.uleb128 0x5
 2001 074f 03       		.byte	0x3
 2002 0750 00000000 		.4byte	http_request
 2003 0754 19       		.uleb128 0x19
 2004 0755 9A050000 		.4byte	.LASF96
 2005 0759 09       		.byte	0x9
 2006 075a 19       		.byte	0x19
 2007 075b 32070000 		.4byte	0x732
 2008 075f 05       		.uleb128 0x5
 2009 0760 03       		.byte	0x3
 2010 0761 00000000 		.4byte	http_body
 2011 0765 06       		.uleb128 0x6
 2012 0766 BF000000 		.4byte	0xbf
 2013 076a 75070000 		.4byte	0x775
 2014 076e 07       		.uleb128 0x7
 2015 076f CD000000 		.4byte	0xcd
 2016 0773 C7       		.byte	0xc7
 2017 0774 00       		.byte	0
 2018 0775 19       		.uleb128 0x19
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 41


 2019 0776 E3040000 		.4byte	.LASF97
 2020 077a 09       		.byte	0x9
 2021 077b 1A       		.byte	0x1a
 2022 077c 65070000 		.4byte	0x765
 2023 0780 05       		.uleb128 0x5
 2024 0781 03       		.byte	0x3
 2025 0782 00000000 		.4byte	http_route
 2026 0786 19       		.uleb128 0x19
 2027 0787 3B040000 		.4byte	.LASF98
 2028 078b 09       		.byte	0x9
 2029 078c 41       		.byte	0x41
 2030 078d A4030000 		.4byte	0x3a4
 2031 0791 05       		.uleb128 0x5
 2032 0792 03       		.byte	0x3
 2033 0793 00000000 		.4byte	system_info
 2034 0797 19       		.uleb128 0x19
 2035 0798 74030000 		.4byte	.LASF99
 2036 079c 09       		.byte	0x9
 2037 079d 53       		.byte	0x53
 2038 079e E0030000 		.4byte	0x3e0
 2039 07a2 05       		.uleb128 0x5
 2040 07a3 03       		.byte	0x3
 2041 07a4 00000000 		.4byte	system_settings
 2042 07a8 19       		.uleb128 0x19
 2043 07a9 09000000 		.4byte	.LASF100
 2044 07ad 09       		.byte	0x9
 2045 07ae 6F       		.byte	0x6f
 2046 07af 6D030000 		.4byte	0x36d
 2047 07b3 05       		.uleb128 0x5
 2048 07b4 03       		.byte	0x3
 2049 07b5 00000000 		.4byte	alarmMeasure
 2050 07b9 19       		.uleb128 0x19
 2051 07ba C7030000 		.4byte	.LASF101
 2052 07be 09       		.byte	0x9
 2053 07bf 70       		.byte	0x70
 2054 07c0 81000000 		.4byte	0x81
 2055 07c4 05       		.uleb128 0x5
 2056 07c5 03       		.byte	0x3
 2057 07c6 00000000 		.4byte	timeToMeasure
 2058 07ca 19       		.uleb128 0x19
 2059 07cb D6020000 		.4byte	.LASF102
 2060 07cf 09       		.byte	0x9
 2061 07d0 71       		.byte	0x71
 2062 07d1 6D030000 		.4byte	0x36d
 2063 07d5 05       		.uleb128 0x5
 2064 07d6 03       		.byte	0x3
 2065 07d7 00000000 		.4byte	alarmSync
 2066 07db 19       		.uleb128 0x19
 2067 07dc C5050000 		.4byte	.LASF103
 2068 07e0 09       		.byte	0x9
 2069 07e1 72       		.byte	0x72
 2070 07e2 81000000 		.4byte	0x81
 2071 07e6 05       		.uleb128 0x5
 2072 07e7 03       		.byte	0x3
 2073 07e8 00000000 		.4byte	timeToSync
 2074 07ec 19       		.uleb128 0x19
 2075 07ed B6040000 		.4byte	.LASF104
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 42


 2076 07f1 09       		.byte	0x9
 2077 07f2 73       		.byte	0x73
 2078 07f3 81000000 		.4byte	0x81
 2079 07f7 05       		.uleb128 0x5
 2080 07f8 03       		.byte	0x3
 2081 07f9 00000000 		.4byte	timeToSycnRemoteParams
 2082 07fd 1B       		.uleb128 0x1b
 2083 07fe 68657900 		.ascii	"hey\000"
 2084 0802 09       		.byte	0x9
 2085 0803 74       		.byte	0x74
 2086 0804 81000000 		.4byte	0x81
 2087 0808 05       		.uleb128 0x5
 2088 0809 03       		.byte	0x3
 2089 080a 00000000 		.4byte	hey
 2090 080e 00       		.byte	0
 2091              		.section	.debug_abbrev,"",%progbits
 2092              	.Ldebug_abbrev0:
 2093 0000 01       		.uleb128 0x1
 2094 0001 11       		.uleb128 0x11
 2095 0002 01       		.byte	0x1
 2096 0003 25       		.uleb128 0x25
 2097 0004 0E       		.uleb128 0xe
 2098 0005 13       		.uleb128 0x13
 2099 0006 0B       		.uleb128 0xb
 2100 0007 03       		.uleb128 0x3
 2101 0008 0E       		.uleb128 0xe
 2102 0009 1B       		.uleb128 0x1b
 2103 000a 0E       		.uleb128 0xe
 2104 000b 55       		.uleb128 0x55
 2105 000c 17       		.uleb128 0x17
 2106 000d 11       		.uleb128 0x11
 2107 000e 01       		.uleb128 0x1
 2108 000f 10       		.uleb128 0x10
 2109 0010 17       		.uleb128 0x17
 2110 0011 00       		.byte	0
 2111 0012 00       		.byte	0
 2112 0013 02       		.uleb128 0x2
 2113 0014 24       		.uleb128 0x24
 2114 0015 00       		.byte	0
 2115 0016 0B       		.uleb128 0xb
 2116 0017 0B       		.uleb128 0xb
 2117 0018 3E       		.uleb128 0x3e
 2118 0019 0B       		.uleb128 0xb
 2119 001a 03       		.uleb128 0x3
 2120 001b 0E       		.uleb128 0xe
 2121 001c 00       		.byte	0
 2122 001d 00       		.byte	0
 2123 001e 03       		.uleb128 0x3
 2124 001f 16       		.uleb128 0x16
 2125 0020 00       		.byte	0
 2126 0021 03       		.uleb128 0x3
 2127 0022 0E       		.uleb128 0xe
 2128 0023 3A       		.uleb128 0x3a
 2129 0024 0B       		.uleb128 0xb
 2130 0025 3B       		.uleb128 0x3b
 2131 0026 0B       		.uleb128 0xb
 2132 0027 49       		.uleb128 0x49
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 43


 2133 0028 13       		.uleb128 0x13
 2134 0029 00       		.byte	0
 2135 002a 00       		.byte	0
 2136 002b 04       		.uleb128 0x4
 2137 002c 24       		.uleb128 0x24
 2138 002d 00       		.byte	0
 2139 002e 0B       		.uleb128 0xb
 2140 002f 0B       		.uleb128 0xb
 2141 0030 3E       		.uleb128 0x3e
 2142 0031 0B       		.uleb128 0xb
 2143 0032 03       		.uleb128 0x3
 2144 0033 08       		.uleb128 0x8
 2145 0034 00       		.byte	0
 2146 0035 00       		.byte	0
 2147 0036 05       		.uleb128 0x5
 2148 0037 16       		.uleb128 0x16
 2149 0038 00       		.byte	0
 2150 0039 03       		.uleb128 0x3
 2151 003a 0E       		.uleb128 0xe
 2152 003b 3A       		.uleb128 0x3a
 2153 003c 0B       		.uleb128 0xb
 2154 003d 3B       		.uleb128 0x3b
 2155 003e 05       		.uleb128 0x5
 2156 003f 49       		.uleb128 0x49
 2157 0040 13       		.uleb128 0x13
 2158 0041 00       		.byte	0
 2159 0042 00       		.byte	0
 2160 0043 06       		.uleb128 0x6
 2161 0044 01       		.uleb128 0x1
 2162 0045 01       		.byte	0x1
 2163 0046 49       		.uleb128 0x49
 2164 0047 13       		.uleb128 0x13
 2165 0048 01       		.uleb128 0x1
 2166 0049 13       		.uleb128 0x13
 2167 004a 00       		.byte	0
 2168 004b 00       		.byte	0
 2169 004c 07       		.uleb128 0x7
 2170 004d 21       		.uleb128 0x21
 2171 004e 00       		.byte	0
 2172 004f 49       		.uleb128 0x49
 2173 0050 13       		.uleb128 0x13
 2174 0051 2F       		.uleb128 0x2f
 2175 0052 0B       		.uleb128 0xb
 2176 0053 00       		.byte	0
 2177 0054 00       		.byte	0
 2178 0055 08       		.uleb128 0x8
 2179 0056 13       		.uleb128 0x13
 2180 0057 01       		.byte	0x1
 2181 0058 0B       		.uleb128 0xb
 2182 0059 05       		.uleb128 0x5
 2183 005a 3A       		.uleb128 0x3a
 2184 005b 0B       		.uleb128 0xb
 2185 005c 3B       		.uleb128 0x3b
 2186 005d 0B       		.uleb128 0xb
 2187 005e 01       		.uleb128 0x1
 2188 005f 13       		.uleb128 0x13
 2189 0060 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 44


 2190 0061 00       		.byte	0
 2191 0062 09       		.uleb128 0x9
 2192 0063 0D       		.uleb128 0xd
 2193 0064 00       		.byte	0
 2194 0065 03       		.uleb128 0x3
 2195 0066 0E       		.uleb128 0xe
 2196 0067 3A       		.uleb128 0x3a
 2197 0068 0B       		.uleb128 0xb
 2198 0069 3B       		.uleb128 0x3b
 2199 006a 0B       		.uleb128 0xb
 2200 006b 49       		.uleb128 0x49
 2201 006c 13       		.uleb128 0x13
 2202 006d 38       		.uleb128 0x38
 2203 006e 0B       		.uleb128 0xb
 2204 006f 00       		.byte	0
 2205 0070 00       		.byte	0
 2206 0071 0A       		.uleb128 0xa
 2207 0072 13       		.uleb128 0x13
 2208 0073 01       		.byte	0x1
 2209 0074 0B       		.uleb128 0xb
 2210 0075 0B       		.uleb128 0xb
 2211 0076 3A       		.uleb128 0x3a
 2212 0077 0B       		.uleb128 0xb
 2213 0078 3B       		.uleb128 0x3b
 2214 0079 0B       		.uleb128 0xb
 2215 007a 01       		.uleb128 0x1
 2216 007b 13       		.uleb128 0x13
 2217 007c 00       		.byte	0
 2218 007d 00       		.byte	0
 2219 007e 0B       		.uleb128 0xb
 2220 007f 0D       		.uleb128 0xd
 2221 0080 00       		.byte	0
 2222 0081 03       		.uleb128 0x3
 2223 0082 08       		.uleb128 0x8
 2224 0083 3A       		.uleb128 0x3a
 2225 0084 0B       		.uleb128 0xb
 2226 0085 3B       		.uleb128 0x3b
 2227 0086 0B       		.uleb128 0xb
 2228 0087 49       		.uleb128 0x49
 2229 0088 13       		.uleb128 0x13
 2230 0089 38       		.uleb128 0x38
 2231 008a 0B       		.uleb128 0xb
 2232 008b 00       		.byte	0
 2233 008c 00       		.byte	0
 2234 008d 0C       		.uleb128 0xc
 2235 008e 35       		.uleb128 0x35
 2236 008f 00       		.byte	0
 2237 0090 49       		.uleb128 0x49
 2238 0091 13       		.uleb128 0x13
 2239 0092 00       		.byte	0
 2240 0093 00       		.byte	0
 2241 0094 0D       		.uleb128 0xd
 2242 0095 0F       		.uleb128 0xf
 2243 0096 00       		.byte	0
 2244 0097 0B       		.uleb128 0xb
 2245 0098 0B       		.uleb128 0xb
 2246 0099 49       		.uleb128 0x49
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 45


 2247 009a 13       		.uleb128 0x13
 2248 009b 00       		.byte	0
 2249 009c 00       		.byte	0
 2250 009d 0E       		.uleb128 0xe
 2251 009e 2E       		.uleb128 0x2e
 2252 009f 01       		.byte	0x1
 2253 00a0 3F       		.uleb128 0x3f
 2254 00a1 19       		.uleb128 0x19
 2255 00a2 03       		.uleb128 0x3
 2256 00a3 0E       		.uleb128 0xe
 2257 00a4 3A       		.uleb128 0x3a
 2258 00a5 0B       		.uleb128 0xb
 2259 00a6 3B       		.uleb128 0x3b
 2260 00a7 0B       		.uleb128 0xb
 2261 00a8 49       		.uleb128 0x49
 2262 00a9 13       		.uleb128 0x13
 2263 00aa 11       		.uleb128 0x11
 2264 00ab 01       		.uleb128 0x1
 2265 00ac 12       		.uleb128 0x12
 2266 00ad 06       		.uleb128 0x6
 2267 00ae 40       		.uleb128 0x40
 2268 00af 18       		.uleb128 0x18
 2269 00b0 9642     		.uleb128 0x2116
 2270 00b2 19       		.uleb128 0x19
 2271 00b3 01       		.uleb128 0x1
 2272 00b4 13       		.uleb128 0x13
 2273 00b5 00       		.byte	0
 2274 00b6 00       		.byte	0
 2275 00b7 0F       		.uleb128 0xf
 2276 00b8 34       		.uleb128 0x34
 2277 00b9 00       		.byte	0
 2278 00ba 03       		.uleb128 0x3
 2279 00bb 0E       		.uleb128 0xe
 2280 00bc 3A       		.uleb128 0x3a
 2281 00bd 0B       		.uleb128 0xb
 2282 00be 3B       		.uleb128 0x3b
 2283 00bf 0B       		.uleb128 0xb
 2284 00c0 49       		.uleb128 0x49
 2285 00c1 13       		.uleb128 0x13
 2286 00c2 02       		.uleb128 0x2
 2287 00c3 18       		.uleb128 0x18
 2288 00c4 00       		.byte	0
 2289 00c5 00       		.byte	0
 2290 00c6 10       		.uleb128 0x10
 2291 00c7 0B       		.uleb128 0xb
 2292 00c8 01       		.byte	0x1
 2293 00c9 11       		.uleb128 0x11
 2294 00ca 01       		.uleb128 0x1
 2295 00cb 12       		.uleb128 0x12
 2296 00cc 06       		.uleb128 0x6
 2297 00cd 00       		.byte	0
 2298 00ce 00       		.byte	0
 2299 00cf 11       		.uleb128 0x11
 2300 00d0 34       		.uleb128 0x34
 2301 00d1 00       		.byte	0
 2302 00d2 03       		.uleb128 0x3
 2303 00d3 08       		.uleb128 0x8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 46


 2304 00d4 3A       		.uleb128 0x3a
 2305 00d5 0B       		.uleb128 0xb
 2306 00d6 3B       		.uleb128 0x3b
 2307 00d7 0B       		.uleb128 0xb
 2308 00d8 49       		.uleb128 0x49
 2309 00d9 13       		.uleb128 0x13
 2310 00da 02       		.uleb128 0x2
 2311 00db 18       		.uleb128 0x18
 2312 00dc 00       		.byte	0
 2313 00dd 00       		.byte	0
 2314 00de 12       		.uleb128 0x12
 2315 00df 0B       		.uleb128 0xb
 2316 00e0 01       		.byte	0x1
 2317 00e1 11       		.uleb128 0x11
 2318 00e2 01       		.uleb128 0x1
 2319 00e3 12       		.uleb128 0x12
 2320 00e4 06       		.uleb128 0x6
 2321 00e5 01       		.uleb128 0x1
 2322 00e6 13       		.uleb128 0x13
 2323 00e7 00       		.byte	0
 2324 00e8 00       		.byte	0
 2325 00e9 13       		.uleb128 0x13
 2326 00ea 2E       		.uleb128 0x2e
 2327 00eb 01       		.byte	0x1
 2328 00ec 3F       		.uleb128 0x3f
 2329 00ed 19       		.uleb128 0x19
 2330 00ee 03       		.uleb128 0x3
 2331 00ef 0E       		.uleb128 0xe
 2332 00f0 3A       		.uleb128 0x3a
 2333 00f1 0B       		.uleb128 0xb
 2334 00f2 3B       		.uleb128 0x3b
 2335 00f3 0B       		.uleb128 0xb
 2336 00f4 27       		.uleb128 0x27
 2337 00f5 19       		.uleb128 0x19
 2338 00f6 49       		.uleb128 0x49
 2339 00f7 13       		.uleb128 0x13
 2340 00f8 11       		.uleb128 0x11
 2341 00f9 01       		.uleb128 0x1
 2342 00fa 12       		.uleb128 0x12
 2343 00fb 06       		.uleb128 0x6
 2344 00fc 40       		.uleb128 0x40
 2345 00fd 18       		.uleb128 0x18
 2346 00fe 9642     		.uleb128 0x2116
 2347 0100 19       		.uleb128 0x19
 2348 0101 01       		.uleb128 0x1
 2349 0102 13       		.uleb128 0x13
 2350 0103 00       		.byte	0
 2351 0104 00       		.byte	0
 2352 0105 14       		.uleb128 0x14
 2353 0106 05       		.uleb128 0x5
 2354 0107 00       		.byte	0
 2355 0108 03       		.uleb128 0x3
 2356 0109 0E       		.uleb128 0xe
 2357 010a 3A       		.uleb128 0x3a
 2358 010b 0B       		.uleb128 0xb
 2359 010c 3B       		.uleb128 0x3b
 2360 010d 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 47


 2361 010e 49       		.uleb128 0x49
 2362 010f 13       		.uleb128 0x13
 2363 0110 02       		.uleb128 0x2
 2364 0111 18       		.uleb128 0x18
 2365 0112 00       		.byte	0
 2366 0113 00       		.byte	0
 2367 0114 15       		.uleb128 0x15
 2368 0115 2E       		.uleb128 0x2e
 2369 0116 01       		.byte	0x1
 2370 0117 3F       		.uleb128 0x3f
 2371 0118 19       		.uleb128 0x19
 2372 0119 03       		.uleb128 0x3
 2373 011a 0E       		.uleb128 0xe
 2374 011b 3A       		.uleb128 0x3a
 2375 011c 0B       		.uleb128 0xb
 2376 011d 3B       		.uleb128 0x3b
 2377 011e 0B       		.uleb128 0xb
 2378 011f 27       		.uleb128 0x27
 2379 0120 19       		.uleb128 0x19
 2380 0121 11       		.uleb128 0x11
 2381 0122 01       		.uleb128 0x1
 2382 0123 12       		.uleb128 0x12
 2383 0124 06       		.uleb128 0x6
 2384 0125 40       		.uleb128 0x40
 2385 0126 18       		.uleb128 0x18
 2386 0127 9642     		.uleb128 0x2116
 2387 0129 19       		.uleb128 0x19
 2388 012a 01       		.uleb128 0x1
 2389 012b 13       		.uleb128 0x13
 2390 012c 00       		.byte	0
 2391 012d 00       		.byte	0
 2392 012e 16       		.uleb128 0x16
 2393 012f 05       		.uleb128 0x5
 2394 0130 00       		.byte	0
 2395 0131 03       		.uleb128 0x3
 2396 0132 08       		.uleb128 0x8
 2397 0133 3A       		.uleb128 0x3a
 2398 0134 0B       		.uleb128 0xb
 2399 0135 3B       		.uleb128 0x3b
 2400 0136 0B       		.uleb128 0xb
 2401 0137 49       		.uleb128 0x49
 2402 0138 13       		.uleb128 0x13
 2403 0139 02       		.uleb128 0x2
 2404 013a 18       		.uleb128 0x18
 2405 013b 00       		.byte	0
 2406 013c 00       		.byte	0
 2407 013d 17       		.uleb128 0x17
 2408 013e 2E       		.uleb128 0x2e
 2409 013f 01       		.byte	0x1
 2410 0140 3F       		.uleb128 0x3f
 2411 0141 19       		.uleb128 0x19
 2412 0142 03       		.uleb128 0x3
 2413 0143 0E       		.uleb128 0xe
 2414 0144 3A       		.uleb128 0x3a
 2415 0145 0B       		.uleb128 0xb
 2416 0146 3B       		.uleb128 0x3b
 2417 0147 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 48


 2418 0148 27       		.uleb128 0x27
 2419 0149 19       		.uleb128 0x19
 2420 014a 11       		.uleb128 0x11
 2421 014b 01       		.uleb128 0x1
 2422 014c 12       		.uleb128 0x12
 2423 014d 06       		.uleb128 0x6
 2424 014e 40       		.uleb128 0x40
 2425 014f 18       		.uleb128 0x18
 2426 0150 9742     		.uleb128 0x2117
 2427 0152 19       		.uleb128 0x19
 2428 0153 01       		.uleb128 0x1
 2429 0154 13       		.uleb128 0x13
 2430 0155 00       		.byte	0
 2431 0156 00       		.byte	0
 2432 0157 18       		.uleb128 0x18
 2433 0158 34       		.uleb128 0x34
 2434 0159 00       		.byte	0
 2435 015a 03       		.uleb128 0x3
 2436 015b 0E       		.uleb128 0xe
 2437 015c 3A       		.uleb128 0x3a
 2438 015d 0B       		.uleb128 0xb
 2439 015e 3B       		.uleb128 0x3b
 2440 015f 05       		.uleb128 0x5
 2441 0160 49       		.uleb128 0x49
 2442 0161 13       		.uleb128 0x13
 2443 0162 3F       		.uleb128 0x3f
 2444 0163 19       		.uleb128 0x19
 2445 0164 3C       		.uleb128 0x3c
 2446 0165 19       		.uleb128 0x19
 2447 0166 00       		.byte	0
 2448 0167 00       		.byte	0
 2449 0168 19       		.uleb128 0x19
 2450 0169 34       		.uleb128 0x34
 2451 016a 00       		.byte	0
 2452 016b 03       		.uleb128 0x3
 2453 016c 0E       		.uleb128 0xe
 2454 016d 3A       		.uleb128 0x3a
 2455 016e 0B       		.uleb128 0xb
 2456 016f 3B       		.uleb128 0x3b
 2457 0170 0B       		.uleb128 0xb
 2458 0171 49       		.uleb128 0x49
 2459 0172 13       		.uleb128 0x13
 2460 0173 3F       		.uleb128 0x3f
 2461 0174 19       		.uleb128 0x19
 2462 0175 02       		.uleb128 0x2
 2463 0176 18       		.uleb128 0x18
 2464 0177 00       		.byte	0
 2465 0178 00       		.byte	0
 2466 0179 1A       		.uleb128 0x1a
 2467 017a 21       		.uleb128 0x21
 2468 017b 00       		.byte	0
 2469 017c 49       		.uleb128 0x49
 2470 017d 13       		.uleb128 0x13
 2471 017e 2F       		.uleb128 0x2f
 2472 017f 05       		.uleb128 0x5
 2473 0180 00       		.byte	0
 2474 0181 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 49


 2475 0182 1B       		.uleb128 0x1b
 2476 0183 34       		.uleb128 0x34
 2477 0184 00       		.byte	0
 2478 0185 03       		.uleb128 0x3
 2479 0186 08       		.uleb128 0x8
 2480 0187 3A       		.uleb128 0x3a
 2481 0188 0B       		.uleb128 0xb
 2482 0189 3B       		.uleb128 0x3b
 2483 018a 0B       		.uleb128 0xb
 2484 018b 49       		.uleb128 0x49
 2485 018c 13       		.uleb128 0x13
 2486 018d 3F       		.uleb128 0x3f
 2487 018e 19       		.uleb128 0x19
 2488 018f 02       		.uleb128 0x2
 2489 0190 18       		.uleb128 0x18
 2490 0191 00       		.byte	0
 2491 0192 00       		.byte	0
 2492 0193 00       		.byte	0
 2493              		.section	.debug_aranges,"",%progbits
 2494 0000 54000000 		.4byte	0x54
 2495 0004 0200     		.2byte	0x2
 2496 0006 00000000 		.4byte	.Ldebug_info0
 2497 000a 04       		.byte	0x4
 2498 000b 00       		.byte	0
 2499 000c 0000     		.2byte	0
 2500 000e 0000     		.2byte	0
 2501 0010 00000000 		.4byte	.LFB64
 2502 0014 4C010000 		.4byte	.LFE64-.LFB64
 2503 0018 00000000 		.4byte	.LFB65
 2504 001c 98010000 		.4byte	.LFE65-.LFB65
 2505 0020 00000000 		.4byte	.LFB66
 2506 0024 C4000000 		.4byte	.LFE66-.LFB66
 2507 0028 00000000 		.4byte	.LFB67
 2508 002c 74000000 		.4byte	.LFE67-.LFB67
 2509 0030 00000000 		.4byte	.LFB68
 2510 0034 28000000 		.4byte	.LFE68-.LFB68
 2511 0038 00000000 		.4byte	.LFB69
 2512 003c 84000000 		.4byte	.LFE69-.LFB69
 2513 0040 00000000 		.4byte	.LFB70
 2514 0044 BC000000 		.4byte	.LFE70-.LFB70
 2515 0048 00000000 		.4byte	.LFB71
 2516 004c 04010000 		.4byte	.LFE71-.LFB71
 2517 0050 00000000 		.4byte	0
 2518 0054 00000000 		.4byte	0
 2519              		.section	.debug_ranges,"",%progbits
 2520              	.Ldebug_ranges0:
 2521 0000 00000000 		.4byte	.LFB64
 2522 0004 4C010000 		.4byte	.LFE64
 2523 0008 00000000 		.4byte	.LFB65
 2524 000c 98010000 		.4byte	.LFE65
 2525 0010 00000000 		.4byte	.LFB66
 2526 0014 C4000000 		.4byte	.LFE66
 2527 0018 00000000 		.4byte	.LFB67
 2528 001c 74000000 		.4byte	.LFE67
 2529 0020 00000000 		.4byte	.LFB68
 2530 0024 28000000 		.4byte	.LFE68
 2531 0028 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 50


 2532 002c 84000000 		.4byte	.LFE69
 2533 0030 00000000 		.4byte	.LFB70
 2534 0034 BC000000 		.4byte	.LFE70
 2535 0038 00000000 		.4byte	.LFB71
 2536 003c 04010000 		.4byte	.LFE71
 2537 0040 00000000 		.4byte	0
 2538 0044 00000000 		.4byte	0
 2539              		.section	.debug_line,"",%progbits
 2540              	.Ldebug_line0:
 2541 0000 D8020000 		.section	.debug_str,"MS",%progbits,1
 2541      02008E01 
 2541      00000201 
 2541      FB0E0D00 
 2541      01010101 
 2542              	.LASF41:
 2543 0000 6D6F6465 		.ascii	"model_id\000"
 2543      6C5F6964 
 2543      00
 2544              	.LASF100:
 2545 0009 616C6172 		.ascii	"alarmMeasure\000"
 2545      6D4D6561 
 2545      73757265 
 2545      00
 2546              	.LASF40:
 2547 0016 73696D5F 		.ascii	"sim_id\000"
 2547      696400
 2548              	.LASF25:
 2549 001d 766F6C74 		.ascii	"voltage_solar\000"
 2549      6167655F 
 2549      736F6C61 
 2549      7200
 2550              	.LASF69:
 2551 002b 7379735F 		.ascii	"sys_settings_t\000"
 2551      73657474 
 2551      696E6773 
 2551      5F7400
 2552              	.LASF60:
 2553 003a 63757272 		.ascii	"currentCountDownValue\000"
 2553      656E7443 
 2553      6F756E74 
 2553      446F776E 
 2553      56616C75 
 2554              	.LASF72:
 2555 0050 6F666673 		.ascii	"offset\000"
 2555      657400
 2556              	.LASF75:
 2557 0057 70726573 		.ascii	"pressure_sensor_readings\000"
 2557      73757265 
 2557      5F73656E 
 2557      736F725F 
 2557      72656164 
 2558              	.LASF82:
 2559 0070 6D656469 		.ascii	"median\000"
 2559      616E00
 2560              	.LASF59:
 2561 0077 636F756E 		.ascii	"countDownValue\000"
 2561      74446F77 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 51


 2561      6E56616C 
 2561      756500
 2562              	.LASF2:
 2563 0086 73686F72 		.ascii	"short int\000"
 2563      7420696E 
 2563      7400
 2564              	.LASF95:
 2565 0090 68747470 		.ascii	"http_request\000"
 2565      5F726571 
 2565      75657374 
 2565      00
 2566              	.LASF19:
 2567 009d 73697A65 		.ascii	"sizetype\000"
 2567      74797065 
 2567      00
 2568              	.LASF67:
 2569 00a6 65705F68 		.ascii	"ep_host\000"
 2569      6F737400 
 2570              	.LASF105:
 2571 00ae 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2571      43313120 
 2571      352E342E 
 2571      31203230 
 2571      31363036 
 2572 00e1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2572      20726576 
 2572      6973696F 
 2572      6E203233 
 2572      37373135 
 2573 0114 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2573      66756E63 
 2573      74696F6E 
 2573      2D736563 
 2573      74696F6E 
 2574              	.LASF78:
 2575 013c 73776170 		.ascii	"swap32\000"
 2575      333200
 2576              	.LASF90:
 2577 0143 64617461 		.ascii	"data\000"
 2577      00
 2578              	.LASF106:
 2579 0148 766F6C74 		.ascii	"voltages.c\000"
 2579      61676573 
 2579      2E6300
 2580              	.LASF27:
 2581 0153 766F6C74 		.ascii	"voltage_pressure\000"
 2581      6167655F 
 2581      70726573 
 2581      73757265 
 2581      00
 2582              	.LASF71:
 2583 0164 6368616E 		.ascii	"channels\000"
 2583      6E656C73 
 2583      00
 2584              	.LASF46:
 2585 016d 65636E6F 		.ascii	"ecno\000"
 2585      00
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 52


 2586              	.LASF37:
 2587 0172 76616C75 		.ascii	"value\000"
 2587      6500
 2588              	.LASF24:
 2589 0178 766F6C74 		.ascii	"voltage_battery\000"
 2589      6167655F 
 2589      62617474 
 2589      65727900 
 2590              	.LASF88:
 2591 0188 64617461 		.ascii	"dataPointsInStack\000"
 2591      506F696E 
 2591      7473496E 
 2591      53746163 
 2591      6B00
 2592              	.LASF11:
 2593 019a 75696E74 		.ascii	"uint8\000"
 2593      3800
 2594              	.LASF76:
 2595 01a0 70726573 		.ascii	"pressure\000"
 2595      73757265 
 2595      00
 2596              	.LASF45:
 2597 01a9 72736370 		.ascii	"rscp\000"
 2597      00
 2598              	.LASF38:
 2599 01ae 74696D65 		.ascii	"timeStamp\000"
 2599      5374616D 
 2599      7000
 2600              	.LASF74:
 2601 01b8 766F6C74 		.ascii	"voltage_take_readings\000"
 2601      6167655F 
 2601      74616B65 
 2601      5F726561 
 2601      64696E67 
 2602              	.LASF89:
 2603 01ce 64617461 		.ascii	"dataPointsInStackDesired\000"
 2603      506F696E 
 2603      7473496E 
 2603      53746163 
 2603      6B446573 
 2604              	.LASF15:
 2605 01e7 666C6F61 		.ascii	"float\000"
 2605      7400
 2606              	.LASF83:
 2607 01ed 766F6C74 		.ascii	"voltages_test\000"
 2607      61676573 
 2607      5F746573 
 2607      7400
 2608              	.LASF14:
 2609 01fb 696E7433 		.ascii	"int32\000"
 2609      3200
 2610              	.LASF6:
 2611 0201 6C6F6E67 		.ascii	"long long int\000"
 2611      206C6F6E 
 2611      6720696E 
 2611      7400
 2612              	.LASF13:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 53


 2613 020f 696E7431 		.ascii	"int16\000"
 2613      3600
 2614              	.LASF28:
 2615 0215 766F6C74 		.ascii	"voltage_valve_pos\000"
 2615      6167655F 
 2615      76616C76 
 2615      655F706F 
 2615      7300
 2616              	.LASF17:
 2617 0227 63686172 		.ascii	"char\000"
 2617      00
 2618              	.LASF22:
 2619 022c 72656173 		.ascii	"reason\000"
 2619      6F6E00
 2620              	.LASF4:
 2621 0233 6C6F6E67 		.ascii	"long int\000"
 2621      20696E74 
 2621      00
 2622              	.LASF87:
 2623 023c 62756666 		.ascii	"buffer_overflow\000"
 2623      65725F6F 
 2623      76657266 
 2623      6C6F7700 
 2624              	.LASF70:
 2625 024c 766F6C74 		.ascii	"voltage\000"
 2625      61676500 
 2626              	.LASF64:
 2627 0254 6D6F6465 		.ascii	"modem_info\000"
 2627      6D5F696E 
 2627      666F00
 2628              	.LASF32:
 2629 025f 70726573 		.ascii	"pressure_voltage_on\000"
 2629      73757265 
 2629      5F766F6C 
 2629      74616765 
 2629      5F6F6E00 
 2630              	.LASF107:
 2631 0273 433A5C55 		.ascii	"C:\\Users\\dantz\\Documents\\notoriOS\\notoriOS\\no"
 2631      73657273 
 2631      5C64616E 
 2631      747A5C44 
 2631      6F63756D 
 2632 02a0 746F7269 		.ascii	"toriOS.cydsn\000"
 2632      4F532E63 
 2632      7964736E 
 2632      00
 2633              	.LASF77:
 2634 02ad 736F7274 		.ascii	"sort32\000"
 2634      333200
 2635              	.LASF35:
 2636 02b4 70726573 		.ascii	"pressure_depth\000"
 2636      73757265 
 2636      5F646570 
 2636      746800
 2637              	.LASF63:
 2638 02c3 616C6172 		.ascii	"alarm\000"
 2638      6D00
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 54


 2639              	.LASF54:
 2640 02c9 6D656173 		.ascii	"measure_time\000"
 2640      7572655F 
 2640      74696D65 
 2640      00
 2641              	.LASF102:
 2642 02d6 616C6172 		.ascii	"alarmSync\000"
 2642      6D53796E 
 2642      6300
 2643              	.LASF18:
 2644 02e0 6C6F6E67 		.ascii	"long double\000"
 2644      20646F75 
 2644      626C6500 
 2645              	.LASF1:
 2646 02ec 756E7369 		.ascii	"unsigned char\000"
 2646      676E6564 
 2646      20636861 
 2646      7200
 2647              	.LASF85:
 2648 02fa 70726573 		.ascii	"pressure_sensor_test\000"
 2648      73757265 
 2648      5F73656E 
 2648      736F725F 
 2648      74657374 
 2649              	.LASF30:
 2650 030f 76616C69 		.ascii	"valid\000"
 2650      6400
 2651              	.LASF92:
 2652 0315 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2652      6D5F7374 
 2652      6172745F 
 2652      74696D65 
 2652      5F737461 
 2653              	.LASF58:
 2654 032c 75706461 		.ascii	"updatable_parameters_t\000"
 2654      7461626C 
 2654      655F7061 
 2654      72616D65 
 2654      74657273 
 2655              	.LASF80:
 2656 0343 66696E64 		.ascii	"find_median32\000"
 2656      5F6D6564 
 2656      69616E33 
 2656      3200
 2657              	.LASF0:
 2658 0351 7369676E 		.ascii	"signed char\000"
 2658      65642063 
 2658      68617200 
 2659              	.LASF7:
 2660 035d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2660      206C6F6E 
 2660      6720756E 
 2660      7369676E 
 2660      65642069 
 2661              	.LASF99:
 2662 0374 73797374 		.ascii	"system_settings\000"
 2662      656D5F73 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 55


 2662      65747469 
 2662      6E677300 
 2663              	.LASF65:
 2664 0384 63686970 		.ascii	"chip_uniqueId\000"
 2664      5F756E69 
 2664      71756549 
 2664      6400
 2665              	.LASF8:
 2666 0392 756E7369 		.ascii	"unsigned int\000"
 2666      676E6564 
 2666      20696E74 
 2666      00
 2667              	.LASF39:
 2668 039f 6B65795F 		.ascii	"key_value_t\000"
 2668      76616C75 
 2668      655F7400 
 2669              	.LASF44:
 2670 03ab 72786C65 		.ascii	"rxlev\000"
 2670      7600
 2671              	.LASF55:
 2672 03b1 73796E63 		.ascii	"sync_time\000"
 2672      5F74696D 
 2672      6500
 2673              	.LASF93:
 2674 03bb 6D6F6465 		.ascii	"modem_stats\000"
 2674      6D5F7374 
 2674      61747300 
 2675              	.LASF101:
 2676 03c7 74696D65 		.ascii	"timeToMeasure\000"
 2676      546F4D65 
 2676      61737572 
 2676      6500
 2677              	.LASF36:
 2678 03d5 70726573 		.ascii	"pressure_t\000"
 2678      73757265 
 2678      5F7400
 2679              	.LASF53:
 2680 03e0 73696D5F 		.ascii	"sim_type\000"
 2680      74797065 
 2680      00
 2681              	.LASF66:
 2682 03e9 7379735F 		.ascii	"sys_info_t\000"
 2682      696E666F 
 2682      5F7400
 2683              	.LASF3:
 2684 03f4 73686F72 		.ascii	"short unsigned int\000"
 2684      7420756E 
 2684      7369676E 
 2684      65642069 
 2684      6E7400
 2685              	.LASF49:
 2686 0407 74696D65 		.ascii	"time_to_network_connect\000"
 2686      5F746F5F 
 2686      6E657477 
 2686      6F726B5F 
 2686      636F6E6E 
 2687              	.LASF21:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 56


 2688 041f 73746174 		.ascii	"status\000"
 2688      757300
 2689              	.LASF33:
 2690 0426 70726573 		.ascii	"pressure_voltage_off\000"
 2690      73757265 
 2690      5F766F6C 
 2690      74616765 
 2690      5F6F6666 
 2691              	.LASF98:
 2692 043b 73797374 		.ascii	"system_info\000"
 2692      656D5F69 
 2692      6E666F00 
 2693              	.LASF50:
 2694 0447 74696D65 		.ascii	"time_to_acquire_ip\000"
 2694      5F746F5F 
 2694      61637175 
 2694      6972655F 
 2694      697000
 2695              	.LASF86:
 2696 045a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2696      52784275 
 2696      66666572 
 2696      00
 2697              	.LASF42:
 2698 0467 696D6569 		.ascii	"imei\000"
 2698      00
 2699              	.LASF31:
 2700 046c 766F6C74 		.ascii	"voltage_t\000"
 2700      6167655F 
 2700      7400
 2701              	.LASF10:
 2702 0476 696E7433 		.ascii	"int32_t\000"
 2702      325F7400 
 2703              	.LASF51:
 2704 047e 6D6F6465 		.ascii	"modem_stats_t\000"
 2704      6D5F7374 
 2704      6174735F 
 2704      7400
 2705              	.LASF91:
 2706 048c 6D6F6465 		.ascii	"modem_state\000"
 2706      6D5F7374 
 2706      61746500 
 2707              	.LASF29:
 2708 0498 766F6C74 		.ascii	"voltage_valve_pot_power\000"
 2708      6167655F 
 2708      76616C76 
 2708      655F706F 
 2708      745F706F 
 2709              	.LASF57:
 2710 04b0 5F426F6F 		.ascii	"_Bool\000"
 2710      6C00
 2711              	.LASF104:
 2712 04b6 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2712      546F5379 
 2712      636E5265 
 2712      6D6F7465 
 2712      50617261 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 57


 2713              	.LASF48:
 2714 04cd 72737270 		.ascii	"rsrp\000"
 2714      00
 2715              	.LASF84:
 2716 04d2 74657374 		.ascii	"test\000"
 2716      00
 2717              	.LASF47:
 2718 04d7 72737271 		.ascii	"rsrq\000"
 2718      00
 2719              	.LASF12:
 2720 04dc 75696E74 		.ascii	"uint16\000"
 2720      313600
 2721              	.LASF97:
 2722 04e3 68747470 		.ascii	"http_route\000"
 2722      5F726F75 
 2722      746500
 2723              	.LASF5:
 2724 04ee 6C6F6E67 		.ascii	"long unsigned int\000"
 2724      20756E73 
 2724      69676E65 
 2724      6420696E 
 2724      7400
 2725              	.LASF16:
 2726 0500 646F7562 		.ascii	"double\000"
 2726      6C6500
 2727              	.LASF81:
 2728 0507 61727261 		.ascii	"array\000"
 2728      7900
 2729              	.LASF56:
 2730 050d 64656275 		.ascii	"debug_level\000"
 2730      675F6C65 
 2730      76656C00 
 2731              	.LASF43:
 2732 0519 6D6F6465 		.ascii	"modem_info_t\000"
 2732      6D5F696E 
 2732      666F5F74 
 2732      00
 2733              	.LASF61:
 2734 0526 636F756E 		.ascii	"countDownType\000"
 2734      74446F77 
 2734      6E547970 
 2734      6500
 2735              	.LASF9:
 2736 0534 5F5F696E 		.ascii	"__int32_t\000"
 2736      7433325F 
 2736      7400
 2737              	.LASF62:
 2738 053e 636F756E 		.ascii	"countDownResetCondition\000"
 2738      74446F77 
 2738      6E526573 
 2738      6574436F 
 2738      6E646974 
 2739              	.LASF23:
 2740 0556 74657374 		.ascii	"test_t\000"
 2740      5F7400
 2741              	.LASF20:
 2742 055d 74657374 		.ascii	"test_name\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczQ22Bs.s 			page 58


 2742      5F6E616D 
 2742      6500
 2743              	.LASF94:
 2744 0567 75706461 		.ascii	"updatable_parameters\000"
 2744      7461626C 
 2744      655F7061 
 2744      72616D65 
 2744      74657273 
 2745              	.LASF68:
 2746 057c 65705F70 		.ascii	"ep_port\000"
 2746      6F727400 
 2747              	.LASF79:
 2748 0584 70726573 		.ascii	"pressure_calculations\000"
 2748      73757265 
 2748      5F63616C 
 2748      63756C61 
 2748      74696F6E 
 2749              	.LASF96:
 2750 059a 68747470 		.ascii	"http_body\000"
 2750      5F626F64 
 2750      7900
 2751              	.LASF52:
 2752 05a4 6E6F6465 		.ascii	"node_type\000"
 2752      5F747970 
 2752      6500
 2753              	.LASF26:
 2754 05ae 766F6C74 		.ascii	"voltage_charge_current\000"
 2754      6167655F 
 2754      63686172 
 2754      67655F63 
 2754      75727265 
 2755              	.LASF103:
 2756 05c5 74696D65 		.ascii	"timeToSync\000"
 2756      546F5379 
 2756      6E6300
 2757              	.LASF34:
 2758 05d0 70726573 		.ascii	"pressure_current\000"
 2758      73757265 
 2758      5F637572 
 2758      72656E74 
 2758      00
 2759              	.LASF73:
 2760 05e1 72656164 		.ascii	"readings\000"
 2760      696E6773 
 2760      00
 2761              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
