ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"voltages.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.global	__aeabi_f2d
  44              		.global	__aeabi_dsub
  45              		.global	__aeabi_d2f
  46              		.global	__aeabi_fmul
  47              		.global	__aeabi_fsub
  48              		.section	.text.voltage_take_readings,"ax",%progbits
  49              		.align	2
  50              		.global	voltage_take_readings
  51              		.thumb
  52              		.thumb_func
  53              		.type	voltage_take_readings, %function
  54              	voltage_take_readings:
  55              	.LFB64:
  56              		.file 1 "voltages.c"
   1:voltages.c    **** #include "voltages.h"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 2


   2:voltages.c    **** #include "notoriOS.h"
   3:voltages.c    **** #include <math.h>
   4:voltages.c    **** 
   5:voltages.c    **** // Function to take voltage readings and save them in the voltage_t datatype
   6:voltages.c    **** voltage_t voltage_take_readings(){
  57              		.loc 1 6 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 112
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 B0B5     		push	{r4, r5, r7, lr}
  62              		.cfi_def_cfa_offset 16
  63              		.cfi_offset 4, -16
  64              		.cfi_offset 5, -12
  65              		.cfi_offset 7, -8
  66              		.cfi_offset 14, -4
  67 0002 9CB0     		sub	sp, sp, #112
  68              		.cfi_def_cfa_offset 128
  69 0004 00AF     		add	r7, sp, #0
  70              		.cfi_def_cfa_register 7
  71 0006 7860     		str	r0, [r7, #4]
   7:voltages.c    ****     
   8:voltages.c    ****     voltage_t voltage;  // Create variable voltage of data structure voltage_t.
   9:voltages.c    ****      
  10:voltages.c    **** 	Battery_Voltage_Enable_Write(ON);   // Flip on the Battery Voltage ADC pin high (turns it on).
  72              		.loc 1 10 0
  73 0008 0120     		movs	r0, #1
  74 000a FFF7FEFF 		bl	Battery_Voltage_Enable_Write
  11:voltages.c    ****     Pressure_Voltage_Enable_Write(ON);  // Flip on the Pressure Transducer Voltage ADC pin high (tu
  75              		.loc 1 11 0
  76 000e 0120     		movs	r0, #1
  77 0010 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  12:voltages.c    ****     
  13:voltages.c    **** 	CyDelay(10u);	    // 10 seconds delay to give time to flip on ADC pin.
  78              		.loc 1 13 0
  79 0014 0A20     		movs	r0, #10
  80 0016 FFF7FEFF 		bl	CyDelay
  14:voltages.c    ****     
  15:voltages.c    ****     AMux_Start();       // Start the Analog Multiplexer
  81              		.loc 1 15 0
  82 001a FFF7FEFF 		bl	AMux_Start
  16:voltages.c    ****  
  17:voltages.c    ****     ADC_RestoreConfig();// Have to call this and save (See below). Otherwise ADC won't work through
  83              		.loc 1 17 0
  84 001e FFF7FEFF 		bl	ADC_RestoreConfig
  18:voltages.c    ****     
  19:voltages.c    ****     ADC_Start();        // Start the ADC
  85              		.loc 1 19 0
  86 0022 FFF7FEFF 		bl	ADC_Start
  87              	.LBB2:
  20:voltages.c    ****     
  21:voltages.c    ****     
  22:voltages.c    ****     float channels[AMux_CHANNELS];
  23:voltages.c    ****     
  24:voltages.c    ****     for(uint8 c = 0; c< AMux_CHANNELS + 1; c++) // Sweep the MUX Channels
  88              		.loc 1 24 0
  89 0026 0023     		movs	r3, #0
  90 0028 87F86F30 		strb	r3, [r7, #111]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 3


  91 002c 34E0     		b	.L2
  92              	.L5:
  93              	.LBB3:
  25:voltages.c    ****     {
  26:voltages.c    ****         
  27:voltages.c    ****         int32 readings[N_SAMPLES];  // Creates new int32 array called readings of size N_SAMPLES = 
  28:voltages.c    ****         
  29:voltages.c    ****         AMux_Select(c); // This functions first disconnects all channels then connects the given ch
  94              		.loc 1 29 0
  95 002e 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
  96 0032 1846     		mov	r0, r3
  97 0034 FFF7FEFF 		bl	AMux_Select
  98              	.LBB4:
  30:voltages.c    ****         
  31:voltages.c    ****         for(uint16 i=0; i< N_SAMPLES; i++){
  99              		.loc 1 31 0
 100 0038 0023     		movs	r3, #0
 101 003a A7F86C30 		strh	r3, [r7, #108]	@ movhi
 102 003e 0FE0     		b	.L3
 103              	.L4:
  32:voltages.c    ****             
  33:voltages.c    ****             readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the
 104              		.loc 1 33 0 discriminator 3
 105 0040 B7F86C40 		ldrh	r4, [r7, #108]
 106 0044 FFF7FEFF 		bl	ADC_Read32
 107 0048 0246     		mov	r2, r0
 108 004a A300     		lsls	r3, r4, #2
 109 004c 07F17001 		add	r1, r7, #112
 110 0050 0B44     		add	r3, r3, r1
 111 0052 43F8682C 		str	r2, [r3, #-104]
  31:voltages.c    ****             
 112              		.loc 1 31 0 discriminator 3
 113 0056 B7F86C30 		ldrh	r3, [r7, #108]
 114 005a 0133     		adds	r3, r3, #1
 115 005c A7F86C30 		strh	r3, [r7, #108]	@ movhi
 116              	.L3:
  31:voltages.c    ****             
 117              		.loc 1 31 0 is_stmt 0 discriminator 1
 118 0060 B7F86C30 		ldrh	r3, [r7, #108]
 119 0064 0A2B     		cmp	r3, #10
 120 0066 EBD9     		bls	.L4
 121              	.LBE4:
  34:voltages.c    ****         }
  35:voltages.c    ****         
  36:voltages.c    ****         // Converts the ADC output to Volts as a floating point number. 
  37:voltages.c    ****         // Get the median of readings and return that.
  38:voltages.c    ****         channels[c] = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Get median of re
 122              		.loc 1 38 0 is_stmt 1 discriminator 2
 123 0068 97F86F40 		ldrb	r4, [r7, #111]	@ zero_extendqisi2
 124 006c 07F10803 		add	r3, r7, #8
 125 0070 0B21     		movs	r1, #11
 126 0072 1846     		mov	r0, r3
 127 0074 FFF7FEFF 		bl	find_median32
 128 0078 0346     		mov	r3, r0
 129 007a 1846     		mov	r0, r3
 130 007c FFF7FEFF 		bl	ADC_CountsTo_Volts
 131 0080 0246     		mov	r2, r0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 4


 132 0082 A300     		lsls	r3, r4, #2
 133 0084 07F17001 		add	r1, r7, #112
 134 0088 0B44     		add	r3, r3, r1
 135 008a 43F83C2C 		str	r2, [r3, #-60]	@ float
 136              	.LBE3:
  24:voltages.c    ****     {
 137              		.loc 1 24 0 discriminator 2
 138 008e 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 139 0092 0133     		adds	r3, r3, #1
 140 0094 87F86F30 		strb	r3, [r7, #111]
 141              	.L2:
  24:voltages.c    ****     {
 142              		.loc 1 24 0 is_stmt 0 discriminator 1
 143 0098 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 144 009c 062B     		cmp	r3, #6
 145 009e C6D9     		bls	.L5
 146              	.LBE2:
  39:voltages.c    ****     }
  40:voltages.c    ****     
  41:voltages.c    ****     AMux_Stop();        // Disconnects all Analog Multiplex channels.
 147              		.loc 1 41 0 is_stmt 1
 148 00a0 FFF7FEFF 		bl	AMux_Start
  42:voltages.c    ****     
  43:voltages.c    ****     ADC_SaveConfig();   // Save the register configuration which are not retention.
 149              		.loc 1 43 0
 150 00a4 FFF7FEFF 		bl	ADC_SaveConfig
  44:voltages.c    ****     
  45:voltages.c    ****     ADC_Stop();         // Stops and powers down the ADC component and the internal clock if the ex
 151              		.loc 1 45 0
 152 00a8 FFF7FEFF 		bl	ADC_Stop
  46:voltages.c    ****     
  47:voltages.c    ****     Battery_Voltage_Enable_Write(OFF);  // Pulls Battery ADC pin low (turns it off).
 153              		.loc 1 47 0
 154 00ac 0020     		movs	r0, #0
 155 00ae FFF7FEFF 		bl	Battery_Voltage_Enable_Write
  48:voltages.c    ****     Pressure_Voltage_Enable_Write(OFF);  // Pulls Pressure Transducer ADC pin low (turns it off).
 156              		.loc 1 48 0
 157 00b2 0020     		movs	r0, #0
 158 00b4 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  49:voltages.c    ****     
  50:voltages.c    ****     float offset = channels[0] - 1.024; // Should be 1.024 exactly. BK saw an offset when measuring
 159              		.loc 1 50 0
 160 00b8 7B6B     		ldr	r3, [r7, #52]	@ float
 161 00ba 1846     		mov	r0, r3
 162 00bc FFF7FEFF 		bl	__aeabi_f2d
 163 00c0 1BA3     		adr	r3, .L7
 164 00c2 D3E90023 		ldrd	r2, [r3]
 165 00c6 FFF7FEFF 		bl	__aeabi_dsub
 166 00ca 0346     		mov	r3, r0
 167 00cc 0C46     		mov	r4, r1
 168 00ce 1846     		mov	r0, r3
 169 00d0 2146     		mov	r1, r4
 170 00d2 FFF7FEFF 		bl	__aeabi_d2f
 171 00d6 0346     		mov	r3, r0
 172 00d8 BB66     		str	r3, [r7, #104]	@ float
  51:voltages.c    ****     voltage.voltage_battery = (channels[ADC_MUX_VBAT] * 11) - offset; // Voltage divider is (1/10) 
 173              		.loc 1 51 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 5


 174 00da BB6B     		ldr	r3, [r7, #56]	@ float
 175 00dc 1649     		ldr	r1, .L7+8
 176 00de 1846     		mov	r0, r3
 177 00e0 FFF7FEFF 		bl	__aeabi_fmul
 178 00e4 0346     		mov	r3, r0
 179 00e6 B96E     		ldr	r1, [r7, #104]	@ float
 180 00e8 1846     		mov	r0, r3
 181 00ea FFF7FEFF 		bl	__aeabi_fsub
 182 00ee 0346     		mov	r3, r0
 183 00f0 FB64     		str	r3, [r7, #76]	@ float
  52:voltages.c    ****     voltage.voltage_solar = channels[ADC_MUX_VSOL] - offset; // Just want voltage here
 184              		.loc 1 52 0
 185 00f2 FB6B     		ldr	r3, [r7, #60]	@ float
 186 00f4 B96E     		ldr	r1, [r7, #104]	@ float
 187 00f6 1846     		mov	r0, r3
 188 00f8 FFF7FEFF 		bl	__aeabi_fsub
 189 00fc 0346     		mov	r3, r0
 190 00fe 3B65     		str	r3, [r7, #80]	@ float
  53:voltages.c    ****     // Voltage across sensor resistor gives 100mV drop for max current, which is 800mA
  54:voltages.c    ****     //voltage.voltage_charge_current = 0.1*(channels[ADC_MUX_CHRG] - voltage.voltage_battery);
  55:voltages.c    ****     voltage.voltage_pressure = channels[ADC_MUX_PRTRANS]; // Pressure transducer reading
 191              		.loc 1 55 0
 192 0100 3B6C     		ldr	r3, [r7, #64]	@ float
 193 0102 BB65     		str	r3, [r7, #88]	@ float
  56:voltages.c    **** 
  57:voltages.c    ****     // VALVE
  58:voltages.c    ****     voltage.voltage_valve_pos_blue = channels[ADC_MUX_Valve_POS_blue]; // blue wire reading (closed
 194              		.loc 1 58 0
 195 0104 7B6C     		ldr	r3, [r7, #68]	@ float
 196 0106 3B66     		str	r3, [r7, #96]	@ float
  59:voltages.c    ****     voltage.voltage_valve_pos_brown = channels[ADC_MUX_Valve_POS_brown]; // brown wire reading (ref
 197              		.loc 1 59 0
 198 0108 BB6C     		ldr	r3, [r7, #72]	@ float
 199 010a FB65     		str	r3, [r7, #92]	@ float
  60:voltages.c    ****     
  61:voltages.c    ****     voltage.valid = 1;
 200              		.loc 1 61 0
 201 010c 0123     		movs	r3, #1
 202 010e 87F86430 		strb	r3, [r7, #100]
  62:voltages.c    ****     
  63:voltages.c    **** 
  64:voltages.c    ****     return voltage;
 203              		.loc 1 64 0
 204 0112 7B68     		ldr	r3, [r7, #4]
 205 0114 1D46     		mov	r5, r3
 206 0116 07F14C04 		add	r4, r7, #76
 207 011a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 208 011c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 209 011e 94E80700 		ldmia	r4, {r0, r1, r2}
 210 0122 85E80700 		stmia	r5, {r0, r1, r2}
  65:voltages.c    **** }
 211              		.loc 1 65 0
 212 0126 7868     		ldr	r0, [r7, #4]
 213 0128 7037     		adds	r7, r7, #112
 214              		.cfi_def_cfa_offset 16
 215 012a BD46     		mov	sp, r7
 216              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 6


 217              		@ sp needed
 218 012c B0BD     		pop	{r4, r5, r7, pc}
 219              	.L8:
 220 012e 00BF     		.align	3
 221              	.L7:
 222 0130 FCA9F1D2 		.word	-755914244
 223 0134 4D62F03F 		.word	1072718413
 224 0138 00003041 		.word	1093664768
 225              		.cfi_endproc
 226              	.LFE64:
 227              		.size	voltage_take_readings, .-voltage_take_readings
 228              		.global	__aeabi_fdiv
 229              		.global	__aeabi_ddiv
 230              		.global	__aeabi_dmul
 231              		.section	.text.pressure_sensor_readings,"ax",%progbits
 232              		.align	2
 233              		.global	pressure_sensor_readings
 234              		.thumb
 235              		.thumb_func
 236              		.type	pressure_sensor_readings, %function
 237              	pressure_sensor_readings:
 238              	.LFB65:
  66:voltages.c    **** 
  67:voltages.c    **** // Function to take Pressure sensor readings and save them in the pressure_t datatype
  68:voltages.c    **** pressure_t pressure_sensor_readings(){
 239              		.loc 1 68 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 96
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243 0000 90B5     		push	{r4, r7, lr}
 244              		.cfi_def_cfa_offset 12
 245              		.cfi_offset 4, -12
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 99B0     		sub	sp, sp, #100
 249              		.cfi_def_cfa_offset 112
 250 0004 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
 252 0006 7860     		str	r0, [r7, #4]
  69:voltages.c    ****     
  70:voltages.c    ****     pressure_t pressure;  // Create variable voltage of data structure voltage_t.
  71:voltages.c    ****     float channels[AMux_CHANNELS];
  72:voltages.c    ****     int32 readings[N_SAMPLES];  // Creates new int32 array called readings of size N_SAMPLES = 11
  73:voltages.c    ****     
  74:voltages.c    ****     AMux_Start();       // Start the Analog Multiplexer
 253              		.loc 1 74 0
 254 0008 FFF7FEFF 		bl	AMux_Start
  75:voltages.c    ****  
  76:voltages.c    ****     ADC_RestoreConfig();// Have to call this and save (See below). Otherwise ADC won't work through
 255              		.loc 1 76 0
 256 000c FFF7FEFF 		bl	ADC_RestoreConfig
  77:voltages.c    ****     
  78:voltages.c    ****     ADC_Start();        // Start the ADC
 257              		.loc 1 78 0
 258 0010 FFF7FEFF 		bl	ADC_Start
  79:voltages.c    ****     
  80:voltages.c    ****     AMux_Select(ADC_MUX_PRTRANS); // This functions first disconnects all channels then connects th
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 7


 259              		.loc 1 80 0
 260 0014 0320     		movs	r0, #3
 261 0016 FFF7FEFF 		bl	AMux_Select
 262              	.LBB5:
  81:voltages.c    ****     
  82:voltages.c    ****     for(uint16 i=0; i< N_SAMPLES; i++){   
 263              		.loc 1 82 0
 264 001a 0023     		movs	r3, #0
 265 001c A7F85E30 		strh	r3, [r7, #94]	@ movhi
 266 0020 0FE0     		b	.L10
 267              	.L11:
  83:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 268              		.loc 1 83 0 discriminator 3
 269 0022 B7F85E40 		ldrh	r4, [r7, #94]
 270 0026 FFF7FEFF 		bl	ADC_Read32
 271 002a 0246     		mov	r2, r0
 272 002c A300     		lsls	r3, r4, #2
 273 002e 07F16001 		add	r1, r7, #96
 274 0032 0B44     		add	r3, r3, r1
 275 0034 43F8582C 		str	r2, [r3, #-88]
  82:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 276              		.loc 1 82 0 discriminator 3
 277 0038 B7F85E30 		ldrh	r3, [r7, #94]
 278 003c 0133     		adds	r3, r3, #1
 279 003e A7F85E30 		strh	r3, [r7, #94]	@ movhi
 280              	.L10:
  82:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 281              		.loc 1 82 0 is_stmt 0 discriminator 1
 282 0042 B7F85E30 		ldrh	r3, [r7, #94]
 283 0046 0A2B     		cmp	r3, #10
 284 0048 EBD9     		bls	.L11
 285              	.LBE5:
  84:voltages.c    ****     }
  85:voltages.c    ****     
  86:voltages.c    ****     // Converts the ADC output to Volts as a floating point number. 
  87:voltages.c    ****     // Get the median of readings and return that.
  88:voltages.c    ****     pressure.pressure_voltage_off = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Ge
 286              		.loc 1 88 0 is_stmt 1
 287 004a 07F10803 		add	r3, r7, #8
 288 004e 0B21     		movs	r1, #11
 289 0050 1846     		mov	r0, r3
 290 0052 FFF7FEFF 		bl	find_median32
 291 0056 0346     		mov	r3, r0
 292 0058 1846     		mov	r0, r3
 293 005a FFF7FEFF 		bl	ADC_CountsTo_Volts
 294 005e 0346     		mov	r3, r0
 295 0060 3B65     		str	r3, [r7, #80]	@ float
  89:voltages.c    ****     pressure.pressure_voltage_off = floorf(pressure.pressure_voltage_off * 100) / 100;
 296              		.loc 1 89 0
 297 0062 3B6D     		ldr	r3, [r7, #80]	@ float
 298 0064 4849     		ldr	r1, .L15+16
 299 0066 1846     		mov	r0, r3
 300 0068 FFF7FEFF 		bl	__aeabi_fmul
 301 006c 0346     		mov	r3, r0
 302 006e 1846     		mov	r0, r3
 303 0070 FFF7FEFF 		bl	floorf
 304 0074 0346     		mov	r3, r0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 8


 305 0076 4449     		ldr	r1, .L15+16
 306 0078 1846     		mov	r0, r3
 307 007a FFF7FEFF 		bl	__aeabi_fdiv
 308 007e 0346     		mov	r3, r0
 309 0080 3B65     		str	r3, [r7, #80]	@ float
  90:voltages.c    ****     
  91:voltages.c    ****     Pressure_Voltage_Enable_Write(ON);  // Flip on the Pressure Transducer Voltage ADC pin high (tu
 310              		.loc 1 91 0
 311 0082 0120     		movs	r0, #1
 312 0084 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  92:voltages.c    ****     
  93:voltages.c    **** 	CyDelay(10u);	    // 10 seconds delay to give time to flip on ADC pin.
 313              		.loc 1 93 0
 314 0088 0A20     		movs	r0, #10
 315 008a FFF7FEFF 		bl	CyDelay
 316              	.LBB6:
  94:voltages.c    ****   
  95:voltages.c    ****     for(uint16 i=0; i< N_SAMPLES; i++){   
 317              		.loc 1 95 0
 318 008e 0023     		movs	r3, #0
 319 0090 A7F85C30 		strh	r3, [r7, #92]	@ movhi
 320 0094 0FE0     		b	.L12
 321              	.L13:
  96:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 322              		.loc 1 96 0 discriminator 3
 323 0096 B7F85C40 		ldrh	r4, [r7, #92]
 324 009a FFF7FEFF 		bl	ADC_Read32
 325 009e 0246     		mov	r2, r0
 326 00a0 A300     		lsls	r3, r4, #2
 327 00a2 07F16001 		add	r1, r7, #96
 328 00a6 0B44     		add	r3, r3, r1
 329 00a8 43F8582C 		str	r2, [r3, #-88]
  95:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 330              		.loc 1 95 0 discriminator 3
 331 00ac B7F85C30 		ldrh	r3, [r7, #92]
 332 00b0 0133     		adds	r3, r3, #1
 333 00b2 A7F85C30 		strh	r3, [r7, #92]	@ movhi
 334              	.L12:
  95:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 335              		.loc 1 95 0 is_stmt 0 discriminator 1
 336 00b6 B7F85C30 		ldrh	r3, [r7, #92]
 337 00ba 0A2B     		cmp	r3, #10
 338 00bc EBD9     		bls	.L13
 339              	.LBE6:
  97:voltages.c    ****     }
  98:voltages.c    ****     
  99:voltages.c    ****     // Converts the ADC output to Volts as a floating point number. 
 100:voltages.c    ****     // Get the median of readings and return that.
 101:voltages.c    ****     pressure.pressure_voltage_on = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Get
 340              		.loc 1 101 0 is_stmt 1
 341 00be 07F10803 		add	r3, r7, #8
 342 00c2 0B21     		movs	r1, #11
 343 00c4 1846     		mov	r0, r3
 344 00c6 FFF7FEFF 		bl	find_median32
 345 00ca 0346     		mov	r3, r0
 346 00cc 1846     		mov	r0, r3
 347 00ce FFF7FEFF 		bl	ADC_CountsTo_Volts
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 9


 348 00d2 0346     		mov	r3, r0
 349 00d4 FB64     		str	r3, [r7, #76]	@ float
 102:voltages.c    ****     
 103:voltages.c    ****     AMux_Stop();        // Disconnects all Analog Multiplex channels.
 350              		.loc 1 103 0
 351 00d6 FFF7FEFF 		bl	AMux_Start
 104:voltages.c    ****     
 105:voltages.c    ****     ADC_SaveConfig();   // Save the register configuration which are not retention.
 352              		.loc 1 105 0
 353 00da FFF7FEFF 		bl	ADC_SaveConfig
 106:voltages.c    ****     
 107:voltages.c    ****     ADC_Stop();         // Stops and powers down the ADC component and the internal clock if the ex
 354              		.loc 1 107 0
 355 00de FFF7FEFF 		bl	ADC_Stop
 108:voltages.c    ****     
 109:voltages.c    ****     Pressure_Voltage_Enable_Write(OFF);  // Pulls Pressure Transducer ADC pin low (turns it off).
 356              		.loc 1 109 0
 357 00e2 0020     		movs	r0, #0
 358 00e4 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 110:voltages.c    ****     // Calculate the pressure transducer current output.
 111:voltages.c    ****     // i=V/R where i= currrent, V= voltage, and R= resistance= 150 ohms. Divide by 1000 to get curr
 112:voltages.c    ****     // Should fall between 4 and 20mA
 113:voltages.c    ****     pressure.pressure_current = (pressure.pressure_voltage_on/ 150.0)*1000; 
 359              		.loc 1 113 0
 360 00e8 FB6C     		ldr	r3, [r7, #76]	@ float
 361 00ea 1846     		mov	r0, r3
 362 00ec FFF7FEFF 		bl	__aeabi_f2d
 363 00f0 21A3     		adr	r3, .L15
 364 00f2 D3E90023 		ldrd	r2, [r3]
 365 00f6 FFF7FEFF 		bl	__aeabi_ddiv
 366 00fa 0346     		mov	r3, r0
 367 00fc 0C46     		mov	r4, r1
 368 00fe 1846     		mov	r0, r3
 369 0100 2146     		mov	r1, r4
 370 0102 4FF00002 		mov	r2, #0
 371 0106 214B     		ldr	r3, .L15+20
 372 0108 FFF7FEFF 		bl	__aeabi_dmul
 373 010c 0346     		mov	r3, r0
 374 010e 0C46     		mov	r4, r1
 375 0110 1846     		mov	r0, r3
 376 0112 2146     		mov	r1, r4
 377 0114 FFF7FEFF 		bl	__aeabi_d2f
 378 0118 0346     		mov	r3, r0
 379 011a 7B65     		str	r3, [r7, #84]	@ float
 114:voltages.c    ****     // Calculate the estimated depth from the pressure transducer.
 115:voltages.c    ****     // d = (Dmax*V/0.016R) - (Dmax/4) where d= depth, V= voltage, R= resistance= 150 ohms, Dmax = s
 116:voltages.c    ****     // Should fall between 0 and 10 ft
 117:voltages.c    ****     pressure.pressure_depth = ((10.0*pressure.pressure_voltage_on)/(0.016*150))-(10.0/4.0);   
 380              		.loc 1 117 0
 381 011c FB6C     		ldr	r3, [r7, #76]	@ float
 382 011e 1846     		mov	r0, r3
 383 0120 FFF7FEFF 		bl	__aeabi_f2d
 384 0124 4FF00002 		mov	r2, #0
 385 0128 194B     		ldr	r3, .L15+24
 386 012a FFF7FEFF 		bl	__aeabi_dmul
 387 012e 0346     		mov	r3, r0
 388 0130 0C46     		mov	r4, r1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 10


 389 0132 1846     		mov	r0, r3
 390 0134 2146     		mov	r1, r4
 391 0136 12A3     		adr	r3, .L15+8
 392 0138 D3E90023 		ldrd	r2, [r3]
 393 013c FFF7FEFF 		bl	__aeabi_ddiv
 394 0140 0346     		mov	r3, r0
 395 0142 0C46     		mov	r4, r1
 396 0144 1846     		mov	r0, r3
 397 0146 2146     		mov	r1, r4
 398 0148 4FF00002 		mov	r2, #0
 399 014c 114B     		ldr	r3, .L15+28
 400 014e FFF7FEFF 		bl	__aeabi_dsub
 401 0152 0346     		mov	r3, r0
 402 0154 0C46     		mov	r4, r1
 403 0156 1846     		mov	r0, r3
 404 0158 2146     		mov	r1, r4
 405 015a FFF7FEFF 		bl	__aeabi_d2f
 406 015e 0346     		mov	r3, r0
 407 0160 BB65     		str	r3, [r7, #88]	@ float
 118:voltages.c    ****     return pressure;
 408              		.loc 1 118 0
 409 0162 7B68     		ldr	r3, [r7, #4]
 410 0164 1C46     		mov	r4, r3
 411 0166 07F14C03 		add	r3, r7, #76
 412 016a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 413 016c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 119:voltages.c    **** }
 414              		.loc 1 119 0
 415 0170 7868     		ldr	r0, [r7, #4]
 416 0172 6437     		adds	r7, r7, #100
 417              		.cfi_def_cfa_offset 12
 418 0174 BD46     		mov	sp, r7
 419              		.cfi_def_cfa_register 13
 420              		@ sp needed
 421 0176 90BD     		pop	{r4, r7, pc}
 422              	.L16:
 423              		.align	3
 424              	.L15:
 425 0178 00000000 		.word	0
 426 017c 00C06240 		.word	1080213504
 427 0180 33333333 		.word	858993459
 428 0184 33330340 		.word	1073951539
 429 0188 0000C842 		.word	1120403456
 430 018c 00408F40 		.word	1083129856
 431 0190 00002440 		.word	1076101120
 432 0194 00000440 		.word	1074003968
 433              		.cfi_endproc
 434              	.LFE65:
 435              		.size	pressure_sensor_readings, .-pressure_sensor_readings
 436              		.section	.text.pressure_calculations,"ax",%progbits
 437              		.align	2
 438              		.global	pressure_calculations
 439              		.thumb
 440              		.thumb_func
 441              		.type	pressure_calculations, %function
 442              	pressure_calculations:
 443              	.LFB66:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 11


 120:voltages.c    **** 
 121:voltages.c    **** // Function to calculate the pressure transducer current and depth estimate.
 122:voltages.c    **** pressure_t pressure_calculations(voltage_t voltage){
 444              		.loc 1 122 0
 445              		.cfi_startproc
 446              		@ args = 32, pretend = 16, frame = 24
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448 0000 84B0     		sub	sp, sp, #16
 449              		.cfi_def_cfa_offset 16
 450 0002 90B5     		push	{r4, r7, lr}
 451              		.cfi_def_cfa_offset 28
 452              		.cfi_offset 4, -28
 453              		.cfi_offset 7, -24
 454              		.cfi_offset 14, -20
 455 0004 87B0     		sub	sp, sp, #28
 456              		.cfi_def_cfa_offset 56
 457 0006 00AF     		add	r7, sp, #0
 458              		.cfi_def_cfa_register 7
 459 0008 7860     		str	r0, [r7, #4]
 460 000a 07F12C00 		add	r0, r7, #44
 461 000e 80E80E00 		stmia	r0, {r1, r2, r3}
 123:voltages.c    ****     // Create variable pressure of data structure type pressure_t.
 124:voltages.c    ****     pressure_t pressure;
 125:voltages.c    ****     
 126:voltages.c    ****     // Calculate the pressure transducer current output.
 127:voltages.c    ****     // i=V/R where i= currrent, V= voltage, and R= resistance= 150 ohms. Divide by 1000 to get curr
 128:voltages.c    ****     // Should fall between 4 and 20mA
 129:voltages.c    ****     pressure.pressure_current = (voltage.voltage_pressure/ 150.0)/1000; 
 462              		.loc 1 129 0
 463 0012 BB6B     		ldr	r3, [r7, #56]	@ float
 464 0014 1846     		mov	r0, r3
 465 0016 FFF7FEFF 		bl	__aeabi_f2d
 466 001a 23A3     		adr	r3, .L19
 467 001c D3E90023 		ldrd	r2, [r3]
 468 0020 FFF7FEFF 		bl	__aeabi_ddiv
 469 0024 0346     		mov	r3, r0
 470 0026 0C46     		mov	r4, r1
 471 0028 1846     		mov	r0, r3
 472 002a 2146     		mov	r1, r4
 473 002c 4FF00002 		mov	r2, #0
 474 0030 214B     		ldr	r3, .L19+16
 475 0032 FFF7FEFF 		bl	__aeabi_ddiv
 476 0036 0346     		mov	r3, r0
 477 0038 0C46     		mov	r4, r1
 478 003a 1846     		mov	r0, r3
 479 003c 2146     		mov	r1, r4
 480 003e FFF7FEFF 		bl	__aeabi_d2f
 481 0042 0346     		mov	r3, r0
 482 0044 3B61     		str	r3, [r7, #16]	@ float
 130:voltages.c    ****     // Calculate the estimated depth from the pressure transducer.
 131:voltages.c    ****     // d = (Dmax*V/0.016R) - (Dmax/4) where d= depth, V= voltage, R= resistance= 150 ohms, Dmax = s
 132:voltages.c    ****     // Should fall between 0 and 10 ft
 133:voltages.c    ****     pressure.pressure_depth = ((10.0*voltage.voltage_pressure)/(0.016*150))-(10.0/4.0); 
 483              		.loc 1 133 0
 484 0046 BB6B     		ldr	r3, [r7, #56]	@ float
 485 0048 1846     		mov	r0, r3
 486 004a FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 12


 487 004e 4FF00002 		mov	r2, #0
 488 0052 1A4B     		ldr	r3, .L19+20
 489 0054 FFF7FEFF 		bl	__aeabi_dmul
 490 0058 0346     		mov	r3, r0
 491 005a 0C46     		mov	r4, r1
 492 005c 1846     		mov	r0, r3
 493 005e 2146     		mov	r1, r4
 494 0060 13A3     		adr	r3, .L19+8
 495 0062 D3E90023 		ldrd	r2, [r3]
 496 0066 FFF7FEFF 		bl	__aeabi_ddiv
 497 006a 0346     		mov	r3, r0
 498 006c 0C46     		mov	r4, r1
 499 006e 1846     		mov	r0, r3
 500 0070 2146     		mov	r1, r4
 501 0072 4FF00002 		mov	r2, #0
 502 0076 124B     		ldr	r3, .L19+24
 503 0078 FFF7FEFF 		bl	__aeabi_dsub
 504 007c 0346     		mov	r3, r0
 505 007e 0C46     		mov	r4, r1
 506 0080 1846     		mov	r0, r3
 507 0082 2146     		mov	r1, r4
 508 0084 FFF7FEFF 		bl	__aeabi_d2f
 509 0088 0346     		mov	r3, r0
 510 008a 7B61     		str	r3, [r7, #20]	@ float
 134:voltages.c    ****     return pressure;
 511              		.loc 1 134 0
 512 008c 7B68     		ldr	r3, [r7, #4]
 513 008e 1C46     		mov	r4, r3
 514 0090 07F10803 		add	r3, r7, #8
 515 0094 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 516 0096 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 135:voltages.c    **** }
 517              		.loc 1 135 0
 518 009a 7868     		ldr	r0, [r7, #4]
 519 009c 1C37     		adds	r7, r7, #28
 520              		.cfi_def_cfa_offset 28
 521 009e BD46     		mov	sp, r7
 522              		.cfi_def_cfa_register 13
 523              		@ sp needed
 524 00a0 BDE89040 		pop	{r4, r7, lr}
 525              		.cfi_restore 14
 526              		.cfi_restore 7
 527              		.cfi_restore 4
 528              		.cfi_def_cfa_offset 16
 529 00a4 04B0     		add	sp, sp, #16
 530              		.cfi_def_cfa_offset 0
 531 00a6 7047     		bx	lr
 532              	.L20:
 533              		.align	3
 534              	.L19:
 535 00a8 00000000 		.word	0
 536 00ac 00C06240 		.word	1080213504
 537 00b0 33333333 		.word	858993459
 538 00b4 33330340 		.word	1073951539
 539 00b8 00408F40 		.word	1083129856
 540 00bc 00002440 		.word	1076101120
 541 00c0 00000440 		.word	1074003968
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 13


 542              		.cfi_endproc
 543              	.LFE66:
 544              		.size	pressure_calculations, .-pressure_calculations
 545              		.section	.text.sort32,"ax",%progbits
 546              		.align	2
 547              		.global	sort32
 548              		.thumb
 549              		.thumb_func
 550              		.type	sort32, %function
 551              	sort32:
 552              	.LFB67:
 136:voltages.c    ****     
 137:voltages.c    ****     
 138:voltages.c    **** 
 139:voltages.c    **** // Function to sort the elements in the level readings array
 140:voltages.c    **** void sort32(int32 a[],int32 n) { 
 553              		.loc 1 140 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 16
 556              		@ frame_needed = 1, uses_anonymous_args = 0
 557 0000 80B5     		push	{r7, lr}
 558              		.cfi_def_cfa_offset 8
 559              		.cfi_offset 7, -8
 560              		.cfi_offset 14, -4
 561 0002 84B0     		sub	sp, sp, #16
 562              		.cfi_def_cfa_offset 24
 563 0004 00AF     		add	r7, sp, #0
 564              		.cfi_def_cfa_register 7
 565 0006 7860     		str	r0, [r7, #4]
 566 0008 3960     		str	r1, [r7]
 141:voltages.c    ****    int32 i,j;
 142:voltages.c    **** 
 143:voltages.c    ****    for(i = 0;i < n-1;i++) {
 567              		.loc 1 143 0
 568 000a 0023     		movs	r3, #0
 569 000c FB60     		str	r3, [r7, #12]
 570 000e 28E0     		b	.L22
 571              	.L26:
 144:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 572              		.loc 1 144 0
 573 0010 0023     		movs	r3, #0
 574 0012 BB60     		str	r3, [r7, #8]
 575 0014 1BE0     		b	.L23
 576              	.L25:
 145:voltages.c    ****          if(a[j] > a[j+1])
 577              		.loc 1 145 0
 578 0016 BB68     		ldr	r3, [r7, #8]
 579 0018 9B00     		lsls	r3, r3, #2
 580 001a 7A68     		ldr	r2, [r7, #4]
 581 001c 1344     		add	r3, r3, r2
 582 001e 1A68     		ldr	r2, [r3]
 583 0020 BB68     		ldr	r3, [r7, #8]
 584 0022 0133     		adds	r3, r3, #1
 585 0024 9B00     		lsls	r3, r3, #2
 586 0026 7968     		ldr	r1, [r7, #4]
 587 0028 0B44     		add	r3, r3, r1
 588 002a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 14


 589 002c 9A42     		cmp	r2, r3
 590 002e 0BDD     		ble	.L24
 146:voltages.c    ****             swap32(&a[j],&a[j+1]);  // Swap the address of a[j] and a[j+1]
 591              		.loc 1 146 0
 592 0030 BB68     		ldr	r3, [r7, #8]
 593 0032 9B00     		lsls	r3, r3, #2
 594 0034 7A68     		ldr	r2, [r7, #4]
 595 0036 D018     		adds	r0, r2, r3
 596 0038 BB68     		ldr	r3, [r7, #8]
 597 003a 0133     		adds	r3, r3, #1
 598 003c 9B00     		lsls	r3, r3, #2
 599 003e 7A68     		ldr	r2, [r7, #4]
 600 0040 1344     		add	r3, r3, r2
 601 0042 1946     		mov	r1, r3
 602 0044 FFF7FEFF 		bl	swap32
 603              	.L24:
 144:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 604              		.loc 1 144 0 discriminator 2
 605 0048 BB68     		ldr	r3, [r7, #8]
 606 004a 0133     		adds	r3, r3, #1
 607 004c BB60     		str	r3, [r7, #8]
 608              	.L23:
 144:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 609              		.loc 1 144 0 is_stmt 0 discriminator 1
 610 004e 3A68     		ldr	r2, [r7]
 611 0050 FB68     		ldr	r3, [r7, #12]
 612 0052 D31A     		subs	r3, r2, r3
 613 0054 5A1E     		subs	r2, r3, #1
 614 0056 BB68     		ldr	r3, [r7, #8]
 615 0058 9A42     		cmp	r2, r3
 616 005a DCDC     		bgt	.L25
 143:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 617              		.loc 1 143 0 is_stmt 1 discriminator 2
 618 005c FB68     		ldr	r3, [r7, #12]
 619 005e 0133     		adds	r3, r3, #1
 620 0060 FB60     		str	r3, [r7, #12]
 621              	.L22:
 143:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 622              		.loc 1 143 0 is_stmt 0 discriminator 1
 623 0062 3B68     		ldr	r3, [r7]
 624 0064 5A1E     		subs	r2, r3, #1
 625 0066 FB68     		ldr	r3, [r7, #12]
 626 0068 9A42     		cmp	r2, r3
 627 006a D1DC     		bgt	.L26
 147:voltages.c    ****       }
 148:voltages.c    ****    }
 149:voltages.c    **** }
 628              		.loc 1 149 0 is_stmt 1
 629 006c 00BF     		nop
 630 006e 1037     		adds	r7, r7, #16
 631              		.cfi_def_cfa_offset 8
 632 0070 BD46     		mov	sp, r7
 633              		.cfi_def_cfa_register 13
 634              		@ sp needed
 635 0072 80BD     		pop	{r7, pc}
 636              		.cfi_endproc
 637              	.LFE67:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 15


 638              		.size	sort32, .-sort32
 639              		.section	.text.swap32,"ax",%progbits
 640              		.align	2
 641              		.global	swap32
 642              		.thumb
 643              		.thumb_func
 644              		.type	swap32, %function
 645              	swap32:
 646              	.LFB68:
 150:voltages.c    **** 
 151:voltages.c    **** // Function to swap elements in the level readings array in order to sort them
 152:voltages.c    **** void swap32(int32 *p,int32 *q){
 647              		.loc 1 152 0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 16
 650              		@ frame_needed = 1, uses_anonymous_args = 0
 651              		@ link register save eliminated.
 652 0000 80B4     		push	{r7}
 653              		.cfi_def_cfa_offset 4
 654              		.cfi_offset 7, -4
 655 0002 85B0     		sub	sp, sp, #20
 656              		.cfi_def_cfa_offset 24
 657 0004 00AF     		add	r7, sp, #0
 658              		.cfi_def_cfa_register 7
 659 0006 7860     		str	r0, [r7, #4]
 660 0008 3960     		str	r1, [r7]
 153:voltages.c    ****    int32 t;
 154:voltages.c    ****    
 155:voltages.c    ****    t=*p; 
 661              		.loc 1 155 0
 662 000a 7B68     		ldr	r3, [r7, #4]
 663 000c 1B68     		ldr	r3, [r3]
 664 000e FB60     		str	r3, [r7, #12]
 156:voltages.c    ****    *p=*q; 
 665              		.loc 1 156 0
 666 0010 3B68     		ldr	r3, [r7]
 667 0012 1A68     		ldr	r2, [r3]
 668 0014 7B68     		ldr	r3, [r7, #4]
 669 0016 1A60     		str	r2, [r3]
 157:voltages.c    ****    *q=t;
 670              		.loc 1 157 0
 671 0018 3B68     		ldr	r3, [r7]
 672 001a FA68     		ldr	r2, [r7, #12]
 673 001c 1A60     		str	r2, [r3]
 158:voltages.c    **** }
 674              		.loc 1 158 0
 675 001e 00BF     		nop
 676 0020 1437     		adds	r7, r7, #20
 677              		.cfi_def_cfa_offset 4
 678 0022 BD46     		mov	sp, r7
 679              		.cfi_def_cfa_register 13
 680              		@ sp needed
 681 0024 80BC     		pop	{r7}
 682              		.cfi_restore 7
 683              		.cfi_def_cfa_offset 0
 684 0026 7047     		bx	lr
 685              		.cfi_endproc
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 16


 686              	.LFE68:
 687              		.size	swap32, .-swap32
 688              		.global	__aeabi_i2d
 689              		.global	__aeabi_d2iz
 690              		.section	.text.find_median32,"ax",%progbits
 691              		.align	2
 692              		.global	find_median32
 693              		.thumb
 694              		.thumb_func
 695              		.type	find_median32, %function
 696              	find_median32:
 697              	.LFB69:
 159:voltages.c    **** 
 160:voltages.c    **** // Function to calculate the median of the array, after array is sorted
 161:voltages.c    **** int32 find_median32(int32 array[] , int32 n)
 162:voltages.c    **** {
 698              		.loc 1 162 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 16
 701              		@ frame_needed = 1, uses_anonymous_args = 0
 702 0000 90B5     		push	{r4, r7, lr}
 703              		.cfi_def_cfa_offset 12
 704              		.cfi_offset 4, -12
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 85B0     		sub	sp, sp, #20
 708              		.cfi_def_cfa_offset 32
 709 0004 00AF     		add	r7, sp, #0
 710              		.cfi_def_cfa_register 7
 711 0006 7860     		str	r0, [r7, #4]
 712 0008 3960     		str	r1, [r7]
 163:voltages.c    ****     int32 median=0;
 713              		.loc 1 163 0
 714 000a 0023     		movs	r3, #0
 715 000c FB60     		str	r3, [r7, #12]
 164:voltages.c    ****     sort32(array,n);
 716              		.loc 1 164 0
 717 000e 3968     		ldr	r1, [r7]
 718 0010 7868     		ldr	r0, [r7, #4]
 719 0012 FFF7FEFF 		bl	sort32
 165:voltages.c    ****     
 166:voltages.c    ****     // If number of elements are even
 167:voltages.c    ****     if(n%2 == 0)
 720              		.loc 1 167 0
 721 0016 3B68     		ldr	r3, [r7]
 722 0018 03F00103 		and	r3, r3, #1
 723 001c 002B     		cmp	r3, #0
 724 001e 23D1     		bne	.L29
 168:voltages.c    ****         // Median is the average of the  two middle sorted numbers
 169:voltages.c    ****         median = (array[(n-1)/2] + array[n/2])/2.0;
 725              		.loc 1 169 0
 726 0020 3B68     		ldr	r3, [r7]
 727 0022 013B     		subs	r3, r3, #1
 728 0024 DA0F     		lsrs	r2, r3, #31
 729 0026 1344     		add	r3, r3, r2
 730 0028 5B10     		asrs	r3, r3, #1
 731 002a 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 17


 732 002c 7A68     		ldr	r2, [r7, #4]
 733 002e 1344     		add	r3, r3, r2
 734 0030 1A68     		ldr	r2, [r3]
 735 0032 3B68     		ldr	r3, [r7]
 736 0034 D90F     		lsrs	r1, r3, #31
 737 0036 0B44     		add	r3, r3, r1
 738 0038 5B10     		asrs	r3, r3, #1
 739 003a 9B00     		lsls	r3, r3, #2
 740 003c 7968     		ldr	r1, [r7, #4]
 741 003e 0B44     		add	r3, r3, r1
 742 0040 1B68     		ldr	r3, [r3]
 743 0042 1344     		add	r3, r3, r2
 744 0044 1846     		mov	r0, r3
 745 0046 FFF7FEFF 		bl	__aeabi_i2d
 746 004a 4FF00002 		mov	r2, #0
 747 004e 4FF08043 		mov	r3, #1073741824
 748 0052 FFF7FEFF 		bl	__aeabi_ddiv
 749 0056 0346     		mov	r3, r0
 750 0058 0C46     		mov	r4, r1
 751 005a 1846     		mov	r0, r3
 752 005c 2146     		mov	r1, r4
 753 005e FFF7FEFF 		bl	__aeabi_d2iz
 754 0062 0346     		mov	r3, r0
 755 0064 FB60     		str	r3, [r7, #12]
 756 0066 08E0     		b	.L30
 757              	.L29:
 170:voltages.c    ****     // If number of elements are odd
 171:voltages.c    ****     else
 172:voltages.c    ****         // Median is the the middle sorted number. 
 173:voltages.c    ****         median = array[n/2];
 758              		.loc 1 173 0
 759 0068 3B68     		ldr	r3, [r7]
 760 006a DA0F     		lsrs	r2, r3, #31
 761 006c 1344     		add	r3, r3, r2
 762 006e 5B10     		asrs	r3, r3, #1
 763 0070 9B00     		lsls	r3, r3, #2
 764 0072 7A68     		ldr	r2, [r7, #4]
 765 0074 1344     		add	r3, r3, r2
 766 0076 1B68     		ldr	r3, [r3]
 767 0078 FB60     		str	r3, [r7, #12]
 768              	.L30:
 174:voltages.c    ****     
 175:voltages.c    ****     return median;
 769              		.loc 1 175 0
 770 007a FB68     		ldr	r3, [r7, #12]
 176:voltages.c    **** }
 771              		.loc 1 176 0
 772 007c 1846     		mov	r0, r3
 773 007e 1437     		adds	r7, r7, #20
 774              		.cfi_def_cfa_offset 12
 775 0080 BD46     		mov	sp, r7
 776              		.cfi_def_cfa_register 13
 777              		@ sp needed
 778 0082 90BD     		pop	{r4, r7, pc}
 779              		.cfi_endproc
 780              	.LFE69:
 781              		.size	find_median32, .-find_median32
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 18


 782              		.section	.rodata
 783              		.align	2
 784              	.LC0:
 785 0000 54455354 		.ascii	"TEST_ANALOG_VOLTAGES\000"
 785      5F414E41 
 785      4C4F475F 
 785      564F4C54 
 785      41474553 
 786 0015 000000   		.align	2
 787              	.LC1:
 788 0018 56424154 		.ascii	"VBAT=%.3f,VSOL=%.3f,CHRG=%.3f\000"
 788      3D252E33 
 788      662C5653 
 788      4F4C3D25 
 788      2E33662C 
 789              		.section	.text.voltages_test,"ax",%progbits
 790              		.align	2
 791              		.global	voltages_test
 792              		.thumb
 793              		.thumb_func
 794              		.type	voltages_test, %function
 795              	voltages_test:
 796              	.LFB70:
 177:voltages.c    **** 
 178:voltages.c    **** // Test the voltage readings
 179:voltages.c    **** test_t voltages_test(){
 797              		.loc 1 179 0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 424
 800              		@ frame_needed = 1, uses_anonymous_args = 0
 801 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 802              		.cfi_def_cfa_offset 24
 803              		.cfi_offset 4, -24
 804              		.cfi_offset 5, -20
 805              		.cfi_offset 7, -16
 806              		.cfi_offset 8, -12
 807              		.cfi_offset 9, -8
 808              		.cfi_offset 14, -4
 809 0004 F0B0     		sub	sp, sp, #448
 810              		.cfi_def_cfa_offset 472
 811 0006 06AF     		add	r7, sp, #24
 812              		.cfi_def_cfa 7, 448
 813 0008 3B1D     		adds	r3, r7, #4
 814 000a 1860     		str	r0, [r3]
 180:voltages.c    ****     // Create variable test of the data structure test_t
 181:voltages.c    ****     test_t test;
 182:voltages.c    ****     test.status = 0;
 815              		.loc 1 182 0
 816 000c 07F12403 		add	r3, r7, #36
 817 0010 0022     		movs	r2, #0
 818 0012 83F88020 		strb	r2, [r3, #128]
 183:voltages.c    ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_ANALOG_VOLTAGES");
 819              		.loc 1 183 0
 820 0016 07F12403 		add	r3, r7, #36
 821 001a 264A     		ldr	r2, .L34
 822 001c 1C46     		mov	r4, r3
 823 001e 1546     		mov	r5, r2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 19


 824 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 825 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 826 0024 95E80300 		ldmia	r5, {r0, r1}
 827 0028 2060     		str	r0, [r4]
 828 002a 0434     		adds	r4, r4, #4
 829 002c 2170     		strb	r1, [r4]
 184:voltages.c    ****     
 185:voltages.c    ****     voltage_t voltage = voltage_take_readings();
 830              		.loc 1 185 0
 831 002e 07F10803 		add	r3, r7, #8
 832 0032 1846     		mov	r0, r3
 833 0034 FFF7FEFF 		bl	voltage_take_readings
 186:voltages.c    ****     
 187:voltages.c    ****     //do some checks here if you want the test to meet some voltage requirement
 188:voltages.c    ****     
 189:voltages.c    ****     snprintf(test.reason,sizeof(test.reason),"VBAT=%.3f,VSOL=%.3f,CHRG=%.3f",
 190:voltages.c    ****             voltage.voltage_battery,
 834              		.loc 1 190 0
 835 0038 07F10803 		add	r3, r7, #8
 836 003c 1B68     		ldr	r3, [r3]	@ float
 189:voltages.c    ****             voltage.voltage_battery,
 837              		.loc 1 189 0
 838 003e 1846     		mov	r0, r3
 839 0040 FFF7FEFF 		bl	__aeabi_f2d
 840 0044 0446     		mov	r4, r0
 841 0046 0D46     		mov	r5, r1
 191:voltages.c    ****             voltage.voltage_solar,
 842              		.loc 1 191 0
 843 0048 07F10803 		add	r3, r7, #8
 844 004c 5B68     		ldr	r3, [r3, #4]	@ float
 189:voltages.c    ****             voltage.voltage_battery,
 845              		.loc 1 189 0
 846 004e 1846     		mov	r0, r3
 847 0050 FFF7FEFF 		bl	__aeabi_f2d
 848 0054 8046     		mov	r8, r0
 849 0056 8946     		mov	r9, r1
 192:voltages.c    ****             voltage.voltage_charge_current);
 850              		.loc 1 192 0
 851 0058 07F10803 		add	r3, r7, #8
 852 005c 9B68     		ldr	r3, [r3, #8]	@ float
 189:voltages.c    ****             voltage.voltage_battery,
 853              		.loc 1 189 0
 854 005e 1846     		mov	r0, r3
 855 0060 FFF7FEFF 		bl	__aeabi_f2d
 856 0064 0246     		mov	r2, r0
 857 0066 0B46     		mov	r3, r1
 858 0068 07F12401 		add	r1, r7, #36
 859 006c 01F18100 		add	r0, r1, #129
 860 0070 CDE90423 		strd	r2, [sp, #16]
 861 0074 CDE90289 		strd	r8, [sp, #8]
 862 0078 CDE90045 		strd	r4, [sp]
 863 007c 0E4A     		ldr	r2, .L34+4
 864 007e 4FF48071 		mov	r1, #256
 865 0082 FFF7FEFF 		bl	snprintf
 193:voltages.c    ****     
 194:voltages.c    ****     test.status = 1;
 866              		.loc 1 194 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 20


 867 0086 07F12403 		add	r3, r7, #36
 868 008a 0122     		movs	r2, #1
 869 008c 83F88020 		strb	r2, [r3, #128]
 195:voltages.c    ****     
 196:voltages.c    ****     return test;
 870              		.loc 1 196 0
 871 0090 3B1D     		adds	r3, r7, #4
 872 0092 1A68     		ldr	r2, [r3]
 873 0094 07F12403 		add	r3, r7, #36
 874 0098 1046     		mov	r0, r2
 875 009a 1946     		mov	r1, r3
 876 009c 40F28113 		movw	r3, #385
 877 00a0 1A46     		mov	r2, r3
 878 00a2 FFF7FEFF 		bl	memcpy
 197:voltages.c    **** }
 879              		.loc 1 197 0
 880 00a6 3B1D     		adds	r3, r7, #4
 881 00a8 1868     		ldr	r0, [r3]
 882 00aa 07F5D477 		add	r7, r7, #424
 883              		.cfi_def_cfa_offset 24
 884 00ae BD46     		mov	sp, r7
 885              		.cfi_def_cfa_register 13
 886              		@ sp needed
 887 00b0 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 888              	.L35:
 889              		.align	2
 890              	.L34:
 891 00b4 00000000 		.word	.LC0
 892 00b8 18000000 		.word	.LC1
 893              		.cfi_endproc
 894              	.LFE70:
 895              		.size	voltages_test, .-voltages_test
 896              		.section	.rodata
 897 0036 0000     		.align	2
 898              	.LC2:
 899 0038 54455354 		.ascii	"TEST_PRESSURE_SENSOR\000"
 899      5F505245 
 899      53535552 
 899      455F5345 
 899      4E534F52 
 900 004d 000000   		.align	2
 901              	.LC3:
 902 0050 50524553 		.ascii	"PRESSURE=%.3f,PRES_CURRENT=%.3f,PRES_DEPTH=%.3f\000"
 902      53555245 
 902      3D252E33 
 902      662C5052 
 902      45535F43 
 903              		.global	__aeabi_fcmpeq
 904              		.section	.text.pressure_sensor_test,"ax",%progbits
 905              		.align	2
 906              		.global	pressure_sensor_test
 907              		.thumb
 908              		.thumb_func
 909              		.type	pressure_sensor_test, %function
 910              	pressure_sensor_test:
 911              	.LFB71:
 198:voltages.c    **** 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 21


 199:voltages.c    **** // Test the pressure sensor readings
 200:voltages.c    **** test_t pressure_sensor_test(){
 912              		.loc 1 200 0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 416
 915              		@ frame_needed = 1, uses_anonymous_args = 0
 916 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 917              		.cfi_def_cfa_offset 24
 918              		.cfi_offset 4, -24
 919              		.cfi_offset 5, -20
 920              		.cfi_offset 7, -16
 921              		.cfi_offset 8, -12
 922              		.cfi_offset 9, -8
 923              		.cfi_offset 14, -4
 924 0004 EEB0     		sub	sp, sp, #440
 925              		.cfi_def_cfa_offset 464
 926 0006 06AF     		add	r7, sp, #24
 927              		.cfi_def_cfa 7, 440
 928 0008 3B1D     		adds	r3, r7, #4
 929 000a 1860     		str	r0, [r3]
 201:voltages.c    ****     // Create variable test of the data structure test_t
 202:voltages.c    ****     test_t test;
 203:voltages.c    ****     test.status = 0;
 930              		.loc 1 203 0
 931 000c 07F11C03 		add	r3, r7, #28
 932 0010 0022     		movs	r2, #0
 933 0012 83F88020 		strb	r2, [r3, #128]
 204:voltages.c    ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_PRESSURE_SENSOR");
 934              		.loc 1 204 0
 935 0016 07F11C03 		add	r3, r7, #28
 936 001a 374A     		ldr	r2, .L41
 937 001c 1C46     		mov	r4, r3
 938 001e 1546     		mov	r5, r2
 939 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 940 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 941 0024 95E80300 		ldmia	r5, {r0, r1}
 942 0028 2060     		str	r0, [r4]
 943 002a 0434     		adds	r4, r4, #4
 944 002c 2170     		strb	r1, [r4]
 205:voltages.c    ****     
 206:voltages.c    ****     pressure_t pressure = pressure_sensor_readings();
 945              		.loc 1 206 0
 946 002e 07F10C03 		add	r3, r7, #12
 947 0032 1846     		mov	r0, r3
 948 0034 FFF7FEFF 		bl	pressure_sensor_readings
 207:voltages.c    ****     
 208:voltages.c    ****     //do some checks here if you want the test to meet some voltage requirement
 209:voltages.c    ****     
 210:voltages.c    ****     snprintf(test.reason,sizeof(test.reason),"PRESSURE=%.3f,PRES_CURRENT=%.3f,PRES_DEPTH=%.3f",
 211:voltages.c    ****             pressure.pressure_voltage_on,
 949              		.loc 1 211 0
 950 0038 07F10C03 		add	r3, r7, #12
 951 003c 1B68     		ldr	r3, [r3]	@ float
 210:voltages.c    ****             pressure.pressure_voltage_on,
 952              		.loc 1 210 0
 953 003e 1846     		mov	r0, r3
 954 0040 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 22


 955 0044 0446     		mov	r4, r0
 956 0046 0D46     		mov	r5, r1
 212:voltages.c    ****             pressure.pressure_current,
 957              		.loc 1 212 0
 958 0048 07F10C03 		add	r3, r7, #12
 959 004c 9B68     		ldr	r3, [r3, #8]	@ float
 210:voltages.c    ****             pressure.pressure_voltage_on,
 960              		.loc 1 210 0
 961 004e 1846     		mov	r0, r3
 962 0050 FFF7FEFF 		bl	__aeabi_f2d
 963 0054 8046     		mov	r8, r0
 964 0056 8946     		mov	r9, r1
 213:voltages.c    ****             pressure.pressure_depth);
 965              		.loc 1 213 0
 966 0058 07F10C03 		add	r3, r7, #12
 967 005c DB68     		ldr	r3, [r3, #12]	@ float
 210:voltages.c    ****             pressure.pressure_voltage_on,
 968              		.loc 1 210 0
 969 005e 1846     		mov	r0, r3
 970 0060 FFF7FEFF 		bl	__aeabi_f2d
 971 0064 0246     		mov	r2, r0
 972 0066 0B46     		mov	r3, r1
 973 0068 07F11C01 		add	r1, r7, #28
 974 006c 01F18100 		add	r0, r1, #129
 975 0070 CDE90423 		strd	r2, [sp, #16]
 976 0074 CDE90289 		strd	r8, [sp, #8]
 977 0078 CDE90045 		strd	r4, [sp]
 978 007c 1F4A     		ldr	r2, .L41+4
 979 007e 4FF48071 		mov	r1, #256
 980 0082 FFF7FEFF 		bl	snprintf
 214:voltages.c    ****     pressure.pressure_voltage_on = floorf(pressure.pressure_voltage_on * 100) / 100;
 981              		.loc 1 214 0
 982 0086 07F10C03 		add	r3, r7, #12
 983 008a 1B68     		ldr	r3, [r3]	@ float
 984 008c 1C49     		ldr	r1, .L41+8
 985 008e 1846     		mov	r0, r3
 986 0090 FFF7FEFF 		bl	__aeabi_fmul
 987 0094 0346     		mov	r3, r0
 988 0096 1846     		mov	r0, r3
 989 0098 FFF7FEFF 		bl	floorf
 990 009c 0346     		mov	r3, r0
 991 009e 1849     		ldr	r1, .L41+8
 992 00a0 1846     		mov	r0, r3
 993 00a2 FFF7FEFF 		bl	__aeabi_fdiv
 994 00a6 0346     		mov	r3, r0
 995 00a8 1A46     		mov	r2, r3
 996 00aa 07F10C03 		add	r3, r7, #12
 997 00ae 1A60     		str	r2, [r3]	@ float
 215:voltages.c    ****     if (pressure.pressure_voltage_off != pressure.pressure_voltage_on) {
 998              		.loc 1 215 0
 999 00b0 07F10C03 		add	r3, r7, #12
 1000 00b4 5A68     		ldr	r2, [r3, #4]	@ float
 1001 00b6 07F10C03 		add	r3, r7, #12
 1002 00ba 1B68     		ldr	r3, [r3]	@ float
 1003 00bc 1946     		mov	r1, r3
 1004 00be 1046     		mov	r0, r2
 1005 00c0 FFF7FEFF 		bl	__aeabi_fcmpeq
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 23


 1006 00c4 0346     		mov	r3, r0
 1007 00c6 002B     		cmp	r3, #0
 1008 00c8 04D1     		bne	.L37
 216:voltages.c    ****         test.status = 1;
 1009              		.loc 1 216 0
 1010 00ca 07F11C03 		add	r3, r7, #28
 1011 00ce 0122     		movs	r2, #1
 1012 00d0 83F88020 		strb	r2, [r3, #128]
 1013              	.L37:
 217:voltages.c    ****     }
 218:voltages.c    ****     
 219:voltages.c    ****     return test;
 1014              		.loc 1 219 0
 1015 00d4 3B1D     		adds	r3, r7, #4
 1016 00d6 1A68     		ldr	r2, [r3]
 1017 00d8 07F11C03 		add	r3, r7, #28
 1018 00dc 1046     		mov	r0, r2
 1019 00de 1946     		mov	r1, r3
 1020 00e0 40F28113 		movw	r3, #385
 1021 00e4 1A46     		mov	r2, r3
 1022 00e6 FFF7FEFF 		bl	memcpy
 220:voltages.c    **** }
 1023              		.loc 1 220 0
 1024 00ea 3B1D     		adds	r3, r7, #4
 1025 00ec 1868     		ldr	r0, [r3]
 1026 00ee 07F5D077 		add	r7, r7, #416
 1027              		.cfi_def_cfa_offset 24
 1028 00f2 BD46     		mov	sp, r7
 1029              		.cfi_def_cfa_register 13
 1030              		@ sp needed
 1031 00f4 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 1032              	.L42:
 1033              		.align	2
 1034              	.L41:
 1035 00f8 38000000 		.word	.LC2
 1036 00fc 50000000 		.word	.LC3
 1037 0100 0000C842 		.word	1120403456
 1038              		.cfi_endproc
 1039              	.LFE71:
 1040              		.size	pressure_sensor_test, .-pressure_sensor_test
 1041              		.text
 1042              	.Letext0:
 1043              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1044              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1045              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1046              		.file 5 "testing.h"
 1047              		.file 6 "voltages.h"
 1048              		.file 7 "data.h"
 1049              		.file 8 "modem.h"
 1050              		.file 9 "notoriOS.h"
 1051              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 1052              		.section	.debug_info,"",%progbits
 1053              	.Ldebug_info0:
 1054 0000 0B080000 		.4byte	0x80b
 1055 0004 0400     		.2byte	0x4
 1056 0006 00000000 		.4byte	.Ldebug_abbrev0
 1057 000a 04       		.byte	0x4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 24


 1058 000b 01       		.uleb128 0x1
 1059 000c AE000000 		.4byte	.LASF105
 1060 0010 0C       		.byte	0xc
 1061 0011 48010000 		.4byte	.LASF106
 1062 0015 73020000 		.4byte	.LASF107
 1063 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1064 001d 00000000 		.4byte	0
 1065 0021 00000000 		.4byte	.Ldebug_line0
 1066 0025 02       		.uleb128 0x2
 1067 0026 01       		.byte	0x1
 1068 0027 06       		.byte	0x6
 1069 0028 51030000 		.4byte	.LASF0
 1070 002c 02       		.uleb128 0x2
 1071 002d 01       		.byte	0x1
 1072 002e 08       		.byte	0x8
 1073 002f EC020000 		.4byte	.LASF1
 1074 0033 02       		.uleb128 0x2
 1075 0034 02       		.byte	0x2
 1076 0035 05       		.byte	0x5
 1077 0036 86000000 		.4byte	.LASF2
 1078 003a 02       		.uleb128 0x2
 1079 003b 02       		.byte	0x2
 1080 003c 07       		.byte	0x7
 1081 003d F4030000 		.4byte	.LASF3
 1082 0041 03       		.uleb128 0x3
 1083 0042 1C050000 		.4byte	.LASF9
 1084 0046 02       		.byte	0x2
 1085 0047 3F       		.byte	0x3f
 1086 0048 4C000000 		.4byte	0x4c
 1087 004c 02       		.uleb128 0x2
 1088 004d 04       		.byte	0x4
 1089 004e 05       		.byte	0x5
 1090 004f 33020000 		.4byte	.LASF4
 1091 0053 02       		.uleb128 0x2
 1092 0054 04       		.byte	0x4
 1093 0055 07       		.byte	0x7
 1094 0056 D6040000 		.4byte	.LASF5
 1095 005a 02       		.uleb128 0x2
 1096 005b 08       		.byte	0x8
 1097 005c 05       		.byte	0x5
 1098 005d 13020000 		.4byte	.LASF6
 1099 0061 02       		.uleb128 0x2
 1100 0062 08       		.byte	0x8
 1101 0063 07       		.byte	0x7
 1102 0064 5D030000 		.4byte	.LASF7
 1103 0068 04       		.uleb128 0x4
 1104 0069 04       		.byte	0x4
 1105 006a 05       		.byte	0x5
 1106 006b 696E7400 		.ascii	"int\000"
 1107 006f 02       		.uleb128 0x2
 1108 0070 04       		.byte	0x4
 1109 0071 07       		.byte	0x7
 1110 0072 92030000 		.4byte	.LASF8
 1111 0076 03       		.uleb128 0x3
 1112 0077 76040000 		.4byte	.LASF10
 1113 007b 03       		.byte	0x3
 1114 007c 2C       		.byte	0x2c
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 25


 1115 007d 41000000 		.4byte	0x41
 1116 0081 05       		.uleb128 0x5
 1117 0082 9A010000 		.4byte	.LASF11
 1118 0086 04       		.byte	0x4
 1119 0087 9201     		.2byte	0x192
 1120 0089 2C000000 		.4byte	0x2c
 1121 008d 05       		.uleb128 0x5
 1122 008e C4040000 		.4byte	.LASF12
 1123 0092 04       		.byte	0x4
 1124 0093 9301     		.2byte	0x193
 1125 0095 3A000000 		.4byte	0x3a
 1126 0099 05       		.uleb128 0x5
 1127 009a 21020000 		.4byte	.LASF13
 1128 009e 04       		.byte	0x4
 1129 009f 9601     		.2byte	0x196
 1130 00a1 33000000 		.4byte	0x33
 1131 00a5 05       		.uleb128 0x5
 1132 00a6 66050000 		.4byte	.LASF14
 1133 00aa 04       		.byte	0x4
 1134 00ab 9701     		.2byte	0x197
 1135 00ad 4C000000 		.4byte	0x4c
 1136 00b1 02       		.uleb128 0x2
 1137 00b2 04       		.byte	0x4
 1138 00b3 04       		.byte	0x4
 1139 00b4 E7010000 		.4byte	.LASF15
 1140 00b8 02       		.uleb128 0x2
 1141 00b9 08       		.byte	0x8
 1142 00ba 04       		.byte	0x4
 1143 00bb E8040000 		.4byte	.LASF16
 1144 00bf 02       		.uleb128 0x2
 1145 00c0 01       		.byte	0x1
 1146 00c1 08       		.byte	0x8
 1147 00c2 27020000 		.4byte	.LASF17
 1148 00c6 02       		.uleb128 0x2
 1149 00c7 08       		.byte	0x8
 1150 00c8 04       		.byte	0x4
 1151 00c9 E0020000 		.4byte	.LASF18
 1152 00cd 02       		.uleb128 0x2
 1153 00ce 04       		.byte	0x4
 1154 00cf 07       		.byte	0x7
 1155 00d0 9D000000 		.4byte	.LASF19
 1156 00d4 06       		.uleb128 0x6
 1157 00d5 BF000000 		.4byte	0xbf
 1158 00d9 E4000000 		.4byte	0xe4
 1159 00dd 07       		.uleb128 0x7
 1160 00de CD000000 		.4byte	0xcd
 1161 00e2 17       		.byte	0x17
 1162 00e3 00       		.byte	0
 1163 00e4 08       		.uleb128 0x8
 1164 00e5 8101     		.2byte	0x181
 1165 00e7 05       		.byte	0x5
 1166 00e8 0A       		.byte	0xa
 1167 00e9 12010000 		.4byte	0x112
 1168 00ed 09       		.uleb128 0x9
 1169 00ee 5C050000 		.4byte	.LASF20
 1170 00f2 05       		.byte	0x5
 1171 00f3 0C       		.byte	0xc
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 26


 1172 00f4 12010000 		.4byte	0x112
 1173 00f8 00       		.byte	0
 1174 00f9 09       		.uleb128 0x9
 1175 00fa 1F040000 		.4byte	.LASF21
 1176 00fe 05       		.byte	0x5
 1177 00ff 0D       		.byte	0xd
 1178 0100 81000000 		.4byte	0x81
 1179 0104 80       		.byte	0x80
 1180 0105 09       		.uleb128 0x9
 1181 0106 2C020000 		.4byte	.LASF22
 1182 010a 05       		.byte	0x5
 1183 010b 0F       		.byte	0xf
 1184 010c 22010000 		.4byte	0x122
 1185 0110 81       		.byte	0x81
 1186 0111 00       		.byte	0
 1187 0112 06       		.uleb128 0x6
 1188 0113 BF000000 		.4byte	0xbf
 1189 0117 22010000 		.4byte	0x122
 1190 011b 07       		.uleb128 0x7
 1191 011c CD000000 		.4byte	0xcd
 1192 0120 7F       		.byte	0x7f
 1193 0121 00       		.byte	0
 1194 0122 06       		.uleb128 0x6
 1195 0123 BF000000 		.4byte	0xbf
 1196 0127 32010000 		.4byte	0x132
 1197 012b 07       		.uleb128 0x7
 1198 012c CD000000 		.4byte	0xcd
 1199 0130 FF       		.byte	0xff
 1200 0131 00       		.byte	0
 1201 0132 03       		.uleb128 0x3
 1202 0133 3E050000 		.4byte	.LASF23
 1203 0137 05       		.byte	0x5
 1204 0138 10       		.byte	0x10
 1205 0139 E4000000 		.4byte	0xe4
 1206 013d 0A       		.uleb128 0xa
 1207 013e 1C       		.byte	0x1c
 1208 013f 06       		.byte	0x6
 1209 0140 14       		.byte	0x14
 1210 0141 9A010000 		.4byte	0x19a
 1211 0145 09       		.uleb128 0x9
 1212 0146 78010000 		.4byte	.LASF24
 1213 014a 06       		.byte	0x6
 1214 014b 15       		.byte	0x15
 1215 014c B1000000 		.4byte	0xb1
 1216 0150 00       		.byte	0
 1217 0151 09       		.uleb128 0x9
 1218 0152 1D000000 		.4byte	.LASF25
 1219 0156 06       		.byte	0x6
 1220 0157 16       		.byte	0x16
 1221 0158 B1000000 		.4byte	0xb1
 1222 015c 04       		.byte	0x4
 1223 015d 09       		.uleb128 0x9
 1224 015e B3050000 		.4byte	.LASF26
 1225 0162 06       		.byte	0x6
 1226 0163 17       		.byte	0x17
 1227 0164 B1000000 		.4byte	0xb1
 1228 0168 08       		.byte	0x8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 27


 1229 0169 09       		.uleb128 0x9
 1230 016a 53010000 		.4byte	.LASF27
 1231 016e 06       		.byte	0x6
 1232 016f 18       		.byte	0x18
 1233 0170 B1000000 		.4byte	0xb1
 1234 0174 0C       		.byte	0xc
 1235 0175 09       		.uleb128 0x9
 1236 0176 FB010000 		.4byte	.LASF28
 1237 017a 06       		.byte	0x6
 1238 017b 19       		.byte	0x19
 1239 017c B1000000 		.4byte	0xb1
 1240 0180 10       		.byte	0x10
 1241 0181 09       		.uleb128 0x9
 1242 0182 45050000 		.4byte	.LASF29
 1243 0186 06       		.byte	0x6
 1244 0187 1A       		.byte	0x1a
 1245 0188 B1000000 		.4byte	0xb1
 1246 018c 14       		.byte	0x14
 1247 018d 09       		.uleb128 0x9
 1248 018e 0F030000 		.4byte	.LASF30
 1249 0192 06       		.byte	0x6
 1250 0193 1B       		.byte	0x1b
 1251 0194 81000000 		.4byte	0x81
 1252 0198 18       		.byte	0x18
 1253 0199 00       		.byte	0
 1254 019a 03       		.uleb128 0x3
 1255 019b 6C040000 		.4byte	.LASF31
 1256 019f 06       		.byte	0x6
 1257 01a0 1C       		.byte	0x1c
 1258 01a1 3D010000 		.4byte	0x13d
 1259 01a5 0A       		.uleb128 0xa
 1260 01a6 10       		.byte	0x10
 1261 01a7 06       		.byte	0x6
 1262 01a8 1E       		.byte	0x1e
 1263 01a9 DE010000 		.4byte	0x1de
 1264 01ad 09       		.uleb128 0x9
 1265 01ae 5F020000 		.4byte	.LASF32
 1266 01b2 06       		.byte	0x6
 1267 01b3 1F       		.byte	0x1f
 1268 01b4 B1000000 		.4byte	0xb1
 1269 01b8 00       		.byte	0
 1270 01b9 09       		.uleb128 0x9
 1271 01ba 26040000 		.4byte	.LASF33
 1272 01be 06       		.byte	0x6
 1273 01bf 20       		.byte	0x20
 1274 01c0 B1000000 		.4byte	0xb1
 1275 01c4 04       		.byte	0x4
 1276 01c5 09       		.uleb128 0x9
 1277 01c6 D5050000 		.4byte	.LASF34
 1278 01ca 06       		.byte	0x6
 1279 01cb 21       		.byte	0x21
 1280 01cc B1000000 		.4byte	0xb1
 1281 01d0 08       		.byte	0x8
 1282 01d1 09       		.uleb128 0x9
 1283 01d2 B4020000 		.4byte	.LASF35
 1284 01d6 06       		.byte	0x6
 1285 01d7 22       		.byte	0x22
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 28


 1286 01d8 B1000000 		.4byte	0xb1
 1287 01dc 0C       		.byte	0xc
 1288 01dd 00       		.byte	0
 1289 01de 03       		.uleb128 0x3
 1290 01df D5030000 		.4byte	.LASF36
 1291 01e3 06       		.byte	0x6
 1292 01e4 23       		.byte	0x23
 1293 01e5 A5010000 		.4byte	0x1a5
 1294 01e9 0A       		.uleb128 0xa
 1295 01ea 2C       		.byte	0x2c
 1296 01eb 07       		.byte	0x7
 1297 01ec 14       		.byte	0x14
 1298 01ed 16020000 		.4byte	0x216
 1299 01f1 0B       		.uleb128 0xb
 1300 01f2 6B657900 		.ascii	"key\000"
 1301 01f6 07       		.byte	0x7
 1302 01f7 15       		.byte	0x15
 1303 01f8 16020000 		.4byte	0x216
 1304 01fc 00       		.byte	0
 1305 01fd 09       		.uleb128 0x9
 1306 01fe 72010000 		.4byte	.LASF37
 1307 0202 07       		.byte	0x7
 1308 0203 16       		.byte	0x16
 1309 0204 16020000 		.4byte	0x216
 1310 0208 14       		.byte	0x14
 1311 0209 09       		.uleb128 0x9
 1312 020a AE010000 		.4byte	.LASF38
 1313 020e 07       		.byte	0x7
 1314 020f 17       		.byte	0x17
 1315 0210 A5000000 		.4byte	0xa5
 1316 0214 28       		.byte	0x28
 1317 0215 00       		.byte	0
 1318 0216 06       		.uleb128 0x6
 1319 0217 BF000000 		.4byte	0xbf
 1320 021b 26020000 		.4byte	0x226
 1321 021f 07       		.uleb128 0x7
 1322 0220 CD000000 		.4byte	0xcd
 1323 0224 13       		.byte	0x13
 1324 0225 00       		.byte	0
 1325 0226 03       		.uleb128 0x3
 1326 0227 9F030000 		.4byte	.LASF39
 1327 022b 07       		.byte	0x7
 1328 022c 19       		.byte	0x19
 1329 022d E9010000 		.4byte	0x1e9
 1330 0231 0A       		.uleb128 0xa
 1331 0232 3C       		.byte	0x3c
 1332 0233 08       		.byte	0x8
 1333 0234 37       		.byte	0x37
 1334 0235 5E020000 		.4byte	0x25e
 1335 0239 09       		.uleb128 0x9
 1336 023a 16000000 		.4byte	.LASF40
 1337 023e 08       		.byte	0x8
 1338 023f 38       		.byte	0x38
 1339 0240 16020000 		.4byte	0x216
 1340 0244 00       		.byte	0
 1341 0245 09       		.uleb128 0x9
 1342 0246 00000000 		.4byte	.LASF41
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 29


 1343 024a 08       		.byte	0x8
 1344 024b 39       		.byte	0x39
 1345 024c 16020000 		.4byte	0x216
 1346 0250 14       		.byte	0x14
 1347 0251 09       		.uleb128 0x9
 1348 0252 67040000 		.4byte	.LASF42
 1349 0256 08       		.byte	0x8
 1350 0257 3A       		.byte	0x3a
 1351 0258 16020000 		.4byte	0x216
 1352 025c 28       		.byte	0x28
 1353 025d 00       		.byte	0
 1354 025e 03       		.uleb128 0x3
 1355 025f 01050000 		.4byte	.LASF43
 1356 0263 08       		.byte	0x8
 1357 0264 3C       		.byte	0x3c
 1358 0265 31020000 		.4byte	0x231
 1359 0269 0A       		.uleb128 0xa
 1360 026a 20       		.byte	0x20
 1361 026b 08       		.byte	0x8
 1362 026c 3E       		.byte	0x3e
 1363 026d D2020000 		.4byte	0x2d2
 1364 0271 09       		.uleb128 0x9
 1365 0272 AB030000 		.4byte	.LASF44
 1366 0276 08       		.byte	0x8
 1367 0277 3F       		.byte	0x3f
 1368 0278 68000000 		.4byte	0x68
 1369 027c 00       		.byte	0
 1370 027d 0B       		.uleb128 0xb
 1371 027e 62657200 		.ascii	"ber\000"
 1372 0282 08       		.byte	0x8
 1373 0283 40       		.byte	0x40
 1374 0284 68000000 		.4byte	0x68
 1375 0288 04       		.byte	0x4
 1376 0289 09       		.uleb128 0x9
 1377 028a A9010000 		.4byte	.LASF45
 1378 028e 08       		.byte	0x8
 1379 028f 41       		.byte	0x41
 1380 0290 68000000 		.4byte	0x68
 1381 0294 08       		.byte	0x8
 1382 0295 09       		.uleb128 0x9
 1383 0296 6D010000 		.4byte	.LASF46
 1384 029a 08       		.byte	0x8
 1385 029b 42       		.byte	0x42
 1386 029c 68000000 		.4byte	0x68
 1387 02a0 0C       		.byte	0xc
 1388 02a1 09       		.uleb128 0x9
 1389 02a2 BF040000 		.4byte	.LASF47
 1390 02a6 08       		.byte	0x8
 1391 02a7 43       		.byte	0x43
 1392 02a8 68000000 		.4byte	0x68
 1393 02ac 10       		.byte	0x10
 1394 02ad 09       		.uleb128 0x9
 1395 02ae B5040000 		.4byte	.LASF48
 1396 02b2 08       		.byte	0x8
 1397 02b3 44       		.byte	0x44
 1398 02b4 68000000 		.4byte	0x68
 1399 02b8 14       		.byte	0x14
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 30


 1400 02b9 09       		.uleb128 0x9
 1401 02ba 07040000 		.4byte	.LASF49
 1402 02be 08       		.byte	0x8
 1403 02bf 45       		.byte	0x45
 1404 02c0 68000000 		.4byte	0x68
 1405 02c4 18       		.byte	0x18
 1406 02c5 09       		.uleb128 0x9
 1407 02c6 47040000 		.4byte	.LASF50
 1408 02ca 08       		.byte	0x8
 1409 02cb 46       		.byte	0x46
 1410 02cc 68000000 		.4byte	0x68
 1411 02d0 1C       		.byte	0x1c
 1412 02d1 00       		.byte	0
 1413 02d2 03       		.uleb128 0x3
 1414 02d3 7E040000 		.4byte	.LASF51
 1415 02d7 08       		.byte	0x8
 1416 02d8 48       		.byte	0x48
 1417 02d9 69020000 		.4byte	0x269
 1418 02dd 0A       		.uleb128 0xa
 1419 02de 05       		.byte	0x5
 1420 02df 08       		.byte	0x8
 1421 02e0 54       		.byte	0x54
 1422 02e1 22030000 		.4byte	0x322
 1423 02e5 09       		.uleb128 0x9
 1424 02e6 A9050000 		.4byte	.LASF52
 1425 02ea 08       		.byte	0x8
 1426 02eb 56       		.byte	0x56
 1427 02ec 81000000 		.4byte	0x81
 1428 02f0 00       		.byte	0
 1429 02f1 09       		.uleb128 0x9
 1430 02f2 E0030000 		.4byte	.LASF53
 1431 02f6 08       		.byte	0x8
 1432 02f7 58       		.byte	0x58
 1433 02f8 22030000 		.4byte	0x322
 1434 02fc 01       		.byte	0x1
 1435 02fd 09       		.uleb128 0x9
 1436 02fe C9020000 		.4byte	.LASF54
 1437 0302 08       		.byte	0x8
 1438 0303 5A       		.byte	0x5a
 1439 0304 81000000 		.4byte	0x81
 1440 0308 02       		.byte	0x2
 1441 0309 09       		.uleb128 0x9
 1442 030a B1030000 		.4byte	.LASF55
 1443 030e 08       		.byte	0x8
 1444 030f 5C       		.byte	0x5c
 1445 0310 81000000 		.4byte	0x81
 1446 0314 03       		.byte	0x3
 1447 0315 09       		.uleb128 0x9
 1448 0316 F5040000 		.4byte	.LASF56
 1449 031a 08       		.byte	0x8
 1450 031b 5F       		.byte	0x5f
 1451 031c 81000000 		.4byte	0x81
 1452 0320 04       		.byte	0x4
 1453 0321 00       		.byte	0
 1454 0322 02       		.uleb128 0x2
 1455 0323 01       		.byte	0x1
 1456 0324 02       		.byte	0x2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 31


 1457 0325 98040000 		.4byte	.LASF57
 1458 0329 03       		.uleb128 0x3
 1459 032a 2C030000 		.4byte	.LASF58
 1460 032e 08       		.byte	0x8
 1461 032f 61       		.byte	0x61
 1462 0330 DD020000 		.4byte	0x2dd
 1463 0334 0A       		.uleb128 0xa
 1464 0335 06       		.byte	0x6
 1465 0336 09       		.byte	0x9
 1466 0337 2E       		.byte	0x2e
 1467 0338 6D030000 		.4byte	0x36d
 1468 033c 09       		.uleb128 0x9
 1469 033d 77000000 		.4byte	.LASF59
 1470 0341 09       		.byte	0x9
 1471 0342 30       		.byte	0x30
 1472 0343 8D000000 		.4byte	0x8d
 1473 0347 00       		.byte	0
 1474 0348 09       		.uleb128 0x9
 1475 0349 3A000000 		.4byte	.LASF60
 1476 034d 09       		.byte	0x9
 1477 034e 31       		.byte	0x31
 1478 034f 99000000 		.4byte	0x99
 1479 0353 02       		.byte	0x2
 1480 0354 09       		.uleb128 0x9
 1481 0355 0E050000 		.4byte	.LASF61
 1482 0359 09       		.byte	0x9
 1483 035a 32       		.byte	0x32
 1484 035b 81000000 		.4byte	0x81
 1485 035f 04       		.byte	0x4
 1486 0360 09       		.uleb128 0x9
 1487 0361 26050000 		.4byte	.LASF62
 1488 0365 09       		.byte	0x9
 1489 0366 33       		.byte	0x33
 1490 0367 81000000 		.4byte	0x81
 1491 036b 05       		.byte	0x5
 1492 036c 00       		.byte	0
 1493 036d 03       		.uleb128 0x3
 1494 036e C3020000 		.4byte	.LASF63
 1495 0372 09       		.byte	0x9
 1496 0373 36       		.byte	0x36
 1497 0374 78030000 		.4byte	0x378
 1498 0378 0C       		.uleb128 0xc
 1499 0379 34030000 		.4byte	0x334
 1500 037d 0A       		.uleb128 0xa
 1501 037e 1C       		.byte	0x1c
 1502 037f 09       		.byte	0x9
 1503 0380 39       		.byte	0x39
 1504 0381 9E030000 		.4byte	0x39e
 1505 0385 09       		.uleb128 0x9
 1506 0386 54020000 		.4byte	.LASF64
 1507 038a 09       		.byte	0x9
 1508 038b 3B       		.byte	0x3b
 1509 038c 9E030000 		.4byte	0x39e
 1510 0390 00       		.byte	0
 1511 0391 09       		.uleb128 0x9
 1512 0392 84030000 		.4byte	.LASF65
 1513 0396 09       		.byte	0x9
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 32


 1514 0397 3C       		.byte	0x3c
 1515 0398 D4000000 		.4byte	0xd4
 1516 039c 04       		.byte	0x4
 1517 039d 00       		.byte	0
 1518 039e 0D       		.uleb128 0xd
 1519 039f 04       		.byte	0x4
 1520 03a0 5E020000 		.4byte	0x25e
 1521 03a4 03       		.uleb128 0x3
 1522 03a5 E9030000 		.4byte	.LASF66
 1523 03a9 09       		.byte	0x9
 1524 03aa 3E       		.byte	0x3e
 1525 03ab 7D030000 		.4byte	0x37d
 1526 03af 0A       		.uleb128 0xa
 1527 03b0 68       		.byte	0x68
 1528 03b1 09       		.byte	0x9
 1529 03b2 44       		.byte	0x44
 1530 03b3 D0030000 		.4byte	0x3d0
 1531 03b7 09       		.uleb128 0x9
 1532 03b8 A6000000 		.4byte	.LASF67
 1533 03bc 09       		.byte	0x9
 1534 03bd 49       		.byte	0x49
 1535 03be D0030000 		.4byte	0x3d0
 1536 03c2 00       		.byte	0
 1537 03c3 09       		.uleb128 0x9
 1538 03c4 81050000 		.4byte	.LASF68
 1539 03c8 09       		.byte	0x9
 1540 03c9 4A       		.byte	0x4a
 1541 03ca 68000000 		.4byte	0x68
 1542 03ce 64       		.byte	0x64
 1543 03cf 00       		.byte	0
 1544 03d0 06       		.uleb128 0x6
 1545 03d1 BF000000 		.4byte	0xbf
 1546 03d5 E0030000 		.4byte	0x3e0
 1547 03d9 07       		.uleb128 0x7
 1548 03da CD000000 		.4byte	0xcd
 1549 03de 63       		.byte	0x63
 1550 03df 00       		.byte	0
 1551 03e0 03       		.uleb128 0x3
 1552 03e1 2B000000 		.4byte	.LASF69
 1553 03e5 09       		.byte	0x9
 1554 03e6 50       		.byte	0x50
 1555 03e7 AF030000 		.4byte	0x3af
 1556 03eb 0E       		.uleb128 0xe
 1557 03ec B8010000 		.4byte	.LASF74
 1558 03f0 01       		.byte	0x1
 1559 03f1 06       		.byte	0x6
 1560 03f2 9A010000 		.4byte	0x19a
 1561 03f6 00000000 		.4byte	.LFB64
 1562 03fa 3C010000 		.4byte	.LFE64-.LFB64
 1563 03fe 01       		.uleb128 0x1
 1564 03ff 9C       		.byte	0x9c
 1565 0400 75040000 		.4byte	0x475
 1566 0404 0F       		.uleb128 0xf
 1567 0405 4C020000 		.4byte	.LASF70
 1568 0409 01       		.byte	0x1
 1569 040a 08       		.byte	0x8
 1570 040b 9A010000 		.4byte	0x19a
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 33


 1571 040f 02       		.uleb128 0x2
 1572 0410 91       		.byte	0x91
 1573 0411 4C       		.sleb128 -52
 1574 0412 0F       		.uleb128 0xf
 1575 0413 64010000 		.4byte	.LASF71
 1576 0417 01       		.byte	0x1
 1577 0418 16       		.byte	0x16
 1578 0419 75040000 		.4byte	0x475
 1579 041d 03       		.uleb128 0x3
 1580 041e 91       		.byte	0x91
 1581 041f B47F     		.sleb128 -76
 1582 0421 0F       		.uleb128 0xf
 1583 0422 50000000 		.4byte	.LASF72
 1584 0426 01       		.byte	0x1
 1585 0427 32       		.byte	0x32
 1586 0428 B1000000 		.4byte	0xb1
 1587 042c 02       		.uleb128 0x2
 1588 042d 91       		.byte	0x91
 1589 042e 68       		.sleb128 -24
 1590 042f 10       		.uleb128 0x10
 1591 0430 26000000 		.4byte	.LBB2
 1592 0434 7A000000 		.4byte	.LBE2-.LBB2
 1593 0438 11       		.uleb128 0x11
 1594 0439 6300     		.ascii	"c\000"
 1595 043b 01       		.byte	0x1
 1596 043c 18       		.byte	0x18
 1597 043d 81000000 		.4byte	0x81
 1598 0441 02       		.uleb128 0x2
 1599 0442 91       		.byte	0x91
 1600 0443 6F       		.sleb128 -17
 1601 0444 10       		.uleb128 0x10
 1602 0445 2E000000 		.4byte	.LBB3
 1603 0449 60000000 		.4byte	.LBE3-.LBB3
 1604 044d 0F       		.uleb128 0xf
 1605 044e E6050000 		.4byte	.LASF73
 1606 0452 01       		.byte	0x1
 1607 0453 1B       		.byte	0x1b
 1608 0454 85040000 		.4byte	0x485
 1609 0458 03       		.uleb128 0x3
 1610 0459 91       		.byte	0x91
 1611 045a 887F     		.sleb128 -120
 1612 045c 10       		.uleb128 0x10
 1613 045d 38000000 		.4byte	.LBB4
 1614 0461 30000000 		.4byte	.LBE4-.LBB4
 1615 0465 11       		.uleb128 0x11
 1616 0466 6900     		.ascii	"i\000"
 1617 0468 01       		.byte	0x1
 1618 0469 1F       		.byte	0x1f
 1619 046a 8D000000 		.4byte	0x8d
 1620 046e 02       		.uleb128 0x2
 1621 046f 91       		.byte	0x91
 1622 0470 6C       		.sleb128 -20
 1623 0471 00       		.byte	0
 1624 0472 00       		.byte	0
 1625 0473 00       		.byte	0
 1626 0474 00       		.byte	0
 1627 0475 06       		.uleb128 0x6
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 34


 1628 0476 B1000000 		.4byte	0xb1
 1629 047a 85040000 		.4byte	0x485
 1630 047e 07       		.uleb128 0x7
 1631 047f CD000000 		.4byte	0xcd
 1632 0483 05       		.byte	0x5
 1633 0484 00       		.byte	0
 1634 0485 06       		.uleb128 0x6
 1635 0486 A5000000 		.4byte	0xa5
 1636 048a 95040000 		.4byte	0x495
 1637 048e 07       		.uleb128 0x7
 1638 048f CD000000 		.4byte	0xcd
 1639 0493 0A       		.byte	0xa
 1640 0494 00       		.byte	0
 1641 0495 0E       		.uleb128 0xe
 1642 0496 57000000 		.4byte	.LASF75
 1643 049a 01       		.byte	0x1
 1644 049b 44       		.byte	0x44
 1645 049c DE010000 		.4byte	0x1de
 1646 04a0 00000000 		.4byte	.LFB65
 1647 04a4 98010000 		.4byte	.LFE65-.LFB65
 1648 04a8 01       		.uleb128 0x1
 1649 04a9 9C       		.byte	0x9c
 1650 04aa 0A050000 		.4byte	0x50a
 1651 04ae 0F       		.uleb128 0xf
 1652 04af A0010000 		.4byte	.LASF76
 1653 04b3 01       		.byte	0x1
 1654 04b4 46       		.byte	0x46
 1655 04b5 DE010000 		.4byte	0x1de
 1656 04b9 02       		.uleb128 0x2
 1657 04ba 91       		.byte	0x91
 1658 04bb 5C       		.sleb128 -36
 1659 04bc 0F       		.uleb128 0xf
 1660 04bd 64010000 		.4byte	.LASF71
 1661 04c1 01       		.byte	0x1
 1662 04c2 47       		.byte	0x47
 1663 04c3 75040000 		.4byte	0x475
 1664 04c7 02       		.uleb128 0x2
 1665 04c8 91       		.byte	0x91
 1666 04c9 44       		.sleb128 -60
 1667 04ca 0F       		.uleb128 0xf
 1668 04cb E6050000 		.4byte	.LASF73
 1669 04cf 01       		.byte	0x1
 1670 04d0 48       		.byte	0x48
 1671 04d1 85040000 		.4byte	0x485
 1672 04d5 03       		.uleb128 0x3
 1673 04d6 91       		.byte	0x91
 1674 04d7 987F     		.sleb128 -104
 1675 04d9 12       		.uleb128 0x12
 1676 04da 1A000000 		.4byte	.LBB5
 1677 04de 30000000 		.4byte	.LBE5-.LBB5
 1678 04e2 F3040000 		.4byte	0x4f3
 1679 04e6 11       		.uleb128 0x11
 1680 04e7 6900     		.ascii	"i\000"
 1681 04e9 01       		.byte	0x1
 1682 04ea 52       		.byte	0x52
 1683 04eb 8D000000 		.4byte	0x8d
 1684 04ef 02       		.uleb128 0x2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 35


 1685 04f0 91       		.byte	0x91
 1686 04f1 6E       		.sleb128 -18
 1687 04f2 00       		.byte	0
 1688 04f3 10       		.uleb128 0x10
 1689 04f4 8E000000 		.4byte	.LBB6
 1690 04f8 30000000 		.4byte	.LBE6-.LBB6
 1691 04fc 11       		.uleb128 0x11
 1692 04fd 6900     		.ascii	"i\000"
 1693 04ff 01       		.byte	0x1
 1694 0500 5F       		.byte	0x5f
 1695 0501 8D000000 		.4byte	0x8d
 1696 0505 02       		.uleb128 0x2
 1697 0506 91       		.byte	0x91
 1698 0507 6C       		.sleb128 -20
 1699 0508 00       		.byte	0
 1700 0509 00       		.byte	0
 1701 050a 13       		.uleb128 0x13
 1702 050b 89050000 		.4byte	.LASF79
 1703 050f 01       		.byte	0x1
 1704 0510 7A       		.byte	0x7a
 1705 0511 DE010000 		.4byte	0x1de
 1706 0515 00000000 		.4byte	.LFB66
 1707 0519 C4000000 		.4byte	.LFE66-.LFB66
 1708 051d 01       		.uleb128 0x1
 1709 051e 9C       		.byte	0x9c
 1710 051f 40050000 		.4byte	0x540
 1711 0523 14       		.uleb128 0x14
 1712 0524 4C020000 		.4byte	.LASF70
 1713 0528 01       		.byte	0x1
 1714 0529 7A       		.byte	0x7a
 1715 052a 9A010000 		.4byte	0x19a
 1716 052e 02       		.uleb128 0x2
 1717 052f 91       		.byte	0x91
 1718 0530 74       		.sleb128 -12
 1719 0531 0F       		.uleb128 0xf
 1720 0532 A0010000 		.4byte	.LASF76
 1721 0536 01       		.byte	0x1
 1722 0537 7C       		.byte	0x7c
 1723 0538 DE010000 		.4byte	0x1de
 1724 053c 02       		.uleb128 0x2
 1725 053d 91       		.byte	0x91
 1726 053e 50       		.sleb128 -48
 1727 053f 00       		.byte	0
 1728 0540 15       		.uleb128 0x15
 1729 0541 AD020000 		.4byte	.LASF77
 1730 0545 01       		.byte	0x1
 1731 0546 8C       		.byte	0x8c
 1732 0547 00000000 		.4byte	.LFB67
 1733 054b 74000000 		.4byte	.LFE67-.LFB67
 1734 054f 01       		.uleb128 0x1
 1735 0550 9C       		.byte	0x9c
 1736 0551 86050000 		.4byte	0x586
 1737 0555 16       		.uleb128 0x16
 1738 0556 6100     		.ascii	"a\000"
 1739 0558 01       		.byte	0x1
 1740 0559 8C       		.byte	0x8c
 1741 055a 86050000 		.4byte	0x586
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 36


 1742 055e 02       		.uleb128 0x2
 1743 055f 91       		.byte	0x91
 1744 0560 6C       		.sleb128 -20
 1745 0561 16       		.uleb128 0x16
 1746 0562 6E00     		.ascii	"n\000"
 1747 0564 01       		.byte	0x1
 1748 0565 8C       		.byte	0x8c
 1749 0566 A5000000 		.4byte	0xa5
 1750 056a 02       		.uleb128 0x2
 1751 056b 91       		.byte	0x91
 1752 056c 68       		.sleb128 -24
 1753 056d 11       		.uleb128 0x11
 1754 056e 6900     		.ascii	"i\000"
 1755 0570 01       		.byte	0x1
 1756 0571 8D       		.byte	0x8d
 1757 0572 A5000000 		.4byte	0xa5
 1758 0576 02       		.uleb128 0x2
 1759 0577 91       		.byte	0x91
 1760 0578 74       		.sleb128 -12
 1761 0579 11       		.uleb128 0x11
 1762 057a 6A00     		.ascii	"j\000"
 1763 057c 01       		.byte	0x1
 1764 057d 8D       		.byte	0x8d
 1765 057e A5000000 		.4byte	0xa5
 1766 0582 02       		.uleb128 0x2
 1767 0583 91       		.byte	0x91
 1768 0584 70       		.sleb128 -16
 1769 0585 00       		.byte	0
 1770 0586 0D       		.uleb128 0xd
 1771 0587 04       		.byte	0x4
 1772 0588 A5000000 		.4byte	0xa5
 1773 058c 17       		.uleb128 0x17
 1774 058d 3C010000 		.4byte	.LASF78
 1775 0591 01       		.byte	0x1
 1776 0592 98       		.byte	0x98
 1777 0593 00000000 		.4byte	.LFB68
 1778 0597 28000000 		.4byte	.LFE68-.LFB68
 1779 059b 01       		.uleb128 0x1
 1780 059c 9C       		.byte	0x9c
 1781 059d C6050000 		.4byte	0x5c6
 1782 05a1 16       		.uleb128 0x16
 1783 05a2 7000     		.ascii	"p\000"
 1784 05a4 01       		.byte	0x1
 1785 05a5 98       		.byte	0x98
 1786 05a6 86050000 		.4byte	0x586
 1787 05aa 02       		.uleb128 0x2
 1788 05ab 91       		.byte	0x91
 1789 05ac 6C       		.sleb128 -20
 1790 05ad 16       		.uleb128 0x16
 1791 05ae 7100     		.ascii	"q\000"
 1792 05b0 01       		.byte	0x1
 1793 05b1 98       		.byte	0x98
 1794 05b2 86050000 		.4byte	0x586
 1795 05b6 02       		.uleb128 0x2
 1796 05b7 91       		.byte	0x91
 1797 05b8 68       		.sleb128 -24
 1798 05b9 11       		.uleb128 0x11
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 37


 1799 05ba 7400     		.ascii	"t\000"
 1800 05bc 01       		.byte	0x1
 1801 05bd 99       		.byte	0x99
 1802 05be A5000000 		.4byte	0xa5
 1803 05c2 02       		.uleb128 0x2
 1804 05c3 91       		.byte	0x91
 1805 05c4 74       		.sleb128 -12
 1806 05c5 00       		.byte	0
 1807 05c6 13       		.uleb128 0x13
 1808 05c7 43030000 		.4byte	.LASF80
 1809 05cb 01       		.byte	0x1
 1810 05cc A1       		.byte	0xa1
 1811 05cd A5000000 		.4byte	0xa5
 1812 05d1 00000000 		.4byte	.LFB69
 1813 05d5 84000000 		.4byte	.LFE69-.LFB69
 1814 05d9 01       		.uleb128 0x1
 1815 05da 9C       		.byte	0x9c
 1816 05db 08060000 		.4byte	0x608
 1817 05df 14       		.uleb128 0x14
 1818 05e0 EF040000 		.4byte	.LASF81
 1819 05e4 01       		.byte	0x1
 1820 05e5 A1       		.byte	0xa1
 1821 05e6 86050000 		.4byte	0x586
 1822 05ea 02       		.uleb128 0x2
 1823 05eb 91       		.byte	0x91
 1824 05ec 64       		.sleb128 -28
 1825 05ed 16       		.uleb128 0x16
 1826 05ee 6E00     		.ascii	"n\000"
 1827 05f0 01       		.byte	0x1
 1828 05f1 A1       		.byte	0xa1
 1829 05f2 A5000000 		.4byte	0xa5
 1830 05f6 02       		.uleb128 0x2
 1831 05f7 91       		.byte	0x91
 1832 05f8 60       		.sleb128 -32
 1833 05f9 0F       		.uleb128 0xf
 1834 05fa 70000000 		.4byte	.LASF82
 1835 05fe 01       		.byte	0x1
 1836 05ff A3       		.byte	0xa3
 1837 0600 A5000000 		.4byte	0xa5
 1838 0604 02       		.uleb128 0x2
 1839 0605 91       		.byte	0x91
 1840 0606 6C       		.sleb128 -20
 1841 0607 00       		.byte	0
 1842 0608 0E       		.uleb128 0xe
 1843 0609 ED010000 		.4byte	.LASF83
 1844 060d 01       		.byte	0x1
 1845 060e B3       		.byte	0xb3
 1846 060f 32010000 		.4byte	0x132
 1847 0613 00000000 		.4byte	.LFB70
 1848 0617 BC000000 		.4byte	.LFE70-.LFB70
 1849 061b 01       		.uleb128 0x1
 1850 061c 9C       		.byte	0x9c
 1851 061d 40060000 		.4byte	0x640
 1852 0621 0F       		.uleb128 0xf
 1853 0622 BA040000 		.4byte	.LASF84
 1854 0626 01       		.byte	0x1
 1855 0627 B5       		.byte	0xb5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 38


 1856 0628 32010000 		.4byte	0x132
 1857 062c 03       		.uleb128 0x3
 1858 062d 91       		.byte	0x91
 1859 062e E47C     		.sleb128 -412
 1860 0630 0F       		.uleb128 0xf
 1861 0631 4C020000 		.4byte	.LASF70
 1862 0635 01       		.byte	0x1
 1863 0636 B9       		.byte	0xb9
 1864 0637 9A010000 		.4byte	0x19a
 1865 063b 03       		.uleb128 0x3
 1866 063c 91       		.byte	0x91
 1867 063d C87C     		.sleb128 -440
 1868 063f 00       		.byte	0
 1869 0640 0E       		.uleb128 0xe
 1870 0641 FA020000 		.4byte	.LASF85
 1871 0645 01       		.byte	0x1
 1872 0646 C8       		.byte	0xc8
 1873 0647 32010000 		.4byte	0x132
 1874 064b 00000000 		.4byte	.LFB71
 1875 064f 04010000 		.4byte	.LFE71-.LFB71
 1876 0653 01       		.uleb128 0x1
 1877 0654 9C       		.byte	0x9c
 1878 0655 78060000 		.4byte	0x678
 1879 0659 0F       		.uleb128 0xf
 1880 065a BA040000 		.4byte	.LASF84
 1881 065e 01       		.byte	0x1
 1882 065f CA       		.byte	0xca
 1883 0660 32010000 		.4byte	0x132
 1884 0664 03       		.uleb128 0x3
 1885 0665 91       		.byte	0x91
 1886 0666 E47C     		.sleb128 -412
 1887 0668 0F       		.uleb128 0xf
 1888 0669 A0010000 		.4byte	.LASF76
 1889 066d 01       		.byte	0x1
 1890 066e CE       		.byte	0xce
 1891 066f DE010000 		.4byte	0x1de
 1892 0673 03       		.uleb128 0x3
 1893 0674 91       		.byte	0x91
 1894 0675 D47C     		.sleb128 -428
 1895 0677 00       		.byte	0
 1896 0678 18       		.uleb128 0x18
 1897 0679 5A040000 		.4byte	.LASF86
 1898 067d 0A       		.byte	0xa
 1899 067e 1207     		.2byte	0x712
 1900 0680 84060000 		.4byte	0x684
 1901 0684 0C       		.uleb128 0xc
 1902 0685 76000000 		.4byte	0x76
 1903 0689 19       		.uleb128 0x19
 1904 068a 3C020000 		.4byte	.LASF87
 1905 068e 07       		.byte	0x7
 1906 068f 11       		.byte	0x11
 1907 0690 22030000 		.4byte	0x322
 1908 0694 05       		.uleb128 0x5
 1909 0695 03       		.byte	0x3
 1910 0696 00000000 		.4byte	buffer_overflow
 1911 069a 19       		.uleb128 0x19
 1912 069b 88010000 		.4byte	.LASF88
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 39


 1913 069f 07       		.byte	0x7
 1914 06a0 22       		.byte	0x22
 1915 06a1 8D000000 		.4byte	0x8d
 1916 06a5 05       		.uleb128 0x5
 1917 06a6 03       		.byte	0x3
 1918 06a7 00000000 		.4byte	dataPointsInStack
 1919 06ab 19       		.uleb128 0x19
 1920 06ac CE010000 		.4byte	.LASF89
 1921 06b0 07       		.byte	0x7
 1922 06b1 23       		.byte	0x23
 1923 06b2 8D000000 		.4byte	0x8d
 1924 06b6 05       		.uleb128 0x5
 1925 06b7 03       		.byte	0x3
 1926 06b8 00000000 		.4byte	dataPointsInStackDesired
 1927 06bc 06       		.uleb128 0x6
 1928 06bd 26020000 		.4byte	0x226
 1929 06c1 CC060000 		.4byte	0x6cc
 1930 06c5 07       		.uleb128 0x7
 1931 06c6 CD000000 		.4byte	0xcd
 1932 06ca 95       		.byte	0x95
 1933 06cb 00       		.byte	0
 1934 06cc 19       		.uleb128 0x19
 1935 06cd 43010000 		.4byte	.LASF90
 1936 06d1 07       		.byte	0x7
 1937 06d2 24       		.byte	0x24
 1938 06d3 BC060000 		.4byte	0x6bc
 1939 06d7 05       		.uleb128 0x5
 1940 06d8 03       		.byte	0x3
 1941 06d9 00000000 		.4byte	data
 1942 06dd 19       		.uleb128 0x19
 1943 06de 8C040000 		.4byte	.LASF91
 1944 06e2 08       		.byte	0x8
 1945 06e3 21       		.byte	0x21
 1946 06e4 81000000 		.4byte	0x81
 1947 06e8 05       		.uleb128 0x5
 1948 06e9 03       		.byte	0x3
 1949 06ea 00000000 		.4byte	modem_state
 1950 06ee 19       		.uleb128 0x19
 1951 06ef 15030000 		.4byte	.LASF92
 1952 06f3 08       		.byte	0x8
 1953 06f4 64       		.byte	0x64
 1954 06f5 A5000000 		.4byte	0xa5
 1955 06f9 05       		.uleb128 0x5
 1956 06fa 03       		.byte	0x3
 1957 06fb 00000000 		.4byte	modem_start_time_stamp
 1958 06ff 19       		.uleb128 0x19
 1959 0700 54020000 		.4byte	.LASF64
 1960 0704 08       		.byte	0x8
 1961 0705 65       		.byte	0x65
 1962 0706 5E020000 		.4byte	0x25e
 1963 070a 05       		.uleb128 0x5
 1964 070b 03       		.byte	0x3
 1965 070c 00000000 		.4byte	modem_info
 1966 0710 19       		.uleb128 0x19
 1967 0711 BB030000 		.4byte	.LASF93
 1968 0715 08       		.byte	0x8
 1969 0716 66       		.byte	0x66
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 40


 1970 0717 D2020000 		.4byte	0x2d2
 1971 071b 05       		.uleb128 0x5
 1972 071c 03       		.byte	0x3
 1973 071d 00000000 		.4byte	modem_stats
 1974 0721 19       		.uleb128 0x19
 1975 0722 6C050000 		.4byte	.LASF94
 1976 0726 08       		.byte	0x8
 1977 0727 67       		.byte	0x67
 1978 0728 29030000 		.4byte	0x329
 1979 072c 05       		.uleb128 0x5
 1980 072d 03       		.byte	0x3
 1981 072e 00000000 		.4byte	updatable_parameters
 1982 0732 06       		.uleb128 0x6
 1983 0733 BF000000 		.4byte	0xbf
 1984 0737 43070000 		.4byte	0x743
 1985 073b 1A       		.uleb128 0x1a
 1986 073c CD000000 		.4byte	0xcd
 1987 0740 0F27     		.2byte	0x270f
 1988 0742 00       		.byte	0
 1989 0743 19       		.uleb128 0x19
 1990 0744 90000000 		.4byte	.LASF95
 1991 0748 09       		.byte	0x9
 1992 0749 18       		.byte	0x18
 1993 074a 32070000 		.4byte	0x732
 1994 074e 05       		.uleb128 0x5
 1995 074f 03       		.byte	0x3
 1996 0750 00000000 		.4byte	http_request
 1997 0754 19       		.uleb128 0x19
 1998 0755 9F050000 		.4byte	.LASF96
 1999 0759 09       		.byte	0x9
 2000 075a 19       		.byte	0x19
 2001 075b 32070000 		.4byte	0x732
 2002 075f 05       		.uleb128 0x5
 2003 0760 03       		.byte	0x3
 2004 0761 00000000 		.4byte	http_body
 2005 0765 06       		.uleb128 0x6
 2006 0766 BF000000 		.4byte	0xbf
 2007 076a 75070000 		.4byte	0x775
 2008 076e 07       		.uleb128 0x7
 2009 076f CD000000 		.4byte	0xcd
 2010 0773 C7       		.byte	0xc7
 2011 0774 00       		.byte	0
 2012 0775 19       		.uleb128 0x19
 2013 0776 CB040000 		.4byte	.LASF97
 2014 077a 09       		.byte	0x9
 2015 077b 1A       		.byte	0x1a
 2016 077c 65070000 		.4byte	0x765
 2017 0780 05       		.uleb128 0x5
 2018 0781 03       		.byte	0x3
 2019 0782 00000000 		.4byte	http_route
 2020 0786 19       		.uleb128 0x19
 2021 0787 3B040000 		.4byte	.LASF98
 2022 078b 09       		.byte	0x9
 2023 078c 41       		.byte	0x41
 2024 078d A4030000 		.4byte	0x3a4
 2025 0791 05       		.uleb128 0x5
 2026 0792 03       		.byte	0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 41


 2027 0793 00000000 		.4byte	system_info
 2028 0797 19       		.uleb128 0x19
 2029 0798 74030000 		.4byte	.LASF99
 2030 079c 09       		.byte	0x9
 2031 079d 53       		.byte	0x53
 2032 079e E0030000 		.4byte	0x3e0
 2033 07a2 05       		.uleb128 0x5
 2034 07a3 03       		.byte	0x3
 2035 07a4 00000000 		.4byte	system_settings
 2036 07a8 19       		.uleb128 0x19
 2037 07a9 09000000 		.4byte	.LASF100
 2038 07ad 09       		.byte	0x9
 2039 07ae 6F       		.byte	0x6f
 2040 07af 6D030000 		.4byte	0x36d
 2041 07b3 05       		.uleb128 0x5
 2042 07b4 03       		.byte	0x3
 2043 07b5 00000000 		.4byte	alarmMeasure
 2044 07b9 19       		.uleb128 0x19
 2045 07ba C7030000 		.4byte	.LASF101
 2046 07be 09       		.byte	0x9
 2047 07bf 70       		.byte	0x70
 2048 07c0 81000000 		.4byte	0x81
 2049 07c4 05       		.uleb128 0x5
 2050 07c5 03       		.byte	0x3
 2051 07c6 00000000 		.4byte	timeToMeasure
 2052 07ca 19       		.uleb128 0x19
 2053 07cb D6020000 		.4byte	.LASF102
 2054 07cf 09       		.byte	0x9
 2055 07d0 71       		.byte	0x71
 2056 07d1 6D030000 		.4byte	0x36d
 2057 07d5 05       		.uleb128 0x5
 2058 07d6 03       		.byte	0x3
 2059 07d7 00000000 		.4byte	alarmSync
 2060 07db 19       		.uleb128 0x19
 2061 07dc CA050000 		.4byte	.LASF103
 2062 07e0 09       		.byte	0x9
 2063 07e1 72       		.byte	0x72
 2064 07e2 81000000 		.4byte	0x81
 2065 07e6 05       		.uleb128 0x5
 2066 07e7 03       		.byte	0x3
 2067 07e8 00000000 		.4byte	timeToSync
 2068 07ec 19       		.uleb128 0x19
 2069 07ed 9E040000 		.4byte	.LASF104
 2070 07f1 09       		.byte	0x9
 2071 07f2 73       		.byte	0x73
 2072 07f3 81000000 		.4byte	0x81
 2073 07f7 05       		.uleb128 0x5
 2074 07f8 03       		.byte	0x3
 2075 07f9 00000000 		.4byte	timeToSycnRemoteParams
 2076 07fd 1B       		.uleb128 0x1b
 2077 07fe 68657900 		.ascii	"hey\000"
 2078 0802 09       		.byte	0x9
 2079 0803 74       		.byte	0x74
 2080 0804 81000000 		.4byte	0x81
 2081 0808 05       		.uleb128 0x5
 2082 0809 03       		.byte	0x3
 2083 080a 00000000 		.4byte	hey
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 42


 2084 080e 00       		.byte	0
 2085              		.section	.debug_abbrev,"",%progbits
 2086              	.Ldebug_abbrev0:
 2087 0000 01       		.uleb128 0x1
 2088 0001 11       		.uleb128 0x11
 2089 0002 01       		.byte	0x1
 2090 0003 25       		.uleb128 0x25
 2091 0004 0E       		.uleb128 0xe
 2092 0005 13       		.uleb128 0x13
 2093 0006 0B       		.uleb128 0xb
 2094 0007 03       		.uleb128 0x3
 2095 0008 0E       		.uleb128 0xe
 2096 0009 1B       		.uleb128 0x1b
 2097 000a 0E       		.uleb128 0xe
 2098 000b 55       		.uleb128 0x55
 2099 000c 17       		.uleb128 0x17
 2100 000d 11       		.uleb128 0x11
 2101 000e 01       		.uleb128 0x1
 2102 000f 10       		.uleb128 0x10
 2103 0010 17       		.uleb128 0x17
 2104 0011 00       		.byte	0
 2105 0012 00       		.byte	0
 2106 0013 02       		.uleb128 0x2
 2107 0014 24       		.uleb128 0x24
 2108 0015 00       		.byte	0
 2109 0016 0B       		.uleb128 0xb
 2110 0017 0B       		.uleb128 0xb
 2111 0018 3E       		.uleb128 0x3e
 2112 0019 0B       		.uleb128 0xb
 2113 001a 03       		.uleb128 0x3
 2114 001b 0E       		.uleb128 0xe
 2115 001c 00       		.byte	0
 2116 001d 00       		.byte	0
 2117 001e 03       		.uleb128 0x3
 2118 001f 16       		.uleb128 0x16
 2119 0020 00       		.byte	0
 2120 0021 03       		.uleb128 0x3
 2121 0022 0E       		.uleb128 0xe
 2122 0023 3A       		.uleb128 0x3a
 2123 0024 0B       		.uleb128 0xb
 2124 0025 3B       		.uleb128 0x3b
 2125 0026 0B       		.uleb128 0xb
 2126 0027 49       		.uleb128 0x49
 2127 0028 13       		.uleb128 0x13
 2128 0029 00       		.byte	0
 2129 002a 00       		.byte	0
 2130 002b 04       		.uleb128 0x4
 2131 002c 24       		.uleb128 0x24
 2132 002d 00       		.byte	0
 2133 002e 0B       		.uleb128 0xb
 2134 002f 0B       		.uleb128 0xb
 2135 0030 3E       		.uleb128 0x3e
 2136 0031 0B       		.uleb128 0xb
 2137 0032 03       		.uleb128 0x3
 2138 0033 08       		.uleb128 0x8
 2139 0034 00       		.byte	0
 2140 0035 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 43


 2141 0036 05       		.uleb128 0x5
 2142 0037 16       		.uleb128 0x16
 2143 0038 00       		.byte	0
 2144 0039 03       		.uleb128 0x3
 2145 003a 0E       		.uleb128 0xe
 2146 003b 3A       		.uleb128 0x3a
 2147 003c 0B       		.uleb128 0xb
 2148 003d 3B       		.uleb128 0x3b
 2149 003e 05       		.uleb128 0x5
 2150 003f 49       		.uleb128 0x49
 2151 0040 13       		.uleb128 0x13
 2152 0041 00       		.byte	0
 2153 0042 00       		.byte	0
 2154 0043 06       		.uleb128 0x6
 2155 0044 01       		.uleb128 0x1
 2156 0045 01       		.byte	0x1
 2157 0046 49       		.uleb128 0x49
 2158 0047 13       		.uleb128 0x13
 2159 0048 01       		.uleb128 0x1
 2160 0049 13       		.uleb128 0x13
 2161 004a 00       		.byte	0
 2162 004b 00       		.byte	0
 2163 004c 07       		.uleb128 0x7
 2164 004d 21       		.uleb128 0x21
 2165 004e 00       		.byte	0
 2166 004f 49       		.uleb128 0x49
 2167 0050 13       		.uleb128 0x13
 2168 0051 2F       		.uleb128 0x2f
 2169 0052 0B       		.uleb128 0xb
 2170 0053 00       		.byte	0
 2171 0054 00       		.byte	0
 2172 0055 08       		.uleb128 0x8
 2173 0056 13       		.uleb128 0x13
 2174 0057 01       		.byte	0x1
 2175 0058 0B       		.uleb128 0xb
 2176 0059 05       		.uleb128 0x5
 2177 005a 3A       		.uleb128 0x3a
 2178 005b 0B       		.uleb128 0xb
 2179 005c 3B       		.uleb128 0x3b
 2180 005d 0B       		.uleb128 0xb
 2181 005e 01       		.uleb128 0x1
 2182 005f 13       		.uleb128 0x13
 2183 0060 00       		.byte	0
 2184 0061 00       		.byte	0
 2185 0062 09       		.uleb128 0x9
 2186 0063 0D       		.uleb128 0xd
 2187 0064 00       		.byte	0
 2188 0065 03       		.uleb128 0x3
 2189 0066 0E       		.uleb128 0xe
 2190 0067 3A       		.uleb128 0x3a
 2191 0068 0B       		.uleb128 0xb
 2192 0069 3B       		.uleb128 0x3b
 2193 006a 0B       		.uleb128 0xb
 2194 006b 49       		.uleb128 0x49
 2195 006c 13       		.uleb128 0x13
 2196 006d 38       		.uleb128 0x38
 2197 006e 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 44


 2198 006f 00       		.byte	0
 2199 0070 00       		.byte	0
 2200 0071 0A       		.uleb128 0xa
 2201 0072 13       		.uleb128 0x13
 2202 0073 01       		.byte	0x1
 2203 0074 0B       		.uleb128 0xb
 2204 0075 0B       		.uleb128 0xb
 2205 0076 3A       		.uleb128 0x3a
 2206 0077 0B       		.uleb128 0xb
 2207 0078 3B       		.uleb128 0x3b
 2208 0079 0B       		.uleb128 0xb
 2209 007a 01       		.uleb128 0x1
 2210 007b 13       		.uleb128 0x13
 2211 007c 00       		.byte	0
 2212 007d 00       		.byte	0
 2213 007e 0B       		.uleb128 0xb
 2214 007f 0D       		.uleb128 0xd
 2215 0080 00       		.byte	0
 2216 0081 03       		.uleb128 0x3
 2217 0082 08       		.uleb128 0x8
 2218 0083 3A       		.uleb128 0x3a
 2219 0084 0B       		.uleb128 0xb
 2220 0085 3B       		.uleb128 0x3b
 2221 0086 0B       		.uleb128 0xb
 2222 0087 49       		.uleb128 0x49
 2223 0088 13       		.uleb128 0x13
 2224 0089 38       		.uleb128 0x38
 2225 008a 0B       		.uleb128 0xb
 2226 008b 00       		.byte	0
 2227 008c 00       		.byte	0
 2228 008d 0C       		.uleb128 0xc
 2229 008e 35       		.uleb128 0x35
 2230 008f 00       		.byte	0
 2231 0090 49       		.uleb128 0x49
 2232 0091 13       		.uleb128 0x13
 2233 0092 00       		.byte	0
 2234 0093 00       		.byte	0
 2235 0094 0D       		.uleb128 0xd
 2236 0095 0F       		.uleb128 0xf
 2237 0096 00       		.byte	0
 2238 0097 0B       		.uleb128 0xb
 2239 0098 0B       		.uleb128 0xb
 2240 0099 49       		.uleb128 0x49
 2241 009a 13       		.uleb128 0x13
 2242 009b 00       		.byte	0
 2243 009c 00       		.byte	0
 2244 009d 0E       		.uleb128 0xe
 2245 009e 2E       		.uleb128 0x2e
 2246 009f 01       		.byte	0x1
 2247 00a0 3F       		.uleb128 0x3f
 2248 00a1 19       		.uleb128 0x19
 2249 00a2 03       		.uleb128 0x3
 2250 00a3 0E       		.uleb128 0xe
 2251 00a4 3A       		.uleb128 0x3a
 2252 00a5 0B       		.uleb128 0xb
 2253 00a6 3B       		.uleb128 0x3b
 2254 00a7 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 45


 2255 00a8 49       		.uleb128 0x49
 2256 00a9 13       		.uleb128 0x13
 2257 00aa 11       		.uleb128 0x11
 2258 00ab 01       		.uleb128 0x1
 2259 00ac 12       		.uleb128 0x12
 2260 00ad 06       		.uleb128 0x6
 2261 00ae 40       		.uleb128 0x40
 2262 00af 18       		.uleb128 0x18
 2263 00b0 9642     		.uleb128 0x2116
 2264 00b2 19       		.uleb128 0x19
 2265 00b3 01       		.uleb128 0x1
 2266 00b4 13       		.uleb128 0x13
 2267 00b5 00       		.byte	0
 2268 00b6 00       		.byte	0
 2269 00b7 0F       		.uleb128 0xf
 2270 00b8 34       		.uleb128 0x34
 2271 00b9 00       		.byte	0
 2272 00ba 03       		.uleb128 0x3
 2273 00bb 0E       		.uleb128 0xe
 2274 00bc 3A       		.uleb128 0x3a
 2275 00bd 0B       		.uleb128 0xb
 2276 00be 3B       		.uleb128 0x3b
 2277 00bf 0B       		.uleb128 0xb
 2278 00c0 49       		.uleb128 0x49
 2279 00c1 13       		.uleb128 0x13
 2280 00c2 02       		.uleb128 0x2
 2281 00c3 18       		.uleb128 0x18
 2282 00c4 00       		.byte	0
 2283 00c5 00       		.byte	0
 2284 00c6 10       		.uleb128 0x10
 2285 00c7 0B       		.uleb128 0xb
 2286 00c8 01       		.byte	0x1
 2287 00c9 11       		.uleb128 0x11
 2288 00ca 01       		.uleb128 0x1
 2289 00cb 12       		.uleb128 0x12
 2290 00cc 06       		.uleb128 0x6
 2291 00cd 00       		.byte	0
 2292 00ce 00       		.byte	0
 2293 00cf 11       		.uleb128 0x11
 2294 00d0 34       		.uleb128 0x34
 2295 00d1 00       		.byte	0
 2296 00d2 03       		.uleb128 0x3
 2297 00d3 08       		.uleb128 0x8
 2298 00d4 3A       		.uleb128 0x3a
 2299 00d5 0B       		.uleb128 0xb
 2300 00d6 3B       		.uleb128 0x3b
 2301 00d7 0B       		.uleb128 0xb
 2302 00d8 49       		.uleb128 0x49
 2303 00d9 13       		.uleb128 0x13
 2304 00da 02       		.uleb128 0x2
 2305 00db 18       		.uleb128 0x18
 2306 00dc 00       		.byte	0
 2307 00dd 00       		.byte	0
 2308 00de 12       		.uleb128 0x12
 2309 00df 0B       		.uleb128 0xb
 2310 00e0 01       		.byte	0x1
 2311 00e1 11       		.uleb128 0x11
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 46


 2312 00e2 01       		.uleb128 0x1
 2313 00e3 12       		.uleb128 0x12
 2314 00e4 06       		.uleb128 0x6
 2315 00e5 01       		.uleb128 0x1
 2316 00e6 13       		.uleb128 0x13
 2317 00e7 00       		.byte	0
 2318 00e8 00       		.byte	0
 2319 00e9 13       		.uleb128 0x13
 2320 00ea 2E       		.uleb128 0x2e
 2321 00eb 01       		.byte	0x1
 2322 00ec 3F       		.uleb128 0x3f
 2323 00ed 19       		.uleb128 0x19
 2324 00ee 03       		.uleb128 0x3
 2325 00ef 0E       		.uleb128 0xe
 2326 00f0 3A       		.uleb128 0x3a
 2327 00f1 0B       		.uleb128 0xb
 2328 00f2 3B       		.uleb128 0x3b
 2329 00f3 0B       		.uleb128 0xb
 2330 00f4 27       		.uleb128 0x27
 2331 00f5 19       		.uleb128 0x19
 2332 00f6 49       		.uleb128 0x49
 2333 00f7 13       		.uleb128 0x13
 2334 00f8 11       		.uleb128 0x11
 2335 00f9 01       		.uleb128 0x1
 2336 00fa 12       		.uleb128 0x12
 2337 00fb 06       		.uleb128 0x6
 2338 00fc 40       		.uleb128 0x40
 2339 00fd 18       		.uleb128 0x18
 2340 00fe 9642     		.uleb128 0x2116
 2341 0100 19       		.uleb128 0x19
 2342 0101 01       		.uleb128 0x1
 2343 0102 13       		.uleb128 0x13
 2344 0103 00       		.byte	0
 2345 0104 00       		.byte	0
 2346 0105 14       		.uleb128 0x14
 2347 0106 05       		.uleb128 0x5
 2348 0107 00       		.byte	0
 2349 0108 03       		.uleb128 0x3
 2350 0109 0E       		.uleb128 0xe
 2351 010a 3A       		.uleb128 0x3a
 2352 010b 0B       		.uleb128 0xb
 2353 010c 3B       		.uleb128 0x3b
 2354 010d 0B       		.uleb128 0xb
 2355 010e 49       		.uleb128 0x49
 2356 010f 13       		.uleb128 0x13
 2357 0110 02       		.uleb128 0x2
 2358 0111 18       		.uleb128 0x18
 2359 0112 00       		.byte	0
 2360 0113 00       		.byte	0
 2361 0114 15       		.uleb128 0x15
 2362 0115 2E       		.uleb128 0x2e
 2363 0116 01       		.byte	0x1
 2364 0117 3F       		.uleb128 0x3f
 2365 0118 19       		.uleb128 0x19
 2366 0119 03       		.uleb128 0x3
 2367 011a 0E       		.uleb128 0xe
 2368 011b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 47


 2369 011c 0B       		.uleb128 0xb
 2370 011d 3B       		.uleb128 0x3b
 2371 011e 0B       		.uleb128 0xb
 2372 011f 27       		.uleb128 0x27
 2373 0120 19       		.uleb128 0x19
 2374 0121 11       		.uleb128 0x11
 2375 0122 01       		.uleb128 0x1
 2376 0123 12       		.uleb128 0x12
 2377 0124 06       		.uleb128 0x6
 2378 0125 40       		.uleb128 0x40
 2379 0126 18       		.uleb128 0x18
 2380 0127 9642     		.uleb128 0x2116
 2381 0129 19       		.uleb128 0x19
 2382 012a 01       		.uleb128 0x1
 2383 012b 13       		.uleb128 0x13
 2384 012c 00       		.byte	0
 2385 012d 00       		.byte	0
 2386 012e 16       		.uleb128 0x16
 2387 012f 05       		.uleb128 0x5
 2388 0130 00       		.byte	0
 2389 0131 03       		.uleb128 0x3
 2390 0132 08       		.uleb128 0x8
 2391 0133 3A       		.uleb128 0x3a
 2392 0134 0B       		.uleb128 0xb
 2393 0135 3B       		.uleb128 0x3b
 2394 0136 0B       		.uleb128 0xb
 2395 0137 49       		.uleb128 0x49
 2396 0138 13       		.uleb128 0x13
 2397 0139 02       		.uleb128 0x2
 2398 013a 18       		.uleb128 0x18
 2399 013b 00       		.byte	0
 2400 013c 00       		.byte	0
 2401 013d 17       		.uleb128 0x17
 2402 013e 2E       		.uleb128 0x2e
 2403 013f 01       		.byte	0x1
 2404 0140 3F       		.uleb128 0x3f
 2405 0141 19       		.uleb128 0x19
 2406 0142 03       		.uleb128 0x3
 2407 0143 0E       		.uleb128 0xe
 2408 0144 3A       		.uleb128 0x3a
 2409 0145 0B       		.uleb128 0xb
 2410 0146 3B       		.uleb128 0x3b
 2411 0147 0B       		.uleb128 0xb
 2412 0148 27       		.uleb128 0x27
 2413 0149 19       		.uleb128 0x19
 2414 014a 11       		.uleb128 0x11
 2415 014b 01       		.uleb128 0x1
 2416 014c 12       		.uleb128 0x12
 2417 014d 06       		.uleb128 0x6
 2418 014e 40       		.uleb128 0x40
 2419 014f 18       		.uleb128 0x18
 2420 0150 9742     		.uleb128 0x2117
 2421 0152 19       		.uleb128 0x19
 2422 0153 01       		.uleb128 0x1
 2423 0154 13       		.uleb128 0x13
 2424 0155 00       		.byte	0
 2425 0156 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 48


 2426 0157 18       		.uleb128 0x18
 2427 0158 34       		.uleb128 0x34
 2428 0159 00       		.byte	0
 2429 015a 03       		.uleb128 0x3
 2430 015b 0E       		.uleb128 0xe
 2431 015c 3A       		.uleb128 0x3a
 2432 015d 0B       		.uleb128 0xb
 2433 015e 3B       		.uleb128 0x3b
 2434 015f 05       		.uleb128 0x5
 2435 0160 49       		.uleb128 0x49
 2436 0161 13       		.uleb128 0x13
 2437 0162 3F       		.uleb128 0x3f
 2438 0163 19       		.uleb128 0x19
 2439 0164 3C       		.uleb128 0x3c
 2440 0165 19       		.uleb128 0x19
 2441 0166 00       		.byte	0
 2442 0167 00       		.byte	0
 2443 0168 19       		.uleb128 0x19
 2444 0169 34       		.uleb128 0x34
 2445 016a 00       		.byte	0
 2446 016b 03       		.uleb128 0x3
 2447 016c 0E       		.uleb128 0xe
 2448 016d 3A       		.uleb128 0x3a
 2449 016e 0B       		.uleb128 0xb
 2450 016f 3B       		.uleb128 0x3b
 2451 0170 0B       		.uleb128 0xb
 2452 0171 49       		.uleb128 0x49
 2453 0172 13       		.uleb128 0x13
 2454 0173 3F       		.uleb128 0x3f
 2455 0174 19       		.uleb128 0x19
 2456 0175 02       		.uleb128 0x2
 2457 0176 18       		.uleb128 0x18
 2458 0177 00       		.byte	0
 2459 0178 00       		.byte	0
 2460 0179 1A       		.uleb128 0x1a
 2461 017a 21       		.uleb128 0x21
 2462 017b 00       		.byte	0
 2463 017c 49       		.uleb128 0x49
 2464 017d 13       		.uleb128 0x13
 2465 017e 2F       		.uleb128 0x2f
 2466 017f 05       		.uleb128 0x5
 2467 0180 00       		.byte	0
 2468 0181 00       		.byte	0
 2469 0182 1B       		.uleb128 0x1b
 2470 0183 34       		.uleb128 0x34
 2471 0184 00       		.byte	0
 2472 0185 03       		.uleb128 0x3
 2473 0186 08       		.uleb128 0x8
 2474 0187 3A       		.uleb128 0x3a
 2475 0188 0B       		.uleb128 0xb
 2476 0189 3B       		.uleb128 0x3b
 2477 018a 0B       		.uleb128 0xb
 2478 018b 49       		.uleb128 0x49
 2479 018c 13       		.uleb128 0x13
 2480 018d 3F       		.uleb128 0x3f
 2481 018e 19       		.uleb128 0x19
 2482 018f 02       		.uleb128 0x2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 49


 2483 0190 18       		.uleb128 0x18
 2484 0191 00       		.byte	0
 2485 0192 00       		.byte	0
 2486 0193 00       		.byte	0
 2487              		.section	.debug_aranges,"",%progbits
 2488 0000 54000000 		.4byte	0x54
 2489 0004 0200     		.2byte	0x2
 2490 0006 00000000 		.4byte	.Ldebug_info0
 2491 000a 04       		.byte	0x4
 2492 000b 00       		.byte	0
 2493 000c 0000     		.2byte	0
 2494 000e 0000     		.2byte	0
 2495 0010 00000000 		.4byte	.LFB64
 2496 0014 3C010000 		.4byte	.LFE64-.LFB64
 2497 0018 00000000 		.4byte	.LFB65
 2498 001c 98010000 		.4byte	.LFE65-.LFB65
 2499 0020 00000000 		.4byte	.LFB66
 2500 0024 C4000000 		.4byte	.LFE66-.LFB66
 2501 0028 00000000 		.4byte	.LFB67
 2502 002c 74000000 		.4byte	.LFE67-.LFB67
 2503 0030 00000000 		.4byte	.LFB68
 2504 0034 28000000 		.4byte	.LFE68-.LFB68
 2505 0038 00000000 		.4byte	.LFB69
 2506 003c 84000000 		.4byte	.LFE69-.LFB69
 2507 0040 00000000 		.4byte	.LFB70
 2508 0044 BC000000 		.4byte	.LFE70-.LFB70
 2509 0048 00000000 		.4byte	.LFB71
 2510 004c 04010000 		.4byte	.LFE71-.LFB71
 2511 0050 00000000 		.4byte	0
 2512 0054 00000000 		.4byte	0
 2513              		.section	.debug_ranges,"",%progbits
 2514              	.Ldebug_ranges0:
 2515 0000 00000000 		.4byte	.LFB64
 2516 0004 3C010000 		.4byte	.LFE64
 2517 0008 00000000 		.4byte	.LFB65
 2518 000c 98010000 		.4byte	.LFE65
 2519 0010 00000000 		.4byte	.LFB66
 2520 0014 C4000000 		.4byte	.LFE66
 2521 0018 00000000 		.4byte	.LFB67
 2522 001c 74000000 		.4byte	.LFE67
 2523 0020 00000000 		.4byte	.LFB68
 2524 0024 28000000 		.4byte	.LFE68
 2525 0028 00000000 		.4byte	.LFB69
 2526 002c 84000000 		.4byte	.LFE69
 2527 0030 00000000 		.4byte	.LFB70
 2528 0034 BC000000 		.4byte	.LFE70
 2529 0038 00000000 		.4byte	.LFB71
 2530 003c 04010000 		.4byte	.LFE71
 2531 0040 00000000 		.4byte	0
 2532 0044 00000000 		.4byte	0
 2533              		.section	.debug_line,"",%progbits
 2534              	.Ldebug_line0:
 2535 0000 D6020000 		.section	.debug_str,"MS",%progbits,1
 2535      02008E01 
 2535      00000201 
 2535      FB0E0D00 
 2535      01010101 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 50


 2536              	.LASF41:
 2537 0000 6D6F6465 		.ascii	"model_id\000"
 2537      6C5F6964 
 2537      00
 2538              	.LASF100:
 2539 0009 616C6172 		.ascii	"alarmMeasure\000"
 2539      6D4D6561 
 2539      73757265 
 2539      00
 2540              	.LASF40:
 2541 0016 73696D5F 		.ascii	"sim_id\000"
 2541      696400
 2542              	.LASF25:
 2543 001d 766F6C74 		.ascii	"voltage_solar\000"
 2543      6167655F 
 2543      736F6C61 
 2543      7200
 2544              	.LASF69:
 2545 002b 7379735F 		.ascii	"sys_settings_t\000"
 2545      73657474 
 2545      696E6773 
 2545      5F7400
 2546              	.LASF60:
 2547 003a 63757272 		.ascii	"currentCountDownValue\000"
 2547      656E7443 
 2547      6F756E74 
 2547      446F776E 
 2547      56616C75 
 2548              	.LASF72:
 2549 0050 6F666673 		.ascii	"offset\000"
 2549      657400
 2550              	.LASF75:
 2551 0057 70726573 		.ascii	"pressure_sensor_readings\000"
 2551      73757265 
 2551      5F73656E 
 2551      736F725F 
 2551      72656164 
 2552              	.LASF82:
 2553 0070 6D656469 		.ascii	"median\000"
 2553      616E00
 2554              	.LASF59:
 2555 0077 636F756E 		.ascii	"countDownValue\000"
 2555      74446F77 
 2555      6E56616C 
 2555      756500
 2556              	.LASF2:
 2557 0086 73686F72 		.ascii	"short int\000"
 2557      7420696E 
 2557      7400
 2558              	.LASF95:
 2559 0090 68747470 		.ascii	"http_request\000"
 2559      5F726571 
 2559      75657374 
 2559      00
 2560              	.LASF19:
 2561 009d 73697A65 		.ascii	"sizetype\000"
 2561      74797065 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 51


 2561      00
 2562              	.LASF67:
 2563 00a6 65705F68 		.ascii	"ep_host\000"
 2563      6F737400 
 2564              	.LASF105:
 2565 00ae 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2565      43313120 
 2565      352E342E 
 2565      31203230 
 2565      31363036 
 2566 00e1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2566      20726576 
 2566      6973696F 
 2566      6E203233 
 2566      37373135 
 2567 0114 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2567      66756E63 
 2567      74696F6E 
 2567      2D736563 
 2567      74696F6E 
 2568              	.LASF78:
 2569 013c 73776170 		.ascii	"swap32\000"
 2569      333200
 2570              	.LASF90:
 2571 0143 64617461 		.ascii	"data\000"
 2571      00
 2572              	.LASF106:
 2573 0148 766F6C74 		.ascii	"voltages.c\000"
 2573      61676573 
 2573      2E6300
 2574              	.LASF27:
 2575 0153 766F6C74 		.ascii	"voltage_pressure\000"
 2575      6167655F 
 2575      70726573 
 2575      73757265 
 2575      00
 2576              	.LASF71:
 2577 0164 6368616E 		.ascii	"channels\000"
 2577      6E656C73 
 2577      00
 2578              	.LASF46:
 2579 016d 65636E6F 		.ascii	"ecno\000"
 2579      00
 2580              	.LASF37:
 2581 0172 76616C75 		.ascii	"value\000"
 2581      6500
 2582              	.LASF24:
 2583 0178 766F6C74 		.ascii	"voltage_battery\000"
 2583      6167655F 
 2583      62617474 
 2583      65727900 
 2584              	.LASF88:
 2585 0188 64617461 		.ascii	"dataPointsInStack\000"
 2585      506F696E 
 2585      7473496E 
 2585      53746163 
 2585      6B00
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 52


 2586              	.LASF11:
 2587 019a 75696E74 		.ascii	"uint8\000"
 2587      3800
 2588              	.LASF76:
 2589 01a0 70726573 		.ascii	"pressure\000"
 2589      73757265 
 2589      00
 2590              	.LASF45:
 2591 01a9 72736370 		.ascii	"rscp\000"
 2591      00
 2592              	.LASF38:
 2593 01ae 74696D65 		.ascii	"timeStamp\000"
 2593      5374616D 
 2593      7000
 2594              	.LASF74:
 2595 01b8 766F6C74 		.ascii	"voltage_take_readings\000"
 2595      6167655F 
 2595      74616B65 
 2595      5F726561 
 2595      64696E67 
 2596              	.LASF89:
 2597 01ce 64617461 		.ascii	"dataPointsInStackDesired\000"
 2597      506F696E 
 2597      7473496E 
 2597      53746163 
 2597      6B446573 
 2598              	.LASF15:
 2599 01e7 666C6F61 		.ascii	"float\000"
 2599      7400
 2600              	.LASF83:
 2601 01ed 766F6C74 		.ascii	"voltages_test\000"
 2601      61676573 
 2601      5F746573 
 2601      7400
 2602              	.LASF28:
 2603 01fb 766F6C74 		.ascii	"voltage_valve_pos_brown\000"
 2603      6167655F 
 2603      76616C76 
 2603      655F706F 
 2603      735F6272 
 2604              	.LASF6:
 2605 0213 6C6F6E67 		.ascii	"long long int\000"
 2605      206C6F6E 
 2605      6720696E 
 2605      7400
 2606              	.LASF13:
 2607 0221 696E7431 		.ascii	"int16\000"
 2607      3600
 2608              	.LASF17:
 2609 0227 63686172 		.ascii	"char\000"
 2609      00
 2610              	.LASF22:
 2611 022c 72656173 		.ascii	"reason\000"
 2611      6F6E00
 2612              	.LASF4:
 2613 0233 6C6F6E67 		.ascii	"long int\000"
 2613      20696E74 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 53


 2613      00
 2614              	.LASF87:
 2615 023c 62756666 		.ascii	"buffer_overflow\000"
 2615      65725F6F 
 2615      76657266 
 2615      6C6F7700 
 2616              	.LASF70:
 2617 024c 766F6C74 		.ascii	"voltage\000"
 2617      61676500 
 2618              	.LASF64:
 2619 0254 6D6F6465 		.ascii	"modem_info\000"
 2619      6D5F696E 
 2619      666F00
 2620              	.LASF32:
 2621 025f 70726573 		.ascii	"pressure_voltage_on\000"
 2621      73757265 
 2621      5F766F6C 
 2621      74616765 
 2621      5F6F6E00 
 2622              	.LASF107:
 2623 0273 433A5C55 		.ascii	"C:\\Users\\dantz\\Documents\\notoriOS\\notoriOS\\no"
 2623      73657273 
 2623      5C64616E 
 2623      747A5C44 
 2623      6F63756D 
 2624 02a0 746F7269 		.ascii	"toriOS.cydsn\000"
 2624      4F532E63 
 2624      7964736E 
 2624      00
 2625              	.LASF77:
 2626 02ad 736F7274 		.ascii	"sort32\000"
 2626      333200
 2627              	.LASF35:
 2628 02b4 70726573 		.ascii	"pressure_depth\000"
 2628      73757265 
 2628      5F646570 
 2628      746800
 2629              	.LASF63:
 2630 02c3 616C6172 		.ascii	"alarm\000"
 2630      6D00
 2631              	.LASF54:
 2632 02c9 6D656173 		.ascii	"measure_time\000"
 2632      7572655F 
 2632      74696D65 
 2632      00
 2633              	.LASF102:
 2634 02d6 616C6172 		.ascii	"alarmSync\000"
 2634      6D53796E 
 2634      6300
 2635              	.LASF18:
 2636 02e0 6C6F6E67 		.ascii	"long double\000"
 2636      20646F75 
 2636      626C6500 
 2637              	.LASF1:
 2638 02ec 756E7369 		.ascii	"unsigned char\000"
 2638      676E6564 
 2638      20636861 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 54


 2638      7200
 2639              	.LASF85:
 2640 02fa 70726573 		.ascii	"pressure_sensor_test\000"
 2640      73757265 
 2640      5F73656E 
 2640      736F725F 
 2640      74657374 
 2641              	.LASF30:
 2642 030f 76616C69 		.ascii	"valid\000"
 2642      6400
 2643              	.LASF92:
 2644 0315 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2644      6D5F7374 
 2644      6172745F 
 2644      74696D65 
 2644      5F737461 
 2645              	.LASF58:
 2646 032c 75706461 		.ascii	"updatable_parameters_t\000"
 2646      7461626C 
 2646      655F7061 
 2646      72616D65 
 2646      74657273 
 2647              	.LASF80:
 2648 0343 66696E64 		.ascii	"find_median32\000"
 2648      5F6D6564 
 2648      69616E33 
 2648      3200
 2649              	.LASF0:
 2650 0351 7369676E 		.ascii	"signed char\000"
 2650      65642063 
 2650      68617200 
 2651              	.LASF7:
 2652 035d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2652      206C6F6E 
 2652      6720756E 
 2652      7369676E 
 2652      65642069 
 2653              	.LASF99:
 2654 0374 73797374 		.ascii	"system_settings\000"
 2654      656D5F73 
 2654      65747469 
 2654      6E677300 
 2655              	.LASF65:
 2656 0384 63686970 		.ascii	"chip_uniqueId\000"
 2656      5F756E69 
 2656      71756549 
 2656      6400
 2657              	.LASF8:
 2658 0392 756E7369 		.ascii	"unsigned int\000"
 2658      676E6564 
 2658      20696E74 
 2658      00
 2659              	.LASF39:
 2660 039f 6B65795F 		.ascii	"key_value_t\000"
 2660      76616C75 
 2660      655F7400 
 2661              	.LASF44:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 55


 2662 03ab 72786C65 		.ascii	"rxlev\000"
 2662      7600
 2663              	.LASF55:
 2664 03b1 73796E63 		.ascii	"sync_time\000"
 2664      5F74696D 
 2664      6500
 2665              	.LASF93:
 2666 03bb 6D6F6465 		.ascii	"modem_stats\000"
 2666      6D5F7374 
 2666      61747300 
 2667              	.LASF101:
 2668 03c7 74696D65 		.ascii	"timeToMeasure\000"
 2668      546F4D65 
 2668      61737572 
 2668      6500
 2669              	.LASF36:
 2670 03d5 70726573 		.ascii	"pressure_t\000"
 2670      73757265 
 2670      5F7400
 2671              	.LASF53:
 2672 03e0 73696D5F 		.ascii	"sim_type\000"
 2672      74797065 
 2672      00
 2673              	.LASF66:
 2674 03e9 7379735F 		.ascii	"sys_info_t\000"
 2674      696E666F 
 2674      5F7400
 2675              	.LASF3:
 2676 03f4 73686F72 		.ascii	"short unsigned int\000"
 2676      7420756E 
 2676      7369676E 
 2676      65642069 
 2676      6E7400
 2677              	.LASF49:
 2678 0407 74696D65 		.ascii	"time_to_network_connect\000"
 2678      5F746F5F 
 2678      6E657477 
 2678      6F726B5F 
 2678      636F6E6E 
 2679              	.LASF21:
 2680 041f 73746174 		.ascii	"status\000"
 2680      757300
 2681              	.LASF33:
 2682 0426 70726573 		.ascii	"pressure_voltage_off\000"
 2682      73757265 
 2682      5F766F6C 
 2682      74616765 
 2682      5F6F6666 
 2683              	.LASF98:
 2684 043b 73797374 		.ascii	"system_info\000"
 2684      656D5F69 
 2684      6E666F00 
 2685              	.LASF50:
 2686 0447 74696D65 		.ascii	"time_to_acquire_ip\000"
 2686      5F746F5F 
 2686      61637175 
 2686      6972655F 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 56


 2686      697000
 2687              	.LASF86:
 2688 045a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2688      52784275 
 2688      66666572 
 2688      00
 2689              	.LASF42:
 2690 0467 696D6569 		.ascii	"imei\000"
 2690      00
 2691              	.LASF31:
 2692 046c 766F6C74 		.ascii	"voltage_t\000"
 2692      6167655F 
 2692      7400
 2693              	.LASF10:
 2694 0476 696E7433 		.ascii	"int32_t\000"
 2694      325F7400 
 2695              	.LASF51:
 2696 047e 6D6F6465 		.ascii	"modem_stats_t\000"
 2696      6D5F7374 
 2696      6174735F 
 2696      7400
 2697              	.LASF91:
 2698 048c 6D6F6465 		.ascii	"modem_state\000"
 2698      6D5F7374 
 2698      61746500 
 2699              	.LASF57:
 2700 0498 5F426F6F 		.ascii	"_Bool\000"
 2700      6C00
 2701              	.LASF104:
 2702 049e 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2702      546F5379 
 2702      636E5265 
 2702      6D6F7465 
 2702      50617261 
 2703              	.LASF48:
 2704 04b5 72737270 		.ascii	"rsrp\000"
 2704      00
 2705              	.LASF84:
 2706 04ba 74657374 		.ascii	"test\000"
 2706      00
 2707              	.LASF47:
 2708 04bf 72737271 		.ascii	"rsrq\000"
 2708      00
 2709              	.LASF12:
 2710 04c4 75696E74 		.ascii	"uint16\000"
 2710      313600
 2711              	.LASF97:
 2712 04cb 68747470 		.ascii	"http_route\000"
 2712      5F726F75 
 2712      746500
 2713              	.LASF5:
 2714 04d6 6C6F6E67 		.ascii	"long unsigned int\000"
 2714      20756E73 
 2714      69676E65 
 2714      6420696E 
 2714      7400
 2715              	.LASF16:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 57


 2716 04e8 646F7562 		.ascii	"double\000"
 2716      6C6500
 2717              	.LASF81:
 2718 04ef 61727261 		.ascii	"array\000"
 2718      7900
 2719              	.LASF56:
 2720 04f5 64656275 		.ascii	"debug_level\000"
 2720      675F6C65 
 2720      76656C00 
 2721              	.LASF43:
 2722 0501 6D6F6465 		.ascii	"modem_info_t\000"
 2722      6D5F696E 
 2722      666F5F74 
 2722      00
 2723              	.LASF61:
 2724 050e 636F756E 		.ascii	"countDownType\000"
 2724      74446F77 
 2724      6E547970 
 2724      6500
 2725              	.LASF9:
 2726 051c 5F5F696E 		.ascii	"__int32_t\000"
 2726      7433325F 
 2726      7400
 2727              	.LASF62:
 2728 0526 636F756E 		.ascii	"countDownResetCondition\000"
 2728      74446F77 
 2728      6E526573 
 2728      6574436F 
 2728      6E646974 
 2729              	.LASF23:
 2730 053e 74657374 		.ascii	"test_t\000"
 2730      5F7400
 2731              	.LASF29:
 2732 0545 766F6C74 		.ascii	"voltage_valve_pos_blue\000"
 2732      6167655F 
 2732      76616C76 
 2732      655F706F 
 2732      735F626C 
 2733              	.LASF20:
 2734 055c 74657374 		.ascii	"test_name\000"
 2734      5F6E616D 
 2734      6500
 2735              	.LASF14:
 2736 0566 696E7433 		.ascii	"int32\000"
 2736      3200
 2737              	.LASF94:
 2738 056c 75706461 		.ascii	"updatable_parameters\000"
 2738      7461626C 
 2738      655F7061 
 2738      72616D65 
 2738      74657273 
 2739              	.LASF68:
 2740 0581 65705F70 		.ascii	"ep_port\000"
 2740      6F727400 
 2741              	.LASF79:
 2742 0589 70726573 		.ascii	"pressure_calculations\000"
 2742      73757265 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccd3DSYP.s 			page 58


 2742      5F63616C 
 2742      63756C61 
 2742      74696F6E 
 2743              	.LASF96:
 2744 059f 68747470 		.ascii	"http_body\000"
 2744      5F626F64 
 2744      7900
 2745              	.LASF52:
 2746 05a9 6E6F6465 		.ascii	"node_type\000"
 2746      5F747970 
 2746      6500
 2747              	.LASF26:
 2748 05b3 766F6C74 		.ascii	"voltage_charge_current\000"
 2748      6167655F 
 2748      63686172 
 2748      67655F63 
 2748      75727265 
 2749              	.LASF103:
 2750 05ca 74696D65 		.ascii	"timeToSync\000"
 2750      546F5379 
 2750      6E6300
 2751              	.LASF34:
 2752 05d5 70726573 		.ascii	"pressure_current\000"
 2752      73757265 
 2752      5F637572 
 2752      72656E74 
 2752      00
 2753              	.LASF73:
 2754 05e6 72656164 		.ascii	"readings\000"
 2754      696E6773 
 2754      00
 2755              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
