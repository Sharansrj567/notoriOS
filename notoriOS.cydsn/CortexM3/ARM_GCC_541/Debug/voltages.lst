ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"voltages.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	inbox,100,4
  33              		.comm	http_request,10000,4
  34              		.comm	http_body,10000,4
  35              		.comm	http_route,200,4
  36              		.comm	system_info,28,4
  37              		.comm	system_settings,104,4
  38              		.comm	alarmMeasure,6,4
  39              		.comm	timeToMeasure,1,1
  40              		.comm	alarmSync,6,4
  41              		.comm	timeToSync,1,1
  42              		.comm	timeToSycnRemoteParams,1,1
  43              		.comm	hey,1,1
  44              		.comm	alarmAppLED,6,4
  45              		.comm	timeToAppLED,1,1
  46              		.global	__aeabi_f2d
  47              		.global	__aeabi_dsub
  48              		.global	__aeabi_d2f
  49              		.global	__aeabi_fmul
  50              		.global	__aeabi_fsub
  51              		.section	.text.voltage_take_readings,"ax",%progbits
  52              		.align	2
  53              		.global	voltage_take_readings
  54              		.thumb
  55              		.thumb_func
  56              		.type	voltage_take_readings, %function
  57              	voltage_take_readings:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 2


  58              	.LFB64:
  59              		.file 1 "voltages.c"
   1:voltages.c    **** #include "voltages.h"
   2:voltages.c    **** #include "notoriOS.h"
   3:voltages.c    **** #include <math.h>
   4:voltages.c    **** 
   5:voltages.c    **** // Function to take voltage readings and save them in the voltage_t datatype
   6:voltages.c    **** voltage_t voltage_take_readings(){
  60              		.loc 1 6 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 96
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64 0000 B0B5     		push	{r4, r5, r7, lr}
  65              		.cfi_def_cfa_offset 16
  66              		.cfi_offset 4, -16
  67              		.cfi_offset 5, -12
  68              		.cfi_offset 7, -8
  69              		.cfi_offset 14, -4
  70 0002 98B0     		sub	sp, sp, #96
  71              		.cfi_def_cfa_offset 112
  72 0004 00AF     		add	r7, sp, #0
  73              		.cfi_def_cfa_register 7
  74 0006 7860     		str	r0, [r7, #4]
   7:voltages.c    ****     
   8:voltages.c    ****     voltage_t voltage;  // Create variable voltage of data structure voltage_t.
   9:voltages.c    ****      
  10:voltages.c    **** 	Battery_Voltage_Enable_Write(ON);   // Flip on the Battery Voltage ADC pin high (turns it on).
  75              		.loc 1 10 0
  76 0008 0120     		movs	r0, #1
  77 000a FFF7FEFF 		bl	Battery_Voltage_Enable_Write
  11:voltages.c    ****     Pressure_Voltage_Enable_Write(ON);  // Flip on the Pressure Transducer Voltage ADC pin high (tu
  78              		.loc 1 11 0
  79 000e 0120     		movs	r0, #1
  80 0010 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  12:voltages.c    ****     
  13:voltages.c    **** 	CyDelay(10u);	    // 10 seconds delay to give time to flip on ADC pin.
  81              		.loc 1 13 0
  82 0014 0A20     		movs	r0, #10
  83 0016 FFF7FEFF 		bl	CyDelay
  14:voltages.c    ****     
  15:voltages.c    ****     AMux_Start();       // Start the Analog Multiplexer
  84              		.loc 1 15 0
  85 001a FFF7FEFF 		bl	AMux_Start
  16:voltages.c    ****  
  17:voltages.c    ****     ADC_RestoreConfig();// Have to call this and save (See below). Otherwise ADC won't work through
  86              		.loc 1 17 0
  87 001e FFF7FEFF 		bl	ADC_RestoreConfig
  18:voltages.c    ****     
  19:voltages.c    ****     ADC_Start();        // Start the ADC
  88              		.loc 1 19 0
  89 0022 FFF7FEFF 		bl	ADC_Start
  90              	.LBB2:
  20:voltages.c    ****     
  21:voltages.c    ****     float channels[AMux_CHANNELS];
  22:voltages.c    ****     
  23:voltages.c    ****     for(uint8 c = 0; c< AMux_CHANNELS + 1; c++) // Sweep the MUX Channels
  91              		.loc 1 23 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 3


  92 0026 0023     		movs	r3, #0
  93 0028 87F85F30 		strb	r3, [r7, #95]
  94 002c 34E0     		b	.L2
  95              	.L5:
  96              	.LBB3:
  24:voltages.c    ****     {
  25:voltages.c    ****         
  26:voltages.c    ****         int32 readings[N_SAMPLES];  // Creates new int32 array called readings of size N_SAMPLES = 
  27:voltages.c    ****         
  28:voltages.c    ****         AMux_Select(c); // This functions first disconnects all channels then connects the given ch
  97              		.loc 1 28 0
  98 002e 97F85F30 		ldrb	r3, [r7, #95]	@ zero_extendqisi2
  99 0032 1846     		mov	r0, r3
 100 0034 FFF7FEFF 		bl	AMux_Select
 101              	.LBB4:
  29:voltages.c    ****         
  30:voltages.c    ****         for(uint16 i=0; i< N_SAMPLES; i++){
 102              		.loc 1 30 0
 103 0038 0023     		movs	r3, #0
 104 003a A7F85C30 		strh	r3, [r7, #92]	@ movhi
 105 003e 0FE0     		b	.L3
 106              	.L4:
  31:voltages.c    ****             
  32:voltages.c    ****             readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the
 107              		.loc 1 32 0 discriminator 3
 108 0040 B7F85C40 		ldrh	r4, [r7, #92]
 109 0044 FFF7FEFF 		bl	ADC_Read32
 110 0048 0246     		mov	r2, r0
 111 004a A300     		lsls	r3, r4, #2
 112 004c 07F16001 		add	r1, r7, #96
 113 0050 0B44     		add	r3, r3, r1
 114 0052 43F8582C 		str	r2, [r3, #-88]
  30:voltages.c    ****             
 115              		.loc 1 30 0 discriminator 3
 116 0056 B7F85C30 		ldrh	r3, [r7, #92]
 117 005a 0133     		adds	r3, r3, #1
 118 005c A7F85C30 		strh	r3, [r7, #92]	@ movhi
 119              	.L3:
  30:voltages.c    ****             
 120              		.loc 1 30 0 is_stmt 0 discriminator 1
 121 0060 B7F85C30 		ldrh	r3, [r7, #92]
 122 0064 0A2B     		cmp	r3, #10
 123 0066 EBD9     		bls	.L4
 124              	.LBE4:
  33:voltages.c    ****         }
  34:voltages.c    ****         
  35:voltages.c    ****         // Converts the ADC output to Volts as a floating point number. 
  36:voltages.c    ****         // Get the median of readings and return that.
  37:voltages.c    ****         channels[c] = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Get median of re
 125              		.loc 1 37 0 is_stmt 1 discriminator 2
 126 0068 97F85F40 		ldrb	r4, [r7, #95]	@ zero_extendqisi2
 127 006c 07F10803 		add	r3, r7, #8
 128 0070 0B21     		movs	r1, #11
 129 0072 1846     		mov	r0, r3
 130 0074 FFF7FEFF 		bl	find_median32
 131 0078 0346     		mov	r3, r0
 132 007a 1846     		mov	r0, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 4


 133 007c FFF7FEFF 		bl	ADC_CountsTo_Volts
 134 0080 0246     		mov	r2, r0
 135 0082 A300     		lsls	r3, r4, #2
 136 0084 07F16001 		add	r1, r7, #96
 137 0088 0B44     		add	r3, r3, r1
 138 008a 43F82C2C 		str	r2, [r3, #-44]	@ float
 139              	.LBE3:
  23:voltages.c    ****     {
 140              		.loc 1 23 0 discriminator 2
 141 008e 97F85F30 		ldrb	r3, [r7, #95]	@ zero_extendqisi2
 142 0092 0133     		adds	r3, r3, #1
 143 0094 87F85F30 		strb	r3, [r7, #95]
 144              	.L2:
  23:voltages.c    ****     {
 145              		.loc 1 23 0 is_stmt 0 discriminator 1
 146 0098 97F85F30 		ldrb	r3, [r7, #95]	@ zero_extendqisi2
 147 009c 042B     		cmp	r3, #4
 148 009e C6D9     		bls	.L5
 149              	.LBE2:
  38:voltages.c    ****     }
  39:voltages.c    ****     
  40:voltages.c    ****     AMux_Stop();        // Disconnects all Analog Multiplex channels.
 150              		.loc 1 40 0 is_stmt 1
 151 00a0 FFF7FEFF 		bl	AMux_Start
  41:voltages.c    ****     
  42:voltages.c    ****     ADC_SaveConfig();   // Save the register configuration which are not retention.
 152              		.loc 1 42 0
 153 00a4 FFF7FEFF 		bl	ADC_SaveConfig
  43:voltages.c    ****     
  44:voltages.c    ****     ADC_Stop();         // Stops and powers down the ADC component and the internal clock if the ex
 154              		.loc 1 44 0
 155 00a8 FFF7FEFF 		bl	ADC_Stop
  45:voltages.c    ****     
  46:voltages.c    ****     Battery_Voltage_Enable_Write(OFF);  // Pulls Battery ADC pin low (turns it off).
 156              		.loc 1 46 0
 157 00ac 0020     		movs	r0, #0
 158 00ae FFF7FEFF 		bl	Battery_Voltage_Enable_Write
  47:voltages.c    ****     Pressure_Voltage_Enable_Write(OFF);  // Pulls Pressure Transducer ADC pin low (turns it off).
 159              		.loc 1 47 0
 160 00b2 0020     		movs	r0, #0
 161 00b4 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  48:voltages.c    ****     
  49:voltages.c    ****     float offset = channels[0] - 1.024; // Should be 1.024 exactly. BK saw an offset when measuring
 162              		.loc 1 49 0
 163 00b8 7B6B     		ldr	r3, [r7, #52]	@ float
 164 00ba 1846     		mov	r0, r3
 165 00bc FFF7FEFF 		bl	__aeabi_f2d
 166 00c0 19A3     		adr	r3, .L7
 167 00c2 D3E90023 		ldrd	r2, [r3]
 168 00c6 FFF7FEFF 		bl	__aeabi_dsub
 169 00ca 0346     		mov	r3, r0
 170 00cc 0C46     		mov	r4, r1
 171 00ce 1846     		mov	r0, r3
 172 00d0 2146     		mov	r1, r4
 173 00d2 FFF7FEFF 		bl	__aeabi_d2f
 174 00d6 0346     		mov	r3, r0
 175 00d8 BB65     		str	r3, [r7, #88]	@ float
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 5


  50:voltages.c    ****     voltage.voltage_battery = (channels[ADC_MUX_VBAT] * 11) - offset; // Voltage divider is (1/10) 
 176              		.loc 1 50 0
 177 00da BB6B     		ldr	r3, [r7, #56]	@ float
 178 00dc 1449     		ldr	r1, .L7+8
 179 00de 1846     		mov	r0, r3
 180 00e0 FFF7FEFF 		bl	__aeabi_fmul
 181 00e4 0346     		mov	r3, r0
 182 00e6 B96D     		ldr	r1, [r7, #88]	@ float
 183 00e8 1846     		mov	r0, r3
 184 00ea FFF7FEFF 		bl	__aeabi_fsub
 185 00ee 0346     		mov	r3, r0
 186 00f0 7B64     		str	r3, [r7, #68]	@ float
  51:voltages.c    ****     voltage.voltage_solar = channels[ADC_MUX_VSOL] - offset; // Just want voltage here
 187              		.loc 1 51 0
 188 00f2 FB6B     		ldr	r3, [r7, #60]	@ float
 189 00f4 B96D     		ldr	r1, [r7, #88]	@ float
 190 00f6 1846     		mov	r0, r3
 191 00f8 FFF7FEFF 		bl	__aeabi_fsub
 192 00fc 0346     		mov	r3, r0
 193 00fe BB64     		str	r3, [r7, #72]	@ float
  52:voltages.c    ****     // Voltage across sensor resistor gives 100mV drop for max current, which is 800mA
  53:voltages.c    ****     //voltage.voltage_charge_current = 0.1*(channels[ADC_MUX_CHRG] - voltage.voltage_battery);
  54:voltages.c    ****     voltage.voltage_pressure = channels[ADC_MUX_PRTRANS]; // Pressure transducer reading
 194              		.loc 1 54 0
 195 0100 3B6C     		ldr	r3, [r7, #64]	@ float
 196 0102 3B65     		str	r3, [r7, #80]	@ float
  55:voltages.c    **** 
  56:voltages.c    ****     voltage.valid = 1;
 197              		.loc 1 56 0
 198 0104 0123     		movs	r3, #1
 199 0106 87F85430 		strb	r3, [r7, #84]
  57:voltages.c    ****     
  58:voltages.c    ****     return voltage;
 200              		.loc 1 58 0
 201 010a 7B68     		ldr	r3, [r7, #4]
 202 010c 1D46     		mov	r5, r3
 203 010e 07F14404 		add	r4, r7, #68
 204 0112 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 205 0114 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 206 0116 2368     		ldr	r3, [r4]
 207 0118 2B60     		str	r3, [r5]
  59:voltages.c    **** }
 208              		.loc 1 59 0
 209 011a 7868     		ldr	r0, [r7, #4]
 210 011c 6037     		adds	r7, r7, #96
 211              		.cfi_def_cfa_offset 16
 212 011e BD46     		mov	sp, r7
 213              		.cfi_def_cfa_register 13
 214              		@ sp needed
 215 0120 B0BD     		pop	{r4, r5, r7, pc}
 216              	.L8:
 217 0122 00BFAFF3 		.align	3
 217      0080
 218              	.L7:
 219 0128 FCA9F1D2 		.word	-755914244
 220 012c 4D62F03F 		.word	1072718413
 221 0130 00003041 		.word	1093664768
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 6


 222              		.cfi_endproc
 223              	.LFE64:
 224              		.size	voltage_take_readings, .-voltage_take_readings
 225              		.global	__aeabi_fdiv
 226              		.global	__aeabi_ddiv
 227              		.global	__aeabi_dmul
 228              		.section	.text.pressure_sensor_readings,"ax",%progbits
 229              		.align	2
 230              		.global	pressure_sensor_readings
 231              		.thumb
 232              		.thumb_func
 233              		.type	pressure_sensor_readings, %function
 234              	pressure_sensor_readings:
 235              	.LFB65:
  60:voltages.c    **** 
  61:voltages.c    **** // Function to take Pressure sensor readings and save them in the pressure_t datatype
  62:voltages.c    **** pressure_t pressure_sensor_readings(){
 236              		.loc 1 62 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 88
 239              		@ frame_needed = 1, uses_anonymous_args = 0
 240 0000 90B5     		push	{r4, r7, lr}
 241              		.cfi_def_cfa_offset 12
 242              		.cfi_offset 4, -12
 243              		.cfi_offset 7, -8
 244              		.cfi_offset 14, -4
 245 0002 97B0     		sub	sp, sp, #92
 246              		.cfi_def_cfa_offset 104
 247 0004 00AF     		add	r7, sp, #0
 248              		.cfi_def_cfa_register 7
 249 0006 7860     		str	r0, [r7, #4]
  63:voltages.c    ****     
  64:voltages.c    ****     pressure_t pressure;  // Create variable voltage of data structure voltage_t.
  65:voltages.c    ****     float channels[AMux_CHANNELS];
  66:voltages.c    ****     int32 readings[N_SAMPLES];  // Creates new int32 array called readings of size N_SAMPLES = 11
  67:voltages.c    ****     
  68:voltages.c    ****     AMux_Start();       // Start the Analog Multiplexer
 250              		.loc 1 68 0
 251 0008 FFF7FEFF 		bl	AMux_Start
  69:voltages.c    ****  
  70:voltages.c    ****     ADC_RestoreConfig();// Have to call this and save (See below). Otherwise ADC won't work through
 252              		.loc 1 70 0
 253 000c FFF7FEFF 		bl	ADC_RestoreConfig
  71:voltages.c    ****     
  72:voltages.c    ****     ADC_Start();        // Start the ADC
 254              		.loc 1 72 0
 255 0010 FFF7FEFF 		bl	ADC_Start
  73:voltages.c    ****     
  74:voltages.c    ****     AMux_Select(ADC_MUX_PRTRANS); // This functions first disconnects all channels then connects th
 256              		.loc 1 74 0
 257 0014 0320     		movs	r0, #3
 258 0016 FFF7FEFF 		bl	AMux_Select
 259              	.LBB5:
  75:voltages.c    ****     
  76:voltages.c    ****     for(uint16 i=0; i< N_SAMPLES; i++){   
 260              		.loc 1 76 0
 261 001a 0023     		movs	r3, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 7


 262 001c A7F85630 		strh	r3, [r7, #86]	@ movhi
 263 0020 0FE0     		b	.L10
 264              	.L11:
  77:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 265              		.loc 1 77 0 discriminator 3
 266 0022 B7F85640 		ldrh	r4, [r7, #86]
 267 0026 FFF7FEFF 		bl	ADC_Read32
 268 002a 0246     		mov	r2, r0
 269 002c A300     		lsls	r3, r4, #2
 270 002e 07F15801 		add	r1, r7, #88
 271 0032 0B44     		add	r3, r3, r1
 272 0034 43F8502C 		str	r2, [r3, #-80]
  76:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 273              		.loc 1 76 0 discriminator 3
 274 0038 B7F85630 		ldrh	r3, [r7, #86]
 275 003c 0133     		adds	r3, r3, #1
 276 003e A7F85630 		strh	r3, [r7, #86]	@ movhi
 277              	.L10:
  76:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 278              		.loc 1 76 0 is_stmt 0 discriminator 1
 279 0042 B7F85630 		ldrh	r3, [r7, #86]
 280 0046 0A2B     		cmp	r3, #10
 281 0048 EBD9     		bls	.L11
 282              	.LBE5:
  78:voltages.c    ****     }
  79:voltages.c    ****     
  80:voltages.c    ****     // Converts the ADC output to Volts as a floating point number. 
  81:voltages.c    ****     // Get the median of readings and return that.
  82:voltages.c    ****     pressure.pressure_voltage_off = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Ge
 283              		.loc 1 82 0 is_stmt 1
 284 004a 07F10803 		add	r3, r7, #8
 285 004e 0B21     		movs	r1, #11
 286 0050 1846     		mov	r0, r3
 287 0052 FFF7FEFF 		bl	find_median32
 288 0056 0346     		mov	r3, r0
 289 0058 1846     		mov	r0, r3
 290 005a FFF7FEFF 		bl	ADC_CountsTo_Volts
 291 005e 0346     		mov	r3, r0
 292 0060 BB64     		str	r3, [r7, #72]	@ float
  83:voltages.c    ****     pressure.pressure_voltage_off = floorf(pressure.pressure_voltage_off * 100) / 100;
 293              		.loc 1 83 0
 294 0062 BB6C     		ldr	r3, [r7, #72]	@ float
 295 0064 4849     		ldr	r1, .L15+16
 296 0066 1846     		mov	r0, r3
 297 0068 FFF7FEFF 		bl	__aeabi_fmul
 298 006c 0346     		mov	r3, r0
 299 006e 1846     		mov	r0, r3
 300 0070 FFF7FEFF 		bl	floorf
 301 0074 0346     		mov	r3, r0
 302 0076 4449     		ldr	r1, .L15+16
 303 0078 1846     		mov	r0, r3
 304 007a FFF7FEFF 		bl	__aeabi_fdiv
 305 007e 0346     		mov	r3, r0
 306 0080 BB64     		str	r3, [r7, #72]	@ float
  84:voltages.c    ****     
  85:voltages.c    ****     Pressure_Voltage_Enable_Write(ON);  // Flip on the Pressure Transducer Voltage ADC pin high (tu
 307              		.loc 1 85 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 8


 308 0082 0120     		movs	r0, #1
 309 0084 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  86:voltages.c    ****     
  87:voltages.c    **** 	CyDelay(10u);	    // 10 seconds delay to give time to flip on ADC pin.
 310              		.loc 1 87 0
 311 0088 0A20     		movs	r0, #10
 312 008a FFF7FEFF 		bl	CyDelay
 313              	.LBB6:
  88:voltages.c    ****   
  89:voltages.c    ****     for(uint16 i=0; i< N_SAMPLES; i++){   
 314              		.loc 1 89 0
 315 008e 0023     		movs	r3, #0
 316 0090 A7F85430 		strh	r3, [r7, #84]	@ movhi
 317 0094 0FE0     		b	.L12
 318              	.L13:
  90:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 319              		.loc 1 90 0 discriminator 3
 320 0096 B7F85440 		ldrh	r4, [r7, #84]
 321 009a FFF7FEFF 		bl	ADC_Read32
 322 009e 0246     		mov	r2, r0
 323 00a0 A300     		lsls	r3, r4, #2
 324 00a2 07F15801 		add	r1, r7, #88
 325 00a6 0B44     		add	r3, r3, r1
 326 00a8 43F8502C 		str	r2, [r3, #-80]
  89:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 327              		.loc 1 89 0 discriminator 3
 328 00ac B7F85430 		ldrh	r3, [r7, #84]
 329 00b0 0133     		adds	r3, r3, #1
 330 00b2 A7F85430 		strh	r3, [r7, #84]	@ movhi
 331              	.L12:
  89:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 332              		.loc 1 89 0 is_stmt 0 discriminator 1
 333 00b6 B7F85430 		ldrh	r3, [r7, #84]
 334 00ba 0A2B     		cmp	r3, #10
 335 00bc EBD9     		bls	.L13
 336              	.LBE6:
  91:voltages.c    ****     }
  92:voltages.c    ****     
  93:voltages.c    ****     // Converts the ADC output to Volts as a floating point number. 
  94:voltages.c    ****     // Get the median of readings and return that.
  95:voltages.c    ****     pressure.pressure_voltage_on = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Get
 337              		.loc 1 95 0 is_stmt 1
 338 00be 07F10803 		add	r3, r7, #8
 339 00c2 0B21     		movs	r1, #11
 340 00c4 1846     		mov	r0, r3
 341 00c6 FFF7FEFF 		bl	find_median32
 342 00ca 0346     		mov	r3, r0
 343 00cc 1846     		mov	r0, r3
 344 00ce FFF7FEFF 		bl	ADC_CountsTo_Volts
 345 00d2 0346     		mov	r3, r0
 346 00d4 7B64     		str	r3, [r7, #68]	@ float
  96:voltages.c    ****     
  97:voltages.c    ****     AMux_Stop();        // Disconnects all Analog Multiplex channels.
 347              		.loc 1 97 0
 348 00d6 FFF7FEFF 		bl	AMux_Start
  98:voltages.c    ****     
  99:voltages.c    ****     ADC_SaveConfig();   // Save the register configuration which are not retention.
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 9


 349              		.loc 1 99 0
 350 00da FFF7FEFF 		bl	ADC_SaveConfig
 100:voltages.c    ****     
 101:voltages.c    ****     ADC_Stop();         // Stops and powers down the ADC component and the internal clock if the ex
 351              		.loc 1 101 0
 352 00de FFF7FEFF 		bl	ADC_Stop
 102:voltages.c    ****     
 103:voltages.c    ****     Pressure_Voltage_Enable_Write(OFF);  // Pulls Pressure Transducer ADC pin low (turns it off).
 353              		.loc 1 103 0
 354 00e2 0020     		movs	r0, #0
 355 00e4 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 104:voltages.c    ****     // Calculate the pressure transducer current output.
 105:voltages.c    ****     // i=V/R where i= currrent, V= voltage, and R= resistance= 150 ohms. Divide by 1000 to get curr
 106:voltages.c    ****     // Should fall between 4 and 20mA
 107:voltages.c    ****     pressure.pressure_current = (pressure.pressure_voltage_on/ 150.0)*1000; 
 356              		.loc 1 107 0
 357 00e8 7B6C     		ldr	r3, [r7, #68]	@ float
 358 00ea 1846     		mov	r0, r3
 359 00ec FFF7FEFF 		bl	__aeabi_f2d
 360 00f0 21A3     		adr	r3, .L15
 361 00f2 D3E90023 		ldrd	r2, [r3]
 362 00f6 FFF7FEFF 		bl	__aeabi_ddiv
 363 00fa 0346     		mov	r3, r0
 364 00fc 0C46     		mov	r4, r1
 365 00fe 1846     		mov	r0, r3
 366 0100 2146     		mov	r1, r4
 367 0102 4FF00002 		mov	r2, #0
 368 0106 214B     		ldr	r3, .L15+20
 369 0108 FFF7FEFF 		bl	__aeabi_dmul
 370 010c 0346     		mov	r3, r0
 371 010e 0C46     		mov	r4, r1
 372 0110 1846     		mov	r0, r3
 373 0112 2146     		mov	r1, r4
 374 0114 FFF7FEFF 		bl	__aeabi_d2f
 375 0118 0346     		mov	r3, r0
 376 011a FB64     		str	r3, [r7, #76]	@ float
 108:voltages.c    ****     // Calculate the estimated depth from the pressure transducer.
 109:voltages.c    ****     // d = (Dmax*V/0.016R) - (Dmax/4) where d= depth, V= voltage, R= resistance= 150 ohms, Dmax = s
 110:voltages.c    ****     // Should fall between 0 and 10 ft
 111:voltages.c    ****     pressure.pressure_depth = ((10.0*pressure.pressure_voltage_on)/(0.016*150))-(10.0/4.0);   
 377              		.loc 1 111 0
 378 011c 7B6C     		ldr	r3, [r7, #68]	@ float
 379 011e 1846     		mov	r0, r3
 380 0120 FFF7FEFF 		bl	__aeabi_f2d
 381 0124 4FF00002 		mov	r2, #0
 382 0128 194B     		ldr	r3, .L15+24
 383 012a FFF7FEFF 		bl	__aeabi_dmul
 384 012e 0346     		mov	r3, r0
 385 0130 0C46     		mov	r4, r1
 386 0132 1846     		mov	r0, r3
 387 0134 2146     		mov	r1, r4
 388 0136 12A3     		adr	r3, .L15+8
 389 0138 D3E90023 		ldrd	r2, [r3]
 390 013c FFF7FEFF 		bl	__aeabi_ddiv
 391 0140 0346     		mov	r3, r0
 392 0142 0C46     		mov	r4, r1
 393 0144 1846     		mov	r0, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 10


 394 0146 2146     		mov	r1, r4
 395 0148 4FF00002 		mov	r2, #0
 396 014c 114B     		ldr	r3, .L15+28
 397 014e FFF7FEFF 		bl	__aeabi_dsub
 398 0152 0346     		mov	r3, r0
 399 0154 0C46     		mov	r4, r1
 400 0156 1846     		mov	r0, r3
 401 0158 2146     		mov	r1, r4
 402 015a FFF7FEFF 		bl	__aeabi_d2f
 403 015e 0346     		mov	r3, r0
 404 0160 3B65     		str	r3, [r7, #80]	@ float
 112:voltages.c    ****     return pressure;
 405              		.loc 1 112 0
 406 0162 7B68     		ldr	r3, [r7, #4]
 407 0164 1C46     		mov	r4, r3
 408 0166 07F14403 		add	r3, r7, #68
 409 016a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 410 016c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 113:voltages.c    **** }
 411              		.loc 1 113 0
 412 0170 7868     		ldr	r0, [r7, #4]
 413 0172 5C37     		adds	r7, r7, #92
 414              		.cfi_def_cfa_offset 12
 415 0174 BD46     		mov	sp, r7
 416              		.cfi_def_cfa_register 13
 417              		@ sp needed
 418 0176 90BD     		pop	{r4, r7, pc}
 419              	.L16:
 420              		.align	3
 421              	.L15:
 422 0178 00000000 		.word	0
 423 017c 00C06240 		.word	1080213504
 424 0180 33333333 		.word	858993459
 425 0184 33330340 		.word	1073951539
 426 0188 0000C842 		.word	1120403456
 427 018c 00408F40 		.word	1083129856
 428 0190 00002440 		.word	1076101120
 429 0194 00000440 		.word	1074003968
 430              		.cfi_endproc
 431              	.LFE65:
 432              		.size	pressure_sensor_readings, .-pressure_sensor_readings
 433              		.section	.text.pressure_calculations,"ax",%progbits
 434              		.align	2
 435              		.global	pressure_calculations
 436              		.thumb
 437              		.thumb_func
 438              		.type	pressure_calculations, %function
 439              	pressure_calculations:
 440              	.LFB66:
 114:voltages.c    **** 
 115:voltages.c    **** // Function to calculate the pressure transducer current and depth estimate.
 116:voltages.c    **** pressure_t pressure_calculations(voltage_t voltage){
 441              		.loc 1 116 0
 442              		.cfi_startproc
 443              		@ args = 24, pretend = 16, frame = 24
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445 0000 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 11


 446              		.cfi_def_cfa_offset 16
 447 0002 90B5     		push	{r4, r7, lr}
 448              		.cfi_def_cfa_offset 28
 449              		.cfi_offset 4, -28
 450              		.cfi_offset 7, -24
 451              		.cfi_offset 14, -20
 452 0004 87B0     		sub	sp, sp, #28
 453              		.cfi_def_cfa_offset 56
 454 0006 00AF     		add	r7, sp, #0
 455              		.cfi_def_cfa_register 7
 456 0008 7860     		str	r0, [r7, #4]
 457 000a 07F12C00 		add	r0, r7, #44
 458 000e 80E80E00 		stmia	r0, {r1, r2, r3}
 117:voltages.c    ****     // Create variable pressure of data structure type pressure_t.
 118:voltages.c    ****     pressure_t pressure;
 119:voltages.c    ****     
 120:voltages.c    ****     // Calculate the pressure transducer current output.
 121:voltages.c    ****     // i=V/R where i= currrent, V= voltage, and R= resistance= 150 ohms. Divide by 1000 to get curr
 122:voltages.c    ****     // Should fall between 4 and 20mA
 123:voltages.c    ****     pressure.pressure_current = (voltage.voltage_pressure/ 150.0)/1000; 
 459              		.loc 1 123 0
 460 0012 BB6B     		ldr	r3, [r7, #56]	@ float
 461 0014 1846     		mov	r0, r3
 462 0016 FFF7FEFF 		bl	__aeabi_f2d
 463 001a 23A3     		adr	r3, .L19
 464 001c D3E90023 		ldrd	r2, [r3]
 465 0020 FFF7FEFF 		bl	__aeabi_ddiv
 466 0024 0346     		mov	r3, r0
 467 0026 0C46     		mov	r4, r1
 468 0028 1846     		mov	r0, r3
 469 002a 2146     		mov	r1, r4
 470 002c 4FF00002 		mov	r2, #0
 471 0030 214B     		ldr	r3, .L19+16
 472 0032 FFF7FEFF 		bl	__aeabi_ddiv
 473 0036 0346     		mov	r3, r0
 474 0038 0C46     		mov	r4, r1
 475 003a 1846     		mov	r0, r3
 476 003c 2146     		mov	r1, r4
 477 003e FFF7FEFF 		bl	__aeabi_d2f
 478 0042 0346     		mov	r3, r0
 479 0044 3B61     		str	r3, [r7, #16]	@ float
 124:voltages.c    ****     // Calculate the estimated depth from the pressure transducer.
 125:voltages.c    ****     // d = (Dmax*V/0.016R) - (Dmax/4) where d= depth, V= voltage, R= resistance= 150 ohms, Dmax = s
 126:voltages.c    ****     // Should fall between 0 and 10 ft
 127:voltages.c    ****     pressure.pressure_depth = ((10.0*voltage.voltage_pressure)/(0.016*150))-(10.0/4.0); 
 480              		.loc 1 127 0
 481 0046 BB6B     		ldr	r3, [r7, #56]	@ float
 482 0048 1846     		mov	r0, r3
 483 004a FFF7FEFF 		bl	__aeabi_f2d
 484 004e 4FF00002 		mov	r2, #0
 485 0052 1A4B     		ldr	r3, .L19+20
 486 0054 FFF7FEFF 		bl	__aeabi_dmul
 487 0058 0346     		mov	r3, r0
 488 005a 0C46     		mov	r4, r1
 489 005c 1846     		mov	r0, r3
 490 005e 2146     		mov	r1, r4
 491 0060 13A3     		adr	r3, .L19+8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 12


 492 0062 D3E90023 		ldrd	r2, [r3]
 493 0066 FFF7FEFF 		bl	__aeabi_ddiv
 494 006a 0346     		mov	r3, r0
 495 006c 0C46     		mov	r4, r1
 496 006e 1846     		mov	r0, r3
 497 0070 2146     		mov	r1, r4
 498 0072 4FF00002 		mov	r2, #0
 499 0076 124B     		ldr	r3, .L19+24
 500 0078 FFF7FEFF 		bl	__aeabi_dsub
 501 007c 0346     		mov	r3, r0
 502 007e 0C46     		mov	r4, r1
 503 0080 1846     		mov	r0, r3
 504 0082 2146     		mov	r1, r4
 505 0084 FFF7FEFF 		bl	__aeabi_d2f
 506 0088 0346     		mov	r3, r0
 507 008a 7B61     		str	r3, [r7, #20]	@ float
 128:voltages.c    ****     return pressure;
 508              		.loc 1 128 0
 509 008c 7B68     		ldr	r3, [r7, #4]
 510 008e 1C46     		mov	r4, r3
 511 0090 07F10803 		add	r3, r7, #8
 512 0094 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 513 0096 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 129:voltages.c    **** }
 514              		.loc 1 129 0
 515 009a 7868     		ldr	r0, [r7, #4]
 516 009c 1C37     		adds	r7, r7, #28
 517              		.cfi_def_cfa_offset 28
 518 009e BD46     		mov	sp, r7
 519              		.cfi_def_cfa_register 13
 520              		@ sp needed
 521 00a0 BDE89040 		pop	{r4, r7, lr}
 522              		.cfi_restore 14
 523              		.cfi_restore 7
 524              		.cfi_restore 4
 525              		.cfi_def_cfa_offset 16
 526 00a4 04B0     		add	sp, sp, #16
 527              		.cfi_def_cfa_offset 0
 528 00a6 7047     		bx	lr
 529              	.L20:
 530              		.align	3
 531              	.L19:
 532 00a8 00000000 		.word	0
 533 00ac 00C06240 		.word	1080213504
 534 00b0 33333333 		.word	858993459
 535 00b4 33330340 		.word	1073951539
 536 00b8 00408F40 		.word	1083129856
 537 00bc 00002440 		.word	1076101120
 538 00c0 00000440 		.word	1074003968
 539              		.cfi_endproc
 540              	.LFE66:
 541              		.size	pressure_calculations, .-pressure_calculations
 542              		.section	.text.sort32,"ax",%progbits
 543              		.align	2
 544              		.global	sort32
 545              		.thumb
 546              		.thumb_func
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 13


 547              		.type	sort32, %function
 548              	sort32:
 549              	.LFB67:
 130:voltages.c    ****     
 131:voltages.c    ****     
 132:voltages.c    **** 
 133:voltages.c    **** // Function to sort the elements in the level readings array
 134:voltages.c    **** void sort32(int32 a[],int32 n) { 
 550              		.loc 1 134 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 16
 553              		@ frame_needed = 1, uses_anonymous_args = 0
 554 0000 80B5     		push	{r7, lr}
 555              		.cfi_def_cfa_offset 8
 556              		.cfi_offset 7, -8
 557              		.cfi_offset 14, -4
 558 0002 84B0     		sub	sp, sp, #16
 559              		.cfi_def_cfa_offset 24
 560 0004 00AF     		add	r7, sp, #0
 561              		.cfi_def_cfa_register 7
 562 0006 7860     		str	r0, [r7, #4]
 563 0008 3960     		str	r1, [r7]
 135:voltages.c    ****    int32 i,j;
 136:voltages.c    **** 
 137:voltages.c    ****    for(i = 0;i < n-1;i++) {
 564              		.loc 1 137 0
 565 000a 0023     		movs	r3, #0
 566 000c FB60     		str	r3, [r7, #12]
 567 000e 28E0     		b	.L22
 568              	.L26:
 138:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 569              		.loc 1 138 0
 570 0010 0023     		movs	r3, #0
 571 0012 BB60     		str	r3, [r7, #8]
 572 0014 1BE0     		b	.L23
 573              	.L25:
 139:voltages.c    ****          if(a[j] > a[j+1])
 574              		.loc 1 139 0
 575 0016 BB68     		ldr	r3, [r7, #8]
 576 0018 9B00     		lsls	r3, r3, #2
 577 001a 7A68     		ldr	r2, [r7, #4]
 578 001c 1344     		add	r3, r3, r2
 579 001e 1A68     		ldr	r2, [r3]
 580 0020 BB68     		ldr	r3, [r7, #8]
 581 0022 0133     		adds	r3, r3, #1
 582 0024 9B00     		lsls	r3, r3, #2
 583 0026 7968     		ldr	r1, [r7, #4]
 584 0028 0B44     		add	r3, r3, r1
 585 002a 1B68     		ldr	r3, [r3]
 586 002c 9A42     		cmp	r2, r3
 587 002e 0BDD     		ble	.L24
 140:voltages.c    ****             swap32(&a[j],&a[j+1]);  // Swap the address of a[j] and a[j+1]
 588              		.loc 1 140 0
 589 0030 BB68     		ldr	r3, [r7, #8]
 590 0032 9B00     		lsls	r3, r3, #2
 591 0034 7A68     		ldr	r2, [r7, #4]
 592 0036 D018     		adds	r0, r2, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 14


 593 0038 BB68     		ldr	r3, [r7, #8]
 594 003a 0133     		adds	r3, r3, #1
 595 003c 9B00     		lsls	r3, r3, #2
 596 003e 7A68     		ldr	r2, [r7, #4]
 597 0040 1344     		add	r3, r3, r2
 598 0042 1946     		mov	r1, r3
 599 0044 FFF7FEFF 		bl	swap32
 600              	.L24:
 138:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 601              		.loc 1 138 0 discriminator 2
 602 0048 BB68     		ldr	r3, [r7, #8]
 603 004a 0133     		adds	r3, r3, #1
 604 004c BB60     		str	r3, [r7, #8]
 605              	.L23:
 138:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 606              		.loc 1 138 0 is_stmt 0 discriminator 1
 607 004e 3A68     		ldr	r2, [r7]
 608 0050 FB68     		ldr	r3, [r7, #12]
 609 0052 D31A     		subs	r3, r2, r3
 610 0054 5A1E     		subs	r2, r3, #1
 611 0056 BB68     		ldr	r3, [r7, #8]
 612 0058 9A42     		cmp	r2, r3
 613 005a DCDC     		bgt	.L25
 137:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 614              		.loc 1 137 0 is_stmt 1 discriminator 2
 615 005c FB68     		ldr	r3, [r7, #12]
 616 005e 0133     		adds	r3, r3, #1
 617 0060 FB60     		str	r3, [r7, #12]
 618              	.L22:
 137:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 619              		.loc 1 137 0 is_stmt 0 discriminator 1
 620 0062 3B68     		ldr	r3, [r7]
 621 0064 5A1E     		subs	r2, r3, #1
 622 0066 FB68     		ldr	r3, [r7, #12]
 623 0068 9A42     		cmp	r2, r3
 624 006a D1DC     		bgt	.L26
 141:voltages.c    ****       }
 142:voltages.c    ****    }
 143:voltages.c    **** }
 625              		.loc 1 143 0 is_stmt 1
 626 006c 00BF     		nop
 627 006e 1037     		adds	r7, r7, #16
 628              		.cfi_def_cfa_offset 8
 629 0070 BD46     		mov	sp, r7
 630              		.cfi_def_cfa_register 13
 631              		@ sp needed
 632 0072 80BD     		pop	{r7, pc}
 633              		.cfi_endproc
 634              	.LFE67:
 635              		.size	sort32, .-sort32
 636              		.section	.text.swap32,"ax",%progbits
 637              		.align	2
 638              		.global	swap32
 639              		.thumb
 640              		.thumb_func
 641              		.type	swap32, %function
 642              	swap32:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 15


 643              	.LFB68:
 144:voltages.c    **** 
 145:voltages.c    **** // Function to swap elements in the level readings array in order to sort them
 146:voltages.c    **** void swap32(int32 *p,int32 *q){
 644              		.loc 1 146 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 16
 647              		@ frame_needed = 1, uses_anonymous_args = 0
 648              		@ link register save eliminated.
 649 0000 80B4     		push	{r7}
 650              		.cfi_def_cfa_offset 4
 651              		.cfi_offset 7, -4
 652 0002 85B0     		sub	sp, sp, #20
 653              		.cfi_def_cfa_offset 24
 654 0004 00AF     		add	r7, sp, #0
 655              		.cfi_def_cfa_register 7
 656 0006 7860     		str	r0, [r7, #4]
 657 0008 3960     		str	r1, [r7]
 147:voltages.c    ****    int32 t;
 148:voltages.c    ****    
 149:voltages.c    ****    t=*p; 
 658              		.loc 1 149 0
 659 000a 7B68     		ldr	r3, [r7, #4]
 660 000c 1B68     		ldr	r3, [r3]
 661 000e FB60     		str	r3, [r7, #12]
 150:voltages.c    ****    *p=*q; 
 662              		.loc 1 150 0
 663 0010 3B68     		ldr	r3, [r7]
 664 0012 1A68     		ldr	r2, [r3]
 665 0014 7B68     		ldr	r3, [r7, #4]
 666 0016 1A60     		str	r2, [r3]
 151:voltages.c    ****    *q=t;
 667              		.loc 1 151 0
 668 0018 3B68     		ldr	r3, [r7]
 669 001a FA68     		ldr	r2, [r7, #12]
 670 001c 1A60     		str	r2, [r3]
 152:voltages.c    **** }
 671              		.loc 1 152 0
 672 001e 00BF     		nop
 673 0020 1437     		adds	r7, r7, #20
 674              		.cfi_def_cfa_offset 4
 675 0022 BD46     		mov	sp, r7
 676              		.cfi_def_cfa_register 13
 677              		@ sp needed
 678 0024 80BC     		pop	{r7}
 679              		.cfi_restore 7
 680              		.cfi_def_cfa_offset 0
 681 0026 7047     		bx	lr
 682              		.cfi_endproc
 683              	.LFE68:
 684              		.size	swap32, .-swap32
 685              		.global	__aeabi_i2d
 686              		.global	__aeabi_d2iz
 687              		.section	.text.find_median32,"ax",%progbits
 688              		.align	2
 689              		.global	find_median32
 690              		.thumb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 16


 691              		.thumb_func
 692              		.type	find_median32, %function
 693              	find_median32:
 694              	.LFB69:
 153:voltages.c    **** 
 154:voltages.c    **** // Function to calculate the median of the array, after array is sorted
 155:voltages.c    **** int32 find_median32(int32 array[] , int32 n)
 156:voltages.c    **** {
 695              		.loc 1 156 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 16
 698              		@ frame_needed = 1, uses_anonymous_args = 0
 699 0000 90B5     		push	{r4, r7, lr}
 700              		.cfi_def_cfa_offset 12
 701              		.cfi_offset 4, -12
 702              		.cfi_offset 7, -8
 703              		.cfi_offset 14, -4
 704 0002 85B0     		sub	sp, sp, #20
 705              		.cfi_def_cfa_offset 32
 706 0004 00AF     		add	r7, sp, #0
 707              		.cfi_def_cfa_register 7
 708 0006 7860     		str	r0, [r7, #4]
 709 0008 3960     		str	r1, [r7]
 157:voltages.c    ****     int32 median=0;
 710              		.loc 1 157 0
 711 000a 0023     		movs	r3, #0
 712 000c FB60     		str	r3, [r7, #12]
 158:voltages.c    ****     sort32(array,n);
 713              		.loc 1 158 0
 714 000e 3968     		ldr	r1, [r7]
 715 0010 7868     		ldr	r0, [r7, #4]
 716 0012 FFF7FEFF 		bl	sort32
 159:voltages.c    ****     
 160:voltages.c    ****     // If number of elements are even
 161:voltages.c    ****     if(n%2 == 0)
 717              		.loc 1 161 0
 718 0016 3B68     		ldr	r3, [r7]
 719 0018 03F00103 		and	r3, r3, #1
 720 001c 002B     		cmp	r3, #0
 721 001e 23D1     		bne	.L29
 162:voltages.c    ****         // Median is the average of the  two middle sorted numbers
 163:voltages.c    ****         median = (array[(n-1)/2] + array[n/2])/2.0;
 722              		.loc 1 163 0
 723 0020 3B68     		ldr	r3, [r7]
 724 0022 013B     		subs	r3, r3, #1
 725 0024 DA0F     		lsrs	r2, r3, #31
 726 0026 1344     		add	r3, r3, r2
 727 0028 5B10     		asrs	r3, r3, #1
 728 002a 9B00     		lsls	r3, r3, #2
 729 002c 7A68     		ldr	r2, [r7, #4]
 730 002e 1344     		add	r3, r3, r2
 731 0030 1A68     		ldr	r2, [r3]
 732 0032 3B68     		ldr	r3, [r7]
 733 0034 D90F     		lsrs	r1, r3, #31
 734 0036 0B44     		add	r3, r3, r1
 735 0038 5B10     		asrs	r3, r3, #1
 736 003a 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 17


 737 003c 7968     		ldr	r1, [r7, #4]
 738 003e 0B44     		add	r3, r3, r1
 739 0040 1B68     		ldr	r3, [r3]
 740 0042 1344     		add	r3, r3, r2
 741 0044 1846     		mov	r0, r3
 742 0046 FFF7FEFF 		bl	__aeabi_i2d
 743 004a 4FF00002 		mov	r2, #0
 744 004e 4FF08043 		mov	r3, #1073741824
 745 0052 FFF7FEFF 		bl	__aeabi_ddiv
 746 0056 0346     		mov	r3, r0
 747 0058 0C46     		mov	r4, r1
 748 005a 1846     		mov	r0, r3
 749 005c 2146     		mov	r1, r4
 750 005e FFF7FEFF 		bl	__aeabi_d2iz
 751 0062 0346     		mov	r3, r0
 752 0064 FB60     		str	r3, [r7, #12]
 753 0066 08E0     		b	.L30
 754              	.L29:
 164:voltages.c    ****     // If number of elements are odd
 165:voltages.c    ****     else
 166:voltages.c    ****         // Median is the the middle sorted number. 
 167:voltages.c    ****         median = array[n/2];
 755              		.loc 1 167 0
 756 0068 3B68     		ldr	r3, [r7]
 757 006a DA0F     		lsrs	r2, r3, #31
 758 006c 1344     		add	r3, r3, r2
 759 006e 5B10     		asrs	r3, r3, #1
 760 0070 9B00     		lsls	r3, r3, #2
 761 0072 7A68     		ldr	r2, [r7, #4]
 762 0074 1344     		add	r3, r3, r2
 763 0076 1B68     		ldr	r3, [r3]
 764 0078 FB60     		str	r3, [r7, #12]
 765              	.L30:
 168:voltages.c    ****     
 169:voltages.c    ****     return median;
 766              		.loc 1 169 0
 767 007a FB68     		ldr	r3, [r7, #12]
 170:voltages.c    **** }
 768              		.loc 1 170 0
 769 007c 1846     		mov	r0, r3
 770 007e 1437     		adds	r7, r7, #20
 771              		.cfi_def_cfa_offset 12
 772 0080 BD46     		mov	sp, r7
 773              		.cfi_def_cfa_register 13
 774              		@ sp needed
 775 0082 90BD     		pop	{r4, r7, pc}
 776              		.cfi_endproc
 777              	.LFE69:
 778              		.size	find_median32, .-find_median32
 779              		.section	.rodata
 780              		.align	2
 781              	.LC0:
 782 0000 54455354 		.ascii	"TEST_ANALOG_VOLTAGES\000"
 782      5F414E41 
 782      4C4F475F 
 782      564F4C54 
 782      41474553 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 18


 783 0015 000000   		.align	2
 784              	.LC1:
 785 0018 56424154 		.ascii	"VBAT=%.3f,VSOL=%.3f,CHRG=%.3f\000"
 785      3D252E33 
 785      662C5653 
 785      4F4C3D25 
 785      2E33662C 
 786              		.section	.text.voltages_test,"ax",%progbits
 787              		.align	2
 788              		.global	voltages_test
 789              		.thumb
 790              		.thumb_func
 791              		.type	voltages_test, %function
 792              	voltages_test:
 793              	.LFB70:
 171:voltages.c    **** 
 172:voltages.c    **** // Test the voltage readings
 173:voltages.c    **** test_t voltages_test(){
 794              		.loc 1 173 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 416
 797              		@ frame_needed = 1, uses_anonymous_args = 0
 798 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 799              		.cfi_def_cfa_offset 24
 800              		.cfi_offset 4, -24
 801              		.cfi_offset 5, -20
 802              		.cfi_offset 7, -16
 803              		.cfi_offset 8, -12
 804              		.cfi_offset 9, -8
 805              		.cfi_offset 14, -4
 806 0004 EEB0     		sub	sp, sp, #440
 807              		.cfi_def_cfa_offset 464
 808 0006 06AF     		add	r7, sp, #24
 809              		.cfi_def_cfa 7, 440
 810 0008 3B1D     		adds	r3, r7, #4
 811 000a 1860     		str	r0, [r3]
 174:voltages.c    ****     // Create variable test of the data structure test_t
 175:voltages.c    ****     test_t test;
 176:voltages.c    ****     test.status = 0;
 812              		.loc 1 176 0
 813 000c 07F11C03 		add	r3, r7, #28
 814 0010 0022     		movs	r2, #0
 815 0012 83F88020 		strb	r2, [r3, #128]
 177:voltages.c    ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_ANALOG_VOLTAGES");
 816              		.loc 1 177 0
 817 0016 07F11C03 		add	r3, r7, #28
 818 001a 264A     		ldr	r2, .L34
 819 001c 1C46     		mov	r4, r3
 820 001e 1546     		mov	r5, r2
 821 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 822 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 823 0024 95E80300 		ldmia	r5, {r0, r1}
 824 0028 2060     		str	r0, [r4]
 825 002a 0434     		adds	r4, r4, #4
 826 002c 2170     		strb	r1, [r4]
 178:voltages.c    ****     
 179:voltages.c    ****     voltage_t voltage = voltage_take_readings();
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 19


 827              		.loc 1 179 0
 828 002e 07F10803 		add	r3, r7, #8
 829 0032 1846     		mov	r0, r3
 830 0034 FFF7FEFF 		bl	voltage_take_readings
 180:voltages.c    ****     
 181:voltages.c    ****     //do some checks here if you want the test to meet some voltage requirement
 182:voltages.c    ****     
 183:voltages.c    ****     snprintf(test.reason,sizeof(test.reason),"VBAT=%.3f,VSOL=%.3f,CHRG=%.3f",
 184:voltages.c    ****             voltage.voltage_battery,
 831              		.loc 1 184 0
 832 0038 07F10803 		add	r3, r7, #8
 833 003c 1B68     		ldr	r3, [r3]	@ float
 183:voltages.c    ****             voltage.voltage_battery,
 834              		.loc 1 183 0
 835 003e 1846     		mov	r0, r3
 836 0040 FFF7FEFF 		bl	__aeabi_f2d
 837 0044 0446     		mov	r4, r0
 838 0046 0D46     		mov	r5, r1
 185:voltages.c    ****             voltage.voltage_solar,
 839              		.loc 1 185 0
 840 0048 07F10803 		add	r3, r7, #8
 841 004c 5B68     		ldr	r3, [r3, #4]	@ float
 183:voltages.c    ****             voltage.voltage_battery,
 842              		.loc 1 183 0
 843 004e 1846     		mov	r0, r3
 844 0050 FFF7FEFF 		bl	__aeabi_f2d
 845 0054 8046     		mov	r8, r0
 846 0056 8946     		mov	r9, r1
 186:voltages.c    ****             voltage.voltage_charge_current);
 847              		.loc 1 186 0
 848 0058 07F10803 		add	r3, r7, #8
 849 005c 9B68     		ldr	r3, [r3, #8]	@ float
 183:voltages.c    ****             voltage.voltage_battery,
 850              		.loc 1 183 0
 851 005e 1846     		mov	r0, r3
 852 0060 FFF7FEFF 		bl	__aeabi_f2d
 853 0064 0246     		mov	r2, r0
 854 0066 0B46     		mov	r3, r1
 855 0068 07F11C01 		add	r1, r7, #28
 856 006c 01F18100 		add	r0, r1, #129
 857 0070 CDE90423 		strd	r2, [sp, #16]
 858 0074 CDE90289 		strd	r8, [sp, #8]
 859 0078 CDE90045 		strd	r4, [sp]
 860 007c 0E4A     		ldr	r2, .L34+4
 861 007e 4FF48071 		mov	r1, #256
 862 0082 FFF7FEFF 		bl	snprintf
 187:voltages.c    ****     
 188:voltages.c    ****     test.status = 1;
 863              		.loc 1 188 0
 864 0086 07F11C03 		add	r3, r7, #28
 865 008a 0122     		movs	r2, #1
 866 008c 83F88020 		strb	r2, [r3, #128]
 189:voltages.c    ****     
 190:voltages.c    ****     return test;
 867              		.loc 1 190 0
 868 0090 3B1D     		adds	r3, r7, #4
 869 0092 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 20


 870 0094 07F11C03 		add	r3, r7, #28
 871 0098 1046     		mov	r0, r2
 872 009a 1946     		mov	r1, r3
 873 009c 40F28113 		movw	r3, #385
 874 00a0 1A46     		mov	r2, r3
 875 00a2 FFF7FEFF 		bl	memcpy
 191:voltages.c    **** }
 876              		.loc 1 191 0
 877 00a6 3B1D     		adds	r3, r7, #4
 878 00a8 1868     		ldr	r0, [r3]
 879 00aa 07F5D077 		add	r7, r7, #416
 880              		.cfi_def_cfa_offset 24
 881 00ae BD46     		mov	sp, r7
 882              		.cfi_def_cfa_register 13
 883              		@ sp needed
 884 00b0 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 885              	.L35:
 886              		.align	2
 887              	.L34:
 888 00b4 00000000 		.word	.LC0
 889 00b8 18000000 		.word	.LC1
 890              		.cfi_endproc
 891              	.LFE70:
 892              		.size	voltages_test, .-voltages_test
 893              		.section	.rodata
 894 0036 0000     		.align	2
 895              	.LC2:
 896 0038 54455354 		.ascii	"TEST_PRESSURE_SENSOR\000"
 896      5F505245 
 896      53535552 
 896      455F5345 
 896      4E534F52 
 897 004d 000000   		.align	2
 898              	.LC3:
 899 0050 50524553 		.ascii	"PRESSURE=%.3f,PRES_CURRENT=%.3f,PRES_DEPTH=%.3f\000"
 899      53555245 
 899      3D252E33 
 899      662C5052 
 899      45535F43 
 900              		.global	__aeabi_fcmpeq
 901              		.section	.text.pressure_sensor_test,"ax",%progbits
 902              		.align	2
 903              		.global	pressure_sensor_test
 904              		.thumb
 905              		.thumb_func
 906              		.type	pressure_sensor_test, %function
 907              	pressure_sensor_test:
 908              	.LFB71:
 192:voltages.c    **** 
 193:voltages.c    **** // Test the pressure sensor readings
 194:voltages.c    **** test_t pressure_sensor_test(){
 909              		.loc 1 194 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 416
 912              		@ frame_needed = 1, uses_anonymous_args = 0
 913 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 914              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 21


 915              		.cfi_offset 4, -24
 916              		.cfi_offset 5, -20
 917              		.cfi_offset 7, -16
 918              		.cfi_offset 8, -12
 919              		.cfi_offset 9, -8
 920              		.cfi_offset 14, -4
 921 0004 EEB0     		sub	sp, sp, #440
 922              		.cfi_def_cfa_offset 464
 923 0006 06AF     		add	r7, sp, #24
 924              		.cfi_def_cfa 7, 440
 925 0008 3B1D     		adds	r3, r7, #4
 926 000a 1860     		str	r0, [r3]
 195:voltages.c    ****     // Create variable test of the data structure test_t
 196:voltages.c    ****     test_t test;
 197:voltages.c    ****     test.status = 0;
 927              		.loc 1 197 0
 928 000c 07F11C03 		add	r3, r7, #28
 929 0010 0022     		movs	r2, #0
 930 0012 83F88020 		strb	r2, [r3, #128]
 198:voltages.c    ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_PRESSURE_SENSOR");
 931              		.loc 1 198 0
 932 0016 07F11C03 		add	r3, r7, #28
 933 001a 374A     		ldr	r2, .L41
 934 001c 1C46     		mov	r4, r3
 935 001e 1546     		mov	r5, r2
 936 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 937 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 938 0024 95E80300 		ldmia	r5, {r0, r1}
 939 0028 2060     		str	r0, [r4]
 940 002a 0434     		adds	r4, r4, #4
 941 002c 2170     		strb	r1, [r4]
 199:voltages.c    ****     
 200:voltages.c    ****     pressure_t pressure = pressure_sensor_readings();
 942              		.loc 1 200 0
 943 002e 07F10C03 		add	r3, r7, #12
 944 0032 1846     		mov	r0, r3
 945 0034 FFF7FEFF 		bl	pressure_sensor_readings
 201:voltages.c    ****     
 202:voltages.c    ****     //do some checks here if you want the test to meet some voltage requirement
 203:voltages.c    ****     
 204:voltages.c    ****     snprintf(test.reason,sizeof(test.reason),"PRESSURE=%.3f,PRES_CURRENT=%.3f,PRES_DEPTH=%.3f",
 205:voltages.c    ****             pressure.pressure_voltage_on,
 946              		.loc 1 205 0
 947 0038 07F10C03 		add	r3, r7, #12
 948 003c 1B68     		ldr	r3, [r3]	@ float
 204:voltages.c    ****             pressure.pressure_voltage_on,
 949              		.loc 1 204 0
 950 003e 1846     		mov	r0, r3
 951 0040 FFF7FEFF 		bl	__aeabi_f2d
 952 0044 0446     		mov	r4, r0
 953 0046 0D46     		mov	r5, r1
 206:voltages.c    ****             pressure.pressure_current,
 954              		.loc 1 206 0
 955 0048 07F10C03 		add	r3, r7, #12
 956 004c 9B68     		ldr	r3, [r3, #8]	@ float
 204:voltages.c    ****             pressure.pressure_voltage_on,
 957              		.loc 1 204 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 22


 958 004e 1846     		mov	r0, r3
 959 0050 FFF7FEFF 		bl	__aeabi_f2d
 960 0054 8046     		mov	r8, r0
 961 0056 8946     		mov	r9, r1
 207:voltages.c    ****             pressure.pressure_depth);
 962              		.loc 1 207 0
 963 0058 07F10C03 		add	r3, r7, #12
 964 005c DB68     		ldr	r3, [r3, #12]	@ float
 204:voltages.c    ****             pressure.pressure_voltage_on,
 965              		.loc 1 204 0
 966 005e 1846     		mov	r0, r3
 967 0060 FFF7FEFF 		bl	__aeabi_f2d
 968 0064 0246     		mov	r2, r0
 969 0066 0B46     		mov	r3, r1
 970 0068 07F11C01 		add	r1, r7, #28
 971 006c 01F18100 		add	r0, r1, #129
 972 0070 CDE90423 		strd	r2, [sp, #16]
 973 0074 CDE90289 		strd	r8, [sp, #8]
 974 0078 CDE90045 		strd	r4, [sp]
 975 007c 1F4A     		ldr	r2, .L41+4
 976 007e 4FF48071 		mov	r1, #256
 977 0082 FFF7FEFF 		bl	snprintf
 208:voltages.c    ****     pressure.pressure_voltage_on = floorf(pressure.pressure_voltage_on * 100) / 100;
 978              		.loc 1 208 0
 979 0086 07F10C03 		add	r3, r7, #12
 980 008a 1B68     		ldr	r3, [r3]	@ float
 981 008c 1C49     		ldr	r1, .L41+8
 982 008e 1846     		mov	r0, r3
 983 0090 FFF7FEFF 		bl	__aeabi_fmul
 984 0094 0346     		mov	r3, r0
 985 0096 1846     		mov	r0, r3
 986 0098 FFF7FEFF 		bl	floorf
 987 009c 0346     		mov	r3, r0
 988 009e 1849     		ldr	r1, .L41+8
 989 00a0 1846     		mov	r0, r3
 990 00a2 FFF7FEFF 		bl	__aeabi_fdiv
 991 00a6 0346     		mov	r3, r0
 992 00a8 1A46     		mov	r2, r3
 993 00aa 07F10C03 		add	r3, r7, #12
 994 00ae 1A60     		str	r2, [r3]	@ float
 209:voltages.c    ****     if (pressure.pressure_voltage_off != pressure.pressure_voltage_on) {
 995              		.loc 1 209 0
 996 00b0 07F10C03 		add	r3, r7, #12
 997 00b4 5A68     		ldr	r2, [r3, #4]	@ float
 998 00b6 07F10C03 		add	r3, r7, #12
 999 00ba 1B68     		ldr	r3, [r3]	@ float
 1000 00bc 1946     		mov	r1, r3
 1001 00be 1046     		mov	r0, r2
 1002 00c0 FFF7FEFF 		bl	__aeabi_fcmpeq
 1003 00c4 0346     		mov	r3, r0
 1004 00c6 002B     		cmp	r3, #0
 1005 00c8 04D1     		bne	.L37
 210:voltages.c    ****         test.status = 1;
 1006              		.loc 1 210 0
 1007 00ca 07F11C03 		add	r3, r7, #28
 1008 00ce 0122     		movs	r2, #1
 1009 00d0 83F88020 		strb	r2, [r3, #128]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 23


 1010              	.L37:
 211:voltages.c    ****     }
 212:voltages.c    ****     
 213:voltages.c    ****     return test;
 1011              		.loc 1 213 0
 1012 00d4 3B1D     		adds	r3, r7, #4
 1013 00d6 1A68     		ldr	r2, [r3]
 1014 00d8 07F11C03 		add	r3, r7, #28
 1015 00dc 1046     		mov	r0, r2
 1016 00de 1946     		mov	r1, r3
 1017 00e0 40F28113 		movw	r3, #385
 1018 00e4 1A46     		mov	r2, r3
 1019 00e6 FFF7FEFF 		bl	memcpy
 214:voltages.c    **** }
 1020              		.loc 1 214 0
 1021 00ea 3B1D     		adds	r3, r7, #4
 1022 00ec 1868     		ldr	r0, [r3]
 1023 00ee 07F5D077 		add	r7, r7, #416
 1024              		.cfi_def_cfa_offset 24
 1025 00f2 BD46     		mov	sp, r7
 1026              		.cfi_def_cfa_register 13
 1027              		@ sp needed
 1028 00f4 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 1029              	.L42:
 1030              		.align	2
 1031              	.L41:
 1032 00f8 38000000 		.word	.LC2
 1033 00fc 50000000 		.word	.LC3
 1034 0100 0000C842 		.word	1120403456
 1035              		.cfi_endproc
 1036              	.LFE71:
 1037              		.size	pressure_sensor_test, .-pressure_sensor_test
 1038              		.text
 1039              	.Letext0:
 1040              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1041              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1042              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1043              		.file 5 "testing.h"
 1044              		.file 6 "voltages.h"
 1045              		.file 7 "data.h"
 1046              		.file 8 "modem.h"
 1047              		.file 9 "notoriOS.h"
 1048              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 1049              		.file 11 "App_LED.h"
 1050              		.section	.debug_info,"",%progbits
 1051              	.Ldebug_info0:
 1052 0000 25080000 		.4byte	0x825
 1053 0004 0400     		.2byte	0x4
 1054 0006 00000000 		.4byte	.Ldebug_abbrev0
 1055 000a 04       		.byte	0x4
 1056 000b 01       		.uleb128 0x1
 1057 000c B4000000 		.4byte	.LASF106
 1058 0010 0C       		.byte	0xc
 1059 0011 4E010000 		.4byte	.LASF107
 1060 0015 BB040000 		.4byte	.LASF108
 1061 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1062 001d 00000000 		.4byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 24


 1063 0021 00000000 		.4byte	.Ldebug_line0
 1064 0025 02       		.uleb128 0x2
 1065 0026 01       		.byte	0x1
 1066 0027 06       		.byte	0x6
 1067 0028 17030000 		.4byte	.LASF0
 1068 002c 02       		.uleb128 0x2
 1069 002d 01       		.byte	0x1
 1070 002e 08       		.byte	0x8
 1071 002f B2020000 		.4byte	.LASF1
 1072 0033 02       		.uleb128 0x2
 1073 0034 02       		.byte	0x2
 1074 0035 05       		.byte	0x5
 1075 0036 86000000 		.4byte	.LASF2
 1076 003a 02       		.uleb128 0x2
 1077 003b 02       		.byte	0x2
 1078 003c 07       		.byte	0x7
 1079 003d BA030000 		.4byte	.LASF3
 1080 0041 03       		.uleb128 0x3
 1081 0042 FD040000 		.4byte	.LASF9
 1082 0046 02       		.byte	0x2
 1083 0047 3F       		.byte	0x3f
 1084 0048 4C000000 		.4byte	0x4c
 1085 004c 02       		.uleb128 0x2
 1086 004d 04       		.byte	0x4
 1087 004e 05       		.byte	0x5
 1088 004f 33020000 		.4byte	.LASF4
 1089 0053 02       		.uleb128 0x2
 1090 0054 04       		.byte	0x4
 1091 0055 07       		.byte	0x7
 1092 0056 9C040000 		.4byte	.LASF5
 1093 005a 02       		.uleb128 0x2
 1094 005b 08       		.byte	0x8
 1095 005c 05       		.byte	0x5
 1096 005d 13020000 		.4byte	.LASF6
 1097 0061 02       		.uleb128 0x2
 1098 0062 08       		.byte	0x8
 1099 0063 07       		.byte	0x7
 1100 0064 23030000 		.4byte	.LASF7
 1101 0068 04       		.uleb128 0x4
 1102 0069 04       		.byte	0x4
 1103 006a 05       		.byte	0x5
 1104 006b 696E7400 		.ascii	"int\000"
 1105 006f 02       		.uleb128 0x2
 1106 0070 04       		.byte	0x4
 1107 0071 07       		.byte	0x7
 1108 0072 58030000 		.4byte	.LASF8
 1109 0076 03       		.uleb128 0x3
 1110 0077 3C040000 		.4byte	.LASF10
 1111 007b 03       		.byte	0x3
 1112 007c 2C       		.byte	0x2c
 1113 007d 41000000 		.4byte	0x41
 1114 0081 05       		.uleb128 0x5
 1115 0082 AC010000 		.4byte	.LASF11
 1116 0086 04       		.byte	0x4
 1117 0087 9201     		.2byte	0x192
 1118 0089 2C000000 		.4byte	0x2c
 1119 008d 05       		.uleb128 0x5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 25


 1120 008e 8A040000 		.4byte	.LASF12
 1121 0092 04       		.byte	0x4
 1122 0093 9301     		.2byte	0x193
 1123 0095 3A000000 		.4byte	0x3a
 1124 0099 05       		.uleb128 0x5
 1125 009a 21020000 		.4byte	.LASF13
 1126 009e 04       		.byte	0x4
 1127 009f 9601     		.2byte	0x196
 1128 00a1 33000000 		.4byte	0x33
 1129 00a5 05       		.uleb128 0x5
 1130 00a6 0D020000 		.4byte	.LASF14
 1131 00aa 04       		.byte	0x4
 1132 00ab 9701     		.2byte	0x197
 1133 00ad 4C000000 		.4byte	0x4c
 1134 00b1 02       		.uleb128 0x2
 1135 00b2 04       		.byte	0x4
 1136 00b3 04       		.byte	0x4
 1137 00b4 F9010000 		.4byte	.LASF15
 1138 00b8 02       		.uleb128 0x2
 1139 00b9 08       		.byte	0x8
 1140 00ba 04       		.byte	0x4
 1141 00bb AE040000 		.4byte	.LASF16
 1142 00bf 02       		.uleb128 0x2
 1143 00c0 01       		.byte	0x1
 1144 00c1 08       		.byte	0x8
 1145 00c2 27020000 		.4byte	.LASF17
 1146 00c6 02       		.uleb128 0x2
 1147 00c7 08       		.byte	0x8
 1148 00c8 04       		.byte	0x4
 1149 00c9 A6020000 		.4byte	.LASF18
 1150 00cd 02       		.uleb128 0x2
 1151 00ce 04       		.byte	0x4
 1152 00cf 07       		.byte	0x7
 1153 00d0 9D000000 		.4byte	.LASF19
 1154 00d4 06       		.uleb128 0x6
 1155 00d5 BF000000 		.4byte	0xbf
 1156 00d9 E4000000 		.4byte	0xe4
 1157 00dd 07       		.uleb128 0x7
 1158 00de CD000000 		.4byte	0xcd
 1159 00e2 17       		.byte	0x17
 1160 00e3 00       		.byte	0
 1161 00e4 08       		.uleb128 0x8
 1162 00e5 8101     		.2byte	0x181
 1163 00e7 05       		.byte	0x5
 1164 00e8 0A       		.byte	0xa
 1165 00e9 12010000 		.4byte	0x112
 1166 00ed 09       		.uleb128 0x9
 1167 00ee 1B050000 		.4byte	.LASF20
 1168 00f2 05       		.byte	0x5
 1169 00f3 0C       		.byte	0xc
 1170 00f4 12010000 		.4byte	0x112
 1171 00f8 00       		.byte	0
 1172 00f9 09       		.uleb128 0x9
 1173 00fa E5030000 		.4byte	.LASF21
 1174 00fe 05       		.byte	0x5
 1175 00ff 0D       		.byte	0xd
 1176 0100 81000000 		.4byte	0x81
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 26


 1177 0104 80       		.byte	0x80
 1178 0105 09       		.uleb128 0x9
 1179 0106 2C020000 		.4byte	.LASF22
 1180 010a 05       		.byte	0x5
 1181 010b 0F       		.byte	0xf
 1182 010c 22010000 		.4byte	0x122
 1183 0110 81       		.byte	0x81
 1184 0111 00       		.byte	0
 1185 0112 06       		.uleb128 0x6
 1186 0113 BF000000 		.4byte	0xbf
 1187 0117 22010000 		.4byte	0x122
 1188 011b 07       		.uleb128 0x7
 1189 011c CD000000 		.4byte	0xcd
 1190 0120 7F       		.byte	0x7f
 1191 0121 00       		.byte	0
 1192 0122 06       		.uleb128 0x6
 1193 0123 BF000000 		.4byte	0xbf
 1194 0127 32010000 		.4byte	0x132
 1195 012b 07       		.uleb128 0x7
 1196 012c CD000000 		.4byte	0xcd
 1197 0130 FF       		.byte	0xff
 1198 0131 00       		.byte	0
 1199 0132 03       		.uleb128 0x3
 1200 0133 14050000 		.4byte	.LASF23
 1201 0137 05       		.byte	0x5
 1202 0138 10       		.byte	0x10
 1203 0139 E4000000 		.4byte	0xe4
 1204 013d 0A       		.uleb128 0xa
 1205 013e 14       		.byte	0x14
 1206 013f 06       		.byte	0x6
 1207 0140 11       		.byte	0x11
 1208 0141 82010000 		.4byte	0x182
 1209 0145 09       		.uleb128 0x9
 1210 0146 8A010000 		.4byte	.LASF24
 1211 014a 06       		.byte	0x6
 1212 014b 12       		.byte	0x12
 1213 014c B1000000 		.4byte	0xb1
 1214 0150 00       		.byte	0
 1215 0151 09       		.uleb128 0x9
 1216 0152 1D000000 		.4byte	.LASF25
 1217 0156 06       		.byte	0x6
 1218 0157 13       		.byte	0x13
 1219 0158 B1000000 		.4byte	0xb1
 1220 015c 04       		.byte	0x4
 1221 015d 09       		.uleb128 0x9
 1222 015e 84050000 		.4byte	.LASF26
 1223 0162 06       		.byte	0x6
 1224 0163 14       		.byte	0x14
 1225 0164 B1000000 		.4byte	0xb1
 1226 0168 08       		.byte	0x8
 1227 0169 09       		.uleb128 0x9
 1228 016a 59010000 		.4byte	.LASF27
 1229 016e 06       		.byte	0x6
 1230 016f 15       		.byte	0x15
 1231 0170 B1000000 		.4byte	0xb1
 1232 0174 0C       		.byte	0xc
 1233 0175 09       		.uleb128 0x9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 27


 1234 0176 D5020000 		.4byte	.LASF28
 1235 017a 06       		.byte	0x6
 1236 017b 16       		.byte	0x16
 1237 017c 81000000 		.4byte	0x81
 1238 0180 10       		.byte	0x10
 1239 0181 00       		.byte	0
 1240 0182 03       		.uleb128 0x3
 1241 0183 32040000 		.4byte	.LASF29
 1242 0187 06       		.byte	0x6
 1243 0188 17       		.byte	0x17
 1244 0189 3D010000 		.4byte	0x13d
 1245 018d 0A       		.uleb128 0xa
 1246 018e 10       		.byte	0x10
 1247 018f 06       		.byte	0x6
 1248 0190 19       		.byte	0x19
 1249 0191 C6010000 		.4byte	0x1c6
 1250 0195 09       		.uleb128 0x9
 1251 0196 5F020000 		.4byte	.LASF30
 1252 019a 06       		.byte	0x6
 1253 019b 1A       		.byte	0x1a
 1254 019c B1000000 		.4byte	0xb1
 1255 01a0 00       		.byte	0
 1256 01a1 09       		.uleb128 0x9
 1257 01a2 EC030000 		.4byte	.LASF31
 1258 01a6 06       		.byte	0x6
 1259 01a7 1B       		.byte	0x1b
 1260 01a8 B1000000 		.4byte	0xb1
 1261 01ac 04       		.byte	0x4
 1262 01ad 09       		.uleb128 0x9
 1263 01ae A6050000 		.4byte	.LASF32
 1264 01b2 06       		.byte	0x6
 1265 01b3 1C       		.byte	0x1c
 1266 01b4 B1000000 		.4byte	0xb1
 1267 01b8 08       		.byte	0x8
 1268 01b9 09       		.uleb128 0x9
 1269 01ba 7A020000 		.4byte	.LASF33
 1270 01be 06       		.byte	0x6
 1271 01bf 1D       		.byte	0x1d
 1272 01c0 B1000000 		.4byte	0xb1
 1273 01c4 0C       		.byte	0xc
 1274 01c5 00       		.byte	0
 1275 01c6 03       		.uleb128 0x3
 1276 01c7 9B030000 		.4byte	.LASF34
 1277 01cb 06       		.byte	0x6
 1278 01cc 1E       		.byte	0x1e
 1279 01cd 8D010000 		.4byte	0x18d
 1280 01d1 0A       		.uleb128 0xa
 1281 01d2 2C       		.byte	0x2c
 1282 01d3 07       		.byte	0x7
 1283 01d4 14       		.byte	0x14
 1284 01d5 FE010000 		.4byte	0x1fe
 1285 01d9 0B       		.uleb128 0xb
 1286 01da 6B657900 		.ascii	"key\000"
 1287 01de 07       		.byte	0x7
 1288 01df 15       		.byte	0x15
 1289 01e0 FE010000 		.4byte	0x1fe
 1290 01e4 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 28


 1291 01e5 09       		.uleb128 0x9
 1292 01e6 84010000 		.4byte	.LASF35
 1293 01ea 07       		.byte	0x7
 1294 01eb 16       		.byte	0x16
 1295 01ec FE010000 		.4byte	0x1fe
 1296 01f0 14       		.byte	0x14
 1297 01f1 09       		.uleb128 0x9
 1298 01f2 C0010000 		.4byte	.LASF36
 1299 01f6 07       		.byte	0x7
 1300 01f7 17       		.byte	0x17
 1301 01f8 A5000000 		.4byte	0xa5
 1302 01fc 28       		.byte	0x28
 1303 01fd 00       		.byte	0
 1304 01fe 06       		.uleb128 0x6
 1305 01ff BF000000 		.4byte	0xbf
 1306 0203 0E020000 		.4byte	0x20e
 1307 0207 07       		.uleb128 0x7
 1308 0208 CD000000 		.4byte	0xcd
 1309 020c 13       		.byte	0x13
 1310 020d 00       		.byte	0
 1311 020e 03       		.uleb128 0x3
 1312 020f 65030000 		.4byte	.LASF37
 1313 0213 07       		.byte	0x7
 1314 0214 19       		.byte	0x19
 1315 0215 D1010000 		.4byte	0x1d1
 1316 0219 0A       		.uleb128 0xa
 1317 021a 3C       		.byte	0x3c
 1318 021b 08       		.byte	0x8
 1319 021c 35       		.byte	0x35
 1320 021d 46020000 		.4byte	0x246
 1321 0221 09       		.uleb128 0x9
 1322 0222 16000000 		.4byte	.LASF38
 1323 0226 08       		.byte	0x8
 1324 0227 36       		.byte	0x36
 1325 0228 FE010000 		.4byte	0x1fe
 1326 022c 00       		.byte	0
 1327 022d 09       		.uleb128 0x9
 1328 022e 00000000 		.4byte	.LASF39
 1329 0232 08       		.byte	0x8
 1330 0233 37       		.byte	0x37
 1331 0234 FE010000 		.4byte	0x1fe
 1332 0238 14       		.byte	0x14
 1333 0239 09       		.uleb128 0x9
 1334 023a 2D040000 		.4byte	.LASF40
 1335 023e 08       		.byte	0x8
 1336 023f 38       		.byte	0x38
 1337 0240 FE010000 		.4byte	0x1fe
 1338 0244 28       		.byte	0x28
 1339 0245 00       		.byte	0
 1340 0246 03       		.uleb128 0x3
 1341 0247 E2040000 		.4byte	.LASF41
 1342 024b 08       		.byte	0x8
 1343 024c 3A       		.byte	0x3a
 1344 024d 19020000 		.4byte	0x219
 1345 0251 0A       		.uleb128 0xa
 1346 0252 20       		.byte	0x20
 1347 0253 08       		.byte	0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 29


 1348 0254 3C       		.byte	0x3c
 1349 0255 BA020000 		.4byte	0x2ba
 1350 0259 09       		.uleb128 0x9
 1351 025a 71030000 		.4byte	.LASF42
 1352 025e 08       		.byte	0x8
 1353 025f 3D       		.byte	0x3d
 1354 0260 68000000 		.4byte	0x68
 1355 0264 00       		.byte	0
 1356 0265 0B       		.uleb128 0xb
 1357 0266 62657200 		.ascii	"ber\000"
 1358 026a 08       		.byte	0x8
 1359 026b 3E       		.byte	0x3e
 1360 026c 68000000 		.4byte	0x68
 1361 0270 04       		.byte	0x4
 1362 0271 09       		.uleb128 0x9
 1363 0272 BB010000 		.4byte	.LASF43
 1364 0276 08       		.byte	0x8
 1365 0277 3F       		.byte	0x3f
 1366 0278 68000000 		.4byte	0x68
 1367 027c 08       		.byte	0x8
 1368 027d 09       		.uleb128 0x9
 1369 027e 73010000 		.4byte	.LASF44
 1370 0282 08       		.byte	0x8
 1371 0283 40       		.byte	0x40
 1372 0284 68000000 		.4byte	0x68
 1373 0288 0C       		.byte	0xc
 1374 0289 09       		.uleb128 0x9
 1375 028a 85040000 		.4byte	.LASF45
 1376 028e 08       		.byte	0x8
 1377 028f 41       		.byte	0x41
 1378 0290 68000000 		.4byte	0x68
 1379 0294 10       		.byte	0x10
 1380 0295 09       		.uleb128 0x9
 1381 0296 7B040000 		.4byte	.LASF46
 1382 029a 08       		.byte	0x8
 1383 029b 42       		.byte	0x42
 1384 029c 68000000 		.4byte	0x68
 1385 02a0 14       		.byte	0x14
 1386 02a1 09       		.uleb128 0x9
 1387 02a2 CD030000 		.4byte	.LASF47
 1388 02a6 08       		.byte	0x8
 1389 02a7 43       		.byte	0x43
 1390 02a8 68000000 		.4byte	0x68
 1391 02ac 18       		.byte	0x18
 1392 02ad 09       		.uleb128 0x9
 1393 02ae 0D040000 		.4byte	.LASF48
 1394 02b2 08       		.byte	0x8
 1395 02b3 44       		.byte	0x44
 1396 02b4 68000000 		.4byte	0x68
 1397 02b8 1C       		.byte	0x1c
 1398 02b9 00       		.byte	0
 1399 02ba 03       		.uleb128 0x3
 1400 02bb 44040000 		.4byte	.LASF49
 1401 02bf 08       		.byte	0x8
 1402 02c0 46       		.byte	0x46
 1403 02c1 51020000 		.4byte	0x251
 1404 02c5 0A       		.uleb128 0xa
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 30


 1405 02c6 05       		.byte	0x5
 1406 02c7 08       		.byte	0x8
 1407 02c8 52       		.byte	0x52
 1408 02c9 0A030000 		.4byte	0x30a
 1409 02cd 09       		.uleb128 0x9
 1410 02ce 7A050000 		.4byte	.LASF50
 1411 02d2 08       		.byte	0x8
 1412 02d3 54       		.byte	0x54
 1413 02d4 81000000 		.4byte	0x81
 1414 02d8 00       		.byte	0
 1415 02d9 09       		.uleb128 0x9
 1416 02da A6030000 		.4byte	.LASF51
 1417 02de 08       		.byte	0x8
 1418 02df 56       		.byte	0x56
 1419 02e0 0A030000 		.4byte	0x30a
 1420 02e4 01       		.byte	0x1
 1421 02e5 09       		.uleb128 0x9
 1422 02e6 8F020000 		.4byte	.LASF52
 1423 02ea 08       		.byte	0x8
 1424 02eb 58       		.byte	0x58
 1425 02ec 81000000 		.4byte	0x81
 1426 02f0 02       		.byte	0x2
 1427 02f1 09       		.uleb128 0x9
 1428 02f2 77030000 		.4byte	.LASF53
 1429 02f6 08       		.byte	0x8
 1430 02f7 5A       		.byte	0x5a
 1431 02f8 81000000 		.4byte	0x81
 1432 02fc 03       		.byte	0x3
 1433 02fd 09       		.uleb128 0x9
 1434 02fe D6040000 		.4byte	.LASF54
 1435 0302 08       		.byte	0x8
 1436 0303 5D       		.byte	0x5d
 1437 0304 81000000 		.4byte	0x81
 1438 0308 04       		.byte	0x4
 1439 0309 00       		.byte	0
 1440 030a 02       		.uleb128 0x2
 1441 030b 01       		.byte	0x1
 1442 030c 02       		.byte	0x2
 1443 030d 5E040000 		.4byte	.LASF55
 1444 0311 03       		.uleb128 0x3
 1445 0312 F2020000 		.4byte	.LASF56
 1446 0316 08       		.byte	0x8
 1447 0317 5F       		.byte	0x5f
 1448 0318 C5020000 		.4byte	0x2c5
 1449 031c 0A       		.uleb128 0xa
 1450 031d 06       		.byte	0x6
 1451 031e 09       		.byte	0x9
 1452 031f 2E       		.byte	0x2e
 1453 0320 55030000 		.4byte	0x355
 1454 0324 09       		.uleb128 0x9
 1455 0325 77000000 		.4byte	.LASF57
 1456 0329 09       		.byte	0x9
 1457 032a 30       		.byte	0x30
 1458 032b 8D000000 		.4byte	0x8d
 1459 032f 00       		.byte	0
 1460 0330 09       		.uleb128 0x9
 1461 0331 3A000000 		.4byte	.LASF58
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 31


 1462 0335 09       		.byte	0x9
 1463 0336 31       		.byte	0x31
 1464 0337 99000000 		.4byte	0x99
 1465 033b 02       		.byte	0x2
 1466 033c 09       		.uleb128 0x9
 1467 033d EF040000 		.4byte	.LASF59
 1468 0341 09       		.byte	0x9
 1469 0342 32       		.byte	0x32
 1470 0343 81000000 		.4byte	0x81
 1471 0347 04       		.byte	0x4
 1472 0348 09       		.uleb128 0x9
 1473 0349 25050000 		.4byte	.LASF60
 1474 034d 09       		.byte	0x9
 1475 034e 33       		.byte	0x33
 1476 034f 81000000 		.4byte	0x81
 1477 0353 05       		.byte	0x5
 1478 0354 00       		.byte	0
 1479 0355 03       		.uleb128 0x3
 1480 0356 89020000 		.4byte	.LASF61
 1481 035a 09       		.byte	0x9
 1482 035b 36       		.byte	0x36
 1483 035c 60030000 		.4byte	0x360
 1484 0360 0C       		.uleb128 0xc
 1485 0361 1C030000 		.4byte	0x31c
 1486 0365 0A       		.uleb128 0xa
 1487 0366 1C       		.byte	0x1c
 1488 0367 09       		.byte	0x9
 1489 0368 39       		.byte	0x39
 1490 0369 86030000 		.4byte	0x386
 1491 036d 09       		.uleb128 0x9
 1492 036e 54020000 		.4byte	.LASF62
 1493 0372 09       		.byte	0x9
 1494 0373 3B       		.byte	0x3b
 1495 0374 86030000 		.4byte	0x386
 1496 0378 00       		.byte	0
 1497 0379 09       		.uleb128 0x9
 1498 037a 4A030000 		.4byte	.LASF63
 1499 037e 09       		.byte	0x9
 1500 037f 3C       		.byte	0x3c
 1501 0380 D4000000 		.4byte	0xd4
 1502 0384 04       		.byte	0x4
 1503 0385 00       		.byte	0
 1504 0386 0D       		.uleb128 0xd
 1505 0387 04       		.byte	0x4
 1506 0388 46020000 		.4byte	0x246
 1507 038c 03       		.uleb128 0x3
 1508 038d AF030000 		.4byte	.LASF64
 1509 0391 09       		.byte	0x9
 1510 0392 3E       		.byte	0x3e
 1511 0393 65030000 		.4byte	0x365
 1512 0397 0A       		.uleb128 0xa
 1513 0398 68       		.byte	0x68
 1514 0399 09       		.byte	0x9
 1515 039a 44       		.byte	0x44
 1516 039b B8030000 		.4byte	0x3b8
 1517 039f 09       		.uleb128 0x9
 1518 03a0 A6000000 		.4byte	.LASF65
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 32


 1519 03a4 09       		.byte	0x9
 1520 03a5 49       		.byte	0x49
 1521 03a6 B8030000 		.4byte	0x3b8
 1522 03aa 00       		.byte	0
 1523 03ab 09       		.uleb128 0x9
 1524 03ac 52050000 		.4byte	.LASF66
 1525 03b0 09       		.byte	0x9
 1526 03b1 4A       		.byte	0x4a
 1527 03b2 68000000 		.4byte	0x68
 1528 03b6 64       		.byte	0x64
 1529 03b7 00       		.byte	0
 1530 03b8 06       		.uleb128 0x6
 1531 03b9 BF000000 		.4byte	0xbf
 1532 03bd C8030000 		.4byte	0x3c8
 1533 03c1 07       		.uleb128 0x7
 1534 03c2 CD000000 		.4byte	0xcd
 1535 03c6 63       		.byte	0x63
 1536 03c7 00       		.byte	0
 1537 03c8 03       		.uleb128 0x3
 1538 03c9 2B000000 		.4byte	.LASF67
 1539 03cd 09       		.byte	0x9
 1540 03ce 50       		.byte	0x50
 1541 03cf 97030000 		.4byte	0x397
 1542 03d3 0E       		.uleb128 0xe
 1543 03d4 CA010000 		.4byte	.LASF72
 1544 03d8 01       		.byte	0x1
 1545 03d9 06       		.byte	0x6
 1546 03da 82010000 		.4byte	0x182
 1547 03de 00000000 		.4byte	.LFB64
 1548 03e2 34010000 		.4byte	.LFE64-.LFB64
 1549 03e6 01       		.uleb128 0x1
 1550 03e7 9C       		.byte	0x9c
 1551 03e8 5C040000 		.4byte	0x45c
 1552 03ec 0F       		.uleb128 0xf
 1553 03ed 4C020000 		.4byte	.LASF68
 1554 03f1 01       		.byte	0x1
 1555 03f2 08       		.byte	0x8
 1556 03f3 82010000 		.4byte	0x182
 1557 03f7 02       		.uleb128 0x2
 1558 03f8 91       		.byte	0x91
 1559 03f9 54       		.sleb128 -44
 1560 03fa 0F       		.uleb128 0xf
 1561 03fb 6A010000 		.4byte	.LASF69
 1562 03ff 01       		.byte	0x1
 1563 0400 15       		.byte	0x15
 1564 0401 5C040000 		.4byte	0x45c
 1565 0405 02       		.uleb128 0x2
 1566 0406 91       		.byte	0x91
 1567 0407 44       		.sleb128 -60
 1568 0408 0F       		.uleb128 0xf
 1569 0409 50000000 		.4byte	.LASF70
 1570 040d 01       		.byte	0x1
 1571 040e 31       		.byte	0x31
 1572 040f B1000000 		.4byte	0xb1
 1573 0413 02       		.uleb128 0x2
 1574 0414 91       		.byte	0x91
 1575 0415 68       		.sleb128 -24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 33


 1576 0416 10       		.uleb128 0x10
 1577 0417 26000000 		.4byte	.LBB2
 1578 041b 7A000000 		.4byte	.LBE2-.LBB2
 1579 041f 11       		.uleb128 0x11
 1580 0420 6300     		.ascii	"c\000"
 1581 0422 01       		.byte	0x1
 1582 0423 17       		.byte	0x17
 1583 0424 81000000 		.4byte	0x81
 1584 0428 02       		.uleb128 0x2
 1585 0429 91       		.byte	0x91
 1586 042a 6F       		.sleb128 -17
 1587 042b 10       		.uleb128 0x10
 1588 042c 2E000000 		.4byte	.LBB3
 1589 0430 60000000 		.4byte	.LBE3-.LBB3
 1590 0434 0F       		.uleb128 0xf
 1591 0435 B7050000 		.4byte	.LASF71
 1592 0439 01       		.byte	0x1
 1593 043a 1A       		.byte	0x1a
 1594 043b 6C040000 		.4byte	0x46c
 1595 043f 03       		.uleb128 0x3
 1596 0440 91       		.byte	0x91
 1597 0441 987F     		.sleb128 -104
 1598 0443 10       		.uleb128 0x10
 1599 0444 38000000 		.4byte	.LBB4
 1600 0448 30000000 		.4byte	.LBE4-.LBB4
 1601 044c 11       		.uleb128 0x11
 1602 044d 6900     		.ascii	"i\000"
 1603 044f 01       		.byte	0x1
 1604 0450 1E       		.byte	0x1e
 1605 0451 8D000000 		.4byte	0x8d
 1606 0455 02       		.uleb128 0x2
 1607 0456 91       		.byte	0x91
 1608 0457 6C       		.sleb128 -20
 1609 0458 00       		.byte	0
 1610 0459 00       		.byte	0
 1611 045a 00       		.byte	0
 1612 045b 00       		.byte	0
 1613 045c 06       		.uleb128 0x6
 1614 045d B1000000 		.4byte	0xb1
 1615 0461 6C040000 		.4byte	0x46c
 1616 0465 07       		.uleb128 0x7
 1617 0466 CD000000 		.4byte	0xcd
 1618 046a 03       		.byte	0x3
 1619 046b 00       		.byte	0
 1620 046c 06       		.uleb128 0x6
 1621 046d A5000000 		.4byte	0xa5
 1622 0471 7C040000 		.4byte	0x47c
 1623 0475 07       		.uleb128 0x7
 1624 0476 CD000000 		.4byte	0xcd
 1625 047a 0A       		.byte	0xa
 1626 047b 00       		.byte	0
 1627 047c 0E       		.uleb128 0xe
 1628 047d 57000000 		.4byte	.LASF73
 1629 0481 01       		.byte	0x1
 1630 0482 3E       		.byte	0x3e
 1631 0483 C6010000 		.4byte	0x1c6
 1632 0487 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 34


 1633 048b 98010000 		.4byte	.LFE65-.LFB65
 1634 048f 01       		.uleb128 0x1
 1635 0490 9C       		.byte	0x9c
 1636 0491 F1040000 		.4byte	0x4f1
 1637 0495 0F       		.uleb128 0xf
 1638 0496 B2010000 		.4byte	.LASF74
 1639 049a 01       		.byte	0x1
 1640 049b 40       		.byte	0x40
 1641 049c C6010000 		.4byte	0x1c6
 1642 04a0 02       		.uleb128 0x2
 1643 04a1 91       		.byte	0x91
 1644 04a2 5C       		.sleb128 -36
 1645 04a3 0F       		.uleb128 0xf
 1646 04a4 6A010000 		.4byte	.LASF69
 1647 04a8 01       		.byte	0x1
 1648 04a9 41       		.byte	0x41
 1649 04aa 5C040000 		.4byte	0x45c
 1650 04ae 02       		.uleb128 0x2
 1651 04af 91       		.byte	0x91
 1652 04b0 4C       		.sleb128 -52
 1653 04b1 0F       		.uleb128 0xf
 1654 04b2 B7050000 		.4byte	.LASF71
 1655 04b6 01       		.byte	0x1
 1656 04b7 42       		.byte	0x42
 1657 04b8 6C040000 		.4byte	0x46c
 1658 04bc 03       		.uleb128 0x3
 1659 04bd 91       		.byte	0x91
 1660 04be A07F     		.sleb128 -96
 1661 04c0 12       		.uleb128 0x12
 1662 04c1 1A000000 		.4byte	.LBB5
 1663 04c5 30000000 		.4byte	.LBE5-.LBB5
 1664 04c9 DA040000 		.4byte	0x4da
 1665 04cd 11       		.uleb128 0x11
 1666 04ce 6900     		.ascii	"i\000"
 1667 04d0 01       		.byte	0x1
 1668 04d1 4C       		.byte	0x4c
 1669 04d2 8D000000 		.4byte	0x8d
 1670 04d6 02       		.uleb128 0x2
 1671 04d7 91       		.byte	0x91
 1672 04d8 6E       		.sleb128 -18
 1673 04d9 00       		.byte	0
 1674 04da 10       		.uleb128 0x10
 1675 04db 8E000000 		.4byte	.LBB6
 1676 04df 30000000 		.4byte	.LBE6-.LBB6
 1677 04e3 11       		.uleb128 0x11
 1678 04e4 6900     		.ascii	"i\000"
 1679 04e6 01       		.byte	0x1
 1680 04e7 59       		.byte	0x59
 1681 04e8 8D000000 		.4byte	0x8d
 1682 04ec 02       		.uleb128 0x2
 1683 04ed 91       		.byte	0x91
 1684 04ee 6C       		.sleb128 -20
 1685 04ef 00       		.byte	0
 1686 04f0 00       		.byte	0
 1687 04f1 13       		.uleb128 0x13
 1688 04f2 5A050000 		.4byte	.LASF77
 1689 04f6 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 35


 1690 04f7 74       		.byte	0x74
 1691 04f8 C6010000 		.4byte	0x1c6
 1692 04fc 00000000 		.4byte	.LFB66
 1693 0500 C4000000 		.4byte	.LFE66-.LFB66
 1694 0504 01       		.uleb128 0x1
 1695 0505 9C       		.byte	0x9c
 1696 0506 27050000 		.4byte	0x527
 1697 050a 14       		.uleb128 0x14
 1698 050b 4C020000 		.4byte	.LASF68
 1699 050f 01       		.byte	0x1
 1700 0510 74       		.byte	0x74
 1701 0511 82010000 		.4byte	0x182
 1702 0515 02       		.uleb128 0x2
 1703 0516 91       		.byte	0x91
 1704 0517 74       		.sleb128 -12
 1705 0518 0F       		.uleb128 0xf
 1706 0519 B2010000 		.4byte	.LASF74
 1707 051d 01       		.byte	0x1
 1708 051e 76       		.byte	0x76
 1709 051f C6010000 		.4byte	0x1c6
 1710 0523 02       		.uleb128 0x2
 1711 0524 91       		.byte	0x91
 1712 0525 50       		.sleb128 -48
 1713 0526 00       		.byte	0
 1714 0527 15       		.uleb128 0x15
 1715 0528 73020000 		.4byte	.LASF75
 1716 052c 01       		.byte	0x1
 1717 052d 86       		.byte	0x86
 1718 052e 00000000 		.4byte	.LFB67
 1719 0532 74000000 		.4byte	.LFE67-.LFB67
 1720 0536 01       		.uleb128 0x1
 1721 0537 9C       		.byte	0x9c
 1722 0538 6D050000 		.4byte	0x56d
 1723 053c 16       		.uleb128 0x16
 1724 053d 6100     		.ascii	"a\000"
 1725 053f 01       		.byte	0x1
 1726 0540 86       		.byte	0x86
 1727 0541 6D050000 		.4byte	0x56d
 1728 0545 02       		.uleb128 0x2
 1729 0546 91       		.byte	0x91
 1730 0547 6C       		.sleb128 -20
 1731 0548 16       		.uleb128 0x16
 1732 0549 6E00     		.ascii	"n\000"
 1733 054b 01       		.byte	0x1
 1734 054c 86       		.byte	0x86
 1735 054d A5000000 		.4byte	0xa5
 1736 0551 02       		.uleb128 0x2
 1737 0552 91       		.byte	0x91
 1738 0553 68       		.sleb128 -24
 1739 0554 11       		.uleb128 0x11
 1740 0555 6900     		.ascii	"i\000"
 1741 0557 01       		.byte	0x1
 1742 0558 87       		.byte	0x87
 1743 0559 A5000000 		.4byte	0xa5
 1744 055d 02       		.uleb128 0x2
 1745 055e 91       		.byte	0x91
 1746 055f 74       		.sleb128 -12
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 36


 1747 0560 11       		.uleb128 0x11
 1748 0561 6A00     		.ascii	"j\000"
 1749 0563 01       		.byte	0x1
 1750 0564 87       		.byte	0x87
 1751 0565 A5000000 		.4byte	0xa5
 1752 0569 02       		.uleb128 0x2
 1753 056a 91       		.byte	0x91
 1754 056b 70       		.sleb128 -16
 1755 056c 00       		.byte	0
 1756 056d 0D       		.uleb128 0xd
 1757 056e 04       		.byte	0x4
 1758 056f A5000000 		.4byte	0xa5
 1759 0573 17       		.uleb128 0x17
 1760 0574 42010000 		.4byte	.LASF76
 1761 0578 01       		.byte	0x1
 1762 0579 92       		.byte	0x92
 1763 057a 00000000 		.4byte	.LFB68
 1764 057e 28000000 		.4byte	.LFE68-.LFB68
 1765 0582 01       		.uleb128 0x1
 1766 0583 9C       		.byte	0x9c
 1767 0584 AD050000 		.4byte	0x5ad
 1768 0588 16       		.uleb128 0x16
 1769 0589 7000     		.ascii	"p\000"
 1770 058b 01       		.byte	0x1
 1771 058c 92       		.byte	0x92
 1772 058d 6D050000 		.4byte	0x56d
 1773 0591 02       		.uleb128 0x2
 1774 0592 91       		.byte	0x91
 1775 0593 6C       		.sleb128 -20
 1776 0594 16       		.uleb128 0x16
 1777 0595 7100     		.ascii	"q\000"
 1778 0597 01       		.byte	0x1
 1779 0598 92       		.byte	0x92
 1780 0599 6D050000 		.4byte	0x56d
 1781 059d 02       		.uleb128 0x2
 1782 059e 91       		.byte	0x91
 1783 059f 68       		.sleb128 -24
 1784 05a0 11       		.uleb128 0x11
 1785 05a1 7400     		.ascii	"t\000"
 1786 05a3 01       		.byte	0x1
 1787 05a4 93       		.byte	0x93
 1788 05a5 A5000000 		.4byte	0xa5
 1789 05a9 02       		.uleb128 0x2
 1790 05aa 91       		.byte	0x91
 1791 05ab 74       		.sleb128 -12
 1792 05ac 00       		.byte	0
 1793 05ad 13       		.uleb128 0x13
 1794 05ae 09030000 		.4byte	.LASF78
 1795 05b2 01       		.byte	0x1
 1796 05b3 9B       		.byte	0x9b
 1797 05b4 A5000000 		.4byte	0xa5
 1798 05b8 00000000 		.4byte	.LFB69
 1799 05bc 84000000 		.4byte	.LFE69-.LFB69
 1800 05c0 01       		.uleb128 0x1
 1801 05c1 9C       		.byte	0x9c
 1802 05c2 EF050000 		.4byte	0x5ef
 1803 05c6 14       		.uleb128 0x14
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 37


 1804 05c7 B5040000 		.4byte	.LASF79
 1805 05cb 01       		.byte	0x1
 1806 05cc 9B       		.byte	0x9b
 1807 05cd 6D050000 		.4byte	0x56d
 1808 05d1 02       		.uleb128 0x2
 1809 05d2 91       		.byte	0x91
 1810 05d3 64       		.sleb128 -28
 1811 05d4 16       		.uleb128 0x16
 1812 05d5 6E00     		.ascii	"n\000"
 1813 05d7 01       		.byte	0x1
 1814 05d8 9B       		.byte	0x9b
 1815 05d9 A5000000 		.4byte	0xa5
 1816 05dd 02       		.uleb128 0x2
 1817 05de 91       		.byte	0x91
 1818 05df 60       		.sleb128 -32
 1819 05e0 0F       		.uleb128 0xf
 1820 05e1 70000000 		.4byte	.LASF80
 1821 05e5 01       		.byte	0x1
 1822 05e6 9D       		.byte	0x9d
 1823 05e7 A5000000 		.4byte	0xa5
 1824 05eb 02       		.uleb128 0x2
 1825 05ec 91       		.byte	0x91
 1826 05ed 6C       		.sleb128 -20
 1827 05ee 00       		.byte	0
 1828 05ef 0E       		.uleb128 0xe
 1829 05f0 FF010000 		.4byte	.LASF81
 1830 05f4 01       		.byte	0x1
 1831 05f5 AD       		.byte	0xad
 1832 05f6 32010000 		.4byte	0x132
 1833 05fa 00000000 		.4byte	.LFB70
 1834 05fe BC000000 		.4byte	.LFE70-.LFB70
 1835 0602 01       		.uleb128 0x1
 1836 0603 9C       		.byte	0x9c
 1837 0604 27060000 		.4byte	0x627
 1838 0608 0F       		.uleb128 0xf
 1839 0609 80040000 		.4byte	.LASF82
 1840 060d 01       		.byte	0x1
 1841 060e AF       		.byte	0xaf
 1842 060f 32010000 		.4byte	0x132
 1843 0613 03       		.uleb128 0x3
 1844 0614 91       		.byte	0x91
 1845 0615 E47C     		.sleb128 -412
 1846 0617 0F       		.uleb128 0xf
 1847 0618 4C020000 		.4byte	.LASF68
 1848 061c 01       		.byte	0x1
 1849 061d B3       		.byte	0xb3
 1850 061e 82010000 		.4byte	0x182
 1851 0622 03       		.uleb128 0x3
 1852 0623 91       		.byte	0x91
 1853 0624 D07C     		.sleb128 -432
 1854 0626 00       		.byte	0
 1855 0627 0E       		.uleb128 0xe
 1856 0628 C0020000 		.4byte	.LASF83
 1857 062c 01       		.byte	0x1
 1858 062d C2       		.byte	0xc2
 1859 062e 32010000 		.4byte	0x132
 1860 0632 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 38


 1861 0636 04010000 		.4byte	.LFE71-.LFB71
 1862 063a 01       		.uleb128 0x1
 1863 063b 9C       		.byte	0x9c
 1864 063c 5F060000 		.4byte	0x65f
 1865 0640 0F       		.uleb128 0xf
 1866 0641 80040000 		.4byte	.LASF82
 1867 0645 01       		.byte	0x1
 1868 0646 C4       		.byte	0xc4
 1869 0647 32010000 		.4byte	0x132
 1870 064b 03       		.uleb128 0x3
 1871 064c 91       		.byte	0x91
 1872 064d E47C     		.sleb128 -412
 1873 064f 0F       		.uleb128 0xf
 1874 0650 B2010000 		.4byte	.LASF74
 1875 0654 01       		.byte	0x1
 1876 0655 C8       		.byte	0xc8
 1877 0656 C6010000 		.4byte	0x1c6
 1878 065a 03       		.uleb128 0x3
 1879 065b 91       		.byte	0x91
 1880 065c D47C     		.sleb128 -428
 1881 065e 00       		.byte	0
 1882 065f 18       		.uleb128 0x18
 1883 0660 20040000 		.4byte	.LASF84
 1884 0664 0A       		.byte	0xa
 1885 0665 1207     		.2byte	0x712
 1886 0667 6B060000 		.4byte	0x66b
 1887 066b 0C       		.uleb128 0xc
 1888 066c 76000000 		.4byte	0x76
 1889 0670 19       		.uleb128 0x19
 1890 0671 3C020000 		.4byte	.LASF85
 1891 0675 07       		.byte	0x7
 1892 0676 11       		.byte	0x11
 1893 0677 0A030000 		.4byte	0x30a
 1894 067b 05       		.uleb128 0x5
 1895 067c 03       		.byte	0x3
 1896 067d 00000000 		.4byte	buffer_overflow
 1897 0681 19       		.uleb128 0x19
 1898 0682 9A010000 		.4byte	.LASF86
 1899 0686 07       		.byte	0x7
 1900 0687 22       		.byte	0x22
 1901 0688 8D000000 		.4byte	0x8d
 1902 068c 05       		.uleb128 0x5
 1903 068d 03       		.byte	0x3
 1904 068e 00000000 		.4byte	dataPointsInStack
 1905 0692 19       		.uleb128 0x19
 1906 0693 E0010000 		.4byte	.LASF87
 1907 0697 07       		.byte	0x7
 1908 0698 23       		.byte	0x23
 1909 0699 8D000000 		.4byte	0x8d
 1910 069d 05       		.uleb128 0x5
 1911 069e 03       		.byte	0x3
 1912 069f 00000000 		.4byte	dataPointsInStackDesired
 1913 06a3 06       		.uleb128 0x6
 1914 06a4 0E020000 		.4byte	0x20e
 1915 06a8 B3060000 		.4byte	0x6b3
 1916 06ac 07       		.uleb128 0x7
 1917 06ad CD000000 		.4byte	0xcd
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 39


 1918 06b1 95       		.byte	0x95
 1919 06b2 00       		.byte	0
 1920 06b3 19       		.uleb128 0x19
 1921 06b4 49010000 		.4byte	.LASF88
 1922 06b8 07       		.byte	0x7
 1923 06b9 24       		.byte	0x24
 1924 06ba A3060000 		.4byte	0x6a3
 1925 06be 05       		.uleb128 0x5
 1926 06bf 03       		.byte	0x3
 1927 06c0 00000000 		.4byte	data
 1928 06c4 19       		.uleb128 0x19
 1929 06c5 52040000 		.4byte	.LASF89
 1930 06c9 08       		.byte	0x8
 1931 06ca 1F       		.byte	0x1f
 1932 06cb 81000000 		.4byte	0x81
 1933 06cf 05       		.uleb128 0x5
 1934 06d0 03       		.byte	0x3
 1935 06d1 00000000 		.4byte	modem_state
 1936 06d5 19       		.uleb128 0x19
 1937 06d6 DB020000 		.4byte	.LASF90
 1938 06da 08       		.byte	0x8
 1939 06db 62       		.byte	0x62
 1940 06dc A5000000 		.4byte	0xa5
 1941 06e0 05       		.uleb128 0x5
 1942 06e1 03       		.byte	0x3
 1943 06e2 00000000 		.4byte	modem_start_time_stamp
 1944 06e6 19       		.uleb128 0x19
 1945 06e7 54020000 		.4byte	.LASF62
 1946 06eb 08       		.byte	0x8
 1947 06ec 63       		.byte	0x63
 1948 06ed 46020000 		.4byte	0x246
 1949 06f1 05       		.uleb128 0x5
 1950 06f2 03       		.byte	0x3
 1951 06f3 00000000 		.4byte	modem_info
 1952 06f7 19       		.uleb128 0x19
 1953 06f8 81030000 		.4byte	.LASF91
 1954 06fc 08       		.byte	0x8
 1955 06fd 64       		.byte	0x64
 1956 06fe BA020000 		.4byte	0x2ba
 1957 0702 05       		.uleb128 0x5
 1958 0703 03       		.byte	0x3
 1959 0704 00000000 		.4byte	modem_stats
 1960 0708 19       		.uleb128 0x19
 1961 0709 3D050000 		.4byte	.LASF92
 1962 070d 08       		.byte	0x8
 1963 070e 65       		.byte	0x65
 1964 070f 11030000 		.4byte	0x311
 1965 0713 05       		.uleb128 0x5
 1966 0714 03       		.byte	0x3
 1967 0715 00000000 		.4byte	updatable_parameters
 1968 0719 19       		.uleb128 0x19
 1969 071a AE000000 		.4byte	.LASF93
 1970 071e 0B       		.byte	0xb
 1971 071f 12       		.byte	0x12
 1972 0720 B8030000 		.4byte	0x3b8
 1973 0724 05       		.uleb128 0x5
 1974 0725 03       		.byte	0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 40


 1975 0726 00000000 		.4byte	inbox
 1976 072a 06       		.uleb128 0x6
 1977 072b BF000000 		.4byte	0xbf
 1978 072f 3B070000 		.4byte	0x73b
 1979 0733 1A       		.uleb128 0x1a
 1980 0734 CD000000 		.4byte	0xcd
 1981 0738 0F27     		.2byte	0x270f
 1982 073a 00       		.byte	0
 1983 073b 19       		.uleb128 0x19
 1984 073c 90000000 		.4byte	.LASF94
 1985 0740 09       		.byte	0x9
 1986 0741 18       		.byte	0x18
 1987 0742 2A070000 		.4byte	0x72a
 1988 0746 05       		.uleb128 0x5
 1989 0747 03       		.byte	0x3
 1990 0748 00000000 		.4byte	http_request
 1991 074c 19       		.uleb128 0x19
 1992 074d 70050000 		.4byte	.LASF95
 1993 0751 09       		.byte	0x9
 1994 0752 19       		.byte	0x19
 1995 0753 2A070000 		.4byte	0x72a
 1996 0757 05       		.uleb128 0x5
 1997 0758 03       		.byte	0x3
 1998 0759 00000000 		.4byte	http_body
 1999 075d 06       		.uleb128 0x6
 2000 075e BF000000 		.4byte	0xbf
 2001 0762 6D070000 		.4byte	0x76d
 2002 0766 07       		.uleb128 0x7
 2003 0767 CD000000 		.4byte	0xcd
 2004 076b C7       		.byte	0xc7
 2005 076c 00       		.byte	0
 2006 076d 19       		.uleb128 0x19
 2007 076e 91040000 		.4byte	.LASF96
 2008 0772 09       		.byte	0x9
 2009 0773 1A       		.byte	0x1a
 2010 0774 5D070000 		.4byte	0x75d
 2011 0778 05       		.uleb128 0x5
 2012 0779 03       		.byte	0x3
 2013 077a 00000000 		.4byte	http_route
 2014 077e 19       		.uleb128 0x19
 2015 077f 01040000 		.4byte	.LASF97
 2016 0783 09       		.byte	0x9
 2017 0784 41       		.byte	0x41
 2018 0785 8C030000 		.4byte	0x38c
 2019 0789 05       		.uleb128 0x5
 2020 078a 03       		.byte	0x3
 2021 078b 00000000 		.4byte	system_info
 2022 078f 19       		.uleb128 0x19
 2023 0790 3A030000 		.4byte	.LASF98
 2024 0794 09       		.byte	0x9
 2025 0795 53       		.byte	0x53
 2026 0796 C8030000 		.4byte	0x3c8
 2027 079a 05       		.uleb128 0x5
 2028 079b 03       		.byte	0x3
 2029 079c 00000000 		.4byte	system_settings
 2030 07a0 19       		.uleb128 0x19
 2031 07a1 09000000 		.4byte	.LASF99
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 41


 2032 07a5 09       		.byte	0x9
 2033 07a6 6F       		.byte	0x6f
 2034 07a7 55030000 		.4byte	0x355
 2035 07ab 05       		.uleb128 0x5
 2036 07ac 03       		.byte	0x3
 2037 07ad 00000000 		.4byte	alarmMeasure
 2038 07b1 19       		.uleb128 0x19
 2039 07b2 8D030000 		.4byte	.LASF100
 2040 07b6 09       		.byte	0x9
 2041 07b7 70       		.byte	0x70
 2042 07b8 81000000 		.4byte	0x81
 2043 07bc 05       		.uleb128 0x5
 2044 07bd 03       		.byte	0x3
 2045 07be 00000000 		.4byte	timeToMeasure
 2046 07c2 19       		.uleb128 0x19
 2047 07c3 9C020000 		.4byte	.LASF101
 2048 07c7 09       		.byte	0x9
 2049 07c8 71       		.byte	0x71
 2050 07c9 55030000 		.4byte	0x355
 2051 07cd 05       		.uleb128 0x5
 2052 07ce 03       		.byte	0x3
 2053 07cf 00000000 		.4byte	alarmSync
 2054 07d3 19       		.uleb128 0x19
 2055 07d4 9B050000 		.4byte	.LASF102
 2056 07d8 09       		.byte	0x9
 2057 07d9 72       		.byte	0x72
 2058 07da 81000000 		.4byte	0x81
 2059 07de 05       		.uleb128 0x5
 2060 07df 03       		.byte	0x3
 2061 07e0 00000000 		.4byte	timeToSync
 2062 07e4 19       		.uleb128 0x19
 2063 07e5 64040000 		.4byte	.LASF103
 2064 07e9 09       		.byte	0x9
 2065 07ea 73       		.byte	0x73
 2066 07eb 81000000 		.4byte	0x81
 2067 07ef 05       		.uleb128 0x5
 2068 07f0 03       		.byte	0x3
 2069 07f1 00000000 		.4byte	timeToSycnRemoteParams
 2070 07f5 1B       		.uleb128 0x1b
 2071 07f6 68657900 		.ascii	"hey\000"
 2072 07fa 09       		.byte	0x9
 2073 07fb 74       		.byte	0x74
 2074 07fc 81000000 		.4byte	0x81
 2075 0800 05       		.uleb128 0x5
 2076 0801 03       		.byte	0x3
 2077 0802 00000000 		.4byte	hey
 2078 0806 19       		.uleb128 0x19
 2079 0807 78010000 		.4byte	.LASF104
 2080 080b 09       		.byte	0x9
 2081 080c 77       		.byte	0x77
 2082 080d 55030000 		.4byte	0x355
 2083 0811 05       		.uleb128 0x5
 2084 0812 03       		.byte	0x3
 2085 0813 00000000 		.4byte	alarmAppLED
 2086 0817 19       		.uleb128 0x19
 2087 0818 07050000 		.4byte	.LASF105
 2088 081c 09       		.byte	0x9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 42


 2089 081d 78       		.byte	0x78
 2090 081e 81000000 		.4byte	0x81
 2091 0822 05       		.uleb128 0x5
 2092 0823 03       		.byte	0x3
 2093 0824 00000000 		.4byte	timeToAppLED
 2094 0828 00       		.byte	0
 2095              		.section	.debug_abbrev,"",%progbits
 2096              	.Ldebug_abbrev0:
 2097 0000 01       		.uleb128 0x1
 2098 0001 11       		.uleb128 0x11
 2099 0002 01       		.byte	0x1
 2100 0003 25       		.uleb128 0x25
 2101 0004 0E       		.uleb128 0xe
 2102 0005 13       		.uleb128 0x13
 2103 0006 0B       		.uleb128 0xb
 2104 0007 03       		.uleb128 0x3
 2105 0008 0E       		.uleb128 0xe
 2106 0009 1B       		.uleb128 0x1b
 2107 000a 0E       		.uleb128 0xe
 2108 000b 55       		.uleb128 0x55
 2109 000c 17       		.uleb128 0x17
 2110 000d 11       		.uleb128 0x11
 2111 000e 01       		.uleb128 0x1
 2112 000f 10       		.uleb128 0x10
 2113 0010 17       		.uleb128 0x17
 2114 0011 00       		.byte	0
 2115 0012 00       		.byte	0
 2116 0013 02       		.uleb128 0x2
 2117 0014 24       		.uleb128 0x24
 2118 0015 00       		.byte	0
 2119 0016 0B       		.uleb128 0xb
 2120 0017 0B       		.uleb128 0xb
 2121 0018 3E       		.uleb128 0x3e
 2122 0019 0B       		.uleb128 0xb
 2123 001a 03       		.uleb128 0x3
 2124 001b 0E       		.uleb128 0xe
 2125 001c 00       		.byte	0
 2126 001d 00       		.byte	0
 2127 001e 03       		.uleb128 0x3
 2128 001f 16       		.uleb128 0x16
 2129 0020 00       		.byte	0
 2130 0021 03       		.uleb128 0x3
 2131 0022 0E       		.uleb128 0xe
 2132 0023 3A       		.uleb128 0x3a
 2133 0024 0B       		.uleb128 0xb
 2134 0025 3B       		.uleb128 0x3b
 2135 0026 0B       		.uleb128 0xb
 2136 0027 49       		.uleb128 0x49
 2137 0028 13       		.uleb128 0x13
 2138 0029 00       		.byte	0
 2139 002a 00       		.byte	0
 2140 002b 04       		.uleb128 0x4
 2141 002c 24       		.uleb128 0x24
 2142 002d 00       		.byte	0
 2143 002e 0B       		.uleb128 0xb
 2144 002f 0B       		.uleb128 0xb
 2145 0030 3E       		.uleb128 0x3e
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 43


 2146 0031 0B       		.uleb128 0xb
 2147 0032 03       		.uleb128 0x3
 2148 0033 08       		.uleb128 0x8
 2149 0034 00       		.byte	0
 2150 0035 00       		.byte	0
 2151 0036 05       		.uleb128 0x5
 2152 0037 16       		.uleb128 0x16
 2153 0038 00       		.byte	0
 2154 0039 03       		.uleb128 0x3
 2155 003a 0E       		.uleb128 0xe
 2156 003b 3A       		.uleb128 0x3a
 2157 003c 0B       		.uleb128 0xb
 2158 003d 3B       		.uleb128 0x3b
 2159 003e 05       		.uleb128 0x5
 2160 003f 49       		.uleb128 0x49
 2161 0040 13       		.uleb128 0x13
 2162 0041 00       		.byte	0
 2163 0042 00       		.byte	0
 2164 0043 06       		.uleb128 0x6
 2165 0044 01       		.uleb128 0x1
 2166 0045 01       		.byte	0x1
 2167 0046 49       		.uleb128 0x49
 2168 0047 13       		.uleb128 0x13
 2169 0048 01       		.uleb128 0x1
 2170 0049 13       		.uleb128 0x13
 2171 004a 00       		.byte	0
 2172 004b 00       		.byte	0
 2173 004c 07       		.uleb128 0x7
 2174 004d 21       		.uleb128 0x21
 2175 004e 00       		.byte	0
 2176 004f 49       		.uleb128 0x49
 2177 0050 13       		.uleb128 0x13
 2178 0051 2F       		.uleb128 0x2f
 2179 0052 0B       		.uleb128 0xb
 2180 0053 00       		.byte	0
 2181 0054 00       		.byte	0
 2182 0055 08       		.uleb128 0x8
 2183 0056 13       		.uleb128 0x13
 2184 0057 01       		.byte	0x1
 2185 0058 0B       		.uleb128 0xb
 2186 0059 05       		.uleb128 0x5
 2187 005a 3A       		.uleb128 0x3a
 2188 005b 0B       		.uleb128 0xb
 2189 005c 3B       		.uleb128 0x3b
 2190 005d 0B       		.uleb128 0xb
 2191 005e 01       		.uleb128 0x1
 2192 005f 13       		.uleb128 0x13
 2193 0060 00       		.byte	0
 2194 0061 00       		.byte	0
 2195 0062 09       		.uleb128 0x9
 2196 0063 0D       		.uleb128 0xd
 2197 0064 00       		.byte	0
 2198 0065 03       		.uleb128 0x3
 2199 0066 0E       		.uleb128 0xe
 2200 0067 3A       		.uleb128 0x3a
 2201 0068 0B       		.uleb128 0xb
 2202 0069 3B       		.uleb128 0x3b
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 44


 2203 006a 0B       		.uleb128 0xb
 2204 006b 49       		.uleb128 0x49
 2205 006c 13       		.uleb128 0x13
 2206 006d 38       		.uleb128 0x38
 2207 006e 0B       		.uleb128 0xb
 2208 006f 00       		.byte	0
 2209 0070 00       		.byte	0
 2210 0071 0A       		.uleb128 0xa
 2211 0072 13       		.uleb128 0x13
 2212 0073 01       		.byte	0x1
 2213 0074 0B       		.uleb128 0xb
 2214 0075 0B       		.uleb128 0xb
 2215 0076 3A       		.uleb128 0x3a
 2216 0077 0B       		.uleb128 0xb
 2217 0078 3B       		.uleb128 0x3b
 2218 0079 0B       		.uleb128 0xb
 2219 007a 01       		.uleb128 0x1
 2220 007b 13       		.uleb128 0x13
 2221 007c 00       		.byte	0
 2222 007d 00       		.byte	0
 2223 007e 0B       		.uleb128 0xb
 2224 007f 0D       		.uleb128 0xd
 2225 0080 00       		.byte	0
 2226 0081 03       		.uleb128 0x3
 2227 0082 08       		.uleb128 0x8
 2228 0083 3A       		.uleb128 0x3a
 2229 0084 0B       		.uleb128 0xb
 2230 0085 3B       		.uleb128 0x3b
 2231 0086 0B       		.uleb128 0xb
 2232 0087 49       		.uleb128 0x49
 2233 0088 13       		.uleb128 0x13
 2234 0089 38       		.uleb128 0x38
 2235 008a 0B       		.uleb128 0xb
 2236 008b 00       		.byte	0
 2237 008c 00       		.byte	0
 2238 008d 0C       		.uleb128 0xc
 2239 008e 35       		.uleb128 0x35
 2240 008f 00       		.byte	0
 2241 0090 49       		.uleb128 0x49
 2242 0091 13       		.uleb128 0x13
 2243 0092 00       		.byte	0
 2244 0093 00       		.byte	0
 2245 0094 0D       		.uleb128 0xd
 2246 0095 0F       		.uleb128 0xf
 2247 0096 00       		.byte	0
 2248 0097 0B       		.uleb128 0xb
 2249 0098 0B       		.uleb128 0xb
 2250 0099 49       		.uleb128 0x49
 2251 009a 13       		.uleb128 0x13
 2252 009b 00       		.byte	0
 2253 009c 00       		.byte	0
 2254 009d 0E       		.uleb128 0xe
 2255 009e 2E       		.uleb128 0x2e
 2256 009f 01       		.byte	0x1
 2257 00a0 3F       		.uleb128 0x3f
 2258 00a1 19       		.uleb128 0x19
 2259 00a2 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 45


 2260 00a3 0E       		.uleb128 0xe
 2261 00a4 3A       		.uleb128 0x3a
 2262 00a5 0B       		.uleb128 0xb
 2263 00a6 3B       		.uleb128 0x3b
 2264 00a7 0B       		.uleb128 0xb
 2265 00a8 49       		.uleb128 0x49
 2266 00a9 13       		.uleb128 0x13
 2267 00aa 11       		.uleb128 0x11
 2268 00ab 01       		.uleb128 0x1
 2269 00ac 12       		.uleb128 0x12
 2270 00ad 06       		.uleb128 0x6
 2271 00ae 40       		.uleb128 0x40
 2272 00af 18       		.uleb128 0x18
 2273 00b0 9642     		.uleb128 0x2116
 2274 00b2 19       		.uleb128 0x19
 2275 00b3 01       		.uleb128 0x1
 2276 00b4 13       		.uleb128 0x13
 2277 00b5 00       		.byte	0
 2278 00b6 00       		.byte	0
 2279 00b7 0F       		.uleb128 0xf
 2280 00b8 34       		.uleb128 0x34
 2281 00b9 00       		.byte	0
 2282 00ba 03       		.uleb128 0x3
 2283 00bb 0E       		.uleb128 0xe
 2284 00bc 3A       		.uleb128 0x3a
 2285 00bd 0B       		.uleb128 0xb
 2286 00be 3B       		.uleb128 0x3b
 2287 00bf 0B       		.uleb128 0xb
 2288 00c0 49       		.uleb128 0x49
 2289 00c1 13       		.uleb128 0x13
 2290 00c2 02       		.uleb128 0x2
 2291 00c3 18       		.uleb128 0x18
 2292 00c4 00       		.byte	0
 2293 00c5 00       		.byte	0
 2294 00c6 10       		.uleb128 0x10
 2295 00c7 0B       		.uleb128 0xb
 2296 00c8 01       		.byte	0x1
 2297 00c9 11       		.uleb128 0x11
 2298 00ca 01       		.uleb128 0x1
 2299 00cb 12       		.uleb128 0x12
 2300 00cc 06       		.uleb128 0x6
 2301 00cd 00       		.byte	0
 2302 00ce 00       		.byte	0
 2303 00cf 11       		.uleb128 0x11
 2304 00d0 34       		.uleb128 0x34
 2305 00d1 00       		.byte	0
 2306 00d2 03       		.uleb128 0x3
 2307 00d3 08       		.uleb128 0x8
 2308 00d4 3A       		.uleb128 0x3a
 2309 00d5 0B       		.uleb128 0xb
 2310 00d6 3B       		.uleb128 0x3b
 2311 00d7 0B       		.uleb128 0xb
 2312 00d8 49       		.uleb128 0x49
 2313 00d9 13       		.uleb128 0x13
 2314 00da 02       		.uleb128 0x2
 2315 00db 18       		.uleb128 0x18
 2316 00dc 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 46


 2317 00dd 00       		.byte	0
 2318 00de 12       		.uleb128 0x12
 2319 00df 0B       		.uleb128 0xb
 2320 00e0 01       		.byte	0x1
 2321 00e1 11       		.uleb128 0x11
 2322 00e2 01       		.uleb128 0x1
 2323 00e3 12       		.uleb128 0x12
 2324 00e4 06       		.uleb128 0x6
 2325 00e5 01       		.uleb128 0x1
 2326 00e6 13       		.uleb128 0x13
 2327 00e7 00       		.byte	0
 2328 00e8 00       		.byte	0
 2329 00e9 13       		.uleb128 0x13
 2330 00ea 2E       		.uleb128 0x2e
 2331 00eb 01       		.byte	0x1
 2332 00ec 3F       		.uleb128 0x3f
 2333 00ed 19       		.uleb128 0x19
 2334 00ee 03       		.uleb128 0x3
 2335 00ef 0E       		.uleb128 0xe
 2336 00f0 3A       		.uleb128 0x3a
 2337 00f1 0B       		.uleb128 0xb
 2338 00f2 3B       		.uleb128 0x3b
 2339 00f3 0B       		.uleb128 0xb
 2340 00f4 27       		.uleb128 0x27
 2341 00f5 19       		.uleb128 0x19
 2342 00f6 49       		.uleb128 0x49
 2343 00f7 13       		.uleb128 0x13
 2344 00f8 11       		.uleb128 0x11
 2345 00f9 01       		.uleb128 0x1
 2346 00fa 12       		.uleb128 0x12
 2347 00fb 06       		.uleb128 0x6
 2348 00fc 40       		.uleb128 0x40
 2349 00fd 18       		.uleb128 0x18
 2350 00fe 9642     		.uleb128 0x2116
 2351 0100 19       		.uleb128 0x19
 2352 0101 01       		.uleb128 0x1
 2353 0102 13       		.uleb128 0x13
 2354 0103 00       		.byte	0
 2355 0104 00       		.byte	0
 2356 0105 14       		.uleb128 0x14
 2357 0106 05       		.uleb128 0x5
 2358 0107 00       		.byte	0
 2359 0108 03       		.uleb128 0x3
 2360 0109 0E       		.uleb128 0xe
 2361 010a 3A       		.uleb128 0x3a
 2362 010b 0B       		.uleb128 0xb
 2363 010c 3B       		.uleb128 0x3b
 2364 010d 0B       		.uleb128 0xb
 2365 010e 49       		.uleb128 0x49
 2366 010f 13       		.uleb128 0x13
 2367 0110 02       		.uleb128 0x2
 2368 0111 18       		.uleb128 0x18
 2369 0112 00       		.byte	0
 2370 0113 00       		.byte	0
 2371 0114 15       		.uleb128 0x15
 2372 0115 2E       		.uleb128 0x2e
 2373 0116 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 47


 2374 0117 3F       		.uleb128 0x3f
 2375 0118 19       		.uleb128 0x19
 2376 0119 03       		.uleb128 0x3
 2377 011a 0E       		.uleb128 0xe
 2378 011b 3A       		.uleb128 0x3a
 2379 011c 0B       		.uleb128 0xb
 2380 011d 3B       		.uleb128 0x3b
 2381 011e 0B       		.uleb128 0xb
 2382 011f 27       		.uleb128 0x27
 2383 0120 19       		.uleb128 0x19
 2384 0121 11       		.uleb128 0x11
 2385 0122 01       		.uleb128 0x1
 2386 0123 12       		.uleb128 0x12
 2387 0124 06       		.uleb128 0x6
 2388 0125 40       		.uleb128 0x40
 2389 0126 18       		.uleb128 0x18
 2390 0127 9642     		.uleb128 0x2116
 2391 0129 19       		.uleb128 0x19
 2392 012a 01       		.uleb128 0x1
 2393 012b 13       		.uleb128 0x13
 2394 012c 00       		.byte	0
 2395 012d 00       		.byte	0
 2396 012e 16       		.uleb128 0x16
 2397 012f 05       		.uleb128 0x5
 2398 0130 00       		.byte	0
 2399 0131 03       		.uleb128 0x3
 2400 0132 08       		.uleb128 0x8
 2401 0133 3A       		.uleb128 0x3a
 2402 0134 0B       		.uleb128 0xb
 2403 0135 3B       		.uleb128 0x3b
 2404 0136 0B       		.uleb128 0xb
 2405 0137 49       		.uleb128 0x49
 2406 0138 13       		.uleb128 0x13
 2407 0139 02       		.uleb128 0x2
 2408 013a 18       		.uleb128 0x18
 2409 013b 00       		.byte	0
 2410 013c 00       		.byte	0
 2411 013d 17       		.uleb128 0x17
 2412 013e 2E       		.uleb128 0x2e
 2413 013f 01       		.byte	0x1
 2414 0140 3F       		.uleb128 0x3f
 2415 0141 19       		.uleb128 0x19
 2416 0142 03       		.uleb128 0x3
 2417 0143 0E       		.uleb128 0xe
 2418 0144 3A       		.uleb128 0x3a
 2419 0145 0B       		.uleb128 0xb
 2420 0146 3B       		.uleb128 0x3b
 2421 0147 0B       		.uleb128 0xb
 2422 0148 27       		.uleb128 0x27
 2423 0149 19       		.uleb128 0x19
 2424 014a 11       		.uleb128 0x11
 2425 014b 01       		.uleb128 0x1
 2426 014c 12       		.uleb128 0x12
 2427 014d 06       		.uleb128 0x6
 2428 014e 40       		.uleb128 0x40
 2429 014f 18       		.uleb128 0x18
 2430 0150 9742     		.uleb128 0x2117
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 48


 2431 0152 19       		.uleb128 0x19
 2432 0153 01       		.uleb128 0x1
 2433 0154 13       		.uleb128 0x13
 2434 0155 00       		.byte	0
 2435 0156 00       		.byte	0
 2436 0157 18       		.uleb128 0x18
 2437 0158 34       		.uleb128 0x34
 2438 0159 00       		.byte	0
 2439 015a 03       		.uleb128 0x3
 2440 015b 0E       		.uleb128 0xe
 2441 015c 3A       		.uleb128 0x3a
 2442 015d 0B       		.uleb128 0xb
 2443 015e 3B       		.uleb128 0x3b
 2444 015f 05       		.uleb128 0x5
 2445 0160 49       		.uleb128 0x49
 2446 0161 13       		.uleb128 0x13
 2447 0162 3F       		.uleb128 0x3f
 2448 0163 19       		.uleb128 0x19
 2449 0164 3C       		.uleb128 0x3c
 2450 0165 19       		.uleb128 0x19
 2451 0166 00       		.byte	0
 2452 0167 00       		.byte	0
 2453 0168 19       		.uleb128 0x19
 2454 0169 34       		.uleb128 0x34
 2455 016a 00       		.byte	0
 2456 016b 03       		.uleb128 0x3
 2457 016c 0E       		.uleb128 0xe
 2458 016d 3A       		.uleb128 0x3a
 2459 016e 0B       		.uleb128 0xb
 2460 016f 3B       		.uleb128 0x3b
 2461 0170 0B       		.uleb128 0xb
 2462 0171 49       		.uleb128 0x49
 2463 0172 13       		.uleb128 0x13
 2464 0173 3F       		.uleb128 0x3f
 2465 0174 19       		.uleb128 0x19
 2466 0175 02       		.uleb128 0x2
 2467 0176 18       		.uleb128 0x18
 2468 0177 00       		.byte	0
 2469 0178 00       		.byte	0
 2470 0179 1A       		.uleb128 0x1a
 2471 017a 21       		.uleb128 0x21
 2472 017b 00       		.byte	0
 2473 017c 49       		.uleb128 0x49
 2474 017d 13       		.uleb128 0x13
 2475 017e 2F       		.uleb128 0x2f
 2476 017f 05       		.uleb128 0x5
 2477 0180 00       		.byte	0
 2478 0181 00       		.byte	0
 2479 0182 1B       		.uleb128 0x1b
 2480 0183 34       		.uleb128 0x34
 2481 0184 00       		.byte	0
 2482 0185 03       		.uleb128 0x3
 2483 0186 08       		.uleb128 0x8
 2484 0187 3A       		.uleb128 0x3a
 2485 0188 0B       		.uleb128 0xb
 2486 0189 3B       		.uleb128 0x3b
 2487 018a 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 49


 2488 018b 49       		.uleb128 0x49
 2489 018c 13       		.uleb128 0x13
 2490 018d 3F       		.uleb128 0x3f
 2491 018e 19       		.uleb128 0x19
 2492 018f 02       		.uleb128 0x2
 2493 0190 18       		.uleb128 0x18
 2494 0191 00       		.byte	0
 2495 0192 00       		.byte	0
 2496 0193 00       		.byte	0
 2497              		.section	.debug_aranges,"",%progbits
 2498 0000 54000000 		.4byte	0x54
 2499 0004 0200     		.2byte	0x2
 2500 0006 00000000 		.4byte	.Ldebug_info0
 2501 000a 04       		.byte	0x4
 2502 000b 00       		.byte	0
 2503 000c 0000     		.2byte	0
 2504 000e 0000     		.2byte	0
 2505 0010 00000000 		.4byte	.LFB64
 2506 0014 34010000 		.4byte	.LFE64-.LFB64
 2507 0018 00000000 		.4byte	.LFB65
 2508 001c 98010000 		.4byte	.LFE65-.LFB65
 2509 0020 00000000 		.4byte	.LFB66
 2510 0024 C4000000 		.4byte	.LFE66-.LFB66
 2511 0028 00000000 		.4byte	.LFB67
 2512 002c 74000000 		.4byte	.LFE67-.LFB67
 2513 0030 00000000 		.4byte	.LFB68
 2514 0034 28000000 		.4byte	.LFE68-.LFB68
 2515 0038 00000000 		.4byte	.LFB69
 2516 003c 84000000 		.4byte	.LFE69-.LFB69
 2517 0040 00000000 		.4byte	.LFB70
 2518 0044 BC000000 		.4byte	.LFE70-.LFB70
 2519 0048 00000000 		.4byte	.LFB71
 2520 004c 04010000 		.4byte	.LFE71-.LFB71
 2521 0050 00000000 		.4byte	0
 2522 0054 00000000 		.4byte	0
 2523              		.section	.debug_ranges,"",%progbits
 2524              	.Ldebug_ranges0:
 2525 0000 00000000 		.4byte	.LFB64
 2526 0004 34010000 		.4byte	.LFE64
 2527 0008 00000000 		.4byte	.LFB65
 2528 000c 98010000 		.4byte	.LFE65
 2529 0010 00000000 		.4byte	.LFB66
 2530 0014 C4000000 		.4byte	.LFE66
 2531 0018 00000000 		.4byte	.LFB67
 2532 001c 74000000 		.4byte	.LFE67
 2533 0020 00000000 		.4byte	.LFB68
 2534 0024 28000000 		.4byte	.LFE68
 2535 0028 00000000 		.4byte	.LFB69
 2536 002c 84000000 		.4byte	.LFE69
 2537 0030 00000000 		.4byte	.LFB70
 2538 0034 BC000000 		.4byte	.LFE70
 2539 0038 00000000 		.4byte	.LFB71
 2540 003c 04010000 		.4byte	.LFE71
 2541 0040 00000000 		.4byte	0
 2542 0044 00000000 		.4byte	0
 2543              		.section	.debug_line,"",%progbits
 2544              	.Ldebug_line0:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 50


 2545 0000 E0020000 		.section	.debug_str,"MS",%progbits,1
 2545      02009B01 
 2545      00000201 
 2545      FB0E0D00 
 2545      01010101 
 2546              	.LASF39:
 2547 0000 6D6F6465 		.ascii	"model_id\000"
 2547      6C5F6964 
 2547      00
 2548              	.LASF99:
 2549 0009 616C6172 		.ascii	"alarmMeasure\000"
 2549      6D4D6561 
 2549      73757265 
 2549      00
 2550              	.LASF38:
 2551 0016 73696D5F 		.ascii	"sim_id\000"
 2551      696400
 2552              	.LASF25:
 2553 001d 766F6C74 		.ascii	"voltage_solar\000"
 2553      6167655F 
 2553      736F6C61 
 2553      7200
 2554              	.LASF67:
 2555 002b 7379735F 		.ascii	"sys_settings_t\000"
 2555      73657474 
 2555      696E6773 
 2555      5F7400
 2556              	.LASF58:
 2557 003a 63757272 		.ascii	"currentCountDownValue\000"
 2557      656E7443 
 2557      6F756E74 
 2557      446F776E 
 2557      56616C75 
 2558              	.LASF70:
 2559 0050 6F666673 		.ascii	"offset\000"
 2559      657400
 2560              	.LASF73:
 2561 0057 70726573 		.ascii	"pressure_sensor_readings\000"
 2561      73757265 
 2561      5F73656E 
 2561      736F725F 
 2561      72656164 
 2562              	.LASF80:
 2563 0070 6D656469 		.ascii	"median\000"
 2563      616E00
 2564              	.LASF57:
 2565 0077 636F756E 		.ascii	"countDownValue\000"
 2565      74446F77 
 2565      6E56616C 
 2565      756500
 2566              	.LASF2:
 2567 0086 73686F72 		.ascii	"short int\000"
 2567      7420696E 
 2567      7400
 2568              	.LASF94:
 2569 0090 68747470 		.ascii	"http_request\000"
 2569      5F726571 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 51


 2569      75657374 
 2569      00
 2570              	.LASF19:
 2571 009d 73697A65 		.ascii	"sizetype\000"
 2571      74797065 
 2571      00
 2572              	.LASF65:
 2573 00a6 65705F68 		.ascii	"ep_host\000"
 2573      6F737400 
 2574              	.LASF93:
 2575 00ae 696E626F 		.ascii	"inbox\000"
 2575      7800
 2576              	.LASF106:
 2577 00b4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2577      43313120 
 2577      352E342E 
 2577      31203230 
 2577      31363036 
 2578 00e7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2578      20726576 
 2578      6973696F 
 2578      6E203233 
 2578      37373135 
 2579 011a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2579      66756E63 
 2579      74696F6E 
 2579      2D736563 
 2579      74696F6E 
 2580              	.LASF76:
 2581 0142 73776170 		.ascii	"swap32\000"
 2581      333200
 2582              	.LASF88:
 2583 0149 64617461 		.ascii	"data\000"
 2583      00
 2584              	.LASF107:
 2585 014e 766F6C74 		.ascii	"voltages.c\000"
 2585      61676573 
 2585      2E6300
 2586              	.LASF27:
 2587 0159 766F6C74 		.ascii	"voltage_pressure\000"
 2587      6167655F 
 2587      70726573 
 2587      73757265 
 2587      00
 2588              	.LASF69:
 2589 016a 6368616E 		.ascii	"channels\000"
 2589      6E656C73 
 2589      00
 2590              	.LASF44:
 2591 0173 65636E6F 		.ascii	"ecno\000"
 2591      00
 2592              	.LASF104:
 2593 0178 616C6172 		.ascii	"alarmAppLED\000"
 2593      6D417070 
 2593      4C454400 
 2594              	.LASF35:
 2595 0184 76616C75 		.ascii	"value\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 52


 2595      6500
 2596              	.LASF24:
 2597 018a 766F6C74 		.ascii	"voltage_battery\000"
 2597      6167655F 
 2597      62617474 
 2597      65727900 
 2598              	.LASF86:
 2599 019a 64617461 		.ascii	"dataPointsInStack\000"
 2599      506F696E 
 2599      7473496E 
 2599      53746163 
 2599      6B00
 2600              	.LASF11:
 2601 01ac 75696E74 		.ascii	"uint8\000"
 2601      3800
 2602              	.LASF74:
 2603 01b2 70726573 		.ascii	"pressure\000"
 2603      73757265 
 2603      00
 2604              	.LASF43:
 2605 01bb 72736370 		.ascii	"rscp\000"
 2605      00
 2606              	.LASF36:
 2607 01c0 74696D65 		.ascii	"timeStamp\000"
 2607      5374616D 
 2607      7000
 2608              	.LASF72:
 2609 01ca 766F6C74 		.ascii	"voltage_take_readings\000"
 2609      6167655F 
 2609      74616B65 
 2609      5F726561 
 2609      64696E67 
 2610              	.LASF87:
 2611 01e0 64617461 		.ascii	"dataPointsInStackDesired\000"
 2611      506F696E 
 2611      7473496E 
 2611      53746163 
 2611      6B446573 
 2612              	.LASF15:
 2613 01f9 666C6F61 		.ascii	"float\000"
 2613      7400
 2614              	.LASF81:
 2615 01ff 766F6C74 		.ascii	"voltages_test\000"
 2615      61676573 
 2615      5F746573 
 2615      7400
 2616              	.LASF14:
 2617 020d 696E7433 		.ascii	"int32\000"
 2617      3200
 2618              	.LASF6:
 2619 0213 6C6F6E67 		.ascii	"long long int\000"
 2619      206C6F6E 
 2619      6720696E 
 2619      7400
 2620              	.LASF13:
 2621 0221 696E7431 		.ascii	"int16\000"
 2621      3600
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 53


 2622              	.LASF17:
 2623 0227 63686172 		.ascii	"char\000"
 2623      00
 2624              	.LASF22:
 2625 022c 72656173 		.ascii	"reason\000"
 2625      6F6E00
 2626              	.LASF4:
 2627 0233 6C6F6E67 		.ascii	"long int\000"
 2627      20696E74 
 2627      00
 2628              	.LASF85:
 2629 023c 62756666 		.ascii	"buffer_overflow\000"
 2629      65725F6F 
 2629      76657266 
 2629      6C6F7700 
 2630              	.LASF68:
 2631 024c 766F6C74 		.ascii	"voltage\000"
 2631      61676500 
 2632              	.LASF62:
 2633 0254 6D6F6465 		.ascii	"modem_info\000"
 2633      6D5F696E 
 2633      666F00
 2634              	.LASF30:
 2635 025f 70726573 		.ascii	"pressure_voltage_on\000"
 2635      73757265 
 2635      5F766F6C 
 2635      74616765 
 2635      5F6F6E00 
 2636              	.LASF75:
 2637 0273 736F7274 		.ascii	"sort32\000"
 2637      333200
 2638              	.LASF33:
 2639 027a 70726573 		.ascii	"pressure_depth\000"
 2639      73757265 
 2639      5F646570 
 2639      746800
 2640              	.LASF61:
 2641 0289 616C6172 		.ascii	"alarm\000"
 2641      6D00
 2642              	.LASF52:
 2643 028f 6D656173 		.ascii	"measure_time\000"
 2643      7572655F 
 2643      74696D65 
 2643      00
 2644              	.LASF101:
 2645 029c 616C6172 		.ascii	"alarmSync\000"
 2645      6D53796E 
 2645      6300
 2646              	.LASF18:
 2647 02a6 6C6F6E67 		.ascii	"long double\000"
 2647      20646F75 
 2647      626C6500 
 2648              	.LASF1:
 2649 02b2 756E7369 		.ascii	"unsigned char\000"
 2649      676E6564 
 2649      20636861 
 2649      7200
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 54


 2650              	.LASF83:
 2651 02c0 70726573 		.ascii	"pressure_sensor_test\000"
 2651      73757265 
 2651      5F73656E 
 2651      736F725F 
 2651      74657374 
 2652              	.LASF28:
 2653 02d5 76616C69 		.ascii	"valid\000"
 2653      6400
 2654              	.LASF90:
 2655 02db 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2655      6D5F7374 
 2655      6172745F 
 2655      74696D65 
 2655      5F737461 
 2656              	.LASF56:
 2657 02f2 75706461 		.ascii	"updatable_parameters_t\000"
 2657      7461626C 
 2657      655F7061 
 2657      72616D65 
 2657      74657273 
 2658              	.LASF78:
 2659 0309 66696E64 		.ascii	"find_median32\000"
 2659      5F6D6564 
 2659      69616E33 
 2659      3200
 2660              	.LASF0:
 2661 0317 7369676E 		.ascii	"signed char\000"
 2661      65642063 
 2661      68617200 
 2662              	.LASF7:
 2663 0323 6C6F6E67 		.ascii	"long long unsigned int\000"
 2663      206C6F6E 
 2663      6720756E 
 2663      7369676E 
 2663      65642069 
 2664              	.LASF98:
 2665 033a 73797374 		.ascii	"system_settings\000"
 2665      656D5F73 
 2665      65747469 
 2665      6E677300 
 2666              	.LASF63:
 2667 034a 63686970 		.ascii	"chip_uniqueId\000"
 2667      5F756E69 
 2667      71756549 
 2667      6400
 2668              	.LASF8:
 2669 0358 756E7369 		.ascii	"unsigned int\000"
 2669      676E6564 
 2669      20696E74 
 2669      00
 2670              	.LASF37:
 2671 0365 6B65795F 		.ascii	"key_value_t\000"
 2671      76616C75 
 2671      655F7400 
 2672              	.LASF42:
 2673 0371 72786C65 		.ascii	"rxlev\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 55


 2673      7600
 2674              	.LASF53:
 2675 0377 73796E63 		.ascii	"sync_time\000"
 2675      5F74696D 
 2675      6500
 2676              	.LASF91:
 2677 0381 6D6F6465 		.ascii	"modem_stats\000"
 2677      6D5F7374 
 2677      61747300 
 2678              	.LASF100:
 2679 038d 74696D65 		.ascii	"timeToMeasure\000"
 2679      546F4D65 
 2679      61737572 
 2679      6500
 2680              	.LASF34:
 2681 039b 70726573 		.ascii	"pressure_t\000"
 2681      73757265 
 2681      5F7400
 2682              	.LASF51:
 2683 03a6 73696D5F 		.ascii	"sim_type\000"
 2683      74797065 
 2683      00
 2684              	.LASF64:
 2685 03af 7379735F 		.ascii	"sys_info_t\000"
 2685      696E666F 
 2685      5F7400
 2686              	.LASF3:
 2687 03ba 73686F72 		.ascii	"short unsigned int\000"
 2687      7420756E 
 2687      7369676E 
 2687      65642069 
 2687      6E7400
 2688              	.LASF47:
 2689 03cd 74696D65 		.ascii	"time_to_network_connect\000"
 2689      5F746F5F 
 2689      6E657477 
 2689      6F726B5F 
 2689      636F6E6E 
 2690              	.LASF21:
 2691 03e5 73746174 		.ascii	"status\000"
 2691      757300
 2692              	.LASF31:
 2693 03ec 70726573 		.ascii	"pressure_voltage_off\000"
 2693      73757265 
 2693      5F766F6C 
 2693      74616765 
 2693      5F6F6666 
 2694              	.LASF97:
 2695 0401 73797374 		.ascii	"system_info\000"
 2695      656D5F69 
 2695      6E666F00 
 2696              	.LASF48:
 2697 040d 74696D65 		.ascii	"time_to_acquire_ip\000"
 2697      5F746F5F 
 2697      61637175 
 2697      6972655F 
 2697      697000
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 56


 2698              	.LASF84:
 2699 0420 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2699      52784275 
 2699      66666572 
 2699      00
 2700              	.LASF40:
 2701 042d 696D6569 		.ascii	"imei\000"
 2701      00
 2702              	.LASF29:
 2703 0432 766F6C74 		.ascii	"voltage_t\000"
 2703      6167655F 
 2703      7400
 2704              	.LASF10:
 2705 043c 696E7433 		.ascii	"int32_t\000"
 2705      325F7400 
 2706              	.LASF49:
 2707 0444 6D6F6465 		.ascii	"modem_stats_t\000"
 2707      6D5F7374 
 2707      6174735F 
 2707      7400
 2708              	.LASF89:
 2709 0452 6D6F6465 		.ascii	"modem_state\000"
 2709      6D5F7374 
 2709      61746500 
 2710              	.LASF55:
 2711 045e 5F426F6F 		.ascii	"_Bool\000"
 2711      6C00
 2712              	.LASF103:
 2713 0464 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2713      546F5379 
 2713      636E5265 
 2713      6D6F7465 
 2713      50617261 
 2714              	.LASF46:
 2715 047b 72737270 		.ascii	"rsrp\000"
 2715      00
 2716              	.LASF82:
 2717 0480 74657374 		.ascii	"test\000"
 2717      00
 2718              	.LASF45:
 2719 0485 72737271 		.ascii	"rsrq\000"
 2719      00
 2720              	.LASF12:
 2721 048a 75696E74 		.ascii	"uint16\000"
 2721      313600
 2722              	.LASF96:
 2723 0491 68747470 		.ascii	"http_route\000"
 2723      5F726F75 
 2723      746500
 2724              	.LASF5:
 2725 049c 6C6F6E67 		.ascii	"long unsigned int\000"
 2725      20756E73 
 2725      69676E65 
 2725      6420696E 
 2725      7400
 2726              	.LASF16:
 2727 04ae 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 57


 2727      6C6500
 2728              	.LASF79:
 2729 04b5 61727261 		.ascii	"array\000"
 2729      7900
 2730              	.LASF108:
 2731 04bb 433A5C6E 		.ascii	"C:\\notoriOS\\notoriOS.cydsn\000"
 2731      6F746F72 
 2731      694F535C 
 2731      6E6F746F 
 2731      72694F53 
 2732              	.LASF54:
 2733 04d6 64656275 		.ascii	"debug_level\000"
 2733      675F6C65 
 2733      76656C00 
 2734              	.LASF41:
 2735 04e2 6D6F6465 		.ascii	"modem_info_t\000"
 2735      6D5F696E 
 2735      666F5F74 
 2735      00
 2736              	.LASF59:
 2737 04ef 636F756E 		.ascii	"countDownType\000"
 2737      74446F77 
 2737      6E547970 
 2737      6500
 2738              	.LASF9:
 2739 04fd 5F5F696E 		.ascii	"__int32_t\000"
 2739      7433325F 
 2739      7400
 2740              	.LASF105:
 2741 0507 74696D65 		.ascii	"timeToAppLED\000"
 2741      546F4170 
 2741      704C4544 
 2741      00
 2742              	.LASF23:
 2743 0514 74657374 		.ascii	"test_t\000"
 2743      5F7400
 2744              	.LASF20:
 2745 051b 74657374 		.ascii	"test_name\000"
 2745      5F6E616D 
 2745      6500
 2746              	.LASF60:
 2747 0525 636F756E 		.ascii	"countDownResetCondition\000"
 2747      74446F77 
 2747      6E526573 
 2747      6574436F 
 2747      6E646974 
 2748              	.LASF92:
 2749 053d 75706461 		.ascii	"updatable_parameters\000"
 2749      7461626C 
 2749      655F7061 
 2749      72616D65 
 2749      74657273 
 2750              	.LASF66:
 2751 0552 65705F70 		.ascii	"ep_port\000"
 2751      6F727400 
 2752              	.LASF77:
 2753 055a 70726573 		.ascii	"pressure_calculations\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccZLUfXv.s 			page 58


 2753      73757265 
 2753      5F63616C 
 2753      63756C61 
 2753      74696F6E 
 2754              	.LASF95:
 2755 0570 68747470 		.ascii	"http_body\000"
 2755      5F626F64 
 2755      7900
 2756              	.LASF50:
 2757 057a 6E6F6465 		.ascii	"node_type\000"
 2757      5F747970 
 2757      6500
 2758              	.LASF26:
 2759 0584 766F6C74 		.ascii	"voltage_charge_current\000"
 2759      6167655F 
 2759      63686172 
 2759      67655F63 
 2759      75727265 
 2760              	.LASF102:
 2761 059b 74696D65 		.ascii	"timeToSync\000"
 2761      546F5379 
 2761      6E6300
 2762              	.LASF32:
 2763 05a6 70726573 		.ascii	"pressure_current\000"
 2763      73757265 
 2763      5F637572 
 2763      72656E74 
 2763      00
 2764              	.LASF71:
 2765 05b7 72656164 		.ascii	"readings\000"
 2765      696E6773 
 2765      00
 2766              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
