ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"voltages.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	level_sensor_inbox,100,4
  20              		.comm	level_sensor_enabled,1,1
  21              		.comm	downstream_level_sensor_inbox,100,4
  22              		.comm	downstream_level_sensor_enabled,1,1
  23              		.comm	valve_diameter,4,4
  24              		.comm	valve_type,10,4
  25              		.comm	valve_enabled,1,1
  26              		.comm	valve_inbox,100,4
  27              		.comm	buffer_overflow,1,1
  28              		.comm	dataPointsInStack,2,2
  29              		.comm	dataPointsInStackDesired,2,2
  30              		.comm	data,6600,4
  31              		.comm	modem_state,1,1
  32              		.comm	modem_start_time_stamp,4,4
  33              		.comm	modem_info,60,4
  34              		.comm	modem_stats,32,4
  35              		.comm	updatable_parameters,9,4
  36              		.syntax unified
  37              		.global _printf_float
  38              		.thumb
  39              		.syntax unified
  40              		.comm	App_LED_enabled,1,1
  41              		.comm	app_led_inbox,100,4
  42              		.comm	http_request,10000,4
  43              		.comm	http_body,10000,4
  44              		.comm	http_route,200,4
  45              		.comm	system_info,28,4
  46              		.comm	system_settings,104,4
  47              		.comm	alarmMeasure,6,4
  48              		.comm	timeToMeasure,1,1
  49              		.comm	alarmSync,6,4
  50              		.comm	timeToSync,1,1
  51              		.comm	timeToSycnRemoteParams,1,1
  52              		.comm	hey,1,1
  53              		.comm	alarmAppLED,6,4
  54              		.comm	timeToAppLED,1,1
  55              		.comm	alarmLevelSensor,6,4
  56              		.comm	timetoLevelSensor,1,1
  57              		.comm	alarmDownstreamLevelSensor,6,4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 2


  58              		.comm	timetoDownstreamLevelSensor,1,1
  59              		.comm	alarmValve,6,4
  60              		.comm	timeToValve,1,1
  61              		.global	__aeabi_f2d
  62              		.global	__aeabi_dsub
  63              		.global	__aeabi_d2f
  64              		.global	__aeabi_fmul
  65              		.global	__aeabi_fsub
  66              		.section	.text.voltage_take_readings,"ax",%progbits
  67              		.align	2
  68              		.global	voltage_take_readings
  69              		.thumb
  70              		.thumb_func
  71              		.type	voltage_take_readings, %function
  72              	voltage_take_readings:
  73              	.LFB64:
  74              		.file 1 "voltages.c"
   1:voltages.c    **** #include "voltages.h"
   2:voltages.c    **** #include "notoriOS.h"
   3:voltages.c    **** #include <math.h>
   4:voltages.c    **** 
   5:voltages.c    **** // Function to take voltage readings and save them in the voltage_t datatype
   6:voltages.c    **** voltage_t voltage_take_readings(){
  75              		.loc 1 6 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 104
  78              		@ frame_needed = 1, uses_anonymous_args = 0
  79 0000 B0B5     		push	{r4, r5, r7, lr}
  80              		.cfi_def_cfa_offset 16
  81              		.cfi_offset 4, -16
  82              		.cfi_offset 5, -12
  83              		.cfi_offset 7, -8
  84              		.cfi_offset 14, -4
  85 0002 9AB0     		sub	sp, sp, #104
  86              		.cfi_def_cfa_offset 120
  87 0004 00AF     		add	r7, sp, #0
  88              		.cfi_def_cfa_register 7
  89 0006 7860     		str	r0, [r7, #4]
   7:voltages.c    ****     
   8:voltages.c    ****     voltage_t voltage;  // Create variable voltage of data structure voltage_t.
   9:voltages.c    ****      
  10:voltages.c    **** 	Battery_Voltage_Enable_Write(ON);   // Flip on the Battery Voltage ADC pin high (turns it on).
  90              		.loc 1 10 0
  91 0008 0120     		movs	r0, #1
  92 000a FFF7FEFF 		bl	Battery_Voltage_Enable_Write
  11:voltages.c    ****     Pressure_Voltage_Enable_Write(ON);  // Flip on the Pressure Transducer Voltage ADC pin high (tu
  93              		.loc 1 11 0
  94 000e 0120     		movs	r0, #1
  95 0010 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  12:voltages.c    ****     
  13:voltages.c    **** 	CyDelay(10u);	    // 10 seconds delay to give time to flip on ADC pin.
  96              		.loc 1 13 0
  97 0014 0A20     		movs	r0, #10
  98 0016 FFF7FEFF 		bl	CyDelay
  14:voltages.c    ****     
  15:voltages.c    ****     AMux_Start();       // Start the Analog Multiplexer
  99              		.loc 1 15 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 3


 100 001a FFF7FEFF 		bl	AMux_Start
  16:voltages.c    ****  
  17:voltages.c    ****     ADC_RestoreConfig();// Have to call this and save (See below). Otherwise ADC won't work through
 101              		.loc 1 17 0
 102 001e FFF7FEFF 		bl	ADC_RestoreConfig
  18:voltages.c    ****     
  19:voltages.c    ****     ADC_Start();        // Start the ADC
 103              		.loc 1 19 0
 104 0022 FFF7FEFF 		bl	ADC_Start
 105              	.LBB2:
  20:voltages.c    ****     
  21:voltages.c    ****     float channels[AMux_CHANNELS];
  22:voltages.c    ****     
  23:voltages.c    ****     for(uint8 c = 0; c< AMux_CHANNELS + 1; c++) // Sweep the MUX Channels
 106              		.loc 1 23 0
 107 0026 0023     		movs	r3, #0
 108 0028 87F86730 		strb	r3, [r7, #103]
 109 002c 34E0     		b	.L2
 110              	.L5:
 111              	.LBB3:
  24:voltages.c    ****     {
  25:voltages.c    ****         
  26:voltages.c    ****         int32 readings[N_SAMPLES];  // Creates new int32 array called readings of size N_SAMPLES = 
  27:voltages.c    ****         
  28:voltages.c    ****         AMux_Select(c); // This functions first disconnects all channels then connects the given ch
 112              		.loc 1 28 0
 113 002e 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 114 0032 1846     		mov	r0, r3
 115 0034 FFF7FEFF 		bl	AMux_Select
 116              	.LBB4:
  29:voltages.c    ****         
  30:voltages.c    ****         for(uint16 i=0; i< N_SAMPLES; i++){
 117              		.loc 1 30 0
 118 0038 0023     		movs	r3, #0
 119 003a A7F86430 		strh	r3, [r7, #100]	@ movhi
 120 003e 0FE0     		b	.L3
 121              	.L4:
  31:voltages.c    ****             
  32:voltages.c    ****             readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the
 122              		.loc 1 32 0 discriminator 3
 123 0040 B7F86440 		ldrh	r4, [r7, #100]
 124 0044 FFF7FEFF 		bl	ADC_Read32
 125 0048 0246     		mov	r2, r0
 126 004a A300     		lsls	r3, r4, #2
 127 004c 07F16801 		add	r1, r7, #104
 128 0050 0B44     		add	r3, r3, r1
 129 0052 43F8602C 		str	r2, [r3, #-96]
  30:voltages.c    ****             
 130              		.loc 1 30 0 discriminator 3
 131 0056 B7F86430 		ldrh	r3, [r7, #100]
 132 005a 0133     		adds	r3, r3, #1
 133 005c A7F86430 		strh	r3, [r7, #100]	@ movhi
 134              	.L3:
  30:voltages.c    ****             
 135              		.loc 1 30 0 is_stmt 0 discriminator 1
 136 0060 B7F86430 		ldrh	r3, [r7, #100]
 137 0064 0A2B     		cmp	r3, #10
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 4


 138 0066 EBD9     		bls	.L4
 139              	.LBE4:
  33:voltages.c    ****         }
  34:voltages.c    ****         
  35:voltages.c    ****         // Converts the ADC output to Volts as a floating point number. 
  36:voltages.c    ****         // Get the median of readings and return that.
  37:voltages.c    ****         channels[c] = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Get median of re
 140              		.loc 1 37 0 is_stmt 1 discriminator 2
 141 0068 97F86740 		ldrb	r4, [r7, #103]	@ zero_extendqisi2
 142 006c 07F10803 		add	r3, r7, #8
 143 0070 0B21     		movs	r1, #11
 144 0072 1846     		mov	r0, r3
 145 0074 FFF7FEFF 		bl	find_median32
 146 0078 0346     		mov	r3, r0
 147 007a 1846     		mov	r0, r3
 148 007c FFF7FEFF 		bl	ADC_CountsTo_Volts
 149 0080 0246     		mov	r2, r0
 150 0082 A300     		lsls	r3, r4, #2
 151 0084 07F16801 		add	r1, r7, #104
 152 0088 0B44     		add	r3, r3, r1
 153 008a 43F8342C 		str	r2, [r3, #-52]	@ float
 154              	.LBE3:
  23:voltages.c    ****     {
 155              		.loc 1 23 0 discriminator 2
 156 008e 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 157 0092 0133     		adds	r3, r3, #1
 158 0094 87F86730 		strb	r3, [r7, #103]
 159              	.L2:
  23:voltages.c    ****     {
 160              		.loc 1 23 0 is_stmt 0 discriminator 1
 161 0098 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 162 009c 062B     		cmp	r3, #6
 163 009e C6D9     		bls	.L5
 164              	.LBE2:
  38:voltages.c    ****     }
  39:voltages.c    ****     
  40:voltages.c    ****     AMux_Stop();        // Disconnects all Analog Multiplex channels.
 165              		.loc 1 40 0 is_stmt 1
 166 00a0 FFF7FEFF 		bl	AMux_Start
  41:voltages.c    ****     
  42:voltages.c    ****     ADC_SaveConfig();   // Save the register configuration which are not retention.
 167              		.loc 1 42 0
 168 00a4 FFF7FEFF 		bl	ADC_SaveConfig
  43:voltages.c    ****     
  44:voltages.c    ****     ADC_Stop();         // Stops and powers down the ADC component and the internal clock if the ex
 169              		.loc 1 44 0
 170 00a8 FFF7FEFF 		bl	ADC_Stop
  45:voltages.c    ****     
  46:voltages.c    ****     Battery_Voltage_Enable_Write(OFF);  // Pulls Battery ADC pin low (turns it off).
 171              		.loc 1 46 0
 172 00ac 0020     		movs	r0, #0
 173 00ae FFF7FEFF 		bl	Battery_Voltage_Enable_Write
  47:voltages.c    ****     Pressure_Voltage_Enable_Write(OFF);  // Pulls Pressure Transducer ADC pin low (turns it off).
 174              		.loc 1 47 0
 175 00b2 0020     		movs	r0, #0
 176 00b4 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  48:voltages.c    ****     
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 5


  49:voltages.c    ****     float offset = channels[0] - 1.024; // Should be 1.024 exactly. BK saw an offset when measuring
 177              		.loc 1 49 0
 178 00b8 7B6B     		ldr	r3, [r7, #52]	@ float
 179 00ba 1846     		mov	r0, r3
 180 00bc FFF7FEFF 		bl	__aeabi_f2d
 181 00c0 19A3     		adr	r3, .L7
 182 00c2 D3E90023 		ldrd	r2, [r3]
 183 00c6 FFF7FEFF 		bl	__aeabi_dsub
 184 00ca 0346     		mov	r3, r0
 185 00cc 0C46     		mov	r4, r1
 186 00ce 1846     		mov	r0, r3
 187 00d0 2146     		mov	r1, r4
 188 00d2 FFF7FEFF 		bl	__aeabi_d2f
 189 00d6 0346     		mov	r3, r0
 190 00d8 3B66     		str	r3, [r7, #96]	@ float
  50:voltages.c    ****     voltage.voltage_battery = (channels[ADC_MUX_VBAT] * 11) - offset; // Voltage divider is (1/10) 
 191              		.loc 1 50 0
 192 00da BB6B     		ldr	r3, [r7, #56]	@ float
 193 00dc 1449     		ldr	r1, .L7+8
 194 00de 1846     		mov	r0, r3
 195 00e0 FFF7FEFF 		bl	__aeabi_fmul
 196 00e4 0346     		mov	r3, r0
 197 00e6 396E     		ldr	r1, [r7, #96]	@ float
 198 00e8 1846     		mov	r0, r3
 199 00ea FFF7FEFF 		bl	__aeabi_fsub
 200 00ee 0346     		mov	r3, r0
 201 00f0 FB64     		str	r3, [r7, #76]	@ float
  51:voltages.c    ****     voltage.voltage_solar = channels[ADC_MUX_VSOL] - offset; // Just want voltage here
 202              		.loc 1 51 0
 203 00f2 FB6B     		ldr	r3, [r7, #60]	@ float
 204 00f4 396E     		ldr	r1, [r7, #96]	@ float
 205 00f6 1846     		mov	r0, r3
 206 00f8 FFF7FEFF 		bl	__aeabi_fsub
 207 00fc 0346     		mov	r3, r0
 208 00fe 3B65     		str	r3, [r7, #80]	@ float
  52:voltages.c    ****     // Voltage across sensor resistor gives 100mV drop for max current, which is 800mA
  53:voltages.c    ****     //voltage.voltage_charge_current = 0.1*(channels[ADC_MUX_CHRG] - voltage.voltage_battery);
  54:voltages.c    ****     voltage.voltage_pressure = channels[ADC_MUX_PRTRANS]; // Pressure transducer reading
 209              		.loc 1 54 0
 210 0100 3B6C     		ldr	r3, [r7, #64]	@ float
 211 0102 BB65     		str	r3, [r7, #88]	@ float
  55:voltages.c    **** 
  56:voltages.c    ****     voltage.valid = 1;
 212              		.loc 1 56 0
 213 0104 0123     		movs	r3, #1
 214 0106 87F85C30 		strb	r3, [r7, #92]
  57:voltages.c    ****     
  58:voltages.c    ****     return voltage;
 215              		.loc 1 58 0
 216 010a 7B68     		ldr	r3, [r7, #4]
 217 010c 1D46     		mov	r5, r3
 218 010e 07F14C04 		add	r4, r7, #76
 219 0112 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 220 0114 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 221 0116 2368     		ldr	r3, [r4]
 222 0118 2B60     		str	r3, [r5]
  59:voltages.c    **** }
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 6


 223              		.loc 1 59 0
 224 011a 7868     		ldr	r0, [r7, #4]
 225 011c 6837     		adds	r7, r7, #104
 226              		.cfi_def_cfa_offset 16
 227 011e BD46     		mov	sp, r7
 228              		.cfi_def_cfa_register 13
 229              		@ sp needed
 230 0120 B0BD     		pop	{r4, r5, r7, pc}
 231              	.L8:
 232 0122 00BFAFF3 		.align	3
 232      0080
 233              	.L7:
 234 0128 FCA9F1D2 		.word	-755914244
 235 012c 4D62F03F 		.word	1072718413
 236 0130 00003041 		.word	1093664768
 237              		.cfi_endproc
 238              	.LFE64:
 239              		.size	voltage_take_readings, .-voltage_take_readings
 240              		.global	__aeabi_fdiv
 241              		.global	__aeabi_ddiv
 242              		.global	__aeabi_dmul
 243              		.section	.text.pressure_sensor_readings,"ax",%progbits
 244              		.align	2
 245              		.global	pressure_sensor_readings
 246              		.thumb
 247              		.thumb_func
 248              		.type	pressure_sensor_readings, %function
 249              	pressure_sensor_readings:
 250              	.LFB65:
  60:voltages.c    **** 
  61:voltages.c    **** // Function to take Pressure sensor readings and save them in the pressure_t datatype
  62:voltages.c    **** pressure_t pressure_sensor_readings(){
 251              		.loc 1 62 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 96
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255 0000 90B5     		push	{r4, r7, lr}
 256              		.cfi_def_cfa_offset 12
 257              		.cfi_offset 4, -12
 258              		.cfi_offset 7, -8
 259              		.cfi_offset 14, -4
 260 0002 99B0     		sub	sp, sp, #100
 261              		.cfi_def_cfa_offset 112
 262 0004 00AF     		add	r7, sp, #0
 263              		.cfi_def_cfa_register 7
 264 0006 7860     		str	r0, [r7, #4]
  63:voltages.c    ****     
  64:voltages.c    ****     pressure_t pressure;  // Create variable voltage of data structure voltage_t.
  65:voltages.c    ****     float channels[AMux_CHANNELS];
  66:voltages.c    ****     int32 readings[N_SAMPLES];  // Creates new int32 array called readings of size N_SAMPLES = 11
  67:voltages.c    ****     
  68:voltages.c    ****     AMux_Start();       // Start the Analog Multiplexer
 265              		.loc 1 68 0
 266 0008 FFF7FEFF 		bl	AMux_Start
  69:voltages.c    ****  
  70:voltages.c    ****     ADC_RestoreConfig();// Have to call this and save (See below). Otherwise ADC won't work through
 267              		.loc 1 70 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 7


 268 000c FFF7FEFF 		bl	ADC_RestoreConfig
  71:voltages.c    ****     
  72:voltages.c    ****     ADC_Start();        // Start the ADC
 269              		.loc 1 72 0
 270 0010 FFF7FEFF 		bl	ADC_Start
  73:voltages.c    ****     
  74:voltages.c    ****     AMux_Select(ADC_MUX_PRTRANS); // This functions first disconnects all channels then connects th
 271              		.loc 1 74 0
 272 0014 0320     		movs	r0, #3
 273 0016 FFF7FEFF 		bl	AMux_Select
 274              	.LBB5:
  75:voltages.c    ****     
  76:voltages.c    ****     for(uint16 i=0; i< N_SAMPLES; i++){   
 275              		.loc 1 76 0
 276 001a 0023     		movs	r3, #0
 277 001c A7F85E30 		strh	r3, [r7, #94]	@ movhi
 278 0020 0FE0     		b	.L10
 279              	.L11:
  77:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 280              		.loc 1 77 0 discriminator 3
 281 0022 B7F85E40 		ldrh	r4, [r7, #94]
 282 0026 FFF7FEFF 		bl	ADC_Read32
 283 002a 0246     		mov	r2, r0
 284 002c A300     		lsls	r3, r4, #2
 285 002e 07F16001 		add	r1, r7, #96
 286 0032 0B44     		add	r3, r3, r1
 287 0034 43F8582C 		str	r2, [r3, #-88]
  76:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 288              		.loc 1 76 0 discriminator 3
 289 0038 B7F85E30 		ldrh	r3, [r7, #94]
 290 003c 0133     		adds	r3, r3, #1
 291 003e A7F85E30 		strh	r3, [r7, #94]	@ movhi
 292              	.L10:
  76:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 293              		.loc 1 76 0 is_stmt 0 discriminator 1
 294 0042 B7F85E30 		ldrh	r3, [r7, #94]
 295 0046 0A2B     		cmp	r3, #10
 296 0048 EBD9     		bls	.L11
 297              	.LBE5:
  78:voltages.c    ****     }
  79:voltages.c    ****     
  80:voltages.c    ****     // Converts the ADC output to Volts as a floating point number. 
  81:voltages.c    ****     // Get the median of readings and return that.
  82:voltages.c    ****     pressure.pressure_voltage_off = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Ge
 298              		.loc 1 82 0 is_stmt 1
 299 004a 07F10803 		add	r3, r7, #8
 300 004e 0B21     		movs	r1, #11
 301 0050 1846     		mov	r0, r3
 302 0052 FFF7FEFF 		bl	find_median32
 303 0056 0346     		mov	r3, r0
 304 0058 1846     		mov	r0, r3
 305 005a FFF7FEFF 		bl	ADC_CountsTo_Volts
 306 005e 0346     		mov	r3, r0
 307 0060 3B65     		str	r3, [r7, #80]	@ float
  83:voltages.c    ****     pressure.pressure_voltage_off = floorf(pressure.pressure_voltage_off * 100) / 100;
 308              		.loc 1 83 0
 309 0062 3B6D     		ldr	r3, [r7, #80]	@ float
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 8


 310 0064 4849     		ldr	r1, .L15+16
 311 0066 1846     		mov	r0, r3
 312 0068 FFF7FEFF 		bl	__aeabi_fmul
 313 006c 0346     		mov	r3, r0
 314 006e 1846     		mov	r0, r3
 315 0070 FFF7FEFF 		bl	floorf
 316 0074 0346     		mov	r3, r0
 317 0076 4449     		ldr	r1, .L15+16
 318 0078 1846     		mov	r0, r3
 319 007a FFF7FEFF 		bl	__aeabi_fdiv
 320 007e 0346     		mov	r3, r0
 321 0080 3B65     		str	r3, [r7, #80]	@ float
  84:voltages.c    ****     
  85:voltages.c    ****     Pressure_Voltage_Enable_Write(ON);  // Flip on the Pressure Transducer Voltage ADC pin high (tu
 322              		.loc 1 85 0
 323 0082 0120     		movs	r0, #1
 324 0084 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
  86:voltages.c    ****     
  87:voltages.c    **** 	CyDelay(10u);	    // 10 seconds delay to give time to flip on ADC pin.
 325              		.loc 1 87 0
 326 0088 0A20     		movs	r0, #10
 327 008a FFF7FEFF 		bl	CyDelay
 328              	.LBB6:
  88:voltages.c    ****   
  89:voltages.c    ****     for(uint16 i=0; i< N_SAMPLES; i++){   
 329              		.loc 1 89 0
 330 008e 0023     		movs	r3, #0
 331 0090 A7F85C30 		strh	r3, [r7, #92]	@ movhi
 332 0094 0FE0     		b	.L12
 333              	.L13:
  90:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 334              		.loc 1 90 0 discriminator 3
 335 0096 B7F85C40 		ldrh	r4, [r7, #92]
 336 009a FFF7FEFF 		bl	ADC_Read32
 337 009e 0246     		mov	r2, r0
 338 00a0 A300     		lsls	r3, r4, #2
 339 00a2 07F16001 		add	r1, r7, #96
 340 00a6 0B44     		add	r3, r3, r1
 341 00a8 43F8582C 		str	r2, [r3, #-88]
  89:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 342              		.loc 1 89 0 discriminator 3
 343 00ac B7F85C30 		ldrh	r3, [r7, #92]
 344 00b0 0133     		adds	r3, r3, #1
 345 00b2 A7F85C30 		strh	r3, [r7, #92]	@ movhi
 346              	.L12:
  89:voltages.c    ****         readings[i] = ADC_Read32(); // When called, it will start ADC conversions, wait for the con
 347              		.loc 1 89 0 is_stmt 0 discriminator 1
 348 00b6 B7F85C30 		ldrh	r3, [r7, #92]
 349 00ba 0A2B     		cmp	r3, #10
 350 00bc EBD9     		bls	.L13
 351              	.LBE6:
  91:voltages.c    ****     }
  92:voltages.c    ****     
  93:voltages.c    ****     // Converts the ADC output to Volts as a floating point number. 
  94:voltages.c    ****     // Get the median of readings and return that.
  95:voltages.c    ****     pressure.pressure_voltage_on = ADC_CountsTo_Volts(find_median32(readings,N_SAMPLES));    // Get
 352              		.loc 1 95 0 is_stmt 1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 9


 353 00be 07F10803 		add	r3, r7, #8
 354 00c2 0B21     		movs	r1, #11
 355 00c4 1846     		mov	r0, r3
 356 00c6 FFF7FEFF 		bl	find_median32
 357 00ca 0346     		mov	r3, r0
 358 00cc 1846     		mov	r0, r3
 359 00ce FFF7FEFF 		bl	ADC_CountsTo_Volts
 360 00d2 0346     		mov	r3, r0
 361 00d4 FB64     		str	r3, [r7, #76]	@ float
  96:voltages.c    ****     
  97:voltages.c    ****     AMux_Stop();        // Disconnects all Analog Multiplex channels.
 362              		.loc 1 97 0
 363 00d6 FFF7FEFF 		bl	AMux_Start
  98:voltages.c    ****     
  99:voltages.c    ****     ADC_SaveConfig();   // Save the register configuration which are not retention.
 364              		.loc 1 99 0
 365 00da FFF7FEFF 		bl	ADC_SaveConfig
 100:voltages.c    ****     
 101:voltages.c    ****     ADC_Stop();         // Stops and powers down the ADC component and the internal clock if the ex
 366              		.loc 1 101 0
 367 00de FFF7FEFF 		bl	ADC_Stop
 102:voltages.c    ****     
 103:voltages.c    ****     Pressure_Voltage_Enable_Write(OFF);  // Pulls Pressure Transducer ADC pin low (turns it off).
 368              		.loc 1 103 0
 369 00e2 0020     		movs	r0, #0
 370 00e4 FFF7FEFF 		bl	Pressure_Voltage_Enable_Write
 104:voltages.c    ****     // Calculate the pressure transducer current output.
 105:voltages.c    ****     // i=V/R where i= currrent, V= voltage, and R= resistance= 150 ohms. Divide by 1000 to get curr
 106:voltages.c    ****     // Should fall between 4 and 20mA
 107:voltages.c    ****     pressure.pressure_current = (pressure.pressure_voltage_on/ 150.0)*1000; 
 371              		.loc 1 107 0
 372 00e8 FB6C     		ldr	r3, [r7, #76]	@ float
 373 00ea 1846     		mov	r0, r3
 374 00ec FFF7FEFF 		bl	__aeabi_f2d
 375 00f0 21A3     		adr	r3, .L15
 376 00f2 D3E90023 		ldrd	r2, [r3]
 377 00f6 FFF7FEFF 		bl	__aeabi_ddiv
 378 00fa 0346     		mov	r3, r0
 379 00fc 0C46     		mov	r4, r1
 380 00fe 1846     		mov	r0, r3
 381 0100 2146     		mov	r1, r4
 382 0102 4FF00002 		mov	r2, #0
 383 0106 214B     		ldr	r3, .L15+20
 384 0108 FFF7FEFF 		bl	__aeabi_dmul
 385 010c 0346     		mov	r3, r0
 386 010e 0C46     		mov	r4, r1
 387 0110 1846     		mov	r0, r3
 388 0112 2146     		mov	r1, r4
 389 0114 FFF7FEFF 		bl	__aeabi_d2f
 390 0118 0346     		mov	r3, r0
 391 011a 7B65     		str	r3, [r7, #84]	@ float
 108:voltages.c    ****     // Calculate the estimated depth from the pressure transducer.
 109:voltages.c    ****     // d = (Dmax*V/0.016R) - (Dmax/4) where d= depth, V= voltage, R= resistance= 150 ohms, Dmax = s
 110:voltages.c    ****     // Should fall between 0 and 10 ft
 111:voltages.c    ****     pressure.pressure_depth = ((10.0*pressure.pressure_voltage_on)/(0.016*150))-(10.0/4.0);   
 392              		.loc 1 111 0
 393 011c FB6C     		ldr	r3, [r7, #76]	@ float
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 10


 394 011e 1846     		mov	r0, r3
 395 0120 FFF7FEFF 		bl	__aeabi_f2d
 396 0124 4FF00002 		mov	r2, #0
 397 0128 194B     		ldr	r3, .L15+24
 398 012a FFF7FEFF 		bl	__aeabi_dmul
 399 012e 0346     		mov	r3, r0
 400 0130 0C46     		mov	r4, r1
 401 0132 1846     		mov	r0, r3
 402 0134 2146     		mov	r1, r4
 403 0136 12A3     		adr	r3, .L15+8
 404 0138 D3E90023 		ldrd	r2, [r3]
 405 013c FFF7FEFF 		bl	__aeabi_ddiv
 406 0140 0346     		mov	r3, r0
 407 0142 0C46     		mov	r4, r1
 408 0144 1846     		mov	r0, r3
 409 0146 2146     		mov	r1, r4
 410 0148 4FF00002 		mov	r2, #0
 411 014c 114B     		ldr	r3, .L15+28
 412 014e FFF7FEFF 		bl	__aeabi_dsub
 413 0152 0346     		mov	r3, r0
 414 0154 0C46     		mov	r4, r1
 415 0156 1846     		mov	r0, r3
 416 0158 2146     		mov	r1, r4
 417 015a FFF7FEFF 		bl	__aeabi_d2f
 418 015e 0346     		mov	r3, r0
 419 0160 BB65     		str	r3, [r7, #88]	@ float
 112:voltages.c    ****     return pressure;
 420              		.loc 1 112 0
 421 0162 7B68     		ldr	r3, [r7, #4]
 422 0164 1C46     		mov	r4, r3
 423 0166 07F14C03 		add	r3, r7, #76
 424 016a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 425 016c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 113:voltages.c    **** }
 426              		.loc 1 113 0
 427 0170 7868     		ldr	r0, [r7, #4]
 428 0172 6437     		adds	r7, r7, #100
 429              		.cfi_def_cfa_offset 12
 430 0174 BD46     		mov	sp, r7
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 0176 90BD     		pop	{r4, r7, pc}
 434              	.L16:
 435              		.align	3
 436              	.L15:
 437 0178 00000000 		.word	0
 438 017c 00C06240 		.word	1080213504
 439 0180 33333333 		.word	858993459
 440 0184 33330340 		.word	1073951539
 441 0188 0000C842 		.word	1120403456
 442 018c 00408F40 		.word	1083129856
 443 0190 00002440 		.word	1076101120
 444 0194 00000440 		.word	1074003968
 445              		.cfi_endproc
 446              	.LFE65:
 447              		.size	pressure_sensor_readings, .-pressure_sensor_readings
 448              		.section	.text.pressure_calculations,"ax",%progbits
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 11


 449              		.align	2
 450              		.global	pressure_calculations
 451              		.thumb
 452              		.thumb_func
 453              		.type	pressure_calculations, %function
 454              	pressure_calculations:
 455              	.LFB66:
 114:voltages.c    **** 
 115:voltages.c    **** // Function to calculate the pressure transducer current and depth estimate.
 116:voltages.c    **** pressure_t pressure_calculations(voltage_t voltage){
 456              		.loc 1 116 0
 457              		.cfi_startproc
 458              		@ args = 24, pretend = 16, frame = 24
 459              		@ frame_needed = 1, uses_anonymous_args = 0
 460 0000 84B0     		sub	sp, sp, #16
 461              		.cfi_def_cfa_offset 16
 462 0002 90B5     		push	{r4, r7, lr}
 463              		.cfi_def_cfa_offset 28
 464              		.cfi_offset 4, -28
 465              		.cfi_offset 7, -24
 466              		.cfi_offset 14, -20
 467 0004 87B0     		sub	sp, sp, #28
 468              		.cfi_def_cfa_offset 56
 469 0006 00AF     		add	r7, sp, #0
 470              		.cfi_def_cfa_register 7
 471 0008 7860     		str	r0, [r7, #4]
 472 000a 07F12C00 		add	r0, r7, #44
 473 000e 80E80E00 		stmia	r0, {r1, r2, r3}
 117:voltages.c    ****     // Create variable pressure of data structure type pressure_t.
 118:voltages.c    ****     pressure_t pressure;
 119:voltages.c    ****     
 120:voltages.c    ****     // Calculate the pressure transducer current output.
 121:voltages.c    ****     // i=V/R where i= currrent, V= voltage, and R= resistance= 150 ohms. Divide by 1000 to get curr
 122:voltages.c    ****     // Should fall between 4 and 20mA
 123:voltages.c    ****     pressure.pressure_current = (voltage.voltage_pressure/ 150.0)/1000; 
 474              		.loc 1 123 0
 475 0012 BB6B     		ldr	r3, [r7, #56]	@ float
 476 0014 1846     		mov	r0, r3
 477 0016 FFF7FEFF 		bl	__aeabi_f2d
 478 001a 23A3     		adr	r3, .L19
 479 001c D3E90023 		ldrd	r2, [r3]
 480 0020 FFF7FEFF 		bl	__aeabi_ddiv
 481 0024 0346     		mov	r3, r0
 482 0026 0C46     		mov	r4, r1
 483 0028 1846     		mov	r0, r3
 484 002a 2146     		mov	r1, r4
 485 002c 4FF00002 		mov	r2, #0
 486 0030 214B     		ldr	r3, .L19+16
 487 0032 FFF7FEFF 		bl	__aeabi_ddiv
 488 0036 0346     		mov	r3, r0
 489 0038 0C46     		mov	r4, r1
 490 003a 1846     		mov	r0, r3
 491 003c 2146     		mov	r1, r4
 492 003e FFF7FEFF 		bl	__aeabi_d2f
 493 0042 0346     		mov	r3, r0
 494 0044 3B61     		str	r3, [r7, #16]	@ float
 124:voltages.c    ****     // Calculate the estimated depth from the pressure transducer.
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 12


 125:voltages.c    ****     // d = (Dmax*V/0.016R) - (Dmax/4) where d= depth, V= voltage, R= resistance= 150 ohms, Dmax = s
 126:voltages.c    ****     // Should fall between 0 and 10 ft
 127:voltages.c    ****     pressure.pressure_depth = ((10.0*voltage.voltage_pressure)/(0.016*150))-(10.0/4.0); 
 495              		.loc 1 127 0
 496 0046 BB6B     		ldr	r3, [r7, #56]	@ float
 497 0048 1846     		mov	r0, r3
 498 004a FFF7FEFF 		bl	__aeabi_f2d
 499 004e 4FF00002 		mov	r2, #0
 500 0052 1A4B     		ldr	r3, .L19+20
 501 0054 FFF7FEFF 		bl	__aeabi_dmul
 502 0058 0346     		mov	r3, r0
 503 005a 0C46     		mov	r4, r1
 504 005c 1846     		mov	r0, r3
 505 005e 2146     		mov	r1, r4
 506 0060 13A3     		adr	r3, .L19+8
 507 0062 D3E90023 		ldrd	r2, [r3]
 508 0066 FFF7FEFF 		bl	__aeabi_ddiv
 509 006a 0346     		mov	r3, r0
 510 006c 0C46     		mov	r4, r1
 511 006e 1846     		mov	r0, r3
 512 0070 2146     		mov	r1, r4
 513 0072 4FF00002 		mov	r2, #0
 514 0076 124B     		ldr	r3, .L19+24
 515 0078 FFF7FEFF 		bl	__aeabi_dsub
 516 007c 0346     		mov	r3, r0
 517 007e 0C46     		mov	r4, r1
 518 0080 1846     		mov	r0, r3
 519 0082 2146     		mov	r1, r4
 520 0084 FFF7FEFF 		bl	__aeabi_d2f
 521 0088 0346     		mov	r3, r0
 522 008a 7B61     		str	r3, [r7, #20]	@ float
 128:voltages.c    ****     return pressure;
 523              		.loc 1 128 0
 524 008c 7B68     		ldr	r3, [r7, #4]
 525 008e 1C46     		mov	r4, r3
 526 0090 07F10803 		add	r3, r7, #8
 527 0094 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 528 0096 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 129:voltages.c    **** }
 529              		.loc 1 129 0
 530 009a 7868     		ldr	r0, [r7, #4]
 531 009c 1C37     		adds	r7, r7, #28
 532              		.cfi_def_cfa_offset 28
 533 009e BD46     		mov	sp, r7
 534              		.cfi_def_cfa_register 13
 535              		@ sp needed
 536 00a0 BDE89040 		pop	{r4, r7, lr}
 537              		.cfi_restore 14
 538              		.cfi_restore 7
 539              		.cfi_restore 4
 540              		.cfi_def_cfa_offset 16
 541 00a4 04B0     		add	sp, sp, #16
 542              		.cfi_def_cfa_offset 0
 543 00a6 7047     		bx	lr
 544              	.L20:
 545              		.align	3
 546              	.L19:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 13


 547 00a8 00000000 		.word	0
 548 00ac 00C06240 		.word	1080213504
 549 00b0 33333333 		.word	858993459
 550 00b4 33330340 		.word	1073951539
 551 00b8 00408F40 		.word	1083129856
 552 00bc 00002440 		.word	1076101120
 553 00c0 00000440 		.word	1074003968
 554              		.cfi_endproc
 555              	.LFE66:
 556              		.size	pressure_calculations, .-pressure_calculations
 557              		.section	.text.sort32,"ax",%progbits
 558              		.align	2
 559              		.global	sort32
 560              		.thumb
 561              		.thumb_func
 562              		.type	sort32, %function
 563              	sort32:
 564              	.LFB67:
 130:voltages.c    ****     
 131:voltages.c    ****     
 132:voltages.c    **** 
 133:voltages.c    **** // Function to sort the elements in the level readings array
 134:voltages.c    **** void sort32(int32 a[],int32 n) { 
 565              		.loc 1 134 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 16
 568              		@ frame_needed = 1, uses_anonymous_args = 0
 569 0000 80B5     		push	{r7, lr}
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 7, -8
 572              		.cfi_offset 14, -4
 573 0002 84B0     		sub	sp, sp, #16
 574              		.cfi_def_cfa_offset 24
 575 0004 00AF     		add	r7, sp, #0
 576              		.cfi_def_cfa_register 7
 577 0006 7860     		str	r0, [r7, #4]
 578 0008 3960     		str	r1, [r7]
 135:voltages.c    ****    int32 i,j;
 136:voltages.c    **** 
 137:voltages.c    ****    for(i = 0;i < n-1;i++) {
 579              		.loc 1 137 0
 580 000a 0023     		movs	r3, #0
 581 000c FB60     		str	r3, [r7, #12]
 582 000e 28E0     		b	.L22
 583              	.L26:
 138:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 584              		.loc 1 138 0
 585 0010 0023     		movs	r3, #0
 586 0012 BB60     		str	r3, [r7, #8]
 587 0014 1BE0     		b	.L23
 588              	.L25:
 139:voltages.c    ****          if(a[j] > a[j+1])
 589              		.loc 1 139 0
 590 0016 BB68     		ldr	r3, [r7, #8]
 591 0018 9B00     		lsls	r3, r3, #2
 592 001a 7A68     		ldr	r2, [r7, #4]
 593 001c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 14


 594 001e 1A68     		ldr	r2, [r3]
 595 0020 BB68     		ldr	r3, [r7, #8]
 596 0022 0133     		adds	r3, r3, #1
 597 0024 9B00     		lsls	r3, r3, #2
 598 0026 7968     		ldr	r1, [r7, #4]
 599 0028 0B44     		add	r3, r3, r1
 600 002a 1B68     		ldr	r3, [r3]
 601 002c 9A42     		cmp	r2, r3
 602 002e 0BDD     		ble	.L24
 140:voltages.c    ****             swap32(&a[j],&a[j+1]);  // Swap the address of a[j] and a[j+1]
 603              		.loc 1 140 0
 604 0030 BB68     		ldr	r3, [r7, #8]
 605 0032 9B00     		lsls	r3, r3, #2
 606 0034 7A68     		ldr	r2, [r7, #4]
 607 0036 D018     		adds	r0, r2, r3
 608 0038 BB68     		ldr	r3, [r7, #8]
 609 003a 0133     		adds	r3, r3, #1
 610 003c 9B00     		lsls	r3, r3, #2
 611 003e 7A68     		ldr	r2, [r7, #4]
 612 0040 1344     		add	r3, r3, r2
 613 0042 1946     		mov	r1, r3
 614 0044 FFF7FEFF 		bl	swap32
 615              	.L24:
 138:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 616              		.loc 1 138 0 discriminator 2
 617 0048 BB68     		ldr	r3, [r7, #8]
 618 004a 0133     		adds	r3, r3, #1
 619 004c BB60     		str	r3, [r7, #8]
 620              	.L23:
 138:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 621              		.loc 1 138 0 is_stmt 0 discriminator 1
 622 004e 3A68     		ldr	r2, [r7]
 623 0050 FB68     		ldr	r3, [r7, #12]
 624 0052 D31A     		subs	r3, r2, r3
 625 0054 5A1E     		subs	r2, r3, #1
 626 0056 BB68     		ldr	r3, [r7, #8]
 627 0058 9A42     		cmp	r2, r3
 628 005a DCDC     		bgt	.L25
 137:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 629              		.loc 1 137 0 is_stmt 1 discriminator 2
 630 005c FB68     		ldr	r3, [r7, #12]
 631 005e 0133     		adds	r3, r3, #1
 632 0060 FB60     		str	r3, [r7, #12]
 633              	.L22:
 137:voltages.c    ****       for(j = 0;j < n-i-1;j++) {
 634              		.loc 1 137 0 is_stmt 0 discriminator 1
 635 0062 3B68     		ldr	r3, [r7]
 636 0064 5A1E     		subs	r2, r3, #1
 637 0066 FB68     		ldr	r3, [r7, #12]
 638 0068 9A42     		cmp	r2, r3
 639 006a D1DC     		bgt	.L26
 141:voltages.c    ****       }
 142:voltages.c    ****    }
 143:voltages.c    **** }
 640              		.loc 1 143 0 is_stmt 1
 641 006c 00BF     		nop
 642 006e 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 15


 643              		.cfi_def_cfa_offset 8
 644 0070 BD46     		mov	sp, r7
 645              		.cfi_def_cfa_register 13
 646              		@ sp needed
 647 0072 80BD     		pop	{r7, pc}
 648              		.cfi_endproc
 649              	.LFE67:
 650              		.size	sort32, .-sort32
 651              		.section	.text.swap32,"ax",%progbits
 652              		.align	2
 653              		.global	swap32
 654              		.thumb
 655              		.thumb_func
 656              		.type	swap32, %function
 657              	swap32:
 658              	.LFB68:
 144:voltages.c    **** 
 145:voltages.c    **** // Function to swap elements in the level readings array in order to sort them
 146:voltages.c    **** void swap32(int32 *p,int32 *q){
 659              		.loc 1 146 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 16
 662              		@ frame_needed = 1, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 664 0000 80B4     		push	{r7}
 665              		.cfi_def_cfa_offset 4
 666              		.cfi_offset 7, -4
 667 0002 85B0     		sub	sp, sp, #20
 668              		.cfi_def_cfa_offset 24
 669 0004 00AF     		add	r7, sp, #0
 670              		.cfi_def_cfa_register 7
 671 0006 7860     		str	r0, [r7, #4]
 672 0008 3960     		str	r1, [r7]
 147:voltages.c    ****    int32 t;
 148:voltages.c    ****    
 149:voltages.c    ****    t=*p; 
 673              		.loc 1 149 0
 674 000a 7B68     		ldr	r3, [r7, #4]
 675 000c 1B68     		ldr	r3, [r3]
 676 000e FB60     		str	r3, [r7, #12]
 150:voltages.c    ****    *p=*q; 
 677              		.loc 1 150 0
 678 0010 3B68     		ldr	r3, [r7]
 679 0012 1A68     		ldr	r2, [r3]
 680 0014 7B68     		ldr	r3, [r7, #4]
 681 0016 1A60     		str	r2, [r3]
 151:voltages.c    ****    *q=t;
 682              		.loc 1 151 0
 683 0018 3B68     		ldr	r3, [r7]
 684 001a FA68     		ldr	r2, [r7, #12]
 685 001c 1A60     		str	r2, [r3]
 152:voltages.c    **** }
 686              		.loc 1 152 0
 687 001e 00BF     		nop
 688 0020 1437     		adds	r7, r7, #20
 689              		.cfi_def_cfa_offset 4
 690 0022 BD46     		mov	sp, r7
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 16


 691              		.cfi_def_cfa_register 13
 692              		@ sp needed
 693 0024 80BC     		pop	{r7}
 694              		.cfi_restore 7
 695              		.cfi_def_cfa_offset 0
 696 0026 7047     		bx	lr
 697              		.cfi_endproc
 698              	.LFE68:
 699              		.size	swap32, .-swap32
 700              		.global	__aeabi_i2d
 701              		.global	__aeabi_d2iz
 702              		.section	.text.find_median32,"ax",%progbits
 703              		.align	2
 704              		.global	find_median32
 705              		.thumb
 706              		.thumb_func
 707              		.type	find_median32, %function
 708              	find_median32:
 709              	.LFB69:
 153:voltages.c    **** 
 154:voltages.c    **** // Function to calculate the median of the array, after array is sorted
 155:voltages.c    **** int32 find_median32(int32 array[] , int32 n)
 156:voltages.c    **** {
 710              		.loc 1 156 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 16
 713              		@ frame_needed = 1, uses_anonymous_args = 0
 714 0000 90B5     		push	{r4, r7, lr}
 715              		.cfi_def_cfa_offset 12
 716              		.cfi_offset 4, -12
 717              		.cfi_offset 7, -8
 718              		.cfi_offset 14, -4
 719 0002 85B0     		sub	sp, sp, #20
 720              		.cfi_def_cfa_offset 32
 721 0004 00AF     		add	r7, sp, #0
 722              		.cfi_def_cfa_register 7
 723 0006 7860     		str	r0, [r7, #4]
 724 0008 3960     		str	r1, [r7]
 157:voltages.c    ****     int32 median=0;
 725              		.loc 1 157 0
 726 000a 0023     		movs	r3, #0
 727 000c FB60     		str	r3, [r7, #12]
 158:voltages.c    ****     sort32(array,n);
 728              		.loc 1 158 0
 729 000e 3968     		ldr	r1, [r7]
 730 0010 7868     		ldr	r0, [r7, #4]
 731 0012 FFF7FEFF 		bl	sort32
 159:voltages.c    ****     
 160:voltages.c    ****     // If number of elements are even
 161:voltages.c    ****     if(n%2 == 0)
 732              		.loc 1 161 0
 733 0016 3B68     		ldr	r3, [r7]
 734 0018 03F00103 		and	r3, r3, #1
 735 001c 002B     		cmp	r3, #0
 736 001e 23D1     		bne	.L29
 162:voltages.c    ****         // Median is the average of the  two middle sorted numbers
 163:voltages.c    ****         median = (array[(n-1)/2] + array[n/2])/2.0;
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 17


 737              		.loc 1 163 0
 738 0020 3B68     		ldr	r3, [r7]
 739 0022 013B     		subs	r3, r3, #1
 740 0024 DA0F     		lsrs	r2, r3, #31
 741 0026 1344     		add	r3, r3, r2
 742 0028 5B10     		asrs	r3, r3, #1
 743 002a 9B00     		lsls	r3, r3, #2
 744 002c 7A68     		ldr	r2, [r7, #4]
 745 002e 1344     		add	r3, r3, r2
 746 0030 1A68     		ldr	r2, [r3]
 747 0032 3B68     		ldr	r3, [r7]
 748 0034 D90F     		lsrs	r1, r3, #31
 749 0036 0B44     		add	r3, r3, r1
 750 0038 5B10     		asrs	r3, r3, #1
 751 003a 9B00     		lsls	r3, r3, #2
 752 003c 7968     		ldr	r1, [r7, #4]
 753 003e 0B44     		add	r3, r3, r1
 754 0040 1B68     		ldr	r3, [r3]
 755 0042 1344     		add	r3, r3, r2
 756 0044 1846     		mov	r0, r3
 757 0046 FFF7FEFF 		bl	__aeabi_i2d
 758 004a 4FF00002 		mov	r2, #0
 759 004e 4FF08043 		mov	r3, #1073741824
 760 0052 FFF7FEFF 		bl	__aeabi_ddiv
 761 0056 0346     		mov	r3, r0
 762 0058 0C46     		mov	r4, r1
 763 005a 1846     		mov	r0, r3
 764 005c 2146     		mov	r1, r4
 765 005e FFF7FEFF 		bl	__aeabi_d2iz
 766 0062 0346     		mov	r3, r0
 767 0064 FB60     		str	r3, [r7, #12]
 768 0066 08E0     		b	.L30
 769              	.L29:
 164:voltages.c    ****     // If number of elements are odd
 165:voltages.c    ****     else
 166:voltages.c    ****         // Median is the the middle sorted number. 
 167:voltages.c    ****         median = array[n/2];
 770              		.loc 1 167 0
 771 0068 3B68     		ldr	r3, [r7]
 772 006a DA0F     		lsrs	r2, r3, #31
 773 006c 1344     		add	r3, r3, r2
 774 006e 5B10     		asrs	r3, r3, #1
 775 0070 9B00     		lsls	r3, r3, #2
 776 0072 7A68     		ldr	r2, [r7, #4]
 777 0074 1344     		add	r3, r3, r2
 778 0076 1B68     		ldr	r3, [r3]
 779 0078 FB60     		str	r3, [r7, #12]
 780              	.L30:
 168:voltages.c    ****     
 169:voltages.c    ****     return median;
 781              		.loc 1 169 0
 782 007a FB68     		ldr	r3, [r7, #12]
 170:voltages.c    **** }
 783              		.loc 1 170 0
 784 007c 1846     		mov	r0, r3
 785 007e 1437     		adds	r7, r7, #20
 786              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 18


 787 0080 BD46     		mov	sp, r7
 788              		.cfi_def_cfa_register 13
 789              		@ sp needed
 790 0082 90BD     		pop	{r4, r7, pc}
 791              		.cfi_endproc
 792              	.LFE69:
 793              		.size	find_median32, .-find_median32
 794              		.section	.rodata
 795              		.align	2
 796              	.LC0:
 797 0000 54455354 		.ascii	"TEST_ANALOG_VOLTAGES\000"
 797      5F414E41 
 797      4C4F475F 
 797      564F4C54 
 797      41474553 
 798 0015 000000   		.align	2
 799              	.LC1:
 800 0018 56424154 		.ascii	"VBAT=%.3f,VSOL=%.3f,CHRG=%.3f\000"
 800      3D252E33 
 800      662C5653 
 800      4F4C3D25 
 800      2E33662C 
 801              		.section	.text.voltages_test,"ax",%progbits
 802              		.align	2
 803              		.global	voltages_test
 804              		.thumb
 805              		.thumb_func
 806              		.type	voltages_test, %function
 807              	voltages_test:
 808              	.LFB70:
 171:voltages.c    **** 
 172:voltages.c    **** // Test the voltage readings
 173:voltages.c    **** test_t voltages_test(){
 809              		.loc 1 173 0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 416
 812              		@ frame_needed = 1, uses_anonymous_args = 0
 813 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 814              		.cfi_def_cfa_offset 24
 815              		.cfi_offset 4, -24
 816              		.cfi_offset 5, -20
 817              		.cfi_offset 7, -16
 818              		.cfi_offset 8, -12
 819              		.cfi_offset 9, -8
 820              		.cfi_offset 14, -4
 821 0004 EEB0     		sub	sp, sp, #440
 822              		.cfi_def_cfa_offset 464
 823 0006 06AF     		add	r7, sp, #24
 824              		.cfi_def_cfa 7, 440
 825 0008 3B1D     		adds	r3, r7, #4
 826 000a 1860     		str	r0, [r3]
 174:voltages.c    ****     // Create variable test of the data structure test_t
 175:voltages.c    ****     test_t test;
 176:voltages.c    ****     test.status = 0;
 827              		.loc 1 176 0
 828 000c 07F11C03 		add	r3, r7, #28
 829 0010 0022     		movs	r2, #0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 19


 830 0012 83F88020 		strb	r2, [r3, #128]
 177:voltages.c    ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_ANALOG_VOLTAGES");
 831              		.loc 1 177 0
 832 0016 07F11C03 		add	r3, r7, #28
 833 001a 264A     		ldr	r2, .L34
 834 001c 1C46     		mov	r4, r3
 835 001e 1546     		mov	r5, r2
 836 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 837 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 838 0024 95E80300 		ldmia	r5, {r0, r1}
 839 0028 2060     		str	r0, [r4]
 840 002a 0434     		adds	r4, r4, #4
 841 002c 2170     		strb	r1, [r4]
 178:voltages.c    ****     
 179:voltages.c    ****     voltage_t voltage = voltage_take_readings();
 842              		.loc 1 179 0
 843 002e 07F10803 		add	r3, r7, #8
 844 0032 1846     		mov	r0, r3
 845 0034 FFF7FEFF 		bl	voltage_take_readings
 180:voltages.c    ****     
 181:voltages.c    ****     //do some checks here if you want the test to meet some voltage requirement
 182:voltages.c    ****     
 183:voltages.c    ****     snprintf(test.reason,sizeof(test.reason),"VBAT=%.3f,VSOL=%.3f,CHRG=%.3f",
 184:voltages.c    ****             voltage.voltage_battery,
 846              		.loc 1 184 0
 847 0038 07F10803 		add	r3, r7, #8
 848 003c 1B68     		ldr	r3, [r3]	@ float
 183:voltages.c    ****             voltage.voltage_battery,
 849              		.loc 1 183 0
 850 003e 1846     		mov	r0, r3
 851 0040 FFF7FEFF 		bl	__aeabi_f2d
 852 0044 0446     		mov	r4, r0
 853 0046 0D46     		mov	r5, r1
 185:voltages.c    ****             voltage.voltage_solar,
 854              		.loc 1 185 0
 855 0048 07F10803 		add	r3, r7, #8
 856 004c 5B68     		ldr	r3, [r3, #4]	@ float
 183:voltages.c    ****             voltage.voltage_battery,
 857              		.loc 1 183 0
 858 004e 1846     		mov	r0, r3
 859 0050 FFF7FEFF 		bl	__aeabi_f2d
 860 0054 8046     		mov	r8, r0
 861 0056 8946     		mov	r9, r1
 186:voltages.c    ****             voltage.voltage_charge_current);
 862              		.loc 1 186 0
 863 0058 07F10803 		add	r3, r7, #8
 864 005c 9B68     		ldr	r3, [r3, #8]	@ float
 183:voltages.c    ****             voltage.voltage_battery,
 865              		.loc 1 183 0
 866 005e 1846     		mov	r0, r3
 867 0060 FFF7FEFF 		bl	__aeabi_f2d
 868 0064 0246     		mov	r2, r0
 869 0066 0B46     		mov	r3, r1
 870 0068 07F11C01 		add	r1, r7, #28
 871 006c 01F18100 		add	r0, r1, #129
 872 0070 CDE90423 		strd	r2, [sp, #16]
 873 0074 CDE90289 		strd	r8, [sp, #8]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 20


 874 0078 CDE90045 		strd	r4, [sp]
 875 007c 0E4A     		ldr	r2, .L34+4
 876 007e 4FF48071 		mov	r1, #256
 877 0082 FFF7FEFF 		bl	snprintf
 187:voltages.c    ****     
 188:voltages.c    ****     test.status = 1;
 878              		.loc 1 188 0
 879 0086 07F11C03 		add	r3, r7, #28
 880 008a 0122     		movs	r2, #1
 881 008c 83F88020 		strb	r2, [r3, #128]
 189:voltages.c    ****     
 190:voltages.c    ****     return test;
 882              		.loc 1 190 0
 883 0090 3B1D     		adds	r3, r7, #4
 884 0092 1A68     		ldr	r2, [r3]
 885 0094 07F11C03 		add	r3, r7, #28
 886 0098 1046     		mov	r0, r2
 887 009a 1946     		mov	r1, r3
 888 009c 40F28113 		movw	r3, #385
 889 00a0 1A46     		mov	r2, r3
 890 00a2 FFF7FEFF 		bl	memcpy
 191:voltages.c    **** }
 891              		.loc 1 191 0
 892 00a6 3B1D     		adds	r3, r7, #4
 893 00a8 1868     		ldr	r0, [r3]
 894 00aa 07F5D077 		add	r7, r7, #416
 895              		.cfi_def_cfa_offset 24
 896 00ae BD46     		mov	sp, r7
 897              		.cfi_def_cfa_register 13
 898              		@ sp needed
 899 00b0 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 900              	.L35:
 901              		.align	2
 902              	.L34:
 903 00b4 00000000 		.word	.LC0
 904 00b8 18000000 		.word	.LC1
 905              		.cfi_endproc
 906              	.LFE70:
 907              		.size	voltages_test, .-voltages_test
 908              		.section	.rodata
 909 0036 0000     		.align	2
 910              	.LC2:
 911 0038 54455354 		.ascii	"TEST_PRESSURE_SENSOR\000"
 911      5F505245 
 911      53535552 
 911      455F5345 
 911      4E534F52 
 912 004d 000000   		.align	2
 913              	.LC3:
 914 0050 50524553 		.ascii	"PRESSURE=%.3f,PRES_CURRENT=%.3f,PRES_DEPTH=%.3f\000"
 914      53555245 
 914      3D252E33 
 914      662C5052 
 914      45535F43 
 915              		.global	__aeabi_fcmpeq
 916              		.section	.text.pressure_sensor_test,"ax",%progbits
 917              		.align	2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 21


 918              		.global	pressure_sensor_test
 919              		.thumb
 920              		.thumb_func
 921              		.type	pressure_sensor_test, %function
 922              	pressure_sensor_test:
 923              	.LFB71:
 192:voltages.c    **** 
 193:voltages.c    **** // Test the pressure sensor readings
 194:voltages.c    **** test_t pressure_sensor_test(){
 924              		.loc 1 194 0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 416
 927              		@ frame_needed = 1, uses_anonymous_args = 0
 928 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 929              		.cfi_def_cfa_offset 24
 930              		.cfi_offset 4, -24
 931              		.cfi_offset 5, -20
 932              		.cfi_offset 7, -16
 933              		.cfi_offset 8, -12
 934              		.cfi_offset 9, -8
 935              		.cfi_offset 14, -4
 936 0004 EEB0     		sub	sp, sp, #440
 937              		.cfi_def_cfa_offset 464
 938 0006 06AF     		add	r7, sp, #24
 939              		.cfi_def_cfa 7, 440
 940 0008 3B1D     		adds	r3, r7, #4
 941 000a 1860     		str	r0, [r3]
 195:voltages.c    ****     // Create variable test of the data structure test_t
 196:voltages.c    ****     test_t test;
 197:voltages.c    ****     test.status = 0;
 942              		.loc 1 197 0
 943 000c 07F11C03 		add	r3, r7, #28
 944 0010 0022     		movs	r2, #0
 945 0012 83F88020 		strb	r2, [r3, #128]
 198:voltages.c    ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_PRESSURE_SENSOR");
 946              		.loc 1 198 0
 947 0016 07F11C03 		add	r3, r7, #28
 948 001a 374A     		ldr	r2, .L41
 949 001c 1C46     		mov	r4, r3
 950 001e 1546     		mov	r5, r2
 951 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 952 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 953 0024 95E80300 		ldmia	r5, {r0, r1}
 954 0028 2060     		str	r0, [r4]
 955 002a 0434     		adds	r4, r4, #4
 956 002c 2170     		strb	r1, [r4]
 199:voltages.c    ****     
 200:voltages.c    ****     pressure_t pressure = pressure_sensor_readings();
 957              		.loc 1 200 0
 958 002e 07F10C03 		add	r3, r7, #12
 959 0032 1846     		mov	r0, r3
 960 0034 FFF7FEFF 		bl	pressure_sensor_readings
 201:voltages.c    ****     
 202:voltages.c    ****     //do some checks here if you want the test to meet some voltage requirement
 203:voltages.c    ****     
 204:voltages.c    ****     snprintf(test.reason,sizeof(test.reason),"PRESSURE=%.3f,PRES_CURRENT=%.3f,PRES_DEPTH=%.3f",
 205:voltages.c    ****             pressure.pressure_voltage_on,
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 22


 961              		.loc 1 205 0
 962 0038 07F10C03 		add	r3, r7, #12
 963 003c 1B68     		ldr	r3, [r3]	@ float
 204:voltages.c    ****             pressure.pressure_voltage_on,
 964              		.loc 1 204 0
 965 003e 1846     		mov	r0, r3
 966 0040 FFF7FEFF 		bl	__aeabi_f2d
 967 0044 0446     		mov	r4, r0
 968 0046 0D46     		mov	r5, r1
 206:voltages.c    ****             pressure.pressure_current,
 969              		.loc 1 206 0
 970 0048 07F10C03 		add	r3, r7, #12
 971 004c 9B68     		ldr	r3, [r3, #8]	@ float
 204:voltages.c    ****             pressure.pressure_voltage_on,
 972              		.loc 1 204 0
 973 004e 1846     		mov	r0, r3
 974 0050 FFF7FEFF 		bl	__aeabi_f2d
 975 0054 8046     		mov	r8, r0
 976 0056 8946     		mov	r9, r1
 207:voltages.c    ****             pressure.pressure_depth);
 977              		.loc 1 207 0
 978 0058 07F10C03 		add	r3, r7, #12
 979 005c DB68     		ldr	r3, [r3, #12]	@ float
 204:voltages.c    ****             pressure.pressure_voltage_on,
 980              		.loc 1 204 0
 981 005e 1846     		mov	r0, r3
 982 0060 FFF7FEFF 		bl	__aeabi_f2d
 983 0064 0246     		mov	r2, r0
 984 0066 0B46     		mov	r3, r1
 985 0068 07F11C01 		add	r1, r7, #28
 986 006c 01F18100 		add	r0, r1, #129
 987 0070 CDE90423 		strd	r2, [sp, #16]
 988 0074 CDE90289 		strd	r8, [sp, #8]
 989 0078 CDE90045 		strd	r4, [sp]
 990 007c 1F4A     		ldr	r2, .L41+4
 991 007e 4FF48071 		mov	r1, #256
 992 0082 FFF7FEFF 		bl	snprintf
 208:voltages.c    ****     pressure.pressure_voltage_on = floorf(pressure.pressure_voltage_on * 100) / 100;
 993              		.loc 1 208 0
 994 0086 07F10C03 		add	r3, r7, #12
 995 008a 1B68     		ldr	r3, [r3]	@ float
 996 008c 1C49     		ldr	r1, .L41+8
 997 008e 1846     		mov	r0, r3
 998 0090 FFF7FEFF 		bl	__aeabi_fmul
 999 0094 0346     		mov	r3, r0
 1000 0096 1846     		mov	r0, r3
 1001 0098 FFF7FEFF 		bl	floorf
 1002 009c 0346     		mov	r3, r0
 1003 009e 1849     		ldr	r1, .L41+8
 1004 00a0 1846     		mov	r0, r3
 1005 00a2 FFF7FEFF 		bl	__aeabi_fdiv
 1006 00a6 0346     		mov	r3, r0
 1007 00a8 1A46     		mov	r2, r3
 1008 00aa 07F10C03 		add	r3, r7, #12
 1009 00ae 1A60     		str	r2, [r3]	@ float
 209:voltages.c    ****     if (pressure.pressure_voltage_off != pressure.pressure_voltage_on) {
 1010              		.loc 1 209 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 23


 1011 00b0 07F10C03 		add	r3, r7, #12
 1012 00b4 5A68     		ldr	r2, [r3, #4]	@ float
 1013 00b6 07F10C03 		add	r3, r7, #12
 1014 00ba 1B68     		ldr	r3, [r3]	@ float
 1015 00bc 1946     		mov	r1, r3
 1016 00be 1046     		mov	r0, r2
 1017 00c0 FFF7FEFF 		bl	__aeabi_fcmpeq
 1018 00c4 0346     		mov	r3, r0
 1019 00c6 002B     		cmp	r3, #0
 1020 00c8 04D1     		bne	.L37
 210:voltages.c    ****         test.status = 1;
 1021              		.loc 1 210 0
 1022 00ca 07F11C03 		add	r3, r7, #28
 1023 00ce 0122     		movs	r2, #1
 1024 00d0 83F88020 		strb	r2, [r3, #128]
 1025              	.L37:
 211:voltages.c    ****     }
 212:voltages.c    ****     
 213:voltages.c    ****     return test;
 1026              		.loc 1 213 0
 1027 00d4 3B1D     		adds	r3, r7, #4
 1028 00d6 1A68     		ldr	r2, [r3]
 1029 00d8 07F11C03 		add	r3, r7, #28
 1030 00dc 1046     		mov	r0, r2
 1031 00de 1946     		mov	r1, r3
 1032 00e0 40F28113 		movw	r3, #385
 1033 00e4 1A46     		mov	r2, r3
 1034 00e6 FFF7FEFF 		bl	memcpy
 214:voltages.c    **** }
 1035              		.loc 1 214 0
 1036 00ea 3B1D     		adds	r3, r7, #4
 1037 00ec 1868     		ldr	r0, [r3]
 1038 00ee 07F5D077 		add	r7, r7, #416
 1039              		.cfi_def_cfa_offset 24
 1040 00f2 BD46     		mov	sp, r7
 1041              		.cfi_def_cfa_register 13
 1042              		@ sp needed
 1043 00f4 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 1044              	.L42:
 1045              		.align	2
 1046              	.L41:
 1047 00f8 38000000 		.word	.LC2
 1048 00fc 50000000 		.word	.LC3
 1049 0100 0000C842 		.word	1120403456
 1050              		.cfi_endproc
 1051              	.LFE71:
 1052              		.size	pressure_sensor_test, .-pressure_sensor_test
 1053              		.text
 1054              	.Letext0:
 1055              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1056              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1057              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1058              		.file 5 "testing.h"
 1059              		.file 6 "voltages.h"
 1060              		.file 7 "data.h"
 1061              		.file 8 "modem.h"
 1062              		.file 9 "notoriOS.h"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 24


 1063              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 1064              		.file 11 "level_sensor.h"
 1065              		.file 12 "downstream_level_sensor.h"
 1066              		.file 13 "valve.h"
 1067              		.file 14 "App_LED.h"
 1068              		.section	.debug_info,"",%progbits
 1069              	.Ldebug_info0:
 1070 0000 71090000 		.4byte	0x971
 1071 0004 0400     		.2byte	0x4
 1072 0006 00000000 		.4byte	.Ldebug_abbrev0
 1073 000a 04       		.byte	0x4
 1074 000b 01       		.uleb128 0x1
 1075 000c 6E000000 		.4byte	.LASF126
 1076 0010 0C       		.byte	0xc
 1077 0011 23060000 		.4byte	.LASF127
 1078 0015 07000000 		.4byte	.LASF128
 1079 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1080 001d 00000000 		.4byte	0
 1081 0021 00000000 		.4byte	.Ldebug_line0
 1082 0025 02       		.uleb128 0x2
 1083 0026 01       		.byte	0x1
 1084 0027 06       		.byte	0x6
 1085 0028 84010000 		.4byte	.LASF0
 1086 002c 02       		.uleb128 0x2
 1087 002d 01       		.byte	0x1
 1088 002e 08       		.byte	0x8
 1089 002f D2040000 		.4byte	.LASF1
 1090 0033 02       		.uleb128 0x2
 1091 0034 02       		.byte	0x2
 1092 0035 05       		.byte	0x5
 1093 0036 98030000 		.4byte	.LASF2
 1094 003a 02       		.uleb128 0x2
 1095 003b 02       		.byte	0x2
 1096 003c 07       		.byte	0x7
 1097 003d 09060000 		.4byte	.LASF3
 1098 0041 03       		.uleb128 0x3
 1099 0042 EB050000 		.4byte	.LASF9
 1100 0046 02       		.byte	0x2
 1101 0047 3F       		.byte	0x3f
 1102 0048 4C000000 		.4byte	0x4c
 1103 004c 02       		.uleb128 0x2
 1104 004d 04       		.byte	0x4
 1105 004e 05       		.byte	0x5
 1106 004f 1D020000 		.4byte	.LASF4
 1107 0053 02       		.uleb128 0x2
 1108 0054 04       		.byte	0x4
 1109 0055 07       		.byte	0x7
 1110 0056 1F030000 		.4byte	.LASF5
 1111 005a 02       		.uleb128 0x2
 1112 005b 08       		.byte	0x8
 1113 005c 05       		.byte	0x5
 1114 005d 76010000 		.4byte	.LASF6
 1115 0061 02       		.uleb128 0x2
 1116 0062 08       		.byte	0x8
 1117 0063 07       		.byte	0x7
 1118 0064 FC000000 		.4byte	.LASF7
 1119 0068 04       		.uleb128 0x4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 25


 1120 0069 04       		.byte	0x4
 1121 006a 05       		.byte	0x5
 1122 006b 696E7400 		.ascii	"int\000"
 1123 006f 02       		.uleb128 0x2
 1124 0070 04       		.byte	0x4
 1125 0071 07       		.byte	0x7
 1126 0072 C8050000 		.4byte	.LASF8
 1127 0076 03       		.uleb128 0x3
 1128 0077 CA040000 		.4byte	.LASF10
 1129 007b 03       		.byte	0x3
 1130 007c 2C       		.byte	0x2c
 1131 007d 41000000 		.4byte	0x41
 1132 0081 05       		.uleb128 0x5
 1133 0082 5D020000 		.4byte	.LASF11
 1134 0086 04       		.byte	0x4
 1135 0087 9201     		.2byte	0x192
 1136 0089 2C000000 		.4byte	0x2c
 1137 008d 05       		.uleb128 0x5
 1138 008e 00000000 		.4byte	.LASF12
 1139 0092 04       		.byte	0x4
 1140 0093 9301     		.2byte	0x193
 1141 0095 3A000000 		.4byte	0x3a
 1142 0099 05       		.uleb128 0x5
 1143 009a 5C040000 		.4byte	.LASF13
 1144 009e 04       		.byte	0x4
 1145 009f 9601     		.2byte	0x196
 1146 00a1 33000000 		.4byte	0x33
 1147 00a5 05       		.uleb128 0x5
 1148 00a6 70020000 		.4byte	.LASF14
 1149 00aa 04       		.byte	0x4
 1150 00ab 9701     		.2byte	0x197
 1151 00ad 4C000000 		.4byte	0x4c
 1152 00b1 05       		.uleb128 0x5
 1153 00b2 25040000 		.4byte	.LASF15
 1154 00b6 04       		.byte	0x4
 1155 00b7 9801     		.2byte	0x198
 1156 00b9 BD000000 		.4byte	0xbd
 1157 00bd 02       		.uleb128 0x2
 1158 00be 04       		.byte	0x4
 1159 00bf 04       		.byte	0x4
 1160 00c0 BE040000 		.4byte	.LASF16
 1161 00c4 02       		.uleb128 0x2
 1162 00c5 08       		.byte	0x8
 1163 00c6 04       		.byte	0x4
 1164 00c7 10070000 		.4byte	.LASF17
 1165 00cb 02       		.uleb128 0x2
 1166 00cc 01       		.byte	0x1
 1167 00cd 08       		.byte	0x8
 1168 00ce C3050000 		.4byte	.LASF18
 1169 00d2 02       		.uleb128 0x2
 1170 00d3 08       		.byte	0x8
 1171 00d4 04       		.byte	0x4
 1172 00d5 B7050000 		.4byte	.LASF19
 1173 00d9 02       		.uleb128 0x2
 1174 00da 04       		.byte	0x4
 1175 00db 07       		.byte	0x7
 1176 00dc 2D040000 		.4byte	.LASF20
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 26


 1177 00e0 06       		.uleb128 0x6
 1178 00e1 CB000000 		.4byte	0xcb
 1179 00e5 F0000000 		.4byte	0xf0
 1180 00e9 07       		.uleb128 0x7
 1181 00ea D9000000 		.4byte	0xd9
 1182 00ee 17       		.byte	0x17
 1183 00ef 00       		.byte	0
 1184 00f0 08       		.uleb128 0x8
 1185 00f1 8101     		.2byte	0x181
 1186 00f3 05       		.byte	0x5
 1187 00f4 0A       		.byte	0xa
 1188 00f5 1E010000 		.4byte	0x11e
 1189 00f9 09       		.uleb128 0x9
 1190 00fa 52040000 		.4byte	.LASF21
 1191 00fe 05       		.byte	0x5
 1192 00ff 0C       		.byte	0xc
 1193 0100 1E010000 		.4byte	0x11e
 1194 0104 00       		.byte	0
 1195 0105 09       		.uleb128 0x9
 1196 0106 7A060000 		.4byte	.LASF22
 1197 010a 05       		.byte	0x5
 1198 010b 0D       		.byte	0xd
 1199 010c 81000000 		.4byte	0x81
 1200 0110 80       		.byte	0x80
 1201 0111 09       		.uleb128 0x9
 1202 0112 55050000 		.4byte	.LASF23
 1203 0116 05       		.byte	0x5
 1204 0117 0F       		.byte	0xf
 1205 0118 2E010000 		.4byte	0x12e
 1206 011c 81       		.byte	0x81
 1207 011d 00       		.byte	0
 1208 011e 06       		.uleb128 0x6
 1209 011f CB000000 		.4byte	0xcb
 1210 0123 2E010000 		.4byte	0x12e
 1211 0127 07       		.uleb128 0x7
 1212 0128 D9000000 		.4byte	0xd9
 1213 012c 7F       		.byte	0x7f
 1214 012d 00       		.byte	0
 1215 012e 06       		.uleb128 0x6
 1216 012f CB000000 		.4byte	0xcb
 1217 0133 3E010000 		.4byte	0x13e
 1218 0137 07       		.uleb128 0x7
 1219 0138 D9000000 		.4byte	0xd9
 1220 013c FF       		.byte	0xff
 1221 013d 00       		.byte	0
 1222 013e 03       		.uleb128 0x3
 1223 013f 20050000 		.4byte	.LASF24
 1224 0143 05       		.byte	0x5
 1225 0144 10       		.byte	0x10
 1226 0145 F0000000 		.4byte	0xf0
 1227 0149 0A       		.uleb128 0xa
 1228 014a 14       		.byte	0x14
 1229 014b 06       		.byte	0x6
 1230 014c 13       		.byte	0x13
 1231 014d 8E010000 		.4byte	0x18e
 1232 0151 09       		.uleb128 0x9
 1233 0152 31030000 		.4byte	.LASF25
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 27


 1234 0156 06       		.byte	0x6
 1235 0157 14       		.byte	0x14
 1236 0158 BD000000 		.4byte	0xbd
 1237 015c 00       		.byte	0
 1238 015d 09       		.uleb128 0x9
 1239 015e 61030000 		.4byte	.LASF26
 1240 0162 06       		.byte	0x6
 1241 0163 15       		.byte	0x15
 1242 0164 BD000000 		.4byte	0xbd
 1243 0168 04       		.byte	0x4
 1244 0169 09       		.uleb128 0x9
 1245 016a C6010000 		.4byte	.LASF27
 1246 016e 06       		.byte	0x6
 1247 016f 16       		.byte	0x16
 1248 0170 BD000000 		.4byte	0xbd
 1249 0174 08       		.byte	0x8
 1250 0175 09       		.uleb128 0x9
 1251 0176 A1040000 		.4byte	.LASF28
 1252 017a 06       		.byte	0x6
 1253 017b 17       		.byte	0x17
 1254 017c BD000000 		.4byte	0xbd
 1255 0180 0C       		.byte	0xc
 1256 0181 09       		.uleb128 0x9
 1257 0182 7B050000 		.4byte	.LASF29
 1258 0186 06       		.byte	0x6
 1259 0187 18       		.byte	0x18
 1260 0188 81000000 		.4byte	0x81
 1261 018c 10       		.byte	0x10
 1262 018d 00       		.byte	0
 1263 018e 03       		.uleb128 0x3
 1264 018f C5030000 		.4byte	.LASF30
 1265 0193 06       		.byte	0x6
 1266 0194 19       		.byte	0x19
 1267 0195 49010000 		.4byte	0x149
 1268 0199 0A       		.uleb128 0xa
 1269 019a 10       		.byte	0x10
 1270 019b 06       		.byte	0x6
 1271 019c 1B       		.byte	0x1b
 1272 019d D2010000 		.4byte	0x1d2
 1273 01a1 09       		.uleb128 0x9
 1274 01a2 EF020000 		.4byte	.LASF31
 1275 01a6 06       		.byte	0x6
 1276 01a7 1C       		.byte	0x1c
 1277 01a8 BD000000 		.4byte	0xbd
 1278 01ac 00       		.byte	0
 1279 01ad 09       		.uleb128 0x9
 1280 01ae 48020000 		.4byte	.LASF32
 1281 01b2 06       		.byte	0x6
 1282 01b3 1D       		.byte	0x1d
 1283 01b4 BD000000 		.4byte	0xbd
 1284 01b8 04       		.byte	0x4
 1285 01b9 09       		.uleb128 0x9
 1286 01ba 6A050000 		.4byte	.LASF33
 1287 01be 06       		.byte	0x6
 1288 01bf 1E       		.byte	0x1e
 1289 01c0 BD000000 		.4byte	0xbd
 1290 01c4 08       		.byte	0x8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 28


 1291 01c5 09       		.uleb128 0x9
 1292 01c6 27050000 		.4byte	.LASF34
 1293 01ca 06       		.byte	0x6
 1294 01cb 1F       		.byte	0x1f
 1295 01cc BD000000 		.4byte	0xbd
 1296 01d0 0C       		.byte	0xc
 1297 01d1 00       		.byte	0
 1298 01d2 03       		.uleb128 0x3
 1299 01d3 F8060000 		.4byte	.LASF35
 1300 01d7 06       		.byte	0x6
 1301 01d8 20       		.byte	0x20
 1302 01d9 99010000 		.4byte	0x199
 1303 01dd 0A       		.uleb128 0xa
 1304 01de 2C       		.byte	0x2c
 1305 01df 07       		.byte	0x7
 1306 01e0 14       		.byte	0x14
 1307 01e1 0A020000 		.4byte	0x20a
 1308 01e5 0B       		.uleb128 0xb
 1309 01e6 6B657900 		.ascii	"key\000"
 1310 01ea 07       		.byte	0x7
 1311 01eb 15       		.byte	0x15
 1312 01ec 0A020000 		.4byte	0x20a
 1313 01f0 00       		.byte	0
 1314 01f1 09       		.uleb128 0x9
 1315 01f2 C6020000 		.4byte	.LASF36
 1316 01f6 07       		.byte	0x7
 1317 01f7 16       		.byte	0x16
 1318 01f8 0A020000 		.4byte	0x20a
 1319 01fc 14       		.byte	0x14
 1320 01fd 09       		.uleb128 0x9
 1321 01fe 79040000 		.4byte	.LASF37
 1322 0202 07       		.byte	0x7
 1323 0203 17       		.byte	0x17
 1324 0204 A5000000 		.4byte	0xa5
 1325 0208 28       		.byte	0x28
 1326 0209 00       		.byte	0
 1327 020a 06       		.uleb128 0x6
 1328 020b CB000000 		.4byte	0xcb
 1329 020f 1A020000 		.4byte	0x21a
 1330 0213 07       		.uleb128 0x7
 1331 0214 D9000000 		.4byte	0xd9
 1332 0218 13       		.byte	0x13
 1333 0219 00       		.byte	0
 1334 021a 03       		.uleb128 0x3
 1335 021b 13030000 		.4byte	.LASF38
 1336 021f 07       		.byte	0x7
 1337 0220 19       		.byte	0x19
 1338 0221 DD010000 		.4byte	0x1dd
 1339 0225 0A       		.uleb128 0xa
 1340 0226 3C       		.byte	0x3c
 1341 0227 08       		.byte	0x8
 1342 0228 36       		.byte	0x36
 1343 0229 52020000 		.4byte	0x252
 1344 022d 09       		.uleb128 0x9
 1345 022e 1C060000 		.4byte	.LASF39
 1346 0232 08       		.byte	0x8
 1347 0233 37       		.byte	0x37
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 29


 1348 0234 0A020000 		.4byte	0x20a
 1349 0238 00       		.byte	0
 1350 0239 09       		.uleb128 0x9
 1351 023a 94020000 		.4byte	.LASF40
 1352 023e 08       		.byte	0x8
 1353 023f 38       		.byte	0x38
 1354 0240 0A020000 		.4byte	0x20a
 1355 0244 14       		.byte	0x14
 1356 0245 09       		.uleb128 0x9
 1357 0246 50050000 		.4byte	.LASF41
 1358 024a 08       		.byte	0x8
 1359 024b 39       		.byte	0x39
 1360 024c 0A020000 		.4byte	0x20a
 1361 0250 28       		.byte	0x28
 1362 0251 00       		.byte	0
 1363 0252 03       		.uleb128 0x3
 1364 0253 EC010000 		.4byte	.LASF42
 1365 0257 08       		.byte	0x8
 1366 0258 3B       		.byte	0x3b
 1367 0259 25020000 		.4byte	0x225
 1368 025d 0A       		.uleb128 0xa
 1369 025e 20       		.byte	0x20
 1370 025f 08       		.byte	0x8
 1371 0260 3D       		.byte	0x3d
 1372 0261 C6020000 		.4byte	0x2c6
 1373 0265 09       		.uleb128 0x9
 1374 0266 26020000 		.4byte	.LASF43
 1375 026a 08       		.byte	0x8
 1376 026b 3E       		.byte	0x3e
 1377 026c 68000000 		.4byte	0x68
 1378 0270 00       		.byte	0
 1379 0271 0B       		.uleb128 0xb
 1380 0272 62657200 		.ascii	"ber\000"
 1381 0276 08       		.byte	0x8
 1382 0277 3F       		.byte	0x3f
 1383 0278 68000000 		.4byte	0x68
 1384 027c 04       		.byte	0x4
 1385 027d 09       		.uleb128 0x9
 1386 027e 36050000 		.4byte	.LASF44
 1387 0282 08       		.byte	0x8
 1388 0283 40       		.byte	0x40
 1389 0284 68000000 		.4byte	0x68
 1390 0288 08       		.byte	0x8
 1391 0289 09       		.uleb128 0x9
 1392 028a 90010000 		.4byte	.LASF45
 1393 028e 08       		.byte	0x8
 1394 028f 41       		.byte	0x41
 1395 0290 68000000 		.4byte	0x68
 1396 0294 0C       		.byte	0xc
 1397 0295 09       		.uleb128 0x9
 1398 0296 0A050000 		.4byte	.LASF46
 1399 029a 08       		.byte	0x8
 1400 029b 42       		.byte	0x42
 1401 029c 68000000 		.4byte	0x68
 1402 02a0 10       		.byte	0x10
 1403 02a1 09       		.uleb128 0x9
 1404 02a2 05050000 		.4byte	.LASF47
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 30


 1405 02a6 08       		.byte	0x8
 1406 02a7 43       		.byte	0x43
 1407 02a8 68000000 		.4byte	0x68
 1408 02ac 14       		.byte	0x14
 1409 02ad 09       		.uleb128 0x9
 1410 02ae A3010000 		.4byte	.LASF48
 1411 02b2 08       		.byte	0x8
 1412 02b3 44       		.byte	0x44
 1413 02b4 68000000 		.4byte	0x68
 1414 02b8 18       		.byte	0x18
 1415 02b9 09       		.uleb128 0x9
 1416 02ba 85030000 		.4byte	.LASF49
 1417 02be 08       		.byte	0x8
 1418 02bf 45       		.byte	0x45
 1419 02c0 68000000 		.4byte	0x68
 1420 02c4 1C       		.byte	0x1c
 1421 02c5 00       		.byte	0
 1422 02c6 03       		.uleb128 0x3
 1423 02c7 5C050000 		.4byte	.LASF50
 1424 02cb 08       		.byte	0x8
 1425 02cc 47       		.byte	0x47
 1426 02cd 5D020000 		.4byte	0x25d
 1427 02d1 0A       		.uleb128 0xa
 1428 02d2 09       		.byte	0x9
 1429 02d3 08       		.byte	0x8
 1430 02d4 53       		.byte	0x53
 1431 02d5 46030000 		.4byte	0x346
 1432 02d9 09       		.uleb128 0x9
 1433 02da 76020000 		.4byte	.LASF51
 1434 02de 08       		.byte	0x8
 1435 02df 55       		.byte	0x55
 1436 02e0 81000000 		.4byte	0x81
 1437 02e4 00       		.byte	0
 1438 02e5 09       		.uleb128 0x9
 1439 02e6 EF060000 		.4byte	.LASF52
 1440 02ea 08       		.byte	0x8
 1441 02eb 57       		.byte	0x57
 1442 02ec 46030000 		.4byte	0x346
 1443 02f0 01       		.byte	0x1
 1444 02f1 09       		.uleb128 0x9
 1445 02f2 F5050000 		.4byte	.LASF53
 1446 02f6 08       		.byte	0x8
 1447 02f7 59       		.byte	0x59
 1448 02f8 81000000 		.4byte	0x81
 1449 02fc 02       		.byte	0x2
 1450 02fd 09       		.uleb128 0x9
 1451 02fe 0F050000 		.4byte	.LASF54
 1452 0302 08       		.byte	0x8
 1453 0303 5B       		.byte	0x5b
 1454 0304 81000000 		.4byte	0x81
 1455 0308 03       		.byte	0x3
 1456 0309 09       		.uleb128 0x9
 1457 030a BA020000 		.4byte	.LASF55
 1458 030e 08       		.byte	0x8
 1459 030f 5E       		.byte	0x5e
 1460 0310 81000000 		.4byte	0x81
 1461 0314 04       		.byte	0x4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 31


 1462 0315 09       		.uleb128 0x9
 1463 0316 AF060000 		.4byte	.LASF56
 1464 031a 08       		.byte	0x8
 1465 031b 63       		.byte	0x63
 1466 031c 81000000 		.4byte	0x81
 1467 0320 05       		.byte	0x5
 1468 0321 09       		.uleb128 0x9
 1469 0322 92050000 		.4byte	.LASF57
 1470 0326 08       		.byte	0x8
 1471 0327 65       		.byte	0x65
 1472 0328 81000000 		.4byte	0x81
 1473 032c 06       		.byte	0x6
 1474 032d 09       		.uleb128 0x9
 1475 032e 2E060000 		.4byte	.LASF58
 1476 0332 08       		.byte	0x8
 1477 0333 66       		.byte	0x66
 1478 0334 81000000 		.4byte	0x81
 1479 0338 07       		.byte	0x7
 1480 0339 09       		.uleb128 0x9
 1481 033a 6F060000 		.4byte	.LASF59
 1482 033e 08       		.byte	0x8
 1483 033f 67       		.byte	0x67
 1484 0340 81000000 		.4byte	0x81
 1485 0344 08       		.byte	0x8
 1486 0345 00       		.byte	0
 1487 0346 02       		.uleb128 0x2
 1488 0347 01       		.byte	0x1
 1489 0348 02       		.byte	0x2
 1490 0349 C4040000 		.4byte	.LASF60
 1491 034d 03       		.uleb128 0x3
 1492 034e 13010000 		.4byte	.LASF61
 1493 0352 08       		.byte	0x8
 1494 0353 69       		.byte	0x69
 1495 0354 D1020000 		.4byte	0x2d1
 1496 0358 0A       		.uleb128 0xa
 1497 0359 06       		.byte	0x6
 1498 035a 09       		.byte	0x9
 1499 035b 30       		.byte	0x30
 1500 035c 91030000 		.4byte	0x391
 1501 0360 09       		.uleb128 0x9
 1502 0361 9D020000 		.4byte	.LASF62
 1503 0365 09       		.byte	0x9
 1504 0366 32       		.byte	0x32
 1505 0367 8D000000 		.4byte	0x8d
 1506 036b 00       		.byte	0
 1507 036c 09       		.uleb128 0x9
 1508 036d 2C020000 		.4byte	.LASF63
 1509 0371 09       		.byte	0x9
 1510 0372 33       		.byte	0x33
 1511 0373 99000000 		.4byte	0x99
 1512 0377 02       		.byte	0x2
 1513 0378 09       		.uleb128 0x9
 1514 0379 E1060000 		.4byte	.LASF64
 1515 037d 09       		.byte	0x9
 1516 037e 34       		.byte	0x34
 1517 037f 81000000 		.4byte	0x81
 1518 0383 04       		.byte	0x4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 32


 1519 0384 09       		.uleb128 0x9
 1520 0385 56000000 		.4byte	.LASF65
 1521 0389 09       		.byte	0x9
 1522 038a 35       		.byte	0x35
 1523 038b 81000000 		.4byte	0x81
 1524 038f 05       		.byte	0x5
 1525 0390 00       		.byte	0
 1526 0391 03       		.uleb128 0x3
 1527 0392 42020000 		.4byte	.LASF66
 1528 0396 09       		.byte	0x9
 1529 0397 38       		.byte	0x38
 1530 0398 9C030000 		.4byte	0x39c
 1531 039c 0C       		.uleb128 0xc
 1532 039d 58030000 		.4byte	0x358
 1533 03a1 0A       		.uleb128 0xa
 1534 03a2 1C       		.byte	0x1c
 1535 03a3 09       		.byte	0x9
 1536 03a4 3B       		.byte	0x3b
 1537 03a5 C2030000 		.4byte	0x3c2
 1538 03a9 09       		.uleb128 0x9
 1539 03aa 4E030000 		.4byte	.LASF67
 1540 03ae 09       		.byte	0x9
 1541 03af 3D       		.byte	0x3d
 1542 03b0 C2030000 		.4byte	0x3c2
 1543 03b4 00       		.byte	0
 1544 03b5 09       		.uleb128 0x9
 1545 03b6 86020000 		.4byte	.LASF68
 1546 03ba 09       		.byte	0x9
 1547 03bb 3E       		.byte	0x3e
 1548 03bc E0000000 		.4byte	0xe0
 1549 03c0 04       		.byte	0x4
 1550 03c1 00       		.byte	0
 1551 03c2 0D       		.uleb128 0xd
 1552 03c3 04       		.byte	0x4
 1553 03c4 52020000 		.4byte	0x252
 1554 03c8 03       		.uleb128 0x3
 1555 03c9 EF030000 		.4byte	.LASF69
 1556 03cd 09       		.byte	0x9
 1557 03ce 40       		.byte	0x40
 1558 03cf A1030000 		.4byte	0x3a1
 1559 03d3 0A       		.uleb128 0xa
 1560 03d4 68       		.byte	0x68
 1561 03d5 09       		.byte	0x9
 1562 03d6 46       		.byte	0x46
 1563 03d7 F4030000 		.4byte	0x3f4
 1564 03db 09       		.uleb128 0x9
 1565 03dc 59030000 		.4byte	.LASF70
 1566 03e0 09       		.byte	0x9
 1567 03e1 4B       		.byte	0x4b
 1568 03e2 F4030000 		.4byte	0x3f4
 1569 03e6 00       		.byte	0
 1570 03e7 09       		.uleb128 0x9
 1571 03e8 46030000 		.4byte	.LASF71
 1572 03ec 09       		.byte	0x9
 1573 03ed 4C       		.byte	0x4c
 1574 03ee 68000000 		.4byte	0x68
 1575 03f2 64       		.byte	0x64
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 33


 1576 03f3 00       		.byte	0
 1577 03f4 06       		.uleb128 0x6
 1578 03f5 CB000000 		.4byte	0xcb
 1579 03f9 04040000 		.4byte	0x404
 1580 03fd 07       		.uleb128 0x7
 1581 03fe D9000000 		.4byte	0xd9
 1582 0402 63       		.byte	0x63
 1583 0403 00       		.byte	0
 1584 0404 03       		.uleb128 0x3
 1585 0405 BC060000 		.4byte	.LASF72
 1586 0409 09       		.byte	0x9
 1587 040a 52       		.byte	0x52
 1588 040b D3030000 		.4byte	0x3d3
 1589 040f 0E       		.uleb128 0xe
 1590 0410 4B060000 		.4byte	.LASF77
 1591 0414 01       		.byte	0x1
 1592 0415 06       		.byte	0x6
 1593 0416 8E010000 		.4byte	0x18e
 1594 041a 00000000 		.4byte	.LFB64
 1595 041e 34010000 		.4byte	.LFE64-.LFB64
 1596 0422 01       		.uleb128 0x1
 1597 0423 9C       		.byte	0x9c
 1598 0424 99040000 		.4byte	0x499
 1599 0428 0F       		.uleb128 0xf
 1600 0429 2A010000 		.4byte	.LASF73
 1601 042d 01       		.byte	0x1
 1602 042e 08       		.byte	0x8
 1603 042f 8E010000 		.4byte	0x18e
 1604 0433 02       		.uleb128 0x2
 1605 0434 91       		.byte	0x91
 1606 0435 54       		.sleb128 -44
 1607 0436 0F       		.uleb128 0xf
 1608 0437 14020000 		.4byte	.LASF74
 1609 043b 01       		.byte	0x1
 1610 043c 15       		.byte	0x15
 1611 043d 99040000 		.4byte	0x499
 1612 0441 03       		.uleb128 0x3
 1613 0442 91       		.byte	0x91
 1614 0443 BC7F     		.sleb128 -68
 1615 0445 0F       		.uleb128 0xf
 1616 0446 02060000 		.4byte	.LASF75
 1617 044a 01       		.byte	0x1
 1618 044b 31       		.byte	0x31
 1619 044c BD000000 		.4byte	0xbd
 1620 0450 02       		.uleb128 0x2
 1621 0451 91       		.byte	0x91
 1622 0452 68       		.sleb128 -24
 1623 0453 10       		.uleb128 0x10
 1624 0454 26000000 		.4byte	.LBB2
 1625 0458 7A000000 		.4byte	.LBE2-.LBB2
 1626 045c 11       		.uleb128 0x11
 1627 045d 6300     		.ascii	"c\000"
 1628 045f 01       		.byte	0x1
 1629 0460 17       		.byte	0x17
 1630 0461 81000000 		.4byte	0x81
 1631 0465 02       		.uleb128 0x2
 1632 0466 91       		.byte	0x91
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 34


 1633 0467 6F       		.sleb128 -17
 1634 0468 10       		.uleb128 0x10
 1635 0469 2E000000 		.4byte	.LBB3
 1636 046d 60000000 		.4byte	.LBE3-.LBB3
 1637 0471 0F       		.uleb128 0xf
 1638 0472 3B050000 		.4byte	.LASF76
 1639 0476 01       		.byte	0x1
 1640 0477 1A       		.byte	0x1a
 1641 0478 A9040000 		.4byte	0x4a9
 1642 047c 03       		.uleb128 0x3
 1643 047d 91       		.byte	0x91
 1644 047e 907F     		.sleb128 -112
 1645 0480 10       		.uleb128 0x10
 1646 0481 38000000 		.4byte	.LBB4
 1647 0485 30000000 		.4byte	.LBE4-.LBB4
 1648 0489 11       		.uleb128 0x11
 1649 048a 6900     		.ascii	"i\000"
 1650 048c 01       		.byte	0x1
 1651 048d 1E       		.byte	0x1e
 1652 048e 8D000000 		.4byte	0x8d
 1653 0492 02       		.uleb128 0x2
 1654 0493 91       		.byte	0x91
 1655 0494 6C       		.sleb128 -20
 1656 0495 00       		.byte	0
 1657 0496 00       		.byte	0
 1658 0497 00       		.byte	0
 1659 0498 00       		.byte	0
 1660 0499 06       		.uleb128 0x6
 1661 049a BD000000 		.4byte	0xbd
 1662 049e A9040000 		.4byte	0x4a9
 1663 04a2 07       		.uleb128 0x7
 1664 04a3 D9000000 		.4byte	0xd9
 1665 04a7 05       		.byte	0x5
 1666 04a8 00       		.byte	0
 1667 04a9 06       		.uleb128 0x6
 1668 04aa A5000000 		.4byte	0xa5
 1669 04ae B9040000 		.4byte	0x4b9
 1670 04b2 07       		.uleb128 0x7
 1671 04b3 D9000000 		.4byte	0xd9
 1672 04b7 0A       		.byte	0xa
 1673 04b8 00       		.byte	0
 1674 04b9 0E       		.uleb128 0xe
 1675 04ba CC020000 		.4byte	.LASF78
 1676 04be 01       		.byte	0x1
 1677 04bf 3E       		.byte	0x3e
 1678 04c0 D2010000 		.4byte	0x1d2
 1679 04c4 00000000 		.4byte	.LFB65
 1680 04c8 98010000 		.4byte	.LFE65-.LFB65
 1681 04cc 01       		.uleb128 0x1
 1682 04cd 9C       		.byte	0x9c
 1683 04ce 2E050000 		.4byte	0x52e
 1684 04d2 0F       		.uleb128 0xf
 1685 04d3 98040000 		.4byte	.LASF79
 1686 04d7 01       		.byte	0x1
 1687 04d8 40       		.byte	0x40
 1688 04d9 D2010000 		.4byte	0x1d2
 1689 04dd 02       		.uleb128 0x2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 35


 1690 04de 91       		.byte	0x91
 1691 04df 5C       		.sleb128 -36
 1692 04e0 0F       		.uleb128 0xf
 1693 04e1 14020000 		.4byte	.LASF74
 1694 04e5 01       		.byte	0x1
 1695 04e6 41       		.byte	0x41
 1696 04e7 99040000 		.4byte	0x499
 1697 04eb 02       		.uleb128 0x2
 1698 04ec 91       		.byte	0x91
 1699 04ed 44       		.sleb128 -60
 1700 04ee 0F       		.uleb128 0xf
 1701 04ef 3B050000 		.4byte	.LASF76
 1702 04f3 01       		.byte	0x1
 1703 04f4 42       		.byte	0x42
 1704 04f5 A9040000 		.4byte	0x4a9
 1705 04f9 03       		.uleb128 0x3
 1706 04fa 91       		.byte	0x91
 1707 04fb 987F     		.sleb128 -104
 1708 04fd 12       		.uleb128 0x12
 1709 04fe 1A000000 		.4byte	.LBB5
 1710 0502 30000000 		.4byte	.LBE5-.LBB5
 1711 0506 17050000 		.4byte	0x517
 1712 050a 11       		.uleb128 0x11
 1713 050b 6900     		.ascii	"i\000"
 1714 050d 01       		.byte	0x1
 1715 050e 4C       		.byte	0x4c
 1716 050f 8D000000 		.4byte	0x8d
 1717 0513 02       		.uleb128 0x2
 1718 0514 91       		.byte	0x91
 1719 0515 6E       		.sleb128 -18
 1720 0516 00       		.byte	0
 1721 0517 10       		.uleb128 0x10
 1722 0518 8E000000 		.4byte	.LBB6
 1723 051c 30000000 		.4byte	.LBE6-.LBB6
 1724 0520 11       		.uleb128 0x11
 1725 0521 6900     		.ascii	"i\000"
 1726 0523 01       		.byte	0x1
 1727 0524 59       		.byte	0x59
 1728 0525 8D000000 		.4byte	0x8d
 1729 0529 02       		.uleb128 0x2
 1730 052a 91       		.byte	0x91
 1731 052b 6C       		.sleb128 -20
 1732 052c 00       		.byte	0
 1733 052d 00       		.byte	0
 1734 052e 13       		.uleb128 0x13
 1735 052f 6F030000 		.4byte	.LASF82
 1736 0533 01       		.byte	0x1
 1737 0534 74       		.byte	0x74
 1738 0535 D2010000 		.4byte	0x1d2
 1739 0539 00000000 		.4byte	.LFB66
 1740 053d C4000000 		.4byte	.LFE66-.LFB66
 1741 0541 01       		.uleb128 0x1
 1742 0542 9C       		.byte	0x9c
 1743 0543 64050000 		.4byte	0x564
 1744 0547 14       		.uleb128 0x14
 1745 0548 2A010000 		.4byte	.LASF73
 1746 054c 01       		.byte	0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 36


 1747 054d 74       		.byte	0x74
 1748 054e 8E010000 		.4byte	0x18e
 1749 0552 02       		.uleb128 0x2
 1750 0553 91       		.byte	0x91
 1751 0554 74       		.sleb128 -12
 1752 0555 0F       		.uleb128 0xf
 1753 0556 98040000 		.4byte	.LASF79
 1754 055a 01       		.byte	0x1
 1755 055b 76       		.byte	0x76
 1756 055c D2010000 		.4byte	0x1d2
 1757 0560 02       		.uleb128 0x2
 1758 0561 91       		.byte	0x91
 1759 0562 50       		.sleb128 -48
 1760 0563 00       		.byte	0
 1761 0564 15       		.uleb128 0x15
 1762 0565 4F000000 		.4byte	.LASF80
 1763 0569 01       		.byte	0x1
 1764 056a 86       		.byte	0x86
 1765 056b 00000000 		.4byte	.LFB67
 1766 056f 74000000 		.4byte	.LFE67-.LFB67
 1767 0573 01       		.uleb128 0x1
 1768 0574 9C       		.byte	0x9c
 1769 0575 AA050000 		.4byte	0x5aa
 1770 0579 16       		.uleb128 0x16
 1771 057a 6100     		.ascii	"a\000"
 1772 057c 01       		.byte	0x1
 1773 057d 86       		.byte	0x86
 1774 057e AA050000 		.4byte	0x5aa
 1775 0582 02       		.uleb128 0x2
 1776 0583 91       		.byte	0x91
 1777 0584 6C       		.sleb128 -20
 1778 0585 16       		.uleb128 0x16
 1779 0586 6E00     		.ascii	"n\000"
 1780 0588 01       		.byte	0x1
 1781 0589 86       		.byte	0x86
 1782 058a A5000000 		.4byte	0xa5
 1783 058e 02       		.uleb128 0x2
 1784 058f 91       		.byte	0x91
 1785 0590 68       		.sleb128 -24
 1786 0591 11       		.uleb128 0x11
 1787 0592 6900     		.ascii	"i\000"
 1788 0594 01       		.byte	0x1
 1789 0595 87       		.byte	0x87
 1790 0596 A5000000 		.4byte	0xa5
 1791 059a 02       		.uleb128 0x2
 1792 059b 91       		.byte	0x91
 1793 059c 74       		.sleb128 -12
 1794 059d 11       		.uleb128 0x11
 1795 059e 6A00     		.ascii	"j\000"
 1796 05a0 01       		.byte	0x1
 1797 05a1 87       		.byte	0x87
 1798 05a2 A5000000 		.4byte	0xa5
 1799 05a6 02       		.uleb128 0x2
 1800 05a7 91       		.byte	0x91
 1801 05a8 70       		.sleb128 -16
 1802 05a9 00       		.byte	0
 1803 05aa 0D       		.uleb128 0xd
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 37


 1804 05ab 04       		.byte	0x4
 1805 05ac A5000000 		.4byte	0xa5
 1806 05b0 17       		.uleb128 0x17
 1807 05b1 19050000 		.4byte	.LASF81
 1808 05b5 01       		.byte	0x1
 1809 05b6 92       		.byte	0x92
 1810 05b7 00000000 		.4byte	.LFB68
 1811 05bb 28000000 		.4byte	.LFE68-.LFB68
 1812 05bf 01       		.uleb128 0x1
 1813 05c0 9C       		.byte	0x9c
 1814 05c1 EA050000 		.4byte	0x5ea
 1815 05c5 16       		.uleb128 0x16
 1816 05c6 7000     		.ascii	"p\000"
 1817 05c8 01       		.byte	0x1
 1818 05c9 92       		.byte	0x92
 1819 05ca AA050000 		.4byte	0x5aa
 1820 05ce 02       		.uleb128 0x2
 1821 05cf 91       		.byte	0x91
 1822 05d0 6C       		.sleb128 -20
 1823 05d1 16       		.uleb128 0x16
 1824 05d2 7100     		.ascii	"q\000"
 1825 05d4 01       		.byte	0x1
 1826 05d5 92       		.byte	0x92
 1827 05d6 AA050000 		.4byte	0x5aa
 1828 05da 02       		.uleb128 0x2
 1829 05db 91       		.byte	0x91
 1830 05dc 68       		.sleb128 -24
 1831 05dd 11       		.uleb128 0x11
 1832 05de 7400     		.ascii	"t\000"
 1833 05e0 01       		.byte	0x1
 1834 05e1 93       		.byte	0x93
 1835 05e2 A5000000 		.4byte	0xa5
 1836 05e6 02       		.uleb128 0x2
 1837 05e7 91       		.byte	0x91
 1838 05e8 74       		.sleb128 -12
 1839 05e9 00       		.byte	0
 1840 05ea 13       		.uleb128 0x13
 1841 05eb AC020000 		.4byte	.LASF83
 1842 05ef 01       		.byte	0x1
 1843 05f0 9B       		.byte	0x9b
 1844 05f1 A5000000 		.4byte	0xa5
 1845 05f5 00000000 		.4byte	.LFB69
 1846 05f9 84000000 		.4byte	.LFE69-.LFB69
 1847 05fd 01       		.uleb128 0x1
 1848 05fe 9C       		.byte	0x9c
 1849 05ff 2C060000 		.4byte	0x62c
 1850 0603 14       		.uleb128 0x14
 1851 0604 80020000 		.4byte	.LASF84
 1852 0608 01       		.byte	0x1
 1853 0609 9B       		.byte	0x9b
 1854 060a AA050000 		.4byte	0x5aa
 1855 060e 02       		.uleb128 0x2
 1856 060f 91       		.byte	0x91
 1857 0610 64       		.sleb128 -28
 1858 0611 16       		.uleb128 0x16
 1859 0612 6E00     		.ascii	"n\000"
 1860 0614 01       		.byte	0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 38


 1861 0615 9B       		.byte	0x9b
 1862 0616 A5000000 		.4byte	0xa5
 1863 061a 02       		.uleb128 0x2
 1864 061b 91       		.byte	0x91
 1865 061c 60       		.sleb128 -32
 1866 061d 0F       		.uleb128 0xf
 1867 061e 51010000 		.4byte	.LASF85
 1868 0622 01       		.byte	0x1
 1869 0623 9D       		.byte	0x9d
 1870 0624 A5000000 		.4byte	0xa5
 1871 0628 02       		.uleb128 0x2
 1872 0629 91       		.byte	0x91
 1873 062a 6C       		.sleb128 -20
 1874 062b 00       		.byte	0
 1875 062c 0E       		.uleb128 0xe
 1876 062d FA030000 		.4byte	.LASF86
 1877 0631 01       		.byte	0x1
 1878 0632 AD       		.byte	0xad
 1879 0633 3E010000 		.4byte	0x13e
 1880 0637 00000000 		.4byte	.LFB70
 1881 063b BC000000 		.4byte	.LFE70-.LFB70
 1882 063f 01       		.uleb128 0x1
 1883 0640 9C       		.byte	0x9c
 1884 0641 64060000 		.4byte	0x664
 1885 0645 0F       		.uleb128 0xf
 1886 0646 32010000 		.4byte	.LASF87
 1887 064a 01       		.byte	0x1
 1888 064b AF       		.byte	0xaf
 1889 064c 3E010000 		.4byte	0x13e
 1890 0650 03       		.uleb128 0x3
 1891 0651 91       		.byte	0x91
 1892 0652 E47C     		.sleb128 -412
 1893 0654 0F       		.uleb128 0xf
 1894 0655 2A010000 		.4byte	.LASF73
 1895 0659 01       		.byte	0x1
 1896 065a B3       		.byte	0xb3
 1897 065b 8E010000 		.4byte	0x18e
 1898 065f 03       		.uleb128 0x3
 1899 0660 91       		.byte	0x91
 1900 0661 D07C     		.sleb128 -432
 1901 0663 00       		.byte	0
 1902 0664 0E       		.uleb128 0xe
 1903 0665 E0040000 		.4byte	.LASF88
 1904 0669 01       		.byte	0x1
 1905 066a C2       		.byte	0xc2
 1906 066b 3E010000 		.4byte	0x13e
 1907 066f 00000000 		.4byte	.LFB71
 1908 0673 04010000 		.4byte	.LFE71-.LFB71
 1909 0677 01       		.uleb128 0x1
 1910 0678 9C       		.byte	0x9c
 1911 0679 9C060000 		.4byte	0x69c
 1912 067d 0F       		.uleb128 0xf
 1913 067e 32010000 		.4byte	.LASF87
 1914 0682 01       		.byte	0x1
 1915 0683 C4       		.byte	0xc4
 1916 0684 3E010000 		.4byte	0x13e
 1917 0688 03       		.uleb128 0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 39


 1918 0689 91       		.byte	0x91
 1919 068a E47C     		.sleb128 -412
 1920 068c 0F       		.uleb128 0xf
 1921 068d 98040000 		.4byte	.LASF79
 1922 0691 01       		.byte	0x1
 1923 0692 C8       		.byte	0xc8
 1924 0693 D2010000 		.4byte	0x1d2
 1925 0697 03       		.uleb128 0x3
 1926 0698 91       		.byte	0x91
 1927 0699 D47C     		.sleb128 -428
 1928 069b 00       		.byte	0
 1929 069c 18       		.uleb128 0x18
 1930 069d 44010000 		.4byte	.LASF89
 1931 06a1 0A       		.byte	0xa
 1932 06a2 1207     		.2byte	0x712
 1933 06a4 A8060000 		.4byte	0x6a8
 1934 06a8 0C       		.uleb128 0xc
 1935 06a9 76000000 		.4byte	0x76
 1936 06ad 19       		.uleb128 0x19
 1937 06ae A4050000 		.4byte	.LASF90
 1938 06b2 0B       		.byte	0xb
 1939 06b3 25       		.byte	0x25
 1940 06b4 F4030000 		.4byte	0x3f4
 1941 06b8 05       		.uleb128 0x5
 1942 06b9 03       		.byte	0x3
 1943 06ba 00000000 		.4byte	level_sensor_inbox
 1944 06be 19       		.uleb128 0x19
 1945 06bf 81060000 		.4byte	.LASF91
 1946 06c3 0B       		.byte	0xb
 1947 06c4 27       		.byte	0x27
 1948 06c5 46030000 		.4byte	0x346
 1949 06c9 05       		.uleb128 0x5
 1950 06ca 03       		.byte	0x3
 1951 06cb 00000000 		.4byte	level_sensor_enabled
 1952 06cf 19       		.uleb128 0x19
 1953 06d0 25070000 		.4byte	.LASF92
 1954 06d4 0C       		.byte	0xc
 1955 06d5 0F       		.byte	0xf
 1956 06d6 F4030000 		.4byte	0x3f4
 1957 06da 05       		.uleb128 0x5
 1958 06db 03       		.byte	0x3
 1959 06dc 00000000 		.4byte	downstream_level_sensor_inbox
 1960 06e0 19       		.uleb128 0x19
 1961 06e1 CF030000 		.4byte	.LASF93
 1962 06e5 0C       		.byte	0xc
 1963 06e6 11       		.byte	0x11
 1964 06e7 46030000 		.4byte	0x346
 1965 06eb 05       		.uleb128 0x5
 1966 06ec 03       		.byte	0x3
 1967 06ed 00000000 		.4byte	downstream_level_sensor_enabled
 1968 06f1 19       		.uleb128 0x19
 1969 06f2 DD010000 		.4byte	.LASF94
 1970 06f6 0D       		.byte	0xd
 1971 06f7 2A       		.byte	0x2a
 1972 06f8 B1000000 		.4byte	0xb1
 1973 06fc 05       		.uleb128 0x5
 1974 06fd 03       		.byte	0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 40


 1975 06fe 00000000 		.4byte	valve_diameter
 1976 0702 06       		.uleb128 0x6
 1977 0703 CB000000 		.4byte	0xcb
 1978 0707 12070000 		.4byte	0x712
 1979 070b 07       		.uleb128 0x7
 1980 070c D9000000 		.4byte	0xd9
 1981 0710 09       		.byte	0x9
 1982 0711 00       		.byte	0
 1983 0712 19       		.uleb128 0x19
 1984 0713 1A040000 		.4byte	.LASF95
 1985 0717 0D       		.byte	0xd
 1986 0718 2B       		.byte	0x2b
 1987 0719 02070000 		.4byte	0x702
 1988 071d 05       		.uleb128 0x5
 1989 071e 03       		.byte	0x3
 1990 071f 00000000 		.4byte	valve_type
 1991 0723 19       		.uleb128 0x19
 1992 0724 61060000 		.4byte	.LASF96
 1993 0728 0D       		.byte	0xd
 1994 0729 30       		.byte	0x30
 1995 072a 81000000 		.4byte	0x81
 1996 072e 05       		.uleb128 0x5
 1997 072f 03       		.byte	0x3
 1998 0730 00000000 		.4byte	valve_enabled
 1999 0734 19       		.uleb128 0x19
 2000 0735 D5060000 		.4byte	.LASF97
 2001 0739 0D       		.byte	0xd
 2002 073a 31       		.byte	0x31
 2003 073b F4030000 		.4byte	0x3f4
 2004 073f 05       		.uleb128 0x5
 2005 0740 03       		.byte	0x3
 2006 0741 00000000 		.4byte	valve_inbox
 2007 0745 19       		.uleb128 0x19
 2008 0746 3F000000 		.4byte	.LASF98
 2009 074a 07       		.byte	0x7
 2010 074b 11       		.byte	0x11
 2011 074c 46030000 		.4byte	0x346
 2012 0750 05       		.uleb128 0x5
 2013 0751 03       		.byte	0x3
 2014 0752 00000000 		.4byte	buffer_overflow
 2015 0756 19       		.uleb128 0x19
 2016 0757 08040000 		.4byte	.LASF99
 2017 075b 07       		.byte	0x7
 2018 075c 22       		.byte	0x22
 2019 075d 8D000000 		.4byte	0x8d
 2020 0761 05       		.uleb128 0x5
 2021 0762 03       		.byte	0x3
 2022 0763 00000000 		.4byte	dataPointsInStack
 2023 0767 19       		.uleb128 0x19
 2024 0768 96060000 		.4byte	.LASF100
 2025 076c 07       		.byte	0x7
 2026 076d 23       		.byte	0x23
 2027 076e 8D000000 		.4byte	0x8d
 2028 0772 05       		.uleb128 0x5
 2029 0773 03       		.byte	0x3
 2030 0774 00000000 		.4byte	dataPointsInStackDesired
 2031 0778 06       		.uleb128 0x6
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 41


 2032 0779 1A020000 		.4byte	0x21a
 2033 077d 88070000 		.4byte	0x788
 2034 0781 07       		.uleb128 0x7
 2035 0782 D9000000 		.4byte	0xd9
 2036 0786 95       		.byte	0x95
 2037 0787 00       		.byte	0
 2038 0788 19       		.uleb128 0x19
 2039 0789 41030000 		.4byte	.LASF101
 2040 078d 07       		.byte	0x7
 2041 078e 24       		.byte	0x24
 2042 078f 78070000 		.4byte	0x778
 2043 0793 05       		.uleb128 0x5
 2044 0794 03       		.byte	0x3
 2045 0795 00000000 		.4byte	data
 2046 0799 19       		.uleb128 0x19
 2047 079a 43070000 		.4byte	.LASF102
 2048 079e 08       		.byte	0x8
 2049 079f 20       		.byte	0x20
 2050 07a0 81000000 		.4byte	0x81
 2051 07a4 05       		.uleb128 0x5
 2052 07a5 03       		.byte	0x3
 2053 07a6 00000000 		.4byte	modem_state
 2054 07aa 19       		.uleb128 0x19
 2055 07ab AE030000 		.4byte	.LASF103
 2056 07af 08       		.byte	0x8
 2057 07b0 6C       		.byte	0x6c
 2058 07b1 A5000000 		.4byte	0xa5
 2059 07b5 05       		.uleb128 0x5
 2060 07b6 03       		.byte	0x3
 2061 07b7 00000000 		.4byte	modem_start_time_stamp
 2062 07bb 19       		.uleb128 0x19
 2063 07bc 4E030000 		.4byte	.LASF67
 2064 07c0 08       		.byte	0x8
 2065 07c1 6D       		.byte	0x6d
 2066 07c2 52020000 		.4byte	0x252
 2067 07c6 05       		.uleb128 0x5
 2068 07c7 03       		.byte	0x3
 2069 07c8 00000000 		.4byte	modem_info
 2070 07cc 19       		.uleb128 0x19
 2071 07cd 6A010000 		.4byte	.LASF104
 2072 07d1 08       		.byte	0x8
 2073 07d2 6E       		.byte	0x6e
 2074 07d3 C6020000 		.4byte	0x2c6
 2075 07d7 05       		.uleb128 0x5
 2076 07d8 03       		.byte	0x3
 2077 07d9 00000000 		.4byte	modem_stats
 2078 07dd 19       		.uleb128 0x19
 2079 07de 83040000 		.4byte	.LASF105
 2080 07e2 08       		.byte	0x8
 2081 07e3 6F       		.byte	0x6f
 2082 07e4 4D030000 		.4byte	0x34d
 2083 07e8 05       		.uleb128 0x5
 2084 07e9 03       		.byte	0x3
 2085 07ea 00000000 		.4byte	updatable_parameters
 2086 07ee 19       		.uleb128 0x19
 2087 07ef 03030000 		.4byte	.LASF106
 2088 07f3 0E       		.byte	0xe
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 42


 2089 07f4 07       		.byte	0x7
 2090 07f5 81000000 		.4byte	0x81
 2091 07f9 05       		.uleb128 0x5
 2092 07fa 03       		.byte	0x3
 2093 07fb 00000000 		.4byte	App_LED_enabled
 2094 07ff 19       		.uleb128 0x19
 2095 0800 17070000 		.4byte	.LASF107
 2096 0804 0E       		.byte	0xe
 2097 0805 08       		.byte	0x8
 2098 0806 F4030000 		.4byte	0x3f4
 2099 080a 05       		.uleb128 0x5
 2100 080b 03       		.byte	0x3
 2101 080c 00000000 		.4byte	app_led_inbox
 2102 0810 06       		.uleb128 0x6
 2103 0811 CB000000 		.4byte	0xcb
 2104 0815 21080000 		.4byte	0x821
 2105 0819 1A       		.uleb128 0x1a
 2106 081a D9000000 		.4byte	0xd9
 2107 081e 0F27     		.2byte	0x270f
 2108 0820 00       		.byte	0
 2109 0821 19       		.uleb128 0x19
 2110 0822 03070000 		.4byte	.LASF108
 2111 0826 09       		.byte	0x9
 2112 0827 1A       		.byte	0x1a
 2113 0828 10080000 		.4byte	0x810
 2114 082c 05       		.uleb128 0x5
 2115 082d 03       		.byte	0x3
 2116 082e 00000000 		.4byte	http_request
 2117 0832 19       		.uleb128 0x19
 2118 0833 CB060000 		.4byte	.LASF109
 2119 0837 09       		.byte	0x9
 2120 0838 1B       		.byte	0x1b
 2121 0839 10080000 		.4byte	0x810
 2122 083d 05       		.uleb128 0x5
 2123 083e 03       		.byte	0x3
 2124 083f 00000000 		.4byte	http_body
 2125 0843 06       		.uleb128 0x6
 2126 0844 CB000000 		.4byte	0xcb
 2127 0848 53080000 		.4byte	0x853
 2128 084c 07       		.uleb128 0x7
 2129 084d D9000000 		.4byte	0xd9
 2130 0851 C7       		.byte	0xc7
 2131 0852 00       		.byte	0
 2132 0853 19       		.uleb128 0x19
 2133 0854 E0050000 		.4byte	.LASF110
 2134 0858 09       		.byte	0x9
 2135 0859 1C       		.byte	0x1c
 2136 085a 43080000 		.4byte	0x843
 2137 085e 05       		.uleb128 0x5
 2138 085f 03       		.byte	0x3
 2139 0860 00000000 		.4byte	http_route
 2140 0864 19       		.uleb128 0x19
 2141 0865 44050000 		.4byte	.LASF111
 2142 0869 09       		.byte	0x9
 2143 086a 43       		.byte	0x43
 2144 086b C8030000 		.4byte	0x3c8
 2145 086f 05       		.uleb128 0x5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 43


 2146 0870 03       		.byte	0x3
 2147 0871 00000000 		.4byte	system_info
 2148 0875 19       		.uleb128 0x19
 2149 0876 F5040000 		.4byte	.LASF112
 2150 087a 09       		.byte	0x9
 2151 087b 55       		.byte	0x55
 2152 087c 04040000 		.4byte	0x404
 2153 0880 05       		.uleb128 0x5
 2154 0881 03       		.byte	0x3
 2155 0882 00000000 		.4byte	system_settings
 2156 0886 19       		.uleb128 0x19
 2157 0887 37010000 		.4byte	.LASF113
 2158 088b 09       		.byte	0x9
 2159 088c 71       		.byte	0x71
 2160 088d 91030000 		.4byte	0x391
 2161 0891 05       		.uleb128 0x5
 2162 0892 03       		.byte	0x3
 2163 0893 00000000 		.4byte	alarmMeasure
 2164 0897 19       		.uleb128 0x19
 2165 0898 95010000 		.4byte	.LASF114
 2166 089c 09       		.byte	0x9
 2167 089d 72       		.byte	0x72
 2168 089e 81000000 		.4byte	0x81
 2169 08a2 05       		.uleb128 0x5
 2170 08a3 03       		.byte	0x3
 2171 08a4 00000000 		.4byte	timeToMeasure
 2172 08a8 19       		.uleb128 0x19
 2173 08a9 E5020000 		.4byte	.LASF115
 2174 08ad 09       		.byte	0x9
 2175 08ae 73       		.byte	0x73
 2176 08af 91030000 		.4byte	0x391
 2177 08b3 05       		.uleb128 0x5
 2178 08b4 03       		.byte	0x3
 2179 08b5 00000000 		.4byte	alarmSync
 2180 08b9 19       		.uleb128 0x19
 2181 08ba BB010000 		.4byte	.LASF116
 2182 08be 09       		.byte	0x9
 2183 08bf 74       		.byte	0x74
 2184 08c0 81000000 		.4byte	0x81
 2185 08c4 05       		.uleb128 0x5
 2186 08c5 03       		.byte	0x3
 2187 08c6 00000000 		.4byte	timeToSync
 2188 08ca 19       		.uleb128 0x19
 2189 08cb 62040000 		.4byte	.LASF117
 2190 08cf 09       		.byte	0x9
 2191 08d0 75       		.byte	0x75
 2192 08d1 81000000 		.4byte	0x81
 2193 08d5 05       		.uleb128 0x5
 2194 08d6 03       		.byte	0x3
 2195 08d7 00000000 		.4byte	timeToSycnRemoteParams
 2196 08db 1B       		.uleb128 0x1b
 2197 08dc 68657900 		.ascii	"hey\000"
 2198 08e0 09       		.byte	0x9
 2199 08e1 76       		.byte	0x76
 2200 08e2 81000000 		.4byte	0x81
 2201 08e6 05       		.uleb128 0x5
 2202 08e7 03       		.byte	0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 44


 2203 08e8 00000000 		.4byte	hey
 2204 08ec 19       		.uleb128 0x19
 2205 08ed A2030000 		.4byte	.LASF118
 2206 08f1 09       		.byte	0x9
 2207 08f2 7A       		.byte	0x7a
 2208 08f3 91030000 		.4byte	0x391
 2209 08f7 05       		.uleb128 0x5
 2210 08f8 03       		.byte	0x3
 2211 08f9 00000000 		.4byte	alarmAppLED
 2212 08fd 19       		.uleb128 0x19
 2213 08fe 63020000 		.4byte	.LASF119
 2214 0902 09       		.byte	0x9
 2215 0903 7B       		.byte	0x7b
 2216 0904 81000000 		.4byte	0x81
 2217 0908 05       		.uleb128 0x5
 2218 0909 03       		.byte	0x3
 2219 090a 00000000 		.4byte	timeToAppLED
 2220 090e 19       		.uleb128 0x19
 2221 090f 81050000 		.4byte	.LASF120
 2222 0913 09       		.byte	0x9
 2223 0914 7D       		.byte	0x7d
 2224 0915 91030000 		.4byte	0x391
 2225 0919 05       		.uleb128 0x5
 2226 091a 03       		.byte	0x3
 2227 091b 00000000 		.4byte	alarmLevelSensor
 2228 091f 19       		.uleb128 0x19
 2229 0920 58010000 		.4byte	.LASF121
 2230 0924 09       		.byte	0x9
 2231 0925 7E       		.byte	0x7e
 2232 0926 81000000 		.4byte	0x81
 2233 092a 05       		.uleb128 0x5
 2234 092b 03       		.byte	0x3
 2235 092c 00000000 		.4byte	timetoLevelSensor
 2236 0930 19       		.uleb128 0x19
 2237 0931 F9010000 		.4byte	.LASF122
 2238 0935 09       		.byte	0x9
 2239 0936 80       		.byte	0x80
 2240 0937 91030000 		.4byte	0x391
 2241 093b 05       		.uleb128 0x5
 2242 093c 03       		.byte	0x3
 2243 093d 00000000 		.4byte	alarmDownstreamLevelSensor
 2244 0941 19       		.uleb128 0x19
 2245 0942 36040000 		.4byte	.LASF123
 2246 0946 09       		.byte	0x9
 2247 0947 81       		.byte	0x81
 2248 0948 81000000 		.4byte	0x81
 2249 094c 05       		.uleb128 0x5
 2250 094d 03       		.byte	0x3
 2251 094e 00000000 		.4byte	timetoDownstreamLevelSensor
 2252 0952 19       		.uleb128 0x19
 2253 0953 D5050000 		.4byte	.LASF124
 2254 0957 09       		.byte	0x9
 2255 0958 83       		.byte	0x83
 2256 0959 91030000 		.4byte	0x391
 2257 095d 05       		.uleb128 0x5
 2258 095e 03       		.byte	0x3
 2259 095f 00000000 		.4byte	alarmValve
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 45


 2260 0963 19       		.uleb128 0x19
 2261 0964 B2040000 		.4byte	.LASF125
 2262 0968 09       		.byte	0x9
 2263 0969 84       		.byte	0x84
 2264 096a 81000000 		.4byte	0x81
 2265 096e 05       		.uleb128 0x5
 2266 096f 03       		.byte	0x3
 2267 0970 00000000 		.4byte	timeToValve
 2268 0974 00       		.byte	0
 2269              		.section	.debug_abbrev,"",%progbits
 2270              	.Ldebug_abbrev0:
 2271 0000 01       		.uleb128 0x1
 2272 0001 11       		.uleb128 0x11
 2273 0002 01       		.byte	0x1
 2274 0003 25       		.uleb128 0x25
 2275 0004 0E       		.uleb128 0xe
 2276 0005 13       		.uleb128 0x13
 2277 0006 0B       		.uleb128 0xb
 2278 0007 03       		.uleb128 0x3
 2279 0008 0E       		.uleb128 0xe
 2280 0009 1B       		.uleb128 0x1b
 2281 000a 0E       		.uleb128 0xe
 2282 000b 55       		.uleb128 0x55
 2283 000c 17       		.uleb128 0x17
 2284 000d 11       		.uleb128 0x11
 2285 000e 01       		.uleb128 0x1
 2286 000f 10       		.uleb128 0x10
 2287 0010 17       		.uleb128 0x17
 2288 0011 00       		.byte	0
 2289 0012 00       		.byte	0
 2290 0013 02       		.uleb128 0x2
 2291 0014 24       		.uleb128 0x24
 2292 0015 00       		.byte	0
 2293 0016 0B       		.uleb128 0xb
 2294 0017 0B       		.uleb128 0xb
 2295 0018 3E       		.uleb128 0x3e
 2296 0019 0B       		.uleb128 0xb
 2297 001a 03       		.uleb128 0x3
 2298 001b 0E       		.uleb128 0xe
 2299 001c 00       		.byte	0
 2300 001d 00       		.byte	0
 2301 001e 03       		.uleb128 0x3
 2302 001f 16       		.uleb128 0x16
 2303 0020 00       		.byte	0
 2304 0021 03       		.uleb128 0x3
 2305 0022 0E       		.uleb128 0xe
 2306 0023 3A       		.uleb128 0x3a
 2307 0024 0B       		.uleb128 0xb
 2308 0025 3B       		.uleb128 0x3b
 2309 0026 0B       		.uleb128 0xb
 2310 0027 49       		.uleb128 0x49
 2311 0028 13       		.uleb128 0x13
 2312 0029 00       		.byte	0
 2313 002a 00       		.byte	0
 2314 002b 04       		.uleb128 0x4
 2315 002c 24       		.uleb128 0x24
 2316 002d 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 46


 2317 002e 0B       		.uleb128 0xb
 2318 002f 0B       		.uleb128 0xb
 2319 0030 3E       		.uleb128 0x3e
 2320 0031 0B       		.uleb128 0xb
 2321 0032 03       		.uleb128 0x3
 2322 0033 08       		.uleb128 0x8
 2323 0034 00       		.byte	0
 2324 0035 00       		.byte	0
 2325 0036 05       		.uleb128 0x5
 2326 0037 16       		.uleb128 0x16
 2327 0038 00       		.byte	0
 2328 0039 03       		.uleb128 0x3
 2329 003a 0E       		.uleb128 0xe
 2330 003b 3A       		.uleb128 0x3a
 2331 003c 0B       		.uleb128 0xb
 2332 003d 3B       		.uleb128 0x3b
 2333 003e 05       		.uleb128 0x5
 2334 003f 49       		.uleb128 0x49
 2335 0040 13       		.uleb128 0x13
 2336 0041 00       		.byte	0
 2337 0042 00       		.byte	0
 2338 0043 06       		.uleb128 0x6
 2339 0044 01       		.uleb128 0x1
 2340 0045 01       		.byte	0x1
 2341 0046 49       		.uleb128 0x49
 2342 0047 13       		.uleb128 0x13
 2343 0048 01       		.uleb128 0x1
 2344 0049 13       		.uleb128 0x13
 2345 004a 00       		.byte	0
 2346 004b 00       		.byte	0
 2347 004c 07       		.uleb128 0x7
 2348 004d 21       		.uleb128 0x21
 2349 004e 00       		.byte	0
 2350 004f 49       		.uleb128 0x49
 2351 0050 13       		.uleb128 0x13
 2352 0051 2F       		.uleb128 0x2f
 2353 0052 0B       		.uleb128 0xb
 2354 0053 00       		.byte	0
 2355 0054 00       		.byte	0
 2356 0055 08       		.uleb128 0x8
 2357 0056 13       		.uleb128 0x13
 2358 0057 01       		.byte	0x1
 2359 0058 0B       		.uleb128 0xb
 2360 0059 05       		.uleb128 0x5
 2361 005a 3A       		.uleb128 0x3a
 2362 005b 0B       		.uleb128 0xb
 2363 005c 3B       		.uleb128 0x3b
 2364 005d 0B       		.uleb128 0xb
 2365 005e 01       		.uleb128 0x1
 2366 005f 13       		.uleb128 0x13
 2367 0060 00       		.byte	0
 2368 0061 00       		.byte	0
 2369 0062 09       		.uleb128 0x9
 2370 0063 0D       		.uleb128 0xd
 2371 0064 00       		.byte	0
 2372 0065 03       		.uleb128 0x3
 2373 0066 0E       		.uleb128 0xe
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 47


 2374 0067 3A       		.uleb128 0x3a
 2375 0068 0B       		.uleb128 0xb
 2376 0069 3B       		.uleb128 0x3b
 2377 006a 0B       		.uleb128 0xb
 2378 006b 49       		.uleb128 0x49
 2379 006c 13       		.uleb128 0x13
 2380 006d 38       		.uleb128 0x38
 2381 006e 0B       		.uleb128 0xb
 2382 006f 00       		.byte	0
 2383 0070 00       		.byte	0
 2384 0071 0A       		.uleb128 0xa
 2385 0072 13       		.uleb128 0x13
 2386 0073 01       		.byte	0x1
 2387 0074 0B       		.uleb128 0xb
 2388 0075 0B       		.uleb128 0xb
 2389 0076 3A       		.uleb128 0x3a
 2390 0077 0B       		.uleb128 0xb
 2391 0078 3B       		.uleb128 0x3b
 2392 0079 0B       		.uleb128 0xb
 2393 007a 01       		.uleb128 0x1
 2394 007b 13       		.uleb128 0x13
 2395 007c 00       		.byte	0
 2396 007d 00       		.byte	0
 2397 007e 0B       		.uleb128 0xb
 2398 007f 0D       		.uleb128 0xd
 2399 0080 00       		.byte	0
 2400 0081 03       		.uleb128 0x3
 2401 0082 08       		.uleb128 0x8
 2402 0083 3A       		.uleb128 0x3a
 2403 0084 0B       		.uleb128 0xb
 2404 0085 3B       		.uleb128 0x3b
 2405 0086 0B       		.uleb128 0xb
 2406 0087 49       		.uleb128 0x49
 2407 0088 13       		.uleb128 0x13
 2408 0089 38       		.uleb128 0x38
 2409 008a 0B       		.uleb128 0xb
 2410 008b 00       		.byte	0
 2411 008c 00       		.byte	0
 2412 008d 0C       		.uleb128 0xc
 2413 008e 35       		.uleb128 0x35
 2414 008f 00       		.byte	0
 2415 0090 49       		.uleb128 0x49
 2416 0091 13       		.uleb128 0x13
 2417 0092 00       		.byte	0
 2418 0093 00       		.byte	0
 2419 0094 0D       		.uleb128 0xd
 2420 0095 0F       		.uleb128 0xf
 2421 0096 00       		.byte	0
 2422 0097 0B       		.uleb128 0xb
 2423 0098 0B       		.uleb128 0xb
 2424 0099 49       		.uleb128 0x49
 2425 009a 13       		.uleb128 0x13
 2426 009b 00       		.byte	0
 2427 009c 00       		.byte	0
 2428 009d 0E       		.uleb128 0xe
 2429 009e 2E       		.uleb128 0x2e
 2430 009f 01       		.byte	0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 48


 2431 00a0 3F       		.uleb128 0x3f
 2432 00a1 19       		.uleb128 0x19
 2433 00a2 03       		.uleb128 0x3
 2434 00a3 0E       		.uleb128 0xe
 2435 00a4 3A       		.uleb128 0x3a
 2436 00a5 0B       		.uleb128 0xb
 2437 00a6 3B       		.uleb128 0x3b
 2438 00a7 0B       		.uleb128 0xb
 2439 00a8 49       		.uleb128 0x49
 2440 00a9 13       		.uleb128 0x13
 2441 00aa 11       		.uleb128 0x11
 2442 00ab 01       		.uleb128 0x1
 2443 00ac 12       		.uleb128 0x12
 2444 00ad 06       		.uleb128 0x6
 2445 00ae 40       		.uleb128 0x40
 2446 00af 18       		.uleb128 0x18
 2447 00b0 9642     		.uleb128 0x2116
 2448 00b2 19       		.uleb128 0x19
 2449 00b3 01       		.uleb128 0x1
 2450 00b4 13       		.uleb128 0x13
 2451 00b5 00       		.byte	0
 2452 00b6 00       		.byte	0
 2453 00b7 0F       		.uleb128 0xf
 2454 00b8 34       		.uleb128 0x34
 2455 00b9 00       		.byte	0
 2456 00ba 03       		.uleb128 0x3
 2457 00bb 0E       		.uleb128 0xe
 2458 00bc 3A       		.uleb128 0x3a
 2459 00bd 0B       		.uleb128 0xb
 2460 00be 3B       		.uleb128 0x3b
 2461 00bf 0B       		.uleb128 0xb
 2462 00c0 49       		.uleb128 0x49
 2463 00c1 13       		.uleb128 0x13
 2464 00c2 02       		.uleb128 0x2
 2465 00c3 18       		.uleb128 0x18
 2466 00c4 00       		.byte	0
 2467 00c5 00       		.byte	0
 2468 00c6 10       		.uleb128 0x10
 2469 00c7 0B       		.uleb128 0xb
 2470 00c8 01       		.byte	0x1
 2471 00c9 11       		.uleb128 0x11
 2472 00ca 01       		.uleb128 0x1
 2473 00cb 12       		.uleb128 0x12
 2474 00cc 06       		.uleb128 0x6
 2475 00cd 00       		.byte	0
 2476 00ce 00       		.byte	0
 2477 00cf 11       		.uleb128 0x11
 2478 00d0 34       		.uleb128 0x34
 2479 00d1 00       		.byte	0
 2480 00d2 03       		.uleb128 0x3
 2481 00d3 08       		.uleb128 0x8
 2482 00d4 3A       		.uleb128 0x3a
 2483 00d5 0B       		.uleb128 0xb
 2484 00d6 3B       		.uleb128 0x3b
 2485 00d7 0B       		.uleb128 0xb
 2486 00d8 49       		.uleb128 0x49
 2487 00d9 13       		.uleb128 0x13
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 49


 2488 00da 02       		.uleb128 0x2
 2489 00db 18       		.uleb128 0x18
 2490 00dc 00       		.byte	0
 2491 00dd 00       		.byte	0
 2492 00de 12       		.uleb128 0x12
 2493 00df 0B       		.uleb128 0xb
 2494 00e0 01       		.byte	0x1
 2495 00e1 11       		.uleb128 0x11
 2496 00e2 01       		.uleb128 0x1
 2497 00e3 12       		.uleb128 0x12
 2498 00e4 06       		.uleb128 0x6
 2499 00e5 01       		.uleb128 0x1
 2500 00e6 13       		.uleb128 0x13
 2501 00e7 00       		.byte	0
 2502 00e8 00       		.byte	0
 2503 00e9 13       		.uleb128 0x13
 2504 00ea 2E       		.uleb128 0x2e
 2505 00eb 01       		.byte	0x1
 2506 00ec 3F       		.uleb128 0x3f
 2507 00ed 19       		.uleb128 0x19
 2508 00ee 03       		.uleb128 0x3
 2509 00ef 0E       		.uleb128 0xe
 2510 00f0 3A       		.uleb128 0x3a
 2511 00f1 0B       		.uleb128 0xb
 2512 00f2 3B       		.uleb128 0x3b
 2513 00f3 0B       		.uleb128 0xb
 2514 00f4 27       		.uleb128 0x27
 2515 00f5 19       		.uleb128 0x19
 2516 00f6 49       		.uleb128 0x49
 2517 00f7 13       		.uleb128 0x13
 2518 00f8 11       		.uleb128 0x11
 2519 00f9 01       		.uleb128 0x1
 2520 00fa 12       		.uleb128 0x12
 2521 00fb 06       		.uleb128 0x6
 2522 00fc 40       		.uleb128 0x40
 2523 00fd 18       		.uleb128 0x18
 2524 00fe 9642     		.uleb128 0x2116
 2525 0100 19       		.uleb128 0x19
 2526 0101 01       		.uleb128 0x1
 2527 0102 13       		.uleb128 0x13
 2528 0103 00       		.byte	0
 2529 0104 00       		.byte	0
 2530 0105 14       		.uleb128 0x14
 2531 0106 05       		.uleb128 0x5
 2532 0107 00       		.byte	0
 2533 0108 03       		.uleb128 0x3
 2534 0109 0E       		.uleb128 0xe
 2535 010a 3A       		.uleb128 0x3a
 2536 010b 0B       		.uleb128 0xb
 2537 010c 3B       		.uleb128 0x3b
 2538 010d 0B       		.uleb128 0xb
 2539 010e 49       		.uleb128 0x49
 2540 010f 13       		.uleb128 0x13
 2541 0110 02       		.uleb128 0x2
 2542 0111 18       		.uleb128 0x18
 2543 0112 00       		.byte	0
 2544 0113 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 50


 2545 0114 15       		.uleb128 0x15
 2546 0115 2E       		.uleb128 0x2e
 2547 0116 01       		.byte	0x1
 2548 0117 3F       		.uleb128 0x3f
 2549 0118 19       		.uleb128 0x19
 2550 0119 03       		.uleb128 0x3
 2551 011a 0E       		.uleb128 0xe
 2552 011b 3A       		.uleb128 0x3a
 2553 011c 0B       		.uleb128 0xb
 2554 011d 3B       		.uleb128 0x3b
 2555 011e 0B       		.uleb128 0xb
 2556 011f 27       		.uleb128 0x27
 2557 0120 19       		.uleb128 0x19
 2558 0121 11       		.uleb128 0x11
 2559 0122 01       		.uleb128 0x1
 2560 0123 12       		.uleb128 0x12
 2561 0124 06       		.uleb128 0x6
 2562 0125 40       		.uleb128 0x40
 2563 0126 18       		.uleb128 0x18
 2564 0127 9642     		.uleb128 0x2116
 2565 0129 19       		.uleb128 0x19
 2566 012a 01       		.uleb128 0x1
 2567 012b 13       		.uleb128 0x13
 2568 012c 00       		.byte	0
 2569 012d 00       		.byte	0
 2570 012e 16       		.uleb128 0x16
 2571 012f 05       		.uleb128 0x5
 2572 0130 00       		.byte	0
 2573 0131 03       		.uleb128 0x3
 2574 0132 08       		.uleb128 0x8
 2575 0133 3A       		.uleb128 0x3a
 2576 0134 0B       		.uleb128 0xb
 2577 0135 3B       		.uleb128 0x3b
 2578 0136 0B       		.uleb128 0xb
 2579 0137 49       		.uleb128 0x49
 2580 0138 13       		.uleb128 0x13
 2581 0139 02       		.uleb128 0x2
 2582 013a 18       		.uleb128 0x18
 2583 013b 00       		.byte	0
 2584 013c 00       		.byte	0
 2585 013d 17       		.uleb128 0x17
 2586 013e 2E       		.uleb128 0x2e
 2587 013f 01       		.byte	0x1
 2588 0140 3F       		.uleb128 0x3f
 2589 0141 19       		.uleb128 0x19
 2590 0142 03       		.uleb128 0x3
 2591 0143 0E       		.uleb128 0xe
 2592 0144 3A       		.uleb128 0x3a
 2593 0145 0B       		.uleb128 0xb
 2594 0146 3B       		.uleb128 0x3b
 2595 0147 0B       		.uleb128 0xb
 2596 0148 27       		.uleb128 0x27
 2597 0149 19       		.uleb128 0x19
 2598 014a 11       		.uleb128 0x11
 2599 014b 01       		.uleb128 0x1
 2600 014c 12       		.uleb128 0x12
 2601 014d 06       		.uleb128 0x6
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 51


 2602 014e 40       		.uleb128 0x40
 2603 014f 18       		.uleb128 0x18
 2604 0150 9742     		.uleb128 0x2117
 2605 0152 19       		.uleb128 0x19
 2606 0153 01       		.uleb128 0x1
 2607 0154 13       		.uleb128 0x13
 2608 0155 00       		.byte	0
 2609 0156 00       		.byte	0
 2610 0157 18       		.uleb128 0x18
 2611 0158 34       		.uleb128 0x34
 2612 0159 00       		.byte	0
 2613 015a 03       		.uleb128 0x3
 2614 015b 0E       		.uleb128 0xe
 2615 015c 3A       		.uleb128 0x3a
 2616 015d 0B       		.uleb128 0xb
 2617 015e 3B       		.uleb128 0x3b
 2618 015f 05       		.uleb128 0x5
 2619 0160 49       		.uleb128 0x49
 2620 0161 13       		.uleb128 0x13
 2621 0162 3F       		.uleb128 0x3f
 2622 0163 19       		.uleb128 0x19
 2623 0164 3C       		.uleb128 0x3c
 2624 0165 19       		.uleb128 0x19
 2625 0166 00       		.byte	0
 2626 0167 00       		.byte	0
 2627 0168 19       		.uleb128 0x19
 2628 0169 34       		.uleb128 0x34
 2629 016a 00       		.byte	0
 2630 016b 03       		.uleb128 0x3
 2631 016c 0E       		.uleb128 0xe
 2632 016d 3A       		.uleb128 0x3a
 2633 016e 0B       		.uleb128 0xb
 2634 016f 3B       		.uleb128 0x3b
 2635 0170 0B       		.uleb128 0xb
 2636 0171 49       		.uleb128 0x49
 2637 0172 13       		.uleb128 0x13
 2638 0173 3F       		.uleb128 0x3f
 2639 0174 19       		.uleb128 0x19
 2640 0175 02       		.uleb128 0x2
 2641 0176 18       		.uleb128 0x18
 2642 0177 00       		.byte	0
 2643 0178 00       		.byte	0
 2644 0179 1A       		.uleb128 0x1a
 2645 017a 21       		.uleb128 0x21
 2646 017b 00       		.byte	0
 2647 017c 49       		.uleb128 0x49
 2648 017d 13       		.uleb128 0x13
 2649 017e 2F       		.uleb128 0x2f
 2650 017f 05       		.uleb128 0x5
 2651 0180 00       		.byte	0
 2652 0181 00       		.byte	0
 2653 0182 1B       		.uleb128 0x1b
 2654 0183 34       		.uleb128 0x34
 2655 0184 00       		.byte	0
 2656 0185 03       		.uleb128 0x3
 2657 0186 08       		.uleb128 0x8
 2658 0187 3A       		.uleb128 0x3a
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 52


 2659 0188 0B       		.uleb128 0xb
 2660 0189 3B       		.uleb128 0x3b
 2661 018a 0B       		.uleb128 0xb
 2662 018b 49       		.uleb128 0x49
 2663 018c 13       		.uleb128 0x13
 2664 018d 3F       		.uleb128 0x3f
 2665 018e 19       		.uleb128 0x19
 2666 018f 02       		.uleb128 0x2
 2667 0190 18       		.uleb128 0x18
 2668 0191 00       		.byte	0
 2669 0192 00       		.byte	0
 2670 0193 00       		.byte	0
 2671              		.section	.debug_aranges,"",%progbits
 2672 0000 54000000 		.4byte	0x54
 2673 0004 0200     		.2byte	0x2
 2674 0006 00000000 		.4byte	.Ldebug_info0
 2675 000a 04       		.byte	0x4
 2676 000b 00       		.byte	0
 2677 000c 0000     		.2byte	0
 2678 000e 0000     		.2byte	0
 2679 0010 00000000 		.4byte	.LFB64
 2680 0014 34010000 		.4byte	.LFE64-.LFB64
 2681 0018 00000000 		.4byte	.LFB65
 2682 001c 98010000 		.4byte	.LFE65-.LFB65
 2683 0020 00000000 		.4byte	.LFB66
 2684 0024 C4000000 		.4byte	.LFE66-.LFB66
 2685 0028 00000000 		.4byte	.LFB67
 2686 002c 74000000 		.4byte	.LFE67-.LFB67
 2687 0030 00000000 		.4byte	.LFB68
 2688 0034 28000000 		.4byte	.LFE68-.LFB68
 2689 0038 00000000 		.4byte	.LFB69
 2690 003c 84000000 		.4byte	.LFE69-.LFB69
 2691 0040 00000000 		.4byte	.LFB70
 2692 0044 BC000000 		.4byte	.LFE70-.LFB70
 2693 0048 00000000 		.4byte	.LFB71
 2694 004c 04010000 		.4byte	.LFE71-.LFB71
 2695 0050 00000000 		.4byte	0
 2696 0054 00000000 		.4byte	0
 2697              		.section	.debug_ranges,"",%progbits
 2698              	.Ldebug_ranges0:
 2699 0000 00000000 		.4byte	.LFB64
 2700 0004 34010000 		.4byte	.LFE64
 2701 0008 00000000 		.4byte	.LFB65
 2702 000c 98010000 		.4byte	.LFE65
 2703 0010 00000000 		.4byte	.LFB66
 2704 0014 C4000000 		.4byte	.LFE66
 2705 0018 00000000 		.4byte	.LFB67
 2706 001c 74000000 		.4byte	.LFE67
 2707 0020 00000000 		.4byte	.LFB68
 2708 0024 28000000 		.4byte	.LFE68
 2709 0028 00000000 		.4byte	.LFB69
 2710 002c 84000000 		.4byte	.LFE69
 2711 0030 00000000 		.4byte	.LFB70
 2712 0034 BC000000 		.4byte	.LFE70
 2713 0038 00000000 		.4byte	.LFB71
 2714 003c 04010000 		.4byte	.LFE71
 2715 0040 00000000 		.4byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 53


 2716 0044 00000000 		.4byte	0
 2717              		.section	.debug_line,"",%progbits
 2718              	.Ldebug_line0:
 2719 0000 1A030000 		.section	.debug_str,"MS",%progbits,1
 2719      0200D501 
 2719      00000201 
 2719      FB0E0D00 
 2719      01010101 
 2720              	.LASF12:
 2721 0000 75696E74 		.ascii	"uint16\000"
 2721      313600
 2722              	.LASF128:
 2723 0007 433A5C55 		.ascii	"C:\\Users\\dantz\\Documents\\GitHub\\notoriOS\\noto"
 2723      73657273 
 2723      5C64616E 
 2723      747A5C44 
 2723      6F63756D 
 2724 0034 72694F53 		.ascii	"riOS.cydsn\000"
 2724      2E637964 
 2724      736E00
 2725              	.LASF98:
 2726 003f 62756666 		.ascii	"buffer_overflow\000"
 2726      65725F6F 
 2726      76657266 
 2726      6C6F7700 
 2727              	.LASF80:
 2728 004f 736F7274 		.ascii	"sort32\000"
 2728      333200
 2729              	.LASF65:
 2730 0056 636F756E 		.ascii	"countDownResetCondition\000"
 2730      74446F77 
 2730      6E526573 
 2730      6574436F 
 2730      6E646974 
 2731              	.LASF126:
 2732 006e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2732      43313120 
 2732      352E342E 
 2732      31203230 
 2732      31363036 
 2733 00a1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2733      20726576 
 2733      6973696F 
 2733      6E203233 
 2733      37373135 
 2734 00d4 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2734      66756E63 
 2734      74696F6E 
 2734      2D736563 
 2734      74696F6E 
 2735              	.LASF7:
 2736 00fc 6C6F6E67 		.ascii	"long long unsigned int\000"
 2736      206C6F6E 
 2736      6720756E 
 2736      7369676E 
 2736      65642069 
 2737              	.LASF61:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 54


 2738 0113 75706461 		.ascii	"updatable_parameters_t\000"
 2738      7461626C 
 2738      655F7061 
 2738      72616D65 
 2738      74657273 
 2739              	.LASF73:
 2740 012a 766F6C74 		.ascii	"voltage\000"
 2740      61676500 
 2741              	.LASF87:
 2742 0132 74657374 		.ascii	"test\000"
 2742      00
 2743              	.LASF113:
 2744 0137 616C6172 		.ascii	"alarmMeasure\000"
 2744      6D4D6561 
 2744      73757265 
 2744      00
 2745              	.LASF89:
 2746 0144 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2746      52784275 
 2746      66666572 
 2746      00
 2747              	.LASF85:
 2748 0151 6D656469 		.ascii	"median\000"
 2748      616E00
 2749              	.LASF121:
 2750 0158 74696D65 		.ascii	"timetoLevelSensor\000"
 2750      746F4C65 
 2750      76656C53 
 2750      656E736F 
 2750      7200
 2751              	.LASF104:
 2752 016a 6D6F6465 		.ascii	"modem_stats\000"
 2752      6D5F7374 
 2752      61747300 
 2753              	.LASF6:
 2754 0176 6C6F6E67 		.ascii	"long long int\000"
 2754      206C6F6E 
 2754      6720696E 
 2754      7400
 2755              	.LASF0:
 2756 0184 7369676E 		.ascii	"signed char\000"
 2756      65642063 
 2756      68617200 
 2757              	.LASF45:
 2758 0190 65636E6F 		.ascii	"ecno\000"
 2758      00
 2759              	.LASF114:
 2760 0195 74696D65 		.ascii	"timeToMeasure\000"
 2760      546F4D65 
 2760      61737572 
 2760      6500
 2761              	.LASF48:
 2762 01a3 74696D65 		.ascii	"time_to_network_connect\000"
 2762      5F746F5F 
 2762      6E657477 
 2762      6F726B5F 
 2762      636F6E6E 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 55


 2763              	.LASF116:
 2764 01bb 74696D65 		.ascii	"timeToSync\000"
 2764      546F5379 
 2764      6E6300
 2765              	.LASF27:
 2766 01c6 766F6C74 		.ascii	"voltage_charge_current\000"
 2766      6167655F 
 2766      63686172 
 2766      67655F63 
 2766      75727265 
 2767              	.LASF94:
 2768 01dd 76616C76 		.ascii	"valve_diameter\000"
 2768      655F6469 
 2768      616D6574 
 2768      657200
 2769              	.LASF42:
 2770 01ec 6D6F6465 		.ascii	"modem_info_t\000"
 2770      6D5F696E 
 2770      666F5F74 
 2770      00
 2771              	.LASF122:
 2772 01f9 616C6172 		.ascii	"alarmDownstreamLevelSensor\000"
 2772      6D446F77 
 2772      6E737472 
 2772      65616D4C 
 2772      6576656C 
 2773              	.LASF74:
 2774 0214 6368616E 		.ascii	"channels\000"
 2774      6E656C73 
 2774      00
 2775              	.LASF4:
 2776 021d 6C6F6E67 		.ascii	"long int\000"
 2776      20696E74 
 2776      00
 2777              	.LASF43:
 2778 0226 72786C65 		.ascii	"rxlev\000"
 2778      7600
 2779              	.LASF63:
 2780 022c 63757272 		.ascii	"currentCountDownValue\000"
 2780      656E7443 
 2780      6F756E74 
 2780      446F776E 
 2780      56616C75 
 2781              	.LASF66:
 2782 0242 616C6172 		.ascii	"alarm\000"
 2782      6D00
 2783              	.LASF32:
 2784 0248 70726573 		.ascii	"pressure_voltage_off\000"
 2784      73757265 
 2784      5F766F6C 
 2784      74616765 
 2784      5F6F6666 
 2785              	.LASF11:
 2786 025d 75696E74 		.ascii	"uint8\000"
 2786      3800
 2787              	.LASF119:
 2788 0263 74696D65 		.ascii	"timeToAppLED\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 56


 2788      546F4170 
 2788      704C4544 
 2788      00
 2789              	.LASF14:
 2790 0270 696E7433 		.ascii	"int32\000"
 2790      3200
 2791              	.LASF51:
 2792 0276 6E6F6465 		.ascii	"node_type\000"
 2792      5F747970 
 2792      6500
 2793              	.LASF84:
 2794 0280 61727261 		.ascii	"array\000"
 2794      7900
 2795              	.LASF68:
 2796 0286 63686970 		.ascii	"chip_uniqueId\000"
 2796      5F756E69 
 2796      71756549 
 2796      6400
 2797              	.LASF40:
 2798 0294 6D6F6465 		.ascii	"model_id\000"
 2798      6C5F6964 
 2798      00
 2799              	.LASF62:
 2800 029d 636F756E 		.ascii	"countDownValue\000"
 2800      74446F77 
 2800      6E56616C 
 2800      756500
 2801              	.LASF83:
 2802 02ac 66696E64 		.ascii	"find_median32\000"
 2802      5F6D6564 
 2802      69616E33 
 2802      3200
 2803              	.LASF55:
 2804 02ba 64656275 		.ascii	"debug_level\000"
 2804      675F6C65 
 2804      76656C00 
 2805              	.LASF36:
 2806 02c6 76616C75 		.ascii	"value\000"
 2806      6500
 2807              	.LASF78:
 2808 02cc 70726573 		.ascii	"pressure_sensor_readings\000"
 2808      73757265 
 2808      5F73656E 
 2808      736F725F 
 2808      72656164 
 2809              	.LASF115:
 2810 02e5 616C6172 		.ascii	"alarmSync\000"
 2810      6D53796E 
 2810      6300
 2811              	.LASF31:
 2812 02ef 70726573 		.ascii	"pressure_voltage_on\000"
 2812      73757265 
 2812      5F766F6C 
 2812      74616765 
 2812      5F6F6E00 
 2813              	.LASF106:
 2814 0303 4170705F 		.ascii	"App_LED_enabled\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 57


 2814      4C45445F 
 2814      656E6162 
 2814      6C656400 
 2815              	.LASF38:
 2816 0313 6B65795F 		.ascii	"key_value_t\000"
 2816      76616C75 
 2816      655F7400 
 2817              	.LASF5:
 2818 031f 6C6F6E67 		.ascii	"long unsigned int\000"
 2818      20756E73 
 2818      69676E65 
 2818      6420696E 
 2818      7400
 2819              	.LASF25:
 2820 0331 766F6C74 		.ascii	"voltage_battery\000"
 2820      6167655F 
 2820      62617474 
 2820      65727900 
 2821              	.LASF101:
 2822 0341 64617461 		.ascii	"data\000"
 2822      00
 2823              	.LASF71:
 2824 0346 65705F70 		.ascii	"ep_port\000"
 2824      6F727400 
 2825              	.LASF67:
 2826 034e 6D6F6465 		.ascii	"modem_info\000"
 2826      6D5F696E 
 2826      666F00
 2827              	.LASF70:
 2828 0359 65705F68 		.ascii	"ep_host\000"
 2828      6F737400 
 2829              	.LASF26:
 2830 0361 766F6C74 		.ascii	"voltage_solar\000"
 2830      6167655F 
 2830      736F6C61 
 2830      7200
 2831              	.LASF82:
 2832 036f 70726573 		.ascii	"pressure_calculations\000"
 2832      73757265 
 2832      5F63616C 
 2832      63756C61 
 2832      74696F6E 
 2833              	.LASF49:
 2834 0385 74696D65 		.ascii	"time_to_acquire_ip\000"
 2834      5F746F5F 
 2834      61637175 
 2834      6972655F 
 2834      697000
 2835              	.LASF2:
 2836 0398 73686F72 		.ascii	"short int\000"
 2836      7420696E 
 2836      7400
 2837              	.LASF118:
 2838 03a2 616C6172 		.ascii	"alarmAppLED\000"
 2838      6D417070 
 2838      4C454400 
 2839              	.LASF103:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 58


 2840 03ae 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2840      6D5F7374 
 2840      6172745F 
 2840      74696D65 
 2840      5F737461 
 2841              	.LASF30:
 2842 03c5 766F6C74 		.ascii	"voltage_t\000"
 2842      6167655F 
 2842      7400
 2843              	.LASF93:
 2844 03cf 646F776E 		.ascii	"downstream_level_sensor_enabled\000"
 2844      73747265 
 2844      616D5F6C 
 2844      6576656C 
 2844      5F73656E 
 2845              	.LASF69:
 2846 03ef 7379735F 		.ascii	"sys_info_t\000"
 2846      696E666F 
 2846      5F7400
 2847              	.LASF86:
 2848 03fa 766F6C74 		.ascii	"voltages_test\000"
 2848      61676573 
 2848      5F746573 
 2848      7400
 2849              	.LASF99:
 2850 0408 64617461 		.ascii	"dataPointsInStack\000"
 2850      506F696E 
 2850      7473496E 
 2850      53746163 
 2850      6B00
 2851              	.LASF95:
 2852 041a 76616C76 		.ascii	"valve_type\000"
 2852      655F7479 
 2852      706500
 2853              	.LASF15:
 2854 0425 666C6F61 		.ascii	"float32\000"
 2854      74333200 
 2855              	.LASF20:
 2856 042d 73697A65 		.ascii	"sizetype\000"
 2856      74797065 
 2856      00
 2857              	.LASF123:
 2858 0436 74696D65 		.ascii	"timetoDownstreamLevelSensor\000"
 2858      746F446F 
 2858      776E7374 
 2858      7265616D 
 2858      4C657665 
 2859              	.LASF21:
 2860 0452 74657374 		.ascii	"test_name\000"
 2860      5F6E616D 
 2860      6500
 2861              	.LASF13:
 2862 045c 696E7431 		.ascii	"int16\000"
 2862      3600
 2863              	.LASF117:
 2864 0462 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2864      546F5379 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 59


 2864      636E5265 
 2864      6D6F7465 
 2864      50617261 
 2865              	.LASF37:
 2866 0479 74696D65 		.ascii	"timeStamp\000"
 2866      5374616D 
 2866      7000
 2867              	.LASF105:
 2868 0483 75706461 		.ascii	"updatable_parameters\000"
 2868      7461626C 
 2868      655F7061 
 2868      72616D65 
 2868      74657273 
 2869              	.LASF79:
 2870 0498 70726573 		.ascii	"pressure\000"
 2870      73757265 
 2870      00
 2871              	.LASF28:
 2872 04a1 766F6C74 		.ascii	"voltage_pressure\000"
 2872      6167655F 
 2872      70726573 
 2872      73757265 
 2872      00
 2873              	.LASF125:
 2874 04b2 74696D65 		.ascii	"timeToValve\000"
 2874      546F5661 
 2874      6C766500 
 2875              	.LASF16:
 2876 04be 666C6F61 		.ascii	"float\000"
 2876      7400
 2877              	.LASF60:
 2878 04c4 5F426F6F 		.ascii	"_Bool\000"
 2878      6C00
 2879              	.LASF10:
 2880 04ca 696E7433 		.ascii	"int32_t\000"
 2880      325F7400 
 2881              	.LASF1:
 2882 04d2 756E7369 		.ascii	"unsigned char\000"
 2882      676E6564 
 2882      20636861 
 2882      7200
 2883              	.LASF88:
 2884 04e0 70726573 		.ascii	"pressure_sensor_test\000"
 2884      73757265 
 2884      5F73656E 
 2884      736F725F 
 2884      74657374 
 2885              	.LASF112:
 2886 04f5 73797374 		.ascii	"system_settings\000"
 2886      656D5F73 
 2886      65747469 
 2886      6E677300 
 2887              	.LASF47:
 2888 0505 72737270 		.ascii	"rsrp\000"
 2888      00
 2889              	.LASF46:
 2890 050a 72737271 		.ascii	"rsrq\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 60


 2890      00
 2891              	.LASF54:
 2892 050f 73796E63 		.ascii	"sync_time\000"
 2892      5F74696D 
 2892      6500
 2893              	.LASF81:
 2894 0519 73776170 		.ascii	"swap32\000"
 2894      333200
 2895              	.LASF24:
 2896 0520 74657374 		.ascii	"test_t\000"
 2896      5F7400
 2897              	.LASF34:
 2898 0527 70726573 		.ascii	"pressure_depth\000"
 2898      73757265 
 2898      5F646570 
 2898      746800
 2899              	.LASF44:
 2900 0536 72736370 		.ascii	"rscp\000"
 2900      00
 2901              	.LASF76:
 2902 053b 72656164 		.ascii	"readings\000"
 2902      696E6773 
 2902      00
 2903              	.LASF111:
 2904 0544 73797374 		.ascii	"system_info\000"
 2904      656D5F69 
 2904      6E666F00 
 2905              	.LASF41:
 2906 0550 696D6569 		.ascii	"imei\000"
 2906      00
 2907              	.LASF23:
 2908 0555 72656173 		.ascii	"reason\000"
 2908      6F6E00
 2909              	.LASF50:
 2910 055c 6D6F6465 		.ascii	"modem_stats_t\000"
 2910      6D5F7374 
 2910      6174735F 
 2910      7400
 2911              	.LASF33:
 2912 056a 70726573 		.ascii	"pressure_current\000"
 2912      73757265 
 2912      5F637572 
 2912      72656E74 
 2912      00
 2913              	.LASF29:
 2914 057b 76616C69 		.ascii	"valid\000"
 2914      6400
 2915              	.LASF120:
 2916 0581 616C6172 		.ascii	"alarmLevelSensor\000"
 2916      6D4C6576 
 2916      656C5365 
 2916      6E736F72 
 2916      00
 2917              	.LASF57:
 2918 0592 4C657665 		.ascii	"Level_Sensor_freq\000"
 2918      6C5F5365 
 2918      6E736F72 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 61


 2918      5F667265 
 2918      7100
 2919              	.LASF90:
 2920 05a4 6C657665 		.ascii	"level_sensor_inbox\000"
 2920      6C5F7365 
 2920      6E736F72 
 2920      5F696E62 
 2920      6F7800
 2921              	.LASF19:
 2922 05b7 6C6F6E67 		.ascii	"long double\000"
 2922      20646F75 
 2922      626C6500 
 2923              	.LASF18:
 2924 05c3 63686172 		.ascii	"char\000"
 2924      00
 2925              	.LASF8:
 2926 05c8 756E7369 		.ascii	"unsigned int\000"
 2926      676E6564 
 2926      20696E74 
 2926      00
 2927              	.LASF124:
 2928 05d5 616C6172 		.ascii	"alarmValve\000"
 2928      6D56616C 
 2928      766500
 2929              	.LASF110:
 2930 05e0 68747470 		.ascii	"http_route\000"
 2930      5F726F75 
 2930      746500
 2931              	.LASF9:
 2932 05eb 5F5F696E 		.ascii	"__int32_t\000"
 2932      7433325F 
 2932      7400
 2933              	.LASF53:
 2934 05f5 6D656173 		.ascii	"measure_time\000"
 2934      7572655F 
 2934      74696D65 
 2934      00
 2935              	.LASF75:
 2936 0602 6F666673 		.ascii	"offset\000"
 2936      657400
 2937              	.LASF3:
 2938 0609 73686F72 		.ascii	"short unsigned int\000"
 2938      7420756E 
 2938      7369676E 
 2938      65642069 
 2938      6E7400
 2939              	.LASF39:
 2940 061c 73696D5F 		.ascii	"sim_id\000"
 2940      696400
 2941              	.LASF127:
 2942 0623 766F6C74 		.ascii	"voltages.c\000"
 2942      61676573 
 2942      2E6300
 2943              	.LASF58:
 2944 062e 446F776E 		.ascii	"Downstream_Level_Sensor_freq\000"
 2944      73747265 
 2944      616D5F4C 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 62


 2944      6576656C 
 2944      5F53656E 
 2945              	.LASF77:
 2946 064b 766F6C74 		.ascii	"voltage_take_readings\000"
 2946      6167655F 
 2946      74616B65 
 2946      5F726561 
 2946      64696E67 
 2947              	.LASF96:
 2948 0661 76616C76 		.ascii	"valve_enabled\000"
 2948      655F656E 
 2948      61626C65 
 2948      6400
 2949              	.LASF59:
 2950 066f 76616C76 		.ascii	"valve_freq\000"
 2950      655F6672 
 2950      657100
 2951              	.LASF22:
 2952 067a 73746174 		.ascii	"status\000"
 2952      757300
 2953              	.LASF91:
 2954 0681 6C657665 		.ascii	"level_sensor_enabled\000"
 2954      6C5F7365 
 2954      6E736F72 
 2954      5F656E61 
 2954      626C6564 
 2955              	.LASF100:
 2956 0696 64617461 		.ascii	"dataPointsInStackDesired\000"
 2956      506F696E 
 2956      7473496E 
 2956      53746163 
 2956      6B446573 
 2957              	.LASF56:
 2958 06af 4170705F 		.ascii	"App_LED_freq\000"
 2958      4C45445F 
 2958      66726571 
 2958      00
 2959              	.LASF72:
 2960 06bc 7379735F 		.ascii	"sys_settings_t\000"
 2960      73657474 
 2960      696E6773 
 2960      5F7400
 2961              	.LASF109:
 2962 06cb 68747470 		.ascii	"http_body\000"
 2962      5F626F64 
 2962      7900
 2963              	.LASF97:
 2964 06d5 76616C76 		.ascii	"valve_inbox\000"
 2964      655F696E 
 2964      626F7800 
 2965              	.LASF64:
 2966 06e1 636F756E 		.ascii	"countDownType\000"
 2966      74446F77 
 2966      6E547970 
 2966      6500
 2967              	.LASF52:
 2968 06ef 73696D5F 		.ascii	"sim_type\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccI0kVXG.s 			page 63


 2968      74797065 
 2968      00
 2969              	.LASF35:
 2970 06f8 70726573 		.ascii	"pressure_t\000"
 2970      73757265 
 2970      5F7400
 2971              	.LASF108:
 2972 0703 68747470 		.ascii	"http_request\000"
 2972      5F726571 
 2972      75657374 
 2972      00
 2973              	.LASF17:
 2974 0710 646F7562 		.ascii	"double\000"
 2974      6C6500
 2975              	.LASF107:
 2976 0717 6170705F 		.ascii	"app_led_inbox\000"
 2976      6C65645F 
 2976      696E626F 
 2976      7800
 2977              	.LASF92:
 2978 0725 646F776E 		.ascii	"downstream_level_sensor_inbox\000"
 2978      73747265 
 2978      616D5F6C 
 2978      6576656C 
 2978      5F73656E 
 2979              	.LASF102:
 2980 0743 6D6F6465 		.ascii	"modem_state\000"
 2980      6D5F7374 
 2980      61746500 
 2981              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
