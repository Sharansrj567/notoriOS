ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"debug.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.global	BB_fileName
  33              		.data
  34              		.align	2
  35              		.type	BB_fileName, %object
  36              		.size	BB_fileName, 30
  37              	BB_fileName:
  38 0000 626C6163 		.ascii	"blackbox.txt\000"
  38      6B626F78 
  38      2E747874 
  38      00
  39 000d 00000000 		.space	17
  39      00000000 
  39      00000000 
  39      00000000 
  39      00
  40              		.section	.text.debug_start,"ax",%progbits
  41              		.align	2
  42              		.global	debug_start
  43              		.thumb
  44              		.thumb_func
  45              		.type	debug_start, %function
  46              	debug_start:
  47              	.LFB64:
  48              		.file 1 "debug.c"
   1:debug.c       **** #include "debug.h"
   2:debug.c       **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 2


   3:debug.c       **** 
   4:debug.c       **** char    BB_fileName[30] = "blackbox.txt";
   5:debug.c       **** 
   6:debug.c       **** // function to start UART debug
   7:debug.c       **** void debug_start(){
  49              		.loc 1 7 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 1, uses_anonymous_args = 0
  53 0000 80B5     		push	{r7, lr}
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 7, -8
  56              		.cfi_offset 14, -4
  57 0002 00AF     		add	r7, sp, #0
  58              		.cfi_def_cfa_register 7
   8:debug.c       ****     // if debug flag = 1 then start UART
   9:debug.c       ****     #if USE_DEBUG
  10:debug.c       ****        Debug_UART_Start();
  59              		.loc 1 10 0
  60 0004 FFF7FEFF 		bl	Debug_UART_Start
  11:debug.c       ****        //setvbuf(stdout, NULL, _IOFBF, Debug_UART_TX_BUFFER_SIZE);//this sets the printf() bufefr t
  12:debug.c       ****        //setbuf(stdout, NULL);
  13:debug.c       ****     #endif
  14:debug.c       **** }
  61              		.loc 1 14 0
  62 0008 00BF     		nop
  63 000a 80BD     		pop	{r7, pc}
  64              		.cfi_endproc
  65              	.LFE64:
  66              		.size	debug_start, .-debug_start
  67              		.section	.text.debug_stop,"ax",%progbits
  68              		.align	2
  69              		.global	debug_stop
  70              		.thumb
  71              		.thumb_func
  72              		.type	debug_stop, %function
  73              	debug_stop:
  74              	.LFB65:
  15:debug.c       **** 
  16:debug.c       **** // function to stop UART debug
  17:debug.c       **** void debug_stop(){
  75              		.loc 1 17 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 1, uses_anonymous_args = 0
  79 0000 80B5     		push	{r7, lr}
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 7, -8
  82              		.cfi_offset 14, -4
  83 0002 00AF     		add	r7, sp, #0
  84              		.cfi_def_cfa_register 7
  18:debug.c       ****     // if debug flag = 1 then stop UART
  19:debug.c       ****     #if USE_DEBUG
  20:debug.c       ****         Debug_UART_Stop();
  85              		.loc 1 20 0
  86 0004 FFF7FEFF 		bl	Debug_UART_Stop
  21:debug.c       ****     #endif
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 3


  22:debug.c       **** }
  87              		.loc 1 22 0
  88 0008 00BF     		nop
  89 000a 80BD     		pop	{r7, pc}
  90              		.cfi_endproc
  91              	.LFE65:
  92              		.size	debug_stop, .-debug_stop
  93              		.section	.text.debug_sleep,"ax",%progbits
  94              		.align	2
  95              		.global	debug_sleep
  96              		.thumb
  97              		.thumb_func
  98              		.type	debug_sleep, %function
  99              	debug_sleep:
 100              	.LFB66:
  23:debug.c       **** 
  24:debug.c       **** // function to sleep UART debug
  25:debug.c       **** void debug_sleep(){
 101              		.loc 1 25 0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 1, uses_anonymous_args = 0
 105 0000 80B5     		push	{r7, lr}
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 7, -8
 108              		.cfi_offset 14, -4
 109 0002 00AF     		add	r7, sp, #0
 110              		.cfi_def_cfa_register 7
  26:debug.c       ****     // if debug flag = 1 and printf still writing, sleep UART
  27:debug.c       ****     #if USE_DEBUG
  28:debug.c       **** 
  29:debug.c       ****         // Check if UART is busy writing and waiit, if needed
  30:debug.c       ****         // Debug_UART_ReadTxStatus() reads the status register for the TX portion of the UART.
  31:debug.c       ****         if(!(Debug_UART_ReadTxStatus() & Debug_UART_TX_STS_FIFO_EMPTY)){
 111              		.loc 1 31 0
 112 0004 FFF7FEFF 		bl	Debug_UART_ReadTxStatus
 113 0008 0346     		mov	r3, r0
 114 000a 03F00203 		and	r3, r3, #2
 115 000e 002B     		cmp	r3, #0
 116 0010 02D1     		bne	.L4
  32:debug.c       ****             CyDelay(1u);
 117              		.loc 1 32 0
 118 0012 0120     		movs	r0, #1
 119 0014 FFF7FEFF 		bl	CyDelay
 120              	.L4:
  33:debug.c       ****         }
  34:debug.c       ****     // This is the preferred API to prepare the component for sleep. 
  35:debug.c       ****     // The Debug_UART_Sleep() API saves the current component state. Then it calls the Debug_UART_S
  36:debug.c       ****     Debug_UART_Sleep(); 
 121              		.loc 1 36 0
 122 0018 FFF7FEFF 		bl	Debug_UART_Sleep
  37:debug.c       ****    #endif
  38:debug.c       ****    
  39:debug.c       **** }
 123              		.loc 1 39 0
 124 001c 00BF     		nop
 125 001e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 4


 126              		.cfi_endproc
 127              	.LFE66:
 128              		.size	debug_sleep, .-debug_sleep
 129              		.section	.text.debug_wakeup,"ax",%progbits
 130              		.align	2
 131              		.global	debug_wakeup
 132              		.thumb
 133              		.thumb_func
 134              		.type	debug_wakeup, %function
 135              	debug_wakeup:
 136              	.LFB67:
  40:debug.c       **** 
  41:debug.c       **** // function to wakeup UART debug
  42:debug.c       **** void debug_wakeup(){
 137              		.loc 1 42 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 1, uses_anonymous_args = 0
 141 0000 80B5     		push	{r7, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 7, -8
 144              		.cfi_offset 14, -4
 145 0002 00AF     		add	r7, sp, #0
 146              		.cfi_def_cfa_register 7
  43:debug.c       ****     // if debug flag = 1, wakeup UART debug and turn off stillWriting flag
  44:debug.c       ****     #if USE_DEBUG
  45:debug.c       ****         Debug_UART_Wakeup();
 147              		.loc 1 45 0
 148 0004 FFF7FEFF 		bl	Debug_UART_Wakeup
  46:debug.c       ****     #endif
  47:debug.c       **** }
 149              		.loc 1 47 0
 150 0008 00BF     		nop
 151 000a 80BD     		pop	{r7, pc}
 152              		.cfi_endproc
 153              	.LFE67:
 154              		.size	debug_wakeup, .-debug_wakeup
 155              		.section	.text._write,"ax",%progbits
 156              		.align	2
 157              		.global	_write
 158              		.thumb
 159              		.thumb_func
 160              		.type	_write, %function
 161              	_write:
 162              	.LFB68:
  48:debug.c       **** 
  49:debug.c       **** // if debug flag = 1, and using the GCC compiler, revise the _write() function so that when we call
  50:debug.c       **** // NOTE: For this to work HEAP size in "System" must be set to 0x300 or more
  51:debug.c       **** // Stack and heap are both a part of memory. Stack holds functions, variables, etc. Heap sits on to
  52:debug.c       **** // If heap is too small, then you get a stack overflow. FOr printing, need to have a bigger heap. B
  53:debug.c       **** // If have memory problems, play around with heap size.
  54:debug.c       **** #if USE_DEBUG
  55:debug.c       ****     
  56:debug.c       ****     
  57:debug.c       **** // This will allow you to use printf(), as you would in regulart c programs
  58:debug.c       **** // careful though, printf() is sometimes not safe in embedded sytems
  59:debug.c       **** // may want to use printd() function below
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 5


  60:debug.c       **** int _write(int file, char *ptr, int len)
  61:debug.c       **** {
 163              		.loc 1 61 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 24
 166              		@ frame_needed = 1, uses_anonymous_args = 0
 167 0000 80B5     		push	{r7, lr}
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 7, -8
 170              		.cfi_offset 14, -4
 171 0002 86B0     		sub	sp, sp, #24
 172              		.cfi_def_cfa_offset 32
 173 0004 00AF     		add	r7, sp, #0
 174              		.cfi_def_cfa_register 7
 175 0006 F860     		str	r0, [r7, #12]
 176 0008 B960     		str	r1, [r7, #8]
 177 000a 7A60     		str	r2, [r7, #4]
  62:debug.c       ****     int i;
  63:debug.c       ****     file = file;
  64:debug.c       ****     for (i = 0; i < len; i++)
 178              		.loc 1 64 0
 179 000c 0023     		movs	r3, #0
 180 000e 7B61     		str	r3, [r7, #20]
 181 0010 09E0     		b	.L7
 182              	.L8:
  65:debug.c       ****     {   
  66:debug.c       ****         // Puts a byte of data into the transmit buffer to be sent when the bus is available.
  67:debug.c       ****         Debug_UART_PutChar(*ptr++);
 183              		.loc 1 67 0 discriminator 3
 184 0012 BB68     		ldr	r3, [r7, #8]
 185 0014 5A1C     		adds	r2, r3, #1
 186 0016 BA60     		str	r2, [r7, #8]
 187 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 188 001a 1846     		mov	r0, r3
 189 001c FFF7FEFF 		bl	Debug_UART_PutChar
  64:debug.c       ****     {   
 190              		.loc 1 64 0 discriminator 3
 191 0020 7B69     		ldr	r3, [r7, #20]
 192 0022 0133     		adds	r3, r3, #1
 193 0024 7B61     		str	r3, [r7, #20]
 194              	.L7:
  64:debug.c       ****     {   
 195              		.loc 1 64 0 is_stmt 0 discriminator 1
 196 0026 7A69     		ldr	r2, [r7, #20]
 197 0028 7B68     		ldr	r3, [r7, #4]
 198 002a 9A42     		cmp	r2, r3
 199 002c F1DB     		blt	.L8
  68:debug.c       ****     }
  69:debug.c       ****     
  70:debug.c       ****     return (len);
 200              		.loc 1 70 0 is_stmt 1
 201 002e 7B68     		ldr	r3, [r7, #4]
  71:debug.c       **** }
 202              		.loc 1 71 0
 203 0030 1846     		mov	r0, r3
 204 0032 1837     		adds	r7, r7, #24
 205              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 6


 206 0034 BD46     		mov	sp, r7
 207              		.cfi_def_cfa_register 13
 208              		@ sp needed
 209 0036 80BD     		pop	{r7, pc}
 210              		.cfi_endproc
 211              	.LFE68:
 212              		.size	_write, .-_write
 213              		.section	.rodata
 214              		.align	2
 215              	.LC0:
 216 0000 7B2000   		.ascii	"{ \000"
 217 0003 00       		.align	2
 218              	.LC1:
 219 0004 2274696D 		.ascii	"\"time\":\"%ld\" \000"
 219      65223A22 
 219      256C6422 
 219      2000
 220 0012 0000     		.align	2
 221              	.LC2:
 222 0014 22657665 		.ascii	"\"event\":\"error\" \"value\":\"\000"
 222      6E74223A 
 222      22657272 
 222      6F722220 
 222      2276616C 
 223 002e 0000     		.align	2
 224              	.LC3:
 225 0030 22657665 		.ascii	"\"event\":\"warning\" \"value\":\"\000"
 225      6E74223A 
 225      22776172 
 225      6E696E67 
 225      22202276 
 226              		.align	2
 227              	.LC4:
 228 004c 22657665 		.ascii	"\"event\":\"startup\" \"value\":\"\000"
 228      6E74223A 
 228      22737461 
 228      72747570 
 228      22202276 
 229              		.align	2
 230              	.LC5:
 231 0068 22657665 		.ascii	"\"event\":\"notif\" \"value\":\"\000"
 231      6E74223A 
 231      226E6F74 
 231      69662220 
 231      2276616C 
 232 0082 0000     		.align	2
 233              	.LC6:
 234 0084 227D0D0A 		.ascii	"\"}\015\012\000"
 234      00
 235 0089 000000   		.align	2
 236              	.LC7:
 237 008c 256C6400 		.ascii	"%ld\000"
 238              		.align	2
 239              	.LC8:
 240 0090 2000     		.ascii	" \000"
 241 0092 0000     		.align	2
 242              	.LC9:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 7


 243 0094 612B00   		.ascii	"a+\000"
 244              		.section	.text.printNotif,"ax",%progbits
 245              		.align	2
 246              		.global	printNotif
 247              		.thumb
 248              		.thumb_func
 249              		.type	printNotif, %function
 250              	printNotif:
 251              	.LFB69:
  72:debug.c       **** 
  73:debug.c       **** #endif
  74:debug.c       **** 
  75:debug.c       **** // Create function to hijack printf to add an epoch timestamp to print output
  76:debug.c       **** // Whenever a function is declared to have an indeterminate number of arguments, in place of the la
  77:debug.c       **** // to tell the compiler the function should accept however many arguments that the programmer uses,
  78:debug.c       **** // to at least the number of variables declared. 
  79:debug.c       **** void printNotif(uint8 type, char* format, ...){
 252              		.loc 1 79 0
 253              		.cfi_startproc
 254              		@ args = 4, pretend = 12, frame = 2096
 255              		@ frame_needed = 1, uses_anonymous_args = 1
 256 0000 0EB4     		push	{r1, r2, r3}
 257              		.cfi_def_cfa_offset 12
 258              		.cfi_offset 1, -12
 259              		.cfi_offset 2, -8
 260              		.cfi_offset 3, -4
 261 0002 80B5     		push	{r7, lr}
 262              		.cfi_def_cfa_offset 20
 263              		.cfi_offset 7, -20
 264              		.cfi_offset 14, -16
 265 0004 ADF6340D 		subw	sp, sp, #2100
 266              		.cfi_def_cfa_offset 2120
 267 0008 00AF     		add	r7, sp, #0
 268              		.cfi_def_cfa_register 7
 269 000a 0246     		mov	r2, r0
 270 000c FB1D     		adds	r3, r7, #7
 271 000e 1A70     		strb	r2, [r3]
  80:debug.c       ****     
  81:debug.c       ****     char debug_string[MAX_DEBUG_STRING_LENGTH]; // string to be printed
  82:debug.c       ****     
  83:debug.c       ****     // if debug flag = 1, then print debug statements, otherwise don't print anything
  84:debug.c       ****     #if USE_DEBUG
  85:debug.c       ****    
  86:debug.c       ****         // if it is an error, warning, or startup notification and debug_level >= 0, then print the
  87:debug.c       ****         if ((type == NOTIF_TYPE_ERROR || type == NOTIF_TYPE_WARNING  || type == NOTIF_TYPE_STARTUP)
 272              		.loc 1 87 0
 273 0010 FB1D     		adds	r3, r7, #7
 274 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 275 0014 022B     		cmp	r3, #2
 276 0016 07D0     		beq	.L11
 277              		.loc 1 87 0 is_stmt 0 discriminator 1
 278 0018 FB1D     		adds	r3, r7, #7
 279 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 001c 012B     		cmp	r3, #1
 281 001e 03D0     		beq	.L11
 282              		.loc 1 87 0 discriminator 2
 283 0020 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 8


 284 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 285 0024 032B     		cmp	r3, #3
 286 0026 1DD1     		bne	.L12
 287              	.L11:
  88:debug.c       ****             printd("{ ");
 288              		.loc 1 88 0 is_stmt 1
 289 0028 3E48     		ldr	r0, .L20
 290 002a FFF7FEFF 		bl	printd
  89:debug.c       ****             printd("\"time\":\"%ld\" " , getTimeStamp());
 291              		.loc 1 89 0
 292 002e FFF7FEFF 		bl	getTimeStamp
 293 0032 0346     		mov	r3, r0
 294 0034 1946     		mov	r1, r3
 295 0036 3C48     		ldr	r0, .L20+4
 296 0038 FFF7FEFF 		bl	printd
  90:debug.c       ****             
  91:debug.c       ****             if (type == NOTIF_TYPE_ERROR){
 297              		.loc 1 91 0
 298 003c FB1D     		adds	r3, r7, #7
 299 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 300 0040 022B     		cmp	r3, #2
 301 0042 03D1     		bne	.L13
  92:debug.c       ****                 printd("\"event\":\"error\" \"value\":\"");
 302              		.loc 1 92 0
 303 0044 3948     		ldr	r0, .L20+8
 304 0046 FFF7FEFF 		bl	printd
  91:debug.c       ****                 printd("\"event\":\"error\" \"value\":\"");
 305              		.loc 1 91 0
 306 004a 20E0     		b	.L16
 307              	.L13:
  93:debug.c       ****             }else if(type == NOTIF_TYPE_WARNING){
 308              		.loc 1 93 0
 309 004c FB1D     		adds	r3, r7, #7
 310 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 311 0050 012B     		cmp	r3, #1
 312 0052 03D1     		bne	.L15
  94:debug.c       ****                 printd("\"event\":\"warning\" \"value\":\"");
 313              		.loc 1 94 0
 314 0054 3648     		ldr	r0, .L20+12
 315 0056 FFF7FEFF 		bl	printd
  91:debug.c       ****                 printd("\"event\":\"error\" \"value\":\"");
 316              		.loc 1 91 0
 317 005a 18E0     		b	.L16
 318              	.L15:
  95:debug.c       ****             } else{
  96:debug.c       ****                 printd("\"event\":\"startup\" \"value\":\"");
 319              		.loc 1 96 0
 320 005c 3548     		ldr	r0, .L20+16
 321 005e FFF7FEFF 		bl	printd
  91:debug.c       ****                 printd("\"event\":\"error\" \"value\":\"");
 322              		.loc 1 91 0
 323 0062 14E0     		b	.L16
 324              	.L12:
  97:debug.c       ****             }
  98:debug.c       ****         
  99:debug.c       ****         // else if it is an event notification and debug level >= 1, then print everything
 100:debug.c       ****         }else if (type == NOTIF_TYPE_EVENT && updatable_parameters.debug_level >= 1){
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 9


 325              		.loc 1 100 0
 326 0064 FB1D     		adds	r3, r7, #7
 327 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 328 0068 002B     		cmp	r3, #0
 329 006a 52D1     		bne	.L19
 330              		.loc 1 100 0 is_stmt 0 discriminator 1
 331 006c 324B     		ldr	r3, .L20+20
 332 006e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 333 0070 002B     		cmp	r3, #0
 334 0072 4ED0     		beq	.L19
 101:debug.c       ****             printd("{ ");
 335              		.loc 1 101 0 is_stmt 1
 336 0074 2B48     		ldr	r0, .L20
 337 0076 FFF7FEFF 		bl	printd
 102:debug.c       ****             printd("\"time\":\"%ld\" " , getTimeStamp());
 338              		.loc 1 102 0
 339 007a FFF7FEFF 		bl	getTimeStamp
 340 007e 0346     		mov	r3, r0
 341 0080 1946     		mov	r1, r3
 342 0082 2948     		ldr	r0, .L20+4
 343 0084 FFF7FEFF 		bl	printd
 103:debug.c       ****             printd("\"event\":\"notif\" \"value\":\"");
 344              		.loc 1 103 0
 345 0088 2C48     		ldr	r0, .L20+24
 346 008a FFF7FEFF 		bl	printd
 347              	.L16:
 104:debug.c       **** 
 105:debug.c       ****         // else do not print and exit the function    
 106:debug.c       ****         }else{
 107:debug.c       ****             return;
 108:debug.c       ****         }
 109:debug.c       ****         
 110:debug.c       ****         va_list argptr; // create variable argprt of the type va_list from stdarg.h
 111:debug.c       ****         va_start(argptr, format); // from stdarg.h: the va_start() macro is invoked to initialize a
 348              		.loc 1 111 0 discriminator 1
 349 008e 07F50462 		add	r2, r7, #2112
 350 0092 07F12803 		add	r3, r7, #40
 351 0096 1A60     		str	r2, [r3]
 112:debug.c       ****         vsnprintf(debug_string, MAX_DEBUG_STRING_LENGTH, format, argptr); // send text to buffer
 352              		.loc 1 112 0 discriminator 1
 353 0098 07F12803 		add	r3, r7, #40
 354 009c 07F12C00 		add	r0, r7, #44
 355 00a0 1B68     		ldr	r3, [r3]
 356 00a2 D7F83C28 		ldr	r2, [r7, #2108]
 357 00a6 4FF40061 		mov	r1, #2048
 358 00aa FFF7FEFF 		bl	vsnprintf
 113:debug.c       ****         Debug_UART_PutString(debug_string); // Sends a NULL terminated string to the TX buffer for 
 359              		.loc 1 113 0 discriminator 1
 360 00ae 07F12C03 		add	r3, r7, #44
 361 00b2 1846     		mov	r0, r3
 362 00b4 FFF7FEFF 		bl	Debug_UART_PutString
 114:debug.c       ****         va_end(argptr); // the va_end() macro is used to clean up; it invalidates ap for use (unles
 115:debug.c       ****         printd("\"}\r\n");
 363              		.loc 1 115 0 discriminator 1
 364 00b8 2148     		ldr	r0, .L20+28
 365 00ba FFF7FEFF 		bl	printd
 116:debug.c       ****         // Get clock time and save to timeStamp
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 10


 117:debug.c       ****         long timeStamp = getTimeStamp();
 366              		.loc 1 117 0 discriminator 1
 367 00be FFF7FEFF 		bl	getTimeStamp
 368 00c2 C7F82C08 		str	r0, [r7, #2092]
 118:debug.c       ****         char c_timeStamp[32];
 119:debug.c       ****         snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 369              		.loc 1 119 0 discriminator 1
 370 00c6 07F10800 		add	r0, r7, #8
 371 00ca D7F82C38 		ldr	r3, [r7, #2092]
 372 00ce 1D4A     		ldr	r2, .L20+32
 373 00d0 2021     		movs	r1, #32
 374 00d2 FFF7FEFF 		bl	snprintf
 120:debug.c       ****         SD_write(BB_fileName,"a+"," "); // Write a space to the SD Card  
 375              		.loc 1 120 0 discriminator 1
 376 00d6 1C4A     		ldr	r2, .L20+36
 377 00d8 1C49     		ldr	r1, .L20+40
 378 00da 1D48     		ldr	r0, .L20+44
 379 00dc FFF7FEFF 		bl	SD_write
 121:debug.c       ****         SD_write(BB_fileName,"a+",c_timeStamp); // Write timestamp to SD Card 
 380              		.loc 1 121 0 discriminator 1
 381 00e0 07F10803 		add	r3, r7, #8
 382 00e4 1A46     		mov	r2, r3
 383 00e6 1949     		ldr	r1, .L20+40
 384 00e8 1948     		ldr	r0, .L20+44
 385 00ea FFF7FEFF 		bl	SD_write
 122:debug.c       ****         SD_write(BB_fileName,"a+"," "); // Write a space to the SD Card  
 386              		.loc 1 122 0 discriminator 1
 387 00ee 164A     		ldr	r2, .L20+36
 388 00f0 1649     		ldr	r1, .L20+40
 389 00f2 1748     		ldr	r0, .L20+44
 390 00f4 FFF7FEFF 		bl	SD_write
 123:debug.c       ****         SD_write(BB_fileName,"a+",debug_string); // Write data to SD Card  
 391              		.loc 1 123 0 discriminator 1
 392 00f8 07F12C03 		add	r3, r7, #44
 393 00fc 1A46     		mov	r2, r3
 394 00fe 1349     		ldr	r1, .L20+40
 395 0100 1348     		ldr	r0, .L20+44
 396 0102 FFF7FEFF 		bl	SD_write
 124:debug.c       ****         SD_write(BB_fileName,"a+"," "); // Write a space to the SD Card  
 397              		.loc 1 124 0 discriminator 1
 398 0106 104A     		ldr	r2, .L20+36
 399 0108 1049     		ldr	r1, .L20+40
 400 010a 1148     		ldr	r0, .L20+44
 401 010c FFF7FEFF 		bl	SD_write
 402 0110 00E0     		b	.L10
 403              	.L19:
 107:debug.c       ****         }
 404              		.loc 1 107 0
 405 0112 00BF     		nop
 406              	.L10:
 125:debug.c       **** 
 126:debug.c       ****     #endif 
 127:debug.c       **** }
 407              		.loc 1 127 0
 408 0114 07F63407 		addw	r7, r7, #2100
 409              		.cfi_def_cfa_offset 20
 410 0118 BD46     		mov	sp, r7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 11


 411              		.cfi_def_cfa_register 13
 412              		@ sp needed
 413 011a BDE88040 		pop	{r7, lr}
 414              		.cfi_restore 14
 415              		.cfi_restore 7
 416              		.cfi_def_cfa_offset 12
 417 011e 03B0     		add	sp, sp, #12
 418              		.cfi_restore 3
 419              		.cfi_restore 2
 420              		.cfi_restore 1
 421              		.cfi_def_cfa_offset 0
 422 0120 7047     		bx	lr
 423              	.L21:
 424 0122 00BF     		.align	2
 425              	.L20:
 426 0124 00000000 		.word	.LC0
 427 0128 04000000 		.word	.LC1
 428 012c 14000000 		.word	.LC2
 429 0130 30000000 		.word	.LC3
 430 0134 4C000000 		.word	.LC4
 431 0138 00000000 		.word	updatable_parameters
 432 013c 68000000 		.word	.LC5
 433 0140 84000000 		.word	.LC6
 434 0144 8C000000 		.word	.LC7
 435 0148 90000000 		.word	.LC8
 436 014c 94000000 		.word	.LC9
 437 0150 00000000 		.word	BB_fileName
 438              		.cfi_endproc
 439              	.LFE69:
 440              		.size	printNotif, .-printNotif
 441              		.section	.rodata
 442 0097 00       		.align	2
 443              	.LC10:
 444 0098 22657665 		.ascii	"\"event\":\"test\" \000"
 444      6E74223A 
 444      22746573 
 444      74222000 
 445              		.align	2
 446              	.LC11:
 447 00a8 226E616D 		.ascii	"\"name\":\"%s\" \000"
 447      65223A22 
 447      25732220 
 447      00
 448 00b5 000000   		.align	2
 449              	.LC12:
 450 00b8 22737461 		.ascii	"\"status\":\"%d\" \000"
 450      74757322 
 450      3A222564 
 450      222000
 451 00c7 00       		.align	2
 452              	.LC13:
 453 00c8 22726561 		.ascii	"\"reason\":\"%s\" \000"
 453      736F6E22 
 453      3A222573 
 453      222000
 454 00d7 00       		.align	2
 455              	.LC14:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 12


 456 00d8 7D0D0A00 		.ascii	"}\015\012\000"
 457              		.section	.text.printTestStatus,"ax",%progbits
 458              		.align	2
 459              		.global	printTestStatus
 460              		.thumb
 461              		.thumb_func
 462              		.type	printTestStatus, %function
 463              	printTestStatus:
 464              	.LFB70:
 128:debug.c       **** 
 129:debug.c       **** // Print debug test status
 130:debug.c       **** void printTestStatus(test_t test){
 465              		.loc 1 130 0
 466              		.cfi_startproc
 467              		@ args = 388, pretend = 16, frame = 0
 468              		@ frame_needed = 1, uses_anonymous_args = 0
 469 0000 84B0     		sub	sp, sp, #16
 470              		.cfi_def_cfa_offset 16
 471 0002 80B5     		push	{r7, lr}
 472              		.cfi_def_cfa_offset 24
 473              		.cfi_offset 7, -24
 474              		.cfi_offset 14, -20
 475 0004 00AF     		add	r7, sp, #0
 476              		.cfi_def_cfa_register 7
 477 0006 07F1080E 		add	lr, r7, #8
 478 000a 8EE80F00 		stmia	lr, {r0, r1, r2, r3}
 131:debug.c       ****     // if debug flag = 1
 132:debug.c       ****     #if USE_DEBUG
 133:debug.c       ****         printd("{ ");
 479              		.loc 1 133 0
 480 000e 1348     		ldr	r0, .L23
 481 0010 FFF7FEFF 		bl	printd
 134:debug.c       ****         printd("\"time\":\"%ld\" " , getTimeStamp());
 482              		.loc 1 134 0
 483 0014 FFF7FEFF 		bl	getTimeStamp
 484 0018 0346     		mov	r3, r0
 485 001a 1946     		mov	r1, r3
 486 001c 1048     		ldr	r0, .L23+4
 487 001e FFF7FEFF 		bl	printd
 135:debug.c       ****         
 136:debug.c       ****         printd("\"event\":\"test\" ");
 488              		.loc 1 136 0
 489 0022 1048     		ldr	r0, .L23+8
 490 0024 FFF7FEFF 		bl	printd
 137:debug.c       ****         printd("\"name\":\"%s\" ", test.test_name);
 491              		.loc 1 137 0
 492 0028 07F10801 		add	r1, r7, #8
 493 002c 0E48     		ldr	r0, .L23+12
 494 002e FFF7FEFF 		bl	printd
 138:debug.c       ****         printd("\"status\":\"%d\" ", test.status);
 495              		.loc 1 138 0
 496 0032 97F88830 		ldrb	r3, [r7, #136]	@ zero_extendqisi2
 497 0036 1946     		mov	r1, r3
 498 0038 0C48     		ldr	r0, .L23+16
 499 003a FFF7FEFF 		bl	printd
 139:debug.c       ****         printd("\"reason\":\"%s\" ", test.reason);
 500              		.loc 1 139 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 13


 501 003e 07F18903 		add	r3, r7, #137
 502 0042 1946     		mov	r1, r3
 503 0044 0A48     		ldr	r0, .L23+20
 504 0046 FFF7FEFF 		bl	printd
 140:debug.c       **** 
 141:debug.c       ****         printd("}\r\n");
 505              		.loc 1 141 0
 506 004a 0A48     		ldr	r0, .L23+24
 507 004c FFF7FEFF 		bl	printd
 142:debug.c       ****     #endif
 143:debug.c       ****    
 144:debug.c       **** }
 508              		.loc 1 144 0
 509 0050 00BF     		nop
 510 0052 BD46     		mov	sp, r7
 511              		.cfi_def_cfa_register 13
 512              		@ sp needed
 513 0054 BDE88040 		pop	{r7, lr}
 514              		.cfi_restore 14
 515              		.cfi_restore 7
 516              		.cfi_def_cfa_offset 16
 517 0058 04B0     		add	sp, sp, #16
 518              		.cfi_def_cfa_offset 0
 519 005a 7047     		bx	lr
 520              	.L24:
 521              		.align	2
 522              	.L23:
 523 005c 00000000 		.word	.LC0
 524 0060 04000000 		.word	.LC1
 525 0064 98000000 		.word	.LC10
 526 0068 A8000000 		.word	.LC11
 527 006c B8000000 		.word	.LC12
 528 0070 C8000000 		.word	.LC13
 529 0074 D8000000 		.word	.LC14
 530              		.cfi_endproc
 531              	.LFE70:
 532              		.size	printTestStatus, .-printTestStatus
 533              		.section	.text.getTimeStamp,"ax",%progbits
 534              		.align	2
 535              		.global	getTimeStamp
 536              		.thumb
 537              		.thumb_func
 538              		.type	getTimeStamp, %function
 539              	getTimeStamp:
 540              	.LFB71:
 145:debug.c       **** 
 146:debug.c       **** 
 147:debug.c       **** // Returns local times in epoch seconds (seconds since Jan 1, 1970)
 148:debug.c       **** // Can also cast this to a t_of_day struct
 149:debug.c       **** long getTimeStamp(){
 541              		.loc 1 149 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 48
 544              		@ frame_needed = 1, uses_anonymous_args = 0
 545 0000 80B5     		push	{r7, lr}
 546              		.cfi_def_cfa_offset 8
 547              		.cfi_offset 7, -8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 14


 548              		.cfi_offset 14, -4
 549 0002 8CB0     		sub	sp, sp, #48
 550              		.cfi_def_cfa_offset 56
 551 0004 00AF     		add	r7, sp, #0
 552              		.cfi_def_cfa_register 7
 150:debug.c       ****     // RTC_TIME_DATE * RTC_ReadTime(void) Description: Reads the current time and date. Parameters:
 151:debug.c       ****     // Creates a variable named localTime that is a pointer to RTC_TIME_DATE. It saves the time and
 152:debug.c       ****     RTC_TIME_DATE *localTime = RTC_ReadTime();
 553              		.loc 1 152 0
 554 0006 FFF7FEFF 		bl	RTC_ReadTime
 555 000a F862     		str	r0, [r7, #44]
 153:debug.c       ****    
 154:debug.c       ****     struct tm t; // creates variable t of struct tm
 155:debug.c       ****     time_t t_of_day;
 156:debug.c       **** 
 157:debug.c       ****     // sets each variable to the correct time 
 158:debug.c       ****     t.tm_sec = localTime->Sec;
 556              		.loc 1 158 0
 557 000c FB6A     		ldr	r3, [r7, #44]
 558 000e 1B78     		ldrb	r3, [r3]
 559 0010 DBB2     		uxtb	r3, r3
 560 0012 7B60     		str	r3, [r7, #4]
 159:debug.c       ****     t.tm_min = localTime->Min;
 561              		.loc 1 159 0
 562 0014 FB6A     		ldr	r3, [r7, #44]
 563 0016 5B78     		ldrb	r3, [r3, #1]
 564 0018 DBB2     		uxtb	r3, r3
 565 001a BB60     		str	r3, [r7, #8]
 160:debug.c       ****     t.tm_hour = localTime->Hour;
 566              		.loc 1 160 0
 567 001c FB6A     		ldr	r3, [r7, #44]
 568 001e 9B78     		ldrb	r3, [r3, #2]
 569 0020 DBB2     		uxtb	r3, r3
 570 0022 FB60     		str	r3, [r7, #12]
 161:debug.c       ****     t.tm_year = localTime->Year - 1900;  // Year - 1900
 571              		.loc 1 161 0
 572 0024 FB6A     		ldr	r3, [r7, #44]
 573 0026 5B89     		ldrh	r3, [r3, #10]	@ movhi
 574 0028 9BB2     		uxth	r3, r3
 575 002a A3F26C73 		subw	r3, r3, #1900
 576 002e BB61     		str	r3, [r7, #24]
 162:debug.c       ****     t.tm_mon = localTime->Month;           // Month, where 0 = jan
 577              		.loc 1 162 0
 578 0030 FB6A     		ldr	r3, [r7, #44]
 579 0032 1B7A     		ldrb	r3, [r3, #8]
 580 0034 DBB2     		uxtb	r3, r3
 581 0036 7B61     		str	r3, [r7, #20]
 163:debug.c       ****     t.tm_mday = localTime->DayOfMonth;          // Day of the month
 582              		.loc 1 163 0
 583 0038 FB6A     		ldr	r3, [r7, #44]
 584 003a 1B79     		ldrb	r3, [r3, #4]
 585 003c DBB2     		uxtb	r3, r3
 586 003e 3B61     		str	r3, [r7, #16]
 164:debug.c       ****     t.tm_isdst = 0;        // Is Daylight Savings on? 1 = yes, 0 = no, -1 = unknown
 587              		.loc 1 164 0
 588 0040 0023     		movs	r3, #0
 589 0042 7B62     		str	r3, [r7, #36]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 15


 165:debug.c       ****     
 166:debug.c       ****     // the mktime() function converts a broken-down local time (pointed to by timeptr) and returns 
 167:debug.c       ****     // the syntax for the mktime function in the C Language is: time_t mktime(struct tm *timeptr);
 168:debug.c       ****     // creates variable t_of_day of type time_t
 169:debug.c       ****     t_of_day = mktime(&t); // determines a calendar time
 590              		.loc 1 169 0
 591 0044 3B1D     		adds	r3, r7, #4
 592 0046 1846     		mov	r0, r3
 593 0048 FFF7FEFF 		bl	mktime
 594 004c B862     		str	r0, [r7, #40]
 170:debug.c       **** 
 171:debug.c       ****     return (long) t_of_day;
 595              		.loc 1 171 0
 596 004e BB6A     		ldr	r3, [r7, #40]
 172:debug.c       **** }
 597              		.loc 1 172 0
 598 0050 1846     		mov	r0, r3
 599 0052 3037     		adds	r7, r7, #48
 600              		.cfi_def_cfa_offset 8
 601 0054 BD46     		mov	sp, r7
 602              		.cfi_def_cfa_register 13
 603              		@ sp needed
 604 0056 80BD     		pop	{r7, pc}
 605              		.cfi_endproc
 606              	.LFE71:
 607              		.size	getTimeStamp, .-getTimeStamp
 608              		.section	.text.stripEscapeCharacters,"ax",%progbits
 609              		.align	2
 610              		.global	stripEscapeCharacters
 611              		.thumb
 612              		.thumb_func
 613              		.type	stripEscapeCharacters, %function
 614              	stripEscapeCharacters:
 615              	.LFB72:
 173:debug.c       **** 
 174:debug.c       **** // The C library function char *strchr(const char *str, int c) searches for the first occurrence of
 175:debug.c       **** // Format for strchr() function: char *strchr(const char *str, int c).
 176:debug.c       **** void stripEscapeCharacters(char *string){
 616              		.loc 1 176 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 16
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620 0000 80B5     		push	{r7, lr}
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 7, -8
 623              		.cfi_offset 14, -4
 624 0002 84B0     		sub	sp, sp, #16
 625              		.cfi_def_cfa_offset 24
 626 0004 00AF     		add	r7, sp, #0
 627              		.cfi_def_cfa_register 7
 628 0006 7860     		str	r0, [r7, #4]
 177:debug.c       **** 
 178:debug.c       ****   char * pch;
 179:debug.c       ****   pch=strchr(string,'\n');
 629              		.loc 1 179 0
 630 0008 0A21     		movs	r1, #10
 631 000a 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 16


 632 000c FFF7FEFF 		bl	strchr
 633 0010 F860     		str	r0, [r7, #12]
 180:debug.c       ****   while (pch!=NULL)
 634              		.loc 1 180 0
 635 0012 0EE0     		b	.L28
 636              	.L29:
 181:debug.c       ****   {
 182:debug.c       ****     string[pch-string+1] = 0;
 637              		.loc 1 182 0
 638 0014 FA68     		ldr	r2, [r7, #12]
 639 0016 7B68     		ldr	r3, [r7, #4]
 640 0018 D31A     		subs	r3, r2, r3
 641 001a 0133     		adds	r3, r3, #1
 642 001c 7A68     		ldr	r2, [r7, #4]
 643 001e 1344     		add	r3, r3, r2
 644 0020 0022     		movs	r2, #0
 645 0022 1A70     		strb	r2, [r3]
 183:debug.c       ****     pch=strchr(pch+1,'s');
 646              		.loc 1 183 0
 647 0024 FB68     		ldr	r3, [r7, #12]
 648 0026 0133     		adds	r3, r3, #1
 649 0028 7321     		movs	r1, #115
 650 002a 1846     		mov	r0, r3
 651 002c FFF7FEFF 		bl	strchr
 652 0030 F860     		str	r0, [r7, #12]
 653              	.L28:
 180:debug.c       ****   while (pch!=NULL)
 654              		.loc 1 180 0
 655 0032 FB68     		ldr	r3, [r7, #12]
 656 0034 002B     		cmp	r3, #0
 657 0036 EDD1     		bne	.L29
 184:debug.c       ****   }
 185:debug.c       **** }
 658              		.loc 1 185 0
 659 0038 00BF     		nop
 660 003a 1037     		adds	r7, r7, #16
 661              		.cfi_def_cfa_offset 8
 662 003c BD46     		mov	sp, r7
 663              		.cfi_def_cfa_register 13
 664              		@ sp needed
 665 003e 80BD     		pop	{r7, pc}
 666              		.cfi_endproc
 667              	.LFE72:
 668              		.size	stripEscapeCharacters, .-stripEscapeCharacters
 669              		.section	.text.strextract,"ax",%progbits
 670              		.align	2
 671              		.global	strextract
 672              		.thumb
 673              		.thumb_func
 674              		.type	strextract, %function
 675              	strextract:
 676              	.LFB73:
 186:debug.c       **** 
 187:debug.c       **** // Extract
 188:debug.c       **** char *strextract(const char input_str[], char output_str[],
 189:debug.c       ****                  const char search_start[], const char search_end[]) {
 677              		.loc 1 189 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 17


 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 24
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 80B5     		push	{r7, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 7, -8
 684              		.cfi_offset 14, -4
 685 0002 86B0     		sub	sp, sp, #24
 686              		.cfi_def_cfa_offset 32
 687 0004 00AF     		add	r7, sp, #0
 688              		.cfi_def_cfa_register 7
 689 0006 F860     		str	r0, [r7, #12]
 690 0008 B960     		str	r1, [r7, #8]
 691 000a 7A60     		str	r2, [r7, #4]
 692 000c 3B60     		str	r3, [r7]
 190:debug.c       ****     if (input_str == NULL) return NULL;
 693              		.loc 1 190 0
 694 000e FB68     		ldr	r3, [r7, #12]
 695 0010 002B     		cmp	r3, #0
 696 0012 01D1     		bne	.L31
 697              		.loc 1 190 0 is_stmt 0 discriminator 1
 698 0014 0023     		movs	r3, #0
 699 0016 29E0     		b	.L32
 700              	.L31:
 191:debug.c       ****     char *begin, *end = NULL;
 701              		.loc 1 191 0 is_stmt 1
 702 0018 0023     		movs	r3, #0
 703 001a 7B61     		str	r3, [r7, #20]
 192:debug.c       **** 
 193:debug.c       ****     // strstr(): char *strstr(const char *haystack, const char *needle). haystack - main C string t
 194:debug.c       ****     if ((begin = strstr(input_str, search_start))) {
 704              		.loc 1 194 0
 705 001c 7968     		ldr	r1, [r7, #4]
 706 001e F868     		ldr	r0, [r7, #12]
 707 0020 FFF7FEFF 		bl	strstr
 708 0024 3861     		str	r0, [r7, #16]
 709 0026 3B69     		ldr	r3, [r7, #16]
 710 0028 002B     		cmp	r3, #0
 711 002a 1ED0     		beq	.L33
 195:debug.c       ****         // The strlen() function calculates the length of a given string. The strlen() function tak
 196:debug.c       ****         begin += strlen(search_start);
 712              		.loc 1 196 0
 713 002c 7868     		ldr	r0, [r7, #4]
 714 002e FFF7FEFF 		bl	strlen
 715 0032 0246     		mov	r2, r0
 716 0034 3B69     		ldr	r3, [r7, #16]
 717 0036 1344     		add	r3, r3, r2
 718 0038 3B61     		str	r3, [r7, #16]
 197:debug.c       ****         if ((end = strstr(begin, search_end))) {
 719              		.loc 1 197 0
 720 003a 3968     		ldr	r1, [r7]
 721 003c 3869     		ldr	r0, [r7, #16]
 722 003e FFF7FEFF 		bl	strstr
 723 0042 7861     		str	r0, [r7, #20]
 724 0044 7B69     		ldr	r3, [r7, #20]
 725 0046 002B     		cmp	r3, #0
 726 0048 0FD0     		beq	.L33
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 18


 198:debug.c       ****             // strncpy(: char *strncpy(char *dest, const char *src, size_t n). dest -  pointer to t
 199:debug.c       ****             strncpy(output_str, begin, end - begin);
 727              		.loc 1 199 0
 728 004a 7A69     		ldr	r2, [r7, #20]
 729 004c 3B69     		ldr	r3, [r7, #16]
 730 004e D31A     		subs	r3, r2, r3
 731 0050 1A46     		mov	r2, r3
 732 0052 3969     		ldr	r1, [r7, #16]
 733 0054 B868     		ldr	r0, [r7, #8]
 734 0056 FFF7FEFF 		bl	strncpy
 200:debug.c       ****             output_str[end - begin] = '\0';
 735              		.loc 1 200 0
 736 005a 7A69     		ldr	r2, [r7, #20]
 737 005c 3B69     		ldr	r3, [r7, #16]
 738 005e D31A     		subs	r3, r2, r3
 739 0060 1A46     		mov	r2, r3
 740 0062 BB68     		ldr	r3, [r7, #8]
 741 0064 1344     		add	r3, r3, r2
 742 0066 0022     		movs	r2, #0
 743 0068 1A70     		strb	r2, [r3]
 744              	.L33:
 201:debug.c       ****         }
 202:debug.c       ****     }
 203:debug.c       **** 
 204:debug.c       ****     return end;
 745              		.loc 1 204 0
 746 006a 7B69     		ldr	r3, [r7, #20]
 747              	.L32:
 205:debug.c       **** }
 748              		.loc 1 205 0
 749 006c 1846     		mov	r0, r3
 750 006e 1837     		adds	r7, r7, #24
 751              		.cfi_def_cfa_offset 8
 752 0070 BD46     		mov	sp, r7
 753              		.cfi_def_cfa_register 13
 754              		@ sp needed
 755 0072 80BD     		pop	{r7, pc}
 756              		.cfi_endproc
 757              	.LFE73:
 758              		.size	strextract, .-strextract
 759              		.section	.text.printd,"ax",%progbits
 760              		.align	2
 761              		.global	printd
 762              		.thumb
 763              		.thumb_func
 764              		.type	printd, %function
 765              	printd:
 766              	.LFB74:
 206:debug.c       **** 
 207:debug.c       **** //outr attempt at a safe (from buffer overflow) version of printf     
 208:debug.c       **** void printd(char* format, ...){
 767              		.loc 1 208 0
 768              		.cfi_startproc
 769              		@ args = 4, pretend = 16, frame = 2056
 770              		@ frame_needed = 1, uses_anonymous_args = 1
 771 0000 0FB4     		push	{r0, r1, r2, r3}
 772              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 19


 773              		.cfi_offset 0, -16
 774              		.cfi_offset 1, -12
 775              		.cfi_offset 2, -8
 776              		.cfi_offset 3, -4
 777 0002 80B5     		push	{r7, lr}
 778              		.cfi_def_cfa_offset 24
 779              		.cfi_offset 7, -24
 780              		.cfi_offset 14, -20
 781 0004 ADF6080D 		subw	sp, sp, #2056
 782              		.cfi_def_cfa_offset 2080
 783 0008 00AF     		add	r7, sp, #0
 784              		.cfi_def_cfa_register 7
 209:debug.c       ****     
 210:debug.c       ****     va_list argptr; // Create variable argptr of data structure va_list
 211:debug.c       ****     va_start(argptr, format); // void va_start(va_list ap, last_arg) initializes ap variable to be 
 785              		.loc 1 211 0
 786 000a 07F61403 		addw	r3, r7, #2068
 787 000e C7F80438 		str	r3, [r7, #2052]
 212:debug.c       ****     
 213:debug.c       ****     // Create character array debug_string of size MAX_DEBUG_STRING_LENGTH
 214:debug.c       ****     char debug_string[MAX_DEBUG_STRING_LENGTH];
 215:debug.c       ****     // The vsnprintf() used to write a formatted string to a string buffer.vsnprintf(debug_string,M
 216:debug.c       ****     vsnprintf(debug_string,MAX_DEBUG_STRING_LENGTH,format, argptr);
 788              		.loc 1 216 0
 789 0012 381D     		adds	r0, r7, #4
 790 0014 D7F80438 		ldr	r3, [r7, #2052]
 791 0018 D7F81028 		ldr	r2, [r7, #2064]
 792 001c 4FF40061 		mov	r1, #2048
 793 0020 FFF7FEFF 		bl	vsnprintf
 217:debug.c       ****     // Sends a NULL terminated string to the TX buffer for transmission.
 218:debug.c       ****     Debug_UART_PutString(debug_string);
 794              		.loc 1 218 0
 795 0024 3B1D     		adds	r3, r7, #4
 796 0026 1846     		mov	r0, r3
 797 0028 FFF7FEFF 		bl	Debug_UART_PutString
 219:debug.c       ****     
 220:debug.c       ****     va_end(argptr); // macro void va_end(va_list ap) allows a function with variable arguments whic
 221:debug.c       ****     
 222:debug.c       **** }
 798              		.loc 1 222 0
 799 002c 00BF     		nop
 800 002e 07F60807 		addw	r7, r7, #2056
 801              		.cfi_def_cfa_offset 24
 802 0032 BD46     		mov	sp, r7
 803              		.cfi_def_cfa_register 13
 804              		@ sp needed
 805 0034 BDE88040 		pop	{r7, lr}
 806              		.cfi_restore 14
 807              		.cfi_restore 7
 808              		.cfi_def_cfa_offset 16
 809 0038 04B0     		add	sp, sp, #16
 810              		.cfi_restore 3
 811              		.cfi_restore 2
 812              		.cfi_restore 1
 813              		.cfi_restore 0
 814              		.cfi_def_cfa_offset 0
 815 003a 7047     		bx	lr
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 20


 816              		.cfi_endproc
 817              	.LFE74:
 818              		.size	printd, .-printd
 819              		.text
 820              	.Letext0:
 821              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 822              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 823              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 824              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 825              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 826              		.file 7 "Generated_Source\\PSoC5/cytypes.h"
 827              		.file 8 "Generated_Source\\PSoC5/RTC.h"
 828              		.file 9 "testing.h"
 829              		.file 10 "data.h"
 830              		.file 11 "modem.h"
 831              		.file 12 "Generated_Source\\PSoC5/core_cm3.h"
 832              		.file 13 "<built-in>"
 833              		.section	.debug_info,"",%progbits
 834              	.Ldebug_info0:
 835 0000 F2060000 		.4byte	0x6f2
 836 0004 0400     		.2byte	0x4
 837 0006 00000000 		.4byte	.Ldebug_abbrev0
 838 000a 04       		.byte	0x4
 839 000b 01       		.uleb128 0x1
 840 000c 71000000 		.4byte	.LASF102
 841 0010 0C       		.byte	0xc
 842 0011 9B020000 		.4byte	.LASF103
 843 0015 EC020000 		.4byte	.LASF104
 844 0019 00000000 		.4byte	.Ldebug_ranges0+0
 845 001d 00000000 		.4byte	0
 846 0021 00000000 		.4byte	.Ldebug_line0
 847 0025 02       		.uleb128 0x2
 848 0026 01       		.byte	0x1
 849 0027 06       		.byte	0x6
 850 0028 A3020000 		.4byte	.LASF0
 851 002c 02       		.uleb128 0x2
 852 002d 01       		.byte	0x1
 853 002e 08       		.byte	0x8
 854 002f 53020000 		.4byte	.LASF1
 855 0033 02       		.uleb128 0x2
 856 0034 02       		.byte	0x2
 857 0035 05       		.byte	0x5
 858 0036 4D000000 		.4byte	.LASF2
 859 003a 02       		.uleb128 0x2
 860 003b 02       		.byte	0x2
 861 003c 07       		.byte	0x7
 862 003d 6B030000 		.4byte	.LASF3
 863 0041 03       		.uleb128 0x3
 864 0042 85040000 		.4byte	.LASF10
 865 0046 02       		.byte	0x2
 866 0047 3F       		.byte	0x3f
 867 0048 4C000000 		.4byte	0x4c
 868 004c 02       		.uleb128 0x2
 869 004d 04       		.byte	0x4
 870 004e 05       		.byte	0x5
 871 004f DA010000 		.4byte	.LASF4
 872 0053 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 21


 873 0054 04       		.byte	0x4
 874 0055 07       		.byte	0x7
 875 0056 4B040000 		.4byte	.LASF5
 876 005a 02       		.uleb128 0x2
 877 005b 08       		.byte	0x8
 878 005c 05       		.byte	0x5
 879 005d 07010000 		.4byte	.LASF6
 880 0061 02       		.uleb128 0x2
 881 0062 08       		.byte	0x8
 882 0063 07       		.byte	0x7
 883 0064 B7020000 		.4byte	.LASF7
 884 0068 04       		.uleb128 0x4
 885 0069 04       		.byte	0x4
 886 006a 05       		.byte	0x5
 887 006b 696E7400 		.ascii	"int\000"
 888 006f 02       		.uleb128 0x2
 889 0070 04       		.byte	0x4
 890 0071 07       		.byte	0x7
 891 0072 D3020000 		.4byte	.LASF8
 892 0076 02       		.uleb128 0x2
 893 0077 08       		.byte	0x8
 894 0078 04       		.byte	0x4
 895 0079 32020000 		.4byte	.LASF9
 896 007d 03       		.uleb128 0x3
 897 007e 96040000 		.4byte	.LASF11
 898 0082 03       		.byte	0x3
 899 0083 28       		.byte	0x28
 900 0084 88000000 		.4byte	0x88
 901 0088 05       		.uleb128 0x5
 902 0089 B7010000 		.4byte	.LASF16
 903 008d 04       		.byte	0x4
 904 008e 0D       		.byte	0xd
 905 008f 00       		.byte	0
 906 0090 9F000000 		.4byte	0x9f
 907 0094 06       		.uleb128 0x6
 908 0095 9D030000 		.4byte	.LASF105
 909 0099 9F000000 		.4byte	0x9f
 910 009d 00       		.byte	0
 911 009e 00       		.byte	0
 912 009f 07       		.uleb128 0x7
 913 00a0 04       		.byte	0x4
 914 00a1 02       		.uleb128 0x2
 915 00a2 04       		.byte	0x4
 916 00a3 07       		.byte	0x7
 917 00a4 57000000 		.4byte	.LASF12
 918 00a8 08       		.uleb128 0x8
 919 00a9 04       		.byte	0x4
 920 00aa AE000000 		.4byte	0xae
 921 00ae 02       		.uleb128 0x2
 922 00af 01       		.byte	0x1
 923 00b0 08       		.byte	0x8
 924 00b1 C1010000 		.4byte	.LASF13
 925 00b5 08       		.uleb128 0x8
 926 00b6 04       		.byte	0x4
 927 00b7 BB000000 		.4byte	0xbb
 928 00bb 09       		.uleb128 0x9
 929 00bc AE000000 		.4byte	0xae
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 22


 930 00c0 03       		.uleb128 0x3
 931 00c1 D0030000 		.4byte	.LASF14
 932 00c5 04       		.byte	0x4
 933 00c6 2C       		.byte	0x2c
 934 00c7 41000000 		.4byte	0x41
 935 00cb 03       		.uleb128 0x3
 936 00cc 45010000 		.4byte	.LASF15
 937 00d0 05       		.byte	0x5
 938 00d1 28       		.byte	0x28
 939 00d2 4C000000 		.4byte	0x4c
 940 00d6 0A       		.uleb128 0xa
 941 00d7 746D00   		.ascii	"tm\000"
 942 00da 24       		.byte	0x24
 943 00db 06       		.byte	0x6
 944 00dc 21       		.byte	0x21
 945 00dd 4E010000 		.4byte	0x14e
 946 00e1 0B       		.uleb128 0xb
 947 00e2 BD040000 		.4byte	.LASF17
 948 00e6 06       		.byte	0x6
 949 00e7 23       		.byte	0x23
 950 00e8 68000000 		.4byte	0x68
 951 00ec 00       		.byte	0
 952 00ed 0B       		.uleb128 0xb
 953 00ee 20040000 		.4byte	.LASF18
 954 00f2 06       		.byte	0x6
 955 00f3 24       		.byte	0x24
 956 00f4 68000000 		.4byte	0x68
 957 00f8 04       		.byte	0x4
 958 00f9 0B       		.uleb128 0xb
 959 00fa 86010000 		.4byte	.LASF19
 960 00fe 06       		.byte	0x6
 961 00ff 25       		.byte	0x25
 962 0100 68000000 		.4byte	0x68
 963 0104 08       		.byte	0x8
 964 0105 0B       		.uleb128 0xb
 965 0106 19000000 		.4byte	.LASF20
 966 010a 06       		.byte	0x6
 967 010b 26       		.byte	0x26
 968 010c 68000000 		.4byte	0x68
 969 0110 0C       		.byte	0xc
 970 0111 0B       		.uleb128 0xb
 971 0112 9E010000 		.4byte	.LASF21
 972 0116 06       		.byte	0x6
 973 0117 27       		.byte	0x27
 974 0118 68000000 		.4byte	0x68
 975 011c 10       		.byte	0x10
 976 011d 0B       		.uleb128 0xb
 977 011e AF020000 		.4byte	.LASF22
 978 0122 06       		.byte	0x6
 979 0123 28       		.byte	0x28
 980 0124 68000000 		.4byte	0x68
 981 0128 14       		.byte	0x14
 982 0129 0B       		.uleb128 0xb
 983 012a FF000000 		.4byte	.LASF23
 984 012e 06       		.byte	0x6
 985 012f 29       		.byte	0x29
 986 0130 68000000 		.4byte	0x68
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 23


 987 0134 18       		.byte	0x18
 988 0135 0B       		.uleb128 0xb
 989 0136 5D040000 		.4byte	.LASF24
 990 013a 06       		.byte	0x6
 991 013b 2A       		.byte	0x2a
 992 013c 68000000 		.4byte	0x68
 993 0140 1C       		.byte	0x1c
 994 0141 0B       		.uleb128 0xb
 995 0142 37040000 		.4byte	.LASF25
 996 0146 06       		.byte	0x6
 997 0147 2B       		.byte	0x2b
 998 0148 68000000 		.4byte	0x68
 999 014c 20       		.byte	0x20
 1000 014d 00       		.byte	0
 1001 014e 03       		.uleb128 0x3
 1002 014f 4C010000 		.4byte	.LASF26
 1003 0153 03       		.byte	0x3
 1004 0154 62       		.byte	0x62
 1005 0155 7D000000 		.4byte	0x7d
 1006 0159 0C       		.uleb128 0xc
 1007 015a 66010000 		.4byte	.LASF27
 1008 015e 07       		.byte	0x7
 1009 015f 9201     		.2byte	0x192
 1010 0161 2C000000 		.4byte	0x2c
 1011 0165 0C       		.uleb128 0xc
 1012 0166 3E010000 		.4byte	.LASF28
 1013 016a 07       		.byte	0x7
 1014 016b 9301     		.2byte	0x193
 1015 016d 3A000000 		.4byte	0x3a
 1016 0171 0C       		.uleb128 0xc
 1017 0172 65040000 		.4byte	.LASF29
 1018 0176 07       		.byte	0x7
 1019 0177 9701     		.2byte	0x197
 1020 0179 4C000000 		.4byte	0x4c
 1021 017d 02       		.uleb128 0x2
 1022 017e 04       		.byte	0x4
 1023 017f 04       		.byte	0x4
 1024 0180 8E010000 		.4byte	.LASF30
 1025 0184 02       		.uleb128 0x2
 1026 0185 08       		.byte	0x8
 1027 0186 04       		.byte	0x4
 1028 0187 6B040000 		.4byte	.LASF31
 1029 018b 0D       		.uleb128 0xd
 1030 018c 0C       		.byte	0xc
 1031 018d 08       		.byte	0x8
 1032 018e 30       		.byte	0x30
 1033 018f F4010000 		.4byte	0x1f4
 1034 0193 0E       		.uleb128 0xe
 1035 0194 53656300 		.ascii	"Sec\000"
 1036 0198 08       		.byte	0x8
 1037 0199 32       		.byte	0x32
 1038 019a 59010000 		.4byte	0x159
 1039 019e 00       		.byte	0
 1040 019f 0E       		.uleb128 0xe
 1041 01a0 4D696E00 		.ascii	"Min\000"
 1042 01a4 08       		.byte	0x8
 1043 01a5 33       		.byte	0x33
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 24


 1044 01a6 59010000 		.4byte	0x159
 1045 01aa 01       		.byte	0x1
 1046 01ab 0B       		.uleb128 0xb
 1047 01ac 29010000 		.4byte	.LASF32
 1048 01b0 08       		.byte	0x8
 1049 01b1 34       		.byte	0x34
 1050 01b2 59010000 		.4byte	0x159
 1051 01b6 02       		.byte	0x2
 1052 01b7 0B       		.uleb128 0xb
 1053 01b8 94010000 		.4byte	.LASF33
 1054 01bc 08       		.byte	0x8
 1055 01bd 35       		.byte	0x35
 1056 01be 59010000 		.4byte	0x159
 1057 01c2 03       		.byte	0x3
 1058 01c3 0B       		.uleb128 0xb
 1059 01c4 10040000 		.4byte	.LASF34
 1060 01c8 08       		.byte	0x8
 1061 01c9 36       		.byte	0x36
 1062 01ca 59010000 		.4byte	0x159
 1063 01ce 04       		.byte	0x4
 1064 01cf 0B       		.uleb128 0xb
 1065 01d0 FF040000 		.4byte	.LASF35
 1066 01d4 08       		.byte	0x8
 1067 01d5 37       		.byte	0x37
 1068 01d6 65010000 		.4byte	0x165
 1069 01da 06       		.byte	0x6
 1070 01db 0B       		.uleb128 0xb
 1071 01dc 2C020000 		.4byte	.LASF36
 1072 01e0 08       		.byte	0x8
 1073 01e1 38       		.byte	0x38
 1074 01e2 59010000 		.4byte	0x159
 1075 01e6 08       		.byte	0x8
 1076 01e7 0B       		.uleb128 0xb
 1077 01e8 02020000 		.4byte	.LASF37
 1078 01ec 08       		.byte	0x8
 1079 01ed 39       		.byte	0x39
 1080 01ee 65010000 		.4byte	0x165
 1081 01f2 0A       		.byte	0xa
 1082 01f3 00       		.byte	0
 1083 01f4 03       		.uleb128 0x3
 1084 01f5 D1040000 		.4byte	.LASF38
 1085 01f9 08       		.byte	0x8
 1086 01fa 3A       		.byte	0x3a
 1087 01fb FF010000 		.4byte	0x1ff
 1088 01ff 0F       		.uleb128 0xf
 1089 0200 8B010000 		.4byte	0x18b
 1090 0204 10       		.uleb128 0x10
 1091 0205 8101     		.2byte	0x181
 1092 0207 09       		.byte	0x9
 1093 0208 0A       		.byte	0xa
 1094 0209 32020000 		.4byte	0x232
 1095 020d 0B       		.uleb128 0xb
 1096 020e 2D000000 		.4byte	.LASF39
 1097 0212 09       		.byte	0x9
 1098 0213 0C       		.byte	0xc
 1099 0214 32020000 		.4byte	0x232
 1100 0218 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 25


 1101 0219 0B       		.uleb128 0xb
 1102 021a 96030000 		.4byte	.LASF40
 1103 021e 09       		.byte	0x9
 1104 021f 0D       		.byte	0xd
 1105 0220 59010000 		.4byte	0x159
 1106 0224 80       		.byte	0x80
 1107 0225 0B       		.uleb128 0xb
 1108 0226 D3010000 		.4byte	.LASF41
 1109 022a 09       		.byte	0x9
 1110 022b 0F       		.byte	0xf
 1111 022c 42020000 		.4byte	0x242
 1112 0230 81       		.byte	0x81
 1113 0231 00       		.byte	0
 1114 0232 11       		.uleb128 0x11
 1115 0233 AE000000 		.4byte	0xae
 1116 0237 42020000 		.4byte	0x242
 1117 023b 12       		.uleb128 0x12
 1118 023c A1000000 		.4byte	0xa1
 1119 0240 7F       		.byte	0x7f
 1120 0241 00       		.byte	0
 1121 0242 11       		.uleb128 0x11
 1122 0243 AE000000 		.4byte	0xae
 1123 0247 52020000 		.4byte	0x252
 1124 024b 12       		.uleb128 0x12
 1125 024c A1000000 		.4byte	0xa1
 1126 0250 FF       		.byte	0xff
 1127 0251 00       		.byte	0
 1128 0252 03       		.uleb128 0x3
 1129 0253 8F040000 		.4byte	.LASF42
 1130 0257 09       		.byte	0x9
 1131 0258 10       		.byte	0x10
 1132 0259 04020000 		.4byte	0x204
 1133 025d 0D       		.uleb128 0xd
 1134 025e 2C       		.byte	0x2c
 1135 025f 0A       		.byte	0xa
 1136 0260 14       		.byte	0x14
 1137 0261 8A020000 		.4byte	0x28a
 1138 0265 0E       		.uleb128 0xe
 1139 0266 6B657900 		.ascii	"key\000"
 1140 026a 0A       		.byte	0xa
 1141 026b 15       		.byte	0x15
 1142 026c 8A020000 		.4byte	0x28a
 1143 0270 00       		.byte	0
 1144 0271 0B       		.uleb128 0xb
 1145 0272 38010000 		.4byte	.LASF43
 1146 0276 0A       		.byte	0xa
 1147 0277 16       		.byte	0x16
 1148 0278 8A020000 		.4byte	0x28a
 1149 027c 14       		.byte	0x14
 1150 027d 0B       		.uleb128 0xb
 1151 027e 7C010000 		.4byte	.LASF44
 1152 0282 0A       		.byte	0xa
 1153 0283 17       		.byte	0x17
 1154 0284 71010000 		.4byte	0x171
 1155 0288 28       		.byte	0x28
 1156 0289 00       		.byte	0
 1157 028a 11       		.uleb128 0x11
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 26


 1158 028b AE000000 		.4byte	0xae
 1159 028f 9A020000 		.4byte	0x29a
 1160 0293 12       		.uleb128 0x12
 1161 0294 A1000000 		.4byte	0xa1
 1162 0298 13       		.byte	0x13
 1163 0299 00       		.byte	0
 1164 029a 03       		.uleb128 0x3
 1165 029b E0020000 		.4byte	.LASF45
 1166 029f 0A       		.byte	0xa
 1167 02a0 19       		.byte	0x19
 1168 02a1 5D020000 		.4byte	0x25d
 1169 02a5 0D       		.uleb128 0xd
 1170 02a6 3C       		.byte	0x3c
 1171 02a7 0B       		.byte	0xb
 1172 02a8 35       		.byte	0x35
 1173 02a9 D2020000 		.4byte	0x2d2
 1174 02ad 0B       		.uleb128 0xb
 1175 02ae 12000000 		.4byte	.LASF46
 1176 02b2 0B       		.byte	0xb
 1177 02b3 36       		.byte	0x36
 1178 02b4 8A020000 		.4byte	0x28a
 1179 02b8 00       		.byte	0
 1180 02b9 0B       		.uleb128 0xb
 1181 02ba 00000000 		.4byte	.LASF47
 1182 02be 0B       		.byte	0xb
 1183 02bf 37       		.byte	0x37
 1184 02c0 8A020000 		.4byte	0x28a
 1185 02c4 14       		.byte	0x14
 1186 02c5 0B       		.uleb128 0xb
 1187 02c6 BB030000 		.4byte	.LASF48
 1188 02ca 0B       		.byte	0xb
 1189 02cb 38       		.byte	0x38
 1190 02cc 8A020000 		.4byte	0x28a
 1191 02d0 28       		.byte	0x28
 1192 02d1 00       		.byte	0
 1193 02d2 03       		.uleb128 0x3
 1194 02d3 C6010000 		.4byte	.LASF49
 1195 02d7 0B       		.byte	0xb
 1196 02d8 3A       		.byte	0x3a
 1197 02d9 A5020000 		.4byte	0x2a5
 1198 02dd 0D       		.uleb128 0xd
 1199 02de 20       		.byte	0x20
 1200 02df 0B       		.byte	0xb
 1201 02e0 3C       		.byte	0x3c
 1202 02e1 46030000 		.4byte	0x346
 1203 02e5 0B       		.uleb128 0xb
 1204 02e6 5C030000 		.4byte	.LASF50
 1205 02ea 0B       		.byte	0xb
 1206 02eb 3D       		.byte	0x3d
 1207 02ec 68000000 		.4byte	0x68
 1208 02f0 00       		.byte	0
 1209 02f1 0E       		.uleb128 0xe
 1210 02f2 62657200 		.ascii	"ber\000"
 1211 02f6 0B       		.byte	0xb
 1212 02f7 3E       		.byte	0x3e
 1213 02f8 68000000 		.4byte	0x68
 1214 02fc 04       		.byte	0x4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 27


 1215 02fd 0B       		.uleb128 0xb
 1216 02fe 77010000 		.4byte	.LASF51
 1217 0302 0B       		.byte	0xb
 1218 0303 3F       		.byte	0x3f
 1219 0304 68000000 		.4byte	0x68
 1220 0308 08       		.byte	0x8
 1221 0309 0B       		.uleb128 0xb
 1222 030a 33010000 		.4byte	.LASF52
 1223 030e 0B       		.byte	0xb
 1224 030f 40       		.byte	0x40
 1225 0310 68000000 		.4byte	0x68
 1226 0314 0C       		.byte	0xc
 1227 0315 0B       		.uleb128 0xb
 1228 0316 1B040000 		.4byte	.LASF53
 1229 031a 0B       		.byte	0xb
 1230 031b 41       		.byte	0x41
 1231 031c 68000000 		.4byte	0x68
 1232 0320 10       		.byte	0x10
 1233 0321 0B       		.uleb128 0xb
 1234 0322 61020000 		.4byte	.LASF54
 1235 0326 0B       		.byte	0xb
 1236 0327 42       		.byte	0x42
 1237 0328 68000000 		.4byte	0x68
 1238 032c 14       		.byte	0x14
 1239 032d 0B       		.uleb128 0xb
 1240 032e 7E030000 		.4byte	.LASF55
 1241 0332 0B       		.byte	0xb
 1242 0333 43       		.byte	0x43
 1243 0334 68000000 		.4byte	0x68
 1244 0338 18       		.byte	0x18
 1245 0339 0B       		.uleb128 0xb
 1246 033a A2030000 		.4byte	.LASF56
 1247 033e 0B       		.byte	0xb
 1248 033f 44       		.byte	0x44
 1249 0340 68000000 		.4byte	0x68
 1250 0344 1C       		.byte	0x1c
 1251 0345 00       		.byte	0
 1252 0346 03       		.uleb128 0x3
 1253 0347 E5030000 		.4byte	.LASF57
 1254 034b 0B       		.byte	0xb
 1255 034c 46       		.byte	0x46
 1256 034d DD020000 		.4byte	0x2dd
 1257 0351 0D       		.uleb128 0xd
 1258 0352 05       		.byte	0x5
 1259 0353 0B       		.byte	0xb
 1260 0354 52       		.byte	0x52
 1261 0355 96030000 		.4byte	0x396
 1262 0359 0B       		.uleb128 0xb
 1263 035a DF040000 		.4byte	.LASF58
 1264 035e 0B       		.byte	0xb
 1265 035f 54       		.byte	0x54
 1266 0360 59010000 		.4byte	0x159
 1267 0364 00       		.byte	0
 1268 0365 0B       		.uleb128 0xb
 1269 0366 62030000 		.4byte	.LASF59
 1270 036a 0B       		.byte	0xb
 1271 036b 56       		.byte	0x56
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 28


 1272 036c 96030000 		.4byte	0x396
 1273 0370 01       		.byte	0x1
 1274 0371 0B       		.uleb128 0xb
 1275 0372 1F020000 		.4byte	.LASF60
 1276 0376 0B       		.byte	0xb
 1277 0377 58       		.byte	0x58
 1278 0378 59010000 		.4byte	0x159
 1279 037c 02       		.byte	0x2
 1280 037d 0B       		.uleb128 0xb
 1281 037e 2A030000 		.4byte	.LASF61
 1282 0382 0B       		.byte	0xb
 1283 0383 5A       		.byte	0x5a
 1284 0384 59010000 		.4byte	0x159
 1285 0388 03       		.byte	0x3
 1286 0389 0B       		.uleb128 0xb
 1287 038a 79040000 		.4byte	.LASF62
 1288 038e 0B       		.byte	0xb
 1289 038f 5D       		.byte	0x5d
 1290 0390 59010000 		.4byte	0x159
 1291 0394 04       		.byte	0x4
 1292 0395 00       		.byte	0
 1293 0396 02       		.uleb128 0x2
 1294 0397 01       		.byte	0x1
 1295 0398 02       		.byte	0x2
 1296 0399 B5030000 		.4byte	.LASF63
 1297 039d 03       		.uleb128 0x3
 1298 039e 45030000 		.4byte	.LASF64
 1299 03a2 0B       		.byte	0xb
 1300 03a3 5F       		.byte	0x5f
 1301 03a4 51030000 		.4byte	0x351
 1302 03a8 13       		.uleb128 0x13
 1303 03a9 41000000 		.4byte	.LASF65
 1304 03ad 01       		.byte	0x1
 1305 03ae 07       		.byte	0x7
 1306 03af 00000000 		.4byte	.LFB64
 1307 03b3 0C000000 		.4byte	.LFE64-.LFB64
 1308 03b7 01       		.uleb128 0x1
 1309 03b8 9C       		.byte	0x9c
 1310 03b9 13       		.uleb128 0x13
 1311 03ba 40040000 		.4byte	.LASF66
 1312 03be 01       		.byte	0x1
 1313 03bf 11       		.byte	0x11
 1314 03c0 00000000 		.4byte	.LFB65
 1315 03c4 0C000000 		.4byte	.LFE65-.LFB65
 1316 03c8 01       		.uleb128 0x1
 1317 03c9 9C       		.byte	0x9c
 1318 03ca 13       		.uleb128 0x13
 1319 03cb 21000000 		.4byte	.LASF67
 1320 03cf 01       		.byte	0x1
 1321 03d0 19       		.byte	0x19
 1322 03d1 00000000 		.4byte	.LFB66
 1323 03d5 20000000 		.4byte	.LFE66-.LFB66
 1324 03d9 01       		.uleb128 0x1
 1325 03da 9C       		.byte	0x9c
 1326 03db 13       		.uleb128 0x13
 1327 03dc A5040000 		.4byte	.LASF68
 1328 03e0 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 29


 1329 03e1 2A       		.byte	0x2a
 1330 03e2 00000000 		.4byte	.LFB67
 1331 03e6 0C000000 		.4byte	.LFE67-.LFB67
 1332 03ea 01       		.uleb128 0x1
 1333 03eb 9C       		.byte	0x9c
 1334 03ec 14       		.uleb128 0x14
 1335 03ed 15010000 		.4byte	.LASF83
 1336 03f1 01       		.byte	0x1
 1337 03f2 3C       		.byte	0x3c
 1338 03f3 68000000 		.4byte	0x68
 1339 03f7 00000000 		.4byte	.LFB68
 1340 03fb 38000000 		.4byte	.LFE68-.LFB68
 1341 03ff 01       		.uleb128 0x1
 1342 0400 9C       		.byte	0x9c
 1343 0401 3C040000 		.4byte	0x43c
 1344 0405 15       		.uleb128 0x15
 1345 0406 2E010000 		.4byte	.LASF69
 1346 040a 01       		.byte	0x1
 1347 040b 3C       		.byte	0x3c
 1348 040c 68000000 		.4byte	0x68
 1349 0410 02       		.uleb128 0x2
 1350 0411 91       		.byte	0x91
 1351 0412 6C       		.sleb128 -20
 1352 0413 16       		.uleb128 0x16
 1353 0414 70747200 		.ascii	"ptr\000"
 1354 0418 01       		.byte	0x1
 1355 0419 3C       		.byte	0x3c
 1356 041a A8000000 		.4byte	0xa8
 1357 041e 02       		.uleb128 0x2
 1358 041f 91       		.byte	0x91
 1359 0420 68       		.sleb128 -24
 1360 0421 16       		.uleb128 0x16
 1361 0422 6C656E00 		.ascii	"len\000"
 1362 0426 01       		.byte	0x1
 1363 0427 3C       		.byte	0x3c
 1364 0428 68000000 		.4byte	0x68
 1365 042c 02       		.uleb128 0x2
 1366 042d 91       		.byte	0x91
 1367 042e 64       		.sleb128 -28
 1368 042f 17       		.uleb128 0x17
 1369 0430 6900     		.ascii	"i\000"
 1370 0432 01       		.byte	0x1
 1371 0433 3E       		.byte	0x3e
 1372 0434 68000000 		.4byte	0x68
 1373 0438 02       		.uleb128 0x2
 1374 0439 91       		.byte	0x91
 1375 043a 74       		.sleb128 -12
 1376 043b 00       		.byte	0
 1377 043c 18       		.uleb128 0x18
 1378 043d B2040000 		.4byte	.LASF75
 1379 0441 01       		.byte	0x1
 1380 0442 4F       		.byte	0x4f
 1381 0443 00000000 		.4byte	.LFB69
 1382 0447 54010000 		.4byte	.LFE69-.LFB69
 1383 044b 01       		.uleb128 0x1
 1384 044c 9C       		.byte	0x9c
 1385 044d AB040000 		.4byte	0x4ab
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 30


 1386 0451 15       		.uleb128 0x15
 1387 0452 CE020000 		.4byte	.LASF70
 1388 0456 01       		.byte	0x1
 1389 0457 4F       		.byte	0x4f
 1390 0458 59010000 		.4byte	0x159
 1391 045c 03       		.uleb128 0x3
 1392 045d 91       		.byte	0x91
 1393 045e BF6F     		.sleb128 -2113
 1394 0460 15       		.uleb128 0x15
 1395 0461 A5010000 		.4byte	.LASF71
 1396 0465 01       		.byte	0x1
 1397 0466 4F       		.byte	0x4f
 1398 0467 A8000000 		.4byte	0xa8
 1399 046b 02       		.uleb128 0x2
 1400 046c 91       		.byte	0x91
 1401 046d 74       		.sleb128 -12
 1402 046e 19       		.uleb128 0x19
 1403 046f 1A       		.uleb128 0x1a
 1404 0470 D8030000 		.4byte	.LASF72
 1405 0474 01       		.byte	0x1
 1406 0475 51       		.byte	0x51
 1407 0476 AB040000 		.4byte	0x4ab
 1408 047a 03       		.uleb128 0x3
 1409 047b 91       		.byte	0x91
 1410 047c E46F     		.sleb128 -2076
 1411 047e 1A       		.uleb128 0x1a
 1412 047f 72040000 		.4byte	.LASF73
 1413 0483 01       		.byte	0x1
 1414 0484 6E       		.byte	0x6e
 1415 0485 4E010000 		.4byte	0x14e
 1416 0489 03       		.uleb128 0x3
 1417 048a 91       		.byte	0x91
 1418 048b E06F     		.sleb128 -2080
 1419 048d 1A       		.uleb128 0x1a
 1420 048e 7C010000 		.4byte	.LASF44
 1421 0492 01       		.byte	0x1
 1422 0493 75       		.byte	0x75
 1423 0494 4C000000 		.4byte	0x4c
 1424 0498 02       		.uleb128 0x2
 1425 0499 91       		.byte	0x91
 1426 049a 64       		.sleb128 -28
 1427 049b 1A       		.uleb128 0x1a
 1428 049c 13020000 		.4byte	.LASF74
 1429 04a0 01       		.byte	0x1
 1430 04a1 76       		.byte	0x76
 1431 04a2 BC040000 		.4byte	0x4bc
 1432 04a6 03       		.uleb128 0x3
 1433 04a7 91       		.byte	0x91
 1434 04a8 C06F     		.sleb128 -2112
 1435 04aa 00       		.byte	0
 1436 04ab 11       		.uleb128 0x11
 1437 04ac AE000000 		.4byte	0xae
 1438 04b0 BC040000 		.4byte	0x4bc
 1439 04b4 1B       		.uleb128 0x1b
 1440 04b5 A1000000 		.4byte	0xa1
 1441 04b9 FF07     		.2byte	0x7ff
 1442 04bb 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 31


 1443 04bc 11       		.uleb128 0x11
 1444 04bd AE000000 		.4byte	0xae
 1445 04c1 CC040000 		.4byte	0x4cc
 1446 04c5 12       		.uleb128 0x12
 1447 04c6 A1000000 		.4byte	0xa1
 1448 04ca 1F       		.byte	0x1f
 1449 04cb 00       		.byte	0
 1450 04cc 18       		.uleb128 0x18
 1451 04cd C0030000 		.4byte	.LASF76
 1452 04d1 01       		.byte	0x1
 1453 04d2 82       		.byte	0x82
 1454 04d3 00000000 		.4byte	.LFB70
 1455 04d7 78000000 		.4byte	.LFE70-.LFB70
 1456 04db 01       		.uleb128 0x1
 1457 04dc 9C       		.byte	0x9c
 1458 04dd F0040000 		.4byte	0x4f0
 1459 04e1 15       		.uleb128 0x15
 1460 04e2 34030000 		.4byte	.LASF77
 1461 04e6 01       		.byte	0x1
 1462 04e7 82       		.byte	0x82
 1463 04e8 52020000 		.4byte	0x252
 1464 04ec 02       		.uleb128 0x2
 1465 04ed 91       		.byte	0x91
 1466 04ee 70       		.sleb128 -16
 1467 04ef 00       		.byte	0
 1468 04f0 1C       		.uleb128 0x1c
 1469 04f1 1C010000 		.4byte	.LASF78
 1470 04f5 01       		.byte	0x1
 1471 04f6 95       		.byte	0x95
 1472 04f7 4C000000 		.4byte	0x4c
 1473 04fb 00000000 		.4byte	.LFB71
 1474 04ff 58000000 		.4byte	.LFE71-.LFB71
 1475 0503 01       		.uleb128 0x1
 1476 0504 9C       		.byte	0x9c
 1477 0505 32050000 		.4byte	0x532
 1478 0509 1A       		.uleb128 0x1a
 1479 050a 06040000 		.4byte	.LASF79
 1480 050e 01       		.byte	0x1
 1481 050f 98       		.byte	0x98
 1482 0510 32050000 		.4byte	0x532
 1483 0514 02       		.uleb128 0x2
 1484 0515 91       		.byte	0x91
 1485 0516 74       		.sleb128 -12
 1486 0517 17       		.uleb128 0x17
 1487 0518 7400     		.ascii	"t\000"
 1488 051a 01       		.byte	0x1
 1489 051b 9A       		.byte	0x9a
 1490 051c D6000000 		.4byte	0xd6
 1491 0520 02       		.uleb128 0x2
 1492 0521 91       		.byte	0x91
 1493 0522 4C       		.sleb128 -52
 1494 0523 1A       		.uleb128 0x1a
 1495 0524 09000000 		.4byte	.LASF80
 1496 0528 01       		.byte	0x1
 1497 0529 9B       		.byte	0x9b
 1498 052a CB000000 		.4byte	0xcb
 1499 052e 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 32


 1500 052f 91       		.byte	0x91
 1501 0530 70       		.sleb128 -16
 1502 0531 00       		.byte	0
 1503 0532 08       		.uleb128 0x8
 1504 0533 04       		.byte	0x4
 1505 0534 F4010000 		.4byte	0x1f4
 1506 0538 18       		.uleb128 0x18
 1507 0539 E9040000 		.4byte	.LASF81
 1508 053d 01       		.byte	0x1
 1509 053e B0       		.byte	0xb0
 1510 053f 00000000 		.4byte	.LFB72
 1511 0543 40000000 		.4byte	.LFE72-.LFB72
 1512 0547 01       		.uleb128 0x1
 1513 0548 9C       		.byte	0x9c
 1514 0549 6A050000 		.4byte	0x56a
 1515 054d 15       		.uleb128 0x15
 1516 054e FF030000 		.4byte	.LASF82
 1517 0552 01       		.byte	0x1
 1518 0553 B0       		.byte	0xb0
 1519 0554 A8000000 		.4byte	0xa8
 1520 0558 02       		.uleb128 0x2
 1521 0559 91       		.byte	0x91
 1522 055a 6C       		.sleb128 -20
 1523 055b 17       		.uleb128 0x17
 1524 055c 70636800 		.ascii	"pch\000"
 1525 0560 01       		.byte	0x1
 1526 0561 B2       		.byte	0xb2
 1527 0562 A8000000 		.4byte	0xa8
 1528 0566 02       		.uleb128 0x2
 1529 0567 91       		.byte	0x91
 1530 0568 74       		.sleb128 -12
 1531 0569 00       		.byte	0
 1532 056a 14       		.uleb128 0x14
 1533 056b 60000000 		.4byte	.LASF84
 1534 056f 01       		.byte	0x1
 1535 0570 BC       		.byte	0xbc
 1536 0571 A8000000 		.4byte	0xa8
 1537 0575 00000000 		.4byte	.LFB73
 1538 0579 74000000 		.4byte	.LFE73-.LFB73
 1539 057d 01       		.uleb128 0x1
 1540 057e 9C       		.byte	0x9c
 1541 057f D8050000 		.4byte	0x5d8
 1542 0583 15       		.uleb128 0x15
 1543 0584 37000000 		.4byte	.LASF85
 1544 0588 01       		.byte	0x1
 1545 0589 BC       		.byte	0xbc
 1546 058a B5000000 		.4byte	0xb5
 1547 058e 02       		.uleb128 0x2
 1548 058f 91       		.byte	0x91
 1549 0590 6C       		.sleb128 -20
 1550 0591 15       		.uleb128 0x15
 1551 0592 6C010000 		.4byte	.LASF86
 1552 0596 01       		.byte	0x1
 1553 0597 BC       		.byte	0xbc
 1554 0598 A8000000 		.4byte	0xa8
 1555 059c 02       		.uleb128 0x2
 1556 059d 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 33


 1557 059e 68       		.sleb128 -24
 1558 059f 15       		.uleb128 0x15
 1559 05a0 E3010000 		.4byte	.LASF87
 1560 05a4 01       		.byte	0x1
 1561 05a5 BD       		.byte	0xbd
 1562 05a6 B5000000 		.4byte	0xb5
 1563 05aa 02       		.uleb128 0x2
 1564 05ab 91       		.byte	0x91
 1565 05ac 64       		.sleb128 -28
 1566 05ad 15       		.uleb128 0x15
 1567 05ae AC010000 		.4byte	.LASF88
 1568 05b2 01       		.byte	0x1
 1569 05b3 BD       		.byte	0xbd
 1570 05b4 B5000000 		.4byte	0xb5
 1571 05b8 02       		.uleb128 0x2
 1572 05b9 91       		.byte	0x91
 1573 05ba 60       		.sleb128 -32
 1574 05bb 1A       		.uleb128 0x1a
 1575 05bc 6B000000 		.4byte	.LASF89
 1576 05c0 01       		.byte	0x1
 1577 05c1 BF       		.byte	0xbf
 1578 05c2 A8000000 		.4byte	0xa8
 1579 05c6 02       		.uleb128 0x2
 1580 05c7 91       		.byte	0x91
 1581 05c8 70       		.sleb128 -16
 1582 05c9 17       		.uleb128 0x17
 1583 05ca 656E6400 		.ascii	"end\000"
 1584 05ce 01       		.byte	0x1
 1585 05cf BF       		.byte	0xbf
 1586 05d0 A8000000 		.4byte	0xa8
 1587 05d4 02       		.uleb128 0x2
 1588 05d5 91       		.byte	0x91
 1589 05d6 74       		.sleb128 -12
 1590 05d7 00       		.byte	0
 1591 05d8 18       		.uleb128 0x18
 1592 05d9 F0010000 		.4byte	.LASF90
 1593 05dd 01       		.byte	0x1
 1594 05de D0       		.byte	0xd0
 1595 05df 00000000 		.4byte	.LFB74
 1596 05e3 3C000000 		.4byte	.LFE74-.LFB74
 1597 05e7 01       		.uleb128 0x1
 1598 05e8 9C       		.byte	0x9c
 1599 05e9 1A060000 		.4byte	0x61a
 1600 05ed 15       		.uleb128 0x15
 1601 05ee A5010000 		.4byte	.LASF71
 1602 05f2 01       		.byte	0x1
 1603 05f3 D0       		.byte	0xd0
 1604 05f4 A8000000 		.4byte	0xa8
 1605 05f8 02       		.uleb128 0x2
 1606 05f9 91       		.byte	0x91
 1607 05fa 70       		.sleb128 -16
 1608 05fb 19       		.uleb128 0x19
 1609 05fc 1A       		.uleb128 0x1a
 1610 05fd 72040000 		.4byte	.LASF73
 1611 0601 01       		.byte	0x1
 1612 0602 D2       		.byte	0xd2
 1613 0603 4E010000 		.4byte	0x14e
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 34


 1614 0607 02       		.uleb128 0x2
 1615 0608 91       		.byte	0x91
 1616 0609 64       		.sleb128 -28
 1617 060a 1A       		.uleb128 0x1a
 1618 060b D8030000 		.4byte	.LASF72
 1619 060f 01       		.byte	0x1
 1620 0610 D6       		.byte	0xd6
 1621 0611 AB040000 		.4byte	0x4ab
 1622 0615 03       		.uleb128 0x3
 1623 0616 91       		.byte	0x91
 1624 0617 E46F     		.sleb128 -2076
 1625 0619 00       		.byte	0
 1626 061a 1D       		.uleb128 0x1d
 1627 061b C4040000 		.4byte	.LASF91
 1628 061f 0C       		.byte	0xc
 1629 0620 1207     		.2byte	0x712
 1630 0622 26060000 		.4byte	0x626
 1631 0626 0F       		.uleb128 0xf
 1632 0627 C0000000 		.4byte	0xc0
 1633 062b 1E       		.uleb128 0x1e
 1634 062c 27040000 		.4byte	.LASF92
 1635 0630 0A       		.byte	0xa
 1636 0631 11       		.byte	0x11
 1637 0632 96030000 		.4byte	0x396
 1638 0636 05       		.uleb128 0x5
 1639 0637 03       		.byte	0x3
 1640 0638 00000000 		.4byte	buffer_overflow
 1641 063c 1E       		.uleb128 0x1e
 1642 063d 54010000 		.4byte	.LASF93
 1643 0641 0A       		.byte	0xa
 1644 0642 22       		.byte	0x22
 1645 0643 65010000 		.4byte	0x165
 1646 0647 05       		.uleb128 0x5
 1647 0648 03       		.byte	0x3
 1648 0649 00000000 		.4byte	dataPointsInStack
 1649 064d 1E       		.uleb128 0x1e
 1650 064e 82020000 		.4byte	.LASF94
 1651 0652 0A       		.byte	0xa
 1652 0653 23       		.byte	0x23
 1653 0654 65010000 		.4byte	0x165
 1654 0658 05       		.uleb128 0x5
 1655 0659 03       		.byte	0x3
 1656 065a 00000000 		.4byte	dataPointsInStackDesired
 1657 065e 11       		.uleb128 0x11
 1658 065f 9A020000 		.4byte	0x29a
 1659 0663 6E060000 		.4byte	0x66e
 1660 0667 12       		.uleb128 0x12
 1661 0668 A1000000 		.4byte	0xa1
 1662 066c 95       		.byte	0x95
 1663 066d 00       		.byte	0
 1664 066e 1E       		.uleb128 0x1e
 1665 066f 7D020000 		.4byte	.LASF95
 1666 0673 0A       		.byte	0xa
 1667 0674 24       		.byte	0x24
 1668 0675 5E060000 		.4byte	0x65e
 1669 0679 05       		.uleb128 0x5
 1670 067a 03       		.byte	0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 35


 1671 067b 00000000 		.4byte	data
 1672 067f 1E       		.uleb128 0x1e
 1673 0680 F3030000 		.4byte	.LASF96
 1674 0684 0B       		.byte	0xb
 1675 0685 1F       		.byte	0x1f
 1676 0686 59010000 		.4byte	0x159
 1677 068a 05       		.uleb128 0x5
 1678 068b 03       		.byte	0x3
 1679 068c 00000000 		.4byte	modem_state
 1680 0690 1E       		.uleb128 0x1e
 1681 0691 66020000 		.4byte	.LASF97
 1682 0695 0B       		.byte	0xb
 1683 0696 62       		.byte	0x62
 1684 0697 71010000 		.4byte	0x171
 1685 069b 05       		.uleb128 0x5
 1686 069c 03       		.byte	0x3
 1687 069d 00000000 		.4byte	modem_start_time_stamp
 1688 06a1 1E       		.uleb128 0x1e
 1689 06a2 F7010000 		.4byte	.LASF98
 1690 06a6 0B       		.byte	0xb
 1691 06a7 63       		.byte	0x63
 1692 06a8 D2020000 		.4byte	0x2d2
 1693 06ac 05       		.uleb128 0x5
 1694 06ad 03       		.byte	0x3
 1695 06ae 00000000 		.4byte	modem_info
 1696 06b2 1E       		.uleb128 0x1e
 1697 06b3 39030000 		.4byte	.LASF99
 1698 06b7 0B       		.byte	0xb
 1699 06b8 64       		.byte	0x64
 1700 06b9 46030000 		.4byte	0x346
 1701 06bd 05       		.uleb128 0x5
 1702 06be 03       		.byte	0x3
 1703 06bf 00000000 		.4byte	modem_stats
 1704 06c3 1E       		.uleb128 0x1e
 1705 06c4 3E020000 		.4byte	.LASF100
 1706 06c8 0B       		.byte	0xb
 1707 06c9 65       		.byte	0x65
 1708 06ca 9D030000 		.4byte	0x39d
 1709 06ce 05       		.uleb128 0x5
 1710 06cf 03       		.byte	0x3
 1711 06d0 00000000 		.4byte	updatable_parameters
 1712 06d4 11       		.uleb128 0x11
 1713 06d5 AE000000 		.4byte	0xae
 1714 06d9 E4060000 		.4byte	0x6e4
 1715 06dd 12       		.uleb128 0x12
 1716 06de A1000000 		.4byte	0xa1
 1717 06e2 1D       		.byte	0x1d
 1718 06e3 00       		.byte	0
 1719 06e4 1E       		.uleb128 0x1e
 1720 06e5 07020000 		.4byte	.LASF101
 1721 06e9 01       		.byte	0x1
 1722 06ea 04       		.byte	0x4
 1723 06eb D4060000 		.4byte	0x6d4
 1724 06ef 05       		.uleb128 0x5
 1725 06f0 03       		.byte	0x3
 1726 06f1 00000000 		.4byte	BB_fileName
 1727 06f5 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 36


 1728              		.section	.debug_abbrev,"",%progbits
 1729              	.Ldebug_abbrev0:
 1730 0000 01       		.uleb128 0x1
 1731 0001 11       		.uleb128 0x11
 1732 0002 01       		.byte	0x1
 1733 0003 25       		.uleb128 0x25
 1734 0004 0E       		.uleb128 0xe
 1735 0005 13       		.uleb128 0x13
 1736 0006 0B       		.uleb128 0xb
 1737 0007 03       		.uleb128 0x3
 1738 0008 0E       		.uleb128 0xe
 1739 0009 1B       		.uleb128 0x1b
 1740 000a 0E       		.uleb128 0xe
 1741 000b 55       		.uleb128 0x55
 1742 000c 17       		.uleb128 0x17
 1743 000d 11       		.uleb128 0x11
 1744 000e 01       		.uleb128 0x1
 1745 000f 10       		.uleb128 0x10
 1746 0010 17       		.uleb128 0x17
 1747 0011 00       		.byte	0
 1748 0012 00       		.byte	0
 1749 0013 02       		.uleb128 0x2
 1750 0014 24       		.uleb128 0x24
 1751 0015 00       		.byte	0
 1752 0016 0B       		.uleb128 0xb
 1753 0017 0B       		.uleb128 0xb
 1754 0018 3E       		.uleb128 0x3e
 1755 0019 0B       		.uleb128 0xb
 1756 001a 03       		.uleb128 0x3
 1757 001b 0E       		.uleb128 0xe
 1758 001c 00       		.byte	0
 1759 001d 00       		.byte	0
 1760 001e 03       		.uleb128 0x3
 1761 001f 16       		.uleb128 0x16
 1762 0020 00       		.byte	0
 1763 0021 03       		.uleb128 0x3
 1764 0022 0E       		.uleb128 0xe
 1765 0023 3A       		.uleb128 0x3a
 1766 0024 0B       		.uleb128 0xb
 1767 0025 3B       		.uleb128 0x3b
 1768 0026 0B       		.uleb128 0xb
 1769 0027 49       		.uleb128 0x49
 1770 0028 13       		.uleb128 0x13
 1771 0029 00       		.byte	0
 1772 002a 00       		.byte	0
 1773 002b 04       		.uleb128 0x4
 1774 002c 24       		.uleb128 0x24
 1775 002d 00       		.byte	0
 1776 002e 0B       		.uleb128 0xb
 1777 002f 0B       		.uleb128 0xb
 1778 0030 3E       		.uleb128 0x3e
 1779 0031 0B       		.uleb128 0xb
 1780 0032 03       		.uleb128 0x3
 1781 0033 08       		.uleb128 0x8
 1782 0034 00       		.byte	0
 1783 0035 00       		.byte	0
 1784 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 37


 1785 0037 13       		.uleb128 0x13
 1786 0038 01       		.byte	0x1
 1787 0039 03       		.uleb128 0x3
 1788 003a 0E       		.uleb128 0xe
 1789 003b 0B       		.uleb128 0xb
 1790 003c 0B       		.uleb128 0xb
 1791 003d 3A       		.uleb128 0x3a
 1792 003e 0B       		.uleb128 0xb
 1793 003f 3B       		.uleb128 0x3b
 1794 0040 0B       		.uleb128 0xb
 1795 0041 01       		.uleb128 0x1
 1796 0042 13       		.uleb128 0x13
 1797 0043 00       		.byte	0
 1798 0044 00       		.byte	0
 1799 0045 06       		.uleb128 0x6
 1800 0046 0D       		.uleb128 0xd
 1801 0047 00       		.byte	0
 1802 0048 03       		.uleb128 0x3
 1803 0049 0E       		.uleb128 0xe
 1804 004a 49       		.uleb128 0x49
 1805 004b 13       		.uleb128 0x13
 1806 004c 38       		.uleb128 0x38
 1807 004d 0B       		.uleb128 0xb
 1808 004e 34       		.uleb128 0x34
 1809 004f 19       		.uleb128 0x19
 1810 0050 00       		.byte	0
 1811 0051 00       		.byte	0
 1812 0052 07       		.uleb128 0x7
 1813 0053 0F       		.uleb128 0xf
 1814 0054 00       		.byte	0
 1815 0055 0B       		.uleb128 0xb
 1816 0056 0B       		.uleb128 0xb
 1817 0057 00       		.byte	0
 1818 0058 00       		.byte	0
 1819 0059 08       		.uleb128 0x8
 1820 005a 0F       		.uleb128 0xf
 1821 005b 00       		.byte	0
 1822 005c 0B       		.uleb128 0xb
 1823 005d 0B       		.uleb128 0xb
 1824 005e 49       		.uleb128 0x49
 1825 005f 13       		.uleb128 0x13
 1826 0060 00       		.byte	0
 1827 0061 00       		.byte	0
 1828 0062 09       		.uleb128 0x9
 1829 0063 26       		.uleb128 0x26
 1830 0064 00       		.byte	0
 1831 0065 49       		.uleb128 0x49
 1832 0066 13       		.uleb128 0x13
 1833 0067 00       		.byte	0
 1834 0068 00       		.byte	0
 1835 0069 0A       		.uleb128 0xa
 1836 006a 13       		.uleb128 0x13
 1837 006b 01       		.byte	0x1
 1838 006c 03       		.uleb128 0x3
 1839 006d 08       		.uleb128 0x8
 1840 006e 0B       		.uleb128 0xb
 1841 006f 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 38


 1842 0070 3A       		.uleb128 0x3a
 1843 0071 0B       		.uleb128 0xb
 1844 0072 3B       		.uleb128 0x3b
 1845 0073 0B       		.uleb128 0xb
 1846 0074 01       		.uleb128 0x1
 1847 0075 13       		.uleb128 0x13
 1848 0076 00       		.byte	0
 1849 0077 00       		.byte	0
 1850 0078 0B       		.uleb128 0xb
 1851 0079 0D       		.uleb128 0xd
 1852 007a 00       		.byte	0
 1853 007b 03       		.uleb128 0x3
 1854 007c 0E       		.uleb128 0xe
 1855 007d 3A       		.uleb128 0x3a
 1856 007e 0B       		.uleb128 0xb
 1857 007f 3B       		.uleb128 0x3b
 1858 0080 0B       		.uleb128 0xb
 1859 0081 49       		.uleb128 0x49
 1860 0082 13       		.uleb128 0x13
 1861 0083 38       		.uleb128 0x38
 1862 0084 0B       		.uleb128 0xb
 1863 0085 00       		.byte	0
 1864 0086 00       		.byte	0
 1865 0087 0C       		.uleb128 0xc
 1866 0088 16       		.uleb128 0x16
 1867 0089 00       		.byte	0
 1868 008a 03       		.uleb128 0x3
 1869 008b 0E       		.uleb128 0xe
 1870 008c 3A       		.uleb128 0x3a
 1871 008d 0B       		.uleb128 0xb
 1872 008e 3B       		.uleb128 0x3b
 1873 008f 05       		.uleb128 0x5
 1874 0090 49       		.uleb128 0x49
 1875 0091 13       		.uleb128 0x13
 1876 0092 00       		.byte	0
 1877 0093 00       		.byte	0
 1878 0094 0D       		.uleb128 0xd
 1879 0095 13       		.uleb128 0x13
 1880 0096 01       		.byte	0x1
 1881 0097 0B       		.uleb128 0xb
 1882 0098 0B       		.uleb128 0xb
 1883 0099 3A       		.uleb128 0x3a
 1884 009a 0B       		.uleb128 0xb
 1885 009b 3B       		.uleb128 0x3b
 1886 009c 0B       		.uleb128 0xb
 1887 009d 01       		.uleb128 0x1
 1888 009e 13       		.uleb128 0x13
 1889 009f 00       		.byte	0
 1890 00a0 00       		.byte	0
 1891 00a1 0E       		.uleb128 0xe
 1892 00a2 0D       		.uleb128 0xd
 1893 00a3 00       		.byte	0
 1894 00a4 03       		.uleb128 0x3
 1895 00a5 08       		.uleb128 0x8
 1896 00a6 3A       		.uleb128 0x3a
 1897 00a7 0B       		.uleb128 0xb
 1898 00a8 3B       		.uleb128 0x3b
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 39


 1899 00a9 0B       		.uleb128 0xb
 1900 00aa 49       		.uleb128 0x49
 1901 00ab 13       		.uleb128 0x13
 1902 00ac 38       		.uleb128 0x38
 1903 00ad 0B       		.uleb128 0xb
 1904 00ae 00       		.byte	0
 1905 00af 00       		.byte	0
 1906 00b0 0F       		.uleb128 0xf
 1907 00b1 35       		.uleb128 0x35
 1908 00b2 00       		.byte	0
 1909 00b3 49       		.uleb128 0x49
 1910 00b4 13       		.uleb128 0x13
 1911 00b5 00       		.byte	0
 1912 00b6 00       		.byte	0
 1913 00b7 10       		.uleb128 0x10
 1914 00b8 13       		.uleb128 0x13
 1915 00b9 01       		.byte	0x1
 1916 00ba 0B       		.uleb128 0xb
 1917 00bb 05       		.uleb128 0x5
 1918 00bc 3A       		.uleb128 0x3a
 1919 00bd 0B       		.uleb128 0xb
 1920 00be 3B       		.uleb128 0x3b
 1921 00bf 0B       		.uleb128 0xb
 1922 00c0 01       		.uleb128 0x1
 1923 00c1 13       		.uleb128 0x13
 1924 00c2 00       		.byte	0
 1925 00c3 00       		.byte	0
 1926 00c4 11       		.uleb128 0x11
 1927 00c5 01       		.uleb128 0x1
 1928 00c6 01       		.byte	0x1
 1929 00c7 49       		.uleb128 0x49
 1930 00c8 13       		.uleb128 0x13
 1931 00c9 01       		.uleb128 0x1
 1932 00ca 13       		.uleb128 0x13
 1933 00cb 00       		.byte	0
 1934 00cc 00       		.byte	0
 1935 00cd 12       		.uleb128 0x12
 1936 00ce 21       		.uleb128 0x21
 1937 00cf 00       		.byte	0
 1938 00d0 49       		.uleb128 0x49
 1939 00d1 13       		.uleb128 0x13
 1940 00d2 2F       		.uleb128 0x2f
 1941 00d3 0B       		.uleb128 0xb
 1942 00d4 00       		.byte	0
 1943 00d5 00       		.byte	0
 1944 00d6 13       		.uleb128 0x13
 1945 00d7 2E       		.uleb128 0x2e
 1946 00d8 00       		.byte	0
 1947 00d9 3F       		.uleb128 0x3f
 1948 00da 19       		.uleb128 0x19
 1949 00db 03       		.uleb128 0x3
 1950 00dc 0E       		.uleb128 0xe
 1951 00dd 3A       		.uleb128 0x3a
 1952 00de 0B       		.uleb128 0xb
 1953 00df 3B       		.uleb128 0x3b
 1954 00e0 0B       		.uleb128 0xb
 1955 00e1 11       		.uleb128 0x11
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 40


 1956 00e2 01       		.uleb128 0x1
 1957 00e3 12       		.uleb128 0x12
 1958 00e4 06       		.uleb128 0x6
 1959 00e5 40       		.uleb128 0x40
 1960 00e6 18       		.uleb128 0x18
 1961 00e7 9642     		.uleb128 0x2116
 1962 00e9 19       		.uleb128 0x19
 1963 00ea 00       		.byte	0
 1964 00eb 00       		.byte	0
 1965 00ec 14       		.uleb128 0x14
 1966 00ed 2E       		.uleb128 0x2e
 1967 00ee 01       		.byte	0x1
 1968 00ef 3F       		.uleb128 0x3f
 1969 00f0 19       		.uleb128 0x19
 1970 00f1 03       		.uleb128 0x3
 1971 00f2 0E       		.uleb128 0xe
 1972 00f3 3A       		.uleb128 0x3a
 1973 00f4 0B       		.uleb128 0xb
 1974 00f5 3B       		.uleb128 0x3b
 1975 00f6 0B       		.uleb128 0xb
 1976 00f7 27       		.uleb128 0x27
 1977 00f8 19       		.uleb128 0x19
 1978 00f9 49       		.uleb128 0x49
 1979 00fa 13       		.uleb128 0x13
 1980 00fb 11       		.uleb128 0x11
 1981 00fc 01       		.uleb128 0x1
 1982 00fd 12       		.uleb128 0x12
 1983 00fe 06       		.uleb128 0x6
 1984 00ff 40       		.uleb128 0x40
 1985 0100 18       		.uleb128 0x18
 1986 0101 9642     		.uleb128 0x2116
 1987 0103 19       		.uleb128 0x19
 1988 0104 01       		.uleb128 0x1
 1989 0105 13       		.uleb128 0x13
 1990 0106 00       		.byte	0
 1991 0107 00       		.byte	0
 1992 0108 15       		.uleb128 0x15
 1993 0109 05       		.uleb128 0x5
 1994 010a 00       		.byte	0
 1995 010b 03       		.uleb128 0x3
 1996 010c 0E       		.uleb128 0xe
 1997 010d 3A       		.uleb128 0x3a
 1998 010e 0B       		.uleb128 0xb
 1999 010f 3B       		.uleb128 0x3b
 2000 0110 0B       		.uleb128 0xb
 2001 0111 49       		.uleb128 0x49
 2002 0112 13       		.uleb128 0x13
 2003 0113 02       		.uleb128 0x2
 2004 0114 18       		.uleb128 0x18
 2005 0115 00       		.byte	0
 2006 0116 00       		.byte	0
 2007 0117 16       		.uleb128 0x16
 2008 0118 05       		.uleb128 0x5
 2009 0119 00       		.byte	0
 2010 011a 03       		.uleb128 0x3
 2011 011b 08       		.uleb128 0x8
 2012 011c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 41


 2013 011d 0B       		.uleb128 0xb
 2014 011e 3B       		.uleb128 0x3b
 2015 011f 0B       		.uleb128 0xb
 2016 0120 49       		.uleb128 0x49
 2017 0121 13       		.uleb128 0x13
 2018 0122 02       		.uleb128 0x2
 2019 0123 18       		.uleb128 0x18
 2020 0124 00       		.byte	0
 2021 0125 00       		.byte	0
 2022 0126 17       		.uleb128 0x17
 2023 0127 34       		.uleb128 0x34
 2024 0128 00       		.byte	0
 2025 0129 03       		.uleb128 0x3
 2026 012a 08       		.uleb128 0x8
 2027 012b 3A       		.uleb128 0x3a
 2028 012c 0B       		.uleb128 0xb
 2029 012d 3B       		.uleb128 0x3b
 2030 012e 0B       		.uleb128 0xb
 2031 012f 49       		.uleb128 0x49
 2032 0130 13       		.uleb128 0x13
 2033 0131 02       		.uleb128 0x2
 2034 0132 18       		.uleb128 0x18
 2035 0133 00       		.byte	0
 2036 0134 00       		.byte	0
 2037 0135 18       		.uleb128 0x18
 2038 0136 2E       		.uleb128 0x2e
 2039 0137 01       		.byte	0x1
 2040 0138 3F       		.uleb128 0x3f
 2041 0139 19       		.uleb128 0x19
 2042 013a 03       		.uleb128 0x3
 2043 013b 0E       		.uleb128 0xe
 2044 013c 3A       		.uleb128 0x3a
 2045 013d 0B       		.uleb128 0xb
 2046 013e 3B       		.uleb128 0x3b
 2047 013f 0B       		.uleb128 0xb
 2048 0140 27       		.uleb128 0x27
 2049 0141 19       		.uleb128 0x19
 2050 0142 11       		.uleb128 0x11
 2051 0143 01       		.uleb128 0x1
 2052 0144 12       		.uleb128 0x12
 2053 0145 06       		.uleb128 0x6
 2054 0146 40       		.uleb128 0x40
 2055 0147 18       		.uleb128 0x18
 2056 0148 9642     		.uleb128 0x2116
 2057 014a 19       		.uleb128 0x19
 2058 014b 01       		.uleb128 0x1
 2059 014c 13       		.uleb128 0x13
 2060 014d 00       		.byte	0
 2061 014e 00       		.byte	0
 2062 014f 19       		.uleb128 0x19
 2063 0150 18       		.uleb128 0x18
 2064 0151 00       		.byte	0
 2065 0152 00       		.byte	0
 2066 0153 00       		.byte	0
 2067 0154 1A       		.uleb128 0x1a
 2068 0155 34       		.uleb128 0x34
 2069 0156 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 42


 2070 0157 03       		.uleb128 0x3
 2071 0158 0E       		.uleb128 0xe
 2072 0159 3A       		.uleb128 0x3a
 2073 015a 0B       		.uleb128 0xb
 2074 015b 3B       		.uleb128 0x3b
 2075 015c 0B       		.uleb128 0xb
 2076 015d 49       		.uleb128 0x49
 2077 015e 13       		.uleb128 0x13
 2078 015f 02       		.uleb128 0x2
 2079 0160 18       		.uleb128 0x18
 2080 0161 00       		.byte	0
 2081 0162 00       		.byte	0
 2082 0163 1B       		.uleb128 0x1b
 2083 0164 21       		.uleb128 0x21
 2084 0165 00       		.byte	0
 2085 0166 49       		.uleb128 0x49
 2086 0167 13       		.uleb128 0x13
 2087 0168 2F       		.uleb128 0x2f
 2088 0169 05       		.uleb128 0x5
 2089 016a 00       		.byte	0
 2090 016b 00       		.byte	0
 2091 016c 1C       		.uleb128 0x1c
 2092 016d 2E       		.uleb128 0x2e
 2093 016e 01       		.byte	0x1
 2094 016f 3F       		.uleb128 0x3f
 2095 0170 19       		.uleb128 0x19
 2096 0171 03       		.uleb128 0x3
 2097 0172 0E       		.uleb128 0xe
 2098 0173 3A       		.uleb128 0x3a
 2099 0174 0B       		.uleb128 0xb
 2100 0175 3B       		.uleb128 0x3b
 2101 0176 0B       		.uleb128 0xb
 2102 0177 49       		.uleb128 0x49
 2103 0178 13       		.uleb128 0x13
 2104 0179 11       		.uleb128 0x11
 2105 017a 01       		.uleb128 0x1
 2106 017b 12       		.uleb128 0x12
 2107 017c 06       		.uleb128 0x6
 2108 017d 40       		.uleb128 0x40
 2109 017e 18       		.uleb128 0x18
 2110 017f 9642     		.uleb128 0x2116
 2111 0181 19       		.uleb128 0x19
 2112 0182 01       		.uleb128 0x1
 2113 0183 13       		.uleb128 0x13
 2114 0184 00       		.byte	0
 2115 0185 00       		.byte	0
 2116 0186 1D       		.uleb128 0x1d
 2117 0187 34       		.uleb128 0x34
 2118 0188 00       		.byte	0
 2119 0189 03       		.uleb128 0x3
 2120 018a 0E       		.uleb128 0xe
 2121 018b 3A       		.uleb128 0x3a
 2122 018c 0B       		.uleb128 0xb
 2123 018d 3B       		.uleb128 0x3b
 2124 018e 05       		.uleb128 0x5
 2125 018f 49       		.uleb128 0x49
 2126 0190 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 43


 2127 0191 3F       		.uleb128 0x3f
 2128 0192 19       		.uleb128 0x19
 2129 0193 3C       		.uleb128 0x3c
 2130 0194 19       		.uleb128 0x19
 2131 0195 00       		.byte	0
 2132 0196 00       		.byte	0
 2133 0197 1E       		.uleb128 0x1e
 2134 0198 34       		.uleb128 0x34
 2135 0199 00       		.byte	0
 2136 019a 03       		.uleb128 0x3
 2137 019b 0E       		.uleb128 0xe
 2138 019c 3A       		.uleb128 0x3a
 2139 019d 0B       		.uleb128 0xb
 2140 019e 3B       		.uleb128 0x3b
 2141 019f 0B       		.uleb128 0xb
 2142 01a0 49       		.uleb128 0x49
 2143 01a1 13       		.uleb128 0x13
 2144 01a2 3F       		.uleb128 0x3f
 2145 01a3 19       		.uleb128 0x19
 2146 01a4 02       		.uleb128 0x2
 2147 01a5 18       		.uleb128 0x18
 2148 01a6 00       		.byte	0
 2149 01a7 00       		.byte	0
 2150 01a8 00       		.byte	0
 2151              		.section	.debug_aranges,"",%progbits
 2152 0000 6C000000 		.4byte	0x6c
 2153 0004 0200     		.2byte	0x2
 2154 0006 00000000 		.4byte	.Ldebug_info0
 2155 000a 04       		.byte	0x4
 2156 000b 00       		.byte	0
 2157 000c 0000     		.2byte	0
 2158 000e 0000     		.2byte	0
 2159 0010 00000000 		.4byte	.LFB64
 2160 0014 0C000000 		.4byte	.LFE64-.LFB64
 2161 0018 00000000 		.4byte	.LFB65
 2162 001c 0C000000 		.4byte	.LFE65-.LFB65
 2163 0020 00000000 		.4byte	.LFB66
 2164 0024 20000000 		.4byte	.LFE66-.LFB66
 2165 0028 00000000 		.4byte	.LFB67
 2166 002c 0C000000 		.4byte	.LFE67-.LFB67
 2167 0030 00000000 		.4byte	.LFB68
 2168 0034 38000000 		.4byte	.LFE68-.LFB68
 2169 0038 00000000 		.4byte	.LFB69
 2170 003c 54010000 		.4byte	.LFE69-.LFB69
 2171 0040 00000000 		.4byte	.LFB70
 2172 0044 78000000 		.4byte	.LFE70-.LFB70
 2173 0048 00000000 		.4byte	.LFB71
 2174 004c 58000000 		.4byte	.LFE71-.LFB71
 2175 0050 00000000 		.4byte	.LFB72
 2176 0054 40000000 		.4byte	.LFE72-.LFB72
 2177 0058 00000000 		.4byte	.LFB73
 2178 005c 74000000 		.4byte	.LFE73-.LFB73
 2179 0060 00000000 		.4byte	.LFB74
 2180 0064 3C000000 		.4byte	.LFE74-.LFB74
 2181 0068 00000000 		.4byte	0
 2182 006c 00000000 		.4byte	0
 2183              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 44


 2184              	.Ldebug_ranges0:
 2185 0000 00000000 		.4byte	.LFB64
 2186 0004 0C000000 		.4byte	.LFE64
 2187 0008 00000000 		.4byte	.LFB65
 2188 000c 0C000000 		.4byte	.LFE65
 2189 0010 00000000 		.4byte	.LFB66
 2190 0014 20000000 		.4byte	.LFE66
 2191 0018 00000000 		.4byte	.LFB67
 2192 001c 0C000000 		.4byte	.LFE67
 2193 0020 00000000 		.4byte	.LFB68
 2194 0024 38000000 		.4byte	.LFE68
 2195 0028 00000000 		.4byte	.LFB69
 2196 002c 54010000 		.4byte	.LFE69
 2197 0030 00000000 		.4byte	.LFB70
 2198 0034 78000000 		.4byte	.LFE70
 2199 0038 00000000 		.4byte	.LFB71
 2200 003c 58000000 		.4byte	.LFE71
 2201 0040 00000000 		.4byte	.LFB72
 2202 0044 40000000 		.4byte	.LFE72
 2203 0048 00000000 		.4byte	.LFB73
 2204 004c 74000000 		.4byte	.LFE73
 2205 0050 00000000 		.4byte	.LFB74
 2206 0054 3C000000 		.4byte	.LFE74
 2207 0058 00000000 		.4byte	0
 2208 005c 00000000 		.4byte	0
 2209              		.section	.debug_line,"",%progbits
 2210              	.Ldebug_line0:
 2211 0000 E3030000 		.section	.debug_str,"MS",%progbits,1
 2211      02008802 
 2211      00000201 
 2211      FB0E0D00 
 2211      01010101 
 2212              	.LASF47:
 2213 0000 6D6F6465 		.ascii	"model_id\000"
 2213      6C5F6964 
 2213      00
 2214              	.LASF80:
 2215 0009 745F6F66 		.ascii	"t_of_day\000"
 2215      5F646179 
 2215      00
 2216              	.LASF46:
 2217 0012 73696D5F 		.ascii	"sim_id\000"
 2217      696400
 2218              	.LASF20:
 2219 0019 746D5F6D 		.ascii	"tm_mday\000"
 2219      64617900 
 2220              	.LASF67:
 2221 0021 64656275 		.ascii	"debug_sleep\000"
 2221      675F736C 
 2221      65657000 
 2222              	.LASF39:
 2223 002d 74657374 		.ascii	"test_name\000"
 2223      5F6E616D 
 2223      6500
 2224              	.LASF85:
 2225 0037 696E7075 		.ascii	"input_str\000"
 2225      745F7374 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 45


 2225      7200
 2226              	.LASF65:
 2227 0041 64656275 		.ascii	"debug_start\000"
 2227      675F7374 
 2227      61727400 
 2228              	.LASF2:
 2229 004d 73686F72 		.ascii	"short int\000"
 2229      7420696E 
 2229      7400
 2230              	.LASF12:
 2231 0057 73697A65 		.ascii	"sizetype\000"
 2231      74797065 
 2231      00
 2232              	.LASF84:
 2233 0060 73747265 		.ascii	"strextract\000"
 2233      78747261 
 2233      637400
 2234              	.LASF89:
 2235 006b 62656769 		.ascii	"begin\000"
 2235      6E00
 2236              	.LASF102:
 2237 0071 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2237      43313120 
 2237      352E342E 
 2237      31203230 
 2237      31363036 
 2238 00a4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2238      20726576 
 2238      6973696F 
 2238      6E203233 
 2238      37373135 
 2239 00d7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2239      66756E63 
 2239      74696F6E 
 2239      2D736563 
 2239      74696F6E 
 2240              	.LASF23:
 2241 00ff 746D5F77 		.ascii	"tm_wday\000"
 2241      64617900 
 2242              	.LASF6:
 2243 0107 6C6F6E67 		.ascii	"long long int\000"
 2243      206C6F6E 
 2243      6720696E 
 2243      7400
 2244              	.LASF83:
 2245 0115 5F777269 		.ascii	"_write\000"
 2245      746500
 2246              	.LASF78:
 2247 011c 67657454 		.ascii	"getTimeStamp\000"
 2247      696D6553 
 2247      74616D70 
 2247      00
 2248              	.LASF32:
 2249 0129 486F7572 		.ascii	"Hour\000"
 2249      00
 2250              	.LASF69:
 2251 012e 66696C65 		.ascii	"file\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 46


 2251      00
 2252              	.LASF52:
 2253 0133 65636E6F 		.ascii	"ecno\000"
 2253      00
 2254              	.LASF43:
 2255 0138 76616C75 		.ascii	"value\000"
 2255      6500
 2256              	.LASF28:
 2257 013e 75696E74 		.ascii	"uint16\000"
 2257      313600
 2258              	.LASF15:
 2259 0145 74696D65 		.ascii	"time_t\000"
 2259      5F7400
 2260              	.LASF26:
 2261 014c 76615F6C 		.ascii	"va_list\000"
 2261      69737400 
 2262              	.LASF93:
 2263 0154 64617461 		.ascii	"dataPointsInStack\000"
 2263      506F696E 
 2263      7473496E 
 2263      53746163 
 2263      6B00
 2264              	.LASF27:
 2265 0166 75696E74 		.ascii	"uint8\000"
 2265      3800
 2266              	.LASF86:
 2267 016c 6F757470 		.ascii	"output_str\000"
 2267      75745F73 
 2267      747200
 2268              	.LASF51:
 2269 0177 72736370 		.ascii	"rscp\000"
 2269      00
 2270              	.LASF44:
 2271 017c 74696D65 		.ascii	"timeStamp\000"
 2271      5374616D 
 2271      7000
 2272              	.LASF19:
 2273 0186 746D5F68 		.ascii	"tm_hour\000"
 2273      6F757200 
 2274              	.LASF30:
 2275 018e 666C6F61 		.ascii	"float\000"
 2275      7400
 2276              	.LASF33:
 2277 0194 4461794F 		.ascii	"DayOfWeek\000"
 2277      66576565 
 2277      6B00
 2278              	.LASF21:
 2279 019e 746D5F6D 		.ascii	"tm_mon\000"
 2279      6F6E00
 2280              	.LASF71:
 2281 01a5 666F726D 		.ascii	"format\000"
 2281      617400
 2282              	.LASF88:
 2283 01ac 73656172 		.ascii	"search_end\000"
 2283      63685F65 
 2283      6E6400
 2284              	.LASF16:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 47


 2285 01b7 5F5F7661 		.ascii	"__va_list\000"
 2285      5F6C6973 
 2285      7400
 2286              	.LASF13:
 2287 01c1 63686172 		.ascii	"char\000"
 2287      00
 2288              	.LASF49:
 2289 01c6 6D6F6465 		.ascii	"modem_info_t\000"
 2289      6D5F696E 
 2289      666F5F74 
 2289      00
 2290              	.LASF41:
 2291 01d3 72656173 		.ascii	"reason\000"
 2291      6F6E00
 2292              	.LASF4:
 2293 01da 6C6F6E67 		.ascii	"long int\000"
 2293      20696E74 
 2293      00
 2294              	.LASF87:
 2295 01e3 73656172 		.ascii	"search_start\000"
 2295      63685F73 
 2295      74617274 
 2295      00
 2296              	.LASF90:
 2297 01f0 7072696E 		.ascii	"printd\000"
 2297      746400
 2298              	.LASF98:
 2299 01f7 6D6F6465 		.ascii	"modem_info\000"
 2299      6D5F696E 
 2299      666F00
 2300              	.LASF37:
 2301 0202 59656172 		.ascii	"Year\000"
 2301      00
 2302              	.LASF101:
 2303 0207 42425F66 		.ascii	"BB_fileName\000"
 2303      696C654E 
 2303      616D6500 
 2304              	.LASF74:
 2305 0213 635F7469 		.ascii	"c_timeStamp\000"
 2305      6D655374 
 2305      616D7000 
 2306              	.LASF60:
 2307 021f 6D656173 		.ascii	"measure_time\000"
 2307      7572655F 
 2307      74696D65 
 2307      00
 2308              	.LASF36:
 2309 022c 4D6F6E74 		.ascii	"Month\000"
 2309      6800
 2310              	.LASF9:
 2311 0232 6C6F6E67 		.ascii	"long double\000"
 2311      20646F75 
 2311      626C6500 
 2312              	.LASF100:
 2313 023e 75706461 		.ascii	"updatable_parameters\000"
 2313      7461626C 
 2313      655F7061 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 48


 2313      72616D65 
 2313      74657273 
 2314              	.LASF1:
 2315 0253 756E7369 		.ascii	"unsigned char\000"
 2315      676E6564 
 2315      20636861 
 2315      7200
 2316              	.LASF54:
 2317 0261 72737270 		.ascii	"rsrp\000"
 2317      00
 2318              	.LASF97:
 2319 0266 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2319      6D5F7374 
 2319      6172745F 
 2319      74696D65 
 2319      5F737461 
 2320              	.LASF95:
 2321 027d 64617461 		.ascii	"data\000"
 2321      00
 2322              	.LASF94:
 2323 0282 64617461 		.ascii	"dataPointsInStackDesired\000"
 2323      506F696E 
 2323      7473496E 
 2323      53746163 
 2323      6B446573 
 2324              	.LASF103:
 2325 029b 64656275 		.ascii	"debug.c\000"
 2325      672E6300 
 2326              	.LASF0:
 2327 02a3 7369676E 		.ascii	"signed char\000"
 2327      65642063 
 2327      68617200 
 2328              	.LASF22:
 2329 02af 746D5F79 		.ascii	"tm_year\000"
 2329      65617200 
 2330              	.LASF7:
 2331 02b7 6C6F6E67 		.ascii	"long long unsigned int\000"
 2331      206C6F6E 
 2331      6720756E 
 2331      7369676E 
 2331      65642069 
 2332              	.LASF70:
 2333 02ce 74797065 		.ascii	"type\000"
 2333      00
 2334              	.LASF8:
 2335 02d3 756E7369 		.ascii	"unsigned int\000"
 2335      676E6564 
 2335      20696E74 
 2335      00
 2336              	.LASF45:
 2337 02e0 6B65795F 		.ascii	"key_value_t\000"
 2337      76616C75 
 2337      655F7400 
 2338              	.LASF104:
 2339 02ec 433A5C55 		.ascii	"C:\\Users\\klabu\\Desktop\\BrookeResearch\\notoriOS"
 2339      73657273 
 2339      5C6B6C61 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 49


 2339      62755C44 
 2339      65736B74 
 2340 031a 5C6E6F74 		.ascii	"\\notoriOS.cydsn\000"
 2340      6F72694F 
 2340      532E6379 
 2340      64736E00 
 2341              	.LASF61:
 2342 032a 73796E63 		.ascii	"sync_time\000"
 2342      5F74696D 
 2342      6500
 2343              	.LASF77:
 2344 0334 74657374 		.ascii	"test\000"
 2344      00
 2345              	.LASF99:
 2346 0339 6D6F6465 		.ascii	"modem_stats\000"
 2346      6D5F7374 
 2346      61747300 
 2347              	.LASF64:
 2348 0345 75706461 		.ascii	"updatable_parameters_t\000"
 2348      7461626C 
 2348      655F7061 
 2348      72616D65 
 2348      74657273 
 2349              	.LASF50:
 2350 035c 72786C65 		.ascii	"rxlev\000"
 2350      7600
 2351              	.LASF59:
 2352 0362 73696D5F 		.ascii	"sim_type\000"
 2352      74797065 
 2352      00
 2353              	.LASF3:
 2354 036b 73686F72 		.ascii	"short unsigned int\000"
 2354      7420756E 
 2354      7369676E 
 2354      65642069 
 2354      6E7400
 2355              	.LASF55:
 2356 037e 74696D65 		.ascii	"time_to_network_connect\000"
 2356      5F746F5F 
 2356      6E657477 
 2356      6F726B5F 
 2356      636F6E6E 
 2357              	.LASF40:
 2358 0396 73746174 		.ascii	"status\000"
 2358      757300
 2359              	.LASF105:
 2360 039d 5F5F6170 		.ascii	"__ap\000"
 2360      00
 2361              	.LASF56:
 2362 03a2 74696D65 		.ascii	"time_to_acquire_ip\000"
 2362      5F746F5F 
 2362      61637175 
 2362      6972655F 
 2362      697000
 2363              	.LASF63:
 2364 03b5 5F426F6F 		.ascii	"_Bool\000"
 2364      6C00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 50


 2365              	.LASF48:
 2366 03bb 696D6569 		.ascii	"imei\000"
 2366      00
 2367              	.LASF76:
 2368 03c0 7072696E 		.ascii	"printTestStatus\000"
 2368      74546573 
 2368      74537461 
 2368      74757300 
 2369              	.LASF14:
 2370 03d0 696E7433 		.ascii	"int32_t\000"
 2370      325F7400 
 2371              	.LASF72:
 2372 03d8 64656275 		.ascii	"debug_string\000"
 2372      675F7374 
 2372      72696E67 
 2372      00
 2373              	.LASF57:
 2374 03e5 6D6F6465 		.ascii	"modem_stats_t\000"
 2374      6D5F7374 
 2374      6174735F 
 2374      7400
 2375              	.LASF96:
 2376 03f3 6D6F6465 		.ascii	"modem_state\000"
 2376      6D5F7374 
 2376      61746500 
 2377              	.LASF82:
 2378 03ff 73747269 		.ascii	"string\000"
 2378      6E6700
 2379              	.LASF79:
 2380 0406 6C6F6361 		.ascii	"localTime\000"
 2380      6C54696D 
 2380      6500
 2381              	.LASF34:
 2382 0410 4461794F 		.ascii	"DayOfMonth\000"
 2382      664D6F6E 
 2382      746800
 2383              	.LASF53:
 2384 041b 72737271 		.ascii	"rsrq\000"
 2384      00
 2385              	.LASF18:
 2386 0420 746D5F6D 		.ascii	"tm_min\000"
 2386      696E00
 2387              	.LASF92:
 2388 0427 62756666 		.ascii	"buffer_overflow\000"
 2388      65725F6F 
 2388      76657266 
 2388      6C6F7700 
 2389              	.LASF25:
 2390 0437 746D5F69 		.ascii	"tm_isdst\000"
 2390      73647374 
 2390      00
 2391              	.LASF66:
 2392 0440 64656275 		.ascii	"debug_stop\000"
 2392      675F7374 
 2392      6F7000
 2393              	.LASF5:
 2394 044b 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 51


 2394      20756E73 
 2394      69676E65 
 2394      6420696E 
 2394      7400
 2395              	.LASF24:
 2396 045d 746D5F79 		.ascii	"tm_yday\000"
 2396      64617900 
 2397              	.LASF29:
 2398 0465 696E7433 		.ascii	"int32\000"
 2398      3200
 2399              	.LASF31:
 2400 046b 646F7562 		.ascii	"double\000"
 2400      6C6500
 2401              	.LASF73:
 2402 0472 61726770 		.ascii	"argptr\000"
 2402      747200
 2403              	.LASF62:
 2404 0479 64656275 		.ascii	"debug_level\000"
 2404      675F6C65 
 2404      76656C00 
 2405              	.LASF10:
 2406 0485 5F5F696E 		.ascii	"__int32_t\000"
 2406      7433325F 
 2406      7400
 2407              	.LASF42:
 2408 048f 74657374 		.ascii	"test_t\000"
 2408      5F7400
 2409              	.LASF11:
 2410 0496 5F5F676E 		.ascii	"__gnuc_va_list\000"
 2410      75635F76 
 2410      615F6C69 
 2410      737400
 2411              	.LASF68:
 2412 04a5 64656275 		.ascii	"debug_wakeup\000"
 2412      675F7761 
 2412      6B657570 
 2412      00
 2413              	.LASF75:
 2414 04b2 7072696E 		.ascii	"printNotif\000"
 2414      744E6F74 
 2414      696600
 2415              	.LASF17:
 2416 04bd 746D5F73 		.ascii	"tm_sec\000"
 2416      656300
 2417              	.LASF91:
 2418 04c4 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2418      52784275 
 2418      66666572 
 2418      00
 2419              	.LASF38:
 2420 04d1 5254435F 		.ascii	"RTC_TIME_DATE\000"
 2420      54494D45 
 2420      5F444154 
 2420      4500
 2421              	.LASF58:
 2422 04df 6E6F6465 		.ascii	"node_type\000"
 2422      5F747970 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccONGvc1.s 			page 52


 2422      6500
 2423              	.LASF81:
 2424 04e9 73747269 		.ascii	"stripEscapeCharacters\000"
 2424      70457363 
 2424      61706543 
 2424      68617261 
 2424      63746572 
 2425              	.LASF35:
 2426 04ff 4461794F 		.ascii	"DayOfYear\000"
 2426      66596561 
 2426      7200
 2427              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
