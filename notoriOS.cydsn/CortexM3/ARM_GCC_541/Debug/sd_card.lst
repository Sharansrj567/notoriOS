ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"sd_card.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	level_sensor_inbox,100,4
  20              		.comm	buffer_overflow,1,1
  21              		.comm	dataPointsInStack,2,2
  22              		.comm	dataPointsInStackDesired,2,2
  23              		.comm	data,6600,4
  24              		.comm	modem_state,1,1
  25              		.comm	modem_start_time_stamp,4,4
  26              		.comm	modem_info,60,4
  27              		.comm	modem_stats,32,4
  28              		.comm	updatable_parameters,7,4
  29              		.syntax unified
  30              		.global _printf_float
  31              		.thumb
  32              		.syntax unified
  33              		.comm	app_led_inbox,100,4
  34              		.comm	http_request,10000,4
  35              		.comm	http_body,10000,4
  36              		.comm	http_route,200,4
  37              		.comm	system_info,28,4
  38              		.comm	system_settings,104,4
  39              		.comm	alarmMeasure,6,4
  40              		.comm	timeToMeasure,1,1
  41              		.comm	alarmSync,6,4
  42              		.comm	timeToSync,1,1
  43              		.comm	timeToSycnRemoteParams,1,1
  44              		.comm	hey,1,1
  45              		.comm	alarmAppLED,6,4
  46              		.comm	timeToAppLED,1,1
  47              		.comm	alarmLevelSensor,6,4
  48              		.comm	timetoLevelSensor,1,1
  49              		.global	SD_dir
  50              		.bss
  51              		.align	2
  52              		.type	SD_dir, %object
  53              		.size	SD_dir, 10
  54              	SD_dir:
  55 0000 00000000 		.space	10
  55      00000000 
  55      0000
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 2


  56              		.global	SD_body
  57 000a 0000     		.align	2
  58              		.type	SD_body, %object
  59              		.size	SD_body, 3000
  60              	SD_body:
  61 000c 00000000 		.space	3000
  61      00000000 
  61      00000000 
  61      00000000 
  61      00000000 
  62              		.global	SD_filename
  63              		.data
  64              		.align	2
  65              		.type	SD_filename, %object
  66              		.size	SD_filename, 30
  67              	SD_filename:
  68 0000 46696C65 		.ascii	"Filename.txt\000"
  68      6E616D65 
  68      2E747874 
  68      00
  69 000d 00000000 		.space	17
  69      00000000 
  69      00000000 
  69      00000000 
  69      00
  70              		.global	SD_filemode
  71 001e 0000     		.align	2
  72              		.type	SD_filemode, %object
  73              		.size	SD_filemode, 5
  74              	SD_filemode:
  75 0020 612B00   		.ascii	"a+\000"
  76 0023 0000     		.space	2
  77              		.section	.text.SD_init,"ax",%progbits
  78              		.align	2
  79              		.global	SD_init
  80              		.thumb
  81              		.thumb_func
  82              		.type	SD_init, %function
  83              	SD_init:
  84              	.LFB64:
  85              		.file 1 "sd_card.c"
   1:sd_card.c     **** /**
   2:sd_card.c     ****  * @file sdcard.c
   3:sd_card.c     ****  * @brief  Write to an SD card.
   4:sd_card.c     ****  * @author Brandon Wong
   5:sd_card.c     ****  * @version 0.0.01
   6:sd_card.c     ****  * @date 2019-05-15
   7:sd_card.c     ****  */
   8:sd_card.c     **** 
   9:sd_card.c     **** #include "sd_card.h"
  10:sd_card.c     **** #include "notoriOS.h"
  11:sd_card.c     **** 
  12:sd_card.c     **** // Preallocate card
  13:sd_card.c     **** char    SD_dir[10]      = {'\0'};
  14:sd_card.c     **** char    SD_body[3000]   = {'\0'};
  15:sd_card.c     **** char    SD_filename[30] = "Filename.txt";
  16:sd_card.c     **** char    SD_filemode[5]  = "a+";
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 3


  17:sd_card.c     **** 
  18:sd_card.c     **** 
  19:sd_card.c     **** void SD_power_up();
  20:sd_card.c     **** void SD_power_down();
  21:sd_card.c     **** 
  22:sd_card.c     **** ///NOTE -- IF SD CARD is not plugged it, the board will draw more power.
  23:sd_card.c     **** 
  24:sd_card.c     **** 
  25:sd_card.c     **** /** SD_init()
  26:sd_card.c     **** * @brief Initialize the file system for the SD card
  27:sd_card.c     **** * @param Null
  28:sd_card.c     **** * @return void
  29:sd_card.c     **** */
  30:sd_card.c     **** void SD_init()
  31:sd_card.c     **** {
  86              		.loc 1 31 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91 0000 80B4     		push	{r7}
  92              		.cfi_def_cfa_offset 4
  93              		.cfi_offset 7, -4
  94 0002 00AF     		add	r7, sp, #0
  95              		.cfi_def_cfa_register 7
  32:sd_card.c     ****     /* Uncomment to enable support for long file names
  33:sd_card.c     ****      * Note: To use long file names (LFN) support on PSoC 5LP devices, you must call
  34:sd_card.c     ****      * FS_FAT_SupportLFN(). For PSoC 3 devices, this feature is enabled by default.
  35:sd_card.c     ****      */
  36:sd_card.c     ****     //FS_FAT_SupportLFN();    
  37:sd_card.c     **** }
  96              		.loc 1 37 0
  97 0004 00BF     		nop
  98 0006 BD46     		mov	sp, r7
  99              		.cfi_def_cfa_register 13
 100              		@ sp needed
 101 0008 80BC     		pop	{r7}
 102              		.cfi_restore 7
 103              		.cfi_def_cfa_offset 0
 104 000a 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE64:
 107              		.size	SD_init, .-SD_init
 108              		.section	.rodata
 109              		.align	2
 110              	.LC0:
 111 0000 252E3873 		.ascii	"%.8s\000"
 111      00
 112              		.section	.text.SD_mkdir,"ax",%progbits
 113              		.align	2
 114              		.global	SD_mkdir
 115              		.thumb
 116              		.thumb_func
 117              		.type	SD_mkdir, %function
 118              	SD_mkdir:
 119              	.LFB65:
  38:sd_card.c     **** 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 4


  39:sd_card.c     **** /**
  40:sd_card.c     ****  * @brief Make a directory on the SD card
  41:sd_card.c     ****  * @param dir_name is the name of the directory to create
  42:sd_card.c     ****  * @return 1u on success, 0u otherwise
  43:sd_card.c     ****  */
  44:sd_card.c     **** uint8 SD_mkdir(char* dir_name)
  45:sd_card.c     **** {
 120              		.loc 1 45 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 16
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124 0000 80B5     		push	{r7, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 7, -8
 127              		.cfi_offset 14, -4
 128 0002 84B0     		sub	sp, sp, #16
 129              		.cfi_def_cfa_offset 24
 130 0004 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 132 0006 7860     		str	r0, [r7, #4]
  46:sd_card.c     ****     uint8 status = 9; // Initialize to a value not 0 or -1
 133              		.loc 1 46 0
 134 0008 0923     		movs	r3, #9
 135 000a FB73     		strb	r3, [r7, #15]
  47:sd_card.c     ****     
  48:sd_card.c     ****     SD_power_up(); // Wakeup the SD Card component
 136              		.loc 1 48 0
 137 000c FFF7FEFF 		bl	SD_power_up
  49:sd_card.c     ****     // The snprintf() function formats and stores a series of characters and values in the array bu
  50:sd_card.c     ****     snprintf(SD_dir,sizeof(SD_dir),"%.8s",dir_name); 
 138              		.loc 1 50 0
 139 0010 7B68     		ldr	r3, [r7, #4]
 140 0012 094A     		ldr	r2, .L4
 141 0014 0A21     		movs	r1, #10
 142 0016 0948     		ldr	r0, .L4+4
 143 0018 FFF7FEFF 		bl	snprintf
  51:sd_card.c     ****     
  52:sd_card.c     ****     // FS_MKDir() creates a directory using FS.h.
  53:sd_card.c     ****     // Typecasting (1+FS_MkDir(SD_dir)) into an uint8 datatype
  54:sd_card.c     ****     // This makes it 0 if it's a failture, 1 if it's successful
  55:sd_card.c     ****     status = (uint8) ( 1+FS_MkDir(SD_dir) );
 144              		.loc 1 55 0
 145 001c 0748     		ldr	r0, .L4+4
 146 001e FFF7FEFF 		bl	FS_MkDir
 147 0022 0346     		mov	r3, r0
 148 0024 DBB2     		uxtb	r3, r3
 149 0026 0133     		adds	r3, r3, #1
 150 0028 FB73     		strb	r3, [r7, #15]
  56:sd_card.c     ****     
  57:sd_card.c     ****     SD_power_down(); // Turn off the SD Card
 151              		.loc 1 57 0
 152 002a FFF7FEFF 		bl	SD_power_down
  58:sd_card.c     ****     
  59:sd_card.c     ****     return status;
 153              		.loc 1 59 0
 154 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  60:sd_card.c     **** }
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 5


 155              		.loc 1 60 0
 156 0030 1846     		mov	r0, r3
 157 0032 1037     		adds	r7, r7, #16
 158              		.cfi_def_cfa_offset 8
 159 0034 BD46     		mov	sp, r7
 160              		.cfi_def_cfa_register 13
 161              		@ sp needed
 162 0036 80BD     		pop	{r7, pc}
 163              	.L5:
 164              		.align	2
 165              	.L4:
 166 0038 00000000 		.word	.LC0
 167 003c 00000000 		.word	SD_dir
 168              		.cfi_endproc
 169              	.LFE65:
 170              		.size	SD_mkdir, .-SD_mkdir
 171              		.section	.text.SD_rmfile,"ax",%progbits
 172              		.align	2
 173              		.global	SD_rmfile
 174              		.thumb
 175              		.thumb_func
 176              		.type	SD_rmfile, %function
 177              	SD_rmfile:
 178              	.LFB66:
  61:sd_card.c     **** 
  62:sd_card.c     **** /**
  63:sd_card.c     ****  * @brief Delete a file
  64:sd_card.c     ****  * @param dir_name is the name of the directory to create
  65:sd_card.c     ****  * @return 1u on success, 0u otherwise
  66:sd_card.c     ****  */
  67:sd_card.c     **** uint8 SD_rmfile(const char * fileName)
  68:sd_card.c     **** {
 179              		.loc 1 68 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 16
 182              		@ frame_needed = 1, uses_anonymous_args = 0
 183 0000 80B5     		push	{r7, lr}
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 7, -8
 186              		.cfi_offset 14, -4
 187 0002 84B0     		sub	sp, sp, #16
 188              		.cfi_def_cfa_offset 24
 189 0004 00AF     		add	r7, sp, #0
 190              		.cfi_def_cfa_register 7
 191 0006 7860     		str	r0, [r7, #4]
  69:sd_card.c     ****     uint8 status = 9; // initialize to a value not 0 or -1
 192              		.loc 1 69 0
 193 0008 0923     		movs	r3, #9
 194 000a FB73     		strb	r3, [r7, #15]
  70:sd_card.c     **** 
  71:sd_card.c     ****     SD_power_up(); // Wakeup the SD Card component
 195              		.loc 1 71 0
 196 000c FFF7FEFF 		bl	SD_power_up
  72:sd_card.c     ****     
  73:sd_card.c     ****     // FS_Remove() removes a file using FS.h.
  74:sd_card.c     ****     // Typecasting (1+FS_Remove(fileName)) into an uint8 datatype
  75:sd_card.c     ****     // This makes it 0 if it's a failture, 1 if it's successful
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 6


  76:sd_card.c     ****     status = (uint8) ( 1+FS_Remove(fileName));
 197              		.loc 1 76 0
 198 0010 7868     		ldr	r0, [r7, #4]
 199 0012 FFF7FEFF 		bl	FS_Remove
 200 0016 0346     		mov	r3, r0
 201 0018 DBB2     		uxtb	r3, r3
 202 001a 0133     		adds	r3, r3, #1
 203 001c FB73     		strb	r3, [r7, #15]
  77:sd_card.c     ****     
  78:sd_card.c     ****     SD_power_down(); // Turn off the SD Card
 204              		.loc 1 78 0
 205 001e FFF7FEFF 		bl	SD_power_down
  79:sd_card.c     ****     
  80:sd_card.c     ****     return status;
 206              		.loc 1 80 0
 207 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  81:sd_card.c     **** }
 208              		.loc 1 81 0
 209 0024 1846     		mov	r0, r3
 210 0026 1037     		adds	r7, r7, #16
 211              		.cfi_def_cfa_offset 8
 212 0028 BD46     		mov	sp, r7
 213              		.cfi_def_cfa_register 13
 214              		@ sp needed
 215 002a 80BD     		pop	{r7, pc}
 216              		.cfi_endproc
 217              	.LFE66:
 218              		.size	SD_rmfile, .-SD_rmfile
 219              		.section	.text.SD_write,"ax",%progbits
 220              		.align	2
 221              		.global	SD_write
 222              		.thumb
 223              		.thumb_func
 224              		.type	SD_write, %function
 225              	SD_write:
 226              	.LFB67:
  82:sd_card.c     **** 
  83:sd_card.c     **** /**
  84:sd_card.c     ****  * @brief Write data to the SD card
  85:sd_card.c     ****  * @param fileName is the name of the file to write to
  86:sd_card.c     ****  * @param pMode is the write mode
  87:sd_card.c     ****  * @param pData is the data to be written
  88:sd_card.c     ****  * @return 1u on success, 0u otherwise
  89:sd_card.c     ****  */
  90:sd_card.c     **** uint8 SD_write(const char * fileName, const char * pMode, const void * pData)
  91:sd_card.c     **** {
 227              		.loc 1 91 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 24
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231 0000 80B5     		push	{r7, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 86B0     		sub	sp, sp, #24
 236              		.cfi_def_cfa_offset 32
 237 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 7


 238              		.cfi_def_cfa_register 7
 239 0006 F860     		str	r0, [r7, #12]
 240 0008 B960     		str	r1, [r7, #8]
 241 000a 7A60     		str	r2, [r7, #4]
  92:sd_card.c     ****     uint8 status = 9u; // Initialize to a value not 0 or 1
 242              		.loc 1 92 0
 243 000c 0923     		movs	r3, #9
 244 000e FB75     		strb	r3, [r7, #23]
  93:sd_card.c     ****     FS_FILE *pFile; // FS_FILE data structure defined in FS.h
  94:sd_card.c     **** 
  95:sd_card.c     ****     SD_power_up(); // Wakeup the SD Card component
 245              		.loc 1 95 0
 246 0010 FFF7FEFF 		bl	SD_power_up
  96:sd_card.c     ****     
  97:sd_card.c     ****     // FS_FOpen() opens an existing file or creates a new one.
  98:sd_card.c     ****     // fileName is the file to be opened or created. It's a 0-termianted string that cannot be NULL
  99:sd_card.c     ****     // pMode indicates how the file should be opened. It's a 0-terminated string that cannot be NUL
 100:sd_card.c     ****     pFile = FS_FOpen(fileName, pMode);
 247              		.loc 1 100 0
 248 0014 B968     		ldr	r1, [r7, #8]
 249 0016 F868     		ldr	r0, [r7, #12]
 250 0018 FFF7FEFF 		bl	FS_FOpen
 251 001c 3861     		str	r0, [r7, #16]
 101:sd_card.c     ****     
 102:sd_card.c     ****     // If the SD card doesn't open, try reinitializing the filesystem
 103:sd_card.c     ****     if (pFile == 0){
 252              		.loc 1 103 0
 253 001e 3B69     		ldr	r3, [r7, #16]
 254 0020 002B     		cmp	r3, #0
 255 0022 08D1     		bne	.L9
 104:sd_card.c     ****         FS_DeInit(); // FS_DeInit() frees allocated resources
 256              		.loc 1 104 0
 257 0024 FFF7FEFF 		bl	FS_DeInit
 105:sd_card.c     ****         FS_Init(); // FS_Init() starts the file system
 258              		.loc 1 105 0
 259 0028 FFF7FEFF 		bl	FS_Init
 106:sd_card.c     ****         pFile = FS_FOpen(fileName, pMode);
 260              		.loc 1 106 0
 261 002c B968     		ldr	r1, [r7, #8]
 262 002e F868     		ldr	r0, [r7, #12]
 263 0030 FFF7FEFF 		bl	FS_FOpen
 264 0034 3861     		str	r0, [r7, #16]
 265              	.L9:
 107:sd_card.c     ****     }
 108:sd_card.c     ****     
 109:sd_card.c     ****     // Note: We are using the "No Long File Name (LFN)" library,
 110:sd_card.c     ****     //  so names are limited to 8 characters and 3 bytes for extensions
 111:sd_card.c     ****     if (pFile != 0) {
 266              		.loc 1 111 0
 267 0036 3B69     		ldr	r3, [r7, #16]
 268 0038 002B     		cmp	r3, #0
 269 003a 10D0     		beq	.L10
 112:sd_card.c     ****         // FS_Write() writes data to file: pFile is handle to open file, pData is data to be writte
 113:sd_card.c     ****         FS_Write(pFile, pData, strlen(pData));
 270              		.loc 1 113 0
 271 003c 7868     		ldr	r0, [r7, #4]
 272 003e FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 8


 273 0042 0346     		mov	r3, r0
 274 0044 1A46     		mov	r2, r3
 275 0046 7968     		ldr	r1, [r7, #4]
 276 0048 3869     		ldr	r0, [r7, #16]
 277 004a FFF7FEFF 		bl	FS_Write
 114:sd_card.c     ****         
 115:sd_card.c     ****         // FS_FClose() closes an opened file using FS.h. It returns 1 if there's a failure, 0 if su
 116:sd_card.c     ****         // Typecasting (1+FS_FClose(pFile)) into an uint8 datatype
 117:sd_card.c     ****         // This makes it 0 if it's a failture, 1 if it's successful
 118:sd_card.c     ****         status = (uint8) ( -1*FS_FClose(pFile) )+1;
 278              		.loc 1 118 0
 279 004e 3869     		ldr	r0, [r7, #16]
 280 0050 FFF7FEFF 		bl	FS_FClose
 281 0054 0346     		mov	r3, r0
 282 0056 DBB2     		uxtb	r3, r3
 283 0058 C3F10103 		rsb	r3, r3, #1
 284 005c FB75     		strb	r3, [r7, #23]
 285              	.L10:
 119:sd_card.c     ****     }
 120:sd_card.c     ****     
 121:sd_card.c     ****     SD_power_down(); // Turn off the SD Card
 286              		.loc 1 121 0
 287 005e FFF7FEFF 		bl	SD_power_down
 122:sd_card.c     **** 
 123:sd_card.c     ****     
 124:sd_card.c     ****     return status;
 288              		.loc 1 124 0
 289 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 125:sd_card.c     **** }
 290              		.loc 1 125 0
 291 0064 1846     		mov	r0, r3
 292 0066 1837     		adds	r7, r7, #24
 293              		.cfi_def_cfa_offset 8
 294 0068 BD46     		mov	sp, r7
 295              		.cfi_def_cfa_register 13
 296              		@ sp needed
 297 006a 80BD     		pop	{r7, pc}
 298              		.cfi_endproc
 299              	.LFE67:
 300              		.size	SD_write, .-SD_write
 301              		.section	.rodata
 302 0005 000000   		.align	2
 303              	.LC1:
 304 0008 7200     		.ascii	"r\000"
 305              		.section	.text.SD_read,"ax",%progbits
 306              		.align	2
 307              		.global	SD_read
 308              		.thumb
 309              		.thumb_func
 310              		.type	SD_read, %function
 311              	SD_read:
 312              	.LFB68:
 126:sd_card.c     **** 
 127:sd_card.c     **** /**
 128:sd_card.c     ****  * @brief Write data to the SD card
 129:sd_card.c     ****  * @param fileName is the name of the file to write to
 130:sd_card.c     ****  * @param pMode is the write mode
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 9


 131:sd_card.c     ****  * @param pData is the data to be written
 132:sd_card.c     ****  * @return 1u on success, 0u otherwise
 133:sd_card.c     ****  */
 134:sd_card.c     **** uint8 SD_read(const char * fileName,  void * pData, unsigned long NumBytes)
 135:sd_card.c     **** {
 313              		.loc 1 135 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 24
 316              		@ frame_needed = 1, uses_anonymous_args = 0
 317 0000 80B5     		push	{r7, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 7, -8
 320              		.cfi_offset 14, -4
 321 0002 86B0     		sub	sp, sp, #24
 322              		.cfi_def_cfa_offset 32
 323 0004 00AF     		add	r7, sp, #0
 324              		.cfi_def_cfa_register 7
 325 0006 F860     		str	r0, [r7, #12]
 326 0008 B960     		str	r1, [r7, #8]
 327 000a 7A60     		str	r2, [r7, #4]
 136:sd_card.c     ****     uint8 status = 9u; // initialize to a value not 0 or 1
 328              		.loc 1 136 0
 329 000c 0923     		movs	r3, #9
 330 000e FB75     		strb	r3, [r7, #23]
 137:sd_card.c     ****     FS_FILE *pFile; // FS_FILE data structure defined in FS.h
 138:sd_card.c     **** 
 139:sd_card.c     ****     SD_power_up(); // Powerup the SD Card component
 331              		.loc 1 139 0
 332 0010 FFF7FEFF 		bl	SD_power_up
 140:sd_card.c     ****     
 141:sd_card.c     ****     // FS_FOpen() opens an existing file or creates a new one.
 142:sd_card.c     ****     // fileName is the file to be opened or created. It's a 0-terminated string that cannot be NULL
 143:sd_card.c     ****     // "r" indicates how the file should be opened, in this case, for reading.
 144:sd_card.c     ****     pFile = FS_FOpen(fileName, "r");
 333              		.loc 1 144 0
 334 0014 1349     		ldr	r1, .L16
 335 0016 F868     		ldr	r0, [r7, #12]
 336 0018 FFF7FEFF 		bl	FS_FOpen
 337 001c 3861     		str	r0, [r7, #16]
 145:sd_card.c     ****     
 146:sd_card.c     ****     // If the SD card doesn't open, try reinitializing the filesystem
 147:sd_card.c     ****     if (pFile == 0){
 338              		.loc 1 147 0
 339 001e 3B69     		ldr	r3, [r7, #16]
 340 0020 002B     		cmp	r3, #0
 341 0022 08D1     		bne	.L13
 148:sd_card.c     ****         FS_DeInit();// FS_DeInit() frees allocated resources
 342              		.loc 1 148 0
 343 0024 FFF7FEFF 		bl	FS_DeInit
 149:sd_card.c     ****         FS_Init(); // FS_Init() starts the file system
 344              		.loc 1 149 0
 345 0028 FFF7FEFF 		bl	FS_Init
 150:sd_card.c     ****         pFile = FS_FOpen(fileName, "r");
 346              		.loc 1 150 0
 347 002c 0D49     		ldr	r1, .L16
 348 002e F868     		ldr	r0, [r7, #12]
 349 0030 FFF7FEFF 		bl	FS_FOpen
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 10


 350 0034 3861     		str	r0, [r7, #16]
 351              	.L13:
 151:sd_card.c     ****     }
 152:sd_card.c     ****     
 153:sd_card.c     ****     // Note: We are using the "No Long File Name (LFN)" library,
 154:sd_card.c     ****     //  so names are limited to 8 characters and 3 bytes for extensions
 155:sd_card.c     ****     if (pFile != 0) {
 352              		.loc 1 155 0
 353 0036 3B69     		ldr	r3, [r7, #16]
 354 0038 002B     		cmp	r3, #0
 355 003a 0CD0     		beq	.L14
 156:sd_card.c     ****         // FS_Read() reads data from a file: pFile is handle to an opened file, pData is the buffer
 157:sd_card.c     ****         FS_Read(pFile,pData,NumBytes);
 356              		.loc 1 157 0
 357 003c 7A68     		ldr	r2, [r7, #4]
 358 003e B968     		ldr	r1, [r7, #8]
 359 0040 3869     		ldr	r0, [r7, #16]
 360 0042 FFF7FEFF 		bl	FS_Read
 158:sd_card.c     ****         
 159:sd_card.c     ****         // FS_FClose() closes an opened file using FS.h. It returns 1 if there's a failure, 0 if su
 160:sd_card.c     ****         // Typecasting (1+FS_FClose(pFile)) into an uint8 datatype
 161:sd_card.c     ****         // This makes it 0 if it's a failture, 1 if it's successful
 162:sd_card.c     ****         status = (uint8) ( -1*FS_FClose(pFile) )+1;
 361              		.loc 1 162 0
 362 0046 3869     		ldr	r0, [r7, #16]
 363 0048 FFF7FEFF 		bl	FS_FClose
 364 004c 0346     		mov	r3, r0
 365 004e DBB2     		uxtb	r3, r3
 366 0050 C3F10103 		rsb	r3, r3, #1
 367 0054 FB75     		strb	r3, [r7, #23]
 368              	.L14:
 163:sd_card.c     ****     }
 164:sd_card.c     ****     
 165:sd_card.c     ****     SD_power_down(); // Power down the SD card
 369              		.loc 1 165 0
 370 0056 FFF7FEFF 		bl	SD_power_down
 166:sd_card.c     ****     
 167:sd_card.c     ****     return status;
 371              		.loc 1 167 0
 372 005a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 168:sd_card.c     **** }
 373              		.loc 1 168 0
 374 005c 1846     		mov	r0, r3
 375 005e 1837     		adds	r7, r7, #24
 376              		.cfi_def_cfa_offset 8
 377 0060 BD46     		mov	sp, r7
 378              		.cfi_def_cfa_register 13
 379              		@ sp needed
 380 0062 80BD     		pop	{r7, pc}
 381              	.L17:
 382              		.align	2
 383              	.L16:
 384 0064 08000000 		.word	.LC1
 385              		.cfi_endproc
 386              	.LFE68:
 387              		.size	SD_read, .-SD_read
 388              		.section	.text.SD_power_up,"ax",%progbits
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 11


 389              		.align	2
 390              		.global	SD_power_up
 391              		.thumb
 392              		.thumb_func
 393              		.type	SD_power_up, %function
 394              	SD_power_up:
 395              	.LFB69:
 169:sd_card.c     **** 
 170:sd_card.c     **** // Power up SD Card
 171:sd_card.c     **** void SD_power_up(){
 396              		.loc 1 171 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 1, uses_anonymous_args = 0
 400 0000 80B5     		push	{r7, lr}
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 7, -8
 403              		.cfi_offset 14, -4
 404 0002 00AF     		add	r7, sp, #0
 405              		.cfi_def_cfa_register 7
 172:sd_card.c     **** 
 173:sd_card.c     ****     emFile_Wakeup(); // Prepare SPIM Components to wake up.
 406              		.loc 1 173 0
 407 0004 FFF7FEFF 		bl	emFile_Wakeup
 174:sd_card.c     ****     
 175:sd_card.c     ****     SD_Card_Power_Write(ON); // Turn on the SD Card (pulls it high).
 408              		.loc 1 175 0
 409 0008 0120     		movs	r0, #1
 410 000a FFF7FEFF 		bl	SD_Card_Power_Write
 176:sd_card.c     ****     FS_Init(); // FS_Init() starts the file system
 411              		.loc 1 176 0
 412 000e FFF7FEFF 		bl	FS_Init
 177:sd_card.c     **** }
 413              		.loc 1 177 0
 414 0012 00BF     		nop
 415 0014 80BD     		pop	{r7, pc}
 416              		.cfi_endproc
 417              	.LFE69:
 418              		.size	SD_power_up, .-SD_power_up
 419 0016 00BF     		.section	.text.SD_power_down,"ax",%progbits
 420              		.align	2
 421              		.global	SD_power_down
 422              		.thumb
 423              		.thumb_func
 424              		.type	SD_power_down, %function
 425              	SD_power_down:
 426              	.LFB70:
 178:sd_card.c     **** 
 179:sd_card.c     **** // Power down SD Card
 180:sd_card.c     **** void SD_power_down(){
 427              		.loc 1 180 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 1, uses_anonymous_args = 0
 431 0000 80B5     		push	{r7, lr}
 432              		.cfi_def_cfa_offset 8
 433              		.cfi_offset 7, -8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 12


 434              		.cfi_offset 14, -4
 435 0002 00AF     		add	r7, sp, #0
 436              		.cfi_def_cfa_register 7
 181:sd_card.c     ****     
 182:sd_card.c     ****     SD_Card_Power_Write(OFF);  // Turn off the SD Card (pulls it low). 
 437              		.loc 1 182 0
 438 0004 0020     		movs	r0, #0
 439 0006 FFF7FEFF 		bl	SD_Card_Power_Write
 183:sd_card.c     ****     emFile_Sleep(); // emFIle_Sleep() prepare emFile to go to sleep.
 440              		.loc 1 183 0
 441 000a FFF7FEFF 		bl	emFile_Sleep
 184:sd_card.c     ****     FS_DeInit(); // FS_DeInit() frees allocated resources
 442              		.loc 1 184 0
 443 000e FFF7FEFF 		bl	FS_DeInit
 185:sd_card.c     ****     
 186:sd_card.c     ****     emFile_miso0_Write(OFF); // emFile_miso0_Write(): Assigns a new value to the digital port's dat
 444              		.loc 1 186 0
 445 0012 0020     		movs	r0, #0
 446 0014 FFF7FEFF 		bl	emFile_miso0_Write
 187:sd_card.c     ****     emFile_mosi0_Write(OFF); // emFile_mosi0_Write(): Assigns a new value to the digital port's dat
 447              		.loc 1 187 0
 448 0018 0020     		movs	r0, #0
 449 001a FFF7FEFF 		bl	emFile_mosi0_Write
 188:sd_card.c     ****     emFile_sclk0_Write(OFF); // emFile_sclk0_Write(): Assigns a new value to the digital port's dat
 450              		.loc 1 188 0
 451 001e 0020     		movs	r0, #0
 452 0020 FFF7FEFF 		bl	emFile_sclk0_Write
 189:sd_card.c     ****     emFile_SPI0_CS_Write(OFF); // emFile_SPIO_CS_Write(): Assigns a new value to the digital port's
 453              		.loc 1 189 0
 454 0024 0020     		movs	r0, #0
 455 0026 FFF7FEFF 		bl	emFile_SPI0_CS_Write
 190:sd_card.c     ****     // SD_Chip_Detect_Write(OFF);
 191:sd_card.c     **** }
 456              		.loc 1 191 0
 457 002a 00BF     		nop
 458 002c 80BD     		pop	{r7, pc}
 459              		.cfi_endproc
 460              	.LFE70:
 461              		.size	SD_power_down, .-SD_power_down
 462 002e 00BF     		.section	.rodata
 463 000a 0000     		.align	2
 464              	.LC2:
 465 000c 54455354 		.ascii	"TEST_SD_CARD\000"
 465      5F53445F 
 465      43415244 
 465      00
 466 0019 000000   		.align	2
 467              	.LC5:
 468 001c 54455354 		.ascii	"TEST_PASS\000"
 468      5F504153 
 468      5300
 469 0026 0000     		.align	2
 470              	.LC6:
 471 0028 7700     		.ascii	"w\000"
 472 002a 0000     		.align	2
 473              	.LC7:
 474 002c 53554343 		.ascii	"SUCCESS WRITE READ DELETE FILE\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 13


 474      45535320 
 474      57524954 
 474      45205245 
 474      41442044 
 475 004b 00       		.align	2
 476              	.LC8:
 477 004c 4641494C 		.ascii	"FAILED TO WRITE READ DELETE FILE\000"
 477      45442054 
 477      4F205752 
 477      49544520 
 477      52454144 
 478 006d 000000   		.align	2
 479              	.LC3:
 480 0070 54455354 		.ascii	"TEST_FAIL\000"
 480      5F464149 
 480      4C00
 481 007a 0000     		.align	2
 482              	.LC4:
 483 007c 74657374 		.ascii	"test.txt\000"
 483      2E747874 
 483      00
 484              		.section	.text.SD_card_test,"ax",%progbits
 485              		.align	2
 486              		.global	SD_card_test
 487              		.thumb
 488              		.thumb_func
 489              		.type	SD_card_test, %function
 490              	SD_card_test:
 491              	.LFB71:
 192:sd_card.c     **** 
 193:sd_card.c     **** // Testing the SD Card - create a  file, write random number, read number from file, delete directo
 194:sd_card.c     **** test_t SD_card_test(){
 492              		.loc 1 194 0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 424
 495              		@ frame_needed = 1, uses_anonymous_args = 0
 496 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 497              		.cfi_def_cfa_offset 20
 498              		.cfi_offset 4, -20
 499              		.cfi_offset 5, -16
 500              		.cfi_offset 6, -12
 501              		.cfi_offset 7, -8
 502              		.cfi_offset 14, -4
 503 0002 EBB0     		sub	sp, sp, #428
 504              		.cfi_def_cfa_offset 448
 505 0004 00AF     		add	r7, sp, #0
 506              		.cfi_def_cfa_register 7
 507 0006 3B1D     		adds	r3, r7, #4
 508 0008 1860     		str	r0, [r3]
 195:sd_card.c     ****     
 196:sd_card.c     ****     // test_t is a new data type we defined in test.h. We then use that data type to define a struc
 197:sd_card.c     ****     test_t test;
 198:sd_card.c     ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_SD_CARD");
 509              		.loc 1 198 0
 510 000a 07F12403 		add	r3, r7, #36
 511 000e 3D4A     		ldr	r2, .L25
 512 0010 1C46     		mov	r4, r3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 14


 513 0012 1346     		mov	r3, r2
 514 0014 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 515 0016 07C4     		stmia	r4!, {r0, r1, r2}
 516 0018 2370     		strb	r3, [r4]
 199:sd_card.c     ****     test.status = 0;
 517              		.loc 1 199 0
 518 001a 07F12403 		add	r3, r7, #36
 519 001e 0022     		movs	r2, #0
 520 0020 83F88020 		strb	r2, [r3, #128]
 200:sd_card.c     ****     
 201:sd_card.c     ****     char data[] = "TEST_FAIL";
 521              		.loc 1 201 0
 522 0024 07F11803 		add	r3, r7, #24
 523 0028 374A     		ldr	r2, .L25+4
 524 002a 07CA     		ldmia	r2, {r0, r1, r2}
 525 002c 03C3     		stmia	r3!, {r0, r1}
 526 002e 1A80     		strh	r2, [r3]	@ movhi
 202:sd_card.c     ****     char fileName[] = "test.txt";
 527              		.loc 1 202 0
 528 0030 07F10C03 		add	r3, r7, #12
 529 0034 354A     		ldr	r2, .L25+8
 530 0036 07CA     		ldmia	r2, {r0, r1, r2}
 531 0038 03C3     		stmia	r3!, {r0, r1}
 532 003a 1A70     		strb	r2, [r3]
 203:sd_card.c     ****     
 204:sd_card.c     ****     SD_rmfile(fileName); // Remove file from SD Card
 533              		.loc 1 204 0
 534 003c 07F10C03 		add	r3, r7, #12
 535 0040 1846     		mov	r0, r3
 536 0042 FFF7FEFF 		bl	SD_rmfile
 205:sd_card.c     ****     SD_write(fileName,"w","TEST_PASS"); // Write data to SD Card
 537              		.loc 1 205 0
 538 0046 07F10C03 		add	r3, r7, #12
 539 004a 314A     		ldr	r2, .L25+12
 540 004c 3149     		ldr	r1, .L25+16
 541 004e 1846     		mov	r0, r3
 542 0050 FFF7FEFF 		bl	SD_write
 206:sd_card.c     ****     SD_read(fileName,data,sizeof(data)); // Read data from the SD card
 543              		.loc 1 206 0
 544 0054 07F11801 		add	r1, r7, #24
 545 0058 07F10C03 		add	r3, r7, #12
 546 005c 0A22     		movs	r2, #10
 547 005e 1846     		mov	r0, r3
 548 0060 FFF7FEFF 		bl	SD_read
 207:sd_card.c     ****     test.status = SD_rmfile(fileName);
 549              		.loc 1 207 0
 550 0064 07F10C03 		add	r3, r7, #12
 551 0068 1846     		mov	r0, r3
 552 006a FFF7FEFF 		bl	SD_rmfile
 553 006e 0346     		mov	r3, r0
 554 0070 1A46     		mov	r2, r3
 555 0072 07F12403 		add	r3, r7, #36
 556 0076 83F88020 		strb	r2, [r3, #128]
 208:sd_card.c     ****     
 209:sd_card.c     ****     if(test.status == 1){
 557              		.loc 1 209 0
 558 007a 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 15


 559 007e 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 560 0082 012B     		cmp	r3, #1
 561 0084 14D1     		bne	.L21
 210:sd_card.c     ****         snprintf(test.reason,sizeof(test.reason),"SUCCESS WRITE READ DELETE FILE");
 562              		.loc 1 210 0
 563 0086 07F12403 		add	r3, r7, #36
 564 008a 8133     		adds	r3, r3, #129
 565 008c 224A     		ldr	r2, .L25+20
 566 008e 1D46     		mov	r5, r3
 567 0090 1446     		mov	r4, r2
 568 0092 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 569 0094 2860     		str	r0, [r5]	@ unaligned
 570 0096 6960     		str	r1, [r5, #4]	@ unaligned
 571 0098 AA60     		str	r2, [r5, #8]	@ unaligned
 572 009a EB60     		str	r3, [r5, #12]	@ unaligned
 573 009c 07CC     		ldmia	r4!, {r0, r1, r2}
 574 009e 2861     		str	r0, [r5, #16]	@ unaligned
 575 00a0 6961     		str	r1, [r5, #20]	@ unaligned
 576 00a2 AA61     		str	r2, [r5, #24]	@ unaligned
 577 00a4 2388     		ldrh	r3, [r4]	@ unaligned
 578 00a6 A278     		ldrb	r2, [r4, #2]
 579 00a8 AB83     		strh	r3, [r5, #28]	@ unaligned
 580 00aa 1346     		mov	r3, r2
 581 00ac AB77     		strb	r3, [r5, #30]
 582 00ae 17E0     		b	.L22
 583              	.L21:
 211:sd_card.c     ****     }else{
 212:sd_card.c     ****        snprintf(test.reason,sizeof(test.reason),"FAILED TO WRITE READ DELETE FILE"); 
 584              		.loc 1 212 0
 585 00b0 07F12403 		add	r3, r7, #36
 586 00b4 8133     		adds	r3, r3, #129
 587 00b6 194A     		ldr	r2, .L25+24
 588 00b8 1446     		mov	r4, r2
 589 00ba 9E46     		mov	lr, r3
 590 00bc 04F1200C 		add	ip, r4, #32
 591              	.L23:
 592 00c0 7546     		mov	r5, lr
 593 00c2 2646     		mov	r6, r4
 594 00c4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 595 00c6 2860     		str	r0, [r5]	@ unaligned
 596 00c8 6960     		str	r1, [r5, #4]	@ unaligned
 597 00ca AA60     		str	r2, [r5, #8]	@ unaligned
 598 00cc EB60     		str	r3, [r5, #12]	@ unaligned
 599 00ce 1034     		adds	r4, r4, #16
 600 00d0 0EF1100E 		add	lr, lr, #16
 601 00d4 6445     		cmp	r4, ip
 602 00d6 F3D1     		bne	.L23
 603 00d8 7346     		mov	r3, lr
 604 00da 2246     		mov	r2, r4
 605 00dc 1278     		ldrb	r2, [r2]
 606 00de 1A70     		strb	r2, [r3]
 607              	.L22:
 213:sd_card.c     ****     }
 214:sd_card.c     ****     
 215:sd_card.c     ****     return test;
 608              		.loc 1 215 0
 609 00e0 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 16


 610 00e2 1A68     		ldr	r2, [r3]
 611 00e4 07F12403 		add	r3, r7, #36
 612 00e8 1046     		mov	r0, r2
 613 00ea 1946     		mov	r1, r3
 614 00ec 40F28113 		movw	r3, #385
 615 00f0 1A46     		mov	r2, r3
 616 00f2 FFF7FEFF 		bl	memcpy
 216:sd_card.c     ****     
 217:sd_card.c     **** }
 617              		.loc 1 217 0
 618 00f6 3B1D     		adds	r3, r7, #4
 619 00f8 1868     		ldr	r0, [r3]
 620 00fa 07F5D677 		add	r7, r7, #428
 621              		.cfi_def_cfa_offset 20
 622 00fe BD46     		mov	sp, r7
 623              		.cfi_def_cfa_register 13
 624              		@ sp needed
 625 0100 F0BD     		pop	{r4, r5, r6, r7, pc}
 626              	.L26:
 627 0102 00BF     		.align	2
 628              	.L25:
 629 0104 0C000000 		.word	.LC2
 630 0108 70000000 		.word	.LC3
 631 010c 7C000000 		.word	.LC4
 632 0110 1C000000 		.word	.LC5
 633 0114 28000000 		.word	.LC6
 634 0118 2C000000 		.word	.LC7
 635 011c 4C000000 		.word	.LC8
 636              		.cfi_endproc
 637              	.LFE71:
 638              		.size	SD_card_test, .-SD_card_test
 639              		.text
 640              	.Letext0:
 641              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 642              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 643              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 644              		.file 5 "testing.h"
 645              		.file 6 "..\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 646              		.file 7 "data.h"
 647              		.file 8 "modem.h"
 648              		.file 9 "notoriOS.h"
 649              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 650              		.file 11 "level_sensor.h"
 651              		.file 12 "App_LED.h"
 652              		.section	.debug_info,"",%progbits
 653              	.Ldebug_info0:
 654 0000 BB070000 		.4byte	0x7bb
 655 0004 0400     		.2byte	0x4
 656 0006 00000000 		.4byte	.Ldebug_abbrev0
 657 000a 04       		.byte	0x4
 658 000b 01       		.uleb128 0x1
 659 000c 8B000000 		.4byte	.LASF103
 660 0010 0C       		.byte	0xc
 661 0011 81000000 		.4byte	.LASF104
 662 0015 0F040000 		.4byte	.LASF105
 663 0019 00000000 		.4byte	.Ldebug_ranges0+0
 664 001d 00000000 		.4byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 17


 665 0021 00000000 		.4byte	.Ldebug_line0
 666 0025 02       		.uleb128 0x2
 667 0026 01       		.byte	0x1
 668 0027 06       		.byte	0x6
 669 0028 C0020000 		.4byte	.LASF0
 670 002c 02       		.uleb128 0x2
 671 002d 01       		.byte	0x1
 672 002e 08       		.byte	0x8
 673 002f 82020000 		.4byte	.LASF1
 674 0033 02       		.uleb128 0x2
 675 0034 02       		.byte	0x2
 676 0035 05       		.byte	0x5
 677 0036 52000000 		.4byte	.LASF2
 678 003a 02       		.uleb128 0x2
 679 003b 02       		.byte	0x2
 680 003c 07       		.byte	0x7
 681 003d 6D030000 		.4byte	.LASF3
 682 0041 03       		.uleb128 0x3
 683 0042 B6040000 		.4byte	.LASF12
 684 0046 02       		.byte	0x2
 685 0047 3F       		.byte	0x3f
 686 0048 4C000000 		.4byte	0x4c
 687 004c 02       		.uleb128 0x2
 688 004d 04       		.byte	0x4
 689 004e 05       		.byte	0x5
 690 004f F5010000 		.4byte	.LASF4
 691 0053 02       		.uleb128 0x2
 692 0054 04       		.byte	0x4
 693 0055 07       		.byte	0x7
 694 0056 52040000 		.4byte	.LASF5
 695 005a 02       		.uleb128 0x2
 696 005b 08       		.byte	0x8
 697 005c 05       		.byte	0x5
 698 005d DB010000 		.4byte	.LASF6
 699 0061 02       		.uleb128 0x2
 700 0062 08       		.byte	0x8
 701 0063 07       		.byte	0x7
 702 0064 CC020000 		.4byte	.LASF7
 703 0068 04       		.uleb128 0x4
 704 0069 04       		.byte	0x4
 705 006a 05       		.byte	0x5
 706 006b 696E7400 		.ascii	"int\000"
 707 006f 02       		.uleb128 0x2
 708 0070 04       		.byte	0x4
 709 0071 07       		.byte	0x7
 710 0072 F9020000 		.4byte	.LASF8
 711 0076 02       		.uleb128 0x2
 712 0077 08       		.byte	0x8
 713 0078 04       		.byte	0x4
 714 0079 68020000 		.4byte	.LASF9
 715 007d 05       		.uleb128 0x5
 716 007e 04       		.byte	0x4
 717 007f 02       		.uleb128 0x2
 718 0080 04       		.byte	0x4
 719 0081 07       		.byte	0x7
 720 0082 5C000000 		.4byte	.LASF10
 721 0086 06       		.uleb128 0x6
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 18


 722 0087 04       		.byte	0x4
 723 0088 8C000000 		.4byte	0x8c
 724 008c 02       		.uleb128 0x2
 725 008d 01       		.byte	0x1
 726 008e 08       		.byte	0x8
 727 008f E9010000 		.4byte	.LASF11
 728 0093 06       		.uleb128 0x6
 729 0094 04       		.byte	0x4
 730 0095 99000000 		.4byte	0x99
 731 0099 07       		.uleb128 0x7
 732 009a 8C000000 		.4byte	0x8c
 733 009e 08       		.uleb128 0x8
 734 009f 8C000000 		.4byte	0x8c
 735 00a3 AE000000 		.4byte	0xae
 736 00a7 09       		.uleb128 0x9
 737 00a8 7F000000 		.4byte	0x7f
 738 00ac 17       		.byte	0x17
 739 00ad 00       		.byte	0
 740 00ae 03       		.uleb128 0x3
 741 00af D2030000 		.4byte	.LASF13
 742 00b3 03       		.byte	0x3
 743 00b4 2C       		.byte	0x2c
 744 00b5 41000000 		.4byte	0x41
 745 00b9 0A       		.uleb128 0xa
 746 00ba 6C010000 		.4byte	.LASF14
 747 00be 04       		.byte	0x4
 748 00bf 9201     		.2byte	0x192
 749 00c1 2C000000 		.4byte	0x2c
 750 00c5 0A       		.uleb128 0xa
 751 00c6 53010000 		.4byte	.LASF15
 752 00ca 04       		.byte	0x4
 753 00cb 9301     		.2byte	0x193
 754 00cd 3A000000 		.4byte	0x3a
 755 00d1 0A       		.uleb128 0xa
 756 00d2 91010000 		.4byte	.LASF16
 757 00d6 04       		.byte	0x4
 758 00d7 9601     		.2byte	0x196
 759 00d9 33000000 		.4byte	0x33
 760 00dd 0A       		.uleb128 0xa
 761 00de 64040000 		.4byte	.LASF17
 762 00e2 04       		.byte	0x4
 763 00e3 9701     		.2byte	0x197
 764 00e5 4C000000 		.4byte	0x4c
 765 00e9 02       		.uleb128 0x2
 766 00ea 04       		.byte	0x4
 767 00eb 04       		.byte	0x4
 768 00ec CC010000 		.4byte	.LASF18
 769 00f0 02       		.uleb128 0x2
 770 00f1 08       		.byte	0x8
 771 00f2 04       		.byte	0x4
 772 00f3 6A040000 		.4byte	.LASF19
 773 00f7 06       		.uleb128 0x6
 774 00f8 04       		.byte	0x4
 775 00f9 FD000000 		.4byte	0xfd
 776 00fd 0B       		.uleb128 0xb
 777 00fe 0C       		.uleb128 0xc
 778 00ff 8101     		.2byte	0x181
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 19


 779 0101 05       		.byte	0x5
 780 0102 0A       		.byte	0xa
 781 0103 2C010000 		.4byte	0x12c
 782 0107 0D       		.uleb128 0xd
 783 0108 EA040000 		.4byte	.LASF20
 784 010c 05       		.byte	0x5
 785 010d 0C       		.byte	0xc
 786 010e 2C010000 		.4byte	0x12c
 787 0112 00       		.byte	0
 788 0113 0D       		.uleb128 0xd
 789 0114 98030000 		.4byte	.LASF21
 790 0118 05       		.byte	0x5
 791 0119 0D       		.byte	0xd
 792 011a B9000000 		.4byte	0xb9
 793 011e 80       		.byte	0x80
 794 011f 0D       		.uleb128 0xd
 795 0120 EE010000 		.4byte	.LASF22
 796 0124 05       		.byte	0x5
 797 0125 0F       		.byte	0xf
 798 0126 3C010000 		.4byte	0x13c
 799 012a 81       		.byte	0x81
 800 012b 00       		.byte	0
 801 012c 08       		.uleb128 0x8
 802 012d 8C000000 		.4byte	0x8c
 803 0131 3C010000 		.4byte	0x13c
 804 0135 09       		.uleb128 0x9
 805 0136 7F000000 		.4byte	0x7f
 806 013a 7F       		.byte	0x7f
 807 013b 00       		.byte	0
 808 013c 08       		.uleb128 0x8
 809 013d 8C000000 		.4byte	0x8c
 810 0141 4C010000 		.4byte	0x14c
 811 0145 09       		.uleb128 0x9
 812 0146 7F000000 		.4byte	0x7f
 813 014a FF       		.byte	0xff
 814 014b 00       		.byte	0
 815 014c 03       		.uleb128 0x3
 816 014d C6030000 		.4byte	.LASF23
 817 0151 05       		.byte	0x5
 818 0152 10       		.byte	0x10
 819 0153 FE000000 		.4byte	0xfe
 820 0157 03       		.uleb128 0x3
 821 0158 90020000 		.4byte	.LASF24
 822 015c 06       		.byte	0x6
 823 015d 7E       		.byte	0x7e
 824 015e 62010000 		.4byte	0x162
 825 0162 0E       		.uleb128 0xe
 826 0163 90020000 		.4byte	.LASF24
 827 0167 06       		.uleb128 0x6
 828 0168 04       		.byte	0x4
 829 0169 57010000 		.4byte	0x157
 830 016d 0F       		.uleb128 0xf
 831 016e 2C       		.byte	0x2c
 832 016f 07       		.byte	0x7
 833 0170 14       		.byte	0x14
 834 0171 9A010000 		.4byte	0x19a
 835 0175 10       		.uleb128 0x10
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 20


 836 0176 6B657900 		.ascii	"key\000"
 837 017a 07       		.byte	0x7
 838 017b 15       		.byte	0x15
 839 017c 9A010000 		.4byte	0x19a
 840 0180 00       		.byte	0
 841 0181 0D       		.uleb128 0xd
 842 0182 2F050000 		.4byte	.LASF25
 843 0186 07       		.byte	0x7
 844 0187 16       		.byte	0x16
 845 0188 9A010000 		.4byte	0x19a
 846 018c 14       		.byte	0x14
 847 018d 0D       		.uleb128 0xd
 848 018e 97010000 		.4byte	.LASF26
 849 0192 07       		.byte	0x7
 850 0193 17       		.byte	0x17
 851 0194 DD000000 		.4byte	0xdd
 852 0198 28       		.byte	0x28
 853 0199 00       		.byte	0
 854 019a 08       		.uleb128 0x8
 855 019b 8C000000 		.4byte	0x8c
 856 019f AA010000 		.4byte	0x1aa
 857 01a3 09       		.uleb128 0x9
 858 01a4 7F000000 		.4byte	0x7f
 859 01a8 13       		.byte	0x13
 860 01a9 00       		.byte	0
 861 01aa 03       		.uleb128 0x3
 862 01ab 06030000 		.4byte	.LASF27
 863 01af 07       		.byte	0x7
 864 01b0 19       		.byte	0x19
 865 01b1 6D010000 		.4byte	0x16d
 866 01b5 0F       		.uleb128 0xf
 867 01b6 3C       		.byte	0x3c
 868 01b7 08       		.byte	0x8
 869 01b8 36       		.byte	0x36
 870 01b9 E2010000 		.4byte	0x1e2
 871 01bd 0D       		.uleb128 0xd
 872 01be 09000000 		.4byte	.LASF28
 873 01c2 08       		.byte	0x8
 874 01c3 37       		.byte	0x37
 875 01c4 9A010000 		.4byte	0x19a
 876 01c8 00       		.byte	0
 877 01c9 0D       		.uleb128 0xd
 878 01ca 00000000 		.4byte	.LASF29
 879 01ce 08       		.byte	0x8
 880 01cf 38       		.byte	0x38
 881 01d0 9A010000 		.4byte	0x19a
 882 01d4 14       		.byte	0x14
 883 01d5 0D       		.uleb128 0xd
 884 01d6 CD030000 		.4byte	.LASF30
 885 01da 08       		.byte	0x8
 886 01db 39       		.byte	0x39
 887 01dc 9A010000 		.4byte	0x19a
 888 01e0 28       		.byte	0x28
 889 01e1 00       		.byte	0
 890 01e2 03       		.uleb128 0x3
 891 01e3 9B040000 		.4byte	.LASF31
 892 01e7 08       		.byte	0x8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 21


 893 01e8 3B       		.byte	0x3b
 894 01e9 B5010000 		.4byte	0x1b5
 895 01ed 0F       		.uleb128 0xf
 896 01ee 20       		.byte	0x20
 897 01ef 08       		.byte	0x8
 898 01f0 3D       		.byte	0x3d
 899 01f1 56020000 		.4byte	0x256
 900 01f5 0D       		.uleb128 0xd
 901 01f6 12030000 		.4byte	.LASF32
 902 01fa 08       		.byte	0x8
 903 01fb 3E       		.byte	0x3e
 904 01fc 68000000 		.4byte	0x68
 905 0200 00       		.byte	0
 906 0201 10       		.uleb128 0x10
 907 0202 62657200 		.ascii	"ber\000"
 908 0206 08       		.byte	0x8
 909 0207 3F       		.byte	0x3f
 910 0208 68000000 		.4byte	0x68
 911 020c 04       		.byte	0x4
 912 020d 0D       		.uleb128 0xd
 913 020e 59020000 		.4byte	.LASF33
 914 0212 08       		.byte	0x8
 915 0213 40       		.byte	0x40
 916 0214 68000000 		.4byte	0x68
 917 0218 08       		.byte	0x8
 918 0219 0D       		.uleb128 0xd
 919 021a 39010000 		.4byte	.LASF34
 920 021e 08       		.byte	0x8
 921 021f 41       		.byte	0x41
 922 0220 68000000 		.4byte	0x68
 923 0224 0C       		.byte	0xc
 924 0225 0D       		.uleb128 0xd
 925 0226 0A040000 		.4byte	.LASF35
 926 022a 08       		.byte	0x8
 927 022b 42       		.byte	0x42
 928 022c 68000000 		.4byte	0x68
 929 0230 10       		.byte	0x10
 930 0231 0D       		.uleb128 0xd
 931 0232 98020000 		.4byte	.LASF36
 932 0236 08       		.byte	0x8
 933 0237 43       		.byte	0x43
 934 0238 68000000 		.4byte	0x68
 935 023c 14       		.byte	0x14
 936 023d 0D       		.uleb128 0xd
 937 023e 80030000 		.4byte	.LASF37
 938 0242 08       		.byte	0x8
 939 0243 44       		.byte	0x44
 940 0244 68000000 		.4byte	0x68
 941 0248 18       		.byte	0x18
 942 0249 0D       		.uleb128 0xd
 943 024a B3030000 		.4byte	.LASF38
 944 024e 08       		.byte	0x8
 945 024f 45       		.byte	0x45
 946 0250 68000000 		.4byte	0x68
 947 0254 1C       		.byte	0x1c
 948 0255 00       		.byte	0
 949 0256 03       		.uleb128 0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 22


 950 0257 DA030000 		.4byte	.LASF39
 951 025b 08       		.byte	0x8
 952 025c 47       		.byte	0x47
 953 025d ED010000 		.4byte	0x1ed
 954 0261 0F       		.uleb128 0xf
 955 0262 07       		.byte	0x7
 956 0263 08       		.byte	0x8
 957 0264 53       		.byte	0x53
 958 0265 BE020000 		.4byte	0x2be
 959 0269 0D       		.uleb128 0xd
 960 026a 3F050000 		.4byte	.LASF40
 961 026e 08       		.byte	0x8
 962 026f 55       		.byte	0x55
 963 0270 B9000000 		.4byte	0xb9
 964 0274 00       		.byte	0
 965 0275 0D       		.uleb128 0xd
 966 0276 59030000 		.4byte	.LASF41
 967 027a 08       		.byte	0x8
 968 027b 57       		.byte	0x57
 969 027c BE020000 		.4byte	0x2be
 970 0280 01       		.byte	0x1
 971 0281 0D       		.uleb128 0xd
 972 0282 3A020000 		.4byte	.LASF42
 973 0286 08       		.byte	0x8
 974 0287 59       		.byte	0x59
 975 0288 B9000000 		.4byte	0xb9
 976 028c 02       		.byte	0x2
 977 028d 0D       		.uleb128 0xd
 978 028e 18030000 		.4byte	.LASF43
 979 0292 08       		.byte	0x8
 980 0293 5B       		.byte	0x5b
 981 0294 B9000000 		.4byte	0xb9
 982 0298 03       		.byte	0x3
 983 0299 0D       		.uleb128 0xd
 984 029a 8F040000 		.4byte	.LASF44
 985 029e 08       		.byte	0x8
 986 029f 5E       		.byte	0x5e
 987 02a0 B9000000 		.4byte	0xb9
 988 02a4 04       		.byte	0x4
 989 02a5 0D       		.uleb128 0xd
 990 02a6 1E010000 		.4byte	.LASF45
 991 02aa 08       		.byte	0x8
 992 02ab 63       		.byte	0x63
 993 02ac B9000000 		.4byte	0xb9
 994 02b0 05       		.byte	0x5
 995 02b1 0D       		.uleb128 0xd
 996 02b2 47020000 		.4byte	.LASF46
 997 02b6 08       		.byte	0x8
 998 02b7 65       		.byte	0x65
 999 02b8 B9000000 		.4byte	0xb9
 1000 02bc 06       		.byte	0x6
 1001 02bd 00       		.byte	0
 1002 02be 02       		.uleb128 0x2
 1003 02bf 01       		.byte	0x1
 1004 02c0 02       		.byte	0x2
 1005 02c1 E8030000 		.4byte	.LASF47
 1006 02c5 03       		.uleb128 0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 23


 1007 02c6 42030000 		.4byte	.LASF48
 1008 02ca 08       		.byte	0x8
 1009 02cb 67       		.byte	0x67
 1010 02cc 61020000 		.4byte	0x261
 1011 02d0 0F       		.uleb128 0xf
 1012 02d1 06       		.byte	0x6
 1013 02d2 09       		.byte	0x9
 1014 02d3 2E       		.byte	0x2e
 1015 02d4 09030000 		.4byte	0x309
 1016 02d8 0D       		.uleb128 0xd
 1017 02d9 43000000 		.4byte	.LASF49
 1018 02dd 09       		.byte	0x9
 1019 02de 30       		.byte	0x30
 1020 02df C5000000 		.4byte	0xc5
 1021 02e3 00       		.byte	0
 1022 02e4 0D       		.uleb128 0xd
 1023 02e5 2D000000 		.4byte	.LASF50
 1024 02e9 09       		.byte	0x9
 1025 02ea 31       		.byte	0x31
 1026 02eb D1000000 		.4byte	0xd1
 1027 02ef 02       		.byte	0x2
 1028 02f0 0D       		.uleb128 0xd
 1029 02f1 A8040000 		.4byte	.LASF51
 1030 02f5 09       		.byte	0x9
 1031 02f6 32       		.byte	0x32
 1032 02f7 B9000000 		.4byte	0xb9
 1033 02fb 04       		.byte	0x4
 1034 02fc 0D       		.uleb128 0xd
 1035 02fd 6B050000 		.4byte	.LASF52
 1036 0301 09       		.byte	0x9
 1037 0302 33       		.byte	0x33
 1038 0303 B9000000 		.4byte	0xb9
 1039 0307 05       		.byte	0x5
 1040 0308 00       		.byte	0
 1041 0309 03       		.uleb128 0x3
 1042 030a 34020000 		.4byte	.LASF53
 1043 030e 09       		.byte	0x9
 1044 030f 36       		.byte	0x36
 1045 0310 14030000 		.4byte	0x314
 1046 0314 11       		.uleb128 0x11
 1047 0315 D0020000 		.4byte	0x2d0
 1048 0319 0F       		.uleb128 0xf
 1049 031a 1C       		.byte	0x1c
 1050 031b 09       		.byte	0x9
 1051 031c 39       		.byte	0x39
 1052 031d 3A030000 		.4byte	0x33a
 1053 0321 0D       		.uleb128 0xd
 1054 0322 0E020000 		.4byte	.LASF54
 1055 0326 09       		.byte	0x9
 1056 0327 3B       		.byte	0x3b
 1057 0328 3A030000 		.4byte	0x33a
 1058 032c 00       		.byte	0
 1059 032d 0D       		.uleb128 0xd
 1060 032e 2B010000 		.4byte	.LASF55
 1061 0332 09       		.byte	0x9
 1062 0333 3C       		.byte	0x3c
 1063 0334 9E000000 		.4byte	0x9e
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 24


 1064 0338 04       		.byte	0x4
 1065 0339 00       		.byte	0
 1066 033a 06       		.uleb128 0x6
 1067 033b 04       		.byte	0x4
 1068 033c E2010000 		.4byte	0x1e2
 1069 0340 03       		.uleb128 0x3
 1070 0341 62030000 		.4byte	.LASF56
 1071 0345 09       		.byte	0x9
 1072 0346 3E       		.byte	0x3e
 1073 0347 19030000 		.4byte	0x319
 1074 034b 0F       		.uleb128 0xf
 1075 034c 68       		.byte	0x68
 1076 034d 09       		.byte	0x9
 1077 034e 44       		.byte	0x44
 1078 034f 6C030000 		.4byte	0x36c
 1079 0353 0D       		.uleb128 0xd
 1080 0354 72000000 		.4byte	.LASF57
 1081 0358 09       		.byte	0x9
 1082 0359 49       		.byte	0x49
 1083 035a 6C030000 		.4byte	0x36c
 1084 035e 00       		.byte	0
 1085 035f 0D       		.uleb128 0xd
 1086 0360 27050000 		.4byte	.LASF58
 1087 0364 09       		.byte	0x9
 1088 0365 4A       		.byte	0x4a
 1089 0366 68000000 		.4byte	0x68
 1090 036a 64       		.byte	0x64
 1091 036b 00       		.byte	0
 1092 036c 08       		.uleb128 0x8
 1093 036d 8C000000 		.4byte	0x8c
 1094 0371 7C030000 		.4byte	0x37c
 1095 0375 09       		.uleb128 0x9
 1096 0376 7F000000 		.4byte	0x7f
 1097 037a 63       		.byte	0x63
 1098 037b 00       		.byte	0
 1099 037c 03       		.uleb128 0x3
 1100 037d 1E000000 		.4byte	.LASF59
 1101 0381 09       		.byte	0x9
 1102 0382 50       		.byte	0x50
 1103 0383 4B030000 		.4byte	0x34b
 1104 0387 12       		.uleb128 0x12
 1105 0388 D9040000 		.4byte	.LASF70
 1106 038c 01       		.byte	0x1
 1107 038d 1E       		.byte	0x1e
 1108 038e 00000000 		.4byte	.LFB64
 1109 0392 0C000000 		.4byte	.LFE64-.LFB64
 1110 0396 01       		.uleb128 0x1
 1111 0397 9C       		.byte	0x9c
 1112 0398 13       		.uleb128 0x13
 1113 0399 AA010000 		.4byte	.LASF60
 1114 039d 01       		.byte	0x1
 1115 039e 2C       		.byte	0x2c
 1116 039f B9000000 		.4byte	0xb9
 1117 03a3 00000000 		.4byte	.LFB65
 1118 03a7 40000000 		.4byte	.LFE65-.LFB65
 1119 03ab 01       		.uleb128 0x1
 1120 03ac 9C       		.byte	0x9c
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 25


 1121 03ad CE030000 		.4byte	0x3ce
 1122 03b1 14       		.uleb128 0x14
 1123 03b2 D2010000 		.4byte	.LASF62
 1124 03b6 01       		.byte	0x1
 1125 03b7 2C       		.byte	0x2c
 1126 03b8 86000000 		.4byte	0x86
 1127 03bc 02       		.uleb128 0x2
 1128 03bd 91       		.byte	0x91
 1129 03be 6C       		.sleb128 -20
 1130 03bf 15       		.uleb128 0x15
 1131 03c0 98030000 		.4byte	.LASF21
 1132 03c4 01       		.byte	0x1
 1133 03c5 2E       		.byte	0x2e
 1134 03c6 B9000000 		.4byte	0xb9
 1135 03ca 02       		.uleb128 0x2
 1136 03cb 91       		.byte	0x91
 1137 03cc 77       		.sleb128 -9
 1138 03cd 00       		.byte	0
 1139 03ce 13       		.uleb128 0x13
 1140 03cf 49050000 		.4byte	.LASF61
 1141 03d3 01       		.byte	0x1
 1142 03d4 43       		.byte	0x43
 1143 03d5 B9000000 		.4byte	0xb9
 1144 03d9 00000000 		.4byte	.LFB66
 1145 03dd 2C000000 		.4byte	.LFE66-.LFB66
 1146 03e1 01       		.uleb128 0x1
 1147 03e2 9C       		.byte	0x9c
 1148 03e3 04040000 		.4byte	0x404
 1149 03e7 14       		.uleb128 0x14
 1150 03e8 E1040000 		.4byte	.LASF63
 1151 03ec 01       		.byte	0x1
 1152 03ed 43       		.byte	0x43
 1153 03ee 93000000 		.4byte	0x93
 1154 03f2 02       		.uleb128 0x2
 1155 03f3 91       		.byte	0x91
 1156 03f4 6C       		.sleb128 -20
 1157 03f5 15       		.uleb128 0x15
 1158 03f6 98030000 		.4byte	.LASF21
 1159 03fa 01       		.byte	0x1
 1160 03fb 45       		.byte	0x45
 1161 03fc B9000000 		.4byte	0xb9
 1162 0400 02       		.uleb128 0x2
 1163 0401 91       		.byte	0x91
 1164 0402 77       		.sleb128 -9
 1165 0403 00       		.byte	0
 1166 0404 13       		.uleb128 0x13
 1167 0405 A1010000 		.4byte	.LASF64
 1168 0409 01       		.byte	0x1
 1169 040a 5A       		.byte	0x5a
 1170 040b B9000000 		.4byte	0xb9
 1171 040f 00000000 		.4byte	.LFB67
 1172 0413 6C000000 		.4byte	.LFE67-.LFB67
 1173 0417 01       		.uleb128 0x1
 1174 0418 9C       		.byte	0x9c
 1175 0419 64040000 		.4byte	0x464
 1176 041d 14       		.uleb128 0x14
 1177 041e E1040000 		.4byte	.LASF63
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 26


 1178 0422 01       		.byte	0x1
 1179 0423 5A       		.byte	0x5a
 1180 0424 93000000 		.4byte	0x93
 1181 0428 02       		.uleb128 0x2
 1182 0429 91       		.byte	0x91
 1183 042a 6C       		.sleb128 -20
 1184 042b 14       		.uleb128 0x14
 1185 042c 22030000 		.4byte	.LASF65
 1186 0430 01       		.byte	0x1
 1187 0431 5A       		.byte	0x5a
 1188 0432 93000000 		.4byte	0x93
 1189 0436 02       		.uleb128 0x2
 1190 0437 91       		.byte	0x91
 1191 0438 68       		.sleb128 -24
 1192 0439 14       		.uleb128 0x14
 1193 043a 18000000 		.4byte	.LASF66
 1194 043e 01       		.byte	0x1
 1195 043f 5A       		.byte	0x5a
 1196 0440 F7000000 		.4byte	0xf7
 1197 0444 02       		.uleb128 0x2
 1198 0445 91       		.byte	0x91
 1199 0446 64       		.sleb128 -28
 1200 0447 15       		.uleb128 0x15
 1201 0448 98030000 		.4byte	.LASF21
 1202 044c 01       		.byte	0x1
 1203 044d 5C       		.byte	0x5c
 1204 044e B9000000 		.4byte	0xb9
 1205 0452 02       		.uleb128 0x2
 1206 0453 91       		.byte	0x91
 1207 0454 77       		.sleb128 -9
 1208 0455 15       		.uleb128 0x15
 1209 0456 F3020000 		.4byte	.LASF67
 1210 045a 01       		.byte	0x1
 1211 045b 5D       		.byte	0x5d
 1212 045c 67010000 		.4byte	0x167
 1213 0460 02       		.uleb128 0x2
 1214 0461 91       		.byte	0x91
 1215 0462 70       		.sleb128 -16
 1216 0463 00       		.byte	0
 1217 0464 13       		.uleb128 0x13
 1218 0465 10000000 		.4byte	.LASF68
 1219 0469 01       		.byte	0x1
 1220 046a 86       		.byte	0x86
 1221 046b B9000000 		.4byte	0xb9
 1222 046f 00000000 		.4byte	.LFB68
 1223 0473 68000000 		.4byte	.LFE68-.LFB68
 1224 0477 01       		.uleb128 0x1
 1225 0478 9C       		.byte	0x9c
 1226 0479 C4040000 		.4byte	0x4c4
 1227 047d 14       		.uleb128 0x14
 1228 047e E1040000 		.4byte	.LASF63
 1229 0482 01       		.byte	0x1
 1230 0483 86       		.byte	0x86
 1231 0484 93000000 		.4byte	0x93
 1232 0488 02       		.uleb128 0x2
 1233 0489 91       		.byte	0x91
 1234 048a 6C       		.sleb128 -20
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 27


 1235 048b 14       		.uleb128 0x14
 1236 048c 18000000 		.4byte	.LASF66
 1237 0490 01       		.byte	0x1
 1238 0491 86       		.byte	0x86
 1239 0492 7D000000 		.4byte	0x7d
 1240 0496 02       		.uleb128 0x2
 1241 0497 91       		.byte	0x91
 1242 0498 68       		.sleb128 -24
 1243 0499 14       		.uleb128 0x14
 1244 049a 4A010000 		.4byte	.LASF69
 1245 049e 01       		.byte	0x1
 1246 049f 86       		.byte	0x86
 1247 04a0 53000000 		.4byte	0x53
 1248 04a4 02       		.uleb128 0x2
 1249 04a5 91       		.byte	0x91
 1250 04a6 64       		.sleb128 -28
 1251 04a7 15       		.uleb128 0x15
 1252 04a8 98030000 		.4byte	.LASF21
 1253 04ac 01       		.byte	0x1
 1254 04ad 88       		.byte	0x88
 1255 04ae B9000000 		.4byte	0xb9
 1256 04b2 02       		.uleb128 0x2
 1257 04b3 91       		.byte	0x91
 1258 04b4 77       		.sleb128 -9
 1259 04b5 15       		.uleb128 0x15
 1260 04b6 F3020000 		.4byte	.LASF67
 1261 04ba 01       		.byte	0x1
 1262 04bb 89       		.byte	0x89
 1263 04bc 67010000 		.4byte	0x167
 1264 04c0 02       		.uleb128 0x2
 1265 04c1 91       		.byte	0x91
 1266 04c2 70       		.sleb128 -16
 1267 04c3 00       		.byte	0
 1268 04c4 16       		.uleb128 0x16
 1269 04c5 F4040000 		.4byte	.LASF71
 1270 04c9 01       		.byte	0x1
 1271 04ca AB       		.byte	0xab
 1272 04cb 00000000 		.4byte	.LFB69
 1273 04cf 16000000 		.4byte	.LFE69-.LFB69
 1274 04d3 01       		.uleb128 0x1
 1275 04d4 9C       		.byte	0x9c
 1276 04d5 16       		.uleb128 0x16
 1277 04d6 26020000 		.4byte	.LASF72
 1278 04da 01       		.byte	0x1
 1279 04db B4       		.byte	0xb4
 1280 04dc 00000000 		.4byte	.LFB70
 1281 04e0 2E000000 		.4byte	.LFE70-.LFB70
 1282 04e4 01       		.uleb128 0x1
 1283 04e5 9C       		.byte	0x9c
 1284 04e6 17       		.uleb128 0x17
 1285 04e7 65000000 		.4byte	.LASF106
 1286 04eb 01       		.byte	0x1
 1287 04ec C2       		.byte	0xc2
 1288 04ed 4C010000 		.4byte	0x14c
 1289 04f1 00000000 		.4byte	.LFB71
 1290 04f5 20010000 		.4byte	.LFE71-.LFB71
 1291 04f9 01       		.uleb128 0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 28


 1292 04fa 9C       		.byte	0x9c
 1293 04fb 2D050000 		.4byte	0x52d
 1294 04ff 15       		.uleb128 0x15
 1295 0500 05040000 		.4byte	.LASF73
 1296 0504 01       		.byte	0x1
 1297 0505 C5       		.byte	0xc5
 1298 0506 4C010000 		.4byte	0x14c
 1299 050a 03       		.uleb128 0x3
 1300 050b 91       		.byte	0x91
 1301 050c E47C     		.sleb128 -412
 1302 050e 15       		.uleb128 0x15
 1303 050f 19010000 		.4byte	.LASF74
 1304 0513 01       		.byte	0x1
 1305 0514 C9       		.byte	0xc9
 1306 0515 2D050000 		.4byte	0x52d
 1307 0519 03       		.uleb128 0x3
 1308 051a 91       		.byte	0x91
 1309 051b D87C     		.sleb128 -424
 1310 051d 15       		.uleb128 0x15
 1311 051e E1040000 		.4byte	.LASF63
 1312 0522 01       		.byte	0x1
 1313 0523 CA       		.byte	0xca
 1314 0524 3D050000 		.4byte	0x53d
 1315 0528 03       		.uleb128 0x3
 1316 0529 91       		.byte	0x91
 1317 052a CC7C     		.sleb128 -436
 1318 052c 00       		.byte	0
 1319 052d 08       		.uleb128 0x8
 1320 052e 8C000000 		.4byte	0x8c
 1321 0532 3D050000 		.4byte	0x53d
 1322 0536 09       		.uleb128 0x9
 1323 0537 7F000000 		.4byte	0x7f
 1324 053b 09       		.byte	0x9
 1325 053c 00       		.byte	0
 1326 053d 08       		.uleb128 0x8
 1327 053e 8C000000 		.4byte	0x8c
 1328 0542 4D050000 		.4byte	0x54d
 1329 0546 09       		.uleb128 0x9
 1330 0547 7F000000 		.4byte	0x7f
 1331 054b 08       		.byte	0x8
 1332 054c 00       		.byte	0
 1333 054d 18       		.uleb128 0x18
 1334 054e 71040000 		.4byte	.LASF75
 1335 0552 0A       		.byte	0xa
 1336 0553 1207     		.2byte	0x712
 1337 0555 59050000 		.4byte	0x559
 1338 0559 11       		.uleb128 0x11
 1339 055a AE000000 		.4byte	0xae
 1340 055e 19       		.uleb128 0x19
 1341 055f 72010000 		.4byte	.LASF76
 1342 0563 0B       		.byte	0xb
 1343 0564 25       		.byte	0x25
 1344 0565 6C030000 		.4byte	0x36c
 1345 0569 05       		.uleb128 0x5
 1346 056a 03       		.byte	0x3
 1347 056b 00000000 		.4byte	level_sensor_inbox
 1348 056f 19       		.uleb128 0x19
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 29


 1349 0570 FE010000 		.4byte	.LASF77
 1350 0574 07       		.byte	0x7
 1351 0575 11       		.byte	0x11
 1352 0576 BE020000 		.4byte	0x2be
 1353 057a 05       		.uleb128 0x5
 1354 057b 03       		.byte	0x3
 1355 057c 00000000 		.4byte	buffer_overflow
 1356 0580 19       		.uleb128 0x19
 1357 0581 5A010000 		.4byte	.LASF78
 1358 0585 07       		.byte	0x7
 1359 0586 22       		.byte	0x22
 1360 0587 C5000000 		.4byte	0xc5
 1361 058b 05       		.uleb128 0x5
 1362 058c 03       		.byte	0x3
 1363 058d 00000000 		.4byte	dataPointsInStack
 1364 0591 19       		.uleb128 0x19
 1365 0592 B3010000 		.4byte	.LASF79
 1366 0596 07       		.byte	0x7
 1367 0597 23       		.byte	0x23
 1368 0598 C5000000 		.4byte	0xc5
 1369 059c 05       		.uleb128 0x5
 1370 059d 03       		.byte	0x3
 1371 059e 00000000 		.4byte	dataPointsInStackDesired
 1372 05a2 08       		.uleb128 0x8
 1373 05a3 AA010000 		.4byte	0x1aa
 1374 05a7 B2050000 		.4byte	0x5b2
 1375 05ab 09       		.uleb128 0x9
 1376 05ac 7F000000 		.4byte	0x7f
 1377 05b0 95       		.byte	0x95
 1378 05b1 00       		.byte	0
 1379 05b2 19       		.uleb128 0x19
 1380 05b3 19010000 		.4byte	.LASF74
 1381 05b7 07       		.byte	0x7
 1382 05b8 24       		.byte	0x24
 1383 05b9 A2050000 		.4byte	0x5a2
 1384 05bd 05       		.uleb128 0x5
 1385 05be 03       		.byte	0x3
 1386 05bf 00000000 		.4byte	data
 1387 05c3 19       		.uleb128 0x19
 1388 05c4 B4020000 		.4byte	.LASF80
 1389 05c8 08       		.byte	0x8
 1390 05c9 20       		.byte	0x20
 1391 05ca B9000000 		.4byte	0xb9
 1392 05ce 05       		.uleb128 0x5
 1393 05cf 03       		.byte	0x3
 1394 05d0 00000000 		.4byte	modem_state
 1395 05d4 19       		.uleb128 0x19
 1396 05d5 9D020000 		.4byte	.LASF81
 1397 05d9 08       		.byte	0x8
 1398 05da 6A       		.byte	0x6a
 1399 05db DD000000 		.4byte	0xdd
 1400 05df 05       		.uleb128 0x5
 1401 05e0 03       		.byte	0x3
 1402 05e1 00000000 		.4byte	modem_start_time_stamp
 1403 05e5 19       		.uleb128 0x19
 1404 05e6 0E020000 		.4byte	.LASF54
 1405 05ea 08       		.byte	0x8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 30


 1406 05eb 6B       		.byte	0x6b
 1407 05ec E2010000 		.4byte	0x1e2
 1408 05f0 05       		.uleb128 0x5
 1409 05f1 03       		.byte	0x3
 1410 05f2 00000000 		.4byte	modem_info
 1411 05f6 19       		.uleb128 0x19
 1412 05f7 28030000 		.4byte	.LASF82
 1413 05fb 08       		.byte	0x8
 1414 05fc 6C       		.byte	0x6c
 1415 05fd 56020000 		.4byte	0x256
 1416 0601 05       		.uleb128 0x5
 1417 0602 03       		.byte	0x3
 1418 0603 00000000 		.4byte	modem_stats
 1419 0607 19       		.uleb128 0x19
 1420 0608 12050000 		.4byte	.LASF83
 1421 060c 08       		.byte	0x8
 1422 060d 6D       		.byte	0x6d
 1423 060e C5020000 		.4byte	0x2c5
 1424 0612 05       		.uleb128 0x5
 1425 0613 03       		.byte	0x3
 1426 0614 00000000 		.4byte	updatable_parameters
 1427 0618 19       		.uleb128 0x19
 1428 0619 74020000 		.4byte	.LASF84
 1429 061d 0C       		.byte	0xc
 1430 061e 12       		.byte	0x12
 1431 061f 6C030000 		.4byte	0x36c
 1432 0623 05       		.uleb128 0x5
 1433 0624 03       		.byte	0x3
 1434 0625 00000000 		.4byte	app_led_inbox
 1435 0629 08       		.uleb128 0x8
 1436 062a 8C000000 		.4byte	0x8c
 1437 062e 3A060000 		.4byte	0x63a
 1438 0632 1A       		.uleb128 0x1a
 1439 0633 7F000000 		.4byte	0x7f
 1440 0637 0F27     		.2byte	0x270f
 1441 0639 00       		.byte	0
 1442 063a 19       		.uleb128 0x19
 1443 063b 53050000 		.4byte	.LASF85
 1444 063f 09       		.byte	0x9
 1445 0640 18       		.byte	0x18
 1446 0641 29060000 		.4byte	0x629
 1447 0645 05       		.uleb128 0x5
 1448 0646 03       		.byte	0x3
 1449 0647 00000000 		.4byte	http_request
 1450 064b 19       		.uleb128 0x19
 1451 064c 35050000 		.4byte	.LASF86
 1452 0650 09       		.byte	0x9
 1453 0651 19       		.byte	0x19
 1454 0652 29060000 		.4byte	0x629
 1455 0656 05       		.uleb128 0x5
 1456 0657 03       		.byte	0x3
 1457 0658 00000000 		.4byte	http_body
 1458 065c 08       		.uleb128 0x8
 1459 065d 8C000000 		.4byte	0x8c
 1460 0661 6C060000 		.4byte	0x66c
 1461 0665 09       		.uleb128 0x9
 1462 0666 7F000000 		.4byte	0x7f
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 31


 1463 066a C7       		.byte	0xc7
 1464 066b 00       		.byte	0
 1465 066c 19       		.uleb128 0x19
 1466 066d 47040000 		.4byte	.LASF87
 1467 0671 09       		.byte	0x9
 1468 0672 1A       		.byte	0x1a
 1469 0673 5C060000 		.4byte	0x65c
 1470 0677 05       		.uleb128 0x5
 1471 0678 03       		.byte	0x3
 1472 0679 00000000 		.4byte	http_route
 1473 067d 19       		.uleb128 0x19
 1474 067e A7030000 		.4byte	.LASF88
 1475 0682 09       		.byte	0x9
 1476 0683 41       		.byte	0x41
 1477 0684 40030000 		.4byte	0x340
 1478 0688 05       		.uleb128 0x5
 1479 0689 03       		.byte	0x3
 1480 068a 00000000 		.4byte	system_info
 1481 068e 19       		.uleb128 0x19
 1482 068f E3020000 		.4byte	.LASF89
 1483 0693 09       		.byte	0x9
 1484 0694 53       		.byte	0x53
 1485 0695 7C030000 		.4byte	0x37c
 1486 0699 05       		.uleb128 0x5
 1487 069a 03       		.byte	0x3
 1488 069b 00000000 		.4byte	system_settings
 1489 069f 19       		.uleb128 0x19
 1490 06a0 19020000 		.4byte	.LASF90
 1491 06a4 09       		.byte	0x9
 1492 06a5 6F       		.byte	0x6f
 1493 06a6 09030000 		.4byte	0x309
 1494 06aa 05       		.uleb128 0x5
 1495 06ab 03       		.byte	0x3
 1496 06ac 00000000 		.4byte	alarmMeasure
 1497 06b0 19       		.uleb128 0x19
 1498 06b1 34030000 		.4byte	.LASF91
 1499 06b5 09       		.byte	0x9
 1500 06b6 70       		.byte	0x70
 1501 06b7 B9000000 		.4byte	0xb9
 1502 06bb 05       		.uleb128 0x5
 1503 06bc 03       		.byte	0x3
 1504 06bd 00000000 		.4byte	timeToMeasure
 1505 06c1 19       		.uleb128 0x19
 1506 06c2 5E020000 		.4byte	.LASF92
 1507 06c6 09       		.byte	0x9
 1508 06c7 71       		.byte	0x71
 1509 06c8 09030000 		.4byte	0x309
 1510 06cc 05       		.uleb128 0x5
 1511 06cd 03       		.byte	0x3
 1512 06ce 00000000 		.4byte	alarmSync
 1513 06d2 19       		.uleb128 0x19
 1514 06d3 60050000 		.4byte	.LASF93
 1515 06d7 09       		.byte	0x9
 1516 06d8 72       		.byte	0x72
 1517 06d9 B9000000 		.4byte	0xb9
 1518 06dd 05       		.uleb128 0x5
 1519 06de 03       		.byte	0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 32


 1520 06df 00000000 		.4byte	timeToSync
 1521 06e3 19       		.uleb128 0x19
 1522 06e4 EE030000 		.4byte	.LASF94
 1523 06e8 09       		.byte	0x9
 1524 06e9 73       		.byte	0x73
 1525 06ea B9000000 		.4byte	0xb9
 1526 06ee 05       		.uleb128 0x5
 1527 06ef 03       		.byte	0x3
 1528 06f0 00000000 		.4byte	timeToSycnRemoteParams
 1529 06f4 1B       		.uleb128 0x1b
 1530 06f5 68657900 		.ascii	"hey\000"
 1531 06f9 09       		.byte	0x9
 1532 06fa 74       		.byte	0x74
 1533 06fb B9000000 		.4byte	0xb9
 1534 06ff 05       		.uleb128 0x5
 1535 0700 03       		.byte	0x3
 1536 0701 00000000 		.4byte	hey
 1537 0705 19       		.uleb128 0x19
 1538 0706 3E010000 		.4byte	.LASF95
 1539 070a 09       		.byte	0x9
 1540 070b 77       		.byte	0x77
 1541 070c 09030000 		.4byte	0x309
 1542 0710 05       		.uleb128 0x5
 1543 0711 03       		.byte	0x3
 1544 0712 00000000 		.4byte	alarmAppLED
 1545 0716 19       		.uleb128 0x19
 1546 0717 CC040000 		.4byte	.LASF96
 1547 071b 09       		.byte	0x9
 1548 071c 78       		.byte	0x78
 1549 071d B9000000 		.4byte	0xb9
 1550 0721 05       		.uleb128 0x5
 1551 0722 03       		.byte	0x3
 1552 0723 00000000 		.4byte	timeToAppLED
 1553 0727 19       		.uleb128 0x19
 1554 0728 7E040000 		.4byte	.LASF97
 1555 072c 09       		.byte	0x9
 1556 072d 7A       		.byte	0x7a
 1557 072e 09030000 		.4byte	0x309
 1558 0732 05       		.uleb128 0x5
 1559 0733 03       		.byte	0x3
 1560 0734 00000000 		.4byte	alarmLevelSensor
 1561 0738 19       		.uleb128 0x19
 1562 0739 00050000 		.4byte	.LASF98
 1563 073d 09       		.byte	0x9
 1564 073e 7B       		.byte	0x7b
 1565 073f B9000000 		.4byte	0xb9
 1566 0743 05       		.uleb128 0x5
 1567 0744 03       		.byte	0x3
 1568 0745 00000000 		.4byte	timetoLevelSensor
 1569 0749 19       		.uleb128 0x19
 1570 074a 7A000000 		.4byte	.LASF99
 1571 074e 01       		.byte	0x1
 1572 074f 0D       		.byte	0xd
 1573 0750 2D050000 		.4byte	0x52d
 1574 0754 05       		.uleb128 0x5
 1575 0755 03       		.byte	0x3
 1576 0756 00000000 		.4byte	SD_dir
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 33


 1577 075a 08       		.uleb128 0x8
 1578 075b 8C000000 		.4byte	0x8c
 1579 075f 6B070000 		.4byte	0x76b
 1580 0763 1A       		.uleb128 0x1a
 1581 0764 7F000000 		.4byte	0x7f
 1582 0768 B70B     		.2byte	0xbb7
 1583 076a 00       		.byte	0
 1584 076b 19       		.uleb128 0x19
 1585 076c 9F030000 		.4byte	.LASF100
 1586 0770 01       		.byte	0x1
 1587 0771 0E       		.byte	0xe
 1588 0772 5A070000 		.4byte	0x75a
 1589 0776 05       		.uleb128 0x5
 1590 0777 03       		.byte	0x3
 1591 0778 00000000 		.4byte	SD_body
 1592 077c 08       		.uleb128 0x8
 1593 077d 8C000000 		.4byte	0x8c
 1594 0781 8C070000 		.4byte	0x78c
 1595 0785 09       		.uleb128 0x9
 1596 0786 7F000000 		.4byte	0x7f
 1597 078a 1D       		.byte	0x1d
 1598 078b 00       		.byte	0
 1599 078c 19       		.uleb128 0x19
 1600 078d C0040000 		.4byte	.LASF101
 1601 0791 01       		.byte	0x1
 1602 0792 0F       		.byte	0xf
 1603 0793 7C070000 		.4byte	0x77c
 1604 0797 05       		.uleb128 0x5
 1605 0798 03       		.byte	0x3
 1606 0799 00000000 		.4byte	SD_filename
 1607 079d 08       		.uleb128 0x8
 1608 079e 8C000000 		.4byte	0x8c
 1609 07a2 AD070000 		.4byte	0x7ad
 1610 07a6 09       		.uleb128 0x9
 1611 07a7 7F000000 		.4byte	0x7f
 1612 07ab 04       		.byte	0x4
 1613 07ac 00       		.byte	0
 1614 07ad 19       		.uleb128 0x19
 1615 07ae 85010000 		.4byte	.LASF102
 1616 07b2 01       		.byte	0x1
 1617 07b3 10       		.byte	0x10
 1618 07b4 9D070000 		.4byte	0x79d
 1619 07b8 05       		.uleb128 0x5
 1620 07b9 03       		.byte	0x3
 1621 07ba 00000000 		.4byte	SD_filemode
 1622 07be 00       		.byte	0
 1623              		.section	.debug_abbrev,"",%progbits
 1624              	.Ldebug_abbrev0:
 1625 0000 01       		.uleb128 0x1
 1626 0001 11       		.uleb128 0x11
 1627 0002 01       		.byte	0x1
 1628 0003 25       		.uleb128 0x25
 1629 0004 0E       		.uleb128 0xe
 1630 0005 13       		.uleb128 0x13
 1631 0006 0B       		.uleb128 0xb
 1632 0007 03       		.uleb128 0x3
 1633 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 34


 1634 0009 1B       		.uleb128 0x1b
 1635 000a 0E       		.uleb128 0xe
 1636 000b 55       		.uleb128 0x55
 1637 000c 17       		.uleb128 0x17
 1638 000d 11       		.uleb128 0x11
 1639 000e 01       		.uleb128 0x1
 1640 000f 10       		.uleb128 0x10
 1641 0010 17       		.uleb128 0x17
 1642 0011 00       		.byte	0
 1643 0012 00       		.byte	0
 1644 0013 02       		.uleb128 0x2
 1645 0014 24       		.uleb128 0x24
 1646 0015 00       		.byte	0
 1647 0016 0B       		.uleb128 0xb
 1648 0017 0B       		.uleb128 0xb
 1649 0018 3E       		.uleb128 0x3e
 1650 0019 0B       		.uleb128 0xb
 1651 001a 03       		.uleb128 0x3
 1652 001b 0E       		.uleb128 0xe
 1653 001c 00       		.byte	0
 1654 001d 00       		.byte	0
 1655 001e 03       		.uleb128 0x3
 1656 001f 16       		.uleb128 0x16
 1657 0020 00       		.byte	0
 1658 0021 03       		.uleb128 0x3
 1659 0022 0E       		.uleb128 0xe
 1660 0023 3A       		.uleb128 0x3a
 1661 0024 0B       		.uleb128 0xb
 1662 0025 3B       		.uleb128 0x3b
 1663 0026 0B       		.uleb128 0xb
 1664 0027 49       		.uleb128 0x49
 1665 0028 13       		.uleb128 0x13
 1666 0029 00       		.byte	0
 1667 002a 00       		.byte	0
 1668 002b 04       		.uleb128 0x4
 1669 002c 24       		.uleb128 0x24
 1670 002d 00       		.byte	0
 1671 002e 0B       		.uleb128 0xb
 1672 002f 0B       		.uleb128 0xb
 1673 0030 3E       		.uleb128 0x3e
 1674 0031 0B       		.uleb128 0xb
 1675 0032 03       		.uleb128 0x3
 1676 0033 08       		.uleb128 0x8
 1677 0034 00       		.byte	0
 1678 0035 00       		.byte	0
 1679 0036 05       		.uleb128 0x5
 1680 0037 0F       		.uleb128 0xf
 1681 0038 00       		.byte	0
 1682 0039 0B       		.uleb128 0xb
 1683 003a 0B       		.uleb128 0xb
 1684 003b 00       		.byte	0
 1685 003c 00       		.byte	0
 1686 003d 06       		.uleb128 0x6
 1687 003e 0F       		.uleb128 0xf
 1688 003f 00       		.byte	0
 1689 0040 0B       		.uleb128 0xb
 1690 0041 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 35


 1691 0042 49       		.uleb128 0x49
 1692 0043 13       		.uleb128 0x13
 1693 0044 00       		.byte	0
 1694 0045 00       		.byte	0
 1695 0046 07       		.uleb128 0x7
 1696 0047 26       		.uleb128 0x26
 1697 0048 00       		.byte	0
 1698 0049 49       		.uleb128 0x49
 1699 004a 13       		.uleb128 0x13
 1700 004b 00       		.byte	0
 1701 004c 00       		.byte	0
 1702 004d 08       		.uleb128 0x8
 1703 004e 01       		.uleb128 0x1
 1704 004f 01       		.byte	0x1
 1705 0050 49       		.uleb128 0x49
 1706 0051 13       		.uleb128 0x13
 1707 0052 01       		.uleb128 0x1
 1708 0053 13       		.uleb128 0x13
 1709 0054 00       		.byte	0
 1710 0055 00       		.byte	0
 1711 0056 09       		.uleb128 0x9
 1712 0057 21       		.uleb128 0x21
 1713 0058 00       		.byte	0
 1714 0059 49       		.uleb128 0x49
 1715 005a 13       		.uleb128 0x13
 1716 005b 2F       		.uleb128 0x2f
 1717 005c 0B       		.uleb128 0xb
 1718 005d 00       		.byte	0
 1719 005e 00       		.byte	0
 1720 005f 0A       		.uleb128 0xa
 1721 0060 16       		.uleb128 0x16
 1722 0061 00       		.byte	0
 1723 0062 03       		.uleb128 0x3
 1724 0063 0E       		.uleb128 0xe
 1725 0064 3A       		.uleb128 0x3a
 1726 0065 0B       		.uleb128 0xb
 1727 0066 3B       		.uleb128 0x3b
 1728 0067 05       		.uleb128 0x5
 1729 0068 49       		.uleb128 0x49
 1730 0069 13       		.uleb128 0x13
 1731 006a 00       		.byte	0
 1732 006b 00       		.byte	0
 1733 006c 0B       		.uleb128 0xb
 1734 006d 26       		.uleb128 0x26
 1735 006e 00       		.byte	0
 1736 006f 00       		.byte	0
 1737 0070 00       		.byte	0
 1738 0071 0C       		.uleb128 0xc
 1739 0072 13       		.uleb128 0x13
 1740 0073 01       		.byte	0x1
 1741 0074 0B       		.uleb128 0xb
 1742 0075 05       		.uleb128 0x5
 1743 0076 3A       		.uleb128 0x3a
 1744 0077 0B       		.uleb128 0xb
 1745 0078 3B       		.uleb128 0x3b
 1746 0079 0B       		.uleb128 0xb
 1747 007a 01       		.uleb128 0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 36


 1748 007b 13       		.uleb128 0x13
 1749 007c 00       		.byte	0
 1750 007d 00       		.byte	0
 1751 007e 0D       		.uleb128 0xd
 1752 007f 0D       		.uleb128 0xd
 1753 0080 00       		.byte	0
 1754 0081 03       		.uleb128 0x3
 1755 0082 0E       		.uleb128 0xe
 1756 0083 3A       		.uleb128 0x3a
 1757 0084 0B       		.uleb128 0xb
 1758 0085 3B       		.uleb128 0x3b
 1759 0086 0B       		.uleb128 0xb
 1760 0087 49       		.uleb128 0x49
 1761 0088 13       		.uleb128 0x13
 1762 0089 38       		.uleb128 0x38
 1763 008a 0B       		.uleb128 0xb
 1764 008b 00       		.byte	0
 1765 008c 00       		.byte	0
 1766 008d 0E       		.uleb128 0xe
 1767 008e 13       		.uleb128 0x13
 1768 008f 00       		.byte	0
 1769 0090 03       		.uleb128 0x3
 1770 0091 0E       		.uleb128 0xe
 1771 0092 3C       		.uleb128 0x3c
 1772 0093 19       		.uleb128 0x19
 1773 0094 00       		.byte	0
 1774 0095 00       		.byte	0
 1775 0096 0F       		.uleb128 0xf
 1776 0097 13       		.uleb128 0x13
 1777 0098 01       		.byte	0x1
 1778 0099 0B       		.uleb128 0xb
 1779 009a 0B       		.uleb128 0xb
 1780 009b 3A       		.uleb128 0x3a
 1781 009c 0B       		.uleb128 0xb
 1782 009d 3B       		.uleb128 0x3b
 1783 009e 0B       		.uleb128 0xb
 1784 009f 01       		.uleb128 0x1
 1785 00a0 13       		.uleb128 0x13
 1786 00a1 00       		.byte	0
 1787 00a2 00       		.byte	0
 1788 00a3 10       		.uleb128 0x10
 1789 00a4 0D       		.uleb128 0xd
 1790 00a5 00       		.byte	0
 1791 00a6 03       		.uleb128 0x3
 1792 00a7 08       		.uleb128 0x8
 1793 00a8 3A       		.uleb128 0x3a
 1794 00a9 0B       		.uleb128 0xb
 1795 00aa 3B       		.uleb128 0x3b
 1796 00ab 0B       		.uleb128 0xb
 1797 00ac 49       		.uleb128 0x49
 1798 00ad 13       		.uleb128 0x13
 1799 00ae 38       		.uleb128 0x38
 1800 00af 0B       		.uleb128 0xb
 1801 00b0 00       		.byte	0
 1802 00b1 00       		.byte	0
 1803 00b2 11       		.uleb128 0x11
 1804 00b3 35       		.uleb128 0x35
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 37


 1805 00b4 00       		.byte	0
 1806 00b5 49       		.uleb128 0x49
 1807 00b6 13       		.uleb128 0x13
 1808 00b7 00       		.byte	0
 1809 00b8 00       		.byte	0
 1810 00b9 12       		.uleb128 0x12
 1811 00ba 2E       		.uleb128 0x2e
 1812 00bb 00       		.byte	0
 1813 00bc 3F       		.uleb128 0x3f
 1814 00bd 19       		.uleb128 0x19
 1815 00be 03       		.uleb128 0x3
 1816 00bf 0E       		.uleb128 0xe
 1817 00c0 3A       		.uleb128 0x3a
 1818 00c1 0B       		.uleb128 0xb
 1819 00c2 3B       		.uleb128 0x3b
 1820 00c3 0B       		.uleb128 0xb
 1821 00c4 11       		.uleb128 0x11
 1822 00c5 01       		.uleb128 0x1
 1823 00c6 12       		.uleb128 0x12
 1824 00c7 06       		.uleb128 0x6
 1825 00c8 40       		.uleb128 0x40
 1826 00c9 18       		.uleb128 0x18
 1827 00ca 9742     		.uleb128 0x2117
 1828 00cc 19       		.uleb128 0x19
 1829 00cd 00       		.byte	0
 1830 00ce 00       		.byte	0
 1831 00cf 13       		.uleb128 0x13
 1832 00d0 2E       		.uleb128 0x2e
 1833 00d1 01       		.byte	0x1
 1834 00d2 3F       		.uleb128 0x3f
 1835 00d3 19       		.uleb128 0x19
 1836 00d4 03       		.uleb128 0x3
 1837 00d5 0E       		.uleb128 0xe
 1838 00d6 3A       		.uleb128 0x3a
 1839 00d7 0B       		.uleb128 0xb
 1840 00d8 3B       		.uleb128 0x3b
 1841 00d9 0B       		.uleb128 0xb
 1842 00da 27       		.uleb128 0x27
 1843 00db 19       		.uleb128 0x19
 1844 00dc 49       		.uleb128 0x49
 1845 00dd 13       		.uleb128 0x13
 1846 00de 11       		.uleb128 0x11
 1847 00df 01       		.uleb128 0x1
 1848 00e0 12       		.uleb128 0x12
 1849 00e1 06       		.uleb128 0x6
 1850 00e2 40       		.uleb128 0x40
 1851 00e3 18       		.uleb128 0x18
 1852 00e4 9642     		.uleb128 0x2116
 1853 00e6 19       		.uleb128 0x19
 1854 00e7 01       		.uleb128 0x1
 1855 00e8 13       		.uleb128 0x13
 1856 00e9 00       		.byte	0
 1857 00ea 00       		.byte	0
 1858 00eb 14       		.uleb128 0x14
 1859 00ec 05       		.uleb128 0x5
 1860 00ed 00       		.byte	0
 1861 00ee 03       		.uleb128 0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 38


 1862 00ef 0E       		.uleb128 0xe
 1863 00f0 3A       		.uleb128 0x3a
 1864 00f1 0B       		.uleb128 0xb
 1865 00f2 3B       		.uleb128 0x3b
 1866 00f3 0B       		.uleb128 0xb
 1867 00f4 49       		.uleb128 0x49
 1868 00f5 13       		.uleb128 0x13
 1869 00f6 02       		.uleb128 0x2
 1870 00f7 18       		.uleb128 0x18
 1871 00f8 00       		.byte	0
 1872 00f9 00       		.byte	0
 1873 00fa 15       		.uleb128 0x15
 1874 00fb 34       		.uleb128 0x34
 1875 00fc 00       		.byte	0
 1876 00fd 03       		.uleb128 0x3
 1877 00fe 0E       		.uleb128 0xe
 1878 00ff 3A       		.uleb128 0x3a
 1879 0100 0B       		.uleb128 0xb
 1880 0101 3B       		.uleb128 0x3b
 1881 0102 0B       		.uleb128 0xb
 1882 0103 49       		.uleb128 0x49
 1883 0104 13       		.uleb128 0x13
 1884 0105 02       		.uleb128 0x2
 1885 0106 18       		.uleb128 0x18
 1886 0107 00       		.byte	0
 1887 0108 00       		.byte	0
 1888 0109 16       		.uleb128 0x16
 1889 010a 2E       		.uleb128 0x2e
 1890 010b 00       		.byte	0
 1891 010c 3F       		.uleb128 0x3f
 1892 010d 19       		.uleb128 0x19
 1893 010e 03       		.uleb128 0x3
 1894 010f 0E       		.uleb128 0xe
 1895 0110 3A       		.uleb128 0x3a
 1896 0111 0B       		.uleb128 0xb
 1897 0112 3B       		.uleb128 0x3b
 1898 0113 0B       		.uleb128 0xb
 1899 0114 11       		.uleb128 0x11
 1900 0115 01       		.uleb128 0x1
 1901 0116 12       		.uleb128 0x12
 1902 0117 06       		.uleb128 0x6
 1903 0118 40       		.uleb128 0x40
 1904 0119 18       		.uleb128 0x18
 1905 011a 9642     		.uleb128 0x2116
 1906 011c 19       		.uleb128 0x19
 1907 011d 00       		.byte	0
 1908 011e 00       		.byte	0
 1909 011f 17       		.uleb128 0x17
 1910 0120 2E       		.uleb128 0x2e
 1911 0121 01       		.byte	0x1
 1912 0122 3F       		.uleb128 0x3f
 1913 0123 19       		.uleb128 0x19
 1914 0124 03       		.uleb128 0x3
 1915 0125 0E       		.uleb128 0xe
 1916 0126 3A       		.uleb128 0x3a
 1917 0127 0B       		.uleb128 0xb
 1918 0128 3B       		.uleb128 0x3b
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 39


 1919 0129 0B       		.uleb128 0xb
 1920 012a 49       		.uleb128 0x49
 1921 012b 13       		.uleb128 0x13
 1922 012c 11       		.uleb128 0x11
 1923 012d 01       		.uleb128 0x1
 1924 012e 12       		.uleb128 0x12
 1925 012f 06       		.uleb128 0x6
 1926 0130 40       		.uleb128 0x40
 1927 0131 18       		.uleb128 0x18
 1928 0132 9642     		.uleb128 0x2116
 1929 0134 19       		.uleb128 0x19
 1930 0135 01       		.uleb128 0x1
 1931 0136 13       		.uleb128 0x13
 1932 0137 00       		.byte	0
 1933 0138 00       		.byte	0
 1934 0139 18       		.uleb128 0x18
 1935 013a 34       		.uleb128 0x34
 1936 013b 00       		.byte	0
 1937 013c 03       		.uleb128 0x3
 1938 013d 0E       		.uleb128 0xe
 1939 013e 3A       		.uleb128 0x3a
 1940 013f 0B       		.uleb128 0xb
 1941 0140 3B       		.uleb128 0x3b
 1942 0141 05       		.uleb128 0x5
 1943 0142 49       		.uleb128 0x49
 1944 0143 13       		.uleb128 0x13
 1945 0144 3F       		.uleb128 0x3f
 1946 0145 19       		.uleb128 0x19
 1947 0146 3C       		.uleb128 0x3c
 1948 0147 19       		.uleb128 0x19
 1949 0148 00       		.byte	0
 1950 0149 00       		.byte	0
 1951 014a 19       		.uleb128 0x19
 1952 014b 34       		.uleb128 0x34
 1953 014c 00       		.byte	0
 1954 014d 03       		.uleb128 0x3
 1955 014e 0E       		.uleb128 0xe
 1956 014f 3A       		.uleb128 0x3a
 1957 0150 0B       		.uleb128 0xb
 1958 0151 3B       		.uleb128 0x3b
 1959 0152 0B       		.uleb128 0xb
 1960 0153 49       		.uleb128 0x49
 1961 0154 13       		.uleb128 0x13
 1962 0155 3F       		.uleb128 0x3f
 1963 0156 19       		.uleb128 0x19
 1964 0157 02       		.uleb128 0x2
 1965 0158 18       		.uleb128 0x18
 1966 0159 00       		.byte	0
 1967 015a 00       		.byte	0
 1968 015b 1A       		.uleb128 0x1a
 1969 015c 21       		.uleb128 0x21
 1970 015d 00       		.byte	0
 1971 015e 49       		.uleb128 0x49
 1972 015f 13       		.uleb128 0x13
 1973 0160 2F       		.uleb128 0x2f
 1974 0161 05       		.uleb128 0x5
 1975 0162 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 40


 1976 0163 00       		.byte	0
 1977 0164 1B       		.uleb128 0x1b
 1978 0165 34       		.uleb128 0x34
 1979 0166 00       		.byte	0
 1980 0167 03       		.uleb128 0x3
 1981 0168 08       		.uleb128 0x8
 1982 0169 3A       		.uleb128 0x3a
 1983 016a 0B       		.uleb128 0xb
 1984 016b 3B       		.uleb128 0x3b
 1985 016c 0B       		.uleb128 0xb
 1986 016d 49       		.uleb128 0x49
 1987 016e 13       		.uleb128 0x13
 1988 016f 3F       		.uleb128 0x3f
 1989 0170 19       		.uleb128 0x19
 1990 0171 02       		.uleb128 0x2
 1991 0172 18       		.uleb128 0x18
 1992 0173 00       		.byte	0
 1993 0174 00       		.byte	0
 1994 0175 00       		.byte	0
 1995              		.section	.debug_aranges,"",%progbits
 1996 0000 54000000 		.4byte	0x54
 1997 0004 0200     		.2byte	0x2
 1998 0006 00000000 		.4byte	.Ldebug_info0
 1999 000a 04       		.byte	0x4
 2000 000b 00       		.byte	0
 2001 000c 0000     		.2byte	0
 2002 000e 0000     		.2byte	0
 2003 0010 00000000 		.4byte	.LFB64
 2004 0014 0C000000 		.4byte	.LFE64-.LFB64
 2005 0018 00000000 		.4byte	.LFB65
 2006 001c 40000000 		.4byte	.LFE65-.LFB65
 2007 0020 00000000 		.4byte	.LFB66
 2008 0024 2C000000 		.4byte	.LFE66-.LFB66
 2009 0028 00000000 		.4byte	.LFB67
 2010 002c 6C000000 		.4byte	.LFE67-.LFB67
 2011 0030 00000000 		.4byte	.LFB68
 2012 0034 68000000 		.4byte	.LFE68-.LFB68
 2013 0038 00000000 		.4byte	.LFB69
 2014 003c 16000000 		.4byte	.LFE69-.LFB69
 2015 0040 00000000 		.4byte	.LFB70
 2016 0044 2E000000 		.4byte	.LFE70-.LFB70
 2017 0048 00000000 		.4byte	.LFB71
 2018 004c 20010000 		.4byte	.LFE71-.LFB71
 2019 0050 00000000 		.4byte	0
 2020 0054 00000000 		.4byte	0
 2021              		.section	.debug_ranges,"",%progbits
 2022              	.Ldebug_ranges0:
 2023 0000 00000000 		.4byte	.LFB64
 2024 0004 0C000000 		.4byte	.LFE64
 2025 0008 00000000 		.4byte	.LFB65
 2026 000c 40000000 		.4byte	.LFE65
 2027 0010 00000000 		.4byte	.LFB66
 2028 0014 2C000000 		.4byte	.LFE66
 2029 0018 00000000 		.4byte	.LFB67
 2030 001c 6C000000 		.4byte	.LFE67
 2031 0020 00000000 		.4byte	.LFB68
 2032 0024 68000000 		.4byte	.LFE68
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 41


 2033 0028 00000000 		.4byte	.LFB69
 2034 002c 16000000 		.4byte	.LFE69
 2035 0030 00000000 		.4byte	.LFB70
 2036 0034 2E000000 		.4byte	.LFE70
 2037 0038 00000000 		.4byte	.LFB71
 2038 003c 20010000 		.4byte	.LFE71
 2039 0040 00000000 		.4byte	0
 2040 0044 00000000 		.4byte	0
 2041              		.section	.debug_line,"",%progbits
 2042              	.Ldebug_line0:
 2043 0000 96020000 		.section	.debug_str,"MS",%progbits,1
 2043      0200CF01 
 2043      00000201 
 2043      FB0E0D00 
 2043      01010101 
 2044              	.LASF29:
 2045 0000 6D6F6465 		.ascii	"model_id\000"
 2045      6C5F6964 
 2045      00
 2046              	.LASF28:
 2047 0009 73696D5F 		.ascii	"sim_id\000"
 2047      696400
 2048              	.LASF68:
 2049 0010 53445F72 		.ascii	"SD_read\000"
 2049      65616400 
 2050              	.LASF66:
 2051 0018 70446174 		.ascii	"pData\000"
 2051      6100
 2052              	.LASF59:
 2053 001e 7379735F 		.ascii	"sys_settings_t\000"
 2053      73657474 
 2053      696E6773 
 2053      5F7400
 2054              	.LASF50:
 2055 002d 63757272 		.ascii	"currentCountDownValue\000"
 2055      656E7443 
 2055      6F756E74 
 2055      446F776E 
 2055      56616C75 
 2056              	.LASF49:
 2057 0043 636F756E 		.ascii	"countDownValue\000"
 2057      74446F77 
 2057      6E56616C 
 2057      756500
 2058              	.LASF2:
 2059 0052 73686F72 		.ascii	"short int\000"
 2059      7420696E 
 2059      7400
 2060              	.LASF10:
 2061 005c 73697A65 		.ascii	"sizetype\000"
 2061      74797065 
 2061      00
 2062              	.LASF106:
 2063 0065 53445F63 		.ascii	"SD_card_test\000"
 2063      6172645F 
 2063      74657374 
 2063      00
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 42


 2064              	.LASF57:
 2065 0072 65705F68 		.ascii	"ep_host\000"
 2065      6F737400 
 2066              	.LASF99:
 2067 007a 53445F64 		.ascii	"SD_dir\000"
 2067      697200
 2068              	.LASF104:
 2069 0081 73645F63 		.ascii	"sd_card.c\000"
 2069      6172642E 
 2069      6300
 2070              	.LASF103:
 2071 008b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2071      43313120 
 2071      352E342E 
 2071      31203230 
 2071      31363036 
 2072 00be 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2072      20726576 
 2072      6973696F 
 2072      6E203233 
 2072      37373135 
 2073 00f1 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2073      66756E63 
 2073      74696F6E 
 2073      2D736563 
 2073      74696F6E 
 2074              	.LASF74:
 2075 0119 64617461 		.ascii	"data\000"
 2075      00
 2076              	.LASF45:
 2077 011e 4170705F 		.ascii	"App_LED_freq\000"
 2077      4C45445F 
 2077      66726571 
 2077      00
 2078              	.LASF55:
 2079 012b 63686970 		.ascii	"chip_uniqueId\000"
 2079      5F756E69 
 2079      71756549 
 2079      6400
 2080              	.LASF34:
 2081 0139 65636E6F 		.ascii	"ecno\000"
 2081      00
 2082              	.LASF95:
 2083 013e 616C6172 		.ascii	"alarmAppLED\000"
 2083      6D417070 
 2083      4C454400 
 2084              	.LASF69:
 2085 014a 4E756D42 		.ascii	"NumBytes\000"
 2085      79746573 
 2085      00
 2086              	.LASF15:
 2087 0153 75696E74 		.ascii	"uint16\000"
 2087      313600
 2088              	.LASF78:
 2089 015a 64617461 		.ascii	"dataPointsInStack\000"
 2089      506F696E 
 2089      7473496E 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 43


 2089      53746163 
 2089      6B00
 2090              	.LASF14:
 2091 016c 75696E74 		.ascii	"uint8\000"
 2091      3800
 2092              	.LASF76:
 2093 0172 6C657665 		.ascii	"level_sensor_inbox\000"
 2093      6C5F7365 
 2093      6E736F72 
 2093      5F696E62 
 2093      6F7800
 2094              	.LASF102:
 2095 0185 53445F66 		.ascii	"SD_filemode\000"
 2095      696C656D 
 2095      6F646500 
 2096              	.LASF16:
 2097 0191 696E7431 		.ascii	"int16\000"
 2097      3600
 2098              	.LASF26:
 2099 0197 74696D65 		.ascii	"timeStamp\000"
 2099      5374616D 
 2099      7000
 2100              	.LASF64:
 2101 01a1 53445F77 		.ascii	"SD_write\000"
 2101      72697465 
 2101      00
 2102              	.LASF60:
 2103 01aa 53445F6D 		.ascii	"SD_mkdir\000"
 2103      6B646972 
 2103      00
 2104              	.LASF79:
 2105 01b3 64617461 		.ascii	"dataPointsInStackDesired\000"
 2105      506F696E 
 2105      7473496E 
 2105      53746163 
 2105      6B446573 
 2106              	.LASF18:
 2107 01cc 666C6F61 		.ascii	"float\000"
 2107      7400
 2108              	.LASF62:
 2109 01d2 6469725F 		.ascii	"dir_name\000"
 2109      6E616D65 
 2109      00
 2110              	.LASF6:
 2111 01db 6C6F6E67 		.ascii	"long long int\000"
 2111      206C6F6E 
 2111      6720696E 
 2111      7400
 2112              	.LASF11:
 2113 01e9 63686172 		.ascii	"char\000"
 2113      00
 2114              	.LASF22:
 2115 01ee 72656173 		.ascii	"reason\000"
 2115      6F6E00
 2116              	.LASF4:
 2117 01f5 6C6F6E67 		.ascii	"long int\000"
 2117      20696E74 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 44


 2117      00
 2118              	.LASF77:
 2119 01fe 62756666 		.ascii	"buffer_overflow\000"
 2119      65725F6F 
 2119      76657266 
 2119      6C6F7700 
 2120              	.LASF54:
 2121 020e 6D6F6465 		.ascii	"modem_info\000"
 2121      6D5F696E 
 2121      666F00
 2122              	.LASF90:
 2123 0219 616C6172 		.ascii	"alarmMeasure\000"
 2123      6D4D6561 
 2123      73757265 
 2123      00
 2124              	.LASF72:
 2125 0226 53445F70 		.ascii	"SD_power_down\000"
 2125      6F776572 
 2125      5F646F77 
 2125      6E00
 2126              	.LASF53:
 2127 0234 616C6172 		.ascii	"alarm\000"
 2127      6D00
 2128              	.LASF42:
 2129 023a 6D656173 		.ascii	"measure_time\000"
 2129      7572655F 
 2129      74696D65 
 2129      00
 2130              	.LASF46:
 2131 0247 4C657665 		.ascii	"Level_Sensor_freq\000"
 2131      6C5F5365 
 2131      6E736F72 
 2131      5F667265 
 2131      7100
 2132              	.LASF33:
 2133 0259 72736370 		.ascii	"rscp\000"
 2133      00
 2134              	.LASF92:
 2135 025e 616C6172 		.ascii	"alarmSync\000"
 2135      6D53796E 
 2135      6300
 2136              	.LASF9:
 2137 0268 6C6F6E67 		.ascii	"long double\000"
 2137      20646F75 
 2137      626C6500 
 2138              	.LASF84:
 2139 0274 6170705F 		.ascii	"app_led_inbox\000"
 2139      6C65645F 
 2139      696E626F 
 2139      7800
 2140              	.LASF1:
 2141 0282 756E7369 		.ascii	"unsigned char\000"
 2141      676E6564 
 2141      20636861 
 2141      7200
 2142              	.LASF24:
 2143 0290 46535F46 		.ascii	"FS_FILE\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 45


 2143      494C4500 
 2144              	.LASF36:
 2145 0298 72737270 		.ascii	"rsrp\000"
 2145      00
 2146              	.LASF81:
 2147 029d 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2147      6D5F7374 
 2147      6172745F 
 2147      74696D65 
 2147      5F737461 
 2148              	.LASF80:
 2149 02b4 6D6F6465 		.ascii	"modem_state\000"
 2149      6D5F7374 
 2149      61746500 
 2150              	.LASF0:
 2151 02c0 7369676E 		.ascii	"signed char\000"
 2151      65642063 
 2151      68617200 
 2152              	.LASF7:
 2153 02cc 6C6F6E67 		.ascii	"long long unsigned int\000"
 2153      206C6F6E 
 2153      6720756E 
 2153      7369676E 
 2153      65642069 
 2154              	.LASF89:
 2155 02e3 73797374 		.ascii	"system_settings\000"
 2155      656D5F73 
 2155      65747469 
 2155      6E677300 
 2156              	.LASF67:
 2157 02f3 7046696C 		.ascii	"pFile\000"
 2157      6500
 2158              	.LASF8:
 2159 02f9 756E7369 		.ascii	"unsigned int\000"
 2159      676E6564 
 2159      20696E74 
 2159      00
 2160              	.LASF27:
 2161 0306 6B65795F 		.ascii	"key_value_t\000"
 2161      76616C75 
 2161      655F7400 
 2162              	.LASF32:
 2163 0312 72786C65 		.ascii	"rxlev\000"
 2163      7600
 2164              	.LASF43:
 2165 0318 73796E63 		.ascii	"sync_time\000"
 2165      5F74696D 
 2165      6500
 2166              	.LASF65:
 2167 0322 704D6F64 		.ascii	"pMode\000"
 2167      6500
 2168              	.LASF82:
 2169 0328 6D6F6465 		.ascii	"modem_stats\000"
 2169      6D5F7374 
 2169      61747300 
 2170              	.LASF91:
 2171 0334 74696D65 		.ascii	"timeToMeasure\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 46


 2171      546F4D65 
 2171      61737572 
 2171      6500
 2172              	.LASF48:
 2173 0342 75706461 		.ascii	"updatable_parameters_t\000"
 2173      7461626C 
 2173      655F7061 
 2173      72616D65 
 2173      74657273 
 2174              	.LASF41:
 2175 0359 73696D5F 		.ascii	"sim_type\000"
 2175      74797065 
 2175      00
 2176              	.LASF56:
 2177 0362 7379735F 		.ascii	"sys_info_t\000"
 2177      696E666F 
 2177      5F7400
 2178              	.LASF3:
 2179 036d 73686F72 		.ascii	"short unsigned int\000"
 2179      7420756E 
 2179      7369676E 
 2179      65642069 
 2179      6E7400
 2180              	.LASF37:
 2181 0380 74696D65 		.ascii	"time_to_network_connect\000"
 2181      5F746F5F 
 2181      6E657477 
 2181      6F726B5F 
 2181      636F6E6E 
 2182              	.LASF21:
 2183 0398 73746174 		.ascii	"status\000"
 2183      757300
 2184              	.LASF100:
 2185 039f 53445F62 		.ascii	"SD_body\000"
 2185      6F647900 
 2186              	.LASF88:
 2187 03a7 73797374 		.ascii	"system_info\000"
 2187      656D5F69 
 2187      6E666F00 
 2188              	.LASF38:
 2189 03b3 74696D65 		.ascii	"time_to_acquire_ip\000"
 2189      5F746F5F 
 2189      61637175 
 2189      6972655F 
 2189      697000
 2190              	.LASF23:
 2191 03c6 74657374 		.ascii	"test_t\000"
 2191      5F7400
 2192              	.LASF30:
 2193 03cd 696D6569 		.ascii	"imei\000"
 2193      00
 2194              	.LASF13:
 2195 03d2 696E7433 		.ascii	"int32_t\000"
 2195      325F7400 
 2196              	.LASF39:
 2197 03da 6D6F6465 		.ascii	"modem_stats_t\000"
 2197      6D5F7374 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 47


 2197      6174735F 
 2197      7400
 2198              	.LASF47:
 2199 03e8 5F426F6F 		.ascii	"_Bool\000"
 2199      6C00
 2200              	.LASF94:
 2201 03ee 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2201      546F5379 
 2201      636E5265 
 2201      6D6F7465 
 2201      50617261 
 2202              	.LASF73:
 2203 0405 74657374 		.ascii	"test\000"
 2203      00
 2204              	.LASF35:
 2205 040a 72737271 		.ascii	"rsrq\000"
 2205      00
 2206              	.LASF105:
 2207 040f 433A5C55 		.ascii	"C:\\Users\\dantz\\Documents\\GitHub\\notoriOS\\noto"
 2207      73657273 
 2207      5C64616E 
 2207      747A5C44 
 2207      6F63756D 
 2208 043c 72694F53 		.ascii	"riOS.cydsn\000"
 2208      2E637964 
 2208      736E00
 2209              	.LASF87:
 2210 0447 68747470 		.ascii	"http_route\000"
 2210      5F726F75 
 2210      746500
 2211              	.LASF5:
 2212 0452 6C6F6E67 		.ascii	"long unsigned int\000"
 2212      20756E73 
 2212      69676E65 
 2212      6420696E 
 2212      7400
 2213              	.LASF17:
 2214 0464 696E7433 		.ascii	"int32\000"
 2214      3200
 2215              	.LASF19:
 2216 046a 646F7562 		.ascii	"double\000"
 2216      6C6500
 2217              	.LASF75:
 2218 0471 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2218      52784275 
 2218      66666572 
 2218      00
 2219              	.LASF97:
 2220 047e 616C6172 		.ascii	"alarmLevelSensor\000"
 2220      6D4C6576 
 2220      656C5365 
 2220      6E736F72 
 2220      00
 2221              	.LASF44:
 2222 048f 64656275 		.ascii	"debug_level\000"
 2222      675F6C65 
 2222      76656C00 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 48


 2223              	.LASF31:
 2224 049b 6D6F6465 		.ascii	"modem_info_t\000"
 2224      6D5F696E 
 2224      666F5F74 
 2224      00
 2225              	.LASF51:
 2226 04a8 636F756E 		.ascii	"countDownType\000"
 2226      74446F77 
 2226      6E547970 
 2226      6500
 2227              	.LASF12:
 2228 04b6 5F5F696E 		.ascii	"__int32_t\000"
 2228      7433325F 
 2228      7400
 2229              	.LASF101:
 2230 04c0 53445F66 		.ascii	"SD_filename\000"
 2230      696C656E 
 2230      616D6500 
 2231              	.LASF96:
 2232 04cc 74696D65 		.ascii	"timeToAppLED\000"
 2232      546F4170 
 2232      704C4544 
 2232      00
 2233              	.LASF70:
 2234 04d9 53445F69 		.ascii	"SD_init\000"
 2234      6E697400 
 2235              	.LASF63:
 2236 04e1 66696C65 		.ascii	"fileName\000"
 2236      4E616D65 
 2236      00
 2237              	.LASF20:
 2238 04ea 74657374 		.ascii	"test_name\000"
 2238      5F6E616D 
 2238      6500
 2239              	.LASF71:
 2240 04f4 53445F70 		.ascii	"SD_power_up\000"
 2240      6F776572 
 2240      5F757000 
 2241              	.LASF98:
 2242 0500 74696D65 		.ascii	"timetoLevelSensor\000"
 2242      746F4C65 
 2242      76656C53 
 2242      656E736F 
 2242      7200
 2243              	.LASF83:
 2244 0512 75706461 		.ascii	"updatable_parameters\000"
 2244      7461626C 
 2244      655F7061 
 2244      72616D65 
 2244      74657273 
 2245              	.LASF58:
 2246 0527 65705F70 		.ascii	"ep_port\000"
 2246      6F727400 
 2247              	.LASF25:
 2248 052f 76616C75 		.ascii	"value\000"
 2248      6500
 2249              	.LASF86:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccPzCBQ6.s 			page 49


 2250 0535 68747470 		.ascii	"http_body\000"
 2250      5F626F64 
 2250      7900
 2251              	.LASF40:
 2252 053f 6E6F6465 		.ascii	"node_type\000"
 2252      5F747970 
 2252      6500
 2253              	.LASF61:
 2254 0549 53445F72 		.ascii	"SD_rmfile\000"
 2254      6D66696C 
 2254      6500
 2255              	.LASF85:
 2256 0553 68747470 		.ascii	"http_request\000"
 2256      5F726571 
 2256      75657374 
 2256      00
 2257              	.LASF93:
 2258 0560 74696D65 		.ascii	"timeToSync\000"
 2258      546F5379 
 2258      6E6300
 2259              	.LASF52:
 2260 056b 636F756E 		.ascii	"countDownResetCondition\000"
 2260      74446F77 
 2260      6E526573 
 2260      6574436F 
 2260      6E646974 
 2261              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
