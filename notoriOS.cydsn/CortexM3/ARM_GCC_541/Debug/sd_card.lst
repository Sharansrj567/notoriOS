ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"sd_card.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	level_sensor_inbox,100,4
  20              		.comm	level_sensor_enabled,1,1
  21              		.comm	downstream_level_sensor_inbox,100,4
  22              		.comm	downstream_level_sensor_enabled,1,1
  23              		.comm	buffer_overflow,1,1
  24              		.comm	dataPointsInStack,2,2
  25              		.comm	dataPointsInStackDesired,2,2
  26              		.comm	data,6600,4
  27              		.comm	modem_state,1,1
  28              		.comm	modem_start_time_stamp,4,4
  29              		.comm	modem_info,60,4
  30              		.comm	modem_stats,32,4
  31              		.comm	updatable_parameters,8,4
  32              		.syntax unified
  33              		.global _printf_float
  34              		.thumb
  35              		.syntax unified
  36              		.comm	App_LED_enabled,1,1
  37              		.comm	app_led_inbox,100,4
  38              		.comm	http_request,10000,4
  39              		.comm	http_body,10000,4
  40              		.comm	http_route,200,4
  41              		.comm	system_info,28,4
  42              		.comm	system_settings,104,4
  43              		.comm	alarmMeasure,6,4
  44              		.comm	timeToMeasure,1,1
  45              		.comm	alarmSync,6,4
  46              		.comm	timeToSync,1,1
  47              		.comm	timeToSycnRemoteParams,1,1
  48              		.comm	hey,1,1
  49              		.comm	alarmAppLED,6,4
  50              		.comm	timeToAppLED,1,1
  51              		.comm	alarmLevelSensor,6,4
  52              		.comm	timetoLevelSensor,1,1
  53              		.comm	alarmDownstreamLevelSensor,6,4
  54              		.comm	timetoDownstreamLevelSensor,1,1
  55              		.global	SD_dir
  56              		.bss
  57              		.align	2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 2


  58              		.type	SD_dir, %object
  59              		.size	SD_dir, 10
  60              	SD_dir:
  61 0000 00000000 		.space	10
  61      00000000 
  61      0000
  62              		.global	SD_body
  63 000a 0000     		.align	2
  64              		.type	SD_body, %object
  65              		.size	SD_body, 3000
  66              	SD_body:
  67 000c 00000000 		.space	3000
  67      00000000 
  67      00000000 
  67      00000000 
  67      00000000 
  68              		.global	SD_filename
  69              		.data
  70              		.align	2
  71              		.type	SD_filename, %object
  72              		.size	SD_filename, 30
  73              	SD_filename:
  74 0000 46696C65 		.ascii	"Filename.txt\000"
  74      6E616D65 
  74      2E747874 
  74      00
  75 000d 00000000 		.space	17
  75      00000000 
  75      00000000 
  75      00000000 
  75      00
  76              		.global	SD_filemode
  77 001e 0000     		.align	2
  78              		.type	SD_filemode, %object
  79              		.size	SD_filemode, 5
  80              	SD_filemode:
  81 0020 612B00   		.ascii	"a+\000"
  82 0023 0000     		.space	2
  83              		.section	.text.SD_init,"ax",%progbits
  84              		.align	2
  85              		.global	SD_init
  86              		.thumb
  87              		.thumb_func
  88              		.type	SD_init, %function
  89              	SD_init:
  90              	.LFB64:
  91              		.file 1 "sd_card.c"
   1:sd_card.c     **** /**
   2:sd_card.c     ****  * @file sdcard.c
   3:sd_card.c     ****  * @brief  Write to an SD card.
   4:sd_card.c     ****  * @author Brandon Wong
   5:sd_card.c     ****  * @version 0.0.01
   6:sd_card.c     ****  * @date 2019-05-15
   7:sd_card.c     ****  */
   8:sd_card.c     **** 
   9:sd_card.c     **** #include "sd_card.h"
  10:sd_card.c     **** #include "notoriOS.h"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 3


  11:sd_card.c     **** 
  12:sd_card.c     **** // Preallocate card
  13:sd_card.c     **** char    SD_dir[10]      = {'\0'};
  14:sd_card.c     **** char    SD_body[3000]   = {'\0'};
  15:sd_card.c     **** char    SD_filename[30] = "Filename.txt";
  16:sd_card.c     **** char    SD_filemode[5]  = "a+";
  17:sd_card.c     **** 
  18:sd_card.c     **** 
  19:sd_card.c     **** void SD_power_up();
  20:sd_card.c     **** void SD_power_down();
  21:sd_card.c     **** 
  22:sd_card.c     **** ///NOTE -- IF SD CARD is not plugged it, the board will draw more power.
  23:sd_card.c     **** 
  24:sd_card.c     **** 
  25:sd_card.c     **** /** SD_init()
  26:sd_card.c     **** * @brief Initialize the file system for the SD card
  27:sd_card.c     **** * @param Null
  28:sd_card.c     **** * @return void
  29:sd_card.c     **** */
  30:sd_card.c     **** void SD_init()
  31:sd_card.c     **** {
  92              		.loc 1 31 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97 0000 80B4     		push	{r7}
  98              		.cfi_def_cfa_offset 4
  99              		.cfi_offset 7, -4
 100 0002 00AF     		add	r7, sp, #0
 101              		.cfi_def_cfa_register 7
  32:sd_card.c     ****     /* Uncomment to enable support for long file names
  33:sd_card.c     ****      * Note: To use long file names (LFN) support on PSoC 5LP devices, you must call
  34:sd_card.c     ****      * FS_FAT_SupportLFN(). For PSoC 3 devices, this feature is enabled by default.
  35:sd_card.c     ****      */
  36:sd_card.c     ****     //FS_FAT_SupportLFN();    
  37:sd_card.c     **** }
 102              		.loc 1 37 0
 103 0004 00BF     		nop
 104 0006 BD46     		mov	sp, r7
 105              		.cfi_def_cfa_register 13
 106              		@ sp needed
 107 0008 80BC     		pop	{r7}
 108              		.cfi_restore 7
 109              		.cfi_def_cfa_offset 0
 110 000a 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE64:
 113              		.size	SD_init, .-SD_init
 114              		.section	.rodata
 115              		.align	2
 116              	.LC0:
 117 0000 252E3873 		.ascii	"%.8s\000"
 117      00
 118              		.section	.text.SD_mkdir,"ax",%progbits
 119              		.align	2
 120              		.global	SD_mkdir
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 4


 121              		.thumb
 122              		.thumb_func
 123              		.type	SD_mkdir, %function
 124              	SD_mkdir:
 125              	.LFB65:
  38:sd_card.c     **** 
  39:sd_card.c     **** /**
  40:sd_card.c     ****  * @brief Make a directory on the SD card
  41:sd_card.c     ****  * @param dir_name is the name of the directory to create
  42:sd_card.c     ****  * @return 1u on success, 0u otherwise
  43:sd_card.c     ****  */
  44:sd_card.c     **** uint8 SD_mkdir(char* dir_name)
  45:sd_card.c     **** {
 126              		.loc 1 45 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 16
 129              		@ frame_needed = 1, uses_anonymous_args = 0
 130 0000 80B5     		push	{r7, lr}
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 7, -8
 133              		.cfi_offset 14, -4
 134 0002 84B0     		sub	sp, sp, #16
 135              		.cfi_def_cfa_offset 24
 136 0004 00AF     		add	r7, sp, #0
 137              		.cfi_def_cfa_register 7
 138 0006 7860     		str	r0, [r7, #4]
  46:sd_card.c     ****     uint8 status = 9; // Initialize to a value not 0 or -1
 139              		.loc 1 46 0
 140 0008 0923     		movs	r3, #9
 141 000a FB73     		strb	r3, [r7, #15]
  47:sd_card.c     ****     
  48:sd_card.c     ****     SD_power_up(); // Wakeup the SD Card component
 142              		.loc 1 48 0
 143 000c FFF7FEFF 		bl	SD_power_up
  49:sd_card.c     ****     // The snprintf() function formats and stores a series of characters and values in the array bu
  50:sd_card.c     ****     snprintf(SD_dir,sizeof(SD_dir),"%.8s",dir_name); 
 144              		.loc 1 50 0
 145 0010 7B68     		ldr	r3, [r7, #4]
 146 0012 094A     		ldr	r2, .L4
 147 0014 0A21     		movs	r1, #10
 148 0016 0948     		ldr	r0, .L4+4
 149 0018 FFF7FEFF 		bl	snprintf
  51:sd_card.c     ****     
  52:sd_card.c     ****     // FS_MKDir() creates a directory using FS.h.
  53:sd_card.c     ****     // Typecasting (1+FS_MkDir(SD_dir)) into an uint8 datatype
  54:sd_card.c     ****     // This makes it 0 if it's a failture, 1 if it's successful
  55:sd_card.c     ****     status = (uint8) ( 1+FS_MkDir(SD_dir) );
 150              		.loc 1 55 0
 151 001c 0748     		ldr	r0, .L4+4
 152 001e FFF7FEFF 		bl	FS_MkDir
 153 0022 0346     		mov	r3, r0
 154 0024 DBB2     		uxtb	r3, r3
 155 0026 0133     		adds	r3, r3, #1
 156 0028 FB73     		strb	r3, [r7, #15]
  56:sd_card.c     ****     
  57:sd_card.c     ****     SD_power_down(); // Turn off the SD Card
 157              		.loc 1 57 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 5


 158 002a FFF7FEFF 		bl	SD_power_down
  58:sd_card.c     ****     
  59:sd_card.c     ****     return status;
 159              		.loc 1 59 0
 160 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  60:sd_card.c     **** }
 161              		.loc 1 60 0
 162 0030 1846     		mov	r0, r3
 163 0032 1037     		adds	r7, r7, #16
 164              		.cfi_def_cfa_offset 8
 165 0034 BD46     		mov	sp, r7
 166              		.cfi_def_cfa_register 13
 167              		@ sp needed
 168 0036 80BD     		pop	{r7, pc}
 169              	.L5:
 170              		.align	2
 171              	.L4:
 172 0038 00000000 		.word	.LC0
 173 003c 00000000 		.word	SD_dir
 174              		.cfi_endproc
 175              	.LFE65:
 176              		.size	SD_mkdir, .-SD_mkdir
 177              		.section	.text.SD_rmfile,"ax",%progbits
 178              		.align	2
 179              		.global	SD_rmfile
 180              		.thumb
 181              		.thumb_func
 182              		.type	SD_rmfile, %function
 183              	SD_rmfile:
 184              	.LFB66:
  61:sd_card.c     **** 
  62:sd_card.c     **** /**
  63:sd_card.c     ****  * @brief Delete a file
  64:sd_card.c     ****  * @param dir_name is the name of the directory to create
  65:sd_card.c     ****  * @return 1u on success, 0u otherwise
  66:sd_card.c     ****  */
  67:sd_card.c     **** uint8 SD_rmfile(const char * fileName)
  68:sd_card.c     **** {
 185              		.loc 1 68 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 16
 188              		@ frame_needed = 1, uses_anonymous_args = 0
 189 0000 80B5     		push	{r7, lr}
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 7, -8
 192              		.cfi_offset 14, -4
 193 0002 84B0     		sub	sp, sp, #16
 194              		.cfi_def_cfa_offset 24
 195 0004 00AF     		add	r7, sp, #0
 196              		.cfi_def_cfa_register 7
 197 0006 7860     		str	r0, [r7, #4]
  69:sd_card.c     ****     uint8 status = 9; // initialize to a value not 0 or -1
 198              		.loc 1 69 0
 199 0008 0923     		movs	r3, #9
 200 000a FB73     		strb	r3, [r7, #15]
  70:sd_card.c     **** 
  71:sd_card.c     ****     SD_power_up(); // Wakeup the SD Card component
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 6


 201              		.loc 1 71 0
 202 000c FFF7FEFF 		bl	SD_power_up
  72:sd_card.c     ****     
  73:sd_card.c     ****     // FS_Remove() removes a file using FS.h.
  74:sd_card.c     ****     // Typecasting (1+FS_Remove(fileName)) into an uint8 datatype
  75:sd_card.c     ****     // This makes it 0 if it's a failture, 1 if it's successful
  76:sd_card.c     ****     status = (uint8) ( 1+FS_Remove(fileName));
 203              		.loc 1 76 0
 204 0010 7868     		ldr	r0, [r7, #4]
 205 0012 FFF7FEFF 		bl	FS_Remove
 206 0016 0346     		mov	r3, r0
 207 0018 DBB2     		uxtb	r3, r3
 208 001a 0133     		adds	r3, r3, #1
 209 001c FB73     		strb	r3, [r7, #15]
  77:sd_card.c     ****     
  78:sd_card.c     ****     SD_power_down(); // Turn off the SD Card
 210              		.loc 1 78 0
 211 001e FFF7FEFF 		bl	SD_power_down
  79:sd_card.c     ****     
  80:sd_card.c     ****     return status;
 212              		.loc 1 80 0
 213 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  81:sd_card.c     **** }
 214              		.loc 1 81 0
 215 0024 1846     		mov	r0, r3
 216 0026 1037     		adds	r7, r7, #16
 217              		.cfi_def_cfa_offset 8
 218 0028 BD46     		mov	sp, r7
 219              		.cfi_def_cfa_register 13
 220              		@ sp needed
 221 002a 80BD     		pop	{r7, pc}
 222              		.cfi_endproc
 223              	.LFE66:
 224              		.size	SD_rmfile, .-SD_rmfile
 225              		.section	.text.SD_write,"ax",%progbits
 226              		.align	2
 227              		.global	SD_write
 228              		.thumb
 229              		.thumb_func
 230              		.type	SD_write, %function
 231              	SD_write:
 232              	.LFB67:
  82:sd_card.c     **** 
  83:sd_card.c     **** /**
  84:sd_card.c     ****  * @brief Write data to the SD card
  85:sd_card.c     ****  * @param fileName is the name of the file to write to
  86:sd_card.c     ****  * @param pMode is the write mode
  87:sd_card.c     ****  * @param pData is the data to be written
  88:sd_card.c     ****  * @return 1u on success, 0u otherwise
  89:sd_card.c     ****  */
  90:sd_card.c     **** uint8 SD_write(const char * fileName, const char * pMode, const void * pData)
  91:sd_card.c     **** {
 233              		.loc 1 91 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 24
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 7


 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 7, -8
 240              		.cfi_offset 14, -4
 241 0002 86B0     		sub	sp, sp, #24
 242              		.cfi_def_cfa_offset 32
 243 0004 00AF     		add	r7, sp, #0
 244              		.cfi_def_cfa_register 7
 245 0006 F860     		str	r0, [r7, #12]
 246 0008 B960     		str	r1, [r7, #8]
 247 000a 7A60     		str	r2, [r7, #4]
  92:sd_card.c     ****     uint8 status = 9u; // Initialize to a value not 0 or 1
 248              		.loc 1 92 0
 249 000c 0923     		movs	r3, #9
 250 000e FB75     		strb	r3, [r7, #23]
  93:sd_card.c     ****     FS_FILE *pFile; // FS_FILE data structure defined in FS.h
  94:sd_card.c     **** 
  95:sd_card.c     ****     SD_power_up(); // Wakeup the SD Card component
 251              		.loc 1 95 0
 252 0010 FFF7FEFF 		bl	SD_power_up
  96:sd_card.c     ****     
  97:sd_card.c     ****     // FS_FOpen() opens an existing file or creates a new one.
  98:sd_card.c     ****     // fileName is the file to be opened or created. It's a 0-termianted string that cannot be NULL
  99:sd_card.c     ****     // pMode indicates how the file should be opened. It's a 0-terminated string that cannot be NUL
 100:sd_card.c     ****     pFile = FS_FOpen(fileName, pMode);
 253              		.loc 1 100 0
 254 0014 B968     		ldr	r1, [r7, #8]
 255 0016 F868     		ldr	r0, [r7, #12]
 256 0018 FFF7FEFF 		bl	FS_FOpen
 257 001c 3861     		str	r0, [r7, #16]
 101:sd_card.c     ****     
 102:sd_card.c     ****     // If the SD card doesn't open, try reinitializing the filesystem
 103:sd_card.c     ****     if (pFile == 0){
 258              		.loc 1 103 0
 259 001e 3B69     		ldr	r3, [r7, #16]
 260 0020 002B     		cmp	r3, #0
 261 0022 08D1     		bne	.L9
 104:sd_card.c     ****         FS_DeInit(); // FS_DeInit() frees allocated resources
 262              		.loc 1 104 0
 263 0024 FFF7FEFF 		bl	FS_DeInit
 105:sd_card.c     ****         FS_Init(); // FS_Init() starts the file system
 264              		.loc 1 105 0
 265 0028 FFF7FEFF 		bl	FS_Init
 106:sd_card.c     ****         pFile = FS_FOpen(fileName, pMode);
 266              		.loc 1 106 0
 267 002c B968     		ldr	r1, [r7, #8]
 268 002e F868     		ldr	r0, [r7, #12]
 269 0030 FFF7FEFF 		bl	FS_FOpen
 270 0034 3861     		str	r0, [r7, #16]
 271              	.L9:
 107:sd_card.c     ****     }
 108:sd_card.c     ****     
 109:sd_card.c     ****     // Note: We are using the "No Long File Name (LFN)" library,
 110:sd_card.c     ****     //  so names are limited to 8 characters and 3 bytes for extensions
 111:sd_card.c     ****     if (pFile != 0) {
 272              		.loc 1 111 0
 273 0036 3B69     		ldr	r3, [r7, #16]
 274 0038 002B     		cmp	r3, #0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 8


 275 003a 10D0     		beq	.L10
 112:sd_card.c     ****         // FS_Write() writes data to file: pFile is handle to open file, pData is data to be writte
 113:sd_card.c     ****         FS_Write(pFile, pData, strlen(pData));
 276              		.loc 1 113 0
 277 003c 7868     		ldr	r0, [r7, #4]
 278 003e FFF7FEFF 		bl	strlen
 279 0042 0346     		mov	r3, r0
 280 0044 1A46     		mov	r2, r3
 281 0046 7968     		ldr	r1, [r7, #4]
 282 0048 3869     		ldr	r0, [r7, #16]
 283 004a FFF7FEFF 		bl	FS_Write
 114:sd_card.c     ****         
 115:sd_card.c     ****         // FS_FClose() closes an opened file using FS.h. It returns 1 if there's a failure, 0 if su
 116:sd_card.c     ****         // Typecasting (1+FS_FClose(pFile)) into an uint8 datatype
 117:sd_card.c     ****         // This makes it 0 if it's a failture, 1 if it's successful
 118:sd_card.c     ****         status = (uint8) ( -1*FS_FClose(pFile) )+1;
 284              		.loc 1 118 0
 285 004e 3869     		ldr	r0, [r7, #16]
 286 0050 FFF7FEFF 		bl	FS_FClose
 287 0054 0346     		mov	r3, r0
 288 0056 DBB2     		uxtb	r3, r3
 289 0058 C3F10103 		rsb	r3, r3, #1
 290 005c FB75     		strb	r3, [r7, #23]
 291              	.L10:
 119:sd_card.c     ****     }
 120:sd_card.c     ****     
 121:sd_card.c     ****     SD_power_down(); // Turn off the SD Card
 292              		.loc 1 121 0
 293 005e FFF7FEFF 		bl	SD_power_down
 122:sd_card.c     **** 
 123:sd_card.c     ****     
 124:sd_card.c     ****     return status;
 294              		.loc 1 124 0
 295 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 125:sd_card.c     **** }
 296              		.loc 1 125 0
 297 0064 1846     		mov	r0, r3
 298 0066 1837     		adds	r7, r7, #24
 299              		.cfi_def_cfa_offset 8
 300 0068 BD46     		mov	sp, r7
 301              		.cfi_def_cfa_register 13
 302              		@ sp needed
 303 006a 80BD     		pop	{r7, pc}
 304              		.cfi_endproc
 305              	.LFE67:
 306              		.size	SD_write, .-SD_write
 307              		.section	.rodata
 308 0005 000000   		.align	2
 309              	.LC1:
 310 0008 7200     		.ascii	"r\000"
 311              		.section	.text.SD_read,"ax",%progbits
 312              		.align	2
 313              		.global	SD_read
 314              		.thumb
 315              		.thumb_func
 316              		.type	SD_read, %function
 317              	SD_read:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 9


 318              	.LFB68:
 126:sd_card.c     **** 
 127:sd_card.c     **** /**
 128:sd_card.c     ****  * @brief Write data to the SD card
 129:sd_card.c     ****  * @param fileName is the name of the file to write to
 130:sd_card.c     ****  * @param pMode is the write mode
 131:sd_card.c     ****  * @param pData is the data to be written
 132:sd_card.c     ****  * @return 1u on success, 0u otherwise
 133:sd_card.c     ****  */
 134:sd_card.c     **** uint8 SD_read(const char * fileName,  void * pData, unsigned long NumBytes)
 135:sd_card.c     **** {
 319              		.loc 1 135 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 24
 322              		@ frame_needed = 1, uses_anonymous_args = 0
 323 0000 80B5     		push	{r7, lr}
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 7, -8
 326              		.cfi_offset 14, -4
 327 0002 86B0     		sub	sp, sp, #24
 328              		.cfi_def_cfa_offset 32
 329 0004 00AF     		add	r7, sp, #0
 330              		.cfi_def_cfa_register 7
 331 0006 F860     		str	r0, [r7, #12]
 332 0008 B960     		str	r1, [r7, #8]
 333 000a 7A60     		str	r2, [r7, #4]
 136:sd_card.c     ****     uint8 status = 9u; // initialize to a value not 0 or 1
 334              		.loc 1 136 0
 335 000c 0923     		movs	r3, #9
 336 000e FB75     		strb	r3, [r7, #23]
 137:sd_card.c     ****     FS_FILE *pFile; // FS_FILE data structure defined in FS.h
 138:sd_card.c     **** 
 139:sd_card.c     ****     SD_power_up(); // Powerup the SD Card component
 337              		.loc 1 139 0
 338 0010 FFF7FEFF 		bl	SD_power_up
 140:sd_card.c     ****     
 141:sd_card.c     ****     // FS_FOpen() opens an existing file or creates a new one.
 142:sd_card.c     ****     // fileName is the file to be opened or created. It's a 0-terminated string that cannot be NULL
 143:sd_card.c     ****     // "r" indicates how the file should be opened, in this case, for reading.
 144:sd_card.c     ****     pFile = FS_FOpen(fileName, "r");
 339              		.loc 1 144 0
 340 0014 1349     		ldr	r1, .L16
 341 0016 F868     		ldr	r0, [r7, #12]
 342 0018 FFF7FEFF 		bl	FS_FOpen
 343 001c 3861     		str	r0, [r7, #16]
 145:sd_card.c     ****     
 146:sd_card.c     ****     // If the SD card doesn't open, try reinitializing the filesystem
 147:sd_card.c     ****     if (pFile == 0){
 344              		.loc 1 147 0
 345 001e 3B69     		ldr	r3, [r7, #16]
 346 0020 002B     		cmp	r3, #0
 347 0022 08D1     		bne	.L13
 148:sd_card.c     ****         FS_DeInit();// FS_DeInit() frees allocated resources
 348              		.loc 1 148 0
 349 0024 FFF7FEFF 		bl	FS_DeInit
 149:sd_card.c     ****         FS_Init(); // FS_Init() starts the file system
 350              		.loc 1 149 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 10


 351 0028 FFF7FEFF 		bl	FS_Init
 150:sd_card.c     ****         pFile = FS_FOpen(fileName, "r");
 352              		.loc 1 150 0
 353 002c 0D49     		ldr	r1, .L16
 354 002e F868     		ldr	r0, [r7, #12]
 355 0030 FFF7FEFF 		bl	FS_FOpen
 356 0034 3861     		str	r0, [r7, #16]
 357              	.L13:
 151:sd_card.c     ****     }
 152:sd_card.c     ****     
 153:sd_card.c     ****     // Note: We are using the "No Long File Name (LFN)" library,
 154:sd_card.c     ****     //  so names are limited to 8 characters and 3 bytes for extensions
 155:sd_card.c     ****     if (pFile != 0) {
 358              		.loc 1 155 0
 359 0036 3B69     		ldr	r3, [r7, #16]
 360 0038 002B     		cmp	r3, #0
 361 003a 0CD0     		beq	.L14
 156:sd_card.c     ****         // FS_Read() reads data from a file: pFile is handle to an opened file, pData is the buffer
 157:sd_card.c     ****         FS_Read(pFile,pData,NumBytes);
 362              		.loc 1 157 0
 363 003c 7A68     		ldr	r2, [r7, #4]
 364 003e B968     		ldr	r1, [r7, #8]
 365 0040 3869     		ldr	r0, [r7, #16]
 366 0042 FFF7FEFF 		bl	FS_Read
 158:sd_card.c     ****         
 159:sd_card.c     ****         // FS_FClose() closes an opened file using FS.h. It returns 1 if there's a failure, 0 if su
 160:sd_card.c     ****         // Typecasting (1+FS_FClose(pFile)) into an uint8 datatype
 161:sd_card.c     ****         // This makes it 0 if it's a failture, 1 if it's successful
 162:sd_card.c     ****         status = (uint8) ( -1*FS_FClose(pFile) )+1;
 367              		.loc 1 162 0
 368 0046 3869     		ldr	r0, [r7, #16]
 369 0048 FFF7FEFF 		bl	FS_FClose
 370 004c 0346     		mov	r3, r0
 371 004e DBB2     		uxtb	r3, r3
 372 0050 C3F10103 		rsb	r3, r3, #1
 373 0054 FB75     		strb	r3, [r7, #23]
 374              	.L14:
 163:sd_card.c     ****     }
 164:sd_card.c     ****     
 165:sd_card.c     ****     SD_power_down(); // Power down the SD card
 375              		.loc 1 165 0
 376 0056 FFF7FEFF 		bl	SD_power_down
 166:sd_card.c     ****     
 167:sd_card.c     ****     return status;
 377              		.loc 1 167 0
 378 005a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 168:sd_card.c     **** }
 379              		.loc 1 168 0
 380 005c 1846     		mov	r0, r3
 381 005e 1837     		adds	r7, r7, #24
 382              		.cfi_def_cfa_offset 8
 383 0060 BD46     		mov	sp, r7
 384              		.cfi_def_cfa_register 13
 385              		@ sp needed
 386 0062 80BD     		pop	{r7, pc}
 387              	.L17:
 388              		.align	2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 11


 389              	.L16:
 390 0064 08000000 		.word	.LC1
 391              		.cfi_endproc
 392              	.LFE68:
 393              		.size	SD_read, .-SD_read
 394              		.section	.text.SD_power_up,"ax",%progbits
 395              		.align	2
 396              		.global	SD_power_up
 397              		.thumb
 398              		.thumb_func
 399              		.type	SD_power_up, %function
 400              	SD_power_up:
 401              	.LFB69:
 169:sd_card.c     **** 
 170:sd_card.c     **** // Power up SD Card
 171:sd_card.c     **** void SD_power_up(){
 402              		.loc 1 171 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 1, uses_anonymous_args = 0
 406 0000 80B5     		push	{r7, lr}
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 7, -8
 409              		.cfi_offset 14, -4
 410 0002 00AF     		add	r7, sp, #0
 411              		.cfi_def_cfa_register 7
 172:sd_card.c     **** 
 173:sd_card.c     ****     emFile_Wakeup(); // Prepare SPIM Components to wake up.
 412              		.loc 1 173 0
 413 0004 FFF7FEFF 		bl	emFile_Wakeup
 174:sd_card.c     ****     
 175:sd_card.c     ****     SD_Card_Power_Write(ON); // Turn on the SD Card (pulls it high).
 414              		.loc 1 175 0
 415 0008 0120     		movs	r0, #1
 416 000a FFF7FEFF 		bl	SD_Card_Power_Write
 176:sd_card.c     ****     FS_Init(); // FS_Init() starts the file system
 417              		.loc 1 176 0
 418 000e FFF7FEFF 		bl	FS_Init
 177:sd_card.c     **** }
 419              		.loc 1 177 0
 420 0012 00BF     		nop
 421 0014 80BD     		pop	{r7, pc}
 422              		.cfi_endproc
 423              	.LFE69:
 424              		.size	SD_power_up, .-SD_power_up
 425 0016 00BF     		.section	.text.SD_power_down,"ax",%progbits
 426              		.align	2
 427              		.global	SD_power_down
 428              		.thumb
 429              		.thumb_func
 430              		.type	SD_power_down, %function
 431              	SD_power_down:
 432              	.LFB70:
 178:sd_card.c     **** 
 179:sd_card.c     **** // Power down SD Card
 180:sd_card.c     **** void SD_power_down(){
 433              		.loc 1 180 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 12


 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 1, uses_anonymous_args = 0
 437 0000 80B5     		push	{r7, lr}
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 7, -8
 440              		.cfi_offset 14, -4
 441 0002 00AF     		add	r7, sp, #0
 442              		.cfi_def_cfa_register 7
 181:sd_card.c     ****     
 182:sd_card.c     ****     SD_Card_Power_Write(OFF);  // Turn off the SD Card (pulls it low). 
 443              		.loc 1 182 0
 444 0004 0020     		movs	r0, #0
 445 0006 FFF7FEFF 		bl	SD_Card_Power_Write
 183:sd_card.c     ****     emFile_Sleep(); // emFIle_Sleep() prepare emFile to go to sleep.
 446              		.loc 1 183 0
 447 000a FFF7FEFF 		bl	emFile_Sleep
 184:sd_card.c     ****     FS_DeInit(); // FS_DeInit() frees allocated resources
 448              		.loc 1 184 0
 449 000e FFF7FEFF 		bl	FS_DeInit
 185:sd_card.c     ****     
 186:sd_card.c     ****     emFile_miso0_Write(OFF); // emFile_miso0_Write(): Assigns a new value to the digital port's dat
 450              		.loc 1 186 0
 451 0012 0020     		movs	r0, #0
 452 0014 FFF7FEFF 		bl	emFile_miso0_Write
 187:sd_card.c     ****     emFile_mosi0_Write(OFF); // emFile_mosi0_Write(): Assigns a new value to the digital port's dat
 453              		.loc 1 187 0
 454 0018 0020     		movs	r0, #0
 455 001a FFF7FEFF 		bl	emFile_mosi0_Write
 188:sd_card.c     ****     emFile_sclk0_Write(OFF); // emFile_sclk0_Write(): Assigns a new value to the digital port's dat
 456              		.loc 1 188 0
 457 001e 0020     		movs	r0, #0
 458 0020 FFF7FEFF 		bl	emFile_sclk0_Write
 189:sd_card.c     ****     emFile_SPI0_CS_Write(OFF); // emFile_SPIO_CS_Write(): Assigns a new value to the digital port's
 459              		.loc 1 189 0
 460 0024 0020     		movs	r0, #0
 461 0026 FFF7FEFF 		bl	emFile_SPI0_CS_Write
 190:sd_card.c     ****     // SD_Chip_Detect_Write(OFF);
 191:sd_card.c     **** }
 462              		.loc 1 191 0
 463 002a 00BF     		nop
 464 002c 80BD     		pop	{r7, pc}
 465              		.cfi_endproc
 466              	.LFE70:
 467              		.size	SD_power_down, .-SD_power_down
 468 002e 00BF     		.section	.rodata
 469 000a 0000     		.align	2
 470              	.LC2:
 471 000c 54455354 		.ascii	"TEST_SD_CARD\000"
 471      5F53445F 
 471      43415244 
 471      00
 472 0019 000000   		.align	2
 473              	.LC5:
 474 001c 54455354 		.ascii	"TEST_PASS\000"
 474      5F504153 
 474      5300
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 13


 475 0026 0000     		.align	2
 476              	.LC6:
 477 0028 7700     		.ascii	"w\000"
 478 002a 0000     		.align	2
 479              	.LC7:
 480 002c 53554343 		.ascii	"SUCCESS WRITE READ DELETE FILE\000"
 480      45535320 
 480      57524954 
 480      45205245 
 480      41442044 
 481 004b 00       		.align	2
 482              	.LC8:
 483 004c 4641494C 		.ascii	"FAILED TO WRITE READ DELETE FILE\000"
 483      45442054 
 483      4F205752 
 483      49544520 
 483      52454144 
 484 006d 000000   		.align	2
 485              	.LC3:
 486 0070 54455354 		.ascii	"TEST_FAIL\000"
 486      5F464149 
 486      4C00
 487 007a 0000     		.align	2
 488              	.LC4:
 489 007c 74657374 		.ascii	"test.txt\000"
 489      2E747874 
 489      00
 490              		.section	.text.SD_card_test,"ax",%progbits
 491              		.align	2
 492              		.global	SD_card_test
 493              		.thumb
 494              		.thumb_func
 495              		.type	SD_card_test, %function
 496              	SD_card_test:
 497              	.LFB71:
 192:sd_card.c     **** 
 193:sd_card.c     **** // Testing the SD Card - create a  file, write random number, read number from file, delete directo
 194:sd_card.c     **** test_t SD_card_test(){
 498              		.loc 1 194 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 424
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 503              		.cfi_def_cfa_offset 20
 504              		.cfi_offset 4, -20
 505              		.cfi_offset 5, -16
 506              		.cfi_offset 6, -12
 507              		.cfi_offset 7, -8
 508              		.cfi_offset 14, -4
 509 0002 EBB0     		sub	sp, sp, #428
 510              		.cfi_def_cfa_offset 448
 511 0004 00AF     		add	r7, sp, #0
 512              		.cfi_def_cfa_register 7
 513 0006 3B1D     		adds	r3, r7, #4
 514 0008 1860     		str	r0, [r3]
 195:sd_card.c     ****     
 196:sd_card.c     ****     // test_t is a new data type we defined in test.h. We then use that data type to define a struc
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 14


 197:sd_card.c     ****     test_t test;
 198:sd_card.c     ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_SD_CARD");
 515              		.loc 1 198 0
 516 000a 07F12403 		add	r3, r7, #36
 517 000e 3D4A     		ldr	r2, .L25
 518 0010 1C46     		mov	r4, r3
 519 0012 1346     		mov	r3, r2
 520 0014 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 521 0016 07C4     		stmia	r4!, {r0, r1, r2}
 522 0018 2370     		strb	r3, [r4]
 199:sd_card.c     ****     test.status = 0;
 523              		.loc 1 199 0
 524 001a 07F12403 		add	r3, r7, #36
 525 001e 0022     		movs	r2, #0
 526 0020 83F88020 		strb	r2, [r3, #128]
 200:sd_card.c     ****     
 201:sd_card.c     ****     char data[] = "TEST_FAIL";
 527              		.loc 1 201 0
 528 0024 07F11803 		add	r3, r7, #24
 529 0028 374A     		ldr	r2, .L25+4
 530 002a 07CA     		ldmia	r2, {r0, r1, r2}
 531 002c 03C3     		stmia	r3!, {r0, r1}
 532 002e 1A80     		strh	r2, [r3]	@ movhi
 202:sd_card.c     ****     char fileName[] = "test.txt";
 533              		.loc 1 202 0
 534 0030 07F10C03 		add	r3, r7, #12
 535 0034 354A     		ldr	r2, .L25+8
 536 0036 07CA     		ldmia	r2, {r0, r1, r2}
 537 0038 03C3     		stmia	r3!, {r0, r1}
 538 003a 1A70     		strb	r2, [r3]
 203:sd_card.c     ****     
 204:sd_card.c     ****     SD_rmfile(fileName); // Remove file from SD Card
 539              		.loc 1 204 0
 540 003c 07F10C03 		add	r3, r7, #12
 541 0040 1846     		mov	r0, r3
 542 0042 FFF7FEFF 		bl	SD_rmfile
 205:sd_card.c     ****     SD_write(fileName,"w","TEST_PASS"); // Write data to SD Card
 543              		.loc 1 205 0
 544 0046 07F10C03 		add	r3, r7, #12
 545 004a 314A     		ldr	r2, .L25+12
 546 004c 3149     		ldr	r1, .L25+16
 547 004e 1846     		mov	r0, r3
 548 0050 FFF7FEFF 		bl	SD_write
 206:sd_card.c     ****     SD_read(fileName,data,sizeof(data)); // Read data from the SD card
 549              		.loc 1 206 0
 550 0054 07F11801 		add	r1, r7, #24
 551 0058 07F10C03 		add	r3, r7, #12
 552 005c 0A22     		movs	r2, #10
 553 005e 1846     		mov	r0, r3
 554 0060 FFF7FEFF 		bl	SD_read
 207:sd_card.c     ****     test.status = SD_rmfile(fileName);
 555              		.loc 1 207 0
 556 0064 07F10C03 		add	r3, r7, #12
 557 0068 1846     		mov	r0, r3
 558 006a FFF7FEFF 		bl	SD_rmfile
 559 006e 0346     		mov	r3, r0
 560 0070 1A46     		mov	r2, r3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 15


 561 0072 07F12403 		add	r3, r7, #36
 562 0076 83F88020 		strb	r2, [r3, #128]
 208:sd_card.c     ****     
 209:sd_card.c     ****     if(test.status == 1){
 563              		.loc 1 209 0
 564 007a 07F12403 		add	r3, r7, #36
 565 007e 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 566 0082 012B     		cmp	r3, #1
 567 0084 14D1     		bne	.L21
 210:sd_card.c     ****         snprintf(test.reason,sizeof(test.reason),"SUCCESS WRITE READ DELETE FILE");
 568              		.loc 1 210 0
 569 0086 07F12403 		add	r3, r7, #36
 570 008a 8133     		adds	r3, r3, #129
 571 008c 224A     		ldr	r2, .L25+20
 572 008e 1D46     		mov	r5, r3
 573 0090 1446     		mov	r4, r2
 574 0092 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 575 0094 2860     		str	r0, [r5]	@ unaligned
 576 0096 6960     		str	r1, [r5, #4]	@ unaligned
 577 0098 AA60     		str	r2, [r5, #8]	@ unaligned
 578 009a EB60     		str	r3, [r5, #12]	@ unaligned
 579 009c 07CC     		ldmia	r4!, {r0, r1, r2}
 580 009e 2861     		str	r0, [r5, #16]	@ unaligned
 581 00a0 6961     		str	r1, [r5, #20]	@ unaligned
 582 00a2 AA61     		str	r2, [r5, #24]	@ unaligned
 583 00a4 2388     		ldrh	r3, [r4]	@ unaligned
 584 00a6 A278     		ldrb	r2, [r4, #2]
 585 00a8 AB83     		strh	r3, [r5, #28]	@ unaligned
 586 00aa 1346     		mov	r3, r2
 587 00ac AB77     		strb	r3, [r5, #30]
 588 00ae 17E0     		b	.L22
 589              	.L21:
 211:sd_card.c     ****     }else{
 212:sd_card.c     ****        snprintf(test.reason,sizeof(test.reason),"FAILED TO WRITE READ DELETE FILE"); 
 590              		.loc 1 212 0
 591 00b0 07F12403 		add	r3, r7, #36
 592 00b4 8133     		adds	r3, r3, #129
 593 00b6 194A     		ldr	r2, .L25+24
 594 00b8 1446     		mov	r4, r2
 595 00ba 9E46     		mov	lr, r3
 596 00bc 04F1200C 		add	ip, r4, #32
 597              	.L23:
 598 00c0 7546     		mov	r5, lr
 599 00c2 2646     		mov	r6, r4
 600 00c4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 601 00c6 2860     		str	r0, [r5]	@ unaligned
 602 00c8 6960     		str	r1, [r5, #4]	@ unaligned
 603 00ca AA60     		str	r2, [r5, #8]	@ unaligned
 604 00cc EB60     		str	r3, [r5, #12]	@ unaligned
 605 00ce 1034     		adds	r4, r4, #16
 606 00d0 0EF1100E 		add	lr, lr, #16
 607 00d4 6445     		cmp	r4, ip
 608 00d6 F3D1     		bne	.L23
 609 00d8 7346     		mov	r3, lr
 610 00da 2246     		mov	r2, r4
 611 00dc 1278     		ldrb	r2, [r2]
 612 00de 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 16


 613              	.L22:
 213:sd_card.c     ****     }
 214:sd_card.c     ****     
 215:sd_card.c     ****     return test;
 614              		.loc 1 215 0
 615 00e0 3B1D     		adds	r3, r7, #4
 616 00e2 1A68     		ldr	r2, [r3]
 617 00e4 07F12403 		add	r3, r7, #36
 618 00e8 1046     		mov	r0, r2
 619 00ea 1946     		mov	r1, r3
 620 00ec 40F28113 		movw	r3, #385
 621 00f0 1A46     		mov	r2, r3
 622 00f2 FFF7FEFF 		bl	memcpy
 216:sd_card.c     ****     
 217:sd_card.c     **** }
 623              		.loc 1 217 0
 624 00f6 3B1D     		adds	r3, r7, #4
 625 00f8 1868     		ldr	r0, [r3]
 626 00fa 07F5D677 		add	r7, r7, #428
 627              		.cfi_def_cfa_offset 20
 628 00fe BD46     		mov	sp, r7
 629              		.cfi_def_cfa_register 13
 630              		@ sp needed
 631 0100 F0BD     		pop	{r4, r5, r6, r7, pc}
 632              	.L26:
 633 0102 00BF     		.align	2
 634              	.L25:
 635 0104 0C000000 		.word	.LC2
 636 0108 70000000 		.word	.LC3
 637 010c 7C000000 		.word	.LC4
 638 0110 1C000000 		.word	.LC5
 639 0114 28000000 		.word	.LC6
 640 0118 2C000000 		.word	.LC7
 641 011c 4C000000 		.word	.LC8
 642              		.cfi_endproc
 643              	.LFE71:
 644              		.size	SD_card_test, .-SD_card_test
 645              		.text
 646              	.Letext0:
 647              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 648              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 649              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 650              		.file 5 "testing.h"
 651              		.file 6 "..\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 652              		.file 7 "data.h"
 653              		.file 8 "modem.h"
 654              		.file 9 "notoriOS.h"
 655              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 656              		.file 11 "level_sensor.h"
 657              		.file 12 "downstream_level_sensor.h"
 658              		.file 13 "App_LED.h"
 659              		.section	.debug_info,"",%progbits
 660              	.Ldebug_info0:
 661 0000 2D080000 		.4byte	0x82d
 662 0004 0400     		.2byte	0x4
 663 0006 00000000 		.4byte	.Ldebug_abbrev0
 664 000a 04       		.byte	0x4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 17


 665 000b 01       		.uleb128 0x1
 666 000c 8B000000 		.4byte	.LASF110
 667 0010 0C       		.byte	0xc
 668 0011 81000000 		.4byte	.LASF111
 669 0015 91040000 		.4byte	.LASF112
 670 0019 00000000 		.4byte	.Ldebug_ranges0+0
 671 001d 00000000 		.4byte	0
 672 0021 00000000 		.4byte	.Ldebug_line0
 673 0025 02       		.uleb128 0x2
 674 0026 01       		.byte	0x1
 675 0027 06       		.byte	0x6
 676 0028 0C030000 		.4byte	.LASF0
 677 002c 02       		.uleb128 0x2
 678 002d 01       		.byte	0x1
 679 002e 08       		.byte	0x8
 680 002f CE020000 		.4byte	.LASF1
 681 0033 02       		.uleb128 0x2
 682 0034 02       		.byte	0x2
 683 0035 05       		.byte	0x5
 684 0036 52000000 		.4byte	.LASF2
 685 003a 02       		.uleb128 0x2
 686 003b 02       		.byte	0x2
 687 003c 07       		.byte	0x7
 688 003d D6030000 		.4byte	.LASF3
 689 0041 03       		.uleb128 0x3
 690 0042 42050000 		.4byte	.LASF12
 691 0046 02       		.byte	0x2
 692 0047 3F       		.byte	0x3f
 693 0048 4C000000 		.4byte	0x4c
 694 004c 02       		.uleb128 0x2
 695 004d 04       		.byte	0x4
 696 004e 05       		.byte	0x5
 697 004f 25020000 		.4byte	.LASF4
 698 0053 02       		.uleb128 0x2
 699 0054 04       		.byte	0x4
 700 0055 07       		.byte	0x7
 701 0056 D4040000 		.4byte	.LASF5
 702 005a 02       		.uleb128 0x2
 703 005b 08       		.byte	0x8
 704 005c 05       		.byte	0x5
 705 005d 0B020000 		.4byte	.LASF6
 706 0061 02       		.uleb128 0x2
 707 0062 08       		.byte	0x8
 708 0063 07       		.byte	0x7
 709 0064 35030000 		.4byte	.LASF7
 710 0068 04       		.uleb128 0x4
 711 0069 04       		.byte	0x4
 712 006a 05       		.byte	0x5
 713 006b 696E7400 		.ascii	"int\000"
 714 006f 02       		.uleb128 0x2
 715 0070 04       		.byte	0x4
 716 0071 07       		.byte	0x7
 717 0072 62030000 		.4byte	.LASF8
 718 0076 02       		.uleb128 0x2
 719 0077 08       		.byte	0x8
 720 0078 04       		.byte	0x4
 721 0079 B4020000 		.4byte	.LASF9
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 18


 722 007d 05       		.uleb128 0x5
 723 007e 04       		.byte	0x4
 724 007f 02       		.uleb128 0x2
 725 0080 04       		.byte	0x4
 726 0081 07       		.byte	0x7
 727 0082 5C000000 		.4byte	.LASF10
 728 0086 06       		.uleb128 0x6
 729 0087 04       		.byte	0x4
 730 0088 8C000000 		.4byte	0x8c
 731 008c 02       		.uleb128 0x2
 732 008d 01       		.byte	0x1
 733 008e 08       		.byte	0x8
 734 008f 19020000 		.4byte	.LASF11
 735 0093 06       		.uleb128 0x6
 736 0094 04       		.byte	0x4
 737 0095 99000000 		.4byte	0x99
 738 0099 07       		.uleb128 0x7
 739 009a 8C000000 		.4byte	0x8c
 740 009e 08       		.uleb128 0x8
 741 009f 8C000000 		.4byte	0x8c
 742 00a3 AE000000 		.4byte	0xae
 743 00a7 09       		.uleb128 0x9
 744 00a8 7F000000 		.4byte	0x7f
 745 00ac 17       		.byte	0x17
 746 00ad 00       		.byte	0
 747 00ae 03       		.uleb128 0x3
 748 00af 54040000 		.4byte	.LASF13
 749 00b3 03       		.byte	0x3
 750 00b4 2C       		.byte	0x2c
 751 00b5 41000000 		.4byte	0x41
 752 00b9 0A       		.uleb128 0xa
 753 00ba 87010000 		.4byte	.LASF14
 754 00be 04       		.byte	0x4
 755 00bf 9201     		.2byte	0x192
 756 00c1 2C000000 		.4byte	0x2c
 757 00c5 0A       		.uleb128 0xa
 758 00c6 53010000 		.4byte	.LASF15
 759 00ca 04       		.byte	0x4
 760 00cb 9301     		.2byte	0x193
 761 00cd 3A000000 		.4byte	0x3a
 762 00d1 0A       		.uleb128 0xa
 763 00d2 AC010000 		.4byte	.LASF16
 764 00d6 04       		.byte	0x4
 765 00d7 9601     		.2byte	0x196
 766 00d9 33000000 		.4byte	0x33
 767 00dd 0A       		.uleb128 0xa
 768 00de E6040000 		.4byte	.LASF17
 769 00e2 04       		.byte	0x4
 770 00e3 9701     		.2byte	0x197
 771 00e5 4C000000 		.4byte	0x4c
 772 00e9 02       		.uleb128 0x2
 773 00ea 04       		.byte	0x4
 774 00eb 04       		.byte	0x4
 775 00ec E7010000 		.4byte	.LASF18
 776 00f0 02       		.uleb128 0x2
 777 00f1 08       		.byte	0x8
 778 00f2 04       		.byte	0x4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 19


 779 00f3 EC040000 		.4byte	.LASF19
 780 00f7 06       		.uleb128 0x6
 781 00f8 04       		.byte	0x4
 782 00f9 FD000000 		.4byte	0xfd
 783 00fd 0B       		.uleb128 0xb
 784 00fe 0C       		.uleb128 0xc
 785 00ff 8101     		.2byte	0x181
 786 0101 05       		.byte	0x5
 787 0102 0A       		.byte	0xa
 788 0103 2C010000 		.4byte	0x12c
 789 0107 0D       		.uleb128 0xd
 790 0108 7D050000 		.4byte	.LASF20
 791 010c 05       		.byte	0x5
 792 010d 0C       		.byte	0xc
 793 010e 2C010000 		.4byte	0x12c
 794 0112 00       		.byte	0
 795 0113 0D       		.uleb128 0xd
 796 0114 01040000 		.4byte	.LASF21
 797 0118 05       		.byte	0x5
 798 0119 0D       		.byte	0xd
 799 011a B9000000 		.4byte	0xb9
 800 011e 80       		.byte	0x80
 801 011f 0D       		.uleb128 0xd
 802 0120 1E020000 		.4byte	.LASF22
 803 0124 05       		.byte	0x5
 804 0125 0F       		.byte	0xf
 805 0126 3C010000 		.4byte	0x13c
 806 012a 81       		.byte	0x81
 807 012b 00       		.byte	0
 808 012c 08       		.uleb128 0x8
 809 012d 8C000000 		.4byte	0x8c
 810 0131 3C010000 		.4byte	0x13c
 811 0135 09       		.uleb128 0x9
 812 0136 7F000000 		.4byte	0x7f
 813 013a 7F       		.byte	0x7f
 814 013b 00       		.byte	0
 815 013c 08       		.uleb128 0x8
 816 013d 8C000000 		.4byte	0x8c
 817 0141 4C010000 		.4byte	0x14c
 818 0145 09       		.uleb128 0x9
 819 0146 7F000000 		.4byte	0x7f
 820 014a FF       		.byte	0xff
 821 014b 00       		.byte	0
 822 014c 03       		.uleb128 0x3
 823 014d 65050000 		.4byte	.LASF23
 824 0151 05       		.byte	0x5
 825 0152 10       		.byte	0x10
 826 0153 FE000000 		.4byte	0xfe
 827 0157 03       		.uleb128 0x3
 828 0158 DC020000 		.4byte	.LASF24
 829 015c 06       		.byte	0x6
 830 015d 7E       		.byte	0x7e
 831 015e 62010000 		.4byte	0x162
 832 0162 0E       		.uleb128 0xe
 833 0163 DC020000 		.4byte	.LASF24
 834 0167 06       		.uleb128 0x6
 835 0168 04       		.byte	0x4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 20


 836 0169 57010000 		.4byte	0x157
 837 016d 0F       		.uleb128 0xf
 838 016e 2C       		.byte	0x2c
 839 016f 07       		.byte	0x7
 840 0170 14       		.byte	0x14
 841 0171 9A010000 		.4byte	0x19a
 842 0175 10       		.uleb128 0x10
 843 0176 6B657900 		.ascii	"key\000"
 844 017a 07       		.byte	0x7
 845 017b 15       		.byte	0x15
 846 017c 9A010000 		.4byte	0x19a
 847 0180 00       		.byte	0
 848 0181 0D       		.uleb128 0xd
 849 0182 C2050000 		.4byte	.LASF25
 850 0186 07       		.byte	0x7
 851 0187 16       		.byte	0x16
 852 0188 9A010000 		.4byte	0x19a
 853 018c 14       		.byte	0x14
 854 018d 0D       		.uleb128 0xd
 855 018e B2010000 		.4byte	.LASF26
 856 0192 07       		.byte	0x7
 857 0193 17       		.byte	0x17
 858 0194 DD000000 		.4byte	0xdd
 859 0198 28       		.byte	0x28
 860 0199 00       		.byte	0
 861 019a 08       		.uleb128 0x8
 862 019b 8C000000 		.4byte	0x8c
 863 019f AA010000 		.4byte	0x1aa
 864 01a3 09       		.uleb128 0x9
 865 01a4 7F000000 		.4byte	0x7f
 866 01a8 13       		.byte	0x13
 867 01a9 00       		.byte	0
 868 01aa 03       		.uleb128 0x3
 869 01ab 6F030000 		.4byte	.LASF27
 870 01af 07       		.byte	0x7
 871 01b0 19       		.byte	0x19
 872 01b1 6D010000 		.4byte	0x16d
 873 01b5 0F       		.uleb128 0xf
 874 01b6 3C       		.byte	0x3c
 875 01b7 08       		.byte	0x8
 876 01b8 36       		.byte	0x36
 877 01b9 E2010000 		.4byte	0x1e2
 878 01bd 0D       		.uleb128 0xd
 879 01be 09000000 		.4byte	.LASF28
 880 01c2 08       		.byte	0x8
 881 01c3 37       		.byte	0x37
 882 01c4 9A010000 		.4byte	0x19a
 883 01c8 00       		.byte	0
 884 01c9 0D       		.uleb128 0xd
 885 01ca 00000000 		.4byte	.LASF29
 886 01ce 08       		.byte	0x8
 887 01cf 38       		.byte	0x38
 888 01d0 9A010000 		.4byte	0x19a
 889 01d4 14       		.byte	0x14
 890 01d5 0D       		.uleb128 0xd
 891 01d6 4F040000 		.4byte	.LASF30
 892 01da 08       		.byte	0x8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 21


 893 01db 39       		.byte	0x39
 894 01dc 9A010000 		.4byte	0x19a
 895 01e0 28       		.byte	0x28
 896 01e1 00       		.byte	0
 897 01e2 03       		.uleb128 0x3
 898 01e3 27050000 		.4byte	.LASF31
 899 01e7 08       		.byte	0x8
 900 01e8 3B       		.byte	0x3b
 901 01e9 B5010000 		.4byte	0x1b5
 902 01ed 0F       		.uleb128 0xf
 903 01ee 20       		.byte	0x20
 904 01ef 08       		.byte	0x8
 905 01f0 3D       		.byte	0x3d
 906 01f1 56020000 		.4byte	0x256
 907 01f5 0D       		.uleb128 0xd
 908 01f6 7B030000 		.4byte	.LASF32
 909 01fa 08       		.byte	0x8
 910 01fb 3E       		.byte	0x3e
 911 01fc 68000000 		.4byte	0x68
 912 0200 00       		.byte	0
 913 0201 10       		.uleb128 0x10
 914 0202 62657200 		.ascii	"ber\000"
 915 0206 08       		.byte	0x8
 916 0207 3F       		.byte	0x3f
 917 0208 68000000 		.4byte	0x68
 918 020c 04       		.byte	0x4
 919 020d 0D       		.uleb128 0xd
 920 020e A5020000 		.4byte	.LASF33
 921 0212 08       		.byte	0x8
 922 0213 40       		.byte	0x40
 923 0214 68000000 		.4byte	0x68
 924 0218 08       		.byte	0x8
 925 0219 0D       		.uleb128 0xd
 926 021a 39010000 		.4byte	.LASF34
 927 021e 08       		.byte	0x8
 928 021f 41       		.byte	0x41
 929 0220 68000000 		.4byte	0x68
 930 0224 0C       		.byte	0xc
 931 0225 0D       		.uleb128 0xd
 932 0226 8C040000 		.4byte	.LASF35
 933 022a 08       		.byte	0x8
 934 022b 42       		.byte	0x42
 935 022c 68000000 		.4byte	0x68
 936 0230 10       		.byte	0x10
 937 0231 0D       		.uleb128 0xd
 938 0232 E4020000 		.4byte	.LASF36
 939 0236 08       		.byte	0x8
 940 0237 43       		.byte	0x43
 941 0238 68000000 		.4byte	0x68
 942 023c 14       		.byte	0x14
 943 023d 0D       		.uleb128 0xd
 944 023e E9030000 		.4byte	.LASF37
 945 0242 08       		.byte	0x8
 946 0243 44       		.byte	0x44
 947 0244 68000000 		.4byte	0x68
 948 0248 18       		.byte	0x18
 949 0249 0D       		.uleb128 0xd
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 22


 950 024a 1C040000 		.4byte	.LASF38
 951 024e 08       		.byte	0x8
 952 024f 45       		.byte	0x45
 953 0250 68000000 		.4byte	0x68
 954 0254 1C       		.byte	0x1c
 955 0255 00       		.byte	0
 956 0256 03       		.uleb128 0x3
 957 0257 5C040000 		.4byte	.LASF39
 958 025b 08       		.byte	0x8
 959 025c 47       		.byte	0x47
 960 025d ED010000 		.4byte	0x1ed
 961 0261 0F       		.uleb128 0xf
 962 0262 08       		.byte	0x8
 963 0263 08       		.byte	0x8
 964 0264 53       		.byte	0x53
 965 0265 CA020000 		.4byte	0x2ca
 966 0269 0D       		.uleb128 0xd
 967 026a D2050000 		.4byte	.LASF40
 968 026e 08       		.byte	0x8
 969 026f 55       		.byte	0x55
 970 0270 B9000000 		.4byte	0xb9
 971 0274 00       		.byte	0
 972 0275 0D       		.uleb128 0xd
 973 0276 C2030000 		.4byte	.LASF41
 974 027a 08       		.byte	0x8
 975 027b 57       		.byte	0x57
 976 027c CA020000 		.4byte	0x2ca
 977 0280 01       		.byte	0x1
 978 0281 0D       		.uleb128 0xd
 979 0282 86020000 		.4byte	.LASF42
 980 0286 08       		.byte	0x8
 981 0287 59       		.byte	0x59
 982 0288 B9000000 		.4byte	0xb9
 983 028c 02       		.byte	0x2
 984 028d 0D       		.uleb128 0xd
 985 028e 81030000 		.4byte	.LASF43
 986 0292 08       		.byte	0x8
 987 0293 5B       		.byte	0x5b
 988 0294 B9000000 		.4byte	0xb9
 989 0298 03       		.byte	0x3
 990 0299 0D       		.uleb128 0xd
 991 029a 1B050000 		.4byte	.LASF44
 992 029e 08       		.byte	0x8
 993 029f 5E       		.byte	0x5e
 994 02a0 B9000000 		.4byte	0xb9
 995 02a4 04       		.byte	0x4
 996 02a5 0D       		.uleb128 0xd
 997 02a6 1E010000 		.4byte	.LASF45
 998 02aa 08       		.byte	0x8
 999 02ab 63       		.byte	0x63
 1000 02ac B9000000 		.4byte	0xb9
 1001 02b0 05       		.byte	0x5
 1002 02b1 0D       		.uleb128 0xd
 1003 02b2 93020000 		.4byte	.LASF46
 1004 02b6 08       		.byte	0x8
 1005 02b7 65       		.byte	0x65
 1006 02b8 B9000000 		.4byte	0xb9
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 23


 1007 02bc 06       		.byte	0x6
 1008 02bd 0D       		.uleb128 0xd
 1009 02be 18030000 		.4byte	.LASF47
 1010 02c2 08       		.byte	0x8
 1011 02c3 66       		.byte	0x66
 1012 02c4 B9000000 		.4byte	0xb9
 1013 02c8 07       		.byte	0x7
 1014 02c9 00       		.byte	0
 1015 02ca 02       		.uleb128 0x2
 1016 02cb 01       		.byte	0x1
 1017 02cc 02       		.byte	0x2
 1018 02cd 6A040000 		.4byte	.LASF48
 1019 02d1 03       		.uleb128 0x3
 1020 02d2 AB030000 		.4byte	.LASF49
 1021 02d6 08       		.byte	0x8
 1022 02d7 68       		.byte	0x68
 1023 02d8 61020000 		.4byte	0x261
 1024 02dc 0F       		.uleb128 0xf
 1025 02dd 06       		.byte	0x6
 1026 02de 09       		.byte	0x9
 1027 02df 2F       		.byte	0x2f
 1028 02e0 15030000 		.4byte	0x315
 1029 02e4 0D       		.uleb128 0xd
 1030 02e5 43000000 		.4byte	.LASF50
 1031 02e9 09       		.byte	0x9
 1032 02ea 31       		.byte	0x31
 1033 02eb C5000000 		.4byte	0xc5
 1034 02ef 00       		.byte	0
 1035 02f0 0D       		.uleb128 0xd
 1036 02f1 2D000000 		.4byte	.LASF51
 1037 02f5 09       		.byte	0x9
 1038 02f6 32       		.byte	0x32
 1039 02f7 D1000000 		.4byte	0xd1
 1040 02fb 02       		.byte	0x2
 1041 02fc 0D       		.uleb128 0xd
 1042 02fd 34050000 		.4byte	.LASF52
 1043 0301 09       		.byte	0x9
 1044 0302 33       		.byte	0x33
 1045 0303 B9000000 		.4byte	0xb9
 1046 0307 04       		.byte	0x4
 1047 0308 0D       		.uleb128 0xd
 1048 0309 04060000 		.4byte	.LASF53
 1049 030d 09       		.byte	0x9
 1050 030e 34       		.byte	0x34
 1051 030f B9000000 		.4byte	0xb9
 1052 0313 05       		.byte	0x5
 1053 0314 00       		.byte	0
 1054 0315 03       		.uleb128 0x3
 1055 0316 80020000 		.4byte	.LASF54
 1056 031a 09       		.byte	0x9
 1057 031b 37       		.byte	0x37
 1058 031c 20030000 		.4byte	0x320
 1059 0320 11       		.uleb128 0x11
 1060 0321 DC020000 		.4byte	0x2dc
 1061 0325 0F       		.uleb128 0xf
 1062 0326 1C       		.byte	0x1c
 1063 0327 09       		.byte	0x9
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 24


 1064 0328 3A       		.byte	0x3a
 1065 0329 46030000 		.4byte	0x346
 1066 032d 0D       		.uleb128 0xd
 1067 032e 3E020000 		.4byte	.LASF55
 1068 0332 09       		.byte	0x9
 1069 0333 3C       		.byte	0x3c
 1070 0334 46030000 		.4byte	0x346
 1071 0338 00       		.byte	0
 1072 0339 0D       		.uleb128 0xd
 1073 033a 2B010000 		.4byte	.LASF56
 1074 033e 09       		.byte	0x9
 1075 033f 3D       		.byte	0x3d
 1076 0340 9E000000 		.4byte	0x9e
 1077 0344 04       		.byte	0x4
 1078 0345 00       		.byte	0
 1079 0346 06       		.uleb128 0x6
 1080 0347 04       		.byte	0x4
 1081 0348 E2010000 		.4byte	0x1e2
 1082 034c 03       		.uleb128 0x3
 1083 034d CB030000 		.4byte	.LASF57
 1084 0351 09       		.byte	0x9
 1085 0352 3F       		.byte	0x3f
 1086 0353 25030000 		.4byte	0x325
 1087 0357 0F       		.uleb128 0xf
 1088 0358 68       		.byte	0x68
 1089 0359 09       		.byte	0x9
 1090 035a 45       		.byte	0x45
 1091 035b 78030000 		.4byte	0x378
 1092 035f 0D       		.uleb128 0xd
 1093 0360 72000000 		.4byte	.LASF58
 1094 0364 09       		.byte	0x9
 1095 0365 4A       		.byte	0x4a
 1096 0366 78030000 		.4byte	0x378
 1097 036a 00       		.byte	0
 1098 036b 0D       		.uleb128 0xd
 1099 036c BA050000 		.4byte	.LASF59
 1100 0370 09       		.byte	0x9
 1101 0371 4B       		.byte	0x4b
 1102 0372 68000000 		.4byte	0x68
 1103 0376 64       		.byte	0x64
 1104 0377 00       		.byte	0
 1105 0378 08       		.uleb128 0x8
 1106 0379 8C000000 		.4byte	0x8c
 1107 037d 88030000 		.4byte	0x388
 1108 0381 09       		.uleb128 0x9
 1109 0382 7F000000 		.4byte	0x7f
 1110 0386 63       		.byte	0x63
 1111 0387 00       		.byte	0
 1112 0388 03       		.uleb128 0x3
 1113 0389 1E000000 		.4byte	.LASF60
 1114 038d 09       		.byte	0x9
 1115 038e 51       		.byte	0x51
 1116 038f 57030000 		.4byte	0x357
 1117 0393 12       		.uleb128 0x12
 1118 0394 6C050000 		.4byte	.LASF71
 1119 0398 01       		.byte	0x1
 1120 0399 1E       		.byte	0x1e
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 25


 1121 039a 00000000 		.4byte	.LFB64
 1122 039e 0C000000 		.4byte	.LFE64-.LFB64
 1123 03a2 01       		.uleb128 0x1
 1124 03a3 9C       		.byte	0x9c
 1125 03a4 13       		.uleb128 0x13
 1126 03a5 C5010000 		.4byte	.LASF61
 1127 03a9 01       		.byte	0x1
 1128 03aa 2C       		.byte	0x2c
 1129 03ab B9000000 		.4byte	0xb9
 1130 03af 00000000 		.4byte	.LFB65
 1131 03b3 40000000 		.4byte	.LFE65-.LFB65
 1132 03b7 01       		.uleb128 0x1
 1133 03b8 9C       		.byte	0x9c
 1134 03b9 DA030000 		.4byte	0x3da
 1135 03bd 14       		.uleb128 0x14
 1136 03be 02020000 		.4byte	.LASF63
 1137 03c2 01       		.byte	0x1
 1138 03c3 2C       		.byte	0x2c
 1139 03c4 86000000 		.4byte	0x86
 1140 03c8 02       		.uleb128 0x2
 1141 03c9 91       		.byte	0x91
 1142 03ca 6C       		.sleb128 -20
 1143 03cb 15       		.uleb128 0x15
 1144 03cc 01040000 		.4byte	.LASF21
 1145 03d0 01       		.byte	0x1
 1146 03d1 2E       		.byte	0x2e
 1147 03d2 B9000000 		.4byte	0xb9
 1148 03d6 02       		.uleb128 0x2
 1149 03d7 91       		.byte	0x91
 1150 03d8 77       		.sleb128 -9
 1151 03d9 00       		.byte	0
 1152 03da 13       		.uleb128 0x13
 1153 03db F3040000 		.4byte	.LASF62
 1154 03df 01       		.byte	0x1
 1155 03e0 43       		.byte	0x43
 1156 03e1 B9000000 		.4byte	0xb9
 1157 03e5 00000000 		.4byte	.LFB66
 1158 03e9 2C000000 		.4byte	.LFE66-.LFB66
 1159 03ed 01       		.uleb128 0x1
 1160 03ee 9C       		.byte	0x9c
 1161 03ef 10040000 		.4byte	0x410
 1162 03f3 14       		.uleb128 0x14
 1163 03f4 74050000 		.4byte	.LASF64
 1164 03f8 01       		.byte	0x1
 1165 03f9 43       		.byte	0x43
 1166 03fa 93000000 		.4byte	0x93
 1167 03fe 02       		.uleb128 0x2
 1168 03ff 91       		.byte	0x91
 1169 0400 6C       		.sleb128 -20
 1170 0401 15       		.uleb128 0x15
 1171 0402 01040000 		.4byte	.LASF21
 1172 0406 01       		.byte	0x1
 1173 0407 45       		.byte	0x45
 1174 0408 B9000000 		.4byte	0xb9
 1175 040c 02       		.uleb128 0x2
 1176 040d 91       		.byte	0x91
 1177 040e 77       		.sleb128 -9
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 26


 1178 040f 00       		.byte	0
 1179 0410 13       		.uleb128 0x13
 1180 0411 BC010000 		.4byte	.LASF65
 1181 0415 01       		.byte	0x1
 1182 0416 5A       		.byte	0x5a
 1183 0417 B9000000 		.4byte	0xb9
 1184 041b 00000000 		.4byte	.LFB67
 1185 041f 6C000000 		.4byte	.LFE67-.LFB67
 1186 0423 01       		.uleb128 0x1
 1187 0424 9C       		.byte	0x9c
 1188 0425 70040000 		.4byte	0x470
 1189 0429 14       		.uleb128 0x14
 1190 042a 74050000 		.4byte	.LASF64
 1191 042e 01       		.byte	0x1
 1192 042f 5A       		.byte	0x5a
 1193 0430 93000000 		.4byte	0x93
 1194 0434 02       		.uleb128 0x2
 1195 0435 91       		.byte	0x91
 1196 0436 6C       		.sleb128 -20
 1197 0437 14       		.uleb128 0x14
 1198 0438 8B030000 		.4byte	.LASF66
 1199 043c 01       		.byte	0x1
 1200 043d 5A       		.byte	0x5a
 1201 043e 93000000 		.4byte	0x93
 1202 0442 02       		.uleb128 0x2
 1203 0443 91       		.byte	0x91
 1204 0444 68       		.sleb128 -24
 1205 0445 14       		.uleb128 0x14
 1206 0446 18000000 		.4byte	.LASF67
 1207 044a 01       		.byte	0x1
 1208 044b 5A       		.byte	0x5a
 1209 044c F7000000 		.4byte	0xf7
 1210 0450 02       		.uleb128 0x2
 1211 0451 91       		.byte	0x91
 1212 0452 64       		.sleb128 -28
 1213 0453 15       		.uleb128 0x15
 1214 0454 01040000 		.4byte	.LASF21
 1215 0458 01       		.byte	0x1
 1216 0459 5C       		.byte	0x5c
 1217 045a B9000000 		.4byte	0xb9
 1218 045e 02       		.uleb128 0x2
 1219 045f 91       		.byte	0x91
 1220 0460 77       		.sleb128 -9
 1221 0461 15       		.uleb128 0x15
 1222 0462 5C030000 		.4byte	.LASF68
 1223 0466 01       		.byte	0x1
 1224 0467 5D       		.byte	0x5d
 1225 0468 67010000 		.4byte	0x167
 1226 046c 02       		.uleb128 0x2
 1227 046d 91       		.byte	0x91
 1228 046e 70       		.sleb128 -16
 1229 046f 00       		.byte	0
 1230 0470 13       		.uleb128 0x13
 1231 0471 10000000 		.4byte	.LASF69
 1232 0475 01       		.byte	0x1
 1233 0476 86       		.byte	0x86
 1234 0477 B9000000 		.4byte	0xb9
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 27


 1235 047b 00000000 		.4byte	.LFB68
 1236 047f 68000000 		.4byte	.LFE68-.LFB68
 1237 0483 01       		.uleb128 0x1
 1238 0484 9C       		.byte	0x9c
 1239 0485 D0040000 		.4byte	0x4d0
 1240 0489 14       		.uleb128 0x14
 1241 048a 74050000 		.4byte	.LASF64
 1242 048e 01       		.byte	0x1
 1243 048f 86       		.byte	0x86
 1244 0490 93000000 		.4byte	0x93
 1245 0494 02       		.uleb128 0x2
 1246 0495 91       		.byte	0x91
 1247 0496 6C       		.sleb128 -20
 1248 0497 14       		.uleb128 0x14
 1249 0498 18000000 		.4byte	.LASF67
 1250 049c 01       		.byte	0x1
 1251 049d 86       		.byte	0x86
 1252 049e 7D000000 		.4byte	0x7d
 1253 04a2 02       		.uleb128 0x2
 1254 04a3 91       		.byte	0x91
 1255 04a4 68       		.sleb128 -24
 1256 04a5 14       		.uleb128 0x14
 1257 04a6 4A010000 		.4byte	.LASF70
 1258 04aa 01       		.byte	0x1
 1259 04ab 86       		.byte	0x86
 1260 04ac 53000000 		.4byte	0x53
 1261 04b0 02       		.uleb128 0x2
 1262 04b1 91       		.byte	0x91
 1263 04b2 64       		.sleb128 -28
 1264 04b3 15       		.uleb128 0x15
 1265 04b4 01040000 		.4byte	.LASF21
 1266 04b8 01       		.byte	0x1
 1267 04b9 88       		.byte	0x88
 1268 04ba B9000000 		.4byte	0xb9
 1269 04be 02       		.uleb128 0x2
 1270 04bf 91       		.byte	0x91
 1271 04c0 77       		.sleb128 -9
 1272 04c1 15       		.uleb128 0x15
 1273 04c2 5C030000 		.4byte	.LASF68
 1274 04c6 01       		.byte	0x1
 1275 04c7 89       		.byte	0x89
 1276 04c8 67010000 		.4byte	0x167
 1277 04cc 02       		.uleb128 0x2
 1278 04cd 91       		.byte	0x91
 1279 04ce 70       		.sleb128 -16
 1280 04cf 00       		.byte	0
 1281 04d0 16       		.uleb128 0x16
 1282 04d1 87050000 		.4byte	.LASF72
 1283 04d5 01       		.byte	0x1
 1284 04d6 AB       		.byte	0xab
 1285 04d7 00000000 		.4byte	.LFB69
 1286 04db 16000000 		.4byte	.LFE69-.LFB69
 1287 04df 01       		.uleb128 0x1
 1288 04e0 9C       		.byte	0x9c
 1289 04e1 16       		.uleb128 0x16
 1290 04e2 72020000 		.4byte	.LASF73
 1291 04e6 01       		.byte	0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 28


 1292 04e7 B4       		.byte	0xb4
 1293 04e8 00000000 		.4byte	.LFB70
 1294 04ec 2E000000 		.4byte	.LFE70-.LFB70
 1295 04f0 01       		.uleb128 0x1
 1296 04f1 9C       		.byte	0x9c
 1297 04f2 17       		.uleb128 0x17
 1298 04f3 65000000 		.4byte	.LASF113
 1299 04f7 01       		.byte	0x1
 1300 04f8 C2       		.byte	0xc2
 1301 04f9 4C010000 		.4byte	0x14c
 1302 04fd 00000000 		.4byte	.LFB71
 1303 0501 20010000 		.4byte	.LFE71-.LFB71
 1304 0505 01       		.uleb128 0x1
 1305 0506 9C       		.byte	0x9c
 1306 0507 39050000 		.4byte	0x539
 1307 050b 15       		.uleb128 0x15
 1308 050c 87040000 		.4byte	.LASF74
 1309 0510 01       		.byte	0x1
 1310 0511 C5       		.byte	0xc5
 1311 0512 4C010000 		.4byte	0x14c
 1312 0516 03       		.uleb128 0x3
 1313 0517 91       		.byte	0x91
 1314 0518 E47C     		.sleb128 -412
 1315 051a 15       		.uleb128 0x15
 1316 051b 19010000 		.4byte	.LASF75
 1317 051f 01       		.byte	0x1
 1318 0520 C9       		.byte	0xc9
 1319 0521 39050000 		.4byte	0x539
 1320 0525 03       		.uleb128 0x3
 1321 0526 91       		.byte	0x91
 1322 0527 D87C     		.sleb128 -424
 1323 0529 15       		.uleb128 0x15
 1324 052a 74050000 		.4byte	.LASF64
 1325 052e 01       		.byte	0x1
 1326 052f CA       		.byte	0xca
 1327 0530 49050000 		.4byte	0x549
 1328 0534 03       		.uleb128 0x3
 1329 0535 91       		.byte	0x91
 1330 0536 CC7C     		.sleb128 -436
 1331 0538 00       		.byte	0
 1332 0539 08       		.uleb128 0x8
 1333 053a 8C000000 		.4byte	0x8c
 1334 053e 49050000 		.4byte	0x549
 1335 0542 09       		.uleb128 0x9
 1336 0543 7F000000 		.4byte	0x7f
 1337 0547 09       		.byte	0x9
 1338 0548 00       		.byte	0
 1339 0549 08       		.uleb128 0x8
 1340 054a 8C000000 		.4byte	0x8c
 1341 054e 59050000 		.4byte	0x559
 1342 0552 09       		.uleb128 0x9
 1343 0553 7F000000 		.4byte	0x7f
 1344 0557 08       		.byte	0x8
 1345 0558 00       		.byte	0
 1346 0559 18       		.uleb128 0x18
 1347 055a FD040000 		.4byte	.LASF76
 1348 055e 0A       		.byte	0xa
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 29


 1349 055f 1207     		.2byte	0x712
 1350 0561 65050000 		.4byte	0x565
 1351 0565 11       		.uleb128 0x11
 1352 0566 AE000000 		.4byte	0xae
 1353 056a 19       		.uleb128 0x19
 1354 056b 8D010000 		.4byte	.LASF77
 1355 056f 0B       		.byte	0xb
 1356 0570 25       		.byte	0x25
 1357 0571 78030000 		.4byte	0x378
 1358 0575 05       		.uleb128 0x5
 1359 0576 03       		.byte	0x3
 1360 0577 00000000 		.4byte	level_sensor_inbox
 1361 057b 19       		.uleb128 0x19
 1362 057c ED010000 		.4byte	.LASF78
 1363 0580 0B       		.byte	0xb
 1364 0581 27       		.byte	0x27
 1365 0582 CA020000 		.4byte	0x2ca
 1366 0586 05       		.uleb128 0x5
 1367 0587 03       		.byte	0x3
 1368 0588 00000000 		.4byte	level_sensor_enabled
 1369 058c 19       		.uleb128 0x19
 1370 058d 1C060000 		.4byte	.LASF79
 1371 0591 0C       		.byte	0xc
 1372 0592 0F       		.byte	0xf
 1373 0593 78030000 		.4byte	0x378
 1374 0597 05       		.uleb128 0x5
 1375 0598 03       		.byte	0x3
 1376 0599 00000000 		.4byte	downstream_level_sensor_inbox
 1377 059d 19       		.uleb128 0x19
 1378 059e 2F040000 		.4byte	.LASF80
 1379 05a2 0C       		.byte	0xc
 1380 05a3 11       		.byte	0x11
 1381 05a4 CA020000 		.4byte	0x2ca
 1382 05a8 05       		.uleb128 0x5
 1383 05a9 03       		.byte	0x3
 1384 05aa 00000000 		.4byte	downstream_level_sensor_enabled
 1385 05ae 19       		.uleb128 0x19
 1386 05af 2E020000 		.4byte	.LASF81
 1387 05b3 07       		.byte	0x7
 1388 05b4 11       		.byte	0x11
 1389 05b5 CA020000 		.4byte	0x2ca
 1390 05b9 05       		.uleb128 0x5
 1391 05ba 03       		.byte	0x3
 1392 05bb 00000000 		.4byte	buffer_overflow
 1393 05bf 19       		.uleb128 0x19
 1394 05c0 75010000 		.4byte	.LASF82
 1395 05c4 07       		.byte	0x7
 1396 05c5 22       		.byte	0x22
 1397 05c6 C5000000 		.4byte	0xc5
 1398 05ca 05       		.uleb128 0x5
 1399 05cb 03       		.byte	0x3
 1400 05cc 00000000 		.4byte	dataPointsInStack
 1401 05d0 19       		.uleb128 0x19
 1402 05d1 CE010000 		.4byte	.LASF83
 1403 05d5 07       		.byte	0x7
 1404 05d6 23       		.byte	0x23
 1405 05d7 C5000000 		.4byte	0xc5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 30


 1406 05db 05       		.uleb128 0x5
 1407 05dc 03       		.byte	0x3
 1408 05dd 00000000 		.4byte	dataPointsInStackDesired
 1409 05e1 08       		.uleb128 0x8
 1410 05e2 AA010000 		.4byte	0x1aa
 1411 05e6 F1050000 		.4byte	0x5f1
 1412 05ea 09       		.uleb128 0x9
 1413 05eb 7F000000 		.4byte	0x7f
 1414 05ef 95       		.byte	0x95
 1415 05f0 00       		.byte	0
 1416 05f1 19       		.uleb128 0x19
 1417 05f2 19010000 		.4byte	.LASF75
 1418 05f6 07       		.byte	0x7
 1419 05f7 24       		.byte	0x24
 1420 05f8 E1050000 		.4byte	0x5e1
 1421 05fc 05       		.uleb128 0x5
 1422 05fd 03       		.byte	0x3
 1423 05fe 00000000 		.4byte	data
 1424 0602 19       		.uleb128 0x19
 1425 0603 00030000 		.4byte	.LASF84
 1426 0607 08       		.byte	0x8
 1427 0608 20       		.byte	0x20
 1428 0609 B9000000 		.4byte	0xb9
 1429 060d 05       		.uleb128 0x5
 1430 060e 03       		.byte	0x3
 1431 060f 00000000 		.4byte	modem_state
 1432 0613 19       		.uleb128 0x19
 1433 0614 E9020000 		.4byte	.LASF85
 1434 0618 08       		.byte	0x8
 1435 0619 6B       		.byte	0x6b
 1436 061a DD000000 		.4byte	0xdd
 1437 061e 05       		.uleb128 0x5
 1438 061f 03       		.byte	0x3
 1439 0620 00000000 		.4byte	modem_start_time_stamp
 1440 0624 19       		.uleb128 0x19
 1441 0625 3E020000 		.4byte	.LASF55
 1442 0629 08       		.byte	0x8
 1443 062a 6C       		.byte	0x6c
 1444 062b E2010000 		.4byte	0x1e2
 1445 062f 05       		.uleb128 0x5
 1446 0630 03       		.byte	0x3
 1447 0631 00000000 		.4byte	modem_info
 1448 0635 19       		.uleb128 0x19
 1449 0636 91030000 		.4byte	.LASF86
 1450 063a 08       		.byte	0x8
 1451 063b 6D       		.byte	0x6d
 1452 063c 56020000 		.4byte	0x256
 1453 0640 05       		.uleb128 0x5
 1454 0641 03       		.byte	0x3
 1455 0642 00000000 		.4byte	modem_stats
 1456 0646 19       		.uleb128 0x19
 1457 0647 A5050000 		.4byte	.LASF87
 1458 064b 08       		.byte	0x8
 1459 064c 6E       		.byte	0x6e
 1460 064d D1020000 		.4byte	0x2d1
 1461 0651 05       		.uleb128 0x5
 1462 0652 03       		.byte	0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 31


 1463 0653 00000000 		.4byte	updatable_parameters
 1464 0657 19       		.uleb128 0x19
 1465 0658 DC050000 		.4byte	.LASF88
 1466 065c 0D       		.byte	0xd
 1467 065d 07       		.byte	0x7
 1468 065e CA020000 		.4byte	0x2ca
 1469 0662 05       		.uleb128 0x5
 1470 0663 03       		.byte	0x3
 1471 0664 00000000 		.4byte	App_LED_enabled
 1472 0668 19       		.uleb128 0x19
 1473 0669 C0020000 		.4byte	.LASF89
 1474 066d 0D       		.byte	0xd
 1475 066e 08       		.byte	0x8
 1476 066f 78030000 		.4byte	0x378
 1477 0673 05       		.uleb128 0x5
 1478 0674 03       		.byte	0x3
 1479 0675 00000000 		.4byte	app_led_inbox
 1480 0679 08       		.uleb128 0x8
 1481 067a 8C000000 		.4byte	0x8c
 1482 067e 8A060000 		.4byte	0x68a
 1483 0682 1A       		.uleb128 0x1a
 1484 0683 7F000000 		.4byte	0x7f
 1485 0687 0F27     		.2byte	0x270f
 1486 0689 00       		.byte	0
 1487 068a 19       		.uleb128 0x19
 1488 068b EC050000 		.4byte	.LASF90
 1489 068f 09       		.byte	0x9
 1490 0690 19       		.byte	0x19
 1491 0691 79060000 		.4byte	0x679
 1492 0695 05       		.uleb128 0x5
 1493 0696 03       		.byte	0x3
 1494 0697 00000000 		.4byte	http_request
 1495 069b 19       		.uleb128 0x19
 1496 069c C8050000 		.4byte	.LASF91
 1497 06a0 09       		.byte	0x9
 1498 06a1 1A       		.byte	0x1a
 1499 06a2 79060000 		.4byte	0x679
 1500 06a6 05       		.uleb128 0x5
 1501 06a7 03       		.byte	0x3
 1502 06a8 00000000 		.4byte	http_body
 1503 06ac 08       		.uleb128 0x8
 1504 06ad 8C000000 		.4byte	0x8c
 1505 06b1 BC060000 		.4byte	0x6bc
 1506 06b5 09       		.uleb128 0x9
 1507 06b6 7F000000 		.4byte	0x7f
 1508 06ba C7       		.byte	0xc7
 1509 06bb 00       		.byte	0
 1510 06bc 19       		.uleb128 0x19
 1511 06bd C9040000 		.4byte	.LASF92
 1512 06c1 09       		.byte	0x9
 1513 06c2 1B       		.byte	0x1b
 1514 06c3 AC060000 		.4byte	0x6ac
 1515 06c7 05       		.uleb128 0x5
 1516 06c8 03       		.byte	0x3
 1517 06c9 00000000 		.4byte	http_route
 1518 06cd 19       		.uleb128 0x19
 1519 06ce 10040000 		.4byte	.LASF93
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 32


 1520 06d2 09       		.byte	0x9
 1521 06d3 42       		.byte	0x42
 1522 06d4 4C030000 		.4byte	0x34c
 1523 06d8 05       		.uleb128 0x5
 1524 06d9 03       		.byte	0x3
 1525 06da 00000000 		.4byte	system_info
 1526 06de 19       		.uleb128 0x19
 1527 06df 4C030000 		.4byte	.LASF94
 1528 06e3 09       		.byte	0x9
 1529 06e4 54       		.byte	0x54
 1530 06e5 88030000 		.4byte	0x388
 1531 06e9 05       		.uleb128 0x5
 1532 06ea 03       		.byte	0x3
 1533 06eb 00000000 		.4byte	system_settings
 1534 06ef 19       		.uleb128 0x19
 1535 06f0 49020000 		.4byte	.LASF95
 1536 06f4 09       		.byte	0x9
 1537 06f5 70       		.byte	0x70
 1538 06f6 15030000 		.4byte	0x315
 1539 06fa 05       		.uleb128 0x5
 1540 06fb 03       		.byte	0x3
 1541 06fc 00000000 		.4byte	alarmMeasure
 1542 0700 19       		.uleb128 0x19
 1543 0701 9D030000 		.4byte	.LASF96
 1544 0705 09       		.byte	0x9
 1545 0706 71       		.byte	0x71
 1546 0707 B9000000 		.4byte	0xb9
 1547 070b 05       		.uleb128 0x5
 1548 070c 03       		.byte	0x3
 1549 070d 00000000 		.4byte	timeToMeasure
 1550 0711 19       		.uleb128 0x19
 1551 0712 AA020000 		.4byte	.LASF97
 1552 0716 09       		.byte	0x9
 1553 0717 72       		.byte	0x72
 1554 0718 15030000 		.4byte	0x315
 1555 071c 05       		.uleb128 0x5
 1556 071d 03       		.byte	0x3
 1557 071e 00000000 		.4byte	alarmSync
 1558 0722 19       		.uleb128 0x19
 1559 0723 F9050000 		.4byte	.LASF98
 1560 0727 09       		.byte	0x9
 1561 0728 73       		.byte	0x73
 1562 0729 B9000000 		.4byte	0xb9
 1563 072d 05       		.uleb128 0x5
 1564 072e 03       		.byte	0x3
 1565 072f 00000000 		.4byte	timeToSync
 1566 0733 19       		.uleb128 0x19
 1567 0734 70040000 		.4byte	.LASF99
 1568 0738 09       		.byte	0x9
 1569 0739 74       		.byte	0x74
 1570 073a B9000000 		.4byte	0xb9
 1571 073e 05       		.uleb128 0x5
 1572 073f 03       		.byte	0x3
 1573 0740 00000000 		.4byte	timeToSycnRemoteParams
 1574 0744 1B       		.uleb128 0x1b
 1575 0745 68657900 		.ascii	"hey\000"
 1576 0749 09       		.byte	0x9
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 33


 1577 074a 75       		.byte	0x75
 1578 074b B9000000 		.4byte	0xb9
 1579 074f 05       		.uleb128 0x5
 1580 0750 03       		.byte	0x3
 1581 0751 00000000 		.4byte	hey
 1582 0755 19       		.uleb128 0x19
 1583 0756 3E010000 		.4byte	.LASF100
 1584 075a 09       		.byte	0x9
 1585 075b 79       		.byte	0x79
 1586 075c 15030000 		.4byte	0x315
 1587 0760 05       		.uleb128 0x5
 1588 0761 03       		.byte	0x3
 1589 0762 00000000 		.4byte	alarmAppLED
 1590 0766 19       		.uleb128 0x19
 1591 0767 58050000 		.4byte	.LASF101
 1592 076b 09       		.byte	0x9
 1593 076c 7A       		.byte	0x7a
 1594 076d B9000000 		.4byte	0xb9
 1595 0771 05       		.uleb128 0x5
 1596 0772 03       		.byte	0x3
 1597 0773 00000000 		.4byte	timeToAppLED
 1598 0777 19       		.uleb128 0x19
 1599 0778 0A050000 		.4byte	.LASF102
 1600 077c 09       		.byte	0x9
 1601 077d 7C       		.byte	0x7c
 1602 077e 15030000 		.4byte	0x315
 1603 0782 05       		.uleb128 0x5
 1604 0783 03       		.byte	0x3
 1605 0784 00000000 		.4byte	alarmLevelSensor
 1606 0788 19       		.uleb128 0x19
 1607 0789 93050000 		.4byte	.LASF103
 1608 078d 09       		.byte	0x9
 1609 078e 7D       		.byte	0x7d
 1610 078f B9000000 		.4byte	0xb9
 1611 0793 05       		.uleb128 0x5
 1612 0794 03       		.byte	0x3
 1613 0795 00000000 		.4byte	timetoLevelSensor
 1614 0799 19       		.uleb128 0x19
 1615 079a 5A010000 		.4byte	.LASF104
 1616 079e 09       		.byte	0x9
 1617 079f 7F       		.byte	0x7f
 1618 07a0 15030000 		.4byte	0x315
 1619 07a4 05       		.uleb128 0x5
 1620 07a5 03       		.byte	0x3
 1621 07a6 00000000 		.4byte	alarmDownstreamLevelSensor
 1622 07aa 19       		.uleb128 0x19
 1623 07ab 56020000 		.4byte	.LASF105
 1624 07af 09       		.byte	0x9
 1625 07b0 80       		.byte	0x80
 1626 07b1 B9000000 		.4byte	0xb9
 1627 07b5 05       		.uleb128 0x5
 1628 07b6 03       		.byte	0x3
 1629 07b7 00000000 		.4byte	timetoDownstreamLevelSensor
 1630 07bb 19       		.uleb128 0x19
 1631 07bc 7A000000 		.4byte	.LASF106
 1632 07c0 01       		.byte	0x1
 1633 07c1 0D       		.byte	0xd
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 34


 1634 07c2 39050000 		.4byte	0x539
 1635 07c6 05       		.uleb128 0x5
 1636 07c7 03       		.byte	0x3
 1637 07c8 00000000 		.4byte	SD_dir
 1638 07cc 08       		.uleb128 0x8
 1639 07cd 8C000000 		.4byte	0x8c
 1640 07d1 DD070000 		.4byte	0x7dd
 1641 07d5 1A       		.uleb128 0x1a
 1642 07d6 7F000000 		.4byte	0x7f
 1643 07da B70B     		.2byte	0xbb7
 1644 07dc 00       		.byte	0
 1645 07dd 19       		.uleb128 0x19
 1646 07de 08040000 		.4byte	.LASF107
 1647 07e2 01       		.byte	0x1
 1648 07e3 0E       		.byte	0xe
 1649 07e4 CC070000 		.4byte	0x7cc
 1650 07e8 05       		.uleb128 0x5
 1651 07e9 03       		.byte	0x3
 1652 07ea 00000000 		.4byte	SD_body
 1653 07ee 08       		.uleb128 0x8
 1654 07ef 8C000000 		.4byte	0x8c
 1655 07f3 FE070000 		.4byte	0x7fe
 1656 07f7 09       		.uleb128 0x9
 1657 07f8 7F000000 		.4byte	0x7f
 1658 07fc 1D       		.byte	0x1d
 1659 07fd 00       		.byte	0
 1660 07fe 19       		.uleb128 0x19
 1661 07ff 4C050000 		.4byte	.LASF108
 1662 0803 01       		.byte	0x1
 1663 0804 0F       		.byte	0xf
 1664 0805 EE070000 		.4byte	0x7ee
 1665 0809 05       		.uleb128 0x5
 1666 080a 03       		.byte	0x3
 1667 080b 00000000 		.4byte	SD_filename
 1668 080f 08       		.uleb128 0x8
 1669 0810 8C000000 		.4byte	0x8c
 1670 0814 1F080000 		.4byte	0x81f
 1671 0818 09       		.uleb128 0x9
 1672 0819 7F000000 		.4byte	0x7f
 1673 081d 04       		.byte	0x4
 1674 081e 00       		.byte	0
 1675 081f 19       		.uleb128 0x19
 1676 0820 A0010000 		.4byte	.LASF109
 1677 0824 01       		.byte	0x1
 1678 0825 10       		.byte	0x10
 1679 0826 0F080000 		.4byte	0x80f
 1680 082a 05       		.uleb128 0x5
 1681 082b 03       		.byte	0x3
 1682 082c 00000000 		.4byte	SD_filemode
 1683 0830 00       		.byte	0
 1684              		.section	.debug_abbrev,"",%progbits
 1685              	.Ldebug_abbrev0:
 1686 0000 01       		.uleb128 0x1
 1687 0001 11       		.uleb128 0x11
 1688 0002 01       		.byte	0x1
 1689 0003 25       		.uleb128 0x25
 1690 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 35


 1691 0005 13       		.uleb128 0x13
 1692 0006 0B       		.uleb128 0xb
 1693 0007 03       		.uleb128 0x3
 1694 0008 0E       		.uleb128 0xe
 1695 0009 1B       		.uleb128 0x1b
 1696 000a 0E       		.uleb128 0xe
 1697 000b 55       		.uleb128 0x55
 1698 000c 17       		.uleb128 0x17
 1699 000d 11       		.uleb128 0x11
 1700 000e 01       		.uleb128 0x1
 1701 000f 10       		.uleb128 0x10
 1702 0010 17       		.uleb128 0x17
 1703 0011 00       		.byte	0
 1704 0012 00       		.byte	0
 1705 0013 02       		.uleb128 0x2
 1706 0014 24       		.uleb128 0x24
 1707 0015 00       		.byte	0
 1708 0016 0B       		.uleb128 0xb
 1709 0017 0B       		.uleb128 0xb
 1710 0018 3E       		.uleb128 0x3e
 1711 0019 0B       		.uleb128 0xb
 1712 001a 03       		.uleb128 0x3
 1713 001b 0E       		.uleb128 0xe
 1714 001c 00       		.byte	0
 1715 001d 00       		.byte	0
 1716 001e 03       		.uleb128 0x3
 1717 001f 16       		.uleb128 0x16
 1718 0020 00       		.byte	0
 1719 0021 03       		.uleb128 0x3
 1720 0022 0E       		.uleb128 0xe
 1721 0023 3A       		.uleb128 0x3a
 1722 0024 0B       		.uleb128 0xb
 1723 0025 3B       		.uleb128 0x3b
 1724 0026 0B       		.uleb128 0xb
 1725 0027 49       		.uleb128 0x49
 1726 0028 13       		.uleb128 0x13
 1727 0029 00       		.byte	0
 1728 002a 00       		.byte	0
 1729 002b 04       		.uleb128 0x4
 1730 002c 24       		.uleb128 0x24
 1731 002d 00       		.byte	0
 1732 002e 0B       		.uleb128 0xb
 1733 002f 0B       		.uleb128 0xb
 1734 0030 3E       		.uleb128 0x3e
 1735 0031 0B       		.uleb128 0xb
 1736 0032 03       		.uleb128 0x3
 1737 0033 08       		.uleb128 0x8
 1738 0034 00       		.byte	0
 1739 0035 00       		.byte	0
 1740 0036 05       		.uleb128 0x5
 1741 0037 0F       		.uleb128 0xf
 1742 0038 00       		.byte	0
 1743 0039 0B       		.uleb128 0xb
 1744 003a 0B       		.uleb128 0xb
 1745 003b 00       		.byte	0
 1746 003c 00       		.byte	0
 1747 003d 06       		.uleb128 0x6
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 36


 1748 003e 0F       		.uleb128 0xf
 1749 003f 00       		.byte	0
 1750 0040 0B       		.uleb128 0xb
 1751 0041 0B       		.uleb128 0xb
 1752 0042 49       		.uleb128 0x49
 1753 0043 13       		.uleb128 0x13
 1754 0044 00       		.byte	0
 1755 0045 00       		.byte	0
 1756 0046 07       		.uleb128 0x7
 1757 0047 26       		.uleb128 0x26
 1758 0048 00       		.byte	0
 1759 0049 49       		.uleb128 0x49
 1760 004a 13       		.uleb128 0x13
 1761 004b 00       		.byte	0
 1762 004c 00       		.byte	0
 1763 004d 08       		.uleb128 0x8
 1764 004e 01       		.uleb128 0x1
 1765 004f 01       		.byte	0x1
 1766 0050 49       		.uleb128 0x49
 1767 0051 13       		.uleb128 0x13
 1768 0052 01       		.uleb128 0x1
 1769 0053 13       		.uleb128 0x13
 1770 0054 00       		.byte	0
 1771 0055 00       		.byte	0
 1772 0056 09       		.uleb128 0x9
 1773 0057 21       		.uleb128 0x21
 1774 0058 00       		.byte	0
 1775 0059 49       		.uleb128 0x49
 1776 005a 13       		.uleb128 0x13
 1777 005b 2F       		.uleb128 0x2f
 1778 005c 0B       		.uleb128 0xb
 1779 005d 00       		.byte	0
 1780 005e 00       		.byte	0
 1781 005f 0A       		.uleb128 0xa
 1782 0060 16       		.uleb128 0x16
 1783 0061 00       		.byte	0
 1784 0062 03       		.uleb128 0x3
 1785 0063 0E       		.uleb128 0xe
 1786 0064 3A       		.uleb128 0x3a
 1787 0065 0B       		.uleb128 0xb
 1788 0066 3B       		.uleb128 0x3b
 1789 0067 05       		.uleb128 0x5
 1790 0068 49       		.uleb128 0x49
 1791 0069 13       		.uleb128 0x13
 1792 006a 00       		.byte	0
 1793 006b 00       		.byte	0
 1794 006c 0B       		.uleb128 0xb
 1795 006d 26       		.uleb128 0x26
 1796 006e 00       		.byte	0
 1797 006f 00       		.byte	0
 1798 0070 00       		.byte	0
 1799 0071 0C       		.uleb128 0xc
 1800 0072 13       		.uleb128 0x13
 1801 0073 01       		.byte	0x1
 1802 0074 0B       		.uleb128 0xb
 1803 0075 05       		.uleb128 0x5
 1804 0076 3A       		.uleb128 0x3a
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 37


 1805 0077 0B       		.uleb128 0xb
 1806 0078 3B       		.uleb128 0x3b
 1807 0079 0B       		.uleb128 0xb
 1808 007a 01       		.uleb128 0x1
 1809 007b 13       		.uleb128 0x13
 1810 007c 00       		.byte	0
 1811 007d 00       		.byte	0
 1812 007e 0D       		.uleb128 0xd
 1813 007f 0D       		.uleb128 0xd
 1814 0080 00       		.byte	0
 1815 0081 03       		.uleb128 0x3
 1816 0082 0E       		.uleb128 0xe
 1817 0083 3A       		.uleb128 0x3a
 1818 0084 0B       		.uleb128 0xb
 1819 0085 3B       		.uleb128 0x3b
 1820 0086 0B       		.uleb128 0xb
 1821 0087 49       		.uleb128 0x49
 1822 0088 13       		.uleb128 0x13
 1823 0089 38       		.uleb128 0x38
 1824 008a 0B       		.uleb128 0xb
 1825 008b 00       		.byte	0
 1826 008c 00       		.byte	0
 1827 008d 0E       		.uleb128 0xe
 1828 008e 13       		.uleb128 0x13
 1829 008f 00       		.byte	0
 1830 0090 03       		.uleb128 0x3
 1831 0091 0E       		.uleb128 0xe
 1832 0092 3C       		.uleb128 0x3c
 1833 0093 19       		.uleb128 0x19
 1834 0094 00       		.byte	0
 1835 0095 00       		.byte	0
 1836 0096 0F       		.uleb128 0xf
 1837 0097 13       		.uleb128 0x13
 1838 0098 01       		.byte	0x1
 1839 0099 0B       		.uleb128 0xb
 1840 009a 0B       		.uleb128 0xb
 1841 009b 3A       		.uleb128 0x3a
 1842 009c 0B       		.uleb128 0xb
 1843 009d 3B       		.uleb128 0x3b
 1844 009e 0B       		.uleb128 0xb
 1845 009f 01       		.uleb128 0x1
 1846 00a0 13       		.uleb128 0x13
 1847 00a1 00       		.byte	0
 1848 00a2 00       		.byte	0
 1849 00a3 10       		.uleb128 0x10
 1850 00a4 0D       		.uleb128 0xd
 1851 00a5 00       		.byte	0
 1852 00a6 03       		.uleb128 0x3
 1853 00a7 08       		.uleb128 0x8
 1854 00a8 3A       		.uleb128 0x3a
 1855 00a9 0B       		.uleb128 0xb
 1856 00aa 3B       		.uleb128 0x3b
 1857 00ab 0B       		.uleb128 0xb
 1858 00ac 49       		.uleb128 0x49
 1859 00ad 13       		.uleb128 0x13
 1860 00ae 38       		.uleb128 0x38
 1861 00af 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 38


 1862 00b0 00       		.byte	0
 1863 00b1 00       		.byte	0
 1864 00b2 11       		.uleb128 0x11
 1865 00b3 35       		.uleb128 0x35
 1866 00b4 00       		.byte	0
 1867 00b5 49       		.uleb128 0x49
 1868 00b6 13       		.uleb128 0x13
 1869 00b7 00       		.byte	0
 1870 00b8 00       		.byte	0
 1871 00b9 12       		.uleb128 0x12
 1872 00ba 2E       		.uleb128 0x2e
 1873 00bb 00       		.byte	0
 1874 00bc 3F       		.uleb128 0x3f
 1875 00bd 19       		.uleb128 0x19
 1876 00be 03       		.uleb128 0x3
 1877 00bf 0E       		.uleb128 0xe
 1878 00c0 3A       		.uleb128 0x3a
 1879 00c1 0B       		.uleb128 0xb
 1880 00c2 3B       		.uleb128 0x3b
 1881 00c3 0B       		.uleb128 0xb
 1882 00c4 11       		.uleb128 0x11
 1883 00c5 01       		.uleb128 0x1
 1884 00c6 12       		.uleb128 0x12
 1885 00c7 06       		.uleb128 0x6
 1886 00c8 40       		.uleb128 0x40
 1887 00c9 18       		.uleb128 0x18
 1888 00ca 9742     		.uleb128 0x2117
 1889 00cc 19       		.uleb128 0x19
 1890 00cd 00       		.byte	0
 1891 00ce 00       		.byte	0
 1892 00cf 13       		.uleb128 0x13
 1893 00d0 2E       		.uleb128 0x2e
 1894 00d1 01       		.byte	0x1
 1895 00d2 3F       		.uleb128 0x3f
 1896 00d3 19       		.uleb128 0x19
 1897 00d4 03       		.uleb128 0x3
 1898 00d5 0E       		.uleb128 0xe
 1899 00d6 3A       		.uleb128 0x3a
 1900 00d7 0B       		.uleb128 0xb
 1901 00d8 3B       		.uleb128 0x3b
 1902 00d9 0B       		.uleb128 0xb
 1903 00da 27       		.uleb128 0x27
 1904 00db 19       		.uleb128 0x19
 1905 00dc 49       		.uleb128 0x49
 1906 00dd 13       		.uleb128 0x13
 1907 00de 11       		.uleb128 0x11
 1908 00df 01       		.uleb128 0x1
 1909 00e0 12       		.uleb128 0x12
 1910 00e1 06       		.uleb128 0x6
 1911 00e2 40       		.uleb128 0x40
 1912 00e3 18       		.uleb128 0x18
 1913 00e4 9642     		.uleb128 0x2116
 1914 00e6 19       		.uleb128 0x19
 1915 00e7 01       		.uleb128 0x1
 1916 00e8 13       		.uleb128 0x13
 1917 00e9 00       		.byte	0
 1918 00ea 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 39


 1919 00eb 14       		.uleb128 0x14
 1920 00ec 05       		.uleb128 0x5
 1921 00ed 00       		.byte	0
 1922 00ee 03       		.uleb128 0x3
 1923 00ef 0E       		.uleb128 0xe
 1924 00f0 3A       		.uleb128 0x3a
 1925 00f1 0B       		.uleb128 0xb
 1926 00f2 3B       		.uleb128 0x3b
 1927 00f3 0B       		.uleb128 0xb
 1928 00f4 49       		.uleb128 0x49
 1929 00f5 13       		.uleb128 0x13
 1930 00f6 02       		.uleb128 0x2
 1931 00f7 18       		.uleb128 0x18
 1932 00f8 00       		.byte	0
 1933 00f9 00       		.byte	0
 1934 00fa 15       		.uleb128 0x15
 1935 00fb 34       		.uleb128 0x34
 1936 00fc 00       		.byte	0
 1937 00fd 03       		.uleb128 0x3
 1938 00fe 0E       		.uleb128 0xe
 1939 00ff 3A       		.uleb128 0x3a
 1940 0100 0B       		.uleb128 0xb
 1941 0101 3B       		.uleb128 0x3b
 1942 0102 0B       		.uleb128 0xb
 1943 0103 49       		.uleb128 0x49
 1944 0104 13       		.uleb128 0x13
 1945 0105 02       		.uleb128 0x2
 1946 0106 18       		.uleb128 0x18
 1947 0107 00       		.byte	0
 1948 0108 00       		.byte	0
 1949 0109 16       		.uleb128 0x16
 1950 010a 2E       		.uleb128 0x2e
 1951 010b 00       		.byte	0
 1952 010c 3F       		.uleb128 0x3f
 1953 010d 19       		.uleb128 0x19
 1954 010e 03       		.uleb128 0x3
 1955 010f 0E       		.uleb128 0xe
 1956 0110 3A       		.uleb128 0x3a
 1957 0111 0B       		.uleb128 0xb
 1958 0112 3B       		.uleb128 0x3b
 1959 0113 0B       		.uleb128 0xb
 1960 0114 11       		.uleb128 0x11
 1961 0115 01       		.uleb128 0x1
 1962 0116 12       		.uleb128 0x12
 1963 0117 06       		.uleb128 0x6
 1964 0118 40       		.uleb128 0x40
 1965 0119 18       		.uleb128 0x18
 1966 011a 9642     		.uleb128 0x2116
 1967 011c 19       		.uleb128 0x19
 1968 011d 00       		.byte	0
 1969 011e 00       		.byte	0
 1970 011f 17       		.uleb128 0x17
 1971 0120 2E       		.uleb128 0x2e
 1972 0121 01       		.byte	0x1
 1973 0122 3F       		.uleb128 0x3f
 1974 0123 19       		.uleb128 0x19
 1975 0124 03       		.uleb128 0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 40


 1976 0125 0E       		.uleb128 0xe
 1977 0126 3A       		.uleb128 0x3a
 1978 0127 0B       		.uleb128 0xb
 1979 0128 3B       		.uleb128 0x3b
 1980 0129 0B       		.uleb128 0xb
 1981 012a 49       		.uleb128 0x49
 1982 012b 13       		.uleb128 0x13
 1983 012c 11       		.uleb128 0x11
 1984 012d 01       		.uleb128 0x1
 1985 012e 12       		.uleb128 0x12
 1986 012f 06       		.uleb128 0x6
 1987 0130 40       		.uleb128 0x40
 1988 0131 18       		.uleb128 0x18
 1989 0132 9642     		.uleb128 0x2116
 1990 0134 19       		.uleb128 0x19
 1991 0135 01       		.uleb128 0x1
 1992 0136 13       		.uleb128 0x13
 1993 0137 00       		.byte	0
 1994 0138 00       		.byte	0
 1995 0139 18       		.uleb128 0x18
 1996 013a 34       		.uleb128 0x34
 1997 013b 00       		.byte	0
 1998 013c 03       		.uleb128 0x3
 1999 013d 0E       		.uleb128 0xe
 2000 013e 3A       		.uleb128 0x3a
 2001 013f 0B       		.uleb128 0xb
 2002 0140 3B       		.uleb128 0x3b
 2003 0141 05       		.uleb128 0x5
 2004 0142 49       		.uleb128 0x49
 2005 0143 13       		.uleb128 0x13
 2006 0144 3F       		.uleb128 0x3f
 2007 0145 19       		.uleb128 0x19
 2008 0146 3C       		.uleb128 0x3c
 2009 0147 19       		.uleb128 0x19
 2010 0148 00       		.byte	0
 2011 0149 00       		.byte	0
 2012 014a 19       		.uleb128 0x19
 2013 014b 34       		.uleb128 0x34
 2014 014c 00       		.byte	0
 2015 014d 03       		.uleb128 0x3
 2016 014e 0E       		.uleb128 0xe
 2017 014f 3A       		.uleb128 0x3a
 2018 0150 0B       		.uleb128 0xb
 2019 0151 3B       		.uleb128 0x3b
 2020 0152 0B       		.uleb128 0xb
 2021 0153 49       		.uleb128 0x49
 2022 0154 13       		.uleb128 0x13
 2023 0155 3F       		.uleb128 0x3f
 2024 0156 19       		.uleb128 0x19
 2025 0157 02       		.uleb128 0x2
 2026 0158 18       		.uleb128 0x18
 2027 0159 00       		.byte	0
 2028 015a 00       		.byte	0
 2029 015b 1A       		.uleb128 0x1a
 2030 015c 21       		.uleb128 0x21
 2031 015d 00       		.byte	0
 2032 015e 49       		.uleb128 0x49
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 41


 2033 015f 13       		.uleb128 0x13
 2034 0160 2F       		.uleb128 0x2f
 2035 0161 05       		.uleb128 0x5
 2036 0162 00       		.byte	0
 2037 0163 00       		.byte	0
 2038 0164 1B       		.uleb128 0x1b
 2039 0165 34       		.uleb128 0x34
 2040 0166 00       		.byte	0
 2041 0167 03       		.uleb128 0x3
 2042 0168 08       		.uleb128 0x8
 2043 0169 3A       		.uleb128 0x3a
 2044 016a 0B       		.uleb128 0xb
 2045 016b 3B       		.uleb128 0x3b
 2046 016c 0B       		.uleb128 0xb
 2047 016d 49       		.uleb128 0x49
 2048 016e 13       		.uleb128 0x13
 2049 016f 3F       		.uleb128 0x3f
 2050 0170 19       		.uleb128 0x19
 2051 0171 02       		.uleb128 0x2
 2052 0172 18       		.uleb128 0x18
 2053 0173 00       		.byte	0
 2054 0174 00       		.byte	0
 2055 0175 00       		.byte	0
 2056              		.section	.debug_aranges,"",%progbits
 2057 0000 54000000 		.4byte	0x54
 2058 0004 0200     		.2byte	0x2
 2059 0006 00000000 		.4byte	.Ldebug_info0
 2060 000a 04       		.byte	0x4
 2061 000b 00       		.byte	0
 2062 000c 0000     		.2byte	0
 2063 000e 0000     		.2byte	0
 2064 0010 00000000 		.4byte	.LFB64
 2065 0014 0C000000 		.4byte	.LFE64-.LFB64
 2066 0018 00000000 		.4byte	.LFB65
 2067 001c 40000000 		.4byte	.LFE65-.LFB65
 2068 0020 00000000 		.4byte	.LFB66
 2069 0024 2C000000 		.4byte	.LFE66-.LFB66
 2070 0028 00000000 		.4byte	.LFB67
 2071 002c 6C000000 		.4byte	.LFE67-.LFB67
 2072 0030 00000000 		.4byte	.LFB68
 2073 0034 68000000 		.4byte	.LFE68-.LFB68
 2074 0038 00000000 		.4byte	.LFB69
 2075 003c 16000000 		.4byte	.LFE69-.LFB69
 2076 0040 00000000 		.4byte	.LFB70
 2077 0044 2E000000 		.4byte	.LFE70-.LFB70
 2078 0048 00000000 		.4byte	.LFB71
 2079 004c 20010000 		.4byte	.LFE71-.LFB71
 2080 0050 00000000 		.4byte	0
 2081 0054 00000000 		.4byte	0
 2082              		.section	.debug_ranges,"",%progbits
 2083              	.Ldebug_ranges0:
 2084 0000 00000000 		.4byte	.LFB64
 2085 0004 0C000000 		.4byte	.LFE64
 2086 0008 00000000 		.4byte	.LFB65
 2087 000c 40000000 		.4byte	.LFE65
 2088 0010 00000000 		.4byte	.LFB66
 2089 0014 2C000000 		.4byte	.LFE66
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 42


 2090 0018 00000000 		.4byte	.LFB67
 2091 001c 6C000000 		.4byte	.LFE67
 2092 0020 00000000 		.4byte	.LFB68
 2093 0024 68000000 		.4byte	.LFE68
 2094 0028 00000000 		.4byte	.LFB69
 2095 002c 16000000 		.4byte	.LFE69
 2096 0030 00000000 		.4byte	.LFB70
 2097 0034 2E000000 		.4byte	.LFE70
 2098 0038 00000000 		.4byte	.LFB71
 2099 003c 20010000 		.4byte	.LFE71
 2100 0040 00000000 		.4byte	0
 2101 0044 00000000 		.4byte	0
 2102              		.section	.debug_line,"",%progbits
 2103              	.Ldebug_line0:
 2104 0000 B3020000 		.section	.debug_str,"MS",%progbits,1
 2104      0200EC01 
 2104      00000201 
 2104      FB0E0D00 
 2104      01010101 
 2105              	.LASF29:
 2106 0000 6D6F6465 		.ascii	"model_id\000"
 2106      6C5F6964 
 2106      00
 2107              	.LASF28:
 2108 0009 73696D5F 		.ascii	"sim_id\000"
 2108      696400
 2109              	.LASF69:
 2110 0010 53445F72 		.ascii	"SD_read\000"
 2110      65616400 
 2111              	.LASF67:
 2112 0018 70446174 		.ascii	"pData\000"
 2112      6100
 2113              	.LASF60:
 2114 001e 7379735F 		.ascii	"sys_settings_t\000"
 2114      73657474 
 2114      696E6773 
 2114      5F7400
 2115              	.LASF51:
 2116 002d 63757272 		.ascii	"currentCountDownValue\000"
 2116      656E7443 
 2116      6F756E74 
 2116      446F776E 
 2116      56616C75 
 2117              	.LASF50:
 2118 0043 636F756E 		.ascii	"countDownValue\000"
 2118      74446F77 
 2118      6E56616C 
 2118      756500
 2119              	.LASF2:
 2120 0052 73686F72 		.ascii	"short int\000"
 2120      7420696E 
 2120      7400
 2121              	.LASF10:
 2122 005c 73697A65 		.ascii	"sizetype\000"
 2122      74797065 
 2122      00
 2123              	.LASF113:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 43


 2124 0065 53445F63 		.ascii	"SD_card_test\000"
 2124      6172645F 
 2124      74657374 
 2124      00
 2125              	.LASF58:
 2126 0072 65705F68 		.ascii	"ep_host\000"
 2126      6F737400 
 2127              	.LASF106:
 2128 007a 53445F64 		.ascii	"SD_dir\000"
 2128      697200
 2129              	.LASF111:
 2130 0081 73645F63 		.ascii	"sd_card.c\000"
 2130      6172642E 
 2130      6300
 2131              	.LASF110:
 2132 008b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2132      43313120 
 2132      352E342E 
 2132      31203230 
 2132      31363036 
 2133 00be 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2133      20726576 
 2133      6973696F 
 2133      6E203233 
 2133      37373135 
 2134 00f1 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2134      66756E63 
 2134      74696F6E 
 2134      2D736563 
 2134      74696F6E 
 2135              	.LASF75:
 2136 0119 64617461 		.ascii	"data\000"
 2136      00
 2137              	.LASF45:
 2138 011e 4170705F 		.ascii	"App_LED_freq\000"
 2138      4C45445F 
 2138      66726571 
 2138      00
 2139              	.LASF56:
 2140 012b 63686970 		.ascii	"chip_uniqueId\000"
 2140      5F756E69 
 2140      71756549 
 2140      6400
 2141              	.LASF34:
 2142 0139 65636E6F 		.ascii	"ecno\000"
 2142      00
 2143              	.LASF100:
 2144 013e 616C6172 		.ascii	"alarmAppLED\000"
 2144      6D417070 
 2144      4C454400 
 2145              	.LASF70:
 2146 014a 4E756D42 		.ascii	"NumBytes\000"
 2146      79746573 
 2146      00
 2147              	.LASF15:
 2148 0153 75696E74 		.ascii	"uint16\000"
 2148      313600
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 44


 2149              	.LASF104:
 2150 015a 616C6172 		.ascii	"alarmDownstreamLevelSensor\000"
 2150      6D446F77 
 2150      6E737472 
 2150      65616D4C 
 2150      6576656C 
 2151              	.LASF82:
 2152 0175 64617461 		.ascii	"dataPointsInStack\000"
 2152      506F696E 
 2152      7473496E 
 2152      53746163 
 2152      6B00
 2153              	.LASF14:
 2154 0187 75696E74 		.ascii	"uint8\000"
 2154      3800
 2155              	.LASF77:
 2156 018d 6C657665 		.ascii	"level_sensor_inbox\000"
 2156      6C5F7365 
 2156      6E736F72 
 2156      5F696E62 
 2156      6F7800
 2157              	.LASF109:
 2158 01a0 53445F66 		.ascii	"SD_filemode\000"
 2158      696C656D 
 2158      6F646500 
 2159              	.LASF16:
 2160 01ac 696E7431 		.ascii	"int16\000"
 2160      3600
 2161              	.LASF26:
 2162 01b2 74696D65 		.ascii	"timeStamp\000"
 2162      5374616D 
 2162      7000
 2163              	.LASF65:
 2164 01bc 53445F77 		.ascii	"SD_write\000"
 2164      72697465 
 2164      00
 2165              	.LASF61:
 2166 01c5 53445F6D 		.ascii	"SD_mkdir\000"
 2166      6B646972 
 2166      00
 2167              	.LASF83:
 2168 01ce 64617461 		.ascii	"dataPointsInStackDesired\000"
 2168      506F696E 
 2168      7473496E 
 2168      53746163 
 2168      6B446573 
 2169              	.LASF18:
 2170 01e7 666C6F61 		.ascii	"float\000"
 2170      7400
 2171              	.LASF78:
 2172 01ed 6C657665 		.ascii	"level_sensor_enabled\000"
 2172      6C5F7365 
 2172      6E736F72 
 2172      5F656E61 
 2172      626C6564 
 2173              	.LASF63:
 2174 0202 6469725F 		.ascii	"dir_name\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 45


 2174      6E616D65 
 2174      00
 2175              	.LASF6:
 2176 020b 6C6F6E67 		.ascii	"long long int\000"
 2176      206C6F6E 
 2176      6720696E 
 2176      7400
 2177              	.LASF11:
 2178 0219 63686172 		.ascii	"char\000"
 2178      00
 2179              	.LASF22:
 2180 021e 72656173 		.ascii	"reason\000"
 2180      6F6E00
 2181              	.LASF4:
 2182 0225 6C6F6E67 		.ascii	"long int\000"
 2182      20696E74 
 2182      00
 2183              	.LASF81:
 2184 022e 62756666 		.ascii	"buffer_overflow\000"
 2184      65725F6F 
 2184      76657266 
 2184      6C6F7700 
 2185              	.LASF55:
 2186 023e 6D6F6465 		.ascii	"modem_info\000"
 2186      6D5F696E 
 2186      666F00
 2187              	.LASF95:
 2188 0249 616C6172 		.ascii	"alarmMeasure\000"
 2188      6D4D6561 
 2188      73757265 
 2188      00
 2189              	.LASF105:
 2190 0256 74696D65 		.ascii	"timetoDownstreamLevelSensor\000"
 2190      746F446F 
 2190      776E7374 
 2190      7265616D 
 2190      4C657665 
 2191              	.LASF73:
 2192 0272 53445F70 		.ascii	"SD_power_down\000"
 2192      6F776572 
 2192      5F646F77 
 2192      6E00
 2193              	.LASF54:
 2194 0280 616C6172 		.ascii	"alarm\000"
 2194      6D00
 2195              	.LASF42:
 2196 0286 6D656173 		.ascii	"measure_time\000"
 2196      7572655F 
 2196      74696D65 
 2196      00
 2197              	.LASF46:
 2198 0293 4C657665 		.ascii	"Level_Sensor_freq\000"
 2198      6C5F5365 
 2198      6E736F72 
 2198      5F667265 
 2198      7100
 2199              	.LASF33:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 46


 2200 02a5 72736370 		.ascii	"rscp\000"
 2200      00
 2201              	.LASF97:
 2202 02aa 616C6172 		.ascii	"alarmSync\000"
 2202      6D53796E 
 2202      6300
 2203              	.LASF9:
 2204 02b4 6C6F6E67 		.ascii	"long double\000"
 2204      20646F75 
 2204      626C6500 
 2205              	.LASF89:
 2206 02c0 6170705F 		.ascii	"app_led_inbox\000"
 2206      6C65645F 
 2206      696E626F 
 2206      7800
 2207              	.LASF1:
 2208 02ce 756E7369 		.ascii	"unsigned char\000"
 2208      676E6564 
 2208      20636861 
 2208      7200
 2209              	.LASF24:
 2210 02dc 46535F46 		.ascii	"FS_FILE\000"
 2210      494C4500 
 2211              	.LASF36:
 2212 02e4 72737270 		.ascii	"rsrp\000"
 2212      00
 2213              	.LASF85:
 2214 02e9 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2214      6D5F7374 
 2214      6172745F 
 2214      74696D65 
 2214      5F737461 
 2215              	.LASF84:
 2216 0300 6D6F6465 		.ascii	"modem_state\000"
 2216      6D5F7374 
 2216      61746500 
 2217              	.LASF0:
 2218 030c 7369676E 		.ascii	"signed char\000"
 2218      65642063 
 2218      68617200 
 2219              	.LASF47:
 2220 0318 446F776E 		.ascii	"Downstream_Level_Sensor_freq\000"
 2220      73747265 
 2220      616D5F4C 
 2220      6576656C 
 2220      5F53656E 
 2221              	.LASF7:
 2222 0335 6C6F6E67 		.ascii	"long long unsigned int\000"
 2222      206C6F6E 
 2222      6720756E 
 2222      7369676E 
 2222      65642069 
 2223              	.LASF94:
 2224 034c 73797374 		.ascii	"system_settings\000"
 2224      656D5F73 
 2224      65747469 
 2224      6E677300 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 47


 2225              	.LASF68:
 2226 035c 7046696C 		.ascii	"pFile\000"
 2226      6500
 2227              	.LASF8:
 2228 0362 756E7369 		.ascii	"unsigned int\000"
 2228      676E6564 
 2228      20696E74 
 2228      00
 2229              	.LASF27:
 2230 036f 6B65795F 		.ascii	"key_value_t\000"
 2230      76616C75 
 2230      655F7400 
 2231              	.LASF32:
 2232 037b 72786C65 		.ascii	"rxlev\000"
 2232      7600
 2233              	.LASF43:
 2234 0381 73796E63 		.ascii	"sync_time\000"
 2234      5F74696D 
 2234      6500
 2235              	.LASF66:
 2236 038b 704D6F64 		.ascii	"pMode\000"
 2236      6500
 2237              	.LASF86:
 2238 0391 6D6F6465 		.ascii	"modem_stats\000"
 2238      6D5F7374 
 2238      61747300 
 2239              	.LASF96:
 2240 039d 74696D65 		.ascii	"timeToMeasure\000"
 2240      546F4D65 
 2240      61737572 
 2240      6500
 2241              	.LASF49:
 2242 03ab 75706461 		.ascii	"updatable_parameters_t\000"
 2242      7461626C 
 2242      655F7061 
 2242      72616D65 
 2242      74657273 
 2243              	.LASF41:
 2244 03c2 73696D5F 		.ascii	"sim_type\000"
 2244      74797065 
 2244      00
 2245              	.LASF57:
 2246 03cb 7379735F 		.ascii	"sys_info_t\000"
 2246      696E666F 
 2246      5F7400
 2247              	.LASF3:
 2248 03d6 73686F72 		.ascii	"short unsigned int\000"
 2248      7420756E 
 2248      7369676E 
 2248      65642069 
 2248      6E7400
 2249              	.LASF37:
 2250 03e9 74696D65 		.ascii	"time_to_network_connect\000"
 2250      5F746F5F 
 2250      6E657477 
 2250      6F726B5F 
 2250      636F6E6E 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 48


 2251              	.LASF21:
 2252 0401 73746174 		.ascii	"status\000"
 2252      757300
 2253              	.LASF107:
 2254 0408 53445F62 		.ascii	"SD_body\000"
 2254      6F647900 
 2255              	.LASF93:
 2256 0410 73797374 		.ascii	"system_info\000"
 2256      656D5F69 
 2256      6E666F00 
 2257              	.LASF38:
 2258 041c 74696D65 		.ascii	"time_to_acquire_ip\000"
 2258      5F746F5F 
 2258      61637175 
 2258      6972655F 
 2258      697000
 2259              	.LASF80:
 2260 042f 646F776E 		.ascii	"downstream_level_sensor_enabled\000"
 2260      73747265 
 2260      616D5F6C 
 2260      6576656C 
 2260      5F73656E 
 2261              	.LASF30:
 2262 044f 696D6569 		.ascii	"imei\000"
 2262      00
 2263              	.LASF13:
 2264 0454 696E7433 		.ascii	"int32_t\000"
 2264      325F7400 
 2265              	.LASF39:
 2266 045c 6D6F6465 		.ascii	"modem_stats_t\000"
 2266      6D5F7374 
 2266      6174735F 
 2266      7400
 2267              	.LASF48:
 2268 046a 5F426F6F 		.ascii	"_Bool\000"
 2268      6C00
 2269              	.LASF99:
 2270 0470 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2270      546F5379 
 2270      636E5265 
 2270      6D6F7465 
 2270      50617261 
 2271              	.LASF74:
 2272 0487 74657374 		.ascii	"test\000"
 2272      00
 2273              	.LASF35:
 2274 048c 72737271 		.ascii	"rsrq\000"
 2274      00
 2275              	.LASF112:
 2276 0491 433A5C55 		.ascii	"C:\\Users\\dantz\\Documents\\GitHub\\notoriOS\\noto"
 2276      73657273 
 2276      5C64616E 
 2276      747A5C44 
 2276      6F63756D 
 2277 04be 72694F53 		.ascii	"riOS.cydsn\000"
 2277      2E637964 
 2277      736E00
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 49


 2278              	.LASF92:
 2279 04c9 68747470 		.ascii	"http_route\000"
 2279      5F726F75 
 2279      746500
 2280              	.LASF5:
 2281 04d4 6C6F6E67 		.ascii	"long unsigned int\000"
 2281      20756E73 
 2281      69676E65 
 2281      6420696E 
 2281      7400
 2282              	.LASF17:
 2283 04e6 696E7433 		.ascii	"int32\000"
 2283      3200
 2284              	.LASF19:
 2285 04ec 646F7562 		.ascii	"double\000"
 2285      6C6500
 2286              	.LASF62:
 2287 04f3 53445F72 		.ascii	"SD_rmfile\000"
 2287      6D66696C 
 2287      6500
 2288              	.LASF76:
 2289 04fd 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2289      52784275 
 2289      66666572 
 2289      00
 2290              	.LASF102:
 2291 050a 616C6172 		.ascii	"alarmLevelSensor\000"
 2291      6D4C6576 
 2291      656C5365 
 2291      6E736F72 
 2291      00
 2292              	.LASF44:
 2293 051b 64656275 		.ascii	"debug_level\000"
 2293      675F6C65 
 2293      76656C00 
 2294              	.LASF31:
 2295 0527 6D6F6465 		.ascii	"modem_info_t\000"
 2295      6D5F696E 
 2295      666F5F74 
 2295      00
 2296              	.LASF52:
 2297 0534 636F756E 		.ascii	"countDownType\000"
 2297      74446F77 
 2297      6E547970 
 2297      6500
 2298              	.LASF12:
 2299 0542 5F5F696E 		.ascii	"__int32_t\000"
 2299      7433325F 
 2299      7400
 2300              	.LASF108:
 2301 054c 53445F66 		.ascii	"SD_filename\000"
 2301      696C656E 
 2301      616D6500 
 2302              	.LASF101:
 2303 0558 74696D65 		.ascii	"timeToAppLED\000"
 2303      546F4170 
 2303      704C4544 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 50


 2303      00
 2304              	.LASF23:
 2305 0565 74657374 		.ascii	"test_t\000"
 2305      5F7400
 2306              	.LASF71:
 2307 056c 53445F69 		.ascii	"SD_init\000"
 2307      6E697400 
 2308              	.LASF64:
 2309 0574 66696C65 		.ascii	"fileName\000"
 2309      4E616D65 
 2309      00
 2310              	.LASF20:
 2311 057d 74657374 		.ascii	"test_name\000"
 2311      5F6E616D 
 2311      6500
 2312              	.LASF72:
 2313 0587 53445F70 		.ascii	"SD_power_up\000"
 2313      6F776572 
 2313      5F757000 
 2314              	.LASF103:
 2315 0593 74696D65 		.ascii	"timetoLevelSensor\000"
 2315      746F4C65 
 2315      76656C53 
 2315      656E736F 
 2315      7200
 2316              	.LASF87:
 2317 05a5 75706461 		.ascii	"updatable_parameters\000"
 2317      7461626C 
 2317      655F7061 
 2317      72616D65 
 2317      74657273 
 2318              	.LASF59:
 2319 05ba 65705F70 		.ascii	"ep_port\000"
 2319      6F727400 
 2320              	.LASF25:
 2321 05c2 76616C75 		.ascii	"value\000"
 2321      6500
 2322              	.LASF91:
 2323 05c8 68747470 		.ascii	"http_body\000"
 2323      5F626F64 
 2323      7900
 2324              	.LASF40:
 2325 05d2 6E6F6465 		.ascii	"node_type\000"
 2325      5F747970 
 2325      6500
 2326              	.LASF88:
 2327 05dc 4170705F 		.ascii	"App_LED_enabled\000"
 2327      4C45445F 
 2327      656E6162 
 2327      6C656400 
 2328              	.LASF90:
 2329 05ec 68747470 		.ascii	"http_request\000"
 2329      5F726571 
 2329      75657374 
 2329      00
 2330              	.LASF98:
 2331 05f9 74696D65 		.ascii	"timeToSync\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccf32gMo.s 			page 51


 2331      546F5379 
 2331      6E6300
 2332              	.LASF53:
 2333 0604 636F756E 		.ascii	"countDownResetCondition\000"
 2333      74446F77 
 2333      6E526573 
 2333      6574436F 
 2333      6E646974 
 2334              	.LASF79:
 2335 061c 646F776E 		.ascii	"downstream_level_sensor_inbox\000"
 2335      73747265 
 2335      616D5F6C 
 2335      6576656C 
 2335      5F73656E 
 2336              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
