ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"sd_card.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	level_sensor_inbox,100,4
  20              		.comm	level_sensor_enabled,1,1
  21              		.comm	buffer_overflow,1,1
  22              		.comm	dataPointsInStack,2,2
  23              		.comm	dataPointsInStackDesired,2,2
  24              		.comm	data,6600,4
  25              		.comm	modem_state,1,1
  26              		.comm	modem_start_time_stamp,4,4
  27              		.comm	modem_info,60,4
  28              		.comm	modem_stats,32,4
  29              		.comm	updatable_parameters,7,4
  30              		.syntax unified
  31              		.global _printf_float
  32              		.thumb
  33              		.syntax unified
  34              		.comm	App_LED_enabled,1,1
  35              		.comm	app_led_inbox,100,4
  36              		.comm	http_request,10000,4
  37              		.comm	http_body,10000,4
  38              		.comm	http_route,200,4
  39              		.comm	system_info,28,4
  40              		.comm	system_settings,104,4
  41              		.comm	alarmMeasure,6,4
  42              		.comm	timeToMeasure,1,1
  43              		.comm	alarmSync,6,4
  44              		.comm	timeToSync,1,1
  45              		.comm	timeToSycnRemoteParams,1,1
  46              		.comm	hey,1,1
  47              		.comm	alarmAppLED,6,4
  48              		.comm	timeToAppLED,1,1
  49              		.comm	alarmLevelSensor,6,4
  50              		.comm	timetoLevelSensor,1,1
  51              		.global	SD_dir
  52              		.bss
  53              		.align	2
  54              		.type	SD_dir, %object
  55              		.size	SD_dir, 10
  56              	SD_dir:
  57 0000 00000000 		.space	10
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 2


  57      00000000 
  57      0000
  58              		.global	SD_body
  59 000a 0000     		.align	2
  60              		.type	SD_body, %object
  61              		.size	SD_body, 3000
  62              	SD_body:
  63 000c 00000000 		.space	3000
  63      00000000 
  63      00000000 
  63      00000000 
  63      00000000 
  64              		.global	SD_filename
  65              		.data
  66              		.align	2
  67              		.type	SD_filename, %object
  68              		.size	SD_filename, 30
  69              	SD_filename:
  70 0000 46696C65 		.ascii	"Filename.txt\000"
  70      6E616D65 
  70      2E747874 
  70      00
  71 000d 00000000 		.space	17
  71      00000000 
  71      00000000 
  71      00000000 
  71      00
  72              		.global	SD_filemode
  73 001e 0000     		.align	2
  74              		.type	SD_filemode, %object
  75              		.size	SD_filemode, 5
  76              	SD_filemode:
  77 0020 612B00   		.ascii	"a+\000"
  78 0023 0000     		.space	2
  79              		.section	.text.SD_init,"ax",%progbits
  80              		.align	2
  81              		.global	SD_init
  82              		.thumb
  83              		.thumb_func
  84              		.type	SD_init, %function
  85              	SD_init:
  86              	.LFB64:
  87              		.file 1 "sd_card.c"
   1:sd_card.c     **** /**
   2:sd_card.c     ****  * @file sdcard.c
   3:sd_card.c     ****  * @brief  Write to an SD card.
   4:sd_card.c     ****  * @author Brandon Wong
   5:sd_card.c     ****  * @version 0.0.01
   6:sd_card.c     ****  * @date 2019-05-15
   7:sd_card.c     ****  */
   8:sd_card.c     **** 
   9:sd_card.c     **** #include "sd_card.h"
  10:sd_card.c     **** #include "notoriOS.h"
  11:sd_card.c     **** 
  12:sd_card.c     **** // Preallocate card
  13:sd_card.c     **** char    SD_dir[10]      = {'\0'};
  14:sd_card.c     **** char    SD_body[3000]   = {'\0'};
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 3


  15:sd_card.c     **** char    SD_filename[30] = "Filename.txt";
  16:sd_card.c     **** char    SD_filemode[5]  = "a+";
  17:sd_card.c     **** 
  18:sd_card.c     **** 
  19:sd_card.c     **** void SD_power_up();
  20:sd_card.c     **** void SD_power_down();
  21:sd_card.c     **** 
  22:sd_card.c     **** ///NOTE -- IF SD CARD is not plugged it, the board will draw more power.
  23:sd_card.c     **** 
  24:sd_card.c     **** 
  25:sd_card.c     **** /** SD_init()
  26:sd_card.c     **** * @brief Initialize the file system for the SD card
  27:sd_card.c     **** * @param Null
  28:sd_card.c     **** * @return void
  29:sd_card.c     **** */
  30:sd_card.c     **** void SD_init()
  31:sd_card.c     **** {
  88              		.loc 1 31 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 1, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93 0000 80B4     		push	{r7}
  94              		.cfi_def_cfa_offset 4
  95              		.cfi_offset 7, -4
  96 0002 00AF     		add	r7, sp, #0
  97              		.cfi_def_cfa_register 7
  32:sd_card.c     ****     /* Uncomment to enable support for long file names
  33:sd_card.c     ****      * Note: To use long file names (LFN) support on PSoC 5LP devices, you must call
  34:sd_card.c     ****      * FS_FAT_SupportLFN(). For PSoC 3 devices, this feature is enabled by default.
  35:sd_card.c     ****      */
  36:sd_card.c     ****     //FS_FAT_SupportLFN();    
  37:sd_card.c     **** }
  98              		.loc 1 37 0
  99 0004 00BF     		nop
 100 0006 BD46     		mov	sp, r7
 101              		.cfi_def_cfa_register 13
 102              		@ sp needed
 103 0008 80BC     		pop	{r7}
 104              		.cfi_restore 7
 105              		.cfi_def_cfa_offset 0
 106 000a 7047     		bx	lr
 107              		.cfi_endproc
 108              	.LFE64:
 109              		.size	SD_init, .-SD_init
 110              		.section	.rodata
 111              		.align	2
 112              	.LC0:
 113 0000 252E3873 		.ascii	"%.8s\000"
 113      00
 114              		.section	.text.SD_mkdir,"ax",%progbits
 115              		.align	2
 116              		.global	SD_mkdir
 117              		.thumb
 118              		.thumb_func
 119              		.type	SD_mkdir, %function
 120              	SD_mkdir:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 4


 121              	.LFB65:
  38:sd_card.c     **** 
  39:sd_card.c     **** /**
  40:sd_card.c     ****  * @brief Make a directory on the SD card
  41:sd_card.c     ****  * @param dir_name is the name of the directory to create
  42:sd_card.c     ****  * @return 1u on success, 0u otherwise
  43:sd_card.c     ****  */
  44:sd_card.c     **** uint8 SD_mkdir(char* dir_name)
  45:sd_card.c     **** {
 122              		.loc 1 45 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 16
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126 0000 80B5     		push	{r7, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 7, -8
 129              		.cfi_offset 14, -4
 130 0002 84B0     		sub	sp, sp, #16
 131              		.cfi_def_cfa_offset 24
 132 0004 00AF     		add	r7, sp, #0
 133              		.cfi_def_cfa_register 7
 134 0006 7860     		str	r0, [r7, #4]
  46:sd_card.c     ****     uint8 status = 9; // Initialize to a value not 0 or -1
 135              		.loc 1 46 0
 136 0008 0923     		movs	r3, #9
 137 000a FB73     		strb	r3, [r7, #15]
  47:sd_card.c     ****     
  48:sd_card.c     ****     SD_power_up(); // Wakeup the SD Card component
 138              		.loc 1 48 0
 139 000c FFF7FEFF 		bl	SD_power_up
  49:sd_card.c     ****     // The snprintf() function formats and stores a series of characters and values in the array bu
  50:sd_card.c     ****     snprintf(SD_dir,sizeof(SD_dir),"%.8s",dir_name); 
 140              		.loc 1 50 0
 141 0010 7B68     		ldr	r3, [r7, #4]
 142 0012 094A     		ldr	r2, .L4
 143 0014 0A21     		movs	r1, #10
 144 0016 0948     		ldr	r0, .L4+4
 145 0018 FFF7FEFF 		bl	snprintf
  51:sd_card.c     ****     
  52:sd_card.c     ****     // FS_MKDir() creates a directory using FS.h.
  53:sd_card.c     ****     // Typecasting (1+FS_MkDir(SD_dir)) into an uint8 datatype
  54:sd_card.c     ****     // This makes it 0 if it's a failture, 1 if it's successful
  55:sd_card.c     ****     status = (uint8) ( 1+FS_MkDir(SD_dir) );
 146              		.loc 1 55 0
 147 001c 0748     		ldr	r0, .L4+4
 148 001e FFF7FEFF 		bl	FS_MkDir
 149 0022 0346     		mov	r3, r0
 150 0024 DBB2     		uxtb	r3, r3
 151 0026 0133     		adds	r3, r3, #1
 152 0028 FB73     		strb	r3, [r7, #15]
  56:sd_card.c     ****     
  57:sd_card.c     ****     SD_power_down(); // Turn off the SD Card
 153              		.loc 1 57 0
 154 002a FFF7FEFF 		bl	SD_power_down
  58:sd_card.c     ****     
  59:sd_card.c     ****     return status;
 155              		.loc 1 59 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 5


 156 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  60:sd_card.c     **** }
 157              		.loc 1 60 0
 158 0030 1846     		mov	r0, r3
 159 0032 1037     		adds	r7, r7, #16
 160              		.cfi_def_cfa_offset 8
 161 0034 BD46     		mov	sp, r7
 162              		.cfi_def_cfa_register 13
 163              		@ sp needed
 164 0036 80BD     		pop	{r7, pc}
 165              	.L5:
 166              		.align	2
 167              	.L4:
 168 0038 00000000 		.word	.LC0
 169 003c 00000000 		.word	SD_dir
 170              		.cfi_endproc
 171              	.LFE65:
 172              		.size	SD_mkdir, .-SD_mkdir
 173              		.section	.text.SD_rmfile,"ax",%progbits
 174              		.align	2
 175              		.global	SD_rmfile
 176              		.thumb
 177              		.thumb_func
 178              		.type	SD_rmfile, %function
 179              	SD_rmfile:
 180              	.LFB66:
  61:sd_card.c     **** 
  62:sd_card.c     **** /**
  63:sd_card.c     ****  * @brief Delete a file
  64:sd_card.c     ****  * @param dir_name is the name of the directory to create
  65:sd_card.c     ****  * @return 1u on success, 0u otherwise
  66:sd_card.c     ****  */
  67:sd_card.c     **** uint8 SD_rmfile(const char * fileName)
  68:sd_card.c     **** {
 181              		.loc 1 68 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 16
 184              		@ frame_needed = 1, uses_anonymous_args = 0
 185 0000 80B5     		push	{r7, lr}
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 7, -8
 188              		.cfi_offset 14, -4
 189 0002 84B0     		sub	sp, sp, #16
 190              		.cfi_def_cfa_offset 24
 191 0004 00AF     		add	r7, sp, #0
 192              		.cfi_def_cfa_register 7
 193 0006 7860     		str	r0, [r7, #4]
  69:sd_card.c     ****     uint8 status = 9; // initialize to a value not 0 or -1
 194              		.loc 1 69 0
 195 0008 0923     		movs	r3, #9
 196 000a FB73     		strb	r3, [r7, #15]
  70:sd_card.c     **** 
  71:sd_card.c     ****     SD_power_up(); // Wakeup the SD Card component
 197              		.loc 1 71 0
 198 000c FFF7FEFF 		bl	SD_power_up
  72:sd_card.c     ****     
  73:sd_card.c     ****     // FS_Remove() removes a file using FS.h.
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 6


  74:sd_card.c     ****     // Typecasting (1+FS_Remove(fileName)) into an uint8 datatype
  75:sd_card.c     ****     // This makes it 0 if it's a failture, 1 if it's successful
  76:sd_card.c     ****     status = (uint8) ( 1+FS_Remove(fileName));
 199              		.loc 1 76 0
 200 0010 7868     		ldr	r0, [r7, #4]
 201 0012 FFF7FEFF 		bl	FS_Remove
 202 0016 0346     		mov	r3, r0
 203 0018 DBB2     		uxtb	r3, r3
 204 001a 0133     		adds	r3, r3, #1
 205 001c FB73     		strb	r3, [r7, #15]
  77:sd_card.c     ****     
  78:sd_card.c     ****     SD_power_down(); // Turn off the SD Card
 206              		.loc 1 78 0
 207 001e FFF7FEFF 		bl	SD_power_down
  79:sd_card.c     ****     
  80:sd_card.c     ****     return status;
 208              		.loc 1 80 0
 209 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  81:sd_card.c     **** }
 210              		.loc 1 81 0
 211 0024 1846     		mov	r0, r3
 212 0026 1037     		adds	r7, r7, #16
 213              		.cfi_def_cfa_offset 8
 214 0028 BD46     		mov	sp, r7
 215              		.cfi_def_cfa_register 13
 216              		@ sp needed
 217 002a 80BD     		pop	{r7, pc}
 218              		.cfi_endproc
 219              	.LFE66:
 220              		.size	SD_rmfile, .-SD_rmfile
 221              		.section	.text.SD_write,"ax",%progbits
 222              		.align	2
 223              		.global	SD_write
 224              		.thumb
 225              		.thumb_func
 226              		.type	SD_write, %function
 227              	SD_write:
 228              	.LFB67:
  82:sd_card.c     **** 
  83:sd_card.c     **** /**
  84:sd_card.c     ****  * @brief Write data to the SD card
  85:sd_card.c     ****  * @param fileName is the name of the file to write to
  86:sd_card.c     ****  * @param pMode is the write mode
  87:sd_card.c     ****  * @param pData is the data to be written
  88:sd_card.c     ****  * @return 1u on success, 0u otherwise
  89:sd_card.c     ****  */
  90:sd_card.c     **** uint8 SD_write(const char * fileName, const char * pMode, const void * pData)
  91:sd_card.c     **** {
 229              		.loc 1 91 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 24
 232              		@ frame_needed = 1, uses_anonymous_args = 0
 233 0000 80B5     		push	{r7, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 7, -8
 236              		.cfi_offset 14, -4
 237 0002 86B0     		sub	sp, sp, #24
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 7


 238              		.cfi_def_cfa_offset 32
 239 0004 00AF     		add	r7, sp, #0
 240              		.cfi_def_cfa_register 7
 241 0006 F860     		str	r0, [r7, #12]
 242 0008 B960     		str	r1, [r7, #8]
 243 000a 7A60     		str	r2, [r7, #4]
  92:sd_card.c     ****     uint8 status = 9u; // Initialize to a value not 0 or 1
 244              		.loc 1 92 0
 245 000c 0923     		movs	r3, #9
 246 000e FB75     		strb	r3, [r7, #23]
  93:sd_card.c     ****     FS_FILE *pFile; // FS_FILE data structure defined in FS.h
  94:sd_card.c     **** 
  95:sd_card.c     ****     SD_power_up(); // Wakeup the SD Card component
 247              		.loc 1 95 0
 248 0010 FFF7FEFF 		bl	SD_power_up
  96:sd_card.c     ****     
  97:sd_card.c     ****     // FS_FOpen() opens an existing file or creates a new one.
  98:sd_card.c     ****     // fileName is the file to be opened or created. It's a 0-termianted string that cannot be NULL
  99:sd_card.c     ****     // pMode indicates how the file should be opened. It's a 0-terminated string that cannot be NUL
 100:sd_card.c     ****     pFile = FS_FOpen(fileName, pMode);
 249              		.loc 1 100 0
 250 0014 B968     		ldr	r1, [r7, #8]
 251 0016 F868     		ldr	r0, [r7, #12]
 252 0018 FFF7FEFF 		bl	FS_FOpen
 253 001c 3861     		str	r0, [r7, #16]
 101:sd_card.c     ****     
 102:sd_card.c     ****     // If the SD card doesn't open, try reinitializing the filesystem
 103:sd_card.c     ****     if (pFile == 0){
 254              		.loc 1 103 0
 255 001e 3B69     		ldr	r3, [r7, #16]
 256 0020 002B     		cmp	r3, #0
 257 0022 08D1     		bne	.L9
 104:sd_card.c     ****         FS_DeInit(); // FS_DeInit() frees allocated resources
 258              		.loc 1 104 0
 259 0024 FFF7FEFF 		bl	FS_DeInit
 105:sd_card.c     ****         FS_Init(); // FS_Init() starts the file system
 260              		.loc 1 105 0
 261 0028 FFF7FEFF 		bl	FS_Init
 106:sd_card.c     ****         pFile = FS_FOpen(fileName, pMode);
 262              		.loc 1 106 0
 263 002c B968     		ldr	r1, [r7, #8]
 264 002e F868     		ldr	r0, [r7, #12]
 265 0030 FFF7FEFF 		bl	FS_FOpen
 266 0034 3861     		str	r0, [r7, #16]
 267              	.L9:
 107:sd_card.c     ****     }
 108:sd_card.c     ****     
 109:sd_card.c     ****     // Note: We are using the "No Long File Name (LFN)" library,
 110:sd_card.c     ****     //  so names are limited to 8 characters and 3 bytes for extensions
 111:sd_card.c     ****     if (pFile != 0) {
 268              		.loc 1 111 0
 269 0036 3B69     		ldr	r3, [r7, #16]
 270 0038 002B     		cmp	r3, #0
 271 003a 10D0     		beq	.L10
 112:sd_card.c     ****         // FS_Write() writes data to file: pFile is handle to open file, pData is data to be writte
 113:sd_card.c     ****         FS_Write(pFile, pData, strlen(pData));
 272              		.loc 1 113 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 8


 273 003c 7868     		ldr	r0, [r7, #4]
 274 003e FFF7FEFF 		bl	strlen
 275 0042 0346     		mov	r3, r0
 276 0044 1A46     		mov	r2, r3
 277 0046 7968     		ldr	r1, [r7, #4]
 278 0048 3869     		ldr	r0, [r7, #16]
 279 004a FFF7FEFF 		bl	FS_Write
 114:sd_card.c     ****         
 115:sd_card.c     ****         // FS_FClose() closes an opened file using FS.h. It returns 1 if there's a failure, 0 if su
 116:sd_card.c     ****         // Typecasting (1+FS_FClose(pFile)) into an uint8 datatype
 117:sd_card.c     ****         // This makes it 0 if it's a failture, 1 if it's successful
 118:sd_card.c     ****         status = (uint8) ( -1*FS_FClose(pFile) )+1;
 280              		.loc 1 118 0
 281 004e 3869     		ldr	r0, [r7, #16]
 282 0050 FFF7FEFF 		bl	FS_FClose
 283 0054 0346     		mov	r3, r0
 284 0056 DBB2     		uxtb	r3, r3
 285 0058 C3F10103 		rsb	r3, r3, #1
 286 005c FB75     		strb	r3, [r7, #23]
 287              	.L10:
 119:sd_card.c     ****     }
 120:sd_card.c     ****     
 121:sd_card.c     ****     SD_power_down(); // Turn off the SD Card
 288              		.loc 1 121 0
 289 005e FFF7FEFF 		bl	SD_power_down
 122:sd_card.c     **** 
 123:sd_card.c     ****     
 124:sd_card.c     ****     return status;
 290              		.loc 1 124 0
 291 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 125:sd_card.c     **** }
 292              		.loc 1 125 0
 293 0064 1846     		mov	r0, r3
 294 0066 1837     		adds	r7, r7, #24
 295              		.cfi_def_cfa_offset 8
 296 0068 BD46     		mov	sp, r7
 297              		.cfi_def_cfa_register 13
 298              		@ sp needed
 299 006a 80BD     		pop	{r7, pc}
 300              		.cfi_endproc
 301              	.LFE67:
 302              		.size	SD_write, .-SD_write
 303              		.section	.rodata
 304 0005 000000   		.align	2
 305              	.LC1:
 306 0008 7200     		.ascii	"r\000"
 307              		.section	.text.SD_read,"ax",%progbits
 308              		.align	2
 309              		.global	SD_read
 310              		.thumb
 311              		.thumb_func
 312              		.type	SD_read, %function
 313              	SD_read:
 314              	.LFB68:
 126:sd_card.c     **** 
 127:sd_card.c     **** /**
 128:sd_card.c     ****  * @brief Write data to the SD card
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 9


 129:sd_card.c     ****  * @param fileName is the name of the file to write to
 130:sd_card.c     ****  * @param pMode is the write mode
 131:sd_card.c     ****  * @param pData is the data to be written
 132:sd_card.c     ****  * @return 1u on success, 0u otherwise
 133:sd_card.c     ****  */
 134:sd_card.c     **** uint8 SD_read(const char * fileName,  void * pData, unsigned long NumBytes)
 135:sd_card.c     **** {
 315              		.loc 1 135 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 24
 318              		@ frame_needed = 1, uses_anonymous_args = 0
 319 0000 80B5     		push	{r7, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 7, -8
 322              		.cfi_offset 14, -4
 323 0002 86B0     		sub	sp, sp, #24
 324              		.cfi_def_cfa_offset 32
 325 0004 00AF     		add	r7, sp, #0
 326              		.cfi_def_cfa_register 7
 327 0006 F860     		str	r0, [r7, #12]
 328 0008 B960     		str	r1, [r7, #8]
 329 000a 7A60     		str	r2, [r7, #4]
 136:sd_card.c     ****     uint8 status = 9u; // initialize to a value not 0 or 1
 330              		.loc 1 136 0
 331 000c 0923     		movs	r3, #9
 332 000e FB75     		strb	r3, [r7, #23]
 137:sd_card.c     ****     FS_FILE *pFile; // FS_FILE data structure defined in FS.h
 138:sd_card.c     **** 
 139:sd_card.c     ****     SD_power_up(); // Powerup the SD Card component
 333              		.loc 1 139 0
 334 0010 FFF7FEFF 		bl	SD_power_up
 140:sd_card.c     ****     
 141:sd_card.c     ****     // FS_FOpen() opens an existing file or creates a new one.
 142:sd_card.c     ****     // fileName is the file to be opened or created. It's a 0-terminated string that cannot be NULL
 143:sd_card.c     ****     // "r" indicates how the file should be opened, in this case, for reading.
 144:sd_card.c     ****     pFile = FS_FOpen(fileName, "r");
 335              		.loc 1 144 0
 336 0014 1349     		ldr	r1, .L16
 337 0016 F868     		ldr	r0, [r7, #12]
 338 0018 FFF7FEFF 		bl	FS_FOpen
 339 001c 3861     		str	r0, [r7, #16]
 145:sd_card.c     ****     
 146:sd_card.c     ****     // If the SD card doesn't open, try reinitializing the filesystem
 147:sd_card.c     ****     if (pFile == 0){
 340              		.loc 1 147 0
 341 001e 3B69     		ldr	r3, [r7, #16]
 342 0020 002B     		cmp	r3, #0
 343 0022 08D1     		bne	.L13
 148:sd_card.c     ****         FS_DeInit();// FS_DeInit() frees allocated resources
 344              		.loc 1 148 0
 345 0024 FFF7FEFF 		bl	FS_DeInit
 149:sd_card.c     ****         FS_Init(); // FS_Init() starts the file system
 346              		.loc 1 149 0
 347 0028 FFF7FEFF 		bl	FS_Init
 150:sd_card.c     ****         pFile = FS_FOpen(fileName, "r");
 348              		.loc 1 150 0
 349 002c 0D49     		ldr	r1, .L16
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 10


 350 002e F868     		ldr	r0, [r7, #12]
 351 0030 FFF7FEFF 		bl	FS_FOpen
 352 0034 3861     		str	r0, [r7, #16]
 353              	.L13:
 151:sd_card.c     ****     }
 152:sd_card.c     ****     
 153:sd_card.c     ****     // Note: We are using the "No Long File Name (LFN)" library,
 154:sd_card.c     ****     //  so names are limited to 8 characters and 3 bytes for extensions
 155:sd_card.c     ****     if (pFile != 0) {
 354              		.loc 1 155 0
 355 0036 3B69     		ldr	r3, [r7, #16]
 356 0038 002B     		cmp	r3, #0
 357 003a 0CD0     		beq	.L14
 156:sd_card.c     ****         // FS_Read() reads data from a file: pFile is handle to an opened file, pData is the buffer
 157:sd_card.c     ****         FS_Read(pFile,pData,NumBytes);
 358              		.loc 1 157 0
 359 003c 7A68     		ldr	r2, [r7, #4]
 360 003e B968     		ldr	r1, [r7, #8]
 361 0040 3869     		ldr	r0, [r7, #16]
 362 0042 FFF7FEFF 		bl	FS_Read
 158:sd_card.c     ****         
 159:sd_card.c     ****         // FS_FClose() closes an opened file using FS.h. It returns 1 if there's a failure, 0 if su
 160:sd_card.c     ****         // Typecasting (1+FS_FClose(pFile)) into an uint8 datatype
 161:sd_card.c     ****         // This makes it 0 if it's a failture, 1 if it's successful
 162:sd_card.c     ****         status = (uint8) ( -1*FS_FClose(pFile) )+1;
 363              		.loc 1 162 0
 364 0046 3869     		ldr	r0, [r7, #16]
 365 0048 FFF7FEFF 		bl	FS_FClose
 366 004c 0346     		mov	r3, r0
 367 004e DBB2     		uxtb	r3, r3
 368 0050 C3F10103 		rsb	r3, r3, #1
 369 0054 FB75     		strb	r3, [r7, #23]
 370              	.L14:
 163:sd_card.c     ****     }
 164:sd_card.c     ****     
 165:sd_card.c     ****     SD_power_down(); // Power down the SD card
 371              		.loc 1 165 0
 372 0056 FFF7FEFF 		bl	SD_power_down
 166:sd_card.c     ****     
 167:sd_card.c     ****     return status;
 373              		.loc 1 167 0
 374 005a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 168:sd_card.c     **** }
 375              		.loc 1 168 0
 376 005c 1846     		mov	r0, r3
 377 005e 1837     		adds	r7, r7, #24
 378              		.cfi_def_cfa_offset 8
 379 0060 BD46     		mov	sp, r7
 380              		.cfi_def_cfa_register 13
 381              		@ sp needed
 382 0062 80BD     		pop	{r7, pc}
 383              	.L17:
 384              		.align	2
 385              	.L16:
 386 0064 08000000 		.word	.LC1
 387              		.cfi_endproc
 388              	.LFE68:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 11


 389              		.size	SD_read, .-SD_read
 390              		.section	.text.SD_power_up,"ax",%progbits
 391              		.align	2
 392              		.global	SD_power_up
 393              		.thumb
 394              		.thumb_func
 395              		.type	SD_power_up, %function
 396              	SD_power_up:
 397              	.LFB69:
 169:sd_card.c     **** 
 170:sd_card.c     **** // Power up SD Card
 171:sd_card.c     **** void SD_power_up(){
 398              		.loc 1 171 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 1, uses_anonymous_args = 0
 402 0000 80B5     		push	{r7, lr}
 403              		.cfi_def_cfa_offset 8
 404              		.cfi_offset 7, -8
 405              		.cfi_offset 14, -4
 406 0002 00AF     		add	r7, sp, #0
 407              		.cfi_def_cfa_register 7
 172:sd_card.c     **** 
 173:sd_card.c     ****     emFile_Wakeup(); // Prepare SPIM Components to wake up.
 408              		.loc 1 173 0
 409 0004 FFF7FEFF 		bl	emFile_Wakeup
 174:sd_card.c     ****     
 175:sd_card.c     ****     SD_Card_Power_Write(ON); // Turn on the SD Card (pulls it high).
 410              		.loc 1 175 0
 411 0008 0120     		movs	r0, #1
 412 000a FFF7FEFF 		bl	SD_Card_Power_Write
 176:sd_card.c     ****     FS_Init(); // FS_Init() starts the file system
 413              		.loc 1 176 0
 414 000e FFF7FEFF 		bl	FS_Init
 177:sd_card.c     **** }
 415              		.loc 1 177 0
 416 0012 00BF     		nop
 417 0014 80BD     		pop	{r7, pc}
 418              		.cfi_endproc
 419              	.LFE69:
 420              		.size	SD_power_up, .-SD_power_up
 421 0016 00BF     		.section	.text.SD_power_down,"ax",%progbits
 422              		.align	2
 423              		.global	SD_power_down
 424              		.thumb
 425              		.thumb_func
 426              		.type	SD_power_down, %function
 427              	SD_power_down:
 428              	.LFB70:
 178:sd_card.c     **** 
 179:sd_card.c     **** // Power down SD Card
 180:sd_card.c     **** void SD_power_down(){
 429              		.loc 1 180 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 1, uses_anonymous_args = 0
 433 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 12


 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 7, -8
 436              		.cfi_offset 14, -4
 437 0002 00AF     		add	r7, sp, #0
 438              		.cfi_def_cfa_register 7
 181:sd_card.c     ****     
 182:sd_card.c     ****     SD_Card_Power_Write(OFF);  // Turn off the SD Card (pulls it low). 
 439              		.loc 1 182 0
 440 0004 0020     		movs	r0, #0
 441 0006 FFF7FEFF 		bl	SD_Card_Power_Write
 183:sd_card.c     ****     emFile_Sleep(); // emFIle_Sleep() prepare emFile to go to sleep.
 442              		.loc 1 183 0
 443 000a FFF7FEFF 		bl	emFile_Sleep
 184:sd_card.c     ****     FS_DeInit(); // FS_DeInit() frees allocated resources
 444              		.loc 1 184 0
 445 000e FFF7FEFF 		bl	FS_DeInit
 185:sd_card.c     ****     
 186:sd_card.c     ****     emFile_miso0_Write(OFF); // emFile_miso0_Write(): Assigns a new value to the digital port's dat
 446              		.loc 1 186 0
 447 0012 0020     		movs	r0, #0
 448 0014 FFF7FEFF 		bl	emFile_miso0_Write
 187:sd_card.c     ****     emFile_mosi0_Write(OFF); // emFile_mosi0_Write(): Assigns a new value to the digital port's dat
 449              		.loc 1 187 0
 450 0018 0020     		movs	r0, #0
 451 001a FFF7FEFF 		bl	emFile_mosi0_Write
 188:sd_card.c     ****     emFile_sclk0_Write(OFF); // emFile_sclk0_Write(): Assigns a new value to the digital port's dat
 452              		.loc 1 188 0
 453 001e 0020     		movs	r0, #0
 454 0020 FFF7FEFF 		bl	emFile_sclk0_Write
 189:sd_card.c     ****     emFile_SPI0_CS_Write(OFF); // emFile_SPIO_CS_Write(): Assigns a new value to the digital port's
 455              		.loc 1 189 0
 456 0024 0020     		movs	r0, #0
 457 0026 FFF7FEFF 		bl	emFile_SPI0_CS_Write
 190:sd_card.c     ****     // SD_Chip_Detect_Write(OFF);
 191:sd_card.c     **** }
 458              		.loc 1 191 0
 459 002a 00BF     		nop
 460 002c 80BD     		pop	{r7, pc}
 461              		.cfi_endproc
 462              	.LFE70:
 463              		.size	SD_power_down, .-SD_power_down
 464 002e 00BF     		.section	.rodata
 465 000a 0000     		.align	2
 466              	.LC2:
 467 000c 54455354 		.ascii	"TEST_SD_CARD\000"
 467      5F53445F 
 467      43415244 
 467      00
 468 0019 000000   		.align	2
 469              	.LC5:
 470 001c 54455354 		.ascii	"TEST_PASS\000"
 470      5F504153 
 470      5300
 471 0026 0000     		.align	2
 472              	.LC6:
 473 0028 7700     		.ascii	"w\000"
 474 002a 0000     		.align	2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 13


 475              	.LC7:
 476 002c 53554343 		.ascii	"SUCCESS WRITE READ DELETE FILE\000"
 476      45535320 
 476      57524954 
 476      45205245 
 476      41442044 
 477 004b 00       		.align	2
 478              	.LC8:
 479 004c 4641494C 		.ascii	"FAILED TO WRITE READ DELETE FILE\000"
 479      45442054 
 479      4F205752 
 479      49544520 
 479      52454144 
 480 006d 000000   		.align	2
 481              	.LC3:
 482 0070 54455354 		.ascii	"TEST_FAIL\000"
 482      5F464149 
 482      4C00
 483 007a 0000     		.align	2
 484              	.LC4:
 485 007c 74657374 		.ascii	"test.txt\000"
 485      2E747874 
 485      00
 486              		.section	.text.SD_card_test,"ax",%progbits
 487              		.align	2
 488              		.global	SD_card_test
 489              		.thumb
 490              		.thumb_func
 491              		.type	SD_card_test, %function
 492              	SD_card_test:
 493              	.LFB71:
 192:sd_card.c     **** 
 193:sd_card.c     **** // Testing the SD Card - create a  file, write random number, read number from file, delete directo
 194:sd_card.c     **** test_t SD_card_test(){
 494              		.loc 1 194 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 424
 497              		@ frame_needed = 1, uses_anonymous_args = 0
 498 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 499              		.cfi_def_cfa_offset 20
 500              		.cfi_offset 4, -20
 501              		.cfi_offset 5, -16
 502              		.cfi_offset 6, -12
 503              		.cfi_offset 7, -8
 504              		.cfi_offset 14, -4
 505 0002 EBB0     		sub	sp, sp, #428
 506              		.cfi_def_cfa_offset 448
 507 0004 00AF     		add	r7, sp, #0
 508              		.cfi_def_cfa_register 7
 509 0006 3B1D     		adds	r3, r7, #4
 510 0008 1860     		str	r0, [r3]
 195:sd_card.c     ****     
 196:sd_card.c     ****     // test_t is a new data type we defined in test.h. We then use that data type to define a struc
 197:sd_card.c     ****     test_t test;
 198:sd_card.c     ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_SD_CARD");
 511              		.loc 1 198 0
 512 000a 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 14


 513 000e 3D4A     		ldr	r2, .L25
 514 0010 1C46     		mov	r4, r3
 515 0012 1346     		mov	r3, r2
 516 0014 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 517 0016 07C4     		stmia	r4!, {r0, r1, r2}
 518 0018 2370     		strb	r3, [r4]
 199:sd_card.c     ****     test.status = 0;
 519              		.loc 1 199 0
 520 001a 07F12403 		add	r3, r7, #36
 521 001e 0022     		movs	r2, #0
 522 0020 83F88020 		strb	r2, [r3, #128]
 200:sd_card.c     ****     
 201:sd_card.c     ****     char data[] = "TEST_FAIL";
 523              		.loc 1 201 0
 524 0024 07F11803 		add	r3, r7, #24
 525 0028 374A     		ldr	r2, .L25+4
 526 002a 07CA     		ldmia	r2, {r0, r1, r2}
 527 002c 03C3     		stmia	r3!, {r0, r1}
 528 002e 1A80     		strh	r2, [r3]	@ movhi
 202:sd_card.c     ****     char fileName[] = "test.txt";
 529              		.loc 1 202 0
 530 0030 07F10C03 		add	r3, r7, #12
 531 0034 354A     		ldr	r2, .L25+8
 532 0036 07CA     		ldmia	r2, {r0, r1, r2}
 533 0038 03C3     		stmia	r3!, {r0, r1}
 534 003a 1A70     		strb	r2, [r3]
 203:sd_card.c     ****     
 204:sd_card.c     ****     SD_rmfile(fileName); // Remove file from SD Card
 535              		.loc 1 204 0
 536 003c 07F10C03 		add	r3, r7, #12
 537 0040 1846     		mov	r0, r3
 538 0042 FFF7FEFF 		bl	SD_rmfile
 205:sd_card.c     ****     SD_write(fileName,"w","TEST_PASS"); // Write data to SD Card
 539              		.loc 1 205 0
 540 0046 07F10C03 		add	r3, r7, #12
 541 004a 314A     		ldr	r2, .L25+12
 542 004c 3149     		ldr	r1, .L25+16
 543 004e 1846     		mov	r0, r3
 544 0050 FFF7FEFF 		bl	SD_write
 206:sd_card.c     ****     SD_read(fileName,data,sizeof(data)); // Read data from the SD card
 545              		.loc 1 206 0
 546 0054 07F11801 		add	r1, r7, #24
 547 0058 07F10C03 		add	r3, r7, #12
 548 005c 0A22     		movs	r2, #10
 549 005e 1846     		mov	r0, r3
 550 0060 FFF7FEFF 		bl	SD_read
 207:sd_card.c     ****     test.status = SD_rmfile(fileName);
 551              		.loc 1 207 0
 552 0064 07F10C03 		add	r3, r7, #12
 553 0068 1846     		mov	r0, r3
 554 006a FFF7FEFF 		bl	SD_rmfile
 555 006e 0346     		mov	r3, r0
 556 0070 1A46     		mov	r2, r3
 557 0072 07F12403 		add	r3, r7, #36
 558 0076 83F88020 		strb	r2, [r3, #128]
 208:sd_card.c     ****     
 209:sd_card.c     ****     if(test.status == 1){
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 15


 559              		.loc 1 209 0
 560 007a 07F12403 		add	r3, r7, #36
 561 007e 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 562 0082 012B     		cmp	r3, #1
 563 0084 14D1     		bne	.L21
 210:sd_card.c     ****         snprintf(test.reason,sizeof(test.reason),"SUCCESS WRITE READ DELETE FILE");
 564              		.loc 1 210 0
 565 0086 07F12403 		add	r3, r7, #36
 566 008a 8133     		adds	r3, r3, #129
 567 008c 224A     		ldr	r2, .L25+20
 568 008e 1D46     		mov	r5, r3
 569 0090 1446     		mov	r4, r2
 570 0092 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 571 0094 2860     		str	r0, [r5]	@ unaligned
 572 0096 6960     		str	r1, [r5, #4]	@ unaligned
 573 0098 AA60     		str	r2, [r5, #8]	@ unaligned
 574 009a EB60     		str	r3, [r5, #12]	@ unaligned
 575 009c 07CC     		ldmia	r4!, {r0, r1, r2}
 576 009e 2861     		str	r0, [r5, #16]	@ unaligned
 577 00a0 6961     		str	r1, [r5, #20]	@ unaligned
 578 00a2 AA61     		str	r2, [r5, #24]	@ unaligned
 579 00a4 2388     		ldrh	r3, [r4]	@ unaligned
 580 00a6 A278     		ldrb	r2, [r4, #2]
 581 00a8 AB83     		strh	r3, [r5, #28]	@ unaligned
 582 00aa 1346     		mov	r3, r2
 583 00ac AB77     		strb	r3, [r5, #30]
 584 00ae 17E0     		b	.L22
 585              	.L21:
 211:sd_card.c     ****     }else{
 212:sd_card.c     ****        snprintf(test.reason,sizeof(test.reason),"FAILED TO WRITE READ DELETE FILE"); 
 586              		.loc 1 212 0
 587 00b0 07F12403 		add	r3, r7, #36
 588 00b4 8133     		adds	r3, r3, #129
 589 00b6 194A     		ldr	r2, .L25+24
 590 00b8 1446     		mov	r4, r2
 591 00ba 9E46     		mov	lr, r3
 592 00bc 04F1200C 		add	ip, r4, #32
 593              	.L23:
 594 00c0 7546     		mov	r5, lr
 595 00c2 2646     		mov	r6, r4
 596 00c4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 597 00c6 2860     		str	r0, [r5]	@ unaligned
 598 00c8 6960     		str	r1, [r5, #4]	@ unaligned
 599 00ca AA60     		str	r2, [r5, #8]	@ unaligned
 600 00cc EB60     		str	r3, [r5, #12]	@ unaligned
 601 00ce 1034     		adds	r4, r4, #16
 602 00d0 0EF1100E 		add	lr, lr, #16
 603 00d4 6445     		cmp	r4, ip
 604 00d6 F3D1     		bne	.L23
 605 00d8 7346     		mov	r3, lr
 606 00da 2246     		mov	r2, r4
 607 00dc 1278     		ldrb	r2, [r2]
 608 00de 1A70     		strb	r2, [r3]
 609              	.L22:
 213:sd_card.c     ****     }
 214:sd_card.c     ****     
 215:sd_card.c     ****     return test;
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 16


 610              		.loc 1 215 0
 611 00e0 3B1D     		adds	r3, r7, #4
 612 00e2 1A68     		ldr	r2, [r3]
 613 00e4 07F12403 		add	r3, r7, #36
 614 00e8 1046     		mov	r0, r2
 615 00ea 1946     		mov	r1, r3
 616 00ec 40F28113 		movw	r3, #385
 617 00f0 1A46     		mov	r2, r3
 618 00f2 FFF7FEFF 		bl	memcpy
 216:sd_card.c     ****     
 217:sd_card.c     **** }
 619              		.loc 1 217 0
 620 00f6 3B1D     		adds	r3, r7, #4
 621 00f8 1868     		ldr	r0, [r3]
 622 00fa 07F5D677 		add	r7, r7, #428
 623              		.cfi_def_cfa_offset 20
 624 00fe BD46     		mov	sp, r7
 625              		.cfi_def_cfa_register 13
 626              		@ sp needed
 627 0100 F0BD     		pop	{r4, r5, r6, r7, pc}
 628              	.L26:
 629 0102 00BF     		.align	2
 630              	.L25:
 631 0104 0C000000 		.word	.LC2
 632 0108 70000000 		.word	.LC3
 633 010c 7C000000 		.word	.LC4
 634 0110 1C000000 		.word	.LC5
 635 0114 28000000 		.word	.LC6
 636 0118 2C000000 		.word	.LC7
 637 011c 4C000000 		.word	.LC8
 638              		.cfi_endproc
 639              	.LFE71:
 640              		.size	SD_card_test, .-SD_card_test
 641              		.text
 642              	.Letext0:
 643              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 644              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 645              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 646              		.file 5 "testing.h"
 647              		.file 6 "..\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 648              		.file 7 "data.h"
 649              		.file 8 "modem.h"
 650              		.file 9 "notoriOS.h"
 651              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 652              		.file 11 "level_sensor.h"
 653              		.file 12 "App_LED.h"
 654              		.section	.debug_info,"",%progbits
 655              	.Ldebug_info0:
 656 0000 DD070000 		.4byte	0x7dd
 657 0004 0400     		.2byte	0x4
 658 0006 00000000 		.4byte	.Ldebug_abbrev0
 659 000a 04       		.byte	0x4
 660 000b 01       		.uleb128 0x1
 661 000c 8B000000 		.4byte	.LASF105
 662 0010 0C       		.byte	0xc
 663 0011 81000000 		.4byte	.LASF106
 664 0015 24040000 		.4byte	.LASF107
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 17


 665 0019 00000000 		.4byte	.Ldebug_ranges0+0
 666 001d 00000000 		.4byte	0
 667 0021 00000000 		.4byte	.Ldebug_line0
 668 0025 02       		.uleb128 0x2
 669 0026 01       		.byte	0x1
 670 0027 06       		.byte	0x6
 671 0028 D5020000 		.4byte	.LASF0
 672 002c 02       		.uleb128 0x2
 673 002d 01       		.byte	0x1
 674 002e 08       		.byte	0x8
 675 002f 97020000 		.4byte	.LASF1
 676 0033 02       		.uleb128 0x2
 677 0034 02       		.byte	0x2
 678 0035 05       		.byte	0x5
 679 0036 52000000 		.4byte	.LASF2
 680 003a 02       		.uleb128 0x2
 681 003b 02       		.byte	0x2
 682 003c 07       		.byte	0x7
 683 003d 82030000 		.4byte	.LASF3
 684 0041 03       		.uleb128 0x3
 685 0042 D5040000 		.4byte	.LASF12
 686 0046 02       		.byte	0x2
 687 0047 3F       		.byte	0x3f
 688 0048 4C000000 		.4byte	0x4c
 689 004c 02       		.uleb128 0x2
 690 004d 04       		.byte	0x4
 691 004e 05       		.byte	0x5
 692 004f 0A020000 		.4byte	.LASF4
 693 0053 02       		.uleb128 0x2
 694 0054 04       		.byte	0x4
 695 0055 07       		.byte	0x7
 696 0056 67040000 		.4byte	.LASF5
 697 005a 02       		.uleb128 0x2
 698 005b 08       		.byte	0x8
 699 005c 05       		.byte	0x5
 700 005d F0010000 		.4byte	.LASF6
 701 0061 02       		.uleb128 0x2
 702 0062 08       		.byte	0x8
 703 0063 07       		.byte	0x7
 704 0064 E1020000 		.4byte	.LASF7
 705 0068 04       		.uleb128 0x4
 706 0069 04       		.byte	0x4
 707 006a 05       		.byte	0x5
 708 006b 696E7400 		.ascii	"int\000"
 709 006f 02       		.uleb128 0x2
 710 0070 04       		.byte	0x4
 711 0071 07       		.byte	0x7
 712 0072 0E030000 		.4byte	.LASF8
 713 0076 02       		.uleb128 0x2
 714 0077 08       		.byte	0x8
 715 0078 04       		.byte	0x4
 716 0079 7D020000 		.4byte	.LASF9
 717 007d 05       		.uleb128 0x5
 718 007e 04       		.byte	0x4
 719 007f 02       		.uleb128 0x2
 720 0080 04       		.byte	0x4
 721 0081 07       		.byte	0x7
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 18


 722 0082 5C000000 		.4byte	.LASF10
 723 0086 06       		.uleb128 0x6
 724 0087 04       		.byte	0x4
 725 0088 8C000000 		.4byte	0x8c
 726 008c 02       		.uleb128 0x2
 727 008d 01       		.byte	0x1
 728 008e 08       		.byte	0x8
 729 008f FE010000 		.4byte	.LASF11
 730 0093 06       		.uleb128 0x6
 731 0094 04       		.byte	0x4
 732 0095 99000000 		.4byte	0x99
 733 0099 07       		.uleb128 0x7
 734 009a 8C000000 		.4byte	0x8c
 735 009e 08       		.uleb128 0x8
 736 009f 8C000000 		.4byte	0x8c
 737 00a3 AE000000 		.4byte	0xae
 738 00a7 09       		.uleb128 0x9
 739 00a8 7F000000 		.4byte	0x7f
 740 00ac 17       		.byte	0x17
 741 00ad 00       		.byte	0
 742 00ae 03       		.uleb128 0x3
 743 00af E7030000 		.4byte	.LASF13
 744 00b3 03       		.byte	0x3
 745 00b4 2C       		.byte	0x2c
 746 00b5 41000000 		.4byte	0x41
 747 00b9 0A       		.uleb128 0xa
 748 00ba 6C010000 		.4byte	.LASF14
 749 00be 04       		.byte	0x4
 750 00bf 9201     		.2byte	0x192
 751 00c1 2C000000 		.4byte	0x2c
 752 00c5 0A       		.uleb128 0xa
 753 00c6 53010000 		.4byte	.LASF15
 754 00ca 04       		.byte	0x4
 755 00cb 9301     		.2byte	0x193
 756 00cd 3A000000 		.4byte	0x3a
 757 00d1 0A       		.uleb128 0xa
 758 00d2 91010000 		.4byte	.LASF16
 759 00d6 04       		.byte	0x4
 760 00d7 9601     		.2byte	0x196
 761 00d9 33000000 		.4byte	0x33
 762 00dd 0A       		.uleb128 0xa
 763 00de 79040000 		.4byte	.LASF17
 764 00e2 04       		.byte	0x4
 765 00e3 9701     		.2byte	0x197
 766 00e5 4C000000 		.4byte	0x4c
 767 00e9 02       		.uleb128 0x2
 768 00ea 04       		.byte	0x4
 769 00eb 04       		.byte	0x4
 770 00ec CC010000 		.4byte	.LASF18
 771 00f0 02       		.uleb128 0x2
 772 00f1 08       		.byte	0x8
 773 00f2 04       		.byte	0x4
 774 00f3 7F040000 		.4byte	.LASF19
 775 00f7 06       		.uleb128 0x6
 776 00f8 04       		.byte	0x4
 777 00f9 FD000000 		.4byte	0xfd
 778 00fd 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 19


 779 00fe 0C       		.uleb128 0xc
 780 00ff 8101     		.2byte	0x181
 781 0101 05       		.byte	0x5
 782 0102 0A       		.byte	0xa
 783 0103 2C010000 		.4byte	0x12c
 784 0107 0D       		.uleb128 0xd
 785 0108 09050000 		.4byte	.LASF20
 786 010c 05       		.byte	0x5
 787 010d 0C       		.byte	0xc
 788 010e 2C010000 		.4byte	0x12c
 789 0112 00       		.byte	0
 790 0113 0D       		.uleb128 0xd
 791 0114 AD030000 		.4byte	.LASF21
 792 0118 05       		.byte	0x5
 793 0119 0D       		.byte	0xd
 794 011a B9000000 		.4byte	0xb9
 795 011e 80       		.byte	0x80
 796 011f 0D       		.uleb128 0xd
 797 0120 03020000 		.4byte	.LASF22
 798 0124 05       		.byte	0x5
 799 0125 0F       		.byte	0xf
 800 0126 3C010000 		.4byte	0x13c
 801 012a 81       		.byte	0x81
 802 012b 00       		.byte	0
 803 012c 08       		.uleb128 0x8
 804 012d 8C000000 		.4byte	0x8c
 805 0131 3C010000 		.4byte	0x13c
 806 0135 09       		.uleb128 0x9
 807 0136 7F000000 		.4byte	0x7f
 808 013a 7F       		.byte	0x7f
 809 013b 00       		.byte	0
 810 013c 08       		.uleb128 0x8
 811 013d 8C000000 		.4byte	0x8c
 812 0141 4C010000 		.4byte	0x14c
 813 0145 09       		.uleb128 0x9
 814 0146 7F000000 		.4byte	0x7f
 815 014a FF       		.byte	0xff
 816 014b 00       		.byte	0
 817 014c 03       		.uleb128 0x3
 818 014d DB030000 		.4byte	.LASF23
 819 0151 05       		.byte	0x5
 820 0152 10       		.byte	0x10
 821 0153 FE000000 		.4byte	0xfe
 822 0157 03       		.uleb128 0x3
 823 0158 A5020000 		.4byte	.LASF24
 824 015c 06       		.byte	0x6
 825 015d 7E       		.byte	0x7e
 826 015e 62010000 		.4byte	0x162
 827 0162 0E       		.uleb128 0xe
 828 0163 A5020000 		.4byte	.LASF24
 829 0167 06       		.uleb128 0x6
 830 0168 04       		.byte	0x4
 831 0169 57010000 		.4byte	0x157
 832 016d 0F       		.uleb128 0xf
 833 016e 2C       		.byte	0x2c
 834 016f 07       		.byte	0x7
 835 0170 14       		.byte	0x14
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 20


 836 0171 9A010000 		.4byte	0x19a
 837 0175 10       		.uleb128 0x10
 838 0176 6B657900 		.ascii	"key\000"
 839 017a 07       		.byte	0x7
 840 017b 15       		.byte	0x15
 841 017c 9A010000 		.4byte	0x19a
 842 0180 00       		.byte	0
 843 0181 0D       		.uleb128 0xd
 844 0182 4E050000 		.4byte	.LASF25
 845 0186 07       		.byte	0x7
 846 0187 16       		.byte	0x16
 847 0188 9A010000 		.4byte	0x19a
 848 018c 14       		.byte	0x14
 849 018d 0D       		.uleb128 0xd
 850 018e 97010000 		.4byte	.LASF26
 851 0192 07       		.byte	0x7
 852 0193 17       		.byte	0x17
 853 0194 DD000000 		.4byte	0xdd
 854 0198 28       		.byte	0x28
 855 0199 00       		.byte	0
 856 019a 08       		.uleb128 0x8
 857 019b 8C000000 		.4byte	0x8c
 858 019f AA010000 		.4byte	0x1aa
 859 01a3 09       		.uleb128 0x9
 860 01a4 7F000000 		.4byte	0x7f
 861 01a8 13       		.byte	0x13
 862 01a9 00       		.byte	0
 863 01aa 03       		.uleb128 0x3
 864 01ab 1B030000 		.4byte	.LASF27
 865 01af 07       		.byte	0x7
 866 01b0 19       		.byte	0x19
 867 01b1 6D010000 		.4byte	0x16d
 868 01b5 0F       		.uleb128 0xf
 869 01b6 3C       		.byte	0x3c
 870 01b7 08       		.byte	0x8
 871 01b8 36       		.byte	0x36
 872 01b9 E2010000 		.4byte	0x1e2
 873 01bd 0D       		.uleb128 0xd
 874 01be 09000000 		.4byte	.LASF28
 875 01c2 08       		.byte	0x8
 876 01c3 37       		.byte	0x37
 877 01c4 9A010000 		.4byte	0x19a
 878 01c8 00       		.byte	0
 879 01c9 0D       		.uleb128 0xd
 880 01ca 00000000 		.4byte	.LASF29
 881 01ce 08       		.byte	0x8
 882 01cf 38       		.byte	0x38
 883 01d0 9A010000 		.4byte	0x19a
 884 01d4 14       		.byte	0x14
 885 01d5 0D       		.uleb128 0xd
 886 01d6 E2030000 		.4byte	.LASF30
 887 01da 08       		.byte	0x8
 888 01db 39       		.byte	0x39
 889 01dc 9A010000 		.4byte	0x19a
 890 01e0 28       		.byte	0x28
 891 01e1 00       		.byte	0
 892 01e2 03       		.uleb128 0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 21


 893 01e3 BA040000 		.4byte	.LASF31
 894 01e7 08       		.byte	0x8
 895 01e8 3B       		.byte	0x3b
 896 01e9 B5010000 		.4byte	0x1b5
 897 01ed 0F       		.uleb128 0xf
 898 01ee 20       		.byte	0x20
 899 01ef 08       		.byte	0x8
 900 01f0 3D       		.byte	0x3d
 901 01f1 56020000 		.4byte	0x256
 902 01f5 0D       		.uleb128 0xd
 903 01f6 27030000 		.4byte	.LASF32
 904 01fa 08       		.byte	0x8
 905 01fb 3E       		.byte	0x3e
 906 01fc 68000000 		.4byte	0x68
 907 0200 00       		.byte	0
 908 0201 10       		.uleb128 0x10
 909 0202 62657200 		.ascii	"ber\000"
 910 0206 08       		.byte	0x8
 911 0207 3F       		.byte	0x3f
 912 0208 68000000 		.4byte	0x68
 913 020c 04       		.byte	0x4
 914 020d 0D       		.uleb128 0xd
 915 020e 6E020000 		.4byte	.LASF33
 916 0212 08       		.byte	0x8
 917 0213 40       		.byte	0x40
 918 0214 68000000 		.4byte	0x68
 919 0218 08       		.byte	0x8
 920 0219 0D       		.uleb128 0xd
 921 021a 39010000 		.4byte	.LASF34
 922 021e 08       		.byte	0x8
 923 021f 41       		.byte	0x41
 924 0220 68000000 		.4byte	0x68
 925 0224 0C       		.byte	0xc
 926 0225 0D       		.uleb128 0xd
 927 0226 1F040000 		.4byte	.LASF35
 928 022a 08       		.byte	0x8
 929 022b 42       		.byte	0x42
 930 022c 68000000 		.4byte	0x68
 931 0230 10       		.byte	0x10
 932 0231 0D       		.uleb128 0xd
 933 0232 AD020000 		.4byte	.LASF36
 934 0236 08       		.byte	0x8
 935 0237 43       		.byte	0x43
 936 0238 68000000 		.4byte	0x68
 937 023c 14       		.byte	0x14
 938 023d 0D       		.uleb128 0xd
 939 023e 95030000 		.4byte	.LASF37
 940 0242 08       		.byte	0x8
 941 0243 44       		.byte	0x44
 942 0244 68000000 		.4byte	0x68
 943 0248 18       		.byte	0x18
 944 0249 0D       		.uleb128 0xd
 945 024a C8030000 		.4byte	.LASF38
 946 024e 08       		.byte	0x8
 947 024f 45       		.byte	0x45
 948 0250 68000000 		.4byte	0x68
 949 0254 1C       		.byte	0x1c
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 22


 950 0255 00       		.byte	0
 951 0256 03       		.uleb128 0x3
 952 0257 EF030000 		.4byte	.LASF39
 953 025b 08       		.byte	0x8
 954 025c 47       		.byte	0x47
 955 025d ED010000 		.4byte	0x1ed
 956 0261 0F       		.uleb128 0xf
 957 0262 07       		.byte	0x7
 958 0263 08       		.byte	0x8
 959 0264 53       		.byte	0x53
 960 0265 BE020000 		.4byte	0x2be
 961 0269 0D       		.uleb128 0xd
 962 026a 5E050000 		.4byte	.LASF40
 963 026e 08       		.byte	0x8
 964 026f 55       		.byte	0x55
 965 0270 B9000000 		.4byte	0xb9
 966 0274 00       		.byte	0
 967 0275 0D       		.uleb128 0xd
 968 0276 6E030000 		.4byte	.LASF41
 969 027a 08       		.byte	0x8
 970 027b 57       		.byte	0x57
 971 027c BE020000 		.4byte	0x2be
 972 0280 01       		.byte	0x1
 973 0281 0D       		.uleb128 0xd
 974 0282 4F020000 		.4byte	.LASF42
 975 0286 08       		.byte	0x8
 976 0287 59       		.byte	0x59
 977 0288 B9000000 		.4byte	0xb9
 978 028c 02       		.byte	0x2
 979 028d 0D       		.uleb128 0xd
 980 028e 2D030000 		.4byte	.LASF43
 981 0292 08       		.byte	0x8
 982 0293 5B       		.byte	0x5b
 983 0294 B9000000 		.4byte	0xb9
 984 0298 03       		.byte	0x3
 985 0299 0D       		.uleb128 0xd
 986 029a AE040000 		.4byte	.LASF44
 987 029e 08       		.byte	0x8
 988 029f 5E       		.byte	0x5e
 989 02a0 B9000000 		.4byte	0xb9
 990 02a4 04       		.byte	0x4
 991 02a5 0D       		.uleb128 0xd
 992 02a6 1E010000 		.4byte	.LASF45
 993 02aa 08       		.byte	0x8
 994 02ab 63       		.byte	0x63
 995 02ac B9000000 		.4byte	0xb9
 996 02b0 05       		.byte	0x5
 997 02b1 0D       		.uleb128 0xd
 998 02b2 5C020000 		.4byte	.LASF46
 999 02b6 08       		.byte	0x8
 1000 02b7 65       		.byte	0x65
 1001 02b8 B9000000 		.4byte	0xb9
 1002 02bc 06       		.byte	0x6
 1003 02bd 00       		.byte	0
 1004 02be 02       		.uleb128 0x2
 1005 02bf 01       		.byte	0x1
 1006 02c0 02       		.byte	0x2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 23


 1007 02c1 FD030000 		.4byte	.LASF47
 1008 02c5 03       		.uleb128 0x3
 1009 02c6 57030000 		.4byte	.LASF48
 1010 02ca 08       		.byte	0x8
 1011 02cb 67       		.byte	0x67
 1012 02cc 61020000 		.4byte	0x261
 1013 02d0 0F       		.uleb128 0xf
 1014 02d1 06       		.byte	0x6
 1015 02d2 09       		.byte	0x9
 1016 02d3 2E       		.byte	0x2e
 1017 02d4 09030000 		.4byte	0x309
 1018 02d8 0D       		.uleb128 0xd
 1019 02d9 43000000 		.4byte	.LASF49
 1020 02dd 09       		.byte	0x9
 1021 02de 30       		.byte	0x30
 1022 02df C5000000 		.4byte	0xc5
 1023 02e3 00       		.byte	0
 1024 02e4 0D       		.uleb128 0xd
 1025 02e5 2D000000 		.4byte	.LASF50
 1026 02e9 09       		.byte	0x9
 1027 02ea 31       		.byte	0x31
 1028 02eb D1000000 		.4byte	0xd1
 1029 02ef 02       		.byte	0x2
 1030 02f0 0D       		.uleb128 0xd
 1031 02f1 C7040000 		.4byte	.LASF51
 1032 02f5 09       		.byte	0x9
 1033 02f6 32       		.byte	0x32
 1034 02f7 B9000000 		.4byte	0xb9
 1035 02fb 04       		.byte	0x4
 1036 02fc 0D       		.uleb128 0xd
 1037 02fd 90050000 		.4byte	.LASF52
 1038 0301 09       		.byte	0x9
 1039 0302 33       		.byte	0x33
 1040 0303 B9000000 		.4byte	0xb9
 1041 0307 05       		.byte	0x5
 1042 0308 00       		.byte	0
 1043 0309 03       		.uleb128 0x3
 1044 030a 49020000 		.4byte	.LASF53
 1045 030e 09       		.byte	0x9
 1046 030f 36       		.byte	0x36
 1047 0310 14030000 		.4byte	0x314
 1048 0314 11       		.uleb128 0x11
 1049 0315 D0020000 		.4byte	0x2d0
 1050 0319 0F       		.uleb128 0xf
 1051 031a 1C       		.byte	0x1c
 1052 031b 09       		.byte	0x9
 1053 031c 39       		.byte	0x39
 1054 031d 3A030000 		.4byte	0x33a
 1055 0321 0D       		.uleb128 0xd
 1056 0322 23020000 		.4byte	.LASF54
 1057 0326 09       		.byte	0x9
 1058 0327 3B       		.byte	0x3b
 1059 0328 3A030000 		.4byte	0x33a
 1060 032c 00       		.byte	0
 1061 032d 0D       		.uleb128 0xd
 1062 032e 2B010000 		.4byte	.LASF55
 1063 0332 09       		.byte	0x9
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 24


 1064 0333 3C       		.byte	0x3c
 1065 0334 9E000000 		.4byte	0x9e
 1066 0338 04       		.byte	0x4
 1067 0339 00       		.byte	0
 1068 033a 06       		.uleb128 0x6
 1069 033b 04       		.byte	0x4
 1070 033c E2010000 		.4byte	0x1e2
 1071 0340 03       		.uleb128 0x3
 1072 0341 77030000 		.4byte	.LASF56
 1073 0345 09       		.byte	0x9
 1074 0346 3E       		.byte	0x3e
 1075 0347 19030000 		.4byte	0x319
 1076 034b 0F       		.uleb128 0xf
 1077 034c 68       		.byte	0x68
 1078 034d 09       		.byte	0x9
 1079 034e 44       		.byte	0x44
 1080 034f 6C030000 		.4byte	0x36c
 1081 0353 0D       		.uleb128 0xd
 1082 0354 72000000 		.4byte	.LASF57
 1083 0358 09       		.byte	0x9
 1084 0359 49       		.byte	0x49
 1085 035a 6C030000 		.4byte	0x36c
 1086 035e 00       		.byte	0
 1087 035f 0D       		.uleb128 0xd
 1088 0360 46050000 		.4byte	.LASF58
 1089 0364 09       		.byte	0x9
 1090 0365 4A       		.byte	0x4a
 1091 0366 68000000 		.4byte	0x68
 1092 036a 64       		.byte	0x64
 1093 036b 00       		.byte	0
 1094 036c 08       		.uleb128 0x8
 1095 036d 8C000000 		.4byte	0x8c
 1096 0371 7C030000 		.4byte	0x37c
 1097 0375 09       		.uleb128 0x9
 1098 0376 7F000000 		.4byte	0x7f
 1099 037a 63       		.byte	0x63
 1100 037b 00       		.byte	0
 1101 037c 03       		.uleb128 0x3
 1102 037d 1E000000 		.4byte	.LASF59
 1103 0381 09       		.byte	0x9
 1104 0382 50       		.byte	0x50
 1105 0383 4B030000 		.4byte	0x34b
 1106 0387 12       		.uleb128 0x12
 1107 0388 F8040000 		.4byte	.LASF70
 1108 038c 01       		.byte	0x1
 1109 038d 1E       		.byte	0x1e
 1110 038e 00000000 		.4byte	.LFB64
 1111 0392 0C000000 		.4byte	.LFE64-.LFB64
 1112 0396 01       		.uleb128 0x1
 1113 0397 9C       		.byte	0x9c
 1114 0398 13       		.uleb128 0x13
 1115 0399 AA010000 		.4byte	.LASF60
 1116 039d 01       		.byte	0x1
 1117 039e 2C       		.byte	0x2c
 1118 039f B9000000 		.4byte	0xb9
 1119 03a3 00000000 		.4byte	.LFB65
 1120 03a7 40000000 		.4byte	.LFE65-.LFB65
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 25


 1121 03ab 01       		.uleb128 0x1
 1122 03ac 9C       		.byte	0x9c
 1123 03ad CE030000 		.4byte	0x3ce
 1124 03b1 14       		.uleb128 0x14
 1125 03b2 E7010000 		.4byte	.LASF62
 1126 03b6 01       		.byte	0x1
 1127 03b7 2C       		.byte	0x2c
 1128 03b8 86000000 		.4byte	0x86
 1129 03bc 02       		.uleb128 0x2
 1130 03bd 91       		.byte	0x91
 1131 03be 6C       		.sleb128 -20
 1132 03bf 15       		.uleb128 0x15
 1133 03c0 AD030000 		.4byte	.LASF21
 1134 03c4 01       		.byte	0x1
 1135 03c5 2E       		.byte	0x2e
 1136 03c6 B9000000 		.4byte	0xb9
 1137 03ca 02       		.uleb128 0x2
 1138 03cb 91       		.byte	0x91
 1139 03cc 77       		.sleb128 -9
 1140 03cd 00       		.byte	0
 1141 03ce 13       		.uleb128 0x13
 1142 03cf 86040000 		.4byte	.LASF61
 1143 03d3 01       		.byte	0x1
 1144 03d4 43       		.byte	0x43
 1145 03d5 B9000000 		.4byte	0xb9
 1146 03d9 00000000 		.4byte	.LFB66
 1147 03dd 2C000000 		.4byte	.LFE66-.LFB66
 1148 03e1 01       		.uleb128 0x1
 1149 03e2 9C       		.byte	0x9c
 1150 03e3 04040000 		.4byte	0x404
 1151 03e7 14       		.uleb128 0x14
 1152 03e8 00050000 		.4byte	.LASF63
 1153 03ec 01       		.byte	0x1
 1154 03ed 43       		.byte	0x43
 1155 03ee 93000000 		.4byte	0x93
 1156 03f2 02       		.uleb128 0x2
 1157 03f3 91       		.byte	0x91
 1158 03f4 6C       		.sleb128 -20
 1159 03f5 15       		.uleb128 0x15
 1160 03f6 AD030000 		.4byte	.LASF21
 1161 03fa 01       		.byte	0x1
 1162 03fb 45       		.byte	0x45
 1163 03fc B9000000 		.4byte	0xb9
 1164 0400 02       		.uleb128 0x2
 1165 0401 91       		.byte	0x91
 1166 0402 77       		.sleb128 -9
 1167 0403 00       		.byte	0
 1168 0404 13       		.uleb128 0x13
 1169 0405 A1010000 		.4byte	.LASF64
 1170 0409 01       		.byte	0x1
 1171 040a 5A       		.byte	0x5a
 1172 040b B9000000 		.4byte	0xb9
 1173 040f 00000000 		.4byte	.LFB67
 1174 0413 6C000000 		.4byte	.LFE67-.LFB67
 1175 0417 01       		.uleb128 0x1
 1176 0418 9C       		.byte	0x9c
 1177 0419 64040000 		.4byte	0x464
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 26


 1178 041d 14       		.uleb128 0x14
 1179 041e 00050000 		.4byte	.LASF63
 1180 0422 01       		.byte	0x1
 1181 0423 5A       		.byte	0x5a
 1182 0424 93000000 		.4byte	0x93
 1183 0428 02       		.uleb128 0x2
 1184 0429 91       		.byte	0x91
 1185 042a 6C       		.sleb128 -20
 1186 042b 14       		.uleb128 0x14
 1187 042c 37030000 		.4byte	.LASF65
 1188 0430 01       		.byte	0x1
 1189 0431 5A       		.byte	0x5a
 1190 0432 93000000 		.4byte	0x93
 1191 0436 02       		.uleb128 0x2
 1192 0437 91       		.byte	0x91
 1193 0438 68       		.sleb128 -24
 1194 0439 14       		.uleb128 0x14
 1195 043a 18000000 		.4byte	.LASF66
 1196 043e 01       		.byte	0x1
 1197 043f 5A       		.byte	0x5a
 1198 0440 F7000000 		.4byte	0xf7
 1199 0444 02       		.uleb128 0x2
 1200 0445 91       		.byte	0x91
 1201 0446 64       		.sleb128 -28
 1202 0447 15       		.uleb128 0x15
 1203 0448 AD030000 		.4byte	.LASF21
 1204 044c 01       		.byte	0x1
 1205 044d 5C       		.byte	0x5c
 1206 044e B9000000 		.4byte	0xb9
 1207 0452 02       		.uleb128 0x2
 1208 0453 91       		.byte	0x91
 1209 0454 77       		.sleb128 -9
 1210 0455 15       		.uleb128 0x15
 1211 0456 08030000 		.4byte	.LASF67
 1212 045a 01       		.byte	0x1
 1213 045b 5D       		.byte	0x5d
 1214 045c 67010000 		.4byte	0x167
 1215 0460 02       		.uleb128 0x2
 1216 0461 91       		.byte	0x91
 1217 0462 70       		.sleb128 -16
 1218 0463 00       		.byte	0
 1219 0464 13       		.uleb128 0x13
 1220 0465 10000000 		.4byte	.LASF68
 1221 0469 01       		.byte	0x1
 1222 046a 86       		.byte	0x86
 1223 046b B9000000 		.4byte	0xb9
 1224 046f 00000000 		.4byte	.LFB68
 1225 0473 68000000 		.4byte	.LFE68-.LFB68
 1226 0477 01       		.uleb128 0x1
 1227 0478 9C       		.byte	0x9c
 1228 0479 C4040000 		.4byte	0x4c4
 1229 047d 14       		.uleb128 0x14
 1230 047e 00050000 		.4byte	.LASF63
 1231 0482 01       		.byte	0x1
 1232 0483 86       		.byte	0x86
 1233 0484 93000000 		.4byte	0x93
 1234 0488 02       		.uleb128 0x2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 27


 1235 0489 91       		.byte	0x91
 1236 048a 6C       		.sleb128 -20
 1237 048b 14       		.uleb128 0x14
 1238 048c 18000000 		.4byte	.LASF66
 1239 0490 01       		.byte	0x1
 1240 0491 86       		.byte	0x86
 1241 0492 7D000000 		.4byte	0x7d
 1242 0496 02       		.uleb128 0x2
 1243 0497 91       		.byte	0x91
 1244 0498 68       		.sleb128 -24
 1245 0499 14       		.uleb128 0x14
 1246 049a 4A010000 		.4byte	.LASF69
 1247 049e 01       		.byte	0x1
 1248 049f 86       		.byte	0x86
 1249 04a0 53000000 		.4byte	0x53
 1250 04a4 02       		.uleb128 0x2
 1251 04a5 91       		.byte	0x91
 1252 04a6 64       		.sleb128 -28
 1253 04a7 15       		.uleb128 0x15
 1254 04a8 AD030000 		.4byte	.LASF21
 1255 04ac 01       		.byte	0x1
 1256 04ad 88       		.byte	0x88
 1257 04ae B9000000 		.4byte	0xb9
 1258 04b2 02       		.uleb128 0x2
 1259 04b3 91       		.byte	0x91
 1260 04b4 77       		.sleb128 -9
 1261 04b5 15       		.uleb128 0x15
 1262 04b6 08030000 		.4byte	.LASF67
 1263 04ba 01       		.byte	0x1
 1264 04bb 89       		.byte	0x89
 1265 04bc 67010000 		.4byte	0x167
 1266 04c0 02       		.uleb128 0x2
 1267 04c1 91       		.byte	0x91
 1268 04c2 70       		.sleb128 -16
 1269 04c3 00       		.byte	0
 1270 04c4 16       		.uleb128 0x16
 1271 04c5 13050000 		.4byte	.LASF71
 1272 04c9 01       		.byte	0x1
 1273 04ca AB       		.byte	0xab
 1274 04cb 00000000 		.4byte	.LFB69
 1275 04cf 16000000 		.4byte	.LFE69-.LFB69
 1276 04d3 01       		.uleb128 0x1
 1277 04d4 9C       		.byte	0x9c
 1278 04d5 16       		.uleb128 0x16
 1279 04d6 3B020000 		.4byte	.LASF72
 1280 04da 01       		.byte	0x1
 1281 04db B4       		.byte	0xb4
 1282 04dc 00000000 		.4byte	.LFB70
 1283 04e0 2E000000 		.4byte	.LFE70-.LFB70
 1284 04e4 01       		.uleb128 0x1
 1285 04e5 9C       		.byte	0x9c
 1286 04e6 17       		.uleb128 0x17
 1287 04e7 65000000 		.4byte	.LASF108
 1288 04eb 01       		.byte	0x1
 1289 04ec C2       		.byte	0xc2
 1290 04ed 4C010000 		.4byte	0x14c
 1291 04f1 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 28


 1292 04f5 20010000 		.4byte	.LFE71-.LFB71
 1293 04f9 01       		.uleb128 0x1
 1294 04fa 9C       		.byte	0x9c
 1295 04fb 2D050000 		.4byte	0x52d
 1296 04ff 15       		.uleb128 0x15
 1297 0500 1A040000 		.4byte	.LASF73
 1298 0504 01       		.byte	0x1
 1299 0505 C5       		.byte	0xc5
 1300 0506 4C010000 		.4byte	0x14c
 1301 050a 03       		.uleb128 0x3
 1302 050b 91       		.byte	0x91
 1303 050c E47C     		.sleb128 -412
 1304 050e 15       		.uleb128 0x15
 1305 050f 19010000 		.4byte	.LASF74
 1306 0513 01       		.byte	0x1
 1307 0514 C9       		.byte	0xc9
 1308 0515 2D050000 		.4byte	0x52d
 1309 0519 03       		.uleb128 0x3
 1310 051a 91       		.byte	0x91
 1311 051b D87C     		.sleb128 -424
 1312 051d 15       		.uleb128 0x15
 1313 051e 00050000 		.4byte	.LASF63
 1314 0522 01       		.byte	0x1
 1315 0523 CA       		.byte	0xca
 1316 0524 3D050000 		.4byte	0x53d
 1317 0528 03       		.uleb128 0x3
 1318 0529 91       		.byte	0x91
 1319 052a CC7C     		.sleb128 -436
 1320 052c 00       		.byte	0
 1321 052d 08       		.uleb128 0x8
 1322 052e 8C000000 		.4byte	0x8c
 1323 0532 3D050000 		.4byte	0x53d
 1324 0536 09       		.uleb128 0x9
 1325 0537 7F000000 		.4byte	0x7f
 1326 053b 09       		.byte	0x9
 1327 053c 00       		.byte	0
 1328 053d 08       		.uleb128 0x8
 1329 053e 8C000000 		.4byte	0x8c
 1330 0542 4D050000 		.4byte	0x54d
 1331 0546 09       		.uleb128 0x9
 1332 0547 7F000000 		.4byte	0x7f
 1333 054b 08       		.byte	0x8
 1334 054c 00       		.byte	0
 1335 054d 18       		.uleb128 0x18
 1336 054e 90040000 		.4byte	.LASF75
 1337 0552 0A       		.byte	0xa
 1338 0553 1207     		.2byte	0x712
 1339 0555 59050000 		.4byte	0x559
 1340 0559 11       		.uleb128 0x11
 1341 055a AE000000 		.4byte	0xae
 1342 055e 19       		.uleb128 0x19
 1343 055f 72010000 		.4byte	.LASF76
 1344 0563 0B       		.byte	0xb
 1345 0564 25       		.byte	0x25
 1346 0565 6C030000 		.4byte	0x36c
 1347 0569 05       		.uleb128 0x5
 1348 056a 03       		.byte	0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 29


 1349 056b 00000000 		.4byte	level_sensor_inbox
 1350 056f 19       		.uleb128 0x19
 1351 0570 D2010000 		.4byte	.LASF77
 1352 0574 0B       		.byte	0xb
 1353 0575 27       		.byte	0x27
 1354 0576 BE020000 		.4byte	0x2be
 1355 057a 05       		.uleb128 0x5
 1356 057b 03       		.byte	0x3
 1357 057c 00000000 		.4byte	level_sensor_enabled
 1358 0580 19       		.uleb128 0x19
 1359 0581 13020000 		.4byte	.LASF78
 1360 0585 07       		.byte	0x7
 1361 0586 11       		.byte	0x11
 1362 0587 BE020000 		.4byte	0x2be
 1363 058b 05       		.uleb128 0x5
 1364 058c 03       		.byte	0x3
 1365 058d 00000000 		.4byte	buffer_overflow
 1366 0591 19       		.uleb128 0x19
 1367 0592 5A010000 		.4byte	.LASF79
 1368 0596 07       		.byte	0x7
 1369 0597 22       		.byte	0x22
 1370 0598 C5000000 		.4byte	0xc5
 1371 059c 05       		.uleb128 0x5
 1372 059d 03       		.byte	0x3
 1373 059e 00000000 		.4byte	dataPointsInStack
 1374 05a2 19       		.uleb128 0x19
 1375 05a3 B3010000 		.4byte	.LASF80
 1376 05a7 07       		.byte	0x7
 1377 05a8 23       		.byte	0x23
 1378 05a9 C5000000 		.4byte	0xc5
 1379 05ad 05       		.uleb128 0x5
 1380 05ae 03       		.byte	0x3
 1381 05af 00000000 		.4byte	dataPointsInStackDesired
 1382 05b3 08       		.uleb128 0x8
 1383 05b4 AA010000 		.4byte	0x1aa
 1384 05b8 C3050000 		.4byte	0x5c3
 1385 05bc 09       		.uleb128 0x9
 1386 05bd 7F000000 		.4byte	0x7f
 1387 05c1 95       		.byte	0x95
 1388 05c2 00       		.byte	0
 1389 05c3 19       		.uleb128 0x19
 1390 05c4 19010000 		.4byte	.LASF74
 1391 05c8 07       		.byte	0x7
 1392 05c9 24       		.byte	0x24
 1393 05ca B3050000 		.4byte	0x5b3
 1394 05ce 05       		.uleb128 0x5
 1395 05cf 03       		.byte	0x3
 1396 05d0 00000000 		.4byte	data
 1397 05d4 19       		.uleb128 0x19
 1398 05d5 C9020000 		.4byte	.LASF81
 1399 05d9 08       		.byte	0x8
 1400 05da 20       		.byte	0x20
 1401 05db B9000000 		.4byte	0xb9
 1402 05df 05       		.uleb128 0x5
 1403 05e0 03       		.byte	0x3
 1404 05e1 00000000 		.4byte	modem_state
 1405 05e5 19       		.uleb128 0x19
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 30


 1406 05e6 B2020000 		.4byte	.LASF82
 1407 05ea 08       		.byte	0x8
 1408 05eb 6A       		.byte	0x6a
 1409 05ec DD000000 		.4byte	0xdd
 1410 05f0 05       		.uleb128 0x5
 1411 05f1 03       		.byte	0x3
 1412 05f2 00000000 		.4byte	modem_start_time_stamp
 1413 05f6 19       		.uleb128 0x19
 1414 05f7 23020000 		.4byte	.LASF54
 1415 05fb 08       		.byte	0x8
 1416 05fc 6B       		.byte	0x6b
 1417 05fd E2010000 		.4byte	0x1e2
 1418 0601 05       		.uleb128 0x5
 1419 0602 03       		.byte	0x3
 1420 0603 00000000 		.4byte	modem_info
 1421 0607 19       		.uleb128 0x19
 1422 0608 3D030000 		.4byte	.LASF83
 1423 060c 08       		.byte	0x8
 1424 060d 6C       		.byte	0x6c
 1425 060e 56020000 		.4byte	0x256
 1426 0612 05       		.uleb128 0x5
 1427 0613 03       		.byte	0x3
 1428 0614 00000000 		.4byte	modem_stats
 1429 0618 19       		.uleb128 0x19
 1430 0619 31050000 		.4byte	.LASF84
 1431 061d 08       		.byte	0x8
 1432 061e 6D       		.byte	0x6d
 1433 061f C5020000 		.4byte	0x2c5
 1434 0623 05       		.uleb128 0x5
 1435 0624 03       		.byte	0x3
 1436 0625 00000000 		.4byte	updatable_parameters
 1437 0629 19       		.uleb128 0x19
 1438 062a 68050000 		.4byte	.LASF85
 1439 062e 0C       		.byte	0xc
 1440 062f 07       		.byte	0x7
 1441 0630 BE020000 		.4byte	0x2be
 1442 0634 05       		.uleb128 0x5
 1443 0635 03       		.byte	0x3
 1444 0636 00000000 		.4byte	App_LED_enabled
 1445 063a 19       		.uleb128 0x19
 1446 063b 89020000 		.4byte	.LASF86
 1447 063f 0C       		.byte	0xc
 1448 0640 08       		.byte	0x8
 1449 0641 6C030000 		.4byte	0x36c
 1450 0645 05       		.uleb128 0x5
 1451 0646 03       		.byte	0x3
 1452 0647 00000000 		.4byte	app_led_inbox
 1453 064b 08       		.uleb128 0x8
 1454 064c 8C000000 		.4byte	0x8c
 1455 0650 5C060000 		.4byte	0x65c
 1456 0654 1A       		.uleb128 0x1a
 1457 0655 7F000000 		.4byte	0x7f
 1458 0659 0F27     		.2byte	0x270f
 1459 065b 00       		.byte	0
 1460 065c 19       		.uleb128 0x19
 1461 065d 78050000 		.4byte	.LASF87
 1462 0661 09       		.byte	0x9
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 31


 1463 0662 18       		.byte	0x18
 1464 0663 4B060000 		.4byte	0x64b
 1465 0667 05       		.uleb128 0x5
 1466 0668 03       		.byte	0x3
 1467 0669 00000000 		.4byte	http_request
 1468 066d 19       		.uleb128 0x19
 1469 066e 54050000 		.4byte	.LASF88
 1470 0672 09       		.byte	0x9
 1471 0673 19       		.byte	0x19
 1472 0674 4B060000 		.4byte	0x64b
 1473 0678 05       		.uleb128 0x5
 1474 0679 03       		.byte	0x3
 1475 067a 00000000 		.4byte	http_body
 1476 067e 08       		.uleb128 0x8
 1477 067f 8C000000 		.4byte	0x8c
 1478 0683 8E060000 		.4byte	0x68e
 1479 0687 09       		.uleb128 0x9
 1480 0688 7F000000 		.4byte	0x7f
 1481 068c C7       		.byte	0xc7
 1482 068d 00       		.byte	0
 1483 068e 19       		.uleb128 0x19
 1484 068f 5C040000 		.4byte	.LASF89
 1485 0693 09       		.byte	0x9
 1486 0694 1A       		.byte	0x1a
 1487 0695 7E060000 		.4byte	0x67e
 1488 0699 05       		.uleb128 0x5
 1489 069a 03       		.byte	0x3
 1490 069b 00000000 		.4byte	http_route
 1491 069f 19       		.uleb128 0x19
 1492 06a0 BC030000 		.4byte	.LASF90
 1493 06a4 09       		.byte	0x9
 1494 06a5 41       		.byte	0x41
 1495 06a6 40030000 		.4byte	0x340
 1496 06aa 05       		.uleb128 0x5
 1497 06ab 03       		.byte	0x3
 1498 06ac 00000000 		.4byte	system_info
 1499 06b0 19       		.uleb128 0x19
 1500 06b1 F8020000 		.4byte	.LASF91
 1501 06b5 09       		.byte	0x9
 1502 06b6 53       		.byte	0x53
 1503 06b7 7C030000 		.4byte	0x37c
 1504 06bb 05       		.uleb128 0x5
 1505 06bc 03       		.byte	0x3
 1506 06bd 00000000 		.4byte	system_settings
 1507 06c1 19       		.uleb128 0x19
 1508 06c2 2E020000 		.4byte	.LASF92
 1509 06c6 09       		.byte	0x9
 1510 06c7 6F       		.byte	0x6f
 1511 06c8 09030000 		.4byte	0x309
 1512 06cc 05       		.uleb128 0x5
 1513 06cd 03       		.byte	0x3
 1514 06ce 00000000 		.4byte	alarmMeasure
 1515 06d2 19       		.uleb128 0x19
 1516 06d3 49030000 		.4byte	.LASF93
 1517 06d7 09       		.byte	0x9
 1518 06d8 70       		.byte	0x70
 1519 06d9 B9000000 		.4byte	0xb9
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 32


 1520 06dd 05       		.uleb128 0x5
 1521 06de 03       		.byte	0x3
 1522 06df 00000000 		.4byte	timeToMeasure
 1523 06e3 19       		.uleb128 0x19
 1524 06e4 73020000 		.4byte	.LASF94
 1525 06e8 09       		.byte	0x9
 1526 06e9 71       		.byte	0x71
 1527 06ea 09030000 		.4byte	0x309
 1528 06ee 05       		.uleb128 0x5
 1529 06ef 03       		.byte	0x3
 1530 06f0 00000000 		.4byte	alarmSync
 1531 06f4 19       		.uleb128 0x19
 1532 06f5 85050000 		.4byte	.LASF95
 1533 06f9 09       		.byte	0x9
 1534 06fa 72       		.byte	0x72
 1535 06fb B9000000 		.4byte	0xb9
 1536 06ff 05       		.uleb128 0x5
 1537 0700 03       		.byte	0x3
 1538 0701 00000000 		.4byte	timeToSync
 1539 0705 19       		.uleb128 0x19
 1540 0706 03040000 		.4byte	.LASF96
 1541 070a 09       		.byte	0x9
 1542 070b 73       		.byte	0x73
 1543 070c B9000000 		.4byte	0xb9
 1544 0710 05       		.uleb128 0x5
 1545 0711 03       		.byte	0x3
 1546 0712 00000000 		.4byte	timeToSycnRemoteParams
 1547 0716 1B       		.uleb128 0x1b
 1548 0717 68657900 		.ascii	"hey\000"
 1549 071b 09       		.byte	0x9
 1550 071c 74       		.byte	0x74
 1551 071d B9000000 		.4byte	0xb9
 1552 0721 05       		.uleb128 0x5
 1553 0722 03       		.byte	0x3
 1554 0723 00000000 		.4byte	hey
 1555 0727 19       		.uleb128 0x19
 1556 0728 3E010000 		.4byte	.LASF97
 1557 072c 09       		.byte	0x9
 1558 072d 77       		.byte	0x77
 1559 072e 09030000 		.4byte	0x309
 1560 0732 05       		.uleb128 0x5
 1561 0733 03       		.byte	0x3
 1562 0734 00000000 		.4byte	alarmAppLED
 1563 0738 19       		.uleb128 0x19
 1564 0739 EB040000 		.4byte	.LASF98
 1565 073d 09       		.byte	0x9
 1566 073e 78       		.byte	0x78
 1567 073f B9000000 		.4byte	0xb9
 1568 0743 05       		.uleb128 0x5
 1569 0744 03       		.byte	0x3
 1570 0745 00000000 		.4byte	timeToAppLED
 1571 0749 19       		.uleb128 0x19
 1572 074a 9D040000 		.4byte	.LASF99
 1573 074e 09       		.byte	0x9
 1574 074f 7A       		.byte	0x7a
 1575 0750 09030000 		.4byte	0x309
 1576 0754 05       		.uleb128 0x5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 33


 1577 0755 03       		.byte	0x3
 1578 0756 00000000 		.4byte	alarmLevelSensor
 1579 075a 19       		.uleb128 0x19
 1580 075b 1F050000 		.4byte	.LASF100
 1581 075f 09       		.byte	0x9
 1582 0760 7B       		.byte	0x7b
 1583 0761 B9000000 		.4byte	0xb9
 1584 0765 05       		.uleb128 0x5
 1585 0766 03       		.byte	0x3
 1586 0767 00000000 		.4byte	timetoLevelSensor
 1587 076b 19       		.uleb128 0x19
 1588 076c 7A000000 		.4byte	.LASF101
 1589 0770 01       		.byte	0x1
 1590 0771 0D       		.byte	0xd
 1591 0772 2D050000 		.4byte	0x52d
 1592 0776 05       		.uleb128 0x5
 1593 0777 03       		.byte	0x3
 1594 0778 00000000 		.4byte	SD_dir
 1595 077c 08       		.uleb128 0x8
 1596 077d 8C000000 		.4byte	0x8c
 1597 0781 8D070000 		.4byte	0x78d
 1598 0785 1A       		.uleb128 0x1a
 1599 0786 7F000000 		.4byte	0x7f
 1600 078a B70B     		.2byte	0xbb7
 1601 078c 00       		.byte	0
 1602 078d 19       		.uleb128 0x19
 1603 078e B4030000 		.4byte	.LASF102
 1604 0792 01       		.byte	0x1
 1605 0793 0E       		.byte	0xe
 1606 0794 7C070000 		.4byte	0x77c
 1607 0798 05       		.uleb128 0x5
 1608 0799 03       		.byte	0x3
 1609 079a 00000000 		.4byte	SD_body
 1610 079e 08       		.uleb128 0x8
 1611 079f 8C000000 		.4byte	0x8c
 1612 07a3 AE070000 		.4byte	0x7ae
 1613 07a7 09       		.uleb128 0x9
 1614 07a8 7F000000 		.4byte	0x7f
 1615 07ac 1D       		.byte	0x1d
 1616 07ad 00       		.byte	0
 1617 07ae 19       		.uleb128 0x19
 1618 07af DF040000 		.4byte	.LASF103
 1619 07b3 01       		.byte	0x1
 1620 07b4 0F       		.byte	0xf
 1621 07b5 9E070000 		.4byte	0x79e
 1622 07b9 05       		.uleb128 0x5
 1623 07ba 03       		.byte	0x3
 1624 07bb 00000000 		.4byte	SD_filename
 1625 07bf 08       		.uleb128 0x8
 1626 07c0 8C000000 		.4byte	0x8c
 1627 07c4 CF070000 		.4byte	0x7cf
 1628 07c8 09       		.uleb128 0x9
 1629 07c9 7F000000 		.4byte	0x7f
 1630 07cd 04       		.byte	0x4
 1631 07ce 00       		.byte	0
 1632 07cf 19       		.uleb128 0x19
 1633 07d0 85010000 		.4byte	.LASF104
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 34


 1634 07d4 01       		.byte	0x1
 1635 07d5 10       		.byte	0x10
 1636 07d6 BF070000 		.4byte	0x7bf
 1637 07da 05       		.uleb128 0x5
 1638 07db 03       		.byte	0x3
 1639 07dc 00000000 		.4byte	SD_filemode
 1640 07e0 00       		.byte	0
 1641              		.section	.debug_abbrev,"",%progbits
 1642              	.Ldebug_abbrev0:
 1643 0000 01       		.uleb128 0x1
 1644 0001 11       		.uleb128 0x11
 1645 0002 01       		.byte	0x1
 1646 0003 25       		.uleb128 0x25
 1647 0004 0E       		.uleb128 0xe
 1648 0005 13       		.uleb128 0x13
 1649 0006 0B       		.uleb128 0xb
 1650 0007 03       		.uleb128 0x3
 1651 0008 0E       		.uleb128 0xe
 1652 0009 1B       		.uleb128 0x1b
 1653 000a 0E       		.uleb128 0xe
 1654 000b 55       		.uleb128 0x55
 1655 000c 17       		.uleb128 0x17
 1656 000d 11       		.uleb128 0x11
 1657 000e 01       		.uleb128 0x1
 1658 000f 10       		.uleb128 0x10
 1659 0010 17       		.uleb128 0x17
 1660 0011 00       		.byte	0
 1661 0012 00       		.byte	0
 1662 0013 02       		.uleb128 0x2
 1663 0014 24       		.uleb128 0x24
 1664 0015 00       		.byte	0
 1665 0016 0B       		.uleb128 0xb
 1666 0017 0B       		.uleb128 0xb
 1667 0018 3E       		.uleb128 0x3e
 1668 0019 0B       		.uleb128 0xb
 1669 001a 03       		.uleb128 0x3
 1670 001b 0E       		.uleb128 0xe
 1671 001c 00       		.byte	0
 1672 001d 00       		.byte	0
 1673 001e 03       		.uleb128 0x3
 1674 001f 16       		.uleb128 0x16
 1675 0020 00       		.byte	0
 1676 0021 03       		.uleb128 0x3
 1677 0022 0E       		.uleb128 0xe
 1678 0023 3A       		.uleb128 0x3a
 1679 0024 0B       		.uleb128 0xb
 1680 0025 3B       		.uleb128 0x3b
 1681 0026 0B       		.uleb128 0xb
 1682 0027 49       		.uleb128 0x49
 1683 0028 13       		.uleb128 0x13
 1684 0029 00       		.byte	0
 1685 002a 00       		.byte	0
 1686 002b 04       		.uleb128 0x4
 1687 002c 24       		.uleb128 0x24
 1688 002d 00       		.byte	0
 1689 002e 0B       		.uleb128 0xb
 1690 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 35


 1691 0030 3E       		.uleb128 0x3e
 1692 0031 0B       		.uleb128 0xb
 1693 0032 03       		.uleb128 0x3
 1694 0033 08       		.uleb128 0x8
 1695 0034 00       		.byte	0
 1696 0035 00       		.byte	0
 1697 0036 05       		.uleb128 0x5
 1698 0037 0F       		.uleb128 0xf
 1699 0038 00       		.byte	0
 1700 0039 0B       		.uleb128 0xb
 1701 003a 0B       		.uleb128 0xb
 1702 003b 00       		.byte	0
 1703 003c 00       		.byte	0
 1704 003d 06       		.uleb128 0x6
 1705 003e 0F       		.uleb128 0xf
 1706 003f 00       		.byte	0
 1707 0040 0B       		.uleb128 0xb
 1708 0041 0B       		.uleb128 0xb
 1709 0042 49       		.uleb128 0x49
 1710 0043 13       		.uleb128 0x13
 1711 0044 00       		.byte	0
 1712 0045 00       		.byte	0
 1713 0046 07       		.uleb128 0x7
 1714 0047 26       		.uleb128 0x26
 1715 0048 00       		.byte	0
 1716 0049 49       		.uleb128 0x49
 1717 004a 13       		.uleb128 0x13
 1718 004b 00       		.byte	0
 1719 004c 00       		.byte	0
 1720 004d 08       		.uleb128 0x8
 1721 004e 01       		.uleb128 0x1
 1722 004f 01       		.byte	0x1
 1723 0050 49       		.uleb128 0x49
 1724 0051 13       		.uleb128 0x13
 1725 0052 01       		.uleb128 0x1
 1726 0053 13       		.uleb128 0x13
 1727 0054 00       		.byte	0
 1728 0055 00       		.byte	0
 1729 0056 09       		.uleb128 0x9
 1730 0057 21       		.uleb128 0x21
 1731 0058 00       		.byte	0
 1732 0059 49       		.uleb128 0x49
 1733 005a 13       		.uleb128 0x13
 1734 005b 2F       		.uleb128 0x2f
 1735 005c 0B       		.uleb128 0xb
 1736 005d 00       		.byte	0
 1737 005e 00       		.byte	0
 1738 005f 0A       		.uleb128 0xa
 1739 0060 16       		.uleb128 0x16
 1740 0061 00       		.byte	0
 1741 0062 03       		.uleb128 0x3
 1742 0063 0E       		.uleb128 0xe
 1743 0064 3A       		.uleb128 0x3a
 1744 0065 0B       		.uleb128 0xb
 1745 0066 3B       		.uleb128 0x3b
 1746 0067 05       		.uleb128 0x5
 1747 0068 49       		.uleb128 0x49
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 36


 1748 0069 13       		.uleb128 0x13
 1749 006a 00       		.byte	0
 1750 006b 00       		.byte	0
 1751 006c 0B       		.uleb128 0xb
 1752 006d 26       		.uleb128 0x26
 1753 006e 00       		.byte	0
 1754 006f 00       		.byte	0
 1755 0070 00       		.byte	0
 1756 0071 0C       		.uleb128 0xc
 1757 0072 13       		.uleb128 0x13
 1758 0073 01       		.byte	0x1
 1759 0074 0B       		.uleb128 0xb
 1760 0075 05       		.uleb128 0x5
 1761 0076 3A       		.uleb128 0x3a
 1762 0077 0B       		.uleb128 0xb
 1763 0078 3B       		.uleb128 0x3b
 1764 0079 0B       		.uleb128 0xb
 1765 007a 01       		.uleb128 0x1
 1766 007b 13       		.uleb128 0x13
 1767 007c 00       		.byte	0
 1768 007d 00       		.byte	0
 1769 007e 0D       		.uleb128 0xd
 1770 007f 0D       		.uleb128 0xd
 1771 0080 00       		.byte	0
 1772 0081 03       		.uleb128 0x3
 1773 0082 0E       		.uleb128 0xe
 1774 0083 3A       		.uleb128 0x3a
 1775 0084 0B       		.uleb128 0xb
 1776 0085 3B       		.uleb128 0x3b
 1777 0086 0B       		.uleb128 0xb
 1778 0087 49       		.uleb128 0x49
 1779 0088 13       		.uleb128 0x13
 1780 0089 38       		.uleb128 0x38
 1781 008a 0B       		.uleb128 0xb
 1782 008b 00       		.byte	0
 1783 008c 00       		.byte	0
 1784 008d 0E       		.uleb128 0xe
 1785 008e 13       		.uleb128 0x13
 1786 008f 00       		.byte	0
 1787 0090 03       		.uleb128 0x3
 1788 0091 0E       		.uleb128 0xe
 1789 0092 3C       		.uleb128 0x3c
 1790 0093 19       		.uleb128 0x19
 1791 0094 00       		.byte	0
 1792 0095 00       		.byte	0
 1793 0096 0F       		.uleb128 0xf
 1794 0097 13       		.uleb128 0x13
 1795 0098 01       		.byte	0x1
 1796 0099 0B       		.uleb128 0xb
 1797 009a 0B       		.uleb128 0xb
 1798 009b 3A       		.uleb128 0x3a
 1799 009c 0B       		.uleb128 0xb
 1800 009d 3B       		.uleb128 0x3b
 1801 009e 0B       		.uleb128 0xb
 1802 009f 01       		.uleb128 0x1
 1803 00a0 13       		.uleb128 0x13
 1804 00a1 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 37


 1805 00a2 00       		.byte	0
 1806 00a3 10       		.uleb128 0x10
 1807 00a4 0D       		.uleb128 0xd
 1808 00a5 00       		.byte	0
 1809 00a6 03       		.uleb128 0x3
 1810 00a7 08       		.uleb128 0x8
 1811 00a8 3A       		.uleb128 0x3a
 1812 00a9 0B       		.uleb128 0xb
 1813 00aa 3B       		.uleb128 0x3b
 1814 00ab 0B       		.uleb128 0xb
 1815 00ac 49       		.uleb128 0x49
 1816 00ad 13       		.uleb128 0x13
 1817 00ae 38       		.uleb128 0x38
 1818 00af 0B       		.uleb128 0xb
 1819 00b0 00       		.byte	0
 1820 00b1 00       		.byte	0
 1821 00b2 11       		.uleb128 0x11
 1822 00b3 35       		.uleb128 0x35
 1823 00b4 00       		.byte	0
 1824 00b5 49       		.uleb128 0x49
 1825 00b6 13       		.uleb128 0x13
 1826 00b7 00       		.byte	0
 1827 00b8 00       		.byte	0
 1828 00b9 12       		.uleb128 0x12
 1829 00ba 2E       		.uleb128 0x2e
 1830 00bb 00       		.byte	0
 1831 00bc 3F       		.uleb128 0x3f
 1832 00bd 19       		.uleb128 0x19
 1833 00be 03       		.uleb128 0x3
 1834 00bf 0E       		.uleb128 0xe
 1835 00c0 3A       		.uleb128 0x3a
 1836 00c1 0B       		.uleb128 0xb
 1837 00c2 3B       		.uleb128 0x3b
 1838 00c3 0B       		.uleb128 0xb
 1839 00c4 11       		.uleb128 0x11
 1840 00c5 01       		.uleb128 0x1
 1841 00c6 12       		.uleb128 0x12
 1842 00c7 06       		.uleb128 0x6
 1843 00c8 40       		.uleb128 0x40
 1844 00c9 18       		.uleb128 0x18
 1845 00ca 9742     		.uleb128 0x2117
 1846 00cc 19       		.uleb128 0x19
 1847 00cd 00       		.byte	0
 1848 00ce 00       		.byte	0
 1849 00cf 13       		.uleb128 0x13
 1850 00d0 2E       		.uleb128 0x2e
 1851 00d1 01       		.byte	0x1
 1852 00d2 3F       		.uleb128 0x3f
 1853 00d3 19       		.uleb128 0x19
 1854 00d4 03       		.uleb128 0x3
 1855 00d5 0E       		.uleb128 0xe
 1856 00d6 3A       		.uleb128 0x3a
 1857 00d7 0B       		.uleb128 0xb
 1858 00d8 3B       		.uleb128 0x3b
 1859 00d9 0B       		.uleb128 0xb
 1860 00da 27       		.uleb128 0x27
 1861 00db 19       		.uleb128 0x19
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 38


 1862 00dc 49       		.uleb128 0x49
 1863 00dd 13       		.uleb128 0x13
 1864 00de 11       		.uleb128 0x11
 1865 00df 01       		.uleb128 0x1
 1866 00e0 12       		.uleb128 0x12
 1867 00e1 06       		.uleb128 0x6
 1868 00e2 40       		.uleb128 0x40
 1869 00e3 18       		.uleb128 0x18
 1870 00e4 9642     		.uleb128 0x2116
 1871 00e6 19       		.uleb128 0x19
 1872 00e7 01       		.uleb128 0x1
 1873 00e8 13       		.uleb128 0x13
 1874 00e9 00       		.byte	0
 1875 00ea 00       		.byte	0
 1876 00eb 14       		.uleb128 0x14
 1877 00ec 05       		.uleb128 0x5
 1878 00ed 00       		.byte	0
 1879 00ee 03       		.uleb128 0x3
 1880 00ef 0E       		.uleb128 0xe
 1881 00f0 3A       		.uleb128 0x3a
 1882 00f1 0B       		.uleb128 0xb
 1883 00f2 3B       		.uleb128 0x3b
 1884 00f3 0B       		.uleb128 0xb
 1885 00f4 49       		.uleb128 0x49
 1886 00f5 13       		.uleb128 0x13
 1887 00f6 02       		.uleb128 0x2
 1888 00f7 18       		.uleb128 0x18
 1889 00f8 00       		.byte	0
 1890 00f9 00       		.byte	0
 1891 00fa 15       		.uleb128 0x15
 1892 00fb 34       		.uleb128 0x34
 1893 00fc 00       		.byte	0
 1894 00fd 03       		.uleb128 0x3
 1895 00fe 0E       		.uleb128 0xe
 1896 00ff 3A       		.uleb128 0x3a
 1897 0100 0B       		.uleb128 0xb
 1898 0101 3B       		.uleb128 0x3b
 1899 0102 0B       		.uleb128 0xb
 1900 0103 49       		.uleb128 0x49
 1901 0104 13       		.uleb128 0x13
 1902 0105 02       		.uleb128 0x2
 1903 0106 18       		.uleb128 0x18
 1904 0107 00       		.byte	0
 1905 0108 00       		.byte	0
 1906 0109 16       		.uleb128 0x16
 1907 010a 2E       		.uleb128 0x2e
 1908 010b 00       		.byte	0
 1909 010c 3F       		.uleb128 0x3f
 1910 010d 19       		.uleb128 0x19
 1911 010e 03       		.uleb128 0x3
 1912 010f 0E       		.uleb128 0xe
 1913 0110 3A       		.uleb128 0x3a
 1914 0111 0B       		.uleb128 0xb
 1915 0112 3B       		.uleb128 0x3b
 1916 0113 0B       		.uleb128 0xb
 1917 0114 11       		.uleb128 0x11
 1918 0115 01       		.uleb128 0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 39


 1919 0116 12       		.uleb128 0x12
 1920 0117 06       		.uleb128 0x6
 1921 0118 40       		.uleb128 0x40
 1922 0119 18       		.uleb128 0x18
 1923 011a 9642     		.uleb128 0x2116
 1924 011c 19       		.uleb128 0x19
 1925 011d 00       		.byte	0
 1926 011e 00       		.byte	0
 1927 011f 17       		.uleb128 0x17
 1928 0120 2E       		.uleb128 0x2e
 1929 0121 01       		.byte	0x1
 1930 0122 3F       		.uleb128 0x3f
 1931 0123 19       		.uleb128 0x19
 1932 0124 03       		.uleb128 0x3
 1933 0125 0E       		.uleb128 0xe
 1934 0126 3A       		.uleb128 0x3a
 1935 0127 0B       		.uleb128 0xb
 1936 0128 3B       		.uleb128 0x3b
 1937 0129 0B       		.uleb128 0xb
 1938 012a 49       		.uleb128 0x49
 1939 012b 13       		.uleb128 0x13
 1940 012c 11       		.uleb128 0x11
 1941 012d 01       		.uleb128 0x1
 1942 012e 12       		.uleb128 0x12
 1943 012f 06       		.uleb128 0x6
 1944 0130 40       		.uleb128 0x40
 1945 0131 18       		.uleb128 0x18
 1946 0132 9642     		.uleb128 0x2116
 1947 0134 19       		.uleb128 0x19
 1948 0135 01       		.uleb128 0x1
 1949 0136 13       		.uleb128 0x13
 1950 0137 00       		.byte	0
 1951 0138 00       		.byte	0
 1952 0139 18       		.uleb128 0x18
 1953 013a 34       		.uleb128 0x34
 1954 013b 00       		.byte	0
 1955 013c 03       		.uleb128 0x3
 1956 013d 0E       		.uleb128 0xe
 1957 013e 3A       		.uleb128 0x3a
 1958 013f 0B       		.uleb128 0xb
 1959 0140 3B       		.uleb128 0x3b
 1960 0141 05       		.uleb128 0x5
 1961 0142 49       		.uleb128 0x49
 1962 0143 13       		.uleb128 0x13
 1963 0144 3F       		.uleb128 0x3f
 1964 0145 19       		.uleb128 0x19
 1965 0146 3C       		.uleb128 0x3c
 1966 0147 19       		.uleb128 0x19
 1967 0148 00       		.byte	0
 1968 0149 00       		.byte	0
 1969 014a 19       		.uleb128 0x19
 1970 014b 34       		.uleb128 0x34
 1971 014c 00       		.byte	0
 1972 014d 03       		.uleb128 0x3
 1973 014e 0E       		.uleb128 0xe
 1974 014f 3A       		.uleb128 0x3a
 1975 0150 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 40


 1976 0151 3B       		.uleb128 0x3b
 1977 0152 0B       		.uleb128 0xb
 1978 0153 49       		.uleb128 0x49
 1979 0154 13       		.uleb128 0x13
 1980 0155 3F       		.uleb128 0x3f
 1981 0156 19       		.uleb128 0x19
 1982 0157 02       		.uleb128 0x2
 1983 0158 18       		.uleb128 0x18
 1984 0159 00       		.byte	0
 1985 015a 00       		.byte	0
 1986 015b 1A       		.uleb128 0x1a
 1987 015c 21       		.uleb128 0x21
 1988 015d 00       		.byte	0
 1989 015e 49       		.uleb128 0x49
 1990 015f 13       		.uleb128 0x13
 1991 0160 2F       		.uleb128 0x2f
 1992 0161 05       		.uleb128 0x5
 1993 0162 00       		.byte	0
 1994 0163 00       		.byte	0
 1995 0164 1B       		.uleb128 0x1b
 1996 0165 34       		.uleb128 0x34
 1997 0166 00       		.byte	0
 1998 0167 03       		.uleb128 0x3
 1999 0168 08       		.uleb128 0x8
 2000 0169 3A       		.uleb128 0x3a
 2001 016a 0B       		.uleb128 0xb
 2002 016b 3B       		.uleb128 0x3b
 2003 016c 0B       		.uleb128 0xb
 2004 016d 49       		.uleb128 0x49
 2005 016e 13       		.uleb128 0x13
 2006 016f 3F       		.uleb128 0x3f
 2007 0170 19       		.uleb128 0x19
 2008 0171 02       		.uleb128 0x2
 2009 0172 18       		.uleb128 0x18
 2010 0173 00       		.byte	0
 2011 0174 00       		.byte	0
 2012 0175 00       		.byte	0
 2013              		.section	.debug_aranges,"",%progbits
 2014 0000 54000000 		.4byte	0x54
 2015 0004 0200     		.2byte	0x2
 2016 0006 00000000 		.4byte	.Ldebug_info0
 2017 000a 04       		.byte	0x4
 2018 000b 00       		.byte	0
 2019 000c 0000     		.2byte	0
 2020 000e 0000     		.2byte	0
 2021 0010 00000000 		.4byte	.LFB64
 2022 0014 0C000000 		.4byte	.LFE64-.LFB64
 2023 0018 00000000 		.4byte	.LFB65
 2024 001c 40000000 		.4byte	.LFE65-.LFB65
 2025 0020 00000000 		.4byte	.LFB66
 2026 0024 2C000000 		.4byte	.LFE66-.LFB66
 2027 0028 00000000 		.4byte	.LFB67
 2028 002c 6C000000 		.4byte	.LFE67-.LFB67
 2029 0030 00000000 		.4byte	.LFB68
 2030 0034 68000000 		.4byte	.LFE68-.LFB68
 2031 0038 00000000 		.4byte	.LFB69
 2032 003c 16000000 		.4byte	.LFE69-.LFB69
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 41


 2033 0040 00000000 		.4byte	.LFB70
 2034 0044 2E000000 		.4byte	.LFE70-.LFB70
 2035 0048 00000000 		.4byte	.LFB71
 2036 004c 20010000 		.4byte	.LFE71-.LFB71
 2037 0050 00000000 		.4byte	0
 2038 0054 00000000 		.4byte	0
 2039              		.section	.debug_ranges,"",%progbits
 2040              	.Ldebug_ranges0:
 2041 0000 00000000 		.4byte	.LFB64
 2042 0004 0C000000 		.4byte	.LFE64
 2043 0008 00000000 		.4byte	.LFB65
 2044 000c 40000000 		.4byte	.LFE65
 2045 0010 00000000 		.4byte	.LFB66
 2046 0014 2C000000 		.4byte	.LFE66
 2047 0018 00000000 		.4byte	.LFB67
 2048 001c 6C000000 		.4byte	.LFE67
 2049 0020 00000000 		.4byte	.LFB68
 2050 0024 68000000 		.4byte	.LFE68
 2051 0028 00000000 		.4byte	.LFB69
 2052 002c 16000000 		.4byte	.LFE69
 2053 0030 00000000 		.4byte	.LFB70
 2054 0034 2E000000 		.4byte	.LFE70
 2055 0038 00000000 		.4byte	.LFB71
 2056 003c 20010000 		.4byte	.LFE71
 2057 0040 00000000 		.4byte	0
 2058 0044 00000000 		.4byte	0
 2059              		.section	.debug_line,"",%progbits
 2060              	.Ldebug_line0:
 2061 0000 96020000 		.section	.debug_str,"MS",%progbits,1
 2061      0200CF01 
 2061      00000201 
 2061      FB0E0D00 
 2061      01010101 
 2062              	.LASF29:
 2063 0000 6D6F6465 		.ascii	"model_id\000"
 2063      6C5F6964 
 2063      00
 2064              	.LASF28:
 2065 0009 73696D5F 		.ascii	"sim_id\000"
 2065      696400
 2066              	.LASF68:
 2067 0010 53445F72 		.ascii	"SD_read\000"
 2067      65616400 
 2068              	.LASF66:
 2069 0018 70446174 		.ascii	"pData\000"
 2069      6100
 2070              	.LASF59:
 2071 001e 7379735F 		.ascii	"sys_settings_t\000"
 2071      73657474 
 2071      696E6773 
 2071      5F7400
 2072              	.LASF50:
 2073 002d 63757272 		.ascii	"currentCountDownValue\000"
 2073      656E7443 
 2073      6F756E74 
 2073      446F776E 
 2073      56616C75 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 42


 2074              	.LASF49:
 2075 0043 636F756E 		.ascii	"countDownValue\000"
 2075      74446F77 
 2075      6E56616C 
 2075      756500
 2076              	.LASF2:
 2077 0052 73686F72 		.ascii	"short int\000"
 2077      7420696E 
 2077      7400
 2078              	.LASF10:
 2079 005c 73697A65 		.ascii	"sizetype\000"
 2079      74797065 
 2079      00
 2080              	.LASF108:
 2081 0065 53445F63 		.ascii	"SD_card_test\000"
 2081      6172645F 
 2081      74657374 
 2081      00
 2082              	.LASF57:
 2083 0072 65705F68 		.ascii	"ep_host\000"
 2083      6F737400 
 2084              	.LASF101:
 2085 007a 53445F64 		.ascii	"SD_dir\000"
 2085      697200
 2086              	.LASF106:
 2087 0081 73645F63 		.ascii	"sd_card.c\000"
 2087      6172642E 
 2087      6300
 2088              	.LASF105:
 2089 008b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2089      43313120 
 2089      352E342E 
 2089      31203230 
 2089      31363036 
 2090 00be 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2090      20726576 
 2090      6973696F 
 2090      6E203233 
 2090      37373135 
 2091 00f1 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2091      66756E63 
 2091      74696F6E 
 2091      2D736563 
 2091      74696F6E 
 2092              	.LASF74:
 2093 0119 64617461 		.ascii	"data\000"
 2093      00
 2094              	.LASF45:
 2095 011e 4170705F 		.ascii	"App_LED_freq\000"
 2095      4C45445F 
 2095      66726571 
 2095      00
 2096              	.LASF55:
 2097 012b 63686970 		.ascii	"chip_uniqueId\000"
 2097      5F756E69 
 2097      71756549 
 2097      6400
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 43


 2098              	.LASF34:
 2099 0139 65636E6F 		.ascii	"ecno\000"
 2099      00
 2100              	.LASF97:
 2101 013e 616C6172 		.ascii	"alarmAppLED\000"
 2101      6D417070 
 2101      4C454400 
 2102              	.LASF69:
 2103 014a 4E756D42 		.ascii	"NumBytes\000"
 2103      79746573 
 2103      00
 2104              	.LASF15:
 2105 0153 75696E74 		.ascii	"uint16\000"
 2105      313600
 2106              	.LASF79:
 2107 015a 64617461 		.ascii	"dataPointsInStack\000"
 2107      506F696E 
 2107      7473496E 
 2107      53746163 
 2107      6B00
 2108              	.LASF14:
 2109 016c 75696E74 		.ascii	"uint8\000"
 2109      3800
 2110              	.LASF76:
 2111 0172 6C657665 		.ascii	"level_sensor_inbox\000"
 2111      6C5F7365 
 2111      6E736F72 
 2111      5F696E62 
 2111      6F7800
 2112              	.LASF104:
 2113 0185 53445F66 		.ascii	"SD_filemode\000"
 2113      696C656D 
 2113      6F646500 
 2114              	.LASF16:
 2115 0191 696E7431 		.ascii	"int16\000"
 2115      3600
 2116              	.LASF26:
 2117 0197 74696D65 		.ascii	"timeStamp\000"
 2117      5374616D 
 2117      7000
 2118              	.LASF64:
 2119 01a1 53445F77 		.ascii	"SD_write\000"
 2119      72697465 
 2119      00
 2120              	.LASF60:
 2121 01aa 53445F6D 		.ascii	"SD_mkdir\000"
 2121      6B646972 
 2121      00
 2122              	.LASF80:
 2123 01b3 64617461 		.ascii	"dataPointsInStackDesired\000"
 2123      506F696E 
 2123      7473496E 
 2123      53746163 
 2123      6B446573 
 2124              	.LASF18:
 2125 01cc 666C6F61 		.ascii	"float\000"
 2125      7400
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 44


 2126              	.LASF77:
 2127 01d2 6C657665 		.ascii	"level_sensor_enabled\000"
 2127      6C5F7365 
 2127      6E736F72 
 2127      5F656E61 
 2127      626C6564 
 2128              	.LASF62:
 2129 01e7 6469725F 		.ascii	"dir_name\000"
 2129      6E616D65 
 2129      00
 2130              	.LASF6:
 2131 01f0 6C6F6E67 		.ascii	"long long int\000"
 2131      206C6F6E 
 2131      6720696E 
 2131      7400
 2132              	.LASF11:
 2133 01fe 63686172 		.ascii	"char\000"
 2133      00
 2134              	.LASF22:
 2135 0203 72656173 		.ascii	"reason\000"
 2135      6F6E00
 2136              	.LASF4:
 2137 020a 6C6F6E67 		.ascii	"long int\000"
 2137      20696E74 
 2137      00
 2138              	.LASF78:
 2139 0213 62756666 		.ascii	"buffer_overflow\000"
 2139      65725F6F 
 2139      76657266 
 2139      6C6F7700 
 2140              	.LASF54:
 2141 0223 6D6F6465 		.ascii	"modem_info\000"
 2141      6D5F696E 
 2141      666F00
 2142              	.LASF92:
 2143 022e 616C6172 		.ascii	"alarmMeasure\000"
 2143      6D4D6561 
 2143      73757265 
 2143      00
 2144              	.LASF72:
 2145 023b 53445F70 		.ascii	"SD_power_down\000"
 2145      6F776572 
 2145      5F646F77 
 2145      6E00
 2146              	.LASF53:
 2147 0249 616C6172 		.ascii	"alarm\000"
 2147      6D00
 2148              	.LASF42:
 2149 024f 6D656173 		.ascii	"measure_time\000"
 2149      7572655F 
 2149      74696D65 
 2149      00
 2150              	.LASF46:
 2151 025c 4C657665 		.ascii	"Level_Sensor_freq\000"
 2151      6C5F5365 
 2151      6E736F72 
 2151      5F667265 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 45


 2151      7100
 2152              	.LASF33:
 2153 026e 72736370 		.ascii	"rscp\000"
 2153      00
 2154              	.LASF94:
 2155 0273 616C6172 		.ascii	"alarmSync\000"
 2155      6D53796E 
 2155      6300
 2156              	.LASF9:
 2157 027d 6C6F6E67 		.ascii	"long double\000"
 2157      20646F75 
 2157      626C6500 
 2158              	.LASF86:
 2159 0289 6170705F 		.ascii	"app_led_inbox\000"
 2159      6C65645F 
 2159      696E626F 
 2159      7800
 2160              	.LASF1:
 2161 0297 756E7369 		.ascii	"unsigned char\000"
 2161      676E6564 
 2161      20636861 
 2161      7200
 2162              	.LASF24:
 2163 02a5 46535F46 		.ascii	"FS_FILE\000"
 2163      494C4500 
 2164              	.LASF36:
 2165 02ad 72737270 		.ascii	"rsrp\000"
 2165      00
 2166              	.LASF82:
 2167 02b2 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2167      6D5F7374 
 2167      6172745F 
 2167      74696D65 
 2167      5F737461 
 2168              	.LASF81:
 2169 02c9 6D6F6465 		.ascii	"modem_state\000"
 2169      6D5F7374 
 2169      61746500 
 2170              	.LASF0:
 2171 02d5 7369676E 		.ascii	"signed char\000"
 2171      65642063 
 2171      68617200 
 2172              	.LASF7:
 2173 02e1 6C6F6E67 		.ascii	"long long unsigned int\000"
 2173      206C6F6E 
 2173      6720756E 
 2173      7369676E 
 2173      65642069 
 2174              	.LASF91:
 2175 02f8 73797374 		.ascii	"system_settings\000"
 2175      656D5F73 
 2175      65747469 
 2175      6E677300 
 2176              	.LASF67:
 2177 0308 7046696C 		.ascii	"pFile\000"
 2177      6500
 2178              	.LASF8:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 46


 2179 030e 756E7369 		.ascii	"unsigned int\000"
 2179      676E6564 
 2179      20696E74 
 2179      00
 2180              	.LASF27:
 2181 031b 6B65795F 		.ascii	"key_value_t\000"
 2181      76616C75 
 2181      655F7400 
 2182              	.LASF32:
 2183 0327 72786C65 		.ascii	"rxlev\000"
 2183      7600
 2184              	.LASF43:
 2185 032d 73796E63 		.ascii	"sync_time\000"
 2185      5F74696D 
 2185      6500
 2186              	.LASF65:
 2187 0337 704D6F64 		.ascii	"pMode\000"
 2187      6500
 2188              	.LASF83:
 2189 033d 6D6F6465 		.ascii	"modem_stats\000"
 2189      6D5F7374 
 2189      61747300 
 2190              	.LASF93:
 2191 0349 74696D65 		.ascii	"timeToMeasure\000"
 2191      546F4D65 
 2191      61737572 
 2191      6500
 2192              	.LASF48:
 2193 0357 75706461 		.ascii	"updatable_parameters_t\000"
 2193      7461626C 
 2193      655F7061 
 2193      72616D65 
 2193      74657273 
 2194              	.LASF41:
 2195 036e 73696D5F 		.ascii	"sim_type\000"
 2195      74797065 
 2195      00
 2196              	.LASF56:
 2197 0377 7379735F 		.ascii	"sys_info_t\000"
 2197      696E666F 
 2197      5F7400
 2198              	.LASF3:
 2199 0382 73686F72 		.ascii	"short unsigned int\000"
 2199      7420756E 
 2199      7369676E 
 2199      65642069 
 2199      6E7400
 2200              	.LASF37:
 2201 0395 74696D65 		.ascii	"time_to_network_connect\000"
 2201      5F746F5F 
 2201      6E657477 
 2201      6F726B5F 
 2201      636F6E6E 
 2202              	.LASF21:
 2203 03ad 73746174 		.ascii	"status\000"
 2203      757300
 2204              	.LASF102:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 47


 2205 03b4 53445F62 		.ascii	"SD_body\000"
 2205      6F647900 
 2206              	.LASF90:
 2207 03bc 73797374 		.ascii	"system_info\000"
 2207      656D5F69 
 2207      6E666F00 
 2208              	.LASF38:
 2209 03c8 74696D65 		.ascii	"time_to_acquire_ip\000"
 2209      5F746F5F 
 2209      61637175 
 2209      6972655F 
 2209      697000
 2210              	.LASF23:
 2211 03db 74657374 		.ascii	"test_t\000"
 2211      5F7400
 2212              	.LASF30:
 2213 03e2 696D6569 		.ascii	"imei\000"
 2213      00
 2214              	.LASF13:
 2215 03e7 696E7433 		.ascii	"int32_t\000"
 2215      325F7400 
 2216              	.LASF39:
 2217 03ef 6D6F6465 		.ascii	"modem_stats_t\000"
 2217      6D5F7374 
 2217      6174735F 
 2217      7400
 2218              	.LASF47:
 2219 03fd 5F426F6F 		.ascii	"_Bool\000"
 2219      6C00
 2220              	.LASF96:
 2221 0403 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2221      546F5379 
 2221      636E5265 
 2221      6D6F7465 
 2221      50617261 
 2222              	.LASF73:
 2223 041a 74657374 		.ascii	"test\000"
 2223      00
 2224              	.LASF35:
 2225 041f 72737271 		.ascii	"rsrq\000"
 2225      00
 2226              	.LASF107:
 2227 0424 433A5C55 		.ascii	"C:\\Users\\dantz\\Documents\\GitHub\\notoriOS\\noto"
 2227      73657273 
 2227      5C64616E 
 2227      747A5C44 
 2227      6F63756D 
 2228 0451 72694F53 		.ascii	"riOS.cydsn\000"
 2228      2E637964 
 2228      736E00
 2229              	.LASF89:
 2230 045c 68747470 		.ascii	"http_route\000"
 2230      5F726F75 
 2230      746500
 2231              	.LASF5:
 2232 0467 6C6F6E67 		.ascii	"long unsigned int\000"
 2232      20756E73 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 48


 2232      69676E65 
 2232      6420696E 
 2232      7400
 2233              	.LASF17:
 2234 0479 696E7433 		.ascii	"int32\000"
 2234      3200
 2235              	.LASF19:
 2236 047f 646F7562 		.ascii	"double\000"
 2236      6C6500
 2237              	.LASF61:
 2238 0486 53445F72 		.ascii	"SD_rmfile\000"
 2238      6D66696C 
 2238      6500
 2239              	.LASF75:
 2240 0490 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2240      52784275 
 2240      66666572 
 2240      00
 2241              	.LASF99:
 2242 049d 616C6172 		.ascii	"alarmLevelSensor\000"
 2242      6D4C6576 
 2242      656C5365 
 2242      6E736F72 
 2242      00
 2243              	.LASF44:
 2244 04ae 64656275 		.ascii	"debug_level\000"
 2244      675F6C65 
 2244      76656C00 
 2245              	.LASF31:
 2246 04ba 6D6F6465 		.ascii	"modem_info_t\000"
 2246      6D5F696E 
 2246      666F5F74 
 2246      00
 2247              	.LASF51:
 2248 04c7 636F756E 		.ascii	"countDownType\000"
 2248      74446F77 
 2248      6E547970 
 2248      6500
 2249              	.LASF12:
 2250 04d5 5F5F696E 		.ascii	"__int32_t\000"
 2250      7433325F 
 2250      7400
 2251              	.LASF103:
 2252 04df 53445F66 		.ascii	"SD_filename\000"
 2252      696C656E 
 2252      616D6500 
 2253              	.LASF98:
 2254 04eb 74696D65 		.ascii	"timeToAppLED\000"
 2254      546F4170 
 2254      704C4544 
 2254      00
 2255              	.LASF70:
 2256 04f8 53445F69 		.ascii	"SD_init\000"
 2256      6E697400 
 2257              	.LASF63:
 2258 0500 66696C65 		.ascii	"fileName\000"
 2258      4E616D65 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccZnflD9.s 			page 49


 2258      00
 2259              	.LASF20:
 2260 0509 74657374 		.ascii	"test_name\000"
 2260      5F6E616D 
 2260      6500
 2261              	.LASF71:
 2262 0513 53445F70 		.ascii	"SD_power_up\000"
 2262      6F776572 
 2262      5F757000 
 2263              	.LASF100:
 2264 051f 74696D65 		.ascii	"timetoLevelSensor\000"
 2264      746F4C65 
 2264      76656C53 
 2264      656E736F 
 2264      7200
 2265              	.LASF84:
 2266 0531 75706461 		.ascii	"updatable_parameters\000"
 2266      7461626C 
 2266      655F7061 
 2266      72616D65 
 2266      74657273 
 2267              	.LASF58:
 2268 0546 65705F70 		.ascii	"ep_port\000"
 2268      6F727400 
 2269              	.LASF25:
 2270 054e 76616C75 		.ascii	"value\000"
 2270      6500
 2271              	.LASF88:
 2272 0554 68747470 		.ascii	"http_body\000"
 2272      5F626F64 
 2272      7900
 2273              	.LASF40:
 2274 055e 6E6F6465 		.ascii	"node_type\000"
 2274      5F747970 
 2274      6500
 2275              	.LASF85:
 2276 0568 4170705F 		.ascii	"App_LED_enabled\000"
 2276      4C45445F 
 2276      656E6162 
 2276      6C656400 
 2277              	.LASF87:
 2278 0578 68747470 		.ascii	"http_request\000"
 2278      5F726571 
 2278      75657374 
 2278      00
 2279              	.LASF95:
 2280 0585 74696D65 		.ascii	"timeToSync\000"
 2280      546F5379 
 2280      6E6300
 2281              	.LASF52:
 2282 0590 636F756E 		.ascii	"countDownResetCondition\000"
 2282      74446F77 
 2282      6E526573 
 2282      6574436F 
 2282      6E646974 
 2283              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
