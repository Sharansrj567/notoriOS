ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"sd_card.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	inbox,100,4
  33              		.comm	http_request,10000,4
  34              		.comm	http_body,10000,4
  35              		.comm	http_route,200,4
  36              		.comm	system_info,28,4
  37              		.comm	system_settings,104,4
  38              		.comm	alarmMeasure,6,4
  39              		.comm	timeToMeasure,1,1
  40              		.comm	alarmSync,6,4
  41              		.comm	timeToSync,1,1
  42              		.comm	timeToSycnRemoteParams,1,1
  43              		.comm	hey,1,1
  44              		.comm	alarmAppLED,6,4
  45              		.comm	timeToAppLED,1,1
  46              		.global	SD_dir
  47              		.bss
  48              		.align	2
  49              		.type	SD_dir, %object
  50              		.size	SD_dir, 10
  51              	SD_dir:
  52 0000 00000000 		.space	10
  52      00000000 
  52      0000
  53              		.global	SD_body
  54 000a 0000     		.align	2
  55              		.type	SD_body, %object
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 2


  56              		.size	SD_body, 3000
  57              	SD_body:
  58 000c 00000000 		.space	3000
  58      00000000 
  58      00000000 
  58      00000000 
  58      00000000 
  59              		.global	SD_filename
  60              		.data
  61              		.align	2
  62              		.type	SD_filename, %object
  63              		.size	SD_filename, 30
  64              	SD_filename:
  65 0000 46696C65 		.ascii	"Filename.txt\000"
  65      6E616D65 
  65      2E747874 
  65      00
  66 000d 00000000 		.space	17
  66      00000000 
  66      00000000 
  66      00000000 
  66      00
  67              		.global	SD_filemode
  68 001e 0000     		.align	2
  69              		.type	SD_filemode, %object
  70              		.size	SD_filemode, 5
  71              	SD_filemode:
  72 0020 612B00   		.ascii	"a+\000"
  73 0023 0000     		.space	2
  74              		.section	.text.SD_init,"ax",%progbits
  75              		.align	2
  76              		.global	SD_init
  77              		.thumb
  78              		.thumb_func
  79              		.type	SD_init, %function
  80              	SD_init:
  81              	.LFB64:
  82              		.file 1 "sd_card.c"
   1:sd_card.c     **** /**
   2:sd_card.c     ****  * @file sdcard.c
   3:sd_card.c     ****  * @brief  Write to an SD card.
   4:sd_card.c     ****  * @author Brandon Wong
   5:sd_card.c     ****  * @version 0.0.01
   6:sd_card.c     ****  * @date 2019-05-15
   7:sd_card.c     ****  */
   8:sd_card.c     **** 
   9:sd_card.c     **** #include "sd_card.h"
  10:sd_card.c     **** #include "notoriOS.h"
  11:sd_card.c     **** 
  12:sd_card.c     **** // Preallocate card
  13:sd_card.c     **** char    SD_dir[10]      = {'\0'};
  14:sd_card.c     **** char    SD_body[3000]   = {'\0'};
  15:sd_card.c     **** char    SD_filename[30] = "Filename.txt";
  16:sd_card.c     **** char    SD_filemode[5]  = "a+";
  17:sd_card.c     **** 
  18:sd_card.c     **** 
  19:sd_card.c     **** void SD_power_up();
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 3


  20:sd_card.c     **** void SD_power_down();
  21:sd_card.c     **** 
  22:sd_card.c     **** ///NOTE -- IF SD CARD is not plugged it, the board will draw more power.
  23:sd_card.c     **** 
  24:sd_card.c     **** 
  25:sd_card.c     **** /** SD_init()
  26:sd_card.c     **** * @brief Initialize the file system for the SD card
  27:sd_card.c     **** * @param Null
  28:sd_card.c     **** * @return void
  29:sd_card.c     **** */
  30:sd_card.c     **** void SD_init()
  31:sd_card.c     **** {
  83              		.loc 1 31 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88 0000 80B4     		push	{r7}
  89              		.cfi_def_cfa_offset 4
  90              		.cfi_offset 7, -4
  91 0002 00AF     		add	r7, sp, #0
  92              		.cfi_def_cfa_register 7
  32:sd_card.c     ****     /* Uncomment to enable support for long file names
  33:sd_card.c     ****      * Note: To use long file names (LFN) support on PSoC 5LP devices, you must call
  34:sd_card.c     ****      * FS_FAT_SupportLFN(). For PSoC 3 devices, this feature is enabled by default.
  35:sd_card.c     ****      */
  36:sd_card.c     ****     //FS_FAT_SupportLFN();    
  37:sd_card.c     **** }
  93              		.loc 1 37 0
  94 0004 00BF     		nop
  95 0006 BD46     		mov	sp, r7
  96              		.cfi_def_cfa_register 13
  97              		@ sp needed
  98 0008 80BC     		pop	{r7}
  99              		.cfi_restore 7
 100              		.cfi_def_cfa_offset 0
 101 000a 7047     		bx	lr
 102              		.cfi_endproc
 103              	.LFE64:
 104              		.size	SD_init, .-SD_init
 105              		.section	.rodata
 106              		.align	2
 107              	.LC0:
 108 0000 252E3873 		.ascii	"%.8s\000"
 108      00
 109              		.section	.text.SD_mkdir,"ax",%progbits
 110              		.align	2
 111              		.global	SD_mkdir
 112              		.thumb
 113              		.thumb_func
 114              		.type	SD_mkdir, %function
 115              	SD_mkdir:
 116              	.LFB65:
  38:sd_card.c     **** 
  39:sd_card.c     **** /**
  40:sd_card.c     ****  * @brief Make a directory on the SD card
  41:sd_card.c     ****  * @param dir_name is the name of the directory to create
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 4


  42:sd_card.c     ****  * @return 1u on success, 0u otherwise
  43:sd_card.c     ****  */
  44:sd_card.c     **** uint8 SD_mkdir(char* dir_name)
  45:sd_card.c     **** {
 117              		.loc 1 45 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 16
 120              		@ frame_needed = 1, uses_anonymous_args = 0
 121 0000 80B5     		push	{r7, lr}
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 7, -8
 124              		.cfi_offset 14, -4
 125 0002 84B0     		sub	sp, sp, #16
 126              		.cfi_def_cfa_offset 24
 127 0004 00AF     		add	r7, sp, #0
 128              		.cfi_def_cfa_register 7
 129 0006 7860     		str	r0, [r7, #4]
  46:sd_card.c     ****     uint8 status = 9; // Initialize to a value not 0 or -1
 130              		.loc 1 46 0
 131 0008 0923     		movs	r3, #9
 132 000a FB73     		strb	r3, [r7, #15]
  47:sd_card.c     ****     
  48:sd_card.c     ****     SD_power_up(); // Wakeup the SD Card component
 133              		.loc 1 48 0
 134 000c FFF7FEFF 		bl	SD_power_up
  49:sd_card.c     ****     // The snprintf() function formats and stores a series of characters and values in the array bu
  50:sd_card.c     ****     snprintf(SD_dir,sizeof(SD_dir),"%.8s",dir_name); 
 135              		.loc 1 50 0
 136 0010 7B68     		ldr	r3, [r7, #4]
 137 0012 094A     		ldr	r2, .L4
 138 0014 0A21     		movs	r1, #10
 139 0016 0948     		ldr	r0, .L4+4
 140 0018 FFF7FEFF 		bl	snprintf
  51:sd_card.c     ****     
  52:sd_card.c     ****     // FS_MKDir() creates a directory using FS.h.
  53:sd_card.c     ****     // Typecasting (1+FS_MkDir(SD_dir)) into an uint8 datatype
  54:sd_card.c     ****     // This makes it 0 if it's a failture, 1 if it's successful
  55:sd_card.c     ****     status = (uint8) ( 1+FS_MkDir(SD_dir) );
 141              		.loc 1 55 0
 142 001c 0748     		ldr	r0, .L4+4
 143 001e FFF7FEFF 		bl	FS_MkDir
 144 0022 0346     		mov	r3, r0
 145 0024 DBB2     		uxtb	r3, r3
 146 0026 0133     		adds	r3, r3, #1
 147 0028 FB73     		strb	r3, [r7, #15]
  56:sd_card.c     ****     
  57:sd_card.c     ****     SD_power_down(); // Turn off the SD Card
 148              		.loc 1 57 0
 149 002a FFF7FEFF 		bl	SD_power_down
  58:sd_card.c     ****     
  59:sd_card.c     ****     return status;
 150              		.loc 1 59 0
 151 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  60:sd_card.c     **** }
 152              		.loc 1 60 0
 153 0030 1846     		mov	r0, r3
 154 0032 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 5


 155              		.cfi_def_cfa_offset 8
 156 0034 BD46     		mov	sp, r7
 157              		.cfi_def_cfa_register 13
 158              		@ sp needed
 159 0036 80BD     		pop	{r7, pc}
 160              	.L5:
 161              		.align	2
 162              	.L4:
 163 0038 00000000 		.word	.LC0
 164 003c 00000000 		.word	SD_dir
 165              		.cfi_endproc
 166              	.LFE65:
 167              		.size	SD_mkdir, .-SD_mkdir
 168              		.section	.text.SD_rmfile,"ax",%progbits
 169              		.align	2
 170              		.global	SD_rmfile
 171              		.thumb
 172              		.thumb_func
 173              		.type	SD_rmfile, %function
 174              	SD_rmfile:
 175              	.LFB66:
  61:sd_card.c     **** 
  62:sd_card.c     **** /**
  63:sd_card.c     ****  * @brief Delete a file
  64:sd_card.c     ****  * @param dir_name is the name of the directory to create
  65:sd_card.c     ****  * @return 1u on success, 0u otherwise
  66:sd_card.c     ****  */
  67:sd_card.c     **** uint8 SD_rmfile(const char * fileName)
  68:sd_card.c     **** {
 176              		.loc 1 68 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 16
 179              		@ frame_needed = 1, uses_anonymous_args = 0
 180 0000 80B5     		push	{r7, lr}
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 7, -8
 183              		.cfi_offset 14, -4
 184 0002 84B0     		sub	sp, sp, #16
 185              		.cfi_def_cfa_offset 24
 186 0004 00AF     		add	r7, sp, #0
 187              		.cfi_def_cfa_register 7
 188 0006 7860     		str	r0, [r7, #4]
  69:sd_card.c     ****     uint8 status = 9; // initialize to a value not 0 or -1
 189              		.loc 1 69 0
 190 0008 0923     		movs	r3, #9
 191 000a FB73     		strb	r3, [r7, #15]
  70:sd_card.c     **** 
  71:sd_card.c     ****     SD_power_up(); // Wakeup the SD Card component
 192              		.loc 1 71 0
 193 000c FFF7FEFF 		bl	SD_power_up
  72:sd_card.c     ****     
  73:sd_card.c     ****     // FS_Remove() removes a file using FS.h.
  74:sd_card.c     ****     // Typecasting (1+FS_Remove(fileName)) into an uint8 datatype
  75:sd_card.c     ****     // This makes it 0 if it's a failture, 1 if it's successful
  76:sd_card.c     ****     status = (uint8) ( 1+FS_Remove(fileName));
 194              		.loc 1 76 0
 195 0010 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 6


 196 0012 FFF7FEFF 		bl	FS_Remove
 197 0016 0346     		mov	r3, r0
 198 0018 DBB2     		uxtb	r3, r3
 199 001a 0133     		adds	r3, r3, #1
 200 001c FB73     		strb	r3, [r7, #15]
  77:sd_card.c     ****     
  78:sd_card.c     ****     SD_power_down(); // Turn off the SD Card
 201              		.loc 1 78 0
 202 001e FFF7FEFF 		bl	SD_power_down
  79:sd_card.c     ****     
  80:sd_card.c     ****     return status;
 203              		.loc 1 80 0
 204 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  81:sd_card.c     **** }
 205              		.loc 1 81 0
 206 0024 1846     		mov	r0, r3
 207 0026 1037     		adds	r7, r7, #16
 208              		.cfi_def_cfa_offset 8
 209 0028 BD46     		mov	sp, r7
 210              		.cfi_def_cfa_register 13
 211              		@ sp needed
 212 002a 80BD     		pop	{r7, pc}
 213              		.cfi_endproc
 214              	.LFE66:
 215              		.size	SD_rmfile, .-SD_rmfile
 216              		.section	.text.SD_write,"ax",%progbits
 217              		.align	2
 218              		.global	SD_write
 219              		.thumb
 220              		.thumb_func
 221              		.type	SD_write, %function
 222              	SD_write:
 223              	.LFB67:
  82:sd_card.c     **** 
  83:sd_card.c     **** /**
  84:sd_card.c     ****  * @brief Write data to the SD card
  85:sd_card.c     ****  * @param fileName is the name of the file to write to
  86:sd_card.c     ****  * @param pMode is the write mode
  87:sd_card.c     ****  * @param pData is the data to be written
  88:sd_card.c     ****  * @return 1u on success, 0u otherwise
  89:sd_card.c     ****  */
  90:sd_card.c     **** uint8 SD_write(const char * fileName, const char * pMode, const void * pData)
  91:sd_card.c     **** {
 224              		.loc 1 91 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 24
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228 0000 80B5     		push	{r7, lr}
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 7, -8
 231              		.cfi_offset 14, -4
 232 0002 86B0     		sub	sp, sp, #24
 233              		.cfi_def_cfa_offset 32
 234 0004 00AF     		add	r7, sp, #0
 235              		.cfi_def_cfa_register 7
 236 0006 F860     		str	r0, [r7, #12]
 237 0008 B960     		str	r1, [r7, #8]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 7


 238 000a 7A60     		str	r2, [r7, #4]
  92:sd_card.c     ****     uint8 status = 9u; // Initialize to a value not 0 or 1
 239              		.loc 1 92 0
 240 000c 0923     		movs	r3, #9
 241 000e FB75     		strb	r3, [r7, #23]
  93:sd_card.c     ****     FS_FILE *pFile; // FS_FILE data structure defined in FS.h
  94:sd_card.c     **** 
  95:sd_card.c     ****     SD_power_up(); // Wakeup the SD Card component
 242              		.loc 1 95 0
 243 0010 FFF7FEFF 		bl	SD_power_up
  96:sd_card.c     ****     
  97:sd_card.c     ****     // FS_FOpen() opens an existing file or creates a new one.
  98:sd_card.c     ****     // fileName is the file to be opened or created. It's a 0-termianted string that cannot be NULL
  99:sd_card.c     ****     // pMode indicates how the file should be opened. It's a 0-terminated string that cannot be NUL
 100:sd_card.c     ****     pFile = FS_FOpen(fileName, pMode);
 244              		.loc 1 100 0
 245 0014 B968     		ldr	r1, [r7, #8]
 246 0016 F868     		ldr	r0, [r7, #12]
 247 0018 FFF7FEFF 		bl	FS_FOpen
 248 001c 3861     		str	r0, [r7, #16]
 101:sd_card.c     ****     
 102:sd_card.c     ****     // If the SD card doesn't open, try reinitializing the filesystem
 103:sd_card.c     ****     if (pFile == 0){
 249              		.loc 1 103 0
 250 001e 3B69     		ldr	r3, [r7, #16]
 251 0020 002B     		cmp	r3, #0
 252 0022 08D1     		bne	.L9
 104:sd_card.c     ****         FS_DeInit(); // FS_DeInit() frees allocated resources
 253              		.loc 1 104 0
 254 0024 FFF7FEFF 		bl	FS_DeInit
 105:sd_card.c     ****         FS_Init(); // FS_Init() starts the file system
 255              		.loc 1 105 0
 256 0028 FFF7FEFF 		bl	FS_Init
 106:sd_card.c     ****         pFile = FS_FOpen(fileName, pMode);
 257              		.loc 1 106 0
 258 002c B968     		ldr	r1, [r7, #8]
 259 002e F868     		ldr	r0, [r7, #12]
 260 0030 FFF7FEFF 		bl	FS_FOpen
 261 0034 3861     		str	r0, [r7, #16]
 262              	.L9:
 107:sd_card.c     ****     }
 108:sd_card.c     ****     
 109:sd_card.c     ****     // Note: We are using the "No Long File Name (LFN)" library,
 110:sd_card.c     ****     //  so names are limited to 8 characters and 3 bytes for extensions
 111:sd_card.c     ****     if (pFile != 0) {
 263              		.loc 1 111 0
 264 0036 3B69     		ldr	r3, [r7, #16]
 265 0038 002B     		cmp	r3, #0
 266 003a 10D0     		beq	.L10
 112:sd_card.c     ****         // FS_Write() writes data to file: pFile is handle to open file, pData is data to be writte
 113:sd_card.c     ****         FS_Write(pFile, pData, strlen(pData));
 267              		.loc 1 113 0
 268 003c 7868     		ldr	r0, [r7, #4]
 269 003e FFF7FEFF 		bl	strlen
 270 0042 0346     		mov	r3, r0
 271 0044 1A46     		mov	r2, r3
 272 0046 7968     		ldr	r1, [r7, #4]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 8


 273 0048 3869     		ldr	r0, [r7, #16]
 274 004a FFF7FEFF 		bl	FS_Write
 114:sd_card.c     ****         
 115:sd_card.c     ****         // FS_FClose() closes an opened file using FS.h. It returns 1 if there's a failure, 0 if su
 116:sd_card.c     ****         // Typecasting (1+FS_FClose(pFile)) into an uint8 datatype
 117:sd_card.c     ****         // This makes it 0 if it's a failture, 1 if it's successful
 118:sd_card.c     ****         status = (uint8) ( -1*FS_FClose(pFile) )+1;
 275              		.loc 1 118 0
 276 004e 3869     		ldr	r0, [r7, #16]
 277 0050 FFF7FEFF 		bl	FS_FClose
 278 0054 0346     		mov	r3, r0
 279 0056 DBB2     		uxtb	r3, r3
 280 0058 C3F10103 		rsb	r3, r3, #1
 281 005c FB75     		strb	r3, [r7, #23]
 282              	.L10:
 119:sd_card.c     ****     }
 120:sd_card.c     ****     
 121:sd_card.c     ****     SD_power_down(); // Turn off the SD Card
 283              		.loc 1 121 0
 284 005e FFF7FEFF 		bl	SD_power_down
 122:sd_card.c     **** 
 123:sd_card.c     ****     
 124:sd_card.c     ****     return status;
 285              		.loc 1 124 0
 286 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 125:sd_card.c     **** }
 287              		.loc 1 125 0
 288 0064 1846     		mov	r0, r3
 289 0066 1837     		adds	r7, r7, #24
 290              		.cfi_def_cfa_offset 8
 291 0068 BD46     		mov	sp, r7
 292              		.cfi_def_cfa_register 13
 293              		@ sp needed
 294 006a 80BD     		pop	{r7, pc}
 295              		.cfi_endproc
 296              	.LFE67:
 297              		.size	SD_write, .-SD_write
 298              		.section	.rodata
 299 0005 000000   		.align	2
 300              	.LC1:
 301 0008 7200     		.ascii	"r\000"
 302              		.section	.text.SD_read,"ax",%progbits
 303              		.align	2
 304              		.global	SD_read
 305              		.thumb
 306              		.thumb_func
 307              		.type	SD_read, %function
 308              	SD_read:
 309              	.LFB68:
 126:sd_card.c     **** 
 127:sd_card.c     **** /**
 128:sd_card.c     ****  * @brief Write data to the SD card
 129:sd_card.c     ****  * @param fileName is the name of the file to write to
 130:sd_card.c     ****  * @param pMode is the write mode
 131:sd_card.c     ****  * @param pData is the data to be written
 132:sd_card.c     ****  * @return 1u on success, 0u otherwise
 133:sd_card.c     ****  */
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 9


 134:sd_card.c     **** uint8 SD_read(const char * fileName,  void * pData, unsigned long NumBytes)
 135:sd_card.c     **** {
 310              		.loc 1 135 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 24
 313              		@ frame_needed = 1, uses_anonymous_args = 0
 314 0000 80B5     		push	{r7, lr}
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 7, -8
 317              		.cfi_offset 14, -4
 318 0002 86B0     		sub	sp, sp, #24
 319              		.cfi_def_cfa_offset 32
 320 0004 00AF     		add	r7, sp, #0
 321              		.cfi_def_cfa_register 7
 322 0006 F860     		str	r0, [r7, #12]
 323 0008 B960     		str	r1, [r7, #8]
 324 000a 7A60     		str	r2, [r7, #4]
 136:sd_card.c     ****     uint8 status = 9u; // initialize to a value not 0 or 1
 325              		.loc 1 136 0
 326 000c 0923     		movs	r3, #9
 327 000e FB75     		strb	r3, [r7, #23]
 137:sd_card.c     ****     FS_FILE *pFile; // FS_FILE data structure defined in FS.h
 138:sd_card.c     **** 
 139:sd_card.c     ****     SD_power_up(); // Powerup the SD Card component
 328              		.loc 1 139 0
 329 0010 FFF7FEFF 		bl	SD_power_up
 140:sd_card.c     ****     
 141:sd_card.c     ****     // FS_FOpen() opens an existing file or creates a new one.
 142:sd_card.c     ****     // fileName is the file to be opened or created. It's a 0-terminated string that cannot be NULL
 143:sd_card.c     ****     // "r" indicates how the file should be opened, in this case, for reading.
 144:sd_card.c     ****     pFile = FS_FOpen(fileName, "r");
 330              		.loc 1 144 0
 331 0014 1349     		ldr	r1, .L16
 332 0016 F868     		ldr	r0, [r7, #12]
 333 0018 FFF7FEFF 		bl	FS_FOpen
 334 001c 3861     		str	r0, [r7, #16]
 145:sd_card.c     ****     
 146:sd_card.c     ****     // If the SD card doesn't open, try reinitializing the filesystem
 147:sd_card.c     ****     if (pFile == 0){
 335              		.loc 1 147 0
 336 001e 3B69     		ldr	r3, [r7, #16]
 337 0020 002B     		cmp	r3, #0
 338 0022 08D1     		bne	.L13
 148:sd_card.c     ****         FS_DeInit();// FS_DeInit() frees allocated resources
 339              		.loc 1 148 0
 340 0024 FFF7FEFF 		bl	FS_DeInit
 149:sd_card.c     ****         FS_Init(); // FS_Init() starts the file system
 341              		.loc 1 149 0
 342 0028 FFF7FEFF 		bl	FS_Init
 150:sd_card.c     ****         pFile = FS_FOpen(fileName, "r");
 343              		.loc 1 150 0
 344 002c 0D49     		ldr	r1, .L16
 345 002e F868     		ldr	r0, [r7, #12]
 346 0030 FFF7FEFF 		bl	FS_FOpen
 347 0034 3861     		str	r0, [r7, #16]
 348              	.L13:
 151:sd_card.c     ****     }
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 10


 152:sd_card.c     ****     
 153:sd_card.c     ****     // Note: We are using the "No Long File Name (LFN)" library,
 154:sd_card.c     ****     //  so names are limited to 8 characters and 3 bytes for extensions
 155:sd_card.c     ****     if (pFile != 0) {
 349              		.loc 1 155 0
 350 0036 3B69     		ldr	r3, [r7, #16]
 351 0038 002B     		cmp	r3, #0
 352 003a 0CD0     		beq	.L14
 156:sd_card.c     ****         // FS_Read() reads data from a file: pFile is handle to an opened file, pData is the buffer
 157:sd_card.c     ****         FS_Read(pFile,pData,NumBytes);
 353              		.loc 1 157 0
 354 003c 7A68     		ldr	r2, [r7, #4]
 355 003e B968     		ldr	r1, [r7, #8]
 356 0040 3869     		ldr	r0, [r7, #16]
 357 0042 FFF7FEFF 		bl	FS_Read
 158:sd_card.c     ****         
 159:sd_card.c     ****         // FS_FClose() closes an opened file using FS.h. It returns 1 if there's a failure, 0 if su
 160:sd_card.c     ****         // Typecasting (1+FS_FClose(pFile)) into an uint8 datatype
 161:sd_card.c     ****         // This makes it 0 if it's a failture, 1 if it's successful
 162:sd_card.c     ****         status = (uint8) ( -1*FS_FClose(pFile) )+1;
 358              		.loc 1 162 0
 359 0046 3869     		ldr	r0, [r7, #16]
 360 0048 FFF7FEFF 		bl	FS_FClose
 361 004c 0346     		mov	r3, r0
 362 004e DBB2     		uxtb	r3, r3
 363 0050 C3F10103 		rsb	r3, r3, #1
 364 0054 FB75     		strb	r3, [r7, #23]
 365              	.L14:
 163:sd_card.c     ****     }
 164:sd_card.c     ****     
 165:sd_card.c     ****     SD_power_down(); // Power down the SD card
 366              		.loc 1 165 0
 367 0056 FFF7FEFF 		bl	SD_power_down
 166:sd_card.c     ****     
 167:sd_card.c     ****     return status;
 368              		.loc 1 167 0
 369 005a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 168:sd_card.c     **** }
 370              		.loc 1 168 0
 371 005c 1846     		mov	r0, r3
 372 005e 1837     		adds	r7, r7, #24
 373              		.cfi_def_cfa_offset 8
 374 0060 BD46     		mov	sp, r7
 375              		.cfi_def_cfa_register 13
 376              		@ sp needed
 377 0062 80BD     		pop	{r7, pc}
 378              	.L17:
 379              		.align	2
 380              	.L16:
 381 0064 08000000 		.word	.LC1
 382              		.cfi_endproc
 383              	.LFE68:
 384              		.size	SD_read, .-SD_read
 385              		.section	.text.SD_power_up,"ax",%progbits
 386              		.align	2
 387              		.global	SD_power_up
 388              		.thumb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 11


 389              		.thumb_func
 390              		.type	SD_power_up, %function
 391              	SD_power_up:
 392              	.LFB69:
 169:sd_card.c     **** 
 170:sd_card.c     **** // Power up SD Card
 171:sd_card.c     **** void SD_power_up(){
 393              		.loc 1 171 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 1, uses_anonymous_args = 0
 397 0000 80B5     		push	{r7, lr}
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 7, -8
 400              		.cfi_offset 14, -4
 401 0002 00AF     		add	r7, sp, #0
 402              		.cfi_def_cfa_register 7
 172:sd_card.c     **** 
 173:sd_card.c     ****     emFile_Wakeup(); // Prepare SPIM Components to wake up.
 403              		.loc 1 173 0
 404 0004 FFF7FEFF 		bl	emFile_Wakeup
 174:sd_card.c     ****     
 175:sd_card.c     ****     SD_Card_Power_Write(ON); // Turn on the SD Card (pulls it high).
 405              		.loc 1 175 0
 406 0008 0120     		movs	r0, #1
 407 000a FFF7FEFF 		bl	SD_Card_Power_Write
 176:sd_card.c     ****     FS_Init(); // FS_Init() starts the file system
 408              		.loc 1 176 0
 409 000e FFF7FEFF 		bl	FS_Init
 177:sd_card.c     **** }
 410              		.loc 1 177 0
 411 0012 00BF     		nop
 412 0014 80BD     		pop	{r7, pc}
 413              		.cfi_endproc
 414              	.LFE69:
 415              		.size	SD_power_up, .-SD_power_up
 416 0016 00BF     		.section	.text.SD_power_down,"ax",%progbits
 417              		.align	2
 418              		.global	SD_power_down
 419              		.thumb
 420              		.thumb_func
 421              		.type	SD_power_down, %function
 422              	SD_power_down:
 423              	.LFB70:
 178:sd_card.c     **** 
 179:sd_card.c     **** // Power down SD Card
 180:sd_card.c     **** void SD_power_down(){
 424              		.loc 1 180 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428 0000 80B5     		push	{r7, lr}
 429              		.cfi_def_cfa_offset 8
 430              		.cfi_offset 7, -8
 431              		.cfi_offset 14, -4
 432 0002 00AF     		add	r7, sp, #0
 433              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 12


 181:sd_card.c     ****     
 182:sd_card.c     ****     SD_Card_Power_Write(OFF);  // Turn off the SD Card (pulls it low). 
 434              		.loc 1 182 0
 435 0004 0020     		movs	r0, #0
 436 0006 FFF7FEFF 		bl	SD_Card_Power_Write
 183:sd_card.c     ****     emFile_Sleep(); // emFIle_Sleep() prepare emFile to go to sleep.
 437              		.loc 1 183 0
 438 000a FFF7FEFF 		bl	emFile_Sleep
 184:sd_card.c     ****     FS_DeInit(); // FS_DeInit() frees allocated resources
 439              		.loc 1 184 0
 440 000e FFF7FEFF 		bl	FS_DeInit
 185:sd_card.c     ****     
 186:sd_card.c     ****     emFile_miso0_Write(OFF); // emFile_miso0_Write(): Assigns a new value to the digital port's dat
 441              		.loc 1 186 0
 442 0012 0020     		movs	r0, #0
 443 0014 FFF7FEFF 		bl	emFile_miso0_Write
 187:sd_card.c     ****     emFile_mosi0_Write(OFF); // emFile_mosi0_Write(): Assigns a new value to the digital port's dat
 444              		.loc 1 187 0
 445 0018 0020     		movs	r0, #0
 446 001a FFF7FEFF 		bl	emFile_mosi0_Write
 188:sd_card.c     ****     emFile_sclk0_Write(OFF); // emFile_sclk0_Write(): Assigns a new value to the digital port's dat
 447              		.loc 1 188 0
 448 001e 0020     		movs	r0, #0
 449 0020 FFF7FEFF 		bl	emFile_sclk0_Write
 189:sd_card.c     ****     emFile_SPI0_CS_Write(OFF); // emFile_SPIO_CS_Write(): Assigns a new value to the digital port's
 450              		.loc 1 189 0
 451 0024 0020     		movs	r0, #0
 452 0026 FFF7FEFF 		bl	emFile_SPI0_CS_Write
 190:sd_card.c     ****     // SD_Chip_Detect_Write(OFF);
 191:sd_card.c     **** }
 453              		.loc 1 191 0
 454 002a 00BF     		nop
 455 002c 80BD     		pop	{r7, pc}
 456              		.cfi_endproc
 457              	.LFE70:
 458              		.size	SD_power_down, .-SD_power_down
 459 002e 00BF     		.section	.rodata
 460 000a 0000     		.align	2
 461              	.LC2:
 462 000c 54455354 		.ascii	"TEST_SD_CARD\000"
 462      5F53445F 
 462      43415244 
 462      00
 463 0019 000000   		.align	2
 464              	.LC5:
 465 001c 54455354 		.ascii	"TEST_PASS\000"
 465      5F504153 
 465      5300
 466 0026 0000     		.align	2
 467              	.LC6:
 468 0028 7700     		.ascii	"w\000"
 469 002a 0000     		.align	2
 470              	.LC7:
 471 002c 53554343 		.ascii	"SUCCESS WRITE READ DELETE FILE\000"
 471      45535320 
 471      57524954 
 471      45205245 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 13


 471      41442044 
 472 004b 00       		.align	2
 473              	.LC8:
 474 004c 4641494C 		.ascii	"FAILED TO WRITE READ DELETE FILE\000"
 474      45442054 
 474      4F205752 
 474      49544520 
 474      52454144 
 475 006d 000000   		.align	2
 476              	.LC3:
 477 0070 54455354 		.ascii	"TEST_FAIL\000"
 477      5F464149 
 477      4C00
 478 007a 0000     		.align	2
 479              	.LC4:
 480 007c 74657374 		.ascii	"test.txt\000"
 480      2E747874 
 480      00
 481              		.section	.text.SD_card_test,"ax",%progbits
 482              		.align	2
 483              		.global	SD_card_test
 484              		.thumb
 485              		.thumb_func
 486              		.type	SD_card_test, %function
 487              	SD_card_test:
 488              	.LFB71:
 192:sd_card.c     **** 
 193:sd_card.c     **** // Testing the SD Card - create a  file, write random number, read number from file, delete directo
 194:sd_card.c     **** test_t SD_card_test(){
 489              		.loc 1 194 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 424
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 494              		.cfi_def_cfa_offset 20
 495              		.cfi_offset 4, -20
 496              		.cfi_offset 5, -16
 497              		.cfi_offset 6, -12
 498              		.cfi_offset 7, -8
 499              		.cfi_offset 14, -4
 500 0002 EBB0     		sub	sp, sp, #428
 501              		.cfi_def_cfa_offset 448
 502 0004 00AF     		add	r7, sp, #0
 503              		.cfi_def_cfa_register 7
 504 0006 3B1D     		adds	r3, r7, #4
 505 0008 1860     		str	r0, [r3]
 195:sd_card.c     ****     
 196:sd_card.c     ****     // test_t is a new data type we defined in test.h. We then use that data type to define a struc
 197:sd_card.c     ****     test_t test;
 198:sd_card.c     ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_SD_CARD");
 506              		.loc 1 198 0
 507 000a 07F12403 		add	r3, r7, #36
 508 000e 3D4A     		ldr	r2, .L25
 509 0010 1C46     		mov	r4, r3
 510 0012 1346     		mov	r3, r2
 511 0014 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 512 0016 07C4     		stmia	r4!, {r0, r1, r2}
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 14


 513 0018 2370     		strb	r3, [r4]
 199:sd_card.c     ****     test.status = 0;
 514              		.loc 1 199 0
 515 001a 07F12403 		add	r3, r7, #36
 516 001e 0022     		movs	r2, #0
 517 0020 83F88020 		strb	r2, [r3, #128]
 200:sd_card.c     ****     
 201:sd_card.c     ****     char data[] = "TEST_FAIL";
 518              		.loc 1 201 0
 519 0024 07F11803 		add	r3, r7, #24
 520 0028 374A     		ldr	r2, .L25+4
 521 002a 07CA     		ldmia	r2, {r0, r1, r2}
 522 002c 03C3     		stmia	r3!, {r0, r1}
 523 002e 1A80     		strh	r2, [r3]	@ movhi
 202:sd_card.c     ****     char fileName[] = "test.txt";
 524              		.loc 1 202 0
 525 0030 07F10C03 		add	r3, r7, #12
 526 0034 354A     		ldr	r2, .L25+8
 527 0036 07CA     		ldmia	r2, {r0, r1, r2}
 528 0038 03C3     		stmia	r3!, {r0, r1}
 529 003a 1A70     		strb	r2, [r3]
 203:sd_card.c     ****     
 204:sd_card.c     ****     SD_rmfile(fileName); // Remove file from SD Card
 530              		.loc 1 204 0
 531 003c 07F10C03 		add	r3, r7, #12
 532 0040 1846     		mov	r0, r3
 533 0042 FFF7FEFF 		bl	SD_rmfile
 205:sd_card.c     ****     SD_write(fileName,"w","TEST_PASS"); // Write data to SD Card
 534              		.loc 1 205 0
 535 0046 07F10C03 		add	r3, r7, #12
 536 004a 314A     		ldr	r2, .L25+12
 537 004c 3149     		ldr	r1, .L25+16
 538 004e 1846     		mov	r0, r3
 539 0050 FFF7FEFF 		bl	SD_write
 206:sd_card.c     ****     SD_read(fileName,data,sizeof(data)); // Read data from the SD card
 540              		.loc 1 206 0
 541 0054 07F11801 		add	r1, r7, #24
 542 0058 07F10C03 		add	r3, r7, #12
 543 005c 0A22     		movs	r2, #10
 544 005e 1846     		mov	r0, r3
 545 0060 FFF7FEFF 		bl	SD_read
 207:sd_card.c     ****     test.status = SD_rmfile(fileName);
 546              		.loc 1 207 0
 547 0064 07F10C03 		add	r3, r7, #12
 548 0068 1846     		mov	r0, r3
 549 006a FFF7FEFF 		bl	SD_rmfile
 550 006e 0346     		mov	r3, r0
 551 0070 1A46     		mov	r2, r3
 552 0072 07F12403 		add	r3, r7, #36
 553 0076 83F88020 		strb	r2, [r3, #128]
 208:sd_card.c     ****     
 209:sd_card.c     ****     if(test.status == 1){
 554              		.loc 1 209 0
 555 007a 07F12403 		add	r3, r7, #36
 556 007e 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 557 0082 012B     		cmp	r3, #1
 558 0084 14D1     		bne	.L21
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 15


 210:sd_card.c     ****         snprintf(test.reason,sizeof(test.reason),"SUCCESS WRITE READ DELETE FILE");
 559              		.loc 1 210 0
 560 0086 07F12403 		add	r3, r7, #36
 561 008a 8133     		adds	r3, r3, #129
 562 008c 224A     		ldr	r2, .L25+20
 563 008e 1D46     		mov	r5, r3
 564 0090 1446     		mov	r4, r2
 565 0092 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 566 0094 2860     		str	r0, [r5]	@ unaligned
 567 0096 6960     		str	r1, [r5, #4]	@ unaligned
 568 0098 AA60     		str	r2, [r5, #8]	@ unaligned
 569 009a EB60     		str	r3, [r5, #12]	@ unaligned
 570 009c 07CC     		ldmia	r4!, {r0, r1, r2}
 571 009e 2861     		str	r0, [r5, #16]	@ unaligned
 572 00a0 6961     		str	r1, [r5, #20]	@ unaligned
 573 00a2 AA61     		str	r2, [r5, #24]	@ unaligned
 574 00a4 2388     		ldrh	r3, [r4]	@ unaligned
 575 00a6 A278     		ldrb	r2, [r4, #2]
 576 00a8 AB83     		strh	r3, [r5, #28]	@ unaligned
 577 00aa 1346     		mov	r3, r2
 578 00ac AB77     		strb	r3, [r5, #30]
 579 00ae 17E0     		b	.L22
 580              	.L21:
 211:sd_card.c     ****     }else{
 212:sd_card.c     ****        snprintf(test.reason,sizeof(test.reason),"FAILED TO WRITE READ DELETE FILE"); 
 581              		.loc 1 212 0
 582 00b0 07F12403 		add	r3, r7, #36
 583 00b4 8133     		adds	r3, r3, #129
 584 00b6 194A     		ldr	r2, .L25+24
 585 00b8 1446     		mov	r4, r2
 586 00ba 9E46     		mov	lr, r3
 587 00bc 04F1200C 		add	ip, r4, #32
 588              	.L23:
 589 00c0 7546     		mov	r5, lr
 590 00c2 2646     		mov	r6, r4
 591 00c4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 592 00c6 2860     		str	r0, [r5]	@ unaligned
 593 00c8 6960     		str	r1, [r5, #4]	@ unaligned
 594 00ca AA60     		str	r2, [r5, #8]	@ unaligned
 595 00cc EB60     		str	r3, [r5, #12]	@ unaligned
 596 00ce 1034     		adds	r4, r4, #16
 597 00d0 0EF1100E 		add	lr, lr, #16
 598 00d4 6445     		cmp	r4, ip
 599 00d6 F3D1     		bne	.L23
 600 00d8 7346     		mov	r3, lr
 601 00da 2246     		mov	r2, r4
 602 00dc 1278     		ldrb	r2, [r2]
 603 00de 1A70     		strb	r2, [r3]
 604              	.L22:
 213:sd_card.c     ****     }
 214:sd_card.c     ****     
 215:sd_card.c     ****     return test;
 605              		.loc 1 215 0
 606 00e0 3B1D     		adds	r3, r7, #4
 607 00e2 1A68     		ldr	r2, [r3]
 608 00e4 07F12403 		add	r3, r7, #36
 609 00e8 1046     		mov	r0, r2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 16


 610 00ea 1946     		mov	r1, r3
 611 00ec 40F28113 		movw	r3, #385
 612 00f0 1A46     		mov	r2, r3
 613 00f2 FFF7FEFF 		bl	memcpy
 216:sd_card.c     ****     
 217:sd_card.c     **** }
 614              		.loc 1 217 0
 615 00f6 3B1D     		adds	r3, r7, #4
 616 00f8 1868     		ldr	r0, [r3]
 617 00fa 07F5D677 		add	r7, r7, #428
 618              		.cfi_def_cfa_offset 20
 619 00fe BD46     		mov	sp, r7
 620              		.cfi_def_cfa_register 13
 621              		@ sp needed
 622 0100 F0BD     		pop	{r4, r5, r6, r7, pc}
 623              	.L26:
 624 0102 00BF     		.align	2
 625              	.L25:
 626 0104 0C000000 		.word	.LC2
 627 0108 70000000 		.word	.LC3
 628 010c 7C000000 		.word	.LC4
 629 0110 1C000000 		.word	.LC5
 630 0114 28000000 		.word	.LC6
 631 0118 2C000000 		.word	.LC7
 632 011c 4C000000 		.word	.LC8
 633              		.cfi_endproc
 634              	.LFE71:
 635              		.size	SD_card_test, .-SD_card_test
 636              		.text
 637              	.Letext0:
 638              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 639              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 640              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 641              		.file 5 "testing.h"
 642              		.file 6 "..\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 643              		.file 7 "data.h"
 644              		.file 8 "modem.h"
 645              		.file 9 "notoriOS.h"
 646              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 647              		.file 11 "App_LED.h"
 648              		.section	.debug_info,"",%progbits
 649              	.Ldebug_info0:
 650 0000 70070000 		.4byte	0x770
 651 0004 0400     		.2byte	0x4
 652 0006 00000000 		.4byte	.Ldebug_abbrev0
 653 000a 04       		.byte	0x4
 654 000b 01       		.uleb128 0x1
 655 000c 8B000000 		.4byte	.LASF98
 656 0010 0C       		.byte	0xc
 657 0011 81000000 		.4byte	.LASF99
 658 0015 D5030000 		.4byte	.LASF100
 659 0019 00000000 		.4byte	.Ldebug_ranges0+0
 660 001d 00000000 		.4byte	0
 661 0021 00000000 		.4byte	.Ldebug_line0
 662 0025 02       		.uleb128 0x2
 663 0026 01       		.byte	0x1
 664 0027 06       		.byte	0x6
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 17


 665 0028 88020000 		.4byte	.LASF0
 666 002c 02       		.uleb128 0x2
 667 002d 01       		.byte	0x1
 668 002e 08       		.byte	0x8
 669 002f 4A020000 		.4byte	.LASF1
 670 0033 02       		.uleb128 0x2
 671 0034 02       		.byte	0x2
 672 0035 05       		.byte	0x5
 673 0036 52000000 		.4byte	.LASF2
 674 003a 02       		.uleb128 0x2
 675 003b 02       		.byte	0x2
 676 003c 07       		.byte	0x7
 677 003d 35030000 		.4byte	.LASF3
 678 0041 03       		.uleb128 0x3
 679 0042 6B040000 		.4byte	.LASF12
 680 0046 02       		.byte	0x2
 681 0047 3F       		.byte	0x3f
 682 0048 4C000000 		.4byte	0x4c
 683 004c 02       		.uleb128 0x2
 684 004d 04       		.byte	0x4
 685 004e 05       		.byte	0x5
 686 004f D5010000 		.4byte	.LASF4
 687 0053 02       		.uleb128 0x2
 688 0054 04       		.byte	0x4
 689 0055 07       		.byte	0x7
 690 0056 18040000 		.4byte	.LASF5
 691 005a 02       		.uleb128 0x2
 692 005b 08       		.byte	0x8
 693 005c 05       		.byte	0x5
 694 005d BB010000 		.4byte	.LASF6
 695 0061 02       		.uleb128 0x2
 696 0062 08       		.byte	0x8
 697 0063 07       		.byte	0x7
 698 0064 94020000 		.4byte	.LASF7
 699 0068 04       		.uleb128 0x4
 700 0069 04       		.byte	0x4
 701 006a 05       		.byte	0x5
 702 006b 696E7400 		.ascii	"int\000"
 703 006f 02       		.uleb128 0x2
 704 0070 04       		.byte	0x4
 705 0071 07       		.byte	0x7
 706 0072 C1020000 		.4byte	.LASF8
 707 0076 02       		.uleb128 0x2
 708 0077 08       		.byte	0x8
 709 0078 04       		.byte	0x4
 710 0079 3E020000 		.4byte	.LASF9
 711 007d 05       		.uleb128 0x5
 712 007e 04       		.byte	0x4
 713 007f 02       		.uleb128 0x2
 714 0080 04       		.byte	0x4
 715 0081 07       		.byte	0x7
 716 0082 5C000000 		.4byte	.LASF10
 717 0086 06       		.uleb128 0x6
 718 0087 04       		.byte	0x4
 719 0088 8C000000 		.4byte	0x8c
 720 008c 02       		.uleb128 0x2
 721 008d 01       		.byte	0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 18


 722 008e 08       		.byte	0x8
 723 008f C9010000 		.4byte	.LASF11
 724 0093 06       		.uleb128 0x6
 725 0094 04       		.byte	0x4
 726 0095 99000000 		.4byte	0x99
 727 0099 07       		.uleb128 0x7
 728 009a 8C000000 		.4byte	0x8c
 729 009e 08       		.uleb128 0x8
 730 009f 8C000000 		.4byte	0x8c
 731 00a3 AE000000 		.4byte	0xae
 732 00a7 09       		.uleb128 0x9
 733 00a8 7F000000 		.4byte	0x7f
 734 00ac 17       		.byte	0x17
 735 00ad 00       		.byte	0
 736 00ae 03       		.uleb128 0x3
 737 00af 98030000 		.4byte	.LASF13
 738 00b3 03       		.byte	0x3
 739 00b4 2C       		.byte	0x2c
 740 00b5 41000000 		.4byte	0x41
 741 00b9 0A       		.uleb128 0xa
 742 00ba 5F010000 		.4byte	.LASF14
 743 00be 04       		.byte	0x4
 744 00bf 9201     		.2byte	0x192
 745 00c1 2C000000 		.4byte	0x2c
 746 00c5 0A       		.uleb128 0xa
 747 00c6 46010000 		.4byte	.LASF15
 748 00ca 04       		.byte	0x4
 749 00cb 9301     		.2byte	0x193
 750 00cd 3A000000 		.4byte	0x3a
 751 00d1 0A       		.uleb128 0xa
 752 00d2 71010000 		.4byte	.LASF16
 753 00d6 04       		.byte	0x4
 754 00d7 9601     		.2byte	0x196
 755 00d9 33000000 		.4byte	0x33
 756 00dd 0A       		.uleb128 0xa
 757 00de 2A040000 		.4byte	.LASF17
 758 00e2 04       		.byte	0x4
 759 00e3 9701     		.2byte	0x197
 760 00e5 4C000000 		.4byte	0x4c
 761 00e9 02       		.uleb128 0x2
 762 00ea 04       		.byte	0x4
 763 00eb 04       		.byte	0x4
 764 00ec AC010000 		.4byte	.LASF18
 765 00f0 02       		.uleb128 0x2
 766 00f1 08       		.byte	0x8
 767 00f2 04       		.byte	0x4
 768 00f3 30040000 		.4byte	.LASF19
 769 00f7 06       		.uleb128 0x6
 770 00f8 04       		.byte	0x4
 771 00f9 FD000000 		.4byte	0xfd
 772 00fd 0B       		.uleb128 0xb
 773 00fe 0C       		.uleb128 0xc
 774 00ff 8101     		.2byte	0x181
 775 0101 05       		.byte	0x5
 776 0102 0A       		.byte	0xa
 777 0103 2C010000 		.4byte	0x12c
 778 0107 0D       		.uleb128 0xd
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 19


 779 0108 9F040000 		.4byte	.LASF20
 780 010c 05       		.byte	0x5
 781 010d 0C       		.byte	0xc
 782 010e 2C010000 		.4byte	0x12c
 783 0112 00       		.byte	0
 784 0113 0D       		.uleb128 0xd
 785 0114 60030000 		.4byte	.LASF21
 786 0118 05       		.byte	0x5
 787 0119 0D       		.byte	0xd
 788 011a B9000000 		.4byte	0xb9
 789 011e 80       		.byte	0x80
 790 011f 0D       		.uleb128 0xd
 791 0120 CE010000 		.4byte	.LASF22
 792 0124 05       		.byte	0x5
 793 0125 0F       		.byte	0xf
 794 0126 3C010000 		.4byte	0x13c
 795 012a 81       		.byte	0x81
 796 012b 00       		.byte	0
 797 012c 08       		.uleb128 0x8
 798 012d 8C000000 		.4byte	0x8c
 799 0131 3C010000 		.4byte	0x13c
 800 0135 09       		.uleb128 0x9
 801 0136 7F000000 		.4byte	0x7f
 802 013a 7F       		.byte	0x7f
 803 013b 00       		.byte	0
 804 013c 08       		.uleb128 0x8
 805 013d 8C000000 		.4byte	0x8c
 806 0141 4C010000 		.4byte	0x14c
 807 0145 09       		.uleb128 0x9
 808 0146 7F000000 		.4byte	0x7f
 809 014a FF       		.byte	0xff
 810 014b 00       		.byte	0
 811 014c 03       		.uleb128 0x3
 812 014d 8C030000 		.4byte	.LASF23
 813 0151 05       		.byte	0x5
 814 0152 10       		.byte	0x10
 815 0153 FE000000 		.4byte	0xfe
 816 0157 03       		.uleb128 0x3
 817 0158 58020000 		.4byte	.LASF24
 818 015c 06       		.byte	0x6
 819 015d 7E       		.byte	0x7e
 820 015e 62010000 		.4byte	0x162
 821 0162 0E       		.uleb128 0xe
 822 0163 58020000 		.4byte	.LASF24
 823 0167 06       		.uleb128 0x6
 824 0168 04       		.byte	0x4
 825 0169 57010000 		.4byte	0x157
 826 016d 0F       		.uleb128 0xf
 827 016e 2C       		.byte	0x2c
 828 016f 07       		.byte	0x7
 829 0170 14       		.byte	0x14
 830 0171 9A010000 		.4byte	0x19a
 831 0175 10       		.uleb128 0x10
 832 0176 6B657900 		.ascii	"key\000"
 833 017a 07       		.byte	0x7
 834 017b 15       		.byte	0x15
 835 017c 9A010000 		.4byte	0x19a
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 20


 836 0180 00       		.byte	0
 837 0181 0D       		.uleb128 0xd
 838 0182 EA040000 		.4byte	.LASF25
 839 0186 07       		.byte	0x7
 840 0187 16       		.byte	0x16
 841 0188 9A010000 		.4byte	0x19a
 842 018c 14       		.byte	0x14
 843 018d 0D       		.uleb128 0xd
 844 018e 77010000 		.4byte	.LASF26
 845 0192 07       		.byte	0x7
 846 0193 17       		.byte	0x17
 847 0194 DD000000 		.4byte	0xdd
 848 0198 28       		.byte	0x28
 849 0199 00       		.byte	0
 850 019a 08       		.uleb128 0x8
 851 019b 8C000000 		.4byte	0x8c
 852 019f AA010000 		.4byte	0x1aa
 853 01a3 09       		.uleb128 0x9
 854 01a4 7F000000 		.4byte	0x7f
 855 01a8 13       		.byte	0x13
 856 01a9 00       		.byte	0
 857 01aa 03       		.uleb128 0x3
 858 01ab CE020000 		.4byte	.LASF27
 859 01af 07       		.byte	0x7
 860 01b0 19       		.byte	0x19
 861 01b1 6D010000 		.4byte	0x16d
 862 01b5 0F       		.uleb128 0xf
 863 01b6 3C       		.byte	0x3c
 864 01b7 08       		.byte	0x8
 865 01b8 35       		.byte	0x35
 866 01b9 E2010000 		.4byte	0x1e2
 867 01bd 0D       		.uleb128 0xd
 868 01be 09000000 		.4byte	.LASF28
 869 01c2 08       		.byte	0x8
 870 01c3 36       		.byte	0x36
 871 01c4 9A010000 		.4byte	0x19a
 872 01c8 00       		.byte	0
 873 01c9 0D       		.uleb128 0xd
 874 01ca 00000000 		.4byte	.LASF29
 875 01ce 08       		.byte	0x8
 876 01cf 37       		.byte	0x37
 877 01d0 9A010000 		.4byte	0x19a
 878 01d4 14       		.byte	0x14
 879 01d5 0D       		.uleb128 0xd
 880 01d6 93030000 		.4byte	.LASF30
 881 01da 08       		.byte	0x8
 882 01db 38       		.byte	0x38
 883 01dc 9A010000 		.4byte	0x19a
 884 01e0 28       		.byte	0x28
 885 01e1 00       		.byte	0
 886 01e2 03       		.uleb128 0x3
 887 01e3 50040000 		.4byte	.LASF31
 888 01e7 08       		.byte	0x8
 889 01e8 3A       		.byte	0x3a
 890 01e9 B5010000 		.4byte	0x1b5
 891 01ed 0F       		.uleb128 0xf
 892 01ee 20       		.byte	0x20
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 21


 893 01ef 08       		.byte	0x8
 894 01f0 3C       		.byte	0x3c
 895 01f1 56020000 		.4byte	0x256
 896 01f5 0D       		.uleb128 0xd
 897 01f6 DA020000 		.4byte	.LASF32
 898 01fa 08       		.byte	0x8
 899 01fb 3D       		.byte	0x3d
 900 01fc 68000000 		.4byte	0x68
 901 0200 00       		.byte	0
 902 0201 10       		.uleb128 0x10
 903 0202 62657200 		.ascii	"ber\000"
 904 0206 08       		.byte	0x8
 905 0207 3E       		.byte	0x3e
 906 0208 68000000 		.4byte	0x68
 907 020c 04       		.byte	0x4
 908 020d 0D       		.uleb128 0xd
 909 020e 2F020000 		.4byte	.LASF33
 910 0212 08       		.byte	0x8
 911 0213 3F       		.byte	0x3f
 912 0214 68000000 		.4byte	0x68
 913 0218 08       		.byte	0x8
 914 0219 0D       		.uleb128 0xd
 915 021a 2C010000 		.4byte	.LASF34
 916 021e 08       		.byte	0x8
 917 021f 40       		.byte	0x40
 918 0220 68000000 		.4byte	0x68
 919 0224 0C       		.byte	0xc
 920 0225 0D       		.uleb128 0xd
 921 0226 D0030000 		.4byte	.LASF35
 922 022a 08       		.byte	0x8
 923 022b 41       		.byte	0x41
 924 022c 68000000 		.4byte	0x68
 925 0230 10       		.byte	0x10
 926 0231 0D       		.uleb128 0xd
 927 0232 60020000 		.4byte	.LASF36
 928 0236 08       		.byte	0x8
 929 0237 42       		.byte	0x42
 930 0238 68000000 		.4byte	0x68
 931 023c 14       		.byte	0x14
 932 023d 0D       		.uleb128 0xd
 933 023e 48030000 		.4byte	.LASF37
 934 0242 08       		.byte	0x8
 935 0243 43       		.byte	0x43
 936 0244 68000000 		.4byte	0x68
 937 0248 18       		.byte	0x18
 938 0249 0D       		.uleb128 0xd
 939 024a 79030000 		.4byte	.LASF38
 940 024e 08       		.byte	0x8
 941 024f 44       		.byte	0x44
 942 0250 68000000 		.4byte	0x68
 943 0254 1C       		.byte	0x1c
 944 0255 00       		.byte	0
 945 0256 03       		.uleb128 0x3
 946 0257 A0030000 		.4byte	.LASF39
 947 025b 08       		.byte	0x8
 948 025c 46       		.byte	0x46
 949 025d ED010000 		.4byte	0x1ed
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 22


 950 0261 0F       		.uleb128 0xf
 951 0262 05       		.byte	0x5
 952 0263 08       		.byte	0x8
 953 0264 52       		.byte	0x52
 954 0265 A6020000 		.4byte	0x2a6
 955 0269 0D       		.uleb128 0xd
 956 026a FA040000 		.4byte	.LASF40
 957 026e 08       		.byte	0x8
 958 026f 54       		.byte	0x54
 959 0270 B9000000 		.4byte	0xb9
 960 0274 00       		.byte	0
 961 0275 0D       		.uleb128 0xd
 962 0276 21030000 		.4byte	.LASF41
 963 027a 08       		.byte	0x8
 964 027b 56       		.byte	0x56
 965 027c A6020000 		.4byte	0x2a6
 966 0280 01       		.byte	0x1
 967 0281 0D       		.uleb128 0xd
 968 0282 22020000 		.4byte	.LASF42
 969 0286 08       		.byte	0x8
 970 0287 58       		.byte	0x58
 971 0288 B9000000 		.4byte	0xb9
 972 028c 02       		.byte	0x2
 973 028d 0D       		.uleb128 0xd
 974 028e E0020000 		.4byte	.LASF43
 975 0292 08       		.byte	0x8
 976 0293 5A       		.byte	0x5a
 977 0294 B9000000 		.4byte	0xb9
 978 0298 03       		.byte	0x3
 979 0299 0D       		.uleb128 0xd
 980 029a 44040000 		.4byte	.LASF44
 981 029e 08       		.byte	0x8
 982 029f 5D       		.byte	0x5d
 983 02a0 B9000000 		.4byte	0xb9
 984 02a4 04       		.byte	0x4
 985 02a5 00       		.byte	0
 986 02a6 02       		.uleb128 0x2
 987 02a7 01       		.byte	0x1
 988 02a8 02       		.byte	0x2
 989 02a9 AE030000 		.4byte	.LASF45
 990 02ad 03       		.uleb128 0x3
 991 02ae 0A030000 		.4byte	.LASF46
 992 02b2 08       		.byte	0x8
 993 02b3 5F       		.byte	0x5f
 994 02b4 61020000 		.4byte	0x261
 995 02b8 0F       		.uleb128 0xf
 996 02b9 06       		.byte	0x6
 997 02ba 09       		.byte	0x9
 998 02bb 2E       		.byte	0x2e
 999 02bc F1020000 		.4byte	0x2f1
 1000 02c0 0D       		.uleb128 0xd
 1001 02c1 43000000 		.4byte	.LASF47
 1002 02c5 09       		.byte	0x9
 1003 02c6 30       		.byte	0x30
 1004 02c7 C5000000 		.4byte	0xc5
 1005 02cb 00       		.byte	0
 1006 02cc 0D       		.uleb128 0xd
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 23


 1007 02cd 2D000000 		.4byte	.LASF48
 1008 02d1 09       		.byte	0x9
 1009 02d2 31       		.byte	0x31
 1010 02d3 D1000000 		.4byte	0xd1
 1011 02d7 02       		.byte	0x2
 1012 02d8 0D       		.uleb128 0xd
 1013 02d9 5D040000 		.4byte	.LASF49
 1014 02dd 09       		.byte	0x9
 1015 02de 32       		.byte	0x32
 1016 02df B9000000 		.4byte	0xb9
 1017 02e3 04       		.byte	0x4
 1018 02e4 0D       		.uleb128 0xd
 1019 02e5 B5040000 		.4byte	.LASF50
 1020 02e9 09       		.byte	0x9
 1021 02ea 33       		.byte	0x33
 1022 02eb B9000000 		.4byte	0xb9
 1023 02ef 05       		.byte	0x5
 1024 02f0 00       		.byte	0
 1025 02f1 03       		.uleb128 0x3
 1026 02f2 1C020000 		.4byte	.LASF51
 1027 02f6 09       		.byte	0x9
 1028 02f7 36       		.byte	0x36
 1029 02f8 FC020000 		.4byte	0x2fc
 1030 02fc 11       		.uleb128 0x11
 1031 02fd B8020000 		.4byte	0x2b8
 1032 0301 0F       		.uleb128 0xf
 1033 0302 1C       		.byte	0x1c
 1034 0303 09       		.byte	0x9
 1035 0304 39       		.byte	0x39
 1036 0305 22030000 		.4byte	0x322
 1037 0309 0D       		.uleb128 0xd
 1038 030a EE010000 		.4byte	.LASF52
 1039 030e 09       		.byte	0x9
 1040 030f 3B       		.byte	0x3b
 1041 0310 22030000 		.4byte	0x322
 1042 0314 00       		.byte	0
 1043 0315 0D       		.uleb128 0xd
 1044 0316 1E010000 		.4byte	.LASF53
 1045 031a 09       		.byte	0x9
 1046 031b 3C       		.byte	0x3c
 1047 031c 9E000000 		.4byte	0x9e
 1048 0320 04       		.byte	0x4
 1049 0321 00       		.byte	0
 1050 0322 06       		.uleb128 0x6
 1051 0323 04       		.byte	0x4
 1052 0324 E2010000 		.4byte	0x1e2
 1053 0328 03       		.uleb128 0x3
 1054 0329 2A030000 		.4byte	.LASF54
 1055 032d 09       		.byte	0x9
 1056 032e 3E       		.byte	0x3e
 1057 032f 01030000 		.4byte	0x301
 1058 0333 0F       		.uleb128 0xf
 1059 0334 68       		.byte	0x68
 1060 0335 09       		.byte	0x9
 1061 0336 44       		.byte	0x44
 1062 0337 54030000 		.4byte	0x354
 1063 033b 0D       		.uleb128 0xd
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 24


 1064 033c 72000000 		.4byte	.LASF55
 1065 0340 09       		.byte	0x9
 1066 0341 49       		.byte	0x49
 1067 0342 54030000 		.4byte	0x354
 1068 0346 00       		.byte	0
 1069 0347 0D       		.uleb128 0xd
 1070 0348 E2040000 		.4byte	.LASF56
 1071 034c 09       		.byte	0x9
 1072 034d 4A       		.byte	0x4a
 1073 034e 68000000 		.4byte	0x68
 1074 0352 64       		.byte	0x64
 1075 0353 00       		.byte	0
 1076 0354 08       		.uleb128 0x8
 1077 0355 8C000000 		.4byte	0x8c
 1078 0359 64030000 		.4byte	0x364
 1079 035d 09       		.uleb128 0x9
 1080 035e 7F000000 		.4byte	0x7f
 1081 0362 63       		.byte	0x63
 1082 0363 00       		.byte	0
 1083 0364 03       		.uleb128 0x3
 1084 0365 1E000000 		.4byte	.LASF57
 1085 0369 09       		.byte	0x9
 1086 036a 50       		.byte	0x50
 1087 036b 33030000 		.4byte	0x333
 1088 036f 12       		.uleb128 0x12
 1089 0370 8E040000 		.4byte	.LASF68
 1090 0374 01       		.byte	0x1
 1091 0375 1E       		.byte	0x1e
 1092 0376 00000000 		.4byte	.LFB64
 1093 037a 0C000000 		.4byte	.LFE64-.LFB64
 1094 037e 01       		.uleb128 0x1
 1095 037f 9C       		.byte	0x9c
 1096 0380 13       		.uleb128 0x13
 1097 0381 8A010000 		.4byte	.LASF58
 1098 0385 01       		.byte	0x1
 1099 0386 2C       		.byte	0x2c
 1100 0387 B9000000 		.4byte	0xb9
 1101 038b 00000000 		.4byte	.LFB65
 1102 038f 40000000 		.4byte	.LFE65-.LFB65
 1103 0393 01       		.uleb128 0x1
 1104 0394 9C       		.byte	0x9c
 1105 0395 B6030000 		.4byte	0x3b6
 1106 0399 14       		.uleb128 0x14
 1107 039a B2010000 		.4byte	.LASF60
 1108 039e 01       		.byte	0x1
 1109 039f 2C       		.byte	0x2c
 1110 03a0 86000000 		.4byte	0x86
 1111 03a4 02       		.uleb128 0x2
 1112 03a5 91       		.byte	0x91
 1113 03a6 6C       		.sleb128 -20
 1114 03a7 15       		.uleb128 0x15
 1115 03a8 60030000 		.4byte	.LASF21
 1116 03ac 01       		.byte	0x1
 1117 03ad 2E       		.byte	0x2e
 1118 03ae B9000000 		.4byte	0xb9
 1119 03b2 02       		.uleb128 0x2
 1120 03b3 91       		.byte	0x91
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 25


 1121 03b4 77       		.sleb128 -9
 1122 03b5 00       		.byte	0
 1123 03b6 13       		.uleb128 0x13
 1124 03b7 04050000 		.4byte	.LASF59
 1125 03bb 01       		.byte	0x1
 1126 03bc 43       		.byte	0x43
 1127 03bd B9000000 		.4byte	0xb9
 1128 03c1 00000000 		.4byte	.LFB66
 1129 03c5 2C000000 		.4byte	.LFE66-.LFB66
 1130 03c9 01       		.uleb128 0x1
 1131 03ca 9C       		.byte	0x9c
 1132 03cb EC030000 		.4byte	0x3ec
 1133 03cf 14       		.uleb128 0x14
 1134 03d0 96040000 		.4byte	.LASF61
 1135 03d4 01       		.byte	0x1
 1136 03d5 43       		.byte	0x43
 1137 03d6 93000000 		.4byte	0x93
 1138 03da 02       		.uleb128 0x2
 1139 03db 91       		.byte	0x91
 1140 03dc 6C       		.sleb128 -20
 1141 03dd 15       		.uleb128 0x15
 1142 03de 60030000 		.4byte	.LASF21
 1143 03e2 01       		.byte	0x1
 1144 03e3 45       		.byte	0x45
 1145 03e4 B9000000 		.4byte	0xb9
 1146 03e8 02       		.uleb128 0x2
 1147 03e9 91       		.byte	0x91
 1148 03ea 77       		.sleb128 -9
 1149 03eb 00       		.byte	0
 1150 03ec 13       		.uleb128 0x13
 1151 03ed 81010000 		.4byte	.LASF62
 1152 03f1 01       		.byte	0x1
 1153 03f2 5A       		.byte	0x5a
 1154 03f3 B9000000 		.4byte	0xb9
 1155 03f7 00000000 		.4byte	.LFB67
 1156 03fb 6C000000 		.4byte	.LFE67-.LFB67
 1157 03ff 01       		.uleb128 0x1
 1158 0400 9C       		.byte	0x9c
 1159 0401 4C040000 		.4byte	0x44c
 1160 0405 14       		.uleb128 0x14
 1161 0406 96040000 		.4byte	.LASF61
 1162 040a 01       		.byte	0x1
 1163 040b 5A       		.byte	0x5a
 1164 040c 93000000 		.4byte	0x93
 1165 0410 02       		.uleb128 0x2
 1166 0411 91       		.byte	0x91
 1167 0412 6C       		.sleb128 -20
 1168 0413 14       		.uleb128 0x14
 1169 0414 EA020000 		.4byte	.LASF63
 1170 0418 01       		.byte	0x1
 1171 0419 5A       		.byte	0x5a
 1172 041a 93000000 		.4byte	0x93
 1173 041e 02       		.uleb128 0x2
 1174 041f 91       		.byte	0x91
 1175 0420 68       		.sleb128 -24
 1176 0421 14       		.uleb128 0x14
 1177 0422 18000000 		.4byte	.LASF64
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 26


 1178 0426 01       		.byte	0x1
 1179 0427 5A       		.byte	0x5a
 1180 0428 F7000000 		.4byte	0xf7
 1181 042c 02       		.uleb128 0x2
 1182 042d 91       		.byte	0x91
 1183 042e 64       		.sleb128 -28
 1184 042f 15       		.uleb128 0x15
 1185 0430 60030000 		.4byte	.LASF21
 1186 0434 01       		.byte	0x1
 1187 0435 5C       		.byte	0x5c
 1188 0436 B9000000 		.4byte	0xb9
 1189 043a 02       		.uleb128 0x2
 1190 043b 91       		.byte	0x91
 1191 043c 77       		.sleb128 -9
 1192 043d 15       		.uleb128 0x15
 1193 043e BB020000 		.4byte	.LASF65
 1194 0442 01       		.byte	0x1
 1195 0443 5D       		.byte	0x5d
 1196 0444 67010000 		.4byte	0x167
 1197 0448 02       		.uleb128 0x2
 1198 0449 91       		.byte	0x91
 1199 044a 70       		.sleb128 -16
 1200 044b 00       		.byte	0
 1201 044c 13       		.uleb128 0x13
 1202 044d 10000000 		.4byte	.LASF66
 1203 0451 01       		.byte	0x1
 1204 0452 86       		.byte	0x86
 1205 0453 B9000000 		.4byte	0xb9
 1206 0457 00000000 		.4byte	.LFB68
 1207 045b 68000000 		.4byte	.LFE68-.LFB68
 1208 045f 01       		.uleb128 0x1
 1209 0460 9C       		.byte	0x9c
 1210 0461 AC040000 		.4byte	0x4ac
 1211 0465 14       		.uleb128 0x14
 1212 0466 96040000 		.4byte	.LASF61
 1213 046a 01       		.byte	0x1
 1214 046b 86       		.byte	0x86
 1215 046c 93000000 		.4byte	0x93
 1216 0470 02       		.uleb128 0x2
 1217 0471 91       		.byte	0x91
 1218 0472 6C       		.sleb128 -20
 1219 0473 14       		.uleb128 0x14
 1220 0474 18000000 		.4byte	.LASF64
 1221 0478 01       		.byte	0x1
 1222 0479 86       		.byte	0x86
 1223 047a 7D000000 		.4byte	0x7d
 1224 047e 02       		.uleb128 0x2
 1225 047f 91       		.byte	0x91
 1226 0480 68       		.sleb128 -24
 1227 0481 14       		.uleb128 0x14
 1228 0482 3D010000 		.4byte	.LASF67
 1229 0486 01       		.byte	0x1
 1230 0487 86       		.byte	0x86
 1231 0488 53000000 		.4byte	0x53
 1232 048c 02       		.uleb128 0x2
 1233 048d 91       		.byte	0x91
 1234 048e 64       		.sleb128 -28
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 27


 1235 048f 15       		.uleb128 0x15
 1236 0490 60030000 		.4byte	.LASF21
 1237 0494 01       		.byte	0x1
 1238 0495 88       		.byte	0x88
 1239 0496 B9000000 		.4byte	0xb9
 1240 049a 02       		.uleb128 0x2
 1241 049b 91       		.byte	0x91
 1242 049c 77       		.sleb128 -9
 1243 049d 15       		.uleb128 0x15
 1244 049e BB020000 		.4byte	.LASF65
 1245 04a2 01       		.byte	0x1
 1246 04a3 89       		.byte	0x89
 1247 04a4 67010000 		.4byte	0x167
 1248 04a8 02       		.uleb128 0x2
 1249 04a9 91       		.byte	0x91
 1250 04aa 70       		.sleb128 -16
 1251 04ab 00       		.byte	0
 1252 04ac 16       		.uleb128 0x16
 1253 04ad A9040000 		.4byte	.LASF69
 1254 04b1 01       		.byte	0x1
 1255 04b2 AB       		.byte	0xab
 1256 04b3 00000000 		.4byte	.LFB69
 1257 04b7 16000000 		.4byte	.LFE69-.LFB69
 1258 04bb 01       		.uleb128 0x1
 1259 04bc 9C       		.byte	0x9c
 1260 04bd 16       		.uleb128 0x16
 1261 04be 0E020000 		.4byte	.LASF70
 1262 04c2 01       		.byte	0x1
 1263 04c3 B4       		.byte	0xb4
 1264 04c4 00000000 		.4byte	.LFB70
 1265 04c8 2E000000 		.4byte	.LFE70-.LFB70
 1266 04cc 01       		.uleb128 0x1
 1267 04cd 9C       		.byte	0x9c
 1268 04ce 17       		.uleb128 0x17
 1269 04cf 65000000 		.4byte	.LASF101
 1270 04d3 01       		.byte	0x1
 1271 04d4 C2       		.byte	0xc2
 1272 04d5 4C010000 		.4byte	0x14c
 1273 04d9 00000000 		.4byte	.LFB71
 1274 04dd 20010000 		.4byte	.LFE71-.LFB71
 1275 04e1 01       		.uleb128 0x1
 1276 04e2 9C       		.byte	0x9c
 1277 04e3 15050000 		.4byte	0x515
 1278 04e7 15       		.uleb128 0x15
 1279 04e8 CB030000 		.4byte	.LASF71
 1280 04ec 01       		.byte	0x1
 1281 04ed C5       		.byte	0xc5
 1282 04ee 4C010000 		.4byte	0x14c
 1283 04f2 03       		.uleb128 0x3
 1284 04f3 91       		.byte	0x91
 1285 04f4 E47C     		.sleb128 -412
 1286 04f6 15       		.uleb128 0x15
 1287 04f7 19010000 		.4byte	.LASF72
 1288 04fb 01       		.byte	0x1
 1289 04fc C9       		.byte	0xc9
 1290 04fd 15050000 		.4byte	0x515
 1291 0501 03       		.uleb128 0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 28


 1292 0502 91       		.byte	0x91
 1293 0503 D87C     		.sleb128 -424
 1294 0505 15       		.uleb128 0x15
 1295 0506 96040000 		.4byte	.LASF61
 1296 050a 01       		.byte	0x1
 1297 050b CA       		.byte	0xca
 1298 050c 25050000 		.4byte	0x525
 1299 0510 03       		.uleb128 0x3
 1300 0511 91       		.byte	0x91
 1301 0512 CC7C     		.sleb128 -436
 1302 0514 00       		.byte	0
 1303 0515 08       		.uleb128 0x8
 1304 0516 8C000000 		.4byte	0x8c
 1305 051a 25050000 		.4byte	0x525
 1306 051e 09       		.uleb128 0x9
 1307 051f 7F000000 		.4byte	0x7f
 1308 0523 09       		.byte	0x9
 1309 0524 00       		.byte	0
 1310 0525 08       		.uleb128 0x8
 1311 0526 8C000000 		.4byte	0x8c
 1312 052a 35050000 		.4byte	0x535
 1313 052e 09       		.uleb128 0x9
 1314 052f 7F000000 		.4byte	0x7f
 1315 0533 08       		.byte	0x8
 1316 0534 00       		.byte	0
 1317 0535 18       		.uleb128 0x18
 1318 0536 37040000 		.4byte	.LASF73
 1319 053a 0A       		.byte	0xa
 1320 053b 1207     		.2byte	0x712
 1321 053d 41050000 		.4byte	0x541
 1322 0541 11       		.uleb128 0x11
 1323 0542 AE000000 		.4byte	0xae
 1324 0546 19       		.uleb128 0x19
 1325 0547 DE010000 		.4byte	.LASF74
 1326 054b 07       		.byte	0x7
 1327 054c 11       		.byte	0x11
 1328 054d A6020000 		.4byte	0x2a6
 1329 0551 05       		.uleb128 0x5
 1330 0552 03       		.byte	0x3
 1331 0553 00000000 		.4byte	buffer_overflow
 1332 0557 19       		.uleb128 0x19
 1333 0558 4D010000 		.4byte	.LASF75
 1334 055c 07       		.byte	0x7
 1335 055d 22       		.byte	0x22
 1336 055e C5000000 		.4byte	0xc5
 1337 0562 05       		.uleb128 0x5
 1338 0563 03       		.byte	0x3
 1339 0564 00000000 		.4byte	dataPointsInStack
 1340 0568 19       		.uleb128 0x19
 1341 0569 93010000 		.4byte	.LASF76
 1342 056d 07       		.byte	0x7
 1343 056e 23       		.byte	0x23
 1344 056f C5000000 		.4byte	0xc5
 1345 0573 05       		.uleb128 0x5
 1346 0574 03       		.byte	0x3
 1347 0575 00000000 		.4byte	dataPointsInStackDesired
 1348 0579 08       		.uleb128 0x8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 29


 1349 057a AA010000 		.4byte	0x1aa
 1350 057e 89050000 		.4byte	0x589
 1351 0582 09       		.uleb128 0x9
 1352 0583 7F000000 		.4byte	0x7f
 1353 0587 95       		.byte	0x95
 1354 0588 00       		.byte	0
 1355 0589 19       		.uleb128 0x19
 1356 058a 19010000 		.4byte	.LASF72
 1357 058e 07       		.byte	0x7
 1358 058f 24       		.byte	0x24
 1359 0590 79050000 		.4byte	0x579
 1360 0594 05       		.uleb128 0x5
 1361 0595 03       		.byte	0x3
 1362 0596 00000000 		.4byte	data
 1363 059a 19       		.uleb128 0x19
 1364 059b 7C020000 		.4byte	.LASF77
 1365 059f 08       		.byte	0x8
 1366 05a0 1F       		.byte	0x1f
 1367 05a1 B9000000 		.4byte	0xb9
 1368 05a5 05       		.uleb128 0x5
 1369 05a6 03       		.byte	0x3
 1370 05a7 00000000 		.4byte	modem_state
 1371 05ab 19       		.uleb128 0x19
 1372 05ac 65020000 		.4byte	.LASF78
 1373 05b0 08       		.byte	0x8
 1374 05b1 62       		.byte	0x62
 1375 05b2 DD000000 		.4byte	0xdd
 1376 05b6 05       		.uleb128 0x5
 1377 05b7 03       		.byte	0x3
 1378 05b8 00000000 		.4byte	modem_start_time_stamp
 1379 05bc 19       		.uleb128 0x19
 1380 05bd EE010000 		.4byte	.LASF52
 1381 05c1 08       		.byte	0x8
 1382 05c2 63       		.byte	0x63
 1383 05c3 E2010000 		.4byte	0x1e2
 1384 05c7 05       		.uleb128 0x5
 1385 05c8 03       		.byte	0x3
 1386 05c9 00000000 		.4byte	modem_info
 1387 05cd 19       		.uleb128 0x19
 1388 05ce F0020000 		.4byte	.LASF79
 1389 05d2 08       		.byte	0x8
 1390 05d3 64       		.byte	0x64
 1391 05d4 56020000 		.4byte	0x256
 1392 05d8 05       		.uleb128 0x5
 1393 05d9 03       		.byte	0x3
 1394 05da 00000000 		.4byte	modem_stats
 1395 05de 19       		.uleb128 0x19
 1396 05df CD040000 		.4byte	.LASF80
 1397 05e3 08       		.byte	0x8
 1398 05e4 65       		.byte	0x65
 1399 05e5 AD020000 		.4byte	0x2ad
 1400 05e9 05       		.uleb128 0x5
 1401 05ea 03       		.byte	0x3
 1402 05eb 00000000 		.4byte	updatable_parameters
 1403 05ef 19       		.uleb128 0x19
 1404 05f0 67030000 		.4byte	.LASF81
 1405 05f4 0B       		.byte	0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 30


 1406 05f5 12       		.byte	0x12
 1407 05f6 54030000 		.4byte	0x354
 1408 05fa 05       		.uleb128 0x5
 1409 05fb 03       		.byte	0x3
 1410 05fc 00000000 		.4byte	inbox
 1411 0600 08       		.uleb128 0x8
 1412 0601 8C000000 		.4byte	0x8c
 1413 0605 11060000 		.4byte	0x611
 1414 0609 1A       		.uleb128 0x1a
 1415 060a 7F000000 		.4byte	0x7f
 1416 060e 0F27     		.2byte	0x270f
 1417 0610 00       		.byte	0
 1418 0611 19       		.uleb128 0x19
 1419 0612 0E050000 		.4byte	.LASF82
 1420 0616 09       		.byte	0x9
 1421 0617 18       		.byte	0x18
 1422 0618 00060000 		.4byte	0x600
 1423 061c 05       		.uleb128 0x5
 1424 061d 03       		.byte	0x3
 1425 061e 00000000 		.4byte	http_request
 1426 0622 19       		.uleb128 0x19
 1427 0623 F0040000 		.4byte	.LASF83
 1428 0627 09       		.byte	0x9
 1429 0628 19       		.byte	0x19
 1430 0629 00060000 		.4byte	0x600
 1431 062d 05       		.uleb128 0x5
 1432 062e 03       		.byte	0x3
 1433 062f 00000000 		.4byte	http_body
 1434 0633 08       		.uleb128 0x8
 1435 0634 8C000000 		.4byte	0x8c
 1436 0638 43060000 		.4byte	0x643
 1437 063c 09       		.uleb128 0x9
 1438 063d 7F000000 		.4byte	0x7f
 1439 0641 C7       		.byte	0xc7
 1440 0642 00       		.byte	0
 1441 0643 19       		.uleb128 0x19
 1442 0644 0D040000 		.4byte	.LASF84
 1443 0648 09       		.byte	0x9
 1444 0649 1A       		.byte	0x1a
 1445 064a 33060000 		.4byte	0x633
 1446 064e 05       		.uleb128 0x5
 1447 064f 03       		.byte	0x3
 1448 0650 00000000 		.4byte	http_route
 1449 0654 19       		.uleb128 0x19
 1450 0655 6D030000 		.4byte	.LASF85
 1451 0659 09       		.byte	0x9
 1452 065a 41       		.byte	0x41
 1453 065b 28030000 		.4byte	0x328
 1454 065f 05       		.uleb128 0x5
 1455 0660 03       		.byte	0x3
 1456 0661 00000000 		.4byte	system_info
 1457 0665 19       		.uleb128 0x19
 1458 0666 AB020000 		.4byte	.LASF86
 1459 066a 09       		.byte	0x9
 1460 066b 53       		.byte	0x53
 1461 066c 64030000 		.4byte	0x364
 1462 0670 05       		.uleb128 0x5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 31


 1463 0671 03       		.byte	0x3
 1464 0672 00000000 		.4byte	system_settings
 1465 0676 19       		.uleb128 0x19
 1466 0677 F9010000 		.4byte	.LASF87
 1467 067b 09       		.byte	0x9
 1468 067c 6F       		.byte	0x6f
 1469 067d F1020000 		.4byte	0x2f1
 1470 0681 05       		.uleb128 0x5
 1471 0682 03       		.byte	0x3
 1472 0683 00000000 		.4byte	alarmMeasure
 1473 0687 19       		.uleb128 0x19
 1474 0688 FC020000 		.4byte	.LASF88
 1475 068c 09       		.byte	0x9
 1476 068d 70       		.byte	0x70
 1477 068e B9000000 		.4byte	0xb9
 1478 0692 05       		.uleb128 0x5
 1479 0693 03       		.byte	0x3
 1480 0694 00000000 		.4byte	timeToMeasure
 1481 0698 19       		.uleb128 0x19
 1482 0699 34020000 		.4byte	.LASF89
 1483 069d 09       		.byte	0x9
 1484 069e 71       		.byte	0x71
 1485 069f F1020000 		.4byte	0x2f1
 1486 06a3 05       		.uleb128 0x5
 1487 06a4 03       		.byte	0x3
 1488 06a5 00000000 		.4byte	alarmSync
 1489 06a9 19       		.uleb128 0x19
 1490 06aa 1B050000 		.4byte	.LASF90
 1491 06ae 09       		.byte	0x9
 1492 06af 72       		.byte	0x72
 1493 06b0 B9000000 		.4byte	0xb9
 1494 06b4 05       		.uleb128 0x5
 1495 06b5 03       		.byte	0x3
 1496 06b6 00000000 		.4byte	timeToSync
 1497 06ba 19       		.uleb128 0x19
 1498 06bb B4030000 		.4byte	.LASF91
 1499 06bf 09       		.byte	0x9
 1500 06c0 73       		.byte	0x73
 1501 06c1 B9000000 		.4byte	0xb9
 1502 06c5 05       		.uleb128 0x5
 1503 06c6 03       		.byte	0x3
 1504 06c7 00000000 		.4byte	timeToSycnRemoteParams
 1505 06cb 1B       		.uleb128 0x1b
 1506 06cc 68657900 		.ascii	"hey\000"
 1507 06d0 09       		.byte	0x9
 1508 06d1 74       		.byte	0x74
 1509 06d2 B9000000 		.4byte	0xb9
 1510 06d6 05       		.uleb128 0x5
 1511 06d7 03       		.byte	0x3
 1512 06d8 00000000 		.4byte	hey
 1513 06dc 19       		.uleb128 0x19
 1514 06dd 31010000 		.4byte	.LASF92
 1515 06e1 09       		.byte	0x9
 1516 06e2 77       		.byte	0x77
 1517 06e3 F1020000 		.4byte	0x2f1
 1518 06e7 05       		.uleb128 0x5
 1519 06e8 03       		.byte	0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 32


 1520 06e9 00000000 		.4byte	alarmAppLED
 1521 06ed 19       		.uleb128 0x19
 1522 06ee 81040000 		.4byte	.LASF93
 1523 06f2 09       		.byte	0x9
 1524 06f3 78       		.byte	0x78
 1525 06f4 B9000000 		.4byte	0xb9
 1526 06f8 05       		.uleb128 0x5
 1527 06f9 03       		.byte	0x3
 1528 06fa 00000000 		.4byte	timeToAppLED
 1529 06fe 19       		.uleb128 0x19
 1530 06ff 7A000000 		.4byte	.LASF94
 1531 0703 01       		.byte	0x1
 1532 0704 0D       		.byte	0xd
 1533 0705 15050000 		.4byte	0x515
 1534 0709 05       		.uleb128 0x5
 1535 070a 03       		.byte	0x3
 1536 070b 00000000 		.4byte	SD_dir
 1537 070f 08       		.uleb128 0x8
 1538 0710 8C000000 		.4byte	0x8c
 1539 0714 20070000 		.4byte	0x720
 1540 0718 1A       		.uleb128 0x1a
 1541 0719 7F000000 		.4byte	0x7f
 1542 071d B70B     		.2byte	0xbb7
 1543 071f 00       		.byte	0
 1544 0720 19       		.uleb128 0x19
 1545 0721 06020000 		.4byte	.LASF95
 1546 0725 01       		.byte	0x1
 1547 0726 0E       		.byte	0xe
 1548 0727 0F070000 		.4byte	0x70f
 1549 072b 05       		.uleb128 0x5
 1550 072c 03       		.byte	0x3
 1551 072d 00000000 		.4byte	SD_body
 1552 0731 08       		.uleb128 0x8
 1553 0732 8C000000 		.4byte	0x8c
 1554 0736 41070000 		.4byte	0x741
 1555 073a 09       		.uleb128 0x9
 1556 073b 7F000000 		.4byte	0x7f
 1557 073f 1D       		.byte	0x1d
 1558 0740 00       		.byte	0
 1559 0741 19       		.uleb128 0x19
 1560 0742 75040000 		.4byte	.LASF96
 1561 0746 01       		.byte	0x1
 1562 0747 0F       		.byte	0xf
 1563 0748 31070000 		.4byte	0x731
 1564 074c 05       		.uleb128 0x5
 1565 074d 03       		.byte	0x3
 1566 074e 00000000 		.4byte	SD_filename
 1567 0752 08       		.uleb128 0x8
 1568 0753 8C000000 		.4byte	0x8c
 1569 0757 62070000 		.4byte	0x762
 1570 075b 09       		.uleb128 0x9
 1571 075c 7F000000 		.4byte	0x7f
 1572 0760 04       		.byte	0x4
 1573 0761 00       		.byte	0
 1574 0762 19       		.uleb128 0x19
 1575 0763 65010000 		.4byte	.LASF97
 1576 0767 01       		.byte	0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 33


 1577 0768 10       		.byte	0x10
 1578 0769 52070000 		.4byte	0x752
 1579 076d 05       		.uleb128 0x5
 1580 076e 03       		.byte	0x3
 1581 076f 00000000 		.4byte	SD_filemode
 1582 0773 00       		.byte	0
 1583              		.section	.debug_abbrev,"",%progbits
 1584              	.Ldebug_abbrev0:
 1585 0000 01       		.uleb128 0x1
 1586 0001 11       		.uleb128 0x11
 1587 0002 01       		.byte	0x1
 1588 0003 25       		.uleb128 0x25
 1589 0004 0E       		.uleb128 0xe
 1590 0005 13       		.uleb128 0x13
 1591 0006 0B       		.uleb128 0xb
 1592 0007 03       		.uleb128 0x3
 1593 0008 0E       		.uleb128 0xe
 1594 0009 1B       		.uleb128 0x1b
 1595 000a 0E       		.uleb128 0xe
 1596 000b 55       		.uleb128 0x55
 1597 000c 17       		.uleb128 0x17
 1598 000d 11       		.uleb128 0x11
 1599 000e 01       		.uleb128 0x1
 1600 000f 10       		.uleb128 0x10
 1601 0010 17       		.uleb128 0x17
 1602 0011 00       		.byte	0
 1603 0012 00       		.byte	0
 1604 0013 02       		.uleb128 0x2
 1605 0014 24       		.uleb128 0x24
 1606 0015 00       		.byte	0
 1607 0016 0B       		.uleb128 0xb
 1608 0017 0B       		.uleb128 0xb
 1609 0018 3E       		.uleb128 0x3e
 1610 0019 0B       		.uleb128 0xb
 1611 001a 03       		.uleb128 0x3
 1612 001b 0E       		.uleb128 0xe
 1613 001c 00       		.byte	0
 1614 001d 00       		.byte	0
 1615 001e 03       		.uleb128 0x3
 1616 001f 16       		.uleb128 0x16
 1617 0020 00       		.byte	0
 1618 0021 03       		.uleb128 0x3
 1619 0022 0E       		.uleb128 0xe
 1620 0023 3A       		.uleb128 0x3a
 1621 0024 0B       		.uleb128 0xb
 1622 0025 3B       		.uleb128 0x3b
 1623 0026 0B       		.uleb128 0xb
 1624 0027 49       		.uleb128 0x49
 1625 0028 13       		.uleb128 0x13
 1626 0029 00       		.byte	0
 1627 002a 00       		.byte	0
 1628 002b 04       		.uleb128 0x4
 1629 002c 24       		.uleb128 0x24
 1630 002d 00       		.byte	0
 1631 002e 0B       		.uleb128 0xb
 1632 002f 0B       		.uleb128 0xb
 1633 0030 3E       		.uleb128 0x3e
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 34


 1634 0031 0B       		.uleb128 0xb
 1635 0032 03       		.uleb128 0x3
 1636 0033 08       		.uleb128 0x8
 1637 0034 00       		.byte	0
 1638 0035 00       		.byte	0
 1639 0036 05       		.uleb128 0x5
 1640 0037 0F       		.uleb128 0xf
 1641 0038 00       		.byte	0
 1642 0039 0B       		.uleb128 0xb
 1643 003a 0B       		.uleb128 0xb
 1644 003b 00       		.byte	0
 1645 003c 00       		.byte	0
 1646 003d 06       		.uleb128 0x6
 1647 003e 0F       		.uleb128 0xf
 1648 003f 00       		.byte	0
 1649 0040 0B       		.uleb128 0xb
 1650 0041 0B       		.uleb128 0xb
 1651 0042 49       		.uleb128 0x49
 1652 0043 13       		.uleb128 0x13
 1653 0044 00       		.byte	0
 1654 0045 00       		.byte	0
 1655 0046 07       		.uleb128 0x7
 1656 0047 26       		.uleb128 0x26
 1657 0048 00       		.byte	0
 1658 0049 49       		.uleb128 0x49
 1659 004a 13       		.uleb128 0x13
 1660 004b 00       		.byte	0
 1661 004c 00       		.byte	0
 1662 004d 08       		.uleb128 0x8
 1663 004e 01       		.uleb128 0x1
 1664 004f 01       		.byte	0x1
 1665 0050 49       		.uleb128 0x49
 1666 0051 13       		.uleb128 0x13
 1667 0052 01       		.uleb128 0x1
 1668 0053 13       		.uleb128 0x13
 1669 0054 00       		.byte	0
 1670 0055 00       		.byte	0
 1671 0056 09       		.uleb128 0x9
 1672 0057 21       		.uleb128 0x21
 1673 0058 00       		.byte	0
 1674 0059 49       		.uleb128 0x49
 1675 005a 13       		.uleb128 0x13
 1676 005b 2F       		.uleb128 0x2f
 1677 005c 0B       		.uleb128 0xb
 1678 005d 00       		.byte	0
 1679 005e 00       		.byte	0
 1680 005f 0A       		.uleb128 0xa
 1681 0060 16       		.uleb128 0x16
 1682 0061 00       		.byte	0
 1683 0062 03       		.uleb128 0x3
 1684 0063 0E       		.uleb128 0xe
 1685 0064 3A       		.uleb128 0x3a
 1686 0065 0B       		.uleb128 0xb
 1687 0066 3B       		.uleb128 0x3b
 1688 0067 05       		.uleb128 0x5
 1689 0068 49       		.uleb128 0x49
 1690 0069 13       		.uleb128 0x13
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 35


 1691 006a 00       		.byte	0
 1692 006b 00       		.byte	0
 1693 006c 0B       		.uleb128 0xb
 1694 006d 26       		.uleb128 0x26
 1695 006e 00       		.byte	0
 1696 006f 00       		.byte	0
 1697 0070 00       		.byte	0
 1698 0071 0C       		.uleb128 0xc
 1699 0072 13       		.uleb128 0x13
 1700 0073 01       		.byte	0x1
 1701 0074 0B       		.uleb128 0xb
 1702 0075 05       		.uleb128 0x5
 1703 0076 3A       		.uleb128 0x3a
 1704 0077 0B       		.uleb128 0xb
 1705 0078 3B       		.uleb128 0x3b
 1706 0079 0B       		.uleb128 0xb
 1707 007a 01       		.uleb128 0x1
 1708 007b 13       		.uleb128 0x13
 1709 007c 00       		.byte	0
 1710 007d 00       		.byte	0
 1711 007e 0D       		.uleb128 0xd
 1712 007f 0D       		.uleb128 0xd
 1713 0080 00       		.byte	0
 1714 0081 03       		.uleb128 0x3
 1715 0082 0E       		.uleb128 0xe
 1716 0083 3A       		.uleb128 0x3a
 1717 0084 0B       		.uleb128 0xb
 1718 0085 3B       		.uleb128 0x3b
 1719 0086 0B       		.uleb128 0xb
 1720 0087 49       		.uleb128 0x49
 1721 0088 13       		.uleb128 0x13
 1722 0089 38       		.uleb128 0x38
 1723 008a 0B       		.uleb128 0xb
 1724 008b 00       		.byte	0
 1725 008c 00       		.byte	0
 1726 008d 0E       		.uleb128 0xe
 1727 008e 13       		.uleb128 0x13
 1728 008f 00       		.byte	0
 1729 0090 03       		.uleb128 0x3
 1730 0091 0E       		.uleb128 0xe
 1731 0092 3C       		.uleb128 0x3c
 1732 0093 19       		.uleb128 0x19
 1733 0094 00       		.byte	0
 1734 0095 00       		.byte	0
 1735 0096 0F       		.uleb128 0xf
 1736 0097 13       		.uleb128 0x13
 1737 0098 01       		.byte	0x1
 1738 0099 0B       		.uleb128 0xb
 1739 009a 0B       		.uleb128 0xb
 1740 009b 3A       		.uleb128 0x3a
 1741 009c 0B       		.uleb128 0xb
 1742 009d 3B       		.uleb128 0x3b
 1743 009e 0B       		.uleb128 0xb
 1744 009f 01       		.uleb128 0x1
 1745 00a0 13       		.uleb128 0x13
 1746 00a1 00       		.byte	0
 1747 00a2 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 36


 1748 00a3 10       		.uleb128 0x10
 1749 00a4 0D       		.uleb128 0xd
 1750 00a5 00       		.byte	0
 1751 00a6 03       		.uleb128 0x3
 1752 00a7 08       		.uleb128 0x8
 1753 00a8 3A       		.uleb128 0x3a
 1754 00a9 0B       		.uleb128 0xb
 1755 00aa 3B       		.uleb128 0x3b
 1756 00ab 0B       		.uleb128 0xb
 1757 00ac 49       		.uleb128 0x49
 1758 00ad 13       		.uleb128 0x13
 1759 00ae 38       		.uleb128 0x38
 1760 00af 0B       		.uleb128 0xb
 1761 00b0 00       		.byte	0
 1762 00b1 00       		.byte	0
 1763 00b2 11       		.uleb128 0x11
 1764 00b3 35       		.uleb128 0x35
 1765 00b4 00       		.byte	0
 1766 00b5 49       		.uleb128 0x49
 1767 00b6 13       		.uleb128 0x13
 1768 00b7 00       		.byte	0
 1769 00b8 00       		.byte	0
 1770 00b9 12       		.uleb128 0x12
 1771 00ba 2E       		.uleb128 0x2e
 1772 00bb 00       		.byte	0
 1773 00bc 3F       		.uleb128 0x3f
 1774 00bd 19       		.uleb128 0x19
 1775 00be 03       		.uleb128 0x3
 1776 00bf 0E       		.uleb128 0xe
 1777 00c0 3A       		.uleb128 0x3a
 1778 00c1 0B       		.uleb128 0xb
 1779 00c2 3B       		.uleb128 0x3b
 1780 00c3 0B       		.uleb128 0xb
 1781 00c4 11       		.uleb128 0x11
 1782 00c5 01       		.uleb128 0x1
 1783 00c6 12       		.uleb128 0x12
 1784 00c7 06       		.uleb128 0x6
 1785 00c8 40       		.uleb128 0x40
 1786 00c9 18       		.uleb128 0x18
 1787 00ca 9742     		.uleb128 0x2117
 1788 00cc 19       		.uleb128 0x19
 1789 00cd 00       		.byte	0
 1790 00ce 00       		.byte	0
 1791 00cf 13       		.uleb128 0x13
 1792 00d0 2E       		.uleb128 0x2e
 1793 00d1 01       		.byte	0x1
 1794 00d2 3F       		.uleb128 0x3f
 1795 00d3 19       		.uleb128 0x19
 1796 00d4 03       		.uleb128 0x3
 1797 00d5 0E       		.uleb128 0xe
 1798 00d6 3A       		.uleb128 0x3a
 1799 00d7 0B       		.uleb128 0xb
 1800 00d8 3B       		.uleb128 0x3b
 1801 00d9 0B       		.uleb128 0xb
 1802 00da 27       		.uleb128 0x27
 1803 00db 19       		.uleb128 0x19
 1804 00dc 49       		.uleb128 0x49
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 37


 1805 00dd 13       		.uleb128 0x13
 1806 00de 11       		.uleb128 0x11
 1807 00df 01       		.uleb128 0x1
 1808 00e0 12       		.uleb128 0x12
 1809 00e1 06       		.uleb128 0x6
 1810 00e2 40       		.uleb128 0x40
 1811 00e3 18       		.uleb128 0x18
 1812 00e4 9642     		.uleb128 0x2116
 1813 00e6 19       		.uleb128 0x19
 1814 00e7 01       		.uleb128 0x1
 1815 00e8 13       		.uleb128 0x13
 1816 00e9 00       		.byte	0
 1817 00ea 00       		.byte	0
 1818 00eb 14       		.uleb128 0x14
 1819 00ec 05       		.uleb128 0x5
 1820 00ed 00       		.byte	0
 1821 00ee 03       		.uleb128 0x3
 1822 00ef 0E       		.uleb128 0xe
 1823 00f0 3A       		.uleb128 0x3a
 1824 00f1 0B       		.uleb128 0xb
 1825 00f2 3B       		.uleb128 0x3b
 1826 00f3 0B       		.uleb128 0xb
 1827 00f4 49       		.uleb128 0x49
 1828 00f5 13       		.uleb128 0x13
 1829 00f6 02       		.uleb128 0x2
 1830 00f7 18       		.uleb128 0x18
 1831 00f8 00       		.byte	0
 1832 00f9 00       		.byte	0
 1833 00fa 15       		.uleb128 0x15
 1834 00fb 34       		.uleb128 0x34
 1835 00fc 00       		.byte	0
 1836 00fd 03       		.uleb128 0x3
 1837 00fe 0E       		.uleb128 0xe
 1838 00ff 3A       		.uleb128 0x3a
 1839 0100 0B       		.uleb128 0xb
 1840 0101 3B       		.uleb128 0x3b
 1841 0102 0B       		.uleb128 0xb
 1842 0103 49       		.uleb128 0x49
 1843 0104 13       		.uleb128 0x13
 1844 0105 02       		.uleb128 0x2
 1845 0106 18       		.uleb128 0x18
 1846 0107 00       		.byte	0
 1847 0108 00       		.byte	0
 1848 0109 16       		.uleb128 0x16
 1849 010a 2E       		.uleb128 0x2e
 1850 010b 00       		.byte	0
 1851 010c 3F       		.uleb128 0x3f
 1852 010d 19       		.uleb128 0x19
 1853 010e 03       		.uleb128 0x3
 1854 010f 0E       		.uleb128 0xe
 1855 0110 3A       		.uleb128 0x3a
 1856 0111 0B       		.uleb128 0xb
 1857 0112 3B       		.uleb128 0x3b
 1858 0113 0B       		.uleb128 0xb
 1859 0114 11       		.uleb128 0x11
 1860 0115 01       		.uleb128 0x1
 1861 0116 12       		.uleb128 0x12
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 38


 1862 0117 06       		.uleb128 0x6
 1863 0118 40       		.uleb128 0x40
 1864 0119 18       		.uleb128 0x18
 1865 011a 9642     		.uleb128 0x2116
 1866 011c 19       		.uleb128 0x19
 1867 011d 00       		.byte	0
 1868 011e 00       		.byte	0
 1869 011f 17       		.uleb128 0x17
 1870 0120 2E       		.uleb128 0x2e
 1871 0121 01       		.byte	0x1
 1872 0122 3F       		.uleb128 0x3f
 1873 0123 19       		.uleb128 0x19
 1874 0124 03       		.uleb128 0x3
 1875 0125 0E       		.uleb128 0xe
 1876 0126 3A       		.uleb128 0x3a
 1877 0127 0B       		.uleb128 0xb
 1878 0128 3B       		.uleb128 0x3b
 1879 0129 0B       		.uleb128 0xb
 1880 012a 49       		.uleb128 0x49
 1881 012b 13       		.uleb128 0x13
 1882 012c 11       		.uleb128 0x11
 1883 012d 01       		.uleb128 0x1
 1884 012e 12       		.uleb128 0x12
 1885 012f 06       		.uleb128 0x6
 1886 0130 40       		.uleb128 0x40
 1887 0131 18       		.uleb128 0x18
 1888 0132 9642     		.uleb128 0x2116
 1889 0134 19       		.uleb128 0x19
 1890 0135 01       		.uleb128 0x1
 1891 0136 13       		.uleb128 0x13
 1892 0137 00       		.byte	0
 1893 0138 00       		.byte	0
 1894 0139 18       		.uleb128 0x18
 1895 013a 34       		.uleb128 0x34
 1896 013b 00       		.byte	0
 1897 013c 03       		.uleb128 0x3
 1898 013d 0E       		.uleb128 0xe
 1899 013e 3A       		.uleb128 0x3a
 1900 013f 0B       		.uleb128 0xb
 1901 0140 3B       		.uleb128 0x3b
 1902 0141 05       		.uleb128 0x5
 1903 0142 49       		.uleb128 0x49
 1904 0143 13       		.uleb128 0x13
 1905 0144 3F       		.uleb128 0x3f
 1906 0145 19       		.uleb128 0x19
 1907 0146 3C       		.uleb128 0x3c
 1908 0147 19       		.uleb128 0x19
 1909 0148 00       		.byte	0
 1910 0149 00       		.byte	0
 1911 014a 19       		.uleb128 0x19
 1912 014b 34       		.uleb128 0x34
 1913 014c 00       		.byte	0
 1914 014d 03       		.uleb128 0x3
 1915 014e 0E       		.uleb128 0xe
 1916 014f 3A       		.uleb128 0x3a
 1917 0150 0B       		.uleb128 0xb
 1918 0151 3B       		.uleb128 0x3b
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 39


 1919 0152 0B       		.uleb128 0xb
 1920 0153 49       		.uleb128 0x49
 1921 0154 13       		.uleb128 0x13
 1922 0155 3F       		.uleb128 0x3f
 1923 0156 19       		.uleb128 0x19
 1924 0157 02       		.uleb128 0x2
 1925 0158 18       		.uleb128 0x18
 1926 0159 00       		.byte	0
 1927 015a 00       		.byte	0
 1928 015b 1A       		.uleb128 0x1a
 1929 015c 21       		.uleb128 0x21
 1930 015d 00       		.byte	0
 1931 015e 49       		.uleb128 0x49
 1932 015f 13       		.uleb128 0x13
 1933 0160 2F       		.uleb128 0x2f
 1934 0161 05       		.uleb128 0x5
 1935 0162 00       		.byte	0
 1936 0163 00       		.byte	0
 1937 0164 1B       		.uleb128 0x1b
 1938 0165 34       		.uleb128 0x34
 1939 0166 00       		.byte	0
 1940 0167 03       		.uleb128 0x3
 1941 0168 08       		.uleb128 0x8
 1942 0169 3A       		.uleb128 0x3a
 1943 016a 0B       		.uleb128 0xb
 1944 016b 3B       		.uleb128 0x3b
 1945 016c 0B       		.uleb128 0xb
 1946 016d 49       		.uleb128 0x49
 1947 016e 13       		.uleb128 0x13
 1948 016f 3F       		.uleb128 0x3f
 1949 0170 19       		.uleb128 0x19
 1950 0171 02       		.uleb128 0x2
 1951 0172 18       		.uleb128 0x18
 1952 0173 00       		.byte	0
 1953 0174 00       		.byte	0
 1954 0175 00       		.byte	0
 1955              		.section	.debug_aranges,"",%progbits
 1956 0000 54000000 		.4byte	0x54
 1957 0004 0200     		.2byte	0x2
 1958 0006 00000000 		.4byte	.Ldebug_info0
 1959 000a 04       		.byte	0x4
 1960 000b 00       		.byte	0
 1961 000c 0000     		.2byte	0
 1962 000e 0000     		.2byte	0
 1963 0010 00000000 		.4byte	.LFB64
 1964 0014 0C000000 		.4byte	.LFE64-.LFB64
 1965 0018 00000000 		.4byte	.LFB65
 1966 001c 40000000 		.4byte	.LFE65-.LFB65
 1967 0020 00000000 		.4byte	.LFB66
 1968 0024 2C000000 		.4byte	.LFE66-.LFB66
 1969 0028 00000000 		.4byte	.LFB67
 1970 002c 6C000000 		.4byte	.LFE67-.LFB67
 1971 0030 00000000 		.4byte	.LFB68
 1972 0034 68000000 		.4byte	.LFE68-.LFB68
 1973 0038 00000000 		.4byte	.LFB69
 1974 003c 16000000 		.4byte	.LFE69-.LFB69
 1975 0040 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 40


 1976 0044 2E000000 		.4byte	.LFE70-.LFB70
 1977 0048 00000000 		.4byte	.LFB71
 1978 004c 20010000 		.4byte	.LFE71-.LFB71
 1979 0050 00000000 		.4byte	0
 1980 0054 00000000 		.4byte	0
 1981              		.section	.debug_ranges,"",%progbits
 1982              	.Ldebug_ranges0:
 1983 0000 00000000 		.4byte	.LFB64
 1984 0004 0C000000 		.4byte	.LFE64
 1985 0008 00000000 		.4byte	.LFB65
 1986 000c 40000000 		.4byte	.LFE65
 1987 0010 00000000 		.4byte	.LFB66
 1988 0014 2C000000 		.4byte	.LFE66
 1989 0018 00000000 		.4byte	.LFB67
 1990 001c 6C000000 		.4byte	.LFE67
 1991 0020 00000000 		.4byte	.LFB68
 1992 0024 68000000 		.4byte	.LFE68
 1993 0028 00000000 		.4byte	.LFB69
 1994 002c 16000000 		.4byte	.LFE69
 1995 0030 00000000 		.4byte	.LFB70
 1996 0034 2E000000 		.4byte	.LFE70
 1997 0038 00000000 		.4byte	.LFB71
 1998 003c 20010000 		.4byte	.LFE71
 1999 0040 00000000 		.4byte	0
 2000 0044 00000000 		.4byte	0
 2001              		.section	.debug_line,"",%progbits
 2002              	.Ldebug_line0:
 2003 0000 84020000 		.section	.debug_str,"MS",%progbits,1
 2003      0200BD01 
 2003      00000201 
 2003      FB0E0D00 
 2003      01010101 
 2004              	.LASF29:
 2005 0000 6D6F6465 		.ascii	"model_id\000"
 2005      6C5F6964 
 2005      00
 2006              	.LASF28:
 2007 0009 73696D5F 		.ascii	"sim_id\000"
 2007      696400
 2008              	.LASF66:
 2009 0010 53445F72 		.ascii	"SD_read\000"
 2009      65616400 
 2010              	.LASF64:
 2011 0018 70446174 		.ascii	"pData\000"
 2011      6100
 2012              	.LASF57:
 2013 001e 7379735F 		.ascii	"sys_settings_t\000"
 2013      73657474 
 2013      696E6773 
 2013      5F7400
 2014              	.LASF48:
 2015 002d 63757272 		.ascii	"currentCountDownValue\000"
 2015      656E7443 
 2015      6F756E74 
 2015      446F776E 
 2015      56616C75 
 2016              	.LASF47:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 41


 2017 0043 636F756E 		.ascii	"countDownValue\000"
 2017      74446F77 
 2017      6E56616C 
 2017      756500
 2018              	.LASF2:
 2019 0052 73686F72 		.ascii	"short int\000"
 2019      7420696E 
 2019      7400
 2020              	.LASF10:
 2021 005c 73697A65 		.ascii	"sizetype\000"
 2021      74797065 
 2021      00
 2022              	.LASF101:
 2023 0065 53445F63 		.ascii	"SD_card_test\000"
 2023      6172645F 
 2023      74657374 
 2023      00
 2024              	.LASF55:
 2025 0072 65705F68 		.ascii	"ep_host\000"
 2025      6F737400 
 2026              	.LASF94:
 2027 007a 53445F64 		.ascii	"SD_dir\000"
 2027      697200
 2028              	.LASF99:
 2029 0081 73645F63 		.ascii	"sd_card.c\000"
 2029      6172642E 
 2029      6300
 2030              	.LASF98:
 2031 008b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2031      43313120 
 2031      352E342E 
 2031      31203230 
 2031      31363036 
 2032 00be 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2032      20726576 
 2032      6973696F 
 2032      6E203233 
 2032      37373135 
 2033 00f1 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2033      66756E63 
 2033      74696F6E 
 2033      2D736563 
 2033      74696F6E 
 2034              	.LASF72:
 2035 0119 64617461 		.ascii	"data\000"
 2035      00
 2036              	.LASF53:
 2037 011e 63686970 		.ascii	"chip_uniqueId\000"
 2037      5F756E69 
 2037      71756549 
 2037      6400
 2038              	.LASF34:
 2039 012c 65636E6F 		.ascii	"ecno\000"
 2039      00
 2040              	.LASF92:
 2041 0131 616C6172 		.ascii	"alarmAppLED\000"
 2041      6D417070 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 42


 2041      4C454400 
 2042              	.LASF67:
 2043 013d 4E756D42 		.ascii	"NumBytes\000"
 2043      79746573 
 2043      00
 2044              	.LASF15:
 2045 0146 75696E74 		.ascii	"uint16\000"
 2045      313600
 2046              	.LASF75:
 2047 014d 64617461 		.ascii	"dataPointsInStack\000"
 2047      506F696E 
 2047      7473496E 
 2047      53746163 
 2047      6B00
 2048              	.LASF14:
 2049 015f 75696E74 		.ascii	"uint8\000"
 2049      3800
 2050              	.LASF97:
 2051 0165 53445F66 		.ascii	"SD_filemode\000"
 2051      696C656D 
 2051      6F646500 
 2052              	.LASF16:
 2053 0171 696E7431 		.ascii	"int16\000"
 2053      3600
 2054              	.LASF26:
 2055 0177 74696D65 		.ascii	"timeStamp\000"
 2055      5374616D 
 2055      7000
 2056              	.LASF62:
 2057 0181 53445F77 		.ascii	"SD_write\000"
 2057      72697465 
 2057      00
 2058              	.LASF58:
 2059 018a 53445F6D 		.ascii	"SD_mkdir\000"
 2059      6B646972 
 2059      00
 2060              	.LASF76:
 2061 0193 64617461 		.ascii	"dataPointsInStackDesired\000"
 2061      506F696E 
 2061      7473496E 
 2061      53746163 
 2061      6B446573 
 2062              	.LASF18:
 2063 01ac 666C6F61 		.ascii	"float\000"
 2063      7400
 2064              	.LASF60:
 2065 01b2 6469725F 		.ascii	"dir_name\000"
 2065      6E616D65 
 2065      00
 2066              	.LASF6:
 2067 01bb 6C6F6E67 		.ascii	"long long int\000"
 2067      206C6F6E 
 2067      6720696E 
 2067      7400
 2068              	.LASF11:
 2069 01c9 63686172 		.ascii	"char\000"
 2069      00
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 43


 2070              	.LASF22:
 2071 01ce 72656173 		.ascii	"reason\000"
 2071      6F6E00
 2072              	.LASF4:
 2073 01d5 6C6F6E67 		.ascii	"long int\000"
 2073      20696E74 
 2073      00
 2074              	.LASF74:
 2075 01de 62756666 		.ascii	"buffer_overflow\000"
 2075      65725F6F 
 2075      76657266 
 2075      6C6F7700 
 2076              	.LASF52:
 2077 01ee 6D6F6465 		.ascii	"modem_info\000"
 2077      6D5F696E 
 2077      666F00
 2078              	.LASF87:
 2079 01f9 616C6172 		.ascii	"alarmMeasure\000"
 2079      6D4D6561 
 2079      73757265 
 2079      00
 2080              	.LASF95:
 2081 0206 53445F62 		.ascii	"SD_body\000"
 2081      6F647900 
 2082              	.LASF70:
 2083 020e 53445F70 		.ascii	"SD_power_down\000"
 2083      6F776572 
 2083      5F646F77 
 2083      6E00
 2084              	.LASF51:
 2085 021c 616C6172 		.ascii	"alarm\000"
 2085      6D00
 2086              	.LASF42:
 2087 0222 6D656173 		.ascii	"measure_time\000"
 2087      7572655F 
 2087      74696D65 
 2087      00
 2088              	.LASF33:
 2089 022f 72736370 		.ascii	"rscp\000"
 2089      00
 2090              	.LASF89:
 2091 0234 616C6172 		.ascii	"alarmSync\000"
 2091      6D53796E 
 2091      6300
 2092              	.LASF9:
 2093 023e 6C6F6E67 		.ascii	"long double\000"
 2093      20646F75 
 2093      626C6500 
 2094              	.LASF1:
 2095 024a 756E7369 		.ascii	"unsigned char\000"
 2095      676E6564 
 2095      20636861 
 2095      7200
 2096              	.LASF24:
 2097 0258 46535F46 		.ascii	"FS_FILE\000"
 2097      494C4500 
 2098              	.LASF36:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 44


 2099 0260 72737270 		.ascii	"rsrp\000"
 2099      00
 2100              	.LASF78:
 2101 0265 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2101      6D5F7374 
 2101      6172745F 
 2101      74696D65 
 2101      5F737461 
 2102              	.LASF77:
 2103 027c 6D6F6465 		.ascii	"modem_state\000"
 2103      6D5F7374 
 2103      61746500 
 2104              	.LASF0:
 2105 0288 7369676E 		.ascii	"signed char\000"
 2105      65642063 
 2105      68617200 
 2106              	.LASF7:
 2107 0294 6C6F6E67 		.ascii	"long long unsigned int\000"
 2107      206C6F6E 
 2107      6720756E 
 2107      7369676E 
 2107      65642069 
 2108              	.LASF86:
 2109 02ab 73797374 		.ascii	"system_settings\000"
 2109      656D5F73 
 2109      65747469 
 2109      6E677300 
 2110              	.LASF65:
 2111 02bb 7046696C 		.ascii	"pFile\000"
 2111      6500
 2112              	.LASF8:
 2113 02c1 756E7369 		.ascii	"unsigned int\000"
 2113      676E6564 
 2113      20696E74 
 2113      00
 2114              	.LASF27:
 2115 02ce 6B65795F 		.ascii	"key_value_t\000"
 2115      76616C75 
 2115      655F7400 
 2116              	.LASF32:
 2117 02da 72786C65 		.ascii	"rxlev\000"
 2117      7600
 2118              	.LASF43:
 2119 02e0 73796E63 		.ascii	"sync_time\000"
 2119      5F74696D 
 2119      6500
 2120              	.LASF63:
 2121 02ea 704D6F64 		.ascii	"pMode\000"
 2121      6500
 2122              	.LASF79:
 2123 02f0 6D6F6465 		.ascii	"modem_stats\000"
 2123      6D5F7374 
 2123      61747300 
 2124              	.LASF88:
 2125 02fc 74696D65 		.ascii	"timeToMeasure\000"
 2125      546F4D65 
 2125      61737572 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 45


 2125      6500
 2126              	.LASF46:
 2127 030a 75706461 		.ascii	"updatable_parameters_t\000"
 2127      7461626C 
 2127      655F7061 
 2127      72616D65 
 2127      74657273 
 2128              	.LASF41:
 2129 0321 73696D5F 		.ascii	"sim_type\000"
 2129      74797065 
 2129      00
 2130              	.LASF54:
 2131 032a 7379735F 		.ascii	"sys_info_t\000"
 2131      696E666F 
 2131      5F7400
 2132              	.LASF3:
 2133 0335 73686F72 		.ascii	"short unsigned int\000"
 2133      7420756E 
 2133      7369676E 
 2133      65642069 
 2133      6E7400
 2134              	.LASF37:
 2135 0348 74696D65 		.ascii	"time_to_network_connect\000"
 2135      5F746F5F 
 2135      6E657477 
 2135      6F726B5F 
 2135      636F6E6E 
 2136              	.LASF21:
 2137 0360 73746174 		.ascii	"status\000"
 2137      757300
 2138              	.LASF81:
 2139 0367 696E626F 		.ascii	"inbox\000"
 2139      7800
 2140              	.LASF85:
 2141 036d 73797374 		.ascii	"system_info\000"
 2141      656D5F69 
 2141      6E666F00 
 2142              	.LASF38:
 2143 0379 74696D65 		.ascii	"time_to_acquire_ip\000"
 2143      5F746F5F 
 2143      61637175 
 2143      6972655F 
 2143      697000
 2144              	.LASF23:
 2145 038c 74657374 		.ascii	"test_t\000"
 2145      5F7400
 2146              	.LASF30:
 2147 0393 696D6569 		.ascii	"imei\000"
 2147      00
 2148              	.LASF13:
 2149 0398 696E7433 		.ascii	"int32_t\000"
 2149      325F7400 
 2150              	.LASF39:
 2151 03a0 6D6F6465 		.ascii	"modem_stats_t\000"
 2151      6D5F7374 
 2151      6174735F 
 2151      7400
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 46


 2152              	.LASF45:
 2153 03ae 5F426F6F 		.ascii	"_Bool\000"
 2153      6C00
 2154              	.LASF91:
 2155 03b4 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2155      546F5379 
 2155      636E5265 
 2155      6D6F7465 
 2155      50617261 
 2156              	.LASF71:
 2157 03cb 74657374 		.ascii	"test\000"
 2157      00
 2158              	.LASF35:
 2159 03d0 72737271 		.ascii	"rsrq\000"
 2159      00
 2160              	.LASF100:
 2161 03d5 433A5C55 		.ascii	"C:\\Users\\dantz\\Documents\\GitHub\\notoriOS\\noto"
 2161      73657273 
 2161      5C64616E 
 2161      747A5C44 
 2161      6F63756D 
 2162 0402 72694F53 		.ascii	"riOS.cydsn\000"
 2162      2E637964 
 2162      736E00
 2163              	.LASF84:
 2164 040d 68747470 		.ascii	"http_route\000"
 2164      5F726F75 
 2164      746500
 2165              	.LASF5:
 2166 0418 6C6F6E67 		.ascii	"long unsigned int\000"
 2166      20756E73 
 2166      69676E65 
 2166      6420696E 
 2166      7400
 2167              	.LASF17:
 2168 042a 696E7433 		.ascii	"int32\000"
 2168      3200
 2169              	.LASF19:
 2170 0430 646F7562 		.ascii	"double\000"
 2170      6C6500
 2171              	.LASF73:
 2172 0437 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2172      52784275 
 2172      66666572 
 2172      00
 2173              	.LASF44:
 2174 0444 64656275 		.ascii	"debug_level\000"
 2174      675F6C65 
 2174      76656C00 
 2175              	.LASF31:
 2176 0450 6D6F6465 		.ascii	"modem_info_t\000"
 2176      6D5F696E 
 2176      666F5F74 
 2176      00
 2177              	.LASF49:
 2178 045d 636F756E 		.ascii	"countDownType\000"
 2178      74446F77 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 47


 2178      6E547970 
 2178      6500
 2179              	.LASF12:
 2180 046b 5F5F696E 		.ascii	"__int32_t\000"
 2180      7433325F 
 2180      7400
 2181              	.LASF96:
 2182 0475 53445F66 		.ascii	"SD_filename\000"
 2182      696C656E 
 2182      616D6500 
 2183              	.LASF93:
 2184 0481 74696D65 		.ascii	"timeToAppLED\000"
 2184      546F4170 
 2184      704C4544 
 2184      00
 2185              	.LASF68:
 2186 048e 53445F69 		.ascii	"SD_init\000"
 2186      6E697400 
 2187              	.LASF61:
 2188 0496 66696C65 		.ascii	"fileName\000"
 2188      4E616D65 
 2188      00
 2189              	.LASF20:
 2190 049f 74657374 		.ascii	"test_name\000"
 2190      5F6E616D 
 2190      6500
 2191              	.LASF69:
 2192 04a9 53445F70 		.ascii	"SD_power_up\000"
 2192      6F776572 
 2192      5F757000 
 2193              	.LASF50:
 2194 04b5 636F756E 		.ascii	"countDownResetCondition\000"
 2194      74446F77 
 2194      6E526573 
 2194      6574436F 
 2194      6E646974 
 2195              	.LASF80:
 2196 04cd 75706461 		.ascii	"updatable_parameters\000"
 2196      7461626C 
 2196      655F7061 
 2196      72616D65 
 2196      74657273 
 2197              	.LASF56:
 2198 04e2 65705F70 		.ascii	"ep_port\000"
 2198      6F727400 
 2199              	.LASF25:
 2200 04ea 76616C75 		.ascii	"value\000"
 2200      6500
 2201              	.LASF83:
 2202 04f0 68747470 		.ascii	"http_body\000"
 2202      5F626F64 
 2202      7900
 2203              	.LASF40:
 2204 04fa 6E6F6465 		.ascii	"node_type\000"
 2204      5F747970 
 2204      6500
 2205              	.LASF59:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccBzTvtA.s 			page 48


 2206 0504 53445F72 		.ascii	"SD_rmfile\000"
 2206      6D66696C 
 2206      6500
 2207              	.LASF82:
 2208 050e 68747470 		.ascii	"http_request\000"
 2208      5F726571 
 2208      75657374 
 2208      00
 2209              	.LASF90:
 2210 051b 74696D65 		.ascii	"timeToSync\000"
 2210      546F5379 
 2210      6E6300
 2211              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
