ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"level_sensor.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	level_sensor_inbox,100,4
  20              		.comm	level_sensor_enabled,1,1
  21              		.comm	downstream_level_sensor_inbox,100,4
  22              		.comm	downstream_level_sensor_enabled,1,1
  23              		.comm	valve_enabled,1,1
  24              		.comm	valve_inbox,100,4
  25              		.comm	buffer_overflow,1,1
  26              		.comm	dataPointsInStack,2,2
  27              		.comm	dataPointsInStackDesired,2,2
  28              		.comm	data,6600,4
  29              		.comm	modem_state,1,1
  30              		.comm	modem_start_time_stamp,4,4
  31              		.comm	modem_info,60,4
  32              		.comm	modem_stats,32,4
  33              		.comm	updatable_parameters,9,4
  34              		.syntax unified
  35              		.global _printf_float
  36              		.thumb
  37              		.syntax unified
  38              		.comm	App_LED_enabled,1,1
  39              		.comm	app_led_inbox,100,4
  40              		.comm	http_request,10000,4
  41              		.comm	http_body,10000,4
  42              		.comm	http_route,200,4
  43              		.comm	system_info,28,4
  44              		.comm	system_settings,104,4
  45              		.comm	alarmMeasure,6,4
  46              		.comm	timeToMeasure,1,1
  47              		.comm	alarmSync,6,4
  48              		.comm	timeToSync,1,1
  49              		.comm	timeToSycnRemoteParams,1,1
  50              		.comm	hey,1,1
  51              		.comm	alarmAppLED,6,4
  52              		.comm	timeToAppLED,1,1
  53              		.comm	alarmLevelSensor,6,4
  54              		.comm	timetoLevelSensor,1,1
  55              		.comm	alarmDownstreamLevelSensor,6,4
  56              		.comm	timetoDownstreamLevelSensor,1,1
  57              		.comm	alarmValve,6,4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 2


  58              		.comm	timeToValve,1,1
  59              		.bss
  60              		.align	2
  61              	uart_chars:
  62 0000 00000000 		.space	257
  62      00000000 
  62      00000000 
  62      00000000 
  62      00000000 
  63              	num_chars:
  64 0101 00       		.space	1
  65              		.data
  66              		.align	2
  67              		.type	line, %object
  68              		.size	line, 4
  69              	line:
  70 0000 00000000 		.word	uart_chars
  71              		.bss
  72 0102 0000     		.align	2
  73              	match:
  74 0104 00000000 		.space	4
  75              		.align	2
  76              	pattern:
  77 0108 00000000 		.space	4
  78              		.section	.text.uart_string,"ax",%progbits
  79              		.align	2
  80              		.global	uart_string
  81              		.thumb
  82              		.thumb_func
  83              		.type	uart_string, %function
  84              	uart_string:
  85              	.LFB64:
  86              		.file 1 "level_sensor.c"
   1:level_sensor.c **** #include "level_sensor.h"
   2:level_sensor.c **** #include "notoriOS.h"
   3:level_sensor.c **** #include "debug.h"
   4:level_sensor.c **** 
   5:level_sensor.c **** /* === Driver Functions === */
   6:level_sensor.c **** 
   7:level_sensor.c **** //Sensor related global calls
   8:level_sensor.c **** 
   9:level_sensor.c **** 
  10:level_sensor.c **** // Circular buffer of recently received chars.
  11:level_sensor.c **** // Initialize all the members of the array uart_chars to 0. 
  12:level_sensor.c **** static char uart_chars[257] = {0};
  13:level_sensor.c **** static uint8_t num_chars = 0;
  14:level_sensor.c **** 
  15:level_sensor.c **** static const char *line = uart_chars;
  16:level_sensor.c **** // Only pointers can be null, where null is a special address used to signify that the pointer is n
  17:level_sensor.c **** // Pointers are not initialized to null by default, you must do so if you want them initialized.
  18:level_sensor.c **** static const char *match = NULL;
  19:level_sensor.c **** static const char *pattern = NULL;
  20:level_sensor.c **** 
  21:level_sensor.c **** 
  22:level_sensor.c **** // This is only defined in c file so this function will return the location in memory where that va
  23:level_sensor.c **** const char *uart_string(void) {
  87              		.loc 1 23 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 3


  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 1, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92 0000 80B4     		push	{r7}
  93              		.cfi_def_cfa_offset 4
  94              		.cfi_offset 7, -4
  95 0002 00AF     		add	r7, sp, #0
  96              		.cfi_def_cfa_register 7
  24:level_sensor.c ****     // Variables in front of a variable is casting 
  25:level_sensor.c ****     // uart_chars may be a different variable type, make sure to cast it as a char
  26:level_sensor.c ****   return (char*)uart_chars;
  97              		.loc 1 26 0
  98 0004 024B     		ldr	r3, .L3
  27:level_sensor.c **** }
  99              		.loc 1 27 0
 100 0006 1846     		mov	r0, r3
 101 0008 BD46     		mov	sp, r7
 102              		.cfi_def_cfa_register 13
 103              		@ sp needed
 104 000a 80BC     		pop	{r7}
 105              		.cfi_restore 7
 106              		.cfi_def_cfa_offset 0
 107 000c 7047     		bx	lr
 108              	.L4:
 109 000e 00BF     		.align	2
 110              	.L3:
 111 0010 00000000 		.word	uart_chars
 112              		.cfi_endproc
 113              	.LFE64:
 114              		.size	uart_string, .-uart_string
 115              		.section	.text.uart_len,"ax",%progbits
 116              		.align	2
 117              		.global	uart_len
 118              		.thumb
 119              		.thumb_func
 120              		.type	uart_len, %function
 121              	uart_len:
 122              	.LFB65:
  28:level_sensor.c **** 
  29:level_sensor.c **** // Return the number of characters of the level sensor reading
  30:level_sensor.c **** uint8_t uart_len(void) {
 123              		.loc 1 30 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 1, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128 0000 80B4     		push	{r7}
 129              		.cfi_def_cfa_offset 4
 130              		.cfi_offset 7, -4
 131 0002 00AF     		add	r7, sp, #0
 132              		.cfi_def_cfa_register 7
  31:level_sensor.c ****   return num_chars;
 133              		.loc 1 31 0
 134 0004 024B     		ldr	r3, .L7
 135 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  32:level_sensor.c **** }
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 4


 136              		.loc 1 32 0
 137 0008 1846     		mov	r0, r3
 138 000a BD46     		mov	sp, r7
 139              		.cfi_def_cfa_register 13
 140              		@ sp needed
 141 000c 80BC     		pop	{r7}
 142              		.cfi_restore 7
 143              		.cfi_def_cfa_offset 0
 144 000e 7047     		bx	lr
 145              	.L8:
 146              		.align	2
 147              	.L7:
 148 0010 01010000 		.word	num_chars
 149              		.cfi_endproc
 150              	.LFE65:
 151              		.size	uart_len, .-uart_len
 152              		.section	.text.uart_clear,"ax",%progbits
 153              		.align	2
 154              		.global	uart_clear
 155              		.thumb
 156              		.thumb_func
 157              		.type	uart_clear, %function
 158              	uart_clear:
 159              	.LFB66:
  33:level_sensor.c **** 
  34:level_sensor.c **** // Clears the sensor data 
  35:level_sensor.c **** void uart_clear(void) {
 160              		.loc 1 35 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 1, uses_anonymous_args = 0
 164 0000 80B5     		push	{r7, lr}
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 7, -8
 167              		.cfi_offset 14, -4
 168 0002 00AF     		add	r7, sp, #0
 169              		.cfi_def_cfa_register 7
  36:level_sensor.c ****   // UART_ClearRxBuffer(): Clears the receiver memory buffer and hardware RX FIFO of all received d
  37:level_sensor.c ****   Level_Sensor_UART_ClearRxBuffer();
 170              		.loc 1 37 0
 171 0004 FFF7FEFF 		bl	Level_Sensor_UART_ClearRxBuffer
  38:level_sensor.c ****   // void *memset(void *str, int c, size_t n) where str is a pointer to the block of memory to fill
  39:level_sensor.c ****   // The value is passed as an int, but the function fills the block of memory using the unsigned c
  40:level_sensor.c ****   // n is the number of bytes to be set to the value.
  41:level_sensor.c ****   memset((void*)uart_chars, 0, 256);
 172              		.loc 1 41 0
 173 0008 4FF48072 		mov	r2, #256
 174 000c 0021     		movs	r1, #0
 175 000e 0448     		ldr	r0, .L10
 176 0010 FFF7FEFF 		bl	memset
  42:level_sensor.c ****   num_chars = 0;
 177              		.loc 1 42 0
 178 0014 034B     		ldr	r3, .L10+4
 179 0016 0022     		movs	r2, #0
 180 0018 1A70     		strb	r2, [r3]
  43:level_sensor.c **** }
 181              		.loc 1 43 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 5


 182 001a 00BF     		nop
 183 001c 80BD     		pop	{r7, pc}
 184              	.L11:
 185 001e 00BF     		.align	2
 186              	.L10:
 187 0020 00000000 		.word	uart_chars
 188 0024 01010000 		.word	num_chars
 189              		.cfi_endproc
 190              	.LFE66:
 191              		.size	uart_clear, .-uart_clear
 192              		.section	.text.Level_Sensor_ISR,"ax",%progbits
 193              		.align	2
 194              		.global	Level_Sensor_ISR
 195              		.thumb
 196              		.thumb_func
 197              		.type	Level_Sensor_ISR, %function
 198              	Level_Sensor_ISR:
 199              	.LFB67:
  44:level_sensor.c **** 
  45:level_sensor.c **** // ISR: Interrupt Service Routine
  46:level_sensor.c **** CY_ISR(Level_Sensor_ISR) {
 200              		.loc 1 46 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204 0000 80B5     		push	{r7, lr}
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 7, -8
 207              		.cfi_offset 14, -4
 208 0002 82B0     		sub	sp, sp, #8
 209              		.cfi_def_cfa_offset 16
 210 0004 00AF     		add	r7, sp, #0
 211              		.cfi_def_cfa_register 7
  47:level_sensor.c ****     /* Store received char in uart_chars.
  48:level_sensor.c ****     Returns the last received byte of data. Level_Sensor_UART_GetChar() is designed for ASCII chara
  49:level_sensor.c ****     1 to 255 are values for valid characters and 0 indicats an error occurred or no data is present
  50:level_sensor.c ****     char rx_char = Level_Sensor_UART_GetChar();
 212              		.loc 1 50 0
 213 0006 FFF7FEFF 		bl	Level_Sensor_UART_GetChar
 214 000a 0346     		mov	r3, r0
 215 000c FB71     		strb	r3, [r7, #7]
  51:level_sensor.c ****     // UART_GetChar() returns data, then set the entire uart_chars array to rx_char.
  52:level_sensor.c ****     if (rx_char) uart_chars[num_chars++] = rx_char;
 216              		.loc 1 52 0
 217 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 218 0010 002B     		cmp	r3, #0
 219 0012 09D0     		beq	.L13
 220              		.loc 1 52 0 is_stmt 0 discriminator 1
 221 0014 114B     		ldr	r3, .L16
 222 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 223 0018 5A1C     		adds	r2, r3, #1
 224 001a D1B2     		uxtb	r1, r2
 225 001c 0F4A     		ldr	r2, .L16
 226 001e 1170     		strb	r1, [r2]
 227 0020 1946     		mov	r1, r3
 228 0022 0F4A     		ldr	r2, .L16+4
 229 0024 FB79     		ldrb	r3, [r7, #7]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 6


 230 0026 5354     		strb	r3, [r2, r1]
 231              	.L13:
  53:level_sensor.c **** 
  54:level_sensor.c ****     /* Check pattern at end of line */
  55:level_sensor.c ****     if (rx_char == '\r') {
 232              		.loc 1 55 0 is_stmt 1
 233 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 234 002a 0D2B     		cmp	r3, #13
 235 002c 11D1     		bne	.L15
  56:level_sensor.c ****         // strstr(): char *strstr(const char *haystack, const char *needle). haystack - main C stri
  57:level_sensor.c ****         match = strstr(line, pattern);
 236              		.loc 1 57 0
 237 002e 0D4B     		ldr	r3, .L16+8
 238 0030 1A68     		ldr	r2, [r3]
 239 0032 0D4B     		ldr	r3, .L16+12
 240 0034 1B68     		ldr	r3, [r3]
 241 0036 1946     		mov	r1, r3
 242 0038 1046     		mov	r0, r2
 243 003a FFF7FEFF 		bl	strstr
 244 003e 0246     		mov	r2, r0
 245 0040 0A4B     		ldr	r3, .L16+16
 246 0042 1A60     		str	r2, [r3]
  58:level_sensor.c ****         line = uart_chars + num_chars;
 247              		.loc 1 58 0
 248 0044 054B     		ldr	r3, .L16
 249 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 250 0048 1A46     		mov	r2, r3
 251 004a 054B     		ldr	r3, .L16+4
 252 004c 1344     		add	r3, r3, r2
 253 004e 054A     		ldr	r2, .L16+8
 254 0050 1360     		str	r3, [r2]
 255              	.L15:
  59:level_sensor.c ****     }
  60:level_sensor.c **** }
 256              		.loc 1 60 0
 257 0052 00BF     		nop
 258 0054 0837     		adds	r7, r7, #8
 259              		.cfi_def_cfa_offset 8
 260 0056 BD46     		mov	sp, r7
 261              		.cfi_def_cfa_register 13
 262              		@ sp needed
 263 0058 80BD     		pop	{r7, pc}
 264              	.L17:
 265 005a 00BF     		.align	2
 266              	.L16:
 267 005c 01010000 		.word	num_chars
 268 0060 00000000 		.word	uart_chars
 269 0064 00000000 		.word	line
 270 0068 08010000 		.word	pattern
 271 006c 04010000 		.word	match
 272              		.cfi_endproc
 273              	.LFE67:
 274              		.size	Level_Sensor_ISR, .-Level_Sensor_ISR
 275              		.section	.text.Level_Sensor_Update,"ax",%progbits
 276              		.align	2
 277              		.global	Level_Sensor_Update
 278              		.thumb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 7


 279              		.thumb_func
 280              		.type	Level_Sensor_Update, %function
 281              	Level_Sensor_Update:
 282              	.LFB68:
  61:level_sensor.c **** 
  62:level_sensor.c **** void Level_Sensor_Update(char * message){
 283              		.loc 1 62 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 8
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287 0000 80B5     		push	{r7, lr}
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 7, -8
 290              		.cfi_offset 14, -4
 291 0002 82B0     		sub	sp, sp, #8
 292              		.cfi_def_cfa_offset 16
 293 0004 00AF     		add	r7, sp, #0
 294              		.cfi_def_cfa_register 7
 295 0006 7860     		str	r0, [r7, #4]
  63:level_sensor.c ****     strcpy(level_sensor_inbox, message);
 296              		.loc 1 63 0
 297 0008 7968     		ldr	r1, [r7, #4]
 298 000a 0348     		ldr	r0, .L19
 299 000c FFF7FEFF 		bl	strcpy
  64:level_sensor.c **** }
 300              		.loc 1 64 0
 301 0010 00BF     		nop
 302 0012 0837     		adds	r7, r7, #8
 303              		.cfi_def_cfa_offset 8
 304 0014 BD46     		mov	sp, r7
 305              		.cfi_def_cfa_register 13
 306              		@ sp needed
 307 0016 80BD     		pop	{r7, pc}
 308              	.L20:
 309              		.align	2
 310              	.L19:
 311 0018 00000000 		.word	level_sensor_inbox
 312              		.cfi_endproc
 313              	.LFE68:
 314              		.size	Level_Sensor_Update, .-Level_Sensor_Update
 315              		.section	.rodata
 316              		.align	2
 317              	.LC0:
 318 0000 4F464600 		.ascii	"OFF\000"
 319              		.align	2
 320              	.LC1:
 321 0004 4F4E00   		.ascii	"ON\000"
 322 0007 00       		.align	2
 323              	.LC2:
 324 0008 256C6400 		.ascii	"%ld\000"
 325              		.align	2
 326              	.LC3:
 327 000c 256400   		.ascii	"%d\000"
 328 000f 00       		.align	2
 329              	.LC4:
 330 0010 6D617862 		.ascii	"maxbotix_depth=%s\000"
 330      6F746978 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 8


 330      5F646570 
 330      74683D25 
 330      7300
 331 0022 0000     		.align	2
 332              	.LC5:
 333 0024 6D617862 		.ascii	"maxbotix_depth\000"
 333      6F746978 
 333      5F646570 
 333      746800
 334 0033 00       		.align	2
 335              	.LC6:
 336 0034 612B00   		.ascii	"a+\000"
 337 0037 00       		.align	2
 338              	.LC7:
 339 0038 64617461 		.ascii	"data.txt\000"
 339      2E747874 
 339      00
 340 0041 000000   		.align	2
 341              	.LC8:
 342 0044 206D6178 		.ascii	" maxbotix_depth: \000"
 342      626F7469 
 342      785F6465 
 342      7074683A 
 342      2000
 343 0056 0000     		.align	2
 344              	.LC9:
 345 0058 2000     		.ascii	" \000"
 346 005a 0000     		.align	2
 347              	.LC10:
 348 005c 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 348      64206E6F 
 348      74206765 
 348      74207661 
 348      6C696420 
 349              		.align	2
 350              	.LC11:
 351 0088 2D3100   		.ascii	"-1\000"
 352              		.section	.text.level_sensor,"ax",%progbits
 353              		.align	2
 354              		.global	level_sensor
 355              		.thumb
 356              		.thumb_func
 357              		.type	level_sensor, %function
 358              	level_sensor:
 359              	.LFB69:
  65:level_sensor.c **** 
  66:level_sensor.c **** uint8 level_sensor(){
 360              		.loc 1 66 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 88
 363              		@ frame_needed = 1, uses_anonymous_args = 0
 364 0000 80B5     		push	{r7, lr}
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 7, -8
 367              		.cfi_offset 14, -4
 368 0002 96B0     		sub	sp, sp, #88
 369              		.cfi_def_cfa_offset 96
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 9


 370 0004 00AF     		add	r7, sp, #0
 371              		.cfi_def_cfa_register 7
  67:level_sensor.c ****     char * compare_location;
  68:level_sensor.c ****     
  69:level_sensor.c ****     compare_location = strstr(level_sensor_inbox,"OFF");        
 372              		.loc 1 69 0
 373 0006 3149     		ldr	r1, .L27
 374 0008 3148     		ldr	r0, .L27+4
 375 000a FFF7FEFF 		bl	strstr
 376 000e 7865     		str	r0, [r7, #84]
  70:level_sensor.c ****     if(compare_location!=NULL){
 377              		.loc 1 70 0
 378 0010 7B6D     		ldr	r3, [r7, #84]
 379 0012 002B     		cmp	r3, #0
 380 0014 01D0     		beq	.L22
  71:level_sensor.c ****         return 0; // this app is disabled, don't do anything
 381              		.loc 1 71 0
 382 0016 0023     		movs	r3, #0
 383 0018 53E0     		b	.L23
 384              	.L22:
  72:level_sensor.c ****     }
  73:level_sensor.c ****     
  74:level_sensor.c **** 
  75:level_sensor.c ****     compare_location = strstr(level_sensor_inbox,"ON");        
 385              		.loc 1 75 0
 386 001a 2E49     		ldr	r1, .L27+8
 387 001c 2C48     		ldr	r0, .L27+4
 388 001e FFF7FEFF 		bl	strstr
 389 0022 7865     		str	r0, [r7, #84]
  76:level_sensor.c ****     if(compare_location!=NULL){
 390              		.loc 1 76 0
 391 0024 7B6D     		ldr	r3, [r7, #84]
 392 0026 002B     		cmp	r3, #0
 393 0028 4AD0     		beq	.L24
 394              	.LBB2:
  77:level_sensor.c **** 
  78:level_sensor.c ****         // below is copied and adapted from makeMeasurements in modem.c 
  79:level_sensor.c ****         // (duplicated so that normal depth and GI nodes still work)
  80:level_sensor.c ****         
  81:level_sensor.c ****         // Get clock time and save to timeStamp
  82:level_sensor.c ****         long timeStamp = getTimeStamp();
 395              		.loc 1 82 0
 396 002a FFF7FEFF 		bl	getTimeStamp
 397 002e 3865     		str	r0, [r7, #80]
  83:level_sensor.c ****         char c_timeStamp[32];
  84:level_sensor.c ****         snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 398              		.loc 1 84 0
 399 0030 3846     		mov	r0, r7
 400 0032 3B6D     		ldr	r3, [r7, #80]
 401 0034 284A     		ldr	r2, .L27+12
 402 0036 2021     		movs	r1, #32
 403 0038 FFF7FEFF 		bl	snprintf
  85:level_sensor.c ****         
  86:level_sensor.c ****         // Holds string for value that will be written 
  87:level_sensor.c ****         char value[DATA_MAX_KEY_LENGTH];
  88:level_sensor.c ****         
  89:level_sensor.c ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 10


  90:level_sensor.c ****         level_sensor_t m_level_sensor;
  91:level_sensor.c ****         
  92:level_sensor.c ****         // Take level sensor readings and save them to m_level_sensor
  93:level_sensor.c ****         m_level_sensor = level_sensor_take_reading();
 404              		.loc 1 93 0
 405 003c 07F12003 		add	r3, r7, #32
 406 0040 1846     		mov	r0, r3
 407 0042 FFF7FEFF 		bl	level_sensor_take_reading
  94:level_sensor.c **** 
  95:level_sensor.c ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
  96:level_sensor.c ****         if(m_level_sensor.num_valid_readings > 0){
 408              		.loc 1 96 0
 409 0046 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 410 004a 002B     		cmp	r3, #0
 411 004c 2DD0     		beq	.L25
  97:level_sensor.c ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 412              		.loc 1 97 0
 413 004e B7F93630 		ldrsh	r3, [r7, #54]
 414 0052 07F13C00 		add	r0, r7, #60
 415 0056 214A     		ldr	r2, .L27+16
 416 0058 1421     		movs	r1, #20
 417 005a FFF7FEFF 		bl	snprintf
  98:level_sensor.c ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 418              		.loc 1 98 0
 419 005e 07F13C03 		add	r3, r7, #60
 420 0062 1A46     		mov	r2, r3
 421 0064 1E49     		ldr	r1, .L27+20
 422 0066 0020     		movs	r0, #0
 423 0068 FFF7FEFF 		bl	printNotif
  99:level_sensor.c ****             pushData("maxbotix_depth",value,timeStamp);
 424              		.loc 1 99 0
 425 006c 07F13C03 		add	r3, r7, #60
 426 0070 3A6D     		ldr	r2, [r7, #80]
 427 0072 1946     		mov	r1, r3
 428 0074 1B48     		ldr	r0, .L27+24
 429 0076 FFF7FEFF 		bl	pushData
 100:level_sensor.c ****             
 101:level_sensor.c ****             // Print measurement to SD card to file called data.txt
 102:level_sensor.c ****             SD_write("data.txt", "a+", c_timeStamp);
 430              		.loc 1 102 0
 431 007a 3B46     		mov	r3, r7
 432 007c 1A46     		mov	r2, r3
 433 007e 1A49     		ldr	r1, .L27+28
 434 0080 1A48     		ldr	r0, .L27+32
 435 0082 FFF7FEFF 		bl	SD_write
 103:level_sensor.c ****             SD_write("data.txt", "a+", " maxbotix_depth: ");
 436              		.loc 1 103 0
 437 0086 1A4A     		ldr	r2, .L27+36
 438 0088 1749     		ldr	r1, .L27+28
 439 008a 1848     		ldr	r0, .L27+32
 440 008c FFF7FEFF 		bl	SD_write
 104:level_sensor.c ****             SD_write("data.txt", "a+", value);
 441              		.loc 1 104 0
 442 0090 07F13C03 		add	r3, r7, #60
 443 0094 1A46     		mov	r2, r3
 444 0096 1449     		ldr	r1, .L27+28
 445 0098 1448     		ldr	r0, .L27+32
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 11


 446 009a FFF7FEFF 		bl	SD_write
 105:level_sensor.c ****             SD_write("data.txt", "a+", " ");
 447              		.loc 1 105 0
 448 009e 154A     		ldr	r2, .L27+40
 449 00a0 1149     		ldr	r1, .L27+28
 450 00a2 1248     		ldr	r0, .L27+32
 451 00a4 FFF7FEFF 		bl	SD_write
 452 00a8 08E0     		b	.L26
 453              	.L25:
 106:level_sensor.c ****         }else{
 107:level_sensor.c ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 454              		.loc 1 107 0
 455 00aa 1349     		ldr	r1, .L27+44
 456 00ac 0220     		movs	r0, #2
 457 00ae FFF7FEFF 		bl	printNotif
 108:level_sensor.c ****             pushData("maxbotix_depth","-1",timeStamp); // error code, never get this from a sensor
 458              		.loc 1 108 0
 459 00b2 3A6D     		ldr	r2, [r7, #80]
 460 00b4 1149     		ldr	r1, .L27+48
 461 00b6 0B48     		ldr	r0, .L27+24
 462 00b8 FFF7FEFF 		bl	pushData
 463              	.L26:
 109:level_sensor.c ****         }
 110:level_sensor.c ****         
 111:level_sensor.c **** 
 112:level_sensor.c ****         return 0;
 464              		.loc 1 112 0
 465 00bc 0023     		movs	r3, #0
 466 00be 00E0     		b	.L23
 467              	.L24:
 468              	.LBE2:
 113:level_sensor.c ****     }
 114:level_sensor.c ****     
 115:level_sensor.c ****     return 0; // i think this needs to be rewritten to be more like a light switch
 469              		.loc 1 115 0
 470 00c0 0023     		movs	r3, #0
 471              	.L23:
 116:level_sensor.c ****     // i.e. it stays on until you turn it off.
 117:level_sensor.c **** }
 472              		.loc 1 117 0 discriminator 1
 473 00c2 1846     		mov	r0, r3
 474 00c4 5837     		adds	r7, r7, #88
 475              		.cfi_def_cfa_offset 8
 476 00c6 BD46     		mov	sp, r7
 477              		.cfi_def_cfa_register 13
 478              		@ sp needed
 479 00c8 80BD     		pop	{r7, pc}
 480              	.L28:
 481 00ca 00BF     		.align	2
 482              	.L27:
 483 00cc 00000000 		.word	.LC0
 484 00d0 00000000 		.word	level_sensor_inbox
 485 00d4 04000000 		.word	.LC1
 486 00d8 08000000 		.word	.LC2
 487 00dc 0C000000 		.word	.LC3
 488 00e0 10000000 		.word	.LC4
 489 00e4 24000000 		.word	.LC5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 12


 490 00e8 34000000 		.word	.LC6
 491 00ec 38000000 		.word	.LC7
 492 00f0 44000000 		.word	.LC8
 493 00f4 58000000 		.word	.LC9
 494 00f8 5C000000 		.word	.LC10
 495 00fc 88000000 		.word	.LC11
 496              		.cfi_endproc
 497              	.LFE69:
 498              		.size	level_sensor, .-level_sensor
 499              		.section	.rodata
 500 008b 00       		.align	2
 501              	.LC12:
 502 008c 5200     		.ascii	"R\000"
 503              		.section	.text.level_sensor_take_reading,"ax",%progbits
 504              		.align	2
 505              		.global	level_sensor_take_reading
 506              		.thumb
 507              		.thumb_func
 508              		.type	level_sensor_take_reading, %function
 509              	level_sensor_take_reading:
 510              	.LFB70:
 118:level_sensor.c **** 
 119:level_sensor.c **** // takes level sensor measurements and calculates average level sensor reading
 120:level_sensor.c **** level_sensor_t level_sensor_take_reading(){
 511              		.loc 1 120 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 40
 514              		@ frame_needed = 1, uses_anonymous_args = 0
 515 0000 B0B5     		push	{r4, r5, r7, lr}
 516              		.cfi_def_cfa_offset 16
 517              		.cfi_offset 4, -16
 518              		.cfi_offset 5, -12
 519              		.cfi_offset 7, -8
 520              		.cfi_offset 14, -4
 521 0002 8AB0     		sub	sp, sp, #40
 522              		.cfi_def_cfa_offset 56
 523 0004 00AF     		add	r7, sp, #0
 524              		.cfi_def_cfa_register 7
 525 0006 7860     		str	r0, [r7, #4]
 121:level_sensor.c ****     
 122:level_sensor.c ****     // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data type t
 123:level_sensor.c ****     level_sensor_t level_sensor_output;
 124:level_sensor.c ****     level_sensor_output.num_invalid_readings = 0;
 526              		.loc 1 124 0
 527 0008 0023     		movs	r3, #0
 528 000a 87F82130 		strb	r3, [r7, #33]
 125:level_sensor.c ****     level_sensor_output.num_valid_readings = 0;
 529              		.loc 1 125 0
 530 000e 0023     		movs	r3, #0
 531 0010 87F82030 		strb	r3, [r7, #32]
 126:level_sensor.c ****     
 127:level_sensor.c ****     uart_clear();
 532              		.loc 1 127 0
 533 0014 FFF7FEFF 		bl	uart_clear
 128:level_sensor.c ****     
 129:level_sensor.c ****     // Start sensor power, uart, and isr
 130:level_sensor.c ****     Level_Sensor_Power_Write(ON);   // Pulls Level Sensor power pin high (turns it on).
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 13


 534              		.loc 1 130 0
 535 0018 0120     		movs	r0, #1
 536 001a FFF7FEFF 		bl	Level_Sensor_Power_Write
 131:level_sensor.c ****     CyDelay(200u); // Sensor bootup sequence ~200ms -- senosor will spit out ID info, but we don't 
 537              		.loc 1 131 0
 538 001e C820     		movs	r0, #200
 539 0020 FFF7FEFF 		bl	CyDelay
 132:level_sensor.c ****     Level_Sensor_RX_SetDriveMode(PIN_DM_DIG_HIZ); // RX_SetDriveMode(): Sets the drive mode for eac
 540              		.loc 1 132 0
 541 0024 0220     		movs	r0, #2
 542 0026 FFF7FEFF 		bl	Level_Sensor_RX_SetDriveMode
 133:level_sensor.c ****     Level_Sensor_UART_Start(); // Level_Sensor_UART_Start() sets the initVar variable, calls the Le
 543              		.loc 1 133 0
 544 002a FFF7FEFF 		bl	Level_Sensor_UART_Start
 134:level_sensor.c ****     Level_Sensor_ISR_StartEx(Level_Sensor_ISR); // Sets up the interrupt and enables it.
 545              		.loc 1 134 0
 546 002e 3848     		ldr	r0, .L38
 547 0030 FFF7FEFF 		bl	Level_Sensor_ISR_StartEx
 135:level_sensor.c ****     
 136:level_sensor.c ****     // Wait to take  reading
 137:level_sensor.c ****     // Sensor will take ~200ms to send first reading, and 200ms for subsequent readings
 138:level_sensor.c ****     CyDelay(2000u); // Take a few seconds to get readings, 2 secs ~10 readings
 548              		.loc 1 138 0
 549 0034 4FF4FA60 		mov	r0, #2000
 550 0038 FFF7FEFF 		bl	CyDelay
 139:level_sensor.c ****     
 140:level_sensor.c ****     //stop all sensor processes
 141:level_sensor.c ****     Level_Sensor_UART_Stop(); // Disables the UART operation.
 551              		.loc 1 141 0
 552 003c FFF7FEFF 		bl	Level_Sensor_UART_Stop
 142:level_sensor.c ****     Level_Sensor_ISR_Stop(); // Disables and removes the interrupt.
 553              		.loc 1 142 0
 554 0040 FFF7FEFF 		bl	Level_Sensor_ISR_Stop
 143:level_sensor.c ****     Level_Sensor_Power_Write(OFF); // Pulls Level Sensor Power pin low (turns it off).
 555              		.loc 1 143 0
 556 0044 0020     		movs	r0, #0
 557 0046 FFF7FEFF 		bl	Level_Sensor_Power_Write
 144:level_sensor.c ****     // RX_SetDriveMode(): Sets the drive mode for each of the Pins component's pins.
 145:level_sensor.c ****     // String Drive Mode means it will only be outputting a voltage (don't send any data) when pull
 146:level_sensor.c ****     // UART in PSOC starts high. Then pulls low to get data. When turn sensor off, still using powe
 147:level_sensor.c ****     // So turning it to Strong Drive has it stay low.
 148:level_sensor.c ****     Level_Sensor_RX_SetDriveMode(PIN_DM_STRONG);
 558              		.loc 1 148 0
 559 004a 0C20     		movs	r0, #12
 560 004c FFF7FEFF 		bl	Level_Sensor_RX_SetDriveMode
 149:level_sensor.c ****     // Stops writing the value to the physical port.
 150:level_sensor.c ****     // Just because turn power of sensor off, pin could still be high and getting power. This ensur
 151:level_sensor.c ****     Level_Sensor_RX_Write(OFF);
 561              		.loc 1 151 0
 562 0050 0020     		movs	r0, #0
 563 0052 FFF7FEFF 		bl	Level_Sensor_RX_Write
 152:level_sensor.c **** 
 153:level_sensor.c ****     /* Return parsed reading */
 154:level_sensor.c ****     // Parse string and put all values into array
 155:level_sensor.c ****     // The sensor will power on and do a few things, after which the readigs will follow with the s
 156:level_sensor.c ****     // Readings are stashed between "R" and "\000"
 157:level_sensor.c ****     char *token;
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 14


 158:level_sensor.c ****     // strtok(): breaks uart_chars into smaller string when sees "R".
 159:level_sensor.c ****     token = strtok(uart_chars, "R");
 564              		.loc 1 159 0
 565 0056 2F49     		ldr	r1, .L38+4
 566 0058 2F48     		ldr	r0, .L38+8
 567 005a FFF7FEFF 		bl	strtok
 568 005e 7862     		str	r0, [r7, #36]
 160:level_sensor.c ****     /* walk through other tokens */
 161:level_sensor.c ****    while( token != NULL ) 
 569              		.loc 1 161 0
 570 0060 33E0     		b	.L30
 571              	.L35:
 162:level_sensor.c ****    {
 163:level_sensor.c ****       if(strstr(token, "\r") != NULL){ // Full reading is delimieted by "R" + reading + "\r"
 572              		.loc 1 163 0
 573 0062 0D21     		movs	r1, #13
 574 0064 786A     		ldr	r0, [r7, #36]
 575 0066 FFF7FEFF 		bl	strchr
 576 006a 0346     		mov	r3, r0
 577 006c 002B     		cmp	r3, #0
 578 006e 27D0     		beq	.L31
 579              	.LBB3:
 164:level_sensor.c ****         // int atoi(const char *str) converts the string argument str to an integer (type int).
 165:level_sensor.c ****         uint16 reading = atoi(token);
 580              		.loc 1 165 0
 581 0070 786A     		ldr	r0, [r7, #36]
 582 0072 FFF7FEFF 		bl	atoi
 583 0076 0346     		mov	r3, r0
 584 0078 7B84     		strh	r3, [r7, #34]	@ movhi
 166:level_sensor.c ****         if(reading != 0){
 585              		.loc 1 166 0
 586 007a 7B8C     		ldrh	r3, [r7, #34]
 587 007c 002B     		cmp	r3, #0
 588 007e 1FD0     		beq	.L31
 167:level_sensor.c ****             if(reading != READING_INVALID){ // Invald readings by maxbotix
 589              		.loc 1 167 0
 590 0080 7B8C     		ldrh	r3, [r7, #34]
 591 0082 42F20F72 		movw	r2, #9999
 592 0086 9342     		cmp	r3, r2
 593 0088 14D0     		beq	.L32
 168:level_sensor.c ****                 // Set the level readings array of the length of number of valid readings equal to 
 169:level_sensor.c ****                 level_sensor_output.all_level_readings[level_sensor_output.num_valid_readings] = re
 594              		.loc 1 169 0
 595 008a 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 596 008e B7F92220 		ldrsh	r2, [r7, #34]
 597 0092 5B00     		lsls	r3, r3, #1
 598 0094 07F12801 		add	r1, r7, #40
 599 0098 0B44     		add	r3, r3, r1
 600 009a 23F8202C 		strh	r2, [r3, #-32]	@ movhi
 170:level_sensor.c ****                 // If number of valid readings less than 11 total readings, increase the count of v
 171:level_sensor.c ****                 if(level_sensor_output.num_valid_readings < N_READINGS){
 601              		.loc 1 171 0
 602 009e 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 603 00a2 0A2B     		cmp	r3, #10
 604 00a4 15D8     		bhi	.L37
 172:level_sensor.c ****                     level_sensor_output.num_valid_readings++;
 605              		.loc 1 172 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 15


 606 00a6 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 607 00aa 0133     		adds	r3, r3, #1
 608 00ac DBB2     		uxtb	r3, r3
 609 00ae 87F82030 		strb	r3, [r7, #32]
 610 00b2 05E0     		b	.L31
 611              	.L32:
 173:level_sensor.c ****                 }else{
 174:level_sensor.c ****                  break;   
 175:level_sensor.c ****                 }
 176:level_sensor.c ****                 
 177:level_sensor.c ****             }else{
 178:level_sensor.c ****                 // Otherwise increase the count of invalid readings
 179:level_sensor.c ****                 level_sensor_output.num_invalid_readings++;
 612              		.loc 1 179 0
 613 00b4 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
 614 00b8 0133     		adds	r3, r3, #1
 615 00ba DBB2     		uxtb	r3, r3
 616 00bc 87F82130 		strb	r3, [r7, #33]
 617              	.L31:
 618              	.LBE3:
 180:level_sensor.c ****             }
 181:level_sensor.c ****         }
 182:level_sensor.c ****       }
 183:level_sensor.c ****       token = strtok(NULL, "R"); // This "NULL" says to continue where you left off last time.
 619              		.loc 1 183 0
 620 00c0 1449     		ldr	r1, .L38+4
 621 00c2 0020     		movs	r0, #0
 622 00c4 FFF7FEFF 		bl	strtok
 623 00c8 7862     		str	r0, [r7, #36]
 624              	.L30:
 161:level_sensor.c ****    {
 625              		.loc 1 161 0
 626 00ca 7B6A     		ldr	r3, [r7, #36]
 627 00cc 002B     		cmp	r3, #0
 628 00ce C8D1     		bne	.L35
 629 00d0 00E0     		b	.L34
 630              	.L37:
 631              	.LBB4:
 174:level_sensor.c ****                 }
 632              		.loc 1 174 0
 633 00d2 00BF     		nop
 634              	.L34:
 635              	.LBE4:
 184:level_sensor.c ****    }
 185:level_sensor.c ****     // Calculate median level reading
 186:level_sensor.c ****     level_sensor_output.level_reading = find_median(level_sensor_output.all_level_readings,level_se
 636              		.loc 1 186 0
 637 00d4 97F82020 		ldrb	r2, [r7, #32]	@ zero_extendqisi2
 638 00d8 07F10803 		add	r3, r7, #8
 639 00dc 1146     		mov	r1, r2
 640 00de 1846     		mov	r0, r3
 641 00e0 FFF7FEFF 		bl	find_median
 642 00e4 0346     		mov	r3, r0
 643 00e6 1BB2     		sxth	r3, r3
 644 00e8 FB83     		strh	r3, [r7, #30]	@ movhi
 187:level_sensor.c ****     
 188:level_sensor.c ****     return level_sensor_output;
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 16


 645              		.loc 1 188 0
 646 00ea 7B68     		ldr	r3, [r7, #4]
 647 00ec 1D46     		mov	r5, r3
 648 00ee 07F10804 		add	r4, r7, #8
 649 00f2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 650 00f4 2860     		str	r0, [r5]	@ unaligned
 651 00f6 6960     		str	r1, [r5, #4]	@ unaligned
 652 00f8 AA60     		str	r2, [r5, #8]	@ unaligned
 653 00fa EB60     		str	r3, [r5, #12]	@ unaligned
 654 00fc 03CC     		ldmia	r4!, {r0, r1}
 655 00fe 2861     		str	r0, [r5, #16]	@ unaligned
 656 0100 6961     		str	r1, [r5, #20]	@ unaligned
 657 0102 2388     		ldrh	r3, [r4]	@ unaligned
 658 0104 2B83     		strh	r3, [r5, #24]	@ unaligned
 189:level_sensor.c **** }
 659              		.loc 1 189 0
 660 0106 7868     		ldr	r0, [r7, #4]
 661 0108 2837     		adds	r7, r7, #40
 662              		.cfi_def_cfa_offset 16
 663 010a BD46     		mov	sp, r7
 664              		.cfi_def_cfa_register 13
 665              		@ sp needed
 666 010c B0BD     		pop	{r4, r5, r7, pc}
 667              	.L39:
 668 010e 00BF     		.align	2
 669              	.L38:
 670 0110 00000000 		.word	Level_Sensor_ISR
 671 0114 8C000000 		.word	.LC12
 672 0118 00000000 		.word	uart_chars
 673              		.cfi_endproc
 674              	.LFE70:
 675              		.size	level_sensor_take_reading, .-level_sensor_take_reading
 676              		.section	.rodata
 677 008e 0000     		.align	2
 678              	.LC13:
 679 0090 54455354 		.ascii	"TEST_LEVEL_SENSOR\000"
 679      5F4C4556 
 679      454C5F53 
 679      454E534F 
 679      5200
 680 00a2 0000     		.align	2
 681              	.LC14:
 682 00a4 6E57414E 		.ascii	"nWANTED=%d,nRECEIVED=%d,nVALID=%d,nMEDIAN=%d.\000"
 682      5445443D 
 682      25642C6E 
 682      52454345 
 682      49564544 
 683              		.section	.text.level_sensor_test,"ax",%progbits
 684              		.align	2
 685              		.global	level_sensor_test
 686              		.thumb
 687              		.thumb_func
 688              		.type	level_sensor_test, %function
 689              	level_sensor_test:
 690              	.LFB71:
 190:level_sensor.c **** 
 191:level_sensor.c **** // Level sensor test
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 17


 192:level_sensor.c **** test_t level_sensor_test(){
 691              		.loc 1 192 0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 424
 694              		@ frame_needed = 1, uses_anonymous_args = 0
 695 0000 B0B5     		push	{r4, r5, r7, lr}
 696              		.cfi_def_cfa_offset 16
 697              		.cfi_offset 4, -16
 698              		.cfi_offset 5, -12
 699              		.cfi_offset 7, -8
 700              		.cfi_offset 14, -4
 701 0002 EEB0     		sub	sp, sp, #440
 702              		.cfi_def_cfa_offset 456
 703 0004 04AF     		add	r7, sp, #16
 704              		.cfi_def_cfa 7, 440
 705 0006 3B1D     		adds	r3, r7, #4
 706 0008 1860     		str	r0, [r3]
 193:level_sensor.c ****     
 194:level_sensor.c ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
 195:level_sensor.c ****     test.status = 0; // set test status to zero
 707              		.loc 1 195 0
 708 000a 07F12403 		add	r3, r7, #36
 709 000e 0022     		movs	r2, #0
 710 0010 83F88020 		strb	r2, [r3, #128]
 196:level_sensor.c ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_LEVEL_SENSOR");
 711              		.loc 1 196 0
 712 0014 07F12403 		add	r3, r7, #36
 713 0018 2A4A     		ldr	r2, .L44
 714 001a 1C46     		mov	r4, r3
 715 001c 1546     		mov	r5, r2
 716 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 717 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 718 0022 2B68     		ldr	r3, [r5]
 719 0024 2380     		strh	r3, [r4]	@ movhi
 197:level_sensor.c **** 
 198:level_sensor.c ****     // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data type t
 199:level_sensor.c ****     level_sensor_t sensor = level_sensor_take_reading();
 720              		.loc 1 199 0
 721 0026 07F10803 		add	r3, r7, #8
 722 002a 1846     		mov	r0, r3
 723 002c FFF7FEFF 		bl	level_sensor_take_reading
 200:level_sensor.c ****     
 201:level_sensor.c ****     // print the max number of readings (11), the number of actual readings, the number of valid re
 202:level_sensor.c ****     snprintf(test.reason,sizeof(test.reason),"nWANTED=%d,nRECEIVED=%d,nVALID=%d,nMEDIAN=%d.",
 203:level_sensor.c ****         N_READINGS,
 204:level_sensor.c ****         sensor.num_valid_readings+sensor.num_invalid_readings,
 724              		.loc 1 204 0
 725 0030 07F10803 		add	r3, r7, #8
 726 0034 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 202:level_sensor.c ****         N_READINGS,
 727              		.loc 1 202 0
 728 0036 1A46     		mov	r2, r3
 729              		.loc 1 204 0
 730 0038 07F10803 		add	r3, r7, #8
 731 003c 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 202:level_sensor.c ****         N_READINGS,
 732              		.loc 1 202 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 18


 733 003e 1344     		add	r3, r3, r2
 205:level_sensor.c ****         sensor.num_valid_readings,
 734              		.loc 1 205 0
 735 0040 07F10802 		add	r2, r7, #8
 736 0044 127E     		ldrb	r2, [r2, #24]	@ zero_extendqisi2
 202:level_sensor.c ****         N_READINGS,
 737              		.loc 1 202 0
 738 0046 1146     		mov	r1, r2
 206:level_sensor.c ****         sensor.level_reading
 739              		.loc 1 206 0
 740 0048 07F10802 		add	r2, r7, #8
 741 004c B2F91620 		ldrsh	r2, [r2, #22]
 202:level_sensor.c ****         N_READINGS,
 742              		.loc 1 202 0
 743 0050 1446     		mov	r4, r2
 744 0052 07F12402 		add	r2, r7, #36
 745 0056 02F18100 		add	r0, r2, #129
 746 005a 0294     		str	r4, [sp, #8]
 747 005c 0191     		str	r1, [sp, #4]
 748 005e 0093     		str	r3, [sp]
 749 0060 0B23     		movs	r3, #11
 750 0062 194A     		ldr	r2, .L44+4
 751 0064 4FF48071 		mov	r1, #256
 752 0068 FFF7FEFF 		bl	snprintf
 207:level_sensor.c ****     );
 208:level_sensor.c ****    
 209:level_sensor.c ****     // if the number valid readings is the max number of readings (11), then the test passes with t
 210:level_sensor.c ****     if(sensor.num_valid_readings == N_READINGS){//pass
 753              		.loc 1 210 0
 754 006c 07F10803 		add	r3, r7, #8
 755 0070 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 756 0072 0B2B     		cmp	r3, #11
 757 0074 05D1     		bne	.L41
 211:level_sensor.c ****         test.status = 1;
 758              		.loc 1 211 0
 759 0076 07F12403 		add	r3, r7, #36
 760 007a 0122     		movs	r2, #1
 761 007c 83F88020 		strb	r2, [r3, #128]
 762 0080 0EE0     		b	.L42
 763              	.L41:
 212:level_sensor.c ****     // if the number of valid readings is greater than zero and less than the max number of reading
 213:level_sensor.c ****     }else if((sensor.num_valid_readings > 0) && (sensor.num_valid_readings < N_READINGS)){//pass
 764              		.loc 1 213 0
 765 0082 07F10803 		add	r3, r7, #8
 766 0086 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 767 0088 002B     		cmp	r3, #0
 768 008a 09D0     		beq	.L42
 769              		.loc 1 213 0 is_stmt 0 discriminator 1
 770 008c 07F10803 		add	r3, r7, #8
 771 0090 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 772 0092 0A2B     		cmp	r3, #10
 773 0094 04D8     		bhi	.L42
 214:level_sensor.c ****         test.status = 2; //not bad, since we got some OK readings
 774              		.loc 1 214 0 is_stmt 1
 775 0096 07F12403 		add	r3, r7, #36
 776 009a 0222     		movs	r2, #2
 777 009c 83F88020 		strb	r2, [r3, #128]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 19


 778              	.L42:
 215:level_sensor.c ****     }
 216:level_sensor.c ****         
 217:level_sensor.c ****     return test;
 779              		.loc 1 217 0
 780 00a0 3B1D     		adds	r3, r7, #4
 781 00a2 1A68     		ldr	r2, [r3]
 782 00a4 07F12403 		add	r3, r7, #36
 783 00a8 1046     		mov	r0, r2
 784 00aa 1946     		mov	r1, r3
 785 00ac 40F28113 		movw	r3, #385
 786 00b0 1A46     		mov	r2, r3
 787 00b2 FFF7FEFF 		bl	memcpy
 218:level_sensor.c **** }
 788              		.loc 1 218 0
 789 00b6 3B1D     		adds	r3, r7, #4
 790 00b8 1868     		ldr	r0, [r3]
 791 00ba 07F5D477 		add	r7, r7, #424
 792              		.cfi_def_cfa_offset 16
 793 00be BD46     		mov	sp, r7
 794              		.cfi_def_cfa_register 13
 795              		@ sp needed
 796 00c0 B0BD     		pop	{r4, r5, r7, pc}
 797              	.L45:
 798 00c2 00BF     		.align	2
 799              	.L44:
 800 00c4 90000000 		.word	.LC13
 801 00c8 A4000000 		.word	.LC14
 802              		.cfi_endproc
 803              	.LFE71:
 804              		.size	level_sensor_test, .-level_sensor_test
 805              		.global	__aeabi_i2d
 806              		.global	__aeabi_ddiv
 807              		.global	__aeabi_d2iz
 808              		.section	.text.find_median,"ax",%progbits
 809              		.align	2
 810              		.global	find_median
 811              		.thumb
 812              		.thumb_func
 813              		.type	find_median, %function
 814              	find_median:
 815              	.LFB72:
 219:level_sensor.c **** 
 220:level_sensor.c **** 
 221:level_sensor.c **** // function to calculate the median of the array, after array is sorted
 222:level_sensor.c **** uint16 find_median(int16 array[] , uint8 n)
 223:level_sensor.c **** {
 816              		.loc 1 223 0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 16
 819              		@ frame_needed = 1, uses_anonymous_args = 0
 820 0000 90B5     		push	{r4, r7, lr}
 821              		.cfi_def_cfa_offset 12
 822              		.cfi_offset 4, -12
 823              		.cfi_offset 7, -8
 824              		.cfi_offset 14, -4
 825 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 20


 826              		.cfi_def_cfa_offset 32
 827 0004 00AF     		add	r7, sp, #0
 828              		.cfi_def_cfa_register 7
 829 0006 7860     		str	r0, [r7, #4]
 830 0008 0B46     		mov	r3, r1
 831 000a FB70     		strb	r3, [r7, #3]
 224:level_sensor.c ****     int16 median=0;
 832              		.loc 1 224 0
 833 000c 0023     		movs	r3, #0
 834 000e FB81     		strh	r3, [r7, #14]	@ movhi
 225:level_sensor.c ****     sort(array,n);
 835              		.loc 1 225 0
 836 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 837 0012 1BB2     		sxth	r3, r3
 838 0014 1946     		mov	r1, r3
 839 0016 7868     		ldr	r0, [r7, #4]
 840 0018 FFF7FEFF 		bl	sort
 226:level_sensor.c ****     
 227:level_sensor.c ****     // if number of elements are even
 228:level_sensor.c ****     if(n%2 == 0)
 841              		.loc 1 228 0
 842 001c FB78     		ldrb	r3, [r7, #3]
 843 001e 03F00103 		and	r3, r3, #1
 844 0022 DBB2     		uxtb	r3, r3
 845 0024 002B     		cmp	r3, #0
 846 0026 25D1     		bne	.L47
 229:level_sensor.c ****         // median is the average of the  two middle sorted numbers
 230:level_sensor.c ****         median = (array[(n-1)/2] + array[n/2])/2.0;
 847              		.loc 1 230 0
 848 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 849 002a 013B     		subs	r3, r3, #1
 850 002c DA0F     		lsrs	r2, r3, #31
 851 002e 1344     		add	r3, r3, r2
 852 0030 5B10     		asrs	r3, r3, #1
 853 0032 5B00     		lsls	r3, r3, #1
 854 0034 7A68     		ldr	r2, [r7, #4]
 855 0036 1344     		add	r3, r3, r2
 856 0038 B3F90030 		ldrsh	r3, [r3]
 857 003c 1946     		mov	r1, r3
 858 003e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 859 0040 5B08     		lsrs	r3, r3, #1
 860 0042 DBB2     		uxtb	r3, r3
 861 0044 5B00     		lsls	r3, r3, #1
 862 0046 7A68     		ldr	r2, [r7, #4]
 863 0048 1344     		add	r3, r3, r2
 864 004a B3F90030 		ldrsh	r3, [r3]
 865 004e 0B44     		add	r3, r3, r1
 866 0050 1846     		mov	r0, r3
 867 0052 FFF7FEFF 		bl	__aeabi_i2d
 868 0056 4FF00002 		mov	r2, #0
 869 005a 4FF08043 		mov	r3, #1073741824
 870 005e FFF7FEFF 		bl	__aeabi_ddiv
 871 0062 0346     		mov	r3, r0
 872 0064 0C46     		mov	r4, r1
 873 0066 1846     		mov	r0, r3
 874 0068 2146     		mov	r1, r4
 875 006a FFF7FEFF 		bl	__aeabi_d2iz
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 21


 876 006e 0346     		mov	r3, r0
 877 0070 FB81     		strh	r3, [r7, #14]	@ movhi
 878 0072 07E0     		b	.L48
 879              	.L47:
 231:level_sensor.c ****     // if number of elements are odd
 232:level_sensor.c ****     else
 233:level_sensor.c ****         // median is the the middle sorted number 
 234:level_sensor.c ****         median = array[n/2];
 880              		.loc 1 234 0
 881 0074 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 882 0076 5B08     		lsrs	r3, r3, #1
 883 0078 DBB2     		uxtb	r3, r3
 884 007a 5B00     		lsls	r3, r3, #1
 885 007c 7A68     		ldr	r2, [r7, #4]
 886 007e 1344     		add	r3, r3, r2
 887 0080 1B88     		ldrh	r3, [r3]	@ movhi
 888 0082 FB81     		strh	r3, [r7, #14]	@ movhi
 889              	.L48:
 235:level_sensor.c ****     
 236:level_sensor.c ****     return median;
 890              		.loc 1 236 0
 891 0084 FB89     		ldrh	r3, [r7, #14]
 237:level_sensor.c **** }
 892              		.loc 1 237 0
 893 0086 1846     		mov	r0, r3
 894 0088 1437     		adds	r7, r7, #20
 895              		.cfi_def_cfa_offset 12
 896 008a BD46     		mov	sp, r7
 897              		.cfi_def_cfa_register 13
 898              		@ sp needed
 899 008c 90BD     		pop	{r4, r7, pc}
 900              		.cfi_endproc
 901              	.LFE72:
 902              		.size	find_median, .-find_median
 903              		.section	.text.sort,"ax",%progbits
 904              		.align	2
 905              		.global	sort
 906              		.thumb
 907              		.thumb_func
 908              		.type	sort, %function
 909              	sort:
 910              	.LFB73:
 238:level_sensor.c **** 
 239:level_sensor.c **** // function to sort the elements in the level readings array
 240:level_sensor.c **** void sort(int16 a[],int16 n) { 
 911              		.loc 1 240 0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 16
 914              		@ frame_needed = 1, uses_anonymous_args = 0
 915 0000 80B5     		push	{r7, lr}
 916              		.cfi_def_cfa_offset 8
 917              		.cfi_offset 7, -8
 918              		.cfi_offset 14, -4
 919 0002 84B0     		sub	sp, sp, #16
 920              		.cfi_def_cfa_offset 24
 921 0004 00AF     		add	r7, sp, #0
 922              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 22


 923 0006 7860     		str	r0, [r7, #4]
 924 0008 0B46     		mov	r3, r1
 925 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 241:level_sensor.c ****    int16 i,j;
 242:level_sensor.c **** 
 243:level_sensor.c ****    for(i = 0;i < n-1;i++) {
 926              		.loc 1 243 0
 927 000c 0023     		movs	r3, #0
 928 000e FB81     		strh	r3, [r7, #14]	@ movhi
 929 0010 37E0     		b	.L51
 930              	.L55:
 244:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
 931              		.loc 1 244 0
 932 0012 0023     		movs	r3, #0
 933 0014 BB81     		strh	r3, [r7, #12]	@ movhi
 934 0016 24E0     		b	.L52
 935              	.L54:
 245:level_sensor.c ****          if(a[j] > a[j+1])
 936              		.loc 1 245 0
 937 0018 B7F90C30 		ldrsh	r3, [r7, #12]
 938 001c 5B00     		lsls	r3, r3, #1
 939 001e 7A68     		ldr	r2, [r7, #4]
 940 0020 1344     		add	r3, r3, r2
 941 0022 B3F90020 		ldrsh	r2, [r3]
 942 0026 B7F90C30 		ldrsh	r3, [r7, #12]
 943 002a 0133     		adds	r3, r3, #1
 944 002c 5B00     		lsls	r3, r3, #1
 945 002e 7968     		ldr	r1, [r7, #4]
 946 0030 0B44     		add	r3, r3, r1
 947 0032 B3F90030 		ldrsh	r3, [r3]
 948 0036 9A42     		cmp	r2, r3
 949 0038 0DDD     		ble	.L53
 246:level_sensor.c ****             swap(&a[j],&a[j+1]); // swap the address of a[j] and a[j+1]
 950              		.loc 1 246 0
 951 003a B7F90C30 		ldrsh	r3, [r7, #12]
 952 003e 5B00     		lsls	r3, r3, #1
 953 0040 7A68     		ldr	r2, [r7, #4]
 954 0042 D018     		adds	r0, r2, r3
 955 0044 B7F90C30 		ldrsh	r3, [r7, #12]
 956 0048 0133     		adds	r3, r3, #1
 957 004a 5B00     		lsls	r3, r3, #1
 958 004c 7A68     		ldr	r2, [r7, #4]
 959 004e 1344     		add	r3, r3, r2
 960 0050 1946     		mov	r1, r3
 961 0052 FFF7FEFF 		bl	swap
 962              	.L53:
 244:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
 963              		.loc 1 244 0 discriminator 2
 964 0056 B7F90C30 		ldrsh	r3, [r7, #12]
 965 005a 9BB2     		uxth	r3, r3
 966 005c 0133     		adds	r3, r3, #1
 967 005e 9BB2     		uxth	r3, r3
 968 0060 BB81     		strh	r3, [r7, #12]	@ movhi
 969              	.L52:
 244:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
 970              		.loc 1 244 0 is_stmt 0 discriminator 1
 971 0062 B7F90C20 		ldrsh	r2, [r7, #12]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 23


 972 0066 B7F90210 		ldrsh	r1, [r7, #2]
 973 006a B7F90E30 		ldrsh	r3, [r7, #14]
 974 006e CB1A     		subs	r3, r1, r3
 975 0070 013B     		subs	r3, r3, #1
 976 0072 9A42     		cmp	r2, r3
 977 0074 D0DB     		blt	.L54
 243:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
 978              		.loc 1 243 0 is_stmt 1 discriminator 2
 979 0076 B7F90E30 		ldrsh	r3, [r7, #14]
 980 007a 9BB2     		uxth	r3, r3
 981 007c 0133     		adds	r3, r3, #1
 982 007e 9BB2     		uxth	r3, r3
 983 0080 FB81     		strh	r3, [r7, #14]	@ movhi
 984              	.L51:
 243:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
 985              		.loc 1 243 0 is_stmt 0 discriminator 1
 986 0082 B7F90E20 		ldrsh	r2, [r7, #14]
 987 0086 B7F90230 		ldrsh	r3, [r7, #2]
 988 008a 013B     		subs	r3, r3, #1
 989 008c 9A42     		cmp	r2, r3
 990 008e C0DB     		blt	.L55
 247:level_sensor.c ****       }
 248:level_sensor.c ****    }
 249:level_sensor.c **** }
 991              		.loc 1 249 0 is_stmt 1
 992 0090 00BF     		nop
 993 0092 1037     		adds	r7, r7, #16
 994              		.cfi_def_cfa_offset 8
 995 0094 BD46     		mov	sp, r7
 996              		.cfi_def_cfa_register 13
 997              		@ sp needed
 998 0096 80BD     		pop	{r7, pc}
 999              		.cfi_endproc
 1000              	.LFE73:
 1001              		.size	sort, .-sort
 1002              		.section	.text.swap,"ax",%progbits
 1003              		.align	2
 1004              		.global	swap
 1005              		.thumb
 1006              		.thumb_func
 1007              		.type	swap, %function
 1008              	swap:
 1009              	.LFB74:
 250:level_sensor.c **** 
 251:level_sensor.c **** // function to swap elements in the level readings array in order to sort them
 252:level_sensor.c **** void swap(int16 *p,int16 *q) {
 1010              		.loc 1 252 0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 16
 1013              		@ frame_needed = 1, uses_anonymous_args = 0
 1014              		@ link register save eliminated.
 1015 0000 80B4     		push	{r7}
 1016              		.cfi_def_cfa_offset 4
 1017              		.cfi_offset 7, -4
 1018 0002 85B0     		sub	sp, sp, #20
 1019              		.cfi_def_cfa_offset 24
 1020 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 24


 1021              		.cfi_def_cfa_register 7
 1022 0006 7860     		str	r0, [r7, #4]
 1023 0008 3960     		str	r1, [r7]
 253:level_sensor.c ****    int16 t;
 254:level_sensor.c ****    
 255:level_sensor.c ****    t=*p; 
 1024              		.loc 1 255 0
 1025 000a 7B68     		ldr	r3, [r7, #4]
 1026 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1027 000e FB81     		strh	r3, [r7, #14]	@ movhi
 256:level_sensor.c ****    *p=*q; 
 1028              		.loc 1 256 0
 1029 0010 3B68     		ldr	r3, [r7]
 1030 0012 B3F90020 		ldrsh	r2, [r3]
 1031 0016 7B68     		ldr	r3, [r7, #4]
 1032 0018 1A80     		strh	r2, [r3]	@ movhi
 257:level_sensor.c ****    *q=t;
 1033              		.loc 1 257 0
 1034 001a 3B68     		ldr	r3, [r7]
 1035 001c FA89     		ldrh	r2, [r7, #14]	@ movhi
 1036 001e 1A80     		strh	r2, [r3]	@ movhi
 258:level_sensor.c **** }
 1037              		.loc 1 258 0
 1038 0020 00BF     		nop
 1039 0022 1437     		adds	r7, r7, #20
 1040              		.cfi_def_cfa_offset 4
 1041 0024 BD46     		mov	sp, r7
 1042              		.cfi_def_cfa_register 13
 1043              		@ sp needed
 1044 0026 80BC     		pop	{r7}
 1045              		.cfi_restore 7
 1046              		.cfi_def_cfa_offset 0
 1047 0028 7047     		bx	lr
 1048              		.cfi_endproc
 1049              	.LFE74:
 1050              		.size	swap, .-swap
 1051 002a 00BF     		.text
 1052              	.Letext0:
 1053              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1054              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1055              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1056              		.file 5 "testing.h"
 1057              		.file 6 "level_sensor.h"
 1058              		.file 7 "data.h"
 1059              		.file 8 "modem.h"
 1060              		.file 9 "notoriOS.h"
 1061              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 1062              		.file 11 "downstream_level_sensor.h"
 1063              		.file 12 "valve.h"
 1064              		.file 13 "App_LED.h"
 1065              		.section	.debug_info,"",%progbits
 1066              	.Ldebug_info0:
 1067 0000 3B090000 		.4byte	0x93b
 1068 0004 0400     		.2byte	0x4
 1069 0006 00000000 		.4byte	.Ldebug_abbrev0
 1070 000a 04       		.byte	0x4
 1071 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 25


 1072 000c 92000000 		.4byte	.LASF129
 1073 0010 0C       		.byte	0xc
 1074 0011 6D010000 		.4byte	.LASF130
 1075 0015 28000000 		.4byte	.LASF131
 1076 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1077 001d 00000000 		.4byte	0
 1078 0021 00000000 		.4byte	.Ldebug_line0
 1079 0025 02       		.uleb128 0x2
 1080 0026 01       		.byte	0x1
 1081 0027 06       		.byte	0x6
 1082 0028 AF010000 		.4byte	.LASF0
 1083 002c 03       		.uleb128 0x3
 1084 002d 70000000 		.4byte	.LASF4
 1085 0031 02       		.byte	0x2
 1086 0032 1D       		.byte	0x1d
 1087 0033 37000000 		.4byte	0x37
 1088 0037 02       		.uleb128 0x2
 1089 0038 01       		.byte	0x1
 1090 0039 08       		.byte	0x8
 1091 003a FB040000 		.4byte	.LASF1
 1092 003e 02       		.uleb128 0x2
 1093 003f 02       		.byte	0x2
 1094 0040 05       		.byte	0x5
 1095 0041 92030000 		.4byte	.LASF2
 1096 0045 02       		.uleb128 0x2
 1097 0046 02       		.byte	0x2
 1098 0047 07       		.byte	0x7
 1099 0048 1C060000 		.4byte	.LASF3
 1100 004c 03       		.uleb128 0x3
 1101 004d E8050000 		.4byte	.LASF5
 1102 0051 02       		.byte	0x2
 1103 0052 3F       		.byte	0x3f
 1104 0053 57000000 		.4byte	0x57
 1105 0057 02       		.uleb128 0x2
 1106 0058 04       		.byte	0x4
 1107 0059 05       		.byte	0x5
 1108 005a 45020000 		.4byte	.LASF6
 1109 005e 02       		.uleb128 0x2
 1110 005f 04       		.byte	0x4
 1111 0060 07       		.byte	0x7
 1112 0061 2E030000 		.4byte	.LASF7
 1113 0065 02       		.uleb128 0x2
 1114 0066 08       		.byte	0x8
 1115 0067 05       		.byte	0x5
 1116 0068 A1010000 		.4byte	.LASF8
 1117 006c 02       		.uleb128 0x2
 1118 006d 08       		.byte	0x8
 1119 006e 07       		.byte	0x7
 1120 006f 2B010000 		.4byte	.LASF9
 1121 0073 04       		.uleb128 0x4
 1122 0074 04       		.byte	0x4
 1123 0075 05       		.byte	0x5
 1124 0076 696E7400 		.ascii	"int\000"
 1125 007a 02       		.uleb128 0x2
 1126 007b 04       		.byte	0x4
 1127 007c 07       		.byte	0x7
 1128 007d C5050000 		.4byte	.LASF10
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 26


 1129 0081 03       		.uleb128 0x3
 1130 0082 EC060000 		.4byte	.LASF11
 1131 0086 03       		.byte	0x3
 1132 0087 18       		.byte	0x18
 1133 0088 2C000000 		.4byte	0x2c
 1134 008c 03       		.uleb128 0x3
 1135 008d F3040000 		.4byte	.LASF12
 1136 0091 03       		.byte	0x3
 1137 0092 2C       		.byte	0x2c
 1138 0093 4C000000 		.4byte	0x4c
 1139 0097 02       		.uleb128 0x2
 1140 0098 08       		.byte	0x8
 1141 0099 04       		.byte	0x4
 1142 009a A8050000 		.4byte	.LASF13
 1143 009e 02       		.uleb128 0x2
 1144 009f 04       		.byte	0x4
 1145 00a0 07       		.byte	0x7
 1146 00a1 2E040000 		.4byte	.LASF14
 1147 00a5 05       		.uleb128 0x5
 1148 00a6 04       		.byte	0x4
 1149 00a7 AB000000 		.4byte	0xab
 1150 00ab 02       		.uleb128 0x2
 1151 00ac 01       		.byte	0x1
 1152 00ad 08       		.byte	0x8
 1153 00ae C0050000 		.4byte	.LASF15
 1154 00b2 05       		.uleb128 0x5
 1155 00b3 04       		.byte	0x4
 1156 00b4 B8000000 		.4byte	0xb8
 1157 00b8 06       		.uleb128 0x6
 1158 00b9 AB000000 		.4byte	0xab
 1159 00bd 07       		.uleb128 0x7
 1160 00be AB000000 		.4byte	0xab
 1161 00c2 CD000000 		.4byte	0xcd
 1162 00c6 08       		.uleb128 0x8
 1163 00c7 9E000000 		.4byte	0x9e
 1164 00cb 17       		.byte	0x17
 1165 00cc 00       		.byte	0
 1166 00cd 02       		.uleb128 0x2
 1167 00ce 08       		.byte	0x8
 1168 00cf 04       		.byte	0x4
 1169 00d0 31070000 		.4byte	.LASF16
 1170 00d4 02       		.uleb128 0x2
 1171 00d5 04       		.byte	0x4
 1172 00d6 04       		.byte	0x4
 1173 00d7 C0040000 		.4byte	.LASF17
 1174 00db 09       		.uleb128 0x9
 1175 00dc 6A020000 		.4byte	.LASF18
 1176 00e0 04       		.byte	0x4
 1177 00e1 9201     		.2byte	0x192
 1178 00e3 37000000 		.4byte	0x37
 1179 00e7 09       		.uleb128 0x9
 1180 00e8 0C000000 		.4byte	.LASF19
 1181 00ec 04       		.byte	0x4
 1182 00ed 9301     		.2byte	0x193
 1183 00ef 45000000 		.4byte	0x45
 1184 00f3 09       		.uleb128 0x9
 1185 00f4 F4060000 		.4byte	.LASF20
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 27


 1186 00f8 04       		.byte	0x4
 1187 00f9 9601     		.2byte	0x196
 1188 00fb 3E000000 		.4byte	0x3e
 1189 00ff 09       		.uleb128 0x9
 1190 0100 91020000 		.4byte	.LASF21
 1191 0104 04       		.byte	0x4
 1192 0105 9701     		.2byte	0x197
 1193 0107 57000000 		.4byte	0x57
 1194 010b 0A       		.uleb128 0xa
 1195 010c 8101     		.2byte	0x181
 1196 010e 05       		.byte	0x5
 1197 010f 0A       		.byte	0xa
 1198 0110 39010000 		.4byte	0x139
 1199 0114 0B       		.uleb128 0xb
 1200 0115 53040000 		.4byte	.LASF22
 1201 0119 05       		.byte	0x5
 1202 011a 0C       		.byte	0xc
 1203 011b 39010000 		.4byte	0x139
 1204 011f 00       		.byte	0
 1205 0120 0B       		.uleb128 0xb
 1206 0121 81060000 		.4byte	.LASF23
 1207 0125 05       		.byte	0x5
 1208 0126 0D       		.byte	0xd
 1209 0127 DB000000 		.4byte	0xdb
 1210 012b 80       		.byte	0x80
 1211 012c 0B       		.uleb128 0xb
 1212 012d 55050000 		.4byte	.LASF24
 1213 0131 05       		.byte	0x5
 1214 0132 0F       		.byte	0xf
 1215 0133 49010000 		.4byte	0x149
 1216 0137 81       		.byte	0x81
 1217 0138 00       		.byte	0
 1218 0139 07       		.uleb128 0x7
 1219 013a AB000000 		.4byte	0xab
 1220 013e 49010000 		.4byte	0x149
 1221 0142 08       		.uleb128 0x8
 1222 0143 9E000000 		.4byte	0x9e
 1223 0147 7F       		.byte	0x7f
 1224 0148 00       		.byte	0
 1225 0149 07       		.uleb128 0x7
 1226 014a AB000000 		.4byte	0xab
 1227 014e 59010000 		.4byte	0x159
 1228 0152 08       		.uleb128 0x8
 1229 0153 9E000000 		.4byte	0x9e
 1230 0157 FF       		.byte	0xff
 1231 0158 00       		.byte	0
 1232 0159 03       		.uleb128 0x3
 1233 015a 19050000 		.4byte	.LASF25
 1234 015e 05       		.byte	0x5
 1235 015f 10       		.byte	0x10
 1236 0160 0B010000 		.4byte	0x10b
 1237 0164 0C       		.uleb128 0xc
 1238 0165 1A       		.byte	0x1a
 1239 0166 06       		.byte	0x6
 1240 0167 10       		.byte	0x10
 1241 0168 9D010000 		.4byte	0x19d
 1242 016c 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 28


 1243 016d C6020000 		.4byte	.LASF26
 1244 0171 06       		.byte	0x6
 1245 0172 11       		.byte	0x11
 1246 0173 9D010000 		.4byte	0x19d
 1247 0177 00       		.byte	0
 1248 0178 0B       		.uleb128 0xb
 1249 0179 0E060000 		.4byte	.LASF27
 1250 017d 06       		.byte	0x6
 1251 017e 12       		.byte	0x12
 1252 017f F3000000 		.4byte	0xf3
 1253 0183 16       		.byte	0x16
 1254 0184 0B       		.uleb128 0xb
 1255 0185 1B030000 		.4byte	.LASF28
 1256 0189 06       		.byte	0x6
 1257 018a 13       		.byte	0x13
 1258 018b DB000000 		.4byte	0xdb
 1259 018f 18       		.byte	0x18
 1260 0190 0B       		.uleb128 0xb
 1261 0191 13000000 		.4byte	.LASF29
 1262 0195 06       		.byte	0x6
 1263 0196 14       		.byte	0x14
 1264 0197 DB000000 		.4byte	0xdb
 1265 019b 19       		.byte	0x19
 1266 019c 00       		.byte	0
 1267 019d 07       		.uleb128 0x7
 1268 019e F3000000 		.4byte	0xf3
 1269 01a2 AD010000 		.4byte	0x1ad
 1270 01a6 08       		.uleb128 0x8
 1271 01a7 9E000000 		.4byte	0x9e
 1272 01ab 0A       		.byte	0xa
 1273 01ac 00       		.byte	0
 1274 01ad 03       		.uleb128 0x3
 1275 01ae D8040000 		.4byte	.LASF30
 1276 01b2 06       		.byte	0x6
 1277 01b3 15       		.byte	0x15
 1278 01b4 64010000 		.4byte	0x164
 1279 01b8 0C       		.uleb128 0xc
 1280 01b9 2C       		.byte	0x2c
 1281 01ba 07       		.byte	0x7
 1282 01bb 14       		.byte	0x14
 1283 01bc E5010000 		.4byte	0x1e5
 1284 01c0 0D       		.uleb128 0xd
 1285 01c1 6B657900 		.ascii	"key\000"
 1286 01c5 07       		.byte	0x7
 1287 01c6 15       		.byte	0x15
 1288 01c7 E5010000 		.4byte	0x1e5
 1289 01cb 00       		.byte	0
 1290 01cc 0B       		.uleb128 0xb
 1291 01cd EF020000 		.4byte	.LASF31
 1292 01d1 07       		.byte	0x7
 1293 01d2 16       		.byte	0x16
 1294 01d3 E5010000 		.4byte	0x1e5
 1295 01d7 14       		.byte	0x14
 1296 01d8 0B       		.uleb128 0xb
 1297 01d9 74040000 		.4byte	.LASF32
 1298 01dd 07       		.byte	0x7
 1299 01de 17       		.byte	0x17
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 29


 1300 01df FF000000 		.4byte	0xff
 1301 01e3 28       		.byte	0x28
 1302 01e4 00       		.byte	0
 1303 01e5 07       		.uleb128 0x7
 1304 01e6 AB000000 		.4byte	0xab
 1305 01ea F5010000 		.4byte	0x1f5
 1306 01ee 08       		.uleb128 0x8
 1307 01ef 9E000000 		.4byte	0x9e
 1308 01f3 13       		.byte	0x13
 1309 01f4 00       		.byte	0
 1310 01f5 03       		.uleb128 0x3
 1311 01f6 0F030000 		.4byte	.LASF33
 1312 01fa 07       		.byte	0x7
 1313 01fb 19       		.byte	0x19
 1314 01fc B8010000 		.4byte	0x1b8
 1315 0200 0C       		.uleb128 0xc
 1316 0201 3C       		.byte	0x3c
 1317 0202 08       		.byte	0x8
 1318 0203 36       		.byte	0x36
 1319 0204 2D020000 		.4byte	0x22d
 1320 0208 0B       		.uleb128 0xb
 1321 0209 2F060000 		.4byte	.LASF34
 1322 020d 08       		.byte	0x8
 1323 020e 37       		.byte	0x37
 1324 020f E5010000 		.4byte	0x1e5
 1325 0213 00       		.byte	0
 1326 0214 0B       		.uleb128 0xb
 1327 0215 BD020000 		.4byte	.LASF35
 1328 0219 08       		.byte	0x8
 1329 021a 38       		.byte	0x38
 1330 021b E5010000 		.4byte	0x1e5
 1331 021f 14       		.byte	0x14
 1332 0220 0B       		.uleb128 0xb
 1333 0221 50050000 		.4byte	.LASF36
 1334 0225 08       		.byte	0x8
 1335 0226 39       		.byte	0x39
 1336 0227 E5010000 		.4byte	0x1e5
 1337 022b 28       		.byte	0x28
 1338 022c 00       		.byte	0
 1339 022d 03       		.uleb128 0x3
 1340 022e 17020000 		.4byte	.LASF37
 1341 0232 08       		.byte	0x8
 1342 0233 3B       		.byte	0x3b
 1343 0234 00020000 		.4byte	0x200
 1344 0238 0C       		.uleb128 0xc
 1345 0239 20       		.byte	0x20
 1346 023a 08       		.byte	0x8
 1347 023b 3D       		.byte	0x3d
 1348 023c A1020000 		.4byte	0x2a1
 1349 0240 0B       		.uleb128 0xb
 1350 0241 3F020000 		.4byte	.LASF38
 1351 0245 08       		.byte	0x8
 1352 0246 3E       		.byte	0x3e
 1353 0247 73000000 		.4byte	0x73
 1354 024b 00       		.byte	0
 1355 024c 0D       		.uleb128 0xd
 1356 024d 62657200 		.ascii	"ber\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 30


 1357 0251 08       		.byte	0x8
 1358 0252 3F       		.byte	0x3f
 1359 0253 73000000 		.4byte	0x73
 1360 0257 04       		.byte	0x4
 1361 0258 0B       		.uleb128 0xb
 1362 0259 3F050000 		.4byte	.LASF39
 1363 025d 08       		.byte	0x8
 1364 025e 40       		.byte	0x40
 1365 025f 73000000 		.4byte	0x73
 1366 0263 08       		.byte	0x8
 1367 0264 0B       		.uleb128 0xb
 1368 0265 BB010000 		.4byte	.LASF40
 1369 0269 08       		.byte	0x8
 1370 026a 41       		.byte	0x41
 1371 026b 73000000 		.4byte	0x73
 1372 026f 0C       		.byte	0xc
 1373 0270 0B       		.uleb128 0xb
 1374 0271 25050000 		.4byte	.LASF41
 1375 0275 08       		.byte	0x8
 1376 0276 42       		.byte	0x42
 1377 0277 73000000 		.4byte	0x73
 1378 027b 10       		.byte	0x10
 1379 027c 0B       		.uleb128 0xb
 1380 027d 20050000 		.4byte	.LASF42
 1381 0281 08       		.byte	0x8
 1382 0282 43       		.byte	0x43
 1383 0283 73000000 		.4byte	0x73
 1384 0287 14       		.byte	0x14
 1385 0288 0B       		.uleb128 0xb
 1386 0289 DD010000 		.4byte	.LASF43
 1387 028d 08       		.byte	0x8
 1388 028e 44       		.byte	0x44
 1389 028f 73000000 		.4byte	0x73
 1390 0293 18       		.byte	0x18
 1391 0294 0B       		.uleb128 0xb
 1392 0295 7F030000 		.4byte	.LASF44
 1393 0299 08       		.byte	0x8
 1394 029a 45       		.byte	0x45
 1395 029b 73000000 		.4byte	0x73
 1396 029f 1C       		.byte	0x1c
 1397 02a0 00       		.byte	0
 1398 02a1 03       		.uleb128 0x3
 1399 02a2 64050000 		.4byte	.LASF45
 1400 02a6 08       		.byte	0x8
 1401 02a7 47       		.byte	0x47
 1402 02a8 38020000 		.4byte	0x238
 1403 02ac 0C       		.uleb128 0xc
 1404 02ad 09       		.byte	0x9
 1405 02ae 08       		.byte	0x8
 1406 02af 53       		.byte	0x53
 1407 02b0 21030000 		.4byte	0x321
 1408 02b4 0B       		.uleb128 0xb
 1409 02b5 97020000 		.4byte	.LASF46
 1410 02b9 08       		.byte	0x8
 1411 02ba 55       		.byte	0x55
 1412 02bb DB000000 		.4byte	0xdb
 1413 02bf 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 31


 1414 02c0 0B       		.uleb128 0xb
 1415 02c1 08070000 		.4byte	.LASF47
 1416 02c5 08       		.byte	0x8
 1417 02c6 57       		.byte	0x57
 1418 02c7 21030000 		.4byte	0x321
 1419 02cb 01       		.byte	0x1
 1420 02cc 0B       		.uleb128 0xb
 1421 02cd F2050000 		.4byte	.LASF48
 1422 02d1 08       		.byte	0x8
 1423 02d2 59       		.byte	0x59
 1424 02d3 DB000000 		.4byte	0xdb
 1425 02d7 02       		.byte	0x2
 1426 02d8 0B       		.uleb128 0xb
 1427 02d9 2A050000 		.4byte	.LASF49
 1428 02dd 08       		.byte	0x8
 1429 02de 5B       		.byte	0x5b
 1430 02df DB000000 		.4byte	0xdb
 1431 02e3 03       		.byte	0x3
 1432 02e4 0B       		.uleb128 0xb
 1433 02e5 E3020000 		.4byte	.LASF50
 1434 02e9 08       		.byte	0x8
 1435 02ea 5E       		.byte	0x5e
 1436 02eb DB000000 		.4byte	0xdb
 1437 02ef 04       		.byte	0x4
 1438 02f0 0B       		.uleb128 0xb
 1439 02f1 B6060000 		.4byte	.LASF51
 1440 02f5 08       		.byte	0x8
 1441 02f6 63       		.byte	0x63
 1442 02f7 DB000000 		.4byte	0xdb
 1443 02fb 05       		.byte	0x5
 1444 02fc 0B       		.uleb128 0xb
 1445 02fd 83050000 		.4byte	.LASF52
 1446 0301 08       		.byte	0x8
 1447 0302 65       		.byte	0x65
 1448 0303 DB000000 		.4byte	0xdb
 1449 0307 06       		.byte	0x6
 1450 0308 0B       		.uleb128 0xb
 1451 0309 4A060000 		.4byte	.LASF53
 1452 030d 08       		.byte	0x8
 1453 030e 66       		.byte	0x66
 1454 030f DB000000 		.4byte	0xdb
 1455 0313 07       		.byte	0x7
 1456 0314 0B       		.uleb128 0xb
 1457 0315 11070000 		.4byte	.LASF54
 1458 0319 08       		.byte	0x8
 1459 031a 67       		.byte	0x67
 1460 031b DB000000 		.4byte	0xdb
 1461 031f 08       		.byte	0x8
 1462 0320 00       		.byte	0
 1463 0321 02       		.uleb128 0x2
 1464 0322 01       		.byte	0x1
 1465 0323 02       		.byte	0x2
 1466 0324 ED040000 		.4byte	.LASF55
 1467 0328 03       		.uleb128 0x3
 1468 0329 EA030000 		.4byte	.LASF56
 1469 032d 08       		.byte	0x8
 1470 032e 69       		.byte	0x69
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 32


 1471 032f AC020000 		.4byte	0x2ac
 1472 0333 0C       		.uleb128 0xc
 1473 0334 06       		.byte	0x6
 1474 0335 09       		.byte	0x9
 1475 0336 30       		.byte	0x30
 1476 0337 6C030000 		.4byte	0x36c
 1477 033b 0B       		.uleb128 0xb
 1478 033c C0010000 		.4byte	.LASF57
 1479 0340 09       		.byte	0x9
 1480 0341 32       		.byte	0x32
 1481 0342 E7000000 		.4byte	0xe7
 1482 0346 00       		.byte	0
 1483 0347 0B       		.uleb128 0xb
 1484 0348 4E020000 		.4byte	.LASF58
 1485 034c 09       		.byte	0x9
 1486 034d 33       		.byte	0x33
 1487 034e F3000000 		.4byte	0xf3
 1488 0352 02       		.byte	0x2
 1489 0353 0B       		.uleb128 0xb
 1490 0354 FA060000 		.4byte	.LASF59
 1491 0358 09       		.byte	0x9
 1492 0359 34       		.byte	0x34
 1493 035a DB000000 		.4byte	0xdb
 1494 035e 04       		.byte	0x4
 1495 035f 0B       		.uleb128 0xb
 1496 0360 7A000000 		.4byte	.LASF60
 1497 0364 09       		.byte	0x9
 1498 0365 35       		.byte	0x35
 1499 0366 DB000000 		.4byte	0xdb
 1500 036a 05       		.byte	0x5
 1501 036b 00       		.byte	0
 1502 036c 03       		.uleb128 0x3
 1503 036d 64020000 		.4byte	.LASF61
 1504 0371 09       		.byte	0x9
 1505 0372 38       		.byte	0x38
 1506 0373 77030000 		.4byte	0x377
 1507 0377 0E       		.uleb128 0xe
 1508 0378 33030000 		.4byte	0x333
 1509 037c 0C       		.uleb128 0xc
 1510 037d 1C       		.byte	0x1c
 1511 037e 09       		.byte	0x9
 1512 037f 3B       		.byte	0x3b
 1513 0380 9D030000 		.4byte	0x39d
 1514 0384 0B       		.uleb128 0xb
 1515 0385 59030000 		.4byte	.LASF62
 1516 0389 09       		.byte	0x9
 1517 038a 3D       		.byte	0x3d
 1518 038b 9D030000 		.4byte	0x39d
 1519 038f 00       		.byte	0
 1520 0390 0B       		.uleb128 0xb
 1521 0391 AF020000 		.4byte	.LASF63
 1522 0395 09       		.byte	0x9
 1523 0396 3E       		.byte	0x3e
 1524 0397 BD000000 		.4byte	0xbd
 1525 039b 04       		.byte	0x4
 1526 039c 00       		.byte	0
 1527 039d 05       		.uleb128 0x5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 33


 1528 039e 04       		.byte	0x4
 1529 039f 2D020000 		.4byte	0x22d
 1530 03a3 03       		.uleb128 0x3
 1531 03a4 DF030000 		.4byte	.LASF64
 1532 03a8 09       		.byte	0x9
 1533 03a9 40       		.byte	0x40
 1534 03aa 7C030000 		.4byte	0x37c
 1535 03ae 0C       		.uleb128 0xc
 1536 03af 68       		.byte	0x68
 1537 03b0 09       		.byte	0x9
 1538 03b1 46       		.byte	0x46
 1539 03b2 CF030000 		.4byte	0x3cf
 1540 03b6 0B       		.uleb128 0xb
 1541 03b7 64030000 		.4byte	.LASF65
 1542 03bb 09       		.byte	0x9
 1543 03bc 4B       		.byte	0x4b
 1544 03bd CF030000 		.4byte	0x3cf
 1545 03c1 00       		.byte	0
 1546 03c2 0B       		.uleb128 0xb
 1547 03c3 51030000 		.4byte	.LASF66
 1548 03c7 09       		.byte	0x9
 1549 03c8 4C       		.byte	0x4c
 1550 03c9 73000000 		.4byte	0x73
 1551 03cd 64       		.byte	0x64
 1552 03ce 00       		.byte	0
 1553 03cf 07       		.uleb128 0x7
 1554 03d0 AB000000 		.4byte	0xab
 1555 03d4 DF030000 		.4byte	0x3df
 1556 03d8 08       		.uleb128 0x8
 1557 03d9 9E000000 		.4byte	0x9e
 1558 03dd 63       		.byte	0x63
 1559 03de 00       		.byte	0
 1560 03df 03       		.uleb128 0x3
 1561 03e0 DD060000 		.4byte	.LASF67
 1562 03e4 09       		.byte	0x9
 1563 03e5 52       		.byte	0x52
 1564 03e6 AE030000 		.4byte	0x3ae
 1565 03ea 0F       		.uleb128 0xf
 1566 03eb 40030000 		.4byte	.LASF68
 1567 03ef 01       		.byte	0x1
 1568 03f0 17       		.byte	0x17
 1569 03f1 B2000000 		.4byte	0xb2
 1570 03f5 00000000 		.4byte	.LFB64
 1571 03f9 14000000 		.4byte	.LFE64-.LFB64
 1572 03fd 01       		.uleb128 0x1
 1573 03fe 9C       		.byte	0x9c
 1574 03ff 0F       		.uleb128 0xf
 1575 0400 99040000 		.4byte	.LASF69
 1576 0404 01       		.byte	0x1
 1577 0405 1E       		.byte	0x1e
 1578 0406 81000000 		.4byte	0x81
 1579 040a 00000000 		.4byte	.LFB65
 1580 040e 14000000 		.4byte	.LFE65-.LFB65
 1581 0412 01       		.uleb128 0x1
 1582 0413 9C       		.byte	0x9c
 1583 0414 10       		.uleb128 0x10
 1584 0415 34050000 		.4byte	.LASF132
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 34


 1585 0419 01       		.byte	0x1
 1586 041a 23       		.byte	0x23
 1587 041b 00000000 		.4byte	.LFB66
 1588 041f 28000000 		.4byte	.LFE66-.LFB66
 1589 0423 01       		.uleb128 0x1
 1590 0424 9C       		.byte	0x9c
 1591 0425 11       		.uleb128 0x11
 1592 0426 1D040000 		.4byte	.LASF70
 1593 042a 01       		.byte	0x1
 1594 042b 2E       		.byte	0x2e
 1595 042c 00000000 		.4byte	.LFB67
 1596 0430 70000000 		.4byte	.LFE67-.LFB67
 1597 0434 01       		.uleb128 0x1
 1598 0435 9C       		.byte	0x9c
 1599 0436 49040000 		.4byte	0x449
 1600 043a 12       		.uleb128 0x12
 1601 043b 5C050000 		.4byte	.LASF73
 1602 043f 01       		.byte	0x1
 1603 0440 32       		.byte	0x32
 1604 0441 AB000000 		.4byte	0xab
 1605 0445 02       		.uleb128 0x2
 1606 0446 91       		.byte	0x91
 1607 0447 77       		.sleb128 -9
 1608 0448 00       		.byte	0
 1609 0449 11       		.uleb128 0x11
 1610 044a 36060000 		.4byte	.LASF71
 1611 044e 01       		.byte	0x1
 1612 044f 3E       		.byte	0x3e
 1613 0450 00000000 		.4byte	.LFB68
 1614 0454 1C000000 		.4byte	.LFE68-.LFB68
 1615 0458 01       		.uleb128 0x1
 1616 0459 9C       		.byte	0x9c
 1617 045a 6D040000 		.4byte	0x46d
 1618 045e 13       		.uleb128 0x13
 1619 045f 1C070000 		.4byte	.LASF84
 1620 0463 01       		.byte	0x1
 1621 0464 3E       		.byte	0x3e
 1622 0465 A5000000 		.4byte	0xa5
 1623 0469 02       		.uleb128 0x2
 1624 046a 91       		.byte	0x91
 1625 046b 74       		.sleb128 -12
 1626 046c 00       		.byte	0
 1627 046d 14       		.uleb128 0x14
 1628 046e 00020000 		.4byte	.LASF72
 1629 0472 01       		.byte	0x1
 1630 0473 42       		.byte	0x42
 1631 0474 DB000000 		.4byte	0xdb
 1632 0478 00000000 		.4byte	.LFB69
 1633 047c 00010000 		.4byte	.LFE69-.LFB69
 1634 0480 01       		.uleb128 0x1
 1635 0481 9C       		.byte	0x9c
 1636 0482 D8040000 		.4byte	0x4d8
 1637 0486 12       		.uleb128 0x12
 1638 0487 AF040000 		.4byte	.LASF74
 1639 048b 01       		.byte	0x1
 1640 048c 43       		.byte	0x43
 1641 048d A5000000 		.4byte	0xa5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 35


 1642 0491 02       		.uleb128 0x2
 1643 0492 91       		.byte	0x91
 1644 0493 74       		.sleb128 -12
 1645 0494 15       		.uleb128 0x15
 1646 0495 2A000000 		.4byte	.LBB2
 1647 0499 96000000 		.4byte	.LBE2-.LBB2
 1648 049d 12       		.uleb128 0x12
 1649 049e 74040000 		.4byte	.LASF32
 1650 04a2 01       		.byte	0x1
 1651 04a3 52       		.byte	0x52
 1652 04a4 57000000 		.4byte	0x57
 1653 04a8 02       		.uleb128 0x2
 1654 04a9 91       		.byte	0x91
 1655 04aa 70       		.sleb128 -16
 1656 04ab 12       		.uleb128 0x12
 1657 04ac B4050000 		.4byte	.LASF75
 1658 04b0 01       		.byte	0x1
 1659 04b1 53       		.byte	0x53
 1660 04b2 D8040000 		.4byte	0x4d8
 1661 04b6 03       		.uleb128 0x3
 1662 04b7 91       		.byte	0x91
 1663 04b8 A07F     		.sleb128 -96
 1664 04ba 12       		.uleb128 0x12
 1665 04bb EF020000 		.4byte	.LASF31
 1666 04bf 01       		.byte	0x1
 1667 04c0 57       		.byte	0x57
 1668 04c1 E5010000 		.4byte	0x1e5
 1669 04c5 02       		.uleb128 0x2
 1670 04c6 91       		.byte	0x91
 1671 04c7 5C       		.sleb128 -36
 1672 04c8 12       		.uleb128 0x12
 1673 04c9 FF050000 		.4byte	.LASF76
 1674 04cd 01       		.byte	0x1
 1675 04ce 5A       		.byte	0x5a
 1676 04cf AD010000 		.4byte	0x1ad
 1677 04d3 02       		.uleb128 0x2
 1678 04d4 91       		.byte	0x91
 1679 04d5 40       		.sleb128 -64
 1680 04d6 00       		.byte	0
 1681 04d7 00       		.byte	0
 1682 04d8 07       		.uleb128 0x7
 1683 04d9 AB000000 		.4byte	0xab
 1684 04dd E8040000 		.4byte	0x4e8
 1685 04e1 08       		.uleb128 0x8
 1686 04e2 9E000000 		.4byte	0x9e
 1687 04e6 1F       		.byte	0x1f
 1688 04e7 00       		.byte	0
 1689 04e8 14       		.uleb128 0x14
 1690 04e9 C3060000 		.4byte	.LASF77
 1691 04ed 01       		.byte	0x1
 1692 04ee 78       		.byte	0x78
 1693 04ef AD010000 		.4byte	0x1ad
 1694 04f3 00000000 		.4byte	.LFB70
 1695 04f7 1C010000 		.4byte	.LFE70-.LFB70
 1696 04fb 01       		.uleb128 0x1
 1697 04fc 9C       		.byte	0x9c
 1698 04fd 32050000 		.4byte	0x532
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 36


 1699 0501 12       		.uleb128 0x12
 1700 0502 70020000 		.4byte	.LASF78
 1701 0506 01       		.byte	0x1
 1702 0507 7B       		.byte	0x7b
 1703 0508 AD010000 		.4byte	0x1ad
 1704 050c 02       		.uleb128 0x2
 1705 050d 91       		.byte	0x91
 1706 050e 50       		.sleb128 -48
 1707 050f 12       		.uleb128 0x12
 1708 0510 E7040000 		.4byte	.LASF79
 1709 0514 01       		.byte	0x1
 1710 0515 9D       		.byte	0x9d
 1711 0516 A5000000 		.4byte	0xa5
 1712 051a 02       		.uleb128 0x2
 1713 051b 91       		.byte	0x91
 1714 051c 6C       		.sleb128 -20
 1715 051d 16       		.uleb128 0x16
 1716 051e 00000000 		.4byte	.Ldebug_ranges0+0
 1717 0522 12       		.uleb128 0x12
 1718 0523 A1020000 		.4byte	.LASF80
 1719 0527 01       		.byte	0x1
 1720 0528 A5       		.byte	0xa5
 1721 0529 E7000000 		.4byte	0xe7
 1722 052d 02       		.uleb128 0x2
 1723 052e 91       		.byte	0x91
 1724 052f 6A       		.sleb128 -22
 1725 0530 00       		.byte	0
 1726 0531 00       		.byte	0
 1727 0532 14       		.uleb128 0x14
 1728 0533 C6040000 		.4byte	.LASF81
 1729 0537 01       		.byte	0x1
 1730 0538 C0       		.byte	0xc0
 1731 0539 59010000 		.4byte	0x159
 1732 053d 00000000 		.4byte	.LFB71
 1733 0541 CC000000 		.4byte	.LFE71-.LFB71
 1734 0545 01       		.uleb128 0x1
 1735 0546 9C       		.byte	0x9c
 1736 0547 6A050000 		.4byte	0x56a
 1737 054b 12       		.uleb128 0x12
 1738 054c 4E010000 		.4byte	.LASF82
 1739 0550 01       		.byte	0x1
 1740 0551 C2       		.byte	0xc2
 1741 0552 59010000 		.4byte	0x159
 1742 0556 03       		.uleb128 0x3
 1743 0557 91       		.byte	0x91
 1744 0558 EC7C     		.sleb128 -404
 1745 055a 12       		.uleb128 0x12
 1746 055b 78030000 		.4byte	.LASF83
 1747 055f 01       		.byte	0x1
 1748 0560 C7       		.byte	0xc7
 1749 0561 AD010000 		.4byte	0x1ad
 1750 0565 03       		.uleb128 0x3
 1751 0566 91       		.byte	0x91
 1752 0567 D07C     		.sleb128 -432
 1753 0569 00       		.byte	0
 1754 056a 17       		.uleb128 0x17
 1755 056b 75060000 		.4byte	.LASF133
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 37


 1756 056f 01       		.byte	0x1
 1757 0570 DE       		.byte	0xde
 1758 0571 E7000000 		.4byte	0xe7
 1759 0575 00000000 		.4byte	.LFB72
 1760 0579 8E000000 		.4byte	.LFE72-.LFB72
 1761 057d 01       		.uleb128 0x1
 1762 057e 9C       		.byte	0x9c
 1763 057f AC050000 		.4byte	0x5ac
 1764 0583 13       		.uleb128 0x13
 1765 0584 A9020000 		.4byte	.LASF85
 1766 0588 01       		.byte	0x1
 1767 0589 DE       		.byte	0xde
 1768 058a AC050000 		.4byte	0x5ac
 1769 058e 02       		.uleb128 0x2
 1770 058f 91       		.byte	0x91
 1771 0590 64       		.sleb128 -28
 1772 0591 18       		.uleb128 0x18
 1773 0592 6E00     		.ascii	"n\000"
 1774 0594 01       		.byte	0x1
 1775 0595 DE       		.byte	0xde
 1776 0596 DB000000 		.4byte	0xdb
 1777 059a 02       		.uleb128 0x2
 1778 059b 91       		.byte	0x91
 1779 059c 63       		.sleb128 -29
 1780 059d 12       		.uleb128 0x12
 1781 059e 7C010000 		.4byte	.LASF86
 1782 05a2 01       		.byte	0x1
 1783 05a3 E0       		.byte	0xe0
 1784 05a4 F3000000 		.4byte	0xf3
 1785 05a8 02       		.uleb128 0x2
 1786 05a9 91       		.byte	0x91
 1787 05aa 6E       		.sleb128 -18
 1788 05ab 00       		.byte	0
 1789 05ac 05       		.uleb128 0x5
 1790 05ad 04       		.byte	0x4
 1791 05ae F3000000 		.4byte	0xf3
 1792 05b2 11       		.uleb128 0x11
 1793 05b3 DE020000 		.4byte	.LASF87
 1794 05b7 01       		.byte	0x1
 1795 05b8 F0       		.byte	0xf0
 1796 05b9 00000000 		.4byte	.LFB73
 1797 05bd 98000000 		.4byte	.LFE73-.LFB73
 1798 05c1 01       		.uleb128 0x1
 1799 05c2 9C       		.byte	0x9c
 1800 05c3 F8050000 		.4byte	0x5f8
 1801 05c7 18       		.uleb128 0x18
 1802 05c8 6100     		.ascii	"a\000"
 1803 05ca 01       		.byte	0x1
 1804 05cb F0       		.byte	0xf0
 1805 05cc AC050000 		.4byte	0x5ac
 1806 05d0 02       		.uleb128 0x2
 1807 05d1 91       		.byte	0x91
 1808 05d2 6C       		.sleb128 -20
 1809 05d3 18       		.uleb128 0x18
 1810 05d4 6E00     		.ascii	"n\000"
 1811 05d6 01       		.byte	0x1
 1812 05d7 F0       		.byte	0xf0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 38


 1813 05d8 F3000000 		.4byte	0xf3
 1814 05dc 02       		.uleb128 0x2
 1815 05dd 91       		.byte	0x91
 1816 05de 6A       		.sleb128 -22
 1817 05df 19       		.uleb128 0x19
 1818 05e0 6900     		.ascii	"i\000"
 1819 05e2 01       		.byte	0x1
 1820 05e3 F1       		.byte	0xf1
 1821 05e4 F3000000 		.4byte	0xf3
 1822 05e8 02       		.uleb128 0x2
 1823 05e9 91       		.byte	0x91
 1824 05ea 76       		.sleb128 -10
 1825 05eb 19       		.uleb128 0x19
 1826 05ec 6A00     		.ascii	"j\000"
 1827 05ee 01       		.byte	0x1
 1828 05ef F1       		.byte	0xf1
 1829 05f0 F3000000 		.4byte	0xf3
 1830 05f4 02       		.uleb128 0x2
 1831 05f5 91       		.byte	0x91
 1832 05f6 74       		.sleb128 -12
 1833 05f7 00       		.byte	0
 1834 05f8 1A       		.uleb128 0x1a
 1835 05f9 AA040000 		.4byte	.LASF88
 1836 05fd 01       		.byte	0x1
 1837 05fe FC       		.byte	0xfc
 1838 05ff 00000000 		.4byte	.LFB74
 1839 0603 2A000000 		.4byte	.LFE74-.LFB74
 1840 0607 01       		.uleb128 0x1
 1841 0608 9C       		.byte	0x9c
 1842 0609 32060000 		.4byte	0x632
 1843 060d 18       		.uleb128 0x18
 1844 060e 7000     		.ascii	"p\000"
 1845 0610 01       		.byte	0x1
 1846 0611 FC       		.byte	0xfc
 1847 0612 AC050000 		.4byte	0x5ac
 1848 0616 02       		.uleb128 0x2
 1849 0617 91       		.byte	0x91
 1850 0618 6C       		.sleb128 -20
 1851 0619 18       		.uleb128 0x18
 1852 061a 7100     		.ascii	"q\000"
 1853 061c 01       		.byte	0x1
 1854 061d FC       		.byte	0xfc
 1855 061e AC050000 		.4byte	0x5ac
 1856 0622 02       		.uleb128 0x2
 1857 0623 91       		.byte	0x91
 1858 0624 68       		.sleb128 -24
 1859 0625 19       		.uleb128 0x19
 1860 0626 7400     		.ascii	"t\000"
 1861 0628 01       		.byte	0x1
 1862 0629 FD       		.byte	0xfd
 1863 062a F3000000 		.4byte	0xf3
 1864 062e 02       		.uleb128 0x2
 1865 062f 91       		.byte	0x91
 1866 0630 76       		.sleb128 -10
 1867 0631 00       		.byte	0
 1868 0632 07       		.uleb128 0x7
 1869 0633 AB000000 		.4byte	0xab
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 39


 1870 0637 43060000 		.4byte	0x643
 1871 063b 1B       		.uleb128 0x1b
 1872 063c 9E000000 		.4byte	0x9e
 1873 0640 0001     		.2byte	0x100
 1874 0642 00       		.byte	0
 1875 0643 12       		.uleb128 0x12
 1876 0644 20010000 		.4byte	.LASF89
 1877 0648 01       		.byte	0x1
 1878 0649 0C       		.byte	0xc
 1879 064a 32060000 		.4byte	0x632
 1880 064e 05       		.uleb128 0x5
 1881 064f 03       		.byte	0x3
 1882 0650 00000000 		.4byte	uart_chars
 1883 0654 12       		.uleb128 0x12
 1884 0655 13040000 		.4byte	.LASF90
 1885 0659 01       		.byte	0x1
 1886 065a 0D       		.byte	0xd
 1887 065b 81000000 		.4byte	0x81
 1888 065f 05       		.uleb128 0x5
 1889 0660 03       		.byte	0x3
 1890 0661 01010000 		.4byte	num_chars
 1891 0665 12       		.uleb128 0x12
 1892 0666 D9020000 		.4byte	.LASF91
 1893 066a 01       		.byte	0x1
 1894 066b 0F       		.byte	0xf
 1895 066c B2000000 		.4byte	0xb2
 1896 0670 05       		.uleb128 0x5
 1897 0671 03       		.byte	0x3
 1898 0672 00000000 		.4byte	line
 1899 0676 12       		.uleb128 0x12
 1900 0677 7E040000 		.4byte	.LASF92
 1901 067b 01       		.byte	0x1
 1902 067c 12       		.byte	0x12
 1903 067d B2000000 		.4byte	0xb2
 1904 0681 05       		.uleb128 0x5
 1905 0682 03       		.byte	0x3
 1906 0683 04010000 		.4byte	match
 1907 0687 12       		.uleb128 0x12
 1908 0688 A2040000 		.4byte	.LASF93
 1909 068c 01       		.byte	0x1
 1910 068d 13       		.byte	0x13
 1911 068e B2000000 		.4byte	0xb2
 1912 0692 05       		.uleb128 0x5
 1913 0693 03       		.byte	0x3
 1914 0694 08010000 		.4byte	pattern
 1915 0698 1C       		.uleb128 0x1c
 1916 0699 60010000 		.4byte	.LASF94
 1917 069d 0A       		.byte	0xa
 1918 069e 1207     		.2byte	0x712
 1919 06a0 A4060000 		.4byte	0x6a4
 1920 06a4 0E       		.uleb128 0xe
 1921 06a5 8C000000 		.4byte	0x8c
 1922 06a9 1D       		.uleb128 0x1d
 1923 06aa 95050000 		.4byte	.LASF95
 1924 06ae 06       		.byte	0x6
 1925 06af 25       		.byte	0x25
 1926 06b0 CF030000 		.4byte	0x3cf
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 40


 1927 06b4 05       		.uleb128 0x5
 1928 06b5 03       		.byte	0x3
 1929 06b6 00000000 		.4byte	level_sensor_inbox
 1930 06ba 1D       		.uleb128 0x1d
 1931 06bb 88060000 		.4byte	.LASF96
 1932 06bf 06       		.byte	0x6
 1933 06c0 27       		.byte	0x27
 1934 06c1 21030000 		.4byte	0x321
 1935 06c5 05       		.uleb128 0x5
 1936 06c6 03       		.byte	0x3
 1937 06c7 00000000 		.4byte	level_sensor_enabled
 1938 06cb 1D       		.uleb128 0x1d
 1939 06cc 46070000 		.4byte	.LASF97
 1940 06d0 0B       		.byte	0xb
 1941 06d1 0F       		.byte	0xf
 1942 06d2 CF030000 		.4byte	0x3cf
 1943 06d6 05       		.uleb128 0x5
 1944 06d7 03       		.byte	0x3
 1945 06d8 00000000 		.4byte	downstream_level_sensor_inbox
 1946 06dc 1D       		.uleb128 0x1d
 1947 06dd BF030000 		.4byte	.LASF98
 1948 06e1 0B       		.byte	0xb
 1949 06e2 11       		.byte	0x11
 1950 06e3 21030000 		.4byte	0x321
 1951 06e7 05       		.uleb128 0x5
 1952 06e8 03       		.byte	0x3
 1953 06e9 00000000 		.4byte	downstream_level_sensor_enabled
 1954 06ed 1D       		.uleb128 0x1d
 1955 06ee 67060000 		.4byte	.LASF99
 1956 06f2 0C       		.byte	0xc
 1957 06f3 29       		.byte	0x29
 1958 06f4 21030000 		.4byte	0x321
 1959 06f8 05       		.uleb128 0x5
 1960 06f9 03       		.byte	0x3
 1961 06fa 00000000 		.4byte	valve_enabled
 1962 06fe 1D       		.uleb128 0x1d
 1963 06ff 6C030000 		.4byte	.LASF100
 1964 0703 0C       		.byte	0xc
 1965 0704 2A       		.byte	0x2a
 1966 0705 CF030000 		.4byte	0x3cf
 1967 0709 05       		.uleb128 0x5
 1968 070a 03       		.byte	0x3
 1969 070b 00000000 		.4byte	valve_inbox
 1970 070f 1D       		.uleb128 0x1d
 1971 0710 60000000 		.4byte	.LASF101
 1972 0714 07       		.byte	0x7
 1973 0715 11       		.byte	0x11
 1974 0716 21030000 		.4byte	0x321
 1975 071a 05       		.uleb128 0x5
 1976 071b 03       		.byte	0x3
 1977 071c 00000000 		.4byte	buffer_overflow
 1978 0720 1D       		.uleb128 0x1d
 1979 0721 01040000 		.4byte	.LASF102
 1980 0725 07       		.byte	0x7
 1981 0726 22       		.byte	0x22
 1982 0727 E7000000 		.4byte	0xe7
 1983 072b 05       		.uleb128 0x5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 41


 1984 072c 03       		.byte	0x3
 1985 072d 00000000 		.4byte	dataPointsInStack
 1986 0731 1D       		.uleb128 0x1d
 1987 0732 9D060000 		.4byte	.LASF103
 1988 0736 07       		.byte	0x7
 1989 0737 23       		.byte	0x23
 1990 0738 E7000000 		.4byte	0xe7
 1991 073c 05       		.uleb128 0x5
 1992 073d 03       		.byte	0x3
 1993 073e 00000000 		.4byte	dataPointsInStackDesired
 1994 0742 07       		.uleb128 0x7
 1995 0743 F5010000 		.4byte	0x1f5
 1996 0747 52070000 		.4byte	0x752
 1997 074b 08       		.uleb128 0x8
 1998 074c 9E000000 		.4byte	0x9e
 1999 0750 95       		.byte	0x95
 2000 0751 00       		.byte	0
 2001 0752 1D       		.uleb128 0x1d
 2002 0753 4C030000 		.4byte	.LASF104
 2003 0757 07       		.byte	0x7
 2004 0758 24       		.byte	0x24
 2005 0759 42070000 		.4byte	0x742
 2006 075d 05       		.uleb128 0x5
 2007 075e 03       		.byte	0x3
 2008 075f 00000000 		.4byte	data
 2009 0763 1D       		.uleb128 0x1d
 2010 0764 42010000 		.4byte	.LASF105
 2011 0768 08       		.byte	0x8
 2012 0769 20       		.byte	0x20
 2013 076a DB000000 		.4byte	0xdb
 2014 076e 05       		.uleb128 0x5
 2015 076f 03       		.byte	0x3
 2016 0770 00000000 		.4byte	modem_state
 2017 0774 1D       		.uleb128 0x1d
 2018 0775 A8030000 		.4byte	.LASF106
 2019 0779 08       		.byte	0x8
 2020 077a 6C       		.byte	0x6c
 2021 077b FF000000 		.4byte	0xff
 2022 077f 05       		.uleb128 0x5
 2023 0780 03       		.byte	0x3
 2024 0781 00000000 		.4byte	modem_start_time_stamp
 2025 0785 1D       		.uleb128 0x1d
 2026 0786 59030000 		.4byte	.LASF62
 2027 078a 08       		.byte	0x8
 2028 078b 6D       		.byte	0x6d
 2029 078c 2D020000 		.4byte	0x22d
 2030 0790 05       		.uleb128 0x5
 2031 0791 03       		.byte	0x3
 2032 0792 00000000 		.4byte	modem_info
 2033 0796 1D       		.uleb128 0x1d
 2034 0797 95010000 		.4byte	.LASF107
 2035 079b 08       		.byte	0x8
 2036 079c 6E       		.byte	0x6e
 2037 079d A1020000 		.4byte	0x2a1
 2038 07a1 05       		.uleb128 0x5
 2039 07a2 03       		.byte	0x3
 2040 07a3 00000000 		.4byte	modem_stats
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 42


 2041 07a7 1D       		.uleb128 0x1d
 2042 07a8 84040000 		.4byte	.LASF108
 2043 07ac 08       		.byte	0x8
 2044 07ad 6F       		.byte	0x6f
 2045 07ae 28030000 		.4byte	0x328
 2046 07b2 05       		.uleb128 0x5
 2047 07b3 03       		.byte	0x3
 2048 07b4 00000000 		.4byte	updatable_parameters
 2049 07b8 1D       		.uleb128 0x1d
 2050 07b9 FF020000 		.4byte	.LASF109
 2051 07bd 0D       		.byte	0xd
 2052 07be 07       		.byte	0x7
 2053 07bf 21030000 		.4byte	0x321
 2054 07c3 05       		.uleb128 0x5
 2055 07c4 03       		.byte	0x3
 2056 07c5 00000000 		.4byte	App_LED_enabled
 2057 07c9 1D       		.uleb128 0x1d
 2058 07ca 38070000 		.4byte	.LASF110
 2059 07ce 0D       		.byte	0xd
 2060 07cf 08       		.byte	0x8
 2061 07d0 CF030000 		.4byte	0x3cf
 2062 07d4 05       		.uleb128 0x5
 2063 07d5 03       		.byte	0x3
 2064 07d6 00000000 		.4byte	app_led_inbox
 2065 07da 07       		.uleb128 0x7
 2066 07db AB000000 		.4byte	0xab
 2067 07df EB070000 		.4byte	0x7eb
 2068 07e3 1B       		.uleb128 0x1b
 2069 07e4 9E000000 		.4byte	0x9e
 2070 07e8 0F27     		.2byte	0x270f
 2071 07ea 00       		.byte	0
 2072 07eb 1D       		.uleb128 0x1d
 2073 07ec 24070000 		.4byte	.LASF111
 2074 07f0 09       		.byte	0x9
 2075 07f1 1A       		.byte	0x1a
 2076 07f2 DA070000 		.4byte	0x7da
 2077 07f6 05       		.uleb128 0x5
 2078 07f7 03       		.byte	0x3
 2079 07f8 00000000 		.4byte	http_request
 2080 07fc 1D       		.uleb128 0x1d
 2081 07fd 0D020000 		.4byte	.LASF112
 2082 0801 09       		.byte	0x9
 2083 0802 1B       		.byte	0x1b
 2084 0803 DA070000 		.4byte	0x7da
 2085 0807 05       		.uleb128 0x5
 2086 0808 03       		.byte	0x3
 2087 0809 00000000 		.4byte	http_body
 2088 080d 07       		.uleb128 0x7
 2089 080e AB000000 		.4byte	0xab
 2090 0812 1D080000 		.4byte	0x81d
 2091 0816 08       		.uleb128 0x8
 2092 0817 9E000000 		.4byte	0x9e
 2093 081b C7       		.byte	0xc7
 2094 081c 00       		.byte	0
 2095 081d 1D       		.uleb128 0x1d
 2096 081e DD050000 		.4byte	.LASF113
 2097 0822 09       		.byte	0x9
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 43


 2098 0823 1C       		.byte	0x1c
 2099 0824 0D080000 		.4byte	0x80d
 2100 0828 05       		.uleb128 0x5
 2101 0829 03       		.byte	0x3
 2102 082a 00000000 		.4byte	http_route
 2103 082e 1D       		.uleb128 0x1d
 2104 082f 44050000 		.4byte	.LASF114
 2105 0833 09       		.byte	0x9
 2106 0834 43       		.byte	0x43
 2107 0835 A3030000 		.4byte	0x3a3
 2108 0839 05       		.uleb128 0x5
 2109 083a 03       		.byte	0x3
 2110 083b 00000000 		.4byte	system_info
 2111 083f 1D       		.uleb128 0x1d
 2112 0840 09050000 		.4byte	.LASF115
 2113 0844 09       		.byte	0x9
 2114 0845 55       		.byte	0x55
 2115 0846 DF030000 		.4byte	0x3df
 2116 084a 05       		.uleb128 0x5
 2117 084b 03       		.byte	0x3
 2118 084c 00000000 		.4byte	system_settings
 2119 0850 1D       		.uleb128 0x1d
 2120 0851 53010000 		.4byte	.LASF116
 2121 0855 09       		.byte	0x9
 2122 0856 71       		.byte	0x71
 2123 0857 6C030000 		.4byte	0x36c
 2124 085b 05       		.uleb128 0x5
 2125 085c 03       		.byte	0x3
 2126 085d 00000000 		.4byte	alarmMeasure
 2127 0861 1D       		.uleb128 0x1d
 2128 0862 CF010000 		.4byte	.LASF117
 2129 0866 09       		.byte	0x9
 2130 0867 72       		.byte	0x72
 2131 0868 DB000000 		.4byte	0xdb
 2132 086c 05       		.uleb128 0x5
 2133 086d 03       		.byte	0x3
 2134 086e 00000000 		.4byte	timeToMeasure
 2135 0872 1D       		.uleb128 0x1d
 2136 0873 F5020000 		.4byte	.LASF118
 2137 0877 09       		.byte	0x9
 2138 0878 73       		.byte	0x73
 2139 0879 6C030000 		.4byte	0x36c
 2140 087d 05       		.uleb128 0x5
 2141 087e 03       		.byte	0x3
 2142 087f 00000000 		.4byte	alarmSync
 2143 0883 1D       		.uleb128 0x1d
 2144 0884 F5010000 		.4byte	.LASF119
 2145 0888 09       		.byte	0x9
 2146 0889 74       		.byte	0x74
 2147 088a DB000000 		.4byte	0xdb
 2148 088e 05       		.uleb128 0x5
 2149 088f 03       		.byte	0x3
 2150 0890 00000000 		.4byte	timeToSync
 2151 0894 1D       		.uleb128 0x1d
 2152 0895 5D040000 		.4byte	.LASF120
 2153 0899 09       		.byte	0x9
 2154 089a 75       		.byte	0x75
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 44


 2155 089b DB000000 		.4byte	0xdb
 2156 089f 05       		.uleb128 0x5
 2157 08a0 03       		.byte	0x3
 2158 08a1 00000000 		.4byte	timeToSycnRemoteParams
 2159 08a5 1E       		.uleb128 0x1e
 2160 08a6 68657900 		.ascii	"hey\000"
 2161 08aa 09       		.byte	0x9
 2162 08ab 76       		.byte	0x76
 2163 08ac DB000000 		.4byte	0xdb
 2164 08b0 05       		.uleb128 0x5
 2165 08b1 03       		.byte	0x3
 2166 08b2 00000000 		.4byte	hey
 2167 08b6 1D       		.uleb128 0x1d
 2168 08b7 9C030000 		.4byte	.LASF121
 2169 08bb 09       		.byte	0x9
 2170 08bc 7A       		.byte	0x7a
 2171 08bd 6C030000 		.4byte	0x36c
 2172 08c1 05       		.uleb128 0x5
 2173 08c2 03       		.byte	0x3
 2174 08c3 00000000 		.4byte	alarmAppLED
 2175 08c7 1D       		.uleb128 0x1d
 2176 08c8 84020000 		.4byte	.LASF122
 2177 08cc 09       		.byte	0x9
 2178 08cd 7B       		.byte	0x7b
 2179 08ce DB000000 		.4byte	0xdb
 2180 08d2 05       		.uleb128 0x5
 2181 08d3 03       		.byte	0x3
 2182 08d4 00000000 		.4byte	timeToAppLED
 2183 08d8 1D       		.uleb128 0x1d
 2184 08d9 72050000 		.4byte	.LASF123
 2185 08dd 09       		.byte	0x9
 2186 08de 7D       		.byte	0x7d
 2187 08df 6C030000 		.4byte	0x36c
 2188 08e3 05       		.uleb128 0x5
 2189 08e4 03       		.byte	0x3
 2190 08e5 00000000 		.4byte	alarmLevelSensor
 2191 08e9 1D       		.uleb128 0x1d
 2192 08ea 83010000 		.4byte	.LASF124
 2193 08ee 09       		.byte	0x9
 2194 08ef 7E       		.byte	0x7e
 2195 08f0 DB000000 		.4byte	0xdb
 2196 08f4 05       		.uleb128 0x5
 2197 08f5 03       		.byte	0x3
 2198 08f6 00000000 		.4byte	timetoLevelSensor
 2199 08fa 1D       		.uleb128 0x1d
 2200 08fb 24020000 		.4byte	.LASF125
 2201 08ff 09       		.byte	0x9
 2202 0900 80       		.byte	0x80
 2203 0901 6C030000 		.4byte	0x36c
 2204 0905 05       		.uleb128 0x5
 2205 0906 03       		.byte	0x3
 2206 0907 00000000 		.4byte	alarmDownstreamLevelSensor
 2207 090b 1D       		.uleb128 0x1d
 2208 090c 37040000 		.4byte	.LASF126
 2209 0910 09       		.byte	0x9
 2210 0911 81       		.byte	0x81
 2211 0912 DB000000 		.4byte	0xdb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 45


 2212 0916 05       		.uleb128 0x5
 2213 0917 03       		.byte	0x3
 2214 0918 00000000 		.4byte	timetoDownstreamLevelSensor
 2215 091c 1D       		.uleb128 0x1d
 2216 091d D2050000 		.4byte	.LASF127
 2217 0921 09       		.byte	0x9
 2218 0922 83       		.byte	0x83
 2219 0923 6C030000 		.4byte	0x36c
 2220 0927 05       		.uleb128 0x5
 2221 0928 03       		.byte	0x3
 2222 0929 00000000 		.4byte	alarmValve
 2223 092d 1D       		.uleb128 0x1d
 2224 092e 00000000 		.4byte	.LASF128
 2225 0932 09       		.byte	0x9
 2226 0933 84       		.byte	0x84
 2227 0934 DB000000 		.4byte	0xdb
 2228 0938 05       		.uleb128 0x5
 2229 0939 03       		.byte	0x3
 2230 093a 00000000 		.4byte	timeToValve
 2231 093e 00       		.byte	0
 2232              		.section	.debug_abbrev,"",%progbits
 2233              	.Ldebug_abbrev0:
 2234 0000 01       		.uleb128 0x1
 2235 0001 11       		.uleb128 0x11
 2236 0002 01       		.byte	0x1
 2237 0003 25       		.uleb128 0x25
 2238 0004 0E       		.uleb128 0xe
 2239 0005 13       		.uleb128 0x13
 2240 0006 0B       		.uleb128 0xb
 2241 0007 03       		.uleb128 0x3
 2242 0008 0E       		.uleb128 0xe
 2243 0009 1B       		.uleb128 0x1b
 2244 000a 0E       		.uleb128 0xe
 2245 000b 55       		.uleb128 0x55
 2246 000c 17       		.uleb128 0x17
 2247 000d 11       		.uleb128 0x11
 2248 000e 01       		.uleb128 0x1
 2249 000f 10       		.uleb128 0x10
 2250 0010 17       		.uleb128 0x17
 2251 0011 00       		.byte	0
 2252 0012 00       		.byte	0
 2253 0013 02       		.uleb128 0x2
 2254 0014 24       		.uleb128 0x24
 2255 0015 00       		.byte	0
 2256 0016 0B       		.uleb128 0xb
 2257 0017 0B       		.uleb128 0xb
 2258 0018 3E       		.uleb128 0x3e
 2259 0019 0B       		.uleb128 0xb
 2260 001a 03       		.uleb128 0x3
 2261 001b 0E       		.uleb128 0xe
 2262 001c 00       		.byte	0
 2263 001d 00       		.byte	0
 2264 001e 03       		.uleb128 0x3
 2265 001f 16       		.uleb128 0x16
 2266 0020 00       		.byte	0
 2267 0021 03       		.uleb128 0x3
 2268 0022 0E       		.uleb128 0xe
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 46


 2269 0023 3A       		.uleb128 0x3a
 2270 0024 0B       		.uleb128 0xb
 2271 0025 3B       		.uleb128 0x3b
 2272 0026 0B       		.uleb128 0xb
 2273 0027 49       		.uleb128 0x49
 2274 0028 13       		.uleb128 0x13
 2275 0029 00       		.byte	0
 2276 002a 00       		.byte	0
 2277 002b 04       		.uleb128 0x4
 2278 002c 24       		.uleb128 0x24
 2279 002d 00       		.byte	0
 2280 002e 0B       		.uleb128 0xb
 2281 002f 0B       		.uleb128 0xb
 2282 0030 3E       		.uleb128 0x3e
 2283 0031 0B       		.uleb128 0xb
 2284 0032 03       		.uleb128 0x3
 2285 0033 08       		.uleb128 0x8
 2286 0034 00       		.byte	0
 2287 0035 00       		.byte	0
 2288 0036 05       		.uleb128 0x5
 2289 0037 0F       		.uleb128 0xf
 2290 0038 00       		.byte	0
 2291 0039 0B       		.uleb128 0xb
 2292 003a 0B       		.uleb128 0xb
 2293 003b 49       		.uleb128 0x49
 2294 003c 13       		.uleb128 0x13
 2295 003d 00       		.byte	0
 2296 003e 00       		.byte	0
 2297 003f 06       		.uleb128 0x6
 2298 0040 26       		.uleb128 0x26
 2299 0041 00       		.byte	0
 2300 0042 49       		.uleb128 0x49
 2301 0043 13       		.uleb128 0x13
 2302 0044 00       		.byte	0
 2303 0045 00       		.byte	0
 2304 0046 07       		.uleb128 0x7
 2305 0047 01       		.uleb128 0x1
 2306 0048 01       		.byte	0x1
 2307 0049 49       		.uleb128 0x49
 2308 004a 13       		.uleb128 0x13
 2309 004b 01       		.uleb128 0x1
 2310 004c 13       		.uleb128 0x13
 2311 004d 00       		.byte	0
 2312 004e 00       		.byte	0
 2313 004f 08       		.uleb128 0x8
 2314 0050 21       		.uleb128 0x21
 2315 0051 00       		.byte	0
 2316 0052 49       		.uleb128 0x49
 2317 0053 13       		.uleb128 0x13
 2318 0054 2F       		.uleb128 0x2f
 2319 0055 0B       		.uleb128 0xb
 2320 0056 00       		.byte	0
 2321 0057 00       		.byte	0
 2322 0058 09       		.uleb128 0x9
 2323 0059 16       		.uleb128 0x16
 2324 005a 00       		.byte	0
 2325 005b 03       		.uleb128 0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 47


 2326 005c 0E       		.uleb128 0xe
 2327 005d 3A       		.uleb128 0x3a
 2328 005e 0B       		.uleb128 0xb
 2329 005f 3B       		.uleb128 0x3b
 2330 0060 05       		.uleb128 0x5
 2331 0061 49       		.uleb128 0x49
 2332 0062 13       		.uleb128 0x13
 2333 0063 00       		.byte	0
 2334 0064 00       		.byte	0
 2335 0065 0A       		.uleb128 0xa
 2336 0066 13       		.uleb128 0x13
 2337 0067 01       		.byte	0x1
 2338 0068 0B       		.uleb128 0xb
 2339 0069 05       		.uleb128 0x5
 2340 006a 3A       		.uleb128 0x3a
 2341 006b 0B       		.uleb128 0xb
 2342 006c 3B       		.uleb128 0x3b
 2343 006d 0B       		.uleb128 0xb
 2344 006e 01       		.uleb128 0x1
 2345 006f 13       		.uleb128 0x13
 2346 0070 00       		.byte	0
 2347 0071 00       		.byte	0
 2348 0072 0B       		.uleb128 0xb
 2349 0073 0D       		.uleb128 0xd
 2350 0074 00       		.byte	0
 2351 0075 03       		.uleb128 0x3
 2352 0076 0E       		.uleb128 0xe
 2353 0077 3A       		.uleb128 0x3a
 2354 0078 0B       		.uleb128 0xb
 2355 0079 3B       		.uleb128 0x3b
 2356 007a 0B       		.uleb128 0xb
 2357 007b 49       		.uleb128 0x49
 2358 007c 13       		.uleb128 0x13
 2359 007d 38       		.uleb128 0x38
 2360 007e 0B       		.uleb128 0xb
 2361 007f 00       		.byte	0
 2362 0080 00       		.byte	0
 2363 0081 0C       		.uleb128 0xc
 2364 0082 13       		.uleb128 0x13
 2365 0083 01       		.byte	0x1
 2366 0084 0B       		.uleb128 0xb
 2367 0085 0B       		.uleb128 0xb
 2368 0086 3A       		.uleb128 0x3a
 2369 0087 0B       		.uleb128 0xb
 2370 0088 3B       		.uleb128 0x3b
 2371 0089 0B       		.uleb128 0xb
 2372 008a 01       		.uleb128 0x1
 2373 008b 13       		.uleb128 0x13
 2374 008c 00       		.byte	0
 2375 008d 00       		.byte	0
 2376 008e 0D       		.uleb128 0xd
 2377 008f 0D       		.uleb128 0xd
 2378 0090 00       		.byte	0
 2379 0091 03       		.uleb128 0x3
 2380 0092 08       		.uleb128 0x8
 2381 0093 3A       		.uleb128 0x3a
 2382 0094 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 48


 2383 0095 3B       		.uleb128 0x3b
 2384 0096 0B       		.uleb128 0xb
 2385 0097 49       		.uleb128 0x49
 2386 0098 13       		.uleb128 0x13
 2387 0099 38       		.uleb128 0x38
 2388 009a 0B       		.uleb128 0xb
 2389 009b 00       		.byte	0
 2390 009c 00       		.byte	0
 2391 009d 0E       		.uleb128 0xe
 2392 009e 35       		.uleb128 0x35
 2393 009f 00       		.byte	0
 2394 00a0 49       		.uleb128 0x49
 2395 00a1 13       		.uleb128 0x13
 2396 00a2 00       		.byte	0
 2397 00a3 00       		.byte	0
 2398 00a4 0F       		.uleb128 0xf
 2399 00a5 2E       		.uleb128 0x2e
 2400 00a6 00       		.byte	0
 2401 00a7 3F       		.uleb128 0x3f
 2402 00a8 19       		.uleb128 0x19
 2403 00a9 03       		.uleb128 0x3
 2404 00aa 0E       		.uleb128 0xe
 2405 00ab 3A       		.uleb128 0x3a
 2406 00ac 0B       		.uleb128 0xb
 2407 00ad 3B       		.uleb128 0x3b
 2408 00ae 0B       		.uleb128 0xb
 2409 00af 27       		.uleb128 0x27
 2410 00b0 19       		.uleb128 0x19
 2411 00b1 49       		.uleb128 0x49
 2412 00b2 13       		.uleb128 0x13
 2413 00b3 11       		.uleb128 0x11
 2414 00b4 01       		.uleb128 0x1
 2415 00b5 12       		.uleb128 0x12
 2416 00b6 06       		.uleb128 0x6
 2417 00b7 40       		.uleb128 0x40
 2418 00b8 18       		.uleb128 0x18
 2419 00b9 9742     		.uleb128 0x2117
 2420 00bb 19       		.uleb128 0x19
 2421 00bc 00       		.byte	0
 2422 00bd 00       		.byte	0
 2423 00be 10       		.uleb128 0x10
 2424 00bf 2E       		.uleb128 0x2e
 2425 00c0 00       		.byte	0
 2426 00c1 3F       		.uleb128 0x3f
 2427 00c2 19       		.uleb128 0x19
 2428 00c3 03       		.uleb128 0x3
 2429 00c4 0E       		.uleb128 0xe
 2430 00c5 3A       		.uleb128 0x3a
 2431 00c6 0B       		.uleb128 0xb
 2432 00c7 3B       		.uleb128 0x3b
 2433 00c8 0B       		.uleb128 0xb
 2434 00c9 27       		.uleb128 0x27
 2435 00ca 19       		.uleb128 0x19
 2436 00cb 11       		.uleb128 0x11
 2437 00cc 01       		.uleb128 0x1
 2438 00cd 12       		.uleb128 0x12
 2439 00ce 06       		.uleb128 0x6
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 49


 2440 00cf 40       		.uleb128 0x40
 2441 00d0 18       		.uleb128 0x18
 2442 00d1 9642     		.uleb128 0x2116
 2443 00d3 19       		.uleb128 0x19
 2444 00d4 00       		.byte	0
 2445 00d5 00       		.byte	0
 2446 00d6 11       		.uleb128 0x11
 2447 00d7 2E       		.uleb128 0x2e
 2448 00d8 01       		.byte	0x1
 2449 00d9 3F       		.uleb128 0x3f
 2450 00da 19       		.uleb128 0x19
 2451 00db 03       		.uleb128 0x3
 2452 00dc 0E       		.uleb128 0xe
 2453 00dd 3A       		.uleb128 0x3a
 2454 00de 0B       		.uleb128 0xb
 2455 00df 3B       		.uleb128 0x3b
 2456 00e0 0B       		.uleb128 0xb
 2457 00e1 27       		.uleb128 0x27
 2458 00e2 19       		.uleb128 0x19
 2459 00e3 11       		.uleb128 0x11
 2460 00e4 01       		.uleb128 0x1
 2461 00e5 12       		.uleb128 0x12
 2462 00e6 06       		.uleb128 0x6
 2463 00e7 40       		.uleb128 0x40
 2464 00e8 18       		.uleb128 0x18
 2465 00e9 9642     		.uleb128 0x2116
 2466 00eb 19       		.uleb128 0x19
 2467 00ec 01       		.uleb128 0x1
 2468 00ed 13       		.uleb128 0x13
 2469 00ee 00       		.byte	0
 2470 00ef 00       		.byte	0
 2471 00f0 12       		.uleb128 0x12
 2472 00f1 34       		.uleb128 0x34
 2473 00f2 00       		.byte	0
 2474 00f3 03       		.uleb128 0x3
 2475 00f4 0E       		.uleb128 0xe
 2476 00f5 3A       		.uleb128 0x3a
 2477 00f6 0B       		.uleb128 0xb
 2478 00f7 3B       		.uleb128 0x3b
 2479 00f8 0B       		.uleb128 0xb
 2480 00f9 49       		.uleb128 0x49
 2481 00fa 13       		.uleb128 0x13
 2482 00fb 02       		.uleb128 0x2
 2483 00fc 18       		.uleb128 0x18
 2484 00fd 00       		.byte	0
 2485 00fe 00       		.byte	0
 2486 00ff 13       		.uleb128 0x13
 2487 0100 05       		.uleb128 0x5
 2488 0101 00       		.byte	0
 2489 0102 03       		.uleb128 0x3
 2490 0103 0E       		.uleb128 0xe
 2491 0104 3A       		.uleb128 0x3a
 2492 0105 0B       		.uleb128 0xb
 2493 0106 3B       		.uleb128 0x3b
 2494 0107 0B       		.uleb128 0xb
 2495 0108 49       		.uleb128 0x49
 2496 0109 13       		.uleb128 0x13
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 50


 2497 010a 02       		.uleb128 0x2
 2498 010b 18       		.uleb128 0x18
 2499 010c 00       		.byte	0
 2500 010d 00       		.byte	0
 2501 010e 14       		.uleb128 0x14
 2502 010f 2E       		.uleb128 0x2e
 2503 0110 01       		.byte	0x1
 2504 0111 3F       		.uleb128 0x3f
 2505 0112 19       		.uleb128 0x19
 2506 0113 03       		.uleb128 0x3
 2507 0114 0E       		.uleb128 0xe
 2508 0115 3A       		.uleb128 0x3a
 2509 0116 0B       		.uleb128 0xb
 2510 0117 3B       		.uleb128 0x3b
 2511 0118 0B       		.uleb128 0xb
 2512 0119 49       		.uleb128 0x49
 2513 011a 13       		.uleb128 0x13
 2514 011b 11       		.uleb128 0x11
 2515 011c 01       		.uleb128 0x1
 2516 011d 12       		.uleb128 0x12
 2517 011e 06       		.uleb128 0x6
 2518 011f 40       		.uleb128 0x40
 2519 0120 18       		.uleb128 0x18
 2520 0121 9642     		.uleb128 0x2116
 2521 0123 19       		.uleb128 0x19
 2522 0124 01       		.uleb128 0x1
 2523 0125 13       		.uleb128 0x13
 2524 0126 00       		.byte	0
 2525 0127 00       		.byte	0
 2526 0128 15       		.uleb128 0x15
 2527 0129 0B       		.uleb128 0xb
 2528 012a 01       		.byte	0x1
 2529 012b 11       		.uleb128 0x11
 2530 012c 01       		.uleb128 0x1
 2531 012d 12       		.uleb128 0x12
 2532 012e 06       		.uleb128 0x6
 2533 012f 00       		.byte	0
 2534 0130 00       		.byte	0
 2535 0131 16       		.uleb128 0x16
 2536 0132 0B       		.uleb128 0xb
 2537 0133 01       		.byte	0x1
 2538 0134 55       		.uleb128 0x55
 2539 0135 17       		.uleb128 0x17
 2540 0136 00       		.byte	0
 2541 0137 00       		.byte	0
 2542 0138 17       		.uleb128 0x17
 2543 0139 2E       		.uleb128 0x2e
 2544 013a 01       		.byte	0x1
 2545 013b 3F       		.uleb128 0x3f
 2546 013c 19       		.uleb128 0x19
 2547 013d 03       		.uleb128 0x3
 2548 013e 0E       		.uleb128 0xe
 2549 013f 3A       		.uleb128 0x3a
 2550 0140 0B       		.uleb128 0xb
 2551 0141 3B       		.uleb128 0x3b
 2552 0142 0B       		.uleb128 0xb
 2553 0143 27       		.uleb128 0x27
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 51


 2554 0144 19       		.uleb128 0x19
 2555 0145 49       		.uleb128 0x49
 2556 0146 13       		.uleb128 0x13
 2557 0147 11       		.uleb128 0x11
 2558 0148 01       		.uleb128 0x1
 2559 0149 12       		.uleb128 0x12
 2560 014a 06       		.uleb128 0x6
 2561 014b 40       		.uleb128 0x40
 2562 014c 18       		.uleb128 0x18
 2563 014d 9642     		.uleb128 0x2116
 2564 014f 19       		.uleb128 0x19
 2565 0150 01       		.uleb128 0x1
 2566 0151 13       		.uleb128 0x13
 2567 0152 00       		.byte	0
 2568 0153 00       		.byte	0
 2569 0154 18       		.uleb128 0x18
 2570 0155 05       		.uleb128 0x5
 2571 0156 00       		.byte	0
 2572 0157 03       		.uleb128 0x3
 2573 0158 08       		.uleb128 0x8
 2574 0159 3A       		.uleb128 0x3a
 2575 015a 0B       		.uleb128 0xb
 2576 015b 3B       		.uleb128 0x3b
 2577 015c 0B       		.uleb128 0xb
 2578 015d 49       		.uleb128 0x49
 2579 015e 13       		.uleb128 0x13
 2580 015f 02       		.uleb128 0x2
 2581 0160 18       		.uleb128 0x18
 2582 0161 00       		.byte	0
 2583 0162 00       		.byte	0
 2584 0163 19       		.uleb128 0x19
 2585 0164 34       		.uleb128 0x34
 2586 0165 00       		.byte	0
 2587 0166 03       		.uleb128 0x3
 2588 0167 08       		.uleb128 0x8
 2589 0168 3A       		.uleb128 0x3a
 2590 0169 0B       		.uleb128 0xb
 2591 016a 3B       		.uleb128 0x3b
 2592 016b 0B       		.uleb128 0xb
 2593 016c 49       		.uleb128 0x49
 2594 016d 13       		.uleb128 0x13
 2595 016e 02       		.uleb128 0x2
 2596 016f 18       		.uleb128 0x18
 2597 0170 00       		.byte	0
 2598 0171 00       		.byte	0
 2599 0172 1A       		.uleb128 0x1a
 2600 0173 2E       		.uleb128 0x2e
 2601 0174 01       		.byte	0x1
 2602 0175 3F       		.uleb128 0x3f
 2603 0176 19       		.uleb128 0x19
 2604 0177 03       		.uleb128 0x3
 2605 0178 0E       		.uleb128 0xe
 2606 0179 3A       		.uleb128 0x3a
 2607 017a 0B       		.uleb128 0xb
 2608 017b 3B       		.uleb128 0x3b
 2609 017c 0B       		.uleb128 0xb
 2610 017d 27       		.uleb128 0x27
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 52


 2611 017e 19       		.uleb128 0x19
 2612 017f 11       		.uleb128 0x11
 2613 0180 01       		.uleb128 0x1
 2614 0181 12       		.uleb128 0x12
 2615 0182 06       		.uleb128 0x6
 2616 0183 40       		.uleb128 0x40
 2617 0184 18       		.uleb128 0x18
 2618 0185 9742     		.uleb128 0x2117
 2619 0187 19       		.uleb128 0x19
 2620 0188 01       		.uleb128 0x1
 2621 0189 13       		.uleb128 0x13
 2622 018a 00       		.byte	0
 2623 018b 00       		.byte	0
 2624 018c 1B       		.uleb128 0x1b
 2625 018d 21       		.uleb128 0x21
 2626 018e 00       		.byte	0
 2627 018f 49       		.uleb128 0x49
 2628 0190 13       		.uleb128 0x13
 2629 0191 2F       		.uleb128 0x2f
 2630 0192 05       		.uleb128 0x5
 2631 0193 00       		.byte	0
 2632 0194 00       		.byte	0
 2633 0195 1C       		.uleb128 0x1c
 2634 0196 34       		.uleb128 0x34
 2635 0197 00       		.byte	0
 2636 0198 03       		.uleb128 0x3
 2637 0199 0E       		.uleb128 0xe
 2638 019a 3A       		.uleb128 0x3a
 2639 019b 0B       		.uleb128 0xb
 2640 019c 3B       		.uleb128 0x3b
 2641 019d 05       		.uleb128 0x5
 2642 019e 49       		.uleb128 0x49
 2643 019f 13       		.uleb128 0x13
 2644 01a0 3F       		.uleb128 0x3f
 2645 01a1 19       		.uleb128 0x19
 2646 01a2 3C       		.uleb128 0x3c
 2647 01a3 19       		.uleb128 0x19
 2648 01a4 00       		.byte	0
 2649 01a5 00       		.byte	0
 2650 01a6 1D       		.uleb128 0x1d
 2651 01a7 34       		.uleb128 0x34
 2652 01a8 00       		.byte	0
 2653 01a9 03       		.uleb128 0x3
 2654 01aa 0E       		.uleb128 0xe
 2655 01ab 3A       		.uleb128 0x3a
 2656 01ac 0B       		.uleb128 0xb
 2657 01ad 3B       		.uleb128 0x3b
 2658 01ae 0B       		.uleb128 0xb
 2659 01af 49       		.uleb128 0x49
 2660 01b0 13       		.uleb128 0x13
 2661 01b1 3F       		.uleb128 0x3f
 2662 01b2 19       		.uleb128 0x19
 2663 01b3 02       		.uleb128 0x2
 2664 01b4 18       		.uleb128 0x18
 2665 01b5 00       		.byte	0
 2666 01b6 00       		.byte	0
 2667 01b7 1E       		.uleb128 0x1e
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 53


 2668 01b8 34       		.uleb128 0x34
 2669 01b9 00       		.byte	0
 2670 01ba 03       		.uleb128 0x3
 2671 01bb 08       		.uleb128 0x8
 2672 01bc 3A       		.uleb128 0x3a
 2673 01bd 0B       		.uleb128 0xb
 2674 01be 3B       		.uleb128 0x3b
 2675 01bf 0B       		.uleb128 0xb
 2676 01c0 49       		.uleb128 0x49
 2677 01c1 13       		.uleb128 0x13
 2678 01c2 3F       		.uleb128 0x3f
 2679 01c3 19       		.uleb128 0x19
 2680 01c4 02       		.uleb128 0x2
 2681 01c5 18       		.uleb128 0x18
 2682 01c6 00       		.byte	0
 2683 01c7 00       		.byte	0
 2684 01c8 00       		.byte	0
 2685              		.section	.debug_aranges,"",%progbits
 2686 0000 6C000000 		.4byte	0x6c
 2687 0004 0200     		.2byte	0x2
 2688 0006 00000000 		.4byte	.Ldebug_info0
 2689 000a 04       		.byte	0x4
 2690 000b 00       		.byte	0
 2691 000c 0000     		.2byte	0
 2692 000e 0000     		.2byte	0
 2693 0010 00000000 		.4byte	.LFB64
 2694 0014 14000000 		.4byte	.LFE64-.LFB64
 2695 0018 00000000 		.4byte	.LFB65
 2696 001c 14000000 		.4byte	.LFE65-.LFB65
 2697 0020 00000000 		.4byte	.LFB66
 2698 0024 28000000 		.4byte	.LFE66-.LFB66
 2699 0028 00000000 		.4byte	.LFB67
 2700 002c 70000000 		.4byte	.LFE67-.LFB67
 2701 0030 00000000 		.4byte	.LFB68
 2702 0034 1C000000 		.4byte	.LFE68-.LFB68
 2703 0038 00000000 		.4byte	.LFB69
 2704 003c 00010000 		.4byte	.LFE69-.LFB69
 2705 0040 00000000 		.4byte	.LFB70
 2706 0044 1C010000 		.4byte	.LFE70-.LFB70
 2707 0048 00000000 		.4byte	.LFB71
 2708 004c CC000000 		.4byte	.LFE71-.LFB71
 2709 0050 00000000 		.4byte	.LFB72
 2710 0054 8E000000 		.4byte	.LFE72-.LFB72
 2711 0058 00000000 		.4byte	.LFB73
 2712 005c 98000000 		.4byte	.LFE73-.LFB73
 2713 0060 00000000 		.4byte	.LFB74
 2714 0064 2A000000 		.4byte	.LFE74-.LFB74
 2715 0068 00000000 		.4byte	0
 2716 006c 00000000 		.4byte	0
 2717              		.section	.debug_ranges,"",%progbits
 2718              	.Ldebug_ranges0:
 2719 0000 70000000 		.4byte	.LBB3
 2720 0004 C0000000 		.4byte	.LBE3
 2721 0008 D2000000 		.4byte	.LBB4
 2722 000c D4000000 		.4byte	.LBE4
 2723 0010 00000000 		.4byte	0
 2724 0014 00000000 		.4byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 54


 2725 0018 00000000 		.4byte	.LFB64
 2726 001c 14000000 		.4byte	.LFE64
 2727 0020 00000000 		.4byte	.LFB65
 2728 0024 14000000 		.4byte	.LFE65
 2729 0028 00000000 		.4byte	.LFB66
 2730 002c 28000000 		.4byte	.LFE66
 2731 0030 00000000 		.4byte	.LFB67
 2732 0034 70000000 		.4byte	.LFE67
 2733 0038 00000000 		.4byte	.LFB68
 2734 003c 1C000000 		.4byte	.LFE68
 2735 0040 00000000 		.4byte	.LFB69
 2736 0044 00010000 		.4byte	.LFE69
 2737 0048 00000000 		.4byte	.LFB70
 2738 004c 1C010000 		.4byte	.LFE70
 2739 0050 00000000 		.4byte	.LFB71
 2740 0054 CC000000 		.4byte	.LFE71
 2741 0058 00000000 		.4byte	.LFB72
 2742 005c 8E000000 		.4byte	.LFE72
 2743 0060 00000000 		.4byte	.LFB73
 2744 0064 98000000 		.4byte	.LFE73
 2745 0068 00000000 		.4byte	.LFB74
 2746 006c 2A000000 		.4byte	.LFE74
 2747 0070 00000000 		.4byte	0
 2748 0074 00000000 		.4byte	0
 2749              		.section	.debug_line,"",%progbits
 2750              	.Ldebug_line0:
 2751 0000 15030000 		.section	.debug_str,"MS",%progbits,1
 2751      0200CB01 
 2751      00000201 
 2751      FB0E0D00 
 2751      01010101 
 2752              	.LASF128:
 2753 0000 74696D65 		.ascii	"timeToValve\000"
 2753      546F5661 
 2753      6C766500 
 2754              	.LASF19:
 2755 000c 75696E74 		.ascii	"uint16\000"
 2755      313600
 2756              	.LASF29:
 2757 0013 6E756D5F 		.ascii	"num_invalid_readings\000"
 2757      696E7661 
 2757      6C69645F 
 2757      72656164 
 2757      696E6773 
 2758              	.LASF131:
 2759 0028 433A5C55 		.ascii	"C:\\Users\\dantz\\Documents\\GitHub\\notoriOS\\noto"
 2759      73657273 
 2759      5C64616E 
 2759      747A5C44 
 2759      6F63756D 
 2760 0055 72694F53 		.ascii	"riOS.cydsn\000"
 2760      2E637964 
 2760      736E00
 2761              	.LASF101:
 2762 0060 62756666 		.ascii	"buffer_overflow\000"
 2762      65725F6F 
 2762      76657266 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 55


 2762      6C6F7700 
 2763              	.LASF4:
 2764 0070 5F5F7569 		.ascii	"__uint8_t\000"
 2764      6E74385F 
 2764      7400
 2765              	.LASF60:
 2766 007a 636F756E 		.ascii	"countDownResetCondition\000"
 2766      74446F77 
 2766      6E526573 
 2766      6574436F 
 2766      6E646974 
 2767              	.LASF129:
 2768 0092 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2768      43313120 
 2768      352E342E 
 2768      31203230 
 2768      31363036 
 2769 00c5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2769      20726576 
 2769      6973696F 
 2769      6E203233 
 2769      37373135 
 2770 00f8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2770      66756E63 
 2770      74696F6E 
 2770      2D736563 
 2770      74696F6E 
 2771              	.LASF89:
 2772 0120 75617274 		.ascii	"uart_chars\000"
 2772      5F636861 
 2772      727300
 2773              	.LASF9:
 2774 012b 6C6F6E67 		.ascii	"long long unsigned int\000"
 2774      206C6F6E 
 2774      6720756E 
 2774      7369676E 
 2774      65642069 
 2775              	.LASF105:
 2776 0142 6D6F6465 		.ascii	"modem_state\000"
 2776      6D5F7374 
 2776      61746500 
 2777              	.LASF82:
 2778 014e 74657374 		.ascii	"test\000"
 2778      00
 2779              	.LASF116:
 2780 0153 616C6172 		.ascii	"alarmMeasure\000"
 2780      6D4D6561 
 2780      73757265 
 2780      00
 2781              	.LASF94:
 2782 0160 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2782      52784275 
 2782      66666572 
 2782      00
 2783              	.LASF130:
 2784 016d 6C657665 		.ascii	"level_sensor.c\000"
 2784      6C5F7365 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 56


 2784      6E736F72 
 2784      2E6300
 2785              	.LASF86:
 2786 017c 6D656469 		.ascii	"median\000"
 2786      616E00
 2787              	.LASF124:
 2788 0183 74696D65 		.ascii	"timetoLevelSensor\000"
 2788      746F4C65 
 2788      76656C53 
 2788      656E736F 
 2788      7200
 2789              	.LASF107:
 2790 0195 6D6F6465 		.ascii	"modem_stats\000"
 2790      6D5F7374 
 2790      61747300 
 2791              	.LASF8:
 2792 01a1 6C6F6E67 		.ascii	"long long int\000"
 2792      206C6F6E 
 2792      6720696E 
 2792      7400
 2793              	.LASF0:
 2794 01af 7369676E 		.ascii	"signed char\000"
 2794      65642063 
 2794      68617200 
 2795              	.LASF40:
 2796 01bb 65636E6F 		.ascii	"ecno\000"
 2796      00
 2797              	.LASF57:
 2798 01c0 636F756E 		.ascii	"countDownValue\000"
 2798      74446F77 
 2798      6E56616C 
 2798      756500
 2799              	.LASF117:
 2800 01cf 74696D65 		.ascii	"timeToMeasure\000"
 2800      546F4D65 
 2800      61737572 
 2800      6500
 2801              	.LASF43:
 2802 01dd 74696D65 		.ascii	"time_to_network_connect\000"
 2802      5F746F5F 
 2802      6E657477 
 2802      6F726B5F 
 2802      636F6E6E 
 2803              	.LASF119:
 2804 01f5 74696D65 		.ascii	"timeToSync\000"
 2804      546F5379 
 2804      6E6300
 2805              	.LASF72:
 2806 0200 6C657665 		.ascii	"level_sensor\000"
 2806      6C5F7365 
 2806      6E736F72 
 2806      00
 2807              	.LASF112:
 2808 020d 68747470 		.ascii	"http_body\000"
 2808      5F626F64 
 2808      7900
 2809              	.LASF37:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 57


 2810 0217 6D6F6465 		.ascii	"modem_info_t\000"
 2810      6D5F696E 
 2810      666F5F74 
 2810      00
 2811              	.LASF125:
 2812 0224 616C6172 		.ascii	"alarmDownstreamLevelSensor\000"
 2812      6D446F77 
 2812      6E737472 
 2812      65616D4C 
 2812      6576656C 
 2813              	.LASF38:
 2814 023f 72786C65 		.ascii	"rxlev\000"
 2814      7600
 2815              	.LASF6:
 2816 0245 6C6F6E67 		.ascii	"long int\000"
 2816      20696E74 
 2816      00
 2817              	.LASF58:
 2818 024e 63757272 		.ascii	"currentCountDownValue\000"
 2818      656E7443 
 2818      6F756E74 
 2818      446F776E 
 2818      56616C75 
 2819              	.LASF61:
 2820 0264 616C6172 		.ascii	"alarm\000"
 2820      6D00
 2821              	.LASF18:
 2822 026a 75696E74 		.ascii	"uint8\000"
 2822      3800
 2823              	.LASF78:
 2824 0270 6C657665 		.ascii	"level_sensor_output\000"
 2824      6C5F7365 
 2824      6E736F72 
 2824      5F6F7574 
 2824      70757400 
 2825              	.LASF122:
 2826 0284 74696D65 		.ascii	"timeToAppLED\000"
 2826      546F4170 
 2826      704C4544 
 2826      00
 2827              	.LASF21:
 2828 0291 696E7433 		.ascii	"int32\000"
 2828      3200
 2829              	.LASF46:
 2830 0297 6E6F6465 		.ascii	"node_type\000"
 2830      5F747970 
 2830      6500
 2831              	.LASF80:
 2832 02a1 72656164 		.ascii	"reading\000"
 2832      696E6700 
 2833              	.LASF85:
 2834 02a9 61727261 		.ascii	"array\000"
 2834      7900
 2835              	.LASF63:
 2836 02af 63686970 		.ascii	"chip_uniqueId\000"
 2836      5F756E69 
 2836      71756549 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 58


 2836      6400
 2837              	.LASF35:
 2838 02bd 6D6F6465 		.ascii	"model_id\000"
 2838      6C5F6964 
 2838      00
 2839              	.LASF26:
 2840 02c6 616C6C5F 		.ascii	"all_level_readings\000"
 2840      6C657665 
 2840      6C5F7265 
 2840      6164696E 
 2840      677300
 2841              	.LASF91:
 2842 02d9 6C696E65 		.ascii	"line\000"
 2842      00
 2843              	.LASF87:
 2844 02de 736F7274 		.ascii	"sort\000"
 2844      00
 2845              	.LASF50:
 2846 02e3 64656275 		.ascii	"debug_level\000"
 2846      675F6C65 
 2846      76656C00 
 2847              	.LASF31:
 2848 02ef 76616C75 		.ascii	"value\000"
 2848      6500
 2849              	.LASF118:
 2850 02f5 616C6172 		.ascii	"alarmSync\000"
 2850      6D53796E 
 2850      6300
 2851              	.LASF109:
 2852 02ff 4170705F 		.ascii	"App_LED_enabled\000"
 2852      4C45445F 
 2852      656E6162 
 2852      6C656400 
 2853              	.LASF33:
 2854 030f 6B65795F 		.ascii	"key_value_t\000"
 2854      76616C75 
 2854      655F7400 
 2855              	.LASF28:
 2856 031b 6E756D5F 		.ascii	"num_valid_readings\000"
 2856      76616C69 
 2856      645F7265 
 2856      6164696E 
 2856      677300
 2857              	.LASF7:
 2858 032e 6C6F6E67 		.ascii	"long unsigned int\000"
 2858      20756E73 
 2858      69676E65 
 2858      6420696E 
 2858      7400
 2859              	.LASF68:
 2860 0340 75617274 		.ascii	"uart_string\000"
 2860      5F737472 
 2860      696E6700 
 2861              	.LASF104:
 2862 034c 64617461 		.ascii	"data\000"
 2862      00
 2863              	.LASF66:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 59


 2864 0351 65705F70 		.ascii	"ep_port\000"
 2864      6F727400 
 2865              	.LASF62:
 2866 0359 6D6F6465 		.ascii	"modem_info\000"
 2866      6D5F696E 
 2866      666F00
 2867              	.LASF65:
 2868 0364 65705F68 		.ascii	"ep_host\000"
 2868      6F737400 
 2869              	.LASF100:
 2870 036c 76616C76 		.ascii	"valve_inbox\000"
 2870      655F696E 
 2870      626F7800 
 2871              	.LASF83:
 2872 0378 73656E73 		.ascii	"sensor\000"
 2872      6F7200
 2873              	.LASF44:
 2874 037f 74696D65 		.ascii	"time_to_acquire_ip\000"
 2874      5F746F5F 
 2874      61637175 
 2874      6972655F 
 2874      697000
 2875              	.LASF2:
 2876 0392 73686F72 		.ascii	"short int\000"
 2876      7420696E 
 2876      7400
 2877              	.LASF121:
 2878 039c 616C6172 		.ascii	"alarmAppLED\000"
 2878      6D417070 
 2878      4C454400 
 2879              	.LASF106:
 2880 03a8 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2880      6D5F7374 
 2880      6172745F 
 2880      74696D65 
 2880      5F737461 
 2881              	.LASF98:
 2882 03bf 646F776E 		.ascii	"downstream_level_sensor_enabled\000"
 2882      73747265 
 2882      616D5F6C 
 2882      6576656C 
 2882      5F73656E 
 2883              	.LASF64:
 2884 03df 7379735F 		.ascii	"sys_info_t\000"
 2884      696E666F 
 2884      5F7400
 2885              	.LASF56:
 2886 03ea 75706461 		.ascii	"updatable_parameters_t\000"
 2886      7461626C 
 2886      655F7061 
 2886      72616D65 
 2886      74657273 
 2887              	.LASF102:
 2888 0401 64617461 		.ascii	"dataPointsInStack\000"
 2888      506F696E 
 2888      7473496E 
 2888      53746163 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 60


 2888      6B00
 2889              	.LASF90:
 2890 0413 6E756D5F 		.ascii	"num_chars\000"
 2890      63686172 
 2890      7300
 2891              	.LASF70:
 2892 041d 4C657665 		.ascii	"Level_Sensor_ISR\000"
 2892      6C5F5365 
 2892      6E736F72 
 2892      5F495352 
 2892      00
 2893              	.LASF14:
 2894 042e 73697A65 		.ascii	"sizetype\000"
 2894      74797065 
 2894      00
 2895              	.LASF126:
 2896 0437 74696D65 		.ascii	"timetoDownstreamLevelSensor\000"
 2896      746F446F 
 2896      776E7374 
 2896      7265616D 
 2896      4C657665 
 2897              	.LASF22:
 2898 0453 74657374 		.ascii	"test_name\000"
 2898      5F6E616D 
 2898      6500
 2899              	.LASF120:
 2900 045d 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2900      546F5379 
 2900      636E5265 
 2900      6D6F7465 
 2900      50617261 
 2901              	.LASF32:
 2902 0474 74696D65 		.ascii	"timeStamp\000"
 2902      5374616D 
 2902      7000
 2903              	.LASF92:
 2904 047e 6D617463 		.ascii	"match\000"
 2904      6800
 2905              	.LASF108:
 2906 0484 75706461 		.ascii	"updatable_parameters\000"
 2906      7461626C 
 2906      655F7061 
 2906      72616D65 
 2906      74657273 
 2907              	.LASF69:
 2908 0499 75617274 		.ascii	"uart_len\000"
 2908      5F6C656E 
 2908      00
 2909              	.LASF93:
 2910 04a2 70617474 		.ascii	"pattern\000"
 2910      65726E00 
 2911              	.LASF88:
 2912 04aa 73776170 		.ascii	"swap\000"
 2912      00
 2913              	.LASF74:
 2914 04af 636F6D70 		.ascii	"compare_location\000"
 2914      6172655F 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 61


 2914      6C6F6361 
 2914      74696F6E 
 2914      00
 2915              	.LASF17:
 2916 04c0 666C6F61 		.ascii	"float\000"
 2916      7400
 2917              	.LASF81:
 2918 04c6 6C657665 		.ascii	"level_sensor_test\000"
 2918      6C5F7365 
 2918      6E736F72 
 2918      5F746573 
 2918      7400
 2919              	.LASF30:
 2920 04d8 6C657665 		.ascii	"level_sensor_t\000"
 2920      6C5F7365 
 2920      6E736F72 
 2920      5F7400
 2921              	.LASF79:
 2922 04e7 746F6B65 		.ascii	"token\000"
 2922      6E00
 2923              	.LASF55:
 2924 04ed 5F426F6F 		.ascii	"_Bool\000"
 2924      6C00
 2925              	.LASF12:
 2926 04f3 696E7433 		.ascii	"int32_t\000"
 2926      325F7400 
 2927              	.LASF1:
 2928 04fb 756E7369 		.ascii	"unsigned char\000"
 2928      676E6564 
 2928      20636861 
 2928      7200
 2929              	.LASF115:
 2930 0509 73797374 		.ascii	"system_settings\000"
 2930      656D5F73 
 2930      65747469 
 2930      6E677300 
 2931              	.LASF25:
 2932 0519 74657374 		.ascii	"test_t\000"
 2932      5F7400
 2933              	.LASF42:
 2934 0520 72737270 		.ascii	"rsrp\000"
 2934      00
 2935              	.LASF41:
 2936 0525 72737271 		.ascii	"rsrq\000"
 2936      00
 2937              	.LASF49:
 2938 052a 73796E63 		.ascii	"sync_time\000"
 2938      5F74696D 
 2938      6500
 2939              	.LASF132:
 2940 0534 75617274 		.ascii	"uart_clear\000"
 2940      5F636C65 
 2940      617200
 2941              	.LASF39:
 2942 053f 72736370 		.ascii	"rscp\000"
 2942      00
 2943              	.LASF114:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 62


 2944 0544 73797374 		.ascii	"system_info\000"
 2944      656D5F69 
 2944      6E666F00 
 2945              	.LASF36:
 2946 0550 696D6569 		.ascii	"imei\000"
 2946      00
 2947              	.LASF24:
 2948 0555 72656173 		.ascii	"reason\000"
 2948      6F6E00
 2949              	.LASF73:
 2950 055c 72785F63 		.ascii	"rx_char\000"
 2950      68617200 
 2951              	.LASF45:
 2952 0564 6D6F6465 		.ascii	"modem_stats_t\000"
 2952      6D5F7374 
 2952      6174735F 
 2952      7400
 2953              	.LASF123:
 2954 0572 616C6172 		.ascii	"alarmLevelSensor\000"
 2954      6D4C6576 
 2954      656C5365 
 2954      6E736F72 
 2954      00
 2955              	.LASF52:
 2956 0583 4C657665 		.ascii	"Level_Sensor_freq\000"
 2956      6C5F5365 
 2956      6E736F72 
 2956      5F667265 
 2956      7100
 2957              	.LASF95:
 2958 0595 6C657665 		.ascii	"level_sensor_inbox\000"
 2958      6C5F7365 
 2958      6E736F72 
 2958      5F696E62 
 2958      6F7800
 2959              	.LASF13:
 2960 05a8 6C6F6E67 		.ascii	"long double\000"
 2960      20646F75 
 2960      626C6500 
 2961              	.LASF75:
 2962 05b4 635F7469 		.ascii	"c_timeStamp\000"
 2962      6D655374 
 2962      616D7000 
 2963              	.LASF15:
 2964 05c0 63686172 		.ascii	"char\000"
 2964      00
 2965              	.LASF10:
 2966 05c5 756E7369 		.ascii	"unsigned int\000"
 2966      676E6564 
 2966      20696E74 
 2966      00
 2967              	.LASF127:
 2968 05d2 616C6172 		.ascii	"alarmValve\000"
 2968      6D56616C 
 2968      766500
 2969              	.LASF113:
 2970 05dd 68747470 		.ascii	"http_route\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 63


 2970      5F726F75 
 2970      746500
 2971              	.LASF5:
 2972 05e8 5F5F696E 		.ascii	"__int32_t\000"
 2972      7433325F 
 2972      7400
 2973              	.LASF48:
 2974 05f2 6D656173 		.ascii	"measure_time\000"
 2974      7572655F 
 2974      74696D65 
 2974      00
 2975              	.LASF76:
 2976 05ff 6D5F6C65 		.ascii	"m_level_sensor\000"
 2976      76656C5F 
 2976      73656E73 
 2976      6F7200
 2977              	.LASF27:
 2978 060e 6C657665 		.ascii	"level_reading\000"
 2978      6C5F7265 
 2978      6164696E 
 2978      6700
 2979              	.LASF3:
 2980 061c 73686F72 		.ascii	"short unsigned int\000"
 2980      7420756E 
 2980      7369676E 
 2980      65642069 
 2980      6E7400
 2981              	.LASF34:
 2982 062f 73696D5F 		.ascii	"sim_id\000"
 2982      696400
 2983              	.LASF71:
 2984 0636 4C657665 		.ascii	"Level_Sensor_Update\000"
 2984      6C5F5365 
 2984      6E736F72 
 2984      5F557064 
 2984      61746500 
 2985              	.LASF53:
 2986 064a 446F776E 		.ascii	"Downstream_Level_Sensor_freq\000"
 2986      73747265 
 2986      616D5F4C 
 2986      6576656C 
 2986      5F53656E 
 2987              	.LASF99:
 2988 0667 76616C76 		.ascii	"valve_enabled\000"
 2988      655F656E 
 2988      61626C65 
 2988      6400
 2989              	.LASF133:
 2990 0675 66696E64 		.ascii	"find_median\000"
 2990      5F6D6564 
 2990      69616E00 
 2991              	.LASF23:
 2992 0681 73746174 		.ascii	"status\000"
 2992      757300
 2993              	.LASF96:
 2994 0688 6C657665 		.ascii	"level_sensor_enabled\000"
 2994      6C5F7365 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 64


 2994      6E736F72 
 2994      5F656E61 
 2994      626C6564 
 2995              	.LASF103:
 2996 069d 64617461 		.ascii	"dataPointsInStackDesired\000"
 2996      506F696E 
 2996      7473496E 
 2996      53746163 
 2996      6B446573 
 2997              	.LASF51:
 2998 06b6 4170705F 		.ascii	"App_LED_freq\000"
 2998      4C45445F 
 2998      66726571 
 2998      00
 2999              	.LASF77:
 3000 06c3 6C657665 		.ascii	"level_sensor_take_reading\000"
 3000      6C5F7365 
 3000      6E736F72 
 3000      5F74616B 
 3000      655F7265 
 3001              	.LASF67:
 3002 06dd 7379735F 		.ascii	"sys_settings_t\000"
 3002      73657474 
 3002      696E6773 
 3002      5F7400
 3003              	.LASF11:
 3004 06ec 75696E74 		.ascii	"uint8_t\000"
 3004      385F7400 
 3005              	.LASF20:
 3006 06f4 696E7431 		.ascii	"int16\000"
 3006      3600
 3007              	.LASF59:
 3008 06fa 636F756E 		.ascii	"countDownType\000"
 3008      74446F77 
 3008      6E547970 
 3008      6500
 3009              	.LASF47:
 3010 0708 73696D5F 		.ascii	"sim_type\000"
 3010      74797065 
 3010      00
 3011              	.LASF54:
 3012 0711 76616C76 		.ascii	"valve_freq\000"
 3012      655F6672 
 3012      657100
 3013              	.LASF84:
 3014 071c 6D657373 		.ascii	"message\000"
 3014      61676500 
 3015              	.LASF111:
 3016 0724 68747470 		.ascii	"http_request\000"
 3016      5F726571 
 3016      75657374 
 3016      00
 3017              	.LASF16:
 3018 0731 646F7562 		.ascii	"double\000"
 3018      6C6500
 3019              	.LASF110:
 3020 0738 6170705F 		.ascii	"app_led_inbox\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccsXpISy.s 			page 65


 3020      6C65645F 
 3020      696E626F 
 3020      7800
 3021              	.LASF97:
 3022 0746 646F776E 		.ascii	"downstream_level_sensor_inbox\000"
 3022      73747265 
 3022      616D5F6C 
 3022      6576656C 
 3022      5F73656E 
 3023              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
