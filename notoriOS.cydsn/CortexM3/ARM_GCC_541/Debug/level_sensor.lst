ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"level_sensor.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	level_sensor_inbox,100,4
  20              		.comm	level_sensor_enabled,1,1
  21              		.comm	downstream_level_sensor_inbox,100,4
  22              		.comm	downstream_level_sensor_enabled,1,1
  23              		.comm	buffer_overflow,1,1
  24              		.comm	dataPointsInStack,2,2
  25              		.comm	dataPointsInStackDesired,2,2
  26              		.comm	data,6600,4
  27              		.comm	modem_state,1,1
  28              		.comm	modem_start_time_stamp,4,4
  29              		.comm	modem_info,60,4
  30              		.comm	modem_stats,32,4
  31              		.comm	updatable_parameters,8,4
  32              		.syntax unified
  33              		.global _printf_float
  34              		.thumb
  35              		.syntax unified
  36              		.comm	App_LED_enabled,1,1
  37              		.comm	app_led_inbox,100,4
  38              		.comm	http_request,10000,4
  39              		.comm	http_body,10000,4
  40              		.comm	http_route,200,4
  41              		.comm	system_info,28,4
  42              		.comm	system_settings,104,4
  43              		.comm	alarmMeasure,6,4
  44              		.comm	timeToMeasure,1,1
  45              		.comm	alarmSync,6,4
  46              		.comm	timeToSync,1,1
  47              		.comm	timeToSycnRemoteParams,1,1
  48              		.comm	hey,1,1
  49              		.comm	alarmAppLED,6,4
  50              		.comm	timeToAppLED,1,1
  51              		.comm	alarmLevelSensor,6,4
  52              		.comm	timetoLevelSensor,1,1
  53              		.comm	alarmDownstreamLevelSensor,6,4
  54              		.comm	timetoDownstreamLevelSensor,1,1
  55              		.bss
  56              		.align	2
  57              	uart_chars:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 2


  58 0000 00000000 		.space	257
  58      00000000 
  58      00000000 
  58      00000000 
  58      00000000 
  59              	num_chars:
  60 0101 00       		.space	1
  61              		.data
  62              		.align	2
  63              		.type	line, %object
  64              		.size	line, 4
  65              	line:
  66 0000 00000000 		.word	uart_chars
  67              		.bss
  68 0102 0000     		.align	2
  69              	match:
  70 0104 00000000 		.space	4
  71              		.align	2
  72              	pattern:
  73 0108 00000000 		.space	4
  74              		.section	.text.uart_string,"ax",%progbits
  75              		.align	2
  76              		.global	uart_string
  77              		.thumb
  78              		.thumb_func
  79              		.type	uart_string, %function
  80              	uart_string:
  81              	.LFB64:
  82              		.file 1 "level_sensor.c"
   1:level_sensor.c **** #include "level_sensor.h"
   2:level_sensor.c **** #include "notoriOS.h"
   3:level_sensor.c **** #include "debug.h"
   4:level_sensor.c **** 
   5:level_sensor.c **** /* === Driver Functions === */
   6:level_sensor.c **** 
   7:level_sensor.c **** //Sensor related global calls
   8:level_sensor.c **** 
   9:level_sensor.c **** 
  10:level_sensor.c **** // Circular buffer of recently received chars.
  11:level_sensor.c **** // Initialize all the members of the array uart_chars to 0. 
  12:level_sensor.c **** static char uart_chars[257] = {0};
  13:level_sensor.c **** static uint8_t num_chars = 0;
  14:level_sensor.c **** 
  15:level_sensor.c **** static const char *line = uart_chars;
  16:level_sensor.c **** // Only pointers can be null, where null is a special address used to signify that the pointer is n
  17:level_sensor.c **** // Pointers are not initialized to null by default, you must do so if you want them initialized.
  18:level_sensor.c **** static const char *match = NULL;
  19:level_sensor.c **** static const char *pattern = NULL;
  20:level_sensor.c **** 
  21:level_sensor.c **** 
  22:level_sensor.c **** // This is only defined in c file so this function will return the location in memory where that va
  23:level_sensor.c **** const char *uart_string(void) {
  83              		.loc 1 23 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87              		@ link register save eliminated.
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 3


  88 0000 80B4     		push	{r7}
  89              		.cfi_def_cfa_offset 4
  90              		.cfi_offset 7, -4
  91 0002 00AF     		add	r7, sp, #0
  92              		.cfi_def_cfa_register 7
  24:level_sensor.c ****     // Variables in front of a variable is casting 
  25:level_sensor.c ****     // uart_chars may be a different variable type, make sure to cast it as a char
  26:level_sensor.c ****   return (char*)uart_chars;
  93              		.loc 1 26 0
  94 0004 024B     		ldr	r3, .L3
  27:level_sensor.c **** }
  95              		.loc 1 27 0
  96 0006 1846     		mov	r0, r3
  97 0008 BD46     		mov	sp, r7
  98              		.cfi_def_cfa_register 13
  99              		@ sp needed
 100 000a 80BC     		pop	{r7}
 101              		.cfi_restore 7
 102              		.cfi_def_cfa_offset 0
 103 000c 7047     		bx	lr
 104              	.L4:
 105 000e 00BF     		.align	2
 106              	.L3:
 107 0010 00000000 		.word	uart_chars
 108              		.cfi_endproc
 109              	.LFE64:
 110              		.size	uart_string, .-uart_string
 111              		.section	.text.uart_len,"ax",%progbits
 112              		.align	2
 113              		.global	uart_len
 114              		.thumb
 115              		.thumb_func
 116              		.type	uart_len, %function
 117              	uart_len:
 118              	.LFB65:
  28:level_sensor.c **** 
  29:level_sensor.c **** // Return the number of characters of the level sensor reading
  30:level_sensor.c **** uint8_t uart_len(void) {
 119              		.loc 1 30 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 1, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124 0000 80B4     		push	{r7}
 125              		.cfi_def_cfa_offset 4
 126              		.cfi_offset 7, -4
 127 0002 00AF     		add	r7, sp, #0
 128              		.cfi_def_cfa_register 7
  31:level_sensor.c ****   return num_chars;
 129              		.loc 1 31 0
 130 0004 024B     		ldr	r3, .L7
 131 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  32:level_sensor.c **** }
 132              		.loc 1 32 0
 133 0008 1846     		mov	r0, r3
 134 000a BD46     		mov	sp, r7
 135              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 4


 136              		@ sp needed
 137 000c 80BC     		pop	{r7}
 138              		.cfi_restore 7
 139              		.cfi_def_cfa_offset 0
 140 000e 7047     		bx	lr
 141              	.L8:
 142              		.align	2
 143              	.L7:
 144 0010 01010000 		.word	num_chars
 145              		.cfi_endproc
 146              	.LFE65:
 147              		.size	uart_len, .-uart_len
 148              		.section	.text.uart_clear,"ax",%progbits
 149              		.align	2
 150              		.global	uart_clear
 151              		.thumb
 152              		.thumb_func
 153              		.type	uart_clear, %function
 154              	uart_clear:
 155              	.LFB66:
  33:level_sensor.c **** 
  34:level_sensor.c **** // Clears the sensor data 
  35:level_sensor.c **** void uart_clear(void) {
 156              		.loc 1 35 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 1, uses_anonymous_args = 0
 160 0000 80B5     		push	{r7, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 7, -8
 163              		.cfi_offset 14, -4
 164 0002 00AF     		add	r7, sp, #0
 165              		.cfi_def_cfa_register 7
  36:level_sensor.c ****   // UART_ClearRxBuffer(): Clears the receiver memory buffer and hardware RX FIFO of all received d
  37:level_sensor.c ****   Level_Sensor_UART_ClearRxBuffer();
 166              		.loc 1 37 0
 167 0004 FFF7FEFF 		bl	Level_Sensor_UART_ClearRxBuffer
  38:level_sensor.c ****   // void *memset(void *str, int c, size_t n) where str is a pointer to the block of memory to fill
  39:level_sensor.c ****   // The value is passed as an int, but the function fills the block of memory using the unsigned c
  40:level_sensor.c ****   // n is the number of bytes to be set to the value.
  41:level_sensor.c ****   memset((void*)uart_chars, 0, 256);
 168              		.loc 1 41 0
 169 0008 4FF48072 		mov	r2, #256
 170 000c 0021     		movs	r1, #0
 171 000e 0448     		ldr	r0, .L10
 172 0010 FFF7FEFF 		bl	memset
  42:level_sensor.c ****   num_chars = 0;
 173              		.loc 1 42 0
 174 0014 034B     		ldr	r3, .L10+4
 175 0016 0022     		movs	r2, #0
 176 0018 1A70     		strb	r2, [r3]
  43:level_sensor.c **** }
 177              		.loc 1 43 0
 178 001a 00BF     		nop
 179 001c 80BD     		pop	{r7, pc}
 180              	.L11:
 181 001e 00BF     		.align	2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 5


 182              	.L10:
 183 0020 00000000 		.word	uart_chars
 184 0024 01010000 		.word	num_chars
 185              		.cfi_endproc
 186              	.LFE66:
 187              		.size	uart_clear, .-uart_clear
 188              		.section	.text.Level_Sensor_ISR,"ax",%progbits
 189              		.align	2
 190              		.global	Level_Sensor_ISR
 191              		.thumb
 192              		.thumb_func
 193              		.type	Level_Sensor_ISR, %function
 194              	Level_Sensor_ISR:
 195              	.LFB67:
  44:level_sensor.c **** 
  45:level_sensor.c **** // ISR: Interrupt Service Routine
  46:level_sensor.c **** CY_ISR(Level_Sensor_ISR) {
 196              		.loc 1 46 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 8
 199              		@ frame_needed = 1, uses_anonymous_args = 0
 200 0000 80B5     		push	{r7, lr}
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 7, -8
 203              		.cfi_offset 14, -4
 204 0002 82B0     		sub	sp, sp, #8
 205              		.cfi_def_cfa_offset 16
 206 0004 00AF     		add	r7, sp, #0
 207              		.cfi_def_cfa_register 7
  47:level_sensor.c ****     /* Store received char in uart_chars.
  48:level_sensor.c ****     Returns the last received byte of data. Level_Sensor_UART_GetChar() is designed for ASCII chara
  49:level_sensor.c ****     1 to 255 are values for valid characters and 0 indicats an error occurred or no data is present
  50:level_sensor.c ****     char rx_char = Level_Sensor_UART_GetChar();
 208              		.loc 1 50 0
 209 0006 FFF7FEFF 		bl	Level_Sensor_UART_GetChar
 210 000a 0346     		mov	r3, r0
 211 000c FB71     		strb	r3, [r7, #7]
  51:level_sensor.c ****     // UART_GetChar() returns data, then set the entire uart_chars array to rx_char.
  52:level_sensor.c ****     if (rx_char) uart_chars[num_chars++] = rx_char;
 212              		.loc 1 52 0
 213 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 214 0010 002B     		cmp	r3, #0
 215 0012 09D0     		beq	.L13
 216              		.loc 1 52 0 is_stmt 0 discriminator 1
 217 0014 114B     		ldr	r3, .L16
 218 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 219 0018 5A1C     		adds	r2, r3, #1
 220 001a D1B2     		uxtb	r1, r2
 221 001c 0F4A     		ldr	r2, .L16
 222 001e 1170     		strb	r1, [r2]
 223 0020 1946     		mov	r1, r3
 224 0022 0F4A     		ldr	r2, .L16+4
 225 0024 FB79     		ldrb	r3, [r7, #7]
 226 0026 5354     		strb	r3, [r2, r1]
 227              	.L13:
  53:level_sensor.c **** 
  54:level_sensor.c ****     /* Check pattern at end of line */
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 6


  55:level_sensor.c ****     if (rx_char == '\r') {
 228              		.loc 1 55 0 is_stmt 1
 229 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 230 002a 0D2B     		cmp	r3, #13
 231 002c 11D1     		bne	.L15
  56:level_sensor.c ****         // strstr(): char *strstr(const char *haystack, const char *needle). haystack - main C stri
  57:level_sensor.c ****         match = strstr(line, pattern);
 232              		.loc 1 57 0
 233 002e 0D4B     		ldr	r3, .L16+8
 234 0030 1A68     		ldr	r2, [r3]
 235 0032 0D4B     		ldr	r3, .L16+12
 236 0034 1B68     		ldr	r3, [r3]
 237 0036 1946     		mov	r1, r3
 238 0038 1046     		mov	r0, r2
 239 003a FFF7FEFF 		bl	strstr
 240 003e 0246     		mov	r2, r0
 241 0040 0A4B     		ldr	r3, .L16+16
 242 0042 1A60     		str	r2, [r3]
  58:level_sensor.c ****         line = uart_chars + num_chars;
 243              		.loc 1 58 0
 244 0044 054B     		ldr	r3, .L16
 245 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 246 0048 1A46     		mov	r2, r3
 247 004a 054B     		ldr	r3, .L16+4
 248 004c 1344     		add	r3, r3, r2
 249 004e 054A     		ldr	r2, .L16+8
 250 0050 1360     		str	r3, [r2]
 251              	.L15:
  59:level_sensor.c ****     }
  60:level_sensor.c **** }
 252              		.loc 1 60 0
 253 0052 00BF     		nop
 254 0054 0837     		adds	r7, r7, #8
 255              		.cfi_def_cfa_offset 8
 256 0056 BD46     		mov	sp, r7
 257              		.cfi_def_cfa_register 13
 258              		@ sp needed
 259 0058 80BD     		pop	{r7, pc}
 260              	.L17:
 261 005a 00BF     		.align	2
 262              	.L16:
 263 005c 01010000 		.word	num_chars
 264 0060 00000000 		.word	uart_chars
 265 0064 00000000 		.word	line
 266 0068 08010000 		.word	pattern
 267 006c 04010000 		.word	match
 268              		.cfi_endproc
 269              	.LFE67:
 270              		.size	Level_Sensor_ISR, .-Level_Sensor_ISR
 271              		.section	.text.Level_Sensor_Update,"ax",%progbits
 272              		.align	2
 273              		.global	Level_Sensor_Update
 274              		.thumb
 275              		.thumb_func
 276              		.type	Level_Sensor_Update, %function
 277              	Level_Sensor_Update:
 278              	.LFB68:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 7


  61:level_sensor.c **** 
  62:level_sensor.c **** void Level_Sensor_Update(char * message){
 279              		.loc 1 62 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 8
 282              		@ frame_needed = 1, uses_anonymous_args = 0
 283 0000 80B5     		push	{r7, lr}
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 7, -8
 286              		.cfi_offset 14, -4
 287 0002 82B0     		sub	sp, sp, #8
 288              		.cfi_def_cfa_offset 16
 289 0004 00AF     		add	r7, sp, #0
 290              		.cfi_def_cfa_register 7
 291 0006 7860     		str	r0, [r7, #4]
  63:level_sensor.c ****     strcpy(level_sensor_inbox, message);
 292              		.loc 1 63 0
 293 0008 7968     		ldr	r1, [r7, #4]
 294 000a 0348     		ldr	r0, .L19
 295 000c FFF7FEFF 		bl	strcpy
  64:level_sensor.c **** }
 296              		.loc 1 64 0
 297 0010 00BF     		nop
 298 0012 0837     		adds	r7, r7, #8
 299              		.cfi_def_cfa_offset 8
 300 0014 BD46     		mov	sp, r7
 301              		.cfi_def_cfa_register 13
 302              		@ sp needed
 303 0016 80BD     		pop	{r7, pc}
 304              	.L20:
 305              		.align	2
 306              	.L19:
 307 0018 00000000 		.word	level_sensor_inbox
 308              		.cfi_endproc
 309              	.LFE68:
 310              		.size	Level_Sensor_Update, .-Level_Sensor_Update
 311              		.section	.rodata
 312              		.align	2
 313              	.LC0:
 314 0000 4F464600 		.ascii	"OFF\000"
 315              		.align	2
 316              	.LC1:
 317 0004 4F4E00   		.ascii	"ON\000"
 318 0007 00       		.align	2
 319              	.LC2:
 320 0008 256C6400 		.ascii	"%ld\000"
 321              		.align	2
 322              	.LC3:
 323 000c 256400   		.ascii	"%d\000"
 324 000f 00       		.align	2
 325              	.LC4:
 326 0010 6D617862 		.ascii	"maxbotix_depth=%s\000"
 326      6F746978 
 326      5F646570 
 326      74683D25 
 326      7300
 327 0022 0000     		.align	2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 8


 328              	.LC5:
 329 0024 6D617862 		.ascii	"maxbotix_depth\000"
 329      6F746978 
 329      5F646570 
 329      746800
 330 0033 00       		.align	2
 331              	.LC6:
 332 0034 612B00   		.ascii	"a+\000"
 333 0037 00       		.align	2
 334              	.LC7:
 335 0038 64617461 		.ascii	"data.txt\000"
 335      2E747874 
 335      00
 336 0041 000000   		.align	2
 337              	.LC8:
 338 0044 206D6178 		.ascii	" maxbotix_depth: \000"
 338      626F7469 
 338      785F6465 
 338      7074683A 
 338      2000
 339 0056 0000     		.align	2
 340              	.LC9:
 341 0058 2000     		.ascii	" \000"
 342 005a 0000     		.align	2
 343              	.LC10:
 344 005c 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 344      64206E6F 
 344      74206765 
 344      74207661 
 344      6C696420 
 345              		.align	2
 346              	.LC11:
 347 0088 2D3100   		.ascii	"-1\000"
 348              		.section	.text.level_sensor,"ax",%progbits
 349              		.align	2
 350              		.global	level_sensor
 351              		.thumb
 352              		.thumb_func
 353              		.type	level_sensor, %function
 354              	level_sensor:
 355              	.LFB69:
  65:level_sensor.c **** 
  66:level_sensor.c **** uint8 level_sensor(){
 356              		.loc 1 66 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 88
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360 0000 80B5     		push	{r7, lr}
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 7, -8
 363              		.cfi_offset 14, -4
 364 0002 96B0     		sub	sp, sp, #88
 365              		.cfi_def_cfa_offset 96
 366 0004 00AF     		add	r7, sp, #0
 367              		.cfi_def_cfa_register 7
  67:level_sensor.c ****     char * compare_location;
  68:level_sensor.c ****     
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 9


  69:level_sensor.c ****     compare_location = strstr(level_sensor_inbox,"OFF");        
 368              		.loc 1 69 0
 369 0006 3149     		ldr	r1, .L27
 370 0008 3148     		ldr	r0, .L27+4
 371 000a FFF7FEFF 		bl	strstr
 372 000e 7865     		str	r0, [r7, #84]
  70:level_sensor.c ****     if(compare_location!=NULL){
 373              		.loc 1 70 0
 374 0010 7B6D     		ldr	r3, [r7, #84]
 375 0012 002B     		cmp	r3, #0
 376 0014 01D0     		beq	.L22
  71:level_sensor.c ****         return 0; // this app is disabled, don't do anything
 377              		.loc 1 71 0
 378 0016 0023     		movs	r3, #0
 379 0018 53E0     		b	.L23
 380              	.L22:
  72:level_sensor.c ****     }
  73:level_sensor.c ****     
  74:level_sensor.c **** 
  75:level_sensor.c ****     compare_location = strstr(level_sensor_inbox,"ON");        
 381              		.loc 1 75 0
 382 001a 2E49     		ldr	r1, .L27+8
 383 001c 2C48     		ldr	r0, .L27+4
 384 001e FFF7FEFF 		bl	strstr
 385 0022 7865     		str	r0, [r7, #84]
  76:level_sensor.c ****     if(compare_location!=NULL){
 386              		.loc 1 76 0
 387 0024 7B6D     		ldr	r3, [r7, #84]
 388 0026 002B     		cmp	r3, #0
 389 0028 4AD0     		beq	.L24
 390              	.LBB2:
  77:level_sensor.c **** 
  78:level_sensor.c ****         // below is copied and adapted from makeMeasurements in modem.c 
  79:level_sensor.c ****         // (duplicated so that normal depth and GI nodes still work)
  80:level_sensor.c ****         
  81:level_sensor.c ****         // Get clock time and save to timeStamp
  82:level_sensor.c ****         long timeStamp = getTimeStamp();
 391              		.loc 1 82 0
 392 002a FFF7FEFF 		bl	getTimeStamp
 393 002e 3865     		str	r0, [r7, #80]
  83:level_sensor.c ****         char c_timeStamp[32];
  84:level_sensor.c ****         snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 394              		.loc 1 84 0
 395 0030 3846     		mov	r0, r7
 396 0032 3B6D     		ldr	r3, [r7, #80]
 397 0034 284A     		ldr	r2, .L27+12
 398 0036 2021     		movs	r1, #32
 399 0038 FFF7FEFF 		bl	snprintf
  85:level_sensor.c ****         
  86:level_sensor.c ****         // Holds string for value that will be written 
  87:level_sensor.c ****         char value[DATA_MAX_KEY_LENGTH];
  88:level_sensor.c ****         
  89:level_sensor.c ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
  90:level_sensor.c ****         level_sensor_t m_level_sensor;
  91:level_sensor.c ****         
  92:level_sensor.c ****         // Take level sensor readings and save them to m_level_sensor
  93:level_sensor.c ****         m_level_sensor = level_sensor_take_reading();
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 10


 400              		.loc 1 93 0
 401 003c 07F12003 		add	r3, r7, #32
 402 0040 1846     		mov	r0, r3
 403 0042 FFF7FEFF 		bl	level_sensor_take_reading
  94:level_sensor.c **** 
  95:level_sensor.c ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
  96:level_sensor.c ****         if(m_level_sensor.num_valid_readings > 0){
 404              		.loc 1 96 0
 405 0046 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 406 004a 002B     		cmp	r3, #0
 407 004c 2DD0     		beq	.L25
  97:level_sensor.c ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 408              		.loc 1 97 0
 409 004e B7F93630 		ldrsh	r3, [r7, #54]
 410 0052 07F13C00 		add	r0, r7, #60
 411 0056 214A     		ldr	r2, .L27+16
 412 0058 1421     		movs	r1, #20
 413 005a FFF7FEFF 		bl	snprintf
  98:level_sensor.c ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 414              		.loc 1 98 0
 415 005e 07F13C03 		add	r3, r7, #60
 416 0062 1A46     		mov	r2, r3
 417 0064 1E49     		ldr	r1, .L27+20
 418 0066 0020     		movs	r0, #0
 419 0068 FFF7FEFF 		bl	printNotif
  99:level_sensor.c ****             pushData("maxbotix_depth",value,timeStamp);
 420              		.loc 1 99 0
 421 006c 07F13C03 		add	r3, r7, #60
 422 0070 3A6D     		ldr	r2, [r7, #80]
 423 0072 1946     		mov	r1, r3
 424 0074 1B48     		ldr	r0, .L27+24
 425 0076 FFF7FEFF 		bl	pushData
 100:level_sensor.c ****             
 101:level_sensor.c ****             // Print measurement to SD card to file called data.txt
 102:level_sensor.c ****             SD_write("data.txt", "a+", c_timeStamp);
 426              		.loc 1 102 0
 427 007a 3B46     		mov	r3, r7
 428 007c 1A46     		mov	r2, r3
 429 007e 1A49     		ldr	r1, .L27+28
 430 0080 1A48     		ldr	r0, .L27+32
 431 0082 FFF7FEFF 		bl	SD_write
 103:level_sensor.c ****             SD_write("data.txt", "a+", " maxbotix_depth: ");
 432              		.loc 1 103 0
 433 0086 1A4A     		ldr	r2, .L27+36
 434 0088 1749     		ldr	r1, .L27+28
 435 008a 1848     		ldr	r0, .L27+32
 436 008c FFF7FEFF 		bl	SD_write
 104:level_sensor.c ****             SD_write("data.txt", "a+", value);
 437              		.loc 1 104 0
 438 0090 07F13C03 		add	r3, r7, #60
 439 0094 1A46     		mov	r2, r3
 440 0096 1449     		ldr	r1, .L27+28
 441 0098 1448     		ldr	r0, .L27+32
 442 009a FFF7FEFF 		bl	SD_write
 105:level_sensor.c ****             SD_write("data.txt", "a+", " ");
 443              		.loc 1 105 0
 444 009e 154A     		ldr	r2, .L27+40
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 11


 445 00a0 1149     		ldr	r1, .L27+28
 446 00a2 1248     		ldr	r0, .L27+32
 447 00a4 FFF7FEFF 		bl	SD_write
 448 00a8 08E0     		b	.L26
 449              	.L25:
 106:level_sensor.c ****         }else{
 107:level_sensor.c ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 450              		.loc 1 107 0
 451 00aa 1349     		ldr	r1, .L27+44
 452 00ac 0220     		movs	r0, #2
 453 00ae FFF7FEFF 		bl	printNotif
 108:level_sensor.c ****             pushData("maxbotix_depth","-1",timeStamp); // error code, never get this from a sensor
 454              		.loc 1 108 0
 455 00b2 3A6D     		ldr	r2, [r7, #80]
 456 00b4 1149     		ldr	r1, .L27+48
 457 00b6 0B48     		ldr	r0, .L27+24
 458 00b8 FFF7FEFF 		bl	pushData
 459              	.L26:
 109:level_sensor.c ****         }
 110:level_sensor.c ****         
 111:level_sensor.c **** 
 112:level_sensor.c ****         return 0;
 460              		.loc 1 112 0
 461 00bc 0023     		movs	r3, #0
 462 00be 00E0     		b	.L23
 463              	.L24:
 464              	.LBE2:
 113:level_sensor.c ****     }
 114:level_sensor.c ****     
 115:level_sensor.c ****     return 0; // i think this needs to be rewritten to be more like a light switch
 465              		.loc 1 115 0
 466 00c0 0023     		movs	r3, #0
 467              	.L23:
 116:level_sensor.c ****     // i.e. it stays on until you turn it off.
 117:level_sensor.c **** }
 468              		.loc 1 117 0 discriminator 1
 469 00c2 1846     		mov	r0, r3
 470 00c4 5837     		adds	r7, r7, #88
 471              		.cfi_def_cfa_offset 8
 472 00c6 BD46     		mov	sp, r7
 473              		.cfi_def_cfa_register 13
 474              		@ sp needed
 475 00c8 80BD     		pop	{r7, pc}
 476              	.L28:
 477 00ca 00BF     		.align	2
 478              	.L27:
 479 00cc 00000000 		.word	.LC0
 480 00d0 00000000 		.word	level_sensor_inbox
 481 00d4 04000000 		.word	.LC1
 482 00d8 08000000 		.word	.LC2
 483 00dc 0C000000 		.word	.LC3
 484 00e0 10000000 		.word	.LC4
 485 00e4 24000000 		.word	.LC5
 486 00e8 34000000 		.word	.LC6
 487 00ec 38000000 		.word	.LC7
 488 00f0 44000000 		.word	.LC8
 489 00f4 58000000 		.word	.LC9
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 12


 490 00f8 5C000000 		.word	.LC10
 491 00fc 88000000 		.word	.LC11
 492              		.cfi_endproc
 493              	.LFE69:
 494              		.size	level_sensor, .-level_sensor
 495              		.section	.rodata
 496 008b 00       		.align	2
 497              	.LC12:
 498 008c 5200     		.ascii	"R\000"
 499              		.section	.text.level_sensor_take_reading,"ax",%progbits
 500              		.align	2
 501              		.global	level_sensor_take_reading
 502              		.thumb
 503              		.thumb_func
 504              		.type	level_sensor_take_reading, %function
 505              	level_sensor_take_reading:
 506              	.LFB70:
 118:level_sensor.c **** 
 119:level_sensor.c **** // takes level sensor measurements and calculates average level sensor reading
 120:level_sensor.c **** level_sensor_t level_sensor_take_reading(){
 507              		.loc 1 120 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 40
 510              		@ frame_needed = 1, uses_anonymous_args = 0
 511 0000 B0B5     		push	{r4, r5, r7, lr}
 512              		.cfi_def_cfa_offset 16
 513              		.cfi_offset 4, -16
 514              		.cfi_offset 5, -12
 515              		.cfi_offset 7, -8
 516              		.cfi_offset 14, -4
 517 0002 8AB0     		sub	sp, sp, #40
 518              		.cfi_def_cfa_offset 56
 519 0004 00AF     		add	r7, sp, #0
 520              		.cfi_def_cfa_register 7
 521 0006 7860     		str	r0, [r7, #4]
 121:level_sensor.c ****     
 122:level_sensor.c ****     // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data type t
 123:level_sensor.c ****     level_sensor_t level_sensor_output;
 124:level_sensor.c ****     level_sensor_output.num_invalid_readings = 0;
 522              		.loc 1 124 0
 523 0008 0023     		movs	r3, #0
 524 000a 87F82130 		strb	r3, [r7, #33]
 125:level_sensor.c ****     level_sensor_output.num_valid_readings = 0;
 525              		.loc 1 125 0
 526 000e 0023     		movs	r3, #0
 527 0010 87F82030 		strb	r3, [r7, #32]
 126:level_sensor.c ****     
 127:level_sensor.c ****     uart_clear();
 528              		.loc 1 127 0
 529 0014 FFF7FEFF 		bl	uart_clear
 128:level_sensor.c ****     
 129:level_sensor.c ****     // Start sensor power, uart, and isr
 130:level_sensor.c ****     Level_Sensor_Power_Write(ON);   // Pulls Level Sensor power pin high (turns it on).
 530              		.loc 1 130 0
 531 0018 0120     		movs	r0, #1
 532 001a FFF7FEFF 		bl	Level_Sensor_Power_Write
 131:level_sensor.c ****     CyDelay(200u); // Sensor bootup sequence ~200ms -- senosor will spit out ID info, but we don't 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 13


 533              		.loc 1 131 0
 534 001e C820     		movs	r0, #200
 535 0020 FFF7FEFF 		bl	CyDelay
 132:level_sensor.c ****     Level_Sensor_RX_SetDriveMode(PIN_DM_DIG_HIZ); // RX_SetDriveMode(): Sets the drive mode for eac
 536              		.loc 1 132 0
 537 0024 0220     		movs	r0, #2
 538 0026 FFF7FEFF 		bl	Level_Sensor_RX_SetDriveMode
 133:level_sensor.c ****     Level_Sensor_UART_Start(); // Level_Sensor_UART_Start() sets the initVar variable, calls the Le
 539              		.loc 1 133 0
 540 002a FFF7FEFF 		bl	Level_Sensor_UART_Start
 134:level_sensor.c ****     Level_Sensor_ISR_StartEx(Level_Sensor_ISR); // Sets up the interrupt and enables it.
 541              		.loc 1 134 0
 542 002e 3848     		ldr	r0, .L38
 543 0030 FFF7FEFF 		bl	Level_Sensor_ISR_StartEx
 135:level_sensor.c ****     
 136:level_sensor.c ****     // Wait to take  reading
 137:level_sensor.c ****     // Sensor will take ~200ms to send first reading, and 200ms for subsequent readings
 138:level_sensor.c ****     CyDelay(2000u); // Take a few seconds to get readings, 2 secs ~10 readings
 544              		.loc 1 138 0
 545 0034 4FF4FA60 		mov	r0, #2000
 546 0038 FFF7FEFF 		bl	CyDelay
 139:level_sensor.c ****     
 140:level_sensor.c ****     //stop all sensor processes
 141:level_sensor.c ****     Level_Sensor_UART_Stop(); // Disables the UART operation.
 547              		.loc 1 141 0
 548 003c FFF7FEFF 		bl	Level_Sensor_UART_Stop
 142:level_sensor.c ****     Level_Sensor_ISR_Stop(); // Disables and removes the interrupt.
 549              		.loc 1 142 0
 550 0040 FFF7FEFF 		bl	Level_Sensor_ISR_Stop
 143:level_sensor.c ****     Level_Sensor_Power_Write(OFF); // Pulls Level Sensor Power pin low (turns it off).
 551              		.loc 1 143 0
 552 0044 0020     		movs	r0, #0
 553 0046 FFF7FEFF 		bl	Level_Sensor_Power_Write
 144:level_sensor.c ****     // RX_SetDriveMode(): Sets the drive mode for each of the Pins component's pins.
 145:level_sensor.c ****     // String Drive Mode means it will only be outputting a voltage (don't send any data) when pull
 146:level_sensor.c ****     // UART in PSOC starts high. Then pulls low to get data. When turn sensor off, still using powe
 147:level_sensor.c ****     // So turning it to Strong Drive has it stay low.
 148:level_sensor.c ****     Level_Sensor_RX_SetDriveMode(PIN_DM_STRONG);
 554              		.loc 1 148 0
 555 004a 0C20     		movs	r0, #12
 556 004c FFF7FEFF 		bl	Level_Sensor_RX_SetDriveMode
 149:level_sensor.c ****     // Stops writing the value to the physical port.
 150:level_sensor.c ****     // Just because turn power of sensor off, pin could still be high and getting power. This ensur
 151:level_sensor.c ****     Level_Sensor_RX_Write(OFF);
 557              		.loc 1 151 0
 558 0050 0020     		movs	r0, #0
 559 0052 FFF7FEFF 		bl	Level_Sensor_RX_Write
 152:level_sensor.c **** 
 153:level_sensor.c ****     /* Return parsed reading */
 154:level_sensor.c ****     // Parse string and put all values into array
 155:level_sensor.c ****     // The sensor will power on and do a few things, after which the readigs will follow with the s
 156:level_sensor.c ****     // Readings are stashed between "R" and "\000"
 157:level_sensor.c ****     char *token;
 158:level_sensor.c ****     // strtok(): breaks uart_chars into smaller string when sees "R".
 159:level_sensor.c ****     token = strtok(uart_chars, "R");
 560              		.loc 1 159 0
 561 0056 2F49     		ldr	r1, .L38+4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 14


 562 0058 2F48     		ldr	r0, .L38+8
 563 005a FFF7FEFF 		bl	strtok
 564 005e 7862     		str	r0, [r7, #36]
 160:level_sensor.c ****     /* walk through other tokens */
 161:level_sensor.c ****    while( token != NULL ) 
 565              		.loc 1 161 0
 566 0060 33E0     		b	.L30
 567              	.L35:
 162:level_sensor.c ****    {
 163:level_sensor.c ****       if(strstr(token, "\r") != NULL){ // Full reading is delimieted by "R" + reading + "\r"
 568              		.loc 1 163 0
 569 0062 0D21     		movs	r1, #13
 570 0064 786A     		ldr	r0, [r7, #36]
 571 0066 FFF7FEFF 		bl	strchr
 572 006a 0346     		mov	r3, r0
 573 006c 002B     		cmp	r3, #0
 574 006e 27D0     		beq	.L31
 575              	.LBB3:
 164:level_sensor.c ****         // int atoi(const char *str) converts the string argument str to an integer (type int).
 165:level_sensor.c ****         uint16 reading = atoi(token);
 576              		.loc 1 165 0
 577 0070 786A     		ldr	r0, [r7, #36]
 578 0072 FFF7FEFF 		bl	atoi
 579 0076 0346     		mov	r3, r0
 580 0078 7B84     		strh	r3, [r7, #34]	@ movhi
 166:level_sensor.c ****         if(reading != 0){
 581              		.loc 1 166 0
 582 007a 7B8C     		ldrh	r3, [r7, #34]
 583 007c 002B     		cmp	r3, #0
 584 007e 1FD0     		beq	.L31
 167:level_sensor.c ****             if(reading != READING_INVALID){ // Invald readings by maxbotix
 585              		.loc 1 167 0
 586 0080 7B8C     		ldrh	r3, [r7, #34]
 587 0082 42F20F72 		movw	r2, #9999
 588 0086 9342     		cmp	r3, r2
 589 0088 14D0     		beq	.L32
 168:level_sensor.c ****                 // Set the level readings array of the length of number of valid readings equal to 
 169:level_sensor.c ****                 level_sensor_output.all_level_readings[level_sensor_output.num_valid_readings] = re
 590              		.loc 1 169 0
 591 008a 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 592 008e B7F92220 		ldrsh	r2, [r7, #34]
 593 0092 5B00     		lsls	r3, r3, #1
 594 0094 07F12801 		add	r1, r7, #40
 595 0098 0B44     		add	r3, r3, r1
 596 009a 23F8202C 		strh	r2, [r3, #-32]	@ movhi
 170:level_sensor.c ****                 // If number of valid readings less than 11 total readings, increase the count of v
 171:level_sensor.c ****                 if(level_sensor_output.num_valid_readings < N_READINGS){
 597              		.loc 1 171 0
 598 009e 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 599 00a2 0A2B     		cmp	r3, #10
 600 00a4 15D8     		bhi	.L37
 172:level_sensor.c ****                     level_sensor_output.num_valid_readings++;
 601              		.loc 1 172 0
 602 00a6 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 603 00aa 0133     		adds	r3, r3, #1
 604 00ac DBB2     		uxtb	r3, r3
 605 00ae 87F82030 		strb	r3, [r7, #32]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 15


 606 00b2 05E0     		b	.L31
 607              	.L32:
 173:level_sensor.c ****                 }else{
 174:level_sensor.c ****                  break;   
 175:level_sensor.c ****                 }
 176:level_sensor.c ****                 
 177:level_sensor.c ****             }else{
 178:level_sensor.c ****                 // Otherwise increase the count of invalid readings
 179:level_sensor.c ****                 level_sensor_output.num_invalid_readings++;
 608              		.loc 1 179 0
 609 00b4 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
 610 00b8 0133     		adds	r3, r3, #1
 611 00ba DBB2     		uxtb	r3, r3
 612 00bc 87F82130 		strb	r3, [r7, #33]
 613              	.L31:
 614              	.LBE3:
 180:level_sensor.c ****             }
 181:level_sensor.c ****         }
 182:level_sensor.c ****       }
 183:level_sensor.c ****       token = strtok(NULL, "R"); // This "NULL" says to continue where you left off last time.
 615              		.loc 1 183 0
 616 00c0 1449     		ldr	r1, .L38+4
 617 00c2 0020     		movs	r0, #0
 618 00c4 FFF7FEFF 		bl	strtok
 619 00c8 7862     		str	r0, [r7, #36]
 620              	.L30:
 161:level_sensor.c ****    {
 621              		.loc 1 161 0
 622 00ca 7B6A     		ldr	r3, [r7, #36]
 623 00cc 002B     		cmp	r3, #0
 624 00ce C8D1     		bne	.L35
 625 00d0 00E0     		b	.L34
 626              	.L37:
 627              	.LBB4:
 174:level_sensor.c ****                 }
 628              		.loc 1 174 0
 629 00d2 00BF     		nop
 630              	.L34:
 631              	.LBE4:
 184:level_sensor.c ****    }
 185:level_sensor.c ****     // Calculate median level reading
 186:level_sensor.c ****     level_sensor_output.level_reading = find_median(level_sensor_output.all_level_readings,level_se
 632              		.loc 1 186 0
 633 00d4 97F82020 		ldrb	r2, [r7, #32]	@ zero_extendqisi2
 634 00d8 07F10803 		add	r3, r7, #8
 635 00dc 1146     		mov	r1, r2
 636 00de 1846     		mov	r0, r3
 637 00e0 FFF7FEFF 		bl	find_median
 638 00e4 0346     		mov	r3, r0
 639 00e6 1BB2     		sxth	r3, r3
 640 00e8 FB83     		strh	r3, [r7, #30]	@ movhi
 187:level_sensor.c ****     
 188:level_sensor.c ****     return level_sensor_output;
 641              		.loc 1 188 0
 642 00ea 7B68     		ldr	r3, [r7, #4]
 643 00ec 1D46     		mov	r5, r3
 644 00ee 07F10804 		add	r4, r7, #8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 16


 645 00f2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 646 00f4 2860     		str	r0, [r5]	@ unaligned
 647 00f6 6960     		str	r1, [r5, #4]	@ unaligned
 648 00f8 AA60     		str	r2, [r5, #8]	@ unaligned
 649 00fa EB60     		str	r3, [r5, #12]	@ unaligned
 650 00fc 03CC     		ldmia	r4!, {r0, r1}
 651 00fe 2861     		str	r0, [r5, #16]	@ unaligned
 652 0100 6961     		str	r1, [r5, #20]	@ unaligned
 653 0102 2388     		ldrh	r3, [r4]	@ unaligned
 654 0104 2B83     		strh	r3, [r5, #24]	@ unaligned
 189:level_sensor.c **** }
 655              		.loc 1 189 0
 656 0106 7868     		ldr	r0, [r7, #4]
 657 0108 2837     		adds	r7, r7, #40
 658              		.cfi_def_cfa_offset 16
 659 010a BD46     		mov	sp, r7
 660              		.cfi_def_cfa_register 13
 661              		@ sp needed
 662 010c B0BD     		pop	{r4, r5, r7, pc}
 663              	.L39:
 664 010e 00BF     		.align	2
 665              	.L38:
 666 0110 00000000 		.word	Level_Sensor_ISR
 667 0114 8C000000 		.word	.LC12
 668 0118 00000000 		.word	uart_chars
 669              		.cfi_endproc
 670              	.LFE70:
 671              		.size	level_sensor_take_reading, .-level_sensor_take_reading
 672              		.section	.rodata
 673 008e 0000     		.align	2
 674              	.LC13:
 675 0090 54455354 		.ascii	"TEST_LEVEL_SENSOR\000"
 675      5F4C4556 
 675      454C5F53 
 675      454E534F 
 675      5200
 676 00a2 0000     		.align	2
 677              	.LC14:
 678 00a4 6E57414E 		.ascii	"nWANTED=%d,nRECEIVED=%d,nVALID=%d,nMEDIAN=%d.\000"
 678      5445443D 
 678      25642C6E 
 678      52454345 
 678      49564544 
 679              		.section	.text.level_sensor_test,"ax",%progbits
 680              		.align	2
 681              		.global	level_sensor_test
 682              		.thumb
 683              		.thumb_func
 684              		.type	level_sensor_test, %function
 685              	level_sensor_test:
 686              	.LFB71:
 190:level_sensor.c **** 
 191:level_sensor.c **** // Level sensor test
 192:level_sensor.c **** test_t level_sensor_test(){
 687              		.loc 1 192 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 424
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 17


 690              		@ frame_needed = 1, uses_anonymous_args = 0
 691 0000 B0B5     		push	{r4, r5, r7, lr}
 692              		.cfi_def_cfa_offset 16
 693              		.cfi_offset 4, -16
 694              		.cfi_offset 5, -12
 695              		.cfi_offset 7, -8
 696              		.cfi_offset 14, -4
 697 0002 EEB0     		sub	sp, sp, #440
 698              		.cfi_def_cfa_offset 456
 699 0004 04AF     		add	r7, sp, #16
 700              		.cfi_def_cfa 7, 440
 701 0006 3B1D     		adds	r3, r7, #4
 702 0008 1860     		str	r0, [r3]
 193:level_sensor.c ****     
 194:level_sensor.c ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
 195:level_sensor.c ****     test.status = 0; // set test status to zero
 703              		.loc 1 195 0
 704 000a 07F12403 		add	r3, r7, #36
 705 000e 0022     		movs	r2, #0
 706 0010 83F88020 		strb	r2, [r3, #128]
 196:level_sensor.c ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_LEVEL_SENSOR");
 707              		.loc 1 196 0
 708 0014 07F12403 		add	r3, r7, #36
 709 0018 2A4A     		ldr	r2, .L44
 710 001a 1C46     		mov	r4, r3
 711 001c 1546     		mov	r5, r2
 712 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 713 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 714 0022 2B68     		ldr	r3, [r5]
 715 0024 2380     		strh	r3, [r4]	@ movhi
 197:level_sensor.c **** 
 198:level_sensor.c ****     // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data type t
 199:level_sensor.c ****     level_sensor_t sensor = level_sensor_take_reading();
 716              		.loc 1 199 0
 717 0026 07F10803 		add	r3, r7, #8
 718 002a 1846     		mov	r0, r3
 719 002c FFF7FEFF 		bl	level_sensor_take_reading
 200:level_sensor.c ****     
 201:level_sensor.c ****     // print the max number of readings (11), the number of actual readings, the number of valid re
 202:level_sensor.c ****     snprintf(test.reason,sizeof(test.reason),"nWANTED=%d,nRECEIVED=%d,nVALID=%d,nMEDIAN=%d.",
 203:level_sensor.c ****         N_READINGS,
 204:level_sensor.c ****         sensor.num_valid_readings+sensor.num_invalid_readings,
 720              		.loc 1 204 0
 721 0030 07F10803 		add	r3, r7, #8
 722 0034 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 202:level_sensor.c ****         N_READINGS,
 723              		.loc 1 202 0
 724 0036 1A46     		mov	r2, r3
 725              		.loc 1 204 0
 726 0038 07F10803 		add	r3, r7, #8
 727 003c 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 202:level_sensor.c ****         N_READINGS,
 728              		.loc 1 202 0
 729 003e 1344     		add	r3, r3, r2
 205:level_sensor.c ****         sensor.num_valid_readings,
 730              		.loc 1 205 0
 731 0040 07F10802 		add	r2, r7, #8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 18


 732 0044 127E     		ldrb	r2, [r2, #24]	@ zero_extendqisi2
 202:level_sensor.c ****         N_READINGS,
 733              		.loc 1 202 0
 734 0046 1146     		mov	r1, r2
 206:level_sensor.c ****         sensor.level_reading
 735              		.loc 1 206 0
 736 0048 07F10802 		add	r2, r7, #8
 737 004c B2F91620 		ldrsh	r2, [r2, #22]
 202:level_sensor.c ****         N_READINGS,
 738              		.loc 1 202 0
 739 0050 1446     		mov	r4, r2
 740 0052 07F12402 		add	r2, r7, #36
 741 0056 02F18100 		add	r0, r2, #129
 742 005a 0294     		str	r4, [sp, #8]
 743 005c 0191     		str	r1, [sp, #4]
 744 005e 0093     		str	r3, [sp]
 745 0060 0B23     		movs	r3, #11
 746 0062 194A     		ldr	r2, .L44+4
 747 0064 4FF48071 		mov	r1, #256
 748 0068 FFF7FEFF 		bl	snprintf
 207:level_sensor.c ****     );
 208:level_sensor.c ****    
 209:level_sensor.c ****     // if the number valid readings is the max number of readings (11), then the test passes with t
 210:level_sensor.c ****     if(sensor.num_valid_readings == N_READINGS){//pass
 749              		.loc 1 210 0
 750 006c 07F10803 		add	r3, r7, #8
 751 0070 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 752 0072 0B2B     		cmp	r3, #11
 753 0074 05D1     		bne	.L41
 211:level_sensor.c ****         test.status = 1;
 754              		.loc 1 211 0
 755 0076 07F12403 		add	r3, r7, #36
 756 007a 0122     		movs	r2, #1
 757 007c 83F88020 		strb	r2, [r3, #128]
 758 0080 0EE0     		b	.L42
 759              	.L41:
 212:level_sensor.c ****     // if the number of valid readings is greater than zero and less than the max number of reading
 213:level_sensor.c ****     }else if((sensor.num_valid_readings > 0) && (sensor.num_valid_readings < N_READINGS)){//pass
 760              		.loc 1 213 0
 761 0082 07F10803 		add	r3, r7, #8
 762 0086 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 763 0088 002B     		cmp	r3, #0
 764 008a 09D0     		beq	.L42
 765              		.loc 1 213 0 is_stmt 0 discriminator 1
 766 008c 07F10803 		add	r3, r7, #8
 767 0090 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 768 0092 0A2B     		cmp	r3, #10
 769 0094 04D8     		bhi	.L42
 214:level_sensor.c ****         test.status = 2; //not bad, since we got some OK readings
 770              		.loc 1 214 0 is_stmt 1
 771 0096 07F12403 		add	r3, r7, #36
 772 009a 0222     		movs	r2, #2
 773 009c 83F88020 		strb	r2, [r3, #128]
 774              	.L42:
 215:level_sensor.c ****     }
 216:level_sensor.c ****         
 217:level_sensor.c ****     return test;
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 19


 775              		.loc 1 217 0
 776 00a0 3B1D     		adds	r3, r7, #4
 777 00a2 1A68     		ldr	r2, [r3]
 778 00a4 07F12403 		add	r3, r7, #36
 779 00a8 1046     		mov	r0, r2
 780 00aa 1946     		mov	r1, r3
 781 00ac 40F28113 		movw	r3, #385
 782 00b0 1A46     		mov	r2, r3
 783 00b2 FFF7FEFF 		bl	memcpy
 218:level_sensor.c **** }
 784              		.loc 1 218 0
 785 00b6 3B1D     		adds	r3, r7, #4
 786 00b8 1868     		ldr	r0, [r3]
 787 00ba 07F5D477 		add	r7, r7, #424
 788              		.cfi_def_cfa_offset 16
 789 00be BD46     		mov	sp, r7
 790              		.cfi_def_cfa_register 13
 791              		@ sp needed
 792 00c0 B0BD     		pop	{r4, r5, r7, pc}
 793              	.L45:
 794 00c2 00BF     		.align	2
 795              	.L44:
 796 00c4 90000000 		.word	.LC13
 797 00c8 A4000000 		.word	.LC14
 798              		.cfi_endproc
 799              	.LFE71:
 800              		.size	level_sensor_test, .-level_sensor_test
 801              		.global	__aeabi_i2d
 802              		.global	__aeabi_ddiv
 803              		.global	__aeabi_d2iz
 804              		.section	.text.find_median,"ax",%progbits
 805              		.align	2
 806              		.global	find_median
 807              		.thumb
 808              		.thumb_func
 809              		.type	find_median, %function
 810              	find_median:
 811              	.LFB72:
 219:level_sensor.c **** 
 220:level_sensor.c **** 
 221:level_sensor.c **** // function to calculate the median of the array, after array is sorted
 222:level_sensor.c **** uint16 find_median(int16 array[] , uint8 n)
 223:level_sensor.c **** {
 812              		.loc 1 223 0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 16
 815              		@ frame_needed = 1, uses_anonymous_args = 0
 816 0000 90B5     		push	{r4, r7, lr}
 817              		.cfi_def_cfa_offset 12
 818              		.cfi_offset 4, -12
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 85B0     		sub	sp, sp, #20
 822              		.cfi_def_cfa_offset 32
 823 0004 00AF     		add	r7, sp, #0
 824              		.cfi_def_cfa_register 7
 825 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 20


 826 0008 0B46     		mov	r3, r1
 827 000a FB70     		strb	r3, [r7, #3]
 224:level_sensor.c ****     int16 median=0;
 828              		.loc 1 224 0
 829 000c 0023     		movs	r3, #0
 830 000e FB81     		strh	r3, [r7, #14]	@ movhi
 225:level_sensor.c ****     sort(array,n);
 831              		.loc 1 225 0
 832 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 833 0012 1BB2     		sxth	r3, r3
 834 0014 1946     		mov	r1, r3
 835 0016 7868     		ldr	r0, [r7, #4]
 836 0018 FFF7FEFF 		bl	sort
 226:level_sensor.c ****     
 227:level_sensor.c ****     // if number of elements are even
 228:level_sensor.c ****     if(n%2 == 0)
 837              		.loc 1 228 0
 838 001c FB78     		ldrb	r3, [r7, #3]
 839 001e 03F00103 		and	r3, r3, #1
 840 0022 DBB2     		uxtb	r3, r3
 841 0024 002B     		cmp	r3, #0
 842 0026 25D1     		bne	.L47
 229:level_sensor.c ****         // median is the average of the  two middle sorted numbers
 230:level_sensor.c ****         median = (array[(n-1)/2] + array[n/2])/2.0;
 843              		.loc 1 230 0
 844 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 845 002a 013B     		subs	r3, r3, #1
 846 002c DA0F     		lsrs	r2, r3, #31
 847 002e 1344     		add	r3, r3, r2
 848 0030 5B10     		asrs	r3, r3, #1
 849 0032 5B00     		lsls	r3, r3, #1
 850 0034 7A68     		ldr	r2, [r7, #4]
 851 0036 1344     		add	r3, r3, r2
 852 0038 B3F90030 		ldrsh	r3, [r3]
 853 003c 1946     		mov	r1, r3
 854 003e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 855 0040 5B08     		lsrs	r3, r3, #1
 856 0042 DBB2     		uxtb	r3, r3
 857 0044 5B00     		lsls	r3, r3, #1
 858 0046 7A68     		ldr	r2, [r7, #4]
 859 0048 1344     		add	r3, r3, r2
 860 004a B3F90030 		ldrsh	r3, [r3]
 861 004e 0B44     		add	r3, r3, r1
 862 0050 1846     		mov	r0, r3
 863 0052 FFF7FEFF 		bl	__aeabi_i2d
 864 0056 4FF00002 		mov	r2, #0
 865 005a 4FF08043 		mov	r3, #1073741824
 866 005e FFF7FEFF 		bl	__aeabi_ddiv
 867 0062 0346     		mov	r3, r0
 868 0064 0C46     		mov	r4, r1
 869 0066 1846     		mov	r0, r3
 870 0068 2146     		mov	r1, r4
 871 006a FFF7FEFF 		bl	__aeabi_d2iz
 872 006e 0346     		mov	r3, r0
 873 0070 FB81     		strh	r3, [r7, #14]	@ movhi
 874 0072 07E0     		b	.L48
 875              	.L47:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 21


 231:level_sensor.c ****     // if number of elements are odd
 232:level_sensor.c ****     else
 233:level_sensor.c ****         // median is the the middle sorted number 
 234:level_sensor.c ****         median = array[n/2];
 876              		.loc 1 234 0
 877 0074 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 878 0076 5B08     		lsrs	r3, r3, #1
 879 0078 DBB2     		uxtb	r3, r3
 880 007a 5B00     		lsls	r3, r3, #1
 881 007c 7A68     		ldr	r2, [r7, #4]
 882 007e 1344     		add	r3, r3, r2
 883 0080 1B88     		ldrh	r3, [r3]	@ movhi
 884 0082 FB81     		strh	r3, [r7, #14]	@ movhi
 885              	.L48:
 235:level_sensor.c ****     
 236:level_sensor.c ****     return median;
 886              		.loc 1 236 0
 887 0084 FB89     		ldrh	r3, [r7, #14]
 237:level_sensor.c **** }
 888              		.loc 1 237 0
 889 0086 1846     		mov	r0, r3
 890 0088 1437     		adds	r7, r7, #20
 891              		.cfi_def_cfa_offset 12
 892 008a BD46     		mov	sp, r7
 893              		.cfi_def_cfa_register 13
 894              		@ sp needed
 895 008c 90BD     		pop	{r4, r7, pc}
 896              		.cfi_endproc
 897              	.LFE72:
 898              		.size	find_median, .-find_median
 899              		.section	.text.sort,"ax",%progbits
 900              		.align	2
 901              		.global	sort
 902              		.thumb
 903              		.thumb_func
 904              		.type	sort, %function
 905              	sort:
 906              	.LFB73:
 238:level_sensor.c **** 
 239:level_sensor.c **** // function to sort the elements in the level readings array
 240:level_sensor.c **** void sort(int16 a[],int16 n) { 
 907              		.loc 1 240 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 16
 910              		@ frame_needed = 1, uses_anonymous_args = 0
 911 0000 80B5     		push	{r7, lr}
 912              		.cfi_def_cfa_offset 8
 913              		.cfi_offset 7, -8
 914              		.cfi_offset 14, -4
 915 0002 84B0     		sub	sp, sp, #16
 916              		.cfi_def_cfa_offset 24
 917 0004 00AF     		add	r7, sp, #0
 918              		.cfi_def_cfa_register 7
 919 0006 7860     		str	r0, [r7, #4]
 920 0008 0B46     		mov	r3, r1
 921 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 241:level_sensor.c ****    int16 i,j;
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 22


 242:level_sensor.c **** 
 243:level_sensor.c ****    for(i = 0;i < n-1;i++) {
 922              		.loc 1 243 0
 923 000c 0023     		movs	r3, #0
 924 000e FB81     		strh	r3, [r7, #14]	@ movhi
 925 0010 37E0     		b	.L51
 926              	.L55:
 244:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
 927              		.loc 1 244 0
 928 0012 0023     		movs	r3, #0
 929 0014 BB81     		strh	r3, [r7, #12]	@ movhi
 930 0016 24E0     		b	.L52
 931              	.L54:
 245:level_sensor.c ****          if(a[j] > a[j+1])
 932              		.loc 1 245 0
 933 0018 B7F90C30 		ldrsh	r3, [r7, #12]
 934 001c 5B00     		lsls	r3, r3, #1
 935 001e 7A68     		ldr	r2, [r7, #4]
 936 0020 1344     		add	r3, r3, r2
 937 0022 B3F90020 		ldrsh	r2, [r3]
 938 0026 B7F90C30 		ldrsh	r3, [r7, #12]
 939 002a 0133     		adds	r3, r3, #1
 940 002c 5B00     		lsls	r3, r3, #1
 941 002e 7968     		ldr	r1, [r7, #4]
 942 0030 0B44     		add	r3, r3, r1
 943 0032 B3F90030 		ldrsh	r3, [r3]
 944 0036 9A42     		cmp	r2, r3
 945 0038 0DDD     		ble	.L53
 246:level_sensor.c ****             swap(&a[j],&a[j+1]); // swap the address of a[j] and a[j+1]
 946              		.loc 1 246 0
 947 003a B7F90C30 		ldrsh	r3, [r7, #12]
 948 003e 5B00     		lsls	r3, r3, #1
 949 0040 7A68     		ldr	r2, [r7, #4]
 950 0042 D018     		adds	r0, r2, r3
 951 0044 B7F90C30 		ldrsh	r3, [r7, #12]
 952 0048 0133     		adds	r3, r3, #1
 953 004a 5B00     		lsls	r3, r3, #1
 954 004c 7A68     		ldr	r2, [r7, #4]
 955 004e 1344     		add	r3, r3, r2
 956 0050 1946     		mov	r1, r3
 957 0052 FFF7FEFF 		bl	swap
 958              	.L53:
 244:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
 959              		.loc 1 244 0 discriminator 2
 960 0056 B7F90C30 		ldrsh	r3, [r7, #12]
 961 005a 9BB2     		uxth	r3, r3
 962 005c 0133     		adds	r3, r3, #1
 963 005e 9BB2     		uxth	r3, r3
 964 0060 BB81     		strh	r3, [r7, #12]	@ movhi
 965              	.L52:
 244:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
 966              		.loc 1 244 0 is_stmt 0 discriminator 1
 967 0062 B7F90C20 		ldrsh	r2, [r7, #12]
 968 0066 B7F90210 		ldrsh	r1, [r7, #2]
 969 006a B7F90E30 		ldrsh	r3, [r7, #14]
 970 006e CB1A     		subs	r3, r1, r3
 971 0070 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 23


 972 0072 9A42     		cmp	r2, r3
 973 0074 D0DB     		blt	.L54
 243:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
 974              		.loc 1 243 0 is_stmt 1 discriminator 2
 975 0076 B7F90E30 		ldrsh	r3, [r7, #14]
 976 007a 9BB2     		uxth	r3, r3
 977 007c 0133     		adds	r3, r3, #1
 978 007e 9BB2     		uxth	r3, r3
 979 0080 FB81     		strh	r3, [r7, #14]	@ movhi
 980              	.L51:
 243:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
 981              		.loc 1 243 0 is_stmt 0 discriminator 1
 982 0082 B7F90E20 		ldrsh	r2, [r7, #14]
 983 0086 B7F90230 		ldrsh	r3, [r7, #2]
 984 008a 013B     		subs	r3, r3, #1
 985 008c 9A42     		cmp	r2, r3
 986 008e C0DB     		blt	.L55
 247:level_sensor.c ****       }
 248:level_sensor.c ****    }
 249:level_sensor.c **** }
 987              		.loc 1 249 0 is_stmt 1
 988 0090 00BF     		nop
 989 0092 1037     		adds	r7, r7, #16
 990              		.cfi_def_cfa_offset 8
 991 0094 BD46     		mov	sp, r7
 992              		.cfi_def_cfa_register 13
 993              		@ sp needed
 994 0096 80BD     		pop	{r7, pc}
 995              		.cfi_endproc
 996              	.LFE73:
 997              		.size	sort, .-sort
 998              		.section	.text.swap,"ax",%progbits
 999              		.align	2
 1000              		.global	swap
 1001              		.thumb
 1002              		.thumb_func
 1003              		.type	swap, %function
 1004              	swap:
 1005              	.LFB74:
 250:level_sensor.c **** 
 251:level_sensor.c **** // function to swap elements in the level readings array in order to sort them
 252:level_sensor.c **** void swap(int16 *p,int16 *q) {
 1006              		.loc 1 252 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 16
 1009              		@ frame_needed = 1, uses_anonymous_args = 0
 1010              		@ link register save eliminated.
 1011 0000 80B4     		push	{r7}
 1012              		.cfi_def_cfa_offset 4
 1013              		.cfi_offset 7, -4
 1014 0002 85B0     		sub	sp, sp, #20
 1015              		.cfi_def_cfa_offset 24
 1016 0004 00AF     		add	r7, sp, #0
 1017              		.cfi_def_cfa_register 7
 1018 0006 7860     		str	r0, [r7, #4]
 1019 0008 3960     		str	r1, [r7]
 253:level_sensor.c ****    int16 t;
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 24


 254:level_sensor.c ****    
 255:level_sensor.c ****    t=*p; 
 1020              		.loc 1 255 0
 1021 000a 7B68     		ldr	r3, [r7, #4]
 1022 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1023 000e FB81     		strh	r3, [r7, #14]	@ movhi
 256:level_sensor.c ****    *p=*q; 
 1024              		.loc 1 256 0
 1025 0010 3B68     		ldr	r3, [r7]
 1026 0012 B3F90020 		ldrsh	r2, [r3]
 1027 0016 7B68     		ldr	r3, [r7, #4]
 1028 0018 1A80     		strh	r2, [r3]	@ movhi
 257:level_sensor.c ****    *q=t;
 1029              		.loc 1 257 0
 1030 001a 3B68     		ldr	r3, [r7]
 1031 001c FA89     		ldrh	r2, [r7, #14]	@ movhi
 1032 001e 1A80     		strh	r2, [r3]	@ movhi
 258:level_sensor.c **** }
 1033              		.loc 1 258 0
 1034 0020 00BF     		nop
 1035 0022 1437     		adds	r7, r7, #20
 1036              		.cfi_def_cfa_offset 4
 1037 0024 BD46     		mov	sp, r7
 1038              		.cfi_def_cfa_register 13
 1039              		@ sp needed
 1040 0026 80BC     		pop	{r7}
 1041              		.cfi_restore 7
 1042              		.cfi_def_cfa_offset 0
 1043 0028 7047     		bx	lr
 1044              		.cfi_endproc
 1045              	.LFE74:
 1046              		.size	swap, .-swap
 1047 002a 00BF     		.text
 1048              	.Letext0:
 1049              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1050              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1051              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1052              		.file 5 "testing.h"
 1053              		.file 6 "level_sensor.h"
 1054              		.file 7 "data.h"
 1055              		.file 8 "modem.h"
 1056              		.file 9 "notoriOS.h"
 1057              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 1058              		.file 11 "downstream_level_sensor.h"
 1059              		.file 12 "App_LED.h"
 1060              		.section	.debug_info,"",%progbits
 1061              	.Ldebug_info0:
 1062 0000 EB080000 		.4byte	0x8eb
 1063 0004 0400     		.2byte	0x4
 1064 0006 00000000 		.4byte	.Ldebug_abbrev0
 1065 000a 04       		.byte	0x4
 1066 000b 01       		.uleb128 0x1
 1067 000c 86000000 		.4byte	.LASF124
 1068 0010 0C       		.byte	0xc
 1069 0011 61010000 		.4byte	.LASF125
 1070 0015 1C000000 		.4byte	.LASF126
 1071 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 25


 1072 001d 00000000 		.4byte	0
 1073 0021 00000000 		.4byte	.Ldebug_line0
 1074 0025 02       		.uleb128 0x2
 1075 0026 01       		.byte	0x1
 1076 0027 06       		.byte	0x6
 1077 0028 A3010000 		.4byte	.LASF0
 1078 002c 03       		.uleb128 0x3
 1079 002d 64000000 		.4byte	.LASF4
 1080 0031 02       		.byte	0x2
 1081 0032 1D       		.byte	0x1d
 1082 0033 37000000 		.4byte	0x37
 1083 0037 02       		.uleb128 0x2
 1084 0038 01       		.byte	0x1
 1085 0039 08       		.byte	0x8
 1086 003a E3040000 		.4byte	.LASF1
 1087 003e 02       		.uleb128 0x2
 1088 003f 02       		.byte	0x2
 1089 0040 05       		.byte	0x5
 1090 0041 7A030000 		.4byte	.LASF2
 1091 0045 02       		.uleb128 0x2
 1092 0046 02       		.byte	0x2
 1093 0047 07       		.byte	0x7
 1094 0048 F9050000 		.4byte	.LASF3
 1095 004c 03       		.uleb128 0x3
 1096 004d C5050000 		.4byte	.LASF5
 1097 0051 02       		.byte	0x2
 1098 0052 3F       		.byte	0x3f
 1099 0053 57000000 		.4byte	0x57
 1100 0057 02       		.uleb128 0x2
 1101 0058 04       		.byte	0x4
 1102 0059 05       		.byte	0x5
 1103 005a 39020000 		.4byte	.LASF6
 1104 005e 02       		.uleb128 0x2
 1105 005f 04       		.byte	0x4
 1106 0060 07       		.byte	0x7
 1107 0061 22030000 		.4byte	.LASF7
 1108 0065 02       		.uleb128 0x2
 1109 0066 08       		.byte	0x8
 1110 0067 05       		.byte	0x5
 1111 0068 95010000 		.4byte	.LASF8
 1112 006c 02       		.uleb128 0x2
 1113 006d 08       		.byte	0x8
 1114 006e 07       		.byte	0x7
 1115 006f 1F010000 		.4byte	.LASF9
 1116 0073 04       		.uleb128 0x4
 1117 0074 04       		.byte	0x4
 1118 0075 05       		.byte	0x5
 1119 0076 696E7400 		.ascii	"int\000"
 1120 007a 02       		.uleb128 0x2
 1121 007b 04       		.byte	0x4
 1122 007c 07       		.byte	0x7
 1123 007d AD050000 		.4byte	.LASF10
 1124 0081 03       		.uleb128 0x3
 1125 0082 BB060000 		.4byte	.LASF11
 1126 0086 03       		.byte	0x3
 1127 0087 18       		.byte	0x18
 1128 0088 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 26


 1129 008c 03       		.uleb128 0x3
 1130 008d DB040000 		.4byte	.LASF12
 1131 0091 03       		.byte	0x3
 1132 0092 2C       		.byte	0x2c
 1133 0093 4C000000 		.4byte	0x4c
 1134 0097 02       		.uleb128 0x2
 1135 0098 08       		.byte	0x8
 1136 0099 04       		.byte	0x4
 1137 009a 90050000 		.4byte	.LASF13
 1138 009e 02       		.uleb128 0x2
 1139 009f 04       		.byte	0x4
 1140 00a0 07       		.byte	0x7
 1141 00a1 16040000 		.4byte	.LASF14
 1142 00a5 05       		.uleb128 0x5
 1143 00a6 04       		.byte	0x4
 1144 00a7 AB000000 		.4byte	0xab
 1145 00ab 02       		.uleb128 0x2
 1146 00ac 01       		.byte	0x1
 1147 00ad 08       		.byte	0x8
 1148 00ae A8050000 		.4byte	.LASF15
 1149 00b2 05       		.uleb128 0x5
 1150 00b3 04       		.byte	0x4
 1151 00b4 B8000000 		.4byte	0xb8
 1152 00b8 06       		.uleb128 0x6
 1153 00b9 AB000000 		.4byte	0xab
 1154 00bd 07       		.uleb128 0x7
 1155 00be AB000000 		.4byte	0xab
 1156 00c2 CD000000 		.4byte	0xcd
 1157 00c6 08       		.uleb128 0x8
 1158 00c7 9E000000 		.4byte	0x9e
 1159 00cb 17       		.byte	0x17
 1160 00cc 00       		.byte	0
 1161 00cd 02       		.uleb128 0x2
 1162 00ce 08       		.byte	0x8
 1163 00cf 04       		.byte	0x4
 1164 00d0 F5060000 		.4byte	.LASF16
 1165 00d4 02       		.uleb128 0x2
 1166 00d5 04       		.byte	0x4
 1167 00d6 04       		.byte	0x4
 1168 00d7 A8040000 		.4byte	.LASF17
 1169 00db 09       		.uleb128 0x9
 1170 00dc 5E020000 		.4byte	.LASF18
 1171 00e0 04       		.byte	0x4
 1172 00e1 9201     		.2byte	0x192
 1173 00e3 37000000 		.4byte	0x37
 1174 00e7 09       		.uleb128 0x9
 1175 00e8 00000000 		.4byte	.LASF19
 1176 00ec 04       		.byte	0x4
 1177 00ed 9301     		.2byte	0x193
 1178 00ef 45000000 		.4byte	0x45
 1179 00f3 09       		.uleb128 0x9
 1180 00f4 C3060000 		.4byte	.LASF20
 1181 00f8 04       		.byte	0x4
 1182 00f9 9601     		.2byte	0x196
 1183 00fb 3E000000 		.4byte	0x3e
 1184 00ff 09       		.uleb128 0x9
 1185 0100 85020000 		.4byte	.LASF21
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 27


 1186 0104 04       		.byte	0x4
 1187 0105 9701     		.2byte	0x197
 1188 0107 57000000 		.4byte	0x57
 1189 010b 0A       		.uleb128 0xa
 1190 010c 8101     		.2byte	0x181
 1191 010e 05       		.byte	0x5
 1192 010f 0A       		.byte	0xa
 1193 0110 39010000 		.4byte	0x139
 1194 0114 0B       		.uleb128 0xb
 1195 0115 3B040000 		.4byte	.LASF22
 1196 0119 05       		.byte	0x5
 1197 011a 0C       		.byte	0xc
 1198 011b 39010000 		.4byte	0x139
 1199 011f 00       		.byte	0
 1200 0120 0B       		.uleb128 0xb
 1201 0121 50060000 		.4byte	.LASF23
 1202 0125 05       		.byte	0x5
 1203 0126 0D       		.byte	0xd
 1204 0127 DB000000 		.4byte	0xdb
 1205 012b 80       		.byte	0x80
 1206 012c 0B       		.uleb128 0xb
 1207 012d 3D050000 		.4byte	.LASF24
 1208 0131 05       		.byte	0x5
 1209 0132 0F       		.byte	0xf
 1210 0133 49010000 		.4byte	0x149
 1211 0137 81       		.byte	0x81
 1212 0138 00       		.byte	0
 1213 0139 07       		.uleb128 0x7
 1214 013a AB000000 		.4byte	0xab
 1215 013e 49010000 		.4byte	0x149
 1216 0142 08       		.uleb128 0x8
 1217 0143 9E000000 		.4byte	0x9e
 1218 0147 7F       		.byte	0x7f
 1219 0148 00       		.byte	0
 1220 0149 07       		.uleb128 0x7
 1221 014a AB000000 		.4byte	0xab
 1222 014e 59010000 		.4byte	0x159
 1223 0152 08       		.uleb128 0x8
 1224 0153 9E000000 		.4byte	0x9e
 1225 0157 FF       		.byte	0xff
 1226 0158 00       		.byte	0
 1227 0159 03       		.uleb128 0x3
 1228 015a 01050000 		.4byte	.LASF25
 1229 015e 05       		.byte	0x5
 1230 015f 10       		.byte	0x10
 1231 0160 0B010000 		.4byte	0x10b
 1232 0164 0C       		.uleb128 0xc
 1233 0165 1A       		.byte	0x1a
 1234 0166 06       		.byte	0x6
 1235 0167 10       		.byte	0x10
 1236 0168 9D010000 		.4byte	0x19d
 1237 016c 0B       		.uleb128 0xb
 1238 016d BA020000 		.4byte	.LASF26
 1239 0171 06       		.byte	0x6
 1240 0172 11       		.byte	0x11
 1241 0173 9D010000 		.4byte	0x19d
 1242 0177 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 28


 1243 0178 0B       		.uleb128 0xb
 1244 0179 EB050000 		.4byte	.LASF27
 1245 017d 06       		.byte	0x6
 1246 017e 12       		.byte	0x12
 1247 017f F3000000 		.4byte	0xf3
 1248 0183 16       		.byte	0x16
 1249 0184 0B       		.uleb128 0xb
 1250 0185 0F030000 		.4byte	.LASF28
 1251 0189 06       		.byte	0x6
 1252 018a 13       		.byte	0x13
 1253 018b DB000000 		.4byte	0xdb
 1254 018f 18       		.byte	0x18
 1255 0190 0B       		.uleb128 0xb
 1256 0191 07000000 		.4byte	.LASF29
 1257 0195 06       		.byte	0x6
 1258 0196 14       		.byte	0x14
 1259 0197 DB000000 		.4byte	0xdb
 1260 019b 19       		.byte	0x19
 1261 019c 00       		.byte	0
 1262 019d 07       		.uleb128 0x7
 1263 019e F3000000 		.4byte	0xf3
 1264 01a2 AD010000 		.4byte	0x1ad
 1265 01a6 08       		.uleb128 0x8
 1266 01a7 9E000000 		.4byte	0x9e
 1267 01ab 0A       		.byte	0xa
 1268 01ac 00       		.byte	0
 1269 01ad 03       		.uleb128 0x3
 1270 01ae C0040000 		.4byte	.LASF30
 1271 01b2 06       		.byte	0x6
 1272 01b3 15       		.byte	0x15
 1273 01b4 64010000 		.4byte	0x164
 1274 01b8 0C       		.uleb128 0xc
 1275 01b9 2C       		.byte	0x2c
 1276 01ba 07       		.byte	0x7
 1277 01bb 14       		.byte	0x14
 1278 01bc E5010000 		.4byte	0x1e5
 1279 01c0 0D       		.uleb128 0xd
 1280 01c1 6B657900 		.ascii	"key\000"
 1281 01c5 07       		.byte	0x7
 1282 01c6 15       		.byte	0x15
 1283 01c7 E5010000 		.4byte	0x1e5
 1284 01cb 00       		.byte	0
 1285 01cc 0B       		.uleb128 0xb
 1286 01cd E3020000 		.4byte	.LASF31
 1287 01d1 07       		.byte	0x7
 1288 01d2 16       		.byte	0x16
 1289 01d3 E5010000 		.4byte	0x1e5
 1290 01d7 14       		.byte	0x14
 1291 01d8 0B       		.uleb128 0xb
 1292 01d9 5C040000 		.4byte	.LASF32
 1293 01dd 07       		.byte	0x7
 1294 01de 17       		.byte	0x17
 1295 01df FF000000 		.4byte	0xff
 1296 01e3 28       		.byte	0x28
 1297 01e4 00       		.byte	0
 1298 01e5 07       		.uleb128 0x7
 1299 01e6 AB000000 		.4byte	0xab
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 29


 1300 01ea F5010000 		.4byte	0x1f5
 1301 01ee 08       		.uleb128 0x8
 1302 01ef 9E000000 		.4byte	0x9e
 1303 01f3 13       		.byte	0x13
 1304 01f4 00       		.byte	0
 1305 01f5 03       		.uleb128 0x3
 1306 01f6 03030000 		.4byte	.LASF33
 1307 01fa 07       		.byte	0x7
 1308 01fb 19       		.byte	0x19
 1309 01fc B8010000 		.4byte	0x1b8
 1310 0200 0C       		.uleb128 0xc
 1311 0201 3C       		.byte	0x3c
 1312 0202 08       		.byte	0x8
 1313 0203 36       		.byte	0x36
 1314 0204 2D020000 		.4byte	0x22d
 1315 0208 0B       		.uleb128 0xb
 1316 0209 0C060000 		.4byte	.LASF34
 1317 020d 08       		.byte	0x8
 1318 020e 37       		.byte	0x37
 1319 020f E5010000 		.4byte	0x1e5
 1320 0213 00       		.byte	0
 1321 0214 0B       		.uleb128 0xb
 1322 0215 B1020000 		.4byte	.LASF35
 1323 0219 08       		.byte	0x8
 1324 021a 38       		.byte	0x38
 1325 021b E5010000 		.4byte	0x1e5
 1326 021f 14       		.byte	0x14
 1327 0220 0B       		.uleb128 0xb
 1328 0221 38050000 		.4byte	.LASF36
 1329 0225 08       		.byte	0x8
 1330 0226 39       		.byte	0x39
 1331 0227 E5010000 		.4byte	0x1e5
 1332 022b 28       		.byte	0x28
 1333 022c 00       		.byte	0
 1334 022d 03       		.uleb128 0x3
 1335 022e 0B020000 		.4byte	.LASF37
 1336 0232 08       		.byte	0x8
 1337 0233 3B       		.byte	0x3b
 1338 0234 00020000 		.4byte	0x200
 1339 0238 0C       		.uleb128 0xc
 1340 0239 20       		.byte	0x20
 1341 023a 08       		.byte	0x8
 1342 023b 3D       		.byte	0x3d
 1343 023c A1020000 		.4byte	0x2a1
 1344 0240 0B       		.uleb128 0xb
 1345 0241 33020000 		.4byte	.LASF38
 1346 0245 08       		.byte	0x8
 1347 0246 3E       		.byte	0x3e
 1348 0247 73000000 		.4byte	0x73
 1349 024b 00       		.byte	0
 1350 024c 0D       		.uleb128 0xd
 1351 024d 62657200 		.ascii	"ber\000"
 1352 0251 08       		.byte	0x8
 1353 0252 3F       		.byte	0x3f
 1354 0253 73000000 		.4byte	0x73
 1355 0257 04       		.byte	0x4
 1356 0258 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 30


 1357 0259 27050000 		.4byte	.LASF39
 1358 025d 08       		.byte	0x8
 1359 025e 40       		.byte	0x40
 1360 025f 73000000 		.4byte	0x73
 1361 0263 08       		.byte	0x8
 1362 0264 0B       		.uleb128 0xb
 1363 0265 AF010000 		.4byte	.LASF40
 1364 0269 08       		.byte	0x8
 1365 026a 41       		.byte	0x41
 1366 026b 73000000 		.4byte	0x73
 1367 026f 0C       		.byte	0xc
 1368 0270 0B       		.uleb128 0xb
 1369 0271 0D050000 		.4byte	.LASF41
 1370 0275 08       		.byte	0x8
 1371 0276 42       		.byte	0x42
 1372 0277 73000000 		.4byte	0x73
 1373 027b 10       		.byte	0x10
 1374 027c 0B       		.uleb128 0xb
 1375 027d 08050000 		.4byte	.LASF42
 1376 0281 08       		.byte	0x8
 1377 0282 43       		.byte	0x43
 1378 0283 73000000 		.4byte	0x73
 1379 0287 14       		.byte	0x14
 1380 0288 0B       		.uleb128 0xb
 1381 0289 D1010000 		.4byte	.LASF43
 1382 028d 08       		.byte	0x8
 1383 028e 44       		.byte	0x44
 1384 028f 73000000 		.4byte	0x73
 1385 0293 18       		.byte	0x18
 1386 0294 0B       		.uleb128 0xb
 1387 0295 67030000 		.4byte	.LASF44
 1388 0299 08       		.byte	0x8
 1389 029a 45       		.byte	0x45
 1390 029b 73000000 		.4byte	0x73
 1391 029f 1C       		.byte	0x1c
 1392 02a0 00       		.byte	0
 1393 02a1 03       		.uleb128 0x3
 1394 02a2 4C050000 		.4byte	.LASF45
 1395 02a6 08       		.byte	0x8
 1396 02a7 47       		.byte	0x47
 1397 02a8 38020000 		.4byte	0x238
 1398 02ac 0C       		.uleb128 0xc
 1399 02ad 08       		.byte	0x8
 1400 02ae 08       		.byte	0x8
 1401 02af 53       		.byte	0x53
 1402 02b0 15030000 		.4byte	0x315
 1403 02b4 0B       		.uleb128 0xb
 1404 02b5 8B020000 		.4byte	.LASF46
 1405 02b9 08       		.byte	0x8
 1406 02ba 55       		.byte	0x55
 1407 02bb DB000000 		.4byte	0xdb
 1408 02bf 00       		.byte	0
 1409 02c0 0B       		.uleb128 0xb
 1410 02c1 D7060000 		.4byte	.LASF47
 1411 02c5 08       		.byte	0x8
 1412 02c6 57       		.byte	0x57
 1413 02c7 15030000 		.4byte	0x315
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 31


 1414 02cb 01       		.byte	0x1
 1415 02cc 0B       		.uleb128 0xb
 1416 02cd CF050000 		.4byte	.LASF48
 1417 02d1 08       		.byte	0x8
 1418 02d2 59       		.byte	0x59
 1419 02d3 DB000000 		.4byte	0xdb
 1420 02d7 02       		.byte	0x2
 1421 02d8 0B       		.uleb128 0xb
 1422 02d9 12050000 		.4byte	.LASF49
 1423 02dd 08       		.byte	0x8
 1424 02de 5B       		.byte	0x5b
 1425 02df DB000000 		.4byte	0xdb
 1426 02e3 03       		.byte	0x3
 1427 02e4 0B       		.uleb128 0xb
 1428 02e5 D7020000 		.4byte	.LASF50
 1429 02e9 08       		.byte	0x8
 1430 02ea 5E       		.byte	0x5e
 1431 02eb DB000000 		.4byte	0xdb
 1432 02ef 04       		.byte	0x4
 1433 02f0 0B       		.uleb128 0xb
 1434 02f1 85060000 		.4byte	.LASF51
 1435 02f5 08       		.byte	0x8
 1436 02f6 63       		.byte	0x63
 1437 02f7 DB000000 		.4byte	0xdb
 1438 02fb 05       		.byte	0x5
 1439 02fc 0B       		.uleb128 0xb
 1440 02fd 6B050000 		.4byte	.LASF52
 1441 0301 08       		.byte	0x8
 1442 0302 65       		.byte	0x65
 1443 0303 DB000000 		.4byte	0xdb
 1444 0307 06       		.byte	0x6
 1445 0308 0B       		.uleb128 0xb
 1446 0309 27060000 		.4byte	.LASF53
 1447 030d 08       		.byte	0x8
 1448 030e 66       		.byte	0x66
 1449 030f DB000000 		.4byte	0xdb
 1450 0313 07       		.byte	0x7
 1451 0314 00       		.byte	0
 1452 0315 02       		.uleb128 0x2
 1453 0316 01       		.byte	0x1
 1454 0317 02       		.byte	0x2
 1455 0318 D5040000 		.4byte	.LASF54
 1456 031c 03       		.uleb128 0x3
 1457 031d D2030000 		.4byte	.LASF55
 1458 0321 08       		.byte	0x8
 1459 0322 68       		.byte	0x68
 1460 0323 AC020000 		.4byte	0x2ac
 1461 0327 0C       		.uleb128 0xc
 1462 0328 06       		.byte	0x6
 1463 0329 09       		.byte	0x9
 1464 032a 2F       		.byte	0x2f
 1465 032b 60030000 		.4byte	0x360
 1466 032f 0B       		.uleb128 0xb
 1467 0330 B4010000 		.4byte	.LASF56
 1468 0334 09       		.byte	0x9
 1469 0335 31       		.byte	0x31
 1470 0336 E7000000 		.4byte	0xe7
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 32


 1471 033a 00       		.byte	0
 1472 033b 0B       		.uleb128 0xb
 1473 033c 42020000 		.4byte	.LASF57
 1474 0340 09       		.byte	0x9
 1475 0341 32       		.byte	0x32
 1476 0342 F3000000 		.4byte	0xf3
 1477 0346 02       		.byte	0x2
 1478 0347 0B       		.uleb128 0xb
 1479 0348 C9060000 		.4byte	.LASF58
 1480 034c 09       		.byte	0x9
 1481 034d 33       		.byte	0x33
 1482 034e DB000000 		.4byte	0xdb
 1483 0352 04       		.byte	0x4
 1484 0353 0B       		.uleb128 0xb
 1485 0354 6E000000 		.4byte	.LASF59
 1486 0358 09       		.byte	0x9
 1487 0359 34       		.byte	0x34
 1488 035a DB000000 		.4byte	0xdb
 1489 035e 05       		.byte	0x5
 1490 035f 00       		.byte	0
 1491 0360 03       		.uleb128 0x3
 1492 0361 58020000 		.4byte	.LASF60
 1493 0365 09       		.byte	0x9
 1494 0366 37       		.byte	0x37
 1495 0367 6B030000 		.4byte	0x36b
 1496 036b 0E       		.uleb128 0xe
 1497 036c 27030000 		.4byte	0x327
 1498 0370 0C       		.uleb128 0xc
 1499 0371 1C       		.byte	0x1c
 1500 0372 09       		.byte	0x9
 1501 0373 3A       		.byte	0x3a
 1502 0374 91030000 		.4byte	0x391
 1503 0378 0B       		.uleb128 0xb
 1504 0379 4D030000 		.4byte	.LASF61
 1505 037d 09       		.byte	0x9
 1506 037e 3C       		.byte	0x3c
 1507 037f 91030000 		.4byte	0x391
 1508 0383 00       		.byte	0
 1509 0384 0B       		.uleb128 0xb
 1510 0385 A3020000 		.4byte	.LASF62
 1511 0389 09       		.byte	0x9
 1512 038a 3D       		.byte	0x3d
 1513 038b BD000000 		.4byte	0xbd
 1514 038f 04       		.byte	0x4
 1515 0390 00       		.byte	0
 1516 0391 05       		.uleb128 0x5
 1517 0392 04       		.byte	0x4
 1518 0393 2D020000 		.4byte	0x22d
 1519 0397 03       		.uleb128 0x3
 1520 0398 C7030000 		.4byte	.LASF63
 1521 039c 09       		.byte	0x9
 1522 039d 3F       		.byte	0x3f
 1523 039e 70030000 		.4byte	0x370
 1524 03a2 0C       		.uleb128 0xc
 1525 03a3 68       		.byte	0x68
 1526 03a4 09       		.byte	0x9
 1527 03a5 45       		.byte	0x45
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 33


 1528 03a6 C3030000 		.4byte	0x3c3
 1529 03aa 0B       		.uleb128 0xb
 1530 03ab 58030000 		.4byte	.LASF64
 1531 03af 09       		.byte	0x9
 1532 03b0 4A       		.byte	0x4a
 1533 03b1 C3030000 		.4byte	0x3c3
 1534 03b5 00       		.byte	0
 1535 03b6 0B       		.uleb128 0xb
 1536 03b7 45030000 		.4byte	.LASF65
 1537 03bb 09       		.byte	0x9
 1538 03bc 4B       		.byte	0x4b
 1539 03bd 73000000 		.4byte	0x73
 1540 03c1 64       		.byte	0x64
 1541 03c2 00       		.byte	0
 1542 03c3 07       		.uleb128 0x7
 1543 03c4 AB000000 		.4byte	0xab
 1544 03c8 D3030000 		.4byte	0x3d3
 1545 03cc 08       		.uleb128 0x8
 1546 03cd 9E000000 		.4byte	0x9e
 1547 03d1 63       		.byte	0x63
 1548 03d2 00       		.byte	0
 1549 03d3 03       		.uleb128 0x3
 1550 03d4 AC060000 		.4byte	.LASF66
 1551 03d8 09       		.byte	0x9
 1552 03d9 51       		.byte	0x51
 1553 03da A2030000 		.4byte	0x3a2
 1554 03de 0F       		.uleb128 0xf
 1555 03df 34030000 		.4byte	.LASF67
 1556 03e3 01       		.byte	0x1
 1557 03e4 17       		.byte	0x17
 1558 03e5 B2000000 		.4byte	0xb2
 1559 03e9 00000000 		.4byte	.LFB64
 1560 03ed 14000000 		.4byte	.LFE64-.LFB64
 1561 03f1 01       		.uleb128 0x1
 1562 03f2 9C       		.byte	0x9c
 1563 03f3 0F       		.uleb128 0xf
 1564 03f4 81040000 		.4byte	.LASF68
 1565 03f8 01       		.byte	0x1
 1566 03f9 1E       		.byte	0x1e
 1567 03fa 81000000 		.4byte	0x81
 1568 03fe 00000000 		.4byte	.LFB65
 1569 0402 14000000 		.4byte	.LFE65-.LFB65
 1570 0406 01       		.uleb128 0x1
 1571 0407 9C       		.byte	0x9c
 1572 0408 10       		.uleb128 0x10
 1573 0409 1C050000 		.4byte	.LASF127
 1574 040d 01       		.byte	0x1
 1575 040e 23       		.byte	0x23
 1576 040f 00000000 		.4byte	.LFB66
 1577 0413 28000000 		.4byte	.LFE66-.LFB66
 1578 0417 01       		.uleb128 0x1
 1579 0418 9C       		.byte	0x9c
 1580 0419 11       		.uleb128 0x11
 1581 041a 05040000 		.4byte	.LASF69
 1582 041e 01       		.byte	0x1
 1583 041f 2E       		.byte	0x2e
 1584 0420 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 34


 1585 0424 70000000 		.4byte	.LFE67-.LFB67
 1586 0428 01       		.uleb128 0x1
 1587 0429 9C       		.byte	0x9c
 1588 042a 3D040000 		.4byte	0x43d
 1589 042e 12       		.uleb128 0x12
 1590 042f 44050000 		.4byte	.LASF72
 1591 0433 01       		.byte	0x1
 1592 0434 32       		.byte	0x32
 1593 0435 AB000000 		.4byte	0xab
 1594 0439 02       		.uleb128 0x2
 1595 043a 91       		.byte	0x91
 1596 043b 77       		.sleb128 -9
 1597 043c 00       		.byte	0
 1598 043d 11       		.uleb128 0x11
 1599 043e 13060000 		.4byte	.LASF70
 1600 0442 01       		.byte	0x1
 1601 0443 3E       		.byte	0x3e
 1602 0444 00000000 		.4byte	.LFB68
 1603 0448 1C000000 		.4byte	.LFE68-.LFB68
 1604 044c 01       		.uleb128 0x1
 1605 044d 9C       		.byte	0x9c
 1606 044e 61040000 		.4byte	0x461
 1607 0452 13       		.uleb128 0x13
 1608 0453 E0060000 		.4byte	.LASF83
 1609 0457 01       		.byte	0x1
 1610 0458 3E       		.byte	0x3e
 1611 0459 A5000000 		.4byte	0xa5
 1612 045d 02       		.uleb128 0x2
 1613 045e 91       		.byte	0x91
 1614 045f 74       		.sleb128 -12
 1615 0460 00       		.byte	0
 1616 0461 14       		.uleb128 0x14
 1617 0462 F4010000 		.4byte	.LASF71
 1618 0466 01       		.byte	0x1
 1619 0467 42       		.byte	0x42
 1620 0468 DB000000 		.4byte	0xdb
 1621 046c 00000000 		.4byte	.LFB69
 1622 0470 00010000 		.4byte	.LFE69-.LFB69
 1623 0474 01       		.uleb128 0x1
 1624 0475 9C       		.byte	0x9c
 1625 0476 CC040000 		.4byte	0x4cc
 1626 047a 12       		.uleb128 0x12
 1627 047b 97040000 		.4byte	.LASF73
 1628 047f 01       		.byte	0x1
 1629 0480 43       		.byte	0x43
 1630 0481 A5000000 		.4byte	0xa5
 1631 0485 02       		.uleb128 0x2
 1632 0486 91       		.byte	0x91
 1633 0487 74       		.sleb128 -12
 1634 0488 15       		.uleb128 0x15
 1635 0489 2A000000 		.4byte	.LBB2
 1636 048d 96000000 		.4byte	.LBE2-.LBB2
 1637 0491 12       		.uleb128 0x12
 1638 0492 5C040000 		.4byte	.LASF32
 1639 0496 01       		.byte	0x1
 1640 0497 52       		.byte	0x52
 1641 0498 57000000 		.4byte	0x57
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 35


 1642 049c 02       		.uleb128 0x2
 1643 049d 91       		.byte	0x91
 1644 049e 70       		.sleb128 -16
 1645 049f 12       		.uleb128 0x12
 1646 04a0 9C050000 		.4byte	.LASF74
 1647 04a4 01       		.byte	0x1
 1648 04a5 53       		.byte	0x53
 1649 04a6 CC040000 		.4byte	0x4cc
 1650 04aa 03       		.uleb128 0x3
 1651 04ab 91       		.byte	0x91
 1652 04ac A07F     		.sleb128 -96
 1653 04ae 12       		.uleb128 0x12
 1654 04af E3020000 		.4byte	.LASF31
 1655 04b3 01       		.byte	0x1
 1656 04b4 57       		.byte	0x57
 1657 04b5 E5010000 		.4byte	0x1e5
 1658 04b9 02       		.uleb128 0x2
 1659 04ba 91       		.byte	0x91
 1660 04bb 5C       		.sleb128 -36
 1661 04bc 12       		.uleb128 0x12
 1662 04bd DC050000 		.4byte	.LASF75
 1663 04c1 01       		.byte	0x1
 1664 04c2 5A       		.byte	0x5a
 1665 04c3 AD010000 		.4byte	0x1ad
 1666 04c7 02       		.uleb128 0x2
 1667 04c8 91       		.byte	0x91
 1668 04c9 40       		.sleb128 -64
 1669 04ca 00       		.byte	0
 1670 04cb 00       		.byte	0
 1671 04cc 07       		.uleb128 0x7
 1672 04cd AB000000 		.4byte	0xab
 1673 04d1 DC040000 		.4byte	0x4dc
 1674 04d5 08       		.uleb128 0x8
 1675 04d6 9E000000 		.4byte	0x9e
 1676 04da 1F       		.byte	0x1f
 1677 04db 00       		.byte	0
 1678 04dc 14       		.uleb128 0x14
 1679 04dd 92060000 		.4byte	.LASF76
 1680 04e1 01       		.byte	0x1
 1681 04e2 78       		.byte	0x78
 1682 04e3 AD010000 		.4byte	0x1ad
 1683 04e7 00000000 		.4byte	.LFB70
 1684 04eb 1C010000 		.4byte	.LFE70-.LFB70
 1685 04ef 01       		.uleb128 0x1
 1686 04f0 9C       		.byte	0x9c
 1687 04f1 26050000 		.4byte	0x526
 1688 04f5 12       		.uleb128 0x12
 1689 04f6 64020000 		.4byte	.LASF77
 1690 04fa 01       		.byte	0x1
 1691 04fb 7B       		.byte	0x7b
 1692 04fc AD010000 		.4byte	0x1ad
 1693 0500 02       		.uleb128 0x2
 1694 0501 91       		.byte	0x91
 1695 0502 50       		.sleb128 -48
 1696 0503 12       		.uleb128 0x12
 1697 0504 CF040000 		.4byte	.LASF78
 1698 0508 01       		.byte	0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 36


 1699 0509 9D       		.byte	0x9d
 1700 050a A5000000 		.4byte	0xa5
 1701 050e 02       		.uleb128 0x2
 1702 050f 91       		.byte	0x91
 1703 0510 6C       		.sleb128 -20
 1704 0511 16       		.uleb128 0x16
 1705 0512 00000000 		.4byte	.Ldebug_ranges0+0
 1706 0516 12       		.uleb128 0x12
 1707 0517 95020000 		.4byte	.LASF79
 1708 051b 01       		.byte	0x1
 1709 051c A5       		.byte	0xa5
 1710 051d E7000000 		.4byte	0xe7
 1711 0521 02       		.uleb128 0x2
 1712 0522 91       		.byte	0x91
 1713 0523 6A       		.sleb128 -22
 1714 0524 00       		.byte	0
 1715 0525 00       		.byte	0
 1716 0526 14       		.uleb128 0x14
 1717 0527 AE040000 		.4byte	.LASF80
 1718 052b 01       		.byte	0x1
 1719 052c C0       		.byte	0xc0
 1720 052d 59010000 		.4byte	0x159
 1721 0531 00000000 		.4byte	.LFB71
 1722 0535 CC000000 		.4byte	.LFE71-.LFB71
 1723 0539 01       		.uleb128 0x1
 1724 053a 9C       		.byte	0x9c
 1725 053b 5E050000 		.4byte	0x55e
 1726 053f 12       		.uleb128 0x12
 1727 0540 42010000 		.4byte	.LASF81
 1728 0544 01       		.byte	0x1
 1729 0545 C2       		.byte	0xc2
 1730 0546 59010000 		.4byte	0x159
 1731 054a 03       		.uleb128 0x3
 1732 054b 91       		.byte	0x91
 1733 054c EC7C     		.sleb128 -404
 1734 054e 12       		.uleb128 0x12
 1735 054f 60030000 		.4byte	.LASF82
 1736 0553 01       		.byte	0x1
 1737 0554 C7       		.byte	0xc7
 1738 0555 AD010000 		.4byte	0x1ad
 1739 0559 03       		.uleb128 0x3
 1740 055a 91       		.byte	0x91
 1741 055b D07C     		.sleb128 -432
 1742 055d 00       		.byte	0
 1743 055e 17       		.uleb128 0x17
 1744 055f 44060000 		.4byte	.LASF128
 1745 0563 01       		.byte	0x1
 1746 0564 DE       		.byte	0xde
 1747 0565 E7000000 		.4byte	0xe7
 1748 0569 00000000 		.4byte	.LFB72
 1749 056d 8E000000 		.4byte	.LFE72-.LFB72
 1750 0571 01       		.uleb128 0x1
 1751 0572 9C       		.byte	0x9c
 1752 0573 A0050000 		.4byte	0x5a0
 1753 0577 13       		.uleb128 0x13
 1754 0578 9D020000 		.4byte	.LASF84
 1755 057c 01       		.byte	0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 37


 1756 057d DE       		.byte	0xde
 1757 057e A0050000 		.4byte	0x5a0
 1758 0582 02       		.uleb128 0x2
 1759 0583 91       		.byte	0x91
 1760 0584 64       		.sleb128 -28
 1761 0585 18       		.uleb128 0x18
 1762 0586 6E00     		.ascii	"n\000"
 1763 0588 01       		.byte	0x1
 1764 0589 DE       		.byte	0xde
 1765 058a DB000000 		.4byte	0xdb
 1766 058e 02       		.uleb128 0x2
 1767 058f 91       		.byte	0x91
 1768 0590 63       		.sleb128 -29
 1769 0591 12       		.uleb128 0x12
 1770 0592 70010000 		.4byte	.LASF85
 1771 0596 01       		.byte	0x1
 1772 0597 E0       		.byte	0xe0
 1773 0598 F3000000 		.4byte	0xf3
 1774 059c 02       		.uleb128 0x2
 1775 059d 91       		.byte	0x91
 1776 059e 6E       		.sleb128 -18
 1777 059f 00       		.byte	0
 1778 05a0 05       		.uleb128 0x5
 1779 05a1 04       		.byte	0x4
 1780 05a2 F3000000 		.4byte	0xf3
 1781 05a6 11       		.uleb128 0x11
 1782 05a7 D2020000 		.4byte	.LASF86
 1783 05ab 01       		.byte	0x1
 1784 05ac F0       		.byte	0xf0
 1785 05ad 00000000 		.4byte	.LFB73
 1786 05b1 98000000 		.4byte	.LFE73-.LFB73
 1787 05b5 01       		.uleb128 0x1
 1788 05b6 9C       		.byte	0x9c
 1789 05b7 EC050000 		.4byte	0x5ec
 1790 05bb 18       		.uleb128 0x18
 1791 05bc 6100     		.ascii	"a\000"
 1792 05be 01       		.byte	0x1
 1793 05bf F0       		.byte	0xf0
 1794 05c0 A0050000 		.4byte	0x5a0
 1795 05c4 02       		.uleb128 0x2
 1796 05c5 91       		.byte	0x91
 1797 05c6 6C       		.sleb128 -20
 1798 05c7 18       		.uleb128 0x18
 1799 05c8 6E00     		.ascii	"n\000"
 1800 05ca 01       		.byte	0x1
 1801 05cb F0       		.byte	0xf0
 1802 05cc F3000000 		.4byte	0xf3
 1803 05d0 02       		.uleb128 0x2
 1804 05d1 91       		.byte	0x91
 1805 05d2 6A       		.sleb128 -22
 1806 05d3 19       		.uleb128 0x19
 1807 05d4 6900     		.ascii	"i\000"
 1808 05d6 01       		.byte	0x1
 1809 05d7 F1       		.byte	0xf1
 1810 05d8 F3000000 		.4byte	0xf3
 1811 05dc 02       		.uleb128 0x2
 1812 05dd 91       		.byte	0x91
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 38


 1813 05de 76       		.sleb128 -10
 1814 05df 19       		.uleb128 0x19
 1815 05e0 6A00     		.ascii	"j\000"
 1816 05e2 01       		.byte	0x1
 1817 05e3 F1       		.byte	0xf1
 1818 05e4 F3000000 		.4byte	0xf3
 1819 05e8 02       		.uleb128 0x2
 1820 05e9 91       		.byte	0x91
 1821 05ea 74       		.sleb128 -12
 1822 05eb 00       		.byte	0
 1823 05ec 1A       		.uleb128 0x1a
 1824 05ed 92040000 		.4byte	.LASF87
 1825 05f1 01       		.byte	0x1
 1826 05f2 FC       		.byte	0xfc
 1827 05f3 00000000 		.4byte	.LFB74
 1828 05f7 2A000000 		.4byte	.LFE74-.LFB74
 1829 05fb 01       		.uleb128 0x1
 1830 05fc 9C       		.byte	0x9c
 1831 05fd 26060000 		.4byte	0x626
 1832 0601 18       		.uleb128 0x18
 1833 0602 7000     		.ascii	"p\000"
 1834 0604 01       		.byte	0x1
 1835 0605 FC       		.byte	0xfc
 1836 0606 A0050000 		.4byte	0x5a0
 1837 060a 02       		.uleb128 0x2
 1838 060b 91       		.byte	0x91
 1839 060c 6C       		.sleb128 -20
 1840 060d 18       		.uleb128 0x18
 1841 060e 7100     		.ascii	"q\000"
 1842 0610 01       		.byte	0x1
 1843 0611 FC       		.byte	0xfc
 1844 0612 A0050000 		.4byte	0x5a0
 1845 0616 02       		.uleb128 0x2
 1846 0617 91       		.byte	0x91
 1847 0618 68       		.sleb128 -24
 1848 0619 19       		.uleb128 0x19
 1849 061a 7400     		.ascii	"t\000"
 1850 061c 01       		.byte	0x1
 1851 061d FD       		.byte	0xfd
 1852 061e F3000000 		.4byte	0xf3
 1853 0622 02       		.uleb128 0x2
 1854 0623 91       		.byte	0x91
 1855 0624 76       		.sleb128 -10
 1856 0625 00       		.byte	0
 1857 0626 07       		.uleb128 0x7
 1858 0627 AB000000 		.4byte	0xab
 1859 062b 37060000 		.4byte	0x637
 1860 062f 1B       		.uleb128 0x1b
 1861 0630 9E000000 		.4byte	0x9e
 1862 0634 0001     		.2byte	0x100
 1863 0636 00       		.byte	0
 1864 0637 12       		.uleb128 0x12
 1865 0638 14010000 		.4byte	.LASF88
 1866 063c 01       		.byte	0x1
 1867 063d 0C       		.byte	0xc
 1868 063e 26060000 		.4byte	0x626
 1869 0642 05       		.uleb128 0x5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 39


 1870 0643 03       		.byte	0x3
 1871 0644 00000000 		.4byte	uart_chars
 1872 0648 12       		.uleb128 0x12
 1873 0649 FB030000 		.4byte	.LASF89
 1874 064d 01       		.byte	0x1
 1875 064e 0D       		.byte	0xd
 1876 064f 81000000 		.4byte	0x81
 1877 0653 05       		.uleb128 0x5
 1878 0654 03       		.byte	0x3
 1879 0655 01010000 		.4byte	num_chars
 1880 0659 12       		.uleb128 0x12
 1881 065a CD020000 		.4byte	.LASF90
 1882 065e 01       		.byte	0x1
 1883 065f 0F       		.byte	0xf
 1884 0660 B2000000 		.4byte	0xb2
 1885 0664 05       		.uleb128 0x5
 1886 0665 03       		.byte	0x3
 1887 0666 00000000 		.4byte	line
 1888 066a 12       		.uleb128 0x12
 1889 066b 66040000 		.4byte	.LASF91
 1890 066f 01       		.byte	0x1
 1891 0670 12       		.byte	0x12
 1892 0671 B2000000 		.4byte	0xb2
 1893 0675 05       		.uleb128 0x5
 1894 0676 03       		.byte	0x3
 1895 0677 04010000 		.4byte	match
 1896 067b 12       		.uleb128 0x12
 1897 067c 8A040000 		.4byte	.LASF92
 1898 0680 01       		.byte	0x1
 1899 0681 13       		.byte	0x13
 1900 0682 B2000000 		.4byte	0xb2
 1901 0686 05       		.uleb128 0x5
 1902 0687 03       		.byte	0x3
 1903 0688 08010000 		.4byte	pattern
 1904 068c 1C       		.uleb128 0x1c
 1905 068d 54010000 		.4byte	.LASF93
 1906 0691 0A       		.byte	0xa
 1907 0692 1207     		.2byte	0x712
 1908 0694 98060000 		.4byte	0x698
 1909 0698 0E       		.uleb128 0xe
 1910 0699 8C000000 		.4byte	0x8c
 1911 069d 1D       		.uleb128 0x1d
 1912 069e 7D050000 		.4byte	.LASF94
 1913 06a2 06       		.byte	0x6
 1914 06a3 25       		.byte	0x25
 1915 06a4 C3030000 		.4byte	0x3c3
 1916 06a8 05       		.uleb128 0x5
 1917 06a9 03       		.byte	0x3
 1918 06aa 00000000 		.4byte	level_sensor_inbox
 1919 06ae 1D       		.uleb128 0x1d
 1920 06af 57060000 		.4byte	.LASF95
 1921 06b3 06       		.byte	0x6
 1922 06b4 27       		.byte	0x27
 1923 06b5 15030000 		.4byte	0x315
 1924 06b9 05       		.uleb128 0x5
 1925 06ba 03       		.byte	0x3
 1926 06bb 00000000 		.4byte	level_sensor_enabled
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 40


 1927 06bf 1D       		.uleb128 0x1d
 1928 06c0 0A070000 		.4byte	.LASF96
 1929 06c4 0B       		.byte	0xb
 1930 06c5 0F       		.byte	0xf
 1931 06c6 C3030000 		.4byte	0x3c3
 1932 06ca 05       		.uleb128 0x5
 1933 06cb 03       		.byte	0x3
 1934 06cc 00000000 		.4byte	downstream_level_sensor_inbox
 1935 06d0 1D       		.uleb128 0x1d
 1936 06d1 A7030000 		.4byte	.LASF97
 1937 06d5 0B       		.byte	0xb
 1938 06d6 11       		.byte	0x11
 1939 06d7 15030000 		.4byte	0x315
 1940 06db 05       		.uleb128 0x5
 1941 06dc 03       		.byte	0x3
 1942 06dd 00000000 		.4byte	downstream_level_sensor_enabled
 1943 06e1 1D       		.uleb128 0x1d
 1944 06e2 54000000 		.4byte	.LASF98
 1945 06e6 07       		.byte	0x7
 1946 06e7 11       		.byte	0x11
 1947 06e8 15030000 		.4byte	0x315
 1948 06ec 05       		.uleb128 0x5
 1949 06ed 03       		.byte	0x3
 1950 06ee 00000000 		.4byte	buffer_overflow
 1951 06f2 1D       		.uleb128 0x1d
 1952 06f3 E9030000 		.4byte	.LASF99
 1953 06f7 07       		.byte	0x7
 1954 06f8 22       		.byte	0x22
 1955 06f9 E7000000 		.4byte	0xe7
 1956 06fd 05       		.uleb128 0x5
 1957 06fe 03       		.byte	0x3
 1958 06ff 00000000 		.4byte	dataPointsInStack
 1959 0703 1D       		.uleb128 0x1d
 1960 0704 6C060000 		.4byte	.LASF100
 1961 0708 07       		.byte	0x7
 1962 0709 23       		.byte	0x23
 1963 070a E7000000 		.4byte	0xe7
 1964 070e 05       		.uleb128 0x5
 1965 070f 03       		.byte	0x3
 1966 0710 00000000 		.4byte	dataPointsInStackDesired
 1967 0714 07       		.uleb128 0x7
 1968 0715 F5010000 		.4byte	0x1f5
 1969 0719 24070000 		.4byte	0x724
 1970 071d 08       		.uleb128 0x8
 1971 071e 9E000000 		.4byte	0x9e
 1972 0722 95       		.byte	0x95
 1973 0723 00       		.byte	0
 1974 0724 1D       		.uleb128 0x1d
 1975 0725 40030000 		.4byte	.LASF101
 1976 0729 07       		.byte	0x7
 1977 072a 24       		.byte	0x24
 1978 072b 14070000 		.4byte	0x714
 1979 072f 05       		.uleb128 0x5
 1980 0730 03       		.byte	0x3
 1981 0731 00000000 		.4byte	data
 1982 0735 1D       		.uleb128 0x1d
 1983 0736 36010000 		.4byte	.LASF102
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 41


 1984 073a 08       		.byte	0x8
 1985 073b 20       		.byte	0x20
 1986 073c DB000000 		.4byte	0xdb
 1987 0740 05       		.uleb128 0x5
 1988 0741 03       		.byte	0x3
 1989 0742 00000000 		.4byte	modem_state
 1990 0746 1D       		.uleb128 0x1d
 1991 0747 90030000 		.4byte	.LASF103
 1992 074b 08       		.byte	0x8
 1993 074c 6B       		.byte	0x6b
 1994 074d FF000000 		.4byte	0xff
 1995 0751 05       		.uleb128 0x5
 1996 0752 03       		.byte	0x3
 1997 0753 00000000 		.4byte	modem_start_time_stamp
 1998 0757 1D       		.uleb128 0x1d
 1999 0758 4D030000 		.4byte	.LASF61
 2000 075c 08       		.byte	0x8
 2001 075d 6C       		.byte	0x6c
 2002 075e 2D020000 		.4byte	0x22d
 2003 0762 05       		.uleb128 0x5
 2004 0763 03       		.byte	0x3
 2005 0764 00000000 		.4byte	modem_info
 2006 0768 1D       		.uleb128 0x1d
 2007 0769 89010000 		.4byte	.LASF104
 2008 076d 08       		.byte	0x8
 2009 076e 6D       		.byte	0x6d
 2010 076f A1020000 		.4byte	0x2a1
 2011 0773 05       		.uleb128 0x5
 2012 0774 03       		.byte	0x3
 2013 0775 00000000 		.4byte	modem_stats
 2014 0779 1D       		.uleb128 0x1d
 2015 077a 6C040000 		.4byte	.LASF105
 2016 077e 08       		.byte	0x8
 2017 077f 6E       		.byte	0x6e
 2018 0780 1C030000 		.4byte	0x31c
 2019 0784 05       		.uleb128 0x5
 2020 0785 03       		.byte	0x3
 2021 0786 00000000 		.4byte	updatable_parameters
 2022 078a 1D       		.uleb128 0x1d
 2023 078b F3020000 		.4byte	.LASF106
 2024 078f 0C       		.byte	0xc
 2025 0790 07       		.byte	0x7
 2026 0791 15030000 		.4byte	0x315
 2027 0795 05       		.uleb128 0x5
 2028 0796 03       		.byte	0x3
 2029 0797 00000000 		.4byte	App_LED_enabled
 2030 079b 1D       		.uleb128 0x1d
 2031 079c FC060000 		.4byte	.LASF107
 2032 07a0 0C       		.byte	0xc
 2033 07a1 08       		.byte	0x8
 2034 07a2 C3030000 		.4byte	0x3c3
 2035 07a6 05       		.uleb128 0x5
 2036 07a7 03       		.byte	0x3
 2037 07a8 00000000 		.4byte	app_led_inbox
 2038 07ac 07       		.uleb128 0x7
 2039 07ad AB000000 		.4byte	0xab
 2040 07b1 BD070000 		.4byte	0x7bd
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 42


 2041 07b5 1B       		.uleb128 0x1b
 2042 07b6 9E000000 		.4byte	0x9e
 2043 07ba 0F27     		.2byte	0x270f
 2044 07bc 00       		.byte	0
 2045 07bd 1D       		.uleb128 0x1d
 2046 07be E8060000 		.4byte	.LASF108
 2047 07c2 09       		.byte	0x9
 2048 07c3 19       		.byte	0x19
 2049 07c4 AC070000 		.4byte	0x7ac
 2050 07c8 05       		.uleb128 0x5
 2051 07c9 03       		.byte	0x3
 2052 07ca 00000000 		.4byte	http_request
 2053 07ce 1D       		.uleb128 0x1d
 2054 07cf 01020000 		.4byte	.LASF109
 2055 07d3 09       		.byte	0x9
 2056 07d4 1A       		.byte	0x1a
 2057 07d5 AC070000 		.4byte	0x7ac
 2058 07d9 05       		.uleb128 0x5
 2059 07da 03       		.byte	0x3
 2060 07db 00000000 		.4byte	http_body
 2061 07df 07       		.uleb128 0x7
 2062 07e0 AB000000 		.4byte	0xab
 2063 07e4 EF070000 		.4byte	0x7ef
 2064 07e8 08       		.uleb128 0x8
 2065 07e9 9E000000 		.4byte	0x9e
 2066 07ed C7       		.byte	0xc7
 2067 07ee 00       		.byte	0
 2068 07ef 1D       		.uleb128 0x1d
 2069 07f0 BA050000 		.4byte	.LASF110
 2070 07f4 09       		.byte	0x9
 2071 07f5 1B       		.byte	0x1b
 2072 07f6 DF070000 		.4byte	0x7df
 2073 07fa 05       		.uleb128 0x5
 2074 07fb 03       		.byte	0x3
 2075 07fc 00000000 		.4byte	http_route
 2076 0800 1D       		.uleb128 0x1d
 2077 0801 2C050000 		.4byte	.LASF111
 2078 0805 09       		.byte	0x9
 2079 0806 42       		.byte	0x42
 2080 0807 97030000 		.4byte	0x397
 2081 080b 05       		.uleb128 0x5
 2082 080c 03       		.byte	0x3
 2083 080d 00000000 		.4byte	system_info
 2084 0811 1D       		.uleb128 0x1d
 2085 0812 F1040000 		.4byte	.LASF112
 2086 0816 09       		.byte	0x9
 2087 0817 54       		.byte	0x54
 2088 0818 D3030000 		.4byte	0x3d3
 2089 081c 05       		.uleb128 0x5
 2090 081d 03       		.byte	0x3
 2091 081e 00000000 		.4byte	system_settings
 2092 0822 1D       		.uleb128 0x1d
 2093 0823 47010000 		.4byte	.LASF113
 2094 0827 09       		.byte	0x9
 2095 0828 70       		.byte	0x70
 2096 0829 60030000 		.4byte	0x360
 2097 082d 05       		.uleb128 0x5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 43


 2098 082e 03       		.byte	0x3
 2099 082f 00000000 		.4byte	alarmMeasure
 2100 0833 1D       		.uleb128 0x1d
 2101 0834 C3010000 		.4byte	.LASF114
 2102 0838 09       		.byte	0x9
 2103 0839 71       		.byte	0x71
 2104 083a DB000000 		.4byte	0xdb
 2105 083e 05       		.uleb128 0x5
 2106 083f 03       		.byte	0x3
 2107 0840 00000000 		.4byte	timeToMeasure
 2108 0844 1D       		.uleb128 0x1d
 2109 0845 E9020000 		.4byte	.LASF115
 2110 0849 09       		.byte	0x9
 2111 084a 72       		.byte	0x72
 2112 084b 60030000 		.4byte	0x360
 2113 084f 05       		.uleb128 0x5
 2114 0850 03       		.byte	0x3
 2115 0851 00000000 		.4byte	alarmSync
 2116 0855 1D       		.uleb128 0x1d
 2117 0856 E9010000 		.4byte	.LASF116
 2118 085a 09       		.byte	0x9
 2119 085b 73       		.byte	0x73
 2120 085c DB000000 		.4byte	0xdb
 2121 0860 05       		.uleb128 0x5
 2122 0861 03       		.byte	0x3
 2123 0862 00000000 		.4byte	timeToSync
 2124 0866 1D       		.uleb128 0x1d
 2125 0867 45040000 		.4byte	.LASF117
 2126 086b 09       		.byte	0x9
 2127 086c 74       		.byte	0x74
 2128 086d DB000000 		.4byte	0xdb
 2129 0871 05       		.uleb128 0x5
 2130 0872 03       		.byte	0x3
 2131 0873 00000000 		.4byte	timeToSycnRemoteParams
 2132 0877 1E       		.uleb128 0x1e
 2133 0878 68657900 		.ascii	"hey\000"
 2134 087c 09       		.byte	0x9
 2135 087d 75       		.byte	0x75
 2136 087e DB000000 		.4byte	0xdb
 2137 0882 05       		.uleb128 0x5
 2138 0883 03       		.byte	0x3
 2139 0884 00000000 		.4byte	hey
 2140 0888 1D       		.uleb128 0x1d
 2141 0889 84030000 		.4byte	.LASF118
 2142 088d 09       		.byte	0x9
 2143 088e 79       		.byte	0x79
 2144 088f 60030000 		.4byte	0x360
 2145 0893 05       		.uleb128 0x5
 2146 0894 03       		.byte	0x3
 2147 0895 00000000 		.4byte	alarmAppLED
 2148 0899 1D       		.uleb128 0x1d
 2149 089a 78020000 		.4byte	.LASF119
 2150 089e 09       		.byte	0x9
 2151 089f 7A       		.byte	0x7a
 2152 08a0 DB000000 		.4byte	0xdb
 2153 08a4 05       		.uleb128 0x5
 2154 08a5 03       		.byte	0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 44


 2155 08a6 00000000 		.4byte	timeToAppLED
 2156 08aa 1D       		.uleb128 0x1d
 2157 08ab 5A050000 		.4byte	.LASF120
 2158 08af 09       		.byte	0x9
 2159 08b0 7C       		.byte	0x7c
 2160 08b1 60030000 		.4byte	0x360
 2161 08b5 05       		.uleb128 0x5
 2162 08b6 03       		.byte	0x3
 2163 08b7 00000000 		.4byte	alarmLevelSensor
 2164 08bb 1D       		.uleb128 0x1d
 2165 08bc 77010000 		.4byte	.LASF121
 2166 08c0 09       		.byte	0x9
 2167 08c1 7D       		.byte	0x7d
 2168 08c2 DB000000 		.4byte	0xdb
 2169 08c6 05       		.uleb128 0x5
 2170 08c7 03       		.byte	0x3
 2171 08c8 00000000 		.4byte	timetoLevelSensor
 2172 08cc 1D       		.uleb128 0x1d
 2173 08cd 18020000 		.4byte	.LASF122
 2174 08d1 09       		.byte	0x9
 2175 08d2 7F       		.byte	0x7f
 2176 08d3 60030000 		.4byte	0x360
 2177 08d7 05       		.uleb128 0x5
 2178 08d8 03       		.byte	0x3
 2179 08d9 00000000 		.4byte	alarmDownstreamLevelSensor
 2180 08dd 1D       		.uleb128 0x1d
 2181 08de 1F040000 		.4byte	.LASF123
 2182 08e2 09       		.byte	0x9
 2183 08e3 80       		.byte	0x80
 2184 08e4 DB000000 		.4byte	0xdb
 2185 08e8 05       		.uleb128 0x5
 2186 08e9 03       		.byte	0x3
 2187 08ea 00000000 		.4byte	timetoDownstreamLevelSensor
 2188 08ee 00       		.byte	0
 2189              		.section	.debug_abbrev,"",%progbits
 2190              	.Ldebug_abbrev0:
 2191 0000 01       		.uleb128 0x1
 2192 0001 11       		.uleb128 0x11
 2193 0002 01       		.byte	0x1
 2194 0003 25       		.uleb128 0x25
 2195 0004 0E       		.uleb128 0xe
 2196 0005 13       		.uleb128 0x13
 2197 0006 0B       		.uleb128 0xb
 2198 0007 03       		.uleb128 0x3
 2199 0008 0E       		.uleb128 0xe
 2200 0009 1B       		.uleb128 0x1b
 2201 000a 0E       		.uleb128 0xe
 2202 000b 55       		.uleb128 0x55
 2203 000c 17       		.uleb128 0x17
 2204 000d 11       		.uleb128 0x11
 2205 000e 01       		.uleb128 0x1
 2206 000f 10       		.uleb128 0x10
 2207 0010 17       		.uleb128 0x17
 2208 0011 00       		.byte	0
 2209 0012 00       		.byte	0
 2210 0013 02       		.uleb128 0x2
 2211 0014 24       		.uleb128 0x24
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 45


 2212 0015 00       		.byte	0
 2213 0016 0B       		.uleb128 0xb
 2214 0017 0B       		.uleb128 0xb
 2215 0018 3E       		.uleb128 0x3e
 2216 0019 0B       		.uleb128 0xb
 2217 001a 03       		.uleb128 0x3
 2218 001b 0E       		.uleb128 0xe
 2219 001c 00       		.byte	0
 2220 001d 00       		.byte	0
 2221 001e 03       		.uleb128 0x3
 2222 001f 16       		.uleb128 0x16
 2223 0020 00       		.byte	0
 2224 0021 03       		.uleb128 0x3
 2225 0022 0E       		.uleb128 0xe
 2226 0023 3A       		.uleb128 0x3a
 2227 0024 0B       		.uleb128 0xb
 2228 0025 3B       		.uleb128 0x3b
 2229 0026 0B       		.uleb128 0xb
 2230 0027 49       		.uleb128 0x49
 2231 0028 13       		.uleb128 0x13
 2232 0029 00       		.byte	0
 2233 002a 00       		.byte	0
 2234 002b 04       		.uleb128 0x4
 2235 002c 24       		.uleb128 0x24
 2236 002d 00       		.byte	0
 2237 002e 0B       		.uleb128 0xb
 2238 002f 0B       		.uleb128 0xb
 2239 0030 3E       		.uleb128 0x3e
 2240 0031 0B       		.uleb128 0xb
 2241 0032 03       		.uleb128 0x3
 2242 0033 08       		.uleb128 0x8
 2243 0034 00       		.byte	0
 2244 0035 00       		.byte	0
 2245 0036 05       		.uleb128 0x5
 2246 0037 0F       		.uleb128 0xf
 2247 0038 00       		.byte	0
 2248 0039 0B       		.uleb128 0xb
 2249 003a 0B       		.uleb128 0xb
 2250 003b 49       		.uleb128 0x49
 2251 003c 13       		.uleb128 0x13
 2252 003d 00       		.byte	0
 2253 003e 00       		.byte	0
 2254 003f 06       		.uleb128 0x6
 2255 0040 26       		.uleb128 0x26
 2256 0041 00       		.byte	0
 2257 0042 49       		.uleb128 0x49
 2258 0043 13       		.uleb128 0x13
 2259 0044 00       		.byte	0
 2260 0045 00       		.byte	0
 2261 0046 07       		.uleb128 0x7
 2262 0047 01       		.uleb128 0x1
 2263 0048 01       		.byte	0x1
 2264 0049 49       		.uleb128 0x49
 2265 004a 13       		.uleb128 0x13
 2266 004b 01       		.uleb128 0x1
 2267 004c 13       		.uleb128 0x13
 2268 004d 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 46


 2269 004e 00       		.byte	0
 2270 004f 08       		.uleb128 0x8
 2271 0050 21       		.uleb128 0x21
 2272 0051 00       		.byte	0
 2273 0052 49       		.uleb128 0x49
 2274 0053 13       		.uleb128 0x13
 2275 0054 2F       		.uleb128 0x2f
 2276 0055 0B       		.uleb128 0xb
 2277 0056 00       		.byte	0
 2278 0057 00       		.byte	0
 2279 0058 09       		.uleb128 0x9
 2280 0059 16       		.uleb128 0x16
 2281 005a 00       		.byte	0
 2282 005b 03       		.uleb128 0x3
 2283 005c 0E       		.uleb128 0xe
 2284 005d 3A       		.uleb128 0x3a
 2285 005e 0B       		.uleb128 0xb
 2286 005f 3B       		.uleb128 0x3b
 2287 0060 05       		.uleb128 0x5
 2288 0061 49       		.uleb128 0x49
 2289 0062 13       		.uleb128 0x13
 2290 0063 00       		.byte	0
 2291 0064 00       		.byte	0
 2292 0065 0A       		.uleb128 0xa
 2293 0066 13       		.uleb128 0x13
 2294 0067 01       		.byte	0x1
 2295 0068 0B       		.uleb128 0xb
 2296 0069 05       		.uleb128 0x5
 2297 006a 3A       		.uleb128 0x3a
 2298 006b 0B       		.uleb128 0xb
 2299 006c 3B       		.uleb128 0x3b
 2300 006d 0B       		.uleb128 0xb
 2301 006e 01       		.uleb128 0x1
 2302 006f 13       		.uleb128 0x13
 2303 0070 00       		.byte	0
 2304 0071 00       		.byte	0
 2305 0072 0B       		.uleb128 0xb
 2306 0073 0D       		.uleb128 0xd
 2307 0074 00       		.byte	0
 2308 0075 03       		.uleb128 0x3
 2309 0076 0E       		.uleb128 0xe
 2310 0077 3A       		.uleb128 0x3a
 2311 0078 0B       		.uleb128 0xb
 2312 0079 3B       		.uleb128 0x3b
 2313 007a 0B       		.uleb128 0xb
 2314 007b 49       		.uleb128 0x49
 2315 007c 13       		.uleb128 0x13
 2316 007d 38       		.uleb128 0x38
 2317 007e 0B       		.uleb128 0xb
 2318 007f 00       		.byte	0
 2319 0080 00       		.byte	0
 2320 0081 0C       		.uleb128 0xc
 2321 0082 13       		.uleb128 0x13
 2322 0083 01       		.byte	0x1
 2323 0084 0B       		.uleb128 0xb
 2324 0085 0B       		.uleb128 0xb
 2325 0086 3A       		.uleb128 0x3a
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 47


 2326 0087 0B       		.uleb128 0xb
 2327 0088 3B       		.uleb128 0x3b
 2328 0089 0B       		.uleb128 0xb
 2329 008a 01       		.uleb128 0x1
 2330 008b 13       		.uleb128 0x13
 2331 008c 00       		.byte	0
 2332 008d 00       		.byte	0
 2333 008e 0D       		.uleb128 0xd
 2334 008f 0D       		.uleb128 0xd
 2335 0090 00       		.byte	0
 2336 0091 03       		.uleb128 0x3
 2337 0092 08       		.uleb128 0x8
 2338 0093 3A       		.uleb128 0x3a
 2339 0094 0B       		.uleb128 0xb
 2340 0095 3B       		.uleb128 0x3b
 2341 0096 0B       		.uleb128 0xb
 2342 0097 49       		.uleb128 0x49
 2343 0098 13       		.uleb128 0x13
 2344 0099 38       		.uleb128 0x38
 2345 009a 0B       		.uleb128 0xb
 2346 009b 00       		.byte	0
 2347 009c 00       		.byte	0
 2348 009d 0E       		.uleb128 0xe
 2349 009e 35       		.uleb128 0x35
 2350 009f 00       		.byte	0
 2351 00a0 49       		.uleb128 0x49
 2352 00a1 13       		.uleb128 0x13
 2353 00a2 00       		.byte	0
 2354 00a3 00       		.byte	0
 2355 00a4 0F       		.uleb128 0xf
 2356 00a5 2E       		.uleb128 0x2e
 2357 00a6 00       		.byte	0
 2358 00a7 3F       		.uleb128 0x3f
 2359 00a8 19       		.uleb128 0x19
 2360 00a9 03       		.uleb128 0x3
 2361 00aa 0E       		.uleb128 0xe
 2362 00ab 3A       		.uleb128 0x3a
 2363 00ac 0B       		.uleb128 0xb
 2364 00ad 3B       		.uleb128 0x3b
 2365 00ae 0B       		.uleb128 0xb
 2366 00af 27       		.uleb128 0x27
 2367 00b0 19       		.uleb128 0x19
 2368 00b1 49       		.uleb128 0x49
 2369 00b2 13       		.uleb128 0x13
 2370 00b3 11       		.uleb128 0x11
 2371 00b4 01       		.uleb128 0x1
 2372 00b5 12       		.uleb128 0x12
 2373 00b6 06       		.uleb128 0x6
 2374 00b7 40       		.uleb128 0x40
 2375 00b8 18       		.uleb128 0x18
 2376 00b9 9742     		.uleb128 0x2117
 2377 00bb 19       		.uleb128 0x19
 2378 00bc 00       		.byte	0
 2379 00bd 00       		.byte	0
 2380 00be 10       		.uleb128 0x10
 2381 00bf 2E       		.uleb128 0x2e
 2382 00c0 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 48


 2383 00c1 3F       		.uleb128 0x3f
 2384 00c2 19       		.uleb128 0x19
 2385 00c3 03       		.uleb128 0x3
 2386 00c4 0E       		.uleb128 0xe
 2387 00c5 3A       		.uleb128 0x3a
 2388 00c6 0B       		.uleb128 0xb
 2389 00c7 3B       		.uleb128 0x3b
 2390 00c8 0B       		.uleb128 0xb
 2391 00c9 27       		.uleb128 0x27
 2392 00ca 19       		.uleb128 0x19
 2393 00cb 11       		.uleb128 0x11
 2394 00cc 01       		.uleb128 0x1
 2395 00cd 12       		.uleb128 0x12
 2396 00ce 06       		.uleb128 0x6
 2397 00cf 40       		.uleb128 0x40
 2398 00d0 18       		.uleb128 0x18
 2399 00d1 9642     		.uleb128 0x2116
 2400 00d3 19       		.uleb128 0x19
 2401 00d4 00       		.byte	0
 2402 00d5 00       		.byte	0
 2403 00d6 11       		.uleb128 0x11
 2404 00d7 2E       		.uleb128 0x2e
 2405 00d8 01       		.byte	0x1
 2406 00d9 3F       		.uleb128 0x3f
 2407 00da 19       		.uleb128 0x19
 2408 00db 03       		.uleb128 0x3
 2409 00dc 0E       		.uleb128 0xe
 2410 00dd 3A       		.uleb128 0x3a
 2411 00de 0B       		.uleb128 0xb
 2412 00df 3B       		.uleb128 0x3b
 2413 00e0 0B       		.uleb128 0xb
 2414 00e1 27       		.uleb128 0x27
 2415 00e2 19       		.uleb128 0x19
 2416 00e3 11       		.uleb128 0x11
 2417 00e4 01       		.uleb128 0x1
 2418 00e5 12       		.uleb128 0x12
 2419 00e6 06       		.uleb128 0x6
 2420 00e7 40       		.uleb128 0x40
 2421 00e8 18       		.uleb128 0x18
 2422 00e9 9642     		.uleb128 0x2116
 2423 00eb 19       		.uleb128 0x19
 2424 00ec 01       		.uleb128 0x1
 2425 00ed 13       		.uleb128 0x13
 2426 00ee 00       		.byte	0
 2427 00ef 00       		.byte	0
 2428 00f0 12       		.uleb128 0x12
 2429 00f1 34       		.uleb128 0x34
 2430 00f2 00       		.byte	0
 2431 00f3 03       		.uleb128 0x3
 2432 00f4 0E       		.uleb128 0xe
 2433 00f5 3A       		.uleb128 0x3a
 2434 00f6 0B       		.uleb128 0xb
 2435 00f7 3B       		.uleb128 0x3b
 2436 00f8 0B       		.uleb128 0xb
 2437 00f9 49       		.uleb128 0x49
 2438 00fa 13       		.uleb128 0x13
 2439 00fb 02       		.uleb128 0x2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 49


 2440 00fc 18       		.uleb128 0x18
 2441 00fd 00       		.byte	0
 2442 00fe 00       		.byte	0
 2443 00ff 13       		.uleb128 0x13
 2444 0100 05       		.uleb128 0x5
 2445 0101 00       		.byte	0
 2446 0102 03       		.uleb128 0x3
 2447 0103 0E       		.uleb128 0xe
 2448 0104 3A       		.uleb128 0x3a
 2449 0105 0B       		.uleb128 0xb
 2450 0106 3B       		.uleb128 0x3b
 2451 0107 0B       		.uleb128 0xb
 2452 0108 49       		.uleb128 0x49
 2453 0109 13       		.uleb128 0x13
 2454 010a 02       		.uleb128 0x2
 2455 010b 18       		.uleb128 0x18
 2456 010c 00       		.byte	0
 2457 010d 00       		.byte	0
 2458 010e 14       		.uleb128 0x14
 2459 010f 2E       		.uleb128 0x2e
 2460 0110 01       		.byte	0x1
 2461 0111 3F       		.uleb128 0x3f
 2462 0112 19       		.uleb128 0x19
 2463 0113 03       		.uleb128 0x3
 2464 0114 0E       		.uleb128 0xe
 2465 0115 3A       		.uleb128 0x3a
 2466 0116 0B       		.uleb128 0xb
 2467 0117 3B       		.uleb128 0x3b
 2468 0118 0B       		.uleb128 0xb
 2469 0119 49       		.uleb128 0x49
 2470 011a 13       		.uleb128 0x13
 2471 011b 11       		.uleb128 0x11
 2472 011c 01       		.uleb128 0x1
 2473 011d 12       		.uleb128 0x12
 2474 011e 06       		.uleb128 0x6
 2475 011f 40       		.uleb128 0x40
 2476 0120 18       		.uleb128 0x18
 2477 0121 9642     		.uleb128 0x2116
 2478 0123 19       		.uleb128 0x19
 2479 0124 01       		.uleb128 0x1
 2480 0125 13       		.uleb128 0x13
 2481 0126 00       		.byte	0
 2482 0127 00       		.byte	0
 2483 0128 15       		.uleb128 0x15
 2484 0129 0B       		.uleb128 0xb
 2485 012a 01       		.byte	0x1
 2486 012b 11       		.uleb128 0x11
 2487 012c 01       		.uleb128 0x1
 2488 012d 12       		.uleb128 0x12
 2489 012e 06       		.uleb128 0x6
 2490 012f 00       		.byte	0
 2491 0130 00       		.byte	0
 2492 0131 16       		.uleb128 0x16
 2493 0132 0B       		.uleb128 0xb
 2494 0133 01       		.byte	0x1
 2495 0134 55       		.uleb128 0x55
 2496 0135 17       		.uleb128 0x17
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 50


 2497 0136 00       		.byte	0
 2498 0137 00       		.byte	0
 2499 0138 17       		.uleb128 0x17
 2500 0139 2E       		.uleb128 0x2e
 2501 013a 01       		.byte	0x1
 2502 013b 3F       		.uleb128 0x3f
 2503 013c 19       		.uleb128 0x19
 2504 013d 03       		.uleb128 0x3
 2505 013e 0E       		.uleb128 0xe
 2506 013f 3A       		.uleb128 0x3a
 2507 0140 0B       		.uleb128 0xb
 2508 0141 3B       		.uleb128 0x3b
 2509 0142 0B       		.uleb128 0xb
 2510 0143 27       		.uleb128 0x27
 2511 0144 19       		.uleb128 0x19
 2512 0145 49       		.uleb128 0x49
 2513 0146 13       		.uleb128 0x13
 2514 0147 11       		.uleb128 0x11
 2515 0148 01       		.uleb128 0x1
 2516 0149 12       		.uleb128 0x12
 2517 014a 06       		.uleb128 0x6
 2518 014b 40       		.uleb128 0x40
 2519 014c 18       		.uleb128 0x18
 2520 014d 9642     		.uleb128 0x2116
 2521 014f 19       		.uleb128 0x19
 2522 0150 01       		.uleb128 0x1
 2523 0151 13       		.uleb128 0x13
 2524 0152 00       		.byte	0
 2525 0153 00       		.byte	0
 2526 0154 18       		.uleb128 0x18
 2527 0155 05       		.uleb128 0x5
 2528 0156 00       		.byte	0
 2529 0157 03       		.uleb128 0x3
 2530 0158 08       		.uleb128 0x8
 2531 0159 3A       		.uleb128 0x3a
 2532 015a 0B       		.uleb128 0xb
 2533 015b 3B       		.uleb128 0x3b
 2534 015c 0B       		.uleb128 0xb
 2535 015d 49       		.uleb128 0x49
 2536 015e 13       		.uleb128 0x13
 2537 015f 02       		.uleb128 0x2
 2538 0160 18       		.uleb128 0x18
 2539 0161 00       		.byte	0
 2540 0162 00       		.byte	0
 2541 0163 19       		.uleb128 0x19
 2542 0164 34       		.uleb128 0x34
 2543 0165 00       		.byte	0
 2544 0166 03       		.uleb128 0x3
 2545 0167 08       		.uleb128 0x8
 2546 0168 3A       		.uleb128 0x3a
 2547 0169 0B       		.uleb128 0xb
 2548 016a 3B       		.uleb128 0x3b
 2549 016b 0B       		.uleb128 0xb
 2550 016c 49       		.uleb128 0x49
 2551 016d 13       		.uleb128 0x13
 2552 016e 02       		.uleb128 0x2
 2553 016f 18       		.uleb128 0x18
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 51


 2554 0170 00       		.byte	0
 2555 0171 00       		.byte	0
 2556 0172 1A       		.uleb128 0x1a
 2557 0173 2E       		.uleb128 0x2e
 2558 0174 01       		.byte	0x1
 2559 0175 3F       		.uleb128 0x3f
 2560 0176 19       		.uleb128 0x19
 2561 0177 03       		.uleb128 0x3
 2562 0178 0E       		.uleb128 0xe
 2563 0179 3A       		.uleb128 0x3a
 2564 017a 0B       		.uleb128 0xb
 2565 017b 3B       		.uleb128 0x3b
 2566 017c 0B       		.uleb128 0xb
 2567 017d 27       		.uleb128 0x27
 2568 017e 19       		.uleb128 0x19
 2569 017f 11       		.uleb128 0x11
 2570 0180 01       		.uleb128 0x1
 2571 0181 12       		.uleb128 0x12
 2572 0182 06       		.uleb128 0x6
 2573 0183 40       		.uleb128 0x40
 2574 0184 18       		.uleb128 0x18
 2575 0185 9742     		.uleb128 0x2117
 2576 0187 19       		.uleb128 0x19
 2577 0188 01       		.uleb128 0x1
 2578 0189 13       		.uleb128 0x13
 2579 018a 00       		.byte	0
 2580 018b 00       		.byte	0
 2581 018c 1B       		.uleb128 0x1b
 2582 018d 21       		.uleb128 0x21
 2583 018e 00       		.byte	0
 2584 018f 49       		.uleb128 0x49
 2585 0190 13       		.uleb128 0x13
 2586 0191 2F       		.uleb128 0x2f
 2587 0192 05       		.uleb128 0x5
 2588 0193 00       		.byte	0
 2589 0194 00       		.byte	0
 2590 0195 1C       		.uleb128 0x1c
 2591 0196 34       		.uleb128 0x34
 2592 0197 00       		.byte	0
 2593 0198 03       		.uleb128 0x3
 2594 0199 0E       		.uleb128 0xe
 2595 019a 3A       		.uleb128 0x3a
 2596 019b 0B       		.uleb128 0xb
 2597 019c 3B       		.uleb128 0x3b
 2598 019d 05       		.uleb128 0x5
 2599 019e 49       		.uleb128 0x49
 2600 019f 13       		.uleb128 0x13
 2601 01a0 3F       		.uleb128 0x3f
 2602 01a1 19       		.uleb128 0x19
 2603 01a2 3C       		.uleb128 0x3c
 2604 01a3 19       		.uleb128 0x19
 2605 01a4 00       		.byte	0
 2606 01a5 00       		.byte	0
 2607 01a6 1D       		.uleb128 0x1d
 2608 01a7 34       		.uleb128 0x34
 2609 01a8 00       		.byte	0
 2610 01a9 03       		.uleb128 0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 52


 2611 01aa 0E       		.uleb128 0xe
 2612 01ab 3A       		.uleb128 0x3a
 2613 01ac 0B       		.uleb128 0xb
 2614 01ad 3B       		.uleb128 0x3b
 2615 01ae 0B       		.uleb128 0xb
 2616 01af 49       		.uleb128 0x49
 2617 01b0 13       		.uleb128 0x13
 2618 01b1 3F       		.uleb128 0x3f
 2619 01b2 19       		.uleb128 0x19
 2620 01b3 02       		.uleb128 0x2
 2621 01b4 18       		.uleb128 0x18
 2622 01b5 00       		.byte	0
 2623 01b6 00       		.byte	0
 2624 01b7 1E       		.uleb128 0x1e
 2625 01b8 34       		.uleb128 0x34
 2626 01b9 00       		.byte	0
 2627 01ba 03       		.uleb128 0x3
 2628 01bb 08       		.uleb128 0x8
 2629 01bc 3A       		.uleb128 0x3a
 2630 01bd 0B       		.uleb128 0xb
 2631 01be 3B       		.uleb128 0x3b
 2632 01bf 0B       		.uleb128 0xb
 2633 01c0 49       		.uleb128 0x49
 2634 01c1 13       		.uleb128 0x13
 2635 01c2 3F       		.uleb128 0x3f
 2636 01c3 19       		.uleb128 0x19
 2637 01c4 02       		.uleb128 0x2
 2638 01c5 18       		.uleb128 0x18
 2639 01c6 00       		.byte	0
 2640 01c7 00       		.byte	0
 2641 01c8 00       		.byte	0
 2642              		.section	.debug_aranges,"",%progbits
 2643 0000 6C000000 		.4byte	0x6c
 2644 0004 0200     		.2byte	0x2
 2645 0006 00000000 		.4byte	.Ldebug_info0
 2646 000a 04       		.byte	0x4
 2647 000b 00       		.byte	0
 2648 000c 0000     		.2byte	0
 2649 000e 0000     		.2byte	0
 2650 0010 00000000 		.4byte	.LFB64
 2651 0014 14000000 		.4byte	.LFE64-.LFB64
 2652 0018 00000000 		.4byte	.LFB65
 2653 001c 14000000 		.4byte	.LFE65-.LFB65
 2654 0020 00000000 		.4byte	.LFB66
 2655 0024 28000000 		.4byte	.LFE66-.LFB66
 2656 0028 00000000 		.4byte	.LFB67
 2657 002c 70000000 		.4byte	.LFE67-.LFB67
 2658 0030 00000000 		.4byte	.LFB68
 2659 0034 1C000000 		.4byte	.LFE68-.LFB68
 2660 0038 00000000 		.4byte	.LFB69
 2661 003c 00010000 		.4byte	.LFE69-.LFB69
 2662 0040 00000000 		.4byte	.LFB70
 2663 0044 1C010000 		.4byte	.LFE70-.LFB70
 2664 0048 00000000 		.4byte	.LFB71
 2665 004c CC000000 		.4byte	.LFE71-.LFB71
 2666 0050 00000000 		.4byte	.LFB72
 2667 0054 8E000000 		.4byte	.LFE72-.LFB72
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 53


 2668 0058 00000000 		.4byte	.LFB73
 2669 005c 98000000 		.4byte	.LFE73-.LFB73
 2670 0060 00000000 		.4byte	.LFB74
 2671 0064 2A000000 		.4byte	.LFE74-.LFB74
 2672 0068 00000000 		.4byte	0
 2673 006c 00000000 		.4byte	0
 2674              		.section	.debug_ranges,"",%progbits
 2675              	.Ldebug_ranges0:
 2676 0000 70000000 		.4byte	.LBB3
 2677 0004 C0000000 		.4byte	.LBE3
 2678 0008 D2000000 		.4byte	.LBB4
 2679 000c D4000000 		.4byte	.LBE4
 2680 0010 00000000 		.4byte	0
 2681 0014 00000000 		.4byte	0
 2682 0018 00000000 		.4byte	.LFB64
 2683 001c 14000000 		.4byte	.LFE64
 2684 0020 00000000 		.4byte	.LFB65
 2685 0024 14000000 		.4byte	.LFE65
 2686 0028 00000000 		.4byte	.LFB66
 2687 002c 28000000 		.4byte	.LFE66
 2688 0030 00000000 		.4byte	.LFB67
 2689 0034 70000000 		.4byte	.LFE67
 2690 0038 00000000 		.4byte	.LFB68
 2691 003c 1C000000 		.4byte	.LFE68
 2692 0040 00000000 		.4byte	.LFB69
 2693 0044 00010000 		.4byte	.LFE69
 2694 0048 00000000 		.4byte	.LFB70
 2695 004c 1C010000 		.4byte	.LFE70
 2696 0050 00000000 		.4byte	.LFB71
 2697 0054 CC000000 		.4byte	.LFE71
 2698 0058 00000000 		.4byte	.LFB72
 2699 005c 8E000000 		.4byte	.LFE72
 2700 0060 00000000 		.4byte	.LFB73
 2701 0064 98000000 		.4byte	.LFE73
 2702 0068 00000000 		.4byte	.LFB74
 2703 006c 2A000000 		.4byte	.LFE74
 2704 0070 00000000 		.4byte	0
 2705 0074 00000000 		.4byte	0
 2706              		.section	.debug_line,"",%progbits
 2707              	.Ldebug_line0:
 2708 0000 0A030000 		.section	.debug_str,"MS",%progbits,1
 2708      0200C001 
 2708      00000201 
 2708      FB0E0D00 
 2708      01010101 
 2709              	.LASF19:
 2710 0000 75696E74 		.ascii	"uint16\000"
 2710      313600
 2711              	.LASF29:
 2712 0007 6E756D5F 		.ascii	"num_invalid_readings\000"
 2712      696E7661 
 2712      6C69645F 
 2712      72656164 
 2712      696E6773 
 2713              	.LASF126:
 2714 001c 433A5C55 		.ascii	"C:\\Users\\dantz\\Documents\\GitHub\\notoriOS\\noto"
 2714      73657273 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 54


 2714      5C64616E 
 2714      747A5C44 
 2714      6F63756D 
 2715 0049 72694F53 		.ascii	"riOS.cydsn\000"
 2715      2E637964 
 2715      736E00
 2716              	.LASF98:
 2717 0054 62756666 		.ascii	"buffer_overflow\000"
 2717      65725F6F 
 2717      76657266 
 2717      6C6F7700 
 2718              	.LASF4:
 2719 0064 5F5F7569 		.ascii	"__uint8_t\000"
 2719      6E74385F 
 2719      7400
 2720              	.LASF59:
 2721 006e 636F756E 		.ascii	"countDownResetCondition\000"
 2721      74446F77 
 2721      6E526573 
 2721      6574436F 
 2721      6E646974 
 2722              	.LASF124:
 2723 0086 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2723      43313120 
 2723      352E342E 
 2723      31203230 
 2723      31363036 
 2724 00b9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2724      20726576 
 2724      6973696F 
 2724      6E203233 
 2724      37373135 
 2725 00ec 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2725      66756E63 
 2725      74696F6E 
 2725      2D736563 
 2725      74696F6E 
 2726              	.LASF88:
 2727 0114 75617274 		.ascii	"uart_chars\000"
 2727      5F636861 
 2727      727300
 2728              	.LASF9:
 2729 011f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2729      206C6F6E 
 2729      6720756E 
 2729      7369676E 
 2729      65642069 
 2730              	.LASF102:
 2731 0136 6D6F6465 		.ascii	"modem_state\000"
 2731      6D5F7374 
 2731      61746500 
 2732              	.LASF81:
 2733 0142 74657374 		.ascii	"test\000"
 2733      00
 2734              	.LASF113:
 2735 0147 616C6172 		.ascii	"alarmMeasure\000"
 2735      6D4D6561 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 55


 2735      73757265 
 2735      00
 2736              	.LASF93:
 2737 0154 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2737      52784275 
 2737      66666572 
 2737      00
 2738              	.LASF125:
 2739 0161 6C657665 		.ascii	"level_sensor.c\000"
 2739      6C5F7365 
 2739      6E736F72 
 2739      2E6300
 2740              	.LASF85:
 2741 0170 6D656469 		.ascii	"median\000"
 2741      616E00
 2742              	.LASF121:
 2743 0177 74696D65 		.ascii	"timetoLevelSensor\000"
 2743      746F4C65 
 2743      76656C53 
 2743      656E736F 
 2743      7200
 2744              	.LASF104:
 2745 0189 6D6F6465 		.ascii	"modem_stats\000"
 2745      6D5F7374 
 2745      61747300 
 2746              	.LASF8:
 2747 0195 6C6F6E67 		.ascii	"long long int\000"
 2747      206C6F6E 
 2747      6720696E 
 2747      7400
 2748              	.LASF0:
 2749 01a3 7369676E 		.ascii	"signed char\000"
 2749      65642063 
 2749      68617200 
 2750              	.LASF40:
 2751 01af 65636E6F 		.ascii	"ecno\000"
 2751      00
 2752              	.LASF56:
 2753 01b4 636F756E 		.ascii	"countDownValue\000"
 2753      74446F77 
 2753      6E56616C 
 2753      756500
 2754              	.LASF114:
 2755 01c3 74696D65 		.ascii	"timeToMeasure\000"
 2755      546F4D65 
 2755      61737572 
 2755      6500
 2756              	.LASF43:
 2757 01d1 74696D65 		.ascii	"time_to_network_connect\000"
 2757      5F746F5F 
 2757      6E657477 
 2757      6F726B5F 
 2757      636F6E6E 
 2758              	.LASF116:
 2759 01e9 74696D65 		.ascii	"timeToSync\000"
 2759      546F5379 
 2759      6E6300
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 56


 2760              	.LASF71:
 2761 01f4 6C657665 		.ascii	"level_sensor\000"
 2761      6C5F7365 
 2761      6E736F72 
 2761      00
 2762              	.LASF109:
 2763 0201 68747470 		.ascii	"http_body\000"
 2763      5F626F64 
 2763      7900
 2764              	.LASF37:
 2765 020b 6D6F6465 		.ascii	"modem_info_t\000"
 2765      6D5F696E 
 2765      666F5F74 
 2765      00
 2766              	.LASF122:
 2767 0218 616C6172 		.ascii	"alarmDownstreamLevelSensor\000"
 2767      6D446F77 
 2767      6E737472 
 2767      65616D4C 
 2767      6576656C 
 2768              	.LASF38:
 2769 0233 72786C65 		.ascii	"rxlev\000"
 2769      7600
 2770              	.LASF6:
 2771 0239 6C6F6E67 		.ascii	"long int\000"
 2771      20696E74 
 2771      00
 2772              	.LASF57:
 2773 0242 63757272 		.ascii	"currentCountDownValue\000"
 2773      656E7443 
 2773      6F756E74 
 2773      446F776E 
 2773      56616C75 
 2774              	.LASF60:
 2775 0258 616C6172 		.ascii	"alarm\000"
 2775      6D00
 2776              	.LASF18:
 2777 025e 75696E74 		.ascii	"uint8\000"
 2777      3800
 2778              	.LASF77:
 2779 0264 6C657665 		.ascii	"level_sensor_output\000"
 2779      6C5F7365 
 2779      6E736F72 
 2779      5F6F7574 
 2779      70757400 
 2780              	.LASF119:
 2781 0278 74696D65 		.ascii	"timeToAppLED\000"
 2781      546F4170 
 2781      704C4544 
 2781      00
 2782              	.LASF21:
 2783 0285 696E7433 		.ascii	"int32\000"
 2783      3200
 2784              	.LASF46:
 2785 028b 6E6F6465 		.ascii	"node_type\000"
 2785      5F747970 
 2785      6500
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 57


 2786              	.LASF79:
 2787 0295 72656164 		.ascii	"reading\000"
 2787      696E6700 
 2788              	.LASF84:
 2789 029d 61727261 		.ascii	"array\000"
 2789      7900
 2790              	.LASF62:
 2791 02a3 63686970 		.ascii	"chip_uniqueId\000"
 2791      5F756E69 
 2791      71756549 
 2791      6400
 2792              	.LASF35:
 2793 02b1 6D6F6465 		.ascii	"model_id\000"
 2793      6C5F6964 
 2793      00
 2794              	.LASF26:
 2795 02ba 616C6C5F 		.ascii	"all_level_readings\000"
 2795      6C657665 
 2795      6C5F7265 
 2795      6164696E 
 2795      677300
 2796              	.LASF90:
 2797 02cd 6C696E65 		.ascii	"line\000"
 2797      00
 2798              	.LASF86:
 2799 02d2 736F7274 		.ascii	"sort\000"
 2799      00
 2800              	.LASF50:
 2801 02d7 64656275 		.ascii	"debug_level\000"
 2801      675F6C65 
 2801      76656C00 
 2802              	.LASF31:
 2803 02e3 76616C75 		.ascii	"value\000"
 2803      6500
 2804              	.LASF115:
 2805 02e9 616C6172 		.ascii	"alarmSync\000"
 2805      6D53796E 
 2805      6300
 2806              	.LASF106:
 2807 02f3 4170705F 		.ascii	"App_LED_enabled\000"
 2807      4C45445F 
 2807      656E6162 
 2807      6C656400 
 2808              	.LASF33:
 2809 0303 6B65795F 		.ascii	"key_value_t\000"
 2809      76616C75 
 2809      655F7400 
 2810              	.LASF28:
 2811 030f 6E756D5F 		.ascii	"num_valid_readings\000"
 2811      76616C69 
 2811      645F7265 
 2811      6164696E 
 2811      677300
 2812              	.LASF7:
 2813 0322 6C6F6E67 		.ascii	"long unsigned int\000"
 2813      20756E73 
 2813      69676E65 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 58


 2813      6420696E 
 2813      7400
 2814              	.LASF67:
 2815 0334 75617274 		.ascii	"uart_string\000"
 2815      5F737472 
 2815      696E6700 
 2816              	.LASF101:
 2817 0340 64617461 		.ascii	"data\000"
 2817      00
 2818              	.LASF65:
 2819 0345 65705F70 		.ascii	"ep_port\000"
 2819      6F727400 
 2820              	.LASF61:
 2821 034d 6D6F6465 		.ascii	"modem_info\000"
 2821      6D5F696E 
 2821      666F00
 2822              	.LASF64:
 2823 0358 65705F68 		.ascii	"ep_host\000"
 2823      6F737400 
 2824              	.LASF82:
 2825 0360 73656E73 		.ascii	"sensor\000"
 2825      6F7200
 2826              	.LASF44:
 2827 0367 74696D65 		.ascii	"time_to_acquire_ip\000"
 2827      5F746F5F 
 2827      61637175 
 2827      6972655F 
 2827      697000
 2828              	.LASF2:
 2829 037a 73686F72 		.ascii	"short int\000"
 2829      7420696E 
 2829      7400
 2830              	.LASF118:
 2831 0384 616C6172 		.ascii	"alarmAppLED\000"
 2831      6D417070 
 2831      4C454400 
 2832              	.LASF103:
 2833 0390 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2833      6D5F7374 
 2833      6172745F 
 2833      74696D65 
 2833      5F737461 
 2834              	.LASF97:
 2835 03a7 646F776E 		.ascii	"downstream_level_sensor_enabled\000"
 2835      73747265 
 2835      616D5F6C 
 2835      6576656C 
 2835      5F73656E 
 2836              	.LASF63:
 2837 03c7 7379735F 		.ascii	"sys_info_t\000"
 2837      696E666F 
 2837      5F7400
 2838              	.LASF55:
 2839 03d2 75706461 		.ascii	"updatable_parameters_t\000"
 2839      7461626C 
 2839      655F7061 
 2839      72616D65 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 59


 2839      74657273 
 2840              	.LASF99:
 2841 03e9 64617461 		.ascii	"dataPointsInStack\000"
 2841      506F696E 
 2841      7473496E 
 2841      53746163 
 2841      6B00
 2842              	.LASF89:
 2843 03fb 6E756D5F 		.ascii	"num_chars\000"
 2843      63686172 
 2843      7300
 2844              	.LASF69:
 2845 0405 4C657665 		.ascii	"Level_Sensor_ISR\000"
 2845      6C5F5365 
 2845      6E736F72 
 2845      5F495352 
 2845      00
 2846              	.LASF14:
 2847 0416 73697A65 		.ascii	"sizetype\000"
 2847      74797065 
 2847      00
 2848              	.LASF123:
 2849 041f 74696D65 		.ascii	"timetoDownstreamLevelSensor\000"
 2849      746F446F 
 2849      776E7374 
 2849      7265616D 
 2849      4C657665 
 2850              	.LASF22:
 2851 043b 74657374 		.ascii	"test_name\000"
 2851      5F6E616D 
 2851      6500
 2852              	.LASF117:
 2853 0445 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2853      546F5379 
 2853      636E5265 
 2853      6D6F7465 
 2853      50617261 
 2854              	.LASF32:
 2855 045c 74696D65 		.ascii	"timeStamp\000"
 2855      5374616D 
 2855      7000
 2856              	.LASF91:
 2857 0466 6D617463 		.ascii	"match\000"
 2857      6800
 2858              	.LASF105:
 2859 046c 75706461 		.ascii	"updatable_parameters\000"
 2859      7461626C 
 2859      655F7061 
 2859      72616D65 
 2859      74657273 
 2860              	.LASF68:
 2861 0481 75617274 		.ascii	"uart_len\000"
 2861      5F6C656E 
 2861      00
 2862              	.LASF92:
 2863 048a 70617474 		.ascii	"pattern\000"
 2863      65726E00 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 60


 2864              	.LASF87:
 2865 0492 73776170 		.ascii	"swap\000"
 2865      00
 2866              	.LASF73:
 2867 0497 636F6D70 		.ascii	"compare_location\000"
 2867      6172655F 
 2867      6C6F6361 
 2867      74696F6E 
 2867      00
 2868              	.LASF17:
 2869 04a8 666C6F61 		.ascii	"float\000"
 2869      7400
 2870              	.LASF80:
 2871 04ae 6C657665 		.ascii	"level_sensor_test\000"
 2871      6C5F7365 
 2871      6E736F72 
 2871      5F746573 
 2871      7400
 2872              	.LASF30:
 2873 04c0 6C657665 		.ascii	"level_sensor_t\000"
 2873      6C5F7365 
 2873      6E736F72 
 2873      5F7400
 2874              	.LASF78:
 2875 04cf 746F6B65 		.ascii	"token\000"
 2875      6E00
 2876              	.LASF54:
 2877 04d5 5F426F6F 		.ascii	"_Bool\000"
 2877      6C00
 2878              	.LASF12:
 2879 04db 696E7433 		.ascii	"int32_t\000"
 2879      325F7400 
 2880              	.LASF1:
 2881 04e3 756E7369 		.ascii	"unsigned char\000"
 2881      676E6564 
 2881      20636861 
 2881      7200
 2882              	.LASF112:
 2883 04f1 73797374 		.ascii	"system_settings\000"
 2883      656D5F73 
 2883      65747469 
 2883      6E677300 
 2884              	.LASF25:
 2885 0501 74657374 		.ascii	"test_t\000"
 2885      5F7400
 2886              	.LASF42:
 2887 0508 72737270 		.ascii	"rsrp\000"
 2887      00
 2888              	.LASF41:
 2889 050d 72737271 		.ascii	"rsrq\000"
 2889      00
 2890              	.LASF49:
 2891 0512 73796E63 		.ascii	"sync_time\000"
 2891      5F74696D 
 2891      6500
 2892              	.LASF127:
 2893 051c 75617274 		.ascii	"uart_clear\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 61


 2893      5F636C65 
 2893      617200
 2894              	.LASF39:
 2895 0527 72736370 		.ascii	"rscp\000"
 2895      00
 2896              	.LASF111:
 2897 052c 73797374 		.ascii	"system_info\000"
 2897      656D5F69 
 2897      6E666F00 
 2898              	.LASF36:
 2899 0538 696D6569 		.ascii	"imei\000"
 2899      00
 2900              	.LASF24:
 2901 053d 72656173 		.ascii	"reason\000"
 2901      6F6E00
 2902              	.LASF72:
 2903 0544 72785F63 		.ascii	"rx_char\000"
 2903      68617200 
 2904              	.LASF45:
 2905 054c 6D6F6465 		.ascii	"modem_stats_t\000"
 2905      6D5F7374 
 2905      6174735F 
 2905      7400
 2906              	.LASF120:
 2907 055a 616C6172 		.ascii	"alarmLevelSensor\000"
 2907      6D4C6576 
 2907      656C5365 
 2907      6E736F72 
 2907      00
 2908              	.LASF52:
 2909 056b 4C657665 		.ascii	"Level_Sensor_freq\000"
 2909      6C5F5365 
 2909      6E736F72 
 2909      5F667265 
 2909      7100
 2910              	.LASF94:
 2911 057d 6C657665 		.ascii	"level_sensor_inbox\000"
 2911      6C5F7365 
 2911      6E736F72 
 2911      5F696E62 
 2911      6F7800
 2912              	.LASF13:
 2913 0590 6C6F6E67 		.ascii	"long double\000"
 2913      20646F75 
 2913      626C6500 
 2914              	.LASF74:
 2915 059c 635F7469 		.ascii	"c_timeStamp\000"
 2915      6D655374 
 2915      616D7000 
 2916              	.LASF15:
 2917 05a8 63686172 		.ascii	"char\000"
 2917      00
 2918              	.LASF10:
 2919 05ad 756E7369 		.ascii	"unsigned int\000"
 2919      676E6564 
 2919      20696E74 
 2919      00
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 62


 2920              	.LASF110:
 2921 05ba 68747470 		.ascii	"http_route\000"
 2921      5F726F75 
 2921      746500
 2922              	.LASF5:
 2923 05c5 5F5F696E 		.ascii	"__int32_t\000"
 2923      7433325F 
 2923      7400
 2924              	.LASF48:
 2925 05cf 6D656173 		.ascii	"measure_time\000"
 2925      7572655F 
 2925      74696D65 
 2925      00
 2926              	.LASF75:
 2927 05dc 6D5F6C65 		.ascii	"m_level_sensor\000"
 2927      76656C5F 
 2927      73656E73 
 2927      6F7200
 2928              	.LASF27:
 2929 05eb 6C657665 		.ascii	"level_reading\000"
 2929      6C5F7265 
 2929      6164696E 
 2929      6700
 2930              	.LASF3:
 2931 05f9 73686F72 		.ascii	"short unsigned int\000"
 2931      7420756E 
 2931      7369676E 
 2931      65642069 
 2931      6E7400
 2932              	.LASF34:
 2933 060c 73696D5F 		.ascii	"sim_id\000"
 2933      696400
 2934              	.LASF70:
 2935 0613 4C657665 		.ascii	"Level_Sensor_Update\000"
 2935      6C5F5365 
 2935      6E736F72 
 2935      5F557064 
 2935      61746500 
 2936              	.LASF53:
 2937 0627 446F776E 		.ascii	"Downstream_Level_Sensor_freq\000"
 2937      73747265 
 2937      616D5F4C 
 2937      6576656C 
 2937      5F53656E 
 2938              	.LASF128:
 2939 0644 66696E64 		.ascii	"find_median\000"
 2939      5F6D6564 
 2939      69616E00 
 2940              	.LASF23:
 2941 0650 73746174 		.ascii	"status\000"
 2941      757300
 2942              	.LASF95:
 2943 0657 6C657665 		.ascii	"level_sensor_enabled\000"
 2943      6C5F7365 
 2943      6E736F72 
 2943      5F656E61 
 2943      626C6564 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 63


 2944              	.LASF100:
 2945 066c 64617461 		.ascii	"dataPointsInStackDesired\000"
 2945      506F696E 
 2945      7473496E 
 2945      53746163 
 2945      6B446573 
 2946              	.LASF51:
 2947 0685 4170705F 		.ascii	"App_LED_freq\000"
 2947      4C45445F 
 2947      66726571 
 2947      00
 2948              	.LASF76:
 2949 0692 6C657665 		.ascii	"level_sensor_take_reading\000"
 2949      6C5F7365 
 2949      6E736F72 
 2949      5F74616B 
 2949      655F7265 
 2950              	.LASF66:
 2951 06ac 7379735F 		.ascii	"sys_settings_t\000"
 2951      73657474 
 2951      696E6773 
 2951      5F7400
 2952              	.LASF11:
 2953 06bb 75696E74 		.ascii	"uint8_t\000"
 2953      385F7400 
 2954              	.LASF20:
 2955 06c3 696E7431 		.ascii	"int16\000"
 2955      3600
 2956              	.LASF58:
 2957 06c9 636F756E 		.ascii	"countDownType\000"
 2957      74446F77 
 2957      6E547970 
 2957      6500
 2958              	.LASF47:
 2959 06d7 73696D5F 		.ascii	"sim_type\000"
 2959      74797065 
 2959      00
 2960              	.LASF83:
 2961 06e0 6D657373 		.ascii	"message\000"
 2961      61676500 
 2962              	.LASF108:
 2963 06e8 68747470 		.ascii	"http_request\000"
 2963      5F726571 
 2963      75657374 
 2963      00
 2964              	.LASF16:
 2965 06f5 646F7562 		.ascii	"double\000"
 2965      6C6500
 2966              	.LASF107:
 2967 06fc 6170705F 		.ascii	"app_led_inbox\000"
 2967      6C65645F 
 2967      696E626F 
 2967      7800
 2968              	.LASF96:
 2969 070a 646F776E 		.ascii	"downstream_level_sensor_inbox\000"
 2969      73747265 
 2969      616D5F6C 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\cczjUgOe.s 			page 64


 2969      6576656C 
 2969      5F73656E 
 2970              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
