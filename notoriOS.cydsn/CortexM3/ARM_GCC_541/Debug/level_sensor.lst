ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"level_sensor.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	level_sensor_inbox,100,4
  20              		.comm	level_sensor_enabled,1,1
  21              		.comm	downstream_level_sensor_inbox,100,4
  22              		.comm	downstream_level_sensor_enabled,1,1
  23              		.comm	valve_diameter,4,4
  24              		.comm	valve_type,10,4
  25              		.comm	valve_enabled,1,1
  26              		.comm	valve_inbox,100,4
  27              		.comm	buffer_overflow,1,1
  28              		.comm	dataPointsInStack,2,2
  29              		.comm	dataPointsInStackDesired,2,2
  30              		.comm	data,6600,4
  31              		.comm	modem_state,1,1
  32              		.comm	modem_start_time_stamp,4,4
  33              		.comm	modem_info,60,4
  34              		.comm	modem_stats,32,4
  35              		.comm	updatable_parameters,9,4
  36              		.syntax unified
  37              		.global _printf_float
  38              		.thumb
  39              		.syntax unified
  40              		.comm	App_LED_enabled,1,1
  41              		.comm	app_led_inbox,100,4
  42              		.comm	http_request,10000,4
  43              		.comm	http_body,10000,4
  44              		.comm	http_route,200,4
  45              		.comm	system_info,28,4
  46              		.comm	system_settings,104,4
  47              		.comm	alarmMeasure,6,4
  48              		.comm	timeToMeasure,1,1
  49              		.comm	alarmSync,6,4
  50              		.comm	timeToSync,1,1
  51              		.comm	timeToSycnRemoteParams,1,1
  52              		.comm	hey,1,1
  53              		.comm	alarmAppLED,6,4
  54              		.comm	timeToAppLED,1,1
  55              		.comm	alarmLevelSensor,6,4
  56              		.comm	timetoLevelSensor,1,1
  57              		.comm	alarmDownstreamLevelSensor,6,4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 2


  58              		.comm	timetoDownstreamLevelSensor,1,1
  59              		.comm	alarmValve,6,4
  60              		.comm	timeToValve,1,1
  61              		.bss
  62              		.align	2
  63              	uart_chars:
  64 0000 00000000 		.space	257
  64      00000000 
  64      00000000 
  64      00000000 
  64      00000000 
  65              	num_chars:
  66 0101 00       		.space	1
  67              		.data
  68              		.align	2
  69              		.type	line, %object
  70              		.size	line, 4
  71              	line:
  72 0000 00000000 		.word	uart_chars
  73              		.bss
  74 0102 0000     		.align	2
  75              	match:
  76 0104 00000000 		.space	4
  77              		.align	2
  78              	pattern:
  79 0108 00000000 		.space	4
  80              		.section	.text.uart_string,"ax",%progbits
  81              		.align	2
  82              		.global	uart_string
  83              		.thumb
  84              		.thumb_func
  85              		.type	uart_string, %function
  86              	uart_string:
  87              	.LFB64:
  88              		.file 1 "level_sensor.c"
   1:level_sensor.c **** #include "level_sensor.h"
   2:level_sensor.c **** #include "notoriOS.h"
   3:level_sensor.c **** #include "debug.h"
   4:level_sensor.c **** 
   5:level_sensor.c **** /* === Driver Functions === */
   6:level_sensor.c **** 
   7:level_sensor.c **** //Sensor related global calls
   8:level_sensor.c **** 
   9:level_sensor.c **** 
  10:level_sensor.c **** // Circular buffer of recently received chars.
  11:level_sensor.c **** // Initialize all the members of the array uart_chars to 0. 
  12:level_sensor.c **** static char uart_chars[257] = {0};
  13:level_sensor.c **** static uint8_t num_chars = 0;
  14:level_sensor.c **** 
  15:level_sensor.c **** static const char *line = uart_chars;
  16:level_sensor.c **** // Only pointers can be null, where null is a special address used to signify that the pointer is n
  17:level_sensor.c **** // Pointers are not initialized to null by default, you must do so if you want them initialized.
  18:level_sensor.c **** static const char *match = NULL;
  19:level_sensor.c **** static const char *pattern = NULL;
  20:level_sensor.c **** 
  21:level_sensor.c **** 
  22:level_sensor.c **** // This is only defined in c file so this function will return the location in memory where that va
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 3


  23:level_sensor.c **** const char *uart_string(void) {
  89              		.loc 1 23 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 1, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94 0000 80B4     		push	{r7}
  95              		.cfi_def_cfa_offset 4
  96              		.cfi_offset 7, -4
  97 0002 00AF     		add	r7, sp, #0
  98              		.cfi_def_cfa_register 7
  24:level_sensor.c ****     // Variables in front of a variable is casting 
  25:level_sensor.c ****     // uart_chars may be a different variable type, make sure to cast it as a char
  26:level_sensor.c ****   return (char*)uart_chars;
  99              		.loc 1 26 0
 100 0004 024B     		ldr	r3, .L3
  27:level_sensor.c **** }
 101              		.loc 1 27 0
 102 0006 1846     		mov	r0, r3
 103 0008 BD46     		mov	sp, r7
 104              		.cfi_def_cfa_register 13
 105              		@ sp needed
 106 000a 80BC     		pop	{r7}
 107              		.cfi_restore 7
 108              		.cfi_def_cfa_offset 0
 109 000c 7047     		bx	lr
 110              	.L4:
 111 000e 00BF     		.align	2
 112              	.L3:
 113 0010 00000000 		.word	uart_chars
 114              		.cfi_endproc
 115              	.LFE64:
 116              		.size	uart_string, .-uart_string
 117              		.section	.text.uart_len,"ax",%progbits
 118              		.align	2
 119              		.global	uart_len
 120              		.thumb
 121              		.thumb_func
 122              		.type	uart_len, %function
 123              	uart_len:
 124              	.LFB65:
  28:level_sensor.c **** 
  29:level_sensor.c **** // Return the number of characters of the level sensor reading
  30:level_sensor.c **** uint8_t uart_len(void) {
 125              		.loc 1 30 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 1, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 130 0000 80B4     		push	{r7}
 131              		.cfi_def_cfa_offset 4
 132              		.cfi_offset 7, -4
 133 0002 00AF     		add	r7, sp, #0
 134              		.cfi_def_cfa_register 7
  31:level_sensor.c ****   return num_chars;
 135              		.loc 1 31 0
 136 0004 024B     		ldr	r3, .L7
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 4


 137 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  32:level_sensor.c **** }
 138              		.loc 1 32 0
 139 0008 1846     		mov	r0, r3
 140 000a BD46     		mov	sp, r7
 141              		.cfi_def_cfa_register 13
 142              		@ sp needed
 143 000c 80BC     		pop	{r7}
 144              		.cfi_restore 7
 145              		.cfi_def_cfa_offset 0
 146 000e 7047     		bx	lr
 147              	.L8:
 148              		.align	2
 149              	.L7:
 150 0010 01010000 		.word	num_chars
 151              		.cfi_endproc
 152              	.LFE65:
 153              		.size	uart_len, .-uart_len
 154              		.section	.text.uart_clear,"ax",%progbits
 155              		.align	2
 156              		.global	uart_clear
 157              		.thumb
 158              		.thumb_func
 159              		.type	uart_clear, %function
 160              	uart_clear:
 161              	.LFB66:
  33:level_sensor.c **** 
  34:level_sensor.c **** // Clears the sensor data 
  35:level_sensor.c **** void uart_clear(void) {
 162              		.loc 1 35 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 1, uses_anonymous_args = 0
 166 0000 80B5     		push	{r7, lr}
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 7, -8
 169              		.cfi_offset 14, -4
 170 0002 00AF     		add	r7, sp, #0
 171              		.cfi_def_cfa_register 7
  36:level_sensor.c ****   // UART_ClearRxBuffer(): Clears the receiver memory buffer and hardware RX FIFO of all received d
  37:level_sensor.c ****   Level_Sensor_UART_ClearRxBuffer();
 172              		.loc 1 37 0
 173 0004 FFF7FEFF 		bl	Level_Sensor_UART_ClearRxBuffer
  38:level_sensor.c ****   // void *memset(void *str, int c, size_t n) where str is a pointer to the block of memory to fill
  39:level_sensor.c ****   // The value is passed as an int, but the function fills the block of memory using the unsigned c
  40:level_sensor.c ****   // n is the number of bytes to be set to the value.
  41:level_sensor.c ****   memset((void*)uart_chars, 0, 256);
 174              		.loc 1 41 0
 175 0008 4FF48072 		mov	r2, #256
 176 000c 0021     		movs	r1, #0
 177 000e 0448     		ldr	r0, .L10
 178 0010 FFF7FEFF 		bl	memset
  42:level_sensor.c ****   num_chars = 0;
 179              		.loc 1 42 0
 180 0014 034B     		ldr	r3, .L10+4
 181 0016 0022     		movs	r2, #0
 182 0018 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 5


  43:level_sensor.c **** }
 183              		.loc 1 43 0
 184 001a 00BF     		nop
 185 001c 80BD     		pop	{r7, pc}
 186              	.L11:
 187 001e 00BF     		.align	2
 188              	.L10:
 189 0020 00000000 		.word	uart_chars
 190 0024 01010000 		.word	num_chars
 191              		.cfi_endproc
 192              	.LFE66:
 193              		.size	uart_clear, .-uart_clear
 194              		.section	.text.Level_Sensor_ISR,"ax",%progbits
 195              		.align	2
 196              		.global	Level_Sensor_ISR
 197              		.thumb
 198              		.thumb_func
 199              		.type	Level_Sensor_ISR, %function
 200              	Level_Sensor_ISR:
 201              	.LFB67:
  44:level_sensor.c **** 
  45:level_sensor.c **** // ISR: Interrupt Service Routine
  46:level_sensor.c **** CY_ISR(Level_Sensor_ISR) {
 202              		.loc 1 46 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 8
 205              		@ frame_needed = 1, uses_anonymous_args = 0
 206 0000 80B5     		push	{r7, lr}
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 7, -8
 209              		.cfi_offset 14, -4
 210 0002 82B0     		sub	sp, sp, #8
 211              		.cfi_def_cfa_offset 16
 212 0004 00AF     		add	r7, sp, #0
 213              		.cfi_def_cfa_register 7
  47:level_sensor.c ****     /* Store received char in uart_chars.
  48:level_sensor.c ****     Returns the last received byte of data. Level_Sensor_UART_GetChar() is designed for ASCII chara
  49:level_sensor.c ****     1 to 255 are values for valid characters and 0 indicats an error occurred or no data is present
  50:level_sensor.c ****     char rx_char = Level_Sensor_UART_GetChar();
 214              		.loc 1 50 0
 215 0006 FFF7FEFF 		bl	Level_Sensor_UART_GetChar
 216 000a 0346     		mov	r3, r0
 217 000c FB71     		strb	r3, [r7, #7]
  51:level_sensor.c ****     // UART_GetChar() returns data, then set the entire uart_chars array to rx_char.
  52:level_sensor.c ****     if (rx_char) uart_chars[num_chars++] = rx_char;
 218              		.loc 1 52 0
 219 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 220 0010 002B     		cmp	r3, #0
 221 0012 09D0     		beq	.L13
 222              		.loc 1 52 0 is_stmt 0 discriminator 1
 223 0014 114B     		ldr	r3, .L16
 224 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 225 0018 5A1C     		adds	r2, r3, #1
 226 001a D1B2     		uxtb	r1, r2
 227 001c 0F4A     		ldr	r2, .L16
 228 001e 1170     		strb	r1, [r2]
 229 0020 1946     		mov	r1, r3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 6


 230 0022 0F4A     		ldr	r2, .L16+4
 231 0024 FB79     		ldrb	r3, [r7, #7]
 232 0026 5354     		strb	r3, [r2, r1]
 233              	.L13:
  53:level_sensor.c **** 
  54:level_sensor.c ****     /* Check pattern at end of line */
  55:level_sensor.c ****     if (rx_char == '\r') {
 234              		.loc 1 55 0 is_stmt 1
 235 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 236 002a 0D2B     		cmp	r3, #13
 237 002c 11D1     		bne	.L15
  56:level_sensor.c ****         // strstr(): char *strstr(const char *haystack, const char *needle). haystack - main C stri
  57:level_sensor.c ****         match = strstr(line, pattern);
 238              		.loc 1 57 0
 239 002e 0D4B     		ldr	r3, .L16+8
 240 0030 1A68     		ldr	r2, [r3]
 241 0032 0D4B     		ldr	r3, .L16+12
 242 0034 1B68     		ldr	r3, [r3]
 243 0036 1946     		mov	r1, r3
 244 0038 1046     		mov	r0, r2
 245 003a FFF7FEFF 		bl	strstr
 246 003e 0246     		mov	r2, r0
 247 0040 0A4B     		ldr	r3, .L16+16
 248 0042 1A60     		str	r2, [r3]
  58:level_sensor.c ****         line = uart_chars + num_chars;
 249              		.loc 1 58 0
 250 0044 054B     		ldr	r3, .L16
 251 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 252 0048 1A46     		mov	r2, r3
 253 004a 054B     		ldr	r3, .L16+4
 254 004c 1344     		add	r3, r3, r2
 255 004e 054A     		ldr	r2, .L16+8
 256 0050 1360     		str	r3, [r2]
 257              	.L15:
  59:level_sensor.c ****     }
  60:level_sensor.c **** }
 258              		.loc 1 60 0
 259 0052 00BF     		nop
 260 0054 0837     		adds	r7, r7, #8
 261              		.cfi_def_cfa_offset 8
 262 0056 BD46     		mov	sp, r7
 263              		.cfi_def_cfa_register 13
 264              		@ sp needed
 265 0058 80BD     		pop	{r7, pc}
 266              	.L17:
 267 005a 00BF     		.align	2
 268              	.L16:
 269 005c 01010000 		.word	num_chars
 270 0060 00000000 		.word	uart_chars
 271 0064 00000000 		.word	line
 272 0068 08010000 		.word	pattern
 273 006c 04010000 		.word	match
 274              		.cfi_endproc
 275              	.LFE67:
 276              		.size	Level_Sensor_ISR, .-Level_Sensor_ISR
 277              		.section	.text.Level_Sensor_Update,"ax",%progbits
 278              		.align	2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 7


 279              		.global	Level_Sensor_Update
 280              		.thumb
 281              		.thumb_func
 282              		.type	Level_Sensor_Update, %function
 283              	Level_Sensor_Update:
 284              	.LFB68:
  61:level_sensor.c **** 
  62:level_sensor.c **** void Level_Sensor_Update(char * message){
 285              		.loc 1 62 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 8
 288              		@ frame_needed = 1, uses_anonymous_args = 0
 289 0000 80B5     		push	{r7, lr}
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 7, -8
 292              		.cfi_offset 14, -4
 293 0002 82B0     		sub	sp, sp, #8
 294              		.cfi_def_cfa_offset 16
 295 0004 00AF     		add	r7, sp, #0
 296              		.cfi_def_cfa_register 7
 297 0006 7860     		str	r0, [r7, #4]
  63:level_sensor.c ****     strcpy(level_sensor_inbox, message);
 298              		.loc 1 63 0
 299 0008 7968     		ldr	r1, [r7, #4]
 300 000a 0348     		ldr	r0, .L19
 301 000c FFF7FEFF 		bl	strcpy
  64:level_sensor.c **** }
 302              		.loc 1 64 0
 303 0010 00BF     		nop
 304 0012 0837     		adds	r7, r7, #8
 305              		.cfi_def_cfa_offset 8
 306 0014 BD46     		mov	sp, r7
 307              		.cfi_def_cfa_register 13
 308              		@ sp needed
 309 0016 80BD     		pop	{r7, pc}
 310              	.L20:
 311              		.align	2
 312              	.L19:
 313 0018 00000000 		.word	level_sensor_inbox
 314              		.cfi_endproc
 315              	.LFE68:
 316              		.size	Level_Sensor_Update, .-Level_Sensor_Update
 317              		.section	.rodata
 318              		.align	2
 319              	.LC0:
 320 0000 4F464600 		.ascii	"OFF\000"
 321              		.align	2
 322              	.LC1:
 323 0004 4F4E00   		.ascii	"ON\000"
 324 0007 00       		.align	2
 325              	.LC2:
 326 0008 256C6400 		.ascii	"%ld\000"
 327              		.align	2
 328              	.LC3:
 329 000c 256400   		.ascii	"%d\000"
 330 000f 00       		.align	2
 331              	.LC4:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 8


 332 0010 6D617862 		.ascii	"maxbotix_depth=%s\000"
 332      6F746978 
 332      5F646570 
 332      74683D25 
 332      7300
 333 0022 0000     		.align	2
 334              	.LC5:
 335 0024 6D617862 		.ascii	"maxbotix_depth\000"
 335      6F746978 
 335      5F646570 
 335      746800
 336 0033 00       		.align	2
 337              	.LC6:
 338 0034 612B00   		.ascii	"a+\000"
 339 0037 00       		.align	2
 340              	.LC7:
 341 0038 64617461 		.ascii	"data.txt\000"
 341      2E747874 
 341      00
 342 0041 000000   		.align	2
 343              	.LC8:
 344 0044 206D6178 		.ascii	" maxbotix_depth: \000"
 344      626F7469 
 344      785F6465 
 344      7074683A 
 344      2000
 345 0056 0000     		.align	2
 346              	.LC9:
 347 0058 2000     		.ascii	" \000"
 348 005a 0000     		.align	2
 349              	.LC10:
 350 005c 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 350      64206E6F 
 350      74206765 
 350      74207661 
 350      6C696420 
 351              		.align	2
 352              	.LC11:
 353 0088 2D3100   		.ascii	"-1\000"
 354              		.section	.text.level_sensor,"ax",%progbits
 355              		.align	2
 356              		.global	level_sensor
 357              		.thumb
 358              		.thumb_func
 359              		.type	level_sensor, %function
 360              	level_sensor:
 361              	.LFB69:
  65:level_sensor.c **** 
  66:level_sensor.c **** uint8 level_sensor(){
 362              		.loc 1 66 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 88
 365              		@ frame_needed = 1, uses_anonymous_args = 0
 366 0000 80B5     		push	{r7, lr}
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 7, -8
 369              		.cfi_offset 14, -4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 9


 370 0002 96B0     		sub	sp, sp, #88
 371              		.cfi_def_cfa_offset 96
 372 0004 00AF     		add	r7, sp, #0
 373              		.cfi_def_cfa_register 7
  67:level_sensor.c ****     char * compare_location;
  68:level_sensor.c ****     
  69:level_sensor.c ****     compare_location = strstr(level_sensor_inbox,"OFF");        
 374              		.loc 1 69 0
 375 0006 3149     		ldr	r1, .L27
 376 0008 3148     		ldr	r0, .L27+4
 377 000a FFF7FEFF 		bl	strstr
 378 000e 7865     		str	r0, [r7, #84]
  70:level_sensor.c ****     if(compare_location!=NULL){
 379              		.loc 1 70 0
 380 0010 7B6D     		ldr	r3, [r7, #84]
 381 0012 002B     		cmp	r3, #0
 382 0014 01D0     		beq	.L22
  71:level_sensor.c ****         return 0; // this app is disabled, don't do anything
 383              		.loc 1 71 0
 384 0016 0023     		movs	r3, #0
 385 0018 53E0     		b	.L23
 386              	.L22:
  72:level_sensor.c ****     }
  73:level_sensor.c ****     
  74:level_sensor.c **** 
  75:level_sensor.c ****     compare_location = strstr(level_sensor_inbox,"ON");        
 387              		.loc 1 75 0
 388 001a 2E49     		ldr	r1, .L27+8
 389 001c 2C48     		ldr	r0, .L27+4
 390 001e FFF7FEFF 		bl	strstr
 391 0022 7865     		str	r0, [r7, #84]
  76:level_sensor.c ****     if(compare_location!=NULL){
 392              		.loc 1 76 0
 393 0024 7B6D     		ldr	r3, [r7, #84]
 394 0026 002B     		cmp	r3, #0
 395 0028 4AD0     		beq	.L24
 396              	.LBB2:
  77:level_sensor.c **** 
  78:level_sensor.c ****         // below is copied and adapted from makeMeasurements in modem.c 
  79:level_sensor.c ****         // (duplicated so that normal depth and GI nodes still work)
  80:level_sensor.c ****         
  81:level_sensor.c ****         // Get clock time and save to timeStamp
  82:level_sensor.c ****         long timeStamp = getTimeStamp();
 397              		.loc 1 82 0
 398 002a FFF7FEFF 		bl	getTimeStamp
 399 002e 3865     		str	r0, [r7, #80]
  83:level_sensor.c ****         char c_timeStamp[32];
  84:level_sensor.c ****         snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 400              		.loc 1 84 0
 401 0030 3846     		mov	r0, r7
 402 0032 3B6D     		ldr	r3, [r7, #80]
 403 0034 284A     		ldr	r2, .L27+12
 404 0036 2021     		movs	r1, #32
 405 0038 FFF7FEFF 		bl	snprintf
  85:level_sensor.c ****         
  86:level_sensor.c ****         // Holds string for value that will be written 
  87:level_sensor.c ****         char value[DATA_MAX_KEY_LENGTH];
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 10


  88:level_sensor.c ****         
  89:level_sensor.c ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
  90:level_sensor.c ****         level_sensor_t m_level_sensor;
  91:level_sensor.c ****         
  92:level_sensor.c ****         // Take level sensor readings and save them to m_level_sensor
  93:level_sensor.c ****         m_level_sensor = level_sensor_take_reading();
 406              		.loc 1 93 0
 407 003c 07F12003 		add	r3, r7, #32
 408 0040 1846     		mov	r0, r3
 409 0042 FFF7FEFF 		bl	level_sensor_take_reading
  94:level_sensor.c **** 
  95:level_sensor.c ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
  96:level_sensor.c ****         if(m_level_sensor.num_valid_readings > 0){
 410              		.loc 1 96 0
 411 0046 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 412 004a 002B     		cmp	r3, #0
 413 004c 2DD0     		beq	.L25
  97:level_sensor.c ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 414              		.loc 1 97 0
 415 004e B7F93630 		ldrsh	r3, [r7, #54]
 416 0052 07F13C00 		add	r0, r7, #60
 417 0056 214A     		ldr	r2, .L27+16
 418 0058 1421     		movs	r1, #20
 419 005a FFF7FEFF 		bl	snprintf
  98:level_sensor.c ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 420              		.loc 1 98 0
 421 005e 07F13C03 		add	r3, r7, #60
 422 0062 1A46     		mov	r2, r3
 423 0064 1E49     		ldr	r1, .L27+20
 424 0066 0020     		movs	r0, #0
 425 0068 FFF7FEFF 		bl	printNotif
  99:level_sensor.c ****             pushData("maxbotix_depth",value,timeStamp);
 426              		.loc 1 99 0
 427 006c 07F13C03 		add	r3, r7, #60
 428 0070 3A6D     		ldr	r2, [r7, #80]
 429 0072 1946     		mov	r1, r3
 430 0074 1B48     		ldr	r0, .L27+24
 431 0076 FFF7FEFF 		bl	pushData
 100:level_sensor.c ****             
 101:level_sensor.c ****             // Print measurement to SD card to file called data.txt
 102:level_sensor.c ****             SD_write("data.txt", "a+", c_timeStamp);
 432              		.loc 1 102 0
 433 007a 3B46     		mov	r3, r7
 434 007c 1A46     		mov	r2, r3
 435 007e 1A49     		ldr	r1, .L27+28
 436 0080 1A48     		ldr	r0, .L27+32
 437 0082 FFF7FEFF 		bl	SD_write
 103:level_sensor.c ****             SD_write("data.txt", "a+", " maxbotix_depth: ");
 438              		.loc 1 103 0
 439 0086 1A4A     		ldr	r2, .L27+36
 440 0088 1749     		ldr	r1, .L27+28
 441 008a 1848     		ldr	r0, .L27+32
 442 008c FFF7FEFF 		bl	SD_write
 104:level_sensor.c ****             SD_write("data.txt", "a+", value);
 443              		.loc 1 104 0
 444 0090 07F13C03 		add	r3, r7, #60
 445 0094 1A46     		mov	r2, r3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 11


 446 0096 1449     		ldr	r1, .L27+28
 447 0098 1448     		ldr	r0, .L27+32
 448 009a FFF7FEFF 		bl	SD_write
 105:level_sensor.c ****             SD_write("data.txt", "a+", " ");
 449              		.loc 1 105 0
 450 009e 154A     		ldr	r2, .L27+40
 451 00a0 1149     		ldr	r1, .L27+28
 452 00a2 1248     		ldr	r0, .L27+32
 453 00a4 FFF7FEFF 		bl	SD_write
 454 00a8 08E0     		b	.L26
 455              	.L25:
 106:level_sensor.c ****         }else{
 107:level_sensor.c ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 456              		.loc 1 107 0
 457 00aa 1349     		ldr	r1, .L27+44
 458 00ac 0220     		movs	r0, #2
 459 00ae FFF7FEFF 		bl	printNotif
 108:level_sensor.c ****             pushData("maxbotix_depth","-1",timeStamp); // error code, never get this from a sensor
 460              		.loc 1 108 0
 461 00b2 3A6D     		ldr	r2, [r7, #80]
 462 00b4 1149     		ldr	r1, .L27+48
 463 00b6 0B48     		ldr	r0, .L27+24
 464 00b8 FFF7FEFF 		bl	pushData
 465              	.L26:
 109:level_sensor.c ****         }
 110:level_sensor.c ****         
 111:level_sensor.c **** 
 112:level_sensor.c ****         return 0;
 466              		.loc 1 112 0
 467 00bc 0023     		movs	r3, #0
 468 00be 00E0     		b	.L23
 469              	.L24:
 470              	.LBE2:
 113:level_sensor.c ****     }
 114:level_sensor.c ****     
 115:level_sensor.c ****     return 0; // i think this needs to be rewritten to be more like a light switch
 471              		.loc 1 115 0
 472 00c0 0023     		movs	r3, #0
 473              	.L23:
 116:level_sensor.c ****     // i.e. it stays on until you turn it off.
 117:level_sensor.c **** }
 474              		.loc 1 117 0 discriminator 1
 475 00c2 1846     		mov	r0, r3
 476 00c4 5837     		adds	r7, r7, #88
 477              		.cfi_def_cfa_offset 8
 478 00c6 BD46     		mov	sp, r7
 479              		.cfi_def_cfa_register 13
 480              		@ sp needed
 481 00c8 80BD     		pop	{r7, pc}
 482              	.L28:
 483 00ca 00BF     		.align	2
 484              	.L27:
 485 00cc 00000000 		.word	.LC0
 486 00d0 00000000 		.word	level_sensor_inbox
 487 00d4 04000000 		.word	.LC1
 488 00d8 08000000 		.word	.LC2
 489 00dc 0C000000 		.word	.LC3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 12


 490 00e0 10000000 		.word	.LC4
 491 00e4 24000000 		.word	.LC5
 492 00e8 34000000 		.word	.LC6
 493 00ec 38000000 		.word	.LC7
 494 00f0 44000000 		.word	.LC8
 495 00f4 58000000 		.word	.LC9
 496 00f8 5C000000 		.word	.LC10
 497 00fc 88000000 		.word	.LC11
 498              		.cfi_endproc
 499              	.LFE69:
 500              		.size	level_sensor, .-level_sensor
 501              		.section	.rodata
 502 008b 00       		.align	2
 503              	.LC12:
 504 008c 5200     		.ascii	"R\000"
 505              		.section	.text.level_sensor_take_reading,"ax",%progbits
 506              		.align	2
 507              		.global	level_sensor_take_reading
 508              		.thumb
 509              		.thumb_func
 510              		.type	level_sensor_take_reading, %function
 511              	level_sensor_take_reading:
 512              	.LFB70:
 118:level_sensor.c **** 
 119:level_sensor.c **** // takes level sensor measurements and calculates average level sensor reading
 120:level_sensor.c **** level_sensor_t level_sensor_take_reading(){
 513              		.loc 1 120 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 40
 516              		@ frame_needed = 1, uses_anonymous_args = 0
 517 0000 B0B5     		push	{r4, r5, r7, lr}
 518              		.cfi_def_cfa_offset 16
 519              		.cfi_offset 4, -16
 520              		.cfi_offset 5, -12
 521              		.cfi_offset 7, -8
 522              		.cfi_offset 14, -4
 523 0002 8AB0     		sub	sp, sp, #40
 524              		.cfi_def_cfa_offset 56
 525 0004 00AF     		add	r7, sp, #0
 526              		.cfi_def_cfa_register 7
 527 0006 7860     		str	r0, [r7, #4]
 121:level_sensor.c ****     
 122:level_sensor.c ****     // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data type t
 123:level_sensor.c ****     level_sensor_t level_sensor_output;
 124:level_sensor.c ****     level_sensor_output.num_invalid_readings = 0;
 528              		.loc 1 124 0
 529 0008 0023     		movs	r3, #0
 530 000a 87F82130 		strb	r3, [r7, #33]
 125:level_sensor.c ****     level_sensor_output.num_valid_readings = 0;
 531              		.loc 1 125 0
 532 000e 0023     		movs	r3, #0
 533 0010 87F82030 		strb	r3, [r7, #32]
 126:level_sensor.c ****     
 127:level_sensor.c ****     uart_clear();
 534              		.loc 1 127 0
 535 0014 FFF7FEFF 		bl	uart_clear
 128:level_sensor.c ****     
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 13


 129:level_sensor.c ****     // Start sensor power, uart, and isr
 130:level_sensor.c ****     Level_Sensor_Power_Write(ON);   // Pulls Level Sensor power pin high (turns it on).
 536              		.loc 1 130 0
 537 0018 0120     		movs	r0, #1
 538 001a FFF7FEFF 		bl	Level_Sensor_Power_Write
 131:level_sensor.c ****     CyDelay(200u); // Sensor bootup sequence ~200ms -- senosor will spit out ID info, but we don't 
 539              		.loc 1 131 0
 540 001e C820     		movs	r0, #200
 541 0020 FFF7FEFF 		bl	CyDelay
 132:level_sensor.c ****     Level_Sensor_RX_SetDriveMode(PIN_DM_DIG_HIZ); // RX_SetDriveMode(): Sets the drive mode for eac
 542              		.loc 1 132 0
 543 0024 0220     		movs	r0, #2
 544 0026 FFF7FEFF 		bl	Level_Sensor_RX_SetDriveMode
 133:level_sensor.c ****     Level_Sensor_UART_Start(); // Level_Sensor_UART_Start() sets the initVar variable, calls the Le
 545              		.loc 1 133 0
 546 002a FFF7FEFF 		bl	Level_Sensor_UART_Start
 134:level_sensor.c ****     Level_Sensor_ISR_StartEx(Level_Sensor_ISR); // Sets up the interrupt and enables it.
 547              		.loc 1 134 0
 548 002e 3848     		ldr	r0, .L38
 549 0030 FFF7FEFF 		bl	Level_Sensor_ISR_StartEx
 135:level_sensor.c ****     
 136:level_sensor.c ****     // Wait to take  reading
 137:level_sensor.c ****     // Sensor will take ~200ms to send first reading, and 200ms for subsequent readings
 138:level_sensor.c ****     CyDelay(2000u); // Take a few seconds to get readings, 2 secs ~10 readings
 550              		.loc 1 138 0
 551 0034 4FF4FA60 		mov	r0, #2000
 552 0038 FFF7FEFF 		bl	CyDelay
 139:level_sensor.c ****     
 140:level_sensor.c ****     //stop all sensor processes
 141:level_sensor.c ****     Level_Sensor_UART_Stop(); // Disables the UART operation.
 553              		.loc 1 141 0
 554 003c FFF7FEFF 		bl	Level_Sensor_UART_Stop
 142:level_sensor.c ****     Level_Sensor_ISR_Stop(); // Disables and removes the interrupt.
 555              		.loc 1 142 0
 556 0040 FFF7FEFF 		bl	Level_Sensor_ISR_Stop
 143:level_sensor.c ****     Level_Sensor_Power_Write(OFF); // Pulls Level Sensor Power pin low (turns it off).
 557              		.loc 1 143 0
 558 0044 0020     		movs	r0, #0
 559 0046 FFF7FEFF 		bl	Level_Sensor_Power_Write
 144:level_sensor.c ****     // RX_SetDriveMode(): Sets the drive mode for each of the Pins component's pins.
 145:level_sensor.c ****     // String Drive Mode means it will only be outputting a voltage (don't send any data) when pull
 146:level_sensor.c ****     // UART in PSOC starts high. Then pulls low to get data. When turn sensor off, still using powe
 147:level_sensor.c ****     // So turning it to Strong Drive has it stay low.
 148:level_sensor.c ****     Level_Sensor_RX_SetDriveMode(PIN_DM_STRONG);
 560              		.loc 1 148 0
 561 004a 0C20     		movs	r0, #12
 562 004c FFF7FEFF 		bl	Level_Sensor_RX_SetDriveMode
 149:level_sensor.c ****     // Stops writing the value to the physical port.
 150:level_sensor.c ****     // Just because turn power of sensor off, pin could still be high and getting power. This ensur
 151:level_sensor.c ****     Level_Sensor_RX_Write(OFF);
 563              		.loc 1 151 0
 564 0050 0020     		movs	r0, #0
 565 0052 FFF7FEFF 		bl	Level_Sensor_RX_Write
 152:level_sensor.c **** 
 153:level_sensor.c ****     /* Return parsed reading */
 154:level_sensor.c ****     // Parse string and put all values into array
 155:level_sensor.c ****     // The sensor will power on and do a few things, after which the readigs will follow with the s
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 14


 156:level_sensor.c ****     // Readings are stashed between "R" and "\000"
 157:level_sensor.c ****     char *token;
 158:level_sensor.c ****     // strtok(): breaks uart_chars into smaller string when sees "R".
 159:level_sensor.c ****     token = strtok(uart_chars, "R");
 566              		.loc 1 159 0
 567 0056 2F49     		ldr	r1, .L38+4
 568 0058 2F48     		ldr	r0, .L38+8
 569 005a FFF7FEFF 		bl	strtok
 570 005e 7862     		str	r0, [r7, #36]
 160:level_sensor.c ****     /* walk through other tokens */
 161:level_sensor.c ****    while( token != NULL ) 
 571              		.loc 1 161 0
 572 0060 33E0     		b	.L30
 573              	.L35:
 162:level_sensor.c ****    {
 163:level_sensor.c ****       if(strstr(token, "\r") != NULL){ // Full reading is delimieted by "R" + reading + "\r"
 574              		.loc 1 163 0
 575 0062 0D21     		movs	r1, #13
 576 0064 786A     		ldr	r0, [r7, #36]
 577 0066 FFF7FEFF 		bl	strchr
 578 006a 0346     		mov	r3, r0
 579 006c 002B     		cmp	r3, #0
 580 006e 27D0     		beq	.L31
 581              	.LBB3:
 164:level_sensor.c ****         // int atoi(const char *str) converts the string argument str to an integer (type int).
 165:level_sensor.c ****         uint16 reading = atoi(token);
 582              		.loc 1 165 0
 583 0070 786A     		ldr	r0, [r7, #36]
 584 0072 FFF7FEFF 		bl	atoi
 585 0076 0346     		mov	r3, r0
 586 0078 7B84     		strh	r3, [r7, #34]	@ movhi
 166:level_sensor.c ****         if(reading != 0){
 587              		.loc 1 166 0
 588 007a 7B8C     		ldrh	r3, [r7, #34]
 589 007c 002B     		cmp	r3, #0
 590 007e 1FD0     		beq	.L31
 167:level_sensor.c ****             if(reading != READING_INVALID){ // Invald readings by maxbotix
 591              		.loc 1 167 0
 592 0080 7B8C     		ldrh	r3, [r7, #34]
 593 0082 42F20F72 		movw	r2, #9999
 594 0086 9342     		cmp	r3, r2
 595 0088 14D0     		beq	.L32
 168:level_sensor.c ****                 // Set the level readings array of the length of number of valid readings equal to 
 169:level_sensor.c ****                 level_sensor_output.all_level_readings[level_sensor_output.num_valid_readings] = re
 596              		.loc 1 169 0
 597 008a 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 598 008e B7F92220 		ldrsh	r2, [r7, #34]
 599 0092 5B00     		lsls	r3, r3, #1
 600 0094 07F12801 		add	r1, r7, #40
 601 0098 0B44     		add	r3, r3, r1
 602 009a 23F8202C 		strh	r2, [r3, #-32]	@ movhi
 170:level_sensor.c ****                 // If number of valid readings less than 11 total readings, increase the count of v
 171:level_sensor.c ****                 if(level_sensor_output.num_valid_readings < N_READINGS){
 603              		.loc 1 171 0
 604 009e 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 605 00a2 0A2B     		cmp	r3, #10
 606 00a4 15D8     		bhi	.L37
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 15


 172:level_sensor.c ****                     level_sensor_output.num_valid_readings++;
 607              		.loc 1 172 0
 608 00a6 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 609 00aa 0133     		adds	r3, r3, #1
 610 00ac DBB2     		uxtb	r3, r3
 611 00ae 87F82030 		strb	r3, [r7, #32]
 612 00b2 05E0     		b	.L31
 613              	.L32:
 173:level_sensor.c ****                 }else{
 174:level_sensor.c ****                  break;   
 175:level_sensor.c ****                 }
 176:level_sensor.c ****                 
 177:level_sensor.c ****             }else{
 178:level_sensor.c ****                 // Otherwise increase the count of invalid readings
 179:level_sensor.c ****                 level_sensor_output.num_invalid_readings++;
 614              		.loc 1 179 0
 615 00b4 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
 616 00b8 0133     		adds	r3, r3, #1
 617 00ba DBB2     		uxtb	r3, r3
 618 00bc 87F82130 		strb	r3, [r7, #33]
 619              	.L31:
 620              	.LBE3:
 180:level_sensor.c ****             }
 181:level_sensor.c ****         }
 182:level_sensor.c ****       }
 183:level_sensor.c ****       token = strtok(NULL, "R"); // This "NULL" says to continue where you left off last time.
 621              		.loc 1 183 0
 622 00c0 1449     		ldr	r1, .L38+4
 623 00c2 0020     		movs	r0, #0
 624 00c4 FFF7FEFF 		bl	strtok
 625 00c8 7862     		str	r0, [r7, #36]
 626              	.L30:
 161:level_sensor.c ****    {
 627              		.loc 1 161 0
 628 00ca 7B6A     		ldr	r3, [r7, #36]
 629 00cc 002B     		cmp	r3, #0
 630 00ce C8D1     		bne	.L35
 631 00d0 00E0     		b	.L34
 632              	.L37:
 633              	.LBB4:
 174:level_sensor.c ****                 }
 634              		.loc 1 174 0
 635 00d2 00BF     		nop
 636              	.L34:
 637              	.LBE4:
 184:level_sensor.c ****    }
 185:level_sensor.c ****     // Calculate median level reading
 186:level_sensor.c ****     level_sensor_output.level_reading = find_median(level_sensor_output.all_level_readings,level_se
 638              		.loc 1 186 0
 639 00d4 97F82020 		ldrb	r2, [r7, #32]	@ zero_extendqisi2
 640 00d8 07F10803 		add	r3, r7, #8
 641 00dc 1146     		mov	r1, r2
 642 00de 1846     		mov	r0, r3
 643 00e0 FFF7FEFF 		bl	find_median
 644 00e4 0346     		mov	r3, r0
 645 00e6 1BB2     		sxth	r3, r3
 646 00e8 FB83     		strh	r3, [r7, #30]	@ movhi
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 16


 187:level_sensor.c ****     
 188:level_sensor.c ****     return level_sensor_output;
 647              		.loc 1 188 0
 648 00ea 7B68     		ldr	r3, [r7, #4]
 649 00ec 1D46     		mov	r5, r3
 650 00ee 07F10804 		add	r4, r7, #8
 651 00f2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 652 00f4 2860     		str	r0, [r5]	@ unaligned
 653 00f6 6960     		str	r1, [r5, #4]	@ unaligned
 654 00f8 AA60     		str	r2, [r5, #8]	@ unaligned
 655 00fa EB60     		str	r3, [r5, #12]	@ unaligned
 656 00fc 03CC     		ldmia	r4!, {r0, r1}
 657 00fe 2861     		str	r0, [r5, #16]	@ unaligned
 658 0100 6961     		str	r1, [r5, #20]	@ unaligned
 659 0102 2388     		ldrh	r3, [r4]	@ unaligned
 660 0104 2B83     		strh	r3, [r5, #24]	@ unaligned
 189:level_sensor.c **** }
 661              		.loc 1 189 0
 662 0106 7868     		ldr	r0, [r7, #4]
 663 0108 2837     		adds	r7, r7, #40
 664              		.cfi_def_cfa_offset 16
 665 010a BD46     		mov	sp, r7
 666              		.cfi_def_cfa_register 13
 667              		@ sp needed
 668 010c B0BD     		pop	{r4, r5, r7, pc}
 669              	.L39:
 670 010e 00BF     		.align	2
 671              	.L38:
 672 0110 00000000 		.word	Level_Sensor_ISR
 673 0114 8C000000 		.word	.LC12
 674 0118 00000000 		.word	uart_chars
 675              		.cfi_endproc
 676              	.LFE70:
 677              		.size	level_sensor_take_reading, .-level_sensor_take_reading
 678              		.section	.rodata
 679 008e 0000     		.align	2
 680              	.LC13:
 681 0090 54455354 		.ascii	"TEST_LEVEL_SENSOR\000"
 681      5F4C4556 
 681      454C5F53 
 681      454E534F 
 681      5200
 682 00a2 0000     		.align	2
 683              	.LC14:
 684 00a4 6E57414E 		.ascii	"nWANTED=%d,nRECEIVED=%d,nVALID=%d,nMEDIAN=%d.\000"
 684      5445443D 
 684      25642C6E 
 684      52454345 
 684      49564544 
 685              		.section	.text.level_sensor_test,"ax",%progbits
 686              		.align	2
 687              		.global	level_sensor_test
 688              		.thumb
 689              		.thumb_func
 690              		.type	level_sensor_test, %function
 691              	level_sensor_test:
 692              	.LFB71:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 17


 190:level_sensor.c **** 
 191:level_sensor.c **** // Level sensor test
 192:level_sensor.c **** test_t level_sensor_test(){
 693              		.loc 1 192 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 424
 696              		@ frame_needed = 1, uses_anonymous_args = 0
 697 0000 B0B5     		push	{r4, r5, r7, lr}
 698              		.cfi_def_cfa_offset 16
 699              		.cfi_offset 4, -16
 700              		.cfi_offset 5, -12
 701              		.cfi_offset 7, -8
 702              		.cfi_offset 14, -4
 703 0002 EEB0     		sub	sp, sp, #440
 704              		.cfi_def_cfa_offset 456
 705 0004 04AF     		add	r7, sp, #16
 706              		.cfi_def_cfa 7, 440
 707 0006 3B1D     		adds	r3, r7, #4
 708 0008 1860     		str	r0, [r3]
 193:level_sensor.c ****     
 194:level_sensor.c ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
 195:level_sensor.c ****     test.status = 0; // set test status to zero
 709              		.loc 1 195 0
 710 000a 07F12403 		add	r3, r7, #36
 711 000e 0022     		movs	r2, #0
 712 0010 83F88020 		strb	r2, [r3, #128]
 196:level_sensor.c ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_LEVEL_SENSOR");
 713              		.loc 1 196 0
 714 0014 07F12403 		add	r3, r7, #36
 715 0018 2A4A     		ldr	r2, .L44
 716 001a 1C46     		mov	r4, r3
 717 001c 1546     		mov	r5, r2
 718 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 719 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 720 0022 2B68     		ldr	r3, [r5]
 721 0024 2380     		strh	r3, [r4]	@ movhi
 197:level_sensor.c **** 
 198:level_sensor.c ****     // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data type t
 199:level_sensor.c ****     level_sensor_t sensor = level_sensor_take_reading();
 722              		.loc 1 199 0
 723 0026 07F10803 		add	r3, r7, #8
 724 002a 1846     		mov	r0, r3
 725 002c FFF7FEFF 		bl	level_sensor_take_reading
 200:level_sensor.c ****     
 201:level_sensor.c ****     // print the max number of readings (11), the number of actual readings, the number of valid re
 202:level_sensor.c ****     snprintf(test.reason,sizeof(test.reason),"nWANTED=%d,nRECEIVED=%d,nVALID=%d,nMEDIAN=%d.",
 203:level_sensor.c ****         N_READINGS,
 204:level_sensor.c ****         sensor.num_valid_readings+sensor.num_invalid_readings,
 726              		.loc 1 204 0
 727 0030 07F10803 		add	r3, r7, #8
 728 0034 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 202:level_sensor.c ****         N_READINGS,
 729              		.loc 1 202 0
 730 0036 1A46     		mov	r2, r3
 731              		.loc 1 204 0
 732 0038 07F10803 		add	r3, r7, #8
 733 003c 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 18


 202:level_sensor.c ****         N_READINGS,
 734              		.loc 1 202 0
 735 003e 1344     		add	r3, r3, r2
 205:level_sensor.c ****         sensor.num_valid_readings,
 736              		.loc 1 205 0
 737 0040 07F10802 		add	r2, r7, #8
 738 0044 127E     		ldrb	r2, [r2, #24]	@ zero_extendqisi2
 202:level_sensor.c ****         N_READINGS,
 739              		.loc 1 202 0
 740 0046 1146     		mov	r1, r2
 206:level_sensor.c ****         sensor.level_reading
 741              		.loc 1 206 0
 742 0048 07F10802 		add	r2, r7, #8
 743 004c B2F91620 		ldrsh	r2, [r2, #22]
 202:level_sensor.c ****         N_READINGS,
 744              		.loc 1 202 0
 745 0050 1446     		mov	r4, r2
 746 0052 07F12402 		add	r2, r7, #36
 747 0056 02F18100 		add	r0, r2, #129
 748 005a 0294     		str	r4, [sp, #8]
 749 005c 0191     		str	r1, [sp, #4]
 750 005e 0093     		str	r3, [sp]
 751 0060 0B23     		movs	r3, #11
 752 0062 194A     		ldr	r2, .L44+4
 753 0064 4FF48071 		mov	r1, #256
 754 0068 FFF7FEFF 		bl	snprintf
 207:level_sensor.c ****     );
 208:level_sensor.c ****    
 209:level_sensor.c ****     // if the number valid readings is the max number of readings (11), then the test passes with t
 210:level_sensor.c ****     if(sensor.num_valid_readings == N_READINGS){//pass
 755              		.loc 1 210 0
 756 006c 07F10803 		add	r3, r7, #8
 757 0070 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 758 0072 0B2B     		cmp	r3, #11
 759 0074 05D1     		bne	.L41
 211:level_sensor.c ****         test.status = 1;
 760              		.loc 1 211 0
 761 0076 07F12403 		add	r3, r7, #36
 762 007a 0122     		movs	r2, #1
 763 007c 83F88020 		strb	r2, [r3, #128]
 764 0080 0EE0     		b	.L42
 765              	.L41:
 212:level_sensor.c ****     // if the number of valid readings is greater than zero and less than the max number of reading
 213:level_sensor.c ****     }else if((sensor.num_valid_readings > 0) && (sensor.num_valid_readings < N_READINGS)){//pass
 766              		.loc 1 213 0
 767 0082 07F10803 		add	r3, r7, #8
 768 0086 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 769 0088 002B     		cmp	r3, #0
 770 008a 09D0     		beq	.L42
 771              		.loc 1 213 0 is_stmt 0 discriminator 1
 772 008c 07F10803 		add	r3, r7, #8
 773 0090 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 774 0092 0A2B     		cmp	r3, #10
 775 0094 04D8     		bhi	.L42
 214:level_sensor.c ****         test.status = 2; //not bad, since we got some OK readings
 776              		.loc 1 214 0 is_stmt 1
 777 0096 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 19


 778 009a 0222     		movs	r2, #2
 779 009c 83F88020 		strb	r2, [r3, #128]
 780              	.L42:
 215:level_sensor.c ****     }
 216:level_sensor.c ****         
 217:level_sensor.c ****     return test;
 781              		.loc 1 217 0
 782 00a0 3B1D     		adds	r3, r7, #4
 783 00a2 1A68     		ldr	r2, [r3]
 784 00a4 07F12403 		add	r3, r7, #36
 785 00a8 1046     		mov	r0, r2
 786 00aa 1946     		mov	r1, r3
 787 00ac 40F28113 		movw	r3, #385
 788 00b0 1A46     		mov	r2, r3
 789 00b2 FFF7FEFF 		bl	memcpy
 218:level_sensor.c **** }
 790              		.loc 1 218 0
 791 00b6 3B1D     		adds	r3, r7, #4
 792 00b8 1868     		ldr	r0, [r3]
 793 00ba 07F5D477 		add	r7, r7, #424
 794              		.cfi_def_cfa_offset 16
 795 00be BD46     		mov	sp, r7
 796              		.cfi_def_cfa_register 13
 797              		@ sp needed
 798 00c0 B0BD     		pop	{r4, r5, r7, pc}
 799              	.L45:
 800 00c2 00BF     		.align	2
 801              	.L44:
 802 00c4 90000000 		.word	.LC13
 803 00c8 A4000000 		.word	.LC14
 804              		.cfi_endproc
 805              	.LFE71:
 806              		.size	level_sensor_test, .-level_sensor_test
 807              		.global	__aeabi_i2d
 808              		.global	__aeabi_ddiv
 809              		.global	__aeabi_d2iz
 810              		.section	.text.find_median,"ax",%progbits
 811              		.align	2
 812              		.global	find_median
 813              		.thumb
 814              		.thumb_func
 815              		.type	find_median, %function
 816              	find_median:
 817              	.LFB72:
 219:level_sensor.c **** 
 220:level_sensor.c **** 
 221:level_sensor.c **** // function to calculate the median of the array, after array is sorted
 222:level_sensor.c **** uint16 find_median(int16 array[] , uint8 n)
 223:level_sensor.c **** {
 818              		.loc 1 223 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 16
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822 0000 90B5     		push	{r4, r7, lr}
 823              		.cfi_def_cfa_offset 12
 824              		.cfi_offset 4, -12
 825              		.cfi_offset 7, -8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 20


 826              		.cfi_offset 14, -4
 827 0002 85B0     		sub	sp, sp, #20
 828              		.cfi_def_cfa_offset 32
 829 0004 00AF     		add	r7, sp, #0
 830              		.cfi_def_cfa_register 7
 831 0006 7860     		str	r0, [r7, #4]
 832 0008 0B46     		mov	r3, r1
 833 000a FB70     		strb	r3, [r7, #3]
 224:level_sensor.c ****     int16 median=0;
 834              		.loc 1 224 0
 835 000c 0023     		movs	r3, #0
 836 000e FB81     		strh	r3, [r7, #14]	@ movhi
 225:level_sensor.c ****     sort(array,n);
 837              		.loc 1 225 0
 838 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 839 0012 1BB2     		sxth	r3, r3
 840 0014 1946     		mov	r1, r3
 841 0016 7868     		ldr	r0, [r7, #4]
 842 0018 FFF7FEFF 		bl	sort
 226:level_sensor.c ****     
 227:level_sensor.c ****     // if number of elements are even
 228:level_sensor.c ****     if(n%2 == 0)
 843              		.loc 1 228 0
 844 001c FB78     		ldrb	r3, [r7, #3]
 845 001e 03F00103 		and	r3, r3, #1
 846 0022 DBB2     		uxtb	r3, r3
 847 0024 002B     		cmp	r3, #0
 848 0026 25D1     		bne	.L47
 229:level_sensor.c ****         // median is the average of the  two middle sorted numbers
 230:level_sensor.c ****         median = (array[(n-1)/2] + array[n/2])/2.0;
 849              		.loc 1 230 0
 850 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 851 002a 013B     		subs	r3, r3, #1
 852 002c DA0F     		lsrs	r2, r3, #31
 853 002e 1344     		add	r3, r3, r2
 854 0030 5B10     		asrs	r3, r3, #1
 855 0032 5B00     		lsls	r3, r3, #1
 856 0034 7A68     		ldr	r2, [r7, #4]
 857 0036 1344     		add	r3, r3, r2
 858 0038 B3F90030 		ldrsh	r3, [r3]
 859 003c 1946     		mov	r1, r3
 860 003e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 861 0040 5B08     		lsrs	r3, r3, #1
 862 0042 DBB2     		uxtb	r3, r3
 863 0044 5B00     		lsls	r3, r3, #1
 864 0046 7A68     		ldr	r2, [r7, #4]
 865 0048 1344     		add	r3, r3, r2
 866 004a B3F90030 		ldrsh	r3, [r3]
 867 004e 0B44     		add	r3, r3, r1
 868 0050 1846     		mov	r0, r3
 869 0052 FFF7FEFF 		bl	__aeabi_i2d
 870 0056 4FF00002 		mov	r2, #0
 871 005a 4FF08043 		mov	r3, #1073741824
 872 005e FFF7FEFF 		bl	__aeabi_ddiv
 873 0062 0346     		mov	r3, r0
 874 0064 0C46     		mov	r4, r1
 875 0066 1846     		mov	r0, r3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 21


 876 0068 2146     		mov	r1, r4
 877 006a FFF7FEFF 		bl	__aeabi_d2iz
 878 006e 0346     		mov	r3, r0
 879 0070 FB81     		strh	r3, [r7, #14]	@ movhi
 880 0072 07E0     		b	.L48
 881              	.L47:
 231:level_sensor.c ****     // if number of elements are odd
 232:level_sensor.c ****     else
 233:level_sensor.c ****         // median is the the middle sorted number 
 234:level_sensor.c ****         median = array[n/2];
 882              		.loc 1 234 0
 883 0074 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 884 0076 5B08     		lsrs	r3, r3, #1
 885 0078 DBB2     		uxtb	r3, r3
 886 007a 5B00     		lsls	r3, r3, #1
 887 007c 7A68     		ldr	r2, [r7, #4]
 888 007e 1344     		add	r3, r3, r2
 889 0080 1B88     		ldrh	r3, [r3]	@ movhi
 890 0082 FB81     		strh	r3, [r7, #14]	@ movhi
 891              	.L48:
 235:level_sensor.c ****     
 236:level_sensor.c ****     return median;
 892              		.loc 1 236 0
 893 0084 FB89     		ldrh	r3, [r7, #14]
 237:level_sensor.c **** }
 894              		.loc 1 237 0
 895 0086 1846     		mov	r0, r3
 896 0088 1437     		adds	r7, r7, #20
 897              		.cfi_def_cfa_offset 12
 898 008a BD46     		mov	sp, r7
 899              		.cfi_def_cfa_register 13
 900              		@ sp needed
 901 008c 90BD     		pop	{r4, r7, pc}
 902              		.cfi_endproc
 903              	.LFE72:
 904              		.size	find_median, .-find_median
 905              		.section	.text.sort,"ax",%progbits
 906              		.align	2
 907              		.global	sort
 908              		.thumb
 909              		.thumb_func
 910              		.type	sort, %function
 911              	sort:
 912              	.LFB73:
 238:level_sensor.c **** 
 239:level_sensor.c **** // function to sort the elements in the level readings array
 240:level_sensor.c **** void sort(int16 a[],int16 n) { 
 913              		.loc 1 240 0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 16
 916              		@ frame_needed = 1, uses_anonymous_args = 0
 917 0000 80B5     		push	{r7, lr}
 918              		.cfi_def_cfa_offset 8
 919              		.cfi_offset 7, -8
 920              		.cfi_offset 14, -4
 921 0002 84B0     		sub	sp, sp, #16
 922              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 22


 923 0004 00AF     		add	r7, sp, #0
 924              		.cfi_def_cfa_register 7
 925 0006 7860     		str	r0, [r7, #4]
 926 0008 0B46     		mov	r3, r1
 927 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 241:level_sensor.c ****    int16 i,j;
 242:level_sensor.c **** 
 243:level_sensor.c ****    for(i = 0;i < n-1;i++) {
 928              		.loc 1 243 0
 929 000c 0023     		movs	r3, #0
 930 000e FB81     		strh	r3, [r7, #14]	@ movhi
 931 0010 37E0     		b	.L51
 932              	.L55:
 244:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
 933              		.loc 1 244 0
 934 0012 0023     		movs	r3, #0
 935 0014 BB81     		strh	r3, [r7, #12]	@ movhi
 936 0016 24E0     		b	.L52
 937              	.L54:
 245:level_sensor.c ****          if(a[j] > a[j+1])
 938              		.loc 1 245 0
 939 0018 B7F90C30 		ldrsh	r3, [r7, #12]
 940 001c 5B00     		lsls	r3, r3, #1
 941 001e 7A68     		ldr	r2, [r7, #4]
 942 0020 1344     		add	r3, r3, r2
 943 0022 B3F90020 		ldrsh	r2, [r3]
 944 0026 B7F90C30 		ldrsh	r3, [r7, #12]
 945 002a 0133     		adds	r3, r3, #1
 946 002c 5B00     		lsls	r3, r3, #1
 947 002e 7968     		ldr	r1, [r7, #4]
 948 0030 0B44     		add	r3, r3, r1
 949 0032 B3F90030 		ldrsh	r3, [r3]
 950 0036 9A42     		cmp	r2, r3
 951 0038 0DDD     		ble	.L53
 246:level_sensor.c ****             swap(&a[j],&a[j+1]); // swap the address of a[j] and a[j+1]
 952              		.loc 1 246 0
 953 003a B7F90C30 		ldrsh	r3, [r7, #12]
 954 003e 5B00     		lsls	r3, r3, #1
 955 0040 7A68     		ldr	r2, [r7, #4]
 956 0042 D018     		adds	r0, r2, r3
 957 0044 B7F90C30 		ldrsh	r3, [r7, #12]
 958 0048 0133     		adds	r3, r3, #1
 959 004a 5B00     		lsls	r3, r3, #1
 960 004c 7A68     		ldr	r2, [r7, #4]
 961 004e 1344     		add	r3, r3, r2
 962 0050 1946     		mov	r1, r3
 963 0052 FFF7FEFF 		bl	swap
 964              	.L53:
 244:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
 965              		.loc 1 244 0 discriminator 2
 966 0056 B7F90C30 		ldrsh	r3, [r7, #12]
 967 005a 9BB2     		uxth	r3, r3
 968 005c 0133     		adds	r3, r3, #1
 969 005e 9BB2     		uxth	r3, r3
 970 0060 BB81     		strh	r3, [r7, #12]	@ movhi
 971              	.L52:
 244:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 23


 972              		.loc 1 244 0 is_stmt 0 discriminator 1
 973 0062 B7F90C20 		ldrsh	r2, [r7, #12]
 974 0066 B7F90210 		ldrsh	r1, [r7, #2]
 975 006a B7F90E30 		ldrsh	r3, [r7, #14]
 976 006e CB1A     		subs	r3, r1, r3
 977 0070 013B     		subs	r3, r3, #1
 978 0072 9A42     		cmp	r2, r3
 979 0074 D0DB     		blt	.L54
 243:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
 980              		.loc 1 243 0 is_stmt 1 discriminator 2
 981 0076 B7F90E30 		ldrsh	r3, [r7, #14]
 982 007a 9BB2     		uxth	r3, r3
 983 007c 0133     		adds	r3, r3, #1
 984 007e 9BB2     		uxth	r3, r3
 985 0080 FB81     		strh	r3, [r7, #14]	@ movhi
 986              	.L51:
 243:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
 987              		.loc 1 243 0 is_stmt 0 discriminator 1
 988 0082 B7F90E20 		ldrsh	r2, [r7, #14]
 989 0086 B7F90230 		ldrsh	r3, [r7, #2]
 990 008a 013B     		subs	r3, r3, #1
 991 008c 9A42     		cmp	r2, r3
 992 008e C0DB     		blt	.L55
 247:level_sensor.c ****       }
 248:level_sensor.c ****    }
 249:level_sensor.c **** }
 993              		.loc 1 249 0 is_stmt 1
 994 0090 00BF     		nop
 995 0092 1037     		adds	r7, r7, #16
 996              		.cfi_def_cfa_offset 8
 997 0094 BD46     		mov	sp, r7
 998              		.cfi_def_cfa_register 13
 999              		@ sp needed
 1000 0096 80BD     		pop	{r7, pc}
 1001              		.cfi_endproc
 1002              	.LFE73:
 1003              		.size	sort, .-sort
 1004              		.section	.text.swap,"ax",%progbits
 1005              		.align	2
 1006              		.global	swap
 1007              		.thumb
 1008              		.thumb_func
 1009              		.type	swap, %function
 1010              	swap:
 1011              	.LFB74:
 250:level_sensor.c **** 
 251:level_sensor.c **** // function to swap elements in the level readings array in order to sort them
 252:level_sensor.c **** void swap(int16 *p,int16 *q) {
 1012              		.loc 1 252 0
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 16
 1015              		@ frame_needed = 1, uses_anonymous_args = 0
 1016              		@ link register save eliminated.
 1017 0000 80B4     		push	{r7}
 1018              		.cfi_def_cfa_offset 4
 1019              		.cfi_offset 7, -4
 1020 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 24


 1021              		.cfi_def_cfa_offset 24
 1022 0004 00AF     		add	r7, sp, #0
 1023              		.cfi_def_cfa_register 7
 1024 0006 7860     		str	r0, [r7, #4]
 1025 0008 3960     		str	r1, [r7]
 253:level_sensor.c ****    int16 t;
 254:level_sensor.c ****    
 255:level_sensor.c ****    t=*p; 
 1026              		.loc 1 255 0
 1027 000a 7B68     		ldr	r3, [r7, #4]
 1028 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1029 000e FB81     		strh	r3, [r7, #14]	@ movhi
 256:level_sensor.c ****    *p=*q; 
 1030              		.loc 1 256 0
 1031 0010 3B68     		ldr	r3, [r7]
 1032 0012 B3F90020 		ldrsh	r2, [r3]
 1033 0016 7B68     		ldr	r3, [r7, #4]
 1034 0018 1A80     		strh	r2, [r3]	@ movhi
 257:level_sensor.c ****    *q=t;
 1035              		.loc 1 257 0
 1036 001a 3B68     		ldr	r3, [r7]
 1037 001c FA89     		ldrh	r2, [r7, #14]	@ movhi
 1038 001e 1A80     		strh	r2, [r3]	@ movhi
 258:level_sensor.c **** }
 1039              		.loc 1 258 0
 1040 0020 00BF     		nop
 1041 0022 1437     		adds	r7, r7, #20
 1042              		.cfi_def_cfa_offset 4
 1043 0024 BD46     		mov	sp, r7
 1044              		.cfi_def_cfa_register 13
 1045              		@ sp needed
 1046 0026 80BC     		pop	{r7}
 1047              		.cfi_restore 7
 1048              		.cfi_def_cfa_offset 0
 1049 0028 7047     		bx	lr
 1050              		.cfi_endproc
 1051              	.LFE74:
 1052              		.size	swap, .-swap
 1053 002a 00BF     		.text
 1054              	.Letext0:
 1055              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1056              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1057              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1058              		.file 5 "testing.h"
 1059              		.file 6 "level_sensor.h"
 1060              		.file 7 "data.h"
 1061              		.file 8 "modem.h"
 1062              		.file 9 "notoriOS.h"
 1063              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 1064              		.file 11 "downstream_level_sensor.h"
 1065              		.file 12 "valve.h"
 1066              		.file 13 "App_LED.h"
 1067              		.section	.debug_info,"",%progbits
 1068              	.Ldebug_info0:
 1069 0000 79090000 		.4byte	0x979
 1070 0004 0400     		.2byte	0x4
 1071 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 25


 1072 000a 04       		.byte	0x4
 1073 000b 01       		.uleb128 0x1
 1074 000c 92000000 		.4byte	.LASF132
 1075 0010 0C       		.byte	0xc
 1076 0011 6D010000 		.4byte	.LASF133
 1077 0015 28000000 		.4byte	.LASF134
 1078 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1079 001d 00000000 		.4byte	0
 1080 0021 00000000 		.4byte	.Ldebug_line0
 1081 0025 02       		.uleb128 0x2
 1082 0026 01       		.byte	0x1
 1083 0027 06       		.byte	0x6
 1084 0028 AF010000 		.4byte	.LASF0
 1085 002c 03       		.uleb128 0x3
 1086 002d 70000000 		.4byte	.LASF4
 1087 0031 02       		.byte	0x2
 1088 0032 1D       		.byte	0x1d
 1089 0033 37000000 		.4byte	0x37
 1090 0037 02       		.uleb128 0x2
 1091 0038 01       		.byte	0x1
 1092 0039 08       		.byte	0x8
 1093 003a 1D050000 		.4byte	.LASF1
 1094 003e 02       		.uleb128 0x2
 1095 003f 02       		.byte	0x2
 1096 0040 05       		.byte	0x5
 1097 0041 A1030000 		.4byte	.LASF2
 1098 0045 02       		.uleb128 0x2
 1099 0046 02       		.byte	0x2
 1100 0047 07       		.byte	0x7
 1101 0048 3E060000 		.4byte	.LASF3
 1102 004c 03       		.uleb128 0x3
 1103 004d 0A060000 		.4byte	.LASF5
 1104 0051 02       		.byte	0x2
 1105 0052 3F       		.byte	0x3f
 1106 0053 57000000 		.4byte	0x57
 1107 0057 02       		.uleb128 0x2
 1108 0058 04       		.byte	0x4
 1109 0059 05       		.byte	0x5
 1110 005a 54020000 		.4byte	.LASF6
 1111 005e 02       		.uleb128 0x2
 1112 005f 04       		.byte	0x4
 1113 0060 07       		.byte	0x7
 1114 0061 3D030000 		.4byte	.LASF7
 1115 0065 02       		.uleb128 0x2
 1116 0066 08       		.byte	0x8
 1117 0067 05       		.byte	0x5
 1118 0068 A1010000 		.4byte	.LASF8
 1119 006c 02       		.uleb128 0x2
 1120 006d 08       		.byte	0x8
 1121 006e 07       		.byte	0x7
 1122 006f 2B010000 		.4byte	.LASF9
 1123 0073 04       		.uleb128 0x4
 1124 0074 04       		.byte	0x4
 1125 0075 05       		.byte	0x5
 1126 0076 696E7400 		.ascii	"int\000"
 1127 007a 02       		.uleb128 0x2
 1128 007b 04       		.byte	0x4
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 26


 1129 007c 07       		.byte	0x7
 1130 007d E7050000 		.4byte	.LASF10
 1131 0081 03       		.uleb128 0x3
 1132 0082 0E070000 		.4byte	.LASF11
 1133 0086 03       		.byte	0x3
 1134 0087 18       		.byte	0x18
 1135 0088 2C000000 		.4byte	0x2c
 1136 008c 03       		.uleb128 0x3
 1137 008d 15050000 		.4byte	.LASF12
 1138 0091 03       		.byte	0x3
 1139 0092 2C       		.byte	0x2c
 1140 0093 4C000000 		.4byte	0x4c
 1141 0097 02       		.uleb128 0x2
 1142 0098 08       		.byte	0x8
 1143 0099 04       		.byte	0x4
 1144 009a CA050000 		.4byte	.LASF13
 1145 009e 02       		.uleb128 0x2
 1146 009f 04       		.byte	0x4
 1147 00a0 07       		.byte	0x7
 1148 00a1 50040000 		.4byte	.LASF14
 1149 00a5 05       		.uleb128 0x5
 1150 00a6 04       		.byte	0x4
 1151 00a7 AB000000 		.4byte	0xab
 1152 00ab 02       		.uleb128 0x2
 1153 00ac 01       		.byte	0x1
 1154 00ad 08       		.byte	0x8
 1155 00ae E2050000 		.4byte	.LASF15
 1156 00b2 05       		.uleb128 0x5
 1157 00b3 04       		.byte	0x4
 1158 00b4 B8000000 		.4byte	0xb8
 1159 00b8 06       		.uleb128 0x6
 1160 00b9 AB000000 		.4byte	0xab
 1161 00bd 07       		.uleb128 0x7
 1162 00be AB000000 		.4byte	0xab
 1163 00c2 CD000000 		.4byte	0xcd
 1164 00c6 08       		.uleb128 0x8
 1165 00c7 9E000000 		.4byte	0x9e
 1166 00cb 17       		.byte	0x17
 1167 00cc 00       		.byte	0
 1168 00cd 02       		.uleb128 0x2
 1169 00ce 08       		.byte	0x8
 1170 00cf 04       		.byte	0x4
 1171 00d0 53070000 		.4byte	.LASF16
 1172 00d4 02       		.uleb128 0x2
 1173 00d5 04       		.byte	0x4
 1174 00d6 04       		.byte	0x4
 1175 00d7 E2040000 		.4byte	.LASF17
 1176 00db 09       		.uleb128 0x9
 1177 00dc 79020000 		.4byte	.LASF18
 1178 00e0 04       		.byte	0x4
 1179 00e1 9201     		.2byte	0x192
 1180 00e3 37000000 		.4byte	0x37
 1181 00e7 09       		.uleb128 0x9
 1182 00e8 0C000000 		.4byte	.LASF19
 1183 00ec 04       		.byte	0x4
 1184 00ed 9301     		.2byte	0x193
 1185 00ef 45000000 		.4byte	0x45
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 27


 1186 00f3 09       		.uleb128 0x9
 1187 00f4 16070000 		.4byte	.LASF20
 1188 00f8 04       		.byte	0x4
 1189 00f9 9601     		.2byte	0x196
 1190 00fb 3E000000 		.4byte	0x3e
 1191 00ff 09       		.uleb128 0x9
 1192 0100 A0020000 		.4byte	.LASF21
 1193 0104 04       		.byte	0x4
 1194 0105 9701     		.2byte	0x197
 1195 0107 57000000 		.4byte	0x57
 1196 010b 09       		.uleb128 0x9
 1197 010c 37040000 		.4byte	.LASF22
 1198 0110 04       		.byte	0x4
 1199 0111 9801     		.2byte	0x198
 1200 0113 D4000000 		.4byte	0xd4
 1201 0117 0A       		.uleb128 0xa
 1202 0118 8101     		.2byte	0x181
 1203 011a 05       		.byte	0x5
 1204 011b 0A       		.byte	0xa
 1205 011c 45010000 		.4byte	0x145
 1206 0120 0B       		.uleb128 0xb
 1207 0121 75040000 		.4byte	.LASF23
 1208 0125 05       		.byte	0x5
 1209 0126 0C       		.byte	0xc
 1210 0127 45010000 		.4byte	0x145
 1211 012b 00       		.byte	0
 1212 012c 0B       		.uleb128 0xb
 1213 012d A3060000 		.4byte	.LASF24
 1214 0131 05       		.byte	0x5
 1215 0132 0D       		.byte	0xd
 1216 0133 DB000000 		.4byte	0xdb
 1217 0137 80       		.byte	0x80
 1218 0138 0B       		.uleb128 0xb
 1219 0139 77050000 		.4byte	.LASF25
 1220 013d 05       		.byte	0x5
 1221 013e 0F       		.byte	0xf
 1222 013f 55010000 		.4byte	0x155
 1223 0143 81       		.byte	0x81
 1224 0144 00       		.byte	0
 1225 0145 07       		.uleb128 0x7
 1226 0146 AB000000 		.4byte	0xab
 1227 014a 55010000 		.4byte	0x155
 1228 014e 08       		.uleb128 0x8
 1229 014f 9E000000 		.4byte	0x9e
 1230 0153 7F       		.byte	0x7f
 1231 0154 00       		.byte	0
 1232 0155 07       		.uleb128 0x7
 1233 0156 AB000000 		.4byte	0xab
 1234 015a 65010000 		.4byte	0x165
 1235 015e 08       		.uleb128 0x8
 1236 015f 9E000000 		.4byte	0x9e
 1237 0163 FF       		.byte	0xff
 1238 0164 00       		.byte	0
 1239 0165 03       		.uleb128 0x3
 1240 0166 3B050000 		.4byte	.LASF26
 1241 016a 05       		.byte	0x5
 1242 016b 10       		.byte	0x10
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 28


 1243 016c 17010000 		.4byte	0x117
 1244 0170 0C       		.uleb128 0xc
 1245 0171 1A       		.byte	0x1a
 1246 0172 06       		.byte	0x6
 1247 0173 10       		.byte	0x10
 1248 0174 A9010000 		.4byte	0x1a9
 1249 0178 0B       		.uleb128 0xb
 1250 0179 D5020000 		.4byte	.LASF27
 1251 017d 06       		.byte	0x6
 1252 017e 11       		.byte	0x11
 1253 017f A9010000 		.4byte	0x1a9
 1254 0183 00       		.byte	0
 1255 0184 0B       		.uleb128 0xb
 1256 0185 30060000 		.4byte	.LASF28
 1257 0189 06       		.byte	0x6
 1258 018a 12       		.byte	0x12
 1259 018b F3000000 		.4byte	0xf3
 1260 018f 16       		.byte	0x16
 1261 0190 0B       		.uleb128 0xb
 1262 0191 2A030000 		.4byte	.LASF29
 1263 0195 06       		.byte	0x6
 1264 0196 13       		.byte	0x13
 1265 0197 DB000000 		.4byte	0xdb
 1266 019b 18       		.byte	0x18
 1267 019c 0B       		.uleb128 0xb
 1268 019d 13000000 		.4byte	.LASF30
 1269 01a1 06       		.byte	0x6
 1270 01a2 14       		.byte	0x14
 1271 01a3 DB000000 		.4byte	0xdb
 1272 01a7 19       		.byte	0x19
 1273 01a8 00       		.byte	0
 1274 01a9 07       		.uleb128 0x7
 1275 01aa F3000000 		.4byte	0xf3
 1276 01ae B9010000 		.4byte	0x1b9
 1277 01b2 08       		.uleb128 0x8
 1278 01b3 9E000000 		.4byte	0x9e
 1279 01b7 0A       		.byte	0xa
 1280 01b8 00       		.byte	0
 1281 01b9 03       		.uleb128 0x3
 1282 01ba FA040000 		.4byte	.LASF31
 1283 01be 06       		.byte	0x6
 1284 01bf 15       		.byte	0x15
 1285 01c0 70010000 		.4byte	0x170
 1286 01c4 0C       		.uleb128 0xc
 1287 01c5 2C       		.byte	0x2c
 1288 01c6 07       		.byte	0x7
 1289 01c7 14       		.byte	0x14
 1290 01c8 F1010000 		.4byte	0x1f1
 1291 01cc 0D       		.uleb128 0xd
 1292 01cd 6B657900 		.ascii	"key\000"
 1293 01d1 07       		.byte	0x7
 1294 01d2 15       		.byte	0x15
 1295 01d3 F1010000 		.4byte	0x1f1
 1296 01d7 00       		.byte	0
 1297 01d8 0B       		.uleb128 0xb
 1298 01d9 FE020000 		.4byte	.LASF32
 1299 01dd 07       		.byte	0x7
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 29


 1300 01de 16       		.byte	0x16
 1301 01df F1010000 		.4byte	0x1f1
 1302 01e3 14       		.byte	0x14
 1303 01e4 0B       		.uleb128 0xb
 1304 01e5 96040000 		.4byte	.LASF33
 1305 01e9 07       		.byte	0x7
 1306 01ea 17       		.byte	0x17
 1307 01eb FF000000 		.4byte	0xff
 1308 01ef 28       		.byte	0x28
 1309 01f0 00       		.byte	0
 1310 01f1 07       		.uleb128 0x7
 1311 01f2 AB000000 		.4byte	0xab
 1312 01f6 01020000 		.4byte	0x201
 1313 01fa 08       		.uleb128 0x8
 1314 01fb 9E000000 		.4byte	0x9e
 1315 01ff 13       		.byte	0x13
 1316 0200 00       		.byte	0
 1317 0201 03       		.uleb128 0x3
 1318 0202 1E030000 		.4byte	.LASF34
 1319 0206 07       		.byte	0x7
 1320 0207 19       		.byte	0x19
 1321 0208 C4010000 		.4byte	0x1c4
 1322 020c 0C       		.uleb128 0xc
 1323 020d 3C       		.byte	0x3c
 1324 020e 08       		.byte	0x8
 1325 020f 36       		.byte	0x36
 1326 0210 39020000 		.4byte	0x239
 1327 0214 0B       		.uleb128 0xb
 1328 0215 51060000 		.4byte	.LASF35
 1329 0219 08       		.byte	0x8
 1330 021a 37       		.byte	0x37
 1331 021b F1010000 		.4byte	0x1f1
 1332 021f 00       		.byte	0
 1333 0220 0B       		.uleb128 0xb
 1334 0221 CC020000 		.4byte	.LASF36
 1335 0225 08       		.byte	0x8
 1336 0226 38       		.byte	0x38
 1337 0227 F1010000 		.4byte	0x1f1
 1338 022b 14       		.byte	0x14
 1339 022c 0B       		.uleb128 0xb
 1340 022d 72050000 		.4byte	.LASF37
 1341 0231 08       		.byte	0x8
 1342 0232 39       		.byte	0x39
 1343 0233 F1010000 		.4byte	0x1f1
 1344 0237 28       		.byte	0x28
 1345 0238 00       		.byte	0
 1346 0239 03       		.uleb128 0x3
 1347 023a 26020000 		.4byte	.LASF38
 1348 023e 08       		.byte	0x8
 1349 023f 3B       		.byte	0x3b
 1350 0240 0C020000 		.4byte	0x20c
 1351 0244 0C       		.uleb128 0xc
 1352 0245 20       		.byte	0x20
 1353 0246 08       		.byte	0x8
 1354 0247 3D       		.byte	0x3d
 1355 0248 AD020000 		.4byte	0x2ad
 1356 024c 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 30


 1357 024d 4E020000 		.4byte	.LASF39
 1358 0251 08       		.byte	0x8
 1359 0252 3E       		.byte	0x3e
 1360 0253 73000000 		.4byte	0x73
 1361 0257 00       		.byte	0
 1362 0258 0D       		.uleb128 0xd
 1363 0259 62657200 		.ascii	"ber\000"
 1364 025d 08       		.byte	0x8
 1365 025e 3F       		.byte	0x3f
 1366 025f 73000000 		.4byte	0x73
 1367 0263 04       		.byte	0x4
 1368 0264 0B       		.uleb128 0xb
 1369 0265 61050000 		.4byte	.LASF40
 1370 0269 08       		.byte	0x8
 1371 026a 40       		.byte	0x40
 1372 026b 73000000 		.4byte	0x73
 1373 026f 08       		.byte	0x8
 1374 0270 0B       		.uleb128 0xb
 1375 0271 BB010000 		.4byte	.LASF41
 1376 0275 08       		.byte	0x8
 1377 0276 41       		.byte	0x41
 1378 0277 73000000 		.4byte	0x73
 1379 027b 0C       		.byte	0xc
 1380 027c 0B       		.uleb128 0xb
 1381 027d 47050000 		.4byte	.LASF42
 1382 0281 08       		.byte	0x8
 1383 0282 42       		.byte	0x42
 1384 0283 73000000 		.4byte	0x73
 1385 0287 10       		.byte	0x10
 1386 0288 0B       		.uleb128 0xb
 1387 0289 42050000 		.4byte	.LASF43
 1388 028d 08       		.byte	0x8
 1389 028e 43       		.byte	0x43
 1390 028f 73000000 		.4byte	0x73
 1391 0293 14       		.byte	0x14
 1392 0294 0B       		.uleb128 0xb
 1393 0295 DD010000 		.4byte	.LASF44
 1394 0299 08       		.byte	0x8
 1395 029a 44       		.byte	0x44
 1396 029b 73000000 		.4byte	0x73
 1397 029f 18       		.byte	0x18
 1398 02a0 0B       		.uleb128 0xb
 1399 02a1 8E030000 		.4byte	.LASF45
 1400 02a5 08       		.byte	0x8
 1401 02a6 45       		.byte	0x45
 1402 02a7 73000000 		.4byte	0x73
 1403 02ab 1C       		.byte	0x1c
 1404 02ac 00       		.byte	0
 1405 02ad 03       		.uleb128 0x3
 1406 02ae 86050000 		.4byte	.LASF46
 1407 02b2 08       		.byte	0x8
 1408 02b3 47       		.byte	0x47
 1409 02b4 44020000 		.4byte	0x244
 1410 02b8 0C       		.uleb128 0xc
 1411 02b9 09       		.byte	0x9
 1412 02ba 08       		.byte	0x8
 1413 02bb 53       		.byte	0x53
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 31


 1414 02bc 2D030000 		.4byte	0x32d
 1415 02c0 0B       		.uleb128 0xb
 1416 02c1 A6020000 		.4byte	.LASF47
 1417 02c5 08       		.byte	0x8
 1418 02c6 55       		.byte	0x55
 1419 02c7 DB000000 		.4byte	0xdb
 1420 02cb 00       		.byte	0
 1421 02cc 0B       		.uleb128 0xb
 1422 02cd 2A070000 		.4byte	.LASF48
 1423 02d1 08       		.byte	0x8
 1424 02d2 57       		.byte	0x57
 1425 02d3 2D030000 		.4byte	0x32d
 1426 02d7 01       		.byte	0x1
 1427 02d8 0B       		.uleb128 0xb
 1428 02d9 14060000 		.4byte	.LASF49
 1429 02dd 08       		.byte	0x8
 1430 02de 59       		.byte	0x59
 1431 02df DB000000 		.4byte	0xdb
 1432 02e3 02       		.byte	0x2
 1433 02e4 0B       		.uleb128 0xb
 1434 02e5 4C050000 		.4byte	.LASF50
 1435 02e9 08       		.byte	0x8
 1436 02ea 5B       		.byte	0x5b
 1437 02eb DB000000 		.4byte	0xdb
 1438 02ef 03       		.byte	0x3
 1439 02f0 0B       		.uleb128 0xb
 1440 02f1 F2020000 		.4byte	.LASF51
 1441 02f5 08       		.byte	0x8
 1442 02f6 5E       		.byte	0x5e
 1443 02f7 DB000000 		.4byte	0xdb
 1444 02fb 04       		.byte	0x4
 1445 02fc 0B       		.uleb128 0xb
 1446 02fd D8060000 		.4byte	.LASF52
 1447 0301 08       		.byte	0x8
 1448 0302 63       		.byte	0x63
 1449 0303 DB000000 		.4byte	0xdb
 1450 0307 05       		.byte	0x5
 1451 0308 0B       		.uleb128 0xb
 1452 0309 A5050000 		.4byte	.LASF53
 1453 030d 08       		.byte	0x8
 1454 030e 65       		.byte	0x65
 1455 030f DB000000 		.4byte	0xdb
 1456 0313 06       		.byte	0x6
 1457 0314 0B       		.uleb128 0xb
 1458 0315 6C060000 		.4byte	.LASF54
 1459 0319 08       		.byte	0x8
 1460 031a 66       		.byte	0x66
 1461 031b DB000000 		.4byte	0xdb
 1462 031f 07       		.byte	0x7
 1463 0320 0B       		.uleb128 0xb
 1464 0321 33070000 		.4byte	.LASF55
 1465 0325 08       		.byte	0x8
 1466 0326 67       		.byte	0x67
 1467 0327 DB000000 		.4byte	0xdb
 1468 032b 08       		.byte	0x8
 1469 032c 00       		.byte	0
 1470 032d 02       		.uleb128 0x2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 32


 1471 032e 01       		.byte	0x1
 1472 032f 02       		.byte	0x2
 1473 0330 0F050000 		.4byte	.LASF56
 1474 0334 03       		.uleb128 0x3
 1475 0335 F9030000 		.4byte	.LASF57
 1476 0339 08       		.byte	0x8
 1477 033a 69       		.byte	0x69
 1478 033b B8020000 		.4byte	0x2b8
 1479 033f 0C       		.uleb128 0xc
 1480 0340 06       		.byte	0x6
 1481 0341 09       		.byte	0x9
 1482 0342 30       		.byte	0x30
 1483 0343 78030000 		.4byte	0x378
 1484 0347 0B       		.uleb128 0xb
 1485 0348 C0010000 		.4byte	.LASF58
 1486 034c 09       		.byte	0x9
 1487 034d 32       		.byte	0x32
 1488 034e E7000000 		.4byte	0xe7
 1489 0352 00       		.byte	0
 1490 0353 0B       		.uleb128 0xb
 1491 0354 5D020000 		.4byte	.LASF59
 1492 0358 09       		.byte	0x9
 1493 0359 33       		.byte	0x33
 1494 035a F3000000 		.4byte	0xf3
 1495 035e 02       		.byte	0x2
 1496 035f 0B       		.uleb128 0xb
 1497 0360 1C070000 		.4byte	.LASF60
 1498 0364 09       		.byte	0x9
 1499 0365 34       		.byte	0x34
 1500 0366 DB000000 		.4byte	0xdb
 1501 036a 04       		.byte	0x4
 1502 036b 0B       		.uleb128 0xb
 1503 036c 7A000000 		.4byte	.LASF61
 1504 0370 09       		.byte	0x9
 1505 0371 35       		.byte	0x35
 1506 0372 DB000000 		.4byte	0xdb
 1507 0376 05       		.byte	0x5
 1508 0377 00       		.byte	0
 1509 0378 03       		.uleb128 0x3
 1510 0379 73020000 		.4byte	.LASF62
 1511 037d 09       		.byte	0x9
 1512 037e 38       		.byte	0x38
 1513 037f 83030000 		.4byte	0x383
 1514 0383 0E       		.uleb128 0xe
 1515 0384 3F030000 		.4byte	0x33f
 1516 0388 0C       		.uleb128 0xc
 1517 0389 1C       		.byte	0x1c
 1518 038a 09       		.byte	0x9
 1519 038b 3B       		.byte	0x3b
 1520 038c A9030000 		.4byte	0x3a9
 1521 0390 0B       		.uleb128 0xb
 1522 0391 68030000 		.4byte	.LASF63
 1523 0395 09       		.byte	0x9
 1524 0396 3D       		.byte	0x3d
 1525 0397 A9030000 		.4byte	0x3a9
 1526 039b 00       		.byte	0
 1527 039c 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 33


 1528 039d BE020000 		.4byte	.LASF64
 1529 03a1 09       		.byte	0x9
 1530 03a2 3E       		.byte	0x3e
 1531 03a3 BD000000 		.4byte	0xbd
 1532 03a7 04       		.byte	0x4
 1533 03a8 00       		.byte	0
 1534 03a9 05       		.uleb128 0x5
 1535 03aa 04       		.byte	0x4
 1536 03ab 39020000 		.4byte	0x239
 1537 03af 03       		.uleb128 0x3
 1538 03b0 EE030000 		.4byte	.LASF65
 1539 03b4 09       		.byte	0x9
 1540 03b5 40       		.byte	0x40
 1541 03b6 88030000 		.4byte	0x388
 1542 03ba 0C       		.uleb128 0xc
 1543 03bb 68       		.byte	0x68
 1544 03bc 09       		.byte	0x9
 1545 03bd 46       		.byte	0x46
 1546 03be DB030000 		.4byte	0x3db
 1547 03c2 0B       		.uleb128 0xb
 1548 03c3 73030000 		.4byte	.LASF66
 1549 03c7 09       		.byte	0x9
 1550 03c8 4B       		.byte	0x4b
 1551 03c9 DB030000 		.4byte	0x3db
 1552 03cd 00       		.byte	0
 1553 03ce 0B       		.uleb128 0xb
 1554 03cf 60030000 		.4byte	.LASF67
 1555 03d3 09       		.byte	0x9
 1556 03d4 4C       		.byte	0x4c
 1557 03d5 73000000 		.4byte	0x73
 1558 03d9 64       		.byte	0x64
 1559 03da 00       		.byte	0
 1560 03db 07       		.uleb128 0x7
 1561 03dc AB000000 		.4byte	0xab
 1562 03e0 EB030000 		.4byte	0x3eb
 1563 03e4 08       		.uleb128 0x8
 1564 03e5 9E000000 		.4byte	0x9e
 1565 03e9 63       		.byte	0x63
 1566 03ea 00       		.byte	0
 1567 03eb 03       		.uleb128 0x3
 1568 03ec FF060000 		.4byte	.LASF68
 1569 03f0 09       		.byte	0x9
 1570 03f1 52       		.byte	0x52
 1571 03f2 BA030000 		.4byte	0x3ba
 1572 03f6 0F       		.uleb128 0xf
 1573 03f7 4F030000 		.4byte	.LASF69
 1574 03fb 01       		.byte	0x1
 1575 03fc 17       		.byte	0x17
 1576 03fd B2000000 		.4byte	0xb2
 1577 0401 00000000 		.4byte	.LFB64
 1578 0405 14000000 		.4byte	.LFE64-.LFB64
 1579 0409 01       		.uleb128 0x1
 1580 040a 9C       		.byte	0x9c
 1581 040b 0F       		.uleb128 0xf
 1582 040c BB040000 		.4byte	.LASF70
 1583 0410 01       		.byte	0x1
 1584 0411 1E       		.byte	0x1e
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 34


 1585 0412 81000000 		.4byte	0x81
 1586 0416 00000000 		.4byte	.LFB65
 1587 041a 14000000 		.4byte	.LFE65-.LFB65
 1588 041e 01       		.uleb128 0x1
 1589 041f 9C       		.byte	0x9c
 1590 0420 10       		.uleb128 0x10
 1591 0421 56050000 		.4byte	.LASF135
 1592 0425 01       		.byte	0x1
 1593 0426 23       		.byte	0x23
 1594 0427 00000000 		.4byte	.LFB66
 1595 042b 28000000 		.4byte	.LFE66-.LFB66
 1596 042f 01       		.uleb128 0x1
 1597 0430 9C       		.byte	0x9c
 1598 0431 11       		.uleb128 0x11
 1599 0432 3F040000 		.4byte	.LASF71
 1600 0436 01       		.byte	0x1
 1601 0437 2E       		.byte	0x2e
 1602 0438 00000000 		.4byte	.LFB67
 1603 043c 70000000 		.4byte	.LFE67-.LFB67
 1604 0440 01       		.uleb128 0x1
 1605 0441 9C       		.byte	0x9c
 1606 0442 55040000 		.4byte	0x455
 1607 0446 12       		.uleb128 0x12
 1608 0447 7E050000 		.4byte	.LASF74
 1609 044b 01       		.byte	0x1
 1610 044c 32       		.byte	0x32
 1611 044d AB000000 		.4byte	0xab
 1612 0451 02       		.uleb128 0x2
 1613 0452 91       		.byte	0x91
 1614 0453 77       		.sleb128 -9
 1615 0454 00       		.byte	0
 1616 0455 11       		.uleb128 0x11
 1617 0456 58060000 		.4byte	.LASF72
 1618 045a 01       		.byte	0x1
 1619 045b 3E       		.byte	0x3e
 1620 045c 00000000 		.4byte	.LFB68
 1621 0460 1C000000 		.4byte	.LFE68-.LFB68
 1622 0464 01       		.uleb128 0x1
 1623 0465 9C       		.byte	0x9c
 1624 0466 79040000 		.4byte	0x479
 1625 046a 13       		.uleb128 0x13
 1626 046b 3E070000 		.4byte	.LASF85
 1627 046f 01       		.byte	0x1
 1628 0470 3E       		.byte	0x3e
 1629 0471 A5000000 		.4byte	0xa5
 1630 0475 02       		.uleb128 0x2
 1631 0476 91       		.byte	0x91
 1632 0477 74       		.sleb128 -12
 1633 0478 00       		.byte	0
 1634 0479 14       		.uleb128 0x14
 1635 047a 00020000 		.4byte	.LASF73
 1636 047e 01       		.byte	0x1
 1637 047f 42       		.byte	0x42
 1638 0480 DB000000 		.4byte	0xdb
 1639 0484 00000000 		.4byte	.LFB69
 1640 0488 00010000 		.4byte	.LFE69-.LFB69
 1641 048c 01       		.uleb128 0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 35


 1642 048d 9C       		.byte	0x9c
 1643 048e E4040000 		.4byte	0x4e4
 1644 0492 12       		.uleb128 0x12
 1645 0493 D1040000 		.4byte	.LASF75
 1646 0497 01       		.byte	0x1
 1647 0498 43       		.byte	0x43
 1648 0499 A5000000 		.4byte	0xa5
 1649 049d 02       		.uleb128 0x2
 1650 049e 91       		.byte	0x91
 1651 049f 74       		.sleb128 -12
 1652 04a0 15       		.uleb128 0x15
 1653 04a1 2A000000 		.4byte	.LBB2
 1654 04a5 96000000 		.4byte	.LBE2-.LBB2
 1655 04a9 12       		.uleb128 0x12
 1656 04aa 96040000 		.4byte	.LASF33
 1657 04ae 01       		.byte	0x1
 1658 04af 52       		.byte	0x52
 1659 04b0 57000000 		.4byte	0x57
 1660 04b4 02       		.uleb128 0x2
 1661 04b5 91       		.byte	0x91
 1662 04b6 70       		.sleb128 -16
 1663 04b7 12       		.uleb128 0x12
 1664 04b8 D6050000 		.4byte	.LASF76
 1665 04bc 01       		.byte	0x1
 1666 04bd 53       		.byte	0x53
 1667 04be E4040000 		.4byte	0x4e4
 1668 04c2 03       		.uleb128 0x3
 1669 04c3 91       		.byte	0x91
 1670 04c4 A07F     		.sleb128 -96
 1671 04c6 12       		.uleb128 0x12
 1672 04c7 FE020000 		.4byte	.LASF32
 1673 04cb 01       		.byte	0x1
 1674 04cc 57       		.byte	0x57
 1675 04cd F1010000 		.4byte	0x1f1
 1676 04d1 02       		.uleb128 0x2
 1677 04d2 91       		.byte	0x91
 1678 04d3 5C       		.sleb128 -36
 1679 04d4 12       		.uleb128 0x12
 1680 04d5 21060000 		.4byte	.LASF77
 1681 04d9 01       		.byte	0x1
 1682 04da 5A       		.byte	0x5a
 1683 04db B9010000 		.4byte	0x1b9
 1684 04df 02       		.uleb128 0x2
 1685 04e0 91       		.byte	0x91
 1686 04e1 40       		.sleb128 -64
 1687 04e2 00       		.byte	0
 1688 04e3 00       		.byte	0
 1689 04e4 07       		.uleb128 0x7
 1690 04e5 AB000000 		.4byte	0xab
 1691 04e9 F4040000 		.4byte	0x4f4
 1692 04ed 08       		.uleb128 0x8
 1693 04ee 9E000000 		.4byte	0x9e
 1694 04f2 1F       		.byte	0x1f
 1695 04f3 00       		.byte	0
 1696 04f4 14       		.uleb128 0x14
 1697 04f5 E5060000 		.4byte	.LASF78
 1698 04f9 01       		.byte	0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 36


 1699 04fa 78       		.byte	0x78
 1700 04fb B9010000 		.4byte	0x1b9
 1701 04ff 00000000 		.4byte	.LFB70
 1702 0503 1C010000 		.4byte	.LFE70-.LFB70
 1703 0507 01       		.uleb128 0x1
 1704 0508 9C       		.byte	0x9c
 1705 0509 3E050000 		.4byte	0x53e
 1706 050d 12       		.uleb128 0x12
 1707 050e 7F020000 		.4byte	.LASF79
 1708 0512 01       		.byte	0x1
 1709 0513 7B       		.byte	0x7b
 1710 0514 B9010000 		.4byte	0x1b9
 1711 0518 02       		.uleb128 0x2
 1712 0519 91       		.byte	0x91
 1713 051a 50       		.sleb128 -48
 1714 051b 12       		.uleb128 0x12
 1715 051c 09050000 		.4byte	.LASF80
 1716 0520 01       		.byte	0x1
 1717 0521 9D       		.byte	0x9d
 1718 0522 A5000000 		.4byte	0xa5
 1719 0526 02       		.uleb128 0x2
 1720 0527 91       		.byte	0x91
 1721 0528 6C       		.sleb128 -20
 1722 0529 16       		.uleb128 0x16
 1723 052a 00000000 		.4byte	.Ldebug_ranges0+0
 1724 052e 12       		.uleb128 0x12
 1725 052f B0020000 		.4byte	.LASF81
 1726 0533 01       		.byte	0x1
 1727 0534 A5       		.byte	0xa5
 1728 0535 E7000000 		.4byte	0xe7
 1729 0539 02       		.uleb128 0x2
 1730 053a 91       		.byte	0x91
 1731 053b 6A       		.sleb128 -22
 1732 053c 00       		.byte	0
 1733 053d 00       		.byte	0
 1734 053e 14       		.uleb128 0x14
 1735 053f E8040000 		.4byte	.LASF82
 1736 0543 01       		.byte	0x1
 1737 0544 C0       		.byte	0xc0
 1738 0545 65010000 		.4byte	0x165
 1739 0549 00000000 		.4byte	.LFB71
 1740 054d CC000000 		.4byte	.LFE71-.LFB71
 1741 0551 01       		.uleb128 0x1
 1742 0552 9C       		.byte	0x9c
 1743 0553 76050000 		.4byte	0x576
 1744 0557 12       		.uleb128 0x12
 1745 0558 4E010000 		.4byte	.LASF83
 1746 055c 01       		.byte	0x1
 1747 055d C2       		.byte	0xc2
 1748 055e 65010000 		.4byte	0x165
 1749 0562 03       		.uleb128 0x3
 1750 0563 91       		.byte	0x91
 1751 0564 EC7C     		.sleb128 -404
 1752 0566 12       		.uleb128 0x12
 1753 0567 87030000 		.4byte	.LASF84
 1754 056b 01       		.byte	0x1
 1755 056c C7       		.byte	0xc7
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 37


 1756 056d B9010000 		.4byte	0x1b9
 1757 0571 03       		.uleb128 0x3
 1758 0572 91       		.byte	0x91
 1759 0573 D07C     		.sleb128 -432
 1760 0575 00       		.byte	0
 1761 0576 17       		.uleb128 0x17
 1762 0577 97060000 		.4byte	.LASF136
 1763 057b 01       		.byte	0x1
 1764 057c DE       		.byte	0xde
 1765 057d E7000000 		.4byte	0xe7
 1766 0581 00000000 		.4byte	.LFB72
 1767 0585 8E000000 		.4byte	.LFE72-.LFB72
 1768 0589 01       		.uleb128 0x1
 1769 058a 9C       		.byte	0x9c
 1770 058b B8050000 		.4byte	0x5b8
 1771 058f 13       		.uleb128 0x13
 1772 0590 B8020000 		.4byte	.LASF86
 1773 0594 01       		.byte	0x1
 1774 0595 DE       		.byte	0xde
 1775 0596 B8050000 		.4byte	0x5b8
 1776 059a 02       		.uleb128 0x2
 1777 059b 91       		.byte	0x91
 1778 059c 64       		.sleb128 -28
 1779 059d 18       		.uleb128 0x18
 1780 059e 6E00     		.ascii	"n\000"
 1781 05a0 01       		.byte	0x1
 1782 05a1 DE       		.byte	0xde
 1783 05a2 DB000000 		.4byte	0xdb
 1784 05a6 02       		.uleb128 0x2
 1785 05a7 91       		.byte	0x91
 1786 05a8 63       		.sleb128 -29
 1787 05a9 12       		.uleb128 0x12
 1788 05aa 7C010000 		.4byte	.LASF87
 1789 05ae 01       		.byte	0x1
 1790 05af E0       		.byte	0xe0
 1791 05b0 F3000000 		.4byte	0xf3
 1792 05b4 02       		.uleb128 0x2
 1793 05b5 91       		.byte	0x91
 1794 05b6 6E       		.sleb128 -18
 1795 05b7 00       		.byte	0
 1796 05b8 05       		.uleb128 0x5
 1797 05b9 04       		.byte	0x4
 1798 05ba F3000000 		.4byte	0xf3
 1799 05be 11       		.uleb128 0x11
 1800 05bf ED020000 		.4byte	.LASF88
 1801 05c3 01       		.byte	0x1
 1802 05c4 F0       		.byte	0xf0
 1803 05c5 00000000 		.4byte	.LFB73
 1804 05c9 98000000 		.4byte	.LFE73-.LFB73
 1805 05cd 01       		.uleb128 0x1
 1806 05ce 9C       		.byte	0x9c
 1807 05cf 04060000 		.4byte	0x604
 1808 05d3 18       		.uleb128 0x18
 1809 05d4 6100     		.ascii	"a\000"
 1810 05d6 01       		.byte	0x1
 1811 05d7 F0       		.byte	0xf0
 1812 05d8 B8050000 		.4byte	0x5b8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 38


 1813 05dc 02       		.uleb128 0x2
 1814 05dd 91       		.byte	0x91
 1815 05de 6C       		.sleb128 -20
 1816 05df 18       		.uleb128 0x18
 1817 05e0 6E00     		.ascii	"n\000"
 1818 05e2 01       		.byte	0x1
 1819 05e3 F0       		.byte	0xf0
 1820 05e4 F3000000 		.4byte	0xf3
 1821 05e8 02       		.uleb128 0x2
 1822 05e9 91       		.byte	0x91
 1823 05ea 6A       		.sleb128 -22
 1824 05eb 19       		.uleb128 0x19
 1825 05ec 6900     		.ascii	"i\000"
 1826 05ee 01       		.byte	0x1
 1827 05ef F1       		.byte	0xf1
 1828 05f0 F3000000 		.4byte	0xf3
 1829 05f4 02       		.uleb128 0x2
 1830 05f5 91       		.byte	0x91
 1831 05f6 76       		.sleb128 -10
 1832 05f7 19       		.uleb128 0x19
 1833 05f8 6A00     		.ascii	"j\000"
 1834 05fa 01       		.byte	0x1
 1835 05fb F1       		.byte	0xf1
 1836 05fc F3000000 		.4byte	0xf3
 1837 0600 02       		.uleb128 0x2
 1838 0601 91       		.byte	0x91
 1839 0602 74       		.sleb128 -12
 1840 0603 00       		.byte	0
 1841 0604 1A       		.uleb128 0x1a
 1842 0605 CC040000 		.4byte	.LASF89
 1843 0609 01       		.byte	0x1
 1844 060a FC       		.byte	0xfc
 1845 060b 00000000 		.4byte	.LFB74
 1846 060f 2A000000 		.4byte	.LFE74-.LFB74
 1847 0613 01       		.uleb128 0x1
 1848 0614 9C       		.byte	0x9c
 1849 0615 3E060000 		.4byte	0x63e
 1850 0619 18       		.uleb128 0x18
 1851 061a 7000     		.ascii	"p\000"
 1852 061c 01       		.byte	0x1
 1853 061d FC       		.byte	0xfc
 1854 061e B8050000 		.4byte	0x5b8
 1855 0622 02       		.uleb128 0x2
 1856 0623 91       		.byte	0x91
 1857 0624 6C       		.sleb128 -20
 1858 0625 18       		.uleb128 0x18
 1859 0626 7100     		.ascii	"q\000"
 1860 0628 01       		.byte	0x1
 1861 0629 FC       		.byte	0xfc
 1862 062a B8050000 		.4byte	0x5b8
 1863 062e 02       		.uleb128 0x2
 1864 062f 91       		.byte	0x91
 1865 0630 68       		.sleb128 -24
 1866 0631 19       		.uleb128 0x19
 1867 0632 7400     		.ascii	"t\000"
 1868 0634 01       		.byte	0x1
 1869 0635 FD       		.byte	0xfd
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 39


 1870 0636 F3000000 		.4byte	0xf3
 1871 063a 02       		.uleb128 0x2
 1872 063b 91       		.byte	0x91
 1873 063c 76       		.sleb128 -10
 1874 063d 00       		.byte	0
 1875 063e 07       		.uleb128 0x7
 1876 063f AB000000 		.4byte	0xab
 1877 0643 4F060000 		.4byte	0x64f
 1878 0647 1B       		.uleb128 0x1b
 1879 0648 9E000000 		.4byte	0x9e
 1880 064c 0001     		.2byte	0x100
 1881 064e 00       		.byte	0
 1882 064f 12       		.uleb128 0x12
 1883 0650 20010000 		.4byte	.LASF90
 1884 0654 01       		.byte	0x1
 1885 0655 0C       		.byte	0xc
 1886 0656 3E060000 		.4byte	0x63e
 1887 065a 05       		.uleb128 0x5
 1888 065b 03       		.byte	0x3
 1889 065c 00000000 		.4byte	uart_chars
 1890 0660 12       		.uleb128 0x12
 1891 0661 22040000 		.4byte	.LASF91
 1892 0665 01       		.byte	0x1
 1893 0666 0D       		.byte	0xd
 1894 0667 81000000 		.4byte	0x81
 1895 066b 05       		.uleb128 0x5
 1896 066c 03       		.byte	0x3
 1897 066d 01010000 		.4byte	num_chars
 1898 0671 12       		.uleb128 0x12
 1899 0672 E8020000 		.4byte	.LASF92
 1900 0676 01       		.byte	0x1
 1901 0677 0F       		.byte	0xf
 1902 0678 B2000000 		.4byte	0xb2
 1903 067c 05       		.uleb128 0x5
 1904 067d 03       		.byte	0x3
 1905 067e 00000000 		.4byte	line
 1906 0682 12       		.uleb128 0x12
 1907 0683 A0040000 		.4byte	.LASF93
 1908 0687 01       		.byte	0x1
 1909 0688 12       		.byte	0x12
 1910 0689 B2000000 		.4byte	0xb2
 1911 068d 05       		.uleb128 0x5
 1912 068e 03       		.byte	0x3
 1913 068f 04010000 		.4byte	match
 1914 0693 12       		.uleb128 0x12
 1915 0694 C4040000 		.4byte	.LASF94
 1916 0698 01       		.byte	0x1
 1917 0699 13       		.byte	0x13
 1918 069a B2000000 		.4byte	0xb2
 1919 069e 05       		.uleb128 0x5
 1920 069f 03       		.byte	0x3
 1921 06a0 08010000 		.4byte	pattern
 1922 06a4 1C       		.uleb128 0x1c
 1923 06a5 60010000 		.4byte	.LASF95
 1924 06a9 0A       		.byte	0xa
 1925 06aa 1207     		.2byte	0x712
 1926 06ac B0060000 		.4byte	0x6b0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 40


 1927 06b0 0E       		.uleb128 0xe
 1928 06b1 8C000000 		.4byte	0x8c
 1929 06b5 1D       		.uleb128 0x1d
 1930 06b6 B7050000 		.4byte	.LASF96
 1931 06ba 06       		.byte	0x6
 1932 06bb 25       		.byte	0x25
 1933 06bc DB030000 		.4byte	0x3db
 1934 06c0 05       		.uleb128 0x5
 1935 06c1 03       		.byte	0x3
 1936 06c2 00000000 		.4byte	level_sensor_inbox
 1937 06c6 1D       		.uleb128 0x1d
 1938 06c7 AA060000 		.4byte	.LASF97
 1939 06cb 06       		.byte	0x6
 1940 06cc 27       		.byte	0x27
 1941 06cd 2D030000 		.4byte	0x32d
 1942 06d1 05       		.uleb128 0x5
 1943 06d2 03       		.byte	0x3
 1944 06d3 00000000 		.4byte	level_sensor_enabled
 1945 06d7 1D       		.uleb128 0x1d
 1946 06d8 68070000 		.4byte	.LASF98
 1947 06dc 0B       		.byte	0xb
 1948 06dd 0F       		.byte	0xf
 1949 06de DB030000 		.4byte	0x3db
 1950 06e2 05       		.uleb128 0x5
 1951 06e3 03       		.byte	0x3
 1952 06e4 00000000 		.4byte	downstream_level_sensor_inbox
 1953 06e8 1D       		.uleb128 0x1d
 1954 06e9 CE030000 		.4byte	.LASF99
 1955 06ed 0B       		.byte	0xb
 1956 06ee 11       		.byte	0x11
 1957 06ef 2D030000 		.4byte	0x32d
 1958 06f3 05       		.uleb128 0x5
 1959 06f4 03       		.byte	0x3
 1960 06f5 00000000 		.4byte	downstream_level_sensor_enabled
 1961 06f9 1D       		.uleb128 0x1d
 1962 06fa 17020000 		.4byte	.LASF100
 1963 06fe 0C       		.byte	0xc
 1964 06ff 2A       		.byte	0x2a
 1965 0700 0B010000 		.4byte	0x10b
 1966 0704 05       		.uleb128 0x5
 1967 0705 03       		.byte	0x3
 1968 0706 00000000 		.4byte	valve_diameter
 1969 070a 07       		.uleb128 0x7
 1970 070b AB000000 		.4byte	0xab
 1971 070f 1A070000 		.4byte	0x71a
 1972 0713 08       		.uleb128 0x8
 1973 0714 9E000000 		.4byte	0x9e
 1974 0718 09       		.byte	0x9
 1975 0719 00       		.byte	0
 1976 071a 1D       		.uleb128 0x1d
 1977 071b 2C040000 		.4byte	.LASF101
 1978 071f 0C       		.byte	0xc
 1979 0720 2B       		.byte	0x2b
 1980 0721 0A070000 		.4byte	0x70a
 1981 0725 05       		.uleb128 0x5
 1982 0726 03       		.byte	0x3
 1983 0727 00000000 		.4byte	valve_type
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 41


 1984 072b 1D       		.uleb128 0x1d
 1985 072c 89060000 		.4byte	.LASF102
 1986 0730 0C       		.byte	0xc
 1987 0731 30       		.byte	0x30
 1988 0732 DB000000 		.4byte	0xdb
 1989 0736 05       		.uleb128 0x5
 1990 0737 03       		.byte	0x3
 1991 0738 00000000 		.4byte	valve_enabled
 1992 073c 1D       		.uleb128 0x1d
 1993 073d 7B030000 		.4byte	.LASF103
 1994 0741 0C       		.byte	0xc
 1995 0742 31       		.byte	0x31
 1996 0743 DB030000 		.4byte	0x3db
 1997 0747 05       		.uleb128 0x5
 1998 0748 03       		.byte	0x3
 1999 0749 00000000 		.4byte	valve_inbox
 2000 074d 1D       		.uleb128 0x1d
 2001 074e 60000000 		.4byte	.LASF104
 2002 0752 07       		.byte	0x7
 2003 0753 11       		.byte	0x11
 2004 0754 2D030000 		.4byte	0x32d
 2005 0758 05       		.uleb128 0x5
 2006 0759 03       		.byte	0x3
 2007 075a 00000000 		.4byte	buffer_overflow
 2008 075e 1D       		.uleb128 0x1d
 2009 075f 10040000 		.4byte	.LASF105
 2010 0763 07       		.byte	0x7
 2011 0764 22       		.byte	0x22
 2012 0765 E7000000 		.4byte	0xe7
 2013 0769 05       		.uleb128 0x5
 2014 076a 03       		.byte	0x3
 2015 076b 00000000 		.4byte	dataPointsInStack
 2016 076f 1D       		.uleb128 0x1d
 2017 0770 BF060000 		.4byte	.LASF106
 2018 0774 07       		.byte	0x7
 2019 0775 23       		.byte	0x23
 2020 0776 E7000000 		.4byte	0xe7
 2021 077a 05       		.uleb128 0x5
 2022 077b 03       		.byte	0x3
 2023 077c 00000000 		.4byte	dataPointsInStackDesired
 2024 0780 07       		.uleb128 0x7
 2025 0781 01020000 		.4byte	0x201
 2026 0785 90070000 		.4byte	0x790
 2027 0789 08       		.uleb128 0x8
 2028 078a 9E000000 		.4byte	0x9e
 2029 078e 95       		.byte	0x95
 2030 078f 00       		.byte	0
 2031 0790 1D       		.uleb128 0x1d
 2032 0791 5B030000 		.4byte	.LASF107
 2033 0795 07       		.byte	0x7
 2034 0796 24       		.byte	0x24
 2035 0797 80070000 		.4byte	0x780
 2036 079b 05       		.uleb128 0x5
 2037 079c 03       		.byte	0x3
 2038 079d 00000000 		.4byte	data
 2039 07a1 1D       		.uleb128 0x1d
 2040 07a2 42010000 		.4byte	.LASF108
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 42


 2041 07a6 08       		.byte	0x8
 2042 07a7 20       		.byte	0x20
 2043 07a8 DB000000 		.4byte	0xdb
 2044 07ac 05       		.uleb128 0x5
 2045 07ad 03       		.byte	0x3
 2046 07ae 00000000 		.4byte	modem_state
 2047 07b2 1D       		.uleb128 0x1d
 2048 07b3 B7030000 		.4byte	.LASF109
 2049 07b7 08       		.byte	0x8
 2050 07b8 6C       		.byte	0x6c
 2051 07b9 FF000000 		.4byte	0xff
 2052 07bd 05       		.uleb128 0x5
 2053 07be 03       		.byte	0x3
 2054 07bf 00000000 		.4byte	modem_start_time_stamp
 2055 07c3 1D       		.uleb128 0x1d
 2056 07c4 68030000 		.4byte	.LASF63
 2057 07c8 08       		.byte	0x8
 2058 07c9 6D       		.byte	0x6d
 2059 07ca 39020000 		.4byte	0x239
 2060 07ce 05       		.uleb128 0x5
 2061 07cf 03       		.byte	0x3
 2062 07d0 00000000 		.4byte	modem_info
 2063 07d4 1D       		.uleb128 0x1d
 2064 07d5 95010000 		.4byte	.LASF110
 2065 07d9 08       		.byte	0x8
 2066 07da 6E       		.byte	0x6e
 2067 07db AD020000 		.4byte	0x2ad
 2068 07df 05       		.uleb128 0x5
 2069 07e0 03       		.byte	0x3
 2070 07e1 00000000 		.4byte	modem_stats
 2071 07e5 1D       		.uleb128 0x1d
 2072 07e6 A6040000 		.4byte	.LASF111
 2073 07ea 08       		.byte	0x8
 2074 07eb 6F       		.byte	0x6f
 2075 07ec 34030000 		.4byte	0x334
 2076 07f0 05       		.uleb128 0x5
 2077 07f1 03       		.byte	0x3
 2078 07f2 00000000 		.4byte	updatable_parameters
 2079 07f6 1D       		.uleb128 0x1d
 2080 07f7 0E030000 		.4byte	.LASF112
 2081 07fb 0D       		.byte	0xd
 2082 07fc 07       		.byte	0x7
 2083 07fd DB000000 		.4byte	0xdb
 2084 0801 05       		.uleb128 0x5
 2085 0802 03       		.byte	0x3
 2086 0803 00000000 		.4byte	App_LED_enabled
 2087 0807 1D       		.uleb128 0x1d
 2088 0808 5A070000 		.4byte	.LASF113
 2089 080c 0D       		.byte	0xd
 2090 080d 08       		.byte	0x8
 2091 080e DB030000 		.4byte	0x3db
 2092 0812 05       		.uleb128 0x5
 2093 0813 03       		.byte	0x3
 2094 0814 00000000 		.4byte	app_led_inbox
 2095 0818 07       		.uleb128 0x7
 2096 0819 AB000000 		.4byte	0xab
 2097 081d 29080000 		.4byte	0x829
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 43


 2098 0821 1B       		.uleb128 0x1b
 2099 0822 9E000000 		.4byte	0x9e
 2100 0826 0F27     		.2byte	0x270f
 2101 0828 00       		.byte	0
 2102 0829 1D       		.uleb128 0x1d
 2103 082a 46070000 		.4byte	.LASF114
 2104 082e 09       		.byte	0x9
 2105 082f 1A       		.byte	0x1a
 2106 0830 18080000 		.4byte	0x818
 2107 0834 05       		.uleb128 0x5
 2108 0835 03       		.byte	0x3
 2109 0836 00000000 		.4byte	http_request
 2110 083a 1D       		.uleb128 0x1d
 2111 083b 0D020000 		.4byte	.LASF115
 2112 083f 09       		.byte	0x9
 2113 0840 1B       		.byte	0x1b
 2114 0841 18080000 		.4byte	0x818
 2115 0845 05       		.uleb128 0x5
 2116 0846 03       		.byte	0x3
 2117 0847 00000000 		.4byte	http_body
 2118 084b 07       		.uleb128 0x7
 2119 084c AB000000 		.4byte	0xab
 2120 0850 5B080000 		.4byte	0x85b
 2121 0854 08       		.uleb128 0x8
 2122 0855 9E000000 		.4byte	0x9e
 2123 0859 C7       		.byte	0xc7
 2124 085a 00       		.byte	0
 2125 085b 1D       		.uleb128 0x1d
 2126 085c FF050000 		.4byte	.LASF116
 2127 0860 09       		.byte	0x9
 2128 0861 1C       		.byte	0x1c
 2129 0862 4B080000 		.4byte	0x84b
 2130 0866 05       		.uleb128 0x5
 2131 0867 03       		.byte	0x3
 2132 0868 00000000 		.4byte	http_route
 2133 086c 1D       		.uleb128 0x1d
 2134 086d 66050000 		.4byte	.LASF117
 2135 0871 09       		.byte	0x9
 2136 0872 43       		.byte	0x43
 2137 0873 AF030000 		.4byte	0x3af
 2138 0877 05       		.uleb128 0x5
 2139 0878 03       		.byte	0x3
 2140 0879 00000000 		.4byte	system_info
 2141 087d 1D       		.uleb128 0x1d
 2142 087e 2B050000 		.4byte	.LASF118
 2143 0882 09       		.byte	0x9
 2144 0883 55       		.byte	0x55
 2145 0884 EB030000 		.4byte	0x3eb
 2146 0888 05       		.uleb128 0x5
 2147 0889 03       		.byte	0x3
 2148 088a 00000000 		.4byte	system_settings
 2149 088e 1D       		.uleb128 0x1d
 2150 088f 53010000 		.4byte	.LASF119
 2151 0893 09       		.byte	0x9
 2152 0894 71       		.byte	0x71
 2153 0895 78030000 		.4byte	0x378
 2154 0899 05       		.uleb128 0x5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 44


 2155 089a 03       		.byte	0x3
 2156 089b 00000000 		.4byte	alarmMeasure
 2157 089f 1D       		.uleb128 0x1d
 2158 08a0 CF010000 		.4byte	.LASF120
 2159 08a4 09       		.byte	0x9
 2160 08a5 72       		.byte	0x72
 2161 08a6 DB000000 		.4byte	0xdb
 2162 08aa 05       		.uleb128 0x5
 2163 08ab 03       		.byte	0x3
 2164 08ac 00000000 		.4byte	timeToMeasure
 2165 08b0 1D       		.uleb128 0x1d
 2166 08b1 04030000 		.4byte	.LASF121
 2167 08b5 09       		.byte	0x9
 2168 08b6 73       		.byte	0x73
 2169 08b7 78030000 		.4byte	0x378
 2170 08bb 05       		.uleb128 0x5
 2171 08bc 03       		.byte	0x3
 2172 08bd 00000000 		.4byte	alarmSync
 2173 08c1 1D       		.uleb128 0x1d
 2174 08c2 F5010000 		.4byte	.LASF122
 2175 08c6 09       		.byte	0x9
 2176 08c7 74       		.byte	0x74
 2177 08c8 DB000000 		.4byte	0xdb
 2178 08cc 05       		.uleb128 0x5
 2179 08cd 03       		.byte	0x3
 2180 08ce 00000000 		.4byte	timeToSync
 2181 08d2 1D       		.uleb128 0x1d
 2182 08d3 7F040000 		.4byte	.LASF123
 2183 08d7 09       		.byte	0x9
 2184 08d8 75       		.byte	0x75
 2185 08d9 DB000000 		.4byte	0xdb
 2186 08dd 05       		.uleb128 0x5
 2187 08de 03       		.byte	0x3
 2188 08df 00000000 		.4byte	timeToSycnRemoteParams
 2189 08e3 1E       		.uleb128 0x1e
 2190 08e4 68657900 		.ascii	"hey\000"
 2191 08e8 09       		.byte	0x9
 2192 08e9 76       		.byte	0x76
 2193 08ea DB000000 		.4byte	0xdb
 2194 08ee 05       		.uleb128 0x5
 2195 08ef 03       		.byte	0x3
 2196 08f0 00000000 		.4byte	hey
 2197 08f4 1D       		.uleb128 0x1d
 2198 08f5 AB030000 		.4byte	.LASF124
 2199 08f9 09       		.byte	0x9
 2200 08fa 7A       		.byte	0x7a
 2201 08fb 78030000 		.4byte	0x378
 2202 08ff 05       		.uleb128 0x5
 2203 0900 03       		.byte	0x3
 2204 0901 00000000 		.4byte	alarmAppLED
 2205 0905 1D       		.uleb128 0x1d
 2206 0906 93020000 		.4byte	.LASF125
 2207 090a 09       		.byte	0x9
 2208 090b 7B       		.byte	0x7b
 2209 090c DB000000 		.4byte	0xdb
 2210 0910 05       		.uleb128 0x5
 2211 0911 03       		.byte	0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 45


 2212 0912 00000000 		.4byte	timeToAppLED
 2213 0916 1D       		.uleb128 0x1d
 2214 0917 94050000 		.4byte	.LASF126
 2215 091b 09       		.byte	0x9
 2216 091c 7D       		.byte	0x7d
 2217 091d 78030000 		.4byte	0x378
 2218 0921 05       		.uleb128 0x5
 2219 0922 03       		.byte	0x3
 2220 0923 00000000 		.4byte	alarmLevelSensor
 2221 0927 1D       		.uleb128 0x1d
 2222 0928 83010000 		.4byte	.LASF127
 2223 092c 09       		.byte	0x9
 2224 092d 7E       		.byte	0x7e
 2225 092e DB000000 		.4byte	0xdb
 2226 0932 05       		.uleb128 0x5
 2227 0933 03       		.byte	0x3
 2228 0934 00000000 		.4byte	timetoLevelSensor
 2229 0938 1D       		.uleb128 0x1d
 2230 0939 33020000 		.4byte	.LASF128
 2231 093d 09       		.byte	0x9
 2232 093e 80       		.byte	0x80
 2233 093f 78030000 		.4byte	0x378
 2234 0943 05       		.uleb128 0x5
 2235 0944 03       		.byte	0x3
 2236 0945 00000000 		.4byte	alarmDownstreamLevelSensor
 2237 0949 1D       		.uleb128 0x1d
 2238 094a 59040000 		.4byte	.LASF129
 2239 094e 09       		.byte	0x9
 2240 094f 81       		.byte	0x81
 2241 0950 DB000000 		.4byte	0xdb
 2242 0954 05       		.uleb128 0x5
 2243 0955 03       		.byte	0x3
 2244 0956 00000000 		.4byte	timetoDownstreamLevelSensor
 2245 095a 1D       		.uleb128 0x1d
 2246 095b F4050000 		.4byte	.LASF130
 2247 095f 09       		.byte	0x9
 2248 0960 83       		.byte	0x83
 2249 0961 78030000 		.4byte	0x378
 2250 0965 05       		.uleb128 0x5
 2251 0966 03       		.byte	0x3
 2252 0967 00000000 		.4byte	alarmValve
 2253 096b 1D       		.uleb128 0x1d
 2254 096c 00000000 		.4byte	.LASF131
 2255 0970 09       		.byte	0x9
 2256 0971 84       		.byte	0x84
 2257 0972 DB000000 		.4byte	0xdb
 2258 0976 05       		.uleb128 0x5
 2259 0977 03       		.byte	0x3
 2260 0978 00000000 		.4byte	timeToValve
 2261 097c 00       		.byte	0
 2262              		.section	.debug_abbrev,"",%progbits
 2263              	.Ldebug_abbrev0:
 2264 0000 01       		.uleb128 0x1
 2265 0001 11       		.uleb128 0x11
 2266 0002 01       		.byte	0x1
 2267 0003 25       		.uleb128 0x25
 2268 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 46


 2269 0005 13       		.uleb128 0x13
 2270 0006 0B       		.uleb128 0xb
 2271 0007 03       		.uleb128 0x3
 2272 0008 0E       		.uleb128 0xe
 2273 0009 1B       		.uleb128 0x1b
 2274 000a 0E       		.uleb128 0xe
 2275 000b 55       		.uleb128 0x55
 2276 000c 17       		.uleb128 0x17
 2277 000d 11       		.uleb128 0x11
 2278 000e 01       		.uleb128 0x1
 2279 000f 10       		.uleb128 0x10
 2280 0010 17       		.uleb128 0x17
 2281 0011 00       		.byte	0
 2282 0012 00       		.byte	0
 2283 0013 02       		.uleb128 0x2
 2284 0014 24       		.uleb128 0x24
 2285 0015 00       		.byte	0
 2286 0016 0B       		.uleb128 0xb
 2287 0017 0B       		.uleb128 0xb
 2288 0018 3E       		.uleb128 0x3e
 2289 0019 0B       		.uleb128 0xb
 2290 001a 03       		.uleb128 0x3
 2291 001b 0E       		.uleb128 0xe
 2292 001c 00       		.byte	0
 2293 001d 00       		.byte	0
 2294 001e 03       		.uleb128 0x3
 2295 001f 16       		.uleb128 0x16
 2296 0020 00       		.byte	0
 2297 0021 03       		.uleb128 0x3
 2298 0022 0E       		.uleb128 0xe
 2299 0023 3A       		.uleb128 0x3a
 2300 0024 0B       		.uleb128 0xb
 2301 0025 3B       		.uleb128 0x3b
 2302 0026 0B       		.uleb128 0xb
 2303 0027 49       		.uleb128 0x49
 2304 0028 13       		.uleb128 0x13
 2305 0029 00       		.byte	0
 2306 002a 00       		.byte	0
 2307 002b 04       		.uleb128 0x4
 2308 002c 24       		.uleb128 0x24
 2309 002d 00       		.byte	0
 2310 002e 0B       		.uleb128 0xb
 2311 002f 0B       		.uleb128 0xb
 2312 0030 3E       		.uleb128 0x3e
 2313 0031 0B       		.uleb128 0xb
 2314 0032 03       		.uleb128 0x3
 2315 0033 08       		.uleb128 0x8
 2316 0034 00       		.byte	0
 2317 0035 00       		.byte	0
 2318 0036 05       		.uleb128 0x5
 2319 0037 0F       		.uleb128 0xf
 2320 0038 00       		.byte	0
 2321 0039 0B       		.uleb128 0xb
 2322 003a 0B       		.uleb128 0xb
 2323 003b 49       		.uleb128 0x49
 2324 003c 13       		.uleb128 0x13
 2325 003d 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 47


 2326 003e 00       		.byte	0
 2327 003f 06       		.uleb128 0x6
 2328 0040 26       		.uleb128 0x26
 2329 0041 00       		.byte	0
 2330 0042 49       		.uleb128 0x49
 2331 0043 13       		.uleb128 0x13
 2332 0044 00       		.byte	0
 2333 0045 00       		.byte	0
 2334 0046 07       		.uleb128 0x7
 2335 0047 01       		.uleb128 0x1
 2336 0048 01       		.byte	0x1
 2337 0049 49       		.uleb128 0x49
 2338 004a 13       		.uleb128 0x13
 2339 004b 01       		.uleb128 0x1
 2340 004c 13       		.uleb128 0x13
 2341 004d 00       		.byte	0
 2342 004e 00       		.byte	0
 2343 004f 08       		.uleb128 0x8
 2344 0050 21       		.uleb128 0x21
 2345 0051 00       		.byte	0
 2346 0052 49       		.uleb128 0x49
 2347 0053 13       		.uleb128 0x13
 2348 0054 2F       		.uleb128 0x2f
 2349 0055 0B       		.uleb128 0xb
 2350 0056 00       		.byte	0
 2351 0057 00       		.byte	0
 2352 0058 09       		.uleb128 0x9
 2353 0059 16       		.uleb128 0x16
 2354 005a 00       		.byte	0
 2355 005b 03       		.uleb128 0x3
 2356 005c 0E       		.uleb128 0xe
 2357 005d 3A       		.uleb128 0x3a
 2358 005e 0B       		.uleb128 0xb
 2359 005f 3B       		.uleb128 0x3b
 2360 0060 05       		.uleb128 0x5
 2361 0061 49       		.uleb128 0x49
 2362 0062 13       		.uleb128 0x13
 2363 0063 00       		.byte	0
 2364 0064 00       		.byte	0
 2365 0065 0A       		.uleb128 0xa
 2366 0066 13       		.uleb128 0x13
 2367 0067 01       		.byte	0x1
 2368 0068 0B       		.uleb128 0xb
 2369 0069 05       		.uleb128 0x5
 2370 006a 3A       		.uleb128 0x3a
 2371 006b 0B       		.uleb128 0xb
 2372 006c 3B       		.uleb128 0x3b
 2373 006d 0B       		.uleb128 0xb
 2374 006e 01       		.uleb128 0x1
 2375 006f 13       		.uleb128 0x13
 2376 0070 00       		.byte	0
 2377 0071 00       		.byte	0
 2378 0072 0B       		.uleb128 0xb
 2379 0073 0D       		.uleb128 0xd
 2380 0074 00       		.byte	0
 2381 0075 03       		.uleb128 0x3
 2382 0076 0E       		.uleb128 0xe
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 48


 2383 0077 3A       		.uleb128 0x3a
 2384 0078 0B       		.uleb128 0xb
 2385 0079 3B       		.uleb128 0x3b
 2386 007a 0B       		.uleb128 0xb
 2387 007b 49       		.uleb128 0x49
 2388 007c 13       		.uleb128 0x13
 2389 007d 38       		.uleb128 0x38
 2390 007e 0B       		.uleb128 0xb
 2391 007f 00       		.byte	0
 2392 0080 00       		.byte	0
 2393 0081 0C       		.uleb128 0xc
 2394 0082 13       		.uleb128 0x13
 2395 0083 01       		.byte	0x1
 2396 0084 0B       		.uleb128 0xb
 2397 0085 0B       		.uleb128 0xb
 2398 0086 3A       		.uleb128 0x3a
 2399 0087 0B       		.uleb128 0xb
 2400 0088 3B       		.uleb128 0x3b
 2401 0089 0B       		.uleb128 0xb
 2402 008a 01       		.uleb128 0x1
 2403 008b 13       		.uleb128 0x13
 2404 008c 00       		.byte	0
 2405 008d 00       		.byte	0
 2406 008e 0D       		.uleb128 0xd
 2407 008f 0D       		.uleb128 0xd
 2408 0090 00       		.byte	0
 2409 0091 03       		.uleb128 0x3
 2410 0092 08       		.uleb128 0x8
 2411 0093 3A       		.uleb128 0x3a
 2412 0094 0B       		.uleb128 0xb
 2413 0095 3B       		.uleb128 0x3b
 2414 0096 0B       		.uleb128 0xb
 2415 0097 49       		.uleb128 0x49
 2416 0098 13       		.uleb128 0x13
 2417 0099 38       		.uleb128 0x38
 2418 009a 0B       		.uleb128 0xb
 2419 009b 00       		.byte	0
 2420 009c 00       		.byte	0
 2421 009d 0E       		.uleb128 0xe
 2422 009e 35       		.uleb128 0x35
 2423 009f 00       		.byte	0
 2424 00a0 49       		.uleb128 0x49
 2425 00a1 13       		.uleb128 0x13
 2426 00a2 00       		.byte	0
 2427 00a3 00       		.byte	0
 2428 00a4 0F       		.uleb128 0xf
 2429 00a5 2E       		.uleb128 0x2e
 2430 00a6 00       		.byte	0
 2431 00a7 3F       		.uleb128 0x3f
 2432 00a8 19       		.uleb128 0x19
 2433 00a9 03       		.uleb128 0x3
 2434 00aa 0E       		.uleb128 0xe
 2435 00ab 3A       		.uleb128 0x3a
 2436 00ac 0B       		.uleb128 0xb
 2437 00ad 3B       		.uleb128 0x3b
 2438 00ae 0B       		.uleb128 0xb
 2439 00af 27       		.uleb128 0x27
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 49


 2440 00b0 19       		.uleb128 0x19
 2441 00b1 49       		.uleb128 0x49
 2442 00b2 13       		.uleb128 0x13
 2443 00b3 11       		.uleb128 0x11
 2444 00b4 01       		.uleb128 0x1
 2445 00b5 12       		.uleb128 0x12
 2446 00b6 06       		.uleb128 0x6
 2447 00b7 40       		.uleb128 0x40
 2448 00b8 18       		.uleb128 0x18
 2449 00b9 9742     		.uleb128 0x2117
 2450 00bb 19       		.uleb128 0x19
 2451 00bc 00       		.byte	0
 2452 00bd 00       		.byte	0
 2453 00be 10       		.uleb128 0x10
 2454 00bf 2E       		.uleb128 0x2e
 2455 00c0 00       		.byte	0
 2456 00c1 3F       		.uleb128 0x3f
 2457 00c2 19       		.uleb128 0x19
 2458 00c3 03       		.uleb128 0x3
 2459 00c4 0E       		.uleb128 0xe
 2460 00c5 3A       		.uleb128 0x3a
 2461 00c6 0B       		.uleb128 0xb
 2462 00c7 3B       		.uleb128 0x3b
 2463 00c8 0B       		.uleb128 0xb
 2464 00c9 27       		.uleb128 0x27
 2465 00ca 19       		.uleb128 0x19
 2466 00cb 11       		.uleb128 0x11
 2467 00cc 01       		.uleb128 0x1
 2468 00cd 12       		.uleb128 0x12
 2469 00ce 06       		.uleb128 0x6
 2470 00cf 40       		.uleb128 0x40
 2471 00d0 18       		.uleb128 0x18
 2472 00d1 9642     		.uleb128 0x2116
 2473 00d3 19       		.uleb128 0x19
 2474 00d4 00       		.byte	0
 2475 00d5 00       		.byte	0
 2476 00d6 11       		.uleb128 0x11
 2477 00d7 2E       		.uleb128 0x2e
 2478 00d8 01       		.byte	0x1
 2479 00d9 3F       		.uleb128 0x3f
 2480 00da 19       		.uleb128 0x19
 2481 00db 03       		.uleb128 0x3
 2482 00dc 0E       		.uleb128 0xe
 2483 00dd 3A       		.uleb128 0x3a
 2484 00de 0B       		.uleb128 0xb
 2485 00df 3B       		.uleb128 0x3b
 2486 00e0 0B       		.uleb128 0xb
 2487 00e1 27       		.uleb128 0x27
 2488 00e2 19       		.uleb128 0x19
 2489 00e3 11       		.uleb128 0x11
 2490 00e4 01       		.uleb128 0x1
 2491 00e5 12       		.uleb128 0x12
 2492 00e6 06       		.uleb128 0x6
 2493 00e7 40       		.uleb128 0x40
 2494 00e8 18       		.uleb128 0x18
 2495 00e9 9642     		.uleb128 0x2116
 2496 00eb 19       		.uleb128 0x19
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 50


 2497 00ec 01       		.uleb128 0x1
 2498 00ed 13       		.uleb128 0x13
 2499 00ee 00       		.byte	0
 2500 00ef 00       		.byte	0
 2501 00f0 12       		.uleb128 0x12
 2502 00f1 34       		.uleb128 0x34
 2503 00f2 00       		.byte	0
 2504 00f3 03       		.uleb128 0x3
 2505 00f4 0E       		.uleb128 0xe
 2506 00f5 3A       		.uleb128 0x3a
 2507 00f6 0B       		.uleb128 0xb
 2508 00f7 3B       		.uleb128 0x3b
 2509 00f8 0B       		.uleb128 0xb
 2510 00f9 49       		.uleb128 0x49
 2511 00fa 13       		.uleb128 0x13
 2512 00fb 02       		.uleb128 0x2
 2513 00fc 18       		.uleb128 0x18
 2514 00fd 00       		.byte	0
 2515 00fe 00       		.byte	0
 2516 00ff 13       		.uleb128 0x13
 2517 0100 05       		.uleb128 0x5
 2518 0101 00       		.byte	0
 2519 0102 03       		.uleb128 0x3
 2520 0103 0E       		.uleb128 0xe
 2521 0104 3A       		.uleb128 0x3a
 2522 0105 0B       		.uleb128 0xb
 2523 0106 3B       		.uleb128 0x3b
 2524 0107 0B       		.uleb128 0xb
 2525 0108 49       		.uleb128 0x49
 2526 0109 13       		.uleb128 0x13
 2527 010a 02       		.uleb128 0x2
 2528 010b 18       		.uleb128 0x18
 2529 010c 00       		.byte	0
 2530 010d 00       		.byte	0
 2531 010e 14       		.uleb128 0x14
 2532 010f 2E       		.uleb128 0x2e
 2533 0110 01       		.byte	0x1
 2534 0111 3F       		.uleb128 0x3f
 2535 0112 19       		.uleb128 0x19
 2536 0113 03       		.uleb128 0x3
 2537 0114 0E       		.uleb128 0xe
 2538 0115 3A       		.uleb128 0x3a
 2539 0116 0B       		.uleb128 0xb
 2540 0117 3B       		.uleb128 0x3b
 2541 0118 0B       		.uleb128 0xb
 2542 0119 49       		.uleb128 0x49
 2543 011a 13       		.uleb128 0x13
 2544 011b 11       		.uleb128 0x11
 2545 011c 01       		.uleb128 0x1
 2546 011d 12       		.uleb128 0x12
 2547 011e 06       		.uleb128 0x6
 2548 011f 40       		.uleb128 0x40
 2549 0120 18       		.uleb128 0x18
 2550 0121 9642     		.uleb128 0x2116
 2551 0123 19       		.uleb128 0x19
 2552 0124 01       		.uleb128 0x1
 2553 0125 13       		.uleb128 0x13
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 51


 2554 0126 00       		.byte	0
 2555 0127 00       		.byte	0
 2556 0128 15       		.uleb128 0x15
 2557 0129 0B       		.uleb128 0xb
 2558 012a 01       		.byte	0x1
 2559 012b 11       		.uleb128 0x11
 2560 012c 01       		.uleb128 0x1
 2561 012d 12       		.uleb128 0x12
 2562 012e 06       		.uleb128 0x6
 2563 012f 00       		.byte	0
 2564 0130 00       		.byte	0
 2565 0131 16       		.uleb128 0x16
 2566 0132 0B       		.uleb128 0xb
 2567 0133 01       		.byte	0x1
 2568 0134 55       		.uleb128 0x55
 2569 0135 17       		.uleb128 0x17
 2570 0136 00       		.byte	0
 2571 0137 00       		.byte	0
 2572 0138 17       		.uleb128 0x17
 2573 0139 2E       		.uleb128 0x2e
 2574 013a 01       		.byte	0x1
 2575 013b 3F       		.uleb128 0x3f
 2576 013c 19       		.uleb128 0x19
 2577 013d 03       		.uleb128 0x3
 2578 013e 0E       		.uleb128 0xe
 2579 013f 3A       		.uleb128 0x3a
 2580 0140 0B       		.uleb128 0xb
 2581 0141 3B       		.uleb128 0x3b
 2582 0142 0B       		.uleb128 0xb
 2583 0143 27       		.uleb128 0x27
 2584 0144 19       		.uleb128 0x19
 2585 0145 49       		.uleb128 0x49
 2586 0146 13       		.uleb128 0x13
 2587 0147 11       		.uleb128 0x11
 2588 0148 01       		.uleb128 0x1
 2589 0149 12       		.uleb128 0x12
 2590 014a 06       		.uleb128 0x6
 2591 014b 40       		.uleb128 0x40
 2592 014c 18       		.uleb128 0x18
 2593 014d 9642     		.uleb128 0x2116
 2594 014f 19       		.uleb128 0x19
 2595 0150 01       		.uleb128 0x1
 2596 0151 13       		.uleb128 0x13
 2597 0152 00       		.byte	0
 2598 0153 00       		.byte	0
 2599 0154 18       		.uleb128 0x18
 2600 0155 05       		.uleb128 0x5
 2601 0156 00       		.byte	0
 2602 0157 03       		.uleb128 0x3
 2603 0158 08       		.uleb128 0x8
 2604 0159 3A       		.uleb128 0x3a
 2605 015a 0B       		.uleb128 0xb
 2606 015b 3B       		.uleb128 0x3b
 2607 015c 0B       		.uleb128 0xb
 2608 015d 49       		.uleb128 0x49
 2609 015e 13       		.uleb128 0x13
 2610 015f 02       		.uleb128 0x2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 52


 2611 0160 18       		.uleb128 0x18
 2612 0161 00       		.byte	0
 2613 0162 00       		.byte	0
 2614 0163 19       		.uleb128 0x19
 2615 0164 34       		.uleb128 0x34
 2616 0165 00       		.byte	0
 2617 0166 03       		.uleb128 0x3
 2618 0167 08       		.uleb128 0x8
 2619 0168 3A       		.uleb128 0x3a
 2620 0169 0B       		.uleb128 0xb
 2621 016a 3B       		.uleb128 0x3b
 2622 016b 0B       		.uleb128 0xb
 2623 016c 49       		.uleb128 0x49
 2624 016d 13       		.uleb128 0x13
 2625 016e 02       		.uleb128 0x2
 2626 016f 18       		.uleb128 0x18
 2627 0170 00       		.byte	0
 2628 0171 00       		.byte	0
 2629 0172 1A       		.uleb128 0x1a
 2630 0173 2E       		.uleb128 0x2e
 2631 0174 01       		.byte	0x1
 2632 0175 3F       		.uleb128 0x3f
 2633 0176 19       		.uleb128 0x19
 2634 0177 03       		.uleb128 0x3
 2635 0178 0E       		.uleb128 0xe
 2636 0179 3A       		.uleb128 0x3a
 2637 017a 0B       		.uleb128 0xb
 2638 017b 3B       		.uleb128 0x3b
 2639 017c 0B       		.uleb128 0xb
 2640 017d 27       		.uleb128 0x27
 2641 017e 19       		.uleb128 0x19
 2642 017f 11       		.uleb128 0x11
 2643 0180 01       		.uleb128 0x1
 2644 0181 12       		.uleb128 0x12
 2645 0182 06       		.uleb128 0x6
 2646 0183 40       		.uleb128 0x40
 2647 0184 18       		.uleb128 0x18
 2648 0185 9742     		.uleb128 0x2117
 2649 0187 19       		.uleb128 0x19
 2650 0188 01       		.uleb128 0x1
 2651 0189 13       		.uleb128 0x13
 2652 018a 00       		.byte	0
 2653 018b 00       		.byte	0
 2654 018c 1B       		.uleb128 0x1b
 2655 018d 21       		.uleb128 0x21
 2656 018e 00       		.byte	0
 2657 018f 49       		.uleb128 0x49
 2658 0190 13       		.uleb128 0x13
 2659 0191 2F       		.uleb128 0x2f
 2660 0192 05       		.uleb128 0x5
 2661 0193 00       		.byte	0
 2662 0194 00       		.byte	0
 2663 0195 1C       		.uleb128 0x1c
 2664 0196 34       		.uleb128 0x34
 2665 0197 00       		.byte	0
 2666 0198 03       		.uleb128 0x3
 2667 0199 0E       		.uleb128 0xe
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 53


 2668 019a 3A       		.uleb128 0x3a
 2669 019b 0B       		.uleb128 0xb
 2670 019c 3B       		.uleb128 0x3b
 2671 019d 05       		.uleb128 0x5
 2672 019e 49       		.uleb128 0x49
 2673 019f 13       		.uleb128 0x13
 2674 01a0 3F       		.uleb128 0x3f
 2675 01a1 19       		.uleb128 0x19
 2676 01a2 3C       		.uleb128 0x3c
 2677 01a3 19       		.uleb128 0x19
 2678 01a4 00       		.byte	0
 2679 01a5 00       		.byte	0
 2680 01a6 1D       		.uleb128 0x1d
 2681 01a7 34       		.uleb128 0x34
 2682 01a8 00       		.byte	0
 2683 01a9 03       		.uleb128 0x3
 2684 01aa 0E       		.uleb128 0xe
 2685 01ab 3A       		.uleb128 0x3a
 2686 01ac 0B       		.uleb128 0xb
 2687 01ad 3B       		.uleb128 0x3b
 2688 01ae 0B       		.uleb128 0xb
 2689 01af 49       		.uleb128 0x49
 2690 01b0 13       		.uleb128 0x13
 2691 01b1 3F       		.uleb128 0x3f
 2692 01b2 19       		.uleb128 0x19
 2693 01b3 02       		.uleb128 0x2
 2694 01b4 18       		.uleb128 0x18
 2695 01b5 00       		.byte	0
 2696 01b6 00       		.byte	0
 2697 01b7 1E       		.uleb128 0x1e
 2698 01b8 34       		.uleb128 0x34
 2699 01b9 00       		.byte	0
 2700 01ba 03       		.uleb128 0x3
 2701 01bb 08       		.uleb128 0x8
 2702 01bc 3A       		.uleb128 0x3a
 2703 01bd 0B       		.uleb128 0xb
 2704 01be 3B       		.uleb128 0x3b
 2705 01bf 0B       		.uleb128 0xb
 2706 01c0 49       		.uleb128 0x49
 2707 01c1 13       		.uleb128 0x13
 2708 01c2 3F       		.uleb128 0x3f
 2709 01c3 19       		.uleb128 0x19
 2710 01c4 02       		.uleb128 0x2
 2711 01c5 18       		.uleb128 0x18
 2712 01c6 00       		.byte	0
 2713 01c7 00       		.byte	0
 2714 01c8 00       		.byte	0
 2715              		.section	.debug_aranges,"",%progbits
 2716 0000 6C000000 		.4byte	0x6c
 2717 0004 0200     		.2byte	0x2
 2718 0006 00000000 		.4byte	.Ldebug_info0
 2719 000a 04       		.byte	0x4
 2720 000b 00       		.byte	0
 2721 000c 0000     		.2byte	0
 2722 000e 0000     		.2byte	0
 2723 0010 00000000 		.4byte	.LFB64
 2724 0014 14000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 54


 2725 0018 00000000 		.4byte	.LFB65
 2726 001c 14000000 		.4byte	.LFE65-.LFB65
 2727 0020 00000000 		.4byte	.LFB66
 2728 0024 28000000 		.4byte	.LFE66-.LFB66
 2729 0028 00000000 		.4byte	.LFB67
 2730 002c 70000000 		.4byte	.LFE67-.LFB67
 2731 0030 00000000 		.4byte	.LFB68
 2732 0034 1C000000 		.4byte	.LFE68-.LFB68
 2733 0038 00000000 		.4byte	.LFB69
 2734 003c 00010000 		.4byte	.LFE69-.LFB69
 2735 0040 00000000 		.4byte	.LFB70
 2736 0044 1C010000 		.4byte	.LFE70-.LFB70
 2737 0048 00000000 		.4byte	.LFB71
 2738 004c CC000000 		.4byte	.LFE71-.LFB71
 2739 0050 00000000 		.4byte	.LFB72
 2740 0054 8E000000 		.4byte	.LFE72-.LFB72
 2741 0058 00000000 		.4byte	.LFB73
 2742 005c 98000000 		.4byte	.LFE73-.LFB73
 2743 0060 00000000 		.4byte	.LFB74
 2744 0064 2A000000 		.4byte	.LFE74-.LFB74
 2745 0068 00000000 		.4byte	0
 2746 006c 00000000 		.4byte	0
 2747              		.section	.debug_ranges,"",%progbits
 2748              	.Ldebug_ranges0:
 2749 0000 70000000 		.4byte	.LBB3
 2750 0004 C0000000 		.4byte	.LBE3
 2751 0008 D2000000 		.4byte	.LBB4
 2752 000c D4000000 		.4byte	.LBE4
 2753 0010 00000000 		.4byte	0
 2754 0014 00000000 		.4byte	0
 2755 0018 00000000 		.4byte	.LFB64
 2756 001c 14000000 		.4byte	.LFE64
 2757 0020 00000000 		.4byte	.LFB65
 2758 0024 14000000 		.4byte	.LFE65
 2759 0028 00000000 		.4byte	.LFB66
 2760 002c 28000000 		.4byte	.LFE66
 2761 0030 00000000 		.4byte	.LFB67
 2762 0034 70000000 		.4byte	.LFE67
 2763 0038 00000000 		.4byte	.LFB68
 2764 003c 1C000000 		.4byte	.LFE68
 2765 0040 00000000 		.4byte	.LFB69
 2766 0044 00010000 		.4byte	.LFE69
 2767 0048 00000000 		.4byte	.LFB70
 2768 004c 1C010000 		.4byte	.LFE70
 2769 0050 00000000 		.4byte	.LFB71
 2770 0054 CC000000 		.4byte	.LFE71
 2771 0058 00000000 		.4byte	.LFB72
 2772 005c 8E000000 		.4byte	.LFE72
 2773 0060 00000000 		.4byte	.LFB73
 2774 0064 98000000 		.4byte	.LFE73
 2775 0068 00000000 		.4byte	.LFB74
 2776 006c 2A000000 		.4byte	.LFE74
 2777 0070 00000000 		.4byte	0
 2778 0074 00000000 		.4byte	0
 2779              		.section	.debug_line,"",%progbits
 2780              	.Ldebug_line0:
 2781 0000 15030000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 55


 2781      0200CB01 
 2781      00000201 
 2781      FB0E0D00 
 2781      01010101 
 2782              	.LASF131:
 2783 0000 74696D65 		.ascii	"timeToValve\000"
 2783      546F5661 
 2783      6C766500 
 2784              	.LASF19:
 2785 000c 75696E74 		.ascii	"uint16\000"
 2785      313600
 2786              	.LASF30:
 2787 0013 6E756D5F 		.ascii	"num_invalid_readings\000"
 2787      696E7661 
 2787      6C69645F 
 2787      72656164 
 2787      696E6773 
 2788              	.LASF134:
 2789 0028 433A5C55 		.ascii	"C:\\Users\\dantz\\Documents\\GitHub\\notoriOS\\noto"
 2789      73657273 
 2789      5C64616E 
 2789      747A5C44 
 2789      6F63756D 
 2790 0055 72694F53 		.ascii	"riOS.cydsn\000"
 2790      2E637964 
 2790      736E00
 2791              	.LASF104:
 2792 0060 62756666 		.ascii	"buffer_overflow\000"
 2792      65725F6F 
 2792      76657266 
 2792      6C6F7700 
 2793              	.LASF4:
 2794 0070 5F5F7569 		.ascii	"__uint8_t\000"
 2794      6E74385F 
 2794      7400
 2795              	.LASF61:
 2796 007a 636F756E 		.ascii	"countDownResetCondition\000"
 2796      74446F77 
 2796      6E526573 
 2796      6574436F 
 2796      6E646974 
 2797              	.LASF132:
 2798 0092 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2798      43313120 
 2798      352E342E 
 2798      31203230 
 2798      31363036 
 2799 00c5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2799      20726576 
 2799      6973696F 
 2799      6E203233 
 2799      37373135 
 2800 00f8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2800      66756E63 
 2800      74696F6E 
 2800      2D736563 
 2800      74696F6E 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 56


 2801              	.LASF90:
 2802 0120 75617274 		.ascii	"uart_chars\000"
 2802      5F636861 
 2802      727300
 2803              	.LASF9:
 2804 012b 6C6F6E67 		.ascii	"long long unsigned int\000"
 2804      206C6F6E 
 2804      6720756E 
 2804      7369676E 
 2804      65642069 
 2805              	.LASF108:
 2806 0142 6D6F6465 		.ascii	"modem_state\000"
 2806      6D5F7374 
 2806      61746500 
 2807              	.LASF83:
 2808 014e 74657374 		.ascii	"test\000"
 2808      00
 2809              	.LASF119:
 2810 0153 616C6172 		.ascii	"alarmMeasure\000"
 2810      6D4D6561 
 2810      73757265 
 2810      00
 2811              	.LASF95:
 2812 0160 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2812      52784275 
 2812      66666572 
 2812      00
 2813              	.LASF133:
 2814 016d 6C657665 		.ascii	"level_sensor.c\000"
 2814      6C5F7365 
 2814      6E736F72 
 2814      2E6300
 2815              	.LASF87:
 2816 017c 6D656469 		.ascii	"median\000"
 2816      616E00
 2817              	.LASF127:
 2818 0183 74696D65 		.ascii	"timetoLevelSensor\000"
 2818      746F4C65 
 2818      76656C53 
 2818      656E736F 
 2818      7200
 2819              	.LASF110:
 2820 0195 6D6F6465 		.ascii	"modem_stats\000"
 2820      6D5F7374 
 2820      61747300 
 2821              	.LASF8:
 2822 01a1 6C6F6E67 		.ascii	"long long int\000"
 2822      206C6F6E 
 2822      6720696E 
 2822      7400
 2823              	.LASF0:
 2824 01af 7369676E 		.ascii	"signed char\000"
 2824      65642063 
 2824      68617200 
 2825              	.LASF41:
 2826 01bb 65636E6F 		.ascii	"ecno\000"
 2826      00
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 57


 2827              	.LASF58:
 2828 01c0 636F756E 		.ascii	"countDownValue\000"
 2828      74446F77 
 2828      6E56616C 
 2828      756500
 2829              	.LASF120:
 2830 01cf 74696D65 		.ascii	"timeToMeasure\000"
 2830      546F4D65 
 2830      61737572 
 2830      6500
 2831              	.LASF44:
 2832 01dd 74696D65 		.ascii	"time_to_network_connect\000"
 2832      5F746F5F 
 2832      6E657477 
 2832      6F726B5F 
 2832      636F6E6E 
 2833              	.LASF122:
 2834 01f5 74696D65 		.ascii	"timeToSync\000"
 2834      546F5379 
 2834      6E6300
 2835              	.LASF73:
 2836 0200 6C657665 		.ascii	"level_sensor\000"
 2836      6C5F7365 
 2836      6E736F72 
 2836      00
 2837              	.LASF115:
 2838 020d 68747470 		.ascii	"http_body\000"
 2838      5F626F64 
 2838      7900
 2839              	.LASF100:
 2840 0217 76616C76 		.ascii	"valve_diameter\000"
 2840      655F6469 
 2840      616D6574 
 2840      657200
 2841              	.LASF38:
 2842 0226 6D6F6465 		.ascii	"modem_info_t\000"
 2842      6D5F696E 
 2842      666F5F74 
 2842      00
 2843              	.LASF128:
 2844 0233 616C6172 		.ascii	"alarmDownstreamLevelSensor\000"
 2844      6D446F77 
 2844      6E737472 
 2844      65616D4C 
 2844      6576656C 
 2845              	.LASF39:
 2846 024e 72786C65 		.ascii	"rxlev\000"
 2846      7600
 2847              	.LASF6:
 2848 0254 6C6F6E67 		.ascii	"long int\000"
 2848      20696E74 
 2848      00
 2849              	.LASF59:
 2850 025d 63757272 		.ascii	"currentCountDownValue\000"
 2850      656E7443 
 2850      6F756E74 
 2850      446F776E 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 58


 2850      56616C75 
 2851              	.LASF62:
 2852 0273 616C6172 		.ascii	"alarm\000"
 2852      6D00
 2853              	.LASF18:
 2854 0279 75696E74 		.ascii	"uint8\000"
 2854      3800
 2855              	.LASF79:
 2856 027f 6C657665 		.ascii	"level_sensor_output\000"
 2856      6C5F7365 
 2856      6E736F72 
 2856      5F6F7574 
 2856      70757400 
 2857              	.LASF125:
 2858 0293 74696D65 		.ascii	"timeToAppLED\000"
 2858      546F4170 
 2858      704C4544 
 2858      00
 2859              	.LASF21:
 2860 02a0 696E7433 		.ascii	"int32\000"
 2860      3200
 2861              	.LASF47:
 2862 02a6 6E6F6465 		.ascii	"node_type\000"
 2862      5F747970 
 2862      6500
 2863              	.LASF81:
 2864 02b0 72656164 		.ascii	"reading\000"
 2864      696E6700 
 2865              	.LASF86:
 2866 02b8 61727261 		.ascii	"array\000"
 2866      7900
 2867              	.LASF64:
 2868 02be 63686970 		.ascii	"chip_uniqueId\000"
 2868      5F756E69 
 2868      71756549 
 2868      6400
 2869              	.LASF36:
 2870 02cc 6D6F6465 		.ascii	"model_id\000"
 2870      6C5F6964 
 2870      00
 2871              	.LASF27:
 2872 02d5 616C6C5F 		.ascii	"all_level_readings\000"
 2872      6C657665 
 2872      6C5F7265 
 2872      6164696E 
 2872      677300
 2873              	.LASF92:
 2874 02e8 6C696E65 		.ascii	"line\000"
 2874      00
 2875              	.LASF88:
 2876 02ed 736F7274 		.ascii	"sort\000"
 2876      00
 2877              	.LASF51:
 2878 02f2 64656275 		.ascii	"debug_level\000"
 2878      675F6C65 
 2878      76656C00 
 2879              	.LASF32:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 59


 2880 02fe 76616C75 		.ascii	"value\000"
 2880      6500
 2881              	.LASF121:
 2882 0304 616C6172 		.ascii	"alarmSync\000"
 2882      6D53796E 
 2882      6300
 2883              	.LASF112:
 2884 030e 4170705F 		.ascii	"App_LED_enabled\000"
 2884      4C45445F 
 2884      656E6162 
 2884      6C656400 
 2885              	.LASF34:
 2886 031e 6B65795F 		.ascii	"key_value_t\000"
 2886      76616C75 
 2886      655F7400 
 2887              	.LASF29:
 2888 032a 6E756D5F 		.ascii	"num_valid_readings\000"
 2888      76616C69 
 2888      645F7265 
 2888      6164696E 
 2888      677300
 2889              	.LASF7:
 2890 033d 6C6F6E67 		.ascii	"long unsigned int\000"
 2890      20756E73 
 2890      69676E65 
 2890      6420696E 
 2890      7400
 2891              	.LASF69:
 2892 034f 75617274 		.ascii	"uart_string\000"
 2892      5F737472 
 2892      696E6700 
 2893              	.LASF107:
 2894 035b 64617461 		.ascii	"data\000"
 2894      00
 2895              	.LASF67:
 2896 0360 65705F70 		.ascii	"ep_port\000"
 2896      6F727400 
 2897              	.LASF63:
 2898 0368 6D6F6465 		.ascii	"modem_info\000"
 2898      6D5F696E 
 2898      666F00
 2899              	.LASF66:
 2900 0373 65705F68 		.ascii	"ep_host\000"
 2900      6F737400 
 2901              	.LASF103:
 2902 037b 76616C76 		.ascii	"valve_inbox\000"
 2902      655F696E 
 2902      626F7800 
 2903              	.LASF84:
 2904 0387 73656E73 		.ascii	"sensor\000"
 2904      6F7200
 2905              	.LASF45:
 2906 038e 74696D65 		.ascii	"time_to_acquire_ip\000"
 2906      5F746F5F 
 2906      61637175 
 2906      6972655F 
 2906      697000
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 60


 2907              	.LASF2:
 2908 03a1 73686F72 		.ascii	"short int\000"
 2908      7420696E 
 2908      7400
 2909              	.LASF124:
 2910 03ab 616C6172 		.ascii	"alarmAppLED\000"
 2910      6D417070 
 2910      4C454400 
 2911              	.LASF109:
 2912 03b7 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2912      6D5F7374 
 2912      6172745F 
 2912      74696D65 
 2912      5F737461 
 2913              	.LASF99:
 2914 03ce 646F776E 		.ascii	"downstream_level_sensor_enabled\000"
 2914      73747265 
 2914      616D5F6C 
 2914      6576656C 
 2914      5F73656E 
 2915              	.LASF65:
 2916 03ee 7379735F 		.ascii	"sys_info_t\000"
 2916      696E666F 
 2916      5F7400
 2917              	.LASF57:
 2918 03f9 75706461 		.ascii	"updatable_parameters_t\000"
 2918      7461626C 
 2918      655F7061 
 2918      72616D65 
 2918      74657273 
 2919              	.LASF105:
 2920 0410 64617461 		.ascii	"dataPointsInStack\000"
 2920      506F696E 
 2920      7473496E 
 2920      53746163 
 2920      6B00
 2921              	.LASF91:
 2922 0422 6E756D5F 		.ascii	"num_chars\000"
 2922      63686172 
 2922      7300
 2923              	.LASF101:
 2924 042c 76616C76 		.ascii	"valve_type\000"
 2924      655F7479 
 2924      706500
 2925              	.LASF22:
 2926 0437 666C6F61 		.ascii	"float32\000"
 2926      74333200 
 2927              	.LASF71:
 2928 043f 4C657665 		.ascii	"Level_Sensor_ISR\000"
 2928      6C5F5365 
 2928      6E736F72 
 2928      5F495352 
 2928      00
 2929              	.LASF14:
 2930 0450 73697A65 		.ascii	"sizetype\000"
 2930      74797065 
 2930      00
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 61


 2931              	.LASF129:
 2932 0459 74696D65 		.ascii	"timetoDownstreamLevelSensor\000"
 2932      746F446F 
 2932      776E7374 
 2932      7265616D 
 2932      4C657665 
 2933              	.LASF23:
 2934 0475 74657374 		.ascii	"test_name\000"
 2934      5F6E616D 
 2934      6500
 2935              	.LASF123:
 2936 047f 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2936      546F5379 
 2936      636E5265 
 2936      6D6F7465 
 2936      50617261 
 2937              	.LASF33:
 2938 0496 74696D65 		.ascii	"timeStamp\000"
 2938      5374616D 
 2938      7000
 2939              	.LASF93:
 2940 04a0 6D617463 		.ascii	"match\000"
 2940      6800
 2941              	.LASF111:
 2942 04a6 75706461 		.ascii	"updatable_parameters\000"
 2942      7461626C 
 2942      655F7061 
 2942      72616D65 
 2942      74657273 
 2943              	.LASF70:
 2944 04bb 75617274 		.ascii	"uart_len\000"
 2944      5F6C656E 
 2944      00
 2945              	.LASF94:
 2946 04c4 70617474 		.ascii	"pattern\000"
 2946      65726E00 
 2947              	.LASF89:
 2948 04cc 73776170 		.ascii	"swap\000"
 2948      00
 2949              	.LASF75:
 2950 04d1 636F6D70 		.ascii	"compare_location\000"
 2950      6172655F 
 2950      6C6F6361 
 2950      74696F6E 
 2950      00
 2951              	.LASF17:
 2952 04e2 666C6F61 		.ascii	"float\000"
 2952      7400
 2953              	.LASF82:
 2954 04e8 6C657665 		.ascii	"level_sensor_test\000"
 2954      6C5F7365 
 2954      6E736F72 
 2954      5F746573 
 2954      7400
 2955              	.LASF31:
 2956 04fa 6C657665 		.ascii	"level_sensor_t\000"
 2956      6C5F7365 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 62


 2956      6E736F72 
 2956      5F7400
 2957              	.LASF80:
 2958 0509 746F6B65 		.ascii	"token\000"
 2958      6E00
 2959              	.LASF56:
 2960 050f 5F426F6F 		.ascii	"_Bool\000"
 2960      6C00
 2961              	.LASF12:
 2962 0515 696E7433 		.ascii	"int32_t\000"
 2962      325F7400 
 2963              	.LASF1:
 2964 051d 756E7369 		.ascii	"unsigned char\000"
 2964      676E6564 
 2964      20636861 
 2964      7200
 2965              	.LASF118:
 2966 052b 73797374 		.ascii	"system_settings\000"
 2966      656D5F73 
 2966      65747469 
 2966      6E677300 
 2967              	.LASF26:
 2968 053b 74657374 		.ascii	"test_t\000"
 2968      5F7400
 2969              	.LASF43:
 2970 0542 72737270 		.ascii	"rsrp\000"
 2970      00
 2971              	.LASF42:
 2972 0547 72737271 		.ascii	"rsrq\000"
 2972      00
 2973              	.LASF50:
 2974 054c 73796E63 		.ascii	"sync_time\000"
 2974      5F74696D 
 2974      6500
 2975              	.LASF135:
 2976 0556 75617274 		.ascii	"uart_clear\000"
 2976      5F636C65 
 2976      617200
 2977              	.LASF40:
 2978 0561 72736370 		.ascii	"rscp\000"
 2978      00
 2979              	.LASF117:
 2980 0566 73797374 		.ascii	"system_info\000"
 2980      656D5F69 
 2980      6E666F00 
 2981              	.LASF37:
 2982 0572 696D6569 		.ascii	"imei\000"
 2982      00
 2983              	.LASF25:
 2984 0577 72656173 		.ascii	"reason\000"
 2984      6F6E00
 2985              	.LASF74:
 2986 057e 72785F63 		.ascii	"rx_char\000"
 2986      68617200 
 2987              	.LASF46:
 2988 0586 6D6F6465 		.ascii	"modem_stats_t\000"
 2988      6D5F7374 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 63


 2988      6174735F 
 2988      7400
 2989              	.LASF126:
 2990 0594 616C6172 		.ascii	"alarmLevelSensor\000"
 2990      6D4C6576 
 2990      656C5365 
 2990      6E736F72 
 2990      00
 2991              	.LASF53:
 2992 05a5 4C657665 		.ascii	"Level_Sensor_freq\000"
 2992      6C5F5365 
 2992      6E736F72 
 2992      5F667265 
 2992      7100
 2993              	.LASF96:
 2994 05b7 6C657665 		.ascii	"level_sensor_inbox\000"
 2994      6C5F7365 
 2994      6E736F72 
 2994      5F696E62 
 2994      6F7800
 2995              	.LASF13:
 2996 05ca 6C6F6E67 		.ascii	"long double\000"
 2996      20646F75 
 2996      626C6500 
 2997              	.LASF76:
 2998 05d6 635F7469 		.ascii	"c_timeStamp\000"
 2998      6D655374 
 2998      616D7000 
 2999              	.LASF15:
 3000 05e2 63686172 		.ascii	"char\000"
 3000      00
 3001              	.LASF10:
 3002 05e7 756E7369 		.ascii	"unsigned int\000"
 3002      676E6564 
 3002      20696E74 
 3002      00
 3003              	.LASF130:
 3004 05f4 616C6172 		.ascii	"alarmValve\000"
 3004      6D56616C 
 3004      766500
 3005              	.LASF116:
 3006 05ff 68747470 		.ascii	"http_route\000"
 3006      5F726F75 
 3006      746500
 3007              	.LASF5:
 3008 060a 5F5F696E 		.ascii	"__int32_t\000"
 3008      7433325F 
 3008      7400
 3009              	.LASF49:
 3010 0614 6D656173 		.ascii	"measure_time\000"
 3010      7572655F 
 3010      74696D65 
 3010      00
 3011              	.LASF77:
 3012 0621 6D5F6C65 		.ascii	"m_level_sensor\000"
 3012      76656C5F 
 3012      73656E73 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 64


 3012      6F7200
 3013              	.LASF28:
 3014 0630 6C657665 		.ascii	"level_reading\000"
 3014      6C5F7265 
 3014      6164696E 
 3014      6700
 3015              	.LASF3:
 3016 063e 73686F72 		.ascii	"short unsigned int\000"
 3016      7420756E 
 3016      7369676E 
 3016      65642069 
 3016      6E7400
 3017              	.LASF35:
 3018 0651 73696D5F 		.ascii	"sim_id\000"
 3018      696400
 3019              	.LASF72:
 3020 0658 4C657665 		.ascii	"Level_Sensor_Update\000"
 3020      6C5F5365 
 3020      6E736F72 
 3020      5F557064 
 3020      61746500 
 3021              	.LASF54:
 3022 066c 446F776E 		.ascii	"Downstream_Level_Sensor_freq\000"
 3022      73747265 
 3022      616D5F4C 
 3022      6576656C 
 3022      5F53656E 
 3023              	.LASF102:
 3024 0689 76616C76 		.ascii	"valve_enabled\000"
 3024      655F656E 
 3024      61626C65 
 3024      6400
 3025              	.LASF136:
 3026 0697 66696E64 		.ascii	"find_median\000"
 3026      5F6D6564 
 3026      69616E00 
 3027              	.LASF24:
 3028 06a3 73746174 		.ascii	"status\000"
 3028      757300
 3029              	.LASF97:
 3030 06aa 6C657665 		.ascii	"level_sensor_enabled\000"
 3030      6C5F7365 
 3030      6E736F72 
 3030      5F656E61 
 3030      626C6564 
 3031              	.LASF106:
 3032 06bf 64617461 		.ascii	"dataPointsInStackDesired\000"
 3032      506F696E 
 3032      7473496E 
 3032      53746163 
 3032      6B446573 
 3033              	.LASF52:
 3034 06d8 4170705F 		.ascii	"App_LED_freq\000"
 3034      4C45445F 
 3034      66726571 
 3034      00
 3035              	.LASF78:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccgepk9e.s 			page 65


 3036 06e5 6C657665 		.ascii	"level_sensor_take_reading\000"
 3036      6C5F7365 
 3036      6E736F72 
 3036      5F74616B 
 3036      655F7265 
 3037              	.LASF68:
 3038 06ff 7379735F 		.ascii	"sys_settings_t\000"
 3038      73657474 
 3038      696E6773 
 3038      5F7400
 3039              	.LASF11:
 3040 070e 75696E74 		.ascii	"uint8_t\000"
 3040      385F7400 
 3041              	.LASF20:
 3042 0716 696E7431 		.ascii	"int16\000"
 3042      3600
 3043              	.LASF60:
 3044 071c 636F756E 		.ascii	"countDownType\000"
 3044      74446F77 
 3044      6E547970 
 3044      6500
 3045              	.LASF48:
 3046 072a 73696D5F 		.ascii	"sim_type\000"
 3046      74797065 
 3046      00
 3047              	.LASF55:
 3048 0733 76616C76 		.ascii	"valve_freq\000"
 3048      655F6672 
 3048      657100
 3049              	.LASF85:
 3050 073e 6D657373 		.ascii	"message\000"
 3050      61676500 
 3051              	.LASF114:
 3052 0746 68747470 		.ascii	"http_request\000"
 3052      5F726571 
 3052      75657374 
 3052      00
 3053              	.LASF16:
 3054 0753 646F7562 		.ascii	"double\000"
 3054      6C6500
 3055              	.LASF113:
 3056 075a 6170705F 		.ascii	"app_led_inbox\000"
 3056      6C65645F 
 3056      696E626F 
 3056      7800
 3057              	.LASF98:
 3058 0768 646F776E 		.ascii	"downstream_level_sensor_inbox\000"
 3058      73747265 
 3058      616D5F6C 
 3058      6576656C 
 3058      5F73656E 
 3059              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
