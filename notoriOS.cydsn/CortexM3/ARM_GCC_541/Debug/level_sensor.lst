ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"level_sensor.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	level_sensor_inbox,100,4
  20              		.comm	buffer_overflow,1,1
  21              		.comm	dataPointsInStack,2,2
  22              		.comm	dataPointsInStackDesired,2,2
  23              		.comm	data,6600,4
  24              		.comm	modem_state,1,1
  25              		.comm	modem_start_time_stamp,4,4
  26              		.comm	modem_info,60,4
  27              		.comm	modem_stats,32,4
  28              		.comm	updatable_parameters,7,4
  29              		.syntax unified
  30              		.global _printf_float
  31              		.thumb
  32              		.syntax unified
  33              		.comm	app_led_inbox,100,4
  34              		.comm	http_request,10000,4
  35              		.comm	http_body,10000,4
  36              		.comm	http_route,200,4
  37              		.comm	system_info,28,4
  38              		.comm	system_settings,104,4
  39              		.comm	alarmMeasure,6,4
  40              		.comm	timeToMeasure,1,1
  41              		.comm	alarmSync,6,4
  42              		.comm	timeToSync,1,1
  43              		.comm	timeToSycnRemoteParams,1,1
  44              		.comm	hey,1,1
  45              		.comm	alarmAppLED,6,4
  46              		.comm	timeToAppLED,1,1
  47              		.comm	alarmLevelSensor,6,4
  48              		.comm	timetoLevelSensor,1,1
  49              		.bss
  50              		.align	2
  51              	uart_chars:
  52 0000 00000000 		.space	257
  52      00000000 
  52      00000000 
  52      00000000 
  52      00000000 
  53              	num_chars:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 2


  54 0101 00       		.space	1
  55              		.data
  56              		.align	2
  57              		.type	line, %object
  58              		.size	line, 4
  59              	line:
  60 0000 00000000 		.word	uart_chars
  61              		.bss
  62 0102 0000     		.align	2
  63              	match:
  64 0104 00000000 		.space	4
  65              		.align	2
  66              	pattern:
  67 0108 00000000 		.space	4
  68              		.section	.text.uart_string,"ax",%progbits
  69              		.align	2
  70              		.global	uart_string
  71              		.thumb
  72              		.thumb_func
  73              		.type	uart_string, %function
  74              	uart_string:
  75              	.LFB64:
  76              		.file 1 "level_sensor.c"
   1:level_sensor.c **** #include "level_sensor.h"
   2:level_sensor.c **** #include "notoriOS.h"
   3:level_sensor.c **** #include "debug.h"
   4:level_sensor.c **** 
   5:level_sensor.c **** /* === Driver Functions === */
   6:level_sensor.c **** 
   7:level_sensor.c **** //Sensor related global calls
   8:level_sensor.c **** 
   9:level_sensor.c **** 
  10:level_sensor.c **** // Circular buffer of recently received chars.
  11:level_sensor.c **** // Initialize all the members of the array uart_chars to 0. 
  12:level_sensor.c **** static char uart_chars[257] = {0};
  13:level_sensor.c **** static uint8_t num_chars = 0;
  14:level_sensor.c **** 
  15:level_sensor.c **** static const char *line = uart_chars;
  16:level_sensor.c **** // Only pointers can be null, where null is a special address used to signify that the pointer is n
  17:level_sensor.c **** // Pointers are not initialized to null by default, you must do so if you want them initialized.
  18:level_sensor.c **** static const char *match = NULL;
  19:level_sensor.c **** static const char *pattern = NULL;
  20:level_sensor.c **** 
  21:level_sensor.c **** 
  22:level_sensor.c **** // This is only defined in c file so this function will return the location in memory where that va
  23:level_sensor.c **** const char *uart_string(void) {
  77              		.loc 1 23 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 1, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82 0000 80B4     		push	{r7}
  83              		.cfi_def_cfa_offset 4
  84              		.cfi_offset 7, -4
  85 0002 00AF     		add	r7, sp, #0
  86              		.cfi_def_cfa_register 7
  24:level_sensor.c ****     // Variables in front of a variable is casting 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 3


  25:level_sensor.c ****     // uart_chars may be a different variable type, make sure to cast it as a char
  26:level_sensor.c ****   return (char*)uart_chars;
  87              		.loc 1 26 0
  88 0004 024B     		ldr	r3, .L3
  27:level_sensor.c **** }
  89              		.loc 1 27 0
  90 0006 1846     		mov	r0, r3
  91 0008 BD46     		mov	sp, r7
  92              		.cfi_def_cfa_register 13
  93              		@ sp needed
  94 000a 80BC     		pop	{r7}
  95              		.cfi_restore 7
  96              		.cfi_def_cfa_offset 0
  97 000c 7047     		bx	lr
  98              	.L4:
  99 000e 00BF     		.align	2
 100              	.L3:
 101 0010 00000000 		.word	uart_chars
 102              		.cfi_endproc
 103              	.LFE64:
 104              		.size	uart_string, .-uart_string
 105              		.section	.text.uart_len,"ax",%progbits
 106              		.align	2
 107              		.global	uart_len
 108              		.thumb
 109              		.thumb_func
 110              		.type	uart_len, %function
 111              	uart_len:
 112              	.LFB65:
  28:level_sensor.c **** 
  29:level_sensor.c **** // Return the number of characters of the level sensor reading
  30:level_sensor.c **** uint8_t uart_len(void) {
 113              		.loc 1 30 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118 0000 80B4     		push	{r7}
 119              		.cfi_def_cfa_offset 4
 120              		.cfi_offset 7, -4
 121 0002 00AF     		add	r7, sp, #0
 122              		.cfi_def_cfa_register 7
  31:level_sensor.c ****   return num_chars;
 123              		.loc 1 31 0
 124 0004 024B     		ldr	r3, .L7
 125 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  32:level_sensor.c **** }
 126              		.loc 1 32 0
 127 0008 1846     		mov	r0, r3
 128 000a BD46     		mov	sp, r7
 129              		.cfi_def_cfa_register 13
 130              		@ sp needed
 131 000c 80BC     		pop	{r7}
 132              		.cfi_restore 7
 133              		.cfi_def_cfa_offset 0
 134 000e 7047     		bx	lr
 135              	.L8:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 4


 136              		.align	2
 137              	.L7:
 138 0010 01010000 		.word	num_chars
 139              		.cfi_endproc
 140              	.LFE65:
 141              		.size	uart_len, .-uart_len
 142              		.section	.text.uart_clear,"ax",%progbits
 143              		.align	2
 144              		.global	uart_clear
 145              		.thumb
 146              		.thumb_func
 147              		.type	uart_clear, %function
 148              	uart_clear:
 149              	.LFB66:
  33:level_sensor.c **** 
  34:level_sensor.c **** // Clears the sensor data 
  35:level_sensor.c **** void uart_clear(void) {
 150              		.loc 1 35 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 1, uses_anonymous_args = 0
 154 0000 80B5     		push	{r7, lr}
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 7, -8
 157              		.cfi_offset 14, -4
 158 0002 00AF     		add	r7, sp, #0
 159              		.cfi_def_cfa_register 7
  36:level_sensor.c ****   // UART_ClearRxBuffer(): Clears the receiver memory buffer and hardware RX FIFO of all received d
  37:level_sensor.c ****   Level_Sensor_UART_ClearRxBuffer();
 160              		.loc 1 37 0
 161 0004 FFF7FEFF 		bl	Level_Sensor_UART_ClearRxBuffer
  38:level_sensor.c ****   // void *memset(void *str, int c, size_t n) where str is a pointer to the block of memory to fill
  39:level_sensor.c ****   // The value is passed as an int, but the function fills the block of memory using the unsigned c
  40:level_sensor.c ****   // n is the number of bytes to be set to the value.
  41:level_sensor.c ****   memset((void*)uart_chars, 0, 256);
 162              		.loc 1 41 0
 163 0008 4FF48072 		mov	r2, #256
 164 000c 0021     		movs	r1, #0
 165 000e 0448     		ldr	r0, .L10
 166 0010 FFF7FEFF 		bl	memset
  42:level_sensor.c ****   num_chars = 0;
 167              		.loc 1 42 0
 168 0014 034B     		ldr	r3, .L10+4
 169 0016 0022     		movs	r2, #0
 170 0018 1A70     		strb	r2, [r3]
  43:level_sensor.c **** }
 171              		.loc 1 43 0
 172 001a 00BF     		nop
 173 001c 80BD     		pop	{r7, pc}
 174              	.L11:
 175 001e 00BF     		.align	2
 176              	.L10:
 177 0020 00000000 		.word	uart_chars
 178 0024 01010000 		.word	num_chars
 179              		.cfi_endproc
 180              	.LFE66:
 181              		.size	uart_clear, .-uart_clear
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 5


 182              		.section	.text.Level_Sensor_ISR,"ax",%progbits
 183              		.align	2
 184              		.global	Level_Sensor_ISR
 185              		.thumb
 186              		.thumb_func
 187              		.type	Level_Sensor_ISR, %function
 188              	Level_Sensor_ISR:
 189              	.LFB67:
  44:level_sensor.c **** 
  45:level_sensor.c **** // ISR: Interrupt Service Routine
  46:level_sensor.c **** CY_ISR(Level_Sensor_ISR) {
 190              		.loc 1 46 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 8
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194 0000 80B5     		push	{r7, lr}
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 0002 82B0     		sub	sp, sp, #8
 199              		.cfi_def_cfa_offset 16
 200 0004 00AF     		add	r7, sp, #0
 201              		.cfi_def_cfa_register 7
  47:level_sensor.c ****     /* Store received char in uart_chars.
  48:level_sensor.c ****     Returns the last received byte of data. Level_Sensor_UART_GetChar() is designed for ASCII chara
  49:level_sensor.c ****     1 to 255 are values for valid characters and 0 indicats an error occurred or no data is present
  50:level_sensor.c ****     char rx_char = Level_Sensor_UART_GetChar();
 202              		.loc 1 50 0
 203 0006 FFF7FEFF 		bl	Level_Sensor_UART_GetChar
 204 000a 0346     		mov	r3, r0
 205 000c FB71     		strb	r3, [r7, #7]
  51:level_sensor.c ****     // UART_GetChar() returns data, then set the entire uart_chars array to rx_char.
  52:level_sensor.c ****     if (rx_char) uart_chars[num_chars++] = rx_char;
 206              		.loc 1 52 0
 207 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 208 0010 002B     		cmp	r3, #0
 209 0012 09D0     		beq	.L13
 210              		.loc 1 52 0 is_stmt 0 discriminator 1
 211 0014 114B     		ldr	r3, .L16
 212 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 213 0018 5A1C     		adds	r2, r3, #1
 214 001a D1B2     		uxtb	r1, r2
 215 001c 0F4A     		ldr	r2, .L16
 216 001e 1170     		strb	r1, [r2]
 217 0020 1946     		mov	r1, r3
 218 0022 0F4A     		ldr	r2, .L16+4
 219 0024 FB79     		ldrb	r3, [r7, #7]
 220 0026 5354     		strb	r3, [r2, r1]
 221              	.L13:
  53:level_sensor.c **** 
  54:level_sensor.c ****     /* Check pattern at end of line */
  55:level_sensor.c ****     if (rx_char == '\r') {
 222              		.loc 1 55 0 is_stmt 1
 223 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 224 002a 0D2B     		cmp	r3, #13
 225 002c 11D1     		bne	.L15
  56:level_sensor.c ****         // strstr(): char *strstr(const char *haystack, const char *needle). haystack - main C stri
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 6


  57:level_sensor.c ****         match = strstr(line, pattern);
 226              		.loc 1 57 0
 227 002e 0D4B     		ldr	r3, .L16+8
 228 0030 1A68     		ldr	r2, [r3]
 229 0032 0D4B     		ldr	r3, .L16+12
 230 0034 1B68     		ldr	r3, [r3]
 231 0036 1946     		mov	r1, r3
 232 0038 1046     		mov	r0, r2
 233 003a FFF7FEFF 		bl	strstr
 234 003e 0246     		mov	r2, r0
 235 0040 0A4B     		ldr	r3, .L16+16
 236 0042 1A60     		str	r2, [r3]
  58:level_sensor.c ****         line = uart_chars + num_chars;
 237              		.loc 1 58 0
 238 0044 054B     		ldr	r3, .L16
 239 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 240 0048 1A46     		mov	r2, r3
 241 004a 054B     		ldr	r3, .L16+4
 242 004c 1344     		add	r3, r3, r2
 243 004e 054A     		ldr	r2, .L16+8
 244 0050 1360     		str	r3, [r2]
 245              	.L15:
  59:level_sensor.c ****     }
  60:level_sensor.c **** }
 246              		.loc 1 60 0
 247 0052 00BF     		nop
 248 0054 0837     		adds	r7, r7, #8
 249              		.cfi_def_cfa_offset 8
 250 0056 BD46     		mov	sp, r7
 251              		.cfi_def_cfa_register 13
 252              		@ sp needed
 253 0058 80BD     		pop	{r7, pc}
 254              	.L17:
 255 005a 00BF     		.align	2
 256              	.L16:
 257 005c 01010000 		.word	num_chars
 258 0060 00000000 		.word	uart_chars
 259 0064 00000000 		.word	line
 260 0068 08010000 		.word	pattern
 261 006c 04010000 		.word	match
 262              		.cfi_endproc
 263              	.LFE67:
 264              		.size	Level_Sensor_ISR, .-Level_Sensor_ISR
 265              		.section	.text.Level_Sensor_Update,"ax",%progbits
 266              		.align	2
 267              		.global	Level_Sensor_Update
 268              		.thumb
 269              		.thumb_func
 270              		.type	Level_Sensor_Update, %function
 271              	Level_Sensor_Update:
 272              	.LFB68:
  61:level_sensor.c **** 
  62:level_sensor.c **** void Level_Sensor_Update(char * message){
 273              		.loc 1 62 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 8
 276              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 7


 277 0000 80B5     		push	{r7, lr}
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 7, -8
 280              		.cfi_offset 14, -4
 281 0002 82B0     		sub	sp, sp, #8
 282              		.cfi_def_cfa_offset 16
 283 0004 00AF     		add	r7, sp, #0
 284              		.cfi_def_cfa_register 7
 285 0006 7860     		str	r0, [r7, #4]
  63:level_sensor.c ****     strcpy(level_sensor_inbox, message);
 286              		.loc 1 63 0
 287 0008 7968     		ldr	r1, [r7, #4]
 288 000a 0348     		ldr	r0, .L19
 289 000c FFF7FEFF 		bl	strcpy
  64:level_sensor.c **** }
 290              		.loc 1 64 0
 291 0010 00BF     		nop
 292 0012 0837     		adds	r7, r7, #8
 293              		.cfi_def_cfa_offset 8
 294 0014 BD46     		mov	sp, r7
 295              		.cfi_def_cfa_register 13
 296              		@ sp needed
 297 0016 80BD     		pop	{r7, pc}
 298              	.L20:
 299              		.align	2
 300              	.L19:
 301 0018 00000000 		.word	level_sensor_inbox
 302              		.cfi_endproc
 303              	.LFE68:
 304              		.size	Level_Sensor_Update, .-Level_Sensor_Update
 305              		.section	.rodata
 306              		.align	2
 307              	.LC0:
 308 0000 4F464600 		.ascii	"OFF\000"
 309              		.align	2
 310              	.LC1:
 311 0004 4F4E00   		.ascii	"ON\000"
 312 0007 00       		.align	2
 313              	.LC2:
 314 0008 256C6400 		.ascii	"%ld\000"
 315              		.align	2
 316              	.LC3:
 317 000c 256400   		.ascii	"%d\000"
 318 000f 00       		.align	2
 319              	.LC4:
 320 0010 6D617862 		.ascii	"maxbotix_depth=%s\000"
 320      6F746978 
 320      5F646570 
 320      74683D25 
 320      7300
 321 0022 0000     		.align	2
 322              	.LC5:
 323 0024 6D617862 		.ascii	"maxbotix_depth\000"
 323      6F746978 
 323      5F646570 
 323      746800
 324 0033 00       		.align	2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 8


 325              	.LC6:
 326 0034 612B00   		.ascii	"a+\000"
 327 0037 00       		.align	2
 328              	.LC7:
 329 0038 64617461 		.ascii	"data.txt\000"
 329      2E747874 
 329      00
 330 0041 000000   		.align	2
 331              	.LC8:
 332 0044 206D6178 		.ascii	" maxbotix_depth: \000"
 332      626F7469 
 332      785F6465 
 332      7074683A 
 332      2000
 333 0056 0000     		.align	2
 334              	.LC9:
 335 0058 2000     		.ascii	" \000"
 336 005a 0000     		.align	2
 337              	.LC10:
 338 005c 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 338      64206E6F 
 338      74206765 
 338      74207661 
 338      6C696420 
 339              		.align	2
 340              	.LC11:
 341 0088 2D3100   		.ascii	"-1\000"
 342              		.section	.text.level_sensor,"ax",%progbits
 343              		.align	2
 344              		.global	level_sensor
 345              		.thumb
 346              		.thumb_func
 347              		.type	level_sensor, %function
 348              	level_sensor:
 349              	.LFB69:
  65:level_sensor.c **** 
  66:level_sensor.c **** uint8 level_sensor(){
 350              		.loc 1 66 0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 88
 353              		@ frame_needed = 1, uses_anonymous_args = 0
 354 0000 80B5     		push	{r7, lr}
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 7, -8
 357              		.cfi_offset 14, -4
 358 0002 96B0     		sub	sp, sp, #88
 359              		.cfi_def_cfa_offset 96
 360 0004 00AF     		add	r7, sp, #0
 361              		.cfi_def_cfa_register 7
  67:level_sensor.c ****     char * compare_location;
  68:level_sensor.c ****     
  69:level_sensor.c ****     compare_location = strstr(level_sensor_inbox,"OFF");        
 362              		.loc 1 69 0
 363 0006 3049     		ldr	r1, .L27
 364 0008 3048     		ldr	r0, .L27+4
 365 000a FFF7FEFF 		bl	strstr
 366 000e 7865     		str	r0, [r7, #84]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 9


  70:level_sensor.c ****     if(compare_location!=NULL){
 367              		.loc 1 70 0
 368 0010 7B6D     		ldr	r3, [r7, #84]
 369 0012 002B     		cmp	r3, #0
 370 0014 01D0     		beq	.L22
  71:level_sensor.c ****         return 0; // this app is disabled, don't do anything
 371              		.loc 1 71 0
 372 0016 0023     		movs	r3, #0
 373 0018 52E0     		b	.L21
 374              	.L22:
  72:level_sensor.c ****     }
  73:level_sensor.c ****     
  74:level_sensor.c **** 
  75:level_sensor.c ****     compare_location = strstr(level_sensor_inbox,"ON");        
 375              		.loc 1 75 0
 376 001a 2D49     		ldr	r1, .L27+8
 377 001c 2B48     		ldr	r0, .L27+4
 378 001e FFF7FEFF 		bl	strstr
 379 0022 7865     		str	r0, [r7, #84]
  76:level_sensor.c ****     if(compare_location!=NULL){
 380              		.loc 1 76 0
 381 0024 7B6D     		ldr	r3, [r7, #84]
 382 0026 002B     		cmp	r3, #0
 383 0028 4AD0     		beq	.L24
 384              	.LBB2:
  77:level_sensor.c **** 
  78:level_sensor.c ****         // below is copied and adapted from makeMeasurements in modem.c 
  79:level_sensor.c ****         // (duplicated so that normal depth and GI nodes still work)
  80:level_sensor.c ****         
  81:level_sensor.c ****         // Get clock time and save to timeStamp
  82:level_sensor.c ****         long timeStamp = getTimeStamp();
 385              		.loc 1 82 0
 386 002a FFF7FEFF 		bl	getTimeStamp
 387 002e 3865     		str	r0, [r7, #80]
  83:level_sensor.c ****         char c_timeStamp[32];
  84:level_sensor.c ****         snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 388              		.loc 1 84 0
 389 0030 3846     		mov	r0, r7
 390 0032 3B6D     		ldr	r3, [r7, #80]
 391 0034 274A     		ldr	r2, .L27+12
 392 0036 2021     		movs	r1, #32
 393 0038 FFF7FEFF 		bl	snprintf
  85:level_sensor.c ****         
  86:level_sensor.c ****         // Holds string for value that will be written 
  87:level_sensor.c ****         char value[DATA_MAX_KEY_LENGTH];
  88:level_sensor.c ****         
  89:level_sensor.c ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
  90:level_sensor.c ****         level_sensor_t m_level_sensor;
  91:level_sensor.c ****         
  92:level_sensor.c ****         // Take level sensor readings and save them to m_level_sensor
  93:level_sensor.c ****         m_level_sensor = level_sensor_take_reading();
 394              		.loc 1 93 0
 395 003c 07F12003 		add	r3, r7, #32
 396 0040 1846     		mov	r0, r3
 397 0042 FFF7FEFF 		bl	level_sensor_take_reading
  94:level_sensor.c **** 
  95:level_sensor.c ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 10


  96:level_sensor.c ****         if(m_level_sensor.num_valid_readings > 0){
 398              		.loc 1 96 0
 399 0046 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 400 004a 002B     		cmp	r3, #0
 401 004c 2DD0     		beq	.L25
  97:level_sensor.c ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 402              		.loc 1 97 0
 403 004e B7F93630 		ldrsh	r3, [r7, #54]
 404 0052 07F13C00 		add	r0, r7, #60
 405 0056 204A     		ldr	r2, .L27+16
 406 0058 1421     		movs	r1, #20
 407 005a FFF7FEFF 		bl	snprintf
  98:level_sensor.c ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 408              		.loc 1 98 0
 409 005e 07F13C03 		add	r3, r7, #60
 410 0062 1A46     		mov	r2, r3
 411 0064 1D49     		ldr	r1, .L27+20
 412 0066 0020     		movs	r0, #0
 413 0068 FFF7FEFF 		bl	printNotif
  99:level_sensor.c ****             pushData("maxbotix_depth",value,timeStamp);
 414              		.loc 1 99 0
 415 006c 07F13C03 		add	r3, r7, #60
 416 0070 3A6D     		ldr	r2, [r7, #80]
 417 0072 1946     		mov	r1, r3
 418 0074 1A48     		ldr	r0, .L27+24
 419 0076 FFF7FEFF 		bl	pushData
 100:level_sensor.c ****             
 101:level_sensor.c ****             // Print measurement to SD card to file called data.txt
 102:level_sensor.c ****             SD_write("data.txt", "a+", c_timeStamp);
 420              		.loc 1 102 0
 421 007a 3B46     		mov	r3, r7
 422 007c 1A46     		mov	r2, r3
 423 007e 1949     		ldr	r1, .L27+28
 424 0080 1948     		ldr	r0, .L27+32
 425 0082 FFF7FEFF 		bl	SD_write
 103:level_sensor.c ****             SD_write("data.txt", "a+", " maxbotix_depth: ");
 426              		.loc 1 103 0
 427 0086 194A     		ldr	r2, .L27+36
 428 0088 1649     		ldr	r1, .L27+28
 429 008a 1748     		ldr	r0, .L27+32
 430 008c FFF7FEFF 		bl	SD_write
 104:level_sensor.c ****             SD_write("data.txt", "a+", value);
 431              		.loc 1 104 0
 432 0090 07F13C03 		add	r3, r7, #60
 433 0094 1A46     		mov	r2, r3
 434 0096 1349     		ldr	r1, .L27+28
 435 0098 1348     		ldr	r0, .L27+32
 436 009a FFF7FEFF 		bl	SD_write
 105:level_sensor.c ****             SD_write("data.txt", "a+", " ");
 437              		.loc 1 105 0
 438 009e 144A     		ldr	r2, .L27+40
 439 00a0 1049     		ldr	r1, .L27+28
 440 00a2 1148     		ldr	r0, .L27+32
 441 00a4 FFF7FEFF 		bl	SD_write
 442 00a8 08E0     		b	.L26
 443              	.L25:
 106:level_sensor.c ****         }else{
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 11


 107:level_sensor.c ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 444              		.loc 1 107 0
 445 00aa 1249     		ldr	r1, .L27+44
 446 00ac 0220     		movs	r0, #2
 447 00ae FFF7FEFF 		bl	printNotif
 108:level_sensor.c ****             pushData("maxbotix_depth","-1",timeStamp); // error code, never get this from a sensor
 448              		.loc 1 108 0
 449 00b2 3A6D     		ldr	r2, [r7, #80]
 450 00b4 1049     		ldr	r1, .L27+48
 451 00b6 0A48     		ldr	r0, .L27+24
 452 00b8 FFF7FEFF 		bl	pushData
 453              	.L26:
 109:level_sensor.c ****         }
 110:level_sensor.c ****         
 111:level_sensor.c **** 
 112:level_sensor.c ****         return 0;
 454              		.loc 1 112 0
 455 00bc 0023     		movs	r3, #0
 456 00be FFE7     		b	.L21
 457              	.L24:
 458              	.L21:
 459              	.LBE2:
 113:level_sensor.c ****     }
 114:level_sensor.c **** }
 460              		.loc 1 114 0
 461 00c0 1846     		mov	r0, r3
 462 00c2 5837     		adds	r7, r7, #88
 463              		.cfi_def_cfa_offset 8
 464 00c4 BD46     		mov	sp, r7
 465              		.cfi_def_cfa_register 13
 466              		@ sp needed
 467 00c6 80BD     		pop	{r7, pc}
 468              	.L28:
 469              		.align	2
 470              	.L27:
 471 00c8 00000000 		.word	.LC0
 472 00cc 00000000 		.word	level_sensor_inbox
 473 00d0 04000000 		.word	.LC1
 474 00d4 08000000 		.word	.LC2
 475 00d8 0C000000 		.word	.LC3
 476 00dc 10000000 		.word	.LC4
 477 00e0 24000000 		.word	.LC5
 478 00e4 34000000 		.word	.LC6
 479 00e8 38000000 		.word	.LC7
 480 00ec 44000000 		.word	.LC8
 481 00f0 58000000 		.word	.LC9
 482 00f4 5C000000 		.word	.LC10
 483 00f8 88000000 		.word	.LC11
 484              		.cfi_endproc
 485              	.LFE69:
 486              		.size	level_sensor, .-level_sensor
 487              		.section	.rodata
 488 008b 00       		.align	2
 489              	.LC12:
 490 008c 5200     		.ascii	"R\000"
 491              		.section	.text.level_sensor_take_reading,"ax",%progbits
 492              		.align	2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 12


 493              		.global	level_sensor_take_reading
 494              		.thumb
 495              		.thumb_func
 496              		.type	level_sensor_take_reading, %function
 497              	level_sensor_take_reading:
 498              	.LFB70:
 115:level_sensor.c **** 
 116:level_sensor.c **** // takes level sensor measurements and calculates average level sensor reading
 117:level_sensor.c **** level_sensor_t level_sensor_take_reading(){
 499              		.loc 1 117 0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 40
 502              		@ frame_needed = 1, uses_anonymous_args = 0
 503 0000 B0B5     		push	{r4, r5, r7, lr}
 504              		.cfi_def_cfa_offset 16
 505              		.cfi_offset 4, -16
 506              		.cfi_offset 5, -12
 507              		.cfi_offset 7, -8
 508              		.cfi_offset 14, -4
 509 0002 8AB0     		sub	sp, sp, #40
 510              		.cfi_def_cfa_offset 56
 511 0004 00AF     		add	r7, sp, #0
 512              		.cfi_def_cfa_register 7
 513 0006 7860     		str	r0, [r7, #4]
 118:level_sensor.c ****     
 119:level_sensor.c ****     // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data type t
 120:level_sensor.c ****     level_sensor_t level_sensor_output;
 121:level_sensor.c ****     level_sensor_output.num_invalid_readings = 0;
 514              		.loc 1 121 0
 515 0008 0023     		movs	r3, #0
 516 000a 87F82130 		strb	r3, [r7, #33]
 122:level_sensor.c ****     level_sensor_output.num_valid_readings = 0;
 517              		.loc 1 122 0
 518 000e 0023     		movs	r3, #0
 519 0010 87F82030 		strb	r3, [r7, #32]
 123:level_sensor.c ****     
 124:level_sensor.c ****     uart_clear();
 520              		.loc 1 124 0
 521 0014 FFF7FEFF 		bl	uart_clear
 125:level_sensor.c ****     
 126:level_sensor.c ****     // Start sensor power, uart, and isr
 127:level_sensor.c ****     Level_Sensor_Power_Write(ON);   // Pulls Level Sensor power pin high (turns it on).
 522              		.loc 1 127 0
 523 0018 0120     		movs	r0, #1
 524 001a FFF7FEFF 		bl	Level_Sensor_Power_Write
 128:level_sensor.c ****     CyDelay(200u); // Sensor bootup sequence ~200ms -- senosor will spit out ID info, but we don't 
 525              		.loc 1 128 0
 526 001e C820     		movs	r0, #200
 527 0020 FFF7FEFF 		bl	CyDelay
 129:level_sensor.c ****     Level_Sensor_RX_SetDriveMode(PIN_DM_DIG_HIZ); // RX_SetDriveMode(): Sets the drive mode for eac
 528              		.loc 1 129 0
 529 0024 0220     		movs	r0, #2
 530 0026 FFF7FEFF 		bl	Level_Sensor_RX_SetDriveMode
 130:level_sensor.c ****     Level_Sensor_UART_Start(); // Level_Sensor_UART_Start() sets the initVar variable, calls the Le
 531              		.loc 1 130 0
 532 002a FFF7FEFF 		bl	Level_Sensor_UART_Start
 131:level_sensor.c ****     Level_Sensor_ISR_StartEx(Level_Sensor_ISR); // Sets up the interrupt and enables it.
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 13


 533              		.loc 1 131 0
 534 002e 3848     		ldr	r0, .L38
 535 0030 FFF7FEFF 		bl	Level_Sensor_ISR_StartEx
 132:level_sensor.c ****     
 133:level_sensor.c ****     // Wait to take  reading
 134:level_sensor.c ****     // Sensor will take ~200ms to send first reading, and 200ms for subsequent readings
 135:level_sensor.c ****     CyDelay(2000u); // Take a few seconds to get readings, 2 secs ~10 readings
 536              		.loc 1 135 0
 537 0034 4FF4FA60 		mov	r0, #2000
 538 0038 FFF7FEFF 		bl	CyDelay
 136:level_sensor.c ****     
 137:level_sensor.c ****     //stop all sensor processes
 138:level_sensor.c ****     Level_Sensor_UART_Stop(); // Disables the UART operation.
 539              		.loc 1 138 0
 540 003c FFF7FEFF 		bl	Level_Sensor_UART_Stop
 139:level_sensor.c ****     Level_Sensor_ISR_Stop(); // Disables and removes the interrupt.
 541              		.loc 1 139 0
 542 0040 FFF7FEFF 		bl	Level_Sensor_ISR_Stop
 140:level_sensor.c ****     Level_Sensor_Power_Write(OFF); // Pulls Level Sensor Power pin low (turns it off).
 543              		.loc 1 140 0
 544 0044 0020     		movs	r0, #0
 545 0046 FFF7FEFF 		bl	Level_Sensor_Power_Write
 141:level_sensor.c ****     // RX_SetDriveMode(): Sets the drive mode for each of the Pins component's pins.
 142:level_sensor.c ****     // String Drive Mode means it will only be outputting a voltage (don't send any data) when pull
 143:level_sensor.c ****     // UART in PSOC starts high. Then pulls low to get data. When turn sensor off, still using powe
 144:level_sensor.c ****     // So turning it to Strong Drive has it stay low.
 145:level_sensor.c ****     Level_Sensor_RX_SetDriveMode(PIN_DM_STRONG);
 546              		.loc 1 145 0
 547 004a 0C20     		movs	r0, #12
 548 004c FFF7FEFF 		bl	Level_Sensor_RX_SetDriveMode
 146:level_sensor.c ****     // Stops writing the value to the physical port.
 147:level_sensor.c ****     // Just because turn power of sensor off, pin could still be high and getting power. This ensur
 148:level_sensor.c ****     Level_Sensor_RX_Write(OFF);
 549              		.loc 1 148 0
 550 0050 0020     		movs	r0, #0
 551 0052 FFF7FEFF 		bl	Level_Sensor_RX_Write
 149:level_sensor.c **** 
 150:level_sensor.c ****     /* Return parsed reading */
 151:level_sensor.c ****     // Parse string and put all values into array
 152:level_sensor.c ****     // The sensor will power on and do a few things, after which the readigs will follow with the s
 153:level_sensor.c ****     // Readings are stashed between "R" and "\000"
 154:level_sensor.c ****     char *token;
 155:level_sensor.c ****     // strtok(): breaks uart_chars into smaller string when sees "R".
 156:level_sensor.c ****     token = strtok(uart_chars, "R");
 552              		.loc 1 156 0
 553 0056 2F49     		ldr	r1, .L38+4
 554 0058 2F48     		ldr	r0, .L38+8
 555 005a FFF7FEFF 		bl	strtok
 556 005e 7862     		str	r0, [r7, #36]
 157:level_sensor.c ****     /* walk through other tokens */
 158:level_sensor.c ****    while( token != NULL ) 
 557              		.loc 1 158 0
 558 0060 33E0     		b	.L30
 559              	.L35:
 159:level_sensor.c ****    {
 160:level_sensor.c ****       if(strstr(token, "\r") != NULL){ // Full reading is delimieted by "R" + reading + "\r"
 560              		.loc 1 160 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 14


 561 0062 0D21     		movs	r1, #13
 562 0064 786A     		ldr	r0, [r7, #36]
 563 0066 FFF7FEFF 		bl	strchr
 564 006a 0346     		mov	r3, r0
 565 006c 002B     		cmp	r3, #0
 566 006e 27D0     		beq	.L31
 567              	.LBB3:
 161:level_sensor.c ****         // int atoi(const char *str) converts the string argument str to an integer (type int).
 162:level_sensor.c ****         uint16 reading = atoi(token);
 568              		.loc 1 162 0
 569 0070 786A     		ldr	r0, [r7, #36]
 570 0072 FFF7FEFF 		bl	atoi
 571 0076 0346     		mov	r3, r0
 572 0078 7B84     		strh	r3, [r7, #34]	@ movhi
 163:level_sensor.c ****         if(reading != 0){
 573              		.loc 1 163 0
 574 007a 7B8C     		ldrh	r3, [r7, #34]
 575 007c 002B     		cmp	r3, #0
 576 007e 1FD0     		beq	.L31
 164:level_sensor.c ****             if(reading != READING_INVALID){ // Invald readings by maxbotix
 577              		.loc 1 164 0
 578 0080 7B8C     		ldrh	r3, [r7, #34]
 579 0082 42F20F72 		movw	r2, #9999
 580 0086 9342     		cmp	r3, r2
 581 0088 14D0     		beq	.L32
 165:level_sensor.c ****                 // Set the level readings array of the length of number of valid readings equal to 
 166:level_sensor.c ****                 level_sensor_output.all_level_readings[level_sensor_output.num_valid_readings] = re
 582              		.loc 1 166 0
 583 008a 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 584 008e B7F92220 		ldrsh	r2, [r7, #34]
 585 0092 5B00     		lsls	r3, r3, #1
 586 0094 07F12801 		add	r1, r7, #40
 587 0098 0B44     		add	r3, r3, r1
 588 009a 23F8202C 		strh	r2, [r3, #-32]	@ movhi
 167:level_sensor.c ****                 // If number of valid readings less than 11 total readings, increase the count of v
 168:level_sensor.c ****                 if(level_sensor_output.num_valid_readings < N_READINGS){
 589              		.loc 1 168 0
 590 009e 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 591 00a2 0A2B     		cmp	r3, #10
 592 00a4 15D8     		bhi	.L37
 169:level_sensor.c ****                     level_sensor_output.num_valid_readings++;
 593              		.loc 1 169 0
 594 00a6 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 595 00aa 0133     		adds	r3, r3, #1
 596 00ac DBB2     		uxtb	r3, r3
 597 00ae 87F82030 		strb	r3, [r7, #32]
 598 00b2 05E0     		b	.L31
 599              	.L32:
 170:level_sensor.c ****                 }else{
 171:level_sensor.c ****                  break;   
 172:level_sensor.c ****                 }
 173:level_sensor.c ****                 
 174:level_sensor.c ****             }else{
 175:level_sensor.c ****                 // Otherwise increase the count of invalid readings
 176:level_sensor.c ****                 level_sensor_output.num_invalid_readings++;
 600              		.loc 1 176 0
 601 00b4 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 15


 602 00b8 0133     		adds	r3, r3, #1
 603 00ba DBB2     		uxtb	r3, r3
 604 00bc 87F82130 		strb	r3, [r7, #33]
 605              	.L31:
 606              	.LBE3:
 177:level_sensor.c ****             }
 178:level_sensor.c ****         }
 179:level_sensor.c ****       }
 180:level_sensor.c ****       token = strtok(NULL, "R"); // This "NULL" says to continue where you left off last time.
 607              		.loc 1 180 0
 608 00c0 1449     		ldr	r1, .L38+4
 609 00c2 0020     		movs	r0, #0
 610 00c4 FFF7FEFF 		bl	strtok
 611 00c8 7862     		str	r0, [r7, #36]
 612              	.L30:
 158:level_sensor.c ****    {
 613              		.loc 1 158 0
 614 00ca 7B6A     		ldr	r3, [r7, #36]
 615 00cc 002B     		cmp	r3, #0
 616 00ce C8D1     		bne	.L35
 617 00d0 00E0     		b	.L34
 618              	.L37:
 619              	.LBB4:
 171:level_sensor.c ****                 }
 620              		.loc 1 171 0
 621 00d2 00BF     		nop
 622              	.L34:
 623              	.LBE4:
 181:level_sensor.c ****    }
 182:level_sensor.c ****     // Calculate median level reading
 183:level_sensor.c ****     level_sensor_output.level_reading = find_median(level_sensor_output.all_level_readings,level_se
 624              		.loc 1 183 0
 625 00d4 97F82020 		ldrb	r2, [r7, #32]	@ zero_extendqisi2
 626 00d8 07F10803 		add	r3, r7, #8
 627 00dc 1146     		mov	r1, r2
 628 00de 1846     		mov	r0, r3
 629 00e0 FFF7FEFF 		bl	find_median
 630 00e4 0346     		mov	r3, r0
 631 00e6 1BB2     		sxth	r3, r3
 632 00e8 FB83     		strh	r3, [r7, #30]	@ movhi
 184:level_sensor.c ****     
 185:level_sensor.c ****     return level_sensor_output;
 633              		.loc 1 185 0
 634 00ea 7B68     		ldr	r3, [r7, #4]
 635 00ec 1D46     		mov	r5, r3
 636 00ee 07F10804 		add	r4, r7, #8
 637 00f2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 638 00f4 2860     		str	r0, [r5]	@ unaligned
 639 00f6 6960     		str	r1, [r5, #4]	@ unaligned
 640 00f8 AA60     		str	r2, [r5, #8]	@ unaligned
 641 00fa EB60     		str	r3, [r5, #12]	@ unaligned
 642 00fc 03CC     		ldmia	r4!, {r0, r1}
 643 00fe 2861     		str	r0, [r5, #16]	@ unaligned
 644 0100 6961     		str	r1, [r5, #20]	@ unaligned
 645 0102 2388     		ldrh	r3, [r4]	@ unaligned
 646 0104 2B83     		strh	r3, [r5, #24]	@ unaligned
 186:level_sensor.c **** }
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 16


 647              		.loc 1 186 0
 648 0106 7868     		ldr	r0, [r7, #4]
 649 0108 2837     		adds	r7, r7, #40
 650              		.cfi_def_cfa_offset 16
 651 010a BD46     		mov	sp, r7
 652              		.cfi_def_cfa_register 13
 653              		@ sp needed
 654 010c B0BD     		pop	{r4, r5, r7, pc}
 655              	.L39:
 656 010e 00BF     		.align	2
 657              	.L38:
 658 0110 00000000 		.word	Level_Sensor_ISR
 659 0114 8C000000 		.word	.LC12
 660 0118 00000000 		.word	uart_chars
 661              		.cfi_endproc
 662              	.LFE70:
 663              		.size	level_sensor_take_reading, .-level_sensor_take_reading
 664              		.section	.rodata
 665 008e 0000     		.align	2
 666              	.LC13:
 667 0090 54455354 		.ascii	"TEST_LEVEL_SENSOR\000"
 667      5F4C4556 
 667      454C5F53 
 667      454E534F 
 667      5200
 668 00a2 0000     		.align	2
 669              	.LC14:
 670 00a4 6E57414E 		.ascii	"nWANTED=%d,nRECEIVED=%d,nVALID=%d,nMEDIAN=%d.\000"
 670      5445443D 
 670      25642C6E 
 670      52454345 
 670      49564544 
 671              		.section	.text.level_sensor_test,"ax",%progbits
 672              		.align	2
 673              		.global	level_sensor_test
 674              		.thumb
 675              		.thumb_func
 676              		.type	level_sensor_test, %function
 677              	level_sensor_test:
 678              	.LFB71:
 187:level_sensor.c **** 
 188:level_sensor.c **** // Level sensor test
 189:level_sensor.c **** test_t level_sensor_test(){
 679              		.loc 1 189 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 424
 682              		@ frame_needed = 1, uses_anonymous_args = 0
 683 0000 B0B5     		push	{r4, r5, r7, lr}
 684              		.cfi_def_cfa_offset 16
 685              		.cfi_offset 4, -16
 686              		.cfi_offset 5, -12
 687              		.cfi_offset 7, -8
 688              		.cfi_offset 14, -4
 689 0002 EEB0     		sub	sp, sp, #440
 690              		.cfi_def_cfa_offset 456
 691 0004 04AF     		add	r7, sp, #16
 692              		.cfi_def_cfa 7, 440
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 17


 693 0006 3B1D     		adds	r3, r7, #4
 694 0008 1860     		str	r0, [r3]
 190:level_sensor.c ****     
 191:level_sensor.c ****     test_t test; // test_t is a new data type we defined in test.h. We then use that data type to d
 192:level_sensor.c ****     test.status = 0; // set test status to zero
 695              		.loc 1 192 0
 696 000a 07F12403 		add	r3, r7, #36
 697 000e 0022     		movs	r2, #0
 698 0010 83F88020 		strb	r2, [r3, #128]
 193:level_sensor.c ****     snprintf(test.test_name,sizeof(test.test_name),"TEST_LEVEL_SENSOR");
 699              		.loc 1 193 0
 700 0014 07F12403 		add	r3, r7, #36
 701 0018 2A4A     		ldr	r2, .L44
 702 001a 1C46     		mov	r4, r3
 703 001c 1546     		mov	r5, r2
 704 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 705 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 706 0022 2B68     		ldr	r3, [r5]
 707 0024 2380     		strh	r3, [r4]	@ movhi
 194:level_sensor.c **** 
 195:level_sensor.c ****     // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data type t
 196:level_sensor.c ****     level_sensor_t sensor = level_sensor_take_reading();
 708              		.loc 1 196 0
 709 0026 07F10803 		add	r3, r7, #8
 710 002a 1846     		mov	r0, r3
 711 002c FFF7FEFF 		bl	level_sensor_take_reading
 197:level_sensor.c ****     
 198:level_sensor.c ****     // print the max number of readings (11), the number of actual readings, the number of valid re
 199:level_sensor.c ****     snprintf(test.reason,sizeof(test.reason),"nWANTED=%d,nRECEIVED=%d,nVALID=%d,nMEDIAN=%d.",
 200:level_sensor.c ****         N_READINGS,
 201:level_sensor.c ****         sensor.num_valid_readings+sensor.num_invalid_readings,
 712              		.loc 1 201 0
 713 0030 07F10803 		add	r3, r7, #8
 714 0034 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 199:level_sensor.c ****         N_READINGS,
 715              		.loc 1 199 0
 716 0036 1A46     		mov	r2, r3
 717              		.loc 1 201 0
 718 0038 07F10803 		add	r3, r7, #8
 719 003c 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 199:level_sensor.c ****         N_READINGS,
 720              		.loc 1 199 0
 721 003e 1344     		add	r3, r3, r2
 202:level_sensor.c ****         sensor.num_valid_readings,
 722              		.loc 1 202 0
 723 0040 07F10802 		add	r2, r7, #8
 724 0044 127E     		ldrb	r2, [r2, #24]	@ zero_extendqisi2
 199:level_sensor.c ****         N_READINGS,
 725              		.loc 1 199 0
 726 0046 1146     		mov	r1, r2
 203:level_sensor.c ****         sensor.level_reading
 727              		.loc 1 203 0
 728 0048 07F10802 		add	r2, r7, #8
 729 004c B2F91620 		ldrsh	r2, [r2, #22]
 199:level_sensor.c ****         N_READINGS,
 730              		.loc 1 199 0
 731 0050 1446     		mov	r4, r2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 18


 732 0052 07F12402 		add	r2, r7, #36
 733 0056 02F18100 		add	r0, r2, #129
 734 005a 0294     		str	r4, [sp, #8]
 735 005c 0191     		str	r1, [sp, #4]
 736 005e 0093     		str	r3, [sp]
 737 0060 0B23     		movs	r3, #11
 738 0062 194A     		ldr	r2, .L44+4
 739 0064 4FF48071 		mov	r1, #256
 740 0068 FFF7FEFF 		bl	snprintf
 204:level_sensor.c ****     );
 205:level_sensor.c ****    
 206:level_sensor.c ****     // if the number valid readings is the max number of readings (11), then the test passes with t
 207:level_sensor.c ****     if(sensor.num_valid_readings == N_READINGS){//pass
 741              		.loc 1 207 0
 742 006c 07F10803 		add	r3, r7, #8
 743 0070 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 744 0072 0B2B     		cmp	r3, #11
 745 0074 05D1     		bne	.L41
 208:level_sensor.c ****         test.status = 1;
 746              		.loc 1 208 0
 747 0076 07F12403 		add	r3, r7, #36
 748 007a 0122     		movs	r2, #1
 749 007c 83F88020 		strb	r2, [r3, #128]
 750 0080 0EE0     		b	.L42
 751              	.L41:
 209:level_sensor.c ****     // if the number of valid readings is greater than zero and less than the max number of reading
 210:level_sensor.c ****     }else if((sensor.num_valid_readings > 0) && (sensor.num_valid_readings < N_READINGS)){//pass
 752              		.loc 1 210 0
 753 0082 07F10803 		add	r3, r7, #8
 754 0086 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 755 0088 002B     		cmp	r3, #0
 756 008a 09D0     		beq	.L42
 757              		.loc 1 210 0 is_stmt 0 discriminator 1
 758 008c 07F10803 		add	r3, r7, #8
 759 0090 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 760 0092 0A2B     		cmp	r3, #10
 761 0094 04D8     		bhi	.L42
 211:level_sensor.c ****         test.status = 2; //not bad, since we got some OK readings
 762              		.loc 1 211 0 is_stmt 1
 763 0096 07F12403 		add	r3, r7, #36
 764 009a 0222     		movs	r2, #2
 765 009c 83F88020 		strb	r2, [r3, #128]
 766              	.L42:
 212:level_sensor.c ****     }
 213:level_sensor.c ****         
 214:level_sensor.c ****     return test;
 767              		.loc 1 214 0
 768 00a0 3B1D     		adds	r3, r7, #4
 769 00a2 1A68     		ldr	r2, [r3]
 770 00a4 07F12403 		add	r3, r7, #36
 771 00a8 1046     		mov	r0, r2
 772 00aa 1946     		mov	r1, r3
 773 00ac 40F28113 		movw	r3, #385
 774 00b0 1A46     		mov	r2, r3
 775 00b2 FFF7FEFF 		bl	memcpy
 215:level_sensor.c **** }
 776              		.loc 1 215 0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 19


 777 00b6 3B1D     		adds	r3, r7, #4
 778 00b8 1868     		ldr	r0, [r3]
 779 00ba 07F5D477 		add	r7, r7, #424
 780              		.cfi_def_cfa_offset 16
 781 00be BD46     		mov	sp, r7
 782              		.cfi_def_cfa_register 13
 783              		@ sp needed
 784 00c0 B0BD     		pop	{r4, r5, r7, pc}
 785              	.L45:
 786 00c2 00BF     		.align	2
 787              	.L44:
 788 00c4 90000000 		.word	.LC13
 789 00c8 A4000000 		.word	.LC14
 790              		.cfi_endproc
 791              	.LFE71:
 792              		.size	level_sensor_test, .-level_sensor_test
 793              		.global	__aeabi_i2d
 794              		.global	__aeabi_ddiv
 795              		.global	__aeabi_d2iz
 796              		.section	.text.find_median,"ax",%progbits
 797              		.align	2
 798              		.global	find_median
 799              		.thumb
 800              		.thumb_func
 801              		.type	find_median, %function
 802              	find_median:
 803              	.LFB72:
 216:level_sensor.c **** 
 217:level_sensor.c **** 
 218:level_sensor.c **** // function to calculate the median of the array, after array is sorted
 219:level_sensor.c **** uint16 find_median(int16 array[] , uint8 n)
 220:level_sensor.c **** {
 804              		.loc 1 220 0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 16
 807              		@ frame_needed = 1, uses_anonymous_args = 0
 808 0000 90B5     		push	{r4, r7, lr}
 809              		.cfi_def_cfa_offset 12
 810              		.cfi_offset 4, -12
 811              		.cfi_offset 7, -8
 812              		.cfi_offset 14, -4
 813 0002 85B0     		sub	sp, sp, #20
 814              		.cfi_def_cfa_offset 32
 815 0004 00AF     		add	r7, sp, #0
 816              		.cfi_def_cfa_register 7
 817 0006 7860     		str	r0, [r7, #4]
 818 0008 0B46     		mov	r3, r1
 819 000a FB70     		strb	r3, [r7, #3]
 221:level_sensor.c ****     int16 median=0;
 820              		.loc 1 221 0
 821 000c 0023     		movs	r3, #0
 822 000e FB81     		strh	r3, [r7, #14]	@ movhi
 222:level_sensor.c ****     sort(array,n);
 823              		.loc 1 222 0
 824 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 825 0012 1BB2     		sxth	r3, r3
 826 0014 1946     		mov	r1, r3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 20


 827 0016 7868     		ldr	r0, [r7, #4]
 828 0018 FFF7FEFF 		bl	sort
 223:level_sensor.c ****     
 224:level_sensor.c ****     // if number of elements are even
 225:level_sensor.c ****     if(n%2 == 0)
 829              		.loc 1 225 0
 830 001c FB78     		ldrb	r3, [r7, #3]
 831 001e 03F00103 		and	r3, r3, #1
 832 0022 DBB2     		uxtb	r3, r3
 833 0024 002B     		cmp	r3, #0
 834 0026 25D1     		bne	.L47
 226:level_sensor.c ****         // median is the average of the  two middle sorted numbers
 227:level_sensor.c ****         median = (array[(n-1)/2] + array[n/2])/2.0;
 835              		.loc 1 227 0
 836 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 837 002a 013B     		subs	r3, r3, #1
 838 002c DA0F     		lsrs	r2, r3, #31
 839 002e 1344     		add	r3, r3, r2
 840 0030 5B10     		asrs	r3, r3, #1
 841 0032 5B00     		lsls	r3, r3, #1
 842 0034 7A68     		ldr	r2, [r7, #4]
 843 0036 1344     		add	r3, r3, r2
 844 0038 B3F90030 		ldrsh	r3, [r3]
 845 003c 1946     		mov	r1, r3
 846 003e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 847 0040 5B08     		lsrs	r3, r3, #1
 848 0042 DBB2     		uxtb	r3, r3
 849 0044 5B00     		lsls	r3, r3, #1
 850 0046 7A68     		ldr	r2, [r7, #4]
 851 0048 1344     		add	r3, r3, r2
 852 004a B3F90030 		ldrsh	r3, [r3]
 853 004e 0B44     		add	r3, r3, r1
 854 0050 1846     		mov	r0, r3
 855 0052 FFF7FEFF 		bl	__aeabi_i2d
 856 0056 4FF00002 		mov	r2, #0
 857 005a 4FF08043 		mov	r3, #1073741824
 858 005e FFF7FEFF 		bl	__aeabi_ddiv
 859 0062 0346     		mov	r3, r0
 860 0064 0C46     		mov	r4, r1
 861 0066 1846     		mov	r0, r3
 862 0068 2146     		mov	r1, r4
 863 006a FFF7FEFF 		bl	__aeabi_d2iz
 864 006e 0346     		mov	r3, r0
 865 0070 FB81     		strh	r3, [r7, #14]	@ movhi
 866 0072 07E0     		b	.L48
 867              	.L47:
 228:level_sensor.c ****     // if number of elements are odd
 229:level_sensor.c ****     else
 230:level_sensor.c ****         // median is the the middle sorted number 
 231:level_sensor.c ****         median = array[n/2];
 868              		.loc 1 231 0
 869 0074 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 870 0076 5B08     		lsrs	r3, r3, #1
 871 0078 DBB2     		uxtb	r3, r3
 872 007a 5B00     		lsls	r3, r3, #1
 873 007c 7A68     		ldr	r2, [r7, #4]
 874 007e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 21


 875 0080 1B88     		ldrh	r3, [r3]	@ movhi
 876 0082 FB81     		strh	r3, [r7, #14]	@ movhi
 877              	.L48:
 232:level_sensor.c ****     
 233:level_sensor.c ****     return median;
 878              		.loc 1 233 0
 879 0084 FB89     		ldrh	r3, [r7, #14]
 234:level_sensor.c **** }
 880              		.loc 1 234 0
 881 0086 1846     		mov	r0, r3
 882 0088 1437     		adds	r7, r7, #20
 883              		.cfi_def_cfa_offset 12
 884 008a BD46     		mov	sp, r7
 885              		.cfi_def_cfa_register 13
 886              		@ sp needed
 887 008c 90BD     		pop	{r4, r7, pc}
 888              		.cfi_endproc
 889              	.LFE72:
 890              		.size	find_median, .-find_median
 891              		.section	.text.sort,"ax",%progbits
 892              		.align	2
 893              		.global	sort
 894              		.thumb
 895              		.thumb_func
 896              		.type	sort, %function
 897              	sort:
 898              	.LFB73:
 235:level_sensor.c **** 
 236:level_sensor.c **** // function to sort the elements in the level readings array
 237:level_sensor.c **** void sort(int16 a[],int16 n) { 
 899              		.loc 1 237 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 16
 902              		@ frame_needed = 1, uses_anonymous_args = 0
 903 0000 80B5     		push	{r7, lr}
 904              		.cfi_def_cfa_offset 8
 905              		.cfi_offset 7, -8
 906              		.cfi_offset 14, -4
 907 0002 84B0     		sub	sp, sp, #16
 908              		.cfi_def_cfa_offset 24
 909 0004 00AF     		add	r7, sp, #0
 910              		.cfi_def_cfa_register 7
 911 0006 7860     		str	r0, [r7, #4]
 912 0008 0B46     		mov	r3, r1
 913 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 238:level_sensor.c ****    int16 i,j;
 239:level_sensor.c **** 
 240:level_sensor.c ****    for(i = 0;i < n-1;i++) {
 914              		.loc 1 240 0
 915 000c 0023     		movs	r3, #0
 916 000e FB81     		strh	r3, [r7, #14]	@ movhi
 917 0010 37E0     		b	.L51
 918              	.L55:
 241:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
 919              		.loc 1 241 0
 920 0012 0023     		movs	r3, #0
 921 0014 BB81     		strh	r3, [r7, #12]	@ movhi
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 22


 922 0016 24E0     		b	.L52
 923              	.L54:
 242:level_sensor.c ****          if(a[j] > a[j+1])
 924              		.loc 1 242 0
 925 0018 B7F90C30 		ldrsh	r3, [r7, #12]
 926 001c 5B00     		lsls	r3, r3, #1
 927 001e 7A68     		ldr	r2, [r7, #4]
 928 0020 1344     		add	r3, r3, r2
 929 0022 B3F90020 		ldrsh	r2, [r3]
 930 0026 B7F90C30 		ldrsh	r3, [r7, #12]
 931 002a 0133     		adds	r3, r3, #1
 932 002c 5B00     		lsls	r3, r3, #1
 933 002e 7968     		ldr	r1, [r7, #4]
 934 0030 0B44     		add	r3, r3, r1
 935 0032 B3F90030 		ldrsh	r3, [r3]
 936 0036 9A42     		cmp	r2, r3
 937 0038 0DDD     		ble	.L53
 243:level_sensor.c ****             swap(&a[j],&a[j+1]); // swap the address of a[j] and a[j+1]
 938              		.loc 1 243 0
 939 003a B7F90C30 		ldrsh	r3, [r7, #12]
 940 003e 5B00     		lsls	r3, r3, #1
 941 0040 7A68     		ldr	r2, [r7, #4]
 942 0042 D018     		adds	r0, r2, r3
 943 0044 B7F90C30 		ldrsh	r3, [r7, #12]
 944 0048 0133     		adds	r3, r3, #1
 945 004a 5B00     		lsls	r3, r3, #1
 946 004c 7A68     		ldr	r2, [r7, #4]
 947 004e 1344     		add	r3, r3, r2
 948 0050 1946     		mov	r1, r3
 949 0052 FFF7FEFF 		bl	swap
 950              	.L53:
 241:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
 951              		.loc 1 241 0 discriminator 2
 952 0056 B7F90C30 		ldrsh	r3, [r7, #12]
 953 005a 9BB2     		uxth	r3, r3
 954 005c 0133     		adds	r3, r3, #1
 955 005e 9BB2     		uxth	r3, r3
 956 0060 BB81     		strh	r3, [r7, #12]	@ movhi
 957              	.L52:
 241:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
 958              		.loc 1 241 0 is_stmt 0 discriminator 1
 959 0062 B7F90C20 		ldrsh	r2, [r7, #12]
 960 0066 B7F90210 		ldrsh	r1, [r7, #2]
 961 006a B7F90E30 		ldrsh	r3, [r7, #14]
 962 006e CB1A     		subs	r3, r1, r3
 963 0070 013B     		subs	r3, r3, #1
 964 0072 9A42     		cmp	r2, r3
 965 0074 D0DB     		blt	.L54
 240:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
 966              		.loc 1 240 0 is_stmt 1 discriminator 2
 967 0076 B7F90E30 		ldrsh	r3, [r7, #14]
 968 007a 9BB2     		uxth	r3, r3
 969 007c 0133     		adds	r3, r3, #1
 970 007e 9BB2     		uxth	r3, r3
 971 0080 FB81     		strh	r3, [r7, #14]	@ movhi
 972              	.L51:
 240:level_sensor.c ****       for(j = 0;j < n-i-1;j++) {
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 23


 973              		.loc 1 240 0 is_stmt 0 discriminator 1
 974 0082 B7F90E20 		ldrsh	r2, [r7, #14]
 975 0086 B7F90230 		ldrsh	r3, [r7, #2]
 976 008a 013B     		subs	r3, r3, #1
 977 008c 9A42     		cmp	r2, r3
 978 008e C0DB     		blt	.L55
 244:level_sensor.c ****       }
 245:level_sensor.c ****    }
 246:level_sensor.c **** }
 979              		.loc 1 246 0 is_stmt 1
 980 0090 00BF     		nop
 981 0092 1037     		adds	r7, r7, #16
 982              		.cfi_def_cfa_offset 8
 983 0094 BD46     		mov	sp, r7
 984              		.cfi_def_cfa_register 13
 985              		@ sp needed
 986 0096 80BD     		pop	{r7, pc}
 987              		.cfi_endproc
 988              	.LFE73:
 989              		.size	sort, .-sort
 990              		.section	.text.swap,"ax",%progbits
 991              		.align	2
 992              		.global	swap
 993              		.thumb
 994              		.thumb_func
 995              		.type	swap, %function
 996              	swap:
 997              	.LFB74:
 247:level_sensor.c **** 
 248:level_sensor.c **** // function to swap elements in the level readings array in order to sort them
 249:level_sensor.c **** void swap(int16 *p,int16 *q) {
 998              		.loc 1 249 0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 16
 1001              		@ frame_needed = 1, uses_anonymous_args = 0
 1002              		@ link register save eliminated.
 1003 0000 80B4     		push	{r7}
 1004              		.cfi_def_cfa_offset 4
 1005              		.cfi_offset 7, -4
 1006 0002 85B0     		sub	sp, sp, #20
 1007              		.cfi_def_cfa_offset 24
 1008 0004 00AF     		add	r7, sp, #0
 1009              		.cfi_def_cfa_register 7
 1010 0006 7860     		str	r0, [r7, #4]
 1011 0008 3960     		str	r1, [r7]
 250:level_sensor.c ****    int16 t;
 251:level_sensor.c ****    
 252:level_sensor.c ****    t=*p; 
 1012              		.loc 1 252 0
 1013 000a 7B68     		ldr	r3, [r7, #4]
 1014 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1015 000e FB81     		strh	r3, [r7, #14]	@ movhi
 253:level_sensor.c ****    *p=*q; 
 1016              		.loc 1 253 0
 1017 0010 3B68     		ldr	r3, [r7]
 1018 0012 B3F90020 		ldrsh	r2, [r3]
 1019 0016 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 24


 1020 0018 1A80     		strh	r2, [r3]	@ movhi
 254:level_sensor.c ****    *q=t;
 1021              		.loc 1 254 0
 1022 001a 3B68     		ldr	r3, [r7]
 1023 001c FA89     		ldrh	r2, [r7, #14]	@ movhi
 1024 001e 1A80     		strh	r2, [r3]	@ movhi
 255:level_sensor.c **** }
 1025              		.loc 1 255 0
 1026 0020 00BF     		nop
 1027 0022 1437     		adds	r7, r7, #20
 1028              		.cfi_def_cfa_offset 4
 1029 0024 BD46     		mov	sp, r7
 1030              		.cfi_def_cfa_register 13
 1031              		@ sp needed
 1032 0026 80BC     		pop	{r7}
 1033              		.cfi_restore 7
 1034              		.cfi_def_cfa_offset 0
 1035 0028 7047     		bx	lr
 1036              		.cfi_endproc
 1037              	.LFE74:
 1038              		.size	swap, .-swap
 1039 002a 00BF     		.text
 1040              	.Letext0:
 1041              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1042              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1043              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1044              		.file 5 "testing.h"
 1045              		.file 6 "level_sensor.h"
 1046              		.file 7 "data.h"
 1047              		.file 8 "modem.h"
 1048              		.file 9 "notoriOS.h"
 1049              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 1050              		.file 11 "App_LED.h"
 1051              		.section	.debug_info,"",%progbits
 1052              	.Ldebug_info0:
 1053 0000 79080000 		.4byte	0x879
 1054 0004 0400     		.2byte	0x4
 1055 0006 00000000 		.4byte	.Ldebug_abbrev0
 1056 000a 04       		.byte	0x4
 1057 000b 01       		.uleb128 0x1
 1058 000c 86000000 		.4byte	.LASF117
 1059 0010 0C       		.byte	0xc
 1060 0011 61010000 		.4byte	.LASF118
 1061 0015 1C000000 		.4byte	.LASF119
 1062 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1063 001d 00000000 		.4byte	0
 1064 0021 00000000 		.4byte	.Ldebug_line0
 1065 0025 02       		.uleb128 0x2
 1066 0026 01       		.byte	0x1
 1067 0027 06       		.byte	0x6
 1068 0028 A3010000 		.4byte	.LASF0
 1069 002c 03       		.uleb128 0x3
 1070 002d 64000000 		.4byte	.LASF4
 1071 0031 02       		.byte	0x2
 1072 0032 1D       		.byte	0x1d
 1073 0033 37000000 		.4byte	0x37
 1074 0037 02       		.uleb128 0x2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 25


 1075 0038 01       		.byte	0x1
 1076 0039 08       		.byte	0x8
 1077 003a 89040000 		.4byte	.LASF1
 1078 003e 02       		.uleb128 0x2
 1079 003f 02       		.byte	0x2
 1080 0040 05       		.byte	0x5
 1081 0041 5C030000 		.4byte	.LASF2
 1082 0045 02       		.uleb128 0x2
 1083 0046 02       		.byte	0x2
 1084 0047 07       		.byte	0x7
 1085 0048 92050000 		.4byte	.LASF3
 1086 004c 03       		.uleb128 0x3
 1087 004d 5E050000 		.4byte	.LASF5
 1088 0051 02       		.byte	0x2
 1089 0052 3F       		.byte	0x3f
 1090 0053 57000000 		.4byte	0x57
 1091 0057 02       		.uleb128 0x2
 1092 0058 04       		.byte	0x4
 1093 0059 05       		.byte	0x5
 1094 005a 1E020000 		.4byte	.LASF6
 1095 005e 02       		.uleb128 0x2
 1096 005f 04       		.byte	0x4
 1097 0060 07       		.byte	0x7
 1098 0061 04030000 		.4byte	.LASF7
 1099 0065 02       		.uleb128 0x2
 1100 0066 08       		.byte	0x8
 1101 0067 05       		.byte	0x5
 1102 0068 95010000 		.4byte	.LASF8
 1103 006c 02       		.uleb128 0x2
 1104 006d 08       		.byte	0x8
 1105 006e 07       		.byte	0x7
 1106 006f 1F010000 		.4byte	.LASF9
 1107 0073 04       		.uleb128 0x4
 1108 0074 04       		.byte	0x4
 1109 0075 05       		.byte	0x5
 1110 0076 696E7400 		.ascii	"int\000"
 1111 007a 02       		.uleb128 0x2
 1112 007b 04       		.byte	0x4
 1113 007c 07       		.byte	0x7
 1114 007d D8020000 		.4byte	.LASF10
 1115 0081 03       		.uleb128 0x3
 1116 0082 22060000 		.4byte	.LASF11
 1117 0086 03       		.byte	0x3
 1118 0087 18       		.byte	0x18
 1119 0088 2C000000 		.4byte	0x2c
 1120 008c 03       		.uleb128 0x3
 1121 008d 81040000 		.4byte	.LASF12
 1122 0091 03       		.byte	0x3
 1123 0092 2C       		.byte	0x2c
 1124 0093 4C000000 		.4byte	0x4c
 1125 0097 02       		.uleb128 0x2
 1126 0098 08       		.byte	0x8
 1127 0099 04       		.byte	0x4
 1128 009a 36050000 		.4byte	.LASF13
 1129 009e 02       		.uleb128 0x2
 1130 009f 04       		.byte	0x4
 1131 00a0 07       		.byte	0x7
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 26


 1132 00a1 D8030000 		.4byte	.LASF14
 1133 00a5 05       		.uleb128 0x5
 1134 00a6 04       		.byte	0x4
 1135 00a7 AB000000 		.4byte	0xab
 1136 00ab 02       		.uleb128 0x2
 1137 00ac 01       		.byte	0x1
 1138 00ad 08       		.byte	0x8
 1139 00ae 4E050000 		.4byte	.LASF15
 1140 00b2 05       		.uleb128 0x5
 1141 00b3 04       		.byte	0x4
 1142 00b4 B8000000 		.4byte	0xb8
 1143 00b8 06       		.uleb128 0x6
 1144 00b9 AB000000 		.4byte	0xab
 1145 00bd 07       		.uleb128 0x7
 1146 00be AB000000 		.4byte	0xab
 1147 00c2 CD000000 		.4byte	0xcd
 1148 00c6 08       		.uleb128 0x8
 1149 00c7 9E000000 		.4byte	0x9e
 1150 00cb 17       		.byte	0x17
 1151 00cc 00       		.byte	0
 1152 00cd 02       		.uleb128 0x2
 1153 00ce 08       		.byte	0x8
 1154 00cf 04       		.byte	0x4
 1155 00d0 5C060000 		.4byte	.LASF16
 1156 00d4 02       		.uleb128 0x2
 1157 00d5 04       		.byte	0x4
 1158 00d6 04       		.byte	0x4
 1159 00d7 4E040000 		.4byte	.LASF17
 1160 00db 09       		.uleb128 0x9
 1161 00dc 43020000 		.4byte	.LASF18
 1162 00e0 04       		.byte	0x4
 1163 00e1 9201     		.2byte	0x192
 1164 00e3 37000000 		.4byte	0x37
 1165 00e7 09       		.uleb128 0x9
 1166 00e8 00000000 		.4byte	.LASF19
 1167 00ec 04       		.byte	0x4
 1168 00ed 9301     		.2byte	0x193
 1169 00ef 45000000 		.4byte	0x45
 1170 00f3 09       		.uleb128 0x9
 1171 00f4 2A060000 		.4byte	.LASF20
 1172 00f8 04       		.byte	0x4
 1173 00f9 9601     		.2byte	0x196
 1174 00fb 3E000000 		.4byte	0x3e
 1175 00ff 09       		.uleb128 0x9
 1176 0100 6A020000 		.4byte	.LASF21
 1177 0104 04       		.byte	0x4
 1178 0105 9701     		.2byte	0x197
 1179 0107 57000000 		.4byte	0x57
 1180 010b 0A       		.uleb128 0xa
 1181 010c 8101     		.2byte	0x181
 1182 010e 05       		.byte	0x5
 1183 010f 0A       		.byte	0xa
 1184 0110 39010000 		.4byte	0x139
 1185 0114 0B       		.uleb128 0xb
 1186 0115 E1030000 		.4byte	.LASF22
 1187 0119 05       		.byte	0x5
 1188 011a 0C       		.byte	0xc
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 27


 1189 011b 39010000 		.4byte	0x139
 1190 011f 00       		.byte	0
 1191 0120 0B       		.uleb128 0xb
 1192 0121 CC050000 		.4byte	.LASF23
 1193 0125 05       		.byte	0x5
 1194 0126 0D       		.byte	0xd
 1195 0127 DB000000 		.4byte	0xdb
 1196 012b 80       		.byte	0x80
 1197 012c 0B       		.uleb128 0xb
 1198 012d E3040000 		.4byte	.LASF24
 1199 0131 05       		.byte	0x5
 1200 0132 0F       		.byte	0xf
 1201 0133 49010000 		.4byte	0x149
 1202 0137 81       		.byte	0x81
 1203 0138 00       		.byte	0
 1204 0139 07       		.uleb128 0x7
 1205 013a AB000000 		.4byte	0xab
 1206 013e 49010000 		.4byte	0x149
 1207 0142 08       		.uleb128 0x8
 1208 0143 9E000000 		.4byte	0x9e
 1209 0147 7F       		.byte	0x7f
 1210 0148 00       		.byte	0
 1211 0149 07       		.uleb128 0x7
 1212 014a AB000000 		.4byte	0xab
 1213 014e 59010000 		.4byte	0x159
 1214 0152 08       		.uleb128 0x8
 1215 0153 9E000000 		.4byte	0x9e
 1216 0157 FF       		.byte	0xff
 1217 0158 00       		.byte	0
 1218 0159 03       		.uleb128 0x3
 1219 015a A7040000 		.4byte	.LASF25
 1220 015e 05       		.byte	0x5
 1221 015f 10       		.byte	0x10
 1222 0160 0B010000 		.4byte	0x10b
 1223 0164 0C       		.uleb128 0xc
 1224 0165 1A       		.byte	0x1a
 1225 0166 06       		.byte	0x6
 1226 0167 10       		.byte	0x10
 1227 0168 9D010000 		.4byte	0x19d
 1228 016c 0B       		.uleb128 0xb
 1229 016d 9F020000 		.4byte	.LASF26
 1230 0171 06       		.byte	0x6
 1231 0172 11       		.byte	0x11
 1232 0173 9D010000 		.4byte	0x19d
 1233 0177 00       		.byte	0
 1234 0178 0B       		.uleb128 0xb
 1235 0179 84050000 		.4byte	.LASF27
 1236 017d 06       		.byte	0x6
 1237 017e 12       		.byte	0x12
 1238 017f F3000000 		.4byte	0xf3
 1239 0183 16       		.byte	0x16
 1240 0184 0B       		.uleb128 0xb
 1241 0185 F1020000 		.4byte	.LASF28
 1242 0189 06       		.byte	0x6
 1243 018a 13       		.byte	0x13
 1244 018b DB000000 		.4byte	0xdb
 1245 018f 18       		.byte	0x18
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 28


 1246 0190 0B       		.uleb128 0xb
 1247 0191 07000000 		.4byte	.LASF29
 1248 0195 06       		.byte	0x6
 1249 0196 14       		.byte	0x14
 1250 0197 DB000000 		.4byte	0xdb
 1251 019b 19       		.byte	0x19
 1252 019c 00       		.byte	0
 1253 019d 07       		.uleb128 0x7
 1254 019e F3000000 		.4byte	0xf3
 1255 01a2 AD010000 		.4byte	0x1ad
 1256 01a6 08       		.uleb128 0x8
 1257 01a7 9E000000 		.4byte	0x9e
 1258 01ab 0A       		.byte	0xa
 1259 01ac 00       		.byte	0
 1260 01ad 03       		.uleb128 0x3
 1261 01ae 66040000 		.4byte	.LASF30
 1262 01b2 06       		.byte	0x6
 1263 01b3 15       		.byte	0x15
 1264 01b4 64010000 		.4byte	0x164
 1265 01b8 0C       		.uleb128 0xc
 1266 01b9 2C       		.byte	0x2c
 1267 01ba 07       		.byte	0x7
 1268 01bb 14       		.byte	0x14
 1269 01bc E5010000 		.4byte	0x1e5
 1270 01c0 0D       		.uleb128 0xd
 1271 01c1 6B657900 		.ascii	"key\000"
 1272 01c5 07       		.byte	0x7
 1273 01c6 15       		.byte	0x15
 1274 01c7 E5010000 		.4byte	0x1e5
 1275 01cb 00       		.byte	0
 1276 01cc 0B       		.uleb128 0xb
 1277 01cd C8020000 		.4byte	.LASF31
 1278 01d1 07       		.byte	0x7
 1279 01d2 16       		.byte	0x16
 1280 01d3 E5010000 		.4byte	0x1e5
 1281 01d7 14       		.byte	0x14
 1282 01d8 0B       		.uleb128 0xb
 1283 01d9 02040000 		.4byte	.LASF32
 1284 01dd 07       		.byte	0x7
 1285 01de 17       		.byte	0x17
 1286 01df FF000000 		.4byte	0xff
 1287 01e3 28       		.byte	0x28
 1288 01e4 00       		.byte	0
 1289 01e5 07       		.uleb128 0x7
 1290 01e6 AB000000 		.4byte	0xab
 1291 01ea F5010000 		.4byte	0x1f5
 1292 01ee 08       		.uleb128 0x8
 1293 01ef 9E000000 		.4byte	0x9e
 1294 01f3 13       		.byte	0x13
 1295 01f4 00       		.byte	0
 1296 01f5 03       		.uleb128 0x3
 1297 01f6 E5020000 		.4byte	.LASF33
 1298 01fa 07       		.byte	0x7
 1299 01fb 19       		.byte	0x19
 1300 01fc B8010000 		.4byte	0x1b8
 1301 0200 0C       		.uleb128 0xc
 1302 0201 3C       		.byte	0x3c
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 29


 1303 0202 08       		.byte	0x8
 1304 0203 36       		.byte	0x36
 1305 0204 2D020000 		.4byte	0x22d
 1306 0208 0B       		.uleb128 0xb
 1307 0209 A5050000 		.4byte	.LASF34
 1308 020d 08       		.byte	0x8
 1309 020e 37       		.byte	0x37
 1310 020f E5010000 		.4byte	0x1e5
 1311 0213 00       		.byte	0
 1312 0214 0B       		.uleb128 0xb
 1313 0215 96020000 		.4byte	.LASF35
 1314 0219 08       		.byte	0x8
 1315 021a 38       		.byte	0x38
 1316 021b E5010000 		.4byte	0x1e5
 1317 021f 14       		.byte	0x14
 1318 0220 0B       		.uleb128 0xb
 1319 0221 DE040000 		.4byte	.LASF36
 1320 0225 08       		.byte	0x8
 1321 0226 39       		.byte	0x39
 1322 0227 E5010000 		.4byte	0x1e5
 1323 022b 28       		.byte	0x28
 1324 022c 00       		.byte	0
 1325 022d 03       		.uleb128 0x3
 1326 022e 0B020000 		.4byte	.LASF37
 1327 0232 08       		.byte	0x8
 1328 0233 3B       		.byte	0x3b
 1329 0234 00020000 		.4byte	0x200
 1330 0238 0C       		.uleb128 0xc
 1331 0239 20       		.byte	0x20
 1332 023a 08       		.byte	0x8
 1333 023b 3D       		.byte	0x3d
 1334 023c A1020000 		.4byte	0x2a1
 1335 0240 0B       		.uleb128 0xb
 1336 0241 18020000 		.4byte	.LASF38
 1337 0245 08       		.byte	0x8
 1338 0246 3E       		.byte	0x3e
 1339 0247 73000000 		.4byte	0x73
 1340 024b 00       		.byte	0
 1341 024c 0D       		.uleb128 0xd
 1342 024d 62657200 		.ascii	"ber\000"
 1343 0251 08       		.byte	0x8
 1344 0252 3F       		.byte	0x3f
 1345 0253 73000000 		.4byte	0x73
 1346 0257 04       		.byte	0x4
 1347 0258 0B       		.uleb128 0xb
 1348 0259 CD040000 		.4byte	.LASF39
 1349 025d 08       		.byte	0x8
 1350 025e 40       		.byte	0x40
 1351 025f 73000000 		.4byte	0x73
 1352 0263 08       		.byte	0x8
 1353 0264 0B       		.uleb128 0xb
 1354 0265 AF010000 		.4byte	.LASF40
 1355 0269 08       		.byte	0x8
 1356 026a 41       		.byte	0x41
 1357 026b 73000000 		.4byte	0x73
 1358 026f 0C       		.byte	0xc
 1359 0270 0B       		.uleb128 0xb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 30


 1360 0271 B3040000 		.4byte	.LASF41
 1361 0275 08       		.byte	0x8
 1362 0276 42       		.byte	0x42
 1363 0277 73000000 		.4byte	0x73
 1364 027b 10       		.byte	0x10
 1365 027c 0B       		.uleb128 0xb
 1366 027d AE040000 		.4byte	.LASF42
 1367 0281 08       		.byte	0x8
 1368 0282 43       		.byte	0x43
 1369 0283 73000000 		.4byte	0x73
 1370 0287 14       		.byte	0x14
 1371 0288 0B       		.uleb128 0xb
 1372 0289 D1010000 		.4byte	.LASF43
 1373 028d 08       		.byte	0x8
 1374 028e 44       		.byte	0x44
 1375 028f 73000000 		.4byte	0x73
 1376 0293 18       		.byte	0x18
 1377 0294 0B       		.uleb128 0xb
 1378 0295 49030000 		.4byte	.LASF44
 1379 0299 08       		.byte	0x8
 1380 029a 45       		.byte	0x45
 1381 029b 73000000 		.4byte	0x73
 1382 029f 1C       		.byte	0x1c
 1383 02a0 00       		.byte	0
 1384 02a1 03       		.uleb128 0x3
 1385 02a2 F2040000 		.4byte	.LASF45
 1386 02a6 08       		.byte	0x8
 1387 02a7 47       		.byte	0x47
 1388 02a8 38020000 		.4byte	0x238
 1389 02ac 0C       		.uleb128 0xc
 1390 02ad 07       		.byte	0x7
 1391 02ae 08       		.byte	0x8
 1392 02af 53       		.byte	0x53
 1393 02b0 09030000 		.4byte	0x309
 1394 02b4 0B       		.uleb128 0xb
 1395 02b5 70020000 		.4byte	.LASF46
 1396 02b9 08       		.byte	0x8
 1397 02ba 55       		.byte	0x55
 1398 02bb DB000000 		.4byte	0xdb
 1399 02bf 00       		.byte	0
 1400 02c0 0B       		.uleb128 0xb
 1401 02c1 3E060000 		.4byte	.LASF47
 1402 02c5 08       		.byte	0x8
 1403 02c6 57       		.byte	0x57
 1404 02c7 09030000 		.4byte	0x309
 1405 02cb 01       		.byte	0x1
 1406 02cc 0B       		.uleb128 0xb
 1407 02cd 68050000 		.4byte	.LASF48
 1408 02d1 08       		.byte	0x8
 1409 02d2 59       		.byte	0x59
 1410 02d3 DB000000 		.4byte	0xdb
 1411 02d7 02       		.byte	0x2
 1412 02d8 0B       		.uleb128 0xb
 1413 02d9 B8040000 		.4byte	.LASF49
 1414 02dd 08       		.byte	0x8
 1415 02de 5B       		.byte	0x5b
 1416 02df DB000000 		.4byte	0xdb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 31


 1417 02e3 03       		.byte	0x3
 1418 02e4 0B       		.uleb128 0xb
 1419 02e5 BC020000 		.4byte	.LASF50
 1420 02e9 08       		.byte	0x8
 1421 02ea 5E       		.byte	0x5e
 1422 02eb DB000000 		.4byte	0xdb
 1423 02ef 04       		.byte	0x4
 1424 02f0 0B       		.uleb128 0xb
 1425 02f1 EC050000 		.4byte	.LASF51
 1426 02f5 08       		.byte	0x8
 1427 02f6 63       		.byte	0x63
 1428 02f7 DB000000 		.4byte	0xdb
 1429 02fb 05       		.byte	0x5
 1430 02fc 0B       		.uleb128 0xb
 1431 02fd 11050000 		.4byte	.LASF52
 1432 0301 08       		.byte	0x8
 1433 0302 65       		.byte	0x65
 1434 0303 DB000000 		.4byte	0xdb
 1435 0307 06       		.byte	0x6
 1436 0308 00       		.byte	0
 1437 0309 02       		.uleb128 0x2
 1438 030a 01       		.byte	0x1
 1439 030b 02       		.byte	0x2
 1440 030c 7B040000 		.4byte	.LASF53
 1441 0310 03       		.uleb128 0x3
 1442 0311 94030000 		.4byte	.LASF54
 1443 0315 08       		.byte	0x8
 1444 0316 67       		.byte	0x67
 1445 0317 AC020000 		.4byte	0x2ac
 1446 031b 0C       		.uleb128 0xc
 1447 031c 06       		.byte	0x6
 1448 031d 09       		.byte	0x9
 1449 031e 2E       		.byte	0x2e
 1450 031f 54030000 		.4byte	0x354
 1451 0323 0B       		.uleb128 0xb
 1452 0324 B4010000 		.4byte	.LASF55
 1453 0328 09       		.byte	0x9
 1454 0329 30       		.byte	0x30
 1455 032a E7000000 		.4byte	0xe7
 1456 032e 00       		.byte	0
 1457 032f 0B       		.uleb128 0xb
 1458 0330 27020000 		.4byte	.LASF56
 1459 0334 09       		.byte	0x9
 1460 0335 31       		.byte	0x31
 1461 0336 F3000000 		.4byte	0xf3
 1462 033a 02       		.byte	0x2
 1463 033b 0B       		.uleb128 0xb
 1464 033c 30060000 		.4byte	.LASF57
 1465 0340 09       		.byte	0x9
 1466 0341 32       		.byte	0x32
 1467 0342 DB000000 		.4byte	0xdb
 1468 0346 04       		.byte	0x4
 1469 0347 0B       		.uleb128 0xb
 1470 0348 6E000000 		.4byte	.LASF58
 1471 034c 09       		.byte	0x9
 1472 034d 33       		.byte	0x33
 1473 034e DB000000 		.4byte	0xdb
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 32


 1474 0352 05       		.byte	0x5
 1475 0353 00       		.byte	0
 1476 0354 03       		.uleb128 0x3
 1477 0355 3D020000 		.4byte	.LASF59
 1478 0359 09       		.byte	0x9
 1479 035a 36       		.byte	0x36
 1480 035b 5F030000 		.4byte	0x35f
 1481 035f 0E       		.uleb128 0xe
 1482 0360 1B030000 		.4byte	0x31b
 1483 0364 0C       		.uleb128 0xc
 1484 0365 1C       		.byte	0x1c
 1485 0366 09       		.byte	0x9
 1486 0367 39       		.byte	0x39
 1487 0368 85030000 		.4byte	0x385
 1488 036c 0B       		.uleb128 0xb
 1489 036d 2F030000 		.4byte	.LASF60
 1490 0371 09       		.byte	0x9
 1491 0372 3B       		.byte	0x3b
 1492 0373 85030000 		.4byte	0x385
 1493 0377 00       		.byte	0
 1494 0378 0B       		.uleb128 0xb
 1495 0379 88020000 		.4byte	.LASF61
 1496 037d 09       		.byte	0x9
 1497 037e 3C       		.byte	0x3c
 1498 037f BD000000 		.4byte	0xbd
 1499 0383 04       		.byte	0x4
 1500 0384 00       		.byte	0
 1501 0385 05       		.uleb128 0x5
 1502 0386 04       		.byte	0x4
 1503 0387 2D020000 		.4byte	0x22d
 1504 038b 03       		.uleb128 0x3
 1505 038c 89030000 		.4byte	.LASF62
 1506 0390 09       		.byte	0x9
 1507 0391 3E       		.byte	0x3e
 1508 0392 64030000 		.4byte	0x364
 1509 0396 0C       		.uleb128 0xc
 1510 0397 68       		.byte	0x68
 1511 0398 09       		.byte	0x9
 1512 0399 44       		.byte	0x44
 1513 039a B7030000 		.4byte	0x3b7
 1514 039e 0B       		.uleb128 0xb
 1515 039f 3A030000 		.4byte	.LASF63
 1516 03a3 09       		.byte	0x9
 1517 03a4 49       		.byte	0x49
 1518 03a5 B7030000 		.4byte	0x3b7
 1519 03a9 00       		.byte	0
 1520 03aa 0B       		.uleb128 0xb
 1521 03ab 27030000 		.4byte	.LASF64
 1522 03af 09       		.byte	0x9
 1523 03b0 4A       		.byte	0x4a
 1524 03b1 73000000 		.4byte	0x73
 1525 03b5 64       		.byte	0x64
 1526 03b6 00       		.byte	0
 1527 03b7 07       		.uleb128 0x7
 1528 03b8 AB000000 		.4byte	0xab
 1529 03bc C7030000 		.4byte	0x3c7
 1530 03c0 08       		.uleb128 0x8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 33


 1531 03c1 9E000000 		.4byte	0x9e
 1532 03c5 63       		.byte	0x63
 1533 03c6 00       		.byte	0
 1534 03c7 03       		.uleb128 0x3
 1535 03c8 13060000 		.4byte	.LASF65
 1536 03cc 09       		.byte	0x9
 1537 03cd 50       		.byte	0x50
 1538 03ce 96030000 		.4byte	0x396
 1539 03d2 0F       		.uleb128 0xf
 1540 03d3 16030000 		.4byte	.LASF66
 1541 03d7 01       		.byte	0x1
 1542 03d8 17       		.byte	0x17
 1543 03d9 B2000000 		.4byte	0xb2
 1544 03dd 00000000 		.4byte	.LFB64
 1545 03e1 14000000 		.4byte	.LFE64-.LFB64
 1546 03e5 01       		.uleb128 0x1
 1547 03e6 9C       		.byte	0x9c
 1548 03e7 0F       		.uleb128 0xf
 1549 03e8 27040000 		.4byte	.LASF67
 1550 03ec 01       		.byte	0x1
 1551 03ed 1E       		.byte	0x1e
 1552 03ee 81000000 		.4byte	0x81
 1553 03f2 00000000 		.4byte	.LFB65
 1554 03f6 14000000 		.4byte	.LFE65-.LFB65
 1555 03fa 01       		.uleb128 0x1
 1556 03fb 9C       		.byte	0x9c
 1557 03fc 10       		.uleb128 0x10
 1558 03fd C2040000 		.4byte	.LASF120
 1559 0401 01       		.byte	0x1
 1560 0402 23       		.byte	0x23
 1561 0403 00000000 		.4byte	.LFB66
 1562 0407 28000000 		.4byte	.LFE66-.LFB66
 1563 040b 01       		.uleb128 0x1
 1564 040c 9C       		.byte	0x9c
 1565 040d 11       		.uleb128 0x11
 1566 040e C7030000 		.4byte	.LASF68
 1567 0412 01       		.byte	0x1
 1568 0413 2E       		.byte	0x2e
 1569 0414 00000000 		.4byte	.LFB67
 1570 0418 70000000 		.4byte	.LFE67-.LFB67
 1571 041c 01       		.uleb128 0x1
 1572 041d 9C       		.byte	0x9c
 1573 041e 31040000 		.4byte	0x431
 1574 0422 12       		.uleb128 0x12
 1575 0423 EA040000 		.4byte	.LASF71
 1576 0427 01       		.byte	0x1
 1577 0428 32       		.byte	0x32
 1578 0429 AB000000 		.4byte	0xab
 1579 042d 02       		.uleb128 0x2
 1580 042e 91       		.byte	0x91
 1581 042f 77       		.sleb128 -9
 1582 0430 00       		.byte	0
 1583 0431 11       		.uleb128 0x11
 1584 0432 AC050000 		.4byte	.LASF69
 1585 0436 01       		.byte	0x1
 1586 0437 3E       		.byte	0x3e
 1587 0438 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 34


 1588 043c 1C000000 		.4byte	.LFE68-.LFB68
 1589 0440 01       		.uleb128 0x1
 1590 0441 9C       		.byte	0x9c
 1591 0442 55040000 		.4byte	0x455
 1592 0446 13       		.uleb128 0x13
 1593 0447 47060000 		.4byte	.LASF82
 1594 044b 01       		.byte	0x1
 1595 044c 3E       		.byte	0x3e
 1596 044d A5000000 		.4byte	0xa5
 1597 0451 02       		.uleb128 0x2
 1598 0452 91       		.byte	0x91
 1599 0453 74       		.sleb128 -12
 1600 0454 00       		.byte	0
 1601 0455 14       		.uleb128 0x14
 1602 0456 F4010000 		.4byte	.LASF70
 1603 045a 01       		.byte	0x1
 1604 045b 42       		.byte	0x42
 1605 045c DB000000 		.4byte	0xdb
 1606 0460 00000000 		.4byte	.LFB69
 1607 0464 FC000000 		.4byte	.LFE69-.LFB69
 1608 0468 01       		.uleb128 0x1
 1609 0469 9C       		.byte	0x9c
 1610 046a C0040000 		.4byte	0x4c0
 1611 046e 12       		.uleb128 0x12
 1612 046f 3D040000 		.4byte	.LASF72
 1613 0473 01       		.byte	0x1
 1614 0474 43       		.byte	0x43
 1615 0475 A5000000 		.4byte	0xa5
 1616 0479 02       		.uleb128 0x2
 1617 047a 91       		.byte	0x91
 1618 047b 74       		.sleb128 -12
 1619 047c 15       		.uleb128 0x15
 1620 047d 2A000000 		.4byte	.LBB2
 1621 0481 96000000 		.4byte	.LBE2-.LBB2
 1622 0485 12       		.uleb128 0x12
 1623 0486 02040000 		.4byte	.LASF32
 1624 048a 01       		.byte	0x1
 1625 048b 52       		.byte	0x52
 1626 048c 57000000 		.4byte	0x57
 1627 0490 02       		.uleb128 0x2
 1628 0491 91       		.byte	0x91
 1629 0492 70       		.sleb128 -16
 1630 0493 12       		.uleb128 0x12
 1631 0494 42050000 		.4byte	.LASF73
 1632 0498 01       		.byte	0x1
 1633 0499 53       		.byte	0x53
 1634 049a C0040000 		.4byte	0x4c0
 1635 049e 03       		.uleb128 0x3
 1636 049f 91       		.byte	0x91
 1637 04a0 A07F     		.sleb128 -96
 1638 04a2 12       		.uleb128 0x12
 1639 04a3 C8020000 		.4byte	.LASF31
 1640 04a7 01       		.byte	0x1
 1641 04a8 57       		.byte	0x57
 1642 04a9 E5010000 		.4byte	0x1e5
 1643 04ad 02       		.uleb128 0x2
 1644 04ae 91       		.byte	0x91
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 35


 1645 04af 5C       		.sleb128 -36
 1646 04b0 12       		.uleb128 0x12
 1647 04b1 75050000 		.4byte	.LASF74
 1648 04b5 01       		.byte	0x1
 1649 04b6 5A       		.byte	0x5a
 1650 04b7 AD010000 		.4byte	0x1ad
 1651 04bb 02       		.uleb128 0x2
 1652 04bc 91       		.byte	0x91
 1653 04bd 40       		.sleb128 -64
 1654 04be 00       		.byte	0
 1655 04bf 00       		.byte	0
 1656 04c0 07       		.uleb128 0x7
 1657 04c1 AB000000 		.4byte	0xab
 1658 04c5 D0040000 		.4byte	0x4d0
 1659 04c9 08       		.uleb128 0x8
 1660 04ca 9E000000 		.4byte	0x9e
 1661 04ce 1F       		.byte	0x1f
 1662 04cf 00       		.byte	0
 1663 04d0 14       		.uleb128 0x14
 1664 04d1 F9050000 		.4byte	.LASF75
 1665 04d5 01       		.byte	0x1
 1666 04d6 75       		.byte	0x75
 1667 04d7 AD010000 		.4byte	0x1ad
 1668 04db 00000000 		.4byte	.LFB70
 1669 04df 1C010000 		.4byte	.LFE70-.LFB70
 1670 04e3 01       		.uleb128 0x1
 1671 04e4 9C       		.byte	0x9c
 1672 04e5 1A050000 		.4byte	0x51a
 1673 04e9 12       		.uleb128 0x12
 1674 04ea 49020000 		.4byte	.LASF76
 1675 04ee 01       		.byte	0x1
 1676 04ef 78       		.byte	0x78
 1677 04f0 AD010000 		.4byte	0x1ad
 1678 04f4 02       		.uleb128 0x2
 1679 04f5 91       		.byte	0x91
 1680 04f6 50       		.sleb128 -48
 1681 04f7 12       		.uleb128 0x12
 1682 04f8 75040000 		.4byte	.LASF77
 1683 04fc 01       		.byte	0x1
 1684 04fd 9A       		.byte	0x9a
 1685 04fe A5000000 		.4byte	0xa5
 1686 0502 02       		.uleb128 0x2
 1687 0503 91       		.byte	0x91
 1688 0504 6C       		.sleb128 -20
 1689 0505 16       		.uleb128 0x16
 1690 0506 00000000 		.4byte	.Ldebug_ranges0+0
 1691 050a 12       		.uleb128 0x12
 1692 050b 7A020000 		.4byte	.LASF78
 1693 050f 01       		.byte	0x1
 1694 0510 A2       		.byte	0xa2
 1695 0511 E7000000 		.4byte	0xe7
 1696 0515 02       		.uleb128 0x2
 1697 0516 91       		.byte	0x91
 1698 0517 6A       		.sleb128 -22
 1699 0518 00       		.byte	0
 1700 0519 00       		.byte	0
 1701 051a 14       		.uleb128 0x14
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 36


 1702 051b 54040000 		.4byte	.LASF79
 1703 051f 01       		.byte	0x1
 1704 0520 BD       		.byte	0xbd
 1705 0521 59010000 		.4byte	0x159
 1706 0525 00000000 		.4byte	.LFB71
 1707 0529 CC000000 		.4byte	.LFE71-.LFB71
 1708 052d 01       		.uleb128 0x1
 1709 052e 9C       		.byte	0x9c
 1710 052f 52050000 		.4byte	0x552
 1711 0533 12       		.uleb128 0x12
 1712 0534 42010000 		.4byte	.LASF80
 1713 0538 01       		.byte	0x1
 1714 0539 BF       		.byte	0xbf
 1715 053a 59010000 		.4byte	0x159
 1716 053e 03       		.uleb128 0x3
 1717 053f 91       		.byte	0x91
 1718 0540 EC7C     		.sleb128 -404
 1719 0542 12       		.uleb128 0x12
 1720 0543 42030000 		.4byte	.LASF81
 1721 0547 01       		.byte	0x1
 1722 0548 C4       		.byte	0xc4
 1723 0549 AD010000 		.4byte	0x1ad
 1724 054d 03       		.uleb128 0x3
 1725 054e 91       		.byte	0x91
 1726 054f D07C     		.sleb128 -432
 1727 0551 00       		.byte	0
 1728 0552 17       		.uleb128 0x17
 1729 0553 C0050000 		.4byte	.LASF121
 1730 0557 01       		.byte	0x1
 1731 0558 DB       		.byte	0xdb
 1732 0559 E7000000 		.4byte	0xe7
 1733 055d 00000000 		.4byte	.LFB72
 1734 0561 8E000000 		.4byte	.LFE72-.LFB72
 1735 0565 01       		.uleb128 0x1
 1736 0566 9C       		.byte	0x9c
 1737 0567 94050000 		.4byte	0x594
 1738 056b 13       		.uleb128 0x13
 1739 056c 82020000 		.4byte	.LASF83
 1740 0570 01       		.byte	0x1
 1741 0571 DB       		.byte	0xdb
 1742 0572 94050000 		.4byte	0x594
 1743 0576 02       		.uleb128 0x2
 1744 0577 91       		.byte	0x91
 1745 0578 64       		.sleb128 -28
 1746 0579 18       		.uleb128 0x18
 1747 057a 6E00     		.ascii	"n\000"
 1748 057c 01       		.byte	0x1
 1749 057d DB       		.byte	0xdb
 1750 057e DB000000 		.4byte	0xdb
 1751 0582 02       		.uleb128 0x2
 1752 0583 91       		.byte	0x91
 1753 0584 63       		.sleb128 -29
 1754 0585 12       		.uleb128 0x12
 1755 0586 70010000 		.4byte	.LASF84
 1756 058a 01       		.byte	0x1
 1757 058b DD       		.byte	0xdd
 1758 058c F3000000 		.4byte	0xf3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 37


 1759 0590 02       		.uleb128 0x2
 1760 0591 91       		.byte	0x91
 1761 0592 6E       		.sleb128 -18
 1762 0593 00       		.byte	0
 1763 0594 05       		.uleb128 0x5
 1764 0595 04       		.byte	0x4
 1765 0596 F3000000 		.4byte	0xf3
 1766 059a 11       		.uleb128 0x11
 1767 059b B7020000 		.4byte	.LASF85
 1768 059f 01       		.byte	0x1
 1769 05a0 ED       		.byte	0xed
 1770 05a1 00000000 		.4byte	.LFB73
 1771 05a5 98000000 		.4byte	.LFE73-.LFB73
 1772 05a9 01       		.uleb128 0x1
 1773 05aa 9C       		.byte	0x9c
 1774 05ab E0050000 		.4byte	0x5e0
 1775 05af 18       		.uleb128 0x18
 1776 05b0 6100     		.ascii	"a\000"
 1777 05b2 01       		.byte	0x1
 1778 05b3 ED       		.byte	0xed
 1779 05b4 94050000 		.4byte	0x594
 1780 05b8 02       		.uleb128 0x2
 1781 05b9 91       		.byte	0x91
 1782 05ba 6C       		.sleb128 -20
 1783 05bb 18       		.uleb128 0x18
 1784 05bc 6E00     		.ascii	"n\000"
 1785 05be 01       		.byte	0x1
 1786 05bf ED       		.byte	0xed
 1787 05c0 F3000000 		.4byte	0xf3
 1788 05c4 02       		.uleb128 0x2
 1789 05c5 91       		.byte	0x91
 1790 05c6 6A       		.sleb128 -22
 1791 05c7 19       		.uleb128 0x19
 1792 05c8 6900     		.ascii	"i\000"
 1793 05ca 01       		.byte	0x1
 1794 05cb EE       		.byte	0xee
 1795 05cc F3000000 		.4byte	0xf3
 1796 05d0 02       		.uleb128 0x2
 1797 05d1 91       		.byte	0x91
 1798 05d2 76       		.sleb128 -10
 1799 05d3 19       		.uleb128 0x19
 1800 05d4 6A00     		.ascii	"j\000"
 1801 05d6 01       		.byte	0x1
 1802 05d7 EE       		.byte	0xee
 1803 05d8 F3000000 		.4byte	0xf3
 1804 05dc 02       		.uleb128 0x2
 1805 05dd 91       		.byte	0x91
 1806 05de 74       		.sleb128 -12
 1807 05df 00       		.byte	0
 1808 05e0 1A       		.uleb128 0x1a
 1809 05e1 38040000 		.4byte	.LASF86
 1810 05e5 01       		.byte	0x1
 1811 05e6 F9       		.byte	0xf9
 1812 05e7 00000000 		.4byte	.LFB74
 1813 05eb 2A000000 		.4byte	.LFE74-.LFB74
 1814 05ef 01       		.uleb128 0x1
 1815 05f0 9C       		.byte	0x9c
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 38


 1816 05f1 1A060000 		.4byte	0x61a
 1817 05f5 18       		.uleb128 0x18
 1818 05f6 7000     		.ascii	"p\000"
 1819 05f8 01       		.byte	0x1
 1820 05f9 F9       		.byte	0xf9
 1821 05fa 94050000 		.4byte	0x594
 1822 05fe 02       		.uleb128 0x2
 1823 05ff 91       		.byte	0x91
 1824 0600 6C       		.sleb128 -20
 1825 0601 18       		.uleb128 0x18
 1826 0602 7100     		.ascii	"q\000"
 1827 0604 01       		.byte	0x1
 1828 0605 F9       		.byte	0xf9
 1829 0606 94050000 		.4byte	0x594
 1830 060a 02       		.uleb128 0x2
 1831 060b 91       		.byte	0x91
 1832 060c 68       		.sleb128 -24
 1833 060d 19       		.uleb128 0x19
 1834 060e 7400     		.ascii	"t\000"
 1835 0610 01       		.byte	0x1
 1836 0611 FA       		.byte	0xfa
 1837 0612 F3000000 		.4byte	0xf3
 1838 0616 02       		.uleb128 0x2
 1839 0617 91       		.byte	0x91
 1840 0618 76       		.sleb128 -10
 1841 0619 00       		.byte	0
 1842 061a 07       		.uleb128 0x7
 1843 061b AB000000 		.4byte	0xab
 1844 061f 2B060000 		.4byte	0x62b
 1845 0623 1B       		.uleb128 0x1b
 1846 0624 9E000000 		.4byte	0x9e
 1847 0628 0001     		.2byte	0x100
 1848 062a 00       		.byte	0
 1849 062b 12       		.uleb128 0x12
 1850 062c 14010000 		.4byte	.LASF87
 1851 0630 01       		.byte	0x1
 1852 0631 0C       		.byte	0xc
 1853 0632 1A060000 		.4byte	0x61a
 1854 0636 05       		.uleb128 0x5
 1855 0637 03       		.byte	0x3
 1856 0638 00000000 		.4byte	uart_chars
 1857 063c 12       		.uleb128 0x12
 1858 063d BD030000 		.4byte	.LASF88
 1859 0641 01       		.byte	0x1
 1860 0642 0D       		.byte	0xd
 1861 0643 81000000 		.4byte	0x81
 1862 0647 05       		.uleb128 0x5
 1863 0648 03       		.byte	0x3
 1864 0649 01010000 		.4byte	num_chars
 1865 064d 12       		.uleb128 0x12
 1866 064e B2020000 		.4byte	.LASF89
 1867 0652 01       		.byte	0x1
 1868 0653 0F       		.byte	0xf
 1869 0654 B2000000 		.4byte	0xb2
 1870 0658 05       		.uleb128 0x5
 1871 0659 03       		.byte	0x3
 1872 065a 00000000 		.4byte	line
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 39


 1873 065e 12       		.uleb128 0x12
 1874 065f 0C040000 		.4byte	.LASF90
 1875 0663 01       		.byte	0x1
 1876 0664 12       		.byte	0x12
 1877 0665 B2000000 		.4byte	0xb2
 1878 0669 05       		.uleb128 0x5
 1879 066a 03       		.byte	0x3
 1880 066b 04010000 		.4byte	match
 1881 066f 12       		.uleb128 0x12
 1882 0670 30040000 		.4byte	.LASF91
 1883 0674 01       		.byte	0x1
 1884 0675 13       		.byte	0x13
 1885 0676 B2000000 		.4byte	0xb2
 1886 067a 05       		.uleb128 0x5
 1887 067b 03       		.byte	0x3
 1888 067c 08010000 		.4byte	pattern
 1889 0680 1C       		.uleb128 0x1c
 1890 0681 54010000 		.4byte	.LASF92
 1891 0685 0A       		.byte	0xa
 1892 0686 1207     		.2byte	0x712
 1893 0688 8C060000 		.4byte	0x68c
 1894 068c 0E       		.uleb128 0xe
 1895 068d 8C000000 		.4byte	0x8c
 1896 0691 1D       		.uleb128 0x1d
 1897 0692 23050000 		.4byte	.LASF93
 1898 0696 06       		.byte	0x6
 1899 0697 25       		.byte	0x25
 1900 0698 B7030000 		.4byte	0x3b7
 1901 069c 05       		.uleb128 0x5
 1902 069d 03       		.byte	0x3
 1903 069e 00000000 		.4byte	level_sensor_inbox
 1904 06a2 1D       		.uleb128 0x1d
 1905 06a3 54000000 		.4byte	.LASF94
 1906 06a7 07       		.byte	0x7
 1907 06a8 11       		.byte	0x11
 1908 06a9 09030000 		.4byte	0x309
 1909 06ad 05       		.uleb128 0x5
 1910 06ae 03       		.byte	0x3
 1911 06af 00000000 		.4byte	buffer_overflow
 1912 06b3 1D       		.uleb128 0x1d
 1913 06b4 AB030000 		.4byte	.LASF95
 1914 06b8 07       		.byte	0x7
 1915 06b9 22       		.byte	0x22
 1916 06ba E7000000 		.4byte	0xe7
 1917 06be 05       		.uleb128 0x5
 1918 06bf 03       		.byte	0x3
 1919 06c0 00000000 		.4byte	dataPointsInStack
 1920 06c4 1D       		.uleb128 0x1d
 1921 06c5 D3050000 		.4byte	.LASF96
 1922 06c9 07       		.byte	0x7
 1923 06ca 23       		.byte	0x23
 1924 06cb E7000000 		.4byte	0xe7
 1925 06cf 05       		.uleb128 0x5
 1926 06d0 03       		.byte	0x3
 1927 06d1 00000000 		.4byte	dataPointsInStackDesired
 1928 06d5 07       		.uleb128 0x7
 1929 06d6 F5010000 		.4byte	0x1f5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 40


 1930 06da E5060000 		.4byte	0x6e5
 1931 06de 08       		.uleb128 0x8
 1932 06df 9E000000 		.4byte	0x9e
 1933 06e3 95       		.byte	0x95
 1934 06e4 00       		.byte	0
 1935 06e5 1D       		.uleb128 0x1d
 1936 06e6 22030000 		.4byte	.LASF97
 1937 06ea 07       		.byte	0x7
 1938 06eb 24       		.byte	0x24
 1939 06ec D5060000 		.4byte	0x6d5
 1940 06f0 05       		.uleb128 0x5
 1941 06f1 03       		.byte	0x3
 1942 06f2 00000000 		.4byte	data
 1943 06f6 1D       		.uleb128 0x1d
 1944 06f7 36010000 		.4byte	.LASF98
 1945 06fb 08       		.byte	0x8
 1946 06fc 20       		.byte	0x20
 1947 06fd DB000000 		.4byte	0xdb
 1948 0701 05       		.uleb128 0x5
 1949 0702 03       		.byte	0x3
 1950 0703 00000000 		.4byte	modem_state
 1951 0707 1D       		.uleb128 0x1d
 1952 0708 72030000 		.4byte	.LASF99
 1953 070c 08       		.byte	0x8
 1954 070d 6A       		.byte	0x6a
 1955 070e FF000000 		.4byte	0xff
 1956 0712 05       		.uleb128 0x5
 1957 0713 03       		.byte	0x3
 1958 0714 00000000 		.4byte	modem_start_time_stamp
 1959 0718 1D       		.uleb128 0x1d
 1960 0719 2F030000 		.4byte	.LASF60
 1961 071d 08       		.byte	0x8
 1962 071e 6B       		.byte	0x6b
 1963 071f 2D020000 		.4byte	0x22d
 1964 0723 05       		.uleb128 0x5
 1965 0724 03       		.byte	0x3
 1966 0725 00000000 		.4byte	modem_info
 1967 0729 1D       		.uleb128 0x1d
 1968 072a 89010000 		.4byte	.LASF100
 1969 072e 08       		.byte	0x8
 1970 072f 6C       		.byte	0x6c
 1971 0730 A1020000 		.4byte	0x2a1
 1972 0734 05       		.uleb128 0x5
 1973 0735 03       		.byte	0x3
 1974 0736 00000000 		.4byte	modem_stats
 1975 073a 1D       		.uleb128 0x1d
 1976 073b 12040000 		.4byte	.LASF101
 1977 073f 08       		.byte	0x8
 1978 0740 6D       		.byte	0x6d
 1979 0741 10030000 		.4byte	0x310
 1980 0745 05       		.uleb128 0x5
 1981 0746 03       		.byte	0x3
 1982 0747 00000000 		.4byte	updatable_parameters
 1983 074b 1D       		.uleb128 0x1d
 1984 074c 63060000 		.4byte	.LASF102
 1985 0750 0B       		.byte	0xb
 1986 0751 12       		.byte	0x12
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 41


 1987 0752 B7030000 		.4byte	0x3b7
 1988 0756 05       		.uleb128 0x5
 1989 0757 03       		.byte	0x3
 1990 0758 00000000 		.4byte	app_led_inbox
 1991 075c 07       		.uleb128 0x7
 1992 075d AB000000 		.4byte	0xab
 1993 0761 6D070000 		.4byte	0x76d
 1994 0765 1B       		.uleb128 0x1b
 1995 0766 9E000000 		.4byte	0x9e
 1996 076a 0F27     		.2byte	0x270f
 1997 076c 00       		.byte	0
 1998 076d 1D       		.uleb128 0x1d
 1999 076e 4F060000 		.4byte	.LASF103
 2000 0772 09       		.byte	0x9
 2001 0773 18       		.byte	0x18
 2002 0774 5C070000 		.4byte	0x75c
 2003 0778 05       		.uleb128 0x5
 2004 0779 03       		.byte	0x3
 2005 077a 00000000 		.4byte	http_request
 2006 077e 1D       		.uleb128 0x1d
 2007 077f 01020000 		.4byte	.LASF104
 2008 0783 09       		.byte	0x9
 2009 0784 19       		.byte	0x19
 2010 0785 5C070000 		.4byte	0x75c
 2011 0789 05       		.uleb128 0x5
 2012 078a 03       		.byte	0x3
 2013 078b 00000000 		.4byte	http_body
 2014 078f 07       		.uleb128 0x7
 2015 0790 AB000000 		.4byte	0xab
 2016 0794 9F070000 		.4byte	0x79f
 2017 0798 08       		.uleb128 0x8
 2018 0799 9E000000 		.4byte	0x9e
 2019 079d C7       		.byte	0xc7
 2020 079e 00       		.byte	0
 2021 079f 1D       		.uleb128 0x1d
 2022 07a0 53050000 		.4byte	.LASF105
 2023 07a4 09       		.byte	0x9
 2024 07a5 1A       		.byte	0x1a
 2025 07a6 8F070000 		.4byte	0x78f
 2026 07aa 05       		.uleb128 0x5
 2027 07ab 03       		.byte	0x3
 2028 07ac 00000000 		.4byte	http_route
 2029 07b0 1D       		.uleb128 0x1d
 2030 07b1 D2040000 		.4byte	.LASF106
 2031 07b5 09       		.byte	0x9
 2032 07b6 41       		.byte	0x41
 2033 07b7 8B030000 		.4byte	0x38b
 2034 07bb 05       		.uleb128 0x5
 2035 07bc 03       		.byte	0x3
 2036 07bd 00000000 		.4byte	system_info
 2037 07c1 1D       		.uleb128 0x1d
 2038 07c2 97040000 		.4byte	.LASF107
 2039 07c6 09       		.byte	0x9
 2040 07c7 53       		.byte	0x53
 2041 07c8 C7030000 		.4byte	0x3c7
 2042 07cc 05       		.uleb128 0x5
 2043 07cd 03       		.byte	0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 42


 2044 07ce 00000000 		.4byte	system_settings
 2045 07d2 1D       		.uleb128 0x1d
 2046 07d3 47010000 		.4byte	.LASF108
 2047 07d7 09       		.byte	0x9
 2048 07d8 6F       		.byte	0x6f
 2049 07d9 54030000 		.4byte	0x354
 2050 07dd 05       		.uleb128 0x5
 2051 07de 03       		.byte	0x3
 2052 07df 00000000 		.4byte	alarmMeasure
 2053 07e3 1D       		.uleb128 0x1d
 2054 07e4 C3010000 		.4byte	.LASF109
 2055 07e8 09       		.byte	0x9
 2056 07e9 70       		.byte	0x70
 2057 07ea DB000000 		.4byte	0xdb
 2058 07ee 05       		.uleb128 0x5
 2059 07ef 03       		.byte	0x3
 2060 07f0 00000000 		.4byte	timeToMeasure
 2061 07f4 1D       		.uleb128 0x1d
 2062 07f5 CE020000 		.4byte	.LASF110
 2063 07f9 09       		.byte	0x9
 2064 07fa 71       		.byte	0x71
 2065 07fb 54030000 		.4byte	0x354
 2066 07ff 05       		.uleb128 0x5
 2067 0800 03       		.byte	0x3
 2068 0801 00000000 		.4byte	alarmSync
 2069 0805 1D       		.uleb128 0x1d
 2070 0806 E9010000 		.4byte	.LASF111
 2071 080a 09       		.byte	0x9
 2072 080b 72       		.byte	0x72
 2073 080c DB000000 		.4byte	0xdb
 2074 0810 05       		.uleb128 0x5
 2075 0811 03       		.byte	0x3
 2076 0812 00000000 		.4byte	timeToSync
 2077 0816 1D       		.uleb128 0x1d
 2078 0817 EB030000 		.4byte	.LASF112
 2079 081b 09       		.byte	0x9
 2080 081c 73       		.byte	0x73
 2081 081d DB000000 		.4byte	0xdb
 2082 0821 05       		.uleb128 0x5
 2083 0822 03       		.byte	0x3
 2084 0823 00000000 		.4byte	timeToSycnRemoteParams
 2085 0827 1E       		.uleb128 0x1e
 2086 0828 68657900 		.ascii	"hey\000"
 2087 082c 09       		.byte	0x9
 2088 082d 74       		.byte	0x74
 2089 082e DB000000 		.4byte	0xdb
 2090 0832 05       		.uleb128 0x5
 2091 0833 03       		.byte	0x3
 2092 0834 00000000 		.4byte	hey
 2093 0838 1D       		.uleb128 0x1d
 2094 0839 66030000 		.4byte	.LASF113
 2095 083d 09       		.byte	0x9
 2096 083e 77       		.byte	0x77
 2097 083f 54030000 		.4byte	0x354
 2098 0843 05       		.uleb128 0x5
 2099 0844 03       		.byte	0x3
 2100 0845 00000000 		.4byte	alarmAppLED
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 43


 2101 0849 1D       		.uleb128 0x1d
 2102 084a 5D020000 		.4byte	.LASF114
 2103 084e 09       		.byte	0x9
 2104 084f 78       		.byte	0x78
 2105 0850 DB000000 		.4byte	0xdb
 2106 0854 05       		.uleb128 0x5
 2107 0855 03       		.byte	0x3
 2108 0856 00000000 		.4byte	timeToAppLED
 2109 085a 1D       		.uleb128 0x1d
 2110 085b 00050000 		.4byte	.LASF115
 2111 085f 09       		.byte	0x9
 2112 0860 7A       		.byte	0x7a
 2113 0861 54030000 		.4byte	0x354
 2114 0865 05       		.uleb128 0x5
 2115 0866 03       		.byte	0x3
 2116 0867 00000000 		.4byte	alarmLevelSensor
 2117 086b 1D       		.uleb128 0x1d
 2118 086c 77010000 		.4byte	.LASF116
 2119 0870 09       		.byte	0x9
 2120 0871 7B       		.byte	0x7b
 2121 0872 DB000000 		.4byte	0xdb
 2122 0876 05       		.uleb128 0x5
 2123 0877 03       		.byte	0x3
 2124 0878 00000000 		.4byte	timetoLevelSensor
 2125 087c 00       		.byte	0
 2126              		.section	.debug_abbrev,"",%progbits
 2127              	.Ldebug_abbrev0:
 2128 0000 01       		.uleb128 0x1
 2129 0001 11       		.uleb128 0x11
 2130 0002 01       		.byte	0x1
 2131 0003 25       		.uleb128 0x25
 2132 0004 0E       		.uleb128 0xe
 2133 0005 13       		.uleb128 0x13
 2134 0006 0B       		.uleb128 0xb
 2135 0007 03       		.uleb128 0x3
 2136 0008 0E       		.uleb128 0xe
 2137 0009 1B       		.uleb128 0x1b
 2138 000a 0E       		.uleb128 0xe
 2139 000b 55       		.uleb128 0x55
 2140 000c 17       		.uleb128 0x17
 2141 000d 11       		.uleb128 0x11
 2142 000e 01       		.uleb128 0x1
 2143 000f 10       		.uleb128 0x10
 2144 0010 17       		.uleb128 0x17
 2145 0011 00       		.byte	0
 2146 0012 00       		.byte	0
 2147 0013 02       		.uleb128 0x2
 2148 0014 24       		.uleb128 0x24
 2149 0015 00       		.byte	0
 2150 0016 0B       		.uleb128 0xb
 2151 0017 0B       		.uleb128 0xb
 2152 0018 3E       		.uleb128 0x3e
 2153 0019 0B       		.uleb128 0xb
 2154 001a 03       		.uleb128 0x3
 2155 001b 0E       		.uleb128 0xe
 2156 001c 00       		.byte	0
 2157 001d 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 44


 2158 001e 03       		.uleb128 0x3
 2159 001f 16       		.uleb128 0x16
 2160 0020 00       		.byte	0
 2161 0021 03       		.uleb128 0x3
 2162 0022 0E       		.uleb128 0xe
 2163 0023 3A       		.uleb128 0x3a
 2164 0024 0B       		.uleb128 0xb
 2165 0025 3B       		.uleb128 0x3b
 2166 0026 0B       		.uleb128 0xb
 2167 0027 49       		.uleb128 0x49
 2168 0028 13       		.uleb128 0x13
 2169 0029 00       		.byte	0
 2170 002a 00       		.byte	0
 2171 002b 04       		.uleb128 0x4
 2172 002c 24       		.uleb128 0x24
 2173 002d 00       		.byte	0
 2174 002e 0B       		.uleb128 0xb
 2175 002f 0B       		.uleb128 0xb
 2176 0030 3E       		.uleb128 0x3e
 2177 0031 0B       		.uleb128 0xb
 2178 0032 03       		.uleb128 0x3
 2179 0033 08       		.uleb128 0x8
 2180 0034 00       		.byte	0
 2181 0035 00       		.byte	0
 2182 0036 05       		.uleb128 0x5
 2183 0037 0F       		.uleb128 0xf
 2184 0038 00       		.byte	0
 2185 0039 0B       		.uleb128 0xb
 2186 003a 0B       		.uleb128 0xb
 2187 003b 49       		.uleb128 0x49
 2188 003c 13       		.uleb128 0x13
 2189 003d 00       		.byte	0
 2190 003e 00       		.byte	0
 2191 003f 06       		.uleb128 0x6
 2192 0040 26       		.uleb128 0x26
 2193 0041 00       		.byte	0
 2194 0042 49       		.uleb128 0x49
 2195 0043 13       		.uleb128 0x13
 2196 0044 00       		.byte	0
 2197 0045 00       		.byte	0
 2198 0046 07       		.uleb128 0x7
 2199 0047 01       		.uleb128 0x1
 2200 0048 01       		.byte	0x1
 2201 0049 49       		.uleb128 0x49
 2202 004a 13       		.uleb128 0x13
 2203 004b 01       		.uleb128 0x1
 2204 004c 13       		.uleb128 0x13
 2205 004d 00       		.byte	0
 2206 004e 00       		.byte	0
 2207 004f 08       		.uleb128 0x8
 2208 0050 21       		.uleb128 0x21
 2209 0051 00       		.byte	0
 2210 0052 49       		.uleb128 0x49
 2211 0053 13       		.uleb128 0x13
 2212 0054 2F       		.uleb128 0x2f
 2213 0055 0B       		.uleb128 0xb
 2214 0056 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 45


 2215 0057 00       		.byte	0
 2216 0058 09       		.uleb128 0x9
 2217 0059 16       		.uleb128 0x16
 2218 005a 00       		.byte	0
 2219 005b 03       		.uleb128 0x3
 2220 005c 0E       		.uleb128 0xe
 2221 005d 3A       		.uleb128 0x3a
 2222 005e 0B       		.uleb128 0xb
 2223 005f 3B       		.uleb128 0x3b
 2224 0060 05       		.uleb128 0x5
 2225 0061 49       		.uleb128 0x49
 2226 0062 13       		.uleb128 0x13
 2227 0063 00       		.byte	0
 2228 0064 00       		.byte	0
 2229 0065 0A       		.uleb128 0xa
 2230 0066 13       		.uleb128 0x13
 2231 0067 01       		.byte	0x1
 2232 0068 0B       		.uleb128 0xb
 2233 0069 05       		.uleb128 0x5
 2234 006a 3A       		.uleb128 0x3a
 2235 006b 0B       		.uleb128 0xb
 2236 006c 3B       		.uleb128 0x3b
 2237 006d 0B       		.uleb128 0xb
 2238 006e 01       		.uleb128 0x1
 2239 006f 13       		.uleb128 0x13
 2240 0070 00       		.byte	0
 2241 0071 00       		.byte	0
 2242 0072 0B       		.uleb128 0xb
 2243 0073 0D       		.uleb128 0xd
 2244 0074 00       		.byte	0
 2245 0075 03       		.uleb128 0x3
 2246 0076 0E       		.uleb128 0xe
 2247 0077 3A       		.uleb128 0x3a
 2248 0078 0B       		.uleb128 0xb
 2249 0079 3B       		.uleb128 0x3b
 2250 007a 0B       		.uleb128 0xb
 2251 007b 49       		.uleb128 0x49
 2252 007c 13       		.uleb128 0x13
 2253 007d 38       		.uleb128 0x38
 2254 007e 0B       		.uleb128 0xb
 2255 007f 00       		.byte	0
 2256 0080 00       		.byte	0
 2257 0081 0C       		.uleb128 0xc
 2258 0082 13       		.uleb128 0x13
 2259 0083 01       		.byte	0x1
 2260 0084 0B       		.uleb128 0xb
 2261 0085 0B       		.uleb128 0xb
 2262 0086 3A       		.uleb128 0x3a
 2263 0087 0B       		.uleb128 0xb
 2264 0088 3B       		.uleb128 0x3b
 2265 0089 0B       		.uleb128 0xb
 2266 008a 01       		.uleb128 0x1
 2267 008b 13       		.uleb128 0x13
 2268 008c 00       		.byte	0
 2269 008d 00       		.byte	0
 2270 008e 0D       		.uleb128 0xd
 2271 008f 0D       		.uleb128 0xd
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 46


 2272 0090 00       		.byte	0
 2273 0091 03       		.uleb128 0x3
 2274 0092 08       		.uleb128 0x8
 2275 0093 3A       		.uleb128 0x3a
 2276 0094 0B       		.uleb128 0xb
 2277 0095 3B       		.uleb128 0x3b
 2278 0096 0B       		.uleb128 0xb
 2279 0097 49       		.uleb128 0x49
 2280 0098 13       		.uleb128 0x13
 2281 0099 38       		.uleb128 0x38
 2282 009a 0B       		.uleb128 0xb
 2283 009b 00       		.byte	0
 2284 009c 00       		.byte	0
 2285 009d 0E       		.uleb128 0xe
 2286 009e 35       		.uleb128 0x35
 2287 009f 00       		.byte	0
 2288 00a0 49       		.uleb128 0x49
 2289 00a1 13       		.uleb128 0x13
 2290 00a2 00       		.byte	0
 2291 00a3 00       		.byte	0
 2292 00a4 0F       		.uleb128 0xf
 2293 00a5 2E       		.uleb128 0x2e
 2294 00a6 00       		.byte	0
 2295 00a7 3F       		.uleb128 0x3f
 2296 00a8 19       		.uleb128 0x19
 2297 00a9 03       		.uleb128 0x3
 2298 00aa 0E       		.uleb128 0xe
 2299 00ab 3A       		.uleb128 0x3a
 2300 00ac 0B       		.uleb128 0xb
 2301 00ad 3B       		.uleb128 0x3b
 2302 00ae 0B       		.uleb128 0xb
 2303 00af 27       		.uleb128 0x27
 2304 00b0 19       		.uleb128 0x19
 2305 00b1 49       		.uleb128 0x49
 2306 00b2 13       		.uleb128 0x13
 2307 00b3 11       		.uleb128 0x11
 2308 00b4 01       		.uleb128 0x1
 2309 00b5 12       		.uleb128 0x12
 2310 00b6 06       		.uleb128 0x6
 2311 00b7 40       		.uleb128 0x40
 2312 00b8 18       		.uleb128 0x18
 2313 00b9 9742     		.uleb128 0x2117
 2314 00bb 19       		.uleb128 0x19
 2315 00bc 00       		.byte	0
 2316 00bd 00       		.byte	0
 2317 00be 10       		.uleb128 0x10
 2318 00bf 2E       		.uleb128 0x2e
 2319 00c0 00       		.byte	0
 2320 00c1 3F       		.uleb128 0x3f
 2321 00c2 19       		.uleb128 0x19
 2322 00c3 03       		.uleb128 0x3
 2323 00c4 0E       		.uleb128 0xe
 2324 00c5 3A       		.uleb128 0x3a
 2325 00c6 0B       		.uleb128 0xb
 2326 00c7 3B       		.uleb128 0x3b
 2327 00c8 0B       		.uleb128 0xb
 2328 00c9 27       		.uleb128 0x27
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 47


 2329 00ca 19       		.uleb128 0x19
 2330 00cb 11       		.uleb128 0x11
 2331 00cc 01       		.uleb128 0x1
 2332 00cd 12       		.uleb128 0x12
 2333 00ce 06       		.uleb128 0x6
 2334 00cf 40       		.uleb128 0x40
 2335 00d0 18       		.uleb128 0x18
 2336 00d1 9642     		.uleb128 0x2116
 2337 00d3 19       		.uleb128 0x19
 2338 00d4 00       		.byte	0
 2339 00d5 00       		.byte	0
 2340 00d6 11       		.uleb128 0x11
 2341 00d7 2E       		.uleb128 0x2e
 2342 00d8 01       		.byte	0x1
 2343 00d9 3F       		.uleb128 0x3f
 2344 00da 19       		.uleb128 0x19
 2345 00db 03       		.uleb128 0x3
 2346 00dc 0E       		.uleb128 0xe
 2347 00dd 3A       		.uleb128 0x3a
 2348 00de 0B       		.uleb128 0xb
 2349 00df 3B       		.uleb128 0x3b
 2350 00e0 0B       		.uleb128 0xb
 2351 00e1 27       		.uleb128 0x27
 2352 00e2 19       		.uleb128 0x19
 2353 00e3 11       		.uleb128 0x11
 2354 00e4 01       		.uleb128 0x1
 2355 00e5 12       		.uleb128 0x12
 2356 00e6 06       		.uleb128 0x6
 2357 00e7 40       		.uleb128 0x40
 2358 00e8 18       		.uleb128 0x18
 2359 00e9 9642     		.uleb128 0x2116
 2360 00eb 19       		.uleb128 0x19
 2361 00ec 01       		.uleb128 0x1
 2362 00ed 13       		.uleb128 0x13
 2363 00ee 00       		.byte	0
 2364 00ef 00       		.byte	0
 2365 00f0 12       		.uleb128 0x12
 2366 00f1 34       		.uleb128 0x34
 2367 00f2 00       		.byte	0
 2368 00f3 03       		.uleb128 0x3
 2369 00f4 0E       		.uleb128 0xe
 2370 00f5 3A       		.uleb128 0x3a
 2371 00f6 0B       		.uleb128 0xb
 2372 00f7 3B       		.uleb128 0x3b
 2373 00f8 0B       		.uleb128 0xb
 2374 00f9 49       		.uleb128 0x49
 2375 00fa 13       		.uleb128 0x13
 2376 00fb 02       		.uleb128 0x2
 2377 00fc 18       		.uleb128 0x18
 2378 00fd 00       		.byte	0
 2379 00fe 00       		.byte	0
 2380 00ff 13       		.uleb128 0x13
 2381 0100 05       		.uleb128 0x5
 2382 0101 00       		.byte	0
 2383 0102 03       		.uleb128 0x3
 2384 0103 0E       		.uleb128 0xe
 2385 0104 3A       		.uleb128 0x3a
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 48


 2386 0105 0B       		.uleb128 0xb
 2387 0106 3B       		.uleb128 0x3b
 2388 0107 0B       		.uleb128 0xb
 2389 0108 49       		.uleb128 0x49
 2390 0109 13       		.uleb128 0x13
 2391 010a 02       		.uleb128 0x2
 2392 010b 18       		.uleb128 0x18
 2393 010c 00       		.byte	0
 2394 010d 00       		.byte	0
 2395 010e 14       		.uleb128 0x14
 2396 010f 2E       		.uleb128 0x2e
 2397 0110 01       		.byte	0x1
 2398 0111 3F       		.uleb128 0x3f
 2399 0112 19       		.uleb128 0x19
 2400 0113 03       		.uleb128 0x3
 2401 0114 0E       		.uleb128 0xe
 2402 0115 3A       		.uleb128 0x3a
 2403 0116 0B       		.uleb128 0xb
 2404 0117 3B       		.uleb128 0x3b
 2405 0118 0B       		.uleb128 0xb
 2406 0119 49       		.uleb128 0x49
 2407 011a 13       		.uleb128 0x13
 2408 011b 11       		.uleb128 0x11
 2409 011c 01       		.uleb128 0x1
 2410 011d 12       		.uleb128 0x12
 2411 011e 06       		.uleb128 0x6
 2412 011f 40       		.uleb128 0x40
 2413 0120 18       		.uleb128 0x18
 2414 0121 9642     		.uleb128 0x2116
 2415 0123 19       		.uleb128 0x19
 2416 0124 01       		.uleb128 0x1
 2417 0125 13       		.uleb128 0x13
 2418 0126 00       		.byte	0
 2419 0127 00       		.byte	0
 2420 0128 15       		.uleb128 0x15
 2421 0129 0B       		.uleb128 0xb
 2422 012a 01       		.byte	0x1
 2423 012b 11       		.uleb128 0x11
 2424 012c 01       		.uleb128 0x1
 2425 012d 12       		.uleb128 0x12
 2426 012e 06       		.uleb128 0x6
 2427 012f 00       		.byte	0
 2428 0130 00       		.byte	0
 2429 0131 16       		.uleb128 0x16
 2430 0132 0B       		.uleb128 0xb
 2431 0133 01       		.byte	0x1
 2432 0134 55       		.uleb128 0x55
 2433 0135 17       		.uleb128 0x17
 2434 0136 00       		.byte	0
 2435 0137 00       		.byte	0
 2436 0138 17       		.uleb128 0x17
 2437 0139 2E       		.uleb128 0x2e
 2438 013a 01       		.byte	0x1
 2439 013b 3F       		.uleb128 0x3f
 2440 013c 19       		.uleb128 0x19
 2441 013d 03       		.uleb128 0x3
 2442 013e 0E       		.uleb128 0xe
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 49


 2443 013f 3A       		.uleb128 0x3a
 2444 0140 0B       		.uleb128 0xb
 2445 0141 3B       		.uleb128 0x3b
 2446 0142 0B       		.uleb128 0xb
 2447 0143 27       		.uleb128 0x27
 2448 0144 19       		.uleb128 0x19
 2449 0145 49       		.uleb128 0x49
 2450 0146 13       		.uleb128 0x13
 2451 0147 11       		.uleb128 0x11
 2452 0148 01       		.uleb128 0x1
 2453 0149 12       		.uleb128 0x12
 2454 014a 06       		.uleb128 0x6
 2455 014b 40       		.uleb128 0x40
 2456 014c 18       		.uleb128 0x18
 2457 014d 9642     		.uleb128 0x2116
 2458 014f 19       		.uleb128 0x19
 2459 0150 01       		.uleb128 0x1
 2460 0151 13       		.uleb128 0x13
 2461 0152 00       		.byte	0
 2462 0153 00       		.byte	0
 2463 0154 18       		.uleb128 0x18
 2464 0155 05       		.uleb128 0x5
 2465 0156 00       		.byte	0
 2466 0157 03       		.uleb128 0x3
 2467 0158 08       		.uleb128 0x8
 2468 0159 3A       		.uleb128 0x3a
 2469 015a 0B       		.uleb128 0xb
 2470 015b 3B       		.uleb128 0x3b
 2471 015c 0B       		.uleb128 0xb
 2472 015d 49       		.uleb128 0x49
 2473 015e 13       		.uleb128 0x13
 2474 015f 02       		.uleb128 0x2
 2475 0160 18       		.uleb128 0x18
 2476 0161 00       		.byte	0
 2477 0162 00       		.byte	0
 2478 0163 19       		.uleb128 0x19
 2479 0164 34       		.uleb128 0x34
 2480 0165 00       		.byte	0
 2481 0166 03       		.uleb128 0x3
 2482 0167 08       		.uleb128 0x8
 2483 0168 3A       		.uleb128 0x3a
 2484 0169 0B       		.uleb128 0xb
 2485 016a 3B       		.uleb128 0x3b
 2486 016b 0B       		.uleb128 0xb
 2487 016c 49       		.uleb128 0x49
 2488 016d 13       		.uleb128 0x13
 2489 016e 02       		.uleb128 0x2
 2490 016f 18       		.uleb128 0x18
 2491 0170 00       		.byte	0
 2492 0171 00       		.byte	0
 2493 0172 1A       		.uleb128 0x1a
 2494 0173 2E       		.uleb128 0x2e
 2495 0174 01       		.byte	0x1
 2496 0175 3F       		.uleb128 0x3f
 2497 0176 19       		.uleb128 0x19
 2498 0177 03       		.uleb128 0x3
 2499 0178 0E       		.uleb128 0xe
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 50


 2500 0179 3A       		.uleb128 0x3a
 2501 017a 0B       		.uleb128 0xb
 2502 017b 3B       		.uleb128 0x3b
 2503 017c 0B       		.uleb128 0xb
 2504 017d 27       		.uleb128 0x27
 2505 017e 19       		.uleb128 0x19
 2506 017f 11       		.uleb128 0x11
 2507 0180 01       		.uleb128 0x1
 2508 0181 12       		.uleb128 0x12
 2509 0182 06       		.uleb128 0x6
 2510 0183 40       		.uleb128 0x40
 2511 0184 18       		.uleb128 0x18
 2512 0185 9742     		.uleb128 0x2117
 2513 0187 19       		.uleb128 0x19
 2514 0188 01       		.uleb128 0x1
 2515 0189 13       		.uleb128 0x13
 2516 018a 00       		.byte	0
 2517 018b 00       		.byte	0
 2518 018c 1B       		.uleb128 0x1b
 2519 018d 21       		.uleb128 0x21
 2520 018e 00       		.byte	0
 2521 018f 49       		.uleb128 0x49
 2522 0190 13       		.uleb128 0x13
 2523 0191 2F       		.uleb128 0x2f
 2524 0192 05       		.uleb128 0x5
 2525 0193 00       		.byte	0
 2526 0194 00       		.byte	0
 2527 0195 1C       		.uleb128 0x1c
 2528 0196 34       		.uleb128 0x34
 2529 0197 00       		.byte	0
 2530 0198 03       		.uleb128 0x3
 2531 0199 0E       		.uleb128 0xe
 2532 019a 3A       		.uleb128 0x3a
 2533 019b 0B       		.uleb128 0xb
 2534 019c 3B       		.uleb128 0x3b
 2535 019d 05       		.uleb128 0x5
 2536 019e 49       		.uleb128 0x49
 2537 019f 13       		.uleb128 0x13
 2538 01a0 3F       		.uleb128 0x3f
 2539 01a1 19       		.uleb128 0x19
 2540 01a2 3C       		.uleb128 0x3c
 2541 01a3 19       		.uleb128 0x19
 2542 01a4 00       		.byte	0
 2543 01a5 00       		.byte	0
 2544 01a6 1D       		.uleb128 0x1d
 2545 01a7 34       		.uleb128 0x34
 2546 01a8 00       		.byte	0
 2547 01a9 03       		.uleb128 0x3
 2548 01aa 0E       		.uleb128 0xe
 2549 01ab 3A       		.uleb128 0x3a
 2550 01ac 0B       		.uleb128 0xb
 2551 01ad 3B       		.uleb128 0x3b
 2552 01ae 0B       		.uleb128 0xb
 2553 01af 49       		.uleb128 0x49
 2554 01b0 13       		.uleb128 0x13
 2555 01b1 3F       		.uleb128 0x3f
 2556 01b2 19       		.uleb128 0x19
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 51


 2557 01b3 02       		.uleb128 0x2
 2558 01b4 18       		.uleb128 0x18
 2559 01b5 00       		.byte	0
 2560 01b6 00       		.byte	0
 2561 01b7 1E       		.uleb128 0x1e
 2562 01b8 34       		.uleb128 0x34
 2563 01b9 00       		.byte	0
 2564 01ba 03       		.uleb128 0x3
 2565 01bb 08       		.uleb128 0x8
 2566 01bc 3A       		.uleb128 0x3a
 2567 01bd 0B       		.uleb128 0xb
 2568 01be 3B       		.uleb128 0x3b
 2569 01bf 0B       		.uleb128 0xb
 2570 01c0 49       		.uleb128 0x49
 2571 01c1 13       		.uleb128 0x13
 2572 01c2 3F       		.uleb128 0x3f
 2573 01c3 19       		.uleb128 0x19
 2574 01c4 02       		.uleb128 0x2
 2575 01c5 18       		.uleb128 0x18
 2576 01c6 00       		.byte	0
 2577 01c7 00       		.byte	0
 2578 01c8 00       		.byte	0
 2579              		.section	.debug_aranges,"",%progbits
 2580 0000 6C000000 		.4byte	0x6c
 2581 0004 0200     		.2byte	0x2
 2582 0006 00000000 		.4byte	.Ldebug_info0
 2583 000a 04       		.byte	0x4
 2584 000b 00       		.byte	0
 2585 000c 0000     		.2byte	0
 2586 000e 0000     		.2byte	0
 2587 0010 00000000 		.4byte	.LFB64
 2588 0014 14000000 		.4byte	.LFE64-.LFB64
 2589 0018 00000000 		.4byte	.LFB65
 2590 001c 14000000 		.4byte	.LFE65-.LFB65
 2591 0020 00000000 		.4byte	.LFB66
 2592 0024 28000000 		.4byte	.LFE66-.LFB66
 2593 0028 00000000 		.4byte	.LFB67
 2594 002c 70000000 		.4byte	.LFE67-.LFB67
 2595 0030 00000000 		.4byte	.LFB68
 2596 0034 1C000000 		.4byte	.LFE68-.LFB68
 2597 0038 00000000 		.4byte	.LFB69
 2598 003c FC000000 		.4byte	.LFE69-.LFB69
 2599 0040 00000000 		.4byte	.LFB70
 2600 0044 1C010000 		.4byte	.LFE70-.LFB70
 2601 0048 00000000 		.4byte	.LFB71
 2602 004c CC000000 		.4byte	.LFE71-.LFB71
 2603 0050 00000000 		.4byte	.LFB72
 2604 0054 8E000000 		.4byte	.LFE72-.LFB72
 2605 0058 00000000 		.4byte	.LFB73
 2606 005c 98000000 		.4byte	.LFE73-.LFB73
 2607 0060 00000000 		.4byte	.LFB74
 2608 0064 2A000000 		.4byte	.LFE74-.LFB74
 2609 0068 00000000 		.4byte	0
 2610 006c 00000000 		.4byte	0
 2611              		.section	.debug_ranges,"",%progbits
 2612              	.Ldebug_ranges0:
 2613 0000 70000000 		.4byte	.LBB3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 52


 2614 0004 C0000000 		.4byte	.LBE3
 2615 0008 D2000000 		.4byte	.LBB4
 2616 000c D4000000 		.4byte	.LBE4
 2617 0010 00000000 		.4byte	0
 2618 0014 00000000 		.4byte	0
 2619 0018 00000000 		.4byte	.LFB64
 2620 001c 14000000 		.4byte	.LFE64
 2621 0020 00000000 		.4byte	.LFB65
 2622 0024 14000000 		.4byte	.LFE65
 2623 0028 00000000 		.4byte	.LFB66
 2624 002c 28000000 		.4byte	.LFE66
 2625 0030 00000000 		.4byte	.LFB67
 2626 0034 70000000 		.4byte	.LFE67
 2627 0038 00000000 		.4byte	.LFB68
 2628 003c 1C000000 		.4byte	.LFE68
 2629 0040 00000000 		.4byte	.LFB69
 2630 0044 FC000000 		.4byte	.LFE69
 2631 0048 00000000 		.4byte	.LFB70
 2632 004c 1C010000 		.4byte	.LFE70
 2633 0050 00000000 		.4byte	.LFB71
 2634 0054 CC000000 		.4byte	.LFE71
 2635 0058 00000000 		.4byte	.LFB72
 2636 005c 8E000000 		.4byte	.LFE72
 2637 0060 00000000 		.4byte	.LFB73
 2638 0064 98000000 		.4byte	.LFE73
 2639 0068 00000000 		.4byte	.LFB74
 2640 006c 2A000000 		.4byte	.LFE74
 2641 0070 00000000 		.4byte	0
 2642 0074 00000000 		.4byte	0
 2643              		.section	.debug_line,"",%progbits
 2644              	.Ldebug_line0:
 2645 0000 E8020000 		.section	.debug_str,"MS",%progbits,1
 2645      0200A301 
 2645      00000201 
 2645      FB0E0D00 
 2645      01010101 
 2646              	.LASF19:
 2647 0000 75696E74 		.ascii	"uint16\000"
 2647      313600
 2648              	.LASF29:
 2649 0007 6E756D5F 		.ascii	"num_invalid_readings\000"
 2649      696E7661 
 2649      6C69645F 
 2649      72656164 
 2649      696E6773 
 2650              	.LASF119:
 2651 001c 433A5C55 		.ascii	"C:\\Users\\dantz\\Documents\\GitHub\\notoriOS\\noto"
 2651      73657273 
 2651      5C64616E 
 2651      747A5C44 
 2651      6F63756D 
 2652 0049 72694F53 		.ascii	"riOS.cydsn\000"
 2652      2E637964 
 2652      736E00
 2653              	.LASF94:
 2654 0054 62756666 		.ascii	"buffer_overflow\000"
 2654      65725F6F 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 53


 2654      76657266 
 2654      6C6F7700 
 2655              	.LASF4:
 2656 0064 5F5F7569 		.ascii	"__uint8_t\000"
 2656      6E74385F 
 2656      7400
 2657              	.LASF58:
 2658 006e 636F756E 		.ascii	"countDownResetCondition\000"
 2658      74446F77 
 2658      6E526573 
 2658      6574436F 
 2658      6E646974 
 2659              	.LASF117:
 2660 0086 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2660      43313120 
 2660      352E342E 
 2660      31203230 
 2660      31363036 
 2661 00b9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2661      20726576 
 2661      6973696F 
 2661      6E203233 
 2661      37373135 
 2662 00ec 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2662      66756E63 
 2662      74696F6E 
 2662      2D736563 
 2662      74696F6E 
 2663              	.LASF87:
 2664 0114 75617274 		.ascii	"uart_chars\000"
 2664      5F636861 
 2664      727300
 2665              	.LASF9:
 2666 011f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2666      206C6F6E 
 2666      6720756E 
 2666      7369676E 
 2666      65642069 
 2667              	.LASF98:
 2668 0136 6D6F6465 		.ascii	"modem_state\000"
 2668      6D5F7374 
 2668      61746500 
 2669              	.LASF80:
 2670 0142 74657374 		.ascii	"test\000"
 2670      00
 2671              	.LASF108:
 2672 0147 616C6172 		.ascii	"alarmMeasure\000"
 2672      6D4D6561 
 2672      73757265 
 2672      00
 2673              	.LASF92:
 2674 0154 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2674      52784275 
 2674      66666572 
 2674      00
 2675              	.LASF118:
 2676 0161 6C657665 		.ascii	"level_sensor.c\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 54


 2676      6C5F7365 
 2676      6E736F72 
 2676      2E6300
 2677              	.LASF84:
 2678 0170 6D656469 		.ascii	"median\000"
 2678      616E00
 2679              	.LASF116:
 2680 0177 74696D65 		.ascii	"timetoLevelSensor\000"
 2680      746F4C65 
 2680      76656C53 
 2680      656E736F 
 2680      7200
 2681              	.LASF100:
 2682 0189 6D6F6465 		.ascii	"modem_stats\000"
 2682      6D5F7374 
 2682      61747300 
 2683              	.LASF8:
 2684 0195 6C6F6E67 		.ascii	"long long int\000"
 2684      206C6F6E 
 2684      6720696E 
 2684      7400
 2685              	.LASF0:
 2686 01a3 7369676E 		.ascii	"signed char\000"
 2686      65642063 
 2686      68617200 
 2687              	.LASF40:
 2688 01af 65636E6F 		.ascii	"ecno\000"
 2688      00
 2689              	.LASF55:
 2690 01b4 636F756E 		.ascii	"countDownValue\000"
 2690      74446F77 
 2690      6E56616C 
 2690      756500
 2691              	.LASF109:
 2692 01c3 74696D65 		.ascii	"timeToMeasure\000"
 2692      546F4D65 
 2692      61737572 
 2692      6500
 2693              	.LASF43:
 2694 01d1 74696D65 		.ascii	"time_to_network_connect\000"
 2694      5F746F5F 
 2694      6E657477 
 2694      6F726B5F 
 2694      636F6E6E 
 2695              	.LASF111:
 2696 01e9 74696D65 		.ascii	"timeToSync\000"
 2696      546F5379 
 2696      6E6300
 2697              	.LASF70:
 2698 01f4 6C657665 		.ascii	"level_sensor\000"
 2698      6C5F7365 
 2698      6E736F72 
 2698      00
 2699              	.LASF104:
 2700 0201 68747470 		.ascii	"http_body\000"
 2700      5F626F64 
 2700      7900
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 55


 2701              	.LASF37:
 2702 020b 6D6F6465 		.ascii	"modem_info_t\000"
 2702      6D5F696E 
 2702      666F5F74 
 2702      00
 2703              	.LASF38:
 2704 0218 72786C65 		.ascii	"rxlev\000"
 2704      7600
 2705              	.LASF6:
 2706 021e 6C6F6E67 		.ascii	"long int\000"
 2706      20696E74 
 2706      00
 2707              	.LASF56:
 2708 0227 63757272 		.ascii	"currentCountDownValue\000"
 2708      656E7443 
 2708      6F756E74 
 2708      446F776E 
 2708      56616C75 
 2709              	.LASF59:
 2710 023d 616C6172 		.ascii	"alarm\000"
 2710      6D00
 2711              	.LASF18:
 2712 0243 75696E74 		.ascii	"uint8\000"
 2712      3800
 2713              	.LASF76:
 2714 0249 6C657665 		.ascii	"level_sensor_output\000"
 2714      6C5F7365 
 2714      6E736F72 
 2714      5F6F7574 
 2714      70757400 
 2715              	.LASF114:
 2716 025d 74696D65 		.ascii	"timeToAppLED\000"
 2716      546F4170 
 2716      704C4544 
 2716      00
 2717              	.LASF21:
 2718 026a 696E7433 		.ascii	"int32\000"
 2718      3200
 2719              	.LASF46:
 2720 0270 6E6F6465 		.ascii	"node_type\000"
 2720      5F747970 
 2720      6500
 2721              	.LASF78:
 2722 027a 72656164 		.ascii	"reading\000"
 2722      696E6700 
 2723              	.LASF83:
 2724 0282 61727261 		.ascii	"array\000"
 2724      7900
 2725              	.LASF61:
 2726 0288 63686970 		.ascii	"chip_uniqueId\000"
 2726      5F756E69 
 2726      71756549 
 2726      6400
 2727              	.LASF35:
 2728 0296 6D6F6465 		.ascii	"model_id\000"
 2728      6C5F6964 
 2728      00
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 56


 2729              	.LASF26:
 2730 029f 616C6C5F 		.ascii	"all_level_readings\000"
 2730      6C657665 
 2730      6C5F7265 
 2730      6164696E 
 2730      677300
 2731              	.LASF89:
 2732 02b2 6C696E65 		.ascii	"line\000"
 2732      00
 2733              	.LASF85:
 2734 02b7 736F7274 		.ascii	"sort\000"
 2734      00
 2735              	.LASF50:
 2736 02bc 64656275 		.ascii	"debug_level\000"
 2736      675F6C65 
 2736      76656C00 
 2737              	.LASF31:
 2738 02c8 76616C75 		.ascii	"value\000"
 2738      6500
 2739              	.LASF110:
 2740 02ce 616C6172 		.ascii	"alarmSync\000"
 2740      6D53796E 
 2740      6300
 2741              	.LASF10:
 2742 02d8 756E7369 		.ascii	"unsigned int\000"
 2742      676E6564 
 2742      20696E74 
 2742      00
 2743              	.LASF33:
 2744 02e5 6B65795F 		.ascii	"key_value_t\000"
 2744      76616C75 
 2744      655F7400 
 2745              	.LASF28:
 2746 02f1 6E756D5F 		.ascii	"num_valid_readings\000"
 2746      76616C69 
 2746      645F7265 
 2746      6164696E 
 2746      677300
 2747              	.LASF7:
 2748 0304 6C6F6E67 		.ascii	"long unsigned int\000"
 2748      20756E73 
 2748      69676E65 
 2748      6420696E 
 2748      7400
 2749              	.LASF66:
 2750 0316 75617274 		.ascii	"uart_string\000"
 2750      5F737472 
 2750      696E6700 
 2751              	.LASF97:
 2752 0322 64617461 		.ascii	"data\000"
 2752      00
 2753              	.LASF64:
 2754 0327 65705F70 		.ascii	"ep_port\000"
 2754      6F727400 
 2755              	.LASF60:
 2756 032f 6D6F6465 		.ascii	"modem_info\000"
 2756      6D5F696E 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 57


 2756      666F00
 2757              	.LASF63:
 2758 033a 65705F68 		.ascii	"ep_host\000"
 2758      6F737400 
 2759              	.LASF81:
 2760 0342 73656E73 		.ascii	"sensor\000"
 2760      6F7200
 2761              	.LASF44:
 2762 0349 74696D65 		.ascii	"time_to_acquire_ip\000"
 2762      5F746F5F 
 2762      61637175 
 2762      6972655F 
 2762      697000
 2763              	.LASF2:
 2764 035c 73686F72 		.ascii	"short int\000"
 2764      7420696E 
 2764      7400
 2765              	.LASF113:
 2766 0366 616C6172 		.ascii	"alarmAppLED\000"
 2766      6D417070 
 2766      4C454400 
 2767              	.LASF99:
 2768 0372 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 2768      6D5F7374 
 2768      6172745F 
 2768      74696D65 
 2768      5F737461 
 2769              	.LASF62:
 2770 0389 7379735F 		.ascii	"sys_info_t\000"
 2770      696E666F 
 2770      5F7400
 2771              	.LASF54:
 2772 0394 75706461 		.ascii	"updatable_parameters_t\000"
 2772      7461626C 
 2772      655F7061 
 2772      72616D65 
 2772      74657273 
 2773              	.LASF95:
 2774 03ab 64617461 		.ascii	"dataPointsInStack\000"
 2774      506F696E 
 2774      7473496E 
 2774      53746163 
 2774      6B00
 2775              	.LASF88:
 2776 03bd 6E756D5F 		.ascii	"num_chars\000"
 2776      63686172 
 2776      7300
 2777              	.LASF68:
 2778 03c7 4C657665 		.ascii	"Level_Sensor_ISR\000"
 2778      6C5F5365 
 2778      6E736F72 
 2778      5F495352 
 2778      00
 2779              	.LASF14:
 2780 03d8 73697A65 		.ascii	"sizetype\000"
 2780      74797065 
 2780      00
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 58


 2781              	.LASF22:
 2782 03e1 74657374 		.ascii	"test_name\000"
 2782      5F6E616D 
 2782      6500
 2783              	.LASF112:
 2784 03eb 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 2784      546F5379 
 2784      636E5265 
 2784      6D6F7465 
 2784      50617261 
 2785              	.LASF32:
 2786 0402 74696D65 		.ascii	"timeStamp\000"
 2786      5374616D 
 2786      7000
 2787              	.LASF90:
 2788 040c 6D617463 		.ascii	"match\000"
 2788      6800
 2789              	.LASF101:
 2790 0412 75706461 		.ascii	"updatable_parameters\000"
 2790      7461626C 
 2790      655F7061 
 2790      72616D65 
 2790      74657273 
 2791              	.LASF67:
 2792 0427 75617274 		.ascii	"uart_len\000"
 2792      5F6C656E 
 2792      00
 2793              	.LASF91:
 2794 0430 70617474 		.ascii	"pattern\000"
 2794      65726E00 
 2795              	.LASF86:
 2796 0438 73776170 		.ascii	"swap\000"
 2796      00
 2797              	.LASF72:
 2798 043d 636F6D70 		.ascii	"compare_location\000"
 2798      6172655F 
 2798      6C6F6361 
 2798      74696F6E 
 2798      00
 2799              	.LASF17:
 2800 044e 666C6F61 		.ascii	"float\000"
 2800      7400
 2801              	.LASF79:
 2802 0454 6C657665 		.ascii	"level_sensor_test\000"
 2802      6C5F7365 
 2802      6E736F72 
 2802      5F746573 
 2802      7400
 2803              	.LASF30:
 2804 0466 6C657665 		.ascii	"level_sensor_t\000"
 2804      6C5F7365 
 2804      6E736F72 
 2804      5F7400
 2805              	.LASF77:
 2806 0475 746F6B65 		.ascii	"token\000"
 2806      6E00
 2807              	.LASF53:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 59


 2808 047b 5F426F6F 		.ascii	"_Bool\000"
 2808      6C00
 2809              	.LASF12:
 2810 0481 696E7433 		.ascii	"int32_t\000"
 2810      325F7400 
 2811              	.LASF1:
 2812 0489 756E7369 		.ascii	"unsigned char\000"
 2812      676E6564 
 2812      20636861 
 2812      7200
 2813              	.LASF107:
 2814 0497 73797374 		.ascii	"system_settings\000"
 2814      656D5F73 
 2814      65747469 
 2814      6E677300 
 2815              	.LASF25:
 2816 04a7 74657374 		.ascii	"test_t\000"
 2816      5F7400
 2817              	.LASF42:
 2818 04ae 72737270 		.ascii	"rsrp\000"
 2818      00
 2819              	.LASF41:
 2820 04b3 72737271 		.ascii	"rsrq\000"
 2820      00
 2821              	.LASF49:
 2822 04b8 73796E63 		.ascii	"sync_time\000"
 2822      5F74696D 
 2822      6500
 2823              	.LASF120:
 2824 04c2 75617274 		.ascii	"uart_clear\000"
 2824      5F636C65 
 2824      617200
 2825              	.LASF39:
 2826 04cd 72736370 		.ascii	"rscp\000"
 2826      00
 2827              	.LASF106:
 2828 04d2 73797374 		.ascii	"system_info\000"
 2828      656D5F69 
 2828      6E666F00 
 2829              	.LASF36:
 2830 04de 696D6569 		.ascii	"imei\000"
 2830      00
 2831              	.LASF24:
 2832 04e3 72656173 		.ascii	"reason\000"
 2832      6F6E00
 2833              	.LASF71:
 2834 04ea 72785F63 		.ascii	"rx_char\000"
 2834      68617200 
 2835              	.LASF45:
 2836 04f2 6D6F6465 		.ascii	"modem_stats_t\000"
 2836      6D5F7374 
 2836      6174735F 
 2836      7400
 2837              	.LASF115:
 2838 0500 616C6172 		.ascii	"alarmLevelSensor\000"
 2838      6D4C6576 
 2838      656C5365 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 60


 2838      6E736F72 
 2838      00
 2839              	.LASF52:
 2840 0511 4C657665 		.ascii	"Level_Sensor_freq\000"
 2840      6C5F5365 
 2840      6E736F72 
 2840      5F667265 
 2840      7100
 2841              	.LASF93:
 2842 0523 6C657665 		.ascii	"level_sensor_inbox\000"
 2842      6C5F7365 
 2842      6E736F72 
 2842      5F696E62 
 2842      6F7800
 2843              	.LASF13:
 2844 0536 6C6F6E67 		.ascii	"long double\000"
 2844      20646F75 
 2844      626C6500 
 2845              	.LASF73:
 2846 0542 635F7469 		.ascii	"c_timeStamp\000"
 2846      6D655374 
 2846      616D7000 
 2847              	.LASF15:
 2848 054e 63686172 		.ascii	"char\000"
 2848      00
 2849              	.LASF105:
 2850 0553 68747470 		.ascii	"http_route\000"
 2850      5F726F75 
 2850      746500
 2851              	.LASF5:
 2852 055e 5F5F696E 		.ascii	"__int32_t\000"
 2852      7433325F 
 2852      7400
 2853              	.LASF48:
 2854 0568 6D656173 		.ascii	"measure_time\000"
 2854      7572655F 
 2854      74696D65 
 2854      00
 2855              	.LASF74:
 2856 0575 6D5F6C65 		.ascii	"m_level_sensor\000"
 2856      76656C5F 
 2856      73656E73 
 2856      6F7200
 2857              	.LASF27:
 2858 0584 6C657665 		.ascii	"level_reading\000"
 2858      6C5F7265 
 2858      6164696E 
 2858      6700
 2859              	.LASF3:
 2860 0592 73686F72 		.ascii	"short unsigned int\000"
 2860      7420756E 
 2860      7369676E 
 2860      65642069 
 2860      6E7400
 2861              	.LASF34:
 2862 05a5 73696D5F 		.ascii	"sim_id\000"
 2862      696400
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 61


 2863              	.LASF69:
 2864 05ac 4C657665 		.ascii	"Level_Sensor_Update\000"
 2864      6C5F5365 
 2864      6E736F72 
 2864      5F557064 
 2864      61746500 
 2865              	.LASF121:
 2866 05c0 66696E64 		.ascii	"find_median\000"
 2866      5F6D6564 
 2866      69616E00 
 2867              	.LASF23:
 2868 05cc 73746174 		.ascii	"status\000"
 2868      757300
 2869              	.LASF96:
 2870 05d3 64617461 		.ascii	"dataPointsInStackDesired\000"
 2870      506F696E 
 2870      7473496E 
 2870      53746163 
 2870      6B446573 
 2871              	.LASF51:
 2872 05ec 4170705F 		.ascii	"App_LED_freq\000"
 2872      4C45445F 
 2872      66726571 
 2872      00
 2873              	.LASF75:
 2874 05f9 6C657665 		.ascii	"level_sensor_take_reading\000"
 2874      6C5F7365 
 2874      6E736F72 
 2874      5F74616B 
 2874      655F7265 
 2875              	.LASF65:
 2876 0613 7379735F 		.ascii	"sys_settings_t\000"
 2876      73657474 
 2876      696E6773 
 2876      5F7400
 2877              	.LASF11:
 2878 0622 75696E74 		.ascii	"uint8_t\000"
 2878      385F7400 
 2879              	.LASF20:
 2880 062a 696E7431 		.ascii	"int16\000"
 2880      3600
 2881              	.LASF57:
 2882 0630 636F756E 		.ascii	"countDownType\000"
 2882      74446F77 
 2882      6E547970 
 2882      6500
 2883              	.LASF47:
 2884 063e 73696D5F 		.ascii	"sim_type\000"
 2884      74797065 
 2884      00
 2885              	.LASF82:
 2886 0647 6D657373 		.ascii	"message\000"
 2886      61676500 
 2887              	.LASF103:
 2888 064f 68747470 		.ascii	"http_request\000"
 2888      5F726571 
 2888      75657374 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccWmZkX6.s 			page 62


 2888      00
 2889              	.LASF16:
 2890 065c 646F7562 		.ascii	"double\000"
 2890      6C6500
 2891              	.LASF102:
 2892 0663 6170705F 		.ascii	"app_led_inbox\000"
 2892      6C65645F 
 2892      696E626F 
 2892      7800
 2893              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
