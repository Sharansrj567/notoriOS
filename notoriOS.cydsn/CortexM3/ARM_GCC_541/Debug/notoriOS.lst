ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.section	.text.Wakeup_ISR,"ax",%progbits
  44              		.align	2
  45              		.global	Wakeup_ISR
  46              		.thumb
  47              		.thumb_func
  48              		.type	Wakeup_ISR, %function
  49              	Wakeup_ISR:
  50              	.LFB64:
  51              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 2


   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  52              		.loc 1 20 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  62              		.loc 1 22 0
  63 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  64              		.loc 1 23 0
  65 0008 00BF     		nop
  66 000a 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE64:
  69              		.size	Wakeup_ISR, .-Wakeup_ISR
  70              		.global	Data_fileName
  71              		.data
  72              		.align	2
  73              		.type	Data_fileName, %object
  74              		.size	Data_fileName, 30
  75              	Data_fileName:
  76 0000 64617461 		.ascii	"data.txt\000"
  76      2E747874 
  76      00
  77 0009 00000000 		.space	21
  77      00000000 
  77      00000000 
  77      00000000 
  77      00000000 
  78              		.comm	try_counter,1,1
  79              		.section	.rodata
  80              		.align	2
  81              	.LC0:
  82 0000 25582D25 		.ascii	"%X-%X\000"
  82      5800
  83 0006 0000     		.align	2
  84              	.LC1:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 3


  85 0008 6563322D 		.ascii	"ec2-13-59-131-167.us-east-2.compute.amazonaws.com\000"
  85      31332D35 
  85      392D3133 
  85      312D3136 
  85      372E7573 
  86 003a 0000     		.align	2
  87              	.LC2:
  88 003c 256400   		.ascii	"%d\000"
  89 003f 00       		.align	2
  90              	.LC3:
  91 0040 7265626F 		.ascii	"reboot\000"
  91      6F7400
  92              		.section	.text.ReadyOrNot,"ax",%progbits
  93              		.align	2
  94              		.global	ReadyOrNot
  95              		.thumb
  96              		.thumb_func
  97              		.type	ReadyOrNot, %function
  98              	ReadyOrNot:
  99              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
 100              		.loc 1 41 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 32
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 B0B5     		push	{r4, r5, r7, lr}
 105              		.cfi_def_cfa_offset 16
 106              		.cfi_offset 4, -16
 107              		.cfi_offset 5, -12
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 8AB0     		sub	sp, sp, #40
 111              		.cfi_def_cfa_offset 56
 112 0004 02AF     		add	r7, sp, #8
 113              		.cfi_def_cfa 7, 48
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 114              		.loc 1 43 0
 115 0006 3948     		ldr	r0, .L3
 116 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 4


  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 117              		.loc 1 44 0
 118 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 119              		.loc 1 46 0
 120 0010 FF20     		movs	r0, #255
 121 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 122              		.loc 1 47 0
 123 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 124              		.loc 1 48 0
 125 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 126              		.loc 1 52 0
 127 001e FFF7FEFF 		bl	modem_initialize
  53:notoriOS.c    ****     
  54:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 128              		.loc 1 54 0
 129 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  55:notoriOS.c    ****    
  56:notoriOS.c    ****     
  57:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  58:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  59:notoriOS.c    ****     
  60:notoriOS.c    ****     
  61:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  62:notoriOS.c    ****     uint32 uniqueId[2];
  63:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  64:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 130              		.loc 1 64 0
 131 0026 07F11403 		add	r3, r7, #20
 132 002a 1846     		mov	r0, r3
 133 002c FFF7FEFF 		bl	CyGetUniqueId
  65:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 134              		.loc 1 65 0
 135 0030 7A69     		ldr	r2, [r7, #20]
 136 0032 BB69     		ldr	r3, [r7, #24]
 137 0034 0093     		str	r3, [sp]
 138 0036 1346     		mov	r3, r2
 139 0038 2D4A     		ldr	r2, .L3+4
 140 003a 1821     		movs	r1, #24
 141 003c 2D48     		ldr	r0, .L3+8
 142 003e FFF7FEFF 		bl	snprintf
  66:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  67:notoriOS.c    ****     system_info.modem_info = &modem_info;
 143              		.loc 1 67 0
 144 0042 2D4B     		ldr	r3, .L3+12
 145 0044 2D4A     		ldr	r2, .L3+16
 146 0046 1A60     		str	r2, [r3]
  68:notoriOS.c    ****     
  69:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  70:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","ec2-13-59-131-167.us-eas
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 5


 147              		.loc 1 70 0
 148 0048 2D4A     		ldr	r2, .L3+20
 149 004a 2E4B     		ldr	r3, .L3+24
 150 004c 1446     		mov	r4, r2
 151 004e 1D46     		mov	r5, r3
 152 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 153 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 154 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 155 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 156 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 157 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 158 005c 2B68     		ldr	r3, [r5]
 159 005e 2380     		strh	r3, [r4]	@ movhi
  71:notoriOS.c    ****    
  72:notoriOS.c    ****     system_settings.ep_port = 5000;
 160              		.loc 1 72 0
 161 0060 274B     		ldr	r3, .L3+20
 162 0062 41F28832 		movw	r2, #5000
 163 0066 5A66     		str	r2, [r3, #100]
  73:notoriOS.c    ****     // Don't need the following for new nodes
  74:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  75:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  76:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  77:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  78:notoriOS.c    ****         
  79:notoriOS.c    ****     
  80:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  81:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 164              		.loc 1 81 0
 165 0068 274B     		ldr	r3, .L3+28
 166 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 167 006c 99B2     		uxth	r1, r3
 168 006e 274C     		ldr	r4, .L3+32
 169 0070 3846     		mov	r0, r7
 170 0072 0723     		movs	r3, #7
 171 0074 0122     		movs	r2, #1
 172 0076 FFF7FEFF 		bl	CreateAlarm
 173 007a 2246     		mov	r2, r4
 174 007c 3B46     		mov	r3, r7
 175 007e 1968     		ldr	r1, [r3]	@ unaligned
 176 0080 1160     		str	r1, [r2]	@ unaligned
 177 0082 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 178 0084 9380     		strh	r3, [r2, #4]	@ unaligned
  82:notoriOS.c    ****     timeToMeasure = 1u;
 179              		.loc 1 82 0
 180 0086 224B     		ldr	r3, .L3+36
 181 0088 0122     		movs	r2, #1
 182 008a 1A70     		strb	r2, [r3]
  83:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  84:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 183              		.loc 1 84 0
 184 008c 1E4B     		ldr	r3, .L3+28
 185 008e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 186 0090 99B2     		uxth	r1, r3
 187 0092 204C     		ldr	r4, .L3+40
 188 0094 3846     		mov	r0, r7
 189 0096 0723     		movs	r3, #7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 6


 190 0098 0122     		movs	r2, #1
 191 009a FFF7FEFF 		bl	CreateAlarm
 192 009e 2246     		mov	r2, r4
 193 00a0 3B46     		mov	r3, r7
 194 00a2 1968     		ldr	r1, [r3]	@ unaligned
 195 00a4 1160     		str	r1, [r2]	@ unaligned
 196 00a6 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 197 00a8 9380     		strh	r3, [r2, #4]	@ unaligned
  85:notoriOS.c    ****     timeToSync = 1u;
 198              		.loc 1 85 0
 199 00aa 1B4B     		ldr	r3, .L3+44
 200 00ac 0122     		movs	r2, #1
 201 00ae 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     
  87:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 202              		.loc 1 87 0
 203 00b0 1A4B     		ldr	r3, .L3+48
 204 00b2 0022     		movs	r2, #0
 205 00b4 1A70     		strb	r2, [r3]
  88:notoriOS.c    ****     
  89:notoriOS.c    ****     // send hey to server saying the node rebooted
  90:notoriOS.c    ****     hey = 1u;
 206              		.loc 1 90 0
 207 00b6 1A4B     		ldr	r3, .L3+52
 208 00b8 0122     		movs	r2, #1
 209 00ba 1A70     		strb	r2, [r3]
  91:notoriOS.c    ****     char c_hey[10];
  92:notoriOS.c    ****     snprintf(c_hey,sizeof(c_hey),"%d",hey);
 210              		.loc 1 92 0
 211 00bc 184B     		ldr	r3, .L3+52
 212 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 213 00c0 07F10800 		add	r0, r7, #8
 214 00c4 174A     		ldr	r2, .L3+56
 215 00c6 0A21     		movs	r1, #10
 216 00c8 FFF7FEFF 		bl	snprintf
  93:notoriOS.c    ****     pushData("reboot",c_hey,getTimeStamp());
 217              		.loc 1 93 0
 218 00cc FFF7FEFF 		bl	getTimeStamp
 219 00d0 0246     		mov	r2, r0
 220 00d2 07F10803 		add	r3, r7, #8
 221 00d6 1946     		mov	r1, r3
 222 00d8 1348     		ldr	r0, .L3+60
 223 00da FFF7FEFF 		bl	pushData
  94:notoriOS.c    ****     
  95:notoriOS.c    ****     // Initialize the try counter to 0
  96:notoriOS.c    ****     uint8 try_counter = 0;
 224              		.loc 1 96 0
 225 00de 0023     		movs	r3, #0
 226 00e0 FB77     		strb	r3, [r7, #31]
  97:notoriOS.c    **** }
 227              		.loc 1 97 0
 228 00e2 00BF     		nop
 229 00e4 2037     		adds	r7, r7, #32
 230              		.cfi_def_cfa_offset 16
 231 00e6 BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 7


 234 00e8 B0BD     		pop	{r4, r5, r7, pc}
 235              	.L4:
 236 00ea 00BF     		.align	2
 237              	.L3:
 238 00ec 00000000 		.word	Wakeup_ISR
 239 00f0 00000000 		.word	.LC0
 240 00f4 04000000 		.word	system_info+4
 241 00f8 00000000 		.word	system_info
 242 00fc 00000000 		.word	modem_info
 243 0100 00000000 		.word	system_settings
 244 0104 08000000 		.word	.LC1
 245 0108 00000000 		.word	updatable_parameters
 246 010c 00000000 		.word	alarmMeasure
 247 0110 00000000 		.word	timeToMeasure
 248 0114 00000000 		.word	alarmSync
 249 0118 00000000 		.word	timeToSync
 250 011c 00000000 		.word	timeToSycnRemoteParams
 251 0120 00000000 		.word	hey
 252 0124 3C000000 		.word	.LC2
 253 0128 40000000 		.word	.LC3
 254              		.cfi_endproc
 255              	.LFE65:
 256              		.size	ReadyOrNot, .-ReadyOrNot
 257              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 258              		.align	2
 259              		.global	WorkWorkWorkWorkWorkWork
 260              		.thumb
 261              		.thumb_func
 262              		.type	WorkWorkWorkWorkWorkWork, %function
 263              	WorkWorkWorkWorkWorkWork:
 264              	.LFB66:
  98:notoriOS.c    **** 
  99:notoriOS.c    **** 
 100:notoriOS.c    **** // ==============================================
 101:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
 102:notoriOS.c    **** //      - Rhiana, feat Drake (2016)
 103:notoriOS.c    **** //
 104:notoriOS.c    **** // Prorcesses core tasks
 105:notoriOS.c    **** // ==============================================
 106:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
 107:notoriOS.c    **** {
 265              		.loc 1 107 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269 0000 80B5     		push	{r7, lr}
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 82B0     		sub	sp, sp, #8
 274              		.cfi_def_cfa_offset 16
 275 0004 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
 108:notoriOS.c    ****     
 109:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 110:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 111:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 8


 112:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 113:notoriOS.c    ****     
 114:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 115:notoriOS.c    ****     if(timeToSycnRemoteParams){
 277              		.loc 1 115 0
 278 0006 144B     		ldr	r3, .L10
 279 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 000a 002B     		cmp	r3, #0
 281 000c 06D0     		beq	.L6
 116:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
 282              		.loc 1 116 0
 283 000e FFF7FEFF 		bl	configureRemoteParams
 284 0012 0346     		mov	r3, r0
 285 0014 1A46     		mov	r2, r3
 286 0016 104B     		ldr	r3, .L10
 287 0018 1A70     		strb	r2, [r3]
 288 001a 14E0     		b	.L7
 289              	.L6:
 117:notoriOS.c    ****     }
 118:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 119:notoriOS.c    ****     else if(timeToMeasure){
 290              		.loc 1 119 0
 291 001c 0F4B     		ldr	r3, .L10+4
 292 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 293 0020 002B     		cmp	r3, #0
 294 0022 06D0     		beq	.L8
 120:notoriOS.c    ****         //(int i=0; i<=30; i++){
 121:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 295              		.loc 1 121 0
 296 0024 FFF7FEFF 		bl	makeMeasurements
 297 0028 0346     		mov	r3, r0
 298 002a 1A46     		mov	r2, r3
 299 002c 0B4B     		ldr	r3, .L10+4
 300 002e 1A70     		strb	r2, [r3]
 301 0030 09E0     		b	.L7
 302              	.L8:
 122:notoriOS.c    ****         //CyDelay(1000u);
 123:notoriOS.c    ****         //}
 124:notoriOS.c    ****     }else if(timeToSync){
 303              		.loc 1 124 0
 304 0032 0B4B     		ldr	r3, .L10+8
 305 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 0036 002B     		cmp	r3, #0
 307 0038 05D0     		beq	.L7
 125:notoriOS.c    ****             timeToSync = syncData();
 308              		.loc 1 125 0
 309 003a FFF7FEFF 		bl	syncData
 310 003e 0346     		mov	r3, r0
 311 0040 1A46     		mov	r2, r3
 312 0042 074B     		ldr	r3, .L10+8
 313 0044 1A70     		strb	r2, [r3]
 314              	.L7:
 126:notoriOS.c    ****     }
 127:notoriOS.c    ****     // Print the countdown to the next alarm
 128:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 129:notoriOS.c    ****     
 130:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 9


 131:notoriOS.c    ****     // Check modem state machine on every loop
 132:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
 315              		.loc 1 132 0
 316 0046 FFF7FEFF 		bl	modem_process_tasks
 317 004a 0346     		mov	r3, r0
 318 004c FB71     		strb	r3, [r7, #7]
 133:notoriOS.c    **** 
 134:notoriOS.c    ****     return 0u +  modem_status;  
 319              		.loc 1 134 0
 320 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 135:notoriOS.c    **** }
 321              		.loc 1 135 0
 322 0050 1846     		mov	r0, r3
 323 0052 0837     		adds	r7, r7, #8
 324              		.cfi_def_cfa_offset 8
 325 0054 BD46     		mov	sp, r7
 326              		.cfi_def_cfa_register 13
 327              		@ sp needed
 328 0056 80BD     		pop	{r7, pc}
 329              	.L11:
 330              		.align	2
 331              	.L10:
 332 0058 00000000 		.word	timeToSycnRemoteParams
 333 005c 00000000 		.word	timeToMeasure
 334 0060 00000000 		.word	timeToSync
 335              		.cfi_endproc
 336              	.LFE66:
 337              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 338              		.section	.text.LayBack,"ax",%progbits
 339              		.align	2
 340              		.global	LayBack
 341              		.thumb
 342              		.thumb_func
 343              		.type	LayBack, %function
 344              	LayBack:
 345              	.LFB67:
 136:notoriOS.c    **** 
 137:notoriOS.c    **** 
 138:notoriOS.c    **** 
 139:notoriOS.c    **** 
 140:notoriOS.c    **** 
 141:notoriOS.c    **** 
 142:notoriOS.c    **** // ==============================================
 143:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 144:notoriOS.c    **** //      - Snoop Dogg (1993)
 145:notoriOS.c    **** //
 146:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 147:notoriOS.c    **** // ==============================================
 148:notoriOS.c    **** void LayBack()
 149:notoriOS.c    **** {
 346              		.loc 1 149 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 10


 353              		.cfi_offset 14, -4
 354 0002 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 150:notoriOS.c    ****   
 151:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 356              		.loc 1 151 0
 357 0004 FFF7FEFF 		bl	modem_sleep
 152:notoriOS.c    ****     
 153:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 154:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 358              		.loc 1 154 0
 359 0008 FFF7FEFF 		bl	debug_sleep
 155:notoriOS.c    ****     
 156:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 360              		.loc 1 156 0
 361 000c FFF7FEFF 		bl	CyPmSaveClocks
 157:notoriOS.c    ****     
 158:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 159:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 160:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 161:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 162:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 163:notoriOS.c    ****     //CyPmHibernate();
 164:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 165:notoriOS.c    **** 
 166:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 362              		.loc 1 166 0
 363 0010 4FF40061 		mov	r1, #2048
 364 0014 0020     		movs	r0, #0
 365 0016 FFF7FEFF 		bl	CyPmSleep
 167:notoriOS.c    **** 
 168:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 366              		.loc 1 168 0
 367 001a FFF7FEFF 		bl	CyPmRestoreClocks
 169:notoriOS.c    **** 
 170:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 368              		.loc 1 170 0
 369 001e FFF7FEFF 		bl	debug_wakeup
 171:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 370              		.loc 1 171 0
 371 0022 FFF7FEFF 		bl	modem_wakeup
 172:notoriOS.c    **** 
 173:notoriOS.c    **** }
 372              		.loc 1 173 0
 373 0026 00BF     		nop
 374 0028 80BD     		pop	{r7, pc}
 375              		.cfi_endproc
 376              	.LFE67:
 377              		.size	LayBack, .-LayBack
 378 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 379              		.align	2
 380              		.global	AyoItsTime
 381              		.thumb
 382              		.thumb_func
 383              		.type	AyoItsTime, %function
 384              	AyoItsTime:
 385              	.LFB68:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 11


 174:notoriOS.c    **** 
 175:notoriOS.c    **** 
 176:notoriOS.c    **** // ==============================================
 177:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 178:notoriOS.c    **** //      - NAS (1994)
 179:notoriOS.c    **** //
 180:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 181:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 182:notoriOS.c    **** // It will add tasks to the work queue,
 183:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 184:notoriOS.c    **** // ==============================================
 185:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 186:notoriOS.c    **** {
 386              		.loc 1 186 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 8
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 82B0     		sub	sp, sp, #8
 395              		.cfi_def_cfa_offset 16
 396 0004 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
 398 0006 0346     		mov	r3, r0
 399 0008 FB71     		strb	r3, [r7, #7]
 187:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 188:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 400              		.loc 1 188 0
 401 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 402 000c 1946     		mov	r1, r3
 403 000e 0C48     		ldr	r0, .L17
 404 0010 FFF7FEFF 		bl	AlarmReady
 405 0014 0346     		mov	r3, r0
 406 0016 002B     		cmp	r3, #0
 407 0018 02D0     		beq	.L14
 189:notoriOS.c    ****     {
 190:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 191:notoriOS.c    ****         timeToMeasure = 1u;
 408              		.loc 1 191 0
 409 001a 0A4B     		ldr	r3, .L17+4
 410 001c 0122     		movs	r2, #1
 411 001e 1A70     		strb	r2, [r3]
 412              	.L14:
 192:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 193:notoriOS.c    ****         
 194:notoriOS.c    ****     }
 195:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 413              		.loc 1 195 0
 414 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 415 0022 1946     		mov	r1, r3
 416 0024 0848     		ldr	r0, .L17+8
 417 0026 FFF7FEFF 		bl	AlarmReady
 418 002a 0346     		mov	r3, r0
 419 002c 002B     		cmp	r3, #0
 420 002e 02D0     		beq	.L16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 12


 196:notoriOS.c    ****     {
 197:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 198:notoriOS.c    ****         timeToSync = 1u;
 421              		.loc 1 198 0
 422 0030 064B     		ldr	r3, .L17+12
 423 0032 0122     		movs	r2, #1
 424 0034 1A70     		strb	r2, [r3]
 425              	.L16:
 199:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 200:notoriOS.c    ****     }
 201:notoriOS.c    ****     
 202:notoriOS.c    **** }
 426              		.loc 1 202 0
 427 0036 00BF     		nop
 428 0038 0837     		adds	r7, r7, #8
 429              		.cfi_def_cfa_offset 8
 430 003a BD46     		mov	sp, r7
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 003c 80BD     		pop	{r7, pc}
 434              	.L18:
 435 003e 00BF     		.align	2
 436              	.L17:
 437 0040 00000000 		.word	alarmMeasure
 438 0044 00000000 		.word	timeToMeasure
 439 0048 00000000 		.word	alarmSync
 440 004c 00000000 		.word	timeToSync
 441              		.cfi_endproc
 442              	.LFE68:
 443              		.size	AyoItsTime, .-AyoItsTime
 444              		.section	.text.AlarmReady,"ax",%progbits
 445              		.align	2
 446              		.global	AlarmReady
 447              		.thumb
 448              		.thumb_func
 449              		.type	AlarmReady, %function
 450              	AlarmReady:
 451              	.LFB69:
 203:notoriOS.c    **** 
 204:notoriOS.c    **** 
 205:notoriOS.c    **** // ==============================================
 206:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 207:notoriOS.c    **** // ==============================================
 208:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 209:notoriOS.c    **** {
 452              		.loc 1 209 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 8
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 82B0     		sub	sp, sp, #8
 461              		.cfi_def_cfa_offset 16
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 13


 464 0006 7860     		str	r0, [r7, #4]
 465 0008 0B46     		mov	r3, r1
 466 000a FB70     		strb	r3, [r7, #3]
 210:notoriOS.c    ****     // if the countDownType matches the alarmType
 211:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 467              		.loc 1 211 0
 468 000c 7B68     		ldr	r3, [r7, #4]
 469 000e 1B79     		ldrb	r3, [r3, #4]
 470 0010 DBB2     		uxtb	r3, r3
 471 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 472 0014 9A42     		cmp	r2, r3
 473 0016 12D1     		bne	.L20
 212:notoriOS.c    ****        
 213:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 214:notoriOS.c    ****         // Decrement the count down value by 1
 215:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 474              		.loc 1 215 0
 475 0018 7B68     		ldr	r3, [r7, #4]
 476 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 477 001c 1BB2     		sxth	r3, r3
 478 001e 9BB2     		uxth	r3, r3
 479 0020 013B     		subs	r3, r3, #1
 480 0022 9BB2     		uxth	r3, r3
 481 0024 1AB2     		sxth	r2, r3
 482 0026 7B68     		ldr	r3, [r7, #4]
 483 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 216:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 217:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 484              		.loc 1 217 0
 485 002a 7B68     		ldr	r3, [r7, #4]
 486 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 487 002e 1BB2     		sxth	r3, r3
 488 0030 002B     		cmp	r3, #0
 489 0032 04DC     		bgt	.L20
 218:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 490              		.loc 1 218 0
 491 0034 7868     		ldr	r0, [r7, #4]
 492 0036 FFF7FEFF 		bl	ResetAlarm
 219:notoriOS.c    ****             return 1u;
 493              		.loc 1 219 0
 494 003a 0123     		movs	r3, #1
 495 003c 00E0     		b	.L21
 496              	.L20:
 220:notoriOS.c    ****         } 
 221:notoriOS.c    ****     }
 222:notoriOS.c    ****     
 223:notoriOS.c    ****     return 0u; // Otherwise return 0
 497              		.loc 1 223 0
 498 003e 0023     		movs	r3, #0
 499              	.L21:
 224:notoriOS.c    **** }
 500              		.loc 1 224 0
 501 0040 1846     		mov	r0, r3
 502 0042 0837     		adds	r7, r7, #8
 503              		.cfi_def_cfa_offset 8
 504 0044 BD46     		mov	sp, r7
 505              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 14


 506              		@ sp needed
 507 0046 80BD     		pop	{r7, pc}
 508              		.cfi_endproc
 509              	.LFE69:
 510              		.size	AlarmReady, .-AlarmReady
 511              		.section	.text.ResetAlarm,"ax",%progbits
 512              		.align	2
 513              		.global	ResetAlarm
 514              		.thumb
 515              		.thumb_func
 516              		.type	ResetAlarm, %function
 517              	ResetAlarm:
 518              	.LFB70:
 225:notoriOS.c    **** 
 226:notoriOS.c    **** // ==============================================
 227:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 228:notoriOS.c    **** // ==============================================
 229:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 230:notoriOS.c    **** {
 519              		.loc 1 230 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0000 80B4     		push	{r7}
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0002 83B0     		sub	sp, sp, #12
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 231:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 232:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 532              		.loc 1 232 0
 533 0008 7B68     		ldr	r3, [r7, #4]
 534 000a 1B88     		ldrh	r3, [r3]	@ movhi
 535 000c 9BB2     		uxth	r3, r3
 536 000e 1AB2     		sxth	r2, r3
 537 0010 7B68     		ldr	r3, [r7, #4]
 538 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 233:notoriOS.c    **** }
 539              		.loc 1 233 0
 540 0014 00BF     		nop
 541 0016 0C37     		adds	r7, r7, #12
 542              		.cfi_def_cfa_offset 4
 543 0018 BD46     		mov	sp, r7
 544              		.cfi_def_cfa_register 13
 545              		@ sp needed
 546 001a 80BC     		pop	{r7}
 547              		.cfi_restore 7
 548              		.cfi_def_cfa_offset 0
 549 001c 7047     		bx	lr
 550              		.cfi_endproc
 551              	.LFE70:
 552              		.size	ResetAlarm, .-ResetAlarm
 553 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 15


 554              		.align	2
 555              		.global	CreateAlarm
 556              		.thumb
 557              		.thumb_func
 558              		.type	CreateAlarm, %function
 559              	CreateAlarm:
 560              	.LFB71:
 234:notoriOS.c    **** 
 235:notoriOS.c    **** // ==============================================
 236:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 237:notoriOS.c    **** // ==============================================
 238:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 239:notoriOS.c    **** {
 561              		.loc 1 239 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 16
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566 0000 80B4     		push	{r7}
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 0002 85B0     		sub	sp, sp, #20
 570              		.cfi_def_cfa_offset 24
 571 0004 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 573 0006 7860     		str	r0, [r7, #4]
 574 0008 0846     		mov	r0, r1
 575 000a 1146     		mov	r1, r2
 576 000c 1A46     		mov	r2, r3
 577 000e 0346     		mov	r3, r0	@ movhi
 578 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 579 0012 0B46     		mov	r3, r1
 580 0014 7B70     		strb	r3, [r7, #1]
 581 0016 1346     		mov	r3, r2
 582 0018 3B70     		strb	r3, [r7]
 240:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 241:notoriOS.c    ****     alarm newAlarm;
 242:notoriOS.c    ****     
 243:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 244:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 583              		.loc 1 244 0
 584 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 585 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 245:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 586              		.loc 1 245 0
 587 001e 7B78     		ldrb	r3, [r7, #1]
 588 0020 3B73     		strb	r3, [r7, #12]
 246:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 589              		.loc 1 246 0
 590 0022 3B78     		ldrb	r3, [r7]
 591 0024 7B73     		strb	r3, [r7, #13]
 247:notoriOS.c    ****     
 248:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 249:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 250:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 592              		.loc 1 250 0
 593 0026 B7F90230 		ldrsh	r3, [r7, #2]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 16


 594 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 251:notoriOS.c    ****     
 252:notoriOS.c    ****     return newAlarm;
 595              		.loc 1 252 0
 596 002c 7B68     		ldr	r3, [r7, #4]
 597 002e 1A46     		mov	r2, r3
 598 0030 07F10803 		add	r3, r7, #8
 599 0034 1868     		ldr	r0, [r3]	@ unaligned
 600 0036 1060     		str	r0, [r2]	@ unaligned
 601 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 602 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 253:notoriOS.c    ****     
 254:notoriOS.c    **** }
 603              		.loc 1 254 0
 604 003c 7868     		ldr	r0, [r7, #4]
 605 003e 1437     		adds	r7, r7, #20
 606              		.cfi_def_cfa_offset 4
 607 0040 BD46     		mov	sp, r7
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 0042 80BC     		pop	{r7}
 611              		.cfi_restore 7
 612              		.cfi_def_cfa_offset 0
 613 0044 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE71:
 616              		.size	CreateAlarm, .-CreateAlarm
 617 0046 00BF     		.section	.rodata
 618 0047 00       		.align	2
 619              	.LC4:
 620 0048 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 620      2D2D2D2D 
 620      2D2D2D2D 
 620      2D424547 
 620      494E2054 
 621 0072 0000     		.align	2
 622              	.LC5:
 623 0074 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\012\000"
 623      3D25732C 
 623      2053494D 
 623      49443D25 
 623      732C2044 
 624              		.align	2
 625              	.LC6:
 626 0094 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 626      2D2D2D2D 
 626      2D2D2D2D 
 626      2D2D2D45 
 626      4E442054 
 627 00bd 00       		.ascii	"\000"
 628              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 629              		.align	2
 630              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 631              		.thumb
 632              		.thumb_func
 633              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 634              	ChickityCheckYourselfBeforeYouWreckYourself:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 17


 635              	.LFB72:
 255:notoriOS.c    **** 
 256:notoriOS.c    **** // ==============================================
 257:notoriOS.c    **** // Dropping bombs on your moms
 258:notoriOS.c    **** //      - Ice Cube (1992)
 259:notoriOS.c    **** //
 260:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 261:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 262:notoriOS.c    **** // ==============================================
 263:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 636              		.loc 1 263 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 1552
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 90B5     		push	{r4, r7, lr}
 641              		.cfi_def_cfa_offset 12
 642              		.cfi_offset 4, -12
 643              		.cfi_offset 7, -8
 644              		.cfi_offset 14, -4
 645 0002 ADF28C7D 		subw	sp, sp, #1932
 646              		.cfi_def_cfa_offset 1944
 647 0006 5EAF     		add	r7, sp, #376
 648              		.cfi_def_cfa 7, 1568
 264:notoriOS.c    **** //
 265:notoriOS.c    **** //    //printTestStatus(t_influx);
 266:notoriOS.c    **** //        SDI12_Power_Write(1u);
 267:notoriOS.c    **** //        SDI12_Power_Write(0u);
 268:notoriOS.c    **** //    // Take sontek readings and save them to m_sontek
 269:notoriOS.c    **** //        char big_value[DATA_MAX_KEY_LENGTH*15];
 270:notoriOS.c    **** //        // sontek_t is a new data type we defined in sontek.h. We then use that data type to defi
 271:notoriOS.c    **** //        sontek_t m_sontek;
 272:notoriOS.c    **** //        
 273:notoriOS.c    **** //        // Take sontek readings and save them to m_sontek
 274:notoriOS.c    **** //        m_sontek = sontek_take_reading();
 275:notoriOS.c    **** //        
 276:notoriOS.c    **** //        snprintf(big_value,sizeof(big_value),"%.2f,%.2f,%.2f,%.2f,\
 277:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,\
 278:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 279:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 280:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 281:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 282:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 283:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 284:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,\
 285:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f",\
 286:notoriOS.c    **** //                m_sontek.data0[0],m_sontek.data0[1],m_sontek.data0[2],m_sontek.data0[3],\
 287:notoriOS.c    **** //                m_sontek.data1[0],m_sontek.data1[1],m_sontek.data1[2],m_sontek.data1[3],m_sontek.
 288:notoriOS.c    **** //                m_sontek.data2[0],m_sontek.data2[1],m_sontek.data2[2],m_sontek.data2[3],m_sontek.
 289:notoriOS.c    **** //                m_sontek.data3[0],m_sontek.data3[1],m_sontek.data3[2],m_sontek.data3[3],m_sontek.
 290:notoriOS.c    **** //                m_sontek.data4[0],m_sontek.data4[1],m_sontek.data4[2],m_sontek.data4[3],m_sontek.
 291:notoriOS.c    **** //                m_sontek.data5[0],m_sontek.data5[1],m_sontek.data5[2],m_sontek.data5[3],m_sontek.
 292:notoriOS.c    **** //                m_sontek.data6[0],m_sontek.data6[1],m_sontek.data6[2],m_sontek.data6[3],m_sontek.
 293:notoriOS.c    **** //                m_sontek.data7[0],m_sontek.data7[1],m_sontek.data7[2],m_sontek.data7[3],m_sontek.
 294:notoriOS.c    **** //                m_sontek.data8[0],m_sontek.data8[1],m_sontek.data8[2],m_sontek.data8[3],\
 295:notoriOS.c    **** //                m_sontek.data9[0],m_sontek.data9[1],m_sontek.data9[2],m_sontek.data9[3],m_sontek.
 296:notoriOS.c    **** //            printNotif(NOTIF_TYPE_EVENT,"sontek=%s",big_value);
 297:notoriOS.c    **** //
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 18


 298:notoriOS.c    **** //        
 299:notoriOS.c    **** ////            //temperature - 0 data0
 300:notoriOS.c    **** ////            snprintf(value,sizeof(value),"%.2f",m_sontek.data0[0]); 
 301:notoriOS.c    **** ////            printNotif(NOTIF_TYPE_EVENT,"sontek_temp=%s",value);
 302:notoriOS.c    **** ////
 303:notoriOS.c    **** ////            //stage - 2 data0
 304:notoriOS.c    **** ////            snprintf(value,sizeof(value),"%.2f",m_sontek.data0[2]); 
 305:notoriOS.c    **** ////            printNotif(NOTIF_TYPE_EVENT,"sontek_stage=%s",value);
 306:notoriOS.c    **** ////            //mean velocity - 2 data1
 307:notoriOS.c    **** ////            snprintf(value,sizeof(value),"%.2f",m_sontek.data1[2]);
 308:notoriOS.c    **** ////            printNotif(NOTIF_TYPE_EVENT,"sontek_vel=%s",value);
 309:notoriOS.c    **** ////            //SNR1 - 19
 310:notoriOS.c    **** ////            snprintf(value,sizeof(value),"%.2f",m_sontek.values[18]);
 311:notoriOS.c    **** ////            printNotif(NOTIF_TYPE_EVENT,"sontek_snr1=%s",value);
 312:notoriOS.c    **** ////            //Amp1 - 16
 313:notoriOS.c    **** ////            snprintf(value,sizeof(value),"%.2f",m_sontek.values[16]);
 314:notoriOS.c    **** ////            printNotif(NOTIF_TYPE_EVENT,"sontek_amp1=%s",value);
 315:notoriOS.c    **** ////            //bat - 49
 316:notoriOS.c    **** ////            snprintf(value,sizeof(value),"%.2f",m_sontek.values[49]);
 317:notoriOS.c    **** ////            printNotif(NOTIF_TYPE_EVENT,"sontek_v_bat=%s",value);
 318:notoriOS.c    **** //            
 319:notoriOS.c    **** //////////////////////------------------------------------------------------------------------
 320:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 649              		.loc 1 320 0
 650 0008 2F49     		ldr	r1, .L26
 651 000a 0320     		movs	r0, #3
 652 000c FFF7FEFF 		bl	printNotif
 321:notoriOS.c    ****     
 322:notoriOS.c    ****     // Test modem
 323:notoriOS.c    ****     test_t t_modem = modem_test();
 653              		.loc 1 323 0
 654 0010 07F28C43 		addw	r3, r7, #1164
 655 0014 1846     		mov	r0, r3
 656 0016 FFF7FEFF 		bl	modem_test
 324:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s\n",modem_info.imei,modem_info.sim
 657              		.loc 1 324 0
 658 001a 2C4B     		ldr	r3, .L26+4
 659 001c 0093     		str	r3, [sp]
 660 001e 2C4B     		ldr	r3, .L26+8
 661 0020 2C4A     		ldr	r2, .L26+12
 662 0022 2D49     		ldr	r1, .L26+16
 663 0024 0320     		movs	r0, #3
 664 0026 FFF7FEFF 		bl	printNotif
 325:notoriOS.c    ****     printTestStatus(t_modem);
 665              		.loc 1 325 0
 666 002a 07F28C44 		addw	r4, r7, #1164
 667 002e 6846     		mov	r0, sp
 668 0030 04F11003 		add	r3, r4, #16
 669 0034 40F27112 		movw	r2, #369
 670 0038 1946     		mov	r1, r3
 671 003a FFF7FEFF 		bl	memcpy
 672 003e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 673 0042 FFF7FEFF 		bl	printTestStatus
 326:notoriOS.c    ****     
 327:notoriOS.c    ****     // Test level sensor
 328:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 674              		.loc 1 328 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 19


 675 0046 07F54273 		add	r3, r7, #776
 676 004a 1846     		mov	r0, r3
 677 004c FFF7FEFF 		bl	level_sensor_test
 329:notoriOS.c    ****     printTestStatus(t_level_sensor);
 678              		.loc 1 329 0
 679 0050 07F54274 		add	r4, r7, #776
 680 0054 6846     		mov	r0, sp
 681 0056 04F11003 		add	r3, r4, #16
 682 005a 40F27112 		movw	r2, #369
 683 005e 1946     		mov	r1, r3
 684 0060 FFF7FEFF 		bl	memcpy
 685 0064 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 686 0068 FFF7FEFF 		bl	printTestStatus
 330:notoriOS.c    ****     
 331:notoriOS.c    ****     // Test voltages
 332:notoriOS.c    ****     test_t t_voltages = voltages_test();
 687              		.loc 1 332 0
 688 006c 07F5C273 		add	r3, r7, #388
 689 0070 1846     		mov	r0, r3
 690 0072 FFF7FEFF 		bl	voltages_test
 333:notoriOS.c    ****     printTestStatus(t_voltages);
 691              		.loc 1 333 0
 692 0076 07F5C274 		add	r4, r7, #388
 693 007a 6846     		mov	r0, sp
 694 007c 04F11003 		add	r3, r4, #16
 695 0080 40F27112 		movw	r2, #369
 696 0084 1946     		mov	r1, r3
 697 0086 FFF7FEFF 		bl	memcpy
 698 008a 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 699 008e FFF7FEFF 		bl	printTestStatus
 334:notoriOS.c    ****     
 335:notoriOS.c    ****     // Test SD card
 336:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 700              		.loc 1 336 0
 701 0092 3B46     		mov	r3, r7
 702 0094 1846     		mov	r0, r3
 703 0096 FFF7FEFF 		bl	SD_card_test
 337:notoriOS.c    ****     printTestStatus(t_sd_card);
 704              		.loc 1 337 0
 705 009a 3C46     		mov	r4, r7
 706 009c 6846     		mov	r0, sp
 707 009e 04F11003 		add	r3, r4, #16
 708 00a2 40F27112 		movw	r2, #369
 709 00a6 1946     		mov	r1, r3
 710 00a8 FFF7FEFF 		bl	memcpy
 711 00ac 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 712 00b0 FFF7FEFF 		bl	printTestStatus
 338:notoriOS.c    ****     
 339:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 713              		.loc 1 339 0
 714 00b4 0949     		ldr	r1, .L26+20
 715 00b6 0320     		movs	r0, #3
 716 00b8 FFF7FEFF 		bl	printNotif
 340:notoriOS.c    **** 
 341:notoriOS.c    **** }
 717              		.loc 1 341 0
 718 00bc 00BF     		nop
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 20


 719 00be 07F21467 		addw	r7, r7, #1556
 720              		.cfi_def_cfa_offset 12
 721 00c2 BD46     		mov	sp, r7
 722              		.cfi_def_cfa_register 13
 723              		@ sp needed
 724 00c4 90BD     		pop	{r4, r7, pc}
 725              	.L27:
 726 00c6 00BF     		.align	2
 727              	.L26:
 728 00c8 48000000 		.word	.LC4
 729 00cc 04000000 		.word	system_info+4
 730 00d0 00000000 		.word	modem_info
 731 00d4 28000000 		.word	modem_info+40
 732 00d8 74000000 		.word	.LC5
 733 00dc 94000000 		.word	.LC6
 734              		.cfi_endproc
 735              	.LFE72:
 736              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 737              		.section	.text.main,"ax",%progbits
 738              		.align	2
 739              		.global	main
 740              		.thumb
 741              		.thumb_func
 742              		.type	main, %function
 743              	main:
 744              	.LFB73:
 342:notoriOS.c    **** 
 343:notoriOS.c    **** // ==============================================
 344:notoriOS.c    **** // Processes Core Tasks
 345:notoriOS.c    **** // ==============================================
 346:notoriOS.c    **** int main(void)
 347:notoriOS.c    **** {
 745              		.loc 1 347 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 1, uses_anonymous_args = 0
 749 0000 80B5     		push	{r7, lr}
 750              		.cfi_def_cfa_offset 8
 751              		.cfi_offset 7, -8
 752              		.cfi_offset 14, -4
 753 0002 00AF     		add	r7, sp, #0
 754              		.cfi_def_cfa_register 7
 348:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 755              		.loc 1 348 0
 756              		.syntax unified
 757              	@ 348 "notoriOS.c" 1
 758 0004 62B6     		CPSIE   i
 759              	@ 0 "" 2
 349:notoriOS.c    **** 
 350:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 760              		.loc 1 350 0
 761              		.thumb
 762              		.syntax unified
 763 0006 FFF7FEFF 		bl	ReadyOrNot
 351:notoriOS.c    ****     
 352:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 764              		.loc 1 352 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 21


 765 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 766              	.L30:
 353:notoriOS.c    ****    
 354:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 355:notoriOS.c    ****     {
 356:notoriOS.c    ****         
 357:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 767              		.loc 1 357 0
 768 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 769 0012 0346     		mov	r3, r0
 770 0014 002B     		cmp	r3, #0
 771 0016 FAD1     		bne	.L30
 358:notoriOS.c    ****         {
 359:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
 772              		.loc 1 359 0
 773 0018 FFF7FEFF 		bl	LayBack
 360:notoriOS.c    ****         }
 361:notoriOS.c    ****     }
 774              		.loc 1 361 0
 775 001c F7E7     		b	.L30
 776              		.cfi_endproc
 777              	.LFE73:
 778              		.size	main, .-main
 779 001e 00BF     		.section	.rodata
 780 00be 0000     		.align	2
 781              	.LC7:
 782 00c0 4D6F6465 		.ascii	"Modem is ready.\000"
 782      6D206973 
 782      20726561 
 782      64792E00 
 783              		.align	2
 784              	.LC8:
 785 00d0 72737270 		.ascii	"rsrp\000"
 785      00
 786 00d5 000000   		.align	2
 787              	.LC9:
 788 00d8 7472795F 		.ascii	"try_counter\000"
 788      636F756E 
 788      74657200 
 789              		.align	2
 790              	.LC10:
 791 00e4 64617461 		.ascii	"data_count_sent\000"
 791      5F636F75 
 791      6E745F73 
 791      656E7400 
 792              		.align	2
 793              	.LC11:
 794 00f4 64617461 		.ascii	"data_count_desired\000"
 794      5F636F75 
 794      6E745F64 
 794      65736972 
 794      656400
 795 0107 00       		.align	2
 796              	.LC12:
 797 0108 42656769 		.ascii	"Begin HTTP post.\000"
 797      6E204854 
 797      54502070 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 22


 797      6F73742E 
 797      00
 798 0119 000000   		.align	2
 799              	.LC13:
 800 011c 36653333 		.ascii	"6e33038dc6c82fac7adbb0077df2bb9424ee8a47\000"
 800      30333864 
 800      63366338 
 800      32666163 
 800      37616462 
 801 0145 000000   		.align	2
 802              	.LC14:
 803 0148 6170692F 		.ascii	"api/v1/write\000"
 803      76312F77 
 803      72697465 
 803      00
 804 0155 000000   		.align	2
 805              	.LC15:
 806 0158 48545450 		.ascii	"HTTP route: %s\000"
 806      20726F75 
 806      74653A20 
 806      257300
 807 0167 00       		.align	2
 808              	.LC16:
 809 0168 312E3100 		.ascii	"1.1\000"
 810              		.align	2
 811              	.LC17:
 812 016c 00       		.ascii	"\000"
 813 016d 000000   		.align	2
 814              	.LC18:
 815 0170 436C6F73 		.ascii	"Close\000"
 815      6500
 816 0176 0000     		.align	2
 817              	.LC19:
 818 0178 504F5354 		.ascii	"POST\000"
 818      00
 819 017d 000000   		.align	2
 820              	.LC20:
 821 0180 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 821      20485454 
 821      50205265 
 821      71756573 
 821      743A2025 
 822 0196 0000     		.align	2
 823              	.LC21:
 824 0198 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 824      443D312C 
 824      302C2564 
 824      2C222573 
 824      222C302C 
 825 01b1 000000   		.align	2
 826              	.LC22:
 827 01b4 257300   		.ascii	"%s\000"
 828 01b7 00       		.align	2
 829              	.LC23:
 830 01b8 4F4B00   		.ascii	"OK\000"
 831              		.global	__aeabi_ui2d
 832              		.global	__aeabi_d2iz
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 23


 833 01bb 00       		.align	2
 834              	.LC24:
 835 01bc 68747470 		.ascii	"http_request len: %d\000"
 835      5F726571 
 835      75657374 
 835      206C656E 
 835      3A202564 
 836 01d1 000000   		.align	2
 837              	.LC25:
 838 01d4 23206F66 		.ascii	"# of packets: %d\000"
 838      20706163 
 838      6B657473 
 838      3A202564 
 838      00
 839 01e5 000000   		.align	2
 840              	.LC26:
 841 01e8 3E00     		.ascii	">\000"
 842 01ea 0000     		.align	2
 843              	.LC27:
 844 01ec 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 844      53454E44 
 844      3D310D0A 
 844      00
 845 01f9 000000   		.align	2
 846              	.LC28:
 847 01fc 1A00     		.ascii	"\032\000"
 848 01fe 0000     		.align	2
 849              	.LC29:
 850 0200 6368756E 		.ascii	"chunk %d: %s\000"
 850      6B202564 
 850      3A202573 
 850      00
 851 020d 000000   		.align	2
 852              	.LC30:
 853 0210 5352494E 		.ascii	"SRING\000"
 853      4700
 854 0216 0000     		.align	2
 855              	.LC31:
 856 0218 4F532D4F 		.ascii	"OS-OK\000"
 856      4B00
 857 021e 0000     		.align	2
 858              	.LC32:
 859 0220 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 859      52454356 
 859      3D312C31 
 859      3030300D 
 859      00
 860 0231 000000   		.align	2
 861              	.LC33:
 862 0234 6D6F6465 		.ascii	"modem_tx_time\000"
 862      6D5F7478 
 862      5F74696D 
 862      6500
 863 0242 0000     		.align	2
 864              	.LC34:
 865 0244 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 865      4F3A2043 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 24


 865      6F756C64 
 865      206E6F74 
 865      20726563 
 866              		.section	.text.syncData,"ax",%progbits
 867              		.align	2
 868              		.global	syncData
 869              		.thumb
 870              		.thumb_func
 871              		.type	syncData, %function
 872              	syncData:
 873              	.LFB74:
 362:notoriOS.c    **** }
 363:notoriOS.c    **** 
 364:notoriOS.c    **** // ==============================================
 365:notoriOS.c    **** // Syncs data with server
 366:notoriOS.c    **** // Returns 0 when done
 367:notoriOS.c    **** // ==============================================
 368:notoriOS.c    **** uint8 syncData(){
 874              		.loc 1 368 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 1336
 877              		@ frame_needed = 1, uses_anonymous_args = 0
 878 0000 90B5     		push	{r4, r7, lr}
 879              		.cfi_def_cfa_offset 12
 880              		.cfi_offset 4, -12
 881              		.cfi_offset 7, -8
 882              		.cfi_offset 14, -4
 883 0002 ADF2545D 		subw	sp, sp, #1364
 884              		.cfi_def_cfa_offset 1376
 885 0006 06AF     		add	r7, sp, #24
 886              		.cfi_def_cfa 7, 1352
 369:notoriOS.c    ****     
 370:notoriOS.c    ****     /*
 371:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 372:notoriOS.c    ****     uint8 check = 0;
 373:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 374:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 375:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 376:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 377:notoriOS.c    ****     */
 378:notoriOS.c    **** 
 379:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 380:notoriOS.c    ****     LED_Write(1u);
 887              		.loc 1 380 0
 888 0008 0120     		movs	r0, #1
 889 000a FFF7FEFF 		bl	LED_Write
 381:notoriOS.c    ****     CyDelay(100u);
 890              		.loc 1 381 0
 891 000e 6420     		movs	r0, #100
 892 0010 FFF7FEFF 		bl	CyDelay
 382:notoriOS.c    ****     LED_Write(0u);
 893              		.loc 1 382 0
 894 0014 0020     		movs	r0, #0
 895 0016 FFF7FEFF 		bl	LED_Write
 383:notoriOS.c    **** 
 384:notoriOS.c    ****     
 385:notoriOS.c    ****     // If there's no data, not need to do anything
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 25


 386:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 896              		.loc 1 386 0
 897 001a FFF7FEFF 		bl	sizeOfDataStack
 898 001e 0346     		mov	r3, r0
 899 0020 002B     		cmp	r3, #0
 900 0022 01D1     		bne	.L32
 387:notoriOS.c    ****         return 0u;
 901              		.loc 1 387 0
 902 0024 0023     		movs	r3, #0
 903 0026 F9E1     		b	.L33
 904              	.L32:
 388:notoriOS.c    ****         }
 389:notoriOS.c    ****     
 390:notoriOS.c    ****     // Create request body, in this case influx
 391:notoriOS.c    ****     // Place body into HTTP request header
 392:notoriOS.c    ****     // Fire up modem and get it out
 393:notoriOS.c    ****      
 394:notoriOS.c    ****     
 395:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 396:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 905              		.loc 1 396 0
 906 0028 FFF7FEFF 		bl	modem_get_state
 907 002c 0346     		mov	r3, r0
 908 002e 002B     		cmp	r3, #0
 909 0030 11D1     		bne	.L34
 397:notoriOS.c    **** 
 398:notoriOS.c    ****         try_counter++;
 910              		.loc 1 398 0
 911 0032 C74B     		ldr	r3, .L46
 912 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 913 0036 0133     		adds	r3, r3, #1
 914 0038 DAB2     		uxtb	r2, r3
 915 003a C54B     		ldr	r3, .L46
 916 003c 1A70     		strb	r2, [r3]
 399:notoriOS.c    ****         	
 400:notoriOS.c    ****         if(try_counter <= 2){
 917              		.loc 1 400 0
 918 003e C44B     		ldr	r3, .L46
 919 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 920 0042 022B     		cmp	r3, #2
 921 0044 02D8     		bhi	.L35
 401:notoriOS.c    ****             modem_power_up();
 922              		.loc 1 401 0
 923 0046 FFF7FEFF 		bl	modem_power_up
 924 004a E6E1     		b	.L36
 925              	.L35:
 402:notoriOS.c    ****         }else{
 403:notoriOS.c    ****             try_counter = 0;
 926              		.loc 1 403 0
 927 004c C04B     		ldr	r3, .L46
 928 004e 0022     		movs	r2, #0
 929 0050 1A70     		strb	r2, [r3]
 404:notoriOS.c    ****             return 0u;
 930              		.loc 1 404 0
 931 0052 0023     		movs	r3, #0
 932 0054 E2E1     		b	.L33
 933              	.L34:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 26


 405:notoriOS.c    ****             }
 406:notoriOS.c    ****             
 407:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 934              		.loc 1 407 0
 935 0056 FFF7FEFF 		bl	modem_get_state
 936 005a 0346     		mov	r3, r0
 937 005c 042B     		cmp	r3, #4
 938 005e 40F0DC81 		bne	.L36
 939              	.LBB2:
 408:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 940              		.loc 1 408 0
 941 0062 BC49     		ldr	r1, .L46+4
 942 0064 0020     		movs	r0, #0
 943 0066 FFF7FEFF 		bl	printNotif
 409:notoriOS.c    ****         
 410:notoriOS.c    ****         http_request[0] = '\0';
 944              		.loc 1 410 0
 945 006a BB4B     		ldr	r3, .L46+8
 946 006c 0022     		movs	r2, #0
 947 006e 1A70     		strb	r2, [r3]
 411:notoriOS.c    ****         http_body[0] = '\0';
 948              		.loc 1 411 0
 949 0070 BA4B     		ldr	r3, .L46+12
 950 0072 0022     		movs	r2, #0
 951 0074 1A70     		strb	r2, [r3]
 412:notoriOS.c    ****         http_route[0] = '\0';
 952              		.loc 1 412 0
 953 0076 BA4B     		ldr	r3, .L46+16
 954 0078 0022     		movs	r2, #0
 955 007a 1A70     		strb	r2, [r3]
 413:notoriOS.c    ****         //char *base = "write";
 414:notoriOS.c    ****         
 415:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power)
 416:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 417:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 956              		.loc 1 417 0
 957 007c B94B     		ldr	r3, .L46+20
 958 007e 5B69     		ldr	r3, [r3, #20]
 959 0080 07F5A260 		add	r0, r7, #1296
 960 0084 B84A     		ldr	r2, .L46+24
 961 0086 1421     		movs	r1, #20
 962 0088 FFF7FEFF 		bl	snprintf
 418:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 963              		.loc 1 418 0
 964 008c FFF7FEFF 		bl	getTimeStamp
 965 0090 0246     		mov	r2, r0
 966 0092 07F5A263 		add	r3, r7, #1296
 967 0096 1946     		mov	r1, r3
 968 0098 B448     		ldr	r0, .L46+28
 969 009a FFF7FEFF 		bl	pushData
 419:notoriOS.c    ****         
 420:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 421:notoriOS.c    ****         char c_try_counter[20];
 422:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 970              		.loc 1 422 0
 971 009e AC4B     		ldr	r3, .L46
 972 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 27


 973 00a2 07F2FC40 		addw	r0, r7, #1276
 974 00a6 B04A     		ldr	r2, .L46+24
 975 00a8 1421     		movs	r1, #20
 976 00aa FFF7FEFF 		bl	snprintf
 423:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 977              		.loc 1 423 0
 978 00ae FFF7FEFF 		bl	getTimeStamp
 979 00b2 0246     		mov	r2, r0
 980 00b4 07F2FC43 		addw	r3, r7, #1276
 981 00b8 1946     		mov	r1, r3
 982 00ba AD48     		ldr	r0, .L46+32
 983 00bc FFF7FEFF 		bl	pushData
 424:notoriOS.c    ****         
 425:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
 426:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 427:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 428:notoriOS.c    ****         if(buffer_overflow == false){
 984              		.loc 1 428 0
 985 00c0 AC4B     		ldr	r3, .L46+36
 986 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 987 00c4 83F00103 		eor	r3, r3, #1
 988 00c8 DBB2     		uxtb	r3, r3
 989 00ca 002B     		cmp	r3, #0
 990 00cc 16D0     		beq	.L37
 991              	.LBB3:
 429:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 992              		.loc 1 429 0
 993 00ce FFF7FEFF 		bl	sizeOfDataStack
 994 00d2 0346     		mov	r3, r0
 995 00d4 A7F83035 		strh	r3, [r7, #1328]	@ movhi
 430:notoriOS.c    ****             char c_data_count_sent[20];
 431:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 996              		.loc 1 431 0
 997 00d8 B7F83035 		ldrh	r3, [r7, #1328]
 998 00dc 07F2D440 		addw	r0, r7, #1236
 999 00e0 A14A     		ldr	r2, .L46+24
 1000 00e2 1421     		movs	r1, #20
 1001 00e4 FFF7FEFF 		bl	snprintf
 432:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1002              		.loc 1 432 0
 1003 00e8 FFF7FEFF 		bl	getTimeStamp
 1004 00ec 0246     		mov	r2, r0
 1005 00ee 07F2D443 		addw	r3, r7, #1236
 1006 00f2 1946     		mov	r1, r3
 1007 00f4 A048     		ldr	r0, .L46+40
 1008 00f6 FFF7FEFF 		bl	pushData
 1009              	.LBE3:
 1010 00fa 0FE0     		b	.L38
 1011              	.L37:
 1012              	.LBB4:
 433:notoriOS.c    ****         }else{
 434:notoriOS.c    ****             char c_data_count_sent[20];
 435:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1013              		.loc 1 435 0
 1014 00fc 07F59860 		add	r0, r7, #1216
 1015 0100 9623     		movs	r3, #150
 1016 0102 994A     		ldr	r2, .L46+24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 28


 1017 0104 1421     		movs	r1, #20
 1018 0106 FFF7FEFF 		bl	snprintf
 436:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1019              		.loc 1 436 0
 1020 010a FFF7FEFF 		bl	getTimeStamp
 1021 010e 0246     		mov	r2, r0
 1022 0110 07F59863 		add	r3, r7, #1216
 1023 0114 1946     		mov	r1, r3
 1024 0116 9848     		ldr	r0, .L46+40
 1025 0118 FFF7FEFF 		bl	pushData
 1026              	.L38:
 1027              	.LBE4:
 437:notoriOS.c    ****         }
 438:notoriOS.c    ****         
 439:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 440:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 1028              		.loc 1 440 0
 1029 011c FFF7FEFF 		bl	sizeOfDataStackDesired
 1030 0120 0346     		mov	r3, r0
 1031 0122 A7F82E35 		strh	r3, [r7, #1326]	@ movhi
 441:notoriOS.c    ****         char c_data_count_desired[20];
 442:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 443:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1032              		.loc 1 443 0
 1033 0126 B7F82E35 		ldrh	r3, [r7, #1326]
 1034 012a 013B     		subs	r3, r3, #1
 1035 012c 07F59D60 		add	r0, r7, #1256
 1036 0130 8D4A     		ldr	r2, .L46+24
 1037 0132 1421     		movs	r1, #20
 1038 0134 FFF7FEFF 		bl	snprintf
 444:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
 1039              		.loc 1 444 0
 1040 0138 FFF7FEFF 		bl	getTimeStamp
 1041 013c 0246     		mov	r2, r0
 1042 013e 07F59D63 		add	r3, r7, #1256
 1043 0142 1946     		mov	r1, r3
 1044 0144 8D48     		ldr	r0, .L46+44
 1045 0146 FFF7FEFF 		bl	pushData
 445:notoriOS.c    ****         
 446:notoriOS.c    ****         // Construct HTPP request
 447:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1046              		.loc 1 447 0
 1047 014a 8D49     		ldr	r1, .L46+48
 1048 014c 0020     		movs	r0, #0
 1049 014e FFF7FEFF 		bl	printNotif
 448:notoriOS.c    ****         
 449:notoriOS.c    ****         // Old influx API
 450:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 451:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1050              		.loc 1 451 0
 1051 0152 8C4B     		ldr	r3, .L46+52
 1052 0154 8C4A     		ldr	r2, .L46+56
 1053 0156 8D49     		ldr	r1, .L46+60
 1054 0158 8148     		ldr	r0, .L46+16
 1055 015a FFF7FEFF 		bl	construct_malcom_route
 452:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1056              		.loc 1 452 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 29


 1057 015e 804A     		ldr	r2, .L46+16
 1058 0160 8B49     		ldr	r1, .L46+64
 1059 0162 0020     		movs	r0, #0
 1060 0164 FFF7FEFF 		bl	printNotif
 453:notoriOS.c    ****         
 454:notoriOS.c    ****         //OLD INFLUX API
 455:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 456:notoriOS.c    ****         construct_malcom_body(http_body);
 1061              		.loc 1 456 0
 1062 0168 7C48     		ldr	r0, .L46+12
 1063 016a FFF7FEFF 		bl	construct_malcom_body
 457:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1064              		.loc 1 457 0
 1065 016e 894B     		ldr	r3, .L46+68
 1066 0170 5B6E     		ldr	r3, [r3, #100]
 1067 0172 894A     		ldr	r2, .L46+72
 1068 0174 0592     		str	r2, [sp, #20]
 1069 0176 0022     		movs	r2, #0
 1070 0178 0492     		str	r2, [sp, #16]
 1071 017a 884A     		ldr	r2, .L46+76
 1072 017c 0392     		str	r2, [sp, #12]
 1073 017e 884A     		ldr	r2, .L46+80
 1074 0180 0292     		str	r2, [sp, #8]
 1075 0182 884A     		ldr	r2, .L46+84
 1076 0184 0192     		str	r2, [sp, #4]
 1077 0186 0093     		str	r3, [sp]
 1078 0188 754B     		ldr	r3, .L46+16
 1079 018a 824A     		ldr	r2, .L46+68
 1080 018c 7349     		ldr	r1, .L46+12
 1081 018e 7248     		ldr	r0, .L46+8
 1082 0190 FFF7FEFF 		bl	construct_generic_HTTP_request
 458:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1083              		.loc 1 458 0
 1084 0194 704A     		ldr	r2, .L46+8
 1085 0196 8449     		ldr	r1, .L46+88
 1086 0198 0020     		movs	r0, #0
 1087 019a FFF7FEFF 		bl	printNotif
 459:notoriOS.c    ****         
 460:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 461:notoriOS.c    ****         // Open port and begin command line sequence
 462:notoriOS.c    ****         char portConfig[200];
 463:notoriOS.c    ****         uint8 status = 0u;
 1088              		.loc 1 463 0
 1089 019e 0023     		movs	r3, #0
 1090 01a0 87F82D35 		strb	r3, [r7, #1325]
 464:notoriOS.c    ****         
 465:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1091              		.loc 1 465 0
 1092 01a4 7B4B     		ldr	r3, .L46+68
 1093 01a6 5A6E     		ldr	r2, [r3, #100]
 1094 01a8 3846     		mov	r0, r7
 1095 01aa 7A4B     		ldr	r3, .L46+68
 1096 01ac 0093     		str	r3, [sp]
 1097 01ae 1346     		mov	r3, r2
 1098 01b0 7E4A     		ldr	r2, .L46+92
 1099 01b2 C821     		movs	r1, #200
 1100 01b4 FFF7FEFF 		bl	snprintf
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 30


 466:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1101              		.loc 1 466 0
 1102 01b8 3B46     		mov	r3, r7
 1103 01ba 1A46     		mov	r2, r3
 1104 01bc 7C49     		ldr	r1, .L46+96
 1105 01be 0020     		movs	r0, #0
 1106 01c0 FFF7FEFF 		bl	printNotif
 467:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1107              		.loc 1 467 0
 1108 01c4 3B46     		mov	r3, r7
 1109 01c6 42F21072 		movw	r2, #10000
 1110 01ca 7A49     		ldr	r1, .L46+100
 1111 01cc 1846     		mov	r0, r3
 1112 01ce FFF7FEFF 		bl	at_write_command
 1113 01d2 0346     		mov	r3, r0
 1114 01d4 87F82D35 		strb	r3, [r7, #1325]
 468:notoriOS.c    ****         
 469:notoriOS.c    ****         // create character pointer to chunk through the http_request
 470:notoriOS.c    ****         char *chunk;
 471:notoriOS.c    ****         // Set chunk to start where http_request starts
 472:notoriOS.c    ****         chunk = http_request;
 1115              		.loc 1 472 0
 1116 01d8 5F4B     		ldr	r3, .L46+8
 1117 01da C7F83435 		str	r3, [r7, #1332]
 473:notoriOS.c    ****         // variable for the number of packets to send
 474:notoriOS.c    ****         int8 packets;
 475:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1118              		.loc 1 475 0
 1119 01de 5E48     		ldr	r0, .L46+8
 1120 01e0 FFF7FEFF 		bl	strlen
 1121 01e4 0246     		mov	r2, r0
 1122 01e6 744B     		ldr	r3, .L46+104
 1123 01e8 A3FB0223 		umull	r2, r3, r3, r2
 1124 01ec 5B09     		lsrs	r3, r3, #5
 1125 01ee 1846     		mov	r0, r3
 1126 01f0 FFF7FEFF 		bl	__aeabi_ui2d
 1127 01f4 4FF00002 		mov	r2, #0
 1128 01f8 704B     		ldr	r3, .L46+108
 1129 01fa FFF7FEFF 		bl	nextafter
 1130 01fe 0346     		mov	r3, r0
 1131 0200 0C46     		mov	r4, r1
 1132 0202 1846     		mov	r0, r3
 1133 0204 2146     		mov	r1, r4
 1134 0206 FFF7FEFF 		bl	ceil
 1135 020a 0346     		mov	r3, r0
 1136 020c 0C46     		mov	r4, r1
 1137 020e 1846     		mov	r0, r3
 1138 0210 2146     		mov	r1, r4
 1139 0212 FFF7FEFF 		bl	__aeabi_d2iz
 1140 0216 0346     		mov	r3, r0
 1141 0218 87F82C35 		strb	r3, [r7, #1324]
 476:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1142              		.loc 1 476 0
 1143 021c 4E48     		ldr	r0, .L46+8
 1144 021e FFF7FEFF 		bl	strlen
 1145 0222 0346     		mov	r3, r0
 1146 0224 1A46     		mov	r2, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 31


 1147 0226 6649     		ldr	r1, .L46+112
 1148 0228 0020     		movs	r0, #0
 1149 022a FFF7FEFF 		bl	printNotif
 477:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1150              		.loc 1 477 0
 1151 022e 97F92C35 		ldrsb	r3, [r7, #1324]
 1152 0232 1A46     		mov	r2, r3
 1153 0234 6349     		ldr	r1, .L46+116
 1154 0236 0020     		movs	r0, #0
 1155 0238 FFF7FEFF 		bl	printNotif
 1156              	.LBB5:
 478:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 479:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1157              		.loc 1 479 0
 1158 023c 0023     		movs	r3, #0
 1159 023e 87F83335 		strb	r3, [r7, #1331]
 1160 0242 53E0     		b	.L39
 1161              	.L42:
 1162              	.LBB6:
 480:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 481:notoriOS.c    ****             char http_chunk[1001];
 482:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 483:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 484:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1163              		.loc 1 484 0
 1164 0244 4FF47A72 		mov	r2, #1000
 1165 0248 5F49     		ldr	r1, .L46+120
 1166 024a 6048     		ldr	r0, .L46+124
 1167 024c FFF7FEFF 		bl	at_write_command
 1168 0250 0346     		mov	r3, r0
 1169 0252 87F82D35 		strb	r3, [r7, #1325]
 485:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 486:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1170              		.loc 1 486 0
 1171 0256 07F1C800 		add	r0, r7, #200
 1172 025a D7F83435 		ldr	r3, [r7, #1332]
 1173 025e 544A     		ldr	r2, .L46+96
 1174 0260 4FF4FA71 		mov	r1, #500
 1175 0264 FFF7FEFF 		bl	snprintf
 487:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 488:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1176              		.loc 1 488 0
 1177 0268 07F1C803 		add	r3, r7, #200
 1178 026c 1846     		mov	r0, r3
 1179 026e FFF7FEFF 		bl	strlen
 1180 0272 0346     		mov	r3, r0
 1181 0274 1A46     		mov	r2, r3
 1182 0276 07F1C803 		add	r3, r7, #200
 1183 027a 1344     		add	r3, r3, r2
 1184 027c 5449     		ldr	r1, .L46+128
 1185 027e 1A46     		mov	r2, r3
 1186 0280 0B46     		mov	r3, r1
 1187 0282 1B88     		ldrh	r3, [r3]	@ unaligned
 1188 0284 1380     		strh	r3, [r2]	@ unaligned
 489:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1189              		.loc 1 489 0
 1190 0286 97F93325 		ldrsb	r2, [r7, #1331]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 32


 1191 028a 07F1C803 		add	r3, r7, #200
 1192 028e 5149     		ldr	r1, .L46+132
 1193 0290 0020     		movs	r0, #0
 1194 0292 FFF7FEFF 		bl	printNotif
 490:notoriOS.c    ****             // Send data to server
 491:notoriOS.c    ****             if ((packet+1) != packets){
 1195              		.loc 1 491 0
 1196 0296 97F93335 		ldrsb	r3, [r7, #1331]
 1197 029a 5A1C     		adds	r2, r3, #1
 1198 029c 97F92C35 		ldrsb	r3, [r7, #1324]
 1199 02a0 9A42     		cmp	r2, r3
 1200 02a2 11D0     		beq	.L40
 492:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1201              		.loc 1 492 0
 1202 02a4 07F1C803 		add	r3, r7, #200
 1203 02a8 41F28832 		movw	r2, #5000
 1204 02ac 4149     		ldr	r1, .L46+100
 1205 02ae 1846     		mov	r0, r3
 1206 02b0 FFF7FEFF 		bl	at_write_command
 1207 02b4 0346     		mov	r3, r0
 1208 02b6 87F82D35 		strb	r3, [r7, #1325]
 493:notoriOS.c    ****                 // Move the pointer forward 
 494:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1209              		.loc 1 494 0
 1210 02ba D7F83435 		ldr	r3, [r7, #1332]
 1211 02be 03F2F313 		addw	r3, r3, #499
 1212 02c2 C7F83435 		str	r3, [r7, #1332]
 1213 02c6 0AE0     		b	.L41
 1214              	.L40:
 495:notoriOS.c    ****             }else{
 496:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
 1215              		.loc 1 496 0
 1216 02c8 07F1C803 		add	r3, r7, #200
 1217 02cc 41F28832 		movw	r2, #5000
 1218 02d0 4149     		ldr	r1, .L46+136
 1219 02d2 1846     		mov	r0, r3
 1220 02d4 FFF7FEFF 		bl	at_write_command
 1221 02d8 0346     		mov	r3, r0
 1222 02da 87F82D35 		strb	r3, [r7, #1325]
 1223              	.L41:
 1224              	.LBE6:
 479:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1225              		.loc 1 479 0 discriminator 2
 1226 02de 97F93335 		ldrsb	r3, [r7, #1331]
 1227 02e2 DBB2     		uxtb	r3, r3
 1228 02e4 0133     		adds	r3, r3, #1
 1229 02e6 DBB2     		uxtb	r3, r3
 1230 02e8 87F83335 		strb	r3, [r7, #1331]
 1231              	.L39:
 479:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1232              		.loc 1 479 0 is_stmt 0 discriminator 1
 1233 02ec 97F93325 		ldrsb	r2, [r7, #1331]
 1234 02f0 97F92C35 		ldrsb	r3, [r7, #1324]
 1235 02f4 9A42     		cmp	r2, r3
 1236 02f6 A5DB     		blt	.L42
 1237              	.LBE5:
 497:notoriOS.c    ****             }
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 33


 498:notoriOS.c    ****             
 499:notoriOS.c    ****         }
 500:notoriOS.c    ****         
 501:notoriOS.c    ****         // Read received buffer
 502:notoriOS.c    ****         // A good write will return code "OS-OK"
 503:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 504:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 505:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1238              		.loc 1 505 0 is_stmt 1
 1239 02f8 41F28832 		movw	r2, #5000
 1240 02fc 3749     		ldr	r1, .L46+140
 1241 02fe 3848     		ldr	r0, .L46+144
 1242 0300 FFF7FEFF 		bl	at_write_command
 1243 0304 0346     		mov	r3, r0
 1244 0306 87F82D35 		strb	r3, [r7, #1325]
 506:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 507:notoriOS.c    ****     
 508:notoriOS.c    ****   
 509:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 510:notoriOS.c    ****         if(status == 1u){
 1245              		.loc 1 510 0
 1246 030a 97F82D35 		ldrb	r3, [r7, #1325]	@ zero_extendqisi2
 1247 030e 012B     		cmp	r3, #1
 1248 0310 6CD1     		bne	.L43
 1249              	.LBB7:
 511:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1250              		.loc 1 511 0
 1251 0312 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 512:notoriOS.c    ****             Clear_Data_Stack();
 1252              		.loc 1 512 0
 1253 0316 FFF7FEFF 		bl	Clear_Data_Stack
 513:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1254              		.loc 1 513 0
 1255 031a FFF7FEFF 		bl	getTimeStamp
 1256 031e 0246     		mov	r2, r0
 1257 0320 304B     		ldr	r3, .L46+148
 1258 0322 1B68     		ldr	r3, [r3]
 1259 0324 D31A     		subs	r3, r2, r3
 1260 0326 C7F82835 		str	r3, [r7, #1320]
 514:notoriOS.c    ****             char s_send_time[10];
 515:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1261              		.loc 1 515 0
 1262 032a 07F2B440 		addw	r0, r7, #1204
 1263 032e D7F82835 		ldr	r3, [r7, #1320]
 1264 0332 0D4A     		ldr	r2, .L46+24
 1265 0334 0A21     		movs	r1, #10
 1266 0336 FFF7FEFF 		bl	snprintf
 516:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1267              		.loc 1 516 0
 1268 033a FFF7FEFF 		bl	getTimeStamp
 1269 033e 0246     		mov	r2, r0
 1270 0340 07F2B443 		addw	r3, r7, #1204
 1271 0344 1946     		mov	r1, r3
 1272 0346 2848     		ldr	r0, .L46+152
 1273 0348 FFF7FEFF 		bl	pushData
 1274              	.LBE7:
 1275 034c 52E0     		b	.L44
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 34


 1276              	.L47:
 1277 034e 00BF     		.align	2
 1278              	.L46:
 1279 0350 00000000 		.word	try_counter
 1280 0354 C0000000 		.word	.LC7
 1281 0358 00000000 		.word	http_request
 1282 035c 00000000 		.word	http_body
 1283 0360 00000000 		.word	http_route
 1284 0364 00000000 		.word	modem_stats
 1285 0368 3C000000 		.word	.LC2
 1286 036c D0000000 		.word	.LC8
 1287 0370 D8000000 		.word	.LC9
 1288 0374 00000000 		.word	buffer_overflow
 1289 0378 E4000000 		.word	.LC10
 1290 037c F4000000 		.word	.LC11
 1291 0380 08010000 		.word	.LC12
 1292 0384 1C010000 		.word	.LC13
 1293 0388 28000000 		.word	modem_info+40
 1294 038c 48010000 		.word	.LC14
 1295 0390 58010000 		.word	.LC15
 1296 0394 00000000 		.word	system_settings
 1297 0398 68010000 		.word	.LC16
 1298 039c 6C010000 		.word	.LC17
 1299 03a0 70010000 		.word	.LC18
 1300 03a4 78010000 		.word	.LC19
 1301 03a8 80010000 		.word	.LC20
 1302 03ac 98010000 		.word	.LC21
 1303 03b0 B4010000 		.word	.LC22
 1304 03b4 B8010000 		.word	.LC23
 1305 03b8 D34D6210 		.word	274877907
 1306 03bc 00407F40 		.word	1082081280
 1307 03c0 BC010000 		.word	.LC24
 1308 03c4 D4010000 		.word	.LC25
 1309 03c8 E8010000 		.word	.LC26
 1310 03cc EC010000 		.word	.LC27
 1311 03d0 FC010000 		.word	.LC28
 1312 03d4 00020000 		.word	.LC29
 1313 03d8 10020000 		.word	.LC30
 1314 03dc 18020000 		.word	.LC31
 1315 03e0 20020000 		.word	.LC32
 1316 03e4 00000000 		.word	modem_start_time_stamp
 1317 03e8 34020000 		.word	.LC33
 1318              	.L43:
 517:notoriOS.c    ****         }else{
 518:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1319              		.loc 1 518 0
 1320 03ec 0E49     		ldr	r1, .L48
 1321 03ee 0220     		movs	r0, #2
 1322 03f0 FFF7FEFF 		bl	printNotif
 1323              	.L44:
 519:notoriOS.c    ****         }
 520:notoriOS.c    ****          
 521:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 522:notoriOS.c    ****         long network_time = modem_get_network_time();
 1324              		.loc 1 522 0
 1325 03f4 FFF7FEFF 		bl	modem_get_network_time
 1326 03f8 C7F82405 		str	r0, [r7, #1316]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 35


 523:notoriOS.c    ****         if(network_time != 0){
 1327              		.loc 1 523 0
 1328 03fc D7F82435 		ldr	r3, [r7, #1316]
 1329 0400 002B     		cmp	r3, #0
 1330 0402 03D0     		beq	.L45
 524:notoriOS.c    ****            setTime(network_time);
 1331              		.loc 1 524 0
 1332 0404 D7F82405 		ldr	r0, [r7, #1316]
 1333 0408 FFF7FEFF 		bl	setTime
 1334              	.L45:
 525:notoriOS.c    ****         }
 526:notoriOS.c    ****         
 527:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 528:notoriOS.c    ****         // If not -- keep the statck and try next time
 529:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 530:notoriOS.c    ****         modem_power_down();
 1335              		.loc 1 530 0
 1336 040c FFF7FEFF 		bl	modem_power_down
 531:notoriOS.c    ****         
 532:notoriOS.c    ****         try_counter = 0u;
 1337              		.loc 1 532 0
 1338 0410 064B     		ldr	r3, .L48+4
 1339 0412 0022     		movs	r2, #0
 1340 0414 1A70     		strb	r2, [r3]
 533:notoriOS.c    ****         return 0u;
 1341              		.loc 1 533 0
 1342 0416 0023     		movs	r3, #0
 1343 0418 00E0     		b	.L33
 1344              	.L36:
 1345              	.LBE2:
 534:notoriOS.c    ****     }
 535:notoriOS.c    ****       
 536:notoriOS.c    ****       return 1u; // Not done yet
 1346              		.loc 1 536 0
 1347 041a 0123     		movs	r3, #1
 1348              	.L33:
 537:notoriOS.c    **** }
 1349              		.loc 1 537 0 discriminator 1
 1350 041c 1846     		mov	r0, r3
 1351 041e 07F23C57 		addw	r7, r7, #1340
 1352              		.cfi_def_cfa_offset 12
 1353 0422 BD46     		mov	sp, r7
 1354              		.cfi_def_cfa_register 13
 1355              		@ sp needed
 1356 0424 90BD     		pop	{r4, r7, pc}
 1357              	.L49:
 1358 0426 00BF     		.align	2
 1359              	.L48:
 1360 0428 44020000 		.word	.LC34
 1361 042c 00000000 		.word	try_counter
 1362              		.cfi_endproc
 1363              	.LFE74:
 1364              		.size	syncData, .-syncData
 1365              		.section	.text.configureRemoteParams,"ax",%progbits
 1366              		.align	2
 1367              		.global	configureRemoteParams
 1368              		.thumb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 36


 1369              		.thumb_func
 1370              		.type	configureRemoteParams, %function
 1371              	configureRemoteParams:
 1372              	.LFB75:
 538:notoriOS.c    **** 
 539:notoriOS.c    **** // ==============================================
 540:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 541:notoriOS.c    **** // Returns 0 when done
 542:notoriOS.c    **** // ==============================================
 543:notoriOS.c    **** uint8 configureRemoteParams(){
 1373              		.loc 1 543 0
 1374              		.cfi_startproc
 1375              		@ args = 0, pretend = 0, frame = 8
 1376              		@ frame_needed = 1, uses_anonymous_args = 0
 1377 0000 80B5     		push	{r7, lr}
 1378              		.cfi_def_cfa_offset 8
 1379              		.cfi_offset 7, -8
 1380              		.cfi_offset 14, -4
 1381 0002 82B0     		sub	sp, sp, #8
 1382              		.cfi_def_cfa_offset 16
 1383 0004 00AF     		add	r7, sp, #0
 1384              		.cfi_def_cfa_register 7
 544:notoriOS.c    ****     
 545:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1385              		.loc 1 545 0
 1386 0006 FFF7FEFF 		bl	modem_get_state
 1387 000a 0346     		mov	r3, r0
 1388 000c 002B     		cmp	r3, #0
 1389 000e 02D1     		bne	.L51
 546:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 547:notoriOS.c    ****         modem_power_up();
 1390              		.loc 1 547 0
 1391 0010 FFF7FEFF 		bl	modem_power_up
 1392 0014 11E0     		b	.L52
 1393              	.L51:
 548:notoriOS.c    ****             
 549:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1394              		.loc 1 549 0
 1395 0016 FFF7FEFF 		bl	modem_get_state
 1396 001a 0346     		mov	r3, r0
 1397 001c 042B     		cmp	r3, #4
 1398 001e 0CD1     		bne	.L52
 1399              	.LBB8:
 550:notoriOS.c    ****         
 551:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 552:notoriOS.c    ****         
 553:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 554:notoriOS.c    ****         long network_time = modem_get_network_time();
 1400              		.loc 1 554 0
 1401 0020 FFF7FEFF 		bl	modem_get_network_time
 1402 0024 7860     		str	r0, [r7, #4]
 555:notoriOS.c    ****         if(network_time != 0){
 1403              		.loc 1 555 0
 1404 0026 7B68     		ldr	r3, [r7, #4]
 1405 0028 002B     		cmp	r3, #0
 1406 002a 02D0     		beq	.L53
 556:notoriOS.c    ****             setTime(network_time);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 37


 1407              		.loc 1 556 0
 1408 002c 7868     		ldr	r0, [r7, #4]
 1409 002e FFF7FEFF 		bl	setTime
 1410              	.L53:
 557:notoriOS.c    ****         }
 558:notoriOS.c    ****         
 559:notoriOS.c    ****         // Get GPS coordinates
 560:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 561:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 562:notoriOS.c    ****         modem_power_down();
 1411              		.loc 1 562 0
 1412 0032 FFF7FEFF 		bl	modem_power_down
 563:notoriOS.c    ****         return 0u;
 1413              		.loc 1 563 0
 1414 0036 0023     		movs	r3, #0
 1415 0038 00E0     		b	.L54
 1416              	.L52:
 1417              	.LBE8:
 564:notoriOS.c    ****         
 565:notoriOS.c    ****     }
 566:notoriOS.c    ****     
 567:notoriOS.c    ****     return 1u;
 1418              		.loc 1 567 0
 1419 003a 0123     		movs	r3, #1
 1420              	.L54:
 568:notoriOS.c    **** }
 1421              		.loc 1 568 0
 1422 003c 1846     		mov	r0, r3
 1423 003e 0837     		adds	r7, r7, #8
 1424              		.cfi_def_cfa_offset 8
 1425 0040 BD46     		mov	sp, r7
 1426              		.cfi_def_cfa_register 13
 1427              		@ sp needed
 1428 0042 80BD     		pop	{r7, pc}
 1429              		.cfi_endproc
 1430              	.LFE75:
 1431              		.size	configureRemoteParams, .-configureRemoteParams
 1432              		.section	.rodata
 1433 026f 00       		.align	2
 1434              	.LC35:
 1435 0270 256C6400 		.ascii	"%ld\000"
 1436              		.align	2
 1437              	.LC36:
 1438 0274 6D617862 		.ascii	"maxbotix_depth=%s\000"
 1438      6F746978 
 1438      5F646570 
 1438      74683D25 
 1438      7300
 1439 0286 0000     		.align	2
 1440              	.LC37:
 1441 0288 6D617862 		.ascii	"maxbotix_depth\000"
 1441      6F746978 
 1441      5F646570 
 1441      746800
 1442 0297 00       		.align	2
 1443              	.LC38:
 1444 0298 612B00   		.ascii	"a+\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 38


 1445 029b 00       		.align	2
 1446              	.LC39:
 1447 029c 206D6178 		.ascii	" maxbotix_depth: \000"
 1447      626F7469 
 1447      785F6465 
 1447      7074683A 
 1447      2000
 1448 02ae 0000     		.align	2
 1449              	.LC40:
 1450 02b0 2000     		.ascii	" \000"
 1451 02b2 0000     		.align	2
 1452              	.LC41:
 1453 02b4 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 1453      64206E6F 
 1453      74206765 
 1453      74207661 
 1453      6C696420 
 1454              		.global	__aeabi_f2d
 1455              		.align	2
 1456              	.LC42:
 1457 02e0 252E3266 		.ascii	"%.2f,%.2f,%.2f,%.2f,                %.2f,%.2f,%.2f,"
 1457      2C252E32 
 1457      662C252E 
 1457      32662C25 
 1457      2E32662C 
 1458 0313 252E3266 		.ascii	"%.2f,%.2f,                %.2f,%.2f,%.2f,%.2f,%.2f,"
 1458      2C252E32 
 1458      662C2020 
 1458      20202020 
 1458      20202020 
 1459 0346 252E3266 		.ascii	"%.2f,                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,"
 1459      2C202020 
 1459      20202020 
 1459      20202020 
 1459      20202020 
 1460 0379 20202020 		.ascii	"                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,     "
 1460      20202020 
 1460      20202020 
 1460      20202020 
 1460      252E3266 
 1461 03ac 20202020 		.ascii	"           %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,          "
 1461      20202020 
 1461      20202025 
 1461      2E32662C 
 1461      252E3266 
 1462 03df 20202020 		.ascii	"      %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,               "
 1462      2020252E 
 1462      32662C25 
 1462      2E32662C 
 1462      252E3266 
 1463 0412 20252E32 		.ascii	" %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,                %.2f"
 1463      662C252E 
 1463      32662C25 
 1463      2E32662C 
 1463      252E3266 
 1464 0445 2C252E32 		.ascii	",%.2f,%.2f,%.2f,                %.2f,%.2f,%.2f,%.2f"
 1464      662C252E 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 39


 1464      32662C25 
 1464      2E32662C 
 1464      20202020 
 1465 0478 2C252E32 		.ascii	",%.2f\000"
 1465      6600
 1466 047e 0000     		.align	2
 1467              	.LC43:
 1468 0480 736F6E74 		.ascii	"sontek=%s\000"
 1468      656B3D25 
 1468      7300
 1469 048a 0000     		.align	2
 1470              	.LC44:
 1471 048c 20736F6E 		.ascii	" sontek, \000"
 1471      74656B2C 
 1471      2000
 1472 0496 0000     		.align	2
 1473              	.LC45:
 1474 0498 0A00     		.ascii	"\012\000"
 1475 049a 0000     		.align	2
 1476              	.LC46:
 1477 049c 252E3266 		.ascii	"%.2f\000"
 1477      00
 1478 04a1 000000   		.align	2
 1479              	.LC47:
 1480 04a4 736F6E74 		.ascii	"sontek_stage\000"
 1480      656B5F73 
 1480      74616765 
 1480      00
 1481 04b1 000000   		.align	2
 1482              	.LC48:
 1483 04b4 736F6E74 		.ascii	"sontek_Q\000"
 1483      656B5F51 
 1483      00
 1484 04bd 000000   		.align	2
 1485              	.LC49:
 1486 04c0 736F6E74 		.ascii	"sontek_avg_SNR\000"
 1486      656B5F61 
 1486      76675F53 
 1486      4E5200
 1487 04cf 00       		.align	2
 1488              	.LC50:
 1489 04d0 736F6E74 		.ascii	"sontek_amp1\000"
 1489      656B5F61 
 1489      6D703100 
 1490              		.align	2
 1491              	.LC51:
 1492 04dc 736F6E74 		.ascii	"sontek_amp2\000"
 1492      656B5F61 
 1492      6D703200 
 1493              		.align	2
 1494              	.LC52:
 1495 04e8 736F6E74 		.ascii	"sontek_amp3\000"
 1495      656B5F61 
 1495      6D703300 
 1496              		.align	2
 1497              	.LC53:
 1498 04f4 736F6E74 		.ascii	"sontek_snr1\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 40


 1498      656B5F73 
 1498      6E723100 
 1499              		.align	2
 1500              	.LC54:
 1501 0500 736F6E74 		.ascii	"sontek_snr2\000"
 1501      656B5F73 
 1501      6E723200 
 1502              		.align	2
 1503              	.LC55:
 1504 050c 736F6E74 		.ascii	"sontek_snr3\000"
 1504      656B5F73 
 1504      6E723300 
 1505              		.align	2
 1506              	.LC56:
 1507 0518 736F6E74 		.ascii	"sontek_amp4\000"
 1507      656B5F61 
 1507      6D703400 
 1508              		.align	2
 1509              	.LC57:
 1510 0524 736F6E74 		.ascii	"sontek_amp5\000"
 1510      656B5F61 
 1510      6D703500 
 1511              		.align	2
 1512              	.LC58:
 1513 0530 736F6E74 		.ascii	"sontek_amp6\000"
 1513      656B5F61 
 1513      6D703600 
 1514              		.align	2
 1515              	.LC59:
 1516 053c 736F6E74 		.ascii	"sontek_snr4\000"
 1516      656B5F73 
 1516      6E723400 
 1517              		.align	2
 1518              	.LC60:
 1519 0548 736F6E74 		.ascii	"sontek_snr5\000"
 1519      656B5F73 
 1519      6E723500 
 1520              		.align	2
 1521              	.LC61:
 1522 0554 736F6E74 		.ascii	"sontek_snr6\000"
 1522      656B5F73 
 1522      6E723600 
 1523              		.align	2
 1524              	.LC62:
 1525 0560 736F6E74 		.ascii	"sontek_amp7\000"
 1525      656B5F61 
 1525      6D703700 
 1526              		.align	2
 1527              	.LC63:
 1528 056c 736F6E74 		.ascii	"sontek_amp8\000"
 1528      656B5F61 
 1528      6D703800 
 1529              		.align	2
 1530              	.LC64:
 1531 0578 736F6E74 		.ascii	"sontek_amp9\000"
 1531      656B5F61 
 1531      6D703900 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 41


 1532              		.align	2
 1533              	.LC65:
 1534 0584 736F6E74 		.ascii	"sontek_snr7\000"
 1534      656B5F73 
 1534      6E723700 
 1535              		.align	2
 1536              	.LC66:
 1537 0590 736F6E74 		.ascii	"sontek_snr8\000"
 1537      656B5F73 
 1537      6E723800 
 1538              		.align	2
 1539              	.LC67:
 1540 059c 736F6E74 		.ascii	"sontek_snr9\000"
 1540      656B5F73 
 1540      6E723900 
 1541              		.align	2
 1542              	.LC68:
 1543 05a8 736F6E74 		.ascii	"sontek_amp10\000"
 1543      656B5F61 
 1543      6D703130 
 1543      00
 1544 05b5 000000   		.align	2
 1545              	.LC69:
 1546 05b8 736F6E74 		.ascii	"sontek_snr10\000"
 1546      656B5F73 
 1546      6E723130 
 1546      00
 1547 05c5 000000   		.align	2
 1548              	.LC70:
 1549 05c8 256300   		.ascii	"%c\000"
 1550 05cb 00       		.align	2
 1551              	.LC71:
 1552 05cc 436F756C 		.ascii	"Could not get valid readings from Sontek. Error: %c"
 1552      64206E6F 
 1552      74206765 
 1552      74207661 
 1552      6C696420 
 1553 05ff 2E00     		.ascii	".\000"
 1554 0601 000000   		.align	2
 1555              	.LC72:
 1556 0604 736F6E74 		.ascii	"sontek_flag\000"
 1556      656B5F66 
 1556      6C616700 
 1557              		.align	2
 1558              	.LC73:
 1559 0610 20736F6E 		.ascii	" sontek error: \000"
 1559      74656B20 
 1559      6572726F 
 1559      723A2000 
 1560              		.align	2
 1561              	.LC74:
 1562 0620 765F6261 		.ascii	"v_bat=%s\000"
 1562      743D2573 
 1562      00
 1563 0629 000000   		.align	2
 1564              	.LC75:
 1565 062c 765F6261 		.ascii	"v_bat\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 42


 1565      7400
 1566 0632 0000     		.align	2
 1567              	.LC76:
 1568 0634 20766261 		.ascii	" vbat: \000"
 1568      743A2000 
 1569              		.align	2
 1570              	.LC77:
 1571 063c 70726573 		.ascii	"pressure_current=%s\000"
 1571      73757265 
 1571      5F637572 
 1571      72656E74 
 1571      3D257300 
 1572              		.align	2
 1573              	.LC78:
 1574 0650 70726573 		.ascii	"pressure_current\000"
 1574      73757265 
 1574      5F637572 
 1574      72656E74 
 1574      00
 1575 0661 000000   		.align	2
 1576              	.LC79:
 1577 0664 20707265 		.ascii	" pressure_current: \000"
 1577      73737572 
 1577      655F6375 
 1577      7272656E 
 1577      743A2000 
 1578              		.align	2
 1579              	.LC80:
 1580 0678 70726573 		.ascii	"pressure_depth=%s\000"
 1580      73757265 
 1580      5F646570 
 1580      74683D25 
 1580      7300
 1581 068a 0000     		.align	2
 1582              	.LC81:
 1583 068c 70726573 		.ascii	"pressure_depth\000"
 1583      73757265 
 1583      5F646570 
 1583      746800
 1584 069b 00       		.align	2
 1585              	.LC82:
 1586 069c 20707265 		.ascii	" pressure_depth: \000"
 1586      73737572 
 1586      655F6465 
 1586      7074683A 
 1586      2000
 1587 06ae 0000     		.align	2
 1588              	.LC83:
 1589 06b0 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1589      64206E6F 
 1589      74206765 
 1589      74207661 
 1589      6C696420 
 1590              		.section	.text.makeMeasurements,"ax",%progbits
 1591              		.align	2
 1592              		.global	makeMeasurements
 1593              		.thumb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 43


 1594              		.thumb_func
 1595              		.type	makeMeasurements, %function
 1596              	makeMeasurements:
 1597              	.LFB76:
 569:notoriOS.c    **** 
 570:notoriOS.c    **** 
 571:notoriOS.c    **** // ==============================================
 572:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 573:notoriOS.c    **** // Returns 0 when finished
 574:notoriOS.c    **** // ==============================================
 575:notoriOS.c    **** uint8 makeMeasurements(){
 1598              		.loc 1 575 0
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 1040
 1601              		@ frame_needed = 1, uses_anonymous_args = 0
 1602 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 1603              		.cfi_def_cfa_offset 32
 1604              		.cfi_offset 4, -32
 1605              		.cfi_offset 5, -28
 1606              		.cfi_offset 7, -24
 1607              		.cfi_offset 8, -20
 1608              		.cfi_offset 9, -16
 1609              		.cfi_offset 10, -12
 1610              		.cfi_offset 11, -8
 1611              		.cfi_offset 14, -4
 1612 0004 ADF5B86D 		sub	sp, sp, #1472
 1613              		.cfi_def_cfa_offset 1504
 1614 0008 6CAF     		add	r7, sp, #432
 1615              		.cfi_def_cfa 7, 1072
 576:notoriOS.c    ****     
 577:notoriOS.c    ****     // Get clock time and save to timeStamp
 578:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1616              		.loc 1 578 0
 1617 000a FFF7FEFF 		bl	getTimeStamp
 1618 000e C7F80C04 		str	r0, [r7, #1036]
 579:notoriOS.c    ****     char c_timeStamp[32];
 580:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1619              		.loc 1 580 0
 1620 0012 07F57B70 		add	r0, r7, #1004
 1621 0016 D7F80C34 		ldr	r3, [r7, #1036]
 1622 001a 254A     		ldr	r2, .L66
 1623 001c 2021     		movs	r1, #32
 1624 001e FFF7FEFF 		bl	snprintf
 581:notoriOS.c    ****     
 582:notoriOS.c    ****     // Holds string for value that will be written 
 583:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 584:notoriOS.c    ****     char big_value[DATA_MAX_KEY_LENGTH*15];
 585:notoriOS.c    ****     
 586:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 587:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 1625              		.loc 1 587 0
 1626 0022 244B     		ldr	r3, .L66+4
 1627 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1628 0026 002B     		cmp	r3, #0
 1629 0028 56D1     		bne	.L56
 1630              	.LBB9:
 588:notoriOS.c    ****         
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 44


 589:notoriOS.c    ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
 590:notoriOS.c    ****         level_sensor_t m_level_sensor;
 591:notoriOS.c    ****         
 592:notoriOS.c    ****         // Take level sensor readings and save them to m_level_sensor
 593:notoriOS.c    ****         m_level_sensor = level_sensor_take_reading();
 1631              		.loc 1 593 0
 1632 002a 07F51F73 		add	r3, r7, #636
 1633 002e 1846     		mov	r0, r3
 1634 0030 FFF7FEFF 		bl	level_sensor_take_reading
 594:notoriOS.c    ****     
 595:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 596:notoriOS.c    ****         if(m_level_sensor.num_valid_readings > 0){
 1635              		.loc 1 596 0
 1636 0034 07F51F73 		add	r3, r7, #636
 1637 0038 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1638 003a 002B     		cmp	r3, #0
 1639 003c 32D0     		beq	.L57
 597:notoriOS.c    ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 1640              		.loc 1 597 0
 1641 003e 07F51F73 		add	r3, r7, #636
 1642 0042 B3F91630 		ldrsh	r3, [r3, #22]
 1643 0046 07F57670 		add	r0, r7, #984
 1644 004a 1B4A     		ldr	r2, .L66+8
 1645 004c 1421     		movs	r1, #20
 1646 004e FFF7FEFF 		bl	snprintf
 598:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 1647              		.loc 1 598 0
 1648 0052 07F57673 		add	r3, r7, #984
 1649 0056 1A46     		mov	r2, r3
 1650 0058 1849     		ldr	r1, .L66+12
 1651 005a 0020     		movs	r0, #0
 1652 005c FFF7FEFF 		bl	printNotif
 599:notoriOS.c    ****             pushData("maxbotix_depth",value,timeStamp);
 1653              		.loc 1 599 0
 1654 0060 07F57673 		add	r3, r7, #984
 1655 0064 D7F80C24 		ldr	r2, [r7, #1036]
 1656 0068 1946     		mov	r1, r3
 1657 006a 1548     		ldr	r0, .L66+16
 1658 006c FFF7FEFF 		bl	pushData
 600:notoriOS.c    ****             
 601:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 602:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1659              		.loc 1 602 0
 1660 0070 07F57B73 		add	r3, r7, #1004
 1661 0074 1A46     		mov	r2, r3
 1662 0076 1349     		ldr	r1, .L66+20
 1663 0078 1348     		ldr	r0, .L66+24
 1664 007a FFF7FEFF 		bl	SD_write
 603:notoriOS.c    ****             SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 1665              		.loc 1 603 0
 1666 007e 134A     		ldr	r2, .L66+28
 1667 0080 1049     		ldr	r1, .L66+20
 1668 0082 1148     		ldr	r0, .L66+24
 1669 0084 FFF7FEFF 		bl	SD_write
 604:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1670              		.loc 1 604 0
 1671 0088 07F57673 		add	r3, r7, #984
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 45


 1672 008c 1A46     		mov	r2, r3
 1673 008e 0D49     		ldr	r1, .L66+20
 1674 0090 0D48     		ldr	r0, .L66+24
 1675 0092 FFF7FEFF 		bl	SD_write
 605:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1676              		.loc 1 605 0
 1677 0096 0E4A     		ldr	r2, .L66+32
 1678 0098 0A49     		ldr	r1, .L66+20
 1679 009a 0B48     		ldr	r0, .L66+24
 1680 009c FFF7FEFF 		bl	SD_write
 1681 00a0 00F0DEBD 		b	.L59
 1682              	.L57:
 606:notoriOS.c    ****         }else{
 607:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 1683              		.loc 1 607 0
 1684 00a4 0B49     		ldr	r1, .L66+36
 1685 00a6 0220     		movs	r0, #2
 1686 00a8 FFF7FEFF 		bl	printNotif
 1687 00ac 00F0D8BD 		b	.L59
 1688              	.L67:
 1689              		.align	2
 1690              	.L66:
 1691 00b0 70020000 		.word	.LC35
 1692 00b4 00000000 		.word	updatable_parameters
 1693 00b8 3C000000 		.word	.LC2
 1694 00bc 74020000 		.word	.LC36
 1695 00c0 88020000 		.word	.LC37
 1696 00c4 98020000 		.word	.LC38
 1697 00c8 00000000 		.word	Data_fileName
 1698 00cc 9C020000 		.word	.LC39
 1699 00d0 B0020000 		.word	.LC40
 1700 00d4 B4020000 		.word	.LC41
 1701              	.L56:
 1702              	.LBE9:
 608:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 609:notoriOS.c    ****         }
 610:notoriOS.c    ****     // If node type is sontek flow node, take sontek sensor measurements
 611:notoriOS.c    ****     }else if(updatable_parameters.node_type == NODE_TYPE_SONTEK_FLOW){
 1703              		.loc 1 611 0
 1704 00d8 084B     		ldr	r3, .L68
 1705 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1706 00dc 022B     		cmp	r3, #2
 1707 00de 40F0BF85 		bne	.L59
 1708              	.LBB10:
 612:notoriOS.c    ****         
 613:notoriOS.c    ****         // sontek_t is a new data type we defined in sontek.h. We then use that data type to define
 614:notoriOS.c    ****         sontek_t m_sontek;
 615:notoriOS.c    ****         
 616:notoriOS.c    ****         // Take sontek readings and save them to m_sontek
 617:notoriOS.c    ****         m_sontek = sontek_take_reading();
 1709              		.loc 1 617 0
 1710 00e2 07F5C873 		add	r3, r7, #400
 1711 00e6 1846     		mov	r0, r3
 1712 00e8 FFF7FEFF 		bl	sontek_take_reading
 618:notoriOS.c    ****         
 619:notoriOS.c    ****         // If flag is valid (1), then print the sontek readings and push the data to the data wheel
 620:notoriOS.c    ****         if(m_sontek.flag == 1){
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 46


 1713              		.loc 1 620 0
 1714 00ec 07F5C873 		add	r3, r7, #400
 1715 00f0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1716 00f2 012B     		cmp	r3, #1
 1717 00f4 40F08485 		bne	.L60
 1718 00f8 02E0     		b	.L69
 1719              	.L70:
 1720 00fa 00BF     		.align	2
 1721              	.L68:
 1722 00fc 00000000 		.word	updatable_parameters
 1723              	.L69:
 621:notoriOS.c    ****             
 622:notoriOS.c    ****             //Print all measurements to serial and the SD card to file called data.txt
 623:notoriOS.c    **** 
 624:notoriOS.c    ****             snprintf(big_value,sizeof(big_value),"%.2f,%.2f,%.2f,%.2f,\
 625:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 626:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 627:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 628:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 629:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 630:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 631:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 632:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,\
 633:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f",\
 634:notoriOS.c    ****                 m_sontek.data0[0],m_sontek.data0[1],m_sontek.data0[2],m_sontek.data0[3],\
 1724              		.loc 1 634 0
 1725 0100 07F5C873 		add	r3, r7, #400
 1726 0104 DB68     		ldr	r3, [r3, #12]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1727              		.loc 1 624 0
 1728 0106 1846     		mov	r0, r3
 1729 0108 FFF7FEFF 		bl	__aeabi_f2d
 1730 010c 07F5C473 		add	r3, r7, #392
 1731 0110 C3E90001 		strd	r0, [r3]
 1732              		.loc 1 634 0
 1733 0114 07F5C873 		add	r3, r7, #400
 1734 0118 1B69     		ldr	r3, [r3, #16]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1735              		.loc 1 624 0
 1736 011a 1846     		mov	r0, r3
 1737 011c FFF7FEFF 		bl	__aeabi_f2d
 1738 0120 07F5C073 		add	r3, r7, #384
 1739 0124 C3E90001 		strd	r0, [r3]
 1740              		.loc 1 634 0
 1741 0128 07F5C873 		add	r3, r7, #400
 1742 012c 5B69     		ldr	r3, [r3, #20]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1743              		.loc 1 624 0
 1744 012e 1846     		mov	r0, r3
 1745 0130 FFF7FEFF 		bl	__aeabi_f2d
 1746 0134 07F5BC73 		add	r3, r7, #376
 1747 0138 C3E90001 		strd	r0, [r3]
 1748              		.loc 1 634 0
 1749 013c 07F5C873 		add	r3, r7, #400
 1750 0140 9B69     		ldr	r3, [r3, #24]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1751              		.loc 1 624 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 47


 1752 0142 1846     		mov	r0, r3
 1753 0144 FFF7FEFF 		bl	__aeabi_f2d
 1754 0148 07F5B873 		add	r3, r7, #368
 1755 014c C3E90001 		strd	r0, [r3]
 635:notoriOS.c    ****                 m_sontek.data1[0],m_sontek.data1[1],m_sontek.data1[2],m_sontek.data1[3],m_sontek.da
 1756              		.loc 1 635 0
 1757 0150 07F5C873 		add	r3, r7, #400
 1758 0154 DB69     		ldr	r3, [r3, #28]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1759              		.loc 1 624 0
 1760 0156 1846     		mov	r0, r3
 1761 0158 FFF7FEFF 		bl	__aeabi_f2d
 1762 015c 07F5B473 		add	r3, r7, #360
 1763 0160 C3E90001 		strd	r0, [r3]
 1764              		.loc 1 635 0
 1765 0164 07F5C873 		add	r3, r7, #400
 1766 0168 1B6A     		ldr	r3, [r3, #32]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1767              		.loc 1 624 0
 1768 016a 1846     		mov	r0, r3
 1769 016c FFF7FEFF 		bl	__aeabi_f2d
 1770 0170 07F5B073 		add	r3, r7, #352
 1771 0174 C3E90001 		strd	r0, [r3]
 1772              		.loc 1 635 0
 1773 0178 07F5C873 		add	r3, r7, #400
 1774 017c 5B6A     		ldr	r3, [r3, #36]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1775              		.loc 1 624 0
 1776 017e 1846     		mov	r0, r3
 1777 0180 FFF7FEFF 		bl	__aeabi_f2d
 1778 0184 07F5AC73 		add	r3, r7, #344
 1779 0188 C3E90001 		strd	r0, [r3]
 1780              		.loc 1 635 0
 1781 018c 07F5C873 		add	r3, r7, #400
 1782 0190 9B6A     		ldr	r3, [r3, #40]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1783              		.loc 1 624 0
 1784 0192 1846     		mov	r0, r3
 1785 0194 FFF7FEFF 		bl	__aeabi_f2d
 1786 0198 07F5A873 		add	r3, r7, #336
 1787 019c C3E90001 		strd	r0, [r3]
 1788              		.loc 1 635 0
 1789 01a0 07F5C873 		add	r3, r7, #400
 1790 01a4 DB6A     		ldr	r3, [r3, #44]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1791              		.loc 1 624 0
 1792 01a6 1846     		mov	r0, r3
 1793 01a8 FFF7FEFF 		bl	__aeabi_f2d
 1794 01ac 07F5A473 		add	r3, r7, #328
 1795 01b0 C3E90001 		strd	r0, [r3]
 636:notoriOS.c    ****                 m_sontek.data2[0],m_sontek.data2[1],m_sontek.data2[2],m_sontek.data2[3],m_sontek.da
 1796              		.loc 1 636 0
 1797 01b4 07F5C873 		add	r3, r7, #400
 1798 01b8 1B6B     		ldr	r3, [r3, #48]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1799              		.loc 1 624 0
 1800 01ba 1846     		mov	r0, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 48


 1801 01bc FFF7FEFF 		bl	__aeabi_f2d
 1802 01c0 07F5A073 		add	r3, r7, #320
 1803 01c4 C3E90001 		strd	r0, [r3]
 1804              		.loc 1 636 0
 1805 01c8 07F5C873 		add	r3, r7, #400
 1806 01cc 5B6B     		ldr	r3, [r3, #52]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1807              		.loc 1 624 0
 1808 01ce 1846     		mov	r0, r3
 1809 01d0 FFF7FEFF 		bl	__aeabi_f2d
 1810 01d4 07F59C73 		add	r3, r7, #312
 1811 01d8 C3E90001 		strd	r0, [r3]
 1812              		.loc 1 636 0
 1813 01dc 07F5C873 		add	r3, r7, #400
 1814 01e0 9B6B     		ldr	r3, [r3, #56]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1815              		.loc 1 624 0
 1816 01e2 1846     		mov	r0, r3
 1817 01e4 FFF7FEFF 		bl	__aeabi_f2d
 1818 01e8 07F59873 		add	r3, r7, #304
 1819 01ec C3E90001 		strd	r0, [r3]
 1820              		.loc 1 636 0
 1821 01f0 07F5C873 		add	r3, r7, #400
 1822 01f4 DB6B     		ldr	r3, [r3, #60]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1823              		.loc 1 624 0
 1824 01f6 1846     		mov	r0, r3
 1825 01f8 FFF7FEFF 		bl	__aeabi_f2d
 1826 01fc 07F59473 		add	r3, r7, #296
 1827 0200 C3E90001 		strd	r0, [r3]
 1828              		.loc 1 636 0
 1829 0204 07F5C873 		add	r3, r7, #400
 1830 0208 1B6C     		ldr	r3, [r3, #64]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1831              		.loc 1 624 0
 1832 020a 1846     		mov	r0, r3
 1833 020c FFF7FEFF 		bl	__aeabi_f2d
 1834 0210 07F59073 		add	r3, r7, #288
 1835 0214 C3E90001 		strd	r0, [r3]
 1836              		.loc 1 636 0
 1837 0218 07F5C873 		add	r3, r7, #400
 1838 021c 5B6C     		ldr	r3, [r3, #68]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1839              		.loc 1 624 0
 1840 021e 1846     		mov	r0, r3
 1841 0220 FFF7FEFF 		bl	__aeabi_f2d
 1842 0224 07F58C73 		add	r3, r7, #280
 1843 0228 C3E90001 		strd	r0, [r3]
 637:notoriOS.c    ****                 m_sontek.data3[0],m_sontek.data3[1],m_sontek.data3[2],m_sontek.data3[3],m_sontek.da
 1844              		.loc 1 637 0
 1845 022c 07F5C873 		add	r3, r7, #400
 1846 0230 9B6C     		ldr	r3, [r3, #72]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1847              		.loc 1 624 0
 1848 0232 1846     		mov	r0, r3
 1849 0234 FFF7FEFF 		bl	__aeabi_f2d
 1850 0238 07F58873 		add	r3, r7, #272
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 49


 1851 023c C3E90001 		strd	r0, [r3]
 1852              		.loc 1 637 0
 1853 0240 07F5C873 		add	r3, r7, #400
 1854 0244 DB6C     		ldr	r3, [r3, #76]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1855              		.loc 1 624 0
 1856 0246 1846     		mov	r0, r3
 1857 0248 FFF7FEFF 		bl	__aeabi_f2d
 1858 024c 07F58473 		add	r3, r7, #264
 1859 0250 C3E90001 		strd	r0, [r3]
 1860              		.loc 1 637 0
 1861 0254 07F5C873 		add	r3, r7, #400
 1862 0258 1B6D     		ldr	r3, [r3, #80]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1863              		.loc 1 624 0
 1864 025a 1846     		mov	r0, r3
 1865 025c FFF7FEFF 		bl	__aeabi_f2d
 1866 0260 07F58073 		add	r3, r7, #256
 1867 0264 C3E90001 		strd	r0, [r3]
 1868              		.loc 1 637 0
 1869 0268 07F5C873 		add	r3, r7, #400
 1870 026c 5B6D     		ldr	r3, [r3, #84]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1871              		.loc 1 624 0
 1872 026e 1846     		mov	r0, r3
 1873 0270 FFF7FEFF 		bl	__aeabi_f2d
 1874 0274 C7E93E01 		strd	r0, [r7, #248]
 1875              		.loc 1 637 0
 1876 0278 07F5C873 		add	r3, r7, #400
 1877 027c 9B6D     		ldr	r3, [r3, #88]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1878              		.loc 1 624 0
 1879 027e 1846     		mov	r0, r3
 1880 0280 FFF7FEFF 		bl	__aeabi_f2d
 1881 0284 C7E93C01 		strd	r0, [r7, #240]
 1882              		.loc 1 637 0
 1883 0288 07F5C873 		add	r3, r7, #400
 1884 028c DB6D     		ldr	r3, [r3, #92]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1885              		.loc 1 624 0
 1886 028e 1846     		mov	r0, r3
 1887 0290 FFF7FEFF 		bl	__aeabi_f2d
 1888 0294 C7E93A01 		strd	r0, [r7, #232]
 638:notoriOS.c    ****                 m_sontek.data4[0],m_sontek.data4[1],m_sontek.data4[2],m_sontek.data4[3],m_sontek.da
 1889              		.loc 1 638 0
 1890 0298 07F5C873 		add	r3, r7, #400
 1891 029c 1B6E     		ldr	r3, [r3, #96]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1892              		.loc 1 624 0
 1893 029e 1846     		mov	r0, r3
 1894 02a0 FFF7FEFF 		bl	__aeabi_f2d
 1895 02a4 C7E93801 		strd	r0, [r7, #224]
 1896              		.loc 1 638 0
 1897 02a8 07F5C873 		add	r3, r7, #400
 1898 02ac 5B6E     		ldr	r3, [r3, #100]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1899              		.loc 1 624 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 50


 1900 02ae 1846     		mov	r0, r3
 1901 02b0 FFF7FEFF 		bl	__aeabi_f2d
 1902 02b4 C7E93601 		strd	r0, [r7, #216]
 1903              		.loc 1 638 0
 1904 02b8 07F5C873 		add	r3, r7, #400
 1905 02bc 9B6E     		ldr	r3, [r3, #104]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1906              		.loc 1 624 0
 1907 02be 1846     		mov	r0, r3
 1908 02c0 FFF7FEFF 		bl	__aeabi_f2d
 1909 02c4 C7E93401 		strd	r0, [r7, #208]
 1910              		.loc 1 638 0
 1911 02c8 07F5C873 		add	r3, r7, #400
 1912 02cc DB6E     		ldr	r3, [r3, #108]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1913              		.loc 1 624 0
 1914 02ce 1846     		mov	r0, r3
 1915 02d0 FFF7FEFF 		bl	__aeabi_f2d
 1916 02d4 C7E93201 		strd	r0, [r7, #200]
 1917              		.loc 1 638 0
 1918 02d8 07F5C873 		add	r3, r7, #400
 1919 02dc 1B6F     		ldr	r3, [r3, #112]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1920              		.loc 1 624 0
 1921 02de 1846     		mov	r0, r3
 1922 02e0 FFF7FEFF 		bl	__aeabi_f2d
 1923 02e4 C7E93001 		strd	r0, [r7, #192]
 1924              		.loc 1 638 0
 1925 02e8 07F5C873 		add	r3, r7, #400
 1926 02ec 5B6F     		ldr	r3, [r3, #116]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1927              		.loc 1 624 0
 1928 02ee 1846     		mov	r0, r3
 1929 02f0 FFF7FEFF 		bl	__aeabi_f2d
 1930 02f4 C7E92E01 		strd	r0, [r7, #184]
 639:notoriOS.c    ****                 m_sontek.data5[0],m_sontek.data5[1],m_sontek.data5[2],m_sontek.data5[3],m_sontek.da
 1931              		.loc 1 639 0
 1932 02f8 07F5C873 		add	r3, r7, #400
 1933 02fc 9B6F     		ldr	r3, [r3, #120]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1934              		.loc 1 624 0
 1935 02fe 1846     		mov	r0, r3
 1936 0300 FFF7FEFF 		bl	__aeabi_f2d
 1937 0304 C7E92C01 		strd	r0, [r7, #176]
 1938              		.loc 1 639 0
 1939 0308 07F5C873 		add	r3, r7, #400
 1940 030c DB6F     		ldr	r3, [r3, #124]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1941              		.loc 1 624 0
 1942 030e 1846     		mov	r0, r3
 1943 0310 FFF7FEFF 		bl	__aeabi_f2d
 1944 0314 C7E92A01 		strd	r0, [r7, #168]
 1945              		.loc 1 639 0
 1946 0318 07F5C873 		add	r3, r7, #400
 1947 031c D3F88030 		ldr	r3, [r3, #128]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1948              		.loc 1 624 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 51


 1949 0320 1846     		mov	r0, r3
 1950 0322 FFF7FEFF 		bl	__aeabi_f2d
 1951 0326 C7E92801 		strd	r0, [r7, #160]
 1952              		.loc 1 639 0
 1953 032a 07F5C873 		add	r3, r7, #400
 1954 032e D3F88430 		ldr	r3, [r3, #132]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1955              		.loc 1 624 0
 1956 0332 1846     		mov	r0, r3
 1957 0334 FFF7FEFF 		bl	__aeabi_f2d
 1958 0338 C7E92601 		strd	r0, [r7, #152]
 1959              		.loc 1 639 0
 1960 033c 07F5C873 		add	r3, r7, #400
 1961 0340 D3F88830 		ldr	r3, [r3, #136]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1962              		.loc 1 624 0
 1963 0344 1846     		mov	r0, r3
 1964 0346 FFF7FEFF 		bl	__aeabi_f2d
 1965 034a C7E92401 		strd	r0, [r7, #144]
 1966              		.loc 1 639 0
 1967 034e 07F5C873 		add	r3, r7, #400
 1968 0352 D3F88C30 		ldr	r3, [r3, #140]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1969              		.loc 1 624 0
 1970 0356 1846     		mov	r0, r3
 1971 0358 FFF7FEFF 		bl	__aeabi_f2d
 1972 035c C7E92201 		strd	r0, [r7, #136]
 640:notoriOS.c    ****                 m_sontek.data6[0],m_sontek.data6[1],m_sontek.data6[2],m_sontek.data6[3],m_sontek.da
 1973              		.loc 1 640 0
 1974 0360 07F5C873 		add	r3, r7, #400
 1975 0364 D3F89030 		ldr	r3, [r3, #144]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1976              		.loc 1 624 0
 1977 0368 1846     		mov	r0, r3
 1978 036a FFF7FEFF 		bl	__aeabi_f2d
 1979 036e C7E92001 		strd	r0, [r7, #128]
 1980              		.loc 1 640 0
 1981 0372 07F5C873 		add	r3, r7, #400
 1982 0376 D3F89430 		ldr	r3, [r3, #148]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1983              		.loc 1 624 0
 1984 037a 1846     		mov	r0, r3
 1985 037c FFF7FEFF 		bl	__aeabi_f2d
 1986 0380 C7E91E01 		strd	r0, [r7, #120]
 1987              		.loc 1 640 0
 1988 0384 07F5C873 		add	r3, r7, #400
 1989 0388 D3F89830 		ldr	r3, [r3, #152]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1990              		.loc 1 624 0
 1991 038c 1846     		mov	r0, r3
 1992 038e FFF7FEFF 		bl	__aeabi_f2d
 1993 0392 C7E91C01 		strd	r0, [r7, #112]
 1994              		.loc 1 640 0
 1995 0396 07F5C873 		add	r3, r7, #400
 1996 039a D3F89C30 		ldr	r3, [r3, #156]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1997              		.loc 1 624 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 52


 1998 039e 1846     		mov	r0, r3
 1999 03a0 FFF7FEFF 		bl	__aeabi_f2d
 2000 03a4 C7E91A01 		strd	r0, [r7, #104]
 2001              		.loc 1 640 0
 2002 03a8 07F5C873 		add	r3, r7, #400
 2003 03ac D3F8A030 		ldr	r3, [r3, #160]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2004              		.loc 1 624 0
 2005 03b0 1846     		mov	r0, r3
 2006 03b2 FFF7FEFF 		bl	__aeabi_f2d
 2007 03b6 C7E91801 		strd	r0, [r7, #96]
 2008              		.loc 1 640 0
 2009 03ba 07F5C873 		add	r3, r7, #400
 2010 03be D3F8A430 		ldr	r3, [r3, #164]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2011              		.loc 1 624 0
 2012 03c2 1846     		mov	r0, r3
 2013 03c4 FFF7FEFF 		bl	__aeabi_f2d
 2014 03c8 C7E91601 		strd	r0, [r7, #88]
 641:notoriOS.c    ****                 m_sontek.data7[0],m_sontek.data7[1],m_sontek.data7[2],m_sontek.data7[3],m_sontek.da
 2015              		.loc 1 641 0
 2016 03cc 07F5C873 		add	r3, r7, #400
 2017 03d0 D3F8A830 		ldr	r3, [r3, #168]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2018              		.loc 1 624 0
 2019 03d4 1846     		mov	r0, r3
 2020 03d6 FFF7FEFF 		bl	__aeabi_f2d
 2021 03da C7E91401 		strd	r0, [r7, #80]
 2022              		.loc 1 641 0
 2023 03de 07F5C873 		add	r3, r7, #400
 2024 03e2 D3F8AC30 		ldr	r3, [r3, #172]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2025              		.loc 1 624 0
 2026 03e6 1846     		mov	r0, r3
 2027 03e8 FFF7FEFF 		bl	__aeabi_f2d
 2028 03ec C7E91201 		strd	r0, [r7, #72]
 2029              		.loc 1 641 0
 2030 03f0 07F5C873 		add	r3, r7, #400
 2031 03f4 D3F8B030 		ldr	r3, [r3, #176]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2032              		.loc 1 624 0
 2033 03f8 1846     		mov	r0, r3
 2034 03fa FFF7FEFF 		bl	__aeabi_f2d
 2035 03fe C7E91001 		strd	r0, [r7, #64]
 2036              		.loc 1 641 0
 2037 0402 07F5C873 		add	r3, r7, #400
 2038 0406 D3F8B430 		ldr	r3, [r3, #180]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2039              		.loc 1 624 0
 2040 040a 1846     		mov	r0, r3
 2041 040c FFF7FEFF 		bl	__aeabi_f2d
 2042 0410 C7E90E01 		strd	r0, [r7, #56]
 2043              		.loc 1 641 0
 2044 0414 07F5C873 		add	r3, r7, #400
 2045 0418 D3F8B830 		ldr	r3, [r3, #184]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2046              		.loc 1 624 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 53


 2047 041c 1846     		mov	r0, r3
 2048 041e FFF7FEFF 		bl	__aeabi_f2d
 2049 0422 C7E90C01 		strd	r0, [r7, #48]
 2050              		.loc 1 641 0
 2051 0426 07F5C873 		add	r3, r7, #400
 2052 042a D3F8BC30 		ldr	r3, [r3, #188]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2053              		.loc 1 624 0
 2054 042e 1846     		mov	r0, r3
 2055 0430 FFF7FEFF 		bl	__aeabi_f2d
 2056 0434 C7E90A01 		strd	r0, [r7, #40]
 642:notoriOS.c    ****                 m_sontek.data8[0],m_sontek.data8[1],m_sontek.data8[2],m_sontek.data8[3],\
 2057              		.loc 1 642 0
 2058 0438 07F5C873 		add	r3, r7, #400
 2059 043c D3F8C030 		ldr	r3, [r3, #192]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2060              		.loc 1 624 0
 2061 0440 1846     		mov	r0, r3
 2062 0442 FFF7FEFF 		bl	__aeabi_f2d
 2063 0446 C7E90801 		strd	r0, [r7, #32]
 2064              		.loc 1 642 0
 2065 044a 07F5C873 		add	r3, r7, #400
 2066 044e D3F8C430 		ldr	r3, [r3, #196]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2067              		.loc 1 624 0
 2068 0452 1846     		mov	r0, r3
 2069 0454 FFF7FEFF 		bl	__aeabi_f2d
 2070 0458 C7E90601 		strd	r0, [r7, #24]
 2071              		.loc 1 642 0
 2072 045c 07F5C873 		add	r3, r7, #400
 2073 0460 D3F8C830 		ldr	r3, [r3, #200]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2074              		.loc 1 624 0
 2075 0464 1846     		mov	r0, r3
 2076 0466 FFF7FEFF 		bl	__aeabi_f2d
 2077 046a C7E90401 		strd	r0, [r7, #16]
 2078              		.loc 1 642 0
 2079 046e 07F5C873 		add	r3, r7, #400
 2080 0472 D3F8CC30 		ldr	r3, [r3, #204]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2081              		.loc 1 624 0
 2082 0476 1846     		mov	r0, r3
 2083 0478 FFF7FEFF 		bl	__aeabi_f2d
 2084 047c C7E90201 		strd	r0, [r7, #8]
 643:notoriOS.c    ****                 m_sontek.data9[0],m_sontek.data9[1],m_sontek.data9[2],m_sontek.data9[3],m_sontek.da
 2085              		.loc 1 643 0
 2086 0480 07F5C873 		add	r3, r7, #400
 2087 0484 D3F8D030 		ldr	r3, [r3, #208]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2088              		.loc 1 624 0
 2089 0488 1846     		mov	r0, r3
 2090 048a FFF7FEFF 		bl	__aeabi_f2d
 2091 048e C7E90001 		strd	r0, [r7]
 2092              		.loc 1 643 0
 2093 0492 07F5C873 		add	r3, r7, #400
 2094 0496 D3F8D430 		ldr	r3, [r3, #212]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 54


 2095              		.loc 1 624 0
 2096 049a 1846     		mov	r0, r3
 2097 049c FFF7FEFF 		bl	__aeabi_f2d
 2098 04a0 8246     		mov	r10, r0
 2099 04a2 8B46     		mov	fp, r1
 2100              		.loc 1 643 0
 2101 04a4 07F5C873 		add	r3, r7, #400
 2102 04a8 D3F8D830 		ldr	r3, [r3, #216]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2103              		.loc 1 624 0
 2104 04ac 1846     		mov	r0, r3
 2105 04ae FFF7FEFF 		bl	__aeabi_f2d
 2106 04b2 8046     		mov	r8, r0
 2107 04b4 8946     		mov	r9, r1
 2108              		.loc 1 643 0
 2109 04b6 07F5C873 		add	r3, r7, #400
 2110 04ba D3F8DC30 		ldr	r3, [r3, #220]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2111              		.loc 1 624 0
 2112 04be 1846     		mov	r0, r3
 2113 04c0 FFF7FEFF 		bl	__aeabi_f2d
 2114 04c4 0446     		mov	r4, r0
 2115 04c6 0D46     		mov	r5, r1
 2116              		.loc 1 643 0
 2117 04c8 07F5C873 		add	r3, r7, #400
 2118 04cc D3F8E030 		ldr	r3, [r3, #224]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2119              		.loc 1 624 0
 2120 04d0 1846     		mov	r0, r3
 2121 04d2 FFF7FEFF 		bl	__aeabi_f2d
 2122 04d6 0A46     		mov	r2, r1
 2123 04d8 0146     		mov	r1, r0
 2124 04da 07F52B70 		add	r0, r7, #684
 2125 04de 6AAB     		add	r3, sp, #424
 2126 04e0 C3E90012 		strd	r1, [r3]
 2127 04e4 68AB     		add	r3, sp, #416
 2128 04e6 C3E90045 		strd	r4, [r3]
 2129 04ea 66AB     		add	r3, sp, #408
 2130 04ec C3E90089 		strd	r8, [r3]
 2131 04f0 64AB     		add	r3, sp, #400
 2132 04f2 C3E900AB 		strd	r10, [r3]
 2133 04f6 62AB     		add	r3, sp, #392
 2134 04f8 D7E90012 		ldrd	r1, [r7]
 2135 04fc C3E90012 		strd	r1, [r3]
 2136 0500 60AB     		add	r3, sp, #384
 2137 0502 D7E90212 		ldrd	r1, [r7, #8]
 2138 0506 C3E90012 		strd	r1, [r3]
 2139 050a 5EAB     		add	r3, sp, #376
 2140 050c D7E90412 		ldrd	r1, [r7, #16]
 2141 0510 C3E90012 		strd	r1, [r3]
 2142 0514 5CAB     		add	r3, sp, #368
 2143 0516 D7E90612 		ldrd	r1, [r7, #24]
 2144 051a C3E90012 		strd	r1, [r3]
 2145 051e 5AAB     		add	r3, sp, #360
 2146 0520 D7E90812 		ldrd	r1, [r7, #32]
 2147 0524 C3E90012 		strd	r1, [r3]
 2148 0528 58AB     		add	r3, sp, #352
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 55


 2149 052a D7E90A12 		ldrd	r1, [r7, #40]
 2150 052e C3E90012 		strd	r1, [r3]
 2151 0532 56AB     		add	r3, sp, #344
 2152 0534 D7E90C12 		ldrd	r1, [r7, #48]
 2153 0538 C3E90012 		strd	r1, [r3]
 2154 053c 54AB     		add	r3, sp, #336
 2155 053e D7E90E12 		ldrd	r1, [r7, #56]
 2156 0542 C3E90012 		strd	r1, [r3]
 2157 0546 52AB     		add	r3, sp, #328
 2158 0548 D7E91012 		ldrd	r1, [r7, #64]
 2159 054c C3E90012 		strd	r1, [r3]
 2160 0550 50AB     		add	r3, sp, #320
 2161 0552 D7E91212 		ldrd	r1, [r7, #72]
 2162 0556 C3E90012 		strd	r1, [r3]
 2163 055a 4EAB     		add	r3, sp, #312
 2164 055c D7E91412 		ldrd	r1, [r7, #80]
 2165 0560 C3E90012 		strd	r1, [r3]
 2166 0564 4CAB     		add	r3, sp, #304
 2167 0566 D7E91612 		ldrd	r1, [r7, #88]
 2168 056a C3E90012 		strd	r1, [r3]
 2169 056e 4AAB     		add	r3, sp, #296
 2170 0570 D7E91812 		ldrd	r1, [r7, #96]
 2171 0574 C3E90012 		strd	r1, [r3]
 2172 0578 48AB     		add	r3, sp, #288
 2173 057a D7E91A12 		ldrd	r1, [r7, #104]
 2174 057e C3E90012 		strd	r1, [r3]
 2175 0582 46AB     		add	r3, sp, #280
 2176 0584 D7E91C12 		ldrd	r1, [r7, #112]
 2177 0588 C3E90012 		strd	r1, [r3]
 2178 058c 44AB     		add	r3, sp, #272
 2179 058e D7E91E12 		ldrd	r1, [r7, #120]
 2180 0592 C3E90012 		strd	r1, [r3]
 2181 0596 42AB     		add	r3, sp, #264
 2182 0598 D7E92012 		ldrd	r1, [r7, #128]
 2183 059c C3E90012 		strd	r1, [r3]
 2184 05a0 40AB     		add	r3, sp, #256
 2185 05a2 D7E92212 		ldrd	r1, [r7, #136]
 2186 05a6 C3E90012 		strd	r1, [r3]
 2187 05aa D7E92434 		ldrd	r3, [r7, #144]
 2188 05ae CDE93E34 		strd	r3, [sp, #248]
 2189 05b2 D7E92634 		ldrd	r3, [r7, #152]
 2190 05b6 CDE93C34 		strd	r3, [sp, #240]
 2191 05ba D7E92834 		ldrd	r3, [r7, #160]
 2192 05be CDE93A34 		strd	r3, [sp, #232]
 2193 05c2 D7E92A34 		ldrd	r3, [r7, #168]
 2194 05c6 CDE93834 		strd	r3, [sp, #224]
 2195 05ca D7E92C34 		ldrd	r3, [r7, #176]
 2196 05ce CDE93634 		strd	r3, [sp, #216]
 2197 05d2 D7E92E34 		ldrd	r3, [r7, #184]
 2198 05d6 CDE93434 		strd	r3, [sp, #208]
 2199 05da D7E93034 		ldrd	r3, [r7, #192]
 2200 05de CDE93234 		strd	r3, [sp, #200]
 2201 05e2 D7E93234 		ldrd	r3, [r7, #200]
 2202 05e6 CDE93034 		strd	r3, [sp, #192]
 2203 05ea D7E93434 		ldrd	r3, [r7, #208]
 2204 05ee CDE92E34 		strd	r3, [sp, #184]
 2205 05f2 D7E93634 		ldrd	r3, [r7, #216]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 56


 2206 05f6 CDE92C34 		strd	r3, [sp, #176]
 2207 05fa D7E93834 		ldrd	r3, [r7, #224]
 2208 05fe CDE92A34 		strd	r3, [sp, #168]
 2209 0602 D7E93A34 		ldrd	r3, [r7, #232]
 2210 0606 CDE92834 		strd	r3, [sp, #160]
 2211 060a D7E93C34 		ldrd	r3, [r7, #240]
 2212 060e CDE92634 		strd	r3, [sp, #152]
 2213 0612 D7E93E34 		ldrd	r3, [r7, #248]
 2214 0616 CDE92434 		strd	r3, [sp, #144]
 2215 061a 07F58073 		add	r3, r7, #256
 2216 061e 18CB     		ldmia	r3, {r3-r4}
 2217 0620 CDE92234 		strd	r3, [sp, #136]
 2218 0624 07F58473 		add	r3, r7, #264
 2219 0628 18CB     		ldmia	r3, {r3-r4}
 2220 062a CDE92034 		strd	r3, [sp, #128]
 2221 062e 07F58873 		add	r3, r7, #272
 2222 0632 18CB     		ldmia	r3, {r3-r4}
 2223 0634 CDE91E34 		strd	r3, [sp, #120]
 2224 0638 07F58C73 		add	r3, r7, #280
 2225 063c 18CB     		ldmia	r3, {r3-r4}
 2226 063e CDE91C34 		strd	r3, [sp, #112]
 2227 0642 07F59073 		add	r3, r7, #288
 2228 0646 18CB     		ldmia	r3, {r3-r4}
 2229 0648 CDE91A34 		strd	r3, [sp, #104]
 2230 064c 07F59473 		add	r3, r7, #296
 2231 0650 18CB     		ldmia	r3, {r3-r4}
 2232 0652 CDE91834 		strd	r3, [sp, #96]
 2233 0656 07F59873 		add	r3, r7, #304
 2234 065a 18CB     		ldmia	r3, {r3-r4}
 2235 065c CDE91634 		strd	r3, [sp, #88]
 2236 0660 07F59C73 		add	r3, r7, #312
 2237 0664 18CB     		ldmia	r3, {r3-r4}
 2238 0666 CDE91434 		strd	r3, [sp, #80]
 2239 066a 07F5A073 		add	r3, r7, #320
 2240 066e 18CB     		ldmia	r3, {r3-r4}
 2241 0670 CDE91234 		strd	r3, [sp, #72]
 2242 0674 07F5A473 		add	r3, r7, #328
 2243 0678 18CB     		ldmia	r3, {r3-r4}
 2244 067a CDE91034 		strd	r3, [sp, #64]
 2245 067e 07F5A873 		add	r3, r7, #336
 2246 0682 18CB     		ldmia	r3, {r3-r4}
 2247 0684 CDE90E34 		strd	r3, [sp, #56]
 2248 0688 07F5AC73 		add	r3, r7, #344
 2249 068c 18CB     		ldmia	r3, {r3-r4}
 2250 068e CDE90C34 		strd	r3, [sp, #48]
 2251 0692 07F5B073 		add	r3, r7, #352
 2252 0696 18CB     		ldmia	r3, {r3-r4}
 2253 0698 CDE90A34 		strd	r3, [sp, #40]
 2254 069c 07F5B473 		add	r3, r7, #360
 2255 06a0 18CB     		ldmia	r3, {r3-r4}
 2256 06a2 CDE90834 		strd	r3, [sp, #32]
 2257 06a6 07F5B873 		add	r3, r7, #368
 2258 06aa 18CB     		ldmia	r3, {r3-r4}
 2259 06ac CDE90634 		strd	r3, [sp, #24]
 2260 06b0 07F5BC73 		add	r3, r7, #376
 2261 06b4 18CB     		ldmia	r3, {r3-r4}
 2262 06b6 CDE90434 		strd	r3, [sp, #16]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 57


 2263 06ba 07F5C073 		add	r3, r7, #384
 2264 06be 18CB     		ldmia	r3, {r3-r4}
 2265 06c0 CDE90234 		strd	r3, [sp, #8]
 2266 06c4 07F5C473 		add	r3, r7, #392
 2267 06c8 18CB     		ldmia	r3, {r3-r4}
 2268 06ca CDE90034 		strd	r3, [sp]
 2269 06ce CD4A     		ldr	r2, .L71
 2270 06d0 4FF49671 		mov	r1, #300
 2271 06d4 FFF7FEFF 		bl	snprintf
 644:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"sontek=%s",big_value);
 2272              		.loc 1 644 0
 2273 06d8 07F52B73 		add	r3, r7, #684
 2274 06dc 1A46     		mov	r2, r3
 2275 06de CA49     		ldr	r1, .L71+4
 2276 06e0 0020     		movs	r0, #0
 2277 06e2 FFF7FEFF 		bl	printNotif
 645:notoriOS.c    **** 
 646:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 2278              		.loc 1 646 0
 2279 06e6 07F57B73 		add	r3, r7, #1004
 2280 06ea 1A46     		mov	r2, r3
 2281 06ec C749     		ldr	r1, .L71+8
 2282 06ee C848     		ldr	r0, .L71+12
 2283 06f0 FFF7FEFF 		bl	SD_write
 647:notoriOS.c    ****             SD_write(Data_fileName, "a+", " sontek, ");
 2284              		.loc 1 647 0
 2285 06f4 C74A     		ldr	r2, .L71+16
 2286 06f6 C549     		ldr	r1, .L71+8
 2287 06f8 C548     		ldr	r0, .L71+12
 2288 06fa FFF7FEFF 		bl	SD_write
 648:notoriOS.c    ****             SD_write(Data_fileName, "a+", big_value);
 2289              		.loc 1 648 0
 2290 06fe 07F52B73 		add	r3, r7, #684
 2291 0702 1A46     		mov	r2, r3
 2292 0704 C149     		ldr	r1, .L71+8
 2293 0706 C248     		ldr	r0, .L71+12
 2294 0708 FFF7FEFF 		bl	SD_write
 649:notoriOS.c    ****             SD_write(Data_fileName, "a+", "\n");    //new line
 2295              		.loc 1 649 0
 2296 070c C24A     		ldr	r2, .L71+20
 2297 070e BF49     		ldr	r1, .L71+8
 2298 0710 BF48     		ldr	r0, .L71+12
 2299 0712 FFF7FEFF 		bl	SD_write
 650:notoriOS.c    ****             
 651:notoriOS.c    ****             //send specific measurements from m_sontek.values array to influx
 652:notoriOS.c    **** //            //temperature - 0 data0
 653:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.data0[0]);
 654:notoriOS.c    **** //            pushData("sontek_temp",value,timeStamp);
 655:notoriOS.c    ****             //stage - 2 data0
 656:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data0[2]);
 2300              		.loc 1 656 0
 2301 0716 07F5C873 		add	r3, r7, #400
 2302 071a 5B69     		ldr	r3, [r3, #20]	@ float
 2303 071c 1846     		mov	r0, r3
 2304 071e FFF7FEFF 		bl	__aeabi_f2d
 2305 0722 0346     		mov	r3, r0
 2306 0724 0C46     		mov	r4, r1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 58


 2307 0726 07F57670 		add	r0, r7, #984
 2308 072a CDE90034 		strd	r3, [sp]
 2309 072e BB4A     		ldr	r2, .L71+24
 2310 0730 1421     		movs	r1, #20
 2311 0732 FFF7FEFF 		bl	snprintf
 657:notoriOS.c    ****             pushData("sontek_stage",value,timeStamp);
 2312              		.loc 1 657 0
 2313 0736 07F57673 		add	r3, r7, #984
 2314 073a D7F80C24 		ldr	r2, [r7, #1036]
 2315 073e 1946     		mov	r1, r3
 2316 0740 B748     		ldr	r0, .L71+28
 2317 0742 FFF7FEFF 		bl	pushData
 658:notoriOS.c    **** //            //cell end - 3 data0
 659:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.data0[3]);
 660:notoriOS.c    **** //            pushData("sontek_end_cell",value,timeStamp);
 661:notoriOS.c    ****             //flow - 4 data1
 662:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data1[4]);
 2318              		.loc 1 662 0
 2319 0746 07F5C873 		add	r3, r7, #400
 2320 074a DB6A     		ldr	r3, [r3, #44]	@ float
 2321 074c 1846     		mov	r0, r3
 2322 074e FFF7FEFF 		bl	__aeabi_f2d
 2323 0752 0346     		mov	r3, r0
 2324 0754 0C46     		mov	r4, r1
 2325 0756 07F57670 		add	r0, r7, #984
 2326 075a CDE90034 		strd	r3, [sp]
 2327 075e AF4A     		ldr	r2, .L71+24
 2328 0760 1421     		movs	r1, #20
 2329 0762 FFF7FEFF 		bl	snprintf
 663:notoriOS.c    ****             pushData("sontek_Q",value,timeStamp);
 2330              		.loc 1 663 0
 2331 0766 07F57673 		add	r3, r7, #984
 2332 076a D7F80C24 		ldr	r2, [r7, #1036]
 2333 076e 1946     		mov	r1, r3
 2334 0770 AC48     		ldr	r0, .L71+32
 2335 0772 FFF7FEFF 		bl	pushData
 664:notoriOS.c    ****             //average SNR - 3 data1
 665:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data1[3]);
 2336              		.loc 1 665 0
 2337 0776 07F5C873 		add	r3, r7, #400
 2338 077a 9B6A     		ldr	r3, [r3, #40]	@ float
 2339 077c 1846     		mov	r0, r3
 2340 077e FFF7FEFF 		bl	__aeabi_f2d
 2341 0782 0346     		mov	r3, r0
 2342 0784 0C46     		mov	r4, r1
 2343 0786 07F57670 		add	r0, r7, #984
 2344 078a CDE90034 		strd	r3, [sp]
 2345 078e A34A     		ldr	r2, .L71+24
 2346 0790 1421     		movs	r1, #20
 2347 0792 FFF7FEFF 		bl	snprintf
 666:notoriOS.c    ****             pushData("sontek_avg_SNR",value,timeStamp);
 2348              		.loc 1 666 0
 2349 0796 07F57673 		add	r3, r7, #984
 2350 079a D7F80C24 		ldr	r2, [r7, #1036]
 2351 079e 1946     		mov	r1, r3
 2352 07a0 A148     		ldr	r0, .L71+36
 2353 07a2 FFF7FEFF 		bl	pushData
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 59


 667:notoriOS.c    **** //            //pitch - 14
 668:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.values[14]);
 669:notoriOS.c    **** //            pushData("sontek_pitch",value,timeStamp);
 670:notoriOS.c    **** //            //roll - 15
 671:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.values[15]);
 672:notoriOS.c    **** //            pushData("sontek_roll",value,timeStamp);
 673:notoriOS.c    ****             //Amp1 - 0 data3
 674:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data3[0]);
 2354              		.loc 1 674 0
 2355 07a6 07F5C873 		add	r3, r7, #400
 2356 07aa 9B6C     		ldr	r3, [r3, #72]	@ float
 2357 07ac 1846     		mov	r0, r3
 2358 07ae FFF7FEFF 		bl	__aeabi_f2d
 2359 07b2 0346     		mov	r3, r0
 2360 07b4 0C46     		mov	r4, r1
 2361 07b6 07F57670 		add	r0, r7, #984
 2362 07ba CDE90034 		strd	r3, [sp]
 2363 07be 974A     		ldr	r2, .L71+24
 2364 07c0 1421     		movs	r1, #20
 2365 07c2 FFF7FEFF 		bl	snprintf
 675:notoriOS.c    ****             pushData("sontek_amp1",value,timeStamp);
 2366              		.loc 1 675 0
 2367 07c6 07F57673 		add	r3, r7, #984
 2368 07ca D7F80C24 		ldr	r2, [r7, #1036]
 2369 07ce 1946     		mov	r1, r3
 2370 07d0 9648     		ldr	r0, .L71+40
 2371 07d2 FFF7FEFF 		bl	pushData
 676:notoriOS.c    ****             //Amp2 - 1 data3
 677:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data3[1]);
 2372              		.loc 1 677 0
 2373 07d6 07F5C873 		add	r3, r7, #400
 2374 07da DB6C     		ldr	r3, [r3, #76]	@ float
 2375 07dc 1846     		mov	r0, r3
 2376 07de FFF7FEFF 		bl	__aeabi_f2d
 2377 07e2 0346     		mov	r3, r0
 2378 07e4 0C46     		mov	r4, r1
 2379 07e6 07F57670 		add	r0, r7, #984
 2380 07ea CDE90034 		strd	r3, [sp]
 2381 07ee 8B4A     		ldr	r2, .L71+24
 2382 07f0 1421     		movs	r1, #20
 2383 07f2 FFF7FEFF 		bl	snprintf
 678:notoriOS.c    ****             pushData("sontek_amp2",value,timeStamp);
 2384              		.loc 1 678 0
 2385 07f6 07F57673 		add	r3, r7, #984
 2386 07fa D7F80C24 		ldr	r2, [r7, #1036]
 2387 07fe 1946     		mov	r1, r3
 2388 0800 8B48     		ldr	r0, .L71+44
 2389 0802 FFF7FEFF 		bl	pushData
 679:notoriOS.c    ****             //Amp3 - 2 data3
 680:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data3[2]);
 2390              		.loc 1 680 0
 2391 0806 07F5C873 		add	r3, r7, #400
 2392 080a 1B6D     		ldr	r3, [r3, #80]	@ float
 2393 080c 1846     		mov	r0, r3
 2394 080e FFF7FEFF 		bl	__aeabi_f2d
 2395 0812 0346     		mov	r3, r0
 2396 0814 0C46     		mov	r4, r1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 60


 2397 0816 07F57670 		add	r0, r7, #984
 2398 081a CDE90034 		strd	r3, [sp]
 2399 081e 7F4A     		ldr	r2, .L71+24
 2400 0820 1421     		movs	r1, #20
 2401 0822 FFF7FEFF 		bl	snprintf
 681:notoriOS.c    ****             pushData("sontek_amp3",value,timeStamp);
 2402              		.loc 1 681 0
 2403 0826 07F57673 		add	r3, r7, #984
 2404 082a D7F80C24 		ldr	r2, [r7, #1036]
 2405 082e 1946     		mov	r1, r3
 2406 0830 8048     		ldr	r0, .L71+48
 2407 0832 FFF7FEFF 		bl	pushData
 682:notoriOS.c    ****             //snr1 - 3 data3
 683:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data3[3]);
 2408              		.loc 1 683 0
 2409 0836 07F5C873 		add	r3, r7, #400
 2410 083a 5B6D     		ldr	r3, [r3, #84]	@ float
 2411 083c 1846     		mov	r0, r3
 2412 083e FFF7FEFF 		bl	__aeabi_f2d
 2413 0842 0346     		mov	r3, r0
 2414 0844 0C46     		mov	r4, r1
 2415 0846 07F57670 		add	r0, r7, #984
 2416 084a CDE90034 		strd	r3, [sp]
 2417 084e 734A     		ldr	r2, .L71+24
 2418 0850 1421     		movs	r1, #20
 2419 0852 FFF7FEFF 		bl	snprintf
 684:notoriOS.c    ****             pushData("sontek_snr1",value,timeStamp);
 2420              		.loc 1 684 0
 2421 0856 07F57673 		add	r3, r7, #984
 2422 085a D7F80C24 		ldr	r2, [r7, #1036]
 2423 085e 1946     		mov	r1, r3
 2424 0860 7548     		ldr	r0, .L71+52
 2425 0862 FFF7FEFF 		bl	pushData
 685:notoriOS.c    ****             //snr2 - 4 data3
 686:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data3[4]);
 2426              		.loc 1 686 0
 2427 0866 07F5C873 		add	r3, r7, #400
 2428 086a 9B6D     		ldr	r3, [r3, #88]	@ float
 2429 086c 1846     		mov	r0, r3
 2430 086e FFF7FEFF 		bl	__aeabi_f2d
 2431 0872 0346     		mov	r3, r0
 2432 0874 0C46     		mov	r4, r1
 2433 0876 07F57670 		add	r0, r7, #984
 2434 087a CDE90034 		strd	r3, [sp]
 2435 087e 674A     		ldr	r2, .L71+24
 2436 0880 1421     		movs	r1, #20
 2437 0882 FFF7FEFF 		bl	snprintf
 687:notoriOS.c    ****             pushData("sontek_snr2",value,timeStamp);
 2438              		.loc 1 687 0
 2439 0886 07F57673 		add	r3, r7, #984
 2440 088a D7F80C24 		ldr	r2, [r7, #1036]
 2441 088e 1946     		mov	r1, r3
 2442 0890 6A48     		ldr	r0, .L71+56
 2443 0892 FFF7FEFF 		bl	pushData
 688:notoriOS.c    ****             //snr3 - 5 data3
 689:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data3[5]);
 2444              		.loc 1 689 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 61


 2445 0896 07F5C873 		add	r3, r7, #400
 2446 089a DB6D     		ldr	r3, [r3, #92]	@ float
 2447 089c 1846     		mov	r0, r3
 2448 089e FFF7FEFF 		bl	__aeabi_f2d
 2449 08a2 0346     		mov	r3, r0
 2450 08a4 0C46     		mov	r4, r1
 2451 08a6 07F57670 		add	r0, r7, #984
 2452 08aa CDE90034 		strd	r3, [sp]
 2453 08ae 5B4A     		ldr	r2, .L71+24
 2454 08b0 1421     		movs	r1, #20
 2455 08b2 FFF7FEFF 		bl	snprintf
 690:notoriOS.c    ****             pushData("sontek_snr3",value,timeStamp); 
 2456              		.loc 1 690 0
 2457 08b6 07F57673 		add	r3, r7, #984
 2458 08ba D7F80C24 		ldr	r2, [r7, #1036]
 2459 08be 1946     		mov	r1, r3
 2460 08c0 5F48     		ldr	r0, .L71+60
 2461 08c2 FFF7FEFF 		bl	pushData
 691:notoriOS.c    ****             
 692:notoriOS.c    ****             //Amp4 - 0 data5
 693:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data5[0]);
 2462              		.loc 1 693 0
 2463 08c6 07F5C873 		add	r3, r7, #400
 2464 08ca 9B6F     		ldr	r3, [r3, #120]	@ float
 2465 08cc 1846     		mov	r0, r3
 2466 08ce FFF7FEFF 		bl	__aeabi_f2d
 2467 08d2 0346     		mov	r3, r0
 2468 08d4 0C46     		mov	r4, r1
 2469 08d6 07F57670 		add	r0, r7, #984
 2470 08da CDE90034 		strd	r3, [sp]
 2471 08de 4F4A     		ldr	r2, .L71+24
 2472 08e0 1421     		movs	r1, #20
 2473 08e2 FFF7FEFF 		bl	snprintf
 694:notoriOS.c    ****             pushData("sontek_amp4",value,timeStamp);
 2474              		.loc 1 694 0
 2475 08e6 07F57673 		add	r3, r7, #984
 2476 08ea D7F80C24 		ldr	r2, [r7, #1036]
 2477 08ee 1946     		mov	r1, r3
 2478 08f0 5448     		ldr	r0, .L71+64
 2479 08f2 FFF7FEFF 		bl	pushData
 695:notoriOS.c    ****             //Amp5 - 1 data5
 696:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data5[1]);
 2480              		.loc 1 696 0
 2481 08f6 07F5C873 		add	r3, r7, #400
 2482 08fa DB6F     		ldr	r3, [r3, #124]	@ float
 2483 08fc 1846     		mov	r0, r3
 2484 08fe FFF7FEFF 		bl	__aeabi_f2d
 2485 0902 0346     		mov	r3, r0
 2486 0904 0C46     		mov	r4, r1
 2487 0906 07F57670 		add	r0, r7, #984
 2488 090a CDE90034 		strd	r3, [sp]
 2489 090e 434A     		ldr	r2, .L71+24
 2490 0910 1421     		movs	r1, #20
 2491 0912 FFF7FEFF 		bl	snprintf
 697:notoriOS.c    ****             pushData("sontek_amp5",value,timeStamp);
 2492              		.loc 1 697 0
 2493 0916 07F57673 		add	r3, r7, #984
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 62


 2494 091a D7F80C24 		ldr	r2, [r7, #1036]
 2495 091e 1946     		mov	r1, r3
 2496 0920 4948     		ldr	r0, .L71+68
 2497 0922 FFF7FEFF 		bl	pushData
 698:notoriOS.c    ****             //Amp6 - 2 data5
 699:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data5[2]);
 2498              		.loc 1 699 0
 2499 0926 07F5C873 		add	r3, r7, #400
 2500 092a D3F88030 		ldr	r3, [r3, #128]	@ float
 2501 092e 1846     		mov	r0, r3
 2502 0930 FFF7FEFF 		bl	__aeabi_f2d
 2503 0934 0346     		mov	r3, r0
 2504 0936 0C46     		mov	r4, r1
 2505 0938 07F57670 		add	r0, r7, #984
 2506 093c CDE90034 		strd	r3, [sp]
 2507 0940 364A     		ldr	r2, .L71+24
 2508 0942 1421     		movs	r1, #20
 2509 0944 FFF7FEFF 		bl	snprintf
 700:notoriOS.c    ****             pushData("sontek_amp6",value,timeStamp);
 2510              		.loc 1 700 0
 2511 0948 07F57673 		add	r3, r7, #984
 2512 094c D7F80C24 		ldr	r2, [r7, #1036]
 2513 0950 1946     		mov	r1, r3
 2514 0952 3E48     		ldr	r0, .L71+72
 2515 0954 FFF7FEFF 		bl	pushData
 701:notoriOS.c    ****             //snr4 - 3 data5
 702:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data5[3]);
 2516              		.loc 1 702 0
 2517 0958 07F5C873 		add	r3, r7, #400
 2518 095c D3F88430 		ldr	r3, [r3, #132]	@ float
 2519 0960 1846     		mov	r0, r3
 2520 0962 FFF7FEFF 		bl	__aeabi_f2d
 2521 0966 0346     		mov	r3, r0
 2522 0968 0C46     		mov	r4, r1
 2523 096a 07F57670 		add	r0, r7, #984
 2524 096e CDE90034 		strd	r3, [sp]
 2525 0972 2A4A     		ldr	r2, .L71+24
 2526 0974 1421     		movs	r1, #20
 2527 0976 FFF7FEFF 		bl	snprintf
 703:notoriOS.c    ****             pushData("sontek_snr4",value,timeStamp);
 2528              		.loc 1 703 0
 2529 097a 07F57673 		add	r3, r7, #984
 2530 097e D7F80C24 		ldr	r2, [r7, #1036]
 2531 0982 1946     		mov	r1, r3
 2532 0984 3248     		ldr	r0, .L71+76
 2533 0986 FFF7FEFF 		bl	pushData
 704:notoriOS.c    ****             //snr5 - 4 data5
 705:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data5[4]);
 2534              		.loc 1 705 0
 2535 098a 07F5C873 		add	r3, r7, #400
 2536 098e D3F88830 		ldr	r3, [r3, #136]	@ float
 2537 0992 1846     		mov	r0, r3
 2538 0994 FFF7FEFF 		bl	__aeabi_f2d
 2539 0998 0346     		mov	r3, r0
 2540 099a 0C46     		mov	r4, r1
 2541 099c 07F57670 		add	r0, r7, #984
 2542 09a0 CDE90034 		strd	r3, [sp]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 63


 2543 09a4 1D4A     		ldr	r2, .L71+24
 2544 09a6 1421     		movs	r1, #20
 2545 09a8 FFF7FEFF 		bl	snprintf
 706:notoriOS.c    ****             pushData("sontek_snr5",value,timeStamp);
 2546              		.loc 1 706 0
 2547 09ac 07F57673 		add	r3, r7, #984
 2548 09b0 D7F80C24 		ldr	r2, [r7, #1036]
 2549 09b4 1946     		mov	r1, r3
 2550 09b6 2748     		ldr	r0, .L71+80
 2551 09b8 FFF7FEFF 		bl	pushData
 707:notoriOS.c    ****             //snr6 - 5 data5
 708:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data5[5]);
 2552              		.loc 1 708 0
 2553 09bc 07F5C873 		add	r3, r7, #400
 2554 09c0 D3F88C30 		ldr	r3, [r3, #140]	@ float
 2555 09c4 1846     		mov	r0, r3
 2556 09c6 FFF7FEFF 		bl	__aeabi_f2d
 2557 09ca 0346     		mov	r3, r0
 2558 09cc 0C46     		mov	r4, r1
 2559 09ce 07F57670 		add	r0, r7, #984
 2560 09d2 CDE90034 		strd	r3, [sp]
 2561 09d6 114A     		ldr	r2, .L71+24
 2562 09d8 1421     		movs	r1, #20
 2563 09da FFF7FEFF 		bl	snprintf
 709:notoriOS.c    ****             pushData("sontek_snr6",value,timeStamp);
 2564              		.loc 1 709 0
 2565 09de 07F57673 		add	r3, r7, #984
 2566 09e2 D7F80C24 		ldr	r2, [r7, #1036]
 2567 09e6 1946     		mov	r1, r3
 2568 09e8 1B48     		ldr	r0, .L71+84
 2569 09ea FFF7FEFF 		bl	pushData
 710:notoriOS.c    ****             
 711:notoriOS.c    ****             //Amp7 - 0 data7
 712:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data7[0]);
 2570              		.loc 1 712 0
 2571 09ee 07F5C873 		add	r3, r7, #400
 2572 09f2 D3F8A830 		ldr	r3, [r3, #168]	@ float
 2573 09f6 1846     		mov	r0, r3
 2574 09f8 FFF7FEFF 		bl	__aeabi_f2d
 2575 09fc 0346     		mov	r3, r0
 2576 09fe 0C46     		mov	r4, r1
 2577 0a00 2CE0     		b	.L72
 2578              	.L73:
 2579 0a02 00BF     		.align	2
 2580              	.L71:
 2581 0a04 E0020000 		.word	.LC42
 2582 0a08 80040000 		.word	.LC43
 2583 0a0c 98020000 		.word	.LC38
 2584 0a10 00000000 		.word	Data_fileName
 2585 0a14 8C040000 		.word	.LC44
 2586 0a18 98040000 		.word	.LC45
 2587 0a1c 9C040000 		.word	.LC46
 2588 0a20 A4040000 		.word	.LC47
 2589 0a24 B4040000 		.word	.LC48
 2590 0a28 C0040000 		.word	.LC49
 2591 0a2c D0040000 		.word	.LC50
 2592 0a30 DC040000 		.word	.LC51
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 64


 2593 0a34 E8040000 		.word	.LC52
 2594 0a38 F4040000 		.word	.LC53
 2595 0a3c 00050000 		.word	.LC54
 2596 0a40 0C050000 		.word	.LC55
 2597 0a44 18050000 		.word	.LC56
 2598 0a48 24050000 		.word	.LC57
 2599 0a4c 30050000 		.word	.LC58
 2600 0a50 3C050000 		.word	.LC59
 2601 0a54 48050000 		.word	.LC60
 2602 0a58 54050000 		.word	.LC61
 2603              	.L72:
 2604 0a5c 07F57670 		add	r0, r7, #984
 2605 0a60 CDE90034 		strd	r3, [sp]
 2606 0a64 5D4A     		ldr	r2, .L74
 2607 0a66 1421     		movs	r1, #20
 2608 0a68 FFF7FEFF 		bl	snprintf
 713:notoriOS.c    ****             pushData("sontek_amp7",value,timeStamp);
 2609              		.loc 1 713 0
 2610 0a6c 07F57673 		add	r3, r7, #984
 2611 0a70 D7F80C24 		ldr	r2, [r7, #1036]
 2612 0a74 1946     		mov	r1, r3
 2613 0a76 5A48     		ldr	r0, .L74+4
 2614 0a78 FFF7FEFF 		bl	pushData
 714:notoriOS.c    ****             //Amp8 - 1 data7
 715:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data7[1]);
 2615              		.loc 1 715 0
 2616 0a7c 07F5C873 		add	r3, r7, #400
 2617 0a80 D3F8AC30 		ldr	r3, [r3, #172]	@ float
 2618 0a84 1846     		mov	r0, r3
 2619 0a86 FFF7FEFF 		bl	__aeabi_f2d
 2620 0a8a 0346     		mov	r3, r0
 2621 0a8c 0C46     		mov	r4, r1
 2622 0a8e 07F57670 		add	r0, r7, #984
 2623 0a92 CDE90034 		strd	r3, [sp]
 2624 0a96 514A     		ldr	r2, .L74
 2625 0a98 1421     		movs	r1, #20
 2626 0a9a FFF7FEFF 		bl	snprintf
 716:notoriOS.c    ****             pushData("sontek_amp8",value,timeStamp);
 2627              		.loc 1 716 0
 2628 0a9e 07F57673 		add	r3, r7, #984
 2629 0aa2 D7F80C24 		ldr	r2, [r7, #1036]
 2630 0aa6 1946     		mov	r1, r3
 2631 0aa8 4E48     		ldr	r0, .L74+8
 2632 0aaa FFF7FEFF 		bl	pushData
 717:notoriOS.c    ****             //Amp9 - 2 data7
 718:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data7[2]);
 2633              		.loc 1 718 0
 2634 0aae 07F5C873 		add	r3, r7, #400
 2635 0ab2 D3F8B030 		ldr	r3, [r3, #176]	@ float
 2636 0ab6 1846     		mov	r0, r3
 2637 0ab8 FFF7FEFF 		bl	__aeabi_f2d
 2638 0abc 0346     		mov	r3, r0
 2639 0abe 0C46     		mov	r4, r1
 2640 0ac0 07F57670 		add	r0, r7, #984
 2641 0ac4 CDE90034 		strd	r3, [sp]
 2642 0ac8 444A     		ldr	r2, .L74
 2643 0aca 1421     		movs	r1, #20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 65


 2644 0acc FFF7FEFF 		bl	snprintf
 719:notoriOS.c    ****             pushData("sontek_amp9",value,timeStamp);
 2645              		.loc 1 719 0
 2646 0ad0 07F57673 		add	r3, r7, #984
 2647 0ad4 D7F80C24 		ldr	r2, [r7, #1036]
 2648 0ad8 1946     		mov	r1, r3
 2649 0ada 4348     		ldr	r0, .L74+12
 2650 0adc FFF7FEFF 		bl	pushData
 720:notoriOS.c    ****             //snr7 - 3 data7
 721:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data7[3]);
 2651              		.loc 1 721 0
 2652 0ae0 07F5C873 		add	r3, r7, #400
 2653 0ae4 D3F8B430 		ldr	r3, [r3, #180]	@ float
 2654 0ae8 1846     		mov	r0, r3
 2655 0aea FFF7FEFF 		bl	__aeabi_f2d
 2656 0aee 0346     		mov	r3, r0
 2657 0af0 0C46     		mov	r4, r1
 2658 0af2 07F57670 		add	r0, r7, #984
 2659 0af6 CDE90034 		strd	r3, [sp]
 2660 0afa 384A     		ldr	r2, .L74
 2661 0afc 1421     		movs	r1, #20
 2662 0afe FFF7FEFF 		bl	snprintf
 722:notoriOS.c    ****             pushData("sontek_snr7",value,timeStamp);
 2663              		.loc 1 722 0
 2664 0b02 07F57673 		add	r3, r7, #984
 2665 0b06 D7F80C24 		ldr	r2, [r7, #1036]
 2666 0b0a 1946     		mov	r1, r3
 2667 0b0c 3748     		ldr	r0, .L74+16
 2668 0b0e FFF7FEFF 		bl	pushData
 723:notoriOS.c    ****             //snr8 - 4 data7
 724:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data7[4]);
 2669              		.loc 1 724 0
 2670 0b12 07F5C873 		add	r3, r7, #400
 2671 0b16 D3F8B830 		ldr	r3, [r3, #184]	@ float
 2672 0b1a 1846     		mov	r0, r3
 2673 0b1c FFF7FEFF 		bl	__aeabi_f2d
 2674 0b20 0346     		mov	r3, r0
 2675 0b22 0C46     		mov	r4, r1
 2676 0b24 07F57670 		add	r0, r7, #984
 2677 0b28 CDE90034 		strd	r3, [sp]
 2678 0b2c 2B4A     		ldr	r2, .L74
 2679 0b2e 1421     		movs	r1, #20
 2680 0b30 FFF7FEFF 		bl	snprintf
 725:notoriOS.c    ****             pushData("sontek_snr8",value,timeStamp);
 2681              		.loc 1 725 0
 2682 0b34 07F57673 		add	r3, r7, #984
 2683 0b38 D7F80C24 		ldr	r2, [r7, #1036]
 2684 0b3c 1946     		mov	r1, r3
 2685 0b3e 2C48     		ldr	r0, .L74+20
 2686 0b40 FFF7FEFF 		bl	pushData
 726:notoriOS.c    ****             //snr9 - 5 data7
 727:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data7[5]);
 2687              		.loc 1 727 0
 2688 0b44 07F5C873 		add	r3, r7, #400
 2689 0b48 D3F8BC30 		ldr	r3, [r3, #188]	@ float
 2690 0b4c 1846     		mov	r0, r3
 2691 0b4e FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 66


 2692 0b52 0346     		mov	r3, r0
 2693 0b54 0C46     		mov	r4, r1
 2694 0b56 07F57670 		add	r0, r7, #984
 2695 0b5a CDE90034 		strd	r3, [sp]
 2696 0b5e 1F4A     		ldr	r2, .L74
 2697 0b60 1421     		movs	r1, #20
 2698 0b62 FFF7FEFF 		bl	snprintf
 728:notoriOS.c    ****             pushData("sontek_snr9",value,timeStamp);           
 2699              		.loc 1 728 0
 2700 0b66 07F57673 		add	r3, r7, #984
 2701 0b6a D7F80C24 		ldr	r2, [r7, #1036]
 2702 0b6e 1946     		mov	r1, r3
 2703 0b70 2048     		ldr	r0, .L74+24
 2704 0b72 FFF7FEFF 		bl	pushData
 729:notoriOS.c    ****             
 730:notoriOS.c    ****             //Amp10 - 2 data8
 731:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data8[2]);
 2705              		.loc 1 731 0
 2706 0b76 07F5C873 		add	r3, r7, #400
 2707 0b7a D3F8C830 		ldr	r3, [r3, #200]	@ float
 2708 0b7e 1846     		mov	r0, r3
 2709 0b80 FFF7FEFF 		bl	__aeabi_f2d
 2710 0b84 0346     		mov	r3, r0
 2711 0b86 0C46     		mov	r4, r1
 2712 0b88 07F57670 		add	r0, r7, #984
 2713 0b8c CDE90034 		strd	r3, [sp]
 2714 0b90 124A     		ldr	r2, .L74
 2715 0b92 1421     		movs	r1, #20
 2716 0b94 FFF7FEFF 		bl	snprintf
 732:notoriOS.c    ****             pushData("sontek_amp10",value,timeStamp);
 2717              		.loc 1 732 0
 2718 0b98 07F57673 		add	r3, r7, #984
 2719 0b9c D7F80C24 		ldr	r2, [r7, #1036]
 2720 0ba0 1946     		mov	r1, r3
 2721 0ba2 1548     		ldr	r0, .L74+28
 2722 0ba4 FFF7FEFF 		bl	pushData
 733:notoriOS.c    ****             //snr10 - 3 data8
 734:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data8[3]);
 2723              		.loc 1 734 0
 2724 0ba8 07F5C873 		add	r3, r7, #400
 2725 0bac D3F8CC30 		ldr	r3, [r3, #204]	@ float
 2726 0bb0 1846     		mov	r0, r3
 2727 0bb2 FFF7FEFF 		bl	__aeabi_f2d
 2728 0bb6 0346     		mov	r3, r0
 2729 0bb8 0C46     		mov	r4, r1
 2730 0bba 07F57670 		add	r0, r7, #984
 2731 0bbe CDE90034 		strd	r3, [sp]
 2732 0bc2 064A     		ldr	r2, .L74
 2733 0bc4 1421     		movs	r1, #20
 2734 0bc6 FFF7FEFF 		bl	snprintf
 735:notoriOS.c    ****             pushData("sontek_snr10",value,timeStamp);
 2735              		.loc 1 735 0
 2736 0bca 07F57673 		add	r3, r7, #984
 2737 0bce D7F80C24 		ldr	r2, [r7, #1036]
 2738 0bd2 1946     		mov	r1, r3
 2739 0bd4 0948     		ldr	r0, .L74+32
 2740 0bd6 FFF7FEFF 		bl	pushData
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 67


 2741 0bda 41E0     		b	.L59
 2742              	.L75:
 2743              		.align	2
 2744              	.L74:
 2745 0bdc 9C040000 		.word	.LC46
 2746 0be0 60050000 		.word	.LC62
 2747 0be4 6C050000 		.word	.LC63
 2748 0be8 78050000 		.word	.LC64
 2749 0bec 84050000 		.word	.LC65
 2750 0bf0 90050000 		.word	.LC66
 2751 0bf4 9C050000 		.word	.LC67
 2752 0bf8 A8050000 		.word	.LC68
 2753 0bfc B8050000 		.word	.LC69
 2754              	.L60:
 736:notoriOS.c    ****             
 737:notoriOS.c    **** //            //SNR2 -24
 738:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.values[24]);
 739:notoriOS.c    **** //            pushData("sontek_SNR2",value,timeStamp);
 740:notoriOS.c    **** //            //SNR3 - 25
 741:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.values[25]);
 742:notoriOS.c    **** //            pushData("sontek_SNR3",value,timeStamp);
 743:notoriOS.c    **** //            //SNR4 - 26
 744:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.values[26]);
 745:notoriOS.c    **** //            pushData("sontek_SNR4",value,timeStamp);
 746:notoriOS.c    **** 
 747:notoriOS.c    ****         }else{
 748:notoriOS.c    ****             //publish error code if no valid readings given
 749:notoriOS.c    ****             snprintf(value,sizeof(value),"%c",m_sontek.flag);
 2755              		.loc 1 749 0
 2756 0c00 07F5C873 		add	r3, r7, #400
 2757 0c04 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2758 0c06 07F57670 		add	r0, r7, #984
 2759 0c0a 804A     		ldr	r2, .L76
 2760 0c0c 1421     		movs	r1, #20
 2761 0c0e FFF7FEFF 		bl	snprintf
 750:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Sontek. Error: %c.", val
 2762              		.loc 1 750 0
 2763 0c12 07F57673 		add	r3, r7, #984
 2764 0c16 1A46     		mov	r2, r3
 2765 0c18 7D49     		ldr	r1, .L76+4
 2766 0c1a 0220     		movs	r0, #2
 2767 0c1c FFF7FEFF 		bl	printNotif
 751:notoriOS.c    ****             pushData("sontek_flag",value,timeStamp);
 2768              		.loc 1 751 0
 2769 0c20 07F57673 		add	r3, r7, #984
 2770 0c24 D7F80C24 		ldr	r2, [r7, #1036]
 2771 0c28 1946     		mov	r1, r3
 2772 0c2a 7A48     		ldr	r0, .L76+8
 2773 0c2c FFF7FEFF 		bl	pushData
 752:notoriOS.c    ****                 
 753:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 2774              		.loc 1 753 0
 2775 0c30 07F57B73 		add	r3, r7, #1004
 2776 0c34 1A46     		mov	r2, r3
 2777 0c36 7849     		ldr	r1, .L76+12
 2778 0c38 7848     		ldr	r0, .L76+16
 2779 0c3a FFF7FEFF 		bl	SD_write
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 68


 754:notoriOS.c    ****             SD_write(Data_fileName, "a+", " sontek error: ");
 2780              		.loc 1 754 0
 2781 0c3e 784A     		ldr	r2, .L76+20
 2782 0c40 7549     		ldr	r1, .L76+12
 2783 0c42 7648     		ldr	r0, .L76+16
 2784 0c44 FFF7FEFF 		bl	SD_write
 755:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 2785              		.loc 1 755 0
 2786 0c48 07F57673 		add	r3, r7, #984
 2787 0c4c 1A46     		mov	r2, r3
 2788 0c4e 7249     		ldr	r1, .L76+12
 2789 0c50 7248     		ldr	r0, .L76+16
 2790 0c52 FFF7FEFF 		bl	SD_write
 756:notoriOS.c    ****             SD_write(Data_fileName, "a+", "\n");
 2791              		.loc 1 756 0
 2792 0c56 734A     		ldr	r2, .L76+24
 2793 0c58 6F49     		ldr	r1, .L76+12
 2794 0c5a 7048     		ldr	r0, .L76+16
 2795 0c5c FFF7FEFF 		bl	SD_write
 2796              	.L59:
 2797              	.LBE10:
 757:notoriOS.c    ****         }
 758:notoriOS.c    ****     }
 759:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 760:notoriOS.c    ****     voltage_t m_voltage;
 761:notoriOS.c    ****     
 762:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 763:notoriOS.c    ****     m_voltage = voltage_take_readings();
 2798              		.loc 1 763 0
 2799 0c60 07F52673 		add	r3, r7, #664
 2800 0c64 1846     		mov	r0, r3
 2801 0c66 FFF7FEFF 		bl	voltage_take_readings
 764:notoriOS.c    ****     
 765:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 766:notoriOS.c    ****     if(m_voltage.valid){
 2802              		.loc 1 766 0
 2803 0c6a 07F52673 		add	r3, r7, #664
 2804 0c6e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2805 0c70 002B     		cmp	r3, #0
 2806 0c72 00F0BF80 		beq	.L62
 767:notoriOS.c    ****         // battery voltage data
 768:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 2807              		.loc 1 768 0
 2808 0c76 07F52673 		add	r3, r7, #664
 2809 0c7a 1B68     		ldr	r3, [r3]	@ float
 2810 0c7c 1846     		mov	r0, r3
 2811 0c7e FFF7FEFF 		bl	__aeabi_f2d
 2812 0c82 0346     		mov	r3, r0
 2813 0c84 0C46     		mov	r4, r1
 2814 0c86 07F57670 		add	r0, r7, #984
 2815 0c8a CDE90034 		strd	r3, [sp]
 2816 0c8e 664A     		ldr	r2, .L76+28
 2817 0c90 1421     		movs	r1, #20
 2818 0c92 FFF7FEFF 		bl	snprintf
 769:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 2819              		.loc 1 769 0
 2820 0c96 07F57673 		add	r3, r7, #984
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 69


 2821 0c9a 1A46     		mov	r2, r3
 2822 0c9c 6349     		ldr	r1, .L76+32
 2823 0c9e 0020     		movs	r0, #0
 2824 0ca0 FFF7FEFF 		bl	printNotif
 770:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
 2825              		.loc 1 770 0
 2826 0ca4 07F57673 		add	r3, r7, #984
 2827 0ca8 D7F80C24 		ldr	r2, [r7, #1036]
 2828 0cac 1946     		mov	r1, r3
 2829 0cae 6048     		ldr	r0, .L76+36
 2830 0cb0 FFF7FEFF 		bl	pushData
 771:notoriOS.c    ****         
 772:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 773:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 2831              		.loc 1 773 0
 2832 0cb4 5F4A     		ldr	r2, .L76+40
 2833 0cb6 5849     		ldr	r1, .L76+12
 2834 0cb8 5848     		ldr	r0, .L76+16
 2835 0cba FFF7FEFF 		bl	SD_write
 774:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 2836              		.loc 1 774 0
 2837 0cbe 07F57B73 		add	r3, r7, #1004
 2838 0cc2 1A46     		mov	r2, r3
 2839 0cc4 5449     		ldr	r1, .L76+12
 2840 0cc6 5548     		ldr	r0, .L76+16
 2841 0cc8 FFF7FEFF 		bl	SD_write
 775:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 2842              		.loc 1 775 0
 2843 0ccc 5A4A     		ldr	r2, .L76+44
 2844 0cce 5249     		ldr	r1, .L76+12
 2845 0cd0 5248     		ldr	r0, .L76+16
 2846 0cd2 FFF7FEFF 		bl	SD_write
 776:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 2847              		.loc 1 776 0
 2848 0cd6 07F57673 		add	r3, r7, #984
 2849 0cda 1A46     		mov	r2, r3
 2850 0cdc 4E49     		ldr	r1, .L76+12
 2851 0cde 4F48     		ldr	r0, .L76+16
 2852 0ce0 FFF7FEFF 		bl	SD_write
 777:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 2853              		.loc 1 777 0
 2854 0ce4 534A     		ldr	r2, .L76+40
 2855 0ce6 4C49     		ldr	r1, .L76+12
 2856 0ce8 4C48     		ldr	r0, .L76+16
 2857 0cea FFF7FEFF 		bl	SD_write
 778:notoriOS.c    ****         
 779:notoriOS.c    ****         // If node type is green infrastructure node, take pressure transducer measurements
 780:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE){
 2858              		.loc 1 780 0
 2859 0cee 534B     		ldr	r3, .L76+48
 2860 0cf0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2861 0cf2 012B     		cmp	r3, #1
 2862 0cf4 40F08280 		bne	.L64
 2863              	.LBB11:
 781:notoriOS.c    ****             
 782:notoriOS.c    ****             // pressure transducer voltage (V) data
 783:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 70


 784:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 785:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 786:notoriOS.c    ****             
 787:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 788:notoriOS.c    ****             pressure_t m_pressure;
 789:notoriOS.c    ****             
 790:notoriOS.c    ****             // Make pressure transducer calculators for current (mA) and depth
 791:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 2864              		.loc 1 791 0
 2865 0cf8 07F51D74 		add	r4, r7, #628
 2866 0cfc 07F52673 		add	r3, r7, #664
 2867 0d00 6D46     		mov	r5, sp
 2868 0d02 03F10C02 		add	r2, r3, #12
 2869 0d06 92E80300 		ldmia	r2, {r0, r1}
 2870 0d0a 85E80300 		stmia	r5, {r0, r1}
 2871 0d0e 0ECB     		ldmia	r3, {r1, r2, r3}
 2872 0d10 2046     		mov	r0, r4
 2873 0d12 FFF7FEFF 		bl	pressure_calculations
 792:notoriOS.c    ****             
 793:notoriOS.c    ****             // pressure transducer current (mA) data
 794:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 2874              		.loc 1 794 0
 2875 0d16 07F51D73 		add	r3, r7, #628
 2876 0d1a 1B68     		ldr	r3, [r3]	@ float
 2877 0d1c 1846     		mov	r0, r3
 2878 0d1e FFF7FEFF 		bl	__aeabi_f2d
 2879 0d22 0346     		mov	r3, r0
 2880 0d24 0C46     		mov	r4, r1
 2881 0d26 07F57670 		add	r0, r7, #984
 2882 0d2a CDE90034 		strd	r3, [sp]
 2883 0d2e 3E4A     		ldr	r2, .L76+28
 2884 0d30 1421     		movs	r1, #20
 2885 0d32 FFF7FEFF 		bl	snprintf
 795:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 2886              		.loc 1 795 0
 2887 0d36 07F57673 		add	r3, r7, #984
 2888 0d3a 1A46     		mov	r2, r3
 2889 0d3c 4049     		ldr	r1, .L76+52
 2890 0d3e 0020     		movs	r0, #0
 2891 0d40 FFF7FEFF 		bl	printNotif
 796:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 2892              		.loc 1 796 0
 2893 0d44 07F57673 		add	r3, r7, #984
 2894 0d48 D7F80C24 		ldr	r2, [r7, #1036]
 2895 0d4c 1946     		mov	r1, r3
 2896 0d4e 3D48     		ldr	r0, .L76+56
 2897 0d50 FFF7FEFF 		bl	pushData
 797:notoriOS.c    ****             
 798:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 799:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 2898              		.loc 1 799 0
 2899 0d54 374A     		ldr	r2, .L76+40
 2900 0d56 3049     		ldr	r1, .L76+12
 2901 0d58 3048     		ldr	r0, .L76+16
 2902 0d5a FFF7FEFF 		bl	SD_write
 800:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 2903              		.loc 1 800 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 71


 2904 0d5e 07F57B73 		add	r3, r7, #1004
 2905 0d62 1A46     		mov	r2, r3
 2906 0d64 2C49     		ldr	r1, .L76+12
 2907 0d66 2D48     		ldr	r0, .L76+16
 2908 0d68 FFF7FEFF 		bl	SD_write
 801:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 2909              		.loc 1 801 0
 2910 0d6c 364A     		ldr	r2, .L76+60
 2911 0d6e 2A49     		ldr	r1, .L76+12
 2912 0d70 2A48     		ldr	r0, .L76+16
 2913 0d72 FFF7FEFF 		bl	SD_write
 802:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 2914              		.loc 1 802 0
 2915 0d76 07F57673 		add	r3, r7, #984
 2916 0d7a 1A46     		mov	r2, r3
 2917 0d7c 2649     		ldr	r1, .L76+12
 2918 0d7e 2748     		ldr	r0, .L76+16
 2919 0d80 FFF7FEFF 		bl	SD_write
 803:notoriOS.c    ****             
 804:notoriOS.c    ****             // pressure transducer depth (ft) data
 805:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 2920              		.loc 1 805 0
 2921 0d84 07F51D73 		add	r3, r7, #628
 2922 0d88 5B68     		ldr	r3, [r3, #4]	@ float
 2923 0d8a 1846     		mov	r0, r3
 2924 0d8c FFF7FEFF 		bl	__aeabi_f2d
 2925 0d90 0346     		mov	r3, r0
 2926 0d92 0C46     		mov	r4, r1
 2927 0d94 07F57670 		add	r0, r7, #984
 2928 0d98 CDE90034 		strd	r3, [sp]
 2929 0d9c 224A     		ldr	r2, .L76+28
 2930 0d9e 1421     		movs	r1, #20
 2931 0da0 FFF7FEFF 		bl	snprintf
 806:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 2932              		.loc 1 806 0
 2933 0da4 07F57673 		add	r3, r7, #984
 2934 0da8 1A46     		mov	r2, r3
 2935 0daa 2849     		ldr	r1, .L76+64
 2936 0dac 0020     		movs	r0, #0
 2937 0dae FFF7FEFF 		bl	printNotif
 807:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 2938              		.loc 1 807 0
 2939 0db2 07F57673 		add	r3, r7, #984
 2940 0db6 D7F80C24 		ldr	r2, [r7, #1036]
 2941 0dba 1946     		mov	r1, r3
 2942 0dbc 2448     		ldr	r0, .L76+68
 2943 0dbe FFF7FEFF 		bl	pushData
 808:notoriOS.c    ****             
 809:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 810:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 2944              		.loc 1 810 0
 2945 0dc2 1C4A     		ldr	r2, .L76+40
 2946 0dc4 1449     		ldr	r1, .L76+12
 2947 0dc6 1548     		ldr	r0, .L76+16
 2948 0dc8 FFF7FEFF 		bl	SD_write
 811:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 2949              		.loc 1 811 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 72


 2950 0dcc 07F57B73 		add	r3, r7, #1004
 2951 0dd0 1A46     		mov	r2, r3
 2952 0dd2 1149     		ldr	r1, .L76+12
 2953 0dd4 1148     		ldr	r0, .L76+16
 2954 0dd6 FFF7FEFF 		bl	SD_write
 812:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
 2955              		.loc 1 812 0
 2956 0dda 1E4A     		ldr	r2, .L76+72
 2957 0ddc 0E49     		ldr	r1, .L76+12
 2958 0dde 0F48     		ldr	r0, .L76+16
 2959 0de0 FFF7FEFF 		bl	SD_write
 813:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 2960              		.loc 1 813 0
 2961 0de4 07F57673 		add	r3, r7, #984
 2962 0de8 1A46     		mov	r2, r3
 2963 0dea 0B49     		ldr	r1, .L76+12
 2964 0dec 0B48     		ldr	r0, .L76+16
 2965 0dee FFF7FEFF 		bl	SD_write
 2966 0df2 03E0     		b	.L64
 2967              	.L62:
 2968              	.LBE11:
 814:notoriOS.c    ****         }    
 815:notoriOS.c    ****     }else{
 816:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 2969              		.loc 1 816 0
 2970 0df4 1849     		ldr	r1, .L76+76
 2971 0df6 0220     		movs	r0, #2
 2972 0df8 FFF7FEFF 		bl	printNotif
 2973              	.L64:
 817:notoriOS.c    ****     }
 818:notoriOS.c    ****     
 819:notoriOS.c    ****     return 0u;
 2974              		.loc 1 819 0
 2975 0dfc 0023     		movs	r3, #0
 820:notoriOS.c    **** }
 2976              		.loc 1 820 0
 2977 0dfe 1846     		mov	r0, r3
 2978 0e00 07F58267 		add	r7, r7, #1040
 2979              		.cfi_def_cfa_offset 32
 2980 0e04 BD46     		mov	sp, r7
 2981              		.cfi_def_cfa_register 13
 2982              		@ sp needed
 2983 0e06 BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 2984              	.L77:
 2985 0e0a 00BF     		.align	2
 2986              	.L76:
 2987 0e0c C8050000 		.word	.LC70
 2988 0e10 CC050000 		.word	.LC71
 2989 0e14 04060000 		.word	.LC72
 2990 0e18 98020000 		.word	.LC38
 2991 0e1c 00000000 		.word	Data_fileName
 2992 0e20 10060000 		.word	.LC73
 2993 0e24 98040000 		.word	.LC45
 2994 0e28 9C040000 		.word	.LC46
 2995 0e2c 20060000 		.word	.LC74
 2996 0e30 2C060000 		.word	.LC75
 2997 0e34 B0020000 		.word	.LC40
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 73


 2998 0e38 34060000 		.word	.LC76
 2999 0e3c 00000000 		.word	updatable_parameters
 3000 0e40 3C060000 		.word	.LC77
 3001 0e44 50060000 		.word	.LC78
 3002 0e48 64060000 		.word	.LC79
 3003 0e4c 78060000 		.word	.LC80
 3004 0e50 8C060000 		.word	.LC81
 3005 0e54 9C060000 		.word	.LC82
 3006 0e58 B0060000 		.word	.LC83
 3007              		.cfi_endproc
 3008              	.LFE76:
 3009              		.size	makeMeasurements, .-makeMeasurements
 3010              		.section	.rodata
 3011 06d7 00       		.align	2
 3012              	.LC84:
 3013 06d8 4572726F 		.ascii	"Error setting system time.\000"
 3013      72207365 
 3013      7474696E 
 3013      67207379 
 3013      7374656D 
 3014              		.section	.text.setTime,"ax",%progbits
 3015              		.align	2
 3016              		.global	setTime
 3017              		.thumb
 3018              		.thumb_func
 3019              		.type	setTime, %function
 3020              	setTime:
 3021              	.LFB77:
 821:notoriOS.c    **** 
 822:notoriOS.c    **** // ==============================================
 823:notoriOS.c    **** // Set the system time
 824:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 825:notoriOS.c    **** // ==============================================
 826:notoriOS.c    **** uint8 setTime(long timeStamp){
 3022              		.loc 1 826 0
 3023              		.cfi_startproc
 3024              		@ args = 0, pretend = 0, frame = 24
 3025              		@ frame_needed = 1, uses_anonymous_args = 0
 3026 0000 80B5     		push	{r7, lr}
 3027              		.cfi_def_cfa_offset 8
 3028              		.cfi_offset 7, -8
 3029              		.cfi_offset 14, -4
 3030 0002 86B0     		sub	sp, sp, #24
 3031              		.cfi_def_cfa_offset 32
 3032 0004 00AF     		add	r7, sp, #0
 3033              		.cfi_def_cfa_register 7
 3034 0006 7860     		str	r0, [r7, #4]
 827:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 828:notoriOS.c    ****     if(timeStamp <=0){
 3035              		.loc 1 828 0
 3036 0008 7B68     		ldr	r3, [r7, #4]
 3037 000a 002B     		cmp	r3, #0
 3038 000c 05DC     		bgt	.L79
 829:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 3039              		.loc 1 829 0
 3040 000e 1849     		ldr	r1, .L81
 3041 0010 0220     		movs	r0, #2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 74


 3042 0012 FFF7FEFF 		bl	printNotif
 830:notoriOS.c    ****         return 0;  
 3043              		.loc 1 830 0
 3044 0016 0023     		movs	r3, #0
 3045 0018 25E0     		b	.L80
 3046              	.L79:
 831:notoriOS.c    ****     }
 832:notoriOS.c    ****     // Create a new pointer t of data structure tm
 833:notoriOS.c    ****     struct tm * t;
 834:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 835:notoriOS.c    ****     t = gmtime(&timeStamp);
 3047              		.loc 1 835 0
 3048 001a 3B1D     		adds	r3, r7, #4
 3049 001c 1846     		mov	r0, r3
 3050 001e FFF7FEFF 		bl	gmtime
 3051 0022 7861     		str	r0, [r7, #20]
 836:notoriOS.c    ****     
 837:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 838:notoriOS.c    ****     RTC_TIME_DATE localTime;
 839:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 3052              		.loc 1 839 0
 3053 0024 7B69     		ldr	r3, [r7, #20]
 3054 0026 1B68     		ldr	r3, [r3]
 3055 0028 DBB2     		uxtb	r3, r3
 3056 002a 3B72     		strb	r3, [r7, #8]
 840:notoriOS.c    ****     localTime.Min = t->tm_min;
 3057              		.loc 1 840 0
 3058 002c 7B69     		ldr	r3, [r7, #20]
 3059 002e 5B68     		ldr	r3, [r3, #4]
 3060 0030 DBB2     		uxtb	r3, r3
 3061 0032 7B72     		strb	r3, [r7, #9]
 841:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 3062              		.loc 1 841 0
 3063 0034 7B69     		ldr	r3, [r7, #20]
 3064 0036 9B68     		ldr	r3, [r3, #8]
 3065 0038 DBB2     		uxtb	r3, r3
 3066 003a BB72     		strb	r3, [r7, #10]
 842:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 3067              		.loc 1 842 0
 3068 003c 7B69     		ldr	r3, [r7, #20]
 3069 003e 5B69     		ldr	r3, [r3, #20]
 3070 0040 9BB2     		uxth	r3, r3
 3071 0042 03F26C73 		addw	r3, r3, #1900
 3072 0046 9BB2     		uxth	r3, r3
 3073 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 843:notoriOS.c    ****     localTime.Month = t->tm_mon;
 3074              		.loc 1 843 0
 3075 004a 7B69     		ldr	r3, [r7, #20]
 3076 004c 1B69     		ldr	r3, [r3, #16]
 3077 004e DBB2     		uxtb	r3, r3
 3078 0050 3B74     		strb	r3, [r7, #16]
 844:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 3079              		.loc 1 844 0
 3080 0052 7B69     		ldr	r3, [r7, #20]
 3081 0054 DB68     		ldr	r3, [r3, #12]
 3082 0056 DBB2     		uxtb	r3, r3
 3083 0058 3B73     		strb	r3, [r7, #12]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 75


 845:notoriOS.c    **** 
 846:notoriOS.c    ****     // Writes time and date values as current time and date.
 847:notoriOS.c    ****     RTC_WriteTime(&localTime);
 3084              		.loc 1 847 0
 3085 005a 07F10803 		add	r3, r7, #8
 3086 005e 1846     		mov	r0, r3
 3087 0060 FFF7FEFF 		bl	RTC_WriteTime
 848:notoriOS.c    ****     
 849:notoriOS.c    ****     // Return 1 when the system time was set properly.
 850:notoriOS.c    ****     return 1;
 3088              		.loc 1 850 0
 3089 0064 0123     		movs	r3, #1
 3090              	.L80:
 851:notoriOS.c    **** }
 3091              		.loc 1 851 0
 3092 0066 1846     		mov	r0, r3
 3093 0068 1837     		adds	r7, r7, #24
 3094              		.cfi_def_cfa_offset 8
 3095 006a BD46     		mov	sp, r7
 3096              		.cfi_def_cfa_register 13
 3097              		@ sp needed
 3098 006c 80BD     		pop	{r7, pc}
 3099              	.L82:
 3100 006e 00BF     		.align	2
 3101              	.L81:
 3102 0070 D8060000 		.word	.LC84
 3103              		.cfi_endproc
 3104              	.LFE77:
 3105              		.size	setTime, .-setTime
 3106              		.section	.rodata
 3107 06f3 00       		.align	2
 3108              	.LC85:
 3109 06f4 75706772 		.ascii	"upgrade.hex\000"
 3109      6164652E 
 3109      68657800 
 3110              		.section	.text.upgraded,"ax",%progbits
 3111              		.align	2
 3112              		.global	upgraded
 3113              		.thumb
 3114              		.thumb_func
 3115              		.type	upgraded, %function
 3116              	upgraded:
 3117              	.LFB78:
 852:notoriOS.c    **** 
 853:notoriOS.c    **** //downloads and stores files on SD card
 854:notoriOS.c    **** 
 855:notoriOS.c    **** 
 856:notoriOS.c    **** 
 857:notoriOS.c    **** // ==============================================
 858:notoriOS.c    **** // Will they love it, will they hate it
 859:notoriOS.c    **** // Never fade it, I evade it
 860:notoriOS.c    **** // Cause I never really want to complicate it
 861:notoriOS.c    **** //      - Logic, Upgraded (2015)
 862:notoriOS.c    **** //
 863:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 864:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 865:notoriOS.c    **** // ==============================================
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 76


 866:notoriOS.c    **** 
 867:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 3118              		.loc 1 867 0
 3119              		.cfi_startproc
 3120              		@ args = 0, pretend = 0, frame = 232
 3121              		@ frame_needed = 1, uses_anonymous_args = 0
 3122 0000 80B5     		push	{r7, lr}
 3123              		.cfi_def_cfa_offset 8
 3124              		.cfi_offset 7, -8
 3125              		.cfi_offset 14, -4
 3126 0002 C0B0     		sub	sp, sp, #256
 3127              		.cfi_def_cfa_offset 264
 3128 0004 06AF     		add	r7, sp, #24
 3129              		.cfi_def_cfa 7, 240
 3130 0006 F860     		str	r0, [r7, #12]
 3131 0008 B960     		str	r1, [r7, #8]
 3132 000a 7A60     		str	r2, [r7, #4]
 868:notoriOS.c    ****     
 869:notoriOS.c    ****     uint8 upgrade_status = 0;
 3133              		.loc 1 869 0
 3134 000c 0023     		movs	r3, #0
 3135 000e 87F8E730 		strb	r3, [r7, #231]
 870:notoriOS.c    ****     
 871:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 872:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 3136              		.loc 1 872 0
 3137 0012 384B     		ldr	r3, .L87
 3138 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3139 0016 042B     		cmp	r3, #4
 3140 0018 02D0     		beq	.L84
 873:notoriOS.c    ****         return upgrade_status;//where valid = 0
 3141              		.loc 1 873 0
 3142 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 3143 001e 65E0     		b	.L86
 3144              	.L84:
 874:notoriOS.c    ****     }
 875:notoriOS.c    ****     
 876:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 3145              		.loc 1 876 0
 3146 0020 354A     		ldr	r2, .L87+4
 3147 0022 07F1D803 		add	r3, r7, #216
 3148 0026 07CA     		ldmia	r2, {r0, r1, r2}
 3149 0028 83E80700 		stmia	r3, {r0, r1, r2}
 877:notoriOS.c    ****     //delete file, if one exisits already
 878:notoriOS.c    ****     SD_rmfile(fileName);
 3150              		.loc 1 878 0
 3151 002c 07F1D803 		add	r3, r7, #216
 3152 0030 1846     		mov	r0, r3
 3153 0032 FFF7FEFF 		bl	SD_rmfile
 879:notoriOS.c    ****     
 880:notoriOS.c    ****     // Create http request
 881:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 3154              		.loc 1 881 0
 3155 0036 314B     		ldr	r3, .L87+8
 3156 0038 0593     		str	r3, [sp, #20]
 3157 003a 0023     		movs	r3, #0
 3158 003c 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 77


 3159 003e 304B     		ldr	r3, .L87+12
 3160 0040 0393     		str	r3, [sp, #12]
 3161 0042 304B     		ldr	r3, .L87+16
 3162 0044 0293     		str	r3, [sp, #8]
 3163 0046 304B     		ldr	r3, .L87+20
 3164 0048 0193     		str	r3, [sp, #4]
 3165 004a BB68     		ldr	r3, [r7, #8]
 3166 004c 0093     		str	r3, [sp]
 3167 004e 7B68     		ldr	r3, [r7, #4]
 3168 0050 FA68     		ldr	r2, [r7, #12]
 3169 0052 2E49     		ldr	r1, .L87+24
 3170 0054 2E48     		ldr	r0, .L87+28
 3171 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 882:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 3172              		.loc 1 882 0
 3173 005a 2D4A     		ldr	r2, .L87+28
 3174 005c 2D49     		ldr	r1, .L87+32
 3175 005e 0020     		movs	r0, #0
 3176 0060 FFF7FEFF 		bl	printNotif
 883:notoriOS.c    ****     // Create array portConfig of size 200 characters
 884:notoriOS.c    ****     char portConfig[200];
 885:notoriOS.c    ****     // Print port configurations
 886:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 3177              		.loc 1 886 0
 3178 0064 07F11000 		add	r0, r7, #16
 3179 0068 FB68     		ldr	r3, [r7, #12]
 3180 006a 0093     		str	r3, [sp]
 3181 006c BB68     		ldr	r3, [r7, #8]
 3182 006e 2A4A     		ldr	r2, .L87+36
 3183 0070 C821     		movs	r1, #200
 3184 0072 FFF7FEFF 		bl	snprintf
 887:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 3185              		.loc 1 887 0
 3186 0076 07F11003 		add	r3, r7, #16
 3187 007a 1A46     		mov	r2, r3
 3188 007c 2749     		ldr	r1, .L87+40
 3189 007e 0020     		movs	r0, #0
 3190 0080 FFF7FEFF 		bl	printNotif
 888:notoriOS.c    ****     // AT command to configure the port
 889:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 3191              		.loc 1 889 0
 3192 0084 07F11003 		add	r3, r7, #16
 3193 0088 42F21072 		movw	r2, #10000
 3194 008c 2449     		ldr	r1, .L87+44
 3195 008e 1846     		mov	r0, r3
 3196 0090 FFF7FEFF 		bl	at_write_command
 3197 0094 0346     		mov	r3, r0
 3198 0096 87F8E730 		strb	r3, [r7, #231]
 890:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 891:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 892:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 3199              		.loc 1 892 0
 3200 009a 4FF47A72 		mov	r2, #1000
 3201 009e 2149     		ldr	r1, .L87+48
 3202 00a0 2148     		ldr	r0, .L87+52
 3203 00a2 FFF7FEFF 		bl	at_write_command
 3204 00a6 0346     		mov	r3, r0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 78


 3205 00a8 87F8E730 		strb	r3, [r7, #231]
 893:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 894:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 3206              		.loc 1 894 0
 3207 00ac 1848     		ldr	r0, .L87+28
 3208 00ae FFF7FEFF 		bl	strlen
 3209 00b2 0346     		mov	r3, r0
 3210 00b4 1A46     		mov	r2, r3
 3211 00b6 164B     		ldr	r3, .L87+28
 3212 00b8 1344     		add	r3, r3, r2
 3213 00ba 1C49     		ldr	r1, .L87+56
 3214 00bc 1A46     		mov	r2, r3
 3215 00be 0B46     		mov	r3, r1
 3216 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 3217 00c2 1380     		strh	r3, [r2]	@ unaligned
 895:notoriOS.c    ****     // AT command to send http request
 896:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
 3218              		.loc 1 896 0
 3219 00c4 41F28832 		movw	r2, #5000
 3220 00c8 1549     		ldr	r1, .L87+44
 3221 00ca 1148     		ldr	r0, .L87+28
 3222 00cc FFF7FEFF 		bl	at_write_command
 3223 00d0 0346     		mov	r3, r0
 3224 00d2 87F8E730 		strb	r3, [r7, #231]
 897:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 898:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 899:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 3225              		.loc 1 899 0
 3226 00d6 41F28832 		movw	r2, #5000
 3227 00da 1549     		ldr	r1, .L87+60
 3228 00dc 1548     		ldr	r0, .L87+64
 3229 00de FFF7FEFF 		bl	at_write_command
 3230 00e2 0346     		mov	r3, r0
 3231 00e4 87F8E730 		strb	r3, [r7, #231]
 900:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 901:notoriOS.c    ****     
 902:notoriOS.c    ****     
 903:notoriOS.c    ****     return upgrade_status;
 3232              		.loc 1 903 0
 3233 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 3234              	.L86:
 904:notoriOS.c    ****     
 905:notoriOS.c    **** }
 3235              		.loc 1 905 0 discriminator 1
 3236 00ec 1846     		mov	r0, r3
 3237 00ee E837     		adds	r7, r7, #232
 3238              		.cfi_def_cfa_offset 8
 3239 00f0 BD46     		mov	sp, r7
 3240              		.cfi_def_cfa_register 13
 3241              		@ sp needed
 3242 00f2 80BD     		pop	{r7, pc}
 3243              	.L88:
 3244              		.align	2
 3245              	.L87:
 3246 00f4 00000000 		.word	modem_state
 3247 00f8 F4060000 		.word	.LC85
 3248 00fc 68010000 		.word	.LC16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 79


 3249 0100 6C010000 		.word	.LC17
 3250 0104 70010000 		.word	.LC18
 3251 0108 78010000 		.word	.LC19
 3252 010c 00000000 		.word	http_body
 3253 0110 00000000 		.word	http_request
 3254 0114 80010000 		.word	.LC20
 3255 0118 98010000 		.word	.LC21
 3256 011c B4010000 		.word	.LC22
 3257 0120 B8010000 		.word	.LC23
 3258 0124 E8010000 		.word	.LC26
 3259 0128 EC010000 		.word	.LC27
 3260 012c FC010000 		.word	.LC28
 3261 0130 18020000 		.word	.LC31
 3262 0134 20020000 		.word	.LC32
 3263              		.cfi_endproc
 3264              	.LFE78:
 3265              		.size	upgraded, .-upgraded
 3266              		.text
 3267              	.Letext0:
 3268              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 3269              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 3270              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 3271              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 3272              		.file 6 "testing.h"
 3273              		.file 7 "level_sensor.h"
 3274              		.file 8 "sontek.h"
 3275              		.file 9 "voltages.h"
 3276              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 3277              		.file 11 "data.h"
 3278              		.file 12 "modem.h"
 3279              		.file 13 "notoriOS.h"
 3280              		.file 14 "Generated_Source\\PSoC5/core_cm3.h"
 3281              		.section	.debug_info,"",%progbits
 3282              	.Ldebug_info0:
 3283 0000 1D0D0000 		.4byte	0xd1d
 3284 0004 0400     		.2byte	0x4
 3285 0006 00000000 		.4byte	.Ldebug_abbrev0
 3286 000a 04       		.byte	0x4
 3287 000b 01       		.uleb128 0x1
 3288 000c 7D000000 		.4byte	.LASF174
 3289 0010 0C       		.byte	0xc
 3290 0011 E0070000 		.4byte	.LASF175
 3291 0015 E0020000 		.4byte	.LASF176
 3292 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3293 001d 00000000 		.4byte	0
 3294 0021 00000000 		.4byte	.Ldebug_line0
 3295 0025 02       		.uleb128 0x2
 3296 0026 01       		.byte	0x1
 3297 0027 06       		.byte	0x6
 3298 0028 4E000000 		.4byte	.LASF0
 3299 002c 02       		.uleb128 0x2
 3300 002d 01       		.byte	0x1
 3301 002e 08       		.byte	0x8
 3302 002f DB050000 		.4byte	.LASF1
 3303 0033 02       		.uleb128 0x2
 3304 0034 02       		.byte	0x2
 3305 0035 05       		.byte	0x5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 80


 3306 0036 2D040000 		.4byte	.LASF2
 3307 003a 02       		.uleb128 0x2
 3308 003b 02       		.byte	0x2
 3309 003c 07       		.byte	0x7
 3310 003d 74020000 		.4byte	.LASF3
 3311 0041 03       		.uleb128 0x3
 3312 0042 3D070000 		.4byte	.LASF9
 3313 0046 02       		.byte	0x2
 3314 0047 3F       		.byte	0x3f
 3315 0048 4C000000 		.4byte	0x4c
 3316 004c 02       		.uleb128 0x2
 3317 004d 04       		.byte	0x4
 3318 004e 05       		.byte	0x5
 3319 004f 0E020000 		.4byte	.LASF4
 3320 0053 02       		.uleb128 0x2
 3321 0054 04       		.byte	0x4
 3322 0055 07       		.byte	0x7
 3323 0056 6A030000 		.4byte	.LASF5
 3324 005a 02       		.uleb128 0x2
 3325 005b 08       		.byte	0x8
 3326 005c 05       		.byte	0x5
 3327 005d 69010000 		.4byte	.LASF6
 3328 0061 02       		.uleb128 0x2
 3329 0062 08       		.byte	0x8
 3330 0063 07       		.byte	0x7
 3331 0064 11010000 		.4byte	.LASF7
 3332 0068 04       		.uleb128 0x4
 3333 0069 04       		.byte	0x4
 3334 006a 05       		.byte	0x5
 3335 006b 696E7400 		.ascii	"int\000"
 3336 006f 02       		.uleb128 0x2
 3337 0070 04       		.byte	0x4
 3338 0071 07       		.byte	0x7
 3339 0072 16030000 		.4byte	.LASF8
 3340 0076 03       		.uleb128 0x3
 3341 0077 D3050000 		.4byte	.LASF10
 3342 007b 03       		.byte	0x3
 3343 007c 2C       		.byte	0x2c
 3344 007d 41000000 		.4byte	0x41
 3345 0081 05       		.uleb128 0x5
 3346 0082 30020000 		.4byte	.LASF11
 3347 0086 04       		.byte	0x4
 3348 0087 9201     		.2byte	0x192
 3349 0089 2C000000 		.4byte	0x2c
 3350 008d 05       		.uleb128 0x5
 3351 008e E9050000 		.4byte	.LASF12
 3352 0092 04       		.byte	0x4
 3353 0093 9301     		.2byte	0x193
 3354 0095 3A000000 		.4byte	0x3a
 3355 0099 05       		.uleb128 0x5
 3356 009a 87020000 		.4byte	.LASF13
 3357 009e 04       		.byte	0x4
 3358 009f 9401     		.2byte	0x194
 3359 00a1 53000000 		.4byte	0x53
 3360 00a5 05       		.uleb128 0x5
 3361 00a6 F0030000 		.4byte	.LASF14
 3362 00aa 04       		.byte	0x4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 81


 3363 00ab 9501     		.2byte	0x195
 3364 00ad 25000000 		.4byte	0x25
 3365 00b1 05       		.uleb128 0x5
 3366 00b2 F5070000 		.4byte	.LASF15
 3367 00b6 04       		.byte	0x4
 3368 00b7 9601     		.2byte	0x196
 3369 00b9 33000000 		.4byte	0x33
 3370 00bd 05       		.uleb128 0x5
 3371 00be 4E020000 		.4byte	.LASF16
 3372 00c2 04       		.byte	0x4
 3373 00c3 9701     		.2byte	0x197
 3374 00c5 4C000000 		.4byte	0x4c
 3375 00c9 02       		.uleb128 0x2
 3376 00ca 04       		.byte	0x4
 3377 00cb 04       		.byte	0x4
 3378 00cc 78050000 		.4byte	.LASF17
 3379 00d0 02       		.uleb128 0x2
 3380 00d1 08       		.byte	0x8
 3381 00d2 04       		.byte	0x4
 3382 00d3 79080000 		.4byte	.LASF18
 3383 00d7 02       		.uleb128 0x2
 3384 00d8 01       		.byte	0x1
 3385 00d9 08       		.byte	0x8
 3386 00da 0D070000 		.4byte	.LASF19
 3387 00de 02       		.uleb128 0x2
 3388 00df 08       		.byte	0x8
 3389 00e0 04       		.byte	0x4
 3390 00e1 EF060000 		.4byte	.LASF20
 3391 00e5 02       		.uleb128 0x2
 3392 00e6 04       		.byte	0x4
 3393 00e7 07       		.byte	0x7
 3394 00e8 AA040000 		.4byte	.LASF21
 3395 00ec 06       		.uleb128 0x6
 3396 00ed 04       		.byte	0x4
 3397 00ee D7000000 		.4byte	0xd7
 3398 00f2 07       		.uleb128 0x7
 3399 00f3 D7000000 		.4byte	0xd7
 3400 00f7 02010000 		.4byte	0x102
 3401 00fb 08       		.uleb128 0x8
 3402 00fc E5000000 		.4byte	0xe5
 3403 0100 17       		.byte	0x17
 3404 0101 00       		.byte	0
 3405 0102 09       		.uleb128 0x9
 3406 0103 0C       		.byte	0xc
 3407 0104 05       		.byte	0x5
 3408 0105 30       		.byte	0x30
 3409 0106 6B010000 		.4byte	0x16b
 3410 010a 0A       		.uleb128 0xa
 3411 010b 53656300 		.ascii	"Sec\000"
 3412 010f 05       		.byte	0x5
 3413 0110 32       		.byte	0x32
 3414 0111 81000000 		.4byte	0x81
 3415 0115 00       		.byte	0
 3416 0116 0A       		.uleb128 0xa
 3417 0117 4D696E00 		.ascii	"Min\000"
 3418 011b 05       		.byte	0x5
 3419 011c 33       		.byte	0x33
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 82


 3420 011d 81000000 		.4byte	0x81
 3421 0121 01       		.byte	0x1
 3422 0122 0B       		.uleb128 0xb
 3423 0123 28010000 		.4byte	.LASF22
 3424 0127 05       		.byte	0x5
 3425 0128 34       		.byte	0x34
 3426 0129 81000000 		.4byte	0x81
 3427 012d 02       		.byte	0x2
 3428 012e 0B       		.uleb128 0xb
 3429 012f 44060000 		.4byte	.LASF23
 3430 0133 05       		.byte	0x5
 3431 0134 35       		.byte	0x35
 3432 0135 81000000 		.4byte	0x81
 3433 0139 03       		.byte	0x3
 3434 013a 0B       		.uleb128 0xb
 3435 013b AB030000 		.4byte	.LASF24
 3436 013f 05       		.byte	0x5
 3437 0140 36       		.byte	0x36
 3438 0141 81000000 		.4byte	0x81
 3439 0145 04       		.byte	0x4
 3440 0146 0B       		.uleb128 0xb
 3441 0147 2E080000 		.4byte	.LASF25
 3442 014b 05       		.byte	0x5
 3443 014c 37       		.byte	0x37
 3444 014d 8D000000 		.4byte	0x8d
 3445 0151 06       		.byte	0x6
 3446 0152 0B       		.uleb128 0xb
 3447 0153 0B010000 		.4byte	.LASF26
 3448 0157 05       		.byte	0x5
 3449 0158 38       		.byte	0x38
 3450 0159 81000000 		.4byte	0x81
 3451 015d 08       		.byte	0x8
 3452 015e 0B       		.uleb128 0xb
 3453 015f C8050000 		.4byte	.LASF27
 3454 0163 05       		.byte	0x5
 3455 0164 39       		.byte	0x39
 3456 0165 8D000000 		.4byte	0x8d
 3457 0169 0A       		.byte	0xa
 3458 016a 00       		.byte	0
 3459 016b 03       		.uleb128 0x3
 3460 016c 1D050000 		.4byte	.LASF28
 3461 0170 05       		.byte	0x5
 3462 0171 3A       		.byte	0x3a
 3463 0172 76010000 		.4byte	0x176
 3464 0176 0C       		.uleb128 0xc
 3465 0177 02010000 		.4byte	0x102
 3466 017b 0D       		.uleb128 0xd
 3467 017c 8101     		.2byte	0x181
 3468 017e 06       		.byte	0x6
 3469 017f 0A       		.byte	0xa
 3470 0180 A9010000 		.4byte	0x1a9
 3471 0184 0B       		.uleb128 0xb
 3472 0185 BE050000 		.4byte	.LASF29
 3473 0189 06       		.byte	0x6
 3474 018a 0C       		.byte	0xc
 3475 018b A9010000 		.4byte	0x1a9
 3476 018f 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 83


 3477 0190 0B       		.uleb128 0xb
 3478 0191 AE070000 		.4byte	.LASF30
 3479 0195 06       		.byte	0x6
 3480 0196 0D       		.byte	0xd
 3481 0197 81000000 		.4byte	0x81
 3482 019b 80       		.byte	0x80
 3483 019c 0B       		.uleb128 0xb
 3484 019d 66060000 		.4byte	.LASF31
 3485 01a1 06       		.byte	0x6
 3486 01a2 0F       		.byte	0xf
 3487 01a3 B9010000 		.4byte	0x1b9
 3488 01a7 81       		.byte	0x81
 3489 01a8 00       		.byte	0
 3490 01a9 07       		.uleb128 0x7
 3491 01aa D7000000 		.4byte	0xd7
 3492 01ae B9010000 		.4byte	0x1b9
 3493 01b2 08       		.uleb128 0x8
 3494 01b3 E5000000 		.4byte	0xe5
 3495 01b7 7F       		.byte	0x7f
 3496 01b8 00       		.byte	0
 3497 01b9 07       		.uleb128 0x7
 3498 01ba D7000000 		.4byte	0xd7
 3499 01be C9010000 		.4byte	0x1c9
 3500 01c2 08       		.uleb128 0x8
 3501 01c3 E5000000 		.4byte	0xe5
 3502 01c7 FF       		.byte	0xff
 3503 01c8 00       		.byte	0
 3504 01c9 03       		.uleb128 0x3
 3505 01ca 4E060000 		.4byte	.LASF32
 3506 01ce 06       		.byte	0x6
 3507 01cf 10       		.byte	0x10
 3508 01d0 7B010000 		.4byte	0x17b
 3509 01d4 09       		.uleb128 0x9
 3510 01d5 1A       		.byte	0x1a
 3511 01d6 07       		.byte	0x7
 3512 01d7 10       		.byte	0x10
 3513 01d8 0D020000 		.4byte	0x20d
 3514 01dc 0B       		.uleb128 0xb
 3515 01dd 97020000 		.4byte	.LASF33
 3516 01e1 07       		.byte	0x7
 3517 01e2 11       		.byte	0x11
 3518 01e3 0D020000 		.4byte	0x20d
 3519 01e7 00       		.byte	0
 3520 01e8 0B       		.uleb128 0xb
 3521 01e9 65070000 		.4byte	.LASF34
 3522 01ed 07       		.byte	0x7
 3523 01ee 12       		.byte	0x12
 3524 01ef B1000000 		.4byte	0xb1
 3525 01f3 16       		.byte	0x16
 3526 01f4 0B       		.uleb128 0xb
 3527 01f5 42030000 		.4byte	.LASF35
 3528 01f9 07       		.byte	0x7
 3529 01fa 13       		.byte	0x13
 3530 01fb 81000000 		.4byte	0x81
 3531 01ff 18       		.byte	0x18
 3532 0200 0B       		.uleb128 0xb
 3533 0201 20000000 		.4byte	.LASF36
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 84


 3534 0205 07       		.byte	0x7
 3535 0206 14       		.byte	0x14
 3536 0207 81000000 		.4byte	0x81
 3537 020b 19       		.byte	0x19
 3538 020c 00       		.byte	0
 3539 020d 07       		.uleb128 0x7
 3540 020e B1000000 		.4byte	0xb1
 3541 0212 1D020000 		.4byte	0x21d
 3542 0216 08       		.uleb128 0x8
 3543 0217 E5000000 		.4byte	0xe5
 3544 021b 0A       		.byte	0xa
 3545 021c 00       		.byte	0
 3546 021d 03       		.uleb128 0x3
 3547 021e 7E050000 		.4byte	.LASF37
 3548 0222 07       		.byte	0x7
 3549 0223 15       		.byte	0x15
 3550 0224 D4010000 		.4byte	0x1d4
 3551 0228 06       		.uleb128 0x6
 3552 0229 04       		.byte	0x4
 3553 022a EC000000 		.4byte	0xec
 3554 022e 06       		.uleb128 0x6
 3555 022f 04       		.byte	0x4
 3556 0230 C9000000 		.4byte	0xc9
 3557 0234 09       		.uleb128 0x9
 3558 0235 E4       		.byte	0xe4
 3559 0236 08       		.byte	0x8
 3560 0237 1D       		.byte	0x1d
 3561 0238 E5020000 		.4byte	0x2e5
 3562 023c 0B       		.uleb128 0xb
 3563 023d C9020000 		.4byte	.LASF38
 3564 0241 08       		.byte	0x8
 3565 0242 1F       		.byte	0x1f
 3566 0243 81000000 		.4byte	0x81
 3567 0247 00       		.byte	0
 3568 0248 0B       		.uleb128 0xb
 3569 0249 3F060000 		.4byte	.LASF39
 3570 024d 08       		.byte	0x8
 3571 024e 20       		.byte	0x20
 3572 024f 81000000 		.4byte	0x81
 3573 0253 01       		.byte	0x1
 3574 0254 0B       		.uleb128 0xb
 3575 0255 2D010000 		.4byte	.LASF40
 3576 0259 08       		.byte	0x8
 3577 025a 22       		.byte	0x22
 3578 025b 2E020000 		.4byte	0x22e
 3579 025f 04       		.byte	0x4
 3580 0260 0B       		.uleb128 0xb
 3581 0261 D9070000 		.4byte	.LASF41
 3582 0265 08       		.byte	0x8
 3583 0266 23       		.byte	0x23
 3584 0267 28020000 		.4byte	0x228
 3585 026b 08       		.byte	0x8
 3586 026c 0B       		.uleb128 0xb
 3587 026d B3040000 		.4byte	.LASF42
 3588 0271 08       		.byte	0x8
 3589 0272 25       		.byte	0x25
 3590 0273 E5020000 		.4byte	0x2e5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 85


 3591 0277 0C       		.byte	0xc
 3592 0278 0B       		.uleb128 0xb
 3593 0279 B9040000 		.4byte	.LASF43
 3594 027d 08       		.byte	0x8
 3595 027e 25       		.byte	0x25
 3596 027f F5020000 		.4byte	0x2f5
 3597 0283 1C       		.byte	0x1c
 3598 0284 0B       		.uleb128 0xb
 3599 0285 06030000 		.4byte	.LASF44
 3600 0289 08       		.byte	0x8
 3601 028a 25       		.byte	0x25
 3602 028b 05030000 		.4byte	0x305
 3603 028f 30       		.byte	0x30
 3604 0290 0B       		.uleb128 0xb
 3605 0291 BF040000 		.4byte	.LASF45
 3606 0295 08       		.byte	0x8
 3607 0296 25       		.byte	0x25
 3608 0297 05030000 		.4byte	0x305
 3609 029b 48       		.byte	0x48
 3610 029c 0B       		.uleb128 0xb
 3611 029d C5040000 		.4byte	.LASF46
 3612 02a1 08       		.byte	0x8
 3613 02a2 25       		.byte	0x25
 3614 02a3 05030000 		.4byte	0x305
 3615 02a7 60       		.byte	0x60
 3616 02a8 0B       		.uleb128 0xb
 3617 02a9 CB040000 		.4byte	.LASF47
 3618 02ad 08       		.byte	0x8
 3619 02ae 25       		.byte	0x25
 3620 02af 05030000 		.4byte	0x305
 3621 02b3 78       		.byte	0x78
 3622 02b4 0B       		.uleb128 0xb
 3623 02b5 D1040000 		.4byte	.LASF48
 3624 02b9 08       		.byte	0x8
 3625 02ba 25       		.byte	0x25
 3626 02bb 05030000 		.4byte	0x305
 3627 02bf 90       		.byte	0x90
 3628 02c0 0B       		.uleb128 0xb
 3629 02c1 D7040000 		.4byte	.LASF49
 3630 02c5 08       		.byte	0x8
 3631 02c6 25       		.byte	0x25
 3632 02c7 05030000 		.4byte	0x305
 3633 02cb A8       		.byte	0xa8
 3634 02cc 0B       		.uleb128 0xb
 3635 02cd DD040000 		.4byte	.LASF50
 3636 02d1 08       		.byte	0x8
 3637 02d2 25       		.byte	0x25
 3638 02d3 E5020000 		.4byte	0x2e5
 3639 02d7 C0       		.byte	0xc0
 3640 02d8 0B       		.uleb128 0xb
 3641 02d9 50070000 		.4byte	.LASF51
 3642 02dd 08       		.byte	0x8
 3643 02de 25       		.byte	0x25
 3644 02df F5020000 		.4byte	0x2f5
 3645 02e3 D0       		.byte	0xd0
 3646 02e4 00       		.byte	0
 3647 02e5 07       		.uleb128 0x7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 86


 3648 02e6 C9000000 		.4byte	0xc9
 3649 02ea F5020000 		.4byte	0x2f5
 3650 02ee 08       		.uleb128 0x8
 3651 02ef E5000000 		.4byte	0xe5
 3652 02f3 03       		.byte	0x3
 3653 02f4 00       		.byte	0
 3654 02f5 07       		.uleb128 0x7
 3655 02f6 C9000000 		.4byte	0xc9
 3656 02fa 05030000 		.4byte	0x305
 3657 02fe 08       		.uleb128 0x8
 3658 02ff E5000000 		.4byte	0xe5
 3659 0303 04       		.byte	0x4
 3660 0304 00       		.byte	0
 3661 0305 07       		.uleb128 0x7
 3662 0306 C9000000 		.4byte	0xc9
 3663 030a 15030000 		.4byte	0x315
 3664 030e 08       		.uleb128 0x8
 3665 030f E5000000 		.4byte	0xe5
 3666 0313 05       		.byte	0x5
 3667 0314 00       		.byte	0
 3668 0315 03       		.uleb128 0x3
 3669 0316 12070000 		.4byte	.LASF52
 3670 031a 08       		.byte	0x8
 3671 031b 28       		.byte	0x28
 3672 031c 34020000 		.4byte	0x234
 3673 0320 09       		.uleb128 0x9
 3674 0321 14       		.byte	0x14
 3675 0322 09       		.byte	0x9
 3676 0323 11       		.byte	0x11
 3677 0324 65030000 		.4byte	0x365
 3678 0328 0B       		.uleb128 0xb
 3679 0329 9B030000 		.4byte	.LASF53
 3680 032d 09       		.byte	0x9
 3681 032e 12       		.byte	0x12
 3682 032f C9000000 		.4byte	0xc9
 3683 0333 00       		.byte	0
 3684 0334 0B       		.uleb128 0xb
 3685 0335 B5010000 		.4byte	.LASF54
 3686 0339 09       		.byte	0x9
 3687 033a 13       		.byte	0x13
 3688 033b C9000000 		.4byte	0xc9
 3689 033f 04       		.byte	0x4
 3690 0340 0B       		.uleb128 0xb
 3691 0341 C3010000 		.4byte	.LASF55
 3692 0345 09       		.byte	0x9
 3693 0346 14       		.byte	0x14
 3694 0347 C9000000 		.4byte	0xc9
 3695 034b 08       		.byte	0x8
 3696 034c 0B       		.uleb128 0xb
 3697 034d 5A050000 		.4byte	.LASF56
 3698 0351 09       		.byte	0x9
 3699 0352 15       		.byte	0x15
 3700 0353 C9000000 		.4byte	0xc9
 3701 0357 0C       		.byte	0xc
 3702 0358 0B       		.uleb128 0xb
 3703 0359 D7060000 		.4byte	.LASF57
 3704 035d 09       		.byte	0x9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 87


 3705 035e 16       		.byte	0x16
 3706 035f 81000000 		.4byte	0x81
 3707 0363 10       		.byte	0x10
 3708 0364 00       		.byte	0
 3709 0365 03       		.uleb128 0x3
 3710 0366 80080000 		.4byte	.LASF58
 3711 036a 09       		.byte	0x9
 3712 036b 17       		.byte	0x17
 3713 036c 20030000 		.4byte	0x320
 3714 0370 09       		.uleb128 0x9
 3715 0371 08       		.byte	0x8
 3716 0372 09       		.byte	0x9
 3717 0373 19       		.byte	0x19
 3718 0374 91030000 		.4byte	0x391
 3719 0378 0B       		.uleb128 0xb
 3720 0379 C6060000 		.4byte	.LASF59
 3721 037d 09       		.byte	0x9
 3722 037e 1A       		.byte	0x1a
 3723 037f C9000000 		.4byte	0xc9
 3724 0383 00       		.byte	0
 3725 0384 0B       		.uleb128 0xb
 3726 0385 2B060000 		.4byte	.LASF60
 3727 0389 09       		.byte	0x9
 3728 038a 1B       		.byte	0x1b
 3729 038b C9000000 		.4byte	0xc9
 3730 038f 04       		.byte	0x4
 3731 0390 00       		.byte	0
 3732 0391 03       		.uleb128 0x3
 3733 0392 38080000 		.4byte	.LASF61
 3734 0396 09       		.byte	0x9
 3735 0397 1C       		.byte	0x1c
 3736 0398 70030000 		.4byte	0x370
 3737 039c 0E       		.uleb128 0xe
 3738 039d 746D00   		.ascii	"tm\000"
 3739 03a0 24       		.byte	0x24
 3740 03a1 0A       		.byte	0xa
 3741 03a2 21       		.byte	0x21
 3742 03a3 14040000 		.4byte	0x414
 3743 03a7 0B       		.uleb128 0xb
 3744 03a8 9C070000 		.4byte	.LASF62
 3745 03ac 0A       		.byte	0xa
 3746 03ad 23       		.byte	0x23
 3747 03ae 68000000 		.4byte	0x68
 3748 03b2 00       		.byte	0
 3749 03b3 0B       		.uleb128 0xb
 3750 03b4 8C040000 		.4byte	.LASF63
 3751 03b8 0A       		.byte	0xa
 3752 03b9 24       		.byte	0x24
 3753 03ba 68000000 		.4byte	0x68
 3754 03be 04       		.byte	0x4
 3755 03bf 0B       		.uleb128 0xb
 3756 03c0 10000000 		.4byte	.LASF64
 3757 03c4 0A       		.byte	0xa
 3758 03c5 25       		.byte	0x25
 3759 03c6 68000000 		.4byte	0x68
 3760 03ca 08       		.byte	0x8
 3761 03cb 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 88


 3762 03cc 8B070000 		.4byte	.LASF65
 3763 03d0 0A       		.byte	0xa
 3764 03d1 26       		.byte	0x26
 3765 03d2 68000000 		.4byte	0x68
 3766 03d6 0C       		.byte	0xc
 3767 03d7 0B       		.uleb128 0xb
 3768 03d8 C2020000 		.4byte	.LASF66
 3769 03dc 0A       		.byte	0xa
 3770 03dd 27       		.byte	0x27
 3771 03de 68000000 		.4byte	0x68
 3772 03e2 10       		.byte	0x10
 3773 03e3 0B       		.uleb128 0xb
 3774 03e4 08000000 		.4byte	.LASF67
 3775 03e8 0A       		.byte	0xa
 3776 03e9 28       		.byte	0x28
 3777 03ea 68000000 		.4byte	0x68
 3778 03ee 14       		.byte	0x14
 3779 03ef 0B       		.uleb128 0xb
 3780 03f0 E7060000 		.4byte	.LASF68
 3781 03f4 0A       		.byte	0xa
 3782 03f5 29       		.byte	0x29
 3783 03f6 68000000 		.4byte	0x68
 3784 03fa 18       		.byte	0x18
 3785 03fb 0B       		.uleb128 0xb
 3786 03fc 18000000 		.4byte	.LASF69
 3787 0400 0A       		.byte	0xa
 3788 0401 2A       		.byte	0x2a
 3789 0402 68000000 		.4byte	0x68
 3790 0406 1C       		.byte	0x1c
 3791 0407 0B       		.uleb128 0xb
 3792 0408 D4030000 		.4byte	.LASF70
 3793 040c 0A       		.byte	0xa
 3794 040d 2B       		.byte	0x2b
 3795 040e 68000000 		.4byte	0x68
 3796 0412 20       		.byte	0x20
 3797 0413 00       		.byte	0
 3798 0414 09       		.uleb128 0x9
 3799 0415 2C       		.byte	0x2c
 3800 0416 0B       		.byte	0xb
 3801 0417 14       		.byte	0x14
 3802 0418 41040000 		.4byte	0x441
 3803 041c 0A       		.uleb128 0xa
 3804 041d 6B657900 		.ascii	"key\000"
 3805 0421 0B       		.byte	0xb
 3806 0422 15       		.byte	0x15
 3807 0423 41040000 		.4byte	0x441
 3808 0427 00       		.byte	0
 3809 0428 0B       		.uleb128 0xb
 3810 0429 FB020000 		.4byte	.LASF71
 3811 042d 0B       		.byte	0xb
 3812 042e 16       		.byte	0x16
 3813 042f 41040000 		.4byte	0x441
 3814 0433 14       		.byte	0x14
 3815 0434 0B       		.uleb128 0xb
 3816 0435 13050000 		.4byte	.LASF72
 3817 0439 0B       		.byte	0xb
 3818 043a 17       		.byte	0x17
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 89


 3819 043b BD000000 		.4byte	0xbd
 3820 043f 28       		.byte	0x28
 3821 0440 00       		.byte	0
 3822 0441 07       		.uleb128 0x7
 3823 0442 D7000000 		.4byte	0xd7
 3824 0446 51040000 		.4byte	0x451
 3825 044a 08       		.uleb128 0x8
 3826 044b E5000000 		.4byte	0xe5
 3827 044f 13       		.byte	0x13
 3828 0450 00       		.byte	0
 3829 0451 03       		.uleb128 0x3
 3830 0452 2B030000 		.4byte	.LASF73
 3831 0456 0B       		.byte	0xb
 3832 0457 19       		.byte	0x19
 3833 0458 14040000 		.4byte	0x414
 3834 045c 09       		.uleb128 0x9
 3835 045d 3C       		.byte	0x3c
 3836 045e 0C       		.byte	0xc
 3837 045f 36       		.byte	0x36
 3838 0460 89040000 		.4byte	0x489
 3839 0464 0B       		.uleb128 0xb
 3840 0465 84070000 		.4byte	.LASF74
 3841 0469 0C       		.byte	0xc
 3842 046a 37       		.byte	0x37
 3843 046b 41040000 		.4byte	0x441
 3844 046f 00       		.byte	0
 3845 0470 0B       		.uleb128 0xb
 3846 0471 8E020000 		.4byte	.LASF75
 3847 0475 0C       		.byte	0xc
 3848 0476 38       		.byte	0x38
 3849 0477 41040000 		.4byte	0x441
 3850 047b 14       		.byte	0x14
 3851 047c 0B       		.uleb128 0xb
 3852 047d 61060000 		.4byte	.LASF76
 3853 0481 0C       		.byte	0xc
 3854 0482 39       		.byte	0x39
 3855 0483 41040000 		.4byte	0x441
 3856 0487 28       		.byte	0x28
 3857 0488 00       		.byte	0
 3858 0489 03       		.uleb128 0x3
 3859 048a FB010000 		.4byte	.LASF77
 3860 048e 0C       		.byte	0xc
 3861 048f 3B       		.byte	0x3b
 3862 0490 5C040000 		.4byte	0x45c
 3863 0494 09       		.uleb128 0x9
 3864 0495 20       		.byte	0x20
 3865 0496 0C       		.byte	0xc
 3866 0497 3D       		.byte	0x3d
 3867 0498 FD040000 		.4byte	0x4fd
 3868 049c 0B       		.uleb128 0xb
 3869 049d 08020000 		.4byte	.LASF78
 3870 04a1 0C       		.byte	0xc
 3871 04a2 3E       		.byte	0x3e
 3872 04a3 68000000 		.4byte	0x68
 3873 04a7 00       		.byte	0
 3874 04a8 0A       		.uleb128 0xa
 3875 04a9 62657200 		.ascii	"ber\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 90


 3876 04ad 0C       		.byte	0xc
 3877 04ae 3F       		.byte	0x3f
 3878 04af 68000000 		.4byte	0x68
 3879 04b3 04       		.byte	0x4
 3880 04b4 0B       		.uleb128 0xb
 3881 04b5 3A060000 		.4byte	.LASF79
 3882 04b9 0C       		.byte	0xc
 3883 04ba 40       		.byte	0x40
 3884 04bb 68000000 		.4byte	0x68
 3885 04bf 08       		.byte	0x8
 3886 04c0 0B       		.uleb128 0xb
 3887 04c1 7F010000 		.4byte	.LASF80
 3888 04c5 0C       		.byte	0xc
 3889 04c6 41       		.byte	0x41
 3890 04c7 68000000 		.4byte	0x68
 3891 04cb 0C       		.byte	0xc
 3892 04cc 0B       		.uleb128 0xb
 3893 04cd 05060000 		.4byte	.LASF81
 3894 04d1 0C       		.byte	0xc
 3895 04d2 42       		.byte	0x42
 3896 04d3 68000000 		.4byte	0x68
 3897 04d7 10       		.byte	0x10
 3898 04d8 0B       		.uleb128 0xb
 3899 04d9 00060000 		.4byte	.LASF82
 3900 04dd 0C       		.byte	0xc
 3901 04de 43       		.byte	0x43
 3902 04df 68000000 		.4byte	0x68
 3903 04e3 14       		.byte	0x14
 3904 04e4 0B       		.uleb128 0xb
 3905 04e5 92010000 		.4byte	.LASF83
 3906 04e9 0C       		.byte	0xc
 3907 04ea 44       		.byte	0x44
 3908 04eb 68000000 		.4byte	0x68
 3909 04ef 18       		.byte	0x18
 3910 04f0 0B       		.uleb128 0xb
 3911 04f1 17020000 		.4byte	.LASF84
 3912 04f5 0C       		.byte	0xc
 3913 04f6 45       		.byte	0x45
 3914 04f7 68000000 		.4byte	0x68
 3915 04fb 1C       		.byte	0x1c
 3916 04fc 00       		.byte	0
 3917 04fd 03       		.uleb128 0x3
 3918 04fe B8060000 		.4byte	.LASF85
 3919 0502 0C       		.byte	0xc
 3920 0503 47       		.byte	0x47
 3921 0504 94040000 		.4byte	0x494
 3922 0508 09       		.uleb128 0x9
 3923 0509 05       		.byte	0x5
 3924 050a 0C       		.byte	0xc
 3925 050b 53       		.byte	0x53
 3926 050c 4D050000 		.4byte	0x54d
 3927 0510 0B       		.uleb128 0xb
 3928 0511 54020000 		.4byte	.LASF86
 3929 0515 0C       		.byte	0xc
 3930 0516 55       		.byte	0x55
 3931 0517 81000000 		.4byte	0x81
 3932 051b 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 91


 3933 051c 0B       		.uleb128 0xb
 3934 051d 1F080000 		.4byte	.LASF87
 3935 0521 0C       		.byte	0xc
 3936 0522 57       		.byte	0x57
 3937 0523 4D050000 		.4byte	0x54d
 3938 0527 01       		.byte	0x1
 3939 0528 0B       		.uleb128 0xb
 3940 0529 6C080000 		.4byte	.LASF88
 3941 052d 0C       		.byte	0xc
 3942 052e 59       		.byte	0x59
 3943 052f 81000000 		.4byte	0x81
 3944 0533 02       		.byte	0x2
 3945 0534 0B       		.uleb128 0xb
 3946 0535 21060000 		.4byte	.LASF89
 3947 0539 0C       		.byte	0xc
 3948 053a 5B       		.byte	0x5b
 3949 053b 81000000 		.4byte	0x81
 3950 053f 03       		.byte	0x3
 3951 0540 0B       		.uleb128 0xb
 3952 0541 CF020000 		.4byte	.LASF90
 3953 0545 0C       		.byte	0xc
 3954 0546 5E       		.byte	0x5e
 3955 0547 81000000 		.4byte	0x81
 3956 054b 04       		.byte	0x4
 3957 054c 00       		.byte	0
 3958 054d 02       		.uleb128 0x2
 3959 054e 01       		.byte	0x1
 3960 054f 02       		.byte	0x2
 3961 0550 CD050000 		.4byte	.LASF91
 3962 0554 03       		.uleb128 0x3
 3963 0555 59040000 		.4byte	.LASF92
 3964 0559 0C       		.byte	0xc
 3965 055a 60       		.byte	0x60
 3966 055b 08050000 		.4byte	0x508
 3967 055f 09       		.uleb128 0x9
 3968 0560 06       		.byte	0x6
 3969 0561 0D       		.byte	0xd
 3970 0562 2E       		.byte	0x2e
 3971 0563 98050000 		.4byte	0x598
 3972 0567 0B       		.uleb128 0xb
 3973 0568 AA020000 		.4byte	.LASF93
 3974 056c 0D       		.byte	0xd
 3975 056d 30       		.byte	0x30
 3976 056e 8D000000 		.4byte	0x8d
 3977 0572 00       		.byte	0
 3978 0573 0B       		.uleb128 0xb
 3979 0574 09080000 		.4byte	.LASF94
 3980 0578 0D       		.byte	0xd
 3981 0579 31       		.byte	0x31
 3982 057a B1000000 		.4byte	0xb1
 3983 057e 02       		.byte	0x2
 3984 057f 0B       		.uleb128 0xb
 3985 0580 FB070000 		.4byte	.LASF95
 3986 0584 0D       		.byte	0xd
 3987 0585 32       		.byte	0x32
 3988 0586 81000000 		.4byte	0x81
 3989 058a 04       		.byte	0x4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 92


 3990 058b 0B       		.uleb128 0xb
 3991 058c 5A000000 		.4byte	.LASF96
 3992 0590 0D       		.byte	0xd
 3993 0591 33       		.byte	0x33
 3994 0592 81000000 		.4byte	0x81
 3995 0596 05       		.byte	0x5
 3996 0597 00       		.byte	0
 3997 0598 03       		.uleb128 0x3
 3998 0599 2A020000 		.4byte	.LASF97
 3999 059d 0D       		.byte	0xd
 4000 059e 36       		.byte	0x36
 4001 059f A3050000 		.4byte	0x5a3
 4002 05a3 0C       		.uleb128 0xc
 4003 05a4 5F050000 		.4byte	0x55f
 4004 05a8 09       		.uleb128 0x9
 4005 05a9 1C       		.byte	0x1c
 4006 05aa 0D       		.byte	0xd
 4007 05ab 39       		.byte	0x39
 4008 05ac C9050000 		.4byte	0x5c9
 4009 05b0 0B       		.uleb128 0xb
 4010 05b1 DD030000 		.4byte	.LASF98
 4011 05b5 0D       		.byte	0xd
 4012 05b6 3B       		.byte	0x3b
 4013 05b7 C9050000 		.4byte	0x5c9
 4014 05bb 00       		.byte	0
 4015 05bc 0B       		.uleb128 0xb
 4016 05bd 5E080000 		.4byte	.LASF99
 4017 05c1 0D       		.byte	0xd
 4018 05c2 3C       		.byte	0x3c
 4019 05c3 F2000000 		.4byte	0xf2
 4020 05c7 04       		.byte	0x4
 4021 05c8 00       		.byte	0
 4022 05c9 06       		.uleb128 0x6
 4023 05ca 04       		.byte	0x4
 4024 05cb 89040000 		.4byte	0x489
 4025 05cf 03       		.uleb128 0x3
 4026 05d0 4E040000 		.4byte	.LASF100
 4027 05d4 0D       		.byte	0xd
 4028 05d5 3E       		.byte	0x3e
 4029 05d6 A8050000 		.4byte	0x5a8
 4030 05da 09       		.uleb128 0x9
 4031 05db 68       		.byte	0x68
 4032 05dc 0D       		.byte	0xd
 4033 05dd 44       		.byte	0x44
 4034 05de FB050000 		.4byte	0x5fb
 4035 05e2 0B       		.uleb128 0xb
 4036 05e3 E8030000 		.4byte	.LASF101
 4037 05e7 0D       		.byte	0xd
 4038 05e8 49       		.byte	0x49
 4039 05e9 FB050000 		.4byte	0x5fb
 4040 05ed 00       		.byte	0
 4041 05ee 0B       		.uleb128 0xb
 4042 05ef CC030000 		.4byte	.LASF102
 4043 05f3 0D       		.byte	0xd
 4044 05f4 4A       		.byte	0x4a
 4045 05f5 68000000 		.4byte	0x68
 4046 05f9 64       		.byte	0x64
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 93


 4047 05fa 00       		.byte	0
 4048 05fb 07       		.uleb128 0x7
 4049 05fc D7000000 		.4byte	0xd7
 4050 0600 0B060000 		.4byte	0x60b
 4051 0604 08       		.uleb128 0x8
 4052 0605 E5000000 		.4byte	0xe5
 4053 0609 63       		.byte	0x63
 4054 060a 00       		.byte	0
 4055 060b 03       		.uleb128 0x3
 4056 060c E3040000 		.4byte	.LASF103
 4057 0610 0D       		.byte	0xd
 4058 0611 50       		.byte	0x50
 4059 0612 DA050000 		.4byte	0x5da
 4060 0616 0F       		.uleb128 0xf
 4061 0617 72000000 		.4byte	.LASF177
 4062 061b 01       		.byte	0x1
 4063 061c 14       		.byte	0x14
 4064 061d 00000000 		.4byte	.LFB64
 4065 0621 0C000000 		.4byte	.LFE64-.LFB64
 4066 0625 01       		.uleb128 0x1
 4067 0626 9C       		.byte	0x9c
 4068 0627 10       		.uleb128 0x10
 4069 0628 4E080000 		.4byte	.LASF117
 4070 062c 01       		.byte	0x1
 4071 062d 28       		.byte	0x28
 4072 062e 00000000 		.4byte	.LFB65
 4073 0632 2C010000 		.4byte	.LFE65-.LFB65
 4074 0636 01       		.uleb128 0x1
 4075 0637 9C       		.byte	0x9c
 4076 0638 67060000 		.4byte	0x667
 4077 063c 11       		.uleb128 0x11
 4078 063d 47070000 		.4byte	.LASF104
 4079 0641 01       		.byte	0x1
 4080 0642 3E       		.byte	0x3e
 4081 0643 67060000 		.4byte	0x667
 4082 0647 02       		.uleb128 0x2
 4083 0648 91       		.byte	0x91
 4084 0649 64       		.sleb128 -28
 4085 064a 11       		.uleb128 0x11
 4086 064b 28080000 		.4byte	.LASF105
 4087 064f 01       		.byte	0x1
 4088 0650 5B       		.byte	0x5b
 4089 0651 77060000 		.4byte	0x677
 4090 0655 02       		.uleb128 0x2
 4091 0656 91       		.byte	0x91
 4092 0657 58       		.sleb128 -40
 4093 0658 11       		.uleb128 0x11
 4094 0659 7C030000 		.4byte	.LASF106
 4095 065d 01       		.byte	0x1
 4096 065e 60       		.byte	0x60
 4097 065f 81000000 		.4byte	0x81
 4098 0663 02       		.uleb128 0x2
 4099 0664 91       		.byte	0x91
 4100 0665 6F       		.sleb128 -17
 4101 0666 00       		.byte	0
 4102 0667 07       		.uleb128 0x7
 4103 0668 99000000 		.4byte	0x99
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 94


 4104 066c 77060000 		.4byte	0x677
 4105 0670 08       		.uleb128 0x8
 4106 0671 E5000000 		.4byte	0xe5
 4107 0675 01       		.byte	0x1
 4108 0676 00       		.byte	0
 4109 0677 07       		.uleb128 0x7
 4110 0678 D7000000 		.4byte	0xd7
 4111 067c 87060000 		.4byte	0x687
 4112 0680 08       		.uleb128 0x8
 4113 0681 E5000000 		.4byte	0xe5
 4114 0685 09       		.byte	0x9
 4115 0686 00       		.byte	0
 4116 0687 12       		.uleb128 0x12
 4117 0688 F5030000 		.4byte	.LASF108
 4118 068c 01       		.byte	0x1
 4119 068d 6A       		.byte	0x6a
 4120 068e 68000000 		.4byte	0x68
 4121 0692 00000000 		.4byte	.LFB66
 4122 0696 64000000 		.4byte	.LFE66-.LFB66
 4123 069a 01       		.uleb128 0x1
 4124 069b 9C       		.byte	0x9c
 4125 069c AF060000 		.4byte	0x6af
 4126 06a0 11       		.uleb128 0x11
 4127 06a1 B1050000 		.4byte	.LASF107
 4128 06a5 01       		.byte	0x1
 4129 06a6 84       		.byte	0x84
 4130 06a7 81000000 		.4byte	0x81
 4131 06ab 02       		.uleb128 0x2
 4132 06ac 91       		.byte	0x91
 4133 06ad 77       		.sleb128 -9
 4134 06ae 00       		.byte	0
 4135 06af 13       		.uleb128 0x13
 4136 06b0 73070000 		.4byte	.LASF178
 4137 06b4 01       		.byte	0x1
 4138 06b5 94       		.byte	0x94
 4139 06b6 00000000 		.4byte	.LFB67
 4140 06ba 2A000000 		.4byte	.LFE67-.LFB67
 4141 06be 01       		.uleb128 0x1
 4142 06bf 9C       		.byte	0x9c
 4143 06c0 14       		.uleb128 0x14
 4144 06c1 37030000 		.4byte	.LASF109
 4145 06c5 01       		.byte	0x1
 4146 06c6 B9       		.byte	0xb9
 4147 06c7 00000000 		.4byte	.LFB68
 4148 06cb 50000000 		.4byte	.LFE68-.LFB68
 4149 06cf 01       		.uleb128 0x1
 4150 06d0 9C       		.byte	0x9c
 4151 06d1 E4060000 		.4byte	0x6e4
 4152 06d5 15       		.uleb128 0x15
 4153 06d6 70040000 		.4byte	.LASF110
 4154 06da 01       		.byte	0x1
 4155 06db B9       		.byte	0xb9
 4156 06dc 81000000 		.4byte	0x81
 4157 06e0 02       		.uleb128 0x2
 4158 06e1 91       		.byte	0x91
 4159 06e2 77       		.sleb128 -9
 4160 06e3 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 95


 4161 06e4 16       		.uleb128 0x16
 4162 06e5 43080000 		.4byte	.LASF114
 4163 06e9 01       		.byte	0x1
 4164 06ea D0       		.byte	0xd0
 4165 06eb 81000000 		.4byte	0x81
 4166 06ef 00000000 		.4byte	.LFB69
 4167 06f3 48000000 		.4byte	.LFE69-.LFB69
 4168 06f7 01       		.uleb128 0x1
 4169 06f8 9C       		.byte	0x9c
 4170 06f9 1A070000 		.4byte	0x71a
 4171 06fd 15       		.uleb128 0x15
 4172 06fe 99040000 		.4byte	.LASF111
 4173 0702 01       		.byte	0x1
 4174 0703 D0       		.byte	0xd0
 4175 0704 1A070000 		.4byte	0x71a
 4176 0708 02       		.uleb128 0x2
 4177 0709 91       		.byte	0x91
 4178 070a 74       		.sleb128 -12
 4179 070b 15       		.uleb128 0x15
 4180 070c 70040000 		.4byte	.LASF110
 4181 0710 01       		.byte	0x1
 4182 0711 D0       		.byte	0xd0
 4183 0712 81000000 		.4byte	0x81
 4184 0716 02       		.uleb128 0x2
 4185 0717 91       		.byte	0x91
 4186 0718 73       		.sleb128 -13
 4187 0719 00       		.byte	0
 4188 071a 06       		.uleb128 0x6
 4189 071b 04       		.byte	0x4
 4190 071c 98050000 		.4byte	0x598
 4191 0720 17       		.uleb128 0x17
 4192 0721 0A060000 		.4byte	.LASF112
 4193 0725 01       		.byte	0x1
 4194 0726 E5       		.byte	0xe5
 4195 0727 00000000 		.4byte	.LFB70
 4196 072b 1E000000 		.4byte	.LFE70-.LFB70
 4197 072f 01       		.uleb128 0x1
 4198 0730 9C       		.byte	0x9c
 4199 0731 44070000 		.4byte	0x744
 4200 0735 15       		.uleb128 0x15
 4201 0736 6D060000 		.4byte	.LASF113
 4202 073a 01       		.byte	0x1
 4203 073b E5       		.byte	0xe5
 4204 073c 1A070000 		.4byte	0x71a
 4205 0740 02       		.uleb128 0x2
 4206 0741 91       		.byte	0x91
 4207 0742 74       		.sleb128 -12
 4208 0743 00       		.byte	0
 4209 0744 18       		.uleb128 0x18
 4210 0745 40050000 		.4byte	.LASF115
 4211 0749 01       		.byte	0x1
 4212 074a EE       		.byte	0xee
 4213 074b 98050000 		.4byte	0x598
 4214 074f 00000000 		.4byte	.LFB71
 4215 0753 46000000 		.4byte	.LFE71-.LFB71
 4216 0757 01       		.uleb128 0x1
 4217 0758 9C       		.byte	0x9c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 96


 4218 0759 96070000 		.4byte	0x796
 4219 075d 15       		.uleb128 0x15
 4220 075e AA020000 		.4byte	.LASF93
 4221 0762 01       		.byte	0x1
 4222 0763 EE       		.byte	0xee
 4223 0764 8D000000 		.4byte	0x8d
 4224 0768 02       		.uleb128 0x2
 4225 0769 91       		.byte	0x91
 4226 076a 6A       		.sleb128 -22
 4227 076b 15       		.uleb128 0x15
 4228 076c FB070000 		.4byte	.LASF95
 4229 0770 01       		.byte	0x1
 4230 0771 EE       		.byte	0xee
 4231 0772 81000000 		.4byte	0x81
 4232 0776 02       		.uleb128 0x2
 4233 0777 91       		.byte	0x91
 4234 0778 69       		.sleb128 -23
 4235 0779 15       		.uleb128 0x15
 4236 077a 5A000000 		.4byte	.LASF96
 4237 077e 01       		.byte	0x1
 4238 077f EE       		.byte	0xee
 4239 0780 81000000 		.4byte	0x81
 4240 0784 02       		.uleb128 0x2
 4241 0785 91       		.byte	0x91
 4242 0786 68       		.sleb128 -24
 4243 0787 11       		.uleb128 0x11
 4244 0788 93070000 		.4byte	.LASF116
 4245 078c 01       		.byte	0x1
 4246 078d F1       		.byte	0xf1
 4247 078e 98050000 		.4byte	0x598
 4248 0792 02       		.uleb128 0x2
 4249 0793 91       		.byte	0x91
 4250 0794 70       		.sleb128 -16
 4251 0795 00       		.byte	0
 4252 0796 19       		.uleb128 0x19
 4253 0797 7C060000 		.4byte	.LASF118
 4254 079b 01       		.byte	0x1
 4255 079c 0701     		.2byte	0x107
 4256 079e 00000000 		.4byte	.LFB72
 4257 07a2 E0000000 		.4byte	.LFE72-.LFB72
 4258 07a6 01       		.uleb128 0x1
 4259 07a7 9C       		.byte	0x9c
 4260 07a8 ED070000 		.4byte	0x7ed
 4261 07ac 1A       		.uleb128 0x1a
 4262 07ad 00000000 		.4byte	.LASF119
 4263 07b1 01       		.byte	0x1
 4264 07b2 4301     		.2byte	0x143
 4265 07b4 C9010000 		.4byte	0x1c9
 4266 07b8 03       		.uleb128 0x3
 4267 07b9 91       		.byte	0x91
 4268 07ba EC7C     		.sleb128 -404
 4269 07bc 1A       		.uleb128 0x1a
 4270 07bd 5A010000 		.4byte	.LASF120
 4271 07c1 01       		.byte	0x1
 4272 07c2 4801     		.2byte	0x148
 4273 07c4 C9010000 		.4byte	0x1c9
 4274 07c8 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 97


 4275 07c9 91       		.byte	0x91
 4276 07ca E879     		.sleb128 -792
 4277 07cc 1A       		.uleb128 0x1a
 4278 07cd CE070000 		.4byte	.LASF121
 4279 07d1 01       		.byte	0x1
 4280 07d2 4C01     		.2byte	0x14c
 4281 07d4 C9010000 		.4byte	0x1c9
 4282 07d8 03       		.uleb128 0x3
 4283 07d9 91       		.byte	0x91
 4284 07da E476     		.sleb128 -1180
 4285 07dc 1A       		.uleb128 0x1a
 4286 07dd 23040000 		.4byte	.LASF122
 4287 07e1 01       		.byte	0x1
 4288 07e2 5001     		.2byte	0x150
 4289 07e4 C9010000 		.4byte	0x1c9
 4290 07e8 03       		.uleb128 0x3
 4291 07e9 91       		.byte	0x91
 4292 07ea E073     		.sleb128 -1568
 4293 07ec 00       		.byte	0
 4294 07ed 1B       		.uleb128 0x1b
 4295 07ee 59080000 		.4byte	.LASF179
 4296 07f2 01       		.byte	0x1
 4297 07f3 5A01     		.2byte	0x15a
 4298 07f5 68000000 		.4byte	0x68
 4299 07f9 00000000 		.4byte	.LFB73
 4300 07fd 1E000000 		.4byte	.LFE73-.LFB73
 4301 0801 01       		.uleb128 0x1
 4302 0802 9C       		.byte	0x9c
 4303 0803 1C       		.uleb128 0x1c
 4304 0804 5E020000 		.4byte	.LASF123
 4305 0808 01       		.byte	0x1
 4306 0809 7001     		.2byte	0x170
 4307 080b 81000000 		.4byte	0x81
 4308 080f 00000000 		.4byte	.LFB74
 4309 0813 30040000 		.4byte	.LFE74-.LFB74
 4310 0817 01       		.uleb128 0x1
 4311 0818 9C       		.byte	0x9c
 4312 0819 5D090000 		.4byte	0x95d
 4313 081d 1D       		.uleb128 0x1d
 4314 081e 62000000 		.4byte	.LBB2
 4315 0822 B8030000 		.4byte	.LBE2-.LBB2
 4316 0826 1A       		.uleb128 0x1a
 4317 0827 53050000 		.4byte	.LASF124
 4318 082b 01       		.byte	0x1
 4319 082c A001     		.2byte	0x1a0
 4320 082e 41040000 		.4byte	0x441
 4321 0832 02       		.uleb128 0x2
 4322 0833 91       		.byte	0x91
 4323 0834 48       		.sleb128 -56
 4324 0835 1A       		.uleb128 0x1a
 4325 0836 36020000 		.4byte	.LASF125
 4326 083a 01       		.byte	0x1
 4327 083b A501     		.2byte	0x1a5
 4328 083d 41040000 		.4byte	0x441
 4329 0841 03       		.uleb128 0x3
 4330 0842 91       		.byte	0x91
 4331 0843 B47F     		.sleb128 -76
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 98


 4332 0845 1A       		.uleb128 0x1a
 4333 0846 88030000 		.4byte	.LASF126
 4334 084a 01       		.byte	0x1
 4335 084b B801     		.2byte	0x1b8
 4336 084d 8D000000 		.4byte	0x8d
 4337 0851 02       		.uleb128 0x2
 4338 0852 91       		.byte	0x91
 4339 0853 66       		.sleb128 -26
 4340 0854 1A       		.uleb128 0x1a
 4341 0855 0E040000 		.4byte	.LASF127
 4342 0859 01       		.byte	0x1
 4343 085a B901     		.2byte	0x1b9
 4344 085c 41040000 		.4byte	0x441
 4345 0860 03       		.uleb128 0x3
 4346 0861 91       		.byte	0x91
 4347 0862 A07F     		.sleb128 -96
 4348 0864 1A       		.uleb128 0x1a
 4349 0865 32070000 		.4byte	.LASF128
 4350 0869 01       		.byte	0x1
 4351 086a CE01     		.2byte	0x1ce
 4352 086c 5D090000 		.4byte	0x95d
 4353 0870 03       		.uleb128 0x3
 4354 0871 91       		.byte	0x91
 4355 0872 B875     		.sleb128 -1352
 4356 0874 1A       		.uleb128 0x1a
 4357 0875 AE070000 		.4byte	.LASF30
 4358 0879 01       		.byte	0x1
 4359 087a CF01     		.2byte	0x1cf
 4360 087c 81000000 		.4byte	0x81
 4361 0880 02       		.uleb128 0x2
 4362 0881 91       		.byte	0x91
 4363 0882 65       		.sleb128 -27
 4364 0883 1A       		.uleb128 0x1a
 4365 0884 FB060000 		.4byte	.LASF129
 4366 0888 01       		.byte	0x1
 4367 0889 D601     		.2byte	0x1d6
 4368 088b EC000000 		.4byte	0xec
 4369 088f 02       		.uleb128 0x2
 4370 0890 91       		.byte	0x91
 4371 0891 6C       		.sleb128 -20
 4372 0892 1A       		.uleb128 0x1a
 4373 0893 77010000 		.4byte	.LASF130
 4374 0897 01       		.byte	0x1
 4375 0898 DA01     		.2byte	0x1da
 4376 089a A5000000 		.4byte	0xa5
 4377 089e 02       		.uleb128 0x2
 4378 089f 91       		.byte	0x91
 4379 08a0 64       		.sleb128 -28
 4380 08a1 1A       		.uleb128 0x1a
 4381 08a2 67020000 		.4byte	.LASF131
 4382 08a6 01       		.byte	0x1
 4383 08a7 0A02     		.2byte	0x20a
 4384 08a9 4C000000 		.4byte	0x4c
 4385 08ad 02       		.uleb128 0x2
 4386 08ae 91       		.byte	0x91
 4387 08af 5C       		.sleb128 -36
 4388 08b0 1E       		.uleb128 0x1e
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 99


 4389 08b1 CE000000 		.4byte	.LBB3
 4390 08b5 2C000000 		.4byte	.LBE3-.LBB3
 4391 08b9 DD080000 		.4byte	0x8dd
 4392 08bd 1A       		.uleb128 0x1a
 4393 08be A8060000 		.4byte	.LASF132
 4394 08c2 01       		.byte	0x1
 4395 08c3 AD01     		.2byte	0x1ad
 4396 08c5 8D000000 		.4byte	0x8d
 4397 08c9 02       		.uleb128 0x2
 4398 08ca 91       		.byte	0x91
 4399 08cb 68       		.sleb128 -24
 4400 08cc 1A       		.uleb128 0x1a
 4401 08cd E9010000 		.4byte	.LASF133
 4402 08d1 01       		.byte	0x1
 4403 08d2 AE01     		.2byte	0x1ae
 4404 08d4 41040000 		.4byte	0x441
 4405 08d8 03       		.uleb128 0x3
 4406 08d9 91       		.byte	0x91
 4407 08da 8C7F     		.sleb128 -116
 4408 08dc 00       		.byte	0
 4409 08dd 1E       		.uleb128 0x1e
 4410 08de FC000000 		.4byte	.LBB4
 4411 08e2 20000000 		.4byte	.LBE4-.LBB4
 4412 08e6 FB080000 		.4byte	0x8fb
 4413 08ea 1A       		.uleb128 0x1a
 4414 08eb E9010000 		.4byte	.LASF133
 4415 08ef 01       		.byte	0x1
 4416 08f0 B201     		.2byte	0x1b2
 4417 08f2 41040000 		.4byte	0x441
 4418 08f6 03       		.uleb128 0x3
 4419 08f7 91       		.byte	0x91
 4420 08f8 F87E     		.sleb128 -136
 4421 08fa 00       		.byte	0
 4422 08fb 1E       		.uleb128 0x1e
 4423 08fc 3C020000 		.4byte	.LBB5
 4424 0900 BC000000 		.4byte	.LBE5-.LBB5
 4425 0904 32090000 		.4byte	0x932
 4426 0908 1A       		.uleb128 0x1a
 4427 0909 4C050000 		.4byte	.LASF134
 4428 090d 01       		.byte	0x1
 4429 090e DF01     		.2byte	0x1df
 4430 0910 A5000000 		.4byte	0xa5
 4431 0914 02       		.uleb128 0x2
 4432 0915 91       		.byte	0x91
 4433 0916 6B       		.sleb128 -21
 4434 0917 1D       		.uleb128 0x1d
 4435 0918 44020000 		.4byte	.LBB6
 4436 091c 9A000000 		.4byte	.LBE6-.LBB6
 4437 0920 1A       		.uleb128 0x1a
 4438 0921 55030000 		.4byte	.LASF135
 4439 0925 01       		.byte	0x1
 4440 0926 E101     		.2byte	0x1e1
 4441 0928 6D090000 		.4byte	0x96d
 4442 092c 03       		.uleb128 0x3
 4443 092d 91       		.byte	0x91
 4444 092e 8077     		.sleb128 -1152
 4445 0930 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 100


 4446 0931 00       		.byte	0
 4447 0932 1D       		.uleb128 0x1d
 4448 0933 12030000 		.4byte	.LBB7
 4449 0937 3A000000 		.4byte	.LBE7-.LBB7
 4450 093b 1A       		.uleb128 0x1a
 4451 093c 44020000 		.4byte	.LASF136
 4452 0940 01       		.byte	0x1
 4453 0941 0102     		.2byte	0x201
 4454 0943 68000000 		.4byte	0x68
 4455 0947 02       		.uleb128 0x2
 4456 0948 91       		.byte	0x91
 4457 0949 60       		.sleb128 -32
 4458 094a 1A       		.uleb128 0x1a
 4459 094b 15060000 		.4byte	.LASF137
 4460 094f 01       		.byte	0x1
 4461 0950 0202     		.2byte	0x202
 4462 0952 77060000 		.4byte	0x677
 4463 0956 03       		.uleb128 0x3
 4464 0957 91       		.byte	0x91
 4465 0958 EC7E     		.sleb128 -148
 4466 095a 00       		.byte	0
 4467 095b 00       		.byte	0
 4468 095c 00       		.byte	0
 4469 095d 07       		.uleb128 0x7
 4470 095e D7000000 		.4byte	0xd7
 4471 0962 6D090000 		.4byte	0x96d
 4472 0966 08       		.uleb128 0x8
 4473 0967 E5000000 		.4byte	0xe5
 4474 096b C7       		.byte	0xc7
 4475 096c 00       		.byte	0
 4476 096d 07       		.uleb128 0x7
 4477 096e D7000000 		.4byte	0xd7
 4478 0972 7E090000 		.4byte	0x97e
 4479 0976 1F       		.uleb128 0x1f
 4480 0977 E5000000 		.4byte	0xe5
 4481 097b E803     		.2byte	0x3e8
 4482 097d 00       		.byte	0
 4483 097e 1C       		.uleb128 0x1c
 4484 097f 8D050000 		.4byte	.LASF138
 4485 0983 01       		.byte	0x1
 4486 0984 1F02     		.2byte	0x21f
 4487 0986 81000000 		.4byte	0x81
 4488 098a 00000000 		.4byte	.LFB75
 4489 098e 44000000 		.4byte	.LFE75-.LFB75
 4490 0992 01       		.uleb128 0x1
 4491 0993 9C       		.byte	0x9c
 4492 0994 B2090000 		.4byte	0x9b2
 4493 0998 1D       		.uleb128 0x1d
 4494 0999 20000000 		.4byte	.LBB8
 4495 099d 1A000000 		.4byte	.LBE8-.LBB8
 4496 09a1 1A       		.uleb128 0x1a
 4497 09a2 67020000 		.4byte	.LASF131
 4498 09a6 01       		.byte	0x1
 4499 09a7 2A02     		.2byte	0x22a
 4500 09a9 4C000000 		.4byte	0x4c
 4501 09ad 02       		.uleb128 0x2
 4502 09ae 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 101


 4503 09af 74       		.sleb128 -12
 4504 09b0 00       		.byte	0
 4505 09b1 00       		.byte	0
 4506 09b2 1C       		.uleb128 0x1c
 4507 09b3 B6030000 		.4byte	.LASF139
 4508 09b7 01       		.byte	0x1
 4509 09b8 3F02     		.2byte	0x23f
 4510 09ba 81000000 		.4byte	0x81
 4511 09be 00000000 		.4byte	.LFB76
 4512 09c2 5C0E0000 		.4byte	.LFE76-.LFB76
 4513 09c6 01       		.uleb128 0x1
 4514 09c7 9C       		.byte	0x9c
 4515 09c8 720A0000 		.4byte	0xa72
 4516 09cc 1A       		.uleb128 0x1a
 4517 09cd 13050000 		.4byte	.LASF72
 4518 09d1 01       		.byte	0x1
 4519 09d2 4202     		.2byte	0x242
 4520 09d4 4C000000 		.4byte	0x4c
 4521 09d8 02       		.uleb128 0x2
 4522 09d9 91       		.byte	0x91
 4523 09da 5C       		.sleb128 -36
 4524 09db 1A       		.uleb128 0x1a
 4525 09dc 01070000 		.4byte	.LASF140
 4526 09e0 01       		.byte	0x1
 4527 09e1 4302     		.2byte	0x243
 4528 09e3 720A0000 		.4byte	0xa72
 4529 09e7 03       		.uleb128 0x3
 4530 09e8 91       		.byte	0x91
 4531 09e9 BC7F     		.sleb128 -68
 4532 09eb 1A       		.uleb128 0x1a
 4533 09ec FB020000 		.4byte	.LASF71
 4534 09f0 01       		.byte	0x1
 4535 09f1 4702     		.2byte	0x247
 4536 09f3 41040000 		.4byte	0x441
 4537 09f7 03       		.uleb128 0x3
 4538 09f8 91       		.byte	0x91
 4539 09f9 A87F     		.sleb128 -88
 4540 09fb 1A       		.uleb128 0x1a
 4541 09fc DD060000 		.4byte	.LASF141
 4542 0a00 01       		.byte	0x1
 4543 0a01 4802     		.2byte	0x248
 4544 0a03 820A0000 		.4byte	0xa82
 4545 0a07 03       		.uleb128 0x3
 4546 0a08 91       		.byte	0x91
 4547 0a09 FC7C     		.sleb128 -388
 4548 0a0b 1A       		.uleb128 0x1a
 4549 0a0c 60030000 		.4byte	.LASF142
 4550 0a10 01       		.byte	0x1
 4551 0a11 F802     		.2byte	0x2f8
 4552 0a13 65030000 		.4byte	0x365
 4553 0a17 03       		.uleb128 0x3
 4554 0a18 91       		.byte	0x91
 4555 0a19 E87C     		.sleb128 -408
 4556 0a1b 1E       		.uleb128 0x1e
 4557 0a1c 2A000000 		.4byte	.LBB9
 4558 0a20 AE000000 		.4byte	.LBE9-.LBB9
 4559 0a24 390A0000 		.4byte	0xa39
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 102


 4560 0a28 1A       		.uleb128 0x1a
 4561 0a29 56070000 		.4byte	.LASF143
 4562 0a2d 01       		.byte	0x1
 4563 0a2e 4E02     		.2byte	0x24e
 4564 0a30 1D020000 		.4byte	0x21d
 4565 0a34 03       		.uleb128 0x3
 4566 0a35 91       		.byte	0x91
 4567 0a36 CC7C     		.sleb128 -436
 4568 0a38 00       		.byte	0
 4569 0a39 1E       		.uleb128 0x1e
 4570 0a3a E2000000 		.4byte	.LBB10
 4571 0a3e 7E0B0000 		.4byte	.LBE10-.LBB10
 4572 0a42 570A0000 		.4byte	0xa57
 4573 0a46 1A       		.uleb128 0x1a
 4574 0a47 7B070000 		.4byte	.LASF144
 4575 0a4b 01       		.byte	0x1
 4576 0a4c 6602     		.2byte	0x266
 4577 0a4e 15030000 		.4byte	0x315
 4578 0a52 03       		.uleb128 0x3
 4579 0a53 91       		.byte	0x91
 4580 0a54 E07A     		.sleb128 -672
 4581 0a56 00       		.byte	0
 4582 0a57 1D       		.uleb128 0x1d
 4583 0a58 F80C0000 		.4byte	.LBB11
 4584 0a5c FC000000 		.4byte	.LBE11-.LBB11
 4585 0a60 1A       		.uleb128 0x1a
 4586 0a61 A3070000 		.4byte	.LASF145
 4587 0a65 01       		.byte	0x1
 4588 0a66 1403     		.2byte	0x314
 4589 0a68 91030000 		.4byte	0x391
 4590 0a6c 03       		.uleb128 0x3
 4591 0a6d 91       		.byte	0x91
 4592 0a6e C47C     		.sleb128 -444
 4593 0a70 00       		.byte	0
 4594 0a71 00       		.byte	0
 4595 0a72 07       		.uleb128 0x7
 4596 0a73 D7000000 		.4byte	0xd7
 4597 0a77 820A0000 		.4byte	0xa82
 4598 0a7b 08       		.uleb128 0x8
 4599 0a7c E5000000 		.4byte	0xe5
 4600 0a80 1F       		.byte	0x1f
 4601 0a81 00       		.byte	0
 4602 0a82 07       		.uleb128 0x7
 4603 0a83 D7000000 		.4byte	0xd7
 4604 0a87 930A0000 		.4byte	0xa93
 4605 0a8b 1F       		.uleb128 0x1f
 4606 0a8c E5000000 		.4byte	0xe5
 4607 0a90 2B01     		.2byte	0x12b
 4608 0a92 00       		.byte	0
 4609 0a93 20       		.uleb128 0x20
 4610 0a94 23030000 		.4byte	.LASF146
 4611 0a98 01       		.byte	0x1
 4612 0a99 3A03     		.2byte	0x33a
 4613 0a9b 81000000 		.4byte	0x81
 4614 0a9f 00000000 		.4byte	.LFB77
 4615 0aa3 74000000 		.4byte	.LFE77-.LFB77
 4616 0aa7 01       		.uleb128 0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 103


 4617 0aa8 9C       		.byte	0x9c
 4618 0aa9 D90A0000 		.4byte	0xad9
 4619 0aad 21       		.uleb128 0x21
 4620 0aae 13050000 		.4byte	.LASF72
 4621 0ab2 01       		.byte	0x1
 4622 0ab3 3A03     		.2byte	0x33a
 4623 0ab5 4C000000 		.4byte	0x4c
 4624 0ab9 02       		.uleb128 0x2
 4625 0aba 91       		.byte	0x91
 4626 0abb 64       		.sleb128 -28
 4627 0abc 22       		.uleb128 0x22
 4628 0abd 7400     		.ascii	"t\000"
 4629 0abf 01       		.byte	0x1
 4630 0ac0 4103     		.2byte	0x341
 4631 0ac2 D90A0000 		.4byte	0xad9
 4632 0ac6 02       		.uleb128 0x2
 4633 0ac7 91       		.byte	0x91
 4634 0ac8 74       		.sleb128 -12
 4635 0ac9 1A       		.uleb128 0x1a
 4636 0aca F2040000 		.4byte	.LASF147
 4637 0ace 01       		.byte	0x1
 4638 0acf 4603     		.2byte	0x346
 4639 0ad1 6B010000 		.4byte	0x16b
 4640 0ad5 02       		.uleb128 0x2
 4641 0ad6 91       		.byte	0x91
 4642 0ad7 68       		.sleb128 -24
 4643 0ad8 00       		.byte	0
 4644 0ad9 06       		.uleb128 0x6
 4645 0ada 04       		.byte	0x4
 4646 0adb 9C030000 		.4byte	0x39c
 4647 0adf 20       		.uleb128 0x20
 4648 0ae0 B9020000 		.4byte	.LASF148
 4649 0ae4 01       		.byte	0x1
 4650 0ae5 6303     		.2byte	0x363
 4651 0ae7 81000000 		.4byte	0x81
 4652 0aeb 00000000 		.4byte	.LFB78
 4653 0aef 38010000 		.4byte	.LFE78-.LFB78
 4654 0af3 01       		.uleb128 0x1
 4655 0af4 9C       		.byte	0x9c
 4656 0af5 580B0000 		.4byte	0xb58
 4657 0af9 21       		.uleb128 0x21
 4658 0afa 01030000 		.4byte	.LASF149
 4659 0afe 01       		.byte	0x1
 4660 0aff 6303     		.2byte	0x363
 4661 0b01 EC000000 		.4byte	0xec
 4662 0b05 03       		.uleb128 0x3
 4663 0b06 91       		.byte	0x91
 4664 0b07 9C7E     		.sleb128 -228
 4665 0b09 21       		.uleb128 0x21
 4666 0b0a DB020000 		.4byte	.LASF150
 4667 0b0e 01       		.byte	0x1
 4668 0b0f 6303     		.2byte	0x363
 4669 0b11 68000000 		.4byte	0x68
 4670 0b15 03       		.uleb128 0x3
 4671 0b16 91       		.byte	0x91
 4672 0b17 987E     		.sleb128 -232
 4673 0b19 21       		.uleb128 0x21
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 104


 4674 0b1a 93040000 		.4byte	.LASF151
 4675 0b1e 01       		.byte	0x1
 4676 0b1f 6303     		.2byte	0x363
 4677 0b21 EC000000 		.4byte	0xec
 4678 0b25 03       		.uleb128 0x3
 4679 0b26 91       		.byte	0x91
 4680 0b27 947E     		.sleb128 -236
 4681 0b29 1A       		.uleb128 0x1a
 4682 0b2a DA010000 		.4byte	.LASF152
 4683 0b2e 01       		.byte	0x1
 4684 0b2f 6503     		.2byte	0x365
 4685 0b31 81000000 		.4byte	0x81
 4686 0b35 02       		.uleb128 0x2
 4687 0b36 91       		.byte	0x91
 4688 0b37 77       		.sleb128 -9
 4689 0b38 1A       		.uleb128 0x1a
 4690 0b39 45000000 		.4byte	.LASF153
 4691 0b3d 01       		.byte	0x1
 4692 0b3e 6C03     		.2byte	0x36c
 4693 0b40 580B0000 		.4byte	0xb58
 4694 0b44 02       		.uleb128 0x2
 4695 0b45 91       		.byte	0x91
 4696 0b46 68       		.sleb128 -24
 4697 0b47 1A       		.uleb128 0x1a
 4698 0b48 32070000 		.4byte	.LASF128
 4699 0b4c 01       		.byte	0x1
 4700 0b4d 7403     		.2byte	0x374
 4701 0b4f 5D090000 		.4byte	0x95d
 4702 0b53 03       		.uleb128 0x3
 4703 0b54 91       		.byte	0x91
 4704 0b55 A07E     		.sleb128 -224
 4705 0b57 00       		.byte	0
 4706 0b58 07       		.uleb128 0x7
 4707 0b59 D7000000 		.4byte	0xd7
 4708 0b5d 680B0000 		.4byte	0xb68
 4709 0b61 08       		.uleb128 0x8
 4710 0b62 E5000000 		.4byte	0xe5
 4711 0b66 0B       		.byte	0xb
 4712 0b67 00       		.byte	0
 4713 0b68 23       		.uleb128 0x23
 4714 0b69 4D010000 		.4byte	.LASF154
 4715 0b6d 0E       		.byte	0xe
 4716 0b6e 1207     		.2byte	0x712
 4717 0b70 740B0000 		.4byte	0xb74
 4718 0b74 0C       		.uleb128 0xc
 4719 0b75 76000000 		.4byte	0x76
 4720 0b79 24       		.uleb128 0x24
 4721 0b7a 35000000 		.4byte	.LASF155
 4722 0b7e 0B       		.byte	0xb
 4723 0b7f 11       		.byte	0x11
 4724 0b80 4D050000 		.4byte	0x54d
 4725 0b84 05       		.uleb128 0x5
 4726 0b85 03       		.byte	0x3
 4727 0b86 00000000 		.4byte	buffer_overflow
 4728 0b8a 24       		.uleb128 0x24
 4729 0b8b 7A040000 		.4byte	.LASF156
 4730 0b8f 0B       		.byte	0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 105


 4731 0b90 22       		.byte	0x22
 4732 0b91 8D000000 		.4byte	0x8d
 4733 0b95 05       		.uleb128 0x5
 4734 0b96 03       		.byte	0x3
 4735 0b97 00000000 		.4byte	dataPointsInStack
 4736 0b9b 24       		.uleb128 0x24
 4737 0b9c B5070000 		.4byte	.LASF157
 4738 0ba0 0B       		.byte	0xb
 4739 0ba1 23       		.byte	0x23
 4740 0ba2 8D000000 		.4byte	0x8d
 4741 0ba6 05       		.uleb128 0x5
 4742 0ba7 03       		.byte	0x3
 4743 0ba8 00000000 		.4byte	dataPointsInStackDesired
 4744 0bac 07       		.uleb128 0x7
 4745 0bad 51040000 		.4byte	0x451
 4746 0bb1 BC0B0000 		.4byte	0xbbc
 4747 0bb5 08       		.uleb128 0x8
 4748 0bb6 E5000000 		.4byte	0xe5
 4749 0bba 95       		.byte	0x95
 4750 0bbb 00       		.byte	0
 4751 0bbc 24       		.uleb128 0x24
 4752 0bbd C7030000 		.4byte	.LASF158
 4753 0bc1 0B       		.byte	0xb
 4754 0bc2 24       		.byte	0x24
 4755 0bc3 AC0B0000 		.4byte	0xbac
 4756 0bc7 05       		.uleb128 0x5
 4757 0bc8 03       		.byte	0x3
 4758 0bc9 00000000 		.4byte	data
 4759 0bcd 24       		.uleb128 0x24
 4760 0bce 34010000 		.4byte	.LASF159
 4761 0bd2 0C       		.byte	0xc
 4762 0bd3 20       		.byte	0x20
 4763 0bd4 81000000 		.4byte	0x81
 4764 0bd8 05       		.uleb128 0x5
 4765 0bd9 03       		.byte	0x3
 4766 0bda 00000000 		.4byte	modem_state
 4767 0bde 24       		.uleb128 0x24
 4768 0bdf 37040000 		.4byte	.LASF160
 4769 0be3 0C       		.byte	0xc
 4770 0be4 63       		.byte	0x63
 4771 0be5 BD000000 		.4byte	0xbd
 4772 0be9 05       		.uleb128 0x5
 4773 0bea 03       		.byte	0x3
 4774 0beb 00000000 		.4byte	modem_start_time_stamp
 4775 0bef 24       		.uleb128 0x24
 4776 0bf0 DD030000 		.4byte	.LASF98
 4777 0bf4 0C       		.byte	0xc
 4778 0bf5 64       		.byte	0x64
 4779 0bf6 89040000 		.4byte	0x489
 4780 0bfa 05       		.uleb128 0x5
 4781 0bfb 03       		.byte	0x3
 4782 0bfc 00000000 		.4byte	modem_info
 4783 0c00 24       		.uleb128 0x24
 4784 0c01 1B070000 		.4byte	.LASF161
 4785 0c05 0C       		.byte	0xc
 4786 0c06 65       		.byte	0x65
 4787 0c07 FD040000 		.4byte	0x4fd
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 106


 4788 0c0b 05       		.uleb128 0x5
 4789 0c0c 03       		.byte	0x3
 4790 0c0d 00000000 		.4byte	modem_stats
 4791 0c11 24       		.uleb128 0x24
 4792 0c12 2B050000 		.4byte	.LASF162
 4793 0c16 0C       		.byte	0xc
 4794 0c17 66       		.byte	0x66
 4795 0c18 54050000 		.4byte	0x554
 4796 0c1c 05       		.uleb128 0x5
 4797 0c1d 03       		.byte	0x3
 4798 0c1e 00000000 		.4byte	updatable_parameters
 4799 0c22 07       		.uleb128 0x7
 4800 0c23 D7000000 		.4byte	0xd7
 4801 0c27 330C0000 		.4byte	0xc33
 4802 0c2b 1F       		.uleb128 0x1f
 4803 0c2c E5000000 		.4byte	0xe5
 4804 0c30 0F27     		.2byte	0x270f
 4805 0c32 00       		.byte	0
 4806 0c33 24       		.uleb128 0x24
 4807 0c34 6B050000 		.4byte	.LASF163
 4808 0c38 0D       		.byte	0xd
 4809 0c39 18       		.byte	0x18
 4810 0c3a 220C0000 		.4byte	0xc22
 4811 0c3e 05       		.uleb128 0x5
 4812 0c3f 03       		.byte	0x3
 4813 0c40 00000000 		.4byte	http_request
 4814 0c44 24       		.uleb128 0x24
 4815 0c45 EB070000 		.4byte	.LASF164
 4816 0c49 0D       		.byte	0xd
 4817 0c4a 19       		.byte	0x19
 4818 0c4b 220C0000 		.4byte	0xc22
 4819 0c4f 05       		.uleb128 0x5
 4820 0c50 03       		.byte	0x3
 4821 0c51 00000000 		.4byte	http_body
 4822 0c55 24       		.uleb128 0x24
 4823 0c56 27070000 		.4byte	.LASF165
 4824 0c5a 0D       		.byte	0xd
 4825 0c5b 1A       		.byte	0x1a
 4826 0c5c 5D090000 		.4byte	0x95d
 4827 0c60 05       		.uleb128 0x5
 4828 0c61 03       		.byte	0x3
 4829 0c62 00000000 		.4byte	http_route
 4830 0c66 24       		.uleb128 0x24
 4831 0c67 55060000 		.4byte	.LASF166
 4832 0c6b 0D       		.byte	0xd
 4833 0c6c 41       		.byte	0x41
 4834 0c6d CF050000 		.4byte	0x5cf
 4835 0c71 05       		.uleb128 0x5
 4836 0c72 03       		.byte	0x3
 4837 0c73 00000000 		.4byte	system_info
 4838 0c77 24       		.uleb128 0x24
 4839 0c78 F0050000 		.4byte	.LASF167
 4840 0c7c 0D       		.byte	0xd
 4841 0c7d 53       		.byte	0x53
 4842 0c7e 0B060000 		.4byte	0x60b
 4843 0c82 05       		.uleb128 0x5
 4844 0c83 03       		.byte	0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 107


 4845 0c84 00000000 		.4byte	system_settings
 4846 0c88 24       		.uleb128 0x24
 4847 0c89 40010000 		.4byte	.LASF168
 4848 0c8d 0D       		.byte	0xd
 4849 0c8e 6F       		.byte	0x6f
 4850 0c8f 98050000 		.4byte	0x598
 4851 0c93 05       		.uleb128 0x5
 4852 0c94 03       		.byte	0x3
 4853 0c95 00000000 		.4byte	alarmMeasure
 4854 0c99 24       		.uleb128 0x24
 4855 0c9a 84010000 		.4byte	.LASF169
 4856 0c9e 0D       		.byte	0xd
 4857 0c9f 70       		.byte	0x70
 4858 0ca0 81000000 		.4byte	0x81
 4859 0ca4 05       		.uleb128 0x5
 4860 0ca5 03       		.byte	0x3
 4861 0ca6 00000000 		.4byte	timeToMeasure
 4862 0caa 24       		.uleb128 0x24
 4863 0cab 0C030000 		.4byte	.LASF170
 4864 0caf 0D       		.byte	0xd
 4865 0cb0 71       		.byte	0x71
 4866 0cb1 98050000 		.4byte	0x598
 4867 0cb5 05       		.uleb128 0x5
 4868 0cb6 03       		.byte	0x3
 4869 0cb7 00000000 		.4byte	alarmSync
 4870 0cbb 24       		.uleb128 0x24
 4871 0cbc AA010000 		.4byte	.LASF171
 4872 0cc0 0D       		.byte	0xd
 4873 0cc1 72       		.byte	0x72
 4874 0cc2 81000000 		.4byte	0x81
 4875 0cc6 05       		.uleb128 0x5
 4876 0cc7 03       		.byte	0x3
 4877 0cc8 00000000 		.4byte	timeToSync
 4878 0ccc 24       		.uleb128 0x24
 4879 0ccd FC040000 		.4byte	.LASF172
 4880 0cd1 0D       		.byte	0xd
 4881 0cd2 73       		.byte	0x73
 4882 0cd3 81000000 		.4byte	0x81
 4883 0cd7 05       		.uleb128 0x5
 4884 0cd8 03       		.byte	0x3
 4885 0cd9 00000000 		.4byte	timeToSycnRemoteParams
 4886 0cdd 25       		.uleb128 0x25
 4887 0cde 68657900 		.ascii	"hey\000"
 4888 0ce2 0D       		.byte	0xd
 4889 0ce3 74       		.byte	0x74
 4890 0ce4 81000000 		.4byte	0x81
 4891 0ce8 05       		.uleb128 0x5
 4892 0ce9 03       		.byte	0x3
 4893 0cea 00000000 		.4byte	hey
 4894 0cee 07       		.uleb128 0x7
 4895 0cef D7000000 		.4byte	0xd7
 4896 0cf3 FE0C0000 		.4byte	0xcfe
 4897 0cf7 08       		.uleb128 0x8
 4898 0cf8 E5000000 		.4byte	0xe5
 4899 0cfc 1D       		.byte	0x1d
 4900 0cfd 00       		.byte	0
 4901 0cfe 24       		.uleb128 0x24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 108


 4902 0cff A3050000 		.4byte	.LASF173
 4903 0d03 01       		.byte	0x1
 4904 0d04 1D       		.byte	0x1d
 4905 0d05 EE0C0000 		.4byte	0xcee
 4906 0d09 05       		.uleb128 0x5
 4907 0d0a 03       		.byte	0x3
 4908 0d0b 00000000 		.4byte	Data_fileName
 4909 0d0f 24       		.uleb128 0x24
 4910 0d10 7C030000 		.4byte	.LASF106
 4911 0d14 01       		.byte	0x1
 4912 0d15 1E       		.byte	0x1e
 4913 0d16 81000000 		.4byte	0x81
 4914 0d1a 05       		.uleb128 0x5
 4915 0d1b 03       		.byte	0x3
 4916 0d1c 00000000 		.4byte	try_counter
 4917 0d20 00       		.byte	0
 4918              		.section	.debug_abbrev,"",%progbits
 4919              	.Ldebug_abbrev0:
 4920 0000 01       		.uleb128 0x1
 4921 0001 11       		.uleb128 0x11
 4922 0002 01       		.byte	0x1
 4923 0003 25       		.uleb128 0x25
 4924 0004 0E       		.uleb128 0xe
 4925 0005 13       		.uleb128 0x13
 4926 0006 0B       		.uleb128 0xb
 4927 0007 03       		.uleb128 0x3
 4928 0008 0E       		.uleb128 0xe
 4929 0009 1B       		.uleb128 0x1b
 4930 000a 0E       		.uleb128 0xe
 4931 000b 55       		.uleb128 0x55
 4932 000c 17       		.uleb128 0x17
 4933 000d 11       		.uleb128 0x11
 4934 000e 01       		.uleb128 0x1
 4935 000f 10       		.uleb128 0x10
 4936 0010 17       		.uleb128 0x17
 4937 0011 00       		.byte	0
 4938 0012 00       		.byte	0
 4939 0013 02       		.uleb128 0x2
 4940 0014 24       		.uleb128 0x24
 4941 0015 00       		.byte	0
 4942 0016 0B       		.uleb128 0xb
 4943 0017 0B       		.uleb128 0xb
 4944 0018 3E       		.uleb128 0x3e
 4945 0019 0B       		.uleb128 0xb
 4946 001a 03       		.uleb128 0x3
 4947 001b 0E       		.uleb128 0xe
 4948 001c 00       		.byte	0
 4949 001d 00       		.byte	0
 4950 001e 03       		.uleb128 0x3
 4951 001f 16       		.uleb128 0x16
 4952 0020 00       		.byte	0
 4953 0021 03       		.uleb128 0x3
 4954 0022 0E       		.uleb128 0xe
 4955 0023 3A       		.uleb128 0x3a
 4956 0024 0B       		.uleb128 0xb
 4957 0025 3B       		.uleb128 0x3b
 4958 0026 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 109


 4959 0027 49       		.uleb128 0x49
 4960 0028 13       		.uleb128 0x13
 4961 0029 00       		.byte	0
 4962 002a 00       		.byte	0
 4963 002b 04       		.uleb128 0x4
 4964 002c 24       		.uleb128 0x24
 4965 002d 00       		.byte	0
 4966 002e 0B       		.uleb128 0xb
 4967 002f 0B       		.uleb128 0xb
 4968 0030 3E       		.uleb128 0x3e
 4969 0031 0B       		.uleb128 0xb
 4970 0032 03       		.uleb128 0x3
 4971 0033 08       		.uleb128 0x8
 4972 0034 00       		.byte	0
 4973 0035 00       		.byte	0
 4974 0036 05       		.uleb128 0x5
 4975 0037 16       		.uleb128 0x16
 4976 0038 00       		.byte	0
 4977 0039 03       		.uleb128 0x3
 4978 003a 0E       		.uleb128 0xe
 4979 003b 3A       		.uleb128 0x3a
 4980 003c 0B       		.uleb128 0xb
 4981 003d 3B       		.uleb128 0x3b
 4982 003e 05       		.uleb128 0x5
 4983 003f 49       		.uleb128 0x49
 4984 0040 13       		.uleb128 0x13
 4985 0041 00       		.byte	0
 4986 0042 00       		.byte	0
 4987 0043 06       		.uleb128 0x6
 4988 0044 0F       		.uleb128 0xf
 4989 0045 00       		.byte	0
 4990 0046 0B       		.uleb128 0xb
 4991 0047 0B       		.uleb128 0xb
 4992 0048 49       		.uleb128 0x49
 4993 0049 13       		.uleb128 0x13
 4994 004a 00       		.byte	0
 4995 004b 00       		.byte	0
 4996 004c 07       		.uleb128 0x7
 4997 004d 01       		.uleb128 0x1
 4998 004e 01       		.byte	0x1
 4999 004f 49       		.uleb128 0x49
 5000 0050 13       		.uleb128 0x13
 5001 0051 01       		.uleb128 0x1
 5002 0052 13       		.uleb128 0x13
 5003 0053 00       		.byte	0
 5004 0054 00       		.byte	0
 5005 0055 08       		.uleb128 0x8
 5006 0056 21       		.uleb128 0x21
 5007 0057 00       		.byte	0
 5008 0058 49       		.uleb128 0x49
 5009 0059 13       		.uleb128 0x13
 5010 005a 2F       		.uleb128 0x2f
 5011 005b 0B       		.uleb128 0xb
 5012 005c 00       		.byte	0
 5013 005d 00       		.byte	0
 5014 005e 09       		.uleb128 0x9
 5015 005f 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 110


 5016 0060 01       		.byte	0x1
 5017 0061 0B       		.uleb128 0xb
 5018 0062 0B       		.uleb128 0xb
 5019 0063 3A       		.uleb128 0x3a
 5020 0064 0B       		.uleb128 0xb
 5021 0065 3B       		.uleb128 0x3b
 5022 0066 0B       		.uleb128 0xb
 5023 0067 01       		.uleb128 0x1
 5024 0068 13       		.uleb128 0x13
 5025 0069 00       		.byte	0
 5026 006a 00       		.byte	0
 5027 006b 0A       		.uleb128 0xa
 5028 006c 0D       		.uleb128 0xd
 5029 006d 00       		.byte	0
 5030 006e 03       		.uleb128 0x3
 5031 006f 08       		.uleb128 0x8
 5032 0070 3A       		.uleb128 0x3a
 5033 0071 0B       		.uleb128 0xb
 5034 0072 3B       		.uleb128 0x3b
 5035 0073 0B       		.uleb128 0xb
 5036 0074 49       		.uleb128 0x49
 5037 0075 13       		.uleb128 0x13
 5038 0076 38       		.uleb128 0x38
 5039 0077 0B       		.uleb128 0xb
 5040 0078 00       		.byte	0
 5041 0079 00       		.byte	0
 5042 007a 0B       		.uleb128 0xb
 5043 007b 0D       		.uleb128 0xd
 5044 007c 00       		.byte	0
 5045 007d 03       		.uleb128 0x3
 5046 007e 0E       		.uleb128 0xe
 5047 007f 3A       		.uleb128 0x3a
 5048 0080 0B       		.uleb128 0xb
 5049 0081 3B       		.uleb128 0x3b
 5050 0082 0B       		.uleb128 0xb
 5051 0083 49       		.uleb128 0x49
 5052 0084 13       		.uleb128 0x13
 5053 0085 38       		.uleb128 0x38
 5054 0086 0B       		.uleb128 0xb
 5055 0087 00       		.byte	0
 5056 0088 00       		.byte	0
 5057 0089 0C       		.uleb128 0xc
 5058 008a 35       		.uleb128 0x35
 5059 008b 00       		.byte	0
 5060 008c 49       		.uleb128 0x49
 5061 008d 13       		.uleb128 0x13
 5062 008e 00       		.byte	0
 5063 008f 00       		.byte	0
 5064 0090 0D       		.uleb128 0xd
 5065 0091 13       		.uleb128 0x13
 5066 0092 01       		.byte	0x1
 5067 0093 0B       		.uleb128 0xb
 5068 0094 05       		.uleb128 0x5
 5069 0095 3A       		.uleb128 0x3a
 5070 0096 0B       		.uleb128 0xb
 5071 0097 3B       		.uleb128 0x3b
 5072 0098 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 111


 5073 0099 01       		.uleb128 0x1
 5074 009a 13       		.uleb128 0x13
 5075 009b 00       		.byte	0
 5076 009c 00       		.byte	0
 5077 009d 0E       		.uleb128 0xe
 5078 009e 13       		.uleb128 0x13
 5079 009f 01       		.byte	0x1
 5080 00a0 03       		.uleb128 0x3
 5081 00a1 08       		.uleb128 0x8
 5082 00a2 0B       		.uleb128 0xb
 5083 00a3 0B       		.uleb128 0xb
 5084 00a4 3A       		.uleb128 0x3a
 5085 00a5 0B       		.uleb128 0xb
 5086 00a6 3B       		.uleb128 0x3b
 5087 00a7 0B       		.uleb128 0xb
 5088 00a8 01       		.uleb128 0x1
 5089 00a9 13       		.uleb128 0x13
 5090 00aa 00       		.byte	0
 5091 00ab 00       		.byte	0
 5092 00ac 0F       		.uleb128 0xf
 5093 00ad 2E       		.uleb128 0x2e
 5094 00ae 00       		.byte	0
 5095 00af 3F       		.uleb128 0x3f
 5096 00b0 19       		.uleb128 0x19
 5097 00b1 03       		.uleb128 0x3
 5098 00b2 0E       		.uleb128 0xe
 5099 00b3 3A       		.uleb128 0x3a
 5100 00b4 0B       		.uleb128 0xb
 5101 00b5 3B       		.uleb128 0x3b
 5102 00b6 0B       		.uleb128 0xb
 5103 00b7 27       		.uleb128 0x27
 5104 00b8 19       		.uleb128 0x19
 5105 00b9 11       		.uleb128 0x11
 5106 00ba 01       		.uleb128 0x1
 5107 00bb 12       		.uleb128 0x12
 5108 00bc 06       		.uleb128 0x6
 5109 00bd 40       		.uleb128 0x40
 5110 00be 18       		.uleb128 0x18
 5111 00bf 9642     		.uleb128 0x2116
 5112 00c1 19       		.uleb128 0x19
 5113 00c2 00       		.byte	0
 5114 00c3 00       		.byte	0
 5115 00c4 10       		.uleb128 0x10
 5116 00c5 2E       		.uleb128 0x2e
 5117 00c6 01       		.byte	0x1
 5118 00c7 3F       		.uleb128 0x3f
 5119 00c8 19       		.uleb128 0x19
 5120 00c9 03       		.uleb128 0x3
 5121 00ca 0E       		.uleb128 0xe
 5122 00cb 3A       		.uleb128 0x3a
 5123 00cc 0B       		.uleb128 0xb
 5124 00cd 3B       		.uleb128 0x3b
 5125 00ce 0B       		.uleb128 0xb
 5126 00cf 11       		.uleb128 0x11
 5127 00d0 01       		.uleb128 0x1
 5128 00d1 12       		.uleb128 0x12
 5129 00d2 06       		.uleb128 0x6
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 112


 5130 00d3 40       		.uleb128 0x40
 5131 00d4 18       		.uleb128 0x18
 5132 00d5 9642     		.uleb128 0x2116
 5133 00d7 19       		.uleb128 0x19
 5134 00d8 01       		.uleb128 0x1
 5135 00d9 13       		.uleb128 0x13
 5136 00da 00       		.byte	0
 5137 00db 00       		.byte	0
 5138 00dc 11       		.uleb128 0x11
 5139 00dd 34       		.uleb128 0x34
 5140 00de 00       		.byte	0
 5141 00df 03       		.uleb128 0x3
 5142 00e0 0E       		.uleb128 0xe
 5143 00e1 3A       		.uleb128 0x3a
 5144 00e2 0B       		.uleb128 0xb
 5145 00e3 3B       		.uleb128 0x3b
 5146 00e4 0B       		.uleb128 0xb
 5147 00e5 49       		.uleb128 0x49
 5148 00e6 13       		.uleb128 0x13
 5149 00e7 02       		.uleb128 0x2
 5150 00e8 18       		.uleb128 0x18
 5151 00e9 00       		.byte	0
 5152 00ea 00       		.byte	0
 5153 00eb 12       		.uleb128 0x12
 5154 00ec 2E       		.uleb128 0x2e
 5155 00ed 01       		.byte	0x1
 5156 00ee 3F       		.uleb128 0x3f
 5157 00ef 19       		.uleb128 0x19
 5158 00f0 03       		.uleb128 0x3
 5159 00f1 0E       		.uleb128 0xe
 5160 00f2 3A       		.uleb128 0x3a
 5161 00f3 0B       		.uleb128 0xb
 5162 00f4 3B       		.uleb128 0x3b
 5163 00f5 0B       		.uleb128 0xb
 5164 00f6 49       		.uleb128 0x49
 5165 00f7 13       		.uleb128 0x13
 5166 00f8 11       		.uleb128 0x11
 5167 00f9 01       		.uleb128 0x1
 5168 00fa 12       		.uleb128 0x12
 5169 00fb 06       		.uleb128 0x6
 5170 00fc 40       		.uleb128 0x40
 5171 00fd 18       		.uleb128 0x18
 5172 00fe 9642     		.uleb128 0x2116
 5173 0100 19       		.uleb128 0x19
 5174 0101 01       		.uleb128 0x1
 5175 0102 13       		.uleb128 0x13
 5176 0103 00       		.byte	0
 5177 0104 00       		.byte	0
 5178 0105 13       		.uleb128 0x13
 5179 0106 2E       		.uleb128 0x2e
 5180 0107 00       		.byte	0
 5181 0108 3F       		.uleb128 0x3f
 5182 0109 19       		.uleb128 0x19
 5183 010a 03       		.uleb128 0x3
 5184 010b 0E       		.uleb128 0xe
 5185 010c 3A       		.uleb128 0x3a
 5186 010d 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 113


 5187 010e 3B       		.uleb128 0x3b
 5188 010f 0B       		.uleb128 0xb
 5189 0110 11       		.uleb128 0x11
 5190 0111 01       		.uleb128 0x1
 5191 0112 12       		.uleb128 0x12
 5192 0113 06       		.uleb128 0x6
 5193 0114 40       		.uleb128 0x40
 5194 0115 18       		.uleb128 0x18
 5195 0116 9642     		.uleb128 0x2116
 5196 0118 19       		.uleb128 0x19
 5197 0119 00       		.byte	0
 5198 011a 00       		.byte	0
 5199 011b 14       		.uleb128 0x14
 5200 011c 2E       		.uleb128 0x2e
 5201 011d 01       		.byte	0x1
 5202 011e 3F       		.uleb128 0x3f
 5203 011f 19       		.uleb128 0x19
 5204 0120 03       		.uleb128 0x3
 5205 0121 0E       		.uleb128 0xe
 5206 0122 3A       		.uleb128 0x3a
 5207 0123 0B       		.uleb128 0xb
 5208 0124 3B       		.uleb128 0x3b
 5209 0125 0B       		.uleb128 0xb
 5210 0126 27       		.uleb128 0x27
 5211 0127 19       		.uleb128 0x19
 5212 0128 11       		.uleb128 0x11
 5213 0129 01       		.uleb128 0x1
 5214 012a 12       		.uleb128 0x12
 5215 012b 06       		.uleb128 0x6
 5216 012c 40       		.uleb128 0x40
 5217 012d 18       		.uleb128 0x18
 5218 012e 9642     		.uleb128 0x2116
 5219 0130 19       		.uleb128 0x19
 5220 0131 01       		.uleb128 0x1
 5221 0132 13       		.uleb128 0x13
 5222 0133 00       		.byte	0
 5223 0134 00       		.byte	0
 5224 0135 15       		.uleb128 0x15
 5225 0136 05       		.uleb128 0x5
 5226 0137 00       		.byte	0
 5227 0138 03       		.uleb128 0x3
 5228 0139 0E       		.uleb128 0xe
 5229 013a 3A       		.uleb128 0x3a
 5230 013b 0B       		.uleb128 0xb
 5231 013c 3B       		.uleb128 0x3b
 5232 013d 0B       		.uleb128 0xb
 5233 013e 49       		.uleb128 0x49
 5234 013f 13       		.uleb128 0x13
 5235 0140 02       		.uleb128 0x2
 5236 0141 18       		.uleb128 0x18
 5237 0142 00       		.byte	0
 5238 0143 00       		.byte	0
 5239 0144 16       		.uleb128 0x16
 5240 0145 2E       		.uleb128 0x2e
 5241 0146 01       		.byte	0x1
 5242 0147 3F       		.uleb128 0x3f
 5243 0148 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 114


 5244 0149 03       		.uleb128 0x3
 5245 014a 0E       		.uleb128 0xe
 5246 014b 3A       		.uleb128 0x3a
 5247 014c 0B       		.uleb128 0xb
 5248 014d 3B       		.uleb128 0x3b
 5249 014e 0B       		.uleb128 0xb
 5250 014f 27       		.uleb128 0x27
 5251 0150 19       		.uleb128 0x19
 5252 0151 49       		.uleb128 0x49
 5253 0152 13       		.uleb128 0x13
 5254 0153 11       		.uleb128 0x11
 5255 0154 01       		.uleb128 0x1
 5256 0155 12       		.uleb128 0x12
 5257 0156 06       		.uleb128 0x6
 5258 0157 40       		.uleb128 0x40
 5259 0158 18       		.uleb128 0x18
 5260 0159 9642     		.uleb128 0x2116
 5261 015b 19       		.uleb128 0x19
 5262 015c 01       		.uleb128 0x1
 5263 015d 13       		.uleb128 0x13
 5264 015e 00       		.byte	0
 5265 015f 00       		.byte	0
 5266 0160 17       		.uleb128 0x17
 5267 0161 2E       		.uleb128 0x2e
 5268 0162 01       		.byte	0x1
 5269 0163 3F       		.uleb128 0x3f
 5270 0164 19       		.uleb128 0x19
 5271 0165 03       		.uleb128 0x3
 5272 0166 0E       		.uleb128 0xe
 5273 0167 3A       		.uleb128 0x3a
 5274 0168 0B       		.uleb128 0xb
 5275 0169 3B       		.uleb128 0x3b
 5276 016a 0B       		.uleb128 0xb
 5277 016b 27       		.uleb128 0x27
 5278 016c 19       		.uleb128 0x19
 5279 016d 11       		.uleb128 0x11
 5280 016e 01       		.uleb128 0x1
 5281 016f 12       		.uleb128 0x12
 5282 0170 06       		.uleb128 0x6
 5283 0171 40       		.uleb128 0x40
 5284 0172 18       		.uleb128 0x18
 5285 0173 9742     		.uleb128 0x2117
 5286 0175 19       		.uleb128 0x19
 5287 0176 01       		.uleb128 0x1
 5288 0177 13       		.uleb128 0x13
 5289 0178 00       		.byte	0
 5290 0179 00       		.byte	0
 5291 017a 18       		.uleb128 0x18
 5292 017b 2E       		.uleb128 0x2e
 5293 017c 01       		.byte	0x1
 5294 017d 3F       		.uleb128 0x3f
 5295 017e 19       		.uleb128 0x19
 5296 017f 03       		.uleb128 0x3
 5297 0180 0E       		.uleb128 0xe
 5298 0181 3A       		.uleb128 0x3a
 5299 0182 0B       		.uleb128 0xb
 5300 0183 3B       		.uleb128 0x3b
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 115


 5301 0184 0B       		.uleb128 0xb
 5302 0185 27       		.uleb128 0x27
 5303 0186 19       		.uleb128 0x19
 5304 0187 49       		.uleb128 0x49
 5305 0188 13       		.uleb128 0x13
 5306 0189 11       		.uleb128 0x11
 5307 018a 01       		.uleb128 0x1
 5308 018b 12       		.uleb128 0x12
 5309 018c 06       		.uleb128 0x6
 5310 018d 40       		.uleb128 0x40
 5311 018e 18       		.uleb128 0x18
 5312 018f 9742     		.uleb128 0x2117
 5313 0191 19       		.uleb128 0x19
 5314 0192 01       		.uleb128 0x1
 5315 0193 13       		.uleb128 0x13
 5316 0194 00       		.byte	0
 5317 0195 00       		.byte	0
 5318 0196 19       		.uleb128 0x19
 5319 0197 2E       		.uleb128 0x2e
 5320 0198 01       		.byte	0x1
 5321 0199 3F       		.uleb128 0x3f
 5322 019a 19       		.uleb128 0x19
 5323 019b 03       		.uleb128 0x3
 5324 019c 0E       		.uleb128 0xe
 5325 019d 3A       		.uleb128 0x3a
 5326 019e 0B       		.uleb128 0xb
 5327 019f 3B       		.uleb128 0x3b
 5328 01a0 05       		.uleb128 0x5
 5329 01a1 11       		.uleb128 0x11
 5330 01a2 01       		.uleb128 0x1
 5331 01a3 12       		.uleb128 0x12
 5332 01a4 06       		.uleb128 0x6
 5333 01a5 40       		.uleb128 0x40
 5334 01a6 18       		.uleb128 0x18
 5335 01a7 9642     		.uleb128 0x2116
 5336 01a9 19       		.uleb128 0x19
 5337 01aa 01       		.uleb128 0x1
 5338 01ab 13       		.uleb128 0x13
 5339 01ac 00       		.byte	0
 5340 01ad 00       		.byte	0
 5341 01ae 1A       		.uleb128 0x1a
 5342 01af 34       		.uleb128 0x34
 5343 01b0 00       		.byte	0
 5344 01b1 03       		.uleb128 0x3
 5345 01b2 0E       		.uleb128 0xe
 5346 01b3 3A       		.uleb128 0x3a
 5347 01b4 0B       		.uleb128 0xb
 5348 01b5 3B       		.uleb128 0x3b
 5349 01b6 05       		.uleb128 0x5
 5350 01b7 49       		.uleb128 0x49
 5351 01b8 13       		.uleb128 0x13
 5352 01b9 02       		.uleb128 0x2
 5353 01ba 18       		.uleb128 0x18
 5354 01bb 00       		.byte	0
 5355 01bc 00       		.byte	0
 5356 01bd 1B       		.uleb128 0x1b
 5357 01be 2E       		.uleb128 0x2e
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 116


 5358 01bf 00       		.byte	0
 5359 01c0 3F       		.uleb128 0x3f
 5360 01c1 19       		.uleb128 0x19
 5361 01c2 03       		.uleb128 0x3
 5362 01c3 0E       		.uleb128 0xe
 5363 01c4 3A       		.uleb128 0x3a
 5364 01c5 0B       		.uleb128 0xb
 5365 01c6 3B       		.uleb128 0x3b
 5366 01c7 05       		.uleb128 0x5
 5367 01c8 27       		.uleb128 0x27
 5368 01c9 19       		.uleb128 0x19
 5369 01ca 49       		.uleb128 0x49
 5370 01cb 13       		.uleb128 0x13
 5371 01cc 11       		.uleb128 0x11
 5372 01cd 01       		.uleb128 0x1
 5373 01ce 12       		.uleb128 0x12
 5374 01cf 06       		.uleb128 0x6
 5375 01d0 40       		.uleb128 0x40
 5376 01d1 18       		.uleb128 0x18
 5377 01d2 9642     		.uleb128 0x2116
 5378 01d4 19       		.uleb128 0x19
 5379 01d5 00       		.byte	0
 5380 01d6 00       		.byte	0
 5381 01d7 1C       		.uleb128 0x1c
 5382 01d8 2E       		.uleb128 0x2e
 5383 01d9 01       		.byte	0x1
 5384 01da 3F       		.uleb128 0x3f
 5385 01db 19       		.uleb128 0x19
 5386 01dc 03       		.uleb128 0x3
 5387 01dd 0E       		.uleb128 0xe
 5388 01de 3A       		.uleb128 0x3a
 5389 01df 0B       		.uleb128 0xb
 5390 01e0 3B       		.uleb128 0x3b
 5391 01e1 05       		.uleb128 0x5
 5392 01e2 49       		.uleb128 0x49
 5393 01e3 13       		.uleb128 0x13
 5394 01e4 11       		.uleb128 0x11
 5395 01e5 01       		.uleb128 0x1
 5396 01e6 12       		.uleb128 0x12
 5397 01e7 06       		.uleb128 0x6
 5398 01e8 40       		.uleb128 0x40
 5399 01e9 18       		.uleb128 0x18
 5400 01ea 9642     		.uleb128 0x2116
 5401 01ec 19       		.uleb128 0x19
 5402 01ed 01       		.uleb128 0x1
 5403 01ee 13       		.uleb128 0x13
 5404 01ef 00       		.byte	0
 5405 01f0 00       		.byte	0
 5406 01f1 1D       		.uleb128 0x1d
 5407 01f2 0B       		.uleb128 0xb
 5408 01f3 01       		.byte	0x1
 5409 01f4 11       		.uleb128 0x11
 5410 01f5 01       		.uleb128 0x1
 5411 01f6 12       		.uleb128 0x12
 5412 01f7 06       		.uleb128 0x6
 5413 01f8 00       		.byte	0
 5414 01f9 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 117


 5415 01fa 1E       		.uleb128 0x1e
 5416 01fb 0B       		.uleb128 0xb
 5417 01fc 01       		.byte	0x1
 5418 01fd 11       		.uleb128 0x11
 5419 01fe 01       		.uleb128 0x1
 5420 01ff 12       		.uleb128 0x12
 5421 0200 06       		.uleb128 0x6
 5422 0201 01       		.uleb128 0x1
 5423 0202 13       		.uleb128 0x13
 5424 0203 00       		.byte	0
 5425 0204 00       		.byte	0
 5426 0205 1F       		.uleb128 0x1f
 5427 0206 21       		.uleb128 0x21
 5428 0207 00       		.byte	0
 5429 0208 49       		.uleb128 0x49
 5430 0209 13       		.uleb128 0x13
 5431 020a 2F       		.uleb128 0x2f
 5432 020b 05       		.uleb128 0x5
 5433 020c 00       		.byte	0
 5434 020d 00       		.byte	0
 5435 020e 20       		.uleb128 0x20
 5436 020f 2E       		.uleb128 0x2e
 5437 0210 01       		.byte	0x1
 5438 0211 3F       		.uleb128 0x3f
 5439 0212 19       		.uleb128 0x19
 5440 0213 03       		.uleb128 0x3
 5441 0214 0E       		.uleb128 0xe
 5442 0215 3A       		.uleb128 0x3a
 5443 0216 0B       		.uleb128 0xb
 5444 0217 3B       		.uleb128 0x3b
 5445 0218 05       		.uleb128 0x5
 5446 0219 27       		.uleb128 0x27
 5447 021a 19       		.uleb128 0x19
 5448 021b 49       		.uleb128 0x49
 5449 021c 13       		.uleb128 0x13
 5450 021d 11       		.uleb128 0x11
 5451 021e 01       		.uleb128 0x1
 5452 021f 12       		.uleb128 0x12
 5453 0220 06       		.uleb128 0x6
 5454 0221 40       		.uleb128 0x40
 5455 0222 18       		.uleb128 0x18
 5456 0223 9642     		.uleb128 0x2116
 5457 0225 19       		.uleb128 0x19
 5458 0226 01       		.uleb128 0x1
 5459 0227 13       		.uleb128 0x13
 5460 0228 00       		.byte	0
 5461 0229 00       		.byte	0
 5462 022a 21       		.uleb128 0x21
 5463 022b 05       		.uleb128 0x5
 5464 022c 00       		.byte	0
 5465 022d 03       		.uleb128 0x3
 5466 022e 0E       		.uleb128 0xe
 5467 022f 3A       		.uleb128 0x3a
 5468 0230 0B       		.uleb128 0xb
 5469 0231 3B       		.uleb128 0x3b
 5470 0232 05       		.uleb128 0x5
 5471 0233 49       		.uleb128 0x49
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 118


 5472 0234 13       		.uleb128 0x13
 5473 0235 02       		.uleb128 0x2
 5474 0236 18       		.uleb128 0x18
 5475 0237 00       		.byte	0
 5476 0238 00       		.byte	0
 5477 0239 22       		.uleb128 0x22
 5478 023a 34       		.uleb128 0x34
 5479 023b 00       		.byte	0
 5480 023c 03       		.uleb128 0x3
 5481 023d 08       		.uleb128 0x8
 5482 023e 3A       		.uleb128 0x3a
 5483 023f 0B       		.uleb128 0xb
 5484 0240 3B       		.uleb128 0x3b
 5485 0241 05       		.uleb128 0x5
 5486 0242 49       		.uleb128 0x49
 5487 0243 13       		.uleb128 0x13
 5488 0244 02       		.uleb128 0x2
 5489 0245 18       		.uleb128 0x18
 5490 0246 00       		.byte	0
 5491 0247 00       		.byte	0
 5492 0248 23       		.uleb128 0x23
 5493 0249 34       		.uleb128 0x34
 5494 024a 00       		.byte	0
 5495 024b 03       		.uleb128 0x3
 5496 024c 0E       		.uleb128 0xe
 5497 024d 3A       		.uleb128 0x3a
 5498 024e 0B       		.uleb128 0xb
 5499 024f 3B       		.uleb128 0x3b
 5500 0250 05       		.uleb128 0x5
 5501 0251 49       		.uleb128 0x49
 5502 0252 13       		.uleb128 0x13
 5503 0253 3F       		.uleb128 0x3f
 5504 0254 19       		.uleb128 0x19
 5505 0255 3C       		.uleb128 0x3c
 5506 0256 19       		.uleb128 0x19
 5507 0257 00       		.byte	0
 5508 0258 00       		.byte	0
 5509 0259 24       		.uleb128 0x24
 5510 025a 34       		.uleb128 0x34
 5511 025b 00       		.byte	0
 5512 025c 03       		.uleb128 0x3
 5513 025d 0E       		.uleb128 0xe
 5514 025e 3A       		.uleb128 0x3a
 5515 025f 0B       		.uleb128 0xb
 5516 0260 3B       		.uleb128 0x3b
 5517 0261 0B       		.uleb128 0xb
 5518 0262 49       		.uleb128 0x49
 5519 0263 13       		.uleb128 0x13
 5520 0264 3F       		.uleb128 0x3f
 5521 0265 19       		.uleb128 0x19
 5522 0266 02       		.uleb128 0x2
 5523 0267 18       		.uleb128 0x18
 5524 0268 00       		.byte	0
 5525 0269 00       		.byte	0
 5526 026a 25       		.uleb128 0x25
 5527 026b 34       		.uleb128 0x34
 5528 026c 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 119


 5529 026d 03       		.uleb128 0x3
 5530 026e 08       		.uleb128 0x8
 5531 026f 3A       		.uleb128 0x3a
 5532 0270 0B       		.uleb128 0xb
 5533 0271 3B       		.uleb128 0x3b
 5534 0272 0B       		.uleb128 0xb
 5535 0273 49       		.uleb128 0x49
 5536 0274 13       		.uleb128 0x13
 5537 0275 3F       		.uleb128 0x3f
 5538 0276 19       		.uleb128 0x19
 5539 0277 02       		.uleb128 0x2
 5540 0278 18       		.uleb128 0x18
 5541 0279 00       		.byte	0
 5542 027a 00       		.byte	0
 5543 027b 00       		.byte	0
 5544              		.section	.debug_aranges,"",%progbits
 5545 0000 8C000000 		.4byte	0x8c
 5546 0004 0200     		.2byte	0x2
 5547 0006 00000000 		.4byte	.Ldebug_info0
 5548 000a 04       		.byte	0x4
 5549 000b 00       		.byte	0
 5550 000c 0000     		.2byte	0
 5551 000e 0000     		.2byte	0
 5552 0010 00000000 		.4byte	.LFB64
 5553 0014 0C000000 		.4byte	.LFE64-.LFB64
 5554 0018 00000000 		.4byte	.LFB65
 5555 001c 2C010000 		.4byte	.LFE65-.LFB65
 5556 0020 00000000 		.4byte	.LFB66
 5557 0024 64000000 		.4byte	.LFE66-.LFB66
 5558 0028 00000000 		.4byte	.LFB67
 5559 002c 2A000000 		.4byte	.LFE67-.LFB67
 5560 0030 00000000 		.4byte	.LFB68
 5561 0034 50000000 		.4byte	.LFE68-.LFB68
 5562 0038 00000000 		.4byte	.LFB69
 5563 003c 48000000 		.4byte	.LFE69-.LFB69
 5564 0040 00000000 		.4byte	.LFB70
 5565 0044 1E000000 		.4byte	.LFE70-.LFB70
 5566 0048 00000000 		.4byte	.LFB71
 5567 004c 46000000 		.4byte	.LFE71-.LFB71
 5568 0050 00000000 		.4byte	.LFB72
 5569 0054 E0000000 		.4byte	.LFE72-.LFB72
 5570 0058 00000000 		.4byte	.LFB73
 5571 005c 1E000000 		.4byte	.LFE73-.LFB73
 5572 0060 00000000 		.4byte	.LFB74
 5573 0064 30040000 		.4byte	.LFE74-.LFB74
 5574 0068 00000000 		.4byte	.LFB75
 5575 006c 44000000 		.4byte	.LFE75-.LFB75
 5576 0070 00000000 		.4byte	.LFB76
 5577 0074 5C0E0000 		.4byte	.LFE76-.LFB76
 5578 0078 00000000 		.4byte	.LFB77
 5579 007c 74000000 		.4byte	.LFE77-.LFB77
 5580 0080 00000000 		.4byte	.LFB78
 5581 0084 38010000 		.4byte	.LFE78-.LFB78
 5582 0088 00000000 		.4byte	0
 5583 008c 00000000 		.4byte	0
 5584              		.section	.debug_ranges,"",%progbits
 5585              	.Ldebug_ranges0:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 120


 5586 0000 00000000 		.4byte	.LFB64
 5587 0004 0C000000 		.4byte	.LFE64
 5588 0008 00000000 		.4byte	.LFB65
 5589 000c 2C010000 		.4byte	.LFE65
 5590 0010 00000000 		.4byte	.LFB66
 5591 0014 64000000 		.4byte	.LFE66
 5592 0018 00000000 		.4byte	.LFB67
 5593 001c 2A000000 		.4byte	.LFE67
 5594 0020 00000000 		.4byte	.LFB68
 5595 0024 50000000 		.4byte	.LFE68
 5596 0028 00000000 		.4byte	.LFB69
 5597 002c 48000000 		.4byte	.LFE69
 5598 0030 00000000 		.4byte	.LFB70
 5599 0034 1E000000 		.4byte	.LFE70
 5600 0038 00000000 		.4byte	.LFB71
 5601 003c 46000000 		.4byte	.LFE71
 5602 0040 00000000 		.4byte	.LFB72
 5603 0044 E0000000 		.4byte	.LFE72
 5604 0048 00000000 		.4byte	.LFB73
 5605 004c 1E000000 		.4byte	.LFE73
 5606 0050 00000000 		.4byte	.LFB74
 5607 0054 30040000 		.4byte	.LFE74
 5608 0058 00000000 		.4byte	.LFB75
 5609 005c 44000000 		.4byte	.LFE75
 5610 0060 00000000 		.4byte	.LFB76
 5611 0064 5C0E0000 		.4byte	.LFE76
 5612 0068 00000000 		.4byte	.LFB77
 5613 006c 74000000 		.4byte	.LFE77
 5614 0070 00000000 		.4byte	.LFB78
 5615 0074 38010000 		.4byte	.LFE78
 5616 0078 00000000 		.4byte	0
 5617 007c 00000000 		.4byte	0
 5618              		.section	.debug_line,"",%progbits
 5619              	.Ldebug_line0:
 5620 0000 C1050000 		.section	.debug_str,"MS",%progbits,1
 5620      02002702 
 5620      00000201 
 5620      FB0E0D00 
 5620      01010101 
 5621              	.LASF119:
 5622 0000 745F6D6F 		.ascii	"t_modem\000"
 5622      64656D00 
 5623              	.LASF67:
 5624 0008 746D5F79 		.ascii	"tm_year\000"
 5624      65617200 
 5625              	.LASF64:
 5626 0010 746D5F68 		.ascii	"tm_hour\000"
 5626      6F757200 
 5627              	.LASF69:
 5628 0018 746D5F79 		.ascii	"tm_yday\000"
 5628      64617900 
 5629              	.LASF36:
 5630 0020 6E756D5F 		.ascii	"num_invalid_readings\000"
 5630      696E7661 
 5630      6C69645F 
 5630      72656164 
 5630      696E6773 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 121


 5631              	.LASF155:
 5632 0035 62756666 		.ascii	"buffer_overflow\000"
 5632      65725F6F 
 5632      76657266 
 5632      6C6F7700 
 5633              	.LASF153:
 5634 0045 66696C65 		.ascii	"fileName\000"
 5634      4E616D65 
 5634      00
 5635              	.LASF0:
 5636 004e 7369676E 		.ascii	"signed char\000"
 5636      65642063 
 5636      68617200 
 5637              	.LASF96:
 5638 005a 636F756E 		.ascii	"countDownResetCondition\000"
 5638      74446F77 
 5638      6E526573 
 5638      6574436F 
 5638      6E646974 
 5639              	.LASF177:
 5640 0072 57616B65 		.ascii	"Wakeup_ISR\000"
 5640      75705F49 
 5640      535200
 5641              	.LASF174:
 5642 007d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5642      43313120 
 5642      352E342E 
 5642      31203230 
 5642      31363036 
 5643 00b0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 5643      20726576 
 5643      6973696F 
 5643      6E203233 
 5643      37373135 
 5644 00e3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5644      66756E63 
 5644      74696F6E 
 5644      2D736563 
 5644      74696F6E 
 5645              	.LASF26:
 5646 010b 4D6F6E74 		.ascii	"Month\000"
 5646      6800
 5647              	.LASF7:
 5648 0111 6C6F6E67 		.ascii	"long long unsigned int\000"
 5648      206C6F6E 
 5648      6720756E 
 5648      7369676E 
 5648      65642069 
 5649              	.LASF22:
 5650 0128 486F7572 		.ascii	"Hour\000"
 5650      00
 5651              	.LASF40:
 5652 012d 76616C75 		.ascii	"values\000"
 5652      657300
 5653              	.LASF159:
 5654 0134 6D6F6465 		.ascii	"modem_state\000"
 5654      6D5F7374 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 122


 5654      61746500 
 5655              	.LASF168:
 5656 0140 616C6172 		.ascii	"alarmMeasure\000"
 5656      6D4D6561 
 5656      73757265 
 5656      00
 5657              	.LASF154:
 5658 014d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5658      52784275 
 5658      66666572 
 5658      00
 5659              	.LASF120:
 5660 015a 745F6C65 		.ascii	"t_level_sensor\000"
 5660      76656C5F 
 5660      73656E73 
 5660      6F7200
 5661              	.LASF6:
 5662 0169 6C6F6E67 		.ascii	"long long int\000"
 5662      206C6F6E 
 5662      6720696E 
 5662      7400
 5663              	.LASF130:
 5664 0177 7061636B 		.ascii	"packets\000"
 5664      65747300 
 5665              	.LASF80:
 5666 017f 65636E6F 		.ascii	"ecno\000"
 5666      00
 5667              	.LASF169:
 5668 0184 74696D65 		.ascii	"timeToMeasure\000"
 5668      546F4D65 
 5668      61737572 
 5668      6500
 5669              	.LASF83:
 5670 0192 74696D65 		.ascii	"time_to_network_connect\000"
 5670      5F746F5F 
 5670      6E657477 
 5670      6F726B5F 
 5670      636F6E6E 
 5671              	.LASF171:
 5672 01aa 74696D65 		.ascii	"timeToSync\000"
 5672      546F5379 
 5672      6E6300
 5673              	.LASF54:
 5674 01b5 766F6C74 		.ascii	"voltage_solar\000"
 5674      6167655F 
 5674      736F6C61 
 5674      7200
 5675              	.LASF55:
 5676 01c3 766F6C74 		.ascii	"voltage_charge_current\000"
 5676      6167655F 
 5676      63686172 
 5676      67655F63 
 5676      75727265 
 5677              	.LASF152:
 5678 01da 75706772 		.ascii	"upgrade_status\000"
 5678      6164655F 
 5678      73746174 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 123


 5678      757300
 5679              	.LASF133:
 5680 01e9 635F6461 		.ascii	"c_data_count_sent\000"
 5680      74615F63 
 5680      6F756E74 
 5680      5F73656E 
 5680      7400
 5681              	.LASF77:
 5682 01fb 6D6F6465 		.ascii	"modem_info_t\000"
 5682      6D5F696E 
 5682      666F5F74 
 5682      00
 5683              	.LASF78:
 5684 0208 72786C65 		.ascii	"rxlev\000"
 5684      7600
 5685              	.LASF4:
 5686 020e 6C6F6E67 		.ascii	"long int\000"
 5686      20696E74 
 5686      00
 5687              	.LASF84:
 5688 0217 74696D65 		.ascii	"time_to_acquire_ip\000"
 5688      5F746F5F 
 5688      61637175 
 5688      6972655F 
 5688      697000
 5689              	.LASF97:
 5690 022a 616C6172 		.ascii	"alarm\000"
 5690      6D00
 5691              	.LASF11:
 5692 0230 75696E74 		.ascii	"uint8\000"
 5692      3800
 5693              	.LASF125:
 5694 0236 635F7472 		.ascii	"c_try_counter\000"
 5694      795F636F 
 5694      756E7465 
 5694      7200
 5695              	.LASF136:
 5696 0244 73656E64 		.ascii	"send_time\000"
 5696      5F74696D 
 5696      6500
 5697              	.LASF16:
 5698 024e 696E7433 		.ascii	"int32\000"
 5698      3200
 5699              	.LASF86:
 5700 0254 6E6F6465 		.ascii	"node_type\000"
 5700      5F747970 
 5700      6500
 5701              	.LASF123:
 5702 025e 73796E63 		.ascii	"syncData\000"
 5702      44617461 
 5702      00
 5703              	.LASF131:
 5704 0267 6E657477 		.ascii	"network_time\000"
 5704      6F726B5F 
 5704      74696D65 
 5704      00
 5705              	.LASF3:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 124


 5706 0274 73686F72 		.ascii	"short unsigned int\000"
 5706      7420756E 
 5706      7369676E 
 5706      65642069 
 5706      6E7400
 5707              	.LASF13:
 5708 0287 75696E74 		.ascii	"uint32\000"
 5708      333200
 5709              	.LASF75:
 5710 028e 6D6F6465 		.ascii	"model_id\000"
 5710      6C5F6964 
 5710      00
 5711              	.LASF33:
 5712 0297 616C6C5F 		.ascii	"all_level_readings\000"
 5712      6C657665 
 5712      6C5F7265 
 5712      6164696E 
 5712      677300
 5713              	.LASF93:
 5714 02aa 636F756E 		.ascii	"countDownValue\000"
 5714      74446F77 
 5714      6E56616C 
 5714      756500
 5715              	.LASF148:
 5716 02b9 75706772 		.ascii	"upgraded\000"
 5716      61646564 
 5716      00
 5717              	.LASF66:
 5718 02c2 746D5F6D 		.ascii	"tm_mon\000"
 5718      6F6E00
 5719              	.LASF38:
 5720 02c9 6E766172 		.ascii	"nvars\000"
 5720      7300
 5721              	.LASF90:
 5722 02cf 64656275 		.ascii	"debug_level\000"
 5722      675F6C65 
 5722      76656C00 
 5723              	.LASF150:
 5724 02db 706F7274 		.ascii	"port\000"
 5724      00
 5725              	.LASF176:
 5726 02e0 433A5C6E 		.ascii	"C:\\notoriOS\\notoriOS.cydsn\000"
 5726      6F746F72 
 5726      694F535C 
 5726      6E6F746F 
 5726      72694F53 
 5727              	.LASF71:
 5728 02fb 76616C75 		.ascii	"value\000"
 5728      6500
 5729              	.LASF149:
 5730 0301 686F7374 		.ascii	"host\000"
 5730      00
 5731              	.LASF44:
 5732 0306 64617461 		.ascii	"data2\000"
 5732      3200
 5733              	.LASF170:
 5734 030c 616C6172 		.ascii	"alarmSync\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 125


 5734      6D53796E 
 5734      6300
 5735              	.LASF8:
 5736 0316 756E7369 		.ascii	"unsigned int\000"
 5736      676E6564 
 5736      20696E74 
 5736      00
 5737              	.LASF146:
 5738 0323 73657454 		.ascii	"setTime\000"
 5738      696D6500 
 5739              	.LASF73:
 5740 032b 6B65795F 		.ascii	"key_value_t\000"
 5740      76616C75 
 5740      655F7400 
 5741              	.LASF109:
 5742 0337 41796F49 		.ascii	"AyoItsTime\000"
 5742      74735469 
 5742      6D6500
 5743              	.LASF35:
 5744 0342 6E756D5F 		.ascii	"num_valid_readings\000"
 5744      76616C69 
 5744      645F7265 
 5744      6164696E 
 5744      677300
 5745              	.LASF135:
 5746 0355 68747470 		.ascii	"http_chunk\000"
 5746      5F636875 
 5746      6E6B00
 5747              	.LASF142:
 5748 0360 6D5F766F 		.ascii	"m_voltage\000"
 5748      6C746167 
 5748      6500
 5749              	.LASF5:
 5750 036a 6C6F6E67 		.ascii	"long unsigned int\000"
 5750      20756E73 
 5750      69676E65 
 5750      6420696E 
 5750      7400
 5751              	.LASF106:
 5752 037c 7472795F 		.ascii	"try_counter\000"
 5752      636F756E 
 5752      74657200 
 5753              	.LASF126:
 5754 0388 64617461 		.ascii	"data_count_desired\000"
 5754      5F636F75 
 5754      6E745F64 
 5754      65736972 
 5754      656400
 5755              	.LASF53:
 5756 039b 766F6C74 		.ascii	"voltage_battery\000"
 5756      6167655F 
 5756      62617474 
 5756      65727900 
 5757              	.LASF24:
 5758 03ab 4461794F 		.ascii	"DayOfMonth\000"
 5758      664D6F6E 
 5758      746800
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 126


 5759              	.LASF139:
 5760 03b6 6D616B65 		.ascii	"makeMeasurements\000"
 5760      4D656173 
 5760      7572656D 
 5760      656E7473 
 5760      00
 5761              	.LASF158:
 5762 03c7 64617461 		.ascii	"data\000"
 5762      00
 5763              	.LASF102:
 5764 03cc 65705F70 		.ascii	"ep_port\000"
 5764      6F727400 
 5765              	.LASF70:
 5766 03d4 746D5F69 		.ascii	"tm_isdst\000"
 5766      73647374 
 5766      00
 5767              	.LASF98:
 5768 03dd 6D6F6465 		.ascii	"modem_info\000"
 5768      6D5F696E 
 5768      666F00
 5769              	.LASF101:
 5770 03e8 65705F68 		.ascii	"ep_host\000"
 5770      6F737400 
 5771              	.LASF14:
 5772 03f0 696E7438 		.ascii	"int8\000"
 5772      00
 5773              	.LASF108:
 5774 03f5 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 5774      576F726B 
 5774      576F726B 
 5774      576F726B 
 5774      576F726B 
 5775              	.LASF127:
 5776 040e 635F6461 		.ascii	"c_data_count_desired\000"
 5776      74615F63 
 5776      6F756E74 
 5776      5F646573 
 5776      69726564 
 5777              	.LASF122:
 5778 0423 745F7364 		.ascii	"t_sd_card\000"
 5778      5F636172 
 5778      6400
 5779              	.LASF2:
 5780 042d 73686F72 		.ascii	"short int\000"
 5780      7420696E 
 5780      7400
 5781              	.LASF160:
 5782 0437 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 5782      6D5F7374 
 5782      6172745F 
 5782      74696D65 
 5782      5F737461 
 5783              	.LASF100:
 5784 044e 7379735F 		.ascii	"sys_info_t\000"
 5784      696E666F 
 5784      5F7400
 5785              	.LASF92:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 127


 5786 0459 75706461 		.ascii	"updatable_parameters_t\000"
 5786      7461626C 
 5786      655F7061 
 5786      72616D65 
 5786      74657273 
 5787              	.LASF110:
 5788 0470 616C6172 		.ascii	"alarmType\000"
 5788      6D547970 
 5788      6500
 5789              	.LASF156:
 5790 047a 64617461 		.ascii	"dataPointsInStack\000"
 5790      506F696E 
 5790      7473496E 
 5790      53746163 
 5790      6B00
 5791              	.LASF63:
 5792 048c 746D5F6D 		.ascii	"tm_min\000"
 5792      696E00
 5793              	.LASF151:
 5794 0493 726F7574 		.ascii	"route\000"
 5794      6500
 5795              	.LASF111:
 5796 0499 616C6172 		.ascii	"alarmToBeUpdated\000"
 5796      6D546F42 
 5796      65557064 
 5796      61746564 
 5796      00
 5797              	.LASF21:
 5798 04aa 73697A65 		.ascii	"sizetype\000"
 5798      74797065 
 5798      00
 5799              	.LASF42:
 5800 04b3 64617461 		.ascii	"data0\000"
 5800      3000
 5801              	.LASF43:
 5802 04b9 64617461 		.ascii	"data1\000"
 5802      3100
 5803              	.LASF45:
 5804 04bf 64617461 		.ascii	"data3\000"
 5804      3300
 5805              	.LASF46:
 5806 04c5 64617461 		.ascii	"data4\000"
 5806      3400
 5807              	.LASF47:
 5808 04cb 64617461 		.ascii	"data5\000"
 5808      3500
 5809              	.LASF48:
 5810 04d1 64617461 		.ascii	"data6\000"
 5810      3600
 5811              	.LASF49:
 5812 04d7 64617461 		.ascii	"data7\000"
 5812      3700
 5813              	.LASF50:
 5814 04dd 64617461 		.ascii	"data8\000"
 5814      3800
 5815              	.LASF103:
 5816 04e3 7379735F 		.ascii	"sys_settings_t\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 128


 5816      73657474 
 5816      696E6773 
 5816      5F7400
 5817              	.LASF147:
 5818 04f2 6C6F6361 		.ascii	"localTime\000"
 5818      6C54696D 
 5818      6500
 5819              	.LASF172:
 5820 04fc 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 5820      546F5379 
 5820      636E5265 
 5820      6D6F7465 
 5820      50617261 
 5821              	.LASF72:
 5822 0513 74696D65 		.ascii	"timeStamp\000"
 5822      5374616D 
 5822      7000
 5823              	.LASF28:
 5824 051d 5254435F 		.ascii	"RTC_TIME_DATE\000"
 5824      54494D45 
 5824      5F444154 
 5824      4500
 5825              	.LASF162:
 5826 052b 75706461 		.ascii	"updatable_parameters\000"
 5826      7461626C 
 5826      655F7061 
 5826      72616D65 
 5826      74657273 
 5827              	.LASF115:
 5828 0540 43726561 		.ascii	"CreateAlarm\000"
 5828      7465416C 
 5828      61726D00 
 5829              	.LASF134:
 5830 054c 7061636B 		.ascii	"packet\000"
 5830      657400
 5831              	.LASF124:
 5832 0553 735F7273 		.ascii	"s_rsrp\000"
 5832      727000
 5833              	.LASF56:
 5834 055a 766F6C74 		.ascii	"voltage_pressure\000"
 5834      6167655F 
 5834      70726573 
 5834      73757265 
 5834      00
 5835              	.LASF163:
 5836 056b 68747470 		.ascii	"http_request\000"
 5836      5F726571 
 5836      75657374 
 5836      00
 5837              	.LASF17:
 5838 0578 666C6F61 		.ascii	"float\000"
 5838      7400
 5839              	.LASF37:
 5840 057e 6C657665 		.ascii	"level_sensor_t\000"
 5840      6C5F7365 
 5840      6E736F72 
 5840      5F7400
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 129


 5841              	.LASF138:
 5842 058d 636F6E66 		.ascii	"configureRemoteParams\000"
 5842      69677572 
 5842      6552656D 
 5842      6F746550 
 5842      6172616D 
 5843              	.LASF173:
 5844 05a3 44617461 		.ascii	"Data_fileName\000"
 5844      5F66696C 
 5844      654E616D 
 5844      6500
 5845              	.LASF107:
 5846 05b1 6D6F6465 		.ascii	"modem_status\000"
 5846      6D5F7374 
 5846      61747573 
 5846      00
 5847              	.LASF29:
 5848 05be 74657374 		.ascii	"test_name\000"
 5848      5F6E616D 
 5848      6500
 5849              	.LASF27:
 5850 05c8 59656172 		.ascii	"Year\000"
 5850      00
 5851              	.LASF91:
 5852 05cd 5F426F6F 		.ascii	"_Bool\000"
 5852      6C00
 5853              	.LASF10:
 5854 05d3 696E7433 		.ascii	"int32_t\000"
 5854      325F7400 
 5855              	.LASF1:
 5856 05db 756E7369 		.ascii	"unsigned char\000"
 5856      676E6564 
 5856      20636861 
 5856      7200
 5857              	.LASF12:
 5858 05e9 75696E74 		.ascii	"uint16\000"
 5858      313600
 5859              	.LASF167:
 5860 05f0 73797374 		.ascii	"system_settings\000"
 5860      656D5F73 
 5860      65747469 
 5860      6E677300 
 5861              	.LASF82:
 5862 0600 72737270 		.ascii	"rsrp\000"
 5862      00
 5863              	.LASF81:
 5864 0605 72737271 		.ascii	"rsrq\000"
 5864      00
 5865              	.LASF112:
 5866 060a 52657365 		.ascii	"ResetAlarm\000"
 5866      74416C61 
 5866      726D00
 5867              	.LASF137:
 5868 0615 735F7365 		.ascii	"s_send_time\000"
 5868      6E645F74 
 5868      696D6500 
 5869              	.LASF89:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 130


 5870 0621 73796E63 		.ascii	"sync_time\000"
 5870      5F74696D 
 5870      6500
 5871              	.LASF60:
 5872 062b 70726573 		.ascii	"pressure_depth\000"
 5872      73757265 
 5872      5F646570 
 5872      746800
 5873              	.LASF79:
 5874 063a 72736370 		.ascii	"rscp\000"
 5874      00
 5875              	.LASF39:
 5876 063f 666C6167 		.ascii	"flag\000"
 5876      00
 5877              	.LASF23:
 5878 0644 4461794F 		.ascii	"DayOfWeek\000"
 5878      66576565 
 5878      6B00
 5879              	.LASF32:
 5880 064e 74657374 		.ascii	"test_t\000"
 5880      5F7400
 5881              	.LASF166:
 5882 0655 73797374 		.ascii	"system_info\000"
 5882      656D5F69 
 5882      6E666F00 
 5883              	.LASF76:
 5884 0661 696D6569 		.ascii	"imei\000"
 5884      00
 5885              	.LASF31:
 5886 0666 72656173 		.ascii	"reason\000"
 5886      6F6E00
 5887              	.LASF113:
 5888 066d 616C6172 		.ascii	"alarmToBeReset\000"
 5888      6D546F42 
 5888      65526573 
 5888      657400
 5889              	.LASF118:
 5890 067c 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 5890      6B697479 
 5890      43686563 
 5890      6B596F75 
 5890      7273656C 
 5891              	.LASF132:
 5892 06a8 64617461 		.ascii	"data_count_sent\000"
 5892      5F636F75 
 5892      6E745F73 
 5892      656E7400 
 5893              	.LASF85:
 5894 06b8 6D6F6465 		.ascii	"modem_stats_t\000"
 5894      6D5F7374 
 5894      6174735F 
 5894      7400
 5895              	.LASF59:
 5896 06c6 70726573 		.ascii	"pressure_current\000"
 5896      73757265 
 5896      5F637572 
 5896      72656E74 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 131


 5896      00
 5897              	.LASF57:
 5898 06d7 76616C69 		.ascii	"valid\000"
 5898      6400
 5899              	.LASF141:
 5900 06dd 6269675F 		.ascii	"big_value\000"
 5900      76616C75 
 5900      6500
 5901              	.LASF68:
 5902 06e7 746D5F77 		.ascii	"tm_wday\000"
 5902      64617900 
 5903              	.LASF20:
 5904 06ef 6C6F6E67 		.ascii	"long double\000"
 5904      20646F75 
 5904      626C6500 
 5905              	.LASF129:
 5906 06fb 6368756E 		.ascii	"chunk\000"
 5906      6B00
 5907              	.LASF140:
 5908 0701 635F7469 		.ascii	"c_timeStamp\000"
 5908      6D655374 
 5908      616D7000 
 5909              	.LASF19:
 5910 070d 63686172 		.ascii	"char\000"
 5910      00
 5911              	.LASF52:
 5912 0712 736F6E74 		.ascii	"sontek_t\000"
 5912      656B5F74 
 5912      00
 5913              	.LASF161:
 5914 071b 6D6F6465 		.ascii	"modem_stats\000"
 5914      6D5F7374 
 5914      61747300 
 5915              	.LASF165:
 5916 0727 68747470 		.ascii	"http_route\000"
 5916      5F726F75 
 5916      746500
 5917              	.LASF128:
 5918 0732 706F7274 		.ascii	"portConfig\000"
 5918      436F6E66 
 5918      696700
 5919              	.LASF9:
 5920 073d 5F5F696E 		.ascii	"__int32_t\000"
 5920      7433325F 
 5920      7400
 5921              	.LASF104:
 5922 0747 756E6971 		.ascii	"uniqueId\000"
 5922      75654964 
 5922      00
 5923              	.LASF51:
 5924 0750 64617461 		.ascii	"data9\000"
 5924      3900
 5925              	.LASF143:
 5926 0756 6D5F6C65 		.ascii	"m_level_sensor\000"
 5926      76656C5F 
 5926      73656E73 
 5926      6F7200
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 132


 5927              	.LASF34:
 5928 0765 6C657665 		.ascii	"level_reading\000"
 5928      6C5F7265 
 5928      6164696E 
 5928      6700
 5929              	.LASF178:
 5930 0773 4C617942 		.ascii	"LayBack\000"
 5930      61636B00 
 5931              	.LASF144:
 5932 077b 6D5F736F 		.ascii	"m_sontek\000"
 5932      6E74656B 
 5932      00
 5933              	.LASF74:
 5934 0784 73696D5F 		.ascii	"sim_id\000"
 5934      696400
 5935              	.LASF65:
 5936 078b 746D5F6D 		.ascii	"tm_mday\000"
 5936      64617900 
 5937              	.LASF116:
 5938 0793 6E657741 		.ascii	"newAlarm\000"
 5938      6C61726D 
 5938      00
 5939              	.LASF62:
 5940 079c 746D5F73 		.ascii	"tm_sec\000"
 5940      656300
 5941              	.LASF145:
 5942 07a3 6D5F7072 		.ascii	"m_pressure\000"
 5942      65737375 
 5942      726500
 5943              	.LASF30:
 5944 07ae 73746174 		.ascii	"status\000"
 5944      757300
 5945              	.LASF157:
 5946 07b5 64617461 		.ascii	"dataPointsInStackDesired\000"
 5946      506F696E 
 5946      7473496E 
 5946      53746163 
 5946      6B446573 
 5947              	.LASF121:
 5948 07ce 745F766F 		.ascii	"t_voltages\000"
 5948      6C746167 
 5948      657300
 5949              	.LASF41:
 5950 07d9 6C616265 		.ascii	"labels\000"
 5950      6C7300
 5951              	.LASF175:
 5952 07e0 6E6F746F 		.ascii	"notoriOS.c\000"
 5952      72694F53 
 5952      2E6300
 5953              	.LASF164:
 5954 07eb 68747470 		.ascii	"http_body\000"
 5954      5F626F64 
 5954      7900
 5955              	.LASF15:
 5956 07f5 696E7431 		.ascii	"int16\000"
 5956      3600
 5957              	.LASF95:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc5eUXxZ.s 			page 133


 5958 07fb 636F756E 		.ascii	"countDownType\000"
 5958      74446F77 
 5958      6E547970 
 5958      6500
 5959              	.LASF94:
 5960 0809 63757272 		.ascii	"currentCountDownValue\000"
 5960      656E7443 
 5960      6F756E74 
 5960      446F776E 
 5960      56616C75 
 5961              	.LASF87:
 5962 081f 73696D5F 		.ascii	"sim_type\000"
 5962      74797065 
 5962      00
 5963              	.LASF105:
 5964 0828 635F6865 		.ascii	"c_hey\000"
 5964      7900
 5965              	.LASF25:
 5966 082e 4461794F 		.ascii	"DayOfYear\000"
 5966      66596561 
 5966      7200
 5967              	.LASF61:
 5968 0838 70726573 		.ascii	"pressure_t\000"
 5968      73757265 
 5968      5F7400
 5969              	.LASF114:
 5970 0843 416C6172 		.ascii	"AlarmReady\000"
 5970      6D526561 
 5970      647900
 5971              	.LASF117:
 5972 084e 52656164 		.ascii	"ReadyOrNot\000"
 5972      794F724E 
 5972      6F7400
 5973              	.LASF179:
 5974 0859 6D61696E 		.ascii	"main\000"
 5974      00
 5975              	.LASF99:
 5976 085e 63686970 		.ascii	"chip_uniqueId\000"
 5976      5F756E69 
 5976      71756549 
 5976      6400
 5977              	.LASF88:
 5978 086c 6D656173 		.ascii	"measure_time\000"
 5978      7572655F 
 5978      74696D65 
 5978      00
 5979              	.LASF18:
 5980 0879 646F7562 		.ascii	"double\000"
 5980      6C6500
 5981              	.LASF58:
 5982 0880 766F6C74 		.ascii	"voltage_t\000"
 5982      6167655F 
 5982      7400
 5983              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
