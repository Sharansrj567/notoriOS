ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,10,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	App_LED_enabled,1,1
  33              		.comm	app_led_inbox,100,4
  34              		.comm	level_sensor_inbox,100,4
  35              		.comm	level_sensor_enabled,1,1
  36              		.comm	valve_diameter,4,4
  37              		.comm	valve_type,10,4
  38              		.comm	valve_enabled,1,1
  39              		.comm	valve_inbox,100,4
  40              		.comm	autosampler_enabled,1,1
  41              		.comm	autosampler_inbox,100,4
  42              		.comm	http_request,10000,4
  43              		.comm	http_body,10000,4
  44              		.comm	http_route,200,4
  45              		.comm	system_info,28,4
  46              		.comm	system_settings,104,4
  47              		.comm	alarmMeasure,6,4
  48              		.comm	timeToMeasure,1,1
  49              		.comm	alarmSync,6,4
  50              		.comm	timeToSync,1,1
  51              		.comm	timeToSycnRemoteParams,1,1
  52              		.comm	hey,1,1
  53              		.comm	alarmAppLED,6,4
  54              		.comm	timeToAppLED,1,1
  55              		.comm	alarmLevelSensor,6,4
  56              		.comm	timeToLevelSensor,1,1
  57              		.comm	alarmDownstreamLevelSensor,6,4
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 2


  58              		.comm	timeToDownstreamLevelSensor,1,1
  59              		.comm	alarmValve,6,4
  60              		.comm	timeToValve,1,1
  61              		.comm	alarmAutosampler,6,4
  62              		.comm	timeToAutosampler,1,1
  63              		.section	.text.Wakeup_ISR,"ax",%progbits
  64              		.align	2
  65              		.global	Wakeup_ISR
  66              		.thumb
  67              		.thumb_func
  68              		.type	Wakeup_ISR, %function
  69              	Wakeup_ISR:
  70              	.LFB64:
  71              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  72              		.loc 1 20 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76 0000 80B5     		push	{r7, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 00AF     		add	r7, sp, #0
  81              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  82              		.loc 1 22 0
  83 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  84              		.loc 1 23 0
  85 0008 00BF     		nop
  86 000a 80BD     		pop	{r7, pc}
  87              		.cfi_endproc
  88              	.LFE64:
  89              		.size	Wakeup_ISR, .-Wakeup_ISR
  90              		.global	Data_fileName
  91              		.data
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 3


  92              		.align	2
  93              		.type	Data_fileName, %object
  94              		.size	Data_fileName, 30
  95              	Data_fileName:
  96 0000 64617461 		.ascii	"data.txt\000"
  96      2E747874 
  96      00
  97 0009 00000000 		.space	21
  97      00000000 
  97      00000000 
  97      00000000 
  97      00000000 
  98              		.comm	try_counter,1,1
  99              		.section	.rodata
 100              		.align	2
 101              	.LC0:
 102 0000 25582D25 		.ascii	"%X-%X\000"
 102      5800
 103 0006 0000     		.align	2
 104              	.LC1:
 105 0008 6C622D73 		.ascii	"lb-stormwater-89156408c3fcbe68.elb.us-east-1.amazon"
 105      746F726D 
 105      77617465 
 105      722D3839 
 105      31353634 
 106 003b 6177732E 		.ascii	"aws.com\000"
 106      636F6D00 
 107              		.section	.text.ReadyOrNot,"ax",%progbits
 108              		.align	2
 109              		.global	ReadyOrNot
 110              		.thumb
 111              		.thumb_func
 112              		.type	ReadyOrNot, %function
 113              	ReadyOrNot:
 114              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
 115              		.loc 1 41 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 24
 118              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 4


 119 0000 B0B5     		push	{r4, r5, r7, lr}
 120              		.cfi_def_cfa_offset 16
 121              		.cfi_offset 4, -16
 122              		.cfi_offset 5, -12
 123              		.cfi_offset 7, -8
 124              		.cfi_offset 14, -4
 125 0002 88B0     		sub	sp, sp, #32
 126              		.cfi_def_cfa_offset 48
 127 0004 02AF     		add	r7, sp, #8
 128              		.cfi_def_cfa 7, 40
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 129              		.loc 1 43 0
 130 0006 5548     		ldr	r0, .L3
 131 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 132              		.loc 1 44 0
 133 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 134              		.loc 1 46 0
 135 0010 FF20     		movs	r0, #255
 136 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 137              		.loc 1 47 0
 138 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 139              		.loc 1 48 0
 140 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 141              		.loc 1 50 0
 142 001e FFF7FEFF 		bl	modem_initialize
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 143              		.loc 1 52 0
 144 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  53:notoriOS.c    ****    
  54:notoriOS.c    ****     
  55:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  56:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  57:notoriOS.c    ****     
  58:notoriOS.c    ****     
  59:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  60:notoriOS.c    ****     uint32 uniqueId[2];
  61:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  62:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 145              		.loc 1 62 0
 146 0026 07F10C03 		add	r3, r7, #12
 147 002a 1846     		mov	r0, r3
 148 002c FFF7FEFF 		bl	CyGetUniqueId
  63:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 149              		.loc 1 63 0
 150 0030 FA68     		ldr	r2, [r7, #12]
 151 0032 3B69     		ldr	r3, [r7, #16]
 152 0034 0093     		str	r3, [sp]
 153 0036 1346     		mov	r3, r2
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 5


 154 0038 494A     		ldr	r2, .L3+4
 155 003a 1821     		movs	r1, #24
 156 003c 4948     		ldr	r0, .L3+8
 157 003e FFF7FEFF 		bl	snprintf
  64:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  65:notoriOS.c    ****     system_info.modem_info = &modem_info;
 158              		.loc 1 65 0
 159 0042 494B     		ldr	r3, .L3+12
 160 0044 494A     		ldr	r2, .L3+16
 161 0046 1A60     		str	r2, [r3]
  66:notoriOS.c    ****     
  67:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  68:notoriOS.c    ****     // testing server - travis and meagan june of 2022
  69:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","lb-stormwater-89156408c3
 162              		.loc 1 69 0
 163 0048 494A     		ldr	r2, .L3+20
 164 004a 4A4B     		ldr	r3, .L3+24
 165 004c 1446     		mov	r4, r2
 166 004e 1D46     		mov	r5, r3
 167 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 168 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 169 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 170 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 171 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 172 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 173 005c 95E80700 		ldmia	r5, {r0, r1, r2}
 174 0060 03C4     		stmia	r4!, {r0, r1}
 175 0062 2280     		strh	r2, [r4]	@ movhi
 176 0064 0234     		adds	r4, r4, #2
 177 0066 130C     		lsrs	r3, r2, #16
 178 0068 2370     		strb	r3, [r4]
  70:notoriOS.c    ****     
  71:notoriOS.c    ****     // production server
  72:notoriOS.c    ****     //snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","malcom.open-storm.org"
  73:notoriOS.c    ****     
  74:notoriOS.c    **** 
  75:notoriOS.c    ****     system_settings.ep_port = 4000;
 179              		.loc 1 75 0
 180 006a 414B     		ldr	r3, .L3+20
 181 006c 4FF47A62 		mov	r2, #4000
 182 0070 5A66     		str	r2, [r3, #100]
  76:notoriOS.c    ****     // Don't need the following for new nodes
  77:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  78:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  79:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  80:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  81:notoriOS.c    ****         
  82:notoriOS.c    ****     
  83:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  84:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 183              		.loc 1 84 0
 184 0072 414B     		ldr	r3, .L3+28
 185 0074 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 186 0076 99B2     		uxth	r1, r3
 187 0078 404C     		ldr	r4, .L3+32
 188 007a 3846     		mov	r0, r7
 189 007c 0723     		movs	r3, #7
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 6


 190 007e 0122     		movs	r2, #1
 191 0080 FFF7FEFF 		bl	CreateAlarm
 192 0084 2246     		mov	r2, r4
 193 0086 3B46     		mov	r3, r7
 194 0088 1968     		ldr	r1, [r3]	@ unaligned
 195 008a 1160     		str	r1, [r2]	@ unaligned
 196 008c 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 197 008e 9380     		strh	r3, [r2, #4]	@ unaligned
  85:notoriOS.c    ****     timeToMeasure = 1u;
 198              		.loc 1 85 0
 199 0090 3B4B     		ldr	r3, .L3+36
 200 0092 0122     		movs	r2, #1
 201 0094 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  87:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 202              		.loc 1 87 0
 203 0096 384B     		ldr	r3, .L3+28
 204 0098 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 205 009a 99B2     		uxth	r1, r3
 206 009c 394C     		ldr	r4, .L3+40
 207 009e 3846     		mov	r0, r7
 208 00a0 0723     		movs	r3, #7
 209 00a2 0122     		movs	r2, #1
 210 00a4 FFF7FEFF 		bl	CreateAlarm
 211 00a8 2246     		mov	r2, r4
 212 00aa 3B46     		mov	r3, r7
 213 00ac 1968     		ldr	r1, [r3]	@ unaligned
 214 00ae 1160     		str	r1, [r2]	@ unaligned
 215 00b0 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 216 00b2 9380     		strh	r3, [r2, #4]	@ unaligned
  88:notoriOS.c    ****     timeToSync = 1u;
 217              		.loc 1 88 0
 218 00b4 344B     		ldr	r3, .L3+44
 219 00b6 0122     		movs	r2, #1
 220 00b8 1A70     		strb	r2, [r3]
  89:notoriOS.c    ****     
  90:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 221              		.loc 1 90 0
 222 00ba 344B     		ldr	r3, .L3+48
 223 00bc 0022     		movs	r2, #0
 224 00be 1A70     		strb	r2, [r3]
  91:notoriOS.c    ****     
  92:notoriOS.c    ****     // App Initializations
  93:notoriOS.c    ****     // APP_INTERFACE-------------------------------------------------------------------------------
  94:notoriOS.c    ****     alarmAppLED = CreateAlarm(updatable_parameters.App_LED_freq,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTIN
 225              		.loc 1 94 0
 226 00c0 2D4B     		ldr	r3, .L3+28
 227 00c2 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 228 00c4 99B2     		uxth	r1, r3
 229 00c6 324C     		ldr	r4, .L3+52
 230 00c8 3846     		mov	r0, r7
 231 00ca 0723     		movs	r3, #7
 232 00cc 0122     		movs	r2, #1
 233 00ce FFF7FEFF 		bl	CreateAlarm
 234 00d2 2246     		mov	r2, r4
 235 00d4 3B46     		mov	r3, r7
 236 00d6 1968     		ldr	r1, [r3]	@ unaligned
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 7


 237 00d8 1160     		str	r1, [r2]	@ unaligned
 238 00da 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 239 00dc 9380     		strh	r3, [r2, #4]	@ unaligned
  95:notoriOS.c    ****     timeToAppLED = 1u;
 240              		.loc 1 95 0
 241 00de 2D4B     		ldr	r3, .L3+56
 242 00e0 0122     		movs	r2, #1
 243 00e2 1A70     		strb	r2, [r3]
  96:notoriOS.c    ****     
  97:notoriOS.c    ****     alarmLevelSensor = CreateAlarm(updatable_parameters.Level_Sensor_freq,ALARM_TYPE_MINUTE, ALARM_
 244              		.loc 1 97 0
 245 00e4 244B     		ldr	r3, .L3+28
 246 00e6 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 247 00e8 99B2     		uxth	r1, r3
 248 00ea 2B4C     		ldr	r4, .L3+60
 249 00ec 3846     		mov	r0, r7
 250 00ee 0723     		movs	r3, #7
 251 00f0 0122     		movs	r2, #1
 252 00f2 FFF7FEFF 		bl	CreateAlarm
 253 00f6 2246     		mov	r2, r4
 254 00f8 3B46     		mov	r3, r7
 255 00fa 1968     		ldr	r1, [r3]	@ unaligned
 256 00fc 1160     		str	r1, [r2]	@ unaligned
 257 00fe 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 258 0100 9380     		strh	r3, [r2, #4]	@ unaligned
  98:notoriOS.c    ****     timeToLevelSensor = 1u;
 259              		.loc 1 98 0
 260 0102 264B     		ldr	r3, .L3+64
 261 0104 0122     		movs	r2, #1
 262 0106 1A70     		strb	r2, [r3]
  99:notoriOS.c    ****     
 100:notoriOS.c    ****     alarmDownstreamLevelSensor = CreateAlarm(updatable_parameters.Downstream_Level_Sensor_freq,ALAR
 263              		.loc 1 100 0
 264 0108 1B4B     		ldr	r3, .L3+28
 265 010a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 266 010c 99B2     		uxth	r1, r3
 267 010e 244C     		ldr	r4, .L3+68
 268 0110 3846     		mov	r0, r7
 269 0112 0723     		movs	r3, #7
 270 0114 0122     		movs	r2, #1
 271 0116 FFF7FEFF 		bl	CreateAlarm
 272 011a 2246     		mov	r2, r4
 273 011c 3B46     		mov	r3, r7
 274 011e 1968     		ldr	r1, [r3]	@ unaligned
 275 0120 1160     		str	r1, [r2]	@ unaligned
 276 0122 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 277 0124 9380     		strh	r3, [r2, #4]	@ unaligned
 101:notoriOS.c    ****     timeToDownstreamLevelSensor = 1u;
 278              		.loc 1 101 0
 279 0126 1F4B     		ldr	r3, .L3+72
 280 0128 0122     		movs	r2, #1
 281 012a 1A70     		strb	r2, [r3]
 102:notoriOS.c    ****     
 103:notoriOS.c    ****     //alarmValve = CreateAlarm(updatable_parameters.Valve_freq, ALARM_TYPE_MINUTE,ALARM_TYPE_CONTIN
 104:notoriOS.c    ****     //timeToValve = 1u;
 105:notoriOS.c    **** 
 106:notoriOS.c    ****     alarmAutosampler = CreateAlarm(updatable_parameters.Autosampler_freq,ALARM_TYPE_MINUTE,ALARM_TY
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 8


 282              		.loc 1 106 0
 283 012c 124B     		ldr	r3, .L3+28
 284 012e 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 285 0130 99B2     		uxth	r1, r3
 286 0132 1D4C     		ldr	r4, .L3+76
 287 0134 3846     		mov	r0, r7
 288 0136 0723     		movs	r3, #7
 289 0138 0122     		movs	r2, #1
 290 013a FFF7FEFF 		bl	CreateAlarm
 291 013e 2246     		mov	r2, r4
 292 0140 3B46     		mov	r3, r7
 293 0142 1968     		ldr	r1, [r3]	@ unaligned
 294 0144 1160     		str	r1, [r2]	@ unaligned
 295 0146 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 296 0148 9380     		strh	r3, [r2, #4]	@ unaligned
 107:notoriOS.c    ****     timeToAutosampler = 1u;
 297              		.loc 1 107 0
 298 014a 184B     		ldr	r3, .L3+80
 299 014c 0122     		movs	r2, #1
 300 014e 1A70     		strb	r2, [r3]
 108:notoriOS.c    ****     /* app add template
 109:notoriOS.c    ****     alarm<Name> = CreateAlarm(updatable_parameters.<Name>_freq,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINU
 110:notoriOS.c    ****     timeTo<Name> = 1u;
 111:notoriOS.c    ****     */
 112:notoriOS.c    ****     //---------------------------------------------------------------------------------------------
 113:notoriOS.c    **** 
 114:notoriOS.c    ****     
 115:notoriOS.c    ****     // Initialize the try counter to 0
 116:notoriOS.c    ****     uint8 try_counter = 0;
 301              		.loc 1 116 0
 302 0150 0023     		movs	r3, #0
 303 0152 FB75     		strb	r3, [r7, #23]
 117:notoriOS.c    **** }
 304              		.loc 1 117 0
 305 0154 00BF     		nop
 306 0156 1837     		adds	r7, r7, #24
 307              		.cfi_def_cfa_offset 16
 308 0158 BD46     		mov	sp, r7
 309              		.cfi_def_cfa_register 13
 310              		@ sp needed
 311 015a B0BD     		pop	{r4, r5, r7, pc}
 312              	.L4:
 313              		.align	2
 314              	.L3:
 315 015c 00000000 		.word	Wakeup_ISR
 316 0160 00000000 		.word	.LC0
 317 0164 04000000 		.word	system_info+4
 318 0168 00000000 		.word	system_info
 319 016c 00000000 		.word	modem_info
 320 0170 00000000 		.word	system_settings
 321 0174 08000000 		.word	.LC1
 322 0178 00000000 		.word	updatable_parameters
 323 017c 00000000 		.word	alarmMeasure
 324 0180 00000000 		.word	timeToMeasure
 325 0184 00000000 		.word	alarmSync
 326 0188 00000000 		.word	timeToSync
 327 018c 00000000 		.word	timeToSycnRemoteParams
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 9


 328 0190 00000000 		.word	alarmAppLED
 329 0194 00000000 		.word	timeToAppLED
 330 0198 00000000 		.word	alarmLevelSensor
 331 019c 00000000 		.word	timeToLevelSensor
 332 01a0 00000000 		.word	alarmDownstreamLevelSensor
 333 01a4 00000000 		.word	timeToDownstreamLevelSensor
 334 01a8 00000000 		.word	alarmAutosampler
 335 01ac 00000000 		.word	timeToAutosampler
 336              		.cfi_endproc
 337              	.LFE65:
 338              		.size	ReadyOrNot, .-ReadyOrNot
 339              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 340              		.align	2
 341              		.global	WorkWorkWorkWorkWorkWork
 342              		.thumb
 343              		.thumb_func
 344              		.type	WorkWorkWorkWorkWorkWork, %function
 345              	WorkWorkWorkWorkWorkWork:
 346              	.LFB66:
 118:notoriOS.c    **** 
 119:notoriOS.c    **** 
 120:notoriOS.c    **** // ==============================================
 121:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
 122:notoriOS.c    **** //      - Rihanna, feat Drake (2016)
 123:notoriOS.c    **** //
 124:notoriOS.c    **** // Prorcesses core tasks
 125:notoriOS.c    **** // ==============================================
 126:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
 127:notoriOS.c    **** {
 347              		.loc 1 127 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 8
 350              		@ frame_needed = 1, uses_anonymous_args = 0
 351 0000 80B5     		push	{r7, lr}
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 7, -8
 354              		.cfi_offset 14, -4
 355 0002 82B0     		sub	sp, sp, #8
 356              		.cfi_def_cfa_offset 16
 357 0004 00AF     		add	r7, sp, #0
 358              		.cfi_def_cfa_register 7
 128:notoriOS.c    ****     
 129:notoriOS.c    ****     
 130:notoriOS.c    ****     
 131:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 132:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 133:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
 134:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 135:notoriOS.c    ****     
 136:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 137:notoriOS.c    ****     if(timeToSycnRemoteParams){
 359              		.loc 1 137 0
 360 0006 304B     		ldr	r3, .L14
 361 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 362 000a 002B     		cmp	r3, #0
 363 000c 06D0     		beq	.L6
 138:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 10


 364              		.loc 1 138 0
 365 000e FFF7FEFF 		bl	configureRemoteParams
 366 0012 0346     		mov	r3, r0
 367 0014 1A46     		mov	r2, r3
 368 0016 2C4B     		ldr	r3, .L14
 369 0018 1A70     		strb	r2, [r3]
 370 001a 09E0     		b	.L7
 371              	.L6:
 139:notoriOS.c    ****     }
 140:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 141:notoriOS.c    ****     else if(timeToMeasure){
 372              		.loc 1 141 0
 373 001c 2B4B     		ldr	r3, .L14+4
 374 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 375 0020 002B     		cmp	r3, #0
 376 0022 05D0     		beq	.L7
 142:notoriOS.c    ****         // on custom nodes makeMeasurements will just be battery voltages
 143:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 377              		.loc 1 143 0
 378 0024 FFF7FEFF 		bl	makeMeasurements
 379 0028 0346     		mov	r3, r0
 380 002a 1A46     		mov	r2, r3
 381 002c 274B     		ldr	r3, .L14+4
 382 002e 1A70     		strb	r2, [r3]
 383              	.L7:
 144:notoriOS.c    ****     }  
 145:notoriOS.c    ****     // custom nodes
 146:notoriOS.c    ****     // APP_INTERFACE-------------------------------------------------------------------------------
 147:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_CUSTOM){
 384              		.loc 1 147 0
 385 0030 274B     		ldr	r3, .L14+8
 386 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 387 0034 042B     		cmp	r3, #4
 388 0036 33D1     		bne	.L8
 148:notoriOS.c    ****         if(App_LED_enabled && timeToAppLED){
 389              		.loc 1 148 0
 390 0038 264B     		ldr	r3, .L14+12
 391 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 392 003c 002B     		cmp	r3, #0
 393 003e 09D0     		beq	.L9
 394              		.loc 1 148 0 is_stmt 0 discriminator 1
 395 0040 254B     		ldr	r3, .L14+16
 396 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 397 0044 002B     		cmp	r3, #0
 398 0046 05D0     		beq	.L9
 149:notoriOS.c    ****             timeToAppLED = App_LED();
 399              		.loc 1 149 0 is_stmt 1
 400 0048 FFF7FEFF 		bl	App_LED
 401 004c 0346     		mov	r3, r0
 402 004e 1A46     		mov	r2, r3
 403 0050 214B     		ldr	r3, .L14+16
 404 0052 1A70     		strb	r2, [r3]
 405              	.L9:
 150:notoriOS.c    ****         }
 151:notoriOS.c    ****         if(level_sensor_enabled && timeToLevelSensor){
 406              		.loc 1 151 0
 407 0054 214B     		ldr	r3, .L14+20
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 11


 408 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 409 0058 002B     		cmp	r3, #0
 410 005a 09D0     		beq	.L10
 411              		.loc 1 151 0 is_stmt 0 discriminator 1
 412 005c 204B     		ldr	r3, .L14+24
 413 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 414 0060 002B     		cmp	r3, #0
 415 0062 05D0     		beq	.L10
 152:notoriOS.c    ****             timeToLevelSensor = level_sensor();
 416              		.loc 1 152 0 is_stmt 1
 417 0064 FFF7FEFF 		bl	level_sensor
 418 0068 0346     		mov	r3, r0
 419 006a 1A46     		mov	r2, r3
 420 006c 1C4B     		ldr	r3, .L14+24
 421 006e 1A70     		strb	r2, [r3]
 422              	.L10:
 153:notoriOS.c    ****         }
 154:notoriOS.c    ****         /*
 155:notoriOS.c    ****         if(downstream_level_sensor_enabled && timeToDownstreamLevelSensor){
 156:notoriOS.c    ****             timeToDownstreamLevelSensor = downstream_level_sensor();
 157:notoriOS.c    ****         }
 158:notoriOS.c    ****         */
 159:notoriOS.c    ****         if (valve_enabled){
 423              		.loc 1 159 0
 424 0070 1C4B     		ldr	r3, .L14+28
 425 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 426 0074 002B     		cmp	r3, #0
 427 0076 05D0     		beq	.L11
 160:notoriOS.c    ****             valve_enabled = App_Valve();
 428              		.loc 1 160 0
 429 0078 FFF7FEFF 		bl	App_Valve
 430 007c 0346     		mov	r3, r0
 431 007e 1A46     		mov	r2, r3
 432 0080 184B     		ldr	r3, .L14+28
 433 0082 1A70     		strb	r2, [r3]
 434              	.L11:
 161:notoriOS.c    ****         }
 162:notoriOS.c    ****         
 163:notoriOS.c    ****         if(autosampler_enabled && timeToAutosampler){
 435              		.loc 1 163 0
 436 0084 184B     		ldr	r3, .L14+32
 437 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 438 0088 002B     		cmp	r3, #0
 439 008a 09D0     		beq	.L8
 440              		.loc 1 163 0 is_stmt 0 discriminator 1
 441 008c 174B     		ldr	r3, .L14+36
 442 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 443 0090 002B     		cmp	r3, #0
 444 0092 05D0     		beq	.L8
 164:notoriOS.c    ****             timeToAutosampler = App_Autosampler();
 445              		.loc 1 164 0 is_stmt 1
 446 0094 FFF7FEFF 		bl	App_Autosampler
 447 0098 0346     		mov	r3, r0
 448 009a 1A46     		mov	r2, r3
 449 009c 134B     		ldr	r3, .L14+36
 450 009e 1A70     		strb	r2, [r3]
 451              	.L8:
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 12


 165:notoriOS.c    ****         }
 166:notoriOS.c    ****         // add other custom apps below
 167:notoriOS.c    ****         /* add app template
 168:notoriOS.c    ****         if(<name>_enabled && timeTo<Name>){
 169:notoriOS.c    ****             timeTo<Name> = App_<Name>();
 170:notoriOS.c    ****         }
 171:notoriOS.c    ****         */
 172:notoriOS.c    ****     }
 173:notoriOS.c    **** 
 174:notoriOS.c    ****     if(timeToSync){
 452              		.loc 1 174 0
 453 00a0 134B     		ldr	r3, .L14+40
 454 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 455 00a4 002B     		cmp	r3, #0
 456 00a6 05D0     		beq	.L12
 175:notoriOS.c    ****         timeToSync = syncData();
 457              		.loc 1 175 0
 458 00a8 FFF7FEFF 		bl	syncData
 459 00ac 0346     		mov	r3, r0
 460 00ae 1A46     		mov	r2, r3
 461 00b0 0F4B     		ldr	r3, .L14+40
 462 00b2 1A70     		strb	r2, [r3]
 463              	.L12:
 176:notoriOS.c    ****     }
 177:notoriOS.c    ****     
 178:notoriOS.c    ****     // Print the countdown to the next alarm
 179:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 180:notoriOS.c    ****     
 181:notoriOS.c    ****     
 182:notoriOS.c    ****     // Check modem state machine on every loop
 183:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
 464              		.loc 1 183 0
 465 00b4 FFF7FEFF 		bl	modem_process_tasks
 466 00b8 0346     		mov	r3, r0
 467 00ba FB71     		strb	r3, [r7, #7]
 184:notoriOS.c    **** 
 185:notoriOS.c    ****     return 0u +  modem_status;  
 468              		.loc 1 185 0
 469 00bc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 186:notoriOS.c    **** }
 470              		.loc 1 186 0
 471 00be 1846     		mov	r0, r3
 472 00c0 0837     		adds	r7, r7, #8
 473              		.cfi_def_cfa_offset 8
 474 00c2 BD46     		mov	sp, r7
 475              		.cfi_def_cfa_register 13
 476              		@ sp needed
 477 00c4 80BD     		pop	{r7, pc}
 478              	.L15:
 479 00c6 00BF     		.align	2
 480              	.L14:
 481 00c8 00000000 		.word	timeToSycnRemoteParams
 482 00cc 00000000 		.word	timeToMeasure
 483 00d0 00000000 		.word	updatable_parameters
 484 00d4 00000000 		.word	App_LED_enabled
 485 00d8 00000000 		.word	timeToAppLED
 486 00dc 00000000 		.word	level_sensor_enabled
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 13


 487 00e0 00000000 		.word	timeToLevelSensor
 488 00e4 00000000 		.word	valve_enabled
 489 00e8 00000000 		.word	autosampler_enabled
 490 00ec 00000000 		.word	timeToAutosampler
 491 00f0 00000000 		.word	timeToSync
 492              		.cfi_endproc
 493              	.LFE66:
 494              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 495              		.section	.text.LayBack,"ax",%progbits
 496              		.align	2
 497              		.global	LayBack
 498              		.thumb
 499              		.thumb_func
 500              		.type	LayBack, %function
 501              	LayBack:
 502              	.LFB67:
 187:notoriOS.c    **** 
 188:notoriOS.c    **** 
 189:notoriOS.c    **** 
 190:notoriOS.c    **** 
 191:notoriOS.c    **** 
 192:notoriOS.c    **** 
 193:notoriOS.c    **** // ==============================================
 194:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 195:notoriOS.c    **** //      - Snoop Dogg (1993)
 196:notoriOS.c    **** //
 197:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 198:notoriOS.c    **** // ==============================================
 199:notoriOS.c    **** void LayBack()
 200:notoriOS.c    **** {
 503              		.loc 1 200 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 1, uses_anonymous_args = 0
 507 0000 80B5     		push	{r7, lr}
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 7, -8
 510              		.cfi_offset 14, -4
 511 0002 00AF     		add	r7, sp, #0
 512              		.cfi_def_cfa_register 7
 201:notoriOS.c    ****   
 202:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 513              		.loc 1 202 0
 514 0004 FFF7FEFF 		bl	modem_sleep
 203:notoriOS.c    ****     
 204:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 205:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 515              		.loc 1 205 0
 516 0008 FFF7FEFF 		bl	debug_sleep
 206:notoriOS.c    ****     
 207:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 517              		.loc 1 207 0
 518 000c FFF7FEFF 		bl	CyPmSaveClocks
 208:notoriOS.c    ****     
 209:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 210:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 211:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 14


 212:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 213:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 214:notoriOS.c    ****     //CyPmHibernate();
 215:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 216:notoriOS.c    **** 
 217:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 519              		.loc 1 217 0
 520 0010 4FF40061 		mov	r1, #2048
 521 0014 0020     		movs	r0, #0
 522 0016 FFF7FEFF 		bl	CyPmSleep
 218:notoriOS.c    **** 
 219:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 523              		.loc 1 219 0
 524 001a FFF7FEFF 		bl	CyPmRestoreClocks
 220:notoriOS.c    **** 
 221:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 525              		.loc 1 221 0
 526 001e FFF7FEFF 		bl	debug_wakeup
 222:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 527              		.loc 1 222 0
 528 0022 FFF7FEFF 		bl	modem_wakeup
 223:notoriOS.c    **** 
 224:notoriOS.c    **** }
 529              		.loc 1 224 0
 530 0026 00BF     		nop
 531 0028 80BD     		pop	{r7, pc}
 532              		.cfi_endproc
 533              	.LFE67:
 534              		.size	LayBack, .-LayBack
 535 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 536              		.align	2
 537              		.global	AyoItsTime
 538              		.thumb
 539              		.thumb_func
 540              		.type	AyoItsTime, %function
 541              	AyoItsTime:
 542              	.LFB68:
 225:notoriOS.c    **** 
 226:notoriOS.c    **** 
 227:notoriOS.c    **** // ==============================================
 228:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 229:notoriOS.c    **** //      - NAS (1994)
 230:notoriOS.c    **** //
 231:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 232:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 233:notoriOS.c    **** // It will add tasks to the work queue,
 234:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 235:notoriOS.c    **** // ==============================================
 236:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 237:notoriOS.c    **** {
 543              		.loc 1 237 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 8
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547 0000 80B5     		push	{r7, lr}
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 7, -8
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 15


 550              		.cfi_offset 14, -4
 551 0002 82B0     		sub	sp, sp, #8
 552              		.cfi_def_cfa_offset 16
 553 0004 00AF     		add	r7, sp, #0
 554              		.cfi_def_cfa_register 7
 555 0006 0346     		mov	r3, r0
 556 0008 FB71     		strb	r3, [r7, #7]
 238:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 239:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 557              		.loc 1 239 0
 558 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 559 000c 1946     		mov	r1, r3
 560 000e 2248     		ldr	r0, .L25
 561 0010 FFF7FEFF 		bl	AlarmReady
 562 0014 0346     		mov	r3, r0
 563 0016 002B     		cmp	r3, #0
 564 0018 02D0     		beq	.L18
 240:notoriOS.c    ****     {
 241:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 242:notoriOS.c    ****         timeToMeasure = 1u;
 565              		.loc 1 242 0
 566 001a 204B     		ldr	r3, .L25+4
 567 001c 0122     		movs	r2, #1
 568 001e 1A70     		strb	r2, [r3]
 569              	.L18:
 243:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 244:notoriOS.c    ****         
 245:notoriOS.c    ****     }
 246:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 570              		.loc 1 246 0
 571 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 572 0022 1946     		mov	r1, r3
 573 0024 1E48     		ldr	r0, .L25+8
 574 0026 FFF7FEFF 		bl	AlarmReady
 575 002a 0346     		mov	r3, r0
 576 002c 002B     		cmp	r3, #0
 577 002e 02D0     		beq	.L19
 247:notoriOS.c    ****     {
 248:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 249:notoriOS.c    ****         timeToSync = 1u;
 578              		.loc 1 249 0
 579 0030 1C4B     		ldr	r3, .L25+12
 580 0032 0122     		movs	r2, #1
 581 0034 1A70     		strb	r2, [r3]
 582              	.L19:
 250:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 251:notoriOS.c    ****     }
 252:notoriOS.c    ****     
 253:notoriOS.c    ****     // APP_INTERFACE-------------------------------------------------------------------------------
 254:notoriOS.c    ****     if(AlarmReady(&alarmAppLED,alarmType)){
 583              		.loc 1 254 0
 584 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 585 0038 1946     		mov	r1, r3
 586 003a 1B48     		ldr	r0, .L25+16
 587 003c FFF7FEFF 		bl	AlarmReady
 588 0040 0346     		mov	r3, r0
 589 0042 002B     		cmp	r3, #0
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 16


 590 0044 02D0     		beq	.L20
 255:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 256:notoriOS.c    ****         timeToAppLED = 1u;
 591              		.loc 1 256 0
 592 0046 194B     		ldr	r3, .L25+20
 593 0048 0122     		movs	r2, #1
 594 004a 1A70     		strb	r2, [r3]
 595              	.L20:
 257:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 258:notoriOS.c    ****     }
 259:notoriOS.c    ****     if(AlarmReady(&alarmLevelSensor, alarmType)){
 596              		.loc 1 259 0
 597 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 598 004e 1946     		mov	r1, r3
 599 0050 1748     		ldr	r0, .L25+24
 600 0052 FFF7FEFF 		bl	AlarmReady
 601 0056 0346     		mov	r3, r0
 602 0058 002B     		cmp	r3, #0
 603 005a 02D0     		beq	.L21
 260:notoriOS.c    ****         timeToLevelSensor = 1u;
 604              		.loc 1 260 0
 605 005c 154B     		ldr	r3, .L25+28
 606 005e 0122     		movs	r2, #1
 607 0060 1A70     		strb	r2, [r3]
 608              	.L21:
 261:notoriOS.c    ****     }
 262:notoriOS.c    ****     if(AlarmReady(&alarmDownstreamLevelSensor, alarmType)){
 609              		.loc 1 262 0
 610 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 611 0064 1946     		mov	r1, r3
 612 0066 1448     		ldr	r0, .L25+32
 613 0068 FFF7FEFF 		bl	AlarmReady
 614 006c 0346     		mov	r3, r0
 615 006e 002B     		cmp	r3, #0
 616 0070 02D0     		beq	.L22
 263:notoriOS.c    ****         timeToDownstreamLevelSensor = 1u;
 617              		.loc 1 263 0
 618 0072 124B     		ldr	r3, .L25+36
 619 0074 0122     		movs	r2, #1
 620 0076 1A70     		strb	r2, [r3]
 621              	.L22:
 264:notoriOS.c    ****     }
 265:notoriOS.c    ****     /*
 266:notoriOS.c    ****     if(AlarmReady(&alarmValve, alarmType)){
 267:notoriOS.c    ****         timeToValve = 1u;
 268:notoriOS.c    ****     }
 269:notoriOS.c    ****     */
 270:notoriOS.c    ****     if(AlarmReady(&alarmAutosampler, alarmType)){
 622              		.loc 1 270 0
 623 0078 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 624 007a 1946     		mov	r1, r3
 625 007c 1048     		ldr	r0, .L25+40
 626 007e FFF7FEFF 		bl	AlarmReady
 627 0082 0346     		mov	r3, r0
 628 0084 002B     		cmp	r3, #0
 629 0086 02D0     		beq	.L24
 271:notoriOS.c    ****         timeToAutosampler = 1u;
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 17


 630              		.loc 1 271 0
 631 0088 0E4B     		ldr	r3, .L25+44
 632 008a 0122     		movs	r2, #1
 633 008c 1A70     		strb	r2, [r3]
 634              	.L24:
 272:notoriOS.c    ****     }
 273:notoriOS.c    ****     /* app add template
 274:notoriOS.c    ****     if(AlarmReady(&alarm<Name>, alarmType)){
 275:notoriOS.c    ****         timeTo<Name> = 1u;
 276:notoriOS.c    ****     }
 277:notoriOS.c    ****     */
 278:notoriOS.c    ****     // --------------------------------------------------------------------------------------------
 279:notoriOS.c    **** 
 280:notoriOS.c    **** }
 635              		.loc 1 280 0
 636 008e 00BF     		nop
 637 0090 0837     		adds	r7, r7, #8
 638              		.cfi_def_cfa_offset 8
 639 0092 BD46     		mov	sp, r7
 640              		.cfi_def_cfa_register 13
 641              		@ sp needed
 642 0094 80BD     		pop	{r7, pc}
 643              	.L26:
 644 0096 00BF     		.align	2
 645              	.L25:
 646 0098 00000000 		.word	alarmMeasure
 647 009c 00000000 		.word	timeToMeasure
 648 00a0 00000000 		.word	alarmSync
 649 00a4 00000000 		.word	timeToSync
 650 00a8 00000000 		.word	alarmAppLED
 651 00ac 00000000 		.word	timeToAppLED
 652 00b0 00000000 		.word	alarmLevelSensor
 653 00b4 00000000 		.word	timeToLevelSensor
 654 00b8 00000000 		.word	alarmDownstreamLevelSensor
 655 00bc 00000000 		.word	timeToDownstreamLevelSensor
 656 00c0 00000000 		.word	alarmAutosampler
 657 00c4 00000000 		.word	timeToAutosampler
 658              		.cfi_endproc
 659              	.LFE68:
 660              		.size	AyoItsTime, .-AyoItsTime
 661              		.section	.text.AlarmReady,"ax",%progbits
 662              		.align	2
 663              		.global	AlarmReady
 664              		.thumb
 665              		.thumb_func
 666              		.type	AlarmReady, %function
 667              	AlarmReady:
 668              	.LFB69:
 281:notoriOS.c    **** 
 282:notoriOS.c    **** 
 283:notoriOS.c    **** // ==============================================
 284:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 285:notoriOS.c    **** // ==============================================
 286:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 287:notoriOS.c    **** {
 669              		.loc 1 287 0
 670              		.cfi_startproc
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 18


 671              		@ args = 0, pretend = 0, frame = 8
 672              		@ frame_needed = 1, uses_anonymous_args = 0
 673 0000 80B5     		push	{r7, lr}
 674              		.cfi_def_cfa_offset 8
 675              		.cfi_offset 7, -8
 676              		.cfi_offset 14, -4
 677 0002 82B0     		sub	sp, sp, #8
 678              		.cfi_def_cfa_offset 16
 679 0004 00AF     		add	r7, sp, #0
 680              		.cfi_def_cfa_register 7
 681 0006 7860     		str	r0, [r7, #4]
 682 0008 0B46     		mov	r3, r1
 683 000a FB70     		strb	r3, [r7, #3]
 288:notoriOS.c    ****     // if the countDownType matches the alarmType
 289:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 684              		.loc 1 289 0
 685 000c 7B68     		ldr	r3, [r7, #4]
 686 000e 1B79     		ldrb	r3, [r3, #4]
 687 0010 DBB2     		uxtb	r3, r3
 688 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 689 0014 9A42     		cmp	r2, r3
 690 0016 12D1     		bne	.L28
 290:notoriOS.c    ****        
 291:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 292:notoriOS.c    ****         // Decrement the count down value by 1
 293:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 691              		.loc 1 293 0
 692 0018 7B68     		ldr	r3, [r7, #4]
 693 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 694 001c 1BB2     		sxth	r3, r3
 695 001e 9BB2     		uxth	r3, r3
 696 0020 013B     		subs	r3, r3, #1
 697 0022 9BB2     		uxth	r3, r3
 698 0024 1AB2     		sxth	r2, r3
 699 0026 7B68     		ldr	r3, [r7, #4]
 700 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 294:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 295:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 701              		.loc 1 295 0
 702 002a 7B68     		ldr	r3, [r7, #4]
 703 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 704 002e 1BB2     		sxth	r3, r3
 705 0030 002B     		cmp	r3, #0
 706 0032 04DC     		bgt	.L28
 296:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 707              		.loc 1 296 0
 708 0034 7868     		ldr	r0, [r7, #4]
 709 0036 FFF7FEFF 		bl	ResetAlarm
 297:notoriOS.c    ****             return 1u;
 710              		.loc 1 297 0
 711 003a 0123     		movs	r3, #1
 712 003c 00E0     		b	.L29
 713              	.L28:
 298:notoriOS.c    ****         } 
 299:notoriOS.c    ****     }
 300:notoriOS.c    ****     
 301:notoriOS.c    ****     return 0u; // Otherwise return 0
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 19


 714              		.loc 1 301 0
 715 003e 0023     		movs	r3, #0
 716              	.L29:
 302:notoriOS.c    **** }
 717              		.loc 1 302 0
 718 0040 1846     		mov	r0, r3
 719 0042 0837     		adds	r7, r7, #8
 720              		.cfi_def_cfa_offset 8
 721 0044 BD46     		mov	sp, r7
 722              		.cfi_def_cfa_register 13
 723              		@ sp needed
 724 0046 80BD     		pop	{r7, pc}
 725              		.cfi_endproc
 726              	.LFE69:
 727              		.size	AlarmReady, .-AlarmReady
 728              		.section	.text.ResetAlarm,"ax",%progbits
 729              		.align	2
 730              		.global	ResetAlarm
 731              		.thumb
 732              		.thumb_func
 733              		.type	ResetAlarm, %function
 734              	ResetAlarm:
 735              	.LFB70:
 303:notoriOS.c    **** 
 304:notoriOS.c    **** // ==============================================
 305:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 306:notoriOS.c    **** // ==============================================
 307:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 308:notoriOS.c    **** {
 736              		.loc 1 308 0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 8
 739              		@ frame_needed = 1, uses_anonymous_args = 0
 740              		@ link register save eliminated.
 741 0000 80B4     		push	{r7}
 742              		.cfi_def_cfa_offset 4
 743              		.cfi_offset 7, -4
 744 0002 83B0     		sub	sp, sp, #12
 745              		.cfi_def_cfa_offset 16
 746 0004 00AF     		add	r7, sp, #0
 747              		.cfi_def_cfa_register 7
 748 0006 7860     		str	r0, [r7, #4]
 309:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 310:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 749              		.loc 1 310 0
 750 0008 7B68     		ldr	r3, [r7, #4]
 751 000a 1B88     		ldrh	r3, [r3]	@ movhi
 752 000c 9BB2     		uxth	r3, r3
 753 000e 1AB2     		sxth	r2, r3
 754 0010 7B68     		ldr	r3, [r7, #4]
 755 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 311:notoriOS.c    **** }
 756              		.loc 1 311 0
 757 0014 00BF     		nop
 758 0016 0C37     		adds	r7, r7, #12
 759              		.cfi_def_cfa_offset 4
 760 0018 BD46     		mov	sp, r7
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 20


 761              		.cfi_def_cfa_register 13
 762              		@ sp needed
 763 001a 80BC     		pop	{r7}
 764              		.cfi_restore 7
 765              		.cfi_def_cfa_offset 0
 766 001c 7047     		bx	lr
 767              		.cfi_endproc
 768              	.LFE70:
 769              		.size	ResetAlarm, .-ResetAlarm
 770 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
 771              		.align	2
 772              		.global	CreateAlarm
 773              		.thumb
 774              		.thumb_func
 775              		.type	CreateAlarm, %function
 776              	CreateAlarm:
 777              	.LFB71:
 312:notoriOS.c    **** 
 313:notoriOS.c    **** // ==============================================
 314:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 315:notoriOS.c    **** // ==============================================
 316:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 317:notoriOS.c    **** {
 778              		.loc 1 317 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 16
 781              		@ frame_needed = 1, uses_anonymous_args = 0
 782              		@ link register save eliminated.
 783 0000 80B4     		push	{r7}
 784              		.cfi_def_cfa_offset 4
 785              		.cfi_offset 7, -4
 786 0002 85B0     		sub	sp, sp, #20
 787              		.cfi_def_cfa_offset 24
 788 0004 00AF     		add	r7, sp, #0
 789              		.cfi_def_cfa_register 7
 790 0006 7860     		str	r0, [r7, #4]
 791 0008 0846     		mov	r0, r1
 792 000a 1146     		mov	r1, r2
 793 000c 1A46     		mov	r2, r3
 794 000e 0346     		mov	r3, r0	@ movhi
 795 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 796 0012 0B46     		mov	r3, r1
 797 0014 7B70     		strb	r3, [r7, #1]
 798 0016 1346     		mov	r3, r2
 799 0018 3B70     		strb	r3, [r7]
 318:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 319:notoriOS.c    ****     alarm newAlarm;
 320:notoriOS.c    ****     
 321:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 322:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 800              		.loc 1 322 0
 801 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 802 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 323:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 803              		.loc 1 323 0
 804 001e 7B78     		ldrb	r3, [r7, #1]
 805 0020 3B73     		strb	r3, [r7, #12]
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 21


 324:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 806              		.loc 1 324 0
 807 0022 3B78     		ldrb	r3, [r7]
 808 0024 7B73     		strb	r3, [r7, #13]
 325:notoriOS.c    ****     
 326:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 327:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 328:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 809              		.loc 1 328 0
 810 0026 B7F90230 		ldrsh	r3, [r7, #2]
 811 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 329:notoriOS.c    ****     
 330:notoriOS.c    ****     return newAlarm;
 812              		.loc 1 330 0
 813 002c 7B68     		ldr	r3, [r7, #4]
 814 002e 1A46     		mov	r2, r3
 815 0030 07F10803 		add	r3, r7, #8
 816 0034 1868     		ldr	r0, [r3]	@ unaligned
 817 0036 1060     		str	r0, [r2]	@ unaligned
 818 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 819 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 331:notoriOS.c    ****     
 332:notoriOS.c    **** }
 820              		.loc 1 332 0
 821 003c 7868     		ldr	r0, [r7, #4]
 822 003e 1437     		adds	r7, r7, #20
 823              		.cfi_def_cfa_offset 4
 824 0040 BD46     		mov	sp, r7
 825              		.cfi_def_cfa_register 13
 826              		@ sp needed
 827 0042 80BC     		pop	{r7}
 828              		.cfi_restore 7
 829              		.cfi_def_cfa_offset 0
 830 0044 7047     		bx	lr
 831              		.cfi_endproc
 832              	.LFE71:
 833              		.size	CreateAlarm, .-CreateAlarm
 834 0046 00BF     		.section	.rodata
 835 0043 00       		.align	2
 836              	.LC2:
 837 0044 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 837      2D2D2D2D 
 837      2D2D2D2D 
 837      2D424547 
 837      494E2054 
 838 006e 0000     		.align	2
 839              	.LC3:
 840 0070 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\000"
 840      3D25732C 
 840      2053494D 
 840      49443D25 
 840      732C2044 
 841 008f 00       		.align	2
 842              	.LC4:
 843 0090 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 843      2D2D2D2D 
 843      2D2D2D2D 
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 22


 843      2D2D2D45 
 843      4E442054 
 844 00b9 00       		.ascii	"\000"
 845              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 846              		.align	2
 847              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 848              		.thumb
 849              		.thumb_func
 850              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 851              	ChickityCheckYourselfBeforeYouWreckYourself:
 852              	.LFB72:
 333:notoriOS.c    **** 
 334:notoriOS.c    **** // ==============================================
 335:notoriOS.c    **** // Dropping bombs on your moms
 336:notoriOS.c    **** //      - Ice Cube (1992)
 337:notoriOS.c    **** //
 338:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 339:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 340:notoriOS.c    **** // ==============================================
 341:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 853              		.loc 1 341 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 1944
 856              		@ frame_needed = 1, uses_anonymous_args = 0
 857 0000 90B5     		push	{r4, r7, lr}
 858              		.cfi_def_cfa_offset 12
 859              		.cfi_offset 4, -12
 860              		.cfi_offset 7, -8
 861              		.cfi_offset 14, -4
 862 0002 ADF6141D 		subw	sp, sp, #2324
 863              		.cfi_def_cfa_offset 2336
 864 0006 5EAF     		add	r7, sp, #376
 865              		.cfi_def_cfa 7, 1960
 342:notoriOS.c    **** 
 343:notoriOS.c    ****     //test_t t_influx = influx_test();
 344:notoriOS.c    ****     //printTestStatus(t_influx);
 345:notoriOS.c    ****     
 346:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 866              		.loc 1 346 0
 867 0008 3849     		ldr	r1, .L34
 868 000a 0320     		movs	r0, #3
 869 000c FFF7FEFF 		bl	printNotif
 347:notoriOS.c    ****     
 348:notoriOS.c    ****     // Test level sensor
 349:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 870              		.loc 1 349 0
 871 0010 07F21463 		addw	r3, r7, #1556
 872 0014 1846     		mov	r0, r3
 873 0016 FFF7FEFF 		bl	level_sensor_test
 350:notoriOS.c    ****     printTestStatus(t_level_sensor);
 874              		.loc 1 350 0
 875 001a 07F21464 		addw	r4, r7, #1556
 876 001e 6846     		mov	r0, sp
 877 0020 04F11003 		add	r3, r4, #16
 878 0024 40F27112 		movw	r2, #369
 879 0028 1946     		mov	r1, r3
 880 002a FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 23


 881 002e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 882 0032 FFF7FEFF 		bl	printTestStatus
 351:notoriOS.c    ****     
 352:notoriOS.c    ****     // Test downstream level sensor
 353:notoriOS.c    ****     //test_t t_down_level = downstream_level_sensor_test();
 354:notoriOS.c    ****     //printTestStatus(t_down_level);
 355:notoriOS.c    ****     
 356:notoriOS.c    ****     // Test valve
 357:notoriOS.c    ****     //test_t t_valve = valve_test();
 358:notoriOS.c    ****     //printTestStatus(t_valve);
 359:notoriOS.c    ****     // need to know the valve type in order to measure position
 360:notoriOS.c    ****     // but we don't know that until we talk to the server. 
 361:notoriOS.c    ****     // TODO: resolve this. find a way to test the valve without that info
 362:notoriOS.c    ****     
 363:notoriOS.c    ****     // Test voltages
 364:notoriOS.c    ****     test_t t_voltages = voltages_test();
 883              		.loc 1 364 0
 884 0036 07F59263 		add	r3, r7, #1168
 885 003a 1846     		mov	r0, r3
 886 003c FFF7FEFF 		bl	voltages_test
 365:notoriOS.c    ****     printTestStatus(t_voltages);
 887              		.loc 1 365 0
 888 0040 07F59264 		add	r4, r7, #1168
 889 0044 6846     		mov	r0, sp
 890 0046 04F11003 		add	r3, r4, #16
 891 004a 40F27112 		movw	r2, #369
 892 004e 1946     		mov	r1, r3
 893 0050 FFF7FEFF 		bl	memcpy
 894 0054 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 895 0058 FFF7FEFF 		bl	printTestStatus
 366:notoriOS.c    ****  
 367:notoriOS.c    ****     // Test voltages
 368:notoriOS.c    ****     test_t t_pressure = pressure_sensor_test();
 896              		.loc 1 368 0
 897 005c 07F54373 		add	r3, r7, #780
 898 0060 1846     		mov	r0, r3
 899 0062 FFF7FEFF 		bl	pressure_sensor_test
 369:notoriOS.c    ****     printTestStatus(t_pressure);
 900              		.loc 1 369 0
 901 0066 07F54374 		add	r4, r7, #780
 902 006a 6846     		mov	r0, sp
 903 006c 04F11003 		add	r3, r4, #16
 904 0070 40F27112 		movw	r2, #369
 905 0074 1946     		mov	r1, r3
 906 0076 FFF7FEFF 		bl	memcpy
 907 007a 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 908 007e FFF7FEFF 		bl	printTestStatus
 370:notoriOS.c    ****     
 371:notoriOS.c    ****     // Test SD card
 372:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 909              		.loc 1 372 0
 910 0082 07F5C473 		add	r3, r7, #392
 911 0086 1846     		mov	r0, r3
 912 0088 FFF7FEFF 		bl	SD_card_test
 373:notoriOS.c    ****     printTestStatus(t_sd_card);
 913              		.loc 1 373 0
 914 008c 07F5C474 		add	r4, r7, #392
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 24


 915 0090 6846     		mov	r0, sp
 916 0092 04F11003 		add	r3, r4, #16
 917 0096 40F27112 		movw	r2, #369
 918 009a 1946     		mov	r1, r3
 919 009c FFF7FEFF 		bl	memcpy
 920 00a0 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 921 00a4 FFF7FEFF 		bl	printTestStatus
 374:notoriOS.c    ****     
 375:notoriOS.c    ****     // Test modem
 376:notoriOS.c    ****     test_t t_modem = modem_test();
 922              		.loc 1 376 0
 923 00a8 3B1D     		adds	r3, r7, #4
 924 00aa 1846     		mov	r0, r3
 925 00ac FFF7FEFF 		bl	modem_test
 377:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s",modem_info.imei,modem_info.sim_i
 926              		.loc 1 377 0
 927 00b0 0F4B     		ldr	r3, .L34+4
 928 00b2 0093     		str	r3, [sp]
 929 00b4 0F4B     		ldr	r3, .L34+8
 930 00b6 104A     		ldr	r2, .L34+12
 931 00b8 1049     		ldr	r1, .L34+16
 932 00ba 0320     		movs	r0, #3
 933 00bc FFF7FEFF 		bl	printNotif
 378:notoriOS.c    ****     printTestStatus(t_modem);
 934              		.loc 1 378 0
 935 00c0 3C1D     		adds	r4, r7, #4
 936 00c2 6846     		mov	r0, sp
 937 00c4 04F11003 		add	r3, r4, #16
 938 00c8 40F27112 		movw	r2, #369
 939 00cc 1946     		mov	r1, r3
 940 00ce FFF7FEFF 		bl	memcpy
 941 00d2 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 942 00d6 FFF7FEFF 		bl	printTestStatus
 379:notoriOS.c    ****     
 380:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 943              		.loc 1 380 0
 944 00da 0949     		ldr	r1, .L34+20
 945 00dc 0320     		movs	r0, #3
 946 00de FFF7FEFF 		bl	printNotif
 381:notoriOS.c    **** 
 382:notoriOS.c    **** }
 947              		.loc 1 382 0
 948 00e2 00BF     		nop
 949 00e4 07F29C77 		addw	r7, r7, #1948
 950              		.cfi_def_cfa_offset 12
 951 00e8 BD46     		mov	sp, r7
 952              		.cfi_def_cfa_register 13
 953              		@ sp needed
 954 00ea 90BD     		pop	{r4, r7, pc}
 955              	.L35:
 956              		.align	2
 957              	.L34:
 958 00ec 44000000 		.word	.LC2
 959 00f0 04000000 		.word	system_info+4
 960 00f4 00000000 		.word	modem_info
 961 00f8 28000000 		.word	modem_info+40
 962 00fc 70000000 		.word	.LC3
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 25


 963 0100 90000000 		.word	.LC4
 964              		.cfi_endproc
 965              	.LFE72:
 966              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 967              		.section	.text.main,"ax",%progbits
 968              		.align	2
 969              		.global	main
 970              		.thumb
 971              		.thumb_func
 972              		.type	main, %function
 973              	main:
 974              	.LFB73:
 383:notoriOS.c    **** 
 384:notoriOS.c    **** // ==============================================
 385:notoriOS.c    **** // Processes Core Tasks
 386:notoriOS.c    **** // ==============================================
 387:notoriOS.c    **** int main(void)
 388:notoriOS.c    **** {
 975              		.loc 1 388 0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 1, uses_anonymous_args = 0
 979 0000 80B5     		push	{r7, lr}
 980              		.cfi_def_cfa_offset 8
 981              		.cfi_offset 7, -8
 982              		.cfi_offset 14, -4
 983 0002 00AF     		add	r7, sp, #0
 984              		.cfi_def_cfa_register 7
 389:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 985              		.loc 1 389 0
 986              		.syntax unified
 987              	@ 389 "notoriOS.c" 1
 988 0004 62B6     		CPSIE   i
 989              	@ 0 "" 2
 390:notoriOS.c    **** 
 391:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 990              		.loc 1 391 0
 991              		.thumb
 992              		.syntax unified
 993 0006 FFF7FEFF 		bl	ReadyOrNot
 392:notoriOS.c    ****     
 393:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 994              		.loc 1 393 0
 995 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 996              	.L38:
 394:notoriOS.c    ****    
 395:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 396:notoriOS.c    ****     {
 397:notoriOS.c    ****         
 398:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 997              		.loc 1 398 0
 998 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 999 0012 0346     		mov	r3, r0
 1000 0014 002B     		cmp	r3, #0
 1001 0016 FAD1     		bne	.L38
 399:notoriOS.c    ****         {
 400:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 26


 1002              		.loc 1 400 0
 1003 0018 FFF7FEFF 		bl	LayBack
 401:notoriOS.c    ****         }
 402:notoriOS.c    ****     }
 1004              		.loc 1 402 0
 1005 001c F7E7     		b	.L38
 1006              		.cfi_endproc
 1007              	.LFE73:
 1008              		.size	main, .-main
 1009 001e 00BF     		.section	.rodata
 1010 00ba 0000     		.align	2
 1011              	.LC5:
 1012 00bc 4D6F6465 		.ascii	"Modem is ready.\000"
 1012      6D206973 
 1012      20726561 
 1012      64792E00 
 1013              		.align	2
 1014              	.LC6:
 1015 00cc 256400   		.ascii	"%d\000"
 1016 00cf 00       		.align	2
 1017              	.LC7:
 1018 00d0 72737270 		.ascii	"rsrp\000"
 1018      00
 1019 00d5 000000   		.align	2
 1020              	.LC8:
 1021 00d8 72736370 		.ascii	"rscp\000"
 1021      00
 1022 00dd 000000   		.align	2
 1023              	.LC9:
 1024 00e0 7472795F 		.ascii	"try_counter\000"
 1024      636F756E 
 1024      74657200 
 1025              		.align	2
 1026              	.LC10:
 1027 00ec 64617461 		.ascii	"data_count_sent\000"
 1027      5F636F75 
 1027      6E745F73 
 1027      656E7400 
 1028              		.align	2
 1029              	.LC11:
 1030 00fc 64617461 		.ascii	"data_count_desired\000"
 1030      5F636F75 
 1030      6E745F64 
 1030      65736972 
 1030      656400
 1031 010f 00       		.align	2
 1032              	.LC12:
 1033 0110 42656769 		.ascii	"Begin HTTP post.\000"
 1033      6E204854 
 1033      54502070 
 1033      6F73742E 
 1033      00
 1034 0121 000000   		.align	2
 1035              	.LC13:
 1036 0124 62653865 		.ascii	"be8e74ae33ab4e2193b00c9e8a7403076c533456\000"
 1036      37346165 
 1036      33336162 
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 27


 1036      34653231 
 1036      39336230 
 1037 014d 000000   		.align	2
 1038              	.LC14:
 1039 0150 6170692F 		.ascii	"api/v1/write\000"
 1039      76312F77 
 1039      72697465 
 1039      00
 1040 015d 000000   		.align	2
 1041              	.LC15:
 1042 0160 48545450 		.ascii	"HTTP route: %s\000"
 1042      20726F75 
 1042      74653A20 
 1042      257300
 1043 016f 00       		.align	2
 1044              	.LC16:
 1045 0170 312E3100 		.ascii	"1.1\000"
 1046              		.align	2
 1047              	.LC17:
 1048 0174 00       		.ascii	"\000"
 1049 0175 000000   		.align	2
 1050              	.LC18:
 1051 0178 436C6F73 		.ascii	"Close\000"
 1051      6500
 1052 017e 0000     		.align	2
 1053              	.LC19:
 1054 0180 504F5354 		.ascii	"POST\000"
 1054      00
 1055 0185 000000   		.align	2
 1056              	.LC20:
 1057 0188 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 1057      20485454 
 1057      50205265 
 1057      71756573 
 1057      743A2025 
 1058 019e 0000     		.align	2
 1059              	.LC21:
 1060 01a0 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 1060      443D312C 
 1060      302C2564 
 1060      2C222573 
 1060      222C302C 
 1061 01b9 000000   		.align	2
 1062              	.LC22:
 1063 01bc 257300   		.ascii	"%s\000"
 1064 01bf 00       		.align	2
 1065              	.LC23:
 1066 01c0 4F4B00   		.ascii	"OK\000"
 1067              		.global	__aeabi_ui2d
 1068              		.global	__aeabi_d2iz
 1069 01c3 00       		.align	2
 1070              	.LC24:
 1071 01c4 68747470 		.ascii	"http_request len: %d\000"
 1071      5F726571 
 1071      75657374 
 1071      206C656E 
 1071      3A202564 
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 28


 1072 01d9 000000   		.align	2
 1073              	.LC25:
 1074 01dc 23206F66 		.ascii	"# of packets: %d\000"
 1074      20706163 
 1074      6B657473 
 1074      3A202564 
 1074      00
 1075 01ed 000000   		.align	2
 1076              	.LC26:
 1077 01f0 3E00     		.ascii	">\000"
 1078 01f2 0000     		.align	2
 1079              	.LC27:
 1080 01f4 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 1080      53454E44 
 1080      3D310D0A 
 1080      00
 1081 0201 000000   		.align	2
 1082              	.LC28:
 1083 0204 1A00     		.ascii	"\032\000"
 1084 0206 0000     		.align	2
 1085              	.LC29:
 1086 0208 6368756E 		.ascii	"chunk %d: %s\000"
 1086      6B202564 
 1086      3A202573 
 1086      00
 1087 0215 000000   		.align	2
 1088              	.LC30:
 1089 0218 5352494E 		.ascii	"SRING\000"
 1089      4700
 1090 021e 0000     		.align	2
 1091              	.LC31:
 1092 0220 4F532D4F 		.ascii	"OS-OK\000"
 1092      4B00
 1093 0226 0000     		.align	2
 1094              	.LC32:
 1095 0228 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 1095      52454356 
 1095      3D312C31 
 1095      3030300D 
 1095      00
 1096 0239 000000   		.align	2
 1097              	.LC33:
 1098 023c 6D6F6465 		.ascii	"modem_tx_time\000"
 1098      6D5F7478 
 1098      5F74696D 
 1098      6500
 1099 024a 0000     		.align	2
 1100              	.LC34:
 1101 024c 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 1101      4F3A2043 
 1101      6F756C64 
 1101      206E6F74 
 1101      20726563 
 1102              		.section	.text.syncData,"ax",%progbits
 1103              		.align	2
 1104              		.global	syncData
 1105              		.thumb
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 29


 1106              		.thumb_func
 1107              		.type	syncData, %function
 1108              	syncData:
 1109              	.LFB74:
 403:notoriOS.c    **** }
 404:notoriOS.c    **** 
 405:notoriOS.c    **** // ==============================================
 406:notoriOS.c    **** // Syncs data with server
 407:notoriOS.c    **** // Returns 0 when done
 408:notoriOS.c    **** // ==============================================
 409:notoriOS.c    **** uint8 syncData(){
 1110              		.loc 1 409 0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 1360
 1113              		@ frame_needed = 1, uses_anonymous_args = 0
 1114 0000 90B5     		push	{r4, r7, lr}
 1115              		.cfi_def_cfa_offset 12
 1116              		.cfi_offset 4, -12
 1117              		.cfi_offset 7, -8
 1118              		.cfi_offset 14, -4
 1119 0002 ADF26C5D 		subw	sp, sp, #1388
 1120              		.cfi_def_cfa_offset 1400
 1121 0006 06AF     		add	r7, sp, #24
 1122              		.cfi_def_cfa 7, 1376
 410:notoriOS.c    ****     
 411:notoriOS.c    ****     /*
 412:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 413:notoriOS.c    ****     uint8 check = 0;
 414:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 415:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 416:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 417:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 418:notoriOS.c    ****     */
 419:notoriOS.c    **** 
 420:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 421:notoriOS.c    ****     LED_Write(1u);
 1123              		.loc 1 421 0
 1124 0008 0120     		movs	r0, #1
 1125 000a FFF7FEFF 		bl	LED_Write
 422:notoriOS.c    ****     CyDelay(100u);
 1126              		.loc 1 422 0
 1127 000e 6420     		movs	r0, #100
 1128 0010 FFF7FEFF 		bl	CyDelay
 423:notoriOS.c    ****     LED_Write(0u);
 1129              		.loc 1 423 0
 1130 0014 0020     		movs	r0, #0
 1131 0016 FFF7FEFF 		bl	LED_Write
 424:notoriOS.c    **** 
 425:notoriOS.c    ****     
 426:notoriOS.c    ****     // If there's no data, not need to do anything
 427:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 1132              		.loc 1 427 0
 1133 001a FFF7FEFF 		bl	sizeOfDataStack
 1134 001e 0346     		mov	r3, r0
 1135 0020 002B     		cmp	r3, #0
 1136 0022 01D1     		bne	.L40
 428:notoriOS.c    ****         return 0u;
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 30


 1137              		.loc 1 428 0
 1138 0024 0023     		movs	r3, #0
 1139 0026 03E2     		b	.L41
 1140              	.L40:
 429:notoriOS.c    ****         }
 430:notoriOS.c    ****     
 431:notoriOS.c    ****     // Create request body, in this case influx
 432:notoriOS.c    ****     // Place body into HTTP request header
 433:notoriOS.c    ****     // Fire up modem and get it out
 434:notoriOS.c    ****      
 435:notoriOS.c    ****     
 436:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 437:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1141              		.loc 1 437 0
 1142 0028 FFF7FEFF 		bl	modem_get_state
 1143 002c 0346     		mov	r3, r0
 1144 002e 002B     		cmp	r3, #0
 1145 0030 11D1     		bne	.L42
 438:notoriOS.c    **** 
 439:notoriOS.c    ****         try_counter++;
 1146              		.loc 1 439 0
 1147 0032 AE4B     		ldr	r3, .L54
 1148 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1149 0036 0133     		adds	r3, r3, #1
 1150 0038 DAB2     		uxtb	r2, r3
 1151 003a AC4B     		ldr	r3, .L54
 1152 003c 1A70     		strb	r2, [r3]
 440:notoriOS.c    ****         	
 441:notoriOS.c    ****         if(try_counter <= 2){
 1153              		.loc 1 441 0
 1154 003e AB4B     		ldr	r3, .L54
 1155 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1156 0042 022B     		cmp	r3, #2
 1157 0044 02D8     		bhi	.L43
 442:notoriOS.c    ****             modem_power_up();
 1158              		.loc 1 442 0
 1159 0046 FFF7FEFF 		bl	modem_power_up
 1160 004a F0E1     		b	.L44
 1161              	.L43:
 443:notoriOS.c    ****         }else{
 444:notoriOS.c    ****             try_counter = 0;
 1162              		.loc 1 444 0
 1163 004c A74B     		ldr	r3, .L54
 1164 004e 0022     		movs	r2, #0
 1165 0050 1A70     		strb	r2, [r3]
 445:notoriOS.c    ****             return 0u;
 1166              		.loc 1 445 0
 1167 0052 0023     		movs	r3, #0
 1168 0054 ECE1     		b	.L41
 1169              	.L42:
 446:notoriOS.c    ****             }
 447:notoriOS.c    ****             
 448:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1170              		.loc 1 448 0
 1171 0056 FFF7FEFF 		bl	modem_get_state
 1172 005a 0346     		mov	r3, r0
 1173 005c 042B     		cmp	r3, #4
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 31


 1174 005e 40F0E681 		bne	.L44
 1175              	.LBB2:
 449:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 1176              		.loc 1 449 0
 1177 0062 A349     		ldr	r1, .L54+4
 1178 0064 0020     		movs	r0, #0
 1179 0066 FFF7FEFF 		bl	printNotif
 450:notoriOS.c    ****         
 451:notoriOS.c    ****         http_request[0] = '\0';
 1180              		.loc 1 451 0
 1181 006a A24B     		ldr	r3, .L54+8
 1182 006c 0022     		movs	r2, #0
 1183 006e 1A70     		strb	r2, [r3]
 452:notoriOS.c    ****         http_body[0] = '\0';
 1184              		.loc 1 452 0
 1185 0070 A14B     		ldr	r3, .L54+12
 1186 0072 0022     		movs	r2, #0
 1187 0074 1A70     		strb	r2, [r3]
 453:notoriOS.c    ****         http_route[0] = '\0';
 1188              		.loc 1 453 0
 1189 0076 A14B     		ldr	r3, .L54+16
 1190 0078 0022     		movs	r2, #0
 1191 007a 1A70     		strb	r2, [r3]
 454:notoriOS.c    ****         //char *base = "write";
 455:notoriOS.c    ****         
 456:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power and RSCP: received signal
 457:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 458:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 1192              		.loc 1 458 0
 1193 007c A04B     		ldr	r3, .L54+20
 1194 007e 5B69     		ldr	r3, [r3, #20]
 1195 0080 07F5A560 		add	r0, r7, #1320
 1196 0084 9F4A     		ldr	r2, .L54+24
 1197 0086 1421     		movs	r1, #20
 1198 0088 FFF7FEFF 		bl	snprintf
 459:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 1199              		.loc 1 459 0
 1200 008c FFF7FEFF 		bl	getTimeStamp
 1201 0090 0246     		mov	r2, r0
 1202 0092 07F5A563 		add	r3, r7, #1320
 1203 0096 1946     		mov	r1, r3
 1204 0098 9B48     		ldr	r0, .L54+28
 1205 009a FFF7FEFF 		bl	pushData
 460:notoriOS.c    ****         
 461:notoriOS.c    ****         char s_rscp[DATA_MAX_KEY_LENGTH];
 462:notoriOS.c    ****         snprintf(s_rscp,sizeof(s_rscp),"%d",modem_stats.rscp);
 1206              		.loc 1 462 0
 1207 009e 984B     		ldr	r3, .L54+20
 1208 00a0 9B68     		ldr	r3, [r3, #8]
 1209 00a2 07F21450 		addw	r0, r7, #1300
 1210 00a6 974A     		ldr	r2, .L54+24
 1211 00a8 1421     		movs	r1, #20
 1212 00aa FFF7FEFF 		bl	snprintf
 463:notoriOS.c    ****         pushData("rscp", s_rscp, getTimeStamp());
 1213              		.loc 1 463 0
 1214 00ae FFF7FEFF 		bl	getTimeStamp
 1215 00b2 0246     		mov	r2, r0
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 32


 1216 00b4 07F21453 		addw	r3, r7, #1300
 1217 00b8 1946     		mov	r1, r3
 1218 00ba 9448     		ldr	r0, .L54+32
 1219 00bc FFF7FEFF 		bl	pushData
 464:notoriOS.c    ****         
 465:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 466:notoriOS.c    ****         char c_try_counter[20];
 467:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 1220              		.loc 1 467 0
 1221 00c0 8A4B     		ldr	r3, .L54
 1222 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1223 00c4 07F5A060 		add	r0, r7, #1280
 1224 00c8 8E4A     		ldr	r2, .L54+24
 1225 00ca 1421     		movs	r1, #20
 1226 00cc FFF7FEFF 		bl	snprintf
 468:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 1227              		.loc 1 468 0
 1228 00d0 FFF7FEFF 		bl	getTimeStamp
 1229 00d4 0246     		mov	r2, r0
 1230 00d6 07F5A063 		add	r3, r7, #1280
 1231 00da 1946     		mov	r1, r3
 1232 00dc 8C48     		ldr	r0, .L54+36
 1233 00de FFF7FEFF 		bl	pushData
 469:notoriOS.c    ****         
 470:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
 471:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 472:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 473:notoriOS.c    ****         if(buffer_overflow == false){
 1234              		.loc 1 473 0
 1235 00e2 8C4B     		ldr	r3, .L54+40
 1236 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1237 00e6 83F00103 		eor	r3, r3, #1
 1238 00ea DBB2     		uxtb	r3, r3
 1239 00ec 002B     		cmp	r3, #0
 1240 00ee 16D0     		beq	.L45
 1241              	.LBB3:
 474:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 1242              		.loc 1 474 0
 1243 00f0 FFF7FEFF 		bl	sizeOfDataStack
 1244 00f4 0346     		mov	r3, r0
 1245 00f6 A7F84835 		strh	r3, [r7, #1352]	@ movhi
 475:notoriOS.c    ****             char c_data_count_sent[20];
 476:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 1246              		.loc 1 476 0
 1247 00fa B7F84835 		ldrh	r3, [r7, #1352]
 1248 00fe 07F59B60 		add	r0, r7, #1240
 1249 0102 804A     		ldr	r2, .L54+24
 1250 0104 1421     		movs	r1, #20
 1251 0106 FFF7FEFF 		bl	snprintf
 477:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1252              		.loc 1 477 0
 1253 010a FFF7FEFF 		bl	getTimeStamp
 1254 010e 0246     		mov	r2, r0
 1255 0110 07F59B63 		add	r3, r7, #1240
 1256 0114 1946     		mov	r1, r3
 1257 0116 8048     		ldr	r0, .L54+44
 1258 0118 FFF7FEFF 		bl	pushData
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 33


 1259              	.LBE3:
 1260 011c 0FE0     		b	.L46
 1261              	.L45:
 1262              	.LBB4:
 478:notoriOS.c    ****         }else{
 479:notoriOS.c    ****             char c_data_count_sent[20];
 480:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1263              		.loc 1 480 0
 1264 011e 07F2C440 		addw	r0, r7, #1220
 1265 0122 9623     		movs	r3, #150
 1266 0124 774A     		ldr	r2, .L54+24
 1267 0126 1421     		movs	r1, #20
 1268 0128 FFF7FEFF 		bl	snprintf
 481:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1269              		.loc 1 481 0
 1270 012c FFF7FEFF 		bl	getTimeStamp
 1271 0130 0246     		mov	r2, r0
 1272 0132 07F2C443 		addw	r3, r7, #1220
 1273 0136 1946     		mov	r1, r3
 1274 0138 7748     		ldr	r0, .L54+44
 1275 013a FFF7FEFF 		bl	pushData
 1276              	.L46:
 1277              	.LBE4:
 482:notoriOS.c    ****         }
 483:notoriOS.c    ****         
 484:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 485:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 1278              		.loc 1 485 0
 1279 013e FFF7FEFF 		bl	sizeOfDataStackDesired
 1280 0142 0346     		mov	r3, r0
 1281 0144 A7F84635 		strh	r3, [r7, #1350]	@ movhi
 486:notoriOS.c    ****         char c_data_count_desired[20];
 487:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 488:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1282              		.loc 1 488 0
 1283 0148 B7F84635 		ldrh	r3, [r7, #1350]
 1284 014c 013B     		subs	r3, r3, #1
 1285 014e 07F2EC40 		addw	r0, r7, #1260
 1286 0152 6C4A     		ldr	r2, .L54+24
 1287 0154 1421     		movs	r1, #20
 1288 0156 FFF7FEFF 		bl	snprintf
 489:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
 1289              		.loc 1 489 0
 1290 015a FFF7FEFF 		bl	getTimeStamp
 1291 015e 0246     		mov	r2, r0
 1292 0160 07F2EC43 		addw	r3, r7, #1260
 1293 0164 1946     		mov	r1, r3
 1294 0166 6D48     		ldr	r0, .L54+48
 1295 0168 FFF7FEFF 		bl	pushData
 490:notoriOS.c    ****         
 491:notoriOS.c    ****         // Construct HTPP request
 492:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1296              		.loc 1 492 0
 1297 016c 6C49     		ldr	r1, .L54+52
 1298 016e 0020     		movs	r0, #0
 1299 0170 FFF7FEFF 		bl	printNotif
 493:notoriOS.c    ****         
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 34


 494:notoriOS.c    ****         // Old influx API
 495:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 496:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1300              		.loc 1 496 0
 1301 0174 6B4B     		ldr	r3, .L54+56
 1302 0176 6C4A     		ldr	r2, .L54+60
 1303 0178 6C49     		ldr	r1, .L54+64
 1304 017a 6048     		ldr	r0, .L54+16
 1305 017c FFF7FEFF 		bl	construct_malcom_route
 497:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1306              		.loc 1 497 0
 1307 0180 5E4A     		ldr	r2, .L54+16
 1308 0182 6B49     		ldr	r1, .L54+68
 1309 0184 0020     		movs	r0, #0
 1310 0186 FFF7FEFF 		bl	printNotif
 498:notoriOS.c    ****         
 499:notoriOS.c    ****         //OLD INFLUX API
 500:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 501:notoriOS.c    ****         construct_malcom_body(http_body);
 1311              		.loc 1 501 0
 1312 018a 5B48     		ldr	r0, .L54+12
 1313 018c FFF7FEFF 		bl	construct_malcom_body
 502:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1314              		.loc 1 502 0
 1315 0190 684B     		ldr	r3, .L54+72
 1316 0192 5B6E     		ldr	r3, [r3, #100]
 1317 0194 684A     		ldr	r2, .L54+76
 1318 0196 0592     		str	r2, [sp, #20]
 1319 0198 0022     		movs	r2, #0
 1320 019a 0492     		str	r2, [sp, #16]
 1321 019c 674A     		ldr	r2, .L54+80
 1322 019e 0392     		str	r2, [sp, #12]
 1323 01a0 674A     		ldr	r2, .L54+84
 1324 01a2 0292     		str	r2, [sp, #8]
 1325 01a4 674A     		ldr	r2, .L54+88
 1326 01a6 0192     		str	r2, [sp, #4]
 1327 01a8 0093     		str	r3, [sp]
 1328 01aa 544B     		ldr	r3, .L54+16
 1329 01ac 614A     		ldr	r2, .L54+72
 1330 01ae 5249     		ldr	r1, .L54+12
 1331 01b0 5048     		ldr	r0, .L54+8
 1332 01b2 FFF7FEFF 		bl	construct_generic_HTTP_request
 503:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1333              		.loc 1 503 0
 1334 01b6 4F4A     		ldr	r2, .L54+8
 1335 01b8 6349     		ldr	r1, .L54+92
 1336 01ba 0020     		movs	r0, #0
 1337 01bc FFF7FEFF 		bl	printNotif
 504:notoriOS.c    ****         
 505:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 506:notoriOS.c    ****         // Open port and begin command line sequence
 507:notoriOS.c    ****         char portConfig[200];
 508:notoriOS.c    ****         uint8 status = 0u;
 1338              		.loc 1 508 0
 1339 01c0 0023     		movs	r3, #0
 1340 01c2 87F84535 		strb	r3, [r7, #1349]
 509:notoriOS.c    ****         
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 35


 510:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1341              		.loc 1 510 0
 1342 01c6 5B4B     		ldr	r3, .L54+72
 1343 01c8 5A6E     		ldr	r2, [r3, #100]
 1344 01ca 381D     		adds	r0, r7, #4
 1345 01cc 594B     		ldr	r3, .L54+72
 1346 01ce 0093     		str	r3, [sp]
 1347 01d0 1346     		mov	r3, r2
 1348 01d2 5E4A     		ldr	r2, .L54+96
 1349 01d4 C821     		movs	r1, #200
 1350 01d6 FFF7FEFF 		bl	snprintf
 511:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1351              		.loc 1 511 0
 1352 01da 3B1D     		adds	r3, r7, #4
 1353 01dc 1A46     		mov	r2, r3
 1354 01de 5C49     		ldr	r1, .L54+100
 1355 01e0 0020     		movs	r0, #0
 1356 01e2 FFF7FEFF 		bl	printNotif
 512:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1357              		.loc 1 512 0
 1358 01e6 3B1D     		adds	r3, r7, #4
 1359 01e8 42F21072 		movw	r2, #10000
 1360 01ec 5949     		ldr	r1, .L54+104
 1361 01ee 1846     		mov	r0, r3
 1362 01f0 FFF7FEFF 		bl	at_write_command
 1363 01f4 0346     		mov	r3, r0
 1364 01f6 87F84535 		strb	r3, [r7, #1349]
 513:notoriOS.c    ****         
 514:notoriOS.c    ****         // create character pointer to chunk through the http_request
 515:notoriOS.c    ****         char *chunk;
 516:notoriOS.c    ****         // Set chunk to start where http_request starts
 517:notoriOS.c    ****         chunk = http_request;
 1365              		.loc 1 517 0
 1366 01fa 3E4B     		ldr	r3, .L54+8
 1367 01fc C7F84C35 		str	r3, [r7, #1356]
 518:notoriOS.c    ****         // variable for the number of packets to send
 519:notoriOS.c    ****         int8 packets;
 520:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1368              		.loc 1 520 0
 1369 0200 3C48     		ldr	r0, .L54+8
 1370 0202 FFF7FEFF 		bl	strlen
 1371 0206 0246     		mov	r2, r0
 1372 0208 534B     		ldr	r3, .L54+108
 1373 020a A3FB0223 		umull	r2, r3, r3, r2
 1374 020e 5B09     		lsrs	r3, r3, #5
 1375 0210 1846     		mov	r0, r3
 1376 0212 FFF7FEFF 		bl	__aeabi_ui2d
 1377 0216 4FF00002 		mov	r2, #0
 1378 021a 504B     		ldr	r3, .L54+112
 1379 021c FFF7FEFF 		bl	nextafter
 1380 0220 0346     		mov	r3, r0
 1381 0222 0C46     		mov	r4, r1
 1382 0224 1846     		mov	r0, r3
 1383 0226 2146     		mov	r1, r4
 1384 0228 FFF7FEFF 		bl	ceil
 1385 022c 0346     		mov	r3, r0
 1386 022e 0C46     		mov	r4, r1
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 36


 1387 0230 1846     		mov	r0, r3
 1388 0232 2146     		mov	r1, r4
 1389 0234 FFF7FEFF 		bl	__aeabi_d2iz
 1390 0238 0346     		mov	r3, r0
 1391 023a 87F84435 		strb	r3, [r7, #1348]
 521:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1392              		.loc 1 521 0
 1393 023e 2D48     		ldr	r0, .L54+8
 1394 0240 FFF7FEFF 		bl	strlen
 1395 0244 0346     		mov	r3, r0
 1396 0246 1A46     		mov	r2, r3
 1397 0248 4549     		ldr	r1, .L54+116
 1398 024a 0020     		movs	r0, #0
 1399 024c FFF7FEFF 		bl	printNotif
 522:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1400              		.loc 1 522 0
 1401 0250 97F94435 		ldrsb	r3, [r7, #1348]
 1402 0254 1A46     		mov	r2, r3
 1403 0256 4349     		ldr	r1, .L54+120
 1404 0258 0020     		movs	r0, #0
 1405 025a FFF7FEFF 		bl	printNotif
 1406              	.LBB5:
 523:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 524:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1407              		.loc 1 524 0
 1408 025e 0023     		movs	r3, #0
 1409 0260 87F84B35 		strb	r3, [r7, #1355]
 1410 0264 9AE0     		b	.L47
 1411              	.L50:
 1412              	.LBB6:
 525:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 526:notoriOS.c    ****             char http_chunk[1001];
 527:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 528:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 529:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1413              		.loc 1 529 0
 1414 0266 4FF47A72 		mov	r2, #1000
 1415 026a 3F49     		ldr	r1, .L54+124
 1416 026c 3F48     		ldr	r0, .L54+128
 1417 026e FFF7FEFF 		bl	at_write_command
 1418 0272 0346     		mov	r3, r0
 1419 0274 87F84535 		strb	r3, [r7, #1349]
 530:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 531:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1420              		.loc 1 531 0
 1421 0278 07F1CC00 		add	r0, r7, #204
 1422 027c D7F84C35 		ldr	r3, [r7, #1356]
 1423 0280 334A     		ldr	r2, .L54+100
 1424 0282 4FF4FA71 		mov	r1, #500
 1425 0286 FFF7FEFF 		bl	snprintf
 532:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 533:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1426              		.loc 1 533 0
 1427 028a 07F1CC03 		add	r3, r7, #204
 1428 028e 1846     		mov	r0, r3
 1429 0290 FFF7FEFF 		bl	strlen
 1430 0294 0346     		mov	r3, r0
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 37


 1431 0296 1A46     		mov	r2, r3
 1432 0298 07F1CC03 		add	r3, r7, #204
 1433 029c 1344     		add	r3, r3, r2
 1434 029e 3449     		ldr	r1, .L54+132
 1435 02a0 1A46     		mov	r2, r3
 1436 02a2 0B46     		mov	r3, r1
 1437 02a4 1B88     		ldrh	r3, [r3]	@ unaligned
 1438 02a6 1380     		strh	r3, [r2]	@ unaligned
 534:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1439              		.loc 1 534 0
 1440 02a8 97F94B25 		ldrsb	r2, [r7, #1355]
 1441 02ac 07F1CC03 		add	r3, r7, #204
 1442 02b0 3049     		ldr	r1, .L54+136
 1443 02b2 0020     		movs	r0, #0
 1444 02b4 FFF7FEFF 		bl	printNotif
 535:notoriOS.c    ****             // Send data to server
 536:notoriOS.c    ****             if ((packet+1) != packets){
 1445              		.loc 1 536 0
 1446 02b8 97F94B35 		ldrsb	r3, [r7, #1355]
 1447 02bc 5A1C     		adds	r2, r3, #1
 1448 02be 97F94435 		ldrsb	r3, [r7, #1348]
 1449 02c2 9A42     		cmp	r2, r3
 1450 02c4 58D0     		beq	.L48
 537:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1451              		.loc 1 537 0
 1452 02c6 07F1CC03 		add	r3, r7, #204
 1453 02ca 41F28832 		movw	r2, #5000
 1454 02ce 2149     		ldr	r1, .L54+104
 1455 02d0 1846     		mov	r0, r3
 1456 02d2 FFF7FEFF 		bl	at_write_command
 1457 02d6 0346     		mov	r3, r0
 1458 02d8 87F84535 		strb	r3, [r7, #1349]
 538:notoriOS.c    ****                 // Move the pointer forward 
 539:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1459              		.loc 1 539 0
 1460 02dc D7F84C35 		ldr	r3, [r7, #1356]
 1461 02e0 03F2F313 		addw	r3, r3, #499
 1462 02e4 C7F84C35 		str	r3, [r7, #1356]
 1463 02e8 51E0     		b	.L49
 1464              	.L55:
 1465 02ea 00BF     		.align	2
 1466              	.L54:
 1467 02ec 00000000 		.word	try_counter
 1468 02f0 BC000000 		.word	.LC5
 1469 02f4 00000000 		.word	http_request
 1470 02f8 00000000 		.word	http_body
 1471 02fc 00000000 		.word	http_route
 1472 0300 00000000 		.word	modem_stats
 1473 0304 CC000000 		.word	.LC6
 1474 0308 D0000000 		.word	.LC7
 1475 030c D8000000 		.word	.LC8
 1476 0310 E0000000 		.word	.LC9
 1477 0314 00000000 		.word	buffer_overflow
 1478 0318 EC000000 		.word	.LC10
 1479 031c FC000000 		.word	.LC11
 1480 0320 10010000 		.word	.LC12
 1481 0324 24010000 		.word	.LC13
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 38


 1482 0328 28000000 		.word	modem_info+40
 1483 032c 50010000 		.word	.LC14
 1484 0330 60010000 		.word	.LC15
 1485 0334 00000000 		.word	system_settings
 1486 0338 70010000 		.word	.LC16
 1487 033c 74010000 		.word	.LC17
 1488 0340 78010000 		.word	.LC18
 1489 0344 80010000 		.word	.LC19
 1490 0348 88010000 		.word	.LC20
 1491 034c A0010000 		.word	.LC21
 1492 0350 BC010000 		.word	.LC22
 1493 0354 C0010000 		.word	.LC23
 1494 0358 D34D6210 		.word	274877907
 1495 035c 00407F40 		.word	1082081280
 1496 0360 C4010000 		.word	.LC24
 1497 0364 DC010000 		.word	.LC25
 1498 0368 F0010000 		.word	.LC26
 1499 036c F4010000 		.word	.LC27
 1500 0370 04020000 		.word	.LC28
 1501 0374 08020000 		.word	.LC29
 1502              	.L48:
 540:notoriOS.c    ****             }else{
 541:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
 1503              		.loc 1 541 0
 1504 0378 07F1CC03 		add	r3, r7, #204
 1505 037c 41F28832 		movw	r2, #5000
 1506 0380 2E49     		ldr	r1, .L56
 1507 0382 1846     		mov	r0, r3
 1508 0384 FFF7FEFF 		bl	at_write_command
 1509 0388 0346     		mov	r3, r0
 1510 038a 87F84535 		strb	r3, [r7, #1349]
 1511              	.L49:
 1512              	.LBE6:
 524:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1513              		.loc 1 524 0 discriminator 2
 1514 038e 97F94B35 		ldrsb	r3, [r7, #1355]
 1515 0392 DBB2     		uxtb	r3, r3
 1516 0394 0133     		adds	r3, r3, #1
 1517 0396 DBB2     		uxtb	r3, r3
 1518 0398 87F84B35 		strb	r3, [r7, #1355]
 1519              	.L47:
 524:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1520              		.loc 1 524 0 is_stmt 0 discriminator 1
 1521 039c 97F94B25 		ldrsb	r2, [r7, #1355]
 1522 03a0 97F94435 		ldrsb	r3, [r7, #1348]
 1523 03a4 9A42     		cmp	r2, r3
 1524 03a6 FFF65EAF 		blt	.L50
 1525              	.LBE5:
 542:notoriOS.c    ****             }
 543:notoriOS.c    ****             
 544:notoriOS.c    ****         }
 545:notoriOS.c    ****         
 546:notoriOS.c    ****         // Read received buffer
 547:notoriOS.c    ****         // A good write will return code "OS-OK"
 548:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 549:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 550:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 39


 1526              		.loc 1 550 0 is_stmt 1
 1527 03aa 41F28832 		movw	r2, #5000
 1528 03ae 2449     		ldr	r1, .L56+4
 1529 03b0 2448     		ldr	r0, .L56+8
 1530 03b2 FFF7FEFF 		bl	at_write_command
 1531 03b6 0346     		mov	r3, r0
 1532 03b8 87F84535 		strb	r3, [r7, #1349]
 551:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 552:notoriOS.c    ****     
 553:notoriOS.c    ****   
 554:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 555:notoriOS.c    ****         if(status == 1u){
 1533              		.loc 1 555 0
 1534 03bc 97F84535 		ldrb	r3, [r7, #1349]	@ zero_extendqisi2
 1535 03c0 012B     		cmp	r3, #1
 1536 03c2 1DD1     		bne	.L51
 1537              	.LBB7:
 556:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1538              		.loc 1 556 0
 1539 03c4 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 557:notoriOS.c    ****             Clear_Data_Stack();
 1540              		.loc 1 557 0
 1541 03c8 FFF7FEFF 		bl	Clear_Data_Stack
 558:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1542              		.loc 1 558 0
 1543 03cc FFF7FEFF 		bl	getTimeStamp
 1544 03d0 0246     		mov	r2, r0
 1545 03d2 1D4B     		ldr	r3, .L56+12
 1546 03d4 1B68     		ldr	r3, [r3]
 1547 03d6 D31A     		subs	r3, r2, r3
 1548 03d8 C7F84035 		str	r3, [r7, #1344]
 559:notoriOS.c    ****             char s_send_time[10];
 560:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1549              		.loc 1 560 0
 1550 03dc 07F59760 		add	r0, r7, #1208
 1551 03e0 D7F84035 		ldr	r3, [r7, #1344]
 1552 03e4 194A     		ldr	r2, .L56+16
 1553 03e6 0A21     		movs	r1, #10
 1554 03e8 FFF7FEFF 		bl	snprintf
 561:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1555              		.loc 1 561 0
 1556 03ec FFF7FEFF 		bl	getTimeStamp
 1557 03f0 0246     		mov	r2, r0
 1558 03f2 07F59763 		add	r3, r7, #1208
 1559 03f6 1946     		mov	r1, r3
 1560 03f8 1548     		ldr	r0, .L56+20
 1561 03fa FFF7FEFF 		bl	pushData
 1562              	.LBE7:
 1563 03fe 03E0     		b	.L52
 1564              	.L51:
 562:notoriOS.c    ****         }else{
 563:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1565              		.loc 1 563 0
 1566 0400 1449     		ldr	r1, .L56+24
 1567 0402 0220     		movs	r0, #2
 1568 0404 FFF7FEFF 		bl	printNotif
 1569              	.L52:
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 40


 564:notoriOS.c    ****         }
 565:notoriOS.c    ****          
 566:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 567:notoriOS.c    ****         long network_time = modem_get_network_time();
 1570              		.loc 1 567 0
 1571 0408 FFF7FEFF 		bl	modem_get_network_time
 1572 040c C7F83C05 		str	r0, [r7, #1340]
 568:notoriOS.c    ****         if(network_time != 0){
 1573              		.loc 1 568 0
 1574 0410 D7F83C35 		ldr	r3, [r7, #1340]
 1575 0414 002B     		cmp	r3, #0
 1576 0416 03D0     		beq	.L53
 569:notoriOS.c    ****            setTime(network_time);
 1577              		.loc 1 569 0
 1578 0418 D7F83C05 		ldr	r0, [r7, #1340]
 1579 041c FFF7FEFF 		bl	setTime
 1580              	.L53:
 570:notoriOS.c    ****         }
 571:notoriOS.c    ****         
 572:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 573:notoriOS.c    ****         // If not -- keep the statck and try next time
 574:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 575:notoriOS.c    ****         modem_power_down();
 1581              		.loc 1 575 0
 1582 0420 FFF7FEFF 		bl	modem_power_down
 576:notoriOS.c    ****         
 577:notoriOS.c    ****         try_counter = 0u;
 1583              		.loc 1 577 0
 1584 0424 0C4B     		ldr	r3, .L56+28
 1585 0426 0022     		movs	r2, #0
 1586 0428 1A70     		strb	r2, [r3]
 578:notoriOS.c    ****         return 0u;
 1587              		.loc 1 578 0
 1588 042a 0023     		movs	r3, #0
 1589 042c 00E0     		b	.L41
 1590              	.L44:
 1591              	.LBE2:
 579:notoriOS.c    ****     }
 580:notoriOS.c    ****       
 581:notoriOS.c    ****       return 1u; // Not done yet
 1592              		.loc 1 581 0
 1593 042e 0123     		movs	r3, #1
 1594              	.L41:
 582:notoriOS.c    **** }
 1595              		.loc 1 582 0 discriminator 1
 1596 0430 1846     		mov	r0, r3
 1597 0432 07F25457 		addw	r7, r7, #1364
 1598              		.cfi_def_cfa_offset 12
 1599 0436 BD46     		mov	sp, r7
 1600              		.cfi_def_cfa_register 13
 1601              		@ sp needed
 1602 0438 90BD     		pop	{r4, r7, pc}
 1603              	.L57:
 1604 043a 00BF     		.align	2
 1605              	.L56:
 1606 043c 18020000 		.word	.LC30
 1607 0440 20020000 		.word	.LC31
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 41


 1608 0444 28020000 		.word	.LC32
 1609 0448 00000000 		.word	modem_start_time_stamp
 1610 044c CC000000 		.word	.LC6
 1611 0450 3C020000 		.word	.LC33
 1612 0454 4C020000 		.word	.LC34
 1613 0458 00000000 		.word	try_counter
 1614              		.cfi_endproc
 1615              	.LFE74:
 1616              		.size	syncData, .-syncData
 1617              		.section	.text.configureRemoteParams,"ax",%progbits
 1618              		.align	2
 1619              		.global	configureRemoteParams
 1620              		.thumb
 1621              		.thumb_func
 1622              		.type	configureRemoteParams, %function
 1623              	configureRemoteParams:
 1624              	.LFB75:
 583:notoriOS.c    **** 
 584:notoriOS.c    **** // ==============================================
 585:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 586:notoriOS.c    **** // Returns 0 when done
 587:notoriOS.c    **** // ==============================================
 588:notoriOS.c    **** uint8 configureRemoteParams(){
 1625              		.loc 1 588 0
 1626              		.cfi_startproc
 1627              		@ args = 0, pretend = 0, frame = 8
 1628              		@ frame_needed = 1, uses_anonymous_args = 0
 1629 0000 80B5     		push	{r7, lr}
 1630              		.cfi_def_cfa_offset 8
 1631              		.cfi_offset 7, -8
 1632              		.cfi_offset 14, -4
 1633 0002 82B0     		sub	sp, sp, #8
 1634              		.cfi_def_cfa_offset 16
 1635 0004 00AF     		add	r7, sp, #0
 1636              		.cfi_def_cfa_register 7
 589:notoriOS.c    ****     
 590:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1637              		.loc 1 590 0
 1638 0006 FFF7FEFF 		bl	modem_get_state
 1639 000a 0346     		mov	r3, r0
 1640 000c 002B     		cmp	r3, #0
 1641 000e 02D1     		bne	.L59
 591:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 592:notoriOS.c    ****         modem_power_up();
 1642              		.loc 1 592 0
 1643 0010 FFF7FEFF 		bl	modem_power_up
 1644 0014 11E0     		b	.L60
 1645              	.L59:
 593:notoriOS.c    ****             
 594:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1646              		.loc 1 594 0
 1647 0016 FFF7FEFF 		bl	modem_get_state
 1648 001a 0346     		mov	r3, r0
 1649 001c 042B     		cmp	r3, #4
 1650 001e 0CD1     		bne	.L60
 1651              	.LBB8:
 595:notoriOS.c    ****         
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 42


 596:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 597:notoriOS.c    ****         
 598:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 599:notoriOS.c    ****         long network_time = modem_get_network_time();
 1652              		.loc 1 599 0
 1653 0020 FFF7FEFF 		bl	modem_get_network_time
 1654 0024 7860     		str	r0, [r7, #4]
 600:notoriOS.c    ****         if(network_time != 0){
 1655              		.loc 1 600 0
 1656 0026 7B68     		ldr	r3, [r7, #4]
 1657 0028 002B     		cmp	r3, #0
 1658 002a 02D0     		beq	.L61
 601:notoriOS.c    ****             setTime(network_time);
 1659              		.loc 1 601 0
 1660 002c 7868     		ldr	r0, [r7, #4]
 1661 002e FFF7FEFF 		bl	setTime
 1662              	.L61:
 602:notoriOS.c    ****         }
 603:notoriOS.c    ****         
 604:notoriOS.c    ****         // Get GPS coordinates
 605:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 606:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 607:notoriOS.c    ****         modem_power_down();
 1663              		.loc 1 607 0
 1664 0032 FFF7FEFF 		bl	modem_power_down
 608:notoriOS.c    ****         return 0u;
 1665              		.loc 1 608 0
 1666 0036 0023     		movs	r3, #0
 1667 0038 00E0     		b	.L62
 1668              	.L60:
 1669              	.LBE8:
 609:notoriOS.c    ****         
 610:notoriOS.c    ****     }
 611:notoriOS.c    ****     
 612:notoriOS.c    ****     return 1u;
 1670              		.loc 1 612 0
 1671 003a 0123     		movs	r3, #1
 1672              	.L62:
 613:notoriOS.c    **** }
 1673              		.loc 1 613 0
 1674 003c 1846     		mov	r0, r3
 1675 003e 0837     		adds	r7, r7, #8
 1676              		.cfi_def_cfa_offset 8
 1677 0040 BD46     		mov	sp, r7
 1678              		.cfi_def_cfa_register 13
 1679              		@ sp needed
 1680 0042 80BD     		pop	{r7, pc}
 1681              		.cfi_endproc
 1682              	.LFE75:
 1683              		.size	configureRemoteParams, .-configureRemoteParams
 1684              		.section	.rodata
 1685 0277 00       		.align	2
 1686              	.LC35:
 1687 0278 256C6400 		.ascii	"%ld\000"
 1688              		.align	2
 1689              	.LC36:
 1690 027c 43757272 		.ascii	"Current_Node_Type\000"
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 43


 1690      656E745F 
 1690      4E6F6465 
 1690      5F547970 
 1690      6500
 1691 028e 0000     		.align	2
 1692              	.LC37:
 1693 0290 6D617862 		.ascii	"maxbotix_depth=%s\000"
 1693      6F746978 
 1693      5F646570 
 1693      74683D25 
 1693      7300
 1694 02a2 0000     		.align	2
 1695              	.LC38:
 1696 02a4 6D617862 		.ascii	"maxbotix_depth\000"
 1696      6F746978 
 1696      5F646570 
 1696      746800
 1697 02b3 00       		.align	2
 1698              	.LC39:
 1699 02b4 612B00   		.ascii	"a+\000"
 1700 02b7 00       		.align	2
 1701              	.LC40:
 1702 02b8 206D6178 		.ascii	" maxbotix_depth: \000"
 1702      626F7469 
 1702      785F6465 
 1702      7074683A 
 1702      2000
 1703 02ca 0000     		.align	2
 1704              	.LC41:
 1705 02cc 2000     		.ascii	" \000"
 1706 02ce 0000     		.align	2
 1707              	.LC42:
 1708 02d0 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 1708      64206E6F 
 1708      74206765 
 1708      74207661 
 1708      6C696420 
 1709              		.global	__aeabi_f2d
 1710              		.align	2
 1711              	.LC43:
 1712 02fc 252E3266 		.ascii	"%.2f\000"
 1712      00
 1713 0301 000000   		.align	2
 1714              	.LC44:
 1715 0304 765F6261 		.ascii	"v_bat=%s\000"
 1715      743D2573 
 1715      00
 1716 030d 000000   		.align	2
 1717              	.LC45:
 1718 0310 765F6261 		.ascii	"v_bat\000"
 1718      7400
 1719 0316 0000     		.align	2
 1720              	.LC46:
 1721 0318 20766261 		.ascii	" vbat: \000"
 1721      743A2000 
 1722              		.align	2
 1723              	.LC47:
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 44


 1724 0320 70726573 		.ascii	"pressure_current=%s\000"
 1724      73757265 
 1724      5F637572 
 1724      72656E74 
 1724      3D257300 
 1725              		.align	2
 1726              	.LC48:
 1727 0334 70726573 		.ascii	"pressure_current\000"
 1727      73757265 
 1727      5F637572 
 1727      72656E74 
 1727      00
 1728 0345 000000   		.align	2
 1729              	.LC49:
 1730 0348 20707265 		.ascii	" pressure_current: \000"
 1730      73737572 
 1730      655F6375 
 1730      7272656E 
 1730      743A2000 
 1731              		.align	2
 1732              	.LC50:
 1733 035c 70726573 		.ascii	"pressure_depth=%s\000"
 1733      73757265 
 1733      5F646570 
 1733      74683D25 
 1733      7300
 1734 036e 0000     		.align	2
 1735              	.LC51:
 1736 0370 70726573 		.ascii	"pressure_depth\000"
 1736      73757265 
 1736      5F646570 
 1736      746800
 1737 037f 00       		.align	2
 1738              	.LC52:
 1739 0380 20707265 		.ascii	" pressure_depth: \000"
 1739      73737572 
 1739      655F6465 
 1739      7074683A 
 1739      2000
 1740 0392 0000     		.align	2
 1741              	.LC53:
 1742 0394 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1742      64206E6F 
 1742      74206765 
 1742      74207661 
 1742      6C696420 
 1743              		.section	.text.makeMeasurements,"ax",%progbits
 1744              		.align	2
 1745              		.global	makeMeasurements
 1746              		.thumb
 1747              		.thumb_func
 1748              		.type	makeMeasurements, %function
 1749              	makeMeasurements:
 1750              	.LFB76:
 614:notoriOS.c    **** 
 615:notoriOS.c    **** 
 616:notoriOS.c    **** // ==============================================
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 45


 617:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 618:notoriOS.c    **** // Returns 0 when finished
 619:notoriOS.c    **** // ==============================================
 620:notoriOS.c    **** uint8 makeMeasurements(){
 1751              		.loc 1 620 0
 1752              		.cfi_startproc
 1753              		@ args = 0, pretend = 0, frame = 128
 1754              		@ frame_needed = 1, uses_anonymous_args = 0
 1755 0000 90B5     		push	{r4, r7, lr}
 1756              		.cfi_def_cfa_offset 12
 1757              		.cfi_offset 4, -12
 1758              		.cfi_offset 7, -8
 1759              		.cfi_offset 14, -4
 1760 0002 A3B0     		sub	sp, sp, #140
 1761              		.cfi_def_cfa_offset 152
 1762 0004 02AF     		add	r7, sp, #8
 1763              		.cfi_def_cfa 7, 144
 621:notoriOS.c    ****     
 622:notoriOS.c    ****     // Get clock time and save to timeStamp
 623:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1764              		.loc 1 623 0
 1765 0006 FFF7FEFF 		bl	getTimeStamp
 1766 000a F867     		str	r0, [r7, #124]
 624:notoriOS.c    ****     char c_timeStamp[32];
 625:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1767              		.loc 1 625 0
 1768 000c 07F15C00 		add	r0, r7, #92
 1769 0010 FB6F     		ldr	r3, [r7, #124]
 1770 0012 8E4A     		ldr	r2, .L72
 1771 0014 2021     		movs	r1, #32
 1772 0016 FFF7FEFF 		bl	snprintf
 626:notoriOS.c    ****     
 627:notoriOS.c    ****     // Holds string for value that will be written 
 628:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 629:notoriOS.c    ****     
 630:notoriOS.c    ****     // who i am determines what I'm going to do 
 631:notoriOS.c    ****     // this is primarily for interpretability on grafana dashboards when developing custom nodes
 632:notoriOS.c    ****     char c_node_type[5];
 633:notoriOS.c    ****     itoa(updatable_parameters.node_type,c_node_type,10);
 1773              		.loc 1 633 0
 1774 001a 8D4B     		ldr	r3, .L72+4
 1775 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1776 001e 1846     		mov	r0, r3
 1777 0020 07F14003 		add	r3, r7, #64
 1778 0024 0A22     		movs	r2, #10
 1779 0026 1946     		mov	r1, r3
 1780 0028 FFF7FEFF 		bl	itoa
 634:notoriOS.c    ****     pushData("Current_Node_Type",c_node_type ,getTimeStamp());
 1781              		.loc 1 634 0
 1782 002c FFF7FEFF 		bl	getTimeStamp
 1783 0030 0246     		mov	r2, r0
 1784 0032 07F14003 		add	r3, r7, #64
 1785 0036 1946     		mov	r1, r3
 1786 0038 8648     		ldr	r0, .L72+8
 1787 003a FFF7FEFF 		bl	pushData
 635:notoriOS.c    ****     
 636:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 46


 637:notoriOS.c    ****     
 638:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 1788              		.loc 1 638 0
 1789 003e 844B     		ldr	r3, .L72+4
 1790 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1791 0042 002B     		cmp	r3, #0
 1792 0044 3BD1     		bne	.L64
 1793              	.LBB9:
 639:notoriOS.c    ****         
 640:notoriOS.c    ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
 641:notoriOS.c    ****         level_sensor_t m_level_sensor;
 642:notoriOS.c    ****         
 643:notoriOS.c    ****         // Take level sensor readings and save them to m_level_sensor
 644:notoriOS.c    ****         m_level_sensor = level_sensor_take_reading();
 1794              		.loc 1 644 0
 1795 0046 07F11003 		add	r3, r7, #16
 1796 004a 1846     		mov	r0, r3
 1797 004c FFF7FEFF 		bl	level_sensor_take_reading
 645:notoriOS.c    ****     
 646:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 647:notoriOS.c    ****         if(m_level_sensor.num_valid_readings > 0){
 1798              		.loc 1 647 0
 1799 0050 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1800 0054 002B     		cmp	r3, #0
 1801 0056 2ED0     		beq	.L65
 648:notoriOS.c    ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 1802              		.loc 1 648 0
 1803 0058 B7F92630 		ldrsh	r3, [r7, #38]
 1804 005c 07F14800 		add	r0, r7, #72
 1805 0060 7D4A     		ldr	r2, .L72+12
 1806 0062 1421     		movs	r1, #20
 1807 0064 FFF7FEFF 		bl	snprintf
 649:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 1808              		.loc 1 649 0
 1809 0068 07F14803 		add	r3, r7, #72
 1810 006c 1A46     		mov	r2, r3
 1811 006e 7B49     		ldr	r1, .L72+16
 1812 0070 0020     		movs	r0, #0
 1813 0072 FFF7FEFF 		bl	printNotif
 650:notoriOS.c    ****             pushData("maxbotix_depth",value,timeStamp);
 1814              		.loc 1 650 0
 1815 0076 07F14803 		add	r3, r7, #72
 1816 007a FA6F     		ldr	r2, [r7, #124]
 1817 007c 1946     		mov	r1, r3
 1818 007e 7848     		ldr	r0, .L72+20
 1819 0080 FFF7FEFF 		bl	pushData
 651:notoriOS.c    ****             
 652:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 653:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1820              		.loc 1 653 0
 1821 0084 07F15C03 		add	r3, r7, #92
 1822 0088 1A46     		mov	r2, r3
 1823 008a 7649     		ldr	r1, .L72+24
 1824 008c 7648     		ldr	r0, .L72+28
 1825 008e FFF7FEFF 		bl	SD_write
 654:notoriOS.c    ****             SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 1826              		.loc 1 654 0
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 47


 1827 0092 764A     		ldr	r2, .L72+32
 1828 0094 7349     		ldr	r1, .L72+24
 1829 0096 7448     		ldr	r0, .L72+28
 1830 0098 FFF7FEFF 		bl	SD_write
 655:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1831              		.loc 1 655 0
 1832 009c 07F14803 		add	r3, r7, #72
 1833 00a0 1A46     		mov	r2, r3
 1834 00a2 7049     		ldr	r1, .L72+24
 1835 00a4 7048     		ldr	r0, .L72+28
 1836 00a6 FFF7FEFF 		bl	SD_write
 656:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1837              		.loc 1 656 0
 1838 00aa 714A     		ldr	r2, .L72+36
 1839 00ac 6D49     		ldr	r1, .L72+24
 1840 00ae 6E48     		ldr	r0, .L72+28
 1841 00b0 FFF7FEFF 		bl	SD_write
 1842 00b4 03E0     		b	.L64
 1843              	.L65:
 657:notoriOS.c    ****         }else{
 658:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 1844              		.loc 1 658 0
 1845 00b6 6F49     		ldr	r1, .L72+40
 1846 00b8 0220     		movs	r0, #2
 1847 00ba FFF7FEFF 		bl	printNotif
 1848              	.L64:
 1849              	.LBE9:
 659:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 660:notoriOS.c    ****         }
 661:notoriOS.c    ****     }
 662:notoriOS.c    ****     
 663:notoriOS.c    ****     
 664:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 665:notoriOS.c    ****     voltage_t m_voltage;
 666:notoriOS.c    ****     
 667:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 668:notoriOS.c    ****     m_voltage = voltage_take_readings();
 1850              		.loc 1 668 0
 1851 00be 07F12C03 		add	r3, r7, #44
 1852 00c2 1846     		mov	r0, r3
 1853 00c4 FFF7FEFF 		bl	voltage_take_readings
 669:notoriOS.c    ****     
 670:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 671:notoriOS.c    ****     if(m_voltage.valid){
 1854              		.loc 1 671 0
 1855 00c8 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 1856 00cc 002B     		cmp	r3, #0
 1857 00ce 00F0B380 		beq	.L67
 672:notoriOS.c    ****         // battery voltage data
 673:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 1858              		.loc 1 673 0
 1859 00d2 FB6A     		ldr	r3, [r7, #44]	@ float
 1860 00d4 1846     		mov	r0, r3
 1861 00d6 FFF7FEFF 		bl	__aeabi_f2d
 1862 00da 0346     		mov	r3, r0
 1863 00dc 0C46     		mov	r4, r1
 1864 00de 07F14800 		add	r0, r7, #72
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 48


 1865 00e2 CDE90034 		strd	r3, [sp]
 1866 00e6 644A     		ldr	r2, .L72+44
 1867 00e8 1421     		movs	r1, #20
 1868 00ea FFF7FEFF 		bl	snprintf
 674:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 1869              		.loc 1 674 0
 1870 00ee 07F14803 		add	r3, r7, #72
 1871 00f2 1A46     		mov	r2, r3
 1872 00f4 6149     		ldr	r1, .L72+48
 1873 00f6 0020     		movs	r0, #0
 1874 00f8 FFF7FEFF 		bl	printNotif
 675:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
 1875              		.loc 1 675 0
 1876 00fc 07F14803 		add	r3, r7, #72
 1877 0100 FA6F     		ldr	r2, [r7, #124]
 1878 0102 1946     		mov	r1, r3
 1879 0104 5E48     		ldr	r0, .L72+52
 1880 0106 FFF7FEFF 		bl	pushData
 676:notoriOS.c    ****         
 677:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 678:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 1881              		.loc 1 678 0
 1882 010a 594A     		ldr	r2, .L72+36
 1883 010c 5549     		ldr	r1, .L72+24
 1884 010e 5648     		ldr	r0, .L72+28
 1885 0110 FFF7FEFF 		bl	SD_write
 679:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 1886              		.loc 1 679 0
 1887 0114 07F15C03 		add	r3, r7, #92
 1888 0118 1A46     		mov	r2, r3
 1889 011a 5249     		ldr	r1, .L72+24
 1890 011c 5248     		ldr	r0, .L72+28
 1891 011e FFF7FEFF 		bl	SD_write
 680:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 1892              		.loc 1 680 0
 1893 0122 584A     		ldr	r2, .L72+56
 1894 0124 4F49     		ldr	r1, .L72+24
 1895 0126 5048     		ldr	r0, .L72+28
 1896 0128 FFF7FEFF 		bl	SD_write
 681:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1897              		.loc 1 681 0
 1898 012c 07F14803 		add	r3, r7, #72
 1899 0130 1A46     		mov	r2, r3
 1900 0132 4C49     		ldr	r1, .L72+24
 1901 0134 4C48     		ldr	r0, .L72+28
 1902 0136 FFF7FEFF 		bl	SD_write
 682:notoriOS.c    ****         
 683:notoriOS.c    ****         // If node type is green infrastructure or custom node, take pressure transducer measuremen
 684:notoriOS.c    ****          
 685:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE || updatable_parameters.
 1903              		.loc 1 685 0
 1904 013a 454B     		ldr	r3, .L72+4
 1905 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1906 013e 012B     		cmp	r3, #1
 1907 0140 03D0     		beq	.L68
 1908              		.loc 1 685 0 is_stmt 0 discriminator 1
 1909 0142 434B     		ldr	r3, .L72+4
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 49


 1910 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1911 0146 042B     		cmp	r3, #4
 1912 0148 7AD1     		bne	.L70
 1913              	.L68:
 1914              	.LBB10:
 686:notoriOS.c    ****             
 687:notoriOS.c    ****             // pressure transducer voltage (V) data
 688:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 689:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 690:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 691:notoriOS.c    ****             
 692:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 693:notoriOS.c    ****             pressure_t m_pressure;
 694:notoriOS.c    ****             
 695:notoriOS.c    ****             // Make pressure transducer calculators for current and depth
 696:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 1915              		.loc 1 696 0 is_stmt 1
 1916 014a 3C46     		mov	r4, r7
 1917 014c 6A46     		mov	r2, sp
 1918 014e 07F13803 		add	r3, r7, #56
 1919 0152 93E80300 		ldmia	r3, {r0, r1}
 1920 0156 82E80300 		stmia	r2, {r0, r1}
 1921 015a 07F12C03 		add	r3, r7, #44
 1922 015e 0ECB     		ldmia	r3, {r1, r2, r3}
 1923 0160 2046     		mov	r0, r4
 1924 0162 FFF7FEFF 		bl	pressure_calculations
 697:notoriOS.c    ****             
 698:notoriOS.c    ****             // pressure transducer current (mA) data
 699:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 1925              		.loc 1 699 0
 1926 0166 BB68     		ldr	r3, [r7, #8]	@ float
 1927 0168 1846     		mov	r0, r3
 1928 016a FFF7FEFF 		bl	__aeabi_f2d
 1929 016e 0346     		mov	r3, r0
 1930 0170 0C46     		mov	r4, r1
 1931 0172 07F14800 		add	r0, r7, #72
 1932 0176 CDE90034 		strd	r3, [sp]
 1933 017a 3F4A     		ldr	r2, .L72+44
 1934 017c 1421     		movs	r1, #20
 1935 017e FFF7FEFF 		bl	snprintf
 700:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 1936              		.loc 1 700 0
 1937 0182 07F14803 		add	r3, r7, #72
 1938 0186 1A46     		mov	r2, r3
 1939 0188 3F49     		ldr	r1, .L72+60
 1940 018a 0020     		movs	r0, #0
 1941 018c FFF7FEFF 		bl	printNotif
 701:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 1942              		.loc 1 701 0
 1943 0190 07F14803 		add	r3, r7, #72
 1944 0194 FA6F     		ldr	r2, [r7, #124]
 1945 0196 1946     		mov	r1, r3
 1946 0198 3C48     		ldr	r0, .L72+64
 1947 019a FFF7FEFF 		bl	pushData
 702:notoriOS.c    ****             
 703:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 704:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 50


 1948              		.loc 1 704 0
 1949 019e 344A     		ldr	r2, .L72+36
 1950 01a0 3049     		ldr	r1, .L72+24
 1951 01a2 3148     		ldr	r0, .L72+28
 1952 01a4 FFF7FEFF 		bl	SD_write
 705:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1953              		.loc 1 705 0
 1954 01a8 07F15C03 		add	r3, r7, #92
 1955 01ac 1A46     		mov	r2, r3
 1956 01ae 2D49     		ldr	r1, .L72+24
 1957 01b0 2D48     		ldr	r0, .L72+28
 1958 01b2 FFF7FEFF 		bl	SD_write
 706:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 1959              		.loc 1 706 0
 1960 01b6 364A     		ldr	r2, .L72+68
 1961 01b8 2A49     		ldr	r1, .L72+24
 1962 01ba 2B48     		ldr	r0, .L72+28
 1963 01bc FFF7FEFF 		bl	SD_write
 707:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1964              		.loc 1 707 0
 1965 01c0 07F14803 		add	r3, r7, #72
 1966 01c4 1A46     		mov	r2, r3
 1967 01c6 2749     		ldr	r1, .L72+24
 1968 01c8 2748     		ldr	r0, .L72+28
 1969 01ca FFF7FEFF 		bl	SD_write
 708:notoriOS.c    ****             
 709:notoriOS.c    ****             // pressure transducer depth (ft) data
 710:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 1970              		.loc 1 710 0
 1971 01ce FB68     		ldr	r3, [r7, #12]	@ float
 1972 01d0 1846     		mov	r0, r3
 1973 01d2 FFF7FEFF 		bl	__aeabi_f2d
 1974 01d6 0346     		mov	r3, r0
 1975 01d8 0C46     		mov	r4, r1
 1976 01da 07F14800 		add	r0, r7, #72
 1977 01de CDE90034 		strd	r3, [sp]
 1978 01e2 254A     		ldr	r2, .L72+44
 1979 01e4 1421     		movs	r1, #20
 1980 01e6 FFF7FEFF 		bl	snprintf
 711:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 1981              		.loc 1 711 0
 1982 01ea 07F14803 		add	r3, r7, #72
 1983 01ee 1A46     		mov	r2, r3
 1984 01f0 2849     		ldr	r1, .L72+72
 1985 01f2 0020     		movs	r0, #0
 1986 01f4 FFF7FEFF 		bl	printNotif
 712:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 1987              		.loc 1 712 0
 1988 01f8 07F14803 		add	r3, r7, #72
 1989 01fc FA6F     		ldr	r2, [r7, #124]
 1990 01fe 1946     		mov	r1, r3
 1991 0200 2548     		ldr	r0, .L72+76
 1992 0202 FFF7FEFF 		bl	pushData
 713:notoriOS.c    ****             
 714:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 715:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1993              		.loc 1 715 0
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 51


 1994 0206 1A4A     		ldr	r2, .L72+36
 1995 0208 1649     		ldr	r1, .L72+24
 1996 020a 1748     		ldr	r0, .L72+28
 1997 020c FFF7FEFF 		bl	SD_write
 716:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1998              		.loc 1 716 0
 1999 0210 07F15C03 		add	r3, r7, #92
 2000 0214 1A46     		mov	r2, r3
 2001 0216 1349     		ldr	r1, .L72+24
 2002 0218 1348     		ldr	r0, .L72+28
 2003 021a FFF7FEFF 		bl	SD_write
 717:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
 2004              		.loc 1 717 0
 2005 021e 1F4A     		ldr	r2, .L72+80
 2006 0220 1049     		ldr	r1, .L72+24
 2007 0222 1148     		ldr	r0, .L72+28
 2008 0224 FFF7FEFF 		bl	SD_write
 718:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 2009              		.loc 1 718 0
 2010 0228 07F14803 		add	r3, r7, #72
 2011 022c 1A46     		mov	r2, r3
 2012 022e 0D49     		ldr	r1, .L72+24
 2013 0230 0D48     		ldr	r0, .L72+28
 2014 0232 FFF7FEFF 		bl	SD_write
 2015 0236 03E0     		b	.L70
 2016              	.L67:
 2017              	.LBE10:
 719:notoriOS.c    ****         }    
 720:notoriOS.c    ****     }else{
 721:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 2018              		.loc 1 721 0
 2019 0238 1949     		ldr	r1, .L72+84
 2020 023a 0220     		movs	r0, #2
 2021 023c FFF7FEFF 		bl	printNotif
 2022              	.L70:
 722:notoriOS.c    ****         
 723:notoriOS.c    ****     }
 724:notoriOS.c    ****         
 725:notoriOS.c    ****     
 726:notoriOS.c    ****     return 0u;
 2023              		.loc 1 726 0
 2024 0240 0023     		movs	r3, #0
 727:notoriOS.c    **** }
 2025              		.loc 1 727 0
 2026 0242 1846     		mov	r0, r3
 2027 0244 8437     		adds	r7, r7, #132
 2028              		.cfi_def_cfa_offset 12
 2029 0246 BD46     		mov	sp, r7
 2030              		.cfi_def_cfa_register 13
 2031              		@ sp needed
 2032 0248 90BD     		pop	{r4, r7, pc}
 2033              	.L73:
 2034 024a 00BF     		.align	2
 2035              	.L72:
 2036 024c 78020000 		.word	.LC35
 2037 0250 00000000 		.word	updatable_parameters
 2038 0254 7C020000 		.word	.LC36
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 52


 2039 0258 CC000000 		.word	.LC6
 2040 025c 90020000 		.word	.LC37
 2041 0260 A4020000 		.word	.LC38
 2042 0264 B4020000 		.word	.LC39
 2043 0268 00000000 		.word	Data_fileName
 2044 026c B8020000 		.word	.LC40
 2045 0270 CC020000 		.word	.LC41
 2046 0274 D0020000 		.word	.LC42
 2047 0278 FC020000 		.word	.LC43
 2048 027c 04030000 		.word	.LC44
 2049 0280 10030000 		.word	.LC45
 2050 0284 18030000 		.word	.LC46
 2051 0288 20030000 		.word	.LC47
 2052 028c 34030000 		.word	.LC48
 2053 0290 48030000 		.word	.LC49
 2054 0294 5C030000 		.word	.LC50
 2055 0298 70030000 		.word	.LC51
 2056 029c 80030000 		.word	.LC52
 2057 02a0 94030000 		.word	.LC53
 2058              		.cfi_endproc
 2059              	.LFE76:
 2060              		.size	makeMeasurements, .-makeMeasurements
 2061              		.section	.rodata
 2062 03bb 00       		.align	2
 2063              	.LC54:
 2064 03bc 4572726F 		.ascii	"Error setting system time.\000"
 2064      72207365 
 2064      7474696E 
 2064      67207379 
 2064      7374656D 
 2065              		.section	.text.setTime,"ax",%progbits
 2066              		.align	2
 2067              		.global	setTime
 2068              		.thumb
 2069              		.thumb_func
 2070              		.type	setTime, %function
 2071              	setTime:
 2072              	.LFB77:
 728:notoriOS.c    **** 
 729:notoriOS.c    **** // ==============================================
 730:notoriOS.c    **** // Set the system time
 731:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 732:notoriOS.c    **** // ==============================================
 733:notoriOS.c    **** uint8 setTime(long timeStamp){
 2073              		.loc 1 733 0
 2074              		.cfi_startproc
 2075              		@ args = 0, pretend = 0, frame = 24
 2076              		@ frame_needed = 1, uses_anonymous_args = 0
 2077 0000 80B5     		push	{r7, lr}
 2078              		.cfi_def_cfa_offset 8
 2079              		.cfi_offset 7, -8
 2080              		.cfi_offset 14, -4
 2081 0002 86B0     		sub	sp, sp, #24
 2082              		.cfi_def_cfa_offset 32
 2083 0004 00AF     		add	r7, sp, #0
 2084              		.cfi_def_cfa_register 7
 2085 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 53


 734:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 735:notoriOS.c    ****     if(timeStamp <=0){
 2086              		.loc 1 735 0
 2087 0008 7B68     		ldr	r3, [r7, #4]
 2088 000a 002B     		cmp	r3, #0
 2089 000c 05DC     		bgt	.L75
 736:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 2090              		.loc 1 736 0
 2091 000e 1849     		ldr	r1, .L77
 2092 0010 0220     		movs	r0, #2
 2093 0012 FFF7FEFF 		bl	printNotif
 737:notoriOS.c    ****         return 0;  
 2094              		.loc 1 737 0
 2095 0016 0023     		movs	r3, #0
 2096 0018 25E0     		b	.L76
 2097              	.L75:
 738:notoriOS.c    ****     }
 739:notoriOS.c    ****     // Create a new pointer t of data structure tm
 740:notoriOS.c    ****     struct tm * t;
 741:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 742:notoriOS.c    ****     t = gmtime(&timeStamp);
 2098              		.loc 1 742 0
 2099 001a 3B1D     		adds	r3, r7, #4
 2100 001c 1846     		mov	r0, r3
 2101 001e FFF7FEFF 		bl	gmtime
 2102 0022 7861     		str	r0, [r7, #20]
 743:notoriOS.c    ****     
 744:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 745:notoriOS.c    ****     RTC_TIME_DATE localTime;
 746:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 2103              		.loc 1 746 0
 2104 0024 7B69     		ldr	r3, [r7, #20]
 2105 0026 1B68     		ldr	r3, [r3]
 2106 0028 DBB2     		uxtb	r3, r3
 2107 002a 3B72     		strb	r3, [r7, #8]
 747:notoriOS.c    ****     localTime.Min = t->tm_min;
 2108              		.loc 1 747 0
 2109 002c 7B69     		ldr	r3, [r7, #20]
 2110 002e 5B68     		ldr	r3, [r3, #4]
 2111 0030 DBB2     		uxtb	r3, r3
 2112 0032 7B72     		strb	r3, [r7, #9]
 748:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 2113              		.loc 1 748 0
 2114 0034 7B69     		ldr	r3, [r7, #20]
 2115 0036 9B68     		ldr	r3, [r3, #8]
 2116 0038 DBB2     		uxtb	r3, r3
 2117 003a BB72     		strb	r3, [r7, #10]
 749:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 2118              		.loc 1 749 0
 2119 003c 7B69     		ldr	r3, [r7, #20]
 2120 003e 5B69     		ldr	r3, [r3, #20]
 2121 0040 9BB2     		uxth	r3, r3
 2122 0042 03F26C73 		addw	r3, r3, #1900
 2123 0046 9BB2     		uxth	r3, r3
 2124 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 750:notoriOS.c    ****     localTime.Month = t->tm_mon;
 2125              		.loc 1 750 0
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 54


 2126 004a 7B69     		ldr	r3, [r7, #20]
 2127 004c 1B69     		ldr	r3, [r3, #16]
 2128 004e DBB2     		uxtb	r3, r3
 2129 0050 3B74     		strb	r3, [r7, #16]
 751:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 2130              		.loc 1 751 0
 2131 0052 7B69     		ldr	r3, [r7, #20]
 2132 0054 DB68     		ldr	r3, [r3, #12]
 2133 0056 DBB2     		uxtb	r3, r3
 2134 0058 3B73     		strb	r3, [r7, #12]
 752:notoriOS.c    **** 
 753:notoriOS.c    ****     // Writes time and date values as current time and date.
 754:notoriOS.c    ****     RTC_WriteTime(&localTime);
 2135              		.loc 1 754 0
 2136 005a 07F10803 		add	r3, r7, #8
 2137 005e 1846     		mov	r0, r3
 2138 0060 FFF7FEFF 		bl	RTC_WriteTime
 755:notoriOS.c    ****     
 756:notoriOS.c    ****     // Return 1 when the system time was set properly.
 757:notoriOS.c    ****     return 1;
 2139              		.loc 1 757 0
 2140 0064 0123     		movs	r3, #1
 2141              	.L76:
 758:notoriOS.c    **** }
 2142              		.loc 1 758 0
 2143 0066 1846     		mov	r0, r3
 2144 0068 1837     		adds	r7, r7, #24
 2145              		.cfi_def_cfa_offset 8
 2146 006a BD46     		mov	sp, r7
 2147              		.cfi_def_cfa_register 13
 2148              		@ sp needed
 2149 006c 80BD     		pop	{r7, pc}
 2150              	.L78:
 2151 006e 00BF     		.align	2
 2152              	.L77:
 2153 0070 BC030000 		.word	.LC54
 2154              		.cfi_endproc
 2155              	.LFE77:
 2156              		.size	setTime, .-setTime
 2157              		.section	.rodata
 2158 03d7 00       		.align	2
 2159              	.LC55:
 2160 03d8 75706772 		.ascii	"upgrade.hex\000"
 2160      6164652E 
 2160      68657800 
 2161              		.section	.text.upgraded,"ax",%progbits
 2162              		.align	2
 2163              		.global	upgraded
 2164              		.thumb
 2165              		.thumb_func
 2166              		.type	upgraded, %function
 2167              	upgraded:
 2168              	.LFB78:
 759:notoriOS.c    **** 
 760:notoriOS.c    **** //downloads and stores files on SD card
 761:notoriOS.c    **** 
 762:notoriOS.c    **** 
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 55


 763:notoriOS.c    **** 
 764:notoriOS.c    **** // ==============================================
 765:notoriOS.c    **** // Will they love it, will they hate it
 766:notoriOS.c    **** // Never fade it, I evade it
 767:notoriOS.c    **** // Cause I never really want to complicate it
 768:notoriOS.c    **** //      - Logic, Upgraded (2015)
 769:notoriOS.c    **** //
 770:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 771:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 772:notoriOS.c    **** // ==============================================
 773:notoriOS.c    **** 
 774:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 2169              		.loc 1 774 0
 2170              		.cfi_startproc
 2171              		@ args = 0, pretend = 0, frame = 232
 2172              		@ frame_needed = 1, uses_anonymous_args = 0
 2173 0000 80B5     		push	{r7, lr}
 2174              		.cfi_def_cfa_offset 8
 2175              		.cfi_offset 7, -8
 2176              		.cfi_offset 14, -4
 2177 0002 C0B0     		sub	sp, sp, #256
 2178              		.cfi_def_cfa_offset 264
 2179 0004 06AF     		add	r7, sp, #24
 2180              		.cfi_def_cfa 7, 240
 2181 0006 F860     		str	r0, [r7, #12]
 2182 0008 B960     		str	r1, [r7, #8]
 2183 000a 7A60     		str	r2, [r7, #4]
 775:notoriOS.c    ****     
 776:notoriOS.c    ****     uint8 upgrade_status = 0;
 2184              		.loc 1 776 0
 2185 000c 0023     		movs	r3, #0
 2186 000e 87F8E730 		strb	r3, [r7, #231]
 777:notoriOS.c    ****     
 778:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 779:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 2187              		.loc 1 779 0
 2188 0012 384B     		ldr	r3, .L83
 2189 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2190 0016 042B     		cmp	r3, #4
 2191 0018 02D0     		beq	.L80
 780:notoriOS.c    ****         return upgrade_status;//where valid = 0
 2192              		.loc 1 780 0
 2193 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2194 001e 65E0     		b	.L82
 2195              	.L80:
 781:notoriOS.c    ****     }
 782:notoriOS.c    ****     
 783:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 2196              		.loc 1 783 0
 2197 0020 354A     		ldr	r2, .L83+4
 2198 0022 07F1D803 		add	r3, r7, #216
 2199 0026 07CA     		ldmia	r2, {r0, r1, r2}
 2200 0028 83E80700 		stmia	r3, {r0, r1, r2}
 784:notoriOS.c    ****     //delete file, if one exisits already
 785:notoriOS.c    ****     SD_rmfile(fileName);
 2201              		.loc 1 785 0
 2202 002c 07F1D803 		add	r3, r7, #216
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 56


 2203 0030 1846     		mov	r0, r3
 2204 0032 FFF7FEFF 		bl	SD_rmfile
 786:notoriOS.c    ****     
 787:notoriOS.c    ****     // Create http request
 788:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 2205              		.loc 1 788 0
 2206 0036 314B     		ldr	r3, .L83+8
 2207 0038 0593     		str	r3, [sp, #20]
 2208 003a 0023     		movs	r3, #0
 2209 003c 0493     		str	r3, [sp, #16]
 2210 003e 304B     		ldr	r3, .L83+12
 2211 0040 0393     		str	r3, [sp, #12]
 2212 0042 304B     		ldr	r3, .L83+16
 2213 0044 0293     		str	r3, [sp, #8]
 2214 0046 304B     		ldr	r3, .L83+20
 2215 0048 0193     		str	r3, [sp, #4]
 2216 004a BB68     		ldr	r3, [r7, #8]
 2217 004c 0093     		str	r3, [sp]
 2218 004e 7B68     		ldr	r3, [r7, #4]
 2219 0050 FA68     		ldr	r2, [r7, #12]
 2220 0052 2E49     		ldr	r1, .L83+24
 2221 0054 2E48     		ldr	r0, .L83+28
 2222 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 789:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 2223              		.loc 1 789 0
 2224 005a 2D4A     		ldr	r2, .L83+28
 2225 005c 2D49     		ldr	r1, .L83+32
 2226 005e 0020     		movs	r0, #0
 2227 0060 FFF7FEFF 		bl	printNotif
 790:notoriOS.c    ****     // Create array portConfig of size 200 characters
 791:notoriOS.c    ****     char portConfig[200];
 792:notoriOS.c    ****     // Print port configurations
 793:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 2228              		.loc 1 793 0
 2229 0064 07F11000 		add	r0, r7, #16
 2230 0068 FB68     		ldr	r3, [r7, #12]
 2231 006a 0093     		str	r3, [sp]
 2232 006c BB68     		ldr	r3, [r7, #8]
 2233 006e 2A4A     		ldr	r2, .L83+36
 2234 0070 C821     		movs	r1, #200
 2235 0072 FFF7FEFF 		bl	snprintf
 794:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 2236              		.loc 1 794 0
 2237 0076 07F11003 		add	r3, r7, #16
 2238 007a 1A46     		mov	r2, r3
 2239 007c 2749     		ldr	r1, .L83+40
 2240 007e 0020     		movs	r0, #0
 2241 0080 FFF7FEFF 		bl	printNotif
 795:notoriOS.c    ****     // AT command to configure the port
 796:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 2242              		.loc 1 796 0
 2243 0084 07F11003 		add	r3, r7, #16
 2244 0088 42F21072 		movw	r2, #10000
 2245 008c 2449     		ldr	r1, .L83+44
 2246 008e 1846     		mov	r0, r3
 2247 0090 FFF7FEFF 		bl	at_write_command
 2248 0094 0346     		mov	r3, r0
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 57


 2249 0096 87F8E730 		strb	r3, [r7, #231]
 797:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 798:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 799:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 2250              		.loc 1 799 0
 2251 009a 4FF47A72 		mov	r2, #1000
 2252 009e 2149     		ldr	r1, .L83+48
 2253 00a0 2148     		ldr	r0, .L83+52
 2254 00a2 FFF7FEFF 		bl	at_write_command
 2255 00a6 0346     		mov	r3, r0
 2256 00a8 87F8E730 		strb	r3, [r7, #231]
 800:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 801:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 2257              		.loc 1 801 0
 2258 00ac 1848     		ldr	r0, .L83+28
 2259 00ae FFF7FEFF 		bl	strlen
 2260 00b2 0346     		mov	r3, r0
 2261 00b4 1A46     		mov	r2, r3
 2262 00b6 164B     		ldr	r3, .L83+28
 2263 00b8 1344     		add	r3, r3, r2
 2264 00ba 1C49     		ldr	r1, .L83+56
 2265 00bc 1A46     		mov	r2, r3
 2266 00be 0B46     		mov	r3, r1
 2267 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 2268 00c2 1380     		strh	r3, [r2]	@ unaligned
 802:notoriOS.c    ****     // AT command to send http request
 803:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
 2269              		.loc 1 803 0
 2270 00c4 41F28832 		movw	r2, #5000
 2271 00c8 1549     		ldr	r1, .L83+44
 2272 00ca 1148     		ldr	r0, .L83+28
 2273 00cc FFF7FEFF 		bl	at_write_command
 2274 00d0 0346     		mov	r3, r0
 2275 00d2 87F8E730 		strb	r3, [r7, #231]
 804:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 805:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 806:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 2276              		.loc 1 806 0
 2277 00d6 41F28832 		movw	r2, #5000
 2278 00da 1549     		ldr	r1, .L83+60
 2279 00dc 1548     		ldr	r0, .L83+64
 2280 00de FFF7FEFF 		bl	at_write_command
 2281 00e2 0346     		mov	r3, r0
 2282 00e4 87F8E730 		strb	r3, [r7, #231]
 807:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 808:notoriOS.c    ****     
 809:notoriOS.c    ****     
 810:notoriOS.c    ****     return upgrade_status;
 2283              		.loc 1 810 0
 2284 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2285              	.L82:
 811:notoriOS.c    ****     
 812:notoriOS.c    **** }
 2286              		.loc 1 812 0 discriminator 1
 2287 00ec 1846     		mov	r0, r3
 2288 00ee E837     		adds	r7, r7, #232
 2289              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 58


 2290 00f0 BD46     		mov	sp, r7
 2291              		.cfi_def_cfa_register 13
 2292              		@ sp needed
 2293 00f2 80BD     		pop	{r7, pc}
 2294              	.L84:
 2295              		.align	2
 2296              	.L83:
 2297 00f4 00000000 		.word	modem_state
 2298 00f8 D8030000 		.word	.LC55
 2299 00fc 70010000 		.word	.LC16
 2300 0100 74010000 		.word	.LC17
 2301 0104 78010000 		.word	.LC18
 2302 0108 80010000 		.word	.LC19
 2303 010c 00000000 		.word	http_body
 2304 0110 00000000 		.word	http_request
 2305 0114 88010000 		.word	.LC20
 2306 0118 A0010000 		.word	.LC21
 2307 011c BC010000 		.word	.LC22
 2308 0120 C0010000 		.word	.LC23
 2309 0124 F0010000 		.word	.LC26
 2310 0128 F4010000 		.word	.LC27
 2311 012c 04020000 		.word	.LC28
 2312 0130 20020000 		.word	.LC31
 2313 0134 28020000 		.word	.LC32
 2314              		.cfi_endproc
 2315              	.LFE78:
 2316              		.size	upgraded, .-upgraded
 2317              		.text
 2318              	.Letext0:
 2319              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2320              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2321              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2322              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 2323              		.file 6 "testing.h"
 2324              		.file 7 "voltages.h"
 2325              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2326              		.file 9 "data.h"
 2327              		.file 10 "modem.h"
 2328              		.file 11 "level_sensor.h"
 2329              		.file 12 "notoriOS.h"
 2330              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 2331              		.file 14 "App_LED.h"
 2332              		.file 15 "valve.h"
 2333              		.file 16 "autosampler.h"
 2334              		.section	.debug_info,"",%progbits
 2335              	.Ldebug_info0:
 2336 0000 D50D0000 		.4byte	0xdd5
 2337 0004 0400     		.2byte	0x4
 2338 0006 00000000 		.4byte	.Ldebug_abbrev0
 2339 000a 04       		.byte	0x4
 2340 000b 01       		.uleb128 0x1
 2341 000c 91000000 		.4byte	.LASF187
 2342 0010 0C       		.byte	0xc
 2343 0011 1B090000 		.4byte	.LASF188
 2344 0015 DE070000 		.4byte	.LASF189
 2345 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2346 001d 00000000 		.4byte	0
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 59


 2347 0021 00000000 		.4byte	.Ldebug_line0
 2348 0025 02       		.uleb128 0x2
 2349 0026 01       		.byte	0x1
 2350 0027 06       		.byte	0x6
 2351 0028 45000000 		.4byte	.LASF0
 2352 002c 02       		.uleb128 0x2
 2353 002d 01       		.byte	0x1
 2354 002e 08       		.byte	0x8
 2355 002f 48060000 		.4byte	.LASF1
 2356 0033 02       		.uleb128 0x2
 2357 0034 02       		.byte	0x2
 2358 0035 05       		.byte	0x5
 2359 0036 96040000 		.4byte	.LASF2
 2360 003a 02       		.uleb128 0x2
 2361 003b 02       		.byte	0x2
 2362 003c 07       		.byte	0x7
 2363 003d 54080000 		.4byte	.LASF3
 2364 0041 03       		.uleb128 0x3
 2365 0042 0F080000 		.4byte	.LASF9
 2366 0046 02       		.byte	0x2
 2367 0047 3F       		.byte	0x3f
 2368 0048 4C000000 		.4byte	0x4c
 2369 004c 02       		.uleb128 0x2
 2370 004d 04       		.byte	0x4
 2371 004e 05       		.byte	0x5
 2372 004f 70020000 		.4byte	.LASF4
 2373 0053 02       		.uleb128 0x2
 2374 0054 04       		.byte	0x4
 2375 0055 07       		.byte	0x7
 2376 0056 D3030000 		.4byte	.LASF5
 2377 005a 02       		.uleb128 0x2
 2378 005b 08       		.byte	0x8
 2379 005c 05       		.byte	0x5
 2380 005d A1010000 		.4byte	.LASF6
 2381 0061 02       		.uleb128 0x2
 2382 0062 08       		.byte	0x8
 2383 0063 07       		.byte	0x7
 2384 0064 30010000 		.4byte	.LASF7
 2385 0068 04       		.uleb128 0x4
 2386 0069 04       		.byte	0x4
 2387 006a 05       		.byte	0x5
 2388 006b 696E7400 		.ascii	"int\000"
 2389 006f 02       		.uleb128 0x2
 2390 0070 04       		.byte	0x4
 2391 0071 07       		.byte	0x7
 2392 0072 AB070000 		.4byte	.LASF8
 2393 0076 03       		.uleb128 0x3
 2394 0077 40060000 		.4byte	.LASF10
 2395 007b 03       		.byte	0x3
 2396 007c 2C       		.byte	0x2c
 2397 007d 41000000 		.4byte	0x41
 2398 0081 05       		.uleb128 0x5
 2399 0082 A7020000 		.4byte	.LASF11
 2400 0086 04       		.byte	0x4
 2401 0087 9201     		.2byte	0x192
 2402 0089 2C000000 		.4byte	0x2c
 2403 008d 05       		.uleb128 0x5
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 60


 2404 008e 08000000 		.4byte	.LASF12
 2405 0092 04       		.byte	0x4
 2406 0093 9301     		.2byte	0x193
 2407 0095 3A000000 		.4byte	0x3a
 2408 0099 05       		.uleb128 0x5
 2409 009a F8020000 		.4byte	.LASF13
 2410 009e 04       		.byte	0x4
 2411 009f 9401     		.2byte	0x194
 2412 00a1 53000000 		.4byte	0x53
 2413 00a5 05       		.uleb128 0x5
 2414 00a6 59040000 		.4byte	.LASF14
 2415 00aa 04       		.byte	0x4
 2416 00ab 9501     		.2byte	0x195
 2417 00ad 25000000 		.4byte	0x25
 2418 00b1 05       		.uleb128 0x5
 2419 00b2 5D050000 		.4byte	.LASF15
 2420 00b6 04       		.byte	0x4
 2421 00b7 9601     		.2byte	0x196
 2422 00b9 33000000 		.4byte	0x33
 2423 00bd 05       		.uleb128 0x5
 2424 00be D2020000 		.4byte	.LASF16
 2425 00c2 04       		.byte	0x4
 2426 00c3 9701     		.2byte	0x197
 2427 00c5 4C000000 		.4byte	0x4c
 2428 00c9 05       		.uleb128 0x5
 2429 00ca 1A050000 		.4byte	.LASF17
 2430 00ce 04       		.byte	0x4
 2431 00cf 9801     		.2byte	0x198
 2432 00d1 D5000000 		.4byte	0xd5
 2433 00d5 02       		.uleb128 0x2
 2434 00d6 04       		.byte	0x4
 2435 00d7 04       		.byte	0x4
 2436 00d8 DE050000 		.4byte	.LASF18
 2437 00dc 02       		.uleb128 0x2
 2438 00dd 08       		.byte	0x8
 2439 00de 04       		.byte	0x4
 2440 00df F2090000 		.4byte	.LASF19
 2441 00e3 02       		.uleb128 0x2
 2442 00e4 01       		.byte	0x1
 2443 00e5 08       		.byte	0x8
 2444 00e6 A6070000 		.4byte	.LASF20
 2445 00ea 02       		.uleb128 0x2
 2446 00eb 08       		.byte	0x8
 2447 00ec 04       		.byte	0x4
 2448 00ed 88070000 		.4byte	.LASF21
 2449 00f1 02       		.uleb128 0x2
 2450 00f2 04       		.byte	0x4
 2451 00f3 07       		.byte	0x7
 2452 00f4 33050000 		.4byte	.LASF22
 2453 00f8 06       		.uleb128 0x6
 2454 00f9 04       		.byte	0x4
 2455 00fa E3000000 		.4byte	0xe3
 2456 00fe 07       		.uleb128 0x7
 2457 00ff E3000000 		.4byte	0xe3
 2458 0103 0E010000 		.4byte	0x10e
 2459 0107 08       		.uleb128 0x8
 2460 0108 F1000000 		.4byte	0xf1
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 61


 2461 010c 17       		.byte	0x17
 2462 010d 00       		.byte	0
 2463 010e 09       		.uleb128 0x9
 2464 010f 0C       		.byte	0xc
 2465 0110 05       		.byte	0x5
 2466 0111 30       		.byte	0x30
 2467 0112 77010000 		.4byte	0x177
 2468 0116 0A       		.uleb128 0xa
 2469 0117 53656300 		.ascii	"Sec\000"
 2470 011b 05       		.byte	0x5
 2471 011c 32       		.byte	0x32
 2472 011d 81000000 		.4byte	0x81
 2473 0121 00       		.byte	0
 2474 0122 0A       		.uleb128 0xa
 2475 0123 4D696E00 		.ascii	"Min\000"
 2476 0127 05       		.byte	0x5
 2477 0128 33       		.byte	0x33
 2478 0129 81000000 		.4byte	0x81
 2479 012d 01       		.byte	0x1
 2480 012e 0B       		.uleb128 0xb
 2481 012f 47010000 		.4byte	.LASF23
 2482 0133 05       		.byte	0x5
 2483 0134 34       		.byte	0x34
 2484 0135 81000000 		.4byte	0x81
 2485 0139 02       		.byte	0x2
 2486 013a 0B       		.uleb128 0xb
 2487 013b B1060000 		.4byte	.LASF24
 2488 013f 05       		.byte	0x5
 2489 0140 35       		.byte	0x35
 2490 0141 81000000 		.4byte	0x81
 2491 0145 03       		.byte	0x3
 2492 0146 0B       		.uleb128 0xb
 2493 0147 14040000 		.4byte	.LASF25
 2494 014b 05       		.byte	0x5
 2495 014c 36       		.byte	0x36
 2496 014d 81000000 		.4byte	0x81
 2497 0151 04       		.byte	0x4
 2498 0152 0B       		.uleb128 0xb
 2499 0153 A7090000 		.4byte	.LASF26
 2500 0157 05       		.byte	0x5
 2501 0158 37       		.byte	0x37
 2502 0159 8D000000 		.4byte	0x8d
 2503 015d 06       		.byte	0x6
 2504 015e 0B       		.uleb128 0xb
 2505 015f 2A010000 		.4byte	.LASF27
 2506 0163 05       		.byte	0x5
 2507 0164 38       		.byte	0x38
 2508 0165 81000000 		.4byte	0x81
 2509 0169 08       		.byte	0x8
 2510 016a 0B       		.uleb128 0xb
 2511 016b 35060000 		.4byte	.LASF28
 2512 016f 05       		.byte	0x5
 2513 0170 39       		.byte	0x39
 2514 0171 8D000000 		.4byte	0x8d
 2515 0175 0A       		.byte	0xa
 2516 0176 00       		.byte	0
 2517 0177 03       		.uleb128 0x3
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 62


 2518 0178 84050000 		.4byte	.LASF29
 2519 017c 05       		.byte	0x5
 2520 017d 3A       		.byte	0x3a
 2521 017e 82010000 		.4byte	0x182
 2522 0182 0C       		.uleb128 0xc
 2523 0183 0E010000 		.4byte	0x10e
 2524 0187 0D       		.uleb128 0xd
 2525 0188 8101     		.2byte	0x181
 2526 018a 06       		.byte	0x6
 2527 018b 0A       		.byte	0xa
 2528 018c B5010000 		.4byte	0x1b5
 2529 0190 0B       		.uleb128 0xb
 2530 0191 2B060000 		.4byte	.LASF30
 2531 0195 06       		.byte	0x6
 2532 0196 0C       		.byte	0xc
 2533 0197 B5010000 		.4byte	0x1b5
 2534 019b 00       		.byte	0
 2535 019c 0B       		.uleb128 0xb
 2536 019d BC080000 		.4byte	.LASF31
 2537 01a1 06       		.byte	0x6
 2538 01a2 0D       		.byte	0xd
 2539 01a3 81000000 		.4byte	0x81
 2540 01a7 80       		.byte	0x80
 2541 01a8 0B       		.uleb128 0xb
 2542 01a9 D3060000 		.4byte	.LASF32
 2543 01ad 06       		.byte	0x6
 2544 01ae 0F       		.byte	0xf
 2545 01af C5010000 		.4byte	0x1c5
 2546 01b3 81       		.byte	0x81
 2547 01b4 00       		.byte	0
 2548 01b5 07       		.uleb128 0x7
 2549 01b6 E3000000 		.4byte	0xe3
 2550 01ba C5010000 		.4byte	0x1c5
 2551 01be 08       		.uleb128 0x8
 2552 01bf F1000000 		.4byte	0xf1
 2553 01c3 7F       		.byte	0x7f
 2554 01c4 00       		.byte	0
 2555 01c5 07       		.uleb128 0x7
 2556 01c6 E3000000 		.4byte	0xe3
 2557 01ca D5010000 		.4byte	0x1d5
 2558 01ce 08       		.uleb128 0x8
 2559 01cf F1000000 		.4byte	0xf1
 2560 01d3 FF       		.byte	0xff
 2561 01d4 00       		.byte	0
 2562 01d5 03       		.uleb128 0x3
 2563 01d6 BB060000 		.4byte	.LASF33
 2564 01da 06       		.byte	0x6
 2565 01db 10       		.byte	0x10
 2566 01dc 87010000 		.4byte	0x187
 2567 01e0 09       		.uleb128 0x9
 2568 01e1 14       		.byte	0x14
 2569 01e2 07       		.byte	0x7
 2570 01e3 15       		.byte	0x15
 2571 01e4 25020000 		.4byte	0x225
 2572 01e8 0B       		.uleb128 0xb
 2573 01e9 04040000 		.4byte	.LASF34
 2574 01ed 07       		.byte	0x7
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 63


 2575 01ee 16       		.byte	0x16
 2576 01ef D5000000 		.4byte	0xd5
 2577 01f3 00       		.byte	0
 2578 01f4 0B       		.uleb128 0xb
 2579 01f5 ED010000 		.4byte	.LASF35
 2580 01f9 07       		.byte	0x7
 2581 01fa 17       		.byte	0x17
 2582 01fb D5000000 		.4byte	0xd5
 2583 01ff 04       		.byte	0x4
 2584 0200 0B       		.uleb128 0xb
 2585 0201 FB010000 		.4byte	.LASF36
 2586 0205 07       		.byte	0x7
 2587 0206 18       		.byte	0x18
 2588 0207 D5000000 		.4byte	0xd5
 2589 020b 08       		.byte	0x8
 2590 020c 0B       		.uleb128 0xb
 2591 020d C1050000 		.4byte	.LASF37
 2592 0211 07       		.byte	0x7
 2593 0212 19       		.byte	0x19
 2594 0213 D5000000 		.4byte	0xd5
 2595 0217 0C       		.byte	0xc
 2596 0218 0B       		.uleb128 0xb
 2597 0219 44070000 		.4byte	.LASF38
 2598 021d 07       		.byte	0x7
 2599 021e 1A       		.byte	0x1a
 2600 021f 81000000 		.4byte	0x81
 2601 0223 10       		.byte	0x10
 2602 0224 00       		.byte	0
 2603 0225 03       		.uleb128 0x3
 2604 0226 070A0000 		.4byte	.LASF39
 2605 022a 07       		.byte	0x7
 2606 022b 1B       		.byte	0x1b
 2607 022c E0010000 		.4byte	0x1e0
 2608 0230 09       		.uleb128 0x9
 2609 0231 10       		.byte	0x10
 2610 0232 07       		.byte	0x7
 2611 0233 1D       		.byte	0x1d
 2612 0234 69020000 		.4byte	0x269
 2613 0238 0B       		.uleb128 0xb
 2614 0239 68030000 		.4byte	.LASF40
 2615 023d 07       		.byte	0x7
 2616 023e 1E       		.byte	0x1e
 2617 023f D5000000 		.4byte	0xd5
 2618 0243 00       		.byte	0
 2619 0244 0B       		.uleb128 0xb
 2620 0245 92020000 		.4byte	.LASF41
 2621 0249 07       		.byte	0x7
 2622 024a 1F       		.byte	0x1f
 2623 024b D5000000 		.4byte	0xd5
 2624 024f 04       		.byte	0x4
 2625 0250 0B       		.uleb128 0xb
 2626 0251 33070000 		.4byte	.LASF42
 2627 0255 07       		.byte	0x7
 2628 0256 20       		.byte	0x20
 2629 0257 D5000000 		.4byte	0xd5
 2630 025b 08       		.byte	0x8
 2631 025c 0B       		.uleb128 0xb
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 64


 2632 025d 9D060000 		.4byte	.LASF43
 2633 0261 07       		.byte	0x7
 2634 0262 21       		.byte	0x21
 2635 0263 D5000000 		.4byte	0xd5
 2636 0267 0C       		.byte	0xc
 2637 0268 00       		.byte	0
 2638 0269 03       		.uleb128 0x3
 2639 026a B1090000 		.4byte	.LASF44
 2640 026e 07       		.byte	0x7
 2641 026f 22       		.byte	0x22
 2642 0270 30020000 		.4byte	0x230
 2643 0274 0E       		.uleb128 0xe
 2644 0275 746D00   		.ascii	"tm\000"
 2645 0278 24       		.byte	0x24
 2646 0279 08       		.byte	0x8
 2647 027a 21       		.byte	0x21
 2648 027b EC020000 		.4byte	0x2ec
 2649 027f 0B       		.uleb128 0xb
 2650 0280 9C080000 		.4byte	.LASF45
 2651 0284 08       		.byte	0x8
 2652 0285 23       		.byte	0x23
 2653 0286 68000000 		.4byte	0x68
 2654 028a 00       		.byte	0
 2655 028b 0B       		.uleb128 0xb
 2656 028c 13050000 		.4byte	.LASF46
 2657 0290 08       		.byte	0x8
 2658 0291 24       		.byte	0x24
 2659 0292 68000000 		.4byte	0x68
 2660 0296 04       		.byte	0x4
 2661 0297 0B       		.uleb128 0xb
 2662 0298 0F000000 		.4byte	.LASF47
 2663 029c 08       		.byte	0x8
 2664 029d 25       		.byte	0x25
 2665 029e 68000000 		.4byte	0x68
 2666 02a2 08       		.byte	0x8
 2667 02a3 0B       		.uleb128 0xb
 2668 02a4 6E080000 		.4byte	.LASF48
 2669 02a8 08       		.byte	0x8
 2670 02a9 26       		.byte	0x26
 2671 02aa 68000000 		.4byte	0x68
 2672 02ae 0C       		.byte	0xc
 2673 02af 0B       		.uleb128 0xb
 2674 02b0 33030000 		.4byte	.LASF49
 2675 02b4 08       		.byte	0x8
 2676 02b5 27       		.byte	0x27
 2677 02b6 68000000 		.4byte	0x68
 2678 02ba 10       		.byte	0x10
 2679 02bb 0B       		.uleb128 0xb
 2680 02bc 56030000 		.4byte	.LASF50
 2681 02c0 08       		.byte	0x8
 2682 02c1 28       		.byte	0x28
 2683 02c2 68000000 		.4byte	0x68
 2684 02c6 14       		.byte	0x14
 2685 02c7 0B       		.uleb128 0xb
 2686 02c8 5B070000 		.4byte	.LASF51
 2687 02cc 08       		.byte	0x8
 2688 02cd 29       		.byte	0x29
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 65


 2689 02ce 68000000 		.4byte	0x68
 2690 02d2 18       		.byte	0x18
 2691 02d3 0B       		.uleb128 0xb
 2692 02d4 3C050000 		.4byte	.LASF52
 2693 02d8 08       		.byte	0x8
 2694 02d9 2A       		.byte	0x2a
 2695 02da 68000000 		.4byte	0x68
 2696 02de 1C       		.byte	0x1c
 2697 02df 0B       		.uleb128 0xb
 2698 02e0 3D040000 		.4byte	.LASF53
 2699 02e4 08       		.byte	0x8
 2700 02e5 2B       		.byte	0x2b
 2701 02e6 68000000 		.4byte	0x68
 2702 02ea 20       		.byte	0x20
 2703 02eb 00       		.byte	0
 2704 02ec 09       		.uleb128 0x9
 2705 02ed 2C       		.byte	0x2c
 2706 02ee 09       		.byte	0x9
 2707 02ef 14       		.byte	0x14
 2708 02f0 19030000 		.4byte	0x319
 2709 02f4 0A       		.uleb128 0xa
 2710 02f5 6B657900 		.ascii	"key\000"
 2711 02f9 09       		.byte	0x9
 2712 02fa 15       		.byte	0x15
 2713 02fb 19030000 		.4byte	0x319
 2714 02ff 00       		.byte	0
 2715 0300 0B       		.uleb128 0xb
 2716 0301 4B030000 		.4byte	.LASF54
 2717 0305 09       		.byte	0x9
 2718 0306 16       		.byte	0x16
 2719 0307 19030000 		.4byte	0x319
 2720 030b 14       		.byte	0x14
 2721 030c 0B       		.uleb128 0xb
 2722 030d 7A050000 		.4byte	.LASF55
 2723 0311 09       		.byte	0x9
 2724 0312 17       		.byte	0x17
 2725 0313 BD000000 		.4byte	0xbd
 2726 0317 28       		.byte	0x28
 2727 0318 00       		.byte	0
 2728 0319 07       		.uleb128 0x7
 2729 031a E3000000 		.4byte	0xe3
 2730 031e 29030000 		.4byte	0x329
 2731 0322 08       		.uleb128 0x8
 2732 0323 F1000000 		.4byte	0xf1
 2733 0327 13       		.byte	0x13
 2734 0328 00       		.byte	0
 2735 0329 03       		.uleb128 0x3
 2736 032a 94030000 		.4byte	.LASF56
 2737 032e 09       		.byte	0x9
 2738 032f 19       		.byte	0x19
 2739 0330 EC020000 		.4byte	0x2ec
 2740 0334 09       		.uleb128 0x9
 2741 0335 3C       		.byte	0x3c
 2742 0336 0A       		.byte	0xa
 2743 0337 36       		.byte	0x36
 2744 0338 61030000 		.4byte	0x361
 2745 033c 0B       		.uleb128 0xb
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 66


 2746 033d 67080000 		.4byte	.LASF57
 2747 0341 0A       		.byte	0xa
 2748 0342 37       		.byte	0x37
 2749 0343 19030000 		.4byte	0x319
 2750 0347 00       		.byte	0
 2751 0348 0B       		.uleb128 0xb
 2752 0349 FF020000 		.4byte	.LASF58
 2753 034d 0A       		.byte	0xa
 2754 034e 38       		.byte	0x38
 2755 034f 19030000 		.4byte	0x319
 2756 0353 14       		.byte	0x14
 2757 0354 0B       		.uleb128 0xb
 2758 0355 CE060000 		.4byte	.LASF59
 2759 0359 0A       		.byte	0xa
 2760 035a 39       		.byte	0x39
 2761 035b 19030000 		.4byte	0x319
 2762 035f 28       		.byte	0x28
 2763 0360 00       		.byte	0
 2764 0361 03       		.uleb128 0x3
 2765 0362 42020000 		.4byte	.LASF60
 2766 0366 0A       		.byte	0xa
 2767 0367 3B       		.byte	0x3b
 2768 0368 34030000 		.4byte	0x334
 2769 036c 09       		.uleb128 0x9
 2770 036d 20       		.byte	0x20
 2771 036e 0A       		.byte	0xa
 2772 036f 3D       		.byte	0x3d
 2773 0370 D5030000 		.4byte	0x3d5
 2774 0374 0B       		.uleb128 0xb
 2775 0375 6A020000 		.4byte	.LASF61
 2776 0379 0A       		.byte	0xa
 2777 037a 3E       		.byte	0x3e
 2778 037b 68000000 		.4byte	0x68
 2779 037f 00       		.byte	0
 2780 0380 0A       		.uleb128 0xa
 2781 0381 62657200 		.ascii	"ber\000"
 2782 0385 0A       		.byte	0xa
 2783 0386 3F       		.byte	0x3f
 2784 0387 68000000 		.4byte	0x68
 2785 038b 04       		.byte	0x4
 2786 038c 0B       		.uleb128 0xb
 2787 038d AC060000 		.4byte	.LASF62
 2788 0391 0A       		.byte	0xa
 2789 0392 40       		.byte	0x40
 2790 0393 68000000 		.4byte	0x68
 2791 0397 08       		.byte	0x8
 2792 0398 0B       		.uleb128 0xb
 2793 0399 B7010000 		.4byte	.LASF63
 2794 039d 0A       		.byte	0xa
 2795 039e 41       		.byte	0x41
 2796 039f 68000000 		.4byte	0x68
 2797 03a3 0C       		.byte	0xc
 2798 03a4 0B       		.uleb128 0xb
 2799 03a5 77060000 		.4byte	.LASF64
 2800 03a9 0A       		.byte	0xa
 2801 03aa 42       		.byte	0x42
 2802 03ab 68000000 		.4byte	0x68
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 67


 2803 03af 10       		.byte	0x10
 2804 03b0 0B       		.uleb128 0xb
 2805 03b1 C3070000 		.4byte	.LASF65
 2806 03b5 0A       		.byte	0xa
 2807 03b6 43       		.byte	0x43
 2808 03b7 68000000 		.4byte	0x68
 2809 03bb 14       		.byte	0x14
 2810 03bc 0B       		.uleb128 0xb
 2811 03bd CA010000 		.4byte	.LASF66
 2812 03c1 0A       		.byte	0xa
 2813 03c2 44       		.byte	0x44
 2814 03c3 68000000 		.4byte	0x68
 2815 03c7 18       		.byte	0x18
 2816 03c8 0B       		.uleb128 0xb
 2817 03c9 79020000 		.4byte	.LASF67
 2818 03cd 0A       		.byte	0xa
 2819 03ce 45       		.byte	0x45
 2820 03cf 68000000 		.4byte	0x68
 2821 03d3 1C       		.byte	0x1c
 2822 03d4 00       		.byte	0
 2823 03d5 03       		.uleb128 0x3
 2824 03d6 25070000 		.4byte	.LASF68
 2825 03da 0A       		.byte	0xa
 2826 03db 47       		.byte	0x47
 2827 03dc 6C030000 		.4byte	0x36c
 2828 03e0 09       		.uleb128 0x9
 2829 03e1 0A       		.byte	0xa
 2830 03e2 0A       		.byte	0xa
 2831 03e3 53       		.byte	0x53
 2832 03e4 61040000 		.4byte	0x461
 2833 03e8 0B       		.uleb128 0xb
 2834 03e9 D8020000 		.4byte	.LASF69
 2835 03ed 0A       		.byte	0xa
 2836 03ee 55       		.byte	0x55
 2837 03ef 81000000 		.4byte	0x81
 2838 03f3 00       		.byte	0
 2839 03f4 0B       		.uleb128 0xb
 2840 03f5 9E090000 		.4byte	.LASF70
 2841 03f9 0A       		.byte	0xa
 2842 03fa 57       		.byte	0x57
 2843 03fb 61040000 		.4byte	0x461
 2844 03ff 01       		.byte	0x1
 2845 0400 0B       		.uleb128 0xb
 2846 0401 22080000 		.4byte	.LASF71
 2847 0405 0A       		.byte	0xa
 2848 0406 59       		.byte	0x59
 2849 0407 81000000 		.4byte	0x81
 2850 040b 02       		.byte	0x2
 2851 040c 0B       		.uleb128 0xb
 2852 040d 93060000 		.4byte	.LASF72
 2853 0411 0A       		.byte	0xa
 2854 0412 5B       		.byte	0x5b
 2855 0413 81000000 		.4byte	0x81
 2856 0417 03       		.byte	0x3
 2857 0418 0B       		.uleb128 0xb
 2858 0419 3A030000 		.4byte	.LASF73
 2859 041d 0A       		.byte	0xa
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 68


 2860 041e 5E       		.byte	0x5e
 2861 041f 81000000 		.4byte	0x81
 2862 0423 04       		.byte	0x4
 2863 0424 0B       		.uleb128 0xb
 2864 0425 03090000 		.4byte	.LASF74
 2865 0429 0A       		.byte	0xa
 2866 042a 63       		.byte	0x63
 2867 042b 81000000 		.4byte	0x81
 2868 042f 05       		.byte	0x5
 2869 0430 0B       		.uleb128 0xb
 2870 0431 63070000 		.4byte	.LASF75
 2871 0435 0A       		.byte	0xa
 2872 0436 65       		.byte	0x65
 2873 0437 81000000 		.4byte	0x81
 2874 043b 06       		.byte	0x6
 2875 043c 0B       		.uleb128 0xb
 2876 043d 7F080000 		.4byte	.LASF76
 2877 0441 0A       		.byte	0xa
 2878 0442 66       		.byte	0x66
 2879 0443 81000000 		.4byte	0x81
 2880 0447 07       		.byte	0x7
 2881 0448 0B       		.uleb128 0xb
 2882 0449 6C060000 		.4byte	.LASF77
 2883 044d 0A       		.byte	0xa
 2884 044e 67       		.byte	0x67
 2885 044f 81000000 		.4byte	0x81
 2886 0453 08       		.byte	0x8
 2887 0454 0B       		.uleb128 0xb
 2888 0455 69090000 		.4byte	.LASF78
 2889 0459 0A       		.byte	0xa
 2890 045a 68       		.byte	0x68
 2891 045b 81000000 		.4byte	0x81
 2892 045f 09       		.byte	0x9
 2893 0460 00       		.byte	0
 2894 0461 02       		.uleb128 0x2
 2895 0462 01       		.byte	0x1
 2896 0463 02       		.byte	0x2
 2897 0464 3A060000 		.4byte	.LASF79
 2898 0468 03       		.uleb128 0x3
 2899 0469 CE040000 		.4byte	.LASF80
 2900 046d 0A       		.byte	0xa
 2901 046e 6E       		.byte	0x6e
 2902 046f E0030000 		.4byte	0x3e0
 2903 0473 09       		.uleb128 0x9
 2904 0474 1A       		.byte	0x1a
 2905 0475 0B       		.byte	0xb
 2906 0476 10       		.byte	0x10
 2907 0477 AC040000 		.4byte	0x4ac
 2908 047b 0B       		.uleb128 0xb
 2909 047c 08030000 		.4byte	.LASF81
 2910 0480 0B       		.byte	0xb
 2911 0481 11       		.byte	0x11
 2912 0482 AC040000 		.4byte	0x4ac
 2913 0486 00       		.byte	0
 2914 0487 0B       		.uleb128 0xb
 2915 0488 3E080000 		.4byte	.LASF82
 2916 048c 0B       		.byte	0xb
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 69


 2917 048d 12       		.byte	0x12
 2918 048e B1000000 		.4byte	0xb1
 2919 0492 16       		.byte	0x16
 2920 0493 0B       		.uleb128 0xb
 2921 0494 AB030000 		.4byte	.LASF83
 2922 0498 0B       		.byte	0xb
 2923 0499 13       		.byte	0x13
 2924 049a 81000000 		.4byte	0x81
 2925 049e 18       		.byte	0x18
 2926 049f 0B       		.uleb128 0xb
 2927 04a0 17000000 		.4byte	.LASF84
 2928 04a4 0B       		.byte	0xb
 2929 04a5 14       		.byte	0x14
 2930 04a6 81000000 		.4byte	0x81
 2931 04aa 19       		.byte	0x19
 2932 04ab 00       		.byte	0
 2933 04ac 07       		.uleb128 0x7
 2934 04ad B1000000 		.4byte	0xb1
 2935 04b1 BC040000 		.4byte	0x4bc
 2936 04b5 08       		.uleb128 0x8
 2937 04b6 F1000000 		.4byte	0xf1
 2938 04ba 0A       		.byte	0xa
 2939 04bb 00       		.byte	0
 2940 04bc 03       		.uleb128 0x3
 2941 04bd E4050000 		.4byte	.LASF85
 2942 04c1 0B       		.byte	0xb
 2943 04c2 15       		.byte	0x15
 2944 04c3 73040000 		.4byte	0x473
 2945 04c7 09       		.uleb128 0x9
 2946 04c8 06       		.byte	0x6
 2947 04c9 0C       		.byte	0xc
 2948 04ca 35       		.byte	0x35
 2949 04cb 00050000 		.4byte	0x500
 2950 04cf 0B       		.uleb128 0xb
 2951 04d0 1B030000 		.4byte	.LASF86
 2952 04d4 0C       		.byte	0xc
 2953 04d5 37       		.byte	0x37
 2954 04d6 8D000000 		.4byte	0x8d
 2955 04da 00       		.byte	0
 2956 04db 0B       		.uleb128 0xb
 2957 04dc 88090000 		.4byte	.LASF87
 2958 04e0 0C       		.byte	0xc
 2959 04e1 38       		.byte	0x38
 2960 04e2 B1000000 		.4byte	0xb1
 2961 04e6 02       		.byte	0x2
 2962 04e7 0B       		.uleb128 0xb
 2963 04e8 7A090000 		.4byte	.LASF88
 2964 04ec 0C       		.byte	0xc
 2965 04ed 39       		.byte	0x39
 2966 04ee 81000000 		.4byte	0x81
 2967 04f2 04       		.byte	0x4
 2968 04f3 0B       		.uleb128 0xb
 2969 04f4 51000000 		.4byte	.LASF89
 2970 04f8 0C       		.byte	0xc
 2971 04f9 3A       		.byte	0x3a
 2972 04fa 81000000 		.4byte	0x81
 2973 04fe 05       		.byte	0x5
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 70


 2974 04ff 00       		.byte	0
 2975 0500 03       		.uleb128 0x3
 2976 0501 8C020000 		.4byte	.LASF90
 2977 0505 0C       		.byte	0xc
 2978 0506 3D       		.byte	0x3d
 2979 0507 0B050000 		.4byte	0x50b
 2980 050b 0C       		.uleb128 0xc
 2981 050c C7040000 		.4byte	0x4c7
 2982 0510 09       		.uleb128 0x9
 2983 0511 1C       		.byte	0x1c
 2984 0512 0C       		.byte	0xc
 2985 0513 40       		.byte	0x40
 2986 0514 31050000 		.4byte	0x531
 2987 0518 0B       		.uleb128 0xb
 2988 0519 46040000 		.4byte	.LASF91
 2989 051d 0C       		.byte	0xc
 2990 051e 42       		.byte	0x42
 2991 051f 31050000 		.4byte	0x531
 2992 0523 00       		.byte	0
 2993 0524 0B       		.uleb128 0xb
 2994 0525 D7090000 		.4byte	.LASF92
 2995 0529 0C       		.byte	0xc
 2996 052a 43       		.byte	0x43
 2997 052b FE000000 		.4byte	0xfe
 2998 052f 04       		.byte	0x4
 2999 0530 00       		.byte	0
 3000 0531 06       		.uleb128 0x6
 3001 0532 04       		.byte	0x4
 3002 0533 61030000 		.4byte	0x361
 3003 0537 03       		.uleb128 0x3
 3004 0538 C3040000 		.4byte	.LASF93
 3005 053c 0C       		.byte	0xc
 3006 053d 45       		.byte	0x45
 3007 053e 10050000 		.4byte	0x510
 3008 0542 09       		.uleb128 0x9
 3009 0543 68       		.byte	0x68
 3010 0544 0C       		.byte	0xc
 3011 0545 4B       		.byte	0x4b
 3012 0546 63050000 		.4byte	0x563
 3013 054a 0B       		.uleb128 0xb
 3014 054b 51040000 		.4byte	.LASF94
 3015 054f 0C       		.byte	0xc
 3016 0550 50       		.byte	0x50
 3017 0551 63050000 		.4byte	0x563
 3018 0555 00       		.byte	0
 3019 0556 0B       		.uleb128 0xb
 3020 0557 35040000 		.4byte	.LASF95
 3021 055b 0C       		.byte	0xc
 3022 055c 51       		.byte	0x51
 3023 055d 68000000 		.4byte	0x68
 3024 0561 64       		.byte	0x64
 3025 0562 00       		.byte	0
 3026 0563 07       		.uleb128 0x7
 3027 0564 E3000000 		.4byte	0xe3
 3028 0568 73050000 		.4byte	0x573
 3029 056c 08       		.uleb128 0x8
 3030 056d F1000000 		.4byte	0xf1
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 71


 3031 0571 63       		.byte	0x63
 3032 0572 00       		.byte	0
 3033 0573 03       		.uleb128 0x3
 3034 0574 44050000 		.4byte	.LASF96
 3035 0578 0C       		.byte	0xc
 3036 0579 57       		.byte	0x57
 3037 057a 42050000 		.4byte	0x542
 3038 057e 0F       		.uleb128 0xf
 3039 057f 86000000 		.4byte	.LASF190
 3040 0583 01       		.byte	0x1
 3041 0584 14       		.byte	0x14
 3042 0585 00000000 		.4byte	.LFB64
 3043 0589 0C000000 		.4byte	.LFE64-.LFB64
 3044 058d 01       		.uleb128 0x1
 3045 058e 9C       		.byte	0x9c
 3046 058f 10       		.uleb128 0x10
 3047 0590 C7090000 		.4byte	.LASF109
 3048 0594 01       		.byte	0x1
 3049 0595 28       		.byte	0x28
 3050 0596 00000000 		.4byte	.LFB65
 3051 059a B0010000 		.4byte	.LFE65-.LFB65
 3052 059e 01       		.uleb128 0x1
 3053 059f 9C       		.byte	0x9c
 3054 05a0 C1050000 		.4byte	0x5c1
 3055 05a4 11       		.uleb128 0x11
 3056 05a5 19080000 		.4byte	.LASF97
 3057 05a9 01       		.byte	0x1
 3058 05aa 3C       		.byte	0x3c
 3059 05ab C1050000 		.4byte	0x5c1
 3060 05af 02       		.uleb128 0x2
 3061 05b0 91       		.byte	0x91
 3062 05b1 64       		.sleb128 -28
 3063 05b2 11       		.uleb128 0x11
 3064 05b3 E5030000 		.4byte	.LASF98
 3065 05b7 01       		.byte	0x1
 3066 05b8 74       		.byte	0x74
 3067 05b9 81000000 		.4byte	0x81
 3068 05bd 02       		.uleb128 0x2
 3069 05be 91       		.byte	0x91
 3070 05bf 6F       		.sleb128 -17
 3071 05c0 00       		.byte	0
 3072 05c1 07       		.uleb128 0x7
 3073 05c2 99000000 		.4byte	0x99
 3074 05c6 D1050000 		.4byte	0x5d1
 3075 05ca 08       		.uleb128 0x8
 3076 05cb F1000000 		.4byte	0xf1
 3077 05cf 01       		.byte	0x1
 3078 05d0 00       		.byte	0
 3079 05d1 12       		.uleb128 0x12
 3080 05d2 5E040000 		.4byte	.LASF100
 3081 05d6 01       		.byte	0x1
 3082 05d7 7E       		.byte	0x7e
 3083 05d8 68000000 		.4byte	0x68
 3084 05dc 00000000 		.4byte	.LFB66
 3085 05e0 F4000000 		.4byte	.LFE66-.LFB66
 3086 05e4 01       		.uleb128 0x1
 3087 05e5 9C       		.byte	0x9c
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 72


 3088 05e6 F9050000 		.4byte	0x5f9
 3089 05ea 11       		.uleb128 0x11
 3090 05eb 1E060000 		.4byte	.LASF99
 3091 05ef 01       		.byte	0x1
 3092 05f0 B7       		.byte	0xb7
 3093 05f1 81000000 		.4byte	0x81
 3094 05f5 02       		.uleb128 0x2
 3095 05f6 91       		.byte	0x91
 3096 05f7 77       		.sleb128 -9
 3097 05f8 00       		.byte	0
 3098 05f9 13       		.uleb128 0x13
 3099 05fa 4C080000 		.4byte	.LASF191
 3100 05fe 01       		.byte	0x1
 3101 05ff C7       		.byte	0xc7
 3102 0600 00000000 		.4byte	.LFB67
 3103 0604 2A000000 		.4byte	.LFE67-.LFB67
 3104 0608 01       		.uleb128 0x1
 3105 0609 9C       		.byte	0x9c
 3106 060a 14       		.uleb128 0x14
 3107 060b A0030000 		.4byte	.LASF101
 3108 060f 01       		.byte	0x1
 3109 0610 EC       		.byte	0xec
 3110 0611 00000000 		.4byte	.LFB68
 3111 0615 C8000000 		.4byte	.LFE68-.LFB68
 3112 0619 01       		.uleb128 0x1
 3113 061a 9C       		.byte	0x9c
 3114 061b 2E060000 		.4byte	0x62e
 3115 061f 15       		.uleb128 0x15
 3116 0620 E5040000 		.4byte	.LASF102
 3117 0624 01       		.byte	0x1
 3118 0625 EC       		.byte	0xec
 3119 0626 81000000 		.4byte	0x81
 3120 062a 02       		.uleb128 0x2
 3121 062b 91       		.byte	0x91
 3122 062c 77       		.sleb128 -9
 3123 062d 00       		.byte	0
 3124 062e 16       		.uleb128 0x16
 3125 062f BC090000 		.4byte	.LASF106
 3126 0633 01       		.byte	0x1
 3127 0634 1E01     		.2byte	0x11e
 3128 0636 81000000 		.4byte	0x81
 3129 063a 00000000 		.4byte	.LFB69
 3130 063e 48000000 		.4byte	.LFE69-.LFB69
 3131 0642 01       		.uleb128 0x1
 3132 0643 9C       		.byte	0x9c
 3133 0644 67060000 		.4byte	0x667
 3134 0648 17       		.uleb128 0x17
 3135 0649 22050000 		.4byte	.LASF103
 3136 064d 01       		.byte	0x1
 3137 064e 1E01     		.2byte	0x11e
 3138 0650 67060000 		.4byte	0x667
 3139 0654 02       		.uleb128 0x2
 3140 0655 91       		.byte	0x91
 3141 0656 74       		.sleb128 -12
 3142 0657 17       		.uleb128 0x17
 3143 0658 E5040000 		.4byte	.LASF102
 3144 065c 01       		.byte	0x1
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 73


 3145 065d 1E01     		.2byte	0x11e
 3146 065f 81000000 		.4byte	0x81
 3147 0663 02       		.uleb128 0x2
 3148 0664 91       		.byte	0x91
 3149 0665 73       		.sleb128 -13
 3150 0666 00       		.byte	0
 3151 0667 06       		.uleb128 0x6
 3152 0668 04       		.byte	0x4
 3153 0669 00050000 		.4byte	0x500
 3154 066d 18       		.uleb128 0x18
 3155 066e 7C060000 		.4byte	.LASF104
 3156 0672 01       		.byte	0x1
 3157 0673 3301     		.2byte	0x133
 3158 0675 00000000 		.4byte	.LFB70
 3159 0679 1E000000 		.4byte	.LFE70-.LFB70
 3160 067d 01       		.uleb128 0x1
 3161 067e 9C       		.byte	0x9c
 3162 067f 93060000 		.4byte	0x693
 3163 0683 17       		.uleb128 0x17
 3164 0684 DA060000 		.4byte	.LASF105
 3165 0688 01       		.byte	0x1
 3166 0689 3301     		.2byte	0x133
 3167 068b 67060000 		.4byte	0x667
 3168 068f 02       		.uleb128 0x2
 3169 0690 91       		.byte	0x91
 3170 0691 74       		.sleb128 -12
 3171 0692 00       		.byte	0
 3172 0693 19       		.uleb128 0x19
 3173 0694 A7050000 		.4byte	.LASF107
 3174 0698 01       		.byte	0x1
 3175 0699 3C01     		.2byte	0x13c
 3176 069b 00050000 		.4byte	0x500
 3177 069f 00000000 		.4byte	.LFB71
 3178 06a3 46000000 		.4byte	.LFE71-.LFB71
 3179 06a7 01       		.uleb128 0x1
 3180 06a8 9C       		.byte	0x9c
 3181 06a9 EA060000 		.4byte	0x6ea
 3182 06ad 17       		.uleb128 0x17
 3183 06ae 1B030000 		.4byte	.LASF86
 3184 06b2 01       		.byte	0x1
 3185 06b3 3C01     		.2byte	0x13c
 3186 06b5 8D000000 		.4byte	0x8d
 3187 06b9 02       		.uleb128 0x2
 3188 06ba 91       		.byte	0x91
 3189 06bb 6A       		.sleb128 -22
 3190 06bc 17       		.uleb128 0x17
 3191 06bd 7A090000 		.4byte	.LASF88
 3192 06c1 01       		.byte	0x1
 3193 06c2 3C01     		.2byte	0x13c
 3194 06c4 81000000 		.4byte	0x81
 3195 06c8 02       		.uleb128 0x2
 3196 06c9 91       		.byte	0x91
 3197 06ca 69       		.sleb128 -23
 3198 06cb 17       		.uleb128 0x17
 3199 06cc 51000000 		.4byte	.LASF89
 3200 06d0 01       		.byte	0x1
 3201 06d1 3C01     		.2byte	0x13c
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 74


 3202 06d3 81000000 		.4byte	0x81
 3203 06d7 02       		.uleb128 0x2
 3204 06d8 91       		.byte	0x91
 3205 06d9 68       		.sleb128 -24
 3206 06da 1A       		.uleb128 0x1a
 3207 06db 76080000 		.4byte	.LASF108
 3208 06df 01       		.byte	0x1
 3209 06e0 3F01     		.2byte	0x13f
 3210 06e2 00050000 		.4byte	0x500
 3211 06e6 02       		.uleb128 0x2
 3212 06e7 91       		.byte	0x91
 3213 06e8 70       		.sleb128 -16
 3214 06e9 00       		.byte	0
 3215 06ea 1B       		.uleb128 0x1b
 3216 06eb E9060000 		.4byte	.LASF110
 3217 06ef 01       		.byte	0x1
 3218 06f0 5501     		.2byte	0x155
 3219 06f2 00000000 		.4byte	.LFB72
 3220 06f6 04010000 		.4byte	.LFE72-.LFB72
 3221 06fa 01       		.uleb128 0x1
 3222 06fb 9C       		.byte	0x9c
 3223 06fc 51070000 		.4byte	0x751
 3224 0700 1A       		.uleb128 0x1a
 3225 0701 7E010000 		.4byte	.LASF111
 3226 0705 01       		.byte	0x1
 3227 0706 5D01     		.2byte	0x15d
 3228 0708 D5010000 		.4byte	0x1d5
 3229 070c 03       		.uleb128 0x3
 3230 070d 91       		.byte	0x91
 3231 070e EC7C     		.sleb128 -404
 3232 0710 1A       		.uleb128 0x1a
 3233 0711 10090000 		.4byte	.LASF112
 3234 0715 01       		.byte	0x1
 3235 0716 6C01     		.2byte	0x16c
 3236 0718 D5010000 		.4byte	0x1d5
 3237 071c 03       		.uleb128 0x3
 3238 071d 91       		.byte	0x91
 3239 071e E879     		.sleb128 -792
 3240 0720 1A       		.uleb128 0x1a
 3241 0721 1F010000 		.4byte	.LASF113
 3242 0725 01       		.byte	0x1
 3243 0726 7001     		.2byte	0x170
 3244 0728 D5010000 		.4byte	0x1d5
 3245 072c 03       		.uleb128 0x3
 3246 072d 91       		.byte	0x91
 3247 072e E476     		.sleb128 -1180
 3248 0730 1A       		.uleb128 0x1a
 3249 0731 8C040000 		.4byte	.LASF114
 3250 0735 01       		.byte	0x1
 3251 0736 7401     		.2byte	0x174
 3252 0738 D5010000 		.4byte	0x1d5
 3253 073c 03       		.uleb128 0x3
 3254 073d 91       		.byte	0x91
 3255 073e E073     		.sleb128 -1568
 3256 0740 1A       		.uleb128 0x1a
 3257 0741 00000000 		.4byte	.LASF115
 3258 0745 01       		.byte	0x1
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 75


 3259 0746 7801     		.2byte	0x178
 3260 0748 D5010000 		.4byte	0x1d5
 3261 074c 03       		.uleb128 0x3
 3262 074d 91       		.byte	0x91
 3263 074e DC70     		.sleb128 -1956
 3264 0750 00       		.byte	0
 3265 0751 1C       		.uleb128 0x1c
 3266 0752 D2090000 		.4byte	.LASF192
 3267 0756 01       		.byte	0x1
 3268 0757 8301     		.2byte	0x183
 3269 0759 68000000 		.4byte	0x68
 3270 075d 00000000 		.4byte	.LFB73
 3271 0761 1E000000 		.4byte	.LFE73-.LFB73
 3272 0765 01       		.uleb128 0x1
 3273 0766 9C       		.byte	0x9c
 3274 0767 1D       		.uleb128 0x1d
 3275 0768 E2020000 		.4byte	.LASF116
 3276 076c 01       		.byte	0x1
 3277 076d 9901     		.2byte	0x199
 3278 076f 81000000 		.4byte	0x81
 3279 0773 00000000 		.4byte	.LFB74
 3280 0777 5C040000 		.4byte	.LFE74-.LFB74
 3281 077b 01       		.uleb128 0x1
 3282 077c 9C       		.byte	0x9c
 3283 077d D1080000 		.4byte	0x8d1
 3284 0781 1E       		.uleb128 0x1e
 3285 0782 62000000 		.4byte	.LBB2
 3286 0786 CC030000 		.4byte	.LBE2-.LBB2
 3287 078a 1A       		.uleb128 0x1a
 3288 078b BA050000 		.4byte	.LASF117
 3289 078f 01       		.byte	0x1
 3290 0790 C901     		.2byte	0x1c9
 3291 0792 19030000 		.4byte	0x319
 3292 0796 02       		.uleb128 0x2
 3293 0797 91       		.byte	0x91
 3294 0798 48       		.sleb128 -56
 3295 0799 1A       		.uleb128 0x1a
 3296 079a F3050000 		.4byte	.LASF118
 3297 079e 01       		.byte	0x1
 3298 079f CD01     		.2byte	0x1cd
 3299 07a1 19030000 		.4byte	0x319
 3300 07a5 03       		.uleb128 0x3
 3301 07a6 91       		.byte	0x91
 3302 07a7 B47F     		.sleb128 -76
 3303 07a9 1A       		.uleb128 0x1a
 3304 07aa AD020000 		.4byte	.LASF119
 3305 07ae 01       		.byte	0x1
 3306 07af D201     		.2byte	0x1d2
 3307 07b1 19030000 		.4byte	0x319
 3308 07b5 03       		.uleb128 0x3
 3309 07b6 91       		.byte	0x91
 3310 07b7 A07F     		.sleb128 -96
 3311 07b9 1A       		.uleb128 0x1a
 3312 07ba F1030000 		.4byte	.LASF120
 3313 07be 01       		.byte	0x1
 3314 07bf E501     		.2byte	0x1e5
 3315 07c1 8D000000 		.4byte	0x8d
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 76


 3316 07c5 02       		.uleb128 0x2
 3317 07c6 91       		.byte	0x91
 3318 07c7 66       		.sleb128 -26
 3319 07c8 1A       		.uleb128 0x1a
 3320 07c9 77040000 		.4byte	.LASF121
 3321 07cd 01       		.byte	0x1
 3322 07ce E601     		.2byte	0x1e6
 3323 07d0 19030000 		.4byte	0x319
 3324 07d4 03       		.uleb128 0x3
 3325 07d5 91       		.byte	0x91
 3326 07d6 8C7F     		.sleb128 -116
 3327 07d8 1A       		.uleb128 0x1a
 3328 07d9 D3070000 		.4byte	.LASF122
 3329 07dd 01       		.byte	0x1
 3330 07de FB01     		.2byte	0x1fb
 3331 07e0 D1080000 		.4byte	0x8d1
 3332 07e4 03       		.uleb128 0x3
 3333 07e5 91       		.byte	0x91
 3334 07e6 A475     		.sleb128 -1372
 3335 07e8 1A       		.uleb128 0x1a
 3336 07e9 BC080000 		.4byte	.LASF31
 3337 07ed 01       		.byte	0x1
 3338 07ee FC01     		.2byte	0x1fc
 3339 07f0 81000000 		.4byte	0x81
 3340 07f4 02       		.uleb128 0x2
 3341 07f5 91       		.byte	0x91
 3342 07f6 65       		.sleb128 -27
 3343 07f7 1A       		.uleb128 0x1a
 3344 07f8 94070000 		.4byte	.LASF123
 3345 07fc 01       		.byte	0x1
 3346 07fd 0302     		.2byte	0x203
 3347 07ff F8000000 		.4byte	0xf8
 3348 0803 02       		.uleb128 0x2
 3349 0804 91       		.byte	0x91
 3350 0805 6C       		.sleb128 -20
 3351 0806 1A       		.uleb128 0x1a
 3352 0807 AF010000 		.4byte	.LASF124
 3353 080b 01       		.byte	0x1
 3354 080c 0702     		.2byte	0x207
 3355 080e A5000000 		.4byte	0xa5
 3356 0812 02       		.uleb128 0x2
 3357 0813 91       		.byte	0x91
 3358 0814 64       		.sleb128 -28
 3359 0815 1A       		.uleb128 0x1a
 3360 0816 EB020000 		.4byte	.LASF125
 3361 081a 01       		.byte	0x1
 3362 081b 3702     		.2byte	0x237
 3363 081d 4C000000 		.4byte	0x4c
 3364 0821 02       		.uleb128 0x2
 3365 0822 91       		.byte	0x91
 3366 0823 5C       		.sleb128 -36
 3367 0824 1F       		.uleb128 0x1f
 3368 0825 F0000000 		.4byte	.LBB3
 3369 0829 2C000000 		.4byte	.LBE3-.LBB3
 3370 082d 51080000 		.4byte	0x851
 3371 0831 1A       		.uleb128 0x1a
 3372 0832 15070000 		.4byte	.LASF126
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 77


 3373 0836 01       		.byte	0x1
 3374 0837 DA01     		.2byte	0x1da
 3375 0839 8D000000 		.4byte	0x8d
 3376 083d 02       		.uleb128 0x2
 3377 083e 91       		.byte	0x91
 3378 083f 68       		.sleb128 -24
 3379 0840 1A       		.uleb128 0x1a
 3380 0841 30020000 		.4byte	.LASF127
 3381 0845 01       		.byte	0x1
 3382 0846 DB01     		.2byte	0x1db
 3383 0848 19030000 		.4byte	0x319
 3384 084c 03       		.uleb128 0x3
 3385 084d 91       		.byte	0x91
 3386 084e F87E     		.sleb128 -136
 3387 0850 00       		.byte	0
 3388 0851 1F       		.uleb128 0x1f
 3389 0852 1E010000 		.4byte	.LBB4
 3390 0856 20000000 		.4byte	.LBE4-.LBB4
 3391 085a 6F080000 		.4byte	0x86f
 3392 085e 1A       		.uleb128 0x1a
 3393 085f 30020000 		.4byte	.LASF127
 3394 0863 01       		.byte	0x1
 3395 0864 DF01     		.2byte	0x1df
 3396 0866 19030000 		.4byte	0x319
 3397 086a 03       		.uleb128 0x3
 3398 086b 91       		.byte	0x91
 3399 086c E47E     		.sleb128 -156
 3400 086e 00       		.byte	0
 3401 086f 1F       		.uleb128 0x1f
 3402 0870 5E020000 		.4byte	.LBB5
 3403 0874 4C010000 		.4byte	.LBE5-.LBB5
 3404 0878 A6080000 		.4byte	0x8a6
 3405 087c 1A       		.uleb128 0x1a
 3406 087d B3050000 		.4byte	.LASF128
 3407 0881 01       		.byte	0x1
 3408 0882 0C02     		.2byte	0x20c
 3409 0884 A5000000 		.4byte	0xa5
 3410 0888 02       		.uleb128 0x2
 3411 0889 91       		.byte	0x91
 3412 088a 6B       		.sleb128 -21
 3413 088b 1E       		.uleb128 0x1e
 3414 088c 66020000 		.4byte	.LBB6
 3415 0890 28010000 		.4byte	.LBE6-.LBB6
 3416 0894 1A       		.uleb128 0x1a
 3417 0895 BE030000 		.4byte	.LASF129
 3418 0899 01       		.byte	0x1
 3419 089a 0E02     		.2byte	0x20e
 3420 089c E1080000 		.4byte	0x8e1
 3421 08a0 03       		.uleb128 0x3
 3422 08a1 91       		.byte	0x91
 3423 08a2 EC76     		.sleb128 -1172
 3424 08a4 00       		.byte	0
 3425 08a5 00       		.byte	0
 3426 08a6 1E       		.uleb128 0x1e
 3427 08a7 C4030000 		.4byte	.LBB7
 3428 08ab 3A000000 		.4byte	.LBE7-.LBB7
 3429 08af 1A       		.uleb128 0x1a
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 78


 3430 08b0 BB020000 		.4byte	.LASF130
 3431 08b4 01       		.byte	0x1
 3432 08b5 2E02     		.2byte	0x22e
 3433 08b7 68000000 		.4byte	0x68
 3434 08bb 02       		.uleb128 0x2
 3435 08bc 91       		.byte	0x91
 3436 08bd 60       		.sleb128 -32
 3437 08be 1A       		.uleb128 0x1a
 3438 08bf 87060000 		.4byte	.LASF131
 3439 08c3 01       		.byte	0x1
 3440 08c4 2F02     		.2byte	0x22f
 3441 08c6 F2080000 		.4byte	0x8f2
 3442 08ca 03       		.uleb128 0x3
 3443 08cb 91       		.byte	0x91
 3444 08cc D87E     		.sleb128 -168
 3445 08ce 00       		.byte	0
 3446 08cf 00       		.byte	0
 3447 08d0 00       		.byte	0
 3448 08d1 07       		.uleb128 0x7
 3449 08d2 E3000000 		.4byte	0xe3
 3450 08d6 E1080000 		.4byte	0x8e1
 3451 08da 08       		.uleb128 0x8
 3452 08db F1000000 		.4byte	0xf1
 3453 08df C7       		.byte	0xc7
 3454 08e0 00       		.byte	0
 3455 08e1 07       		.uleb128 0x7
 3456 08e2 E3000000 		.4byte	0xe3
 3457 08e6 F2080000 		.4byte	0x8f2
 3458 08ea 20       		.uleb128 0x20
 3459 08eb F1000000 		.4byte	0xf1
 3460 08ef E803     		.2byte	0x3e8
 3461 08f1 00       		.byte	0
 3462 08f2 07       		.uleb128 0x7
 3463 08f3 E3000000 		.4byte	0xe3
 3464 08f7 02090000 		.4byte	0x902
 3465 08fb 08       		.uleb128 0x8
 3466 08fc F1000000 		.4byte	0xf1
 3467 0900 09       		.byte	0x9
 3468 0901 00       		.byte	0
 3469 0902 1D       		.uleb128 0x1d
 3470 0903 FA050000 		.4byte	.LASF132
 3471 0907 01       		.byte	0x1
 3472 0908 4C02     		.2byte	0x24c
 3473 090a 81000000 		.4byte	0x81
 3474 090e 00000000 		.4byte	.LFB75
 3475 0912 44000000 		.4byte	.LFE75-.LFB75
 3476 0916 01       		.uleb128 0x1
 3477 0917 9C       		.byte	0x9c
 3478 0918 36090000 		.4byte	0x936
 3479 091c 1E       		.uleb128 0x1e
 3480 091d 20000000 		.4byte	.LBB8
 3481 0921 1A000000 		.4byte	.LBE8-.LBB8
 3482 0925 1A       		.uleb128 0x1a
 3483 0926 EB020000 		.4byte	.LASF125
 3484 092a 01       		.byte	0x1
 3485 092b 5702     		.2byte	0x257
 3486 092d 4C000000 		.4byte	0x4c
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 79


 3487 0931 02       		.uleb128 0x2
 3488 0932 91       		.byte	0x91
 3489 0933 74       		.sleb128 -12
 3490 0934 00       		.byte	0
 3491 0935 00       		.byte	0
 3492 0936 1D       		.uleb128 0x1d
 3493 0937 1F040000 		.4byte	.LASF133
 3494 093b 01       		.byte	0x1
 3495 093c 6C02     		.2byte	0x26c
 3496 093e 81000000 		.4byte	0x81
 3497 0942 00000000 		.4byte	.LFB76
 3498 0946 A4020000 		.4byte	.LFE76-.LFB76
 3499 094a 01       		.uleb128 0x1
 3500 094b 9C       		.byte	0x9c
 3501 094c D7090000 		.4byte	0x9d7
 3502 0950 1A       		.uleb128 0x1a
 3503 0951 7A050000 		.4byte	.LASF55
 3504 0955 01       		.byte	0x1
 3505 0956 6F02     		.2byte	0x26f
 3506 0958 4C000000 		.4byte	0x4c
 3507 095c 02       		.uleb128 0x2
 3508 095d 91       		.byte	0x91
 3509 095e 6C       		.sleb128 -20
 3510 095f 1A       		.uleb128 0x1a
 3511 0960 9A070000 		.4byte	.LASF134
 3512 0964 01       		.byte	0x1
 3513 0965 7002     		.2byte	0x270
 3514 0967 D7090000 		.4byte	0x9d7
 3515 096b 02       		.uleb128 0x2
 3516 096c 91       		.byte	0x91
 3517 096d 4C       		.sleb128 -52
 3518 096e 1A       		.uleb128 0x1a
 3519 096f 4B030000 		.4byte	.LASF54
 3520 0973 01       		.byte	0x1
 3521 0974 7402     		.2byte	0x274
 3522 0976 19030000 		.4byte	0x319
 3523 097a 03       		.uleb128 0x3
 3524 097b 91       		.byte	0x91
 3525 097c B87F     		.sleb128 -72
 3526 097e 1A       		.uleb128 0x1a
 3527 097f 110A0000 		.4byte	.LASF135
 3528 0983 01       		.byte	0x1
 3529 0984 7802     		.2byte	0x278
 3530 0986 E7090000 		.4byte	0x9e7
 3531 098a 03       		.uleb128 0x3
 3532 098b 91       		.byte	0x91
 3533 098c B07F     		.sleb128 -80
 3534 098e 1A       		.uleb128 0x1a
 3535 098f C9030000 		.4byte	.LASF136
 3536 0993 01       		.byte	0x1
 3537 0994 9902     		.2byte	0x299
 3538 0996 25020000 		.4byte	0x225
 3539 099a 03       		.uleb128 0x3
 3540 099b 91       		.byte	0x91
 3541 099c 9C7F     		.sleb128 -100
 3542 099e 1F       		.uleb128 0x1f
 3543 099f 46000000 		.4byte	.LBB9
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 80


 3544 09a3 78000000 		.4byte	.LBE9-.LBB9
 3545 09a7 BC090000 		.4byte	0x9bc
 3546 09ab 1A       		.uleb128 0x1a
 3547 09ac 2F080000 		.4byte	.LASF137
 3548 09b0 01       		.byte	0x1
 3549 09b1 8102     		.2byte	0x281
 3550 09b3 BC040000 		.4byte	0x4bc
 3551 09b7 03       		.uleb128 0x3
 3552 09b8 91       		.byte	0x91
 3553 09b9 807F     		.sleb128 -128
 3554 09bb 00       		.byte	0
 3555 09bc 1E       		.uleb128 0x1e
 3556 09bd 4A010000 		.4byte	.LBB10
 3557 09c1 EE000000 		.4byte	.LBE10-.LBB10
 3558 09c5 1A       		.uleb128 0x1a
 3559 09c6 A3080000 		.4byte	.LASF138
 3560 09ca 01       		.byte	0x1
 3561 09cb B502     		.2byte	0x2b5
 3562 09cd 69020000 		.4byte	0x269
 3563 09d1 03       		.uleb128 0x3
 3564 09d2 91       		.byte	0x91
 3565 09d3 F07E     		.sleb128 -144
 3566 09d5 00       		.byte	0
 3567 09d6 00       		.byte	0
 3568 09d7 07       		.uleb128 0x7
 3569 09d8 E3000000 		.4byte	0xe3
 3570 09dc E7090000 		.4byte	0x9e7
 3571 09e0 08       		.uleb128 0x8
 3572 09e1 F1000000 		.4byte	0xf1
 3573 09e5 1F       		.byte	0x1f
 3574 09e6 00       		.byte	0
 3575 09e7 07       		.uleb128 0x7
 3576 09e8 E3000000 		.4byte	0xe3
 3577 09ec F7090000 		.4byte	0x9f7
 3578 09f0 08       		.uleb128 0x8
 3579 09f1 F1000000 		.4byte	0xf1
 3580 09f5 04       		.byte	0x4
 3581 09f6 00       		.byte	0
 3582 09f7 16       		.uleb128 0x16
 3583 09f8 8C030000 		.4byte	.LASF139
 3584 09fc 01       		.byte	0x1
 3585 09fd DD02     		.2byte	0x2dd
 3586 09ff 81000000 		.4byte	0x81
 3587 0a03 00000000 		.4byte	.LFB77
 3588 0a07 74000000 		.4byte	.LFE77-.LFB77
 3589 0a0b 01       		.uleb128 0x1
 3590 0a0c 9C       		.byte	0x9c
 3591 0a0d 3D0A0000 		.4byte	0xa3d
 3592 0a11 17       		.uleb128 0x17
 3593 0a12 7A050000 		.4byte	.LASF55
 3594 0a16 01       		.byte	0x1
 3595 0a17 DD02     		.2byte	0x2dd
 3596 0a19 4C000000 		.4byte	0x4c
 3597 0a1d 02       		.uleb128 0x2
 3598 0a1e 91       		.byte	0x91
 3599 0a1f 64       		.sleb128 -28
 3600 0a20 21       		.uleb128 0x21
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 81


 3601 0a21 7400     		.ascii	"t\000"
 3602 0a23 01       		.byte	0x1
 3603 0a24 E402     		.2byte	0x2e4
 3604 0a26 3D0A0000 		.4byte	0xa3d
 3605 0a2a 02       		.uleb128 0x2
 3606 0a2b 91       		.byte	0x91
 3607 0a2c 74       		.sleb128 -12
 3608 0a2d 1A       		.uleb128 0x1a
 3609 0a2e 53050000 		.4byte	.LASF140
 3610 0a32 01       		.byte	0x1
 3611 0a33 E902     		.2byte	0x2e9
 3612 0a35 77010000 		.4byte	0x177
 3613 0a39 02       		.uleb128 0x2
 3614 0a3a 91       		.byte	0x91
 3615 0a3b 68       		.sleb128 -24
 3616 0a3c 00       		.byte	0
 3617 0a3d 06       		.uleb128 0x6
 3618 0a3e 04       		.byte	0x4
 3619 0a3f 74020000 		.4byte	0x274
 3620 0a43 16       		.uleb128 0x16
 3621 0a44 2A030000 		.4byte	.LASF141
 3622 0a48 01       		.byte	0x1
 3623 0a49 0603     		.2byte	0x306
 3624 0a4b 81000000 		.4byte	0x81
 3625 0a4f 00000000 		.4byte	.LFB78
 3626 0a53 38010000 		.4byte	.LFE78-.LFB78
 3627 0a57 01       		.uleb128 0x1
 3628 0a58 9C       		.byte	0x9c
 3629 0a59 BC0A0000 		.4byte	0xabc
 3630 0a5d 17       		.uleb128 0x17
 3631 0a5e 51030000 		.4byte	.LASF142
 3632 0a62 01       		.byte	0x1
 3633 0a63 0603     		.2byte	0x306
 3634 0a65 F8000000 		.4byte	0xf8
 3635 0a69 03       		.uleb128 0x3
 3636 0a6a 91       		.byte	0x91
 3637 0a6b 9C7E     		.sleb128 -228
 3638 0a6d 17       		.uleb128 0x17
 3639 0a6e 46030000 		.4byte	.LASF143
 3640 0a72 01       		.byte	0x1
 3641 0a73 0603     		.2byte	0x306
 3642 0a75 68000000 		.4byte	0x68
 3643 0a79 03       		.uleb128 0x3
 3644 0a7a 91       		.byte	0x91
 3645 0a7b 987E     		.sleb128 -232
 3646 0a7d 17       		.uleb128 0x17
 3647 0a7e 56060000 		.4byte	.LASF144
 3648 0a82 01       		.byte	0x1
 3649 0a83 0603     		.2byte	0x306
 3650 0a85 F8000000 		.4byte	0xf8
 3651 0a89 03       		.uleb128 0x3
 3652 0a8a 91       		.byte	0x91
 3653 0a8b 947E     		.sleb128 -236
 3654 0a8d 1A       		.uleb128 0x1a
 3655 0a8e 12020000 		.4byte	.LASF145
 3656 0a92 01       		.byte	0x1
 3657 0a93 0803     		.2byte	0x308
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 82


 3658 0a95 81000000 		.4byte	0x81
 3659 0a99 02       		.uleb128 0x2
 3660 0a9a 91       		.byte	0x91
 3661 0a9b 77       		.sleb128 -9
 3662 0a9c 1A       		.uleb128 0x1a
 3663 0a9d 3C000000 		.4byte	.LASF146
 3664 0aa1 01       		.byte	0x1
 3665 0aa2 0F03     		.2byte	0x30f
 3666 0aa4 BC0A0000 		.4byte	0xabc
 3667 0aa8 02       		.uleb128 0x2
 3668 0aa9 91       		.byte	0x91
 3669 0aaa 68       		.sleb128 -24
 3670 0aab 1A       		.uleb128 0x1a
 3671 0aac D3070000 		.4byte	.LASF122
 3672 0ab0 01       		.byte	0x1
 3673 0ab1 1703     		.2byte	0x317
 3674 0ab3 D1080000 		.4byte	0x8d1
 3675 0ab7 03       		.uleb128 0x3
 3676 0ab8 91       		.byte	0x91
 3677 0ab9 A07E     		.sleb128 -224
 3678 0abb 00       		.byte	0
 3679 0abc 07       		.uleb128 0x7
 3680 0abd E3000000 		.4byte	0xe3
 3681 0ac1 CC0A0000 		.4byte	0xacc
 3682 0ac5 08       		.uleb128 0x8
 3683 0ac6 F1000000 		.4byte	0xf1
 3684 0aca 0B       		.byte	0xb
 3685 0acb 00       		.byte	0
 3686 0acc 22       		.uleb128 0x22
 3687 0acd 71010000 		.4byte	.LASF147
 3688 0ad1 0D       		.byte	0xd
 3689 0ad2 1207     		.2byte	0x712
 3690 0ad4 D80A0000 		.4byte	0xad8
 3691 0ad8 0C       		.uleb128 0xc
 3692 0ad9 76000000 		.4byte	0x76
 3693 0add 23       		.uleb128 0x23
 3694 0ade 2C000000 		.4byte	.LASF148
 3695 0ae2 09       		.byte	0x9
 3696 0ae3 11       		.byte	0x11
 3697 0ae4 61040000 		.4byte	0x461
 3698 0ae8 05       		.uleb128 0x5
 3699 0ae9 03       		.byte	0x3
 3700 0aea 00000000 		.4byte	buffer_overflow
 3701 0aee 23       		.uleb128 0x23
 3702 0aef EF040000 		.4byte	.LASF149
 3703 0af3 09       		.byte	0x9
 3704 0af4 22       		.byte	0x22
 3705 0af5 8D000000 		.4byte	0x8d
 3706 0af9 05       		.uleb128 0x5
 3707 0afa 03       		.byte	0x3
 3708 0afb 00000000 		.4byte	dataPointsInStack
 3709 0aff 23       		.uleb128 0x23
 3710 0b00 EA080000 		.4byte	.LASF150
 3711 0b04 09       		.byte	0x9
 3712 0b05 23       		.byte	0x23
 3713 0b06 8D000000 		.4byte	0x8d
 3714 0b0a 05       		.uleb128 0x5
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 83


 3715 0b0b 03       		.byte	0x3
 3716 0b0c 00000000 		.4byte	dataPointsInStackDesired
 3717 0b10 07       		.uleb128 0x7
 3718 0b11 29030000 		.4byte	0x329
 3719 0b15 200B0000 		.4byte	0xb20
 3720 0b19 08       		.uleb128 0x8
 3721 0b1a F1000000 		.4byte	0xf1
 3722 0b1e 95       		.byte	0x95
 3723 0b1f 00       		.byte	0
 3724 0b20 23       		.uleb128 0x23
 3725 0b21 30040000 		.4byte	.LASF151
 3726 0b25 09       		.byte	0x9
 3727 0b26 24       		.byte	0x24
 3728 0b27 100B0000 		.4byte	0xb10
 3729 0b2b 05       		.uleb128 0x5
 3730 0b2c 03       		.byte	0x3
 3731 0b2d 00000000 		.4byte	data
 3732 0b31 23       		.uleb128 0x23
 3733 0b32 58010000 		.4byte	.LASF152
 3734 0b36 0A       		.byte	0xa
 3735 0b37 20       		.byte	0x20
 3736 0b38 81000000 		.4byte	0x81
 3737 0b3c 05       		.uleb128 0x5
 3738 0b3d 03       		.byte	0x3
 3739 0b3e 00000000 		.4byte	modem_state
 3740 0b42 23       		.uleb128 0x23
 3741 0b43 AC040000 		.4byte	.LASF153
 3742 0b47 0A       		.byte	0xa
 3743 0b48 71       		.byte	0x71
 3744 0b49 BD000000 		.4byte	0xbd
 3745 0b4d 05       		.uleb128 0x5
 3746 0b4e 03       		.byte	0x3
 3747 0b4f 00000000 		.4byte	modem_start_time_stamp
 3748 0b53 23       		.uleb128 0x23
 3749 0b54 46040000 		.4byte	.LASF91
 3750 0b58 0A       		.byte	0xa
 3751 0b59 72       		.byte	0x72
 3752 0b5a 61030000 		.4byte	0x361
 3753 0b5e 05       		.uleb128 0x5
 3754 0b5f 03       		.byte	0x3
 3755 0b60 00000000 		.4byte	modem_info
 3756 0b64 23       		.uleb128 0x23
 3757 0b65 4C010000 		.4byte	.LASF154
 3758 0b69 0A       		.byte	0xa
 3759 0b6a 73       		.byte	0x73
 3760 0b6b D5030000 		.4byte	0x3d5
 3761 0b6f 05       		.uleb128 0x5
 3762 0b70 03       		.byte	0x3
 3763 0b71 00000000 		.4byte	modem_stats
 3764 0b75 23       		.uleb128 0x23
 3765 0b76 92050000 		.4byte	.LASF155
 3766 0b7a 0A       		.byte	0xa
 3767 0b7b 74       		.byte	0x74
 3768 0b7c 68040000 		.4byte	0x468
 3769 0b80 05       		.uleb128 0x5
 3770 0b81 03       		.byte	0x3
 3771 0b82 00000000 		.4byte	updatable_parameters
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 84


 3772 0b86 23       		.uleb128 0x23
 3773 0b87 7C030000 		.4byte	.LASF156
 3774 0b8b 0E       		.byte	0xe
 3775 0b8c 07       		.byte	0x7
 3776 0b8d 81000000 		.4byte	0x81
 3777 0b91 05       		.uleb128 0x5
 3778 0b92 03       		.byte	0x3
 3779 0b93 00000000 		.4byte	App_LED_enabled
 3780 0b97 23       		.uleb128 0x23
 3781 0b98 F9090000 		.4byte	.LASF157
 3782 0b9c 0E       		.byte	0xe
 3783 0b9d 08       		.byte	0x8
 3784 0b9e 63050000 		.4byte	0x563
 3785 0ba2 05       		.uleb128 0x5
 3786 0ba3 03       		.byte	0x3
 3787 0ba4 00000000 		.4byte	app_led_inbox
 3788 0ba8 23       		.uleb128 0x23
 3789 0ba9 75070000 		.4byte	.LASF158
 3790 0bad 0B       		.byte	0xb
 3791 0bae 25       		.byte	0x25
 3792 0baf 63050000 		.4byte	0x563
 3793 0bb3 05       		.uleb128 0x5
 3794 0bb4 03       		.byte	0x3
 3795 0bb5 00000000 		.4byte	level_sensor_inbox
 3796 0bb9 23       		.uleb128 0x23
 3797 0bba D5080000 		.4byte	.LASF159
 3798 0bbe 0B       		.byte	0xb
 3799 0bbf 27       		.byte	0x27
 3800 0bc0 61040000 		.4byte	0x461
 3801 0bc4 05       		.uleb128 0x5
 3802 0bc5 03       		.byte	0x3
 3803 0bc6 00000000 		.4byte	level_sensor_enabled
 3804 0bca 23       		.uleb128 0x23
 3805 0bcb 21020000 		.4byte	.LASF160
 3806 0bcf 0F       		.byte	0xf
 3807 0bd0 2A       		.byte	0x2a
 3808 0bd1 C9000000 		.4byte	0xc9
 3809 0bd5 05       		.uleb128 0x5
 3810 0bd6 03       		.byte	0x3
 3811 0bd7 00000000 		.4byte	valve_diameter
 3812 0bdb 23       		.uleb128 0x23
 3813 0bdc 7B000000 		.4byte	.LASF161
 3814 0be0 0F       		.byte	0xf
 3815 0be1 2B       		.byte	0x2b
 3816 0be2 F2080000 		.4byte	0x8f2
 3817 0be6 05       		.uleb128 0x5
 3818 0be7 03       		.byte	0x3
 3819 0be8 00000000 		.4byte	valve_type
 3820 0bec 23       		.uleb128 0x23
 3821 0bed AE080000 		.4byte	.LASF162
 3822 0bf1 0F       		.byte	0xf
 3823 0bf2 30       		.byte	0x30
 3824 0bf3 81000000 		.4byte	0x81
 3825 0bf7 05       		.uleb128 0x5
 3826 0bf8 03       		.byte	0x3
 3827 0bf9 00000000 		.4byte	valve_enabled
 3828 0bfd 23       		.uleb128 0x23
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 85


 3829 0bfe 5D090000 		.4byte	.LASF163
 3830 0c02 0F       		.byte	0xf
 3831 0c03 31       		.byte	0x31
 3832 0c04 63050000 		.4byte	0x563
 3833 0c08 05       		.uleb128 0x5
 3834 0c09 03       		.byte	0x3
 3835 0c0a 00000000 		.4byte	valve_inbox
 3836 0c0e 23       		.uleb128 0x23
 3837 0c0f 8D010000 		.4byte	.LASF164
 3838 0c13 10       		.byte	0x10
 3839 0c14 69       		.byte	0x69
 3840 0c15 81000000 		.4byte	0x81
 3841 0c19 05       		.uleb128 0x5
 3842 0c1a 03       		.byte	0x3
 3843 0c1b 00000000 		.4byte	autosampler_enabled
 3844 0c1f 23       		.uleb128 0x23
 3845 0c20 01050000 		.4byte	.LASF165
 3846 0c24 10       		.byte	0x10
 3847 0c25 6B       		.byte	0x6b
 3848 0c26 63050000 		.4byte	0x563
 3849 0c2a 05       		.uleb128 0x5
 3850 0c2b 03       		.byte	0x3
 3851 0c2c 00000000 		.4byte	autosampler_inbox
 3852 0c30 07       		.uleb128 0x7
 3853 0c31 E3000000 		.4byte	0xe3
 3854 0c35 410C0000 		.4byte	0xc41
 3855 0c39 20       		.uleb128 0x20
 3856 0c3a F1000000 		.4byte	0xf1
 3857 0c3e 0F27     		.2byte	0x270f
 3858 0c40 00       		.byte	0
 3859 0c41 23       		.uleb128 0x23
 3860 0c42 E5090000 		.4byte	.LASF166
 3861 0c46 0C       		.byte	0xc
 3862 0c47 1F       		.byte	0x1f
 3863 0c48 300C0000 		.4byte	0xc30
 3864 0c4c 05       		.uleb128 0x5
 3865 0c4d 03       		.byte	0x3
 3866 0c4e 00000000 		.4byte	http_request
 3867 0c52 23       		.uleb128 0x23
 3868 0c53 42090000 		.4byte	.LASF167
 3869 0c57 0C       		.byte	0xc
 3870 0c58 20       		.byte	0x20
 3871 0c59 300C0000 		.4byte	0xc30
 3872 0c5d 05       		.uleb128 0x5
 3873 0c5e 03       		.byte	0x3
 3874 0c5f 00000000 		.4byte	http_body
 3875 0c63 23       		.uleb128 0x23
 3876 0c64 C8070000 		.4byte	.LASF168
 3877 0c68 0C       		.byte	0xc
 3878 0c69 21       		.byte	0x21
 3879 0c6a D1080000 		.4byte	0x8d1
 3880 0c6e 05       		.uleb128 0x5
 3881 0c6f 03       		.byte	0x3
 3882 0c70 00000000 		.4byte	http_route
 3883 0c74 23       		.uleb128 0x23
 3884 0c75 C2060000 		.4byte	.LASF169
 3885 0c79 0C       		.byte	0xc
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 86


 3886 0c7a 48       		.byte	0x48
 3887 0c7b 37050000 		.4byte	0x537
 3888 0c7f 05       		.uleb128 0x5
 3889 0c80 03       		.byte	0x3
 3890 0c81 00000000 		.4byte	system_info
 3891 0c85 23       		.uleb128 0x23
 3892 0c86 5C060000 		.4byte	.LASF170
 3893 0c8a 0C       		.byte	0xc
 3894 0c8b 5A       		.byte	0x5a
 3895 0c8c 73050000 		.4byte	0x573
 3896 0c90 05       		.uleb128 0x5
 3897 0c91 03       		.byte	0x3
 3898 0c92 00000000 		.4byte	system_settings
 3899 0c96 23       		.uleb128 0x23
 3900 0c97 64010000 		.4byte	.LASF171
 3901 0c9b 0C       		.byte	0xc
 3902 0c9c 76       		.byte	0x76
 3903 0c9d 00050000 		.4byte	0x500
 3904 0ca1 05       		.uleb128 0x5
 3905 0ca2 03       		.byte	0x3
 3906 0ca3 00000000 		.4byte	alarmMeasure
 3907 0ca7 23       		.uleb128 0x23
 3908 0ca8 BC010000 		.4byte	.LASF172
 3909 0cac 0C       		.byte	0xc
 3910 0cad 77       		.byte	0x77
 3911 0cae 81000000 		.4byte	0x81
 3912 0cb2 05       		.uleb128 0x5
 3913 0cb3 03       		.byte	0x3
 3914 0cb4 00000000 		.4byte	timeToMeasure
 3915 0cb8 23       		.uleb128 0x23
 3916 0cb9 5E030000 		.4byte	.LASF173
 3917 0cbd 0C       		.byte	0xc
 3918 0cbe 78       		.byte	0x78
 3919 0cbf 00050000 		.4byte	0x500
 3920 0cc3 05       		.uleb128 0x5
 3921 0cc4 03       		.byte	0x3
 3922 0cc5 00000000 		.4byte	alarmSync
 3923 0cc9 23       		.uleb128 0x23
 3924 0cca E2010000 		.4byte	.LASF174
 3925 0cce 0C       		.byte	0xc
 3926 0ccf 79       		.byte	0x79
 3927 0cd0 81000000 		.4byte	0x81
 3928 0cd4 05       		.uleb128 0x5
 3929 0cd5 03       		.byte	0x3
 3930 0cd6 00000000 		.4byte	timeToSync
 3931 0cda 23       		.uleb128 0x23
 3932 0cdb 63050000 		.4byte	.LASF175
 3933 0cdf 0C       		.byte	0xc
 3934 0ce0 7A       		.byte	0x7a
 3935 0ce1 81000000 		.4byte	0x81
 3936 0ce5 05       		.uleb128 0x5
 3937 0ce6 03       		.byte	0x3
 3938 0ce7 00000000 		.4byte	timeToSycnRemoteParams
 3939 0ceb 24       		.uleb128 0x24
 3940 0cec 68657900 		.ascii	"hey\000"
 3941 0cf0 0C       		.byte	0xc
 3942 0cf1 7B       		.byte	0x7b
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 87


 3943 0cf2 81000000 		.4byte	0x81
 3944 0cf6 05       		.uleb128 0x5
 3945 0cf7 03       		.byte	0x3
 3946 0cf8 00000000 		.4byte	hey
 3947 0cfc 23       		.uleb128 0x23
 3948 0cfd A0040000 		.4byte	.LASF176
 3949 0d01 0C       		.byte	0xc
 3950 0d02 7F       		.byte	0x7f
 3951 0d03 00050000 		.4byte	0x500
 3952 0d07 05       		.uleb128 0x5
 3953 0d08 03       		.byte	0x3
 3954 0d09 00000000 		.4byte	alarmAppLED
 3955 0d0d 23       		.uleb128 0x23
 3956 0d0e C5020000 		.4byte	.LASF177
 3957 0d12 0C       		.byte	0xc
 3958 0d13 80       		.byte	0x80
 3959 0d14 81000000 		.4byte	0x81
 3960 0d18 05       		.uleb128 0x5
 3961 0d19 03       		.byte	0x3
 3962 0d1a 00000000 		.4byte	timeToAppLED
 3963 0d1e 23       		.uleb128 0x23
 3964 0d1f 4A070000 		.4byte	.LASF178
 3965 0d23 0C       		.byte	0xc
 3966 0d24 82       		.byte	0x82
 3967 0d25 00050000 		.4byte	0x500
 3968 0d29 05       		.uleb128 0x5
 3969 0d2a 03       		.byte	0x3
 3970 0d2b 00000000 		.4byte	alarmLevelSensor
 3971 0d2f 23       		.uleb128 0x23
 3972 0d30 C3080000 		.4byte	.LASF179
 3973 0d34 0C       		.byte	0xc
 3974 0d35 83       		.byte	0x83
 3975 0d36 81000000 		.4byte	0x81
 3976 0d3a 05       		.uleb128 0x5
 3977 0d3b 03       		.byte	0x3
 3978 0d3c 00000000 		.4byte	timeToLevelSensor
 3979 0d40 23       		.uleb128 0x23
 3980 0d41 4F020000 		.4byte	.LASF180
 3981 0d45 0C       		.byte	0xc
 3982 0d46 85       		.byte	0x85
 3983 0d47 00050000 		.4byte	0x500
 3984 0d4b 05       		.uleb128 0x5
 3985 0d4c 03       		.byte	0x3
 3986 0d4d 00000000 		.4byte	alarmDownstreamLevelSensor
 3987 0d51 23       		.uleb128 0x23
 3988 0d52 26090000 		.4byte	.LASF181
 3989 0d56 0C       		.byte	0xc
 3990 0d57 86       		.byte	0x86
 3991 0d58 81000000 		.4byte	0x81
 3992 0d5c 05       		.uleb128 0x5
 3993 0d5d 03       		.byte	0x3
 3994 0d5e 00000000 		.4byte	timeToDownstreamLevelSensor
 3995 0d62 23       		.uleb128 0x23
 3996 0d63 B8070000 		.4byte	.LASF182
 3997 0d67 0C       		.byte	0xc
 3998 0d68 88       		.byte	0x88
 3999 0d69 00050000 		.4byte	0x500
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 88


 4000 0d6d 05       		.uleb128 0x5
 4001 0d6e 03       		.byte	0x3
 4002 0d6f 00000000 		.4byte	alarmValve
 4003 0d73 23       		.uleb128 0x23
 4004 0d74 D2050000 		.4byte	.LASF183
 4005 0d78 0C       		.byte	0xc
 4006 0d79 89       		.byte	0x89
 4007 0d7a 81000000 		.4byte	0x81
 4008 0d7e 05       		.uleb128 0x5
 4009 0d7f 03       		.byte	0x3
 4010 0d80 00000000 		.4byte	timeToValve
 4011 0d84 23       		.uleb128 0x23
 4012 0d85 4C090000 		.4byte	.LASF184
 4013 0d89 0C       		.byte	0xc
 4014 0d8a 8B       		.byte	0x8b
 4015 0d8b 00050000 		.4byte	0x500
 4016 0d8f 05       		.uleb128 0x5
 4017 0d90 03       		.byte	0x3
 4018 0d91 00000000 		.4byte	alarmAutosampler
 4019 0d95 23       		.uleb128 0x23
 4020 0d96 69000000 		.4byte	.LASF185
 4021 0d9a 0C       		.byte	0xc
 4022 0d9b 8C       		.byte	0x8c
 4023 0d9c 81000000 		.4byte	0x81
 4024 0da0 05       		.uleb128 0x5
 4025 0da1 03       		.byte	0x3
 4026 0da2 00000000 		.4byte	timeToAutosampler
 4027 0da6 07       		.uleb128 0x7
 4028 0da7 E3000000 		.4byte	0xe3
 4029 0dab B60D0000 		.4byte	0xdb6
 4030 0daf 08       		.uleb128 0x8
 4031 0db0 F1000000 		.4byte	0xf1
 4032 0db4 1D       		.byte	0x1d
 4033 0db5 00       		.byte	0
 4034 0db6 23       		.uleb128 0x23
 4035 0db7 10060000 		.4byte	.LASF186
 4036 0dbb 01       		.byte	0x1
 4037 0dbc 1D       		.byte	0x1d
 4038 0dbd A60D0000 		.4byte	0xda6
 4039 0dc1 05       		.uleb128 0x5
 4040 0dc2 03       		.byte	0x3
 4041 0dc3 00000000 		.4byte	Data_fileName
 4042 0dc7 23       		.uleb128 0x23
 4043 0dc8 E5030000 		.4byte	.LASF98
 4044 0dcc 01       		.byte	0x1
 4045 0dcd 1E       		.byte	0x1e
 4046 0dce 81000000 		.4byte	0x81
 4047 0dd2 05       		.uleb128 0x5
 4048 0dd3 03       		.byte	0x3
 4049 0dd4 00000000 		.4byte	try_counter
 4050 0dd8 00       		.byte	0
 4051              		.section	.debug_abbrev,"",%progbits
 4052              	.Ldebug_abbrev0:
 4053 0000 01       		.uleb128 0x1
 4054 0001 11       		.uleb128 0x11
 4055 0002 01       		.byte	0x1
 4056 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 89


 4057 0004 0E       		.uleb128 0xe
 4058 0005 13       		.uleb128 0x13
 4059 0006 0B       		.uleb128 0xb
 4060 0007 03       		.uleb128 0x3
 4061 0008 0E       		.uleb128 0xe
 4062 0009 1B       		.uleb128 0x1b
 4063 000a 0E       		.uleb128 0xe
 4064 000b 55       		.uleb128 0x55
 4065 000c 17       		.uleb128 0x17
 4066 000d 11       		.uleb128 0x11
 4067 000e 01       		.uleb128 0x1
 4068 000f 10       		.uleb128 0x10
 4069 0010 17       		.uleb128 0x17
 4070 0011 00       		.byte	0
 4071 0012 00       		.byte	0
 4072 0013 02       		.uleb128 0x2
 4073 0014 24       		.uleb128 0x24
 4074 0015 00       		.byte	0
 4075 0016 0B       		.uleb128 0xb
 4076 0017 0B       		.uleb128 0xb
 4077 0018 3E       		.uleb128 0x3e
 4078 0019 0B       		.uleb128 0xb
 4079 001a 03       		.uleb128 0x3
 4080 001b 0E       		.uleb128 0xe
 4081 001c 00       		.byte	0
 4082 001d 00       		.byte	0
 4083 001e 03       		.uleb128 0x3
 4084 001f 16       		.uleb128 0x16
 4085 0020 00       		.byte	0
 4086 0021 03       		.uleb128 0x3
 4087 0022 0E       		.uleb128 0xe
 4088 0023 3A       		.uleb128 0x3a
 4089 0024 0B       		.uleb128 0xb
 4090 0025 3B       		.uleb128 0x3b
 4091 0026 0B       		.uleb128 0xb
 4092 0027 49       		.uleb128 0x49
 4093 0028 13       		.uleb128 0x13
 4094 0029 00       		.byte	0
 4095 002a 00       		.byte	0
 4096 002b 04       		.uleb128 0x4
 4097 002c 24       		.uleb128 0x24
 4098 002d 00       		.byte	0
 4099 002e 0B       		.uleb128 0xb
 4100 002f 0B       		.uleb128 0xb
 4101 0030 3E       		.uleb128 0x3e
 4102 0031 0B       		.uleb128 0xb
 4103 0032 03       		.uleb128 0x3
 4104 0033 08       		.uleb128 0x8
 4105 0034 00       		.byte	0
 4106 0035 00       		.byte	0
 4107 0036 05       		.uleb128 0x5
 4108 0037 16       		.uleb128 0x16
 4109 0038 00       		.byte	0
 4110 0039 03       		.uleb128 0x3
 4111 003a 0E       		.uleb128 0xe
 4112 003b 3A       		.uleb128 0x3a
 4113 003c 0B       		.uleb128 0xb
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 90


 4114 003d 3B       		.uleb128 0x3b
 4115 003e 05       		.uleb128 0x5
 4116 003f 49       		.uleb128 0x49
 4117 0040 13       		.uleb128 0x13
 4118 0041 00       		.byte	0
 4119 0042 00       		.byte	0
 4120 0043 06       		.uleb128 0x6
 4121 0044 0F       		.uleb128 0xf
 4122 0045 00       		.byte	0
 4123 0046 0B       		.uleb128 0xb
 4124 0047 0B       		.uleb128 0xb
 4125 0048 49       		.uleb128 0x49
 4126 0049 13       		.uleb128 0x13
 4127 004a 00       		.byte	0
 4128 004b 00       		.byte	0
 4129 004c 07       		.uleb128 0x7
 4130 004d 01       		.uleb128 0x1
 4131 004e 01       		.byte	0x1
 4132 004f 49       		.uleb128 0x49
 4133 0050 13       		.uleb128 0x13
 4134 0051 01       		.uleb128 0x1
 4135 0052 13       		.uleb128 0x13
 4136 0053 00       		.byte	0
 4137 0054 00       		.byte	0
 4138 0055 08       		.uleb128 0x8
 4139 0056 21       		.uleb128 0x21
 4140 0057 00       		.byte	0
 4141 0058 49       		.uleb128 0x49
 4142 0059 13       		.uleb128 0x13
 4143 005a 2F       		.uleb128 0x2f
 4144 005b 0B       		.uleb128 0xb
 4145 005c 00       		.byte	0
 4146 005d 00       		.byte	0
 4147 005e 09       		.uleb128 0x9
 4148 005f 13       		.uleb128 0x13
 4149 0060 01       		.byte	0x1
 4150 0061 0B       		.uleb128 0xb
 4151 0062 0B       		.uleb128 0xb
 4152 0063 3A       		.uleb128 0x3a
 4153 0064 0B       		.uleb128 0xb
 4154 0065 3B       		.uleb128 0x3b
 4155 0066 0B       		.uleb128 0xb
 4156 0067 01       		.uleb128 0x1
 4157 0068 13       		.uleb128 0x13
 4158 0069 00       		.byte	0
 4159 006a 00       		.byte	0
 4160 006b 0A       		.uleb128 0xa
 4161 006c 0D       		.uleb128 0xd
 4162 006d 00       		.byte	0
 4163 006e 03       		.uleb128 0x3
 4164 006f 08       		.uleb128 0x8
 4165 0070 3A       		.uleb128 0x3a
 4166 0071 0B       		.uleb128 0xb
 4167 0072 3B       		.uleb128 0x3b
 4168 0073 0B       		.uleb128 0xb
 4169 0074 49       		.uleb128 0x49
 4170 0075 13       		.uleb128 0x13
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 91


 4171 0076 38       		.uleb128 0x38
 4172 0077 0B       		.uleb128 0xb
 4173 0078 00       		.byte	0
 4174 0079 00       		.byte	0
 4175 007a 0B       		.uleb128 0xb
 4176 007b 0D       		.uleb128 0xd
 4177 007c 00       		.byte	0
 4178 007d 03       		.uleb128 0x3
 4179 007e 0E       		.uleb128 0xe
 4180 007f 3A       		.uleb128 0x3a
 4181 0080 0B       		.uleb128 0xb
 4182 0081 3B       		.uleb128 0x3b
 4183 0082 0B       		.uleb128 0xb
 4184 0083 49       		.uleb128 0x49
 4185 0084 13       		.uleb128 0x13
 4186 0085 38       		.uleb128 0x38
 4187 0086 0B       		.uleb128 0xb
 4188 0087 00       		.byte	0
 4189 0088 00       		.byte	0
 4190 0089 0C       		.uleb128 0xc
 4191 008a 35       		.uleb128 0x35
 4192 008b 00       		.byte	0
 4193 008c 49       		.uleb128 0x49
 4194 008d 13       		.uleb128 0x13
 4195 008e 00       		.byte	0
 4196 008f 00       		.byte	0
 4197 0090 0D       		.uleb128 0xd
 4198 0091 13       		.uleb128 0x13
 4199 0092 01       		.byte	0x1
 4200 0093 0B       		.uleb128 0xb
 4201 0094 05       		.uleb128 0x5
 4202 0095 3A       		.uleb128 0x3a
 4203 0096 0B       		.uleb128 0xb
 4204 0097 3B       		.uleb128 0x3b
 4205 0098 0B       		.uleb128 0xb
 4206 0099 01       		.uleb128 0x1
 4207 009a 13       		.uleb128 0x13
 4208 009b 00       		.byte	0
 4209 009c 00       		.byte	0
 4210 009d 0E       		.uleb128 0xe
 4211 009e 13       		.uleb128 0x13
 4212 009f 01       		.byte	0x1
 4213 00a0 03       		.uleb128 0x3
 4214 00a1 08       		.uleb128 0x8
 4215 00a2 0B       		.uleb128 0xb
 4216 00a3 0B       		.uleb128 0xb
 4217 00a4 3A       		.uleb128 0x3a
 4218 00a5 0B       		.uleb128 0xb
 4219 00a6 3B       		.uleb128 0x3b
 4220 00a7 0B       		.uleb128 0xb
 4221 00a8 01       		.uleb128 0x1
 4222 00a9 13       		.uleb128 0x13
 4223 00aa 00       		.byte	0
 4224 00ab 00       		.byte	0
 4225 00ac 0F       		.uleb128 0xf
 4226 00ad 2E       		.uleb128 0x2e
 4227 00ae 00       		.byte	0
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 92


 4228 00af 3F       		.uleb128 0x3f
 4229 00b0 19       		.uleb128 0x19
 4230 00b1 03       		.uleb128 0x3
 4231 00b2 0E       		.uleb128 0xe
 4232 00b3 3A       		.uleb128 0x3a
 4233 00b4 0B       		.uleb128 0xb
 4234 00b5 3B       		.uleb128 0x3b
 4235 00b6 0B       		.uleb128 0xb
 4236 00b7 27       		.uleb128 0x27
 4237 00b8 19       		.uleb128 0x19
 4238 00b9 11       		.uleb128 0x11
 4239 00ba 01       		.uleb128 0x1
 4240 00bb 12       		.uleb128 0x12
 4241 00bc 06       		.uleb128 0x6
 4242 00bd 40       		.uleb128 0x40
 4243 00be 18       		.uleb128 0x18
 4244 00bf 9642     		.uleb128 0x2116
 4245 00c1 19       		.uleb128 0x19
 4246 00c2 00       		.byte	0
 4247 00c3 00       		.byte	0
 4248 00c4 10       		.uleb128 0x10
 4249 00c5 2E       		.uleb128 0x2e
 4250 00c6 01       		.byte	0x1
 4251 00c7 3F       		.uleb128 0x3f
 4252 00c8 19       		.uleb128 0x19
 4253 00c9 03       		.uleb128 0x3
 4254 00ca 0E       		.uleb128 0xe
 4255 00cb 3A       		.uleb128 0x3a
 4256 00cc 0B       		.uleb128 0xb
 4257 00cd 3B       		.uleb128 0x3b
 4258 00ce 0B       		.uleb128 0xb
 4259 00cf 11       		.uleb128 0x11
 4260 00d0 01       		.uleb128 0x1
 4261 00d1 12       		.uleb128 0x12
 4262 00d2 06       		.uleb128 0x6
 4263 00d3 40       		.uleb128 0x40
 4264 00d4 18       		.uleb128 0x18
 4265 00d5 9642     		.uleb128 0x2116
 4266 00d7 19       		.uleb128 0x19
 4267 00d8 01       		.uleb128 0x1
 4268 00d9 13       		.uleb128 0x13
 4269 00da 00       		.byte	0
 4270 00db 00       		.byte	0
 4271 00dc 11       		.uleb128 0x11
 4272 00dd 34       		.uleb128 0x34
 4273 00de 00       		.byte	0
 4274 00df 03       		.uleb128 0x3
 4275 00e0 0E       		.uleb128 0xe
 4276 00e1 3A       		.uleb128 0x3a
 4277 00e2 0B       		.uleb128 0xb
 4278 00e3 3B       		.uleb128 0x3b
 4279 00e4 0B       		.uleb128 0xb
 4280 00e5 49       		.uleb128 0x49
 4281 00e6 13       		.uleb128 0x13
 4282 00e7 02       		.uleb128 0x2
 4283 00e8 18       		.uleb128 0x18
 4284 00e9 00       		.byte	0
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 93


 4285 00ea 00       		.byte	0
 4286 00eb 12       		.uleb128 0x12
 4287 00ec 2E       		.uleb128 0x2e
 4288 00ed 01       		.byte	0x1
 4289 00ee 3F       		.uleb128 0x3f
 4290 00ef 19       		.uleb128 0x19
 4291 00f0 03       		.uleb128 0x3
 4292 00f1 0E       		.uleb128 0xe
 4293 00f2 3A       		.uleb128 0x3a
 4294 00f3 0B       		.uleb128 0xb
 4295 00f4 3B       		.uleb128 0x3b
 4296 00f5 0B       		.uleb128 0xb
 4297 00f6 49       		.uleb128 0x49
 4298 00f7 13       		.uleb128 0x13
 4299 00f8 11       		.uleb128 0x11
 4300 00f9 01       		.uleb128 0x1
 4301 00fa 12       		.uleb128 0x12
 4302 00fb 06       		.uleb128 0x6
 4303 00fc 40       		.uleb128 0x40
 4304 00fd 18       		.uleb128 0x18
 4305 00fe 9642     		.uleb128 0x2116
 4306 0100 19       		.uleb128 0x19
 4307 0101 01       		.uleb128 0x1
 4308 0102 13       		.uleb128 0x13
 4309 0103 00       		.byte	0
 4310 0104 00       		.byte	0
 4311 0105 13       		.uleb128 0x13
 4312 0106 2E       		.uleb128 0x2e
 4313 0107 00       		.byte	0
 4314 0108 3F       		.uleb128 0x3f
 4315 0109 19       		.uleb128 0x19
 4316 010a 03       		.uleb128 0x3
 4317 010b 0E       		.uleb128 0xe
 4318 010c 3A       		.uleb128 0x3a
 4319 010d 0B       		.uleb128 0xb
 4320 010e 3B       		.uleb128 0x3b
 4321 010f 0B       		.uleb128 0xb
 4322 0110 11       		.uleb128 0x11
 4323 0111 01       		.uleb128 0x1
 4324 0112 12       		.uleb128 0x12
 4325 0113 06       		.uleb128 0x6
 4326 0114 40       		.uleb128 0x40
 4327 0115 18       		.uleb128 0x18
 4328 0116 9642     		.uleb128 0x2116
 4329 0118 19       		.uleb128 0x19
 4330 0119 00       		.byte	0
 4331 011a 00       		.byte	0
 4332 011b 14       		.uleb128 0x14
 4333 011c 2E       		.uleb128 0x2e
 4334 011d 01       		.byte	0x1
 4335 011e 3F       		.uleb128 0x3f
 4336 011f 19       		.uleb128 0x19
 4337 0120 03       		.uleb128 0x3
 4338 0121 0E       		.uleb128 0xe
 4339 0122 3A       		.uleb128 0x3a
 4340 0123 0B       		.uleb128 0xb
 4341 0124 3B       		.uleb128 0x3b
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 94


 4342 0125 0B       		.uleb128 0xb
 4343 0126 27       		.uleb128 0x27
 4344 0127 19       		.uleb128 0x19
 4345 0128 11       		.uleb128 0x11
 4346 0129 01       		.uleb128 0x1
 4347 012a 12       		.uleb128 0x12
 4348 012b 06       		.uleb128 0x6
 4349 012c 40       		.uleb128 0x40
 4350 012d 18       		.uleb128 0x18
 4351 012e 9642     		.uleb128 0x2116
 4352 0130 19       		.uleb128 0x19
 4353 0131 01       		.uleb128 0x1
 4354 0132 13       		.uleb128 0x13
 4355 0133 00       		.byte	0
 4356 0134 00       		.byte	0
 4357 0135 15       		.uleb128 0x15
 4358 0136 05       		.uleb128 0x5
 4359 0137 00       		.byte	0
 4360 0138 03       		.uleb128 0x3
 4361 0139 0E       		.uleb128 0xe
 4362 013a 3A       		.uleb128 0x3a
 4363 013b 0B       		.uleb128 0xb
 4364 013c 3B       		.uleb128 0x3b
 4365 013d 0B       		.uleb128 0xb
 4366 013e 49       		.uleb128 0x49
 4367 013f 13       		.uleb128 0x13
 4368 0140 02       		.uleb128 0x2
 4369 0141 18       		.uleb128 0x18
 4370 0142 00       		.byte	0
 4371 0143 00       		.byte	0
 4372 0144 16       		.uleb128 0x16
 4373 0145 2E       		.uleb128 0x2e
 4374 0146 01       		.byte	0x1
 4375 0147 3F       		.uleb128 0x3f
 4376 0148 19       		.uleb128 0x19
 4377 0149 03       		.uleb128 0x3
 4378 014a 0E       		.uleb128 0xe
 4379 014b 3A       		.uleb128 0x3a
 4380 014c 0B       		.uleb128 0xb
 4381 014d 3B       		.uleb128 0x3b
 4382 014e 05       		.uleb128 0x5
 4383 014f 27       		.uleb128 0x27
 4384 0150 19       		.uleb128 0x19
 4385 0151 49       		.uleb128 0x49
 4386 0152 13       		.uleb128 0x13
 4387 0153 11       		.uleb128 0x11
 4388 0154 01       		.uleb128 0x1
 4389 0155 12       		.uleb128 0x12
 4390 0156 06       		.uleb128 0x6
 4391 0157 40       		.uleb128 0x40
 4392 0158 18       		.uleb128 0x18
 4393 0159 9642     		.uleb128 0x2116
 4394 015b 19       		.uleb128 0x19
 4395 015c 01       		.uleb128 0x1
 4396 015d 13       		.uleb128 0x13
 4397 015e 00       		.byte	0
 4398 015f 00       		.byte	0
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 95


 4399 0160 17       		.uleb128 0x17
 4400 0161 05       		.uleb128 0x5
 4401 0162 00       		.byte	0
 4402 0163 03       		.uleb128 0x3
 4403 0164 0E       		.uleb128 0xe
 4404 0165 3A       		.uleb128 0x3a
 4405 0166 0B       		.uleb128 0xb
 4406 0167 3B       		.uleb128 0x3b
 4407 0168 05       		.uleb128 0x5
 4408 0169 49       		.uleb128 0x49
 4409 016a 13       		.uleb128 0x13
 4410 016b 02       		.uleb128 0x2
 4411 016c 18       		.uleb128 0x18
 4412 016d 00       		.byte	0
 4413 016e 00       		.byte	0
 4414 016f 18       		.uleb128 0x18
 4415 0170 2E       		.uleb128 0x2e
 4416 0171 01       		.byte	0x1
 4417 0172 3F       		.uleb128 0x3f
 4418 0173 19       		.uleb128 0x19
 4419 0174 03       		.uleb128 0x3
 4420 0175 0E       		.uleb128 0xe
 4421 0176 3A       		.uleb128 0x3a
 4422 0177 0B       		.uleb128 0xb
 4423 0178 3B       		.uleb128 0x3b
 4424 0179 05       		.uleb128 0x5
 4425 017a 27       		.uleb128 0x27
 4426 017b 19       		.uleb128 0x19
 4427 017c 11       		.uleb128 0x11
 4428 017d 01       		.uleb128 0x1
 4429 017e 12       		.uleb128 0x12
 4430 017f 06       		.uleb128 0x6
 4431 0180 40       		.uleb128 0x40
 4432 0181 18       		.uleb128 0x18
 4433 0182 9742     		.uleb128 0x2117
 4434 0184 19       		.uleb128 0x19
 4435 0185 01       		.uleb128 0x1
 4436 0186 13       		.uleb128 0x13
 4437 0187 00       		.byte	0
 4438 0188 00       		.byte	0
 4439 0189 19       		.uleb128 0x19
 4440 018a 2E       		.uleb128 0x2e
 4441 018b 01       		.byte	0x1
 4442 018c 3F       		.uleb128 0x3f
 4443 018d 19       		.uleb128 0x19
 4444 018e 03       		.uleb128 0x3
 4445 018f 0E       		.uleb128 0xe
 4446 0190 3A       		.uleb128 0x3a
 4447 0191 0B       		.uleb128 0xb
 4448 0192 3B       		.uleb128 0x3b
 4449 0193 05       		.uleb128 0x5
 4450 0194 27       		.uleb128 0x27
 4451 0195 19       		.uleb128 0x19
 4452 0196 49       		.uleb128 0x49
 4453 0197 13       		.uleb128 0x13
 4454 0198 11       		.uleb128 0x11
 4455 0199 01       		.uleb128 0x1
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 96


 4456 019a 12       		.uleb128 0x12
 4457 019b 06       		.uleb128 0x6
 4458 019c 40       		.uleb128 0x40
 4459 019d 18       		.uleb128 0x18
 4460 019e 9742     		.uleb128 0x2117
 4461 01a0 19       		.uleb128 0x19
 4462 01a1 01       		.uleb128 0x1
 4463 01a2 13       		.uleb128 0x13
 4464 01a3 00       		.byte	0
 4465 01a4 00       		.byte	0
 4466 01a5 1A       		.uleb128 0x1a
 4467 01a6 34       		.uleb128 0x34
 4468 01a7 00       		.byte	0
 4469 01a8 03       		.uleb128 0x3
 4470 01a9 0E       		.uleb128 0xe
 4471 01aa 3A       		.uleb128 0x3a
 4472 01ab 0B       		.uleb128 0xb
 4473 01ac 3B       		.uleb128 0x3b
 4474 01ad 05       		.uleb128 0x5
 4475 01ae 49       		.uleb128 0x49
 4476 01af 13       		.uleb128 0x13
 4477 01b0 02       		.uleb128 0x2
 4478 01b1 18       		.uleb128 0x18
 4479 01b2 00       		.byte	0
 4480 01b3 00       		.byte	0
 4481 01b4 1B       		.uleb128 0x1b
 4482 01b5 2E       		.uleb128 0x2e
 4483 01b6 01       		.byte	0x1
 4484 01b7 3F       		.uleb128 0x3f
 4485 01b8 19       		.uleb128 0x19
 4486 01b9 03       		.uleb128 0x3
 4487 01ba 0E       		.uleb128 0xe
 4488 01bb 3A       		.uleb128 0x3a
 4489 01bc 0B       		.uleb128 0xb
 4490 01bd 3B       		.uleb128 0x3b
 4491 01be 05       		.uleb128 0x5
 4492 01bf 11       		.uleb128 0x11
 4493 01c0 01       		.uleb128 0x1
 4494 01c1 12       		.uleb128 0x12
 4495 01c2 06       		.uleb128 0x6
 4496 01c3 40       		.uleb128 0x40
 4497 01c4 18       		.uleb128 0x18
 4498 01c5 9642     		.uleb128 0x2116
 4499 01c7 19       		.uleb128 0x19
 4500 01c8 01       		.uleb128 0x1
 4501 01c9 13       		.uleb128 0x13
 4502 01ca 00       		.byte	0
 4503 01cb 00       		.byte	0
 4504 01cc 1C       		.uleb128 0x1c
 4505 01cd 2E       		.uleb128 0x2e
 4506 01ce 00       		.byte	0
 4507 01cf 3F       		.uleb128 0x3f
 4508 01d0 19       		.uleb128 0x19
 4509 01d1 03       		.uleb128 0x3
 4510 01d2 0E       		.uleb128 0xe
 4511 01d3 3A       		.uleb128 0x3a
 4512 01d4 0B       		.uleb128 0xb
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 97


 4513 01d5 3B       		.uleb128 0x3b
 4514 01d6 05       		.uleb128 0x5
 4515 01d7 27       		.uleb128 0x27
 4516 01d8 19       		.uleb128 0x19
 4517 01d9 49       		.uleb128 0x49
 4518 01da 13       		.uleb128 0x13
 4519 01db 11       		.uleb128 0x11
 4520 01dc 01       		.uleb128 0x1
 4521 01dd 12       		.uleb128 0x12
 4522 01de 06       		.uleb128 0x6
 4523 01df 40       		.uleb128 0x40
 4524 01e0 18       		.uleb128 0x18
 4525 01e1 9642     		.uleb128 0x2116
 4526 01e3 19       		.uleb128 0x19
 4527 01e4 00       		.byte	0
 4528 01e5 00       		.byte	0
 4529 01e6 1D       		.uleb128 0x1d
 4530 01e7 2E       		.uleb128 0x2e
 4531 01e8 01       		.byte	0x1
 4532 01e9 3F       		.uleb128 0x3f
 4533 01ea 19       		.uleb128 0x19
 4534 01eb 03       		.uleb128 0x3
 4535 01ec 0E       		.uleb128 0xe
 4536 01ed 3A       		.uleb128 0x3a
 4537 01ee 0B       		.uleb128 0xb
 4538 01ef 3B       		.uleb128 0x3b
 4539 01f0 05       		.uleb128 0x5
 4540 01f1 49       		.uleb128 0x49
 4541 01f2 13       		.uleb128 0x13
 4542 01f3 11       		.uleb128 0x11
 4543 01f4 01       		.uleb128 0x1
 4544 01f5 12       		.uleb128 0x12
 4545 01f6 06       		.uleb128 0x6
 4546 01f7 40       		.uleb128 0x40
 4547 01f8 18       		.uleb128 0x18
 4548 01f9 9642     		.uleb128 0x2116
 4549 01fb 19       		.uleb128 0x19
 4550 01fc 01       		.uleb128 0x1
 4551 01fd 13       		.uleb128 0x13
 4552 01fe 00       		.byte	0
 4553 01ff 00       		.byte	0
 4554 0200 1E       		.uleb128 0x1e
 4555 0201 0B       		.uleb128 0xb
 4556 0202 01       		.byte	0x1
 4557 0203 11       		.uleb128 0x11
 4558 0204 01       		.uleb128 0x1
 4559 0205 12       		.uleb128 0x12
 4560 0206 06       		.uleb128 0x6
 4561 0207 00       		.byte	0
 4562 0208 00       		.byte	0
 4563 0209 1F       		.uleb128 0x1f
 4564 020a 0B       		.uleb128 0xb
 4565 020b 01       		.byte	0x1
 4566 020c 11       		.uleb128 0x11
 4567 020d 01       		.uleb128 0x1
 4568 020e 12       		.uleb128 0x12
 4569 020f 06       		.uleb128 0x6
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 98


 4570 0210 01       		.uleb128 0x1
 4571 0211 13       		.uleb128 0x13
 4572 0212 00       		.byte	0
 4573 0213 00       		.byte	0
 4574 0214 20       		.uleb128 0x20
 4575 0215 21       		.uleb128 0x21
 4576 0216 00       		.byte	0
 4577 0217 49       		.uleb128 0x49
 4578 0218 13       		.uleb128 0x13
 4579 0219 2F       		.uleb128 0x2f
 4580 021a 05       		.uleb128 0x5
 4581 021b 00       		.byte	0
 4582 021c 00       		.byte	0
 4583 021d 21       		.uleb128 0x21
 4584 021e 34       		.uleb128 0x34
 4585 021f 00       		.byte	0
 4586 0220 03       		.uleb128 0x3
 4587 0221 08       		.uleb128 0x8
 4588 0222 3A       		.uleb128 0x3a
 4589 0223 0B       		.uleb128 0xb
 4590 0224 3B       		.uleb128 0x3b
 4591 0225 05       		.uleb128 0x5
 4592 0226 49       		.uleb128 0x49
 4593 0227 13       		.uleb128 0x13
 4594 0228 02       		.uleb128 0x2
 4595 0229 18       		.uleb128 0x18
 4596 022a 00       		.byte	0
 4597 022b 00       		.byte	0
 4598 022c 22       		.uleb128 0x22
 4599 022d 34       		.uleb128 0x34
 4600 022e 00       		.byte	0
 4601 022f 03       		.uleb128 0x3
 4602 0230 0E       		.uleb128 0xe
 4603 0231 3A       		.uleb128 0x3a
 4604 0232 0B       		.uleb128 0xb
 4605 0233 3B       		.uleb128 0x3b
 4606 0234 05       		.uleb128 0x5
 4607 0235 49       		.uleb128 0x49
 4608 0236 13       		.uleb128 0x13
 4609 0237 3F       		.uleb128 0x3f
 4610 0238 19       		.uleb128 0x19
 4611 0239 3C       		.uleb128 0x3c
 4612 023a 19       		.uleb128 0x19
 4613 023b 00       		.byte	0
 4614 023c 00       		.byte	0
 4615 023d 23       		.uleb128 0x23
 4616 023e 34       		.uleb128 0x34
 4617 023f 00       		.byte	0
 4618 0240 03       		.uleb128 0x3
 4619 0241 0E       		.uleb128 0xe
 4620 0242 3A       		.uleb128 0x3a
 4621 0243 0B       		.uleb128 0xb
 4622 0244 3B       		.uleb128 0x3b
 4623 0245 0B       		.uleb128 0xb
 4624 0246 49       		.uleb128 0x49
 4625 0247 13       		.uleb128 0x13
 4626 0248 3F       		.uleb128 0x3f
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 99


 4627 0249 19       		.uleb128 0x19
 4628 024a 02       		.uleb128 0x2
 4629 024b 18       		.uleb128 0x18
 4630 024c 00       		.byte	0
 4631 024d 00       		.byte	0
 4632 024e 24       		.uleb128 0x24
 4633 024f 34       		.uleb128 0x34
 4634 0250 00       		.byte	0
 4635 0251 03       		.uleb128 0x3
 4636 0252 08       		.uleb128 0x8
 4637 0253 3A       		.uleb128 0x3a
 4638 0254 0B       		.uleb128 0xb
 4639 0255 3B       		.uleb128 0x3b
 4640 0256 0B       		.uleb128 0xb
 4641 0257 49       		.uleb128 0x49
 4642 0258 13       		.uleb128 0x13
 4643 0259 3F       		.uleb128 0x3f
 4644 025a 19       		.uleb128 0x19
 4645 025b 02       		.uleb128 0x2
 4646 025c 18       		.uleb128 0x18
 4647 025d 00       		.byte	0
 4648 025e 00       		.byte	0
 4649 025f 00       		.byte	0
 4650              		.section	.debug_aranges,"",%progbits
 4651 0000 8C000000 		.4byte	0x8c
 4652 0004 0200     		.2byte	0x2
 4653 0006 00000000 		.4byte	.Ldebug_info0
 4654 000a 04       		.byte	0x4
 4655 000b 00       		.byte	0
 4656 000c 0000     		.2byte	0
 4657 000e 0000     		.2byte	0
 4658 0010 00000000 		.4byte	.LFB64
 4659 0014 0C000000 		.4byte	.LFE64-.LFB64
 4660 0018 00000000 		.4byte	.LFB65
 4661 001c B0010000 		.4byte	.LFE65-.LFB65
 4662 0020 00000000 		.4byte	.LFB66
 4663 0024 F4000000 		.4byte	.LFE66-.LFB66
 4664 0028 00000000 		.4byte	.LFB67
 4665 002c 2A000000 		.4byte	.LFE67-.LFB67
 4666 0030 00000000 		.4byte	.LFB68
 4667 0034 C8000000 		.4byte	.LFE68-.LFB68
 4668 0038 00000000 		.4byte	.LFB69
 4669 003c 48000000 		.4byte	.LFE69-.LFB69
 4670 0040 00000000 		.4byte	.LFB70
 4671 0044 1E000000 		.4byte	.LFE70-.LFB70
 4672 0048 00000000 		.4byte	.LFB71
 4673 004c 46000000 		.4byte	.LFE71-.LFB71
 4674 0050 00000000 		.4byte	.LFB72
 4675 0054 04010000 		.4byte	.LFE72-.LFB72
 4676 0058 00000000 		.4byte	.LFB73
 4677 005c 1E000000 		.4byte	.LFE73-.LFB73
 4678 0060 00000000 		.4byte	.LFB74
 4679 0064 5C040000 		.4byte	.LFE74-.LFB74
 4680 0068 00000000 		.4byte	.LFB75
 4681 006c 44000000 		.4byte	.LFE75-.LFB75
 4682 0070 00000000 		.4byte	.LFB76
 4683 0074 A4020000 		.4byte	.LFE76-.LFB76
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 100


 4684 0078 00000000 		.4byte	.LFB77
 4685 007c 74000000 		.4byte	.LFE77-.LFB77
 4686 0080 00000000 		.4byte	.LFB78
 4687 0084 38010000 		.4byte	.LFE78-.LFB78
 4688 0088 00000000 		.4byte	0
 4689 008c 00000000 		.4byte	0
 4690              		.section	.debug_ranges,"",%progbits
 4691              	.Ldebug_ranges0:
 4692 0000 00000000 		.4byte	.LFB64
 4693 0004 0C000000 		.4byte	.LFE64
 4694 0008 00000000 		.4byte	.LFB65
 4695 000c B0010000 		.4byte	.LFE65
 4696 0010 00000000 		.4byte	.LFB66
 4697 0014 F4000000 		.4byte	.LFE66
 4698 0018 00000000 		.4byte	.LFB67
 4699 001c 2A000000 		.4byte	.LFE67
 4700 0020 00000000 		.4byte	.LFB68
 4701 0024 C8000000 		.4byte	.LFE68
 4702 0028 00000000 		.4byte	.LFB69
 4703 002c 48000000 		.4byte	.LFE69
 4704 0030 00000000 		.4byte	.LFB70
 4705 0034 1E000000 		.4byte	.LFE70
 4706 0038 00000000 		.4byte	.LFB71
 4707 003c 46000000 		.4byte	.LFE71
 4708 0040 00000000 		.4byte	.LFB72
 4709 0044 04010000 		.4byte	.LFE72
 4710 0048 00000000 		.4byte	.LFB73
 4711 004c 1E000000 		.4byte	.LFE73
 4712 0050 00000000 		.4byte	.LFB74
 4713 0054 5C040000 		.4byte	.LFE74
 4714 0058 00000000 		.4byte	.LFB75
 4715 005c 44000000 		.4byte	.LFE75
 4716 0060 00000000 		.4byte	.LFB76
 4717 0064 A4020000 		.4byte	.LFE76
 4718 0068 00000000 		.4byte	.LFB77
 4719 006c 74000000 		.4byte	.LFE77
 4720 0070 00000000 		.4byte	.LFB78
 4721 0074 38010000 		.4byte	.LFE78
 4722 0078 00000000 		.4byte	0
 4723 007c 00000000 		.4byte	0
 4724              		.section	.debug_line,"",%progbits
 4725              	.Ldebug_line0:
 4726 0000 88040000 		.section	.debug_str,"MS",%progbits,1
 4726      02004402 
 4726      00000201 
 4726      FB0E0D00 
 4726      01010101 
 4727              	.LASF115:
 4728 0000 745F6D6F 		.ascii	"t_modem\000"
 4728      64656D00 
 4729              	.LASF12:
 4730 0008 75696E74 		.ascii	"uint16\000"
 4730      313600
 4731              	.LASF47:
 4732 000f 746D5F68 		.ascii	"tm_hour\000"
 4732      6F757200 
 4733              	.LASF84:
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 101


 4734 0017 6E756D5F 		.ascii	"num_invalid_readings\000"
 4734      696E7661 
 4734      6C69645F 
 4734      72656164 
 4734      696E6773 
 4735              	.LASF148:
 4736 002c 62756666 		.ascii	"buffer_overflow\000"
 4736      65725F6F 
 4736      76657266 
 4736      6C6F7700 
 4737              	.LASF146:
 4738 003c 66696C65 		.ascii	"fileName\000"
 4738      4E616D65 
 4738      00
 4739              	.LASF0:
 4740 0045 7369676E 		.ascii	"signed char\000"
 4740      65642063 
 4740      68617200 
 4741              	.LASF89:
 4742 0051 636F756E 		.ascii	"countDownResetCondition\000"
 4742      74446F77 
 4742      6E526573 
 4742      6574436F 
 4742      6E646974 
 4743              	.LASF185:
 4744 0069 74696D65 		.ascii	"timeToAutosampler\000"
 4744      546F4175 
 4744      746F7361 
 4744      6D706C65 
 4744      7200
 4745              	.LASF161:
 4746 007b 76616C76 		.ascii	"valve_type\000"
 4746      655F7479 
 4746      706500
 4747              	.LASF190:
 4748 0086 57616B65 		.ascii	"Wakeup_ISR\000"
 4748      75705F49 
 4748      535200
 4749              	.LASF187:
 4750 0091 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4750      43313120 
 4750      352E342E 
 4750      31203230 
 4750      31363036 
 4751 00c4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4751      20726576 
 4751      6973696F 
 4751      6E203233 
 4751      37373135 
 4752 00f7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4752      66756E63 
 4752      74696F6E 
 4752      2D736563 
 4752      74696F6E 
 4753              	.LASF113:
 4754 011f 745F7072 		.ascii	"t_pressure\000"
 4754      65737375 
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 102


 4754      726500
 4755              	.LASF27:
 4756 012a 4D6F6E74 		.ascii	"Month\000"
 4756      6800
 4757              	.LASF7:
 4758 0130 6C6F6E67 		.ascii	"long long unsigned int\000"
 4758      206C6F6E 
 4758      6720756E 
 4758      7369676E 
 4758      65642069 
 4759              	.LASF23:
 4760 0147 486F7572 		.ascii	"Hour\000"
 4760      00
 4761              	.LASF154:
 4762 014c 6D6F6465 		.ascii	"modem_stats\000"
 4762      6D5F7374 
 4762      61747300 
 4763              	.LASF152:
 4764 0158 6D6F6465 		.ascii	"modem_state\000"
 4764      6D5F7374 
 4764      61746500 
 4765              	.LASF171:
 4766 0164 616C6172 		.ascii	"alarmMeasure\000"
 4766      6D4D6561 
 4766      73757265 
 4766      00
 4767              	.LASF147:
 4768 0171 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4768      52784275 
 4768      66666572 
 4768      00
 4769              	.LASF111:
 4770 017e 745F6C65 		.ascii	"t_level_sensor\000"
 4770      76656C5F 
 4770      73656E73 
 4770      6F7200
 4771              	.LASF164:
 4772 018d 6175746F 		.ascii	"autosampler_enabled\000"
 4772      73616D70 
 4772      6C65725F 
 4772      656E6162 
 4772      6C656400 
 4773              	.LASF6:
 4774 01a1 6C6F6E67 		.ascii	"long long int\000"
 4774      206C6F6E 
 4774      6720696E 
 4774      7400
 4775              	.LASF124:
 4776 01af 7061636B 		.ascii	"packets\000"
 4776      65747300 
 4777              	.LASF63:
 4778 01b7 65636E6F 		.ascii	"ecno\000"
 4778      00
 4779              	.LASF172:
 4780 01bc 74696D65 		.ascii	"timeToMeasure\000"
 4780      546F4D65 
 4780      61737572 
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 103


 4780      6500
 4781              	.LASF66:
 4782 01ca 74696D65 		.ascii	"time_to_network_connect\000"
 4782      5F746F5F 
 4782      6E657477 
 4782      6F726B5F 
 4782      636F6E6E 
 4783              	.LASF174:
 4784 01e2 74696D65 		.ascii	"timeToSync\000"
 4784      546F5379 
 4784      6E6300
 4785              	.LASF35:
 4786 01ed 766F6C74 		.ascii	"voltage_solar\000"
 4786      6167655F 
 4786      736F6C61 
 4786      7200
 4787              	.LASF36:
 4788 01fb 766F6C74 		.ascii	"voltage_charge_current\000"
 4788      6167655F 
 4788      63686172 
 4788      67655F63 
 4788      75727265 
 4789              	.LASF145:
 4790 0212 75706772 		.ascii	"upgrade_status\000"
 4790      6164655F 
 4790      73746174 
 4790      757300
 4791              	.LASF160:
 4792 0221 76616C76 		.ascii	"valve_diameter\000"
 4792      655F6469 
 4792      616D6574 
 4792      657200
 4793              	.LASF127:
 4794 0230 635F6461 		.ascii	"c_data_count_sent\000"
 4794      74615F63 
 4794      6F756E74 
 4794      5F73656E 
 4794      7400
 4795              	.LASF60:
 4796 0242 6D6F6465 		.ascii	"modem_info_t\000"
 4796      6D5F696E 
 4796      666F5F74 
 4796      00
 4797              	.LASF180:
 4798 024f 616C6172 		.ascii	"alarmDownstreamLevelSensor\000"
 4798      6D446F77 
 4798      6E737472 
 4798      65616D4C 
 4798      6576656C 
 4799              	.LASF61:
 4800 026a 72786C65 		.ascii	"rxlev\000"
 4800      7600
 4801              	.LASF4:
 4802 0270 6C6F6E67 		.ascii	"long int\000"
 4802      20696E74 
 4802      00
 4803              	.LASF67:
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 104


 4804 0279 74696D65 		.ascii	"time_to_acquire_ip\000"
 4804      5F746F5F 
 4804      61637175 
 4804      6972655F 
 4804      697000
 4805              	.LASF90:
 4806 028c 616C6172 		.ascii	"alarm\000"
 4806      6D00
 4807              	.LASF41:
 4808 0292 70726573 		.ascii	"pressure_voltage_off\000"
 4808      73757265 
 4808      5F766F6C 
 4808      74616765 
 4808      5F6F6666 
 4809              	.LASF11:
 4810 02a7 75696E74 		.ascii	"uint8\000"
 4810      3800
 4811              	.LASF119:
 4812 02ad 635F7472 		.ascii	"c_try_counter\000"
 4812      795F636F 
 4812      756E7465 
 4812      7200
 4813              	.LASF130:
 4814 02bb 73656E64 		.ascii	"send_time\000"
 4814      5F74696D 
 4814      6500
 4815              	.LASF177:
 4816 02c5 74696D65 		.ascii	"timeToAppLED\000"
 4816      546F4170 
 4816      704C4544 
 4816      00
 4817              	.LASF16:
 4818 02d2 696E7433 		.ascii	"int32\000"
 4818      3200
 4819              	.LASF69:
 4820 02d8 6E6F6465 		.ascii	"node_type\000"
 4820      5F747970 
 4820      6500
 4821              	.LASF116:
 4822 02e2 73796E63 		.ascii	"syncData\000"
 4822      44617461 
 4822      00
 4823              	.LASF125:
 4824 02eb 6E657477 		.ascii	"network_time\000"
 4824      6F726B5F 
 4824      74696D65 
 4824      00
 4825              	.LASF13:
 4826 02f8 75696E74 		.ascii	"uint32\000"
 4826      333200
 4827              	.LASF58:
 4828 02ff 6D6F6465 		.ascii	"model_id\000"
 4828      6C5F6964 
 4828      00
 4829              	.LASF81:
 4830 0308 616C6C5F 		.ascii	"all_level_readings\000"
 4830      6C657665 
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 105


 4830      6C5F7265 
 4830      6164696E 
 4830      677300
 4831              	.LASF86:
 4832 031b 636F756E 		.ascii	"countDownValue\000"
 4832      74446F77 
 4832      6E56616C 
 4832      756500
 4833              	.LASF141:
 4834 032a 75706772 		.ascii	"upgraded\000"
 4834      61646564 
 4834      00
 4835              	.LASF49:
 4836 0333 746D5F6D 		.ascii	"tm_mon\000"
 4836      6F6E00
 4837              	.LASF73:
 4838 033a 64656275 		.ascii	"debug_level\000"
 4838      675F6C65 
 4838      76656C00 
 4839              	.LASF143:
 4840 0346 706F7274 		.ascii	"port\000"
 4840      00
 4841              	.LASF54:
 4842 034b 76616C75 		.ascii	"value\000"
 4842      6500
 4843              	.LASF142:
 4844 0351 686F7374 		.ascii	"host\000"
 4844      00
 4845              	.LASF50:
 4846 0356 746D5F79 		.ascii	"tm_year\000"
 4846      65617200 
 4847              	.LASF173:
 4848 035e 616C6172 		.ascii	"alarmSync\000"
 4848      6D53796E 
 4848      6300
 4849              	.LASF40:
 4850 0368 70726573 		.ascii	"pressure_voltage_on\000"
 4850      73757265 
 4850      5F766F6C 
 4850      74616765 
 4850      5F6F6E00 
 4851              	.LASF156:
 4852 037c 4170705F 		.ascii	"App_LED_enabled\000"
 4852      4C45445F 
 4852      656E6162 
 4852      6C656400 
 4853              	.LASF139:
 4854 038c 73657454 		.ascii	"setTime\000"
 4854      696D6500 
 4855              	.LASF56:
 4856 0394 6B65795F 		.ascii	"key_value_t\000"
 4856      76616C75 
 4856      655F7400 
 4857              	.LASF101:
 4858 03a0 41796F49 		.ascii	"AyoItsTime\000"
 4858      74735469 
 4858      6D6500
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 106


 4859              	.LASF83:
 4860 03ab 6E756D5F 		.ascii	"num_valid_readings\000"
 4860      76616C69 
 4860      645F7265 
 4860      6164696E 
 4860      677300
 4861              	.LASF129:
 4862 03be 68747470 		.ascii	"http_chunk\000"
 4862      5F636875 
 4862      6E6B00
 4863              	.LASF136:
 4864 03c9 6D5F766F 		.ascii	"m_voltage\000"
 4864      6C746167 
 4864      6500
 4865              	.LASF5:
 4866 03d3 6C6F6E67 		.ascii	"long unsigned int\000"
 4866      20756E73 
 4866      69676E65 
 4866      6420696E 
 4866      7400
 4867              	.LASF98:
 4868 03e5 7472795F 		.ascii	"try_counter\000"
 4868      636F756E 
 4868      74657200 
 4869              	.LASF120:
 4870 03f1 64617461 		.ascii	"data_count_desired\000"
 4870      5F636F75 
 4870      6E745F64 
 4870      65736972 
 4870      656400
 4871              	.LASF34:
 4872 0404 766F6C74 		.ascii	"voltage_battery\000"
 4872      6167655F 
 4872      62617474 
 4872      65727900 
 4873              	.LASF25:
 4874 0414 4461794F 		.ascii	"DayOfMonth\000"
 4874      664D6F6E 
 4874      746800
 4875              	.LASF133:
 4876 041f 6D616B65 		.ascii	"makeMeasurements\000"
 4876      4D656173 
 4876      7572656D 
 4876      656E7473 
 4876      00
 4877              	.LASF151:
 4878 0430 64617461 		.ascii	"data\000"
 4878      00
 4879              	.LASF95:
 4880 0435 65705F70 		.ascii	"ep_port\000"
 4880      6F727400 
 4881              	.LASF53:
 4882 043d 746D5F69 		.ascii	"tm_isdst\000"
 4882      73647374 
 4882      00
 4883              	.LASF91:
 4884 0446 6D6F6465 		.ascii	"modem_info\000"
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 107


 4884      6D5F696E 
 4884      666F00
 4885              	.LASF94:
 4886 0451 65705F68 		.ascii	"ep_host\000"
 4886      6F737400 
 4887              	.LASF14:
 4888 0459 696E7438 		.ascii	"int8\000"
 4888      00
 4889              	.LASF100:
 4890 045e 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 4890      576F726B 
 4890      576F726B 
 4890      576F726B 
 4890      576F726B 
 4891              	.LASF121:
 4892 0477 635F6461 		.ascii	"c_data_count_desired\000"
 4892      74615F63 
 4892      6F756E74 
 4892      5F646573 
 4892      69726564 
 4893              	.LASF114:
 4894 048c 745F7364 		.ascii	"t_sd_card\000"
 4894      5F636172 
 4894      6400
 4895              	.LASF2:
 4896 0496 73686F72 		.ascii	"short int\000"
 4896      7420696E 
 4896      7400
 4897              	.LASF176:
 4898 04a0 616C6172 		.ascii	"alarmAppLED\000"
 4898      6D417070 
 4898      4C454400 
 4899              	.LASF153:
 4900 04ac 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4900      6D5F7374 
 4900      6172745F 
 4900      74696D65 
 4900      5F737461 
 4901              	.LASF93:
 4902 04c3 7379735F 		.ascii	"sys_info_t\000"
 4902      696E666F 
 4902      5F7400
 4903              	.LASF80:
 4904 04ce 75706461 		.ascii	"updatable_parameters_t\000"
 4904      7461626C 
 4904      655F7061 
 4904      72616D65 
 4904      74657273 
 4905              	.LASF102:
 4906 04e5 616C6172 		.ascii	"alarmType\000"
 4906      6D547970 
 4906      6500
 4907              	.LASF149:
 4908 04ef 64617461 		.ascii	"dataPointsInStack\000"
 4908      506F696E 
 4908      7473496E 
 4908      53746163 
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 108


 4908      6B00
 4909              	.LASF165:
 4910 0501 6175746F 		.ascii	"autosampler_inbox\000"
 4910      73616D70 
 4910      6C65725F 
 4910      696E626F 
 4910      7800
 4911              	.LASF46:
 4912 0513 746D5F6D 		.ascii	"tm_min\000"
 4912      696E00
 4913              	.LASF17:
 4914 051a 666C6F61 		.ascii	"float32\000"
 4914      74333200 
 4915              	.LASF103:
 4916 0522 616C6172 		.ascii	"alarmToBeUpdated\000"
 4916      6D546F42 
 4916      65557064 
 4916      61746564 
 4916      00
 4917              	.LASF22:
 4918 0533 73697A65 		.ascii	"sizetype\000"
 4918      74797065 
 4918      00
 4919              	.LASF52:
 4920 053c 746D5F79 		.ascii	"tm_yday\000"
 4920      64617900 
 4921              	.LASF96:
 4922 0544 7379735F 		.ascii	"sys_settings_t\000"
 4922      73657474 
 4922      696E6773 
 4922      5F7400
 4923              	.LASF140:
 4924 0553 6C6F6361 		.ascii	"localTime\000"
 4924      6C54696D 
 4924      6500
 4925              	.LASF15:
 4926 055d 696E7431 		.ascii	"int16\000"
 4926      3600
 4927              	.LASF175:
 4928 0563 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 4928      546F5379 
 4928      636E5265 
 4928      6D6F7465 
 4928      50617261 
 4929              	.LASF55:
 4930 057a 74696D65 		.ascii	"timeStamp\000"
 4930      5374616D 
 4930      7000
 4931              	.LASF29:
 4932 0584 5254435F 		.ascii	"RTC_TIME_DATE\000"
 4932      54494D45 
 4932      5F444154 
 4932      4500
 4933              	.LASF155:
 4934 0592 75706461 		.ascii	"updatable_parameters\000"
 4934      7461626C 
 4934      655F7061 
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 109


 4934      72616D65 
 4934      74657273 
 4935              	.LASF107:
 4936 05a7 43726561 		.ascii	"CreateAlarm\000"
 4936      7465416C 
 4936      61726D00 
 4937              	.LASF128:
 4938 05b3 7061636B 		.ascii	"packet\000"
 4938      657400
 4939              	.LASF117:
 4940 05ba 735F7273 		.ascii	"s_rsrp\000"
 4940      727000
 4941              	.LASF37:
 4942 05c1 766F6C74 		.ascii	"voltage_pressure\000"
 4942      6167655F 
 4942      70726573 
 4942      73757265 
 4942      00
 4943              	.LASF183:
 4944 05d2 74696D65 		.ascii	"timeToValve\000"
 4944      546F5661 
 4944      6C766500 
 4945              	.LASF18:
 4946 05de 666C6F61 		.ascii	"float\000"
 4946      7400
 4947              	.LASF85:
 4948 05e4 6C657665 		.ascii	"level_sensor_t\000"
 4948      6C5F7365 
 4948      6E736F72 
 4948      5F7400
 4949              	.LASF118:
 4950 05f3 735F7273 		.ascii	"s_rscp\000"
 4950      637000
 4951              	.LASF132:
 4952 05fa 636F6E66 		.ascii	"configureRemoteParams\000"
 4952      69677572 
 4952      6552656D 
 4952      6F746550 
 4952      6172616D 
 4953              	.LASF186:
 4954 0610 44617461 		.ascii	"Data_fileName\000"
 4954      5F66696C 
 4954      654E616D 
 4954      6500
 4955              	.LASF99:
 4956 061e 6D6F6465 		.ascii	"modem_status\000"
 4956      6D5F7374 
 4956      61747573 
 4956      00
 4957              	.LASF30:
 4958 062b 74657374 		.ascii	"test_name\000"
 4958      5F6E616D 
 4958      6500
 4959              	.LASF28:
 4960 0635 59656172 		.ascii	"Year\000"
 4960      00
 4961              	.LASF79:
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 110


 4962 063a 5F426F6F 		.ascii	"_Bool\000"
 4962      6C00
 4963              	.LASF10:
 4964 0640 696E7433 		.ascii	"int32_t\000"
 4964      325F7400 
 4965              	.LASF1:
 4966 0648 756E7369 		.ascii	"unsigned char\000"
 4966      676E6564 
 4966      20636861 
 4966      7200
 4967              	.LASF144:
 4968 0656 726F7574 		.ascii	"route\000"
 4968      6500
 4969              	.LASF170:
 4970 065c 73797374 		.ascii	"system_settings\000"
 4970      656D5F73 
 4970      65747469 
 4970      6E677300 
 4971              	.LASF77:
 4972 066c 56616C76 		.ascii	"Valve_freq\000"
 4972      655F6672 
 4972      657100
 4973              	.LASF64:
 4974 0677 72737271 		.ascii	"rsrq\000"
 4974      00
 4975              	.LASF104:
 4976 067c 52657365 		.ascii	"ResetAlarm\000"
 4976      74416C61 
 4976      726D00
 4977              	.LASF131:
 4978 0687 735F7365 		.ascii	"s_send_time\000"
 4978      6E645F74 
 4978      696D6500 
 4979              	.LASF72:
 4980 0693 73796E63 		.ascii	"sync_time\000"
 4980      5F74696D 
 4980      6500
 4981              	.LASF43:
 4982 069d 70726573 		.ascii	"pressure_depth\000"
 4982      73757265 
 4982      5F646570 
 4982      746800
 4983              	.LASF62:
 4984 06ac 72736370 		.ascii	"rscp\000"
 4984      00
 4985              	.LASF24:
 4986 06b1 4461794F 		.ascii	"DayOfWeek\000"
 4986      66576565 
 4986      6B00
 4987              	.LASF33:
 4988 06bb 74657374 		.ascii	"test_t\000"
 4988      5F7400
 4989              	.LASF169:
 4990 06c2 73797374 		.ascii	"system_info\000"
 4990      656D5F69 
 4990      6E666F00 
 4991              	.LASF59:
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 111


 4992 06ce 696D6569 		.ascii	"imei\000"
 4992      00
 4993              	.LASF32:
 4994 06d3 72656173 		.ascii	"reason\000"
 4994      6F6E00
 4995              	.LASF105:
 4996 06da 616C6172 		.ascii	"alarmToBeReset\000"
 4996      6D546F42 
 4996      65526573 
 4996      657400
 4997              	.LASF110:
 4998 06e9 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 4998      6B697479 
 4998      43686563 
 4998      6B596F75 
 4998      7273656C 
 4999              	.LASF126:
 5000 0715 64617461 		.ascii	"data_count_sent\000"
 5000      5F636F75 
 5000      6E745F73 
 5000      656E7400 
 5001              	.LASF68:
 5002 0725 6D6F6465 		.ascii	"modem_stats_t\000"
 5002      6D5F7374 
 5002      6174735F 
 5002      7400
 5003              	.LASF42:
 5004 0733 70726573 		.ascii	"pressure_current\000"
 5004      73757265 
 5004      5F637572 
 5004      72656E74 
 5004      00
 5005              	.LASF38:
 5006 0744 76616C69 		.ascii	"valid\000"
 5006      6400
 5007              	.LASF178:
 5008 074a 616C6172 		.ascii	"alarmLevelSensor\000"
 5008      6D4C6576 
 5008      656C5365 
 5008      6E736F72 
 5008      00
 5009              	.LASF51:
 5010 075b 746D5F77 		.ascii	"tm_wday\000"
 5010      64617900 
 5011              	.LASF75:
 5012 0763 4C657665 		.ascii	"Level_Sensor_freq\000"
 5012      6C5F5365 
 5012      6E736F72 
 5012      5F667265 
 5012      7100
 5013              	.LASF158:
 5014 0775 6C657665 		.ascii	"level_sensor_inbox\000"
 5014      6C5F7365 
 5014      6E736F72 
 5014      5F696E62 
 5014      6F7800
 5015              	.LASF21:
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 112


 5016 0788 6C6F6E67 		.ascii	"long double\000"
 5016      20646F75 
 5016      626C6500 
 5017              	.LASF123:
 5018 0794 6368756E 		.ascii	"chunk\000"
 5018      6B00
 5019              	.LASF134:
 5020 079a 635F7469 		.ascii	"c_timeStamp\000"
 5020      6D655374 
 5020      616D7000 
 5021              	.LASF20:
 5022 07a6 63686172 		.ascii	"char\000"
 5022      00
 5023              	.LASF8:
 5024 07ab 756E7369 		.ascii	"unsigned int\000"
 5024      676E6564 
 5024      20696E74 
 5024      00
 5025              	.LASF182:
 5026 07b8 616C6172 		.ascii	"alarmValve\000"
 5026      6D56616C 
 5026      766500
 5027              	.LASF65:
 5028 07c3 72737270 		.ascii	"rsrp\000"
 5028      00
 5029              	.LASF168:
 5030 07c8 68747470 		.ascii	"http_route\000"
 5030      5F726F75 
 5030      746500
 5031              	.LASF122:
 5032 07d3 706F7274 		.ascii	"portConfig\000"
 5032      436F6E66 
 5032      696700
 5033              	.LASF189:
 5034 07de 443A5C44 		.ascii	"D:\\Data\\Stormwater-RA\\notoriOS-og\\notoriOS.cyds"
 5034      6174615C 
 5034      53746F72 
 5034      6D776174 
 5034      65722D52 
 5035 080d 6E00     		.ascii	"n\000"
 5036              	.LASF9:
 5037 080f 5F5F696E 		.ascii	"__int32_t\000"
 5037      7433325F 
 5037      7400
 5038              	.LASF97:
 5039 0819 756E6971 		.ascii	"uniqueId\000"
 5039      75654964 
 5039      00
 5040              	.LASF71:
 5041 0822 6D656173 		.ascii	"measure_time\000"
 5041      7572655F 
 5041      74696D65 
 5041      00
 5042              	.LASF137:
 5043 082f 6D5F6C65 		.ascii	"m_level_sensor\000"
 5043      76656C5F 
 5043      73656E73 
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 113


 5043      6F7200
 5044              	.LASF82:
 5045 083e 6C657665 		.ascii	"level_reading\000"
 5045      6C5F7265 
 5045      6164696E 
 5045      6700
 5046              	.LASF191:
 5047 084c 4C617942 		.ascii	"LayBack\000"
 5047      61636B00 
 5048              	.LASF3:
 5049 0854 73686F72 		.ascii	"short unsigned int\000"
 5049      7420756E 
 5049      7369676E 
 5049      65642069 
 5049      6E7400
 5050              	.LASF57:
 5051 0867 73696D5F 		.ascii	"sim_id\000"
 5051      696400
 5052              	.LASF48:
 5053 086e 746D5F6D 		.ascii	"tm_mday\000"
 5053      64617900 
 5054              	.LASF108:
 5055 0876 6E657741 		.ascii	"newAlarm\000"
 5055      6C61726D 
 5055      00
 5056              	.LASF76:
 5057 087f 446F776E 		.ascii	"Downstream_Level_Sensor_freq\000"
 5057      73747265 
 5057      616D5F4C 
 5057      6576656C 
 5057      5F53656E 
 5058              	.LASF45:
 5059 089c 746D5F73 		.ascii	"tm_sec\000"
 5059      656300
 5060              	.LASF138:
 5061 08a3 6D5F7072 		.ascii	"m_pressure\000"
 5061      65737375 
 5061      726500
 5062              	.LASF162:
 5063 08ae 76616C76 		.ascii	"valve_enabled\000"
 5063      655F656E 
 5063      61626C65 
 5063      6400
 5064              	.LASF31:
 5065 08bc 73746174 		.ascii	"status\000"
 5065      757300
 5066              	.LASF179:
 5067 08c3 74696D65 		.ascii	"timeToLevelSensor\000"
 5067      546F4C65 
 5067      76656C53 
 5067      656E736F 
 5067      7200
 5068              	.LASF159:
 5069 08d5 6C657665 		.ascii	"level_sensor_enabled\000"
 5069      6C5F7365 
 5069      6E736F72 
 5069      5F656E61 
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 114


 5069      626C6564 
 5070              	.LASF150:
 5071 08ea 64617461 		.ascii	"dataPointsInStackDesired\000"
 5071      506F696E 
 5071      7473496E 
 5071      53746163 
 5071      6B446573 
 5072              	.LASF74:
 5073 0903 4170705F 		.ascii	"App_LED_freq\000"
 5073      4C45445F 
 5073      66726571 
 5073      00
 5074              	.LASF112:
 5075 0910 745F766F 		.ascii	"t_voltages\000"
 5075      6C746167 
 5075      657300
 5076              	.LASF188:
 5077 091b 6E6F746F 		.ascii	"notoriOS.c\000"
 5077      72694F53 
 5077      2E6300
 5078              	.LASF181:
 5079 0926 74696D65 		.ascii	"timeToDownstreamLevelSensor\000"
 5079      546F446F 
 5079      776E7374 
 5079      7265616D 
 5079      4C657665 
 5080              	.LASF167:
 5081 0942 68747470 		.ascii	"http_body\000"
 5081      5F626F64 
 5081      7900
 5082              	.LASF184:
 5083 094c 616C6172 		.ascii	"alarmAutosampler\000"
 5083      6D417574 
 5083      6F73616D 
 5083      706C6572 
 5083      00
 5084              	.LASF163:
 5085 095d 76616C76 		.ascii	"valve_inbox\000"
 5085      655F696E 
 5085      626F7800 
 5086              	.LASF78:
 5087 0969 4175746F 		.ascii	"Autosampler_freq\000"
 5087      73616D70 
 5087      6C65725F 
 5087      66726571 
 5087      00
 5088              	.LASF88:
 5089 097a 636F756E 		.ascii	"countDownType\000"
 5089      74446F77 
 5089      6E547970 
 5089      6500
 5090              	.LASF87:
 5091 0988 63757272 		.ascii	"currentCountDownValue\000"
 5091      656E7443 
 5091      6F756E74 
 5091      446F776E 
 5091      56616C75 
ARM GAS  C:\Users\shara\AppData\Local\Temp\cc3m9drZ.s 			page 115


 5092              	.LASF70:
 5093 099e 73696D5F 		.ascii	"sim_type\000"
 5093      74797065 
 5093      00
 5094              	.LASF26:
 5095 09a7 4461794F 		.ascii	"DayOfYear\000"
 5095      66596561 
 5095      7200
 5096              	.LASF44:
 5097 09b1 70726573 		.ascii	"pressure_t\000"
 5097      73757265 
 5097      5F7400
 5098              	.LASF106:
 5099 09bc 416C6172 		.ascii	"AlarmReady\000"
 5099      6D526561 
 5099      647900
 5100              	.LASF109:
 5101 09c7 52656164 		.ascii	"ReadyOrNot\000"
 5101      794F724E 
 5101      6F7400
 5102              	.LASF192:
 5103 09d2 6D61696E 		.ascii	"main\000"
 5103      00
 5104              	.LASF92:
 5105 09d7 63686970 		.ascii	"chip_uniqueId\000"
 5105      5F756E69 
 5105      71756549 
 5105      6400
 5106              	.LASF166:
 5107 09e5 68747470 		.ascii	"http_request\000"
 5107      5F726571 
 5107      75657374 
 5107      00
 5108              	.LASF19:
 5109 09f2 646F7562 		.ascii	"double\000"
 5109      6C6500
 5110              	.LASF157:
 5111 09f9 6170705F 		.ascii	"app_led_inbox\000"
 5111      6C65645F 
 5111      696E626F 
 5111      7800
 5112              	.LASF39:
 5113 0a07 766F6C74 		.ascii	"voltage_t\000"
 5113      6167655F 
 5113      7400
 5114              	.LASF135:
 5115 0a11 635F6E6F 		.ascii	"c_node_type\000"
 5115      64655F74 
 5115      79706500 
 5116              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
