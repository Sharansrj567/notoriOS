ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.section	.text.Wakeup_ISR,"ax",%progbits
  44              		.align	2
  45              		.global	Wakeup_ISR
  46              		.thumb
  47              		.thumb_func
  48              		.type	Wakeup_ISR, %function
  49              	Wakeup_ISR:
  50              	.LFB64:
  51              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 2


   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  52              		.loc 1 20 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  62              		.loc 1 22 0
  63 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  64              		.loc 1 23 0
  65 0008 00BF     		nop
  66 000a 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE64:
  69              		.size	Wakeup_ISR, .-Wakeup_ISR
  70              		.global	Data_fileName
  71              		.data
  72              		.align	2
  73              		.type	Data_fileName, %object
  74              		.size	Data_fileName, 30
  75              	Data_fileName:
  76 0000 64617461 		.ascii	"data.txt\000"
  76      2E747874 
  76      00
  77 0009 00000000 		.space	21
  77      00000000 
  77      00000000 
  77      00000000 
  77      00000000 
  78              		.comm	try_counter,1,1
  79              		.section	.rodata
  80              		.align	2
  81              	.LC0:
  82 0000 25582D25 		.ascii	"%X-%X\000"
  82      5800
  83 0006 0000     		.align	2
  84              	.LC1:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 3


  85 0008 6563322D 		.ascii	"ec2-13-59-131-167.us-east-2.compute.amazonaws.com\000"
  85      31332D35 
  85      392D3133 
  85      312D3136 
  85      372E7573 
  86 003a 0000     		.align	2
  87              	.LC2:
  88 003c 256400   		.ascii	"%d\000"
  89 003f 00       		.align	2
  90              	.LC3:
  91 0040 7265626F 		.ascii	"reboot\000"
  91      6F7400
  92              		.section	.text.ReadyOrNot,"ax",%progbits
  93              		.align	2
  94              		.global	ReadyOrNot
  95              		.thumb
  96              		.thumb_func
  97              		.type	ReadyOrNot, %function
  98              	ReadyOrNot:
  99              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
 100              		.loc 1 41 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 32
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 B0B5     		push	{r4, r5, r7, lr}
 105              		.cfi_def_cfa_offset 16
 106              		.cfi_offset 4, -16
 107              		.cfi_offset 5, -12
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 8AB0     		sub	sp, sp, #40
 111              		.cfi_def_cfa_offset 56
 112 0004 02AF     		add	r7, sp, #8
 113              		.cfi_def_cfa 7, 48
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 114              		.loc 1 43 0
 115 0006 3948     		ldr	r0, .L3
 116 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 4


  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 117              		.loc 1 44 0
 118 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 119              		.loc 1 46 0
 120 0010 FF20     		movs	r0, #255
 121 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 122              		.loc 1 47 0
 123 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 124              		.loc 1 48 0
 125 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 126              		.loc 1 50 0
 127 001e FFF7FEFF 		bl	modem_initialize
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 128              		.loc 1 52 0
 129 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  53:notoriOS.c    ****    
  54:notoriOS.c    ****     
  55:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  56:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  57:notoriOS.c    ****     
  58:notoriOS.c    ****     
  59:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  60:notoriOS.c    ****     uint32 uniqueId[2];
  61:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  62:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 130              		.loc 1 62 0
 131 0026 07F11403 		add	r3, r7, #20
 132 002a 1846     		mov	r0, r3
 133 002c FFF7FEFF 		bl	CyGetUniqueId
  63:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 134              		.loc 1 63 0
 135 0030 7A69     		ldr	r2, [r7, #20]
 136 0032 BB69     		ldr	r3, [r7, #24]
 137 0034 0093     		str	r3, [sp]
 138 0036 1346     		mov	r3, r2
 139 0038 2D4A     		ldr	r2, .L3+4
 140 003a 1821     		movs	r1, #24
 141 003c 2D48     		ldr	r0, .L3+8
 142 003e FFF7FEFF 		bl	snprintf
  64:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  65:notoriOS.c    ****     system_info.modem_info = &modem_info;
 143              		.loc 1 65 0
 144 0042 2D4B     		ldr	r3, .L3+12
 145 0044 2D4A     		ldr	r2, .L3+16
 146 0046 1A60     		str	r2, [r3]
  66:notoriOS.c    ****     
  67:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  68:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","ec2-13-59-131-167.us-eas
 147              		.loc 1 68 0
 148 0048 2D4A     		ldr	r2, .L3+20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 5


 149 004a 2E4B     		ldr	r3, .L3+24
 150 004c 1446     		mov	r4, r2
 151 004e 1D46     		mov	r5, r3
 152 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 153 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 154 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 155 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 156 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 157 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 158 005c 2B68     		ldr	r3, [r5]
 159 005e 2380     		strh	r3, [r4]	@ movhi
  69:notoriOS.c    ****    
  70:notoriOS.c    ****     system_settings.ep_port = 5000;
 160              		.loc 1 70 0
 161 0060 274B     		ldr	r3, .L3+20
 162 0062 41F28832 		movw	r2, #5000
 163 0066 5A66     		str	r2, [r3, #100]
  71:notoriOS.c    ****     // Don't need the following for new nodes
  72:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  73:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  74:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  75:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  76:notoriOS.c    ****         
  77:notoriOS.c    ****     
  78:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  79:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 164              		.loc 1 79 0
 165 0068 274B     		ldr	r3, .L3+28
 166 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 167 006c 99B2     		uxth	r1, r3
 168 006e 274C     		ldr	r4, .L3+32
 169 0070 3846     		mov	r0, r7
 170 0072 0723     		movs	r3, #7
 171 0074 0122     		movs	r2, #1
 172 0076 FFF7FEFF 		bl	CreateAlarm
 173 007a 2246     		mov	r2, r4
 174 007c 3B46     		mov	r3, r7
 175 007e 1968     		ldr	r1, [r3]	@ unaligned
 176 0080 1160     		str	r1, [r2]	@ unaligned
 177 0082 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 178 0084 9380     		strh	r3, [r2, #4]	@ unaligned
  80:notoriOS.c    ****     timeToMeasure = 1u;
 179              		.loc 1 80 0
 180 0086 224B     		ldr	r3, .L3+36
 181 0088 0122     		movs	r2, #1
 182 008a 1A70     		strb	r2, [r3]
  81:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  82:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 183              		.loc 1 82 0
 184 008c 1E4B     		ldr	r3, .L3+28
 185 008e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 186 0090 99B2     		uxth	r1, r3
 187 0092 204C     		ldr	r4, .L3+40
 188 0094 3846     		mov	r0, r7
 189 0096 0723     		movs	r3, #7
 190 0098 0122     		movs	r2, #1
 191 009a FFF7FEFF 		bl	CreateAlarm
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 6


 192 009e 2246     		mov	r2, r4
 193 00a0 3B46     		mov	r3, r7
 194 00a2 1968     		ldr	r1, [r3]	@ unaligned
 195 00a4 1160     		str	r1, [r2]	@ unaligned
 196 00a6 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 197 00a8 9380     		strh	r3, [r2, #4]	@ unaligned
  83:notoriOS.c    ****     timeToSync = 1u;
 198              		.loc 1 83 0
 199 00aa 1B4B     		ldr	r3, .L3+44
 200 00ac 0122     		movs	r2, #1
 201 00ae 1A70     		strb	r2, [r3]
  84:notoriOS.c    ****     
  85:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 202              		.loc 1 85 0
 203 00b0 1A4B     		ldr	r3, .L3+48
 204 00b2 0022     		movs	r2, #0
 205 00b4 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     
  87:notoriOS.c    ****     // send hey to server saying the node rebooted
  88:notoriOS.c    ****     hey = 1u;
 206              		.loc 1 88 0
 207 00b6 1A4B     		ldr	r3, .L3+52
 208 00b8 0122     		movs	r2, #1
 209 00ba 1A70     		strb	r2, [r3]
  89:notoriOS.c    ****     char c_hey[10];
  90:notoriOS.c    ****     snprintf(c_hey,sizeof(c_hey),"%d",hey);
 210              		.loc 1 90 0
 211 00bc 184B     		ldr	r3, .L3+52
 212 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 213 00c0 07F10800 		add	r0, r7, #8
 214 00c4 174A     		ldr	r2, .L3+56
 215 00c6 0A21     		movs	r1, #10
 216 00c8 FFF7FEFF 		bl	snprintf
  91:notoriOS.c    ****     pushData("reboot",c_hey,getTimeStamp());
 217              		.loc 1 91 0
 218 00cc FFF7FEFF 		bl	getTimeStamp
 219 00d0 0246     		mov	r2, r0
 220 00d2 07F10803 		add	r3, r7, #8
 221 00d6 1946     		mov	r1, r3
 222 00d8 1348     		ldr	r0, .L3+60
 223 00da FFF7FEFF 		bl	pushData
  92:notoriOS.c    ****     
  93:notoriOS.c    ****     // Initialize the try counter to 0
  94:notoriOS.c    ****     uint8 try_counter = 0;
 224              		.loc 1 94 0
 225 00de 0023     		movs	r3, #0
 226 00e0 FB77     		strb	r3, [r7, #31]
  95:notoriOS.c    **** }
 227              		.loc 1 95 0
 228 00e2 00BF     		nop
 229 00e4 2037     		adds	r7, r7, #32
 230              		.cfi_def_cfa_offset 16
 231 00e6 BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
 234 00e8 B0BD     		pop	{r4, r5, r7, pc}
 235              	.L4:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 7


 236 00ea 00BF     		.align	2
 237              	.L3:
 238 00ec 00000000 		.word	Wakeup_ISR
 239 00f0 00000000 		.word	.LC0
 240 00f4 04000000 		.word	system_info+4
 241 00f8 00000000 		.word	system_info
 242 00fc 00000000 		.word	modem_info
 243 0100 00000000 		.word	system_settings
 244 0104 08000000 		.word	.LC1
 245 0108 00000000 		.word	updatable_parameters
 246 010c 00000000 		.word	alarmMeasure
 247 0110 00000000 		.word	timeToMeasure
 248 0114 00000000 		.word	alarmSync
 249 0118 00000000 		.word	timeToSync
 250 011c 00000000 		.word	timeToSycnRemoteParams
 251 0120 00000000 		.word	hey
 252 0124 3C000000 		.word	.LC2
 253 0128 40000000 		.word	.LC3
 254              		.cfi_endproc
 255              	.LFE65:
 256              		.size	ReadyOrNot, .-ReadyOrNot
 257              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 258              		.align	2
 259              		.global	WorkWorkWorkWorkWorkWork
 260              		.thumb
 261              		.thumb_func
 262              		.type	WorkWorkWorkWorkWorkWork, %function
 263              	WorkWorkWorkWorkWorkWork:
 264              	.LFB66:
  96:notoriOS.c    **** 
  97:notoriOS.c    **** 
  98:notoriOS.c    **** // ==============================================
  99:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
 100:notoriOS.c    **** //      - Rhiana, feat Drake (2016)
 101:notoriOS.c    **** //
 102:notoriOS.c    **** // Prorcesses core tasks
 103:notoriOS.c    **** // ==============================================
 104:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
 105:notoriOS.c    **** {
 265              		.loc 1 105 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269 0000 80B5     		push	{r7, lr}
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 82B0     		sub	sp, sp, #8
 274              		.cfi_def_cfa_offset 16
 275 0004 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
 106:notoriOS.c    ****     
 107:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 108:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 109:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
 110:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 111:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 8


 112:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 113:notoriOS.c    ****     if(timeToSycnRemoteParams){
 277              		.loc 1 113 0
 278 0006 144B     		ldr	r3, .L10
 279 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 000a 002B     		cmp	r3, #0
 281 000c 06D0     		beq	.L6
 114:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
 282              		.loc 1 114 0
 283 000e FFF7FEFF 		bl	configureRemoteParams
 284 0012 0346     		mov	r3, r0
 285 0014 1A46     		mov	r2, r3
 286 0016 104B     		ldr	r3, .L10
 287 0018 1A70     		strb	r2, [r3]
 288 001a 14E0     		b	.L7
 289              	.L6:
 115:notoriOS.c    ****     }
 116:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 117:notoriOS.c    ****     else if(timeToMeasure){
 290              		.loc 1 117 0
 291 001c 0F4B     		ldr	r3, .L10+4
 292 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 293 0020 002B     		cmp	r3, #0
 294 0022 06D0     		beq	.L8
 118:notoriOS.c    ****         //(int i=0; i<=30; i++){
 119:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 295              		.loc 1 119 0
 296 0024 FFF7FEFF 		bl	makeMeasurements
 297 0028 0346     		mov	r3, r0
 298 002a 1A46     		mov	r2, r3
 299 002c 0B4B     		ldr	r3, .L10+4
 300 002e 1A70     		strb	r2, [r3]
 301 0030 09E0     		b	.L7
 302              	.L8:
 120:notoriOS.c    ****         //CyDelay(1000u);
 121:notoriOS.c    ****         //}
 122:notoriOS.c    ****     }else if(timeToSync){
 303              		.loc 1 122 0
 304 0032 0B4B     		ldr	r3, .L10+8
 305 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 0036 002B     		cmp	r3, #0
 307 0038 05D0     		beq	.L7
 123:notoriOS.c    ****             timeToSync = syncData();
 308              		.loc 1 123 0
 309 003a FFF7FEFF 		bl	syncData
 310 003e 0346     		mov	r3, r0
 311 0040 1A46     		mov	r2, r3
 312 0042 074B     		ldr	r3, .L10+8
 313 0044 1A70     		strb	r2, [r3]
 314              	.L7:
 124:notoriOS.c    ****     }
 125:notoriOS.c    ****     // Print the countdown to the next alarm
 126:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 127:notoriOS.c    ****     
 128:notoriOS.c    ****     
 129:notoriOS.c    ****     // Check modem state machine on every loop
 130:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 9


 315              		.loc 1 130 0
 316 0046 FFF7FEFF 		bl	modem_process_tasks
 317 004a 0346     		mov	r3, r0
 318 004c FB71     		strb	r3, [r7, #7]
 131:notoriOS.c    **** 
 132:notoriOS.c    ****     return 0u +  modem_status;  
 319              		.loc 1 132 0
 320 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 133:notoriOS.c    **** }
 321              		.loc 1 133 0
 322 0050 1846     		mov	r0, r3
 323 0052 0837     		adds	r7, r7, #8
 324              		.cfi_def_cfa_offset 8
 325 0054 BD46     		mov	sp, r7
 326              		.cfi_def_cfa_register 13
 327              		@ sp needed
 328 0056 80BD     		pop	{r7, pc}
 329              	.L11:
 330              		.align	2
 331              	.L10:
 332 0058 00000000 		.word	timeToSycnRemoteParams
 333 005c 00000000 		.word	timeToMeasure
 334 0060 00000000 		.word	timeToSync
 335              		.cfi_endproc
 336              	.LFE66:
 337              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 338              		.section	.text.LayBack,"ax",%progbits
 339              		.align	2
 340              		.global	LayBack
 341              		.thumb
 342              		.thumb_func
 343              		.type	LayBack, %function
 344              	LayBack:
 345              	.LFB67:
 134:notoriOS.c    **** 
 135:notoriOS.c    **** 
 136:notoriOS.c    **** 
 137:notoriOS.c    **** 
 138:notoriOS.c    **** 
 139:notoriOS.c    **** 
 140:notoriOS.c    **** // ==============================================
 141:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 142:notoriOS.c    **** //      - Snoop Dogg (1993)
 143:notoriOS.c    **** //
 144:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 145:notoriOS.c    **** // ==============================================
 146:notoriOS.c    **** void LayBack()
 147:notoriOS.c    **** {
 346              		.loc 1 147 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
 353              		.cfi_offset 14, -4
 354 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 10


 355              		.cfi_def_cfa_register 7
 148:notoriOS.c    ****   
 149:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 356              		.loc 1 149 0
 357 0004 FFF7FEFF 		bl	modem_sleep
 150:notoriOS.c    ****     
 151:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 152:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 358              		.loc 1 152 0
 359 0008 FFF7FEFF 		bl	debug_sleep
 153:notoriOS.c    ****     
 154:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 360              		.loc 1 154 0
 361 000c FFF7FEFF 		bl	CyPmSaveClocks
 155:notoriOS.c    ****     
 156:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 157:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 158:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 159:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 160:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 161:notoriOS.c    ****     //CyPmHibernate();
 162:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 163:notoriOS.c    **** 
 164:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 362              		.loc 1 164 0
 363 0010 4FF40061 		mov	r1, #2048
 364 0014 0020     		movs	r0, #0
 365 0016 FFF7FEFF 		bl	CyPmSleep
 165:notoriOS.c    **** 
 166:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 366              		.loc 1 166 0
 367 001a FFF7FEFF 		bl	CyPmRestoreClocks
 167:notoriOS.c    **** 
 168:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 368              		.loc 1 168 0
 369 001e FFF7FEFF 		bl	debug_wakeup
 169:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 370              		.loc 1 169 0
 371 0022 FFF7FEFF 		bl	modem_wakeup
 170:notoriOS.c    **** 
 171:notoriOS.c    **** }
 372              		.loc 1 171 0
 373 0026 00BF     		nop
 374 0028 80BD     		pop	{r7, pc}
 375              		.cfi_endproc
 376              	.LFE67:
 377              		.size	LayBack, .-LayBack
 378 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 379              		.align	2
 380              		.global	AyoItsTime
 381              		.thumb
 382              		.thumb_func
 383              		.type	AyoItsTime, %function
 384              	AyoItsTime:
 385              	.LFB68:
 172:notoriOS.c    **** 
 173:notoriOS.c    **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 11


 174:notoriOS.c    **** // ==============================================
 175:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 176:notoriOS.c    **** //      - NAS (1994)
 177:notoriOS.c    **** //
 178:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 179:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 180:notoriOS.c    **** // It will add tasks to the work queue,
 181:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 182:notoriOS.c    **** // ==============================================
 183:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 184:notoriOS.c    **** {
 386              		.loc 1 184 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 8
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 82B0     		sub	sp, sp, #8
 395              		.cfi_def_cfa_offset 16
 396 0004 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
 398 0006 0346     		mov	r3, r0
 399 0008 FB71     		strb	r3, [r7, #7]
 185:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 186:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 400              		.loc 1 186 0
 401 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 402 000c 1946     		mov	r1, r3
 403 000e 0C48     		ldr	r0, .L17
 404 0010 FFF7FEFF 		bl	AlarmReady
 405 0014 0346     		mov	r3, r0
 406 0016 002B     		cmp	r3, #0
 407 0018 02D0     		beq	.L14
 187:notoriOS.c    ****     {
 188:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 189:notoriOS.c    ****         timeToMeasure = 1u;
 408              		.loc 1 189 0
 409 001a 0A4B     		ldr	r3, .L17+4
 410 001c 0122     		movs	r2, #1
 411 001e 1A70     		strb	r2, [r3]
 412              	.L14:
 190:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 191:notoriOS.c    ****         
 192:notoriOS.c    ****     }
 193:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 413              		.loc 1 193 0
 414 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 415 0022 1946     		mov	r1, r3
 416 0024 0848     		ldr	r0, .L17+8
 417 0026 FFF7FEFF 		bl	AlarmReady
 418 002a 0346     		mov	r3, r0
 419 002c 002B     		cmp	r3, #0
 420 002e 02D0     		beq	.L16
 194:notoriOS.c    ****     {
 195:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 12


 196:notoriOS.c    ****         timeToSync = 1u;
 421              		.loc 1 196 0
 422 0030 064B     		ldr	r3, .L17+12
 423 0032 0122     		movs	r2, #1
 424 0034 1A70     		strb	r2, [r3]
 425              	.L16:
 197:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 198:notoriOS.c    ****     }
 199:notoriOS.c    ****     
 200:notoriOS.c    **** }
 426              		.loc 1 200 0
 427 0036 00BF     		nop
 428 0038 0837     		adds	r7, r7, #8
 429              		.cfi_def_cfa_offset 8
 430 003a BD46     		mov	sp, r7
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 003c 80BD     		pop	{r7, pc}
 434              	.L18:
 435 003e 00BF     		.align	2
 436              	.L17:
 437 0040 00000000 		.word	alarmMeasure
 438 0044 00000000 		.word	timeToMeasure
 439 0048 00000000 		.word	alarmSync
 440 004c 00000000 		.word	timeToSync
 441              		.cfi_endproc
 442              	.LFE68:
 443              		.size	AyoItsTime, .-AyoItsTime
 444              		.section	.text.AlarmReady,"ax",%progbits
 445              		.align	2
 446              		.global	AlarmReady
 447              		.thumb
 448              		.thumb_func
 449              		.type	AlarmReady, %function
 450              	AlarmReady:
 451              	.LFB69:
 201:notoriOS.c    **** 
 202:notoriOS.c    **** 
 203:notoriOS.c    **** // ==============================================
 204:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 205:notoriOS.c    **** // ==============================================
 206:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 207:notoriOS.c    **** {
 452              		.loc 1 207 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 8
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 82B0     		sub	sp, sp, #8
 461              		.cfi_def_cfa_offset 16
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
 464 0006 7860     		str	r0, [r7, #4]
 465 0008 0B46     		mov	r3, r1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 13


 466 000a FB70     		strb	r3, [r7, #3]
 208:notoriOS.c    ****     // if the countDownType matches the alarmType
 209:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 467              		.loc 1 209 0
 468 000c 7B68     		ldr	r3, [r7, #4]
 469 000e 1B79     		ldrb	r3, [r3, #4]
 470 0010 DBB2     		uxtb	r3, r3
 471 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 472 0014 9A42     		cmp	r2, r3
 473 0016 12D1     		bne	.L20
 210:notoriOS.c    ****        
 211:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 212:notoriOS.c    ****         // Decrement the count down value by 1
 213:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 474              		.loc 1 213 0
 475 0018 7B68     		ldr	r3, [r7, #4]
 476 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 477 001c 1BB2     		sxth	r3, r3
 478 001e 9BB2     		uxth	r3, r3
 479 0020 013B     		subs	r3, r3, #1
 480 0022 9BB2     		uxth	r3, r3
 481 0024 1AB2     		sxth	r2, r3
 482 0026 7B68     		ldr	r3, [r7, #4]
 483 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 214:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 215:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 484              		.loc 1 215 0
 485 002a 7B68     		ldr	r3, [r7, #4]
 486 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 487 002e 1BB2     		sxth	r3, r3
 488 0030 002B     		cmp	r3, #0
 489 0032 04DC     		bgt	.L20
 216:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 490              		.loc 1 216 0
 491 0034 7868     		ldr	r0, [r7, #4]
 492 0036 FFF7FEFF 		bl	ResetAlarm
 217:notoriOS.c    ****             return 1u;
 493              		.loc 1 217 0
 494 003a 0123     		movs	r3, #1
 495 003c 00E0     		b	.L21
 496              	.L20:
 218:notoriOS.c    ****         } 
 219:notoriOS.c    ****     }
 220:notoriOS.c    ****     
 221:notoriOS.c    ****     return 0u; // Otherwise return 0
 497              		.loc 1 221 0
 498 003e 0023     		movs	r3, #0
 499              	.L21:
 222:notoriOS.c    **** }
 500              		.loc 1 222 0
 501 0040 1846     		mov	r0, r3
 502 0042 0837     		adds	r7, r7, #8
 503              		.cfi_def_cfa_offset 8
 504 0044 BD46     		mov	sp, r7
 505              		.cfi_def_cfa_register 13
 506              		@ sp needed
 507 0046 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 14


 508              		.cfi_endproc
 509              	.LFE69:
 510              		.size	AlarmReady, .-AlarmReady
 511              		.section	.text.ResetAlarm,"ax",%progbits
 512              		.align	2
 513              		.global	ResetAlarm
 514              		.thumb
 515              		.thumb_func
 516              		.type	ResetAlarm, %function
 517              	ResetAlarm:
 518              	.LFB70:
 223:notoriOS.c    **** 
 224:notoriOS.c    **** // ==============================================
 225:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 226:notoriOS.c    **** // ==============================================
 227:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 228:notoriOS.c    **** {
 519              		.loc 1 228 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0000 80B4     		push	{r7}
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0002 83B0     		sub	sp, sp, #12
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 229:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 230:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 532              		.loc 1 230 0
 533 0008 7B68     		ldr	r3, [r7, #4]
 534 000a 1B88     		ldrh	r3, [r3]	@ movhi
 535 000c 9BB2     		uxth	r3, r3
 536 000e 1AB2     		sxth	r2, r3
 537 0010 7B68     		ldr	r3, [r7, #4]
 538 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 231:notoriOS.c    **** }
 539              		.loc 1 231 0
 540 0014 00BF     		nop
 541 0016 0C37     		adds	r7, r7, #12
 542              		.cfi_def_cfa_offset 4
 543 0018 BD46     		mov	sp, r7
 544              		.cfi_def_cfa_register 13
 545              		@ sp needed
 546 001a 80BC     		pop	{r7}
 547              		.cfi_restore 7
 548              		.cfi_def_cfa_offset 0
 549 001c 7047     		bx	lr
 550              		.cfi_endproc
 551              	.LFE70:
 552              		.size	ResetAlarm, .-ResetAlarm
 553 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
 554              		.align	2
 555              		.global	CreateAlarm
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 15


 556              		.thumb
 557              		.thumb_func
 558              		.type	CreateAlarm, %function
 559              	CreateAlarm:
 560              	.LFB71:
 232:notoriOS.c    **** 
 233:notoriOS.c    **** // ==============================================
 234:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 235:notoriOS.c    **** // ==============================================
 236:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 237:notoriOS.c    **** {
 561              		.loc 1 237 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 16
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566 0000 80B4     		push	{r7}
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 0002 85B0     		sub	sp, sp, #20
 570              		.cfi_def_cfa_offset 24
 571 0004 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 573 0006 7860     		str	r0, [r7, #4]
 574 0008 0846     		mov	r0, r1
 575 000a 1146     		mov	r1, r2
 576 000c 1A46     		mov	r2, r3
 577 000e 0346     		mov	r3, r0	@ movhi
 578 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 579 0012 0B46     		mov	r3, r1
 580 0014 7B70     		strb	r3, [r7, #1]
 581 0016 1346     		mov	r3, r2
 582 0018 3B70     		strb	r3, [r7]
 238:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 239:notoriOS.c    ****     alarm newAlarm;
 240:notoriOS.c    ****     
 241:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 242:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 583              		.loc 1 242 0
 584 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 585 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 243:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 586              		.loc 1 243 0
 587 001e 7B78     		ldrb	r3, [r7, #1]
 588 0020 3B73     		strb	r3, [r7, #12]
 244:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 589              		.loc 1 244 0
 590 0022 3B78     		ldrb	r3, [r7]
 591 0024 7B73     		strb	r3, [r7, #13]
 245:notoriOS.c    ****     
 246:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 247:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 248:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 592              		.loc 1 248 0
 593 0026 B7F90230 		ldrsh	r3, [r7, #2]
 594 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 249:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 16


 250:notoriOS.c    ****     return newAlarm;
 595              		.loc 1 250 0
 596 002c 7B68     		ldr	r3, [r7, #4]
 597 002e 1A46     		mov	r2, r3
 598 0030 07F10803 		add	r3, r7, #8
 599 0034 1868     		ldr	r0, [r3]	@ unaligned
 600 0036 1060     		str	r0, [r2]	@ unaligned
 601 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 602 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 251:notoriOS.c    ****     
 252:notoriOS.c    **** }
 603              		.loc 1 252 0
 604 003c 7868     		ldr	r0, [r7, #4]
 605 003e 1437     		adds	r7, r7, #20
 606              		.cfi_def_cfa_offset 4
 607 0040 BD46     		mov	sp, r7
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 0042 80BC     		pop	{r7}
 611              		.cfi_restore 7
 612              		.cfi_def_cfa_offset 0
 613 0044 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE71:
 616              		.size	CreateAlarm, .-CreateAlarm
 617 0046 00BF     		.section	.rodata
 618 0047 00       		.align	2
 619              	.LC4:
 620 0048 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 620      2D2D2D2D 
 620      2D2D2D2D 
 620      2D424547 
 620      494E2054 
 621 0072 0000     		.align	2
 622              	.LC5:
 623 0074 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\000"
 623      3D25732C 
 623      2053494D 
 623      49443D25 
 623      732C2044 
 624 0093 00       		.align	2
 625              	.LC6:
 626 0094 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 626      2D2D2D2D 
 626      2D2D2D2D 
 626      2D2D2D45 
 626      4E442054 
 627 00bd 00       		.ascii	"\000"
 628              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 629              		.align	2
 630              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 631              		.thumb
 632              		.thumb_func
 633              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 634              	ChickityCheckYourselfBeforeYouWreckYourself:
 635              	.LFB72:
 253:notoriOS.c    **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 17


 254:notoriOS.c    **** // ==============================================
 255:notoriOS.c    **** // Dropping bombs on your moms
 256:notoriOS.c    **** //      - Ice Cube (1992)
 257:notoriOS.c    **** //
 258:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 259:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 260:notoriOS.c    **** // ==============================================
 261:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 636              		.loc 1 261 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 2328
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 90B5     		push	{r4, r7, lr}
 641              		.cfi_def_cfa_offset 12
 642              		.cfi_offset 4, -12
 643              		.cfi_offset 7, -8
 644              		.cfi_offset 14, -4
 645 0002 ADF6942D 		subw	sp, sp, #2708
 646              		.cfi_def_cfa_offset 2720
 647 0006 5EAF     		add	r7, sp, #376
 648              		.cfi_def_cfa 7, 2344
 262:notoriOS.c    **** 
 263:notoriOS.c    ****     //test_t t_influx = influx_test();
 264:notoriOS.c    ****     //printTestStatus(t_influx);
 265:notoriOS.c    ****     
 266:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 649              		.loc 1 266 0
 650 0008 4249     		ldr	r1, .L26
 651 000a 0320     		movs	r0, #3
 652 000c FFF7FEFF 		bl	printNotif
 267:notoriOS.c    ****     
 268:notoriOS.c    ****     // consolidated water quality
 269:notoriOS.c    ****     test_t t_wq_sensors = wq_sensor_test();
 653              		.loc 1 269 0
 654 0010 07F29473 		addw	r3, r7, #1940
 655 0014 1846     		mov	r0, r3
 656 0016 FFF7FEFF 		bl	wq_sensor_test
 270:notoriOS.c    ****     printTestStatus(t_wq_sensors);
 657              		.loc 1 270 0
 658 001a 07F29474 		addw	r4, r7, #1940
 659 001e 6846     		mov	r0, sp
 660 0020 04F11003 		add	r3, r4, #16
 661 0024 40F27112 		movw	r2, #369
 662 0028 1946     		mov	r1, r3
 663 002a FFF7FEFF 		bl	memcpy
 664 002e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 665 0032 FFF7FEFF 		bl	printTestStatus
 271:notoriOS.c    ****     
 272:notoriOS.c    ****     // Water Quality Calibrations 
 273:notoriOS.c    ****     // These MUST be commented out in production code and only run in lab
 274:notoriOS.c    ****     // These should be run in Debug mode though the process should be automatic if you've set up co
 275:notoriOS.c    ****     // DO_cal();
 276:notoriOS.c    ****     // Temperature_cal();
 277:notoriOS.c    ****     
 278:notoriOS.c    ****     // Test level sensor
 279:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 666              		.loc 1 279 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 18


 667 0036 07F5C263 		add	r3, r7, #1552
 668 003a 1846     		mov	r0, r3
 669 003c FFF7FEFF 		bl	level_sensor_test
 280:notoriOS.c    ****     printTestStatus(t_level_sensor);
 670              		.loc 1 280 0
 671 0040 07F5C264 		add	r4, r7, #1552
 672 0044 6846     		mov	r0, sp
 673 0046 04F11003 		add	r3, r4, #16
 674 004a 40F27112 		movw	r2, #369
 675 004e 1946     		mov	r1, r3
 676 0050 FFF7FEFF 		bl	memcpy
 677 0054 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 678 0058 FFF7FEFF 		bl	printTestStatus
 281:notoriOS.c    ****     
 282:notoriOS.c    ****     // Test voltages
 283:notoriOS.c    ****     test_t t_voltages = voltages_test();
 679              		.loc 1 283 0
 680 005c 07F28C43 		addw	r3, r7, #1164
 681 0060 1846     		mov	r0, r3
 682 0062 FFF7FEFF 		bl	voltages_test
 284:notoriOS.c    ****     printTestStatus(t_voltages);
 683              		.loc 1 284 0
 684 0066 07F28C44 		addw	r4, r7, #1164
 685 006a 6846     		mov	r0, sp
 686 006c 04F11003 		add	r3, r4, #16
 687 0070 40F27112 		movw	r2, #369
 688 0074 1946     		mov	r1, r3
 689 0076 FFF7FEFF 		bl	memcpy
 690 007a 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 691 007e FFF7FEFF 		bl	printTestStatus
 285:notoriOS.c    ****     
 286:notoriOS.c    ****     // Test voltages
 287:notoriOS.c    ****     test_t t_pressure = pressure_sensor_test();
 692              		.loc 1 287 0
 693 0082 07F54273 		add	r3, r7, #776
 694 0086 1846     		mov	r0, r3
 695 0088 FFF7FEFF 		bl	pressure_sensor_test
 288:notoriOS.c    ****     printTestStatus(t_pressure);
 696              		.loc 1 288 0
 697 008c 07F54274 		add	r4, r7, #776
 698 0090 6846     		mov	r0, sp
 699 0092 04F11003 		add	r3, r4, #16
 700 0096 40F27112 		movw	r2, #369
 701 009a 1946     		mov	r1, r3
 702 009c FFF7FEFF 		bl	memcpy
 703 00a0 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 704 00a4 FFF7FEFF 		bl	printTestStatus
 289:notoriOS.c    ****     
 290:notoriOS.c    ****     // Test SD card
 291:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 705              		.loc 1 291 0
 706 00a8 07F5C273 		add	r3, r7, #388
 707 00ac 1846     		mov	r0, r3
 708 00ae FFF7FEFF 		bl	SD_card_test
 292:notoriOS.c    ****     printTestStatus(t_sd_card);
 709              		.loc 1 292 0
 710 00b2 07F5C274 		add	r4, r7, #388
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 19


 711 00b6 6846     		mov	r0, sp
 712 00b8 04F11003 		add	r3, r4, #16
 713 00bc 40F27112 		movw	r2, #369
 714 00c0 1946     		mov	r1, r3
 715 00c2 FFF7FEFF 		bl	memcpy
 716 00c6 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 717 00ca FFF7FEFF 		bl	printTestStatus
 293:notoriOS.c    ****     
 294:notoriOS.c    ****     // Test modem
 295:notoriOS.c    ****     test_t t_modem = modem_test();
 718              		.loc 1 295 0
 719 00ce 3B46     		mov	r3, r7
 720 00d0 1846     		mov	r0, r3
 721 00d2 FFF7FEFF 		bl	modem_test
 296:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s",modem_info.imei,modem_info.sim_i
 722              		.loc 1 296 0
 723 00d6 104B     		ldr	r3, .L26+4
 724 00d8 0093     		str	r3, [sp]
 725 00da 104B     		ldr	r3, .L26+8
 726 00dc 104A     		ldr	r2, .L26+12
 727 00de 1149     		ldr	r1, .L26+16
 728 00e0 0320     		movs	r0, #3
 729 00e2 FFF7FEFF 		bl	printNotif
 297:notoriOS.c    ****     printTestStatus(t_modem);
 730              		.loc 1 297 0
 731 00e6 3C46     		mov	r4, r7
 732 00e8 6846     		mov	r0, sp
 733 00ea 04F11003 		add	r3, r4, #16
 734 00ee 40F27112 		movw	r2, #369
 735 00f2 1946     		mov	r1, r3
 736 00f4 FFF7FEFF 		bl	memcpy
 737 00f8 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 738 00fc FFF7FEFF 		bl	printTestStatus
 298:notoriOS.c    ****     
 299:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 739              		.loc 1 299 0
 740 0100 0949     		ldr	r1, .L26+20
 741 0102 0320     		movs	r0, #3
 742 0104 FFF7FEFF 		bl	printNotif
 300:notoriOS.c    **** 
 301:notoriOS.c    **** }
 743              		.loc 1 301 0
 744 0108 00BF     		nop
 745 010a 07F61C17 		addw	r7, r7, #2332
 746              		.cfi_def_cfa_offset 12
 747 010e BD46     		mov	sp, r7
 748              		.cfi_def_cfa_register 13
 749              		@ sp needed
 750 0110 90BD     		pop	{r4, r7, pc}
 751              	.L27:
 752 0112 00BF     		.align	2
 753              	.L26:
 754 0114 48000000 		.word	.LC4
 755 0118 04000000 		.word	system_info+4
 756 011c 00000000 		.word	modem_info
 757 0120 28000000 		.word	modem_info+40
 758 0124 74000000 		.word	.LC5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 20


 759 0128 94000000 		.word	.LC6
 760              		.cfi_endproc
 761              	.LFE72:
 762              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 763              		.section	.text.main,"ax",%progbits
 764              		.align	2
 765              		.global	main
 766              		.thumb
 767              		.thumb_func
 768              		.type	main, %function
 769              	main:
 770              	.LFB73:
 302:notoriOS.c    **** 
 303:notoriOS.c    **** // ==============================================
 304:notoriOS.c    **** // Processes Core Tasks
 305:notoriOS.c    **** // ==============================================
 306:notoriOS.c    **** int main(void)
 307:notoriOS.c    **** {
 771              		.loc 1 307 0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 0
 774              		@ frame_needed = 1, uses_anonymous_args = 0
 775 0000 80B5     		push	{r7, lr}
 776              		.cfi_def_cfa_offset 8
 777              		.cfi_offset 7, -8
 778              		.cfi_offset 14, -4
 779 0002 00AF     		add	r7, sp, #0
 780              		.cfi_def_cfa_register 7
 308:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 781              		.loc 1 308 0
 782              		.syntax unified
 783              	@ 308 "notoriOS.c" 1
 784 0004 62B6     		CPSIE   i
 785              	@ 0 "" 2
 309:notoriOS.c    **** 
 310:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 786              		.loc 1 310 0
 787              		.thumb
 788              		.syntax unified
 789 0006 FFF7FEFF 		bl	ReadyOrNot
 311:notoriOS.c    ****     
 312:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 790              		.loc 1 312 0
 791 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 792              	.L30:
 313:notoriOS.c    ****    
 314:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 315:notoriOS.c    ****     {
 316:notoriOS.c    ****         
 317:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 793              		.loc 1 317 0
 794 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 795 0012 0346     		mov	r3, r0
 796 0014 002B     		cmp	r3, #0
 797 0016 FAD1     		bne	.L30
 318:notoriOS.c    ****         {
 319:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 21


 798              		.loc 1 319 0
 799 0018 FFF7FEFF 		bl	LayBack
 320:notoriOS.c    ****         }
 321:notoriOS.c    ****     }
 800              		.loc 1 321 0
 801 001c F7E7     		b	.L30
 802              		.cfi_endproc
 803              	.LFE73:
 804              		.size	main, .-main
 805 001e 00BF     		.section	.rodata
 806 00be 0000     		.align	2
 807              	.LC7:
 808 00c0 4D6F6465 		.ascii	"Modem is ready.\000"
 808      6D206973 
 808      20726561 
 808      64792E00 
 809              		.align	2
 810              	.LC8:
 811 00d0 72737270 		.ascii	"rsrp\000"
 811      00
 812 00d5 000000   		.align	2
 813              	.LC9:
 814 00d8 7472795F 		.ascii	"try_counter\000"
 814      636F756E 
 814      74657200 
 815              		.align	2
 816              	.LC10:
 817 00e4 64617461 		.ascii	"data_count_sent\000"
 817      5F636F75 
 817      6E745F73 
 817      656E7400 
 818              		.align	2
 819              	.LC11:
 820 00f4 64617461 		.ascii	"data_count_desired\000"
 820      5F636F75 
 820      6E745F64 
 820      65736972 
 820      656400
 821 0107 00       		.align	2
 822              	.LC12:
 823 0108 42656769 		.ascii	"Begin HTTP post.\000"
 823      6E204854 
 823      54502070 
 823      6F73742E 
 823      00
 824 0119 000000   		.align	2
 825              	.LC13:
 826 011c 34636234 		.ascii	"4cb4d09dd046a9c94866158455822755004314eb\000"
 826      64303964 
 826      64303436 
 826      61396339 
 826      34383636 
 827 0145 000000   		.align	2
 828              	.LC14:
 829 0148 6170692F 		.ascii	"api/v1/write\000"
 829      76312F77 
 829      72697465 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 22


 829      00
 830 0155 000000   		.align	2
 831              	.LC15:
 832 0158 48545450 		.ascii	"HTTP route: %s\000"
 832      20726F75 
 832      74653A20 
 832      257300
 833 0167 00       		.align	2
 834              	.LC16:
 835 0168 312E3100 		.ascii	"1.1\000"
 836              		.align	2
 837              	.LC17:
 838 016c 00       		.ascii	"\000"
 839 016d 000000   		.align	2
 840              	.LC18:
 841 0170 436C6F73 		.ascii	"Close\000"
 841      6500
 842 0176 0000     		.align	2
 843              	.LC19:
 844 0178 504F5354 		.ascii	"POST\000"
 844      00
 845 017d 000000   		.align	2
 846              	.LC20:
 847 0180 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 847      20485454 
 847      50205265 
 847      71756573 
 847      743A2025 
 848 0196 0000     		.align	2
 849              	.LC21:
 850 0198 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 850      443D312C 
 850      302C2564 
 850      2C222573 
 850      222C302C 
 851 01b1 000000   		.align	2
 852              	.LC22:
 853 01b4 257300   		.ascii	"%s\000"
 854 01b7 00       		.align	2
 855              	.LC23:
 856 01b8 4F4B00   		.ascii	"OK\000"
 857              		.global	__aeabi_ui2d
 858              		.global	__aeabi_d2iz
 859 01bb 00       		.align	2
 860              	.LC24:
 861 01bc 68747470 		.ascii	"http_request len: %d\000"
 861      5F726571 
 861      75657374 
 861      206C656E 
 861      3A202564 
 862 01d1 000000   		.align	2
 863              	.LC25:
 864 01d4 23206F66 		.ascii	"# of packets: %d\000"
 864      20706163 
 864      6B657473 
 864      3A202564 
 864      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 23


 865 01e5 000000   		.align	2
 866              	.LC26:
 867 01e8 3E00     		.ascii	">\000"
 868 01ea 0000     		.align	2
 869              	.LC27:
 870 01ec 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 870      53454E44 
 870      3D310D0A 
 870      00
 871 01f9 000000   		.align	2
 872              	.LC28:
 873 01fc 1A00     		.ascii	"\032\000"
 874 01fe 0000     		.align	2
 875              	.LC29:
 876 0200 6368756E 		.ascii	"chunk %d: %s\000"
 876      6B202564 
 876      3A202573 
 876      00
 877 020d 000000   		.align	2
 878              	.LC30:
 879 0210 5352494E 		.ascii	"SRING\000"
 879      4700
 880 0216 0000     		.align	2
 881              	.LC31:
 882 0218 4F532D4F 		.ascii	"OS-OK\000"
 882      4B00
 883 021e 0000     		.align	2
 884              	.LC32:
 885 0220 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 885      52454356 
 885      3D312C31 
 885      3030300D 
 885      00
 886 0231 000000   		.align	2
 887              	.LC33:
 888 0234 6D6F6465 		.ascii	"modem_tx_time\000"
 888      6D5F7478 
 888      5F74696D 
 888      6500
 889 0242 0000     		.align	2
 890              	.LC34:
 891 0244 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 891      4F3A2043 
 891      6F756C64 
 891      206E6F74 
 891      20726563 
 892              		.section	.text.syncData,"ax",%progbits
 893              		.align	2
 894              		.global	syncData
 895              		.thumb
 896              		.thumb_func
 897              		.type	syncData, %function
 898              	syncData:
 899              	.LFB74:
 322:notoriOS.c    **** }
 323:notoriOS.c    **** 
 324:notoriOS.c    **** // ==============================================
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 24


 325:notoriOS.c    **** // Syncs data with server
 326:notoriOS.c    **** // Returns 0 when done
 327:notoriOS.c    **** // ==============================================
 328:notoriOS.c    **** uint8 syncData(){
 900              		.loc 1 328 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 1336
 903              		@ frame_needed = 1, uses_anonymous_args = 0
 904 0000 90B5     		push	{r4, r7, lr}
 905              		.cfi_def_cfa_offset 12
 906              		.cfi_offset 4, -12
 907              		.cfi_offset 7, -8
 908              		.cfi_offset 14, -4
 909 0002 ADF2545D 		subw	sp, sp, #1364
 910              		.cfi_def_cfa_offset 1376
 911 0006 06AF     		add	r7, sp, #24
 912              		.cfi_def_cfa 7, 1352
 329:notoriOS.c    ****     
 330:notoriOS.c    ****     /*
 331:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 332:notoriOS.c    ****     uint8 check = 0;
 333:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 334:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 335:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 336:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 337:notoriOS.c    ****     */
 338:notoriOS.c    **** 
 339:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 340:notoriOS.c    ****     LED_Write(1u);
 913              		.loc 1 340 0
 914 0008 0120     		movs	r0, #1
 915 000a FFF7FEFF 		bl	LED_Write
 341:notoriOS.c    ****     CyDelay(100u);
 916              		.loc 1 341 0
 917 000e 6420     		movs	r0, #100
 918 0010 FFF7FEFF 		bl	CyDelay
 342:notoriOS.c    ****     LED_Write(0u);
 919              		.loc 1 342 0
 920 0014 0020     		movs	r0, #0
 921 0016 FFF7FEFF 		bl	LED_Write
 343:notoriOS.c    **** 
 344:notoriOS.c    ****     
 345:notoriOS.c    ****     // If there's no data, not need to do anything
 346:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 922              		.loc 1 346 0
 923 001a FFF7FEFF 		bl	sizeOfDataStack
 924 001e 0346     		mov	r3, r0
 925 0020 002B     		cmp	r3, #0
 926 0022 01D1     		bne	.L32
 347:notoriOS.c    ****         return 0u;
 927              		.loc 1 347 0
 928 0024 0023     		movs	r3, #0
 929 0026 F9E1     		b	.L33
 930              	.L32:
 348:notoriOS.c    ****         }
 349:notoriOS.c    ****     
 350:notoriOS.c    ****     // Create request body, in this case influx
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 25


 351:notoriOS.c    ****     // Place body into HTTP request header
 352:notoriOS.c    ****     // Fire up modem and get it out
 353:notoriOS.c    ****      
 354:notoriOS.c    ****     
 355:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 356:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 931              		.loc 1 356 0
 932 0028 FFF7FEFF 		bl	modem_get_state
 933 002c 0346     		mov	r3, r0
 934 002e 002B     		cmp	r3, #0
 935 0030 11D1     		bne	.L34
 357:notoriOS.c    **** 
 358:notoriOS.c    ****         try_counter++;
 936              		.loc 1 358 0
 937 0032 C74B     		ldr	r3, .L46
 938 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 939 0036 0133     		adds	r3, r3, #1
 940 0038 DAB2     		uxtb	r2, r3
 941 003a C54B     		ldr	r3, .L46
 942 003c 1A70     		strb	r2, [r3]
 359:notoriOS.c    ****         	
 360:notoriOS.c    ****         if(try_counter <= 2){
 943              		.loc 1 360 0
 944 003e C44B     		ldr	r3, .L46
 945 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 946 0042 022B     		cmp	r3, #2
 947 0044 02D8     		bhi	.L35
 361:notoriOS.c    ****             modem_power_up();
 948              		.loc 1 361 0
 949 0046 FFF7FEFF 		bl	modem_power_up
 950 004a E6E1     		b	.L36
 951              	.L35:
 362:notoriOS.c    ****         }else{
 363:notoriOS.c    ****             try_counter = 0;
 952              		.loc 1 363 0
 953 004c C04B     		ldr	r3, .L46
 954 004e 0022     		movs	r2, #0
 955 0050 1A70     		strb	r2, [r3]
 364:notoriOS.c    ****             return 0u;
 956              		.loc 1 364 0
 957 0052 0023     		movs	r3, #0
 958 0054 E2E1     		b	.L33
 959              	.L34:
 365:notoriOS.c    ****             }
 366:notoriOS.c    ****             
 367:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 960              		.loc 1 367 0
 961 0056 FFF7FEFF 		bl	modem_get_state
 962 005a 0346     		mov	r3, r0
 963 005c 042B     		cmp	r3, #4
 964 005e 40F0DC81 		bne	.L36
 965              	.LBB2:
 368:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 966              		.loc 1 368 0
 967 0062 BC49     		ldr	r1, .L46+4
 968 0064 0020     		movs	r0, #0
 969 0066 FFF7FEFF 		bl	printNotif
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 26


 369:notoriOS.c    ****         
 370:notoriOS.c    ****         http_request[0] = '\0';
 970              		.loc 1 370 0
 971 006a BB4B     		ldr	r3, .L46+8
 972 006c 0022     		movs	r2, #0
 973 006e 1A70     		strb	r2, [r3]
 371:notoriOS.c    ****         http_body[0] = '\0';
 974              		.loc 1 371 0
 975 0070 BA4B     		ldr	r3, .L46+12
 976 0072 0022     		movs	r2, #0
 977 0074 1A70     		strb	r2, [r3]
 372:notoriOS.c    ****         http_route[0] = '\0';
 978              		.loc 1 372 0
 979 0076 BA4B     		ldr	r3, .L46+16
 980 0078 0022     		movs	r2, #0
 981 007a 1A70     		strb	r2, [r3]
 373:notoriOS.c    ****         //char *base = "write";
 374:notoriOS.c    ****         
 375:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power)
 376:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 377:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 982              		.loc 1 377 0
 983 007c B94B     		ldr	r3, .L46+20
 984 007e 5B69     		ldr	r3, [r3, #20]
 985 0080 07F5A260 		add	r0, r7, #1296
 986 0084 B84A     		ldr	r2, .L46+24
 987 0086 1421     		movs	r1, #20
 988 0088 FFF7FEFF 		bl	snprintf
 378:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 989              		.loc 1 378 0
 990 008c FFF7FEFF 		bl	getTimeStamp
 991 0090 0246     		mov	r2, r0
 992 0092 07F5A263 		add	r3, r7, #1296
 993 0096 1946     		mov	r1, r3
 994 0098 B448     		ldr	r0, .L46+28
 995 009a FFF7FEFF 		bl	pushData
 379:notoriOS.c    ****         
 380:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 381:notoriOS.c    ****         char c_try_counter[20];
 382:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 996              		.loc 1 382 0
 997 009e AC4B     		ldr	r3, .L46
 998 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 999 00a2 07F2FC40 		addw	r0, r7, #1276
 1000 00a6 B04A     		ldr	r2, .L46+24
 1001 00a8 1421     		movs	r1, #20
 1002 00aa FFF7FEFF 		bl	snprintf
 383:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 1003              		.loc 1 383 0
 1004 00ae FFF7FEFF 		bl	getTimeStamp
 1005 00b2 0246     		mov	r2, r0
 1006 00b4 07F2FC43 		addw	r3, r7, #1276
 1007 00b8 1946     		mov	r1, r3
 1008 00ba AD48     		ldr	r0, .L46+32
 1009 00bc FFF7FEFF 		bl	pushData
 384:notoriOS.c    ****         
 385:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 27


 386:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 387:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 388:notoriOS.c    ****         if(buffer_overflow == false){
 1010              		.loc 1 388 0
 1011 00c0 AC4B     		ldr	r3, .L46+36
 1012 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1013 00c4 83F00103 		eor	r3, r3, #1
 1014 00c8 DBB2     		uxtb	r3, r3
 1015 00ca 002B     		cmp	r3, #0
 1016 00cc 16D0     		beq	.L37
 1017              	.LBB3:
 389:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 1018              		.loc 1 389 0
 1019 00ce FFF7FEFF 		bl	sizeOfDataStack
 1020 00d2 0346     		mov	r3, r0
 1021 00d4 A7F83035 		strh	r3, [r7, #1328]	@ movhi
 390:notoriOS.c    ****             char c_data_count_sent[20];
 391:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 1022              		.loc 1 391 0
 1023 00d8 B7F83035 		ldrh	r3, [r7, #1328]
 1024 00dc 07F2D440 		addw	r0, r7, #1236
 1025 00e0 A14A     		ldr	r2, .L46+24
 1026 00e2 1421     		movs	r1, #20
 1027 00e4 FFF7FEFF 		bl	snprintf
 392:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1028              		.loc 1 392 0
 1029 00e8 FFF7FEFF 		bl	getTimeStamp
 1030 00ec 0246     		mov	r2, r0
 1031 00ee 07F2D443 		addw	r3, r7, #1236
 1032 00f2 1946     		mov	r1, r3
 1033 00f4 A048     		ldr	r0, .L46+40
 1034 00f6 FFF7FEFF 		bl	pushData
 1035              	.LBE3:
 1036 00fa 0FE0     		b	.L38
 1037              	.L37:
 1038              	.LBB4:
 393:notoriOS.c    ****         }else{
 394:notoriOS.c    ****             char c_data_count_sent[20];
 395:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1039              		.loc 1 395 0
 1040 00fc 07F59860 		add	r0, r7, #1216
 1041 0100 9623     		movs	r3, #150
 1042 0102 994A     		ldr	r2, .L46+24
 1043 0104 1421     		movs	r1, #20
 1044 0106 FFF7FEFF 		bl	snprintf
 396:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1045              		.loc 1 396 0
 1046 010a FFF7FEFF 		bl	getTimeStamp
 1047 010e 0246     		mov	r2, r0
 1048 0110 07F59863 		add	r3, r7, #1216
 1049 0114 1946     		mov	r1, r3
 1050 0116 9848     		ldr	r0, .L46+40
 1051 0118 FFF7FEFF 		bl	pushData
 1052              	.L38:
 1053              	.LBE4:
 397:notoriOS.c    ****         }
 398:notoriOS.c    ****         
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 28


 399:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 400:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 1054              		.loc 1 400 0
 1055 011c FFF7FEFF 		bl	sizeOfDataStackDesired
 1056 0120 0346     		mov	r3, r0
 1057 0122 A7F82E35 		strh	r3, [r7, #1326]	@ movhi
 401:notoriOS.c    ****         char c_data_count_desired[20];
 402:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 403:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1058              		.loc 1 403 0
 1059 0126 B7F82E35 		ldrh	r3, [r7, #1326]
 1060 012a 013B     		subs	r3, r3, #1
 1061 012c 07F59D60 		add	r0, r7, #1256
 1062 0130 8D4A     		ldr	r2, .L46+24
 1063 0132 1421     		movs	r1, #20
 1064 0134 FFF7FEFF 		bl	snprintf
 404:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
 1065              		.loc 1 404 0
 1066 0138 FFF7FEFF 		bl	getTimeStamp
 1067 013c 0246     		mov	r2, r0
 1068 013e 07F59D63 		add	r3, r7, #1256
 1069 0142 1946     		mov	r1, r3
 1070 0144 8D48     		ldr	r0, .L46+44
 1071 0146 FFF7FEFF 		bl	pushData
 405:notoriOS.c    ****         
 406:notoriOS.c    ****         // Construct HTPP request
 407:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1072              		.loc 1 407 0
 1073 014a 8D49     		ldr	r1, .L46+48
 1074 014c 0020     		movs	r0, #0
 1075 014e FFF7FEFF 		bl	printNotif
 408:notoriOS.c    ****         
 409:notoriOS.c    ****         // Old influx API
 410:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 411:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1076              		.loc 1 411 0
 1077 0152 8C4B     		ldr	r3, .L46+52
 1078 0154 8C4A     		ldr	r2, .L46+56
 1079 0156 8D49     		ldr	r1, .L46+60
 1080 0158 8148     		ldr	r0, .L46+16
 1081 015a FFF7FEFF 		bl	construct_malcom_route
 412:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1082              		.loc 1 412 0
 1083 015e 804A     		ldr	r2, .L46+16
 1084 0160 8B49     		ldr	r1, .L46+64
 1085 0162 0020     		movs	r0, #0
 1086 0164 FFF7FEFF 		bl	printNotif
 413:notoriOS.c    ****         
 414:notoriOS.c    ****         //OLD INFLUX API
 415:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 416:notoriOS.c    ****         construct_malcom_body(http_body);
 1087              		.loc 1 416 0
 1088 0168 7C48     		ldr	r0, .L46+12
 1089 016a FFF7FEFF 		bl	construct_malcom_body
 417:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1090              		.loc 1 417 0
 1091 016e 894B     		ldr	r3, .L46+68
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 29


 1092 0170 5B6E     		ldr	r3, [r3, #100]
 1093 0172 894A     		ldr	r2, .L46+72
 1094 0174 0592     		str	r2, [sp, #20]
 1095 0176 0022     		movs	r2, #0
 1096 0178 0492     		str	r2, [sp, #16]
 1097 017a 884A     		ldr	r2, .L46+76
 1098 017c 0392     		str	r2, [sp, #12]
 1099 017e 884A     		ldr	r2, .L46+80
 1100 0180 0292     		str	r2, [sp, #8]
 1101 0182 884A     		ldr	r2, .L46+84
 1102 0184 0192     		str	r2, [sp, #4]
 1103 0186 0093     		str	r3, [sp]
 1104 0188 754B     		ldr	r3, .L46+16
 1105 018a 824A     		ldr	r2, .L46+68
 1106 018c 7349     		ldr	r1, .L46+12
 1107 018e 7248     		ldr	r0, .L46+8
 1108 0190 FFF7FEFF 		bl	construct_generic_HTTP_request
 418:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1109              		.loc 1 418 0
 1110 0194 704A     		ldr	r2, .L46+8
 1111 0196 8449     		ldr	r1, .L46+88
 1112 0198 0020     		movs	r0, #0
 1113 019a FFF7FEFF 		bl	printNotif
 419:notoriOS.c    ****         
 420:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 421:notoriOS.c    ****         // Open port and begin command line sequence
 422:notoriOS.c    ****         char portConfig[200];
 423:notoriOS.c    ****         uint8 status = 0u;
 1114              		.loc 1 423 0
 1115 019e 0023     		movs	r3, #0
 1116 01a0 87F82D35 		strb	r3, [r7, #1325]
 424:notoriOS.c    ****         
 425:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1117              		.loc 1 425 0
 1118 01a4 7B4B     		ldr	r3, .L46+68
 1119 01a6 5A6E     		ldr	r2, [r3, #100]
 1120 01a8 3846     		mov	r0, r7
 1121 01aa 7A4B     		ldr	r3, .L46+68
 1122 01ac 0093     		str	r3, [sp]
 1123 01ae 1346     		mov	r3, r2
 1124 01b0 7E4A     		ldr	r2, .L46+92
 1125 01b2 C821     		movs	r1, #200
 1126 01b4 FFF7FEFF 		bl	snprintf
 426:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1127              		.loc 1 426 0
 1128 01b8 3B46     		mov	r3, r7
 1129 01ba 1A46     		mov	r2, r3
 1130 01bc 7C49     		ldr	r1, .L46+96
 1131 01be 0020     		movs	r0, #0
 1132 01c0 FFF7FEFF 		bl	printNotif
 427:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1133              		.loc 1 427 0
 1134 01c4 3B46     		mov	r3, r7
 1135 01c6 42F21072 		movw	r2, #10000
 1136 01ca 7A49     		ldr	r1, .L46+100
 1137 01cc 1846     		mov	r0, r3
 1138 01ce FFF7FEFF 		bl	at_write_command
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 30


 1139 01d2 0346     		mov	r3, r0
 1140 01d4 87F82D35 		strb	r3, [r7, #1325]
 428:notoriOS.c    ****         
 429:notoriOS.c    ****         // create character pointer to chunk through the http_request
 430:notoriOS.c    ****         char *chunk;
 431:notoriOS.c    ****         // Set chunk to start where http_request starts
 432:notoriOS.c    ****         chunk = http_request;
 1141              		.loc 1 432 0
 1142 01d8 5F4B     		ldr	r3, .L46+8
 1143 01da C7F83435 		str	r3, [r7, #1332]
 433:notoriOS.c    ****         // variable for the number of packets to send
 434:notoriOS.c    ****         int8 packets;
 435:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1144              		.loc 1 435 0
 1145 01de 5E48     		ldr	r0, .L46+8
 1146 01e0 FFF7FEFF 		bl	strlen
 1147 01e4 0246     		mov	r2, r0
 1148 01e6 744B     		ldr	r3, .L46+104
 1149 01e8 A3FB0223 		umull	r2, r3, r3, r2
 1150 01ec 5B09     		lsrs	r3, r3, #5
 1151 01ee 1846     		mov	r0, r3
 1152 01f0 FFF7FEFF 		bl	__aeabi_ui2d
 1153 01f4 4FF00002 		mov	r2, #0
 1154 01f8 704B     		ldr	r3, .L46+108
 1155 01fa FFF7FEFF 		bl	nextafter
 1156 01fe 0346     		mov	r3, r0
 1157 0200 0C46     		mov	r4, r1
 1158 0202 1846     		mov	r0, r3
 1159 0204 2146     		mov	r1, r4
 1160 0206 FFF7FEFF 		bl	ceil
 1161 020a 0346     		mov	r3, r0
 1162 020c 0C46     		mov	r4, r1
 1163 020e 1846     		mov	r0, r3
 1164 0210 2146     		mov	r1, r4
 1165 0212 FFF7FEFF 		bl	__aeabi_d2iz
 1166 0216 0346     		mov	r3, r0
 1167 0218 87F82C35 		strb	r3, [r7, #1324]
 436:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1168              		.loc 1 436 0
 1169 021c 4E48     		ldr	r0, .L46+8
 1170 021e FFF7FEFF 		bl	strlen
 1171 0222 0346     		mov	r3, r0
 1172 0224 1A46     		mov	r2, r3
 1173 0226 6649     		ldr	r1, .L46+112
 1174 0228 0020     		movs	r0, #0
 1175 022a FFF7FEFF 		bl	printNotif
 437:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1176              		.loc 1 437 0
 1177 022e 97F92C35 		ldrsb	r3, [r7, #1324]
 1178 0232 1A46     		mov	r2, r3
 1179 0234 6349     		ldr	r1, .L46+116
 1180 0236 0020     		movs	r0, #0
 1181 0238 FFF7FEFF 		bl	printNotif
 1182              	.LBB5:
 438:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 439:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1183              		.loc 1 439 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 31


 1184 023c 0023     		movs	r3, #0
 1185 023e 87F83335 		strb	r3, [r7, #1331]
 1186 0242 53E0     		b	.L39
 1187              	.L42:
 1188              	.LBB6:
 440:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 441:notoriOS.c    ****             char http_chunk[1001];
 442:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 443:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 444:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1189              		.loc 1 444 0
 1190 0244 4FF47A72 		mov	r2, #1000
 1191 0248 5F49     		ldr	r1, .L46+120
 1192 024a 6048     		ldr	r0, .L46+124
 1193 024c FFF7FEFF 		bl	at_write_command
 1194 0250 0346     		mov	r3, r0
 1195 0252 87F82D35 		strb	r3, [r7, #1325]
 445:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 446:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1196              		.loc 1 446 0
 1197 0256 07F1C800 		add	r0, r7, #200
 1198 025a D7F83435 		ldr	r3, [r7, #1332]
 1199 025e 544A     		ldr	r2, .L46+96
 1200 0260 4FF4FA71 		mov	r1, #500
 1201 0264 FFF7FEFF 		bl	snprintf
 447:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 448:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1202              		.loc 1 448 0
 1203 0268 07F1C803 		add	r3, r7, #200
 1204 026c 1846     		mov	r0, r3
 1205 026e FFF7FEFF 		bl	strlen
 1206 0272 0346     		mov	r3, r0
 1207 0274 1A46     		mov	r2, r3
 1208 0276 07F1C803 		add	r3, r7, #200
 1209 027a 1344     		add	r3, r3, r2
 1210 027c 5449     		ldr	r1, .L46+128
 1211 027e 1A46     		mov	r2, r3
 1212 0280 0B46     		mov	r3, r1
 1213 0282 1B88     		ldrh	r3, [r3]	@ unaligned
 1214 0284 1380     		strh	r3, [r2]	@ unaligned
 449:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1215              		.loc 1 449 0
 1216 0286 97F93325 		ldrsb	r2, [r7, #1331]
 1217 028a 07F1C803 		add	r3, r7, #200
 1218 028e 5149     		ldr	r1, .L46+132
 1219 0290 0020     		movs	r0, #0
 1220 0292 FFF7FEFF 		bl	printNotif
 450:notoriOS.c    ****             // Send data to server
 451:notoriOS.c    ****             if ((packet+1) != packets){
 1221              		.loc 1 451 0
 1222 0296 97F93335 		ldrsb	r3, [r7, #1331]
 1223 029a 5A1C     		adds	r2, r3, #1
 1224 029c 97F92C35 		ldrsb	r3, [r7, #1324]
 1225 02a0 9A42     		cmp	r2, r3
 1226 02a2 11D0     		beq	.L40
 452:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1227              		.loc 1 452 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 32


 1228 02a4 07F1C803 		add	r3, r7, #200
 1229 02a8 41F28832 		movw	r2, #5000
 1230 02ac 4149     		ldr	r1, .L46+100
 1231 02ae 1846     		mov	r0, r3
 1232 02b0 FFF7FEFF 		bl	at_write_command
 1233 02b4 0346     		mov	r3, r0
 1234 02b6 87F82D35 		strb	r3, [r7, #1325]
 453:notoriOS.c    ****                 // Move the pointer forward 
 454:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1235              		.loc 1 454 0
 1236 02ba D7F83435 		ldr	r3, [r7, #1332]
 1237 02be 03F2F313 		addw	r3, r3, #499
 1238 02c2 C7F83435 		str	r3, [r7, #1332]
 1239 02c6 0AE0     		b	.L41
 1240              	.L40:
 455:notoriOS.c    ****             }else{
 456:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
 1241              		.loc 1 456 0
 1242 02c8 07F1C803 		add	r3, r7, #200
 1243 02cc 41F28832 		movw	r2, #5000
 1244 02d0 4149     		ldr	r1, .L46+136
 1245 02d2 1846     		mov	r0, r3
 1246 02d4 FFF7FEFF 		bl	at_write_command
 1247 02d8 0346     		mov	r3, r0
 1248 02da 87F82D35 		strb	r3, [r7, #1325]
 1249              	.L41:
 1250              	.LBE6:
 439:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1251              		.loc 1 439 0 discriminator 2
 1252 02de 97F93335 		ldrsb	r3, [r7, #1331]
 1253 02e2 DBB2     		uxtb	r3, r3
 1254 02e4 0133     		adds	r3, r3, #1
 1255 02e6 DBB2     		uxtb	r3, r3
 1256 02e8 87F83335 		strb	r3, [r7, #1331]
 1257              	.L39:
 439:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1258              		.loc 1 439 0 is_stmt 0 discriminator 1
 1259 02ec 97F93325 		ldrsb	r2, [r7, #1331]
 1260 02f0 97F92C35 		ldrsb	r3, [r7, #1324]
 1261 02f4 9A42     		cmp	r2, r3
 1262 02f6 A5DB     		blt	.L42
 1263              	.LBE5:
 457:notoriOS.c    ****             }
 458:notoriOS.c    ****             
 459:notoriOS.c    ****         }
 460:notoriOS.c    ****         
 461:notoriOS.c    ****         // Read received buffer
 462:notoriOS.c    ****         // A good write will return code "OS-OK"
 463:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 464:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 465:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1264              		.loc 1 465 0 is_stmt 1
 1265 02f8 41F28832 		movw	r2, #5000
 1266 02fc 3749     		ldr	r1, .L46+140
 1267 02fe 3848     		ldr	r0, .L46+144
 1268 0300 FFF7FEFF 		bl	at_write_command
 1269 0304 0346     		mov	r3, r0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 33


 1270 0306 87F82D35 		strb	r3, [r7, #1325]
 466:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 467:notoriOS.c    ****     
 468:notoriOS.c    ****   
 469:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 470:notoriOS.c    ****         if(status == 1u){
 1271              		.loc 1 470 0
 1272 030a 97F82D35 		ldrb	r3, [r7, #1325]	@ zero_extendqisi2
 1273 030e 012B     		cmp	r3, #1
 1274 0310 6CD1     		bne	.L43
 1275              	.LBB7:
 471:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1276              		.loc 1 471 0
 1277 0312 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 472:notoriOS.c    ****             Clear_Data_Stack();
 1278              		.loc 1 472 0
 1279 0316 FFF7FEFF 		bl	Clear_Data_Stack
 473:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1280              		.loc 1 473 0
 1281 031a FFF7FEFF 		bl	getTimeStamp
 1282 031e 0246     		mov	r2, r0
 1283 0320 304B     		ldr	r3, .L46+148
 1284 0322 1B68     		ldr	r3, [r3]
 1285 0324 D31A     		subs	r3, r2, r3
 1286 0326 C7F82835 		str	r3, [r7, #1320]
 474:notoriOS.c    ****             char s_send_time[10];
 475:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1287              		.loc 1 475 0
 1288 032a 07F2B440 		addw	r0, r7, #1204
 1289 032e D7F82835 		ldr	r3, [r7, #1320]
 1290 0332 0D4A     		ldr	r2, .L46+24
 1291 0334 0A21     		movs	r1, #10
 1292 0336 FFF7FEFF 		bl	snprintf
 476:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1293              		.loc 1 476 0
 1294 033a FFF7FEFF 		bl	getTimeStamp
 1295 033e 0246     		mov	r2, r0
 1296 0340 07F2B443 		addw	r3, r7, #1204
 1297 0344 1946     		mov	r1, r3
 1298 0346 2848     		ldr	r0, .L46+152
 1299 0348 FFF7FEFF 		bl	pushData
 1300              	.LBE7:
 1301 034c 52E0     		b	.L44
 1302              	.L47:
 1303 034e 00BF     		.align	2
 1304              	.L46:
 1305 0350 00000000 		.word	try_counter
 1306 0354 C0000000 		.word	.LC7
 1307 0358 00000000 		.word	http_request
 1308 035c 00000000 		.word	http_body
 1309 0360 00000000 		.word	http_route
 1310 0364 00000000 		.word	modem_stats
 1311 0368 3C000000 		.word	.LC2
 1312 036c D0000000 		.word	.LC8
 1313 0370 D8000000 		.word	.LC9
 1314 0374 00000000 		.word	buffer_overflow
 1315 0378 E4000000 		.word	.LC10
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 34


 1316 037c F4000000 		.word	.LC11
 1317 0380 08010000 		.word	.LC12
 1318 0384 1C010000 		.word	.LC13
 1319 0388 28000000 		.word	modem_info+40
 1320 038c 48010000 		.word	.LC14
 1321 0390 58010000 		.word	.LC15
 1322 0394 00000000 		.word	system_settings
 1323 0398 68010000 		.word	.LC16
 1324 039c 6C010000 		.word	.LC17
 1325 03a0 70010000 		.word	.LC18
 1326 03a4 78010000 		.word	.LC19
 1327 03a8 80010000 		.word	.LC20
 1328 03ac 98010000 		.word	.LC21
 1329 03b0 B4010000 		.word	.LC22
 1330 03b4 B8010000 		.word	.LC23
 1331 03b8 D34D6210 		.word	274877907
 1332 03bc 00407F40 		.word	1082081280
 1333 03c0 BC010000 		.word	.LC24
 1334 03c4 D4010000 		.word	.LC25
 1335 03c8 E8010000 		.word	.LC26
 1336 03cc EC010000 		.word	.LC27
 1337 03d0 FC010000 		.word	.LC28
 1338 03d4 00020000 		.word	.LC29
 1339 03d8 10020000 		.word	.LC30
 1340 03dc 18020000 		.word	.LC31
 1341 03e0 20020000 		.word	.LC32
 1342 03e4 00000000 		.word	modem_start_time_stamp
 1343 03e8 34020000 		.word	.LC33
 1344              	.L43:
 477:notoriOS.c    ****         }else{
 478:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1345              		.loc 1 478 0
 1346 03ec 0E49     		ldr	r1, .L48
 1347 03ee 0220     		movs	r0, #2
 1348 03f0 FFF7FEFF 		bl	printNotif
 1349              	.L44:
 479:notoriOS.c    ****         }
 480:notoriOS.c    ****          
 481:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 482:notoriOS.c    ****         long network_time = modem_get_network_time();
 1350              		.loc 1 482 0
 1351 03f4 FFF7FEFF 		bl	modem_get_network_time
 1352 03f8 C7F82405 		str	r0, [r7, #1316]
 483:notoriOS.c    ****         if(network_time != 0){
 1353              		.loc 1 483 0
 1354 03fc D7F82435 		ldr	r3, [r7, #1316]
 1355 0400 002B     		cmp	r3, #0
 1356 0402 03D0     		beq	.L45
 484:notoriOS.c    ****            setTime(network_time);
 1357              		.loc 1 484 0
 1358 0404 D7F82405 		ldr	r0, [r7, #1316]
 1359 0408 FFF7FEFF 		bl	setTime
 1360              	.L45:
 485:notoriOS.c    ****         }
 486:notoriOS.c    ****         
 487:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 488:notoriOS.c    ****         // If not -- keep the statck and try next time
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 35


 489:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 490:notoriOS.c    ****         modem_power_down();
 1361              		.loc 1 490 0
 1362 040c FFF7FEFF 		bl	modem_power_down
 491:notoriOS.c    ****         
 492:notoriOS.c    ****         try_counter = 0u;
 1363              		.loc 1 492 0
 1364 0410 064B     		ldr	r3, .L48+4
 1365 0412 0022     		movs	r2, #0
 1366 0414 1A70     		strb	r2, [r3]
 493:notoriOS.c    ****         return 0u;
 1367              		.loc 1 493 0
 1368 0416 0023     		movs	r3, #0
 1369 0418 00E0     		b	.L33
 1370              	.L36:
 1371              	.LBE2:
 494:notoriOS.c    ****     }
 495:notoriOS.c    ****       
 496:notoriOS.c    ****       return 1u; // Not done yet
 1372              		.loc 1 496 0
 1373 041a 0123     		movs	r3, #1
 1374              	.L33:
 497:notoriOS.c    **** }
 1375              		.loc 1 497 0 discriminator 1
 1376 041c 1846     		mov	r0, r3
 1377 041e 07F23C57 		addw	r7, r7, #1340
 1378              		.cfi_def_cfa_offset 12
 1379 0422 BD46     		mov	sp, r7
 1380              		.cfi_def_cfa_register 13
 1381              		@ sp needed
 1382 0424 90BD     		pop	{r4, r7, pc}
 1383              	.L49:
 1384 0426 00BF     		.align	2
 1385              	.L48:
 1386 0428 44020000 		.word	.LC34
 1387 042c 00000000 		.word	try_counter
 1388              		.cfi_endproc
 1389              	.LFE74:
 1390              		.size	syncData, .-syncData
 1391              		.section	.text.configureRemoteParams,"ax",%progbits
 1392              		.align	2
 1393              		.global	configureRemoteParams
 1394              		.thumb
 1395              		.thumb_func
 1396              		.type	configureRemoteParams, %function
 1397              	configureRemoteParams:
 1398              	.LFB75:
 498:notoriOS.c    **** 
 499:notoriOS.c    **** // ==============================================
 500:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 501:notoriOS.c    **** // Returns 0 when done
 502:notoriOS.c    **** // ==============================================
 503:notoriOS.c    **** uint8 configureRemoteParams(){
 1399              		.loc 1 503 0
 1400              		.cfi_startproc
 1401              		@ args = 0, pretend = 0, frame = 8
 1402              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 36


 1403 0000 80B5     		push	{r7, lr}
 1404              		.cfi_def_cfa_offset 8
 1405              		.cfi_offset 7, -8
 1406              		.cfi_offset 14, -4
 1407 0002 82B0     		sub	sp, sp, #8
 1408              		.cfi_def_cfa_offset 16
 1409 0004 00AF     		add	r7, sp, #0
 1410              		.cfi_def_cfa_register 7
 504:notoriOS.c    ****     
 505:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1411              		.loc 1 505 0
 1412 0006 FFF7FEFF 		bl	modem_get_state
 1413 000a 0346     		mov	r3, r0
 1414 000c 002B     		cmp	r3, #0
 1415 000e 02D1     		bne	.L51
 506:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 507:notoriOS.c    ****         modem_power_up();
 1416              		.loc 1 507 0
 1417 0010 FFF7FEFF 		bl	modem_power_up
 1418 0014 11E0     		b	.L52
 1419              	.L51:
 508:notoriOS.c    ****             
 509:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1420              		.loc 1 509 0
 1421 0016 FFF7FEFF 		bl	modem_get_state
 1422 001a 0346     		mov	r3, r0
 1423 001c 042B     		cmp	r3, #4
 1424 001e 0CD1     		bne	.L52
 1425              	.LBB8:
 510:notoriOS.c    ****         
 511:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 512:notoriOS.c    ****         
 513:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 514:notoriOS.c    ****         long network_time = modem_get_network_time();
 1426              		.loc 1 514 0
 1427 0020 FFF7FEFF 		bl	modem_get_network_time
 1428 0024 7860     		str	r0, [r7, #4]
 515:notoriOS.c    ****         if(network_time != 0){
 1429              		.loc 1 515 0
 1430 0026 7B68     		ldr	r3, [r7, #4]
 1431 0028 002B     		cmp	r3, #0
 1432 002a 02D0     		beq	.L53
 516:notoriOS.c    ****             setTime(network_time);
 1433              		.loc 1 516 0
 1434 002c 7868     		ldr	r0, [r7, #4]
 1435 002e FFF7FEFF 		bl	setTime
 1436              	.L53:
 517:notoriOS.c    ****         }
 518:notoriOS.c    ****         
 519:notoriOS.c    ****         // Get GPS coordinates
 520:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 521:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 522:notoriOS.c    ****         modem_power_down();
 1437              		.loc 1 522 0
 1438 0032 FFF7FEFF 		bl	modem_power_down
 523:notoriOS.c    ****         return 0u;
 1439              		.loc 1 523 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 37


 1440 0036 0023     		movs	r3, #0
 1441 0038 00E0     		b	.L54
 1442              	.L52:
 1443              	.LBE8:
 524:notoriOS.c    ****         
 525:notoriOS.c    ****     }
 526:notoriOS.c    ****     
 527:notoriOS.c    ****     return 1u;
 1444              		.loc 1 527 0
 1445 003a 0123     		movs	r3, #1
 1446              	.L54:
 528:notoriOS.c    **** }
 1447              		.loc 1 528 0
 1448 003c 1846     		mov	r0, r3
 1449 003e 0837     		adds	r7, r7, #8
 1450              		.cfi_def_cfa_offset 8
 1451 0040 BD46     		mov	sp, r7
 1452              		.cfi_def_cfa_register 13
 1453              		@ sp needed
 1454 0042 80BD     		pop	{r7, pc}
 1455              		.cfi_endproc
 1456              	.LFE75:
 1457              		.size	configureRemoteParams, .-configureRemoteParams
 1458              		.section	.rodata
 1459 026f 00       		.align	2
 1460              	.LC35:
 1461 0270 256C6400 		.ascii	"%ld\000"
 1462              		.align	2
 1463              	.LC36:
 1464 0274 6D617862 		.ascii	"maxbotix_depth=%s\000"
 1464      6F746978 
 1464      5F646570 
 1464      74683D25 
 1464      7300
 1465 0286 0000     		.align	2
 1466              	.LC37:
 1467 0288 6D617862 		.ascii	"maxbotix_depth\000"
 1467      6F746978 
 1467      5F646570 
 1467      746800
 1468 0297 00       		.align	2
 1469              	.LC38:
 1470 0298 612B00   		.ascii	"a+\000"
 1471 029b 00       		.align	2
 1472              	.LC39:
 1473 029c 206D6178 		.ascii	" maxbotix_depth: \000"
 1473      626F7469 
 1473      785F6465 
 1473      7074683A 
 1473      2000
 1474 02ae 0000     		.align	2
 1475              	.LC40:
 1476 02b0 2000     		.ascii	" \000"
 1477 02b2 0000     		.align	2
 1478              	.LC41:
 1479 02b4 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 1479      64206E6F 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 38


 1479      74206765 
 1479      74207661 
 1479      6C696420 
 1480              		.global	__aeabi_f2d
 1481              		.align	2
 1482              	.LC42:
 1483 02e0 252E3266 		.ascii	"%.2f\000"
 1483      00
 1484 02e5 000000   		.align	2
 1485              	.LC43:
 1486 02e8 765F6261 		.ascii	"v_bat=%s\000"
 1486      743D2573 
 1486      00
 1487 02f1 000000   		.align	2
 1488              	.LC44:
 1489 02f4 765F6261 		.ascii	"v_bat\000"
 1489      7400
 1490 02fa 0000     		.align	2
 1491              	.LC45:
 1492 02fc 20766261 		.ascii	" vbat: \000"
 1492      743A2000 
 1493              		.align	2
 1494              	.LC46:
 1495 0304 70726573 		.ascii	"pressure_current=%s\000"
 1495      73757265 
 1495      5F637572 
 1495      72656E74 
 1495      3D257300 
 1496              		.align	2
 1497              	.LC47:
 1498 0318 70726573 		.ascii	"pressure_current\000"
 1498      73757265 
 1498      5F637572 
 1498      72656E74 
 1498      00
 1499 0329 000000   		.align	2
 1500              	.LC48:
 1501 032c 20707265 		.ascii	" pressure_current: \000"
 1501      73737572 
 1501      655F6375 
 1501      7272656E 
 1501      743A2000 
 1502              		.align	2
 1503              	.LC49:
 1504 0340 70726573 		.ascii	"pressure_depth=%s\000"
 1504      73757265 
 1504      5F646570 
 1504      74683D25 
 1504      7300
 1505 0352 0000     		.align	2
 1506              	.LC50:
 1507 0354 70726573 		.ascii	"pressure_depth\000"
 1507      73757265 
 1507      5F646570 
 1507      746800
 1508 0363 00       		.align	2
 1509              	.LC51:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 39


 1510 0364 20707265 		.ascii	" pressure_depth: \000"
 1510      73737572 
 1510      655F6465 
 1510      7074683A 
 1510      2000
 1511 0376 0000     		.align	2
 1512              	.LC52:
 1513 0378 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1513      64206E6F 
 1513      74206765 
 1513      74207661 
 1513      6C696420 
 1514 039f 00       		.align	2
 1515              	.LC53:
 1516 03a0 256600   		.ascii	"%f\000"
 1517 03a3 00       		.align	2
 1518              	.LC54:
 1519 03a4 70757368 		.ascii	"pushed: dissolved_oxygen_mg_L=%s\000"
 1519      65643A20 
 1519      64697373 
 1519      6F6C7665 
 1519      645F6F78 
 1520 03c5 000000   		.align	2
 1521              	.LC55:
 1522 03c8 64697373 		.ascii	"dissolved_oxygen_mg_L\000"
 1522      6F6C7665 
 1522      645F6F78 
 1522      7967656E 
 1522      5F6D675F 
 1523 03de 0000     		.align	2
 1524              	.LC56:
 1525 03e0 20646973 		.ascii	" dissolved_oxygen_mg_L: \000"
 1525      736F6C76 
 1525      65645F6F 
 1525      78796765 
 1525      6E5F6D67 
 1526 03f9 000000   		.align	2
 1527              	.LC57:
 1528 03fc 70757368 		.ascii	"pushed: temperature_C=%s\000"
 1528      65643A20 
 1528      74656D70 
 1528      65726174 
 1528      7572655F 
 1529 0415 000000   		.align	2
 1530              	.LC58:
 1531 0418 74656D70 		.ascii	"temperature_C\000"
 1531      65726174 
 1531      7572655F 
 1531      4300
 1532 0426 0000     		.align	2
 1533              	.LC59:
 1534 0428 2074656D 		.ascii	" temperature_C: \000"
 1534      70657261 
 1534      74757265 
 1534      5F433A20 
 1534      00
 1535              		.section	.text.makeMeasurements,"ax",%progbits
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 40


 1536              		.align	2
 1537              		.global	makeMeasurements
 1538              		.thumb
 1539              		.thumb_func
 1540              		.type	makeMeasurements, %function
 1541              	makeMeasurements:
 1542              	.LFB76:
 529:notoriOS.c    **** 
 530:notoriOS.c    **** 
 531:notoriOS.c    **** // ==============================================
 532:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 533:notoriOS.c    **** // Returns 0 when finished
 534:notoriOS.c    **** // ==============================================
 535:notoriOS.c    **** uint8 makeMeasurements(){
 1543              		.loc 1 535 0
 1544              		.cfi_startproc
 1545              		@ args = 0, pretend = 0, frame = 216
 1546              		@ frame_needed = 1, uses_anonymous_args = 0
 1547 0000 90B5     		push	{r4, r7, lr}
 1548              		.cfi_def_cfa_offset 12
 1549              		.cfi_offset 4, -12
 1550              		.cfi_offset 7, -8
 1551              		.cfi_offset 14, -4
 1552 0002 B9B0     		sub	sp, sp, #228
 1553              		.cfi_def_cfa_offset 240
 1554 0004 02AF     		add	r7, sp, #8
 1555              		.cfi_def_cfa 7, 232
 536:notoriOS.c    ****     
 537:notoriOS.c    ****     // Get clock time and save to timeStamp
 538:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1556              		.loc 1 538 0
 1557 0006 FFF7FEFF 		bl	getTimeStamp
 1558 000a C7F8D400 		str	r0, [r7, #212]
 539:notoriOS.c    ****     char c_timeStamp[32];
 540:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1559              		.loc 1 540 0
 1560 000e 07F1B400 		add	r0, r7, #180
 1561 0012 D7F8D430 		ldr	r3, [r7, #212]
 1562 0016 BF4A     		ldr	r2, .L64
 1563 0018 2021     		movs	r1, #32
 1564 001a FFF7FEFF 		bl	snprintf
 541:notoriOS.c    ****     
 542:notoriOS.c    ****     // Holds string for value that will be written 
 543:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 544:notoriOS.c    ****     
 545:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 546:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 1565              		.loc 1 546 0
 1566 001e BE4B     		ldr	r3, .L64+4
 1567 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1568 0022 002B     		cmp	r3, #0
 1569 0024 3CD1     		bne	.L56
 1570              	.LBB9:
 547:notoriOS.c    ****         
 548:notoriOS.c    ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
 549:notoriOS.c    ****         level_sensor_t m_level_sensor;
 550:notoriOS.c    ****         
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 41


 551:notoriOS.c    ****         // Take level sensor readings and save them to m_level_sensor
 552:notoriOS.c    ****         m_level_sensor = level_sensor_take_reading();
 1571              		.loc 1 552 0
 1572 0026 07F17003 		add	r3, r7, #112
 1573 002a 1846     		mov	r0, r3
 1574 002c FFF7FEFF 		bl	level_sensor_take_reading
 553:notoriOS.c    ****     
 554:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 555:notoriOS.c    ****         if(m_level_sensor.num_valid_readings > 0){
 1575              		.loc 1 555 0
 1576 0030 97F88830 		ldrb	r3, [r7, #136]	@ zero_extendqisi2
 1577 0034 002B     		cmp	r3, #0
 1578 0036 2FD0     		beq	.L57
 556:notoriOS.c    ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 1579              		.loc 1 556 0
 1580 0038 B7F98630 		ldrsh	r3, [r7, #134]
 1581 003c 07F1A000 		add	r0, r7, #160
 1582 0040 B64A     		ldr	r2, .L64+8
 1583 0042 1421     		movs	r1, #20
 1584 0044 FFF7FEFF 		bl	snprintf
 557:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 1585              		.loc 1 557 0
 1586 0048 07F1A003 		add	r3, r7, #160
 1587 004c 1A46     		mov	r2, r3
 1588 004e B449     		ldr	r1, .L64+12
 1589 0050 0020     		movs	r0, #0
 1590 0052 FFF7FEFF 		bl	printNotif
 558:notoriOS.c    ****             pushData("maxbotix_depth",value,timeStamp);
 1591              		.loc 1 558 0
 1592 0056 07F1A003 		add	r3, r7, #160
 1593 005a D7F8D420 		ldr	r2, [r7, #212]
 1594 005e 1946     		mov	r1, r3
 1595 0060 B048     		ldr	r0, .L64+16
 1596 0062 FFF7FEFF 		bl	pushData
 559:notoriOS.c    ****             
 560:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 561:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1597              		.loc 1 561 0
 1598 0066 07F1B403 		add	r3, r7, #180
 1599 006a 1A46     		mov	r2, r3
 1600 006c AE49     		ldr	r1, .L64+20
 1601 006e AF48     		ldr	r0, .L64+24
 1602 0070 FFF7FEFF 		bl	SD_write
 562:notoriOS.c    ****             SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 1603              		.loc 1 562 0
 1604 0074 AE4A     		ldr	r2, .L64+28
 1605 0076 AC49     		ldr	r1, .L64+20
 1606 0078 AC48     		ldr	r0, .L64+24
 1607 007a FFF7FEFF 		bl	SD_write
 563:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1608              		.loc 1 563 0
 1609 007e 07F1A003 		add	r3, r7, #160
 1610 0082 1A46     		mov	r2, r3
 1611 0084 A849     		ldr	r1, .L64+20
 1612 0086 A948     		ldr	r0, .L64+24
 1613 0088 FFF7FEFF 		bl	SD_write
 564:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 42


 1614              		.loc 1 564 0
 1615 008c A94A     		ldr	r2, .L64+32
 1616 008e A649     		ldr	r1, .L64+20
 1617 0090 A648     		ldr	r0, .L64+24
 1618 0092 FFF7FEFF 		bl	SD_write
 1619 0096 03E0     		b	.L56
 1620              	.L57:
 565:notoriOS.c    ****         }else{
 566:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 1621              		.loc 1 566 0
 1622 0098 A749     		ldr	r1, .L64+36
 1623 009a 0220     		movs	r0, #2
 1624 009c FFF7FEFF 		bl	printNotif
 1625              	.L56:
 1626              	.LBE9:
 567:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 568:notoriOS.c    ****         }
 569:notoriOS.c    ****     }
 570:notoriOS.c    ****     
 571:notoriOS.c    ****     
 572:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 573:notoriOS.c    ****     voltage_t m_voltage;
 574:notoriOS.c    ****     
 575:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 576:notoriOS.c    ****     m_voltage = voltage_take_readings();
 1627              		.loc 1 576 0
 1628 00a0 07F18C03 		add	r3, r7, #140
 1629 00a4 1846     		mov	r0, r3
 1630 00a6 FFF7FEFF 		bl	voltage_take_readings
 577:notoriOS.c    ****     
 578:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 579:notoriOS.c    ****     if(m_voltage.valid){
 1631              		.loc 1 579 0
 1632 00aa 97F89C30 		ldrb	r3, [r7, #156]	@ zero_extendqisi2
 1633 00ae 002B     		cmp	r3, #0
 1634 00b0 00F0B480 		beq	.L59
 580:notoriOS.c    ****         // battery voltage data
 581:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 1635              		.loc 1 581 0
 1636 00b4 D7F88C30 		ldr	r3, [r7, #140]	@ float
 1637 00b8 1846     		mov	r0, r3
 1638 00ba FFF7FEFF 		bl	__aeabi_f2d
 1639 00be 0346     		mov	r3, r0
 1640 00c0 0C46     		mov	r4, r1
 1641 00c2 07F1A000 		add	r0, r7, #160
 1642 00c6 CDE90034 		strd	r3, [sp]
 1643 00ca 9C4A     		ldr	r2, .L64+40
 1644 00cc 1421     		movs	r1, #20
 1645 00ce FFF7FEFF 		bl	snprintf
 582:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 1646              		.loc 1 582 0
 1647 00d2 07F1A003 		add	r3, r7, #160
 1648 00d6 1A46     		mov	r2, r3
 1649 00d8 9949     		ldr	r1, .L64+44
 1650 00da 0020     		movs	r0, #0
 1651 00dc FFF7FEFF 		bl	printNotif
 583:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 43


 1652              		.loc 1 583 0
 1653 00e0 07F1A003 		add	r3, r7, #160
 1654 00e4 D7F8D420 		ldr	r2, [r7, #212]
 1655 00e8 1946     		mov	r1, r3
 1656 00ea 9648     		ldr	r0, .L64+48
 1657 00ec FFF7FEFF 		bl	pushData
 584:notoriOS.c    ****         
 585:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 586:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 1658              		.loc 1 586 0
 1659 00f0 904A     		ldr	r2, .L64+32
 1660 00f2 8D49     		ldr	r1, .L64+20
 1661 00f4 8D48     		ldr	r0, .L64+24
 1662 00f6 FFF7FEFF 		bl	SD_write
 587:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 1663              		.loc 1 587 0
 1664 00fa 07F1B403 		add	r3, r7, #180
 1665 00fe 1A46     		mov	r2, r3
 1666 0100 8949     		ldr	r1, .L64+20
 1667 0102 8A48     		ldr	r0, .L64+24
 1668 0104 FFF7FEFF 		bl	SD_write
 588:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 1669              		.loc 1 588 0
 1670 0108 8F4A     		ldr	r2, .L64+52
 1671 010a 8749     		ldr	r1, .L64+20
 1672 010c 8748     		ldr	r0, .L64+24
 1673 010e FFF7FEFF 		bl	SD_write
 589:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1674              		.loc 1 589 0
 1675 0112 07F1A003 		add	r3, r7, #160
 1676 0116 1A46     		mov	r2, r3
 1677 0118 8349     		ldr	r1, .L64+20
 1678 011a 8448     		ldr	r0, .L64+24
 1679 011c FFF7FEFF 		bl	SD_write
 590:notoriOS.c    ****         
 591:notoriOS.c    ****         // If node type is green infrastructure node, take pressure transducer measurements
 592:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE){
 1680              		.loc 1 592 0
 1681 0120 7D4B     		ldr	r3, .L64+4
 1682 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1683 0124 012B     		cmp	r3, #1
 1684 0126 7DD1     		bne	.L61
 1685              	.LBB10:
 593:notoriOS.c    ****             
 594:notoriOS.c    ****             // pressure transducer voltage (V) data
 595:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 596:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 597:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 598:notoriOS.c    ****             
 599:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 600:notoriOS.c    ****             pressure_t m_pressure;
 601:notoriOS.c    ****             
 602:notoriOS.c    ****             // Make pressure transducer calculators for current and depth
 603:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 1686              		.loc 1 603 0
 1687 0128 07F16004 		add	r4, r7, #96
 1688 012c 6A46     		mov	r2, sp
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 44


 1689 012e 07F19803 		add	r3, r7, #152
 1690 0132 93E80300 		ldmia	r3, {r0, r1}
 1691 0136 82E80300 		stmia	r2, {r0, r1}
 1692 013a 07F18C03 		add	r3, r7, #140
 1693 013e 0ECB     		ldmia	r3, {r1, r2, r3}
 1694 0140 2046     		mov	r0, r4
 1695 0142 FFF7FEFF 		bl	pressure_calculations
 604:notoriOS.c    ****             
 605:notoriOS.c    ****             // pressure transducer current (mA) data
 606:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 1696              		.loc 1 606 0
 1697 0146 BB6E     		ldr	r3, [r7, #104]	@ float
 1698 0148 1846     		mov	r0, r3
 1699 014a FFF7FEFF 		bl	__aeabi_f2d
 1700 014e 0346     		mov	r3, r0
 1701 0150 0C46     		mov	r4, r1
 1702 0152 07F1A000 		add	r0, r7, #160
 1703 0156 CDE90034 		strd	r3, [sp]
 1704 015a 784A     		ldr	r2, .L64+40
 1705 015c 1421     		movs	r1, #20
 1706 015e FFF7FEFF 		bl	snprintf
 607:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 1707              		.loc 1 607 0
 1708 0162 07F1A003 		add	r3, r7, #160
 1709 0166 1A46     		mov	r2, r3
 1710 0168 7849     		ldr	r1, .L64+56
 1711 016a 0020     		movs	r0, #0
 1712 016c FFF7FEFF 		bl	printNotif
 608:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 1713              		.loc 1 608 0
 1714 0170 07F1A003 		add	r3, r7, #160
 1715 0174 D7F8D420 		ldr	r2, [r7, #212]
 1716 0178 1946     		mov	r1, r3
 1717 017a 7548     		ldr	r0, .L64+60
 1718 017c FFF7FEFF 		bl	pushData
 609:notoriOS.c    ****             
 610:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 611:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1719              		.loc 1 611 0
 1720 0180 6C4A     		ldr	r2, .L64+32
 1721 0182 6949     		ldr	r1, .L64+20
 1722 0184 6948     		ldr	r0, .L64+24
 1723 0186 FFF7FEFF 		bl	SD_write
 612:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1724              		.loc 1 612 0
 1725 018a 07F1B403 		add	r3, r7, #180
 1726 018e 1A46     		mov	r2, r3
 1727 0190 6549     		ldr	r1, .L64+20
 1728 0192 6648     		ldr	r0, .L64+24
 1729 0194 FFF7FEFF 		bl	SD_write
 613:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 1730              		.loc 1 613 0
 1731 0198 6E4A     		ldr	r2, .L64+64
 1732 019a 6349     		ldr	r1, .L64+20
 1733 019c 6348     		ldr	r0, .L64+24
 1734 019e FFF7FEFF 		bl	SD_write
 614:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 45


 1735              		.loc 1 614 0
 1736 01a2 07F1A003 		add	r3, r7, #160
 1737 01a6 1A46     		mov	r2, r3
 1738 01a8 5F49     		ldr	r1, .L64+20
 1739 01aa 6048     		ldr	r0, .L64+24
 1740 01ac FFF7FEFF 		bl	SD_write
 615:notoriOS.c    ****             
 616:notoriOS.c    ****             // pressure transducer depth (ft) data
 617:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 1741              		.loc 1 617 0
 1742 01b0 FB6E     		ldr	r3, [r7, #108]	@ float
 1743 01b2 1846     		mov	r0, r3
 1744 01b4 FFF7FEFF 		bl	__aeabi_f2d
 1745 01b8 0346     		mov	r3, r0
 1746 01ba 0C46     		mov	r4, r1
 1747 01bc 07F1A000 		add	r0, r7, #160
 1748 01c0 CDE90034 		strd	r3, [sp]
 1749 01c4 5D4A     		ldr	r2, .L64+40
 1750 01c6 1421     		movs	r1, #20
 1751 01c8 FFF7FEFF 		bl	snprintf
 618:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 1752              		.loc 1 618 0
 1753 01cc 07F1A003 		add	r3, r7, #160
 1754 01d0 1A46     		mov	r2, r3
 1755 01d2 6149     		ldr	r1, .L64+68
 1756 01d4 0020     		movs	r0, #0
 1757 01d6 FFF7FEFF 		bl	printNotif
 619:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 1758              		.loc 1 619 0
 1759 01da 07F1A003 		add	r3, r7, #160
 1760 01de D7F8D420 		ldr	r2, [r7, #212]
 1761 01e2 1946     		mov	r1, r3
 1762 01e4 5D48     		ldr	r0, .L64+72
 1763 01e6 FFF7FEFF 		bl	pushData
 620:notoriOS.c    ****             
 621:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 622:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1764              		.loc 1 622 0
 1765 01ea 524A     		ldr	r2, .L64+32
 1766 01ec 4E49     		ldr	r1, .L64+20
 1767 01ee 4F48     		ldr	r0, .L64+24
 1768 01f0 FFF7FEFF 		bl	SD_write
 623:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1769              		.loc 1 623 0
 1770 01f4 07F1B403 		add	r3, r7, #180
 1771 01f8 1A46     		mov	r2, r3
 1772 01fa 4B49     		ldr	r1, .L64+20
 1773 01fc 4B48     		ldr	r0, .L64+24
 1774 01fe FFF7FEFF 		bl	SD_write
 624:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
 1775              		.loc 1 624 0
 1776 0202 574A     		ldr	r2, .L64+76
 1777 0204 4849     		ldr	r1, .L64+20
 1778 0206 4948     		ldr	r0, .L64+24
 1779 0208 FFF7FEFF 		bl	SD_write
 625:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1780              		.loc 1 625 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 46


 1781 020c 07F1A003 		add	r3, r7, #160
 1782 0210 1A46     		mov	r2, r3
 1783 0212 4549     		ldr	r1, .L64+20
 1784 0214 4548     		ldr	r0, .L64+24
 1785 0216 FFF7FEFF 		bl	SD_write
 1786 021a 03E0     		b	.L61
 1787              	.L59:
 1788              	.LBE10:
 626:notoriOS.c    ****         }    
 627:notoriOS.c    ****     }else{
 628:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 1789              		.loc 1 628 0
 1790 021c 5149     		ldr	r1, .L64+80
 1791 021e 0220     		movs	r0, #2
 1792 0220 FFF7FEFF 		bl	printNotif
 1793              	.L61:
 629:notoriOS.c    ****     }
 630:notoriOS.c    ****     
 631:notoriOS.c    ****         // If node type is dissolved oxygen, take DO measuremetns
 632:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_WQ){
 1794              		.loc 1 632 0
 1795 0224 3C4B     		ldr	r3, .L64+4
 1796 0226 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1797 0228 052B     		cmp	r3, #5
 1798 022a 6DD1     		bne	.L62
 1799              	.LBB11:
 633:notoriOS.c    ****        
 634:notoriOS.c    ****         // wq_sensor_t is a new data type we defined in level_sensor.h. We then use that data type 
 635:notoriOS.c    ****         wq_sensors_t m_wq_sensors;
 636:notoriOS.c    ****         
 637:notoriOS.c    ****         // Take readings from the wq sensors and save them to m_wq_sensors
 638:notoriOS.c    ****         m_wq_sensors = wq_take_reading();
 1800              		.loc 1 638 0
 1801 022c 3B46     		mov	r3, r7
 1802 022e 1846     		mov	r0, r3
 1803 0230 FFF7FEFF 		bl	wq_take_reading
 639:notoriOS.c    ****         
 640:notoriOS.c    ****         // Print the wq sensor readings and push the data to the data wheel
 641:notoriOS.c    ****         snprintf(value,sizeof(value),"%f",m_wq_sensors.do_reading);
 1804              		.loc 1 641 0
 1805 0234 FB6A     		ldr	r3, [r7, #44]	@ float
 1806 0236 1846     		mov	r0, r3
 1807 0238 FFF7FEFF 		bl	__aeabi_f2d
 1808 023c 0346     		mov	r3, r0
 1809 023e 0C46     		mov	r4, r1
 1810 0240 07F1A000 		add	r0, r7, #160
 1811 0244 CDE90034 		strd	r3, [sp]
 1812 0248 474A     		ldr	r2, .L64+84
 1813 024a 1421     		movs	r1, #20
 1814 024c FFF7FEFF 		bl	snprintf
 642:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"pushed: dissolved_oxygen_mg_L=%s",value);
 1815              		.loc 1 642 0
 1816 0250 07F1A003 		add	r3, r7, #160
 1817 0254 1A46     		mov	r2, r3
 1818 0256 4549     		ldr	r1, .L64+88
 1819 0258 0020     		movs	r0, #0
 1820 025a FFF7FEFF 		bl	printNotif
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 47


 643:notoriOS.c    ****         pushData("dissolved_oxygen_mg_L",value,timeStamp);
 1821              		.loc 1 643 0
 1822 025e 07F1A003 		add	r3, r7, #160
 1823 0262 D7F8D420 		ldr	r2, [r7, #212]
 1824 0266 1946     		mov	r1, r3
 1825 0268 4148     		ldr	r0, .L64+92
 1826 026a FFF7FEFF 		bl	pushData
 644:notoriOS.c    ****             
 645:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 646:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 1827              		.loc 1 646 0
 1828 026e 07F1B403 		add	r3, r7, #180
 1829 0272 1A46     		mov	r2, r3
 1830 0274 2C49     		ldr	r1, .L64+20
 1831 0276 2D48     		ldr	r0, .L64+24
 1832 0278 FFF7FEFF 		bl	SD_write
 647:notoriOS.c    ****         SD_write(Data_fileName, "a+", " dissolved_oxygen_mg_L: ");
 1833              		.loc 1 647 0
 1834 027c 3D4A     		ldr	r2, .L64+96
 1835 027e 2A49     		ldr	r1, .L64+20
 1836 0280 2A48     		ldr	r0, .L64+24
 1837 0282 FFF7FEFF 		bl	SD_write
 648:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1838              		.loc 1 648 0
 1839 0286 07F1A003 		add	r3, r7, #160
 1840 028a 1A46     		mov	r2, r3
 1841 028c 2649     		ldr	r1, .L64+20
 1842 028e 2748     		ldr	r0, .L64+24
 1843 0290 FFF7FEFF 		bl	SD_write
 649:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 1844              		.loc 1 649 0
 1845 0294 274A     		ldr	r2, .L64+32
 1846 0296 2449     		ldr	r1, .L64+20
 1847 0298 2448     		ldr	r0, .L64+24
 1848 029a FFF7FEFF 		bl	SD_write
 650:notoriOS.c    ****         
 651:notoriOS.c    ****    
 652:notoriOS.c    ****         snprintf(value,sizeof(value),"%f",m_wq_sensors.temp_reading);
 1849              		.loc 1 652 0
 1850 029e FB6D     		ldr	r3, [r7, #92]	@ float
 1851 02a0 1846     		mov	r0, r3
 1852 02a2 FFF7FEFF 		bl	__aeabi_f2d
 1853 02a6 0346     		mov	r3, r0
 1854 02a8 0C46     		mov	r4, r1
 1855 02aa 07F1A000 		add	r0, r7, #160
 1856 02ae CDE90034 		strd	r3, [sp]
 1857 02b2 2D4A     		ldr	r2, .L64+84
 1858 02b4 1421     		movs	r1, #20
 1859 02b6 FFF7FEFF 		bl	snprintf
 653:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"pushed: temperature_C=%s",value);
 1860              		.loc 1 653 0
 1861 02ba 07F1A003 		add	r3, r7, #160
 1862 02be 1A46     		mov	r2, r3
 1863 02c0 2D49     		ldr	r1, .L64+100
 1864 02c2 0020     		movs	r0, #0
 1865 02c4 FFF7FEFF 		bl	printNotif
 654:notoriOS.c    ****         pushData("temperature_C",value,timeStamp);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 48


 1866              		.loc 1 654 0
 1867 02c8 07F1A003 		add	r3, r7, #160
 1868 02cc D7F8D420 		ldr	r2, [r7, #212]
 1869 02d0 1946     		mov	r1, r3
 1870 02d2 2A48     		ldr	r0, .L64+104
 1871 02d4 FFF7FEFF 		bl	pushData
 655:notoriOS.c    ****             
 656:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 657:notoriOS.c    ****          SD_write(Data_fileName, "a+", c_timeStamp);
 1872              		.loc 1 657 0
 1873 02d8 07F1B403 		add	r3, r7, #180
 1874 02dc 1A46     		mov	r2, r3
 1875 02de 1249     		ldr	r1, .L64+20
 1876 02e0 1248     		ldr	r0, .L64+24
 1877 02e2 FFF7FEFF 		bl	SD_write
 658:notoriOS.c    ****         SD_write(Data_fileName, "a+", " temperature_C: ");
 1878              		.loc 1 658 0
 1879 02e6 264A     		ldr	r2, .L64+108
 1880 02e8 0F49     		ldr	r1, .L64+20
 1881 02ea 1048     		ldr	r0, .L64+24
 1882 02ec FFF7FEFF 		bl	SD_write
 659:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1883              		.loc 1 659 0
 1884 02f0 07F1A003 		add	r3, r7, #160
 1885 02f4 1A46     		mov	r2, r3
 1886 02f6 0C49     		ldr	r1, .L64+20
 1887 02f8 0C48     		ldr	r0, .L64+24
 1888 02fa FFF7FEFF 		bl	SD_write
 660:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 1889              		.loc 1 660 0
 1890 02fe 0D4A     		ldr	r2, .L64+32
 1891 0300 0949     		ldr	r1, .L64+20
 1892 0302 0A48     		ldr	r0, .L64+24
 1893 0304 FFF7FEFF 		bl	SD_write
 1894              	.L62:
 1895              	.LBE11:
 661:notoriOS.c    ****    
 662:notoriOS.c    ****     }
 663:notoriOS.c    ****     
 664:notoriOS.c    ****     return 0u;
 1896              		.loc 1 664 0
 1897 0308 0023     		movs	r3, #0
 665:notoriOS.c    **** }
 1898              		.loc 1 665 0
 1899 030a 1846     		mov	r0, r3
 1900 030c DC37     		adds	r7, r7, #220
 1901              		.cfi_def_cfa_offset 12
 1902 030e BD46     		mov	sp, r7
 1903              		.cfi_def_cfa_register 13
 1904              		@ sp needed
 1905 0310 90BD     		pop	{r4, r7, pc}
 1906              	.L65:
 1907 0312 00BF     		.align	2
 1908              	.L64:
 1909 0314 70020000 		.word	.LC35
 1910 0318 00000000 		.word	updatable_parameters
 1911 031c 3C000000 		.word	.LC2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 49


 1912 0320 74020000 		.word	.LC36
 1913 0324 88020000 		.word	.LC37
 1914 0328 98020000 		.word	.LC38
 1915 032c 00000000 		.word	Data_fileName
 1916 0330 9C020000 		.word	.LC39
 1917 0334 B0020000 		.word	.LC40
 1918 0338 B4020000 		.word	.LC41
 1919 033c E0020000 		.word	.LC42
 1920 0340 E8020000 		.word	.LC43
 1921 0344 F4020000 		.word	.LC44
 1922 0348 FC020000 		.word	.LC45
 1923 034c 04030000 		.word	.LC46
 1924 0350 18030000 		.word	.LC47
 1925 0354 2C030000 		.word	.LC48
 1926 0358 40030000 		.word	.LC49
 1927 035c 54030000 		.word	.LC50
 1928 0360 64030000 		.word	.LC51
 1929 0364 78030000 		.word	.LC52
 1930 0368 A0030000 		.word	.LC53
 1931 036c A4030000 		.word	.LC54
 1932 0370 C8030000 		.word	.LC55
 1933 0374 E0030000 		.word	.LC56
 1934 0378 FC030000 		.word	.LC57
 1935 037c 18040000 		.word	.LC58
 1936 0380 28040000 		.word	.LC59
 1937              		.cfi_endproc
 1938              	.LFE76:
 1939              		.size	makeMeasurements, .-makeMeasurements
 1940              		.section	.rodata
 1941 0439 000000   		.align	2
 1942              	.LC60:
 1943 043c 4572726F 		.ascii	"Error setting system time.\000"
 1943      72207365 
 1943      7474696E 
 1943      67207379 
 1943      7374656D 
 1944              		.section	.text.setTime,"ax",%progbits
 1945              		.align	2
 1946              		.global	setTime
 1947              		.thumb
 1948              		.thumb_func
 1949              		.type	setTime, %function
 1950              	setTime:
 1951              	.LFB77:
 666:notoriOS.c    **** 
 667:notoriOS.c    **** // ==============================================
 668:notoriOS.c    **** // Set the system time
 669:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 670:notoriOS.c    **** // ==============================================
 671:notoriOS.c    **** uint8 setTime(long timeStamp){
 1952              		.loc 1 671 0
 1953              		.cfi_startproc
 1954              		@ args = 0, pretend = 0, frame = 24
 1955              		@ frame_needed = 1, uses_anonymous_args = 0
 1956 0000 80B5     		push	{r7, lr}
 1957              		.cfi_def_cfa_offset 8
 1958              		.cfi_offset 7, -8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 50


 1959              		.cfi_offset 14, -4
 1960 0002 86B0     		sub	sp, sp, #24
 1961              		.cfi_def_cfa_offset 32
 1962 0004 00AF     		add	r7, sp, #0
 1963              		.cfi_def_cfa_register 7
 1964 0006 7860     		str	r0, [r7, #4]
 672:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 673:notoriOS.c    ****     if(timeStamp <=0){
 1965              		.loc 1 673 0
 1966 0008 7B68     		ldr	r3, [r7, #4]
 1967 000a 002B     		cmp	r3, #0
 1968 000c 05DC     		bgt	.L67
 674:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 1969              		.loc 1 674 0
 1970 000e 1849     		ldr	r1, .L69
 1971 0010 0220     		movs	r0, #2
 1972 0012 FFF7FEFF 		bl	printNotif
 675:notoriOS.c    ****         return 0;  
 1973              		.loc 1 675 0
 1974 0016 0023     		movs	r3, #0
 1975 0018 25E0     		b	.L68
 1976              	.L67:
 676:notoriOS.c    ****     }
 677:notoriOS.c    ****     // Create a new pointer t of data structure tm
 678:notoriOS.c    ****     struct tm * t;
 679:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 680:notoriOS.c    ****     t = gmtime(&timeStamp);
 1977              		.loc 1 680 0
 1978 001a 3B1D     		adds	r3, r7, #4
 1979 001c 1846     		mov	r0, r3
 1980 001e FFF7FEFF 		bl	gmtime
 1981 0022 7861     		str	r0, [r7, #20]
 681:notoriOS.c    ****     
 682:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 683:notoriOS.c    ****     RTC_TIME_DATE localTime;
 684:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 1982              		.loc 1 684 0
 1983 0024 7B69     		ldr	r3, [r7, #20]
 1984 0026 1B68     		ldr	r3, [r3]
 1985 0028 DBB2     		uxtb	r3, r3
 1986 002a 3B72     		strb	r3, [r7, #8]
 685:notoriOS.c    ****     localTime.Min = t->tm_min;
 1987              		.loc 1 685 0
 1988 002c 7B69     		ldr	r3, [r7, #20]
 1989 002e 5B68     		ldr	r3, [r3, #4]
 1990 0030 DBB2     		uxtb	r3, r3
 1991 0032 7B72     		strb	r3, [r7, #9]
 686:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 1992              		.loc 1 686 0
 1993 0034 7B69     		ldr	r3, [r7, #20]
 1994 0036 9B68     		ldr	r3, [r3, #8]
 1995 0038 DBB2     		uxtb	r3, r3
 1996 003a BB72     		strb	r3, [r7, #10]
 687:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 1997              		.loc 1 687 0
 1998 003c 7B69     		ldr	r3, [r7, #20]
 1999 003e 5B69     		ldr	r3, [r3, #20]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 51


 2000 0040 9BB2     		uxth	r3, r3
 2001 0042 03F26C73 		addw	r3, r3, #1900
 2002 0046 9BB2     		uxth	r3, r3
 2003 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 688:notoriOS.c    ****     localTime.Month = t->tm_mon;
 2004              		.loc 1 688 0
 2005 004a 7B69     		ldr	r3, [r7, #20]
 2006 004c 1B69     		ldr	r3, [r3, #16]
 2007 004e DBB2     		uxtb	r3, r3
 2008 0050 3B74     		strb	r3, [r7, #16]
 689:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 2009              		.loc 1 689 0
 2010 0052 7B69     		ldr	r3, [r7, #20]
 2011 0054 DB68     		ldr	r3, [r3, #12]
 2012 0056 DBB2     		uxtb	r3, r3
 2013 0058 3B73     		strb	r3, [r7, #12]
 690:notoriOS.c    **** 
 691:notoriOS.c    ****     // Writes time and date values as current time and date.
 692:notoriOS.c    ****     RTC_WriteTime(&localTime);
 2014              		.loc 1 692 0
 2015 005a 07F10803 		add	r3, r7, #8
 2016 005e 1846     		mov	r0, r3
 2017 0060 FFF7FEFF 		bl	RTC_WriteTime
 693:notoriOS.c    ****     
 694:notoriOS.c    ****     // Return 1 when the system time was set properly.
 695:notoriOS.c    ****     return 1;
 2018              		.loc 1 695 0
 2019 0064 0123     		movs	r3, #1
 2020              	.L68:
 696:notoriOS.c    **** }
 2021              		.loc 1 696 0
 2022 0066 1846     		mov	r0, r3
 2023 0068 1837     		adds	r7, r7, #24
 2024              		.cfi_def_cfa_offset 8
 2025 006a BD46     		mov	sp, r7
 2026              		.cfi_def_cfa_register 13
 2027              		@ sp needed
 2028 006c 80BD     		pop	{r7, pc}
 2029              	.L70:
 2030 006e 00BF     		.align	2
 2031              	.L69:
 2032 0070 3C040000 		.word	.LC60
 2033              		.cfi_endproc
 2034              	.LFE77:
 2035              		.size	setTime, .-setTime
 2036              		.section	.rodata
 2037 0457 00       		.align	2
 2038              	.LC61:
 2039 0458 75706772 		.ascii	"upgrade.hex\000"
 2039      6164652E 
 2039      68657800 
 2040              		.section	.text.upgraded,"ax",%progbits
 2041              		.align	2
 2042              		.global	upgraded
 2043              		.thumb
 2044              		.thumb_func
 2045              		.type	upgraded, %function
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 52


 2046              	upgraded:
 2047              	.LFB78:
 697:notoriOS.c    **** 
 698:notoriOS.c    **** //downloads and stores files on SD card
 699:notoriOS.c    **** 
 700:notoriOS.c    **** 
 701:notoriOS.c    **** 
 702:notoriOS.c    **** // ==============================================
 703:notoriOS.c    **** // Will they love it, will they hate it
 704:notoriOS.c    **** // Never fade it, I evade it
 705:notoriOS.c    **** // Cause I never really want to complicate it
 706:notoriOS.c    **** //      - Logic, Upgraded (2015)
 707:notoriOS.c    **** //
 708:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 709:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 710:notoriOS.c    **** // ==============================================
 711:notoriOS.c    **** 
 712:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 2048              		.loc 1 712 0
 2049              		.cfi_startproc
 2050              		@ args = 0, pretend = 0, frame = 232
 2051              		@ frame_needed = 1, uses_anonymous_args = 0
 2052 0000 80B5     		push	{r7, lr}
 2053              		.cfi_def_cfa_offset 8
 2054              		.cfi_offset 7, -8
 2055              		.cfi_offset 14, -4
 2056 0002 C0B0     		sub	sp, sp, #256
 2057              		.cfi_def_cfa_offset 264
 2058 0004 06AF     		add	r7, sp, #24
 2059              		.cfi_def_cfa 7, 240
 2060 0006 F860     		str	r0, [r7, #12]
 2061 0008 B960     		str	r1, [r7, #8]
 2062 000a 7A60     		str	r2, [r7, #4]
 713:notoriOS.c    ****     
 714:notoriOS.c    ****     uint8 upgrade_status = 0;
 2063              		.loc 1 714 0
 2064 000c 0023     		movs	r3, #0
 2065 000e 87F8E730 		strb	r3, [r7, #231]
 715:notoriOS.c    ****     
 716:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 717:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 2066              		.loc 1 717 0
 2067 0012 384B     		ldr	r3, .L75
 2068 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2069 0016 042B     		cmp	r3, #4
 2070 0018 02D0     		beq	.L72
 718:notoriOS.c    ****         return upgrade_status;//where valid = 0
 2071              		.loc 1 718 0
 2072 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2073 001e 65E0     		b	.L74
 2074              	.L72:
 719:notoriOS.c    ****     }
 720:notoriOS.c    ****     
 721:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 2075              		.loc 1 721 0
 2076 0020 354A     		ldr	r2, .L75+4
 2077 0022 07F1D803 		add	r3, r7, #216
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 53


 2078 0026 07CA     		ldmia	r2, {r0, r1, r2}
 2079 0028 83E80700 		stmia	r3, {r0, r1, r2}
 722:notoriOS.c    ****     //delete file, if one exisits already
 723:notoriOS.c    ****     SD_rmfile(fileName);
 2080              		.loc 1 723 0
 2081 002c 07F1D803 		add	r3, r7, #216
 2082 0030 1846     		mov	r0, r3
 2083 0032 FFF7FEFF 		bl	SD_rmfile
 724:notoriOS.c    ****     
 725:notoriOS.c    ****     // Create http request
 726:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 2084              		.loc 1 726 0
 2085 0036 314B     		ldr	r3, .L75+8
 2086 0038 0593     		str	r3, [sp, #20]
 2087 003a 0023     		movs	r3, #0
 2088 003c 0493     		str	r3, [sp, #16]
 2089 003e 304B     		ldr	r3, .L75+12
 2090 0040 0393     		str	r3, [sp, #12]
 2091 0042 304B     		ldr	r3, .L75+16
 2092 0044 0293     		str	r3, [sp, #8]
 2093 0046 304B     		ldr	r3, .L75+20
 2094 0048 0193     		str	r3, [sp, #4]
 2095 004a BB68     		ldr	r3, [r7, #8]
 2096 004c 0093     		str	r3, [sp]
 2097 004e 7B68     		ldr	r3, [r7, #4]
 2098 0050 FA68     		ldr	r2, [r7, #12]
 2099 0052 2E49     		ldr	r1, .L75+24
 2100 0054 2E48     		ldr	r0, .L75+28
 2101 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 727:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 2102              		.loc 1 727 0
 2103 005a 2D4A     		ldr	r2, .L75+28
 2104 005c 2D49     		ldr	r1, .L75+32
 2105 005e 0020     		movs	r0, #0
 2106 0060 FFF7FEFF 		bl	printNotif
 728:notoriOS.c    ****     // Create array portConfig of size 200 characters
 729:notoriOS.c    ****     char portConfig[200];
 730:notoriOS.c    ****     // Print port configurations
 731:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 2107              		.loc 1 731 0
 2108 0064 07F11000 		add	r0, r7, #16
 2109 0068 FB68     		ldr	r3, [r7, #12]
 2110 006a 0093     		str	r3, [sp]
 2111 006c BB68     		ldr	r3, [r7, #8]
 2112 006e 2A4A     		ldr	r2, .L75+36
 2113 0070 C821     		movs	r1, #200
 2114 0072 FFF7FEFF 		bl	snprintf
 732:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 2115              		.loc 1 732 0
 2116 0076 07F11003 		add	r3, r7, #16
 2117 007a 1A46     		mov	r2, r3
 2118 007c 2749     		ldr	r1, .L75+40
 2119 007e 0020     		movs	r0, #0
 2120 0080 FFF7FEFF 		bl	printNotif
 733:notoriOS.c    ****     // AT command to configure the port
 734:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 2121              		.loc 1 734 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 54


 2122 0084 07F11003 		add	r3, r7, #16
 2123 0088 42F21072 		movw	r2, #10000
 2124 008c 2449     		ldr	r1, .L75+44
 2125 008e 1846     		mov	r0, r3
 2126 0090 FFF7FEFF 		bl	at_write_command
 2127 0094 0346     		mov	r3, r0
 2128 0096 87F8E730 		strb	r3, [r7, #231]
 735:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 736:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 737:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 2129              		.loc 1 737 0
 2130 009a 4FF47A72 		mov	r2, #1000
 2131 009e 2149     		ldr	r1, .L75+48
 2132 00a0 2148     		ldr	r0, .L75+52
 2133 00a2 FFF7FEFF 		bl	at_write_command
 2134 00a6 0346     		mov	r3, r0
 2135 00a8 87F8E730 		strb	r3, [r7, #231]
 738:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 739:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 2136              		.loc 1 739 0
 2137 00ac 1848     		ldr	r0, .L75+28
 2138 00ae FFF7FEFF 		bl	strlen
 2139 00b2 0346     		mov	r3, r0
 2140 00b4 1A46     		mov	r2, r3
 2141 00b6 164B     		ldr	r3, .L75+28
 2142 00b8 1344     		add	r3, r3, r2
 2143 00ba 1C49     		ldr	r1, .L75+56
 2144 00bc 1A46     		mov	r2, r3
 2145 00be 0B46     		mov	r3, r1
 2146 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 2147 00c2 1380     		strh	r3, [r2]	@ unaligned
 740:notoriOS.c    ****     // AT command to send http request
 741:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
 2148              		.loc 1 741 0
 2149 00c4 41F28832 		movw	r2, #5000
 2150 00c8 1549     		ldr	r1, .L75+44
 2151 00ca 1148     		ldr	r0, .L75+28
 2152 00cc FFF7FEFF 		bl	at_write_command
 2153 00d0 0346     		mov	r3, r0
 2154 00d2 87F8E730 		strb	r3, [r7, #231]
 742:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 743:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 744:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 2155              		.loc 1 744 0
 2156 00d6 41F28832 		movw	r2, #5000
 2157 00da 1549     		ldr	r1, .L75+60
 2158 00dc 1548     		ldr	r0, .L75+64
 2159 00de FFF7FEFF 		bl	at_write_command
 2160 00e2 0346     		mov	r3, r0
 2161 00e4 87F8E730 		strb	r3, [r7, #231]
 745:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 746:notoriOS.c    ****     
 747:notoriOS.c    ****     
 748:notoriOS.c    ****     return upgrade_status;
 2162              		.loc 1 748 0
 2163 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2164              	.L74:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 55


 749:notoriOS.c    ****     
 750:notoriOS.c    **** }
 2165              		.loc 1 750 0 discriminator 1
 2166 00ec 1846     		mov	r0, r3
 2167 00ee E837     		adds	r7, r7, #232
 2168              		.cfi_def_cfa_offset 8
 2169 00f0 BD46     		mov	sp, r7
 2170              		.cfi_def_cfa_register 13
 2171              		@ sp needed
 2172 00f2 80BD     		pop	{r7, pc}
 2173              	.L76:
 2174              		.align	2
 2175              	.L75:
 2176 00f4 00000000 		.word	modem_state
 2177 00f8 58040000 		.word	.LC61
 2178 00fc 68010000 		.word	.LC16
 2179 0100 6C010000 		.word	.LC17
 2180 0104 70010000 		.word	.LC18
 2181 0108 78010000 		.word	.LC19
 2182 010c 00000000 		.word	http_body
 2183 0110 00000000 		.word	http_request
 2184 0114 80010000 		.word	.LC20
 2185 0118 98010000 		.word	.LC21
 2186 011c B4010000 		.word	.LC22
 2187 0120 B8010000 		.word	.LC23
 2188 0124 E8010000 		.word	.LC26
 2189 0128 EC010000 		.word	.LC27
 2190 012c FC010000 		.word	.LC28
 2191 0130 18020000 		.word	.LC31
 2192 0134 20020000 		.word	.LC32
 2193              		.cfi_endproc
 2194              	.LFE78:
 2195              		.size	upgraded, .-upgraded
 2196              		.text
 2197              	.Letext0:
 2198              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2199              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2200              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2201              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 2202              		.file 6 "testing.h"
 2203              		.file 7 "level_sensor.h"
 2204              		.file 8 "voltages.h"
 2205              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2206              		.file 10 "data.h"
 2207              		.file 11 "modem.h"
 2208              		.file 12 "water_quality.h"
 2209              		.file 13 "notoriOS.h"
 2210              		.file 14 "Generated_Source\\PSoC5/core_cm3.h"
 2211              		.section	.debug_info,"",%progbits
 2212              	.Ldebug_info0:
 2213 0000 9B0C0000 		.4byte	0xc9b
 2214 0004 0400     		.2byte	0x4
 2215 0006 00000000 		.4byte	.Ldebug_abbrev0
 2216 000a 04       		.byte	0x4
 2217 000b 01       		.uleb128 0x1
 2218 000c 7F000000 		.4byte	.LASF168
 2219 0010 0C       		.byte	0xc
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 56


 2220 0011 2F080000 		.4byte	.LASF169
 2221 0015 85040000 		.4byte	.LASF170
 2222 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2223 001d 00000000 		.4byte	0
 2224 0021 00000000 		.4byte	.Ldebug_line0
 2225 0025 02       		.uleb128 0x2
 2226 0026 01       		.byte	0x1
 2227 0027 06       		.byte	0x6
 2228 0028 50000000 		.4byte	.LASF0
 2229 002c 02       		.uleb128 0x2
 2230 002d 01       		.byte	0x1
 2231 002e 08       		.byte	0x8
 2232 002f 36060000 		.4byte	.LASF1
 2233 0033 02       		.uleb128 0x2
 2234 0034 02       		.byte	0x2
 2235 0035 05       		.byte	0x5
 2236 0036 64040000 		.4byte	.LASF2
 2237 003a 02       		.uleb128 0x2
 2238 003b 02       		.byte	0x2
 2239 003c 07       		.byte	0x7
 2240 003d C7070000 		.4byte	.LASF3
 2241 0041 03       		.uleb128 0x3
 2242 0042 8F070000 		.4byte	.LASF9
 2243 0046 02       		.byte	0x2
 2244 0047 3F       		.byte	0x3f
 2245 0048 4C000000 		.4byte	0x4c
 2246 004c 02       		.uleb128 0x2
 2247 004d 04       		.byte	0x4
 2248 004e 05       		.byte	0x5
 2249 004f 21020000 		.4byte	.LASF4
 2250 0053 02       		.uleb128 0x2
 2251 0054 04       		.byte	0x4
 2252 0055 07       		.byte	0x7
 2253 0056 81030000 		.4byte	.LASF5
 2254 005a 02       		.uleb128 0x2
 2255 005b 08       		.byte	0x8
 2256 005c 05       		.byte	0x5
 2257 005d 6F010000 		.4byte	.LASF6
 2258 0061 02       		.uleb128 0x2
 2259 0062 08       		.byte	0x8
 2260 0063 07       		.byte	0x7
 2261 0064 1E010000 		.4byte	.LASF7
 2262 0068 04       		.uleb128 0x4
 2263 0069 04       		.byte	0x4
 2264 006a 05       		.byte	0x5
 2265 006b 696E7400 		.ascii	"int\000"
 2266 006f 02       		.uleb128 0x2
 2267 0070 04       		.byte	0x4
 2268 0071 07       		.byte	0x7
 2269 0072 2D030000 		.4byte	.LASF8
 2270 0076 03       		.uleb128 0x3
 2271 0077 2E060000 		.4byte	.LASF10
 2272 007b 03       		.byte	0x3
 2273 007c 2C       		.byte	0x2c
 2274 007d 41000000 		.4byte	0x41
 2275 0081 05       		.uleb128 0x5
 2276 0082 58020000 		.4byte	.LASF11
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 57


 2277 0086 04       		.byte	0x4
 2278 0087 9201     		.2byte	0x192
 2279 0089 2C000000 		.4byte	0x2c
 2280 008d 05       		.uleb128 0x5
 2281 008e 08000000 		.4byte	.LASF12
 2282 0092 04       		.byte	0x4
 2283 0093 9301     		.2byte	0x193
 2284 0095 3A000000 		.4byte	0x3a
 2285 0099 05       		.uleb128 0x5
 2286 009a 9C020000 		.4byte	.LASF13
 2287 009e 04       		.byte	0x4
 2288 009f 9401     		.2byte	0x194
 2289 00a1 53000000 		.4byte	0x53
 2290 00a5 05       		.uleb128 0x5
 2291 00a6 1A040000 		.4byte	.LASF14
 2292 00aa 04       		.byte	0x4
 2293 00ab 9501     		.2byte	0x195
 2294 00ad 25000000 		.4byte	0x25
 2295 00b1 05       		.uleb128 0x5
 2296 00b2 44080000 		.4byte	.LASF15
 2297 00b6 04       		.byte	0x4
 2298 00b7 9601     		.2byte	0x196
 2299 00b9 33000000 		.4byte	0x33
 2300 00bd 05       		.uleb128 0x5
 2301 00be 76020000 		.4byte	.LASF16
 2302 00c2 04       		.byte	0x4
 2303 00c3 9701     		.2byte	0x197
 2304 00c5 4C000000 		.4byte	0x4c
 2305 00c9 05       		.uleb128 0x5
 2306 00ca 08050000 		.4byte	.LASF17
 2307 00ce 04       		.byte	0x4
 2308 00cf 9801     		.2byte	0x198
 2309 00d1 D5000000 		.4byte	0xd5
 2310 00d5 02       		.uleb128 0x2
 2311 00d6 04       		.byte	0x4
 2312 00d7 04       		.byte	0x4
 2313 00d8 D3050000 		.4byte	.LASF18
 2314 00dc 02       		.uleb128 0x2
 2315 00dd 08       		.byte	0x8
 2316 00de 04       		.byte	0x4
 2317 00df C8080000 		.4byte	.LASF19
 2318 00e3 02       		.uleb128 0x2
 2319 00e4 01       		.byte	0x1
 2320 00e5 08       		.byte	0x8
 2321 00e6 68070000 		.4byte	.LASF20
 2322 00ea 02       		.uleb128 0x2
 2323 00eb 08       		.byte	0x8
 2324 00ec 04       		.byte	0x4
 2325 00ed 4A070000 		.4byte	.LASF21
 2326 00f1 02       		.uleb128 0x2
 2327 00f2 04       		.byte	0x4
 2328 00f3 07       		.byte	0x7
 2329 00f4 1C050000 		.4byte	.LASF22
 2330 00f8 06       		.uleb128 0x6
 2331 00f9 04       		.byte	0x4
 2332 00fa E3000000 		.4byte	0xe3
 2333 00fe 07       		.uleb128 0x7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 58


 2334 00ff E3000000 		.4byte	0xe3
 2335 0103 0E010000 		.4byte	0x10e
 2336 0107 08       		.uleb128 0x8
 2337 0108 F1000000 		.4byte	0xf1
 2338 010c 17       		.byte	0x17
 2339 010d 00       		.byte	0
 2340 010e 09       		.uleb128 0x9
 2341 010f 0C       		.byte	0xc
 2342 0110 05       		.byte	0x5
 2343 0111 30       		.byte	0x30
 2344 0112 77010000 		.4byte	0x177
 2345 0116 0A       		.uleb128 0xa
 2346 0117 53656300 		.ascii	"Sec\000"
 2347 011b 05       		.byte	0x5
 2348 011c 32       		.byte	0x32
 2349 011d 81000000 		.4byte	0x81
 2350 0121 00       		.byte	0
 2351 0122 0A       		.uleb128 0xa
 2352 0123 4D696E00 		.ascii	"Min\000"
 2353 0127 05       		.byte	0x5
 2354 0128 33       		.byte	0x33
 2355 0129 81000000 		.4byte	0x81
 2356 012d 01       		.byte	0x1
 2357 012e 0B       		.uleb128 0xb
 2358 012f 35010000 		.4byte	.LASF23
 2359 0133 05       		.byte	0x5
 2360 0134 34       		.byte	0x34
 2361 0135 81000000 		.4byte	0x81
 2362 0139 02       		.byte	0x2
 2363 013a 0B       		.uleb128 0xb
 2364 013b 99060000 		.4byte	.LASF24
 2365 013f 05       		.byte	0x5
 2366 0140 35       		.byte	0x35
 2367 0141 81000000 		.4byte	0x81
 2368 0145 03       		.byte	0x3
 2369 0146 0B       		.uleb128 0xb
 2370 0147 D5030000 		.4byte	.LASF25
 2371 014b 05       		.byte	0x5
 2372 014c 36       		.byte	0x36
 2373 014d 81000000 		.4byte	0x81
 2374 0151 04       		.byte	0x4
 2375 0152 0B       		.uleb128 0xb
 2376 0153 7D080000 		.4byte	.LASF26
 2377 0157 05       		.byte	0x5
 2378 0158 37       		.byte	0x37
 2379 0159 8D000000 		.4byte	0x8d
 2380 015d 06       		.byte	0x6
 2381 015e 0B       		.uleb128 0xb
 2382 015f 18010000 		.4byte	.LASF27
 2383 0163 05       		.byte	0x5
 2384 0164 38       		.byte	0x38
 2385 0165 81000000 		.4byte	0x81
 2386 0169 08       		.byte	0x8
 2387 016a 0B       		.uleb128 0xb
 2388 016b 23060000 		.4byte	.LASF28
 2389 016f 05       		.byte	0x5
 2390 0170 39       		.byte	0x39
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 59


 2391 0171 8D000000 		.4byte	0x8d
 2392 0175 0A       		.byte	0xa
 2393 0176 00       		.byte	0
 2394 0177 03       		.uleb128 0x3
 2395 0178 67050000 		.4byte	.LASF29
 2396 017c 05       		.byte	0x5
 2397 017d 3A       		.byte	0x3a
 2398 017e 82010000 		.4byte	0x182
 2399 0182 0C       		.uleb128 0xc
 2400 0183 0E010000 		.4byte	0x10e
 2401 0187 0D       		.uleb128 0xd
 2402 0188 8101     		.2byte	0x181
 2403 018a 06       		.byte	0x6
 2404 018b 0A       		.byte	0xa
 2405 018c B5010000 		.4byte	0x1b5
 2406 0190 0B       		.uleb128 0xb
 2407 0191 19060000 		.4byte	.LASF30
 2408 0195 06       		.byte	0x6
 2409 0196 0C       		.byte	0xc
 2410 0197 B5010000 		.4byte	0x1b5
 2411 019b 00       		.byte	0
 2412 019c 0B       		.uleb128 0xb
 2413 019d 04080000 		.4byte	.LASF31
 2414 01a1 06       		.byte	0x6
 2415 01a2 0D       		.byte	0xd
 2416 01a3 81000000 		.4byte	0x81
 2417 01a7 80       		.byte	0x80
 2418 01a8 0B       		.uleb128 0xb
 2419 01a9 BB060000 		.4byte	.LASF32
 2420 01ad 06       		.byte	0x6
 2421 01ae 0F       		.byte	0xf
 2422 01af C5010000 		.4byte	0x1c5
 2423 01b3 81       		.byte	0x81
 2424 01b4 00       		.byte	0
 2425 01b5 07       		.uleb128 0x7
 2426 01b6 E3000000 		.4byte	0xe3
 2427 01ba C5010000 		.4byte	0x1c5
 2428 01be 08       		.uleb128 0x8
 2429 01bf F1000000 		.4byte	0xf1
 2430 01c3 7F       		.byte	0x7f
 2431 01c4 00       		.byte	0
 2432 01c5 07       		.uleb128 0x7
 2433 01c6 E3000000 		.4byte	0xe3
 2434 01ca D5010000 		.4byte	0x1d5
 2435 01ce 08       		.uleb128 0x8
 2436 01cf F1000000 		.4byte	0xf1
 2437 01d3 FF       		.byte	0xff
 2438 01d4 00       		.byte	0
 2439 01d5 03       		.uleb128 0x3
 2440 01d6 A3060000 		.4byte	.LASF33
 2441 01da 06       		.byte	0x6
 2442 01db 10       		.byte	0x10
 2443 01dc 87010000 		.4byte	0x187
 2444 01e0 09       		.uleb128 0x9
 2445 01e1 1A       		.byte	0x1a
 2446 01e2 07       		.byte	0x7
 2447 01e3 10       		.byte	0x10
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 60


 2448 01e4 19020000 		.4byte	0x219
 2449 01e8 0B       		.uleb128 0xb
 2450 01e9 AC020000 		.4byte	.LASF34
 2451 01ed 07       		.byte	0x7
 2452 01ee 11       		.byte	0x11
 2453 01ef 19020000 		.4byte	0x219
 2454 01f3 00       		.byte	0
 2455 01f4 0B       		.uleb128 0xb
 2456 01f5 B1070000 		.4byte	.LASF35
 2457 01f9 07       		.byte	0x7
 2458 01fa 12       		.byte	0x12
 2459 01fb B1000000 		.4byte	0xb1
 2460 01ff 16       		.byte	0x16
 2461 0200 0B       		.uleb128 0xb
 2462 0201 59030000 		.4byte	.LASF36
 2463 0205 07       		.byte	0x7
 2464 0206 13       		.byte	0x13
 2465 0207 81000000 		.4byte	0x81
 2466 020b 18       		.byte	0x18
 2467 020c 0B       		.uleb128 0xb
 2468 020d 22000000 		.4byte	.LASF37
 2469 0211 07       		.byte	0x7
 2470 0212 14       		.byte	0x14
 2471 0213 81000000 		.4byte	0x81
 2472 0217 19       		.byte	0x19
 2473 0218 00       		.byte	0
 2474 0219 07       		.uleb128 0x7
 2475 021a B1000000 		.4byte	0xb1
 2476 021e 29020000 		.4byte	0x229
 2477 0222 08       		.uleb128 0x8
 2478 0223 F1000000 		.4byte	0xf1
 2479 0227 0A       		.byte	0xa
 2480 0228 00       		.byte	0
 2481 0229 03       		.uleb128 0x3
 2482 022a D9050000 		.4byte	.LASF38
 2483 022e 07       		.byte	0x7
 2484 022f 15       		.byte	0x15
 2485 0230 E0010000 		.4byte	0x1e0
 2486 0234 09       		.uleb128 0x9
 2487 0235 14       		.byte	0x14
 2488 0236 08       		.byte	0x8
 2489 0237 11       		.byte	0x11
 2490 0238 79020000 		.4byte	0x279
 2491 023c 0B       		.uleb128 0xb
 2492 023d B3030000 		.4byte	.LASF39
 2493 0241 08       		.byte	0x8
 2494 0242 12       		.byte	0x12
 2495 0243 D5000000 		.4byte	0xd5
 2496 0247 00       		.byte	0
 2497 0248 0B       		.uleb128 0xb
 2498 0249 BB010000 		.4byte	.LASF40
 2499 024d 08       		.byte	0x8
 2500 024e 13       		.byte	0x13
 2501 024f D5000000 		.4byte	0xd5
 2502 0253 04       		.byte	0x4
 2503 0254 0B       		.uleb128 0xb
 2504 0255 C9010000 		.4byte	.LASF41
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 61


 2505 0259 08       		.byte	0x8
 2506 025a 14       		.byte	0x14
 2507 025b D5000000 		.4byte	0xd5
 2508 025f 08       		.byte	0x8
 2509 0260 0B       		.uleb128 0xb
 2510 0261 B5050000 		.4byte	.LASF42
 2511 0265 08       		.byte	0x8
 2512 0266 15       		.byte	0x15
 2513 0267 D5000000 		.4byte	0xd5
 2514 026b 0C       		.byte	0xc
 2515 026c 0B       		.uleb128 0xb
 2516 026d 2C070000 		.4byte	.LASF43
 2517 0271 08       		.byte	0x8
 2518 0272 16       		.byte	0x16
 2519 0273 81000000 		.4byte	0x81
 2520 0277 10       		.byte	0x10
 2521 0278 00       		.byte	0
 2522 0279 03       		.uleb128 0x3
 2523 027a CF080000 		.4byte	.LASF44
 2524 027e 08       		.byte	0x8
 2525 027f 17       		.byte	0x17
 2526 0280 34020000 		.4byte	0x234
 2527 0284 09       		.uleb128 0x9
 2528 0285 10       		.byte	0x10
 2529 0286 08       		.byte	0x8
 2530 0287 19       		.byte	0x19
 2531 0288 BD020000 		.4byte	0x2bd
 2532 028c 0B       		.uleb128 0xb
 2533 028d 19030000 		.4byte	.LASF45
 2534 0291 08       		.byte	0x8
 2535 0292 1A       		.byte	0x1a
 2536 0293 D5000000 		.4byte	0xd5
 2537 0297 00       		.byte	0
 2538 0298 0B       		.uleb128 0xb
 2539 0299 43020000 		.4byte	.LASF46
 2540 029d 08       		.byte	0x8
 2541 029e 1B       		.byte	0x1b
 2542 029f D5000000 		.4byte	0xd5
 2543 02a3 04       		.byte	0x4
 2544 02a4 0B       		.uleb128 0xb
 2545 02a5 1B070000 		.4byte	.LASF47
 2546 02a9 08       		.byte	0x8
 2547 02aa 1C       		.byte	0x1c
 2548 02ab D5000000 		.4byte	0xd5
 2549 02af 08       		.byte	0x8
 2550 02b0 0B       		.uleb128 0xb
 2551 02b1 85060000 		.4byte	.LASF48
 2552 02b5 08       		.byte	0x8
 2553 02b6 1D       		.byte	0x1d
 2554 02b7 D5000000 		.4byte	0xd5
 2555 02bb 0C       		.byte	0xc
 2556 02bc 00       		.byte	0
 2557 02bd 03       		.uleb128 0x3
 2558 02be 87080000 		.4byte	.LASF49
 2559 02c2 08       		.byte	0x8
 2560 02c3 1E       		.byte	0x1e
 2561 02c4 84020000 		.4byte	0x284
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 62


 2562 02c8 0E       		.uleb128 0xe
 2563 02c9 746D00   		.ascii	"tm\000"
 2564 02cc 24       		.byte	0x24
 2565 02cd 09       		.byte	0x9
 2566 02ce 21       		.byte	0x21
 2567 02cf 40030000 		.4byte	0x340
 2568 02d3 0B       		.uleb128 0xb
 2569 02d4 F2070000 		.4byte	.LASF50
 2570 02d8 09       		.byte	0x9
 2571 02d9 23       		.byte	0x23
 2572 02da 68000000 		.4byte	0x68
 2573 02de 00       		.byte	0
 2574 02df 0B       		.uleb128 0xb
 2575 02e0 01050000 		.4byte	.LASF51
 2576 02e4 09       		.byte	0x9
 2577 02e5 24       		.byte	0x24
 2578 02e6 68000000 		.4byte	0x68
 2579 02ea 04       		.byte	0x4
 2580 02eb 0B       		.uleb128 0xb
 2581 02ec 1A000000 		.4byte	.LASF52
 2582 02f0 09       		.byte	0x9
 2583 02f1 25       		.byte	0x25
 2584 02f2 68000000 		.4byte	0x68
 2585 02f6 08       		.byte	0x8
 2586 02f7 0B       		.uleb128 0xb
 2587 02f8 E1070000 		.4byte	.LASF53
 2588 02fc 09       		.byte	0x9
 2589 02fd 26       		.byte	0x26
 2590 02fe 68000000 		.4byte	0x68
 2591 0302 0C       		.byte	0xc
 2592 0303 0B       		.uleb128 0xb
 2593 0304 E4020000 		.4byte	.LASF54
 2594 0308 09       		.byte	0x9
 2595 0309 27       		.byte	0x27
 2596 030a 68000000 		.4byte	0x68
 2597 030e 10       		.byte	0x10
 2598 030f 0B       		.uleb128 0xb
 2599 0310 07030000 		.4byte	.LASF55
 2600 0314 09       		.byte	0x9
 2601 0315 28       		.byte	0x28
 2602 0316 68000000 		.4byte	0x68
 2603 031a 14       		.byte	0x14
 2604 031b 0B       		.uleb128 0xb
 2605 031c 32070000 		.4byte	.LASF56
 2606 0320 09       		.byte	0x9
 2607 0321 29       		.byte	0x29
 2608 0322 68000000 		.4byte	0x68
 2609 0326 18       		.byte	0x18
 2610 0327 0B       		.uleb128 0xb
 2611 0328 25050000 		.4byte	.LASF57
 2612 032c 09       		.byte	0x9
 2613 032d 2A       		.byte	0x2a
 2614 032e 68000000 		.4byte	0x68
 2615 0332 1C       		.byte	0x1c
 2616 0333 0B       		.uleb128 0xb
 2617 0334 FE030000 		.4byte	.LASF58
 2618 0338 09       		.byte	0x9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 63


 2619 0339 2B       		.byte	0x2b
 2620 033a 68000000 		.4byte	0x68
 2621 033e 20       		.byte	0x20
 2622 033f 00       		.byte	0
 2623 0340 09       		.uleb128 0x9
 2624 0341 2C       		.byte	0x2c
 2625 0342 0A       		.byte	0xa
 2626 0343 14       		.byte	0x14
 2627 0344 6D030000 		.4byte	0x36d
 2628 0348 0A       		.uleb128 0xa
 2629 0349 6B657900 		.ascii	"key\000"
 2630 034d 0A       		.byte	0xa
 2631 034e 15       		.byte	0x15
 2632 034f 6D030000 		.4byte	0x36d
 2633 0353 00       		.byte	0
 2634 0354 0B       		.uleb128 0xb
 2635 0355 FC020000 		.4byte	.LASF59
 2636 0359 0A       		.byte	0xa
 2637 035a 16       		.byte	0x16
 2638 035b 6D030000 		.4byte	0x36d
 2639 035f 14       		.byte	0x14
 2640 0360 0B       		.uleb128 0xb
 2641 0361 5D050000 		.4byte	.LASF60
 2642 0365 0A       		.byte	0xa
 2643 0366 17       		.byte	0x17
 2644 0367 BD000000 		.4byte	0xbd
 2645 036b 28       		.byte	0x28
 2646 036c 00       		.byte	0
 2647 036d 07       		.uleb128 0x7
 2648 036e E3000000 		.4byte	0xe3
 2649 0372 7D030000 		.4byte	0x37d
 2650 0376 08       		.uleb128 0x8
 2651 0377 F1000000 		.4byte	0xf1
 2652 037b 13       		.byte	0x13
 2653 037c 00       		.byte	0
 2654 037d 03       		.uleb128 0x3
 2655 037e 42030000 		.4byte	.LASF61
 2656 0382 0A       		.byte	0xa
 2657 0383 19       		.byte	0x19
 2658 0384 40030000 		.4byte	0x340
 2659 0388 09       		.uleb128 0x9
 2660 0389 3C       		.byte	0x3c
 2661 038a 0B       		.byte	0xb
 2662 038b 37       		.byte	0x37
 2663 038c B5030000 		.4byte	0x3b5
 2664 0390 0B       		.uleb128 0xb
 2665 0391 DA070000 		.4byte	.LASF62
 2666 0395 0B       		.byte	0xb
 2667 0396 38       		.byte	0x38
 2668 0397 6D030000 		.4byte	0x36d
 2669 039b 00       		.byte	0
 2670 039c 0B       		.uleb128 0xb
 2671 039d A3020000 		.4byte	.LASF63
 2672 03a1 0B       		.byte	0xb
 2673 03a2 39       		.byte	0x39
 2674 03a3 6D030000 		.4byte	0x36d
 2675 03a7 14       		.byte	0x14
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 64


 2676 03a8 0B       		.uleb128 0xb
 2677 03a9 B6060000 		.4byte	.LASF64
 2678 03ad 0B       		.byte	0xb
 2679 03ae 3A       		.byte	0x3a
 2680 03af 6D030000 		.4byte	0x36d
 2681 03b3 28       		.byte	0x28
 2682 03b4 00       		.byte	0
 2683 03b5 03       		.uleb128 0x3
 2684 03b6 0E020000 		.4byte	.LASF65
 2685 03ba 0B       		.byte	0xb
 2686 03bb 3C       		.byte	0x3c
 2687 03bc 88030000 		.4byte	0x388
 2688 03c0 09       		.uleb128 0x9
 2689 03c1 20       		.byte	0x20
 2690 03c2 0B       		.byte	0xb
 2691 03c3 3E       		.byte	0x3e
 2692 03c4 29040000 		.4byte	0x429
 2693 03c8 0B       		.uleb128 0xb
 2694 03c9 1B020000 		.4byte	.LASF66
 2695 03cd 0B       		.byte	0xb
 2696 03ce 3F       		.byte	0x3f
 2697 03cf 68000000 		.4byte	0x68
 2698 03d3 00       		.byte	0
 2699 03d4 0A       		.uleb128 0xa
 2700 03d5 62657200 		.ascii	"ber\000"
 2701 03d9 0B       		.byte	0xb
 2702 03da 40       		.byte	0x40
 2703 03db 68000000 		.4byte	0x68
 2704 03df 04       		.byte	0x4
 2705 03e0 0B       		.uleb128 0xb
 2706 03e1 94060000 		.4byte	.LASF67
 2707 03e5 0B       		.byte	0xb
 2708 03e6 41       		.byte	0x41
 2709 03e7 68000000 		.4byte	0x68
 2710 03eb 08       		.byte	0x8
 2711 03ec 0B       		.uleb128 0xb
 2712 03ed 85010000 		.4byte	.LASF68
 2713 03f1 0B       		.byte	0xb
 2714 03f2 42       		.byte	0x42
 2715 03f3 68000000 		.4byte	0x68
 2716 03f7 0C       		.byte	0xc
 2717 03f8 0B       		.uleb128 0xb
 2718 03f9 5F060000 		.4byte	.LASF69
 2719 03fd 0B       		.byte	0xb
 2720 03fe 43       		.byte	0x43
 2721 03ff 68000000 		.4byte	0x68
 2722 0403 10       		.byte	0x10
 2723 0404 0B       		.uleb128 0xb
 2724 0405 5A060000 		.4byte	.LASF70
 2725 0409 0B       		.byte	0xb
 2726 040a 44       		.byte	0x44
 2727 040b 68000000 		.4byte	0x68
 2728 040f 14       		.byte	0x14
 2729 0410 0B       		.uleb128 0xb
 2730 0411 98010000 		.4byte	.LASF71
 2731 0415 0B       		.byte	0xb
 2732 0416 45       		.byte	0x45
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 65


 2733 0417 68000000 		.4byte	0x68
 2734 041b 18       		.byte	0x18
 2735 041c 0B       		.uleb128 0xb
 2736 041d 2A020000 		.4byte	.LASF72
 2737 0421 0B       		.byte	0xb
 2738 0422 46       		.byte	0x46
 2739 0423 68000000 		.4byte	0x68
 2740 0427 1C       		.byte	0x1c
 2741 0428 00       		.byte	0
 2742 0429 03       		.uleb128 0x3
 2743 042a 0D070000 		.4byte	.LASF73
 2744 042e 0B       		.byte	0xb
 2745 042f 48       		.byte	0x48
 2746 0430 C0030000 		.4byte	0x3c0
 2747 0434 09       		.uleb128 0x9
 2748 0435 05       		.byte	0x5
 2749 0436 0B       		.byte	0xb
 2750 0437 54       		.byte	0x54
 2751 0438 79040000 		.4byte	0x479
 2752 043c 0B       		.uleb128 0xb
 2753 043d 7C020000 		.4byte	.LASF74
 2754 0441 0B       		.byte	0xb
 2755 0442 56       		.byte	0x56
 2756 0443 81000000 		.4byte	0x81
 2757 0447 00       		.byte	0
 2758 0448 0B       		.uleb128 0xb
 2759 0449 6E080000 		.4byte	.LASF75
 2760 044d 0B       		.byte	0xb
 2761 044e 58       		.byte	0x58
 2762 044f 79040000 		.4byte	0x479
 2763 0453 01       		.byte	0x1
 2764 0454 0B       		.uleb128 0xb
 2765 0455 BB080000 		.4byte	.LASF76
 2766 0459 0B       		.byte	0xb
 2767 045a 5A       		.byte	0x5a
 2768 045b 81000000 		.4byte	0x81
 2769 045f 02       		.byte	0x2
 2770 0460 0B       		.uleb128 0xb
 2771 0461 7B060000 		.4byte	.LASF77
 2772 0465 0B       		.byte	0xb
 2773 0466 5C       		.byte	0x5c
 2774 0467 81000000 		.4byte	0x81
 2775 046b 03       		.byte	0x3
 2776 046c 0B       		.uleb128 0xb
 2777 046d EB020000 		.4byte	.LASF78
 2778 0471 0B       		.byte	0xb
 2779 0472 5F       		.byte	0x5f
 2780 0473 81000000 		.4byte	0x81
 2781 0477 04       		.byte	0x4
 2782 0478 00       		.byte	0
 2783 0479 02       		.uleb128 0x2
 2784 047a 01       		.byte	0x1
 2785 047b 02       		.byte	0x2
 2786 047c 28060000 		.4byte	.LASF79
 2787 0480 03       		.uleb128 0x3
 2788 0481 CE040000 		.4byte	.LASF80
 2789 0485 0B       		.byte	0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 66


 2790 0486 61       		.byte	0x61
 2791 0487 34040000 		.4byte	0x434
 2792 048b 09       		.uleb128 0x9
 2793 048c 60       		.byte	0x60
 2794 048d 0C       		.byte	0xc
 2795 048e 07       		.byte	0x7
 2796 048f C4040000 		.4byte	0x4c4
 2797 0493 0B       		.uleb128 0xb
 2798 0494 3A070000 		.4byte	.LASF81
 2799 0498 0C       		.byte	0xc
 2800 0499 08       		.byte	0x8
 2801 049a C4040000 		.4byte	0x4c4
 2802 049e 00       		.byte	0
 2803 049f 0B       		.uleb128 0xb
 2804 04a0 0F000000 		.4byte	.LASF82
 2805 04a4 0C       		.byte	0xc
 2806 04a5 09       		.byte	0x9
 2807 04a6 C9000000 		.4byte	0xc9
 2808 04aa 2C       		.byte	0x2c
 2809 04ab 0B       		.uleb128 0xb
 2810 04ac C3030000 		.4byte	.LASF83
 2811 04b0 0C       		.byte	0xc
 2812 04b1 0A       		.byte	0xa
 2813 04b2 C4040000 		.4byte	0x4c4
 2814 04b6 30       		.byte	0x30
 2815 04b7 0B       		.uleb128 0xb
 2816 04b8 38040000 		.4byte	.LASF84
 2817 04bc 0C       		.byte	0xc
 2818 04bd 0B       		.byte	0xb
 2819 04be C9000000 		.4byte	0xc9
 2820 04c2 5C       		.byte	0x5c
 2821 04c3 00       		.byte	0
 2822 04c4 07       		.uleb128 0x7
 2823 04c5 C9000000 		.4byte	0xc9
 2824 04c9 D4040000 		.4byte	0x4d4
 2825 04cd 08       		.uleb128 0x8
 2826 04ce F1000000 		.4byte	0xf1
 2827 04d2 0A       		.byte	0xa
 2828 04d3 00       		.byte	0
 2829 04d4 03       		.uleb128 0x3
 2830 04d5 93030000 		.4byte	.LASF85
 2831 04d9 0C       		.byte	0xc
 2832 04da 0C       		.byte	0xc
 2833 04db 8B040000 		.4byte	0x48b
 2834 04df 09       		.uleb128 0x9
 2835 04e0 06       		.byte	0x6
 2836 04e1 0D       		.byte	0xd
 2837 04e2 2E       		.byte	0x2e
 2838 04e3 18050000 		.4byte	0x518
 2839 04e7 0B       		.uleb128 0xb
 2840 04e8 CC020000 		.4byte	.LASF86
 2841 04ec 0D       		.byte	0xd
 2842 04ed 30       		.byte	0x30
 2843 04ee 8D000000 		.4byte	0x8d
 2844 04f2 00       		.byte	0
 2845 04f3 0B       		.uleb128 0xb
 2846 04f4 58080000 		.4byte	.LASF87
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 67


 2847 04f8 0D       		.byte	0xd
 2848 04f9 31       		.byte	0x31
 2849 04fa B1000000 		.4byte	0xb1
 2850 04fe 02       		.byte	0x2
 2851 04ff 0B       		.uleb128 0xb
 2852 0500 4A080000 		.4byte	.LASF88
 2853 0504 0D       		.byte	0xd
 2854 0505 32       		.byte	0x32
 2855 0506 81000000 		.4byte	0x81
 2856 050a 04       		.byte	0x4
 2857 050b 0B       		.uleb128 0xb
 2858 050c 5C000000 		.4byte	.LASF89
 2859 0510 0D       		.byte	0xd
 2860 0511 33       		.byte	0x33
 2861 0512 81000000 		.4byte	0x81
 2862 0516 05       		.byte	0x5
 2863 0517 00       		.byte	0
 2864 0518 03       		.uleb128 0x3
 2865 0519 3D020000 		.4byte	.LASF90
 2866 051d 0D       		.byte	0xd
 2867 051e 36       		.byte	0x36
 2868 051f 23050000 		.4byte	0x523
 2869 0523 0C       		.uleb128 0xc
 2870 0524 DF040000 		.4byte	0x4df
 2871 0528 09       		.uleb128 0x9
 2872 0529 1C       		.byte	0x1c
 2873 052a 0D       		.byte	0xd
 2874 052b 39       		.byte	0x39
 2875 052c 49050000 		.4byte	0x549
 2876 0530 0B       		.uleb128 0xb
 2877 0531 07040000 		.4byte	.LASF91
 2878 0535 0D       		.byte	0xd
 2879 0536 3B       		.byte	0x3b
 2880 0537 49050000 		.4byte	0x549
 2881 053b 00       		.byte	0
 2882 053c 0B       		.uleb128 0xb
 2883 053d AD080000 		.4byte	.LASF92
 2884 0541 0D       		.byte	0xd
 2885 0542 3C       		.byte	0x3c
 2886 0543 FE000000 		.4byte	0xfe
 2887 0547 04       		.byte	0x4
 2888 0548 00       		.byte	0
 2889 0549 06       		.uleb128 0x6
 2890 054a 04       		.byte	0x4
 2891 054b B5030000 		.4byte	0x3b5
 2892 054f 03       		.uleb128 0x3
 2893 0550 C3040000 		.4byte	.LASF93
 2894 0554 0D       		.byte	0xd
 2895 0555 3E       		.byte	0x3e
 2896 0556 28050000 		.4byte	0x528
 2897 055a 09       		.uleb128 0x9
 2898 055b 68       		.byte	0x68
 2899 055c 0D       		.byte	0xd
 2900 055d 44       		.byte	0x44
 2901 055e 7B050000 		.4byte	0x57b
 2902 0562 0B       		.uleb128 0xb
 2903 0563 12040000 		.4byte	.LASF94
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 68


 2904 0567 0D       		.byte	0xd
 2905 0568 49       		.byte	0x49
 2906 0569 7B050000 		.4byte	0x57b
 2907 056d 00       		.byte	0
 2908 056e 0B       		.uleb128 0xb
 2909 056f F6030000 		.4byte	.LASF95
 2910 0573 0D       		.byte	0xd
 2911 0574 4A       		.byte	0x4a
 2912 0575 68000000 		.4byte	0x68
 2913 0579 64       		.byte	0x64
 2914 057a 00       		.byte	0
 2915 057b 07       		.uleb128 0x7
 2916 057c E3000000 		.4byte	0xe3
 2917 0580 8B050000 		.4byte	0x58b
 2918 0584 08       		.uleb128 0x8
 2919 0585 F1000000 		.4byte	0xf1
 2920 0589 63       		.byte	0x63
 2921 058a 00       		.byte	0
 2922 058b 03       		.uleb128 0x3
 2923 058c 2D050000 		.4byte	.LASF96
 2924 0590 0D       		.byte	0xd
 2925 0591 50       		.byte	0x50
 2926 0592 5A050000 		.4byte	0x55a
 2927 0596 0F       		.uleb128 0xf
 2928 0597 74000000 		.4byte	.LASF171
 2929 059b 01       		.byte	0x1
 2930 059c 14       		.byte	0x14
 2931 059d 00000000 		.4byte	.LFB64
 2932 05a1 0C000000 		.4byte	.LFE64-.LFB64
 2933 05a5 01       		.uleb128 0x1
 2934 05a6 9C       		.byte	0x9c
 2935 05a7 10       		.uleb128 0x10
 2936 05a8 9D080000 		.4byte	.LASF110
 2937 05ac 01       		.byte	0x1
 2938 05ad 28       		.byte	0x28
 2939 05ae 00000000 		.4byte	.LFB65
 2940 05b2 2C010000 		.4byte	.LFE65-.LFB65
 2941 05b6 01       		.uleb128 0x1
 2942 05b7 9C       		.byte	0x9c
 2943 05b8 E7050000 		.4byte	0x5e7
 2944 05bc 11       		.uleb128 0x11
 2945 05bd 99070000 		.4byte	.LASF97
 2946 05c1 01       		.byte	0x1
 2947 05c2 3C       		.byte	0x3c
 2948 05c3 E7050000 		.4byte	0x5e7
 2949 05c7 02       		.uleb128 0x2
 2950 05c8 91       		.byte	0x91
 2951 05c9 64       		.sleb128 -28
 2952 05ca 11       		.uleb128 0x11
 2953 05cb 77080000 		.4byte	.LASF98
 2954 05cf 01       		.byte	0x1
 2955 05d0 59       		.byte	0x59
 2956 05d1 F7050000 		.4byte	0x5f7
 2957 05d5 02       		.uleb128 0x2
 2958 05d6 91       		.byte	0x91
 2959 05d7 58       		.sleb128 -40
 2960 05d8 11       		.uleb128 0x11
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 69


 2961 05d9 10050000 		.4byte	.LASF99
 2962 05dd 01       		.byte	0x1
 2963 05de 5E       		.byte	0x5e
 2964 05df 81000000 		.4byte	0x81
 2965 05e3 02       		.uleb128 0x2
 2966 05e4 91       		.byte	0x91
 2967 05e5 6F       		.sleb128 -17
 2968 05e6 00       		.byte	0
 2969 05e7 07       		.uleb128 0x7
 2970 05e8 99000000 		.4byte	0x99
 2971 05ec F7050000 		.4byte	0x5f7
 2972 05f0 08       		.uleb128 0x8
 2973 05f1 F1000000 		.4byte	0xf1
 2974 05f5 01       		.byte	0x1
 2975 05f6 00       		.byte	0
 2976 05f7 07       		.uleb128 0x7
 2977 05f8 E3000000 		.4byte	0xe3
 2978 05fc 07060000 		.4byte	0x607
 2979 0600 08       		.uleb128 0x8
 2980 0601 F1000000 		.4byte	0xf1
 2981 0605 09       		.byte	0x9
 2982 0606 00       		.byte	0
 2983 0607 12       		.uleb128 0x12
 2984 0608 1F040000 		.4byte	.LASF101
 2985 060c 01       		.byte	0x1
 2986 060d 68       		.byte	0x68
 2987 060e 68000000 		.4byte	0x68
 2988 0612 00000000 		.4byte	.LFB66
 2989 0616 64000000 		.4byte	.LFE66-.LFB66
 2990 061a 01       		.uleb128 0x1
 2991 061b 9C       		.byte	0x9c
 2992 061c 2F060000 		.4byte	0x62f
 2993 0620 11       		.uleb128 0x11
 2994 0621 0C060000 		.4byte	.LASF100
 2995 0625 01       		.byte	0x1
 2996 0626 82       		.byte	0x82
 2997 0627 81000000 		.4byte	0x81
 2998 062b 02       		.uleb128 0x2
 2999 062c 91       		.byte	0x91
 3000 062d 77       		.sleb128 -9
 3001 062e 00       		.byte	0
 3002 062f 13       		.uleb128 0x13
 3003 0630 BF070000 		.4byte	.LASF172
 3004 0634 01       		.byte	0x1
 3005 0635 92       		.byte	0x92
 3006 0636 00000000 		.4byte	.LFB67
 3007 063a 2A000000 		.4byte	.LFE67-.LFB67
 3008 063e 01       		.uleb128 0x1
 3009 063f 9C       		.byte	0x9c
 3010 0640 14       		.uleb128 0x14
 3011 0641 4E030000 		.4byte	.LASF102
 3012 0645 01       		.byte	0x1
 3013 0646 B7       		.byte	0xb7
 3014 0647 00000000 		.4byte	.LFB68
 3015 064b 50000000 		.4byte	.LFE68-.LFB68
 3016 064f 01       		.uleb128 0x1
 3017 0650 9C       		.byte	0x9c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 70


 3018 0651 64060000 		.4byte	0x664
 3019 0655 15       		.uleb128 0x15
 3020 0656 E5040000 		.4byte	.LASF103
 3021 065a 01       		.byte	0x1
 3022 065b B7       		.byte	0xb7
 3023 065c 81000000 		.4byte	0x81
 3024 0660 02       		.uleb128 0x2
 3025 0661 91       		.byte	0x91
 3026 0662 77       		.sleb128 -9
 3027 0663 00       		.byte	0
 3028 0664 16       		.uleb128 0x16
 3029 0665 92080000 		.4byte	.LASF107
 3030 0669 01       		.byte	0x1
 3031 066a CE       		.byte	0xce
 3032 066b 81000000 		.4byte	0x81
 3033 066f 00000000 		.4byte	.LFB69
 3034 0673 48000000 		.4byte	.LFE69-.LFB69
 3035 0677 01       		.uleb128 0x1
 3036 0678 9C       		.byte	0x9c
 3037 0679 9A060000 		.4byte	0x69a
 3038 067d 15       		.uleb128 0x15
 3039 067e 9D050000 		.4byte	.LASF104
 3040 0682 01       		.byte	0x1
 3041 0683 CE       		.byte	0xce
 3042 0684 9A060000 		.4byte	0x69a
 3043 0688 02       		.uleb128 0x2
 3044 0689 91       		.byte	0x91
 3045 068a 74       		.sleb128 -12
 3046 068b 15       		.uleb128 0x15
 3047 068c E5040000 		.4byte	.LASF103
 3048 0690 01       		.byte	0x1
 3049 0691 CE       		.byte	0xce
 3050 0692 81000000 		.4byte	0x81
 3051 0696 02       		.uleb128 0x2
 3052 0697 91       		.byte	0x91
 3053 0698 73       		.sleb128 -13
 3054 0699 00       		.byte	0
 3055 069a 06       		.uleb128 0x6
 3056 069b 04       		.byte	0x4
 3057 069c 18050000 		.4byte	0x518
 3058 06a0 17       		.uleb128 0x17
 3059 06a1 64060000 		.4byte	.LASF105
 3060 06a5 01       		.byte	0x1
 3061 06a6 E3       		.byte	0xe3
 3062 06a7 00000000 		.4byte	.LFB70
 3063 06ab 1E000000 		.4byte	.LFE70-.LFB70
 3064 06af 01       		.uleb128 0x1
 3065 06b0 9C       		.byte	0x9c
 3066 06b1 C4060000 		.4byte	0x6c4
 3067 06b5 15       		.uleb128 0x15
 3068 06b6 C2060000 		.4byte	.LASF106
 3069 06ba 01       		.byte	0x1
 3070 06bb E3       		.byte	0xe3
 3071 06bc 9A060000 		.4byte	0x69a
 3072 06c0 02       		.uleb128 0x2
 3073 06c1 91       		.byte	0x91
 3074 06c2 74       		.sleb128 -12
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 71


 3075 06c3 00       		.byte	0
 3076 06c4 18       		.uleb128 0x18
 3077 06c5 8A050000 		.4byte	.LASF108
 3078 06c9 01       		.byte	0x1
 3079 06ca EC       		.byte	0xec
 3080 06cb 18050000 		.4byte	0x518
 3081 06cf 00000000 		.4byte	.LFB71
 3082 06d3 46000000 		.4byte	.LFE71-.LFB71
 3083 06d7 01       		.uleb128 0x1
 3084 06d8 9C       		.byte	0x9c
 3085 06d9 16070000 		.4byte	0x716
 3086 06dd 15       		.uleb128 0x15
 3087 06de CC020000 		.4byte	.LASF86
 3088 06e2 01       		.byte	0x1
 3089 06e3 EC       		.byte	0xec
 3090 06e4 8D000000 		.4byte	0x8d
 3091 06e8 02       		.uleb128 0x2
 3092 06e9 91       		.byte	0x91
 3093 06ea 6A       		.sleb128 -22
 3094 06eb 15       		.uleb128 0x15
 3095 06ec 4A080000 		.4byte	.LASF88
 3096 06f0 01       		.byte	0x1
 3097 06f1 EC       		.byte	0xec
 3098 06f2 81000000 		.4byte	0x81
 3099 06f6 02       		.uleb128 0x2
 3100 06f7 91       		.byte	0x91
 3101 06f8 69       		.sleb128 -23
 3102 06f9 15       		.uleb128 0x15
 3103 06fa 5C000000 		.4byte	.LASF89
 3104 06fe 01       		.byte	0x1
 3105 06ff EC       		.byte	0xec
 3106 0700 81000000 		.4byte	0x81
 3107 0704 02       		.uleb128 0x2
 3108 0705 91       		.byte	0x91
 3109 0706 68       		.sleb128 -24
 3110 0707 11       		.uleb128 0x11
 3111 0708 E9070000 		.4byte	.LASF109
 3112 070c 01       		.byte	0x1
 3113 070d EF       		.byte	0xef
 3114 070e 18050000 		.4byte	0x518
 3115 0712 02       		.uleb128 0x2
 3116 0713 91       		.byte	0x91
 3117 0714 70       		.sleb128 -16
 3118 0715 00       		.byte	0
 3119 0716 19       		.uleb128 0x19
 3120 0717 D1060000 		.4byte	.LASF111
 3121 071b 01       		.byte	0x1
 3122 071c 0501     		.2byte	0x105
 3123 071e 00000000 		.4byte	.LFB72
 3124 0722 2C010000 		.4byte	.LFE72-.LFB72
 3125 0726 01       		.uleb128 0x1
 3126 0727 9C       		.byte	0x9c
 3127 0728 8D070000 		.4byte	0x78d
 3128 072c 1A       		.uleb128 0x1a
 3129 072d 01020000 		.4byte	.LASF112
 3130 0731 01       		.byte	0x1
 3131 0732 0D01     		.2byte	0x10d
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 72


 3132 0734 D5010000 		.4byte	0x1d5
 3133 0738 03       		.uleb128 0x3
 3134 0739 91       		.byte	0x91
 3135 073a EC7C     		.sleb128 -404
 3136 073c 1A       		.uleb128 0x1a
 3137 073d 60010000 		.4byte	.LASF113
 3138 0741 01       		.byte	0x1
 3139 0742 1701     		.2byte	0x117
 3140 0744 D5010000 		.4byte	0x1d5
 3141 0748 03       		.uleb128 0x3
 3142 0749 91       		.byte	0x91
 3143 074a E879     		.sleb128 -792
 3144 074c 1A       		.uleb128 0x1a
 3145 074d 24080000 		.4byte	.LASF114
 3146 0751 01       		.byte	0x1
 3147 0752 1B01     		.2byte	0x11b
 3148 0754 D5010000 		.4byte	0x1d5
 3149 0758 03       		.uleb128 0x3
 3150 0759 91       		.byte	0x91
 3151 075a E476     		.sleb128 -1180
 3152 075c 1A       		.uleb128 0x1a
 3153 075d 0D010000 		.4byte	.LASF115
 3154 0761 01       		.byte	0x1
 3155 0762 1F01     		.2byte	0x11f
 3156 0764 D5010000 		.4byte	0x1d5
 3157 0768 03       		.uleb128 0x3
 3158 0769 91       		.byte	0x91
 3159 076a E073     		.sleb128 -1568
 3160 076c 1A       		.uleb128 0x1a
 3161 076d 5A040000 		.4byte	.LASF116
 3162 0771 01       		.byte	0x1
 3163 0772 2301     		.2byte	0x123
 3164 0774 D5010000 		.4byte	0x1d5
 3165 0778 03       		.uleb128 0x3
 3166 0779 91       		.byte	0x91
 3167 077a DC70     		.sleb128 -1956
 3168 077c 1A       		.uleb128 0x1a
 3169 077d 00000000 		.4byte	.LASF117
 3170 0781 01       		.byte	0x1
 3171 0782 2701     		.2byte	0x127
 3172 0784 D5010000 		.4byte	0x1d5
 3173 0788 03       		.uleb128 0x3
 3174 0789 91       		.byte	0x91
 3175 078a D86D     		.sleb128 -2344
 3176 078c 00       		.byte	0
 3177 078d 1B       		.uleb128 0x1b
 3178 078e A8080000 		.4byte	.LASF173
 3179 0792 01       		.byte	0x1
 3180 0793 3201     		.2byte	0x132
 3181 0795 68000000 		.4byte	0x68
 3182 0799 00000000 		.4byte	.LFB73
 3183 079d 1E000000 		.4byte	.LFE73-.LFB73
 3184 07a1 01       		.uleb128 0x1
 3185 07a2 9C       		.byte	0x9c
 3186 07a3 1C       		.uleb128 0x1c
 3187 07a4 86020000 		.4byte	.LASF118
 3188 07a8 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 73


 3189 07a9 4801     		.2byte	0x148
 3190 07ab 81000000 		.4byte	0x81
 3191 07af 00000000 		.4byte	.LFB74
 3192 07b3 30040000 		.4byte	.LFE74-.LFB74
 3193 07b7 01       		.uleb128 0x1
 3194 07b8 9C       		.byte	0x9c
 3195 07b9 FD080000 		.4byte	0x8fd
 3196 07bd 1D       		.uleb128 0x1d
 3197 07be 62000000 		.4byte	.LBB2
 3198 07c2 B8030000 		.4byte	.LBE2-.LBB2
 3199 07c6 1A       		.uleb128 0x1a
 3200 07c7 AE050000 		.4byte	.LASF119
 3201 07cb 01       		.byte	0x1
 3202 07cc 7801     		.2byte	0x178
 3203 07ce 6D030000 		.4byte	0x36d
 3204 07d2 02       		.uleb128 0x2
 3205 07d3 91       		.byte	0x91
 3206 07d4 48       		.sleb128 -56
 3207 07d5 1A       		.uleb128 0x1a
 3208 07d6 5E020000 		.4byte	.LASF120
 3209 07da 01       		.byte	0x1
 3210 07db 7D01     		.2byte	0x17d
 3211 07dd 6D030000 		.4byte	0x36d
 3212 07e1 03       		.uleb128 0x3
 3213 07e2 91       		.byte	0x91
 3214 07e3 B47F     		.sleb128 -76
 3215 07e5 1A       		.uleb128 0x1a
 3216 07e6 A0030000 		.4byte	.LASF121
 3217 07ea 01       		.byte	0x1
 3218 07eb 9001     		.2byte	0x190
 3219 07ed 8D000000 		.4byte	0x8d
 3220 07f1 02       		.uleb128 0x2
 3221 07f2 91       		.byte	0x91
 3222 07f3 66       		.sleb128 -26
 3223 07f4 1A       		.uleb128 0x1a
 3224 07f5 45040000 		.4byte	.LASF122
 3225 07f9 01       		.byte	0x1
 3226 07fa 9101     		.2byte	0x191
 3227 07fc 6D030000 		.4byte	0x36d
 3228 0800 03       		.uleb128 0x3
 3229 0801 91       		.byte	0x91
 3230 0802 A07F     		.sleb128 -96
 3231 0804 1A       		.uleb128 0x1a
 3232 0805 84070000 		.4byte	.LASF123
 3233 0809 01       		.byte	0x1
 3234 080a A601     		.2byte	0x1a6
 3235 080c FD080000 		.4byte	0x8fd
 3236 0810 03       		.uleb128 0x3
 3237 0811 91       		.byte	0x91
 3238 0812 B875     		.sleb128 -1352
 3239 0814 1A       		.uleb128 0x1a
 3240 0815 04080000 		.4byte	.LASF31
 3241 0819 01       		.byte	0x1
 3242 081a A701     		.2byte	0x1a7
 3243 081c 81000000 		.4byte	0x81
 3244 0820 02       		.uleb128 0x2
 3245 0821 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 74


 3246 0822 65       		.sleb128 -27
 3247 0823 1A       		.uleb128 0x1a
 3248 0824 56070000 		.4byte	.LASF124
 3249 0828 01       		.byte	0x1
 3250 0829 AE01     		.2byte	0x1ae
 3251 082b F8000000 		.4byte	0xf8
 3252 082f 02       		.uleb128 0x2
 3253 0830 91       		.byte	0x91
 3254 0831 6C       		.sleb128 -20
 3255 0832 1A       		.uleb128 0x1a
 3256 0833 7D010000 		.4byte	.LASF125
 3257 0837 01       		.byte	0x1
 3258 0838 B201     		.2byte	0x1b2
 3259 083a A5000000 		.4byte	0xa5
 3260 083e 02       		.uleb128 0x2
 3261 083f 91       		.byte	0x91
 3262 0840 64       		.sleb128 -28
 3263 0841 1A       		.uleb128 0x1a
 3264 0842 8F020000 		.4byte	.LASF126
 3265 0846 01       		.byte	0x1
 3266 0847 E201     		.2byte	0x1e2
 3267 0849 4C000000 		.4byte	0x4c
 3268 084d 02       		.uleb128 0x2
 3269 084e 91       		.byte	0x91
 3270 084f 5C       		.sleb128 -36
 3271 0850 1E       		.uleb128 0x1e
 3272 0851 CE000000 		.4byte	.LBB3
 3273 0855 2C000000 		.4byte	.LBE3-.LBB3
 3274 0859 7D080000 		.4byte	0x87d
 3275 085d 1A       		.uleb128 0x1a
 3276 085e FD060000 		.4byte	.LASF127
 3277 0862 01       		.byte	0x1
 3278 0863 8501     		.2byte	0x185
 3279 0865 8D000000 		.4byte	0x8d
 3280 0869 02       		.uleb128 0x2
 3281 086a 91       		.byte	0x91
 3282 086b 68       		.sleb128 -24
 3283 086c 1A       		.uleb128 0x1a
 3284 086d EF010000 		.4byte	.LASF128
 3285 0871 01       		.byte	0x1
 3286 0872 8601     		.2byte	0x186
 3287 0874 6D030000 		.4byte	0x36d
 3288 0878 03       		.uleb128 0x3
 3289 0879 91       		.byte	0x91
 3290 087a 8C7F     		.sleb128 -116
 3291 087c 00       		.byte	0
 3292 087d 1E       		.uleb128 0x1e
 3293 087e FC000000 		.4byte	.LBB4
 3294 0882 20000000 		.4byte	.LBE4-.LBB4
 3295 0886 9B080000 		.4byte	0x89b
 3296 088a 1A       		.uleb128 0x1a
 3297 088b EF010000 		.4byte	.LASF128
 3298 088f 01       		.byte	0x1
 3299 0890 8A01     		.2byte	0x18a
 3300 0892 6D030000 		.4byte	0x36d
 3301 0896 03       		.uleb128 0x3
 3302 0897 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 75


 3303 0898 F87E     		.sleb128 -136
 3304 089a 00       		.byte	0
 3305 089b 1E       		.uleb128 0x1e
 3306 089c 3C020000 		.4byte	.LBB5
 3307 08a0 BC000000 		.4byte	.LBE5-.LBB5
 3308 08a4 D2080000 		.4byte	0x8d2
 3309 08a8 1A       		.uleb128 0x1a
 3310 08a9 96050000 		.4byte	.LASF129
 3311 08ad 01       		.byte	0x1
 3312 08ae B701     		.2byte	0x1b7
 3313 08b0 A5000000 		.4byte	0xa5
 3314 08b4 02       		.uleb128 0x2
 3315 08b5 91       		.byte	0x91
 3316 08b6 6B       		.sleb128 -21
 3317 08b7 1D       		.uleb128 0x1d
 3318 08b8 44020000 		.4byte	.LBB6
 3319 08bc 9A000000 		.4byte	.LBE6-.LBB6
 3320 08c0 1A       		.uleb128 0x1a
 3321 08c1 6C030000 		.4byte	.LASF130
 3322 08c5 01       		.byte	0x1
 3323 08c6 B901     		.2byte	0x1b9
 3324 08c8 0D090000 		.4byte	0x90d
 3325 08cc 03       		.uleb128 0x3
 3326 08cd 91       		.byte	0x91
 3327 08ce 8077     		.sleb128 -1152
 3328 08d0 00       		.byte	0
 3329 08d1 00       		.byte	0
 3330 08d2 1D       		.uleb128 0x1d
 3331 08d3 12030000 		.4byte	.LBB7
 3332 08d7 3A000000 		.4byte	.LBE7-.LBB7
 3333 08db 1A       		.uleb128 0x1a
 3334 08dc 6C020000 		.4byte	.LASF131
 3335 08e0 01       		.byte	0x1
 3336 08e1 D901     		.2byte	0x1d9
 3337 08e3 68000000 		.4byte	0x68
 3338 08e7 02       		.uleb128 0x2
 3339 08e8 91       		.byte	0x91
 3340 08e9 60       		.sleb128 -32
 3341 08ea 1A       		.uleb128 0x1a
 3342 08eb 6F060000 		.4byte	.LASF132
 3343 08ef 01       		.byte	0x1
 3344 08f0 DA01     		.2byte	0x1da
 3345 08f2 F7050000 		.4byte	0x5f7
 3346 08f6 03       		.uleb128 0x3
 3347 08f7 91       		.byte	0x91
 3348 08f8 EC7E     		.sleb128 -148
 3349 08fa 00       		.byte	0
 3350 08fb 00       		.byte	0
 3351 08fc 00       		.byte	0
 3352 08fd 07       		.uleb128 0x7
 3353 08fe E3000000 		.4byte	0xe3
 3354 0902 0D090000 		.4byte	0x90d
 3355 0906 08       		.uleb128 0x8
 3356 0907 F1000000 		.4byte	0xf1
 3357 090b C7       		.byte	0xc7
 3358 090c 00       		.byte	0
 3359 090d 07       		.uleb128 0x7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 76


 3360 090e E3000000 		.4byte	0xe3
 3361 0912 1E090000 		.4byte	0x91e
 3362 0916 1F       		.uleb128 0x1f
 3363 0917 F1000000 		.4byte	0xf1
 3364 091b E803     		.2byte	0x3e8
 3365 091d 00       		.byte	0
 3366 091e 1C       		.uleb128 0x1c
 3367 091f E8050000 		.4byte	.LASF133
 3368 0923 01       		.byte	0x1
 3369 0924 F701     		.2byte	0x1f7
 3370 0926 81000000 		.4byte	0x81
 3371 092a 00000000 		.4byte	.LFB75
 3372 092e 44000000 		.4byte	.LFE75-.LFB75
 3373 0932 01       		.uleb128 0x1
 3374 0933 9C       		.byte	0x9c
 3375 0934 52090000 		.4byte	0x952
 3376 0938 1D       		.uleb128 0x1d
 3377 0939 20000000 		.4byte	.LBB8
 3378 093d 1A000000 		.4byte	.LBE8-.LBB8
 3379 0941 1A       		.uleb128 0x1a
 3380 0942 8F020000 		.4byte	.LASF126
 3381 0946 01       		.byte	0x1
 3382 0947 0202     		.2byte	0x202
 3383 0949 4C000000 		.4byte	0x4c
 3384 094d 02       		.uleb128 0x2
 3385 094e 91       		.byte	0x91
 3386 094f 74       		.sleb128 -12
 3387 0950 00       		.byte	0
 3388 0951 00       		.byte	0
 3389 0952 1C       		.uleb128 0x1c
 3390 0953 E0030000 		.4byte	.LASF134
 3391 0957 01       		.byte	0x1
 3392 0958 1702     		.2byte	0x217
 3393 095a 81000000 		.4byte	0x81
 3394 095e 00000000 		.4byte	.LFB76
 3395 0962 84030000 		.4byte	.LFE76-.LFB76
 3396 0966 01       		.uleb128 0x1
 3397 0967 9C       		.byte	0x9c
 3398 0968 010A0000 		.4byte	0xa01
 3399 096c 1A       		.uleb128 0x1a
 3400 096d 5D050000 		.4byte	.LASF60
 3401 0971 01       		.byte	0x1
 3402 0972 1A02     		.2byte	0x21a
 3403 0974 4C000000 		.4byte	0x4c
 3404 0978 02       		.uleb128 0x2
 3405 0979 91       		.byte	0x91
 3406 097a 6C       		.sleb128 -20
 3407 097b 1A       		.uleb128 0x1a
 3408 097c 5C070000 		.4byte	.LASF135
 3409 0980 01       		.byte	0x1
 3410 0981 1B02     		.2byte	0x21b
 3411 0983 010A0000 		.4byte	0xa01
 3412 0987 02       		.uleb128 0x2
 3413 0988 91       		.byte	0x91
 3414 0989 4C       		.sleb128 -52
 3415 098a 1A       		.uleb128 0x1a
 3416 098b FC020000 		.4byte	.LASF59
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 77


 3417 098f 01       		.byte	0x1
 3418 0990 1F02     		.2byte	0x21f
 3419 0992 6D030000 		.4byte	0x36d
 3420 0996 03       		.uleb128 0x3
 3421 0997 91       		.byte	0x91
 3422 0998 B87F     		.sleb128 -72
 3423 099a 1A       		.uleb128 0x1a
 3424 099b 77030000 		.4byte	.LASF136
 3425 099f 01       		.byte	0x1
 3426 09a0 3D02     		.2byte	0x23d
 3427 09a2 79020000 		.4byte	0x279
 3428 09a6 03       		.uleb128 0x3
 3429 09a7 91       		.byte	0x91
 3430 09a8 A47F     		.sleb128 -92
 3431 09aa 1E       		.uleb128 0x1e
 3432 09ab 26000000 		.4byte	.LBB9
 3433 09af 7A000000 		.4byte	.LBE9-.LBB9
 3434 09b3 C8090000 		.4byte	0x9c8
 3435 09b7 1A       		.uleb128 0x1a
 3436 09b8 A2070000 		.4byte	.LASF137
 3437 09bc 01       		.byte	0x1
 3438 09bd 2502     		.2byte	0x225
 3439 09bf 29020000 		.4byte	0x229
 3440 09c3 03       		.uleb128 0x3
 3441 09c4 91       		.byte	0x91
 3442 09c5 887F     		.sleb128 -120
 3443 09c7 00       		.byte	0
 3444 09c8 1E       		.uleb128 0x1e
 3445 09c9 28010000 		.4byte	.LBB10
 3446 09cd F4000000 		.4byte	.LBE10-.LBB10
 3447 09d1 E6090000 		.4byte	0x9e6
 3448 09d5 1A       		.uleb128 0x1a
 3449 09d6 F9070000 		.4byte	.LASF138
 3450 09da 01       		.byte	0x1
 3451 09db 5802     		.2byte	0x258
 3452 09dd BD020000 		.4byte	0x2bd
 3453 09e1 03       		.uleb128 0x3
 3454 09e2 91       		.byte	0x91
 3455 09e3 F87E     		.sleb128 -136
 3456 09e5 00       		.byte	0
 3457 09e6 1D       		.uleb128 0x1d
 3458 09e7 2C020000 		.4byte	.LBB11
 3459 09eb DC000000 		.4byte	.LBE11-.LBB11
 3460 09ef 1A       		.uleb128 0x1a
 3461 09f0 BF020000 		.4byte	.LASF139
 3462 09f4 01       		.byte	0x1
 3463 09f5 7B02     		.2byte	0x27b
 3464 09f7 D4040000 		.4byte	0x4d4
 3465 09fb 03       		.uleb128 0x3
 3466 09fc 91       		.byte	0x91
 3467 09fd 987E     		.sleb128 -232
 3468 09ff 00       		.byte	0
 3469 0a00 00       		.byte	0
 3470 0a01 07       		.uleb128 0x7
 3471 0a02 E3000000 		.4byte	0xe3
 3472 0a06 110A0000 		.4byte	0xa11
 3473 0a0a 08       		.uleb128 0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 78


 3474 0a0b F1000000 		.4byte	0xf1
 3475 0a0f 1F       		.byte	0x1f
 3476 0a10 00       		.byte	0
 3477 0a11 20       		.uleb128 0x20
 3478 0a12 3A030000 		.4byte	.LASF140
 3479 0a16 01       		.byte	0x1
 3480 0a17 9F02     		.2byte	0x29f
 3481 0a19 81000000 		.4byte	0x81
 3482 0a1d 00000000 		.4byte	.LFB77
 3483 0a21 74000000 		.4byte	.LFE77-.LFB77
 3484 0a25 01       		.uleb128 0x1
 3485 0a26 9C       		.byte	0x9c
 3486 0a27 570A0000 		.4byte	0xa57
 3487 0a2b 21       		.uleb128 0x21
 3488 0a2c 5D050000 		.4byte	.LASF60
 3489 0a30 01       		.byte	0x1
 3490 0a31 9F02     		.2byte	0x29f
 3491 0a33 4C000000 		.4byte	0x4c
 3492 0a37 02       		.uleb128 0x2
 3493 0a38 91       		.byte	0x91
 3494 0a39 64       		.sleb128 -28
 3495 0a3a 22       		.uleb128 0x22
 3496 0a3b 7400     		.ascii	"t\000"
 3497 0a3d 01       		.byte	0x1
 3498 0a3e A602     		.2byte	0x2a6
 3499 0a40 570A0000 		.4byte	0xa57
 3500 0a44 02       		.uleb128 0x2
 3501 0a45 91       		.byte	0x91
 3502 0a46 74       		.sleb128 -12
 3503 0a47 1A       		.uleb128 0x1a
 3504 0a48 3C050000 		.4byte	.LASF141
 3505 0a4c 01       		.byte	0x1
 3506 0a4d AB02     		.2byte	0x2ab
 3507 0a4f 77010000 		.4byte	0x177
 3508 0a53 02       		.uleb128 0x2
 3509 0a54 91       		.byte	0x91
 3510 0a55 68       		.sleb128 -24
 3511 0a56 00       		.byte	0
 3512 0a57 06       		.uleb128 0x6
 3513 0a58 04       		.byte	0x4
 3514 0a59 C8020000 		.4byte	0x2c8
 3515 0a5d 20       		.uleb128 0x20
 3516 0a5e DB020000 		.4byte	.LASF142
 3517 0a62 01       		.byte	0x1
 3518 0a63 C802     		.2byte	0x2c8
 3519 0a65 81000000 		.4byte	0x81
 3520 0a69 00000000 		.4byte	.LFB78
 3521 0a6d 38010000 		.4byte	.LFE78-.LFB78
 3522 0a71 01       		.uleb128 0x1
 3523 0a72 9C       		.byte	0x9c
 3524 0a73 D60A0000 		.4byte	0xad6
 3525 0a77 21       		.uleb128 0x21
 3526 0a78 02030000 		.4byte	.LASF143
 3527 0a7c 01       		.byte	0x1
 3528 0a7d C802     		.2byte	0x2c8
 3529 0a7f F8000000 		.4byte	0xf8
 3530 0a83 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 79


 3531 0a84 91       		.byte	0x91
 3532 0a85 9C7E     		.sleb128 -228
 3533 0a87 21       		.uleb128 0x21
 3534 0a88 F7020000 		.4byte	.LASF144
 3535 0a8c 01       		.byte	0x1
 3536 0a8d C802     		.2byte	0x2c8
 3537 0a8f 68000000 		.4byte	0x68
 3538 0a93 03       		.uleb128 0x3
 3539 0a94 91       		.byte	0x91
 3540 0a95 987E     		.sleb128 -232
 3541 0a97 21       		.uleb128 0x21
 3542 0a98 44060000 		.4byte	.LASF145
 3543 0a9c 01       		.byte	0x1
 3544 0a9d C802     		.2byte	0x2c8
 3545 0a9f F8000000 		.4byte	0xf8
 3546 0aa3 03       		.uleb128 0x3
 3547 0aa4 91       		.byte	0x91
 3548 0aa5 947E     		.sleb128 -236
 3549 0aa7 1A       		.uleb128 0x1a
 3550 0aa8 E0010000 		.4byte	.LASF146
 3551 0aac 01       		.byte	0x1
 3552 0aad CA02     		.2byte	0x2ca
 3553 0aaf 81000000 		.4byte	0x81
 3554 0ab3 02       		.uleb128 0x2
 3555 0ab4 91       		.byte	0x91
 3556 0ab5 77       		.sleb128 -9
 3557 0ab6 1A       		.uleb128 0x1a
 3558 0ab7 47000000 		.4byte	.LASF147
 3559 0abb 01       		.byte	0x1
 3560 0abc D102     		.2byte	0x2d1
 3561 0abe D60A0000 		.4byte	0xad6
 3562 0ac2 02       		.uleb128 0x2
 3563 0ac3 91       		.byte	0x91
 3564 0ac4 68       		.sleb128 -24
 3565 0ac5 1A       		.uleb128 0x1a
 3566 0ac6 84070000 		.4byte	.LASF123
 3567 0aca 01       		.byte	0x1
 3568 0acb D902     		.2byte	0x2d9
 3569 0acd FD080000 		.4byte	0x8fd
 3570 0ad1 03       		.uleb128 0x3
 3571 0ad2 91       		.byte	0x91
 3572 0ad3 A07E     		.sleb128 -224
 3573 0ad5 00       		.byte	0
 3574 0ad6 07       		.uleb128 0x7
 3575 0ad7 E3000000 		.4byte	0xe3
 3576 0adb E60A0000 		.4byte	0xae6
 3577 0adf 08       		.uleb128 0x8
 3578 0ae0 F1000000 		.4byte	0xf1
 3579 0ae4 0B       		.byte	0xb
 3580 0ae5 00       		.byte	0
 3581 0ae6 23       		.uleb128 0x23
 3582 0ae7 53010000 		.4byte	.LASF148
 3583 0aeb 0E       		.byte	0xe
 3584 0aec 1207     		.2byte	0x712
 3585 0aee F20A0000 		.4byte	0xaf2
 3586 0af2 0C       		.uleb128 0xc
 3587 0af3 76000000 		.4byte	0x76
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 80


 3588 0af7 24       		.uleb128 0x24
 3589 0af8 37000000 		.4byte	.LASF149
 3590 0afc 0A       		.byte	0xa
 3591 0afd 11       		.byte	0x11
 3592 0afe 79040000 		.4byte	0x479
 3593 0b02 05       		.uleb128 0x5
 3594 0b03 03       		.byte	0x3
 3595 0b04 00000000 		.4byte	buffer_overflow
 3596 0b08 24       		.uleb128 0x24
 3597 0b09 EF040000 		.4byte	.LASF150
 3598 0b0d 0A       		.byte	0xa
 3599 0b0e 22       		.byte	0x22
 3600 0b0f 8D000000 		.4byte	0x8d
 3601 0b13 05       		.uleb128 0x5
 3602 0b14 03       		.byte	0x3
 3603 0b15 00000000 		.4byte	dataPointsInStack
 3604 0b19 24       		.uleb128 0x24
 3605 0b1a 0B080000 		.4byte	.LASF151
 3606 0b1e 0A       		.byte	0xa
 3607 0b1f 23       		.byte	0x23
 3608 0b20 8D000000 		.4byte	0x8d
 3609 0b24 05       		.uleb128 0x5
 3610 0b25 03       		.byte	0x3
 3611 0b26 00000000 		.4byte	dataPointsInStackDesired
 3612 0b2a 07       		.uleb128 0x7
 3613 0b2b 7D030000 		.4byte	0x37d
 3614 0b2f 3A0B0000 		.4byte	0xb3a
 3615 0b33 08       		.uleb128 0x8
 3616 0b34 F1000000 		.4byte	0xf1
 3617 0b38 95       		.byte	0x95
 3618 0b39 00       		.byte	0
 3619 0b3a 24       		.uleb128 0x24
 3620 0b3b F1030000 		.4byte	.LASF152
 3621 0b3f 0A       		.byte	0xa
 3622 0b40 24       		.byte	0x24
 3623 0b41 2A0B0000 		.4byte	0xb2a
 3624 0b45 05       		.uleb128 0x5
 3625 0b46 03       		.byte	0x3
 3626 0b47 00000000 		.4byte	data
 3627 0b4b 24       		.uleb128 0x24
 3628 0b4c 3A010000 		.4byte	.LASF153
 3629 0b50 0B       		.byte	0xb
 3630 0b51 21       		.byte	0x21
 3631 0b52 81000000 		.4byte	0x81
 3632 0b56 05       		.uleb128 0x5
 3633 0b57 03       		.byte	0x3
 3634 0b58 00000000 		.4byte	modem_state
 3635 0b5c 24       		.uleb128 0x24
 3636 0b5d 6E040000 		.4byte	.LASF154
 3637 0b61 0B       		.byte	0xb
 3638 0b62 64       		.byte	0x64
 3639 0b63 BD000000 		.4byte	0xbd
 3640 0b67 05       		.uleb128 0x5
 3641 0b68 03       		.byte	0x3
 3642 0b69 00000000 		.4byte	modem_start_time_stamp
 3643 0b6d 24       		.uleb128 0x24
 3644 0b6e 07040000 		.4byte	.LASF91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 81


 3645 0b72 0B       		.byte	0xb
 3646 0b73 65       		.byte	0x65
 3647 0b74 B5030000 		.4byte	0x3b5
 3648 0b78 05       		.uleb128 0x5
 3649 0b79 03       		.byte	0x3
 3650 0b7a 00000000 		.4byte	modem_info
 3651 0b7e 24       		.uleb128 0x24
 3652 0b7f 6D070000 		.4byte	.LASF155
 3653 0b83 0B       		.byte	0xb
 3654 0b84 66       		.byte	0x66
 3655 0b85 29040000 		.4byte	0x429
 3656 0b89 05       		.uleb128 0x5
 3657 0b8a 03       		.byte	0x3
 3658 0b8b 00000000 		.4byte	modem_stats
 3659 0b8f 24       		.uleb128 0x24
 3660 0b90 75050000 		.4byte	.LASF156
 3661 0b94 0B       		.byte	0xb
 3662 0b95 67       		.byte	0x67
 3663 0b96 80040000 		.4byte	0x480
 3664 0b9a 05       		.uleb128 0x5
 3665 0b9b 03       		.byte	0x3
 3666 0b9c 00000000 		.4byte	updatable_parameters
 3667 0ba0 07       		.uleb128 0x7
 3668 0ba1 E3000000 		.4byte	0xe3
 3669 0ba5 B10B0000 		.4byte	0xbb1
 3670 0ba9 1F       		.uleb128 0x1f
 3671 0baa F1000000 		.4byte	0xf1
 3672 0bae 0F27     		.2byte	0x270f
 3673 0bb0 00       		.byte	0
 3674 0bb1 24       		.uleb128 0x24
 3675 0bb2 C6050000 		.4byte	.LASF157
 3676 0bb6 0D       		.byte	0xd
 3677 0bb7 18       		.byte	0x18
 3678 0bb8 A00B0000 		.4byte	0xba0
 3679 0bbc 05       		.uleb128 0x5
 3680 0bbd 03       		.byte	0x3
 3681 0bbe 00000000 		.4byte	http_request
 3682 0bc2 24       		.uleb128 0x24
 3683 0bc3 3A080000 		.4byte	.LASF158
 3684 0bc7 0D       		.byte	0xd
 3685 0bc8 19       		.byte	0x19
 3686 0bc9 A00B0000 		.4byte	0xba0
 3687 0bcd 05       		.uleb128 0x5
 3688 0bce 03       		.byte	0x3
 3689 0bcf 00000000 		.4byte	http_body
 3690 0bd3 24       		.uleb128 0x24
 3691 0bd4 79070000 		.4byte	.LASF159
 3692 0bd8 0D       		.byte	0xd
 3693 0bd9 1A       		.byte	0x1a
 3694 0bda FD080000 		.4byte	0x8fd
 3695 0bde 05       		.uleb128 0x5
 3696 0bdf 03       		.byte	0x3
 3697 0be0 00000000 		.4byte	http_route
 3698 0be4 24       		.uleb128 0x24
 3699 0be5 AA060000 		.4byte	.LASF160
 3700 0be9 0D       		.byte	0xd
 3701 0bea 41       		.byte	0x41
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 82


 3702 0beb 4F050000 		.4byte	0x54f
 3703 0bef 05       		.uleb128 0x5
 3704 0bf0 03       		.byte	0x3
 3705 0bf1 00000000 		.4byte	system_info
 3706 0bf5 24       		.uleb128 0x24
 3707 0bf6 4A060000 		.4byte	.LASF161
 3708 0bfa 0D       		.byte	0xd
 3709 0bfb 53       		.byte	0x53
 3710 0bfc 8B050000 		.4byte	0x58b
 3711 0c00 05       		.uleb128 0x5
 3712 0c01 03       		.byte	0x3
 3713 0c02 00000000 		.4byte	system_settings
 3714 0c06 24       		.uleb128 0x24
 3715 0c07 46010000 		.4byte	.LASF162
 3716 0c0b 0D       		.byte	0xd
 3717 0c0c 6F       		.byte	0x6f
 3718 0c0d 18050000 		.4byte	0x518
 3719 0c11 05       		.uleb128 0x5
 3720 0c12 03       		.byte	0x3
 3721 0c13 00000000 		.4byte	alarmMeasure
 3722 0c17 24       		.uleb128 0x24
 3723 0c18 8A010000 		.4byte	.LASF163
 3724 0c1c 0D       		.byte	0xd
 3725 0c1d 70       		.byte	0x70
 3726 0c1e 81000000 		.4byte	0x81
 3727 0c22 05       		.uleb128 0x5
 3728 0c23 03       		.byte	0x3
 3729 0c24 00000000 		.4byte	timeToMeasure
 3730 0c28 24       		.uleb128 0x24
 3731 0c29 0F030000 		.4byte	.LASF164
 3732 0c2d 0D       		.byte	0xd
 3733 0c2e 71       		.byte	0x71
 3734 0c2f 18050000 		.4byte	0x518
 3735 0c33 05       		.uleb128 0x5
 3736 0c34 03       		.byte	0x3
 3737 0c35 00000000 		.4byte	alarmSync
 3738 0c39 24       		.uleb128 0x24
 3739 0c3a B0010000 		.4byte	.LASF165
 3740 0c3e 0D       		.byte	0xd
 3741 0c3f 72       		.byte	0x72
 3742 0c40 81000000 		.4byte	0x81
 3743 0c44 05       		.uleb128 0x5
 3744 0c45 03       		.byte	0x3
 3745 0c46 00000000 		.4byte	timeToSync
 3746 0c4a 24       		.uleb128 0x24
 3747 0c4b 46050000 		.4byte	.LASF166
 3748 0c4f 0D       		.byte	0xd
 3749 0c50 73       		.byte	0x73
 3750 0c51 81000000 		.4byte	0x81
 3751 0c55 05       		.uleb128 0x5
 3752 0c56 03       		.byte	0x3
 3753 0c57 00000000 		.4byte	timeToSycnRemoteParams
 3754 0c5b 25       		.uleb128 0x25
 3755 0c5c 68657900 		.ascii	"hey\000"
 3756 0c60 0D       		.byte	0xd
 3757 0c61 74       		.byte	0x74
 3758 0c62 81000000 		.4byte	0x81
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 83


 3759 0c66 05       		.uleb128 0x5
 3760 0c67 03       		.byte	0x3
 3761 0c68 00000000 		.4byte	hey
 3762 0c6c 07       		.uleb128 0x7
 3763 0c6d E3000000 		.4byte	0xe3
 3764 0c71 7C0C0000 		.4byte	0xc7c
 3765 0c75 08       		.uleb128 0x8
 3766 0c76 F1000000 		.4byte	0xf1
 3767 0c7a 1D       		.byte	0x1d
 3768 0c7b 00       		.byte	0
 3769 0c7c 24       		.uleb128 0x24
 3770 0c7d FE050000 		.4byte	.LASF167
 3771 0c81 01       		.byte	0x1
 3772 0c82 1D       		.byte	0x1d
 3773 0c83 6C0C0000 		.4byte	0xc6c
 3774 0c87 05       		.uleb128 0x5
 3775 0c88 03       		.byte	0x3
 3776 0c89 00000000 		.4byte	Data_fileName
 3777 0c8d 24       		.uleb128 0x24
 3778 0c8e 10050000 		.4byte	.LASF99
 3779 0c92 01       		.byte	0x1
 3780 0c93 1E       		.byte	0x1e
 3781 0c94 81000000 		.4byte	0x81
 3782 0c98 05       		.uleb128 0x5
 3783 0c99 03       		.byte	0x3
 3784 0c9a 00000000 		.4byte	try_counter
 3785 0c9e 00       		.byte	0
 3786              		.section	.debug_abbrev,"",%progbits
 3787              	.Ldebug_abbrev0:
 3788 0000 01       		.uleb128 0x1
 3789 0001 11       		.uleb128 0x11
 3790 0002 01       		.byte	0x1
 3791 0003 25       		.uleb128 0x25
 3792 0004 0E       		.uleb128 0xe
 3793 0005 13       		.uleb128 0x13
 3794 0006 0B       		.uleb128 0xb
 3795 0007 03       		.uleb128 0x3
 3796 0008 0E       		.uleb128 0xe
 3797 0009 1B       		.uleb128 0x1b
 3798 000a 0E       		.uleb128 0xe
 3799 000b 55       		.uleb128 0x55
 3800 000c 17       		.uleb128 0x17
 3801 000d 11       		.uleb128 0x11
 3802 000e 01       		.uleb128 0x1
 3803 000f 10       		.uleb128 0x10
 3804 0010 17       		.uleb128 0x17
 3805 0011 00       		.byte	0
 3806 0012 00       		.byte	0
 3807 0013 02       		.uleb128 0x2
 3808 0014 24       		.uleb128 0x24
 3809 0015 00       		.byte	0
 3810 0016 0B       		.uleb128 0xb
 3811 0017 0B       		.uleb128 0xb
 3812 0018 3E       		.uleb128 0x3e
 3813 0019 0B       		.uleb128 0xb
 3814 001a 03       		.uleb128 0x3
 3815 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 84


 3816 001c 00       		.byte	0
 3817 001d 00       		.byte	0
 3818 001e 03       		.uleb128 0x3
 3819 001f 16       		.uleb128 0x16
 3820 0020 00       		.byte	0
 3821 0021 03       		.uleb128 0x3
 3822 0022 0E       		.uleb128 0xe
 3823 0023 3A       		.uleb128 0x3a
 3824 0024 0B       		.uleb128 0xb
 3825 0025 3B       		.uleb128 0x3b
 3826 0026 0B       		.uleb128 0xb
 3827 0027 49       		.uleb128 0x49
 3828 0028 13       		.uleb128 0x13
 3829 0029 00       		.byte	0
 3830 002a 00       		.byte	0
 3831 002b 04       		.uleb128 0x4
 3832 002c 24       		.uleb128 0x24
 3833 002d 00       		.byte	0
 3834 002e 0B       		.uleb128 0xb
 3835 002f 0B       		.uleb128 0xb
 3836 0030 3E       		.uleb128 0x3e
 3837 0031 0B       		.uleb128 0xb
 3838 0032 03       		.uleb128 0x3
 3839 0033 08       		.uleb128 0x8
 3840 0034 00       		.byte	0
 3841 0035 00       		.byte	0
 3842 0036 05       		.uleb128 0x5
 3843 0037 16       		.uleb128 0x16
 3844 0038 00       		.byte	0
 3845 0039 03       		.uleb128 0x3
 3846 003a 0E       		.uleb128 0xe
 3847 003b 3A       		.uleb128 0x3a
 3848 003c 0B       		.uleb128 0xb
 3849 003d 3B       		.uleb128 0x3b
 3850 003e 05       		.uleb128 0x5
 3851 003f 49       		.uleb128 0x49
 3852 0040 13       		.uleb128 0x13
 3853 0041 00       		.byte	0
 3854 0042 00       		.byte	0
 3855 0043 06       		.uleb128 0x6
 3856 0044 0F       		.uleb128 0xf
 3857 0045 00       		.byte	0
 3858 0046 0B       		.uleb128 0xb
 3859 0047 0B       		.uleb128 0xb
 3860 0048 49       		.uleb128 0x49
 3861 0049 13       		.uleb128 0x13
 3862 004a 00       		.byte	0
 3863 004b 00       		.byte	0
 3864 004c 07       		.uleb128 0x7
 3865 004d 01       		.uleb128 0x1
 3866 004e 01       		.byte	0x1
 3867 004f 49       		.uleb128 0x49
 3868 0050 13       		.uleb128 0x13
 3869 0051 01       		.uleb128 0x1
 3870 0052 13       		.uleb128 0x13
 3871 0053 00       		.byte	0
 3872 0054 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 85


 3873 0055 08       		.uleb128 0x8
 3874 0056 21       		.uleb128 0x21
 3875 0057 00       		.byte	0
 3876 0058 49       		.uleb128 0x49
 3877 0059 13       		.uleb128 0x13
 3878 005a 2F       		.uleb128 0x2f
 3879 005b 0B       		.uleb128 0xb
 3880 005c 00       		.byte	0
 3881 005d 00       		.byte	0
 3882 005e 09       		.uleb128 0x9
 3883 005f 13       		.uleb128 0x13
 3884 0060 01       		.byte	0x1
 3885 0061 0B       		.uleb128 0xb
 3886 0062 0B       		.uleb128 0xb
 3887 0063 3A       		.uleb128 0x3a
 3888 0064 0B       		.uleb128 0xb
 3889 0065 3B       		.uleb128 0x3b
 3890 0066 0B       		.uleb128 0xb
 3891 0067 01       		.uleb128 0x1
 3892 0068 13       		.uleb128 0x13
 3893 0069 00       		.byte	0
 3894 006a 00       		.byte	0
 3895 006b 0A       		.uleb128 0xa
 3896 006c 0D       		.uleb128 0xd
 3897 006d 00       		.byte	0
 3898 006e 03       		.uleb128 0x3
 3899 006f 08       		.uleb128 0x8
 3900 0070 3A       		.uleb128 0x3a
 3901 0071 0B       		.uleb128 0xb
 3902 0072 3B       		.uleb128 0x3b
 3903 0073 0B       		.uleb128 0xb
 3904 0074 49       		.uleb128 0x49
 3905 0075 13       		.uleb128 0x13
 3906 0076 38       		.uleb128 0x38
 3907 0077 0B       		.uleb128 0xb
 3908 0078 00       		.byte	0
 3909 0079 00       		.byte	0
 3910 007a 0B       		.uleb128 0xb
 3911 007b 0D       		.uleb128 0xd
 3912 007c 00       		.byte	0
 3913 007d 03       		.uleb128 0x3
 3914 007e 0E       		.uleb128 0xe
 3915 007f 3A       		.uleb128 0x3a
 3916 0080 0B       		.uleb128 0xb
 3917 0081 3B       		.uleb128 0x3b
 3918 0082 0B       		.uleb128 0xb
 3919 0083 49       		.uleb128 0x49
 3920 0084 13       		.uleb128 0x13
 3921 0085 38       		.uleb128 0x38
 3922 0086 0B       		.uleb128 0xb
 3923 0087 00       		.byte	0
 3924 0088 00       		.byte	0
 3925 0089 0C       		.uleb128 0xc
 3926 008a 35       		.uleb128 0x35
 3927 008b 00       		.byte	0
 3928 008c 49       		.uleb128 0x49
 3929 008d 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 86


 3930 008e 00       		.byte	0
 3931 008f 00       		.byte	0
 3932 0090 0D       		.uleb128 0xd
 3933 0091 13       		.uleb128 0x13
 3934 0092 01       		.byte	0x1
 3935 0093 0B       		.uleb128 0xb
 3936 0094 05       		.uleb128 0x5
 3937 0095 3A       		.uleb128 0x3a
 3938 0096 0B       		.uleb128 0xb
 3939 0097 3B       		.uleb128 0x3b
 3940 0098 0B       		.uleb128 0xb
 3941 0099 01       		.uleb128 0x1
 3942 009a 13       		.uleb128 0x13
 3943 009b 00       		.byte	0
 3944 009c 00       		.byte	0
 3945 009d 0E       		.uleb128 0xe
 3946 009e 13       		.uleb128 0x13
 3947 009f 01       		.byte	0x1
 3948 00a0 03       		.uleb128 0x3
 3949 00a1 08       		.uleb128 0x8
 3950 00a2 0B       		.uleb128 0xb
 3951 00a3 0B       		.uleb128 0xb
 3952 00a4 3A       		.uleb128 0x3a
 3953 00a5 0B       		.uleb128 0xb
 3954 00a6 3B       		.uleb128 0x3b
 3955 00a7 0B       		.uleb128 0xb
 3956 00a8 01       		.uleb128 0x1
 3957 00a9 13       		.uleb128 0x13
 3958 00aa 00       		.byte	0
 3959 00ab 00       		.byte	0
 3960 00ac 0F       		.uleb128 0xf
 3961 00ad 2E       		.uleb128 0x2e
 3962 00ae 00       		.byte	0
 3963 00af 3F       		.uleb128 0x3f
 3964 00b0 19       		.uleb128 0x19
 3965 00b1 03       		.uleb128 0x3
 3966 00b2 0E       		.uleb128 0xe
 3967 00b3 3A       		.uleb128 0x3a
 3968 00b4 0B       		.uleb128 0xb
 3969 00b5 3B       		.uleb128 0x3b
 3970 00b6 0B       		.uleb128 0xb
 3971 00b7 27       		.uleb128 0x27
 3972 00b8 19       		.uleb128 0x19
 3973 00b9 11       		.uleb128 0x11
 3974 00ba 01       		.uleb128 0x1
 3975 00bb 12       		.uleb128 0x12
 3976 00bc 06       		.uleb128 0x6
 3977 00bd 40       		.uleb128 0x40
 3978 00be 18       		.uleb128 0x18
 3979 00bf 9642     		.uleb128 0x2116
 3980 00c1 19       		.uleb128 0x19
 3981 00c2 00       		.byte	0
 3982 00c3 00       		.byte	0
 3983 00c4 10       		.uleb128 0x10
 3984 00c5 2E       		.uleb128 0x2e
 3985 00c6 01       		.byte	0x1
 3986 00c7 3F       		.uleb128 0x3f
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 87


 3987 00c8 19       		.uleb128 0x19
 3988 00c9 03       		.uleb128 0x3
 3989 00ca 0E       		.uleb128 0xe
 3990 00cb 3A       		.uleb128 0x3a
 3991 00cc 0B       		.uleb128 0xb
 3992 00cd 3B       		.uleb128 0x3b
 3993 00ce 0B       		.uleb128 0xb
 3994 00cf 11       		.uleb128 0x11
 3995 00d0 01       		.uleb128 0x1
 3996 00d1 12       		.uleb128 0x12
 3997 00d2 06       		.uleb128 0x6
 3998 00d3 40       		.uleb128 0x40
 3999 00d4 18       		.uleb128 0x18
 4000 00d5 9642     		.uleb128 0x2116
 4001 00d7 19       		.uleb128 0x19
 4002 00d8 01       		.uleb128 0x1
 4003 00d9 13       		.uleb128 0x13
 4004 00da 00       		.byte	0
 4005 00db 00       		.byte	0
 4006 00dc 11       		.uleb128 0x11
 4007 00dd 34       		.uleb128 0x34
 4008 00de 00       		.byte	0
 4009 00df 03       		.uleb128 0x3
 4010 00e0 0E       		.uleb128 0xe
 4011 00e1 3A       		.uleb128 0x3a
 4012 00e2 0B       		.uleb128 0xb
 4013 00e3 3B       		.uleb128 0x3b
 4014 00e4 0B       		.uleb128 0xb
 4015 00e5 49       		.uleb128 0x49
 4016 00e6 13       		.uleb128 0x13
 4017 00e7 02       		.uleb128 0x2
 4018 00e8 18       		.uleb128 0x18
 4019 00e9 00       		.byte	0
 4020 00ea 00       		.byte	0
 4021 00eb 12       		.uleb128 0x12
 4022 00ec 2E       		.uleb128 0x2e
 4023 00ed 01       		.byte	0x1
 4024 00ee 3F       		.uleb128 0x3f
 4025 00ef 19       		.uleb128 0x19
 4026 00f0 03       		.uleb128 0x3
 4027 00f1 0E       		.uleb128 0xe
 4028 00f2 3A       		.uleb128 0x3a
 4029 00f3 0B       		.uleb128 0xb
 4030 00f4 3B       		.uleb128 0x3b
 4031 00f5 0B       		.uleb128 0xb
 4032 00f6 49       		.uleb128 0x49
 4033 00f7 13       		.uleb128 0x13
 4034 00f8 11       		.uleb128 0x11
 4035 00f9 01       		.uleb128 0x1
 4036 00fa 12       		.uleb128 0x12
 4037 00fb 06       		.uleb128 0x6
 4038 00fc 40       		.uleb128 0x40
 4039 00fd 18       		.uleb128 0x18
 4040 00fe 9642     		.uleb128 0x2116
 4041 0100 19       		.uleb128 0x19
 4042 0101 01       		.uleb128 0x1
 4043 0102 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 88


 4044 0103 00       		.byte	0
 4045 0104 00       		.byte	0
 4046 0105 13       		.uleb128 0x13
 4047 0106 2E       		.uleb128 0x2e
 4048 0107 00       		.byte	0
 4049 0108 3F       		.uleb128 0x3f
 4050 0109 19       		.uleb128 0x19
 4051 010a 03       		.uleb128 0x3
 4052 010b 0E       		.uleb128 0xe
 4053 010c 3A       		.uleb128 0x3a
 4054 010d 0B       		.uleb128 0xb
 4055 010e 3B       		.uleb128 0x3b
 4056 010f 0B       		.uleb128 0xb
 4057 0110 11       		.uleb128 0x11
 4058 0111 01       		.uleb128 0x1
 4059 0112 12       		.uleb128 0x12
 4060 0113 06       		.uleb128 0x6
 4061 0114 40       		.uleb128 0x40
 4062 0115 18       		.uleb128 0x18
 4063 0116 9642     		.uleb128 0x2116
 4064 0118 19       		.uleb128 0x19
 4065 0119 00       		.byte	0
 4066 011a 00       		.byte	0
 4067 011b 14       		.uleb128 0x14
 4068 011c 2E       		.uleb128 0x2e
 4069 011d 01       		.byte	0x1
 4070 011e 3F       		.uleb128 0x3f
 4071 011f 19       		.uleb128 0x19
 4072 0120 03       		.uleb128 0x3
 4073 0121 0E       		.uleb128 0xe
 4074 0122 3A       		.uleb128 0x3a
 4075 0123 0B       		.uleb128 0xb
 4076 0124 3B       		.uleb128 0x3b
 4077 0125 0B       		.uleb128 0xb
 4078 0126 27       		.uleb128 0x27
 4079 0127 19       		.uleb128 0x19
 4080 0128 11       		.uleb128 0x11
 4081 0129 01       		.uleb128 0x1
 4082 012a 12       		.uleb128 0x12
 4083 012b 06       		.uleb128 0x6
 4084 012c 40       		.uleb128 0x40
 4085 012d 18       		.uleb128 0x18
 4086 012e 9642     		.uleb128 0x2116
 4087 0130 19       		.uleb128 0x19
 4088 0131 01       		.uleb128 0x1
 4089 0132 13       		.uleb128 0x13
 4090 0133 00       		.byte	0
 4091 0134 00       		.byte	0
 4092 0135 15       		.uleb128 0x15
 4093 0136 05       		.uleb128 0x5
 4094 0137 00       		.byte	0
 4095 0138 03       		.uleb128 0x3
 4096 0139 0E       		.uleb128 0xe
 4097 013a 3A       		.uleb128 0x3a
 4098 013b 0B       		.uleb128 0xb
 4099 013c 3B       		.uleb128 0x3b
 4100 013d 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 89


 4101 013e 49       		.uleb128 0x49
 4102 013f 13       		.uleb128 0x13
 4103 0140 02       		.uleb128 0x2
 4104 0141 18       		.uleb128 0x18
 4105 0142 00       		.byte	0
 4106 0143 00       		.byte	0
 4107 0144 16       		.uleb128 0x16
 4108 0145 2E       		.uleb128 0x2e
 4109 0146 01       		.byte	0x1
 4110 0147 3F       		.uleb128 0x3f
 4111 0148 19       		.uleb128 0x19
 4112 0149 03       		.uleb128 0x3
 4113 014a 0E       		.uleb128 0xe
 4114 014b 3A       		.uleb128 0x3a
 4115 014c 0B       		.uleb128 0xb
 4116 014d 3B       		.uleb128 0x3b
 4117 014e 0B       		.uleb128 0xb
 4118 014f 27       		.uleb128 0x27
 4119 0150 19       		.uleb128 0x19
 4120 0151 49       		.uleb128 0x49
 4121 0152 13       		.uleb128 0x13
 4122 0153 11       		.uleb128 0x11
 4123 0154 01       		.uleb128 0x1
 4124 0155 12       		.uleb128 0x12
 4125 0156 06       		.uleb128 0x6
 4126 0157 40       		.uleb128 0x40
 4127 0158 18       		.uleb128 0x18
 4128 0159 9642     		.uleb128 0x2116
 4129 015b 19       		.uleb128 0x19
 4130 015c 01       		.uleb128 0x1
 4131 015d 13       		.uleb128 0x13
 4132 015e 00       		.byte	0
 4133 015f 00       		.byte	0
 4134 0160 17       		.uleb128 0x17
 4135 0161 2E       		.uleb128 0x2e
 4136 0162 01       		.byte	0x1
 4137 0163 3F       		.uleb128 0x3f
 4138 0164 19       		.uleb128 0x19
 4139 0165 03       		.uleb128 0x3
 4140 0166 0E       		.uleb128 0xe
 4141 0167 3A       		.uleb128 0x3a
 4142 0168 0B       		.uleb128 0xb
 4143 0169 3B       		.uleb128 0x3b
 4144 016a 0B       		.uleb128 0xb
 4145 016b 27       		.uleb128 0x27
 4146 016c 19       		.uleb128 0x19
 4147 016d 11       		.uleb128 0x11
 4148 016e 01       		.uleb128 0x1
 4149 016f 12       		.uleb128 0x12
 4150 0170 06       		.uleb128 0x6
 4151 0171 40       		.uleb128 0x40
 4152 0172 18       		.uleb128 0x18
 4153 0173 9742     		.uleb128 0x2117
 4154 0175 19       		.uleb128 0x19
 4155 0176 01       		.uleb128 0x1
 4156 0177 13       		.uleb128 0x13
 4157 0178 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 90


 4158 0179 00       		.byte	0
 4159 017a 18       		.uleb128 0x18
 4160 017b 2E       		.uleb128 0x2e
 4161 017c 01       		.byte	0x1
 4162 017d 3F       		.uleb128 0x3f
 4163 017e 19       		.uleb128 0x19
 4164 017f 03       		.uleb128 0x3
 4165 0180 0E       		.uleb128 0xe
 4166 0181 3A       		.uleb128 0x3a
 4167 0182 0B       		.uleb128 0xb
 4168 0183 3B       		.uleb128 0x3b
 4169 0184 0B       		.uleb128 0xb
 4170 0185 27       		.uleb128 0x27
 4171 0186 19       		.uleb128 0x19
 4172 0187 49       		.uleb128 0x49
 4173 0188 13       		.uleb128 0x13
 4174 0189 11       		.uleb128 0x11
 4175 018a 01       		.uleb128 0x1
 4176 018b 12       		.uleb128 0x12
 4177 018c 06       		.uleb128 0x6
 4178 018d 40       		.uleb128 0x40
 4179 018e 18       		.uleb128 0x18
 4180 018f 9742     		.uleb128 0x2117
 4181 0191 19       		.uleb128 0x19
 4182 0192 01       		.uleb128 0x1
 4183 0193 13       		.uleb128 0x13
 4184 0194 00       		.byte	0
 4185 0195 00       		.byte	0
 4186 0196 19       		.uleb128 0x19
 4187 0197 2E       		.uleb128 0x2e
 4188 0198 01       		.byte	0x1
 4189 0199 3F       		.uleb128 0x3f
 4190 019a 19       		.uleb128 0x19
 4191 019b 03       		.uleb128 0x3
 4192 019c 0E       		.uleb128 0xe
 4193 019d 3A       		.uleb128 0x3a
 4194 019e 0B       		.uleb128 0xb
 4195 019f 3B       		.uleb128 0x3b
 4196 01a0 05       		.uleb128 0x5
 4197 01a1 11       		.uleb128 0x11
 4198 01a2 01       		.uleb128 0x1
 4199 01a3 12       		.uleb128 0x12
 4200 01a4 06       		.uleb128 0x6
 4201 01a5 40       		.uleb128 0x40
 4202 01a6 18       		.uleb128 0x18
 4203 01a7 9642     		.uleb128 0x2116
 4204 01a9 19       		.uleb128 0x19
 4205 01aa 01       		.uleb128 0x1
 4206 01ab 13       		.uleb128 0x13
 4207 01ac 00       		.byte	0
 4208 01ad 00       		.byte	0
 4209 01ae 1A       		.uleb128 0x1a
 4210 01af 34       		.uleb128 0x34
 4211 01b0 00       		.byte	0
 4212 01b1 03       		.uleb128 0x3
 4213 01b2 0E       		.uleb128 0xe
 4214 01b3 3A       		.uleb128 0x3a
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 91


 4215 01b4 0B       		.uleb128 0xb
 4216 01b5 3B       		.uleb128 0x3b
 4217 01b6 05       		.uleb128 0x5
 4218 01b7 49       		.uleb128 0x49
 4219 01b8 13       		.uleb128 0x13
 4220 01b9 02       		.uleb128 0x2
 4221 01ba 18       		.uleb128 0x18
 4222 01bb 00       		.byte	0
 4223 01bc 00       		.byte	0
 4224 01bd 1B       		.uleb128 0x1b
 4225 01be 2E       		.uleb128 0x2e
 4226 01bf 00       		.byte	0
 4227 01c0 3F       		.uleb128 0x3f
 4228 01c1 19       		.uleb128 0x19
 4229 01c2 03       		.uleb128 0x3
 4230 01c3 0E       		.uleb128 0xe
 4231 01c4 3A       		.uleb128 0x3a
 4232 01c5 0B       		.uleb128 0xb
 4233 01c6 3B       		.uleb128 0x3b
 4234 01c7 05       		.uleb128 0x5
 4235 01c8 27       		.uleb128 0x27
 4236 01c9 19       		.uleb128 0x19
 4237 01ca 49       		.uleb128 0x49
 4238 01cb 13       		.uleb128 0x13
 4239 01cc 11       		.uleb128 0x11
 4240 01cd 01       		.uleb128 0x1
 4241 01ce 12       		.uleb128 0x12
 4242 01cf 06       		.uleb128 0x6
 4243 01d0 40       		.uleb128 0x40
 4244 01d1 18       		.uleb128 0x18
 4245 01d2 9642     		.uleb128 0x2116
 4246 01d4 19       		.uleb128 0x19
 4247 01d5 00       		.byte	0
 4248 01d6 00       		.byte	0
 4249 01d7 1C       		.uleb128 0x1c
 4250 01d8 2E       		.uleb128 0x2e
 4251 01d9 01       		.byte	0x1
 4252 01da 3F       		.uleb128 0x3f
 4253 01db 19       		.uleb128 0x19
 4254 01dc 03       		.uleb128 0x3
 4255 01dd 0E       		.uleb128 0xe
 4256 01de 3A       		.uleb128 0x3a
 4257 01df 0B       		.uleb128 0xb
 4258 01e0 3B       		.uleb128 0x3b
 4259 01e1 05       		.uleb128 0x5
 4260 01e2 49       		.uleb128 0x49
 4261 01e3 13       		.uleb128 0x13
 4262 01e4 11       		.uleb128 0x11
 4263 01e5 01       		.uleb128 0x1
 4264 01e6 12       		.uleb128 0x12
 4265 01e7 06       		.uleb128 0x6
 4266 01e8 40       		.uleb128 0x40
 4267 01e9 18       		.uleb128 0x18
 4268 01ea 9642     		.uleb128 0x2116
 4269 01ec 19       		.uleb128 0x19
 4270 01ed 01       		.uleb128 0x1
 4271 01ee 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 92


 4272 01ef 00       		.byte	0
 4273 01f0 00       		.byte	0
 4274 01f1 1D       		.uleb128 0x1d
 4275 01f2 0B       		.uleb128 0xb
 4276 01f3 01       		.byte	0x1
 4277 01f4 11       		.uleb128 0x11
 4278 01f5 01       		.uleb128 0x1
 4279 01f6 12       		.uleb128 0x12
 4280 01f7 06       		.uleb128 0x6
 4281 01f8 00       		.byte	0
 4282 01f9 00       		.byte	0
 4283 01fa 1E       		.uleb128 0x1e
 4284 01fb 0B       		.uleb128 0xb
 4285 01fc 01       		.byte	0x1
 4286 01fd 11       		.uleb128 0x11
 4287 01fe 01       		.uleb128 0x1
 4288 01ff 12       		.uleb128 0x12
 4289 0200 06       		.uleb128 0x6
 4290 0201 01       		.uleb128 0x1
 4291 0202 13       		.uleb128 0x13
 4292 0203 00       		.byte	0
 4293 0204 00       		.byte	0
 4294 0205 1F       		.uleb128 0x1f
 4295 0206 21       		.uleb128 0x21
 4296 0207 00       		.byte	0
 4297 0208 49       		.uleb128 0x49
 4298 0209 13       		.uleb128 0x13
 4299 020a 2F       		.uleb128 0x2f
 4300 020b 05       		.uleb128 0x5
 4301 020c 00       		.byte	0
 4302 020d 00       		.byte	0
 4303 020e 20       		.uleb128 0x20
 4304 020f 2E       		.uleb128 0x2e
 4305 0210 01       		.byte	0x1
 4306 0211 3F       		.uleb128 0x3f
 4307 0212 19       		.uleb128 0x19
 4308 0213 03       		.uleb128 0x3
 4309 0214 0E       		.uleb128 0xe
 4310 0215 3A       		.uleb128 0x3a
 4311 0216 0B       		.uleb128 0xb
 4312 0217 3B       		.uleb128 0x3b
 4313 0218 05       		.uleb128 0x5
 4314 0219 27       		.uleb128 0x27
 4315 021a 19       		.uleb128 0x19
 4316 021b 49       		.uleb128 0x49
 4317 021c 13       		.uleb128 0x13
 4318 021d 11       		.uleb128 0x11
 4319 021e 01       		.uleb128 0x1
 4320 021f 12       		.uleb128 0x12
 4321 0220 06       		.uleb128 0x6
 4322 0221 40       		.uleb128 0x40
 4323 0222 18       		.uleb128 0x18
 4324 0223 9642     		.uleb128 0x2116
 4325 0225 19       		.uleb128 0x19
 4326 0226 01       		.uleb128 0x1
 4327 0227 13       		.uleb128 0x13
 4328 0228 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 93


 4329 0229 00       		.byte	0
 4330 022a 21       		.uleb128 0x21
 4331 022b 05       		.uleb128 0x5
 4332 022c 00       		.byte	0
 4333 022d 03       		.uleb128 0x3
 4334 022e 0E       		.uleb128 0xe
 4335 022f 3A       		.uleb128 0x3a
 4336 0230 0B       		.uleb128 0xb
 4337 0231 3B       		.uleb128 0x3b
 4338 0232 05       		.uleb128 0x5
 4339 0233 49       		.uleb128 0x49
 4340 0234 13       		.uleb128 0x13
 4341 0235 02       		.uleb128 0x2
 4342 0236 18       		.uleb128 0x18
 4343 0237 00       		.byte	0
 4344 0238 00       		.byte	0
 4345 0239 22       		.uleb128 0x22
 4346 023a 34       		.uleb128 0x34
 4347 023b 00       		.byte	0
 4348 023c 03       		.uleb128 0x3
 4349 023d 08       		.uleb128 0x8
 4350 023e 3A       		.uleb128 0x3a
 4351 023f 0B       		.uleb128 0xb
 4352 0240 3B       		.uleb128 0x3b
 4353 0241 05       		.uleb128 0x5
 4354 0242 49       		.uleb128 0x49
 4355 0243 13       		.uleb128 0x13
 4356 0244 02       		.uleb128 0x2
 4357 0245 18       		.uleb128 0x18
 4358 0246 00       		.byte	0
 4359 0247 00       		.byte	0
 4360 0248 23       		.uleb128 0x23
 4361 0249 34       		.uleb128 0x34
 4362 024a 00       		.byte	0
 4363 024b 03       		.uleb128 0x3
 4364 024c 0E       		.uleb128 0xe
 4365 024d 3A       		.uleb128 0x3a
 4366 024e 0B       		.uleb128 0xb
 4367 024f 3B       		.uleb128 0x3b
 4368 0250 05       		.uleb128 0x5
 4369 0251 49       		.uleb128 0x49
 4370 0252 13       		.uleb128 0x13
 4371 0253 3F       		.uleb128 0x3f
 4372 0254 19       		.uleb128 0x19
 4373 0255 3C       		.uleb128 0x3c
 4374 0256 19       		.uleb128 0x19
 4375 0257 00       		.byte	0
 4376 0258 00       		.byte	0
 4377 0259 24       		.uleb128 0x24
 4378 025a 34       		.uleb128 0x34
 4379 025b 00       		.byte	0
 4380 025c 03       		.uleb128 0x3
 4381 025d 0E       		.uleb128 0xe
 4382 025e 3A       		.uleb128 0x3a
 4383 025f 0B       		.uleb128 0xb
 4384 0260 3B       		.uleb128 0x3b
 4385 0261 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 94


 4386 0262 49       		.uleb128 0x49
 4387 0263 13       		.uleb128 0x13
 4388 0264 3F       		.uleb128 0x3f
 4389 0265 19       		.uleb128 0x19
 4390 0266 02       		.uleb128 0x2
 4391 0267 18       		.uleb128 0x18
 4392 0268 00       		.byte	0
 4393 0269 00       		.byte	0
 4394 026a 25       		.uleb128 0x25
 4395 026b 34       		.uleb128 0x34
 4396 026c 00       		.byte	0
 4397 026d 03       		.uleb128 0x3
 4398 026e 08       		.uleb128 0x8
 4399 026f 3A       		.uleb128 0x3a
 4400 0270 0B       		.uleb128 0xb
 4401 0271 3B       		.uleb128 0x3b
 4402 0272 0B       		.uleb128 0xb
 4403 0273 49       		.uleb128 0x49
 4404 0274 13       		.uleb128 0x13
 4405 0275 3F       		.uleb128 0x3f
 4406 0276 19       		.uleb128 0x19
 4407 0277 02       		.uleb128 0x2
 4408 0278 18       		.uleb128 0x18
 4409 0279 00       		.byte	0
 4410 027a 00       		.byte	0
 4411 027b 00       		.byte	0
 4412              		.section	.debug_aranges,"",%progbits
 4413 0000 8C000000 		.4byte	0x8c
 4414 0004 0200     		.2byte	0x2
 4415 0006 00000000 		.4byte	.Ldebug_info0
 4416 000a 04       		.byte	0x4
 4417 000b 00       		.byte	0
 4418 000c 0000     		.2byte	0
 4419 000e 0000     		.2byte	0
 4420 0010 00000000 		.4byte	.LFB64
 4421 0014 0C000000 		.4byte	.LFE64-.LFB64
 4422 0018 00000000 		.4byte	.LFB65
 4423 001c 2C010000 		.4byte	.LFE65-.LFB65
 4424 0020 00000000 		.4byte	.LFB66
 4425 0024 64000000 		.4byte	.LFE66-.LFB66
 4426 0028 00000000 		.4byte	.LFB67
 4427 002c 2A000000 		.4byte	.LFE67-.LFB67
 4428 0030 00000000 		.4byte	.LFB68
 4429 0034 50000000 		.4byte	.LFE68-.LFB68
 4430 0038 00000000 		.4byte	.LFB69
 4431 003c 48000000 		.4byte	.LFE69-.LFB69
 4432 0040 00000000 		.4byte	.LFB70
 4433 0044 1E000000 		.4byte	.LFE70-.LFB70
 4434 0048 00000000 		.4byte	.LFB71
 4435 004c 46000000 		.4byte	.LFE71-.LFB71
 4436 0050 00000000 		.4byte	.LFB72
 4437 0054 2C010000 		.4byte	.LFE72-.LFB72
 4438 0058 00000000 		.4byte	.LFB73
 4439 005c 1E000000 		.4byte	.LFE73-.LFB73
 4440 0060 00000000 		.4byte	.LFB74
 4441 0064 30040000 		.4byte	.LFE74-.LFB74
 4442 0068 00000000 		.4byte	.LFB75
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 95


 4443 006c 44000000 		.4byte	.LFE75-.LFB75
 4444 0070 00000000 		.4byte	.LFB76
 4445 0074 84030000 		.4byte	.LFE76-.LFB76
 4446 0078 00000000 		.4byte	.LFB77
 4447 007c 74000000 		.4byte	.LFE77-.LFB77
 4448 0080 00000000 		.4byte	.LFB78
 4449 0084 38010000 		.4byte	.LFE78-.LFB78
 4450 0088 00000000 		.4byte	0
 4451 008c 00000000 		.4byte	0
 4452              		.section	.debug_ranges,"",%progbits
 4453              	.Ldebug_ranges0:
 4454 0000 00000000 		.4byte	.LFB64
 4455 0004 0C000000 		.4byte	.LFE64
 4456 0008 00000000 		.4byte	.LFB65
 4457 000c 2C010000 		.4byte	.LFE65
 4458 0010 00000000 		.4byte	.LFB66
 4459 0014 64000000 		.4byte	.LFE66
 4460 0018 00000000 		.4byte	.LFB67
 4461 001c 2A000000 		.4byte	.LFE67
 4462 0020 00000000 		.4byte	.LFB68
 4463 0024 50000000 		.4byte	.LFE68
 4464 0028 00000000 		.4byte	.LFB69
 4465 002c 48000000 		.4byte	.LFE69
 4466 0030 00000000 		.4byte	.LFB70
 4467 0034 1E000000 		.4byte	.LFE70
 4468 0038 00000000 		.4byte	.LFB71
 4469 003c 46000000 		.4byte	.LFE71
 4470 0040 00000000 		.4byte	.LFB72
 4471 0044 2C010000 		.4byte	.LFE72
 4472 0048 00000000 		.4byte	.LFB73
 4473 004c 1E000000 		.4byte	.LFE73
 4474 0050 00000000 		.4byte	.LFB74
 4475 0054 30040000 		.4byte	.LFE74
 4476 0058 00000000 		.4byte	.LFB75
 4477 005c 44000000 		.4byte	.LFE75
 4478 0060 00000000 		.4byte	.LFB76
 4479 0064 84030000 		.4byte	.LFE76
 4480 0068 00000000 		.4byte	.LFB77
 4481 006c 74000000 		.4byte	.LFE77
 4482 0070 00000000 		.4byte	.LFB78
 4483 0074 38010000 		.4byte	.LFE78
 4484 0078 00000000 		.4byte	0
 4485 007c 00000000 		.4byte	0
 4486              		.section	.debug_line,"",%progbits
 4487              	.Ldebug_line0:
 4488 0000 46040000 		.section	.debug_str,"MS",%progbits,1
 4488      02002E02 
 4488      00000201 
 4488      FB0E0D00 
 4488      01010101 
 4489              	.LASF117:
 4490 0000 745F6D6F 		.ascii	"t_modem\000"
 4490      64656D00 
 4491              	.LASF12:
 4492 0008 75696E74 		.ascii	"uint16\000"
 4492      313600
 4493              	.LASF82:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 96


 4494 000f 646F5F72 		.ascii	"do_reading\000"
 4494      65616469 
 4494      6E6700
 4495              	.LASF52:
 4496 001a 746D5F68 		.ascii	"tm_hour\000"
 4496      6F757200 
 4497              	.LASF37:
 4498 0022 6E756D5F 		.ascii	"num_invalid_readings\000"
 4498      696E7661 
 4498      6C69645F 
 4498      72656164 
 4498      696E6773 
 4499              	.LASF149:
 4500 0037 62756666 		.ascii	"buffer_overflow\000"
 4500      65725F6F 
 4500      76657266 
 4500      6C6F7700 
 4501              	.LASF147:
 4502 0047 66696C65 		.ascii	"fileName\000"
 4502      4E616D65 
 4502      00
 4503              	.LASF0:
 4504 0050 7369676E 		.ascii	"signed char\000"
 4504      65642063 
 4504      68617200 
 4505              	.LASF89:
 4506 005c 636F756E 		.ascii	"countDownResetCondition\000"
 4506      74446F77 
 4506      6E526573 
 4506      6574436F 
 4506      6E646974 
 4507              	.LASF171:
 4508 0074 57616B65 		.ascii	"Wakeup_ISR\000"
 4508      75705F49 
 4508      535200
 4509              	.LASF168:
 4510 007f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4510      43313120 
 4510      352E342E 
 4510      31203230 
 4510      31363036 
 4511 00b2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4511      20726576 
 4511      6973696F 
 4511      6E203233 
 4511      37373135 
 4512 00e5 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4512      66756E63 
 4512      74696F6E 
 4512      2D736563 
 4512      74696F6E 
 4513              	.LASF115:
 4514 010d 745F7072 		.ascii	"t_pressure\000"
 4514      65737375 
 4514      726500
 4515              	.LASF27:
 4516 0118 4D6F6E74 		.ascii	"Month\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 97


 4516      6800
 4517              	.LASF7:
 4518 011e 6C6F6E67 		.ascii	"long long unsigned int\000"
 4518      206C6F6E 
 4518      6720756E 
 4518      7369676E 
 4518      65642069 
 4519              	.LASF23:
 4520 0135 486F7572 		.ascii	"Hour\000"
 4520      00
 4521              	.LASF153:
 4522 013a 6D6F6465 		.ascii	"modem_state\000"
 4522      6D5F7374 
 4522      61746500 
 4523              	.LASF162:
 4524 0146 616C6172 		.ascii	"alarmMeasure\000"
 4524      6D4D6561 
 4524      73757265 
 4524      00
 4525              	.LASF148:
 4526 0153 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4526      52784275 
 4526      66666572 
 4526      00
 4527              	.LASF113:
 4528 0160 745F6C65 		.ascii	"t_level_sensor\000"
 4528      76656C5F 
 4528      73656E73 
 4528      6F7200
 4529              	.LASF6:
 4530 016f 6C6F6E67 		.ascii	"long long int\000"
 4530      206C6F6E 
 4530      6720696E 
 4530      7400
 4531              	.LASF125:
 4532 017d 7061636B 		.ascii	"packets\000"
 4532      65747300 
 4533              	.LASF68:
 4534 0185 65636E6F 		.ascii	"ecno\000"
 4534      00
 4535              	.LASF163:
 4536 018a 74696D65 		.ascii	"timeToMeasure\000"
 4536      546F4D65 
 4536      61737572 
 4536      6500
 4537              	.LASF71:
 4538 0198 74696D65 		.ascii	"time_to_network_connect\000"
 4538      5F746F5F 
 4538      6E657477 
 4538      6F726B5F 
 4538      636F6E6E 
 4539              	.LASF165:
 4540 01b0 74696D65 		.ascii	"timeToSync\000"
 4540      546F5379 
 4540      6E6300
 4541              	.LASF40:
 4542 01bb 766F6C74 		.ascii	"voltage_solar\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 98


 4542      6167655F 
 4542      736F6C61 
 4542      7200
 4543              	.LASF41:
 4544 01c9 766F6C74 		.ascii	"voltage_charge_current\000"
 4544      6167655F 
 4544      63686172 
 4544      67655F63 
 4544      75727265 
 4545              	.LASF146:
 4546 01e0 75706772 		.ascii	"upgrade_status\000"
 4546      6164655F 
 4546      73746174 
 4546      757300
 4547              	.LASF128:
 4548 01ef 635F6461 		.ascii	"c_data_count_sent\000"
 4548      74615F63 
 4548      6F756E74 
 4548      5F73656E 
 4548      7400
 4549              	.LASF112:
 4550 0201 745F7771 		.ascii	"t_wq_sensors\000"
 4550      5F73656E 
 4550      736F7273 
 4550      00
 4551              	.LASF65:
 4552 020e 6D6F6465 		.ascii	"modem_info_t\000"
 4552      6D5F696E 
 4552      666F5F74 
 4552      00
 4553              	.LASF66:
 4554 021b 72786C65 		.ascii	"rxlev\000"
 4554      7600
 4555              	.LASF4:
 4556 0221 6C6F6E67 		.ascii	"long int\000"
 4556      20696E74 
 4556      00
 4557              	.LASF72:
 4558 022a 74696D65 		.ascii	"time_to_acquire_ip\000"
 4558      5F746F5F 
 4558      61637175 
 4558      6972655F 
 4558      697000
 4559              	.LASF90:
 4560 023d 616C6172 		.ascii	"alarm\000"
 4560      6D00
 4561              	.LASF46:
 4562 0243 70726573 		.ascii	"pressure_voltage_off\000"
 4562      73757265 
 4562      5F766F6C 
 4562      74616765 
 4562      5F6F6666 
 4563              	.LASF11:
 4564 0258 75696E74 		.ascii	"uint8\000"
 4564      3800
 4565              	.LASF120:
 4566 025e 635F7472 		.ascii	"c_try_counter\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 99


 4566      795F636F 
 4566      756E7465 
 4566      7200
 4567              	.LASF131:
 4568 026c 73656E64 		.ascii	"send_time\000"
 4568      5F74696D 
 4568      6500
 4569              	.LASF16:
 4570 0276 696E7433 		.ascii	"int32\000"
 4570      3200
 4571              	.LASF74:
 4572 027c 6E6F6465 		.ascii	"node_type\000"
 4572      5F747970 
 4572      6500
 4573              	.LASF118:
 4574 0286 73796E63 		.ascii	"syncData\000"
 4574      44617461 
 4574      00
 4575              	.LASF126:
 4576 028f 6E657477 		.ascii	"network_time\000"
 4576      6F726B5F 
 4576      74696D65 
 4576      00
 4577              	.LASF13:
 4578 029c 75696E74 		.ascii	"uint32\000"
 4578      333200
 4579              	.LASF63:
 4580 02a3 6D6F6465 		.ascii	"model_id\000"
 4580      6C5F6964 
 4580      00
 4581              	.LASF34:
 4582 02ac 616C6C5F 		.ascii	"all_level_readings\000"
 4582      6C657665 
 4582      6C5F7265 
 4582      6164696E 
 4582      677300
 4583              	.LASF139:
 4584 02bf 6D5F7771 		.ascii	"m_wq_sensors\000"
 4584      5F73656E 
 4584      736F7273 
 4584      00
 4585              	.LASF86:
 4586 02cc 636F756E 		.ascii	"countDownValue\000"
 4586      74446F77 
 4586      6E56616C 
 4586      756500
 4587              	.LASF142:
 4588 02db 75706772 		.ascii	"upgraded\000"
 4588      61646564 
 4588      00
 4589              	.LASF54:
 4590 02e4 746D5F6D 		.ascii	"tm_mon\000"
 4590      6F6E00
 4591              	.LASF78:
 4592 02eb 64656275 		.ascii	"debug_level\000"
 4592      675F6C65 
 4592      76656C00 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 100


 4593              	.LASF144:
 4594 02f7 706F7274 		.ascii	"port\000"
 4594      00
 4595              	.LASF59:
 4596 02fc 76616C75 		.ascii	"value\000"
 4596      6500
 4597              	.LASF143:
 4598 0302 686F7374 		.ascii	"host\000"
 4598      00
 4599              	.LASF55:
 4600 0307 746D5F79 		.ascii	"tm_year\000"
 4600      65617200 
 4601              	.LASF164:
 4602 030f 616C6172 		.ascii	"alarmSync\000"
 4602      6D53796E 
 4602      6300
 4603              	.LASF45:
 4604 0319 70726573 		.ascii	"pressure_voltage_on\000"
 4604      73757265 
 4604      5F766F6C 
 4604      74616765 
 4604      5F6F6E00 
 4605              	.LASF8:
 4606 032d 756E7369 		.ascii	"unsigned int\000"
 4606      676E6564 
 4606      20696E74 
 4606      00
 4607              	.LASF140:
 4608 033a 73657454 		.ascii	"setTime\000"
 4608      696D6500 
 4609              	.LASF61:
 4610 0342 6B65795F 		.ascii	"key_value_t\000"
 4610      76616C75 
 4610      655F7400 
 4611              	.LASF102:
 4612 034e 41796F49 		.ascii	"AyoItsTime\000"
 4612      74735469 
 4612      6D6500
 4613              	.LASF36:
 4614 0359 6E756D5F 		.ascii	"num_valid_readings\000"
 4614      76616C69 
 4614      645F7265 
 4614      6164696E 
 4614      677300
 4615              	.LASF130:
 4616 036c 68747470 		.ascii	"http_chunk\000"
 4616      5F636875 
 4616      6E6B00
 4617              	.LASF136:
 4618 0377 6D5F766F 		.ascii	"m_voltage\000"
 4618      6C746167 
 4618      6500
 4619              	.LASF5:
 4620 0381 6C6F6E67 		.ascii	"long unsigned int\000"
 4620      20756E73 
 4620      69676E65 
 4620      6420696E 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 101


 4620      7400
 4621              	.LASF85:
 4622 0393 77715F73 		.ascii	"wq_sensors_t\000"
 4622      656E736F 
 4622      72735F74 
 4622      00
 4623              	.LASF121:
 4624 03a0 64617461 		.ascii	"data_count_desired\000"
 4624      5F636F75 
 4624      6E745F64 
 4624      65736972 
 4624      656400
 4625              	.LASF39:
 4626 03b3 766F6C74 		.ascii	"voltage_battery\000"
 4626      6167655F 
 4626      62617474 
 4626      65727900 
 4627              	.LASF83:
 4628 03c3 616C6C5F 		.ascii	"all_temp_readings\000"
 4628      74656D70 
 4628      5F726561 
 4628      64696E67 
 4628      7300
 4629              	.LASF25:
 4630 03d5 4461794F 		.ascii	"DayOfMonth\000"
 4630      664D6F6E 
 4630      746800
 4631              	.LASF134:
 4632 03e0 6D616B65 		.ascii	"makeMeasurements\000"
 4632      4D656173 
 4632      7572656D 
 4632      656E7473 
 4632      00
 4633              	.LASF152:
 4634 03f1 64617461 		.ascii	"data\000"
 4634      00
 4635              	.LASF95:
 4636 03f6 65705F70 		.ascii	"ep_port\000"
 4636      6F727400 
 4637              	.LASF58:
 4638 03fe 746D5F69 		.ascii	"tm_isdst\000"
 4638      73647374 
 4638      00
 4639              	.LASF91:
 4640 0407 6D6F6465 		.ascii	"modem_info\000"
 4640      6D5F696E 
 4640      666F00
 4641              	.LASF94:
 4642 0412 65705F68 		.ascii	"ep_host\000"
 4642      6F737400 
 4643              	.LASF14:
 4644 041a 696E7438 		.ascii	"int8\000"
 4644      00
 4645              	.LASF101:
 4646 041f 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 4646      576F726B 
 4646      576F726B 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 102


 4646      576F726B 
 4646      576F726B 
 4647              	.LASF84:
 4648 0438 74656D70 		.ascii	"temp_reading\000"
 4648      5F726561 
 4648      64696E67 
 4648      00
 4649              	.LASF122:
 4650 0445 635F6461 		.ascii	"c_data_count_desired\000"
 4650      74615F63 
 4650      6F756E74 
 4650      5F646573 
 4650      69726564 
 4651              	.LASF116:
 4652 045a 745F7364 		.ascii	"t_sd_card\000"
 4652      5F636172 
 4652      6400
 4653              	.LASF2:
 4654 0464 73686F72 		.ascii	"short int\000"
 4654      7420696E 
 4654      7400
 4655              	.LASF154:
 4656 046e 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4656      6D5F7374 
 4656      6172745F 
 4656      74696D65 
 4656      5F737461 
 4657              	.LASF170:
 4658 0485 433A5C55 		.ascii	"C:\\Users\\klabu\\Desktop\\BrookeResearch\\notoriOS"
 4658      73657273 
 4658      5C6B6C61 
 4658      62755C44 
 4658      65736B74 
 4659 04b3 5C6E6F74 		.ascii	"\\notoriOS.cydsn\000"
 4659      6F72694F 
 4659      532E6379 
 4659      64736E00 
 4660              	.LASF93:
 4661 04c3 7379735F 		.ascii	"sys_info_t\000"
 4661      696E666F 
 4661      5F7400
 4662              	.LASF80:
 4663 04ce 75706461 		.ascii	"updatable_parameters_t\000"
 4663      7461626C 
 4663      655F7061 
 4663      72616D65 
 4663      74657273 
 4664              	.LASF103:
 4665 04e5 616C6172 		.ascii	"alarmType\000"
 4665      6D547970 
 4665      6500
 4666              	.LASF150:
 4667 04ef 64617461 		.ascii	"dataPointsInStack\000"
 4667      506F696E 
 4667      7473496E 
 4667      53746163 
 4667      6B00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 103


 4668              	.LASF51:
 4669 0501 746D5F6D 		.ascii	"tm_min\000"
 4669      696E00
 4670              	.LASF17:
 4671 0508 666C6F61 		.ascii	"float32\000"
 4671      74333200 
 4672              	.LASF99:
 4673 0510 7472795F 		.ascii	"try_counter\000"
 4673      636F756E 
 4673      74657200 
 4674              	.LASF22:
 4675 051c 73697A65 		.ascii	"sizetype\000"
 4675      74797065 
 4675      00
 4676              	.LASF57:
 4677 0525 746D5F79 		.ascii	"tm_yday\000"
 4677      64617900 
 4678              	.LASF96:
 4679 052d 7379735F 		.ascii	"sys_settings_t\000"
 4679      73657474 
 4679      696E6773 
 4679      5F7400
 4680              	.LASF141:
 4681 053c 6C6F6361 		.ascii	"localTime\000"
 4681      6C54696D 
 4681      6500
 4682              	.LASF166:
 4683 0546 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 4683      546F5379 
 4683      636E5265 
 4683      6D6F7465 
 4683      50617261 
 4684              	.LASF60:
 4685 055d 74696D65 		.ascii	"timeStamp\000"
 4685      5374616D 
 4685      7000
 4686              	.LASF29:
 4687 0567 5254435F 		.ascii	"RTC_TIME_DATE\000"
 4687      54494D45 
 4687      5F444154 
 4687      4500
 4688              	.LASF156:
 4689 0575 75706461 		.ascii	"updatable_parameters\000"
 4689      7461626C 
 4689      655F7061 
 4689      72616D65 
 4689      74657273 
 4690              	.LASF108:
 4691 058a 43726561 		.ascii	"CreateAlarm\000"
 4691      7465416C 
 4691      61726D00 
 4692              	.LASF129:
 4693 0596 7061636B 		.ascii	"packet\000"
 4693      657400
 4694              	.LASF104:
 4695 059d 616C6172 		.ascii	"alarmToBeUpdated\000"
 4695      6D546F42 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 104


 4695      65557064 
 4695      61746564 
 4695      00
 4696              	.LASF119:
 4697 05ae 735F7273 		.ascii	"s_rsrp\000"
 4697      727000
 4698              	.LASF42:
 4699 05b5 766F6C74 		.ascii	"voltage_pressure\000"
 4699      6167655F 
 4699      70726573 
 4699      73757265 
 4699      00
 4700              	.LASF157:
 4701 05c6 68747470 		.ascii	"http_request\000"
 4701      5F726571 
 4701      75657374 
 4701      00
 4702              	.LASF18:
 4703 05d3 666C6F61 		.ascii	"float\000"
 4703      7400
 4704              	.LASF38:
 4705 05d9 6C657665 		.ascii	"level_sensor_t\000"
 4705      6C5F7365 
 4705      6E736F72 
 4705      5F7400
 4706              	.LASF133:
 4707 05e8 636F6E66 		.ascii	"configureRemoteParams\000"
 4707      69677572 
 4707      6552656D 
 4707      6F746550 
 4707      6172616D 
 4708              	.LASF167:
 4709 05fe 44617461 		.ascii	"Data_fileName\000"
 4709      5F66696C 
 4709      654E616D 
 4709      6500
 4710              	.LASF100:
 4711 060c 6D6F6465 		.ascii	"modem_status\000"
 4711      6D5F7374 
 4711      61747573 
 4711      00
 4712              	.LASF30:
 4713 0619 74657374 		.ascii	"test_name\000"
 4713      5F6E616D 
 4713      6500
 4714              	.LASF28:
 4715 0623 59656172 		.ascii	"Year\000"
 4715      00
 4716              	.LASF79:
 4717 0628 5F426F6F 		.ascii	"_Bool\000"
 4717      6C00
 4718              	.LASF10:
 4719 062e 696E7433 		.ascii	"int32_t\000"
 4719      325F7400 
 4720              	.LASF1:
 4721 0636 756E7369 		.ascii	"unsigned char\000"
 4721      676E6564 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 105


 4721      20636861 
 4721      7200
 4722              	.LASF145:
 4723 0644 726F7574 		.ascii	"route\000"
 4723      6500
 4724              	.LASF161:
 4725 064a 73797374 		.ascii	"system_settings\000"
 4725      656D5F73 
 4725      65747469 
 4725      6E677300 
 4726              	.LASF70:
 4727 065a 72737270 		.ascii	"rsrp\000"
 4727      00
 4728              	.LASF69:
 4729 065f 72737271 		.ascii	"rsrq\000"
 4729      00
 4730              	.LASF105:
 4731 0664 52657365 		.ascii	"ResetAlarm\000"
 4731      74416C61 
 4731      726D00
 4732              	.LASF132:
 4733 066f 735F7365 		.ascii	"s_send_time\000"
 4733      6E645F74 
 4733      696D6500 
 4734              	.LASF77:
 4735 067b 73796E63 		.ascii	"sync_time\000"
 4735      5F74696D 
 4735      6500
 4736              	.LASF48:
 4737 0685 70726573 		.ascii	"pressure_depth\000"
 4737      73757265 
 4737      5F646570 
 4737      746800
 4738              	.LASF67:
 4739 0694 72736370 		.ascii	"rscp\000"
 4739      00
 4740              	.LASF24:
 4741 0699 4461794F 		.ascii	"DayOfWeek\000"
 4741      66576565 
 4741      6B00
 4742              	.LASF33:
 4743 06a3 74657374 		.ascii	"test_t\000"
 4743      5F7400
 4744              	.LASF160:
 4745 06aa 73797374 		.ascii	"system_info\000"
 4745      656D5F69 
 4745      6E666F00 
 4746              	.LASF64:
 4747 06b6 696D6569 		.ascii	"imei\000"
 4747      00
 4748              	.LASF32:
 4749 06bb 72656173 		.ascii	"reason\000"
 4749      6F6E00
 4750              	.LASF106:
 4751 06c2 616C6172 		.ascii	"alarmToBeReset\000"
 4751      6D546F42 
 4751      65526573 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 106


 4751      657400
 4752              	.LASF111:
 4753 06d1 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 4753      6B697479 
 4753      43686563 
 4753      6B596F75 
 4753      7273656C 
 4754              	.LASF127:
 4755 06fd 64617461 		.ascii	"data_count_sent\000"
 4755      5F636F75 
 4755      6E745F73 
 4755      656E7400 
 4756              	.LASF73:
 4757 070d 6D6F6465 		.ascii	"modem_stats_t\000"
 4757      6D5F7374 
 4757      6174735F 
 4757      7400
 4758              	.LASF47:
 4759 071b 70726573 		.ascii	"pressure_current\000"
 4759      73757265 
 4759      5F637572 
 4759      72656E74 
 4759      00
 4760              	.LASF43:
 4761 072c 76616C69 		.ascii	"valid\000"
 4761      6400
 4762              	.LASF56:
 4763 0732 746D5F77 		.ascii	"tm_wday\000"
 4763      64617900 
 4764              	.LASF81:
 4765 073a 616C6C5F 		.ascii	"all_do_readings\000"
 4765      646F5F72 
 4765      65616469 
 4765      6E677300 
 4766              	.LASF21:
 4767 074a 6C6F6E67 		.ascii	"long double\000"
 4767      20646F75 
 4767      626C6500 
 4768              	.LASF124:
 4769 0756 6368756E 		.ascii	"chunk\000"
 4769      6B00
 4770              	.LASF135:
 4771 075c 635F7469 		.ascii	"c_timeStamp\000"
 4771      6D655374 
 4771      616D7000 
 4772              	.LASF20:
 4773 0768 63686172 		.ascii	"char\000"
 4773      00
 4774              	.LASF155:
 4775 076d 6D6F6465 		.ascii	"modem_stats\000"
 4775      6D5F7374 
 4775      61747300 
 4776              	.LASF159:
 4777 0779 68747470 		.ascii	"http_route\000"
 4777      5F726F75 
 4777      746500
 4778              	.LASF123:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 107


 4779 0784 706F7274 		.ascii	"portConfig\000"
 4779      436F6E66 
 4779      696700
 4780              	.LASF9:
 4781 078f 5F5F696E 		.ascii	"__int32_t\000"
 4781      7433325F 
 4781      7400
 4782              	.LASF97:
 4783 0799 756E6971 		.ascii	"uniqueId\000"
 4783      75654964 
 4783      00
 4784              	.LASF137:
 4785 07a2 6D5F6C65 		.ascii	"m_level_sensor\000"
 4785      76656C5F 
 4785      73656E73 
 4785      6F7200
 4786              	.LASF35:
 4787 07b1 6C657665 		.ascii	"level_reading\000"
 4787      6C5F7265 
 4787      6164696E 
 4787      6700
 4788              	.LASF172:
 4789 07bf 4C617942 		.ascii	"LayBack\000"
 4789      61636B00 
 4790              	.LASF3:
 4791 07c7 73686F72 		.ascii	"short unsigned int\000"
 4791      7420756E 
 4791      7369676E 
 4791      65642069 
 4791      6E7400
 4792              	.LASF62:
 4793 07da 73696D5F 		.ascii	"sim_id\000"
 4793      696400
 4794              	.LASF53:
 4795 07e1 746D5F6D 		.ascii	"tm_mday\000"
 4795      64617900 
 4796              	.LASF109:
 4797 07e9 6E657741 		.ascii	"newAlarm\000"
 4797      6C61726D 
 4797      00
 4798              	.LASF50:
 4799 07f2 746D5F73 		.ascii	"tm_sec\000"
 4799      656300
 4800              	.LASF138:
 4801 07f9 6D5F7072 		.ascii	"m_pressure\000"
 4801      65737375 
 4801      726500
 4802              	.LASF31:
 4803 0804 73746174 		.ascii	"status\000"
 4803      757300
 4804              	.LASF151:
 4805 080b 64617461 		.ascii	"dataPointsInStackDesired\000"
 4805      506F696E 
 4805      7473496E 
 4805      53746163 
 4805      6B446573 
 4806              	.LASF114:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 108


 4807 0824 745F766F 		.ascii	"t_voltages\000"
 4807      6C746167 
 4807      657300
 4808              	.LASF169:
 4809 082f 6E6F746F 		.ascii	"notoriOS.c\000"
 4809      72694F53 
 4809      2E6300
 4810              	.LASF158:
 4811 083a 68747470 		.ascii	"http_body\000"
 4811      5F626F64 
 4811      7900
 4812              	.LASF15:
 4813 0844 696E7431 		.ascii	"int16\000"
 4813      3600
 4814              	.LASF88:
 4815 084a 636F756E 		.ascii	"countDownType\000"
 4815      74446F77 
 4815      6E547970 
 4815      6500
 4816              	.LASF87:
 4817 0858 63757272 		.ascii	"currentCountDownValue\000"
 4817      656E7443 
 4817      6F756E74 
 4817      446F776E 
 4817      56616C75 
 4818              	.LASF75:
 4819 086e 73696D5F 		.ascii	"sim_type\000"
 4819      74797065 
 4819      00
 4820              	.LASF98:
 4821 0877 635F6865 		.ascii	"c_hey\000"
 4821      7900
 4822              	.LASF26:
 4823 087d 4461794F 		.ascii	"DayOfYear\000"
 4823      66596561 
 4823      7200
 4824              	.LASF49:
 4825 0887 70726573 		.ascii	"pressure_t\000"
 4825      73757265 
 4825      5F7400
 4826              	.LASF107:
 4827 0892 416C6172 		.ascii	"AlarmReady\000"
 4827      6D526561 
 4827      647900
 4828              	.LASF110:
 4829 089d 52656164 		.ascii	"ReadyOrNot\000"
 4829      794F724E 
 4829      6F7400
 4830              	.LASF173:
 4831 08a8 6D61696E 		.ascii	"main\000"
 4831      00
 4832              	.LASF92:
 4833 08ad 63686970 		.ascii	"chip_uniqueId\000"
 4833      5F756E69 
 4833      71756549 
 4833      6400
 4834              	.LASF76:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccFUkmEA.s 			page 109


 4835 08bb 6D656173 		.ascii	"measure_time\000"
 4835      7572655F 
 4835      74696D65 
 4835      00
 4836              	.LASF19:
 4837 08c8 646F7562 		.ascii	"double\000"
 4837      6C6500
 4838              	.LASF44:
 4839 08cf 766F6C74 		.ascii	"voltage_t\000"
 4839      6167655F 
 4839      7400
 4840              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
