ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,10,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	App_LED_enabled,1,1
  33              		.comm	app_led_inbox,100,4
  34              		.comm	level_sensor_inbox,100,4
  35              		.comm	level_sensor_enabled,1,1
  36              		.comm	valve_diameter,4,4
  37              		.comm	valve_type,10,4
  38              		.comm	valve_enabled,1,1
  39              		.comm	valve_inbox,100,4
  40              		.comm	autosampler_enabled,1,1
  41              		.comm	autosampler_inbox,100,4
  42              		.comm	http_request,10000,4
  43              		.comm	http_body,10000,4
  44              		.comm	http_route,200,4
  45              		.comm	system_info,28,4
  46              		.comm	system_settings,104,4
  47              		.comm	alarmMeasure,6,4
  48              		.comm	timeToMeasure,1,1
  49              		.comm	alarmSync,6,4
  50              		.comm	timeToSync,1,1
  51              		.comm	timeToSycnRemoteParams,1,1
  52              		.comm	hey,1,1
  53              		.comm	alarmAppLED,6,4
  54              		.comm	timeToAppLED,1,1
  55              		.comm	alarmLevelSensor,6,4
  56              		.comm	timeToLevelSensor,1,1
  57              		.comm	alarmDownstreamLevelSensor,6,4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 2


  58              		.comm	timeToDownstreamLevelSensor,1,1
  59              		.comm	alarmValve,6,4
  60              		.comm	timeToValve,1,1
  61              		.comm	alarmAutosampler,6,4
  62              		.comm	timeToAutosampler,1,1
  63              		.section	.text.Wakeup_ISR,"ax",%progbits
  64              		.align	2
  65              		.global	Wakeup_ISR
  66              		.thumb
  67              		.thumb_func
  68              		.type	Wakeup_ISR, %function
  69              	Wakeup_ISR:
  70              	.LFB64:
  71              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  72              		.loc 1 20 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76 0000 80B5     		push	{r7, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 00AF     		add	r7, sp, #0
  81              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  82              		.loc 1 22 0
  83 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  84              		.loc 1 23 0
  85 0008 00BF     		nop
  86 000a 80BD     		pop	{r7, pc}
  87              		.cfi_endproc
  88              	.LFE64:
  89              		.size	Wakeup_ISR, .-Wakeup_ISR
  90              		.global	Data_fileName
  91              		.data
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 3


  92              		.align	2
  93              		.type	Data_fileName, %object
  94              		.size	Data_fileName, 30
  95              	Data_fileName:
  96 0000 64617461 		.ascii	"data.txt\000"
  96      2E747874 
  96      00
  97 0009 00000000 		.space	21
  97      00000000 
  97      00000000 
  97      00000000 
  97      00000000 
  98              		.comm	try_counter,1,1
  99              		.section	.rodata
 100              		.align	2
 101              	.LC0:
 102 0000 25582D25 		.ascii	"%X-%X\000"
 102      5800
 103 0006 0000     		.align	2
 104              	.LC1:
 105 0008 6563322D 		.ascii	"ec2-18-222-229-124.us-east-2.compute.amazonaws.com\000"
 105      31382D32 
 105      32322D32 
 105      32392D31 
 105      32342E75 
 106              		.section	.text.ReadyOrNot,"ax",%progbits
 107              		.align	2
 108              		.global	ReadyOrNot
 109              		.thumb
 110              		.thumb_func
 111              		.type	ReadyOrNot, %function
 112              	ReadyOrNot:
 113              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
 114              		.loc 1 41 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 24
 117              		@ frame_needed = 1, uses_anonymous_args = 0
 118 0000 B0B5     		push	{r4, r5, r7, lr}
 119              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 4


 120              		.cfi_offset 4, -16
 121              		.cfi_offset 5, -12
 122              		.cfi_offset 7, -8
 123              		.cfi_offset 14, -4
 124 0002 88B0     		sub	sp, sp, #32
 125              		.cfi_def_cfa_offset 48
 126 0004 02AF     		add	r7, sp, #8
 127              		.cfi_def_cfa 7, 40
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 128              		.loc 1 43 0
 129 0006 5548     		ldr	r0, .L3
 130 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 131              		.loc 1 44 0
 132 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 133              		.loc 1 46 0
 134 0010 FF20     		movs	r0, #255
 135 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 136              		.loc 1 47 0
 137 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 138              		.loc 1 48 0
 139 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 140              		.loc 1 50 0
 141 001e FFF7FEFF 		bl	modem_initialize
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 142              		.loc 1 52 0
 143 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  53:notoriOS.c    ****    
  54:notoriOS.c    ****     
  55:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  56:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  57:notoriOS.c    ****     
  58:notoriOS.c    ****     
  59:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  60:notoriOS.c    ****     uint32 uniqueId[2];
  61:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  62:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 144              		.loc 1 62 0
 145 0026 07F10C03 		add	r3, r7, #12
 146 002a 1846     		mov	r0, r3
 147 002c FFF7FEFF 		bl	CyGetUniqueId
  63:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 148              		.loc 1 63 0
 149 0030 FA68     		ldr	r2, [r7, #12]
 150 0032 3B69     		ldr	r3, [r7, #16]
 151 0034 0093     		str	r3, [sp]
 152 0036 1346     		mov	r3, r2
 153 0038 494A     		ldr	r2, .L3+4
 154 003a 1821     		movs	r1, #24
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 5


 155 003c 4948     		ldr	r0, .L3+8
 156 003e FFF7FEFF 		bl	snprintf
  64:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  65:notoriOS.c    ****     system_info.modem_info = &modem_info;
 157              		.loc 1 65 0
 158 0042 494B     		ldr	r3, .L3+12
 159 0044 494A     		ldr	r2, .L3+16
 160 0046 1A60     		str	r2, [r3]
  66:notoriOS.c    ****     
  67:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  68:notoriOS.c    ****     // testing server - travis and meagan june of 2022
  69:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","ec2-18-222-229-124.us-ea
 161              		.loc 1 69 0
 162 0048 494A     		ldr	r2, .L3+20
 163 004a 4A4B     		ldr	r3, .L3+24
 164 004c 1446     		mov	r4, r2
 165 004e 1D46     		mov	r5, r3
 166 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 167 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 168 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 169 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 170 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 171 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 172 005c 2B68     		ldr	r3, [r5]
 173 005e 1A46     		mov	r2, r3	@ movhi
 174 0060 2280     		strh	r2, [r4]	@ movhi
 175 0062 0234     		adds	r4, r4, #2
 176 0064 1B0C     		lsrs	r3, r3, #16
 177 0066 2370     		strb	r3, [r4]
  70:notoriOS.c    ****     
  71:notoriOS.c    ****     // production server
  72:notoriOS.c    ****     //snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","malcom.open-storm.org"
  73:notoriOS.c    ****     
  74:notoriOS.c    **** 
  75:notoriOS.c    ****     system_settings.ep_port = 5000;
 178              		.loc 1 75 0
 179 0068 414B     		ldr	r3, .L3+20
 180 006a 41F28832 		movw	r2, #5000
 181 006e 5A66     		str	r2, [r3, #100]
  76:notoriOS.c    ****     // Don't need the following for new nodes
  77:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  78:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  79:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  80:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  81:notoriOS.c    ****         
  82:notoriOS.c    ****     
  83:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  84:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 182              		.loc 1 84 0
 183 0070 414B     		ldr	r3, .L3+28
 184 0072 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 185 0074 99B2     		uxth	r1, r3
 186 0076 414C     		ldr	r4, .L3+32
 187 0078 3846     		mov	r0, r7
 188 007a 0723     		movs	r3, #7
 189 007c 0122     		movs	r2, #1
 190 007e FFF7FEFF 		bl	CreateAlarm
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 6


 191 0082 2246     		mov	r2, r4
 192 0084 3B46     		mov	r3, r7
 193 0086 1968     		ldr	r1, [r3]	@ unaligned
 194 0088 1160     		str	r1, [r2]	@ unaligned
 195 008a 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 196 008c 9380     		strh	r3, [r2, #4]	@ unaligned
  85:notoriOS.c    ****     timeToMeasure = 1u;
 197              		.loc 1 85 0
 198 008e 3C4B     		ldr	r3, .L3+36
 199 0090 0122     		movs	r2, #1
 200 0092 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  87:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 201              		.loc 1 87 0
 202 0094 384B     		ldr	r3, .L3+28
 203 0096 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 204 0098 99B2     		uxth	r1, r3
 205 009a 3A4C     		ldr	r4, .L3+40
 206 009c 3846     		mov	r0, r7
 207 009e 0723     		movs	r3, #7
 208 00a0 0122     		movs	r2, #1
 209 00a2 FFF7FEFF 		bl	CreateAlarm
 210 00a6 2246     		mov	r2, r4
 211 00a8 3B46     		mov	r3, r7
 212 00aa 1968     		ldr	r1, [r3]	@ unaligned
 213 00ac 1160     		str	r1, [r2]	@ unaligned
 214 00ae 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 215 00b0 9380     		strh	r3, [r2, #4]	@ unaligned
  88:notoriOS.c    ****     timeToSync = 1u;
 216              		.loc 1 88 0
 217 00b2 354B     		ldr	r3, .L3+44
 218 00b4 0122     		movs	r2, #1
 219 00b6 1A70     		strb	r2, [r3]
  89:notoriOS.c    ****     
  90:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 220              		.loc 1 90 0
 221 00b8 344B     		ldr	r3, .L3+48
 222 00ba 0022     		movs	r2, #0
 223 00bc 1A70     		strb	r2, [r3]
  91:notoriOS.c    ****     
  92:notoriOS.c    ****     // App Initializations
  93:notoriOS.c    ****     // APP_INTERFACE-------------------------------------------------------------------------------
  94:notoriOS.c    ****     alarmAppLED = CreateAlarm(updatable_parameters.App_LED_freq,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTIN
 224              		.loc 1 94 0
 225 00be 2E4B     		ldr	r3, .L3+28
 226 00c0 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 227 00c2 99B2     		uxth	r1, r3
 228 00c4 324C     		ldr	r4, .L3+52
 229 00c6 3846     		mov	r0, r7
 230 00c8 0723     		movs	r3, #7
 231 00ca 0122     		movs	r2, #1
 232 00cc FFF7FEFF 		bl	CreateAlarm
 233 00d0 2246     		mov	r2, r4
 234 00d2 3B46     		mov	r3, r7
 235 00d4 1968     		ldr	r1, [r3]	@ unaligned
 236 00d6 1160     		str	r1, [r2]	@ unaligned
 237 00d8 9B88     		ldrh	r3, [r3, #4]	@ unaligned
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 7


 238 00da 9380     		strh	r3, [r2, #4]	@ unaligned
  95:notoriOS.c    ****     timeToAppLED = 1u;
 239              		.loc 1 95 0
 240 00dc 2D4B     		ldr	r3, .L3+56
 241 00de 0122     		movs	r2, #1
 242 00e0 1A70     		strb	r2, [r3]
  96:notoriOS.c    ****     
  97:notoriOS.c    ****     alarmLevelSensor = CreateAlarm(updatable_parameters.Level_Sensor_freq,ALARM_TYPE_MINUTE, ALARM_
 243              		.loc 1 97 0
 244 00e2 254B     		ldr	r3, .L3+28
 245 00e4 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 246 00e6 99B2     		uxth	r1, r3
 247 00e8 2B4C     		ldr	r4, .L3+60
 248 00ea 3846     		mov	r0, r7
 249 00ec 0723     		movs	r3, #7
 250 00ee 0122     		movs	r2, #1
 251 00f0 FFF7FEFF 		bl	CreateAlarm
 252 00f4 2246     		mov	r2, r4
 253 00f6 3B46     		mov	r3, r7
 254 00f8 1968     		ldr	r1, [r3]	@ unaligned
 255 00fa 1160     		str	r1, [r2]	@ unaligned
 256 00fc 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 257 00fe 9380     		strh	r3, [r2, #4]	@ unaligned
  98:notoriOS.c    ****     timeToLevelSensor = 1u;
 258              		.loc 1 98 0
 259 0100 264B     		ldr	r3, .L3+64
 260 0102 0122     		movs	r2, #1
 261 0104 1A70     		strb	r2, [r3]
  99:notoriOS.c    ****     
 100:notoriOS.c    ****     alarmDownstreamLevelSensor = CreateAlarm(updatable_parameters.Downstream_Level_Sensor_freq,ALAR
 262              		.loc 1 100 0
 263 0106 1C4B     		ldr	r3, .L3+28
 264 0108 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 265 010a 99B2     		uxth	r1, r3
 266 010c 244C     		ldr	r4, .L3+68
 267 010e 3846     		mov	r0, r7
 268 0110 0723     		movs	r3, #7
 269 0112 0122     		movs	r2, #1
 270 0114 FFF7FEFF 		bl	CreateAlarm
 271 0118 2246     		mov	r2, r4
 272 011a 3B46     		mov	r3, r7
 273 011c 1968     		ldr	r1, [r3]	@ unaligned
 274 011e 1160     		str	r1, [r2]	@ unaligned
 275 0120 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 276 0122 9380     		strh	r3, [r2, #4]	@ unaligned
 101:notoriOS.c    ****     timeToDownstreamLevelSensor = 1u;
 277              		.loc 1 101 0
 278 0124 1F4B     		ldr	r3, .L3+72
 279 0126 0122     		movs	r2, #1
 280 0128 1A70     		strb	r2, [r3]
 102:notoriOS.c    ****     
 103:notoriOS.c    ****     //alarmValve = CreateAlarm(updatable_parameters.Valve_freq, ALARM_TYPE_MINUTE,ALARM_TYPE_CONTIN
 104:notoriOS.c    ****     //timeToValve = 1u;
 105:notoriOS.c    **** 
 106:notoriOS.c    ****     alarmAutosampler = CreateAlarm(updatable_parameters.Autosampler_freq,ALARM_TYPE_MINUTE,ALARM_TY
 281              		.loc 1 106 0
 282 012a 134B     		ldr	r3, .L3+28
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 8


 283 012c 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 284 012e 99B2     		uxth	r1, r3
 285 0130 1D4C     		ldr	r4, .L3+76
 286 0132 3846     		mov	r0, r7
 287 0134 0723     		movs	r3, #7
 288 0136 0122     		movs	r2, #1
 289 0138 FFF7FEFF 		bl	CreateAlarm
 290 013c 2246     		mov	r2, r4
 291 013e 3B46     		mov	r3, r7
 292 0140 1968     		ldr	r1, [r3]	@ unaligned
 293 0142 1160     		str	r1, [r2]	@ unaligned
 294 0144 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 295 0146 9380     		strh	r3, [r2, #4]	@ unaligned
 107:notoriOS.c    ****     timeToAutosampler = 1u;
 296              		.loc 1 107 0
 297 0148 184B     		ldr	r3, .L3+80
 298 014a 0122     		movs	r2, #1
 299 014c 1A70     		strb	r2, [r3]
 108:notoriOS.c    ****     /* app add template
 109:notoriOS.c    ****     alarm<Name> = CreateAlarm(updatable_parameters.<Name>_freq,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINU
 110:notoriOS.c    ****     timeTo<Name> = 1u;
 111:notoriOS.c    ****     */
 112:notoriOS.c    ****     //---------------------------------------------------------------------------------------------
 113:notoriOS.c    **** 
 114:notoriOS.c    ****     
 115:notoriOS.c    ****     // Initialize the try counter to 0
 116:notoriOS.c    ****     uint8 try_counter = 0;
 300              		.loc 1 116 0
 301 014e 0023     		movs	r3, #0
 302 0150 FB75     		strb	r3, [r7, #23]
 117:notoriOS.c    **** }
 303              		.loc 1 117 0
 304 0152 00BF     		nop
 305 0154 1837     		adds	r7, r7, #24
 306              		.cfi_def_cfa_offset 16
 307 0156 BD46     		mov	sp, r7
 308              		.cfi_def_cfa_register 13
 309              		@ sp needed
 310 0158 B0BD     		pop	{r4, r5, r7, pc}
 311              	.L4:
 312 015a 00BF     		.align	2
 313              	.L3:
 314 015c 00000000 		.word	Wakeup_ISR
 315 0160 00000000 		.word	.LC0
 316 0164 04000000 		.word	system_info+4
 317 0168 00000000 		.word	system_info
 318 016c 00000000 		.word	modem_info
 319 0170 00000000 		.word	system_settings
 320 0174 08000000 		.word	.LC1
 321 0178 00000000 		.word	updatable_parameters
 322 017c 00000000 		.word	alarmMeasure
 323 0180 00000000 		.word	timeToMeasure
 324 0184 00000000 		.word	alarmSync
 325 0188 00000000 		.word	timeToSync
 326 018c 00000000 		.word	timeToSycnRemoteParams
 327 0190 00000000 		.word	alarmAppLED
 328 0194 00000000 		.word	timeToAppLED
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 9


 329 0198 00000000 		.word	alarmLevelSensor
 330 019c 00000000 		.word	timeToLevelSensor
 331 01a0 00000000 		.word	alarmDownstreamLevelSensor
 332 01a4 00000000 		.word	timeToDownstreamLevelSensor
 333 01a8 00000000 		.word	alarmAutosampler
 334 01ac 00000000 		.word	timeToAutosampler
 335              		.cfi_endproc
 336              	.LFE65:
 337              		.size	ReadyOrNot, .-ReadyOrNot
 338              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 339              		.align	2
 340              		.global	WorkWorkWorkWorkWorkWork
 341              		.thumb
 342              		.thumb_func
 343              		.type	WorkWorkWorkWorkWorkWork, %function
 344              	WorkWorkWorkWorkWorkWork:
 345              	.LFB66:
 118:notoriOS.c    **** 
 119:notoriOS.c    **** 
 120:notoriOS.c    **** // ==============================================
 121:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
 122:notoriOS.c    **** //      - Rihanna, feat Drake (2016)
 123:notoriOS.c    **** //
 124:notoriOS.c    **** // Prorcesses core tasks
 125:notoriOS.c    **** // ==============================================
 126:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
 127:notoriOS.c    **** {
 346              		.loc 1 127 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 8
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
 353              		.cfi_offset 14, -4
 354 0002 82B0     		sub	sp, sp, #8
 355              		.cfi_def_cfa_offset 16
 356 0004 00AF     		add	r7, sp, #0
 357              		.cfi_def_cfa_register 7
 128:notoriOS.c    ****     
 129:notoriOS.c    ****     
 130:notoriOS.c    ****     
 131:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 132:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 133:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
 134:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 135:notoriOS.c    ****     
 136:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 137:notoriOS.c    ****     if(timeToSycnRemoteParams){
 358              		.loc 1 137 0
 359 0006 304B     		ldr	r3, .L14
 360 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 361 000a 002B     		cmp	r3, #0
 362 000c 06D0     		beq	.L6
 138:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
 363              		.loc 1 138 0
 364 000e FFF7FEFF 		bl	configureRemoteParams
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 10


 365 0012 0346     		mov	r3, r0
 366 0014 1A46     		mov	r2, r3
 367 0016 2C4B     		ldr	r3, .L14
 368 0018 1A70     		strb	r2, [r3]
 369 001a 09E0     		b	.L7
 370              	.L6:
 139:notoriOS.c    ****     }
 140:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 141:notoriOS.c    ****     else if(timeToMeasure){
 371              		.loc 1 141 0
 372 001c 2B4B     		ldr	r3, .L14+4
 373 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 374 0020 002B     		cmp	r3, #0
 375 0022 05D0     		beq	.L7
 142:notoriOS.c    ****         // on custom nodes makeMeasurements will just be battery voltages
 143:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 376              		.loc 1 143 0
 377 0024 FFF7FEFF 		bl	makeMeasurements
 378 0028 0346     		mov	r3, r0
 379 002a 1A46     		mov	r2, r3
 380 002c 274B     		ldr	r3, .L14+4
 381 002e 1A70     		strb	r2, [r3]
 382              	.L7:
 144:notoriOS.c    ****     }  
 145:notoriOS.c    ****     // custom nodes
 146:notoriOS.c    ****     // APP_INTERFACE-------------------------------------------------------------------------------
 147:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_CUSTOM){
 383              		.loc 1 147 0
 384 0030 274B     		ldr	r3, .L14+8
 385 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 386 0034 042B     		cmp	r3, #4
 387 0036 33D1     		bne	.L8
 148:notoriOS.c    ****         if(App_LED_enabled && timeToAppLED){
 388              		.loc 1 148 0
 389 0038 264B     		ldr	r3, .L14+12
 390 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 391 003c 002B     		cmp	r3, #0
 392 003e 09D0     		beq	.L9
 393              		.loc 1 148 0 is_stmt 0 discriminator 1
 394 0040 254B     		ldr	r3, .L14+16
 395 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 396 0044 002B     		cmp	r3, #0
 397 0046 05D0     		beq	.L9
 149:notoriOS.c    ****             timeToAppLED = App_LED();
 398              		.loc 1 149 0 is_stmt 1
 399 0048 FFF7FEFF 		bl	App_LED
 400 004c 0346     		mov	r3, r0
 401 004e 1A46     		mov	r2, r3
 402 0050 214B     		ldr	r3, .L14+16
 403 0052 1A70     		strb	r2, [r3]
 404              	.L9:
 150:notoriOS.c    ****         }
 151:notoriOS.c    ****         if(level_sensor_enabled && timeToLevelSensor){
 405              		.loc 1 151 0
 406 0054 214B     		ldr	r3, .L14+20
 407 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 408 0058 002B     		cmp	r3, #0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 11


 409 005a 09D0     		beq	.L10
 410              		.loc 1 151 0 is_stmt 0 discriminator 1
 411 005c 204B     		ldr	r3, .L14+24
 412 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 413 0060 002B     		cmp	r3, #0
 414 0062 05D0     		beq	.L10
 152:notoriOS.c    ****             timeToLevelSensor = level_sensor();
 415              		.loc 1 152 0 is_stmt 1
 416 0064 FFF7FEFF 		bl	level_sensor
 417 0068 0346     		mov	r3, r0
 418 006a 1A46     		mov	r2, r3
 419 006c 1C4B     		ldr	r3, .L14+24
 420 006e 1A70     		strb	r2, [r3]
 421              	.L10:
 153:notoriOS.c    ****         }
 154:notoriOS.c    ****         /*
 155:notoriOS.c    ****         if(downstream_level_sensor_enabled && timeToDownstreamLevelSensor){
 156:notoriOS.c    ****             timeToDownstreamLevelSensor = downstream_level_sensor();
 157:notoriOS.c    ****         }
 158:notoriOS.c    ****         */
 159:notoriOS.c    ****         if (valve_enabled){
 422              		.loc 1 159 0
 423 0070 1C4B     		ldr	r3, .L14+28
 424 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 425 0074 002B     		cmp	r3, #0
 426 0076 05D0     		beq	.L11
 160:notoriOS.c    ****             valve_enabled = App_Valve();
 427              		.loc 1 160 0
 428 0078 FFF7FEFF 		bl	App_Valve
 429 007c 0346     		mov	r3, r0
 430 007e 1A46     		mov	r2, r3
 431 0080 184B     		ldr	r3, .L14+28
 432 0082 1A70     		strb	r2, [r3]
 433              	.L11:
 161:notoriOS.c    ****         }
 162:notoriOS.c    ****         
 163:notoriOS.c    ****         if(autosampler_enabled && timeToAutosampler){
 434              		.loc 1 163 0
 435 0084 184B     		ldr	r3, .L14+32
 436 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 437 0088 002B     		cmp	r3, #0
 438 008a 09D0     		beq	.L8
 439              		.loc 1 163 0 is_stmt 0 discriminator 1
 440 008c 174B     		ldr	r3, .L14+36
 441 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 442 0090 002B     		cmp	r3, #0
 443 0092 05D0     		beq	.L8
 164:notoriOS.c    ****             timeToAutosampler = App_Autosampler();
 444              		.loc 1 164 0 is_stmt 1
 445 0094 FFF7FEFF 		bl	App_Autosampler
 446 0098 0346     		mov	r3, r0
 447 009a 1A46     		mov	r2, r3
 448 009c 134B     		ldr	r3, .L14+36
 449 009e 1A70     		strb	r2, [r3]
 450              	.L8:
 165:notoriOS.c    ****         }
 166:notoriOS.c    ****         // add other custom apps below
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 12


 167:notoriOS.c    ****         /* add app template
 168:notoriOS.c    ****         if(<name>_enabled && timeTo<Name>){
 169:notoriOS.c    ****             timeTo<Name> = App_<Name>();
 170:notoriOS.c    ****         }
 171:notoriOS.c    ****         */
 172:notoriOS.c    ****     }
 173:notoriOS.c    **** 
 174:notoriOS.c    ****     if(timeToSync){
 451              		.loc 1 174 0
 452 00a0 134B     		ldr	r3, .L14+40
 453 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 454 00a4 002B     		cmp	r3, #0
 455 00a6 05D0     		beq	.L12
 175:notoriOS.c    ****         timeToSync = syncData();
 456              		.loc 1 175 0
 457 00a8 FFF7FEFF 		bl	syncData
 458 00ac 0346     		mov	r3, r0
 459 00ae 1A46     		mov	r2, r3
 460 00b0 0F4B     		ldr	r3, .L14+40
 461 00b2 1A70     		strb	r2, [r3]
 462              	.L12:
 176:notoriOS.c    ****     }
 177:notoriOS.c    ****     
 178:notoriOS.c    ****     // Print the countdown to the next alarm
 179:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 180:notoriOS.c    ****     
 181:notoriOS.c    ****     
 182:notoriOS.c    ****     // Check modem state machine on every loop
 183:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
 463              		.loc 1 183 0
 464 00b4 FFF7FEFF 		bl	modem_process_tasks
 465 00b8 0346     		mov	r3, r0
 466 00ba FB71     		strb	r3, [r7, #7]
 184:notoriOS.c    **** 
 185:notoriOS.c    ****     return 0u +  modem_status;  
 467              		.loc 1 185 0
 468 00bc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 186:notoriOS.c    **** }
 469              		.loc 1 186 0
 470 00be 1846     		mov	r0, r3
 471 00c0 0837     		adds	r7, r7, #8
 472              		.cfi_def_cfa_offset 8
 473 00c2 BD46     		mov	sp, r7
 474              		.cfi_def_cfa_register 13
 475              		@ sp needed
 476 00c4 80BD     		pop	{r7, pc}
 477              	.L15:
 478 00c6 00BF     		.align	2
 479              	.L14:
 480 00c8 00000000 		.word	timeToSycnRemoteParams
 481 00cc 00000000 		.word	timeToMeasure
 482 00d0 00000000 		.word	updatable_parameters
 483 00d4 00000000 		.word	App_LED_enabled
 484 00d8 00000000 		.word	timeToAppLED
 485 00dc 00000000 		.word	level_sensor_enabled
 486 00e0 00000000 		.word	timeToLevelSensor
 487 00e4 00000000 		.word	valve_enabled
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 13


 488 00e8 00000000 		.word	autosampler_enabled
 489 00ec 00000000 		.word	timeToAutosampler
 490 00f0 00000000 		.word	timeToSync
 491              		.cfi_endproc
 492              	.LFE66:
 493              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 494              		.section	.text.LayBack,"ax",%progbits
 495              		.align	2
 496              		.global	LayBack
 497              		.thumb
 498              		.thumb_func
 499              		.type	LayBack, %function
 500              	LayBack:
 501              	.LFB67:
 187:notoriOS.c    **** 
 188:notoriOS.c    **** 
 189:notoriOS.c    **** 
 190:notoriOS.c    **** 
 191:notoriOS.c    **** 
 192:notoriOS.c    **** 
 193:notoriOS.c    **** // ==============================================
 194:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 195:notoriOS.c    **** //      - Snoop Dogg (1993)
 196:notoriOS.c    **** //
 197:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 198:notoriOS.c    **** // ==============================================
 199:notoriOS.c    **** void LayBack()
 200:notoriOS.c    **** {
 502              		.loc 1 200 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 1, uses_anonymous_args = 0
 506 0000 80B5     		push	{r7, lr}
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 7, -8
 509              		.cfi_offset 14, -4
 510 0002 00AF     		add	r7, sp, #0
 511              		.cfi_def_cfa_register 7
 201:notoriOS.c    ****   
 202:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 512              		.loc 1 202 0
 513 0004 FFF7FEFF 		bl	modem_sleep
 203:notoriOS.c    ****     
 204:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 205:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 514              		.loc 1 205 0
 515 0008 FFF7FEFF 		bl	debug_sleep
 206:notoriOS.c    ****     
 207:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 516              		.loc 1 207 0
 517 000c FFF7FEFF 		bl	CyPmSaveClocks
 208:notoriOS.c    ****     
 209:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 210:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 211:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 212:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 213:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 14


 214:notoriOS.c    ****     //CyPmHibernate();
 215:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 216:notoriOS.c    **** 
 217:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 518              		.loc 1 217 0
 519 0010 4FF40061 		mov	r1, #2048
 520 0014 0020     		movs	r0, #0
 521 0016 FFF7FEFF 		bl	CyPmSleep
 218:notoriOS.c    **** 
 219:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 522              		.loc 1 219 0
 523 001a FFF7FEFF 		bl	CyPmRestoreClocks
 220:notoriOS.c    **** 
 221:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 524              		.loc 1 221 0
 525 001e FFF7FEFF 		bl	debug_wakeup
 222:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 526              		.loc 1 222 0
 527 0022 FFF7FEFF 		bl	modem_wakeup
 223:notoriOS.c    **** 
 224:notoriOS.c    **** }
 528              		.loc 1 224 0
 529 0026 00BF     		nop
 530 0028 80BD     		pop	{r7, pc}
 531              		.cfi_endproc
 532              	.LFE67:
 533              		.size	LayBack, .-LayBack
 534 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 535              		.align	2
 536              		.global	AyoItsTime
 537              		.thumb
 538              		.thumb_func
 539              		.type	AyoItsTime, %function
 540              	AyoItsTime:
 541              	.LFB68:
 225:notoriOS.c    **** 
 226:notoriOS.c    **** 
 227:notoriOS.c    **** // ==============================================
 228:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 229:notoriOS.c    **** //      - NAS (1994)
 230:notoriOS.c    **** //
 231:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 232:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 233:notoriOS.c    **** // It will add tasks to the work queue,
 234:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 235:notoriOS.c    **** // ==============================================
 236:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 237:notoriOS.c    **** {
 542              		.loc 1 237 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 8
 545              		@ frame_needed = 1, uses_anonymous_args = 0
 546 0000 80B5     		push	{r7, lr}
 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 7, -8
 549              		.cfi_offset 14, -4
 550 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 15


 551              		.cfi_def_cfa_offset 16
 552 0004 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
 554 0006 0346     		mov	r3, r0
 555 0008 FB71     		strb	r3, [r7, #7]
 238:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 239:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 556              		.loc 1 239 0
 557 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 558 000c 1946     		mov	r1, r3
 559 000e 2248     		ldr	r0, .L25
 560 0010 FFF7FEFF 		bl	AlarmReady
 561 0014 0346     		mov	r3, r0
 562 0016 002B     		cmp	r3, #0
 563 0018 02D0     		beq	.L18
 240:notoriOS.c    ****     {
 241:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 242:notoriOS.c    ****         timeToMeasure = 1u;
 564              		.loc 1 242 0
 565 001a 204B     		ldr	r3, .L25+4
 566 001c 0122     		movs	r2, #1
 567 001e 1A70     		strb	r2, [r3]
 568              	.L18:
 243:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 244:notoriOS.c    ****         
 245:notoriOS.c    ****     }
 246:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 569              		.loc 1 246 0
 570 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 571 0022 1946     		mov	r1, r3
 572 0024 1E48     		ldr	r0, .L25+8
 573 0026 FFF7FEFF 		bl	AlarmReady
 574 002a 0346     		mov	r3, r0
 575 002c 002B     		cmp	r3, #0
 576 002e 02D0     		beq	.L19
 247:notoriOS.c    ****     {
 248:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 249:notoriOS.c    ****         timeToSync = 1u;
 577              		.loc 1 249 0
 578 0030 1C4B     		ldr	r3, .L25+12
 579 0032 0122     		movs	r2, #1
 580 0034 1A70     		strb	r2, [r3]
 581              	.L19:
 250:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 251:notoriOS.c    ****     }
 252:notoriOS.c    ****     
 253:notoriOS.c    ****     // APP_INTERFACE-------------------------------------------------------------------------------
 254:notoriOS.c    ****     if(AlarmReady(&alarmAppLED,alarmType)){
 582              		.loc 1 254 0
 583 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 584 0038 1946     		mov	r1, r3
 585 003a 1B48     		ldr	r0, .L25+16
 586 003c FFF7FEFF 		bl	AlarmReady
 587 0040 0346     		mov	r3, r0
 588 0042 002B     		cmp	r3, #0
 589 0044 02D0     		beq	.L20
 255:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 16


 256:notoriOS.c    ****         timeToAppLED = 1u;
 590              		.loc 1 256 0
 591 0046 194B     		ldr	r3, .L25+20
 592 0048 0122     		movs	r2, #1
 593 004a 1A70     		strb	r2, [r3]
 594              	.L20:
 257:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 258:notoriOS.c    ****     }
 259:notoriOS.c    ****     if(AlarmReady(&alarmLevelSensor, alarmType)){
 595              		.loc 1 259 0
 596 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 597 004e 1946     		mov	r1, r3
 598 0050 1748     		ldr	r0, .L25+24
 599 0052 FFF7FEFF 		bl	AlarmReady
 600 0056 0346     		mov	r3, r0
 601 0058 002B     		cmp	r3, #0
 602 005a 02D0     		beq	.L21
 260:notoriOS.c    ****         timeToLevelSensor = 1u;
 603              		.loc 1 260 0
 604 005c 154B     		ldr	r3, .L25+28
 605 005e 0122     		movs	r2, #1
 606 0060 1A70     		strb	r2, [r3]
 607              	.L21:
 261:notoriOS.c    ****     }
 262:notoriOS.c    ****     if(AlarmReady(&alarmDownstreamLevelSensor, alarmType)){
 608              		.loc 1 262 0
 609 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 610 0064 1946     		mov	r1, r3
 611 0066 1448     		ldr	r0, .L25+32
 612 0068 FFF7FEFF 		bl	AlarmReady
 613 006c 0346     		mov	r3, r0
 614 006e 002B     		cmp	r3, #0
 615 0070 02D0     		beq	.L22
 263:notoriOS.c    ****         timeToDownstreamLevelSensor = 1u;
 616              		.loc 1 263 0
 617 0072 124B     		ldr	r3, .L25+36
 618 0074 0122     		movs	r2, #1
 619 0076 1A70     		strb	r2, [r3]
 620              	.L22:
 264:notoriOS.c    ****     }
 265:notoriOS.c    ****     /*
 266:notoriOS.c    ****     if(AlarmReady(&alarmValve, alarmType)){
 267:notoriOS.c    ****         timeToValve = 1u;
 268:notoriOS.c    ****     }
 269:notoriOS.c    ****     */
 270:notoriOS.c    ****     if(AlarmReady(&alarmAutosampler, alarmType)){
 621              		.loc 1 270 0
 622 0078 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 623 007a 1946     		mov	r1, r3
 624 007c 1048     		ldr	r0, .L25+40
 625 007e FFF7FEFF 		bl	AlarmReady
 626 0082 0346     		mov	r3, r0
 627 0084 002B     		cmp	r3, #0
 628 0086 02D0     		beq	.L24
 271:notoriOS.c    ****         timeToAutosampler = 1u;
 629              		.loc 1 271 0
 630 0088 0E4B     		ldr	r3, .L25+44
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 17


 631 008a 0122     		movs	r2, #1
 632 008c 1A70     		strb	r2, [r3]
 633              	.L24:
 272:notoriOS.c    ****     }
 273:notoriOS.c    ****     /* app add template
 274:notoriOS.c    ****     if(AlarmReady(&alarm<Name>, alarmType)){
 275:notoriOS.c    ****         timeTo<Name> = 1u;
 276:notoriOS.c    ****     }
 277:notoriOS.c    ****     */
 278:notoriOS.c    ****     // --------------------------------------------------------------------------------------------
 279:notoriOS.c    **** 
 280:notoriOS.c    **** }
 634              		.loc 1 280 0
 635 008e 00BF     		nop
 636 0090 0837     		adds	r7, r7, #8
 637              		.cfi_def_cfa_offset 8
 638 0092 BD46     		mov	sp, r7
 639              		.cfi_def_cfa_register 13
 640              		@ sp needed
 641 0094 80BD     		pop	{r7, pc}
 642              	.L26:
 643 0096 00BF     		.align	2
 644              	.L25:
 645 0098 00000000 		.word	alarmMeasure
 646 009c 00000000 		.word	timeToMeasure
 647 00a0 00000000 		.word	alarmSync
 648 00a4 00000000 		.word	timeToSync
 649 00a8 00000000 		.word	alarmAppLED
 650 00ac 00000000 		.word	timeToAppLED
 651 00b0 00000000 		.word	alarmLevelSensor
 652 00b4 00000000 		.word	timeToLevelSensor
 653 00b8 00000000 		.word	alarmDownstreamLevelSensor
 654 00bc 00000000 		.word	timeToDownstreamLevelSensor
 655 00c0 00000000 		.word	alarmAutosampler
 656 00c4 00000000 		.word	timeToAutosampler
 657              		.cfi_endproc
 658              	.LFE68:
 659              		.size	AyoItsTime, .-AyoItsTime
 660              		.section	.text.AlarmReady,"ax",%progbits
 661              		.align	2
 662              		.global	AlarmReady
 663              		.thumb
 664              		.thumb_func
 665              		.type	AlarmReady, %function
 666              	AlarmReady:
 667              	.LFB69:
 281:notoriOS.c    **** 
 282:notoriOS.c    **** 
 283:notoriOS.c    **** // ==============================================
 284:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 285:notoriOS.c    **** // ==============================================
 286:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 287:notoriOS.c    **** {
 668              		.loc 1 287 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 8
 671              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 18


 672 0000 80B5     		push	{r7, lr}
 673              		.cfi_def_cfa_offset 8
 674              		.cfi_offset 7, -8
 675              		.cfi_offset 14, -4
 676 0002 82B0     		sub	sp, sp, #8
 677              		.cfi_def_cfa_offset 16
 678 0004 00AF     		add	r7, sp, #0
 679              		.cfi_def_cfa_register 7
 680 0006 7860     		str	r0, [r7, #4]
 681 0008 0B46     		mov	r3, r1
 682 000a FB70     		strb	r3, [r7, #3]
 288:notoriOS.c    ****     // if the countDownType matches the alarmType
 289:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 683              		.loc 1 289 0
 684 000c 7B68     		ldr	r3, [r7, #4]
 685 000e 1B79     		ldrb	r3, [r3, #4]
 686 0010 DBB2     		uxtb	r3, r3
 687 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 688 0014 9A42     		cmp	r2, r3
 689 0016 12D1     		bne	.L28
 290:notoriOS.c    ****        
 291:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 292:notoriOS.c    ****         // Decrement the count down value by 1
 293:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 690              		.loc 1 293 0
 691 0018 7B68     		ldr	r3, [r7, #4]
 692 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 693 001c 1BB2     		sxth	r3, r3
 694 001e 9BB2     		uxth	r3, r3
 695 0020 013B     		subs	r3, r3, #1
 696 0022 9BB2     		uxth	r3, r3
 697 0024 1AB2     		sxth	r2, r3
 698 0026 7B68     		ldr	r3, [r7, #4]
 699 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 294:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 295:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 700              		.loc 1 295 0
 701 002a 7B68     		ldr	r3, [r7, #4]
 702 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 703 002e 1BB2     		sxth	r3, r3
 704 0030 002B     		cmp	r3, #0
 705 0032 04DC     		bgt	.L28
 296:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 706              		.loc 1 296 0
 707 0034 7868     		ldr	r0, [r7, #4]
 708 0036 FFF7FEFF 		bl	ResetAlarm
 297:notoriOS.c    ****             return 1u;
 709              		.loc 1 297 0
 710 003a 0123     		movs	r3, #1
 711 003c 00E0     		b	.L29
 712              	.L28:
 298:notoriOS.c    ****         } 
 299:notoriOS.c    ****     }
 300:notoriOS.c    ****     
 301:notoriOS.c    ****     return 0u; // Otherwise return 0
 713              		.loc 1 301 0
 714 003e 0023     		movs	r3, #0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 19


 715              	.L29:
 302:notoriOS.c    **** }
 716              		.loc 1 302 0
 717 0040 1846     		mov	r0, r3
 718 0042 0837     		adds	r7, r7, #8
 719              		.cfi_def_cfa_offset 8
 720 0044 BD46     		mov	sp, r7
 721              		.cfi_def_cfa_register 13
 722              		@ sp needed
 723 0046 80BD     		pop	{r7, pc}
 724              		.cfi_endproc
 725              	.LFE69:
 726              		.size	AlarmReady, .-AlarmReady
 727              		.section	.text.ResetAlarm,"ax",%progbits
 728              		.align	2
 729              		.global	ResetAlarm
 730              		.thumb
 731              		.thumb_func
 732              		.type	ResetAlarm, %function
 733              	ResetAlarm:
 734              	.LFB70:
 303:notoriOS.c    **** 
 304:notoriOS.c    **** // ==============================================
 305:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 306:notoriOS.c    **** // ==============================================
 307:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 308:notoriOS.c    **** {
 735              		.loc 1 308 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 8
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739              		@ link register save eliminated.
 740 0000 80B4     		push	{r7}
 741              		.cfi_def_cfa_offset 4
 742              		.cfi_offset 7, -4
 743 0002 83B0     		sub	sp, sp, #12
 744              		.cfi_def_cfa_offset 16
 745 0004 00AF     		add	r7, sp, #0
 746              		.cfi_def_cfa_register 7
 747 0006 7860     		str	r0, [r7, #4]
 309:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 310:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 748              		.loc 1 310 0
 749 0008 7B68     		ldr	r3, [r7, #4]
 750 000a 1B88     		ldrh	r3, [r3]	@ movhi
 751 000c 9BB2     		uxth	r3, r3
 752 000e 1AB2     		sxth	r2, r3
 753 0010 7B68     		ldr	r3, [r7, #4]
 754 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 311:notoriOS.c    **** }
 755              		.loc 1 311 0
 756 0014 00BF     		nop
 757 0016 0C37     		adds	r7, r7, #12
 758              		.cfi_def_cfa_offset 4
 759 0018 BD46     		mov	sp, r7
 760              		.cfi_def_cfa_register 13
 761              		@ sp needed
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 20


 762 001a 80BC     		pop	{r7}
 763              		.cfi_restore 7
 764              		.cfi_def_cfa_offset 0
 765 001c 7047     		bx	lr
 766              		.cfi_endproc
 767              	.LFE70:
 768              		.size	ResetAlarm, .-ResetAlarm
 769 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
 770              		.align	2
 771              		.global	CreateAlarm
 772              		.thumb
 773              		.thumb_func
 774              		.type	CreateAlarm, %function
 775              	CreateAlarm:
 776              	.LFB71:
 312:notoriOS.c    **** 
 313:notoriOS.c    **** // ==============================================
 314:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 315:notoriOS.c    **** // ==============================================
 316:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 317:notoriOS.c    **** {
 777              		.loc 1 317 0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 16
 780              		@ frame_needed = 1, uses_anonymous_args = 0
 781              		@ link register save eliminated.
 782 0000 80B4     		push	{r7}
 783              		.cfi_def_cfa_offset 4
 784              		.cfi_offset 7, -4
 785 0002 85B0     		sub	sp, sp, #20
 786              		.cfi_def_cfa_offset 24
 787 0004 00AF     		add	r7, sp, #0
 788              		.cfi_def_cfa_register 7
 789 0006 7860     		str	r0, [r7, #4]
 790 0008 0846     		mov	r0, r1
 791 000a 1146     		mov	r1, r2
 792 000c 1A46     		mov	r2, r3
 793 000e 0346     		mov	r3, r0	@ movhi
 794 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 795 0012 0B46     		mov	r3, r1
 796 0014 7B70     		strb	r3, [r7, #1]
 797 0016 1346     		mov	r3, r2
 798 0018 3B70     		strb	r3, [r7]
 318:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 319:notoriOS.c    ****     alarm newAlarm;
 320:notoriOS.c    ****     
 321:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 322:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 799              		.loc 1 322 0
 800 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 801 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 323:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 802              		.loc 1 323 0
 803 001e 7B78     		ldrb	r3, [r7, #1]
 804 0020 3B73     		strb	r3, [r7, #12]
 324:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 805              		.loc 1 324 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 21


 806 0022 3B78     		ldrb	r3, [r7]
 807 0024 7B73     		strb	r3, [r7, #13]
 325:notoriOS.c    ****     
 326:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 327:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 328:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 808              		.loc 1 328 0
 809 0026 B7F90230 		ldrsh	r3, [r7, #2]
 810 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 329:notoriOS.c    ****     
 330:notoriOS.c    ****     return newAlarm;
 811              		.loc 1 330 0
 812 002c 7B68     		ldr	r3, [r7, #4]
 813 002e 1A46     		mov	r2, r3
 814 0030 07F10803 		add	r3, r7, #8
 815 0034 1868     		ldr	r0, [r3]	@ unaligned
 816 0036 1060     		str	r0, [r2]	@ unaligned
 817 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 818 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 331:notoriOS.c    ****     
 332:notoriOS.c    **** }
 819              		.loc 1 332 0
 820 003c 7868     		ldr	r0, [r7, #4]
 821 003e 1437     		adds	r7, r7, #20
 822              		.cfi_def_cfa_offset 4
 823 0040 BD46     		mov	sp, r7
 824              		.cfi_def_cfa_register 13
 825              		@ sp needed
 826 0042 80BC     		pop	{r7}
 827              		.cfi_restore 7
 828              		.cfi_def_cfa_offset 0
 829 0044 7047     		bx	lr
 830              		.cfi_endproc
 831              	.LFE71:
 832              		.size	CreateAlarm, .-CreateAlarm
 833 0046 00BF     		.section	.rodata
 834 003b 00       		.align	2
 835              	.LC2:
 836 003c 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 836      2D2D2D2D 
 836      2D2D2D2D 
 836      2D424547 
 836      494E2054 
 837 0066 0000     		.align	2
 838              	.LC3:
 839 0068 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\000"
 839      3D25732C 
 839      2053494D 
 839      49443D25 
 839      732C2044 
 840 0087 00       		.align	2
 841              	.LC4:
 842 0088 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 842      2D2D2D2D 
 842      2D2D2D2D 
 842      2D2D2D45 
 842      4E442054 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 22


 843 00b1 00       		.ascii	"\000"
 844              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 845              		.align	2
 846              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 847              		.thumb
 848              		.thumb_func
 849              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 850              	ChickityCheckYourselfBeforeYouWreckYourself:
 851              	.LFB72:
 333:notoriOS.c    **** 
 334:notoriOS.c    **** // ==============================================
 335:notoriOS.c    **** // Dropping bombs on your moms
 336:notoriOS.c    **** //      - Ice Cube (1992)
 337:notoriOS.c    **** //
 338:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 339:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 340:notoriOS.c    **** // ==============================================
 341:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 852              		.loc 1 341 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 1944
 855              		@ frame_needed = 1, uses_anonymous_args = 0
 856 0000 90B5     		push	{r4, r7, lr}
 857              		.cfi_def_cfa_offset 12
 858              		.cfi_offset 4, -12
 859              		.cfi_offset 7, -8
 860              		.cfi_offset 14, -4
 861 0002 ADF6141D 		subw	sp, sp, #2324
 862              		.cfi_def_cfa_offset 2336
 863 0006 5EAF     		add	r7, sp, #376
 864              		.cfi_def_cfa 7, 1960
 342:notoriOS.c    **** 
 343:notoriOS.c    ****     //test_t t_influx = influx_test();
 344:notoriOS.c    ****     //printTestStatus(t_influx);
 345:notoriOS.c    ****     
 346:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 865              		.loc 1 346 0
 866 0008 3849     		ldr	r1, .L34
 867 000a 0320     		movs	r0, #3
 868 000c FFF7FEFF 		bl	printNotif
 347:notoriOS.c    ****     
 348:notoriOS.c    ****     // Test level sensor
 349:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 869              		.loc 1 349 0
 870 0010 07F21463 		addw	r3, r7, #1556
 871 0014 1846     		mov	r0, r3
 872 0016 FFF7FEFF 		bl	level_sensor_test
 350:notoriOS.c    ****     printTestStatus(t_level_sensor);
 873              		.loc 1 350 0
 874 001a 07F21464 		addw	r4, r7, #1556
 875 001e 6846     		mov	r0, sp
 876 0020 04F11003 		add	r3, r4, #16
 877 0024 40F27112 		movw	r2, #369
 878 0028 1946     		mov	r1, r3
 879 002a FFF7FEFF 		bl	memcpy
 880 002e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 881 0032 FFF7FEFF 		bl	printTestStatus
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 23


 351:notoriOS.c    ****     
 352:notoriOS.c    ****     // Test downstream level sensor
 353:notoriOS.c    ****     //test_t t_down_level = downstream_level_sensor_test();
 354:notoriOS.c    ****     //printTestStatus(t_down_level);
 355:notoriOS.c    ****     
 356:notoriOS.c    ****     // Test valve
 357:notoriOS.c    ****     //test_t t_valve = valve_test();
 358:notoriOS.c    ****     //printTestStatus(t_valve);
 359:notoriOS.c    ****     // need to know the valve type in order to measure position
 360:notoriOS.c    ****     // but we don't know that until we talk to the server. 
 361:notoriOS.c    ****     // TODO: resolve this. find a way to test the valve without that info
 362:notoriOS.c    ****     
 363:notoriOS.c    ****     // Test voltages
 364:notoriOS.c    ****     test_t t_voltages = voltages_test();
 882              		.loc 1 364 0
 883 0036 07F59263 		add	r3, r7, #1168
 884 003a 1846     		mov	r0, r3
 885 003c FFF7FEFF 		bl	voltages_test
 365:notoriOS.c    ****     printTestStatus(t_voltages);
 886              		.loc 1 365 0
 887 0040 07F59264 		add	r4, r7, #1168
 888 0044 6846     		mov	r0, sp
 889 0046 04F11003 		add	r3, r4, #16
 890 004a 40F27112 		movw	r2, #369
 891 004e 1946     		mov	r1, r3
 892 0050 FFF7FEFF 		bl	memcpy
 893 0054 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 894 0058 FFF7FEFF 		bl	printTestStatus
 366:notoriOS.c    ****  
 367:notoriOS.c    ****     // Test voltages
 368:notoriOS.c    ****     test_t t_pressure = pressure_sensor_test();
 895              		.loc 1 368 0
 896 005c 07F54373 		add	r3, r7, #780
 897 0060 1846     		mov	r0, r3
 898 0062 FFF7FEFF 		bl	pressure_sensor_test
 369:notoriOS.c    ****     printTestStatus(t_pressure);
 899              		.loc 1 369 0
 900 0066 07F54374 		add	r4, r7, #780
 901 006a 6846     		mov	r0, sp
 902 006c 04F11003 		add	r3, r4, #16
 903 0070 40F27112 		movw	r2, #369
 904 0074 1946     		mov	r1, r3
 905 0076 FFF7FEFF 		bl	memcpy
 906 007a 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 907 007e FFF7FEFF 		bl	printTestStatus
 370:notoriOS.c    ****     
 371:notoriOS.c    ****     // Test SD card
 372:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 908              		.loc 1 372 0
 909 0082 07F5C473 		add	r3, r7, #392
 910 0086 1846     		mov	r0, r3
 911 0088 FFF7FEFF 		bl	SD_card_test
 373:notoriOS.c    ****     printTestStatus(t_sd_card);
 912              		.loc 1 373 0
 913 008c 07F5C474 		add	r4, r7, #392
 914 0090 6846     		mov	r0, sp
 915 0092 04F11003 		add	r3, r4, #16
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 24


 916 0096 40F27112 		movw	r2, #369
 917 009a 1946     		mov	r1, r3
 918 009c FFF7FEFF 		bl	memcpy
 919 00a0 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 920 00a4 FFF7FEFF 		bl	printTestStatus
 374:notoriOS.c    ****     
 375:notoriOS.c    ****     // Test modem
 376:notoriOS.c    ****     test_t t_modem = modem_test();
 921              		.loc 1 376 0
 922 00a8 3B1D     		adds	r3, r7, #4
 923 00aa 1846     		mov	r0, r3
 924 00ac FFF7FEFF 		bl	modem_test
 377:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s",modem_info.imei,modem_info.sim_i
 925              		.loc 1 377 0
 926 00b0 0F4B     		ldr	r3, .L34+4
 927 00b2 0093     		str	r3, [sp]
 928 00b4 0F4B     		ldr	r3, .L34+8
 929 00b6 104A     		ldr	r2, .L34+12
 930 00b8 1049     		ldr	r1, .L34+16
 931 00ba 0320     		movs	r0, #3
 932 00bc FFF7FEFF 		bl	printNotif
 378:notoriOS.c    ****     printTestStatus(t_modem);
 933              		.loc 1 378 0
 934 00c0 3C1D     		adds	r4, r7, #4
 935 00c2 6846     		mov	r0, sp
 936 00c4 04F11003 		add	r3, r4, #16
 937 00c8 40F27112 		movw	r2, #369
 938 00cc 1946     		mov	r1, r3
 939 00ce FFF7FEFF 		bl	memcpy
 940 00d2 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 941 00d6 FFF7FEFF 		bl	printTestStatus
 379:notoriOS.c    ****     
 380:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 942              		.loc 1 380 0
 943 00da 0949     		ldr	r1, .L34+20
 944 00dc 0320     		movs	r0, #3
 945 00de FFF7FEFF 		bl	printNotif
 381:notoriOS.c    **** 
 382:notoriOS.c    **** }
 946              		.loc 1 382 0
 947 00e2 00BF     		nop
 948 00e4 07F29C77 		addw	r7, r7, #1948
 949              		.cfi_def_cfa_offset 12
 950 00e8 BD46     		mov	sp, r7
 951              		.cfi_def_cfa_register 13
 952              		@ sp needed
 953 00ea 90BD     		pop	{r4, r7, pc}
 954              	.L35:
 955              		.align	2
 956              	.L34:
 957 00ec 3C000000 		.word	.LC2
 958 00f0 04000000 		.word	system_info+4
 959 00f4 00000000 		.word	modem_info
 960 00f8 28000000 		.word	modem_info+40
 961 00fc 68000000 		.word	.LC3
 962 0100 88000000 		.word	.LC4
 963              		.cfi_endproc
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 25


 964              	.LFE72:
 965              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 966              		.section	.text.main,"ax",%progbits
 967              		.align	2
 968              		.global	main
 969              		.thumb
 970              		.thumb_func
 971              		.type	main, %function
 972              	main:
 973              	.LFB73:
 383:notoriOS.c    **** 
 384:notoriOS.c    **** // ==============================================
 385:notoriOS.c    **** // Processes Core Tasks
 386:notoriOS.c    **** // ==============================================
 387:notoriOS.c    **** int main(void)
 388:notoriOS.c    **** {
 974              		.loc 1 388 0
 975              		.cfi_startproc
 976              		@ args = 0, pretend = 0, frame = 0
 977              		@ frame_needed = 1, uses_anonymous_args = 0
 978 0000 80B5     		push	{r7, lr}
 979              		.cfi_def_cfa_offset 8
 980              		.cfi_offset 7, -8
 981              		.cfi_offset 14, -4
 982 0002 00AF     		add	r7, sp, #0
 983              		.cfi_def_cfa_register 7
 389:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 984              		.loc 1 389 0
 985              		.syntax unified
 986              	@ 389 "notoriOS.c" 1
 987 0004 62B6     		CPSIE   i
 988              	@ 0 "" 2
 390:notoriOS.c    **** 
 391:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 989              		.loc 1 391 0
 990              		.thumb
 991              		.syntax unified
 992 0006 FFF7FEFF 		bl	ReadyOrNot
 392:notoriOS.c    ****     
 393:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 993              		.loc 1 393 0
 994 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 995              	.L38:
 394:notoriOS.c    ****    
 395:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 396:notoriOS.c    ****     {
 397:notoriOS.c    ****         
 398:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 996              		.loc 1 398 0
 997 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 998 0012 0346     		mov	r3, r0
 999 0014 002B     		cmp	r3, #0
 1000 0016 FAD1     		bne	.L38
 399:notoriOS.c    ****         {
 400:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
 1001              		.loc 1 400 0
 1002 0018 FFF7FEFF 		bl	LayBack
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 26


 401:notoriOS.c    ****         }
 402:notoriOS.c    ****     }
 1003              		.loc 1 402 0
 1004 001c F7E7     		b	.L38
 1005              		.cfi_endproc
 1006              	.LFE73:
 1007              		.size	main, .-main
 1008 001e 00BF     		.section	.rodata
 1009 00b2 0000     		.align	2
 1010              	.LC5:
 1011 00b4 4D6F6465 		.ascii	"Modem is ready.\000"
 1011      6D206973 
 1011      20726561 
 1011      64792E00 
 1012              		.align	2
 1013              	.LC6:
 1014 00c4 256400   		.ascii	"%d\000"
 1015 00c7 00       		.align	2
 1016              	.LC7:
 1017 00c8 72737270 		.ascii	"rsrp\000"
 1017      00
 1018 00cd 000000   		.align	2
 1019              	.LC8:
 1020 00d0 72736370 		.ascii	"rscp\000"
 1020      00
 1021 00d5 000000   		.align	2
 1022              	.LC9:
 1023 00d8 7472795F 		.ascii	"try_counter\000"
 1023      636F756E 
 1023      74657200 
 1024              		.align	2
 1025              	.LC10:
 1026 00e4 64617461 		.ascii	"data_count_sent\000"
 1026      5F636F75 
 1026      6E745F73 
 1026      656E7400 
 1027              		.align	2
 1028              	.LC11:
 1029 00f4 64617461 		.ascii	"data_count_desired\000"
 1029      5F636F75 
 1029      6E745F64 
 1029      65736972 
 1029      656400
 1030 0107 00       		.align	2
 1031              	.LC12:
 1032 0108 42656769 		.ascii	"Begin HTTP post.\000"
 1032      6E204854 
 1032      54502070 
 1032      6F73742E 
 1032      00
 1033 0119 000000   		.align	2
 1034              	.LC13:
 1035 011c 37363837 		.ascii	"768725c970e8e5acb2358585ca63ac64fc199627\000"
 1035      32356339 
 1035      37306538 
 1035      65356163 
 1035      62323335 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 27


 1036 0145 000000   		.align	2
 1037              	.LC14:
 1038 0148 6170692F 		.ascii	"api/v1/write\000"
 1038      76312F77 
 1038      72697465 
 1038      00
 1039 0155 000000   		.align	2
 1040              	.LC15:
 1041 0158 48545450 		.ascii	"HTTP route: %s\000"
 1041      20726F75 
 1041      74653A20 
 1041      257300
 1042 0167 00       		.align	2
 1043              	.LC16:
 1044 0168 312E3100 		.ascii	"1.1\000"
 1045              		.align	2
 1046              	.LC17:
 1047 016c 00       		.ascii	"\000"
 1048 016d 000000   		.align	2
 1049              	.LC18:
 1050 0170 436C6F73 		.ascii	"Close\000"
 1050      6500
 1051 0176 0000     		.align	2
 1052              	.LC19:
 1053 0178 504F5354 		.ascii	"POST\000"
 1053      00
 1054 017d 000000   		.align	2
 1055              	.LC20:
 1056 0180 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 1056      20485454 
 1056      50205265 
 1056      71756573 
 1056      743A2025 
 1057 0196 0000     		.align	2
 1058              	.LC21:
 1059 0198 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 1059      443D312C 
 1059      302C2564 
 1059      2C222573 
 1059      222C302C 
 1060 01b1 000000   		.align	2
 1061              	.LC22:
 1062 01b4 257300   		.ascii	"%s\000"
 1063 01b7 00       		.align	2
 1064              	.LC23:
 1065 01b8 4F4B00   		.ascii	"OK\000"
 1066              		.global	__aeabi_ui2d
 1067              		.global	__aeabi_d2iz
 1068 01bb 00       		.align	2
 1069              	.LC24:
 1070 01bc 68747470 		.ascii	"http_request len: %d\000"
 1070      5F726571 
 1070      75657374 
 1070      206C656E 
 1070      3A202564 
 1071 01d1 000000   		.align	2
 1072              	.LC25:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 28


 1073 01d4 23206F66 		.ascii	"# of packets: %d\000"
 1073      20706163 
 1073      6B657473 
 1073      3A202564 
 1073      00
 1074 01e5 000000   		.align	2
 1075              	.LC26:
 1076 01e8 3E00     		.ascii	">\000"
 1077 01ea 0000     		.align	2
 1078              	.LC27:
 1079 01ec 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 1079      53454E44 
 1079      3D310D0A 
 1079      00
 1080 01f9 000000   		.align	2
 1081              	.LC28:
 1082 01fc 1A00     		.ascii	"\032\000"
 1083 01fe 0000     		.align	2
 1084              	.LC29:
 1085 0200 6368756E 		.ascii	"chunk %d: %s\000"
 1085      6B202564 
 1085      3A202573 
 1085      00
 1086 020d 000000   		.align	2
 1087              	.LC30:
 1088 0210 5352494E 		.ascii	"SRING\000"
 1088      4700
 1089 0216 0000     		.align	2
 1090              	.LC31:
 1091 0218 4F532D4F 		.ascii	"OS-OK\000"
 1091      4B00
 1092 021e 0000     		.align	2
 1093              	.LC32:
 1094 0220 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 1094      52454356 
 1094      3D312C31 
 1094      3030300D 
 1094      00
 1095 0231 000000   		.align	2
 1096              	.LC33:
 1097 0234 6D6F6465 		.ascii	"modem_tx_time\000"
 1097      6D5F7478 
 1097      5F74696D 
 1097      6500
 1098 0242 0000     		.align	2
 1099              	.LC34:
 1100 0244 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 1100      4F3A2043 
 1100      6F756C64 
 1100      206E6F74 
 1100      20726563 
 1101              		.section	.text.syncData,"ax",%progbits
 1102              		.align	2
 1103              		.global	syncData
 1104              		.thumb
 1105              		.thumb_func
 1106              		.type	syncData, %function
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 29


 1107              	syncData:
 1108              	.LFB74:
 403:notoriOS.c    **** }
 404:notoriOS.c    **** 
 405:notoriOS.c    **** // ==============================================
 406:notoriOS.c    **** // Syncs data with server
 407:notoriOS.c    **** // Returns 0 when done
 408:notoriOS.c    **** // ==============================================
 409:notoriOS.c    **** uint8 syncData(){
 1109              		.loc 1 409 0
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 1360
 1112              		@ frame_needed = 1, uses_anonymous_args = 0
 1113 0000 90B5     		push	{r4, r7, lr}
 1114              		.cfi_def_cfa_offset 12
 1115              		.cfi_offset 4, -12
 1116              		.cfi_offset 7, -8
 1117              		.cfi_offset 14, -4
 1118 0002 ADF26C5D 		subw	sp, sp, #1388
 1119              		.cfi_def_cfa_offset 1400
 1120 0006 06AF     		add	r7, sp, #24
 1121              		.cfi_def_cfa 7, 1376
 410:notoriOS.c    ****     
 411:notoriOS.c    ****     /*
 412:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 413:notoriOS.c    ****     uint8 check = 0;
 414:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 415:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 416:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 417:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 418:notoriOS.c    ****     */
 419:notoriOS.c    **** 
 420:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 421:notoriOS.c    ****     LED_Write(1u);
 1122              		.loc 1 421 0
 1123 0008 0120     		movs	r0, #1
 1124 000a FFF7FEFF 		bl	LED_Write
 422:notoriOS.c    ****     CyDelay(100u);
 1125              		.loc 1 422 0
 1126 000e 6420     		movs	r0, #100
 1127 0010 FFF7FEFF 		bl	CyDelay
 423:notoriOS.c    ****     LED_Write(0u);
 1128              		.loc 1 423 0
 1129 0014 0020     		movs	r0, #0
 1130 0016 FFF7FEFF 		bl	LED_Write
 424:notoriOS.c    **** 
 425:notoriOS.c    ****     
 426:notoriOS.c    ****     // If there's no data, not need to do anything
 427:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 1131              		.loc 1 427 0
 1132 001a FFF7FEFF 		bl	sizeOfDataStack
 1133 001e 0346     		mov	r3, r0
 1134 0020 002B     		cmp	r3, #0
 1135 0022 01D1     		bne	.L40
 428:notoriOS.c    ****         return 0u;
 1136              		.loc 1 428 0
 1137 0024 0023     		movs	r3, #0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 30


 1138 0026 03E2     		b	.L41
 1139              	.L40:
 429:notoriOS.c    ****         }
 430:notoriOS.c    ****     
 431:notoriOS.c    ****     // Create request body, in this case influx
 432:notoriOS.c    ****     // Place body into HTTP request header
 433:notoriOS.c    ****     // Fire up modem and get it out
 434:notoriOS.c    ****      
 435:notoriOS.c    ****     
 436:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 437:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1140              		.loc 1 437 0
 1141 0028 FFF7FEFF 		bl	modem_get_state
 1142 002c 0346     		mov	r3, r0
 1143 002e 002B     		cmp	r3, #0
 1144 0030 11D1     		bne	.L42
 438:notoriOS.c    **** 
 439:notoriOS.c    ****         try_counter++;
 1145              		.loc 1 439 0
 1146 0032 AE4B     		ldr	r3, .L54
 1147 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1148 0036 0133     		adds	r3, r3, #1
 1149 0038 DAB2     		uxtb	r2, r3
 1150 003a AC4B     		ldr	r3, .L54
 1151 003c 1A70     		strb	r2, [r3]
 440:notoriOS.c    ****         	
 441:notoriOS.c    ****         if(try_counter <= 2){
 1152              		.loc 1 441 0
 1153 003e AB4B     		ldr	r3, .L54
 1154 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1155 0042 022B     		cmp	r3, #2
 1156 0044 02D8     		bhi	.L43
 442:notoriOS.c    ****             modem_power_up();
 1157              		.loc 1 442 0
 1158 0046 FFF7FEFF 		bl	modem_power_up
 1159 004a F0E1     		b	.L44
 1160              	.L43:
 443:notoriOS.c    ****         }else{
 444:notoriOS.c    ****             try_counter = 0;
 1161              		.loc 1 444 0
 1162 004c A74B     		ldr	r3, .L54
 1163 004e 0022     		movs	r2, #0
 1164 0050 1A70     		strb	r2, [r3]
 445:notoriOS.c    ****             return 0u;
 1165              		.loc 1 445 0
 1166 0052 0023     		movs	r3, #0
 1167 0054 ECE1     		b	.L41
 1168              	.L42:
 446:notoriOS.c    ****             }
 447:notoriOS.c    ****             
 448:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1169              		.loc 1 448 0
 1170 0056 FFF7FEFF 		bl	modem_get_state
 1171 005a 0346     		mov	r3, r0
 1172 005c 042B     		cmp	r3, #4
 1173 005e 40F0E681 		bne	.L44
 1174              	.LBB2:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 31


 449:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 1175              		.loc 1 449 0
 1176 0062 A349     		ldr	r1, .L54+4
 1177 0064 0020     		movs	r0, #0
 1178 0066 FFF7FEFF 		bl	printNotif
 450:notoriOS.c    ****         
 451:notoriOS.c    ****         http_request[0] = '\0';
 1179              		.loc 1 451 0
 1180 006a A24B     		ldr	r3, .L54+8
 1181 006c 0022     		movs	r2, #0
 1182 006e 1A70     		strb	r2, [r3]
 452:notoriOS.c    ****         http_body[0] = '\0';
 1183              		.loc 1 452 0
 1184 0070 A14B     		ldr	r3, .L54+12
 1185 0072 0022     		movs	r2, #0
 1186 0074 1A70     		strb	r2, [r3]
 453:notoriOS.c    ****         http_route[0] = '\0';
 1187              		.loc 1 453 0
 1188 0076 A14B     		ldr	r3, .L54+16
 1189 0078 0022     		movs	r2, #0
 1190 007a 1A70     		strb	r2, [r3]
 454:notoriOS.c    ****         //char *base = "write";
 455:notoriOS.c    ****         
 456:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power and RSCP: received signal
 457:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 458:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 1191              		.loc 1 458 0
 1192 007c A04B     		ldr	r3, .L54+20
 1193 007e 5B69     		ldr	r3, [r3, #20]
 1194 0080 07F5A560 		add	r0, r7, #1320
 1195 0084 9F4A     		ldr	r2, .L54+24
 1196 0086 1421     		movs	r1, #20
 1197 0088 FFF7FEFF 		bl	snprintf
 459:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 1198              		.loc 1 459 0
 1199 008c FFF7FEFF 		bl	getTimeStamp
 1200 0090 0246     		mov	r2, r0
 1201 0092 07F5A563 		add	r3, r7, #1320
 1202 0096 1946     		mov	r1, r3
 1203 0098 9B48     		ldr	r0, .L54+28
 1204 009a FFF7FEFF 		bl	pushData
 460:notoriOS.c    ****         
 461:notoriOS.c    ****         char s_rscp[DATA_MAX_KEY_LENGTH];
 462:notoriOS.c    ****         snprintf(s_rscp,sizeof(s_rscp),"%d",modem_stats.rscp);
 1205              		.loc 1 462 0
 1206 009e 984B     		ldr	r3, .L54+20
 1207 00a0 9B68     		ldr	r3, [r3, #8]
 1208 00a2 07F21450 		addw	r0, r7, #1300
 1209 00a6 974A     		ldr	r2, .L54+24
 1210 00a8 1421     		movs	r1, #20
 1211 00aa FFF7FEFF 		bl	snprintf
 463:notoriOS.c    ****         pushData("rscp", s_rscp, getTimeStamp());
 1212              		.loc 1 463 0
 1213 00ae FFF7FEFF 		bl	getTimeStamp
 1214 00b2 0246     		mov	r2, r0
 1215 00b4 07F21453 		addw	r3, r7, #1300
 1216 00b8 1946     		mov	r1, r3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 32


 1217 00ba 9448     		ldr	r0, .L54+32
 1218 00bc FFF7FEFF 		bl	pushData
 464:notoriOS.c    ****         
 465:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 466:notoriOS.c    ****         char c_try_counter[20];
 467:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 1219              		.loc 1 467 0
 1220 00c0 8A4B     		ldr	r3, .L54
 1221 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1222 00c4 07F5A060 		add	r0, r7, #1280
 1223 00c8 8E4A     		ldr	r2, .L54+24
 1224 00ca 1421     		movs	r1, #20
 1225 00cc FFF7FEFF 		bl	snprintf
 468:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 1226              		.loc 1 468 0
 1227 00d0 FFF7FEFF 		bl	getTimeStamp
 1228 00d4 0246     		mov	r2, r0
 1229 00d6 07F5A063 		add	r3, r7, #1280
 1230 00da 1946     		mov	r1, r3
 1231 00dc 8C48     		ldr	r0, .L54+36
 1232 00de FFF7FEFF 		bl	pushData
 469:notoriOS.c    ****         
 470:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
 471:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 472:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 473:notoriOS.c    ****         if(buffer_overflow == false){
 1233              		.loc 1 473 0
 1234 00e2 8C4B     		ldr	r3, .L54+40
 1235 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1236 00e6 83F00103 		eor	r3, r3, #1
 1237 00ea DBB2     		uxtb	r3, r3
 1238 00ec 002B     		cmp	r3, #0
 1239 00ee 16D0     		beq	.L45
 1240              	.LBB3:
 474:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 1241              		.loc 1 474 0
 1242 00f0 FFF7FEFF 		bl	sizeOfDataStack
 1243 00f4 0346     		mov	r3, r0
 1244 00f6 A7F84835 		strh	r3, [r7, #1352]	@ movhi
 475:notoriOS.c    ****             char c_data_count_sent[20];
 476:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 1245              		.loc 1 476 0
 1246 00fa B7F84835 		ldrh	r3, [r7, #1352]
 1247 00fe 07F59B60 		add	r0, r7, #1240
 1248 0102 804A     		ldr	r2, .L54+24
 1249 0104 1421     		movs	r1, #20
 1250 0106 FFF7FEFF 		bl	snprintf
 477:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1251              		.loc 1 477 0
 1252 010a FFF7FEFF 		bl	getTimeStamp
 1253 010e 0246     		mov	r2, r0
 1254 0110 07F59B63 		add	r3, r7, #1240
 1255 0114 1946     		mov	r1, r3
 1256 0116 8048     		ldr	r0, .L54+44
 1257 0118 FFF7FEFF 		bl	pushData
 1258              	.LBE3:
 1259 011c 0FE0     		b	.L46
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 33


 1260              	.L45:
 1261              	.LBB4:
 478:notoriOS.c    ****         }else{
 479:notoriOS.c    ****             char c_data_count_sent[20];
 480:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1262              		.loc 1 480 0
 1263 011e 07F2C440 		addw	r0, r7, #1220
 1264 0122 9623     		movs	r3, #150
 1265 0124 774A     		ldr	r2, .L54+24
 1266 0126 1421     		movs	r1, #20
 1267 0128 FFF7FEFF 		bl	snprintf
 481:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1268              		.loc 1 481 0
 1269 012c FFF7FEFF 		bl	getTimeStamp
 1270 0130 0246     		mov	r2, r0
 1271 0132 07F2C443 		addw	r3, r7, #1220
 1272 0136 1946     		mov	r1, r3
 1273 0138 7748     		ldr	r0, .L54+44
 1274 013a FFF7FEFF 		bl	pushData
 1275              	.L46:
 1276              	.LBE4:
 482:notoriOS.c    ****         }
 483:notoriOS.c    ****         
 484:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 485:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 1277              		.loc 1 485 0
 1278 013e FFF7FEFF 		bl	sizeOfDataStackDesired
 1279 0142 0346     		mov	r3, r0
 1280 0144 A7F84635 		strh	r3, [r7, #1350]	@ movhi
 486:notoriOS.c    ****         char c_data_count_desired[20];
 487:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 488:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1281              		.loc 1 488 0
 1282 0148 B7F84635 		ldrh	r3, [r7, #1350]
 1283 014c 013B     		subs	r3, r3, #1
 1284 014e 07F2EC40 		addw	r0, r7, #1260
 1285 0152 6C4A     		ldr	r2, .L54+24
 1286 0154 1421     		movs	r1, #20
 1287 0156 FFF7FEFF 		bl	snprintf
 489:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
 1288              		.loc 1 489 0
 1289 015a FFF7FEFF 		bl	getTimeStamp
 1290 015e 0246     		mov	r2, r0
 1291 0160 07F2EC43 		addw	r3, r7, #1260
 1292 0164 1946     		mov	r1, r3
 1293 0166 6D48     		ldr	r0, .L54+48
 1294 0168 FFF7FEFF 		bl	pushData
 490:notoriOS.c    ****         
 491:notoriOS.c    ****         // Construct HTPP request
 492:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1295              		.loc 1 492 0
 1296 016c 6C49     		ldr	r1, .L54+52
 1297 016e 0020     		movs	r0, #0
 1298 0170 FFF7FEFF 		bl	printNotif
 493:notoriOS.c    ****         
 494:notoriOS.c    ****         // Old influx API
 495:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 34


 496:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1299              		.loc 1 496 0
 1300 0174 6B4B     		ldr	r3, .L54+56
 1301 0176 6C4A     		ldr	r2, .L54+60
 1302 0178 6C49     		ldr	r1, .L54+64
 1303 017a 6048     		ldr	r0, .L54+16
 1304 017c FFF7FEFF 		bl	construct_malcom_route
 497:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1305              		.loc 1 497 0
 1306 0180 5E4A     		ldr	r2, .L54+16
 1307 0182 6B49     		ldr	r1, .L54+68
 1308 0184 0020     		movs	r0, #0
 1309 0186 FFF7FEFF 		bl	printNotif
 498:notoriOS.c    ****         
 499:notoriOS.c    ****         //OLD INFLUX API
 500:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 501:notoriOS.c    ****         construct_malcom_body(http_body);
 1310              		.loc 1 501 0
 1311 018a 5B48     		ldr	r0, .L54+12
 1312 018c FFF7FEFF 		bl	construct_malcom_body
 502:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1313              		.loc 1 502 0
 1314 0190 684B     		ldr	r3, .L54+72
 1315 0192 5B6E     		ldr	r3, [r3, #100]
 1316 0194 684A     		ldr	r2, .L54+76
 1317 0196 0592     		str	r2, [sp, #20]
 1318 0198 0022     		movs	r2, #0
 1319 019a 0492     		str	r2, [sp, #16]
 1320 019c 674A     		ldr	r2, .L54+80
 1321 019e 0392     		str	r2, [sp, #12]
 1322 01a0 674A     		ldr	r2, .L54+84
 1323 01a2 0292     		str	r2, [sp, #8]
 1324 01a4 674A     		ldr	r2, .L54+88
 1325 01a6 0192     		str	r2, [sp, #4]
 1326 01a8 0093     		str	r3, [sp]
 1327 01aa 544B     		ldr	r3, .L54+16
 1328 01ac 614A     		ldr	r2, .L54+72
 1329 01ae 5249     		ldr	r1, .L54+12
 1330 01b0 5048     		ldr	r0, .L54+8
 1331 01b2 FFF7FEFF 		bl	construct_generic_HTTP_request
 503:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1332              		.loc 1 503 0
 1333 01b6 4F4A     		ldr	r2, .L54+8
 1334 01b8 6349     		ldr	r1, .L54+92
 1335 01ba 0020     		movs	r0, #0
 1336 01bc FFF7FEFF 		bl	printNotif
 504:notoriOS.c    ****         
 505:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 506:notoriOS.c    ****         // Open port and begin command line sequence
 507:notoriOS.c    ****         char portConfig[200];
 508:notoriOS.c    ****         uint8 status = 0u;
 1337              		.loc 1 508 0
 1338 01c0 0023     		movs	r3, #0
 1339 01c2 87F84535 		strb	r3, [r7, #1349]
 509:notoriOS.c    ****         
 510:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1340              		.loc 1 510 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 35


 1341 01c6 5B4B     		ldr	r3, .L54+72
 1342 01c8 5A6E     		ldr	r2, [r3, #100]
 1343 01ca 381D     		adds	r0, r7, #4
 1344 01cc 594B     		ldr	r3, .L54+72
 1345 01ce 0093     		str	r3, [sp]
 1346 01d0 1346     		mov	r3, r2
 1347 01d2 5E4A     		ldr	r2, .L54+96
 1348 01d4 C821     		movs	r1, #200
 1349 01d6 FFF7FEFF 		bl	snprintf
 511:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1350              		.loc 1 511 0
 1351 01da 3B1D     		adds	r3, r7, #4
 1352 01dc 1A46     		mov	r2, r3
 1353 01de 5C49     		ldr	r1, .L54+100
 1354 01e0 0020     		movs	r0, #0
 1355 01e2 FFF7FEFF 		bl	printNotif
 512:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1356              		.loc 1 512 0
 1357 01e6 3B1D     		adds	r3, r7, #4
 1358 01e8 42F21072 		movw	r2, #10000
 1359 01ec 5949     		ldr	r1, .L54+104
 1360 01ee 1846     		mov	r0, r3
 1361 01f0 FFF7FEFF 		bl	at_write_command
 1362 01f4 0346     		mov	r3, r0
 1363 01f6 87F84535 		strb	r3, [r7, #1349]
 513:notoriOS.c    ****         
 514:notoriOS.c    ****         // create character pointer to chunk through the http_request
 515:notoriOS.c    ****         char *chunk;
 516:notoriOS.c    ****         // Set chunk to start where http_request starts
 517:notoriOS.c    ****         chunk = http_request;
 1364              		.loc 1 517 0
 1365 01fa 3E4B     		ldr	r3, .L54+8
 1366 01fc C7F84C35 		str	r3, [r7, #1356]
 518:notoriOS.c    ****         // variable for the number of packets to send
 519:notoriOS.c    ****         int8 packets;
 520:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1367              		.loc 1 520 0
 1368 0200 3C48     		ldr	r0, .L54+8
 1369 0202 FFF7FEFF 		bl	strlen
 1370 0206 0246     		mov	r2, r0
 1371 0208 534B     		ldr	r3, .L54+108
 1372 020a A3FB0223 		umull	r2, r3, r3, r2
 1373 020e 5B09     		lsrs	r3, r3, #5
 1374 0210 1846     		mov	r0, r3
 1375 0212 FFF7FEFF 		bl	__aeabi_ui2d
 1376 0216 4FF00002 		mov	r2, #0
 1377 021a 504B     		ldr	r3, .L54+112
 1378 021c FFF7FEFF 		bl	nextafter
 1379 0220 0346     		mov	r3, r0
 1380 0222 0C46     		mov	r4, r1
 1381 0224 1846     		mov	r0, r3
 1382 0226 2146     		mov	r1, r4
 1383 0228 FFF7FEFF 		bl	ceil
 1384 022c 0346     		mov	r3, r0
 1385 022e 0C46     		mov	r4, r1
 1386 0230 1846     		mov	r0, r3
 1387 0232 2146     		mov	r1, r4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 36


 1388 0234 FFF7FEFF 		bl	__aeabi_d2iz
 1389 0238 0346     		mov	r3, r0
 1390 023a 87F84435 		strb	r3, [r7, #1348]
 521:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1391              		.loc 1 521 0
 1392 023e 2D48     		ldr	r0, .L54+8
 1393 0240 FFF7FEFF 		bl	strlen
 1394 0244 0346     		mov	r3, r0
 1395 0246 1A46     		mov	r2, r3
 1396 0248 4549     		ldr	r1, .L54+116
 1397 024a 0020     		movs	r0, #0
 1398 024c FFF7FEFF 		bl	printNotif
 522:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1399              		.loc 1 522 0
 1400 0250 97F94435 		ldrsb	r3, [r7, #1348]
 1401 0254 1A46     		mov	r2, r3
 1402 0256 4349     		ldr	r1, .L54+120
 1403 0258 0020     		movs	r0, #0
 1404 025a FFF7FEFF 		bl	printNotif
 1405              	.LBB5:
 523:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 524:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1406              		.loc 1 524 0
 1407 025e 0023     		movs	r3, #0
 1408 0260 87F84B35 		strb	r3, [r7, #1355]
 1409 0264 9AE0     		b	.L47
 1410              	.L50:
 1411              	.LBB6:
 525:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 526:notoriOS.c    ****             char http_chunk[1001];
 527:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 528:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 529:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1412              		.loc 1 529 0
 1413 0266 4FF47A72 		mov	r2, #1000
 1414 026a 3F49     		ldr	r1, .L54+124
 1415 026c 3F48     		ldr	r0, .L54+128
 1416 026e FFF7FEFF 		bl	at_write_command
 1417 0272 0346     		mov	r3, r0
 1418 0274 87F84535 		strb	r3, [r7, #1349]
 530:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 531:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1419              		.loc 1 531 0
 1420 0278 07F1CC00 		add	r0, r7, #204
 1421 027c D7F84C35 		ldr	r3, [r7, #1356]
 1422 0280 334A     		ldr	r2, .L54+100
 1423 0282 4FF4FA71 		mov	r1, #500
 1424 0286 FFF7FEFF 		bl	snprintf
 532:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 533:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1425              		.loc 1 533 0
 1426 028a 07F1CC03 		add	r3, r7, #204
 1427 028e 1846     		mov	r0, r3
 1428 0290 FFF7FEFF 		bl	strlen
 1429 0294 0346     		mov	r3, r0
 1430 0296 1A46     		mov	r2, r3
 1431 0298 07F1CC03 		add	r3, r7, #204
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 37


 1432 029c 1344     		add	r3, r3, r2
 1433 029e 3449     		ldr	r1, .L54+132
 1434 02a0 1A46     		mov	r2, r3
 1435 02a2 0B46     		mov	r3, r1
 1436 02a4 1B88     		ldrh	r3, [r3]	@ unaligned
 1437 02a6 1380     		strh	r3, [r2]	@ unaligned
 534:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1438              		.loc 1 534 0
 1439 02a8 97F94B25 		ldrsb	r2, [r7, #1355]
 1440 02ac 07F1CC03 		add	r3, r7, #204
 1441 02b0 3049     		ldr	r1, .L54+136
 1442 02b2 0020     		movs	r0, #0
 1443 02b4 FFF7FEFF 		bl	printNotif
 535:notoriOS.c    ****             // Send data to server
 536:notoriOS.c    ****             if ((packet+1) != packets){
 1444              		.loc 1 536 0
 1445 02b8 97F94B35 		ldrsb	r3, [r7, #1355]
 1446 02bc 5A1C     		adds	r2, r3, #1
 1447 02be 97F94435 		ldrsb	r3, [r7, #1348]
 1448 02c2 9A42     		cmp	r2, r3
 1449 02c4 58D0     		beq	.L48
 537:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1450              		.loc 1 537 0
 1451 02c6 07F1CC03 		add	r3, r7, #204
 1452 02ca 41F28832 		movw	r2, #5000
 1453 02ce 2149     		ldr	r1, .L54+104
 1454 02d0 1846     		mov	r0, r3
 1455 02d2 FFF7FEFF 		bl	at_write_command
 1456 02d6 0346     		mov	r3, r0
 1457 02d8 87F84535 		strb	r3, [r7, #1349]
 538:notoriOS.c    ****                 // Move the pointer forward 
 539:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1458              		.loc 1 539 0
 1459 02dc D7F84C35 		ldr	r3, [r7, #1356]
 1460 02e0 03F2F313 		addw	r3, r3, #499
 1461 02e4 C7F84C35 		str	r3, [r7, #1356]
 1462 02e8 51E0     		b	.L49
 1463              	.L55:
 1464 02ea 00BF     		.align	2
 1465              	.L54:
 1466 02ec 00000000 		.word	try_counter
 1467 02f0 B4000000 		.word	.LC5
 1468 02f4 00000000 		.word	http_request
 1469 02f8 00000000 		.word	http_body
 1470 02fc 00000000 		.word	http_route
 1471 0300 00000000 		.word	modem_stats
 1472 0304 C4000000 		.word	.LC6
 1473 0308 C8000000 		.word	.LC7
 1474 030c D0000000 		.word	.LC8
 1475 0310 D8000000 		.word	.LC9
 1476 0314 00000000 		.word	buffer_overflow
 1477 0318 E4000000 		.word	.LC10
 1478 031c F4000000 		.word	.LC11
 1479 0320 08010000 		.word	.LC12
 1480 0324 1C010000 		.word	.LC13
 1481 0328 28000000 		.word	modem_info+40
 1482 032c 48010000 		.word	.LC14
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 38


 1483 0330 58010000 		.word	.LC15
 1484 0334 00000000 		.word	system_settings
 1485 0338 68010000 		.word	.LC16
 1486 033c 6C010000 		.word	.LC17
 1487 0340 70010000 		.word	.LC18
 1488 0344 78010000 		.word	.LC19
 1489 0348 80010000 		.word	.LC20
 1490 034c 98010000 		.word	.LC21
 1491 0350 B4010000 		.word	.LC22
 1492 0354 B8010000 		.word	.LC23
 1493 0358 D34D6210 		.word	274877907
 1494 035c 00407F40 		.word	1082081280
 1495 0360 BC010000 		.word	.LC24
 1496 0364 D4010000 		.word	.LC25
 1497 0368 E8010000 		.word	.LC26
 1498 036c EC010000 		.word	.LC27
 1499 0370 FC010000 		.word	.LC28
 1500 0374 00020000 		.word	.LC29
 1501              	.L48:
 540:notoriOS.c    ****             }else{
 541:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
 1502              		.loc 1 541 0
 1503 0378 07F1CC03 		add	r3, r7, #204
 1504 037c 41F28832 		movw	r2, #5000
 1505 0380 2E49     		ldr	r1, .L56
 1506 0382 1846     		mov	r0, r3
 1507 0384 FFF7FEFF 		bl	at_write_command
 1508 0388 0346     		mov	r3, r0
 1509 038a 87F84535 		strb	r3, [r7, #1349]
 1510              	.L49:
 1511              	.LBE6:
 524:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1512              		.loc 1 524 0 discriminator 2
 1513 038e 97F94B35 		ldrsb	r3, [r7, #1355]
 1514 0392 DBB2     		uxtb	r3, r3
 1515 0394 0133     		adds	r3, r3, #1
 1516 0396 DBB2     		uxtb	r3, r3
 1517 0398 87F84B35 		strb	r3, [r7, #1355]
 1518              	.L47:
 524:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1519              		.loc 1 524 0 is_stmt 0 discriminator 1
 1520 039c 97F94B25 		ldrsb	r2, [r7, #1355]
 1521 03a0 97F94435 		ldrsb	r3, [r7, #1348]
 1522 03a4 9A42     		cmp	r2, r3
 1523 03a6 FFF65EAF 		blt	.L50
 1524              	.LBE5:
 542:notoriOS.c    ****             }
 543:notoriOS.c    ****             
 544:notoriOS.c    ****         }
 545:notoriOS.c    ****         
 546:notoriOS.c    ****         // Read received buffer
 547:notoriOS.c    ****         // A good write will return code "OS-OK"
 548:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 549:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 550:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1525              		.loc 1 550 0 is_stmt 1
 1526 03aa 41F28832 		movw	r2, #5000
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 39


 1527 03ae 2449     		ldr	r1, .L56+4
 1528 03b0 2448     		ldr	r0, .L56+8
 1529 03b2 FFF7FEFF 		bl	at_write_command
 1530 03b6 0346     		mov	r3, r0
 1531 03b8 87F84535 		strb	r3, [r7, #1349]
 551:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 552:notoriOS.c    ****     
 553:notoriOS.c    ****   
 554:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 555:notoriOS.c    ****         if(status == 1u){
 1532              		.loc 1 555 0
 1533 03bc 97F84535 		ldrb	r3, [r7, #1349]	@ zero_extendqisi2
 1534 03c0 012B     		cmp	r3, #1
 1535 03c2 1DD1     		bne	.L51
 1536              	.LBB7:
 556:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1537              		.loc 1 556 0
 1538 03c4 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 557:notoriOS.c    ****             Clear_Data_Stack();
 1539              		.loc 1 557 0
 1540 03c8 FFF7FEFF 		bl	Clear_Data_Stack
 558:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1541              		.loc 1 558 0
 1542 03cc FFF7FEFF 		bl	getTimeStamp
 1543 03d0 0246     		mov	r2, r0
 1544 03d2 1D4B     		ldr	r3, .L56+12
 1545 03d4 1B68     		ldr	r3, [r3]
 1546 03d6 D31A     		subs	r3, r2, r3
 1547 03d8 C7F84035 		str	r3, [r7, #1344]
 559:notoriOS.c    ****             char s_send_time[10];
 560:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1548              		.loc 1 560 0
 1549 03dc 07F59760 		add	r0, r7, #1208
 1550 03e0 D7F84035 		ldr	r3, [r7, #1344]
 1551 03e4 194A     		ldr	r2, .L56+16
 1552 03e6 0A21     		movs	r1, #10
 1553 03e8 FFF7FEFF 		bl	snprintf
 561:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1554              		.loc 1 561 0
 1555 03ec FFF7FEFF 		bl	getTimeStamp
 1556 03f0 0246     		mov	r2, r0
 1557 03f2 07F59763 		add	r3, r7, #1208
 1558 03f6 1946     		mov	r1, r3
 1559 03f8 1548     		ldr	r0, .L56+20
 1560 03fa FFF7FEFF 		bl	pushData
 1561              	.LBE7:
 1562 03fe 03E0     		b	.L52
 1563              	.L51:
 562:notoriOS.c    ****         }else{
 563:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1564              		.loc 1 563 0
 1565 0400 1449     		ldr	r1, .L56+24
 1566 0402 0220     		movs	r0, #2
 1567 0404 FFF7FEFF 		bl	printNotif
 1568              	.L52:
 564:notoriOS.c    ****         }
 565:notoriOS.c    ****          
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 40


 566:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 567:notoriOS.c    ****         long network_time = modem_get_network_time();
 1569              		.loc 1 567 0
 1570 0408 FFF7FEFF 		bl	modem_get_network_time
 1571 040c C7F83C05 		str	r0, [r7, #1340]
 568:notoriOS.c    ****         if(network_time != 0){
 1572              		.loc 1 568 0
 1573 0410 D7F83C35 		ldr	r3, [r7, #1340]
 1574 0414 002B     		cmp	r3, #0
 1575 0416 03D0     		beq	.L53
 569:notoriOS.c    ****            setTime(network_time);
 1576              		.loc 1 569 0
 1577 0418 D7F83C05 		ldr	r0, [r7, #1340]
 1578 041c FFF7FEFF 		bl	setTime
 1579              	.L53:
 570:notoriOS.c    ****         }
 571:notoriOS.c    ****         
 572:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 573:notoriOS.c    ****         // If not -- keep the statck and try next time
 574:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 575:notoriOS.c    ****         modem_power_down();
 1580              		.loc 1 575 0
 1581 0420 FFF7FEFF 		bl	modem_power_down
 576:notoriOS.c    ****         
 577:notoriOS.c    ****         try_counter = 0u;
 1582              		.loc 1 577 0
 1583 0424 0C4B     		ldr	r3, .L56+28
 1584 0426 0022     		movs	r2, #0
 1585 0428 1A70     		strb	r2, [r3]
 578:notoriOS.c    ****         return 0u;
 1586              		.loc 1 578 0
 1587 042a 0023     		movs	r3, #0
 1588 042c 00E0     		b	.L41
 1589              	.L44:
 1590              	.LBE2:
 579:notoriOS.c    ****     }
 580:notoriOS.c    ****       
 581:notoriOS.c    ****       return 1u; // Not done yet
 1591              		.loc 1 581 0
 1592 042e 0123     		movs	r3, #1
 1593              	.L41:
 582:notoriOS.c    **** }
 1594              		.loc 1 582 0 discriminator 1
 1595 0430 1846     		mov	r0, r3
 1596 0432 07F25457 		addw	r7, r7, #1364
 1597              		.cfi_def_cfa_offset 12
 1598 0436 BD46     		mov	sp, r7
 1599              		.cfi_def_cfa_register 13
 1600              		@ sp needed
 1601 0438 90BD     		pop	{r4, r7, pc}
 1602              	.L57:
 1603 043a 00BF     		.align	2
 1604              	.L56:
 1605 043c 10020000 		.word	.LC30
 1606 0440 18020000 		.word	.LC31
 1607 0444 20020000 		.word	.LC32
 1608 0448 00000000 		.word	modem_start_time_stamp
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 41


 1609 044c C4000000 		.word	.LC6
 1610 0450 34020000 		.word	.LC33
 1611 0454 44020000 		.word	.LC34
 1612 0458 00000000 		.word	try_counter
 1613              		.cfi_endproc
 1614              	.LFE74:
 1615              		.size	syncData, .-syncData
 1616              		.section	.text.configureRemoteParams,"ax",%progbits
 1617              		.align	2
 1618              		.global	configureRemoteParams
 1619              		.thumb
 1620              		.thumb_func
 1621              		.type	configureRemoteParams, %function
 1622              	configureRemoteParams:
 1623              	.LFB75:
 583:notoriOS.c    **** 
 584:notoriOS.c    **** // ==============================================
 585:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 586:notoriOS.c    **** // Returns 0 when done
 587:notoriOS.c    **** // ==============================================
 588:notoriOS.c    **** uint8 configureRemoteParams(){
 1624              		.loc 1 588 0
 1625              		.cfi_startproc
 1626              		@ args = 0, pretend = 0, frame = 8
 1627              		@ frame_needed = 1, uses_anonymous_args = 0
 1628 0000 80B5     		push	{r7, lr}
 1629              		.cfi_def_cfa_offset 8
 1630              		.cfi_offset 7, -8
 1631              		.cfi_offset 14, -4
 1632 0002 82B0     		sub	sp, sp, #8
 1633              		.cfi_def_cfa_offset 16
 1634 0004 00AF     		add	r7, sp, #0
 1635              		.cfi_def_cfa_register 7
 589:notoriOS.c    ****     
 590:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1636              		.loc 1 590 0
 1637 0006 FFF7FEFF 		bl	modem_get_state
 1638 000a 0346     		mov	r3, r0
 1639 000c 002B     		cmp	r3, #0
 1640 000e 02D1     		bne	.L59
 591:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 592:notoriOS.c    ****         modem_power_up();
 1641              		.loc 1 592 0
 1642 0010 FFF7FEFF 		bl	modem_power_up
 1643 0014 11E0     		b	.L60
 1644              	.L59:
 593:notoriOS.c    ****             
 594:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1645              		.loc 1 594 0
 1646 0016 FFF7FEFF 		bl	modem_get_state
 1647 001a 0346     		mov	r3, r0
 1648 001c 042B     		cmp	r3, #4
 1649 001e 0CD1     		bne	.L60
 1650              	.LBB8:
 595:notoriOS.c    ****         
 596:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 597:notoriOS.c    ****         
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 42


 598:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 599:notoriOS.c    ****         long network_time = modem_get_network_time();
 1651              		.loc 1 599 0
 1652 0020 FFF7FEFF 		bl	modem_get_network_time
 1653 0024 7860     		str	r0, [r7, #4]
 600:notoriOS.c    ****         if(network_time != 0){
 1654              		.loc 1 600 0
 1655 0026 7B68     		ldr	r3, [r7, #4]
 1656 0028 002B     		cmp	r3, #0
 1657 002a 02D0     		beq	.L61
 601:notoriOS.c    ****             setTime(network_time);
 1658              		.loc 1 601 0
 1659 002c 7868     		ldr	r0, [r7, #4]
 1660 002e FFF7FEFF 		bl	setTime
 1661              	.L61:
 602:notoriOS.c    ****         }
 603:notoriOS.c    ****         
 604:notoriOS.c    ****         // Get GPS coordinates
 605:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 606:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 607:notoriOS.c    ****         modem_power_down();
 1662              		.loc 1 607 0
 1663 0032 FFF7FEFF 		bl	modem_power_down
 608:notoriOS.c    ****         return 0u;
 1664              		.loc 1 608 0
 1665 0036 0023     		movs	r3, #0
 1666 0038 00E0     		b	.L62
 1667              	.L60:
 1668              	.LBE8:
 609:notoriOS.c    ****         
 610:notoriOS.c    ****     }
 611:notoriOS.c    ****     
 612:notoriOS.c    ****     return 1u;
 1669              		.loc 1 612 0
 1670 003a 0123     		movs	r3, #1
 1671              	.L62:
 613:notoriOS.c    **** }
 1672              		.loc 1 613 0
 1673 003c 1846     		mov	r0, r3
 1674 003e 0837     		adds	r7, r7, #8
 1675              		.cfi_def_cfa_offset 8
 1676 0040 BD46     		mov	sp, r7
 1677              		.cfi_def_cfa_register 13
 1678              		@ sp needed
 1679 0042 80BD     		pop	{r7, pc}
 1680              		.cfi_endproc
 1681              	.LFE75:
 1682              		.size	configureRemoteParams, .-configureRemoteParams
 1683              		.section	.rodata
 1684 026f 00       		.align	2
 1685              	.LC35:
 1686 0270 256C6400 		.ascii	"%ld\000"
 1687              		.align	2
 1688              	.LC36:
 1689 0274 43757272 		.ascii	"Current_Node_Type\000"
 1689      656E745F 
 1689      4E6F6465 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 43


 1689      5F547970 
 1689      6500
 1690 0286 0000     		.align	2
 1691              	.LC37:
 1692 0288 6D617862 		.ascii	"maxbotix_depth=%s\000"
 1692      6F746978 
 1692      5F646570 
 1692      74683D25 
 1692      7300
 1693 029a 0000     		.align	2
 1694              	.LC38:
 1695 029c 6D617862 		.ascii	"maxbotix_depth\000"
 1695      6F746978 
 1695      5F646570 
 1695      746800
 1696 02ab 00       		.align	2
 1697              	.LC39:
 1698 02ac 612B00   		.ascii	"a+\000"
 1699 02af 00       		.align	2
 1700              	.LC40:
 1701 02b0 206D6178 		.ascii	" maxbotix_depth: \000"
 1701      626F7469 
 1701      785F6465 
 1701      7074683A 
 1701      2000
 1702 02c2 0000     		.align	2
 1703              	.LC41:
 1704 02c4 2000     		.ascii	" \000"
 1705 02c6 0000     		.align	2
 1706              	.LC42:
 1707 02c8 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 1707      64206E6F 
 1707      74206765 
 1707      74207661 
 1707      6C696420 
 1708              		.global	__aeabi_f2d
 1709              		.align	2
 1710              	.LC43:
 1711 02f4 252E3266 		.ascii	"%.2f\000"
 1711      00
 1712 02f9 000000   		.align	2
 1713              	.LC44:
 1714 02fc 765F6261 		.ascii	"v_bat=%s\000"
 1714      743D2573 
 1714      00
 1715 0305 000000   		.align	2
 1716              	.LC45:
 1717 0308 765F6261 		.ascii	"v_bat\000"
 1717      7400
 1718 030e 0000     		.align	2
 1719              	.LC46:
 1720 0310 20766261 		.ascii	" vbat: \000"
 1720      743A2000 
 1721              		.align	2
 1722              	.LC47:
 1723 0318 70726573 		.ascii	"pressure_current=%s\000"
 1723      73757265 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 44


 1723      5F637572 
 1723      72656E74 
 1723      3D257300 
 1724              		.align	2
 1725              	.LC48:
 1726 032c 70726573 		.ascii	"pressure_current\000"
 1726      73757265 
 1726      5F637572 
 1726      72656E74 
 1726      00
 1727 033d 000000   		.align	2
 1728              	.LC49:
 1729 0340 20707265 		.ascii	" pressure_current: \000"
 1729      73737572 
 1729      655F6375 
 1729      7272656E 
 1729      743A2000 
 1730              		.align	2
 1731              	.LC50:
 1732 0354 70726573 		.ascii	"pressure_depth=%s\000"
 1732      73757265 
 1732      5F646570 
 1732      74683D25 
 1732      7300
 1733 0366 0000     		.align	2
 1734              	.LC51:
 1735 0368 70726573 		.ascii	"pressure_depth\000"
 1735      73757265 
 1735      5F646570 
 1735      746800
 1736 0377 00       		.align	2
 1737              	.LC52:
 1738 0378 20707265 		.ascii	" pressure_depth: \000"
 1738      73737572 
 1738      655F6465 
 1738      7074683A 
 1738      2000
 1739 038a 0000     		.align	2
 1740              	.LC53:
 1741 038c 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1741      64206E6F 
 1741      74206765 
 1741      74207661 
 1741      6C696420 
 1742              		.section	.text.makeMeasurements,"ax",%progbits
 1743              		.align	2
 1744              		.global	makeMeasurements
 1745              		.thumb
 1746              		.thumb_func
 1747              		.type	makeMeasurements, %function
 1748              	makeMeasurements:
 1749              	.LFB76:
 614:notoriOS.c    **** 
 615:notoriOS.c    **** 
 616:notoriOS.c    **** // ==============================================
 617:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 618:notoriOS.c    **** // Returns 0 when finished
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 45


 619:notoriOS.c    **** // ==============================================
 620:notoriOS.c    **** uint8 makeMeasurements(){
 1750              		.loc 1 620 0
 1751              		.cfi_startproc
 1752              		@ args = 0, pretend = 0, frame = 128
 1753              		@ frame_needed = 1, uses_anonymous_args = 0
 1754 0000 90B5     		push	{r4, r7, lr}
 1755              		.cfi_def_cfa_offset 12
 1756              		.cfi_offset 4, -12
 1757              		.cfi_offset 7, -8
 1758              		.cfi_offset 14, -4
 1759 0002 A3B0     		sub	sp, sp, #140
 1760              		.cfi_def_cfa_offset 152
 1761 0004 02AF     		add	r7, sp, #8
 1762              		.cfi_def_cfa 7, 144
 621:notoriOS.c    ****     
 622:notoriOS.c    ****     // Get clock time and save to timeStamp
 623:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1763              		.loc 1 623 0
 1764 0006 FFF7FEFF 		bl	getTimeStamp
 1765 000a F867     		str	r0, [r7, #124]
 624:notoriOS.c    ****     char c_timeStamp[32];
 625:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1766              		.loc 1 625 0
 1767 000c 07F15C00 		add	r0, r7, #92
 1768 0010 FB6F     		ldr	r3, [r7, #124]
 1769 0012 8E4A     		ldr	r2, .L72
 1770 0014 2021     		movs	r1, #32
 1771 0016 FFF7FEFF 		bl	snprintf
 626:notoriOS.c    ****     
 627:notoriOS.c    ****     // Holds string for value that will be written 
 628:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 629:notoriOS.c    ****     
 630:notoriOS.c    ****     // who i am determines what I'm going to do 
 631:notoriOS.c    ****     // this is primarily for interpretability on grafana dashboards when developing custom nodes
 632:notoriOS.c    ****     char c_node_type[5];
 633:notoriOS.c    ****     itoa(updatable_parameters.node_type,c_node_type,10);
 1772              		.loc 1 633 0
 1773 001a 8D4B     		ldr	r3, .L72+4
 1774 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1775 001e 1846     		mov	r0, r3
 1776 0020 07F14003 		add	r3, r7, #64
 1777 0024 0A22     		movs	r2, #10
 1778 0026 1946     		mov	r1, r3
 1779 0028 FFF7FEFF 		bl	itoa
 634:notoriOS.c    ****     pushData("Current_Node_Type",c_node_type ,getTimeStamp());
 1780              		.loc 1 634 0
 1781 002c FFF7FEFF 		bl	getTimeStamp
 1782 0030 0246     		mov	r2, r0
 1783 0032 07F14003 		add	r3, r7, #64
 1784 0036 1946     		mov	r1, r3
 1785 0038 8648     		ldr	r0, .L72+8
 1786 003a FFF7FEFF 		bl	pushData
 635:notoriOS.c    ****     
 636:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 637:notoriOS.c    ****     
 638:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 46


 1787              		.loc 1 638 0
 1788 003e 844B     		ldr	r3, .L72+4
 1789 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1790 0042 002B     		cmp	r3, #0
 1791 0044 3BD1     		bne	.L64
 1792              	.LBB9:
 639:notoriOS.c    ****         
 640:notoriOS.c    ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
 641:notoriOS.c    ****         level_sensor_t m_level_sensor;
 642:notoriOS.c    ****         
 643:notoriOS.c    ****         // Take level sensor readings and save them to m_level_sensor
 644:notoriOS.c    ****         m_level_sensor = level_sensor_take_reading();
 1793              		.loc 1 644 0
 1794 0046 07F11003 		add	r3, r7, #16
 1795 004a 1846     		mov	r0, r3
 1796 004c FFF7FEFF 		bl	level_sensor_take_reading
 645:notoriOS.c    ****     
 646:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 647:notoriOS.c    ****         if(m_level_sensor.num_valid_readings > 0){
 1797              		.loc 1 647 0
 1798 0050 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1799 0054 002B     		cmp	r3, #0
 1800 0056 2ED0     		beq	.L65
 648:notoriOS.c    ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 1801              		.loc 1 648 0
 1802 0058 B7F92630 		ldrsh	r3, [r7, #38]
 1803 005c 07F14800 		add	r0, r7, #72
 1804 0060 7D4A     		ldr	r2, .L72+12
 1805 0062 1421     		movs	r1, #20
 1806 0064 FFF7FEFF 		bl	snprintf
 649:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 1807              		.loc 1 649 0
 1808 0068 07F14803 		add	r3, r7, #72
 1809 006c 1A46     		mov	r2, r3
 1810 006e 7B49     		ldr	r1, .L72+16
 1811 0070 0020     		movs	r0, #0
 1812 0072 FFF7FEFF 		bl	printNotif
 650:notoriOS.c    ****             pushData("maxbotix_depth",value,timeStamp);
 1813              		.loc 1 650 0
 1814 0076 07F14803 		add	r3, r7, #72
 1815 007a FA6F     		ldr	r2, [r7, #124]
 1816 007c 1946     		mov	r1, r3
 1817 007e 7848     		ldr	r0, .L72+20
 1818 0080 FFF7FEFF 		bl	pushData
 651:notoriOS.c    ****             
 652:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 653:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1819              		.loc 1 653 0
 1820 0084 07F15C03 		add	r3, r7, #92
 1821 0088 1A46     		mov	r2, r3
 1822 008a 7649     		ldr	r1, .L72+24
 1823 008c 7648     		ldr	r0, .L72+28
 1824 008e FFF7FEFF 		bl	SD_write
 654:notoriOS.c    ****             SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 1825              		.loc 1 654 0
 1826 0092 764A     		ldr	r2, .L72+32
 1827 0094 7349     		ldr	r1, .L72+24
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 47


 1828 0096 7448     		ldr	r0, .L72+28
 1829 0098 FFF7FEFF 		bl	SD_write
 655:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1830              		.loc 1 655 0
 1831 009c 07F14803 		add	r3, r7, #72
 1832 00a0 1A46     		mov	r2, r3
 1833 00a2 7049     		ldr	r1, .L72+24
 1834 00a4 7048     		ldr	r0, .L72+28
 1835 00a6 FFF7FEFF 		bl	SD_write
 656:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1836              		.loc 1 656 0
 1837 00aa 714A     		ldr	r2, .L72+36
 1838 00ac 6D49     		ldr	r1, .L72+24
 1839 00ae 6E48     		ldr	r0, .L72+28
 1840 00b0 FFF7FEFF 		bl	SD_write
 1841 00b4 03E0     		b	.L64
 1842              	.L65:
 657:notoriOS.c    ****         }else{
 658:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 1843              		.loc 1 658 0
 1844 00b6 6F49     		ldr	r1, .L72+40
 1845 00b8 0220     		movs	r0, #2
 1846 00ba FFF7FEFF 		bl	printNotif
 1847              	.L64:
 1848              	.LBE9:
 659:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 660:notoriOS.c    ****         }
 661:notoriOS.c    ****     }
 662:notoriOS.c    ****     
 663:notoriOS.c    ****     
 664:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 665:notoriOS.c    ****     voltage_t m_voltage;
 666:notoriOS.c    ****     
 667:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 668:notoriOS.c    ****     m_voltage = voltage_take_readings();
 1849              		.loc 1 668 0
 1850 00be 07F12C03 		add	r3, r7, #44
 1851 00c2 1846     		mov	r0, r3
 1852 00c4 FFF7FEFF 		bl	voltage_take_readings
 669:notoriOS.c    ****     
 670:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 671:notoriOS.c    ****     if(m_voltage.valid){
 1853              		.loc 1 671 0
 1854 00c8 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 1855 00cc 002B     		cmp	r3, #0
 1856 00ce 00F0B380 		beq	.L67
 672:notoriOS.c    ****         // battery voltage data
 673:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 1857              		.loc 1 673 0
 1858 00d2 FB6A     		ldr	r3, [r7, #44]	@ float
 1859 00d4 1846     		mov	r0, r3
 1860 00d6 FFF7FEFF 		bl	__aeabi_f2d
 1861 00da 0346     		mov	r3, r0
 1862 00dc 0C46     		mov	r4, r1
 1863 00de 07F14800 		add	r0, r7, #72
 1864 00e2 CDE90034 		strd	r3, [sp]
 1865 00e6 644A     		ldr	r2, .L72+44
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 48


 1866 00e8 1421     		movs	r1, #20
 1867 00ea FFF7FEFF 		bl	snprintf
 674:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 1868              		.loc 1 674 0
 1869 00ee 07F14803 		add	r3, r7, #72
 1870 00f2 1A46     		mov	r2, r3
 1871 00f4 6149     		ldr	r1, .L72+48
 1872 00f6 0020     		movs	r0, #0
 1873 00f8 FFF7FEFF 		bl	printNotif
 675:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
 1874              		.loc 1 675 0
 1875 00fc 07F14803 		add	r3, r7, #72
 1876 0100 FA6F     		ldr	r2, [r7, #124]
 1877 0102 1946     		mov	r1, r3
 1878 0104 5E48     		ldr	r0, .L72+52
 1879 0106 FFF7FEFF 		bl	pushData
 676:notoriOS.c    ****         
 677:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 678:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 1880              		.loc 1 678 0
 1881 010a 594A     		ldr	r2, .L72+36
 1882 010c 5549     		ldr	r1, .L72+24
 1883 010e 5648     		ldr	r0, .L72+28
 1884 0110 FFF7FEFF 		bl	SD_write
 679:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 1885              		.loc 1 679 0
 1886 0114 07F15C03 		add	r3, r7, #92
 1887 0118 1A46     		mov	r2, r3
 1888 011a 5249     		ldr	r1, .L72+24
 1889 011c 5248     		ldr	r0, .L72+28
 1890 011e FFF7FEFF 		bl	SD_write
 680:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 1891              		.loc 1 680 0
 1892 0122 584A     		ldr	r2, .L72+56
 1893 0124 4F49     		ldr	r1, .L72+24
 1894 0126 5048     		ldr	r0, .L72+28
 1895 0128 FFF7FEFF 		bl	SD_write
 681:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1896              		.loc 1 681 0
 1897 012c 07F14803 		add	r3, r7, #72
 1898 0130 1A46     		mov	r2, r3
 1899 0132 4C49     		ldr	r1, .L72+24
 1900 0134 4C48     		ldr	r0, .L72+28
 1901 0136 FFF7FEFF 		bl	SD_write
 682:notoriOS.c    ****         
 683:notoriOS.c    ****         // If node type is green infrastructure or custom node, take pressure transducer measuremen
 684:notoriOS.c    ****          
 685:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE || updatable_parameters.
 1902              		.loc 1 685 0
 1903 013a 454B     		ldr	r3, .L72+4
 1904 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1905 013e 012B     		cmp	r3, #1
 1906 0140 03D0     		beq	.L68
 1907              		.loc 1 685 0 is_stmt 0 discriminator 1
 1908 0142 434B     		ldr	r3, .L72+4
 1909 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1910 0146 042B     		cmp	r3, #4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 49


 1911 0148 7AD1     		bne	.L70
 1912              	.L68:
 1913              	.LBB10:
 686:notoriOS.c    ****             
 687:notoriOS.c    ****             // pressure transducer voltage (V) data
 688:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 689:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 690:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 691:notoriOS.c    ****             
 692:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 693:notoriOS.c    ****             pressure_t m_pressure;
 694:notoriOS.c    ****             
 695:notoriOS.c    ****             // Make pressure transducer calculators for current and depth
 696:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 1914              		.loc 1 696 0 is_stmt 1
 1915 014a 3C46     		mov	r4, r7
 1916 014c 6A46     		mov	r2, sp
 1917 014e 07F13803 		add	r3, r7, #56
 1918 0152 93E80300 		ldmia	r3, {r0, r1}
 1919 0156 82E80300 		stmia	r2, {r0, r1}
 1920 015a 07F12C03 		add	r3, r7, #44
 1921 015e 0ECB     		ldmia	r3, {r1, r2, r3}
 1922 0160 2046     		mov	r0, r4
 1923 0162 FFF7FEFF 		bl	pressure_calculations
 697:notoriOS.c    ****             
 698:notoriOS.c    ****             // pressure transducer current (mA) data
 699:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 1924              		.loc 1 699 0
 1925 0166 BB68     		ldr	r3, [r7, #8]	@ float
 1926 0168 1846     		mov	r0, r3
 1927 016a FFF7FEFF 		bl	__aeabi_f2d
 1928 016e 0346     		mov	r3, r0
 1929 0170 0C46     		mov	r4, r1
 1930 0172 07F14800 		add	r0, r7, #72
 1931 0176 CDE90034 		strd	r3, [sp]
 1932 017a 3F4A     		ldr	r2, .L72+44
 1933 017c 1421     		movs	r1, #20
 1934 017e FFF7FEFF 		bl	snprintf
 700:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 1935              		.loc 1 700 0
 1936 0182 07F14803 		add	r3, r7, #72
 1937 0186 1A46     		mov	r2, r3
 1938 0188 3F49     		ldr	r1, .L72+60
 1939 018a 0020     		movs	r0, #0
 1940 018c FFF7FEFF 		bl	printNotif
 701:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 1941              		.loc 1 701 0
 1942 0190 07F14803 		add	r3, r7, #72
 1943 0194 FA6F     		ldr	r2, [r7, #124]
 1944 0196 1946     		mov	r1, r3
 1945 0198 3C48     		ldr	r0, .L72+64
 1946 019a FFF7FEFF 		bl	pushData
 702:notoriOS.c    ****             
 703:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 704:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1947              		.loc 1 704 0
 1948 019e 344A     		ldr	r2, .L72+36
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 50


 1949 01a0 3049     		ldr	r1, .L72+24
 1950 01a2 3148     		ldr	r0, .L72+28
 1951 01a4 FFF7FEFF 		bl	SD_write
 705:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1952              		.loc 1 705 0
 1953 01a8 07F15C03 		add	r3, r7, #92
 1954 01ac 1A46     		mov	r2, r3
 1955 01ae 2D49     		ldr	r1, .L72+24
 1956 01b0 2D48     		ldr	r0, .L72+28
 1957 01b2 FFF7FEFF 		bl	SD_write
 706:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 1958              		.loc 1 706 0
 1959 01b6 364A     		ldr	r2, .L72+68
 1960 01b8 2A49     		ldr	r1, .L72+24
 1961 01ba 2B48     		ldr	r0, .L72+28
 1962 01bc FFF7FEFF 		bl	SD_write
 707:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1963              		.loc 1 707 0
 1964 01c0 07F14803 		add	r3, r7, #72
 1965 01c4 1A46     		mov	r2, r3
 1966 01c6 2749     		ldr	r1, .L72+24
 1967 01c8 2748     		ldr	r0, .L72+28
 1968 01ca FFF7FEFF 		bl	SD_write
 708:notoriOS.c    ****             
 709:notoriOS.c    ****             // pressure transducer depth (ft) data
 710:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 1969              		.loc 1 710 0
 1970 01ce FB68     		ldr	r3, [r7, #12]	@ float
 1971 01d0 1846     		mov	r0, r3
 1972 01d2 FFF7FEFF 		bl	__aeabi_f2d
 1973 01d6 0346     		mov	r3, r0
 1974 01d8 0C46     		mov	r4, r1
 1975 01da 07F14800 		add	r0, r7, #72
 1976 01de CDE90034 		strd	r3, [sp]
 1977 01e2 254A     		ldr	r2, .L72+44
 1978 01e4 1421     		movs	r1, #20
 1979 01e6 FFF7FEFF 		bl	snprintf
 711:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 1980              		.loc 1 711 0
 1981 01ea 07F14803 		add	r3, r7, #72
 1982 01ee 1A46     		mov	r2, r3
 1983 01f0 2849     		ldr	r1, .L72+72
 1984 01f2 0020     		movs	r0, #0
 1985 01f4 FFF7FEFF 		bl	printNotif
 712:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 1986              		.loc 1 712 0
 1987 01f8 07F14803 		add	r3, r7, #72
 1988 01fc FA6F     		ldr	r2, [r7, #124]
 1989 01fe 1946     		mov	r1, r3
 1990 0200 2548     		ldr	r0, .L72+76
 1991 0202 FFF7FEFF 		bl	pushData
 713:notoriOS.c    ****             
 714:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 715:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1992              		.loc 1 715 0
 1993 0206 1A4A     		ldr	r2, .L72+36
 1994 0208 1649     		ldr	r1, .L72+24
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 51


 1995 020a 1748     		ldr	r0, .L72+28
 1996 020c FFF7FEFF 		bl	SD_write
 716:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1997              		.loc 1 716 0
 1998 0210 07F15C03 		add	r3, r7, #92
 1999 0214 1A46     		mov	r2, r3
 2000 0216 1349     		ldr	r1, .L72+24
 2001 0218 1348     		ldr	r0, .L72+28
 2002 021a FFF7FEFF 		bl	SD_write
 717:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
 2003              		.loc 1 717 0
 2004 021e 1F4A     		ldr	r2, .L72+80
 2005 0220 1049     		ldr	r1, .L72+24
 2006 0222 1148     		ldr	r0, .L72+28
 2007 0224 FFF7FEFF 		bl	SD_write
 718:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 2008              		.loc 1 718 0
 2009 0228 07F14803 		add	r3, r7, #72
 2010 022c 1A46     		mov	r2, r3
 2011 022e 0D49     		ldr	r1, .L72+24
 2012 0230 0D48     		ldr	r0, .L72+28
 2013 0232 FFF7FEFF 		bl	SD_write
 2014 0236 03E0     		b	.L70
 2015              	.L67:
 2016              	.LBE10:
 719:notoriOS.c    ****         }    
 720:notoriOS.c    ****     }else{
 721:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 2017              		.loc 1 721 0
 2018 0238 1949     		ldr	r1, .L72+84
 2019 023a 0220     		movs	r0, #2
 2020 023c FFF7FEFF 		bl	printNotif
 2021              	.L70:
 722:notoriOS.c    ****         
 723:notoriOS.c    ****     }
 724:notoriOS.c    ****         
 725:notoriOS.c    ****     
 726:notoriOS.c    ****     return 0u;
 2022              		.loc 1 726 0
 2023 0240 0023     		movs	r3, #0
 727:notoriOS.c    **** }
 2024              		.loc 1 727 0
 2025 0242 1846     		mov	r0, r3
 2026 0244 8437     		adds	r7, r7, #132
 2027              		.cfi_def_cfa_offset 12
 2028 0246 BD46     		mov	sp, r7
 2029              		.cfi_def_cfa_register 13
 2030              		@ sp needed
 2031 0248 90BD     		pop	{r4, r7, pc}
 2032              	.L73:
 2033 024a 00BF     		.align	2
 2034              	.L72:
 2035 024c 70020000 		.word	.LC35
 2036 0250 00000000 		.word	updatable_parameters
 2037 0254 74020000 		.word	.LC36
 2038 0258 C4000000 		.word	.LC6
 2039 025c 88020000 		.word	.LC37
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 52


 2040 0260 9C020000 		.word	.LC38
 2041 0264 AC020000 		.word	.LC39
 2042 0268 00000000 		.word	Data_fileName
 2043 026c B0020000 		.word	.LC40
 2044 0270 C4020000 		.word	.LC41
 2045 0274 C8020000 		.word	.LC42
 2046 0278 F4020000 		.word	.LC43
 2047 027c FC020000 		.word	.LC44
 2048 0280 08030000 		.word	.LC45
 2049 0284 10030000 		.word	.LC46
 2050 0288 18030000 		.word	.LC47
 2051 028c 2C030000 		.word	.LC48
 2052 0290 40030000 		.word	.LC49
 2053 0294 54030000 		.word	.LC50
 2054 0298 68030000 		.word	.LC51
 2055 029c 78030000 		.word	.LC52
 2056 02a0 8C030000 		.word	.LC53
 2057              		.cfi_endproc
 2058              	.LFE76:
 2059              		.size	makeMeasurements, .-makeMeasurements
 2060              		.section	.rodata
 2061 03b3 00       		.align	2
 2062              	.LC54:
 2063 03b4 4572726F 		.ascii	"Error setting system time.\000"
 2063      72207365 
 2063      7474696E 
 2063      67207379 
 2063      7374656D 
 2064              		.section	.text.setTime,"ax",%progbits
 2065              		.align	2
 2066              		.global	setTime
 2067              		.thumb
 2068              		.thumb_func
 2069              		.type	setTime, %function
 2070              	setTime:
 2071              	.LFB77:
 728:notoriOS.c    **** 
 729:notoriOS.c    **** // ==============================================
 730:notoriOS.c    **** // Set the system time
 731:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 732:notoriOS.c    **** // ==============================================
 733:notoriOS.c    **** uint8 setTime(long timeStamp){
 2072              		.loc 1 733 0
 2073              		.cfi_startproc
 2074              		@ args = 0, pretend = 0, frame = 24
 2075              		@ frame_needed = 1, uses_anonymous_args = 0
 2076 0000 80B5     		push	{r7, lr}
 2077              		.cfi_def_cfa_offset 8
 2078              		.cfi_offset 7, -8
 2079              		.cfi_offset 14, -4
 2080 0002 86B0     		sub	sp, sp, #24
 2081              		.cfi_def_cfa_offset 32
 2082 0004 00AF     		add	r7, sp, #0
 2083              		.cfi_def_cfa_register 7
 2084 0006 7860     		str	r0, [r7, #4]
 734:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 735:notoriOS.c    ****     if(timeStamp <=0){
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 53


 2085              		.loc 1 735 0
 2086 0008 7B68     		ldr	r3, [r7, #4]
 2087 000a 002B     		cmp	r3, #0
 2088 000c 05DC     		bgt	.L75
 736:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 2089              		.loc 1 736 0
 2090 000e 1849     		ldr	r1, .L77
 2091 0010 0220     		movs	r0, #2
 2092 0012 FFF7FEFF 		bl	printNotif
 737:notoriOS.c    ****         return 0;  
 2093              		.loc 1 737 0
 2094 0016 0023     		movs	r3, #0
 2095 0018 25E0     		b	.L76
 2096              	.L75:
 738:notoriOS.c    ****     }
 739:notoriOS.c    ****     // Create a new pointer t of data structure tm
 740:notoriOS.c    ****     struct tm * t;
 741:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 742:notoriOS.c    ****     t = gmtime(&timeStamp);
 2097              		.loc 1 742 0
 2098 001a 3B1D     		adds	r3, r7, #4
 2099 001c 1846     		mov	r0, r3
 2100 001e FFF7FEFF 		bl	gmtime
 2101 0022 7861     		str	r0, [r7, #20]
 743:notoriOS.c    ****     
 744:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 745:notoriOS.c    ****     RTC_TIME_DATE localTime;
 746:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 2102              		.loc 1 746 0
 2103 0024 7B69     		ldr	r3, [r7, #20]
 2104 0026 1B68     		ldr	r3, [r3]
 2105 0028 DBB2     		uxtb	r3, r3
 2106 002a 3B72     		strb	r3, [r7, #8]
 747:notoriOS.c    ****     localTime.Min = t->tm_min;
 2107              		.loc 1 747 0
 2108 002c 7B69     		ldr	r3, [r7, #20]
 2109 002e 5B68     		ldr	r3, [r3, #4]
 2110 0030 DBB2     		uxtb	r3, r3
 2111 0032 7B72     		strb	r3, [r7, #9]
 748:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 2112              		.loc 1 748 0
 2113 0034 7B69     		ldr	r3, [r7, #20]
 2114 0036 9B68     		ldr	r3, [r3, #8]
 2115 0038 DBB2     		uxtb	r3, r3
 2116 003a BB72     		strb	r3, [r7, #10]
 749:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 2117              		.loc 1 749 0
 2118 003c 7B69     		ldr	r3, [r7, #20]
 2119 003e 5B69     		ldr	r3, [r3, #20]
 2120 0040 9BB2     		uxth	r3, r3
 2121 0042 03F26C73 		addw	r3, r3, #1900
 2122 0046 9BB2     		uxth	r3, r3
 2123 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 750:notoriOS.c    ****     localTime.Month = t->tm_mon;
 2124              		.loc 1 750 0
 2125 004a 7B69     		ldr	r3, [r7, #20]
 2126 004c 1B69     		ldr	r3, [r3, #16]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 54


 2127 004e DBB2     		uxtb	r3, r3
 2128 0050 3B74     		strb	r3, [r7, #16]
 751:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 2129              		.loc 1 751 0
 2130 0052 7B69     		ldr	r3, [r7, #20]
 2131 0054 DB68     		ldr	r3, [r3, #12]
 2132 0056 DBB2     		uxtb	r3, r3
 2133 0058 3B73     		strb	r3, [r7, #12]
 752:notoriOS.c    **** 
 753:notoriOS.c    ****     // Writes time and date values as current time and date.
 754:notoriOS.c    ****     RTC_WriteTime(&localTime);
 2134              		.loc 1 754 0
 2135 005a 07F10803 		add	r3, r7, #8
 2136 005e 1846     		mov	r0, r3
 2137 0060 FFF7FEFF 		bl	RTC_WriteTime
 755:notoriOS.c    ****     
 756:notoriOS.c    ****     // Return 1 when the system time was set properly.
 757:notoriOS.c    ****     return 1;
 2138              		.loc 1 757 0
 2139 0064 0123     		movs	r3, #1
 2140              	.L76:
 758:notoriOS.c    **** }
 2141              		.loc 1 758 0
 2142 0066 1846     		mov	r0, r3
 2143 0068 1837     		adds	r7, r7, #24
 2144              		.cfi_def_cfa_offset 8
 2145 006a BD46     		mov	sp, r7
 2146              		.cfi_def_cfa_register 13
 2147              		@ sp needed
 2148 006c 80BD     		pop	{r7, pc}
 2149              	.L78:
 2150 006e 00BF     		.align	2
 2151              	.L77:
 2152 0070 B4030000 		.word	.LC54
 2153              		.cfi_endproc
 2154              	.LFE77:
 2155              		.size	setTime, .-setTime
 2156              		.section	.rodata
 2157 03cf 00       		.align	2
 2158              	.LC55:
 2159 03d0 75706772 		.ascii	"upgrade.hex\000"
 2159      6164652E 
 2159      68657800 
 2160              		.section	.text.upgraded,"ax",%progbits
 2161              		.align	2
 2162              		.global	upgraded
 2163              		.thumb
 2164              		.thumb_func
 2165              		.type	upgraded, %function
 2166              	upgraded:
 2167              	.LFB78:
 759:notoriOS.c    **** 
 760:notoriOS.c    **** //downloads and stores files on SD card
 761:notoriOS.c    **** 
 762:notoriOS.c    **** 
 763:notoriOS.c    **** 
 764:notoriOS.c    **** // ==============================================
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 55


 765:notoriOS.c    **** // Will they love it, will they hate it
 766:notoriOS.c    **** // Never fade it, I evade it
 767:notoriOS.c    **** // Cause I never really want to complicate it
 768:notoriOS.c    **** //      - Logic, Upgraded (2015)
 769:notoriOS.c    **** //
 770:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 771:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 772:notoriOS.c    **** // ==============================================
 773:notoriOS.c    **** 
 774:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 2168              		.loc 1 774 0
 2169              		.cfi_startproc
 2170              		@ args = 0, pretend = 0, frame = 232
 2171              		@ frame_needed = 1, uses_anonymous_args = 0
 2172 0000 80B5     		push	{r7, lr}
 2173              		.cfi_def_cfa_offset 8
 2174              		.cfi_offset 7, -8
 2175              		.cfi_offset 14, -4
 2176 0002 C0B0     		sub	sp, sp, #256
 2177              		.cfi_def_cfa_offset 264
 2178 0004 06AF     		add	r7, sp, #24
 2179              		.cfi_def_cfa 7, 240
 2180 0006 F860     		str	r0, [r7, #12]
 2181 0008 B960     		str	r1, [r7, #8]
 2182 000a 7A60     		str	r2, [r7, #4]
 775:notoriOS.c    ****     
 776:notoriOS.c    ****     uint8 upgrade_status = 0;
 2183              		.loc 1 776 0
 2184 000c 0023     		movs	r3, #0
 2185 000e 87F8E730 		strb	r3, [r7, #231]
 777:notoriOS.c    ****     
 778:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 779:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 2186              		.loc 1 779 0
 2187 0012 384B     		ldr	r3, .L83
 2188 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2189 0016 042B     		cmp	r3, #4
 2190 0018 02D0     		beq	.L80
 780:notoriOS.c    ****         return upgrade_status;//where valid = 0
 2191              		.loc 1 780 0
 2192 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2193 001e 65E0     		b	.L82
 2194              	.L80:
 781:notoriOS.c    ****     }
 782:notoriOS.c    ****     
 783:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 2195              		.loc 1 783 0
 2196 0020 354A     		ldr	r2, .L83+4
 2197 0022 07F1D803 		add	r3, r7, #216
 2198 0026 07CA     		ldmia	r2, {r0, r1, r2}
 2199 0028 83E80700 		stmia	r3, {r0, r1, r2}
 784:notoriOS.c    ****     //delete file, if one exisits already
 785:notoriOS.c    ****     SD_rmfile(fileName);
 2200              		.loc 1 785 0
 2201 002c 07F1D803 		add	r3, r7, #216
 2202 0030 1846     		mov	r0, r3
 2203 0032 FFF7FEFF 		bl	SD_rmfile
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 56


 786:notoriOS.c    ****     
 787:notoriOS.c    ****     // Create http request
 788:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 2204              		.loc 1 788 0
 2205 0036 314B     		ldr	r3, .L83+8
 2206 0038 0593     		str	r3, [sp, #20]
 2207 003a 0023     		movs	r3, #0
 2208 003c 0493     		str	r3, [sp, #16]
 2209 003e 304B     		ldr	r3, .L83+12
 2210 0040 0393     		str	r3, [sp, #12]
 2211 0042 304B     		ldr	r3, .L83+16
 2212 0044 0293     		str	r3, [sp, #8]
 2213 0046 304B     		ldr	r3, .L83+20
 2214 0048 0193     		str	r3, [sp, #4]
 2215 004a BB68     		ldr	r3, [r7, #8]
 2216 004c 0093     		str	r3, [sp]
 2217 004e 7B68     		ldr	r3, [r7, #4]
 2218 0050 FA68     		ldr	r2, [r7, #12]
 2219 0052 2E49     		ldr	r1, .L83+24
 2220 0054 2E48     		ldr	r0, .L83+28
 2221 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 789:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 2222              		.loc 1 789 0
 2223 005a 2D4A     		ldr	r2, .L83+28
 2224 005c 2D49     		ldr	r1, .L83+32
 2225 005e 0020     		movs	r0, #0
 2226 0060 FFF7FEFF 		bl	printNotif
 790:notoriOS.c    ****     // Create array portConfig of size 200 characters
 791:notoriOS.c    ****     char portConfig[200];
 792:notoriOS.c    ****     // Print port configurations
 793:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 2227              		.loc 1 793 0
 2228 0064 07F11000 		add	r0, r7, #16
 2229 0068 FB68     		ldr	r3, [r7, #12]
 2230 006a 0093     		str	r3, [sp]
 2231 006c BB68     		ldr	r3, [r7, #8]
 2232 006e 2A4A     		ldr	r2, .L83+36
 2233 0070 C821     		movs	r1, #200
 2234 0072 FFF7FEFF 		bl	snprintf
 794:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 2235              		.loc 1 794 0
 2236 0076 07F11003 		add	r3, r7, #16
 2237 007a 1A46     		mov	r2, r3
 2238 007c 2749     		ldr	r1, .L83+40
 2239 007e 0020     		movs	r0, #0
 2240 0080 FFF7FEFF 		bl	printNotif
 795:notoriOS.c    ****     // AT command to configure the port
 796:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 2241              		.loc 1 796 0
 2242 0084 07F11003 		add	r3, r7, #16
 2243 0088 42F21072 		movw	r2, #10000
 2244 008c 2449     		ldr	r1, .L83+44
 2245 008e 1846     		mov	r0, r3
 2246 0090 FFF7FEFF 		bl	at_write_command
 2247 0094 0346     		mov	r3, r0
 2248 0096 87F8E730 		strb	r3, [r7, #231]
 797:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 57


 798:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 799:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 2249              		.loc 1 799 0
 2250 009a 4FF47A72 		mov	r2, #1000
 2251 009e 2149     		ldr	r1, .L83+48
 2252 00a0 2148     		ldr	r0, .L83+52
 2253 00a2 FFF7FEFF 		bl	at_write_command
 2254 00a6 0346     		mov	r3, r0
 2255 00a8 87F8E730 		strb	r3, [r7, #231]
 800:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 801:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 2256              		.loc 1 801 0
 2257 00ac 1848     		ldr	r0, .L83+28
 2258 00ae FFF7FEFF 		bl	strlen
 2259 00b2 0346     		mov	r3, r0
 2260 00b4 1A46     		mov	r2, r3
 2261 00b6 164B     		ldr	r3, .L83+28
 2262 00b8 1344     		add	r3, r3, r2
 2263 00ba 1C49     		ldr	r1, .L83+56
 2264 00bc 1A46     		mov	r2, r3
 2265 00be 0B46     		mov	r3, r1
 2266 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 2267 00c2 1380     		strh	r3, [r2]	@ unaligned
 802:notoriOS.c    ****     // AT command to send http request
 803:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
 2268              		.loc 1 803 0
 2269 00c4 41F28832 		movw	r2, #5000
 2270 00c8 1549     		ldr	r1, .L83+44
 2271 00ca 1148     		ldr	r0, .L83+28
 2272 00cc FFF7FEFF 		bl	at_write_command
 2273 00d0 0346     		mov	r3, r0
 2274 00d2 87F8E730 		strb	r3, [r7, #231]
 804:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 805:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 806:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 2275              		.loc 1 806 0
 2276 00d6 41F28832 		movw	r2, #5000
 2277 00da 1549     		ldr	r1, .L83+60
 2278 00dc 1548     		ldr	r0, .L83+64
 2279 00de FFF7FEFF 		bl	at_write_command
 2280 00e2 0346     		mov	r3, r0
 2281 00e4 87F8E730 		strb	r3, [r7, #231]
 807:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 808:notoriOS.c    ****     
 809:notoriOS.c    ****     
 810:notoriOS.c    ****     return upgrade_status;
 2282              		.loc 1 810 0
 2283 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2284              	.L82:
 811:notoriOS.c    ****     
 812:notoriOS.c    **** }
 2285              		.loc 1 812 0 discriminator 1
 2286 00ec 1846     		mov	r0, r3
 2287 00ee E837     		adds	r7, r7, #232
 2288              		.cfi_def_cfa_offset 8
 2289 00f0 BD46     		mov	sp, r7
 2290              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 58


 2291              		@ sp needed
 2292 00f2 80BD     		pop	{r7, pc}
 2293              	.L84:
 2294              		.align	2
 2295              	.L83:
 2296 00f4 00000000 		.word	modem_state
 2297 00f8 D0030000 		.word	.LC55
 2298 00fc 68010000 		.word	.LC16
 2299 0100 6C010000 		.word	.LC17
 2300 0104 70010000 		.word	.LC18
 2301 0108 78010000 		.word	.LC19
 2302 010c 00000000 		.word	http_body
 2303 0110 00000000 		.word	http_request
 2304 0114 80010000 		.word	.LC20
 2305 0118 98010000 		.word	.LC21
 2306 011c B4010000 		.word	.LC22
 2307 0120 B8010000 		.word	.LC23
 2308 0124 E8010000 		.word	.LC26
 2309 0128 EC010000 		.word	.LC27
 2310 012c FC010000 		.word	.LC28
 2311 0130 18020000 		.word	.LC31
 2312 0134 20020000 		.word	.LC32
 2313              		.cfi_endproc
 2314              	.LFE78:
 2315              		.size	upgraded, .-upgraded
 2316              		.text
 2317              	.Letext0:
 2318              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2319              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2320              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2321              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 2322              		.file 6 "testing.h"
 2323              		.file 7 "voltages.h"
 2324              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2325              		.file 9 "data.h"
 2326              		.file 10 "modem.h"
 2327              		.file 11 "level_sensor.h"
 2328              		.file 12 "notoriOS.h"
 2329              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 2330              		.file 14 "App_LED.h"
 2331              		.file 15 "valve.h"
 2332              		.file 16 "autosampler.h"
 2333              		.section	.debug_info,"",%progbits
 2334              	.Ldebug_info0:
 2335 0000 D50D0000 		.4byte	0xdd5
 2336 0004 0400     		.2byte	0x4
 2337 0006 00000000 		.4byte	.Ldebug_abbrev0
 2338 000a 04       		.byte	0x4
 2339 000b 01       		.uleb128 0x1
 2340 000c 91000000 		.4byte	.LASF187
 2341 0010 0C       		.byte	0xc
 2342 0011 2B090000 		.4byte	.LASF188
 2343 0015 BA050000 		.4byte	.LASF189
 2344 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2345 001d 00000000 		.4byte	0
 2346 0021 00000000 		.4byte	.Ldebug_line0
 2347 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 59


 2348 0026 01       		.byte	0x1
 2349 0027 06       		.byte	0x6
 2350 0028 45000000 		.4byte	.LASF0
 2351 002c 02       		.uleb128 0x2
 2352 002d 01       		.byte	0x1
 2353 002e 08       		.byte	0x8
 2354 002f 89060000 		.4byte	.LASF1
 2355 0033 02       		.uleb128 0x2
 2356 0034 02       		.byte	0x2
 2357 0035 05       		.byte	0x5
 2358 0036 96040000 		.4byte	.LASF2
 2359 003a 02       		.uleb128 0x2
 2360 003b 02       		.byte	0x2
 2361 003c 07       		.byte	0x7
 2362 003d 64080000 		.4byte	.LASF3
 2363 0041 03       		.uleb128 0x3
 2364 0042 1F080000 		.4byte	.LASF9
 2365 0046 02       		.byte	0x2
 2366 0047 3F       		.byte	0x3f
 2367 0048 4C000000 		.4byte	0x4c
 2368 004c 02       		.uleb128 0x2
 2369 004d 04       		.byte	0x4
 2370 004e 05       		.byte	0x5
 2371 004f 70020000 		.4byte	.LASF4
 2372 0053 02       		.uleb128 0x2
 2373 0054 04       		.byte	0x4
 2374 0055 07       		.byte	0x7
 2375 0056 D3030000 		.4byte	.LASF5
 2376 005a 02       		.uleb128 0x2
 2377 005b 08       		.byte	0x8
 2378 005c 05       		.byte	0x5
 2379 005d A1010000 		.4byte	.LASF6
 2380 0061 02       		.uleb128 0x2
 2381 0062 08       		.byte	0x8
 2382 0063 07       		.byte	0x7
 2383 0064 30010000 		.4byte	.LASF7
 2384 0068 04       		.uleb128 0x4
 2385 0069 04       		.byte	0x4
 2386 006a 05       		.byte	0x5
 2387 006b 696E7400 		.ascii	"int\000"
 2388 006f 02       		.uleb128 0x2
 2389 0070 04       		.byte	0x4
 2390 0071 07       		.byte	0x7
 2391 0072 EC070000 		.4byte	.LASF8
 2392 0076 03       		.uleb128 0x3
 2393 0077 81060000 		.4byte	.LASF10
 2394 007b 03       		.byte	0x3
 2395 007c 2C       		.byte	0x2c
 2396 007d 41000000 		.4byte	0x41
 2397 0081 05       		.uleb128 0x5
 2398 0082 A7020000 		.4byte	.LASF11
 2399 0086 04       		.byte	0x4
 2400 0087 9201     		.2byte	0x192
 2401 0089 2C000000 		.4byte	0x2c
 2402 008d 05       		.uleb128 0x5
 2403 008e 08000000 		.4byte	.LASF12
 2404 0092 04       		.byte	0x4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 60


 2405 0093 9301     		.2byte	0x193
 2406 0095 3A000000 		.4byte	0x3a
 2407 0099 05       		.uleb128 0x5
 2408 009a F8020000 		.4byte	.LASF13
 2409 009e 04       		.byte	0x4
 2410 009f 9401     		.2byte	0x194
 2411 00a1 53000000 		.4byte	0x53
 2412 00a5 05       		.uleb128 0x5
 2413 00a6 59040000 		.4byte	.LASF14
 2414 00aa 04       		.byte	0x4
 2415 00ab 9501     		.2byte	0x195
 2416 00ad 25000000 		.4byte	0x25
 2417 00b1 05       		.uleb128 0x5
 2418 00b2 5D050000 		.4byte	.LASF15
 2419 00b6 04       		.byte	0x4
 2420 00b7 9601     		.2byte	0x196
 2421 00b9 33000000 		.4byte	0x33
 2422 00bd 05       		.uleb128 0x5
 2423 00be D2020000 		.4byte	.LASF16
 2424 00c2 04       		.byte	0x4
 2425 00c3 9701     		.2byte	0x197
 2426 00c5 4C000000 		.4byte	0x4c
 2427 00c9 05       		.uleb128 0x5
 2428 00ca 1A050000 		.4byte	.LASF17
 2429 00ce 04       		.byte	0x4
 2430 00cf 9801     		.2byte	0x198
 2431 00d1 D5000000 		.4byte	0xd5
 2432 00d5 02       		.uleb128 0x2
 2433 00d6 04       		.byte	0x4
 2434 00d7 04       		.byte	0x4
 2435 00d8 1F060000 		.4byte	.LASF18
 2436 00dc 02       		.uleb128 0x2
 2437 00dd 08       		.byte	0x8
 2438 00de 04       		.byte	0x4
 2439 00df 020A0000 		.4byte	.LASF19
 2440 00e3 02       		.uleb128 0x2
 2441 00e4 01       		.byte	0x1
 2442 00e5 08       		.byte	0x8
 2443 00e6 E7070000 		.4byte	.LASF20
 2444 00ea 02       		.uleb128 0x2
 2445 00eb 08       		.byte	0x8
 2446 00ec 04       		.byte	0x4
 2447 00ed C9070000 		.4byte	.LASF21
 2448 00f1 02       		.uleb128 0x2
 2449 00f2 04       		.byte	0x4
 2450 00f3 07       		.byte	0x7
 2451 00f4 33050000 		.4byte	.LASF22
 2452 00f8 06       		.uleb128 0x6
 2453 00f9 04       		.byte	0x4
 2454 00fa E3000000 		.4byte	0xe3
 2455 00fe 07       		.uleb128 0x7
 2456 00ff E3000000 		.4byte	0xe3
 2457 0103 0E010000 		.4byte	0x10e
 2458 0107 08       		.uleb128 0x8
 2459 0108 F1000000 		.4byte	0xf1
 2460 010c 17       		.byte	0x17
 2461 010d 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 61


 2462 010e 09       		.uleb128 0x9
 2463 010f 0C       		.byte	0xc
 2464 0110 05       		.byte	0x5
 2465 0111 30       		.byte	0x30
 2466 0112 77010000 		.4byte	0x177
 2467 0116 0A       		.uleb128 0xa
 2468 0117 53656300 		.ascii	"Sec\000"
 2469 011b 05       		.byte	0x5
 2470 011c 32       		.byte	0x32
 2471 011d 81000000 		.4byte	0x81
 2472 0121 00       		.byte	0
 2473 0122 0A       		.uleb128 0xa
 2474 0123 4D696E00 		.ascii	"Min\000"
 2475 0127 05       		.byte	0x5
 2476 0128 33       		.byte	0x33
 2477 0129 81000000 		.4byte	0x81
 2478 012d 01       		.byte	0x1
 2479 012e 0B       		.uleb128 0xb
 2480 012f 47010000 		.4byte	.LASF23
 2481 0133 05       		.byte	0x5
 2482 0134 34       		.byte	0x34
 2483 0135 81000000 		.4byte	0x81
 2484 0139 02       		.byte	0x2
 2485 013a 0B       		.uleb128 0xb
 2486 013b F2060000 		.4byte	.LASF24
 2487 013f 05       		.byte	0x5
 2488 0140 35       		.byte	0x35
 2489 0141 81000000 		.4byte	0x81
 2490 0145 03       		.byte	0x3
 2491 0146 0B       		.uleb128 0xb
 2492 0147 14040000 		.4byte	.LASF25
 2493 014b 05       		.byte	0x5
 2494 014c 36       		.byte	0x36
 2495 014d 81000000 		.4byte	0x81
 2496 0151 04       		.byte	0x4
 2497 0152 0B       		.uleb128 0xb
 2498 0153 B7090000 		.4byte	.LASF26
 2499 0157 05       		.byte	0x5
 2500 0158 37       		.byte	0x37
 2501 0159 8D000000 		.4byte	0x8d
 2502 015d 06       		.byte	0x6
 2503 015e 0B       		.uleb128 0xb
 2504 015f 2A010000 		.4byte	.LASF27
 2505 0163 05       		.byte	0x5
 2506 0164 38       		.byte	0x38
 2507 0165 81000000 		.4byte	0x81
 2508 0169 08       		.byte	0x8
 2509 016a 0B       		.uleb128 0xb
 2510 016b 76060000 		.4byte	.LASF28
 2511 016f 05       		.byte	0x5
 2512 0170 39       		.byte	0x39
 2513 0171 8D000000 		.4byte	0x8d
 2514 0175 0A       		.byte	0xa
 2515 0176 00       		.byte	0
 2516 0177 03       		.uleb128 0x3
 2517 0178 84050000 		.4byte	.LASF29
 2518 017c 05       		.byte	0x5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 62


 2519 017d 3A       		.byte	0x3a
 2520 017e 82010000 		.4byte	0x182
 2521 0182 0C       		.uleb128 0xc
 2522 0183 0E010000 		.4byte	0x10e
 2523 0187 0D       		.uleb128 0xd
 2524 0188 8101     		.2byte	0x181
 2525 018a 06       		.byte	0x6
 2526 018b 0A       		.byte	0xa
 2527 018c B5010000 		.4byte	0x1b5
 2528 0190 0B       		.uleb128 0xb
 2529 0191 6C060000 		.4byte	.LASF30
 2530 0195 06       		.byte	0x6
 2531 0196 0C       		.byte	0xc
 2532 0197 B5010000 		.4byte	0x1b5
 2533 019b 00       		.byte	0
 2534 019c 0B       		.uleb128 0xb
 2535 019d CC080000 		.4byte	.LASF31
 2536 01a1 06       		.byte	0x6
 2537 01a2 0D       		.byte	0xd
 2538 01a3 81000000 		.4byte	0x81
 2539 01a7 80       		.byte	0x80
 2540 01a8 0B       		.uleb128 0xb
 2541 01a9 14070000 		.4byte	.LASF32
 2542 01ad 06       		.byte	0x6
 2543 01ae 0F       		.byte	0xf
 2544 01af C5010000 		.4byte	0x1c5
 2545 01b3 81       		.byte	0x81
 2546 01b4 00       		.byte	0
 2547 01b5 07       		.uleb128 0x7
 2548 01b6 E3000000 		.4byte	0xe3
 2549 01ba C5010000 		.4byte	0x1c5
 2550 01be 08       		.uleb128 0x8
 2551 01bf F1000000 		.4byte	0xf1
 2552 01c3 7F       		.byte	0x7f
 2553 01c4 00       		.byte	0
 2554 01c5 07       		.uleb128 0x7
 2555 01c6 E3000000 		.4byte	0xe3
 2556 01ca D5010000 		.4byte	0x1d5
 2557 01ce 08       		.uleb128 0x8
 2558 01cf F1000000 		.4byte	0xf1
 2559 01d3 FF       		.byte	0xff
 2560 01d4 00       		.byte	0
 2561 01d5 03       		.uleb128 0x3
 2562 01d6 FC060000 		.4byte	.LASF33
 2563 01da 06       		.byte	0x6
 2564 01db 10       		.byte	0x10
 2565 01dc 87010000 		.4byte	0x187
 2566 01e0 09       		.uleb128 0x9
 2567 01e1 14       		.byte	0x14
 2568 01e2 07       		.byte	0x7
 2569 01e3 15       		.byte	0x15
 2570 01e4 25020000 		.4byte	0x225
 2571 01e8 0B       		.uleb128 0xb
 2572 01e9 04040000 		.4byte	.LASF34
 2573 01ed 07       		.byte	0x7
 2574 01ee 16       		.byte	0x16
 2575 01ef D5000000 		.4byte	0xd5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 63


 2576 01f3 00       		.byte	0
 2577 01f4 0B       		.uleb128 0xb
 2578 01f5 ED010000 		.4byte	.LASF35
 2579 01f9 07       		.byte	0x7
 2580 01fa 17       		.byte	0x17
 2581 01fb D5000000 		.4byte	0xd5
 2582 01ff 04       		.byte	0x4
 2583 0200 0B       		.uleb128 0xb
 2584 0201 FB010000 		.4byte	.LASF36
 2585 0205 07       		.byte	0x7
 2586 0206 18       		.byte	0x18
 2587 0207 D5000000 		.4byte	0xd5
 2588 020b 08       		.byte	0x8
 2589 020c 0B       		.uleb128 0xb
 2590 020d 02060000 		.4byte	.LASF37
 2591 0211 07       		.byte	0x7
 2592 0212 19       		.byte	0x19
 2593 0213 D5000000 		.4byte	0xd5
 2594 0217 0C       		.byte	0xc
 2595 0218 0B       		.uleb128 0xb
 2596 0219 85070000 		.4byte	.LASF38
 2597 021d 07       		.byte	0x7
 2598 021e 1A       		.byte	0x1a
 2599 021f 81000000 		.4byte	0x81
 2600 0223 10       		.byte	0x10
 2601 0224 00       		.byte	0
 2602 0225 03       		.uleb128 0x3
 2603 0226 170A0000 		.4byte	.LASF39
 2604 022a 07       		.byte	0x7
 2605 022b 1B       		.byte	0x1b
 2606 022c E0010000 		.4byte	0x1e0
 2607 0230 09       		.uleb128 0x9
 2608 0231 10       		.byte	0x10
 2609 0232 07       		.byte	0x7
 2610 0233 1D       		.byte	0x1d
 2611 0234 69020000 		.4byte	0x269
 2612 0238 0B       		.uleb128 0xb
 2613 0239 68030000 		.4byte	.LASF40
 2614 023d 07       		.byte	0x7
 2615 023e 1E       		.byte	0x1e
 2616 023f D5000000 		.4byte	0xd5
 2617 0243 00       		.byte	0
 2618 0244 0B       		.uleb128 0xb
 2619 0245 92020000 		.4byte	.LASF41
 2620 0249 07       		.byte	0x7
 2621 024a 1F       		.byte	0x1f
 2622 024b D5000000 		.4byte	0xd5
 2623 024f 04       		.byte	0x4
 2624 0250 0B       		.uleb128 0xb
 2625 0251 74070000 		.4byte	.LASF42
 2626 0255 07       		.byte	0x7
 2627 0256 20       		.byte	0x20
 2628 0257 D5000000 		.4byte	0xd5
 2629 025b 08       		.byte	0x8
 2630 025c 0B       		.uleb128 0xb
 2631 025d DE060000 		.4byte	.LASF43
 2632 0261 07       		.byte	0x7
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 64


 2633 0262 21       		.byte	0x21
 2634 0263 D5000000 		.4byte	0xd5
 2635 0267 0C       		.byte	0xc
 2636 0268 00       		.byte	0
 2637 0269 03       		.uleb128 0x3
 2638 026a C1090000 		.4byte	.LASF44
 2639 026e 07       		.byte	0x7
 2640 026f 22       		.byte	0x22
 2641 0270 30020000 		.4byte	0x230
 2642 0274 0E       		.uleb128 0xe
 2643 0275 746D00   		.ascii	"tm\000"
 2644 0278 24       		.byte	0x24
 2645 0279 08       		.byte	0x8
 2646 027a 21       		.byte	0x21
 2647 027b EC020000 		.4byte	0x2ec
 2648 027f 0B       		.uleb128 0xb
 2649 0280 AC080000 		.4byte	.LASF45
 2650 0284 08       		.byte	0x8
 2651 0285 23       		.byte	0x23
 2652 0286 68000000 		.4byte	0x68
 2653 028a 00       		.byte	0
 2654 028b 0B       		.uleb128 0xb
 2655 028c 13050000 		.4byte	.LASF46
 2656 0290 08       		.byte	0x8
 2657 0291 24       		.byte	0x24
 2658 0292 68000000 		.4byte	0x68
 2659 0296 04       		.byte	0x4
 2660 0297 0B       		.uleb128 0xb
 2661 0298 0F000000 		.4byte	.LASF47
 2662 029c 08       		.byte	0x8
 2663 029d 25       		.byte	0x25
 2664 029e 68000000 		.4byte	0x68
 2665 02a2 08       		.byte	0x8
 2666 02a3 0B       		.uleb128 0xb
 2667 02a4 7E080000 		.4byte	.LASF48
 2668 02a8 08       		.byte	0x8
 2669 02a9 26       		.byte	0x26
 2670 02aa 68000000 		.4byte	0x68
 2671 02ae 0C       		.byte	0xc
 2672 02af 0B       		.uleb128 0xb
 2673 02b0 33030000 		.4byte	.LASF49
 2674 02b4 08       		.byte	0x8
 2675 02b5 27       		.byte	0x27
 2676 02b6 68000000 		.4byte	0x68
 2677 02ba 10       		.byte	0x10
 2678 02bb 0B       		.uleb128 0xb
 2679 02bc 56030000 		.4byte	.LASF50
 2680 02c0 08       		.byte	0x8
 2681 02c1 28       		.byte	0x28
 2682 02c2 68000000 		.4byte	0x68
 2683 02c6 14       		.byte	0x14
 2684 02c7 0B       		.uleb128 0xb
 2685 02c8 9C070000 		.4byte	.LASF51
 2686 02cc 08       		.byte	0x8
 2687 02cd 29       		.byte	0x29
 2688 02ce 68000000 		.4byte	0x68
 2689 02d2 18       		.byte	0x18
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 65


 2690 02d3 0B       		.uleb128 0xb
 2691 02d4 3C050000 		.4byte	.LASF52
 2692 02d8 08       		.byte	0x8
 2693 02d9 2A       		.byte	0x2a
 2694 02da 68000000 		.4byte	0x68
 2695 02de 1C       		.byte	0x1c
 2696 02df 0B       		.uleb128 0xb
 2697 02e0 3D040000 		.4byte	.LASF53
 2698 02e4 08       		.byte	0x8
 2699 02e5 2B       		.byte	0x2b
 2700 02e6 68000000 		.4byte	0x68
 2701 02ea 20       		.byte	0x20
 2702 02eb 00       		.byte	0
 2703 02ec 09       		.uleb128 0x9
 2704 02ed 2C       		.byte	0x2c
 2705 02ee 09       		.byte	0x9
 2706 02ef 14       		.byte	0x14
 2707 02f0 19030000 		.4byte	0x319
 2708 02f4 0A       		.uleb128 0xa
 2709 02f5 6B657900 		.ascii	"key\000"
 2710 02f9 09       		.byte	0x9
 2711 02fa 15       		.byte	0x15
 2712 02fb 19030000 		.4byte	0x319
 2713 02ff 00       		.byte	0
 2714 0300 0B       		.uleb128 0xb
 2715 0301 4B030000 		.4byte	.LASF54
 2716 0305 09       		.byte	0x9
 2717 0306 16       		.byte	0x16
 2718 0307 19030000 		.4byte	0x319
 2719 030b 14       		.byte	0x14
 2720 030c 0B       		.uleb128 0xb
 2721 030d 7A050000 		.4byte	.LASF55
 2722 0311 09       		.byte	0x9
 2723 0312 17       		.byte	0x17
 2724 0313 BD000000 		.4byte	0xbd
 2725 0317 28       		.byte	0x28
 2726 0318 00       		.byte	0
 2727 0319 07       		.uleb128 0x7
 2728 031a E3000000 		.4byte	0xe3
 2729 031e 29030000 		.4byte	0x329
 2730 0322 08       		.uleb128 0x8
 2731 0323 F1000000 		.4byte	0xf1
 2732 0327 13       		.byte	0x13
 2733 0328 00       		.byte	0
 2734 0329 03       		.uleb128 0x3
 2735 032a 94030000 		.4byte	.LASF56
 2736 032e 09       		.byte	0x9
 2737 032f 19       		.byte	0x19
 2738 0330 EC020000 		.4byte	0x2ec
 2739 0334 09       		.uleb128 0x9
 2740 0335 3C       		.byte	0x3c
 2741 0336 0A       		.byte	0xa
 2742 0337 36       		.byte	0x36
 2743 0338 61030000 		.4byte	0x361
 2744 033c 0B       		.uleb128 0xb
 2745 033d 77080000 		.4byte	.LASF57
 2746 0341 0A       		.byte	0xa
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 66


 2747 0342 37       		.byte	0x37
 2748 0343 19030000 		.4byte	0x319
 2749 0347 00       		.byte	0
 2750 0348 0B       		.uleb128 0xb
 2751 0349 FF020000 		.4byte	.LASF58
 2752 034d 0A       		.byte	0xa
 2753 034e 38       		.byte	0x38
 2754 034f 19030000 		.4byte	0x319
 2755 0353 14       		.byte	0x14
 2756 0354 0B       		.uleb128 0xb
 2757 0355 0F070000 		.4byte	.LASF59
 2758 0359 0A       		.byte	0xa
 2759 035a 39       		.byte	0x39
 2760 035b 19030000 		.4byte	0x319
 2761 035f 28       		.byte	0x28
 2762 0360 00       		.byte	0
 2763 0361 03       		.uleb128 0x3
 2764 0362 42020000 		.4byte	.LASF60
 2765 0366 0A       		.byte	0xa
 2766 0367 3B       		.byte	0x3b
 2767 0368 34030000 		.4byte	0x334
 2768 036c 09       		.uleb128 0x9
 2769 036d 20       		.byte	0x20
 2770 036e 0A       		.byte	0xa
 2771 036f 3D       		.byte	0x3d
 2772 0370 D5030000 		.4byte	0x3d5
 2773 0374 0B       		.uleb128 0xb
 2774 0375 6A020000 		.4byte	.LASF61
 2775 0379 0A       		.byte	0xa
 2776 037a 3E       		.byte	0x3e
 2777 037b 68000000 		.4byte	0x68
 2778 037f 00       		.byte	0
 2779 0380 0A       		.uleb128 0xa
 2780 0381 62657200 		.ascii	"ber\000"
 2781 0385 0A       		.byte	0xa
 2782 0386 3F       		.byte	0x3f
 2783 0387 68000000 		.4byte	0x68
 2784 038b 04       		.byte	0x4
 2785 038c 0B       		.uleb128 0xb
 2786 038d ED060000 		.4byte	.LASF62
 2787 0391 0A       		.byte	0xa
 2788 0392 40       		.byte	0x40
 2789 0393 68000000 		.4byte	0x68
 2790 0397 08       		.byte	0x8
 2791 0398 0B       		.uleb128 0xb
 2792 0399 B7010000 		.4byte	.LASF63
 2793 039d 0A       		.byte	0xa
 2794 039e 41       		.byte	0x41
 2795 039f 68000000 		.4byte	0x68
 2796 03a3 0C       		.byte	0xc
 2797 03a4 0B       		.uleb128 0xb
 2798 03a5 B8060000 		.4byte	.LASF64
 2799 03a9 0A       		.byte	0xa
 2800 03aa 42       		.byte	0x42
 2801 03ab 68000000 		.4byte	0x68
 2802 03af 10       		.byte	0x10
 2803 03b0 0B       		.uleb128 0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 67


 2804 03b1 04080000 		.4byte	.LASF65
 2805 03b5 0A       		.byte	0xa
 2806 03b6 43       		.byte	0x43
 2807 03b7 68000000 		.4byte	0x68
 2808 03bb 14       		.byte	0x14
 2809 03bc 0B       		.uleb128 0xb
 2810 03bd CA010000 		.4byte	.LASF66
 2811 03c1 0A       		.byte	0xa
 2812 03c2 44       		.byte	0x44
 2813 03c3 68000000 		.4byte	0x68
 2814 03c7 18       		.byte	0x18
 2815 03c8 0B       		.uleb128 0xb
 2816 03c9 79020000 		.4byte	.LASF67
 2817 03cd 0A       		.byte	0xa
 2818 03ce 45       		.byte	0x45
 2819 03cf 68000000 		.4byte	0x68
 2820 03d3 1C       		.byte	0x1c
 2821 03d4 00       		.byte	0
 2822 03d5 03       		.uleb128 0x3
 2823 03d6 66070000 		.4byte	.LASF68
 2824 03da 0A       		.byte	0xa
 2825 03db 47       		.byte	0x47
 2826 03dc 6C030000 		.4byte	0x36c
 2827 03e0 09       		.uleb128 0x9
 2828 03e1 0A       		.byte	0xa
 2829 03e2 0A       		.byte	0xa
 2830 03e3 53       		.byte	0x53
 2831 03e4 61040000 		.4byte	0x461
 2832 03e8 0B       		.uleb128 0xb
 2833 03e9 D8020000 		.4byte	.LASF69
 2834 03ed 0A       		.byte	0xa
 2835 03ee 55       		.byte	0x55
 2836 03ef 81000000 		.4byte	0x81
 2837 03f3 00       		.byte	0
 2838 03f4 0B       		.uleb128 0xb
 2839 03f5 AE090000 		.4byte	.LASF70
 2840 03f9 0A       		.byte	0xa
 2841 03fa 57       		.byte	0x57
 2842 03fb 61040000 		.4byte	0x461
 2843 03ff 01       		.byte	0x1
 2844 0400 0B       		.uleb128 0xb
 2845 0401 32080000 		.4byte	.LASF71
 2846 0405 0A       		.byte	0xa
 2847 0406 59       		.byte	0x59
 2848 0407 81000000 		.4byte	0x81
 2849 040b 02       		.byte	0x2
 2850 040c 0B       		.uleb128 0xb
 2851 040d D4060000 		.4byte	.LASF72
 2852 0411 0A       		.byte	0xa
 2853 0412 5B       		.byte	0x5b
 2854 0413 81000000 		.4byte	0x81
 2855 0417 03       		.byte	0x3
 2856 0418 0B       		.uleb128 0xb
 2857 0419 3A030000 		.4byte	.LASF73
 2858 041d 0A       		.byte	0xa
 2859 041e 5E       		.byte	0x5e
 2860 041f 81000000 		.4byte	0x81
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 68


 2861 0423 04       		.byte	0x4
 2862 0424 0B       		.uleb128 0xb
 2863 0425 13090000 		.4byte	.LASF74
 2864 0429 0A       		.byte	0xa
 2865 042a 63       		.byte	0x63
 2866 042b 81000000 		.4byte	0x81
 2867 042f 05       		.byte	0x5
 2868 0430 0B       		.uleb128 0xb
 2869 0431 A4070000 		.4byte	.LASF75
 2870 0435 0A       		.byte	0xa
 2871 0436 65       		.byte	0x65
 2872 0437 81000000 		.4byte	0x81
 2873 043b 06       		.byte	0x6
 2874 043c 0B       		.uleb128 0xb
 2875 043d 8F080000 		.4byte	.LASF76
 2876 0441 0A       		.byte	0xa
 2877 0442 66       		.byte	0x66
 2878 0443 81000000 		.4byte	0x81
 2879 0447 07       		.byte	0x7
 2880 0448 0B       		.uleb128 0xb
 2881 0449 AD060000 		.4byte	.LASF77
 2882 044d 0A       		.byte	0xa
 2883 044e 67       		.byte	0x67
 2884 044f 81000000 		.4byte	0x81
 2885 0453 08       		.byte	0x8
 2886 0454 0B       		.uleb128 0xb
 2887 0455 79090000 		.4byte	.LASF78
 2888 0459 0A       		.byte	0xa
 2889 045a 68       		.byte	0x68
 2890 045b 81000000 		.4byte	0x81
 2891 045f 09       		.byte	0x9
 2892 0460 00       		.byte	0
 2893 0461 02       		.uleb128 0x2
 2894 0462 01       		.byte	0x1
 2895 0463 02       		.byte	0x2
 2896 0464 7B060000 		.4byte	.LASF79
 2897 0468 03       		.uleb128 0x3
 2898 0469 CE040000 		.4byte	.LASF80
 2899 046d 0A       		.byte	0xa
 2900 046e 6E       		.byte	0x6e
 2901 046f E0030000 		.4byte	0x3e0
 2902 0473 09       		.uleb128 0x9
 2903 0474 1A       		.byte	0x1a
 2904 0475 0B       		.byte	0xb
 2905 0476 10       		.byte	0x10
 2906 0477 AC040000 		.4byte	0x4ac
 2907 047b 0B       		.uleb128 0xb
 2908 047c 08030000 		.4byte	.LASF81
 2909 0480 0B       		.byte	0xb
 2910 0481 11       		.byte	0x11
 2911 0482 AC040000 		.4byte	0x4ac
 2912 0486 00       		.byte	0
 2913 0487 0B       		.uleb128 0xb
 2914 0488 4E080000 		.4byte	.LASF82
 2915 048c 0B       		.byte	0xb
 2916 048d 12       		.byte	0x12
 2917 048e B1000000 		.4byte	0xb1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 69


 2918 0492 16       		.byte	0x16
 2919 0493 0B       		.uleb128 0xb
 2920 0494 AB030000 		.4byte	.LASF83
 2921 0498 0B       		.byte	0xb
 2922 0499 13       		.byte	0x13
 2923 049a 81000000 		.4byte	0x81
 2924 049e 18       		.byte	0x18
 2925 049f 0B       		.uleb128 0xb
 2926 04a0 17000000 		.4byte	.LASF84
 2927 04a4 0B       		.byte	0xb
 2928 04a5 14       		.byte	0x14
 2929 04a6 81000000 		.4byte	0x81
 2930 04aa 19       		.byte	0x19
 2931 04ab 00       		.byte	0
 2932 04ac 07       		.uleb128 0x7
 2933 04ad B1000000 		.4byte	0xb1
 2934 04b1 BC040000 		.4byte	0x4bc
 2935 04b5 08       		.uleb128 0x8
 2936 04b6 F1000000 		.4byte	0xf1
 2937 04ba 0A       		.byte	0xa
 2938 04bb 00       		.byte	0
 2939 04bc 03       		.uleb128 0x3
 2940 04bd 25060000 		.4byte	.LASF85
 2941 04c1 0B       		.byte	0xb
 2942 04c2 15       		.byte	0x15
 2943 04c3 73040000 		.4byte	0x473
 2944 04c7 09       		.uleb128 0x9
 2945 04c8 06       		.byte	0x6
 2946 04c9 0C       		.byte	0xc
 2947 04ca 35       		.byte	0x35
 2948 04cb 00050000 		.4byte	0x500
 2949 04cf 0B       		.uleb128 0xb
 2950 04d0 1B030000 		.4byte	.LASF86
 2951 04d4 0C       		.byte	0xc
 2952 04d5 37       		.byte	0x37
 2953 04d6 8D000000 		.4byte	0x8d
 2954 04da 00       		.byte	0
 2955 04db 0B       		.uleb128 0xb
 2956 04dc 98090000 		.4byte	.LASF87
 2957 04e0 0C       		.byte	0xc
 2958 04e1 38       		.byte	0x38
 2959 04e2 B1000000 		.4byte	0xb1
 2960 04e6 02       		.byte	0x2
 2961 04e7 0B       		.uleb128 0xb
 2962 04e8 8A090000 		.4byte	.LASF88
 2963 04ec 0C       		.byte	0xc
 2964 04ed 39       		.byte	0x39
 2965 04ee 81000000 		.4byte	0x81
 2966 04f2 04       		.byte	0x4
 2967 04f3 0B       		.uleb128 0xb
 2968 04f4 51000000 		.4byte	.LASF89
 2969 04f8 0C       		.byte	0xc
 2970 04f9 3A       		.byte	0x3a
 2971 04fa 81000000 		.4byte	0x81
 2972 04fe 05       		.byte	0x5
 2973 04ff 00       		.byte	0
 2974 0500 03       		.uleb128 0x3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 70


 2975 0501 8C020000 		.4byte	.LASF90
 2976 0505 0C       		.byte	0xc
 2977 0506 3D       		.byte	0x3d
 2978 0507 0B050000 		.4byte	0x50b
 2979 050b 0C       		.uleb128 0xc
 2980 050c C7040000 		.4byte	0x4c7
 2981 0510 09       		.uleb128 0x9
 2982 0511 1C       		.byte	0x1c
 2983 0512 0C       		.byte	0xc
 2984 0513 40       		.byte	0x40
 2985 0514 31050000 		.4byte	0x531
 2986 0518 0B       		.uleb128 0xb
 2987 0519 46040000 		.4byte	.LASF91
 2988 051d 0C       		.byte	0xc
 2989 051e 42       		.byte	0x42
 2990 051f 31050000 		.4byte	0x531
 2991 0523 00       		.byte	0
 2992 0524 0B       		.uleb128 0xb
 2993 0525 E7090000 		.4byte	.LASF92
 2994 0529 0C       		.byte	0xc
 2995 052a 43       		.byte	0x43
 2996 052b FE000000 		.4byte	0xfe
 2997 052f 04       		.byte	0x4
 2998 0530 00       		.byte	0
 2999 0531 06       		.uleb128 0x6
 3000 0532 04       		.byte	0x4
 3001 0533 61030000 		.4byte	0x361
 3002 0537 03       		.uleb128 0x3
 3003 0538 C3040000 		.4byte	.LASF93
 3004 053c 0C       		.byte	0xc
 3005 053d 45       		.byte	0x45
 3006 053e 10050000 		.4byte	0x510
 3007 0542 09       		.uleb128 0x9
 3008 0543 68       		.byte	0x68
 3009 0544 0C       		.byte	0xc
 3010 0545 4B       		.byte	0x4b
 3011 0546 63050000 		.4byte	0x563
 3012 054a 0B       		.uleb128 0xb
 3013 054b 51040000 		.4byte	.LASF94
 3014 054f 0C       		.byte	0xc
 3015 0550 50       		.byte	0x50
 3016 0551 63050000 		.4byte	0x563
 3017 0555 00       		.byte	0
 3018 0556 0B       		.uleb128 0xb
 3019 0557 35040000 		.4byte	.LASF95
 3020 055b 0C       		.byte	0xc
 3021 055c 51       		.byte	0x51
 3022 055d 68000000 		.4byte	0x68
 3023 0561 64       		.byte	0x64
 3024 0562 00       		.byte	0
 3025 0563 07       		.uleb128 0x7
 3026 0564 E3000000 		.4byte	0xe3
 3027 0568 73050000 		.4byte	0x573
 3028 056c 08       		.uleb128 0x8
 3029 056d F1000000 		.4byte	0xf1
 3030 0571 63       		.byte	0x63
 3031 0572 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 71


 3032 0573 03       		.uleb128 0x3
 3033 0574 44050000 		.4byte	.LASF96
 3034 0578 0C       		.byte	0xc
 3035 0579 57       		.byte	0x57
 3036 057a 42050000 		.4byte	0x542
 3037 057e 0F       		.uleb128 0xf
 3038 057f 86000000 		.4byte	.LASF190
 3039 0583 01       		.byte	0x1
 3040 0584 14       		.byte	0x14
 3041 0585 00000000 		.4byte	.LFB64
 3042 0589 0C000000 		.4byte	.LFE64-.LFB64
 3043 058d 01       		.uleb128 0x1
 3044 058e 9C       		.byte	0x9c
 3045 058f 10       		.uleb128 0x10
 3046 0590 D7090000 		.4byte	.LASF109
 3047 0594 01       		.byte	0x1
 3048 0595 28       		.byte	0x28
 3049 0596 00000000 		.4byte	.LFB65
 3050 059a B0010000 		.4byte	.LFE65-.LFB65
 3051 059e 01       		.uleb128 0x1
 3052 059f 9C       		.byte	0x9c
 3053 05a0 C1050000 		.4byte	0x5c1
 3054 05a4 11       		.uleb128 0x11
 3055 05a5 29080000 		.4byte	.LASF97
 3056 05a9 01       		.byte	0x1
 3057 05aa 3C       		.byte	0x3c
 3058 05ab C1050000 		.4byte	0x5c1
 3059 05af 02       		.uleb128 0x2
 3060 05b0 91       		.byte	0x91
 3061 05b1 64       		.sleb128 -28
 3062 05b2 11       		.uleb128 0x11
 3063 05b3 E5030000 		.4byte	.LASF98
 3064 05b7 01       		.byte	0x1
 3065 05b8 74       		.byte	0x74
 3066 05b9 81000000 		.4byte	0x81
 3067 05bd 02       		.uleb128 0x2
 3068 05be 91       		.byte	0x91
 3069 05bf 6F       		.sleb128 -17
 3070 05c0 00       		.byte	0
 3071 05c1 07       		.uleb128 0x7
 3072 05c2 99000000 		.4byte	0x99
 3073 05c6 D1050000 		.4byte	0x5d1
 3074 05ca 08       		.uleb128 0x8
 3075 05cb F1000000 		.4byte	0xf1
 3076 05cf 01       		.byte	0x1
 3077 05d0 00       		.byte	0
 3078 05d1 12       		.uleb128 0x12
 3079 05d2 5E040000 		.4byte	.LASF100
 3080 05d6 01       		.byte	0x1
 3081 05d7 7E       		.byte	0x7e
 3082 05d8 68000000 		.4byte	0x68
 3083 05dc 00000000 		.4byte	.LFB66
 3084 05e0 F4000000 		.4byte	.LFE66-.LFB66
 3085 05e4 01       		.uleb128 0x1
 3086 05e5 9C       		.byte	0x9c
 3087 05e6 F9050000 		.4byte	0x5f9
 3088 05ea 11       		.uleb128 0x11
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 72


 3089 05eb 5F060000 		.4byte	.LASF99
 3090 05ef 01       		.byte	0x1
 3091 05f0 B7       		.byte	0xb7
 3092 05f1 81000000 		.4byte	0x81
 3093 05f5 02       		.uleb128 0x2
 3094 05f6 91       		.byte	0x91
 3095 05f7 77       		.sleb128 -9
 3096 05f8 00       		.byte	0
 3097 05f9 13       		.uleb128 0x13
 3098 05fa 5C080000 		.4byte	.LASF191
 3099 05fe 01       		.byte	0x1
 3100 05ff C7       		.byte	0xc7
 3101 0600 00000000 		.4byte	.LFB67
 3102 0604 2A000000 		.4byte	.LFE67-.LFB67
 3103 0608 01       		.uleb128 0x1
 3104 0609 9C       		.byte	0x9c
 3105 060a 14       		.uleb128 0x14
 3106 060b A0030000 		.4byte	.LASF101
 3107 060f 01       		.byte	0x1
 3108 0610 EC       		.byte	0xec
 3109 0611 00000000 		.4byte	.LFB68
 3110 0615 C8000000 		.4byte	.LFE68-.LFB68
 3111 0619 01       		.uleb128 0x1
 3112 061a 9C       		.byte	0x9c
 3113 061b 2E060000 		.4byte	0x62e
 3114 061f 15       		.uleb128 0x15
 3115 0620 E5040000 		.4byte	.LASF102
 3116 0624 01       		.byte	0x1
 3117 0625 EC       		.byte	0xec
 3118 0626 81000000 		.4byte	0x81
 3119 062a 02       		.uleb128 0x2
 3120 062b 91       		.byte	0x91
 3121 062c 77       		.sleb128 -9
 3122 062d 00       		.byte	0
 3123 062e 16       		.uleb128 0x16
 3124 062f CC090000 		.4byte	.LASF106
 3125 0633 01       		.byte	0x1
 3126 0634 1E01     		.2byte	0x11e
 3127 0636 81000000 		.4byte	0x81
 3128 063a 00000000 		.4byte	.LFB69
 3129 063e 48000000 		.4byte	.LFE69-.LFB69
 3130 0642 01       		.uleb128 0x1
 3131 0643 9C       		.byte	0x9c
 3132 0644 67060000 		.4byte	0x667
 3133 0648 17       		.uleb128 0x17
 3134 0649 22050000 		.4byte	.LASF103
 3135 064d 01       		.byte	0x1
 3136 064e 1E01     		.2byte	0x11e
 3137 0650 67060000 		.4byte	0x667
 3138 0654 02       		.uleb128 0x2
 3139 0655 91       		.byte	0x91
 3140 0656 74       		.sleb128 -12
 3141 0657 17       		.uleb128 0x17
 3142 0658 E5040000 		.4byte	.LASF102
 3143 065c 01       		.byte	0x1
 3144 065d 1E01     		.2byte	0x11e
 3145 065f 81000000 		.4byte	0x81
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 73


 3146 0663 02       		.uleb128 0x2
 3147 0664 91       		.byte	0x91
 3148 0665 73       		.sleb128 -13
 3149 0666 00       		.byte	0
 3150 0667 06       		.uleb128 0x6
 3151 0668 04       		.byte	0x4
 3152 0669 00050000 		.4byte	0x500
 3153 066d 18       		.uleb128 0x18
 3154 066e BD060000 		.4byte	.LASF104
 3155 0672 01       		.byte	0x1
 3156 0673 3301     		.2byte	0x133
 3157 0675 00000000 		.4byte	.LFB70
 3158 0679 1E000000 		.4byte	.LFE70-.LFB70
 3159 067d 01       		.uleb128 0x1
 3160 067e 9C       		.byte	0x9c
 3161 067f 93060000 		.4byte	0x693
 3162 0683 17       		.uleb128 0x17
 3163 0684 1B070000 		.4byte	.LASF105
 3164 0688 01       		.byte	0x1
 3165 0689 3301     		.2byte	0x133
 3166 068b 67060000 		.4byte	0x667
 3167 068f 02       		.uleb128 0x2
 3168 0690 91       		.byte	0x91
 3169 0691 74       		.sleb128 -12
 3170 0692 00       		.byte	0
 3171 0693 19       		.uleb128 0x19
 3172 0694 A7050000 		.4byte	.LASF107
 3173 0698 01       		.byte	0x1
 3174 0699 3C01     		.2byte	0x13c
 3175 069b 00050000 		.4byte	0x500
 3176 069f 00000000 		.4byte	.LFB71
 3177 06a3 46000000 		.4byte	.LFE71-.LFB71
 3178 06a7 01       		.uleb128 0x1
 3179 06a8 9C       		.byte	0x9c
 3180 06a9 EA060000 		.4byte	0x6ea
 3181 06ad 17       		.uleb128 0x17
 3182 06ae 1B030000 		.4byte	.LASF86
 3183 06b2 01       		.byte	0x1
 3184 06b3 3C01     		.2byte	0x13c
 3185 06b5 8D000000 		.4byte	0x8d
 3186 06b9 02       		.uleb128 0x2
 3187 06ba 91       		.byte	0x91
 3188 06bb 6A       		.sleb128 -22
 3189 06bc 17       		.uleb128 0x17
 3190 06bd 8A090000 		.4byte	.LASF88
 3191 06c1 01       		.byte	0x1
 3192 06c2 3C01     		.2byte	0x13c
 3193 06c4 81000000 		.4byte	0x81
 3194 06c8 02       		.uleb128 0x2
 3195 06c9 91       		.byte	0x91
 3196 06ca 69       		.sleb128 -23
 3197 06cb 17       		.uleb128 0x17
 3198 06cc 51000000 		.4byte	.LASF89
 3199 06d0 01       		.byte	0x1
 3200 06d1 3C01     		.2byte	0x13c
 3201 06d3 81000000 		.4byte	0x81
 3202 06d7 02       		.uleb128 0x2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 74


 3203 06d8 91       		.byte	0x91
 3204 06d9 68       		.sleb128 -24
 3205 06da 1A       		.uleb128 0x1a
 3206 06db 86080000 		.4byte	.LASF108
 3207 06df 01       		.byte	0x1
 3208 06e0 3F01     		.2byte	0x13f
 3209 06e2 00050000 		.4byte	0x500
 3210 06e6 02       		.uleb128 0x2
 3211 06e7 91       		.byte	0x91
 3212 06e8 70       		.sleb128 -16
 3213 06e9 00       		.byte	0
 3214 06ea 1B       		.uleb128 0x1b
 3215 06eb 2A070000 		.4byte	.LASF110
 3216 06ef 01       		.byte	0x1
 3217 06f0 5501     		.2byte	0x155
 3218 06f2 00000000 		.4byte	.LFB72
 3219 06f6 04010000 		.4byte	.LFE72-.LFB72
 3220 06fa 01       		.uleb128 0x1
 3221 06fb 9C       		.byte	0x9c
 3222 06fc 51070000 		.4byte	0x751
 3223 0700 1A       		.uleb128 0x1a
 3224 0701 7E010000 		.4byte	.LASF111
 3225 0705 01       		.byte	0x1
 3226 0706 5D01     		.2byte	0x15d
 3227 0708 D5010000 		.4byte	0x1d5
 3228 070c 03       		.uleb128 0x3
 3229 070d 91       		.byte	0x91
 3230 070e EC7C     		.sleb128 -404
 3231 0710 1A       		.uleb128 0x1a
 3232 0711 20090000 		.4byte	.LASF112
 3233 0715 01       		.byte	0x1
 3234 0716 6C01     		.2byte	0x16c
 3235 0718 D5010000 		.4byte	0x1d5
 3236 071c 03       		.uleb128 0x3
 3237 071d 91       		.byte	0x91
 3238 071e E879     		.sleb128 -792
 3239 0720 1A       		.uleb128 0x1a
 3240 0721 1F010000 		.4byte	.LASF113
 3241 0725 01       		.byte	0x1
 3242 0726 7001     		.2byte	0x170
 3243 0728 D5010000 		.4byte	0x1d5
 3244 072c 03       		.uleb128 0x3
 3245 072d 91       		.byte	0x91
 3246 072e E476     		.sleb128 -1180
 3247 0730 1A       		.uleb128 0x1a
 3248 0731 8C040000 		.4byte	.LASF114
 3249 0735 01       		.byte	0x1
 3250 0736 7401     		.2byte	0x174
 3251 0738 D5010000 		.4byte	0x1d5
 3252 073c 03       		.uleb128 0x3
 3253 073d 91       		.byte	0x91
 3254 073e E073     		.sleb128 -1568
 3255 0740 1A       		.uleb128 0x1a
 3256 0741 00000000 		.4byte	.LASF115
 3257 0745 01       		.byte	0x1
 3258 0746 7801     		.2byte	0x178
 3259 0748 D5010000 		.4byte	0x1d5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 75


 3260 074c 03       		.uleb128 0x3
 3261 074d 91       		.byte	0x91
 3262 074e DC70     		.sleb128 -1956
 3263 0750 00       		.byte	0
 3264 0751 1C       		.uleb128 0x1c
 3265 0752 E2090000 		.4byte	.LASF192
 3266 0756 01       		.byte	0x1
 3267 0757 8301     		.2byte	0x183
 3268 0759 68000000 		.4byte	0x68
 3269 075d 00000000 		.4byte	.LFB73
 3270 0761 1E000000 		.4byte	.LFE73-.LFB73
 3271 0765 01       		.uleb128 0x1
 3272 0766 9C       		.byte	0x9c
 3273 0767 1D       		.uleb128 0x1d
 3274 0768 E2020000 		.4byte	.LASF116
 3275 076c 01       		.byte	0x1
 3276 076d 9901     		.2byte	0x199
 3277 076f 81000000 		.4byte	0x81
 3278 0773 00000000 		.4byte	.LFB74
 3279 0777 5C040000 		.4byte	.LFE74-.LFB74
 3280 077b 01       		.uleb128 0x1
 3281 077c 9C       		.byte	0x9c
 3282 077d D1080000 		.4byte	0x8d1
 3283 0781 1E       		.uleb128 0x1e
 3284 0782 62000000 		.4byte	.LBB2
 3285 0786 CC030000 		.4byte	.LBE2-.LBB2
 3286 078a 1A       		.uleb128 0x1a
 3287 078b FB050000 		.4byte	.LASF117
 3288 078f 01       		.byte	0x1
 3289 0790 C901     		.2byte	0x1c9
 3290 0792 19030000 		.4byte	0x319
 3291 0796 02       		.uleb128 0x2
 3292 0797 91       		.byte	0x91
 3293 0798 48       		.sleb128 -56
 3294 0799 1A       		.uleb128 0x1a
 3295 079a 34060000 		.4byte	.LASF118
 3296 079e 01       		.byte	0x1
 3297 079f CD01     		.2byte	0x1cd
 3298 07a1 19030000 		.4byte	0x319
 3299 07a5 03       		.uleb128 0x3
 3300 07a6 91       		.byte	0x91
 3301 07a7 B47F     		.sleb128 -76
 3302 07a9 1A       		.uleb128 0x1a
 3303 07aa AD020000 		.4byte	.LASF119
 3304 07ae 01       		.byte	0x1
 3305 07af D201     		.2byte	0x1d2
 3306 07b1 19030000 		.4byte	0x319
 3307 07b5 03       		.uleb128 0x3
 3308 07b6 91       		.byte	0x91
 3309 07b7 A07F     		.sleb128 -96
 3310 07b9 1A       		.uleb128 0x1a
 3311 07ba F1030000 		.4byte	.LASF120
 3312 07be 01       		.byte	0x1
 3313 07bf E501     		.2byte	0x1e5
 3314 07c1 8D000000 		.4byte	0x8d
 3315 07c5 02       		.uleb128 0x2
 3316 07c6 91       		.byte	0x91
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 76


 3317 07c7 66       		.sleb128 -26
 3318 07c8 1A       		.uleb128 0x1a
 3319 07c9 77040000 		.4byte	.LASF121
 3320 07cd 01       		.byte	0x1
 3321 07ce E601     		.2byte	0x1e6
 3322 07d0 19030000 		.4byte	0x319
 3323 07d4 03       		.uleb128 0x3
 3324 07d5 91       		.byte	0x91
 3325 07d6 8C7F     		.sleb128 -116
 3326 07d8 1A       		.uleb128 0x1a
 3327 07d9 14080000 		.4byte	.LASF122
 3328 07dd 01       		.byte	0x1
 3329 07de FB01     		.2byte	0x1fb
 3330 07e0 D1080000 		.4byte	0x8d1
 3331 07e4 03       		.uleb128 0x3
 3332 07e5 91       		.byte	0x91
 3333 07e6 A475     		.sleb128 -1372
 3334 07e8 1A       		.uleb128 0x1a
 3335 07e9 CC080000 		.4byte	.LASF31
 3336 07ed 01       		.byte	0x1
 3337 07ee FC01     		.2byte	0x1fc
 3338 07f0 81000000 		.4byte	0x81
 3339 07f4 02       		.uleb128 0x2
 3340 07f5 91       		.byte	0x91
 3341 07f6 65       		.sleb128 -27
 3342 07f7 1A       		.uleb128 0x1a
 3343 07f8 D5070000 		.4byte	.LASF123
 3344 07fc 01       		.byte	0x1
 3345 07fd 0302     		.2byte	0x203
 3346 07ff F8000000 		.4byte	0xf8
 3347 0803 02       		.uleb128 0x2
 3348 0804 91       		.byte	0x91
 3349 0805 6C       		.sleb128 -20
 3350 0806 1A       		.uleb128 0x1a
 3351 0807 AF010000 		.4byte	.LASF124
 3352 080b 01       		.byte	0x1
 3353 080c 0702     		.2byte	0x207
 3354 080e A5000000 		.4byte	0xa5
 3355 0812 02       		.uleb128 0x2
 3356 0813 91       		.byte	0x91
 3357 0814 64       		.sleb128 -28
 3358 0815 1A       		.uleb128 0x1a
 3359 0816 EB020000 		.4byte	.LASF125
 3360 081a 01       		.byte	0x1
 3361 081b 3702     		.2byte	0x237
 3362 081d 4C000000 		.4byte	0x4c
 3363 0821 02       		.uleb128 0x2
 3364 0822 91       		.byte	0x91
 3365 0823 5C       		.sleb128 -36
 3366 0824 1F       		.uleb128 0x1f
 3367 0825 F0000000 		.4byte	.LBB3
 3368 0829 2C000000 		.4byte	.LBE3-.LBB3
 3369 082d 51080000 		.4byte	0x851
 3370 0831 1A       		.uleb128 0x1a
 3371 0832 56070000 		.4byte	.LASF126
 3372 0836 01       		.byte	0x1
 3373 0837 DA01     		.2byte	0x1da
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 77


 3374 0839 8D000000 		.4byte	0x8d
 3375 083d 02       		.uleb128 0x2
 3376 083e 91       		.byte	0x91
 3377 083f 68       		.sleb128 -24
 3378 0840 1A       		.uleb128 0x1a
 3379 0841 30020000 		.4byte	.LASF127
 3380 0845 01       		.byte	0x1
 3381 0846 DB01     		.2byte	0x1db
 3382 0848 19030000 		.4byte	0x319
 3383 084c 03       		.uleb128 0x3
 3384 084d 91       		.byte	0x91
 3385 084e F87E     		.sleb128 -136
 3386 0850 00       		.byte	0
 3387 0851 1F       		.uleb128 0x1f
 3388 0852 1E010000 		.4byte	.LBB4
 3389 0856 20000000 		.4byte	.LBE4-.LBB4
 3390 085a 6F080000 		.4byte	0x86f
 3391 085e 1A       		.uleb128 0x1a
 3392 085f 30020000 		.4byte	.LASF127
 3393 0863 01       		.byte	0x1
 3394 0864 DF01     		.2byte	0x1df
 3395 0866 19030000 		.4byte	0x319
 3396 086a 03       		.uleb128 0x3
 3397 086b 91       		.byte	0x91
 3398 086c E47E     		.sleb128 -156
 3399 086e 00       		.byte	0
 3400 086f 1F       		.uleb128 0x1f
 3401 0870 5E020000 		.4byte	.LBB5
 3402 0874 4C010000 		.4byte	.LBE5-.LBB5
 3403 0878 A6080000 		.4byte	0x8a6
 3404 087c 1A       		.uleb128 0x1a
 3405 087d B3050000 		.4byte	.LASF128
 3406 0881 01       		.byte	0x1
 3407 0882 0C02     		.2byte	0x20c
 3408 0884 A5000000 		.4byte	0xa5
 3409 0888 02       		.uleb128 0x2
 3410 0889 91       		.byte	0x91
 3411 088a 6B       		.sleb128 -21
 3412 088b 1E       		.uleb128 0x1e
 3413 088c 66020000 		.4byte	.LBB6
 3414 0890 28010000 		.4byte	.LBE6-.LBB6
 3415 0894 1A       		.uleb128 0x1a
 3416 0895 BE030000 		.4byte	.LASF129
 3417 0899 01       		.byte	0x1
 3418 089a 0E02     		.2byte	0x20e
 3419 089c E1080000 		.4byte	0x8e1
 3420 08a0 03       		.uleb128 0x3
 3421 08a1 91       		.byte	0x91
 3422 08a2 EC76     		.sleb128 -1172
 3423 08a4 00       		.byte	0
 3424 08a5 00       		.byte	0
 3425 08a6 1E       		.uleb128 0x1e
 3426 08a7 C4030000 		.4byte	.LBB7
 3427 08ab 3A000000 		.4byte	.LBE7-.LBB7
 3428 08af 1A       		.uleb128 0x1a
 3429 08b0 BB020000 		.4byte	.LASF130
 3430 08b4 01       		.byte	0x1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 78


 3431 08b5 2E02     		.2byte	0x22e
 3432 08b7 68000000 		.4byte	0x68
 3433 08bb 02       		.uleb128 0x2
 3434 08bc 91       		.byte	0x91
 3435 08bd 60       		.sleb128 -32
 3436 08be 1A       		.uleb128 0x1a
 3437 08bf C8060000 		.4byte	.LASF131
 3438 08c3 01       		.byte	0x1
 3439 08c4 2F02     		.2byte	0x22f
 3440 08c6 F2080000 		.4byte	0x8f2
 3441 08ca 03       		.uleb128 0x3
 3442 08cb 91       		.byte	0x91
 3443 08cc D87E     		.sleb128 -168
 3444 08ce 00       		.byte	0
 3445 08cf 00       		.byte	0
 3446 08d0 00       		.byte	0
 3447 08d1 07       		.uleb128 0x7
 3448 08d2 E3000000 		.4byte	0xe3
 3449 08d6 E1080000 		.4byte	0x8e1
 3450 08da 08       		.uleb128 0x8
 3451 08db F1000000 		.4byte	0xf1
 3452 08df C7       		.byte	0xc7
 3453 08e0 00       		.byte	0
 3454 08e1 07       		.uleb128 0x7
 3455 08e2 E3000000 		.4byte	0xe3
 3456 08e6 F2080000 		.4byte	0x8f2
 3457 08ea 20       		.uleb128 0x20
 3458 08eb F1000000 		.4byte	0xf1
 3459 08ef E803     		.2byte	0x3e8
 3460 08f1 00       		.byte	0
 3461 08f2 07       		.uleb128 0x7
 3462 08f3 E3000000 		.4byte	0xe3
 3463 08f7 02090000 		.4byte	0x902
 3464 08fb 08       		.uleb128 0x8
 3465 08fc F1000000 		.4byte	0xf1
 3466 0900 09       		.byte	0x9
 3467 0901 00       		.byte	0
 3468 0902 1D       		.uleb128 0x1d
 3469 0903 3B060000 		.4byte	.LASF132
 3470 0907 01       		.byte	0x1
 3471 0908 4C02     		.2byte	0x24c
 3472 090a 81000000 		.4byte	0x81
 3473 090e 00000000 		.4byte	.LFB75
 3474 0912 44000000 		.4byte	.LFE75-.LFB75
 3475 0916 01       		.uleb128 0x1
 3476 0917 9C       		.byte	0x9c
 3477 0918 36090000 		.4byte	0x936
 3478 091c 1E       		.uleb128 0x1e
 3479 091d 20000000 		.4byte	.LBB8
 3480 0921 1A000000 		.4byte	.LBE8-.LBB8
 3481 0925 1A       		.uleb128 0x1a
 3482 0926 EB020000 		.4byte	.LASF125
 3483 092a 01       		.byte	0x1
 3484 092b 5702     		.2byte	0x257
 3485 092d 4C000000 		.4byte	0x4c
 3486 0931 02       		.uleb128 0x2
 3487 0932 91       		.byte	0x91
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 79


 3488 0933 74       		.sleb128 -12
 3489 0934 00       		.byte	0
 3490 0935 00       		.byte	0
 3491 0936 1D       		.uleb128 0x1d
 3492 0937 1F040000 		.4byte	.LASF133
 3493 093b 01       		.byte	0x1
 3494 093c 6C02     		.2byte	0x26c
 3495 093e 81000000 		.4byte	0x81
 3496 0942 00000000 		.4byte	.LFB76
 3497 0946 A4020000 		.4byte	.LFE76-.LFB76
 3498 094a 01       		.uleb128 0x1
 3499 094b 9C       		.byte	0x9c
 3500 094c D7090000 		.4byte	0x9d7
 3501 0950 1A       		.uleb128 0x1a
 3502 0951 7A050000 		.4byte	.LASF55
 3503 0955 01       		.byte	0x1
 3504 0956 6F02     		.2byte	0x26f
 3505 0958 4C000000 		.4byte	0x4c
 3506 095c 02       		.uleb128 0x2
 3507 095d 91       		.byte	0x91
 3508 095e 6C       		.sleb128 -20
 3509 095f 1A       		.uleb128 0x1a
 3510 0960 DB070000 		.4byte	.LASF134
 3511 0964 01       		.byte	0x1
 3512 0965 7002     		.2byte	0x270
 3513 0967 D7090000 		.4byte	0x9d7
 3514 096b 02       		.uleb128 0x2
 3515 096c 91       		.byte	0x91
 3516 096d 4C       		.sleb128 -52
 3517 096e 1A       		.uleb128 0x1a
 3518 096f 4B030000 		.4byte	.LASF54
 3519 0973 01       		.byte	0x1
 3520 0974 7402     		.2byte	0x274
 3521 0976 19030000 		.4byte	0x319
 3522 097a 03       		.uleb128 0x3
 3523 097b 91       		.byte	0x91
 3524 097c B87F     		.sleb128 -72
 3525 097e 1A       		.uleb128 0x1a
 3526 097f 210A0000 		.4byte	.LASF135
 3527 0983 01       		.byte	0x1
 3528 0984 7802     		.2byte	0x278
 3529 0986 E7090000 		.4byte	0x9e7
 3530 098a 03       		.uleb128 0x3
 3531 098b 91       		.byte	0x91
 3532 098c B07F     		.sleb128 -80
 3533 098e 1A       		.uleb128 0x1a
 3534 098f C9030000 		.4byte	.LASF136
 3535 0993 01       		.byte	0x1
 3536 0994 9902     		.2byte	0x299
 3537 0996 25020000 		.4byte	0x225
 3538 099a 03       		.uleb128 0x3
 3539 099b 91       		.byte	0x91
 3540 099c 9C7F     		.sleb128 -100
 3541 099e 1F       		.uleb128 0x1f
 3542 099f 46000000 		.4byte	.LBB9
 3543 09a3 78000000 		.4byte	.LBE9-.LBB9
 3544 09a7 BC090000 		.4byte	0x9bc
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 80


 3545 09ab 1A       		.uleb128 0x1a
 3546 09ac 3F080000 		.4byte	.LASF137
 3547 09b0 01       		.byte	0x1
 3548 09b1 8102     		.2byte	0x281
 3549 09b3 BC040000 		.4byte	0x4bc
 3550 09b7 03       		.uleb128 0x3
 3551 09b8 91       		.byte	0x91
 3552 09b9 807F     		.sleb128 -128
 3553 09bb 00       		.byte	0
 3554 09bc 1E       		.uleb128 0x1e
 3555 09bd 4A010000 		.4byte	.LBB10
 3556 09c1 EE000000 		.4byte	.LBE10-.LBB10
 3557 09c5 1A       		.uleb128 0x1a
 3558 09c6 B3080000 		.4byte	.LASF138
 3559 09ca 01       		.byte	0x1
 3560 09cb B502     		.2byte	0x2b5
 3561 09cd 69020000 		.4byte	0x269
 3562 09d1 03       		.uleb128 0x3
 3563 09d2 91       		.byte	0x91
 3564 09d3 F07E     		.sleb128 -144
 3565 09d5 00       		.byte	0
 3566 09d6 00       		.byte	0
 3567 09d7 07       		.uleb128 0x7
 3568 09d8 E3000000 		.4byte	0xe3
 3569 09dc E7090000 		.4byte	0x9e7
 3570 09e0 08       		.uleb128 0x8
 3571 09e1 F1000000 		.4byte	0xf1
 3572 09e5 1F       		.byte	0x1f
 3573 09e6 00       		.byte	0
 3574 09e7 07       		.uleb128 0x7
 3575 09e8 E3000000 		.4byte	0xe3
 3576 09ec F7090000 		.4byte	0x9f7
 3577 09f0 08       		.uleb128 0x8
 3578 09f1 F1000000 		.4byte	0xf1
 3579 09f5 04       		.byte	0x4
 3580 09f6 00       		.byte	0
 3581 09f7 16       		.uleb128 0x16
 3582 09f8 8C030000 		.4byte	.LASF139
 3583 09fc 01       		.byte	0x1
 3584 09fd DD02     		.2byte	0x2dd
 3585 09ff 81000000 		.4byte	0x81
 3586 0a03 00000000 		.4byte	.LFB77
 3587 0a07 74000000 		.4byte	.LFE77-.LFB77
 3588 0a0b 01       		.uleb128 0x1
 3589 0a0c 9C       		.byte	0x9c
 3590 0a0d 3D0A0000 		.4byte	0xa3d
 3591 0a11 17       		.uleb128 0x17
 3592 0a12 7A050000 		.4byte	.LASF55
 3593 0a16 01       		.byte	0x1
 3594 0a17 DD02     		.2byte	0x2dd
 3595 0a19 4C000000 		.4byte	0x4c
 3596 0a1d 02       		.uleb128 0x2
 3597 0a1e 91       		.byte	0x91
 3598 0a1f 64       		.sleb128 -28
 3599 0a20 21       		.uleb128 0x21
 3600 0a21 7400     		.ascii	"t\000"
 3601 0a23 01       		.byte	0x1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 81


 3602 0a24 E402     		.2byte	0x2e4
 3603 0a26 3D0A0000 		.4byte	0xa3d
 3604 0a2a 02       		.uleb128 0x2
 3605 0a2b 91       		.byte	0x91
 3606 0a2c 74       		.sleb128 -12
 3607 0a2d 1A       		.uleb128 0x1a
 3608 0a2e 53050000 		.4byte	.LASF140
 3609 0a32 01       		.byte	0x1
 3610 0a33 E902     		.2byte	0x2e9
 3611 0a35 77010000 		.4byte	0x177
 3612 0a39 02       		.uleb128 0x2
 3613 0a3a 91       		.byte	0x91
 3614 0a3b 68       		.sleb128 -24
 3615 0a3c 00       		.byte	0
 3616 0a3d 06       		.uleb128 0x6
 3617 0a3e 04       		.byte	0x4
 3618 0a3f 74020000 		.4byte	0x274
 3619 0a43 16       		.uleb128 0x16
 3620 0a44 2A030000 		.4byte	.LASF141
 3621 0a48 01       		.byte	0x1
 3622 0a49 0603     		.2byte	0x306
 3623 0a4b 81000000 		.4byte	0x81
 3624 0a4f 00000000 		.4byte	.LFB78
 3625 0a53 38010000 		.4byte	.LFE78-.LFB78
 3626 0a57 01       		.uleb128 0x1
 3627 0a58 9C       		.byte	0x9c
 3628 0a59 BC0A0000 		.4byte	0xabc
 3629 0a5d 17       		.uleb128 0x17
 3630 0a5e 51030000 		.4byte	.LASF142
 3631 0a62 01       		.byte	0x1
 3632 0a63 0603     		.2byte	0x306
 3633 0a65 F8000000 		.4byte	0xf8
 3634 0a69 03       		.uleb128 0x3
 3635 0a6a 91       		.byte	0x91
 3636 0a6b 9C7E     		.sleb128 -228
 3637 0a6d 17       		.uleb128 0x17
 3638 0a6e 46030000 		.4byte	.LASF143
 3639 0a72 01       		.byte	0x1
 3640 0a73 0603     		.2byte	0x306
 3641 0a75 68000000 		.4byte	0x68
 3642 0a79 03       		.uleb128 0x3
 3643 0a7a 91       		.byte	0x91
 3644 0a7b 987E     		.sleb128 -232
 3645 0a7d 17       		.uleb128 0x17
 3646 0a7e 97060000 		.4byte	.LASF144
 3647 0a82 01       		.byte	0x1
 3648 0a83 0603     		.2byte	0x306
 3649 0a85 F8000000 		.4byte	0xf8
 3650 0a89 03       		.uleb128 0x3
 3651 0a8a 91       		.byte	0x91
 3652 0a8b 947E     		.sleb128 -236
 3653 0a8d 1A       		.uleb128 0x1a
 3654 0a8e 12020000 		.4byte	.LASF145
 3655 0a92 01       		.byte	0x1
 3656 0a93 0803     		.2byte	0x308
 3657 0a95 81000000 		.4byte	0x81
 3658 0a99 02       		.uleb128 0x2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 82


 3659 0a9a 91       		.byte	0x91
 3660 0a9b 77       		.sleb128 -9
 3661 0a9c 1A       		.uleb128 0x1a
 3662 0a9d 3C000000 		.4byte	.LASF146
 3663 0aa1 01       		.byte	0x1
 3664 0aa2 0F03     		.2byte	0x30f
 3665 0aa4 BC0A0000 		.4byte	0xabc
 3666 0aa8 02       		.uleb128 0x2
 3667 0aa9 91       		.byte	0x91
 3668 0aaa 68       		.sleb128 -24
 3669 0aab 1A       		.uleb128 0x1a
 3670 0aac 14080000 		.4byte	.LASF122
 3671 0ab0 01       		.byte	0x1
 3672 0ab1 1703     		.2byte	0x317
 3673 0ab3 D1080000 		.4byte	0x8d1
 3674 0ab7 03       		.uleb128 0x3
 3675 0ab8 91       		.byte	0x91
 3676 0ab9 A07E     		.sleb128 -224
 3677 0abb 00       		.byte	0
 3678 0abc 07       		.uleb128 0x7
 3679 0abd E3000000 		.4byte	0xe3
 3680 0ac1 CC0A0000 		.4byte	0xacc
 3681 0ac5 08       		.uleb128 0x8
 3682 0ac6 F1000000 		.4byte	0xf1
 3683 0aca 0B       		.byte	0xb
 3684 0acb 00       		.byte	0
 3685 0acc 22       		.uleb128 0x22
 3686 0acd 71010000 		.4byte	.LASF147
 3687 0ad1 0D       		.byte	0xd
 3688 0ad2 1207     		.2byte	0x712
 3689 0ad4 D80A0000 		.4byte	0xad8
 3690 0ad8 0C       		.uleb128 0xc
 3691 0ad9 76000000 		.4byte	0x76
 3692 0add 23       		.uleb128 0x23
 3693 0ade 2C000000 		.4byte	.LASF148
 3694 0ae2 09       		.byte	0x9
 3695 0ae3 11       		.byte	0x11
 3696 0ae4 61040000 		.4byte	0x461
 3697 0ae8 05       		.uleb128 0x5
 3698 0ae9 03       		.byte	0x3
 3699 0aea 00000000 		.4byte	buffer_overflow
 3700 0aee 23       		.uleb128 0x23
 3701 0aef EF040000 		.4byte	.LASF149
 3702 0af3 09       		.byte	0x9
 3703 0af4 22       		.byte	0x22
 3704 0af5 8D000000 		.4byte	0x8d
 3705 0af9 05       		.uleb128 0x5
 3706 0afa 03       		.byte	0x3
 3707 0afb 00000000 		.4byte	dataPointsInStack
 3708 0aff 23       		.uleb128 0x23
 3709 0b00 FA080000 		.4byte	.LASF150
 3710 0b04 09       		.byte	0x9
 3711 0b05 23       		.byte	0x23
 3712 0b06 8D000000 		.4byte	0x8d
 3713 0b0a 05       		.uleb128 0x5
 3714 0b0b 03       		.byte	0x3
 3715 0b0c 00000000 		.4byte	dataPointsInStackDesired
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 83


 3716 0b10 07       		.uleb128 0x7
 3717 0b11 29030000 		.4byte	0x329
 3718 0b15 200B0000 		.4byte	0xb20
 3719 0b19 08       		.uleb128 0x8
 3720 0b1a F1000000 		.4byte	0xf1
 3721 0b1e 95       		.byte	0x95
 3722 0b1f 00       		.byte	0
 3723 0b20 23       		.uleb128 0x23
 3724 0b21 30040000 		.4byte	.LASF151
 3725 0b25 09       		.byte	0x9
 3726 0b26 24       		.byte	0x24
 3727 0b27 100B0000 		.4byte	0xb10
 3728 0b2b 05       		.uleb128 0x5
 3729 0b2c 03       		.byte	0x3
 3730 0b2d 00000000 		.4byte	data
 3731 0b31 23       		.uleb128 0x23
 3732 0b32 58010000 		.4byte	.LASF152
 3733 0b36 0A       		.byte	0xa
 3734 0b37 20       		.byte	0x20
 3735 0b38 81000000 		.4byte	0x81
 3736 0b3c 05       		.uleb128 0x5
 3737 0b3d 03       		.byte	0x3
 3738 0b3e 00000000 		.4byte	modem_state
 3739 0b42 23       		.uleb128 0x23
 3740 0b43 AC040000 		.4byte	.LASF153
 3741 0b47 0A       		.byte	0xa
 3742 0b48 71       		.byte	0x71
 3743 0b49 BD000000 		.4byte	0xbd
 3744 0b4d 05       		.uleb128 0x5
 3745 0b4e 03       		.byte	0x3
 3746 0b4f 00000000 		.4byte	modem_start_time_stamp
 3747 0b53 23       		.uleb128 0x23
 3748 0b54 46040000 		.4byte	.LASF91
 3749 0b58 0A       		.byte	0xa
 3750 0b59 72       		.byte	0x72
 3751 0b5a 61030000 		.4byte	0x361
 3752 0b5e 05       		.uleb128 0x5
 3753 0b5f 03       		.byte	0x3
 3754 0b60 00000000 		.4byte	modem_info
 3755 0b64 23       		.uleb128 0x23
 3756 0b65 4C010000 		.4byte	.LASF154
 3757 0b69 0A       		.byte	0xa
 3758 0b6a 73       		.byte	0x73
 3759 0b6b D5030000 		.4byte	0x3d5
 3760 0b6f 05       		.uleb128 0x5
 3761 0b70 03       		.byte	0x3
 3762 0b71 00000000 		.4byte	modem_stats
 3763 0b75 23       		.uleb128 0x23
 3764 0b76 92050000 		.4byte	.LASF155
 3765 0b7a 0A       		.byte	0xa
 3766 0b7b 74       		.byte	0x74
 3767 0b7c 68040000 		.4byte	0x468
 3768 0b80 05       		.uleb128 0x5
 3769 0b81 03       		.byte	0x3
 3770 0b82 00000000 		.4byte	updatable_parameters
 3771 0b86 23       		.uleb128 0x23
 3772 0b87 7C030000 		.4byte	.LASF156
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 84


 3773 0b8b 0E       		.byte	0xe
 3774 0b8c 07       		.byte	0x7
 3775 0b8d 81000000 		.4byte	0x81
 3776 0b91 05       		.uleb128 0x5
 3777 0b92 03       		.byte	0x3
 3778 0b93 00000000 		.4byte	App_LED_enabled
 3779 0b97 23       		.uleb128 0x23
 3780 0b98 090A0000 		.4byte	.LASF157
 3781 0b9c 0E       		.byte	0xe
 3782 0b9d 08       		.byte	0x8
 3783 0b9e 63050000 		.4byte	0x563
 3784 0ba2 05       		.uleb128 0x5
 3785 0ba3 03       		.byte	0x3
 3786 0ba4 00000000 		.4byte	app_led_inbox
 3787 0ba8 23       		.uleb128 0x23
 3788 0ba9 B6070000 		.4byte	.LASF158
 3789 0bad 0B       		.byte	0xb
 3790 0bae 25       		.byte	0x25
 3791 0baf 63050000 		.4byte	0x563
 3792 0bb3 05       		.uleb128 0x5
 3793 0bb4 03       		.byte	0x3
 3794 0bb5 00000000 		.4byte	level_sensor_inbox
 3795 0bb9 23       		.uleb128 0x23
 3796 0bba E5080000 		.4byte	.LASF159
 3797 0bbe 0B       		.byte	0xb
 3798 0bbf 27       		.byte	0x27
 3799 0bc0 61040000 		.4byte	0x461
 3800 0bc4 05       		.uleb128 0x5
 3801 0bc5 03       		.byte	0x3
 3802 0bc6 00000000 		.4byte	level_sensor_enabled
 3803 0bca 23       		.uleb128 0x23
 3804 0bcb 21020000 		.4byte	.LASF160
 3805 0bcf 0F       		.byte	0xf
 3806 0bd0 2A       		.byte	0x2a
 3807 0bd1 C9000000 		.4byte	0xc9
 3808 0bd5 05       		.uleb128 0x5
 3809 0bd6 03       		.byte	0x3
 3810 0bd7 00000000 		.4byte	valve_diameter
 3811 0bdb 23       		.uleb128 0x23
 3812 0bdc 7B000000 		.4byte	.LASF161
 3813 0be0 0F       		.byte	0xf
 3814 0be1 2B       		.byte	0x2b
 3815 0be2 F2080000 		.4byte	0x8f2
 3816 0be6 05       		.uleb128 0x5
 3817 0be7 03       		.byte	0x3
 3818 0be8 00000000 		.4byte	valve_type
 3819 0bec 23       		.uleb128 0x23
 3820 0bed BE080000 		.4byte	.LASF162
 3821 0bf1 0F       		.byte	0xf
 3822 0bf2 30       		.byte	0x30
 3823 0bf3 81000000 		.4byte	0x81
 3824 0bf7 05       		.uleb128 0x5
 3825 0bf8 03       		.byte	0x3
 3826 0bf9 00000000 		.4byte	valve_enabled
 3827 0bfd 23       		.uleb128 0x23
 3828 0bfe 6D090000 		.4byte	.LASF163
 3829 0c02 0F       		.byte	0xf
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 85


 3830 0c03 31       		.byte	0x31
 3831 0c04 63050000 		.4byte	0x563
 3832 0c08 05       		.uleb128 0x5
 3833 0c09 03       		.byte	0x3
 3834 0c0a 00000000 		.4byte	valve_inbox
 3835 0c0e 23       		.uleb128 0x23
 3836 0c0f 8D010000 		.4byte	.LASF164
 3837 0c13 10       		.byte	0x10
 3838 0c14 69       		.byte	0x69
 3839 0c15 81000000 		.4byte	0x81
 3840 0c19 05       		.uleb128 0x5
 3841 0c1a 03       		.byte	0x3
 3842 0c1b 00000000 		.4byte	autosampler_enabled
 3843 0c1f 23       		.uleb128 0x23
 3844 0c20 01050000 		.4byte	.LASF165
 3845 0c24 10       		.byte	0x10
 3846 0c25 6B       		.byte	0x6b
 3847 0c26 63050000 		.4byte	0x563
 3848 0c2a 05       		.uleb128 0x5
 3849 0c2b 03       		.byte	0x3
 3850 0c2c 00000000 		.4byte	autosampler_inbox
 3851 0c30 07       		.uleb128 0x7
 3852 0c31 E3000000 		.4byte	0xe3
 3853 0c35 410C0000 		.4byte	0xc41
 3854 0c39 20       		.uleb128 0x20
 3855 0c3a F1000000 		.4byte	0xf1
 3856 0c3e 0F27     		.2byte	0x270f
 3857 0c40 00       		.byte	0
 3858 0c41 23       		.uleb128 0x23
 3859 0c42 F5090000 		.4byte	.LASF166
 3860 0c46 0C       		.byte	0xc
 3861 0c47 1F       		.byte	0x1f
 3862 0c48 300C0000 		.4byte	0xc30
 3863 0c4c 05       		.uleb128 0x5
 3864 0c4d 03       		.byte	0x3
 3865 0c4e 00000000 		.4byte	http_request
 3866 0c52 23       		.uleb128 0x23
 3867 0c53 52090000 		.4byte	.LASF167
 3868 0c57 0C       		.byte	0xc
 3869 0c58 20       		.byte	0x20
 3870 0c59 300C0000 		.4byte	0xc30
 3871 0c5d 05       		.uleb128 0x5
 3872 0c5e 03       		.byte	0x3
 3873 0c5f 00000000 		.4byte	http_body
 3874 0c63 23       		.uleb128 0x23
 3875 0c64 09080000 		.4byte	.LASF168
 3876 0c68 0C       		.byte	0xc
 3877 0c69 21       		.byte	0x21
 3878 0c6a D1080000 		.4byte	0x8d1
 3879 0c6e 05       		.uleb128 0x5
 3880 0c6f 03       		.byte	0x3
 3881 0c70 00000000 		.4byte	http_route
 3882 0c74 23       		.uleb128 0x23
 3883 0c75 03070000 		.4byte	.LASF169
 3884 0c79 0C       		.byte	0xc
 3885 0c7a 48       		.byte	0x48
 3886 0c7b 37050000 		.4byte	0x537
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 86


 3887 0c7f 05       		.uleb128 0x5
 3888 0c80 03       		.byte	0x3
 3889 0c81 00000000 		.4byte	system_info
 3890 0c85 23       		.uleb128 0x23
 3891 0c86 9D060000 		.4byte	.LASF170
 3892 0c8a 0C       		.byte	0xc
 3893 0c8b 5A       		.byte	0x5a
 3894 0c8c 73050000 		.4byte	0x573
 3895 0c90 05       		.uleb128 0x5
 3896 0c91 03       		.byte	0x3
 3897 0c92 00000000 		.4byte	system_settings
 3898 0c96 23       		.uleb128 0x23
 3899 0c97 64010000 		.4byte	.LASF171
 3900 0c9b 0C       		.byte	0xc
 3901 0c9c 76       		.byte	0x76
 3902 0c9d 00050000 		.4byte	0x500
 3903 0ca1 05       		.uleb128 0x5
 3904 0ca2 03       		.byte	0x3
 3905 0ca3 00000000 		.4byte	alarmMeasure
 3906 0ca7 23       		.uleb128 0x23
 3907 0ca8 BC010000 		.4byte	.LASF172
 3908 0cac 0C       		.byte	0xc
 3909 0cad 77       		.byte	0x77
 3910 0cae 81000000 		.4byte	0x81
 3911 0cb2 05       		.uleb128 0x5
 3912 0cb3 03       		.byte	0x3
 3913 0cb4 00000000 		.4byte	timeToMeasure
 3914 0cb8 23       		.uleb128 0x23
 3915 0cb9 5E030000 		.4byte	.LASF173
 3916 0cbd 0C       		.byte	0xc
 3917 0cbe 78       		.byte	0x78
 3918 0cbf 00050000 		.4byte	0x500
 3919 0cc3 05       		.uleb128 0x5
 3920 0cc4 03       		.byte	0x3
 3921 0cc5 00000000 		.4byte	alarmSync
 3922 0cc9 23       		.uleb128 0x23
 3923 0cca E2010000 		.4byte	.LASF174
 3924 0cce 0C       		.byte	0xc
 3925 0ccf 79       		.byte	0x79
 3926 0cd0 81000000 		.4byte	0x81
 3927 0cd4 05       		.uleb128 0x5
 3928 0cd5 03       		.byte	0x3
 3929 0cd6 00000000 		.4byte	timeToSync
 3930 0cda 23       		.uleb128 0x23
 3931 0cdb 63050000 		.4byte	.LASF175
 3932 0cdf 0C       		.byte	0xc
 3933 0ce0 7A       		.byte	0x7a
 3934 0ce1 81000000 		.4byte	0x81
 3935 0ce5 05       		.uleb128 0x5
 3936 0ce6 03       		.byte	0x3
 3937 0ce7 00000000 		.4byte	timeToSycnRemoteParams
 3938 0ceb 24       		.uleb128 0x24
 3939 0cec 68657900 		.ascii	"hey\000"
 3940 0cf0 0C       		.byte	0xc
 3941 0cf1 7B       		.byte	0x7b
 3942 0cf2 81000000 		.4byte	0x81
 3943 0cf6 05       		.uleb128 0x5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 87


 3944 0cf7 03       		.byte	0x3
 3945 0cf8 00000000 		.4byte	hey
 3946 0cfc 23       		.uleb128 0x23
 3947 0cfd A0040000 		.4byte	.LASF176
 3948 0d01 0C       		.byte	0xc
 3949 0d02 7F       		.byte	0x7f
 3950 0d03 00050000 		.4byte	0x500
 3951 0d07 05       		.uleb128 0x5
 3952 0d08 03       		.byte	0x3
 3953 0d09 00000000 		.4byte	alarmAppLED
 3954 0d0d 23       		.uleb128 0x23
 3955 0d0e C5020000 		.4byte	.LASF177
 3956 0d12 0C       		.byte	0xc
 3957 0d13 80       		.byte	0x80
 3958 0d14 81000000 		.4byte	0x81
 3959 0d18 05       		.uleb128 0x5
 3960 0d19 03       		.byte	0x3
 3961 0d1a 00000000 		.4byte	timeToAppLED
 3962 0d1e 23       		.uleb128 0x23
 3963 0d1f 8B070000 		.4byte	.LASF178
 3964 0d23 0C       		.byte	0xc
 3965 0d24 82       		.byte	0x82
 3966 0d25 00050000 		.4byte	0x500
 3967 0d29 05       		.uleb128 0x5
 3968 0d2a 03       		.byte	0x3
 3969 0d2b 00000000 		.4byte	alarmLevelSensor
 3970 0d2f 23       		.uleb128 0x23
 3971 0d30 D3080000 		.4byte	.LASF179
 3972 0d34 0C       		.byte	0xc
 3973 0d35 83       		.byte	0x83
 3974 0d36 81000000 		.4byte	0x81
 3975 0d3a 05       		.uleb128 0x5
 3976 0d3b 03       		.byte	0x3
 3977 0d3c 00000000 		.4byte	timeToLevelSensor
 3978 0d40 23       		.uleb128 0x23
 3979 0d41 4F020000 		.4byte	.LASF180
 3980 0d45 0C       		.byte	0xc
 3981 0d46 85       		.byte	0x85
 3982 0d47 00050000 		.4byte	0x500
 3983 0d4b 05       		.uleb128 0x5
 3984 0d4c 03       		.byte	0x3
 3985 0d4d 00000000 		.4byte	alarmDownstreamLevelSensor
 3986 0d51 23       		.uleb128 0x23
 3987 0d52 36090000 		.4byte	.LASF181
 3988 0d56 0C       		.byte	0xc
 3989 0d57 86       		.byte	0x86
 3990 0d58 81000000 		.4byte	0x81
 3991 0d5c 05       		.uleb128 0x5
 3992 0d5d 03       		.byte	0x3
 3993 0d5e 00000000 		.4byte	timeToDownstreamLevelSensor
 3994 0d62 23       		.uleb128 0x23
 3995 0d63 F9070000 		.4byte	.LASF182
 3996 0d67 0C       		.byte	0xc
 3997 0d68 88       		.byte	0x88
 3998 0d69 00050000 		.4byte	0x500
 3999 0d6d 05       		.uleb128 0x5
 4000 0d6e 03       		.byte	0x3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 88


 4001 0d6f 00000000 		.4byte	alarmValve
 4002 0d73 23       		.uleb128 0x23
 4003 0d74 13060000 		.4byte	.LASF183
 4004 0d78 0C       		.byte	0xc
 4005 0d79 89       		.byte	0x89
 4006 0d7a 81000000 		.4byte	0x81
 4007 0d7e 05       		.uleb128 0x5
 4008 0d7f 03       		.byte	0x3
 4009 0d80 00000000 		.4byte	timeToValve
 4010 0d84 23       		.uleb128 0x23
 4011 0d85 5C090000 		.4byte	.LASF184
 4012 0d89 0C       		.byte	0xc
 4013 0d8a 8B       		.byte	0x8b
 4014 0d8b 00050000 		.4byte	0x500
 4015 0d8f 05       		.uleb128 0x5
 4016 0d90 03       		.byte	0x3
 4017 0d91 00000000 		.4byte	alarmAutosampler
 4018 0d95 23       		.uleb128 0x23
 4019 0d96 69000000 		.4byte	.LASF185
 4020 0d9a 0C       		.byte	0xc
 4021 0d9b 8C       		.byte	0x8c
 4022 0d9c 81000000 		.4byte	0x81
 4023 0da0 05       		.uleb128 0x5
 4024 0da1 03       		.byte	0x3
 4025 0da2 00000000 		.4byte	timeToAutosampler
 4026 0da6 07       		.uleb128 0x7
 4027 0da7 E3000000 		.4byte	0xe3
 4028 0dab B60D0000 		.4byte	0xdb6
 4029 0daf 08       		.uleb128 0x8
 4030 0db0 F1000000 		.4byte	0xf1
 4031 0db4 1D       		.byte	0x1d
 4032 0db5 00       		.byte	0
 4033 0db6 23       		.uleb128 0x23
 4034 0db7 51060000 		.4byte	.LASF186
 4035 0dbb 01       		.byte	0x1
 4036 0dbc 1D       		.byte	0x1d
 4037 0dbd A60D0000 		.4byte	0xda6
 4038 0dc1 05       		.uleb128 0x5
 4039 0dc2 03       		.byte	0x3
 4040 0dc3 00000000 		.4byte	Data_fileName
 4041 0dc7 23       		.uleb128 0x23
 4042 0dc8 E5030000 		.4byte	.LASF98
 4043 0dcc 01       		.byte	0x1
 4044 0dcd 1E       		.byte	0x1e
 4045 0dce 81000000 		.4byte	0x81
 4046 0dd2 05       		.uleb128 0x5
 4047 0dd3 03       		.byte	0x3
 4048 0dd4 00000000 		.4byte	try_counter
 4049 0dd8 00       		.byte	0
 4050              		.section	.debug_abbrev,"",%progbits
 4051              	.Ldebug_abbrev0:
 4052 0000 01       		.uleb128 0x1
 4053 0001 11       		.uleb128 0x11
 4054 0002 01       		.byte	0x1
 4055 0003 25       		.uleb128 0x25
 4056 0004 0E       		.uleb128 0xe
 4057 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 89


 4058 0006 0B       		.uleb128 0xb
 4059 0007 03       		.uleb128 0x3
 4060 0008 0E       		.uleb128 0xe
 4061 0009 1B       		.uleb128 0x1b
 4062 000a 0E       		.uleb128 0xe
 4063 000b 55       		.uleb128 0x55
 4064 000c 17       		.uleb128 0x17
 4065 000d 11       		.uleb128 0x11
 4066 000e 01       		.uleb128 0x1
 4067 000f 10       		.uleb128 0x10
 4068 0010 17       		.uleb128 0x17
 4069 0011 00       		.byte	0
 4070 0012 00       		.byte	0
 4071 0013 02       		.uleb128 0x2
 4072 0014 24       		.uleb128 0x24
 4073 0015 00       		.byte	0
 4074 0016 0B       		.uleb128 0xb
 4075 0017 0B       		.uleb128 0xb
 4076 0018 3E       		.uleb128 0x3e
 4077 0019 0B       		.uleb128 0xb
 4078 001a 03       		.uleb128 0x3
 4079 001b 0E       		.uleb128 0xe
 4080 001c 00       		.byte	0
 4081 001d 00       		.byte	0
 4082 001e 03       		.uleb128 0x3
 4083 001f 16       		.uleb128 0x16
 4084 0020 00       		.byte	0
 4085 0021 03       		.uleb128 0x3
 4086 0022 0E       		.uleb128 0xe
 4087 0023 3A       		.uleb128 0x3a
 4088 0024 0B       		.uleb128 0xb
 4089 0025 3B       		.uleb128 0x3b
 4090 0026 0B       		.uleb128 0xb
 4091 0027 49       		.uleb128 0x49
 4092 0028 13       		.uleb128 0x13
 4093 0029 00       		.byte	0
 4094 002a 00       		.byte	0
 4095 002b 04       		.uleb128 0x4
 4096 002c 24       		.uleb128 0x24
 4097 002d 00       		.byte	0
 4098 002e 0B       		.uleb128 0xb
 4099 002f 0B       		.uleb128 0xb
 4100 0030 3E       		.uleb128 0x3e
 4101 0031 0B       		.uleb128 0xb
 4102 0032 03       		.uleb128 0x3
 4103 0033 08       		.uleb128 0x8
 4104 0034 00       		.byte	0
 4105 0035 00       		.byte	0
 4106 0036 05       		.uleb128 0x5
 4107 0037 16       		.uleb128 0x16
 4108 0038 00       		.byte	0
 4109 0039 03       		.uleb128 0x3
 4110 003a 0E       		.uleb128 0xe
 4111 003b 3A       		.uleb128 0x3a
 4112 003c 0B       		.uleb128 0xb
 4113 003d 3B       		.uleb128 0x3b
 4114 003e 05       		.uleb128 0x5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 90


 4115 003f 49       		.uleb128 0x49
 4116 0040 13       		.uleb128 0x13
 4117 0041 00       		.byte	0
 4118 0042 00       		.byte	0
 4119 0043 06       		.uleb128 0x6
 4120 0044 0F       		.uleb128 0xf
 4121 0045 00       		.byte	0
 4122 0046 0B       		.uleb128 0xb
 4123 0047 0B       		.uleb128 0xb
 4124 0048 49       		.uleb128 0x49
 4125 0049 13       		.uleb128 0x13
 4126 004a 00       		.byte	0
 4127 004b 00       		.byte	0
 4128 004c 07       		.uleb128 0x7
 4129 004d 01       		.uleb128 0x1
 4130 004e 01       		.byte	0x1
 4131 004f 49       		.uleb128 0x49
 4132 0050 13       		.uleb128 0x13
 4133 0051 01       		.uleb128 0x1
 4134 0052 13       		.uleb128 0x13
 4135 0053 00       		.byte	0
 4136 0054 00       		.byte	0
 4137 0055 08       		.uleb128 0x8
 4138 0056 21       		.uleb128 0x21
 4139 0057 00       		.byte	0
 4140 0058 49       		.uleb128 0x49
 4141 0059 13       		.uleb128 0x13
 4142 005a 2F       		.uleb128 0x2f
 4143 005b 0B       		.uleb128 0xb
 4144 005c 00       		.byte	0
 4145 005d 00       		.byte	0
 4146 005e 09       		.uleb128 0x9
 4147 005f 13       		.uleb128 0x13
 4148 0060 01       		.byte	0x1
 4149 0061 0B       		.uleb128 0xb
 4150 0062 0B       		.uleb128 0xb
 4151 0063 3A       		.uleb128 0x3a
 4152 0064 0B       		.uleb128 0xb
 4153 0065 3B       		.uleb128 0x3b
 4154 0066 0B       		.uleb128 0xb
 4155 0067 01       		.uleb128 0x1
 4156 0068 13       		.uleb128 0x13
 4157 0069 00       		.byte	0
 4158 006a 00       		.byte	0
 4159 006b 0A       		.uleb128 0xa
 4160 006c 0D       		.uleb128 0xd
 4161 006d 00       		.byte	0
 4162 006e 03       		.uleb128 0x3
 4163 006f 08       		.uleb128 0x8
 4164 0070 3A       		.uleb128 0x3a
 4165 0071 0B       		.uleb128 0xb
 4166 0072 3B       		.uleb128 0x3b
 4167 0073 0B       		.uleb128 0xb
 4168 0074 49       		.uleb128 0x49
 4169 0075 13       		.uleb128 0x13
 4170 0076 38       		.uleb128 0x38
 4171 0077 0B       		.uleb128 0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 91


 4172 0078 00       		.byte	0
 4173 0079 00       		.byte	0
 4174 007a 0B       		.uleb128 0xb
 4175 007b 0D       		.uleb128 0xd
 4176 007c 00       		.byte	0
 4177 007d 03       		.uleb128 0x3
 4178 007e 0E       		.uleb128 0xe
 4179 007f 3A       		.uleb128 0x3a
 4180 0080 0B       		.uleb128 0xb
 4181 0081 3B       		.uleb128 0x3b
 4182 0082 0B       		.uleb128 0xb
 4183 0083 49       		.uleb128 0x49
 4184 0084 13       		.uleb128 0x13
 4185 0085 38       		.uleb128 0x38
 4186 0086 0B       		.uleb128 0xb
 4187 0087 00       		.byte	0
 4188 0088 00       		.byte	0
 4189 0089 0C       		.uleb128 0xc
 4190 008a 35       		.uleb128 0x35
 4191 008b 00       		.byte	0
 4192 008c 49       		.uleb128 0x49
 4193 008d 13       		.uleb128 0x13
 4194 008e 00       		.byte	0
 4195 008f 00       		.byte	0
 4196 0090 0D       		.uleb128 0xd
 4197 0091 13       		.uleb128 0x13
 4198 0092 01       		.byte	0x1
 4199 0093 0B       		.uleb128 0xb
 4200 0094 05       		.uleb128 0x5
 4201 0095 3A       		.uleb128 0x3a
 4202 0096 0B       		.uleb128 0xb
 4203 0097 3B       		.uleb128 0x3b
 4204 0098 0B       		.uleb128 0xb
 4205 0099 01       		.uleb128 0x1
 4206 009a 13       		.uleb128 0x13
 4207 009b 00       		.byte	0
 4208 009c 00       		.byte	0
 4209 009d 0E       		.uleb128 0xe
 4210 009e 13       		.uleb128 0x13
 4211 009f 01       		.byte	0x1
 4212 00a0 03       		.uleb128 0x3
 4213 00a1 08       		.uleb128 0x8
 4214 00a2 0B       		.uleb128 0xb
 4215 00a3 0B       		.uleb128 0xb
 4216 00a4 3A       		.uleb128 0x3a
 4217 00a5 0B       		.uleb128 0xb
 4218 00a6 3B       		.uleb128 0x3b
 4219 00a7 0B       		.uleb128 0xb
 4220 00a8 01       		.uleb128 0x1
 4221 00a9 13       		.uleb128 0x13
 4222 00aa 00       		.byte	0
 4223 00ab 00       		.byte	0
 4224 00ac 0F       		.uleb128 0xf
 4225 00ad 2E       		.uleb128 0x2e
 4226 00ae 00       		.byte	0
 4227 00af 3F       		.uleb128 0x3f
 4228 00b0 19       		.uleb128 0x19
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 92


 4229 00b1 03       		.uleb128 0x3
 4230 00b2 0E       		.uleb128 0xe
 4231 00b3 3A       		.uleb128 0x3a
 4232 00b4 0B       		.uleb128 0xb
 4233 00b5 3B       		.uleb128 0x3b
 4234 00b6 0B       		.uleb128 0xb
 4235 00b7 27       		.uleb128 0x27
 4236 00b8 19       		.uleb128 0x19
 4237 00b9 11       		.uleb128 0x11
 4238 00ba 01       		.uleb128 0x1
 4239 00bb 12       		.uleb128 0x12
 4240 00bc 06       		.uleb128 0x6
 4241 00bd 40       		.uleb128 0x40
 4242 00be 18       		.uleb128 0x18
 4243 00bf 9642     		.uleb128 0x2116
 4244 00c1 19       		.uleb128 0x19
 4245 00c2 00       		.byte	0
 4246 00c3 00       		.byte	0
 4247 00c4 10       		.uleb128 0x10
 4248 00c5 2E       		.uleb128 0x2e
 4249 00c6 01       		.byte	0x1
 4250 00c7 3F       		.uleb128 0x3f
 4251 00c8 19       		.uleb128 0x19
 4252 00c9 03       		.uleb128 0x3
 4253 00ca 0E       		.uleb128 0xe
 4254 00cb 3A       		.uleb128 0x3a
 4255 00cc 0B       		.uleb128 0xb
 4256 00cd 3B       		.uleb128 0x3b
 4257 00ce 0B       		.uleb128 0xb
 4258 00cf 11       		.uleb128 0x11
 4259 00d0 01       		.uleb128 0x1
 4260 00d1 12       		.uleb128 0x12
 4261 00d2 06       		.uleb128 0x6
 4262 00d3 40       		.uleb128 0x40
 4263 00d4 18       		.uleb128 0x18
 4264 00d5 9642     		.uleb128 0x2116
 4265 00d7 19       		.uleb128 0x19
 4266 00d8 01       		.uleb128 0x1
 4267 00d9 13       		.uleb128 0x13
 4268 00da 00       		.byte	0
 4269 00db 00       		.byte	0
 4270 00dc 11       		.uleb128 0x11
 4271 00dd 34       		.uleb128 0x34
 4272 00de 00       		.byte	0
 4273 00df 03       		.uleb128 0x3
 4274 00e0 0E       		.uleb128 0xe
 4275 00e1 3A       		.uleb128 0x3a
 4276 00e2 0B       		.uleb128 0xb
 4277 00e3 3B       		.uleb128 0x3b
 4278 00e4 0B       		.uleb128 0xb
 4279 00e5 49       		.uleb128 0x49
 4280 00e6 13       		.uleb128 0x13
 4281 00e7 02       		.uleb128 0x2
 4282 00e8 18       		.uleb128 0x18
 4283 00e9 00       		.byte	0
 4284 00ea 00       		.byte	0
 4285 00eb 12       		.uleb128 0x12
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 93


 4286 00ec 2E       		.uleb128 0x2e
 4287 00ed 01       		.byte	0x1
 4288 00ee 3F       		.uleb128 0x3f
 4289 00ef 19       		.uleb128 0x19
 4290 00f0 03       		.uleb128 0x3
 4291 00f1 0E       		.uleb128 0xe
 4292 00f2 3A       		.uleb128 0x3a
 4293 00f3 0B       		.uleb128 0xb
 4294 00f4 3B       		.uleb128 0x3b
 4295 00f5 0B       		.uleb128 0xb
 4296 00f6 49       		.uleb128 0x49
 4297 00f7 13       		.uleb128 0x13
 4298 00f8 11       		.uleb128 0x11
 4299 00f9 01       		.uleb128 0x1
 4300 00fa 12       		.uleb128 0x12
 4301 00fb 06       		.uleb128 0x6
 4302 00fc 40       		.uleb128 0x40
 4303 00fd 18       		.uleb128 0x18
 4304 00fe 9642     		.uleb128 0x2116
 4305 0100 19       		.uleb128 0x19
 4306 0101 01       		.uleb128 0x1
 4307 0102 13       		.uleb128 0x13
 4308 0103 00       		.byte	0
 4309 0104 00       		.byte	0
 4310 0105 13       		.uleb128 0x13
 4311 0106 2E       		.uleb128 0x2e
 4312 0107 00       		.byte	0
 4313 0108 3F       		.uleb128 0x3f
 4314 0109 19       		.uleb128 0x19
 4315 010a 03       		.uleb128 0x3
 4316 010b 0E       		.uleb128 0xe
 4317 010c 3A       		.uleb128 0x3a
 4318 010d 0B       		.uleb128 0xb
 4319 010e 3B       		.uleb128 0x3b
 4320 010f 0B       		.uleb128 0xb
 4321 0110 11       		.uleb128 0x11
 4322 0111 01       		.uleb128 0x1
 4323 0112 12       		.uleb128 0x12
 4324 0113 06       		.uleb128 0x6
 4325 0114 40       		.uleb128 0x40
 4326 0115 18       		.uleb128 0x18
 4327 0116 9642     		.uleb128 0x2116
 4328 0118 19       		.uleb128 0x19
 4329 0119 00       		.byte	0
 4330 011a 00       		.byte	0
 4331 011b 14       		.uleb128 0x14
 4332 011c 2E       		.uleb128 0x2e
 4333 011d 01       		.byte	0x1
 4334 011e 3F       		.uleb128 0x3f
 4335 011f 19       		.uleb128 0x19
 4336 0120 03       		.uleb128 0x3
 4337 0121 0E       		.uleb128 0xe
 4338 0122 3A       		.uleb128 0x3a
 4339 0123 0B       		.uleb128 0xb
 4340 0124 3B       		.uleb128 0x3b
 4341 0125 0B       		.uleb128 0xb
 4342 0126 27       		.uleb128 0x27
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 94


 4343 0127 19       		.uleb128 0x19
 4344 0128 11       		.uleb128 0x11
 4345 0129 01       		.uleb128 0x1
 4346 012a 12       		.uleb128 0x12
 4347 012b 06       		.uleb128 0x6
 4348 012c 40       		.uleb128 0x40
 4349 012d 18       		.uleb128 0x18
 4350 012e 9642     		.uleb128 0x2116
 4351 0130 19       		.uleb128 0x19
 4352 0131 01       		.uleb128 0x1
 4353 0132 13       		.uleb128 0x13
 4354 0133 00       		.byte	0
 4355 0134 00       		.byte	0
 4356 0135 15       		.uleb128 0x15
 4357 0136 05       		.uleb128 0x5
 4358 0137 00       		.byte	0
 4359 0138 03       		.uleb128 0x3
 4360 0139 0E       		.uleb128 0xe
 4361 013a 3A       		.uleb128 0x3a
 4362 013b 0B       		.uleb128 0xb
 4363 013c 3B       		.uleb128 0x3b
 4364 013d 0B       		.uleb128 0xb
 4365 013e 49       		.uleb128 0x49
 4366 013f 13       		.uleb128 0x13
 4367 0140 02       		.uleb128 0x2
 4368 0141 18       		.uleb128 0x18
 4369 0142 00       		.byte	0
 4370 0143 00       		.byte	0
 4371 0144 16       		.uleb128 0x16
 4372 0145 2E       		.uleb128 0x2e
 4373 0146 01       		.byte	0x1
 4374 0147 3F       		.uleb128 0x3f
 4375 0148 19       		.uleb128 0x19
 4376 0149 03       		.uleb128 0x3
 4377 014a 0E       		.uleb128 0xe
 4378 014b 3A       		.uleb128 0x3a
 4379 014c 0B       		.uleb128 0xb
 4380 014d 3B       		.uleb128 0x3b
 4381 014e 05       		.uleb128 0x5
 4382 014f 27       		.uleb128 0x27
 4383 0150 19       		.uleb128 0x19
 4384 0151 49       		.uleb128 0x49
 4385 0152 13       		.uleb128 0x13
 4386 0153 11       		.uleb128 0x11
 4387 0154 01       		.uleb128 0x1
 4388 0155 12       		.uleb128 0x12
 4389 0156 06       		.uleb128 0x6
 4390 0157 40       		.uleb128 0x40
 4391 0158 18       		.uleb128 0x18
 4392 0159 9642     		.uleb128 0x2116
 4393 015b 19       		.uleb128 0x19
 4394 015c 01       		.uleb128 0x1
 4395 015d 13       		.uleb128 0x13
 4396 015e 00       		.byte	0
 4397 015f 00       		.byte	0
 4398 0160 17       		.uleb128 0x17
 4399 0161 05       		.uleb128 0x5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 95


 4400 0162 00       		.byte	0
 4401 0163 03       		.uleb128 0x3
 4402 0164 0E       		.uleb128 0xe
 4403 0165 3A       		.uleb128 0x3a
 4404 0166 0B       		.uleb128 0xb
 4405 0167 3B       		.uleb128 0x3b
 4406 0168 05       		.uleb128 0x5
 4407 0169 49       		.uleb128 0x49
 4408 016a 13       		.uleb128 0x13
 4409 016b 02       		.uleb128 0x2
 4410 016c 18       		.uleb128 0x18
 4411 016d 00       		.byte	0
 4412 016e 00       		.byte	0
 4413 016f 18       		.uleb128 0x18
 4414 0170 2E       		.uleb128 0x2e
 4415 0171 01       		.byte	0x1
 4416 0172 3F       		.uleb128 0x3f
 4417 0173 19       		.uleb128 0x19
 4418 0174 03       		.uleb128 0x3
 4419 0175 0E       		.uleb128 0xe
 4420 0176 3A       		.uleb128 0x3a
 4421 0177 0B       		.uleb128 0xb
 4422 0178 3B       		.uleb128 0x3b
 4423 0179 05       		.uleb128 0x5
 4424 017a 27       		.uleb128 0x27
 4425 017b 19       		.uleb128 0x19
 4426 017c 11       		.uleb128 0x11
 4427 017d 01       		.uleb128 0x1
 4428 017e 12       		.uleb128 0x12
 4429 017f 06       		.uleb128 0x6
 4430 0180 40       		.uleb128 0x40
 4431 0181 18       		.uleb128 0x18
 4432 0182 9742     		.uleb128 0x2117
 4433 0184 19       		.uleb128 0x19
 4434 0185 01       		.uleb128 0x1
 4435 0186 13       		.uleb128 0x13
 4436 0187 00       		.byte	0
 4437 0188 00       		.byte	0
 4438 0189 19       		.uleb128 0x19
 4439 018a 2E       		.uleb128 0x2e
 4440 018b 01       		.byte	0x1
 4441 018c 3F       		.uleb128 0x3f
 4442 018d 19       		.uleb128 0x19
 4443 018e 03       		.uleb128 0x3
 4444 018f 0E       		.uleb128 0xe
 4445 0190 3A       		.uleb128 0x3a
 4446 0191 0B       		.uleb128 0xb
 4447 0192 3B       		.uleb128 0x3b
 4448 0193 05       		.uleb128 0x5
 4449 0194 27       		.uleb128 0x27
 4450 0195 19       		.uleb128 0x19
 4451 0196 49       		.uleb128 0x49
 4452 0197 13       		.uleb128 0x13
 4453 0198 11       		.uleb128 0x11
 4454 0199 01       		.uleb128 0x1
 4455 019a 12       		.uleb128 0x12
 4456 019b 06       		.uleb128 0x6
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 96


 4457 019c 40       		.uleb128 0x40
 4458 019d 18       		.uleb128 0x18
 4459 019e 9742     		.uleb128 0x2117
 4460 01a0 19       		.uleb128 0x19
 4461 01a1 01       		.uleb128 0x1
 4462 01a2 13       		.uleb128 0x13
 4463 01a3 00       		.byte	0
 4464 01a4 00       		.byte	0
 4465 01a5 1A       		.uleb128 0x1a
 4466 01a6 34       		.uleb128 0x34
 4467 01a7 00       		.byte	0
 4468 01a8 03       		.uleb128 0x3
 4469 01a9 0E       		.uleb128 0xe
 4470 01aa 3A       		.uleb128 0x3a
 4471 01ab 0B       		.uleb128 0xb
 4472 01ac 3B       		.uleb128 0x3b
 4473 01ad 05       		.uleb128 0x5
 4474 01ae 49       		.uleb128 0x49
 4475 01af 13       		.uleb128 0x13
 4476 01b0 02       		.uleb128 0x2
 4477 01b1 18       		.uleb128 0x18
 4478 01b2 00       		.byte	0
 4479 01b3 00       		.byte	0
 4480 01b4 1B       		.uleb128 0x1b
 4481 01b5 2E       		.uleb128 0x2e
 4482 01b6 01       		.byte	0x1
 4483 01b7 3F       		.uleb128 0x3f
 4484 01b8 19       		.uleb128 0x19
 4485 01b9 03       		.uleb128 0x3
 4486 01ba 0E       		.uleb128 0xe
 4487 01bb 3A       		.uleb128 0x3a
 4488 01bc 0B       		.uleb128 0xb
 4489 01bd 3B       		.uleb128 0x3b
 4490 01be 05       		.uleb128 0x5
 4491 01bf 11       		.uleb128 0x11
 4492 01c0 01       		.uleb128 0x1
 4493 01c1 12       		.uleb128 0x12
 4494 01c2 06       		.uleb128 0x6
 4495 01c3 40       		.uleb128 0x40
 4496 01c4 18       		.uleb128 0x18
 4497 01c5 9642     		.uleb128 0x2116
 4498 01c7 19       		.uleb128 0x19
 4499 01c8 01       		.uleb128 0x1
 4500 01c9 13       		.uleb128 0x13
 4501 01ca 00       		.byte	0
 4502 01cb 00       		.byte	0
 4503 01cc 1C       		.uleb128 0x1c
 4504 01cd 2E       		.uleb128 0x2e
 4505 01ce 00       		.byte	0
 4506 01cf 3F       		.uleb128 0x3f
 4507 01d0 19       		.uleb128 0x19
 4508 01d1 03       		.uleb128 0x3
 4509 01d2 0E       		.uleb128 0xe
 4510 01d3 3A       		.uleb128 0x3a
 4511 01d4 0B       		.uleb128 0xb
 4512 01d5 3B       		.uleb128 0x3b
 4513 01d6 05       		.uleb128 0x5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 97


 4514 01d7 27       		.uleb128 0x27
 4515 01d8 19       		.uleb128 0x19
 4516 01d9 49       		.uleb128 0x49
 4517 01da 13       		.uleb128 0x13
 4518 01db 11       		.uleb128 0x11
 4519 01dc 01       		.uleb128 0x1
 4520 01dd 12       		.uleb128 0x12
 4521 01de 06       		.uleb128 0x6
 4522 01df 40       		.uleb128 0x40
 4523 01e0 18       		.uleb128 0x18
 4524 01e1 9642     		.uleb128 0x2116
 4525 01e3 19       		.uleb128 0x19
 4526 01e4 00       		.byte	0
 4527 01e5 00       		.byte	0
 4528 01e6 1D       		.uleb128 0x1d
 4529 01e7 2E       		.uleb128 0x2e
 4530 01e8 01       		.byte	0x1
 4531 01e9 3F       		.uleb128 0x3f
 4532 01ea 19       		.uleb128 0x19
 4533 01eb 03       		.uleb128 0x3
 4534 01ec 0E       		.uleb128 0xe
 4535 01ed 3A       		.uleb128 0x3a
 4536 01ee 0B       		.uleb128 0xb
 4537 01ef 3B       		.uleb128 0x3b
 4538 01f0 05       		.uleb128 0x5
 4539 01f1 49       		.uleb128 0x49
 4540 01f2 13       		.uleb128 0x13
 4541 01f3 11       		.uleb128 0x11
 4542 01f4 01       		.uleb128 0x1
 4543 01f5 12       		.uleb128 0x12
 4544 01f6 06       		.uleb128 0x6
 4545 01f7 40       		.uleb128 0x40
 4546 01f8 18       		.uleb128 0x18
 4547 01f9 9642     		.uleb128 0x2116
 4548 01fb 19       		.uleb128 0x19
 4549 01fc 01       		.uleb128 0x1
 4550 01fd 13       		.uleb128 0x13
 4551 01fe 00       		.byte	0
 4552 01ff 00       		.byte	0
 4553 0200 1E       		.uleb128 0x1e
 4554 0201 0B       		.uleb128 0xb
 4555 0202 01       		.byte	0x1
 4556 0203 11       		.uleb128 0x11
 4557 0204 01       		.uleb128 0x1
 4558 0205 12       		.uleb128 0x12
 4559 0206 06       		.uleb128 0x6
 4560 0207 00       		.byte	0
 4561 0208 00       		.byte	0
 4562 0209 1F       		.uleb128 0x1f
 4563 020a 0B       		.uleb128 0xb
 4564 020b 01       		.byte	0x1
 4565 020c 11       		.uleb128 0x11
 4566 020d 01       		.uleb128 0x1
 4567 020e 12       		.uleb128 0x12
 4568 020f 06       		.uleb128 0x6
 4569 0210 01       		.uleb128 0x1
 4570 0211 13       		.uleb128 0x13
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 98


 4571 0212 00       		.byte	0
 4572 0213 00       		.byte	0
 4573 0214 20       		.uleb128 0x20
 4574 0215 21       		.uleb128 0x21
 4575 0216 00       		.byte	0
 4576 0217 49       		.uleb128 0x49
 4577 0218 13       		.uleb128 0x13
 4578 0219 2F       		.uleb128 0x2f
 4579 021a 05       		.uleb128 0x5
 4580 021b 00       		.byte	0
 4581 021c 00       		.byte	0
 4582 021d 21       		.uleb128 0x21
 4583 021e 34       		.uleb128 0x34
 4584 021f 00       		.byte	0
 4585 0220 03       		.uleb128 0x3
 4586 0221 08       		.uleb128 0x8
 4587 0222 3A       		.uleb128 0x3a
 4588 0223 0B       		.uleb128 0xb
 4589 0224 3B       		.uleb128 0x3b
 4590 0225 05       		.uleb128 0x5
 4591 0226 49       		.uleb128 0x49
 4592 0227 13       		.uleb128 0x13
 4593 0228 02       		.uleb128 0x2
 4594 0229 18       		.uleb128 0x18
 4595 022a 00       		.byte	0
 4596 022b 00       		.byte	0
 4597 022c 22       		.uleb128 0x22
 4598 022d 34       		.uleb128 0x34
 4599 022e 00       		.byte	0
 4600 022f 03       		.uleb128 0x3
 4601 0230 0E       		.uleb128 0xe
 4602 0231 3A       		.uleb128 0x3a
 4603 0232 0B       		.uleb128 0xb
 4604 0233 3B       		.uleb128 0x3b
 4605 0234 05       		.uleb128 0x5
 4606 0235 49       		.uleb128 0x49
 4607 0236 13       		.uleb128 0x13
 4608 0237 3F       		.uleb128 0x3f
 4609 0238 19       		.uleb128 0x19
 4610 0239 3C       		.uleb128 0x3c
 4611 023a 19       		.uleb128 0x19
 4612 023b 00       		.byte	0
 4613 023c 00       		.byte	0
 4614 023d 23       		.uleb128 0x23
 4615 023e 34       		.uleb128 0x34
 4616 023f 00       		.byte	0
 4617 0240 03       		.uleb128 0x3
 4618 0241 0E       		.uleb128 0xe
 4619 0242 3A       		.uleb128 0x3a
 4620 0243 0B       		.uleb128 0xb
 4621 0244 3B       		.uleb128 0x3b
 4622 0245 0B       		.uleb128 0xb
 4623 0246 49       		.uleb128 0x49
 4624 0247 13       		.uleb128 0x13
 4625 0248 3F       		.uleb128 0x3f
 4626 0249 19       		.uleb128 0x19
 4627 024a 02       		.uleb128 0x2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 99


 4628 024b 18       		.uleb128 0x18
 4629 024c 00       		.byte	0
 4630 024d 00       		.byte	0
 4631 024e 24       		.uleb128 0x24
 4632 024f 34       		.uleb128 0x34
 4633 0250 00       		.byte	0
 4634 0251 03       		.uleb128 0x3
 4635 0252 08       		.uleb128 0x8
 4636 0253 3A       		.uleb128 0x3a
 4637 0254 0B       		.uleb128 0xb
 4638 0255 3B       		.uleb128 0x3b
 4639 0256 0B       		.uleb128 0xb
 4640 0257 49       		.uleb128 0x49
 4641 0258 13       		.uleb128 0x13
 4642 0259 3F       		.uleb128 0x3f
 4643 025a 19       		.uleb128 0x19
 4644 025b 02       		.uleb128 0x2
 4645 025c 18       		.uleb128 0x18
 4646 025d 00       		.byte	0
 4647 025e 00       		.byte	0
 4648 025f 00       		.byte	0
 4649              		.section	.debug_aranges,"",%progbits
 4650 0000 8C000000 		.4byte	0x8c
 4651 0004 0200     		.2byte	0x2
 4652 0006 00000000 		.4byte	.Ldebug_info0
 4653 000a 04       		.byte	0x4
 4654 000b 00       		.byte	0
 4655 000c 0000     		.2byte	0
 4656 000e 0000     		.2byte	0
 4657 0010 00000000 		.4byte	.LFB64
 4658 0014 0C000000 		.4byte	.LFE64-.LFB64
 4659 0018 00000000 		.4byte	.LFB65
 4660 001c B0010000 		.4byte	.LFE65-.LFB65
 4661 0020 00000000 		.4byte	.LFB66
 4662 0024 F4000000 		.4byte	.LFE66-.LFB66
 4663 0028 00000000 		.4byte	.LFB67
 4664 002c 2A000000 		.4byte	.LFE67-.LFB67
 4665 0030 00000000 		.4byte	.LFB68
 4666 0034 C8000000 		.4byte	.LFE68-.LFB68
 4667 0038 00000000 		.4byte	.LFB69
 4668 003c 48000000 		.4byte	.LFE69-.LFB69
 4669 0040 00000000 		.4byte	.LFB70
 4670 0044 1E000000 		.4byte	.LFE70-.LFB70
 4671 0048 00000000 		.4byte	.LFB71
 4672 004c 46000000 		.4byte	.LFE71-.LFB71
 4673 0050 00000000 		.4byte	.LFB72
 4674 0054 04010000 		.4byte	.LFE72-.LFB72
 4675 0058 00000000 		.4byte	.LFB73
 4676 005c 1E000000 		.4byte	.LFE73-.LFB73
 4677 0060 00000000 		.4byte	.LFB74
 4678 0064 5C040000 		.4byte	.LFE74-.LFB74
 4679 0068 00000000 		.4byte	.LFB75
 4680 006c 44000000 		.4byte	.LFE75-.LFB75
 4681 0070 00000000 		.4byte	.LFB76
 4682 0074 A4020000 		.4byte	.LFE76-.LFB76
 4683 0078 00000000 		.4byte	.LFB77
 4684 007c 74000000 		.4byte	.LFE77-.LFB77
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 100


 4685 0080 00000000 		.4byte	.LFB78
 4686 0084 38010000 		.4byte	.LFE78-.LFB78
 4687 0088 00000000 		.4byte	0
 4688 008c 00000000 		.4byte	0
 4689              		.section	.debug_ranges,"",%progbits
 4690              	.Ldebug_ranges0:
 4691 0000 00000000 		.4byte	.LFB64
 4692 0004 0C000000 		.4byte	.LFE64
 4693 0008 00000000 		.4byte	.LFB65
 4694 000c B0010000 		.4byte	.LFE65
 4695 0010 00000000 		.4byte	.LFB66
 4696 0014 F4000000 		.4byte	.LFE66
 4697 0018 00000000 		.4byte	.LFB67
 4698 001c 2A000000 		.4byte	.LFE67
 4699 0020 00000000 		.4byte	.LFB68
 4700 0024 C8000000 		.4byte	.LFE68
 4701 0028 00000000 		.4byte	.LFB69
 4702 002c 48000000 		.4byte	.LFE69
 4703 0030 00000000 		.4byte	.LFB70
 4704 0034 1E000000 		.4byte	.LFE70
 4705 0038 00000000 		.4byte	.LFB71
 4706 003c 46000000 		.4byte	.LFE71
 4707 0040 00000000 		.4byte	.LFB72
 4708 0044 04010000 		.4byte	.LFE72
 4709 0048 00000000 		.4byte	.LFB73
 4710 004c 1E000000 		.4byte	.LFE73
 4711 0050 00000000 		.4byte	.LFB74
 4712 0054 5C040000 		.4byte	.LFE74
 4713 0058 00000000 		.4byte	.LFB75
 4714 005c 44000000 		.4byte	.LFE75
 4715 0060 00000000 		.4byte	.LFB76
 4716 0064 A4020000 		.4byte	.LFE76
 4717 0068 00000000 		.4byte	.LFB77
 4718 006c 74000000 		.4byte	.LFE77
 4719 0070 00000000 		.4byte	.LFB78
 4720 0074 38010000 		.4byte	.LFE78
 4721 0078 00000000 		.4byte	0
 4722 007c 00000000 		.4byte	0
 4723              		.section	.debug_line,"",%progbits
 4724              	.Ldebug_line0:
 4725 0000 87040000 		.section	.debug_str,"MS",%progbits,1
 4725      02004402 
 4725      00000201 
 4725      FB0E0D00 
 4725      01010101 
 4726              	.LASF115:
 4727 0000 745F6D6F 		.ascii	"t_modem\000"
 4727      64656D00 
 4728              	.LASF12:
 4729 0008 75696E74 		.ascii	"uint16\000"
 4729      313600
 4730              	.LASF47:
 4731 000f 746D5F68 		.ascii	"tm_hour\000"
 4731      6F757200 
 4732              	.LASF84:
 4733 0017 6E756D5F 		.ascii	"num_invalid_readings\000"
 4733      696E7661 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 101


 4733      6C69645F 
 4733      72656164 
 4733      696E6773 
 4734              	.LASF148:
 4735 002c 62756666 		.ascii	"buffer_overflow\000"
 4735      65725F6F 
 4735      76657266 
 4735      6C6F7700 
 4736              	.LASF146:
 4737 003c 66696C65 		.ascii	"fileName\000"
 4737      4E616D65 
 4737      00
 4738              	.LASF0:
 4739 0045 7369676E 		.ascii	"signed char\000"
 4739      65642063 
 4739      68617200 
 4740              	.LASF89:
 4741 0051 636F756E 		.ascii	"countDownResetCondition\000"
 4741      74446F77 
 4741      6E526573 
 4741      6574436F 
 4741      6E646974 
 4742              	.LASF185:
 4743 0069 74696D65 		.ascii	"timeToAutosampler\000"
 4743      546F4175 
 4743      746F7361 
 4743      6D706C65 
 4743      7200
 4744              	.LASF161:
 4745 007b 76616C76 		.ascii	"valve_type\000"
 4745      655F7479 
 4745      706500
 4746              	.LASF190:
 4747 0086 57616B65 		.ascii	"Wakeup_ISR\000"
 4747      75705F49 
 4747      535200
 4748              	.LASF187:
 4749 0091 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4749      43313120 
 4749      352E342E 
 4749      31203230 
 4749      31363036 
 4750 00c4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4750      20726576 
 4750      6973696F 
 4750      6E203233 
 4750      37373135 
 4751 00f7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4751      66756E63 
 4751      74696F6E 
 4751      2D736563 
 4751      74696F6E 
 4752              	.LASF113:
 4753 011f 745F7072 		.ascii	"t_pressure\000"
 4753      65737375 
 4753      726500
 4754              	.LASF27:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 102


 4755 012a 4D6F6E74 		.ascii	"Month\000"
 4755      6800
 4756              	.LASF7:
 4757 0130 6C6F6E67 		.ascii	"long long unsigned int\000"
 4757      206C6F6E 
 4757      6720756E 
 4757      7369676E 
 4757      65642069 
 4758              	.LASF23:
 4759 0147 486F7572 		.ascii	"Hour\000"
 4759      00
 4760              	.LASF154:
 4761 014c 6D6F6465 		.ascii	"modem_stats\000"
 4761      6D5F7374 
 4761      61747300 
 4762              	.LASF152:
 4763 0158 6D6F6465 		.ascii	"modem_state\000"
 4763      6D5F7374 
 4763      61746500 
 4764              	.LASF171:
 4765 0164 616C6172 		.ascii	"alarmMeasure\000"
 4765      6D4D6561 
 4765      73757265 
 4765      00
 4766              	.LASF147:
 4767 0171 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4767      52784275 
 4767      66666572 
 4767      00
 4768              	.LASF111:
 4769 017e 745F6C65 		.ascii	"t_level_sensor\000"
 4769      76656C5F 
 4769      73656E73 
 4769      6F7200
 4770              	.LASF164:
 4771 018d 6175746F 		.ascii	"autosampler_enabled\000"
 4771      73616D70 
 4771      6C65725F 
 4771      656E6162 
 4771      6C656400 
 4772              	.LASF6:
 4773 01a1 6C6F6E67 		.ascii	"long long int\000"
 4773      206C6F6E 
 4773      6720696E 
 4773      7400
 4774              	.LASF124:
 4775 01af 7061636B 		.ascii	"packets\000"
 4775      65747300 
 4776              	.LASF63:
 4777 01b7 65636E6F 		.ascii	"ecno\000"
 4777      00
 4778              	.LASF172:
 4779 01bc 74696D65 		.ascii	"timeToMeasure\000"
 4779      546F4D65 
 4779      61737572 
 4779      6500
 4780              	.LASF66:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 103


 4781 01ca 74696D65 		.ascii	"time_to_network_connect\000"
 4781      5F746F5F 
 4781      6E657477 
 4781      6F726B5F 
 4781      636F6E6E 
 4782              	.LASF174:
 4783 01e2 74696D65 		.ascii	"timeToSync\000"
 4783      546F5379 
 4783      6E6300
 4784              	.LASF35:
 4785 01ed 766F6C74 		.ascii	"voltage_solar\000"
 4785      6167655F 
 4785      736F6C61 
 4785      7200
 4786              	.LASF36:
 4787 01fb 766F6C74 		.ascii	"voltage_charge_current\000"
 4787      6167655F 
 4787      63686172 
 4787      67655F63 
 4787      75727265 
 4788              	.LASF145:
 4789 0212 75706772 		.ascii	"upgrade_status\000"
 4789      6164655F 
 4789      73746174 
 4789      757300
 4790              	.LASF160:
 4791 0221 76616C76 		.ascii	"valve_diameter\000"
 4791      655F6469 
 4791      616D6574 
 4791      657200
 4792              	.LASF127:
 4793 0230 635F6461 		.ascii	"c_data_count_sent\000"
 4793      74615F63 
 4793      6F756E74 
 4793      5F73656E 
 4793      7400
 4794              	.LASF60:
 4795 0242 6D6F6465 		.ascii	"modem_info_t\000"
 4795      6D5F696E 
 4795      666F5F74 
 4795      00
 4796              	.LASF180:
 4797 024f 616C6172 		.ascii	"alarmDownstreamLevelSensor\000"
 4797      6D446F77 
 4797      6E737472 
 4797      65616D4C 
 4797      6576656C 
 4798              	.LASF61:
 4799 026a 72786C65 		.ascii	"rxlev\000"
 4799      7600
 4800              	.LASF4:
 4801 0270 6C6F6E67 		.ascii	"long int\000"
 4801      20696E74 
 4801      00
 4802              	.LASF67:
 4803 0279 74696D65 		.ascii	"time_to_acquire_ip\000"
 4803      5F746F5F 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 104


 4803      61637175 
 4803      6972655F 
 4803      697000
 4804              	.LASF90:
 4805 028c 616C6172 		.ascii	"alarm\000"
 4805      6D00
 4806              	.LASF41:
 4807 0292 70726573 		.ascii	"pressure_voltage_off\000"
 4807      73757265 
 4807      5F766F6C 
 4807      74616765 
 4807      5F6F6666 
 4808              	.LASF11:
 4809 02a7 75696E74 		.ascii	"uint8\000"
 4809      3800
 4810              	.LASF119:
 4811 02ad 635F7472 		.ascii	"c_try_counter\000"
 4811      795F636F 
 4811      756E7465 
 4811      7200
 4812              	.LASF130:
 4813 02bb 73656E64 		.ascii	"send_time\000"
 4813      5F74696D 
 4813      6500
 4814              	.LASF177:
 4815 02c5 74696D65 		.ascii	"timeToAppLED\000"
 4815      546F4170 
 4815      704C4544 
 4815      00
 4816              	.LASF16:
 4817 02d2 696E7433 		.ascii	"int32\000"
 4817      3200
 4818              	.LASF69:
 4819 02d8 6E6F6465 		.ascii	"node_type\000"
 4819      5F747970 
 4819      6500
 4820              	.LASF116:
 4821 02e2 73796E63 		.ascii	"syncData\000"
 4821      44617461 
 4821      00
 4822              	.LASF125:
 4823 02eb 6E657477 		.ascii	"network_time\000"
 4823      6F726B5F 
 4823      74696D65 
 4823      00
 4824              	.LASF13:
 4825 02f8 75696E74 		.ascii	"uint32\000"
 4825      333200
 4826              	.LASF58:
 4827 02ff 6D6F6465 		.ascii	"model_id\000"
 4827      6C5F6964 
 4827      00
 4828              	.LASF81:
 4829 0308 616C6C5F 		.ascii	"all_level_readings\000"
 4829      6C657665 
 4829      6C5F7265 
 4829      6164696E 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 105


 4829      677300
 4830              	.LASF86:
 4831 031b 636F756E 		.ascii	"countDownValue\000"
 4831      74446F77 
 4831      6E56616C 
 4831      756500
 4832              	.LASF141:
 4833 032a 75706772 		.ascii	"upgraded\000"
 4833      61646564 
 4833      00
 4834              	.LASF49:
 4835 0333 746D5F6D 		.ascii	"tm_mon\000"
 4835      6F6E00
 4836              	.LASF73:
 4837 033a 64656275 		.ascii	"debug_level\000"
 4837      675F6C65 
 4837      76656C00 
 4838              	.LASF143:
 4839 0346 706F7274 		.ascii	"port\000"
 4839      00
 4840              	.LASF54:
 4841 034b 76616C75 		.ascii	"value\000"
 4841      6500
 4842              	.LASF142:
 4843 0351 686F7374 		.ascii	"host\000"
 4843      00
 4844              	.LASF50:
 4845 0356 746D5F79 		.ascii	"tm_year\000"
 4845      65617200 
 4846              	.LASF173:
 4847 035e 616C6172 		.ascii	"alarmSync\000"
 4847      6D53796E 
 4847      6300
 4848              	.LASF40:
 4849 0368 70726573 		.ascii	"pressure_voltage_on\000"
 4849      73757265 
 4849      5F766F6C 
 4849      74616765 
 4849      5F6F6E00 
 4850              	.LASF156:
 4851 037c 4170705F 		.ascii	"App_LED_enabled\000"
 4851      4C45445F 
 4851      656E6162 
 4851      6C656400 
 4852              	.LASF139:
 4853 038c 73657454 		.ascii	"setTime\000"
 4853      696D6500 
 4854              	.LASF56:
 4855 0394 6B65795F 		.ascii	"key_value_t\000"
 4855      76616C75 
 4855      655F7400 
 4856              	.LASF101:
 4857 03a0 41796F49 		.ascii	"AyoItsTime\000"
 4857      74735469 
 4857      6D6500
 4858              	.LASF83:
 4859 03ab 6E756D5F 		.ascii	"num_valid_readings\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 106


 4859      76616C69 
 4859      645F7265 
 4859      6164696E 
 4859      677300
 4860              	.LASF129:
 4861 03be 68747470 		.ascii	"http_chunk\000"
 4861      5F636875 
 4861      6E6B00
 4862              	.LASF136:
 4863 03c9 6D5F766F 		.ascii	"m_voltage\000"
 4863      6C746167 
 4863      6500
 4864              	.LASF5:
 4865 03d3 6C6F6E67 		.ascii	"long unsigned int\000"
 4865      20756E73 
 4865      69676E65 
 4865      6420696E 
 4865      7400
 4866              	.LASF98:
 4867 03e5 7472795F 		.ascii	"try_counter\000"
 4867      636F756E 
 4867      74657200 
 4868              	.LASF120:
 4869 03f1 64617461 		.ascii	"data_count_desired\000"
 4869      5F636F75 
 4869      6E745F64 
 4869      65736972 
 4869      656400
 4870              	.LASF34:
 4871 0404 766F6C74 		.ascii	"voltage_battery\000"
 4871      6167655F 
 4871      62617474 
 4871      65727900 
 4872              	.LASF25:
 4873 0414 4461794F 		.ascii	"DayOfMonth\000"
 4873      664D6F6E 
 4873      746800
 4874              	.LASF133:
 4875 041f 6D616B65 		.ascii	"makeMeasurements\000"
 4875      4D656173 
 4875      7572656D 
 4875      656E7473 
 4875      00
 4876              	.LASF151:
 4877 0430 64617461 		.ascii	"data\000"
 4877      00
 4878              	.LASF95:
 4879 0435 65705F70 		.ascii	"ep_port\000"
 4879      6F727400 
 4880              	.LASF53:
 4881 043d 746D5F69 		.ascii	"tm_isdst\000"
 4881      73647374 
 4881      00
 4882              	.LASF91:
 4883 0446 6D6F6465 		.ascii	"modem_info\000"
 4883      6D5F696E 
 4883      666F00
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 107


 4884              	.LASF94:
 4885 0451 65705F68 		.ascii	"ep_host\000"
 4885      6F737400 
 4886              	.LASF14:
 4887 0459 696E7438 		.ascii	"int8\000"
 4887      00
 4888              	.LASF100:
 4889 045e 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 4889      576F726B 
 4889      576F726B 
 4889      576F726B 
 4889      576F726B 
 4890              	.LASF121:
 4891 0477 635F6461 		.ascii	"c_data_count_desired\000"
 4891      74615F63 
 4891      6F756E74 
 4891      5F646573 
 4891      69726564 
 4892              	.LASF114:
 4893 048c 745F7364 		.ascii	"t_sd_card\000"
 4893      5F636172 
 4893      6400
 4894              	.LASF2:
 4895 0496 73686F72 		.ascii	"short int\000"
 4895      7420696E 
 4895      7400
 4896              	.LASF176:
 4897 04a0 616C6172 		.ascii	"alarmAppLED\000"
 4897      6D417070 
 4897      4C454400 
 4898              	.LASF153:
 4899 04ac 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4899      6D5F7374 
 4899      6172745F 
 4899      74696D65 
 4899      5F737461 
 4900              	.LASF93:
 4901 04c3 7379735F 		.ascii	"sys_info_t\000"
 4901      696E666F 
 4901      5F7400
 4902              	.LASF80:
 4903 04ce 75706461 		.ascii	"updatable_parameters_t\000"
 4903      7461626C 
 4903      655F7061 
 4903      72616D65 
 4903      74657273 
 4904              	.LASF102:
 4905 04e5 616C6172 		.ascii	"alarmType\000"
 4905      6D547970 
 4905      6500
 4906              	.LASF149:
 4907 04ef 64617461 		.ascii	"dataPointsInStack\000"
 4907      506F696E 
 4907      7473496E 
 4907      53746163 
 4907      6B00
 4908              	.LASF165:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 108


 4909 0501 6175746F 		.ascii	"autosampler_inbox\000"
 4909      73616D70 
 4909      6C65725F 
 4909      696E626F 
 4909      7800
 4910              	.LASF46:
 4911 0513 746D5F6D 		.ascii	"tm_min\000"
 4911      696E00
 4912              	.LASF17:
 4913 051a 666C6F61 		.ascii	"float32\000"
 4913      74333200 
 4914              	.LASF103:
 4915 0522 616C6172 		.ascii	"alarmToBeUpdated\000"
 4915      6D546F42 
 4915      65557064 
 4915      61746564 
 4915      00
 4916              	.LASF22:
 4917 0533 73697A65 		.ascii	"sizetype\000"
 4917      74797065 
 4917      00
 4918              	.LASF52:
 4919 053c 746D5F79 		.ascii	"tm_yday\000"
 4919      64617900 
 4920              	.LASF96:
 4921 0544 7379735F 		.ascii	"sys_settings_t\000"
 4921      73657474 
 4921      696E6773 
 4921      5F7400
 4922              	.LASF140:
 4923 0553 6C6F6361 		.ascii	"localTime\000"
 4923      6C54696D 
 4923      6500
 4924              	.LASF15:
 4925 055d 696E7431 		.ascii	"int16\000"
 4925      3600
 4926              	.LASF175:
 4927 0563 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 4927      546F5379 
 4927      636E5265 
 4927      6D6F7465 
 4927      50617261 
 4928              	.LASF55:
 4929 057a 74696D65 		.ascii	"timeStamp\000"
 4929      5374616D 
 4929      7000
 4930              	.LASF29:
 4931 0584 5254435F 		.ascii	"RTC_TIME_DATE\000"
 4931      54494D45 
 4931      5F444154 
 4931      4500
 4932              	.LASF155:
 4933 0592 75706461 		.ascii	"updatable_parameters\000"
 4933      7461626C 
 4933      655F7061 
 4933      72616D65 
 4933      74657273 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 109


 4934              	.LASF107:
 4935 05a7 43726561 		.ascii	"CreateAlarm\000"
 4935      7465416C 
 4935      61726D00 
 4936              	.LASF128:
 4937 05b3 7061636B 		.ascii	"packet\000"
 4937      657400
 4938              	.LASF189:
 4939 05ba 433A5C55 		.ascii	"C:\\Users\\jniej\\OneDrive\\Documents\\GitHub\\noto"
 4939      73657273 
 4939      5C6A6E69 
 4939      656A5C4F 
 4939      6E654472 
 4940 05e7 72694F53 		.ascii	"riOS\\notoriOS.cydsn\000"
 4940      5C6E6F74 
 4940      6F72694F 
 4940      532E6379 
 4940      64736E00 
 4941              	.LASF117:
 4942 05fb 735F7273 		.ascii	"s_rsrp\000"
 4942      727000
 4943              	.LASF37:
 4944 0602 766F6C74 		.ascii	"voltage_pressure\000"
 4944      6167655F 
 4944      70726573 
 4944      73757265 
 4944      00
 4945              	.LASF183:
 4946 0613 74696D65 		.ascii	"timeToValve\000"
 4946      546F5661 
 4946      6C766500 
 4947              	.LASF18:
 4948 061f 666C6F61 		.ascii	"float\000"
 4948      7400
 4949              	.LASF85:
 4950 0625 6C657665 		.ascii	"level_sensor_t\000"
 4950      6C5F7365 
 4950      6E736F72 
 4950      5F7400
 4951              	.LASF118:
 4952 0634 735F7273 		.ascii	"s_rscp\000"
 4952      637000
 4953              	.LASF132:
 4954 063b 636F6E66 		.ascii	"configureRemoteParams\000"
 4954      69677572 
 4954      6552656D 
 4954      6F746550 
 4954      6172616D 
 4955              	.LASF186:
 4956 0651 44617461 		.ascii	"Data_fileName\000"
 4956      5F66696C 
 4956      654E616D 
 4956      6500
 4957              	.LASF99:
 4958 065f 6D6F6465 		.ascii	"modem_status\000"
 4958      6D5F7374 
 4958      61747573 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 110


 4958      00
 4959              	.LASF30:
 4960 066c 74657374 		.ascii	"test_name\000"
 4960      5F6E616D 
 4960      6500
 4961              	.LASF28:
 4962 0676 59656172 		.ascii	"Year\000"
 4962      00
 4963              	.LASF79:
 4964 067b 5F426F6F 		.ascii	"_Bool\000"
 4964      6C00
 4965              	.LASF10:
 4966 0681 696E7433 		.ascii	"int32_t\000"
 4966      325F7400 
 4967              	.LASF1:
 4968 0689 756E7369 		.ascii	"unsigned char\000"
 4968      676E6564 
 4968      20636861 
 4968      7200
 4969              	.LASF144:
 4970 0697 726F7574 		.ascii	"route\000"
 4970      6500
 4971              	.LASF170:
 4972 069d 73797374 		.ascii	"system_settings\000"
 4972      656D5F73 
 4972      65747469 
 4972      6E677300 
 4973              	.LASF77:
 4974 06ad 56616C76 		.ascii	"Valve_freq\000"
 4974      655F6672 
 4974      657100
 4975              	.LASF64:
 4976 06b8 72737271 		.ascii	"rsrq\000"
 4976      00
 4977              	.LASF104:
 4978 06bd 52657365 		.ascii	"ResetAlarm\000"
 4978      74416C61 
 4978      726D00
 4979              	.LASF131:
 4980 06c8 735F7365 		.ascii	"s_send_time\000"
 4980      6E645F74 
 4980      696D6500 
 4981              	.LASF72:
 4982 06d4 73796E63 		.ascii	"sync_time\000"
 4982      5F74696D 
 4982      6500
 4983              	.LASF43:
 4984 06de 70726573 		.ascii	"pressure_depth\000"
 4984      73757265 
 4984      5F646570 
 4984      746800
 4985              	.LASF62:
 4986 06ed 72736370 		.ascii	"rscp\000"
 4986      00
 4987              	.LASF24:
 4988 06f2 4461794F 		.ascii	"DayOfWeek\000"
 4988      66576565 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 111


 4988      6B00
 4989              	.LASF33:
 4990 06fc 74657374 		.ascii	"test_t\000"
 4990      5F7400
 4991              	.LASF169:
 4992 0703 73797374 		.ascii	"system_info\000"
 4992      656D5F69 
 4992      6E666F00 
 4993              	.LASF59:
 4994 070f 696D6569 		.ascii	"imei\000"
 4994      00
 4995              	.LASF32:
 4996 0714 72656173 		.ascii	"reason\000"
 4996      6F6E00
 4997              	.LASF105:
 4998 071b 616C6172 		.ascii	"alarmToBeReset\000"
 4998      6D546F42 
 4998      65526573 
 4998      657400
 4999              	.LASF110:
 5000 072a 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 5000      6B697479 
 5000      43686563 
 5000      6B596F75 
 5000      7273656C 
 5001              	.LASF126:
 5002 0756 64617461 		.ascii	"data_count_sent\000"
 5002      5F636F75 
 5002      6E745F73 
 5002      656E7400 
 5003              	.LASF68:
 5004 0766 6D6F6465 		.ascii	"modem_stats_t\000"
 5004      6D5F7374 
 5004      6174735F 
 5004      7400
 5005              	.LASF42:
 5006 0774 70726573 		.ascii	"pressure_current\000"
 5006      73757265 
 5006      5F637572 
 5006      72656E74 
 5006      00
 5007              	.LASF38:
 5008 0785 76616C69 		.ascii	"valid\000"
 5008      6400
 5009              	.LASF178:
 5010 078b 616C6172 		.ascii	"alarmLevelSensor\000"
 5010      6D4C6576 
 5010      656C5365 
 5010      6E736F72 
 5010      00
 5011              	.LASF51:
 5012 079c 746D5F77 		.ascii	"tm_wday\000"
 5012      64617900 
 5013              	.LASF75:
 5014 07a4 4C657665 		.ascii	"Level_Sensor_freq\000"
 5014      6C5F5365 
 5014      6E736F72 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 112


 5014      5F667265 
 5014      7100
 5015              	.LASF158:
 5016 07b6 6C657665 		.ascii	"level_sensor_inbox\000"
 5016      6C5F7365 
 5016      6E736F72 
 5016      5F696E62 
 5016      6F7800
 5017              	.LASF21:
 5018 07c9 6C6F6E67 		.ascii	"long double\000"
 5018      20646F75 
 5018      626C6500 
 5019              	.LASF123:
 5020 07d5 6368756E 		.ascii	"chunk\000"
 5020      6B00
 5021              	.LASF134:
 5022 07db 635F7469 		.ascii	"c_timeStamp\000"
 5022      6D655374 
 5022      616D7000 
 5023              	.LASF20:
 5024 07e7 63686172 		.ascii	"char\000"
 5024      00
 5025              	.LASF8:
 5026 07ec 756E7369 		.ascii	"unsigned int\000"
 5026      676E6564 
 5026      20696E74 
 5026      00
 5027              	.LASF182:
 5028 07f9 616C6172 		.ascii	"alarmValve\000"
 5028      6D56616C 
 5028      766500
 5029              	.LASF65:
 5030 0804 72737270 		.ascii	"rsrp\000"
 5030      00
 5031              	.LASF168:
 5032 0809 68747470 		.ascii	"http_route\000"
 5032      5F726F75 
 5032      746500
 5033              	.LASF122:
 5034 0814 706F7274 		.ascii	"portConfig\000"
 5034      436F6E66 
 5034      696700
 5035              	.LASF9:
 5036 081f 5F5F696E 		.ascii	"__int32_t\000"
 5036      7433325F 
 5036      7400
 5037              	.LASF97:
 5038 0829 756E6971 		.ascii	"uniqueId\000"
 5038      75654964 
 5038      00
 5039              	.LASF71:
 5040 0832 6D656173 		.ascii	"measure_time\000"
 5040      7572655F 
 5040      74696D65 
 5040      00
 5041              	.LASF137:
 5042 083f 6D5F6C65 		.ascii	"m_level_sensor\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 113


 5042      76656C5F 
 5042      73656E73 
 5042      6F7200
 5043              	.LASF82:
 5044 084e 6C657665 		.ascii	"level_reading\000"
 5044      6C5F7265 
 5044      6164696E 
 5044      6700
 5045              	.LASF191:
 5046 085c 4C617942 		.ascii	"LayBack\000"
 5046      61636B00 
 5047              	.LASF3:
 5048 0864 73686F72 		.ascii	"short unsigned int\000"
 5048      7420756E 
 5048      7369676E 
 5048      65642069 
 5048      6E7400
 5049              	.LASF57:
 5050 0877 73696D5F 		.ascii	"sim_id\000"
 5050      696400
 5051              	.LASF48:
 5052 087e 746D5F6D 		.ascii	"tm_mday\000"
 5052      64617900 
 5053              	.LASF108:
 5054 0886 6E657741 		.ascii	"newAlarm\000"
 5054      6C61726D 
 5054      00
 5055              	.LASF76:
 5056 088f 446F776E 		.ascii	"Downstream_Level_Sensor_freq\000"
 5056      73747265 
 5056      616D5F4C 
 5056      6576656C 
 5056      5F53656E 
 5057              	.LASF45:
 5058 08ac 746D5F73 		.ascii	"tm_sec\000"
 5058      656300
 5059              	.LASF138:
 5060 08b3 6D5F7072 		.ascii	"m_pressure\000"
 5060      65737375 
 5060      726500
 5061              	.LASF162:
 5062 08be 76616C76 		.ascii	"valve_enabled\000"
 5062      655F656E 
 5062      61626C65 
 5062      6400
 5063              	.LASF31:
 5064 08cc 73746174 		.ascii	"status\000"
 5064      757300
 5065              	.LASF179:
 5066 08d3 74696D65 		.ascii	"timeToLevelSensor\000"
 5066      546F4C65 
 5066      76656C53 
 5066      656E736F 
 5066      7200
 5067              	.LASF159:
 5068 08e5 6C657665 		.ascii	"level_sensor_enabled\000"
 5068      6C5F7365 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 114


 5068      6E736F72 
 5068      5F656E61 
 5068      626C6564 
 5069              	.LASF150:
 5070 08fa 64617461 		.ascii	"dataPointsInStackDesired\000"
 5070      506F696E 
 5070      7473496E 
 5070      53746163 
 5070      6B446573 
 5071              	.LASF74:
 5072 0913 4170705F 		.ascii	"App_LED_freq\000"
 5072      4C45445F 
 5072      66726571 
 5072      00
 5073              	.LASF112:
 5074 0920 745F766F 		.ascii	"t_voltages\000"
 5074      6C746167 
 5074      657300
 5075              	.LASF188:
 5076 092b 6E6F746F 		.ascii	"notoriOS.c\000"
 5076      72694F53 
 5076      2E6300
 5077              	.LASF181:
 5078 0936 74696D65 		.ascii	"timeToDownstreamLevelSensor\000"
 5078      546F446F 
 5078      776E7374 
 5078      7265616D 
 5078      4C657665 
 5079              	.LASF167:
 5080 0952 68747470 		.ascii	"http_body\000"
 5080      5F626F64 
 5080      7900
 5081              	.LASF184:
 5082 095c 616C6172 		.ascii	"alarmAutosampler\000"
 5082      6D417574 
 5082      6F73616D 
 5082      706C6572 
 5082      00
 5083              	.LASF163:
 5084 096d 76616C76 		.ascii	"valve_inbox\000"
 5084      655F696E 
 5084      626F7800 
 5085              	.LASF78:
 5086 0979 4175746F 		.ascii	"Autosampler_freq\000"
 5086      73616D70 
 5086      6C65725F 
 5086      66726571 
 5086      00
 5087              	.LASF88:
 5088 098a 636F756E 		.ascii	"countDownType\000"
 5088      74446F77 
 5088      6E547970 
 5088      6500
 5089              	.LASF87:
 5090 0998 63757272 		.ascii	"currentCountDownValue\000"
 5090      656E7443 
 5090      6F756E74 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccti50Is.s 			page 115


 5090      446F776E 
 5090      56616C75 
 5091              	.LASF70:
 5092 09ae 73696D5F 		.ascii	"sim_type\000"
 5092      74797065 
 5092      00
 5093              	.LASF26:
 5094 09b7 4461794F 		.ascii	"DayOfYear\000"
 5094      66596561 
 5094      7200
 5095              	.LASF44:
 5096 09c1 70726573 		.ascii	"pressure_t\000"
 5096      73757265 
 5096      5F7400
 5097              	.LASF106:
 5098 09cc 416C6172 		.ascii	"AlarmReady\000"
 5098      6D526561 
 5098      647900
 5099              	.LASF109:
 5100 09d7 52656164 		.ascii	"ReadyOrNot\000"
 5100      794F724E 
 5100      6F7400
 5101              	.LASF192:
 5102 09e2 6D61696E 		.ascii	"main\000"
 5102      00
 5103              	.LASF92:
 5104 09e7 63686970 		.ascii	"chip_uniqueId\000"
 5104      5F756E69 
 5104      71756549 
 5104      6400
 5105              	.LASF166:
 5106 09f5 68747470 		.ascii	"http_request\000"
 5106      5F726571 
 5106      75657374 
 5106      00
 5107              	.LASF19:
 5108 0a02 646F7562 		.ascii	"double\000"
 5108      6C6500
 5109              	.LASF157:
 5110 0a09 6170705F 		.ascii	"app_led_inbox\000"
 5110      6C65645F 
 5110      696E626F 
 5110      7800
 5111              	.LASF39:
 5112 0a17 766F6C74 		.ascii	"voltage_t\000"
 5112      6167655F 
 5112      7400
 5113              	.LASF135:
 5114 0a21 635F6E6F 		.ascii	"c_node_type\000"
 5114      64655F74 
 5114      79706500 
 5115              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
