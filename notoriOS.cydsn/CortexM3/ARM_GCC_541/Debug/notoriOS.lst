ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.section	.text.Wakeup_ISR,"ax",%progbits
  44              		.align	2
  45              		.global	Wakeup_ISR
  46              		.thumb
  47              		.thumb_func
  48              		.type	Wakeup_ISR, %function
  49              	Wakeup_ISR:
  50              	.LFB64:
  51              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 2


   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  52              		.loc 1 20 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  62              		.loc 1 22 0
  63 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  64              		.loc 1 23 0
  65 0008 00BF     		nop
  66 000a 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE64:
  69              		.size	Wakeup_ISR, .-Wakeup_ISR
  70              		.global	Data_fileName
  71              		.data
  72              		.align	2
  73              		.type	Data_fileName, %object
  74              		.size	Data_fileName, 30
  75              	Data_fileName:
  76 0000 64617461 		.ascii	"data.txt\000"
  76      2E747874 
  76      00
  77 0009 00000000 		.space	21
  77      00000000 
  77      00000000 
  77      00000000 
  77      00000000 
  78              		.comm	try_counter,1,1
  79              		.section	.rodata
  80              		.align	2
  81              	.LC0:
  82 0000 25582D25 		.ascii	"%X-%X\000"
  82      5800
  83 0006 0000     		.align	2
  84              	.LC1:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 3


  85 0008 6563322D 		.ascii	"ec2-13-59-131-167.us-east-2.compute.amazonaws.com\000"
  85      31332D35 
  85      392D3133 
  85      312D3136 
  85      372E7573 
  86 003a 0000     		.align	2
  87              	.LC2:
  88 003c 256400   		.ascii	"%d\000"
  89 003f 00       		.align	2
  90              	.LC3:
  91 0040 7265626F 		.ascii	"reboot\000"
  91      6F7400
  92              		.section	.text.ReadyOrNot,"ax",%progbits
  93              		.align	2
  94              		.global	ReadyOrNot
  95              		.thumb
  96              		.thumb_func
  97              		.type	ReadyOrNot, %function
  98              	ReadyOrNot:
  99              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
 100              		.loc 1 41 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 32
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 B0B5     		push	{r4, r5, r7, lr}
 105              		.cfi_def_cfa_offset 16
 106              		.cfi_offset 4, -16
 107              		.cfi_offset 5, -12
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 8AB0     		sub	sp, sp, #40
 111              		.cfi_def_cfa_offset 56
 112 0004 02AF     		add	r7, sp, #8
 113              		.cfi_def_cfa 7, 48
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 114              		.loc 1 43 0
 115 0006 3948     		ldr	r0, .L3
 116 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 4


  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 117              		.loc 1 44 0
 118 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 119              		.loc 1 46 0
 120 0010 FF20     		movs	r0, #255
 121 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 122              		.loc 1 47 0
 123 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 124              		.loc 1 48 0
 125 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 126              		.loc 1 50 0
 127 001e FFF7FEFF 		bl	modem_initialize
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 128              		.loc 1 52 0
 129 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  53:notoriOS.c    ****    
  54:notoriOS.c    ****     
  55:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  56:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  57:notoriOS.c    ****     
  58:notoriOS.c    ****     
  59:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  60:notoriOS.c    ****     uint32 uniqueId[2];
  61:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  62:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 130              		.loc 1 62 0
 131 0026 07F11403 		add	r3, r7, #20
 132 002a 1846     		mov	r0, r3
 133 002c FFF7FEFF 		bl	CyGetUniqueId
  63:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 134              		.loc 1 63 0
 135 0030 7A69     		ldr	r2, [r7, #20]
 136 0032 BB69     		ldr	r3, [r7, #24]
 137 0034 0093     		str	r3, [sp]
 138 0036 1346     		mov	r3, r2
 139 0038 2D4A     		ldr	r2, .L3+4
 140 003a 1821     		movs	r1, #24
 141 003c 2D48     		ldr	r0, .L3+8
 142 003e FFF7FEFF 		bl	snprintf
  64:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  65:notoriOS.c    ****     system_info.modem_info = &modem_info;
 143              		.loc 1 65 0
 144 0042 2D4B     		ldr	r3, .L3+12
 145 0044 2D4A     		ldr	r2, .L3+16
 146 0046 1A60     		str	r2, [r3]
  66:notoriOS.c    ****     
  67:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  68:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","ec2-13-59-131-167.us-eas
 147              		.loc 1 68 0
 148 0048 2D4A     		ldr	r2, .L3+20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 5


 149 004a 2E4B     		ldr	r3, .L3+24
 150 004c 1446     		mov	r4, r2
 151 004e 1D46     		mov	r5, r3
 152 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 153 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 154 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 155 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 156 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 157 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 158 005c 2B68     		ldr	r3, [r5]
 159 005e 2380     		strh	r3, [r4]	@ movhi
  69:notoriOS.c    ****    
  70:notoriOS.c    ****     system_settings.ep_port = 5000;
 160              		.loc 1 70 0
 161 0060 274B     		ldr	r3, .L3+20
 162 0062 41F28832 		movw	r2, #5000
 163 0066 5A66     		str	r2, [r3, #100]
  71:notoriOS.c    ****     // Don't need the following for new nodes
  72:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  73:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  74:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  75:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  76:notoriOS.c    ****         
  77:notoriOS.c    ****     
  78:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  79:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 164              		.loc 1 79 0
 165 0068 274B     		ldr	r3, .L3+28
 166 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 167 006c 99B2     		uxth	r1, r3
 168 006e 274C     		ldr	r4, .L3+32
 169 0070 3846     		mov	r0, r7
 170 0072 0723     		movs	r3, #7
 171 0074 0122     		movs	r2, #1
 172 0076 FFF7FEFF 		bl	CreateAlarm
 173 007a 2246     		mov	r2, r4
 174 007c 3B46     		mov	r3, r7
 175 007e 1968     		ldr	r1, [r3]	@ unaligned
 176 0080 1160     		str	r1, [r2]	@ unaligned
 177 0082 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 178 0084 9380     		strh	r3, [r2, #4]	@ unaligned
  80:notoriOS.c    ****     timeToMeasure = 1u;
 179              		.loc 1 80 0
 180 0086 224B     		ldr	r3, .L3+36
 181 0088 0122     		movs	r2, #1
 182 008a 1A70     		strb	r2, [r3]
  81:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  82:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 183              		.loc 1 82 0
 184 008c 1E4B     		ldr	r3, .L3+28
 185 008e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 186 0090 99B2     		uxth	r1, r3
 187 0092 204C     		ldr	r4, .L3+40
 188 0094 3846     		mov	r0, r7
 189 0096 0723     		movs	r3, #7
 190 0098 0122     		movs	r2, #1
 191 009a FFF7FEFF 		bl	CreateAlarm
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 6


 192 009e 2246     		mov	r2, r4
 193 00a0 3B46     		mov	r3, r7
 194 00a2 1968     		ldr	r1, [r3]	@ unaligned
 195 00a4 1160     		str	r1, [r2]	@ unaligned
 196 00a6 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 197 00a8 9380     		strh	r3, [r2, #4]	@ unaligned
  83:notoriOS.c    ****     timeToSync = 1u;
 198              		.loc 1 83 0
 199 00aa 1B4B     		ldr	r3, .L3+44
 200 00ac 0122     		movs	r2, #1
 201 00ae 1A70     		strb	r2, [r3]
  84:notoriOS.c    ****     
  85:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 202              		.loc 1 85 0
 203 00b0 1A4B     		ldr	r3, .L3+48
 204 00b2 0022     		movs	r2, #0
 205 00b4 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     
  87:notoriOS.c    ****     // send hey to server saying the node rebooted
  88:notoriOS.c    ****     hey = 1u;
 206              		.loc 1 88 0
 207 00b6 1A4B     		ldr	r3, .L3+52
 208 00b8 0122     		movs	r2, #1
 209 00ba 1A70     		strb	r2, [r3]
  89:notoriOS.c    ****     char c_hey[10];
  90:notoriOS.c    ****     snprintf(c_hey,sizeof(c_hey),"%d",hey);
 210              		.loc 1 90 0
 211 00bc 184B     		ldr	r3, .L3+52
 212 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 213 00c0 07F10800 		add	r0, r7, #8
 214 00c4 174A     		ldr	r2, .L3+56
 215 00c6 0A21     		movs	r1, #10
 216 00c8 FFF7FEFF 		bl	snprintf
  91:notoriOS.c    ****     pushData("reboot",c_hey,getTimeStamp());
 217              		.loc 1 91 0
 218 00cc FFF7FEFF 		bl	getTimeStamp
 219 00d0 0246     		mov	r2, r0
 220 00d2 07F10803 		add	r3, r7, #8
 221 00d6 1946     		mov	r1, r3
 222 00d8 1348     		ldr	r0, .L3+60
 223 00da FFF7FEFF 		bl	pushData
  92:notoriOS.c    ****     
  93:notoriOS.c    ****     // Initialize the try counter to 0
  94:notoriOS.c    ****     uint8 try_counter = 0;
 224              		.loc 1 94 0
 225 00de 0023     		movs	r3, #0
 226 00e0 FB77     		strb	r3, [r7, #31]
  95:notoriOS.c    **** }
 227              		.loc 1 95 0
 228 00e2 00BF     		nop
 229 00e4 2037     		adds	r7, r7, #32
 230              		.cfi_def_cfa_offset 16
 231 00e6 BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
 234 00e8 B0BD     		pop	{r4, r5, r7, pc}
 235              	.L4:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 7


 236 00ea 00BF     		.align	2
 237              	.L3:
 238 00ec 00000000 		.word	Wakeup_ISR
 239 00f0 00000000 		.word	.LC0
 240 00f4 04000000 		.word	system_info+4
 241 00f8 00000000 		.word	system_info
 242 00fc 00000000 		.word	modem_info
 243 0100 00000000 		.word	system_settings
 244 0104 08000000 		.word	.LC1
 245 0108 00000000 		.word	updatable_parameters
 246 010c 00000000 		.word	alarmMeasure
 247 0110 00000000 		.word	timeToMeasure
 248 0114 00000000 		.word	alarmSync
 249 0118 00000000 		.word	timeToSync
 250 011c 00000000 		.word	timeToSycnRemoteParams
 251 0120 00000000 		.word	hey
 252 0124 3C000000 		.word	.LC2
 253 0128 40000000 		.word	.LC3
 254              		.cfi_endproc
 255              	.LFE65:
 256              		.size	ReadyOrNot, .-ReadyOrNot
 257              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 258              		.align	2
 259              		.global	WorkWorkWorkWorkWorkWork
 260              		.thumb
 261              		.thumb_func
 262              		.type	WorkWorkWorkWorkWorkWork, %function
 263              	WorkWorkWorkWorkWorkWork:
 264              	.LFB66:
  96:notoriOS.c    **** 
  97:notoriOS.c    **** 
  98:notoriOS.c    **** // ==============================================
  99:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
 100:notoriOS.c    **** //      - Rhiana, feat Drake (2016)
 101:notoriOS.c    **** //
 102:notoriOS.c    **** // Prorcesses core tasks
 103:notoriOS.c    **** // ==============================================
 104:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
 105:notoriOS.c    **** {
 265              		.loc 1 105 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269 0000 80B5     		push	{r7, lr}
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 82B0     		sub	sp, sp, #8
 274              		.cfi_def_cfa_offset 16
 275 0004 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
 106:notoriOS.c    ****     
 107:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 108:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 109:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
 110:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 111:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 8


 112:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 113:notoriOS.c    ****     if(timeToSycnRemoteParams){
 277              		.loc 1 113 0
 278 0006 144B     		ldr	r3, .L10
 279 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 000a 002B     		cmp	r3, #0
 281 000c 06D0     		beq	.L6
 114:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
 282              		.loc 1 114 0
 283 000e FFF7FEFF 		bl	configureRemoteParams
 284 0012 0346     		mov	r3, r0
 285 0014 1A46     		mov	r2, r3
 286 0016 104B     		ldr	r3, .L10
 287 0018 1A70     		strb	r2, [r3]
 288 001a 14E0     		b	.L7
 289              	.L6:
 115:notoriOS.c    ****     }
 116:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 117:notoriOS.c    ****     else if(timeToMeasure){
 290              		.loc 1 117 0
 291 001c 0F4B     		ldr	r3, .L10+4
 292 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 293 0020 002B     		cmp	r3, #0
 294 0022 06D0     		beq	.L8
 118:notoriOS.c    ****         //(int i=0; i<=30; i++){
 119:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 295              		.loc 1 119 0
 296 0024 FFF7FEFF 		bl	makeMeasurements
 297 0028 0346     		mov	r3, r0
 298 002a 1A46     		mov	r2, r3
 299 002c 0B4B     		ldr	r3, .L10+4
 300 002e 1A70     		strb	r2, [r3]
 301 0030 09E0     		b	.L7
 302              	.L8:
 120:notoriOS.c    ****         //CyDelay(1000u);
 121:notoriOS.c    ****         //}
 122:notoriOS.c    ****     }else if(timeToSync){
 303              		.loc 1 122 0
 304 0032 0B4B     		ldr	r3, .L10+8
 305 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 0036 002B     		cmp	r3, #0
 307 0038 05D0     		beq	.L7
 123:notoriOS.c    ****             timeToSync = syncData();
 308              		.loc 1 123 0
 309 003a FFF7FEFF 		bl	syncData
 310 003e 0346     		mov	r3, r0
 311 0040 1A46     		mov	r2, r3
 312 0042 074B     		ldr	r3, .L10+8
 313 0044 1A70     		strb	r2, [r3]
 314              	.L7:
 124:notoriOS.c    ****     }
 125:notoriOS.c    ****     // Print the countdown to the next alarm
 126:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 127:notoriOS.c    ****     
 128:notoriOS.c    ****     
 129:notoriOS.c    ****     // Check modem state machine on every loop
 130:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 9


 315              		.loc 1 130 0
 316 0046 FFF7FEFF 		bl	modem_process_tasks
 317 004a 0346     		mov	r3, r0
 318 004c FB71     		strb	r3, [r7, #7]
 131:notoriOS.c    **** 
 132:notoriOS.c    ****     return 0u +  modem_status;  
 319              		.loc 1 132 0
 320 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 133:notoriOS.c    **** }
 321              		.loc 1 133 0
 322 0050 1846     		mov	r0, r3
 323 0052 0837     		adds	r7, r7, #8
 324              		.cfi_def_cfa_offset 8
 325 0054 BD46     		mov	sp, r7
 326              		.cfi_def_cfa_register 13
 327              		@ sp needed
 328 0056 80BD     		pop	{r7, pc}
 329              	.L11:
 330              		.align	2
 331              	.L10:
 332 0058 00000000 		.word	timeToSycnRemoteParams
 333 005c 00000000 		.word	timeToMeasure
 334 0060 00000000 		.word	timeToSync
 335              		.cfi_endproc
 336              	.LFE66:
 337              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 338              		.section	.text.LayBack,"ax",%progbits
 339              		.align	2
 340              		.global	LayBack
 341              		.thumb
 342              		.thumb_func
 343              		.type	LayBack, %function
 344              	LayBack:
 345              	.LFB67:
 134:notoriOS.c    **** 
 135:notoriOS.c    **** 
 136:notoriOS.c    **** 
 137:notoriOS.c    **** 
 138:notoriOS.c    **** 
 139:notoriOS.c    **** 
 140:notoriOS.c    **** // ==============================================
 141:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 142:notoriOS.c    **** //      - Snoop Dogg (1993)
 143:notoriOS.c    **** //
 144:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 145:notoriOS.c    **** // ==============================================
 146:notoriOS.c    **** void LayBack()
 147:notoriOS.c    **** {
 346              		.loc 1 147 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
 353              		.cfi_offset 14, -4
 354 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 10


 355              		.cfi_def_cfa_register 7
 148:notoriOS.c    ****   
 149:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 356              		.loc 1 149 0
 357 0004 FFF7FEFF 		bl	modem_sleep
 150:notoriOS.c    ****     
 151:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 152:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 358              		.loc 1 152 0
 359 0008 FFF7FEFF 		bl	debug_sleep
 153:notoriOS.c    ****     
 154:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 360              		.loc 1 154 0
 361 000c FFF7FEFF 		bl	CyPmSaveClocks
 155:notoriOS.c    ****     
 156:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 157:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 158:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 159:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 160:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 161:notoriOS.c    ****     //CyPmHibernate();
 162:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 163:notoriOS.c    **** 
 164:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 362              		.loc 1 164 0
 363 0010 4FF40061 		mov	r1, #2048
 364 0014 0020     		movs	r0, #0
 365 0016 FFF7FEFF 		bl	CyPmSleep
 165:notoriOS.c    **** 
 166:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 366              		.loc 1 166 0
 367 001a FFF7FEFF 		bl	CyPmRestoreClocks
 167:notoriOS.c    **** 
 168:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 368              		.loc 1 168 0
 369 001e FFF7FEFF 		bl	debug_wakeup
 169:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 370              		.loc 1 169 0
 371 0022 FFF7FEFF 		bl	modem_wakeup
 170:notoriOS.c    **** 
 171:notoriOS.c    **** }
 372              		.loc 1 171 0
 373 0026 00BF     		nop
 374 0028 80BD     		pop	{r7, pc}
 375              		.cfi_endproc
 376              	.LFE67:
 377              		.size	LayBack, .-LayBack
 378 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 379              		.align	2
 380              		.global	AyoItsTime
 381              		.thumb
 382              		.thumb_func
 383              		.type	AyoItsTime, %function
 384              	AyoItsTime:
 385              	.LFB68:
 172:notoriOS.c    **** 
 173:notoriOS.c    **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 11


 174:notoriOS.c    **** // ==============================================
 175:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 176:notoriOS.c    **** //      - NAS (1994)
 177:notoriOS.c    **** //
 178:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 179:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 180:notoriOS.c    **** // It will add tasks to the work queue,
 181:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 182:notoriOS.c    **** // ==============================================
 183:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 184:notoriOS.c    **** {
 386              		.loc 1 184 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 8
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 82B0     		sub	sp, sp, #8
 395              		.cfi_def_cfa_offset 16
 396 0004 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
 398 0006 0346     		mov	r3, r0
 399 0008 FB71     		strb	r3, [r7, #7]
 185:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 186:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 400              		.loc 1 186 0
 401 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 402 000c 1946     		mov	r1, r3
 403 000e 0C48     		ldr	r0, .L17
 404 0010 FFF7FEFF 		bl	AlarmReady
 405 0014 0346     		mov	r3, r0
 406 0016 002B     		cmp	r3, #0
 407 0018 02D0     		beq	.L14
 187:notoriOS.c    ****     {
 188:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 189:notoriOS.c    ****         timeToMeasure = 1u;
 408              		.loc 1 189 0
 409 001a 0A4B     		ldr	r3, .L17+4
 410 001c 0122     		movs	r2, #1
 411 001e 1A70     		strb	r2, [r3]
 412              	.L14:
 190:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 191:notoriOS.c    ****         
 192:notoriOS.c    ****     }
 193:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 413              		.loc 1 193 0
 414 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 415 0022 1946     		mov	r1, r3
 416 0024 0848     		ldr	r0, .L17+8
 417 0026 FFF7FEFF 		bl	AlarmReady
 418 002a 0346     		mov	r3, r0
 419 002c 002B     		cmp	r3, #0
 420 002e 02D0     		beq	.L16
 194:notoriOS.c    ****     {
 195:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 12


 196:notoriOS.c    ****         timeToSync = 1u;
 421              		.loc 1 196 0
 422 0030 064B     		ldr	r3, .L17+12
 423 0032 0122     		movs	r2, #1
 424 0034 1A70     		strb	r2, [r3]
 425              	.L16:
 197:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 198:notoriOS.c    ****     }
 199:notoriOS.c    ****     
 200:notoriOS.c    **** }
 426              		.loc 1 200 0
 427 0036 00BF     		nop
 428 0038 0837     		adds	r7, r7, #8
 429              		.cfi_def_cfa_offset 8
 430 003a BD46     		mov	sp, r7
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 003c 80BD     		pop	{r7, pc}
 434              	.L18:
 435 003e 00BF     		.align	2
 436              	.L17:
 437 0040 00000000 		.word	alarmMeasure
 438 0044 00000000 		.word	timeToMeasure
 439 0048 00000000 		.word	alarmSync
 440 004c 00000000 		.word	timeToSync
 441              		.cfi_endproc
 442              	.LFE68:
 443              		.size	AyoItsTime, .-AyoItsTime
 444              		.section	.text.AlarmReady,"ax",%progbits
 445              		.align	2
 446              		.global	AlarmReady
 447              		.thumb
 448              		.thumb_func
 449              		.type	AlarmReady, %function
 450              	AlarmReady:
 451              	.LFB69:
 201:notoriOS.c    **** 
 202:notoriOS.c    **** 
 203:notoriOS.c    **** // ==============================================
 204:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 205:notoriOS.c    **** // ==============================================
 206:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 207:notoriOS.c    **** {
 452              		.loc 1 207 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 8
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 82B0     		sub	sp, sp, #8
 461              		.cfi_def_cfa_offset 16
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
 464 0006 7860     		str	r0, [r7, #4]
 465 0008 0B46     		mov	r3, r1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 13


 466 000a FB70     		strb	r3, [r7, #3]
 208:notoriOS.c    ****     // if the countDownType matches the alarmType
 209:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 467              		.loc 1 209 0
 468 000c 7B68     		ldr	r3, [r7, #4]
 469 000e 1B79     		ldrb	r3, [r3, #4]
 470 0010 DBB2     		uxtb	r3, r3
 471 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 472 0014 9A42     		cmp	r2, r3
 473 0016 12D1     		bne	.L20
 210:notoriOS.c    ****        
 211:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 212:notoriOS.c    ****         // Decrement the count down value by 1
 213:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 474              		.loc 1 213 0
 475 0018 7B68     		ldr	r3, [r7, #4]
 476 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 477 001c 1BB2     		sxth	r3, r3
 478 001e 9BB2     		uxth	r3, r3
 479 0020 013B     		subs	r3, r3, #1
 480 0022 9BB2     		uxth	r3, r3
 481 0024 1AB2     		sxth	r2, r3
 482 0026 7B68     		ldr	r3, [r7, #4]
 483 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 214:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 215:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 484              		.loc 1 215 0
 485 002a 7B68     		ldr	r3, [r7, #4]
 486 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 487 002e 1BB2     		sxth	r3, r3
 488 0030 002B     		cmp	r3, #0
 489 0032 04DC     		bgt	.L20
 216:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 490              		.loc 1 216 0
 491 0034 7868     		ldr	r0, [r7, #4]
 492 0036 FFF7FEFF 		bl	ResetAlarm
 217:notoriOS.c    ****             return 1u;
 493              		.loc 1 217 0
 494 003a 0123     		movs	r3, #1
 495 003c 00E0     		b	.L21
 496              	.L20:
 218:notoriOS.c    ****         } 
 219:notoriOS.c    ****     }
 220:notoriOS.c    ****     
 221:notoriOS.c    ****     return 0u; // Otherwise return 0
 497              		.loc 1 221 0
 498 003e 0023     		movs	r3, #0
 499              	.L21:
 222:notoriOS.c    **** }
 500              		.loc 1 222 0
 501 0040 1846     		mov	r0, r3
 502 0042 0837     		adds	r7, r7, #8
 503              		.cfi_def_cfa_offset 8
 504 0044 BD46     		mov	sp, r7
 505              		.cfi_def_cfa_register 13
 506              		@ sp needed
 507 0046 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 14


 508              		.cfi_endproc
 509              	.LFE69:
 510              		.size	AlarmReady, .-AlarmReady
 511              		.section	.text.ResetAlarm,"ax",%progbits
 512              		.align	2
 513              		.global	ResetAlarm
 514              		.thumb
 515              		.thumb_func
 516              		.type	ResetAlarm, %function
 517              	ResetAlarm:
 518              	.LFB70:
 223:notoriOS.c    **** 
 224:notoriOS.c    **** // ==============================================
 225:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 226:notoriOS.c    **** // ==============================================
 227:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 228:notoriOS.c    **** {
 519              		.loc 1 228 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0000 80B4     		push	{r7}
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0002 83B0     		sub	sp, sp, #12
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 229:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 230:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 532              		.loc 1 230 0
 533 0008 7B68     		ldr	r3, [r7, #4]
 534 000a 1B88     		ldrh	r3, [r3]	@ movhi
 535 000c 9BB2     		uxth	r3, r3
 536 000e 1AB2     		sxth	r2, r3
 537 0010 7B68     		ldr	r3, [r7, #4]
 538 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 231:notoriOS.c    **** }
 539              		.loc 1 231 0
 540 0014 00BF     		nop
 541 0016 0C37     		adds	r7, r7, #12
 542              		.cfi_def_cfa_offset 4
 543 0018 BD46     		mov	sp, r7
 544              		.cfi_def_cfa_register 13
 545              		@ sp needed
 546 001a 80BC     		pop	{r7}
 547              		.cfi_restore 7
 548              		.cfi_def_cfa_offset 0
 549 001c 7047     		bx	lr
 550              		.cfi_endproc
 551              	.LFE70:
 552              		.size	ResetAlarm, .-ResetAlarm
 553 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
 554              		.align	2
 555              		.global	CreateAlarm
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 15


 556              		.thumb
 557              		.thumb_func
 558              		.type	CreateAlarm, %function
 559              	CreateAlarm:
 560              	.LFB71:
 232:notoriOS.c    **** 
 233:notoriOS.c    **** // ==============================================
 234:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 235:notoriOS.c    **** // ==============================================
 236:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 237:notoriOS.c    **** {
 561              		.loc 1 237 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 16
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566 0000 80B4     		push	{r7}
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 0002 85B0     		sub	sp, sp, #20
 570              		.cfi_def_cfa_offset 24
 571 0004 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 573 0006 7860     		str	r0, [r7, #4]
 574 0008 0846     		mov	r0, r1
 575 000a 1146     		mov	r1, r2
 576 000c 1A46     		mov	r2, r3
 577 000e 0346     		mov	r3, r0	@ movhi
 578 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 579 0012 0B46     		mov	r3, r1
 580 0014 7B70     		strb	r3, [r7, #1]
 581 0016 1346     		mov	r3, r2
 582 0018 3B70     		strb	r3, [r7]
 238:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 239:notoriOS.c    ****     alarm newAlarm;
 240:notoriOS.c    ****     
 241:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 242:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 583              		.loc 1 242 0
 584 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 585 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 243:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 586              		.loc 1 243 0
 587 001e 7B78     		ldrb	r3, [r7, #1]
 588 0020 3B73     		strb	r3, [r7, #12]
 244:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 589              		.loc 1 244 0
 590 0022 3B78     		ldrb	r3, [r7]
 591 0024 7B73     		strb	r3, [r7, #13]
 245:notoriOS.c    ****     
 246:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 247:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 248:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 592              		.loc 1 248 0
 593 0026 B7F90230 		ldrsh	r3, [r7, #2]
 594 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 249:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 16


 250:notoriOS.c    ****     return newAlarm;
 595              		.loc 1 250 0
 596 002c 7B68     		ldr	r3, [r7, #4]
 597 002e 1A46     		mov	r2, r3
 598 0030 07F10803 		add	r3, r7, #8
 599 0034 1868     		ldr	r0, [r3]	@ unaligned
 600 0036 1060     		str	r0, [r2]	@ unaligned
 601 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 602 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 251:notoriOS.c    ****     
 252:notoriOS.c    **** }
 603              		.loc 1 252 0
 604 003c 7868     		ldr	r0, [r7, #4]
 605 003e 1437     		adds	r7, r7, #20
 606              		.cfi_def_cfa_offset 4
 607 0040 BD46     		mov	sp, r7
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 0042 80BC     		pop	{r7}
 611              		.cfi_restore 7
 612              		.cfi_def_cfa_offset 0
 613 0044 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE71:
 616              		.size	CreateAlarm, .-CreateAlarm
 617 0046 00BF     		.section	.rodata
 618 0047 00       		.align	2
 619              	.LC4:
 620 0048 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 620      2D2D2D2D 
 620      2D2D2D2D 
 620      2D424547 
 620      494E2054 
 621 0072 0000     		.align	2
 622              	.LC5:
 623 0074 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\012\000"
 623      3D25732C 
 623      2053494D 
 623      49443D25 
 623      732C2044 
 624              		.align	2
 625              	.LC6:
 626 0094 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 626      2D2D2D2D 
 626      2D2D2D2D 
 626      2D2D2D45 
 626      4E442054 
 627 00bd 00       		.ascii	"\000"
 628              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 629              		.align	2
 630              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 631              		.thumb
 632              		.thumb_func
 633              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 634              	ChickityCheckYourselfBeforeYouWreckYourself:
 635              	.LFB72:
 253:notoriOS.c    **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 17


 254:notoriOS.c    **** // ==============================================
 255:notoriOS.c    **** // Dropping bombs on your moms
 256:notoriOS.c    **** //      - Ice Cube (1992)
 257:notoriOS.c    **** //
 258:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 259:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 260:notoriOS.c    **** // ==============================================
 261:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 636              		.loc 1 261 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 1552
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 90B5     		push	{r4, r7, lr}
 641              		.cfi_def_cfa_offset 12
 642              		.cfi_offset 4, -12
 643              		.cfi_offset 7, -8
 644              		.cfi_offset 14, -4
 645 0002 ADF28C7D 		subw	sp, sp, #1932
 646              		.cfi_def_cfa_offset 1944
 647 0006 5EAF     		add	r7, sp, #376
 648              		.cfi_def_cfa 7, 1568
 262:notoriOS.c    **** 
 263:notoriOS.c    ****     //test_t t_influx = influx_test();
 264:notoriOS.c    ****     //printTestStatus(t_influx);
 265:notoriOS.c    ****     
 266:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 649              		.loc 1 266 0
 650 0008 2F49     		ldr	r1, .L26
 651 000a 0320     		movs	r0, #3
 652 000c FFF7FEFF 		bl	printNotif
 267:notoriOS.c    ****     
 268:notoriOS.c    ****     // Test level sensor
 269:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 653              		.loc 1 269 0
 654 0010 07F28C43 		addw	r3, r7, #1164
 655 0014 1846     		mov	r0, r3
 656 0016 FFF7FEFF 		bl	level_sensor_test
 270:notoriOS.c    ****     printTestStatus(t_level_sensor);
 657              		.loc 1 270 0
 658 001a 07F28C44 		addw	r4, r7, #1164
 659 001e 6846     		mov	r0, sp
 660 0020 04F11003 		add	r3, r4, #16
 661 0024 40F27112 		movw	r2, #369
 662 0028 1946     		mov	r1, r3
 663 002a FFF7FEFF 		bl	memcpy
 664 002e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 665 0032 FFF7FEFF 		bl	printTestStatus
 271:notoriOS.c    ****     
 272:notoriOS.c    ****     // Test voltages
 273:notoriOS.c    ****     test_t t_voltages = voltages_test();
 666              		.loc 1 273 0
 667 0036 07F54273 		add	r3, r7, #776
 668 003a 1846     		mov	r0, r3
 669 003c FFF7FEFF 		bl	voltages_test
 274:notoriOS.c    ****     printTestStatus(t_voltages);
 670              		.loc 1 274 0
 671 0040 07F54274 		add	r4, r7, #776
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 18


 672 0044 6846     		mov	r0, sp
 673 0046 04F11003 		add	r3, r4, #16
 674 004a 40F27112 		movw	r2, #369
 675 004e 1946     		mov	r1, r3
 676 0050 FFF7FEFF 		bl	memcpy
 677 0054 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 678 0058 FFF7FEFF 		bl	printTestStatus
 275:notoriOS.c    ****     
 276:notoriOS.c    ****     // Test SD card
 277:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 679              		.loc 1 277 0
 680 005c 07F5C273 		add	r3, r7, #388
 681 0060 1846     		mov	r0, r3
 682 0062 FFF7FEFF 		bl	SD_card_test
 278:notoriOS.c    ****     printTestStatus(t_sd_card);
 683              		.loc 1 278 0
 684 0066 07F5C274 		add	r4, r7, #388
 685 006a 6846     		mov	r0, sp
 686 006c 04F11003 		add	r3, r4, #16
 687 0070 40F27112 		movw	r2, #369
 688 0074 1946     		mov	r1, r3
 689 0076 FFF7FEFF 		bl	memcpy
 690 007a 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 691 007e FFF7FEFF 		bl	printTestStatus
 279:notoriOS.c    ****     
 280:notoriOS.c    ****     // Test modem
 281:notoriOS.c    ****     test_t t_modem = modem_test();
 692              		.loc 1 281 0
 693 0082 3B46     		mov	r3, r7
 694 0084 1846     		mov	r0, r3
 695 0086 FFF7FEFF 		bl	modem_test
 282:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s\n",modem_info.imei,modem_info.sim
 696              		.loc 1 282 0
 697 008a 104B     		ldr	r3, .L26+4
 698 008c 0093     		str	r3, [sp]
 699 008e 104B     		ldr	r3, .L26+8
 700 0090 104A     		ldr	r2, .L26+12
 701 0092 1149     		ldr	r1, .L26+16
 702 0094 0320     		movs	r0, #3
 703 0096 FFF7FEFF 		bl	printNotif
 283:notoriOS.c    ****     printTestStatus(t_modem);
 704              		.loc 1 283 0
 705 009a 3C46     		mov	r4, r7
 706 009c 6846     		mov	r0, sp
 707 009e 04F11003 		add	r3, r4, #16
 708 00a2 40F27112 		movw	r2, #369
 709 00a6 1946     		mov	r1, r3
 710 00a8 FFF7FEFF 		bl	memcpy
 711 00ac 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 712 00b0 FFF7FEFF 		bl	printTestStatus
 284:notoriOS.c    ****     
 285:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 713              		.loc 1 285 0
 714 00b4 0949     		ldr	r1, .L26+20
 715 00b6 0320     		movs	r0, #3
 716 00b8 FFF7FEFF 		bl	printNotif
 286:notoriOS.c    **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 19


 287:notoriOS.c    **** }
 717              		.loc 1 287 0
 718 00bc 00BF     		nop
 719 00be 07F21467 		addw	r7, r7, #1556
 720              		.cfi_def_cfa_offset 12
 721 00c2 BD46     		mov	sp, r7
 722              		.cfi_def_cfa_register 13
 723              		@ sp needed
 724 00c4 90BD     		pop	{r4, r7, pc}
 725              	.L27:
 726 00c6 00BF     		.align	2
 727              	.L26:
 728 00c8 48000000 		.word	.LC4
 729 00cc 04000000 		.word	system_info+4
 730 00d0 00000000 		.word	modem_info
 731 00d4 28000000 		.word	modem_info+40
 732 00d8 74000000 		.word	.LC5
 733 00dc 94000000 		.word	.LC6
 734              		.cfi_endproc
 735              	.LFE72:
 736              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 737              		.section	.text.main,"ax",%progbits
 738              		.align	2
 739              		.global	main
 740              		.thumb
 741              		.thumb_func
 742              		.type	main, %function
 743              	main:
 744              	.LFB73:
 288:notoriOS.c    **** 
 289:notoriOS.c    **** // ==============================================
 290:notoriOS.c    **** // Processes Core Tasks
 291:notoriOS.c    **** // ==============================================
 292:notoriOS.c    **** int main(void)
 293:notoriOS.c    **** {
 745              		.loc 1 293 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 1, uses_anonymous_args = 0
 749 0000 80B5     		push	{r7, lr}
 750              		.cfi_def_cfa_offset 8
 751              		.cfi_offset 7, -8
 752              		.cfi_offset 14, -4
 753 0002 00AF     		add	r7, sp, #0
 754              		.cfi_def_cfa_register 7
 294:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 755              		.loc 1 294 0
 756              		.syntax unified
 757              	@ 294 "notoriOS.c" 1
 758 0004 62B6     		CPSIE   i
 759              	@ 0 "" 2
 295:notoriOS.c    **** 
 296:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 760              		.loc 1 296 0
 761              		.thumb
 762              		.syntax unified
 763 0006 FFF7FEFF 		bl	ReadyOrNot
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 20


 297:notoriOS.c    ****     
 298:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 764              		.loc 1 298 0
 765 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 766              	.L30:
 299:notoriOS.c    ****    
 300:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 301:notoriOS.c    ****     {
 302:notoriOS.c    ****         
 303:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 767              		.loc 1 303 0
 768 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 769 0012 0346     		mov	r3, r0
 770 0014 002B     		cmp	r3, #0
 771 0016 FAD1     		bne	.L30
 304:notoriOS.c    ****         {
 305:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
 772              		.loc 1 305 0
 773 0018 FFF7FEFF 		bl	LayBack
 306:notoriOS.c    ****         }
 307:notoriOS.c    ****     }
 774              		.loc 1 307 0
 775 001c F7E7     		b	.L30
 776              		.cfi_endproc
 777              	.LFE73:
 778              		.size	main, .-main
 779 001e 00BF     		.section	.rodata
 780 00be 0000     		.align	2
 781              	.LC7:
 782 00c0 4D6F6465 		.ascii	"Modem is ready.\000"
 782      6D206973 
 782      20726561 
 782      64792E00 
 783              		.align	2
 784              	.LC8:
 785 00d0 72737270 		.ascii	"rsrp\000"
 785      00
 786 00d5 000000   		.align	2
 787              	.LC9:
 788 00d8 7472795F 		.ascii	"try_counter\000"
 788      636F756E 
 788      74657200 
 789              		.align	2
 790              	.LC10:
 791 00e4 64617461 		.ascii	"data_count_sent\000"
 791      5F636F75 
 791      6E745F73 
 791      656E7400 
 792              		.align	2
 793              	.LC11:
 794 00f4 64617461 		.ascii	"data_count_desired\000"
 794      5F636F75 
 794      6E745F64 
 794      65736972 
 794      656400
 795 0107 00       		.align	2
 796              	.LC12:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 21


 797 0108 42656769 		.ascii	"Begin HTTP post.\000"
 797      6E204854 
 797      54502070 
 797      6F73742E 
 797      00
 798 0119 000000   		.align	2
 799              	.LC13:
 800 011c 65363030 		.ascii	"e60087b7040131d45aa75b17d43483d7adef7b58\000"
 800      38376237 
 800      30343031 
 800      33316434 
 800      35616137 
 801 0145 000000   		.align	2
 802              	.LC14:
 803 0148 6170692F 		.ascii	"api/v1/write\000"
 803      76312F77 
 803      72697465 
 803      00
 804 0155 000000   		.align	2
 805              	.LC15:
 806 0158 48545450 		.ascii	"HTTP route: %s\000"
 806      20726F75 
 806      74653A20 
 806      257300
 807 0167 00       		.align	2
 808              	.LC16:
 809 0168 312E3100 		.ascii	"1.1\000"
 810              		.align	2
 811              	.LC17:
 812 016c 00       		.ascii	"\000"
 813 016d 000000   		.align	2
 814              	.LC18:
 815 0170 436C6F73 		.ascii	"Close\000"
 815      6500
 816 0176 0000     		.align	2
 817              	.LC19:
 818 0178 504F5354 		.ascii	"POST\000"
 818      00
 819 017d 000000   		.align	2
 820              	.LC20:
 821 0180 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 821      20485454 
 821      50205265 
 821      71756573 
 821      743A2025 
 822 0196 0000     		.align	2
 823              	.LC21:
 824 0198 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 824      443D312C 
 824      302C2564 
 824      2C222573 
 824      222C302C 
 825 01b1 000000   		.align	2
 826              	.LC22:
 827 01b4 257300   		.ascii	"%s\000"
 828 01b7 00       		.align	2
 829              	.LC23:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 22


 830 01b8 4F4B00   		.ascii	"OK\000"
 831              		.global	__aeabi_ui2d
 832              		.global	__aeabi_d2iz
 833 01bb 00       		.align	2
 834              	.LC24:
 835 01bc 68747470 		.ascii	"http_request len: %d\000"
 835      5F726571 
 835      75657374 
 835      206C656E 
 835      3A202564 
 836 01d1 000000   		.align	2
 837              	.LC25:
 838 01d4 23206F66 		.ascii	"# of packets: %d\000"
 838      20706163 
 838      6B657473 
 838      3A202564 
 838      00
 839 01e5 000000   		.align	2
 840              	.LC26:
 841 01e8 3E00     		.ascii	">\000"
 842 01ea 0000     		.align	2
 843              	.LC27:
 844 01ec 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 844      53454E44 
 844      3D310D0A 
 844      00
 845 01f9 000000   		.align	2
 846              	.LC28:
 847 01fc 1A00     		.ascii	"\032\000"
 848 01fe 0000     		.align	2
 849              	.LC29:
 850 0200 6368756E 		.ascii	"chunk %d: %s\000"
 850      6B202564 
 850      3A202573 
 850      00
 851 020d 000000   		.align	2
 852              	.LC30:
 853 0210 5352494E 		.ascii	"SRING\000"
 853      4700
 854 0216 0000     		.align	2
 855              	.LC31:
 856 0218 4F532D4F 		.ascii	"OS-OK\000"
 856      4B00
 857 021e 0000     		.align	2
 858              	.LC32:
 859 0220 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 859      52454356 
 859      3D312C31 
 859      3030300D 
 859      00
 860 0231 000000   		.align	2
 861              	.LC33:
 862 0234 6D6F6465 		.ascii	"modem_tx_time\000"
 862      6D5F7478 
 862      5F74696D 
 862      6500
 863 0242 0000     		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 23


 864              	.LC34:
 865 0244 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 865      4F3A2043 
 865      6F756C64 
 865      206E6F74 
 865      20726563 
 866              		.section	.text.syncData,"ax",%progbits
 867              		.align	2
 868              		.global	syncData
 869              		.thumb
 870              		.thumb_func
 871              		.type	syncData, %function
 872              	syncData:
 873              	.LFB74:
 308:notoriOS.c    **** }
 309:notoriOS.c    **** 
 310:notoriOS.c    **** // ==============================================
 311:notoriOS.c    **** // Syncs data with server
 312:notoriOS.c    **** // Returns 0 when done
 313:notoriOS.c    **** // ==============================================
 314:notoriOS.c    **** uint8 syncData(){
 874              		.loc 1 314 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 1336
 877              		@ frame_needed = 1, uses_anonymous_args = 0
 878 0000 90B5     		push	{r4, r7, lr}
 879              		.cfi_def_cfa_offset 12
 880              		.cfi_offset 4, -12
 881              		.cfi_offset 7, -8
 882              		.cfi_offset 14, -4
 883 0002 ADF2545D 		subw	sp, sp, #1364
 884              		.cfi_def_cfa_offset 1376
 885 0006 06AF     		add	r7, sp, #24
 886              		.cfi_def_cfa 7, 1352
 315:notoriOS.c    ****     
 316:notoriOS.c    ****     /*
 317:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 318:notoriOS.c    ****     uint8 check = 0;
 319:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 320:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 321:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 322:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 323:notoriOS.c    ****     */
 324:notoriOS.c    **** 
 325:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 326:notoriOS.c    ****     LED_Write(1u);
 887              		.loc 1 326 0
 888 0008 0120     		movs	r0, #1
 889 000a FFF7FEFF 		bl	LED_Write
 327:notoriOS.c    ****     CyDelay(100u);
 890              		.loc 1 327 0
 891 000e 6420     		movs	r0, #100
 892 0010 FFF7FEFF 		bl	CyDelay
 328:notoriOS.c    ****     LED_Write(0u);
 893              		.loc 1 328 0
 894 0014 0020     		movs	r0, #0
 895 0016 FFF7FEFF 		bl	LED_Write
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 24


 329:notoriOS.c    **** 
 330:notoriOS.c    ****     
 331:notoriOS.c    ****     // If there's no data, not need to do anything
 332:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 896              		.loc 1 332 0
 897 001a FFF7FEFF 		bl	sizeOfDataStack
 898 001e 0346     		mov	r3, r0
 899 0020 002B     		cmp	r3, #0
 900 0022 01D1     		bne	.L32
 333:notoriOS.c    ****         return 0u;
 901              		.loc 1 333 0
 902 0024 0023     		movs	r3, #0
 903 0026 F9E1     		b	.L33
 904              	.L32:
 334:notoriOS.c    ****         }
 335:notoriOS.c    ****     
 336:notoriOS.c    ****     // Create request body, in this case influx
 337:notoriOS.c    ****     // Place body into HTTP request header
 338:notoriOS.c    ****     // Fire up modem and get it out
 339:notoriOS.c    ****      
 340:notoriOS.c    ****     
 341:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 342:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 905              		.loc 1 342 0
 906 0028 FFF7FEFF 		bl	modem_get_state
 907 002c 0346     		mov	r3, r0
 908 002e 002B     		cmp	r3, #0
 909 0030 11D1     		bne	.L34
 343:notoriOS.c    **** 
 344:notoriOS.c    ****         try_counter++;
 910              		.loc 1 344 0
 911 0032 C74B     		ldr	r3, .L46
 912 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 913 0036 0133     		adds	r3, r3, #1
 914 0038 DAB2     		uxtb	r2, r3
 915 003a C54B     		ldr	r3, .L46
 916 003c 1A70     		strb	r2, [r3]
 345:notoriOS.c    ****         	
 346:notoriOS.c    ****         if(try_counter <= 2){
 917              		.loc 1 346 0
 918 003e C44B     		ldr	r3, .L46
 919 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 920 0042 022B     		cmp	r3, #2
 921 0044 02D8     		bhi	.L35
 347:notoriOS.c    ****             modem_power_up();
 922              		.loc 1 347 0
 923 0046 FFF7FEFF 		bl	modem_power_up
 924 004a E6E1     		b	.L36
 925              	.L35:
 348:notoriOS.c    ****         }else{
 349:notoriOS.c    ****             try_counter = 0;
 926              		.loc 1 349 0
 927 004c C04B     		ldr	r3, .L46
 928 004e 0022     		movs	r2, #0
 929 0050 1A70     		strb	r2, [r3]
 350:notoriOS.c    ****             return 0u;
 930              		.loc 1 350 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 25


 931 0052 0023     		movs	r3, #0
 932 0054 E2E1     		b	.L33
 933              	.L34:
 351:notoriOS.c    ****             }
 352:notoriOS.c    ****             
 353:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 934              		.loc 1 353 0
 935 0056 FFF7FEFF 		bl	modem_get_state
 936 005a 0346     		mov	r3, r0
 937 005c 042B     		cmp	r3, #4
 938 005e 40F0DC81 		bne	.L36
 939              	.LBB2:
 354:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 940              		.loc 1 354 0
 941 0062 BC49     		ldr	r1, .L46+4
 942 0064 0020     		movs	r0, #0
 943 0066 FFF7FEFF 		bl	printNotif
 355:notoriOS.c    ****         
 356:notoriOS.c    ****         http_request[0] = '\0';
 944              		.loc 1 356 0
 945 006a BB4B     		ldr	r3, .L46+8
 946 006c 0022     		movs	r2, #0
 947 006e 1A70     		strb	r2, [r3]
 357:notoriOS.c    ****         http_body[0] = '\0';
 948              		.loc 1 357 0
 949 0070 BA4B     		ldr	r3, .L46+12
 950 0072 0022     		movs	r2, #0
 951 0074 1A70     		strb	r2, [r3]
 358:notoriOS.c    ****         http_route[0] = '\0';
 952              		.loc 1 358 0
 953 0076 BA4B     		ldr	r3, .L46+16
 954 0078 0022     		movs	r2, #0
 955 007a 1A70     		strb	r2, [r3]
 359:notoriOS.c    ****         //char *base = "write";
 360:notoriOS.c    ****         
 361:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power)
 362:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 363:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 956              		.loc 1 363 0
 957 007c B94B     		ldr	r3, .L46+20
 958 007e 5B69     		ldr	r3, [r3, #20]
 959 0080 07F5A260 		add	r0, r7, #1296
 960 0084 B84A     		ldr	r2, .L46+24
 961 0086 1421     		movs	r1, #20
 962 0088 FFF7FEFF 		bl	snprintf
 364:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 963              		.loc 1 364 0
 964 008c FFF7FEFF 		bl	getTimeStamp
 965 0090 0246     		mov	r2, r0
 966 0092 07F5A263 		add	r3, r7, #1296
 967 0096 1946     		mov	r1, r3
 968 0098 B448     		ldr	r0, .L46+28
 969 009a FFF7FEFF 		bl	pushData
 365:notoriOS.c    ****         
 366:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 367:notoriOS.c    ****         char c_try_counter[20];
 368:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 26


 970              		.loc 1 368 0
 971 009e AC4B     		ldr	r3, .L46
 972 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 973 00a2 07F2FC40 		addw	r0, r7, #1276
 974 00a6 B04A     		ldr	r2, .L46+24
 975 00a8 1421     		movs	r1, #20
 976 00aa FFF7FEFF 		bl	snprintf
 369:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 977              		.loc 1 369 0
 978 00ae FFF7FEFF 		bl	getTimeStamp
 979 00b2 0246     		mov	r2, r0
 980 00b4 07F2FC43 		addw	r3, r7, #1276
 981 00b8 1946     		mov	r1, r3
 982 00ba AD48     		ldr	r0, .L46+32
 983 00bc FFF7FEFF 		bl	pushData
 370:notoriOS.c    ****         
 371:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
 372:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 373:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 374:notoriOS.c    ****         if(buffer_overflow == false){
 984              		.loc 1 374 0
 985 00c0 AC4B     		ldr	r3, .L46+36
 986 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 987 00c4 83F00103 		eor	r3, r3, #1
 988 00c8 DBB2     		uxtb	r3, r3
 989 00ca 002B     		cmp	r3, #0
 990 00cc 16D0     		beq	.L37
 991              	.LBB3:
 375:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 992              		.loc 1 375 0
 993 00ce FFF7FEFF 		bl	sizeOfDataStack
 994 00d2 0346     		mov	r3, r0
 995 00d4 A7F83035 		strh	r3, [r7, #1328]	@ movhi
 376:notoriOS.c    ****             char c_data_count_sent[20];
 377:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 996              		.loc 1 377 0
 997 00d8 B7F83035 		ldrh	r3, [r7, #1328]
 998 00dc 07F2D440 		addw	r0, r7, #1236
 999 00e0 A14A     		ldr	r2, .L46+24
 1000 00e2 1421     		movs	r1, #20
 1001 00e4 FFF7FEFF 		bl	snprintf
 378:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1002              		.loc 1 378 0
 1003 00e8 FFF7FEFF 		bl	getTimeStamp
 1004 00ec 0246     		mov	r2, r0
 1005 00ee 07F2D443 		addw	r3, r7, #1236
 1006 00f2 1946     		mov	r1, r3
 1007 00f4 A048     		ldr	r0, .L46+40
 1008 00f6 FFF7FEFF 		bl	pushData
 1009              	.LBE3:
 1010 00fa 0FE0     		b	.L38
 1011              	.L37:
 1012              	.LBB4:
 379:notoriOS.c    ****         }else{
 380:notoriOS.c    ****             char c_data_count_sent[20];
 381:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1013              		.loc 1 381 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 27


 1014 00fc 07F59860 		add	r0, r7, #1216
 1015 0100 9623     		movs	r3, #150
 1016 0102 994A     		ldr	r2, .L46+24
 1017 0104 1421     		movs	r1, #20
 1018 0106 FFF7FEFF 		bl	snprintf
 382:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1019              		.loc 1 382 0
 1020 010a FFF7FEFF 		bl	getTimeStamp
 1021 010e 0246     		mov	r2, r0
 1022 0110 07F59863 		add	r3, r7, #1216
 1023 0114 1946     		mov	r1, r3
 1024 0116 9848     		ldr	r0, .L46+40
 1025 0118 FFF7FEFF 		bl	pushData
 1026              	.L38:
 1027              	.LBE4:
 383:notoriOS.c    ****         }
 384:notoriOS.c    ****         
 385:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 386:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 1028              		.loc 1 386 0
 1029 011c FFF7FEFF 		bl	sizeOfDataStackDesired
 1030 0120 0346     		mov	r3, r0
 1031 0122 A7F82E35 		strh	r3, [r7, #1326]	@ movhi
 387:notoriOS.c    ****         char c_data_count_desired[20];
 388:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 389:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1032              		.loc 1 389 0
 1033 0126 B7F82E35 		ldrh	r3, [r7, #1326]
 1034 012a 013B     		subs	r3, r3, #1
 1035 012c 07F59D60 		add	r0, r7, #1256
 1036 0130 8D4A     		ldr	r2, .L46+24
 1037 0132 1421     		movs	r1, #20
 1038 0134 FFF7FEFF 		bl	snprintf
 390:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
 1039              		.loc 1 390 0
 1040 0138 FFF7FEFF 		bl	getTimeStamp
 1041 013c 0246     		mov	r2, r0
 1042 013e 07F59D63 		add	r3, r7, #1256
 1043 0142 1946     		mov	r1, r3
 1044 0144 8D48     		ldr	r0, .L46+44
 1045 0146 FFF7FEFF 		bl	pushData
 391:notoriOS.c    ****         
 392:notoriOS.c    ****         // Construct HTPP request
 393:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1046              		.loc 1 393 0
 1047 014a 8D49     		ldr	r1, .L46+48
 1048 014c 0020     		movs	r0, #0
 1049 014e FFF7FEFF 		bl	printNotif
 394:notoriOS.c    ****         
 395:notoriOS.c    ****         // Old influx API
 396:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 397:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1050              		.loc 1 397 0
 1051 0152 8C4B     		ldr	r3, .L46+52
 1052 0154 8C4A     		ldr	r2, .L46+56
 1053 0156 8D49     		ldr	r1, .L46+60
 1054 0158 8148     		ldr	r0, .L46+16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 28


 1055 015a FFF7FEFF 		bl	construct_malcom_route
 398:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1056              		.loc 1 398 0
 1057 015e 804A     		ldr	r2, .L46+16
 1058 0160 8B49     		ldr	r1, .L46+64
 1059 0162 0020     		movs	r0, #0
 1060 0164 FFF7FEFF 		bl	printNotif
 399:notoriOS.c    ****         
 400:notoriOS.c    ****         //OLD INFLUX API
 401:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 402:notoriOS.c    ****         construct_malcom_body(http_body);
 1061              		.loc 1 402 0
 1062 0168 7C48     		ldr	r0, .L46+12
 1063 016a FFF7FEFF 		bl	construct_malcom_body
 403:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1064              		.loc 1 403 0
 1065 016e 894B     		ldr	r3, .L46+68
 1066 0170 5B6E     		ldr	r3, [r3, #100]
 1067 0172 894A     		ldr	r2, .L46+72
 1068 0174 0592     		str	r2, [sp, #20]
 1069 0176 0022     		movs	r2, #0
 1070 0178 0492     		str	r2, [sp, #16]
 1071 017a 884A     		ldr	r2, .L46+76
 1072 017c 0392     		str	r2, [sp, #12]
 1073 017e 884A     		ldr	r2, .L46+80
 1074 0180 0292     		str	r2, [sp, #8]
 1075 0182 884A     		ldr	r2, .L46+84
 1076 0184 0192     		str	r2, [sp, #4]
 1077 0186 0093     		str	r3, [sp]
 1078 0188 754B     		ldr	r3, .L46+16
 1079 018a 824A     		ldr	r2, .L46+68
 1080 018c 7349     		ldr	r1, .L46+12
 1081 018e 7248     		ldr	r0, .L46+8
 1082 0190 FFF7FEFF 		bl	construct_generic_HTTP_request
 404:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1083              		.loc 1 404 0
 1084 0194 704A     		ldr	r2, .L46+8
 1085 0196 8449     		ldr	r1, .L46+88
 1086 0198 0020     		movs	r0, #0
 1087 019a FFF7FEFF 		bl	printNotif
 405:notoriOS.c    ****         
 406:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 407:notoriOS.c    ****         // Open port and begin command line sequence
 408:notoriOS.c    ****         char portConfig[200];
 409:notoriOS.c    ****         uint8 status = 0u;
 1088              		.loc 1 409 0
 1089 019e 0023     		movs	r3, #0
 1090 01a0 87F82D35 		strb	r3, [r7, #1325]
 410:notoriOS.c    ****         
 411:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1091              		.loc 1 411 0
 1092 01a4 7B4B     		ldr	r3, .L46+68
 1093 01a6 5A6E     		ldr	r2, [r3, #100]
 1094 01a8 3846     		mov	r0, r7
 1095 01aa 7A4B     		ldr	r3, .L46+68
 1096 01ac 0093     		str	r3, [sp]
 1097 01ae 1346     		mov	r3, r2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 29


 1098 01b0 7E4A     		ldr	r2, .L46+92
 1099 01b2 C821     		movs	r1, #200
 1100 01b4 FFF7FEFF 		bl	snprintf
 412:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1101              		.loc 1 412 0
 1102 01b8 3B46     		mov	r3, r7
 1103 01ba 1A46     		mov	r2, r3
 1104 01bc 7C49     		ldr	r1, .L46+96
 1105 01be 0020     		movs	r0, #0
 1106 01c0 FFF7FEFF 		bl	printNotif
 413:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1107              		.loc 1 413 0
 1108 01c4 3B46     		mov	r3, r7
 1109 01c6 42F21072 		movw	r2, #10000
 1110 01ca 7A49     		ldr	r1, .L46+100
 1111 01cc 1846     		mov	r0, r3
 1112 01ce FFF7FEFF 		bl	at_write_command
 1113 01d2 0346     		mov	r3, r0
 1114 01d4 87F82D35 		strb	r3, [r7, #1325]
 414:notoriOS.c    ****         
 415:notoriOS.c    ****         // create character pointer to chunk through the http_request
 416:notoriOS.c    ****         char *chunk;
 417:notoriOS.c    ****         // Set chunk to start where http_request starts
 418:notoriOS.c    ****         chunk = http_request;
 1115              		.loc 1 418 0
 1116 01d8 5F4B     		ldr	r3, .L46+8
 1117 01da C7F83435 		str	r3, [r7, #1332]
 419:notoriOS.c    ****         // variable for the number of packets to send
 420:notoriOS.c    ****         int8 packets;
 421:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1118              		.loc 1 421 0
 1119 01de 5E48     		ldr	r0, .L46+8
 1120 01e0 FFF7FEFF 		bl	strlen
 1121 01e4 0246     		mov	r2, r0
 1122 01e6 744B     		ldr	r3, .L46+104
 1123 01e8 A3FB0223 		umull	r2, r3, r3, r2
 1124 01ec 5B09     		lsrs	r3, r3, #5
 1125 01ee 1846     		mov	r0, r3
 1126 01f0 FFF7FEFF 		bl	__aeabi_ui2d
 1127 01f4 4FF00002 		mov	r2, #0
 1128 01f8 704B     		ldr	r3, .L46+108
 1129 01fa FFF7FEFF 		bl	nextafter
 1130 01fe 0346     		mov	r3, r0
 1131 0200 0C46     		mov	r4, r1
 1132 0202 1846     		mov	r0, r3
 1133 0204 2146     		mov	r1, r4
 1134 0206 FFF7FEFF 		bl	ceil
 1135 020a 0346     		mov	r3, r0
 1136 020c 0C46     		mov	r4, r1
 1137 020e 1846     		mov	r0, r3
 1138 0210 2146     		mov	r1, r4
 1139 0212 FFF7FEFF 		bl	__aeabi_d2iz
 1140 0216 0346     		mov	r3, r0
 1141 0218 87F82C35 		strb	r3, [r7, #1324]
 422:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1142              		.loc 1 422 0
 1143 021c 4E48     		ldr	r0, .L46+8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 30


 1144 021e FFF7FEFF 		bl	strlen
 1145 0222 0346     		mov	r3, r0
 1146 0224 1A46     		mov	r2, r3
 1147 0226 6649     		ldr	r1, .L46+112
 1148 0228 0020     		movs	r0, #0
 1149 022a FFF7FEFF 		bl	printNotif
 423:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1150              		.loc 1 423 0
 1151 022e 97F92C35 		ldrsb	r3, [r7, #1324]
 1152 0232 1A46     		mov	r2, r3
 1153 0234 6349     		ldr	r1, .L46+116
 1154 0236 0020     		movs	r0, #0
 1155 0238 FFF7FEFF 		bl	printNotif
 1156              	.LBB5:
 424:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 425:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1157              		.loc 1 425 0
 1158 023c 0023     		movs	r3, #0
 1159 023e 87F83335 		strb	r3, [r7, #1331]
 1160 0242 53E0     		b	.L39
 1161              	.L42:
 1162              	.LBB6:
 426:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 427:notoriOS.c    ****             char http_chunk[1001];
 428:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 429:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 430:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1163              		.loc 1 430 0
 1164 0244 4FF47A72 		mov	r2, #1000
 1165 0248 5F49     		ldr	r1, .L46+120
 1166 024a 6048     		ldr	r0, .L46+124
 1167 024c FFF7FEFF 		bl	at_write_command
 1168 0250 0346     		mov	r3, r0
 1169 0252 87F82D35 		strb	r3, [r7, #1325]
 431:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 432:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1170              		.loc 1 432 0
 1171 0256 07F1C800 		add	r0, r7, #200
 1172 025a D7F83435 		ldr	r3, [r7, #1332]
 1173 025e 544A     		ldr	r2, .L46+96
 1174 0260 4FF4FA71 		mov	r1, #500
 1175 0264 FFF7FEFF 		bl	snprintf
 433:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 434:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1176              		.loc 1 434 0
 1177 0268 07F1C803 		add	r3, r7, #200
 1178 026c 1846     		mov	r0, r3
 1179 026e FFF7FEFF 		bl	strlen
 1180 0272 0346     		mov	r3, r0
 1181 0274 1A46     		mov	r2, r3
 1182 0276 07F1C803 		add	r3, r7, #200
 1183 027a 1344     		add	r3, r3, r2
 1184 027c 5449     		ldr	r1, .L46+128
 1185 027e 1A46     		mov	r2, r3
 1186 0280 0B46     		mov	r3, r1
 1187 0282 1B88     		ldrh	r3, [r3]	@ unaligned
 1188 0284 1380     		strh	r3, [r2]	@ unaligned
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 31


 435:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1189              		.loc 1 435 0
 1190 0286 97F93325 		ldrsb	r2, [r7, #1331]
 1191 028a 07F1C803 		add	r3, r7, #200
 1192 028e 5149     		ldr	r1, .L46+132
 1193 0290 0020     		movs	r0, #0
 1194 0292 FFF7FEFF 		bl	printNotif
 436:notoriOS.c    ****             // Send data to server
 437:notoriOS.c    ****             if ((packet+1) != packets){
 1195              		.loc 1 437 0
 1196 0296 97F93335 		ldrsb	r3, [r7, #1331]
 1197 029a 5A1C     		adds	r2, r3, #1
 1198 029c 97F92C35 		ldrsb	r3, [r7, #1324]
 1199 02a0 9A42     		cmp	r2, r3
 1200 02a2 11D0     		beq	.L40
 438:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1201              		.loc 1 438 0
 1202 02a4 07F1C803 		add	r3, r7, #200
 1203 02a8 41F28832 		movw	r2, #5000
 1204 02ac 4149     		ldr	r1, .L46+100
 1205 02ae 1846     		mov	r0, r3
 1206 02b0 FFF7FEFF 		bl	at_write_command
 1207 02b4 0346     		mov	r3, r0
 1208 02b6 87F82D35 		strb	r3, [r7, #1325]
 439:notoriOS.c    ****                 // Move the pointer forward 
 440:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1209              		.loc 1 440 0
 1210 02ba D7F83435 		ldr	r3, [r7, #1332]
 1211 02be 03F2F313 		addw	r3, r3, #499
 1212 02c2 C7F83435 		str	r3, [r7, #1332]
 1213 02c6 0AE0     		b	.L41
 1214              	.L40:
 441:notoriOS.c    ****             }else{
 442:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
 1215              		.loc 1 442 0
 1216 02c8 07F1C803 		add	r3, r7, #200
 1217 02cc 41F28832 		movw	r2, #5000
 1218 02d0 4149     		ldr	r1, .L46+136
 1219 02d2 1846     		mov	r0, r3
 1220 02d4 FFF7FEFF 		bl	at_write_command
 1221 02d8 0346     		mov	r3, r0
 1222 02da 87F82D35 		strb	r3, [r7, #1325]
 1223              	.L41:
 1224              	.LBE6:
 425:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1225              		.loc 1 425 0 discriminator 2
 1226 02de 97F93335 		ldrsb	r3, [r7, #1331]
 1227 02e2 DBB2     		uxtb	r3, r3
 1228 02e4 0133     		adds	r3, r3, #1
 1229 02e6 DBB2     		uxtb	r3, r3
 1230 02e8 87F83335 		strb	r3, [r7, #1331]
 1231              	.L39:
 425:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1232              		.loc 1 425 0 is_stmt 0 discriminator 1
 1233 02ec 97F93325 		ldrsb	r2, [r7, #1331]
 1234 02f0 97F92C35 		ldrsb	r3, [r7, #1324]
 1235 02f4 9A42     		cmp	r2, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 32


 1236 02f6 A5DB     		blt	.L42
 1237              	.LBE5:
 443:notoriOS.c    ****             }
 444:notoriOS.c    ****             
 445:notoriOS.c    ****         }
 446:notoriOS.c    ****         
 447:notoriOS.c    ****         // Read received buffer
 448:notoriOS.c    ****         // A good write will return code "OS-OK"
 449:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 450:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 451:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1238              		.loc 1 451 0 is_stmt 1
 1239 02f8 41F28832 		movw	r2, #5000
 1240 02fc 3749     		ldr	r1, .L46+140
 1241 02fe 3848     		ldr	r0, .L46+144
 1242 0300 FFF7FEFF 		bl	at_write_command
 1243 0304 0346     		mov	r3, r0
 1244 0306 87F82D35 		strb	r3, [r7, #1325]
 452:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 453:notoriOS.c    ****     
 454:notoriOS.c    ****   
 455:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 456:notoriOS.c    ****         if(status == 1u){
 1245              		.loc 1 456 0
 1246 030a 97F82D35 		ldrb	r3, [r7, #1325]	@ zero_extendqisi2
 1247 030e 012B     		cmp	r3, #1
 1248 0310 6CD1     		bne	.L43
 1249              	.LBB7:
 457:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1250              		.loc 1 457 0
 1251 0312 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 458:notoriOS.c    ****             Clear_Data_Stack();
 1252              		.loc 1 458 0
 1253 0316 FFF7FEFF 		bl	Clear_Data_Stack
 459:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1254              		.loc 1 459 0
 1255 031a FFF7FEFF 		bl	getTimeStamp
 1256 031e 0246     		mov	r2, r0
 1257 0320 304B     		ldr	r3, .L46+148
 1258 0322 1B68     		ldr	r3, [r3]
 1259 0324 D31A     		subs	r3, r2, r3
 1260 0326 C7F82835 		str	r3, [r7, #1320]
 460:notoriOS.c    ****             char s_send_time[10];
 461:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1261              		.loc 1 461 0
 1262 032a 07F2B440 		addw	r0, r7, #1204
 1263 032e D7F82835 		ldr	r3, [r7, #1320]
 1264 0332 0D4A     		ldr	r2, .L46+24
 1265 0334 0A21     		movs	r1, #10
 1266 0336 FFF7FEFF 		bl	snprintf
 462:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1267              		.loc 1 462 0
 1268 033a FFF7FEFF 		bl	getTimeStamp
 1269 033e 0246     		mov	r2, r0
 1270 0340 07F2B443 		addw	r3, r7, #1204
 1271 0344 1946     		mov	r1, r3
 1272 0346 2848     		ldr	r0, .L46+152
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 33


 1273 0348 FFF7FEFF 		bl	pushData
 1274              	.LBE7:
 1275 034c 52E0     		b	.L44
 1276              	.L47:
 1277 034e 00BF     		.align	2
 1278              	.L46:
 1279 0350 00000000 		.word	try_counter
 1280 0354 C0000000 		.word	.LC7
 1281 0358 00000000 		.word	http_request
 1282 035c 00000000 		.word	http_body
 1283 0360 00000000 		.word	http_route
 1284 0364 00000000 		.word	modem_stats
 1285 0368 3C000000 		.word	.LC2
 1286 036c D0000000 		.word	.LC8
 1287 0370 D8000000 		.word	.LC9
 1288 0374 00000000 		.word	buffer_overflow
 1289 0378 E4000000 		.word	.LC10
 1290 037c F4000000 		.word	.LC11
 1291 0380 08010000 		.word	.LC12
 1292 0384 1C010000 		.word	.LC13
 1293 0388 28000000 		.word	modem_info+40
 1294 038c 48010000 		.word	.LC14
 1295 0390 58010000 		.word	.LC15
 1296 0394 00000000 		.word	system_settings
 1297 0398 68010000 		.word	.LC16
 1298 039c 6C010000 		.word	.LC17
 1299 03a0 70010000 		.word	.LC18
 1300 03a4 78010000 		.word	.LC19
 1301 03a8 80010000 		.word	.LC20
 1302 03ac 98010000 		.word	.LC21
 1303 03b0 B4010000 		.word	.LC22
 1304 03b4 B8010000 		.word	.LC23
 1305 03b8 D34D6210 		.word	274877907
 1306 03bc 00407F40 		.word	1082081280
 1307 03c0 BC010000 		.word	.LC24
 1308 03c4 D4010000 		.word	.LC25
 1309 03c8 E8010000 		.word	.LC26
 1310 03cc EC010000 		.word	.LC27
 1311 03d0 FC010000 		.word	.LC28
 1312 03d4 00020000 		.word	.LC29
 1313 03d8 10020000 		.word	.LC30
 1314 03dc 18020000 		.word	.LC31
 1315 03e0 20020000 		.word	.LC32
 1316 03e4 00000000 		.word	modem_start_time_stamp
 1317 03e8 34020000 		.word	.LC33
 1318              	.L43:
 463:notoriOS.c    ****         }else{
 464:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1319              		.loc 1 464 0
 1320 03ec 0E49     		ldr	r1, .L48
 1321 03ee 0220     		movs	r0, #2
 1322 03f0 FFF7FEFF 		bl	printNotif
 1323              	.L44:
 465:notoriOS.c    ****         }
 466:notoriOS.c    ****          
 467:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 468:notoriOS.c    ****         long network_time = modem_get_network_time();
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 34


 1324              		.loc 1 468 0
 1325 03f4 FFF7FEFF 		bl	modem_get_network_time
 1326 03f8 C7F82405 		str	r0, [r7, #1316]
 469:notoriOS.c    ****         if(network_time != 0){
 1327              		.loc 1 469 0
 1328 03fc D7F82435 		ldr	r3, [r7, #1316]
 1329 0400 002B     		cmp	r3, #0
 1330 0402 03D0     		beq	.L45
 470:notoriOS.c    ****            setTime(network_time);
 1331              		.loc 1 470 0
 1332 0404 D7F82405 		ldr	r0, [r7, #1316]
 1333 0408 FFF7FEFF 		bl	setTime
 1334              	.L45:
 471:notoriOS.c    ****         }
 472:notoriOS.c    ****         
 473:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 474:notoriOS.c    ****         // If not -- keep the statck and try next time
 475:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 476:notoriOS.c    ****         modem_power_down();
 1335              		.loc 1 476 0
 1336 040c FFF7FEFF 		bl	modem_power_down
 477:notoriOS.c    ****         
 478:notoriOS.c    ****         try_counter = 0u;
 1337              		.loc 1 478 0
 1338 0410 064B     		ldr	r3, .L48+4
 1339 0412 0022     		movs	r2, #0
 1340 0414 1A70     		strb	r2, [r3]
 479:notoriOS.c    ****         return 0u;
 1341              		.loc 1 479 0
 1342 0416 0023     		movs	r3, #0
 1343 0418 00E0     		b	.L33
 1344              	.L36:
 1345              	.LBE2:
 480:notoriOS.c    ****     }
 481:notoriOS.c    ****       
 482:notoriOS.c    ****       return 1u; // Not done yet
 1346              		.loc 1 482 0
 1347 041a 0123     		movs	r3, #1
 1348              	.L33:
 483:notoriOS.c    **** }
 1349              		.loc 1 483 0 discriminator 1
 1350 041c 1846     		mov	r0, r3
 1351 041e 07F23C57 		addw	r7, r7, #1340
 1352              		.cfi_def_cfa_offset 12
 1353 0422 BD46     		mov	sp, r7
 1354              		.cfi_def_cfa_register 13
 1355              		@ sp needed
 1356 0424 90BD     		pop	{r4, r7, pc}
 1357              	.L49:
 1358 0426 00BF     		.align	2
 1359              	.L48:
 1360 0428 44020000 		.word	.LC34
 1361 042c 00000000 		.word	try_counter
 1362              		.cfi_endproc
 1363              	.LFE74:
 1364              		.size	syncData, .-syncData
 1365              		.section	.text.configureRemoteParams,"ax",%progbits
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 35


 1366              		.align	2
 1367              		.global	configureRemoteParams
 1368              		.thumb
 1369              		.thumb_func
 1370              		.type	configureRemoteParams, %function
 1371              	configureRemoteParams:
 1372              	.LFB75:
 484:notoriOS.c    **** 
 485:notoriOS.c    **** // ==============================================
 486:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 487:notoriOS.c    **** // Returns 0 when done
 488:notoriOS.c    **** // ==============================================
 489:notoriOS.c    **** uint8 configureRemoteParams(){
 1373              		.loc 1 489 0
 1374              		.cfi_startproc
 1375              		@ args = 0, pretend = 0, frame = 8
 1376              		@ frame_needed = 1, uses_anonymous_args = 0
 1377 0000 80B5     		push	{r7, lr}
 1378              		.cfi_def_cfa_offset 8
 1379              		.cfi_offset 7, -8
 1380              		.cfi_offset 14, -4
 1381 0002 82B0     		sub	sp, sp, #8
 1382              		.cfi_def_cfa_offset 16
 1383 0004 00AF     		add	r7, sp, #0
 1384              		.cfi_def_cfa_register 7
 490:notoriOS.c    ****     
 491:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1385              		.loc 1 491 0
 1386 0006 FFF7FEFF 		bl	modem_get_state
 1387 000a 0346     		mov	r3, r0
 1388 000c 002B     		cmp	r3, #0
 1389 000e 02D1     		bne	.L51
 492:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 493:notoriOS.c    ****         modem_power_up();
 1390              		.loc 1 493 0
 1391 0010 FFF7FEFF 		bl	modem_power_up
 1392 0014 11E0     		b	.L52
 1393              	.L51:
 494:notoriOS.c    ****             
 495:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1394              		.loc 1 495 0
 1395 0016 FFF7FEFF 		bl	modem_get_state
 1396 001a 0346     		mov	r3, r0
 1397 001c 042B     		cmp	r3, #4
 1398 001e 0CD1     		bne	.L52
 1399              	.LBB8:
 496:notoriOS.c    ****         
 497:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 498:notoriOS.c    ****         
 499:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 500:notoriOS.c    ****         long network_time = modem_get_network_time();
 1400              		.loc 1 500 0
 1401 0020 FFF7FEFF 		bl	modem_get_network_time
 1402 0024 7860     		str	r0, [r7, #4]
 501:notoriOS.c    ****         if(network_time != 0){
 1403              		.loc 1 501 0
 1404 0026 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 36


 1405 0028 002B     		cmp	r3, #0
 1406 002a 02D0     		beq	.L53
 502:notoriOS.c    ****             setTime(network_time);
 1407              		.loc 1 502 0
 1408 002c 7868     		ldr	r0, [r7, #4]
 1409 002e FFF7FEFF 		bl	setTime
 1410              	.L53:
 503:notoriOS.c    ****         }
 504:notoriOS.c    ****         
 505:notoriOS.c    ****         // Get GPS coordinates
 506:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 507:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 508:notoriOS.c    ****         modem_power_down();
 1411              		.loc 1 508 0
 1412 0032 FFF7FEFF 		bl	modem_power_down
 509:notoriOS.c    ****         return 0u;
 1413              		.loc 1 509 0
 1414 0036 0023     		movs	r3, #0
 1415 0038 00E0     		b	.L54
 1416              	.L52:
 1417              	.LBE8:
 510:notoriOS.c    ****         
 511:notoriOS.c    ****     }
 512:notoriOS.c    ****     
 513:notoriOS.c    ****     return 1u;
 1418              		.loc 1 513 0
 1419 003a 0123     		movs	r3, #1
 1420              	.L54:
 514:notoriOS.c    **** }
 1421              		.loc 1 514 0
 1422 003c 1846     		mov	r0, r3
 1423 003e 0837     		adds	r7, r7, #8
 1424              		.cfi_def_cfa_offset 8
 1425 0040 BD46     		mov	sp, r7
 1426              		.cfi_def_cfa_register 13
 1427              		@ sp needed
 1428 0042 80BD     		pop	{r7, pc}
 1429              		.cfi_endproc
 1430              	.LFE75:
 1431              		.size	configureRemoteParams, .-configureRemoteParams
 1432              		.section	.rodata
 1433 026f 00       		.align	2
 1434              	.LC35:
 1435 0270 256C6400 		.ascii	"%ld\000"
 1436              		.align	2
 1437              	.LC36:
 1438 0274 6D617862 		.ascii	"maxbotix_depth=%s\000"
 1438      6F746978 
 1438      5F646570 
 1438      74683D25 
 1438      7300
 1439 0286 0000     		.align	2
 1440              	.LC37:
 1441 0288 6D617862 		.ascii	"maxbotix_depth\000"
 1441      6F746978 
 1441      5F646570 
 1441      746800
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 37


 1442 0297 00       		.align	2
 1443              	.LC38:
 1444 0298 612B00   		.ascii	"a+\000"
 1445 029b 00       		.align	2
 1446              	.LC39:
 1447 029c 206D6178 		.ascii	" maxbotix_depth: \000"
 1447      626F7469 
 1447      785F6465 
 1447      7074683A 
 1447      2000
 1448 02ae 0000     		.align	2
 1449              	.LC40:
 1450 02b0 2000     		.ascii	" \000"
 1451 02b2 0000     		.align	2
 1452              	.LC41:
 1453 02b4 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 1453      64206E6F 
 1453      74206765 
 1453      74207661 
 1453      6C696420 
 1454              		.global	__aeabi_f2d
 1455              		.align	2
 1456              	.LC42:
 1457 02e0 252E3266 		.ascii	"%.2f\000"
 1457      00
 1458 02e5 000000   		.align	2
 1459              	.LC43:
 1460 02e8 765F6261 		.ascii	"v_bat=%s\000"
 1460      743D2573 
 1460      00
 1461 02f1 000000   		.align	2
 1462              	.LC44:
 1463 02f4 765F6261 		.ascii	"v_bat\000"
 1463      7400
 1464 02fa 0000     		.align	2
 1465              	.LC45:
 1466 02fc 20766261 		.ascii	" vbat: \000"
 1466      743A2000 
 1467              		.align	2
 1468              	.LC46:
 1469 0304 70726573 		.ascii	"pressure_current=%s\000"
 1469      73757265 
 1469      5F637572 
 1469      72656E74 
 1469      3D257300 
 1470              		.align	2
 1471              	.LC47:
 1472 0318 70726573 		.ascii	"pressure_current\000"
 1472      73757265 
 1472      5F637572 
 1472      72656E74 
 1472      00
 1473 0329 000000   		.align	2
 1474              	.LC48:
 1475 032c 20707265 		.ascii	" pressure_current: \000"
 1475      73737572 
 1475      655F6375 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 38


 1475      7272656E 
 1475      743A2000 
 1476              		.align	2
 1477              	.LC49:
 1478 0340 70726573 		.ascii	"pressure_depth=%s\000"
 1478      73757265 
 1478      5F646570 
 1478      74683D25 
 1478      7300
 1479 0352 0000     		.align	2
 1480              	.LC50:
 1481 0354 70726573 		.ascii	"pressure_depth\000"
 1481      73757265 
 1481      5F646570 
 1481      746800
 1482 0363 00       		.align	2
 1483              	.LC51:
 1484 0364 20707265 		.ascii	" pressure_depth: \000"
 1484      73737572 
 1484      655F6465 
 1484      7074683A 
 1484      2000
 1485 0376 0000     		.align	2
 1486              	.LC52:
 1487 0378 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1487      64206E6F 
 1487      74206765 
 1487      74207661 
 1487      6C696420 
 1488              		.section	.text.makeMeasurements,"ax",%progbits
 1489              		.align	2
 1490              		.global	makeMeasurements
 1491              		.thumb
 1492              		.thumb_func
 1493              		.type	makeMeasurements, %function
 1494              	makeMeasurements:
 1495              	.LFB76:
 515:notoriOS.c    **** 
 516:notoriOS.c    **** 
 517:notoriOS.c    **** // ==============================================
 518:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 519:notoriOS.c    **** // Returns 0 when finished
 520:notoriOS.c    **** // ==============================================
 521:notoriOS.c    **** uint8 makeMeasurements(){
 1496              		.loc 1 521 0
 1497              		.cfi_startproc
 1498              		@ args = 0, pretend = 0, frame = 112
 1499              		@ frame_needed = 1, uses_anonymous_args = 0
 1500 0000 90B5     		push	{r4, r7, lr}
 1501              		.cfi_def_cfa_offset 12
 1502              		.cfi_offset 4, -12
 1503              		.cfi_offset 7, -8
 1504              		.cfi_offset 14, -4
 1505 0002 9FB0     		sub	sp, sp, #124
 1506              		.cfi_def_cfa_offset 136
 1507 0004 02AF     		add	r7, sp, #8
 1508              		.cfi_def_cfa 7, 128
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 39


 522:notoriOS.c    ****     
 523:notoriOS.c    ****     // Get clock time and save to timeStamp
 524:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1509              		.loc 1 524 0
 1510 0006 FFF7FEFF 		bl	getTimeStamp
 1511 000a F866     		str	r0, [r7, #108]
 525:notoriOS.c    ****     char c_timeStamp[32];
 526:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1512              		.loc 1 526 0
 1513 000c 07F14C00 		add	r0, r7, #76
 1514 0010 FB6E     		ldr	r3, [r7, #108]
 1515 0012 834A     		ldr	r2, .L63
 1516 0014 2021     		movs	r1, #32
 1517 0016 FFF7FEFF 		bl	snprintf
 527:notoriOS.c    ****     
 528:notoriOS.c    ****     // Holds string for value that will be written 
 529:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 530:notoriOS.c    ****     
 531:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 532:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 1518              		.loc 1 532 0
 1519 001a 824B     		ldr	r3, .L63+4
 1520 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1521 001e 002B     		cmp	r3, #0
 1522 0020 3BD1     		bne	.L56
 1523              	.LBB9:
 533:notoriOS.c    ****         
 534:notoriOS.c    ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
 535:notoriOS.c    ****         level_sensor_t m_level_sensor;
 536:notoriOS.c    ****         
 537:notoriOS.c    ****         // Take level sensor readings and save them to m_level_sensor
 538:notoriOS.c    ****         m_level_sensor = level_sensor_take_reading();
 1524              		.loc 1 538 0
 1525 0022 07F10803 		add	r3, r7, #8
 1526 0026 1846     		mov	r0, r3
 1527 0028 FFF7FEFF 		bl	level_sensor_take_reading
 539:notoriOS.c    ****     
 540:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 541:notoriOS.c    ****         if(m_level_sensor.num_valid_readings > 0){
 1528              		.loc 1 541 0
 1529 002c 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 1530 0030 002B     		cmp	r3, #0
 1531 0032 2ED0     		beq	.L57
 542:notoriOS.c    ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 1532              		.loc 1 542 0
 1533 0034 B7F91E30 		ldrsh	r3, [r7, #30]
 1534 0038 07F13800 		add	r0, r7, #56
 1535 003c 7A4A     		ldr	r2, .L63+8
 1536 003e 1421     		movs	r1, #20
 1537 0040 FFF7FEFF 		bl	snprintf
 543:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 1538              		.loc 1 543 0
 1539 0044 07F13803 		add	r3, r7, #56
 1540 0048 1A46     		mov	r2, r3
 1541 004a 7849     		ldr	r1, .L63+12
 1542 004c 0020     		movs	r0, #0
 1543 004e FFF7FEFF 		bl	printNotif
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 40


 544:notoriOS.c    ****             pushData("maxbotix_depth",value,timeStamp);
 1544              		.loc 1 544 0
 1545 0052 07F13803 		add	r3, r7, #56
 1546 0056 FA6E     		ldr	r2, [r7, #108]
 1547 0058 1946     		mov	r1, r3
 1548 005a 7548     		ldr	r0, .L63+16
 1549 005c FFF7FEFF 		bl	pushData
 545:notoriOS.c    ****             
 546:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 547:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1550              		.loc 1 547 0
 1551 0060 07F14C03 		add	r3, r7, #76
 1552 0064 1A46     		mov	r2, r3
 1553 0066 7349     		ldr	r1, .L63+20
 1554 0068 7348     		ldr	r0, .L63+24
 1555 006a FFF7FEFF 		bl	SD_write
 548:notoriOS.c    ****             SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 1556              		.loc 1 548 0
 1557 006e 734A     		ldr	r2, .L63+28
 1558 0070 7049     		ldr	r1, .L63+20
 1559 0072 7148     		ldr	r0, .L63+24
 1560 0074 FFF7FEFF 		bl	SD_write
 549:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1561              		.loc 1 549 0
 1562 0078 07F13803 		add	r3, r7, #56
 1563 007c 1A46     		mov	r2, r3
 1564 007e 6D49     		ldr	r1, .L63+20
 1565 0080 6D48     		ldr	r0, .L63+24
 1566 0082 FFF7FEFF 		bl	SD_write
 550:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1567              		.loc 1 550 0
 1568 0086 6E4A     		ldr	r2, .L63+32
 1569 0088 6A49     		ldr	r1, .L63+20
 1570 008a 6B48     		ldr	r0, .L63+24
 1571 008c FFF7FEFF 		bl	SD_write
 1572 0090 03E0     		b	.L56
 1573              	.L57:
 551:notoriOS.c    ****         }else{
 552:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 1574              		.loc 1 552 0
 1575 0092 6C49     		ldr	r1, .L63+36
 1576 0094 0220     		movs	r0, #2
 1577 0096 FFF7FEFF 		bl	printNotif
 1578              	.L56:
 1579              	.LBE9:
 553:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 554:notoriOS.c    ****         }
 555:notoriOS.c    ****     }
 556:notoriOS.c    ****     
 557:notoriOS.c    ****     
 558:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 559:notoriOS.c    ****     voltage_t m_voltage;
 560:notoriOS.c    ****     
 561:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 562:notoriOS.c    ****     m_voltage = voltage_take_readings();
 1580              		.loc 1 562 0
 1581 009a 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 41


 1582 009e 1846     		mov	r0, r3
 1583 00a0 FFF7FEFF 		bl	voltage_take_readings
 563:notoriOS.c    ****     
 564:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 565:notoriOS.c    ****     if(m_voltage.valid){
 1584              		.loc 1 565 0
 1585 00a4 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1586 00a8 002B     		cmp	r3, #0
 1587 00aa 00F0AF80 		beq	.L59
 566:notoriOS.c    ****         // battery voltage data
 567:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 1588              		.loc 1 567 0
 1589 00ae 7B6A     		ldr	r3, [r7, #36]	@ float
 1590 00b0 1846     		mov	r0, r3
 1591 00b2 FFF7FEFF 		bl	__aeabi_f2d
 1592 00b6 0346     		mov	r3, r0
 1593 00b8 0C46     		mov	r4, r1
 1594 00ba 07F13800 		add	r0, r7, #56
 1595 00be CDE90034 		strd	r3, [sp]
 1596 00c2 614A     		ldr	r2, .L63+40
 1597 00c4 1421     		movs	r1, #20
 1598 00c6 FFF7FEFF 		bl	snprintf
 568:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 1599              		.loc 1 568 0
 1600 00ca 07F13803 		add	r3, r7, #56
 1601 00ce 1A46     		mov	r2, r3
 1602 00d0 5E49     		ldr	r1, .L63+44
 1603 00d2 0020     		movs	r0, #0
 1604 00d4 FFF7FEFF 		bl	printNotif
 569:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
 1605              		.loc 1 569 0
 1606 00d8 07F13803 		add	r3, r7, #56
 1607 00dc FA6E     		ldr	r2, [r7, #108]
 1608 00de 1946     		mov	r1, r3
 1609 00e0 5B48     		ldr	r0, .L63+48
 1610 00e2 FFF7FEFF 		bl	pushData
 570:notoriOS.c    ****         
 571:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 572:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 1611              		.loc 1 572 0
 1612 00e6 564A     		ldr	r2, .L63+32
 1613 00e8 5249     		ldr	r1, .L63+20
 1614 00ea 5348     		ldr	r0, .L63+24
 1615 00ec FFF7FEFF 		bl	SD_write
 573:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 1616              		.loc 1 573 0
 1617 00f0 07F14C03 		add	r3, r7, #76
 1618 00f4 1A46     		mov	r2, r3
 1619 00f6 4F49     		ldr	r1, .L63+20
 1620 00f8 4F48     		ldr	r0, .L63+24
 1621 00fa FFF7FEFF 		bl	SD_write
 574:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 1622              		.loc 1 574 0
 1623 00fe 554A     		ldr	r2, .L63+52
 1624 0100 4C49     		ldr	r1, .L63+20
 1625 0102 4D48     		ldr	r0, .L63+24
 1626 0104 FFF7FEFF 		bl	SD_write
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 42


 575:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1627              		.loc 1 575 0
 1628 0108 07F13803 		add	r3, r7, #56
 1629 010c 1A46     		mov	r2, r3
 1630 010e 4949     		ldr	r1, .L63+20
 1631 0110 4948     		ldr	r0, .L63+24
 1632 0112 FFF7FEFF 		bl	SD_write
 576:notoriOS.c    ****         
 577:notoriOS.c    ****         // If node type is green infrastructure node, take pressure transducer measurements
 578:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE){
 1633              		.loc 1 578 0
 1634 0116 434B     		ldr	r3, .L63+4
 1635 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1636 011a 012B     		cmp	r3, #1
 1637 011c 7AD1     		bne	.L61
 1638              	.LBB10:
 579:notoriOS.c    ****             
 580:notoriOS.c    ****             // pressure transducer voltage (V) data
 581:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 582:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 583:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 584:notoriOS.c    ****             
 585:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 586:notoriOS.c    ****             pressure_t m_pressure;
 587:notoriOS.c    ****             
 588:notoriOS.c    ****             // Make pressure transducer calculators for current and depth
 589:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 1639              		.loc 1 589 0
 1640 011e 3C46     		mov	r4, r7
 1641 0120 6A46     		mov	r2, sp
 1642 0122 07F13003 		add	r3, r7, #48
 1643 0126 93E80300 		ldmia	r3, {r0, r1}
 1644 012a 82E80300 		stmia	r2, {r0, r1}
 1645 012e 07F12403 		add	r3, r7, #36
 1646 0132 0ECB     		ldmia	r3, {r1, r2, r3}
 1647 0134 2046     		mov	r0, r4
 1648 0136 FFF7FEFF 		bl	pressure_calculations
 590:notoriOS.c    ****             
 591:notoriOS.c    ****             // pressure transducer current (mA) data
 592:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 1649              		.loc 1 592 0
 1650 013a 3B68     		ldr	r3, [r7]	@ float
 1651 013c 1846     		mov	r0, r3
 1652 013e FFF7FEFF 		bl	__aeabi_f2d
 1653 0142 0346     		mov	r3, r0
 1654 0144 0C46     		mov	r4, r1
 1655 0146 07F13800 		add	r0, r7, #56
 1656 014a CDE90034 		strd	r3, [sp]
 1657 014e 3E4A     		ldr	r2, .L63+40
 1658 0150 1421     		movs	r1, #20
 1659 0152 FFF7FEFF 		bl	snprintf
 593:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 1660              		.loc 1 593 0
 1661 0156 07F13803 		add	r3, r7, #56
 1662 015a 1A46     		mov	r2, r3
 1663 015c 3E49     		ldr	r1, .L63+56
 1664 015e 0020     		movs	r0, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 43


 1665 0160 FFF7FEFF 		bl	printNotif
 594:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 1666              		.loc 1 594 0
 1667 0164 07F13803 		add	r3, r7, #56
 1668 0168 FA6E     		ldr	r2, [r7, #108]
 1669 016a 1946     		mov	r1, r3
 1670 016c 3B48     		ldr	r0, .L63+60
 1671 016e FFF7FEFF 		bl	pushData
 595:notoriOS.c    ****             
 596:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 597:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1672              		.loc 1 597 0
 1673 0172 334A     		ldr	r2, .L63+32
 1674 0174 2F49     		ldr	r1, .L63+20
 1675 0176 3048     		ldr	r0, .L63+24
 1676 0178 FFF7FEFF 		bl	SD_write
 598:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1677              		.loc 1 598 0
 1678 017c 07F14C03 		add	r3, r7, #76
 1679 0180 1A46     		mov	r2, r3
 1680 0182 2C49     		ldr	r1, .L63+20
 1681 0184 2C48     		ldr	r0, .L63+24
 1682 0186 FFF7FEFF 		bl	SD_write
 599:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 1683              		.loc 1 599 0
 1684 018a 354A     		ldr	r2, .L63+64
 1685 018c 2949     		ldr	r1, .L63+20
 1686 018e 2A48     		ldr	r0, .L63+24
 1687 0190 FFF7FEFF 		bl	SD_write
 600:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1688              		.loc 1 600 0
 1689 0194 07F13803 		add	r3, r7, #56
 1690 0198 1A46     		mov	r2, r3
 1691 019a 2649     		ldr	r1, .L63+20
 1692 019c 2648     		ldr	r0, .L63+24
 1693 019e FFF7FEFF 		bl	SD_write
 601:notoriOS.c    ****             
 602:notoriOS.c    ****             // pressure transducer depth (ft) data
 603:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 1694              		.loc 1 603 0
 1695 01a2 7B68     		ldr	r3, [r7, #4]	@ float
 1696 01a4 1846     		mov	r0, r3
 1697 01a6 FFF7FEFF 		bl	__aeabi_f2d
 1698 01aa 0346     		mov	r3, r0
 1699 01ac 0C46     		mov	r4, r1
 1700 01ae 07F13800 		add	r0, r7, #56
 1701 01b2 CDE90034 		strd	r3, [sp]
 1702 01b6 244A     		ldr	r2, .L63+40
 1703 01b8 1421     		movs	r1, #20
 1704 01ba FFF7FEFF 		bl	snprintf
 604:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 1705              		.loc 1 604 0
 1706 01be 07F13803 		add	r3, r7, #56
 1707 01c2 1A46     		mov	r2, r3
 1708 01c4 2749     		ldr	r1, .L63+68
 1709 01c6 0020     		movs	r0, #0
 1710 01c8 FFF7FEFF 		bl	printNotif
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 44


 605:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 1711              		.loc 1 605 0
 1712 01cc 07F13803 		add	r3, r7, #56
 1713 01d0 FA6E     		ldr	r2, [r7, #108]
 1714 01d2 1946     		mov	r1, r3
 1715 01d4 2448     		ldr	r0, .L63+72
 1716 01d6 FFF7FEFF 		bl	pushData
 606:notoriOS.c    ****             
 607:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 608:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1717              		.loc 1 608 0
 1718 01da 194A     		ldr	r2, .L63+32
 1719 01dc 1549     		ldr	r1, .L63+20
 1720 01de 1648     		ldr	r0, .L63+24
 1721 01e0 FFF7FEFF 		bl	SD_write
 609:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1722              		.loc 1 609 0
 1723 01e4 07F14C03 		add	r3, r7, #76
 1724 01e8 1A46     		mov	r2, r3
 1725 01ea 1249     		ldr	r1, .L63+20
 1726 01ec 1248     		ldr	r0, .L63+24
 1727 01ee FFF7FEFF 		bl	SD_write
 610:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
 1728              		.loc 1 610 0
 1729 01f2 1E4A     		ldr	r2, .L63+76
 1730 01f4 0F49     		ldr	r1, .L63+20
 1731 01f6 1048     		ldr	r0, .L63+24
 1732 01f8 FFF7FEFF 		bl	SD_write
 611:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1733              		.loc 1 611 0
 1734 01fc 07F13803 		add	r3, r7, #56
 1735 0200 1A46     		mov	r2, r3
 1736 0202 0C49     		ldr	r1, .L63+20
 1737 0204 0C48     		ldr	r0, .L63+24
 1738 0206 FFF7FEFF 		bl	SD_write
 1739 020a 03E0     		b	.L61
 1740              	.L59:
 1741              	.LBE10:
 612:notoriOS.c    ****         }    
 613:notoriOS.c    ****     }else{
 614:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 1742              		.loc 1 614 0
 1743 020c 1849     		ldr	r1, .L63+80
 1744 020e 0220     		movs	r0, #2
 1745 0210 FFF7FEFF 		bl	printNotif
 1746              	.L61:
 615:notoriOS.c    ****     }
 616:notoriOS.c    ****     
 617:notoriOS.c    ****     return 0u;
 1747              		.loc 1 617 0
 1748 0214 0023     		movs	r3, #0
 618:notoriOS.c    **** }
 1749              		.loc 1 618 0
 1750 0216 1846     		mov	r0, r3
 1751 0218 7437     		adds	r7, r7, #116
 1752              		.cfi_def_cfa_offset 12
 1753 021a BD46     		mov	sp, r7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 45


 1754              		.cfi_def_cfa_register 13
 1755              		@ sp needed
 1756 021c 90BD     		pop	{r4, r7, pc}
 1757              	.L64:
 1758 021e 00BF     		.align	2
 1759              	.L63:
 1760 0220 70020000 		.word	.LC35
 1761 0224 00000000 		.word	updatable_parameters
 1762 0228 3C000000 		.word	.LC2
 1763 022c 74020000 		.word	.LC36
 1764 0230 88020000 		.word	.LC37
 1765 0234 98020000 		.word	.LC38
 1766 0238 00000000 		.word	Data_fileName
 1767 023c 9C020000 		.word	.LC39
 1768 0240 B0020000 		.word	.LC40
 1769 0244 B4020000 		.word	.LC41
 1770 0248 E0020000 		.word	.LC42
 1771 024c E8020000 		.word	.LC43
 1772 0250 F4020000 		.word	.LC44
 1773 0254 FC020000 		.word	.LC45
 1774 0258 04030000 		.word	.LC46
 1775 025c 18030000 		.word	.LC47
 1776 0260 2C030000 		.word	.LC48
 1777 0264 40030000 		.word	.LC49
 1778 0268 54030000 		.word	.LC50
 1779 026c 64030000 		.word	.LC51
 1780 0270 78030000 		.word	.LC52
 1781              		.cfi_endproc
 1782              	.LFE76:
 1783              		.size	makeMeasurements, .-makeMeasurements
 1784              		.section	.rodata
 1785 039f 00       		.align	2
 1786              	.LC53:
 1787 03a0 4572726F 		.ascii	"Error setting system time.\000"
 1787      72207365 
 1787      7474696E 
 1787      67207379 
 1787      7374656D 
 1788              		.section	.text.setTime,"ax",%progbits
 1789              		.align	2
 1790              		.global	setTime
 1791              		.thumb
 1792              		.thumb_func
 1793              		.type	setTime, %function
 1794              	setTime:
 1795              	.LFB77:
 619:notoriOS.c    **** 
 620:notoriOS.c    **** // ==============================================
 621:notoriOS.c    **** // Set the system time
 622:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 623:notoriOS.c    **** // ==============================================
 624:notoriOS.c    **** uint8 setTime(long timeStamp){
 1796              		.loc 1 624 0
 1797              		.cfi_startproc
 1798              		@ args = 0, pretend = 0, frame = 24
 1799              		@ frame_needed = 1, uses_anonymous_args = 0
 1800 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 46


 1801              		.cfi_def_cfa_offset 8
 1802              		.cfi_offset 7, -8
 1803              		.cfi_offset 14, -4
 1804 0002 86B0     		sub	sp, sp, #24
 1805              		.cfi_def_cfa_offset 32
 1806 0004 00AF     		add	r7, sp, #0
 1807              		.cfi_def_cfa_register 7
 1808 0006 7860     		str	r0, [r7, #4]
 625:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 626:notoriOS.c    ****     if(timeStamp <=0){
 1809              		.loc 1 626 0
 1810 0008 7B68     		ldr	r3, [r7, #4]
 1811 000a 002B     		cmp	r3, #0
 1812 000c 05DC     		bgt	.L66
 627:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 1813              		.loc 1 627 0
 1814 000e 1849     		ldr	r1, .L68
 1815 0010 0220     		movs	r0, #2
 1816 0012 FFF7FEFF 		bl	printNotif
 628:notoriOS.c    ****         return 0;  
 1817              		.loc 1 628 0
 1818 0016 0023     		movs	r3, #0
 1819 0018 25E0     		b	.L67
 1820              	.L66:
 629:notoriOS.c    ****     }
 630:notoriOS.c    ****     // Create a new pointer t of data structure tm
 631:notoriOS.c    ****     struct tm * t;
 632:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 633:notoriOS.c    ****     t = gmtime(&timeStamp);
 1821              		.loc 1 633 0
 1822 001a 3B1D     		adds	r3, r7, #4
 1823 001c 1846     		mov	r0, r3
 1824 001e FFF7FEFF 		bl	gmtime
 1825 0022 7861     		str	r0, [r7, #20]
 634:notoriOS.c    ****     
 635:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 636:notoriOS.c    ****     RTC_TIME_DATE localTime;
 637:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 1826              		.loc 1 637 0
 1827 0024 7B69     		ldr	r3, [r7, #20]
 1828 0026 1B68     		ldr	r3, [r3]
 1829 0028 DBB2     		uxtb	r3, r3
 1830 002a 3B72     		strb	r3, [r7, #8]
 638:notoriOS.c    ****     localTime.Min = t->tm_min;
 1831              		.loc 1 638 0
 1832 002c 7B69     		ldr	r3, [r7, #20]
 1833 002e 5B68     		ldr	r3, [r3, #4]
 1834 0030 DBB2     		uxtb	r3, r3
 1835 0032 7B72     		strb	r3, [r7, #9]
 639:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 1836              		.loc 1 639 0
 1837 0034 7B69     		ldr	r3, [r7, #20]
 1838 0036 9B68     		ldr	r3, [r3, #8]
 1839 0038 DBB2     		uxtb	r3, r3
 1840 003a BB72     		strb	r3, [r7, #10]
 640:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 1841              		.loc 1 640 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 47


 1842 003c 7B69     		ldr	r3, [r7, #20]
 1843 003e 5B69     		ldr	r3, [r3, #20]
 1844 0040 9BB2     		uxth	r3, r3
 1845 0042 03F26C73 		addw	r3, r3, #1900
 1846 0046 9BB2     		uxth	r3, r3
 1847 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 641:notoriOS.c    ****     localTime.Month = t->tm_mon;
 1848              		.loc 1 641 0
 1849 004a 7B69     		ldr	r3, [r7, #20]
 1850 004c 1B69     		ldr	r3, [r3, #16]
 1851 004e DBB2     		uxtb	r3, r3
 1852 0050 3B74     		strb	r3, [r7, #16]
 642:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 1853              		.loc 1 642 0
 1854 0052 7B69     		ldr	r3, [r7, #20]
 1855 0054 DB68     		ldr	r3, [r3, #12]
 1856 0056 DBB2     		uxtb	r3, r3
 1857 0058 3B73     		strb	r3, [r7, #12]
 643:notoriOS.c    **** 
 644:notoriOS.c    ****     // Writes time and date values as current time and date.
 645:notoriOS.c    ****     RTC_WriteTime(&localTime);
 1858              		.loc 1 645 0
 1859 005a 07F10803 		add	r3, r7, #8
 1860 005e 1846     		mov	r0, r3
 1861 0060 FFF7FEFF 		bl	RTC_WriteTime
 646:notoriOS.c    ****     
 647:notoriOS.c    ****     // Return 1 when the system time was set properly.
 648:notoriOS.c    ****     return 1;
 1862              		.loc 1 648 0
 1863 0064 0123     		movs	r3, #1
 1864              	.L67:
 649:notoriOS.c    **** }
 1865              		.loc 1 649 0
 1866 0066 1846     		mov	r0, r3
 1867 0068 1837     		adds	r7, r7, #24
 1868              		.cfi_def_cfa_offset 8
 1869 006a BD46     		mov	sp, r7
 1870              		.cfi_def_cfa_register 13
 1871              		@ sp needed
 1872 006c 80BD     		pop	{r7, pc}
 1873              	.L69:
 1874 006e 00BF     		.align	2
 1875              	.L68:
 1876 0070 A0030000 		.word	.LC53
 1877              		.cfi_endproc
 1878              	.LFE77:
 1879              		.size	setTime, .-setTime
 1880              		.section	.rodata
 1881 03bb 00       		.align	2
 1882              	.LC54:
 1883 03bc 75706772 		.ascii	"upgrade.hex\000"
 1883      6164652E 
 1883      68657800 
 1884              		.section	.text.upgraded,"ax",%progbits
 1885              		.align	2
 1886              		.global	upgraded
 1887              		.thumb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 48


 1888              		.thumb_func
 1889              		.type	upgraded, %function
 1890              	upgraded:
 1891              	.LFB78:
 650:notoriOS.c    **** 
 651:notoriOS.c    **** //downloads and stores files on SD card
 652:notoriOS.c    **** 
 653:notoriOS.c    **** 
 654:notoriOS.c    **** 
 655:notoriOS.c    **** // ==============================================
 656:notoriOS.c    **** // Will they love it, will they hate it
 657:notoriOS.c    **** // Never fade it, I evade it
 658:notoriOS.c    **** // Cause I never really want to complicate it
 659:notoriOS.c    **** //      - Logic, Upgraded (2015)
 660:notoriOS.c    **** //
 661:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 662:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 663:notoriOS.c    **** // ==============================================
 664:notoriOS.c    **** 
 665:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 1892              		.loc 1 665 0
 1893              		.cfi_startproc
 1894              		@ args = 0, pretend = 0, frame = 232
 1895              		@ frame_needed = 1, uses_anonymous_args = 0
 1896 0000 80B5     		push	{r7, lr}
 1897              		.cfi_def_cfa_offset 8
 1898              		.cfi_offset 7, -8
 1899              		.cfi_offset 14, -4
 1900 0002 C0B0     		sub	sp, sp, #256
 1901              		.cfi_def_cfa_offset 264
 1902 0004 06AF     		add	r7, sp, #24
 1903              		.cfi_def_cfa 7, 240
 1904 0006 F860     		str	r0, [r7, #12]
 1905 0008 B960     		str	r1, [r7, #8]
 1906 000a 7A60     		str	r2, [r7, #4]
 666:notoriOS.c    ****     
 667:notoriOS.c    ****     uint8 upgrade_status = 0;
 1907              		.loc 1 667 0
 1908 000c 0023     		movs	r3, #0
 1909 000e 87F8E730 		strb	r3, [r7, #231]
 668:notoriOS.c    ****     
 669:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 670:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 1910              		.loc 1 670 0
 1911 0012 384B     		ldr	r3, .L74
 1912 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1913 0016 042B     		cmp	r3, #4
 1914 0018 02D0     		beq	.L71
 671:notoriOS.c    ****         return upgrade_status;//where valid = 0
 1915              		.loc 1 671 0
 1916 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 1917 001e 65E0     		b	.L73
 1918              	.L71:
 672:notoriOS.c    ****     }
 673:notoriOS.c    ****     
 674:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 1919              		.loc 1 674 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 49


 1920 0020 354A     		ldr	r2, .L74+4
 1921 0022 07F1D803 		add	r3, r7, #216
 1922 0026 07CA     		ldmia	r2, {r0, r1, r2}
 1923 0028 83E80700 		stmia	r3, {r0, r1, r2}
 675:notoriOS.c    ****     //delete file, if one exisits already
 676:notoriOS.c    ****     SD_rmfile(fileName);
 1924              		.loc 1 676 0
 1925 002c 07F1D803 		add	r3, r7, #216
 1926 0030 1846     		mov	r0, r3
 1927 0032 FFF7FEFF 		bl	SD_rmfile
 677:notoriOS.c    ****     
 678:notoriOS.c    ****     // Create http request
 679:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 1928              		.loc 1 679 0
 1929 0036 314B     		ldr	r3, .L74+8
 1930 0038 0593     		str	r3, [sp, #20]
 1931 003a 0023     		movs	r3, #0
 1932 003c 0493     		str	r3, [sp, #16]
 1933 003e 304B     		ldr	r3, .L74+12
 1934 0040 0393     		str	r3, [sp, #12]
 1935 0042 304B     		ldr	r3, .L74+16
 1936 0044 0293     		str	r3, [sp, #8]
 1937 0046 304B     		ldr	r3, .L74+20
 1938 0048 0193     		str	r3, [sp, #4]
 1939 004a BB68     		ldr	r3, [r7, #8]
 1940 004c 0093     		str	r3, [sp]
 1941 004e 7B68     		ldr	r3, [r7, #4]
 1942 0050 FA68     		ldr	r2, [r7, #12]
 1943 0052 2E49     		ldr	r1, .L74+24
 1944 0054 2E48     		ldr	r0, .L74+28
 1945 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 680:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1946              		.loc 1 680 0
 1947 005a 2D4A     		ldr	r2, .L74+28
 1948 005c 2D49     		ldr	r1, .L74+32
 1949 005e 0020     		movs	r0, #0
 1950 0060 FFF7FEFF 		bl	printNotif
 681:notoriOS.c    ****     // Create array portConfig of size 200 characters
 682:notoriOS.c    ****     char portConfig[200];
 683:notoriOS.c    ****     // Print port configurations
 684:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 1951              		.loc 1 684 0
 1952 0064 07F11000 		add	r0, r7, #16
 1953 0068 FB68     		ldr	r3, [r7, #12]
 1954 006a 0093     		str	r3, [sp]
 1955 006c BB68     		ldr	r3, [r7, #8]
 1956 006e 2A4A     		ldr	r2, .L74+36
 1957 0070 C821     		movs	r1, #200
 1958 0072 FFF7FEFF 		bl	snprintf
 685:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1959              		.loc 1 685 0
 1960 0076 07F11003 		add	r3, r7, #16
 1961 007a 1A46     		mov	r2, r3
 1962 007c 2749     		ldr	r1, .L74+40
 1963 007e 0020     		movs	r0, #0
 1964 0080 FFF7FEFF 		bl	printNotif
 686:notoriOS.c    ****     // AT command to configure the port
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 50


 687:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 1965              		.loc 1 687 0
 1966 0084 07F11003 		add	r3, r7, #16
 1967 0088 42F21072 		movw	r2, #10000
 1968 008c 2449     		ldr	r1, .L74+44
 1969 008e 1846     		mov	r0, r3
 1970 0090 FFF7FEFF 		bl	at_write_command
 1971 0094 0346     		mov	r3, r0
 1972 0096 87F8E730 		strb	r3, [r7, #231]
 688:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 689:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 690:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 1973              		.loc 1 690 0
 1974 009a 4FF47A72 		mov	r2, #1000
 1975 009e 2149     		ldr	r1, .L74+48
 1976 00a0 2148     		ldr	r0, .L74+52
 1977 00a2 FFF7FEFF 		bl	at_write_command
 1978 00a6 0346     		mov	r3, r0
 1979 00a8 87F8E730 		strb	r3, [r7, #231]
 691:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 692:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 1980              		.loc 1 692 0
 1981 00ac 1848     		ldr	r0, .L74+28
 1982 00ae FFF7FEFF 		bl	strlen
 1983 00b2 0346     		mov	r3, r0
 1984 00b4 1A46     		mov	r2, r3
 1985 00b6 164B     		ldr	r3, .L74+28
 1986 00b8 1344     		add	r3, r3, r2
 1987 00ba 1C49     		ldr	r1, .L74+56
 1988 00bc 1A46     		mov	r2, r3
 1989 00be 0B46     		mov	r3, r1
 1990 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 1991 00c2 1380     		strh	r3, [r2]	@ unaligned
 693:notoriOS.c    ****     // AT command to send http request
 694:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
 1992              		.loc 1 694 0
 1993 00c4 41F28832 		movw	r2, #5000
 1994 00c8 1549     		ldr	r1, .L74+44
 1995 00ca 1148     		ldr	r0, .L74+28
 1996 00cc FFF7FEFF 		bl	at_write_command
 1997 00d0 0346     		mov	r3, r0
 1998 00d2 87F8E730 		strb	r3, [r7, #231]
 695:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 696:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 697:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1999              		.loc 1 697 0
 2000 00d6 41F28832 		movw	r2, #5000
 2001 00da 1549     		ldr	r1, .L74+60
 2002 00dc 1548     		ldr	r0, .L74+64
 2003 00de FFF7FEFF 		bl	at_write_command
 2004 00e2 0346     		mov	r3, r0
 2005 00e4 87F8E730 		strb	r3, [r7, #231]
 698:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 699:notoriOS.c    ****     
 700:notoriOS.c    ****     
 701:notoriOS.c    ****     return upgrade_status;
 2006              		.loc 1 701 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 51


 2007 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2008              	.L73:
 702:notoriOS.c    ****     
 703:notoriOS.c    **** }
 2009              		.loc 1 703 0 discriminator 1
 2010 00ec 1846     		mov	r0, r3
 2011 00ee E837     		adds	r7, r7, #232
 2012              		.cfi_def_cfa_offset 8
 2013 00f0 BD46     		mov	sp, r7
 2014              		.cfi_def_cfa_register 13
 2015              		@ sp needed
 2016 00f2 80BD     		pop	{r7, pc}
 2017              	.L75:
 2018              		.align	2
 2019              	.L74:
 2020 00f4 00000000 		.word	modem_state
 2021 00f8 BC030000 		.word	.LC54
 2022 00fc 68010000 		.word	.LC16
 2023 0100 6C010000 		.word	.LC17
 2024 0104 70010000 		.word	.LC18
 2025 0108 78010000 		.word	.LC19
 2026 010c 00000000 		.word	http_body
 2027 0110 00000000 		.word	http_request
 2028 0114 80010000 		.word	.LC20
 2029 0118 98010000 		.word	.LC21
 2030 011c B4010000 		.word	.LC22
 2031 0120 B8010000 		.word	.LC23
 2032 0124 E8010000 		.word	.LC26
 2033 0128 EC010000 		.word	.LC27
 2034 012c FC010000 		.word	.LC28
 2035 0130 18020000 		.word	.LC31
 2036 0134 20020000 		.word	.LC32
 2037              		.cfi_endproc
 2038              	.LFE78:
 2039              		.size	upgraded, .-upgraded
 2040              		.text
 2041              	.Letext0:
 2042              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2043              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2044              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2045              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 2046              		.file 6 "testing.h"
 2047              		.file 7 "level_sensor.h"
 2048              		.file 8 "voltages.h"
 2049              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2050              		.file 10 "data.h"
 2051              		.file 11 "modem.h"
 2052              		.file 12 "notoriOS.h"
 2053              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 2054              		.section	.debug_info,"",%progbits
 2055              	.Ldebug_info0:
 2056 0000 E50B0000 		.4byte	0xbe5
 2057 0004 0400     		.2byte	0x4
 2058 0006 00000000 		.4byte	.Ldebug_abbrev0
 2059 000a 04       		.byte	0x4
 2060 000b 01       		.uleb128 0x1
 2061 000c 74000000 		.4byte	.LASF157
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 52


 2062 0010 0C       		.byte	0xc
 2063 0011 92070000 		.4byte	.LASF158
 2064 0015 0C040000 		.4byte	.LASF159
 2065 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2066 001d 00000000 		.4byte	0
 2067 0021 00000000 		.4byte	.Ldebug_line0
 2068 0025 02       		.uleb128 0x2
 2069 0026 01       		.byte	0x1
 2070 0027 06       		.byte	0x6
 2071 0028 45000000 		.4byte	.LASF0
 2072 002c 02       		.uleb128 0x2
 2073 002d 01       		.byte	0x1
 2074 002e 08       		.byte	0x8
 2075 002f AF050000 		.4byte	.LASF1
 2076 0033 02       		.uleb128 0x2
 2077 0034 02       		.byte	0x2
 2078 0035 05       		.byte	0x5
 2079 0036 EB030000 		.4byte	.LASF2
 2080 003a 02       		.uleb128 0x2
 2081 003b 02       		.byte	0x2
 2082 003c 07       		.byte	0x7
 2083 003d 2A070000 		.4byte	.LASF3
 2084 0041 03       		.uleb128 0x3
 2085 0042 F2060000 		.4byte	.LASF9
 2086 0046 02       		.byte	0x2
 2087 0047 3F       		.byte	0x3f
 2088 0048 4C000000 		.4byte	0x4c
 2089 004c 02       		.uleb128 0x2
 2090 004d 04       		.byte	0x4
 2091 004e 05       		.byte	0x5
 2092 004f FE010000 		.4byte	.LASF4
 2093 0053 02       		.uleb128 0x2
 2094 0054 04       		.byte	0x4
 2095 0055 07       		.byte	0x7
 2096 0056 28030000 		.4byte	.LASF5
 2097 005a 02       		.uleb128 0x2
 2098 005b 08       		.byte	0x8
 2099 005c 05       		.byte	0x5
 2100 005d 59010000 		.4byte	.LASF6
 2101 0061 02       		.uleb128 0x2
 2102 0062 08       		.byte	0x8
 2103 0063 07       		.byte	0x7
 2104 0064 08010000 		.4byte	.LASF7
 2105 0068 04       		.uleb128 0x4
 2106 0069 04       		.byte	0x4
 2107 006a 05       		.byte	0x5
 2108 006b 696E7400 		.ascii	"int\000"
 2109 006f 02       		.uleb128 0x2
 2110 0070 04       		.byte	0x4
 2111 0071 07       		.byte	0x7
 2112 0072 D4020000 		.4byte	.LASF8
 2113 0076 03       		.uleb128 0x3
 2114 0077 A7050000 		.4byte	.LASF10
 2115 007b 03       		.byte	0x3
 2116 007c 2C       		.byte	0x2c
 2117 007d 41000000 		.4byte	0x41
 2118 0081 05       		.uleb128 0x5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 53


 2119 0082 20020000 		.4byte	.LASF11
 2120 0086 04       		.byte	0x4
 2121 0087 9201     		.2byte	0x192
 2122 0089 2C000000 		.4byte	0x2c
 2123 008d 05       		.uleb128 0x5
 2124 008e 08000000 		.4byte	.LASF12
 2125 0092 04       		.byte	0x4
 2126 0093 9301     		.2byte	0x193
 2127 0095 3A000000 		.4byte	0x3a
 2128 0099 05       		.uleb128 0x5
 2129 009a 64020000 		.4byte	.LASF13
 2130 009e 04       		.byte	0x4
 2131 009f 9401     		.2byte	0x194
 2132 00a1 53000000 		.4byte	0x53
 2133 00a5 05       		.uleb128 0x5
 2134 00a6 AE030000 		.4byte	.LASF14
 2135 00aa 04       		.byte	0x4
 2136 00ab 9501     		.2byte	0x195
 2137 00ad 25000000 		.4byte	0x25
 2138 00b1 05       		.uleb128 0x5
 2139 00b2 A7070000 		.4byte	.LASF15
 2140 00b6 04       		.byte	0x4
 2141 00b7 9601     		.2byte	0x196
 2142 00b9 33000000 		.4byte	0x33
 2143 00bd 05       		.uleb128 0x5
 2144 00be 3E020000 		.4byte	.LASF16
 2145 00c2 04       		.byte	0x4
 2146 00c3 9701     		.2byte	0x197
 2147 00c5 4C000000 		.4byte	0x4c
 2148 00c9 02       		.uleb128 0x2
 2149 00ca 04       		.byte	0x4
 2150 00cb 04       		.byte	0x4
 2151 00cc 4C050000 		.4byte	.LASF17
 2152 00d0 02       		.uleb128 0x2
 2153 00d1 08       		.byte	0x8
 2154 00d2 04       		.byte	0x4
 2155 00d3 2B080000 		.4byte	.LASF18
 2156 00d7 02       		.uleb128 0x2
 2157 00d8 01       		.byte	0x1
 2158 00d9 08       		.byte	0x8
 2159 00da CB060000 		.4byte	.LASF19
 2160 00de 02       		.uleb128 0x2
 2161 00df 08       		.byte	0x8
 2162 00e0 04       		.byte	0x4
 2163 00e1 AD060000 		.4byte	.LASF20
 2164 00e5 02       		.uleb128 0x2
 2165 00e6 04       		.byte	0x4
 2166 00e7 07       		.byte	0x7
 2167 00e8 A6040000 		.4byte	.LASF21
 2168 00ec 06       		.uleb128 0x6
 2169 00ed 04       		.byte	0x4
 2170 00ee D7000000 		.4byte	0xd7
 2171 00f2 07       		.uleb128 0x7
 2172 00f3 D7000000 		.4byte	0xd7
 2173 00f7 02010000 		.4byte	0x102
 2174 00fb 08       		.uleb128 0x8
 2175 00fc E5000000 		.4byte	0xe5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 54


 2176 0100 17       		.byte	0x17
 2177 0101 00       		.byte	0
 2178 0102 09       		.uleb128 0x9
 2179 0103 0C       		.byte	0xc
 2180 0104 05       		.byte	0x5
 2181 0105 30       		.byte	0x30
 2182 0106 6B010000 		.4byte	0x16b
 2183 010a 0A       		.uleb128 0xa
 2184 010b 53656300 		.ascii	"Sec\000"
 2185 010f 05       		.byte	0x5
 2186 0110 32       		.byte	0x32
 2187 0111 81000000 		.4byte	0x81
 2188 0115 00       		.byte	0
 2189 0116 0A       		.uleb128 0xa
 2190 0117 4D696E00 		.ascii	"Min\000"
 2191 011b 05       		.byte	0x5
 2192 011c 33       		.byte	0x33
 2193 011d 81000000 		.4byte	0x81
 2194 0121 01       		.byte	0x1
 2195 0122 0B       		.uleb128 0xb
 2196 0123 1F010000 		.4byte	.LASF22
 2197 0127 05       		.byte	0x5
 2198 0128 34       		.byte	0x34
 2199 0129 81000000 		.4byte	0x81
 2200 012d 02       		.byte	0x2
 2201 012e 0B       		.uleb128 0xb
 2202 012f 0C060000 		.4byte	.LASF23
 2203 0133 05       		.byte	0x5
 2204 0134 35       		.byte	0x35
 2205 0135 81000000 		.4byte	0x81
 2206 0139 03       		.byte	0x3
 2207 013a 0B       		.uleb128 0xb
 2208 013b 69030000 		.4byte	.LASF24
 2209 013f 05       		.byte	0x5
 2210 0140 36       		.byte	0x36
 2211 0141 81000000 		.4byte	0x81
 2212 0145 04       		.byte	0x4
 2213 0146 0B       		.uleb128 0xb
 2214 0147 E0070000 		.4byte	.LASF25
 2215 014b 05       		.byte	0x5
 2216 014c 37       		.byte	0x37
 2217 014d 8D000000 		.4byte	0x8d
 2218 0151 06       		.byte	0x6
 2219 0152 0B       		.uleb128 0xb
 2220 0153 02010000 		.4byte	.LASF26
 2221 0157 05       		.byte	0x5
 2222 0158 38       		.byte	0x38
 2223 0159 81000000 		.4byte	0x81
 2224 015d 08       		.byte	0x8
 2225 015e 0B       		.uleb128 0xb
 2226 015f 9C050000 		.4byte	.LASF27
 2227 0163 05       		.byte	0x5
 2228 0164 39       		.byte	0x39
 2229 0165 8D000000 		.4byte	0x8d
 2230 0169 0A       		.byte	0xa
 2231 016a 00       		.byte	0
 2232 016b 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 55


 2233 016c F1040000 		.4byte	.LASF28
 2234 0170 05       		.byte	0x5
 2235 0171 3A       		.byte	0x3a
 2236 0172 76010000 		.4byte	0x176
 2237 0176 0C       		.uleb128 0xc
 2238 0177 02010000 		.4byte	0x102
 2239 017b 0D       		.uleb128 0xd
 2240 017c 8101     		.2byte	0x181
 2241 017e 06       		.byte	0x6
 2242 017f 0A       		.byte	0xa
 2243 0180 A9010000 		.4byte	0x1a9
 2244 0184 0B       		.uleb128 0xb
 2245 0185 92050000 		.4byte	.LASF29
 2246 0189 06       		.byte	0x6
 2247 018a 0C       		.byte	0xc
 2248 018b A9010000 		.4byte	0x1a9
 2249 018f 00       		.byte	0
 2250 0190 0B       		.uleb128 0xb
 2251 0191 67070000 		.4byte	.LASF30
 2252 0195 06       		.byte	0x6
 2253 0196 0D       		.byte	0xd
 2254 0197 81000000 		.4byte	0x81
 2255 019b 80       		.byte	0x80
 2256 019c 0B       		.uleb128 0xb
 2257 019d 2E060000 		.4byte	.LASF31
 2258 01a1 06       		.byte	0x6
 2259 01a2 0F       		.byte	0xf
 2260 01a3 B9010000 		.4byte	0x1b9
 2261 01a7 81       		.byte	0x81
 2262 01a8 00       		.byte	0
 2263 01a9 07       		.uleb128 0x7
 2264 01aa D7000000 		.4byte	0xd7
 2265 01ae B9010000 		.4byte	0x1b9
 2266 01b2 08       		.uleb128 0x8
 2267 01b3 E5000000 		.4byte	0xe5
 2268 01b7 7F       		.byte	0x7f
 2269 01b8 00       		.byte	0
 2270 01b9 07       		.uleb128 0x7
 2271 01ba D7000000 		.4byte	0xd7
 2272 01be C9010000 		.4byte	0x1c9
 2273 01c2 08       		.uleb128 0x8
 2274 01c3 E5000000 		.4byte	0xe5
 2275 01c7 FF       		.byte	0xff
 2276 01c8 00       		.byte	0
 2277 01c9 03       		.uleb128 0x3
 2278 01ca 16060000 		.4byte	.LASF32
 2279 01ce 06       		.byte	0x6
 2280 01cf 10       		.byte	0x10
 2281 01d0 7B010000 		.4byte	0x17b
 2282 01d4 09       		.uleb128 0x9
 2283 01d5 1A       		.byte	0x1a
 2284 01d6 07       		.byte	0x7
 2285 01d7 10       		.byte	0x10
 2286 01d8 0D020000 		.4byte	0x20d
 2287 01dc 0B       		.uleb128 0xb
 2288 01dd 74020000 		.4byte	.LASF33
 2289 01e1 07       		.byte	0x7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 56


 2290 01e2 11       		.byte	0x11
 2291 01e3 0D020000 		.4byte	0x20d
 2292 01e7 00       		.byte	0
 2293 01e8 0B       		.uleb128 0xb
 2294 01e9 14070000 		.4byte	.LASF34
 2295 01ed 07       		.byte	0x7
 2296 01ee 12       		.byte	0x12
 2297 01ef B1000000 		.4byte	0xb1
 2298 01f3 16       		.byte	0x16
 2299 01f4 0B       		.uleb128 0xb
 2300 01f5 00030000 		.4byte	.LASF35
 2301 01f9 07       		.byte	0x7
 2302 01fa 13       		.byte	0x13
 2303 01fb 81000000 		.4byte	0x81
 2304 01ff 18       		.byte	0x18
 2305 0200 0B       		.uleb128 0xb
 2306 0201 17000000 		.4byte	.LASF36
 2307 0205 07       		.byte	0x7
 2308 0206 14       		.byte	0x14
 2309 0207 81000000 		.4byte	0x81
 2310 020b 19       		.byte	0x19
 2311 020c 00       		.byte	0
 2312 020d 07       		.uleb128 0x7
 2313 020e B1000000 		.4byte	0xb1
 2314 0212 1D020000 		.4byte	0x21d
 2315 0216 08       		.uleb128 0x8
 2316 0217 E5000000 		.4byte	0xe5
 2317 021b 0A       		.byte	0xa
 2318 021c 00       		.byte	0
 2319 021d 03       		.uleb128 0x3
 2320 021e 52050000 		.4byte	.LASF37
 2321 0222 07       		.byte	0x7
 2322 0223 15       		.byte	0x15
 2323 0224 D4010000 		.4byte	0x1d4
 2324 0228 09       		.uleb128 0x9
 2325 0229 14       		.byte	0x14
 2326 022a 08       		.byte	0x8
 2327 022b 11       		.byte	0x11
 2328 022c 6D020000 		.4byte	0x26d
 2329 0230 0B       		.uleb128 0xb
 2330 0231 59030000 		.4byte	.LASF38
 2331 0235 08       		.byte	0x8
 2332 0236 12       		.byte	0x12
 2333 0237 C9000000 		.4byte	0xc9
 2334 023b 00       		.byte	0
 2335 023c 0B       		.uleb128 0xb
 2336 023d A5010000 		.4byte	.LASF39
 2337 0241 08       		.byte	0x8
 2338 0242 13       		.byte	0x13
 2339 0243 C9000000 		.4byte	0xc9
 2340 0247 04       		.byte	0x4
 2341 0248 0B       		.uleb128 0xb
 2342 0249 B3010000 		.4byte	.LASF40
 2343 024d 08       		.byte	0x8
 2344 024e 14       		.byte	0x14
 2345 024f C9000000 		.4byte	0xc9
 2346 0253 08       		.byte	0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 57


 2347 0254 0B       		.uleb128 0xb
 2348 0255 2E050000 		.4byte	.LASF41
 2349 0259 08       		.byte	0x8
 2350 025a 15       		.byte	0x15
 2351 025b C9000000 		.4byte	0xc9
 2352 025f 0C       		.byte	0xc
 2353 0260 0B       		.uleb128 0xb
 2354 0261 9F060000 		.4byte	.LASF42
 2355 0265 08       		.byte	0x8
 2356 0266 16       		.byte	0x16
 2357 0267 81000000 		.4byte	0x81
 2358 026b 10       		.byte	0x10
 2359 026c 00       		.byte	0
 2360 026d 03       		.uleb128 0x3
 2361 026e 32080000 		.4byte	.LASF43
 2362 0272 08       		.byte	0x8
 2363 0273 17       		.byte	0x17
 2364 0274 28020000 		.4byte	0x228
 2365 0278 09       		.uleb128 0x9
 2366 0279 08       		.byte	0x8
 2367 027a 08       		.byte	0x8
 2368 027b 19       		.byte	0x19
 2369 027c 99020000 		.4byte	0x299
 2370 0280 0B       		.uleb128 0xb
 2371 0281 8E060000 		.4byte	.LASF44
 2372 0285 08       		.byte	0x8
 2373 0286 1A       		.byte	0x1a
 2374 0287 C9000000 		.4byte	0xc9
 2375 028b 00       		.byte	0
 2376 028c 0B       		.uleb128 0xb
 2377 028d F8050000 		.4byte	.LASF45
 2378 0291 08       		.byte	0x8
 2379 0292 1B       		.byte	0x1b
 2380 0293 C9000000 		.4byte	0xc9
 2381 0297 04       		.byte	0x4
 2382 0298 00       		.byte	0
 2383 0299 03       		.uleb128 0x3
 2384 029a EA070000 		.4byte	.LASF46
 2385 029e 08       		.byte	0x8
 2386 029f 1C       		.byte	0x1c
 2387 02a0 78020000 		.4byte	0x278
 2388 02a4 0E       		.uleb128 0xe
 2389 02a5 746D00   		.ascii	"tm\000"
 2390 02a8 24       		.byte	0x24
 2391 02a9 09       		.byte	0x9
 2392 02aa 21       		.byte	0x21
 2393 02ab 1C030000 		.4byte	0x31c
 2394 02af 0B       		.uleb128 0xb
 2395 02b0 55070000 		.4byte	.LASF47
 2396 02b4 09       		.byte	0x9
 2397 02b5 23       		.byte	0x23
 2398 02b6 68000000 		.4byte	0x68
 2399 02ba 00       		.byte	0
 2400 02bb 0B       		.uleb128 0xb
 2401 02bc 88040000 		.4byte	.LASF48
 2402 02c0 09       		.byte	0x9
 2403 02c1 24       		.byte	0x24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 58


 2404 02c2 68000000 		.4byte	0x68
 2405 02c6 04       		.byte	0x4
 2406 02c7 0B       		.uleb128 0xb
 2407 02c8 0F000000 		.4byte	.LASF49
 2408 02cc 09       		.byte	0x9
 2409 02cd 25       		.byte	0x25
 2410 02ce 68000000 		.4byte	0x68
 2411 02d2 08       		.byte	0x8
 2412 02d3 0B       		.uleb128 0xb
 2413 02d4 44070000 		.4byte	.LASF50
 2414 02d8 09       		.byte	0x9
 2415 02d9 26       		.byte	0x26
 2416 02da 68000000 		.4byte	0x68
 2417 02de 0C       		.byte	0xc
 2418 02df 0B       		.uleb128 0xb
 2419 02e0 9F020000 		.4byte	.LASF51
 2420 02e4 09       		.byte	0x9
 2421 02e5 27       		.byte	0x27
 2422 02e6 68000000 		.4byte	0x68
 2423 02ea 10       		.byte	0x10
 2424 02eb 0B       		.uleb128 0xb
 2425 02ec C2020000 		.4byte	.LASF52
 2426 02f0 09       		.byte	0x9
 2427 02f1 28       		.byte	0x28
 2428 02f2 68000000 		.4byte	0x68
 2429 02f6 14       		.byte	0x14
 2430 02f7 0B       		.uleb128 0xb
 2431 02f8 A5060000 		.4byte	.LASF53
 2432 02fc 09       		.byte	0x9
 2433 02fd 29       		.byte	0x29
 2434 02fe 68000000 		.4byte	0x68
 2435 0302 18       		.byte	0x18
 2436 0303 0B       		.uleb128 0xb
 2437 0304 AF040000 		.4byte	.LASF54
 2438 0308 09       		.byte	0x9
 2439 0309 2A       		.byte	0x2a
 2440 030a 68000000 		.4byte	0x68
 2441 030e 1C       		.byte	0x1c
 2442 030f 0B       		.uleb128 0xb
 2443 0310 92030000 		.4byte	.LASF55
 2444 0314 09       		.byte	0x9
 2445 0315 2B       		.byte	0x2b
 2446 0316 68000000 		.4byte	0x68
 2447 031a 20       		.byte	0x20
 2448 031b 00       		.byte	0
 2449 031c 09       		.uleb128 0x9
 2450 031d 2C       		.byte	0x2c
 2451 031e 0A       		.byte	0xa
 2452 031f 14       		.byte	0x14
 2453 0320 49030000 		.4byte	0x349
 2454 0324 0A       		.uleb128 0xa
 2455 0325 6B657900 		.ascii	"key\000"
 2456 0329 0A       		.byte	0xa
 2457 032a 15       		.byte	0x15
 2458 032b 49030000 		.4byte	0x349
 2459 032f 00       		.byte	0
 2460 0330 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 59


 2461 0331 B7020000 		.4byte	.LASF56
 2462 0335 0A       		.byte	0xa
 2463 0336 16       		.byte	0x16
 2464 0337 49030000 		.4byte	0x349
 2465 033b 14       		.byte	0x14
 2466 033c 0B       		.uleb128 0xb
 2467 033d E7040000 		.4byte	.LASF57
 2468 0341 0A       		.byte	0xa
 2469 0342 17       		.byte	0x17
 2470 0343 BD000000 		.4byte	0xbd
 2471 0347 28       		.byte	0x28
 2472 0348 00       		.byte	0
 2473 0349 07       		.uleb128 0x7
 2474 034a D7000000 		.4byte	0xd7
 2475 034e 59030000 		.4byte	0x359
 2476 0352 08       		.uleb128 0x8
 2477 0353 E5000000 		.4byte	0xe5
 2478 0357 13       		.byte	0x13
 2479 0358 00       		.byte	0
 2480 0359 03       		.uleb128 0x3
 2481 035a E9020000 		.4byte	.LASF58
 2482 035e 0A       		.byte	0xa
 2483 035f 19       		.byte	0x19
 2484 0360 1C030000 		.4byte	0x31c
 2485 0364 09       		.uleb128 0x9
 2486 0365 3C       		.byte	0x3c
 2487 0366 0B       		.byte	0xb
 2488 0367 35       		.byte	0x35
 2489 0368 91030000 		.4byte	0x391
 2490 036c 0B       		.uleb128 0xb
 2491 036d 3D070000 		.4byte	.LASF59
 2492 0371 0B       		.byte	0xb
 2493 0372 36       		.byte	0x36
 2494 0373 49030000 		.4byte	0x349
 2495 0377 00       		.byte	0
 2496 0378 0B       		.uleb128 0xb
 2497 0379 6B020000 		.4byte	.LASF60
 2498 037d 0B       		.byte	0xb
 2499 037e 37       		.byte	0x37
 2500 037f 49030000 		.4byte	0x349
 2501 0383 14       		.byte	0x14
 2502 0384 0B       		.uleb128 0xb
 2503 0385 29060000 		.4byte	.LASF61
 2504 0389 0B       		.byte	0xb
 2505 038a 38       		.byte	0x38
 2506 038b 49030000 		.4byte	0x349
 2507 038f 28       		.byte	0x28
 2508 0390 00       		.byte	0
 2509 0391 03       		.uleb128 0x3
 2510 0392 EB010000 		.4byte	.LASF62
 2511 0396 0B       		.byte	0xb
 2512 0397 3A       		.byte	0x3a
 2513 0398 64030000 		.4byte	0x364
 2514 039c 09       		.uleb128 0x9
 2515 039d 20       		.byte	0x20
 2516 039e 0B       		.byte	0xb
 2517 039f 3C       		.byte	0x3c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 60


 2518 03a0 05040000 		.4byte	0x405
 2519 03a4 0B       		.uleb128 0xb
 2520 03a5 F8010000 		.4byte	.LASF63
 2521 03a9 0B       		.byte	0xb
 2522 03aa 3D       		.byte	0x3d
 2523 03ab 68000000 		.4byte	0x68
 2524 03af 00       		.byte	0
 2525 03b0 0A       		.uleb128 0xa
 2526 03b1 62657200 		.ascii	"ber\000"
 2527 03b5 0B       		.byte	0xb
 2528 03b6 3E       		.byte	0x3e
 2529 03b7 68000000 		.4byte	0x68
 2530 03bb 04       		.byte	0x4
 2531 03bc 0B       		.uleb128 0xb
 2532 03bd 07060000 		.4byte	.LASF64
 2533 03c1 0B       		.byte	0xb
 2534 03c2 3F       		.byte	0x3f
 2535 03c3 68000000 		.4byte	0x68
 2536 03c7 08       		.byte	0x8
 2537 03c8 0B       		.uleb128 0xb
 2538 03c9 6F010000 		.4byte	.LASF65
 2539 03cd 0B       		.byte	0xb
 2540 03ce 40       		.byte	0x40
 2541 03cf 68000000 		.4byte	0x68
 2542 03d3 0C       		.byte	0xc
 2543 03d4 0B       		.uleb128 0xb
 2544 03d5 D2050000 		.4byte	.LASF66
 2545 03d9 0B       		.byte	0xb
 2546 03da 41       		.byte	0x41
 2547 03db 68000000 		.4byte	0x68
 2548 03df 10       		.byte	0x10
 2549 03e0 0B       		.uleb128 0xb
 2550 03e1 CD050000 		.4byte	.LASF67
 2551 03e5 0B       		.byte	0xb
 2552 03e6 42       		.byte	0x42
 2553 03e7 68000000 		.4byte	0x68
 2554 03eb 14       		.byte	0x14
 2555 03ec 0B       		.uleb128 0xb
 2556 03ed 82010000 		.4byte	.LASF68
 2557 03f1 0B       		.byte	0xb
 2558 03f2 43       		.byte	0x43
 2559 03f3 68000000 		.4byte	0x68
 2560 03f7 18       		.byte	0x18
 2561 03f8 0B       		.uleb128 0xb
 2562 03f9 07020000 		.4byte	.LASF69
 2563 03fd 0B       		.byte	0xb
 2564 03fe 44       		.byte	0x44
 2565 03ff 68000000 		.4byte	0x68
 2566 0403 1C       		.byte	0x1c
 2567 0404 00       		.byte	0
 2568 0405 03       		.uleb128 0x3
 2569 0406 80060000 		.4byte	.LASF70
 2570 040a 0B       		.byte	0xb
 2571 040b 46       		.byte	0x46
 2572 040c 9C030000 		.4byte	0x39c
 2573 0410 09       		.uleb128 0x9
 2574 0411 05       		.byte	0x5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 61


 2575 0412 0B       		.byte	0xb
 2576 0413 52       		.byte	0x52
 2577 0414 55040000 		.4byte	0x455
 2578 0418 0B       		.uleb128 0xb
 2579 0419 44020000 		.4byte	.LASF71
 2580 041d 0B       		.byte	0xb
 2581 041e 54       		.byte	0x54
 2582 041f 81000000 		.4byte	0x81
 2583 0423 00       		.byte	0
 2584 0424 0B       		.uleb128 0xb
 2585 0425 D1070000 		.4byte	.LASF72
 2586 0429 0B       		.byte	0xb
 2587 042a 56       		.byte	0x56
 2588 042b 55040000 		.4byte	0x455
 2589 042f 01       		.byte	0x1
 2590 0430 0B       		.uleb128 0xb
 2591 0431 1E080000 		.4byte	.LASF73
 2592 0435 0B       		.byte	0xb
 2593 0436 58       		.byte	0x58
 2594 0437 81000000 		.4byte	0x81
 2595 043b 02       		.byte	0x2
 2596 043c 0B       		.uleb128 0xb
 2597 043d EE050000 		.4byte	.LASF74
 2598 0441 0B       		.byte	0xb
 2599 0442 5A       		.byte	0x5a
 2600 0443 81000000 		.4byte	0x81
 2601 0447 03       		.byte	0x3
 2602 0448 0B       		.uleb128 0xb
 2603 0449 A6020000 		.4byte	.LASF75
 2604 044d 0B       		.byte	0xb
 2605 044e 5D       		.byte	0x5d
 2606 044f 81000000 		.4byte	0x81
 2607 0453 04       		.byte	0x4
 2608 0454 00       		.byte	0
 2609 0455 02       		.uleb128 0x2
 2610 0456 01       		.byte	0x1
 2611 0457 02       		.byte	0x2
 2612 0458 A1050000 		.4byte	.LASF76
 2613 045c 03       		.uleb128 0x3
 2614 045d 55040000 		.4byte	.LASF77
 2615 0461 0B       		.byte	0xb
 2616 0462 5F       		.byte	0x5f
 2617 0463 10040000 		.4byte	0x410
 2618 0467 09       		.uleb128 0x9
 2619 0468 06       		.byte	0x6
 2620 0469 0C       		.byte	0xc
 2621 046a 2D       		.byte	0x2d
 2622 046b A0040000 		.4byte	0x4a0
 2623 046f 0B       		.uleb128 0xb
 2624 0470 87020000 		.4byte	.LASF78
 2625 0474 0C       		.byte	0xc
 2626 0475 2F       		.byte	0x2f
 2627 0476 8D000000 		.4byte	0x8d
 2628 047a 00       		.byte	0
 2629 047b 0B       		.uleb128 0xb
 2630 047c BB070000 		.4byte	.LASF79
 2631 0480 0C       		.byte	0xc
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 62


 2632 0481 30       		.byte	0x30
 2633 0482 B1000000 		.4byte	0xb1
 2634 0486 02       		.byte	0x2
 2635 0487 0B       		.uleb128 0xb
 2636 0488 AD070000 		.4byte	.LASF80
 2637 048c 0C       		.byte	0xc
 2638 048d 31       		.byte	0x31
 2639 048e 81000000 		.4byte	0x81
 2640 0492 04       		.byte	0x4
 2641 0493 0B       		.uleb128 0xb
 2642 0494 51000000 		.4byte	.LASF81
 2643 0498 0C       		.byte	0xc
 2644 0499 32       		.byte	0x32
 2645 049a 81000000 		.4byte	0x81
 2646 049e 05       		.byte	0x5
 2647 049f 00       		.byte	0
 2648 04a0 03       		.uleb128 0x3
 2649 04a1 1A020000 		.4byte	.LASF82
 2650 04a5 0C       		.byte	0xc
 2651 04a6 35       		.byte	0x35
 2652 04a7 AB040000 		.4byte	0x4ab
 2653 04ab 0C       		.uleb128 0xc
 2654 04ac 67040000 		.4byte	0x467
 2655 04b0 09       		.uleb128 0x9
 2656 04b1 1C       		.byte	0x1c
 2657 04b2 0C       		.byte	0xc
 2658 04b3 38       		.byte	0x38
 2659 04b4 D1040000 		.4byte	0x4d1
 2660 04b8 0B       		.uleb128 0xb
 2661 04b9 9B030000 		.4byte	.LASF83
 2662 04bd 0C       		.byte	0xc
 2663 04be 3A       		.byte	0x3a
 2664 04bf D1040000 		.4byte	0x4d1
 2665 04c3 00       		.byte	0
 2666 04c4 0B       		.uleb128 0xb
 2667 04c5 10080000 		.4byte	.LASF84
 2668 04c9 0C       		.byte	0xc
 2669 04ca 3B       		.byte	0x3b
 2670 04cb F2000000 		.4byte	0xf2
 2671 04cf 04       		.byte	0x4
 2672 04d0 00       		.byte	0
 2673 04d1 06       		.uleb128 0x6
 2674 04d2 04       		.byte	0x4
 2675 04d3 91030000 		.4byte	0x391
 2676 04d7 03       		.uleb128 0x3
 2677 04d8 4A040000 		.4byte	.LASF85
 2678 04dc 0C       		.byte	0xc
 2679 04dd 3D       		.byte	0x3d
 2680 04de B0040000 		.4byte	0x4b0
 2681 04e2 09       		.uleb128 0x9
 2682 04e3 68       		.byte	0x68
 2683 04e4 0C       		.byte	0xc
 2684 04e5 43       		.byte	0x43
 2685 04e6 03050000 		.4byte	0x503
 2686 04ea 0B       		.uleb128 0xb
 2687 04eb A6030000 		.4byte	.LASF86
 2688 04ef 0C       		.byte	0xc
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 63


 2689 04f0 48       		.byte	0x48
 2690 04f1 03050000 		.4byte	0x503
 2691 04f5 00       		.byte	0
 2692 04f6 0B       		.uleb128 0xb
 2693 04f7 8A030000 		.4byte	.LASF87
 2694 04fb 0C       		.byte	0xc
 2695 04fc 49       		.byte	0x49
 2696 04fd 68000000 		.4byte	0x68
 2697 0501 64       		.byte	0x64
 2698 0502 00       		.byte	0
 2699 0503 07       		.uleb128 0x7
 2700 0504 D7000000 		.4byte	0xd7
 2701 0508 13050000 		.4byte	0x513
 2702 050c 08       		.uleb128 0x8
 2703 050d E5000000 		.4byte	0xe5
 2704 0511 63       		.byte	0x63
 2705 0512 00       		.byte	0
 2706 0513 03       		.uleb128 0x3
 2707 0514 B7040000 		.4byte	.LASF88
 2708 0518 0C       		.byte	0xc
 2709 0519 4F       		.byte	0x4f
 2710 051a E2040000 		.4byte	0x4e2
 2711 051e 0F       		.uleb128 0xf
 2712 051f 69000000 		.4byte	.LASF160
 2713 0523 01       		.byte	0x1
 2714 0524 14       		.byte	0x14
 2715 0525 00000000 		.4byte	.LFB64
 2716 0529 0C000000 		.4byte	.LFE64-.LFB64
 2717 052d 01       		.uleb128 0x1
 2718 052e 9C       		.byte	0x9c
 2719 052f 10       		.uleb128 0x10
 2720 0530 00080000 		.4byte	.LASF102
 2721 0534 01       		.byte	0x1
 2722 0535 28       		.byte	0x28
 2723 0536 00000000 		.4byte	.LFB65
 2724 053a 2C010000 		.4byte	.LFE65-.LFB65
 2725 053e 01       		.uleb128 0x1
 2726 053f 9C       		.byte	0x9c
 2727 0540 6F050000 		.4byte	0x56f
 2728 0544 11       		.uleb128 0x11
 2729 0545 FC060000 		.4byte	.LASF89
 2730 0549 01       		.byte	0x1
 2731 054a 3C       		.byte	0x3c
 2732 054b 6F050000 		.4byte	0x56f
 2733 054f 02       		.uleb128 0x2
 2734 0550 91       		.byte	0x91
 2735 0551 64       		.sleb128 -28
 2736 0552 11       		.uleb128 0x11
 2737 0553 DA070000 		.4byte	.LASF90
 2738 0557 01       		.byte	0x1
 2739 0558 59       		.byte	0x59
 2740 0559 7F050000 		.4byte	0x57f
 2741 055d 02       		.uleb128 0x2
 2742 055e 91       		.byte	0x91
 2743 055f 58       		.sleb128 -40
 2744 0560 11       		.uleb128 0x11
 2745 0561 3A030000 		.4byte	.LASF91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 64


 2746 0565 01       		.byte	0x1
 2747 0566 5E       		.byte	0x5e
 2748 0567 81000000 		.4byte	0x81
 2749 056b 02       		.uleb128 0x2
 2750 056c 91       		.byte	0x91
 2751 056d 6F       		.sleb128 -17
 2752 056e 00       		.byte	0
 2753 056f 07       		.uleb128 0x7
 2754 0570 99000000 		.4byte	0x99
 2755 0574 7F050000 		.4byte	0x57f
 2756 0578 08       		.uleb128 0x8
 2757 0579 E5000000 		.4byte	0xe5
 2758 057d 01       		.byte	0x1
 2759 057e 00       		.byte	0
 2760 057f 07       		.uleb128 0x7
 2761 0580 D7000000 		.4byte	0xd7
 2762 0584 8F050000 		.4byte	0x58f
 2763 0588 08       		.uleb128 0x8
 2764 0589 E5000000 		.4byte	0xe5
 2765 058d 09       		.byte	0x9
 2766 058e 00       		.byte	0
 2767 058f 12       		.uleb128 0x12
 2768 0590 B3030000 		.4byte	.LASF93
 2769 0594 01       		.byte	0x1
 2770 0595 68       		.byte	0x68
 2771 0596 68000000 		.4byte	0x68
 2772 059a 00000000 		.4byte	.LFB66
 2773 059e 64000000 		.4byte	.LFE66-.LFB66
 2774 05a2 01       		.uleb128 0x1
 2775 05a3 9C       		.byte	0x9c
 2776 05a4 B7050000 		.4byte	0x5b7
 2777 05a8 11       		.uleb128 0x11
 2778 05a9 85050000 		.4byte	.LASF92
 2779 05ad 01       		.byte	0x1
 2780 05ae 82       		.byte	0x82
 2781 05af 81000000 		.4byte	0x81
 2782 05b3 02       		.uleb128 0x2
 2783 05b4 91       		.byte	0x91
 2784 05b5 77       		.sleb128 -9
 2785 05b6 00       		.byte	0
 2786 05b7 13       		.uleb128 0x13
 2787 05b8 22070000 		.4byte	.LASF161
 2788 05bc 01       		.byte	0x1
 2789 05bd 92       		.byte	0x92
 2790 05be 00000000 		.4byte	.LFB67
 2791 05c2 2A000000 		.4byte	.LFE67-.LFB67
 2792 05c6 01       		.uleb128 0x1
 2793 05c7 9C       		.byte	0x9c
 2794 05c8 14       		.uleb128 0x14
 2795 05c9 F5020000 		.4byte	.LASF94
 2796 05cd 01       		.byte	0x1
 2797 05ce B7       		.byte	0xb7
 2798 05cf 00000000 		.4byte	.LFB68
 2799 05d3 50000000 		.4byte	.LFE68-.LFB68
 2800 05d7 01       		.uleb128 0x1
 2801 05d8 9C       		.byte	0x9c
 2802 05d9 EC050000 		.4byte	0x5ec
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 65


 2803 05dd 15       		.uleb128 0x15
 2804 05de 6C040000 		.4byte	.LASF95
 2805 05e2 01       		.byte	0x1
 2806 05e3 B7       		.byte	0xb7
 2807 05e4 81000000 		.4byte	0x81
 2808 05e8 02       		.uleb128 0x2
 2809 05e9 91       		.byte	0x91
 2810 05ea 77       		.sleb128 -9
 2811 05eb 00       		.byte	0
 2812 05ec 16       		.uleb128 0x16
 2813 05ed F5070000 		.4byte	.LASF99
 2814 05f1 01       		.byte	0x1
 2815 05f2 CE       		.byte	0xce
 2816 05f3 81000000 		.4byte	0x81
 2817 05f7 00000000 		.4byte	.LFB69
 2818 05fb 48000000 		.4byte	.LFE69-.LFB69
 2819 05ff 01       		.uleb128 0x1
 2820 0600 9C       		.byte	0x9c
 2821 0601 22060000 		.4byte	0x622
 2822 0605 15       		.uleb128 0x15
 2823 0606 95040000 		.4byte	.LASF96
 2824 060a 01       		.byte	0x1
 2825 060b CE       		.byte	0xce
 2826 060c 22060000 		.4byte	0x622
 2827 0610 02       		.uleb128 0x2
 2828 0611 91       		.byte	0x91
 2829 0612 74       		.sleb128 -12
 2830 0613 15       		.uleb128 0x15
 2831 0614 6C040000 		.4byte	.LASF95
 2832 0618 01       		.byte	0x1
 2833 0619 CE       		.byte	0xce
 2834 061a 81000000 		.4byte	0x81
 2835 061e 02       		.uleb128 0x2
 2836 061f 91       		.byte	0x91
 2837 0620 73       		.sleb128 -13
 2838 0621 00       		.byte	0
 2839 0622 06       		.uleb128 0x6
 2840 0623 04       		.byte	0x4
 2841 0624 A0040000 		.4byte	0x4a0
 2842 0628 17       		.uleb128 0x17
 2843 0629 D7050000 		.4byte	.LASF97
 2844 062d 01       		.byte	0x1
 2845 062e E3       		.byte	0xe3
 2846 062f 00000000 		.4byte	.LFB70
 2847 0633 1E000000 		.4byte	.LFE70-.LFB70
 2848 0637 01       		.uleb128 0x1
 2849 0638 9C       		.byte	0x9c
 2850 0639 4C060000 		.4byte	0x64c
 2851 063d 15       		.uleb128 0x15
 2852 063e 35060000 		.4byte	.LASF98
 2853 0642 01       		.byte	0x1
 2854 0643 E3       		.byte	0xe3
 2855 0644 22060000 		.4byte	0x622
 2856 0648 02       		.uleb128 0x2
 2857 0649 91       		.byte	0x91
 2858 064a 74       		.sleb128 -12
 2859 064b 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 66


 2860 064c 18       		.uleb128 0x18
 2861 064d 14050000 		.4byte	.LASF100
 2862 0651 01       		.byte	0x1
 2863 0652 EC       		.byte	0xec
 2864 0653 A0040000 		.4byte	0x4a0
 2865 0657 00000000 		.4byte	.LFB71
 2866 065b 46000000 		.4byte	.LFE71-.LFB71
 2867 065f 01       		.uleb128 0x1
 2868 0660 9C       		.byte	0x9c
 2869 0661 9E060000 		.4byte	0x69e
 2870 0665 15       		.uleb128 0x15
 2871 0666 87020000 		.4byte	.LASF78
 2872 066a 01       		.byte	0x1
 2873 066b EC       		.byte	0xec
 2874 066c 8D000000 		.4byte	0x8d
 2875 0670 02       		.uleb128 0x2
 2876 0671 91       		.byte	0x91
 2877 0672 6A       		.sleb128 -22
 2878 0673 15       		.uleb128 0x15
 2879 0674 AD070000 		.4byte	.LASF80
 2880 0678 01       		.byte	0x1
 2881 0679 EC       		.byte	0xec
 2882 067a 81000000 		.4byte	0x81
 2883 067e 02       		.uleb128 0x2
 2884 067f 91       		.byte	0x91
 2885 0680 69       		.sleb128 -23
 2886 0681 15       		.uleb128 0x15
 2887 0682 51000000 		.4byte	.LASF81
 2888 0686 01       		.byte	0x1
 2889 0687 EC       		.byte	0xec
 2890 0688 81000000 		.4byte	0x81
 2891 068c 02       		.uleb128 0x2
 2892 068d 91       		.byte	0x91
 2893 068e 68       		.sleb128 -24
 2894 068f 11       		.uleb128 0x11
 2895 0690 4C070000 		.4byte	.LASF101
 2896 0694 01       		.byte	0x1
 2897 0695 EF       		.byte	0xef
 2898 0696 A0040000 		.4byte	0x4a0
 2899 069a 02       		.uleb128 0x2
 2900 069b 91       		.byte	0x91
 2901 069c 70       		.sleb128 -16
 2902 069d 00       		.byte	0
 2903 069e 19       		.uleb128 0x19
 2904 069f 44060000 		.4byte	.LASF103
 2905 06a3 01       		.byte	0x1
 2906 06a4 0501     		.2byte	0x105
 2907 06a6 00000000 		.4byte	.LFB72
 2908 06aa E0000000 		.4byte	.LFE72-.LFB72
 2909 06ae 01       		.uleb128 0x1
 2910 06af 9C       		.byte	0x9c
 2911 06b0 F5060000 		.4byte	0x6f5
 2912 06b4 1A       		.uleb128 0x1a
 2913 06b5 4A010000 		.4byte	.LASF104
 2914 06b9 01       		.byte	0x1
 2915 06ba 0D01     		.2byte	0x10d
 2916 06bc C9010000 		.4byte	0x1c9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 67


 2917 06c0 03       		.uleb128 0x3
 2918 06c1 91       		.byte	0x91
 2919 06c2 EC7C     		.sleb128 -404
 2920 06c4 1A       		.uleb128 0x1a
 2921 06c5 87070000 		.4byte	.LASF105
 2922 06c9 01       		.byte	0x1
 2923 06ca 1101     		.2byte	0x111
 2924 06cc C9010000 		.4byte	0x1c9
 2925 06d0 03       		.uleb128 0x3
 2926 06d1 91       		.byte	0x91
 2927 06d2 E879     		.sleb128 -792
 2928 06d4 1A       		.uleb128 0x1a
 2929 06d5 E1030000 		.4byte	.LASF106
 2930 06d9 01       		.byte	0x1
 2931 06da 1501     		.2byte	0x115
 2932 06dc C9010000 		.4byte	0x1c9
 2933 06e0 03       		.uleb128 0x3
 2934 06e1 91       		.byte	0x91
 2935 06e2 E476     		.sleb128 -1180
 2936 06e4 1A       		.uleb128 0x1a
 2937 06e5 00000000 		.4byte	.LASF107
 2938 06e9 01       		.byte	0x1
 2939 06ea 1901     		.2byte	0x119
 2940 06ec C9010000 		.4byte	0x1c9
 2941 06f0 03       		.uleb128 0x3
 2942 06f1 91       		.byte	0x91
 2943 06f2 E073     		.sleb128 -1568
 2944 06f4 00       		.byte	0
 2945 06f5 1B       		.uleb128 0x1b
 2946 06f6 0B080000 		.4byte	.LASF162
 2947 06fa 01       		.byte	0x1
 2948 06fb 2401     		.2byte	0x124
 2949 06fd 68000000 		.4byte	0x68
 2950 0701 00000000 		.4byte	.LFB73
 2951 0705 1E000000 		.4byte	.LFE73-.LFB73
 2952 0709 01       		.uleb128 0x1
 2953 070a 9C       		.byte	0x9c
 2954 070b 1C       		.uleb128 0x1c
 2955 070c 4E020000 		.4byte	.LASF108
 2956 0710 01       		.byte	0x1
 2957 0711 3A01     		.2byte	0x13a
 2958 0713 81000000 		.4byte	0x81
 2959 0717 00000000 		.4byte	.LFB74
 2960 071b 30040000 		.4byte	.LFE74-.LFB74
 2961 071f 01       		.uleb128 0x1
 2962 0720 9C       		.byte	0x9c
 2963 0721 65080000 		.4byte	0x865
 2964 0725 1D       		.uleb128 0x1d
 2965 0726 62000000 		.4byte	.LBB2
 2966 072a B8030000 		.4byte	.LBE2-.LBB2
 2967 072e 1A       		.uleb128 0x1a
 2968 072f 27050000 		.4byte	.LASF109
 2969 0733 01       		.byte	0x1
 2970 0734 6A01     		.2byte	0x16a
 2971 0736 49030000 		.4byte	0x349
 2972 073a 02       		.uleb128 0x2
 2973 073b 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 68


 2974 073c 48       		.sleb128 -56
 2975 073d 1A       		.uleb128 0x1a
 2976 073e 26020000 		.4byte	.LASF110
 2977 0742 01       		.byte	0x1
 2978 0743 6F01     		.2byte	0x16f
 2979 0745 49030000 		.4byte	0x349
 2980 0749 03       		.uleb128 0x3
 2981 074a 91       		.byte	0x91
 2982 074b B47F     		.sleb128 -76
 2983 074d 1A       		.uleb128 0x1a
 2984 074e 46030000 		.4byte	.LASF111
 2985 0752 01       		.byte	0x1
 2986 0753 8201     		.2byte	0x182
 2987 0755 8D000000 		.4byte	0x8d
 2988 0759 02       		.uleb128 0x2
 2989 075a 91       		.byte	0x91
 2990 075b 66       		.sleb128 -26
 2991 075c 1A       		.uleb128 0x1a
 2992 075d CC030000 		.4byte	.LASF112
 2993 0761 01       		.byte	0x1
 2994 0762 8301     		.2byte	0x183
 2995 0764 49030000 		.4byte	0x349
 2996 0768 03       		.uleb128 0x3
 2997 0769 91       		.byte	0x91
 2998 076a A07F     		.sleb128 -96
 2999 076c 1A       		.uleb128 0x1a
 3000 076d E7060000 		.4byte	.LASF113
 3001 0771 01       		.byte	0x1
 3002 0772 9801     		.2byte	0x198
 3003 0774 65080000 		.4byte	0x865
 3004 0778 03       		.uleb128 0x3
 3005 0779 91       		.byte	0x91
 3006 077a B875     		.sleb128 -1352
 3007 077c 1A       		.uleb128 0x1a
 3008 077d 67070000 		.4byte	.LASF30
 3009 0781 01       		.byte	0x1
 3010 0782 9901     		.2byte	0x199
 3011 0784 81000000 		.4byte	0x81
 3012 0788 02       		.uleb128 0x2
 3013 0789 91       		.byte	0x91
 3014 078a 65       		.sleb128 -27
 3015 078b 1A       		.uleb128 0x1a
 3016 078c B9060000 		.4byte	.LASF114
 3017 0790 01       		.byte	0x1
 3018 0791 A001     		.2byte	0x1a0
 3019 0793 EC000000 		.4byte	0xec
 3020 0797 02       		.uleb128 0x2
 3021 0798 91       		.byte	0x91
 3022 0799 6C       		.sleb128 -20
 3023 079a 1A       		.uleb128 0x1a
 3024 079b 67010000 		.4byte	.LASF115
 3025 079f 01       		.byte	0x1
 3026 07a0 A401     		.2byte	0x1a4
 3027 07a2 A5000000 		.4byte	0xa5
 3028 07a6 02       		.uleb128 0x2
 3029 07a7 91       		.byte	0x91
 3030 07a8 64       		.sleb128 -28
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 69


 3031 07a9 1A       		.uleb128 0x1a
 3032 07aa 57020000 		.4byte	.LASF116
 3033 07ae 01       		.byte	0x1
 3034 07af D401     		.2byte	0x1d4
 3035 07b1 4C000000 		.4byte	0x4c
 3036 07b5 02       		.uleb128 0x2
 3037 07b6 91       		.byte	0x91
 3038 07b7 5C       		.sleb128 -36
 3039 07b8 1E       		.uleb128 0x1e
 3040 07b9 CE000000 		.4byte	.LBB3
 3041 07bd 2C000000 		.4byte	.LBE3-.LBB3
 3042 07c1 E5070000 		.4byte	0x7e5
 3043 07c5 1A       		.uleb128 0x1a
 3044 07c6 70060000 		.4byte	.LASF117
 3045 07ca 01       		.byte	0x1
 3046 07cb 7701     		.2byte	0x177
 3047 07cd 8D000000 		.4byte	0x8d
 3048 07d1 02       		.uleb128 0x2
 3049 07d2 91       		.byte	0x91
 3050 07d3 68       		.sleb128 -24
 3051 07d4 1A       		.uleb128 0x1a
 3052 07d5 D9010000 		.4byte	.LASF118
 3053 07d9 01       		.byte	0x1
 3054 07da 7801     		.2byte	0x178
 3055 07dc 49030000 		.4byte	0x349
 3056 07e0 03       		.uleb128 0x3
 3057 07e1 91       		.byte	0x91
 3058 07e2 8C7F     		.sleb128 -116
 3059 07e4 00       		.byte	0
 3060 07e5 1E       		.uleb128 0x1e
 3061 07e6 FC000000 		.4byte	.LBB4
 3062 07ea 20000000 		.4byte	.LBE4-.LBB4
 3063 07ee 03080000 		.4byte	0x803
 3064 07f2 1A       		.uleb128 0x1a
 3065 07f3 D9010000 		.4byte	.LASF118
 3066 07f7 01       		.byte	0x1
 3067 07f8 7C01     		.2byte	0x17c
 3068 07fa 49030000 		.4byte	0x349
 3069 07fe 03       		.uleb128 0x3
 3070 07ff 91       		.byte	0x91
 3071 0800 F87E     		.sleb128 -136
 3072 0802 00       		.byte	0
 3073 0803 1E       		.uleb128 0x1e
 3074 0804 3C020000 		.4byte	.LBB5
 3075 0808 BC000000 		.4byte	.LBE5-.LBB5
 3076 080c 3A080000 		.4byte	0x83a
 3077 0810 1A       		.uleb128 0x1a
 3078 0811 20050000 		.4byte	.LASF119
 3079 0815 01       		.byte	0x1
 3080 0816 A901     		.2byte	0x1a9
 3081 0818 A5000000 		.4byte	0xa5
 3082 081c 02       		.uleb128 0x2
 3083 081d 91       		.byte	0x91
 3084 081e 6B       		.sleb128 -21
 3085 081f 1D       		.uleb128 0x1d
 3086 0820 44020000 		.4byte	.LBB6
 3087 0824 9A000000 		.4byte	.LBE6-.LBB6
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 70


 3088 0828 1A       		.uleb128 0x1a
 3089 0829 13030000 		.4byte	.LASF120
 3090 082d 01       		.byte	0x1
 3091 082e AB01     		.2byte	0x1ab
 3092 0830 75080000 		.4byte	0x875
 3093 0834 03       		.uleb128 0x3
 3094 0835 91       		.byte	0x91
 3095 0836 8077     		.sleb128 -1152
 3096 0838 00       		.byte	0
 3097 0839 00       		.byte	0
 3098 083a 1D       		.uleb128 0x1d
 3099 083b 12030000 		.4byte	.LBB7
 3100 083f 3A000000 		.4byte	.LBE7-.LBB7
 3101 0843 1A       		.uleb128 0x1a
 3102 0844 34020000 		.4byte	.LASF121
 3103 0848 01       		.byte	0x1
 3104 0849 CB01     		.2byte	0x1cb
 3105 084b 68000000 		.4byte	0x68
 3106 084f 02       		.uleb128 0x2
 3107 0850 91       		.byte	0x91
 3108 0851 60       		.sleb128 -32
 3109 0852 1A       		.uleb128 0x1a
 3110 0853 E2050000 		.4byte	.LASF122
 3111 0857 01       		.byte	0x1
 3112 0858 CC01     		.2byte	0x1cc
 3113 085a 7F050000 		.4byte	0x57f
 3114 085e 03       		.uleb128 0x3
 3115 085f 91       		.byte	0x91
 3116 0860 EC7E     		.sleb128 -148
 3117 0862 00       		.byte	0
 3118 0863 00       		.byte	0
 3119 0864 00       		.byte	0
 3120 0865 07       		.uleb128 0x7
 3121 0866 D7000000 		.4byte	0xd7
 3122 086a 75080000 		.4byte	0x875
 3123 086e 08       		.uleb128 0x8
 3124 086f E5000000 		.4byte	0xe5
 3125 0873 C7       		.byte	0xc7
 3126 0874 00       		.byte	0
 3127 0875 07       		.uleb128 0x7
 3128 0876 D7000000 		.4byte	0xd7
 3129 087a 86080000 		.4byte	0x886
 3130 087e 1F       		.uleb128 0x1f
 3131 087f E5000000 		.4byte	0xe5
 3132 0883 E803     		.2byte	0x3e8
 3133 0885 00       		.byte	0
 3134 0886 1C       		.uleb128 0x1c
 3135 0887 61050000 		.4byte	.LASF123
 3136 088b 01       		.byte	0x1
 3137 088c E901     		.2byte	0x1e9
 3138 088e 81000000 		.4byte	0x81
 3139 0892 00000000 		.4byte	.LFB75
 3140 0896 44000000 		.4byte	.LFE75-.LFB75
 3141 089a 01       		.uleb128 0x1
 3142 089b 9C       		.byte	0x9c
 3143 089c BA080000 		.4byte	0x8ba
 3144 08a0 1D       		.uleb128 0x1d
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 71


 3145 08a1 20000000 		.4byte	.LBB8
 3146 08a5 1A000000 		.4byte	.LBE8-.LBB8
 3147 08a9 1A       		.uleb128 0x1a
 3148 08aa 57020000 		.4byte	.LASF116
 3149 08ae 01       		.byte	0x1
 3150 08af F401     		.2byte	0x1f4
 3151 08b1 4C000000 		.4byte	0x4c
 3152 08b5 02       		.uleb128 0x2
 3153 08b6 91       		.byte	0x91
 3154 08b7 74       		.sleb128 -12
 3155 08b8 00       		.byte	0
 3156 08b9 00       		.byte	0
 3157 08ba 1C       		.uleb128 0x1c
 3158 08bb 74030000 		.4byte	.LASF124
 3159 08bf 01       		.byte	0x1
 3160 08c0 0902     		.2byte	0x209
 3161 08c2 81000000 		.4byte	0x81
 3162 08c6 00000000 		.4byte	.LFB76
 3163 08ca 74020000 		.4byte	.LFE76-.LFB76
 3164 08ce 01       		.uleb128 0x1
 3165 08cf 9C       		.byte	0x9c
 3166 08d0 4B090000 		.4byte	0x94b
 3167 08d4 1A       		.uleb128 0x1a
 3168 08d5 E7040000 		.4byte	.LASF57
 3169 08d9 01       		.byte	0x1
 3170 08da 0C02     		.2byte	0x20c
 3171 08dc 4C000000 		.4byte	0x4c
 3172 08e0 02       		.uleb128 0x2
 3173 08e1 91       		.byte	0x91
 3174 08e2 6C       		.sleb128 -20
 3175 08e3 1A       		.uleb128 0x1a
 3176 08e4 BF060000 		.4byte	.LASF125
 3177 08e8 01       		.byte	0x1
 3178 08e9 0D02     		.2byte	0x20d
 3179 08eb 4B090000 		.4byte	0x94b
 3180 08ef 02       		.uleb128 0x2
 3181 08f0 91       		.byte	0x91
 3182 08f1 4C       		.sleb128 -52
 3183 08f2 1A       		.uleb128 0x1a
 3184 08f3 B7020000 		.4byte	.LASF56
 3185 08f7 01       		.byte	0x1
 3186 08f8 1102     		.2byte	0x211
 3187 08fa 49030000 		.4byte	0x349
 3188 08fe 03       		.uleb128 0x3
 3189 08ff 91       		.byte	0x91
 3190 0900 B87F     		.sleb128 -72
 3191 0902 1A       		.uleb128 0x1a
 3192 0903 1E030000 		.4byte	.LASF126
 3193 0907 01       		.byte	0x1
 3194 0908 2F02     		.2byte	0x22f
 3195 090a 6D020000 		.4byte	0x26d
 3196 090e 03       		.uleb128 0x3
 3197 090f 91       		.byte	0x91
 3198 0910 A47F     		.sleb128 -92
 3199 0912 1E       		.uleb128 0x1e
 3200 0913 22000000 		.4byte	.LBB9
 3201 0917 78000000 		.4byte	.LBE9-.LBB9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 72


 3202 091b 30090000 		.4byte	0x930
 3203 091f 1A       		.uleb128 0x1a
 3204 0920 05070000 		.4byte	.LASF127
 3205 0924 01       		.byte	0x1
 3206 0925 1702     		.2byte	0x217
 3207 0927 1D020000 		.4byte	0x21d
 3208 092b 03       		.uleb128 0x3
 3209 092c 91       		.byte	0x91
 3210 092d 887F     		.sleb128 -120
 3211 092f 00       		.byte	0
 3212 0930 1D       		.uleb128 0x1d
 3213 0931 1E010000 		.4byte	.LBB10
 3214 0935 EE000000 		.4byte	.LBE10-.LBB10
 3215 0939 1A       		.uleb128 0x1a
 3216 093a 5C070000 		.4byte	.LASF128
 3217 093e 01       		.byte	0x1
 3218 093f 4A02     		.2byte	0x24a
 3219 0941 99020000 		.4byte	0x299
 3220 0945 03       		.uleb128 0x3
 3221 0946 91       		.byte	0x91
 3222 0947 807F     		.sleb128 -128
 3223 0949 00       		.byte	0
 3224 094a 00       		.byte	0
 3225 094b 07       		.uleb128 0x7
 3226 094c D7000000 		.4byte	0xd7
 3227 0950 5B090000 		.4byte	0x95b
 3228 0954 08       		.uleb128 0x8
 3229 0955 E5000000 		.4byte	0xe5
 3230 0959 1F       		.byte	0x1f
 3231 095a 00       		.byte	0
 3232 095b 20       		.uleb128 0x20
 3233 095c E1020000 		.4byte	.LASF129
 3234 0960 01       		.byte	0x1
 3235 0961 7002     		.2byte	0x270
 3236 0963 81000000 		.4byte	0x81
 3237 0967 00000000 		.4byte	.LFB77
 3238 096b 74000000 		.4byte	.LFE77-.LFB77
 3239 096f 01       		.uleb128 0x1
 3240 0970 9C       		.byte	0x9c
 3241 0971 A1090000 		.4byte	0x9a1
 3242 0975 21       		.uleb128 0x21
 3243 0976 E7040000 		.4byte	.LASF57
 3244 097a 01       		.byte	0x1
 3245 097b 7002     		.2byte	0x270
 3246 097d 4C000000 		.4byte	0x4c
 3247 0981 02       		.uleb128 0x2
 3248 0982 91       		.byte	0x91
 3249 0983 64       		.sleb128 -28
 3250 0984 22       		.uleb128 0x22
 3251 0985 7400     		.ascii	"t\000"
 3252 0987 01       		.byte	0x1
 3253 0988 7702     		.2byte	0x277
 3254 098a A1090000 		.4byte	0x9a1
 3255 098e 02       		.uleb128 0x2
 3256 098f 91       		.byte	0x91
 3257 0990 74       		.sleb128 -12
 3258 0991 1A       		.uleb128 0x1a
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 73


 3259 0992 C6040000 		.4byte	.LASF130
 3260 0996 01       		.byte	0x1
 3261 0997 7C02     		.2byte	0x27c
 3262 0999 6B010000 		.4byte	0x16b
 3263 099d 02       		.uleb128 0x2
 3264 099e 91       		.byte	0x91
 3265 099f 68       		.sleb128 -24
 3266 09a0 00       		.byte	0
 3267 09a1 06       		.uleb128 0x6
 3268 09a2 04       		.byte	0x4
 3269 09a3 A4020000 		.4byte	0x2a4
 3270 09a7 20       		.uleb128 0x20
 3271 09a8 96020000 		.4byte	.LASF131
 3272 09ac 01       		.byte	0x1
 3273 09ad 9902     		.2byte	0x299
 3274 09af 81000000 		.4byte	0x81
 3275 09b3 00000000 		.4byte	.LFB78
 3276 09b7 38010000 		.4byte	.LFE78-.LFB78
 3277 09bb 01       		.uleb128 0x1
 3278 09bc 9C       		.byte	0x9c
 3279 09bd 200A0000 		.4byte	0xa20
 3280 09c1 21       		.uleb128 0x21
 3281 09c2 BD020000 		.4byte	.LASF132
 3282 09c6 01       		.byte	0x1
 3283 09c7 9902     		.2byte	0x299
 3284 09c9 EC000000 		.4byte	0xec
 3285 09cd 03       		.uleb128 0x3
 3286 09ce 91       		.byte	0x91
 3287 09cf 9C7E     		.sleb128 -228
 3288 09d1 21       		.uleb128 0x21
 3289 09d2 B2020000 		.4byte	.LASF133
 3290 09d6 01       		.byte	0x1
 3291 09d7 9902     		.2byte	0x299
 3292 09d9 68000000 		.4byte	0x68
 3293 09dd 03       		.uleb128 0x3
 3294 09de 91       		.byte	0x91
 3295 09df 987E     		.sleb128 -232
 3296 09e1 21       		.uleb128 0x21
 3297 09e2 8F040000 		.4byte	.LASF134
 3298 09e6 01       		.byte	0x1
 3299 09e7 9902     		.2byte	0x299
 3300 09e9 EC000000 		.4byte	0xec
 3301 09ed 03       		.uleb128 0x3
 3302 09ee 91       		.byte	0x91
 3303 09ef 947E     		.sleb128 -236
 3304 09f1 1A       		.uleb128 0x1a
 3305 09f2 CA010000 		.4byte	.LASF135
 3306 09f6 01       		.byte	0x1
 3307 09f7 9B02     		.2byte	0x29b
 3308 09f9 81000000 		.4byte	0x81
 3309 09fd 02       		.uleb128 0x2
 3310 09fe 91       		.byte	0x91
 3311 09ff 77       		.sleb128 -9
 3312 0a00 1A       		.uleb128 0x1a
 3313 0a01 3C000000 		.4byte	.LASF136
 3314 0a05 01       		.byte	0x1
 3315 0a06 A202     		.2byte	0x2a2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 74


 3316 0a08 200A0000 		.4byte	0xa20
 3317 0a0c 02       		.uleb128 0x2
 3318 0a0d 91       		.byte	0x91
 3319 0a0e 68       		.sleb128 -24
 3320 0a0f 1A       		.uleb128 0x1a
 3321 0a10 E7060000 		.4byte	.LASF113
 3322 0a14 01       		.byte	0x1
 3323 0a15 AA02     		.2byte	0x2aa
 3324 0a17 65080000 		.4byte	0x865
 3325 0a1b 03       		.uleb128 0x3
 3326 0a1c 91       		.byte	0x91
 3327 0a1d A07E     		.sleb128 -224
 3328 0a1f 00       		.byte	0
 3329 0a20 07       		.uleb128 0x7
 3330 0a21 D7000000 		.4byte	0xd7
 3331 0a25 300A0000 		.4byte	0xa30
 3332 0a29 08       		.uleb128 0x8
 3333 0a2a E5000000 		.4byte	0xe5
 3334 0a2e 0B       		.byte	0xb
 3335 0a2f 00       		.byte	0
 3336 0a30 23       		.uleb128 0x23
 3337 0a31 3D010000 		.4byte	.LASF137
 3338 0a35 0D       		.byte	0xd
 3339 0a36 1207     		.2byte	0x712
 3340 0a38 3C0A0000 		.4byte	0xa3c
 3341 0a3c 0C       		.uleb128 0xc
 3342 0a3d 76000000 		.4byte	0x76
 3343 0a41 24       		.uleb128 0x24
 3344 0a42 2C000000 		.4byte	.LASF138
 3345 0a46 0A       		.byte	0xa
 3346 0a47 11       		.byte	0x11
 3347 0a48 55040000 		.4byte	0x455
 3348 0a4c 05       		.uleb128 0x5
 3349 0a4d 03       		.byte	0x3
 3350 0a4e 00000000 		.4byte	buffer_overflow
 3351 0a52 24       		.uleb128 0x24
 3352 0a53 76040000 		.4byte	.LASF139
 3353 0a57 0A       		.byte	0xa
 3354 0a58 22       		.byte	0x22
 3355 0a59 8D000000 		.4byte	0x8d
 3356 0a5d 05       		.uleb128 0x5
 3357 0a5e 03       		.byte	0x3
 3358 0a5f 00000000 		.4byte	dataPointsInStack
 3359 0a63 24       		.uleb128 0x24
 3360 0a64 6E070000 		.4byte	.LASF140
 3361 0a68 0A       		.byte	0xa
 3362 0a69 23       		.byte	0x23
 3363 0a6a 8D000000 		.4byte	0x8d
 3364 0a6e 05       		.uleb128 0x5
 3365 0a6f 03       		.byte	0x3
 3366 0a70 00000000 		.4byte	dataPointsInStackDesired
 3367 0a74 07       		.uleb128 0x7
 3368 0a75 59030000 		.4byte	0x359
 3369 0a79 840A0000 		.4byte	0xa84
 3370 0a7d 08       		.uleb128 0x8
 3371 0a7e E5000000 		.4byte	0xe5
 3372 0a82 95       		.byte	0x95
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 75


 3373 0a83 00       		.byte	0
 3374 0a84 24       		.uleb128 0x24
 3375 0a85 85030000 		.4byte	.LASF141
 3376 0a89 0A       		.byte	0xa
 3377 0a8a 24       		.byte	0x24
 3378 0a8b 740A0000 		.4byte	0xa74
 3379 0a8f 05       		.uleb128 0x5
 3380 0a90 03       		.byte	0x3
 3381 0a91 00000000 		.4byte	data
 3382 0a95 24       		.uleb128 0x24
 3383 0a96 24010000 		.4byte	.LASF142
 3384 0a9a 0B       		.byte	0xb
 3385 0a9b 1F       		.byte	0x1f
 3386 0a9c 81000000 		.4byte	0x81
 3387 0aa0 05       		.uleb128 0x5
 3388 0aa1 03       		.byte	0x3
 3389 0aa2 00000000 		.4byte	modem_state
 3390 0aa6 24       		.uleb128 0x24
 3391 0aa7 F5030000 		.4byte	.LASF143
 3392 0aab 0B       		.byte	0xb
 3393 0aac 62       		.byte	0x62
 3394 0aad BD000000 		.4byte	0xbd
 3395 0ab1 05       		.uleb128 0x5
 3396 0ab2 03       		.byte	0x3
 3397 0ab3 00000000 		.4byte	modem_start_time_stamp
 3398 0ab7 24       		.uleb128 0x24
 3399 0ab8 9B030000 		.4byte	.LASF83
 3400 0abc 0B       		.byte	0xb
 3401 0abd 63       		.byte	0x63
 3402 0abe 91030000 		.4byte	0x391
 3403 0ac2 05       		.uleb128 0x5
 3404 0ac3 03       		.byte	0x3
 3405 0ac4 00000000 		.4byte	modem_info
 3406 0ac8 24       		.uleb128 0x24
 3407 0ac9 D0060000 		.4byte	.LASF144
 3408 0acd 0B       		.byte	0xb
 3409 0ace 64       		.byte	0x64
 3410 0acf 05040000 		.4byte	0x405
 3411 0ad3 05       		.uleb128 0x5
 3412 0ad4 03       		.byte	0x3
 3413 0ad5 00000000 		.4byte	modem_stats
 3414 0ad9 24       		.uleb128 0x24
 3415 0ada FF040000 		.4byte	.LASF145
 3416 0ade 0B       		.byte	0xb
 3417 0adf 65       		.byte	0x65
 3418 0ae0 5C040000 		.4byte	0x45c
 3419 0ae4 05       		.uleb128 0x5
 3420 0ae5 03       		.byte	0x3
 3421 0ae6 00000000 		.4byte	updatable_parameters
 3422 0aea 07       		.uleb128 0x7
 3423 0aeb D7000000 		.4byte	0xd7
 3424 0aef FB0A0000 		.4byte	0xafb
 3425 0af3 1F       		.uleb128 0x1f
 3426 0af4 E5000000 		.4byte	0xe5
 3427 0af8 0F27     		.2byte	0x270f
 3428 0afa 00       		.byte	0
 3429 0afb 24       		.uleb128 0x24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 76


 3430 0afc 3F050000 		.4byte	.LASF146
 3431 0b00 0C       		.byte	0xc
 3432 0b01 17       		.byte	0x17
 3433 0b02 EA0A0000 		.4byte	0xaea
 3434 0b06 05       		.uleb128 0x5
 3435 0b07 03       		.byte	0x3
 3436 0b08 00000000 		.4byte	http_request
 3437 0b0c 24       		.uleb128 0x24
 3438 0b0d 9D070000 		.4byte	.LASF147
 3439 0b11 0C       		.byte	0xc
 3440 0b12 18       		.byte	0x18
 3441 0b13 EA0A0000 		.4byte	0xaea
 3442 0b17 05       		.uleb128 0x5
 3443 0b18 03       		.byte	0x3
 3444 0b19 00000000 		.4byte	http_body
 3445 0b1d 24       		.uleb128 0x24
 3446 0b1e DC060000 		.4byte	.LASF148
 3447 0b22 0C       		.byte	0xc
 3448 0b23 19       		.byte	0x19
 3449 0b24 65080000 		.4byte	0x865
 3450 0b28 05       		.uleb128 0x5
 3451 0b29 03       		.byte	0x3
 3452 0b2a 00000000 		.4byte	http_route
 3453 0b2e 24       		.uleb128 0x24
 3454 0b2f 1D060000 		.4byte	.LASF149
 3455 0b33 0C       		.byte	0xc
 3456 0b34 40       		.byte	0x40
 3457 0b35 D7040000 		.4byte	0x4d7
 3458 0b39 05       		.uleb128 0x5
 3459 0b3a 03       		.byte	0x3
 3460 0b3b 00000000 		.4byte	system_info
 3461 0b3f 24       		.uleb128 0x24
 3462 0b40 BD050000 		.4byte	.LASF150
 3463 0b44 0C       		.byte	0xc
 3464 0b45 52       		.byte	0x52
 3465 0b46 13050000 		.4byte	0x513
 3466 0b4a 05       		.uleb128 0x5
 3467 0b4b 03       		.byte	0x3
 3468 0b4c 00000000 		.4byte	system_settings
 3469 0b50 24       		.uleb128 0x24
 3470 0b51 30010000 		.4byte	.LASF151
 3471 0b55 0C       		.byte	0xc
 3472 0b56 6E       		.byte	0x6e
 3473 0b57 A0040000 		.4byte	0x4a0
 3474 0b5b 05       		.uleb128 0x5
 3475 0b5c 03       		.byte	0x3
 3476 0b5d 00000000 		.4byte	alarmMeasure
 3477 0b61 24       		.uleb128 0x24
 3478 0b62 74010000 		.4byte	.LASF152
 3479 0b66 0C       		.byte	0xc
 3480 0b67 6F       		.byte	0x6f
 3481 0b68 81000000 		.4byte	0x81
 3482 0b6c 05       		.uleb128 0x5
 3483 0b6d 03       		.byte	0x3
 3484 0b6e 00000000 		.4byte	timeToMeasure
 3485 0b72 24       		.uleb128 0x24
 3486 0b73 CA020000 		.4byte	.LASF153
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 77


 3487 0b77 0C       		.byte	0xc
 3488 0b78 70       		.byte	0x70
 3489 0b79 A0040000 		.4byte	0x4a0
 3490 0b7d 05       		.uleb128 0x5
 3491 0b7e 03       		.byte	0x3
 3492 0b7f 00000000 		.4byte	alarmSync
 3493 0b83 24       		.uleb128 0x24
 3494 0b84 9A010000 		.4byte	.LASF154
 3495 0b88 0C       		.byte	0xc
 3496 0b89 71       		.byte	0x71
 3497 0b8a 81000000 		.4byte	0x81
 3498 0b8e 05       		.uleb128 0x5
 3499 0b8f 03       		.byte	0x3
 3500 0b90 00000000 		.4byte	timeToSync
 3501 0b94 24       		.uleb128 0x24
 3502 0b95 D0040000 		.4byte	.LASF155
 3503 0b99 0C       		.byte	0xc
 3504 0b9a 72       		.byte	0x72
 3505 0b9b 81000000 		.4byte	0x81
 3506 0b9f 05       		.uleb128 0x5
 3507 0ba0 03       		.byte	0x3
 3508 0ba1 00000000 		.4byte	timeToSycnRemoteParams
 3509 0ba5 25       		.uleb128 0x25
 3510 0ba6 68657900 		.ascii	"hey\000"
 3511 0baa 0C       		.byte	0xc
 3512 0bab 73       		.byte	0x73
 3513 0bac 81000000 		.4byte	0x81
 3514 0bb0 05       		.uleb128 0x5
 3515 0bb1 03       		.byte	0x3
 3516 0bb2 00000000 		.4byte	hey
 3517 0bb6 07       		.uleb128 0x7
 3518 0bb7 D7000000 		.4byte	0xd7
 3519 0bbb C60B0000 		.4byte	0xbc6
 3520 0bbf 08       		.uleb128 0x8
 3521 0bc0 E5000000 		.4byte	0xe5
 3522 0bc4 1D       		.byte	0x1d
 3523 0bc5 00       		.byte	0
 3524 0bc6 24       		.uleb128 0x24
 3525 0bc7 77050000 		.4byte	.LASF156
 3526 0bcb 01       		.byte	0x1
 3527 0bcc 1D       		.byte	0x1d
 3528 0bcd B60B0000 		.4byte	0xbb6
 3529 0bd1 05       		.uleb128 0x5
 3530 0bd2 03       		.byte	0x3
 3531 0bd3 00000000 		.4byte	Data_fileName
 3532 0bd7 24       		.uleb128 0x24
 3533 0bd8 3A030000 		.4byte	.LASF91
 3534 0bdc 01       		.byte	0x1
 3535 0bdd 1E       		.byte	0x1e
 3536 0bde 81000000 		.4byte	0x81
 3537 0be2 05       		.uleb128 0x5
 3538 0be3 03       		.byte	0x3
 3539 0be4 00000000 		.4byte	try_counter
 3540 0be8 00       		.byte	0
 3541              		.section	.debug_abbrev,"",%progbits
 3542              	.Ldebug_abbrev0:
 3543 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 78


 3544 0001 11       		.uleb128 0x11
 3545 0002 01       		.byte	0x1
 3546 0003 25       		.uleb128 0x25
 3547 0004 0E       		.uleb128 0xe
 3548 0005 13       		.uleb128 0x13
 3549 0006 0B       		.uleb128 0xb
 3550 0007 03       		.uleb128 0x3
 3551 0008 0E       		.uleb128 0xe
 3552 0009 1B       		.uleb128 0x1b
 3553 000a 0E       		.uleb128 0xe
 3554 000b 55       		.uleb128 0x55
 3555 000c 17       		.uleb128 0x17
 3556 000d 11       		.uleb128 0x11
 3557 000e 01       		.uleb128 0x1
 3558 000f 10       		.uleb128 0x10
 3559 0010 17       		.uleb128 0x17
 3560 0011 00       		.byte	0
 3561 0012 00       		.byte	0
 3562 0013 02       		.uleb128 0x2
 3563 0014 24       		.uleb128 0x24
 3564 0015 00       		.byte	0
 3565 0016 0B       		.uleb128 0xb
 3566 0017 0B       		.uleb128 0xb
 3567 0018 3E       		.uleb128 0x3e
 3568 0019 0B       		.uleb128 0xb
 3569 001a 03       		.uleb128 0x3
 3570 001b 0E       		.uleb128 0xe
 3571 001c 00       		.byte	0
 3572 001d 00       		.byte	0
 3573 001e 03       		.uleb128 0x3
 3574 001f 16       		.uleb128 0x16
 3575 0020 00       		.byte	0
 3576 0021 03       		.uleb128 0x3
 3577 0022 0E       		.uleb128 0xe
 3578 0023 3A       		.uleb128 0x3a
 3579 0024 0B       		.uleb128 0xb
 3580 0025 3B       		.uleb128 0x3b
 3581 0026 0B       		.uleb128 0xb
 3582 0027 49       		.uleb128 0x49
 3583 0028 13       		.uleb128 0x13
 3584 0029 00       		.byte	0
 3585 002a 00       		.byte	0
 3586 002b 04       		.uleb128 0x4
 3587 002c 24       		.uleb128 0x24
 3588 002d 00       		.byte	0
 3589 002e 0B       		.uleb128 0xb
 3590 002f 0B       		.uleb128 0xb
 3591 0030 3E       		.uleb128 0x3e
 3592 0031 0B       		.uleb128 0xb
 3593 0032 03       		.uleb128 0x3
 3594 0033 08       		.uleb128 0x8
 3595 0034 00       		.byte	0
 3596 0035 00       		.byte	0
 3597 0036 05       		.uleb128 0x5
 3598 0037 16       		.uleb128 0x16
 3599 0038 00       		.byte	0
 3600 0039 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 79


 3601 003a 0E       		.uleb128 0xe
 3602 003b 3A       		.uleb128 0x3a
 3603 003c 0B       		.uleb128 0xb
 3604 003d 3B       		.uleb128 0x3b
 3605 003e 05       		.uleb128 0x5
 3606 003f 49       		.uleb128 0x49
 3607 0040 13       		.uleb128 0x13
 3608 0041 00       		.byte	0
 3609 0042 00       		.byte	0
 3610 0043 06       		.uleb128 0x6
 3611 0044 0F       		.uleb128 0xf
 3612 0045 00       		.byte	0
 3613 0046 0B       		.uleb128 0xb
 3614 0047 0B       		.uleb128 0xb
 3615 0048 49       		.uleb128 0x49
 3616 0049 13       		.uleb128 0x13
 3617 004a 00       		.byte	0
 3618 004b 00       		.byte	0
 3619 004c 07       		.uleb128 0x7
 3620 004d 01       		.uleb128 0x1
 3621 004e 01       		.byte	0x1
 3622 004f 49       		.uleb128 0x49
 3623 0050 13       		.uleb128 0x13
 3624 0051 01       		.uleb128 0x1
 3625 0052 13       		.uleb128 0x13
 3626 0053 00       		.byte	0
 3627 0054 00       		.byte	0
 3628 0055 08       		.uleb128 0x8
 3629 0056 21       		.uleb128 0x21
 3630 0057 00       		.byte	0
 3631 0058 49       		.uleb128 0x49
 3632 0059 13       		.uleb128 0x13
 3633 005a 2F       		.uleb128 0x2f
 3634 005b 0B       		.uleb128 0xb
 3635 005c 00       		.byte	0
 3636 005d 00       		.byte	0
 3637 005e 09       		.uleb128 0x9
 3638 005f 13       		.uleb128 0x13
 3639 0060 01       		.byte	0x1
 3640 0061 0B       		.uleb128 0xb
 3641 0062 0B       		.uleb128 0xb
 3642 0063 3A       		.uleb128 0x3a
 3643 0064 0B       		.uleb128 0xb
 3644 0065 3B       		.uleb128 0x3b
 3645 0066 0B       		.uleb128 0xb
 3646 0067 01       		.uleb128 0x1
 3647 0068 13       		.uleb128 0x13
 3648 0069 00       		.byte	0
 3649 006a 00       		.byte	0
 3650 006b 0A       		.uleb128 0xa
 3651 006c 0D       		.uleb128 0xd
 3652 006d 00       		.byte	0
 3653 006e 03       		.uleb128 0x3
 3654 006f 08       		.uleb128 0x8
 3655 0070 3A       		.uleb128 0x3a
 3656 0071 0B       		.uleb128 0xb
 3657 0072 3B       		.uleb128 0x3b
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 80


 3658 0073 0B       		.uleb128 0xb
 3659 0074 49       		.uleb128 0x49
 3660 0075 13       		.uleb128 0x13
 3661 0076 38       		.uleb128 0x38
 3662 0077 0B       		.uleb128 0xb
 3663 0078 00       		.byte	0
 3664 0079 00       		.byte	0
 3665 007a 0B       		.uleb128 0xb
 3666 007b 0D       		.uleb128 0xd
 3667 007c 00       		.byte	0
 3668 007d 03       		.uleb128 0x3
 3669 007e 0E       		.uleb128 0xe
 3670 007f 3A       		.uleb128 0x3a
 3671 0080 0B       		.uleb128 0xb
 3672 0081 3B       		.uleb128 0x3b
 3673 0082 0B       		.uleb128 0xb
 3674 0083 49       		.uleb128 0x49
 3675 0084 13       		.uleb128 0x13
 3676 0085 38       		.uleb128 0x38
 3677 0086 0B       		.uleb128 0xb
 3678 0087 00       		.byte	0
 3679 0088 00       		.byte	0
 3680 0089 0C       		.uleb128 0xc
 3681 008a 35       		.uleb128 0x35
 3682 008b 00       		.byte	0
 3683 008c 49       		.uleb128 0x49
 3684 008d 13       		.uleb128 0x13
 3685 008e 00       		.byte	0
 3686 008f 00       		.byte	0
 3687 0090 0D       		.uleb128 0xd
 3688 0091 13       		.uleb128 0x13
 3689 0092 01       		.byte	0x1
 3690 0093 0B       		.uleb128 0xb
 3691 0094 05       		.uleb128 0x5
 3692 0095 3A       		.uleb128 0x3a
 3693 0096 0B       		.uleb128 0xb
 3694 0097 3B       		.uleb128 0x3b
 3695 0098 0B       		.uleb128 0xb
 3696 0099 01       		.uleb128 0x1
 3697 009a 13       		.uleb128 0x13
 3698 009b 00       		.byte	0
 3699 009c 00       		.byte	0
 3700 009d 0E       		.uleb128 0xe
 3701 009e 13       		.uleb128 0x13
 3702 009f 01       		.byte	0x1
 3703 00a0 03       		.uleb128 0x3
 3704 00a1 08       		.uleb128 0x8
 3705 00a2 0B       		.uleb128 0xb
 3706 00a3 0B       		.uleb128 0xb
 3707 00a4 3A       		.uleb128 0x3a
 3708 00a5 0B       		.uleb128 0xb
 3709 00a6 3B       		.uleb128 0x3b
 3710 00a7 0B       		.uleb128 0xb
 3711 00a8 01       		.uleb128 0x1
 3712 00a9 13       		.uleb128 0x13
 3713 00aa 00       		.byte	0
 3714 00ab 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 81


 3715 00ac 0F       		.uleb128 0xf
 3716 00ad 2E       		.uleb128 0x2e
 3717 00ae 00       		.byte	0
 3718 00af 3F       		.uleb128 0x3f
 3719 00b0 19       		.uleb128 0x19
 3720 00b1 03       		.uleb128 0x3
 3721 00b2 0E       		.uleb128 0xe
 3722 00b3 3A       		.uleb128 0x3a
 3723 00b4 0B       		.uleb128 0xb
 3724 00b5 3B       		.uleb128 0x3b
 3725 00b6 0B       		.uleb128 0xb
 3726 00b7 27       		.uleb128 0x27
 3727 00b8 19       		.uleb128 0x19
 3728 00b9 11       		.uleb128 0x11
 3729 00ba 01       		.uleb128 0x1
 3730 00bb 12       		.uleb128 0x12
 3731 00bc 06       		.uleb128 0x6
 3732 00bd 40       		.uleb128 0x40
 3733 00be 18       		.uleb128 0x18
 3734 00bf 9642     		.uleb128 0x2116
 3735 00c1 19       		.uleb128 0x19
 3736 00c2 00       		.byte	0
 3737 00c3 00       		.byte	0
 3738 00c4 10       		.uleb128 0x10
 3739 00c5 2E       		.uleb128 0x2e
 3740 00c6 01       		.byte	0x1
 3741 00c7 3F       		.uleb128 0x3f
 3742 00c8 19       		.uleb128 0x19
 3743 00c9 03       		.uleb128 0x3
 3744 00ca 0E       		.uleb128 0xe
 3745 00cb 3A       		.uleb128 0x3a
 3746 00cc 0B       		.uleb128 0xb
 3747 00cd 3B       		.uleb128 0x3b
 3748 00ce 0B       		.uleb128 0xb
 3749 00cf 11       		.uleb128 0x11
 3750 00d0 01       		.uleb128 0x1
 3751 00d1 12       		.uleb128 0x12
 3752 00d2 06       		.uleb128 0x6
 3753 00d3 40       		.uleb128 0x40
 3754 00d4 18       		.uleb128 0x18
 3755 00d5 9642     		.uleb128 0x2116
 3756 00d7 19       		.uleb128 0x19
 3757 00d8 01       		.uleb128 0x1
 3758 00d9 13       		.uleb128 0x13
 3759 00da 00       		.byte	0
 3760 00db 00       		.byte	0
 3761 00dc 11       		.uleb128 0x11
 3762 00dd 34       		.uleb128 0x34
 3763 00de 00       		.byte	0
 3764 00df 03       		.uleb128 0x3
 3765 00e0 0E       		.uleb128 0xe
 3766 00e1 3A       		.uleb128 0x3a
 3767 00e2 0B       		.uleb128 0xb
 3768 00e3 3B       		.uleb128 0x3b
 3769 00e4 0B       		.uleb128 0xb
 3770 00e5 49       		.uleb128 0x49
 3771 00e6 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 82


 3772 00e7 02       		.uleb128 0x2
 3773 00e8 18       		.uleb128 0x18
 3774 00e9 00       		.byte	0
 3775 00ea 00       		.byte	0
 3776 00eb 12       		.uleb128 0x12
 3777 00ec 2E       		.uleb128 0x2e
 3778 00ed 01       		.byte	0x1
 3779 00ee 3F       		.uleb128 0x3f
 3780 00ef 19       		.uleb128 0x19
 3781 00f0 03       		.uleb128 0x3
 3782 00f1 0E       		.uleb128 0xe
 3783 00f2 3A       		.uleb128 0x3a
 3784 00f3 0B       		.uleb128 0xb
 3785 00f4 3B       		.uleb128 0x3b
 3786 00f5 0B       		.uleb128 0xb
 3787 00f6 49       		.uleb128 0x49
 3788 00f7 13       		.uleb128 0x13
 3789 00f8 11       		.uleb128 0x11
 3790 00f9 01       		.uleb128 0x1
 3791 00fa 12       		.uleb128 0x12
 3792 00fb 06       		.uleb128 0x6
 3793 00fc 40       		.uleb128 0x40
 3794 00fd 18       		.uleb128 0x18
 3795 00fe 9642     		.uleb128 0x2116
 3796 0100 19       		.uleb128 0x19
 3797 0101 01       		.uleb128 0x1
 3798 0102 13       		.uleb128 0x13
 3799 0103 00       		.byte	0
 3800 0104 00       		.byte	0
 3801 0105 13       		.uleb128 0x13
 3802 0106 2E       		.uleb128 0x2e
 3803 0107 00       		.byte	0
 3804 0108 3F       		.uleb128 0x3f
 3805 0109 19       		.uleb128 0x19
 3806 010a 03       		.uleb128 0x3
 3807 010b 0E       		.uleb128 0xe
 3808 010c 3A       		.uleb128 0x3a
 3809 010d 0B       		.uleb128 0xb
 3810 010e 3B       		.uleb128 0x3b
 3811 010f 0B       		.uleb128 0xb
 3812 0110 11       		.uleb128 0x11
 3813 0111 01       		.uleb128 0x1
 3814 0112 12       		.uleb128 0x12
 3815 0113 06       		.uleb128 0x6
 3816 0114 40       		.uleb128 0x40
 3817 0115 18       		.uleb128 0x18
 3818 0116 9642     		.uleb128 0x2116
 3819 0118 19       		.uleb128 0x19
 3820 0119 00       		.byte	0
 3821 011a 00       		.byte	0
 3822 011b 14       		.uleb128 0x14
 3823 011c 2E       		.uleb128 0x2e
 3824 011d 01       		.byte	0x1
 3825 011e 3F       		.uleb128 0x3f
 3826 011f 19       		.uleb128 0x19
 3827 0120 03       		.uleb128 0x3
 3828 0121 0E       		.uleb128 0xe
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 83


 3829 0122 3A       		.uleb128 0x3a
 3830 0123 0B       		.uleb128 0xb
 3831 0124 3B       		.uleb128 0x3b
 3832 0125 0B       		.uleb128 0xb
 3833 0126 27       		.uleb128 0x27
 3834 0127 19       		.uleb128 0x19
 3835 0128 11       		.uleb128 0x11
 3836 0129 01       		.uleb128 0x1
 3837 012a 12       		.uleb128 0x12
 3838 012b 06       		.uleb128 0x6
 3839 012c 40       		.uleb128 0x40
 3840 012d 18       		.uleb128 0x18
 3841 012e 9642     		.uleb128 0x2116
 3842 0130 19       		.uleb128 0x19
 3843 0131 01       		.uleb128 0x1
 3844 0132 13       		.uleb128 0x13
 3845 0133 00       		.byte	0
 3846 0134 00       		.byte	0
 3847 0135 15       		.uleb128 0x15
 3848 0136 05       		.uleb128 0x5
 3849 0137 00       		.byte	0
 3850 0138 03       		.uleb128 0x3
 3851 0139 0E       		.uleb128 0xe
 3852 013a 3A       		.uleb128 0x3a
 3853 013b 0B       		.uleb128 0xb
 3854 013c 3B       		.uleb128 0x3b
 3855 013d 0B       		.uleb128 0xb
 3856 013e 49       		.uleb128 0x49
 3857 013f 13       		.uleb128 0x13
 3858 0140 02       		.uleb128 0x2
 3859 0141 18       		.uleb128 0x18
 3860 0142 00       		.byte	0
 3861 0143 00       		.byte	0
 3862 0144 16       		.uleb128 0x16
 3863 0145 2E       		.uleb128 0x2e
 3864 0146 01       		.byte	0x1
 3865 0147 3F       		.uleb128 0x3f
 3866 0148 19       		.uleb128 0x19
 3867 0149 03       		.uleb128 0x3
 3868 014a 0E       		.uleb128 0xe
 3869 014b 3A       		.uleb128 0x3a
 3870 014c 0B       		.uleb128 0xb
 3871 014d 3B       		.uleb128 0x3b
 3872 014e 0B       		.uleb128 0xb
 3873 014f 27       		.uleb128 0x27
 3874 0150 19       		.uleb128 0x19
 3875 0151 49       		.uleb128 0x49
 3876 0152 13       		.uleb128 0x13
 3877 0153 11       		.uleb128 0x11
 3878 0154 01       		.uleb128 0x1
 3879 0155 12       		.uleb128 0x12
 3880 0156 06       		.uleb128 0x6
 3881 0157 40       		.uleb128 0x40
 3882 0158 18       		.uleb128 0x18
 3883 0159 9642     		.uleb128 0x2116
 3884 015b 19       		.uleb128 0x19
 3885 015c 01       		.uleb128 0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 84


 3886 015d 13       		.uleb128 0x13
 3887 015e 00       		.byte	0
 3888 015f 00       		.byte	0
 3889 0160 17       		.uleb128 0x17
 3890 0161 2E       		.uleb128 0x2e
 3891 0162 01       		.byte	0x1
 3892 0163 3F       		.uleb128 0x3f
 3893 0164 19       		.uleb128 0x19
 3894 0165 03       		.uleb128 0x3
 3895 0166 0E       		.uleb128 0xe
 3896 0167 3A       		.uleb128 0x3a
 3897 0168 0B       		.uleb128 0xb
 3898 0169 3B       		.uleb128 0x3b
 3899 016a 0B       		.uleb128 0xb
 3900 016b 27       		.uleb128 0x27
 3901 016c 19       		.uleb128 0x19
 3902 016d 11       		.uleb128 0x11
 3903 016e 01       		.uleb128 0x1
 3904 016f 12       		.uleb128 0x12
 3905 0170 06       		.uleb128 0x6
 3906 0171 40       		.uleb128 0x40
 3907 0172 18       		.uleb128 0x18
 3908 0173 9742     		.uleb128 0x2117
 3909 0175 19       		.uleb128 0x19
 3910 0176 01       		.uleb128 0x1
 3911 0177 13       		.uleb128 0x13
 3912 0178 00       		.byte	0
 3913 0179 00       		.byte	0
 3914 017a 18       		.uleb128 0x18
 3915 017b 2E       		.uleb128 0x2e
 3916 017c 01       		.byte	0x1
 3917 017d 3F       		.uleb128 0x3f
 3918 017e 19       		.uleb128 0x19
 3919 017f 03       		.uleb128 0x3
 3920 0180 0E       		.uleb128 0xe
 3921 0181 3A       		.uleb128 0x3a
 3922 0182 0B       		.uleb128 0xb
 3923 0183 3B       		.uleb128 0x3b
 3924 0184 0B       		.uleb128 0xb
 3925 0185 27       		.uleb128 0x27
 3926 0186 19       		.uleb128 0x19
 3927 0187 49       		.uleb128 0x49
 3928 0188 13       		.uleb128 0x13
 3929 0189 11       		.uleb128 0x11
 3930 018a 01       		.uleb128 0x1
 3931 018b 12       		.uleb128 0x12
 3932 018c 06       		.uleb128 0x6
 3933 018d 40       		.uleb128 0x40
 3934 018e 18       		.uleb128 0x18
 3935 018f 9742     		.uleb128 0x2117
 3936 0191 19       		.uleb128 0x19
 3937 0192 01       		.uleb128 0x1
 3938 0193 13       		.uleb128 0x13
 3939 0194 00       		.byte	0
 3940 0195 00       		.byte	0
 3941 0196 19       		.uleb128 0x19
 3942 0197 2E       		.uleb128 0x2e
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 85


 3943 0198 01       		.byte	0x1
 3944 0199 3F       		.uleb128 0x3f
 3945 019a 19       		.uleb128 0x19
 3946 019b 03       		.uleb128 0x3
 3947 019c 0E       		.uleb128 0xe
 3948 019d 3A       		.uleb128 0x3a
 3949 019e 0B       		.uleb128 0xb
 3950 019f 3B       		.uleb128 0x3b
 3951 01a0 05       		.uleb128 0x5
 3952 01a1 11       		.uleb128 0x11
 3953 01a2 01       		.uleb128 0x1
 3954 01a3 12       		.uleb128 0x12
 3955 01a4 06       		.uleb128 0x6
 3956 01a5 40       		.uleb128 0x40
 3957 01a6 18       		.uleb128 0x18
 3958 01a7 9642     		.uleb128 0x2116
 3959 01a9 19       		.uleb128 0x19
 3960 01aa 01       		.uleb128 0x1
 3961 01ab 13       		.uleb128 0x13
 3962 01ac 00       		.byte	0
 3963 01ad 00       		.byte	0
 3964 01ae 1A       		.uleb128 0x1a
 3965 01af 34       		.uleb128 0x34
 3966 01b0 00       		.byte	0
 3967 01b1 03       		.uleb128 0x3
 3968 01b2 0E       		.uleb128 0xe
 3969 01b3 3A       		.uleb128 0x3a
 3970 01b4 0B       		.uleb128 0xb
 3971 01b5 3B       		.uleb128 0x3b
 3972 01b6 05       		.uleb128 0x5
 3973 01b7 49       		.uleb128 0x49
 3974 01b8 13       		.uleb128 0x13
 3975 01b9 02       		.uleb128 0x2
 3976 01ba 18       		.uleb128 0x18
 3977 01bb 00       		.byte	0
 3978 01bc 00       		.byte	0
 3979 01bd 1B       		.uleb128 0x1b
 3980 01be 2E       		.uleb128 0x2e
 3981 01bf 00       		.byte	0
 3982 01c0 3F       		.uleb128 0x3f
 3983 01c1 19       		.uleb128 0x19
 3984 01c2 03       		.uleb128 0x3
 3985 01c3 0E       		.uleb128 0xe
 3986 01c4 3A       		.uleb128 0x3a
 3987 01c5 0B       		.uleb128 0xb
 3988 01c6 3B       		.uleb128 0x3b
 3989 01c7 05       		.uleb128 0x5
 3990 01c8 27       		.uleb128 0x27
 3991 01c9 19       		.uleb128 0x19
 3992 01ca 49       		.uleb128 0x49
 3993 01cb 13       		.uleb128 0x13
 3994 01cc 11       		.uleb128 0x11
 3995 01cd 01       		.uleb128 0x1
 3996 01ce 12       		.uleb128 0x12
 3997 01cf 06       		.uleb128 0x6
 3998 01d0 40       		.uleb128 0x40
 3999 01d1 18       		.uleb128 0x18
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 86


 4000 01d2 9642     		.uleb128 0x2116
 4001 01d4 19       		.uleb128 0x19
 4002 01d5 00       		.byte	0
 4003 01d6 00       		.byte	0
 4004 01d7 1C       		.uleb128 0x1c
 4005 01d8 2E       		.uleb128 0x2e
 4006 01d9 01       		.byte	0x1
 4007 01da 3F       		.uleb128 0x3f
 4008 01db 19       		.uleb128 0x19
 4009 01dc 03       		.uleb128 0x3
 4010 01dd 0E       		.uleb128 0xe
 4011 01de 3A       		.uleb128 0x3a
 4012 01df 0B       		.uleb128 0xb
 4013 01e0 3B       		.uleb128 0x3b
 4014 01e1 05       		.uleb128 0x5
 4015 01e2 49       		.uleb128 0x49
 4016 01e3 13       		.uleb128 0x13
 4017 01e4 11       		.uleb128 0x11
 4018 01e5 01       		.uleb128 0x1
 4019 01e6 12       		.uleb128 0x12
 4020 01e7 06       		.uleb128 0x6
 4021 01e8 40       		.uleb128 0x40
 4022 01e9 18       		.uleb128 0x18
 4023 01ea 9642     		.uleb128 0x2116
 4024 01ec 19       		.uleb128 0x19
 4025 01ed 01       		.uleb128 0x1
 4026 01ee 13       		.uleb128 0x13
 4027 01ef 00       		.byte	0
 4028 01f0 00       		.byte	0
 4029 01f1 1D       		.uleb128 0x1d
 4030 01f2 0B       		.uleb128 0xb
 4031 01f3 01       		.byte	0x1
 4032 01f4 11       		.uleb128 0x11
 4033 01f5 01       		.uleb128 0x1
 4034 01f6 12       		.uleb128 0x12
 4035 01f7 06       		.uleb128 0x6
 4036 01f8 00       		.byte	0
 4037 01f9 00       		.byte	0
 4038 01fa 1E       		.uleb128 0x1e
 4039 01fb 0B       		.uleb128 0xb
 4040 01fc 01       		.byte	0x1
 4041 01fd 11       		.uleb128 0x11
 4042 01fe 01       		.uleb128 0x1
 4043 01ff 12       		.uleb128 0x12
 4044 0200 06       		.uleb128 0x6
 4045 0201 01       		.uleb128 0x1
 4046 0202 13       		.uleb128 0x13
 4047 0203 00       		.byte	0
 4048 0204 00       		.byte	0
 4049 0205 1F       		.uleb128 0x1f
 4050 0206 21       		.uleb128 0x21
 4051 0207 00       		.byte	0
 4052 0208 49       		.uleb128 0x49
 4053 0209 13       		.uleb128 0x13
 4054 020a 2F       		.uleb128 0x2f
 4055 020b 05       		.uleb128 0x5
 4056 020c 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 87


 4057 020d 00       		.byte	0
 4058 020e 20       		.uleb128 0x20
 4059 020f 2E       		.uleb128 0x2e
 4060 0210 01       		.byte	0x1
 4061 0211 3F       		.uleb128 0x3f
 4062 0212 19       		.uleb128 0x19
 4063 0213 03       		.uleb128 0x3
 4064 0214 0E       		.uleb128 0xe
 4065 0215 3A       		.uleb128 0x3a
 4066 0216 0B       		.uleb128 0xb
 4067 0217 3B       		.uleb128 0x3b
 4068 0218 05       		.uleb128 0x5
 4069 0219 27       		.uleb128 0x27
 4070 021a 19       		.uleb128 0x19
 4071 021b 49       		.uleb128 0x49
 4072 021c 13       		.uleb128 0x13
 4073 021d 11       		.uleb128 0x11
 4074 021e 01       		.uleb128 0x1
 4075 021f 12       		.uleb128 0x12
 4076 0220 06       		.uleb128 0x6
 4077 0221 40       		.uleb128 0x40
 4078 0222 18       		.uleb128 0x18
 4079 0223 9642     		.uleb128 0x2116
 4080 0225 19       		.uleb128 0x19
 4081 0226 01       		.uleb128 0x1
 4082 0227 13       		.uleb128 0x13
 4083 0228 00       		.byte	0
 4084 0229 00       		.byte	0
 4085 022a 21       		.uleb128 0x21
 4086 022b 05       		.uleb128 0x5
 4087 022c 00       		.byte	0
 4088 022d 03       		.uleb128 0x3
 4089 022e 0E       		.uleb128 0xe
 4090 022f 3A       		.uleb128 0x3a
 4091 0230 0B       		.uleb128 0xb
 4092 0231 3B       		.uleb128 0x3b
 4093 0232 05       		.uleb128 0x5
 4094 0233 49       		.uleb128 0x49
 4095 0234 13       		.uleb128 0x13
 4096 0235 02       		.uleb128 0x2
 4097 0236 18       		.uleb128 0x18
 4098 0237 00       		.byte	0
 4099 0238 00       		.byte	0
 4100 0239 22       		.uleb128 0x22
 4101 023a 34       		.uleb128 0x34
 4102 023b 00       		.byte	0
 4103 023c 03       		.uleb128 0x3
 4104 023d 08       		.uleb128 0x8
 4105 023e 3A       		.uleb128 0x3a
 4106 023f 0B       		.uleb128 0xb
 4107 0240 3B       		.uleb128 0x3b
 4108 0241 05       		.uleb128 0x5
 4109 0242 49       		.uleb128 0x49
 4110 0243 13       		.uleb128 0x13
 4111 0244 02       		.uleb128 0x2
 4112 0245 18       		.uleb128 0x18
 4113 0246 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 88


 4114 0247 00       		.byte	0
 4115 0248 23       		.uleb128 0x23
 4116 0249 34       		.uleb128 0x34
 4117 024a 00       		.byte	0
 4118 024b 03       		.uleb128 0x3
 4119 024c 0E       		.uleb128 0xe
 4120 024d 3A       		.uleb128 0x3a
 4121 024e 0B       		.uleb128 0xb
 4122 024f 3B       		.uleb128 0x3b
 4123 0250 05       		.uleb128 0x5
 4124 0251 49       		.uleb128 0x49
 4125 0252 13       		.uleb128 0x13
 4126 0253 3F       		.uleb128 0x3f
 4127 0254 19       		.uleb128 0x19
 4128 0255 3C       		.uleb128 0x3c
 4129 0256 19       		.uleb128 0x19
 4130 0257 00       		.byte	0
 4131 0258 00       		.byte	0
 4132 0259 24       		.uleb128 0x24
 4133 025a 34       		.uleb128 0x34
 4134 025b 00       		.byte	0
 4135 025c 03       		.uleb128 0x3
 4136 025d 0E       		.uleb128 0xe
 4137 025e 3A       		.uleb128 0x3a
 4138 025f 0B       		.uleb128 0xb
 4139 0260 3B       		.uleb128 0x3b
 4140 0261 0B       		.uleb128 0xb
 4141 0262 49       		.uleb128 0x49
 4142 0263 13       		.uleb128 0x13
 4143 0264 3F       		.uleb128 0x3f
 4144 0265 19       		.uleb128 0x19
 4145 0266 02       		.uleb128 0x2
 4146 0267 18       		.uleb128 0x18
 4147 0268 00       		.byte	0
 4148 0269 00       		.byte	0
 4149 026a 25       		.uleb128 0x25
 4150 026b 34       		.uleb128 0x34
 4151 026c 00       		.byte	0
 4152 026d 03       		.uleb128 0x3
 4153 026e 08       		.uleb128 0x8
 4154 026f 3A       		.uleb128 0x3a
 4155 0270 0B       		.uleb128 0xb
 4156 0271 3B       		.uleb128 0x3b
 4157 0272 0B       		.uleb128 0xb
 4158 0273 49       		.uleb128 0x49
 4159 0274 13       		.uleb128 0x13
 4160 0275 3F       		.uleb128 0x3f
 4161 0276 19       		.uleb128 0x19
 4162 0277 02       		.uleb128 0x2
 4163 0278 18       		.uleb128 0x18
 4164 0279 00       		.byte	0
 4165 027a 00       		.byte	0
 4166 027b 00       		.byte	0
 4167              		.section	.debug_aranges,"",%progbits
 4168 0000 8C000000 		.4byte	0x8c
 4169 0004 0200     		.2byte	0x2
 4170 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 89


 4171 000a 04       		.byte	0x4
 4172 000b 00       		.byte	0
 4173 000c 0000     		.2byte	0
 4174 000e 0000     		.2byte	0
 4175 0010 00000000 		.4byte	.LFB64
 4176 0014 0C000000 		.4byte	.LFE64-.LFB64
 4177 0018 00000000 		.4byte	.LFB65
 4178 001c 2C010000 		.4byte	.LFE65-.LFB65
 4179 0020 00000000 		.4byte	.LFB66
 4180 0024 64000000 		.4byte	.LFE66-.LFB66
 4181 0028 00000000 		.4byte	.LFB67
 4182 002c 2A000000 		.4byte	.LFE67-.LFB67
 4183 0030 00000000 		.4byte	.LFB68
 4184 0034 50000000 		.4byte	.LFE68-.LFB68
 4185 0038 00000000 		.4byte	.LFB69
 4186 003c 48000000 		.4byte	.LFE69-.LFB69
 4187 0040 00000000 		.4byte	.LFB70
 4188 0044 1E000000 		.4byte	.LFE70-.LFB70
 4189 0048 00000000 		.4byte	.LFB71
 4190 004c 46000000 		.4byte	.LFE71-.LFB71
 4191 0050 00000000 		.4byte	.LFB72
 4192 0054 E0000000 		.4byte	.LFE72-.LFB72
 4193 0058 00000000 		.4byte	.LFB73
 4194 005c 1E000000 		.4byte	.LFE73-.LFB73
 4195 0060 00000000 		.4byte	.LFB74
 4196 0064 30040000 		.4byte	.LFE74-.LFB74
 4197 0068 00000000 		.4byte	.LFB75
 4198 006c 44000000 		.4byte	.LFE75-.LFB75
 4199 0070 00000000 		.4byte	.LFB76
 4200 0074 74020000 		.4byte	.LFE76-.LFB76
 4201 0078 00000000 		.4byte	.LFB77
 4202 007c 74000000 		.4byte	.LFE77-.LFB77
 4203 0080 00000000 		.4byte	.LFB78
 4204 0084 38010000 		.4byte	.LFE78-.LFB78
 4205 0088 00000000 		.4byte	0
 4206 008c 00000000 		.4byte	0
 4207              		.section	.debug_ranges,"",%progbits
 4208              	.Ldebug_ranges0:
 4209 0000 00000000 		.4byte	.LFB64
 4210 0004 0C000000 		.4byte	.LFE64
 4211 0008 00000000 		.4byte	.LFB65
 4212 000c 2C010000 		.4byte	.LFE65
 4213 0010 00000000 		.4byte	.LFB66
 4214 0014 64000000 		.4byte	.LFE66
 4215 0018 00000000 		.4byte	.LFB67
 4216 001c 2A000000 		.4byte	.LFE67
 4217 0020 00000000 		.4byte	.LFB68
 4218 0024 50000000 		.4byte	.LFE68
 4219 0028 00000000 		.4byte	.LFB69
 4220 002c 48000000 		.4byte	.LFE69
 4221 0030 00000000 		.4byte	.LFB70
 4222 0034 1E000000 		.4byte	.LFE70
 4223 0038 00000000 		.4byte	.LFB71
 4224 003c 46000000 		.4byte	.LFE71
 4225 0040 00000000 		.4byte	.LFB72
 4226 0044 E0000000 		.4byte	.LFE72
 4227 0048 00000000 		.4byte	.LFB73
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 90


 4228 004c 1E000000 		.4byte	.LFE73
 4229 0050 00000000 		.4byte	.LFB74
 4230 0054 30040000 		.4byte	.LFE74
 4231 0058 00000000 		.4byte	.LFB75
 4232 005c 44000000 		.4byte	.LFE75
 4233 0060 00000000 		.4byte	.LFB76
 4234 0064 74020000 		.4byte	.LFE76
 4235 0068 00000000 		.4byte	.LFB77
 4236 006c 74000000 		.4byte	.LFE77
 4237 0070 00000000 		.4byte	.LFB78
 4238 0074 38010000 		.4byte	.LFE78
 4239 0078 00000000 		.4byte	0
 4240 007c 00000000 		.4byte	0
 4241              		.section	.debug_line,"",%progbits
 4242              	.Ldebug_line0:
 4243 0000 1D040000 		.section	.debug_str,"MS",%progbits,1
 4243      02001B02 
 4243      00000201 
 4243      FB0E0D00 
 4243      01010101 
 4244              	.LASF107:
 4245 0000 745F6D6F 		.ascii	"t_modem\000"
 4245      64656D00 
 4246              	.LASF12:
 4247 0008 75696E74 		.ascii	"uint16\000"
 4247      313600
 4248              	.LASF49:
 4249 000f 746D5F68 		.ascii	"tm_hour\000"
 4249      6F757200 
 4250              	.LASF36:
 4251 0017 6E756D5F 		.ascii	"num_invalid_readings\000"
 4251      696E7661 
 4251      6C69645F 
 4251      72656164 
 4251      696E6773 
 4252              	.LASF138:
 4253 002c 62756666 		.ascii	"buffer_overflow\000"
 4253      65725F6F 
 4253      76657266 
 4253      6C6F7700 
 4254              	.LASF136:
 4255 003c 66696C65 		.ascii	"fileName\000"
 4255      4E616D65 
 4255      00
 4256              	.LASF0:
 4257 0045 7369676E 		.ascii	"signed char\000"
 4257      65642063 
 4257      68617200 
 4258              	.LASF81:
 4259 0051 636F756E 		.ascii	"countDownResetCondition\000"
 4259      74446F77 
 4259      6E526573 
 4259      6574436F 
 4259      6E646974 
 4260              	.LASF160:
 4261 0069 57616B65 		.ascii	"Wakeup_ISR\000"
 4261      75705F49 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 91


 4261      535200
 4262              	.LASF157:
 4263 0074 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4263      43313120 
 4263      352E342E 
 4263      31203230 
 4263      31363036 
 4264 00a7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4264      20726576 
 4264      6973696F 
 4264      6E203233 
 4264      37373135 
 4265 00da 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4265      66756E63 
 4265      74696F6E 
 4265      2D736563 
 4265      74696F6E 
 4266              	.LASF26:
 4267 0102 4D6F6E74 		.ascii	"Month\000"
 4267      6800
 4268              	.LASF7:
 4269 0108 6C6F6E67 		.ascii	"long long unsigned int\000"
 4269      206C6F6E 
 4269      6720756E 
 4269      7369676E 
 4269      65642069 
 4270              	.LASF22:
 4271 011f 486F7572 		.ascii	"Hour\000"
 4271      00
 4272              	.LASF142:
 4273 0124 6D6F6465 		.ascii	"modem_state\000"
 4273      6D5F7374 
 4273      61746500 
 4274              	.LASF151:
 4275 0130 616C6172 		.ascii	"alarmMeasure\000"
 4275      6D4D6561 
 4275      73757265 
 4275      00
 4276              	.LASF137:
 4277 013d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4277      52784275 
 4277      66666572 
 4277      00
 4278              	.LASF104:
 4279 014a 745F6C65 		.ascii	"t_level_sensor\000"
 4279      76656C5F 
 4279      73656E73 
 4279      6F7200
 4280              	.LASF6:
 4281 0159 6C6F6E67 		.ascii	"long long int\000"
 4281      206C6F6E 
 4281      6720696E 
 4281      7400
 4282              	.LASF115:
 4283 0167 7061636B 		.ascii	"packets\000"
 4283      65747300 
 4284              	.LASF65:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 92


 4285 016f 65636E6F 		.ascii	"ecno\000"
 4285      00
 4286              	.LASF152:
 4287 0174 74696D65 		.ascii	"timeToMeasure\000"
 4287      546F4D65 
 4287      61737572 
 4287      6500
 4288              	.LASF68:
 4289 0182 74696D65 		.ascii	"time_to_network_connect\000"
 4289      5F746F5F 
 4289      6E657477 
 4289      6F726B5F 
 4289      636F6E6E 
 4290              	.LASF154:
 4291 019a 74696D65 		.ascii	"timeToSync\000"
 4291      546F5379 
 4291      6E6300
 4292              	.LASF39:
 4293 01a5 766F6C74 		.ascii	"voltage_solar\000"
 4293      6167655F 
 4293      736F6C61 
 4293      7200
 4294              	.LASF40:
 4295 01b3 766F6C74 		.ascii	"voltage_charge_current\000"
 4295      6167655F 
 4295      63686172 
 4295      67655F63 
 4295      75727265 
 4296              	.LASF135:
 4297 01ca 75706772 		.ascii	"upgrade_status\000"
 4297      6164655F 
 4297      73746174 
 4297      757300
 4298              	.LASF118:
 4299 01d9 635F6461 		.ascii	"c_data_count_sent\000"
 4299      74615F63 
 4299      6F756E74 
 4299      5F73656E 
 4299      7400
 4300              	.LASF62:
 4301 01eb 6D6F6465 		.ascii	"modem_info_t\000"
 4301      6D5F696E 
 4301      666F5F74 
 4301      00
 4302              	.LASF63:
 4303 01f8 72786C65 		.ascii	"rxlev\000"
 4303      7600
 4304              	.LASF4:
 4305 01fe 6C6F6E67 		.ascii	"long int\000"
 4305      20696E74 
 4305      00
 4306              	.LASF69:
 4307 0207 74696D65 		.ascii	"time_to_acquire_ip\000"
 4307      5F746F5F 
 4307      61637175 
 4307      6972655F 
 4307      697000
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 93


 4308              	.LASF82:
 4309 021a 616C6172 		.ascii	"alarm\000"
 4309      6D00
 4310              	.LASF11:
 4311 0220 75696E74 		.ascii	"uint8\000"
 4311      3800
 4312              	.LASF110:
 4313 0226 635F7472 		.ascii	"c_try_counter\000"
 4313      795F636F 
 4313      756E7465 
 4313      7200
 4314              	.LASF121:
 4315 0234 73656E64 		.ascii	"send_time\000"
 4315      5F74696D 
 4315      6500
 4316              	.LASF16:
 4317 023e 696E7433 		.ascii	"int32\000"
 4317      3200
 4318              	.LASF71:
 4319 0244 6E6F6465 		.ascii	"node_type\000"
 4319      5F747970 
 4319      6500
 4320              	.LASF108:
 4321 024e 73796E63 		.ascii	"syncData\000"
 4321      44617461 
 4321      00
 4322              	.LASF116:
 4323 0257 6E657477 		.ascii	"network_time\000"
 4323      6F726B5F 
 4323      74696D65 
 4323      00
 4324              	.LASF13:
 4325 0264 75696E74 		.ascii	"uint32\000"
 4325      333200
 4326              	.LASF60:
 4327 026b 6D6F6465 		.ascii	"model_id\000"
 4327      6C5F6964 
 4327      00
 4328              	.LASF33:
 4329 0274 616C6C5F 		.ascii	"all_level_readings\000"
 4329      6C657665 
 4329      6C5F7265 
 4329      6164696E 
 4329      677300
 4330              	.LASF78:
 4331 0287 636F756E 		.ascii	"countDownValue\000"
 4331      74446F77 
 4331      6E56616C 
 4331      756500
 4332              	.LASF131:
 4333 0296 75706772 		.ascii	"upgraded\000"
 4333      61646564 
 4333      00
 4334              	.LASF51:
 4335 029f 746D5F6D 		.ascii	"tm_mon\000"
 4335      6F6E00
 4336              	.LASF75:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 94


 4337 02a6 64656275 		.ascii	"debug_level\000"
 4337      675F6C65 
 4337      76656C00 
 4338              	.LASF133:
 4339 02b2 706F7274 		.ascii	"port\000"
 4339      00
 4340              	.LASF56:
 4341 02b7 76616C75 		.ascii	"value\000"
 4341      6500
 4342              	.LASF132:
 4343 02bd 686F7374 		.ascii	"host\000"
 4343      00
 4344              	.LASF52:
 4345 02c2 746D5F79 		.ascii	"tm_year\000"
 4345      65617200 
 4346              	.LASF153:
 4347 02ca 616C6172 		.ascii	"alarmSync\000"
 4347      6D53796E 
 4347      6300
 4348              	.LASF8:
 4349 02d4 756E7369 		.ascii	"unsigned int\000"
 4349      676E6564 
 4349      20696E74 
 4349      00
 4350              	.LASF129:
 4351 02e1 73657454 		.ascii	"setTime\000"
 4351      696D6500 
 4352              	.LASF58:
 4353 02e9 6B65795F 		.ascii	"key_value_t\000"
 4353      76616C75 
 4353      655F7400 
 4354              	.LASF94:
 4355 02f5 41796F49 		.ascii	"AyoItsTime\000"
 4355      74735469 
 4355      6D6500
 4356              	.LASF35:
 4357 0300 6E756D5F 		.ascii	"num_valid_readings\000"
 4357      76616C69 
 4357      645F7265 
 4357      6164696E 
 4357      677300
 4358              	.LASF120:
 4359 0313 68747470 		.ascii	"http_chunk\000"
 4359      5F636875 
 4359      6E6B00
 4360              	.LASF126:
 4361 031e 6D5F766F 		.ascii	"m_voltage\000"
 4361      6C746167 
 4361      6500
 4362              	.LASF5:
 4363 0328 6C6F6E67 		.ascii	"long unsigned int\000"
 4363      20756E73 
 4363      69676E65 
 4363      6420696E 
 4363      7400
 4364              	.LASF91:
 4365 033a 7472795F 		.ascii	"try_counter\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 95


 4365      636F756E 
 4365      74657200 
 4366              	.LASF111:
 4367 0346 64617461 		.ascii	"data_count_desired\000"
 4367      5F636F75 
 4367      6E745F64 
 4367      65736972 
 4367      656400
 4368              	.LASF38:
 4369 0359 766F6C74 		.ascii	"voltage_battery\000"
 4369      6167655F 
 4369      62617474 
 4369      65727900 
 4370              	.LASF24:
 4371 0369 4461794F 		.ascii	"DayOfMonth\000"
 4371      664D6F6E 
 4371      746800
 4372              	.LASF124:
 4373 0374 6D616B65 		.ascii	"makeMeasurements\000"
 4373      4D656173 
 4373      7572656D 
 4373      656E7473 
 4373      00
 4374              	.LASF141:
 4375 0385 64617461 		.ascii	"data\000"
 4375      00
 4376              	.LASF87:
 4377 038a 65705F70 		.ascii	"ep_port\000"
 4377      6F727400 
 4378              	.LASF55:
 4379 0392 746D5F69 		.ascii	"tm_isdst\000"
 4379      73647374 
 4379      00
 4380              	.LASF83:
 4381 039b 6D6F6465 		.ascii	"modem_info\000"
 4381      6D5F696E 
 4381      666F00
 4382              	.LASF86:
 4383 03a6 65705F68 		.ascii	"ep_host\000"
 4383      6F737400 
 4384              	.LASF14:
 4385 03ae 696E7438 		.ascii	"int8\000"
 4385      00
 4386              	.LASF93:
 4387 03b3 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 4387      576F726B 
 4387      576F726B 
 4387      576F726B 
 4387      576F726B 
 4388              	.LASF112:
 4389 03cc 635F6461 		.ascii	"c_data_count_desired\000"
 4389      74615F63 
 4389      6F756E74 
 4389      5F646573 
 4389      69726564 
 4390              	.LASF106:
 4391 03e1 745F7364 		.ascii	"t_sd_card\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 96


 4391      5F636172 
 4391      6400
 4392              	.LASF2:
 4393 03eb 73686F72 		.ascii	"short int\000"
 4393      7420696E 
 4393      7400
 4394              	.LASF143:
 4395 03f5 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4395      6D5F7374 
 4395      6172745F 
 4395      74696D65 
 4395      5F737461 
 4396              	.LASF159:
 4397 040c 433A5C55 		.ascii	"C:\\Users\\klabu\\Desktop\\BrookeResearch\\notoriOS"
 4397      73657273 
 4397      5C6B6C61 
 4397      62755C44 
 4397      65736B74 
 4398 043a 5C6E6F74 		.ascii	"\\notoriOS.cydsn\000"
 4398      6F72694F 
 4398      532E6379 
 4398      64736E00 
 4399              	.LASF85:
 4400 044a 7379735F 		.ascii	"sys_info_t\000"
 4400      696E666F 
 4400      5F7400
 4401              	.LASF77:
 4402 0455 75706461 		.ascii	"updatable_parameters_t\000"
 4402      7461626C 
 4402      655F7061 
 4402      72616D65 
 4402      74657273 
 4403              	.LASF95:
 4404 046c 616C6172 		.ascii	"alarmType\000"
 4404      6D547970 
 4404      6500
 4405              	.LASF139:
 4406 0476 64617461 		.ascii	"dataPointsInStack\000"
 4406      506F696E 
 4406      7473496E 
 4406      53746163 
 4406      6B00
 4407              	.LASF48:
 4408 0488 746D5F6D 		.ascii	"tm_min\000"
 4408      696E00
 4409              	.LASF134:
 4410 048f 726F7574 		.ascii	"route\000"
 4410      6500
 4411              	.LASF96:
 4412 0495 616C6172 		.ascii	"alarmToBeUpdated\000"
 4412      6D546F42 
 4412      65557064 
 4412      61746564 
 4412      00
 4413              	.LASF21:
 4414 04a6 73697A65 		.ascii	"sizetype\000"
 4414      74797065 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 97


 4414      00
 4415              	.LASF54:
 4416 04af 746D5F79 		.ascii	"tm_yday\000"
 4416      64617900 
 4417              	.LASF88:
 4418 04b7 7379735F 		.ascii	"sys_settings_t\000"
 4418      73657474 
 4418      696E6773 
 4418      5F7400
 4419              	.LASF130:
 4420 04c6 6C6F6361 		.ascii	"localTime\000"
 4420      6C54696D 
 4420      6500
 4421              	.LASF155:
 4422 04d0 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 4422      546F5379 
 4422      636E5265 
 4422      6D6F7465 
 4422      50617261 
 4423              	.LASF57:
 4424 04e7 74696D65 		.ascii	"timeStamp\000"
 4424      5374616D 
 4424      7000
 4425              	.LASF28:
 4426 04f1 5254435F 		.ascii	"RTC_TIME_DATE\000"
 4426      54494D45 
 4426      5F444154 
 4426      4500
 4427              	.LASF145:
 4428 04ff 75706461 		.ascii	"updatable_parameters\000"
 4428      7461626C 
 4428      655F7061 
 4428      72616D65 
 4428      74657273 
 4429              	.LASF100:
 4430 0514 43726561 		.ascii	"CreateAlarm\000"
 4430      7465416C 
 4430      61726D00 
 4431              	.LASF119:
 4432 0520 7061636B 		.ascii	"packet\000"
 4432      657400
 4433              	.LASF109:
 4434 0527 735F7273 		.ascii	"s_rsrp\000"
 4434      727000
 4435              	.LASF41:
 4436 052e 766F6C74 		.ascii	"voltage_pressure\000"
 4436      6167655F 
 4436      70726573 
 4436      73757265 
 4436      00
 4437              	.LASF146:
 4438 053f 68747470 		.ascii	"http_request\000"
 4438      5F726571 
 4438      75657374 
 4438      00
 4439              	.LASF17:
 4440 054c 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 98


 4440      7400
 4441              	.LASF37:
 4442 0552 6C657665 		.ascii	"level_sensor_t\000"
 4442      6C5F7365 
 4442      6E736F72 
 4442      5F7400
 4443              	.LASF123:
 4444 0561 636F6E66 		.ascii	"configureRemoteParams\000"
 4444      69677572 
 4444      6552656D 
 4444      6F746550 
 4444      6172616D 
 4445              	.LASF156:
 4446 0577 44617461 		.ascii	"Data_fileName\000"
 4446      5F66696C 
 4446      654E616D 
 4446      6500
 4447              	.LASF92:
 4448 0585 6D6F6465 		.ascii	"modem_status\000"
 4448      6D5F7374 
 4448      61747573 
 4448      00
 4449              	.LASF29:
 4450 0592 74657374 		.ascii	"test_name\000"
 4450      5F6E616D 
 4450      6500
 4451              	.LASF27:
 4452 059c 59656172 		.ascii	"Year\000"
 4452      00
 4453              	.LASF76:
 4454 05a1 5F426F6F 		.ascii	"_Bool\000"
 4454      6C00
 4455              	.LASF10:
 4456 05a7 696E7433 		.ascii	"int32_t\000"
 4456      325F7400 
 4457              	.LASF1:
 4458 05af 756E7369 		.ascii	"unsigned char\000"
 4458      676E6564 
 4458      20636861 
 4458      7200
 4459              	.LASF150:
 4460 05bd 73797374 		.ascii	"system_settings\000"
 4460      656D5F73 
 4460      65747469 
 4460      6E677300 
 4461              	.LASF67:
 4462 05cd 72737270 		.ascii	"rsrp\000"
 4462      00
 4463              	.LASF66:
 4464 05d2 72737271 		.ascii	"rsrq\000"
 4464      00
 4465              	.LASF97:
 4466 05d7 52657365 		.ascii	"ResetAlarm\000"
 4466      74416C61 
 4466      726D00
 4467              	.LASF122:
 4468 05e2 735F7365 		.ascii	"s_send_time\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 99


 4468      6E645F74 
 4468      696D6500 
 4469              	.LASF74:
 4470 05ee 73796E63 		.ascii	"sync_time\000"
 4470      5F74696D 
 4470      6500
 4471              	.LASF45:
 4472 05f8 70726573 		.ascii	"pressure_depth\000"
 4472      73757265 
 4472      5F646570 
 4472      746800
 4473              	.LASF64:
 4474 0607 72736370 		.ascii	"rscp\000"
 4474      00
 4475              	.LASF23:
 4476 060c 4461794F 		.ascii	"DayOfWeek\000"
 4476      66576565 
 4476      6B00
 4477              	.LASF32:
 4478 0616 74657374 		.ascii	"test_t\000"
 4478      5F7400
 4479              	.LASF149:
 4480 061d 73797374 		.ascii	"system_info\000"
 4480      656D5F69 
 4480      6E666F00 
 4481              	.LASF61:
 4482 0629 696D6569 		.ascii	"imei\000"
 4482      00
 4483              	.LASF31:
 4484 062e 72656173 		.ascii	"reason\000"
 4484      6F6E00
 4485              	.LASF98:
 4486 0635 616C6172 		.ascii	"alarmToBeReset\000"
 4486      6D546F42 
 4486      65526573 
 4486      657400
 4487              	.LASF103:
 4488 0644 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 4488      6B697479 
 4488      43686563 
 4488      6B596F75 
 4488      7273656C 
 4489              	.LASF117:
 4490 0670 64617461 		.ascii	"data_count_sent\000"
 4490      5F636F75 
 4490      6E745F73 
 4490      656E7400 
 4491              	.LASF70:
 4492 0680 6D6F6465 		.ascii	"modem_stats_t\000"
 4492      6D5F7374 
 4492      6174735F 
 4492      7400
 4493              	.LASF44:
 4494 068e 70726573 		.ascii	"pressure_current\000"
 4494      73757265 
 4494      5F637572 
 4494      72656E74 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 100


 4494      00
 4495              	.LASF42:
 4496 069f 76616C69 		.ascii	"valid\000"
 4496      6400
 4497              	.LASF53:
 4498 06a5 746D5F77 		.ascii	"tm_wday\000"
 4498      64617900 
 4499              	.LASF20:
 4500 06ad 6C6F6E67 		.ascii	"long double\000"
 4500      20646F75 
 4500      626C6500 
 4501              	.LASF114:
 4502 06b9 6368756E 		.ascii	"chunk\000"
 4502      6B00
 4503              	.LASF125:
 4504 06bf 635F7469 		.ascii	"c_timeStamp\000"
 4504      6D655374 
 4504      616D7000 
 4505              	.LASF19:
 4506 06cb 63686172 		.ascii	"char\000"
 4506      00
 4507              	.LASF144:
 4508 06d0 6D6F6465 		.ascii	"modem_stats\000"
 4508      6D5F7374 
 4508      61747300 
 4509              	.LASF148:
 4510 06dc 68747470 		.ascii	"http_route\000"
 4510      5F726F75 
 4510      746500
 4511              	.LASF113:
 4512 06e7 706F7274 		.ascii	"portConfig\000"
 4512      436F6E66 
 4512      696700
 4513              	.LASF9:
 4514 06f2 5F5F696E 		.ascii	"__int32_t\000"
 4514      7433325F 
 4514      7400
 4515              	.LASF89:
 4516 06fc 756E6971 		.ascii	"uniqueId\000"
 4516      75654964 
 4516      00
 4517              	.LASF127:
 4518 0705 6D5F6C65 		.ascii	"m_level_sensor\000"
 4518      76656C5F 
 4518      73656E73 
 4518      6F7200
 4519              	.LASF34:
 4520 0714 6C657665 		.ascii	"level_reading\000"
 4520      6C5F7265 
 4520      6164696E 
 4520      6700
 4521              	.LASF161:
 4522 0722 4C617942 		.ascii	"LayBack\000"
 4522      61636B00 
 4523              	.LASF3:
 4524 072a 73686F72 		.ascii	"short unsigned int\000"
 4524      7420756E 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 101


 4524      7369676E 
 4524      65642069 
 4524      6E7400
 4525              	.LASF59:
 4526 073d 73696D5F 		.ascii	"sim_id\000"
 4526      696400
 4527              	.LASF50:
 4528 0744 746D5F6D 		.ascii	"tm_mday\000"
 4528      64617900 
 4529              	.LASF101:
 4530 074c 6E657741 		.ascii	"newAlarm\000"
 4530      6C61726D 
 4530      00
 4531              	.LASF47:
 4532 0755 746D5F73 		.ascii	"tm_sec\000"
 4532      656300
 4533              	.LASF128:
 4534 075c 6D5F7072 		.ascii	"m_pressure\000"
 4534      65737375 
 4534      726500
 4535              	.LASF30:
 4536 0767 73746174 		.ascii	"status\000"
 4536      757300
 4537              	.LASF140:
 4538 076e 64617461 		.ascii	"dataPointsInStackDesired\000"
 4538      506F696E 
 4538      7473496E 
 4538      53746163 
 4538      6B446573 
 4539              	.LASF105:
 4540 0787 745F766F 		.ascii	"t_voltages\000"
 4540      6C746167 
 4540      657300
 4541              	.LASF158:
 4542 0792 6E6F746F 		.ascii	"notoriOS.c\000"
 4542      72694F53 
 4542      2E6300
 4543              	.LASF147:
 4544 079d 68747470 		.ascii	"http_body\000"
 4544      5F626F64 
 4544      7900
 4545              	.LASF15:
 4546 07a7 696E7431 		.ascii	"int16\000"
 4546      3600
 4547              	.LASF80:
 4548 07ad 636F756E 		.ascii	"countDownType\000"
 4548      74446F77 
 4548      6E547970 
 4548      6500
 4549              	.LASF79:
 4550 07bb 63757272 		.ascii	"currentCountDownValue\000"
 4550      656E7443 
 4550      6F756E74 
 4550      446F776E 
 4550      56616C75 
 4551              	.LASF72:
 4552 07d1 73696D5F 		.ascii	"sim_type\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccLh8KgA.s 			page 102


 4552      74797065 
 4552      00
 4553              	.LASF90:
 4554 07da 635F6865 		.ascii	"c_hey\000"
 4554      7900
 4555              	.LASF25:
 4556 07e0 4461794F 		.ascii	"DayOfYear\000"
 4556      66596561 
 4556      7200
 4557              	.LASF46:
 4558 07ea 70726573 		.ascii	"pressure_t\000"
 4558      73757265 
 4558      5F7400
 4559              	.LASF99:
 4560 07f5 416C6172 		.ascii	"AlarmReady\000"
 4560      6D526561 
 4560      647900
 4561              	.LASF102:
 4562 0800 52656164 		.ascii	"ReadyOrNot\000"
 4562      794F724E 
 4562      6F7400
 4563              	.LASF162:
 4564 080b 6D61696E 		.ascii	"main\000"
 4564      00
 4565              	.LASF84:
 4566 0810 63686970 		.ascii	"chip_uniqueId\000"
 4566      5F756E69 
 4566      71756549 
 4566      6400
 4567              	.LASF73:
 4568 081e 6D656173 		.ascii	"measure_time\000"
 4568      7572655F 
 4568      74696D65 
 4568      00
 4569              	.LASF18:
 4570 082b 646F7562 		.ascii	"double\000"
 4570      6C6500
 4571              	.LASF43:
 4572 0832 766F6C74 		.ascii	"voltage_t\000"
 4572      6167655F 
 4572      7400
 4573              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
