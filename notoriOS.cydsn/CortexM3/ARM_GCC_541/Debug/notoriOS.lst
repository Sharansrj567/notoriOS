ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.section	.text.Wakeup_ISR,"ax",%progbits
  44              		.align	2
  45              		.global	Wakeup_ISR
  46              		.thumb
  47              		.thumb_func
  48              		.type	Wakeup_ISR, %function
  49              	Wakeup_ISR:
  50              	.LFB64:
  51              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 2


   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  52              		.loc 1 20 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  62              		.loc 1 22 0
  63 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  64              		.loc 1 23 0
  65 0008 00BF     		nop
  66 000a 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE64:
  69              		.size	Wakeup_ISR, .-Wakeup_ISR
  70              		.global	Data_fileName
  71              		.data
  72              		.align	2
  73              		.type	Data_fileName, %object
  74              		.size	Data_fileName, 30
  75              	Data_fileName:
  76 0000 64617461 		.ascii	"data.txt\000"
  76      2E747874 
  76      00
  77 0009 00000000 		.space	21
  77      00000000 
  77      00000000 
  77      00000000 
  77      00000000 
  78              		.comm	try_counter,1,1
  79              		.section	.rodata
  80              		.align	2
  81              	.LC0:
  82 0000 25582D25 		.ascii	"%X-%X\000"
  82      5800
  83 0006 0000     		.align	2
  84              	.LC1:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 3


  85 0008 6D616C63 		.ascii	"malcom.open-storm.org\000"
  85      6F6D2E6F 
  85      70656E2D 
  85      73746F72 
  85      6D2E6F72 
  86              		.section	.text.ReadyOrNot,"ax",%progbits
  87              		.align	2
  88              		.global	ReadyOrNot
  89              		.thumb
  90              		.thumb_func
  91              		.type	ReadyOrNot, %function
  92              	ReadyOrNot:
  93              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
  94              		.loc 1 41 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 24
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98 0000 B0B5     		push	{r4, r5, r7, lr}
  99              		.cfi_def_cfa_offset 16
 100              		.cfi_offset 4, -16
 101              		.cfi_offset 5, -12
 102              		.cfi_offset 7, -8
 103              		.cfi_offset 14, -4
 104 0002 88B0     		sub	sp, sp, #32
 105              		.cfi_def_cfa_offset 48
 106 0004 02AF     		add	r7, sp, #8
 107              		.cfi_def_cfa 7, 40
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 108              		.loc 1 43 0
 109 0006 2E48     		ldr	r0, .L3
 110 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 111              		.loc 1 44 0
 112 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 113              		.loc 1 46 0
 114 0010 FF20     		movs	r0, #255
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 4


 115 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 116              		.loc 1 47 0
 117 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 118              		.loc 1 48 0
 119 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 120              		.loc 1 50 0
 121 001e FFF7FEFF 		bl	modem_initialize
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 122              		.loc 1 52 0
 123 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  53:notoriOS.c    ****    
  54:notoriOS.c    ****     
  55:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  56:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  57:notoriOS.c    ****     
  58:notoriOS.c    ****     
  59:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  60:notoriOS.c    ****     uint32 uniqueId[2];
  61:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  62:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 124              		.loc 1 62 0
 125 0026 07F10C03 		add	r3, r7, #12
 126 002a 1846     		mov	r0, r3
 127 002c FFF7FEFF 		bl	CyGetUniqueId
  63:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 128              		.loc 1 63 0
 129 0030 FA68     		ldr	r2, [r7, #12]
 130 0032 3B69     		ldr	r3, [r7, #16]
 131 0034 0093     		str	r3, [sp]
 132 0036 1346     		mov	r3, r2
 133 0038 224A     		ldr	r2, .L3+4
 134 003a 1821     		movs	r1, #24
 135 003c 2248     		ldr	r0, .L3+8
 136 003e FFF7FEFF 		bl	snprintf
  64:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  65:notoriOS.c    ****     system_info.modem_info = &modem_info;
 137              		.loc 1 65 0
 138 0042 224B     		ldr	r3, .L3+12
 139 0044 224A     		ldr	r2, .L3+16
 140 0046 1A60     		str	r2, [r3]
  66:notoriOS.c    ****     
  67:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  68:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","malcom.open-storm.org");
 141              		.loc 1 68 0
 142 0048 224A     		ldr	r2, .L3+20
 143 004a 234B     		ldr	r3, .L3+24
 144 004c 1446     		mov	r4, r2
 145 004e 1D46     		mov	r5, r3
 146 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 147 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 148 0054 95E80300 		ldmia	r5, {r0, r1}
 149 0058 2060     		str	r0, [r4]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 5


 150 005a 0434     		adds	r4, r4, #4
 151 005c 2180     		strh	r1, [r4]	@ movhi
  69:notoriOS.c    ****    
  70:notoriOS.c    ****     system_settings.ep_port = 5000;
 152              		.loc 1 70 0
 153 005e 1D4B     		ldr	r3, .L3+20
 154 0060 41F28832 		movw	r2, #5000
 155 0064 5A66     		str	r2, [r3, #100]
  71:notoriOS.c    ****     // Don't need the following for new nodes
  72:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  73:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  74:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  75:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  76:notoriOS.c    ****         
  77:notoriOS.c    ****     
  78:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  79:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 156              		.loc 1 79 0
 157 0066 1D4B     		ldr	r3, .L3+28
 158 0068 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 159 006a 99B2     		uxth	r1, r3
 160 006c 1C4C     		ldr	r4, .L3+32
 161 006e 3846     		mov	r0, r7
 162 0070 0723     		movs	r3, #7
 163 0072 0122     		movs	r2, #1
 164 0074 FFF7FEFF 		bl	CreateAlarm
 165 0078 2246     		mov	r2, r4
 166 007a 3B46     		mov	r3, r7
 167 007c 1968     		ldr	r1, [r3]	@ unaligned
 168 007e 1160     		str	r1, [r2]	@ unaligned
 169 0080 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 170 0082 9380     		strh	r3, [r2, #4]	@ unaligned
  80:notoriOS.c    ****     timeToMeasure = 1u;
 171              		.loc 1 80 0
 172 0084 174B     		ldr	r3, .L3+36
 173 0086 0122     		movs	r2, #1
 174 0088 1A70     		strb	r2, [r3]
  81:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  82:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 175              		.loc 1 82 0
 176 008a 144B     		ldr	r3, .L3+28
 177 008c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 178 008e 99B2     		uxth	r1, r3
 179 0090 154C     		ldr	r4, .L3+40
 180 0092 3846     		mov	r0, r7
 181 0094 0723     		movs	r3, #7
 182 0096 0122     		movs	r2, #1
 183 0098 FFF7FEFF 		bl	CreateAlarm
 184 009c 2246     		mov	r2, r4
 185 009e 3B46     		mov	r3, r7
 186 00a0 1968     		ldr	r1, [r3]	@ unaligned
 187 00a2 1160     		str	r1, [r2]	@ unaligned
 188 00a4 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 189 00a6 9380     		strh	r3, [r2, #4]	@ unaligned
  83:notoriOS.c    ****     timeToSync = 1u;
 190              		.loc 1 83 0
 191 00a8 104B     		ldr	r3, .L3+44
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 6


 192 00aa 0122     		movs	r2, #1
 193 00ac 1A70     		strb	r2, [r3]
  84:notoriOS.c    ****     
  85:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 194              		.loc 1 85 0
 195 00ae 104B     		ldr	r3, .L3+48
 196 00b0 0022     		movs	r2, #0
 197 00b2 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     
  87:notoriOS.c    ****     // Initialize the try counter to 0
  88:notoriOS.c    ****     uint8 try_counter = 0;
 198              		.loc 1 88 0
 199 00b4 0023     		movs	r3, #0
 200 00b6 FB75     		strb	r3, [r7, #23]
  89:notoriOS.c    **** }
 201              		.loc 1 89 0
 202 00b8 00BF     		nop
 203 00ba 1837     		adds	r7, r7, #24
 204              		.cfi_def_cfa_offset 16
 205 00bc BD46     		mov	sp, r7
 206              		.cfi_def_cfa_register 13
 207              		@ sp needed
 208 00be B0BD     		pop	{r4, r5, r7, pc}
 209              	.L4:
 210              		.align	2
 211              	.L3:
 212 00c0 00000000 		.word	Wakeup_ISR
 213 00c4 00000000 		.word	.LC0
 214 00c8 04000000 		.word	system_info+4
 215 00cc 00000000 		.word	system_info
 216 00d0 00000000 		.word	modem_info
 217 00d4 00000000 		.word	system_settings
 218 00d8 08000000 		.word	.LC1
 219 00dc 00000000 		.word	updatable_parameters
 220 00e0 00000000 		.word	alarmMeasure
 221 00e4 00000000 		.word	timeToMeasure
 222 00e8 00000000 		.word	alarmSync
 223 00ec 00000000 		.word	timeToSync
 224 00f0 00000000 		.word	timeToSycnRemoteParams
 225              		.cfi_endproc
 226              	.LFE65:
 227              		.size	ReadyOrNot, .-ReadyOrNot
 228              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 229              		.align	2
 230              		.global	WorkWorkWorkWorkWorkWork
 231              		.thumb
 232              		.thumb_func
 233              		.type	WorkWorkWorkWorkWorkWork, %function
 234              	WorkWorkWorkWorkWorkWork:
 235              	.LFB66:
  90:notoriOS.c    **** 
  91:notoriOS.c    **** 
  92:notoriOS.c    **** // ==============================================
  93:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
  94:notoriOS.c    **** //      - Rhiana, feat Drake (2016)
  95:notoriOS.c    **** //
  96:notoriOS.c    **** // Prorcesses core tasks
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 7


  97:notoriOS.c    **** // ==============================================
  98:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
  99:notoriOS.c    **** {
 236              		.loc 1 99 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 8
 239              		@ frame_needed = 1, uses_anonymous_args = 0
 240 0000 80B5     		push	{r7, lr}
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 7, -8
 243              		.cfi_offset 14, -4
 244 0002 82B0     		sub	sp, sp, #8
 245              		.cfi_def_cfa_offset 16
 246 0004 00AF     		add	r7, sp, #0
 247              		.cfi_def_cfa_register 7
 100:notoriOS.c    ****     
 101:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 102:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 103:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
 104:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 105:notoriOS.c    ****     
 106:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 107:notoriOS.c    ****     if(timeToSycnRemoteParams){
 248              		.loc 1 107 0
 249 0006 144B     		ldr	r3, .L10
 250 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 251 000a 002B     		cmp	r3, #0
 252 000c 06D0     		beq	.L6
 108:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
 253              		.loc 1 108 0
 254 000e FFF7FEFF 		bl	configureRemoteParams
 255 0012 0346     		mov	r3, r0
 256 0014 1A46     		mov	r2, r3
 257 0016 104B     		ldr	r3, .L10
 258 0018 1A70     		strb	r2, [r3]
 259 001a 14E0     		b	.L7
 260              	.L6:
 109:notoriOS.c    ****     }
 110:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 111:notoriOS.c    ****     else if(timeToMeasure){
 261              		.loc 1 111 0
 262 001c 0F4B     		ldr	r3, .L10+4
 263 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 264 0020 002B     		cmp	r3, #0
 265 0022 06D0     		beq	.L8
 112:notoriOS.c    ****         //(int i=0; i<=30; i++){
 113:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 266              		.loc 1 113 0
 267 0024 FFF7FEFF 		bl	makeMeasurements
 268 0028 0346     		mov	r3, r0
 269 002a 1A46     		mov	r2, r3
 270 002c 0B4B     		ldr	r3, .L10+4
 271 002e 1A70     		strb	r2, [r3]
 272 0030 09E0     		b	.L7
 273              	.L8:
 114:notoriOS.c    ****         //CyDelay(1000u);
 115:notoriOS.c    ****         //}
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 8


 116:notoriOS.c    ****     }else if(timeToSync){
 274              		.loc 1 116 0
 275 0032 0B4B     		ldr	r3, .L10+8
 276 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 277 0036 002B     		cmp	r3, #0
 278 0038 05D0     		beq	.L7
 117:notoriOS.c    ****             timeToSync = syncData();
 279              		.loc 1 117 0
 280 003a FFF7FEFF 		bl	syncData
 281 003e 0346     		mov	r3, r0
 282 0040 1A46     		mov	r2, r3
 283 0042 074B     		ldr	r3, .L10+8
 284 0044 1A70     		strb	r2, [r3]
 285              	.L7:
 118:notoriOS.c    ****     }
 119:notoriOS.c    ****     // Print the countdown to the next alarm
 120:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 121:notoriOS.c    ****     
 122:notoriOS.c    ****     
 123:notoriOS.c    ****     // Check modem state machine on every loop
 124:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
 286              		.loc 1 124 0
 287 0046 FFF7FEFF 		bl	modem_process_tasks
 288 004a 0346     		mov	r3, r0
 289 004c FB71     		strb	r3, [r7, #7]
 125:notoriOS.c    **** 
 126:notoriOS.c    ****     return 0u +  modem_status;  
 290              		.loc 1 126 0
 291 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 127:notoriOS.c    **** }
 292              		.loc 1 127 0
 293 0050 1846     		mov	r0, r3
 294 0052 0837     		adds	r7, r7, #8
 295              		.cfi_def_cfa_offset 8
 296 0054 BD46     		mov	sp, r7
 297              		.cfi_def_cfa_register 13
 298              		@ sp needed
 299 0056 80BD     		pop	{r7, pc}
 300              	.L11:
 301              		.align	2
 302              	.L10:
 303 0058 00000000 		.word	timeToSycnRemoteParams
 304 005c 00000000 		.word	timeToMeasure
 305 0060 00000000 		.word	timeToSync
 306              		.cfi_endproc
 307              	.LFE66:
 308              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 309              		.section	.text.LayBack,"ax",%progbits
 310              		.align	2
 311              		.global	LayBack
 312              		.thumb
 313              		.thumb_func
 314              		.type	LayBack, %function
 315              	LayBack:
 316              	.LFB67:
 128:notoriOS.c    **** 
 129:notoriOS.c    **** 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 9


 130:notoriOS.c    **** 
 131:notoriOS.c    **** 
 132:notoriOS.c    **** 
 133:notoriOS.c    **** 
 134:notoriOS.c    **** // ==============================================
 135:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 136:notoriOS.c    **** //      - Snoop Dogg (1993)
 137:notoriOS.c    **** //
 138:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 139:notoriOS.c    **** // ==============================================
 140:notoriOS.c    **** void LayBack()
 141:notoriOS.c    **** {
 317              		.loc 1 141 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 1, uses_anonymous_args = 0
 321 0000 80B5     		push	{r7, lr}
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 7, -8
 324              		.cfi_offset 14, -4
 325 0002 00AF     		add	r7, sp, #0
 326              		.cfi_def_cfa_register 7
 142:notoriOS.c    ****   
 143:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 327              		.loc 1 143 0
 328 0004 FFF7FEFF 		bl	modem_sleep
 144:notoriOS.c    ****     
 145:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 146:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 329              		.loc 1 146 0
 330 0008 FFF7FEFF 		bl	debug_sleep
 147:notoriOS.c    ****     
 148:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 331              		.loc 1 148 0
 332 000c FFF7FEFF 		bl	CyPmSaveClocks
 149:notoriOS.c    ****     
 150:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 151:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 152:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 153:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 154:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 155:notoriOS.c    ****     //CyPmHibernate();
 156:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 157:notoriOS.c    **** 
 158:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 333              		.loc 1 158 0
 334 0010 4FF40061 		mov	r1, #2048
 335 0014 0020     		movs	r0, #0
 336 0016 FFF7FEFF 		bl	CyPmSleep
 159:notoriOS.c    **** 
 160:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 337              		.loc 1 160 0
 338 001a FFF7FEFF 		bl	CyPmRestoreClocks
 161:notoriOS.c    **** 
 162:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 339              		.loc 1 162 0
 340 001e FFF7FEFF 		bl	debug_wakeup
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 10


 163:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 341              		.loc 1 163 0
 342 0022 FFF7FEFF 		bl	modem_wakeup
 164:notoriOS.c    **** 
 165:notoriOS.c    **** }
 343              		.loc 1 165 0
 344 0026 00BF     		nop
 345 0028 80BD     		pop	{r7, pc}
 346              		.cfi_endproc
 347              	.LFE67:
 348              		.size	LayBack, .-LayBack
 349 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 350              		.align	2
 351              		.global	AyoItsTime
 352              		.thumb
 353              		.thumb_func
 354              		.type	AyoItsTime, %function
 355              	AyoItsTime:
 356              	.LFB68:
 166:notoriOS.c    **** 
 167:notoriOS.c    **** 
 168:notoriOS.c    **** // ==============================================
 169:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 170:notoriOS.c    **** //      - NAS (1994)
 171:notoriOS.c    **** //
 172:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 173:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 174:notoriOS.c    **** // It will add tasks to the work queue,
 175:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 176:notoriOS.c    **** // ==============================================
 177:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 178:notoriOS.c    **** {
 357              		.loc 1 178 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 8
 360              		@ frame_needed = 1, uses_anonymous_args = 0
 361 0000 80B5     		push	{r7, lr}
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 7, -8
 364              		.cfi_offset 14, -4
 365 0002 82B0     		sub	sp, sp, #8
 366              		.cfi_def_cfa_offset 16
 367 0004 00AF     		add	r7, sp, #0
 368              		.cfi_def_cfa_register 7
 369 0006 0346     		mov	r3, r0
 370 0008 FB71     		strb	r3, [r7, #7]
 179:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 180:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 371              		.loc 1 180 0
 372 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 373 000c 1946     		mov	r1, r3
 374 000e 0C48     		ldr	r0, .L17
 375 0010 FFF7FEFF 		bl	AlarmReady
 376 0014 0346     		mov	r3, r0
 377 0016 002B     		cmp	r3, #0
 378 0018 02D0     		beq	.L14
 181:notoriOS.c    ****     {
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 11


 182:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 183:notoriOS.c    ****         timeToMeasure = 1u;
 379              		.loc 1 183 0
 380 001a 0A4B     		ldr	r3, .L17+4
 381 001c 0122     		movs	r2, #1
 382 001e 1A70     		strb	r2, [r3]
 383              	.L14:
 184:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 185:notoriOS.c    ****         
 186:notoriOS.c    ****     }
 187:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 384              		.loc 1 187 0
 385 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 386 0022 1946     		mov	r1, r3
 387 0024 0848     		ldr	r0, .L17+8
 388 0026 FFF7FEFF 		bl	AlarmReady
 389 002a 0346     		mov	r3, r0
 390 002c 002B     		cmp	r3, #0
 391 002e 02D0     		beq	.L16
 188:notoriOS.c    ****     {
 189:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 190:notoriOS.c    ****         timeToSync = 1u;
 392              		.loc 1 190 0
 393 0030 064B     		ldr	r3, .L17+12
 394 0032 0122     		movs	r2, #1
 395 0034 1A70     		strb	r2, [r3]
 396              	.L16:
 191:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 192:notoriOS.c    ****     }
 193:notoriOS.c    ****     
 194:notoriOS.c    **** }
 397              		.loc 1 194 0
 398 0036 00BF     		nop
 399 0038 0837     		adds	r7, r7, #8
 400              		.cfi_def_cfa_offset 8
 401 003a BD46     		mov	sp, r7
 402              		.cfi_def_cfa_register 13
 403              		@ sp needed
 404 003c 80BD     		pop	{r7, pc}
 405              	.L18:
 406 003e 00BF     		.align	2
 407              	.L17:
 408 0040 00000000 		.word	alarmMeasure
 409 0044 00000000 		.word	timeToMeasure
 410 0048 00000000 		.word	alarmSync
 411 004c 00000000 		.word	timeToSync
 412              		.cfi_endproc
 413              	.LFE68:
 414              		.size	AyoItsTime, .-AyoItsTime
 415              		.section	.text.AlarmReady,"ax",%progbits
 416              		.align	2
 417              		.global	AlarmReady
 418              		.thumb
 419              		.thumb_func
 420              		.type	AlarmReady, %function
 421              	AlarmReady:
 422              	.LFB69:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 12


 195:notoriOS.c    **** 
 196:notoriOS.c    **** 
 197:notoriOS.c    **** // ==============================================
 198:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 199:notoriOS.c    **** // ==============================================
 200:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 201:notoriOS.c    **** {
 423              		.loc 1 201 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 8
 426              		@ frame_needed = 1, uses_anonymous_args = 0
 427 0000 80B5     		push	{r7, lr}
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 7, -8
 430              		.cfi_offset 14, -4
 431 0002 82B0     		sub	sp, sp, #8
 432              		.cfi_def_cfa_offset 16
 433 0004 00AF     		add	r7, sp, #0
 434              		.cfi_def_cfa_register 7
 435 0006 7860     		str	r0, [r7, #4]
 436 0008 0B46     		mov	r3, r1
 437 000a FB70     		strb	r3, [r7, #3]
 202:notoriOS.c    ****     // if the countDownType matches the alarmType
 203:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 438              		.loc 1 203 0
 439 000c 7B68     		ldr	r3, [r7, #4]
 440 000e 1B79     		ldrb	r3, [r3, #4]
 441 0010 DBB2     		uxtb	r3, r3
 442 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 443 0014 9A42     		cmp	r2, r3
 444 0016 12D1     		bne	.L20
 204:notoriOS.c    ****        
 205:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 206:notoriOS.c    ****         // Decrement the count down value by 1
 207:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 445              		.loc 1 207 0
 446 0018 7B68     		ldr	r3, [r7, #4]
 447 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 448 001c 1BB2     		sxth	r3, r3
 449 001e 9BB2     		uxth	r3, r3
 450 0020 013B     		subs	r3, r3, #1
 451 0022 9BB2     		uxth	r3, r3
 452 0024 1AB2     		sxth	r2, r3
 453 0026 7B68     		ldr	r3, [r7, #4]
 454 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 208:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 209:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 455              		.loc 1 209 0
 456 002a 7B68     		ldr	r3, [r7, #4]
 457 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 458 002e 1BB2     		sxth	r3, r3
 459 0030 002B     		cmp	r3, #0
 460 0032 04DC     		bgt	.L20
 210:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 461              		.loc 1 210 0
 462 0034 7868     		ldr	r0, [r7, #4]
 463 0036 FFF7FEFF 		bl	ResetAlarm
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 13


 211:notoriOS.c    ****             return 1u;
 464              		.loc 1 211 0
 465 003a 0123     		movs	r3, #1
 466 003c 00E0     		b	.L21
 467              	.L20:
 212:notoriOS.c    ****         } 
 213:notoriOS.c    ****     }
 214:notoriOS.c    ****     
 215:notoriOS.c    ****     return 0u; // Otherwise return 0
 468              		.loc 1 215 0
 469 003e 0023     		movs	r3, #0
 470              	.L21:
 216:notoriOS.c    **** }
 471              		.loc 1 216 0
 472 0040 1846     		mov	r0, r3
 473 0042 0837     		adds	r7, r7, #8
 474              		.cfi_def_cfa_offset 8
 475 0044 BD46     		mov	sp, r7
 476              		.cfi_def_cfa_register 13
 477              		@ sp needed
 478 0046 80BD     		pop	{r7, pc}
 479              		.cfi_endproc
 480              	.LFE69:
 481              		.size	AlarmReady, .-AlarmReady
 482              		.section	.text.ResetAlarm,"ax",%progbits
 483              		.align	2
 484              		.global	ResetAlarm
 485              		.thumb
 486              		.thumb_func
 487              		.type	ResetAlarm, %function
 488              	ResetAlarm:
 489              	.LFB70:
 217:notoriOS.c    **** 
 218:notoriOS.c    **** // ==============================================
 219:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 220:notoriOS.c    **** // ==============================================
 221:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 222:notoriOS.c    **** {
 490              		.loc 1 222 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 8
 493              		@ frame_needed = 1, uses_anonymous_args = 0
 494              		@ link register save eliminated.
 495 0000 80B4     		push	{r7}
 496              		.cfi_def_cfa_offset 4
 497              		.cfi_offset 7, -4
 498 0002 83B0     		sub	sp, sp, #12
 499              		.cfi_def_cfa_offset 16
 500 0004 00AF     		add	r7, sp, #0
 501              		.cfi_def_cfa_register 7
 502 0006 7860     		str	r0, [r7, #4]
 223:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 224:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 503              		.loc 1 224 0
 504 0008 7B68     		ldr	r3, [r7, #4]
 505 000a 1B88     		ldrh	r3, [r3]	@ movhi
 506 000c 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 14


 507 000e 1AB2     		sxth	r2, r3
 508 0010 7B68     		ldr	r3, [r7, #4]
 509 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 225:notoriOS.c    **** }
 510              		.loc 1 225 0
 511 0014 00BF     		nop
 512 0016 0C37     		adds	r7, r7, #12
 513              		.cfi_def_cfa_offset 4
 514 0018 BD46     		mov	sp, r7
 515              		.cfi_def_cfa_register 13
 516              		@ sp needed
 517 001a 80BC     		pop	{r7}
 518              		.cfi_restore 7
 519              		.cfi_def_cfa_offset 0
 520 001c 7047     		bx	lr
 521              		.cfi_endproc
 522              	.LFE70:
 523              		.size	ResetAlarm, .-ResetAlarm
 524 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
 525              		.align	2
 526              		.global	CreateAlarm
 527              		.thumb
 528              		.thumb_func
 529              		.type	CreateAlarm, %function
 530              	CreateAlarm:
 531              	.LFB71:
 226:notoriOS.c    **** 
 227:notoriOS.c    **** // ==============================================
 228:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 229:notoriOS.c    **** // ==============================================
 230:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 231:notoriOS.c    **** {
 532              		.loc 1 231 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 16
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537 0000 80B4     		push	{r7}
 538              		.cfi_def_cfa_offset 4
 539              		.cfi_offset 7, -4
 540 0002 85B0     		sub	sp, sp, #20
 541              		.cfi_def_cfa_offset 24
 542 0004 00AF     		add	r7, sp, #0
 543              		.cfi_def_cfa_register 7
 544 0006 7860     		str	r0, [r7, #4]
 545 0008 0846     		mov	r0, r1
 546 000a 1146     		mov	r1, r2
 547 000c 1A46     		mov	r2, r3
 548 000e 0346     		mov	r3, r0	@ movhi
 549 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 550 0012 0B46     		mov	r3, r1
 551 0014 7B70     		strb	r3, [r7, #1]
 552 0016 1346     		mov	r3, r2
 553 0018 3B70     		strb	r3, [r7]
 232:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 233:notoriOS.c    ****     alarm newAlarm;
 234:notoriOS.c    ****     
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 15


 235:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 236:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 554              		.loc 1 236 0
 555 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 556 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 237:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 557              		.loc 1 237 0
 558 001e 7B78     		ldrb	r3, [r7, #1]
 559 0020 3B73     		strb	r3, [r7, #12]
 238:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 560              		.loc 1 238 0
 561 0022 3B78     		ldrb	r3, [r7]
 562 0024 7B73     		strb	r3, [r7, #13]
 239:notoriOS.c    ****     
 240:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 241:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 242:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 563              		.loc 1 242 0
 564 0026 B7F90230 		ldrsh	r3, [r7, #2]
 565 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 243:notoriOS.c    ****     
 244:notoriOS.c    ****     return newAlarm;
 566              		.loc 1 244 0
 567 002c 7B68     		ldr	r3, [r7, #4]
 568 002e 1A46     		mov	r2, r3
 569 0030 07F10803 		add	r3, r7, #8
 570 0034 1868     		ldr	r0, [r3]	@ unaligned
 571 0036 1060     		str	r0, [r2]	@ unaligned
 572 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 573 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 245:notoriOS.c    ****     
 246:notoriOS.c    **** }
 574              		.loc 1 246 0
 575 003c 7868     		ldr	r0, [r7, #4]
 576 003e 1437     		adds	r7, r7, #20
 577              		.cfi_def_cfa_offset 4
 578 0040 BD46     		mov	sp, r7
 579              		.cfi_def_cfa_register 13
 580              		@ sp needed
 581 0042 80BC     		pop	{r7}
 582              		.cfi_restore 7
 583              		.cfi_def_cfa_offset 0
 584 0044 7047     		bx	lr
 585              		.cfi_endproc
 586              	.LFE71:
 587              		.size	CreateAlarm, .-CreateAlarm
 588 0046 00BF     		.section	.rodata
 589 001e 0000     		.align	2
 590              	.LC2:
 591 0020 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 591      2D2D2D2D 
 591      2D2D2D2D 
 591      2D424547 
 591      494E2054 
 592 004a 0000     		.align	2
 593              	.LC3:
 594 004c 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 16


 594      3D25732C 
 594      2053494D 
 594      49443D25 
 594      732C2044 
 595 006b 00       		.align	2
 596              	.LC4:
 597 006c 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 597      2D2D2D2D 
 597      2D2D2D2D 
 597      2D2D2D45 
 597      4E442054 
 598 0095 00       		.ascii	"\000"
 599              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 600              		.align	2
 601              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 602              		.thumb
 603              		.thumb_func
 604              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 605              	ChickityCheckYourselfBeforeYouWreckYourself:
 606              	.LFB72:
 247:notoriOS.c    **** 
 248:notoriOS.c    **** // ==============================================
 249:notoriOS.c    **** // Dropping bombs on your moms
 250:notoriOS.c    **** //      - Ice Cube (1992)
 251:notoriOS.c    **** //
 252:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 253:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 254:notoriOS.c    **** // ==============================================
 255:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 607              		.loc 1 255 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 2328
 610              		@ frame_needed = 1, uses_anonymous_args = 0
 611 0000 90B5     		push	{r4, r7, lr}
 612              		.cfi_def_cfa_offset 12
 613              		.cfi_offset 4, -12
 614              		.cfi_offset 7, -8
 615              		.cfi_offset 14, -4
 616 0002 ADF6942D 		subw	sp, sp, #2708
 617              		.cfi_def_cfa_offset 2720
 618 0006 5EAF     		add	r7, sp, #376
 619              		.cfi_def_cfa 7, 2344
 256:notoriOS.c    **** 
 257:notoriOS.c    ****     //test_t t_influx = influx_test();
 258:notoriOS.c    ****     //printTestStatus(t_influx);
 259:notoriOS.c    ****     
 260:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 620              		.loc 1 260 0
 621 0008 4249     		ldr	r1, .L26
 622 000a 0320     		movs	r0, #3
 623 000c FFF7FEFF 		bl	printNotif
 261:notoriOS.c    ****     
 262:notoriOS.c    ****     // Test level sensor
 263:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 624              		.loc 1 263 0
 625 0010 07F29473 		addw	r3, r7, #1940
 626 0014 1846     		mov	r0, r3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 17


 627 0016 FFF7FEFF 		bl	level_sensor_test
 264:notoriOS.c    ****     printTestStatus(t_level_sensor);
 628              		.loc 1 264 0
 629 001a 07F29474 		addw	r4, r7, #1940
 630 001e 6846     		mov	r0, sp
 631 0020 04F11003 		add	r3, r4, #16
 632 0024 40F27112 		movw	r2, #369
 633 0028 1946     		mov	r1, r3
 634 002a FFF7FEFF 		bl	memcpy
 635 002e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 636 0032 FFF7FEFF 		bl	printTestStatus
 265:notoriOS.c    ****     
 266:notoriOS.c    ****     // Test water quality sensors
 267:notoriOS.c    ****     test_t t_wq_sensors = wq_sensor_test();
 637              		.loc 1 267 0
 638 0036 07F5C263 		add	r3, r7, #1552
 639 003a 1846     		mov	r0, r3
 640 003c FFF7FEFF 		bl	wq_sensor_test
 268:notoriOS.c    ****     printTestStatus(t_wq_sensors);
 641              		.loc 1 268 0
 642 0040 07F5C264 		add	r4, r7, #1552
 643 0044 6846     		mov	r0, sp
 644 0046 04F11003 		add	r3, r4, #16
 645 004a 40F27112 		movw	r2, #369
 646 004e 1946     		mov	r1, r3
 647 0050 FFF7FEFF 		bl	memcpy
 648 0054 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 649 0058 FFF7FEFF 		bl	printTestStatus
 269:notoriOS.c    ****     
 270:notoriOS.c    ****     // Water Quality Calibrations 
 271:notoriOS.c    ****     // These MUST be commented out in production code and only run in lab
 272:notoriOS.c    ****     // These should be run in Debug mode though the process should be automatic if you've set up co
 273:notoriOS.c    ****     // DO_cal();
 274:notoriOS.c    ****     // Temperature_cal();
 275:notoriOS.c    ****     
 276:notoriOS.c    ****     // Test voltages
 277:notoriOS.c    ****     test_t t_voltages = voltages_test();
 650              		.loc 1 277 0
 651 005c 07F28C43 		addw	r3, r7, #1164
 652 0060 1846     		mov	r0, r3
 653 0062 FFF7FEFF 		bl	voltages_test
 278:notoriOS.c    ****     printTestStatus(t_voltages);
 654              		.loc 1 278 0
 655 0066 07F28C44 		addw	r4, r7, #1164
 656 006a 6846     		mov	r0, sp
 657 006c 04F11003 		add	r3, r4, #16
 658 0070 40F27112 		movw	r2, #369
 659 0074 1946     		mov	r1, r3
 660 0076 FFF7FEFF 		bl	memcpy
 661 007a 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 662 007e FFF7FEFF 		bl	printTestStatus
 279:notoriOS.c    ****  
 280:notoriOS.c    ****     // Test voltages
 281:notoriOS.c    ****     test_t t_pressure = pressure_sensor_test();
 663              		.loc 1 281 0
 664 0082 07F54273 		add	r3, r7, #776
 665 0086 1846     		mov	r0, r3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 18


 666 0088 FFF7FEFF 		bl	pressure_sensor_test
 282:notoriOS.c    ****     printTestStatus(t_pressure);
 667              		.loc 1 282 0
 668 008c 07F54274 		add	r4, r7, #776
 669 0090 6846     		mov	r0, sp
 670 0092 04F11003 		add	r3, r4, #16
 671 0096 40F27112 		movw	r2, #369
 672 009a 1946     		mov	r1, r3
 673 009c FFF7FEFF 		bl	memcpy
 674 00a0 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 675 00a4 FFF7FEFF 		bl	printTestStatus
 283:notoriOS.c    ****     
 284:notoriOS.c    ****     // Test SD card
 285:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 676              		.loc 1 285 0
 677 00a8 07F5C273 		add	r3, r7, #388
 678 00ac 1846     		mov	r0, r3
 679 00ae FFF7FEFF 		bl	SD_card_test
 286:notoriOS.c    ****     printTestStatus(t_sd_card);
 680              		.loc 1 286 0
 681 00b2 07F5C274 		add	r4, r7, #388
 682 00b6 6846     		mov	r0, sp
 683 00b8 04F11003 		add	r3, r4, #16
 684 00bc 40F27112 		movw	r2, #369
 685 00c0 1946     		mov	r1, r3
 686 00c2 FFF7FEFF 		bl	memcpy
 687 00c6 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 688 00ca FFF7FEFF 		bl	printTestStatus
 287:notoriOS.c    ****     
 288:notoriOS.c    ****     // Test modem
 289:notoriOS.c    ****     test_t t_modem = modem_test();
 689              		.loc 1 289 0
 690 00ce 3B46     		mov	r3, r7
 691 00d0 1846     		mov	r0, r3
 692 00d2 FFF7FEFF 		bl	modem_test
 290:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s",modem_info.imei,modem_info.sim_i
 693              		.loc 1 290 0
 694 00d6 104B     		ldr	r3, .L26+4
 695 00d8 0093     		str	r3, [sp]
 696 00da 104B     		ldr	r3, .L26+8
 697 00dc 104A     		ldr	r2, .L26+12
 698 00de 1149     		ldr	r1, .L26+16
 699 00e0 0320     		movs	r0, #3
 700 00e2 FFF7FEFF 		bl	printNotif
 291:notoriOS.c    ****     printTestStatus(t_modem);
 701              		.loc 1 291 0
 702 00e6 3C46     		mov	r4, r7
 703 00e8 6846     		mov	r0, sp
 704 00ea 04F11003 		add	r3, r4, #16
 705 00ee 40F27112 		movw	r2, #369
 706 00f2 1946     		mov	r1, r3
 707 00f4 FFF7FEFF 		bl	memcpy
 708 00f8 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 709 00fc FFF7FEFF 		bl	printTestStatus
 292:notoriOS.c    ****     
 293:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 710              		.loc 1 293 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 19


 711 0100 0949     		ldr	r1, .L26+20
 712 0102 0320     		movs	r0, #3
 713 0104 FFF7FEFF 		bl	printNotif
 294:notoriOS.c    **** 
 295:notoriOS.c    **** }
 714              		.loc 1 295 0
 715 0108 00BF     		nop
 716 010a 07F61C17 		addw	r7, r7, #2332
 717              		.cfi_def_cfa_offset 12
 718 010e BD46     		mov	sp, r7
 719              		.cfi_def_cfa_register 13
 720              		@ sp needed
 721 0110 90BD     		pop	{r4, r7, pc}
 722              	.L27:
 723 0112 00BF     		.align	2
 724              	.L26:
 725 0114 20000000 		.word	.LC2
 726 0118 04000000 		.word	system_info+4
 727 011c 00000000 		.word	modem_info
 728 0120 28000000 		.word	modem_info+40
 729 0124 4C000000 		.word	.LC3
 730 0128 6C000000 		.word	.LC4
 731              		.cfi_endproc
 732              	.LFE72:
 733              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 734              		.section	.text.main,"ax",%progbits
 735              		.align	2
 736              		.global	main
 737              		.thumb
 738              		.thumb_func
 739              		.type	main, %function
 740              	main:
 741              	.LFB73:
 296:notoriOS.c    **** 
 297:notoriOS.c    **** // ==============================================
 298:notoriOS.c    **** // Processes Core Tasks
 299:notoriOS.c    **** // ==============================================
 300:notoriOS.c    **** int main(void)
 301:notoriOS.c    **** {
 742              		.loc 1 301 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 1, uses_anonymous_args = 0
 746 0000 80B5     		push	{r7, lr}
 747              		.cfi_def_cfa_offset 8
 748              		.cfi_offset 7, -8
 749              		.cfi_offset 14, -4
 750 0002 00AF     		add	r7, sp, #0
 751              		.cfi_def_cfa_register 7
 302:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 752              		.loc 1 302 0
 753              		.syntax unified
 754              	@ 302 "notoriOS.c" 1
 755 0004 62B6     		CPSIE   i
 756              	@ 0 "" 2
 303:notoriOS.c    **** 
 304:notoriOS.c    ****     ReadyOrNot(); // Initialize 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 20


 757              		.loc 1 304 0
 758              		.thumb
 759              		.syntax unified
 760 0006 FFF7FEFF 		bl	ReadyOrNot
 305:notoriOS.c    ****     
 306:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 761              		.loc 1 306 0
 762 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 763              	.L30:
 307:notoriOS.c    ****    
 308:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 309:notoriOS.c    ****     {
 310:notoriOS.c    ****         
 311:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 764              		.loc 1 311 0
 765 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 766 0012 0346     		mov	r3, r0
 767 0014 002B     		cmp	r3, #0
 768 0016 FAD1     		bne	.L30
 312:notoriOS.c    ****         {
 313:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
 769              		.loc 1 313 0
 770 0018 FFF7FEFF 		bl	LayBack
 314:notoriOS.c    ****         }
 315:notoriOS.c    ****     }
 771              		.loc 1 315 0
 772 001c F7E7     		b	.L30
 773              		.cfi_endproc
 774              	.LFE73:
 775              		.size	main, .-main
 776 001e 00BF     		.section	.rodata
 777 0096 0000     		.align	2
 778              	.LC5:
 779 0098 4D6F6465 		.ascii	"Modem is ready.\000"
 779      6D206973 
 779      20726561 
 779      64792E00 
 780              		.align	2
 781              	.LC6:
 782 00a8 256400   		.ascii	"%d\000"
 783 00ab 00       		.align	2
 784              	.LC7:
 785 00ac 72737270 		.ascii	"rsrp\000"
 785      00
 786 00b1 000000   		.align	2
 787              	.LC8:
 788 00b4 72736370 		.ascii	"rscp\000"
 788      00
 789 00b9 000000   		.align	2
 790              	.LC9:
 791 00bc 7472795F 		.ascii	"try_counter\000"
 791      636F756E 
 791      74657200 
 792              		.align	2
 793              	.LC10:
 794 00c8 64617461 		.ascii	"data_count_sent\000"
 794      5F636F75 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 21


 794      6E745F73 
 794      656E7400 
 795              		.align	2
 796              	.LC11:
 797 00d8 64617461 		.ascii	"data_count_desired\000"
 797      5F636F75 
 797      6E745F64 
 797      65736972 
 797      656400
 798 00eb 00       		.align	2
 799              	.LC12:
 800 00ec 42656769 		.ascii	"Begin HTTP post.\000"
 800      6E204854 
 800      54502070 
 800      6F73742E 
 800      00
 801 00fd 000000   		.align	2
 802              	.LC13:
 803 0100 39643035 		.ascii	"9d059c9788692c95d11924800b0edce4ece637d4\000"
 803      39633937 
 803      38383639 
 803      32633935 
 803      64313139 
 804 0129 000000   		.align	2
 805              	.LC14:
 806 012c 6170692F 		.ascii	"api/v1/write\000"
 806      76312F77 
 806      72697465 
 806      00
 807 0139 000000   		.align	2
 808              	.LC15:
 809 013c 48545450 		.ascii	"HTTP route: %s\000"
 809      20726F75 
 809      74653A20 
 809      257300
 810 014b 00       		.align	2
 811              	.LC16:
 812 014c 312E3100 		.ascii	"1.1\000"
 813              		.align	2
 814              	.LC17:
 815 0150 00       		.ascii	"\000"
 816 0151 000000   		.align	2
 817              	.LC18:
 818 0154 436C6F73 		.ascii	"Close\000"
 818      6500
 819 015a 0000     		.align	2
 820              	.LC19:
 821 015c 504F5354 		.ascii	"POST\000"
 821      00
 822 0161 000000   		.align	2
 823              	.LC20:
 824 0164 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 824      20485454 
 824      50205265 
 824      71756573 
 824      743A2025 
 825 017a 0000     		.align	2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 22


 826              	.LC21:
 827 017c 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 827      443D312C 
 827      302C2564 
 827      2C222573 
 827      222C302C 
 828 0195 000000   		.align	2
 829              	.LC22:
 830 0198 257300   		.ascii	"%s\000"
 831 019b 00       		.align	2
 832              	.LC23:
 833 019c 4F4B00   		.ascii	"OK\000"
 834              		.global	__aeabi_ui2d
 835              		.global	__aeabi_d2iz
 836 019f 00       		.align	2
 837              	.LC24:
 838 01a0 68747470 		.ascii	"http_request len: %d\000"
 838      5F726571 
 838      75657374 
 838      206C656E 
 838      3A202564 
 839 01b5 000000   		.align	2
 840              	.LC25:
 841 01b8 23206F66 		.ascii	"# of packets: %d\000"
 841      20706163 
 841      6B657473 
 841      3A202564 
 841      00
 842 01c9 000000   		.align	2
 843              	.LC26:
 844 01cc 3E00     		.ascii	">\000"
 845 01ce 0000     		.align	2
 846              	.LC27:
 847 01d0 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 847      53454E44 
 847      3D310D0A 
 847      00
 848 01dd 000000   		.align	2
 849              	.LC28:
 850 01e0 1A00     		.ascii	"\032\000"
 851 01e2 0000     		.align	2
 852              	.LC29:
 853 01e4 6368756E 		.ascii	"chunk %d: %s\000"
 853      6B202564 
 853      3A202573 
 853      00
 854 01f1 000000   		.align	2
 855              	.LC30:
 856 01f4 5352494E 		.ascii	"SRING\000"
 856      4700
 857 01fa 0000     		.align	2
 858              	.LC31:
 859 01fc 4F532D4F 		.ascii	"OS-OK\000"
 859      4B00
 860 0202 0000     		.align	2
 861              	.LC32:
 862 0204 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 23


 862      52454356 
 862      3D312C31 
 862      3030300D 
 862      00
 863 0215 000000   		.align	2
 864              	.LC33:
 865 0218 6D6F6465 		.ascii	"modem_tx_time\000"
 865      6D5F7478 
 865      5F74696D 
 865      6500
 866 0226 0000     		.align	2
 867              	.LC34:
 868 0228 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 868      4F3A2043 
 868      6F756C64 
 868      206E6F74 
 868      20726563 
 869              		.section	.text.syncData,"ax",%progbits
 870              		.align	2
 871              		.global	syncData
 872              		.thumb
 873              		.thumb_func
 874              		.type	syncData, %function
 875              	syncData:
 876              	.LFB74:
 316:notoriOS.c    **** }
 317:notoriOS.c    **** 
 318:notoriOS.c    **** // ==============================================
 319:notoriOS.c    **** // Syncs data with server
 320:notoriOS.c    **** // Returns 0 when done
 321:notoriOS.c    **** // ==============================================
 322:notoriOS.c    **** uint8 syncData(){
 877              		.loc 1 322 0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 1360
 880              		@ frame_needed = 1, uses_anonymous_args = 0
 881 0000 90B5     		push	{r4, r7, lr}
 882              		.cfi_def_cfa_offset 12
 883              		.cfi_offset 4, -12
 884              		.cfi_offset 7, -8
 885              		.cfi_offset 14, -4
 886 0002 ADF26C5D 		subw	sp, sp, #1388
 887              		.cfi_def_cfa_offset 1400
 888 0006 06AF     		add	r7, sp, #24
 889              		.cfi_def_cfa 7, 1376
 323:notoriOS.c    ****     
 324:notoriOS.c    ****     /*
 325:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 326:notoriOS.c    ****     uint8 check = 0;
 327:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 328:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 329:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 330:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 331:notoriOS.c    ****     */
 332:notoriOS.c    **** 
 333:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 334:notoriOS.c    ****     LED_Write(1u);
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 24


 890              		.loc 1 334 0
 891 0008 0120     		movs	r0, #1
 892 000a FFF7FEFF 		bl	LED_Write
 335:notoriOS.c    ****     CyDelay(100u);
 893              		.loc 1 335 0
 894 000e 6420     		movs	r0, #100
 895 0010 FFF7FEFF 		bl	CyDelay
 336:notoriOS.c    ****     LED_Write(0u);
 896              		.loc 1 336 0
 897 0014 0020     		movs	r0, #0
 898 0016 FFF7FEFF 		bl	LED_Write
 337:notoriOS.c    **** 
 338:notoriOS.c    ****     
 339:notoriOS.c    ****     // If there's no data, not need to do anything
 340:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 899              		.loc 1 340 0
 900 001a FFF7FEFF 		bl	sizeOfDataStack
 901 001e 0346     		mov	r3, r0
 902 0020 002B     		cmp	r3, #0
 903 0022 01D1     		bne	.L32
 341:notoriOS.c    ****         return 0u;
 904              		.loc 1 341 0
 905 0024 0023     		movs	r3, #0
 906 0026 03E2     		b	.L33
 907              	.L32:
 342:notoriOS.c    ****         }
 343:notoriOS.c    ****     
 344:notoriOS.c    ****     // Create request body, in this case influx
 345:notoriOS.c    ****     // Place body into HTTP request header
 346:notoriOS.c    ****     // Fire up modem and get it out
 347:notoriOS.c    ****      
 348:notoriOS.c    ****     
 349:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 350:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 908              		.loc 1 350 0
 909 0028 FFF7FEFF 		bl	modem_get_state
 910 002c 0346     		mov	r3, r0
 911 002e 002B     		cmp	r3, #0
 912 0030 11D1     		bne	.L34
 351:notoriOS.c    **** 
 352:notoriOS.c    ****         try_counter++;
 913              		.loc 1 352 0
 914 0032 AE4B     		ldr	r3, .L46
 915 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 916 0036 0133     		adds	r3, r3, #1
 917 0038 DAB2     		uxtb	r2, r3
 918 003a AC4B     		ldr	r3, .L46
 919 003c 1A70     		strb	r2, [r3]
 353:notoriOS.c    ****         	
 354:notoriOS.c    ****         if(try_counter <= 2){
 920              		.loc 1 354 0
 921 003e AB4B     		ldr	r3, .L46
 922 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 923 0042 022B     		cmp	r3, #2
 924 0044 02D8     		bhi	.L35
 355:notoriOS.c    ****             modem_power_up();
 925              		.loc 1 355 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 25


 926 0046 FFF7FEFF 		bl	modem_power_up
 927 004a F0E1     		b	.L36
 928              	.L35:
 356:notoriOS.c    ****         }else{
 357:notoriOS.c    ****             try_counter = 0;
 929              		.loc 1 357 0
 930 004c A74B     		ldr	r3, .L46
 931 004e 0022     		movs	r2, #0
 932 0050 1A70     		strb	r2, [r3]
 358:notoriOS.c    ****             return 0u;
 933              		.loc 1 358 0
 934 0052 0023     		movs	r3, #0
 935 0054 ECE1     		b	.L33
 936              	.L34:
 359:notoriOS.c    ****             }
 360:notoriOS.c    ****             
 361:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 937              		.loc 1 361 0
 938 0056 FFF7FEFF 		bl	modem_get_state
 939 005a 0346     		mov	r3, r0
 940 005c 042B     		cmp	r3, #4
 941 005e 40F0E681 		bne	.L36
 942              	.LBB2:
 362:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 943              		.loc 1 362 0
 944 0062 A349     		ldr	r1, .L46+4
 945 0064 0020     		movs	r0, #0
 946 0066 FFF7FEFF 		bl	printNotif
 363:notoriOS.c    ****         
 364:notoriOS.c    ****         http_request[0] = '\0';
 947              		.loc 1 364 0
 948 006a A24B     		ldr	r3, .L46+8
 949 006c 0022     		movs	r2, #0
 950 006e 1A70     		strb	r2, [r3]
 365:notoriOS.c    ****         http_body[0] = '\0';
 951              		.loc 1 365 0
 952 0070 A14B     		ldr	r3, .L46+12
 953 0072 0022     		movs	r2, #0
 954 0074 1A70     		strb	r2, [r3]
 366:notoriOS.c    ****         http_route[0] = '\0';
 955              		.loc 1 366 0
 956 0076 A14B     		ldr	r3, .L46+16
 957 0078 0022     		movs	r2, #0
 958 007a 1A70     		strb	r2, [r3]
 367:notoriOS.c    ****         //char *base = "write";
 368:notoriOS.c    ****         
 369:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power and RSCP: received signal
 370:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 371:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 959              		.loc 1 371 0
 960 007c A04B     		ldr	r3, .L46+20
 961 007e 5B69     		ldr	r3, [r3, #20]
 962 0080 07F5A560 		add	r0, r7, #1320
 963 0084 9F4A     		ldr	r2, .L46+24
 964 0086 1421     		movs	r1, #20
 965 0088 FFF7FEFF 		bl	snprintf
 372:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 26


 966              		.loc 1 372 0
 967 008c FFF7FEFF 		bl	getTimeStamp
 968 0090 0246     		mov	r2, r0
 969 0092 07F5A563 		add	r3, r7, #1320
 970 0096 1946     		mov	r1, r3
 971 0098 9B48     		ldr	r0, .L46+28
 972 009a FFF7FEFF 		bl	pushData
 373:notoriOS.c    ****         
 374:notoriOS.c    ****         char s_rscp[DATA_MAX_KEY_LENGTH];
 375:notoriOS.c    ****         snprintf(s_rscp,sizeof(s_rscp),"%d",modem_stats.rscp);
 973              		.loc 1 375 0
 974 009e 984B     		ldr	r3, .L46+20
 975 00a0 9B68     		ldr	r3, [r3, #8]
 976 00a2 07F21450 		addw	r0, r7, #1300
 977 00a6 974A     		ldr	r2, .L46+24
 978 00a8 1421     		movs	r1, #20
 979 00aa FFF7FEFF 		bl	snprintf
 376:notoriOS.c    ****         pushData("rscp", s_rscp, getTimeStamp());
 980              		.loc 1 376 0
 981 00ae FFF7FEFF 		bl	getTimeStamp
 982 00b2 0246     		mov	r2, r0
 983 00b4 07F21453 		addw	r3, r7, #1300
 984 00b8 1946     		mov	r1, r3
 985 00ba 9448     		ldr	r0, .L46+32
 986 00bc FFF7FEFF 		bl	pushData
 377:notoriOS.c    ****         
 378:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 379:notoriOS.c    ****         char c_try_counter[20];
 380:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 987              		.loc 1 380 0
 988 00c0 8A4B     		ldr	r3, .L46
 989 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 990 00c4 07F5A060 		add	r0, r7, #1280
 991 00c8 8E4A     		ldr	r2, .L46+24
 992 00ca 1421     		movs	r1, #20
 993 00cc FFF7FEFF 		bl	snprintf
 381:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 994              		.loc 1 381 0
 995 00d0 FFF7FEFF 		bl	getTimeStamp
 996 00d4 0246     		mov	r2, r0
 997 00d6 07F5A063 		add	r3, r7, #1280
 998 00da 1946     		mov	r1, r3
 999 00dc 8C48     		ldr	r0, .L46+36
 1000 00de FFF7FEFF 		bl	pushData
 382:notoriOS.c    ****         
 383:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
 384:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 385:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 386:notoriOS.c    ****         if(buffer_overflow == false){
 1001              		.loc 1 386 0
 1002 00e2 8C4B     		ldr	r3, .L46+40
 1003 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1004 00e6 83F00103 		eor	r3, r3, #1
 1005 00ea DBB2     		uxtb	r3, r3
 1006 00ec 002B     		cmp	r3, #0
 1007 00ee 16D0     		beq	.L37
 1008              	.LBB3:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 27


 387:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 1009              		.loc 1 387 0
 1010 00f0 FFF7FEFF 		bl	sizeOfDataStack
 1011 00f4 0346     		mov	r3, r0
 1012 00f6 A7F84835 		strh	r3, [r7, #1352]	@ movhi
 388:notoriOS.c    ****             char c_data_count_sent[20];
 389:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 1013              		.loc 1 389 0
 1014 00fa B7F84835 		ldrh	r3, [r7, #1352]
 1015 00fe 07F59B60 		add	r0, r7, #1240
 1016 0102 804A     		ldr	r2, .L46+24
 1017 0104 1421     		movs	r1, #20
 1018 0106 FFF7FEFF 		bl	snprintf
 390:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1019              		.loc 1 390 0
 1020 010a FFF7FEFF 		bl	getTimeStamp
 1021 010e 0246     		mov	r2, r0
 1022 0110 07F59B63 		add	r3, r7, #1240
 1023 0114 1946     		mov	r1, r3
 1024 0116 8048     		ldr	r0, .L46+44
 1025 0118 FFF7FEFF 		bl	pushData
 1026              	.LBE3:
 1027 011c 0FE0     		b	.L38
 1028              	.L37:
 1029              	.LBB4:
 391:notoriOS.c    ****         }else{
 392:notoriOS.c    ****             char c_data_count_sent[20];
 393:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1030              		.loc 1 393 0
 1031 011e 07F2C440 		addw	r0, r7, #1220
 1032 0122 9623     		movs	r3, #150
 1033 0124 774A     		ldr	r2, .L46+24
 1034 0126 1421     		movs	r1, #20
 1035 0128 FFF7FEFF 		bl	snprintf
 394:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1036              		.loc 1 394 0
 1037 012c FFF7FEFF 		bl	getTimeStamp
 1038 0130 0246     		mov	r2, r0
 1039 0132 07F2C443 		addw	r3, r7, #1220
 1040 0136 1946     		mov	r1, r3
 1041 0138 7748     		ldr	r0, .L46+44
 1042 013a FFF7FEFF 		bl	pushData
 1043              	.L38:
 1044              	.LBE4:
 395:notoriOS.c    ****         }
 396:notoriOS.c    ****         
 397:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 398:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 1045              		.loc 1 398 0
 1046 013e FFF7FEFF 		bl	sizeOfDataStackDesired
 1047 0142 0346     		mov	r3, r0
 1048 0144 A7F84635 		strh	r3, [r7, #1350]	@ movhi
 399:notoriOS.c    ****         char c_data_count_desired[20];
 400:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 401:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1049              		.loc 1 401 0
 1050 0148 B7F84635 		ldrh	r3, [r7, #1350]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 28


 1051 014c 013B     		subs	r3, r3, #1
 1052 014e 07F2EC40 		addw	r0, r7, #1260
 1053 0152 6C4A     		ldr	r2, .L46+24
 1054 0154 1421     		movs	r1, #20
 1055 0156 FFF7FEFF 		bl	snprintf
 402:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
 1056              		.loc 1 402 0
 1057 015a FFF7FEFF 		bl	getTimeStamp
 1058 015e 0246     		mov	r2, r0
 1059 0160 07F2EC43 		addw	r3, r7, #1260
 1060 0164 1946     		mov	r1, r3
 1061 0166 6D48     		ldr	r0, .L46+48
 1062 0168 FFF7FEFF 		bl	pushData
 403:notoriOS.c    ****         
 404:notoriOS.c    ****         // Construct HTPP request
 405:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1063              		.loc 1 405 0
 1064 016c 6C49     		ldr	r1, .L46+52
 1065 016e 0020     		movs	r0, #0
 1066 0170 FFF7FEFF 		bl	printNotif
 406:notoriOS.c    ****         
 407:notoriOS.c    ****         // Old influx API
 408:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 409:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1067              		.loc 1 409 0
 1068 0174 6B4B     		ldr	r3, .L46+56
 1069 0176 6C4A     		ldr	r2, .L46+60
 1070 0178 6C49     		ldr	r1, .L46+64
 1071 017a 6048     		ldr	r0, .L46+16
 1072 017c FFF7FEFF 		bl	construct_malcom_route
 410:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1073              		.loc 1 410 0
 1074 0180 5E4A     		ldr	r2, .L46+16
 1075 0182 6B49     		ldr	r1, .L46+68
 1076 0184 0020     		movs	r0, #0
 1077 0186 FFF7FEFF 		bl	printNotif
 411:notoriOS.c    ****         
 412:notoriOS.c    ****         //OLD INFLUX API
 413:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 414:notoriOS.c    ****         construct_malcom_body(http_body);
 1078              		.loc 1 414 0
 1079 018a 5B48     		ldr	r0, .L46+12
 1080 018c FFF7FEFF 		bl	construct_malcom_body
 415:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1081              		.loc 1 415 0
 1082 0190 684B     		ldr	r3, .L46+72
 1083 0192 5B6E     		ldr	r3, [r3, #100]
 1084 0194 684A     		ldr	r2, .L46+76
 1085 0196 0592     		str	r2, [sp, #20]
 1086 0198 0022     		movs	r2, #0
 1087 019a 0492     		str	r2, [sp, #16]
 1088 019c 674A     		ldr	r2, .L46+80
 1089 019e 0392     		str	r2, [sp, #12]
 1090 01a0 674A     		ldr	r2, .L46+84
 1091 01a2 0292     		str	r2, [sp, #8]
 1092 01a4 674A     		ldr	r2, .L46+88
 1093 01a6 0192     		str	r2, [sp, #4]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 29


 1094 01a8 0093     		str	r3, [sp]
 1095 01aa 544B     		ldr	r3, .L46+16
 1096 01ac 614A     		ldr	r2, .L46+72
 1097 01ae 5249     		ldr	r1, .L46+12
 1098 01b0 5048     		ldr	r0, .L46+8
 1099 01b2 FFF7FEFF 		bl	construct_generic_HTTP_request
 416:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1100              		.loc 1 416 0
 1101 01b6 4F4A     		ldr	r2, .L46+8
 1102 01b8 6349     		ldr	r1, .L46+92
 1103 01ba 0020     		movs	r0, #0
 1104 01bc FFF7FEFF 		bl	printNotif
 417:notoriOS.c    ****         
 418:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 419:notoriOS.c    ****         // Open port and begin command line sequence
 420:notoriOS.c    ****         char portConfig[200];
 421:notoriOS.c    ****         uint8 status = 0u;
 1105              		.loc 1 421 0
 1106 01c0 0023     		movs	r3, #0
 1107 01c2 87F84535 		strb	r3, [r7, #1349]
 422:notoriOS.c    ****         
 423:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1108              		.loc 1 423 0
 1109 01c6 5B4B     		ldr	r3, .L46+72
 1110 01c8 5A6E     		ldr	r2, [r3, #100]
 1111 01ca 381D     		adds	r0, r7, #4
 1112 01cc 594B     		ldr	r3, .L46+72
 1113 01ce 0093     		str	r3, [sp]
 1114 01d0 1346     		mov	r3, r2
 1115 01d2 5E4A     		ldr	r2, .L46+96
 1116 01d4 C821     		movs	r1, #200
 1117 01d6 FFF7FEFF 		bl	snprintf
 424:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1118              		.loc 1 424 0
 1119 01da 3B1D     		adds	r3, r7, #4
 1120 01dc 1A46     		mov	r2, r3
 1121 01de 5C49     		ldr	r1, .L46+100
 1122 01e0 0020     		movs	r0, #0
 1123 01e2 FFF7FEFF 		bl	printNotif
 425:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1124              		.loc 1 425 0
 1125 01e6 3B1D     		adds	r3, r7, #4
 1126 01e8 42F21072 		movw	r2, #10000
 1127 01ec 5949     		ldr	r1, .L46+104
 1128 01ee 1846     		mov	r0, r3
 1129 01f0 FFF7FEFF 		bl	at_write_command
 1130 01f4 0346     		mov	r3, r0
 1131 01f6 87F84535 		strb	r3, [r7, #1349]
 426:notoriOS.c    ****         
 427:notoriOS.c    ****         // create character pointer to chunk through the http_request
 428:notoriOS.c    ****         char *chunk;
 429:notoriOS.c    ****         // Set chunk to start where http_request starts
 430:notoriOS.c    ****         chunk = http_request;
 1132              		.loc 1 430 0
 1133 01fa 3E4B     		ldr	r3, .L46+8
 1134 01fc C7F84C35 		str	r3, [r7, #1356]
 431:notoriOS.c    ****         // variable for the number of packets to send
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 30


 432:notoriOS.c    ****         int8 packets;
 433:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1135              		.loc 1 433 0
 1136 0200 3C48     		ldr	r0, .L46+8
 1137 0202 FFF7FEFF 		bl	strlen
 1138 0206 0246     		mov	r2, r0
 1139 0208 534B     		ldr	r3, .L46+108
 1140 020a A3FB0223 		umull	r2, r3, r3, r2
 1141 020e 5B09     		lsrs	r3, r3, #5
 1142 0210 1846     		mov	r0, r3
 1143 0212 FFF7FEFF 		bl	__aeabi_ui2d
 1144 0216 4FF00002 		mov	r2, #0
 1145 021a 504B     		ldr	r3, .L46+112
 1146 021c FFF7FEFF 		bl	nextafter
 1147 0220 0346     		mov	r3, r0
 1148 0222 0C46     		mov	r4, r1
 1149 0224 1846     		mov	r0, r3
 1150 0226 2146     		mov	r1, r4
 1151 0228 FFF7FEFF 		bl	ceil
 1152 022c 0346     		mov	r3, r0
 1153 022e 0C46     		mov	r4, r1
 1154 0230 1846     		mov	r0, r3
 1155 0232 2146     		mov	r1, r4
 1156 0234 FFF7FEFF 		bl	__aeabi_d2iz
 1157 0238 0346     		mov	r3, r0
 1158 023a 87F84435 		strb	r3, [r7, #1348]
 434:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1159              		.loc 1 434 0
 1160 023e 2D48     		ldr	r0, .L46+8
 1161 0240 FFF7FEFF 		bl	strlen
 1162 0244 0346     		mov	r3, r0
 1163 0246 1A46     		mov	r2, r3
 1164 0248 4549     		ldr	r1, .L46+116
 1165 024a 0020     		movs	r0, #0
 1166 024c FFF7FEFF 		bl	printNotif
 435:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1167              		.loc 1 435 0
 1168 0250 97F94435 		ldrsb	r3, [r7, #1348]
 1169 0254 1A46     		mov	r2, r3
 1170 0256 4349     		ldr	r1, .L46+120
 1171 0258 0020     		movs	r0, #0
 1172 025a FFF7FEFF 		bl	printNotif
 1173              	.LBB5:
 436:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 437:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1174              		.loc 1 437 0
 1175 025e 0023     		movs	r3, #0
 1176 0260 87F84B35 		strb	r3, [r7, #1355]
 1177 0264 9AE0     		b	.L39
 1178              	.L42:
 1179              	.LBB6:
 438:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 439:notoriOS.c    ****             char http_chunk[1001];
 440:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 441:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 442:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1180              		.loc 1 442 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 31


 1181 0266 4FF47A72 		mov	r2, #1000
 1182 026a 3F49     		ldr	r1, .L46+124
 1183 026c 3F48     		ldr	r0, .L46+128
 1184 026e FFF7FEFF 		bl	at_write_command
 1185 0272 0346     		mov	r3, r0
 1186 0274 87F84535 		strb	r3, [r7, #1349]
 443:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 444:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1187              		.loc 1 444 0
 1188 0278 07F1CC00 		add	r0, r7, #204
 1189 027c D7F84C35 		ldr	r3, [r7, #1356]
 1190 0280 334A     		ldr	r2, .L46+100
 1191 0282 4FF4FA71 		mov	r1, #500
 1192 0286 FFF7FEFF 		bl	snprintf
 445:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 446:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1193              		.loc 1 446 0
 1194 028a 07F1CC03 		add	r3, r7, #204
 1195 028e 1846     		mov	r0, r3
 1196 0290 FFF7FEFF 		bl	strlen
 1197 0294 0346     		mov	r3, r0
 1198 0296 1A46     		mov	r2, r3
 1199 0298 07F1CC03 		add	r3, r7, #204
 1200 029c 1344     		add	r3, r3, r2
 1201 029e 3449     		ldr	r1, .L46+132
 1202 02a0 1A46     		mov	r2, r3
 1203 02a2 0B46     		mov	r3, r1
 1204 02a4 1B88     		ldrh	r3, [r3]	@ unaligned
 1205 02a6 1380     		strh	r3, [r2]	@ unaligned
 447:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1206              		.loc 1 447 0
 1207 02a8 97F94B25 		ldrsb	r2, [r7, #1355]
 1208 02ac 07F1CC03 		add	r3, r7, #204
 1209 02b0 3049     		ldr	r1, .L46+136
 1210 02b2 0020     		movs	r0, #0
 1211 02b4 FFF7FEFF 		bl	printNotif
 448:notoriOS.c    ****             // Send data to server
 449:notoriOS.c    ****             if ((packet+1) != packets){
 1212              		.loc 1 449 0
 1213 02b8 97F94B35 		ldrsb	r3, [r7, #1355]
 1214 02bc 5A1C     		adds	r2, r3, #1
 1215 02be 97F94435 		ldrsb	r3, [r7, #1348]
 1216 02c2 9A42     		cmp	r2, r3
 1217 02c4 58D0     		beq	.L40
 450:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1218              		.loc 1 450 0
 1219 02c6 07F1CC03 		add	r3, r7, #204
 1220 02ca 41F28832 		movw	r2, #5000
 1221 02ce 2149     		ldr	r1, .L46+104
 1222 02d0 1846     		mov	r0, r3
 1223 02d2 FFF7FEFF 		bl	at_write_command
 1224 02d6 0346     		mov	r3, r0
 1225 02d8 87F84535 		strb	r3, [r7, #1349]
 451:notoriOS.c    ****                 // Move the pointer forward 
 452:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1226              		.loc 1 452 0
 1227 02dc D7F84C35 		ldr	r3, [r7, #1356]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 32


 1228 02e0 03F2F313 		addw	r3, r3, #499
 1229 02e4 C7F84C35 		str	r3, [r7, #1356]
 1230 02e8 51E0     		b	.L41
 1231              	.L47:
 1232 02ea 00BF     		.align	2
 1233              	.L46:
 1234 02ec 00000000 		.word	try_counter
 1235 02f0 98000000 		.word	.LC5
 1236 02f4 00000000 		.word	http_request
 1237 02f8 00000000 		.word	http_body
 1238 02fc 00000000 		.word	http_route
 1239 0300 00000000 		.word	modem_stats
 1240 0304 A8000000 		.word	.LC6
 1241 0308 AC000000 		.word	.LC7
 1242 030c B4000000 		.word	.LC8
 1243 0310 BC000000 		.word	.LC9
 1244 0314 00000000 		.word	buffer_overflow
 1245 0318 C8000000 		.word	.LC10
 1246 031c D8000000 		.word	.LC11
 1247 0320 EC000000 		.word	.LC12
 1248 0324 00010000 		.word	.LC13
 1249 0328 28000000 		.word	modem_info+40
 1250 032c 2C010000 		.word	.LC14
 1251 0330 3C010000 		.word	.LC15
 1252 0334 00000000 		.word	system_settings
 1253 0338 4C010000 		.word	.LC16
 1254 033c 50010000 		.word	.LC17
 1255 0340 54010000 		.word	.LC18
 1256 0344 5C010000 		.word	.LC19
 1257 0348 64010000 		.word	.LC20
 1258 034c 7C010000 		.word	.LC21
 1259 0350 98010000 		.word	.LC22
 1260 0354 9C010000 		.word	.LC23
 1261 0358 D34D6210 		.word	274877907
 1262 035c 00407F40 		.word	1082081280
 1263 0360 A0010000 		.word	.LC24
 1264 0364 B8010000 		.word	.LC25
 1265 0368 CC010000 		.word	.LC26
 1266 036c D0010000 		.word	.LC27
 1267 0370 E0010000 		.word	.LC28
 1268 0374 E4010000 		.word	.LC29
 1269              	.L40:
 453:notoriOS.c    ****             }else{
 454:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
 1270              		.loc 1 454 0
 1271 0378 07F1CC03 		add	r3, r7, #204
 1272 037c 41F28832 		movw	r2, #5000
 1273 0380 2E49     		ldr	r1, .L48
 1274 0382 1846     		mov	r0, r3
 1275 0384 FFF7FEFF 		bl	at_write_command
 1276 0388 0346     		mov	r3, r0
 1277 038a 87F84535 		strb	r3, [r7, #1349]
 1278              	.L41:
 1279              	.LBE6:
 437:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1280              		.loc 1 437 0 discriminator 2
 1281 038e 97F94B35 		ldrsb	r3, [r7, #1355]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 33


 1282 0392 DBB2     		uxtb	r3, r3
 1283 0394 0133     		adds	r3, r3, #1
 1284 0396 DBB2     		uxtb	r3, r3
 1285 0398 87F84B35 		strb	r3, [r7, #1355]
 1286              	.L39:
 437:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1287              		.loc 1 437 0 is_stmt 0 discriminator 1
 1288 039c 97F94B25 		ldrsb	r2, [r7, #1355]
 1289 03a0 97F94435 		ldrsb	r3, [r7, #1348]
 1290 03a4 9A42     		cmp	r2, r3
 1291 03a6 FFF65EAF 		blt	.L42
 1292              	.LBE5:
 455:notoriOS.c    ****             }
 456:notoriOS.c    ****             
 457:notoriOS.c    ****         }
 458:notoriOS.c    ****         
 459:notoriOS.c    ****         // Read received buffer
 460:notoriOS.c    ****         // A good write will return code "OS-OK"
 461:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 462:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 463:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1293              		.loc 1 463 0 is_stmt 1
 1294 03aa 41F28832 		movw	r2, #5000
 1295 03ae 2449     		ldr	r1, .L48+4
 1296 03b0 2448     		ldr	r0, .L48+8
 1297 03b2 FFF7FEFF 		bl	at_write_command
 1298 03b6 0346     		mov	r3, r0
 1299 03b8 87F84535 		strb	r3, [r7, #1349]
 464:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 465:notoriOS.c    ****     
 466:notoriOS.c    ****   
 467:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 468:notoriOS.c    ****         if(status == 1u){
 1300              		.loc 1 468 0
 1301 03bc 97F84535 		ldrb	r3, [r7, #1349]	@ zero_extendqisi2
 1302 03c0 012B     		cmp	r3, #1
 1303 03c2 1DD1     		bne	.L43
 1304              	.LBB7:
 469:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1305              		.loc 1 469 0
 1306 03c4 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 470:notoriOS.c    ****             Clear_Data_Stack();
 1307              		.loc 1 470 0
 1308 03c8 FFF7FEFF 		bl	Clear_Data_Stack
 471:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1309              		.loc 1 471 0
 1310 03cc FFF7FEFF 		bl	getTimeStamp
 1311 03d0 0246     		mov	r2, r0
 1312 03d2 1D4B     		ldr	r3, .L48+12
 1313 03d4 1B68     		ldr	r3, [r3]
 1314 03d6 D31A     		subs	r3, r2, r3
 1315 03d8 C7F84035 		str	r3, [r7, #1344]
 472:notoriOS.c    ****             char s_send_time[10];
 473:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1316              		.loc 1 473 0
 1317 03dc 07F59760 		add	r0, r7, #1208
 1318 03e0 D7F84035 		ldr	r3, [r7, #1344]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 34


 1319 03e4 194A     		ldr	r2, .L48+16
 1320 03e6 0A21     		movs	r1, #10
 1321 03e8 FFF7FEFF 		bl	snprintf
 474:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1322              		.loc 1 474 0
 1323 03ec FFF7FEFF 		bl	getTimeStamp
 1324 03f0 0246     		mov	r2, r0
 1325 03f2 07F59763 		add	r3, r7, #1208
 1326 03f6 1946     		mov	r1, r3
 1327 03f8 1548     		ldr	r0, .L48+20
 1328 03fa FFF7FEFF 		bl	pushData
 1329              	.LBE7:
 1330 03fe 03E0     		b	.L44
 1331              	.L43:
 475:notoriOS.c    ****         }else{
 476:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1332              		.loc 1 476 0
 1333 0400 1449     		ldr	r1, .L48+24
 1334 0402 0220     		movs	r0, #2
 1335 0404 FFF7FEFF 		bl	printNotif
 1336              	.L44:
 477:notoriOS.c    ****         }
 478:notoriOS.c    ****          
 479:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 480:notoriOS.c    ****         long network_time = modem_get_network_time();
 1337              		.loc 1 480 0
 1338 0408 FFF7FEFF 		bl	modem_get_network_time
 1339 040c C7F83C05 		str	r0, [r7, #1340]
 481:notoriOS.c    ****         if(network_time != 0){
 1340              		.loc 1 481 0
 1341 0410 D7F83C35 		ldr	r3, [r7, #1340]
 1342 0414 002B     		cmp	r3, #0
 1343 0416 03D0     		beq	.L45
 482:notoriOS.c    ****            setTime(network_time);
 1344              		.loc 1 482 0
 1345 0418 D7F83C05 		ldr	r0, [r7, #1340]
 1346 041c FFF7FEFF 		bl	setTime
 1347              	.L45:
 483:notoriOS.c    ****         }
 484:notoriOS.c    ****         
 485:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 486:notoriOS.c    ****         // If not -- keep the statck and try next time
 487:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 488:notoriOS.c    ****         modem_power_down();
 1348              		.loc 1 488 0
 1349 0420 FFF7FEFF 		bl	modem_power_down
 489:notoriOS.c    ****         
 490:notoriOS.c    ****         try_counter = 0u;
 1350              		.loc 1 490 0
 1351 0424 0C4B     		ldr	r3, .L48+28
 1352 0426 0022     		movs	r2, #0
 1353 0428 1A70     		strb	r2, [r3]
 491:notoriOS.c    ****         return 0u;
 1354              		.loc 1 491 0
 1355 042a 0023     		movs	r3, #0
 1356 042c 00E0     		b	.L33
 1357              	.L36:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 35


 1358              	.LBE2:
 492:notoriOS.c    ****     }
 493:notoriOS.c    ****       
 494:notoriOS.c    ****       return 1u; // Not done yet
 1359              		.loc 1 494 0
 1360 042e 0123     		movs	r3, #1
 1361              	.L33:
 495:notoriOS.c    **** }
 1362              		.loc 1 495 0 discriminator 1
 1363 0430 1846     		mov	r0, r3
 1364 0432 07F25457 		addw	r7, r7, #1364
 1365              		.cfi_def_cfa_offset 12
 1366 0436 BD46     		mov	sp, r7
 1367              		.cfi_def_cfa_register 13
 1368              		@ sp needed
 1369 0438 90BD     		pop	{r4, r7, pc}
 1370              	.L49:
 1371 043a 00BF     		.align	2
 1372              	.L48:
 1373 043c F4010000 		.word	.LC30
 1374 0440 FC010000 		.word	.LC31
 1375 0444 04020000 		.word	.LC32
 1376 0448 00000000 		.word	modem_start_time_stamp
 1377 044c A8000000 		.word	.LC6
 1378 0450 18020000 		.word	.LC33
 1379 0454 28020000 		.word	.LC34
 1380 0458 00000000 		.word	try_counter
 1381              		.cfi_endproc
 1382              	.LFE74:
 1383              		.size	syncData, .-syncData
 1384              		.section	.text.configureRemoteParams,"ax",%progbits
 1385              		.align	2
 1386              		.global	configureRemoteParams
 1387              		.thumb
 1388              		.thumb_func
 1389              		.type	configureRemoteParams, %function
 1390              	configureRemoteParams:
 1391              	.LFB75:
 496:notoriOS.c    **** 
 497:notoriOS.c    **** // ==============================================
 498:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 499:notoriOS.c    **** // Returns 0 when done
 500:notoriOS.c    **** // ==============================================
 501:notoriOS.c    **** uint8 configureRemoteParams(){
 1392              		.loc 1 501 0
 1393              		.cfi_startproc
 1394              		@ args = 0, pretend = 0, frame = 8
 1395              		@ frame_needed = 1, uses_anonymous_args = 0
 1396 0000 80B5     		push	{r7, lr}
 1397              		.cfi_def_cfa_offset 8
 1398              		.cfi_offset 7, -8
 1399              		.cfi_offset 14, -4
 1400 0002 82B0     		sub	sp, sp, #8
 1401              		.cfi_def_cfa_offset 16
 1402 0004 00AF     		add	r7, sp, #0
 1403              		.cfi_def_cfa_register 7
 502:notoriOS.c    ****     
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 36


 503:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1404              		.loc 1 503 0
 1405 0006 FFF7FEFF 		bl	modem_get_state
 1406 000a 0346     		mov	r3, r0
 1407 000c 002B     		cmp	r3, #0
 1408 000e 02D1     		bne	.L51
 504:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 505:notoriOS.c    ****         modem_power_up();
 1409              		.loc 1 505 0
 1410 0010 FFF7FEFF 		bl	modem_power_up
 1411 0014 11E0     		b	.L52
 1412              	.L51:
 506:notoriOS.c    ****             
 507:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1413              		.loc 1 507 0
 1414 0016 FFF7FEFF 		bl	modem_get_state
 1415 001a 0346     		mov	r3, r0
 1416 001c 042B     		cmp	r3, #4
 1417 001e 0CD1     		bne	.L52
 1418              	.LBB8:
 508:notoriOS.c    ****         
 509:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 510:notoriOS.c    ****         
 511:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 512:notoriOS.c    ****         long network_time = modem_get_network_time();
 1419              		.loc 1 512 0
 1420 0020 FFF7FEFF 		bl	modem_get_network_time
 1421 0024 7860     		str	r0, [r7, #4]
 513:notoriOS.c    ****         if(network_time != 0){
 1422              		.loc 1 513 0
 1423 0026 7B68     		ldr	r3, [r7, #4]
 1424 0028 002B     		cmp	r3, #0
 1425 002a 02D0     		beq	.L53
 514:notoriOS.c    ****             setTime(network_time);
 1426              		.loc 1 514 0
 1427 002c 7868     		ldr	r0, [r7, #4]
 1428 002e FFF7FEFF 		bl	setTime
 1429              	.L53:
 515:notoriOS.c    ****         }
 516:notoriOS.c    ****         
 517:notoriOS.c    ****         // Get GPS coordinates
 518:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 519:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 520:notoriOS.c    ****         modem_power_down();
 1430              		.loc 1 520 0
 1431 0032 FFF7FEFF 		bl	modem_power_down
 521:notoriOS.c    ****         return 0u;
 1432              		.loc 1 521 0
 1433 0036 0023     		movs	r3, #0
 1434 0038 00E0     		b	.L54
 1435              	.L52:
 1436              	.LBE8:
 522:notoriOS.c    ****         
 523:notoriOS.c    ****     }
 524:notoriOS.c    ****     
 525:notoriOS.c    ****     return 1u;
 1437              		.loc 1 525 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 37


 1438 003a 0123     		movs	r3, #1
 1439              	.L54:
 526:notoriOS.c    **** }
 1440              		.loc 1 526 0
 1441 003c 1846     		mov	r0, r3
 1442 003e 0837     		adds	r7, r7, #8
 1443              		.cfi_def_cfa_offset 8
 1444 0040 BD46     		mov	sp, r7
 1445              		.cfi_def_cfa_register 13
 1446              		@ sp needed
 1447 0042 80BD     		pop	{r7, pc}
 1448              		.cfi_endproc
 1449              	.LFE75:
 1450              		.size	configureRemoteParams, .-configureRemoteParams
 1451              		.section	.rodata
 1452 0253 00       		.align	2
 1453              	.LC35:
 1454 0254 256C6400 		.ascii	"%ld\000"
 1455              		.align	2
 1456              	.LC36:
 1457 0258 6D617862 		.ascii	"maxbotix_depth=%s\000"
 1457      6F746978 
 1457      5F646570 
 1457      74683D25 
 1457      7300
 1458 026a 0000     		.align	2
 1459              	.LC37:
 1460 026c 6D617862 		.ascii	"maxbotix_depth\000"
 1460      6F746978 
 1460      5F646570 
 1460      746800
 1461 027b 00       		.align	2
 1462              	.LC38:
 1463 027c 612B00   		.ascii	"a+\000"
 1464 027f 00       		.align	2
 1465              	.LC39:
 1466 0280 206D6178 		.ascii	" maxbotix_depth: \000"
 1466      626F7469 
 1466      785F6465 
 1466      7074683A 
 1466      2000
 1467 0292 0000     		.align	2
 1468              	.LC40:
 1469 0294 2000     		.ascii	" \000"
 1470 0296 0000     		.align	2
 1471              	.LC41:
 1472 0298 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 1472      64206E6F 
 1472      74206765 
 1472      74207661 
 1472      6C696420 
 1473              		.global	__aeabi_f2d
 1474              		.align	2
 1475              	.LC42:
 1476 02c4 252E3266 		.ascii	"%.2f\000"
 1476      00
 1477 02c9 000000   		.align	2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 38


 1478              	.LC43:
 1479 02cc 765F6261 		.ascii	"v_bat=%s\000"
 1479      743D2573 
 1479      00
 1480 02d5 000000   		.align	2
 1481              	.LC44:
 1482 02d8 765F6261 		.ascii	"v_bat\000"
 1482      7400
 1483 02de 0000     		.align	2
 1484              	.LC45:
 1485 02e0 20766261 		.ascii	" vbat: \000"
 1485      743A2000 
 1486              		.align	2
 1487              	.LC46:
 1488 02e8 70726573 		.ascii	"pressure_current=%s\000"
 1488      73757265 
 1488      5F637572 
 1488      72656E74 
 1488      3D257300 
 1489              		.align	2
 1490              	.LC47:
 1491 02fc 70726573 		.ascii	"pressure_current\000"
 1491      73757265 
 1491      5F637572 
 1491      72656E74 
 1491      00
 1492 030d 000000   		.align	2
 1493              	.LC48:
 1494 0310 20707265 		.ascii	" pressure_current: \000"
 1494      73737572 
 1494      655F6375 
 1494      7272656E 
 1494      743A2000 
 1495              		.align	2
 1496              	.LC49:
 1497 0324 70726573 		.ascii	"pressure_depth=%s\000"
 1497      73757265 
 1497      5F646570 
 1497      74683D25 
 1497      7300
 1498 0336 0000     		.align	2
 1499              	.LC50:
 1500 0338 70726573 		.ascii	"pressure_depth\000"
 1500      73757265 
 1500      5F646570 
 1500      746800
 1501 0347 00       		.align	2
 1502              	.LC51:
 1503 0348 20707265 		.ascii	" pressure_depth: \000"
 1503      73737572 
 1503      655F6465 
 1503      7074683A 
 1503      2000
 1504 035a 0000     		.align	2
 1505              	.LC52:
 1506 035c 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1506      64206E6F 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 39


 1506      74206765 
 1506      74207661 
 1506      6C696420 
 1507 0383 00       		.align	2
 1508              	.LC53:
 1509 0384 256600   		.ascii	"%f\000"
 1510 0387 00       		.align	2
 1511              	.LC54:
 1512 0388 70757368 		.ascii	"pushed: dissolved_oxygen_mg_L=%s\000"
 1512      65643A20 
 1512      64697373 
 1512      6F6C7665 
 1512      645F6F78 
 1513 03a9 000000   		.align	2
 1514              	.LC55:
 1515 03ac 64697373 		.ascii	"dissolved_oxygen_mg_L\000"
 1515      6F6C7665 
 1515      645F6F78 
 1515      7967656E 
 1515      5F6D675F 
 1516 03c2 0000     		.align	2
 1517              	.LC56:
 1518 03c4 20646973 		.ascii	" dissolved_oxygen_mg_L: \000"
 1518      736F6C76 
 1518      65645F6F 
 1518      78796765 
 1518      6E5F6D67 
 1519 03dd 000000   		.align	2
 1520              	.LC57:
 1521 03e0 70757368 		.ascii	"pushed: temperature_C=%s\000"
 1521      65643A20 
 1521      74656D70 
 1521      65726174 
 1521      7572655F 
 1522 03f9 000000   		.align	2
 1523              	.LC58:
 1524 03fc 74656D70 		.ascii	"temperature_C\000"
 1524      65726174 
 1524      7572655F 
 1524      4300
 1525 040a 0000     		.align	2
 1526              	.LC59:
 1527 040c 2074656D 		.ascii	" temperature_C: \000"
 1527      70657261 
 1527      74757265 
 1527      5F433A20 
 1527      00
 1528              		.section	.text.makeMeasurements,"ax",%progbits
 1529              		.align	2
 1530              		.global	makeMeasurements
 1531              		.thumb
 1532              		.thumb_func
 1533              		.type	makeMeasurements, %function
 1534              	makeMeasurements:
 1535              	.LFB76:
 527:notoriOS.c    **** 
 528:notoriOS.c    **** 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 40


 529:notoriOS.c    **** // ==============================================
 530:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 531:notoriOS.c    **** // Returns 0 when finished
 532:notoriOS.c    **** // ==============================================
 533:notoriOS.c    **** uint8 makeMeasurements(){
 1536              		.loc 1 533 0
 1537              		.cfi_startproc
 1538              		@ args = 0, pretend = 0, frame = 216
 1539              		@ frame_needed = 1, uses_anonymous_args = 0
 1540 0000 90B5     		push	{r4, r7, lr}
 1541              		.cfi_def_cfa_offset 12
 1542              		.cfi_offset 4, -12
 1543              		.cfi_offset 7, -8
 1544              		.cfi_offset 14, -4
 1545 0002 B9B0     		sub	sp, sp, #228
 1546              		.cfi_def_cfa_offset 240
 1547 0004 02AF     		add	r7, sp, #8
 1548              		.cfi_def_cfa 7, 232
 534:notoriOS.c    ****     
 535:notoriOS.c    ****     // Get clock time and save to timeStamp
 536:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1549              		.loc 1 536 0
 1550 0006 FFF7FEFF 		bl	getTimeStamp
 1551 000a C7F8D400 		str	r0, [r7, #212]
 537:notoriOS.c    ****     char c_timeStamp[32];
 538:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1552              		.loc 1 538 0
 1553 000e 07F1B400 		add	r0, r7, #180
 1554 0012 D7F8D430 		ldr	r3, [r7, #212]
 1555 0016 BF4A     		ldr	r2, .L64
 1556 0018 2021     		movs	r1, #32
 1557 001a FFF7FEFF 		bl	snprintf
 539:notoriOS.c    ****     
 540:notoriOS.c    ****     // Holds string for value that will be written 
 541:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 542:notoriOS.c    ****     
 543:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 544:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 1558              		.loc 1 544 0
 1559 001e BE4B     		ldr	r3, .L64+4
 1560 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1561 0022 002B     		cmp	r3, #0
 1562 0024 3CD1     		bne	.L56
 1563              	.LBB9:
 545:notoriOS.c    ****         
 546:notoriOS.c    ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
 547:notoriOS.c    ****         level_sensor_t m_level_sensor;
 548:notoriOS.c    ****         
 549:notoriOS.c    ****         // Take level sensor readings and save them to m_level_sensor
 550:notoriOS.c    ****         m_level_sensor = level_sensor_take_reading();
 1564              		.loc 1 550 0
 1565 0026 07F17003 		add	r3, r7, #112
 1566 002a 1846     		mov	r0, r3
 1567 002c FFF7FEFF 		bl	level_sensor_take_reading
 551:notoriOS.c    ****     
 552:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 553:notoriOS.c    ****         if(m_level_sensor.num_valid_readings > 0){
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 41


 1568              		.loc 1 553 0
 1569 0030 97F88830 		ldrb	r3, [r7, #136]	@ zero_extendqisi2
 1570 0034 002B     		cmp	r3, #0
 1571 0036 2FD0     		beq	.L57
 554:notoriOS.c    ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 1572              		.loc 1 554 0
 1573 0038 B7F98630 		ldrsh	r3, [r7, #134]
 1574 003c 07F1A000 		add	r0, r7, #160
 1575 0040 B64A     		ldr	r2, .L64+8
 1576 0042 1421     		movs	r1, #20
 1577 0044 FFF7FEFF 		bl	snprintf
 555:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 1578              		.loc 1 555 0
 1579 0048 07F1A003 		add	r3, r7, #160
 1580 004c 1A46     		mov	r2, r3
 1581 004e B449     		ldr	r1, .L64+12
 1582 0050 0020     		movs	r0, #0
 1583 0052 FFF7FEFF 		bl	printNotif
 556:notoriOS.c    ****             pushData("maxbotix_depth",value,timeStamp);
 1584              		.loc 1 556 0
 1585 0056 07F1A003 		add	r3, r7, #160
 1586 005a D7F8D420 		ldr	r2, [r7, #212]
 1587 005e 1946     		mov	r1, r3
 1588 0060 B048     		ldr	r0, .L64+16
 1589 0062 FFF7FEFF 		bl	pushData
 557:notoriOS.c    ****             
 558:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 559:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1590              		.loc 1 559 0
 1591 0066 07F1B403 		add	r3, r7, #180
 1592 006a 1A46     		mov	r2, r3
 1593 006c AE49     		ldr	r1, .L64+20
 1594 006e AF48     		ldr	r0, .L64+24
 1595 0070 FFF7FEFF 		bl	SD_write
 560:notoriOS.c    ****             SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 1596              		.loc 1 560 0
 1597 0074 AE4A     		ldr	r2, .L64+28
 1598 0076 AC49     		ldr	r1, .L64+20
 1599 0078 AC48     		ldr	r0, .L64+24
 1600 007a FFF7FEFF 		bl	SD_write
 561:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1601              		.loc 1 561 0
 1602 007e 07F1A003 		add	r3, r7, #160
 1603 0082 1A46     		mov	r2, r3
 1604 0084 A849     		ldr	r1, .L64+20
 1605 0086 A948     		ldr	r0, .L64+24
 1606 0088 FFF7FEFF 		bl	SD_write
 562:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1607              		.loc 1 562 0
 1608 008c A94A     		ldr	r2, .L64+32
 1609 008e A649     		ldr	r1, .L64+20
 1610 0090 A648     		ldr	r0, .L64+24
 1611 0092 FFF7FEFF 		bl	SD_write
 1612 0096 03E0     		b	.L56
 1613              	.L57:
 563:notoriOS.c    ****         }else{
 564:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 42


 1614              		.loc 1 564 0
 1615 0098 A749     		ldr	r1, .L64+36
 1616 009a 0220     		movs	r0, #2
 1617 009c FFF7FEFF 		bl	printNotif
 1618              	.L56:
 1619              	.LBE9:
 565:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 566:notoriOS.c    ****         }
 567:notoriOS.c    ****     }
 568:notoriOS.c    ****     
 569:notoriOS.c    ****     
 570:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 571:notoriOS.c    ****     voltage_t m_voltage;
 572:notoriOS.c    ****     
 573:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 574:notoriOS.c    ****     m_voltage = voltage_take_readings();
 1620              		.loc 1 574 0
 1621 00a0 07F18C03 		add	r3, r7, #140
 1622 00a4 1846     		mov	r0, r3
 1623 00a6 FFF7FEFF 		bl	voltage_take_readings
 575:notoriOS.c    ****     
 576:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 577:notoriOS.c    ****     if(m_voltage.valid){
 1624              		.loc 1 577 0
 1625 00aa 97F89C30 		ldrb	r3, [r7, #156]	@ zero_extendqisi2
 1626 00ae 002B     		cmp	r3, #0
 1627 00b0 00F0B480 		beq	.L59
 578:notoriOS.c    ****         // battery voltage data
 579:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 1628              		.loc 1 579 0
 1629 00b4 D7F88C30 		ldr	r3, [r7, #140]	@ float
 1630 00b8 1846     		mov	r0, r3
 1631 00ba FFF7FEFF 		bl	__aeabi_f2d
 1632 00be 0346     		mov	r3, r0
 1633 00c0 0C46     		mov	r4, r1
 1634 00c2 07F1A000 		add	r0, r7, #160
 1635 00c6 CDE90034 		strd	r3, [sp]
 1636 00ca 9C4A     		ldr	r2, .L64+40
 1637 00cc 1421     		movs	r1, #20
 1638 00ce FFF7FEFF 		bl	snprintf
 580:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 1639              		.loc 1 580 0
 1640 00d2 07F1A003 		add	r3, r7, #160
 1641 00d6 1A46     		mov	r2, r3
 1642 00d8 9949     		ldr	r1, .L64+44
 1643 00da 0020     		movs	r0, #0
 1644 00dc FFF7FEFF 		bl	printNotif
 581:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
 1645              		.loc 1 581 0
 1646 00e0 07F1A003 		add	r3, r7, #160
 1647 00e4 D7F8D420 		ldr	r2, [r7, #212]
 1648 00e8 1946     		mov	r1, r3
 1649 00ea 9648     		ldr	r0, .L64+48
 1650 00ec FFF7FEFF 		bl	pushData
 582:notoriOS.c    ****         
 583:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 584:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 43


 1651              		.loc 1 584 0
 1652 00f0 904A     		ldr	r2, .L64+32
 1653 00f2 8D49     		ldr	r1, .L64+20
 1654 00f4 8D48     		ldr	r0, .L64+24
 1655 00f6 FFF7FEFF 		bl	SD_write
 585:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 1656              		.loc 1 585 0
 1657 00fa 07F1B403 		add	r3, r7, #180
 1658 00fe 1A46     		mov	r2, r3
 1659 0100 8949     		ldr	r1, .L64+20
 1660 0102 8A48     		ldr	r0, .L64+24
 1661 0104 FFF7FEFF 		bl	SD_write
 586:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 1662              		.loc 1 586 0
 1663 0108 8F4A     		ldr	r2, .L64+52
 1664 010a 8749     		ldr	r1, .L64+20
 1665 010c 8748     		ldr	r0, .L64+24
 1666 010e FFF7FEFF 		bl	SD_write
 587:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1667              		.loc 1 587 0
 1668 0112 07F1A003 		add	r3, r7, #160
 1669 0116 1A46     		mov	r2, r3
 1670 0118 8349     		ldr	r1, .L64+20
 1671 011a 8448     		ldr	r0, .L64+24
 1672 011c FFF7FEFF 		bl	SD_write
 588:notoriOS.c    ****         
 589:notoriOS.c    ****         // If node type is green infrastructure node, take pressure transducer measurements
 590:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE){
 1673              		.loc 1 590 0
 1674 0120 7D4B     		ldr	r3, .L64+4
 1675 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1676 0124 012B     		cmp	r3, #1
 1677 0126 7DD1     		bne	.L61
 1678              	.LBB10:
 591:notoriOS.c    ****             
 592:notoriOS.c    ****             // pressure transducer voltage (V) data
 593:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 594:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 595:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 596:notoriOS.c    ****             
 597:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 598:notoriOS.c    ****             pressure_t m_pressure;
 599:notoriOS.c    ****             
 600:notoriOS.c    ****             // Make pressure transducer calculators for current and depth
 601:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 1679              		.loc 1 601 0
 1680 0128 07F16004 		add	r4, r7, #96
 1681 012c 6A46     		mov	r2, sp
 1682 012e 07F19803 		add	r3, r7, #152
 1683 0132 93E80300 		ldmia	r3, {r0, r1}
 1684 0136 82E80300 		stmia	r2, {r0, r1}
 1685 013a 07F18C03 		add	r3, r7, #140
 1686 013e 0ECB     		ldmia	r3, {r1, r2, r3}
 1687 0140 2046     		mov	r0, r4
 1688 0142 FFF7FEFF 		bl	pressure_calculations
 602:notoriOS.c    ****             
 603:notoriOS.c    ****             // pressure transducer current (mA) data
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 44


 604:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 1689              		.loc 1 604 0
 1690 0146 BB6E     		ldr	r3, [r7, #104]	@ float
 1691 0148 1846     		mov	r0, r3
 1692 014a FFF7FEFF 		bl	__aeabi_f2d
 1693 014e 0346     		mov	r3, r0
 1694 0150 0C46     		mov	r4, r1
 1695 0152 07F1A000 		add	r0, r7, #160
 1696 0156 CDE90034 		strd	r3, [sp]
 1697 015a 784A     		ldr	r2, .L64+40
 1698 015c 1421     		movs	r1, #20
 1699 015e FFF7FEFF 		bl	snprintf
 605:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 1700              		.loc 1 605 0
 1701 0162 07F1A003 		add	r3, r7, #160
 1702 0166 1A46     		mov	r2, r3
 1703 0168 7849     		ldr	r1, .L64+56
 1704 016a 0020     		movs	r0, #0
 1705 016c FFF7FEFF 		bl	printNotif
 606:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 1706              		.loc 1 606 0
 1707 0170 07F1A003 		add	r3, r7, #160
 1708 0174 D7F8D420 		ldr	r2, [r7, #212]
 1709 0178 1946     		mov	r1, r3
 1710 017a 7548     		ldr	r0, .L64+60
 1711 017c FFF7FEFF 		bl	pushData
 607:notoriOS.c    ****             
 608:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 609:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1712              		.loc 1 609 0
 1713 0180 6C4A     		ldr	r2, .L64+32
 1714 0182 6949     		ldr	r1, .L64+20
 1715 0184 6948     		ldr	r0, .L64+24
 1716 0186 FFF7FEFF 		bl	SD_write
 610:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1717              		.loc 1 610 0
 1718 018a 07F1B403 		add	r3, r7, #180
 1719 018e 1A46     		mov	r2, r3
 1720 0190 6549     		ldr	r1, .L64+20
 1721 0192 6648     		ldr	r0, .L64+24
 1722 0194 FFF7FEFF 		bl	SD_write
 611:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 1723              		.loc 1 611 0
 1724 0198 6E4A     		ldr	r2, .L64+64
 1725 019a 6349     		ldr	r1, .L64+20
 1726 019c 6348     		ldr	r0, .L64+24
 1727 019e FFF7FEFF 		bl	SD_write
 612:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1728              		.loc 1 612 0
 1729 01a2 07F1A003 		add	r3, r7, #160
 1730 01a6 1A46     		mov	r2, r3
 1731 01a8 5F49     		ldr	r1, .L64+20
 1732 01aa 6048     		ldr	r0, .L64+24
 1733 01ac FFF7FEFF 		bl	SD_write
 613:notoriOS.c    ****             
 614:notoriOS.c    ****             // pressure transducer depth (ft) data
 615:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 45


 1734              		.loc 1 615 0
 1735 01b0 FB6E     		ldr	r3, [r7, #108]	@ float
 1736 01b2 1846     		mov	r0, r3
 1737 01b4 FFF7FEFF 		bl	__aeabi_f2d
 1738 01b8 0346     		mov	r3, r0
 1739 01ba 0C46     		mov	r4, r1
 1740 01bc 07F1A000 		add	r0, r7, #160
 1741 01c0 CDE90034 		strd	r3, [sp]
 1742 01c4 5D4A     		ldr	r2, .L64+40
 1743 01c6 1421     		movs	r1, #20
 1744 01c8 FFF7FEFF 		bl	snprintf
 616:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 1745              		.loc 1 616 0
 1746 01cc 07F1A003 		add	r3, r7, #160
 1747 01d0 1A46     		mov	r2, r3
 1748 01d2 6149     		ldr	r1, .L64+68
 1749 01d4 0020     		movs	r0, #0
 1750 01d6 FFF7FEFF 		bl	printNotif
 617:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 1751              		.loc 1 617 0
 1752 01da 07F1A003 		add	r3, r7, #160
 1753 01de D7F8D420 		ldr	r2, [r7, #212]
 1754 01e2 1946     		mov	r1, r3
 1755 01e4 5D48     		ldr	r0, .L64+72
 1756 01e6 FFF7FEFF 		bl	pushData
 618:notoriOS.c    ****             
 619:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 620:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1757              		.loc 1 620 0
 1758 01ea 524A     		ldr	r2, .L64+32
 1759 01ec 4E49     		ldr	r1, .L64+20
 1760 01ee 4F48     		ldr	r0, .L64+24
 1761 01f0 FFF7FEFF 		bl	SD_write
 621:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1762              		.loc 1 621 0
 1763 01f4 07F1B403 		add	r3, r7, #180
 1764 01f8 1A46     		mov	r2, r3
 1765 01fa 4B49     		ldr	r1, .L64+20
 1766 01fc 4B48     		ldr	r0, .L64+24
 1767 01fe FFF7FEFF 		bl	SD_write
 622:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
 1768              		.loc 1 622 0
 1769 0202 574A     		ldr	r2, .L64+76
 1770 0204 4849     		ldr	r1, .L64+20
 1771 0206 4948     		ldr	r0, .L64+24
 1772 0208 FFF7FEFF 		bl	SD_write
 623:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1773              		.loc 1 623 0
 1774 020c 07F1A003 		add	r3, r7, #160
 1775 0210 1A46     		mov	r2, r3
 1776 0212 4549     		ldr	r1, .L64+20
 1777 0214 4548     		ldr	r0, .L64+24
 1778 0216 FFF7FEFF 		bl	SD_write
 1779 021a 03E0     		b	.L61
 1780              	.L59:
 1781              	.LBE10:
 624:notoriOS.c    ****         }    
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 46


 625:notoriOS.c    ****     }else{
 626:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 1782              		.loc 1 626 0
 1783 021c 5149     		ldr	r1, .L64+80
 1784 021e 0220     		movs	r0, #2
 1785 0220 FFF7FEFF 		bl	printNotif
 1786              	.L61:
 627:notoriOS.c    ****     }
 628:notoriOS.c    ****     
 629:notoriOS.c    ****     // If node type is dissolved oxygen, take DO measuremetns
 630:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_WQ){
 1787              		.loc 1 630 0
 1788 0224 3C4B     		ldr	r3, .L64+4
 1789 0226 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1790 0228 022B     		cmp	r3, #2
 1791 022a 6DD1     		bne	.L62
 1792              	.LBB11:
 631:notoriOS.c    ****        
 632:notoriOS.c    ****         // wq_sensor_t is a new data type we defined in level_sensor.h. We then use that data type 
 633:notoriOS.c    ****         wq_sensors_t m_wq_sensors;
 634:notoriOS.c    ****         
 635:notoriOS.c    ****         // Take readings from the wq sensors and save them to m_wq_sensors
 636:notoriOS.c    ****         m_wq_sensors = wq_take_reading();
 1793              		.loc 1 636 0
 1794 022c 3B46     		mov	r3, r7
 1795 022e 1846     		mov	r0, r3
 1796 0230 FFF7FEFF 		bl	wq_take_reading
 637:notoriOS.c    ****         
 638:notoriOS.c    ****         // Print the wq sensor readings and push the data to the data wheel
 639:notoriOS.c    ****         snprintf(value,sizeof(value),"%f",m_wq_sensors.do_reading);
 1797              		.loc 1 639 0
 1798 0234 FB6A     		ldr	r3, [r7, #44]	@ float
 1799 0236 1846     		mov	r0, r3
 1800 0238 FFF7FEFF 		bl	__aeabi_f2d
 1801 023c 0346     		mov	r3, r0
 1802 023e 0C46     		mov	r4, r1
 1803 0240 07F1A000 		add	r0, r7, #160
 1804 0244 CDE90034 		strd	r3, [sp]
 1805 0248 474A     		ldr	r2, .L64+84
 1806 024a 1421     		movs	r1, #20
 1807 024c FFF7FEFF 		bl	snprintf
 640:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"pushed: dissolved_oxygen_mg_L=%s",value);
 1808              		.loc 1 640 0
 1809 0250 07F1A003 		add	r3, r7, #160
 1810 0254 1A46     		mov	r2, r3
 1811 0256 4549     		ldr	r1, .L64+88
 1812 0258 0020     		movs	r0, #0
 1813 025a FFF7FEFF 		bl	printNotif
 641:notoriOS.c    ****         pushData("dissolved_oxygen_mg_L",value,timeStamp);
 1814              		.loc 1 641 0
 1815 025e 07F1A003 		add	r3, r7, #160
 1816 0262 D7F8D420 		ldr	r2, [r7, #212]
 1817 0266 1946     		mov	r1, r3
 1818 0268 4148     		ldr	r0, .L64+92
 1819 026a FFF7FEFF 		bl	pushData
 642:notoriOS.c    ****             
 643:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 47


 644:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 1820              		.loc 1 644 0
 1821 026e 07F1B403 		add	r3, r7, #180
 1822 0272 1A46     		mov	r2, r3
 1823 0274 2C49     		ldr	r1, .L64+20
 1824 0276 2D48     		ldr	r0, .L64+24
 1825 0278 FFF7FEFF 		bl	SD_write
 645:notoriOS.c    ****         SD_write(Data_fileName, "a+", " dissolved_oxygen_mg_L: ");
 1826              		.loc 1 645 0
 1827 027c 3D4A     		ldr	r2, .L64+96
 1828 027e 2A49     		ldr	r1, .L64+20
 1829 0280 2A48     		ldr	r0, .L64+24
 1830 0282 FFF7FEFF 		bl	SD_write
 646:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1831              		.loc 1 646 0
 1832 0286 07F1A003 		add	r3, r7, #160
 1833 028a 1A46     		mov	r2, r3
 1834 028c 2649     		ldr	r1, .L64+20
 1835 028e 2748     		ldr	r0, .L64+24
 1836 0290 FFF7FEFF 		bl	SD_write
 647:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 1837              		.loc 1 647 0
 1838 0294 274A     		ldr	r2, .L64+32
 1839 0296 2449     		ldr	r1, .L64+20
 1840 0298 2448     		ldr	r0, .L64+24
 1841 029a FFF7FEFF 		bl	SD_write
 648:notoriOS.c    ****         
 649:notoriOS.c    ****    
 650:notoriOS.c    ****         snprintf(value,sizeof(value),"%f",m_wq_sensors.temp_reading);
 1842              		.loc 1 650 0
 1843 029e FB6D     		ldr	r3, [r7, #92]	@ float
 1844 02a0 1846     		mov	r0, r3
 1845 02a2 FFF7FEFF 		bl	__aeabi_f2d
 1846 02a6 0346     		mov	r3, r0
 1847 02a8 0C46     		mov	r4, r1
 1848 02aa 07F1A000 		add	r0, r7, #160
 1849 02ae CDE90034 		strd	r3, [sp]
 1850 02b2 2D4A     		ldr	r2, .L64+84
 1851 02b4 1421     		movs	r1, #20
 1852 02b6 FFF7FEFF 		bl	snprintf
 651:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"pushed: temperature_C=%s",value);
 1853              		.loc 1 651 0
 1854 02ba 07F1A003 		add	r3, r7, #160
 1855 02be 1A46     		mov	r2, r3
 1856 02c0 2D49     		ldr	r1, .L64+100
 1857 02c2 0020     		movs	r0, #0
 1858 02c4 FFF7FEFF 		bl	printNotif
 652:notoriOS.c    ****         pushData("temperature_C",value,timeStamp);
 1859              		.loc 1 652 0
 1860 02c8 07F1A003 		add	r3, r7, #160
 1861 02cc D7F8D420 		ldr	r2, [r7, #212]
 1862 02d0 1946     		mov	r1, r3
 1863 02d2 2A48     		ldr	r0, .L64+104
 1864 02d4 FFF7FEFF 		bl	pushData
 653:notoriOS.c    ****             
 654:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 655:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 48


 1865              		.loc 1 655 0
 1866 02d8 07F1B403 		add	r3, r7, #180
 1867 02dc 1A46     		mov	r2, r3
 1868 02de 1249     		ldr	r1, .L64+20
 1869 02e0 1248     		ldr	r0, .L64+24
 1870 02e2 FFF7FEFF 		bl	SD_write
 656:notoriOS.c    ****         SD_write(Data_fileName, "a+", " temperature_C: ");
 1871              		.loc 1 656 0
 1872 02e6 264A     		ldr	r2, .L64+108
 1873 02e8 0F49     		ldr	r1, .L64+20
 1874 02ea 1048     		ldr	r0, .L64+24
 1875 02ec FFF7FEFF 		bl	SD_write
 657:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1876              		.loc 1 657 0
 1877 02f0 07F1A003 		add	r3, r7, #160
 1878 02f4 1A46     		mov	r2, r3
 1879 02f6 0C49     		ldr	r1, .L64+20
 1880 02f8 0C48     		ldr	r0, .L64+24
 1881 02fa FFF7FEFF 		bl	SD_write
 658:notoriOS.c    ****         SD_write(Data_fileName, "a+", " "); 
 1882              		.loc 1 658 0
 1883 02fe 0D4A     		ldr	r2, .L64+32
 1884 0300 0949     		ldr	r1, .L64+20
 1885 0302 0A48     		ldr	r0, .L64+24
 1886 0304 FFF7FEFF 		bl	SD_write
 1887              	.L62:
 1888              	.LBE11:
 659:notoriOS.c    ****     }
 660:notoriOS.c    ****     
 661:notoriOS.c    ****     return 0u;
 1889              		.loc 1 661 0
 1890 0308 0023     		movs	r3, #0
 662:notoriOS.c    **** }
 1891              		.loc 1 662 0
 1892 030a 1846     		mov	r0, r3
 1893 030c DC37     		adds	r7, r7, #220
 1894              		.cfi_def_cfa_offset 12
 1895 030e BD46     		mov	sp, r7
 1896              		.cfi_def_cfa_register 13
 1897              		@ sp needed
 1898 0310 90BD     		pop	{r4, r7, pc}
 1899              	.L65:
 1900 0312 00BF     		.align	2
 1901              	.L64:
 1902 0314 54020000 		.word	.LC35
 1903 0318 00000000 		.word	updatable_parameters
 1904 031c A8000000 		.word	.LC6
 1905 0320 58020000 		.word	.LC36
 1906 0324 6C020000 		.word	.LC37
 1907 0328 7C020000 		.word	.LC38
 1908 032c 00000000 		.word	Data_fileName
 1909 0330 80020000 		.word	.LC39
 1910 0334 94020000 		.word	.LC40
 1911 0338 98020000 		.word	.LC41
 1912 033c C4020000 		.word	.LC42
 1913 0340 CC020000 		.word	.LC43
 1914 0344 D8020000 		.word	.LC44
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 49


 1915 0348 E0020000 		.word	.LC45
 1916 034c E8020000 		.word	.LC46
 1917 0350 FC020000 		.word	.LC47
 1918 0354 10030000 		.word	.LC48
 1919 0358 24030000 		.word	.LC49
 1920 035c 38030000 		.word	.LC50
 1921 0360 48030000 		.word	.LC51
 1922 0364 5C030000 		.word	.LC52
 1923 0368 84030000 		.word	.LC53
 1924 036c 88030000 		.word	.LC54
 1925 0370 AC030000 		.word	.LC55
 1926 0374 C4030000 		.word	.LC56
 1927 0378 E0030000 		.word	.LC57
 1928 037c FC030000 		.word	.LC58
 1929 0380 0C040000 		.word	.LC59
 1930              		.cfi_endproc
 1931              	.LFE76:
 1932              		.size	makeMeasurements, .-makeMeasurements
 1933              		.section	.rodata
 1934 041d 000000   		.align	2
 1935              	.LC60:
 1936 0420 4572726F 		.ascii	"Error setting system time.\000"
 1936      72207365 
 1936      7474696E 
 1936      67207379 
 1936      7374656D 
 1937              		.section	.text.setTime,"ax",%progbits
 1938              		.align	2
 1939              		.global	setTime
 1940              		.thumb
 1941              		.thumb_func
 1942              		.type	setTime, %function
 1943              	setTime:
 1944              	.LFB77:
 663:notoriOS.c    **** 
 664:notoriOS.c    **** // ==============================================
 665:notoriOS.c    **** // Set the system time
 666:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 667:notoriOS.c    **** // ==============================================
 668:notoriOS.c    **** uint8 setTime(long timeStamp){
 1945              		.loc 1 668 0
 1946              		.cfi_startproc
 1947              		@ args = 0, pretend = 0, frame = 24
 1948              		@ frame_needed = 1, uses_anonymous_args = 0
 1949 0000 80B5     		push	{r7, lr}
 1950              		.cfi_def_cfa_offset 8
 1951              		.cfi_offset 7, -8
 1952              		.cfi_offset 14, -4
 1953 0002 86B0     		sub	sp, sp, #24
 1954              		.cfi_def_cfa_offset 32
 1955 0004 00AF     		add	r7, sp, #0
 1956              		.cfi_def_cfa_register 7
 1957 0006 7860     		str	r0, [r7, #4]
 669:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 670:notoriOS.c    ****     if(timeStamp <=0){
 1958              		.loc 1 670 0
 1959 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 50


 1960 000a 002B     		cmp	r3, #0
 1961 000c 05DC     		bgt	.L67
 671:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 1962              		.loc 1 671 0
 1963 000e 1849     		ldr	r1, .L69
 1964 0010 0220     		movs	r0, #2
 1965 0012 FFF7FEFF 		bl	printNotif
 672:notoriOS.c    ****         return 0;  
 1966              		.loc 1 672 0
 1967 0016 0023     		movs	r3, #0
 1968 0018 25E0     		b	.L68
 1969              	.L67:
 673:notoriOS.c    ****     }
 674:notoriOS.c    ****     // Create a new pointer t of data structure tm
 675:notoriOS.c    ****     struct tm * t;
 676:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 677:notoriOS.c    ****     t = gmtime(&timeStamp);
 1970              		.loc 1 677 0
 1971 001a 3B1D     		adds	r3, r7, #4
 1972 001c 1846     		mov	r0, r3
 1973 001e FFF7FEFF 		bl	gmtime
 1974 0022 7861     		str	r0, [r7, #20]
 678:notoriOS.c    ****     
 679:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 680:notoriOS.c    ****     RTC_TIME_DATE localTime;
 681:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 1975              		.loc 1 681 0
 1976 0024 7B69     		ldr	r3, [r7, #20]
 1977 0026 1B68     		ldr	r3, [r3]
 1978 0028 DBB2     		uxtb	r3, r3
 1979 002a 3B72     		strb	r3, [r7, #8]
 682:notoriOS.c    ****     localTime.Min = t->tm_min;
 1980              		.loc 1 682 0
 1981 002c 7B69     		ldr	r3, [r7, #20]
 1982 002e 5B68     		ldr	r3, [r3, #4]
 1983 0030 DBB2     		uxtb	r3, r3
 1984 0032 7B72     		strb	r3, [r7, #9]
 683:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 1985              		.loc 1 683 0
 1986 0034 7B69     		ldr	r3, [r7, #20]
 1987 0036 9B68     		ldr	r3, [r3, #8]
 1988 0038 DBB2     		uxtb	r3, r3
 1989 003a BB72     		strb	r3, [r7, #10]
 684:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 1990              		.loc 1 684 0
 1991 003c 7B69     		ldr	r3, [r7, #20]
 1992 003e 5B69     		ldr	r3, [r3, #20]
 1993 0040 9BB2     		uxth	r3, r3
 1994 0042 03F26C73 		addw	r3, r3, #1900
 1995 0046 9BB2     		uxth	r3, r3
 1996 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 685:notoriOS.c    ****     localTime.Month = t->tm_mon;
 1997              		.loc 1 685 0
 1998 004a 7B69     		ldr	r3, [r7, #20]
 1999 004c 1B69     		ldr	r3, [r3, #16]
 2000 004e DBB2     		uxtb	r3, r3
 2001 0050 3B74     		strb	r3, [r7, #16]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 51


 686:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 2002              		.loc 1 686 0
 2003 0052 7B69     		ldr	r3, [r7, #20]
 2004 0054 DB68     		ldr	r3, [r3, #12]
 2005 0056 DBB2     		uxtb	r3, r3
 2006 0058 3B73     		strb	r3, [r7, #12]
 687:notoriOS.c    **** 
 688:notoriOS.c    ****     // Writes time and date values as current time and date.
 689:notoriOS.c    ****     RTC_WriteTime(&localTime);
 2007              		.loc 1 689 0
 2008 005a 07F10803 		add	r3, r7, #8
 2009 005e 1846     		mov	r0, r3
 2010 0060 FFF7FEFF 		bl	RTC_WriteTime
 690:notoriOS.c    ****     
 691:notoriOS.c    ****     // Return 1 when the system time was set properly.
 692:notoriOS.c    ****     return 1;
 2011              		.loc 1 692 0
 2012 0064 0123     		movs	r3, #1
 2013              	.L68:
 693:notoriOS.c    **** }
 2014              		.loc 1 693 0
 2015 0066 1846     		mov	r0, r3
 2016 0068 1837     		adds	r7, r7, #24
 2017              		.cfi_def_cfa_offset 8
 2018 006a BD46     		mov	sp, r7
 2019              		.cfi_def_cfa_register 13
 2020              		@ sp needed
 2021 006c 80BD     		pop	{r7, pc}
 2022              	.L70:
 2023 006e 00BF     		.align	2
 2024              	.L69:
 2025 0070 20040000 		.word	.LC60
 2026              		.cfi_endproc
 2027              	.LFE77:
 2028              		.size	setTime, .-setTime
 2029              		.section	.rodata
 2030 043b 00       		.align	2
 2031              	.LC61:
 2032 043c 75706772 		.ascii	"upgrade.hex\000"
 2032      6164652E 
 2032      68657800 
 2033              		.section	.text.upgraded,"ax",%progbits
 2034              		.align	2
 2035              		.global	upgraded
 2036              		.thumb
 2037              		.thumb_func
 2038              		.type	upgraded, %function
 2039              	upgraded:
 2040              	.LFB78:
 694:notoriOS.c    **** 
 695:notoriOS.c    **** //downloads and stores files on SD card
 696:notoriOS.c    **** 
 697:notoriOS.c    **** 
 698:notoriOS.c    **** 
 699:notoriOS.c    **** // ==============================================
 700:notoriOS.c    **** // Will they love it, will they hate it
 701:notoriOS.c    **** // Never fade it, I evade it
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 52


 702:notoriOS.c    **** // Cause I never really want to complicate it
 703:notoriOS.c    **** //      - Logic, Upgraded (2015)
 704:notoriOS.c    **** //
 705:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 706:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 707:notoriOS.c    **** // ==============================================
 708:notoriOS.c    **** 
 709:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 2041              		.loc 1 709 0
 2042              		.cfi_startproc
 2043              		@ args = 0, pretend = 0, frame = 232
 2044              		@ frame_needed = 1, uses_anonymous_args = 0
 2045 0000 80B5     		push	{r7, lr}
 2046              		.cfi_def_cfa_offset 8
 2047              		.cfi_offset 7, -8
 2048              		.cfi_offset 14, -4
 2049 0002 C0B0     		sub	sp, sp, #256
 2050              		.cfi_def_cfa_offset 264
 2051 0004 06AF     		add	r7, sp, #24
 2052              		.cfi_def_cfa 7, 240
 2053 0006 F860     		str	r0, [r7, #12]
 2054 0008 B960     		str	r1, [r7, #8]
 2055 000a 7A60     		str	r2, [r7, #4]
 710:notoriOS.c    ****     
 711:notoriOS.c    ****     uint8 upgrade_status = 0;
 2056              		.loc 1 711 0
 2057 000c 0023     		movs	r3, #0
 2058 000e 87F8E730 		strb	r3, [r7, #231]
 712:notoriOS.c    ****     
 713:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 714:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 2059              		.loc 1 714 0
 2060 0012 384B     		ldr	r3, .L75
 2061 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2062 0016 042B     		cmp	r3, #4
 2063 0018 02D0     		beq	.L72
 715:notoriOS.c    ****         return upgrade_status;//where valid = 0
 2064              		.loc 1 715 0
 2065 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2066 001e 65E0     		b	.L74
 2067              	.L72:
 716:notoriOS.c    ****     }
 717:notoriOS.c    ****     
 718:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 2068              		.loc 1 718 0
 2069 0020 354A     		ldr	r2, .L75+4
 2070 0022 07F1D803 		add	r3, r7, #216
 2071 0026 07CA     		ldmia	r2, {r0, r1, r2}
 2072 0028 83E80700 		stmia	r3, {r0, r1, r2}
 719:notoriOS.c    ****     //delete file, if one exisits already
 720:notoriOS.c    ****     SD_rmfile(fileName);
 2073              		.loc 1 720 0
 2074 002c 07F1D803 		add	r3, r7, #216
 2075 0030 1846     		mov	r0, r3
 2076 0032 FFF7FEFF 		bl	SD_rmfile
 721:notoriOS.c    ****     
 722:notoriOS.c    ****     // Create http request
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 53


 723:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 2077              		.loc 1 723 0
 2078 0036 314B     		ldr	r3, .L75+8
 2079 0038 0593     		str	r3, [sp, #20]
 2080 003a 0023     		movs	r3, #0
 2081 003c 0493     		str	r3, [sp, #16]
 2082 003e 304B     		ldr	r3, .L75+12
 2083 0040 0393     		str	r3, [sp, #12]
 2084 0042 304B     		ldr	r3, .L75+16
 2085 0044 0293     		str	r3, [sp, #8]
 2086 0046 304B     		ldr	r3, .L75+20
 2087 0048 0193     		str	r3, [sp, #4]
 2088 004a BB68     		ldr	r3, [r7, #8]
 2089 004c 0093     		str	r3, [sp]
 2090 004e 7B68     		ldr	r3, [r7, #4]
 2091 0050 FA68     		ldr	r2, [r7, #12]
 2092 0052 2E49     		ldr	r1, .L75+24
 2093 0054 2E48     		ldr	r0, .L75+28
 2094 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 724:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 2095              		.loc 1 724 0
 2096 005a 2D4A     		ldr	r2, .L75+28
 2097 005c 2D49     		ldr	r1, .L75+32
 2098 005e 0020     		movs	r0, #0
 2099 0060 FFF7FEFF 		bl	printNotif
 725:notoriOS.c    ****     // Create array portConfig of size 200 characters
 726:notoriOS.c    ****     char portConfig[200];
 727:notoriOS.c    ****     // Print port configurations
 728:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 2100              		.loc 1 728 0
 2101 0064 07F11000 		add	r0, r7, #16
 2102 0068 FB68     		ldr	r3, [r7, #12]
 2103 006a 0093     		str	r3, [sp]
 2104 006c BB68     		ldr	r3, [r7, #8]
 2105 006e 2A4A     		ldr	r2, .L75+36
 2106 0070 C821     		movs	r1, #200
 2107 0072 FFF7FEFF 		bl	snprintf
 729:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 2108              		.loc 1 729 0
 2109 0076 07F11003 		add	r3, r7, #16
 2110 007a 1A46     		mov	r2, r3
 2111 007c 2749     		ldr	r1, .L75+40
 2112 007e 0020     		movs	r0, #0
 2113 0080 FFF7FEFF 		bl	printNotif
 730:notoriOS.c    ****     // AT command to configure the port
 731:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 2114              		.loc 1 731 0
 2115 0084 07F11003 		add	r3, r7, #16
 2116 0088 42F21072 		movw	r2, #10000
 2117 008c 2449     		ldr	r1, .L75+44
 2118 008e 1846     		mov	r0, r3
 2119 0090 FFF7FEFF 		bl	at_write_command
 2120 0094 0346     		mov	r3, r0
 2121 0096 87F8E730 		strb	r3, [r7, #231]
 732:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 733:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 734:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 54


 2122              		.loc 1 734 0
 2123 009a 4FF47A72 		mov	r2, #1000
 2124 009e 2149     		ldr	r1, .L75+48
 2125 00a0 2148     		ldr	r0, .L75+52
 2126 00a2 FFF7FEFF 		bl	at_write_command
 2127 00a6 0346     		mov	r3, r0
 2128 00a8 87F8E730 		strb	r3, [r7, #231]
 735:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 736:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 2129              		.loc 1 736 0
 2130 00ac 1848     		ldr	r0, .L75+28
 2131 00ae FFF7FEFF 		bl	strlen
 2132 00b2 0346     		mov	r3, r0
 2133 00b4 1A46     		mov	r2, r3
 2134 00b6 164B     		ldr	r3, .L75+28
 2135 00b8 1344     		add	r3, r3, r2
 2136 00ba 1C49     		ldr	r1, .L75+56
 2137 00bc 1A46     		mov	r2, r3
 2138 00be 0B46     		mov	r3, r1
 2139 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 2140 00c2 1380     		strh	r3, [r2]	@ unaligned
 737:notoriOS.c    ****     // AT command to send http request
 738:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
 2141              		.loc 1 738 0
 2142 00c4 41F28832 		movw	r2, #5000
 2143 00c8 1549     		ldr	r1, .L75+44
 2144 00ca 1148     		ldr	r0, .L75+28
 2145 00cc FFF7FEFF 		bl	at_write_command
 2146 00d0 0346     		mov	r3, r0
 2147 00d2 87F8E730 		strb	r3, [r7, #231]
 739:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 740:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 741:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 2148              		.loc 1 741 0
 2149 00d6 41F28832 		movw	r2, #5000
 2150 00da 1549     		ldr	r1, .L75+60
 2151 00dc 1548     		ldr	r0, .L75+64
 2152 00de FFF7FEFF 		bl	at_write_command
 2153 00e2 0346     		mov	r3, r0
 2154 00e4 87F8E730 		strb	r3, [r7, #231]
 742:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 743:notoriOS.c    ****     
 744:notoriOS.c    ****     
 745:notoriOS.c    ****     return upgrade_status;
 2155              		.loc 1 745 0
 2156 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2157              	.L74:
 746:notoriOS.c    ****     
 747:notoriOS.c    **** }
 2158              		.loc 1 747 0 discriminator 1
 2159 00ec 1846     		mov	r0, r3
 2160 00ee E837     		adds	r7, r7, #232
 2161              		.cfi_def_cfa_offset 8
 2162 00f0 BD46     		mov	sp, r7
 2163              		.cfi_def_cfa_register 13
 2164              		@ sp needed
 2165 00f2 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 55


 2166              	.L76:
 2167              		.align	2
 2168              	.L75:
 2169 00f4 00000000 		.word	modem_state
 2170 00f8 3C040000 		.word	.LC61
 2171 00fc 4C010000 		.word	.LC16
 2172 0100 50010000 		.word	.LC17
 2173 0104 54010000 		.word	.LC18
 2174 0108 5C010000 		.word	.LC19
 2175 010c 00000000 		.word	http_body
 2176 0110 00000000 		.word	http_request
 2177 0114 64010000 		.word	.LC20
 2178 0118 7C010000 		.word	.LC21
 2179 011c 98010000 		.word	.LC22
 2180 0120 9C010000 		.word	.LC23
 2181 0124 CC010000 		.word	.LC26
 2182 0128 D0010000 		.word	.LC27
 2183 012c E0010000 		.word	.LC28
 2184 0130 FC010000 		.word	.LC31
 2185 0134 04020000 		.word	.LC32
 2186              		.cfi_endproc
 2187              	.LFE78:
 2188              		.size	upgraded, .-upgraded
 2189              		.text
 2190              	.Letext0:
 2191              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2192              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2193              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2194              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 2195              		.file 6 "testing.h"
 2196              		.file 7 "level_sensor.h"
 2197              		.file 8 "water_quality.h"
 2198              		.file 9 "voltages.h"
 2199              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 2200              		.file 11 "data.h"
 2201              		.file 12 "modem.h"
 2202              		.file 13 "notoriOS.h"
 2203              		.file 14 "Generated_Source\\PSoC5/core_cm3.h"
 2204              		.section	.debug_info,"",%progbits
 2205              	.Ldebug_info0:
 2206 0000 9C0C0000 		.4byte	0xc9c
 2207 0004 0400     		.2byte	0x4
 2208 0006 00000000 		.4byte	.Ldebug_abbrev0
 2209 000a 04       		.byte	0x4
 2210 000b 01       		.uleb128 0x1
 2211 000c 7F000000 		.4byte	.LASF168
 2212 0010 0C       		.byte	0xc
 2213 0011 39080000 		.4byte	.LASF169
 2214 0015 03070000 		.4byte	.LASF170
 2215 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2216 001d 00000000 		.4byte	0
 2217 0021 00000000 		.4byte	.Ldebug_line0
 2218 0025 02       		.uleb128 0x2
 2219 0026 01       		.byte	0x1
 2220 0027 06       		.byte	0x6
 2221 0028 50000000 		.4byte	.LASF0
 2222 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 56


 2223 002d 01       		.byte	0x1
 2224 002e 08       		.byte	0x8
 2225 002f FF050000 		.4byte	.LASF1
 2226 0033 02       		.uleb128 0x2
 2227 0034 02       		.byte	0x2
 2228 0035 05       		.byte	0x5
 2229 0036 64040000 		.4byte	.LASF2
 2230 003a 02       		.uleb128 0x2
 2231 003b 02       		.byte	0x2
 2232 003c 07       		.byte	0x7
 2233 003d D1070000 		.4byte	.LASF3
 2234 0041 03       		.uleb128 0x3
 2235 0042 99070000 		.4byte	.LASF9
 2236 0046 02       		.byte	0x2
 2237 0047 3F       		.byte	0x3f
 2238 0048 4C000000 		.4byte	0x4c
 2239 004c 02       		.uleb128 0x2
 2240 004d 04       		.byte	0x4
 2241 004e 05       		.byte	0x5
 2242 004f 21020000 		.4byte	.LASF4
 2243 0053 02       		.uleb128 0x2
 2244 0054 04       		.byte	0x4
 2245 0055 07       		.byte	0x7
 2246 0056 81030000 		.4byte	.LASF5
 2247 005a 02       		.uleb128 0x2
 2248 005b 08       		.byte	0x8
 2249 005c 05       		.byte	0x5
 2250 005d 6F010000 		.4byte	.LASF6
 2251 0061 02       		.uleb128 0x2
 2252 0062 08       		.byte	0x8
 2253 0063 07       		.byte	0x7
 2254 0064 1E010000 		.4byte	.LASF7
 2255 0068 04       		.uleb128 0x4
 2256 0069 04       		.byte	0x4
 2257 006a 05       		.byte	0x5
 2258 006b 696E7400 		.ascii	"int\000"
 2259 006f 02       		.uleb128 0x2
 2260 0070 04       		.byte	0x4
 2261 0071 07       		.byte	0x7
 2262 0072 2D030000 		.4byte	.LASF8
 2263 0076 03       		.uleb128 0x3
 2264 0077 F7050000 		.4byte	.LASF10
 2265 007b 03       		.byte	0x3
 2266 007c 2C       		.byte	0x2c
 2267 007d 41000000 		.4byte	0x41
 2268 0081 05       		.uleb128 0x5
 2269 0082 58020000 		.4byte	.LASF11
 2270 0086 04       		.byte	0x4
 2271 0087 9201     		.2byte	0x192
 2272 0089 2C000000 		.4byte	0x2c
 2273 008d 05       		.uleb128 0x5
 2274 008e 08000000 		.4byte	.LASF12
 2275 0092 04       		.byte	0x4
 2276 0093 9301     		.2byte	0x193
 2277 0095 3A000000 		.4byte	0x3a
 2278 0099 05       		.uleb128 0x5
 2279 009a 9C020000 		.4byte	.LASF13
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 57


 2280 009e 04       		.byte	0x4
 2281 009f 9401     		.2byte	0x194
 2282 00a1 53000000 		.4byte	0x53
 2283 00a5 05       		.uleb128 0x5
 2284 00a6 1A040000 		.4byte	.LASF14
 2285 00aa 04       		.byte	0x4
 2286 00ab 9501     		.2byte	0x195
 2287 00ad 25000000 		.4byte	0x25
 2288 00b1 05       		.uleb128 0x5
 2289 00b2 4E080000 		.4byte	.LASF15
 2290 00b6 04       		.byte	0x4
 2291 00b7 9601     		.2byte	0x196
 2292 00b9 33000000 		.4byte	0x33
 2293 00bd 05       		.uleb128 0x5
 2294 00be 76020000 		.4byte	.LASF16
 2295 00c2 04       		.byte	0x4
 2296 00c3 9701     		.2byte	0x197
 2297 00c5 4C000000 		.4byte	0x4c
 2298 00c9 05       		.uleb128 0x5
 2299 00ca CA040000 		.4byte	.LASF17
 2300 00ce 04       		.byte	0x4
 2301 00cf 9801     		.2byte	0x198
 2302 00d1 D5000000 		.4byte	0xd5
 2303 00d5 02       		.uleb128 0x2
 2304 00d6 04       		.byte	0x4
 2305 00d7 04       		.byte	0x4
 2306 00d8 95050000 		.4byte	.LASF18
 2307 00dc 02       		.uleb128 0x2
 2308 00dd 08       		.byte	0x8
 2309 00de 04       		.byte	0x4
 2310 00df CC080000 		.4byte	.LASF19
 2311 00e3 02       		.uleb128 0x2
 2312 00e4 01       		.byte	0x1
 2313 00e5 08       		.byte	0x8
 2314 00e6 72070000 		.4byte	.LASF20
 2315 00ea 02       		.uleb128 0x2
 2316 00eb 08       		.byte	0x8
 2317 00ec 04       		.byte	0x4
 2318 00ed 54070000 		.4byte	.LASF21
 2319 00f1 02       		.uleb128 0x2
 2320 00f2 04       		.byte	0x4
 2321 00f3 07       		.byte	0x7
 2322 00f4 DE040000 		.4byte	.LASF22
 2323 00f8 06       		.uleb128 0x6
 2324 00f9 04       		.byte	0x4
 2325 00fa E3000000 		.4byte	0xe3
 2326 00fe 07       		.uleb128 0x7
 2327 00ff E3000000 		.4byte	0xe3
 2328 0103 0E010000 		.4byte	0x10e
 2329 0107 08       		.uleb128 0x8
 2330 0108 F1000000 		.4byte	0xf1
 2331 010c 17       		.byte	0x17
 2332 010d 00       		.byte	0
 2333 010e 09       		.uleb128 0x9
 2334 010f 0C       		.byte	0xc
 2335 0110 05       		.byte	0x5
 2336 0111 30       		.byte	0x30
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 58


 2337 0112 77010000 		.4byte	0x177
 2338 0116 0A       		.uleb128 0xa
 2339 0117 53656300 		.ascii	"Sec\000"
 2340 011b 05       		.byte	0x5
 2341 011c 32       		.byte	0x32
 2342 011d 81000000 		.4byte	0x81
 2343 0121 00       		.byte	0
 2344 0122 0A       		.uleb128 0xa
 2345 0123 4D696E00 		.ascii	"Min\000"
 2346 0127 05       		.byte	0x5
 2347 0128 33       		.byte	0x33
 2348 0129 81000000 		.4byte	0x81
 2349 012d 01       		.byte	0x1
 2350 012e 0B       		.uleb128 0xb
 2351 012f 35010000 		.4byte	.LASF23
 2352 0133 05       		.byte	0x5
 2353 0134 34       		.byte	0x34
 2354 0135 81000000 		.4byte	0x81
 2355 0139 02       		.byte	0x2
 2356 013a 0B       		.uleb128 0xb
 2357 013b 62060000 		.4byte	.LASF24
 2358 013f 05       		.byte	0x5
 2359 0140 35       		.byte	0x35
 2360 0141 81000000 		.4byte	0x81
 2361 0145 03       		.byte	0x3
 2362 0146 0B       		.uleb128 0xb
 2363 0147 D5030000 		.4byte	.LASF25
 2364 014b 05       		.byte	0x5
 2365 014c 36       		.byte	0x36
 2366 014d 81000000 		.4byte	0x81
 2367 0151 04       		.byte	0x4
 2368 0152 0B       		.uleb128 0xb
 2369 0153 81080000 		.4byte	.LASF26
 2370 0157 05       		.byte	0x5
 2371 0158 37       		.byte	0x37
 2372 0159 8D000000 		.4byte	0x8d
 2373 015d 06       		.byte	0x6
 2374 015e 0B       		.uleb128 0xb
 2375 015f 18010000 		.4byte	.LASF27
 2376 0163 05       		.byte	0x5
 2377 0164 38       		.byte	0x38
 2378 0165 81000000 		.4byte	0x81
 2379 0169 08       		.byte	0x8
 2380 016a 0B       		.uleb128 0xb
 2381 016b EC050000 		.4byte	.LASF28
 2382 016f 05       		.byte	0x5
 2383 0170 39       		.byte	0x39
 2384 0171 8D000000 		.4byte	0x8d
 2385 0175 0A       		.byte	0xa
 2386 0176 00       		.byte	0
 2387 0177 03       		.uleb128 0x3
 2388 0178 29050000 		.4byte	.LASF29
 2389 017c 05       		.byte	0x5
 2390 017d 3A       		.byte	0x3a
 2391 017e 82010000 		.4byte	0x182
 2392 0182 0C       		.uleb128 0xc
 2393 0183 0E010000 		.4byte	0x10e
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 59


 2394 0187 0D       		.uleb128 0xd
 2395 0188 8101     		.2byte	0x181
 2396 018a 06       		.byte	0x6
 2397 018b 0A       		.byte	0xa
 2398 018c B5010000 		.4byte	0x1b5
 2399 0190 0B       		.uleb128 0xb
 2400 0191 E2050000 		.4byte	.LASF30
 2401 0195 06       		.byte	0x6
 2402 0196 0C       		.byte	0xc
 2403 0197 B5010000 		.4byte	0x1b5
 2404 019b 00       		.byte	0
 2405 019c 0B       		.uleb128 0xb
 2406 019d 0E080000 		.4byte	.LASF31
 2407 01a1 06       		.byte	0x6
 2408 01a2 0D       		.byte	0xd
 2409 01a3 81000000 		.4byte	0x81
 2410 01a7 80       		.byte	0x80
 2411 01a8 0B       		.uleb128 0xb
 2412 01a9 84060000 		.4byte	.LASF32
 2413 01ad 06       		.byte	0x6
 2414 01ae 0F       		.byte	0xf
 2415 01af C5010000 		.4byte	0x1c5
 2416 01b3 81       		.byte	0x81
 2417 01b4 00       		.byte	0
 2418 01b5 07       		.uleb128 0x7
 2419 01b6 E3000000 		.4byte	0xe3
 2420 01ba C5010000 		.4byte	0x1c5
 2421 01be 08       		.uleb128 0x8
 2422 01bf F1000000 		.4byte	0xf1
 2423 01c3 7F       		.byte	0x7f
 2424 01c4 00       		.byte	0
 2425 01c5 07       		.uleb128 0x7
 2426 01c6 E3000000 		.4byte	0xe3
 2427 01ca D5010000 		.4byte	0x1d5
 2428 01ce 08       		.uleb128 0x8
 2429 01cf F1000000 		.4byte	0xf1
 2430 01d3 FF       		.byte	0xff
 2431 01d4 00       		.byte	0
 2432 01d5 03       		.uleb128 0x3
 2433 01d6 6C060000 		.4byte	.LASF33
 2434 01da 06       		.byte	0x6
 2435 01db 10       		.byte	0x10
 2436 01dc 87010000 		.4byte	0x187
 2437 01e0 09       		.uleb128 0x9
 2438 01e1 1A       		.byte	0x1a
 2439 01e2 07       		.byte	0x7
 2440 01e3 10       		.byte	0x10
 2441 01e4 19020000 		.4byte	0x219
 2442 01e8 0B       		.uleb128 0xb
 2443 01e9 AC020000 		.4byte	.LASF34
 2444 01ed 07       		.byte	0x7
 2445 01ee 11       		.byte	0x11
 2446 01ef 19020000 		.4byte	0x219
 2447 01f3 00       		.byte	0
 2448 01f4 0B       		.uleb128 0xb
 2449 01f5 BB070000 		.4byte	.LASF35
 2450 01f9 07       		.byte	0x7
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 60


 2451 01fa 12       		.byte	0x12
 2452 01fb B1000000 		.4byte	0xb1
 2453 01ff 16       		.byte	0x16
 2454 0200 0B       		.uleb128 0xb
 2455 0201 59030000 		.4byte	.LASF36
 2456 0205 07       		.byte	0x7
 2457 0206 13       		.byte	0x13
 2458 0207 81000000 		.4byte	0x81
 2459 020b 18       		.byte	0x18
 2460 020c 0B       		.uleb128 0xb
 2461 020d 22000000 		.4byte	.LASF37
 2462 0211 07       		.byte	0x7
 2463 0212 14       		.byte	0x14
 2464 0213 81000000 		.4byte	0x81
 2465 0217 19       		.byte	0x19
 2466 0218 00       		.byte	0
 2467 0219 07       		.uleb128 0x7
 2468 021a B1000000 		.4byte	0xb1
 2469 021e 29020000 		.4byte	0x229
 2470 0222 08       		.uleb128 0x8
 2471 0223 F1000000 		.4byte	0xf1
 2472 0227 0A       		.byte	0xa
 2473 0228 00       		.byte	0
 2474 0229 03       		.uleb128 0x3
 2475 022a 9B050000 		.4byte	.LASF38
 2476 022e 07       		.byte	0x7
 2477 022f 15       		.byte	0x15
 2478 0230 E0010000 		.4byte	0x1e0
 2479 0234 09       		.uleb128 0x9
 2480 0235 60       		.byte	0x60
 2481 0236 08       		.byte	0x8
 2482 0237 07       		.byte	0x7
 2483 0238 6D020000 		.4byte	0x26d
 2484 023c 0B       		.uleb128 0xb
 2485 023d 44070000 		.4byte	.LASF39
 2486 0241 08       		.byte	0x8
 2487 0242 08       		.byte	0x8
 2488 0243 6D020000 		.4byte	0x26d
 2489 0247 00       		.byte	0
 2490 0248 0B       		.uleb128 0xb
 2491 0249 0F000000 		.4byte	.LASF40
 2492 024d 08       		.byte	0x8
 2493 024e 09       		.byte	0x9
 2494 024f C9000000 		.4byte	0xc9
 2495 0253 2C       		.byte	0x2c
 2496 0254 0B       		.uleb128 0xb
 2497 0255 C3030000 		.4byte	.LASF41
 2498 0259 08       		.byte	0x8
 2499 025a 0A       		.byte	0xa
 2500 025b 6D020000 		.4byte	0x26d
 2501 025f 30       		.byte	0x30
 2502 0260 0B       		.uleb128 0xb
 2503 0261 38040000 		.4byte	.LASF42
 2504 0265 08       		.byte	0x8
 2505 0266 0B       		.byte	0xb
 2506 0267 C9000000 		.4byte	0xc9
 2507 026b 5C       		.byte	0x5c
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 61


 2508 026c 00       		.byte	0
 2509 026d 07       		.uleb128 0x7
 2510 026e C9000000 		.4byte	0xc9
 2511 0272 7D020000 		.4byte	0x27d
 2512 0276 08       		.uleb128 0x8
 2513 0277 F1000000 		.4byte	0xf1
 2514 027b 0A       		.byte	0xa
 2515 027c 00       		.byte	0
 2516 027d 03       		.uleb128 0x3
 2517 027e 93030000 		.4byte	.LASF43
 2518 0282 08       		.byte	0x8
 2519 0283 0C       		.byte	0xc
 2520 0284 34020000 		.4byte	0x234
 2521 0288 09       		.uleb128 0x9
 2522 0289 14       		.byte	0x14
 2523 028a 09       		.byte	0x9
 2524 028b 11       		.byte	0x11
 2525 028c CD020000 		.4byte	0x2cd
 2526 0290 0B       		.uleb128 0xb
 2527 0291 B3030000 		.4byte	.LASF44
 2528 0295 09       		.byte	0x9
 2529 0296 12       		.byte	0x12
 2530 0297 D5000000 		.4byte	0xd5
 2531 029b 00       		.byte	0
 2532 029c 0B       		.uleb128 0xb
 2533 029d BB010000 		.4byte	.LASF45
 2534 02a1 09       		.byte	0x9
 2535 02a2 13       		.byte	0x13
 2536 02a3 D5000000 		.4byte	0xd5
 2537 02a7 04       		.byte	0x4
 2538 02a8 0B       		.uleb128 0xb
 2539 02a9 C9010000 		.4byte	.LASF46
 2540 02ad 09       		.byte	0x9
 2541 02ae 14       		.byte	0x14
 2542 02af D5000000 		.4byte	0xd5
 2543 02b3 08       		.byte	0x8
 2544 02b4 0B       		.uleb128 0xb
 2545 02b5 77050000 		.4byte	.LASF47
 2546 02b9 09       		.byte	0x9
 2547 02ba 15       		.byte	0x15
 2548 02bb D5000000 		.4byte	0xd5
 2549 02bf 0C       		.byte	0xc
 2550 02c0 0B       		.uleb128 0xb
 2551 02c1 F5060000 		.4byte	.LASF48
 2552 02c5 09       		.byte	0x9
 2553 02c6 16       		.byte	0x16
 2554 02c7 81000000 		.4byte	0x81
 2555 02cb 10       		.byte	0x10
 2556 02cc 00       		.byte	0
 2557 02cd 03       		.uleb128 0x3
 2558 02ce D3080000 		.4byte	.LASF49
 2559 02d2 09       		.byte	0x9
 2560 02d3 17       		.byte	0x17
 2561 02d4 88020000 		.4byte	0x288
 2562 02d8 09       		.uleb128 0x9
 2563 02d9 10       		.byte	0x10
 2564 02da 09       		.byte	0x9
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 62


 2565 02db 19       		.byte	0x19
 2566 02dc 11030000 		.4byte	0x311
 2567 02e0 0B       		.uleb128 0xb
 2568 02e1 19030000 		.4byte	.LASF50
 2569 02e5 09       		.byte	0x9
 2570 02e6 1A       		.byte	0x1a
 2571 02e7 D5000000 		.4byte	0xd5
 2572 02eb 00       		.byte	0
 2573 02ec 0B       		.uleb128 0xb
 2574 02ed 43020000 		.4byte	.LASF51
 2575 02f1 09       		.byte	0x9
 2576 02f2 1B       		.byte	0x1b
 2577 02f3 D5000000 		.4byte	0xd5
 2578 02f7 04       		.byte	0x4
 2579 02f8 0B       		.uleb128 0xb
 2580 02f9 E4060000 		.4byte	.LASF52
 2581 02fd 09       		.byte	0x9
 2582 02fe 1C       		.byte	0x1c
 2583 02ff D5000000 		.4byte	0xd5
 2584 0303 08       		.byte	0x8
 2585 0304 0B       		.uleb128 0xb
 2586 0305 4E060000 		.4byte	.LASF53
 2587 0309 09       		.byte	0x9
 2588 030a 1D       		.byte	0x1d
 2589 030b D5000000 		.4byte	0xd5
 2590 030f 0C       		.byte	0xc
 2591 0310 00       		.byte	0
 2592 0311 03       		.uleb128 0x3
 2593 0312 8B080000 		.4byte	.LASF54
 2594 0316 09       		.byte	0x9
 2595 0317 1E       		.byte	0x1e
 2596 0318 D8020000 		.4byte	0x2d8
 2597 031c 0E       		.uleb128 0xe
 2598 031d 746D00   		.ascii	"tm\000"
 2599 0320 24       		.byte	0x24
 2600 0321 0A       		.byte	0xa
 2601 0322 21       		.byte	0x21
 2602 0323 94030000 		.4byte	0x394
 2603 0327 0B       		.uleb128 0xb
 2604 0328 FC070000 		.4byte	.LASF55
 2605 032c 0A       		.byte	0xa
 2606 032d 23       		.byte	0x23
 2607 032e 68000000 		.4byte	0x68
 2608 0332 00       		.byte	0
 2609 0333 0B       		.uleb128 0xb
 2610 0334 C3040000 		.4byte	.LASF56
 2611 0338 0A       		.byte	0xa
 2612 0339 24       		.byte	0x24
 2613 033a 68000000 		.4byte	0x68
 2614 033e 04       		.byte	0x4
 2615 033f 0B       		.uleb128 0xb
 2616 0340 1A000000 		.4byte	.LASF57
 2617 0344 0A       		.byte	0xa
 2618 0345 25       		.byte	0x25
 2619 0346 68000000 		.4byte	0x68
 2620 034a 08       		.byte	0x8
 2621 034b 0B       		.uleb128 0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 63


 2622 034c EB070000 		.4byte	.LASF58
 2623 0350 0A       		.byte	0xa
 2624 0351 26       		.byte	0x26
 2625 0352 68000000 		.4byte	0x68
 2626 0356 0C       		.byte	0xc
 2627 0357 0B       		.uleb128 0xb
 2628 0358 E4020000 		.4byte	.LASF59
 2629 035c 0A       		.byte	0xa
 2630 035d 27       		.byte	0x27
 2631 035e 68000000 		.4byte	0x68
 2632 0362 10       		.byte	0x10
 2633 0363 0B       		.uleb128 0xb
 2634 0364 07030000 		.4byte	.LASF60
 2635 0368 0A       		.byte	0xa
 2636 0369 28       		.byte	0x28
 2637 036a 68000000 		.4byte	0x68
 2638 036e 14       		.byte	0x14
 2639 036f 0B       		.uleb128 0xb
 2640 0370 FB060000 		.4byte	.LASF61
 2641 0374 0A       		.byte	0xa
 2642 0375 29       		.byte	0x29
 2643 0376 68000000 		.4byte	0x68
 2644 037a 18       		.byte	0x18
 2645 037b 0B       		.uleb128 0xb
 2646 037c E7040000 		.4byte	.LASF62
 2647 0380 0A       		.byte	0xa
 2648 0381 2A       		.byte	0x2a
 2649 0382 68000000 		.4byte	0x68
 2650 0386 1C       		.byte	0x1c
 2651 0387 0B       		.uleb128 0xb
 2652 0388 FE030000 		.4byte	.LASF63
 2653 038c 0A       		.byte	0xa
 2654 038d 2B       		.byte	0x2b
 2655 038e 68000000 		.4byte	0x68
 2656 0392 20       		.byte	0x20
 2657 0393 00       		.byte	0
 2658 0394 09       		.uleb128 0x9
 2659 0395 2C       		.byte	0x2c
 2660 0396 0B       		.byte	0xb
 2661 0397 14       		.byte	0x14
 2662 0398 C1030000 		.4byte	0x3c1
 2663 039c 0A       		.uleb128 0xa
 2664 039d 6B657900 		.ascii	"key\000"
 2665 03a1 0B       		.byte	0xb
 2666 03a2 15       		.byte	0x15
 2667 03a3 C1030000 		.4byte	0x3c1
 2668 03a7 00       		.byte	0
 2669 03a8 0B       		.uleb128 0xb
 2670 03a9 FC020000 		.4byte	.LASF64
 2671 03ad 0B       		.byte	0xb
 2672 03ae 16       		.byte	0x16
 2673 03af C1030000 		.4byte	0x3c1
 2674 03b3 14       		.byte	0x14
 2675 03b4 0B       		.uleb128 0xb
 2676 03b5 1F050000 		.4byte	.LASF65
 2677 03b9 0B       		.byte	0xb
 2678 03ba 17       		.byte	0x17
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 64


 2679 03bb BD000000 		.4byte	0xbd
 2680 03bf 28       		.byte	0x28
 2681 03c0 00       		.byte	0
 2682 03c1 07       		.uleb128 0x7
 2683 03c2 E3000000 		.4byte	0xe3
 2684 03c6 D1030000 		.4byte	0x3d1
 2685 03ca 08       		.uleb128 0x8
 2686 03cb F1000000 		.4byte	0xf1
 2687 03cf 13       		.byte	0x13
 2688 03d0 00       		.byte	0
 2689 03d1 03       		.uleb128 0x3
 2690 03d2 42030000 		.4byte	.LASF66
 2691 03d6 0B       		.byte	0xb
 2692 03d7 19       		.byte	0x19
 2693 03d8 94030000 		.4byte	0x394
 2694 03dc 09       		.uleb128 0x9
 2695 03dd 3C       		.byte	0x3c
 2696 03de 0C       		.byte	0xc
 2697 03df 36       		.byte	0x36
 2698 03e0 09040000 		.4byte	0x409
 2699 03e4 0B       		.uleb128 0xb
 2700 03e5 E4070000 		.4byte	.LASF67
 2701 03e9 0C       		.byte	0xc
 2702 03ea 37       		.byte	0x37
 2703 03eb C1030000 		.4byte	0x3c1
 2704 03ef 00       		.byte	0
 2705 03f0 0B       		.uleb128 0xb
 2706 03f1 A3020000 		.4byte	.LASF68
 2707 03f5 0C       		.byte	0xc
 2708 03f6 38       		.byte	0x38
 2709 03f7 C1030000 		.4byte	0x3c1
 2710 03fb 14       		.byte	0x14
 2711 03fc 0B       		.uleb128 0xb
 2712 03fd 7F060000 		.4byte	.LASF69
 2713 0401 0C       		.byte	0xc
 2714 0402 39       		.byte	0x39
 2715 0403 C1030000 		.4byte	0x3c1
 2716 0407 28       		.byte	0x28
 2717 0408 00       		.byte	0
 2718 0409 03       		.uleb128 0x3
 2719 040a 0E020000 		.4byte	.LASF70
 2720 040e 0C       		.byte	0xc
 2721 040f 3B       		.byte	0x3b
 2722 0410 DC030000 		.4byte	0x3dc
 2723 0414 09       		.uleb128 0x9
 2724 0415 20       		.byte	0x20
 2725 0416 0C       		.byte	0xc
 2726 0417 3D       		.byte	0x3d
 2727 0418 7D040000 		.4byte	0x47d
 2728 041c 0B       		.uleb128 0xb
 2729 041d 1B020000 		.4byte	.LASF71
 2730 0421 0C       		.byte	0xc
 2731 0422 3E       		.byte	0x3e
 2732 0423 68000000 		.4byte	0x68
 2733 0427 00       		.byte	0
 2734 0428 0A       		.uleb128 0xa
 2735 0429 62657200 		.ascii	"ber\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 65


 2736 042d 0C       		.byte	0xc
 2737 042e 3F       		.byte	0x3f
 2738 042f 68000000 		.4byte	0x68
 2739 0433 04       		.byte	0x4
 2740 0434 0B       		.uleb128 0xb
 2741 0435 5D060000 		.4byte	.LASF72
 2742 0439 0C       		.byte	0xc
 2743 043a 40       		.byte	0x40
 2744 043b 68000000 		.4byte	0x68
 2745 043f 08       		.byte	0x8
 2746 0440 0B       		.uleb128 0xb
 2747 0441 85010000 		.4byte	.LASF73
 2748 0445 0C       		.byte	0xc
 2749 0446 41       		.byte	0x41
 2750 0447 68000000 		.4byte	0x68
 2751 044b 0C       		.byte	0xc
 2752 044c 0B       		.uleb128 0xb
 2753 044d 28060000 		.4byte	.LASF74
 2754 0451 0C       		.byte	0xc
 2755 0452 42       		.byte	0x42
 2756 0453 68000000 		.4byte	0x68
 2757 0457 10       		.byte	0x10
 2758 0458 0B       		.uleb128 0xb
 2759 0459 23060000 		.4byte	.LASF75
 2760 045d 0C       		.byte	0xc
 2761 045e 43       		.byte	0x43
 2762 045f 68000000 		.4byte	0x68
 2763 0463 14       		.byte	0x14
 2764 0464 0B       		.uleb128 0xb
 2765 0465 98010000 		.4byte	.LASF76
 2766 0469 0C       		.byte	0xc
 2767 046a 44       		.byte	0x44
 2768 046b 68000000 		.4byte	0x68
 2769 046f 18       		.byte	0x18
 2770 0470 0B       		.uleb128 0xb
 2771 0471 2A020000 		.4byte	.LASF77
 2772 0475 0C       		.byte	0xc
 2773 0476 45       		.byte	0x45
 2774 0477 68000000 		.4byte	0x68
 2775 047b 1C       		.byte	0x1c
 2776 047c 00       		.byte	0
 2777 047d 03       		.uleb128 0x3
 2778 047e D6060000 		.4byte	.LASF78
 2779 0482 0C       		.byte	0xc
 2780 0483 47       		.byte	0x47
 2781 0484 14040000 		.4byte	0x414
 2782 0488 09       		.uleb128 0x9
 2783 0489 05       		.byte	0x5
 2784 048a 0C       		.byte	0xc
 2785 048b 53       		.byte	0x53
 2786 048c CD040000 		.4byte	0x4cd
 2787 0490 0B       		.uleb128 0xb
 2788 0491 7C020000 		.4byte	.LASF79
 2789 0495 0C       		.byte	0xc
 2790 0496 55       		.byte	0x55
 2791 0497 81000000 		.4byte	0x81
 2792 049b 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 66


 2793 049c 0B       		.uleb128 0xb
 2794 049d 78080000 		.4byte	.LASF80
 2795 04a1 0C       		.byte	0xc
 2796 04a2 57       		.byte	0x57
 2797 04a3 CD040000 		.4byte	0x4cd
 2798 04a7 01       		.byte	0x1
 2799 04a8 0B       		.uleb128 0xb
 2800 04a9 BF080000 		.4byte	.LASF81
 2801 04ad 0C       		.byte	0xc
 2802 04ae 59       		.byte	0x59
 2803 04af 81000000 		.4byte	0x81
 2804 04b3 02       		.byte	0x2
 2805 04b4 0B       		.uleb128 0xb
 2806 04b5 44060000 		.4byte	.LASF82
 2807 04b9 0C       		.byte	0xc
 2808 04ba 5B       		.byte	0x5b
 2809 04bb 81000000 		.4byte	0x81
 2810 04bf 03       		.byte	0x3
 2811 04c0 0B       		.uleb128 0xb
 2812 04c1 EB020000 		.4byte	.LASF83
 2813 04c5 0C       		.byte	0xc
 2814 04c6 5E       		.byte	0x5e
 2815 04c7 81000000 		.4byte	0x81
 2816 04cb 04       		.byte	0x4
 2817 04cc 00       		.byte	0
 2818 04cd 02       		.uleb128 0x2
 2819 04ce 01       		.byte	0x1
 2820 04cf 02       		.byte	0x2
 2821 04d0 F1050000 		.4byte	.LASF84
 2822 04d4 03       		.uleb128 0x3
 2823 04d5 90040000 		.4byte	.LASF85
 2824 04d9 0C       		.byte	0xc
 2825 04da 60       		.byte	0x60
 2826 04db 88040000 		.4byte	0x488
 2827 04df 09       		.uleb128 0x9
 2828 04e0 06       		.byte	0x6
 2829 04e1 0D       		.byte	0xd
 2830 04e2 2E       		.byte	0x2e
 2831 04e3 18050000 		.4byte	0x518
 2832 04e7 0B       		.uleb128 0xb
 2833 04e8 CC020000 		.4byte	.LASF86
 2834 04ec 0D       		.byte	0xd
 2835 04ed 30       		.byte	0x30
 2836 04ee 8D000000 		.4byte	0x8d
 2837 04f2 00       		.byte	0
 2838 04f3 0B       		.uleb128 0xb
 2839 04f4 62080000 		.4byte	.LASF87
 2840 04f8 0D       		.byte	0xd
 2841 04f9 31       		.byte	0x31
 2842 04fa B1000000 		.4byte	0xb1
 2843 04fe 02       		.byte	0x2
 2844 04ff 0B       		.uleb128 0xb
 2845 0500 54080000 		.4byte	.LASF88
 2846 0504 0D       		.byte	0xd
 2847 0505 32       		.byte	0x32
 2848 0506 81000000 		.4byte	0x81
 2849 050a 04       		.byte	0x4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 67


 2850 050b 0B       		.uleb128 0xb
 2851 050c 5C000000 		.4byte	.LASF89
 2852 0510 0D       		.byte	0xd
 2853 0511 33       		.byte	0x33
 2854 0512 81000000 		.4byte	0x81
 2855 0516 05       		.byte	0x5
 2856 0517 00       		.byte	0
 2857 0518 03       		.uleb128 0x3
 2858 0519 3D020000 		.4byte	.LASF90
 2859 051d 0D       		.byte	0xd
 2860 051e 36       		.byte	0x36
 2861 051f 23050000 		.4byte	0x523
 2862 0523 0C       		.uleb128 0xc
 2863 0524 DF040000 		.4byte	0x4df
 2864 0528 09       		.uleb128 0x9
 2865 0529 1C       		.byte	0x1c
 2866 052a 0D       		.byte	0xd
 2867 052b 39       		.byte	0x39
 2868 052c 49050000 		.4byte	0x549
 2869 0530 0B       		.uleb128 0xb
 2870 0531 07040000 		.4byte	.LASF91
 2871 0535 0D       		.byte	0xd
 2872 0536 3B       		.byte	0x3b
 2873 0537 49050000 		.4byte	0x549
 2874 053b 00       		.byte	0
 2875 053c 0B       		.uleb128 0xb
 2876 053d B1080000 		.4byte	.LASF92
 2877 0541 0D       		.byte	0xd
 2878 0542 3C       		.byte	0x3c
 2879 0543 FE000000 		.4byte	0xfe
 2880 0547 04       		.byte	0x4
 2881 0548 00       		.byte	0
 2882 0549 06       		.uleb128 0x6
 2883 054a 04       		.byte	0x4
 2884 054b 09040000 		.4byte	0x409
 2885 054f 03       		.uleb128 0x3
 2886 0550 85040000 		.4byte	.LASF93
 2887 0554 0D       		.byte	0xd
 2888 0555 3E       		.byte	0x3e
 2889 0556 28050000 		.4byte	0x528
 2890 055a 09       		.uleb128 0x9
 2891 055b 68       		.byte	0x68
 2892 055c 0D       		.byte	0xd
 2893 055d 44       		.byte	0x44
 2894 055e 7B050000 		.4byte	0x57b
 2895 0562 0B       		.uleb128 0xb
 2896 0563 12040000 		.4byte	.LASF94
 2897 0567 0D       		.byte	0xd
 2898 0568 49       		.byte	0x49
 2899 0569 7B050000 		.4byte	0x57b
 2900 056d 00       		.byte	0
 2901 056e 0B       		.uleb128 0xb
 2902 056f F6030000 		.4byte	.LASF95
 2903 0573 0D       		.byte	0xd
 2904 0574 4A       		.byte	0x4a
 2905 0575 68000000 		.4byte	0x68
 2906 0579 64       		.byte	0x64
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 68


 2907 057a 00       		.byte	0
 2908 057b 07       		.uleb128 0x7
 2909 057c E3000000 		.4byte	0xe3
 2910 0580 8B050000 		.4byte	0x58b
 2911 0584 08       		.uleb128 0x8
 2912 0585 F1000000 		.4byte	0xf1
 2913 0589 63       		.byte	0x63
 2914 058a 00       		.byte	0
 2915 058b 03       		.uleb128 0x3
 2916 058c EF040000 		.4byte	.LASF96
 2917 0590 0D       		.byte	0xd
 2918 0591 50       		.byte	0x50
 2919 0592 5A050000 		.4byte	0x55a
 2920 0596 0F       		.uleb128 0xf
 2921 0597 74000000 		.4byte	.LASF171
 2922 059b 01       		.byte	0x1
 2923 059c 14       		.byte	0x14
 2924 059d 00000000 		.4byte	.LFB64
 2925 05a1 0C000000 		.4byte	.LFE64-.LFB64
 2926 05a5 01       		.uleb128 0x1
 2927 05a6 9C       		.byte	0x9c
 2928 05a7 10       		.uleb128 0x10
 2929 05a8 A1080000 		.4byte	.LASF109
 2930 05ac 01       		.byte	0x1
 2931 05ad 28       		.byte	0x28
 2932 05ae 00000000 		.4byte	.LFB65
 2933 05b2 F4000000 		.4byte	.LFE65-.LFB65
 2934 05b6 01       		.uleb128 0x1
 2935 05b7 9C       		.byte	0x9c
 2936 05b8 D9050000 		.4byte	0x5d9
 2937 05bc 11       		.uleb128 0x11
 2938 05bd A3070000 		.4byte	.LASF97
 2939 05c1 01       		.byte	0x1
 2940 05c2 3C       		.byte	0x3c
 2941 05c3 D9050000 		.4byte	0x5d9
 2942 05c7 02       		.uleb128 0x2
 2943 05c8 91       		.byte	0x91
 2944 05c9 64       		.sleb128 -28
 2945 05ca 11       		.uleb128 0x11
 2946 05cb D2040000 		.4byte	.LASF98
 2947 05cf 01       		.byte	0x1
 2948 05d0 58       		.byte	0x58
 2949 05d1 81000000 		.4byte	0x81
 2950 05d5 02       		.uleb128 0x2
 2951 05d6 91       		.byte	0x91
 2952 05d7 6F       		.sleb128 -17
 2953 05d8 00       		.byte	0
 2954 05d9 07       		.uleb128 0x7
 2955 05da 99000000 		.4byte	0x99
 2956 05de E9050000 		.4byte	0x5e9
 2957 05e2 08       		.uleb128 0x8
 2958 05e3 F1000000 		.4byte	0xf1
 2959 05e7 01       		.byte	0x1
 2960 05e8 00       		.byte	0
 2961 05e9 12       		.uleb128 0x12
 2962 05ea 1F040000 		.4byte	.LASF100
 2963 05ee 01       		.byte	0x1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 69


 2964 05ef 62       		.byte	0x62
 2965 05f0 68000000 		.4byte	0x68
 2966 05f4 00000000 		.4byte	.LFB66
 2967 05f8 64000000 		.4byte	.LFE66-.LFB66
 2968 05fc 01       		.uleb128 0x1
 2969 05fd 9C       		.byte	0x9c
 2970 05fe 11060000 		.4byte	0x611
 2971 0602 11       		.uleb128 0x11
 2972 0603 D5050000 		.4byte	.LASF99
 2973 0607 01       		.byte	0x1
 2974 0608 7C       		.byte	0x7c
 2975 0609 81000000 		.4byte	0x81
 2976 060d 02       		.uleb128 0x2
 2977 060e 91       		.byte	0x91
 2978 060f 77       		.sleb128 -9
 2979 0610 00       		.byte	0
 2980 0611 13       		.uleb128 0x13
 2981 0612 C9070000 		.4byte	.LASF172
 2982 0616 01       		.byte	0x1
 2983 0617 8C       		.byte	0x8c
 2984 0618 00000000 		.4byte	.LFB67
 2985 061c 2A000000 		.4byte	.LFE67-.LFB67
 2986 0620 01       		.uleb128 0x1
 2987 0621 9C       		.byte	0x9c
 2988 0622 14       		.uleb128 0x14
 2989 0623 4E030000 		.4byte	.LASF101
 2990 0627 01       		.byte	0x1
 2991 0628 B1       		.byte	0xb1
 2992 0629 00000000 		.4byte	.LFB68
 2993 062d 50000000 		.4byte	.LFE68-.LFB68
 2994 0631 01       		.uleb128 0x1
 2995 0632 9C       		.byte	0x9c
 2996 0633 46060000 		.4byte	0x646
 2997 0637 15       		.uleb128 0x15
 2998 0638 A7040000 		.4byte	.LASF102
 2999 063c 01       		.byte	0x1
 3000 063d B1       		.byte	0xb1
 3001 063e 81000000 		.4byte	0x81
 3002 0642 02       		.uleb128 0x2
 3003 0643 91       		.byte	0x91
 3004 0644 77       		.sleb128 -9
 3005 0645 00       		.byte	0
 3006 0646 16       		.uleb128 0x16
 3007 0647 96080000 		.4byte	.LASF106
 3008 064b 01       		.byte	0x1
 3009 064c C8       		.byte	0xc8
 3010 064d 81000000 		.4byte	0x81
 3011 0651 00000000 		.4byte	.LFB69
 3012 0655 48000000 		.4byte	.LFE69-.LFB69
 3013 0659 01       		.uleb128 0x1
 3014 065a 9C       		.byte	0x9c
 3015 065b 7C060000 		.4byte	0x67c
 3016 065f 15       		.uleb128 0x15
 3017 0660 5F050000 		.4byte	.LASF103
 3018 0664 01       		.byte	0x1
 3019 0665 C8       		.byte	0xc8
 3020 0666 7C060000 		.4byte	0x67c
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 70


 3021 066a 02       		.uleb128 0x2
 3022 066b 91       		.byte	0x91
 3023 066c 74       		.sleb128 -12
 3024 066d 15       		.uleb128 0x15
 3025 066e A7040000 		.4byte	.LASF102
 3026 0672 01       		.byte	0x1
 3027 0673 C8       		.byte	0xc8
 3028 0674 81000000 		.4byte	0x81
 3029 0678 02       		.uleb128 0x2
 3030 0679 91       		.byte	0x91
 3031 067a 73       		.sleb128 -13
 3032 067b 00       		.byte	0
 3033 067c 06       		.uleb128 0x6
 3034 067d 04       		.byte	0x4
 3035 067e 18050000 		.4byte	0x518
 3036 0682 17       		.uleb128 0x17
 3037 0683 2D060000 		.4byte	.LASF104
 3038 0687 01       		.byte	0x1
 3039 0688 DD       		.byte	0xdd
 3040 0689 00000000 		.4byte	.LFB70
 3041 068d 1E000000 		.4byte	.LFE70-.LFB70
 3042 0691 01       		.uleb128 0x1
 3043 0692 9C       		.byte	0x9c
 3044 0693 A6060000 		.4byte	0x6a6
 3045 0697 15       		.uleb128 0x15
 3046 0698 8B060000 		.4byte	.LASF105
 3047 069c 01       		.byte	0x1
 3048 069d DD       		.byte	0xdd
 3049 069e 7C060000 		.4byte	0x67c
 3050 06a2 02       		.uleb128 0x2
 3051 06a3 91       		.byte	0x91
 3052 06a4 74       		.sleb128 -12
 3053 06a5 00       		.byte	0
 3054 06a6 18       		.uleb128 0x18
 3055 06a7 4C050000 		.4byte	.LASF107
 3056 06ab 01       		.byte	0x1
 3057 06ac E6       		.byte	0xe6
 3058 06ad 18050000 		.4byte	0x518
 3059 06b1 00000000 		.4byte	.LFB71
 3060 06b5 46000000 		.4byte	.LFE71-.LFB71
 3061 06b9 01       		.uleb128 0x1
 3062 06ba 9C       		.byte	0x9c
 3063 06bb F8060000 		.4byte	0x6f8
 3064 06bf 15       		.uleb128 0x15
 3065 06c0 CC020000 		.4byte	.LASF86
 3066 06c4 01       		.byte	0x1
 3067 06c5 E6       		.byte	0xe6
 3068 06c6 8D000000 		.4byte	0x8d
 3069 06ca 02       		.uleb128 0x2
 3070 06cb 91       		.byte	0x91
 3071 06cc 6A       		.sleb128 -22
 3072 06cd 15       		.uleb128 0x15
 3073 06ce 54080000 		.4byte	.LASF88
 3074 06d2 01       		.byte	0x1
 3075 06d3 E6       		.byte	0xe6
 3076 06d4 81000000 		.4byte	0x81
 3077 06d8 02       		.uleb128 0x2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 71


 3078 06d9 91       		.byte	0x91
 3079 06da 69       		.sleb128 -23
 3080 06db 15       		.uleb128 0x15
 3081 06dc 5C000000 		.4byte	.LASF89
 3082 06e0 01       		.byte	0x1
 3083 06e1 E6       		.byte	0xe6
 3084 06e2 81000000 		.4byte	0x81
 3085 06e6 02       		.uleb128 0x2
 3086 06e7 91       		.byte	0x91
 3087 06e8 68       		.sleb128 -24
 3088 06e9 11       		.uleb128 0x11
 3089 06ea F3070000 		.4byte	.LASF108
 3090 06ee 01       		.byte	0x1
 3091 06ef E9       		.byte	0xe9
 3092 06f0 18050000 		.4byte	0x518
 3093 06f4 02       		.uleb128 0x2
 3094 06f5 91       		.byte	0x91
 3095 06f6 70       		.sleb128 -16
 3096 06f7 00       		.byte	0
 3097 06f8 10       		.uleb128 0x10
 3098 06f9 9A060000 		.4byte	.LASF110
 3099 06fd 01       		.byte	0x1
 3100 06fe FF       		.byte	0xff
 3101 06ff 00000000 		.4byte	.LFB72
 3102 0703 2C010000 		.4byte	.LFE72-.LFB72
 3103 0707 01       		.uleb128 0x1
 3104 0708 9C       		.byte	0x9c
 3105 0709 6E070000 		.4byte	0x76e
 3106 070d 19       		.uleb128 0x19
 3107 070e 60010000 		.4byte	.LASF111
 3108 0712 01       		.byte	0x1
 3109 0713 0701     		.2byte	0x107
 3110 0715 D5010000 		.4byte	0x1d5
 3111 0719 03       		.uleb128 0x3
 3112 071a 91       		.byte	0x91
 3113 071b EC7C     		.sleb128 -404
 3114 071d 19       		.uleb128 0x19
 3115 071e 01020000 		.4byte	.LASF112
 3116 0722 01       		.byte	0x1
 3117 0723 0B01     		.2byte	0x10b
 3118 0725 D5010000 		.4byte	0x1d5
 3119 0729 03       		.uleb128 0x3
 3120 072a 91       		.byte	0x91
 3121 072b E879     		.sleb128 -792
 3122 072d 19       		.uleb128 0x19
 3123 072e 2E080000 		.4byte	.LASF113
 3124 0732 01       		.byte	0x1
 3125 0733 1501     		.2byte	0x115
 3126 0735 D5010000 		.4byte	0x1d5
 3127 0739 03       		.uleb128 0x3
 3128 073a 91       		.byte	0x91
 3129 073b E476     		.sleb128 -1180
 3130 073d 19       		.uleb128 0x19
 3131 073e 0D010000 		.4byte	.LASF114
 3132 0742 01       		.byte	0x1
 3133 0743 1901     		.2byte	0x119
 3134 0745 D5010000 		.4byte	0x1d5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 72


 3135 0749 03       		.uleb128 0x3
 3136 074a 91       		.byte	0x91
 3137 074b E073     		.sleb128 -1568
 3138 074d 19       		.uleb128 0x19
 3139 074e 5A040000 		.4byte	.LASF115
 3140 0752 01       		.byte	0x1
 3141 0753 1D01     		.2byte	0x11d
 3142 0755 D5010000 		.4byte	0x1d5
 3143 0759 03       		.uleb128 0x3
 3144 075a 91       		.byte	0x91
 3145 075b DC70     		.sleb128 -1956
 3146 075d 19       		.uleb128 0x19
 3147 075e 00000000 		.4byte	.LASF116
 3148 0762 01       		.byte	0x1
 3149 0763 2101     		.2byte	0x121
 3150 0765 D5010000 		.4byte	0x1d5
 3151 0769 03       		.uleb128 0x3
 3152 076a 91       		.byte	0x91
 3153 076b D86D     		.sleb128 -2344
 3154 076d 00       		.byte	0
 3155 076e 1A       		.uleb128 0x1a
 3156 076f AC080000 		.4byte	.LASF173
 3157 0773 01       		.byte	0x1
 3158 0774 2C01     		.2byte	0x12c
 3159 0776 68000000 		.4byte	0x68
 3160 077a 00000000 		.4byte	.LFB73
 3161 077e 1E000000 		.4byte	.LFE73-.LFB73
 3162 0782 01       		.uleb128 0x1
 3163 0783 9C       		.byte	0x9c
 3164 0784 1B       		.uleb128 0x1b
 3165 0785 86020000 		.4byte	.LASF117
 3166 0789 01       		.byte	0x1
 3167 078a 4201     		.2byte	0x142
 3168 078c 81000000 		.4byte	0x81
 3169 0790 00000000 		.4byte	.LFB74
 3170 0794 5C040000 		.4byte	.LFE74-.LFB74
 3171 0798 01       		.uleb128 0x1
 3172 0799 9C       		.byte	0x9c
 3173 079a EE080000 		.4byte	0x8ee
 3174 079e 1C       		.uleb128 0x1c
 3175 079f 62000000 		.4byte	.LBB2
 3176 07a3 CC030000 		.4byte	.LBE2-.LBB2
 3177 07a7 19       		.uleb128 0x19
 3178 07a8 70050000 		.4byte	.LASF118
 3179 07ac 01       		.byte	0x1
 3180 07ad 7201     		.2byte	0x172
 3181 07af C1030000 		.4byte	0x3c1
 3182 07b3 02       		.uleb128 0x2
 3183 07b4 91       		.byte	0x91
 3184 07b5 48       		.sleb128 -56
 3185 07b6 19       		.uleb128 0x19
 3186 07b7 AA050000 		.4byte	.LASF119
 3187 07bb 01       		.byte	0x1
 3188 07bc 7601     		.2byte	0x176
 3189 07be C1030000 		.4byte	0x3c1
 3190 07c2 03       		.uleb128 0x3
 3191 07c3 91       		.byte	0x91
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 73


 3192 07c4 B47F     		.sleb128 -76
 3193 07c6 19       		.uleb128 0x19
 3194 07c7 5E020000 		.4byte	.LASF120
 3195 07cb 01       		.byte	0x1
 3196 07cc 7B01     		.2byte	0x17b
 3197 07ce C1030000 		.4byte	0x3c1
 3198 07d2 03       		.uleb128 0x3
 3199 07d3 91       		.byte	0x91
 3200 07d4 A07F     		.sleb128 -96
 3201 07d6 19       		.uleb128 0x19
 3202 07d7 A0030000 		.4byte	.LASF121
 3203 07db 01       		.byte	0x1
 3204 07dc 8E01     		.2byte	0x18e
 3205 07de 8D000000 		.4byte	0x8d
 3206 07e2 02       		.uleb128 0x2
 3207 07e3 91       		.byte	0x91
 3208 07e4 66       		.sleb128 -26
 3209 07e5 19       		.uleb128 0x19
 3210 07e6 45040000 		.4byte	.LASF122
 3211 07ea 01       		.byte	0x1
 3212 07eb 8F01     		.2byte	0x18f
 3213 07ed C1030000 		.4byte	0x3c1
 3214 07f1 03       		.uleb128 0x3
 3215 07f2 91       		.byte	0x91
 3216 07f3 8C7F     		.sleb128 -116
 3217 07f5 19       		.uleb128 0x19
 3218 07f6 8E070000 		.4byte	.LASF123
 3219 07fa 01       		.byte	0x1
 3220 07fb A401     		.2byte	0x1a4
 3221 07fd EE080000 		.4byte	0x8ee
 3222 0801 03       		.uleb128 0x3
 3223 0802 91       		.byte	0x91
 3224 0803 A475     		.sleb128 -1372
 3225 0805 19       		.uleb128 0x19
 3226 0806 0E080000 		.4byte	.LASF31
 3227 080a 01       		.byte	0x1
 3228 080b A501     		.2byte	0x1a5
 3229 080d 81000000 		.4byte	0x81
 3230 0811 02       		.uleb128 0x2
 3231 0812 91       		.byte	0x91
 3232 0813 65       		.sleb128 -27
 3233 0814 19       		.uleb128 0x19
 3234 0815 60070000 		.4byte	.LASF124
 3235 0819 01       		.byte	0x1
 3236 081a AC01     		.2byte	0x1ac
 3237 081c F8000000 		.4byte	0xf8
 3238 0820 02       		.uleb128 0x2
 3239 0821 91       		.byte	0x91
 3240 0822 6C       		.sleb128 -20
 3241 0823 19       		.uleb128 0x19
 3242 0824 7D010000 		.4byte	.LASF125
 3243 0828 01       		.byte	0x1
 3244 0829 B001     		.2byte	0x1b0
 3245 082b A5000000 		.4byte	0xa5
 3246 082f 02       		.uleb128 0x2
 3247 0830 91       		.byte	0x91
 3248 0831 64       		.sleb128 -28
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 74


 3249 0832 19       		.uleb128 0x19
 3250 0833 8F020000 		.4byte	.LASF126
 3251 0837 01       		.byte	0x1
 3252 0838 E001     		.2byte	0x1e0
 3253 083a 4C000000 		.4byte	0x4c
 3254 083e 02       		.uleb128 0x2
 3255 083f 91       		.byte	0x91
 3256 0840 5C       		.sleb128 -36
 3257 0841 1D       		.uleb128 0x1d
 3258 0842 F0000000 		.4byte	.LBB3
 3259 0846 2C000000 		.4byte	.LBE3-.LBB3
 3260 084a 6E080000 		.4byte	0x86e
 3261 084e 19       		.uleb128 0x19
 3262 084f C6060000 		.4byte	.LASF127
 3263 0853 01       		.byte	0x1
 3264 0854 8301     		.2byte	0x183
 3265 0856 8D000000 		.4byte	0x8d
 3266 085a 02       		.uleb128 0x2
 3267 085b 91       		.byte	0x91
 3268 085c 68       		.sleb128 -24
 3269 085d 19       		.uleb128 0x19
 3270 085e EF010000 		.4byte	.LASF128
 3271 0862 01       		.byte	0x1
 3272 0863 8401     		.2byte	0x184
 3273 0865 C1030000 		.4byte	0x3c1
 3274 0869 03       		.uleb128 0x3
 3275 086a 91       		.byte	0x91
 3276 086b F87E     		.sleb128 -136
 3277 086d 00       		.byte	0
 3278 086e 1D       		.uleb128 0x1d
 3279 086f 1E010000 		.4byte	.LBB4
 3280 0873 20000000 		.4byte	.LBE4-.LBB4
 3281 0877 8C080000 		.4byte	0x88c
 3282 087b 19       		.uleb128 0x19
 3283 087c EF010000 		.4byte	.LASF128
 3284 0880 01       		.byte	0x1
 3285 0881 8801     		.2byte	0x188
 3286 0883 C1030000 		.4byte	0x3c1
 3287 0887 03       		.uleb128 0x3
 3288 0888 91       		.byte	0x91
 3289 0889 E47E     		.sleb128 -156
 3290 088b 00       		.byte	0
 3291 088c 1D       		.uleb128 0x1d
 3292 088d 5E020000 		.4byte	.LBB5
 3293 0891 4C010000 		.4byte	.LBE5-.LBB5
 3294 0895 C3080000 		.4byte	0x8c3
 3295 0899 19       		.uleb128 0x19
 3296 089a 58050000 		.4byte	.LASF129
 3297 089e 01       		.byte	0x1
 3298 089f B501     		.2byte	0x1b5
 3299 08a1 A5000000 		.4byte	0xa5
 3300 08a5 02       		.uleb128 0x2
 3301 08a6 91       		.byte	0x91
 3302 08a7 6B       		.sleb128 -21
 3303 08a8 1C       		.uleb128 0x1c
 3304 08a9 66020000 		.4byte	.LBB6
 3305 08ad 28010000 		.4byte	.LBE6-.LBB6
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 75


 3306 08b1 19       		.uleb128 0x19
 3307 08b2 6C030000 		.4byte	.LASF130
 3308 08b6 01       		.byte	0x1
 3309 08b7 B701     		.2byte	0x1b7
 3310 08b9 FE080000 		.4byte	0x8fe
 3311 08bd 03       		.uleb128 0x3
 3312 08be 91       		.byte	0x91
 3313 08bf EC76     		.sleb128 -1172
 3314 08c1 00       		.byte	0
 3315 08c2 00       		.byte	0
 3316 08c3 1C       		.uleb128 0x1c
 3317 08c4 C4030000 		.4byte	.LBB7
 3318 08c8 3A000000 		.4byte	.LBE7-.LBB7
 3319 08cc 19       		.uleb128 0x19
 3320 08cd 6C020000 		.4byte	.LASF131
 3321 08d1 01       		.byte	0x1
 3322 08d2 D701     		.2byte	0x1d7
 3323 08d4 68000000 		.4byte	0x68
 3324 08d8 02       		.uleb128 0x2
 3325 08d9 91       		.byte	0x91
 3326 08da 60       		.sleb128 -32
 3327 08db 19       		.uleb128 0x19
 3328 08dc 38060000 		.4byte	.LASF132
 3329 08e0 01       		.byte	0x1
 3330 08e1 D801     		.2byte	0x1d8
 3331 08e3 0F090000 		.4byte	0x90f
 3332 08e7 03       		.uleb128 0x3
 3333 08e8 91       		.byte	0x91
 3334 08e9 D87E     		.sleb128 -168
 3335 08eb 00       		.byte	0
 3336 08ec 00       		.byte	0
 3337 08ed 00       		.byte	0
 3338 08ee 07       		.uleb128 0x7
 3339 08ef E3000000 		.4byte	0xe3
 3340 08f3 FE080000 		.4byte	0x8fe
 3341 08f7 08       		.uleb128 0x8
 3342 08f8 F1000000 		.4byte	0xf1
 3343 08fc C7       		.byte	0xc7
 3344 08fd 00       		.byte	0
 3345 08fe 07       		.uleb128 0x7
 3346 08ff E3000000 		.4byte	0xe3
 3347 0903 0F090000 		.4byte	0x90f
 3348 0907 1E       		.uleb128 0x1e
 3349 0908 F1000000 		.4byte	0xf1
 3350 090c E803     		.2byte	0x3e8
 3351 090e 00       		.byte	0
 3352 090f 07       		.uleb128 0x7
 3353 0910 E3000000 		.4byte	0xe3
 3354 0914 1F090000 		.4byte	0x91f
 3355 0918 08       		.uleb128 0x8
 3356 0919 F1000000 		.4byte	0xf1
 3357 091d 09       		.byte	0x9
 3358 091e 00       		.byte	0
 3359 091f 1B       		.uleb128 0x1b
 3360 0920 B1050000 		.4byte	.LASF133
 3361 0924 01       		.byte	0x1
 3362 0925 F501     		.2byte	0x1f5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 76


 3363 0927 81000000 		.4byte	0x81
 3364 092b 00000000 		.4byte	.LFB75
 3365 092f 44000000 		.4byte	.LFE75-.LFB75
 3366 0933 01       		.uleb128 0x1
 3367 0934 9C       		.byte	0x9c
 3368 0935 53090000 		.4byte	0x953
 3369 0939 1C       		.uleb128 0x1c
 3370 093a 20000000 		.4byte	.LBB8
 3371 093e 1A000000 		.4byte	.LBE8-.LBB8
 3372 0942 19       		.uleb128 0x19
 3373 0943 8F020000 		.4byte	.LASF126
 3374 0947 01       		.byte	0x1
 3375 0948 0002     		.2byte	0x200
 3376 094a 4C000000 		.4byte	0x4c
 3377 094e 02       		.uleb128 0x2
 3378 094f 91       		.byte	0x91
 3379 0950 74       		.sleb128 -12
 3380 0951 00       		.byte	0
 3381 0952 00       		.byte	0
 3382 0953 1B       		.uleb128 0x1b
 3383 0954 E0030000 		.4byte	.LASF134
 3384 0958 01       		.byte	0x1
 3385 0959 1502     		.2byte	0x215
 3386 095b 81000000 		.4byte	0x81
 3387 095f 00000000 		.4byte	.LFB76
 3388 0963 84030000 		.4byte	.LFE76-.LFB76
 3389 0967 01       		.uleb128 0x1
 3390 0968 9C       		.byte	0x9c
 3391 0969 020A0000 		.4byte	0xa02
 3392 096d 19       		.uleb128 0x19
 3393 096e 1F050000 		.4byte	.LASF65
 3394 0972 01       		.byte	0x1
 3395 0973 1802     		.2byte	0x218
 3396 0975 4C000000 		.4byte	0x4c
 3397 0979 02       		.uleb128 0x2
 3398 097a 91       		.byte	0x91
 3399 097b 6C       		.sleb128 -20
 3400 097c 19       		.uleb128 0x19
 3401 097d 66070000 		.4byte	.LASF135
 3402 0981 01       		.byte	0x1
 3403 0982 1902     		.2byte	0x219
 3404 0984 020A0000 		.4byte	0xa02
 3405 0988 02       		.uleb128 0x2
 3406 0989 91       		.byte	0x91
 3407 098a 4C       		.sleb128 -52
 3408 098b 19       		.uleb128 0x19
 3409 098c FC020000 		.4byte	.LASF64
 3410 0990 01       		.byte	0x1
 3411 0991 1D02     		.2byte	0x21d
 3412 0993 C1030000 		.4byte	0x3c1
 3413 0997 03       		.uleb128 0x3
 3414 0998 91       		.byte	0x91
 3415 0999 B87F     		.sleb128 -72
 3416 099b 19       		.uleb128 0x19
 3417 099c 77030000 		.4byte	.LASF136
 3418 09a0 01       		.byte	0x1
 3419 09a1 3B02     		.2byte	0x23b
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 77


 3420 09a3 CD020000 		.4byte	0x2cd
 3421 09a7 03       		.uleb128 0x3
 3422 09a8 91       		.byte	0x91
 3423 09a9 A47F     		.sleb128 -92
 3424 09ab 1D       		.uleb128 0x1d
 3425 09ac 26000000 		.4byte	.LBB9
 3426 09b0 7A000000 		.4byte	.LBE9-.LBB9
 3427 09b4 C9090000 		.4byte	0x9c9
 3428 09b8 19       		.uleb128 0x19
 3429 09b9 AC070000 		.4byte	.LASF137
 3430 09bd 01       		.byte	0x1
 3431 09be 2302     		.2byte	0x223
 3432 09c0 29020000 		.4byte	0x229
 3433 09c4 03       		.uleb128 0x3
 3434 09c5 91       		.byte	0x91
 3435 09c6 887F     		.sleb128 -120
 3436 09c8 00       		.byte	0
 3437 09c9 1D       		.uleb128 0x1d
 3438 09ca 28010000 		.4byte	.LBB10
 3439 09ce F4000000 		.4byte	.LBE10-.LBB10
 3440 09d2 E7090000 		.4byte	0x9e7
 3441 09d6 19       		.uleb128 0x19
 3442 09d7 03080000 		.4byte	.LASF138
 3443 09db 01       		.byte	0x1
 3444 09dc 5602     		.2byte	0x256
 3445 09de 11030000 		.4byte	0x311
 3446 09e2 03       		.uleb128 0x3
 3447 09e3 91       		.byte	0x91
 3448 09e4 F87E     		.sleb128 -136
 3449 09e6 00       		.byte	0
 3450 09e7 1C       		.uleb128 0x1c
 3451 09e8 2C020000 		.4byte	.LBB11
 3452 09ec DC000000 		.4byte	.LBE11-.LBB11
 3453 09f0 19       		.uleb128 0x19
 3454 09f1 BF020000 		.4byte	.LASF139
 3455 09f5 01       		.byte	0x1
 3456 09f6 7902     		.2byte	0x279
 3457 09f8 7D020000 		.4byte	0x27d
 3458 09fc 03       		.uleb128 0x3
 3459 09fd 91       		.byte	0x91
 3460 09fe 987E     		.sleb128 -232
 3461 0a00 00       		.byte	0
 3462 0a01 00       		.byte	0
 3463 0a02 07       		.uleb128 0x7
 3464 0a03 E3000000 		.4byte	0xe3
 3465 0a07 120A0000 		.4byte	0xa12
 3466 0a0b 08       		.uleb128 0x8
 3467 0a0c F1000000 		.4byte	0xf1
 3468 0a10 1F       		.byte	0x1f
 3469 0a11 00       		.byte	0
 3470 0a12 1F       		.uleb128 0x1f
 3471 0a13 3A030000 		.4byte	.LASF140
 3472 0a17 01       		.byte	0x1
 3473 0a18 9C02     		.2byte	0x29c
 3474 0a1a 81000000 		.4byte	0x81
 3475 0a1e 00000000 		.4byte	.LFB77
 3476 0a22 74000000 		.4byte	.LFE77-.LFB77
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 78


 3477 0a26 01       		.uleb128 0x1
 3478 0a27 9C       		.byte	0x9c
 3479 0a28 580A0000 		.4byte	0xa58
 3480 0a2c 20       		.uleb128 0x20
 3481 0a2d 1F050000 		.4byte	.LASF65
 3482 0a31 01       		.byte	0x1
 3483 0a32 9C02     		.2byte	0x29c
 3484 0a34 4C000000 		.4byte	0x4c
 3485 0a38 02       		.uleb128 0x2
 3486 0a39 91       		.byte	0x91
 3487 0a3a 64       		.sleb128 -28
 3488 0a3b 21       		.uleb128 0x21
 3489 0a3c 7400     		.ascii	"t\000"
 3490 0a3e 01       		.byte	0x1
 3491 0a3f A302     		.2byte	0x2a3
 3492 0a41 580A0000 		.4byte	0xa58
 3493 0a45 02       		.uleb128 0x2
 3494 0a46 91       		.byte	0x91
 3495 0a47 74       		.sleb128 -12
 3496 0a48 19       		.uleb128 0x19
 3497 0a49 FE040000 		.4byte	.LASF141
 3498 0a4d 01       		.byte	0x1
 3499 0a4e A802     		.2byte	0x2a8
 3500 0a50 77010000 		.4byte	0x177
 3501 0a54 02       		.uleb128 0x2
 3502 0a55 91       		.byte	0x91
 3503 0a56 68       		.sleb128 -24
 3504 0a57 00       		.byte	0
 3505 0a58 06       		.uleb128 0x6
 3506 0a59 04       		.byte	0x4
 3507 0a5a 1C030000 		.4byte	0x31c
 3508 0a5e 1F       		.uleb128 0x1f
 3509 0a5f DB020000 		.4byte	.LASF142
 3510 0a63 01       		.byte	0x1
 3511 0a64 C502     		.2byte	0x2c5
 3512 0a66 81000000 		.4byte	0x81
 3513 0a6a 00000000 		.4byte	.LFB78
 3514 0a6e 38010000 		.4byte	.LFE78-.LFB78
 3515 0a72 01       		.uleb128 0x1
 3516 0a73 9C       		.byte	0x9c
 3517 0a74 D70A0000 		.4byte	0xad7
 3518 0a78 20       		.uleb128 0x20
 3519 0a79 02030000 		.4byte	.LASF143
 3520 0a7d 01       		.byte	0x1
 3521 0a7e C502     		.2byte	0x2c5
 3522 0a80 F8000000 		.4byte	0xf8
 3523 0a84 03       		.uleb128 0x3
 3524 0a85 91       		.byte	0x91
 3525 0a86 9C7E     		.sleb128 -228
 3526 0a88 20       		.uleb128 0x20
 3527 0a89 F7020000 		.4byte	.LASF144
 3528 0a8d 01       		.byte	0x1
 3529 0a8e C502     		.2byte	0x2c5
 3530 0a90 68000000 		.4byte	0x68
 3531 0a94 03       		.uleb128 0x3
 3532 0a95 91       		.byte	0x91
 3533 0a96 987E     		.sleb128 -232
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 79


 3534 0a98 20       		.uleb128 0x20
 3535 0a99 0D060000 		.4byte	.LASF145
 3536 0a9d 01       		.byte	0x1
 3537 0a9e C502     		.2byte	0x2c5
 3538 0aa0 F8000000 		.4byte	0xf8
 3539 0aa4 03       		.uleb128 0x3
 3540 0aa5 91       		.byte	0x91
 3541 0aa6 947E     		.sleb128 -236
 3542 0aa8 19       		.uleb128 0x19
 3543 0aa9 E0010000 		.4byte	.LASF146
 3544 0aad 01       		.byte	0x1
 3545 0aae C702     		.2byte	0x2c7
 3546 0ab0 81000000 		.4byte	0x81
 3547 0ab4 02       		.uleb128 0x2
 3548 0ab5 91       		.byte	0x91
 3549 0ab6 77       		.sleb128 -9
 3550 0ab7 19       		.uleb128 0x19
 3551 0ab8 47000000 		.4byte	.LASF147
 3552 0abc 01       		.byte	0x1
 3553 0abd CE02     		.2byte	0x2ce
 3554 0abf D70A0000 		.4byte	0xad7
 3555 0ac3 02       		.uleb128 0x2
 3556 0ac4 91       		.byte	0x91
 3557 0ac5 68       		.sleb128 -24
 3558 0ac6 19       		.uleb128 0x19
 3559 0ac7 8E070000 		.4byte	.LASF123
 3560 0acb 01       		.byte	0x1
 3561 0acc D602     		.2byte	0x2d6
 3562 0ace EE080000 		.4byte	0x8ee
 3563 0ad2 03       		.uleb128 0x3
 3564 0ad3 91       		.byte	0x91
 3565 0ad4 A07E     		.sleb128 -224
 3566 0ad6 00       		.byte	0
 3567 0ad7 07       		.uleb128 0x7
 3568 0ad8 E3000000 		.4byte	0xe3
 3569 0adc E70A0000 		.4byte	0xae7
 3570 0ae0 08       		.uleb128 0x8
 3571 0ae1 F1000000 		.4byte	0xf1
 3572 0ae5 0B       		.byte	0xb
 3573 0ae6 00       		.byte	0
 3574 0ae7 22       		.uleb128 0x22
 3575 0ae8 53010000 		.4byte	.LASF148
 3576 0aec 0E       		.byte	0xe
 3577 0aed 1207     		.2byte	0x712
 3578 0aef F30A0000 		.4byte	0xaf3
 3579 0af3 0C       		.uleb128 0xc
 3580 0af4 76000000 		.4byte	0x76
 3581 0af8 23       		.uleb128 0x23
 3582 0af9 37000000 		.4byte	.LASF149
 3583 0afd 0B       		.byte	0xb
 3584 0afe 11       		.byte	0x11
 3585 0aff CD040000 		.4byte	0x4cd
 3586 0b03 05       		.uleb128 0x5
 3587 0b04 03       		.byte	0x3
 3588 0b05 00000000 		.4byte	buffer_overflow
 3589 0b09 23       		.uleb128 0x23
 3590 0b0a B1040000 		.4byte	.LASF150
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 80


 3591 0b0e 0B       		.byte	0xb
 3592 0b0f 22       		.byte	0x22
 3593 0b10 8D000000 		.4byte	0x8d
 3594 0b14 05       		.uleb128 0x5
 3595 0b15 03       		.byte	0x3
 3596 0b16 00000000 		.4byte	dataPointsInStack
 3597 0b1a 23       		.uleb128 0x23
 3598 0b1b 15080000 		.4byte	.LASF151
 3599 0b1f 0B       		.byte	0xb
 3600 0b20 23       		.byte	0x23
 3601 0b21 8D000000 		.4byte	0x8d
 3602 0b25 05       		.uleb128 0x5
 3603 0b26 03       		.byte	0x3
 3604 0b27 00000000 		.4byte	dataPointsInStackDesired
 3605 0b2b 07       		.uleb128 0x7
 3606 0b2c D1030000 		.4byte	0x3d1
 3607 0b30 3B0B0000 		.4byte	0xb3b
 3608 0b34 08       		.uleb128 0x8
 3609 0b35 F1000000 		.4byte	0xf1
 3610 0b39 95       		.byte	0x95
 3611 0b3a 00       		.byte	0
 3612 0b3b 23       		.uleb128 0x23
 3613 0b3c F1030000 		.4byte	.LASF152
 3614 0b40 0B       		.byte	0xb
 3615 0b41 24       		.byte	0x24
 3616 0b42 2B0B0000 		.4byte	0xb2b
 3617 0b46 05       		.uleb128 0x5
 3618 0b47 03       		.byte	0x3
 3619 0b48 00000000 		.4byte	data
 3620 0b4c 23       		.uleb128 0x23
 3621 0b4d 3A010000 		.4byte	.LASF153
 3622 0b51 0C       		.byte	0xc
 3623 0b52 20       		.byte	0x20
 3624 0b53 81000000 		.4byte	0x81
 3625 0b57 05       		.uleb128 0x5
 3626 0b58 03       		.byte	0x3
 3627 0b59 00000000 		.4byte	modem_state
 3628 0b5d 23       		.uleb128 0x23
 3629 0b5e 6E040000 		.4byte	.LASF154
 3630 0b62 0C       		.byte	0xc
 3631 0b63 63       		.byte	0x63
 3632 0b64 BD000000 		.4byte	0xbd
 3633 0b68 05       		.uleb128 0x5
 3634 0b69 03       		.byte	0x3
 3635 0b6a 00000000 		.4byte	modem_start_time_stamp
 3636 0b6e 23       		.uleb128 0x23
 3637 0b6f 07040000 		.4byte	.LASF91
 3638 0b73 0C       		.byte	0xc
 3639 0b74 64       		.byte	0x64
 3640 0b75 09040000 		.4byte	0x409
 3641 0b79 05       		.uleb128 0x5
 3642 0b7a 03       		.byte	0x3
 3643 0b7b 00000000 		.4byte	modem_info
 3644 0b7f 23       		.uleb128 0x23
 3645 0b80 77070000 		.4byte	.LASF155
 3646 0b84 0C       		.byte	0xc
 3647 0b85 65       		.byte	0x65
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 81


 3648 0b86 7D040000 		.4byte	0x47d
 3649 0b8a 05       		.uleb128 0x5
 3650 0b8b 03       		.byte	0x3
 3651 0b8c 00000000 		.4byte	modem_stats
 3652 0b90 23       		.uleb128 0x23
 3653 0b91 37050000 		.4byte	.LASF156
 3654 0b95 0C       		.byte	0xc
 3655 0b96 66       		.byte	0x66
 3656 0b97 D4040000 		.4byte	0x4d4
 3657 0b9b 05       		.uleb128 0x5
 3658 0b9c 03       		.byte	0x3
 3659 0b9d 00000000 		.4byte	updatable_parameters
 3660 0ba1 07       		.uleb128 0x7
 3661 0ba2 E3000000 		.4byte	0xe3
 3662 0ba6 B20B0000 		.4byte	0xbb2
 3663 0baa 1E       		.uleb128 0x1e
 3664 0bab F1000000 		.4byte	0xf1
 3665 0baf 0F27     		.2byte	0x270f
 3666 0bb1 00       		.byte	0
 3667 0bb2 23       		.uleb128 0x23
 3668 0bb3 88050000 		.4byte	.LASF157
 3669 0bb7 0D       		.byte	0xd
 3670 0bb8 18       		.byte	0x18
 3671 0bb9 A10B0000 		.4byte	0xba1
 3672 0bbd 05       		.uleb128 0x5
 3673 0bbe 03       		.byte	0x3
 3674 0bbf 00000000 		.4byte	http_request
 3675 0bc3 23       		.uleb128 0x23
 3676 0bc4 44080000 		.4byte	.LASF158
 3677 0bc8 0D       		.byte	0xd
 3678 0bc9 19       		.byte	0x19
 3679 0bca A10B0000 		.4byte	0xba1
 3680 0bce 05       		.uleb128 0x5
 3681 0bcf 03       		.byte	0x3
 3682 0bd0 00000000 		.4byte	http_body
 3683 0bd4 23       		.uleb128 0x23
 3684 0bd5 83070000 		.4byte	.LASF159
 3685 0bd9 0D       		.byte	0xd
 3686 0bda 1A       		.byte	0x1a
 3687 0bdb EE080000 		.4byte	0x8ee
 3688 0bdf 05       		.uleb128 0x5
 3689 0be0 03       		.byte	0x3
 3690 0be1 00000000 		.4byte	http_route
 3691 0be5 23       		.uleb128 0x23
 3692 0be6 73060000 		.4byte	.LASF160
 3693 0bea 0D       		.byte	0xd
 3694 0beb 41       		.byte	0x41
 3695 0bec 4F050000 		.4byte	0x54f
 3696 0bf0 05       		.uleb128 0x5
 3697 0bf1 03       		.byte	0x3
 3698 0bf2 00000000 		.4byte	system_info
 3699 0bf6 23       		.uleb128 0x23
 3700 0bf7 13060000 		.4byte	.LASF161
 3701 0bfb 0D       		.byte	0xd
 3702 0bfc 53       		.byte	0x53
 3703 0bfd 8B050000 		.4byte	0x58b
 3704 0c01 05       		.uleb128 0x5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 82


 3705 0c02 03       		.byte	0x3
 3706 0c03 00000000 		.4byte	system_settings
 3707 0c07 23       		.uleb128 0x23
 3708 0c08 46010000 		.4byte	.LASF162
 3709 0c0c 0D       		.byte	0xd
 3710 0c0d 6F       		.byte	0x6f
 3711 0c0e 18050000 		.4byte	0x518
 3712 0c12 05       		.uleb128 0x5
 3713 0c13 03       		.byte	0x3
 3714 0c14 00000000 		.4byte	alarmMeasure
 3715 0c18 23       		.uleb128 0x23
 3716 0c19 8A010000 		.4byte	.LASF163
 3717 0c1d 0D       		.byte	0xd
 3718 0c1e 70       		.byte	0x70
 3719 0c1f 81000000 		.4byte	0x81
 3720 0c23 05       		.uleb128 0x5
 3721 0c24 03       		.byte	0x3
 3722 0c25 00000000 		.4byte	timeToMeasure
 3723 0c29 23       		.uleb128 0x23
 3724 0c2a 0F030000 		.4byte	.LASF164
 3725 0c2e 0D       		.byte	0xd
 3726 0c2f 71       		.byte	0x71
 3727 0c30 18050000 		.4byte	0x518
 3728 0c34 05       		.uleb128 0x5
 3729 0c35 03       		.byte	0x3
 3730 0c36 00000000 		.4byte	alarmSync
 3731 0c3a 23       		.uleb128 0x23
 3732 0c3b B0010000 		.4byte	.LASF165
 3733 0c3f 0D       		.byte	0xd
 3734 0c40 72       		.byte	0x72
 3735 0c41 81000000 		.4byte	0x81
 3736 0c45 05       		.uleb128 0x5
 3737 0c46 03       		.byte	0x3
 3738 0c47 00000000 		.4byte	timeToSync
 3739 0c4b 23       		.uleb128 0x23
 3740 0c4c 08050000 		.4byte	.LASF166
 3741 0c50 0D       		.byte	0xd
 3742 0c51 73       		.byte	0x73
 3743 0c52 81000000 		.4byte	0x81
 3744 0c56 05       		.uleb128 0x5
 3745 0c57 03       		.byte	0x3
 3746 0c58 00000000 		.4byte	timeToSycnRemoteParams
 3747 0c5c 24       		.uleb128 0x24
 3748 0c5d 68657900 		.ascii	"hey\000"
 3749 0c61 0D       		.byte	0xd
 3750 0c62 74       		.byte	0x74
 3751 0c63 81000000 		.4byte	0x81
 3752 0c67 05       		.uleb128 0x5
 3753 0c68 03       		.byte	0x3
 3754 0c69 00000000 		.4byte	hey
 3755 0c6d 07       		.uleb128 0x7
 3756 0c6e E3000000 		.4byte	0xe3
 3757 0c72 7D0C0000 		.4byte	0xc7d
 3758 0c76 08       		.uleb128 0x8
 3759 0c77 F1000000 		.4byte	0xf1
 3760 0c7b 1D       		.byte	0x1d
 3761 0c7c 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 83


 3762 0c7d 23       		.uleb128 0x23
 3763 0c7e C7050000 		.4byte	.LASF167
 3764 0c82 01       		.byte	0x1
 3765 0c83 1D       		.byte	0x1d
 3766 0c84 6D0C0000 		.4byte	0xc6d
 3767 0c88 05       		.uleb128 0x5
 3768 0c89 03       		.byte	0x3
 3769 0c8a 00000000 		.4byte	Data_fileName
 3770 0c8e 23       		.uleb128 0x23
 3771 0c8f D2040000 		.4byte	.LASF98
 3772 0c93 01       		.byte	0x1
 3773 0c94 1E       		.byte	0x1e
 3774 0c95 81000000 		.4byte	0x81
 3775 0c99 05       		.uleb128 0x5
 3776 0c9a 03       		.byte	0x3
 3777 0c9b 00000000 		.4byte	try_counter
 3778 0c9f 00       		.byte	0
 3779              		.section	.debug_abbrev,"",%progbits
 3780              	.Ldebug_abbrev0:
 3781 0000 01       		.uleb128 0x1
 3782 0001 11       		.uleb128 0x11
 3783 0002 01       		.byte	0x1
 3784 0003 25       		.uleb128 0x25
 3785 0004 0E       		.uleb128 0xe
 3786 0005 13       		.uleb128 0x13
 3787 0006 0B       		.uleb128 0xb
 3788 0007 03       		.uleb128 0x3
 3789 0008 0E       		.uleb128 0xe
 3790 0009 1B       		.uleb128 0x1b
 3791 000a 0E       		.uleb128 0xe
 3792 000b 55       		.uleb128 0x55
 3793 000c 17       		.uleb128 0x17
 3794 000d 11       		.uleb128 0x11
 3795 000e 01       		.uleb128 0x1
 3796 000f 10       		.uleb128 0x10
 3797 0010 17       		.uleb128 0x17
 3798 0011 00       		.byte	0
 3799 0012 00       		.byte	0
 3800 0013 02       		.uleb128 0x2
 3801 0014 24       		.uleb128 0x24
 3802 0015 00       		.byte	0
 3803 0016 0B       		.uleb128 0xb
 3804 0017 0B       		.uleb128 0xb
 3805 0018 3E       		.uleb128 0x3e
 3806 0019 0B       		.uleb128 0xb
 3807 001a 03       		.uleb128 0x3
 3808 001b 0E       		.uleb128 0xe
 3809 001c 00       		.byte	0
 3810 001d 00       		.byte	0
 3811 001e 03       		.uleb128 0x3
 3812 001f 16       		.uleb128 0x16
 3813 0020 00       		.byte	0
 3814 0021 03       		.uleb128 0x3
 3815 0022 0E       		.uleb128 0xe
 3816 0023 3A       		.uleb128 0x3a
 3817 0024 0B       		.uleb128 0xb
 3818 0025 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 84


 3819 0026 0B       		.uleb128 0xb
 3820 0027 49       		.uleb128 0x49
 3821 0028 13       		.uleb128 0x13
 3822 0029 00       		.byte	0
 3823 002a 00       		.byte	0
 3824 002b 04       		.uleb128 0x4
 3825 002c 24       		.uleb128 0x24
 3826 002d 00       		.byte	0
 3827 002e 0B       		.uleb128 0xb
 3828 002f 0B       		.uleb128 0xb
 3829 0030 3E       		.uleb128 0x3e
 3830 0031 0B       		.uleb128 0xb
 3831 0032 03       		.uleb128 0x3
 3832 0033 08       		.uleb128 0x8
 3833 0034 00       		.byte	0
 3834 0035 00       		.byte	0
 3835 0036 05       		.uleb128 0x5
 3836 0037 16       		.uleb128 0x16
 3837 0038 00       		.byte	0
 3838 0039 03       		.uleb128 0x3
 3839 003a 0E       		.uleb128 0xe
 3840 003b 3A       		.uleb128 0x3a
 3841 003c 0B       		.uleb128 0xb
 3842 003d 3B       		.uleb128 0x3b
 3843 003e 05       		.uleb128 0x5
 3844 003f 49       		.uleb128 0x49
 3845 0040 13       		.uleb128 0x13
 3846 0041 00       		.byte	0
 3847 0042 00       		.byte	0
 3848 0043 06       		.uleb128 0x6
 3849 0044 0F       		.uleb128 0xf
 3850 0045 00       		.byte	0
 3851 0046 0B       		.uleb128 0xb
 3852 0047 0B       		.uleb128 0xb
 3853 0048 49       		.uleb128 0x49
 3854 0049 13       		.uleb128 0x13
 3855 004a 00       		.byte	0
 3856 004b 00       		.byte	0
 3857 004c 07       		.uleb128 0x7
 3858 004d 01       		.uleb128 0x1
 3859 004e 01       		.byte	0x1
 3860 004f 49       		.uleb128 0x49
 3861 0050 13       		.uleb128 0x13
 3862 0051 01       		.uleb128 0x1
 3863 0052 13       		.uleb128 0x13
 3864 0053 00       		.byte	0
 3865 0054 00       		.byte	0
 3866 0055 08       		.uleb128 0x8
 3867 0056 21       		.uleb128 0x21
 3868 0057 00       		.byte	0
 3869 0058 49       		.uleb128 0x49
 3870 0059 13       		.uleb128 0x13
 3871 005a 2F       		.uleb128 0x2f
 3872 005b 0B       		.uleb128 0xb
 3873 005c 00       		.byte	0
 3874 005d 00       		.byte	0
 3875 005e 09       		.uleb128 0x9
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 85


 3876 005f 13       		.uleb128 0x13
 3877 0060 01       		.byte	0x1
 3878 0061 0B       		.uleb128 0xb
 3879 0062 0B       		.uleb128 0xb
 3880 0063 3A       		.uleb128 0x3a
 3881 0064 0B       		.uleb128 0xb
 3882 0065 3B       		.uleb128 0x3b
 3883 0066 0B       		.uleb128 0xb
 3884 0067 01       		.uleb128 0x1
 3885 0068 13       		.uleb128 0x13
 3886 0069 00       		.byte	0
 3887 006a 00       		.byte	0
 3888 006b 0A       		.uleb128 0xa
 3889 006c 0D       		.uleb128 0xd
 3890 006d 00       		.byte	0
 3891 006e 03       		.uleb128 0x3
 3892 006f 08       		.uleb128 0x8
 3893 0070 3A       		.uleb128 0x3a
 3894 0071 0B       		.uleb128 0xb
 3895 0072 3B       		.uleb128 0x3b
 3896 0073 0B       		.uleb128 0xb
 3897 0074 49       		.uleb128 0x49
 3898 0075 13       		.uleb128 0x13
 3899 0076 38       		.uleb128 0x38
 3900 0077 0B       		.uleb128 0xb
 3901 0078 00       		.byte	0
 3902 0079 00       		.byte	0
 3903 007a 0B       		.uleb128 0xb
 3904 007b 0D       		.uleb128 0xd
 3905 007c 00       		.byte	0
 3906 007d 03       		.uleb128 0x3
 3907 007e 0E       		.uleb128 0xe
 3908 007f 3A       		.uleb128 0x3a
 3909 0080 0B       		.uleb128 0xb
 3910 0081 3B       		.uleb128 0x3b
 3911 0082 0B       		.uleb128 0xb
 3912 0083 49       		.uleb128 0x49
 3913 0084 13       		.uleb128 0x13
 3914 0085 38       		.uleb128 0x38
 3915 0086 0B       		.uleb128 0xb
 3916 0087 00       		.byte	0
 3917 0088 00       		.byte	0
 3918 0089 0C       		.uleb128 0xc
 3919 008a 35       		.uleb128 0x35
 3920 008b 00       		.byte	0
 3921 008c 49       		.uleb128 0x49
 3922 008d 13       		.uleb128 0x13
 3923 008e 00       		.byte	0
 3924 008f 00       		.byte	0
 3925 0090 0D       		.uleb128 0xd
 3926 0091 13       		.uleb128 0x13
 3927 0092 01       		.byte	0x1
 3928 0093 0B       		.uleb128 0xb
 3929 0094 05       		.uleb128 0x5
 3930 0095 3A       		.uleb128 0x3a
 3931 0096 0B       		.uleb128 0xb
 3932 0097 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 86


 3933 0098 0B       		.uleb128 0xb
 3934 0099 01       		.uleb128 0x1
 3935 009a 13       		.uleb128 0x13
 3936 009b 00       		.byte	0
 3937 009c 00       		.byte	0
 3938 009d 0E       		.uleb128 0xe
 3939 009e 13       		.uleb128 0x13
 3940 009f 01       		.byte	0x1
 3941 00a0 03       		.uleb128 0x3
 3942 00a1 08       		.uleb128 0x8
 3943 00a2 0B       		.uleb128 0xb
 3944 00a3 0B       		.uleb128 0xb
 3945 00a4 3A       		.uleb128 0x3a
 3946 00a5 0B       		.uleb128 0xb
 3947 00a6 3B       		.uleb128 0x3b
 3948 00a7 0B       		.uleb128 0xb
 3949 00a8 01       		.uleb128 0x1
 3950 00a9 13       		.uleb128 0x13
 3951 00aa 00       		.byte	0
 3952 00ab 00       		.byte	0
 3953 00ac 0F       		.uleb128 0xf
 3954 00ad 2E       		.uleb128 0x2e
 3955 00ae 00       		.byte	0
 3956 00af 3F       		.uleb128 0x3f
 3957 00b0 19       		.uleb128 0x19
 3958 00b1 03       		.uleb128 0x3
 3959 00b2 0E       		.uleb128 0xe
 3960 00b3 3A       		.uleb128 0x3a
 3961 00b4 0B       		.uleb128 0xb
 3962 00b5 3B       		.uleb128 0x3b
 3963 00b6 0B       		.uleb128 0xb
 3964 00b7 27       		.uleb128 0x27
 3965 00b8 19       		.uleb128 0x19
 3966 00b9 11       		.uleb128 0x11
 3967 00ba 01       		.uleb128 0x1
 3968 00bb 12       		.uleb128 0x12
 3969 00bc 06       		.uleb128 0x6
 3970 00bd 40       		.uleb128 0x40
 3971 00be 18       		.uleb128 0x18
 3972 00bf 9642     		.uleb128 0x2116
 3973 00c1 19       		.uleb128 0x19
 3974 00c2 00       		.byte	0
 3975 00c3 00       		.byte	0
 3976 00c4 10       		.uleb128 0x10
 3977 00c5 2E       		.uleb128 0x2e
 3978 00c6 01       		.byte	0x1
 3979 00c7 3F       		.uleb128 0x3f
 3980 00c8 19       		.uleb128 0x19
 3981 00c9 03       		.uleb128 0x3
 3982 00ca 0E       		.uleb128 0xe
 3983 00cb 3A       		.uleb128 0x3a
 3984 00cc 0B       		.uleb128 0xb
 3985 00cd 3B       		.uleb128 0x3b
 3986 00ce 0B       		.uleb128 0xb
 3987 00cf 11       		.uleb128 0x11
 3988 00d0 01       		.uleb128 0x1
 3989 00d1 12       		.uleb128 0x12
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 87


 3990 00d2 06       		.uleb128 0x6
 3991 00d3 40       		.uleb128 0x40
 3992 00d4 18       		.uleb128 0x18
 3993 00d5 9642     		.uleb128 0x2116
 3994 00d7 19       		.uleb128 0x19
 3995 00d8 01       		.uleb128 0x1
 3996 00d9 13       		.uleb128 0x13
 3997 00da 00       		.byte	0
 3998 00db 00       		.byte	0
 3999 00dc 11       		.uleb128 0x11
 4000 00dd 34       		.uleb128 0x34
 4001 00de 00       		.byte	0
 4002 00df 03       		.uleb128 0x3
 4003 00e0 0E       		.uleb128 0xe
 4004 00e1 3A       		.uleb128 0x3a
 4005 00e2 0B       		.uleb128 0xb
 4006 00e3 3B       		.uleb128 0x3b
 4007 00e4 0B       		.uleb128 0xb
 4008 00e5 49       		.uleb128 0x49
 4009 00e6 13       		.uleb128 0x13
 4010 00e7 02       		.uleb128 0x2
 4011 00e8 18       		.uleb128 0x18
 4012 00e9 00       		.byte	0
 4013 00ea 00       		.byte	0
 4014 00eb 12       		.uleb128 0x12
 4015 00ec 2E       		.uleb128 0x2e
 4016 00ed 01       		.byte	0x1
 4017 00ee 3F       		.uleb128 0x3f
 4018 00ef 19       		.uleb128 0x19
 4019 00f0 03       		.uleb128 0x3
 4020 00f1 0E       		.uleb128 0xe
 4021 00f2 3A       		.uleb128 0x3a
 4022 00f3 0B       		.uleb128 0xb
 4023 00f4 3B       		.uleb128 0x3b
 4024 00f5 0B       		.uleb128 0xb
 4025 00f6 49       		.uleb128 0x49
 4026 00f7 13       		.uleb128 0x13
 4027 00f8 11       		.uleb128 0x11
 4028 00f9 01       		.uleb128 0x1
 4029 00fa 12       		.uleb128 0x12
 4030 00fb 06       		.uleb128 0x6
 4031 00fc 40       		.uleb128 0x40
 4032 00fd 18       		.uleb128 0x18
 4033 00fe 9642     		.uleb128 0x2116
 4034 0100 19       		.uleb128 0x19
 4035 0101 01       		.uleb128 0x1
 4036 0102 13       		.uleb128 0x13
 4037 0103 00       		.byte	0
 4038 0104 00       		.byte	0
 4039 0105 13       		.uleb128 0x13
 4040 0106 2E       		.uleb128 0x2e
 4041 0107 00       		.byte	0
 4042 0108 3F       		.uleb128 0x3f
 4043 0109 19       		.uleb128 0x19
 4044 010a 03       		.uleb128 0x3
 4045 010b 0E       		.uleb128 0xe
 4046 010c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 88


 4047 010d 0B       		.uleb128 0xb
 4048 010e 3B       		.uleb128 0x3b
 4049 010f 0B       		.uleb128 0xb
 4050 0110 11       		.uleb128 0x11
 4051 0111 01       		.uleb128 0x1
 4052 0112 12       		.uleb128 0x12
 4053 0113 06       		.uleb128 0x6
 4054 0114 40       		.uleb128 0x40
 4055 0115 18       		.uleb128 0x18
 4056 0116 9642     		.uleb128 0x2116
 4057 0118 19       		.uleb128 0x19
 4058 0119 00       		.byte	0
 4059 011a 00       		.byte	0
 4060 011b 14       		.uleb128 0x14
 4061 011c 2E       		.uleb128 0x2e
 4062 011d 01       		.byte	0x1
 4063 011e 3F       		.uleb128 0x3f
 4064 011f 19       		.uleb128 0x19
 4065 0120 03       		.uleb128 0x3
 4066 0121 0E       		.uleb128 0xe
 4067 0122 3A       		.uleb128 0x3a
 4068 0123 0B       		.uleb128 0xb
 4069 0124 3B       		.uleb128 0x3b
 4070 0125 0B       		.uleb128 0xb
 4071 0126 27       		.uleb128 0x27
 4072 0127 19       		.uleb128 0x19
 4073 0128 11       		.uleb128 0x11
 4074 0129 01       		.uleb128 0x1
 4075 012a 12       		.uleb128 0x12
 4076 012b 06       		.uleb128 0x6
 4077 012c 40       		.uleb128 0x40
 4078 012d 18       		.uleb128 0x18
 4079 012e 9642     		.uleb128 0x2116
 4080 0130 19       		.uleb128 0x19
 4081 0131 01       		.uleb128 0x1
 4082 0132 13       		.uleb128 0x13
 4083 0133 00       		.byte	0
 4084 0134 00       		.byte	0
 4085 0135 15       		.uleb128 0x15
 4086 0136 05       		.uleb128 0x5
 4087 0137 00       		.byte	0
 4088 0138 03       		.uleb128 0x3
 4089 0139 0E       		.uleb128 0xe
 4090 013a 3A       		.uleb128 0x3a
 4091 013b 0B       		.uleb128 0xb
 4092 013c 3B       		.uleb128 0x3b
 4093 013d 0B       		.uleb128 0xb
 4094 013e 49       		.uleb128 0x49
 4095 013f 13       		.uleb128 0x13
 4096 0140 02       		.uleb128 0x2
 4097 0141 18       		.uleb128 0x18
 4098 0142 00       		.byte	0
 4099 0143 00       		.byte	0
 4100 0144 16       		.uleb128 0x16
 4101 0145 2E       		.uleb128 0x2e
 4102 0146 01       		.byte	0x1
 4103 0147 3F       		.uleb128 0x3f
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 89


 4104 0148 19       		.uleb128 0x19
 4105 0149 03       		.uleb128 0x3
 4106 014a 0E       		.uleb128 0xe
 4107 014b 3A       		.uleb128 0x3a
 4108 014c 0B       		.uleb128 0xb
 4109 014d 3B       		.uleb128 0x3b
 4110 014e 0B       		.uleb128 0xb
 4111 014f 27       		.uleb128 0x27
 4112 0150 19       		.uleb128 0x19
 4113 0151 49       		.uleb128 0x49
 4114 0152 13       		.uleb128 0x13
 4115 0153 11       		.uleb128 0x11
 4116 0154 01       		.uleb128 0x1
 4117 0155 12       		.uleb128 0x12
 4118 0156 06       		.uleb128 0x6
 4119 0157 40       		.uleb128 0x40
 4120 0158 18       		.uleb128 0x18
 4121 0159 9642     		.uleb128 0x2116
 4122 015b 19       		.uleb128 0x19
 4123 015c 01       		.uleb128 0x1
 4124 015d 13       		.uleb128 0x13
 4125 015e 00       		.byte	0
 4126 015f 00       		.byte	0
 4127 0160 17       		.uleb128 0x17
 4128 0161 2E       		.uleb128 0x2e
 4129 0162 01       		.byte	0x1
 4130 0163 3F       		.uleb128 0x3f
 4131 0164 19       		.uleb128 0x19
 4132 0165 03       		.uleb128 0x3
 4133 0166 0E       		.uleb128 0xe
 4134 0167 3A       		.uleb128 0x3a
 4135 0168 0B       		.uleb128 0xb
 4136 0169 3B       		.uleb128 0x3b
 4137 016a 0B       		.uleb128 0xb
 4138 016b 27       		.uleb128 0x27
 4139 016c 19       		.uleb128 0x19
 4140 016d 11       		.uleb128 0x11
 4141 016e 01       		.uleb128 0x1
 4142 016f 12       		.uleb128 0x12
 4143 0170 06       		.uleb128 0x6
 4144 0171 40       		.uleb128 0x40
 4145 0172 18       		.uleb128 0x18
 4146 0173 9742     		.uleb128 0x2117
 4147 0175 19       		.uleb128 0x19
 4148 0176 01       		.uleb128 0x1
 4149 0177 13       		.uleb128 0x13
 4150 0178 00       		.byte	0
 4151 0179 00       		.byte	0
 4152 017a 18       		.uleb128 0x18
 4153 017b 2E       		.uleb128 0x2e
 4154 017c 01       		.byte	0x1
 4155 017d 3F       		.uleb128 0x3f
 4156 017e 19       		.uleb128 0x19
 4157 017f 03       		.uleb128 0x3
 4158 0180 0E       		.uleb128 0xe
 4159 0181 3A       		.uleb128 0x3a
 4160 0182 0B       		.uleb128 0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 90


 4161 0183 3B       		.uleb128 0x3b
 4162 0184 0B       		.uleb128 0xb
 4163 0185 27       		.uleb128 0x27
 4164 0186 19       		.uleb128 0x19
 4165 0187 49       		.uleb128 0x49
 4166 0188 13       		.uleb128 0x13
 4167 0189 11       		.uleb128 0x11
 4168 018a 01       		.uleb128 0x1
 4169 018b 12       		.uleb128 0x12
 4170 018c 06       		.uleb128 0x6
 4171 018d 40       		.uleb128 0x40
 4172 018e 18       		.uleb128 0x18
 4173 018f 9742     		.uleb128 0x2117
 4174 0191 19       		.uleb128 0x19
 4175 0192 01       		.uleb128 0x1
 4176 0193 13       		.uleb128 0x13
 4177 0194 00       		.byte	0
 4178 0195 00       		.byte	0
 4179 0196 19       		.uleb128 0x19
 4180 0197 34       		.uleb128 0x34
 4181 0198 00       		.byte	0
 4182 0199 03       		.uleb128 0x3
 4183 019a 0E       		.uleb128 0xe
 4184 019b 3A       		.uleb128 0x3a
 4185 019c 0B       		.uleb128 0xb
 4186 019d 3B       		.uleb128 0x3b
 4187 019e 05       		.uleb128 0x5
 4188 019f 49       		.uleb128 0x49
 4189 01a0 13       		.uleb128 0x13
 4190 01a1 02       		.uleb128 0x2
 4191 01a2 18       		.uleb128 0x18
 4192 01a3 00       		.byte	0
 4193 01a4 00       		.byte	0
 4194 01a5 1A       		.uleb128 0x1a
 4195 01a6 2E       		.uleb128 0x2e
 4196 01a7 00       		.byte	0
 4197 01a8 3F       		.uleb128 0x3f
 4198 01a9 19       		.uleb128 0x19
 4199 01aa 03       		.uleb128 0x3
 4200 01ab 0E       		.uleb128 0xe
 4201 01ac 3A       		.uleb128 0x3a
 4202 01ad 0B       		.uleb128 0xb
 4203 01ae 3B       		.uleb128 0x3b
 4204 01af 05       		.uleb128 0x5
 4205 01b0 27       		.uleb128 0x27
 4206 01b1 19       		.uleb128 0x19
 4207 01b2 49       		.uleb128 0x49
 4208 01b3 13       		.uleb128 0x13
 4209 01b4 11       		.uleb128 0x11
 4210 01b5 01       		.uleb128 0x1
 4211 01b6 12       		.uleb128 0x12
 4212 01b7 06       		.uleb128 0x6
 4213 01b8 40       		.uleb128 0x40
 4214 01b9 18       		.uleb128 0x18
 4215 01ba 9642     		.uleb128 0x2116
 4216 01bc 19       		.uleb128 0x19
 4217 01bd 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 91


 4218 01be 00       		.byte	0
 4219 01bf 1B       		.uleb128 0x1b
 4220 01c0 2E       		.uleb128 0x2e
 4221 01c1 01       		.byte	0x1
 4222 01c2 3F       		.uleb128 0x3f
 4223 01c3 19       		.uleb128 0x19
 4224 01c4 03       		.uleb128 0x3
 4225 01c5 0E       		.uleb128 0xe
 4226 01c6 3A       		.uleb128 0x3a
 4227 01c7 0B       		.uleb128 0xb
 4228 01c8 3B       		.uleb128 0x3b
 4229 01c9 05       		.uleb128 0x5
 4230 01ca 49       		.uleb128 0x49
 4231 01cb 13       		.uleb128 0x13
 4232 01cc 11       		.uleb128 0x11
 4233 01cd 01       		.uleb128 0x1
 4234 01ce 12       		.uleb128 0x12
 4235 01cf 06       		.uleb128 0x6
 4236 01d0 40       		.uleb128 0x40
 4237 01d1 18       		.uleb128 0x18
 4238 01d2 9642     		.uleb128 0x2116
 4239 01d4 19       		.uleb128 0x19
 4240 01d5 01       		.uleb128 0x1
 4241 01d6 13       		.uleb128 0x13
 4242 01d7 00       		.byte	0
 4243 01d8 00       		.byte	0
 4244 01d9 1C       		.uleb128 0x1c
 4245 01da 0B       		.uleb128 0xb
 4246 01db 01       		.byte	0x1
 4247 01dc 11       		.uleb128 0x11
 4248 01dd 01       		.uleb128 0x1
 4249 01de 12       		.uleb128 0x12
 4250 01df 06       		.uleb128 0x6
 4251 01e0 00       		.byte	0
 4252 01e1 00       		.byte	0
 4253 01e2 1D       		.uleb128 0x1d
 4254 01e3 0B       		.uleb128 0xb
 4255 01e4 01       		.byte	0x1
 4256 01e5 11       		.uleb128 0x11
 4257 01e6 01       		.uleb128 0x1
 4258 01e7 12       		.uleb128 0x12
 4259 01e8 06       		.uleb128 0x6
 4260 01e9 01       		.uleb128 0x1
 4261 01ea 13       		.uleb128 0x13
 4262 01eb 00       		.byte	0
 4263 01ec 00       		.byte	0
 4264 01ed 1E       		.uleb128 0x1e
 4265 01ee 21       		.uleb128 0x21
 4266 01ef 00       		.byte	0
 4267 01f0 49       		.uleb128 0x49
 4268 01f1 13       		.uleb128 0x13
 4269 01f2 2F       		.uleb128 0x2f
 4270 01f3 05       		.uleb128 0x5
 4271 01f4 00       		.byte	0
 4272 01f5 00       		.byte	0
 4273 01f6 1F       		.uleb128 0x1f
 4274 01f7 2E       		.uleb128 0x2e
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 92


 4275 01f8 01       		.byte	0x1
 4276 01f9 3F       		.uleb128 0x3f
 4277 01fa 19       		.uleb128 0x19
 4278 01fb 03       		.uleb128 0x3
 4279 01fc 0E       		.uleb128 0xe
 4280 01fd 3A       		.uleb128 0x3a
 4281 01fe 0B       		.uleb128 0xb
 4282 01ff 3B       		.uleb128 0x3b
 4283 0200 05       		.uleb128 0x5
 4284 0201 27       		.uleb128 0x27
 4285 0202 19       		.uleb128 0x19
 4286 0203 49       		.uleb128 0x49
 4287 0204 13       		.uleb128 0x13
 4288 0205 11       		.uleb128 0x11
 4289 0206 01       		.uleb128 0x1
 4290 0207 12       		.uleb128 0x12
 4291 0208 06       		.uleb128 0x6
 4292 0209 40       		.uleb128 0x40
 4293 020a 18       		.uleb128 0x18
 4294 020b 9642     		.uleb128 0x2116
 4295 020d 19       		.uleb128 0x19
 4296 020e 01       		.uleb128 0x1
 4297 020f 13       		.uleb128 0x13
 4298 0210 00       		.byte	0
 4299 0211 00       		.byte	0
 4300 0212 20       		.uleb128 0x20
 4301 0213 05       		.uleb128 0x5
 4302 0214 00       		.byte	0
 4303 0215 03       		.uleb128 0x3
 4304 0216 0E       		.uleb128 0xe
 4305 0217 3A       		.uleb128 0x3a
 4306 0218 0B       		.uleb128 0xb
 4307 0219 3B       		.uleb128 0x3b
 4308 021a 05       		.uleb128 0x5
 4309 021b 49       		.uleb128 0x49
 4310 021c 13       		.uleb128 0x13
 4311 021d 02       		.uleb128 0x2
 4312 021e 18       		.uleb128 0x18
 4313 021f 00       		.byte	0
 4314 0220 00       		.byte	0
 4315 0221 21       		.uleb128 0x21
 4316 0222 34       		.uleb128 0x34
 4317 0223 00       		.byte	0
 4318 0224 03       		.uleb128 0x3
 4319 0225 08       		.uleb128 0x8
 4320 0226 3A       		.uleb128 0x3a
 4321 0227 0B       		.uleb128 0xb
 4322 0228 3B       		.uleb128 0x3b
 4323 0229 05       		.uleb128 0x5
 4324 022a 49       		.uleb128 0x49
 4325 022b 13       		.uleb128 0x13
 4326 022c 02       		.uleb128 0x2
 4327 022d 18       		.uleb128 0x18
 4328 022e 00       		.byte	0
 4329 022f 00       		.byte	0
 4330 0230 22       		.uleb128 0x22
 4331 0231 34       		.uleb128 0x34
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 93


 4332 0232 00       		.byte	0
 4333 0233 03       		.uleb128 0x3
 4334 0234 0E       		.uleb128 0xe
 4335 0235 3A       		.uleb128 0x3a
 4336 0236 0B       		.uleb128 0xb
 4337 0237 3B       		.uleb128 0x3b
 4338 0238 05       		.uleb128 0x5
 4339 0239 49       		.uleb128 0x49
 4340 023a 13       		.uleb128 0x13
 4341 023b 3F       		.uleb128 0x3f
 4342 023c 19       		.uleb128 0x19
 4343 023d 3C       		.uleb128 0x3c
 4344 023e 19       		.uleb128 0x19
 4345 023f 00       		.byte	0
 4346 0240 00       		.byte	0
 4347 0241 23       		.uleb128 0x23
 4348 0242 34       		.uleb128 0x34
 4349 0243 00       		.byte	0
 4350 0244 03       		.uleb128 0x3
 4351 0245 0E       		.uleb128 0xe
 4352 0246 3A       		.uleb128 0x3a
 4353 0247 0B       		.uleb128 0xb
 4354 0248 3B       		.uleb128 0x3b
 4355 0249 0B       		.uleb128 0xb
 4356 024a 49       		.uleb128 0x49
 4357 024b 13       		.uleb128 0x13
 4358 024c 3F       		.uleb128 0x3f
 4359 024d 19       		.uleb128 0x19
 4360 024e 02       		.uleb128 0x2
 4361 024f 18       		.uleb128 0x18
 4362 0250 00       		.byte	0
 4363 0251 00       		.byte	0
 4364 0252 24       		.uleb128 0x24
 4365 0253 34       		.uleb128 0x34
 4366 0254 00       		.byte	0
 4367 0255 03       		.uleb128 0x3
 4368 0256 08       		.uleb128 0x8
 4369 0257 3A       		.uleb128 0x3a
 4370 0258 0B       		.uleb128 0xb
 4371 0259 3B       		.uleb128 0x3b
 4372 025a 0B       		.uleb128 0xb
 4373 025b 49       		.uleb128 0x49
 4374 025c 13       		.uleb128 0x13
 4375 025d 3F       		.uleb128 0x3f
 4376 025e 19       		.uleb128 0x19
 4377 025f 02       		.uleb128 0x2
 4378 0260 18       		.uleb128 0x18
 4379 0261 00       		.byte	0
 4380 0262 00       		.byte	0
 4381 0263 00       		.byte	0
 4382              		.section	.debug_aranges,"",%progbits
 4383 0000 8C000000 		.4byte	0x8c
 4384 0004 0200     		.2byte	0x2
 4385 0006 00000000 		.4byte	.Ldebug_info0
 4386 000a 04       		.byte	0x4
 4387 000b 00       		.byte	0
 4388 000c 0000     		.2byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 94


 4389 000e 0000     		.2byte	0
 4390 0010 00000000 		.4byte	.LFB64
 4391 0014 0C000000 		.4byte	.LFE64-.LFB64
 4392 0018 00000000 		.4byte	.LFB65
 4393 001c F4000000 		.4byte	.LFE65-.LFB65
 4394 0020 00000000 		.4byte	.LFB66
 4395 0024 64000000 		.4byte	.LFE66-.LFB66
 4396 0028 00000000 		.4byte	.LFB67
 4397 002c 2A000000 		.4byte	.LFE67-.LFB67
 4398 0030 00000000 		.4byte	.LFB68
 4399 0034 50000000 		.4byte	.LFE68-.LFB68
 4400 0038 00000000 		.4byte	.LFB69
 4401 003c 48000000 		.4byte	.LFE69-.LFB69
 4402 0040 00000000 		.4byte	.LFB70
 4403 0044 1E000000 		.4byte	.LFE70-.LFB70
 4404 0048 00000000 		.4byte	.LFB71
 4405 004c 46000000 		.4byte	.LFE71-.LFB71
 4406 0050 00000000 		.4byte	.LFB72
 4407 0054 2C010000 		.4byte	.LFE72-.LFB72
 4408 0058 00000000 		.4byte	.LFB73
 4409 005c 1E000000 		.4byte	.LFE73-.LFB73
 4410 0060 00000000 		.4byte	.LFB74
 4411 0064 5C040000 		.4byte	.LFE74-.LFB74
 4412 0068 00000000 		.4byte	.LFB75
 4413 006c 44000000 		.4byte	.LFE75-.LFB75
 4414 0070 00000000 		.4byte	.LFB76
 4415 0074 84030000 		.4byte	.LFE76-.LFB76
 4416 0078 00000000 		.4byte	.LFB77
 4417 007c 74000000 		.4byte	.LFE77-.LFB77
 4418 0080 00000000 		.4byte	.LFB78
 4419 0084 38010000 		.4byte	.LFE78-.LFB78
 4420 0088 00000000 		.4byte	0
 4421 008c 00000000 		.4byte	0
 4422              		.section	.debug_ranges,"",%progbits
 4423              	.Ldebug_ranges0:
 4424 0000 00000000 		.4byte	.LFB64
 4425 0004 0C000000 		.4byte	.LFE64
 4426 0008 00000000 		.4byte	.LFB65
 4427 000c F4000000 		.4byte	.LFE65
 4428 0010 00000000 		.4byte	.LFB66
 4429 0014 64000000 		.4byte	.LFE66
 4430 0018 00000000 		.4byte	.LFB67
 4431 001c 2A000000 		.4byte	.LFE67
 4432 0020 00000000 		.4byte	.LFB68
 4433 0024 50000000 		.4byte	.LFE68
 4434 0028 00000000 		.4byte	.LFB69
 4435 002c 48000000 		.4byte	.LFE69
 4436 0030 00000000 		.4byte	.LFB70
 4437 0034 1E000000 		.4byte	.LFE70
 4438 0038 00000000 		.4byte	.LFB71
 4439 003c 46000000 		.4byte	.LFE71
 4440 0040 00000000 		.4byte	.LFB72
 4441 0044 2C010000 		.4byte	.LFE72
 4442 0048 00000000 		.4byte	.LFB73
 4443 004c 1E000000 		.4byte	.LFE73
 4444 0050 00000000 		.4byte	.LFB74
 4445 0054 5C040000 		.4byte	.LFE74
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 95


 4446 0058 00000000 		.4byte	.LFB75
 4447 005c 44000000 		.4byte	.LFE75
 4448 0060 00000000 		.4byte	.LFB76
 4449 0064 84030000 		.4byte	.LFE76
 4450 0068 00000000 		.4byte	.LFB77
 4451 006c 74000000 		.4byte	.LFE77
 4452 0070 00000000 		.4byte	.LFB78
 4453 0074 38010000 		.4byte	.LFE78
 4454 0078 00000000 		.4byte	0
 4455 007c 00000000 		.4byte	0
 4456              		.section	.debug_line,"",%progbits
 4457              	.Ldebug_line0:
 4458 0000 45040000 		.section	.debug_str,"MS",%progbits,1
 4458      02002E02 
 4458      00000201 
 4458      FB0E0D00 
 4458      01010101 
 4459              	.LASF116:
 4460 0000 745F6D6F 		.ascii	"t_modem\000"
 4460      64656D00 
 4461              	.LASF12:
 4462 0008 75696E74 		.ascii	"uint16\000"
 4462      313600
 4463              	.LASF40:
 4464 000f 646F5F72 		.ascii	"do_reading\000"
 4464      65616469 
 4464      6E6700
 4465              	.LASF57:
 4466 001a 746D5F68 		.ascii	"tm_hour\000"
 4466      6F757200 
 4467              	.LASF37:
 4468 0022 6E756D5F 		.ascii	"num_invalid_readings\000"
 4468      696E7661 
 4468      6C69645F 
 4468      72656164 
 4468      696E6773 
 4469              	.LASF149:
 4470 0037 62756666 		.ascii	"buffer_overflow\000"
 4470      65725F6F 
 4470      76657266 
 4470      6C6F7700 
 4471              	.LASF147:
 4472 0047 66696C65 		.ascii	"fileName\000"
 4472      4E616D65 
 4472      00
 4473              	.LASF0:
 4474 0050 7369676E 		.ascii	"signed char\000"
 4474      65642063 
 4474      68617200 
 4475              	.LASF89:
 4476 005c 636F756E 		.ascii	"countDownResetCondition\000"
 4476      74446F77 
 4476      6E526573 
 4476      6574436F 
 4476      6E646974 
 4477              	.LASF171:
 4478 0074 57616B65 		.ascii	"Wakeup_ISR\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 96


 4478      75705F49 
 4478      535200
 4479              	.LASF168:
 4480 007f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4480      43313120 
 4480      352E342E 
 4480      31203230 
 4480      31363036 
 4481 00b2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4481      20726576 
 4481      6973696F 
 4481      6E203233 
 4481      37373135 
 4482 00e5 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4482      66756E63 
 4482      74696F6E 
 4482      2D736563 
 4482      74696F6E 
 4483              	.LASF114:
 4484 010d 745F7072 		.ascii	"t_pressure\000"
 4484      65737375 
 4484      726500
 4485              	.LASF27:
 4486 0118 4D6F6E74 		.ascii	"Month\000"
 4486      6800
 4487              	.LASF7:
 4488 011e 6C6F6E67 		.ascii	"long long unsigned int\000"
 4488      206C6F6E 
 4488      6720756E 
 4488      7369676E 
 4488      65642069 
 4489              	.LASF23:
 4490 0135 486F7572 		.ascii	"Hour\000"
 4490      00
 4491              	.LASF153:
 4492 013a 6D6F6465 		.ascii	"modem_state\000"
 4492      6D5F7374 
 4492      61746500 
 4493              	.LASF162:
 4494 0146 616C6172 		.ascii	"alarmMeasure\000"
 4494      6D4D6561 
 4494      73757265 
 4494      00
 4495              	.LASF148:
 4496 0153 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4496      52784275 
 4496      66666572 
 4496      00
 4497              	.LASF111:
 4498 0160 745F6C65 		.ascii	"t_level_sensor\000"
 4498      76656C5F 
 4498      73656E73 
 4498      6F7200
 4499              	.LASF6:
 4500 016f 6C6F6E67 		.ascii	"long long int\000"
 4500      206C6F6E 
 4500      6720696E 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 97


 4500      7400
 4501              	.LASF125:
 4502 017d 7061636B 		.ascii	"packets\000"
 4502      65747300 
 4503              	.LASF73:
 4504 0185 65636E6F 		.ascii	"ecno\000"
 4504      00
 4505              	.LASF163:
 4506 018a 74696D65 		.ascii	"timeToMeasure\000"
 4506      546F4D65 
 4506      61737572 
 4506      6500
 4507              	.LASF76:
 4508 0198 74696D65 		.ascii	"time_to_network_connect\000"
 4508      5F746F5F 
 4508      6E657477 
 4508      6F726B5F 
 4508      636F6E6E 
 4509              	.LASF165:
 4510 01b0 74696D65 		.ascii	"timeToSync\000"
 4510      546F5379 
 4510      6E6300
 4511              	.LASF45:
 4512 01bb 766F6C74 		.ascii	"voltage_solar\000"
 4512      6167655F 
 4512      736F6C61 
 4512      7200
 4513              	.LASF46:
 4514 01c9 766F6C74 		.ascii	"voltage_charge_current\000"
 4514      6167655F 
 4514      63686172 
 4514      67655F63 
 4514      75727265 
 4515              	.LASF146:
 4516 01e0 75706772 		.ascii	"upgrade_status\000"
 4516      6164655F 
 4516      73746174 
 4516      757300
 4517              	.LASF128:
 4518 01ef 635F6461 		.ascii	"c_data_count_sent\000"
 4518      74615F63 
 4518      6F756E74 
 4518      5F73656E 
 4518      7400
 4519              	.LASF112:
 4520 0201 745F7771 		.ascii	"t_wq_sensors\000"
 4520      5F73656E 
 4520      736F7273 
 4520      00
 4521              	.LASF70:
 4522 020e 6D6F6465 		.ascii	"modem_info_t\000"
 4522      6D5F696E 
 4522      666F5F74 
 4522      00
 4523              	.LASF71:
 4524 021b 72786C65 		.ascii	"rxlev\000"
 4524      7600
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 98


 4525              	.LASF4:
 4526 0221 6C6F6E67 		.ascii	"long int\000"
 4526      20696E74 
 4526      00
 4527              	.LASF77:
 4528 022a 74696D65 		.ascii	"time_to_acquire_ip\000"
 4528      5F746F5F 
 4528      61637175 
 4528      6972655F 
 4528      697000
 4529              	.LASF90:
 4530 023d 616C6172 		.ascii	"alarm\000"
 4530      6D00
 4531              	.LASF51:
 4532 0243 70726573 		.ascii	"pressure_voltage_off\000"
 4532      73757265 
 4532      5F766F6C 
 4532      74616765 
 4532      5F6F6666 
 4533              	.LASF11:
 4534 0258 75696E74 		.ascii	"uint8\000"
 4534      3800
 4535              	.LASF120:
 4536 025e 635F7472 		.ascii	"c_try_counter\000"
 4536      795F636F 
 4536      756E7465 
 4536      7200
 4537              	.LASF131:
 4538 026c 73656E64 		.ascii	"send_time\000"
 4538      5F74696D 
 4538      6500
 4539              	.LASF16:
 4540 0276 696E7433 		.ascii	"int32\000"
 4540      3200
 4541              	.LASF79:
 4542 027c 6E6F6465 		.ascii	"node_type\000"
 4542      5F747970 
 4542      6500
 4543              	.LASF117:
 4544 0286 73796E63 		.ascii	"syncData\000"
 4544      44617461 
 4544      00
 4545              	.LASF126:
 4546 028f 6E657477 		.ascii	"network_time\000"
 4546      6F726B5F 
 4546      74696D65 
 4546      00
 4547              	.LASF13:
 4548 029c 75696E74 		.ascii	"uint32\000"
 4548      333200
 4549              	.LASF68:
 4550 02a3 6D6F6465 		.ascii	"model_id\000"
 4550      6C5F6964 
 4550      00
 4551              	.LASF34:
 4552 02ac 616C6C5F 		.ascii	"all_level_readings\000"
 4552      6C657665 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 99


 4552      6C5F7265 
 4552      6164696E 
 4552      677300
 4553              	.LASF139:
 4554 02bf 6D5F7771 		.ascii	"m_wq_sensors\000"
 4554      5F73656E 
 4554      736F7273 
 4554      00
 4555              	.LASF86:
 4556 02cc 636F756E 		.ascii	"countDownValue\000"
 4556      74446F77 
 4556      6E56616C 
 4556      756500
 4557              	.LASF142:
 4558 02db 75706772 		.ascii	"upgraded\000"
 4558      61646564 
 4558      00
 4559              	.LASF59:
 4560 02e4 746D5F6D 		.ascii	"tm_mon\000"
 4560      6F6E00
 4561              	.LASF83:
 4562 02eb 64656275 		.ascii	"debug_level\000"
 4562      675F6C65 
 4562      76656C00 
 4563              	.LASF144:
 4564 02f7 706F7274 		.ascii	"port\000"
 4564      00
 4565              	.LASF64:
 4566 02fc 76616C75 		.ascii	"value\000"
 4566      6500
 4567              	.LASF143:
 4568 0302 686F7374 		.ascii	"host\000"
 4568      00
 4569              	.LASF60:
 4570 0307 746D5F79 		.ascii	"tm_year\000"
 4570      65617200 
 4571              	.LASF164:
 4572 030f 616C6172 		.ascii	"alarmSync\000"
 4572      6D53796E 
 4572      6300
 4573              	.LASF50:
 4574 0319 70726573 		.ascii	"pressure_voltage_on\000"
 4574      73757265 
 4574      5F766F6C 
 4574      74616765 
 4574      5F6F6E00 
 4575              	.LASF8:
 4576 032d 756E7369 		.ascii	"unsigned int\000"
 4576      676E6564 
 4576      20696E74 
 4576      00
 4577              	.LASF140:
 4578 033a 73657454 		.ascii	"setTime\000"
 4578      696D6500 
 4579              	.LASF66:
 4580 0342 6B65795F 		.ascii	"key_value_t\000"
 4580      76616C75 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 100


 4580      655F7400 
 4581              	.LASF101:
 4582 034e 41796F49 		.ascii	"AyoItsTime\000"
 4582      74735469 
 4582      6D6500
 4583              	.LASF36:
 4584 0359 6E756D5F 		.ascii	"num_valid_readings\000"
 4584      76616C69 
 4584      645F7265 
 4584      6164696E 
 4584      677300
 4585              	.LASF130:
 4586 036c 68747470 		.ascii	"http_chunk\000"
 4586      5F636875 
 4586      6E6B00
 4587              	.LASF136:
 4588 0377 6D5F766F 		.ascii	"m_voltage\000"
 4588      6C746167 
 4588      6500
 4589              	.LASF5:
 4590 0381 6C6F6E67 		.ascii	"long unsigned int\000"
 4590      20756E73 
 4590      69676E65 
 4590      6420696E 
 4590      7400
 4591              	.LASF43:
 4592 0393 77715F73 		.ascii	"wq_sensors_t\000"
 4592      656E736F 
 4592      72735F74 
 4592      00
 4593              	.LASF121:
 4594 03a0 64617461 		.ascii	"data_count_desired\000"
 4594      5F636F75 
 4594      6E745F64 
 4594      65736972 
 4594      656400
 4595              	.LASF44:
 4596 03b3 766F6C74 		.ascii	"voltage_battery\000"
 4596      6167655F 
 4596      62617474 
 4596      65727900 
 4597              	.LASF41:
 4598 03c3 616C6C5F 		.ascii	"all_temp_readings\000"
 4598      74656D70 
 4598      5F726561 
 4598      64696E67 
 4598      7300
 4599              	.LASF25:
 4600 03d5 4461794F 		.ascii	"DayOfMonth\000"
 4600      664D6F6E 
 4600      746800
 4601              	.LASF134:
 4602 03e0 6D616B65 		.ascii	"makeMeasurements\000"
 4602      4D656173 
 4602      7572656D 
 4602      656E7473 
 4602      00
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 101


 4603              	.LASF152:
 4604 03f1 64617461 		.ascii	"data\000"
 4604      00
 4605              	.LASF95:
 4606 03f6 65705F70 		.ascii	"ep_port\000"
 4606      6F727400 
 4607              	.LASF63:
 4608 03fe 746D5F69 		.ascii	"tm_isdst\000"
 4608      73647374 
 4608      00
 4609              	.LASF91:
 4610 0407 6D6F6465 		.ascii	"modem_info\000"
 4610      6D5F696E 
 4610      666F00
 4611              	.LASF94:
 4612 0412 65705F68 		.ascii	"ep_host\000"
 4612      6F737400 
 4613              	.LASF14:
 4614 041a 696E7438 		.ascii	"int8\000"
 4614      00
 4615              	.LASF100:
 4616 041f 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 4616      576F726B 
 4616      576F726B 
 4616      576F726B 
 4616      576F726B 
 4617              	.LASF42:
 4618 0438 74656D70 		.ascii	"temp_reading\000"
 4618      5F726561 
 4618      64696E67 
 4618      00
 4619              	.LASF122:
 4620 0445 635F6461 		.ascii	"c_data_count_desired\000"
 4620      74615F63 
 4620      6F756E74 
 4620      5F646573 
 4620      69726564 
 4621              	.LASF115:
 4622 045a 745F7364 		.ascii	"t_sd_card\000"
 4622      5F636172 
 4622      6400
 4623              	.LASF2:
 4624 0464 73686F72 		.ascii	"short int\000"
 4624      7420696E 
 4624      7400
 4625              	.LASF154:
 4626 046e 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4626      6D5F7374 
 4626      6172745F 
 4626      74696D65 
 4626      5F737461 
 4627              	.LASF93:
 4628 0485 7379735F 		.ascii	"sys_info_t\000"
 4628      696E666F 
 4628      5F7400
 4629              	.LASF85:
 4630 0490 75706461 		.ascii	"updatable_parameters_t\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 102


 4630      7461626C 
 4630      655F7061 
 4630      72616D65 
 4630      74657273 
 4631              	.LASF102:
 4632 04a7 616C6172 		.ascii	"alarmType\000"
 4632      6D547970 
 4632      6500
 4633              	.LASF150:
 4634 04b1 64617461 		.ascii	"dataPointsInStack\000"
 4634      506F696E 
 4634      7473496E 
 4634      53746163 
 4634      6B00
 4635              	.LASF56:
 4636 04c3 746D5F6D 		.ascii	"tm_min\000"
 4636      696E00
 4637              	.LASF17:
 4638 04ca 666C6F61 		.ascii	"float32\000"
 4638      74333200 
 4639              	.LASF98:
 4640 04d2 7472795F 		.ascii	"try_counter\000"
 4640      636F756E 
 4640      74657200 
 4641              	.LASF22:
 4642 04de 73697A65 		.ascii	"sizetype\000"
 4642      74797065 
 4642      00
 4643              	.LASF62:
 4644 04e7 746D5F79 		.ascii	"tm_yday\000"
 4644      64617900 
 4645              	.LASF96:
 4646 04ef 7379735F 		.ascii	"sys_settings_t\000"
 4646      73657474 
 4646      696E6773 
 4646      5F7400
 4647              	.LASF141:
 4648 04fe 6C6F6361 		.ascii	"localTime\000"
 4648      6C54696D 
 4648      6500
 4649              	.LASF166:
 4650 0508 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 4650      546F5379 
 4650      636E5265 
 4650      6D6F7465 
 4650      50617261 
 4651              	.LASF65:
 4652 051f 74696D65 		.ascii	"timeStamp\000"
 4652      5374616D 
 4652      7000
 4653              	.LASF29:
 4654 0529 5254435F 		.ascii	"RTC_TIME_DATE\000"
 4654      54494D45 
 4654      5F444154 
 4654      4500
 4655              	.LASF156:
 4656 0537 75706461 		.ascii	"updatable_parameters\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 103


 4656      7461626C 
 4656      655F7061 
 4656      72616D65 
 4656      74657273 
 4657              	.LASF107:
 4658 054c 43726561 		.ascii	"CreateAlarm\000"
 4658      7465416C 
 4658      61726D00 
 4659              	.LASF129:
 4660 0558 7061636B 		.ascii	"packet\000"
 4660      657400
 4661              	.LASF103:
 4662 055f 616C6172 		.ascii	"alarmToBeUpdated\000"
 4662      6D546F42 
 4662      65557064 
 4662      61746564 
 4662      00
 4663              	.LASF118:
 4664 0570 735F7273 		.ascii	"s_rsrp\000"
 4664      727000
 4665              	.LASF47:
 4666 0577 766F6C74 		.ascii	"voltage_pressure\000"
 4666      6167655F 
 4666      70726573 
 4666      73757265 
 4666      00
 4667              	.LASF157:
 4668 0588 68747470 		.ascii	"http_request\000"
 4668      5F726571 
 4668      75657374 
 4668      00
 4669              	.LASF18:
 4670 0595 666C6F61 		.ascii	"float\000"
 4670      7400
 4671              	.LASF38:
 4672 059b 6C657665 		.ascii	"level_sensor_t\000"
 4672      6C5F7365 
 4672      6E736F72 
 4672      5F7400
 4673              	.LASF119:
 4674 05aa 735F7273 		.ascii	"s_rscp\000"
 4674      637000
 4675              	.LASF133:
 4676 05b1 636F6E66 		.ascii	"configureRemoteParams\000"
 4676      69677572 
 4676      6552656D 
 4676      6F746550 
 4676      6172616D 
 4677              	.LASF167:
 4678 05c7 44617461 		.ascii	"Data_fileName\000"
 4678      5F66696C 
 4678      654E616D 
 4678      6500
 4679              	.LASF99:
 4680 05d5 6D6F6465 		.ascii	"modem_status\000"
 4680      6D5F7374 
 4680      61747573 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 104


 4680      00
 4681              	.LASF30:
 4682 05e2 74657374 		.ascii	"test_name\000"
 4682      5F6E616D 
 4682      6500
 4683              	.LASF28:
 4684 05ec 59656172 		.ascii	"Year\000"
 4684      00
 4685              	.LASF84:
 4686 05f1 5F426F6F 		.ascii	"_Bool\000"
 4686      6C00
 4687              	.LASF10:
 4688 05f7 696E7433 		.ascii	"int32_t\000"
 4688      325F7400 
 4689              	.LASF1:
 4690 05ff 756E7369 		.ascii	"unsigned char\000"
 4690      676E6564 
 4690      20636861 
 4690      7200
 4691              	.LASF145:
 4692 060d 726F7574 		.ascii	"route\000"
 4692      6500
 4693              	.LASF161:
 4694 0613 73797374 		.ascii	"system_settings\000"
 4694      656D5F73 
 4694      65747469 
 4694      6E677300 
 4695              	.LASF75:
 4696 0623 72737270 		.ascii	"rsrp\000"
 4696      00
 4697              	.LASF74:
 4698 0628 72737271 		.ascii	"rsrq\000"
 4698      00
 4699              	.LASF104:
 4700 062d 52657365 		.ascii	"ResetAlarm\000"
 4700      74416C61 
 4700      726D00
 4701              	.LASF132:
 4702 0638 735F7365 		.ascii	"s_send_time\000"
 4702      6E645F74 
 4702      696D6500 
 4703              	.LASF82:
 4704 0644 73796E63 		.ascii	"sync_time\000"
 4704      5F74696D 
 4704      6500
 4705              	.LASF53:
 4706 064e 70726573 		.ascii	"pressure_depth\000"
 4706      73757265 
 4706      5F646570 
 4706      746800
 4707              	.LASF72:
 4708 065d 72736370 		.ascii	"rscp\000"
 4708      00
 4709              	.LASF24:
 4710 0662 4461794F 		.ascii	"DayOfWeek\000"
 4710      66576565 
 4710      6B00
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 105


 4711              	.LASF33:
 4712 066c 74657374 		.ascii	"test_t\000"
 4712      5F7400
 4713              	.LASF160:
 4714 0673 73797374 		.ascii	"system_info\000"
 4714      656D5F69 
 4714      6E666F00 
 4715              	.LASF69:
 4716 067f 696D6569 		.ascii	"imei\000"
 4716      00
 4717              	.LASF32:
 4718 0684 72656173 		.ascii	"reason\000"
 4718      6F6E00
 4719              	.LASF105:
 4720 068b 616C6172 		.ascii	"alarmToBeReset\000"
 4720      6D546F42 
 4720      65526573 
 4720      657400
 4721              	.LASF110:
 4722 069a 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 4722      6B697479 
 4722      43686563 
 4722      6B596F75 
 4722      7273656C 
 4723              	.LASF127:
 4724 06c6 64617461 		.ascii	"data_count_sent\000"
 4724      5F636F75 
 4724      6E745F73 
 4724      656E7400 
 4725              	.LASF78:
 4726 06d6 6D6F6465 		.ascii	"modem_stats_t\000"
 4726      6D5F7374 
 4726      6174735F 
 4726      7400
 4727              	.LASF52:
 4728 06e4 70726573 		.ascii	"pressure_current\000"
 4728      73757265 
 4728      5F637572 
 4728      72656E74 
 4728      00
 4729              	.LASF48:
 4730 06f5 76616C69 		.ascii	"valid\000"
 4730      6400
 4731              	.LASF61:
 4732 06fb 746D5F77 		.ascii	"tm_wday\000"
 4732      64617900 
 4733              	.LASF170:
 4734 0703 433A5C55 		.ascii	"C:\\Users\\jniej\\OneDrive\\Documents\\GitHub\\noto"
 4734      73657273 
 4734      5C6A6E69 
 4734      656A5C4F 
 4734      6E654472 
 4735 0730 72694F53 		.ascii	"riOS\\notoriOS.cydsn\000"
 4735      5C6E6F74 
 4735      6F72694F 
 4735      532E6379 
 4735      64736E00 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 106


 4736              	.LASF39:
 4737 0744 616C6C5F 		.ascii	"all_do_readings\000"
 4737      646F5F72 
 4737      65616469 
 4737      6E677300 
 4738              	.LASF21:
 4739 0754 6C6F6E67 		.ascii	"long double\000"
 4739      20646F75 
 4739      626C6500 
 4740              	.LASF124:
 4741 0760 6368756E 		.ascii	"chunk\000"
 4741      6B00
 4742              	.LASF135:
 4743 0766 635F7469 		.ascii	"c_timeStamp\000"
 4743      6D655374 
 4743      616D7000 
 4744              	.LASF20:
 4745 0772 63686172 		.ascii	"char\000"
 4745      00
 4746              	.LASF155:
 4747 0777 6D6F6465 		.ascii	"modem_stats\000"
 4747      6D5F7374 
 4747      61747300 
 4748              	.LASF159:
 4749 0783 68747470 		.ascii	"http_route\000"
 4749      5F726F75 
 4749      746500
 4750              	.LASF123:
 4751 078e 706F7274 		.ascii	"portConfig\000"
 4751      436F6E66 
 4751      696700
 4752              	.LASF9:
 4753 0799 5F5F696E 		.ascii	"__int32_t\000"
 4753      7433325F 
 4753      7400
 4754              	.LASF97:
 4755 07a3 756E6971 		.ascii	"uniqueId\000"
 4755      75654964 
 4755      00
 4756              	.LASF137:
 4757 07ac 6D5F6C65 		.ascii	"m_level_sensor\000"
 4757      76656C5F 
 4757      73656E73 
 4757      6F7200
 4758              	.LASF35:
 4759 07bb 6C657665 		.ascii	"level_reading\000"
 4759      6C5F7265 
 4759      6164696E 
 4759      6700
 4760              	.LASF172:
 4761 07c9 4C617942 		.ascii	"LayBack\000"
 4761      61636B00 
 4762              	.LASF3:
 4763 07d1 73686F72 		.ascii	"short unsigned int\000"
 4763      7420756E 
 4763      7369676E 
 4763      65642069 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 107


 4763      6E7400
 4764              	.LASF67:
 4765 07e4 73696D5F 		.ascii	"sim_id\000"
 4765      696400
 4766              	.LASF58:
 4767 07eb 746D5F6D 		.ascii	"tm_mday\000"
 4767      64617900 
 4768              	.LASF108:
 4769 07f3 6E657741 		.ascii	"newAlarm\000"
 4769      6C61726D 
 4769      00
 4770              	.LASF55:
 4771 07fc 746D5F73 		.ascii	"tm_sec\000"
 4771      656300
 4772              	.LASF138:
 4773 0803 6D5F7072 		.ascii	"m_pressure\000"
 4773      65737375 
 4773      726500
 4774              	.LASF31:
 4775 080e 73746174 		.ascii	"status\000"
 4775      757300
 4776              	.LASF151:
 4777 0815 64617461 		.ascii	"dataPointsInStackDesired\000"
 4777      506F696E 
 4777      7473496E 
 4777      53746163 
 4777      6B446573 
 4778              	.LASF113:
 4779 082e 745F766F 		.ascii	"t_voltages\000"
 4779      6C746167 
 4779      657300
 4780              	.LASF169:
 4781 0839 6E6F746F 		.ascii	"notoriOS.c\000"
 4781      72694F53 
 4781      2E6300
 4782              	.LASF158:
 4783 0844 68747470 		.ascii	"http_body\000"
 4783      5F626F64 
 4783      7900
 4784              	.LASF15:
 4785 084e 696E7431 		.ascii	"int16\000"
 4785      3600
 4786              	.LASF88:
 4787 0854 636F756E 		.ascii	"countDownType\000"
 4787      74446F77 
 4787      6E547970 
 4787      6500
 4788              	.LASF87:
 4789 0862 63757272 		.ascii	"currentCountDownValue\000"
 4789      656E7443 
 4789      6F756E74 
 4789      446F776E 
 4789      56616C75 
 4790              	.LASF80:
 4791 0878 73696D5F 		.ascii	"sim_type\000"
 4791      74797065 
 4791      00
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccBuyudX.s 			page 108


 4792              	.LASF26:
 4793 0881 4461794F 		.ascii	"DayOfYear\000"
 4793      66596561 
 4793      7200
 4794              	.LASF54:
 4795 088b 70726573 		.ascii	"pressure_t\000"
 4795      73757265 
 4795      5F7400
 4796              	.LASF106:
 4797 0896 416C6172 		.ascii	"AlarmReady\000"
 4797      6D526561 
 4797      647900
 4798              	.LASF109:
 4799 08a1 52656164 		.ascii	"ReadyOrNot\000"
 4799      794F724E 
 4799      6F7400
 4800              	.LASF173:
 4801 08ac 6D61696E 		.ascii	"main\000"
 4801      00
 4802              	.LASF92:
 4803 08b1 63686970 		.ascii	"chip_uniqueId\000"
 4803      5F756E69 
 4803      71756549 
 4803      6400
 4804              	.LASF81:
 4805 08bf 6D656173 		.ascii	"measure_time\000"
 4805      7572655F 
 4805      74696D65 
 4805      00
 4806              	.LASF19:
 4807 08cc 646F7562 		.ascii	"double\000"
 4807      6C6500
 4808              	.LASF49:
 4809 08d3 766F6C74 		.ascii	"voltage_t\000"
 4809      6167655F 
 4809      7400
 4810              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
