ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,6,4
  28              		.comm	gps_data,16,4
  29              		.syntax unified
  30              		.global _printf_float
  31              		.thumb
  32              		.syntax unified
  33              		.comm	http_request,10000,4
  34              		.comm	http_body,10000,4
  35              		.comm	http_route,200,4
  36              		.comm	system_info,28,4
  37              		.comm	system_settings,104,4
  38              		.comm	alarmMeasure,6,4
  39              		.comm	timeToMeasure,1,1
  40              		.comm	alarmSync,6,4
  41              		.comm	timeToSync,1,1
  42              		.comm	timeToSycnRemoteParams,1,1
  43              		.comm	hey,1,1
  44              		.section	.text.Wakeup_ISR,"ax",%progbits
  45              		.align	2
  46              		.global	Wakeup_ISR
  47              		.thumb
  48              		.thumb_func
  49              		.type	Wakeup_ISR, %function
  50              	Wakeup_ISR:
  51              	.LFB64:
  52              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 2


   6:notoriOS.c    ****  *
   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  53              		.loc 1 20 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 1, uses_anonymous_args = 0
  57 0000 80B5     		push	{r7, lr}
  58              		.cfi_def_cfa_offset 8
  59              		.cfi_offset 7, -8
  60              		.cfi_offset 14, -4
  61 0002 00AF     		add	r7, sp, #0
  62              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  63              		.loc 1 22 0
  64 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  65              		.loc 1 23 0
  66 0008 00BF     		nop
  67 000a 80BD     		pop	{r7, pc}
  68              		.cfi_endproc
  69              	.LFE64:
  70              		.size	Wakeup_ISR, .-Wakeup_ISR
  71              		.global	Data_fileName
  72              		.data
  73              		.align	2
  74              		.type	Data_fileName, %object
  75              		.size	Data_fileName, 30
  76              	Data_fileName:
  77 0000 64617461 		.ascii	"data.txt\000"
  77      2E747874 
  77      00
  78 0009 00000000 		.space	21
  78      00000000 
  78      00000000 
  78      00000000 
  78      00000000 
  79              		.comm	try_counter,1,1
  80              		.section	.rodata
  81              		.align	2
  82              	.LC0:
  83 0000 25582D25 		.ascii	"%X-%X\000"
  83      5800
  84 0006 0000     		.align	2
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 3


  85              	.LC1:
  86 0008 6563322D 		.ascii	"ec2-13-59-131-167.us-east-2.compute.amazonaws.com\000"
  86      31332D35 
  86      392D3133 
  86      312D3136 
  86      372E7573 
  87 003a 0000     		.align	2
  88              	.LC2:
  89 003c 256400   		.ascii	"%d\000"
  90 003f 00       		.align	2
  91              	.LC3:
  92 0040 7265626F 		.ascii	"reboot\000"
  92      6F7400
  93              		.section	.text.ReadyOrNot,"ax",%progbits
  94              		.align	2
  95              		.global	ReadyOrNot
  96              		.thumb
  97              		.thumb_func
  98              		.type	ReadyOrNot, %function
  99              	ReadyOrNot:
 100              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
 101              		.loc 1 41 0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 32
 104              		@ frame_needed = 1, uses_anonymous_args = 0
 105 0000 B0B5     		push	{r4, r5, r7, lr}
 106              		.cfi_def_cfa_offset 16
 107              		.cfi_offset 4, -16
 108              		.cfi_offset 5, -12
 109              		.cfi_offset 7, -8
 110              		.cfi_offset 14, -4
 111 0002 8AB0     		sub	sp, sp, #40
 112              		.cfi_def_cfa_offset 56
 113 0004 02AF     		add	r7, sp, #8
 114              		.cfi_def_cfa 7, 48
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 115              		.loc 1 43 0
 116 0006 3948     		ldr	r0, .L3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 4


 117 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 118              		.loc 1 44 0
 119 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 120              		.loc 1 46 0
 121 0010 FF20     		movs	r0, #255
 122 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 123              		.loc 1 47 0
 124 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 125              		.loc 1 48 0
 126 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 127              		.loc 1 50 0
 128 001e FFF7FEFF 		bl	modem_initialize
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 129              		.loc 1 52 0
 130 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  53:notoriOS.c    ****    
  54:notoriOS.c    ****     
  55:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  56:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  57:notoriOS.c    ****     
  58:notoriOS.c    ****     
  59:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  60:notoriOS.c    ****     uint32 uniqueId[2];
  61:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  62:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 131              		.loc 1 62 0
 132 0026 07F11403 		add	r3, r7, #20
 133 002a 1846     		mov	r0, r3
 134 002c FFF7FEFF 		bl	CyGetUniqueId
  63:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 135              		.loc 1 63 0
 136 0030 7A69     		ldr	r2, [r7, #20]
 137 0032 BB69     		ldr	r3, [r7, #24]
 138 0034 0093     		str	r3, [sp]
 139 0036 1346     		mov	r3, r2
 140 0038 2D4A     		ldr	r2, .L3+4
 141 003a 1821     		movs	r1, #24
 142 003c 2D48     		ldr	r0, .L3+8
 143 003e FFF7FEFF 		bl	snprintf
  64:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  65:notoriOS.c    ****     system_info.modem_info = &modem_info;
 144              		.loc 1 65 0
 145 0042 2D4B     		ldr	r3, .L3+12
 146 0044 2D4A     		ldr	r2, .L3+16
 147 0046 1A60     		str	r2, [r3]
  66:notoriOS.c    ****     
  67:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  68:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","ec2-13-59-131-167.us-eas
 148              		.loc 1 68 0
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 5


 149 0048 2D4A     		ldr	r2, .L3+20
 150 004a 2E4B     		ldr	r3, .L3+24
 151 004c 1446     		mov	r4, r2
 152 004e 1D46     		mov	r5, r3
 153 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 154 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 155 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 156 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 157 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 158 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 159 005c 2B68     		ldr	r3, [r5]
 160 005e 2380     		strh	r3, [r4]	@ movhi
  69:notoriOS.c    ****    
  70:notoriOS.c    ****     system_settings.ep_port = 5000;
 161              		.loc 1 70 0
 162 0060 274B     		ldr	r3, .L3+20
 163 0062 41F28832 		movw	r2, #5000
 164 0066 5A66     		str	r2, [r3, #100]
  71:notoriOS.c    ****     // Don't need the following for new nodes
  72:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  73:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  74:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  75:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  76:notoriOS.c    ****         
  77:notoriOS.c    ****     
  78:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  79:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 165              		.loc 1 79 0
 166 0068 274B     		ldr	r3, .L3+28
 167 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 168 006c 99B2     		uxth	r1, r3
 169 006e 274C     		ldr	r4, .L3+32
 170 0070 3846     		mov	r0, r7
 171 0072 0723     		movs	r3, #7
 172 0074 0122     		movs	r2, #1
 173 0076 FFF7FEFF 		bl	CreateAlarm
 174 007a 2246     		mov	r2, r4
 175 007c 3B46     		mov	r3, r7
 176 007e 1968     		ldr	r1, [r3]	@ unaligned
 177 0080 1160     		str	r1, [r2]	@ unaligned
 178 0082 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 179 0084 9380     		strh	r3, [r2, #4]	@ unaligned
  80:notoriOS.c    ****     timeToMeasure = 1u;
 180              		.loc 1 80 0
 181 0086 224B     		ldr	r3, .L3+36
 182 0088 0122     		movs	r2, #1
 183 008a 1A70     		strb	r2, [r3]
  81:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  82:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 184              		.loc 1 82 0
 185 008c 1E4B     		ldr	r3, .L3+28
 186 008e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 187 0090 99B2     		uxth	r1, r3
 188 0092 204C     		ldr	r4, .L3+40
 189 0094 3846     		mov	r0, r7
 190 0096 0723     		movs	r3, #7
 191 0098 0122     		movs	r2, #1
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 6


 192 009a FFF7FEFF 		bl	CreateAlarm
 193 009e 2246     		mov	r2, r4
 194 00a0 3B46     		mov	r3, r7
 195 00a2 1968     		ldr	r1, [r3]	@ unaligned
 196 00a4 1160     		str	r1, [r2]	@ unaligned
 197 00a6 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 198 00a8 9380     		strh	r3, [r2, #4]	@ unaligned
  83:notoriOS.c    ****     timeToSync = 1u;
 199              		.loc 1 83 0
 200 00aa 1B4B     		ldr	r3, .L3+44
 201 00ac 0122     		movs	r2, #1
 202 00ae 1A70     		strb	r2, [r3]
  84:notoriOS.c    ****     
  85:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 203              		.loc 1 85 0
 204 00b0 1A4B     		ldr	r3, .L3+48
 205 00b2 0022     		movs	r2, #0
 206 00b4 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     
  87:notoriOS.c    ****     // send hey to server saying the node rebooted
  88:notoriOS.c    ****     hey = 1u;
 207              		.loc 1 88 0
 208 00b6 1A4B     		ldr	r3, .L3+52
 209 00b8 0122     		movs	r2, #1
 210 00ba 1A70     		strb	r2, [r3]
  89:notoriOS.c    ****     char c_hey[10];
  90:notoriOS.c    ****     snprintf(c_hey,sizeof(c_hey),"%d",hey);
 211              		.loc 1 90 0
 212 00bc 184B     		ldr	r3, .L3+52
 213 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 214 00c0 07F10800 		add	r0, r7, #8
 215 00c4 174A     		ldr	r2, .L3+56
 216 00c6 0A21     		movs	r1, #10
 217 00c8 FFF7FEFF 		bl	snprintf
  91:notoriOS.c    ****     pushData("reboot",c_hey,getTimeStamp());
 218              		.loc 1 91 0
 219 00cc FFF7FEFF 		bl	getTimeStamp
 220 00d0 0246     		mov	r2, r0
 221 00d2 07F10803 		add	r3, r7, #8
 222 00d6 1946     		mov	r1, r3
 223 00d8 1348     		ldr	r0, .L3+60
 224 00da FFF7FEFF 		bl	pushData
  92:notoriOS.c    ****     
  93:notoriOS.c    ****     // Initialize the try counter to 0
  94:notoriOS.c    ****     uint8 try_counter = 0;
 225              		.loc 1 94 0
 226 00de 0023     		movs	r3, #0
 227 00e0 FB77     		strb	r3, [r7, #31]
  95:notoriOS.c    **** }
 228              		.loc 1 95 0
 229 00e2 00BF     		nop
 230 00e4 2037     		adds	r7, r7, #32
 231              		.cfi_def_cfa_offset 16
 232 00e6 BD46     		mov	sp, r7
 233              		.cfi_def_cfa_register 13
 234              		@ sp needed
 235 00e8 B0BD     		pop	{r4, r5, r7, pc}
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 7


 236              	.L4:
 237 00ea 00BF     		.align	2
 238              	.L3:
 239 00ec 00000000 		.word	Wakeup_ISR
 240 00f0 00000000 		.word	.LC0
 241 00f4 04000000 		.word	system_info+4
 242 00f8 00000000 		.word	system_info
 243 00fc 00000000 		.word	modem_info
 244 0100 00000000 		.word	system_settings
 245 0104 08000000 		.word	.LC1
 246 0108 00000000 		.word	updatable_parameters
 247 010c 00000000 		.word	alarmMeasure
 248 0110 00000000 		.word	timeToMeasure
 249 0114 00000000 		.word	alarmSync
 250 0118 00000000 		.word	timeToSync
 251 011c 00000000 		.word	timeToSycnRemoteParams
 252 0120 00000000 		.word	hey
 253 0124 3C000000 		.word	.LC2
 254 0128 40000000 		.word	.LC3
 255              		.cfi_endproc
 256              	.LFE65:
 257              		.size	ReadyOrNot, .-ReadyOrNot
 258              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 259              		.align	2
 260              		.global	WorkWorkWorkWorkWorkWork
 261              		.thumb
 262              		.thumb_func
 263              		.type	WorkWorkWorkWorkWorkWork, %function
 264              	WorkWorkWorkWorkWorkWork:
 265              	.LFB66:
  96:notoriOS.c    **** 
  97:notoriOS.c    **** 
  98:notoriOS.c    **** // ==============================================
  99:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
 100:notoriOS.c    **** //      - Rhiana, feat Drake (2016)
 101:notoriOS.c    **** //
 102:notoriOS.c    **** // Prorcesses core tasks
 103:notoriOS.c    **** // ==============================================
 104:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
 105:notoriOS.c    **** {
 266              		.loc 1 105 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 8
 269              		@ frame_needed = 1, uses_anonymous_args = 0
 270 0000 80B5     		push	{r7, lr}
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 7, -8
 273              		.cfi_offset 14, -4
 274 0002 82B0     		sub	sp, sp, #8
 275              		.cfi_def_cfa_offset 16
 276 0004 00AF     		add	r7, sp, #0
 277              		.cfi_def_cfa_register 7
 106:notoriOS.c    ****     
 107:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 108:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 109:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
 110:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 8


 111:notoriOS.c    ****     
 112:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 113:notoriOS.c    ****     if(timeToSycnRemoteParams){
 278              		.loc 1 113 0
 279 0006 144B     		ldr	r3, .L10
 280 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 281 000a 002B     		cmp	r3, #0
 282 000c 06D0     		beq	.L6
 114:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
 283              		.loc 1 114 0
 284 000e FFF7FEFF 		bl	configureRemoteParams
 285 0012 0346     		mov	r3, r0
 286 0014 1A46     		mov	r2, r3
 287 0016 104B     		ldr	r3, .L10
 288 0018 1A70     		strb	r2, [r3]
 289 001a 14E0     		b	.L7
 290              	.L6:
 115:notoriOS.c    ****     }
 116:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 117:notoriOS.c    ****     else if(timeToMeasure){
 291              		.loc 1 117 0
 292 001c 0F4B     		ldr	r3, .L10+4
 293 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 294 0020 002B     		cmp	r3, #0
 295 0022 06D0     		beq	.L8
 118:notoriOS.c    ****         //(int i=0; i<=30; i++){
 119:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 296              		.loc 1 119 0
 297 0024 FFF7FEFF 		bl	makeMeasurements
 298 0028 0346     		mov	r3, r0
 299 002a 1A46     		mov	r2, r3
 300 002c 0B4B     		ldr	r3, .L10+4
 301 002e 1A70     		strb	r2, [r3]
 302 0030 09E0     		b	.L7
 303              	.L8:
 120:notoriOS.c    ****         //CyDelay(1000u);
 121:notoriOS.c    ****         //}
 122:notoriOS.c    ****     }else if(timeToSync){
 304              		.loc 1 122 0
 305 0032 0B4B     		ldr	r3, .L10+8
 306 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 307 0036 002B     		cmp	r3, #0
 308 0038 05D0     		beq	.L7
 123:notoriOS.c    ****             timeToSync = syncData();
 309              		.loc 1 123 0
 310 003a FFF7FEFF 		bl	syncData
 311 003e 0346     		mov	r3, r0
 312 0040 1A46     		mov	r2, r3
 313 0042 074B     		ldr	r3, .L10+8
 314 0044 1A70     		strb	r2, [r3]
 315              	.L7:
 124:notoriOS.c    ****     }
 125:notoriOS.c    ****     // Print the countdown to the next alarm
 126:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 127:notoriOS.c    ****     
 128:notoriOS.c    ****     
 129:notoriOS.c    ****     // Check modem state machine on every loop
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 9


 130:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
 316              		.loc 1 130 0
 317 0046 FFF7FEFF 		bl	modem_process_tasks
 318 004a 0346     		mov	r3, r0
 319 004c FB71     		strb	r3, [r7, #7]
 131:notoriOS.c    **** 
 132:notoriOS.c    ****     //GPS Test
 133:notoriOS.c    ****     /*printf("MODEM STATUS IS: %d", modem_state);
 134:notoriOS.c    ****     if (modem_state == MODEM_STATE_READY) {
 135:notoriOS.c    ****     printf("GOING TO CHECK GPS DATA");
 136:notoriOS.c    ****     test_t t_gps_test = gps_test();
 137:notoriOS.c    ****     printTestStatus (t_gps_test);
 138:notoriOS.c    ****     }*/
 139:notoriOS.c    ****     return 0u +  modem_status;  
 320              		.loc 1 139 0
 321 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 140:notoriOS.c    **** }
 322              		.loc 1 140 0
 323 0050 1846     		mov	r0, r3
 324 0052 0837     		adds	r7, r7, #8
 325              		.cfi_def_cfa_offset 8
 326 0054 BD46     		mov	sp, r7
 327              		.cfi_def_cfa_register 13
 328              		@ sp needed
 329 0056 80BD     		pop	{r7, pc}
 330              	.L11:
 331              		.align	2
 332              	.L10:
 333 0058 00000000 		.word	timeToSycnRemoteParams
 334 005c 00000000 		.word	timeToMeasure
 335 0060 00000000 		.word	timeToSync
 336              		.cfi_endproc
 337              	.LFE66:
 338              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 339              		.section	.text.LayBack,"ax",%progbits
 340              		.align	2
 341              		.global	LayBack
 342              		.thumb
 343              		.thumb_func
 344              		.type	LayBack, %function
 345              	LayBack:
 346              	.LFB67:
 141:notoriOS.c    **** 
 142:notoriOS.c    **** 
 143:notoriOS.c    **** 
 144:notoriOS.c    **** 
 145:notoriOS.c    **** 
 146:notoriOS.c    **** 
 147:notoriOS.c    **** // ==============================================
 148:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 149:notoriOS.c    **** //      - Snoop Dogg (1993)
 150:notoriOS.c    **** //
 151:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 152:notoriOS.c    **** // ==============================================
 153:notoriOS.c    **** void LayBack()
 154:notoriOS.c    **** {
 347              		.loc 1 154 0
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 10


 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 1, uses_anonymous_args = 0
 351 0000 80B5     		push	{r7, lr}
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 7, -8
 354              		.cfi_offset 14, -4
 355 0002 00AF     		add	r7, sp, #0
 356              		.cfi_def_cfa_register 7
 155:notoriOS.c    ****   
 156:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 357              		.loc 1 156 0
 358 0004 FFF7FEFF 		bl	modem_sleep
 157:notoriOS.c    ****     
 158:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 159:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 359              		.loc 1 159 0
 360 0008 FFF7FEFF 		bl	debug_sleep
 160:notoriOS.c    ****     
 161:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 361              		.loc 1 161 0
 362 000c FFF7FEFF 		bl	CyPmSaveClocks
 162:notoriOS.c    ****     
 163:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 164:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 165:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 166:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 167:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 168:notoriOS.c    ****     //CyPmHibernate();
 169:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 170:notoriOS.c    **** 
 171:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 363              		.loc 1 171 0
 364 0010 4FF40061 		mov	r1, #2048
 365 0014 0020     		movs	r0, #0
 366 0016 FFF7FEFF 		bl	CyPmSleep
 172:notoriOS.c    **** 
 173:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 367              		.loc 1 173 0
 368 001a FFF7FEFF 		bl	CyPmRestoreClocks
 174:notoriOS.c    **** 
 175:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 369              		.loc 1 175 0
 370 001e FFF7FEFF 		bl	debug_wakeup
 176:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 371              		.loc 1 176 0
 372 0022 FFF7FEFF 		bl	modem_wakeup
 177:notoriOS.c    **** 
 178:notoriOS.c    **** }
 373              		.loc 1 178 0
 374 0026 00BF     		nop
 375 0028 80BD     		pop	{r7, pc}
 376              		.cfi_endproc
 377              	.LFE67:
 378              		.size	LayBack, .-LayBack
 379 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 380              		.align	2
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 11


 381              		.global	AyoItsTime
 382              		.thumb
 383              		.thumb_func
 384              		.type	AyoItsTime, %function
 385              	AyoItsTime:
 386              	.LFB68:
 179:notoriOS.c    **** 
 180:notoriOS.c    **** 
 181:notoriOS.c    **** // ==============================================
 182:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 183:notoriOS.c    **** //      - NAS (1994)
 184:notoriOS.c    **** //
 185:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 186:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 187:notoriOS.c    **** // It will add tasks to the work queue,
 188:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 189:notoriOS.c    **** // ==============================================
 190:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 191:notoriOS.c    **** {
 387              		.loc 1 191 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 8
 390              		@ frame_needed = 1, uses_anonymous_args = 0
 391 0000 80B5     		push	{r7, lr}
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 7, -8
 394              		.cfi_offset 14, -4
 395 0002 82B0     		sub	sp, sp, #8
 396              		.cfi_def_cfa_offset 16
 397 0004 00AF     		add	r7, sp, #0
 398              		.cfi_def_cfa_register 7
 399 0006 0346     		mov	r3, r0
 400 0008 FB71     		strb	r3, [r7, #7]
 192:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 193:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 401              		.loc 1 193 0
 402 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 403 000c 1946     		mov	r1, r3
 404 000e 0C48     		ldr	r0, .L17
 405 0010 FFF7FEFF 		bl	AlarmReady
 406 0014 0346     		mov	r3, r0
 407 0016 002B     		cmp	r3, #0
 408 0018 02D0     		beq	.L14
 194:notoriOS.c    ****     {
 195:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 196:notoriOS.c    ****         timeToMeasure = 1u;
 409              		.loc 1 196 0
 410 001a 0A4B     		ldr	r3, .L17+4
 411 001c 0122     		movs	r2, #1
 412 001e 1A70     		strb	r2, [r3]
 413              	.L14:
 197:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 198:notoriOS.c    ****         
 199:notoriOS.c    ****     }
 200:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 414              		.loc 1 200 0
 415 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 12


 416 0022 1946     		mov	r1, r3
 417 0024 0848     		ldr	r0, .L17+8
 418 0026 FFF7FEFF 		bl	AlarmReady
 419 002a 0346     		mov	r3, r0
 420 002c 002B     		cmp	r3, #0
 421 002e 02D0     		beq	.L16
 201:notoriOS.c    ****     {
 202:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 203:notoriOS.c    ****         timeToSync = 1u;
 422              		.loc 1 203 0
 423 0030 064B     		ldr	r3, .L17+12
 424 0032 0122     		movs	r2, #1
 425 0034 1A70     		strb	r2, [r3]
 426              	.L16:
 204:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 205:notoriOS.c    ****     }
 206:notoriOS.c    ****     
 207:notoriOS.c    **** }
 427              		.loc 1 207 0
 428 0036 00BF     		nop
 429 0038 0837     		adds	r7, r7, #8
 430              		.cfi_def_cfa_offset 8
 431 003a BD46     		mov	sp, r7
 432              		.cfi_def_cfa_register 13
 433              		@ sp needed
 434 003c 80BD     		pop	{r7, pc}
 435              	.L18:
 436 003e 00BF     		.align	2
 437              	.L17:
 438 0040 00000000 		.word	alarmMeasure
 439 0044 00000000 		.word	timeToMeasure
 440 0048 00000000 		.word	alarmSync
 441 004c 00000000 		.word	timeToSync
 442              		.cfi_endproc
 443              	.LFE68:
 444              		.size	AyoItsTime, .-AyoItsTime
 445              		.section	.text.AlarmReady,"ax",%progbits
 446              		.align	2
 447              		.global	AlarmReady
 448              		.thumb
 449              		.thumb_func
 450              		.type	AlarmReady, %function
 451              	AlarmReady:
 452              	.LFB69:
 208:notoriOS.c    **** 
 209:notoriOS.c    **** 
 210:notoriOS.c    **** // ==============================================
 211:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 212:notoriOS.c    **** // ==============================================
 213:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 214:notoriOS.c    **** {
 453              		.loc 1 214 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 8
 456              		@ frame_needed = 1, uses_anonymous_args = 0
 457 0000 80B5     		push	{r7, lr}
 458              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 13


 459              		.cfi_offset 7, -8
 460              		.cfi_offset 14, -4
 461 0002 82B0     		sub	sp, sp, #8
 462              		.cfi_def_cfa_offset 16
 463 0004 00AF     		add	r7, sp, #0
 464              		.cfi_def_cfa_register 7
 465 0006 7860     		str	r0, [r7, #4]
 466 0008 0B46     		mov	r3, r1
 467 000a FB70     		strb	r3, [r7, #3]
 215:notoriOS.c    ****     // if the countDownType matches the alarmType
 216:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 468              		.loc 1 216 0
 469 000c 7B68     		ldr	r3, [r7, #4]
 470 000e 1B79     		ldrb	r3, [r3, #4]
 471 0010 DBB2     		uxtb	r3, r3
 472 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 473 0014 9A42     		cmp	r2, r3
 474 0016 12D1     		bne	.L20
 217:notoriOS.c    ****        
 218:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 219:notoriOS.c    ****         // Decrement the count down value by 1
 220:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 475              		.loc 1 220 0
 476 0018 7B68     		ldr	r3, [r7, #4]
 477 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 478 001c 1BB2     		sxth	r3, r3
 479 001e 9BB2     		uxth	r3, r3
 480 0020 013B     		subs	r3, r3, #1
 481 0022 9BB2     		uxth	r3, r3
 482 0024 1AB2     		sxth	r2, r3
 483 0026 7B68     		ldr	r3, [r7, #4]
 484 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 221:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 222:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 485              		.loc 1 222 0
 486 002a 7B68     		ldr	r3, [r7, #4]
 487 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 488 002e 1BB2     		sxth	r3, r3
 489 0030 002B     		cmp	r3, #0
 490 0032 04DC     		bgt	.L20
 223:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 491              		.loc 1 223 0
 492 0034 7868     		ldr	r0, [r7, #4]
 493 0036 FFF7FEFF 		bl	ResetAlarm
 224:notoriOS.c    ****             return 1u;
 494              		.loc 1 224 0
 495 003a 0123     		movs	r3, #1
 496 003c 00E0     		b	.L21
 497              	.L20:
 225:notoriOS.c    ****         } 
 226:notoriOS.c    ****     }
 227:notoriOS.c    ****     
 228:notoriOS.c    ****     return 0u; // Otherwise return 0
 498              		.loc 1 228 0
 499 003e 0023     		movs	r3, #0
 500              	.L21:
 229:notoriOS.c    **** }
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 14


 501              		.loc 1 229 0
 502 0040 1846     		mov	r0, r3
 503 0042 0837     		adds	r7, r7, #8
 504              		.cfi_def_cfa_offset 8
 505 0044 BD46     		mov	sp, r7
 506              		.cfi_def_cfa_register 13
 507              		@ sp needed
 508 0046 80BD     		pop	{r7, pc}
 509              		.cfi_endproc
 510              	.LFE69:
 511              		.size	AlarmReady, .-AlarmReady
 512              		.section	.text.ResetAlarm,"ax",%progbits
 513              		.align	2
 514              		.global	ResetAlarm
 515              		.thumb
 516              		.thumb_func
 517              		.type	ResetAlarm, %function
 518              	ResetAlarm:
 519              	.LFB70:
 230:notoriOS.c    **** 
 231:notoriOS.c    **** // ==============================================
 232:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 233:notoriOS.c    **** // ==============================================
 234:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 235:notoriOS.c    **** {
 520              		.loc 1 235 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 8
 523              		@ frame_needed = 1, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 525 0000 80B4     		push	{r7}
 526              		.cfi_def_cfa_offset 4
 527              		.cfi_offset 7, -4
 528 0002 83B0     		sub	sp, sp, #12
 529              		.cfi_def_cfa_offset 16
 530 0004 00AF     		add	r7, sp, #0
 531              		.cfi_def_cfa_register 7
 532 0006 7860     		str	r0, [r7, #4]
 236:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 237:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 533              		.loc 1 237 0
 534 0008 7B68     		ldr	r3, [r7, #4]
 535 000a 1B88     		ldrh	r3, [r3]	@ movhi
 536 000c 9BB2     		uxth	r3, r3
 537 000e 1AB2     		sxth	r2, r3
 538 0010 7B68     		ldr	r3, [r7, #4]
 539 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 238:notoriOS.c    **** }
 540              		.loc 1 238 0
 541 0014 00BF     		nop
 542 0016 0C37     		adds	r7, r7, #12
 543              		.cfi_def_cfa_offset 4
 544 0018 BD46     		mov	sp, r7
 545              		.cfi_def_cfa_register 13
 546              		@ sp needed
 547 001a 80BC     		pop	{r7}
 548              		.cfi_restore 7
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 15


 549              		.cfi_def_cfa_offset 0
 550 001c 7047     		bx	lr
 551              		.cfi_endproc
 552              	.LFE70:
 553              		.size	ResetAlarm, .-ResetAlarm
 554 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
 555              		.align	2
 556              		.global	CreateAlarm
 557              		.thumb
 558              		.thumb_func
 559              		.type	CreateAlarm, %function
 560              	CreateAlarm:
 561              	.LFB71:
 239:notoriOS.c    **** 
 240:notoriOS.c    **** // ==============================================
 241:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 242:notoriOS.c    **** // ==============================================
 243:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 244:notoriOS.c    **** {
 562              		.loc 1 244 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 16
 565              		@ frame_needed = 1, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 567 0000 80B4     		push	{r7}
 568              		.cfi_def_cfa_offset 4
 569              		.cfi_offset 7, -4
 570 0002 85B0     		sub	sp, sp, #20
 571              		.cfi_def_cfa_offset 24
 572 0004 00AF     		add	r7, sp, #0
 573              		.cfi_def_cfa_register 7
 574 0006 7860     		str	r0, [r7, #4]
 575 0008 0846     		mov	r0, r1
 576 000a 1146     		mov	r1, r2
 577 000c 1A46     		mov	r2, r3
 578 000e 0346     		mov	r3, r0	@ movhi
 579 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 580 0012 0B46     		mov	r3, r1
 581 0014 7B70     		strb	r3, [r7, #1]
 582 0016 1346     		mov	r3, r2
 583 0018 3B70     		strb	r3, [r7]
 245:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 246:notoriOS.c    ****     alarm newAlarm;
 247:notoriOS.c    ****     
 248:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 249:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 584              		.loc 1 249 0
 585 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 586 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 250:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 587              		.loc 1 250 0
 588 001e 7B78     		ldrb	r3, [r7, #1]
 589 0020 3B73     		strb	r3, [r7, #12]
 251:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 590              		.loc 1 251 0
 591 0022 3B78     		ldrb	r3, [r7]
 592 0024 7B73     		strb	r3, [r7, #13]
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 16


 252:notoriOS.c    ****     
 253:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 254:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 255:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 593              		.loc 1 255 0
 594 0026 B7F90230 		ldrsh	r3, [r7, #2]
 595 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 256:notoriOS.c    ****     
 257:notoriOS.c    ****     return newAlarm;
 596              		.loc 1 257 0
 597 002c 7B68     		ldr	r3, [r7, #4]
 598 002e 1A46     		mov	r2, r3
 599 0030 07F10803 		add	r3, r7, #8
 600 0034 1868     		ldr	r0, [r3]	@ unaligned
 601 0036 1060     		str	r0, [r2]	@ unaligned
 602 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 603 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 258:notoriOS.c    ****     
 259:notoriOS.c    **** }
 604              		.loc 1 259 0
 605 003c 7868     		ldr	r0, [r7, #4]
 606 003e 1437     		adds	r7, r7, #20
 607              		.cfi_def_cfa_offset 4
 608 0040 BD46     		mov	sp, r7
 609              		.cfi_def_cfa_register 13
 610              		@ sp needed
 611 0042 80BC     		pop	{r7}
 612              		.cfi_restore 7
 613              		.cfi_def_cfa_offset 0
 614 0044 7047     		bx	lr
 615              		.cfi_endproc
 616              	.LFE71:
 617              		.size	CreateAlarm, .-CreateAlarm
 618 0046 00BF     		.section	.rodata
 619 0047 00       		.align	2
 620              	.LC4:
 621 0048 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 621      2D2D2D2D 
 621      2D2D2D2D 
 621      2D424547 
 621      494E2054 
 622 0072 0000     		.align	2
 623              	.LC5:
 624 0074 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\000"
 624      3D25732C 
 624      2053494D 
 624      49443D25 
 624      732C2044 
 625 0093 00       		.align	2
 626              	.LC6:
 627 0094 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 627      2D2D2D2D 
 627      2D2D2D2D 
 627      2D2D2D45 
 627      4E442054 
 628 00bd 00       		.ascii	"\000"
 629              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 17


 630              		.align	2
 631              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 632              		.thumb
 633              		.thumb_func
 634              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 635              	ChickityCheckYourselfBeforeYouWreckYourself:
 636              	.LFB72:
 260:notoriOS.c    **** 
 261:notoriOS.c    **** // ==============================================
 262:notoriOS.c    **** // Dropping bombs on your moms
 263:notoriOS.c    **** //      - Ice Cube (1992)
 264:notoriOS.c    **** //
 265:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 266:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 267:notoriOS.c    **** // ==============================================
 268:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 637              		.loc 1 268 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 1944
 640              		@ frame_needed = 1, uses_anonymous_args = 0
 641 0000 90B5     		push	{r4, r7, lr}
 642              		.cfi_def_cfa_offset 12
 643              		.cfi_offset 4, -12
 644              		.cfi_offset 7, -8
 645              		.cfi_offset 14, -4
 646 0002 ADF6141D 		subw	sp, sp, #2324
 647              		.cfi_def_cfa_offset 2336
 648 0006 5EAF     		add	r7, sp, #376
 649              		.cfi_def_cfa 7, 1960
 269:notoriOS.c    **** 
 270:notoriOS.c    ****     //test_t t_influx = influx_test();
 271:notoriOS.c    ****     //printTestStatus(t_influx);
 272:notoriOS.c    ****     
 273:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 650              		.loc 1 273 0
 651 0008 3849     		ldr	r1, .L26
 652 000a 0320     		movs	r0, #3
 653 000c FFF7FEFF 		bl	printNotif
 274:notoriOS.c    ****     
 275:notoriOS.c    ****     // Test level sensor
 276:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 654              		.loc 1 276 0
 655 0010 07F21463 		addw	r3, r7, #1556
 656 0014 1846     		mov	r0, r3
 657 0016 FFF7FEFF 		bl	level_sensor_test
 277:notoriOS.c    ****     printTestStatus(t_level_sensor);
 658              		.loc 1 277 0
 659 001a 07F21464 		addw	r4, r7, #1556
 660 001e 6846     		mov	r0, sp
 661 0020 04F11003 		add	r3, r4, #16
 662 0024 40F27112 		movw	r2, #369
 663 0028 1946     		mov	r1, r3
 664 002a FFF7FEFF 		bl	memcpy
 665 002e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 666 0032 FFF7FEFF 		bl	printTestStatus
 278:notoriOS.c    ****     
 279:notoriOS.c    ****     // Test voltages
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 18


 280:notoriOS.c    ****     test_t t_voltages = voltages_test();
 667              		.loc 1 280 0
 668 0036 07F59263 		add	r3, r7, #1168
 669 003a 1846     		mov	r0, r3
 670 003c FFF7FEFF 		bl	voltages_test
 281:notoriOS.c    ****     printTestStatus(t_voltages);
 671              		.loc 1 281 0
 672 0040 07F59264 		add	r4, r7, #1168
 673 0044 6846     		mov	r0, sp
 674 0046 04F11003 		add	r3, r4, #16
 675 004a 40F27112 		movw	r2, #369
 676 004e 1946     		mov	r1, r3
 677 0050 FFF7FEFF 		bl	memcpy
 678 0054 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 679 0058 FFF7FEFF 		bl	printTestStatus
 282:notoriOS.c    ****  
 283:notoriOS.c    ****     // Test voltages
 284:notoriOS.c    ****     test_t t_pressure = pressure_sensor_test();
 680              		.loc 1 284 0
 681 005c 07F54373 		add	r3, r7, #780
 682 0060 1846     		mov	r0, r3
 683 0062 FFF7FEFF 		bl	pressure_sensor_test
 285:notoriOS.c    ****     printTestStatus(t_pressure);
 684              		.loc 1 285 0
 685 0066 07F54374 		add	r4, r7, #780
 686 006a 6846     		mov	r0, sp
 687 006c 04F11003 		add	r3, r4, #16
 688 0070 40F27112 		movw	r2, #369
 689 0074 1946     		mov	r1, r3
 690 0076 FFF7FEFF 		bl	memcpy
 691 007a 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 692 007e FFF7FEFF 		bl	printTestStatus
 286:notoriOS.c    ****     
 287:notoriOS.c    ****     // Test SD card
 288:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 693              		.loc 1 288 0
 694 0082 07F5C473 		add	r3, r7, #392
 695 0086 1846     		mov	r0, r3
 696 0088 FFF7FEFF 		bl	SD_card_test
 289:notoriOS.c    ****     printTestStatus(t_sd_card);
 697              		.loc 1 289 0
 698 008c 07F5C474 		add	r4, r7, #392
 699 0090 6846     		mov	r0, sp
 700 0092 04F11003 		add	r3, r4, #16
 701 0096 40F27112 		movw	r2, #369
 702 009a 1946     		mov	r1, r3
 703 009c FFF7FEFF 		bl	memcpy
 704 00a0 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 705 00a4 FFF7FEFF 		bl	printTestStatus
 290:notoriOS.c    ****     
 291:notoriOS.c    ****     
 292:notoriOS.c    ****     
 293:notoriOS.c    ****     // Test modem
 294:notoriOS.c    ****     test_t t_modem = modem_test();
 706              		.loc 1 294 0
 707 00a8 3B1D     		adds	r3, r7, #4
 708 00aa 1846     		mov	r0, r3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 19


 709 00ac FFF7FEFF 		bl	modem_test
 295:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s",modem_info.imei,modem_info.sim_i
 710              		.loc 1 295 0
 711 00b0 0F4B     		ldr	r3, .L26+4
 712 00b2 0093     		str	r3, [sp]
 713 00b4 0F4B     		ldr	r3, .L26+8
 714 00b6 104A     		ldr	r2, .L26+12
 715 00b8 1049     		ldr	r1, .L26+16
 716 00ba 0320     		movs	r0, #3
 717 00bc FFF7FEFF 		bl	printNotif
 296:notoriOS.c    ****     printTestStatus(t_modem);
 718              		.loc 1 296 0
 719 00c0 3C1D     		adds	r4, r7, #4
 720 00c2 6846     		mov	r0, sp
 721 00c4 04F11003 		add	r3, r4, #16
 722 00c8 40F27112 		movw	r2, #369
 723 00cc 1946     		mov	r1, r3
 724 00ce FFF7FEFF 		bl	memcpy
 725 00d2 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 726 00d6 FFF7FEFF 		bl	printTestStatus
 297:notoriOS.c    ****     
 298:notoriOS.c    ****     
 299:notoriOS.c    ****     
 300:notoriOS.c    ****     
 301:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 727              		.loc 1 301 0
 728 00da 0949     		ldr	r1, .L26+20
 729 00dc 0320     		movs	r0, #3
 730 00de FFF7FEFF 		bl	printNotif
 302:notoriOS.c    **** 
 303:notoriOS.c    **** }
 731              		.loc 1 303 0
 732 00e2 00BF     		nop
 733 00e4 07F29C77 		addw	r7, r7, #1948
 734              		.cfi_def_cfa_offset 12
 735 00e8 BD46     		mov	sp, r7
 736              		.cfi_def_cfa_register 13
 737              		@ sp needed
 738 00ea 90BD     		pop	{r4, r7, pc}
 739              	.L27:
 740              		.align	2
 741              	.L26:
 742 00ec 48000000 		.word	.LC4
 743 00f0 04000000 		.word	system_info+4
 744 00f4 00000000 		.word	modem_info
 745 00f8 28000000 		.word	modem_info+40
 746 00fc 74000000 		.word	.LC5
 747 0100 94000000 		.word	.LC6
 748              		.cfi_endproc
 749              	.LFE72:
 750              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 751              		.section	.text.main,"ax",%progbits
 752              		.align	2
 753              		.global	main
 754              		.thumb
 755              		.thumb_func
 756              		.type	main, %function
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 20


 757              	main:
 758              	.LFB73:
 304:notoriOS.c    **** 
 305:notoriOS.c    **** // ==============================================
 306:notoriOS.c    **** // Processes Core Tasks
 307:notoriOS.c    **** // ==============================================
 308:notoriOS.c    **** int main(void)
 309:notoriOS.c    **** {
 759              		.loc 1 309 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 0
 762              		@ frame_needed = 1, uses_anonymous_args = 0
 763 0000 80B5     		push	{r7, lr}
 764              		.cfi_def_cfa_offset 8
 765              		.cfi_offset 7, -8
 766              		.cfi_offset 14, -4
 767 0002 00AF     		add	r7, sp, #0
 768              		.cfi_def_cfa_register 7
 310:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 769              		.loc 1 310 0
 770              		.syntax unified
 771              	@ 310 "notoriOS.c" 1
 772 0004 62B6     		CPSIE   i
 773              	@ 0 "" 2
 311:notoriOS.c    **** 
 312:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 774              		.loc 1 312 0
 775              		.thumb
 776              		.syntax unified
 777 0006 FFF7FEFF 		bl	ReadyOrNot
 313:notoriOS.c    ****     
 314:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 778              		.loc 1 314 0
 779 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 780              	.L30:
 315:notoriOS.c    ****    
 316:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 317:notoriOS.c    ****     {
 318:notoriOS.c    ****         
 319:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 781              		.loc 1 319 0
 782 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 783 0012 0346     		mov	r3, r0
 784 0014 002B     		cmp	r3, #0
 785 0016 FAD1     		bne	.L30
 320:notoriOS.c    ****         {
 321:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
 786              		.loc 1 321 0
 787 0018 FFF7FEFF 		bl	LayBack
 322:notoriOS.c    ****         }
 323:notoriOS.c    ****     }
 788              		.loc 1 323 0
 789 001c F7E7     		b	.L30
 790              		.cfi_endproc
 791              	.LFE73:
 792              		.size	main, .-main
 793 001e 00BF     		.section	.rodata
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 21


 794 00be 0000     		.align	2
 795              	.LC7:
 796 00c0 4D6F6465 		.ascii	"Modem is ready.\000"
 796      6D206973 
 796      20726561 
 796      64792E00 
 797              		.align	2
 798              	.LC8:
 799 00d0 72737270 		.ascii	"rsrp\000"
 799      00
 800 00d5 000000   		.align	2
 801              	.LC9:
 802 00d8 7472795F 		.ascii	"try_counter\000"
 802      636F756E 
 802      74657200 
 803              		.align	2
 804              	.LC10:
 805 00e4 64617461 		.ascii	"data_count_sent\000"
 805      5F636F75 
 805      6E745F73 
 805      656E7400 
 806              		.align	2
 807              	.LC11:
 808 00f4 64617461 		.ascii	"data_count_desired\000"
 808      5F636F75 
 808      6E745F64 
 808      65736972 
 808      656400
 809 0107 00       		.align	2
 810              	.LC12:
 811 0108 42656769 		.ascii	"Begin HTTP post.\000"
 811      6E204854 
 811      54502070 
 811      6F73742E 
 811      00
 812 0119 000000   		.align	2
 813              	.LC13:
 814 011c 38623265 		.ascii	"8b2e71812984ae40cbf87fda1c3f239926eec2b9\000"
 814      37313831 
 814      32393834 
 814      61653430 
 814      63626638 
 815 0145 000000   		.align	2
 816              	.LC14:
 817 0148 6170692F 		.ascii	"api/v1/write\000"
 817      76312F77 
 817      72697465 
 817      00
 818 0155 000000   		.align	2
 819              	.LC15:
 820 0158 48545450 		.ascii	"HTTP route: %s\000"
 820      20726F75 
 820      74653A20 
 820      257300
 821 0167 00       		.align	2
 822              	.LC16:
 823 0168 312E3100 		.ascii	"1.1\000"
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 22


 824              		.align	2
 825              	.LC17:
 826 016c 00       		.ascii	"\000"
 827 016d 000000   		.align	2
 828              	.LC18:
 829 0170 436C6F73 		.ascii	"Close\000"
 829      6500
 830 0176 0000     		.align	2
 831              	.LC19:
 832 0178 504F5354 		.ascii	"POST\000"
 832      00
 833 017d 000000   		.align	2
 834              	.LC20:
 835 0180 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 835      20485454 
 835      50205265 
 835      71756573 
 835      743A2025 
 836 0196 0000     		.align	2
 837              	.LC21:
 838 0198 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 838      443D312C 
 838      302C2564 
 838      2C222573 
 838      222C302C 
 839 01b1 000000   		.align	2
 840              	.LC22:
 841 01b4 257300   		.ascii	"%s\000"
 842 01b7 00       		.align	2
 843              	.LC23:
 844 01b8 4F4B00   		.ascii	"OK\000"
 845              		.global	__aeabi_ui2d
 846              		.global	__aeabi_d2iz
 847 01bb 00       		.align	2
 848              	.LC24:
 849 01bc 68747470 		.ascii	"http_request len: %d\000"
 849      5F726571 
 849      75657374 
 849      206C656E 
 849      3A202564 
 850 01d1 000000   		.align	2
 851              	.LC25:
 852 01d4 23206F66 		.ascii	"# of packets: %d\000"
 852      20706163 
 852      6B657473 
 852      3A202564 
 852      00
 853 01e5 000000   		.align	2
 854              	.LC26:
 855 01e8 3E00     		.ascii	">\000"
 856 01ea 0000     		.align	2
 857              	.LC27:
 858 01ec 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 858      53454E44 
 858      3D310D0A 
 858      00
 859 01f9 000000   		.align	2
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 23


 860              	.LC28:
 861 01fc 1A00     		.ascii	"\032\000"
 862 01fe 0000     		.align	2
 863              	.LC29:
 864 0200 6368756E 		.ascii	"chunk %d: %s\000"
 864      6B202564 
 864      3A202573 
 864      00
 865 020d 000000   		.align	2
 866              	.LC30:
 867 0210 5352494E 		.ascii	"SRING\000"
 867      4700
 868 0216 0000     		.align	2
 869              	.LC31:
 870 0218 4F532D4F 		.ascii	"OS-OK\000"
 870      4B00
 871 021e 0000     		.align	2
 872              	.LC32:
 873 0220 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 873      52454356 
 873      3D312C31 
 873      3030300D 
 873      00
 874 0231 000000   		.align	2
 875              	.LC33:
 876 0234 6D6F6465 		.ascii	"modem_tx_time\000"
 876      6D5F7478 
 876      5F74696D 
 876      6500
 877 0242 0000     		.align	2
 878              	.LC34:
 879 0244 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 879      4F3A2043 
 879      6F756C64 
 879      206E6F74 
 879      20726563 
 880 026f 00       		.align	2
 881              	.LC35:
 882 0270 436F6C6C 		.ascii	"Collected GPS data\000"
 882      65637465 
 882      64204750 
 882      53206461 
 882      746100
 883 0283 00       		.align	2
 884              	.LC36:
 885 0284 4661696C 		.ascii	"Failed GPS data collection (Modem not ready)\000"
 885      65642047 
 885      50532064 
 885      61746120 
 885      636F6C6C 
 886              		.section	.text.syncData,"ax",%progbits
 887              		.align	2
 888              		.global	syncData
 889              		.thumb
 890              		.thumb_func
 891              		.type	syncData, %function
 892              	syncData:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 24


 893              	.LFB74:
 324:notoriOS.c    **** }
 325:notoriOS.c    **** 
 326:notoriOS.c    **** // ==============================================
 327:notoriOS.c    **** // Syncs data with server
 328:notoriOS.c    **** // Returns 0 when done
 329:notoriOS.c    **** // ==============================================
 330:notoriOS.c    **** uint8 syncData(){
 894              		.loc 1 330 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 1336
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898 0000 90B5     		push	{r4, r7, lr}
 899              		.cfi_def_cfa_offset 12
 900              		.cfi_offset 4, -12
 901              		.cfi_offset 7, -8
 902              		.cfi_offset 14, -4
 903 0002 ADF2545D 		subw	sp, sp, #1364
 904              		.cfi_def_cfa_offset 1376
 905 0006 06AF     		add	r7, sp, #24
 906              		.cfi_def_cfa 7, 1352
 331:notoriOS.c    ****     
 332:notoriOS.c    ****     /*
 333:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 334:notoriOS.c    ****     uint8 check = 0;
 335:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 336:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 337:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 338:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 339:notoriOS.c    ****     */
 340:notoriOS.c    **** 
 341:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 342:notoriOS.c    ****     LED_Write(1u);
 907              		.loc 1 342 0
 908 0008 0120     		movs	r0, #1
 909 000a FFF7FEFF 		bl	LED_Write
 343:notoriOS.c    ****     CyDelay(100u);
 910              		.loc 1 343 0
 911 000e 6420     		movs	r0, #100
 912 0010 FFF7FEFF 		bl	CyDelay
 344:notoriOS.c    ****     LED_Write(0u);
 913              		.loc 1 344 0
 914 0014 0020     		movs	r0, #0
 915 0016 FFF7FEFF 		bl	LED_Write
 345:notoriOS.c    **** 
 346:notoriOS.c    ****     
 347:notoriOS.c    ****     // If there's no data, not need to do anything
 348:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 916              		.loc 1 348 0
 917 001a FFF7FEFF 		bl	sizeOfDataStack
 918 001e 0346     		mov	r3, r0
 919 0020 002B     		cmp	r3, #0
 920 0022 01D1     		bne	.L32
 349:notoriOS.c    ****         return 0u;
 921              		.loc 1 349 0
 922 0024 0023     		movs	r3, #0
 923 0026 07E2     		b	.L33
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 25


 924              	.L32:
 350:notoriOS.c    ****         }
 351:notoriOS.c    ****     
 352:notoriOS.c    ****     // Create request body, in this case influx
 353:notoriOS.c    ****     // Place body into HTTP request header
 354:notoriOS.c    ****     // Fire up modem and get it out
 355:notoriOS.c    ****      
 356:notoriOS.c    ****     
 357:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 358:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 925              		.loc 1 358 0
 926 0028 FFF7FEFF 		bl	modem_get_state
 927 002c 0346     		mov	r3, r0
 928 002e 002B     		cmp	r3, #0
 929 0030 11D1     		bne	.L34
 359:notoriOS.c    **** 
 360:notoriOS.c    ****         try_counter++;
 930              		.loc 1 360 0
 931 0032 C74B     		ldr	r3, .L48
 932 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 933 0036 0133     		adds	r3, r3, #1
 934 0038 DAB2     		uxtb	r2, r3
 935 003a C54B     		ldr	r3, .L48
 936 003c 1A70     		strb	r2, [r3]
 361:notoriOS.c    ****         	
 362:notoriOS.c    ****         if(try_counter <= 2){
 937              		.loc 1 362 0
 938 003e C44B     		ldr	r3, .L48
 939 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 940 0042 022B     		cmp	r3, #2
 941 0044 02D8     		bhi	.L35
 363:notoriOS.c    ****             modem_power_up();
 942              		.loc 1 363 0
 943 0046 FFF7FEFF 		bl	modem_power_up
 944 004a F4E1     		b	.L36
 945              	.L35:
 364:notoriOS.c    ****         }else{
 365:notoriOS.c    ****             try_counter = 0;
 946              		.loc 1 365 0
 947 004c C04B     		ldr	r3, .L48
 948 004e 0022     		movs	r2, #0
 949 0050 1A70     		strb	r2, [r3]
 366:notoriOS.c    ****             return 0u;
 950              		.loc 1 366 0
 951 0052 0023     		movs	r3, #0
 952 0054 F0E1     		b	.L33
 953              	.L34:
 367:notoriOS.c    ****             }
 368:notoriOS.c    ****             
 369:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 954              		.loc 1 369 0
 955 0056 FFF7FEFF 		bl	modem_get_state
 956 005a 0346     		mov	r3, r0
 957 005c 042B     		cmp	r3, #4
 958 005e 40F0EA81 		bne	.L36
 959              	.LBB2:
 370:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 26


 960              		.loc 1 370 0
 961 0062 BC49     		ldr	r1, .L48+4
 962 0064 0020     		movs	r0, #0
 963 0066 FFF7FEFF 		bl	printNotif
 371:notoriOS.c    ****         
 372:notoriOS.c    ****         http_request[0] = '\0';
 964              		.loc 1 372 0
 965 006a BB4B     		ldr	r3, .L48+8
 966 006c 0022     		movs	r2, #0
 967 006e 1A70     		strb	r2, [r3]
 373:notoriOS.c    ****         http_body[0] = '\0';
 968              		.loc 1 373 0
 969 0070 BA4B     		ldr	r3, .L48+12
 970 0072 0022     		movs	r2, #0
 971 0074 1A70     		strb	r2, [r3]
 374:notoriOS.c    ****         http_route[0] = '\0';
 972              		.loc 1 374 0
 973 0076 BA4B     		ldr	r3, .L48+16
 974 0078 0022     		movs	r2, #0
 975 007a 1A70     		strb	r2, [r3]
 375:notoriOS.c    ****         //char *base = "write";
 376:notoriOS.c    ****         
 377:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power)
 378:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 379:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 976              		.loc 1 379 0
 977 007c B94B     		ldr	r3, .L48+20
 978 007e 5B69     		ldr	r3, [r3, #20]
 979 0080 07F5A260 		add	r0, r7, #1296
 980 0084 B84A     		ldr	r2, .L48+24
 981 0086 1421     		movs	r1, #20
 982 0088 FFF7FEFF 		bl	snprintf
 380:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 983              		.loc 1 380 0
 984 008c FFF7FEFF 		bl	getTimeStamp
 985 0090 0246     		mov	r2, r0
 986 0092 07F5A263 		add	r3, r7, #1296
 987 0096 1946     		mov	r1, r3
 988 0098 B448     		ldr	r0, .L48+28
 989 009a FFF7FEFF 		bl	pushData
 381:notoriOS.c    ****         
 382:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 383:notoriOS.c    ****         char c_try_counter[20];
 384:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 990              		.loc 1 384 0
 991 009e AC4B     		ldr	r3, .L48
 992 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 993 00a2 07F2FC40 		addw	r0, r7, #1276
 994 00a6 B04A     		ldr	r2, .L48+24
 995 00a8 1421     		movs	r1, #20
 996 00aa FFF7FEFF 		bl	snprintf
 385:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 997              		.loc 1 385 0
 998 00ae FFF7FEFF 		bl	getTimeStamp
 999 00b2 0246     		mov	r2, r0
 1000 00b4 07F2FC43 		addw	r3, r7, #1276
 1001 00b8 1946     		mov	r1, r3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 27


 1002 00ba AD48     		ldr	r0, .L48+32
 1003 00bc FFF7FEFF 		bl	pushData
 386:notoriOS.c    ****         
 387:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
 388:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 389:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 390:notoriOS.c    ****         if(buffer_overflow == false){
 1004              		.loc 1 390 0
 1005 00c0 AC4B     		ldr	r3, .L48+36
 1006 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1007 00c4 83F00103 		eor	r3, r3, #1
 1008 00c8 DBB2     		uxtb	r3, r3
 1009 00ca 002B     		cmp	r3, #0
 1010 00cc 16D0     		beq	.L37
 1011              	.LBB3:
 391:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 1012              		.loc 1 391 0
 1013 00ce FFF7FEFF 		bl	sizeOfDataStack
 1014 00d2 0346     		mov	r3, r0
 1015 00d4 A7F83035 		strh	r3, [r7, #1328]	@ movhi
 392:notoriOS.c    ****             char c_data_count_sent[20];
 393:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 1016              		.loc 1 393 0
 1017 00d8 B7F83035 		ldrh	r3, [r7, #1328]
 1018 00dc 07F2D440 		addw	r0, r7, #1236
 1019 00e0 A14A     		ldr	r2, .L48+24
 1020 00e2 1421     		movs	r1, #20
 1021 00e4 FFF7FEFF 		bl	snprintf
 394:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1022              		.loc 1 394 0
 1023 00e8 FFF7FEFF 		bl	getTimeStamp
 1024 00ec 0246     		mov	r2, r0
 1025 00ee 07F2D443 		addw	r3, r7, #1236
 1026 00f2 1946     		mov	r1, r3
 1027 00f4 A048     		ldr	r0, .L48+40
 1028 00f6 FFF7FEFF 		bl	pushData
 1029              	.LBE3:
 1030 00fa 0FE0     		b	.L38
 1031              	.L37:
 1032              	.LBB4:
 395:notoriOS.c    ****         }else{
 396:notoriOS.c    ****             char c_data_count_sent[20];
 397:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1033              		.loc 1 397 0
 1034 00fc 07F59860 		add	r0, r7, #1216
 1035 0100 9623     		movs	r3, #150
 1036 0102 994A     		ldr	r2, .L48+24
 1037 0104 1421     		movs	r1, #20
 1038 0106 FFF7FEFF 		bl	snprintf
 398:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1039              		.loc 1 398 0
 1040 010a FFF7FEFF 		bl	getTimeStamp
 1041 010e 0246     		mov	r2, r0
 1042 0110 07F59863 		add	r3, r7, #1216
 1043 0114 1946     		mov	r1, r3
 1044 0116 9848     		ldr	r0, .L48+40
 1045 0118 FFF7FEFF 		bl	pushData
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 28


 1046              	.L38:
 1047              	.LBE4:
 399:notoriOS.c    ****         }
 400:notoriOS.c    ****         
 401:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 402:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 1048              		.loc 1 402 0
 1049 011c FFF7FEFF 		bl	sizeOfDataStackDesired
 1050 0120 0346     		mov	r3, r0
 1051 0122 A7F82E35 		strh	r3, [r7, #1326]	@ movhi
 403:notoriOS.c    ****         char c_data_count_desired[20];
 404:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 405:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1052              		.loc 1 405 0
 1053 0126 B7F82E35 		ldrh	r3, [r7, #1326]
 1054 012a 013B     		subs	r3, r3, #1
 1055 012c 07F59D60 		add	r0, r7, #1256
 1056 0130 8D4A     		ldr	r2, .L48+24
 1057 0132 1421     		movs	r1, #20
 1058 0134 FFF7FEFF 		bl	snprintf
 406:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
 1059              		.loc 1 406 0
 1060 0138 FFF7FEFF 		bl	getTimeStamp
 1061 013c 0246     		mov	r2, r0
 1062 013e 07F59D63 		add	r3, r7, #1256
 1063 0142 1946     		mov	r1, r3
 1064 0144 8D48     		ldr	r0, .L48+44
 1065 0146 FFF7FEFF 		bl	pushData
 407:notoriOS.c    ****         
 408:notoriOS.c    ****         // Construct HTPP request
 409:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1066              		.loc 1 409 0
 1067 014a 8D49     		ldr	r1, .L48+48
 1068 014c 0020     		movs	r0, #0
 1069 014e FFF7FEFF 		bl	printNotif
 410:notoriOS.c    ****         
 411:notoriOS.c    ****         // Old influx API
 412:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 413:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1070              		.loc 1 413 0
 1071 0152 8C4B     		ldr	r3, .L48+52
 1072 0154 8C4A     		ldr	r2, .L48+56
 1073 0156 8D49     		ldr	r1, .L48+60
 1074 0158 8148     		ldr	r0, .L48+16
 1075 015a FFF7FEFF 		bl	construct_malcom_route
 414:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1076              		.loc 1 414 0
 1077 015e 804A     		ldr	r2, .L48+16
 1078 0160 8B49     		ldr	r1, .L48+64
 1079 0162 0020     		movs	r0, #0
 1080 0164 FFF7FEFF 		bl	printNotif
 415:notoriOS.c    ****         
 416:notoriOS.c    ****         //OLD INFLUX API
 417:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 418:notoriOS.c    ****         construct_malcom_body(http_body);
 1081              		.loc 1 418 0
 1082 0168 7C48     		ldr	r0, .L48+12
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 29


 1083 016a FFF7FEFF 		bl	construct_malcom_body
 419:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1084              		.loc 1 419 0
 1085 016e 894B     		ldr	r3, .L48+68
 1086 0170 5B6E     		ldr	r3, [r3, #100]
 1087 0172 894A     		ldr	r2, .L48+72
 1088 0174 0592     		str	r2, [sp, #20]
 1089 0176 0022     		movs	r2, #0
 1090 0178 0492     		str	r2, [sp, #16]
 1091 017a 884A     		ldr	r2, .L48+76
 1092 017c 0392     		str	r2, [sp, #12]
 1093 017e 884A     		ldr	r2, .L48+80
 1094 0180 0292     		str	r2, [sp, #8]
 1095 0182 884A     		ldr	r2, .L48+84
 1096 0184 0192     		str	r2, [sp, #4]
 1097 0186 0093     		str	r3, [sp]
 1098 0188 754B     		ldr	r3, .L48+16
 1099 018a 824A     		ldr	r2, .L48+68
 1100 018c 7349     		ldr	r1, .L48+12
 1101 018e 7248     		ldr	r0, .L48+8
 1102 0190 FFF7FEFF 		bl	construct_generic_HTTP_request
 420:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1103              		.loc 1 420 0
 1104 0194 704A     		ldr	r2, .L48+8
 1105 0196 8449     		ldr	r1, .L48+88
 1106 0198 0020     		movs	r0, #0
 1107 019a FFF7FEFF 		bl	printNotif
 421:notoriOS.c    ****         
 422:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 423:notoriOS.c    ****         // Open port and begin command line sequence
 424:notoriOS.c    ****         char portConfig[200];
 425:notoriOS.c    ****         uint8 status = 0u;
 1108              		.loc 1 425 0
 1109 019e 0023     		movs	r3, #0
 1110 01a0 87F82D35 		strb	r3, [r7, #1325]
 426:notoriOS.c    ****         
 427:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1111              		.loc 1 427 0
 1112 01a4 7B4B     		ldr	r3, .L48+68
 1113 01a6 5A6E     		ldr	r2, [r3, #100]
 1114 01a8 3846     		mov	r0, r7
 1115 01aa 7A4B     		ldr	r3, .L48+68
 1116 01ac 0093     		str	r3, [sp]
 1117 01ae 1346     		mov	r3, r2
 1118 01b0 7E4A     		ldr	r2, .L48+92
 1119 01b2 C821     		movs	r1, #200
 1120 01b4 FFF7FEFF 		bl	snprintf
 428:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1121              		.loc 1 428 0
 1122 01b8 3B46     		mov	r3, r7
 1123 01ba 1A46     		mov	r2, r3
 1124 01bc 7C49     		ldr	r1, .L48+96
 1125 01be 0020     		movs	r0, #0
 1126 01c0 FFF7FEFF 		bl	printNotif
 429:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1127              		.loc 1 429 0
 1128 01c4 3B46     		mov	r3, r7
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 30


 1129 01c6 42F21072 		movw	r2, #10000
 1130 01ca 7A49     		ldr	r1, .L48+100
 1131 01cc 1846     		mov	r0, r3
 1132 01ce FFF7FEFF 		bl	at_write_command
 1133 01d2 0346     		mov	r3, r0
 1134 01d4 87F82D35 		strb	r3, [r7, #1325]
 430:notoriOS.c    ****         
 431:notoriOS.c    ****         // create character pointer to chunk through the http_request
 432:notoriOS.c    ****         char *chunk;
 433:notoriOS.c    ****         // Set chunk to start where http_request starts
 434:notoriOS.c    ****         chunk = http_request;
 1135              		.loc 1 434 0
 1136 01d8 5F4B     		ldr	r3, .L48+8
 1137 01da C7F83435 		str	r3, [r7, #1332]
 435:notoriOS.c    ****         // variable for the number of packets to send
 436:notoriOS.c    ****         int8 packets;
 437:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1138              		.loc 1 437 0
 1139 01de 5E48     		ldr	r0, .L48+8
 1140 01e0 FFF7FEFF 		bl	strlen
 1141 01e4 0246     		mov	r2, r0
 1142 01e6 744B     		ldr	r3, .L48+104
 1143 01e8 A3FB0223 		umull	r2, r3, r3, r2
 1144 01ec 5B09     		lsrs	r3, r3, #5
 1145 01ee 1846     		mov	r0, r3
 1146 01f0 FFF7FEFF 		bl	__aeabi_ui2d
 1147 01f4 4FF00002 		mov	r2, #0
 1148 01f8 704B     		ldr	r3, .L48+108
 1149 01fa FFF7FEFF 		bl	nextafter
 1150 01fe 0346     		mov	r3, r0
 1151 0200 0C46     		mov	r4, r1
 1152 0202 1846     		mov	r0, r3
 1153 0204 2146     		mov	r1, r4
 1154 0206 FFF7FEFF 		bl	ceil
 1155 020a 0346     		mov	r3, r0
 1156 020c 0C46     		mov	r4, r1
 1157 020e 1846     		mov	r0, r3
 1158 0210 2146     		mov	r1, r4
 1159 0212 FFF7FEFF 		bl	__aeabi_d2iz
 1160 0216 0346     		mov	r3, r0
 1161 0218 87F82C35 		strb	r3, [r7, #1324]
 438:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1162              		.loc 1 438 0
 1163 021c 4E48     		ldr	r0, .L48+8
 1164 021e FFF7FEFF 		bl	strlen
 1165 0222 0346     		mov	r3, r0
 1166 0224 1A46     		mov	r2, r3
 1167 0226 6649     		ldr	r1, .L48+112
 1168 0228 0020     		movs	r0, #0
 1169 022a FFF7FEFF 		bl	printNotif
 439:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1170              		.loc 1 439 0
 1171 022e 97F92C35 		ldrsb	r3, [r7, #1324]
 1172 0232 1A46     		mov	r2, r3
 1173 0234 6349     		ldr	r1, .L48+116
 1174 0236 0020     		movs	r0, #0
 1175 0238 FFF7FEFF 		bl	printNotif
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 31


 1176              	.LBB5:
 440:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 441:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1177              		.loc 1 441 0
 1178 023c 0023     		movs	r3, #0
 1179 023e 87F83335 		strb	r3, [r7, #1331]
 1180 0242 53E0     		b	.L39
 1181              	.L42:
 1182              	.LBB6:
 442:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 443:notoriOS.c    ****             char http_chunk[1001];
 444:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 445:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 446:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1183              		.loc 1 446 0
 1184 0244 4FF47A72 		mov	r2, #1000
 1185 0248 5F49     		ldr	r1, .L48+120
 1186 024a 6048     		ldr	r0, .L48+124
 1187 024c FFF7FEFF 		bl	at_write_command
 1188 0250 0346     		mov	r3, r0
 1189 0252 87F82D35 		strb	r3, [r7, #1325]
 447:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 448:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1190              		.loc 1 448 0
 1191 0256 07F1C800 		add	r0, r7, #200
 1192 025a D7F83435 		ldr	r3, [r7, #1332]
 1193 025e 544A     		ldr	r2, .L48+96
 1194 0260 4FF4FA71 		mov	r1, #500
 1195 0264 FFF7FEFF 		bl	snprintf
 449:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 450:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1196              		.loc 1 450 0
 1197 0268 07F1C803 		add	r3, r7, #200
 1198 026c 1846     		mov	r0, r3
 1199 026e FFF7FEFF 		bl	strlen
 1200 0272 0346     		mov	r3, r0
 1201 0274 1A46     		mov	r2, r3
 1202 0276 07F1C803 		add	r3, r7, #200
 1203 027a 1344     		add	r3, r3, r2
 1204 027c 5449     		ldr	r1, .L48+128
 1205 027e 1A46     		mov	r2, r3
 1206 0280 0B46     		mov	r3, r1
 1207 0282 1B88     		ldrh	r3, [r3]	@ unaligned
 1208 0284 1380     		strh	r3, [r2]	@ unaligned
 451:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1209              		.loc 1 451 0
 1210 0286 97F93325 		ldrsb	r2, [r7, #1331]
 1211 028a 07F1C803 		add	r3, r7, #200
 1212 028e 5149     		ldr	r1, .L48+132
 1213 0290 0020     		movs	r0, #0
 1214 0292 FFF7FEFF 		bl	printNotif
 452:notoriOS.c    ****             // Send data to server
 453:notoriOS.c    ****             if ((packet+1) != packets){
 1215              		.loc 1 453 0
 1216 0296 97F93335 		ldrsb	r3, [r7, #1331]
 1217 029a 5A1C     		adds	r2, r3, #1
 1218 029c 97F92C35 		ldrsb	r3, [r7, #1324]
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 32


 1219 02a0 9A42     		cmp	r2, r3
 1220 02a2 11D0     		beq	.L40
 454:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1221              		.loc 1 454 0
 1222 02a4 07F1C803 		add	r3, r7, #200
 1223 02a8 41F28832 		movw	r2, #5000
 1224 02ac 4149     		ldr	r1, .L48+100
 1225 02ae 1846     		mov	r0, r3
 1226 02b0 FFF7FEFF 		bl	at_write_command
 1227 02b4 0346     		mov	r3, r0
 1228 02b6 87F82D35 		strb	r3, [r7, #1325]
 455:notoriOS.c    ****                 // Move the pointer forward 
 456:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1229              		.loc 1 456 0
 1230 02ba D7F83435 		ldr	r3, [r7, #1332]
 1231 02be 03F2F313 		addw	r3, r3, #499
 1232 02c2 C7F83435 		str	r3, [r7, #1332]
 1233 02c6 0AE0     		b	.L41
 1234              	.L40:
 457:notoriOS.c    ****             }else{
 458:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
 1235              		.loc 1 458 0
 1236 02c8 07F1C803 		add	r3, r7, #200
 1237 02cc 41F28832 		movw	r2, #5000
 1238 02d0 4149     		ldr	r1, .L48+136
 1239 02d2 1846     		mov	r0, r3
 1240 02d4 FFF7FEFF 		bl	at_write_command
 1241 02d8 0346     		mov	r3, r0
 1242 02da 87F82D35 		strb	r3, [r7, #1325]
 1243              	.L41:
 1244              	.LBE6:
 441:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1245              		.loc 1 441 0 discriminator 2
 1246 02de 97F93335 		ldrsb	r3, [r7, #1331]
 1247 02e2 DBB2     		uxtb	r3, r3
 1248 02e4 0133     		adds	r3, r3, #1
 1249 02e6 DBB2     		uxtb	r3, r3
 1250 02e8 87F83335 		strb	r3, [r7, #1331]
 1251              	.L39:
 441:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1252              		.loc 1 441 0 is_stmt 0 discriminator 1
 1253 02ec 97F93325 		ldrsb	r2, [r7, #1331]
 1254 02f0 97F92C35 		ldrsb	r3, [r7, #1324]
 1255 02f4 9A42     		cmp	r2, r3
 1256 02f6 A5DB     		blt	.L42
 1257              	.LBE5:
 459:notoriOS.c    ****             }
 460:notoriOS.c    ****             
 461:notoriOS.c    ****         }
 462:notoriOS.c    ****         
 463:notoriOS.c    ****         // Read received buffer
 464:notoriOS.c    ****         // A good write will return code "OS-OK"
 465:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 466:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 467:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1258              		.loc 1 467 0 is_stmt 1
 1259 02f8 41F28832 		movw	r2, #5000
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 33


 1260 02fc 3749     		ldr	r1, .L48+140
 1261 02fe 3848     		ldr	r0, .L48+144
 1262 0300 FFF7FEFF 		bl	at_write_command
 1263 0304 0346     		mov	r3, r0
 1264 0306 87F82D35 		strb	r3, [r7, #1325]
 468:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 469:notoriOS.c    ****     
 470:notoriOS.c    ****   
 471:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 472:notoriOS.c    ****         if(status == 1u){
 1265              		.loc 1 472 0
 1266 030a 97F82D35 		ldrb	r3, [r7, #1325]	@ zero_extendqisi2
 1267 030e 012B     		cmp	r3, #1
 1268 0310 6CD1     		bne	.L43
 1269              	.LBB7:
 473:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1270              		.loc 1 473 0
 1271 0312 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 474:notoriOS.c    ****             Clear_Data_Stack();
 1272              		.loc 1 474 0
 1273 0316 FFF7FEFF 		bl	Clear_Data_Stack
 475:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1274              		.loc 1 475 0
 1275 031a FFF7FEFF 		bl	getTimeStamp
 1276 031e 0246     		mov	r2, r0
 1277 0320 304B     		ldr	r3, .L48+148
 1278 0322 1B68     		ldr	r3, [r3]
 1279 0324 D31A     		subs	r3, r2, r3
 1280 0326 C7F82835 		str	r3, [r7, #1320]
 476:notoriOS.c    ****             char s_send_time[10];
 477:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1281              		.loc 1 477 0
 1282 032a 07F2B440 		addw	r0, r7, #1204
 1283 032e D7F82835 		ldr	r3, [r7, #1320]
 1284 0332 0D4A     		ldr	r2, .L48+24
 1285 0334 0A21     		movs	r1, #10
 1286 0336 FFF7FEFF 		bl	snprintf
 478:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1287              		.loc 1 478 0
 1288 033a FFF7FEFF 		bl	getTimeStamp
 1289 033e 0246     		mov	r2, r0
 1290 0340 07F2B443 		addw	r3, r7, #1204
 1291 0344 1946     		mov	r1, r3
 1292 0346 2848     		ldr	r0, .L48+152
 1293 0348 FFF7FEFF 		bl	pushData
 1294              	.LBE7:
 1295 034c 52E0     		b	.L44
 1296              	.L49:
 1297 034e 00BF     		.align	2
 1298              	.L48:
 1299 0350 00000000 		.word	try_counter
 1300 0354 C0000000 		.word	.LC7
 1301 0358 00000000 		.word	http_request
 1302 035c 00000000 		.word	http_body
 1303 0360 00000000 		.word	http_route
 1304 0364 00000000 		.word	modem_stats
 1305 0368 3C000000 		.word	.LC2
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 34


 1306 036c D0000000 		.word	.LC8
 1307 0370 D8000000 		.word	.LC9
 1308 0374 00000000 		.word	buffer_overflow
 1309 0378 E4000000 		.word	.LC10
 1310 037c F4000000 		.word	.LC11
 1311 0380 08010000 		.word	.LC12
 1312 0384 1C010000 		.word	.LC13
 1313 0388 28000000 		.word	modem_info+40
 1314 038c 48010000 		.word	.LC14
 1315 0390 58010000 		.word	.LC15
 1316 0394 00000000 		.word	system_settings
 1317 0398 68010000 		.word	.LC16
 1318 039c 6C010000 		.word	.LC17
 1319 03a0 70010000 		.word	.LC18
 1320 03a4 78010000 		.word	.LC19
 1321 03a8 80010000 		.word	.LC20
 1322 03ac 98010000 		.word	.LC21
 1323 03b0 B4010000 		.word	.LC22
 1324 03b4 B8010000 		.word	.LC23
 1325 03b8 D34D6210 		.word	274877907
 1326 03bc 00407F40 		.word	1082081280
 1327 03c0 BC010000 		.word	.LC24
 1328 03c4 D4010000 		.word	.LC25
 1329 03c8 E8010000 		.word	.LC26
 1330 03cc EC010000 		.word	.LC27
 1331 03d0 FC010000 		.word	.LC28
 1332 03d4 00020000 		.word	.LC29
 1333 03d8 10020000 		.word	.LC30
 1334 03dc 18020000 		.word	.LC31
 1335 03e0 20020000 		.word	.LC32
 1336 03e4 00000000 		.word	modem_start_time_stamp
 1337 03e8 34020000 		.word	.LC33
 1338              	.L43:
 479:notoriOS.c    ****         }else{
 480:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1339              		.loc 1 480 0
 1340 03ec 1549     		ldr	r1, .L50
 1341 03ee 0220     		movs	r0, #2
 1342 03f0 FFF7FEFF 		bl	printNotif
 1343              	.L44:
 481:notoriOS.c    ****         }
 482:notoriOS.c    ****         
 483:notoriOS.c    ****         if(modem_get_gps_coordinates()) {
 1344              		.loc 1 483 0
 1345 03f4 FFF7FEFF 		bl	modem_get_gps_coordinates
 1346 03f8 0346     		mov	r3, r0
 1347 03fa 002B     		cmp	r3, #0
 1348 03fc 04D0     		beq	.L45
 484:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT, "Collected GPS data");
 1349              		.loc 1 484 0
 1350 03fe 1249     		ldr	r1, .L50+4
 1351 0400 0020     		movs	r0, #0
 1352 0402 FFF7FEFF 		bl	printNotif
 1353 0406 03E0     		b	.L46
 1354              	.L45:
 485:notoriOS.c    ****         }else{
 486:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "Failed GPS data collection (Modem not ready)");
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 35


 1355              		.loc 1 486 0
 1356 0408 1049     		ldr	r1, .L50+8
 1357 040a 0220     		movs	r0, #2
 1358 040c FFF7FEFF 		bl	printNotif
 1359              	.L46:
 487:notoriOS.c    ****         }
 488:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 489:notoriOS.c    ****         long network_time = modem_get_network_time();
 1360              		.loc 1 489 0
 1361 0410 FFF7FEFF 		bl	modem_get_network_time
 1362 0414 C7F82405 		str	r0, [r7, #1316]
 490:notoriOS.c    ****         if(network_time != 0){
 1363              		.loc 1 490 0
 1364 0418 D7F82435 		ldr	r3, [r7, #1316]
 1365 041c 002B     		cmp	r3, #0
 1366 041e 03D0     		beq	.L47
 491:notoriOS.c    ****            setTime(network_time);
 1367              		.loc 1 491 0
 1368 0420 D7F82405 		ldr	r0, [r7, #1316]
 1369 0424 FFF7FEFF 		bl	setTime
 1370              	.L47:
 492:notoriOS.c    ****         }
 493:notoriOS.c    ****         
 494:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 495:notoriOS.c    ****         // If not -- keep the statck and try next time
 496:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 497:notoriOS.c    ****         modem_power_down();
 1371              		.loc 1 497 0
 1372 0428 FFF7FEFF 		bl	modem_power_down
 498:notoriOS.c    ****         
 499:notoriOS.c    ****         try_counter = 0u;
 1373              		.loc 1 499 0
 1374 042c 084B     		ldr	r3, .L50+12
 1375 042e 0022     		movs	r2, #0
 1376 0430 1A70     		strb	r2, [r3]
 500:notoriOS.c    ****         return 0u;
 1377              		.loc 1 500 0
 1378 0432 0023     		movs	r3, #0
 1379 0434 00E0     		b	.L33
 1380              	.L36:
 1381              	.LBE2:
 501:notoriOS.c    ****     }
 502:notoriOS.c    ****       
 503:notoriOS.c    ****       return 1u; // Not done yet
 1382              		.loc 1 503 0
 1383 0436 0123     		movs	r3, #1
 1384              	.L33:
 504:notoriOS.c    **** }
 1385              		.loc 1 504 0 discriminator 1
 1386 0438 1846     		mov	r0, r3
 1387 043a 07F23C57 		addw	r7, r7, #1340
 1388              		.cfi_def_cfa_offset 12
 1389 043e BD46     		mov	sp, r7
 1390              		.cfi_def_cfa_register 13
 1391              		@ sp needed
 1392 0440 90BD     		pop	{r4, r7, pc}
 1393              	.L51:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 36


 1394 0442 00BF     		.align	2
 1395              	.L50:
 1396 0444 44020000 		.word	.LC34
 1397 0448 70020000 		.word	.LC35
 1398 044c 84020000 		.word	.LC36
 1399 0450 00000000 		.word	try_counter
 1400              		.cfi_endproc
 1401              	.LFE74:
 1402              		.size	syncData, .-syncData
 1403              		.section	.text.configureRemoteParams,"ax",%progbits
 1404              		.align	2
 1405              		.global	configureRemoteParams
 1406              		.thumb
 1407              		.thumb_func
 1408              		.type	configureRemoteParams, %function
 1409              	configureRemoteParams:
 1410              	.LFB75:
 505:notoriOS.c    **** 
 506:notoriOS.c    **** // ==============================================
 507:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 508:notoriOS.c    **** // Returns 0 when done
 509:notoriOS.c    **** // ==============================================
 510:notoriOS.c    **** uint8 configureRemoteParams(){
 1411              		.loc 1 510 0
 1412              		.cfi_startproc
 1413              		@ args = 0, pretend = 0, frame = 8
 1414              		@ frame_needed = 1, uses_anonymous_args = 0
 1415 0000 80B5     		push	{r7, lr}
 1416              		.cfi_def_cfa_offset 8
 1417              		.cfi_offset 7, -8
 1418              		.cfi_offset 14, -4
 1419 0002 82B0     		sub	sp, sp, #8
 1420              		.cfi_def_cfa_offset 16
 1421 0004 00AF     		add	r7, sp, #0
 1422              		.cfi_def_cfa_register 7
 511:notoriOS.c    ****     
 512:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1423              		.loc 1 512 0
 1424 0006 FFF7FEFF 		bl	modem_get_state
 1425 000a 0346     		mov	r3, r0
 1426 000c 002B     		cmp	r3, #0
 1427 000e 02D1     		bne	.L53
 513:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 514:notoriOS.c    ****         modem_power_up();
 1428              		.loc 1 514 0
 1429 0010 FFF7FEFF 		bl	modem_power_up
 1430 0014 11E0     		b	.L54
 1431              	.L53:
 515:notoriOS.c    ****             
 516:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1432              		.loc 1 516 0
 1433 0016 FFF7FEFF 		bl	modem_get_state
 1434 001a 0346     		mov	r3, r0
 1435 001c 042B     		cmp	r3, #4
 1436 001e 0CD1     		bne	.L54
 1437              	.LBB8:
 517:notoriOS.c    ****         
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 37


 518:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 519:notoriOS.c    ****         
 520:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 521:notoriOS.c    ****         long network_time = modem_get_network_time();
 1438              		.loc 1 521 0
 1439 0020 FFF7FEFF 		bl	modem_get_network_time
 1440 0024 7860     		str	r0, [r7, #4]
 522:notoriOS.c    ****         if(network_time != 0){
 1441              		.loc 1 522 0
 1442 0026 7B68     		ldr	r3, [r7, #4]
 1443 0028 002B     		cmp	r3, #0
 1444 002a 02D0     		beq	.L55
 523:notoriOS.c    ****             setTime(network_time);
 1445              		.loc 1 523 0
 1446 002c 7868     		ldr	r0, [r7, #4]
 1447 002e FFF7FEFF 		bl	setTime
 1448              	.L55:
 524:notoriOS.c    ****         }
 525:notoriOS.c    ****         
 526:notoriOS.c    ****         // Get GPS coordinates
 527:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 528:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 529:notoriOS.c    ****         modem_power_down();
 1449              		.loc 1 529 0
 1450 0032 FFF7FEFF 		bl	modem_power_down
 530:notoriOS.c    ****         return 0u;
 1451              		.loc 1 530 0
 1452 0036 0023     		movs	r3, #0
 1453 0038 00E0     		b	.L56
 1454              	.L54:
 1455              	.LBE8:
 531:notoriOS.c    ****         
 532:notoriOS.c    ****     }
 533:notoriOS.c    ****     
 534:notoriOS.c    ****     return 1u;
 1456              		.loc 1 534 0
 1457 003a 0123     		movs	r3, #1
 1458              	.L56:
 535:notoriOS.c    **** }
 1459              		.loc 1 535 0
 1460 003c 1846     		mov	r0, r3
 1461 003e 0837     		adds	r7, r7, #8
 1462              		.cfi_def_cfa_offset 8
 1463 0040 BD46     		mov	sp, r7
 1464              		.cfi_def_cfa_register 13
 1465              		@ sp needed
 1466 0042 80BD     		pop	{r7, pc}
 1467              		.cfi_endproc
 1468              	.LFE75:
 1469              		.size	configureRemoteParams, .-configureRemoteParams
 1470              		.section	.rodata
 1471 02b1 000000   		.align	2
 1472              	.LC37:
 1473 02b4 256C6400 		.ascii	"%ld\000"
 1474              		.align	2
 1475              	.LC38:
 1476 02b8 6D617862 		.ascii	"maxbotix_depth=%s\000"
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 38


 1476      6F746978 
 1476      5F646570 
 1476      74683D25 
 1476      7300
 1477 02ca 0000     		.align	2
 1478              	.LC39:
 1479 02cc 6D617862 		.ascii	"maxbotix_depth\000"
 1479      6F746978 
 1479      5F646570 
 1479      746800
 1480 02db 00       		.align	2
 1481              	.LC40:
 1482 02dc 612B00   		.ascii	"a+\000"
 1483 02df 00       		.align	2
 1484              	.LC41:
 1485 02e0 206D6178 		.ascii	" maxbotix_depth: \000"
 1485      626F7469 
 1485      785F6465 
 1485      7074683A 
 1485      2000
 1486 02f2 0000     		.align	2
 1487              	.LC42:
 1488 02f4 2000     		.ascii	" \000"
 1489 02f6 0000     		.align	2
 1490              	.LC43:
 1491 02f8 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 1491      64206E6F 
 1491      74206765 
 1491      74207661 
 1491      6C696420 
 1492              		.global	__aeabi_f2d
 1493              		.align	2
 1494              	.LC44:
 1495 0324 252E3266 		.ascii	"%.2f\000"
 1495      00
 1496 0329 000000   		.align	2
 1497              	.LC45:
 1498 032c 765F6261 		.ascii	"v_bat=%s\000"
 1498      743D2573 
 1498      00
 1499 0335 000000   		.align	2
 1500              	.LC46:
 1501 0338 765F6261 		.ascii	"v_bat\000"
 1501      7400
 1502 033e 0000     		.align	2
 1503              	.LC47:
 1504 0340 20766261 		.ascii	" vbat: \000"
 1504      743A2000 
 1505              		.align	2
 1506              	.LC48:
 1507 0348 70726573 		.ascii	"pressure_current=%s\000"
 1507      73757265 
 1507      5F637572 
 1507      72656E74 
 1507      3D257300 
 1508              		.align	2
 1509              	.LC49:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 39


 1510 035c 70726573 		.ascii	"pressure_current\000"
 1510      73757265 
 1510      5F637572 
 1510      72656E74 
 1510      00
 1511 036d 000000   		.align	2
 1512              	.LC50:
 1513 0370 20707265 		.ascii	" pressure_current: \000"
 1513      73737572 
 1513      655F6375 
 1513      7272656E 
 1513      743A2000 
 1514              		.align	2
 1515              	.LC51:
 1516 0384 70726573 		.ascii	"pressure_depth=%s\000"
 1516      73757265 
 1516      5F646570 
 1516      74683D25 
 1516      7300
 1517 0396 0000     		.align	2
 1518              	.LC52:
 1519 0398 70726573 		.ascii	"pressure_depth\000"
 1519      73757265 
 1519      5F646570 
 1519      746800
 1520 03a7 00       		.align	2
 1521              	.LC53:
 1522 03a8 20707265 		.ascii	" pressure_depth: \000"
 1522      73737572 
 1522      655F6465 
 1522      7074683A 
 1522      2000
 1523 03ba 0000     		.align	2
 1524              	.LC54:
 1525 03bc 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1525      64206E6F 
 1525      74206765 
 1525      74207661 
 1525      6C696420 
 1526 03e3 00       		.align	2
 1527              	.LC55:
 1528 03e4 256600   		.ascii	"%f\000"
 1529 03e7 00       		.align	2
 1530              	.LC56:
 1531 03e8 6C617469 		.ascii	"latitude=%s\000"
 1531      74756465 
 1531      3D257300 
 1532              		.align	2
 1533              	.LC57:
 1534 03f4 6C617469 		.ascii	"latitude\000"
 1534      74756465 
 1534      00
 1535 03fd 000000   		.align	2
 1536              	.LC58:
 1537 0400 47505320 		.ascii	"GPS Latitude: \000"
 1537      4C617469 
 1537      74756465 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 40


 1537      3A2000
 1538 040f 00       		.align	2
 1539              	.LC59:
 1540 0410 6C6F6E67 		.ascii	"longitude=%s\000"
 1540      69747564 
 1540      653D2573 
 1540      00
 1541 041d 000000   		.align	2
 1542              	.LC60:
 1543 0420 6C6F6E67 		.ascii	"longitude\000"
 1543      69747564 
 1543      6500
 1544 042a 0000     		.align	2
 1545              	.LC61:
 1546 042c 47505320 		.ascii	"GPS Longitude: \000"
 1546      4C6F6E67 
 1546      69747564 
 1546      653A2000 
 1547              		.align	2
 1548              	.LC62:
 1549 043c 436F756C 		.ascii	"Could not get valid readings from GPS sensor.\000"
 1549      64206E6F 
 1549      74206765 
 1549      74207661 
 1549      6C696420 
 1550              		.section	.text.makeMeasurements,"ax",%progbits
 1551              		.align	2
 1552              		.global	makeMeasurements
 1553              		.thumb
 1554              		.thumb_func
 1555              		.type	makeMeasurements, %function
 1556              	makeMeasurements:
 1557              	.LFB76:
 536:notoriOS.c    **** 
 537:notoriOS.c    **** 
 538:notoriOS.c    **** // ==============================================
 539:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 540:notoriOS.c    **** // Returns 0 when finished
 541:notoriOS.c    **** // ==============================================
 542:notoriOS.c    **** uint8 makeMeasurements(){
 1558              		.loc 1 542 0
 1559              		.cfi_startproc
 1560              		@ args = 0, pretend = 0, frame = 120
 1561              		@ frame_needed = 1, uses_anonymous_args = 0
 1562 0000 90B5     		push	{r4, r7, lr}
 1563              		.cfi_def_cfa_offset 12
 1564              		.cfi_offset 4, -12
 1565              		.cfi_offset 7, -8
 1566              		.cfi_offset 14, -4
 1567 0002 A1B0     		sub	sp, sp, #132
 1568              		.cfi_def_cfa_offset 144
 1569 0004 02AF     		add	r7, sp, #8
 1570              		.cfi_def_cfa 7, 136
 543:notoriOS.c    ****     
 544:notoriOS.c    ****     // Get clock time and save to timeStamp
 545:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1571              		.loc 1 545 0
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 41


 1572 0006 FFF7FEFF 		bl	getTimeStamp
 1573 000a 7867     		str	r0, [r7, #116]
 546:notoriOS.c    ****     char c_timeStamp[32];
 547:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1574              		.loc 1 547 0
 1575 000c 07F15400 		add	r0, r7, #84
 1576 0010 7B6F     		ldr	r3, [r7, #116]
 1577 0012 BC4A     		ldr	r2, .L67
 1578 0014 2021     		movs	r1, #32
 1579 0016 FFF7FEFF 		bl	snprintf
 548:notoriOS.c    ****     
 549:notoriOS.c    ****     // Holds string for value that will be written 
 550:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 551:notoriOS.c    ****     
 552:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 553:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 1580              		.loc 1 553 0
 1581 001a BB4B     		ldr	r3, .L67+4
 1582 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1583 001e 002B     		cmp	r3, #0
 1584 0020 3BD1     		bne	.L58
 1585              	.LBB9:
 554:notoriOS.c    ****         
 555:notoriOS.c    ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
 556:notoriOS.c    ****         level_sensor_t m_level_sensor;
 557:notoriOS.c    ****         
 558:notoriOS.c    ****         // Take level sensor readings and save them to m_level_sensor
 559:notoriOS.c    ****         m_level_sensor = level_sensor_take_reading();
 1586              		.loc 1 559 0
 1587 0022 07F11003 		add	r3, r7, #16
 1588 0026 1846     		mov	r0, r3
 1589 0028 FFF7FEFF 		bl	level_sensor_take_reading
 560:notoriOS.c    ****     
 561:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 562:notoriOS.c    ****         if(m_level_sensor.num_valid_readings > 0){
 1590              		.loc 1 562 0
 1591 002c 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1592 0030 002B     		cmp	r3, #0
 1593 0032 2ED0     		beq	.L59
 563:notoriOS.c    ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 1594              		.loc 1 563 0
 1595 0034 B7F92630 		ldrsh	r3, [r7, #38]
 1596 0038 07F14000 		add	r0, r7, #64
 1597 003c B34A     		ldr	r2, .L67+8
 1598 003e 1421     		movs	r1, #20
 1599 0040 FFF7FEFF 		bl	snprintf
 564:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 1600              		.loc 1 564 0
 1601 0044 07F14003 		add	r3, r7, #64
 1602 0048 1A46     		mov	r2, r3
 1603 004a B149     		ldr	r1, .L67+12
 1604 004c 0020     		movs	r0, #0
 1605 004e FFF7FEFF 		bl	printNotif
 565:notoriOS.c    ****             pushData("maxbotix_depth",value,timeStamp);
 1606              		.loc 1 565 0
 1607 0052 07F14003 		add	r3, r7, #64
 1608 0056 7A6F     		ldr	r2, [r7, #116]
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 42


 1609 0058 1946     		mov	r1, r3
 1610 005a AE48     		ldr	r0, .L67+16
 1611 005c FFF7FEFF 		bl	pushData
 566:notoriOS.c    ****             
 567:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 568:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1612              		.loc 1 568 0
 1613 0060 07F15403 		add	r3, r7, #84
 1614 0064 1A46     		mov	r2, r3
 1615 0066 AC49     		ldr	r1, .L67+20
 1616 0068 AC48     		ldr	r0, .L67+24
 1617 006a FFF7FEFF 		bl	SD_write
 569:notoriOS.c    ****             SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 1618              		.loc 1 569 0
 1619 006e AC4A     		ldr	r2, .L67+28
 1620 0070 A949     		ldr	r1, .L67+20
 1621 0072 AA48     		ldr	r0, .L67+24
 1622 0074 FFF7FEFF 		bl	SD_write
 570:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1623              		.loc 1 570 0
 1624 0078 07F14003 		add	r3, r7, #64
 1625 007c 1A46     		mov	r2, r3
 1626 007e A649     		ldr	r1, .L67+20
 1627 0080 A648     		ldr	r0, .L67+24
 1628 0082 FFF7FEFF 		bl	SD_write
 571:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1629              		.loc 1 571 0
 1630 0086 A74A     		ldr	r2, .L67+32
 1631 0088 A349     		ldr	r1, .L67+20
 1632 008a A448     		ldr	r0, .L67+24
 1633 008c FFF7FEFF 		bl	SD_write
 1634 0090 03E0     		b	.L58
 1635              	.L59:
 572:notoriOS.c    ****         }else{
 573:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 1636              		.loc 1 573 0
 1637 0092 A549     		ldr	r1, .L67+36
 1638 0094 0220     		movs	r0, #2
 1639 0096 FFF7FEFF 		bl	printNotif
 1640              	.L58:
 1641              	.LBE9:
 574:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 575:notoriOS.c    ****         }
 576:notoriOS.c    ****     }
 577:notoriOS.c    ****     
 578:notoriOS.c    ****     
 579:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 580:notoriOS.c    ****     voltage_t m_voltage;
 581:notoriOS.c    ****     
 582:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 583:notoriOS.c    ****     m_voltage = voltage_take_readings();
 1642              		.loc 1 583 0
 1643 009a 07F12C03 		add	r3, r7, #44
 1644 009e 1846     		mov	r0, r3
 1645 00a0 FFF7FEFF 		bl	voltage_take_readings
 584:notoriOS.c    ****     
 585:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 43


 586:notoriOS.c    ****     if(m_voltage.valid){
 1646              		.loc 1 586 0
 1647 00a4 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 1648 00a8 002B     		cmp	r3, #0
 1649 00aa 00F0AF80 		beq	.L61
 587:notoriOS.c    ****         // battery voltage data
 588:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 1650              		.loc 1 588 0
 1651 00ae FB6A     		ldr	r3, [r7, #44]	@ float
 1652 00b0 1846     		mov	r0, r3
 1653 00b2 FFF7FEFF 		bl	__aeabi_f2d
 1654 00b6 0346     		mov	r3, r0
 1655 00b8 0C46     		mov	r4, r1
 1656 00ba 07F14000 		add	r0, r7, #64
 1657 00be CDE90034 		strd	r3, [sp]
 1658 00c2 9A4A     		ldr	r2, .L67+40
 1659 00c4 1421     		movs	r1, #20
 1660 00c6 FFF7FEFF 		bl	snprintf
 589:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 1661              		.loc 1 589 0
 1662 00ca 07F14003 		add	r3, r7, #64
 1663 00ce 1A46     		mov	r2, r3
 1664 00d0 9749     		ldr	r1, .L67+44
 1665 00d2 0020     		movs	r0, #0
 1666 00d4 FFF7FEFF 		bl	printNotif
 590:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
 1667              		.loc 1 590 0
 1668 00d8 07F14003 		add	r3, r7, #64
 1669 00dc 7A6F     		ldr	r2, [r7, #116]
 1670 00de 1946     		mov	r1, r3
 1671 00e0 9448     		ldr	r0, .L67+48
 1672 00e2 FFF7FEFF 		bl	pushData
 591:notoriOS.c    ****         
 592:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 593:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 1673              		.loc 1 593 0
 1674 00e6 8F4A     		ldr	r2, .L67+32
 1675 00e8 8B49     		ldr	r1, .L67+20
 1676 00ea 8C48     		ldr	r0, .L67+24
 1677 00ec FFF7FEFF 		bl	SD_write
 594:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 1678              		.loc 1 594 0
 1679 00f0 07F15403 		add	r3, r7, #84
 1680 00f4 1A46     		mov	r2, r3
 1681 00f6 8849     		ldr	r1, .L67+20
 1682 00f8 8848     		ldr	r0, .L67+24
 1683 00fa FFF7FEFF 		bl	SD_write
 595:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 1684              		.loc 1 595 0
 1685 00fe 8E4A     		ldr	r2, .L67+52
 1686 0100 8549     		ldr	r1, .L67+20
 1687 0102 8648     		ldr	r0, .L67+24
 1688 0104 FFF7FEFF 		bl	SD_write
 596:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1689              		.loc 1 596 0
 1690 0108 07F14003 		add	r3, r7, #64
 1691 010c 1A46     		mov	r2, r3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 44


 1692 010e 8249     		ldr	r1, .L67+20
 1693 0110 8248     		ldr	r0, .L67+24
 1694 0112 FFF7FEFF 		bl	SD_write
 597:notoriOS.c    ****         
 598:notoriOS.c    ****         // If node type is green infrastructure node, take pressure transducer measurements
 599:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE){
 1695              		.loc 1 599 0
 1696 0116 7C4B     		ldr	r3, .L67+4
 1697 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1698 011a 012B     		cmp	r3, #1
 1699 011c 7AD1     		bne	.L63
 1700              	.LBB10:
 600:notoriOS.c    ****             
 601:notoriOS.c    ****             // pressure transducer voltage (V) data
 602:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 603:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 604:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 605:notoriOS.c    ****             
 606:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 607:notoriOS.c    ****             pressure_t m_pressure;
 608:notoriOS.c    ****             
 609:notoriOS.c    ****             // Make pressure transducer calculators for current and depth
 610:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 1701              		.loc 1 610 0
 1702 011e 3C46     		mov	r4, r7
 1703 0120 6A46     		mov	r2, sp
 1704 0122 07F13803 		add	r3, r7, #56
 1705 0126 93E80300 		ldmia	r3, {r0, r1}
 1706 012a 82E80300 		stmia	r2, {r0, r1}
 1707 012e 07F12C03 		add	r3, r7, #44
 1708 0132 0ECB     		ldmia	r3, {r1, r2, r3}
 1709 0134 2046     		mov	r0, r4
 1710 0136 FFF7FEFF 		bl	pressure_calculations
 611:notoriOS.c    ****             
 612:notoriOS.c    ****             // pressure transducer current (mA) data
 613:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 1711              		.loc 1 613 0
 1712 013a BB68     		ldr	r3, [r7, #8]	@ float
 1713 013c 1846     		mov	r0, r3
 1714 013e FFF7FEFF 		bl	__aeabi_f2d
 1715 0142 0346     		mov	r3, r0
 1716 0144 0C46     		mov	r4, r1
 1717 0146 07F14000 		add	r0, r7, #64
 1718 014a CDE90034 		strd	r3, [sp]
 1719 014e 774A     		ldr	r2, .L67+40
 1720 0150 1421     		movs	r1, #20
 1721 0152 FFF7FEFF 		bl	snprintf
 614:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 1722              		.loc 1 614 0
 1723 0156 07F14003 		add	r3, r7, #64
 1724 015a 1A46     		mov	r2, r3
 1725 015c 7749     		ldr	r1, .L67+56
 1726 015e 0020     		movs	r0, #0
 1727 0160 FFF7FEFF 		bl	printNotif
 615:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 1728              		.loc 1 615 0
 1729 0164 07F14003 		add	r3, r7, #64
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 45


 1730 0168 7A6F     		ldr	r2, [r7, #116]
 1731 016a 1946     		mov	r1, r3
 1732 016c 7448     		ldr	r0, .L67+60
 1733 016e FFF7FEFF 		bl	pushData
 616:notoriOS.c    ****             
 617:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 618:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1734              		.loc 1 618 0
 1735 0172 6C4A     		ldr	r2, .L67+32
 1736 0174 6849     		ldr	r1, .L67+20
 1737 0176 6948     		ldr	r0, .L67+24
 1738 0178 FFF7FEFF 		bl	SD_write
 619:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1739              		.loc 1 619 0
 1740 017c 07F15403 		add	r3, r7, #84
 1741 0180 1A46     		mov	r2, r3
 1742 0182 6549     		ldr	r1, .L67+20
 1743 0184 6548     		ldr	r0, .L67+24
 1744 0186 FFF7FEFF 		bl	SD_write
 620:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 1745              		.loc 1 620 0
 1746 018a 6E4A     		ldr	r2, .L67+64
 1747 018c 6249     		ldr	r1, .L67+20
 1748 018e 6348     		ldr	r0, .L67+24
 1749 0190 FFF7FEFF 		bl	SD_write
 621:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1750              		.loc 1 621 0
 1751 0194 07F14003 		add	r3, r7, #64
 1752 0198 1A46     		mov	r2, r3
 1753 019a 5F49     		ldr	r1, .L67+20
 1754 019c 5F48     		ldr	r0, .L67+24
 1755 019e FFF7FEFF 		bl	SD_write
 622:notoriOS.c    ****             
 623:notoriOS.c    ****             // pressure transducer depth (ft) data
 624:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 1756              		.loc 1 624 0
 1757 01a2 FB68     		ldr	r3, [r7, #12]	@ float
 1758 01a4 1846     		mov	r0, r3
 1759 01a6 FFF7FEFF 		bl	__aeabi_f2d
 1760 01aa 0346     		mov	r3, r0
 1761 01ac 0C46     		mov	r4, r1
 1762 01ae 07F14000 		add	r0, r7, #64
 1763 01b2 CDE90034 		strd	r3, [sp]
 1764 01b6 5D4A     		ldr	r2, .L67+40
 1765 01b8 1421     		movs	r1, #20
 1766 01ba FFF7FEFF 		bl	snprintf
 625:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 1767              		.loc 1 625 0
 1768 01be 07F14003 		add	r3, r7, #64
 1769 01c2 1A46     		mov	r2, r3
 1770 01c4 6049     		ldr	r1, .L67+68
 1771 01c6 0020     		movs	r0, #0
 1772 01c8 FFF7FEFF 		bl	printNotif
 626:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 1773              		.loc 1 626 0
 1774 01cc 07F14003 		add	r3, r7, #64
 1775 01d0 7A6F     		ldr	r2, [r7, #116]
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 46


 1776 01d2 1946     		mov	r1, r3
 1777 01d4 5D48     		ldr	r0, .L67+72
 1778 01d6 FFF7FEFF 		bl	pushData
 627:notoriOS.c    ****             
 628:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 629:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1779              		.loc 1 629 0
 1780 01da 524A     		ldr	r2, .L67+32
 1781 01dc 4E49     		ldr	r1, .L67+20
 1782 01de 4F48     		ldr	r0, .L67+24
 1783 01e0 FFF7FEFF 		bl	SD_write
 630:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1784              		.loc 1 630 0
 1785 01e4 07F15403 		add	r3, r7, #84
 1786 01e8 1A46     		mov	r2, r3
 1787 01ea 4B49     		ldr	r1, .L67+20
 1788 01ec 4B48     		ldr	r0, .L67+24
 1789 01ee FFF7FEFF 		bl	SD_write
 631:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
 1790              		.loc 1 631 0
 1791 01f2 574A     		ldr	r2, .L67+76
 1792 01f4 4849     		ldr	r1, .L67+20
 1793 01f6 4948     		ldr	r0, .L67+24
 1794 01f8 FFF7FEFF 		bl	SD_write
 632:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1795              		.loc 1 632 0
 1796 01fc 07F14003 		add	r3, r7, #64
 1797 0200 1A46     		mov	r2, r3
 1798 0202 4549     		ldr	r1, .L67+20
 1799 0204 4548     		ldr	r0, .L67+24
 1800 0206 FFF7FEFF 		bl	SD_write
 1801 020a 03E0     		b	.L63
 1802              	.L61:
 1803              	.LBE10:
 633:notoriOS.c    ****         }    
 634:notoriOS.c    ****     }else{
 635:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 1804              		.loc 1 635 0
 1805 020c 5149     		ldr	r1, .L67+80
 1806 020e 0220     		movs	r0, #2
 1807 0210 FFF7FEFF 		bl	printNotif
 1808              	.L63:
 636:notoriOS.c    ****     }
 637:notoriOS.c    ****     
 638:notoriOS.c    ****     if(updatable_parameters.gps == 1){
 1809              		.loc 1 638 0
 1810 0214 3C4B     		ldr	r3, .L67+4
 1811 0216 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1812 0218 012B     		cmp	r3, #1
 1813 021a 6AD1     		bne	.L64
 639:notoriOS.c    ****     
 640:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 641:notoriOS.c    ****         //if(gps_read.valid == 1){
 642:notoriOS.c    ****             snprintf(value,sizeof(value),"%f", gps_data.latitude);
 1814              		.loc 1 642 0
 1815 021c 4E4B     		ldr	r3, .L67+84
 1816 021e 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 47


 1817 0220 1846     		mov	r0, r3
 1818 0222 FFF7FEFF 		bl	__aeabi_f2d
 1819 0226 0346     		mov	r3, r0
 1820 0228 0C46     		mov	r4, r1
 1821 022a 07F14000 		add	r0, r7, #64
 1822 022e CDE90034 		strd	r3, [sp]
 1823 0232 4A4A     		ldr	r2, .L67+88
 1824 0234 1421     		movs	r1, #20
 1825 0236 FFF7FEFF 		bl	snprintf
 643:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"latitude=%s",value);
 1826              		.loc 1 643 0
 1827 023a 07F14003 		add	r3, r7, #64
 1828 023e 1A46     		mov	r2, r3
 1829 0240 4749     		ldr	r1, .L67+92
 1830 0242 0020     		movs	r0, #0
 1831 0244 FFF7FEFF 		bl	printNotif
 644:notoriOS.c    ****             pushData("latitude",value,timeStamp);
 1832              		.loc 1 644 0
 1833 0248 07F14003 		add	r3, r7, #64
 1834 024c 7A6F     		ldr	r2, [r7, #116]
 1835 024e 1946     		mov	r1, r3
 1836 0250 4448     		ldr	r0, .L67+96
 1837 0252 FFF7FEFF 		bl	pushData
 645:notoriOS.c    ****             
 646:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 647:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1838              		.loc 1 647 0
 1839 0256 07F15403 		add	r3, r7, #84
 1840 025a 1A46     		mov	r2, r3
 1841 025c 2E49     		ldr	r1, .L67+20
 1842 025e 2F48     		ldr	r0, .L67+24
 1843 0260 FFF7FEFF 		bl	SD_write
 648:notoriOS.c    ****             SD_write(Data_fileName, "a+", "GPS Latitude: ");
 1844              		.loc 1 648 0
 1845 0264 404A     		ldr	r2, .L67+100
 1846 0266 2C49     		ldr	r1, .L67+20
 1847 0268 2C48     		ldr	r0, .L67+24
 1848 026a FFF7FEFF 		bl	SD_write
 649:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1849              		.loc 1 649 0
 1850 026e 07F14003 		add	r3, r7, #64
 1851 0272 1A46     		mov	r2, r3
 1852 0274 2849     		ldr	r1, .L67+20
 1853 0276 2948     		ldr	r0, .L67+24
 1854 0278 FFF7FEFF 		bl	SD_write
 650:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1855              		.loc 1 650 0
 1856 027c 294A     		ldr	r2, .L67+32
 1857 027e 2649     		ldr	r1, .L67+20
 1858 0280 2648     		ldr	r0, .L67+24
 1859 0282 FFF7FEFF 		bl	SD_write
 651:notoriOS.c    ****             
 652:notoriOS.c    ****             snprintf(value,sizeof(value),"%f", gps_data.longitude);
 1860              		.loc 1 652 0
 1861 0286 344B     		ldr	r3, .L67+84
 1862 0288 5B68     		ldr	r3, [r3, #4]	@ float
 1863 028a 1846     		mov	r0, r3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 48


 1864 028c FFF7FEFF 		bl	__aeabi_f2d
 1865 0290 0346     		mov	r3, r0
 1866 0292 0C46     		mov	r4, r1
 1867 0294 07F14000 		add	r0, r7, #64
 1868 0298 CDE90034 		strd	r3, [sp]
 1869 029c 2F4A     		ldr	r2, .L67+88
 1870 029e 1421     		movs	r1, #20
 1871 02a0 FFF7FEFF 		bl	snprintf
 653:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"longitude=%s",value);
 1872              		.loc 1 653 0
 1873 02a4 07F14003 		add	r3, r7, #64
 1874 02a8 1A46     		mov	r2, r3
 1875 02aa 3049     		ldr	r1, .L67+104
 1876 02ac 0020     		movs	r0, #0
 1877 02ae FFF7FEFF 		bl	printNotif
 654:notoriOS.c    ****             pushData("longitude",value,timeStamp);
 1878              		.loc 1 654 0
 1879 02b2 07F14003 		add	r3, r7, #64
 1880 02b6 7A6F     		ldr	r2, [r7, #116]
 1881 02b8 1946     		mov	r1, r3
 1882 02ba 2D48     		ldr	r0, .L67+108
 1883 02bc FFF7FEFF 		bl	pushData
 655:notoriOS.c    ****             
 656:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 657:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1884              		.loc 1 657 0
 1885 02c0 07F15403 		add	r3, r7, #84
 1886 02c4 1A46     		mov	r2, r3
 1887 02c6 1449     		ldr	r1, .L67+20
 1888 02c8 1448     		ldr	r0, .L67+24
 1889 02ca FFF7FEFF 		bl	SD_write
 658:notoriOS.c    ****             SD_write(Data_fileName, "a+", "GPS Longitude: ");
 1890              		.loc 1 658 0
 1891 02ce 294A     		ldr	r2, .L67+112
 1892 02d0 1149     		ldr	r1, .L67+20
 1893 02d2 1248     		ldr	r0, .L67+24
 1894 02d4 FFF7FEFF 		bl	SD_write
 659:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1895              		.loc 1 659 0
 1896 02d8 07F14003 		add	r3, r7, #64
 1897 02dc 1A46     		mov	r2, r3
 1898 02de 0E49     		ldr	r1, .L67+20
 1899 02e0 0E48     		ldr	r0, .L67+24
 1900 02e2 FFF7FEFF 		bl	SD_write
 660:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1901              		.loc 1 660 0
 1902 02e6 0F4A     		ldr	r2, .L67+32
 1903 02e8 0B49     		ldr	r1, .L67+20
 1904 02ea 0C48     		ldr	r0, .L67+24
 1905 02ec FFF7FEFF 		bl	SD_write
 1906 02f0 03E0     		b	.L65
 1907              	.L64:
 661:notoriOS.c    ****         //}
 662:notoriOS.c    ****     }else{
 663:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from GPS sensor.");
 1908              		.loc 1 663 0
 1909 02f2 2149     		ldr	r1, .L67+116
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 49


 1910 02f4 0220     		movs	r0, #2
 1911 02f6 FFF7FEFF 		bl	printNotif
 1912              	.L65:
 664:notoriOS.c    ****             //pushData("gps","1",timeStamp);
 665:notoriOS.c    ****     }
 666:notoriOS.c    ****     return 0u;
 1913              		.loc 1 666 0
 1914 02fa 0023     		movs	r3, #0
 667:notoriOS.c    **** }
 1915              		.loc 1 667 0
 1916 02fc 1846     		mov	r0, r3
 1917 02fe 7C37     		adds	r7, r7, #124
 1918              		.cfi_def_cfa_offset 12
 1919 0300 BD46     		mov	sp, r7
 1920              		.cfi_def_cfa_register 13
 1921              		@ sp needed
 1922 0302 90BD     		pop	{r4, r7, pc}
 1923              	.L68:
 1924              		.align	2
 1925              	.L67:
 1926 0304 B4020000 		.word	.LC37
 1927 0308 00000000 		.word	updatable_parameters
 1928 030c 3C000000 		.word	.LC2
 1929 0310 B8020000 		.word	.LC38
 1930 0314 CC020000 		.word	.LC39
 1931 0318 DC020000 		.word	.LC40
 1932 031c 00000000 		.word	Data_fileName
 1933 0320 E0020000 		.word	.LC41
 1934 0324 F4020000 		.word	.LC42
 1935 0328 F8020000 		.word	.LC43
 1936 032c 24030000 		.word	.LC44
 1937 0330 2C030000 		.word	.LC45
 1938 0334 38030000 		.word	.LC46
 1939 0338 40030000 		.word	.LC47
 1940 033c 48030000 		.word	.LC48
 1941 0340 5C030000 		.word	.LC49
 1942 0344 70030000 		.word	.LC50
 1943 0348 84030000 		.word	.LC51
 1944 034c 98030000 		.word	.LC52
 1945 0350 A8030000 		.word	.LC53
 1946 0354 BC030000 		.word	.LC54
 1947 0358 00000000 		.word	gps_data
 1948 035c E4030000 		.word	.LC55
 1949 0360 E8030000 		.word	.LC56
 1950 0364 F4030000 		.word	.LC57
 1951 0368 00040000 		.word	.LC58
 1952 036c 10040000 		.word	.LC59
 1953 0370 20040000 		.word	.LC60
 1954 0374 2C040000 		.word	.LC61
 1955 0378 3C040000 		.word	.LC62
 1956              		.cfi_endproc
 1957              	.LFE76:
 1958              		.size	makeMeasurements, .-makeMeasurements
 1959              		.section	.rodata
 1960 046a 0000     		.align	2
 1961              	.LC63:
 1962 046c 4572726F 		.ascii	"Error setting system time.\000"
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 50


 1962      72207365 
 1962      7474696E 
 1962      67207379 
 1962      7374656D 
 1963              		.section	.text.setTime,"ax",%progbits
 1964              		.align	2
 1965              		.global	setTime
 1966              		.thumb
 1967              		.thumb_func
 1968              		.type	setTime, %function
 1969              	setTime:
 1970              	.LFB77:
 668:notoriOS.c    **** 
 669:notoriOS.c    **** // ==============================================
 670:notoriOS.c    **** // Set the system time
 671:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 672:notoriOS.c    **** // ==============================================
 673:notoriOS.c    **** uint8 setTime(long timeStamp){
 1971              		.loc 1 673 0
 1972              		.cfi_startproc
 1973              		@ args = 0, pretend = 0, frame = 24
 1974              		@ frame_needed = 1, uses_anonymous_args = 0
 1975 0000 80B5     		push	{r7, lr}
 1976              		.cfi_def_cfa_offset 8
 1977              		.cfi_offset 7, -8
 1978              		.cfi_offset 14, -4
 1979 0002 86B0     		sub	sp, sp, #24
 1980              		.cfi_def_cfa_offset 32
 1981 0004 00AF     		add	r7, sp, #0
 1982              		.cfi_def_cfa_register 7
 1983 0006 7860     		str	r0, [r7, #4]
 674:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 675:notoriOS.c    ****     if(timeStamp <=0){
 1984              		.loc 1 675 0
 1985 0008 7B68     		ldr	r3, [r7, #4]
 1986 000a 002B     		cmp	r3, #0
 1987 000c 05DC     		bgt	.L70
 676:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 1988              		.loc 1 676 0
 1989 000e 1849     		ldr	r1, .L72
 1990 0010 0220     		movs	r0, #2
 1991 0012 FFF7FEFF 		bl	printNotif
 677:notoriOS.c    ****         return 0;  
 1992              		.loc 1 677 0
 1993 0016 0023     		movs	r3, #0
 1994 0018 25E0     		b	.L71
 1995              	.L70:
 678:notoriOS.c    ****     }
 679:notoriOS.c    ****     // Create a new pointer t of data structure tm
 680:notoriOS.c    ****     struct tm * t;
 681:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 682:notoriOS.c    ****     t = gmtime(&timeStamp);
 1996              		.loc 1 682 0
 1997 001a 3B1D     		adds	r3, r7, #4
 1998 001c 1846     		mov	r0, r3
 1999 001e FFF7FEFF 		bl	gmtime
 2000 0022 7861     		str	r0, [r7, #20]
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 51


 683:notoriOS.c    ****     
 684:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 685:notoriOS.c    ****     RTC_TIME_DATE localTime;
 686:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 2001              		.loc 1 686 0
 2002 0024 7B69     		ldr	r3, [r7, #20]
 2003 0026 1B68     		ldr	r3, [r3]
 2004 0028 DBB2     		uxtb	r3, r3
 2005 002a 3B72     		strb	r3, [r7, #8]
 687:notoriOS.c    ****     localTime.Min = t->tm_min;
 2006              		.loc 1 687 0
 2007 002c 7B69     		ldr	r3, [r7, #20]
 2008 002e 5B68     		ldr	r3, [r3, #4]
 2009 0030 DBB2     		uxtb	r3, r3
 2010 0032 7B72     		strb	r3, [r7, #9]
 688:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 2011              		.loc 1 688 0
 2012 0034 7B69     		ldr	r3, [r7, #20]
 2013 0036 9B68     		ldr	r3, [r3, #8]
 2014 0038 DBB2     		uxtb	r3, r3
 2015 003a BB72     		strb	r3, [r7, #10]
 689:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 2016              		.loc 1 689 0
 2017 003c 7B69     		ldr	r3, [r7, #20]
 2018 003e 5B69     		ldr	r3, [r3, #20]
 2019 0040 9BB2     		uxth	r3, r3
 2020 0042 03F26C73 		addw	r3, r3, #1900
 2021 0046 9BB2     		uxth	r3, r3
 2022 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 690:notoriOS.c    ****     localTime.Month = t->tm_mon;
 2023              		.loc 1 690 0
 2024 004a 7B69     		ldr	r3, [r7, #20]
 2025 004c 1B69     		ldr	r3, [r3, #16]
 2026 004e DBB2     		uxtb	r3, r3
 2027 0050 3B74     		strb	r3, [r7, #16]
 691:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 2028              		.loc 1 691 0
 2029 0052 7B69     		ldr	r3, [r7, #20]
 2030 0054 DB68     		ldr	r3, [r3, #12]
 2031 0056 DBB2     		uxtb	r3, r3
 2032 0058 3B73     		strb	r3, [r7, #12]
 692:notoriOS.c    **** 
 693:notoriOS.c    ****     // Writes time and date values as current time and date.
 694:notoriOS.c    ****     RTC_WriteTime(&localTime);
 2033              		.loc 1 694 0
 2034 005a 07F10803 		add	r3, r7, #8
 2035 005e 1846     		mov	r0, r3
 2036 0060 FFF7FEFF 		bl	RTC_WriteTime
 695:notoriOS.c    ****     
 696:notoriOS.c    ****     // Return 1 when the system time was set properly.
 697:notoriOS.c    ****     return 1;
 2037              		.loc 1 697 0
 2038 0064 0123     		movs	r3, #1
 2039              	.L71:
 698:notoriOS.c    **** }
 2040              		.loc 1 698 0
 2041 0066 1846     		mov	r0, r3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 52


 2042 0068 1837     		adds	r7, r7, #24
 2043              		.cfi_def_cfa_offset 8
 2044 006a BD46     		mov	sp, r7
 2045              		.cfi_def_cfa_register 13
 2046              		@ sp needed
 2047 006c 80BD     		pop	{r7, pc}
 2048              	.L73:
 2049 006e 00BF     		.align	2
 2050              	.L72:
 2051 0070 6C040000 		.word	.LC63
 2052              		.cfi_endproc
 2053              	.LFE77:
 2054              		.size	setTime, .-setTime
 2055              		.section	.rodata
 2056 0487 00       		.align	2
 2057              	.LC64:
 2058 0488 75706772 		.ascii	"upgrade.hex\000"
 2058      6164652E 
 2058      68657800 
 2059              		.section	.text.upgraded,"ax",%progbits
 2060              		.align	2
 2061              		.global	upgraded
 2062              		.thumb
 2063              		.thumb_func
 2064              		.type	upgraded, %function
 2065              	upgraded:
 2066              	.LFB78:
 699:notoriOS.c    **** 
 700:notoriOS.c    **** //downloads and stores files on SD card
 701:notoriOS.c    **** 
 702:notoriOS.c    **** 
 703:notoriOS.c    **** 
 704:notoriOS.c    **** // ==============================================
 705:notoriOS.c    **** // Will they love it, will they hate it
 706:notoriOS.c    **** // Never fade it, I evade it
 707:notoriOS.c    **** // Cause I never really want to complicate it
 708:notoriOS.c    **** //      - Logic, Upgraded (2015)
 709:notoriOS.c    **** //
 710:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 711:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 712:notoriOS.c    **** // ==============================================
 713:notoriOS.c    **** 
 714:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 2067              		.loc 1 714 0
 2068              		.cfi_startproc
 2069              		@ args = 0, pretend = 0, frame = 232
 2070              		@ frame_needed = 1, uses_anonymous_args = 0
 2071 0000 80B5     		push	{r7, lr}
 2072              		.cfi_def_cfa_offset 8
 2073              		.cfi_offset 7, -8
 2074              		.cfi_offset 14, -4
 2075 0002 C0B0     		sub	sp, sp, #256
 2076              		.cfi_def_cfa_offset 264
 2077 0004 06AF     		add	r7, sp, #24
 2078              		.cfi_def_cfa 7, 240
 2079 0006 F860     		str	r0, [r7, #12]
 2080 0008 B960     		str	r1, [r7, #8]
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 53


 2081 000a 7A60     		str	r2, [r7, #4]
 715:notoriOS.c    ****     
 716:notoriOS.c    ****     uint8 upgrade_status = 0;
 2082              		.loc 1 716 0
 2083 000c 0023     		movs	r3, #0
 2084 000e 87F8E730 		strb	r3, [r7, #231]
 717:notoriOS.c    ****     
 718:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 719:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 2085              		.loc 1 719 0
 2086 0012 384B     		ldr	r3, .L78
 2087 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2088 0016 042B     		cmp	r3, #4
 2089 0018 02D0     		beq	.L75
 720:notoriOS.c    ****         return upgrade_status;//where valid = 0
 2090              		.loc 1 720 0
 2091 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2092 001e 65E0     		b	.L77
 2093              	.L75:
 721:notoriOS.c    ****     }
 722:notoriOS.c    ****     
 723:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 2094              		.loc 1 723 0
 2095 0020 354A     		ldr	r2, .L78+4
 2096 0022 07F1D803 		add	r3, r7, #216
 2097 0026 07CA     		ldmia	r2, {r0, r1, r2}
 2098 0028 83E80700 		stmia	r3, {r0, r1, r2}
 724:notoriOS.c    ****     //delete file, if one exisits already
 725:notoriOS.c    ****     SD_rmfile(fileName);
 2099              		.loc 1 725 0
 2100 002c 07F1D803 		add	r3, r7, #216
 2101 0030 1846     		mov	r0, r3
 2102 0032 FFF7FEFF 		bl	SD_rmfile
 726:notoriOS.c    ****     
 727:notoriOS.c    ****     // Create http request
 728:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 2103              		.loc 1 728 0
 2104 0036 314B     		ldr	r3, .L78+8
 2105 0038 0593     		str	r3, [sp, #20]
 2106 003a 0023     		movs	r3, #0
 2107 003c 0493     		str	r3, [sp, #16]
 2108 003e 304B     		ldr	r3, .L78+12
 2109 0040 0393     		str	r3, [sp, #12]
 2110 0042 304B     		ldr	r3, .L78+16
 2111 0044 0293     		str	r3, [sp, #8]
 2112 0046 304B     		ldr	r3, .L78+20
 2113 0048 0193     		str	r3, [sp, #4]
 2114 004a BB68     		ldr	r3, [r7, #8]
 2115 004c 0093     		str	r3, [sp]
 2116 004e 7B68     		ldr	r3, [r7, #4]
 2117 0050 FA68     		ldr	r2, [r7, #12]
 2118 0052 2E49     		ldr	r1, .L78+24
 2119 0054 2E48     		ldr	r0, .L78+28
 2120 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 729:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 2121              		.loc 1 729 0
 2122 005a 2D4A     		ldr	r2, .L78+28
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 54


 2123 005c 2D49     		ldr	r1, .L78+32
 2124 005e 0020     		movs	r0, #0
 2125 0060 FFF7FEFF 		bl	printNotif
 730:notoriOS.c    ****     // Create array portConfig of size 200 characters
 731:notoriOS.c    ****     char portConfig[200];
 732:notoriOS.c    ****     // Print port configurations
 733:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 2126              		.loc 1 733 0
 2127 0064 07F11000 		add	r0, r7, #16
 2128 0068 FB68     		ldr	r3, [r7, #12]
 2129 006a 0093     		str	r3, [sp]
 2130 006c BB68     		ldr	r3, [r7, #8]
 2131 006e 2A4A     		ldr	r2, .L78+36
 2132 0070 C821     		movs	r1, #200
 2133 0072 FFF7FEFF 		bl	snprintf
 734:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 2134              		.loc 1 734 0
 2135 0076 07F11003 		add	r3, r7, #16
 2136 007a 1A46     		mov	r2, r3
 2137 007c 2749     		ldr	r1, .L78+40
 2138 007e 0020     		movs	r0, #0
 2139 0080 FFF7FEFF 		bl	printNotif
 735:notoriOS.c    ****     // AT command to configure the port
 736:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 2140              		.loc 1 736 0
 2141 0084 07F11003 		add	r3, r7, #16
 2142 0088 42F21072 		movw	r2, #10000
 2143 008c 2449     		ldr	r1, .L78+44
 2144 008e 1846     		mov	r0, r3
 2145 0090 FFF7FEFF 		bl	at_write_command
 2146 0094 0346     		mov	r3, r0
 2147 0096 87F8E730 		strb	r3, [r7, #231]
 737:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 738:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 739:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 2148              		.loc 1 739 0
 2149 009a 4FF47A72 		mov	r2, #1000
 2150 009e 2149     		ldr	r1, .L78+48
 2151 00a0 2148     		ldr	r0, .L78+52
 2152 00a2 FFF7FEFF 		bl	at_write_command
 2153 00a6 0346     		mov	r3, r0
 2154 00a8 87F8E730 		strb	r3, [r7, #231]
 740:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 741:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 2155              		.loc 1 741 0
 2156 00ac 1848     		ldr	r0, .L78+28
 2157 00ae FFF7FEFF 		bl	strlen
 2158 00b2 0346     		mov	r3, r0
 2159 00b4 1A46     		mov	r2, r3
 2160 00b6 164B     		ldr	r3, .L78+28
 2161 00b8 1344     		add	r3, r3, r2
 2162 00ba 1C49     		ldr	r1, .L78+56
 2163 00bc 1A46     		mov	r2, r3
 2164 00be 0B46     		mov	r3, r1
 2165 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 2166 00c2 1380     		strh	r3, [r2]	@ unaligned
 742:notoriOS.c    ****     // AT command to send http request
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 55


 743:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
 2167              		.loc 1 743 0
 2168 00c4 41F28832 		movw	r2, #5000
 2169 00c8 1549     		ldr	r1, .L78+44
 2170 00ca 1148     		ldr	r0, .L78+28
 2171 00cc FFF7FEFF 		bl	at_write_command
 2172 00d0 0346     		mov	r3, r0
 2173 00d2 87F8E730 		strb	r3, [r7, #231]
 744:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 745:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 746:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 2174              		.loc 1 746 0
 2175 00d6 41F28832 		movw	r2, #5000
 2176 00da 1549     		ldr	r1, .L78+60
 2177 00dc 1548     		ldr	r0, .L78+64
 2178 00de FFF7FEFF 		bl	at_write_command
 2179 00e2 0346     		mov	r3, r0
 2180 00e4 87F8E730 		strb	r3, [r7, #231]
 747:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 748:notoriOS.c    ****     
 749:notoriOS.c    ****     
 750:notoriOS.c    ****     return upgrade_status;
 2181              		.loc 1 750 0
 2182 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2183              	.L77:
 751:notoriOS.c    ****     
 752:notoriOS.c    **** }
 2184              		.loc 1 752 0 discriminator 1
 2185 00ec 1846     		mov	r0, r3
 2186 00ee E837     		adds	r7, r7, #232
 2187              		.cfi_def_cfa_offset 8
 2188 00f0 BD46     		mov	sp, r7
 2189              		.cfi_def_cfa_register 13
 2190              		@ sp needed
 2191 00f2 80BD     		pop	{r7, pc}
 2192              	.L79:
 2193              		.align	2
 2194              	.L78:
 2195 00f4 00000000 		.word	modem_state
 2196 00f8 88040000 		.word	.LC64
 2197 00fc 68010000 		.word	.LC16
 2198 0100 6C010000 		.word	.LC17
 2199 0104 70010000 		.word	.LC18
 2200 0108 78010000 		.word	.LC19
 2201 010c 00000000 		.word	http_body
 2202 0110 00000000 		.word	http_request
 2203 0114 80010000 		.word	.LC20
 2204 0118 98010000 		.word	.LC21
 2205 011c B4010000 		.word	.LC22
 2206 0120 B8010000 		.word	.LC23
 2207 0124 E8010000 		.word	.LC26
 2208 0128 EC010000 		.word	.LC27
 2209 012c FC010000 		.word	.LC28
 2210 0130 18020000 		.word	.LC31
 2211 0134 20020000 		.word	.LC32
 2212              		.cfi_endproc
 2213              	.LFE78:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 56


 2214              		.size	upgraded, .-upgraded
 2215              		.text
 2216              	.Letext0:
 2217              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2218              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2219              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2220              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 2221              		.file 6 "testing.h"
 2222              		.file 7 "level_sensor.h"
 2223              		.file 8 "voltages.h"
 2224              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2225              		.file 10 "data.h"
 2226              		.file 11 "modem.h"
 2227              		.file 12 "notoriOS.h"
 2228              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 2229              		.section	.debug_info,"",%progbits
 2230              	.Ldebug_info0:
 2231 0000 7A0C0000 		.4byte	0xc7a
 2232 0004 0400     		.2byte	0x4
 2233 0006 00000000 		.4byte	.Ldebug_abbrev0
 2234 000a 04       		.byte	0x4
 2235 000b 01       		.uleb128 0x1
 2236 000c 7E000000 		.4byte	.LASF166
 2237 0010 0C       		.byte	0xc
 2238 0011 E7070000 		.4byte	.LASF167
 2239 0015 39070000 		.4byte	.LASF168
 2240 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2241 001d 00000000 		.4byte	0
 2242 0021 00000000 		.4byte	.Ldebug_line0
 2243 0025 02       		.uleb128 0x2
 2244 0026 01       		.byte	0x1
 2245 0027 06       		.byte	0x6
 2246 0028 45000000 		.4byte	.LASF0
 2247 002c 02       		.uleb128 0x2
 2248 002d 01       		.byte	0x1
 2249 002e 08       		.byte	0x8
 2250 002f D8050000 		.4byte	.LASF1
 2251 0033 02       		.uleb128 0x2
 2252 0034 02       		.byte	0x2
 2253 0035 05       		.byte	0x5
 2254 0036 3F040000 		.4byte	.LASF2
 2255 003a 02       		.uleb128 0x2
 2256 003b 02       		.byte	0x2
 2257 003c 07       		.byte	0x7
 2258 003d 7F070000 		.4byte	.LASF3
 2259 0041 03       		.uleb128 0x3
 2260 0042 49040000 		.4byte	.LASF9
 2261 0046 02       		.byte	0x2
 2262 0047 3F       		.byte	0x3f
 2263 0048 4C000000 		.4byte	0x4c
 2264 004c 02       		.uleb128 0x2
 2265 004d 04       		.byte	0x4
 2266 004e 05       		.byte	0x5
 2267 004f 1F020000 		.4byte	.LASF4
 2268 0053 02       		.uleb128 0x2
 2269 0054 04       		.byte	0x4
 2270 0055 07       		.byte	0x7
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 57


 2271 0056 7C030000 		.4byte	.LASF5
 2272 005a 02       		.uleb128 0x2
 2273 005b 08       		.byte	0x8
 2274 005c 05       		.byte	0x5
 2275 005d 63010000 		.4byte	.LASF6
 2276 0061 02       		.uleb128 0x2
 2277 0062 08       		.byte	0x8
 2278 0063 07       		.byte	0x7
 2279 0064 A4010000 		.4byte	.LASF7
 2280 0068 04       		.uleb128 0x4
 2281 0069 04       		.byte	0x4
 2282 006a 05       		.byte	0x5
 2283 006b 696E7400 		.ascii	"int\000"
 2284 006f 02       		.uleb128 0x2
 2285 0070 04       		.byte	0x4
 2286 0071 07       		.byte	0x7
 2287 0072 28030000 		.4byte	.LASF8
 2288 0076 03       		.uleb128 0x3
 2289 0077 D0050000 		.4byte	.LASF10
 2290 007b 03       		.byte	0x3
 2291 007c 2C       		.byte	0x2c
 2292 007d 41000000 		.4byte	0x41
 2293 0081 05       		.uleb128 0x5
 2294 0082 5F020000 		.4byte	.LASF11
 2295 0086 04       		.byte	0x4
 2296 0087 9201     		.2byte	0x192
 2297 0089 2C000000 		.4byte	0x2c
 2298 008d 05       		.uleb128 0x5
 2299 008e 08000000 		.4byte	.LASF12
 2300 0092 04       		.byte	0x4
 2301 0093 9301     		.2byte	0x193
 2302 0095 3A000000 		.4byte	0x3a
 2303 0099 05       		.uleb128 0x5
 2304 009a A3020000 		.4byte	.LASF13
 2305 009e 04       		.byte	0x4
 2306 009f 9401     		.2byte	0x194
 2307 00a1 53000000 		.4byte	0x53
 2308 00a5 05       		.uleb128 0x5
 2309 00a6 02040000 		.4byte	.LASF14
 2310 00aa 04       		.byte	0x4
 2311 00ab 9501     		.2byte	0x195
 2312 00ad 25000000 		.4byte	0x25
 2313 00b1 05       		.uleb128 0x5
 2314 00b2 FC070000 		.4byte	.LASF15
 2315 00b6 04       		.byte	0x4
 2316 00b7 9601     		.2byte	0x196
 2317 00b9 33000000 		.4byte	0x33
 2318 00bd 05       		.uleb128 0x5
 2319 00be 7D020000 		.4byte	.LASF16
 2320 00c2 04       		.byte	0x4
 2321 00c3 9701     		.2byte	0x197
 2322 00c5 4C000000 		.4byte	0x4c
 2323 00c9 02       		.uleb128 0x2
 2324 00ca 04       		.byte	0x4
 2325 00cb 04       		.byte	0x4
 2326 00cc 75050000 		.4byte	.LASF17
 2327 00d0 02       		.uleb128 0x2
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 58


 2328 00d1 08       		.byte	0x8
 2329 00d2 04       		.byte	0x4
 2330 00d3 80080000 		.4byte	.LASF18
 2331 00d7 02       		.uleb128 0x2
 2332 00d8 01       		.byte	0x1
 2333 00d9 08       		.byte	0x8
 2334 00da F4060000 		.4byte	.LASF19
 2335 00de 02       		.uleb128 0x2
 2336 00df 08       		.byte	0x8
 2337 00e0 04       		.byte	0x4
 2338 00e1 D6060000 		.4byte	.LASF20
 2339 00e5 02       		.uleb128 0x2
 2340 00e6 04       		.byte	0x4
 2341 00e7 07       		.byte	0x7
 2342 00e8 C6040000 		.4byte	.LASF21
 2343 00ec 06       		.uleb128 0x6
 2344 00ed 04       		.byte	0x4
 2345 00ee D7000000 		.4byte	0xd7
 2346 00f2 07       		.uleb128 0x7
 2347 00f3 D7000000 		.4byte	0xd7
 2348 00f7 02010000 		.4byte	0x102
 2349 00fb 08       		.uleb128 0x8
 2350 00fc E5000000 		.4byte	0xe5
 2351 0100 17       		.byte	0x17
 2352 0101 00       		.byte	0
 2353 0102 09       		.uleb128 0x9
 2354 0103 0C       		.byte	0xc
 2355 0104 05       		.byte	0x5
 2356 0105 30       		.byte	0x30
 2357 0106 6B010000 		.4byte	0x16b
 2358 010a 0A       		.uleb128 0xa
 2359 010b 53656300 		.ascii	"Sec\000"
 2360 010f 05       		.byte	0x5
 2361 0110 32       		.byte	0x32
 2362 0111 81000000 		.4byte	0x81
 2363 0115 00       		.byte	0
 2364 0116 0A       		.uleb128 0xa
 2365 0117 4D696E00 		.ascii	"Min\000"
 2366 011b 05       		.byte	0x5
 2367 011c 33       		.byte	0x33
 2368 011d 81000000 		.4byte	0x81
 2369 0121 01       		.byte	0x1
 2370 0122 0B       		.uleb128 0xb
 2371 0123 29010000 		.4byte	.LASF22
 2372 0127 05       		.byte	0x5
 2373 0128 34       		.byte	0x34
 2374 0129 81000000 		.4byte	0x81
 2375 012d 02       		.byte	0x2
 2376 012e 0B       		.uleb128 0xb
 2377 012f 35060000 		.4byte	.LASF23
 2378 0133 05       		.byte	0x5
 2379 0134 35       		.byte	0x35
 2380 0135 81000000 		.4byte	0x81
 2381 0139 03       		.byte	0x3
 2382 013a 0B       		.uleb128 0xb
 2383 013b BD030000 		.4byte	.LASF24
 2384 013f 05       		.byte	0x5
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 59


 2385 0140 36       		.byte	0x36
 2386 0141 81000000 		.4byte	0x81
 2387 0145 04       		.byte	0x4
 2388 0146 0B       		.uleb128 0xb
 2389 0147 35080000 		.4byte	.LASF25
 2390 014b 05       		.byte	0x5
 2391 014c 37       		.byte	0x37
 2392 014d 8D000000 		.4byte	0x8d
 2393 0151 06       		.byte	0x6
 2394 0152 0B       		.uleb128 0xb
 2395 0153 17010000 		.4byte	.LASF26
 2396 0157 05       		.byte	0x5
 2397 0158 38       		.byte	0x38
 2398 0159 81000000 		.4byte	0x81
 2399 015d 08       		.byte	0x8
 2400 015e 0B       		.uleb128 0xb
 2401 015f C5050000 		.4byte	.LASF27
 2402 0163 05       		.byte	0x5
 2403 0164 39       		.byte	0x39
 2404 0165 8D000000 		.4byte	0x8d
 2405 0169 0A       		.byte	0xa
 2406 016a 00       		.byte	0
 2407 016b 03       		.uleb128 0x3
 2408 016c 1A050000 		.4byte	.LASF28
 2409 0170 05       		.byte	0x5
 2410 0171 3A       		.byte	0x3a
 2411 0172 76010000 		.4byte	0x176
 2412 0176 0C       		.uleb128 0xc
 2413 0177 02010000 		.4byte	0x102
 2414 017b 0D       		.uleb128 0xd
 2415 017c 8101     		.2byte	0x181
 2416 017e 06       		.byte	0x6
 2417 017f 0A       		.byte	0xa
 2418 0180 A9010000 		.4byte	0x1a9
 2419 0184 0B       		.uleb128 0xb
 2420 0185 BB050000 		.4byte	.LASF29
 2421 0189 06       		.byte	0x6
 2422 018a 0C       		.byte	0xc
 2423 018b A9010000 		.4byte	0x1a9
 2424 018f 00       		.byte	0
 2425 0190 0B       		.uleb128 0xb
 2426 0191 BC070000 		.4byte	.LASF30
 2427 0195 06       		.byte	0x6
 2428 0196 0D       		.byte	0xd
 2429 0197 81000000 		.4byte	0x81
 2430 019b 80       		.byte	0x80
 2431 019c 0B       		.uleb128 0xb
 2432 019d 57060000 		.4byte	.LASF31
 2433 01a1 06       		.byte	0x6
 2434 01a2 0F       		.byte	0xf
 2435 01a3 B9010000 		.4byte	0x1b9
 2436 01a7 81       		.byte	0x81
 2437 01a8 00       		.byte	0
 2438 01a9 07       		.uleb128 0x7
 2439 01aa D7000000 		.4byte	0xd7
 2440 01ae B9010000 		.4byte	0x1b9
 2441 01b2 08       		.uleb128 0x8
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 60


 2442 01b3 E5000000 		.4byte	0xe5
 2443 01b7 7F       		.byte	0x7f
 2444 01b8 00       		.byte	0
 2445 01b9 07       		.uleb128 0x7
 2446 01ba D7000000 		.4byte	0xd7
 2447 01be C9010000 		.4byte	0x1c9
 2448 01c2 08       		.uleb128 0x8
 2449 01c3 E5000000 		.4byte	0xe5
 2450 01c7 FF       		.byte	0xff
 2451 01c8 00       		.byte	0
 2452 01c9 03       		.uleb128 0x3
 2453 01ca 3F060000 		.4byte	.LASF32
 2454 01ce 06       		.byte	0x6
 2455 01cf 10       		.byte	0x10
 2456 01d0 7B010000 		.4byte	0x17b
 2457 01d4 09       		.uleb128 0x9
 2458 01d5 1A       		.byte	0x1a
 2459 01d6 07       		.byte	0x7
 2460 01d7 10       		.byte	0x10
 2461 01d8 0D020000 		.4byte	0x20d
 2462 01dc 0B       		.uleb128 0xb
 2463 01dd B3020000 		.4byte	.LASF33
 2464 01e1 07       		.byte	0x7
 2465 01e2 11       		.byte	0x11
 2466 01e3 0D020000 		.4byte	0x20d
 2467 01e7 00       		.byte	0
 2468 01e8 0B       		.uleb128 0xb
 2469 01e9 60070000 		.4byte	.LASF34
 2470 01ed 07       		.byte	0x7
 2471 01ee 12       		.byte	0x12
 2472 01ef B1000000 		.4byte	0xb1
 2473 01f3 16       		.byte	0x16
 2474 01f4 0B       		.uleb128 0xb
 2475 01f5 54030000 		.4byte	.LASF35
 2476 01f9 07       		.byte	0x7
 2477 01fa 13       		.byte	0x13
 2478 01fb 81000000 		.4byte	0x81
 2479 01ff 18       		.byte	0x18
 2480 0200 0B       		.uleb128 0xb
 2481 0201 17000000 		.4byte	.LASF36
 2482 0205 07       		.byte	0x7
 2483 0206 14       		.byte	0x14
 2484 0207 81000000 		.4byte	0x81
 2485 020b 19       		.byte	0x19
 2486 020c 00       		.byte	0
 2487 020d 07       		.uleb128 0x7
 2488 020e B1000000 		.4byte	0xb1
 2489 0212 1D020000 		.4byte	0x21d
 2490 0216 08       		.uleb128 0x8
 2491 0217 E5000000 		.4byte	0xe5
 2492 021b 0A       		.byte	0xa
 2493 021c 00       		.byte	0
 2494 021d 03       		.uleb128 0x3
 2495 021e 7B050000 		.4byte	.LASF37
 2496 0222 07       		.byte	0x7
 2497 0223 15       		.byte	0x15
 2498 0224 D4010000 		.4byte	0x1d4
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 61


 2499 0228 09       		.uleb128 0x9
 2500 0229 14       		.byte	0x14
 2501 022a 08       		.byte	0x8
 2502 022b 11       		.byte	0x11
 2503 022c 6D020000 		.4byte	0x26d
 2504 0230 0B       		.uleb128 0xb
 2505 0231 AD030000 		.4byte	.LASF38
 2506 0235 08       		.byte	0x8
 2507 0236 12       		.byte	0x12
 2508 0237 C9000000 		.4byte	0xc9
 2509 023b 00       		.byte	0
 2510 023c 0B       		.uleb128 0xb
 2511 023d C6010000 		.4byte	.LASF39
 2512 0241 08       		.byte	0x8
 2513 0242 13       		.byte	0x13
 2514 0243 C9000000 		.4byte	0xc9
 2515 0247 04       		.byte	0x4
 2516 0248 0B       		.uleb128 0xb
 2517 0249 D4010000 		.4byte	.LASF40
 2518 024d 08       		.byte	0x8
 2519 024e 14       		.byte	0x14
 2520 024f C9000000 		.4byte	0xc9
 2521 0253 08       		.byte	0x8
 2522 0254 0B       		.uleb128 0xb
 2523 0255 57050000 		.4byte	.LASF41
 2524 0259 08       		.byte	0x8
 2525 025a 15       		.byte	0x15
 2526 025b C9000000 		.4byte	0xc9
 2527 025f 0C       		.byte	0xc
 2528 0260 0B       		.uleb128 0xb
 2529 0261 C8060000 		.4byte	.LASF42
 2530 0265 08       		.byte	0x8
 2531 0266 16       		.byte	0x16
 2532 0267 81000000 		.4byte	0x81
 2533 026b 10       		.byte	0x10
 2534 026c 00       		.byte	0
 2535 026d 03       		.uleb128 0x3
 2536 026e 87080000 		.4byte	.LASF43
 2537 0272 08       		.byte	0x8
 2538 0273 17       		.byte	0x17
 2539 0274 28020000 		.4byte	0x228
 2540 0278 09       		.uleb128 0x9
 2541 0279 10       		.byte	0x10
 2542 027a 08       		.byte	0x8
 2543 027b 19       		.byte	0x19
 2544 027c B1020000 		.4byte	0x2b1
 2545 0280 0B       		.uleb128 0xb
 2546 0281 14030000 		.4byte	.LASF44
 2547 0285 08       		.byte	0x8
 2548 0286 1A       		.byte	0x1a
 2549 0287 C9000000 		.4byte	0xc9
 2550 028b 00       		.byte	0
 2551 028c 0B       		.uleb128 0xb
 2552 028d 41020000 		.4byte	.LASF45
 2553 0291 08       		.byte	0x8
 2554 0292 1B       		.byte	0x1b
 2555 0293 C9000000 		.4byte	0xc9
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 62


 2556 0297 04       		.byte	0x4
 2557 0298 0B       		.uleb128 0xb
 2558 0299 B7060000 		.4byte	.LASF46
 2559 029d 08       		.byte	0x8
 2560 029e 1C       		.byte	0x1c
 2561 029f C9000000 		.4byte	0xc9
 2562 02a3 08       		.byte	0x8
 2563 02a4 0B       		.uleb128 0xb
 2564 02a5 21060000 		.4byte	.LASF47
 2565 02a9 08       		.byte	0x8
 2566 02aa 1D       		.byte	0x1d
 2567 02ab C9000000 		.4byte	0xc9
 2568 02af 0C       		.byte	0xc
 2569 02b0 00       		.byte	0
 2570 02b1 03       		.uleb128 0x3
 2571 02b2 3F080000 		.4byte	.LASF48
 2572 02b6 08       		.byte	0x8
 2573 02b7 1E       		.byte	0x1e
 2574 02b8 78020000 		.4byte	0x278
 2575 02bc 0E       		.uleb128 0xe
 2576 02bd 746D00   		.ascii	"tm\000"
 2577 02c0 24       		.byte	0x24
 2578 02c1 09       		.byte	0x9
 2579 02c2 21       		.byte	0x21
 2580 02c3 34030000 		.4byte	0x334
 2581 02c7 0B       		.uleb128 0xb
 2582 02c8 AA070000 		.4byte	.LASF49
 2583 02cc 09       		.byte	0x9
 2584 02cd 23       		.byte	0x23
 2585 02ce 68000000 		.4byte	0x68
 2586 02d2 00       		.byte	0
 2587 02d3 0B       		.uleb128 0xb
 2588 02d4 A8040000 		.4byte	.LASF50
 2589 02d8 09       		.byte	0x9
 2590 02d9 24       		.byte	0x24
 2591 02da 68000000 		.4byte	0x68
 2592 02de 04       		.byte	0x4
 2593 02df 0B       		.uleb128 0xb
 2594 02e0 0F000000 		.4byte	.LASF51
 2595 02e4 09       		.byte	0x9
 2596 02e5 25       		.byte	0x25
 2597 02e6 68000000 		.4byte	0x68
 2598 02ea 08       		.byte	0x8
 2599 02eb 0B       		.uleb128 0xb
 2600 02ec 99070000 		.4byte	.LASF52
 2601 02f0 09       		.byte	0x9
 2602 02f1 26       		.byte	0x26
 2603 02f2 68000000 		.4byte	0x68
 2604 02f6 0C       		.byte	0xc
 2605 02f7 0B       		.uleb128 0xb
 2606 02f8 DE020000 		.4byte	.LASF53
 2607 02fc 09       		.byte	0x9
 2608 02fd 27       		.byte	0x27
 2609 02fe 68000000 		.4byte	0x68
 2610 0302 10       		.byte	0x10
 2611 0303 0B       		.uleb128 0xb
 2612 0304 02030000 		.4byte	.LASF54
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 63


 2613 0308 09       		.byte	0x9
 2614 0309 28       		.byte	0x28
 2615 030a 68000000 		.4byte	0x68
 2616 030e 14       		.byte	0x14
 2617 030f 0B       		.uleb128 0xb
 2618 0310 CE060000 		.4byte	.LASF55
 2619 0314 09       		.byte	0x9
 2620 0315 29       		.byte	0x29
 2621 0316 68000000 		.4byte	0x68
 2622 031a 18       		.byte	0x18
 2623 031b 0B       		.uleb128 0xb
 2624 031c CF040000 		.4byte	.LASF56
 2625 0320 09       		.byte	0x9
 2626 0321 2A       		.byte	0x2a
 2627 0322 68000000 		.4byte	0x68
 2628 0326 1C       		.byte	0x1c
 2629 0327 0B       		.uleb128 0xb
 2630 0328 E6030000 		.4byte	.LASF57
 2631 032c 09       		.byte	0x9
 2632 032d 2B       		.byte	0x2b
 2633 032e 68000000 		.4byte	0x68
 2634 0332 20       		.byte	0x20
 2635 0333 00       		.byte	0
 2636 0334 09       		.uleb128 0x9
 2637 0335 2C       		.byte	0x2c
 2638 0336 0A       		.byte	0xa
 2639 0337 14       		.byte	0x14
 2640 0338 61030000 		.4byte	0x361
 2641 033c 0A       		.uleb128 0xa
 2642 033d 6B657900 		.ascii	"key\000"
 2643 0341 0A       		.byte	0xa
 2644 0342 15       		.byte	0x15
 2645 0343 61030000 		.4byte	0x361
 2646 0347 00       		.byte	0
 2647 0348 0B       		.uleb128 0xb
 2648 0349 F7020000 		.4byte	.LASF58
 2649 034d 0A       		.byte	0xa
 2650 034e 16       		.byte	0x16
 2651 034f 61030000 		.4byte	0x361
 2652 0353 14       		.byte	0x14
 2653 0354 0B       		.uleb128 0xb
 2654 0355 10050000 		.4byte	.LASF59
 2655 0359 0A       		.byte	0xa
 2656 035a 17       		.byte	0x17
 2657 035b BD000000 		.4byte	0xbd
 2658 035f 28       		.byte	0x28
 2659 0360 00       		.byte	0
 2660 0361 07       		.uleb128 0x7
 2661 0362 D7000000 		.4byte	0xd7
 2662 0366 71030000 		.4byte	0x371
 2663 036a 08       		.uleb128 0x8
 2664 036b E5000000 		.4byte	0xe5
 2665 036f 13       		.byte	0x13
 2666 0370 00       		.byte	0
 2667 0371 03       		.uleb128 0x3
 2668 0372 3D030000 		.4byte	.LASF60
 2669 0376 0A       		.byte	0xa
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 64


 2670 0377 19       		.byte	0x19
 2671 0378 34030000 		.4byte	0x334
 2672 037c 09       		.uleb128 0x9
 2673 037d 3C       		.byte	0x3c
 2674 037e 0B       		.byte	0xb
 2675 037f 39       		.byte	0x39
 2676 0380 A9030000 		.4byte	0x3a9
 2677 0384 0B       		.uleb128 0xb
 2678 0385 92070000 		.4byte	.LASF61
 2679 0389 0B       		.byte	0xb
 2680 038a 3A       		.byte	0x3a
 2681 038b 61030000 		.4byte	0x361
 2682 038f 00       		.byte	0
 2683 0390 0B       		.uleb128 0xb
 2684 0391 AA020000 		.4byte	.LASF62
 2685 0395 0B       		.byte	0xb
 2686 0396 3B       		.byte	0x3b
 2687 0397 61030000 		.4byte	0x361
 2688 039b 14       		.byte	0x14
 2689 039c 0B       		.uleb128 0xb
 2690 039d 52060000 		.4byte	.LASF63
 2691 03a1 0B       		.byte	0xb
 2692 03a2 3C       		.byte	0x3c
 2693 03a3 61030000 		.4byte	0x361
 2694 03a7 28       		.byte	0x28
 2695 03a8 00       		.byte	0
 2696 03a9 03       		.uleb128 0x3
 2697 03aa 0C020000 		.4byte	.LASF64
 2698 03ae 0B       		.byte	0xb
 2699 03af 3E       		.byte	0x3e
 2700 03b0 7C030000 		.4byte	0x37c
 2701 03b4 09       		.uleb128 0x9
 2702 03b5 20       		.byte	0x20
 2703 03b6 0B       		.byte	0xb
 2704 03b7 40       		.byte	0x40
 2705 03b8 1D040000 		.4byte	0x41d
 2706 03bc 0B       		.uleb128 0xb
 2707 03bd 19020000 		.4byte	.LASF65
 2708 03c1 0B       		.byte	0xb
 2709 03c2 41       		.byte	0x41
 2710 03c3 68000000 		.4byte	0x68
 2711 03c7 00       		.byte	0
 2712 03c8 0A       		.uleb128 0xa
 2713 03c9 62657200 		.ascii	"ber\000"
 2714 03cd 0B       		.byte	0xb
 2715 03ce 42       		.byte	0x42
 2716 03cf 68000000 		.4byte	0x68
 2717 03d3 04       		.byte	0x4
 2718 03d4 0B       		.uleb128 0xb
 2719 03d5 30060000 		.4byte	.LASF66
 2720 03d9 0B       		.byte	0xb
 2721 03da 43       		.byte	0x43
 2722 03db 68000000 		.4byte	0x68
 2723 03df 08       		.byte	0x8
 2724 03e0 0B       		.uleb128 0xb
 2725 03e1 79010000 		.4byte	.LASF67
 2726 03e5 0B       		.byte	0xb
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 65


 2727 03e6 44       		.byte	0x44
 2728 03e7 68000000 		.4byte	0x68
 2729 03eb 0C       		.byte	0xc
 2730 03ec 0B       		.uleb128 0xb
 2731 03ed FB050000 		.4byte	.LASF68
 2732 03f1 0B       		.byte	0xb
 2733 03f2 45       		.byte	0x45
 2734 03f3 68000000 		.4byte	0x68
 2735 03f7 10       		.byte	0x10
 2736 03f8 0B       		.uleb128 0xb
 2737 03f9 F6050000 		.4byte	.LASF69
 2738 03fd 0B       		.byte	0xb
 2739 03fe 46       		.byte	0x46
 2740 03ff 68000000 		.4byte	0x68
 2741 0403 14       		.byte	0x14
 2742 0404 0B       		.uleb128 0xb
 2743 0405 8C010000 		.4byte	.LASF70
 2744 0409 0B       		.byte	0xb
 2745 040a 47       		.byte	0x47
 2746 040b 68000000 		.4byte	0x68
 2747 040f 18       		.byte	0x18
 2748 0410 0B       		.uleb128 0xb
 2749 0411 28020000 		.4byte	.LASF71
 2750 0415 0B       		.byte	0xb
 2751 0416 48       		.byte	0x48
 2752 0417 68000000 		.4byte	0x68
 2753 041b 1C       		.byte	0x1c
 2754 041c 00       		.byte	0
 2755 041d 03       		.uleb128 0x3
 2756 041e A9060000 		.4byte	.LASF72
 2757 0422 0B       		.byte	0xb
 2758 0423 4A       		.byte	0x4a
 2759 0424 B4030000 		.4byte	0x3b4
 2760 0428 09       		.uleb128 0x9
 2761 0429 10       		.byte	0x10
 2762 042a 0B       		.byte	0xb
 2763 042b 4C       		.byte	0x4c
 2764 042c 6D040000 		.4byte	0x46d
 2765 0430 0B       		.uleb128 0xb
 2766 0431 D7040000 		.4byte	.LASF73
 2767 0435 0B       		.byte	0xb
 2768 0436 4D       		.byte	0x4d
 2769 0437 C9000000 		.4byte	0xc9
 2770 043b 00       		.byte	0
 2771 043c 0B       		.uleb128 0xb
 2772 043d 74000000 		.4byte	.LASF74
 2773 0441 0B       		.byte	0xb
 2774 0442 4E       		.byte	0x4e
 2775 0443 C9000000 		.4byte	0xc9
 2776 0447 04       		.byte	0x4
 2777 0448 0B       		.uleb128 0xb
 2778 0449 56020000 		.4byte	.LASF75
 2779 044d 0B       		.byte	0xb
 2780 044e 4F       		.byte	0x4f
 2781 044f C9000000 		.4byte	0xc9
 2782 0453 08       		.byte	0x8
 2783 0454 0B       		.uleb128 0xb
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 66


 2784 0455 E5020000 		.4byte	.LASF76
 2785 0459 0B       		.byte	0xb
 2786 045a 50       		.byte	0x50
 2787 045b 8D000000 		.4byte	0x8d
 2788 045f 0C       		.byte	0xc
 2789 0460 0B       		.uleb128 0xb
 2790 0461 C8060000 		.4byte	.LASF42
 2791 0465 0B       		.byte	0xb
 2792 0466 51       		.byte	0x51
 2793 0467 81000000 		.4byte	0x81
 2794 046b 0E       		.byte	0xe
 2795 046c 00       		.byte	0
 2796 046d 03       		.uleb128 0x3
 2797 046e 1B070000 		.4byte	.LASF77
 2798 0472 0B       		.byte	0xb
 2799 0473 53       		.byte	0x53
 2800 0474 28040000 		.4byte	0x428
 2801 0478 09       		.uleb128 0x9
 2802 0479 06       		.byte	0x6
 2803 047a 0B       		.byte	0xb
 2804 047b 56       		.byte	0x56
 2805 047c C9040000 		.4byte	0x4c9
 2806 0480 0B       		.uleb128 0xb
 2807 0481 83020000 		.4byte	.LASF78
 2808 0485 0B       		.byte	0xb
 2809 0486 58       		.byte	0x58
 2810 0487 81000000 		.4byte	0x81
 2811 048b 00       		.byte	0
 2812 048c 0B       		.uleb128 0xb
 2813 048d 26080000 		.4byte	.LASF79
 2814 0491 0B       		.byte	0xb
 2815 0492 5A       		.byte	0x5a
 2816 0493 C9040000 		.4byte	0x4c9
 2817 0497 01       		.byte	0x1
 2818 0498 0B       		.uleb128 0xb
 2819 0499 73080000 		.4byte	.LASF80
 2820 049d 0B       		.byte	0xb
 2821 049e 5C       		.byte	0x5c
 2822 049f 81000000 		.4byte	0x81
 2823 04a3 02       		.byte	0x2
 2824 04a4 0B       		.uleb128 0xb
 2825 04a5 17060000 		.4byte	.LASF81
 2826 04a9 0B       		.byte	0xb
 2827 04aa 5E       		.byte	0x5e
 2828 04ab 81000000 		.4byte	0x81
 2829 04af 03       		.byte	0x3
 2830 04b0 0B       		.uleb128 0xb
 2831 04b1 1D010000 		.4byte	.LASF82
 2832 04b5 0B       		.byte	0xb
 2833 04b6 61       		.byte	0x61
 2834 04b7 81000000 		.4byte	0x81
 2835 04bb 04       		.byte	0x4
 2836 04bc 0A       		.uleb128 0xa
 2837 04bd 67707300 		.ascii	"gps\000"
 2838 04c1 0B       		.byte	0xb
 2839 04c2 63       		.byte	0x63
 2840 04c3 81000000 		.4byte	0x81
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 67


 2841 04c7 05       		.byte	0x5
 2842 04c8 00       		.byte	0
 2843 04c9 02       		.uleb128 0x2
 2844 04ca 01       		.byte	0x1
 2845 04cb 02       		.byte	0x2
 2846 04cc CA050000 		.4byte	.LASF83
 2847 04d0 03       		.uleb128 0x3
 2848 04d1 75040000 		.4byte	.LASF84
 2849 04d5 0B       		.byte	0xb
 2850 04d6 65       		.byte	0x65
 2851 04d7 78040000 		.4byte	0x478
 2852 04db 09       		.uleb128 0x9
 2853 04dc 06       		.byte	0x6
 2854 04dd 0C       		.byte	0xc
 2855 04de 2D       		.byte	0x2d
 2856 04df 14050000 		.4byte	0x514
 2857 04e3 0B       		.uleb128 0xb
 2858 04e4 C6020000 		.4byte	.LASF85
 2859 04e8 0C       		.byte	0xc
 2860 04e9 2F       		.byte	0x2f
 2861 04ea 8D000000 		.4byte	0x8d
 2862 04ee 00       		.byte	0
 2863 04ef 0B       		.uleb128 0xb
 2864 04f0 10080000 		.4byte	.LASF86
 2865 04f4 0C       		.byte	0xc
 2866 04f5 30       		.byte	0x30
 2867 04f6 B1000000 		.4byte	0xb1
 2868 04fa 02       		.byte	0x2
 2869 04fb 0B       		.uleb128 0xb
 2870 04fc 02080000 		.4byte	.LASF87
 2871 0500 0C       		.byte	0xc
 2872 0501 31       		.byte	0x31
 2873 0502 81000000 		.4byte	0x81
 2874 0506 04       		.byte	0x4
 2875 0507 0B       		.uleb128 0xb
 2876 0508 51000000 		.4byte	.LASF88
 2877 050c 0C       		.byte	0xc
 2878 050d 32       		.byte	0x32
 2879 050e 81000000 		.4byte	0x81
 2880 0512 05       		.byte	0x5
 2881 0513 00       		.byte	0
 2882 0514 03       		.uleb128 0x3
 2883 0515 3B020000 		.4byte	.LASF89
 2884 0519 0C       		.byte	0xc
 2885 051a 35       		.byte	0x35
 2886 051b 1F050000 		.4byte	0x51f
 2887 051f 0C       		.uleb128 0xc
 2888 0520 DB040000 		.4byte	0x4db
 2889 0524 09       		.uleb128 0x9
 2890 0525 1C       		.byte	0x1c
 2891 0526 0C       		.byte	0xc
 2892 0527 38       		.byte	0x38
 2893 0528 45050000 		.4byte	0x545
 2894 052c 0B       		.uleb128 0xb
 2895 052d EF030000 		.4byte	.LASF90
 2896 0531 0C       		.byte	0xc
 2897 0532 3A       		.byte	0x3a
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 68


 2898 0533 45050000 		.4byte	0x545
 2899 0537 00       		.byte	0
 2900 0538 0B       		.uleb128 0xb
 2901 0539 65080000 		.4byte	.LASF91
 2902 053d 0C       		.byte	0xc
 2903 053e 3B       		.byte	0x3b
 2904 053f F2000000 		.4byte	0xf2
 2905 0543 04       		.byte	0x4
 2906 0544 00       		.byte	0
 2907 0545 06       		.uleb128 0x6
 2908 0546 04       		.byte	0x4
 2909 0547 A9030000 		.4byte	0x3a9
 2910 054b 03       		.uleb128 0x3
 2911 054c 6A040000 		.4byte	.LASF92
 2912 0550 0C       		.byte	0xc
 2913 0551 3D       		.byte	0x3d
 2914 0552 24050000 		.4byte	0x524
 2915 0556 09       		.uleb128 0x9
 2916 0557 68       		.byte	0x68
 2917 0558 0C       		.byte	0xc
 2918 0559 43       		.byte	0x43
 2919 055a 77050000 		.4byte	0x577
 2920 055e 0B       		.uleb128 0xb
 2921 055f FA030000 		.4byte	.LASF93
 2922 0563 0C       		.byte	0xc
 2923 0564 48       		.byte	0x48
 2924 0565 77050000 		.4byte	0x577
 2925 0569 00       		.byte	0
 2926 056a 0B       		.uleb128 0xb
 2927 056b DE030000 		.4byte	.LASF94
 2928 056f 0C       		.byte	0xc
 2929 0570 49       		.byte	0x49
 2930 0571 68000000 		.4byte	0x68
 2931 0575 64       		.byte	0x64
 2932 0576 00       		.byte	0
 2933 0577 07       		.uleb128 0x7
 2934 0578 D7000000 		.4byte	0xd7
 2935 057c 87050000 		.4byte	0x587
 2936 0580 08       		.uleb128 0x8
 2937 0581 E5000000 		.4byte	0xe5
 2938 0585 63       		.byte	0x63
 2939 0586 00       		.byte	0
 2940 0587 03       		.uleb128 0x3
 2941 0588 E0040000 		.4byte	.LASF95
 2942 058c 0C       		.byte	0xc
 2943 058d 4F       		.byte	0x4f
 2944 058e 56050000 		.4byte	0x556
 2945 0592 0F       		.uleb128 0xf
 2946 0593 69000000 		.4byte	.LASF169
 2947 0597 01       		.byte	0x1
 2948 0598 14       		.byte	0x14
 2949 0599 00000000 		.4byte	.LFB64
 2950 059d 0C000000 		.4byte	.LFE64-.LFB64
 2951 05a1 01       		.uleb128 0x1
 2952 05a2 9C       		.byte	0x9c
 2953 05a3 10       		.uleb128 0x10
 2954 05a4 55080000 		.4byte	.LASF109
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 69


 2955 05a8 01       		.byte	0x1
 2956 05a9 28       		.byte	0x28
 2957 05aa 00000000 		.4byte	.LFB65
 2958 05ae 2C010000 		.4byte	.LFE65-.LFB65
 2959 05b2 01       		.uleb128 0x1
 2960 05b3 9C       		.byte	0x9c
 2961 05b4 E3050000 		.4byte	0x5e3
 2962 05b8 11       		.uleb128 0x11
 2963 05b9 21070000 		.4byte	.LASF96
 2964 05bd 01       		.byte	0x1
 2965 05be 3C       		.byte	0x3c
 2966 05bf E3050000 		.4byte	0x5e3
 2967 05c3 02       		.uleb128 0x2
 2968 05c4 91       		.byte	0x91
 2969 05c5 64       		.sleb128 -28
 2970 05c6 11       		.uleb128 0x11
 2971 05c7 2F080000 		.4byte	.LASF97
 2972 05cb 01       		.byte	0x1
 2973 05cc 59       		.byte	0x59
 2974 05cd F3050000 		.4byte	0x5f3
 2975 05d1 02       		.uleb128 0x2
 2976 05d2 91       		.byte	0x91
 2977 05d3 58       		.sleb128 -40
 2978 05d4 11       		.uleb128 0x11
 2979 05d5 8E030000 		.4byte	.LASF98
 2980 05d9 01       		.byte	0x1
 2981 05da 5E       		.byte	0x5e
 2982 05db 81000000 		.4byte	0x81
 2983 05df 02       		.uleb128 0x2
 2984 05e0 91       		.byte	0x91
 2985 05e1 6F       		.sleb128 -17
 2986 05e2 00       		.byte	0
 2987 05e3 07       		.uleb128 0x7
 2988 05e4 99000000 		.4byte	0x99
 2989 05e8 F3050000 		.4byte	0x5f3
 2990 05ec 08       		.uleb128 0x8
 2991 05ed E5000000 		.4byte	0xe5
 2992 05f1 01       		.byte	0x1
 2993 05f2 00       		.byte	0
 2994 05f3 07       		.uleb128 0x7
 2995 05f4 D7000000 		.4byte	0xd7
 2996 05f8 03060000 		.4byte	0x603
 2997 05fc 08       		.uleb128 0x8
 2998 05fd E5000000 		.4byte	0xe5
 2999 0601 09       		.byte	0x9
 3000 0602 00       		.byte	0
 3001 0603 12       		.uleb128 0x12
 3002 0604 07040000 		.4byte	.LASF100
 3003 0608 01       		.byte	0x1
 3004 0609 68       		.byte	0x68
 3005 060a 68000000 		.4byte	0x68
 3006 060e 00000000 		.4byte	.LFB66
 3007 0612 64000000 		.4byte	.LFE66-.LFB66
 3008 0616 01       		.uleb128 0x1
 3009 0617 9C       		.byte	0x9c
 3010 0618 2B060000 		.4byte	0x62b
 3011 061c 11       		.uleb128 0x11
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 70


 3012 061d AE050000 		.4byte	.LASF99
 3013 0621 01       		.byte	0x1
 3014 0622 82       		.byte	0x82
 3015 0623 81000000 		.4byte	0x81
 3016 0627 02       		.uleb128 0x2
 3017 0628 91       		.byte	0x91
 3018 0629 77       		.sleb128 -9
 3019 062a 00       		.byte	0
 3020 062b 13       		.uleb128 0x13
 3021 062c 77070000 		.4byte	.LASF170
 3022 0630 01       		.byte	0x1
 3023 0631 99       		.byte	0x99
 3024 0632 00000000 		.4byte	.LFB67
 3025 0636 2A000000 		.4byte	.LFE67-.LFB67
 3026 063a 01       		.uleb128 0x1
 3027 063b 9C       		.byte	0x9c
 3028 063c 14       		.uleb128 0x14
 3029 063d 49030000 		.4byte	.LASF101
 3030 0641 01       		.byte	0x1
 3031 0642 BE       		.byte	0xbe
 3032 0643 00000000 		.4byte	.LFB68
 3033 0647 50000000 		.4byte	.LFE68-.LFB68
 3034 064b 01       		.uleb128 0x1
 3035 064c 9C       		.byte	0x9c
 3036 064d 60060000 		.4byte	0x660
 3037 0651 15       		.uleb128 0x15
 3038 0652 8C040000 		.4byte	.LASF102
 3039 0656 01       		.byte	0x1
 3040 0657 BE       		.byte	0xbe
 3041 0658 81000000 		.4byte	0x81
 3042 065c 02       		.uleb128 0x2
 3043 065d 91       		.byte	0x91
 3044 065e 77       		.sleb128 -9
 3045 065f 00       		.byte	0
 3046 0660 16       		.uleb128 0x16
 3047 0661 4A080000 		.4byte	.LASF106
 3048 0665 01       		.byte	0x1
 3049 0666 D5       		.byte	0xd5
 3050 0667 81000000 		.4byte	0x81
 3051 066b 00000000 		.4byte	.LFB69
 3052 066f 48000000 		.4byte	.LFE69-.LFB69
 3053 0673 01       		.uleb128 0x1
 3054 0674 9C       		.byte	0x9c
 3055 0675 96060000 		.4byte	0x696
 3056 0679 15       		.uleb128 0x15
 3057 067a B5040000 		.4byte	.LASF103
 3058 067e 01       		.byte	0x1
 3059 067f D5       		.byte	0xd5
 3060 0680 96060000 		.4byte	0x696
 3061 0684 02       		.uleb128 0x2
 3062 0685 91       		.byte	0x91
 3063 0686 74       		.sleb128 -12
 3064 0687 15       		.uleb128 0x15
 3065 0688 8C040000 		.4byte	.LASF102
 3066 068c 01       		.byte	0x1
 3067 068d D5       		.byte	0xd5
 3068 068e 81000000 		.4byte	0x81
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 71


 3069 0692 02       		.uleb128 0x2
 3070 0693 91       		.byte	0x91
 3071 0694 73       		.sleb128 -13
 3072 0695 00       		.byte	0
 3073 0696 06       		.uleb128 0x6
 3074 0697 04       		.byte	0x4
 3075 0698 14050000 		.4byte	0x514
 3076 069c 17       		.uleb128 0x17
 3077 069d 00060000 		.4byte	.LASF104
 3078 06a1 01       		.byte	0x1
 3079 06a2 EA       		.byte	0xea
 3080 06a3 00000000 		.4byte	.LFB70
 3081 06a7 1E000000 		.4byte	.LFE70-.LFB70
 3082 06ab 01       		.uleb128 0x1
 3083 06ac 9C       		.byte	0x9c
 3084 06ad C0060000 		.4byte	0x6c0
 3085 06b1 15       		.uleb128 0x15
 3086 06b2 5E060000 		.4byte	.LASF105
 3087 06b6 01       		.byte	0x1
 3088 06b7 EA       		.byte	0xea
 3089 06b8 96060000 		.4byte	0x696
 3090 06bc 02       		.uleb128 0x2
 3091 06bd 91       		.byte	0x91
 3092 06be 74       		.sleb128 -12
 3093 06bf 00       		.byte	0
 3094 06c0 18       		.uleb128 0x18
 3095 06c1 3D050000 		.4byte	.LASF107
 3096 06c5 01       		.byte	0x1
 3097 06c6 F3       		.byte	0xf3
 3098 06c7 14050000 		.4byte	0x514
 3099 06cb 00000000 		.4byte	.LFB71
 3100 06cf 46000000 		.4byte	.LFE71-.LFB71
 3101 06d3 01       		.uleb128 0x1
 3102 06d4 9C       		.byte	0x9c
 3103 06d5 12070000 		.4byte	0x712
 3104 06d9 15       		.uleb128 0x15
 3105 06da C6020000 		.4byte	.LASF85
 3106 06de 01       		.byte	0x1
 3107 06df F3       		.byte	0xf3
 3108 06e0 8D000000 		.4byte	0x8d
 3109 06e4 02       		.uleb128 0x2
 3110 06e5 91       		.byte	0x91
 3111 06e6 6A       		.sleb128 -22
 3112 06e7 15       		.uleb128 0x15
 3113 06e8 02080000 		.4byte	.LASF87
 3114 06ec 01       		.byte	0x1
 3115 06ed F3       		.byte	0xf3
 3116 06ee 81000000 		.4byte	0x81
 3117 06f2 02       		.uleb128 0x2
 3118 06f3 91       		.byte	0x91
 3119 06f4 69       		.sleb128 -23
 3120 06f5 15       		.uleb128 0x15
 3121 06f6 51000000 		.4byte	.LASF88
 3122 06fa 01       		.byte	0x1
 3123 06fb F3       		.byte	0xf3
 3124 06fc 81000000 		.4byte	0x81
 3125 0700 02       		.uleb128 0x2
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 72


 3126 0701 91       		.byte	0x91
 3127 0702 68       		.sleb128 -24
 3128 0703 11       		.uleb128 0x11
 3129 0704 A1070000 		.4byte	.LASF108
 3130 0708 01       		.byte	0x1
 3131 0709 F6       		.byte	0xf6
 3132 070a 14050000 		.4byte	0x514
 3133 070e 02       		.uleb128 0x2
 3134 070f 91       		.byte	0x91
 3135 0710 70       		.sleb128 -16
 3136 0711 00       		.byte	0
 3137 0712 19       		.uleb128 0x19
 3138 0713 6D060000 		.4byte	.LASF110
 3139 0717 01       		.byte	0x1
 3140 0718 0C01     		.2byte	0x10c
 3141 071a 00000000 		.4byte	.LFB72
 3142 071e 04010000 		.4byte	.LFE72-.LFB72
 3143 0722 01       		.uleb128 0x1
 3144 0723 9C       		.byte	0x9c
 3145 0724 79070000 		.4byte	0x779
 3146 0728 1A       		.uleb128 0x1a
 3147 0729 54010000 		.4byte	.LASF111
 3148 072d 01       		.byte	0x1
 3149 072e 1401     		.2byte	0x114
 3150 0730 C9010000 		.4byte	0x1c9
 3151 0734 03       		.uleb128 0x3
 3152 0735 91       		.byte	0x91
 3153 0736 EC7C     		.sleb128 -404
 3154 0738 1A       		.uleb128 0x1a
 3155 0739 DC070000 		.4byte	.LASF112
 3156 073d 01       		.byte	0x1
 3157 073e 1801     		.2byte	0x118
 3158 0740 C9010000 		.4byte	0x1c9
 3159 0744 03       		.uleb128 0x3
 3160 0745 91       		.byte	0x91
 3161 0746 E879     		.sleb128 -792
 3162 0748 1A       		.uleb128 0x1a
 3163 0749 0C010000 		.4byte	.LASF113
 3164 074d 01       		.byte	0x1
 3165 074e 1C01     		.2byte	0x11c
 3166 0750 C9010000 		.4byte	0x1c9
 3167 0754 03       		.uleb128 0x3
 3168 0755 91       		.byte	0x91
 3169 0756 E476     		.sleb128 -1180
 3170 0758 1A       		.uleb128 0x1a
 3171 0759 35040000 		.4byte	.LASF114
 3172 075d 01       		.byte	0x1
 3173 075e 2001     		.2byte	0x120
 3174 0760 C9010000 		.4byte	0x1c9
 3175 0764 03       		.uleb128 0x3
 3176 0765 91       		.byte	0x91
 3177 0766 E073     		.sleb128 -1568
 3178 0768 1A       		.uleb128 0x1a
 3179 0769 00000000 		.4byte	.LASF115
 3180 076d 01       		.byte	0x1
 3181 076e 2601     		.2byte	0x126
 3182 0770 C9010000 		.4byte	0x1c9
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 73


 3183 0774 03       		.uleb128 0x3
 3184 0775 91       		.byte	0x91
 3185 0776 DC70     		.sleb128 -1956
 3186 0778 00       		.byte	0
 3187 0779 1B       		.uleb128 0x1b
 3188 077a 60080000 		.4byte	.LASF171
 3189 077e 01       		.byte	0x1
 3190 077f 3401     		.2byte	0x134
 3191 0781 68000000 		.4byte	0x68
 3192 0785 00000000 		.4byte	.LFB73
 3193 0789 1E000000 		.4byte	.LFE73-.LFB73
 3194 078d 01       		.uleb128 0x1
 3195 078e 9C       		.byte	0x9c
 3196 078f 1C       		.uleb128 0x1c
 3197 0790 8D020000 		.4byte	.LASF116
 3198 0794 01       		.byte	0x1
 3199 0795 4A01     		.2byte	0x14a
 3200 0797 81000000 		.4byte	0x81
 3201 079b 00000000 		.4byte	.LFB74
 3202 079f 54040000 		.4byte	.LFE74-.LFB74
 3203 07a3 01       		.uleb128 0x1
 3204 07a4 9C       		.byte	0x9c
 3205 07a5 E9080000 		.4byte	0x8e9
 3206 07a9 1D       		.uleb128 0x1d
 3207 07aa 62000000 		.4byte	.LBB2
 3208 07ae D4030000 		.4byte	.LBE2-.LBB2
 3209 07b2 1A       		.uleb128 0x1a
 3210 07b3 50050000 		.4byte	.LASF117
 3211 07b7 01       		.byte	0x1
 3212 07b8 7A01     		.2byte	0x17a
 3213 07ba 61030000 		.4byte	0x361
 3214 07be 02       		.uleb128 0x2
 3215 07bf 91       		.byte	0x91
 3216 07c0 48       		.sleb128 -56
 3217 07c1 1A       		.uleb128 0x1a
 3218 07c2 65020000 		.4byte	.LASF118
 3219 07c6 01       		.byte	0x1
 3220 07c7 7F01     		.2byte	0x17f
 3221 07c9 61030000 		.4byte	0x361
 3222 07cd 03       		.uleb128 0x3
 3223 07ce 91       		.byte	0x91
 3224 07cf B47F     		.sleb128 -76
 3225 07d1 1A       		.uleb128 0x1a
 3226 07d2 9A030000 		.4byte	.LASF119
 3227 07d6 01       		.byte	0x1
 3228 07d7 9201     		.2byte	0x192
 3229 07d9 8D000000 		.4byte	0x8d
 3230 07dd 02       		.uleb128 0x2
 3231 07de 91       		.byte	0x91
 3232 07df 66       		.sleb128 -26
 3233 07e0 1A       		.uleb128 0x1a
 3234 07e1 20040000 		.4byte	.LASF120
 3235 07e5 01       		.byte	0x1
 3236 07e6 9301     		.2byte	0x193
 3237 07e8 61030000 		.4byte	0x361
 3238 07ec 03       		.uleb128 0x3
 3239 07ed 91       		.byte	0x91
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 74


 3240 07ee A07F     		.sleb128 -96
 3241 07f0 1A       		.uleb128 0x1a
 3242 07f1 10070000 		.4byte	.LASF121
 3243 07f5 01       		.byte	0x1
 3244 07f6 A801     		.2byte	0x1a8
 3245 07f8 E9080000 		.4byte	0x8e9
 3246 07fc 03       		.uleb128 0x3
 3247 07fd 91       		.byte	0x91
 3248 07fe B875     		.sleb128 -1352
 3249 0800 1A       		.uleb128 0x1a
 3250 0801 BC070000 		.4byte	.LASF30
 3251 0805 01       		.byte	0x1
 3252 0806 A901     		.2byte	0x1a9
 3253 0808 81000000 		.4byte	0x81
 3254 080c 02       		.uleb128 0x2
 3255 080d 91       		.byte	0x91
 3256 080e 65       		.sleb128 -27
 3257 080f 1A       		.uleb128 0x1a
 3258 0810 E2060000 		.4byte	.LASF122
 3259 0814 01       		.byte	0x1
 3260 0815 B001     		.2byte	0x1b0
 3261 0817 EC000000 		.4byte	0xec
 3262 081b 02       		.uleb128 0x2
 3263 081c 91       		.byte	0x91
 3264 081d 6C       		.sleb128 -20
 3265 081e 1A       		.uleb128 0x1a
 3266 081f 71010000 		.4byte	.LASF123
 3267 0823 01       		.byte	0x1
 3268 0824 B401     		.2byte	0x1b4
 3269 0826 A5000000 		.4byte	0xa5
 3270 082a 02       		.uleb128 0x2
 3271 082b 91       		.byte	0x91
 3272 082c 64       		.sleb128 -28
 3273 082d 1A       		.uleb128 0x1a
 3274 082e 96020000 		.4byte	.LASF124
 3275 0832 01       		.byte	0x1
 3276 0833 E901     		.2byte	0x1e9
 3277 0835 4C000000 		.4byte	0x4c
 3278 0839 02       		.uleb128 0x2
 3279 083a 91       		.byte	0x91
 3280 083b 5C       		.sleb128 -36
 3281 083c 1E       		.uleb128 0x1e
 3282 083d CE000000 		.4byte	.LBB3
 3283 0841 2C000000 		.4byte	.LBE3-.LBB3
 3284 0845 69080000 		.4byte	0x869
 3285 0849 1A       		.uleb128 0x1a
 3286 084a 99060000 		.4byte	.LASF125
 3287 084e 01       		.byte	0x1
 3288 084f 8701     		.2byte	0x187
 3289 0851 8D000000 		.4byte	0x8d
 3290 0855 02       		.uleb128 0x2
 3291 0856 91       		.byte	0x91
 3292 0857 68       		.sleb128 -24
 3293 0858 1A       		.uleb128 0x1a
 3294 0859 FA010000 		.4byte	.LASF126
 3295 085d 01       		.byte	0x1
 3296 085e 8801     		.2byte	0x188
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 75


 3297 0860 61030000 		.4byte	0x361
 3298 0864 03       		.uleb128 0x3
 3299 0865 91       		.byte	0x91
 3300 0866 8C7F     		.sleb128 -116
 3301 0868 00       		.byte	0
 3302 0869 1E       		.uleb128 0x1e
 3303 086a FC000000 		.4byte	.LBB4
 3304 086e 20000000 		.4byte	.LBE4-.LBB4
 3305 0872 87080000 		.4byte	0x887
 3306 0876 1A       		.uleb128 0x1a
 3307 0877 FA010000 		.4byte	.LASF126
 3308 087b 01       		.byte	0x1
 3309 087c 8C01     		.2byte	0x18c
 3310 087e 61030000 		.4byte	0x361
 3311 0882 03       		.uleb128 0x3
 3312 0883 91       		.byte	0x91
 3313 0884 F87E     		.sleb128 -136
 3314 0886 00       		.byte	0
 3315 0887 1E       		.uleb128 0x1e
 3316 0888 3C020000 		.4byte	.LBB5
 3317 088c BC000000 		.4byte	.LBE5-.LBB5
 3318 0890 BE080000 		.4byte	0x8be
 3319 0894 1A       		.uleb128 0x1a
 3320 0895 49050000 		.4byte	.LASF127
 3321 0899 01       		.byte	0x1
 3322 089a B901     		.2byte	0x1b9
 3323 089c A5000000 		.4byte	0xa5
 3324 08a0 02       		.uleb128 0x2
 3325 08a1 91       		.byte	0x91
 3326 08a2 6B       		.sleb128 -21
 3327 08a3 1D       		.uleb128 0x1d
 3328 08a4 44020000 		.4byte	.LBB6
 3329 08a8 9A000000 		.4byte	.LBE6-.LBB6
 3330 08ac 1A       		.uleb128 0x1a
 3331 08ad 67030000 		.4byte	.LASF128
 3332 08b1 01       		.byte	0x1
 3333 08b2 BB01     		.2byte	0x1bb
 3334 08b4 F9080000 		.4byte	0x8f9
 3335 08b8 03       		.uleb128 0x3
 3336 08b9 91       		.byte	0x91
 3337 08ba 8077     		.sleb128 -1152
 3338 08bc 00       		.byte	0
 3339 08bd 00       		.byte	0
 3340 08be 1D       		.uleb128 0x1d
 3341 08bf 12030000 		.4byte	.LBB7
 3342 08c3 3A000000 		.4byte	.LBE7-.LBB7
 3343 08c7 1A       		.uleb128 0x1a
 3344 08c8 73020000 		.4byte	.LASF129
 3345 08cc 01       		.byte	0x1
 3346 08cd DB01     		.2byte	0x1db
 3347 08cf 68000000 		.4byte	0x68
 3348 08d3 02       		.uleb128 0x2
 3349 08d4 91       		.byte	0x91
 3350 08d5 60       		.sleb128 -32
 3351 08d6 1A       		.uleb128 0x1a
 3352 08d7 0B060000 		.4byte	.LASF130
 3353 08db 01       		.byte	0x1
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 76


 3354 08dc DC01     		.2byte	0x1dc
 3355 08de F3050000 		.4byte	0x5f3
 3356 08e2 03       		.uleb128 0x3
 3357 08e3 91       		.byte	0x91
 3358 08e4 EC7E     		.sleb128 -148
 3359 08e6 00       		.byte	0
 3360 08e7 00       		.byte	0
 3361 08e8 00       		.byte	0
 3362 08e9 07       		.uleb128 0x7
 3363 08ea D7000000 		.4byte	0xd7
 3364 08ee F9080000 		.4byte	0x8f9
 3365 08f2 08       		.uleb128 0x8
 3366 08f3 E5000000 		.4byte	0xe5
 3367 08f7 C7       		.byte	0xc7
 3368 08f8 00       		.byte	0
 3369 08f9 07       		.uleb128 0x7
 3370 08fa D7000000 		.4byte	0xd7
 3371 08fe 0A090000 		.4byte	0x90a
 3372 0902 1F       		.uleb128 0x1f
 3373 0903 E5000000 		.4byte	0xe5
 3374 0907 E803     		.2byte	0x3e8
 3375 0909 00       		.byte	0
 3376 090a 1C       		.uleb128 0x1c
 3377 090b 8A050000 		.4byte	.LASF131
 3378 090f 01       		.byte	0x1
 3379 0910 FE01     		.2byte	0x1fe
 3380 0912 81000000 		.4byte	0x81
 3381 0916 00000000 		.4byte	.LFB75
 3382 091a 44000000 		.4byte	.LFE75-.LFB75
 3383 091e 01       		.uleb128 0x1
 3384 091f 9C       		.byte	0x9c
 3385 0920 3E090000 		.4byte	0x93e
 3386 0924 1D       		.uleb128 0x1d
 3387 0925 20000000 		.4byte	.LBB8
 3388 0929 1A000000 		.4byte	.LBE8-.LBB8
 3389 092d 1A       		.uleb128 0x1a
 3390 092e 96020000 		.4byte	.LASF124
 3391 0932 01       		.byte	0x1
 3392 0933 0902     		.2byte	0x209
 3393 0935 4C000000 		.4byte	0x4c
 3394 0939 02       		.uleb128 0x2
 3395 093a 91       		.byte	0x91
 3396 093b 74       		.sleb128 -12
 3397 093c 00       		.byte	0
 3398 093d 00       		.byte	0
 3399 093e 1C       		.uleb128 0x1c
 3400 093f C8030000 		.4byte	.LASF132
 3401 0943 01       		.byte	0x1
 3402 0944 1E02     		.2byte	0x21e
 3403 0946 81000000 		.4byte	0x81
 3404 094a 00000000 		.4byte	.LFB76
 3405 094e 7C030000 		.4byte	.LFE76-.LFB76
 3406 0952 01       		.uleb128 0x1
 3407 0953 9C       		.byte	0x9c
 3408 0954 CF090000 		.4byte	0x9cf
 3409 0958 1A       		.uleb128 0x1a
 3410 0959 10050000 		.4byte	.LASF59
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 77


 3411 095d 01       		.byte	0x1
 3412 095e 2102     		.2byte	0x221
 3413 0960 4C000000 		.4byte	0x4c
 3414 0964 02       		.uleb128 0x2
 3415 0965 91       		.byte	0x91
 3416 0966 6C       		.sleb128 -20
 3417 0967 1A       		.uleb128 0x1a
 3418 0968 E8060000 		.4byte	.LASF133
 3419 096c 01       		.byte	0x1
 3420 096d 2202     		.2byte	0x222
 3421 096f CF090000 		.4byte	0x9cf
 3422 0973 02       		.uleb128 0x2
 3423 0974 91       		.byte	0x91
 3424 0975 4C       		.sleb128 -52
 3425 0976 1A       		.uleb128 0x1a
 3426 0977 F7020000 		.4byte	.LASF58
 3427 097b 01       		.byte	0x1
 3428 097c 2602     		.2byte	0x226
 3429 097e 61030000 		.4byte	0x361
 3430 0982 03       		.uleb128 0x3
 3431 0983 91       		.byte	0x91
 3432 0984 B87F     		.sleb128 -72
 3433 0986 1A       		.uleb128 0x1a
 3434 0987 72030000 		.4byte	.LASF134
 3435 098b 01       		.byte	0x1
 3436 098c 4402     		.2byte	0x244
 3437 098e 6D020000 		.4byte	0x26d
 3438 0992 03       		.uleb128 0x3
 3439 0993 91       		.byte	0x91
 3440 0994 A47F     		.sleb128 -92
 3441 0996 1E       		.uleb128 0x1e
 3442 0997 22000000 		.4byte	.LBB9
 3443 099b 78000000 		.4byte	.LBE9-.LBB9
 3444 099f B4090000 		.4byte	0x9b4
 3445 09a3 1A       		.uleb128 0x1a
 3446 09a4 2A070000 		.4byte	.LASF135
 3447 09a8 01       		.byte	0x1
 3448 09a9 2C02     		.2byte	0x22c
 3449 09ab 1D020000 		.4byte	0x21d
 3450 09af 03       		.uleb128 0x3
 3451 09b0 91       		.byte	0x91
 3452 09b1 887F     		.sleb128 -120
 3453 09b3 00       		.byte	0
 3454 09b4 1D       		.uleb128 0x1d
 3455 09b5 1E010000 		.4byte	.LBB10
 3456 09b9 EE000000 		.4byte	.LBE10-.LBB10
 3457 09bd 1A       		.uleb128 0x1a
 3458 09be B1070000 		.4byte	.LASF136
 3459 09c2 01       		.byte	0x1
 3460 09c3 5F02     		.2byte	0x25f
 3461 09c5 B1020000 		.4byte	0x2b1
 3462 09c9 03       		.uleb128 0x3
 3463 09ca 91       		.byte	0x91
 3464 09cb F87E     		.sleb128 -136
 3465 09cd 00       		.byte	0
 3466 09ce 00       		.byte	0
 3467 09cf 07       		.uleb128 0x7
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 78


 3468 09d0 D7000000 		.4byte	0xd7
 3469 09d4 DF090000 		.4byte	0x9df
 3470 09d8 08       		.uleb128 0x8
 3471 09d9 E5000000 		.4byte	0xe5
 3472 09dd 1F       		.byte	0x1f
 3473 09de 00       		.byte	0
 3474 09df 20       		.uleb128 0x20
 3475 09e0 35030000 		.4byte	.LASF137
 3476 09e4 01       		.byte	0x1
 3477 09e5 A102     		.2byte	0x2a1
 3478 09e7 81000000 		.4byte	0x81
 3479 09eb 00000000 		.4byte	.LFB77
 3480 09ef 74000000 		.4byte	.LFE77-.LFB77
 3481 09f3 01       		.uleb128 0x1
 3482 09f4 9C       		.byte	0x9c
 3483 09f5 250A0000 		.4byte	0xa25
 3484 09f9 21       		.uleb128 0x21
 3485 09fa 10050000 		.4byte	.LASF59
 3486 09fe 01       		.byte	0x1
 3487 09ff A102     		.2byte	0x2a1
 3488 0a01 4C000000 		.4byte	0x4c
 3489 0a05 02       		.uleb128 0x2
 3490 0a06 91       		.byte	0x91
 3491 0a07 64       		.sleb128 -28
 3492 0a08 22       		.uleb128 0x22
 3493 0a09 7400     		.ascii	"t\000"
 3494 0a0b 01       		.byte	0x1
 3495 0a0c A802     		.2byte	0x2a8
 3496 0a0e 250A0000 		.4byte	0xa25
 3497 0a12 02       		.uleb128 0x2
 3498 0a13 91       		.byte	0x91
 3499 0a14 74       		.sleb128 -12
 3500 0a15 1A       		.uleb128 0x1a
 3501 0a16 EF040000 		.4byte	.LASF138
 3502 0a1a 01       		.byte	0x1
 3503 0a1b AD02     		.2byte	0x2ad
 3504 0a1d 6B010000 		.4byte	0x16b
 3505 0a21 02       		.uleb128 0x2
 3506 0a22 91       		.byte	0x91
 3507 0a23 68       		.sleb128 -24
 3508 0a24 00       		.byte	0
 3509 0a25 06       		.uleb128 0x6
 3510 0a26 04       		.byte	0x4
 3511 0a27 BC020000 		.4byte	0x2bc
 3512 0a2b 20       		.uleb128 0x20
 3513 0a2c D5020000 		.4byte	.LASF139
 3514 0a30 01       		.byte	0x1
 3515 0a31 CA02     		.2byte	0x2ca
 3516 0a33 81000000 		.4byte	0x81
 3517 0a37 00000000 		.4byte	.LFB78
 3518 0a3b 38010000 		.4byte	.LFE78-.LFB78
 3519 0a3f 01       		.uleb128 0x1
 3520 0a40 9C       		.byte	0x9c
 3521 0a41 A40A0000 		.4byte	0xaa4
 3522 0a45 21       		.uleb128 0x21
 3523 0a46 FD020000 		.4byte	.LASF140
 3524 0a4a 01       		.byte	0x1
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 79


 3525 0a4b CA02     		.2byte	0x2ca
 3526 0a4d EC000000 		.4byte	0xec
 3527 0a51 03       		.uleb128 0x3
 3528 0a52 91       		.byte	0x91
 3529 0a53 9C7E     		.sleb128 -228
 3530 0a55 21       		.uleb128 0x21
 3531 0a56 F2020000 		.4byte	.LASF141
 3532 0a5a 01       		.byte	0x1
 3533 0a5b CA02     		.2byte	0x2ca
 3534 0a5d 68000000 		.4byte	0x68
 3535 0a61 03       		.uleb128 0x3
 3536 0a62 91       		.byte	0x91
 3537 0a63 987E     		.sleb128 -232
 3538 0a65 21       		.uleb128 0x21
 3539 0a66 AF040000 		.4byte	.LASF142
 3540 0a6a 01       		.byte	0x1
 3541 0a6b CA02     		.2byte	0x2ca
 3542 0a6d EC000000 		.4byte	0xec
 3543 0a71 03       		.uleb128 0x3
 3544 0a72 91       		.byte	0x91
 3545 0a73 947E     		.sleb128 -236
 3546 0a75 1A       		.uleb128 0x1a
 3547 0a76 EB010000 		.4byte	.LASF143
 3548 0a7a 01       		.byte	0x1
 3549 0a7b CC02     		.2byte	0x2cc
 3550 0a7d 81000000 		.4byte	0x81
 3551 0a81 02       		.uleb128 0x2
 3552 0a82 91       		.byte	0x91
 3553 0a83 77       		.sleb128 -9
 3554 0a84 1A       		.uleb128 0x1a
 3555 0a85 3C000000 		.4byte	.LASF144
 3556 0a89 01       		.byte	0x1
 3557 0a8a D302     		.2byte	0x2d3
 3558 0a8c A40A0000 		.4byte	0xaa4
 3559 0a90 02       		.uleb128 0x2
 3560 0a91 91       		.byte	0x91
 3561 0a92 68       		.sleb128 -24
 3562 0a93 1A       		.uleb128 0x1a
 3563 0a94 10070000 		.4byte	.LASF121
 3564 0a98 01       		.byte	0x1
 3565 0a99 DB02     		.2byte	0x2db
 3566 0a9b E9080000 		.4byte	0x8e9
 3567 0a9f 03       		.uleb128 0x3
 3568 0aa0 91       		.byte	0x91
 3569 0aa1 A07E     		.sleb128 -224
 3570 0aa3 00       		.byte	0
 3571 0aa4 07       		.uleb128 0x7
 3572 0aa5 D7000000 		.4byte	0xd7
 3573 0aa9 B40A0000 		.4byte	0xab4
 3574 0aad 08       		.uleb128 0x8
 3575 0aae E5000000 		.4byte	0xe5
 3576 0ab2 0B       		.byte	0xb
 3577 0ab3 00       		.byte	0
 3578 0ab4 23       		.uleb128 0x23
 3579 0ab5 47010000 		.4byte	.LASF145
 3580 0ab9 0D       		.byte	0xd
 3581 0aba 1207     		.2byte	0x712
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 80


 3582 0abc C00A0000 		.4byte	0xac0
 3583 0ac0 0C       		.uleb128 0xc
 3584 0ac1 76000000 		.4byte	0x76
 3585 0ac5 24       		.uleb128 0x24
 3586 0ac6 2C000000 		.4byte	.LASF146
 3587 0aca 0A       		.byte	0xa
 3588 0acb 11       		.byte	0x11
 3589 0acc C9040000 		.4byte	0x4c9
 3590 0ad0 05       		.uleb128 0x5
 3591 0ad1 03       		.byte	0x3
 3592 0ad2 00000000 		.4byte	buffer_overflow
 3593 0ad6 24       		.uleb128 0x24
 3594 0ad7 96040000 		.4byte	.LASF147
 3595 0adb 0A       		.byte	0xa
 3596 0adc 22       		.byte	0x22
 3597 0add 8D000000 		.4byte	0x8d
 3598 0ae1 05       		.uleb128 0x5
 3599 0ae2 03       		.byte	0x3
 3600 0ae3 00000000 		.4byte	dataPointsInStack
 3601 0ae7 24       		.uleb128 0x24
 3602 0ae8 C3070000 		.4byte	.LASF148
 3603 0aec 0A       		.byte	0xa
 3604 0aed 23       		.byte	0x23
 3605 0aee 8D000000 		.4byte	0x8d
 3606 0af2 05       		.uleb128 0x5
 3607 0af3 03       		.byte	0x3
 3608 0af4 00000000 		.4byte	dataPointsInStackDesired
 3609 0af8 07       		.uleb128 0x7
 3610 0af9 71030000 		.4byte	0x371
 3611 0afd 080B0000 		.4byte	0xb08
 3612 0b01 08       		.uleb128 0x8
 3613 0b02 E5000000 		.4byte	0xe5
 3614 0b06 95       		.byte	0x95
 3615 0b07 00       		.byte	0
 3616 0b08 24       		.uleb128 0x24
 3617 0b09 D9030000 		.4byte	.LASF149
 3618 0b0d 0A       		.byte	0xa
 3619 0b0e 24       		.byte	0x24
 3620 0b0f F80A0000 		.4byte	0xaf8
 3621 0b13 05       		.uleb128 0x5
 3622 0b14 03       		.byte	0x3
 3623 0b15 00000000 		.4byte	data
 3624 0b19 24       		.uleb128 0x24
 3625 0b1a 2E010000 		.4byte	.LASF150
 3626 0b1e 0B       		.byte	0xb
 3627 0b1f 23       		.byte	0x23
 3628 0b20 81000000 		.4byte	0x81
 3629 0b24 05       		.uleb128 0x5
 3630 0b25 03       		.byte	0x3
 3631 0b26 00000000 		.4byte	modem_state
 3632 0b2a 24       		.uleb128 0x24
 3633 0b2b 53040000 		.4byte	.LASF151
 3634 0b2f 0B       		.byte	0xb
 3635 0b30 69       		.byte	0x69
 3636 0b31 BD000000 		.4byte	0xbd
 3637 0b35 05       		.uleb128 0x5
 3638 0b36 03       		.byte	0x3
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 81


 3639 0b37 00000000 		.4byte	modem_start_time_stamp
 3640 0b3b 24       		.uleb128 0x24
 3641 0b3c EF030000 		.4byte	.LASF90
 3642 0b40 0B       		.byte	0xb
 3643 0b41 6A       		.byte	0x6a
 3644 0b42 A9030000 		.4byte	0x3a9
 3645 0b46 05       		.uleb128 0x5
 3646 0b47 03       		.byte	0x3
 3647 0b48 00000000 		.4byte	modem_info
 3648 0b4c 24       		.uleb128 0x24
 3649 0b4d F9060000 		.4byte	.LASF152
 3650 0b51 0B       		.byte	0xb
 3651 0b52 6B       		.byte	0x6b
 3652 0b53 1D040000 		.4byte	0x41d
 3653 0b57 05       		.uleb128 0x5
 3654 0b58 03       		.byte	0x3
 3655 0b59 00000000 		.4byte	modem_stats
 3656 0b5d 24       		.uleb128 0x24
 3657 0b5e 28050000 		.4byte	.LASF153
 3658 0b62 0B       		.byte	0xb
 3659 0b63 6C       		.byte	0x6c
 3660 0b64 D0040000 		.4byte	0x4d0
 3661 0b68 05       		.uleb128 0x5
 3662 0b69 03       		.byte	0x3
 3663 0b6a 00000000 		.4byte	updatable_parameters
 3664 0b6e 24       		.uleb128 0x24
 3665 0b6f 6E070000 		.4byte	.LASF154
 3666 0b73 0B       		.byte	0xb
 3667 0b74 6D       		.byte	0x6d
 3668 0b75 6D040000 		.4byte	0x46d
 3669 0b79 05       		.uleb128 0x5
 3670 0b7a 03       		.byte	0x3
 3671 0b7b 00000000 		.4byte	gps_data
 3672 0b7f 07       		.uleb128 0x7
 3673 0b80 D7000000 		.4byte	0xd7
 3674 0b84 900B0000 		.4byte	0xb90
 3675 0b88 1F       		.uleb128 0x1f
 3676 0b89 E5000000 		.4byte	0xe5
 3677 0b8d 0F27     		.2byte	0x270f
 3678 0b8f 00       		.byte	0
 3679 0b90 24       		.uleb128 0x24
 3680 0b91 68050000 		.4byte	.LASF155
 3681 0b95 0C       		.byte	0xc
 3682 0b96 17       		.byte	0x17
 3683 0b97 7F0B0000 		.4byte	0xb7f
 3684 0b9b 05       		.uleb128 0x5
 3685 0b9c 03       		.byte	0x3
 3686 0b9d 00000000 		.4byte	http_request
 3687 0ba1 24       		.uleb128 0x24
 3688 0ba2 F2070000 		.4byte	.LASF156
 3689 0ba6 0C       		.byte	0xc
 3690 0ba7 18       		.byte	0x18
 3691 0ba8 7F0B0000 		.4byte	0xb7f
 3692 0bac 05       		.uleb128 0x5
 3693 0bad 03       		.byte	0x3
 3694 0bae 00000000 		.4byte	http_body
 3695 0bb2 24       		.uleb128 0x24
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 82


 3696 0bb3 05070000 		.4byte	.LASF157
 3697 0bb7 0C       		.byte	0xc
 3698 0bb8 19       		.byte	0x19
 3699 0bb9 E9080000 		.4byte	0x8e9
 3700 0bbd 05       		.uleb128 0x5
 3701 0bbe 03       		.byte	0x3
 3702 0bbf 00000000 		.4byte	http_route
 3703 0bc3 24       		.uleb128 0x24
 3704 0bc4 46060000 		.4byte	.LASF158
 3705 0bc8 0C       		.byte	0xc
 3706 0bc9 40       		.byte	0x40
 3707 0bca 4B050000 		.4byte	0x54b
 3708 0bce 05       		.uleb128 0x5
 3709 0bcf 03       		.byte	0x3
 3710 0bd0 00000000 		.4byte	system_info
 3711 0bd4 24       		.uleb128 0x24
 3712 0bd5 E6050000 		.4byte	.LASF159
 3713 0bd9 0C       		.byte	0xc
 3714 0bda 52       		.byte	0x52
 3715 0bdb 87050000 		.4byte	0x587
 3716 0bdf 05       		.uleb128 0x5
 3717 0be0 03       		.byte	0x3
 3718 0be1 00000000 		.4byte	system_settings
 3719 0be5 24       		.uleb128 0x24
 3720 0be6 3A010000 		.4byte	.LASF160
 3721 0bea 0C       		.byte	0xc
 3722 0beb 6E       		.byte	0x6e
 3723 0bec 14050000 		.4byte	0x514
 3724 0bf0 05       		.uleb128 0x5
 3725 0bf1 03       		.byte	0x3
 3726 0bf2 00000000 		.4byte	alarmMeasure
 3727 0bf6 24       		.uleb128 0x24
 3728 0bf7 7E010000 		.4byte	.LASF161
 3729 0bfb 0C       		.byte	0xc
 3730 0bfc 6F       		.byte	0x6f
 3731 0bfd 81000000 		.4byte	0x81
 3732 0c01 05       		.uleb128 0x5
 3733 0c02 03       		.byte	0x3
 3734 0c03 00000000 		.4byte	timeToMeasure
 3735 0c07 24       		.uleb128 0x24
 3736 0c08 0A030000 		.4byte	.LASF162
 3737 0c0c 0C       		.byte	0xc
 3738 0c0d 70       		.byte	0x70
 3739 0c0e 14050000 		.4byte	0x514
 3740 0c12 05       		.uleb128 0x5
 3741 0c13 03       		.byte	0x3
 3742 0c14 00000000 		.4byte	alarmSync
 3743 0c18 24       		.uleb128 0x24
 3744 0c19 BB010000 		.4byte	.LASF163
 3745 0c1d 0C       		.byte	0xc
 3746 0c1e 71       		.byte	0x71
 3747 0c1f 81000000 		.4byte	0x81
 3748 0c23 05       		.uleb128 0x5
 3749 0c24 03       		.byte	0x3
 3750 0c25 00000000 		.4byte	timeToSync
 3751 0c29 24       		.uleb128 0x24
 3752 0c2a F9040000 		.4byte	.LASF164
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 83


 3753 0c2e 0C       		.byte	0xc
 3754 0c2f 72       		.byte	0x72
 3755 0c30 81000000 		.4byte	0x81
 3756 0c34 05       		.uleb128 0x5
 3757 0c35 03       		.byte	0x3
 3758 0c36 00000000 		.4byte	timeToSycnRemoteParams
 3759 0c3a 25       		.uleb128 0x25
 3760 0c3b 68657900 		.ascii	"hey\000"
 3761 0c3f 0C       		.byte	0xc
 3762 0c40 73       		.byte	0x73
 3763 0c41 81000000 		.4byte	0x81
 3764 0c45 05       		.uleb128 0x5
 3765 0c46 03       		.byte	0x3
 3766 0c47 00000000 		.4byte	hey
 3767 0c4b 07       		.uleb128 0x7
 3768 0c4c D7000000 		.4byte	0xd7
 3769 0c50 5B0C0000 		.4byte	0xc5b
 3770 0c54 08       		.uleb128 0x8
 3771 0c55 E5000000 		.4byte	0xe5
 3772 0c59 1D       		.byte	0x1d
 3773 0c5a 00       		.byte	0
 3774 0c5b 24       		.uleb128 0x24
 3775 0c5c A0050000 		.4byte	.LASF165
 3776 0c60 01       		.byte	0x1
 3777 0c61 1D       		.byte	0x1d
 3778 0c62 4B0C0000 		.4byte	0xc4b
 3779 0c66 05       		.uleb128 0x5
 3780 0c67 03       		.byte	0x3
 3781 0c68 00000000 		.4byte	Data_fileName
 3782 0c6c 24       		.uleb128 0x24
 3783 0c6d 8E030000 		.4byte	.LASF98
 3784 0c71 01       		.byte	0x1
 3785 0c72 1E       		.byte	0x1e
 3786 0c73 81000000 		.4byte	0x81
 3787 0c77 05       		.uleb128 0x5
 3788 0c78 03       		.byte	0x3
 3789 0c79 00000000 		.4byte	try_counter
 3790 0c7d 00       		.byte	0
 3791              		.section	.debug_abbrev,"",%progbits
 3792              	.Ldebug_abbrev0:
 3793 0000 01       		.uleb128 0x1
 3794 0001 11       		.uleb128 0x11
 3795 0002 01       		.byte	0x1
 3796 0003 25       		.uleb128 0x25
 3797 0004 0E       		.uleb128 0xe
 3798 0005 13       		.uleb128 0x13
 3799 0006 0B       		.uleb128 0xb
 3800 0007 03       		.uleb128 0x3
 3801 0008 0E       		.uleb128 0xe
 3802 0009 1B       		.uleb128 0x1b
 3803 000a 0E       		.uleb128 0xe
 3804 000b 55       		.uleb128 0x55
 3805 000c 17       		.uleb128 0x17
 3806 000d 11       		.uleb128 0x11
 3807 000e 01       		.uleb128 0x1
 3808 000f 10       		.uleb128 0x10
 3809 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 84


 3810 0011 00       		.byte	0
 3811 0012 00       		.byte	0
 3812 0013 02       		.uleb128 0x2
 3813 0014 24       		.uleb128 0x24
 3814 0015 00       		.byte	0
 3815 0016 0B       		.uleb128 0xb
 3816 0017 0B       		.uleb128 0xb
 3817 0018 3E       		.uleb128 0x3e
 3818 0019 0B       		.uleb128 0xb
 3819 001a 03       		.uleb128 0x3
 3820 001b 0E       		.uleb128 0xe
 3821 001c 00       		.byte	0
 3822 001d 00       		.byte	0
 3823 001e 03       		.uleb128 0x3
 3824 001f 16       		.uleb128 0x16
 3825 0020 00       		.byte	0
 3826 0021 03       		.uleb128 0x3
 3827 0022 0E       		.uleb128 0xe
 3828 0023 3A       		.uleb128 0x3a
 3829 0024 0B       		.uleb128 0xb
 3830 0025 3B       		.uleb128 0x3b
 3831 0026 0B       		.uleb128 0xb
 3832 0027 49       		.uleb128 0x49
 3833 0028 13       		.uleb128 0x13
 3834 0029 00       		.byte	0
 3835 002a 00       		.byte	0
 3836 002b 04       		.uleb128 0x4
 3837 002c 24       		.uleb128 0x24
 3838 002d 00       		.byte	0
 3839 002e 0B       		.uleb128 0xb
 3840 002f 0B       		.uleb128 0xb
 3841 0030 3E       		.uleb128 0x3e
 3842 0031 0B       		.uleb128 0xb
 3843 0032 03       		.uleb128 0x3
 3844 0033 08       		.uleb128 0x8
 3845 0034 00       		.byte	0
 3846 0035 00       		.byte	0
 3847 0036 05       		.uleb128 0x5
 3848 0037 16       		.uleb128 0x16
 3849 0038 00       		.byte	0
 3850 0039 03       		.uleb128 0x3
 3851 003a 0E       		.uleb128 0xe
 3852 003b 3A       		.uleb128 0x3a
 3853 003c 0B       		.uleb128 0xb
 3854 003d 3B       		.uleb128 0x3b
 3855 003e 05       		.uleb128 0x5
 3856 003f 49       		.uleb128 0x49
 3857 0040 13       		.uleb128 0x13
 3858 0041 00       		.byte	0
 3859 0042 00       		.byte	0
 3860 0043 06       		.uleb128 0x6
 3861 0044 0F       		.uleb128 0xf
 3862 0045 00       		.byte	0
 3863 0046 0B       		.uleb128 0xb
 3864 0047 0B       		.uleb128 0xb
 3865 0048 49       		.uleb128 0x49
 3866 0049 13       		.uleb128 0x13
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 85


 3867 004a 00       		.byte	0
 3868 004b 00       		.byte	0
 3869 004c 07       		.uleb128 0x7
 3870 004d 01       		.uleb128 0x1
 3871 004e 01       		.byte	0x1
 3872 004f 49       		.uleb128 0x49
 3873 0050 13       		.uleb128 0x13
 3874 0051 01       		.uleb128 0x1
 3875 0052 13       		.uleb128 0x13
 3876 0053 00       		.byte	0
 3877 0054 00       		.byte	0
 3878 0055 08       		.uleb128 0x8
 3879 0056 21       		.uleb128 0x21
 3880 0057 00       		.byte	0
 3881 0058 49       		.uleb128 0x49
 3882 0059 13       		.uleb128 0x13
 3883 005a 2F       		.uleb128 0x2f
 3884 005b 0B       		.uleb128 0xb
 3885 005c 00       		.byte	0
 3886 005d 00       		.byte	0
 3887 005e 09       		.uleb128 0x9
 3888 005f 13       		.uleb128 0x13
 3889 0060 01       		.byte	0x1
 3890 0061 0B       		.uleb128 0xb
 3891 0062 0B       		.uleb128 0xb
 3892 0063 3A       		.uleb128 0x3a
 3893 0064 0B       		.uleb128 0xb
 3894 0065 3B       		.uleb128 0x3b
 3895 0066 0B       		.uleb128 0xb
 3896 0067 01       		.uleb128 0x1
 3897 0068 13       		.uleb128 0x13
 3898 0069 00       		.byte	0
 3899 006a 00       		.byte	0
 3900 006b 0A       		.uleb128 0xa
 3901 006c 0D       		.uleb128 0xd
 3902 006d 00       		.byte	0
 3903 006e 03       		.uleb128 0x3
 3904 006f 08       		.uleb128 0x8
 3905 0070 3A       		.uleb128 0x3a
 3906 0071 0B       		.uleb128 0xb
 3907 0072 3B       		.uleb128 0x3b
 3908 0073 0B       		.uleb128 0xb
 3909 0074 49       		.uleb128 0x49
 3910 0075 13       		.uleb128 0x13
 3911 0076 38       		.uleb128 0x38
 3912 0077 0B       		.uleb128 0xb
 3913 0078 00       		.byte	0
 3914 0079 00       		.byte	0
 3915 007a 0B       		.uleb128 0xb
 3916 007b 0D       		.uleb128 0xd
 3917 007c 00       		.byte	0
 3918 007d 03       		.uleb128 0x3
 3919 007e 0E       		.uleb128 0xe
 3920 007f 3A       		.uleb128 0x3a
 3921 0080 0B       		.uleb128 0xb
 3922 0081 3B       		.uleb128 0x3b
 3923 0082 0B       		.uleb128 0xb
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 86


 3924 0083 49       		.uleb128 0x49
 3925 0084 13       		.uleb128 0x13
 3926 0085 38       		.uleb128 0x38
 3927 0086 0B       		.uleb128 0xb
 3928 0087 00       		.byte	0
 3929 0088 00       		.byte	0
 3930 0089 0C       		.uleb128 0xc
 3931 008a 35       		.uleb128 0x35
 3932 008b 00       		.byte	0
 3933 008c 49       		.uleb128 0x49
 3934 008d 13       		.uleb128 0x13
 3935 008e 00       		.byte	0
 3936 008f 00       		.byte	0
 3937 0090 0D       		.uleb128 0xd
 3938 0091 13       		.uleb128 0x13
 3939 0092 01       		.byte	0x1
 3940 0093 0B       		.uleb128 0xb
 3941 0094 05       		.uleb128 0x5
 3942 0095 3A       		.uleb128 0x3a
 3943 0096 0B       		.uleb128 0xb
 3944 0097 3B       		.uleb128 0x3b
 3945 0098 0B       		.uleb128 0xb
 3946 0099 01       		.uleb128 0x1
 3947 009a 13       		.uleb128 0x13
 3948 009b 00       		.byte	0
 3949 009c 00       		.byte	0
 3950 009d 0E       		.uleb128 0xe
 3951 009e 13       		.uleb128 0x13
 3952 009f 01       		.byte	0x1
 3953 00a0 03       		.uleb128 0x3
 3954 00a1 08       		.uleb128 0x8
 3955 00a2 0B       		.uleb128 0xb
 3956 00a3 0B       		.uleb128 0xb
 3957 00a4 3A       		.uleb128 0x3a
 3958 00a5 0B       		.uleb128 0xb
 3959 00a6 3B       		.uleb128 0x3b
 3960 00a7 0B       		.uleb128 0xb
 3961 00a8 01       		.uleb128 0x1
 3962 00a9 13       		.uleb128 0x13
 3963 00aa 00       		.byte	0
 3964 00ab 00       		.byte	0
 3965 00ac 0F       		.uleb128 0xf
 3966 00ad 2E       		.uleb128 0x2e
 3967 00ae 00       		.byte	0
 3968 00af 3F       		.uleb128 0x3f
 3969 00b0 19       		.uleb128 0x19
 3970 00b1 03       		.uleb128 0x3
 3971 00b2 0E       		.uleb128 0xe
 3972 00b3 3A       		.uleb128 0x3a
 3973 00b4 0B       		.uleb128 0xb
 3974 00b5 3B       		.uleb128 0x3b
 3975 00b6 0B       		.uleb128 0xb
 3976 00b7 27       		.uleb128 0x27
 3977 00b8 19       		.uleb128 0x19
 3978 00b9 11       		.uleb128 0x11
 3979 00ba 01       		.uleb128 0x1
 3980 00bb 12       		.uleb128 0x12
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 87


 3981 00bc 06       		.uleb128 0x6
 3982 00bd 40       		.uleb128 0x40
 3983 00be 18       		.uleb128 0x18
 3984 00bf 9642     		.uleb128 0x2116
 3985 00c1 19       		.uleb128 0x19
 3986 00c2 00       		.byte	0
 3987 00c3 00       		.byte	0
 3988 00c4 10       		.uleb128 0x10
 3989 00c5 2E       		.uleb128 0x2e
 3990 00c6 01       		.byte	0x1
 3991 00c7 3F       		.uleb128 0x3f
 3992 00c8 19       		.uleb128 0x19
 3993 00c9 03       		.uleb128 0x3
 3994 00ca 0E       		.uleb128 0xe
 3995 00cb 3A       		.uleb128 0x3a
 3996 00cc 0B       		.uleb128 0xb
 3997 00cd 3B       		.uleb128 0x3b
 3998 00ce 0B       		.uleb128 0xb
 3999 00cf 11       		.uleb128 0x11
 4000 00d0 01       		.uleb128 0x1
 4001 00d1 12       		.uleb128 0x12
 4002 00d2 06       		.uleb128 0x6
 4003 00d3 40       		.uleb128 0x40
 4004 00d4 18       		.uleb128 0x18
 4005 00d5 9642     		.uleb128 0x2116
 4006 00d7 19       		.uleb128 0x19
 4007 00d8 01       		.uleb128 0x1
 4008 00d9 13       		.uleb128 0x13
 4009 00da 00       		.byte	0
 4010 00db 00       		.byte	0
 4011 00dc 11       		.uleb128 0x11
 4012 00dd 34       		.uleb128 0x34
 4013 00de 00       		.byte	0
 4014 00df 03       		.uleb128 0x3
 4015 00e0 0E       		.uleb128 0xe
 4016 00e1 3A       		.uleb128 0x3a
 4017 00e2 0B       		.uleb128 0xb
 4018 00e3 3B       		.uleb128 0x3b
 4019 00e4 0B       		.uleb128 0xb
 4020 00e5 49       		.uleb128 0x49
 4021 00e6 13       		.uleb128 0x13
 4022 00e7 02       		.uleb128 0x2
 4023 00e8 18       		.uleb128 0x18
 4024 00e9 00       		.byte	0
 4025 00ea 00       		.byte	0
 4026 00eb 12       		.uleb128 0x12
 4027 00ec 2E       		.uleb128 0x2e
 4028 00ed 01       		.byte	0x1
 4029 00ee 3F       		.uleb128 0x3f
 4030 00ef 19       		.uleb128 0x19
 4031 00f0 03       		.uleb128 0x3
 4032 00f1 0E       		.uleb128 0xe
 4033 00f2 3A       		.uleb128 0x3a
 4034 00f3 0B       		.uleb128 0xb
 4035 00f4 3B       		.uleb128 0x3b
 4036 00f5 0B       		.uleb128 0xb
 4037 00f6 49       		.uleb128 0x49
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 88


 4038 00f7 13       		.uleb128 0x13
 4039 00f8 11       		.uleb128 0x11
 4040 00f9 01       		.uleb128 0x1
 4041 00fa 12       		.uleb128 0x12
 4042 00fb 06       		.uleb128 0x6
 4043 00fc 40       		.uleb128 0x40
 4044 00fd 18       		.uleb128 0x18
 4045 00fe 9642     		.uleb128 0x2116
 4046 0100 19       		.uleb128 0x19
 4047 0101 01       		.uleb128 0x1
 4048 0102 13       		.uleb128 0x13
 4049 0103 00       		.byte	0
 4050 0104 00       		.byte	0
 4051 0105 13       		.uleb128 0x13
 4052 0106 2E       		.uleb128 0x2e
 4053 0107 00       		.byte	0
 4054 0108 3F       		.uleb128 0x3f
 4055 0109 19       		.uleb128 0x19
 4056 010a 03       		.uleb128 0x3
 4057 010b 0E       		.uleb128 0xe
 4058 010c 3A       		.uleb128 0x3a
 4059 010d 0B       		.uleb128 0xb
 4060 010e 3B       		.uleb128 0x3b
 4061 010f 0B       		.uleb128 0xb
 4062 0110 11       		.uleb128 0x11
 4063 0111 01       		.uleb128 0x1
 4064 0112 12       		.uleb128 0x12
 4065 0113 06       		.uleb128 0x6
 4066 0114 40       		.uleb128 0x40
 4067 0115 18       		.uleb128 0x18
 4068 0116 9642     		.uleb128 0x2116
 4069 0118 19       		.uleb128 0x19
 4070 0119 00       		.byte	0
 4071 011a 00       		.byte	0
 4072 011b 14       		.uleb128 0x14
 4073 011c 2E       		.uleb128 0x2e
 4074 011d 01       		.byte	0x1
 4075 011e 3F       		.uleb128 0x3f
 4076 011f 19       		.uleb128 0x19
 4077 0120 03       		.uleb128 0x3
 4078 0121 0E       		.uleb128 0xe
 4079 0122 3A       		.uleb128 0x3a
 4080 0123 0B       		.uleb128 0xb
 4081 0124 3B       		.uleb128 0x3b
 4082 0125 0B       		.uleb128 0xb
 4083 0126 27       		.uleb128 0x27
 4084 0127 19       		.uleb128 0x19
 4085 0128 11       		.uleb128 0x11
 4086 0129 01       		.uleb128 0x1
 4087 012a 12       		.uleb128 0x12
 4088 012b 06       		.uleb128 0x6
 4089 012c 40       		.uleb128 0x40
 4090 012d 18       		.uleb128 0x18
 4091 012e 9642     		.uleb128 0x2116
 4092 0130 19       		.uleb128 0x19
 4093 0131 01       		.uleb128 0x1
 4094 0132 13       		.uleb128 0x13
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 89


 4095 0133 00       		.byte	0
 4096 0134 00       		.byte	0
 4097 0135 15       		.uleb128 0x15
 4098 0136 05       		.uleb128 0x5
 4099 0137 00       		.byte	0
 4100 0138 03       		.uleb128 0x3
 4101 0139 0E       		.uleb128 0xe
 4102 013a 3A       		.uleb128 0x3a
 4103 013b 0B       		.uleb128 0xb
 4104 013c 3B       		.uleb128 0x3b
 4105 013d 0B       		.uleb128 0xb
 4106 013e 49       		.uleb128 0x49
 4107 013f 13       		.uleb128 0x13
 4108 0140 02       		.uleb128 0x2
 4109 0141 18       		.uleb128 0x18
 4110 0142 00       		.byte	0
 4111 0143 00       		.byte	0
 4112 0144 16       		.uleb128 0x16
 4113 0145 2E       		.uleb128 0x2e
 4114 0146 01       		.byte	0x1
 4115 0147 3F       		.uleb128 0x3f
 4116 0148 19       		.uleb128 0x19
 4117 0149 03       		.uleb128 0x3
 4118 014a 0E       		.uleb128 0xe
 4119 014b 3A       		.uleb128 0x3a
 4120 014c 0B       		.uleb128 0xb
 4121 014d 3B       		.uleb128 0x3b
 4122 014e 0B       		.uleb128 0xb
 4123 014f 27       		.uleb128 0x27
 4124 0150 19       		.uleb128 0x19
 4125 0151 49       		.uleb128 0x49
 4126 0152 13       		.uleb128 0x13
 4127 0153 11       		.uleb128 0x11
 4128 0154 01       		.uleb128 0x1
 4129 0155 12       		.uleb128 0x12
 4130 0156 06       		.uleb128 0x6
 4131 0157 40       		.uleb128 0x40
 4132 0158 18       		.uleb128 0x18
 4133 0159 9642     		.uleb128 0x2116
 4134 015b 19       		.uleb128 0x19
 4135 015c 01       		.uleb128 0x1
 4136 015d 13       		.uleb128 0x13
 4137 015e 00       		.byte	0
 4138 015f 00       		.byte	0
 4139 0160 17       		.uleb128 0x17
 4140 0161 2E       		.uleb128 0x2e
 4141 0162 01       		.byte	0x1
 4142 0163 3F       		.uleb128 0x3f
 4143 0164 19       		.uleb128 0x19
 4144 0165 03       		.uleb128 0x3
 4145 0166 0E       		.uleb128 0xe
 4146 0167 3A       		.uleb128 0x3a
 4147 0168 0B       		.uleb128 0xb
 4148 0169 3B       		.uleb128 0x3b
 4149 016a 0B       		.uleb128 0xb
 4150 016b 27       		.uleb128 0x27
 4151 016c 19       		.uleb128 0x19
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 90


 4152 016d 11       		.uleb128 0x11
 4153 016e 01       		.uleb128 0x1
 4154 016f 12       		.uleb128 0x12
 4155 0170 06       		.uleb128 0x6
 4156 0171 40       		.uleb128 0x40
 4157 0172 18       		.uleb128 0x18
 4158 0173 9742     		.uleb128 0x2117
 4159 0175 19       		.uleb128 0x19
 4160 0176 01       		.uleb128 0x1
 4161 0177 13       		.uleb128 0x13
 4162 0178 00       		.byte	0
 4163 0179 00       		.byte	0
 4164 017a 18       		.uleb128 0x18
 4165 017b 2E       		.uleb128 0x2e
 4166 017c 01       		.byte	0x1
 4167 017d 3F       		.uleb128 0x3f
 4168 017e 19       		.uleb128 0x19
 4169 017f 03       		.uleb128 0x3
 4170 0180 0E       		.uleb128 0xe
 4171 0181 3A       		.uleb128 0x3a
 4172 0182 0B       		.uleb128 0xb
 4173 0183 3B       		.uleb128 0x3b
 4174 0184 0B       		.uleb128 0xb
 4175 0185 27       		.uleb128 0x27
 4176 0186 19       		.uleb128 0x19
 4177 0187 49       		.uleb128 0x49
 4178 0188 13       		.uleb128 0x13
 4179 0189 11       		.uleb128 0x11
 4180 018a 01       		.uleb128 0x1
 4181 018b 12       		.uleb128 0x12
 4182 018c 06       		.uleb128 0x6
 4183 018d 40       		.uleb128 0x40
 4184 018e 18       		.uleb128 0x18
 4185 018f 9742     		.uleb128 0x2117
 4186 0191 19       		.uleb128 0x19
 4187 0192 01       		.uleb128 0x1
 4188 0193 13       		.uleb128 0x13
 4189 0194 00       		.byte	0
 4190 0195 00       		.byte	0
 4191 0196 19       		.uleb128 0x19
 4192 0197 2E       		.uleb128 0x2e
 4193 0198 01       		.byte	0x1
 4194 0199 3F       		.uleb128 0x3f
 4195 019a 19       		.uleb128 0x19
 4196 019b 03       		.uleb128 0x3
 4197 019c 0E       		.uleb128 0xe
 4198 019d 3A       		.uleb128 0x3a
 4199 019e 0B       		.uleb128 0xb
 4200 019f 3B       		.uleb128 0x3b
 4201 01a0 05       		.uleb128 0x5
 4202 01a1 11       		.uleb128 0x11
 4203 01a2 01       		.uleb128 0x1
 4204 01a3 12       		.uleb128 0x12
 4205 01a4 06       		.uleb128 0x6
 4206 01a5 40       		.uleb128 0x40
 4207 01a6 18       		.uleb128 0x18
 4208 01a7 9642     		.uleb128 0x2116
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 91


 4209 01a9 19       		.uleb128 0x19
 4210 01aa 01       		.uleb128 0x1
 4211 01ab 13       		.uleb128 0x13
 4212 01ac 00       		.byte	0
 4213 01ad 00       		.byte	0
 4214 01ae 1A       		.uleb128 0x1a
 4215 01af 34       		.uleb128 0x34
 4216 01b0 00       		.byte	0
 4217 01b1 03       		.uleb128 0x3
 4218 01b2 0E       		.uleb128 0xe
 4219 01b3 3A       		.uleb128 0x3a
 4220 01b4 0B       		.uleb128 0xb
 4221 01b5 3B       		.uleb128 0x3b
 4222 01b6 05       		.uleb128 0x5
 4223 01b7 49       		.uleb128 0x49
 4224 01b8 13       		.uleb128 0x13
 4225 01b9 02       		.uleb128 0x2
 4226 01ba 18       		.uleb128 0x18
 4227 01bb 00       		.byte	0
 4228 01bc 00       		.byte	0
 4229 01bd 1B       		.uleb128 0x1b
 4230 01be 2E       		.uleb128 0x2e
 4231 01bf 00       		.byte	0
 4232 01c0 3F       		.uleb128 0x3f
 4233 01c1 19       		.uleb128 0x19
 4234 01c2 03       		.uleb128 0x3
 4235 01c3 0E       		.uleb128 0xe
 4236 01c4 3A       		.uleb128 0x3a
 4237 01c5 0B       		.uleb128 0xb
 4238 01c6 3B       		.uleb128 0x3b
 4239 01c7 05       		.uleb128 0x5
 4240 01c8 27       		.uleb128 0x27
 4241 01c9 19       		.uleb128 0x19
 4242 01ca 49       		.uleb128 0x49
 4243 01cb 13       		.uleb128 0x13
 4244 01cc 11       		.uleb128 0x11
 4245 01cd 01       		.uleb128 0x1
 4246 01ce 12       		.uleb128 0x12
 4247 01cf 06       		.uleb128 0x6
 4248 01d0 40       		.uleb128 0x40
 4249 01d1 18       		.uleb128 0x18
 4250 01d2 9642     		.uleb128 0x2116
 4251 01d4 19       		.uleb128 0x19
 4252 01d5 00       		.byte	0
 4253 01d6 00       		.byte	0
 4254 01d7 1C       		.uleb128 0x1c
 4255 01d8 2E       		.uleb128 0x2e
 4256 01d9 01       		.byte	0x1
 4257 01da 3F       		.uleb128 0x3f
 4258 01db 19       		.uleb128 0x19
 4259 01dc 03       		.uleb128 0x3
 4260 01dd 0E       		.uleb128 0xe
 4261 01de 3A       		.uleb128 0x3a
 4262 01df 0B       		.uleb128 0xb
 4263 01e0 3B       		.uleb128 0x3b
 4264 01e1 05       		.uleb128 0x5
 4265 01e2 49       		.uleb128 0x49
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 92


 4266 01e3 13       		.uleb128 0x13
 4267 01e4 11       		.uleb128 0x11
 4268 01e5 01       		.uleb128 0x1
 4269 01e6 12       		.uleb128 0x12
 4270 01e7 06       		.uleb128 0x6
 4271 01e8 40       		.uleb128 0x40
 4272 01e9 18       		.uleb128 0x18
 4273 01ea 9642     		.uleb128 0x2116
 4274 01ec 19       		.uleb128 0x19
 4275 01ed 01       		.uleb128 0x1
 4276 01ee 13       		.uleb128 0x13
 4277 01ef 00       		.byte	0
 4278 01f0 00       		.byte	0
 4279 01f1 1D       		.uleb128 0x1d
 4280 01f2 0B       		.uleb128 0xb
 4281 01f3 01       		.byte	0x1
 4282 01f4 11       		.uleb128 0x11
 4283 01f5 01       		.uleb128 0x1
 4284 01f6 12       		.uleb128 0x12
 4285 01f7 06       		.uleb128 0x6
 4286 01f8 00       		.byte	0
 4287 01f9 00       		.byte	0
 4288 01fa 1E       		.uleb128 0x1e
 4289 01fb 0B       		.uleb128 0xb
 4290 01fc 01       		.byte	0x1
 4291 01fd 11       		.uleb128 0x11
 4292 01fe 01       		.uleb128 0x1
 4293 01ff 12       		.uleb128 0x12
 4294 0200 06       		.uleb128 0x6
 4295 0201 01       		.uleb128 0x1
 4296 0202 13       		.uleb128 0x13
 4297 0203 00       		.byte	0
 4298 0204 00       		.byte	0
 4299 0205 1F       		.uleb128 0x1f
 4300 0206 21       		.uleb128 0x21
 4301 0207 00       		.byte	0
 4302 0208 49       		.uleb128 0x49
 4303 0209 13       		.uleb128 0x13
 4304 020a 2F       		.uleb128 0x2f
 4305 020b 05       		.uleb128 0x5
 4306 020c 00       		.byte	0
 4307 020d 00       		.byte	0
 4308 020e 20       		.uleb128 0x20
 4309 020f 2E       		.uleb128 0x2e
 4310 0210 01       		.byte	0x1
 4311 0211 3F       		.uleb128 0x3f
 4312 0212 19       		.uleb128 0x19
 4313 0213 03       		.uleb128 0x3
 4314 0214 0E       		.uleb128 0xe
 4315 0215 3A       		.uleb128 0x3a
 4316 0216 0B       		.uleb128 0xb
 4317 0217 3B       		.uleb128 0x3b
 4318 0218 05       		.uleb128 0x5
 4319 0219 27       		.uleb128 0x27
 4320 021a 19       		.uleb128 0x19
 4321 021b 49       		.uleb128 0x49
 4322 021c 13       		.uleb128 0x13
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 93


 4323 021d 11       		.uleb128 0x11
 4324 021e 01       		.uleb128 0x1
 4325 021f 12       		.uleb128 0x12
 4326 0220 06       		.uleb128 0x6
 4327 0221 40       		.uleb128 0x40
 4328 0222 18       		.uleb128 0x18
 4329 0223 9642     		.uleb128 0x2116
 4330 0225 19       		.uleb128 0x19
 4331 0226 01       		.uleb128 0x1
 4332 0227 13       		.uleb128 0x13
 4333 0228 00       		.byte	0
 4334 0229 00       		.byte	0
 4335 022a 21       		.uleb128 0x21
 4336 022b 05       		.uleb128 0x5
 4337 022c 00       		.byte	0
 4338 022d 03       		.uleb128 0x3
 4339 022e 0E       		.uleb128 0xe
 4340 022f 3A       		.uleb128 0x3a
 4341 0230 0B       		.uleb128 0xb
 4342 0231 3B       		.uleb128 0x3b
 4343 0232 05       		.uleb128 0x5
 4344 0233 49       		.uleb128 0x49
 4345 0234 13       		.uleb128 0x13
 4346 0235 02       		.uleb128 0x2
 4347 0236 18       		.uleb128 0x18
 4348 0237 00       		.byte	0
 4349 0238 00       		.byte	0
 4350 0239 22       		.uleb128 0x22
 4351 023a 34       		.uleb128 0x34
 4352 023b 00       		.byte	0
 4353 023c 03       		.uleb128 0x3
 4354 023d 08       		.uleb128 0x8
 4355 023e 3A       		.uleb128 0x3a
 4356 023f 0B       		.uleb128 0xb
 4357 0240 3B       		.uleb128 0x3b
 4358 0241 05       		.uleb128 0x5
 4359 0242 49       		.uleb128 0x49
 4360 0243 13       		.uleb128 0x13
 4361 0244 02       		.uleb128 0x2
 4362 0245 18       		.uleb128 0x18
 4363 0246 00       		.byte	0
 4364 0247 00       		.byte	0
 4365 0248 23       		.uleb128 0x23
 4366 0249 34       		.uleb128 0x34
 4367 024a 00       		.byte	0
 4368 024b 03       		.uleb128 0x3
 4369 024c 0E       		.uleb128 0xe
 4370 024d 3A       		.uleb128 0x3a
 4371 024e 0B       		.uleb128 0xb
 4372 024f 3B       		.uleb128 0x3b
 4373 0250 05       		.uleb128 0x5
 4374 0251 49       		.uleb128 0x49
 4375 0252 13       		.uleb128 0x13
 4376 0253 3F       		.uleb128 0x3f
 4377 0254 19       		.uleb128 0x19
 4378 0255 3C       		.uleb128 0x3c
 4379 0256 19       		.uleb128 0x19
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 94


 4380 0257 00       		.byte	0
 4381 0258 00       		.byte	0
 4382 0259 24       		.uleb128 0x24
 4383 025a 34       		.uleb128 0x34
 4384 025b 00       		.byte	0
 4385 025c 03       		.uleb128 0x3
 4386 025d 0E       		.uleb128 0xe
 4387 025e 3A       		.uleb128 0x3a
 4388 025f 0B       		.uleb128 0xb
 4389 0260 3B       		.uleb128 0x3b
 4390 0261 0B       		.uleb128 0xb
 4391 0262 49       		.uleb128 0x49
 4392 0263 13       		.uleb128 0x13
 4393 0264 3F       		.uleb128 0x3f
 4394 0265 19       		.uleb128 0x19
 4395 0266 02       		.uleb128 0x2
 4396 0267 18       		.uleb128 0x18
 4397 0268 00       		.byte	0
 4398 0269 00       		.byte	0
 4399 026a 25       		.uleb128 0x25
 4400 026b 34       		.uleb128 0x34
 4401 026c 00       		.byte	0
 4402 026d 03       		.uleb128 0x3
 4403 026e 08       		.uleb128 0x8
 4404 026f 3A       		.uleb128 0x3a
 4405 0270 0B       		.uleb128 0xb
 4406 0271 3B       		.uleb128 0x3b
 4407 0272 0B       		.uleb128 0xb
 4408 0273 49       		.uleb128 0x49
 4409 0274 13       		.uleb128 0x13
 4410 0275 3F       		.uleb128 0x3f
 4411 0276 19       		.uleb128 0x19
 4412 0277 02       		.uleb128 0x2
 4413 0278 18       		.uleb128 0x18
 4414 0279 00       		.byte	0
 4415 027a 00       		.byte	0
 4416 027b 00       		.byte	0
 4417              		.section	.debug_aranges,"",%progbits
 4418 0000 8C000000 		.4byte	0x8c
 4419 0004 0200     		.2byte	0x2
 4420 0006 00000000 		.4byte	.Ldebug_info0
 4421 000a 04       		.byte	0x4
 4422 000b 00       		.byte	0
 4423 000c 0000     		.2byte	0
 4424 000e 0000     		.2byte	0
 4425 0010 00000000 		.4byte	.LFB64
 4426 0014 0C000000 		.4byte	.LFE64-.LFB64
 4427 0018 00000000 		.4byte	.LFB65
 4428 001c 2C010000 		.4byte	.LFE65-.LFB65
 4429 0020 00000000 		.4byte	.LFB66
 4430 0024 64000000 		.4byte	.LFE66-.LFB66
 4431 0028 00000000 		.4byte	.LFB67
 4432 002c 2A000000 		.4byte	.LFE67-.LFB67
 4433 0030 00000000 		.4byte	.LFB68
 4434 0034 50000000 		.4byte	.LFE68-.LFB68
 4435 0038 00000000 		.4byte	.LFB69
 4436 003c 48000000 		.4byte	.LFE69-.LFB69
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 95


 4437 0040 00000000 		.4byte	.LFB70
 4438 0044 1E000000 		.4byte	.LFE70-.LFB70
 4439 0048 00000000 		.4byte	.LFB71
 4440 004c 46000000 		.4byte	.LFE71-.LFB71
 4441 0050 00000000 		.4byte	.LFB72
 4442 0054 04010000 		.4byte	.LFE72-.LFB72
 4443 0058 00000000 		.4byte	.LFB73
 4444 005c 1E000000 		.4byte	.LFE73-.LFB73
 4445 0060 00000000 		.4byte	.LFB74
 4446 0064 54040000 		.4byte	.LFE74-.LFB74
 4447 0068 00000000 		.4byte	.LFB75
 4448 006c 44000000 		.4byte	.LFE75-.LFB75
 4449 0070 00000000 		.4byte	.LFB76
 4450 0074 7C030000 		.4byte	.LFE76-.LFB76
 4451 0078 00000000 		.4byte	.LFB77
 4452 007c 74000000 		.4byte	.LFE77-.LFB77
 4453 0080 00000000 		.4byte	.LFB78
 4454 0084 38010000 		.4byte	.LFE78-.LFB78
 4455 0088 00000000 		.4byte	0
 4456 008c 00000000 		.4byte	0
 4457              		.section	.debug_ranges,"",%progbits
 4458              	.Ldebug_ranges0:
 4459 0000 00000000 		.4byte	.LFB64
 4460 0004 0C000000 		.4byte	.LFE64
 4461 0008 00000000 		.4byte	.LFB65
 4462 000c 2C010000 		.4byte	.LFE65
 4463 0010 00000000 		.4byte	.LFB66
 4464 0014 64000000 		.4byte	.LFE66
 4465 0018 00000000 		.4byte	.LFB67
 4466 001c 2A000000 		.4byte	.LFE67
 4467 0020 00000000 		.4byte	.LFB68
 4468 0024 50000000 		.4byte	.LFE68
 4469 0028 00000000 		.4byte	.LFB69
 4470 002c 48000000 		.4byte	.LFE69
 4471 0030 00000000 		.4byte	.LFB70
 4472 0034 1E000000 		.4byte	.LFE70
 4473 0038 00000000 		.4byte	.LFB71
 4474 003c 46000000 		.4byte	.LFE71
 4475 0040 00000000 		.4byte	.LFB72
 4476 0044 04010000 		.4byte	.LFE72
 4477 0048 00000000 		.4byte	.LFB73
 4478 004c 1E000000 		.4byte	.LFE73
 4479 0050 00000000 		.4byte	.LFB74
 4480 0054 54040000 		.4byte	.LFE74
 4481 0058 00000000 		.4byte	.LFB75
 4482 005c 44000000 		.4byte	.LFE75
 4483 0060 00000000 		.4byte	.LFB76
 4484 0064 7C030000 		.4byte	.LFE76
 4485 0068 00000000 		.4byte	.LFB77
 4486 006c 74000000 		.4byte	.LFE77
 4487 0070 00000000 		.4byte	.LFB78
 4488 0074 38010000 		.4byte	.LFE78
 4489 0078 00000000 		.4byte	0
 4490 007c 00000000 		.4byte	0
 4491              		.section	.debug_line,"",%progbits
 4492              	.Ldebug_line0:
 4493 0000 33040000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 96


 4493      02001B02 
 4493      00000201 
 4493      FB0E0D00 
 4493      01010101 
 4494              	.LASF115:
 4495 0000 745F6D6F 		.ascii	"t_modem\000"
 4495      64656D00 
 4496              	.LASF12:
 4497 0008 75696E74 		.ascii	"uint16\000"
 4497      313600
 4498              	.LASF51:
 4499 000f 746D5F68 		.ascii	"tm_hour\000"
 4499      6F757200 
 4500              	.LASF36:
 4501 0017 6E756D5F 		.ascii	"num_invalid_readings\000"
 4501      696E7661 
 4501      6C69645F 
 4501      72656164 
 4501      696E6773 
 4502              	.LASF146:
 4503 002c 62756666 		.ascii	"buffer_overflow\000"
 4503      65725F6F 
 4503      76657266 
 4503      6C6F7700 
 4504              	.LASF144:
 4505 003c 66696C65 		.ascii	"fileName\000"
 4505      4E616D65 
 4505      00
 4506              	.LASF0:
 4507 0045 7369676E 		.ascii	"signed char\000"
 4507      65642063 
 4507      68617200 
 4508              	.LASF88:
 4509 0051 636F756E 		.ascii	"countDownResetCondition\000"
 4509      74446F77 
 4509      6E526573 
 4509      6574436F 
 4509      6E646974 
 4510              	.LASF169:
 4511 0069 57616B65 		.ascii	"Wakeup_ISR\000"
 4511      75705F49 
 4511      535200
 4512              	.LASF74:
 4513 0074 6C6F6E67 		.ascii	"longitude\000"
 4513      69747564 
 4513      6500
 4514              	.LASF166:
 4515 007e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4515      43313120 
 4515      352E342E 
 4515      31203230 
 4515      31363036 
 4516 00b1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4516      20726576 
 4516      6973696F 
 4516      6E203233 
 4516      37373135 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 97


 4517 00e4 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4517      66756E63 
 4517      74696F6E 
 4517      2D736563 
 4517      74696F6E 
 4518              	.LASF113:
 4519 010c 745F7072 		.ascii	"t_pressure\000"
 4519      65737375 
 4519      726500
 4520              	.LASF26:
 4521 0117 4D6F6E74 		.ascii	"Month\000"
 4521      6800
 4522              	.LASF82:
 4523 011d 64656275 		.ascii	"debug_level\000"
 4523      675F6C65 
 4523      76656C00 
 4524              	.LASF22:
 4525 0129 486F7572 		.ascii	"Hour\000"
 4525      00
 4526              	.LASF150:
 4527 012e 6D6F6465 		.ascii	"modem_state\000"
 4527      6D5F7374 
 4527      61746500 
 4528              	.LASF160:
 4529 013a 616C6172 		.ascii	"alarmMeasure\000"
 4529      6D4D6561 
 4529      73757265 
 4529      00
 4530              	.LASF145:
 4531 0147 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4531      52784275 
 4531      66666572 
 4531      00
 4532              	.LASF111:
 4533 0154 745F6C65 		.ascii	"t_level_sensor\000"
 4533      76656C5F 
 4533      73656E73 
 4533      6F7200
 4534              	.LASF6:
 4535 0163 6C6F6E67 		.ascii	"long long int\000"
 4535      206C6F6E 
 4535      6720696E 
 4535      7400
 4536              	.LASF123:
 4537 0171 7061636B 		.ascii	"packets\000"
 4537      65747300 
 4538              	.LASF67:
 4539 0179 65636E6F 		.ascii	"ecno\000"
 4539      00
 4540              	.LASF161:
 4541 017e 74696D65 		.ascii	"timeToMeasure\000"
 4541      546F4D65 
 4541      61737572 
 4541      6500
 4542              	.LASF70:
 4543 018c 74696D65 		.ascii	"time_to_network_connect\000"
 4543      5F746F5F 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 98


 4543      6E657477 
 4543      6F726B5F 
 4543      636F6E6E 
 4544              	.LASF7:
 4545 01a4 6C6F6E67 		.ascii	"long long unsigned int\000"
 4545      206C6F6E 
 4545      6720756E 
 4545      7369676E 
 4545      65642069 
 4546              	.LASF163:
 4547 01bb 74696D65 		.ascii	"timeToSync\000"
 4547      546F5379 
 4547      6E6300
 4548              	.LASF39:
 4549 01c6 766F6C74 		.ascii	"voltage_solar\000"
 4549      6167655F 
 4549      736F6C61 
 4549      7200
 4550              	.LASF40:
 4551 01d4 766F6C74 		.ascii	"voltage_charge_current\000"
 4551      6167655F 
 4551      63686172 
 4551      67655F63 
 4551      75727265 
 4552              	.LASF143:
 4553 01eb 75706772 		.ascii	"upgrade_status\000"
 4553      6164655F 
 4553      73746174 
 4553      757300
 4554              	.LASF126:
 4555 01fa 635F6461 		.ascii	"c_data_count_sent\000"
 4555      74615F63 
 4555      6F756E74 
 4555      5F73656E 
 4555      7400
 4556              	.LASF64:
 4557 020c 6D6F6465 		.ascii	"modem_info_t\000"
 4557      6D5F696E 
 4557      666F5F74 
 4557      00
 4558              	.LASF65:
 4559 0219 72786C65 		.ascii	"rxlev\000"
 4559      7600
 4560              	.LASF4:
 4561 021f 6C6F6E67 		.ascii	"long int\000"
 4561      20696E74 
 4561      00
 4562              	.LASF71:
 4563 0228 74696D65 		.ascii	"time_to_acquire_ip\000"
 4563      5F746F5F 
 4563      61637175 
 4563      6972655F 
 4563      697000
 4564              	.LASF89:
 4565 023b 616C6172 		.ascii	"alarm\000"
 4565      6D00
 4566              	.LASF45:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 99


 4567 0241 70726573 		.ascii	"pressure_voltage_off\000"
 4567      73757265 
 4567      5F766F6C 
 4567      74616765 
 4567      5F6F6666 
 4568              	.LASF75:
 4569 0256 616C7469 		.ascii	"altitude\000"
 4569      74756465 
 4569      00
 4570              	.LASF11:
 4571 025f 75696E74 		.ascii	"uint8\000"
 4571      3800
 4572              	.LASF118:
 4573 0265 635F7472 		.ascii	"c_try_counter\000"
 4573      795F636F 
 4573      756E7465 
 4573      7200
 4574              	.LASF129:
 4575 0273 73656E64 		.ascii	"send_time\000"
 4575      5F74696D 
 4575      6500
 4576              	.LASF16:
 4577 027d 696E7433 		.ascii	"int32\000"
 4577      3200
 4578              	.LASF78:
 4579 0283 6E6F6465 		.ascii	"node_type\000"
 4579      5F747970 
 4579      6500
 4580              	.LASF116:
 4581 028d 73796E63 		.ascii	"syncData\000"
 4581      44617461 
 4581      00
 4582              	.LASF124:
 4583 0296 6E657477 		.ascii	"network_time\000"
 4583      6F726B5F 
 4583      74696D65 
 4583      00
 4584              	.LASF13:
 4585 02a3 75696E74 		.ascii	"uint32\000"
 4585      333200
 4586              	.LASF62:
 4587 02aa 6D6F6465 		.ascii	"model_id\000"
 4587      6C5F6964 
 4587      00
 4588              	.LASF33:
 4589 02b3 616C6C5F 		.ascii	"all_level_readings\000"
 4589      6C657665 
 4589      6C5F7265 
 4589      6164696E 
 4589      677300
 4590              	.LASF85:
 4591 02c6 636F756E 		.ascii	"countDownValue\000"
 4591      74446F77 
 4591      6E56616C 
 4591      756500
 4592              	.LASF139:
 4593 02d5 75706772 		.ascii	"upgraded\000"
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 100


 4593      61646564 
 4593      00
 4594              	.LASF53:
 4595 02de 746D5F6D 		.ascii	"tm_mon\000"
 4595      6F6E00
 4596              	.LASF76:
 4597 02e5 74696D65 		.ascii	"time_to_lock\000"
 4597      5F746F5F 
 4597      6C6F636B 
 4597      00
 4598              	.LASF141:
 4599 02f2 706F7274 		.ascii	"port\000"
 4599      00
 4600              	.LASF58:
 4601 02f7 76616C75 		.ascii	"value\000"
 4601      6500
 4602              	.LASF140:
 4603 02fd 686F7374 		.ascii	"host\000"
 4603      00
 4604              	.LASF54:
 4605 0302 746D5F79 		.ascii	"tm_year\000"
 4605      65617200 
 4606              	.LASF162:
 4607 030a 616C6172 		.ascii	"alarmSync\000"
 4607      6D53796E 
 4607      6300
 4608              	.LASF44:
 4609 0314 70726573 		.ascii	"pressure_voltage_on\000"
 4609      73757265 
 4609      5F766F6C 
 4609      74616765 
 4609      5F6F6E00 
 4610              	.LASF8:
 4611 0328 756E7369 		.ascii	"unsigned int\000"
 4611      676E6564 
 4611      20696E74 
 4611      00
 4612              	.LASF137:
 4613 0335 73657454 		.ascii	"setTime\000"
 4613      696D6500 
 4614              	.LASF60:
 4615 033d 6B65795F 		.ascii	"key_value_t\000"
 4615      76616C75 
 4615      655F7400 
 4616              	.LASF101:
 4617 0349 41796F49 		.ascii	"AyoItsTime\000"
 4617      74735469 
 4617      6D6500
 4618              	.LASF35:
 4619 0354 6E756D5F 		.ascii	"num_valid_readings\000"
 4619      76616C69 
 4619      645F7265 
 4619      6164696E 
 4619      677300
 4620              	.LASF128:
 4621 0367 68747470 		.ascii	"http_chunk\000"
 4621      5F636875 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 101


 4621      6E6B00
 4622              	.LASF134:
 4623 0372 6D5F766F 		.ascii	"m_voltage\000"
 4623      6C746167 
 4623      6500
 4624              	.LASF5:
 4625 037c 6C6F6E67 		.ascii	"long unsigned int\000"
 4625      20756E73 
 4625      69676E65 
 4625      6420696E 
 4625      7400
 4626              	.LASF98:
 4627 038e 7472795F 		.ascii	"try_counter\000"
 4627      636F756E 
 4627      74657200 
 4628              	.LASF119:
 4629 039a 64617461 		.ascii	"data_count_desired\000"
 4629      5F636F75 
 4629      6E745F64 
 4629      65736972 
 4629      656400
 4630              	.LASF38:
 4631 03ad 766F6C74 		.ascii	"voltage_battery\000"
 4631      6167655F 
 4631      62617474 
 4631      65727900 
 4632              	.LASF24:
 4633 03bd 4461794F 		.ascii	"DayOfMonth\000"
 4633      664D6F6E 
 4633      746800
 4634              	.LASF132:
 4635 03c8 6D616B65 		.ascii	"makeMeasurements\000"
 4635      4D656173 
 4635      7572656D 
 4635      656E7473 
 4635      00
 4636              	.LASF149:
 4637 03d9 64617461 		.ascii	"data\000"
 4637      00
 4638              	.LASF94:
 4639 03de 65705F70 		.ascii	"ep_port\000"
 4639      6F727400 
 4640              	.LASF57:
 4641 03e6 746D5F69 		.ascii	"tm_isdst\000"
 4641      73647374 
 4641      00
 4642              	.LASF90:
 4643 03ef 6D6F6465 		.ascii	"modem_info\000"
 4643      6D5F696E 
 4643      666F00
 4644              	.LASF93:
 4645 03fa 65705F68 		.ascii	"ep_host\000"
 4645      6F737400 
 4646              	.LASF14:
 4647 0402 696E7438 		.ascii	"int8\000"
 4647      00
 4648              	.LASF100:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 102


 4649 0407 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 4649      576F726B 
 4649      576F726B 
 4649      576F726B 
 4649      576F726B 
 4650              	.LASF120:
 4651 0420 635F6461 		.ascii	"c_data_count_desired\000"
 4651      74615F63 
 4651      6F756E74 
 4651      5F646573 
 4651      69726564 
 4652              	.LASF114:
 4653 0435 745F7364 		.ascii	"t_sd_card\000"
 4653      5F636172 
 4653      6400
 4654              	.LASF2:
 4655 043f 73686F72 		.ascii	"short int\000"
 4655      7420696E 
 4655      7400
 4656              	.LASF9:
 4657 0449 5F5F696E 		.ascii	"__int32_t\000"
 4657      7433325F 
 4657      7400
 4658              	.LASF151:
 4659 0453 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4659      6D5F7374 
 4659      6172745F 
 4659      74696D65 
 4659      5F737461 
 4660              	.LASF92:
 4661 046a 7379735F 		.ascii	"sys_info_t\000"
 4661      696E666F 
 4661      5F7400
 4662              	.LASF84:
 4663 0475 75706461 		.ascii	"updatable_parameters_t\000"
 4663      7461626C 
 4663      655F7061 
 4663      72616D65 
 4663      74657273 
 4664              	.LASF102:
 4665 048c 616C6172 		.ascii	"alarmType\000"
 4665      6D547970 
 4665      6500
 4666              	.LASF147:
 4667 0496 64617461 		.ascii	"dataPointsInStack\000"
 4667      506F696E 
 4667      7473496E 
 4667      53746163 
 4667      6B00
 4668              	.LASF50:
 4669 04a8 746D5F6D 		.ascii	"tm_min\000"
 4669      696E00
 4670              	.LASF142:
 4671 04af 726F7574 		.ascii	"route\000"
 4671      6500
 4672              	.LASF103:
 4673 04b5 616C6172 		.ascii	"alarmToBeUpdated\000"
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 103


 4673      6D546F42 
 4673      65557064 
 4673      61746564 
 4673      00
 4674              	.LASF21:
 4675 04c6 73697A65 		.ascii	"sizetype\000"
 4675      74797065 
 4675      00
 4676              	.LASF56:
 4677 04cf 746D5F79 		.ascii	"tm_yday\000"
 4677      64617900 
 4678              	.LASF73:
 4679 04d7 6C617469 		.ascii	"latitude\000"
 4679      74756465 
 4679      00
 4680              	.LASF95:
 4681 04e0 7379735F 		.ascii	"sys_settings_t\000"
 4681      73657474 
 4681      696E6773 
 4681      5F7400
 4682              	.LASF138:
 4683 04ef 6C6F6361 		.ascii	"localTime\000"
 4683      6C54696D 
 4683      6500
 4684              	.LASF164:
 4685 04f9 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 4685      546F5379 
 4685      636E5265 
 4685      6D6F7465 
 4685      50617261 
 4686              	.LASF59:
 4687 0510 74696D65 		.ascii	"timeStamp\000"
 4687      5374616D 
 4687      7000
 4688              	.LASF28:
 4689 051a 5254435F 		.ascii	"RTC_TIME_DATE\000"
 4689      54494D45 
 4689      5F444154 
 4689      4500
 4690              	.LASF153:
 4691 0528 75706461 		.ascii	"updatable_parameters\000"
 4691      7461626C 
 4691      655F7061 
 4691      72616D65 
 4691      74657273 
 4692              	.LASF107:
 4693 053d 43726561 		.ascii	"CreateAlarm\000"
 4693      7465416C 
 4693      61726D00 
 4694              	.LASF127:
 4695 0549 7061636B 		.ascii	"packet\000"
 4695      657400
 4696              	.LASF117:
 4697 0550 735F7273 		.ascii	"s_rsrp\000"
 4697      727000
 4698              	.LASF41:
 4699 0557 766F6C74 		.ascii	"voltage_pressure\000"
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 104


 4699      6167655F 
 4699      70726573 
 4699      73757265 
 4699      00
 4700              	.LASF155:
 4701 0568 68747470 		.ascii	"http_request\000"
 4701      5F726571 
 4701      75657374 
 4701      00
 4702              	.LASF17:
 4703 0575 666C6F61 		.ascii	"float\000"
 4703      7400
 4704              	.LASF37:
 4705 057b 6C657665 		.ascii	"level_sensor_t\000"
 4705      6C5F7365 
 4705      6E736F72 
 4705      5F7400
 4706              	.LASF131:
 4707 058a 636F6E66 		.ascii	"configureRemoteParams\000"
 4707      69677572 
 4707      6552656D 
 4707      6F746550 
 4707      6172616D 
 4708              	.LASF165:
 4709 05a0 44617461 		.ascii	"Data_fileName\000"
 4709      5F66696C 
 4709      654E616D 
 4709      6500
 4710              	.LASF99:
 4711 05ae 6D6F6465 		.ascii	"modem_status\000"
 4711      6D5F7374 
 4711      61747573 
 4711      00
 4712              	.LASF29:
 4713 05bb 74657374 		.ascii	"test_name\000"
 4713      5F6E616D 
 4713      6500
 4714              	.LASF27:
 4715 05c5 59656172 		.ascii	"Year\000"
 4715      00
 4716              	.LASF83:
 4717 05ca 5F426F6F 		.ascii	"_Bool\000"
 4717      6C00
 4718              	.LASF10:
 4719 05d0 696E7433 		.ascii	"int32_t\000"
 4719      325F7400 
 4720              	.LASF1:
 4721 05d8 756E7369 		.ascii	"unsigned char\000"
 4721      676E6564 
 4721      20636861 
 4721      7200
 4722              	.LASF159:
 4723 05e6 73797374 		.ascii	"system_settings\000"
 4723      656D5F73 
 4723      65747469 
 4723      6E677300 
 4724              	.LASF69:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 105


 4725 05f6 72737270 		.ascii	"rsrp\000"
 4725      00
 4726              	.LASF68:
 4727 05fb 72737271 		.ascii	"rsrq\000"
 4727      00
 4728              	.LASF104:
 4729 0600 52657365 		.ascii	"ResetAlarm\000"
 4729      74416C61 
 4729      726D00
 4730              	.LASF130:
 4731 060b 735F7365 		.ascii	"s_send_time\000"
 4731      6E645F74 
 4731      696D6500 
 4732              	.LASF81:
 4733 0617 73796E63 		.ascii	"sync_time\000"
 4733      5F74696D 
 4733      6500
 4734              	.LASF47:
 4735 0621 70726573 		.ascii	"pressure_depth\000"
 4735      73757265 
 4735      5F646570 
 4735      746800
 4736              	.LASF66:
 4737 0630 72736370 		.ascii	"rscp\000"
 4737      00
 4738              	.LASF23:
 4739 0635 4461794F 		.ascii	"DayOfWeek\000"
 4739      66576565 
 4739      6B00
 4740              	.LASF32:
 4741 063f 74657374 		.ascii	"test_t\000"
 4741      5F7400
 4742              	.LASF158:
 4743 0646 73797374 		.ascii	"system_info\000"
 4743      656D5F69 
 4743      6E666F00 
 4744              	.LASF63:
 4745 0652 696D6569 		.ascii	"imei\000"
 4745      00
 4746              	.LASF31:
 4747 0657 72656173 		.ascii	"reason\000"
 4747      6F6E00
 4748              	.LASF105:
 4749 065e 616C6172 		.ascii	"alarmToBeReset\000"
 4749      6D546F42 
 4749      65526573 
 4749      657400
 4750              	.LASF110:
 4751 066d 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 4751      6B697479 
 4751      43686563 
 4751      6B596F75 
 4751      7273656C 
 4752              	.LASF125:
 4753 0699 64617461 		.ascii	"data_count_sent\000"
 4753      5F636F75 
 4753      6E745F73 
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 106


 4753      656E7400 
 4754              	.LASF72:
 4755 06a9 6D6F6465 		.ascii	"modem_stats_t\000"
 4755      6D5F7374 
 4755      6174735F 
 4755      7400
 4756              	.LASF46:
 4757 06b7 70726573 		.ascii	"pressure_current\000"
 4757      73757265 
 4757      5F637572 
 4757      72656E74 
 4757      00
 4758              	.LASF42:
 4759 06c8 76616C69 		.ascii	"valid\000"
 4759      6400
 4760              	.LASF55:
 4761 06ce 746D5F77 		.ascii	"tm_wday\000"
 4761      64617900 
 4762              	.LASF20:
 4763 06d6 6C6F6E67 		.ascii	"long double\000"
 4763      20646F75 
 4763      626C6500 
 4764              	.LASF122:
 4765 06e2 6368756E 		.ascii	"chunk\000"
 4765      6B00
 4766              	.LASF133:
 4767 06e8 635F7469 		.ascii	"c_timeStamp\000"
 4767      6D655374 
 4767      616D7000 
 4768              	.LASF19:
 4769 06f4 63686172 		.ascii	"char\000"
 4769      00
 4770              	.LASF152:
 4771 06f9 6D6F6465 		.ascii	"modem_stats\000"
 4771      6D5F7374 
 4771      61747300 
 4772              	.LASF157:
 4773 0705 68747470 		.ascii	"http_route\000"
 4773      5F726F75 
 4773      746500
 4774              	.LASF121:
 4775 0710 706F7274 		.ascii	"portConfig\000"
 4775      436F6E66 
 4775      696700
 4776              	.LASF77:
 4777 071b 6770735F 		.ascii	"gps_t\000"
 4777      7400
 4778              	.LASF96:
 4779 0721 756E6971 		.ascii	"uniqueId\000"
 4779      75654964 
 4779      00
 4780              	.LASF135:
 4781 072a 6D5F6C65 		.ascii	"m_level_sensor\000"
 4781      76656C5F 
 4781      73656E73 
 4781      6F7200
 4782              	.LASF168:
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 107


 4783 0739 443A5C47 		.ascii	"D:\\Github repo\\notoriOS\\notoriOS.cydsn\000"
 4783      69746875 
 4783      62207265 
 4783      706F5C6E 
 4783      6F746F72 
 4784              	.LASF34:
 4785 0760 6C657665 		.ascii	"level_reading\000"
 4785      6C5F7265 
 4785      6164696E 
 4785      6700
 4786              	.LASF154:
 4787 076e 6770735F 		.ascii	"gps_data\000"
 4787      64617461 
 4787      00
 4788              	.LASF170:
 4789 0777 4C617942 		.ascii	"LayBack\000"
 4789      61636B00 
 4790              	.LASF3:
 4791 077f 73686F72 		.ascii	"short unsigned int\000"
 4791      7420756E 
 4791      7369676E 
 4791      65642069 
 4791      6E7400
 4792              	.LASF61:
 4793 0792 73696D5F 		.ascii	"sim_id\000"
 4793      696400
 4794              	.LASF52:
 4795 0799 746D5F6D 		.ascii	"tm_mday\000"
 4795      64617900 
 4796              	.LASF108:
 4797 07a1 6E657741 		.ascii	"newAlarm\000"
 4797      6C61726D 
 4797      00
 4798              	.LASF49:
 4799 07aa 746D5F73 		.ascii	"tm_sec\000"
 4799      656300
 4800              	.LASF136:
 4801 07b1 6D5F7072 		.ascii	"m_pressure\000"
 4801      65737375 
 4801      726500
 4802              	.LASF30:
 4803 07bc 73746174 		.ascii	"status\000"
 4803      757300
 4804              	.LASF148:
 4805 07c3 64617461 		.ascii	"dataPointsInStackDesired\000"
 4805      506F696E 
 4805      7473496E 
 4805      53746163 
 4805      6B446573 
 4806              	.LASF112:
 4807 07dc 745F766F 		.ascii	"t_voltages\000"
 4807      6C746167 
 4807      657300
 4808              	.LASF167:
 4809 07e7 6E6F746F 		.ascii	"notoriOS.c\000"
 4809      72694F53 
 4809      2E6300
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 108


 4810              	.LASF156:
 4811 07f2 68747470 		.ascii	"http_body\000"
 4811      5F626F64 
 4811      7900
 4812              	.LASF15:
 4813 07fc 696E7431 		.ascii	"int16\000"
 4813      3600
 4814              	.LASF87:
 4815 0802 636F756E 		.ascii	"countDownType\000"
 4815      74446F77 
 4815      6E547970 
 4815      6500
 4816              	.LASF86:
 4817 0810 63757272 		.ascii	"currentCountDownValue\000"
 4817      656E7443 
 4817      6F756E74 
 4817      446F776E 
 4817      56616C75 
 4818              	.LASF79:
 4819 0826 73696D5F 		.ascii	"sim_type\000"
 4819      74797065 
 4819      00
 4820              	.LASF97:
 4821 082f 635F6865 		.ascii	"c_hey\000"
 4821      7900
 4822              	.LASF25:
 4823 0835 4461794F 		.ascii	"DayOfYear\000"
 4823      66596561 
 4823      7200
 4824              	.LASF48:
 4825 083f 70726573 		.ascii	"pressure_t\000"
 4825      73757265 
 4825      5F7400
 4826              	.LASF106:
 4827 084a 416C6172 		.ascii	"AlarmReady\000"
 4827      6D526561 
 4827      647900
 4828              	.LASF109:
 4829 0855 52656164 		.ascii	"ReadyOrNot\000"
 4829      794F724E 
 4829      6F7400
 4830              	.LASF171:
 4831 0860 6D61696E 		.ascii	"main\000"
 4831      00
 4832              	.LASF91:
 4833 0865 63686970 		.ascii	"chip_uniqueId\000"
 4833      5F756E69 
 4833      71756549 
 4833      6400
 4834              	.LASF80:
 4835 0873 6D656173 		.ascii	"measure_time\000"
 4835      7572655F 
 4835      74696D65 
 4835      00
 4836              	.LASF18:
 4837 0880 646F7562 		.ascii	"double\000"
 4837      6C6500
ARM GAS  C:\Users\rohan\AppData\Local\Temp\ccokBvDW.s 			page 109


 4838              	.LASF43:
 4839 0887 766F6C74 		.ascii	"voltage_t\000"
 4839      6167655F 
 4839      7400
 4840              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
