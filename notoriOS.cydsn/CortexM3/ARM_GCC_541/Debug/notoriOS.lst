ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	inbox,100,4
  33              		.comm	http_request,10000,4
  34              		.comm	http_body,10000,4
  35              		.comm	http_route,200,4
  36              		.comm	system_info,28,4
  37              		.comm	system_settings,104,4
  38              		.comm	alarmMeasure,6,4
  39              		.comm	timeToMeasure,1,1
  40              		.comm	alarmSync,6,4
  41              		.comm	timeToSync,1,1
  42              		.comm	timeToSycnRemoteParams,1,1
  43              		.comm	hey,1,1
  44              		.comm	alarmAppLED,6,4
  45              		.comm	timeToAppLED,1,1
  46              		.section	.text.Wakeup_ISR,"ax",%progbits
  47              		.align	2
  48              		.global	Wakeup_ISR
  49              		.thumb
  50              		.thumb_func
  51              		.type	Wakeup_ISR, %function
  52              	Wakeup_ISR:
  53              	.LFB64:
  54              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 2


   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  55              		.loc 1 20 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 1, uses_anonymous_args = 0
  59 0000 80B5     		push	{r7, lr}
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 7, -8
  62              		.cfi_offset 14, -4
  63 0002 00AF     		add	r7, sp, #0
  64              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  65              		.loc 1 22 0
  66 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  67              		.loc 1 23 0
  68 0008 00BF     		nop
  69 000a 80BD     		pop	{r7, pc}
  70              		.cfi_endproc
  71              	.LFE64:
  72              		.size	Wakeup_ISR, .-Wakeup_ISR
  73              		.global	Data_fileName
  74              		.data
  75              		.align	2
  76              		.type	Data_fileName, %object
  77              		.size	Data_fileName, 30
  78              	Data_fileName:
  79 0000 64617461 		.ascii	"data.txt\000"
  79      2E747874 
  79      00
  80 0009 00000000 		.space	21
  80      00000000 
  80      00000000 
  80      00000000 
  80      00000000 
  81              		.comm	try_counter,1,1
  82              		.section	.rodata
  83              		.align	2
  84              	.LC0:
  85 0000 25582D25 		.ascii	"%X-%X\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 3


  85      5800
  86 0006 0000     		.align	2
  87              	.LC1:
  88 0008 6563322D 		.ascii	"ec2-18-222-229-124.us-east-2.compute.amazonaws.com\000"
  88      31382D32 
  88      32322D32 
  88      32392D31 
  88      32342E75 
  89              		.section	.text.ReadyOrNot,"ax",%progbits
  90              		.align	2
  91              		.global	ReadyOrNot
  92              		.thumb
  93              		.thumb_func
  94              		.type	ReadyOrNot, %function
  95              	ReadyOrNot:
  96              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
  97              		.loc 1 41 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 24
 100              		@ frame_needed = 1, uses_anonymous_args = 0
 101 0000 B0B5     		push	{r4, r5, r7, lr}
 102              		.cfi_def_cfa_offset 16
 103              		.cfi_offset 4, -16
 104              		.cfi_offset 5, -12
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0002 88B0     		sub	sp, sp, #32
 108              		.cfi_def_cfa_offset 48
 109 0004 02AF     		add	r7, sp, #8
 110              		.cfi_def_cfa 7, 40
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 111              		.loc 1 43 0
 112 0006 3948     		ldr	r0, .L3
 113 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 114              		.loc 1 44 0
 115 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 4


  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 116              		.loc 1 46 0
 117 0010 FF20     		movs	r0, #255
 118 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 119              		.loc 1 47 0
 120 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 121              		.loc 1 48 0
 122 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 123              		.loc 1 50 0
 124 001e FFF7FEFF 		bl	modem_initialize
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 125              		.loc 1 52 0
 126 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  53:notoriOS.c    ****    
  54:notoriOS.c    ****     
  55:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  56:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  57:notoriOS.c    ****     
  58:notoriOS.c    ****     
  59:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  60:notoriOS.c    ****     uint32 uniqueId[2];
  61:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  62:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 127              		.loc 1 62 0
 128 0026 07F10C03 		add	r3, r7, #12
 129 002a 1846     		mov	r0, r3
 130 002c FFF7FEFF 		bl	CyGetUniqueId
  63:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 131              		.loc 1 63 0
 132 0030 FA68     		ldr	r2, [r7, #12]
 133 0032 3B69     		ldr	r3, [r7, #16]
 134 0034 0093     		str	r3, [sp]
 135 0036 1346     		mov	r3, r2
 136 0038 2D4A     		ldr	r2, .L3+4
 137 003a 1821     		movs	r1, #24
 138 003c 2D48     		ldr	r0, .L3+8
 139 003e FFF7FEFF 		bl	snprintf
  64:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  65:notoriOS.c    ****     system_info.modem_info = &modem_info;
 140              		.loc 1 65 0
 141 0042 2D4B     		ldr	r3, .L3+12
 142 0044 2D4A     		ldr	r2, .L3+16
 143 0046 1A60     		str	r2, [r3]
  66:notoriOS.c    ****     
  67:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  68:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","ec2-18-222-229-124.us-ea
 144              		.loc 1 68 0
 145 0048 2D4A     		ldr	r2, .L3+20
 146 004a 2E4B     		ldr	r3, .L3+24
 147 004c 1446     		mov	r4, r2
 148 004e 1D46     		mov	r5, r3
 149 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 5


 150 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 151 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 152 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 153 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 154 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 155 005c 2B68     		ldr	r3, [r5]
 156 005e 1A46     		mov	r2, r3	@ movhi
 157 0060 2280     		strh	r2, [r4]	@ movhi
 158 0062 0234     		adds	r4, r4, #2
 159 0064 1B0C     		lsrs	r3, r3, #16
 160 0066 2370     		strb	r3, [r4]
  69:notoriOS.c    ****    
  70:notoriOS.c    ****     system_settings.ep_port = 5000;
 161              		.loc 1 70 0
 162 0068 254B     		ldr	r3, .L3+20
 163 006a 41F28832 		movw	r2, #5000
 164 006e 5A66     		str	r2, [r3, #100]
  71:notoriOS.c    ****     // Don't need the following for new nodes
  72:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  73:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  74:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  75:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  76:notoriOS.c    ****         
  77:notoriOS.c    ****     
  78:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  79:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 165              		.loc 1 79 0
 166 0070 254B     		ldr	r3, .L3+28
 167 0072 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 168 0074 99B2     		uxth	r1, r3
 169 0076 254C     		ldr	r4, .L3+32
 170 0078 3846     		mov	r0, r7
 171 007a 0723     		movs	r3, #7
 172 007c 0122     		movs	r2, #1
 173 007e FFF7FEFF 		bl	CreateAlarm
 174 0082 2246     		mov	r2, r4
 175 0084 3B46     		mov	r3, r7
 176 0086 1968     		ldr	r1, [r3]	@ unaligned
 177 0088 1160     		str	r1, [r2]	@ unaligned
 178 008a 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 179 008c 9380     		strh	r3, [r2, #4]	@ unaligned
  80:notoriOS.c    ****     timeToMeasure = 1u;
 180              		.loc 1 80 0
 181 008e 204B     		ldr	r3, .L3+36
 182 0090 0122     		movs	r2, #1
 183 0092 1A70     		strb	r2, [r3]
  81:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  82:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 184              		.loc 1 82 0
 185 0094 1C4B     		ldr	r3, .L3+28
 186 0096 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 187 0098 99B2     		uxth	r1, r3
 188 009a 1E4C     		ldr	r4, .L3+40
 189 009c 3846     		mov	r0, r7
 190 009e 0723     		movs	r3, #7
 191 00a0 0122     		movs	r2, #1
 192 00a2 FFF7FEFF 		bl	CreateAlarm
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 6


 193 00a6 2246     		mov	r2, r4
 194 00a8 3B46     		mov	r3, r7
 195 00aa 1968     		ldr	r1, [r3]	@ unaligned
 196 00ac 1160     		str	r1, [r2]	@ unaligned
 197 00ae 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 198 00b0 9380     		strh	r3, [r2, #4]	@ unaligned
  83:notoriOS.c    ****     timeToSync = 1u;
 199              		.loc 1 83 0
 200 00b2 194B     		ldr	r3, .L3+44
 201 00b4 0122     		movs	r2, #1
 202 00b6 1A70     		strb	r2, [r3]
  84:notoriOS.c    ****     
  85:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 203              		.loc 1 85 0
 204 00b8 184B     		ldr	r3, .L3+48
 205 00ba 0022     		movs	r2, #0
 206 00bc 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     
  87:notoriOS.c    ****     // App Initializations
  88:notoriOS.c    ****     alarmAppLED = CreateAlarm(3u,ALARM_TYPE_SECOND,ALARM_TYPE_CONTINUOUS);
 207              		.loc 1 88 0
 208 00be 184C     		ldr	r4, .L3+52
 209 00c0 3846     		mov	r0, r7
 210 00c2 0723     		movs	r3, #7
 211 00c4 0022     		movs	r2, #0
 212 00c6 0321     		movs	r1, #3
 213 00c8 FFF7FEFF 		bl	CreateAlarm
 214 00cc 2246     		mov	r2, r4
 215 00ce 3B46     		mov	r3, r7
 216 00d0 1968     		ldr	r1, [r3]	@ unaligned
 217 00d2 1160     		str	r1, [r2]	@ unaligned
 218 00d4 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 219 00d6 9380     		strh	r3, [r2, #4]	@ unaligned
  89:notoriOS.c    ****     timeToAppLED = 1u;
 220              		.loc 1 89 0
 221 00d8 124B     		ldr	r3, .L3+56
 222 00da 0122     		movs	r2, #1
 223 00dc 1A70     		strb	r2, [r3]
  90:notoriOS.c    ****     
  91:notoriOS.c    ****     
  92:notoriOS.c    ****     // Initialize the try counter to 0
  93:notoriOS.c    ****     uint8 try_counter = 0;
 224              		.loc 1 93 0
 225 00de 0023     		movs	r3, #0
 226 00e0 FB75     		strb	r3, [r7, #23]
  94:notoriOS.c    **** }
 227              		.loc 1 94 0
 228 00e2 00BF     		nop
 229 00e4 1837     		adds	r7, r7, #24
 230              		.cfi_def_cfa_offset 16
 231 00e6 BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
 234 00e8 B0BD     		pop	{r4, r5, r7, pc}
 235              	.L4:
 236 00ea 00BF     		.align	2
 237              	.L3:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 7


 238 00ec 00000000 		.word	Wakeup_ISR
 239 00f0 00000000 		.word	.LC0
 240 00f4 04000000 		.word	system_info+4
 241 00f8 00000000 		.word	system_info
 242 00fc 00000000 		.word	modem_info
 243 0100 00000000 		.word	system_settings
 244 0104 08000000 		.word	.LC1
 245 0108 00000000 		.word	updatable_parameters
 246 010c 00000000 		.word	alarmMeasure
 247 0110 00000000 		.word	timeToMeasure
 248 0114 00000000 		.word	alarmSync
 249 0118 00000000 		.word	timeToSync
 250 011c 00000000 		.word	timeToSycnRemoteParams
 251 0120 00000000 		.word	alarmAppLED
 252 0124 00000000 		.word	timeToAppLED
 253              		.cfi_endproc
 254              	.LFE65:
 255              		.size	ReadyOrNot, .-ReadyOrNot
 256              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 257              		.align	2
 258              		.global	WorkWorkWorkWorkWorkWork
 259              		.thumb
 260              		.thumb_func
 261              		.type	WorkWorkWorkWorkWorkWork, %function
 262              	WorkWorkWorkWorkWorkWork:
 263              	.LFB66:
  95:notoriOS.c    **** 
  96:notoriOS.c    **** 
  97:notoriOS.c    **** // ==============================================
  98:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
  99:notoriOS.c    **** //      - Rhiana, feat Drake (2016)
 100:notoriOS.c    **** //
 101:notoriOS.c    **** // Prorcesses core tasks
 102:notoriOS.c    **** // ==============================================
 103:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
 104:notoriOS.c    **** {
 264              		.loc 1 104 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 8
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268 0000 80B5     		push	{r7, lr}
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 7, -8
 271              		.cfi_offset 14, -4
 272 0002 82B0     		sub	sp, sp, #8
 273              		.cfi_def_cfa_offset 16
 274 0004 00AF     		add	r7, sp, #0
 275              		.cfi_def_cfa_register 7
 105:notoriOS.c    ****     
 106:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 107:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 108:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
 109:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 110:notoriOS.c    ****     
 111:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 112:notoriOS.c    ****     if(timeToSycnRemoteParams){
 276              		.loc 1 112 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 8


 277 0006 194B     		ldr	r3, .L11
 278 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 279 000a 002B     		cmp	r3, #0
 280 000c 06D0     		beq	.L6
 113:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
 281              		.loc 1 113 0
 282 000e FFF7FEFF 		bl	configureRemoteParams
 283 0012 0346     		mov	r3, r0
 284 0014 1A46     		mov	r2, r3
 285 0016 154B     		ldr	r3, .L11
 286 0018 1A70     		strb	r2, [r3]
 287 001a 14E0     		b	.L7
 288              	.L6:
 114:notoriOS.c    ****     }
 115:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 116:notoriOS.c    ****     else if(timeToMeasure){
 289              		.loc 1 116 0
 290 001c 144B     		ldr	r3, .L11+4
 291 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 292 0020 002B     		cmp	r3, #0
 293 0022 06D0     		beq	.L8
 117:notoriOS.c    ****         //(int i=0; i<=30; i++){
 118:notoriOS.c    ****          timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 294              		.loc 1 118 0
 295 0024 FFF7FEFF 		bl	makeMeasurements
 296 0028 0346     		mov	r3, r0
 297 002a 1A46     		mov	r2, r3
 298 002c 104B     		ldr	r3, .L11+4
 299 002e 1A70     		strb	r2, [r3]
 300 0030 09E0     		b	.L7
 301              	.L8:
 119:notoriOS.c    ****         //CyDelay(1000u);
 120:notoriOS.c    ****         //}
 121:notoriOS.c    ****     }else if(timeToSync){
 302              		.loc 1 121 0
 303 0032 104B     		ldr	r3, .L11+8
 304 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 305 0036 002B     		cmp	r3, #0
 306 0038 05D0     		beq	.L7
 122:notoriOS.c    ****             timeToSync = syncData();
 307              		.loc 1 122 0
 308 003a FFF7FEFF 		bl	syncData
 309 003e 0346     		mov	r3, r0
 310 0040 1A46     		mov	r2, r3
 311 0042 0C4B     		ldr	r3, .L11+8
 312 0044 1A70     		strb	r2, [r3]
 313              	.L7:
 123:notoriOS.c    ****     } 
 124:notoriOS.c    ****     if(timeToAppLED){
 314              		.loc 1 124 0
 315 0046 0C4B     		ldr	r3, .L11+12
 316 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 317 004a 002B     		cmp	r3, #0
 318 004c 05D0     		beq	.L9
 125:notoriOS.c    ****         timeToAppLED = App_LED();
 319              		.loc 1 125 0
 320 004e FFF7FEFF 		bl	App_LED
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 9


 321 0052 0346     		mov	r3, r0
 322 0054 1A46     		mov	r2, r3
 323 0056 084B     		ldr	r3, .L11+12
 324 0058 1A70     		strb	r2, [r3]
 325              	.L9:
 126:notoriOS.c    ****     }
 127:notoriOS.c    ****     // Print the countdown to the next alarm
 128:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 129:notoriOS.c    ****     
 130:notoriOS.c    ****     
 131:notoriOS.c    ****     // Check modem state machine on every loop
 132:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
 326              		.loc 1 132 0
 327 005a FFF7FEFF 		bl	modem_process_tasks
 328 005e 0346     		mov	r3, r0
 329 0060 FB71     		strb	r3, [r7, #7]
 133:notoriOS.c    **** 
 134:notoriOS.c    ****     return 0u +  modem_status;  
 330              		.loc 1 134 0
 331 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 135:notoriOS.c    **** }
 332              		.loc 1 135 0
 333 0064 1846     		mov	r0, r3
 334 0066 0837     		adds	r7, r7, #8
 335              		.cfi_def_cfa_offset 8
 336 0068 BD46     		mov	sp, r7
 337              		.cfi_def_cfa_register 13
 338              		@ sp needed
 339 006a 80BD     		pop	{r7, pc}
 340              	.L12:
 341              		.align	2
 342              	.L11:
 343 006c 00000000 		.word	timeToSycnRemoteParams
 344 0070 00000000 		.word	timeToMeasure
 345 0074 00000000 		.word	timeToSync
 346 0078 00000000 		.word	timeToAppLED
 347              		.cfi_endproc
 348              	.LFE66:
 349              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 350              		.section	.text.LayBack,"ax",%progbits
 351              		.align	2
 352              		.global	LayBack
 353              		.thumb
 354              		.thumb_func
 355              		.type	LayBack, %function
 356              	LayBack:
 357              	.LFB67:
 136:notoriOS.c    **** 
 137:notoriOS.c    **** 
 138:notoriOS.c    **** 
 139:notoriOS.c    **** 
 140:notoriOS.c    **** 
 141:notoriOS.c    **** 
 142:notoriOS.c    **** // ==============================================
 143:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 144:notoriOS.c    **** //      - Snoop Dogg (1993)
 145:notoriOS.c    **** //
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 10


 146:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 147:notoriOS.c    **** // ==============================================
 148:notoriOS.c    **** void LayBack()
 149:notoriOS.c    **** {
 358              		.loc 1 149 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 1, uses_anonymous_args = 0
 362 0000 80B5     		push	{r7, lr}
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 7, -8
 365              		.cfi_offset 14, -4
 366 0002 00AF     		add	r7, sp, #0
 367              		.cfi_def_cfa_register 7
 150:notoriOS.c    ****   
 151:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 368              		.loc 1 151 0
 369 0004 FFF7FEFF 		bl	modem_sleep
 152:notoriOS.c    ****     
 153:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 154:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 370              		.loc 1 154 0
 371 0008 FFF7FEFF 		bl	debug_sleep
 155:notoriOS.c    ****     
 156:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 372              		.loc 1 156 0
 373 000c FFF7FEFF 		bl	CyPmSaveClocks
 157:notoriOS.c    ****     
 158:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 159:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 160:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 161:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 162:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 163:notoriOS.c    ****     //CyPmHibernate();
 164:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 165:notoriOS.c    **** 
 166:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 374              		.loc 1 166 0
 375 0010 4FF40061 		mov	r1, #2048
 376 0014 0020     		movs	r0, #0
 377 0016 FFF7FEFF 		bl	CyPmSleep
 167:notoriOS.c    **** 
 168:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 378              		.loc 1 168 0
 379 001a FFF7FEFF 		bl	CyPmRestoreClocks
 169:notoriOS.c    **** 
 170:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 380              		.loc 1 170 0
 381 001e FFF7FEFF 		bl	debug_wakeup
 171:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 382              		.loc 1 171 0
 383 0022 FFF7FEFF 		bl	modem_wakeup
 172:notoriOS.c    **** 
 173:notoriOS.c    **** }
 384              		.loc 1 173 0
 385 0026 00BF     		nop
 386 0028 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 11


 387              		.cfi_endproc
 388              	.LFE67:
 389              		.size	LayBack, .-LayBack
 390 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 391              		.align	2
 392              		.global	AyoItsTime
 393              		.thumb
 394              		.thumb_func
 395              		.type	AyoItsTime, %function
 396              	AyoItsTime:
 397              	.LFB68:
 174:notoriOS.c    **** 
 175:notoriOS.c    **** 
 176:notoriOS.c    **** // ==============================================
 177:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 178:notoriOS.c    **** //      - NAS (1994)
 179:notoriOS.c    **** //
 180:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 181:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 182:notoriOS.c    **** // It will add tasks to the work queue,
 183:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 184:notoriOS.c    **** // ==============================================
 185:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 186:notoriOS.c    **** {
 398              		.loc 1 186 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 8
 401              		@ frame_needed = 1, uses_anonymous_args = 0
 402 0000 80B5     		push	{r7, lr}
 403              		.cfi_def_cfa_offset 8
 404              		.cfi_offset 7, -8
 405              		.cfi_offset 14, -4
 406 0002 82B0     		sub	sp, sp, #8
 407              		.cfi_def_cfa_offset 16
 408 0004 00AF     		add	r7, sp, #0
 409              		.cfi_def_cfa_register 7
 410 0006 0346     		mov	r3, r0
 411 0008 FB71     		strb	r3, [r7, #7]
 187:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 188:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 412              		.loc 1 188 0
 413 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 414 000c 1946     		mov	r1, r3
 415 000e 1148     		ldr	r0, .L19
 416 0010 FFF7FEFF 		bl	AlarmReady
 417 0014 0346     		mov	r3, r0
 418 0016 002B     		cmp	r3, #0
 419 0018 02D0     		beq	.L15
 189:notoriOS.c    ****     {
 190:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 191:notoriOS.c    ****         timeToMeasure = 1u;
 420              		.loc 1 191 0
 421 001a 0F4B     		ldr	r3, .L19+4
 422 001c 0122     		movs	r2, #1
 423 001e 1A70     		strb	r2, [r3]
 424              	.L15:
 192:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 12


 193:notoriOS.c    ****         
 194:notoriOS.c    ****     }
 195:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 425              		.loc 1 195 0
 426 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 427 0022 1946     		mov	r1, r3
 428 0024 0D48     		ldr	r0, .L19+8
 429 0026 FFF7FEFF 		bl	AlarmReady
 430 002a 0346     		mov	r3, r0
 431 002c 002B     		cmp	r3, #0
 432 002e 02D0     		beq	.L16
 196:notoriOS.c    ****     {
 197:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 198:notoriOS.c    ****         timeToSync = 1u;
 433              		.loc 1 198 0
 434 0030 0B4B     		ldr	r3, .L19+12
 435 0032 0122     		movs	r2, #1
 436 0034 1A70     		strb	r2, [r3]
 437              	.L16:
 199:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 200:notoriOS.c    ****     }
 201:notoriOS.c    ****     if(AlarmReady(&alarmAppLED,alarmType))
 438              		.loc 1 201 0
 439 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 440 0038 1946     		mov	r1, r3
 441 003a 0A48     		ldr	r0, .L19+16
 442 003c FFF7FEFF 		bl	AlarmReady
 443 0040 0346     		mov	r3, r0
 444 0042 002B     		cmp	r3, #0
 445 0044 02D0     		beq	.L18
 202:notoriOS.c    ****     {
 203:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 204:notoriOS.c    ****         timeToAppLED = 1u;
 446              		.loc 1 204 0
 447 0046 084B     		ldr	r3, .L19+20
 448 0048 0122     		movs	r2, #1
 449 004a 1A70     		strb	r2, [r3]
 450              	.L18:
 205:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 206:notoriOS.c    ****     }
 207:notoriOS.c    ****     
 208:notoriOS.c    **** }
 451              		.loc 1 208 0
 452 004c 00BF     		nop
 453 004e 0837     		adds	r7, r7, #8
 454              		.cfi_def_cfa_offset 8
 455 0050 BD46     		mov	sp, r7
 456              		.cfi_def_cfa_register 13
 457              		@ sp needed
 458 0052 80BD     		pop	{r7, pc}
 459              	.L20:
 460              		.align	2
 461              	.L19:
 462 0054 00000000 		.word	alarmMeasure
 463 0058 00000000 		.word	timeToMeasure
 464 005c 00000000 		.word	alarmSync
 465 0060 00000000 		.word	timeToSync
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 13


 466 0064 00000000 		.word	alarmAppLED
 467 0068 00000000 		.word	timeToAppLED
 468              		.cfi_endproc
 469              	.LFE68:
 470              		.size	AyoItsTime, .-AyoItsTime
 471              		.section	.text.AlarmReady,"ax",%progbits
 472              		.align	2
 473              		.global	AlarmReady
 474              		.thumb
 475              		.thumb_func
 476              		.type	AlarmReady, %function
 477              	AlarmReady:
 478              	.LFB69:
 209:notoriOS.c    **** 
 210:notoriOS.c    **** 
 211:notoriOS.c    **** // ==============================================
 212:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 213:notoriOS.c    **** // ==============================================
 214:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 215:notoriOS.c    **** {
 479              		.loc 1 215 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 8
 482              		@ frame_needed = 1, uses_anonymous_args = 0
 483 0000 80B5     		push	{r7, lr}
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 7, -8
 486              		.cfi_offset 14, -4
 487 0002 82B0     		sub	sp, sp, #8
 488              		.cfi_def_cfa_offset 16
 489 0004 00AF     		add	r7, sp, #0
 490              		.cfi_def_cfa_register 7
 491 0006 7860     		str	r0, [r7, #4]
 492 0008 0B46     		mov	r3, r1
 493 000a FB70     		strb	r3, [r7, #3]
 216:notoriOS.c    ****     // if the countDownType matches the alarmType
 217:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 494              		.loc 1 217 0
 495 000c 7B68     		ldr	r3, [r7, #4]
 496 000e 1B79     		ldrb	r3, [r3, #4]
 497 0010 DBB2     		uxtb	r3, r3
 498 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 499 0014 9A42     		cmp	r2, r3
 500 0016 12D1     		bne	.L22
 218:notoriOS.c    ****        
 219:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 220:notoriOS.c    ****         // Decrement the count down value by 1
 221:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 501              		.loc 1 221 0
 502 0018 7B68     		ldr	r3, [r7, #4]
 503 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 504 001c 1BB2     		sxth	r3, r3
 505 001e 9BB2     		uxth	r3, r3
 506 0020 013B     		subs	r3, r3, #1
 507 0022 9BB2     		uxth	r3, r3
 508 0024 1AB2     		sxth	r2, r3
 509 0026 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 14


 510 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 222:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 223:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 511              		.loc 1 223 0
 512 002a 7B68     		ldr	r3, [r7, #4]
 513 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 514 002e 1BB2     		sxth	r3, r3
 515 0030 002B     		cmp	r3, #0
 516 0032 04DC     		bgt	.L22
 224:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 517              		.loc 1 224 0
 518 0034 7868     		ldr	r0, [r7, #4]
 519 0036 FFF7FEFF 		bl	ResetAlarm
 225:notoriOS.c    ****             return 1u;
 520              		.loc 1 225 0
 521 003a 0123     		movs	r3, #1
 522 003c 00E0     		b	.L23
 523              	.L22:
 226:notoriOS.c    ****         } 
 227:notoriOS.c    ****     }
 228:notoriOS.c    ****     
 229:notoriOS.c    ****     return 0u; // Otherwise return 0
 524              		.loc 1 229 0
 525 003e 0023     		movs	r3, #0
 526              	.L23:
 230:notoriOS.c    **** }
 527              		.loc 1 230 0
 528 0040 1846     		mov	r0, r3
 529 0042 0837     		adds	r7, r7, #8
 530              		.cfi_def_cfa_offset 8
 531 0044 BD46     		mov	sp, r7
 532              		.cfi_def_cfa_register 13
 533              		@ sp needed
 534 0046 80BD     		pop	{r7, pc}
 535              		.cfi_endproc
 536              	.LFE69:
 537              		.size	AlarmReady, .-AlarmReady
 538              		.section	.text.ResetAlarm,"ax",%progbits
 539              		.align	2
 540              		.global	ResetAlarm
 541              		.thumb
 542              		.thumb_func
 543              		.type	ResetAlarm, %function
 544              	ResetAlarm:
 545              	.LFB70:
 231:notoriOS.c    **** 
 232:notoriOS.c    **** // ==============================================
 233:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 234:notoriOS.c    **** // ==============================================
 235:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 236:notoriOS.c    **** {
 546              		.loc 1 236 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 8
 549              		@ frame_needed = 1, uses_anonymous_args = 0
 550              		@ link register save eliminated.
 551 0000 80B4     		push	{r7}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 15


 552              		.cfi_def_cfa_offset 4
 553              		.cfi_offset 7, -4
 554 0002 83B0     		sub	sp, sp, #12
 555              		.cfi_def_cfa_offset 16
 556 0004 00AF     		add	r7, sp, #0
 557              		.cfi_def_cfa_register 7
 558 0006 7860     		str	r0, [r7, #4]
 237:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 238:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 559              		.loc 1 238 0
 560 0008 7B68     		ldr	r3, [r7, #4]
 561 000a 1B88     		ldrh	r3, [r3]	@ movhi
 562 000c 9BB2     		uxth	r3, r3
 563 000e 1AB2     		sxth	r2, r3
 564 0010 7B68     		ldr	r3, [r7, #4]
 565 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 239:notoriOS.c    **** }
 566              		.loc 1 239 0
 567 0014 00BF     		nop
 568 0016 0C37     		adds	r7, r7, #12
 569              		.cfi_def_cfa_offset 4
 570 0018 BD46     		mov	sp, r7
 571              		.cfi_def_cfa_register 13
 572              		@ sp needed
 573 001a 80BC     		pop	{r7}
 574              		.cfi_restore 7
 575              		.cfi_def_cfa_offset 0
 576 001c 7047     		bx	lr
 577              		.cfi_endproc
 578              	.LFE70:
 579              		.size	ResetAlarm, .-ResetAlarm
 580 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
 581              		.align	2
 582              		.global	CreateAlarm
 583              		.thumb
 584              		.thumb_func
 585              		.type	CreateAlarm, %function
 586              	CreateAlarm:
 587              	.LFB71:
 240:notoriOS.c    **** 
 241:notoriOS.c    **** // ==============================================
 242:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 243:notoriOS.c    **** // ==============================================
 244:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 245:notoriOS.c    **** {
 588              		.loc 1 245 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 16
 591              		@ frame_needed = 1, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 593 0000 80B4     		push	{r7}
 594              		.cfi_def_cfa_offset 4
 595              		.cfi_offset 7, -4
 596 0002 85B0     		sub	sp, sp, #20
 597              		.cfi_def_cfa_offset 24
 598 0004 00AF     		add	r7, sp, #0
 599              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 16


 600 0006 7860     		str	r0, [r7, #4]
 601 0008 0846     		mov	r0, r1
 602 000a 1146     		mov	r1, r2
 603 000c 1A46     		mov	r2, r3
 604 000e 0346     		mov	r3, r0	@ movhi
 605 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 606 0012 0B46     		mov	r3, r1
 607 0014 7B70     		strb	r3, [r7, #1]
 608 0016 1346     		mov	r3, r2
 609 0018 3B70     		strb	r3, [r7]
 246:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 247:notoriOS.c    ****     alarm newAlarm;
 248:notoriOS.c    ****     
 249:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 250:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 610              		.loc 1 250 0
 611 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 612 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 251:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 613              		.loc 1 251 0
 614 001e 7B78     		ldrb	r3, [r7, #1]
 615 0020 3B73     		strb	r3, [r7, #12]
 252:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 616              		.loc 1 252 0
 617 0022 3B78     		ldrb	r3, [r7]
 618 0024 7B73     		strb	r3, [r7, #13]
 253:notoriOS.c    ****     
 254:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 255:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 256:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 619              		.loc 1 256 0
 620 0026 B7F90230 		ldrsh	r3, [r7, #2]
 621 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 257:notoriOS.c    ****     
 258:notoriOS.c    ****     return newAlarm;
 622              		.loc 1 258 0
 623 002c 7B68     		ldr	r3, [r7, #4]
 624 002e 1A46     		mov	r2, r3
 625 0030 07F10803 		add	r3, r7, #8
 626 0034 1868     		ldr	r0, [r3]	@ unaligned
 627 0036 1060     		str	r0, [r2]	@ unaligned
 628 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 629 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 259:notoriOS.c    ****     
 260:notoriOS.c    **** }
 630              		.loc 1 260 0
 631 003c 7868     		ldr	r0, [r7, #4]
 632 003e 1437     		adds	r7, r7, #20
 633              		.cfi_def_cfa_offset 4
 634 0040 BD46     		mov	sp, r7
 635              		.cfi_def_cfa_register 13
 636              		@ sp needed
 637 0042 80BC     		pop	{r7}
 638              		.cfi_restore 7
 639              		.cfi_def_cfa_offset 0
 640 0044 7047     		bx	lr
 641              		.cfi_endproc
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 17


 642              	.LFE71:
 643              		.size	CreateAlarm, .-CreateAlarm
 644 0046 00BF     		.section	.rodata
 645 003b 00       		.align	2
 646              	.LC2:
 647 003c 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 647      2D2D2D2D 
 647      2D2D2D2D 
 647      2D424547 
 647      494E2054 
 648 0066 0000     		.align	2
 649              	.LC3:
 650 0068 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\000"
 650      3D25732C 
 650      2053494D 
 650      49443D25 
 650      732C2044 
 651 0087 00       		.align	2
 652              	.LC4:
 653 0088 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 653      2D2D2D2D 
 653      2D2D2D2D 
 653      2D2D2D45 
 653      4E442054 
 654 00b1 00       		.ascii	"\000"
 655              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 656              		.align	2
 657              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 658              		.thumb
 659              		.thumb_func
 660              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 661              	ChickityCheckYourselfBeforeYouWreckYourself:
 662              	.LFB72:
 261:notoriOS.c    **** 
 262:notoriOS.c    **** // ==============================================
 263:notoriOS.c    **** // Dropping bombs on your moms
 264:notoriOS.c    **** //      - Ice Cube (1992)
 265:notoriOS.c    **** //
 266:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 267:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 268:notoriOS.c    **** // ==============================================
 269:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 663              		.loc 1 269 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 1944
 666              		@ frame_needed = 1, uses_anonymous_args = 0
 667 0000 90B5     		push	{r4, r7, lr}
 668              		.cfi_def_cfa_offset 12
 669              		.cfi_offset 4, -12
 670              		.cfi_offset 7, -8
 671              		.cfi_offset 14, -4
 672 0002 ADF6141D 		subw	sp, sp, #2324
 673              		.cfi_def_cfa_offset 2336
 674 0006 5EAF     		add	r7, sp, #376
 675              		.cfi_def_cfa 7, 1960
 270:notoriOS.c    **** 
 271:notoriOS.c    ****     //test_t t_influx = influx_test();
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 18


 272:notoriOS.c    ****     //printTestStatus(t_influx);
 273:notoriOS.c    ****     
 274:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 676              		.loc 1 274 0
 677 0008 3849     		ldr	r1, .L28
 678 000a 0320     		movs	r0, #3
 679 000c FFF7FEFF 		bl	printNotif
 275:notoriOS.c    ****     
 276:notoriOS.c    ****     // Test level sensor
 277:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 680              		.loc 1 277 0
 681 0010 07F21463 		addw	r3, r7, #1556
 682 0014 1846     		mov	r0, r3
 683 0016 FFF7FEFF 		bl	level_sensor_test
 278:notoriOS.c    ****     printTestStatus(t_level_sensor);
 684              		.loc 1 278 0
 685 001a 07F21464 		addw	r4, r7, #1556
 686 001e 6846     		mov	r0, sp
 687 0020 04F11003 		add	r3, r4, #16
 688 0024 40F27112 		movw	r2, #369
 689 0028 1946     		mov	r1, r3
 690 002a FFF7FEFF 		bl	memcpy
 691 002e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 692 0032 FFF7FEFF 		bl	printTestStatus
 279:notoriOS.c    ****     
 280:notoriOS.c    ****     // Test voltages
 281:notoriOS.c    ****     test_t t_voltages = voltages_test();
 693              		.loc 1 281 0
 694 0036 07F59263 		add	r3, r7, #1168
 695 003a 1846     		mov	r0, r3
 696 003c FFF7FEFF 		bl	voltages_test
 282:notoriOS.c    ****     printTestStatus(t_voltages);
 697              		.loc 1 282 0
 698 0040 07F59264 		add	r4, r7, #1168
 699 0044 6846     		mov	r0, sp
 700 0046 04F11003 		add	r3, r4, #16
 701 004a 40F27112 		movw	r2, #369
 702 004e 1946     		mov	r1, r3
 703 0050 FFF7FEFF 		bl	memcpy
 704 0054 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 705 0058 FFF7FEFF 		bl	printTestStatus
 283:notoriOS.c    ****  
 284:notoriOS.c    ****     // Test voltages
 285:notoriOS.c    ****     test_t t_pressure = pressure_sensor_test();
 706              		.loc 1 285 0
 707 005c 07F54373 		add	r3, r7, #780
 708 0060 1846     		mov	r0, r3
 709 0062 FFF7FEFF 		bl	pressure_sensor_test
 286:notoriOS.c    ****     printTestStatus(t_pressure);
 710              		.loc 1 286 0
 711 0066 07F54374 		add	r4, r7, #780
 712 006a 6846     		mov	r0, sp
 713 006c 04F11003 		add	r3, r4, #16
 714 0070 40F27112 		movw	r2, #369
 715 0074 1946     		mov	r1, r3
 716 0076 FFF7FEFF 		bl	memcpy
 717 007a 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 19


 718 007e FFF7FEFF 		bl	printTestStatus
 287:notoriOS.c    ****     
 288:notoriOS.c    ****     // Test SD card
 289:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 719              		.loc 1 289 0
 720 0082 07F5C473 		add	r3, r7, #392
 721 0086 1846     		mov	r0, r3
 722 0088 FFF7FEFF 		bl	SD_card_test
 290:notoriOS.c    ****     printTestStatus(t_sd_card);
 723              		.loc 1 290 0
 724 008c 07F5C474 		add	r4, r7, #392
 725 0090 6846     		mov	r0, sp
 726 0092 04F11003 		add	r3, r4, #16
 727 0096 40F27112 		movw	r2, #369
 728 009a 1946     		mov	r1, r3
 729 009c FFF7FEFF 		bl	memcpy
 730 00a0 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 731 00a4 FFF7FEFF 		bl	printTestStatus
 291:notoriOS.c    ****     
 292:notoriOS.c    ****     // Test modem
 293:notoriOS.c    ****     test_t t_modem = modem_test();
 732              		.loc 1 293 0
 733 00a8 3B1D     		adds	r3, r7, #4
 734 00aa 1846     		mov	r0, r3
 735 00ac FFF7FEFF 		bl	modem_test
 294:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s",modem_info.imei,modem_info.sim_i
 736              		.loc 1 294 0
 737 00b0 0F4B     		ldr	r3, .L28+4
 738 00b2 0093     		str	r3, [sp]
 739 00b4 0F4B     		ldr	r3, .L28+8
 740 00b6 104A     		ldr	r2, .L28+12
 741 00b8 1049     		ldr	r1, .L28+16
 742 00ba 0320     		movs	r0, #3
 743 00bc FFF7FEFF 		bl	printNotif
 295:notoriOS.c    ****     printTestStatus(t_modem);
 744              		.loc 1 295 0
 745 00c0 3C1D     		adds	r4, r7, #4
 746 00c2 6846     		mov	r0, sp
 747 00c4 04F11003 		add	r3, r4, #16
 748 00c8 40F27112 		movw	r2, #369
 749 00cc 1946     		mov	r1, r3
 750 00ce FFF7FEFF 		bl	memcpy
 751 00d2 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 752 00d6 FFF7FEFF 		bl	printTestStatus
 296:notoriOS.c    ****     
 297:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 753              		.loc 1 297 0
 754 00da 0949     		ldr	r1, .L28+20
 755 00dc 0320     		movs	r0, #3
 756 00de FFF7FEFF 		bl	printNotif
 298:notoriOS.c    **** 
 299:notoriOS.c    **** }
 757              		.loc 1 299 0
 758 00e2 00BF     		nop
 759 00e4 07F29C77 		addw	r7, r7, #1948
 760              		.cfi_def_cfa_offset 12
 761 00e8 BD46     		mov	sp, r7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 20


 762              		.cfi_def_cfa_register 13
 763              		@ sp needed
 764 00ea 90BD     		pop	{r4, r7, pc}
 765              	.L29:
 766              		.align	2
 767              	.L28:
 768 00ec 3C000000 		.word	.LC2
 769 00f0 04000000 		.word	system_info+4
 770 00f4 00000000 		.word	modem_info
 771 00f8 28000000 		.word	modem_info+40
 772 00fc 68000000 		.word	.LC3
 773 0100 88000000 		.word	.LC4
 774              		.cfi_endproc
 775              	.LFE72:
 776              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 777              		.section	.text.main,"ax",%progbits
 778              		.align	2
 779              		.global	main
 780              		.thumb
 781              		.thumb_func
 782              		.type	main, %function
 783              	main:
 784              	.LFB73:
 300:notoriOS.c    **** 
 301:notoriOS.c    **** // ==============================================
 302:notoriOS.c    **** // Processes Core Tasks
 303:notoriOS.c    **** // ==============================================
 304:notoriOS.c    **** int main(void)
 305:notoriOS.c    **** {
 785              		.loc 1 305 0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 1, uses_anonymous_args = 0
 789 0000 80B5     		push	{r7, lr}
 790              		.cfi_def_cfa_offset 8
 791              		.cfi_offset 7, -8
 792              		.cfi_offset 14, -4
 793 0002 00AF     		add	r7, sp, #0
 794              		.cfi_def_cfa_register 7
 306:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 795              		.loc 1 306 0
 796              		.syntax unified
 797              	@ 306 "notoriOS.c" 1
 798 0004 62B6     		CPSIE   i
 799              	@ 0 "" 2
 307:notoriOS.c    **** 
 308:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 800              		.loc 1 308 0
 801              		.thumb
 802              		.syntax unified
 803 0006 FFF7FEFF 		bl	ReadyOrNot
 309:notoriOS.c    ****     
 310:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 804              		.loc 1 310 0
 805 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 806              	.L32:
 311:notoriOS.c    ****    
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 21


 312:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 313:notoriOS.c    ****     {
 314:notoriOS.c    ****         
 315:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 807              		.loc 1 315 0
 808 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 809 0012 0346     		mov	r3, r0
 810 0014 002B     		cmp	r3, #0
 811 0016 FAD1     		bne	.L32
 316:notoriOS.c    ****         {
 317:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
 812              		.loc 1 317 0
 813 0018 FFF7FEFF 		bl	LayBack
 318:notoriOS.c    ****         }
 319:notoriOS.c    ****     }
 814              		.loc 1 319 0
 815 001c F7E7     		b	.L32
 816              		.cfi_endproc
 817              	.LFE73:
 818              		.size	main, .-main
 819 001e 00BF     		.section	.rodata
 820 00b2 0000     		.align	2
 821              	.LC5:
 822 00b4 4D6F6465 		.ascii	"Modem is ready.\000"
 822      6D206973 
 822      20726561 
 822      64792E00 
 823              		.align	2
 824              	.LC6:
 825 00c4 256400   		.ascii	"%d\000"
 826 00c7 00       		.align	2
 827              	.LC7:
 828 00c8 72737270 		.ascii	"rsrp\000"
 828      00
 829 00cd 000000   		.align	2
 830              	.LC8:
 831 00d0 72736370 		.ascii	"rscp\000"
 831      00
 832 00d5 000000   		.align	2
 833              	.LC9:
 834 00d8 7472795F 		.ascii	"try_counter\000"
 834      636F756E 
 834      74657200 
 835              		.align	2
 836              	.LC10:
 837 00e4 64617461 		.ascii	"data_count_sent\000"
 837      5F636F75 
 837      6E745F73 
 837      656E7400 
 838              		.align	2
 839              	.LC11:
 840 00f4 64617461 		.ascii	"data_count_desired\000"
 840      5F636F75 
 840      6E745F64 
 840      65736972 
 840      656400
 841 0107 00       		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 22


 842              	.LC12:
 843 0108 42656769 		.ascii	"Begin HTTP post.\000"
 843      6E204854 
 843      54502070 
 843      6F73742E 
 843      00
 844 0119 000000   		.align	2
 845              	.LC13:
 846 011c 63303466 		.ascii	"c04faebde49991d2f9ea4f8afefd40a4d6542086\000"
 846      61656264 
 846      65343939 
 846      39316432 
 846      66396561 
 847 0145 000000   		.align	2
 848              	.LC14:
 849 0148 6170692F 		.ascii	"api/v1/write\000"
 849      76312F77 
 849      72697465 
 849      00
 850 0155 000000   		.align	2
 851              	.LC15:
 852 0158 48545450 		.ascii	"HTTP route: %s\000"
 852      20726F75 
 852      74653A20 
 852      257300
 853 0167 00       		.align	2
 854              	.LC16:
 855 0168 312E3100 		.ascii	"1.1\000"
 856              		.align	2
 857              	.LC17:
 858 016c 00       		.ascii	"\000"
 859 016d 000000   		.align	2
 860              	.LC18:
 861 0170 436C6F73 		.ascii	"Close\000"
 861      6500
 862 0176 0000     		.align	2
 863              	.LC19:
 864 0178 504F5354 		.ascii	"POST\000"
 864      00
 865 017d 000000   		.align	2
 866              	.LC20:
 867 0180 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 867      20485454 
 867      50205265 
 867      71756573 
 867      743A2025 
 868 0196 0000     		.align	2
 869              	.LC21:
 870 0198 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 870      443D312C 
 870      302C2564 
 870      2C222573 
 870      222C302C 
 871 01b1 000000   		.align	2
 872              	.LC22:
 873 01b4 257300   		.ascii	"%s\000"
 874 01b7 00       		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 23


 875              	.LC23:
 876 01b8 4F4B00   		.ascii	"OK\000"
 877              		.global	__aeabi_ui2d
 878              		.global	__aeabi_d2iz
 879 01bb 00       		.align	2
 880              	.LC24:
 881 01bc 68747470 		.ascii	"http_request len: %d\000"
 881      5F726571 
 881      75657374 
 881      206C656E 
 881      3A202564 
 882 01d1 000000   		.align	2
 883              	.LC25:
 884 01d4 23206F66 		.ascii	"# of packets: %d\000"
 884      20706163 
 884      6B657473 
 884      3A202564 
 884      00
 885 01e5 000000   		.align	2
 886              	.LC26:
 887 01e8 3E00     		.ascii	">\000"
 888 01ea 0000     		.align	2
 889              	.LC27:
 890 01ec 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 890      53454E44 
 890      3D310D0A 
 890      00
 891 01f9 000000   		.align	2
 892              	.LC28:
 893 01fc 1A00     		.ascii	"\032\000"
 894 01fe 0000     		.align	2
 895              	.LC29:
 896 0200 6368756E 		.ascii	"chunk %d: %s\000"
 896      6B202564 
 896      3A202573 
 896      00
 897 020d 000000   		.align	2
 898              	.LC30:
 899 0210 5352494E 		.ascii	"SRING\000"
 899      4700
 900 0216 0000     		.align	2
 901              	.LC31:
 902 0218 4F532D4F 		.ascii	"OS-OK\000"
 902      4B00
 903 021e 0000     		.align	2
 904              	.LC32:
 905 0220 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 905      52454356 
 905      3D312C31 
 905      3030300D 
 905      00
 906 0231 000000   		.align	2
 907              	.LC33:
 908 0234 6D6F6465 		.ascii	"modem_tx_time\000"
 908      6D5F7478 
 908      5F74696D 
 908      6500
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 24


 909 0242 0000     		.align	2
 910              	.LC34:
 911 0244 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 911      4F3A2043 
 911      6F756C64 
 911      206E6F74 
 911      20726563 
 912              		.section	.text.syncData,"ax",%progbits
 913              		.align	2
 914              		.global	syncData
 915              		.thumb
 916              		.thumb_func
 917              		.type	syncData, %function
 918              	syncData:
 919              	.LFB74:
 320:notoriOS.c    **** }
 321:notoriOS.c    **** 
 322:notoriOS.c    **** // ==============================================
 323:notoriOS.c    **** // Syncs data with server
 324:notoriOS.c    **** // Returns 0 when done
 325:notoriOS.c    **** // ==============================================
 326:notoriOS.c    **** uint8 syncData(){
 920              		.loc 1 326 0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 1360
 923              		@ frame_needed = 1, uses_anonymous_args = 0
 924 0000 90B5     		push	{r4, r7, lr}
 925              		.cfi_def_cfa_offset 12
 926              		.cfi_offset 4, -12
 927              		.cfi_offset 7, -8
 928              		.cfi_offset 14, -4
 929 0002 ADF26C5D 		subw	sp, sp, #1388
 930              		.cfi_def_cfa_offset 1400
 931 0006 06AF     		add	r7, sp, #24
 932              		.cfi_def_cfa 7, 1376
 327:notoriOS.c    ****     
 328:notoriOS.c    ****     /*
 329:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 330:notoriOS.c    ****     uint8 check = 0;
 331:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 332:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 333:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 334:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 335:notoriOS.c    ****     */
 336:notoriOS.c    **** 
 337:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 338:notoriOS.c    ****     LED_Write(1u);
 933              		.loc 1 338 0
 934 0008 0120     		movs	r0, #1
 935 000a FFF7FEFF 		bl	LED_Write
 339:notoriOS.c    ****     CyDelay(100u);
 936              		.loc 1 339 0
 937 000e 6420     		movs	r0, #100
 938 0010 FFF7FEFF 		bl	CyDelay
 340:notoriOS.c    ****     LED_Write(0u);
 939              		.loc 1 340 0
 940 0014 0020     		movs	r0, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 25


 941 0016 FFF7FEFF 		bl	LED_Write
 341:notoriOS.c    **** 
 342:notoriOS.c    ****     
 343:notoriOS.c    ****     // If there's no data, not need to do anything
 344:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 942              		.loc 1 344 0
 943 001a FFF7FEFF 		bl	sizeOfDataStack
 944 001e 0346     		mov	r3, r0
 945 0020 002B     		cmp	r3, #0
 946 0022 01D1     		bne	.L34
 345:notoriOS.c    ****         return 0u;
 947              		.loc 1 345 0
 948 0024 0023     		movs	r3, #0
 949 0026 03E2     		b	.L35
 950              	.L34:
 346:notoriOS.c    ****         }
 347:notoriOS.c    ****     
 348:notoriOS.c    ****     // Create request body, in this case influx
 349:notoriOS.c    ****     // Place body into HTTP request header
 350:notoriOS.c    ****     // Fire up modem and get it out
 351:notoriOS.c    ****      
 352:notoriOS.c    ****     
 353:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 354:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 951              		.loc 1 354 0
 952 0028 FFF7FEFF 		bl	modem_get_state
 953 002c 0346     		mov	r3, r0
 954 002e 002B     		cmp	r3, #0
 955 0030 11D1     		bne	.L36
 355:notoriOS.c    **** 
 356:notoriOS.c    ****         try_counter++;
 956              		.loc 1 356 0
 957 0032 AE4B     		ldr	r3, .L48
 958 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 959 0036 0133     		adds	r3, r3, #1
 960 0038 DAB2     		uxtb	r2, r3
 961 003a AC4B     		ldr	r3, .L48
 962 003c 1A70     		strb	r2, [r3]
 357:notoriOS.c    ****         	
 358:notoriOS.c    ****         if(try_counter <= 2){
 963              		.loc 1 358 0
 964 003e AB4B     		ldr	r3, .L48
 965 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 966 0042 022B     		cmp	r3, #2
 967 0044 02D8     		bhi	.L37
 359:notoriOS.c    ****             modem_power_up();
 968              		.loc 1 359 0
 969 0046 FFF7FEFF 		bl	modem_power_up
 970 004a F0E1     		b	.L38
 971              	.L37:
 360:notoriOS.c    ****         }else{
 361:notoriOS.c    ****             try_counter = 0;
 972              		.loc 1 361 0
 973 004c A74B     		ldr	r3, .L48
 974 004e 0022     		movs	r2, #0
 975 0050 1A70     		strb	r2, [r3]
 362:notoriOS.c    ****             return 0u;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 26


 976              		.loc 1 362 0
 977 0052 0023     		movs	r3, #0
 978 0054 ECE1     		b	.L35
 979              	.L36:
 363:notoriOS.c    ****             }
 364:notoriOS.c    ****             
 365:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 980              		.loc 1 365 0
 981 0056 FFF7FEFF 		bl	modem_get_state
 982 005a 0346     		mov	r3, r0
 983 005c 042B     		cmp	r3, #4
 984 005e 40F0E681 		bne	.L38
 985              	.LBB2:
 366:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 986              		.loc 1 366 0
 987 0062 A349     		ldr	r1, .L48+4
 988 0064 0020     		movs	r0, #0
 989 0066 FFF7FEFF 		bl	printNotif
 367:notoriOS.c    ****         
 368:notoriOS.c    ****         http_request[0] = '\0';
 990              		.loc 1 368 0
 991 006a A24B     		ldr	r3, .L48+8
 992 006c 0022     		movs	r2, #0
 993 006e 1A70     		strb	r2, [r3]
 369:notoriOS.c    ****         http_body[0] = '\0';
 994              		.loc 1 369 0
 995 0070 A14B     		ldr	r3, .L48+12
 996 0072 0022     		movs	r2, #0
 997 0074 1A70     		strb	r2, [r3]
 370:notoriOS.c    ****         http_route[0] = '\0';
 998              		.loc 1 370 0
 999 0076 A14B     		ldr	r3, .L48+16
 1000 0078 0022     		movs	r2, #0
 1001 007a 1A70     		strb	r2, [r3]
 371:notoriOS.c    ****         //char *base = "write";
 372:notoriOS.c    ****         
 373:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power and RSCP: received signal
 374:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 375:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 1002              		.loc 1 375 0
 1003 007c A04B     		ldr	r3, .L48+20
 1004 007e 5B69     		ldr	r3, [r3, #20]
 1005 0080 07F5A560 		add	r0, r7, #1320
 1006 0084 9F4A     		ldr	r2, .L48+24
 1007 0086 1421     		movs	r1, #20
 1008 0088 FFF7FEFF 		bl	snprintf
 376:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 1009              		.loc 1 376 0
 1010 008c FFF7FEFF 		bl	getTimeStamp
 1011 0090 0246     		mov	r2, r0
 1012 0092 07F5A563 		add	r3, r7, #1320
 1013 0096 1946     		mov	r1, r3
 1014 0098 9B48     		ldr	r0, .L48+28
 1015 009a FFF7FEFF 		bl	pushData
 377:notoriOS.c    ****         
 378:notoriOS.c    ****         char s_rscp[DATA_MAX_KEY_LENGTH];
 379:notoriOS.c    ****         snprintf(s_rscp,sizeof(s_rscp),"%d",modem_stats.rscp);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 27


 1016              		.loc 1 379 0
 1017 009e 984B     		ldr	r3, .L48+20
 1018 00a0 9B68     		ldr	r3, [r3, #8]
 1019 00a2 07F21450 		addw	r0, r7, #1300
 1020 00a6 974A     		ldr	r2, .L48+24
 1021 00a8 1421     		movs	r1, #20
 1022 00aa FFF7FEFF 		bl	snprintf
 380:notoriOS.c    ****         pushData("rscp", s_rscp, getTimeStamp());
 1023              		.loc 1 380 0
 1024 00ae FFF7FEFF 		bl	getTimeStamp
 1025 00b2 0246     		mov	r2, r0
 1026 00b4 07F21453 		addw	r3, r7, #1300
 1027 00b8 1946     		mov	r1, r3
 1028 00ba 9448     		ldr	r0, .L48+32
 1029 00bc FFF7FEFF 		bl	pushData
 381:notoriOS.c    ****         
 382:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 383:notoriOS.c    ****         char c_try_counter[20];
 384:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 1030              		.loc 1 384 0
 1031 00c0 8A4B     		ldr	r3, .L48
 1032 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1033 00c4 07F5A060 		add	r0, r7, #1280
 1034 00c8 8E4A     		ldr	r2, .L48+24
 1035 00ca 1421     		movs	r1, #20
 1036 00cc FFF7FEFF 		bl	snprintf
 385:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 1037              		.loc 1 385 0
 1038 00d0 FFF7FEFF 		bl	getTimeStamp
 1039 00d4 0246     		mov	r2, r0
 1040 00d6 07F5A063 		add	r3, r7, #1280
 1041 00da 1946     		mov	r1, r3
 1042 00dc 8C48     		ldr	r0, .L48+36
 1043 00de FFF7FEFF 		bl	pushData
 386:notoriOS.c    ****         
 387:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
 388:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 389:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 390:notoriOS.c    ****         if(buffer_overflow == false){
 1044              		.loc 1 390 0
 1045 00e2 8C4B     		ldr	r3, .L48+40
 1046 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1047 00e6 83F00103 		eor	r3, r3, #1
 1048 00ea DBB2     		uxtb	r3, r3
 1049 00ec 002B     		cmp	r3, #0
 1050 00ee 16D0     		beq	.L39
 1051              	.LBB3:
 391:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 1052              		.loc 1 391 0
 1053 00f0 FFF7FEFF 		bl	sizeOfDataStack
 1054 00f4 0346     		mov	r3, r0
 1055 00f6 A7F84835 		strh	r3, [r7, #1352]	@ movhi
 392:notoriOS.c    ****             char c_data_count_sent[20];
 393:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 1056              		.loc 1 393 0
 1057 00fa B7F84835 		ldrh	r3, [r7, #1352]
 1058 00fe 07F59B60 		add	r0, r7, #1240
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 28


 1059 0102 804A     		ldr	r2, .L48+24
 1060 0104 1421     		movs	r1, #20
 1061 0106 FFF7FEFF 		bl	snprintf
 394:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1062              		.loc 1 394 0
 1063 010a FFF7FEFF 		bl	getTimeStamp
 1064 010e 0246     		mov	r2, r0
 1065 0110 07F59B63 		add	r3, r7, #1240
 1066 0114 1946     		mov	r1, r3
 1067 0116 8048     		ldr	r0, .L48+44
 1068 0118 FFF7FEFF 		bl	pushData
 1069              	.LBE3:
 1070 011c 0FE0     		b	.L40
 1071              	.L39:
 1072              	.LBB4:
 395:notoriOS.c    ****         }else{
 396:notoriOS.c    ****             char c_data_count_sent[20];
 397:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1073              		.loc 1 397 0
 1074 011e 07F2C440 		addw	r0, r7, #1220
 1075 0122 9623     		movs	r3, #150
 1076 0124 774A     		ldr	r2, .L48+24
 1077 0126 1421     		movs	r1, #20
 1078 0128 FFF7FEFF 		bl	snprintf
 398:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1079              		.loc 1 398 0
 1080 012c FFF7FEFF 		bl	getTimeStamp
 1081 0130 0246     		mov	r2, r0
 1082 0132 07F2C443 		addw	r3, r7, #1220
 1083 0136 1946     		mov	r1, r3
 1084 0138 7748     		ldr	r0, .L48+44
 1085 013a FFF7FEFF 		bl	pushData
 1086              	.L40:
 1087              	.LBE4:
 399:notoriOS.c    ****         }
 400:notoriOS.c    ****         
 401:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 402:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 1088              		.loc 1 402 0
 1089 013e FFF7FEFF 		bl	sizeOfDataStackDesired
 1090 0142 0346     		mov	r3, r0
 1091 0144 A7F84635 		strh	r3, [r7, #1350]	@ movhi
 403:notoriOS.c    ****         char c_data_count_desired[20];
 404:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 405:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1092              		.loc 1 405 0
 1093 0148 B7F84635 		ldrh	r3, [r7, #1350]
 1094 014c 013B     		subs	r3, r3, #1
 1095 014e 07F2EC40 		addw	r0, r7, #1260
 1096 0152 6C4A     		ldr	r2, .L48+24
 1097 0154 1421     		movs	r1, #20
 1098 0156 FFF7FEFF 		bl	snprintf
 406:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
 1099              		.loc 1 406 0
 1100 015a FFF7FEFF 		bl	getTimeStamp
 1101 015e 0246     		mov	r2, r0
 1102 0160 07F2EC43 		addw	r3, r7, #1260
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 29


 1103 0164 1946     		mov	r1, r3
 1104 0166 6D48     		ldr	r0, .L48+48
 1105 0168 FFF7FEFF 		bl	pushData
 407:notoriOS.c    ****         
 408:notoriOS.c    ****         // Construct HTPP request
 409:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1106              		.loc 1 409 0
 1107 016c 6C49     		ldr	r1, .L48+52
 1108 016e 0020     		movs	r0, #0
 1109 0170 FFF7FEFF 		bl	printNotif
 410:notoriOS.c    ****         
 411:notoriOS.c    ****         // Old influx API
 412:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 413:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1110              		.loc 1 413 0
 1111 0174 6B4B     		ldr	r3, .L48+56
 1112 0176 6C4A     		ldr	r2, .L48+60
 1113 0178 6C49     		ldr	r1, .L48+64
 1114 017a 6048     		ldr	r0, .L48+16
 1115 017c FFF7FEFF 		bl	construct_malcom_route
 414:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1116              		.loc 1 414 0
 1117 0180 5E4A     		ldr	r2, .L48+16
 1118 0182 6B49     		ldr	r1, .L48+68
 1119 0184 0020     		movs	r0, #0
 1120 0186 FFF7FEFF 		bl	printNotif
 415:notoriOS.c    ****         
 416:notoriOS.c    ****         //OLD INFLUX API
 417:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 418:notoriOS.c    ****         construct_malcom_body(http_body);
 1121              		.loc 1 418 0
 1122 018a 5B48     		ldr	r0, .L48+12
 1123 018c FFF7FEFF 		bl	construct_malcom_body
 419:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1124              		.loc 1 419 0
 1125 0190 684B     		ldr	r3, .L48+72
 1126 0192 5B6E     		ldr	r3, [r3, #100]
 1127 0194 684A     		ldr	r2, .L48+76
 1128 0196 0592     		str	r2, [sp, #20]
 1129 0198 0022     		movs	r2, #0
 1130 019a 0492     		str	r2, [sp, #16]
 1131 019c 674A     		ldr	r2, .L48+80
 1132 019e 0392     		str	r2, [sp, #12]
 1133 01a0 674A     		ldr	r2, .L48+84
 1134 01a2 0292     		str	r2, [sp, #8]
 1135 01a4 674A     		ldr	r2, .L48+88
 1136 01a6 0192     		str	r2, [sp, #4]
 1137 01a8 0093     		str	r3, [sp]
 1138 01aa 544B     		ldr	r3, .L48+16
 1139 01ac 614A     		ldr	r2, .L48+72
 1140 01ae 5249     		ldr	r1, .L48+12
 1141 01b0 5048     		ldr	r0, .L48+8
 1142 01b2 FFF7FEFF 		bl	construct_generic_HTTP_request
 420:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1143              		.loc 1 420 0
 1144 01b6 4F4A     		ldr	r2, .L48+8
 1145 01b8 6349     		ldr	r1, .L48+92
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 30


 1146 01ba 0020     		movs	r0, #0
 1147 01bc FFF7FEFF 		bl	printNotif
 421:notoriOS.c    ****         
 422:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 423:notoriOS.c    ****         // Open port and begin command line sequence
 424:notoriOS.c    ****         char portConfig[200];
 425:notoriOS.c    ****         uint8 status = 0u;
 1148              		.loc 1 425 0
 1149 01c0 0023     		movs	r3, #0
 1150 01c2 87F84535 		strb	r3, [r7, #1349]
 426:notoriOS.c    ****         
 427:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1151              		.loc 1 427 0
 1152 01c6 5B4B     		ldr	r3, .L48+72
 1153 01c8 5A6E     		ldr	r2, [r3, #100]
 1154 01ca 381D     		adds	r0, r7, #4
 1155 01cc 594B     		ldr	r3, .L48+72
 1156 01ce 0093     		str	r3, [sp]
 1157 01d0 1346     		mov	r3, r2
 1158 01d2 5E4A     		ldr	r2, .L48+96
 1159 01d4 C821     		movs	r1, #200
 1160 01d6 FFF7FEFF 		bl	snprintf
 428:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1161              		.loc 1 428 0
 1162 01da 3B1D     		adds	r3, r7, #4
 1163 01dc 1A46     		mov	r2, r3
 1164 01de 5C49     		ldr	r1, .L48+100
 1165 01e0 0020     		movs	r0, #0
 1166 01e2 FFF7FEFF 		bl	printNotif
 429:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1167              		.loc 1 429 0
 1168 01e6 3B1D     		adds	r3, r7, #4
 1169 01e8 42F21072 		movw	r2, #10000
 1170 01ec 5949     		ldr	r1, .L48+104
 1171 01ee 1846     		mov	r0, r3
 1172 01f0 FFF7FEFF 		bl	at_write_command
 1173 01f4 0346     		mov	r3, r0
 1174 01f6 87F84535 		strb	r3, [r7, #1349]
 430:notoriOS.c    ****         
 431:notoriOS.c    ****         // create character pointer to chunk through the http_request
 432:notoriOS.c    ****         char *chunk;
 433:notoriOS.c    ****         // Set chunk to start where http_request starts
 434:notoriOS.c    ****         chunk = http_request;
 1175              		.loc 1 434 0
 1176 01fa 3E4B     		ldr	r3, .L48+8
 1177 01fc C7F84C35 		str	r3, [r7, #1356]
 435:notoriOS.c    ****         // variable for the number of packets to send
 436:notoriOS.c    ****         int8 packets;
 437:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1178              		.loc 1 437 0
 1179 0200 3C48     		ldr	r0, .L48+8
 1180 0202 FFF7FEFF 		bl	strlen
 1181 0206 0246     		mov	r2, r0
 1182 0208 534B     		ldr	r3, .L48+108
 1183 020a A3FB0223 		umull	r2, r3, r3, r2
 1184 020e 5B09     		lsrs	r3, r3, #5
 1185 0210 1846     		mov	r0, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 31


 1186 0212 FFF7FEFF 		bl	__aeabi_ui2d
 1187 0216 4FF00002 		mov	r2, #0
 1188 021a 504B     		ldr	r3, .L48+112
 1189 021c FFF7FEFF 		bl	nextafter
 1190 0220 0346     		mov	r3, r0
 1191 0222 0C46     		mov	r4, r1
 1192 0224 1846     		mov	r0, r3
 1193 0226 2146     		mov	r1, r4
 1194 0228 FFF7FEFF 		bl	ceil
 1195 022c 0346     		mov	r3, r0
 1196 022e 0C46     		mov	r4, r1
 1197 0230 1846     		mov	r0, r3
 1198 0232 2146     		mov	r1, r4
 1199 0234 FFF7FEFF 		bl	__aeabi_d2iz
 1200 0238 0346     		mov	r3, r0
 1201 023a 87F84435 		strb	r3, [r7, #1348]
 438:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1202              		.loc 1 438 0
 1203 023e 2D48     		ldr	r0, .L48+8
 1204 0240 FFF7FEFF 		bl	strlen
 1205 0244 0346     		mov	r3, r0
 1206 0246 1A46     		mov	r2, r3
 1207 0248 4549     		ldr	r1, .L48+116
 1208 024a 0020     		movs	r0, #0
 1209 024c FFF7FEFF 		bl	printNotif
 439:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1210              		.loc 1 439 0
 1211 0250 97F94435 		ldrsb	r3, [r7, #1348]
 1212 0254 1A46     		mov	r2, r3
 1213 0256 4349     		ldr	r1, .L48+120
 1214 0258 0020     		movs	r0, #0
 1215 025a FFF7FEFF 		bl	printNotif
 1216              	.LBB5:
 440:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 441:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1217              		.loc 1 441 0
 1218 025e 0023     		movs	r3, #0
 1219 0260 87F84B35 		strb	r3, [r7, #1355]
 1220 0264 9AE0     		b	.L41
 1221              	.L44:
 1222              	.LBB6:
 442:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 443:notoriOS.c    ****             char http_chunk[1001];
 444:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 445:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 446:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1223              		.loc 1 446 0
 1224 0266 4FF47A72 		mov	r2, #1000
 1225 026a 3F49     		ldr	r1, .L48+124
 1226 026c 3F48     		ldr	r0, .L48+128
 1227 026e FFF7FEFF 		bl	at_write_command
 1228 0272 0346     		mov	r3, r0
 1229 0274 87F84535 		strb	r3, [r7, #1349]
 447:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 448:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1230              		.loc 1 448 0
 1231 0278 07F1CC00 		add	r0, r7, #204
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 32


 1232 027c D7F84C35 		ldr	r3, [r7, #1356]
 1233 0280 334A     		ldr	r2, .L48+100
 1234 0282 4FF4FA71 		mov	r1, #500
 1235 0286 FFF7FEFF 		bl	snprintf
 449:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 450:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1236              		.loc 1 450 0
 1237 028a 07F1CC03 		add	r3, r7, #204
 1238 028e 1846     		mov	r0, r3
 1239 0290 FFF7FEFF 		bl	strlen
 1240 0294 0346     		mov	r3, r0
 1241 0296 1A46     		mov	r2, r3
 1242 0298 07F1CC03 		add	r3, r7, #204
 1243 029c 1344     		add	r3, r3, r2
 1244 029e 3449     		ldr	r1, .L48+132
 1245 02a0 1A46     		mov	r2, r3
 1246 02a2 0B46     		mov	r3, r1
 1247 02a4 1B88     		ldrh	r3, [r3]	@ unaligned
 1248 02a6 1380     		strh	r3, [r2]	@ unaligned
 451:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1249              		.loc 1 451 0
 1250 02a8 97F94B25 		ldrsb	r2, [r7, #1355]
 1251 02ac 07F1CC03 		add	r3, r7, #204
 1252 02b0 3049     		ldr	r1, .L48+136
 1253 02b2 0020     		movs	r0, #0
 1254 02b4 FFF7FEFF 		bl	printNotif
 452:notoriOS.c    ****             // Send data to server
 453:notoriOS.c    ****             if ((packet+1) != packets){
 1255              		.loc 1 453 0
 1256 02b8 97F94B35 		ldrsb	r3, [r7, #1355]
 1257 02bc 5A1C     		adds	r2, r3, #1
 1258 02be 97F94435 		ldrsb	r3, [r7, #1348]
 1259 02c2 9A42     		cmp	r2, r3
 1260 02c4 58D0     		beq	.L42
 454:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1261              		.loc 1 454 0
 1262 02c6 07F1CC03 		add	r3, r7, #204
 1263 02ca 41F28832 		movw	r2, #5000
 1264 02ce 2149     		ldr	r1, .L48+104
 1265 02d0 1846     		mov	r0, r3
 1266 02d2 FFF7FEFF 		bl	at_write_command
 1267 02d6 0346     		mov	r3, r0
 1268 02d8 87F84535 		strb	r3, [r7, #1349]
 455:notoriOS.c    ****                 // Move the pointer forward 
 456:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1269              		.loc 1 456 0
 1270 02dc D7F84C35 		ldr	r3, [r7, #1356]
 1271 02e0 03F2F313 		addw	r3, r3, #499
 1272 02e4 C7F84C35 		str	r3, [r7, #1356]
 1273 02e8 51E0     		b	.L43
 1274              	.L49:
 1275 02ea 00BF     		.align	2
 1276              	.L48:
 1277 02ec 00000000 		.word	try_counter
 1278 02f0 B4000000 		.word	.LC5
 1279 02f4 00000000 		.word	http_request
 1280 02f8 00000000 		.word	http_body
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 33


 1281 02fc 00000000 		.word	http_route
 1282 0300 00000000 		.word	modem_stats
 1283 0304 C4000000 		.word	.LC6
 1284 0308 C8000000 		.word	.LC7
 1285 030c D0000000 		.word	.LC8
 1286 0310 D8000000 		.word	.LC9
 1287 0314 00000000 		.word	buffer_overflow
 1288 0318 E4000000 		.word	.LC10
 1289 031c F4000000 		.word	.LC11
 1290 0320 08010000 		.word	.LC12
 1291 0324 1C010000 		.word	.LC13
 1292 0328 28000000 		.word	modem_info+40
 1293 032c 48010000 		.word	.LC14
 1294 0330 58010000 		.word	.LC15
 1295 0334 00000000 		.word	system_settings
 1296 0338 68010000 		.word	.LC16
 1297 033c 6C010000 		.word	.LC17
 1298 0340 70010000 		.word	.LC18
 1299 0344 78010000 		.word	.LC19
 1300 0348 80010000 		.word	.LC20
 1301 034c 98010000 		.word	.LC21
 1302 0350 B4010000 		.word	.LC22
 1303 0354 B8010000 		.word	.LC23
 1304 0358 D34D6210 		.word	274877907
 1305 035c 00407F40 		.word	1082081280
 1306 0360 BC010000 		.word	.LC24
 1307 0364 D4010000 		.word	.LC25
 1308 0368 E8010000 		.word	.LC26
 1309 036c EC010000 		.word	.LC27
 1310 0370 FC010000 		.word	.LC28
 1311 0374 00020000 		.word	.LC29
 1312              	.L42:
 457:notoriOS.c    ****             }else{
 458:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
 1313              		.loc 1 458 0
 1314 0378 07F1CC03 		add	r3, r7, #204
 1315 037c 41F28832 		movw	r2, #5000
 1316 0380 2E49     		ldr	r1, .L50
 1317 0382 1846     		mov	r0, r3
 1318 0384 FFF7FEFF 		bl	at_write_command
 1319 0388 0346     		mov	r3, r0
 1320 038a 87F84535 		strb	r3, [r7, #1349]
 1321              	.L43:
 1322              	.LBE6:
 441:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1323              		.loc 1 441 0 discriminator 2
 1324 038e 97F94B35 		ldrsb	r3, [r7, #1355]
 1325 0392 DBB2     		uxtb	r3, r3
 1326 0394 0133     		adds	r3, r3, #1
 1327 0396 DBB2     		uxtb	r3, r3
 1328 0398 87F84B35 		strb	r3, [r7, #1355]
 1329              	.L41:
 441:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1330              		.loc 1 441 0 is_stmt 0 discriminator 1
 1331 039c 97F94B25 		ldrsb	r2, [r7, #1355]
 1332 03a0 97F94435 		ldrsb	r3, [r7, #1348]
 1333 03a4 9A42     		cmp	r2, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 34


 1334 03a6 FFF65EAF 		blt	.L44
 1335              	.LBE5:
 459:notoriOS.c    ****             }
 460:notoriOS.c    ****             
 461:notoriOS.c    ****         }
 462:notoriOS.c    ****         
 463:notoriOS.c    ****         // Read received buffer
 464:notoriOS.c    ****         // A good write will return code "OS-OK"
 465:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 466:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 467:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1336              		.loc 1 467 0 is_stmt 1
 1337 03aa 41F28832 		movw	r2, #5000
 1338 03ae 2449     		ldr	r1, .L50+4
 1339 03b0 2448     		ldr	r0, .L50+8
 1340 03b2 FFF7FEFF 		bl	at_write_command
 1341 03b6 0346     		mov	r3, r0
 1342 03b8 87F84535 		strb	r3, [r7, #1349]
 468:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 469:notoriOS.c    ****     
 470:notoriOS.c    ****   
 471:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 472:notoriOS.c    ****         if(status == 1u){
 1343              		.loc 1 472 0
 1344 03bc 97F84535 		ldrb	r3, [r7, #1349]	@ zero_extendqisi2
 1345 03c0 012B     		cmp	r3, #1
 1346 03c2 1DD1     		bne	.L45
 1347              	.LBB7:
 473:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1348              		.loc 1 473 0
 1349 03c4 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 474:notoriOS.c    ****             Clear_Data_Stack();
 1350              		.loc 1 474 0
 1351 03c8 FFF7FEFF 		bl	Clear_Data_Stack
 475:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1352              		.loc 1 475 0
 1353 03cc FFF7FEFF 		bl	getTimeStamp
 1354 03d0 0246     		mov	r2, r0
 1355 03d2 1D4B     		ldr	r3, .L50+12
 1356 03d4 1B68     		ldr	r3, [r3]
 1357 03d6 D31A     		subs	r3, r2, r3
 1358 03d8 C7F84035 		str	r3, [r7, #1344]
 476:notoriOS.c    ****             char s_send_time[10];
 477:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1359              		.loc 1 477 0
 1360 03dc 07F59760 		add	r0, r7, #1208
 1361 03e0 D7F84035 		ldr	r3, [r7, #1344]
 1362 03e4 194A     		ldr	r2, .L50+16
 1363 03e6 0A21     		movs	r1, #10
 1364 03e8 FFF7FEFF 		bl	snprintf
 478:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1365              		.loc 1 478 0
 1366 03ec FFF7FEFF 		bl	getTimeStamp
 1367 03f0 0246     		mov	r2, r0
 1368 03f2 07F59763 		add	r3, r7, #1208
 1369 03f6 1946     		mov	r1, r3
 1370 03f8 1548     		ldr	r0, .L50+20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 35


 1371 03fa FFF7FEFF 		bl	pushData
 1372              	.LBE7:
 1373 03fe 03E0     		b	.L46
 1374              	.L45:
 479:notoriOS.c    ****         }else{
 480:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1375              		.loc 1 480 0
 1376 0400 1449     		ldr	r1, .L50+24
 1377 0402 0220     		movs	r0, #2
 1378 0404 FFF7FEFF 		bl	printNotif
 1379              	.L46:
 481:notoriOS.c    ****         }
 482:notoriOS.c    ****          
 483:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 484:notoriOS.c    ****         long network_time = modem_get_network_time();
 1380              		.loc 1 484 0
 1381 0408 FFF7FEFF 		bl	modem_get_network_time
 1382 040c C7F83C05 		str	r0, [r7, #1340]
 485:notoriOS.c    ****         if(network_time != 0){
 1383              		.loc 1 485 0
 1384 0410 D7F83C35 		ldr	r3, [r7, #1340]
 1385 0414 002B     		cmp	r3, #0
 1386 0416 03D0     		beq	.L47
 486:notoriOS.c    ****            setTime(network_time);
 1387              		.loc 1 486 0
 1388 0418 D7F83C05 		ldr	r0, [r7, #1340]
 1389 041c FFF7FEFF 		bl	setTime
 1390              	.L47:
 487:notoriOS.c    ****         }
 488:notoriOS.c    ****         
 489:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 490:notoriOS.c    ****         // If not -- keep the statck and try next time
 491:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 492:notoriOS.c    ****         modem_power_down();
 1391              		.loc 1 492 0
 1392 0420 FFF7FEFF 		bl	modem_power_down
 493:notoriOS.c    ****         
 494:notoriOS.c    ****         try_counter = 0u;
 1393              		.loc 1 494 0
 1394 0424 0C4B     		ldr	r3, .L50+28
 1395 0426 0022     		movs	r2, #0
 1396 0428 1A70     		strb	r2, [r3]
 495:notoriOS.c    ****         return 0u;
 1397              		.loc 1 495 0
 1398 042a 0023     		movs	r3, #0
 1399 042c 00E0     		b	.L35
 1400              	.L38:
 1401              	.LBE2:
 496:notoriOS.c    ****     }
 497:notoriOS.c    ****       
 498:notoriOS.c    ****       return 1u; // Not done yet
 1402              		.loc 1 498 0
 1403 042e 0123     		movs	r3, #1
 1404              	.L35:
 499:notoriOS.c    **** }
 1405              		.loc 1 499 0 discriminator 1
 1406 0430 1846     		mov	r0, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 36


 1407 0432 07F25457 		addw	r7, r7, #1364
 1408              		.cfi_def_cfa_offset 12
 1409 0436 BD46     		mov	sp, r7
 1410              		.cfi_def_cfa_register 13
 1411              		@ sp needed
 1412 0438 90BD     		pop	{r4, r7, pc}
 1413              	.L51:
 1414 043a 00BF     		.align	2
 1415              	.L50:
 1416 043c 10020000 		.word	.LC30
 1417 0440 18020000 		.word	.LC31
 1418 0444 20020000 		.word	.LC32
 1419 0448 00000000 		.word	modem_start_time_stamp
 1420 044c C4000000 		.word	.LC6
 1421 0450 34020000 		.word	.LC33
 1422 0454 44020000 		.word	.LC34
 1423 0458 00000000 		.word	try_counter
 1424              		.cfi_endproc
 1425              	.LFE74:
 1426              		.size	syncData, .-syncData
 1427              		.section	.text.configureRemoteParams,"ax",%progbits
 1428              		.align	2
 1429              		.global	configureRemoteParams
 1430              		.thumb
 1431              		.thumb_func
 1432              		.type	configureRemoteParams, %function
 1433              	configureRemoteParams:
 1434              	.LFB75:
 500:notoriOS.c    **** 
 501:notoriOS.c    **** // ==============================================
 502:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 503:notoriOS.c    **** // Returns 0 when done
 504:notoriOS.c    **** // ==============================================
 505:notoriOS.c    **** uint8 configureRemoteParams(){
 1435              		.loc 1 505 0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 8
 1438              		@ frame_needed = 1, uses_anonymous_args = 0
 1439 0000 80B5     		push	{r7, lr}
 1440              		.cfi_def_cfa_offset 8
 1441              		.cfi_offset 7, -8
 1442              		.cfi_offset 14, -4
 1443 0002 82B0     		sub	sp, sp, #8
 1444              		.cfi_def_cfa_offset 16
 1445 0004 00AF     		add	r7, sp, #0
 1446              		.cfi_def_cfa_register 7
 506:notoriOS.c    ****     
 507:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1447              		.loc 1 507 0
 1448 0006 FFF7FEFF 		bl	modem_get_state
 1449 000a 0346     		mov	r3, r0
 1450 000c 002B     		cmp	r3, #0
 1451 000e 02D1     		bne	.L53
 508:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 509:notoriOS.c    ****         modem_power_up();
 1452              		.loc 1 509 0
 1453 0010 FFF7FEFF 		bl	modem_power_up
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 37


 1454 0014 11E0     		b	.L54
 1455              	.L53:
 510:notoriOS.c    ****             
 511:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1456              		.loc 1 511 0
 1457 0016 FFF7FEFF 		bl	modem_get_state
 1458 001a 0346     		mov	r3, r0
 1459 001c 042B     		cmp	r3, #4
 1460 001e 0CD1     		bne	.L54
 1461              	.LBB8:
 512:notoriOS.c    ****         
 513:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 514:notoriOS.c    ****         
 515:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 516:notoriOS.c    ****         long network_time = modem_get_network_time();
 1462              		.loc 1 516 0
 1463 0020 FFF7FEFF 		bl	modem_get_network_time
 1464 0024 7860     		str	r0, [r7, #4]
 517:notoriOS.c    ****         if(network_time != 0){
 1465              		.loc 1 517 0
 1466 0026 7B68     		ldr	r3, [r7, #4]
 1467 0028 002B     		cmp	r3, #0
 1468 002a 02D0     		beq	.L55
 518:notoriOS.c    ****             setTime(network_time);
 1469              		.loc 1 518 0
 1470 002c 7868     		ldr	r0, [r7, #4]
 1471 002e FFF7FEFF 		bl	setTime
 1472              	.L55:
 519:notoriOS.c    ****         }
 520:notoriOS.c    ****         
 521:notoriOS.c    ****         // Get GPS coordinates
 522:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 523:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 524:notoriOS.c    ****         modem_power_down();
 1473              		.loc 1 524 0
 1474 0032 FFF7FEFF 		bl	modem_power_down
 525:notoriOS.c    ****         return 0u;
 1475              		.loc 1 525 0
 1476 0036 0023     		movs	r3, #0
 1477 0038 00E0     		b	.L56
 1478              	.L54:
 1479              	.LBE8:
 526:notoriOS.c    ****         
 527:notoriOS.c    ****     }
 528:notoriOS.c    ****     
 529:notoriOS.c    ****     return 1u;
 1480              		.loc 1 529 0
 1481 003a 0123     		movs	r3, #1
 1482              	.L56:
 530:notoriOS.c    **** }
 1483              		.loc 1 530 0
 1484 003c 1846     		mov	r0, r3
 1485 003e 0837     		adds	r7, r7, #8
 1486              		.cfi_def_cfa_offset 8
 1487 0040 BD46     		mov	sp, r7
 1488              		.cfi_def_cfa_register 13
 1489              		@ sp needed
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 38


 1490 0042 80BD     		pop	{r7, pc}
 1491              		.cfi_endproc
 1492              	.LFE75:
 1493              		.size	configureRemoteParams, .-configureRemoteParams
 1494              		.section	.rodata
 1495 026f 00       		.align	2
 1496              	.LC35:
 1497 0270 256C6400 		.ascii	"%ld\000"
 1498              		.align	2
 1499              	.LC36:
 1500 0274 6D617862 		.ascii	"maxbotix_depth=%s\000"
 1500      6F746978 
 1500      5F646570 
 1500      74683D25 
 1500      7300
 1501 0286 0000     		.align	2
 1502              	.LC37:
 1503 0288 6D617862 		.ascii	"maxbotix_depth\000"
 1503      6F746978 
 1503      5F646570 
 1503      746800
 1504 0297 00       		.align	2
 1505              	.LC38:
 1506 0298 612B00   		.ascii	"a+\000"
 1507 029b 00       		.align	2
 1508              	.LC39:
 1509 029c 206D6178 		.ascii	" maxbotix_depth: \000"
 1509      626F7469 
 1509      785F6465 
 1509      7074683A 
 1509      2000
 1510 02ae 0000     		.align	2
 1511              	.LC40:
 1512 02b0 2000     		.ascii	" \000"
 1513 02b2 0000     		.align	2
 1514              	.LC41:
 1515 02b4 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 1515      64206E6F 
 1515      74206765 
 1515      74207661 
 1515      6C696420 
 1516              		.global	__aeabi_f2d
 1517              		.align	2
 1518              	.LC42:
 1519 02e0 252E3266 		.ascii	"%.2f\000"
 1519      00
 1520 02e5 000000   		.align	2
 1521              	.LC43:
 1522 02e8 765F6261 		.ascii	"v_bat=%s\000"
 1522      743D2573 
 1522      00
 1523 02f1 000000   		.align	2
 1524              	.LC44:
 1525 02f4 765F6261 		.ascii	"v_bat\000"
 1525      7400
 1526 02fa 0000     		.align	2
 1527              	.LC45:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 39


 1528 02fc 20766261 		.ascii	" vbat: \000"
 1528      743A2000 
 1529              		.align	2
 1530              	.LC46:
 1531 0304 70726573 		.ascii	"pressure_current=%s\000"
 1531      73757265 
 1531      5F637572 
 1531      72656E74 
 1531      3D257300 
 1532              		.align	2
 1533              	.LC47:
 1534 0318 70726573 		.ascii	"pressure_current\000"
 1534      73757265 
 1534      5F637572 
 1534      72656E74 
 1534      00
 1535 0329 000000   		.align	2
 1536              	.LC48:
 1537 032c 20707265 		.ascii	" pressure_current: \000"
 1537      73737572 
 1537      655F6375 
 1537      7272656E 
 1537      743A2000 
 1538              		.align	2
 1539              	.LC49:
 1540 0340 70726573 		.ascii	"pressure_depth=%s\000"
 1540      73757265 
 1540      5F646570 
 1540      74683D25 
 1540      7300
 1541 0352 0000     		.align	2
 1542              	.LC50:
 1543 0354 70726573 		.ascii	"pressure_depth\000"
 1543      73757265 
 1543      5F646570 
 1543      746800
 1544 0363 00       		.align	2
 1545              	.LC51:
 1546 0364 20707265 		.ascii	" pressure_depth: \000"
 1546      73737572 
 1546      655F6465 
 1546      7074683A 
 1546      2000
 1547 0376 0000     		.align	2
 1548              	.LC52:
 1549 0378 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1549      64206E6F 
 1549      74206765 
 1549      74207661 
 1549      6C696420 
 1550              		.section	.text.makeMeasurements,"ax",%progbits
 1551              		.align	2
 1552              		.global	makeMeasurements
 1553              		.thumb
 1554              		.thumb_func
 1555              		.type	makeMeasurements, %function
 1556              	makeMeasurements:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 40


 1557              	.LFB76:
 531:notoriOS.c    **** 
 532:notoriOS.c    **** 
 533:notoriOS.c    **** // ==============================================
 534:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 535:notoriOS.c    **** // Returns 0 when finished
 536:notoriOS.c    **** // ==============================================
 537:notoriOS.c    **** uint8 makeMeasurements(){
 1558              		.loc 1 537 0
 1559              		.cfi_startproc
 1560              		@ args = 0, pretend = 0, frame = 120
 1561              		@ frame_needed = 1, uses_anonymous_args = 0
 1562 0000 90B5     		push	{r4, r7, lr}
 1563              		.cfi_def_cfa_offset 12
 1564              		.cfi_offset 4, -12
 1565              		.cfi_offset 7, -8
 1566              		.cfi_offset 14, -4
 1567 0002 A1B0     		sub	sp, sp, #132
 1568              		.cfi_def_cfa_offset 144
 1569 0004 02AF     		add	r7, sp, #8
 1570              		.cfi_def_cfa 7, 136
 538:notoriOS.c    ****     
 539:notoriOS.c    ****     // Get clock time and save to timeStamp
 540:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1571              		.loc 1 540 0
 1572 0006 FFF7FEFF 		bl	getTimeStamp
 1573 000a 7867     		str	r0, [r7, #116]
 541:notoriOS.c    ****     char c_timeStamp[32];
 542:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1574              		.loc 1 542 0
 1575 000c 07F15400 		add	r0, r7, #84
 1576 0010 7B6F     		ldr	r3, [r7, #116]
 1577 0012 834A     		ldr	r2, .L65
 1578 0014 2021     		movs	r1, #32
 1579 0016 FFF7FEFF 		bl	snprintf
 543:notoriOS.c    ****     
 544:notoriOS.c    ****     // Holds string for value that will be written 
 545:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 546:notoriOS.c    ****     
 547:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 548:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 1580              		.loc 1 548 0
 1581 001a 824B     		ldr	r3, .L65+4
 1582 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1583 001e 002B     		cmp	r3, #0
 1584 0020 3BD1     		bne	.L58
 1585              	.LBB9:
 549:notoriOS.c    ****         
 550:notoriOS.c    ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
 551:notoriOS.c    ****         level_sensor_t m_level_sensor;
 552:notoriOS.c    ****         
 553:notoriOS.c    ****         // Take level sensor readings and save them to m_level_sensor
 554:notoriOS.c    ****         m_level_sensor = level_sensor_take_reading();
 1586              		.loc 1 554 0
 1587 0022 07F11003 		add	r3, r7, #16
 1588 0026 1846     		mov	r0, r3
 1589 0028 FFF7FEFF 		bl	level_sensor_take_reading
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 41


 555:notoriOS.c    ****     
 556:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 557:notoriOS.c    ****         if(m_level_sensor.num_valid_readings > 0){
 1590              		.loc 1 557 0
 1591 002c 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1592 0030 002B     		cmp	r3, #0
 1593 0032 2ED0     		beq	.L59
 558:notoriOS.c    ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 1594              		.loc 1 558 0
 1595 0034 B7F92630 		ldrsh	r3, [r7, #38]
 1596 0038 07F14000 		add	r0, r7, #64
 1597 003c 7A4A     		ldr	r2, .L65+8
 1598 003e 1421     		movs	r1, #20
 1599 0040 FFF7FEFF 		bl	snprintf
 559:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 1600              		.loc 1 559 0
 1601 0044 07F14003 		add	r3, r7, #64
 1602 0048 1A46     		mov	r2, r3
 1603 004a 7849     		ldr	r1, .L65+12
 1604 004c 0020     		movs	r0, #0
 1605 004e FFF7FEFF 		bl	printNotif
 560:notoriOS.c    ****             pushData("maxbotix_depth",value,timeStamp);
 1606              		.loc 1 560 0
 1607 0052 07F14003 		add	r3, r7, #64
 1608 0056 7A6F     		ldr	r2, [r7, #116]
 1609 0058 1946     		mov	r1, r3
 1610 005a 7548     		ldr	r0, .L65+16
 1611 005c FFF7FEFF 		bl	pushData
 561:notoriOS.c    ****             
 562:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 563:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1612              		.loc 1 563 0
 1613 0060 07F15403 		add	r3, r7, #84
 1614 0064 1A46     		mov	r2, r3
 1615 0066 7349     		ldr	r1, .L65+20
 1616 0068 7348     		ldr	r0, .L65+24
 1617 006a FFF7FEFF 		bl	SD_write
 564:notoriOS.c    ****             SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 1618              		.loc 1 564 0
 1619 006e 734A     		ldr	r2, .L65+28
 1620 0070 7049     		ldr	r1, .L65+20
 1621 0072 7148     		ldr	r0, .L65+24
 1622 0074 FFF7FEFF 		bl	SD_write
 565:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1623              		.loc 1 565 0
 1624 0078 07F14003 		add	r3, r7, #64
 1625 007c 1A46     		mov	r2, r3
 1626 007e 6D49     		ldr	r1, .L65+20
 1627 0080 6D48     		ldr	r0, .L65+24
 1628 0082 FFF7FEFF 		bl	SD_write
 566:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1629              		.loc 1 566 0
 1630 0086 6E4A     		ldr	r2, .L65+32
 1631 0088 6A49     		ldr	r1, .L65+20
 1632 008a 6B48     		ldr	r0, .L65+24
 1633 008c FFF7FEFF 		bl	SD_write
 1634 0090 03E0     		b	.L58
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 42


 1635              	.L59:
 567:notoriOS.c    ****         }else{
 568:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 1636              		.loc 1 568 0
 1637 0092 6C49     		ldr	r1, .L65+36
 1638 0094 0220     		movs	r0, #2
 1639 0096 FFF7FEFF 		bl	printNotif
 1640              	.L58:
 1641              	.LBE9:
 569:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 570:notoriOS.c    ****         }
 571:notoriOS.c    ****     }
 572:notoriOS.c    ****     
 573:notoriOS.c    ****     
 574:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 575:notoriOS.c    ****     voltage_t m_voltage;
 576:notoriOS.c    ****     
 577:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 578:notoriOS.c    ****     m_voltage = voltage_take_readings();
 1642              		.loc 1 578 0
 1643 009a 07F12C03 		add	r3, r7, #44
 1644 009e 1846     		mov	r0, r3
 1645 00a0 FFF7FEFF 		bl	voltage_take_readings
 579:notoriOS.c    ****     
 580:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 581:notoriOS.c    ****     if(m_voltage.valid){
 1646              		.loc 1 581 0
 1647 00a4 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 1648 00a8 002B     		cmp	r3, #0
 1649 00aa 00F0AF80 		beq	.L61
 582:notoriOS.c    ****         // battery voltage data
 583:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 1650              		.loc 1 583 0
 1651 00ae FB6A     		ldr	r3, [r7, #44]	@ float
 1652 00b0 1846     		mov	r0, r3
 1653 00b2 FFF7FEFF 		bl	__aeabi_f2d
 1654 00b6 0346     		mov	r3, r0
 1655 00b8 0C46     		mov	r4, r1
 1656 00ba 07F14000 		add	r0, r7, #64
 1657 00be CDE90034 		strd	r3, [sp]
 1658 00c2 614A     		ldr	r2, .L65+40
 1659 00c4 1421     		movs	r1, #20
 1660 00c6 FFF7FEFF 		bl	snprintf
 584:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 1661              		.loc 1 584 0
 1662 00ca 07F14003 		add	r3, r7, #64
 1663 00ce 1A46     		mov	r2, r3
 1664 00d0 5E49     		ldr	r1, .L65+44
 1665 00d2 0020     		movs	r0, #0
 1666 00d4 FFF7FEFF 		bl	printNotif
 585:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
 1667              		.loc 1 585 0
 1668 00d8 07F14003 		add	r3, r7, #64
 1669 00dc 7A6F     		ldr	r2, [r7, #116]
 1670 00de 1946     		mov	r1, r3
 1671 00e0 5B48     		ldr	r0, .L65+48
 1672 00e2 FFF7FEFF 		bl	pushData
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 43


 586:notoriOS.c    ****         
 587:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 588:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 1673              		.loc 1 588 0
 1674 00e6 564A     		ldr	r2, .L65+32
 1675 00e8 5249     		ldr	r1, .L65+20
 1676 00ea 5348     		ldr	r0, .L65+24
 1677 00ec FFF7FEFF 		bl	SD_write
 589:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 1678              		.loc 1 589 0
 1679 00f0 07F15403 		add	r3, r7, #84
 1680 00f4 1A46     		mov	r2, r3
 1681 00f6 4F49     		ldr	r1, .L65+20
 1682 00f8 4F48     		ldr	r0, .L65+24
 1683 00fa FFF7FEFF 		bl	SD_write
 590:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 1684              		.loc 1 590 0
 1685 00fe 554A     		ldr	r2, .L65+52
 1686 0100 4C49     		ldr	r1, .L65+20
 1687 0102 4D48     		ldr	r0, .L65+24
 1688 0104 FFF7FEFF 		bl	SD_write
 591:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1689              		.loc 1 591 0
 1690 0108 07F14003 		add	r3, r7, #64
 1691 010c 1A46     		mov	r2, r3
 1692 010e 4949     		ldr	r1, .L65+20
 1693 0110 4948     		ldr	r0, .L65+24
 1694 0112 FFF7FEFF 		bl	SD_write
 592:notoriOS.c    ****         
 593:notoriOS.c    ****         // If node type is green infrastructure node, take pressure transducer measurements
 594:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE){
 1695              		.loc 1 594 0
 1696 0116 434B     		ldr	r3, .L65+4
 1697 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1698 011a 012B     		cmp	r3, #1
 1699 011c 7AD1     		bne	.L63
 1700              	.LBB10:
 595:notoriOS.c    ****             
 596:notoriOS.c    ****             // pressure transducer voltage (V) data
 597:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 598:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 599:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 600:notoriOS.c    ****             
 601:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 602:notoriOS.c    ****             pressure_t m_pressure;
 603:notoriOS.c    ****             
 604:notoriOS.c    ****             // Make pressure transducer calculators for current and depth
 605:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 1701              		.loc 1 605 0
 1702 011e 3C46     		mov	r4, r7
 1703 0120 6A46     		mov	r2, sp
 1704 0122 07F13803 		add	r3, r7, #56
 1705 0126 93E80300 		ldmia	r3, {r0, r1}
 1706 012a 82E80300 		stmia	r2, {r0, r1}
 1707 012e 07F12C03 		add	r3, r7, #44
 1708 0132 0ECB     		ldmia	r3, {r1, r2, r3}
 1709 0134 2046     		mov	r0, r4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 44


 1710 0136 FFF7FEFF 		bl	pressure_calculations
 606:notoriOS.c    ****             
 607:notoriOS.c    ****             // pressure transducer current (mA) data
 608:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 1711              		.loc 1 608 0
 1712 013a BB68     		ldr	r3, [r7, #8]	@ float
 1713 013c 1846     		mov	r0, r3
 1714 013e FFF7FEFF 		bl	__aeabi_f2d
 1715 0142 0346     		mov	r3, r0
 1716 0144 0C46     		mov	r4, r1
 1717 0146 07F14000 		add	r0, r7, #64
 1718 014a CDE90034 		strd	r3, [sp]
 1719 014e 3E4A     		ldr	r2, .L65+40
 1720 0150 1421     		movs	r1, #20
 1721 0152 FFF7FEFF 		bl	snprintf
 609:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 1722              		.loc 1 609 0
 1723 0156 07F14003 		add	r3, r7, #64
 1724 015a 1A46     		mov	r2, r3
 1725 015c 3E49     		ldr	r1, .L65+56
 1726 015e 0020     		movs	r0, #0
 1727 0160 FFF7FEFF 		bl	printNotif
 610:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 1728              		.loc 1 610 0
 1729 0164 07F14003 		add	r3, r7, #64
 1730 0168 7A6F     		ldr	r2, [r7, #116]
 1731 016a 1946     		mov	r1, r3
 1732 016c 3B48     		ldr	r0, .L65+60
 1733 016e FFF7FEFF 		bl	pushData
 611:notoriOS.c    ****             
 612:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 613:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1734              		.loc 1 613 0
 1735 0172 334A     		ldr	r2, .L65+32
 1736 0174 2F49     		ldr	r1, .L65+20
 1737 0176 3048     		ldr	r0, .L65+24
 1738 0178 FFF7FEFF 		bl	SD_write
 614:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1739              		.loc 1 614 0
 1740 017c 07F15403 		add	r3, r7, #84
 1741 0180 1A46     		mov	r2, r3
 1742 0182 2C49     		ldr	r1, .L65+20
 1743 0184 2C48     		ldr	r0, .L65+24
 1744 0186 FFF7FEFF 		bl	SD_write
 615:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 1745              		.loc 1 615 0
 1746 018a 354A     		ldr	r2, .L65+64
 1747 018c 2949     		ldr	r1, .L65+20
 1748 018e 2A48     		ldr	r0, .L65+24
 1749 0190 FFF7FEFF 		bl	SD_write
 616:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1750              		.loc 1 616 0
 1751 0194 07F14003 		add	r3, r7, #64
 1752 0198 1A46     		mov	r2, r3
 1753 019a 2649     		ldr	r1, .L65+20
 1754 019c 2648     		ldr	r0, .L65+24
 1755 019e FFF7FEFF 		bl	SD_write
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 45


 617:notoriOS.c    ****             
 618:notoriOS.c    ****             // pressure transducer depth (ft) data
 619:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 1756              		.loc 1 619 0
 1757 01a2 FB68     		ldr	r3, [r7, #12]	@ float
 1758 01a4 1846     		mov	r0, r3
 1759 01a6 FFF7FEFF 		bl	__aeabi_f2d
 1760 01aa 0346     		mov	r3, r0
 1761 01ac 0C46     		mov	r4, r1
 1762 01ae 07F14000 		add	r0, r7, #64
 1763 01b2 CDE90034 		strd	r3, [sp]
 1764 01b6 244A     		ldr	r2, .L65+40
 1765 01b8 1421     		movs	r1, #20
 1766 01ba FFF7FEFF 		bl	snprintf
 620:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 1767              		.loc 1 620 0
 1768 01be 07F14003 		add	r3, r7, #64
 1769 01c2 1A46     		mov	r2, r3
 1770 01c4 2749     		ldr	r1, .L65+68
 1771 01c6 0020     		movs	r0, #0
 1772 01c8 FFF7FEFF 		bl	printNotif
 621:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 1773              		.loc 1 621 0
 1774 01cc 07F14003 		add	r3, r7, #64
 1775 01d0 7A6F     		ldr	r2, [r7, #116]
 1776 01d2 1946     		mov	r1, r3
 1777 01d4 2448     		ldr	r0, .L65+72
 1778 01d6 FFF7FEFF 		bl	pushData
 622:notoriOS.c    ****             
 623:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 624:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1779              		.loc 1 624 0
 1780 01da 194A     		ldr	r2, .L65+32
 1781 01dc 1549     		ldr	r1, .L65+20
 1782 01de 1648     		ldr	r0, .L65+24
 1783 01e0 FFF7FEFF 		bl	SD_write
 625:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1784              		.loc 1 625 0
 1785 01e4 07F15403 		add	r3, r7, #84
 1786 01e8 1A46     		mov	r2, r3
 1787 01ea 1249     		ldr	r1, .L65+20
 1788 01ec 1248     		ldr	r0, .L65+24
 1789 01ee FFF7FEFF 		bl	SD_write
 626:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
 1790              		.loc 1 626 0
 1791 01f2 1E4A     		ldr	r2, .L65+76
 1792 01f4 0F49     		ldr	r1, .L65+20
 1793 01f6 1048     		ldr	r0, .L65+24
 1794 01f8 FFF7FEFF 		bl	SD_write
 627:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1795              		.loc 1 627 0
 1796 01fc 07F14003 		add	r3, r7, #64
 1797 0200 1A46     		mov	r2, r3
 1798 0202 0C49     		ldr	r1, .L65+20
 1799 0204 0C48     		ldr	r0, .L65+24
 1800 0206 FFF7FEFF 		bl	SD_write
 1801 020a 03E0     		b	.L63
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 46


 1802              	.L61:
 1803              	.LBE10:
 628:notoriOS.c    ****         }    
 629:notoriOS.c    ****     }else{
 630:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 1804              		.loc 1 630 0
 1805 020c 1849     		ldr	r1, .L65+80
 1806 020e 0220     		movs	r0, #2
 1807 0210 FFF7FEFF 		bl	printNotif
 1808              	.L63:
 631:notoriOS.c    ****     }
 632:notoriOS.c    ****     
 633:notoriOS.c    ****     return 0u;
 1809              		.loc 1 633 0
 1810 0214 0023     		movs	r3, #0
 634:notoriOS.c    **** }
 1811              		.loc 1 634 0
 1812 0216 1846     		mov	r0, r3
 1813 0218 7C37     		adds	r7, r7, #124
 1814              		.cfi_def_cfa_offset 12
 1815 021a BD46     		mov	sp, r7
 1816              		.cfi_def_cfa_register 13
 1817              		@ sp needed
 1818 021c 90BD     		pop	{r4, r7, pc}
 1819              	.L66:
 1820 021e 00BF     		.align	2
 1821              	.L65:
 1822 0220 70020000 		.word	.LC35
 1823 0224 00000000 		.word	updatable_parameters
 1824 0228 C4000000 		.word	.LC6
 1825 022c 74020000 		.word	.LC36
 1826 0230 88020000 		.word	.LC37
 1827 0234 98020000 		.word	.LC38
 1828 0238 00000000 		.word	Data_fileName
 1829 023c 9C020000 		.word	.LC39
 1830 0240 B0020000 		.word	.LC40
 1831 0244 B4020000 		.word	.LC41
 1832 0248 E0020000 		.word	.LC42
 1833 024c E8020000 		.word	.LC43
 1834 0250 F4020000 		.word	.LC44
 1835 0254 FC020000 		.word	.LC45
 1836 0258 04030000 		.word	.LC46
 1837 025c 18030000 		.word	.LC47
 1838 0260 2C030000 		.word	.LC48
 1839 0264 40030000 		.word	.LC49
 1840 0268 54030000 		.word	.LC50
 1841 026c 64030000 		.word	.LC51
 1842 0270 78030000 		.word	.LC52
 1843              		.cfi_endproc
 1844              	.LFE76:
 1845              		.size	makeMeasurements, .-makeMeasurements
 1846              		.section	.rodata
 1847 039f 00       		.align	2
 1848              	.LC53:
 1849 03a0 4572726F 		.ascii	"Error setting system time.\000"
 1849      72207365 
 1849      7474696E 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 47


 1849      67207379 
 1849      7374656D 
 1850              		.section	.text.setTime,"ax",%progbits
 1851              		.align	2
 1852              		.global	setTime
 1853              		.thumb
 1854              		.thumb_func
 1855              		.type	setTime, %function
 1856              	setTime:
 1857              	.LFB77:
 635:notoriOS.c    **** 
 636:notoriOS.c    **** // ==============================================
 637:notoriOS.c    **** // Set the system time
 638:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 639:notoriOS.c    **** // ==============================================
 640:notoriOS.c    **** uint8 setTime(long timeStamp){
 1858              		.loc 1 640 0
 1859              		.cfi_startproc
 1860              		@ args = 0, pretend = 0, frame = 24
 1861              		@ frame_needed = 1, uses_anonymous_args = 0
 1862 0000 80B5     		push	{r7, lr}
 1863              		.cfi_def_cfa_offset 8
 1864              		.cfi_offset 7, -8
 1865              		.cfi_offset 14, -4
 1866 0002 86B0     		sub	sp, sp, #24
 1867              		.cfi_def_cfa_offset 32
 1868 0004 00AF     		add	r7, sp, #0
 1869              		.cfi_def_cfa_register 7
 1870 0006 7860     		str	r0, [r7, #4]
 641:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 642:notoriOS.c    ****     if(timeStamp <=0){
 1871              		.loc 1 642 0
 1872 0008 7B68     		ldr	r3, [r7, #4]
 1873 000a 002B     		cmp	r3, #0
 1874 000c 05DC     		bgt	.L68
 643:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 1875              		.loc 1 643 0
 1876 000e 1849     		ldr	r1, .L70
 1877 0010 0220     		movs	r0, #2
 1878 0012 FFF7FEFF 		bl	printNotif
 644:notoriOS.c    ****         return 0;  
 1879              		.loc 1 644 0
 1880 0016 0023     		movs	r3, #0
 1881 0018 25E0     		b	.L69
 1882              	.L68:
 645:notoriOS.c    ****     }
 646:notoriOS.c    ****     // Create a new pointer t of data structure tm
 647:notoriOS.c    ****     struct tm * t;
 648:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 649:notoriOS.c    ****     t = gmtime(&timeStamp);
 1883              		.loc 1 649 0
 1884 001a 3B1D     		adds	r3, r7, #4
 1885 001c 1846     		mov	r0, r3
 1886 001e FFF7FEFF 		bl	gmtime
 1887 0022 7861     		str	r0, [r7, #20]
 650:notoriOS.c    ****     
 651:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 48


 652:notoriOS.c    ****     RTC_TIME_DATE localTime;
 653:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 1888              		.loc 1 653 0
 1889 0024 7B69     		ldr	r3, [r7, #20]
 1890 0026 1B68     		ldr	r3, [r3]
 1891 0028 DBB2     		uxtb	r3, r3
 1892 002a 3B72     		strb	r3, [r7, #8]
 654:notoriOS.c    ****     localTime.Min = t->tm_min;
 1893              		.loc 1 654 0
 1894 002c 7B69     		ldr	r3, [r7, #20]
 1895 002e 5B68     		ldr	r3, [r3, #4]
 1896 0030 DBB2     		uxtb	r3, r3
 1897 0032 7B72     		strb	r3, [r7, #9]
 655:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 1898              		.loc 1 655 0
 1899 0034 7B69     		ldr	r3, [r7, #20]
 1900 0036 9B68     		ldr	r3, [r3, #8]
 1901 0038 DBB2     		uxtb	r3, r3
 1902 003a BB72     		strb	r3, [r7, #10]
 656:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 1903              		.loc 1 656 0
 1904 003c 7B69     		ldr	r3, [r7, #20]
 1905 003e 5B69     		ldr	r3, [r3, #20]
 1906 0040 9BB2     		uxth	r3, r3
 1907 0042 03F26C73 		addw	r3, r3, #1900
 1908 0046 9BB2     		uxth	r3, r3
 1909 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 657:notoriOS.c    ****     localTime.Month = t->tm_mon;
 1910              		.loc 1 657 0
 1911 004a 7B69     		ldr	r3, [r7, #20]
 1912 004c 1B69     		ldr	r3, [r3, #16]
 1913 004e DBB2     		uxtb	r3, r3
 1914 0050 3B74     		strb	r3, [r7, #16]
 658:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 1915              		.loc 1 658 0
 1916 0052 7B69     		ldr	r3, [r7, #20]
 1917 0054 DB68     		ldr	r3, [r3, #12]
 1918 0056 DBB2     		uxtb	r3, r3
 1919 0058 3B73     		strb	r3, [r7, #12]
 659:notoriOS.c    **** 
 660:notoriOS.c    ****     // Writes time and date values as current time and date.
 661:notoriOS.c    ****     RTC_WriteTime(&localTime);
 1920              		.loc 1 661 0
 1921 005a 07F10803 		add	r3, r7, #8
 1922 005e 1846     		mov	r0, r3
 1923 0060 FFF7FEFF 		bl	RTC_WriteTime
 662:notoriOS.c    ****     
 663:notoriOS.c    ****     // Return 1 when the system time was set properly.
 664:notoriOS.c    ****     return 1;
 1924              		.loc 1 664 0
 1925 0064 0123     		movs	r3, #1
 1926              	.L69:
 665:notoriOS.c    **** }
 1927              		.loc 1 665 0
 1928 0066 1846     		mov	r0, r3
 1929 0068 1837     		adds	r7, r7, #24
 1930              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 49


 1931 006a BD46     		mov	sp, r7
 1932              		.cfi_def_cfa_register 13
 1933              		@ sp needed
 1934 006c 80BD     		pop	{r7, pc}
 1935              	.L71:
 1936 006e 00BF     		.align	2
 1937              	.L70:
 1938 0070 A0030000 		.word	.LC53
 1939              		.cfi_endproc
 1940              	.LFE77:
 1941              		.size	setTime, .-setTime
 1942              		.section	.rodata
 1943 03bb 00       		.align	2
 1944              	.LC54:
 1945 03bc 75706772 		.ascii	"upgrade.hex\000"
 1945      6164652E 
 1945      68657800 
 1946              		.section	.text.upgraded,"ax",%progbits
 1947              		.align	2
 1948              		.global	upgraded
 1949              		.thumb
 1950              		.thumb_func
 1951              		.type	upgraded, %function
 1952              	upgraded:
 1953              	.LFB78:
 666:notoriOS.c    **** 
 667:notoriOS.c    **** //downloads and stores files on SD card
 668:notoriOS.c    **** 
 669:notoriOS.c    **** 
 670:notoriOS.c    **** 
 671:notoriOS.c    **** // ==============================================
 672:notoriOS.c    **** // Will they love it, will they hate it
 673:notoriOS.c    **** // Never fade it, I evade it
 674:notoriOS.c    **** // Cause I never really want to complicate it
 675:notoriOS.c    **** //      - Logic, Upgraded (2015)
 676:notoriOS.c    **** //
 677:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 678:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 679:notoriOS.c    **** // ==============================================
 680:notoriOS.c    **** 
 681:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 1954              		.loc 1 681 0
 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 232
 1957              		@ frame_needed = 1, uses_anonymous_args = 0
 1958 0000 80B5     		push	{r7, lr}
 1959              		.cfi_def_cfa_offset 8
 1960              		.cfi_offset 7, -8
 1961              		.cfi_offset 14, -4
 1962 0002 C0B0     		sub	sp, sp, #256
 1963              		.cfi_def_cfa_offset 264
 1964 0004 06AF     		add	r7, sp, #24
 1965              		.cfi_def_cfa 7, 240
 1966 0006 F860     		str	r0, [r7, #12]
 1967 0008 B960     		str	r1, [r7, #8]
 1968 000a 7A60     		str	r2, [r7, #4]
 682:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 50


 683:notoriOS.c    ****     uint8 upgrade_status = 0;
 1969              		.loc 1 683 0
 1970 000c 0023     		movs	r3, #0
 1971 000e 87F8E730 		strb	r3, [r7, #231]
 684:notoriOS.c    ****     
 685:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 686:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 1972              		.loc 1 686 0
 1973 0012 384B     		ldr	r3, .L76
 1974 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1975 0016 042B     		cmp	r3, #4
 1976 0018 02D0     		beq	.L73
 687:notoriOS.c    ****         return upgrade_status;//where valid = 0
 1977              		.loc 1 687 0
 1978 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 1979 001e 65E0     		b	.L75
 1980              	.L73:
 688:notoriOS.c    ****     }
 689:notoriOS.c    ****     
 690:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 1981              		.loc 1 690 0
 1982 0020 354A     		ldr	r2, .L76+4
 1983 0022 07F1D803 		add	r3, r7, #216
 1984 0026 07CA     		ldmia	r2, {r0, r1, r2}
 1985 0028 83E80700 		stmia	r3, {r0, r1, r2}
 691:notoriOS.c    ****     //delete file, if one exisits already
 692:notoriOS.c    ****     SD_rmfile(fileName);
 1986              		.loc 1 692 0
 1987 002c 07F1D803 		add	r3, r7, #216
 1988 0030 1846     		mov	r0, r3
 1989 0032 FFF7FEFF 		bl	SD_rmfile
 693:notoriOS.c    ****     
 694:notoriOS.c    ****     // Create http request
 695:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 1990              		.loc 1 695 0
 1991 0036 314B     		ldr	r3, .L76+8
 1992 0038 0593     		str	r3, [sp, #20]
 1993 003a 0023     		movs	r3, #0
 1994 003c 0493     		str	r3, [sp, #16]
 1995 003e 304B     		ldr	r3, .L76+12
 1996 0040 0393     		str	r3, [sp, #12]
 1997 0042 304B     		ldr	r3, .L76+16
 1998 0044 0293     		str	r3, [sp, #8]
 1999 0046 304B     		ldr	r3, .L76+20
 2000 0048 0193     		str	r3, [sp, #4]
 2001 004a BB68     		ldr	r3, [r7, #8]
 2002 004c 0093     		str	r3, [sp]
 2003 004e 7B68     		ldr	r3, [r7, #4]
 2004 0050 FA68     		ldr	r2, [r7, #12]
 2005 0052 2E49     		ldr	r1, .L76+24
 2006 0054 2E48     		ldr	r0, .L76+28
 2007 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 696:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 2008              		.loc 1 696 0
 2009 005a 2D4A     		ldr	r2, .L76+28
 2010 005c 2D49     		ldr	r1, .L76+32
 2011 005e 0020     		movs	r0, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 51


 2012 0060 FFF7FEFF 		bl	printNotif
 697:notoriOS.c    ****     // Create array portConfig of size 200 characters
 698:notoriOS.c    ****     char portConfig[200];
 699:notoriOS.c    ****     // Print port configurations
 700:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 2013              		.loc 1 700 0
 2014 0064 07F11000 		add	r0, r7, #16
 2015 0068 FB68     		ldr	r3, [r7, #12]
 2016 006a 0093     		str	r3, [sp]
 2017 006c BB68     		ldr	r3, [r7, #8]
 2018 006e 2A4A     		ldr	r2, .L76+36
 2019 0070 C821     		movs	r1, #200
 2020 0072 FFF7FEFF 		bl	snprintf
 701:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 2021              		.loc 1 701 0
 2022 0076 07F11003 		add	r3, r7, #16
 2023 007a 1A46     		mov	r2, r3
 2024 007c 2749     		ldr	r1, .L76+40
 2025 007e 0020     		movs	r0, #0
 2026 0080 FFF7FEFF 		bl	printNotif
 702:notoriOS.c    ****     // AT command to configure the port
 703:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 2027              		.loc 1 703 0
 2028 0084 07F11003 		add	r3, r7, #16
 2029 0088 42F21072 		movw	r2, #10000
 2030 008c 2449     		ldr	r1, .L76+44
 2031 008e 1846     		mov	r0, r3
 2032 0090 FFF7FEFF 		bl	at_write_command
 2033 0094 0346     		mov	r3, r0
 2034 0096 87F8E730 		strb	r3, [r7, #231]
 704:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 705:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 706:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 2035              		.loc 1 706 0
 2036 009a 4FF47A72 		mov	r2, #1000
 2037 009e 2149     		ldr	r1, .L76+48
 2038 00a0 2148     		ldr	r0, .L76+52
 2039 00a2 FFF7FEFF 		bl	at_write_command
 2040 00a6 0346     		mov	r3, r0
 2041 00a8 87F8E730 		strb	r3, [r7, #231]
 707:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 708:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 2042              		.loc 1 708 0
 2043 00ac 1848     		ldr	r0, .L76+28
 2044 00ae FFF7FEFF 		bl	strlen
 2045 00b2 0346     		mov	r3, r0
 2046 00b4 1A46     		mov	r2, r3
 2047 00b6 164B     		ldr	r3, .L76+28
 2048 00b8 1344     		add	r3, r3, r2
 2049 00ba 1C49     		ldr	r1, .L76+56
 2050 00bc 1A46     		mov	r2, r3
 2051 00be 0B46     		mov	r3, r1
 2052 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 2053 00c2 1380     		strh	r3, [r2]	@ unaligned
 709:notoriOS.c    ****     // AT command to send http request
 710:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
 2054              		.loc 1 710 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 52


 2055 00c4 41F28832 		movw	r2, #5000
 2056 00c8 1549     		ldr	r1, .L76+44
 2057 00ca 1148     		ldr	r0, .L76+28
 2058 00cc FFF7FEFF 		bl	at_write_command
 2059 00d0 0346     		mov	r3, r0
 2060 00d2 87F8E730 		strb	r3, [r7, #231]
 711:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 712:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 713:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 2061              		.loc 1 713 0
 2062 00d6 41F28832 		movw	r2, #5000
 2063 00da 1549     		ldr	r1, .L76+60
 2064 00dc 1548     		ldr	r0, .L76+64
 2065 00de FFF7FEFF 		bl	at_write_command
 2066 00e2 0346     		mov	r3, r0
 2067 00e4 87F8E730 		strb	r3, [r7, #231]
 714:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 715:notoriOS.c    ****     
 716:notoriOS.c    ****     
 717:notoriOS.c    ****     return upgrade_status;
 2068              		.loc 1 717 0
 2069 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2070              	.L75:
 718:notoriOS.c    ****     
 719:notoriOS.c    **** }
 2071              		.loc 1 719 0 discriminator 1
 2072 00ec 1846     		mov	r0, r3
 2073 00ee E837     		adds	r7, r7, #232
 2074              		.cfi_def_cfa_offset 8
 2075 00f0 BD46     		mov	sp, r7
 2076              		.cfi_def_cfa_register 13
 2077              		@ sp needed
 2078 00f2 80BD     		pop	{r7, pc}
 2079              	.L77:
 2080              		.align	2
 2081              	.L76:
 2082 00f4 00000000 		.word	modem_state
 2083 00f8 BC030000 		.word	.LC54
 2084 00fc 68010000 		.word	.LC16
 2085 0100 6C010000 		.word	.LC17
 2086 0104 70010000 		.word	.LC18
 2087 0108 78010000 		.word	.LC19
 2088 010c 00000000 		.word	http_body
 2089 0110 00000000 		.word	http_request
 2090 0114 80010000 		.word	.LC20
 2091 0118 98010000 		.word	.LC21
 2092 011c B4010000 		.word	.LC22
 2093 0120 B8010000 		.word	.LC23
 2094 0124 E8010000 		.word	.LC26
 2095 0128 EC010000 		.word	.LC27
 2096 012c FC010000 		.word	.LC28
 2097 0130 18020000 		.word	.LC31
 2098 0134 20020000 		.word	.LC32
 2099              		.cfi_endproc
 2100              	.LFE78:
 2101              		.size	upgraded, .-upgraded
 2102              		.text
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 53


 2103              	.Letext0:
 2104              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2105              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2106              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2107              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 2108              		.file 6 "testing.h"
 2109              		.file 7 "level_sensor.h"
 2110              		.file 8 "voltages.h"
 2111              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2112              		.file 10 "data.h"
 2113              		.file 11 "modem.h"
 2114              		.file 12 "notoriOS.h"
 2115              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 2116              		.file 14 "App_LED.h"
 2117              		.section	.debug_info,"",%progbits
 2118              	.Ldebug_info0:
 2119 0000 420C0000 		.4byte	0xc42
 2120 0004 0400     		.2byte	0x4
 2121 0006 00000000 		.4byte	.Ldebug_abbrev0
 2122 000a 04       		.byte	0x4
 2123 000b 01       		.uleb128 0x1
 2124 000c 74000000 		.4byte	.LASF163
 2125 0010 0C       		.byte	0xc
 2126 0011 C9070000 		.4byte	.LASF164
 2127 0015 E4020000 		.4byte	.LASF165
 2128 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2129 001d 00000000 		.4byte	0
 2130 0021 00000000 		.4byte	.Ldebug_line0
 2131 0025 02       		.uleb128 0x2
 2132 0026 01       		.byte	0x1
 2133 0027 06       		.byte	0x6
 2134 0028 45000000 		.4byte	.LASF0
 2135 002c 02       		.uleb128 0x2
 2136 002d 01       		.byte	0x1
 2137 002e 08       		.byte	0x8
 2138 002f E6050000 		.4byte	.LASF1
 2139 0033 02       		.uleb128 0x2
 2140 0034 02       		.byte	0x2
 2141 0035 05       		.byte	0x5
 2142 0036 47040000 		.4byte	.LASF2
 2143 003a 02       		.uleb128 0x2
 2144 003b 02       		.byte	0x2
 2145 003c 07       		.byte	0x7
 2146 003d 61070000 		.4byte	.LASF3
 2147 0041 03       		.uleb128 0x3
 2148 0042 29070000 		.4byte	.LASF9
 2149 0046 02       		.byte	0x2
 2150 0047 3F       		.byte	0x3f
 2151 0048 4C000000 		.4byte	0x4c
 2152 004c 02       		.uleb128 0x2
 2153 004d 04       		.byte	0x4
 2154 004e 05       		.byte	0x5
 2155 004f 09020000 		.4byte	.LASF4
 2156 0053 02       		.uleb128 0x2
 2157 0054 04       		.byte	0x4
 2158 0055 07       		.byte	0x7
 2159 0056 84030000 		.4byte	.LASF5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 54


 2160 005a 02       		.uleb128 0x2
 2161 005b 08       		.byte	0x8
 2162 005c 05       		.byte	0x5
 2163 005d 64010000 		.4byte	.LASF6
 2164 0061 02       		.uleb128 0x2
 2165 0062 08       		.byte	0x8
 2166 0063 07       		.byte	0x7
 2167 0064 13010000 		.4byte	.LASF7
 2168 0068 04       		.uleb128 0x4
 2169 0069 04       		.byte	0x4
 2170 006a 05       		.byte	0x5
 2171 006b 696E7400 		.ascii	"int\000"
 2172 006f 02       		.uleb128 0x2
 2173 0070 04       		.byte	0x4
 2174 0071 07       		.byte	0x7
 2175 0072 30030000 		.4byte	.LASF8
 2176 0076 03       		.uleb128 0x3
 2177 0077 DE050000 		.4byte	.LASF10
 2178 007b 03       		.byte	0x3
 2179 007c 2C       		.byte	0x2c
 2180 007d 41000000 		.4byte	0x41
 2181 0081 05       		.uleb128 0x5
 2182 0082 40020000 		.4byte	.LASF11
 2183 0086 04       		.byte	0x4
 2184 0087 9201     		.2byte	0x192
 2185 0089 2C000000 		.4byte	0x2c
 2186 008d 05       		.uleb128 0x5
 2187 008e 08000000 		.4byte	.LASF12
 2188 0092 04       		.byte	0x4
 2189 0093 9301     		.2byte	0x193
 2190 0095 3A000000 		.4byte	0x3a
 2191 0099 05       		.uleb128 0x5
 2192 009a 91020000 		.4byte	.LASF13
 2193 009e 04       		.byte	0x4
 2194 009f 9401     		.2byte	0x194
 2195 00a1 53000000 		.4byte	0x53
 2196 00a5 05       		.uleb128 0x5
 2197 00a6 0A040000 		.4byte	.LASF14
 2198 00aa 04       		.byte	0x4
 2199 00ab 9501     		.2byte	0x195
 2200 00ad 25000000 		.4byte	0x25
 2201 00b1 05       		.uleb128 0x5
 2202 00b2 DE070000 		.4byte	.LASF15
 2203 00b6 04       		.byte	0x4
 2204 00b7 9601     		.2byte	0x196
 2205 00b9 33000000 		.4byte	0x33
 2206 00bd 05       		.uleb128 0x5
 2207 00be 6B020000 		.4byte	.LASF16
 2208 00c2 04       		.byte	0x4
 2209 00c3 9701     		.2byte	0x197
 2210 00c5 4C000000 		.4byte	0x4c
 2211 00c9 02       		.uleb128 0x2
 2212 00ca 04       		.byte	0x4
 2213 00cb 04       		.byte	0x4
 2214 00cc 7C050000 		.4byte	.LASF17
 2215 00d0 02       		.uleb128 0x2
 2216 00d1 08       		.byte	0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 55


 2217 00d2 04       		.byte	0x4
 2218 00d3 5C080000 		.4byte	.LASF18
 2219 00d7 02       		.uleb128 0x2
 2220 00d8 01       		.byte	0x1
 2221 00d9 08       		.byte	0x8
 2222 00da 02070000 		.4byte	.LASF19
 2223 00de 02       		.uleb128 0x2
 2224 00df 08       		.byte	0x8
 2225 00e0 04       		.byte	0x4
 2226 00e1 E4060000 		.4byte	.LASF20
 2227 00e5 02       		.uleb128 0x2
 2228 00e6 04       		.byte	0x4
 2229 00e7 07       		.byte	0x7
 2230 00e8 D6040000 		.4byte	.LASF21
 2231 00ec 06       		.uleb128 0x6
 2232 00ed 04       		.byte	0x4
 2233 00ee D7000000 		.4byte	0xd7
 2234 00f2 07       		.uleb128 0x7
 2235 00f3 D7000000 		.4byte	0xd7
 2236 00f7 02010000 		.4byte	0x102
 2237 00fb 08       		.uleb128 0x8
 2238 00fc E5000000 		.4byte	0xe5
 2239 0100 17       		.byte	0x17
 2240 0101 00       		.byte	0
 2241 0102 09       		.uleb128 0x9
 2242 0103 0C       		.byte	0xc
 2243 0104 05       		.byte	0x5
 2244 0105 30       		.byte	0x30
 2245 0106 6B010000 		.4byte	0x16b
 2246 010a 0A       		.uleb128 0xa
 2247 010b 53656300 		.ascii	"Sec\000"
 2248 010f 05       		.byte	0x5
 2249 0110 32       		.byte	0x32
 2250 0111 81000000 		.4byte	0x81
 2251 0115 00       		.byte	0
 2252 0116 0A       		.uleb128 0xa
 2253 0117 4D696E00 		.ascii	"Min\000"
 2254 011b 05       		.byte	0x5
 2255 011c 33       		.byte	0x33
 2256 011d 81000000 		.4byte	0x81
 2257 0121 01       		.byte	0x1
 2258 0122 0B       		.uleb128 0xb
 2259 0123 2A010000 		.4byte	.LASF22
 2260 0127 05       		.byte	0x5
 2261 0128 34       		.byte	0x34
 2262 0129 81000000 		.4byte	0x81
 2263 012d 02       		.byte	0x2
 2264 012e 0B       		.uleb128 0xb
 2265 012f 43060000 		.4byte	.LASF23
 2266 0133 05       		.byte	0x5
 2267 0134 35       		.byte	0x35
 2268 0135 81000000 		.4byte	0x81
 2269 0139 03       		.byte	0x3
 2270 013a 0B       		.uleb128 0xb
 2271 013b C5030000 		.4byte	.LASF24
 2272 013f 05       		.byte	0x5
 2273 0140 36       		.byte	0x36
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 56


 2274 0141 81000000 		.4byte	0x81
 2275 0145 04       		.byte	0x4
 2276 0146 0B       		.uleb128 0xb
 2277 0147 11080000 		.4byte	.LASF25
 2278 014b 05       		.byte	0x5
 2279 014c 37       		.byte	0x37
 2280 014d 8D000000 		.4byte	0x8d
 2281 0151 06       		.byte	0x6
 2282 0152 0B       		.uleb128 0xb
 2283 0153 0D010000 		.4byte	.LASF26
 2284 0157 05       		.byte	0x5
 2285 0158 38       		.byte	0x38
 2286 0159 81000000 		.4byte	0x81
 2287 015d 08       		.byte	0x8
 2288 015e 0B       		.uleb128 0xb
 2289 015f D3050000 		.4byte	.LASF27
 2290 0163 05       		.byte	0x5
 2291 0164 39       		.byte	0x39
 2292 0165 8D000000 		.4byte	0x8d
 2293 0169 0A       		.byte	0xa
 2294 016a 00       		.byte	0
 2295 016b 03       		.uleb128 0x3
 2296 016c 21050000 		.4byte	.LASF28
 2297 0170 05       		.byte	0x5
 2298 0171 3A       		.byte	0x3a
 2299 0172 76010000 		.4byte	0x176
 2300 0176 0C       		.uleb128 0xc
 2301 0177 02010000 		.4byte	0x102
 2302 017b 0D       		.uleb128 0xd
 2303 017c 8101     		.2byte	0x181
 2304 017e 06       		.byte	0x6
 2305 017f 0A       		.byte	0xa
 2306 0180 A9010000 		.4byte	0x1a9
 2307 0184 0B       		.uleb128 0xb
 2308 0185 C9050000 		.4byte	.LASF29
 2309 0189 06       		.byte	0x6
 2310 018a 0C       		.byte	0xc
 2311 018b A9010000 		.4byte	0x1a9
 2312 018f 00       		.byte	0
 2313 0190 0B       		.uleb128 0xb
 2314 0191 9E070000 		.4byte	.LASF30
 2315 0195 06       		.byte	0x6
 2316 0196 0D       		.byte	0xd
 2317 0197 81000000 		.4byte	0x81
 2318 019b 80       		.byte	0x80
 2319 019c 0B       		.uleb128 0xb
 2320 019d 65060000 		.4byte	.LASF31
 2321 01a1 06       		.byte	0x6
 2322 01a2 0F       		.byte	0xf
 2323 01a3 B9010000 		.4byte	0x1b9
 2324 01a7 81       		.byte	0x81
 2325 01a8 00       		.byte	0
 2326 01a9 07       		.uleb128 0x7
 2327 01aa D7000000 		.4byte	0xd7
 2328 01ae B9010000 		.4byte	0x1b9
 2329 01b2 08       		.uleb128 0x8
 2330 01b3 E5000000 		.4byte	0xe5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 57


 2331 01b7 7F       		.byte	0x7f
 2332 01b8 00       		.byte	0
 2333 01b9 07       		.uleb128 0x7
 2334 01ba D7000000 		.4byte	0xd7
 2335 01be C9010000 		.4byte	0x1c9
 2336 01c2 08       		.uleb128 0x8
 2337 01c3 E5000000 		.4byte	0xe5
 2338 01c7 FF       		.byte	0xff
 2339 01c8 00       		.byte	0
 2340 01c9 03       		.uleb128 0x3
 2341 01ca 4D060000 		.4byte	.LASF32
 2342 01ce 06       		.byte	0x6
 2343 01cf 10       		.byte	0x10
 2344 01d0 7B010000 		.4byte	0x17b
 2345 01d4 09       		.uleb128 0x9
 2346 01d5 1A       		.byte	0x1a
 2347 01d6 07       		.byte	0x7
 2348 01d7 10       		.byte	0x10
 2349 01d8 0D020000 		.4byte	0x20d
 2350 01dc 0B       		.uleb128 0xb
 2351 01dd A1020000 		.4byte	.LASF33
 2352 01e1 07       		.byte	0x7
 2353 01e2 11       		.byte	0x11
 2354 01e3 0D020000 		.4byte	0x20d
 2355 01e7 00       		.byte	0
 2356 01e8 0B       		.uleb128 0xb
 2357 01e9 4B070000 		.4byte	.LASF34
 2358 01ed 07       		.byte	0x7
 2359 01ee 12       		.byte	0x12
 2360 01ef B1000000 		.4byte	0xb1
 2361 01f3 16       		.byte	0x16
 2362 01f4 0B       		.uleb128 0xb
 2363 01f5 5C030000 		.4byte	.LASF35
 2364 01f9 07       		.byte	0x7
 2365 01fa 13       		.byte	0x13
 2366 01fb 81000000 		.4byte	0x81
 2367 01ff 18       		.byte	0x18
 2368 0200 0B       		.uleb128 0xb
 2369 0201 17000000 		.4byte	.LASF36
 2370 0205 07       		.byte	0x7
 2371 0206 14       		.byte	0x14
 2372 0207 81000000 		.4byte	0x81
 2373 020b 19       		.byte	0x19
 2374 020c 00       		.byte	0
 2375 020d 07       		.uleb128 0x7
 2376 020e B1000000 		.4byte	0xb1
 2377 0212 1D020000 		.4byte	0x21d
 2378 0216 08       		.uleb128 0x8
 2379 0217 E5000000 		.4byte	0xe5
 2380 021b 0A       		.byte	0xa
 2381 021c 00       		.byte	0
 2382 021d 03       		.uleb128 0x3
 2383 021e 82050000 		.4byte	.LASF37
 2384 0222 07       		.byte	0x7
 2385 0223 15       		.byte	0x15
 2386 0224 D4010000 		.4byte	0x1d4
 2387 0228 09       		.uleb128 0x9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 58


 2388 0229 14       		.byte	0x14
 2389 022a 08       		.byte	0x8
 2390 022b 11       		.byte	0x11
 2391 022c 6D020000 		.4byte	0x26d
 2392 0230 0B       		.uleb128 0xb
 2393 0231 B5030000 		.4byte	.LASF38
 2394 0235 08       		.byte	0x8
 2395 0236 12       		.byte	0x12
 2396 0237 C9000000 		.4byte	0xc9
 2397 023b 00       		.byte	0
 2398 023c 0B       		.uleb128 0xb
 2399 023d B0010000 		.4byte	.LASF39
 2400 0241 08       		.byte	0x8
 2401 0242 13       		.byte	0x13
 2402 0243 C9000000 		.4byte	0xc9
 2403 0247 04       		.byte	0x4
 2404 0248 0B       		.uleb128 0xb
 2405 0249 BE010000 		.4byte	.LASF40
 2406 024d 08       		.byte	0x8
 2407 024e 14       		.byte	0x14
 2408 024f C9000000 		.4byte	0xc9
 2409 0253 08       		.byte	0x8
 2410 0254 0B       		.uleb128 0xb
 2411 0255 5E050000 		.4byte	.LASF41
 2412 0259 08       		.byte	0x8
 2413 025a 15       		.byte	0x15
 2414 025b C9000000 		.4byte	0xc9
 2415 025f 0C       		.byte	0xc
 2416 0260 0B       		.uleb128 0xb
 2417 0261 D6060000 		.4byte	.LASF42
 2418 0265 08       		.byte	0x8
 2419 0266 16       		.byte	0x16
 2420 0267 81000000 		.4byte	0x81
 2421 026b 10       		.byte	0x10
 2422 026c 00       		.byte	0
 2423 026d 03       		.uleb128 0x3
 2424 026e 63080000 		.4byte	.LASF43
 2425 0272 08       		.byte	0x8
 2426 0273 17       		.byte	0x17
 2427 0274 28020000 		.4byte	0x228
 2428 0278 09       		.uleb128 0x9
 2429 0279 10       		.byte	0x10
 2430 027a 08       		.byte	0x8
 2431 027b 19       		.byte	0x19
 2432 027c B1020000 		.4byte	0x2b1
 2433 0280 0B       		.uleb128 0xb
 2434 0281 1C030000 		.4byte	.LASF44
 2435 0285 08       		.byte	0x8
 2436 0286 1A       		.byte	0x1a
 2437 0287 C9000000 		.4byte	0xc9
 2438 028b 00       		.byte	0
 2439 028c 0B       		.uleb128 0xb
 2440 028d 2B020000 		.4byte	.LASF45
 2441 0291 08       		.byte	0x8
 2442 0292 1B       		.byte	0x1b
 2443 0293 C9000000 		.4byte	0xc9
 2444 0297 04       		.byte	0x4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 59


 2445 0298 0B       		.uleb128 0xb
 2446 0299 C5060000 		.4byte	.LASF46
 2447 029d 08       		.byte	0x8
 2448 029e 1C       		.byte	0x1c
 2449 029f C9000000 		.4byte	0xc9
 2450 02a3 08       		.byte	0x8
 2451 02a4 0B       		.uleb128 0xb
 2452 02a5 2F060000 		.4byte	.LASF47
 2453 02a9 08       		.byte	0x8
 2454 02aa 1D       		.byte	0x1d
 2455 02ab C9000000 		.4byte	0xc9
 2456 02af 0C       		.byte	0xc
 2457 02b0 00       		.byte	0
 2458 02b1 03       		.uleb128 0x3
 2459 02b2 1B080000 		.4byte	.LASF48
 2460 02b6 08       		.byte	0x8
 2461 02b7 1E       		.byte	0x1e
 2462 02b8 78020000 		.4byte	0x278
 2463 02bc 0E       		.uleb128 0xe
 2464 02bd 746D00   		.ascii	"tm\000"
 2465 02c0 24       		.byte	0x24
 2466 02c1 09       		.byte	0x9
 2467 02c2 21       		.byte	0x21
 2468 02c3 34030000 		.4byte	0x334
 2469 02c7 0B       		.uleb128 0xb
 2470 02c8 8C070000 		.4byte	.LASF49
 2471 02cc 09       		.byte	0x9
 2472 02cd 23       		.byte	0x23
 2473 02ce 68000000 		.4byte	0x68
 2474 02d2 00       		.byte	0
 2475 02d3 0B       		.uleb128 0xb
 2476 02d4 B8040000 		.4byte	.LASF50
 2477 02d8 09       		.byte	0x9
 2478 02d9 24       		.byte	0x24
 2479 02da 68000000 		.4byte	0x68
 2480 02de 04       		.byte	0x4
 2481 02df 0B       		.uleb128 0xb
 2482 02e0 0F000000 		.4byte	.LASF51
 2483 02e4 09       		.byte	0x9
 2484 02e5 25       		.byte	0x25
 2485 02e6 68000000 		.4byte	0x68
 2486 02ea 08       		.byte	0x8
 2487 02eb 0B       		.uleb128 0xb
 2488 02ec 7B070000 		.4byte	.LASF52
 2489 02f0 09       		.byte	0x9
 2490 02f1 26       		.byte	0x26
 2491 02f2 68000000 		.4byte	0x68
 2492 02f6 0C       		.byte	0xc
 2493 02f7 0B       		.uleb128 0xb
 2494 02f8 CC020000 		.4byte	.LASF53
 2495 02fc 09       		.byte	0x9
 2496 02fd 27       		.byte	0x27
 2497 02fe 68000000 		.4byte	0x68
 2498 0302 10       		.byte	0x10
 2499 0303 0B       		.uleb128 0xb
 2500 0304 0A030000 		.4byte	.LASF54
 2501 0308 09       		.byte	0x9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 60


 2502 0309 28       		.byte	0x28
 2503 030a 68000000 		.4byte	0x68
 2504 030e 14       		.byte	0x14
 2505 030f 0B       		.uleb128 0xb
 2506 0310 DC060000 		.4byte	.LASF55
 2507 0314 09       		.byte	0x9
 2508 0315 29       		.byte	0x29
 2509 0316 68000000 		.4byte	0x68
 2510 031a 18       		.byte	0x18
 2511 031b 0B       		.uleb128 0xb
 2512 031c DF040000 		.4byte	.LASF56
 2513 0320 09       		.byte	0x9
 2514 0321 2A       		.byte	0x2a
 2515 0322 68000000 		.4byte	0x68
 2516 0326 1C       		.byte	0x1c
 2517 0327 0B       		.uleb128 0xb
 2518 0328 EE030000 		.4byte	.LASF57
 2519 032c 09       		.byte	0x9
 2520 032d 2B       		.byte	0x2b
 2521 032e 68000000 		.4byte	0x68
 2522 0332 20       		.byte	0x20
 2523 0333 00       		.byte	0
 2524 0334 09       		.uleb128 0x9
 2525 0335 2C       		.byte	0x2c
 2526 0336 0A       		.byte	0xa
 2527 0337 14       		.byte	0x14
 2528 0338 61030000 		.4byte	0x361
 2529 033c 0A       		.uleb128 0xa
 2530 033d 6B657900 		.ascii	"key\000"
 2531 0341 0A       		.byte	0xa
 2532 0342 15       		.byte	0x15
 2533 0343 61030000 		.4byte	0x361
 2534 0347 00       		.byte	0
 2535 0348 0B       		.uleb128 0xb
 2536 0349 FF020000 		.4byte	.LASF58
 2537 034d 0A       		.byte	0xa
 2538 034e 16       		.byte	0x16
 2539 034f 61030000 		.4byte	0x361
 2540 0353 14       		.byte	0x14
 2541 0354 0B       		.uleb128 0xb
 2542 0355 17050000 		.4byte	.LASF59
 2543 0359 0A       		.byte	0xa
 2544 035a 17       		.byte	0x17
 2545 035b BD000000 		.4byte	0xbd
 2546 035f 28       		.byte	0x28
 2547 0360 00       		.byte	0
 2548 0361 07       		.uleb128 0x7
 2549 0362 D7000000 		.4byte	0xd7
 2550 0366 71030000 		.4byte	0x371
 2551 036a 08       		.uleb128 0x8
 2552 036b E5000000 		.4byte	0xe5
 2553 036f 13       		.byte	0x13
 2554 0370 00       		.byte	0
 2555 0371 03       		.uleb128 0x3
 2556 0372 45030000 		.4byte	.LASF60
 2557 0376 0A       		.byte	0xa
 2558 0377 19       		.byte	0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 61


 2559 0378 34030000 		.4byte	0x334
 2560 037c 09       		.uleb128 0x9
 2561 037d 3C       		.byte	0x3c
 2562 037e 0B       		.byte	0xb
 2563 037f 35       		.byte	0x35
 2564 0380 A9030000 		.4byte	0x3a9
 2565 0384 0B       		.uleb128 0xb
 2566 0385 74070000 		.4byte	.LASF61
 2567 0389 0B       		.byte	0xb
 2568 038a 36       		.byte	0x36
 2569 038b 61030000 		.4byte	0x361
 2570 038f 00       		.byte	0
 2571 0390 0B       		.uleb128 0xb
 2572 0391 98020000 		.4byte	.LASF62
 2573 0395 0B       		.byte	0xb
 2574 0396 37       		.byte	0x37
 2575 0397 61030000 		.4byte	0x361
 2576 039b 14       		.byte	0x14
 2577 039c 0B       		.uleb128 0xb
 2578 039d 60060000 		.4byte	.LASF63
 2579 03a1 0B       		.byte	0xb
 2580 03a2 38       		.byte	0x38
 2581 03a3 61030000 		.4byte	0x361
 2582 03a7 28       		.byte	0x28
 2583 03a8 00       		.byte	0
 2584 03a9 03       		.uleb128 0x3
 2585 03aa F6010000 		.4byte	.LASF64
 2586 03ae 0B       		.byte	0xb
 2587 03af 3A       		.byte	0x3a
 2588 03b0 7C030000 		.4byte	0x37c
 2589 03b4 09       		.uleb128 0x9
 2590 03b5 20       		.byte	0x20
 2591 03b6 0B       		.byte	0xb
 2592 03b7 3C       		.byte	0x3c
 2593 03b8 1D040000 		.4byte	0x41d
 2594 03bc 0B       		.uleb128 0xb
 2595 03bd 03020000 		.4byte	.LASF65
 2596 03c1 0B       		.byte	0xb
 2597 03c2 3D       		.byte	0x3d
 2598 03c3 68000000 		.4byte	0x68
 2599 03c7 00       		.byte	0
 2600 03c8 0A       		.uleb128 0xa
 2601 03c9 62657200 		.ascii	"ber\000"
 2602 03cd 0B       		.byte	0xb
 2603 03ce 3E       		.byte	0x3e
 2604 03cf 68000000 		.4byte	0x68
 2605 03d3 04       		.byte	0x4
 2606 03d4 0B       		.uleb128 0xb
 2607 03d5 3E060000 		.4byte	.LASF66
 2608 03d9 0B       		.byte	0xb
 2609 03da 3F       		.byte	0x3f
 2610 03db 68000000 		.4byte	0x68
 2611 03df 08       		.byte	0x8
 2612 03e0 0B       		.uleb128 0xb
 2613 03e1 7A010000 		.4byte	.LASF67
 2614 03e5 0B       		.byte	0xb
 2615 03e6 40       		.byte	0x40
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 62


 2616 03e7 68000000 		.4byte	0x68
 2617 03eb 0C       		.byte	0xc
 2618 03ec 0B       		.uleb128 0xb
 2619 03ed 09060000 		.4byte	.LASF68
 2620 03f1 0B       		.byte	0xb
 2621 03f2 41       		.byte	0x41
 2622 03f3 68000000 		.4byte	0x68
 2623 03f7 10       		.byte	0x10
 2624 03f8 0B       		.uleb128 0xb
 2625 03f9 04060000 		.4byte	.LASF69
 2626 03fd 0B       		.byte	0xb
 2627 03fe 42       		.byte	0x42
 2628 03ff 68000000 		.4byte	0x68
 2629 0403 14       		.byte	0x14
 2630 0404 0B       		.uleb128 0xb
 2631 0405 8D010000 		.4byte	.LASF70
 2632 0409 0B       		.byte	0xb
 2633 040a 43       		.byte	0x43
 2634 040b 68000000 		.4byte	0x68
 2635 040f 18       		.byte	0x18
 2636 0410 0B       		.uleb128 0xb
 2637 0411 12020000 		.4byte	.LASF71
 2638 0415 0B       		.byte	0xb
 2639 0416 44       		.byte	0x44
 2640 0417 68000000 		.4byte	0x68
 2641 041b 1C       		.byte	0x1c
 2642 041c 00       		.byte	0
 2643 041d 03       		.uleb128 0x3
 2644 041e B7060000 		.4byte	.LASF72
 2645 0422 0B       		.byte	0xb
 2646 0423 46       		.byte	0x46
 2647 0424 B4030000 		.4byte	0x3b4
 2648 0428 09       		.uleb128 0x9
 2649 0429 05       		.byte	0x5
 2650 042a 0B       		.byte	0xb
 2651 042b 52       		.byte	0x52
 2652 042c 6D040000 		.4byte	0x46d
 2653 0430 0B       		.uleb128 0xb
 2654 0431 71020000 		.4byte	.LASF73
 2655 0435 0B       		.byte	0xb
 2656 0436 54       		.byte	0x54
 2657 0437 81000000 		.4byte	0x81
 2658 043b 00       		.byte	0
 2659 043c 0B       		.uleb128 0xb
 2660 043d 08080000 		.4byte	.LASF74
 2661 0441 0B       		.byte	0xb
 2662 0442 56       		.byte	0x56
 2663 0443 6D040000 		.4byte	0x46d
 2664 0447 01       		.byte	0x1
 2665 0448 0B       		.uleb128 0xb
 2666 0449 4F080000 		.4byte	.LASF75
 2667 044d 0B       		.byte	0xb
 2668 044e 58       		.byte	0x58
 2669 044f 81000000 		.4byte	0x81
 2670 0453 02       		.byte	0x2
 2671 0454 0B       		.uleb128 0xb
 2672 0455 25060000 		.4byte	.LASF76
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 63


 2673 0459 0B       		.byte	0xb
 2674 045a 5A       		.byte	0x5a
 2675 045b 81000000 		.4byte	0x81
 2676 045f 03       		.byte	0x3
 2677 0460 0B       		.uleb128 0xb
 2678 0461 D3020000 		.4byte	.LASF77
 2679 0465 0B       		.byte	0xb
 2680 0466 5D       		.byte	0x5d
 2681 0467 81000000 		.4byte	0x81
 2682 046b 04       		.byte	0x4
 2683 046c 00       		.byte	0
 2684 046d 02       		.uleb128 0x2
 2685 046e 01       		.byte	0x1
 2686 046f 02       		.byte	0x2
 2687 0470 D8050000 		.4byte	.LASF78
 2688 0474 03       		.uleb128 0x3
 2689 0475 85040000 		.4byte	.LASF79
 2690 0479 0B       		.byte	0xb
 2691 047a 5F       		.byte	0x5f
 2692 047b 28040000 		.4byte	0x428
 2693 047f 09       		.uleb128 0x9
 2694 0480 06       		.byte	0x6
 2695 0481 0C       		.byte	0xc
 2696 0482 2E       		.byte	0x2e
 2697 0483 B8040000 		.4byte	0x4b8
 2698 0487 0B       		.uleb128 0xb
 2699 0488 B4020000 		.4byte	.LASF80
 2700 048c 0C       		.byte	0xc
 2701 048d 30       		.byte	0x30
 2702 048e 8D000000 		.4byte	0x8d
 2703 0492 00       		.byte	0
 2704 0493 0B       		.uleb128 0xb
 2705 0494 F2070000 		.4byte	.LASF81
 2706 0498 0C       		.byte	0xc
 2707 0499 31       		.byte	0x31
 2708 049a B1000000 		.4byte	0xb1
 2709 049e 02       		.byte	0x2
 2710 049f 0B       		.uleb128 0xb
 2711 04a0 E4070000 		.4byte	.LASF82
 2712 04a4 0C       		.byte	0xc
 2713 04a5 32       		.byte	0x32
 2714 04a6 81000000 		.4byte	0x81
 2715 04aa 04       		.byte	0x4
 2716 04ab 0B       		.uleb128 0xb
 2717 04ac 51000000 		.4byte	.LASF83
 2718 04b0 0C       		.byte	0xc
 2719 04b1 33       		.byte	0x33
 2720 04b2 81000000 		.4byte	0x81
 2721 04b6 05       		.byte	0x5
 2722 04b7 00       		.byte	0
 2723 04b8 03       		.uleb128 0x3
 2724 04b9 25020000 		.4byte	.LASF84
 2725 04bd 0C       		.byte	0xc
 2726 04be 36       		.byte	0x36
 2727 04bf C3040000 		.4byte	0x4c3
 2728 04c3 0C       		.uleb128 0xc
 2729 04c4 7F040000 		.4byte	0x47f
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 64


 2730 04c8 09       		.uleb128 0x9
 2731 04c9 1C       		.byte	0x1c
 2732 04ca 0C       		.byte	0xc
 2733 04cb 39       		.byte	0x39
 2734 04cc E9040000 		.4byte	0x4e9
 2735 04d0 0B       		.uleb128 0xb
 2736 04d1 F7030000 		.4byte	.LASF85
 2737 04d5 0C       		.byte	0xc
 2738 04d6 3B       		.byte	0x3b
 2739 04d7 E9040000 		.4byte	0x4e9
 2740 04db 00       		.byte	0
 2741 04dc 0B       		.uleb128 0xb
 2742 04dd 41080000 		.4byte	.LASF86
 2743 04e1 0C       		.byte	0xc
 2744 04e2 3C       		.byte	0x3c
 2745 04e3 F2000000 		.4byte	0xf2
 2746 04e7 04       		.byte	0x4
 2747 04e8 00       		.byte	0
 2748 04e9 06       		.uleb128 0x6
 2749 04ea 04       		.byte	0x4
 2750 04eb A9030000 		.4byte	0x3a9
 2751 04ef 03       		.uleb128 0x3
 2752 04f0 7A040000 		.4byte	.LASF87
 2753 04f4 0C       		.byte	0xc
 2754 04f5 3E       		.byte	0x3e
 2755 04f6 C8040000 		.4byte	0x4c8
 2756 04fa 09       		.uleb128 0x9
 2757 04fb 68       		.byte	0x68
 2758 04fc 0C       		.byte	0xc
 2759 04fd 44       		.byte	0x44
 2760 04fe 1B050000 		.4byte	0x51b
 2761 0502 0B       		.uleb128 0xb
 2762 0503 02040000 		.4byte	.LASF88
 2763 0507 0C       		.byte	0xc
 2764 0508 49       		.byte	0x49
 2765 0509 1B050000 		.4byte	0x51b
 2766 050d 00       		.byte	0
 2767 050e 0B       		.uleb128 0xb
 2768 050f E6030000 		.4byte	.LASF89
 2769 0513 0C       		.byte	0xc
 2770 0514 4A       		.byte	0x4a
 2771 0515 68000000 		.4byte	0x68
 2772 0519 64       		.byte	0x64
 2773 051a 00       		.byte	0
 2774 051b 07       		.uleb128 0x7
 2775 051c D7000000 		.4byte	0xd7
 2776 0520 2B050000 		.4byte	0x52b
 2777 0524 08       		.uleb128 0x8
 2778 0525 E5000000 		.4byte	0xe5
 2779 0529 63       		.byte	0x63
 2780 052a 00       		.byte	0
 2781 052b 03       		.uleb128 0x3
 2782 052c E7040000 		.4byte	.LASF90
 2783 0530 0C       		.byte	0xc
 2784 0531 50       		.byte	0x50
 2785 0532 FA040000 		.4byte	0x4fa
 2786 0536 0F       		.uleb128 0xf
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 65


 2787 0537 69000000 		.4byte	.LASF166
 2788 053b 01       		.byte	0x1
 2789 053c 14       		.byte	0x14
 2790 053d 00000000 		.4byte	.LFB64
 2791 0541 0C000000 		.4byte	.LFE64-.LFB64
 2792 0545 01       		.uleb128 0x1
 2793 0546 9C       		.byte	0x9c
 2794 0547 10       		.uleb128 0x10
 2795 0548 31080000 		.4byte	.LASF103
 2796 054c 01       		.byte	0x1
 2797 054d 28       		.byte	0x28
 2798 054e 00000000 		.4byte	.LFB65
 2799 0552 28010000 		.4byte	.LFE65-.LFB65
 2800 0556 01       		.uleb128 0x1
 2801 0557 9C       		.byte	0x9c
 2802 0558 79050000 		.4byte	0x579
 2803 055c 11       		.uleb128 0x11
 2804 055d 33070000 		.4byte	.LASF91
 2805 0561 01       		.byte	0x1
 2806 0562 3C       		.byte	0x3c
 2807 0563 79050000 		.4byte	0x579
 2808 0567 02       		.uleb128 0x2
 2809 0568 91       		.byte	0x91
 2810 0569 64       		.sleb128 -28
 2811 056a 11       		.uleb128 0x11
 2812 056b 96030000 		.4byte	.LASF92
 2813 056f 01       		.byte	0x1
 2814 0570 5D       		.byte	0x5d
 2815 0571 81000000 		.4byte	0x81
 2816 0575 02       		.uleb128 0x2
 2817 0576 91       		.byte	0x91
 2818 0577 6F       		.sleb128 -17
 2819 0578 00       		.byte	0
 2820 0579 07       		.uleb128 0x7
 2821 057a 99000000 		.4byte	0x99
 2822 057e 89050000 		.4byte	0x589
 2823 0582 08       		.uleb128 0x8
 2824 0583 E5000000 		.4byte	0xe5
 2825 0587 01       		.byte	0x1
 2826 0588 00       		.byte	0
 2827 0589 12       		.uleb128 0x12
 2828 058a 0F040000 		.4byte	.LASF94
 2829 058e 01       		.byte	0x1
 2830 058f 67       		.byte	0x67
 2831 0590 68000000 		.4byte	0x68
 2832 0594 00000000 		.4byte	.LFB66
 2833 0598 7C000000 		.4byte	.LFE66-.LFB66
 2834 059c 01       		.uleb128 0x1
 2835 059d 9C       		.byte	0x9c
 2836 059e B1050000 		.4byte	0x5b1
 2837 05a2 11       		.uleb128 0x11
 2838 05a3 BC050000 		.4byte	.LASF93
 2839 05a7 01       		.byte	0x1
 2840 05a8 84       		.byte	0x84
 2841 05a9 81000000 		.4byte	0x81
 2842 05ad 02       		.uleb128 0x2
 2843 05ae 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 66


 2844 05af 77       		.sleb128 -9
 2845 05b0 00       		.byte	0
 2846 05b1 13       		.uleb128 0x13
 2847 05b2 59070000 		.4byte	.LASF167
 2848 05b6 01       		.byte	0x1
 2849 05b7 94       		.byte	0x94
 2850 05b8 00000000 		.4byte	.LFB67
 2851 05bc 2A000000 		.4byte	.LFE67-.LFB67
 2852 05c0 01       		.uleb128 0x1
 2853 05c1 9C       		.byte	0x9c
 2854 05c2 14       		.uleb128 0x14
 2855 05c3 51030000 		.4byte	.LASF95
 2856 05c7 01       		.byte	0x1
 2857 05c8 B9       		.byte	0xb9
 2858 05c9 00000000 		.4byte	.LFB68
 2859 05cd 6C000000 		.4byte	.LFE68-.LFB68
 2860 05d1 01       		.uleb128 0x1
 2861 05d2 9C       		.byte	0x9c
 2862 05d3 E6050000 		.4byte	0x5e6
 2863 05d7 15       		.uleb128 0x15
 2864 05d8 9C040000 		.4byte	.LASF96
 2865 05dc 01       		.byte	0x1
 2866 05dd B9       		.byte	0xb9
 2867 05de 81000000 		.4byte	0x81
 2868 05e2 02       		.uleb128 0x2
 2869 05e3 91       		.byte	0x91
 2870 05e4 77       		.sleb128 -9
 2871 05e5 00       		.byte	0
 2872 05e6 16       		.uleb128 0x16
 2873 05e7 26080000 		.4byte	.LASF100
 2874 05eb 01       		.byte	0x1
 2875 05ec D6       		.byte	0xd6
 2876 05ed 81000000 		.4byte	0x81
 2877 05f1 00000000 		.4byte	.LFB69
 2878 05f5 48000000 		.4byte	.LFE69-.LFB69
 2879 05f9 01       		.uleb128 0x1
 2880 05fa 9C       		.byte	0x9c
 2881 05fb 1C060000 		.4byte	0x61c
 2882 05ff 15       		.uleb128 0x15
 2883 0600 C5040000 		.4byte	.LASF97
 2884 0604 01       		.byte	0x1
 2885 0605 D6       		.byte	0xd6
 2886 0606 1C060000 		.4byte	0x61c
 2887 060a 02       		.uleb128 0x2
 2888 060b 91       		.byte	0x91
 2889 060c 74       		.sleb128 -12
 2890 060d 15       		.uleb128 0x15
 2891 060e 9C040000 		.4byte	.LASF96
 2892 0612 01       		.byte	0x1
 2893 0613 D6       		.byte	0xd6
 2894 0614 81000000 		.4byte	0x81
 2895 0618 02       		.uleb128 0x2
 2896 0619 91       		.byte	0x91
 2897 061a 73       		.sleb128 -13
 2898 061b 00       		.byte	0
 2899 061c 06       		.uleb128 0x6
 2900 061d 04       		.byte	0x4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 67


 2901 061e B8040000 		.4byte	0x4b8
 2902 0622 17       		.uleb128 0x17
 2903 0623 0E060000 		.4byte	.LASF98
 2904 0627 01       		.byte	0x1
 2905 0628 EB       		.byte	0xeb
 2906 0629 00000000 		.4byte	.LFB70
 2907 062d 1E000000 		.4byte	.LFE70-.LFB70
 2908 0631 01       		.uleb128 0x1
 2909 0632 9C       		.byte	0x9c
 2910 0633 46060000 		.4byte	0x646
 2911 0637 15       		.uleb128 0x15
 2912 0638 6C060000 		.4byte	.LASF99
 2913 063c 01       		.byte	0x1
 2914 063d EB       		.byte	0xeb
 2915 063e 1C060000 		.4byte	0x61c
 2916 0642 02       		.uleb128 0x2
 2917 0643 91       		.byte	0x91
 2918 0644 74       		.sleb128 -12
 2919 0645 00       		.byte	0
 2920 0646 18       		.uleb128 0x18
 2921 0647 44050000 		.4byte	.LASF101
 2922 064b 01       		.byte	0x1
 2923 064c F4       		.byte	0xf4
 2924 064d B8040000 		.4byte	0x4b8
 2925 0651 00000000 		.4byte	.LFB71
 2926 0655 46000000 		.4byte	.LFE71-.LFB71
 2927 0659 01       		.uleb128 0x1
 2928 065a 9C       		.byte	0x9c
 2929 065b 98060000 		.4byte	0x698
 2930 065f 15       		.uleb128 0x15
 2931 0660 B4020000 		.4byte	.LASF80
 2932 0664 01       		.byte	0x1
 2933 0665 F4       		.byte	0xf4
 2934 0666 8D000000 		.4byte	0x8d
 2935 066a 02       		.uleb128 0x2
 2936 066b 91       		.byte	0x91
 2937 066c 6A       		.sleb128 -22
 2938 066d 15       		.uleb128 0x15
 2939 066e E4070000 		.4byte	.LASF82
 2940 0672 01       		.byte	0x1
 2941 0673 F4       		.byte	0xf4
 2942 0674 81000000 		.4byte	0x81
 2943 0678 02       		.uleb128 0x2
 2944 0679 91       		.byte	0x91
 2945 067a 69       		.sleb128 -23
 2946 067b 15       		.uleb128 0x15
 2947 067c 51000000 		.4byte	.LASF83
 2948 0680 01       		.byte	0x1
 2949 0681 F4       		.byte	0xf4
 2950 0682 81000000 		.4byte	0x81
 2951 0686 02       		.uleb128 0x2
 2952 0687 91       		.byte	0x91
 2953 0688 68       		.sleb128 -24
 2954 0689 11       		.uleb128 0x11
 2955 068a 83070000 		.4byte	.LASF102
 2956 068e 01       		.byte	0x1
 2957 068f F7       		.byte	0xf7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 68


 2958 0690 B8040000 		.4byte	0x4b8
 2959 0694 02       		.uleb128 0x2
 2960 0695 91       		.byte	0x91
 2961 0696 70       		.sleb128 -16
 2962 0697 00       		.byte	0
 2963 0698 19       		.uleb128 0x19
 2964 0699 7B060000 		.4byte	.LASF104
 2965 069d 01       		.byte	0x1
 2966 069e 0D01     		.2byte	0x10d
 2967 06a0 00000000 		.4byte	.LFB72
 2968 06a4 04010000 		.4byte	.LFE72-.LFB72
 2969 06a8 01       		.uleb128 0x1
 2970 06a9 9C       		.byte	0x9c
 2971 06aa FF060000 		.4byte	0x6ff
 2972 06ae 1A       		.uleb128 0x1a
 2973 06af 55010000 		.4byte	.LASF105
 2974 06b3 01       		.byte	0x1
 2975 06b4 1501     		.2byte	0x115
 2976 06b6 C9010000 		.4byte	0x1c9
 2977 06ba 03       		.uleb128 0x3
 2978 06bb 91       		.byte	0x91
 2979 06bc EC7C     		.sleb128 -404
 2980 06be 1A       		.uleb128 0x1a
 2981 06bf BE070000 		.4byte	.LASF106
 2982 06c3 01       		.byte	0x1
 2983 06c4 1901     		.2byte	0x119
 2984 06c6 C9010000 		.4byte	0x1c9
 2985 06ca 03       		.uleb128 0x3
 2986 06cb 91       		.byte	0x91
 2987 06cc E879     		.sleb128 -792
 2988 06ce 1A       		.uleb128 0x1a
 2989 06cf 02010000 		.4byte	.LASF107
 2990 06d3 01       		.byte	0x1
 2991 06d4 1D01     		.2byte	0x11d
 2992 06d6 C9010000 		.4byte	0x1c9
 2993 06da 03       		.uleb128 0x3
 2994 06db 91       		.byte	0x91
 2995 06dc E476     		.sleb128 -1180
 2996 06de 1A       		.uleb128 0x1a
 2997 06df 3D040000 		.4byte	.LASF108
 2998 06e3 01       		.byte	0x1
 2999 06e4 2101     		.2byte	0x121
 3000 06e6 C9010000 		.4byte	0x1c9
 3001 06ea 03       		.uleb128 0x3
 3002 06eb 91       		.byte	0x91
 3003 06ec E073     		.sleb128 -1568
 3004 06ee 1A       		.uleb128 0x1a
 3005 06ef 00000000 		.4byte	.LASF109
 3006 06f3 01       		.byte	0x1
 3007 06f4 2501     		.2byte	0x125
 3008 06f6 C9010000 		.4byte	0x1c9
 3009 06fa 03       		.uleb128 0x3
 3010 06fb 91       		.byte	0x91
 3011 06fc DC70     		.sleb128 -1956
 3012 06fe 00       		.byte	0
 3013 06ff 1B       		.uleb128 0x1b
 3014 0700 3C080000 		.4byte	.LASF168
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 69


 3015 0704 01       		.byte	0x1
 3016 0705 3001     		.2byte	0x130
 3017 0707 68000000 		.4byte	0x68
 3018 070b 00000000 		.4byte	.LFB73
 3019 070f 1E000000 		.4byte	.LFE73-.LFB73
 3020 0713 01       		.uleb128 0x1
 3021 0714 9C       		.byte	0x9c
 3022 0715 1C       		.uleb128 0x1c
 3023 0716 7B020000 		.4byte	.LASF110
 3024 071a 01       		.byte	0x1
 3025 071b 4601     		.2byte	0x146
 3026 071d 81000000 		.4byte	0x81
 3027 0721 00000000 		.4byte	.LFB74
 3028 0725 5C040000 		.4byte	.LFE74-.LFB74
 3029 0729 01       		.uleb128 0x1
 3030 072a 9C       		.byte	0x9c
 3031 072b 7F080000 		.4byte	0x87f
 3032 072f 1D       		.uleb128 0x1d
 3033 0730 62000000 		.4byte	.LBB2
 3034 0734 CC030000 		.4byte	.LBE2-.LBB2
 3035 0738 1A       		.uleb128 0x1a
 3036 0739 57050000 		.4byte	.LASF111
 3037 073d 01       		.byte	0x1
 3038 073e 7601     		.2byte	0x176
 3039 0740 61030000 		.4byte	0x361
 3040 0744 02       		.uleb128 0x2
 3041 0745 91       		.byte	0x91
 3042 0746 48       		.sleb128 -56
 3043 0747 1A       		.uleb128 0x1a
 3044 0748 91050000 		.4byte	.LASF112
 3045 074c 01       		.byte	0x1
 3046 074d 7A01     		.2byte	0x17a
 3047 074f 61030000 		.4byte	0x361
 3048 0753 03       		.uleb128 0x3
 3049 0754 91       		.byte	0x91
 3050 0755 B47F     		.sleb128 -76
 3051 0757 1A       		.uleb128 0x1a
 3052 0758 46020000 		.4byte	.LASF113
 3053 075c 01       		.byte	0x1
 3054 075d 7F01     		.2byte	0x17f
 3055 075f 61030000 		.4byte	0x361
 3056 0763 03       		.uleb128 0x3
 3057 0764 91       		.byte	0x91
 3058 0765 A07F     		.sleb128 -96
 3059 0767 1A       		.uleb128 0x1a
 3060 0768 A2030000 		.4byte	.LASF114
 3061 076c 01       		.byte	0x1
 3062 076d 9201     		.2byte	0x192
 3063 076f 8D000000 		.4byte	0x8d
 3064 0773 02       		.uleb128 0x2
 3065 0774 91       		.byte	0x91
 3066 0775 66       		.sleb128 -26
 3067 0776 1A       		.uleb128 0x1a
 3068 0777 28040000 		.4byte	.LASF115
 3069 077b 01       		.byte	0x1
 3070 077c 9301     		.2byte	0x193
 3071 077e 61030000 		.4byte	0x361
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 70


 3072 0782 03       		.uleb128 0x3
 3073 0783 91       		.byte	0x91
 3074 0784 8C7F     		.sleb128 -116
 3075 0786 1A       		.uleb128 0x1a
 3076 0787 1E070000 		.4byte	.LASF116
 3077 078b 01       		.byte	0x1
 3078 078c A801     		.2byte	0x1a8
 3079 078e 7F080000 		.4byte	0x87f
 3080 0792 03       		.uleb128 0x3
 3081 0793 91       		.byte	0x91
 3082 0794 A475     		.sleb128 -1372
 3083 0796 1A       		.uleb128 0x1a
 3084 0797 9E070000 		.4byte	.LASF30
 3085 079b 01       		.byte	0x1
 3086 079c A901     		.2byte	0x1a9
 3087 079e 81000000 		.4byte	0x81
 3088 07a2 02       		.uleb128 0x2
 3089 07a3 91       		.byte	0x91
 3090 07a4 65       		.sleb128 -27
 3091 07a5 1A       		.uleb128 0x1a
 3092 07a6 F0060000 		.4byte	.LASF117
 3093 07aa 01       		.byte	0x1
 3094 07ab B001     		.2byte	0x1b0
 3095 07ad EC000000 		.4byte	0xec
 3096 07b1 02       		.uleb128 0x2
 3097 07b2 91       		.byte	0x91
 3098 07b3 6C       		.sleb128 -20
 3099 07b4 1A       		.uleb128 0x1a
 3100 07b5 72010000 		.4byte	.LASF118
 3101 07b9 01       		.byte	0x1
 3102 07ba B401     		.2byte	0x1b4
 3103 07bc A5000000 		.4byte	0xa5
 3104 07c0 02       		.uleb128 0x2
 3105 07c1 91       		.byte	0x91
 3106 07c2 64       		.sleb128 -28
 3107 07c3 1A       		.uleb128 0x1a
 3108 07c4 84020000 		.4byte	.LASF119
 3109 07c8 01       		.byte	0x1
 3110 07c9 E401     		.2byte	0x1e4
 3111 07cb 4C000000 		.4byte	0x4c
 3112 07cf 02       		.uleb128 0x2
 3113 07d0 91       		.byte	0x91
 3114 07d1 5C       		.sleb128 -36
 3115 07d2 1E       		.uleb128 0x1e
 3116 07d3 F0000000 		.4byte	.LBB3
 3117 07d7 2C000000 		.4byte	.LBE3-.LBB3
 3118 07db FF070000 		.4byte	0x7ff
 3119 07df 1A       		.uleb128 0x1a
 3120 07e0 A7060000 		.4byte	.LASF120
 3121 07e4 01       		.byte	0x1
 3122 07e5 8701     		.2byte	0x187
 3123 07e7 8D000000 		.4byte	0x8d
 3124 07eb 02       		.uleb128 0x2
 3125 07ec 91       		.byte	0x91
 3126 07ed 68       		.sleb128 -24
 3127 07ee 1A       		.uleb128 0x1a
 3128 07ef E4010000 		.4byte	.LASF121
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 71


 3129 07f3 01       		.byte	0x1
 3130 07f4 8801     		.2byte	0x188
 3131 07f6 61030000 		.4byte	0x361
 3132 07fa 03       		.uleb128 0x3
 3133 07fb 91       		.byte	0x91
 3134 07fc F87E     		.sleb128 -136
 3135 07fe 00       		.byte	0
 3136 07ff 1E       		.uleb128 0x1e
 3137 0800 1E010000 		.4byte	.LBB4
 3138 0804 20000000 		.4byte	.LBE4-.LBB4
 3139 0808 1D080000 		.4byte	0x81d
 3140 080c 1A       		.uleb128 0x1a
 3141 080d E4010000 		.4byte	.LASF121
 3142 0811 01       		.byte	0x1
 3143 0812 8C01     		.2byte	0x18c
 3144 0814 61030000 		.4byte	0x361
 3145 0818 03       		.uleb128 0x3
 3146 0819 91       		.byte	0x91
 3147 081a E47E     		.sleb128 -156
 3148 081c 00       		.byte	0
 3149 081d 1E       		.uleb128 0x1e
 3150 081e 5E020000 		.4byte	.LBB5
 3151 0822 4C010000 		.4byte	.LBE5-.LBB5
 3152 0826 54080000 		.4byte	0x854
 3153 082a 1A       		.uleb128 0x1a
 3154 082b 50050000 		.4byte	.LASF122
 3155 082f 01       		.byte	0x1
 3156 0830 B901     		.2byte	0x1b9
 3157 0832 A5000000 		.4byte	0xa5
 3158 0836 02       		.uleb128 0x2
 3159 0837 91       		.byte	0x91
 3160 0838 6B       		.sleb128 -21
 3161 0839 1D       		.uleb128 0x1d
 3162 083a 66020000 		.4byte	.LBB6
 3163 083e 28010000 		.4byte	.LBE6-.LBB6
 3164 0842 1A       		.uleb128 0x1a
 3165 0843 6F030000 		.4byte	.LASF123
 3166 0847 01       		.byte	0x1
 3167 0848 BB01     		.2byte	0x1bb
 3168 084a 8F080000 		.4byte	0x88f
 3169 084e 03       		.uleb128 0x3
 3170 084f 91       		.byte	0x91
 3171 0850 EC76     		.sleb128 -1172
 3172 0852 00       		.byte	0
 3173 0853 00       		.byte	0
 3174 0854 1D       		.uleb128 0x1d
 3175 0855 C4030000 		.4byte	.LBB7
 3176 0859 3A000000 		.4byte	.LBE7-.LBB7
 3177 085d 1A       		.uleb128 0x1a
 3178 085e 54020000 		.4byte	.LASF124
 3179 0862 01       		.byte	0x1
 3180 0863 DB01     		.2byte	0x1db
 3181 0865 68000000 		.4byte	0x68
 3182 0869 02       		.uleb128 0x2
 3183 086a 91       		.byte	0x91
 3184 086b 60       		.sleb128 -32
 3185 086c 1A       		.uleb128 0x1a
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 72


 3186 086d 19060000 		.4byte	.LASF125
 3187 0871 01       		.byte	0x1
 3188 0872 DC01     		.2byte	0x1dc
 3189 0874 A0080000 		.4byte	0x8a0
 3190 0878 03       		.uleb128 0x3
 3191 0879 91       		.byte	0x91
 3192 087a D87E     		.sleb128 -168
 3193 087c 00       		.byte	0
 3194 087d 00       		.byte	0
 3195 087e 00       		.byte	0
 3196 087f 07       		.uleb128 0x7
 3197 0880 D7000000 		.4byte	0xd7
 3198 0884 8F080000 		.4byte	0x88f
 3199 0888 08       		.uleb128 0x8
 3200 0889 E5000000 		.4byte	0xe5
 3201 088d C7       		.byte	0xc7
 3202 088e 00       		.byte	0
 3203 088f 07       		.uleb128 0x7
 3204 0890 D7000000 		.4byte	0xd7
 3205 0894 A0080000 		.4byte	0x8a0
 3206 0898 1F       		.uleb128 0x1f
 3207 0899 E5000000 		.4byte	0xe5
 3208 089d E803     		.2byte	0x3e8
 3209 089f 00       		.byte	0
 3210 08a0 07       		.uleb128 0x7
 3211 08a1 D7000000 		.4byte	0xd7
 3212 08a5 B0080000 		.4byte	0x8b0
 3213 08a9 08       		.uleb128 0x8
 3214 08aa E5000000 		.4byte	0xe5
 3215 08ae 09       		.byte	0x9
 3216 08af 00       		.byte	0
 3217 08b0 1C       		.uleb128 0x1c
 3218 08b1 98050000 		.4byte	.LASF126
 3219 08b5 01       		.byte	0x1
 3220 08b6 F901     		.2byte	0x1f9
 3221 08b8 81000000 		.4byte	0x81
 3222 08bc 00000000 		.4byte	.LFB75
 3223 08c0 44000000 		.4byte	.LFE75-.LFB75
 3224 08c4 01       		.uleb128 0x1
 3225 08c5 9C       		.byte	0x9c
 3226 08c6 E4080000 		.4byte	0x8e4
 3227 08ca 1D       		.uleb128 0x1d
 3228 08cb 20000000 		.4byte	.LBB8
 3229 08cf 1A000000 		.4byte	.LBE8-.LBB8
 3230 08d3 1A       		.uleb128 0x1a
 3231 08d4 84020000 		.4byte	.LASF119
 3232 08d8 01       		.byte	0x1
 3233 08d9 0402     		.2byte	0x204
 3234 08db 4C000000 		.4byte	0x4c
 3235 08df 02       		.uleb128 0x2
 3236 08e0 91       		.byte	0x91
 3237 08e1 74       		.sleb128 -12
 3238 08e2 00       		.byte	0
 3239 08e3 00       		.byte	0
 3240 08e4 1C       		.uleb128 0x1c
 3241 08e5 D0030000 		.4byte	.LASF127
 3242 08e9 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 73


 3243 08ea 1902     		.2byte	0x219
 3244 08ec 81000000 		.4byte	0x81
 3245 08f0 00000000 		.4byte	.LFB76
 3246 08f4 74020000 		.4byte	.LFE76-.LFB76
 3247 08f8 01       		.uleb128 0x1
 3248 08f9 9C       		.byte	0x9c
 3249 08fa 75090000 		.4byte	0x975
 3250 08fe 1A       		.uleb128 0x1a
 3251 08ff 17050000 		.4byte	.LASF59
 3252 0903 01       		.byte	0x1
 3253 0904 1C02     		.2byte	0x21c
 3254 0906 4C000000 		.4byte	0x4c
 3255 090a 02       		.uleb128 0x2
 3256 090b 91       		.byte	0x91
 3257 090c 6C       		.sleb128 -20
 3258 090d 1A       		.uleb128 0x1a
 3259 090e F6060000 		.4byte	.LASF128
 3260 0912 01       		.byte	0x1
 3261 0913 1D02     		.2byte	0x21d
 3262 0915 75090000 		.4byte	0x975
 3263 0919 02       		.uleb128 0x2
 3264 091a 91       		.byte	0x91
 3265 091b 4C       		.sleb128 -52
 3266 091c 1A       		.uleb128 0x1a
 3267 091d FF020000 		.4byte	.LASF58
 3268 0921 01       		.byte	0x1
 3269 0922 2102     		.2byte	0x221
 3270 0924 61030000 		.4byte	0x361
 3271 0928 03       		.uleb128 0x3
 3272 0929 91       		.byte	0x91
 3273 092a B87F     		.sleb128 -72
 3274 092c 1A       		.uleb128 0x1a
 3275 092d 7A030000 		.4byte	.LASF129
 3276 0931 01       		.byte	0x1
 3277 0932 3F02     		.2byte	0x23f
 3278 0934 6D020000 		.4byte	0x26d
 3279 0938 03       		.uleb128 0x3
 3280 0939 91       		.byte	0x91
 3281 093a A47F     		.sleb128 -92
 3282 093c 1E       		.uleb128 0x1e
 3283 093d 22000000 		.4byte	.LBB9
 3284 0941 78000000 		.4byte	.LBE9-.LBB9
 3285 0945 5A090000 		.4byte	0x95a
 3286 0949 1A       		.uleb128 0x1a
 3287 094a 3C070000 		.4byte	.LASF130
 3288 094e 01       		.byte	0x1
 3289 094f 2702     		.2byte	0x227
 3290 0951 1D020000 		.4byte	0x21d
 3291 0955 03       		.uleb128 0x3
 3292 0956 91       		.byte	0x91
 3293 0957 887F     		.sleb128 -120
 3294 0959 00       		.byte	0
 3295 095a 1D       		.uleb128 0x1d
 3296 095b 1E010000 		.4byte	.LBB10
 3297 095f EE000000 		.4byte	.LBE10-.LBB10
 3298 0963 1A       		.uleb128 0x1a
 3299 0964 93070000 		.4byte	.LASF131
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 74


 3300 0968 01       		.byte	0x1
 3301 0969 5A02     		.2byte	0x25a
 3302 096b B1020000 		.4byte	0x2b1
 3303 096f 03       		.uleb128 0x3
 3304 0970 91       		.byte	0x91
 3305 0971 F87E     		.sleb128 -136
 3306 0973 00       		.byte	0
 3307 0974 00       		.byte	0
 3308 0975 07       		.uleb128 0x7
 3309 0976 D7000000 		.4byte	0xd7
 3310 097a 85090000 		.4byte	0x985
 3311 097e 08       		.uleb128 0x8
 3312 097f E5000000 		.4byte	0xe5
 3313 0983 1F       		.byte	0x1f
 3314 0984 00       		.byte	0
 3315 0985 20       		.uleb128 0x20
 3316 0986 3D030000 		.4byte	.LASF132
 3317 098a 01       		.byte	0x1
 3318 098b 8002     		.2byte	0x280
 3319 098d 81000000 		.4byte	0x81
 3320 0991 00000000 		.4byte	.LFB77
 3321 0995 74000000 		.4byte	.LFE77-.LFB77
 3322 0999 01       		.uleb128 0x1
 3323 099a 9C       		.byte	0x9c
 3324 099b CB090000 		.4byte	0x9cb
 3325 099f 21       		.uleb128 0x21
 3326 09a0 17050000 		.4byte	.LASF59
 3327 09a4 01       		.byte	0x1
 3328 09a5 8002     		.2byte	0x280
 3329 09a7 4C000000 		.4byte	0x4c
 3330 09ab 02       		.uleb128 0x2
 3331 09ac 91       		.byte	0x91
 3332 09ad 64       		.sleb128 -28
 3333 09ae 22       		.uleb128 0x22
 3334 09af 7400     		.ascii	"t\000"
 3335 09b1 01       		.byte	0x1
 3336 09b2 8702     		.2byte	0x287
 3337 09b4 CB090000 		.4byte	0x9cb
 3338 09b8 02       		.uleb128 0x2
 3339 09b9 91       		.byte	0x91
 3340 09ba 74       		.sleb128 -12
 3341 09bb 1A       		.uleb128 0x1a
 3342 09bc F6040000 		.4byte	.LASF133
 3343 09c0 01       		.byte	0x1
 3344 09c1 8C02     		.2byte	0x28c
 3345 09c3 6B010000 		.4byte	0x16b
 3346 09c7 02       		.uleb128 0x2
 3347 09c8 91       		.byte	0x91
 3348 09c9 68       		.sleb128 -24
 3349 09ca 00       		.byte	0
 3350 09cb 06       		.uleb128 0x6
 3351 09cc 04       		.byte	0x4
 3352 09cd BC020000 		.4byte	0x2bc
 3353 09d1 20       		.uleb128 0x20
 3354 09d2 C3020000 		.4byte	.LASF134
 3355 09d6 01       		.byte	0x1
 3356 09d7 A902     		.2byte	0x2a9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 75


 3357 09d9 81000000 		.4byte	0x81
 3358 09dd 00000000 		.4byte	.LFB78
 3359 09e1 38010000 		.4byte	.LFE78-.LFB78
 3360 09e5 01       		.uleb128 0x1
 3361 09e6 9C       		.byte	0x9c
 3362 09e7 4A0A0000 		.4byte	0xa4a
 3363 09eb 21       		.uleb128 0x21
 3364 09ec 05030000 		.4byte	.LASF135
 3365 09f0 01       		.byte	0x1
 3366 09f1 A902     		.2byte	0x2a9
 3367 09f3 EC000000 		.4byte	0xec
 3368 09f7 03       		.uleb128 0x3
 3369 09f8 91       		.byte	0x91
 3370 09f9 9C7E     		.sleb128 -228
 3371 09fb 21       		.uleb128 0x21
 3372 09fc DF020000 		.4byte	.LASF136
 3373 0a00 01       		.byte	0x1
 3374 0a01 A902     		.2byte	0x2a9
 3375 0a03 68000000 		.4byte	0x68
 3376 0a07 03       		.uleb128 0x3
 3377 0a08 91       		.byte	0x91
 3378 0a09 987E     		.sleb128 -232
 3379 0a0b 21       		.uleb128 0x21
 3380 0a0c BF040000 		.4byte	.LASF137
 3381 0a10 01       		.byte	0x1
 3382 0a11 A902     		.2byte	0x2a9
 3383 0a13 EC000000 		.4byte	0xec
 3384 0a17 03       		.uleb128 0x3
 3385 0a18 91       		.byte	0x91
 3386 0a19 947E     		.sleb128 -236
 3387 0a1b 1A       		.uleb128 0x1a
 3388 0a1c D5010000 		.4byte	.LASF138
 3389 0a20 01       		.byte	0x1
 3390 0a21 AB02     		.2byte	0x2ab
 3391 0a23 81000000 		.4byte	0x81
 3392 0a27 02       		.uleb128 0x2
 3393 0a28 91       		.byte	0x91
 3394 0a29 77       		.sleb128 -9
 3395 0a2a 1A       		.uleb128 0x1a
 3396 0a2b 3C000000 		.4byte	.LASF139
 3397 0a2f 01       		.byte	0x1
 3398 0a30 B202     		.2byte	0x2b2
 3399 0a32 4A0A0000 		.4byte	0xa4a
 3400 0a36 02       		.uleb128 0x2
 3401 0a37 91       		.byte	0x91
 3402 0a38 68       		.sleb128 -24
 3403 0a39 1A       		.uleb128 0x1a
 3404 0a3a 1E070000 		.4byte	.LASF116
 3405 0a3e 01       		.byte	0x1
 3406 0a3f BA02     		.2byte	0x2ba
 3407 0a41 7F080000 		.4byte	0x87f
 3408 0a45 03       		.uleb128 0x3
 3409 0a46 91       		.byte	0x91
 3410 0a47 A07E     		.sleb128 -224
 3411 0a49 00       		.byte	0
 3412 0a4a 07       		.uleb128 0x7
 3413 0a4b D7000000 		.4byte	0xd7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 76


 3414 0a4f 5A0A0000 		.4byte	0xa5a
 3415 0a53 08       		.uleb128 0x8
 3416 0a54 E5000000 		.4byte	0xe5
 3417 0a58 0B       		.byte	0xb
 3418 0a59 00       		.byte	0
 3419 0a5a 23       		.uleb128 0x23
 3420 0a5b 48010000 		.4byte	.LASF140
 3421 0a5f 0D       		.byte	0xd
 3422 0a60 1207     		.2byte	0x712
 3423 0a62 660A0000 		.4byte	0xa66
 3424 0a66 0C       		.uleb128 0xc
 3425 0a67 76000000 		.4byte	0x76
 3426 0a6b 24       		.uleb128 0x24
 3427 0a6c 2C000000 		.4byte	.LASF141
 3428 0a70 0A       		.byte	0xa
 3429 0a71 11       		.byte	0x11
 3430 0a72 6D040000 		.4byte	0x46d
 3431 0a76 05       		.uleb128 0x5
 3432 0a77 03       		.byte	0x3
 3433 0a78 00000000 		.4byte	buffer_overflow
 3434 0a7c 24       		.uleb128 0x24
 3435 0a7d A6040000 		.4byte	.LASF142
 3436 0a81 0A       		.byte	0xa
 3437 0a82 22       		.byte	0x22
 3438 0a83 8D000000 		.4byte	0x8d
 3439 0a87 05       		.uleb128 0x5
 3440 0a88 03       		.byte	0x3
 3441 0a89 00000000 		.4byte	dataPointsInStack
 3442 0a8d 24       		.uleb128 0x24
 3443 0a8e A5070000 		.4byte	.LASF143
 3444 0a92 0A       		.byte	0xa
 3445 0a93 23       		.byte	0x23
 3446 0a94 8D000000 		.4byte	0x8d
 3447 0a98 05       		.uleb128 0x5
 3448 0a99 03       		.byte	0x3
 3449 0a9a 00000000 		.4byte	dataPointsInStackDesired
 3450 0a9e 07       		.uleb128 0x7
 3451 0a9f 71030000 		.4byte	0x371
 3452 0aa3 AE0A0000 		.4byte	0xaae
 3453 0aa7 08       		.uleb128 0x8
 3454 0aa8 E5000000 		.4byte	0xe5
 3455 0aac 95       		.byte	0x95
 3456 0aad 00       		.byte	0
 3457 0aae 24       		.uleb128 0x24
 3458 0aaf E1030000 		.4byte	.LASF144
 3459 0ab3 0A       		.byte	0xa
 3460 0ab4 24       		.byte	0x24
 3461 0ab5 9E0A0000 		.4byte	0xa9e
 3462 0ab9 05       		.uleb128 0x5
 3463 0aba 03       		.byte	0x3
 3464 0abb 00000000 		.4byte	data
 3465 0abf 24       		.uleb128 0x24
 3466 0ac0 2F010000 		.4byte	.LASF145
 3467 0ac4 0B       		.byte	0xb
 3468 0ac5 1F       		.byte	0x1f
 3469 0ac6 81000000 		.4byte	0x81
 3470 0aca 05       		.uleb128 0x5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 77


 3471 0acb 03       		.byte	0x3
 3472 0acc 00000000 		.4byte	modem_state
 3473 0ad0 24       		.uleb128 0x24
 3474 0ad1 5D040000 		.4byte	.LASF146
 3475 0ad5 0B       		.byte	0xb
 3476 0ad6 62       		.byte	0x62
 3477 0ad7 BD000000 		.4byte	0xbd
 3478 0adb 05       		.uleb128 0x5
 3479 0adc 03       		.byte	0x3
 3480 0add 00000000 		.4byte	modem_start_time_stamp
 3481 0ae1 24       		.uleb128 0x24
 3482 0ae2 F7030000 		.4byte	.LASF85
 3483 0ae6 0B       		.byte	0xb
 3484 0ae7 63       		.byte	0x63
 3485 0ae8 A9030000 		.4byte	0x3a9
 3486 0aec 05       		.uleb128 0x5
 3487 0aed 03       		.byte	0x3
 3488 0aee 00000000 		.4byte	modem_info
 3489 0af2 24       		.uleb128 0x24
 3490 0af3 07070000 		.4byte	.LASF147
 3491 0af7 0B       		.byte	0xb
 3492 0af8 64       		.byte	0x64
 3493 0af9 1D040000 		.4byte	0x41d
 3494 0afd 05       		.uleb128 0x5
 3495 0afe 03       		.byte	0x3
 3496 0aff 00000000 		.4byte	modem_stats
 3497 0b03 24       		.uleb128 0x24
 3498 0b04 2F050000 		.4byte	.LASF148
 3499 0b08 0B       		.byte	0xb
 3500 0b09 65       		.byte	0x65
 3501 0b0a 74040000 		.4byte	0x474
 3502 0b0e 05       		.uleb128 0x5
 3503 0b0f 03       		.byte	0x3
 3504 0b10 00000000 		.4byte	updatable_parameters
 3505 0b14 24       		.uleb128 0x24
 3506 0b15 74040000 		.4byte	.LASF149
 3507 0b19 0E       		.byte	0xe
 3508 0b1a 12       		.byte	0x12
 3509 0b1b 1B050000 		.4byte	0x51b
 3510 0b1f 05       		.uleb128 0x5
 3511 0b20 03       		.byte	0x3
 3512 0b21 00000000 		.4byte	inbox
 3513 0b25 07       		.uleb128 0x7
 3514 0b26 D7000000 		.4byte	0xd7
 3515 0b2a 360B0000 		.4byte	0xb36
 3516 0b2e 1F       		.uleb128 0x1f
 3517 0b2f E5000000 		.4byte	0xe5
 3518 0b33 0F27     		.2byte	0x270f
 3519 0b35 00       		.byte	0
 3520 0b36 24       		.uleb128 0x24
 3521 0b37 6F050000 		.4byte	.LASF150
 3522 0b3b 0C       		.byte	0xc
 3523 0b3c 18       		.byte	0x18
 3524 0b3d 250B0000 		.4byte	0xb25
 3525 0b41 05       		.uleb128 0x5
 3526 0b42 03       		.byte	0x3
 3527 0b43 00000000 		.4byte	http_request
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 78


 3528 0b47 24       		.uleb128 0x24
 3529 0b48 D4070000 		.4byte	.LASF151
 3530 0b4c 0C       		.byte	0xc
 3531 0b4d 19       		.byte	0x19
 3532 0b4e 250B0000 		.4byte	0xb25
 3533 0b52 05       		.uleb128 0x5
 3534 0b53 03       		.byte	0x3
 3535 0b54 00000000 		.4byte	http_body
 3536 0b58 24       		.uleb128 0x24
 3537 0b59 13070000 		.4byte	.LASF152
 3538 0b5d 0C       		.byte	0xc
 3539 0b5e 1A       		.byte	0x1a
 3540 0b5f 7F080000 		.4byte	0x87f
 3541 0b63 05       		.uleb128 0x5
 3542 0b64 03       		.byte	0x3
 3543 0b65 00000000 		.4byte	http_route
 3544 0b69 24       		.uleb128 0x24
 3545 0b6a 54060000 		.4byte	.LASF153
 3546 0b6e 0C       		.byte	0xc
 3547 0b6f 41       		.byte	0x41
 3548 0b70 EF040000 		.4byte	0x4ef
 3549 0b74 05       		.uleb128 0x5
 3550 0b75 03       		.byte	0x3
 3551 0b76 00000000 		.4byte	system_info
 3552 0b7a 24       		.uleb128 0x24
 3553 0b7b F4050000 		.4byte	.LASF154
 3554 0b7f 0C       		.byte	0xc
 3555 0b80 53       		.byte	0x53
 3556 0b81 2B050000 		.4byte	0x52b
 3557 0b85 05       		.uleb128 0x5
 3558 0b86 03       		.byte	0x3
 3559 0b87 00000000 		.4byte	system_settings
 3560 0b8b 24       		.uleb128 0x24
 3561 0b8c 3B010000 		.4byte	.LASF155
 3562 0b90 0C       		.byte	0xc
 3563 0b91 6F       		.byte	0x6f
 3564 0b92 B8040000 		.4byte	0x4b8
 3565 0b96 05       		.uleb128 0x5
 3566 0b97 03       		.byte	0x3
 3567 0b98 00000000 		.4byte	alarmMeasure
 3568 0b9c 24       		.uleb128 0x24
 3569 0b9d 7F010000 		.4byte	.LASF156
 3570 0ba1 0C       		.byte	0xc
 3571 0ba2 70       		.byte	0x70
 3572 0ba3 81000000 		.4byte	0x81
 3573 0ba7 05       		.uleb128 0x5
 3574 0ba8 03       		.byte	0x3
 3575 0ba9 00000000 		.4byte	timeToMeasure
 3576 0bad 24       		.uleb128 0x24
 3577 0bae 12030000 		.4byte	.LASF157
 3578 0bb2 0C       		.byte	0xc
 3579 0bb3 71       		.byte	0x71
 3580 0bb4 B8040000 		.4byte	0x4b8
 3581 0bb8 05       		.uleb128 0x5
 3582 0bb9 03       		.byte	0x3
 3583 0bba 00000000 		.4byte	alarmSync
 3584 0bbe 24       		.uleb128 0x24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 79


 3585 0bbf A5010000 		.4byte	.LASF158
 3586 0bc3 0C       		.byte	0xc
 3587 0bc4 72       		.byte	0x72
 3588 0bc5 81000000 		.4byte	0x81
 3589 0bc9 05       		.uleb128 0x5
 3590 0bca 03       		.byte	0x3
 3591 0bcb 00000000 		.4byte	timeToSync
 3592 0bcf 24       		.uleb128 0x24
 3593 0bd0 00050000 		.4byte	.LASF159
 3594 0bd4 0C       		.byte	0xc
 3595 0bd5 73       		.byte	0x73
 3596 0bd6 81000000 		.4byte	0x81
 3597 0bda 05       		.uleb128 0x5
 3598 0bdb 03       		.byte	0x3
 3599 0bdc 00000000 		.4byte	timeToSycnRemoteParams
 3600 0be0 25       		.uleb128 0x25
 3601 0be1 68657900 		.ascii	"hey\000"
 3602 0be5 0C       		.byte	0xc
 3603 0be6 74       		.byte	0x74
 3604 0be7 81000000 		.4byte	0x81
 3605 0beb 05       		.uleb128 0x5
 3606 0bec 03       		.byte	0x3
 3607 0bed 00000000 		.4byte	hey
 3608 0bf1 24       		.uleb128 0x24
 3609 0bf2 51040000 		.4byte	.LASF160
 3610 0bf6 0C       		.byte	0xc
 3611 0bf7 77       		.byte	0x77
 3612 0bf8 B8040000 		.4byte	0x4b8
 3613 0bfc 05       		.uleb128 0x5
 3614 0bfd 03       		.byte	0x3
 3615 0bfe 00000000 		.4byte	alarmAppLED
 3616 0c02 24       		.uleb128 0x24
 3617 0c03 5E020000 		.4byte	.LASF161
 3618 0c07 0C       		.byte	0xc
 3619 0c08 78       		.byte	0x78
 3620 0c09 81000000 		.4byte	0x81
 3621 0c0d 05       		.uleb128 0x5
 3622 0c0e 03       		.byte	0x3
 3623 0c0f 00000000 		.4byte	timeToAppLED
 3624 0c13 07       		.uleb128 0x7
 3625 0c14 D7000000 		.4byte	0xd7
 3626 0c18 230C0000 		.4byte	0xc23
 3627 0c1c 08       		.uleb128 0x8
 3628 0c1d E5000000 		.4byte	0xe5
 3629 0c21 1D       		.byte	0x1d
 3630 0c22 00       		.byte	0
 3631 0c23 24       		.uleb128 0x24
 3632 0c24 AE050000 		.4byte	.LASF162
 3633 0c28 01       		.byte	0x1
 3634 0c29 1D       		.byte	0x1d
 3635 0c2a 130C0000 		.4byte	0xc13
 3636 0c2e 05       		.uleb128 0x5
 3637 0c2f 03       		.byte	0x3
 3638 0c30 00000000 		.4byte	Data_fileName
 3639 0c34 24       		.uleb128 0x24
 3640 0c35 96030000 		.4byte	.LASF92
 3641 0c39 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 80


 3642 0c3a 1E       		.byte	0x1e
 3643 0c3b 81000000 		.4byte	0x81
 3644 0c3f 05       		.uleb128 0x5
 3645 0c40 03       		.byte	0x3
 3646 0c41 00000000 		.4byte	try_counter
 3647 0c45 00       		.byte	0
 3648              		.section	.debug_abbrev,"",%progbits
 3649              	.Ldebug_abbrev0:
 3650 0000 01       		.uleb128 0x1
 3651 0001 11       		.uleb128 0x11
 3652 0002 01       		.byte	0x1
 3653 0003 25       		.uleb128 0x25
 3654 0004 0E       		.uleb128 0xe
 3655 0005 13       		.uleb128 0x13
 3656 0006 0B       		.uleb128 0xb
 3657 0007 03       		.uleb128 0x3
 3658 0008 0E       		.uleb128 0xe
 3659 0009 1B       		.uleb128 0x1b
 3660 000a 0E       		.uleb128 0xe
 3661 000b 55       		.uleb128 0x55
 3662 000c 17       		.uleb128 0x17
 3663 000d 11       		.uleb128 0x11
 3664 000e 01       		.uleb128 0x1
 3665 000f 10       		.uleb128 0x10
 3666 0010 17       		.uleb128 0x17
 3667 0011 00       		.byte	0
 3668 0012 00       		.byte	0
 3669 0013 02       		.uleb128 0x2
 3670 0014 24       		.uleb128 0x24
 3671 0015 00       		.byte	0
 3672 0016 0B       		.uleb128 0xb
 3673 0017 0B       		.uleb128 0xb
 3674 0018 3E       		.uleb128 0x3e
 3675 0019 0B       		.uleb128 0xb
 3676 001a 03       		.uleb128 0x3
 3677 001b 0E       		.uleb128 0xe
 3678 001c 00       		.byte	0
 3679 001d 00       		.byte	0
 3680 001e 03       		.uleb128 0x3
 3681 001f 16       		.uleb128 0x16
 3682 0020 00       		.byte	0
 3683 0021 03       		.uleb128 0x3
 3684 0022 0E       		.uleb128 0xe
 3685 0023 3A       		.uleb128 0x3a
 3686 0024 0B       		.uleb128 0xb
 3687 0025 3B       		.uleb128 0x3b
 3688 0026 0B       		.uleb128 0xb
 3689 0027 49       		.uleb128 0x49
 3690 0028 13       		.uleb128 0x13
 3691 0029 00       		.byte	0
 3692 002a 00       		.byte	0
 3693 002b 04       		.uleb128 0x4
 3694 002c 24       		.uleb128 0x24
 3695 002d 00       		.byte	0
 3696 002e 0B       		.uleb128 0xb
 3697 002f 0B       		.uleb128 0xb
 3698 0030 3E       		.uleb128 0x3e
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 81


 3699 0031 0B       		.uleb128 0xb
 3700 0032 03       		.uleb128 0x3
 3701 0033 08       		.uleb128 0x8
 3702 0034 00       		.byte	0
 3703 0035 00       		.byte	0
 3704 0036 05       		.uleb128 0x5
 3705 0037 16       		.uleb128 0x16
 3706 0038 00       		.byte	0
 3707 0039 03       		.uleb128 0x3
 3708 003a 0E       		.uleb128 0xe
 3709 003b 3A       		.uleb128 0x3a
 3710 003c 0B       		.uleb128 0xb
 3711 003d 3B       		.uleb128 0x3b
 3712 003e 05       		.uleb128 0x5
 3713 003f 49       		.uleb128 0x49
 3714 0040 13       		.uleb128 0x13
 3715 0041 00       		.byte	0
 3716 0042 00       		.byte	0
 3717 0043 06       		.uleb128 0x6
 3718 0044 0F       		.uleb128 0xf
 3719 0045 00       		.byte	0
 3720 0046 0B       		.uleb128 0xb
 3721 0047 0B       		.uleb128 0xb
 3722 0048 49       		.uleb128 0x49
 3723 0049 13       		.uleb128 0x13
 3724 004a 00       		.byte	0
 3725 004b 00       		.byte	0
 3726 004c 07       		.uleb128 0x7
 3727 004d 01       		.uleb128 0x1
 3728 004e 01       		.byte	0x1
 3729 004f 49       		.uleb128 0x49
 3730 0050 13       		.uleb128 0x13
 3731 0051 01       		.uleb128 0x1
 3732 0052 13       		.uleb128 0x13
 3733 0053 00       		.byte	0
 3734 0054 00       		.byte	0
 3735 0055 08       		.uleb128 0x8
 3736 0056 21       		.uleb128 0x21
 3737 0057 00       		.byte	0
 3738 0058 49       		.uleb128 0x49
 3739 0059 13       		.uleb128 0x13
 3740 005a 2F       		.uleb128 0x2f
 3741 005b 0B       		.uleb128 0xb
 3742 005c 00       		.byte	0
 3743 005d 00       		.byte	0
 3744 005e 09       		.uleb128 0x9
 3745 005f 13       		.uleb128 0x13
 3746 0060 01       		.byte	0x1
 3747 0061 0B       		.uleb128 0xb
 3748 0062 0B       		.uleb128 0xb
 3749 0063 3A       		.uleb128 0x3a
 3750 0064 0B       		.uleb128 0xb
 3751 0065 3B       		.uleb128 0x3b
 3752 0066 0B       		.uleb128 0xb
 3753 0067 01       		.uleb128 0x1
 3754 0068 13       		.uleb128 0x13
 3755 0069 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 82


 3756 006a 00       		.byte	0
 3757 006b 0A       		.uleb128 0xa
 3758 006c 0D       		.uleb128 0xd
 3759 006d 00       		.byte	0
 3760 006e 03       		.uleb128 0x3
 3761 006f 08       		.uleb128 0x8
 3762 0070 3A       		.uleb128 0x3a
 3763 0071 0B       		.uleb128 0xb
 3764 0072 3B       		.uleb128 0x3b
 3765 0073 0B       		.uleb128 0xb
 3766 0074 49       		.uleb128 0x49
 3767 0075 13       		.uleb128 0x13
 3768 0076 38       		.uleb128 0x38
 3769 0077 0B       		.uleb128 0xb
 3770 0078 00       		.byte	0
 3771 0079 00       		.byte	0
 3772 007a 0B       		.uleb128 0xb
 3773 007b 0D       		.uleb128 0xd
 3774 007c 00       		.byte	0
 3775 007d 03       		.uleb128 0x3
 3776 007e 0E       		.uleb128 0xe
 3777 007f 3A       		.uleb128 0x3a
 3778 0080 0B       		.uleb128 0xb
 3779 0081 3B       		.uleb128 0x3b
 3780 0082 0B       		.uleb128 0xb
 3781 0083 49       		.uleb128 0x49
 3782 0084 13       		.uleb128 0x13
 3783 0085 38       		.uleb128 0x38
 3784 0086 0B       		.uleb128 0xb
 3785 0087 00       		.byte	0
 3786 0088 00       		.byte	0
 3787 0089 0C       		.uleb128 0xc
 3788 008a 35       		.uleb128 0x35
 3789 008b 00       		.byte	0
 3790 008c 49       		.uleb128 0x49
 3791 008d 13       		.uleb128 0x13
 3792 008e 00       		.byte	0
 3793 008f 00       		.byte	0
 3794 0090 0D       		.uleb128 0xd
 3795 0091 13       		.uleb128 0x13
 3796 0092 01       		.byte	0x1
 3797 0093 0B       		.uleb128 0xb
 3798 0094 05       		.uleb128 0x5
 3799 0095 3A       		.uleb128 0x3a
 3800 0096 0B       		.uleb128 0xb
 3801 0097 3B       		.uleb128 0x3b
 3802 0098 0B       		.uleb128 0xb
 3803 0099 01       		.uleb128 0x1
 3804 009a 13       		.uleb128 0x13
 3805 009b 00       		.byte	0
 3806 009c 00       		.byte	0
 3807 009d 0E       		.uleb128 0xe
 3808 009e 13       		.uleb128 0x13
 3809 009f 01       		.byte	0x1
 3810 00a0 03       		.uleb128 0x3
 3811 00a1 08       		.uleb128 0x8
 3812 00a2 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 83


 3813 00a3 0B       		.uleb128 0xb
 3814 00a4 3A       		.uleb128 0x3a
 3815 00a5 0B       		.uleb128 0xb
 3816 00a6 3B       		.uleb128 0x3b
 3817 00a7 0B       		.uleb128 0xb
 3818 00a8 01       		.uleb128 0x1
 3819 00a9 13       		.uleb128 0x13
 3820 00aa 00       		.byte	0
 3821 00ab 00       		.byte	0
 3822 00ac 0F       		.uleb128 0xf
 3823 00ad 2E       		.uleb128 0x2e
 3824 00ae 00       		.byte	0
 3825 00af 3F       		.uleb128 0x3f
 3826 00b0 19       		.uleb128 0x19
 3827 00b1 03       		.uleb128 0x3
 3828 00b2 0E       		.uleb128 0xe
 3829 00b3 3A       		.uleb128 0x3a
 3830 00b4 0B       		.uleb128 0xb
 3831 00b5 3B       		.uleb128 0x3b
 3832 00b6 0B       		.uleb128 0xb
 3833 00b7 27       		.uleb128 0x27
 3834 00b8 19       		.uleb128 0x19
 3835 00b9 11       		.uleb128 0x11
 3836 00ba 01       		.uleb128 0x1
 3837 00bb 12       		.uleb128 0x12
 3838 00bc 06       		.uleb128 0x6
 3839 00bd 40       		.uleb128 0x40
 3840 00be 18       		.uleb128 0x18
 3841 00bf 9642     		.uleb128 0x2116
 3842 00c1 19       		.uleb128 0x19
 3843 00c2 00       		.byte	0
 3844 00c3 00       		.byte	0
 3845 00c4 10       		.uleb128 0x10
 3846 00c5 2E       		.uleb128 0x2e
 3847 00c6 01       		.byte	0x1
 3848 00c7 3F       		.uleb128 0x3f
 3849 00c8 19       		.uleb128 0x19
 3850 00c9 03       		.uleb128 0x3
 3851 00ca 0E       		.uleb128 0xe
 3852 00cb 3A       		.uleb128 0x3a
 3853 00cc 0B       		.uleb128 0xb
 3854 00cd 3B       		.uleb128 0x3b
 3855 00ce 0B       		.uleb128 0xb
 3856 00cf 11       		.uleb128 0x11
 3857 00d0 01       		.uleb128 0x1
 3858 00d1 12       		.uleb128 0x12
 3859 00d2 06       		.uleb128 0x6
 3860 00d3 40       		.uleb128 0x40
 3861 00d4 18       		.uleb128 0x18
 3862 00d5 9642     		.uleb128 0x2116
 3863 00d7 19       		.uleb128 0x19
 3864 00d8 01       		.uleb128 0x1
 3865 00d9 13       		.uleb128 0x13
 3866 00da 00       		.byte	0
 3867 00db 00       		.byte	0
 3868 00dc 11       		.uleb128 0x11
 3869 00dd 34       		.uleb128 0x34
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 84


 3870 00de 00       		.byte	0
 3871 00df 03       		.uleb128 0x3
 3872 00e0 0E       		.uleb128 0xe
 3873 00e1 3A       		.uleb128 0x3a
 3874 00e2 0B       		.uleb128 0xb
 3875 00e3 3B       		.uleb128 0x3b
 3876 00e4 0B       		.uleb128 0xb
 3877 00e5 49       		.uleb128 0x49
 3878 00e6 13       		.uleb128 0x13
 3879 00e7 02       		.uleb128 0x2
 3880 00e8 18       		.uleb128 0x18
 3881 00e9 00       		.byte	0
 3882 00ea 00       		.byte	0
 3883 00eb 12       		.uleb128 0x12
 3884 00ec 2E       		.uleb128 0x2e
 3885 00ed 01       		.byte	0x1
 3886 00ee 3F       		.uleb128 0x3f
 3887 00ef 19       		.uleb128 0x19
 3888 00f0 03       		.uleb128 0x3
 3889 00f1 0E       		.uleb128 0xe
 3890 00f2 3A       		.uleb128 0x3a
 3891 00f3 0B       		.uleb128 0xb
 3892 00f4 3B       		.uleb128 0x3b
 3893 00f5 0B       		.uleb128 0xb
 3894 00f6 49       		.uleb128 0x49
 3895 00f7 13       		.uleb128 0x13
 3896 00f8 11       		.uleb128 0x11
 3897 00f9 01       		.uleb128 0x1
 3898 00fa 12       		.uleb128 0x12
 3899 00fb 06       		.uleb128 0x6
 3900 00fc 40       		.uleb128 0x40
 3901 00fd 18       		.uleb128 0x18
 3902 00fe 9642     		.uleb128 0x2116
 3903 0100 19       		.uleb128 0x19
 3904 0101 01       		.uleb128 0x1
 3905 0102 13       		.uleb128 0x13
 3906 0103 00       		.byte	0
 3907 0104 00       		.byte	0
 3908 0105 13       		.uleb128 0x13
 3909 0106 2E       		.uleb128 0x2e
 3910 0107 00       		.byte	0
 3911 0108 3F       		.uleb128 0x3f
 3912 0109 19       		.uleb128 0x19
 3913 010a 03       		.uleb128 0x3
 3914 010b 0E       		.uleb128 0xe
 3915 010c 3A       		.uleb128 0x3a
 3916 010d 0B       		.uleb128 0xb
 3917 010e 3B       		.uleb128 0x3b
 3918 010f 0B       		.uleb128 0xb
 3919 0110 11       		.uleb128 0x11
 3920 0111 01       		.uleb128 0x1
 3921 0112 12       		.uleb128 0x12
 3922 0113 06       		.uleb128 0x6
 3923 0114 40       		.uleb128 0x40
 3924 0115 18       		.uleb128 0x18
 3925 0116 9642     		.uleb128 0x2116
 3926 0118 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 85


 3927 0119 00       		.byte	0
 3928 011a 00       		.byte	0
 3929 011b 14       		.uleb128 0x14
 3930 011c 2E       		.uleb128 0x2e
 3931 011d 01       		.byte	0x1
 3932 011e 3F       		.uleb128 0x3f
 3933 011f 19       		.uleb128 0x19
 3934 0120 03       		.uleb128 0x3
 3935 0121 0E       		.uleb128 0xe
 3936 0122 3A       		.uleb128 0x3a
 3937 0123 0B       		.uleb128 0xb
 3938 0124 3B       		.uleb128 0x3b
 3939 0125 0B       		.uleb128 0xb
 3940 0126 27       		.uleb128 0x27
 3941 0127 19       		.uleb128 0x19
 3942 0128 11       		.uleb128 0x11
 3943 0129 01       		.uleb128 0x1
 3944 012a 12       		.uleb128 0x12
 3945 012b 06       		.uleb128 0x6
 3946 012c 40       		.uleb128 0x40
 3947 012d 18       		.uleb128 0x18
 3948 012e 9642     		.uleb128 0x2116
 3949 0130 19       		.uleb128 0x19
 3950 0131 01       		.uleb128 0x1
 3951 0132 13       		.uleb128 0x13
 3952 0133 00       		.byte	0
 3953 0134 00       		.byte	0
 3954 0135 15       		.uleb128 0x15
 3955 0136 05       		.uleb128 0x5
 3956 0137 00       		.byte	0
 3957 0138 03       		.uleb128 0x3
 3958 0139 0E       		.uleb128 0xe
 3959 013a 3A       		.uleb128 0x3a
 3960 013b 0B       		.uleb128 0xb
 3961 013c 3B       		.uleb128 0x3b
 3962 013d 0B       		.uleb128 0xb
 3963 013e 49       		.uleb128 0x49
 3964 013f 13       		.uleb128 0x13
 3965 0140 02       		.uleb128 0x2
 3966 0141 18       		.uleb128 0x18
 3967 0142 00       		.byte	0
 3968 0143 00       		.byte	0
 3969 0144 16       		.uleb128 0x16
 3970 0145 2E       		.uleb128 0x2e
 3971 0146 01       		.byte	0x1
 3972 0147 3F       		.uleb128 0x3f
 3973 0148 19       		.uleb128 0x19
 3974 0149 03       		.uleb128 0x3
 3975 014a 0E       		.uleb128 0xe
 3976 014b 3A       		.uleb128 0x3a
 3977 014c 0B       		.uleb128 0xb
 3978 014d 3B       		.uleb128 0x3b
 3979 014e 0B       		.uleb128 0xb
 3980 014f 27       		.uleb128 0x27
 3981 0150 19       		.uleb128 0x19
 3982 0151 49       		.uleb128 0x49
 3983 0152 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 86


 3984 0153 11       		.uleb128 0x11
 3985 0154 01       		.uleb128 0x1
 3986 0155 12       		.uleb128 0x12
 3987 0156 06       		.uleb128 0x6
 3988 0157 40       		.uleb128 0x40
 3989 0158 18       		.uleb128 0x18
 3990 0159 9642     		.uleb128 0x2116
 3991 015b 19       		.uleb128 0x19
 3992 015c 01       		.uleb128 0x1
 3993 015d 13       		.uleb128 0x13
 3994 015e 00       		.byte	0
 3995 015f 00       		.byte	0
 3996 0160 17       		.uleb128 0x17
 3997 0161 2E       		.uleb128 0x2e
 3998 0162 01       		.byte	0x1
 3999 0163 3F       		.uleb128 0x3f
 4000 0164 19       		.uleb128 0x19
 4001 0165 03       		.uleb128 0x3
 4002 0166 0E       		.uleb128 0xe
 4003 0167 3A       		.uleb128 0x3a
 4004 0168 0B       		.uleb128 0xb
 4005 0169 3B       		.uleb128 0x3b
 4006 016a 0B       		.uleb128 0xb
 4007 016b 27       		.uleb128 0x27
 4008 016c 19       		.uleb128 0x19
 4009 016d 11       		.uleb128 0x11
 4010 016e 01       		.uleb128 0x1
 4011 016f 12       		.uleb128 0x12
 4012 0170 06       		.uleb128 0x6
 4013 0171 40       		.uleb128 0x40
 4014 0172 18       		.uleb128 0x18
 4015 0173 9742     		.uleb128 0x2117
 4016 0175 19       		.uleb128 0x19
 4017 0176 01       		.uleb128 0x1
 4018 0177 13       		.uleb128 0x13
 4019 0178 00       		.byte	0
 4020 0179 00       		.byte	0
 4021 017a 18       		.uleb128 0x18
 4022 017b 2E       		.uleb128 0x2e
 4023 017c 01       		.byte	0x1
 4024 017d 3F       		.uleb128 0x3f
 4025 017e 19       		.uleb128 0x19
 4026 017f 03       		.uleb128 0x3
 4027 0180 0E       		.uleb128 0xe
 4028 0181 3A       		.uleb128 0x3a
 4029 0182 0B       		.uleb128 0xb
 4030 0183 3B       		.uleb128 0x3b
 4031 0184 0B       		.uleb128 0xb
 4032 0185 27       		.uleb128 0x27
 4033 0186 19       		.uleb128 0x19
 4034 0187 49       		.uleb128 0x49
 4035 0188 13       		.uleb128 0x13
 4036 0189 11       		.uleb128 0x11
 4037 018a 01       		.uleb128 0x1
 4038 018b 12       		.uleb128 0x12
 4039 018c 06       		.uleb128 0x6
 4040 018d 40       		.uleb128 0x40
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 87


 4041 018e 18       		.uleb128 0x18
 4042 018f 9742     		.uleb128 0x2117
 4043 0191 19       		.uleb128 0x19
 4044 0192 01       		.uleb128 0x1
 4045 0193 13       		.uleb128 0x13
 4046 0194 00       		.byte	0
 4047 0195 00       		.byte	0
 4048 0196 19       		.uleb128 0x19
 4049 0197 2E       		.uleb128 0x2e
 4050 0198 01       		.byte	0x1
 4051 0199 3F       		.uleb128 0x3f
 4052 019a 19       		.uleb128 0x19
 4053 019b 03       		.uleb128 0x3
 4054 019c 0E       		.uleb128 0xe
 4055 019d 3A       		.uleb128 0x3a
 4056 019e 0B       		.uleb128 0xb
 4057 019f 3B       		.uleb128 0x3b
 4058 01a0 05       		.uleb128 0x5
 4059 01a1 11       		.uleb128 0x11
 4060 01a2 01       		.uleb128 0x1
 4061 01a3 12       		.uleb128 0x12
 4062 01a4 06       		.uleb128 0x6
 4063 01a5 40       		.uleb128 0x40
 4064 01a6 18       		.uleb128 0x18
 4065 01a7 9642     		.uleb128 0x2116
 4066 01a9 19       		.uleb128 0x19
 4067 01aa 01       		.uleb128 0x1
 4068 01ab 13       		.uleb128 0x13
 4069 01ac 00       		.byte	0
 4070 01ad 00       		.byte	0
 4071 01ae 1A       		.uleb128 0x1a
 4072 01af 34       		.uleb128 0x34
 4073 01b0 00       		.byte	0
 4074 01b1 03       		.uleb128 0x3
 4075 01b2 0E       		.uleb128 0xe
 4076 01b3 3A       		.uleb128 0x3a
 4077 01b4 0B       		.uleb128 0xb
 4078 01b5 3B       		.uleb128 0x3b
 4079 01b6 05       		.uleb128 0x5
 4080 01b7 49       		.uleb128 0x49
 4081 01b8 13       		.uleb128 0x13
 4082 01b9 02       		.uleb128 0x2
 4083 01ba 18       		.uleb128 0x18
 4084 01bb 00       		.byte	0
 4085 01bc 00       		.byte	0
 4086 01bd 1B       		.uleb128 0x1b
 4087 01be 2E       		.uleb128 0x2e
 4088 01bf 00       		.byte	0
 4089 01c0 3F       		.uleb128 0x3f
 4090 01c1 19       		.uleb128 0x19
 4091 01c2 03       		.uleb128 0x3
 4092 01c3 0E       		.uleb128 0xe
 4093 01c4 3A       		.uleb128 0x3a
 4094 01c5 0B       		.uleb128 0xb
 4095 01c6 3B       		.uleb128 0x3b
 4096 01c7 05       		.uleb128 0x5
 4097 01c8 27       		.uleb128 0x27
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 88


 4098 01c9 19       		.uleb128 0x19
 4099 01ca 49       		.uleb128 0x49
 4100 01cb 13       		.uleb128 0x13
 4101 01cc 11       		.uleb128 0x11
 4102 01cd 01       		.uleb128 0x1
 4103 01ce 12       		.uleb128 0x12
 4104 01cf 06       		.uleb128 0x6
 4105 01d0 40       		.uleb128 0x40
 4106 01d1 18       		.uleb128 0x18
 4107 01d2 9642     		.uleb128 0x2116
 4108 01d4 19       		.uleb128 0x19
 4109 01d5 00       		.byte	0
 4110 01d6 00       		.byte	0
 4111 01d7 1C       		.uleb128 0x1c
 4112 01d8 2E       		.uleb128 0x2e
 4113 01d9 01       		.byte	0x1
 4114 01da 3F       		.uleb128 0x3f
 4115 01db 19       		.uleb128 0x19
 4116 01dc 03       		.uleb128 0x3
 4117 01dd 0E       		.uleb128 0xe
 4118 01de 3A       		.uleb128 0x3a
 4119 01df 0B       		.uleb128 0xb
 4120 01e0 3B       		.uleb128 0x3b
 4121 01e1 05       		.uleb128 0x5
 4122 01e2 49       		.uleb128 0x49
 4123 01e3 13       		.uleb128 0x13
 4124 01e4 11       		.uleb128 0x11
 4125 01e5 01       		.uleb128 0x1
 4126 01e6 12       		.uleb128 0x12
 4127 01e7 06       		.uleb128 0x6
 4128 01e8 40       		.uleb128 0x40
 4129 01e9 18       		.uleb128 0x18
 4130 01ea 9642     		.uleb128 0x2116
 4131 01ec 19       		.uleb128 0x19
 4132 01ed 01       		.uleb128 0x1
 4133 01ee 13       		.uleb128 0x13
 4134 01ef 00       		.byte	0
 4135 01f0 00       		.byte	0
 4136 01f1 1D       		.uleb128 0x1d
 4137 01f2 0B       		.uleb128 0xb
 4138 01f3 01       		.byte	0x1
 4139 01f4 11       		.uleb128 0x11
 4140 01f5 01       		.uleb128 0x1
 4141 01f6 12       		.uleb128 0x12
 4142 01f7 06       		.uleb128 0x6
 4143 01f8 00       		.byte	0
 4144 01f9 00       		.byte	0
 4145 01fa 1E       		.uleb128 0x1e
 4146 01fb 0B       		.uleb128 0xb
 4147 01fc 01       		.byte	0x1
 4148 01fd 11       		.uleb128 0x11
 4149 01fe 01       		.uleb128 0x1
 4150 01ff 12       		.uleb128 0x12
 4151 0200 06       		.uleb128 0x6
 4152 0201 01       		.uleb128 0x1
 4153 0202 13       		.uleb128 0x13
 4154 0203 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 89


 4155 0204 00       		.byte	0
 4156 0205 1F       		.uleb128 0x1f
 4157 0206 21       		.uleb128 0x21
 4158 0207 00       		.byte	0
 4159 0208 49       		.uleb128 0x49
 4160 0209 13       		.uleb128 0x13
 4161 020a 2F       		.uleb128 0x2f
 4162 020b 05       		.uleb128 0x5
 4163 020c 00       		.byte	0
 4164 020d 00       		.byte	0
 4165 020e 20       		.uleb128 0x20
 4166 020f 2E       		.uleb128 0x2e
 4167 0210 01       		.byte	0x1
 4168 0211 3F       		.uleb128 0x3f
 4169 0212 19       		.uleb128 0x19
 4170 0213 03       		.uleb128 0x3
 4171 0214 0E       		.uleb128 0xe
 4172 0215 3A       		.uleb128 0x3a
 4173 0216 0B       		.uleb128 0xb
 4174 0217 3B       		.uleb128 0x3b
 4175 0218 05       		.uleb128 0x5
 4176 0219 27       		.uleb128 0x27
 4177 021a 19       		.uleb128 0x19
 4178 021b 49       		.uleb128 0x49
 4179 021c 13       		.uleb128 0x13
 4180 021d 11       		.uleb128 0x11
 4181 021e 01       		.uleb128 0x1
 4182 021f 12       		.uleb128 0x12
 4183 0220 06       		.uleb128 0x6
 4184 0221 40       		.uleb128 0x40
 4185 0222 18       		.uleb128 0x18
 4186 0223 9642     		.uleb128 0x2116
 4187 0225 19       		.uleb128 0x19
 4188 0226 01       		.uleb128 0x1
 4189 0227 13       		.uleb128 0x13
 4190 0228 00       		.byte	0
 4191 0229 00       		.byte	0
 4192 022a 21       		.uleb128 0x21
 4193 022b 05       		.uleb128 0x5
 4194 022c 00       		.byte	0
 4195 022d 03       		.uleb128 0x3
 4196 022e 0E       		.uleb128 0xe
 4197 022f 3A       		.uleb128 0x3a
 4198 0230 0B       		.uleb128 0xb
 4199 0231 3B       		.uleb128 0x3b
 4200 0232 05       		.uleb128 0x5
 4201 0233 49       		.uleb128 0x49
 4202 0234 13       		.uleb128 0x13
 4203 0235 02       		.uleb128 0x2
 4204 0236 18       		.uleb128 0x18
 4205 0237 00       		.byte	0
 4206 0238 00       		.byte	0
 4207 0239 22       		.uleb128 0x22
 4208 023a 34       		.uleb128 0x34
 4209 023b 00       		.byte	0
 4210 023c 03       		.uleb128 0x3
 4211 023d 08       		.uleb128 0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 90


 4212 023e 3A       		.uleb128 0x3a
 4213 023f 0B       		.uleb128 0xb
 4214 0240 3B       		.uleb128 0x3b
 4215 0241 05       		.uleb128 0x5
 4216 0242 49       		.uleb128 0x49
 4217 0243 13       		.uleb128 0x13
 4218 0244 02       		.uleb128 0x2
 4219 0245 18       		.uleb128 0x18
 4220 0246 00       		.byte	0
 4221 0247 00       		.byte	0
 4222 0248 23       		.uleb128 0x23
 4223 0249 34       		.uleb128 0x34
 4224 024a 00       		.byte	0
 4225 024b 03       		.uleb128 0x3
 4226 024c 0E       		.uleb128 0xe
 4227 024d 3A       		.uleb128 0x3a
 4228 024e 0B       		.uleb128 0xb
 4229 024f 3B       		.uleb128 0x3b
 4230 0250 05       		.uleb128 0x5
 4231 0251 49       		.uleb128 0x49
 4232 0252 13       		.uleb128 0x13
 4233 0253 3F       		.uleb128 0x3f
 4234 0254 19       		.uleb128 0x19
 4235 0255 3C       		.uleb128 0x3c
 4236 0256 19       		.uleb128 0x19
 4237 0257 00       		.byte	0
 4238 0258 00       		.byte	0
 4239 0259 24       		.uleb128 0x24
 4240 025a 34       		.uleb128 0x34
 4241 025b 00       		.byte	0
 4242 025c 03       		.uleb128 0x3
 4243 025d 0E       		.uleb128 0xe
 4244 025e 3A       		.uleb128 0x3a
 4245 025f 0B       		.uleb128 0xb
 4246 0260 3B       		.uleb128 0x3b
 4247 0261 0B       		.uleb128 0xb
 4248 0262 49       		.uleb128 0x49
 4249 0263 13       		.uleb128 0x13
 4250 0264 3F       		.uleb128 0x3f
 4251 0265 19       		.uleb128 0x19
 4252 0266 02       		.uleb128 0x2
 4253 0267 18       		.uleb128 0x18
 4254 0268 00       		.byte	0
 4255 0269 00       		.byte	0
 4256 026a 25       		.uleb128 0x25
 4257 026b 34       		.uleb128 0x34
 4258 026c 00       		.byte	0
 4259 026d 03       		.uleb128 0x3
 4260 026e 08       		.uleb128 0x8
 4261 026f 3A       		.uleb128 0x3a
 4262 0270 0B       		.uleb128 0xb
 4263 0271 3B       		.uleb128 0x3b
 4264 0272 0B       		.uleb128 0xb
 4265 0273 49       		.uleb128 0x49
 4266 0274 13       		.uleb128 0x13
 4267 0275 3F       		.uleb128 0x3f
 4268 0276 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 91


 4269 0277 02       		.uleb128 0x2
 4270 0278 18       		.uleb128 0x18
 4271 0279 00       		.byte	0
 4272 027a 00       		.byte	0
 4273 027b 00       		.byte	0
 4274              		.section	.debug_aranges,"",%progbits
 4275 0000 8C000000 		.4byte	0x8c
 4276 0004 0200     		.2byte	0x2
 4277 0006 00000000 		.4byte	.Ldebug_info0
 4278 000a 04       		.byte	0x4
 4279 000b 00       		.byte	0
 4280 000c 0000     		.2byte	0
 4281 000e 0000     		.2byte	0
 4282 0010 00000000 		.4byte	.LFB64
 4283 0014 0C000000 		.4byte	.LFE64-.LFB64
 4284 0018 00000000 		.4byte	.LFB65
 4285 001c 28010000 		.4byte	.LFE65-.LFB65
 4286 0020 00000000 		.4byte	.LFB66
 4287 0024 7C000000 		.4byte	.LFE66-.LFB66
 4288 0028 00000000 		.4byte	.LFB67
 4289 002c 2A000000 		.4byte	.LFE67-.LFB67
 4290 0030 00000000 		.4byte	.LFB68
 4291 0034 6C000000 		.4byte	.LFE68-.LFB68
 4292 0038 00000000 		.4byte	.LFB69
 4293 003c 48000000 		.4byte	.LFE69-.LFB69
 4294 0040 00000000 		.4byte	.LFB70
 4295 0044 1E000000 		.4byte	.LFE70-.LFB70
 4296 0048 00000000 		.4byte	.LFB71
 4297 004c 46000000 		.4byte	.LFE71-.LFB71
 4298 0050 00000000 		.4byte	.LFB72
 4299 0054 04010000 		.4byte	.LFE72-.LFB72
 4300 0058 00000000 		.4byte	.LFB73
 4301 005c 1E000000 		.4byte	.LFE73-.LFB73
 4302 0060 00000000 		.4byte	.LFB74
 4303 0064 5C040000 		.4byte	.LFE74-.LFB74
 4304 0068 00000000 		.4byte	.LFB75
 4305 006c 44000000 		.4byte	.LFE75-.LFB75
 4306 0070 00000000 		.4byte	.LFB76
 4307 0074 74020000 		.4byte	.LFE76-.LFB76
 4308 0078 00000000 		.4byte	.LFB77
 4309 007c 74000000 		.4byte	.LFE77-.LFB77
 4310 0080 00000000 		.4byte	.LFB78
 4311 0084 38010000 		.4byte	.LFE78-.LFB78
 4312 0088 00000000 		.4byte	0
 4313 008c 00000000 		.4byte	0
 4314              		.section	.debug_ranges,"",%progbits
 4315              	.Ldebug_ranges0:
 4316 0000 00000000 		.4byte	.LFB64
 4317 0004 0C000000 		.4byte	.LFE64
 4318 0008 00000000 		.4byte	.LFB65
 4319 000c 28010000 		.4byte	.LFE65
 4320 0010 00000000 		.4byte	.LFB66
 4321 0014 7C000000 		.4byte	.LFE66
 4322 0018 00000000 		.4byte	.LFB67
 4323 001c 2A000000 		.4byte	.LFE67
 4324 0020 00000000 		.4byte	.LFB68
 4325 0024 6C000000 		.4byte	.LFE68
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 92


 4326 0028 00000000 		.4byte	.LFB69
 4327 002c 48000000 		.4byte	.LFE69
 4328 0030 00000000 		.4byte	.LFB70
 4329 0034 1E000000 		.4byte	.LFE70
 4330 0038 00000000 		.4byte	.LFB71
 4331 003c 46000000 		.4byte	.LFE71
 4332 0040 00000000 		.4byte	.LFB72
 4333 0044 04010000 		.4byte	.LFE72
 4334 0048 00000000 		.4byte	.LFB73
 4335 004c 1E000000 		.4byte	.LFE73
 4336 0050 00000000 		.4byte	.LFB74
 4337 0054 5C040000 		.4byte	.LFE74
 4338 0058 00000000 		.4byte	.LFB75
 4339 005c 44000000 		.4byte	.LFE75
 4340 0060 00000000 		.4byte	.LFB76
 4341 0064 74020000 		.4byte	.LFE76
 4342 0068 00000000 		.4byte	.LFB77
 4343 006c 74000000 		.4byte	.LFE77
 4344 0070 00000000 		.4byte	.LFB78
 4345 0074 38010000 		.4byte	.LFE78
 4346 0078 00000000 		.4byte	0
 4347 007c 00000000 		.4byte	0
 4348              		.section	.debug_line,"",%progbits
 4349              	.Ldebug_line0:
 4350 0000 30040000 		.section	.debug_str,"MS",%progbits,1
 4350      02002802 
 4350      00000201 
 4350      FB0E0D00 
 4350      01010101 
 4351              	.LASF109:
 4352 0000 745F6D6F 		.ascii	"t_modem\000"
 4352      64656D00 
 4353              	.LASF12:
 4354 0008 75696E74 		.ascii	"uint16\000"
 4354      313600
 4355              	.LASF51:
 4356 000f 746D5F68 		.ascii	"tm_hour\000"
 4356      6F757200 
 4357              	.LASF36:
 4358 0017 6E756D5F 		.ascii	"num_invalid_readings\000"
 4358      696E7661 
 4358      6C69645F 
 4358      72656164 
 4358      696E6773 
 4359              	.LASF141:
 4360 002c 62756666 		.ascii	"buffer_overflow\000"
 4360      65725F6F 
 4360      76657266 
 4360      6C6F7700 
 4361              	.LASF139:
 4362 003c 66696C65 		.ascii	"fileName\000"
 4362      4E616D65 
 4362      00
 4363              	.LASF0:
 4364 0045 7369676E 		.ascii	"signed char\000"
 4364      65642063 
 4364      68617200 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 93


 4365              	.LASF83:
 4366 0051 636F756E 		.ascii	"countDownResetCondition\000"
 4366      74446F77 
 4366      6E526573 
 4366      6574436F 
 4366      6E646974 
 4367              	.LASF166:
 4368 0069 57616B65 		.ascii	"Wakeup_ISR\000"
 4368      75705F49 
 4368      535200
 4369              	.LASF163:
 4370 0074 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4370      43313120 
 4370      352E342E 
 4370      31203230 
 4370      31363036 
 4371 00a7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4371      20726576 
 4371      6973696F 
 4371      6E203233 
 4371      37373135 
 4372 00da 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4372      66756E63 
 4372      74696F6E 
 4372      2D736563 
 4372      74696F6E 
 4373              	.LASF107:
 4374 0102 745F7072 		.ascii	"t_pressure\000"
 4374      65737375 
 4374      726500
 4375              	.LASF26:
 4376 010d 4D6F6E74 		.ascii	"Month\000"
 4376      6800
 4377              	.LASF7:
 4378 0113 6C6F6E67 		.ascii	"long long unsigned int\000"
 4378      206C6F6E 
 4378      6720756E 
 4378      7369676E 
 4378      65642069 
 4379              	.LASF22:
 4380 012a 486F7572 		.ascii	"Hour\000"
 4380      00
 4381              	.LASF145:
 4382 012f 6D6F6465 		.ascii	"modem_state\000"
 4382      6D5F7374 
 4382      61746500 
 4383              	.LASF155:
 4384 013b 616C6172 		.ascii	"alarmMeasure\000"
 4384      6D4D6561 
 4384      73757265 
 4384      00
 4385              	.LASF140:
 4386 0148 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4386      52784275 
 4386      66666572 
 4386      00
 4387              	.LASF105:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 94


 4388 0155 745F6C65 		.ascii	"t_level_sensor\000"
 4388      76656C5F 
 4388      73656E73 
 4388      6F7200
 4389              	.LASF6:
 4390 0164 6C6F6E67 		.ascii	"long long int\000"
 4390      206C6F6E 
 4390      6720696E 
 4390      7400
 4391              	.LASF118:
 4392 0172 7061636B 		.ascii	"packets\000"
 4392      65747300 
 4393              	.LASF67:
 4394 017a 65636E6F 		.ascii	"ecno\000"
 4394      00
 4395              	.LASF156:
 4396 017f 74696D65 		.ascii	"timeToMeasure\000"
 4396      546F4D65 
 4396      61737572 
 4396      6500
 4397              	.LASF70:
 4398 018d 74696D65 		.ascii	"time_to_network_connect\000"
 4398      5F746F5F 
 4398      6E657477 
 4398      6F726B5F 
 4398      636F6E6E 
 4399              	.LASF158:
 4400 01a5 74696D65 		.ascii	"timeToSync\000"
 4400      546F5379 
 4400      6E6300
 4401              	.LASF39:
 4402 01b0 766F6C74 		.ascii	"voltage_solar\000"
 4402      6167655F 
 4402      736F6C61 
 4402      7200
 4403              	.LASF40:
 4404 01be 766F6C74 		.ascii	"voltage_charge_current\000"
 4404      6167655F 
 4404      63686172 
 4404      67655F63 
 4404      75727265 
 4405              	.LASF138:
 4406 01d5 75706772 		.ascii	"upgrade_status\000"
 4406      6164655F 
 4406      73746174 
 4406      757300
 4407              	.LASF121:
 4408 01e4 635F6461 		.ascii	"c_data_count_sent\000"
 4408      74615F63 
 4408      6F756E74 
 4408      5F73656E 
 4408      7400
 4409              	.LASF64:
 4410 01f6 6D6F6465 		.ascii	"modem_info_t\000"
 4410      6D5F696E 
 4410      666F5F74 
 4410      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 95


 4411              	.LASF65:
 4412 0203 72786C65 		.ascii	"rxlev\000"
 4412      7600
 4413              	.LASF4:
 4414 0209 6C6F6E67 		.ascii	"long int\000"
 4414      20696E74 
 4414      00
 4415              	.LASF71:
 4416 0212 74696D65 		.ascii	"time_to_acquire_ip\000"
 4416      5F746F5F 
 4416      61637175 
 4416      6972655F 
 4416      697000
 4417              	.LASF84:
 4418 0225 616C6172 		.ascii	"alarm\000"
 4418      6D00
 4419              	.LASF45:
 4420 022b 70726573 		.ascii	"pressure_voltage_off\000"
 4420      73757265 
 4420      5F766F6C 
 4420      74616765 
 4420      5F6F6666 
 4421              	.LASF11:
 4422 0240 75696E74 		.ascii	"uint8\000"
 4422      3800
 4423              	.LASF113:
 4424 0246 635F7472 		.ascii	"c_try_counter\000"
 4424      795F636F 
 4424      756E7465 
 4424      7200
 4425              	.LASF124:
 4426 0254 73656E64 		.ascii	"send_time\000"
 4426      5F74696D 
 4426      6500
 4427              	.LASF161:
 4428 025e 74696D65 		.ascii	"timeToAppLED\000"
 4428      546F4170 
 4428      704C4544 
 4428      00
 4429              	.LASF16:
 4430 026b 696E7433 		.ascii	"int32\000"
 4430      3200
 4431              	.LASF73:
 4432 0271 6E6F6465 		.ascii	"node_type\000"
 4432      5F747970 
 4432      6500
 4433              	.LASF110:
 4434 027b 73796E63 		.ascii	"syncData\000"
 4434      44617461 
 4434      00
 4435              	.LASF119:
 4436 0284 6E657477 		.ascii	"network_time\000"
 4436      6F726B5F 
 4436      74696D65 
 4436      00
 4437              	.LASF13:
 4438 0291 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 96


 4438      333200
 4439              	.LASF62:
 4440 0298 6D6F6465 		.ascii	"model_id\000"
 4440      6C5F6964 
 4440      00
 4441              	.LASF33:
 4442 02a1 616C6C5F 		.ascii	"all_level_readings\000"
 4442      6C657665 
 4442      6C5F7265 
 4442      6164696E 
 4442      677300
 4443              	.LASF80:
 4444 02b4 636F756E 		.ascii	"countDownValue\000"
 4444      74446F77 
 4444      6E56616C 
 4444      756500
 4445              	.LASF134:
 4446 02c3 75706772 		.ascii	"upgraded\000"
 4446      61646564 
 4446      00
 4447              	.LASF53:
 4448 02cc 746D5F6D 		.ascii	"tm_mon\000"
 4448      6F6E00
 4449              	.LASF77:
 4450 02d3 64656275 		.ascii	"debug_level\000"
 4450      675F6C65 
 4450      76656C00 
 4451              	.LASF136:
 4452 02df 706F7274 		.ascii	"port\000"
 4452      00
 4453              	.LASF165:
 4454 02e4 433A5C6E 		.ascii	"C:\\notoriOS\\notoriOS.cydsn\000"
 4454      6F746F72 
 4454      694F535C 
 4454      6E6F746F 
 4454      72694F53 
 4455              	.LASF58:
 4456 02ff 76616C75 		.ascii	"value\000"
 4456      6500
 4457              	.LASF135:
 4458 0305 686F7374 		.ascii	"host\000"
 4458      00
 4459              	.LASF54:
 4460 030a 746D5F79 		.ascii	"tm_year\000"
 4460      65617200 
 4461              	.LASF157:
 4462 0312 616C6172 		.ascii	"alarmSync\000"
 4462      6D53796E 
 4462      6300
 4463              	.LASF44:
 4464 031c 70726573 		.ascii	"pressure_voltage_on\000"
 4464      73757265 
 4464      5F766F6C 
 4464      74616765 
 4464      5F6F6E00 
 4465              	.LASF8:
 4466 0330 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 97


 4466      676E6564 
 4466      20696E74 
 4466      00
 4467              	.LASF132:
 4468 033d 73657454 		.ascii	"setTime\000"
 4468      696D6500 
 4469              	.LASF60:
 4470 0345 6B65795F 		.ascii	"key_value_t\000"
 4470      76616C75 
 4470      655F7400 
 4471              	.LASF95:
 4472 0351 41796F49 		.ascii	"AyoItsTime\000"
 4472      74735469 
 4472      6D6500
 4473              	.LASF35:
 4474 035c 6E756D5F 		.ascii	"num_valid_readings\000"
 4474      76616C69 
 4474      645F7265 
 4474      6164696E 
 4474      677300
 4475              	.LASF123:
 4476 036f 68747470 		.ascii	"http_chunk\000"
 4476      5F636875 
 4476      6E6B00
 4477              	.LASF129:
 4478 037a 6D5F766F 		.ascii	"m_voltage\000"
 4478      6C746167 
 4478      6500
 4479              	.LASF5:
 4480 0384 6C6F6E67 		.ascii	"long unsigned int\000"
 4480      20756E73 
 4480      69676E65 
 4480      6420696E 
 4480      7400
 4481              	.LASF92:
 4482 0396 7472795F 		.ascii	"try_counter\000"
 4482      636F756E 
 4482      74657200 
 4483              	.LASF114:
 4484 03a2 64617461 		.ascii	"data_count_desired\000"
 4484      5F636F75 
 4484      6E745F64 
 4484      65736972 
 4484      656400
 4485              	.LASF38:
 4486 03b5 766F6C74 		.ascii	"voltage_battery\000"
 4486      6167655F 
 4486      62617474 
 4486      65727900 
 4487              	.LASF24:
 4488 03c5 4461794F 		.ascii	"DayOfMonth\000"
 4488      664D6F6E 
 4488      746800
 4489              	.LASF127:
 4490 03d0 6D616B65 		.ascii	"makeMeasurements\000"
 4490      4D656173 
 4490      7572656D 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 98


 4490      656E7473 
 4490      00
 4491              	.LASF144:
 4492 03e1 64617461 		.ascii	"data\000"
 4492      00
 4493              	.LASF89:
 4494 03e6 65705F70 		.ascii	"ep_port\000"
 4494      6F727400 
 4495              	.LASF57:
 4496 03ee 746D5F69 		.ascii	"tm_isdst\000"
 4496      73647374 
 4496      00
 4497              	.LASF85:
 4498 03f7 6D6F6465 		.ascii	"modem_info\000"
 4498      6D5F696E 
 4498      666F00
 4499              	.LASF88:
 4500 0402 65705F68 		.ascii	"ep_host\000"
 4500      6F737400 
 4501              	.LASF14:
 4502 040a 696E7438 		.ascii	"int8\000"
 4502      00
 4503              	.LASF94:
 4504 040f 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 4504      576F726B 
 4504      576F726B 
 4504      576F726B 
 4504      576F726B 
 4505              	.LASF115:
 4506 0428 635F6461 		.ascii	"c_data_count_desired\000"
 4506      74615F63 
 4506      6F756E74 
 4506      5F646573 
 4506      69726564 
 4507              	.LASF108:
 4508 043d 745F7364 		.ascii	"t_sd_card\000"
 4508      5F636172 
 4508      6400
 4509              	.LASF2:
 4510 0447 73686F72 		.ascii	"short int\000"
 4510      7420696E 
 4510      7400
 4511              	.LASF160:
 4512 0451 616C6172 		.ascii	"alarmAppLED\000"
 4512      6D417070 
 4512      4C454400 
 4513              	.LASF146:
 4514 045d 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4514      6D5F7374 
 4514      6172745F 
 4514      74696D65 
 4514      5F737461 
 4515              	.LASF149:
 4516 0474 696E626F 		.ascii	"inbox\000"
 4516      7800
 4517              	.LASF87:
 4518 047a 7379735F 		.ascii	"sys_info_t\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 99


 4518      696E666F 
 4518      5F7400
 4519              	.LASF79:
 4520 0485 75706461 		.ascii	"updatable_parameters_t\000"
 4520      7461626C 
 4520      655F7061 
 4520      72616D65 
 4520      74657273 
 4521              	.LASF96:
 4522 049c 616C6172 		.ascii	"alarmType\000"
 4522      6D547970 
 4522      6500
 4523              	.LASF142:
 4524 04a6 64617461 		.ascii	"dataPointsInStack\000"
 4524      506F696E 
 4524      7473496E 
 4524      53746163 
 4524      6B00
 4525              	.LASF50:
 4526 04b8 746D5F6D 		.ascii	"tm_min\000"
 4526      696E00
 4527              	.LASF137:
 4528 04bf 726F7574 		.ascii	"route\000"
 4528      6500
 4529              	.LASF97:
 4530 04c5 616C6172 		.ascii	"alarmToBeUpdated\000"
 4530      6D546F42 
 4530      65557064 
 4530      61746564 
 4530      00
 4531              	.LASF21:
 4532 04d6 73697A65 		.ascii	"sizetype\000"
 4532      74797065 
 4532      00
 4533              	.LASF56:
 4534 04df 746D5F79 		.ascii	"tm_yday\000"
 4534      64617900 
 4535              	.LASF90:
 4536 04e7 7379735F 		.ascii	"sys_settings_t\000"
 4536      73657474 
 4536      696E6773 
 4536      5F7400
 4537              	.LASF133:
 4538 04f6 6C6F6361 		.ascii	"localTime\000"
 4538      6C54696D 
 4538      6500
 4539              	.LASF159:
 4540 0500 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 4540      546F5379 
 4540      636E5265 
 4540      6D6F7465 
 4540      50617261 
 4541              	.LASF59:
 4542 0517 74696D65 		.ascii	"timeStamp\000"
 4542      5374616D 
 4542      7000
 4543              	.LASF28:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 100


 4544 0521 5254435F 		.ascii	"RTC_TIME_DATE\000"
 4544      54494D45 
 4544      5F444154 
 4544      4500
 4545              	.LASF148:
 4546 052f 75706461 		.ascii	"updatable_parameters\000"
 4546      7461626C 
 4546      655F7061 
 4546      72616D65 
 4546      74657273 
 4547              	.LASF101:
 4548 0544 43726561 		.ascii	"CreateAlarm\000"
 4548      7465416C 
 4548      61726D00 
 4549              	.LASF122:
 4550 0550 7061636B 		.ascii	"packet\000"
 4550      657400
 4551              	.LASF111:
 4552 0557 735F7273 		.ascii	"s_rsrp\000"
 4552      727000
 4553              	.LASF41:
 4554 055e 766F6C74 		.ascii	"voltage_pressure\000"
 4554      6167655F 
 4554      70726573 
 4554      73757265 
 4554      00
 4555              	.LASF150:
 4556 056f 68747470 		.ascii	"http_request\000"
 4556      5F726571 
 4556      75657374 
 4556      00
 4557              	.LASF17:
 4558 057c 666C6F61 		.ascii	"float\000"
 4558      7400
 4559              	.LASF37:
 4560 0582 6C657665 		.ascii	"level_sensor_t\000"
 4560      6C5F7365 
 4560      6E736F72 
 4560      5F7400
 4561              	.LASF112:
 4562 0591 735F7273 		.ascii	"s_rscp\000"
 4562      637000
 4563              	.LASF126:
 4564 0598 636F6E66 		.ascii	"configureRemoteParams\000"
 4564      69677572 
 4564      6552656D 
 4564      6F746550 
 4564      6172616D 
 4565              	.LASF162:
 4566 05ae 44617461 		.ascii	"Data_fileName\000"
 4566      5F66696C 
 4566      654E616D 
 4566      6500
 4567              	.LASF93:
 4568 05bc 6D6F6465 		.ascii	"modem_status\000"
 4568      6D5F7374 
 4568      61747573 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 101


 4568      00
 4569              	.LASF29:
 4570 05c9 74657374 		.ascii	"test_name\000"
 4570      5F6E616D 
 4570      6500
 4571              	.LASF27:
 4572 05d3 59656172 		.ascii	"Year\000"
 4572      00
 4573              	.LASF78:
 4574 05d8 5F426F6F 		.ascii	"_Bool\000"
 4574      6C00
 4575              	.LASF10:
 4576 05de 696E7433 		.ascii	"int32_t\000"
 4576      325F7400 
 4577              	.LASF1:
 4578 05e6 756E7369 		.ascii	"unsigned char\000"
 4578      676E6564 
 4578      20636861 
 4578      7200
 4579              	.LASF154:
 4580 05f4 73797374 		.ascii	"system_settings\000"
 4580      656D5F73 
 4580      65747469 
 4580      6E677300 
 4581              	.LASF69:
 4582 0604 72737270 		.ascii	"rsrp\000"
 4582      00
 4583              	.LASF68:
 4584 0609 72737271 		.ascii	"rsrq\000"
 4584      00
 4585              	.LASF98:
 4586 060e 52657365 		.ascii	"ResetAlarm\000"
 4586      74416C61 
 4586      726D00
 4587              	.LASF125:
 4588 0619 735F7365 		.ascii	"s_send_time\000"
 4588      6E645F74 
 4588      696D6500 
 4589              	.LASF76:
 4590 0625 73796E63 		.ascii	"sync_time\000"
 4590      5F74696D 
 4590      6500
 4591              	.LASF47:
 4592 062f 70726573 		.ascii	"pressure_depth\000"
 4592      73757265 
 4592      5F646570 
 4592      746800
 4593              	.LASF66:
 4594 063e 72736370 		.ascii	"rscp\000"
 4594      00
 4595              	.LASF23:
 4596 0643 4461794F 		.ascii	"DayOfWeek\000"
 4596      66576565 
 4596      6B00
 4597              	.LASF32:
 4598 064d 74657374 		.ascii	"test_t\000"
 4598      5F7400
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 102


 4599              	.LASF153:
 4600 0654 73797374 		.ascii	"system_info\000"
 4600      656D5F69 
 4600      6E666F00 
 4601              	.LASF63:
 4602 0660 696D6569 		.ascii	"imei\000"
 4602      00
 4603              	.LASF31:
 4604 0665 72656173 		.ascii	"reason\000"
 4604      6F6E00
 4605              	.LASF99:
 4606 066c 616C6172 		.ascii	"alarmToBeReset\000"
 4606      6D546F42 
 4606      65526573 
 4606      657400
 4607              	.LASF104:
 4608 067b 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 4608      6B697479 
 4608      43686563 
 4608      6B596F75 
 4608      7273656C 
 4609              	.LASF120:
 4610 06a7 64617461 		.ascii	"data_count_sent\000"
 4610      5F636F75 
 4610      6E745F73 
 4610      656E7400 
 4611              	.LASF72:
 4612 06b7 6D6F6465 		.ascii	"modem_stats_t\000"
 4612      6D5F7374 
 4612      6174735F 
 4612      7400
 4613              	.LASF46:
 4614 06c5 70726573 		.ascii	"pressure_current\000"
 4614      73757265 
 4614      5F637572 
 4614      72656E74 
 4614      00
 4615              	.LASF42:
 4616 06d6 76616C69 		.ascii	"valid\000"
 4616      6400
 4617              	.LASF55:
 4618 06dc 746D5F77 		.ascii	"tm_wday\000"
 4618      64617900 
 4619              	.LASF20:
 4620 06e4 6C6F6E67 		.ascii	"long double\000"
 4620      20646F75 
 4620      626C6500 
 4621              	.LASF117:
 4622 06f0 6368756E 		.ascii	"chunk\000"
 4622      6B00
 4623              	.LASF128:
 4624 06f6 635F7469 		.ascii	"c_timeStamp\000"
 4624      6D655374 
 4624      616D7000 
 4625              	.LASF19:
 4626 0702 63686172 		.ascii	"char\000"
 4626      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 103


 4627              	.LASF147:
 4628 0707 6D6F6465 		.ascii	"modem_stats\000"
 4628      6D5F7374 
 4628      61747300 
 4629              	.LASF152:
 4630 0713 68747470 		.ascii	"http_route\000"
 4630      5F726F75 
 4630      746500
 4631              	.LASF116:
 4632 071e 706F7274 		.ascii	"portConfig\000"
 4632      436F6E66 
 4632      696700
 4633              	.LASF9:
 4634 0729 5F5F696E 		.ascii	"__int32_t\000"
 4634      7433325F 
 4634      7400
 4635              	.LASF91:
 4636 0733 756E6971 		.ascii	"uniqueId\000"
 4636      75654964 
 4636      00
 4637              	.LASF130:
 4638 073c 6D5F6C65 		.ascii	"m_level_sensor\000"
 4638      76656C5F 
 4638      73656E73 
 4638      6F7200
 4639              	.LASF34:
 4640 074b 6C657665 		.ascii	"level_reading\000"
 4640      6C5F7265 
 4640      6164696E 
 4640      6700
 4641              	.LASF167:
 4642 0759 4C617942 		.ascii	"LayBack\000"
 4642      61636B00 
 4643              	.LASF3:
 4644 0761 73686F72 		.ascii	"short unsigned int\000"
 4644      7420756E 
 4644      7369676E 
 4644      65642069 
 4644      6E7400
 4645              	.LASF61:
 4646 0774 73696D5F 		.ascii	"sim_id\000"
 4646      696400
 4647              	.LASF52:
 4648 077b 746D5F6D 		.ascii	"tm_mday\000"
 4648      64617900 
 4649              	.LASF102:
 4650 0783 6E657741 		.ascii	"newAlarm\000"
 4650      6C61726D 
 4650      00
 4651              	.LASF49:
 4652 078c 746D5F73 		.ascii	"tm_sec\000"
 4652      656300
 4653              	.LASF131:
 4654 0793 6D5F7072 		.ascii	"m_pressure\000"
 4654      65737375 
 4654      726500
 4655              	.LASF30:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 104


 4656 079e 73746174 		.ascii	"status\000"
 4656      757300
 4657              	.LASF143:
 4658 07a5 64617461 		.ascii	"dataPointsInStackDesired\000"
 4658      506F696E 
 4658      7473496E 
 4658      53746163 
 4658      6B446573 
 4659              	.LASF106:
 4660 07be 745F766F 		.ascii	"t_voltages\000"
 4660      6C746167 
 4660      657300
 4661              	.LASF164:
 4662 07c9 6E6F746F 		.ascii	"notoriOS.c\000"
 4662      72694F53 
 4662      2E6300
 4663              	.LASF151:
 4664 07d4 68747470 		.ascii	"http_body\000"
 4664      5F626F64 
 4664      7900
 4665              	.LASF15:
 4666 07de 696E7431 		.ascii	"int16\000"
 4666      3600
 4667              	.LASF82:
 4668 07e4 636F756E 		.ascii	"countDownType\000"
 4668      74446F77 
 4668      6E547970 
 4668      6500
 4669              	.LASF81:
 4670 07f2 63757272 		.ascii	"currentCountDownValue\000"
 4670      656E7443 
 4670      6F756E74 
 4670      446F776E 
 4670      56616C75 
 4671              	.LASF74:
 4672 0808 73696D5F 		.ascii	"sim_type\000"
 4672      74797065 
 4672      00
 4673              	.LASF25:
 4674 0811 4461794F 		.ascii	"DayOfYear\000"
 4674      66596561 
 4674      7200
 4675              	.LASF48:
 4676 081b 70726573 		.ascii	"pressure_t\000"
 4676      73757265 
 4676      5F7400
 4677              	.LASF100:
 4678 0826 416C6172 		.ascii	"AlarmReady\000"
 4678      6D526561 
 4678      647900
 4679              	.LASF103:
 4680 0831 52656164 		.ascii	"ReadyOrNot\000"
 4680      794F724E 
 4680      6F7400
 4681              	.LASF168:
 4682 083c 6D61696E 		.ascii	"main\000"
 4682      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cceBvCVf.s 			page 105


 4683              	.LASF86:
 4684 0841 63686970 		.ascii	"chip_uniqueId\000"
 4684      5F756E69 
 4684      71756549 
 4684      6400
 4685              	.LASF75:
 4686 084f 6D656173 		.ascii	"measure_time\000"
 4686      7572655F 
 4686      74696D65 
 4686      00
 4687              	.LASF18:
 4688 085c 646F7562 		.ascii	"double\000"
 4688      6C6500
 4689              	.LASF43:
 4690 0863 766F6C74 		.ascii	"voltage_t\000"
 4690      6167655F 
 4690      7400
 4691              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
