ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.section	.text.Wakeup_ISR,"ax",%progbits
  44              		.align	2
  45              		.global	Wakeup_ISR
  46              		.thumb
  47              		.thumb_func
  48              		.type	Wakeup_ISR, %function
  49              	Wakeup_ISR:
  50              	.LFB64:
  51              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 2


   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  52              		.loc 1 20 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  62              		.loc 1 22 0
  63 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  64              		.loc 1 23 0
  65 0008 00BF     		nop
  66 000a 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE64:
  69              		.size	Wakeup_ISR, .-Wakeup_ISR
  70              		.global	Data_fileName
  71              		.data
  72              		.align	2
  73              		.type	Data_fileName, %object
  74              		.size	Data_fileName, 30
  75              	Data_fileName:
  76 0000 64617461 		.ascii	"data.txt\000"
  76      2E747874 
  76      00
  77 0009 00000000 		.space	21
  77      00000000 
  77      00000000 
  77      00000000 
  77      00000000 
  78              		.comm	try_counter,1,1
  79              		.section	.rodata
  80              		.align	2
  81              	.LC0:
  82 0000 25582D25 		.ascii	"%X-%X\000"
  82      5800
  83 0006 0000     		.align	2
  84              	.LC1:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 3


  85 0008 6563322D 		.ascii	"ec2-13-59-131-167.us-east-2.compute.amazonaws.com\000"
  85      31332D35 
  85      392D3133 
  85      312D3136 
  85      372E7573 
  86              		.section	.text.ReadyOrNot,"ax",%progbits
  87              		.align	2
  88              		.global	ReadyOrNot
  89              		.thumb
  90              		.thumb_func
  91              		.type	ReadyOrNot, %function
  92              	ReadyOrNot:
  93              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
  94              		.loc 1 41 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 24
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98 0000 B0B5     		push	{r4, r5, r7, lr}
  99              		.cfi_def_cfa_offset 16
 100              		.cfi_offset 4, -16
 101              		.cfi_offset 5, -12
 102              		.cfi_offset 7, -8
 103              		.cfi_offset 14, -4
 104 0002 88B0     		sub	sp, sp, #32
 105              		.cfi_def_cfa_offset 48
 106 0004 02AF     		add	r7, sp, #8
 107              		.cfi_def_cfa 7, 40
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 108              		.loc 1 43 0
 109 0006 2F48     		ldr	r0, .L3
 110 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 111              		.loc 1 44 0
 112 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 113              		.loc 1 46 0
 114 0010 FF20     		movs	r0, #255
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 4


 115 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 116              		.loc 1 47 0
 117 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 118              		.loc 1 48 0
 119 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 120              		.loc 1 50 0
 121 001e FFF7FEFF 		bl	modem_initialize
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 122              		.loc 1 52 0
 123 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  53:notoriOS.c    ****    
  54:notoriOS.c    ****     
  55:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  56:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  57:notoriOS.c    ****     
  58:notoriOS.c    ****     
  59:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  60:notoriOS.c    ****     uint32 uniqueId[2];
  61:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  62:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 124              		.loc 1 62 0
 125 0026 07F10C03 		add	r3, r7, #12
 126 002a 1846     		mov	r0, r3
 127 002c FFF7FEFF 		bl	CyGetUniqueId
  63:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 128              		.loc 1 63 0
 129 0030 FA68     		ldr	r2, [r7, #12]
 130 0032 3B69     		ldr	r3, [r7, #16]
 131 0034 0093     		str	r3, [sp]
 132 0036 1346     		mov	r3, r2
 133 0038 234A     		ldr	r2, .L3+4
 134 003a 1821     		movs	r1, #24
 135 003c 2348     		ldr	r0, .L3+8
 136 003e FFF7FEFF 		bl	snprintf
  64:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  65:notoriOS.c    ****     system_info.modem_info = &modem_info;
 137              		.loc 1 65 0
 138 0042 234B     		ldr	r3, .L3+12
 139 0044 234A     		ldr	r2, .L3+16
 140 0046 1A60     		str	r2, [r3]
  66:notoriOS.c    ****     
  67:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  68:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","ec2-13-59-131-167.us-eas
 141              		.loc 1 68 0
 142 0048 234A     		ldr	r2, .L3+20
 143 004a 244B     		ldr	r3, .L3+24
 144 004c 1446     		mov	r4, r2
 145 004e 1D46     		mov	r5, r3
 146 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 147 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 148 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 149 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 5


 150 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 151 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 152 005c 2B68     		ldr	r3, [r5]
 153 005e 2380     		strh	r3, [r4]	@ movhi
  69:notoriOS.c    ****    
  70:notoriOS.c    ****     system_settings.ep_port = 5000;
 154              		.loc 1 70 0
 155 0060 1D4B     		ldr	r3, .L3+20
 156 0062 41F28832 		movw	r2, #5000
 157 0066 5A66     		str	r2, [r3, #100]
  71:notoriOS.c    ****     // Don't need the following for new nodes
  72:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  73:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  74:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  75:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  76:notoriOS.c    ****         
  77:notoriOS.c    ****     
  78:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  79:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 158              		.loc 1 79 0
 159 0068 1D4B     		ldr	r3, .L3+28
 160 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 161 006c 99B2     		uxth	r1, r3
 162 006e 1D4C     		ldr	r4, .L3+32
 163 0070 3846     		mov	r0, r7
 164 0072 0723     		movs	r3, #7
 165 0074 0122     		movs	r2, #1
 166 0076 FFF7FEFF 		bl	CreateAlarm
 167 007a 2246     		mov	r2, r4
 168 007c 3B46     		mov	r3, r7
 169 007e 1968     		ldr	r1, [r3]	@ unaligned
 170 0080 1160     		str	r1, [r2]	@ unaligned
 171 0082 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 172 0084 9380     		strh	r3, [r2, #4]	@ unaligned
  80:notoriOS.c    ****     timeToMeasure = 1u;
 173              		.loc 1 80 0
 174 0086 184B     		ldr	r3, .L3+36
 175 0088 0122     		movs	r2, #1
 176 008a 1A70     		strb	r2, [r3]
  81:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  82:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 177              		.loc 1 82 0
 178 008c 144B     		ldr	r3, .L3+28
 179 008e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 180 0090 99B2     		uxth	r1, r3
 181 0092 164C     		ldr	r4, .L3+40
 182 0094 3846     		mov	r0, r7
 183 0096 0723     		movs	r3, #7
 184 0098 0122     		movs	r2, #1
 185 009a FFF7FEFF 		bl	CreateAlarm
 186 009e 2246     		mov	r2, r4
 187 00a0 3B46     		mov	r3, r7
 188 00a2 1968     		ldr	r1, [r3]	@ unaligned
 189 00a4 1160     		str	r1, [r2]	@ unaligned
 190 00a6 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 191 00a8 9380     		strh	r3, [r2, #4]	@ unaligned
  83:notoriOS.c    ****     timeToSync = 1u;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 6


 192              		.loc 1 83 0
 193 00aa 114B     		ldr	r3, .L3+44
 194 00ac 0122     		movs	r2, #1
 195 00ae 1A70     		strb	r2, [r3]
  84:notoriOS.c    ****     
  85:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 196              		.loc 1 85 0
 197 00b0 104B     		ldr	r3, .L3+48
 198 00b2 0022     		movs	r2, #0
 199 00b4 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     
  87:notoriOS.c    ****     // Initialize the try counter to 0
  88:notoriOS.c    ****     uint8 try_counter = 0;
 200              		.loc 1 88 0
 201 00b6 0023     		movs	r3, #0
 202 00b8 FB75     		strb	r3, [r7, #23]
  89:notoriOS.c    **** }
 203              		.loc 1 89 0
 204 00ba 00BF     		nop
 205 00bc 1837     		adds	r7, r7, #24
 206              		.cfi_def_cfa_offset 16
 207 00be BD46     		mov	sp, r7
 208              		.cfi_def_cfa_register 13
 209              		@ sp needed
 210 00c0 B0BD     		pop	{r4, r5, r7, pc}
 211              	.L4:
 212 00c2 00BF     		.align	2
 213              	.L3:
 214 00c4 00000000 		.word	Wakeup_ISR
 215 00c8 00000000 		.word	.LC0
 216 00cc 04000000 		.word	system_info+4
 217 00d0 00000000 		.word	system_info
 218 00d4 00000000 		.word	modem_info
 219 00d8 00000000 		.word	system_settings
 220 00dc 08000000 		.word	.LC1
 221 00e0 00000000 		.word	updatable_parameters
 222 00e4 00000000 		.word	alarmMeasure
 223 00e8 00000000 		.word	timeToMeasure
 224 00ec 00000000 		.word	alarmSync
 225 00f0 00000000 		.word	timeToSync
 226 00f4 00000000 		.word	timeToSycnRemoteParams
 227              		.cfi_endproc
 228              	.LFE65:
 229              		.size	ReadyOrNot, .-ReadyOrNot
 230              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 231              		.align	2
 232              		.global	WorkWorkWorkWorkWorkWork
 233              		.thumb
 234              		.thumb_func
 235              		.type	WorkWorkWorkWorkWorkWork, %function
 236              	WorkWorkWorkWorkWorkWork:
 237              	.LFB66:
  90:notoriOS.c    **** 
  91:notoriOS.c    **** 
  92:notoriOS.c    **** // ==============================================
  93:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
  94:notoriOS.c    **** //      - Rhiana, feat Drake (2016)
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 7


  95:notoriOS.c    **** //
  96:notoriOS.c    **** // Prorcesses core tasks
  97:notoriOS.c    **** // ==============================================
  98:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
  99:notoriOS.c    **** {
 238              		.loc 1 99 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 8
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242 0000 80B5     		push	{r7, lr}
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 7, -8
 245              		.cfi_offset 14, -4
 246 0002 82B0     		sub	sp, sp, #8
 247              		.cfi_def_cfa_offset 16
 248 0004 00AF     		add	r7, sp, #0
 249              		.cfi_def_cfa_register 7
 100:notoriOS.c    ****     
 101:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 102:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 103:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
 104:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 105:notoriOS.c    ****     
 106:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 107:notoriOS.c    ****     if(timeToSycnRemoteParams){
 250              		.loc 1 107 0
 251 0006 144B     		ldr	r3, .L10
 252 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 253 000a 002B     		cmp	r3, #0
 254 000c 06D0     		beq	.L6
 108:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
 255              		.loc 1 108 0
 256 000e FFF7FEFF 		bl	configureRemoteParams
 257 0012 0346     		mov	r3, r0
 258 0014 1A46     		mov	r2, r3
 259 0016 104B     		ldr	r3, .L10
 260 0018 1A70     		strb	r2, [r3]
 261 001a 14E0     		b	.L7
 262              	.L6:
 109:notoriOS.c    ****     }
 110:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 111:notoriOS.c    ****     else if(timeToMeasure){
 263              		.loc 1 111 0
 264 001c 0F4B     		ldr	r3, .L10+4
 265 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 266 0020 002B     		cmp	r3, #0
 267 0022 06D0     		beq	.L8
 112:notoriOS.c    ****         //(int i=0; i<=30; i++){
 113:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 268              		.loc 1 113 0
 269 0024 FFF7FEFF 		bl	makeMeasurements
 270 0028 0346     		mov	r3, r0
 271 002a 1A46     		mov	r2, r3
 272 002c 0B4B     		ldr	r3, .L10+4
 273 002e 1A70     		strb	r2, [r3]
 274 0030 09E0     		b	.L7
 275              	.L8:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 8


 114:notoriOS.c    ****         //CyDelay(1000u);
 115:notoriOS.c    ****         //}
 116:notoriOS.c    ****     }else if(timeToSync){
 276              		.loc 1 116 0
 277 0032 0B4B     		ldr	r3, .L10+8
 278 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 279 0036 002B     		cmp	r3, #0
 280 0038 05D0     		beq	.L7
 117:notoriOS.c    ****             timeToSync = syncData();
 281              		.loc 1 117 0
 282 003a FFF7FEFF 		bl	syncData
 283 003e 0346     		mov	r3, r0
 284 0040 1A46     		mov	r2, r3
 285 0042 074B     		ldr	r3, .L10+8
 286 0044 1A70     		strb	r2, [r3]
 287              	.L7:
 118:notoriOS.c    ****     }
 119:notoriOS.c    ****     // Print the countdown to the next alarm
 120:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 121:notoriOS.c    ****     
 122:notoriOS.c    ****     
 123:notoriOS.c    ****     // Check modem state machine on every loop
 124:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
 288              		.loc 1 124 0
 289 0046 FFF7FEFF 		bl	modem_process_tasks
 290 004a 0346     		mov	r3, r0
 291 004c FB71     		strb	r3, [r7, #7]
 125:notoriOS.c    **** 
 126:notoriOS.c    ****     return 0u +  modem_status;  
 292              		.loc 1 126 0
 293 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 127:notoriOS.c    **** }
 294              		.loc 1 127 0
 295 0050 1846     		mov	r0, r3
 296 0052 0837     		adds	r7, r7, #8
 297              		.cfi_def_cfa_offset 8
 298 0054 BD46     		mov	sp, r7
 299              		.cfi_def_cfa_register 13
 300              		@ sp needed
 301 0056 80BD     		pop	{r7, pc}
 302              	.L11:
 303              		.align	2
 304              	.L10:
 305 0058 00000000 		.word	timeToSycnRemoteParams
 306 005c 00000000 		.word	timeToMeasure
 307 0060 00000000 		.word	timeToSync
 308              		.cfi_endproc
 309              	.LFE66:
 310              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 311              		.section	.text.LayBack,"ax",%progbits
 312              		.align	2
 313              		.global	LayBack
 314              		.thumb
 315              		.thumb_func
 316              		.type	LayBack, %function
 317              	LayBack:
 318              	.LFB67:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 9


 128:notoriOS.c    **** 
 129:notoriOS.c    **** 
 130:notoriOS.c    **** 
 131:notoriOS.c    **** 
 132:notoriOS.c    **** 
 133:notoriOS.c    **** 
 134:notoriOS.c    **** // ==============================================
 135:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 136:notoriOS.c    **** //      - Snoop Dogg (1993)
 137:notoriOS.c    **** //
 138:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 139:notoriOS.c    **** // ==============================================
 140:notoriOS.c    **** void LayBack()
 141:notoriOS.c    **** {
 319              		.loc 1 141 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 1, uses_anonymous_args = 0
 323 0000 80B5     		push	{r7, lr}
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 7, -8
 326              		.cfi_offset 14, -4
 327 0002 00AF     		add	r7, sp, #0
 328              		.cfi_def_cfa_register 7
 142:notoriOS.c    ****   
 143:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 329              		.loc 1 143 0
 330 0004 FFF7FEFF 		bl	modem_sleep
 144:notoriOS.c    ****     
 145:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 146:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 331              		.loc 1 146 0
 332 0008 FFF7FEFF 		bl	debug_sleep
 147:notoriOS.c    ****     
 148:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 333              		.loc 1 148 0
 334 000c FFF7FEFF 		bl	CyPmSaveClocks
 149:notoriOS.c    ****     
 150:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 151:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 152:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 153:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 154:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 155:notoriOS.c    ****     //CyPmHibernate();
 156:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 157:notoriOS.c    **** 
 158:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 335              		.loc 1 158 0
 336 0010 4FF40061 		mov	r1, #2048
 337 0014 0020     		movs	r0, #0
 338 0016 FFF7FEFF 		bl	CyPmSleep
 159:notoriOS.c    **** 
 160:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 339              		.loc 1 160 0
 340 001a FFF7FEFF 		bl	CyPmRestoreClocks
 161:notoriOS.c    **** 
 162:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 10


 341              		.loc 1 162 0
 342 001e FFF7FEFF 		bl	debug_wakeup
 163:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 343              		.loc 1 163 0
 344 0022 FFF7FEFF 		bl	modem_wakeup
 164:notoriOS.c    **** 
 165:notoriOS.c    **** }
 345              		.loc 1 165 0
 346 0026 00BF     		nop
 347 0028 80BD     		pop	{r7, pc}
 348              		.cfi_endproc
 349              	.LFE67:
 350              		.size	LayBack, .-LayBack
 351 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 352              		.align	2
 353              		.global	AyoItsTime
 354              		.thumb
 355              		.thumb_func
 356              		.type	AyoItsTime, %function
 357              	AyoItsTime:
 358              	.LFB68:
 166:notoriOS.c    **** 
 167:notoriOS.c    **** 
 168:notoriOS.c    **** // ==============================================
 169:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 170:notoriOS.c    **** //      - NAS (1994)
 171:notoriOS.c    **** //
 172:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 173:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 174:notoriOS.c    **** // It will add tasks to the work queue,
 175:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 176:notoriOS.c    **** // ==============================================
 177:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 178:notoriOS.c    **** {
 359              		.loc 1 178 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 8
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363 0000 80B5     		push	{r7, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 7, -8
 366              		.cfi_offset 14, -4
 367 0002 82B0     		sub	sp, sp, #8
 368              		.cfi_def_cfa_offset 16
 369 0004 00AF     		add	r7, sp, #0
 370              		.cfi_def_cfa_register 7
 371 0006 0346     		mov	r3, r0
 372 0008 FB71     		strb	r3, [r7, #7]
 179:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 180:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 373              		.loc 1 180 0
 374 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 375 000c 1946     		mov	r1, r3
 376 000e 0C48     		ldr	r0, .L17
 377 0010 FFF7FEFF 		bl	AlarmReady
 378 0014 0346     		mov	r3, r0
 379 0016 002B     		cmp	r3, #0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 11


 380 0018 02D0     		beq	.L14
 181:notoriOS.c    ****     {
 182:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 183:notoriOS.c    ****         timeToMeasure = 1u;
 381              		.loc 1 183 0
 382 001a 0A4B     		ldr	r3, .L17+4
 383 001c 0122     		movs	r2, #1
 384 001e 1A70     		strb	r2, [r3]
 385              	.L14:
 184:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 185:notoriOS.c    ****         
 186:notoriOS.c    ****     }
 187:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 386              		.loc 1 187 0
 387 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 388 0022 1946     		mov	r1, r3
 389 0024 0848     		ldr	r0, .L17+8
 390 0026 FFF7FEFF 		bl	AlarmReady
 391 002a 0346     		mov	r3, r0
 392 002c 002B     		cmp	r3, #0
 393 002e 02D0     		beq	.L16
 188:notoriOS.c    ****     {
 189:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 190:notoriOS.c    ****         timeToSync = 1u;
 394              		.loc 1 190 0
 395 0030 064B     		ldr	r3, .L17+12
 396 0032 0122     		movs	r2, #1
 397 0034 1A70     		strb	r2, [r3]
 398              	.L16:
 191:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 192:notoriOS.c    ****     }
 193:notoriOS.c    ****     
 194:notoriOS.c    **** }
 399              		.loc 1 194 0
 400 0036 00BF     		nop
 401 0038 0837     		adds	r7, r7, #8
 402              		.cfi_def_cfa_offset 8
 403 003a BD46     		mov	sp, r7
 404              		.cfi_def_cfa_register 13
 405              		@ sp needed
 406 003c 80BD     		pop	{r7, pc}
 407              	.L18:
 408 003e 00BF     		.align	2
 409              	.L17:
 410 0040 00000000 		.word	alarmMeasure
 411 0044 00000000 		.word	timeToMeasure
 412 0048 00000000 		.word	alarmSync
 413 004c 00000000 		.word	timeToSync
 414              		.cfi_endproc
 415              	.LFE68:
 416              		.size	AyoItsTime, .-AyoItsTime
 417              		.section	.text.AlarmReady,"ax",%progbits
 418              		.align	2
 419              		.global	AlarmReady
 420              		.thumb
 421              		.thumb_func
 422              		.type	AlarmReady, %function
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 12


 423              	AlarmReady:
 424              	.LFB69:
 195:notoriOS.c    **** 
 196:notoriOS.c    **** 
 197:notoriOS.c    **** // ==============================================
 198:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 199:notoriOS.c    **** // ==============================================
 200:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 201:notoriOS.c    **** {
 425              		.loc 1 201 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 8
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429 0000 80B5     		push	{r7, lr}
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 7, -8
 432              		.cfi_offset 14, -4
 433 0002 82B0     		sub	sp, sp, #8
 434              		.cfi_def_cfa_offset 16
 435 0004 00AF     		add	r7, sp, #0
 436              		.cfi_def_cfa_register 7
 437 0006 7860     		str	r0, [r7, #4]
 438 0008 0B46     		mov	r3, r1
 439 000a FB70     		strb	r3, [r7, #3]
 202:notoriOS.c    ****     // if the countDownType matches the alarmType
 203:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 440              		.loc 1 203 0
 441 000c 7B68     		ldr	r3, [r7, #4]
 442 000e 1B79     		ldrb	r3, [r3, #4]
 443 0010 DBB2     		uxtb	r3, r3
 444 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 445 0014 9A42     		cmp	r2, r3
 446 0016 12D1     		bne	.L20
 204:notoriOS.c    ****        
 205:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 206:notoriOS.c    ****         // Decrement the count down value by 1
 207:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 447              		.loc 1 207 0
 448 0018 7B68     		ldr	r3, [r7, #4]
 449 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 450 001c 1BB2     		sxth	r3, r3
 451 001e 9BB2     		uxth	r3, r3
 452 0020 013B     		subs	r3, r3, #1
 453 0022 9BB2     		uxth	r3, r3
 454 0024 1AB2     		sxth	r2, r3
 455 0026 7B68     		ldr	r3, [r7, #4]
 456 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 208:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 209:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 457              		.loc 1 209 0
 458 002a 7B68     		ldr	r3, [r7, #4]
 459 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 460 002e 1BB2     		sxth	r3, r3
 461 0030 002B     		cmp	r3, #0
 462 0032 04DC     		bgt	.L20
 210:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 463              		.loc 1 210 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 13


 464 0034 7868     		ldr	r0, [r7, #4]
 465 0036 FFF7FEFF 		bl	ResetAlarm
 211:notoriOS.c    ****             return 1u;
 466              		.loc 1 211 0
 467 003a 0123     		movs	r3, #1
 468 003c 00E0     		b	.L21
 469              	.L20:
 212:notoriOS.c    ****         } 
 213:notoriOS.c    ****     }
 214:notoriOS.c    ****     
 215:notoriOS.c    ****     return 0u; // Otherwise return 0
 470              		.loc 1 215 0
 471 003e 0023     		movs	r3, #0
 472              	.L21:
 216:notoriOS.c    **** }
 473              		.loc 1 216 0
 474 0040 1846     		mov	r0, r3
 475 0042 0837     		adds	r7, r7, #8
 476              		.cfi_def_cfa_offset 8
 477 0044 BD46     		mov	sp, r7
 478              		.cfi_def_cfa_register 13
 479              		@ sp needed
 480 0046 80BD     		pop	{r7, pc}
 481              		.cfi_endproc
 482              	.LFE69:
 483              		.size	AlarmReady, .-AlarmReady
 484              		.section	.text.ResetAlarm,"ax",%progbits
 485              		.align	2
 486              		.global	ResetAlarm
 487              		.thumb
 488              		.thumb_func
 489              		.type	ResetAlarm, %function
 490              	ResetAlarm:
 491              	.LFB70:
 217:notoriOS.c    **** 
 218:notoriOS.c    **** // ==============================================
 219:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 220:notoriOS.c    **** // ==============================================
 221:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 222:notoriOS.c    **** {
 492              		.loc 1 222 0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 8
 495              		@ frame_needed = 1, uses_anonymous_args = 0
 496              		@ link register save eliminated.
 497 0000 80B4     		push	{r7}
 498              		.cfi_def_cfa_offset 4
 499              		.cfi_offset 7, -4
 500 0002 83B0     		sub	sp, sp, #12
 501              		.cfi_def_cfa_offset 16
 502 0004 00AF     		add	r7, sp, #0
 503              		.cfi_def_cfa_register 7
 504 0006 7860     		str	r0, [r7, #4]
 223:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 224:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 505              		.loc 1 224 0
 506 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 14


 507 000a 1B88     		ldrh	r3, [r3]	@ movhi
 508 000c 9BB2     		uxth	r3, r3
 509 000e 1AB2     		sxth	r2, r3
 510 0010 7B68     		ldr	r3, [r7, #4]
 511 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 225:notoriOS.c    **** }
 512              		.loc 1 225 0
 513 0014 00BF     		nop
 514 0016 0C37     		adds	r7, r7, #12
 515              		.cfi_def_cfa_offset 4
 516 0018 BD46     		mov	sp, r7
 517              		.cfi_def_cfa_register 13
 518              		@ sp needed
 519 001a 80BC     		pop	{r7}
 520              		.cfi_restore 7
 521              		.cfi_def_cfa_offset 0
 522 001c 7047     		bx	lr
 523              		.cfi_endproc
 524              	.LFE70:
 525              		.size	ResetAlarm, .-ResetAlarm
 526 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
 527              		.align	2
 528              		.global	CreateAlarm
 529              		.thumb
 530              		.thumb_func
 531              		.type	CreateAlarm, %function
 532              	CreateAlarm:
 533              	.LFB71:
 226:notoriOS.c    **** 
 227:notoriOS.c    **** // ==============================================
 228:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 229:notoriOS.c    **** // ==============================================
 230:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 231:notoriOS.c    **** {
 534              		.loc 1 231 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 16
 537              		@ frame_needed = 1, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 539 0000 80B4     		push	{r7}
 540              		.cfi_def_cfa_offset 4
 541              		.cfi_offset 7, -4
 542 0002 85B0     		sub	sp, sp, #20
 543              		.cfi_def_cfa_offset 24
 544 0004 00AF     		add	r7, sp, #0
 545              		.cfi_def_cfa_register 7
 546 0006 7860     		str	r0, [r7, #4]
 547 0008 0846     		mov	r0, r1
 548 000a 1146     		mov	r1, r2
 549 000c 1A46     		mov	r2, r3
 550 000e 0346     		mov	r3, r0	@ movhi
 551 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 552 0012 0B46     		mov	r3, r1
 553 0014 7B70     		strb	r3, [r7, #1]
 554 0016 1346     		mov	r3, r2
 555 0018 3B70     		strb	r3, [r7]
 232:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 15


 233:notoriOS.c    ****     alarm newAlarm;
 234:notoriOS.c    ****     
 235:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 236:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 556              		.loc 1 236 0
 557 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 558 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 237:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 559              		.loc 1 237 0
 560 001e 7B78     		ldrb	r3, [r7, #1]
 561 0020 3B73     		strb	r3, [r7, #12]
 238:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 562              		.loc 1 238 0
 563 0022 3B78     		ldrb	r3, [r7]
 564 0024 7B73     		strb	r3, [r7, #13]
 239:notoriOS.c    ****     
 240:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 241:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 242:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 565              		.loc 1 242 0
 566 0026 B7F90230 		ldrsh	r3, [r7, #2]
 567 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 243:notoriOS.c    ****     
 244:notoriOS.c    ****     return newAlarm;
 568              		.loc 1 244 0
 569 002c 7B68     		ldr	r3, [r7, #4]
 570 002e 1A46     		mov	r2, r3
 571 0030 07F10803 		add	r3, r7, #8
 572 0034 1868     		ldr	r0, [r3]	@ unaligned
 573 0036 1060     		str	r0, [r2]	@ unaligned
 574 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 575 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 245:notoriOS.c    ****     
 246:notoriOS.c    **** }
 576              		.loc 1 246 0
 577 003c 7868     		ldr	r0, [r7, #4]
 578 003e 1437     		adds	r7, r7, #20
 579              		.cfi_def_cfa_offset 4
 580 0040 BD46     		mov	sp, r7
 581              		.cfi_def_cfa_register 13
 582              		@ sp needed
 583 0042 80BC     		pop	{r7}
 584              		.cfi_restore 7
 585              		.cfi_def_cfa_offset 0
 586 0044 7047     		bx	lr
 587              		.cfi_endproc
 588              	.LFE71:
 589              		.size	CreateAlarm, .-CreateAlarm
 590 0046 00BF     		.section	.rodata
 591 003a 0000     		.align	2
 592              	.LC2:
 593 003c 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 593      2D2D2D2D 
 593      2D2D2D2D 
 593      2D424547 
 593      494E2054 
 594 0066 0000     		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 16


 595              	.LC3:
 596 0068 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\000"
 596      3D25732C 
 596      2053494D 
 596      49443D25 
 596      732C2044 
 597 0087 00       		.align	2
 598              	.LC4:
 599 0088 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 599      2D2D2D2D 
 599      2D2D2D2D 
 599      2D2D2D45 
 599      4E442054 
 600 00b1 00       		.ascii	"\000"
 601              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 602              		.align	2
 603              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 604              		.thumb
 605              		.thumb_func
 606              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 607              	ChickityCheckYourselfBeforeYouWreckYourself:
 608              	.LFB72:
 247:notoriOS.c    **** 
 248:notoriOS.c    **** // ==============================================
 249:notoriOS.c    **** // Dropping bombs on your moms
 250:notoriOS.c    **** //      - Ice Cube (1992)
 251:notoriOS.c    **** //
 252:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 253:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 254:notoriOS.c    **** // ==============================================
 255:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 609              		.loc 1 255 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 1944
 612              		@ frame_needed = 1, uses_anonymous_args = 0
 613 0000 90B5     		push	{r4, r7, lr}
 614              		.cfi_def_cfa_offset 12
 615              		.cfi_offset 4, -12
 616              		.cfi_offset 7, -8
 617              		.cfi_offset 14, -4
 618 0002 ADF6141D 		subw	sp, sp, #2324
 619              		.cfi_def_cfa_offset 2336
 620 0006 5EAF     		add	r7, sp, #376
 621              		.cfi_def_cfa 7, 1960
 256:notoriOS.c    **** 
 257:notoriOS.c    ****     //test_t t_influx = influx_test();
 258:notoriOS.c    ****     //printTestStatus(t_influx);
 259:notoriOS.c    ****     
 260:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 622              		.loc 1 260 0
 623 0008 3849     		ldr	r1, .L26
 624 000a 0320     		movs	r0, #3
 625 000c FFF7FEFF 		bl	printNotif
 261:notoriOS.c    ****     
 262:notoriOS.c    ****     // Test level sensor
 263:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 626              		.loc 1 263 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 17


 627 0010 07F21463 		addw	r3, r7, #1556
 628 0014 1846     		mov	r0, r3
 629 0016 FFF7FEFF 		bl	level_sensor_test
 264:notoriOS.c    ****     printTestStatus(t_level_sensor);
 630              		.loc 1 264 0
 631 001a 07F21464 		addw	r4, r7, #1556
 632 001e 6846     		mov	r0, sp
 633 0020 04F11003 		add	r3, r4, #16
 634 0024 40F27112 		movw	r2, #369
 635 0028 1946     		mov	r1, r3
 636 002a FFF7FEFF 		bl	memcpy
 637 002e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 638 0032 FFF7FEFF 		bl	printTestStatus
 265:notoriOS.c    ****     
 266:notoriOS.c    ****     // Test voltages
 267:notoriOS.c    ****     test_t t_voltages = voltages_test();
 639              		.loc 1 267 0
 640 0036 07F59263 		add	r3, r7, #1168
 641 003a 1846     		mov	r0, r3
 642 003c FFF7FEFF 		bl	voltages_test
 268:notoriOS.c    ****     printTestStatus(t_voltages);
 643              		.loc 1 268 0
 644 0040 07F59264 		add	r4, r7, #1168
 645 0044 6846     		mov	r0, sp
 646 0046 04F11003 		add	r3, r4, #16
 647 004a 40F27112 		movw	r2, #369
 648 004e 1946     		mov	r1, r3
 649 0050 FFF7FEFF 		bl	memcpy
 650 0054 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 651 0058 FFF7FEFF 		bl	printTestStatus
 269:notoriOS.c    ****  
 270:notoriOS.c    ****     // Test voltages
 271:notoriOS.c    ****     test_t t_pressure = pressure_sensor_test();
 652              		.loc 1 271 0
 653 005c 07F54373 		add	r3, r7, #780
 654 0060 1846     		mov	r0, r3
 655 0062 FFF7FEFF 		bl	pressure_sensor_test
 272:notoriOS.c    ****     printTestStatus(t_pressure);
 656              		.loc 1 272 0
 657 0066 07F54374 		add	r4, r7, #780
 658 006a 6846     		mov	r0, sp
 659 006c 04F11003 		add	r3, r4, #16
 660 0070 40F27112 		movw	r2, #369
 661 0074 1946     		mov	r1, r3
 662 0076 FFF7FEFF 		bl	memcpy
 663 007a 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 664 007e FFF7FEFF 		bl	printTestStatus
 273:notoriOS.c    ****     
 274:notoriOS.c    ****     // Test SD card
 275:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 665              		.loc 1 275 0
 666 0082 07F5C473 		add	r3, r7, #392
 667 0086 1846     		mov	r0, r3
 668 0088 FFF7FEFF 		bl	SD_card_test
 276:notoriOS.c    ****     printTestStatus(t_sd_card);
 669              		.loc 1 276 0
 670 008c 07F5C474 		add	r4, r7, #392
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 18


 671 0090 6846     		mov	r0, sp
 672 0092 04F11003 		add	r3, r4, #16
 673 0096 40F27112 		movw	r2, #369
 674 009a 1946     		mov	r1, r3
 675 009c FFF7FEFF 		bl	memcpy
 676 00a0 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 677 00a4 FFF7FEFF 		bl	printTestStatus
 277:notoriOS.c    ****     
 278:notoriOS.c    ****     // Test modem
 279:notoriOS.c    ****     test_t t_modem = modem_test();
 678              		.loc 1 279 0
 679 00a8 3B1D     		adds	r3, r7, #4
 680 00aa 1846     		mov	r0, r3
 681 00ac FFF7FEFF 		bl	modem_test
 280:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s",modem_info.imei,modem_info.sim_i
 682              		.loc 1 280 0
 683 00b0 0F4B     		ldr	r3, .L26+4
 684 00b2 0093     		str	r3, [sp]
 685 00b4 0F4B     		ldr	r3, .L26+8
 686 00b6 104A     		ldr	r2, .L26+12
 687 00b8 1049     		ldr	r1, .L26+16
 688 00ba 0320     		movs	r0, #3
 689 00bc FFF7FEFF 		bl	printNotif
 281:notoriOS.c    ****     printTestStatus(t_modem);
 690              		.loc 1 281 0
 691 00c0 3C1D     		adds	r4, r7, #4
 692 00c2 6846     		mov	r0, sp
 693 00c4 04F11003 		add	r3, r4, #16
 694 00c8 40F27112 		movw	r2, #369
 695 00cc 1946     		mov	r1, r3
 696 00ce FFF7FEFF 		bl	memcpy
 697 00d2 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 698 00d6 FFF7FEFF 		bl	printTestStatus
 282:notoriOS.c    ****     
 283:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 699              		.loc 1 283 0
 700 00da 0949     		ldr	r1, .L26+20
 701 00dc 0320     		movs	r0, #3
 702 00de FFF7FEFF 		bl	printNotif
 284:notoriOS.c    **** 
 285:notoriOS.c    **** }
 703              		.loc 1 285 0
 704 00e2 00BF     		nop
 705 00e4 07F29C77 		addw	r7, r7, #1948
 706              		.cfi_def_cfa_offset 12
 707 00e8 BD46     		mov	sp, r7
 708              		.cfi_def_cfa_register 13
 709              		@ sp needed
 710 00ea 90BD     		pop	{r4, r7, pc}
 711              	.L27:
 712              		.align	2
 713              	.L26:
 714 00ec 3C000000 		.word	.LC2
 715 00f0 04000000 		.word	system_info+4
 716 00f4 00000000 		.word	modem_info
 717 00f8 28000000 		.word	modem_info+40
 718 00fc 68000000 		.word	.LC3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 19


 719 0100 88000000 		.word	.LC4
 720              		.cfi_endproc
 721              	.LFE72:
 722              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 723              		.section	.text.main,"ax",%progbits
 724              		.align	2
 725              		.global	main
 726              		.thumb
 727              		.thumb_func
 728              		.type	main, %function
 729              	main:
 730              	.LFB73:
 286:notoriOS.c    **** 
 287:notoriOS.c    **** // ==============================================
 288:notoriOS.c    **** // Processes Core Tasks
 289:notoriOS.c    **** // ==============================================
 290:notoriOS.c    **** int main(void)
 291:notoriOS.c    **** {
 731              		.loc 1 291 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 1, uses_anonymous_args = 0
 735 0000 80B5     		push	{r7, lr}
 736              		.cfi_def_cfa_offset 8
 737              		.cfi_offset 7, -8
 738              		.cfi_offset 14, -4
 739 0002 00AF     		add	r7, sp, #0
 740              		.cfi_def_cfa_register 7
 292:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 741              		.loc 1 292 0
 742              		.syntax unified
 743              	@ 292 "notoriOS.c" 1
 744 0004 62B6     		CPSIE   i
 745              	@ 0 "" 2
 293:notoriOS.c    **** 
 294:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 746              		.loc 1 294 0
 747              		.thumb
 748              		.syntax unified
 749 0006 FFF7FEFF 		bl	ReadyOrNot
 295:notoriOS.c    ****     
 296:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 750              		.loc 1 296 0
 751 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 752              	.L30:
 297:notoriOS.c    ****    
 298:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 299:notoriOS.c    ****     {
 300:notoriOS.c    ****         
 301:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 753              		.loc 1 301 0
 754 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 755 0012 0346     		mov	r3, r0
 756 0014 002B     		cmp	r3, #0
 757 0016 FAD1     		bne	.L30
 302:notoriOS.c    ****         {
 303:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 20


 758              		.loc 1 303 0
 759 0018 FFF7FEFF 		bl	LayBack
 304:notoriOS.c    ****         }
 305:notoriOS.c    ****     }
 760              		.loc 1 305 0
 761 001c F7E7     		b	.L30
 762              		.cfi_endproc
 763              	.LFE73:
 764              		.size	main, .-main
 765 001e 00BF     		.section	.rodata
 766 00b2 0000     		.align	2
 767              	.LC5:
 768 00b4 4D6F6465 		.ascii	"Modem is ready.\000"
 768      6D206973 
 768      20726561 
 768      64792E00 
 769              		.align	2
 770              	.LC6:
 771 00c4 256400   		.ascii	"%d\000"
 772 00c7 00       		.align	2
 773              	.LC7:
 774 00c8 72737270 		.ascii	"rsrp\000"
 774      00
 775 00cd 000000   		.align	2
 776              	.LC8:
 777 00d0 72736370 		.ascii	"rscp\000"
 777      00
 778 00d5 000000   		.align	2
 779              	.LC9:
 780 00d8 7472795F 		.ascii	"try_counter\000"
 780      636F756E 
 780      74657200 
 781              		.align	2
 782              	.LC10:
 783 00e4 64617461 		.ascii	"data_count_sent\000"
 783      5F636F75 
 783      6E745F73 
 783      656E7400 
 784              		.align	2
 785              	.LC11:
 786 00f4 64617461 		.ascii	"data_count_desired\000"
 786      5F636F75 
 786      6E745F64 
 786      65736972 
 786      656400
 787 0107 00       		.align	2
 788              	.LC12:
 789 0108 42656769 		.ascii	"Begin HTTP post.\000"
 789      6E204854 
 789      54502070 
 789      6F73742E 
 789      00
 790 0119 000000   		.align	2
 791              	.LC13:
 792 011c 35396138 		.ascii	"59a8680277509c5a975a858c2fc88588989cad48\000"
 792      36383032 
 792      37373530 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 21


 792      39633561 
 792      39373561 
 793 0145 000000   		.align	2
 794              	.LC14:
 795 0148 6170692F 		.ascii	"api/v1/write\000"
 795      76312F77 
 795      72697465 
 795      00
 796 0155 000000   		.align	2
 797              	.LC15:
 798 0158 48545450 		.ascii	"HTTP route: %s\000"
 798      20726F75 
 798      74653A20 
 798      257300
 799 0167 00       		.align	2
 800              	.LC16:
 801 0168 312E3100 		.ascii	"1.1\000"
 802              		.align	2
 803              	.LC17:
 804 016c 00       		.ascii	"\000"
 805 016d 000000   		.align	2
 806              	.LC18:
 807 0170 436C6F73 		.ascii	"Close\000"
 807      6500
 808 0176 0000     		.align	2
 809              	.LC19:
 810 0178 504F5354 		.ascii	"POST\000"
 810      00
 811 017d 000000   		.align	2
 812              	.LC20:
 813 0180 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 813      20485454 
 813      50205265 
 813      71756573 
 813      743A2025 
 814 0196 0000     		.align	2
 815              	.LC21:
 816 0198 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 816      443D312C 
 816      302C2564 
 816      2C222573 
 816      222C302C 
 817 01b1 000000   		.align	2
 818              	.LC22:
 819 01b4 257300   		.ascii	"%s\000"
 820 01b7 00       		.align	2
 821              	.LC23:
 822 01b8 4F4B00   		.ascii	"OK\000"
 823              		.global	__aeabi_ui2d
 824              		.global	__aeabi_d2iz
 825 01bb 00       		.align	2
 826              	.LC24:
 827 01bc 68747470 		.ascii	"http_request len: %d\000"
 827      5F726571 
 827      75657374 
 827      206C656E 
 827      3A202564 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 22


 828 01d1 000000   		.align	2
 829              	.LC25:
 830 01d4 23206F66 		.ascii	"# of packets: %d\000"
 830      20706163 
 830      6B657473 
 830      3A202564 
 830      00
 831 01e5 000000   		.align	2
 832              	.LC26:
 833 01e8 3E00     		.ascii	">\000"
 834 01ea 0000     		.align	2
 835              	.LC27:
 836 01ec 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 836      53454E44 
 836      3D310D0A 
 836      00
 837 01f9 000000   		.align	2
 838              	.LC28:
 839 01fc 1A00     		.ascii	"\032\000"
 840 01fe 0000     		.align	2
 841              	.LC29:
 842 0200 6368756E 		.ascii	"chunk %d: %s\000"
 842      6B202564 
 842      3A202573 
 842      00
 843 020d 000000   		.align	2
 844              	.LC30:
 845 0210 5352494E 		.ascii	"SRING\000"
 845      4700
 846 0216 0000     		.align	2
 847              	.LC31:
 848 0218 4F532D4F 		.ascii	"OS-OK\000"
 848      4B00
 849 021e 0000     		.align	2
 850              	.LC32:
 851 0220 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 851      52454356 
 851      3D312C31 
 851      3030300D 
 851      00
 852 0231 000000   		.align	2
 853              	.LC33:
 854 0234 6D6F6465 		.ascii	"modem_tx_time\000"
 854      6D5F7478 
 854      5F74696D 
 854      6500
 855 0242 0000     		.align	2
 856              	.LC34:
 857 0244 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 857      4F3A2043 
 857      6F756C64 
 857      206E6F74 
 857      20726563 
 858              		.section	.text.syncData,"ax",%progbits
 859              		.align	2
 860              		.global	syncData
 861              		.thumb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 23


 862              		.thumb_func
 863              		.type	syncData, %function
 864              	syncData:
 865              	.LFB74:
 306:notoriOS.c    **** }
 307:notoriOS.c    **** 
 308:notoriOS.c    **** // ==============================================
 309:notoriOS.c    **** // Syncs data with server
 310:notoriOS.c    **** // Returns 0 when done
 311:notoriOS.c    **** // ==============================================
 312:notoriOS.c    **** uint8 syncData(){
 866              		.loc 1 312 0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 1360
 869              		@ frame_needed = 1, uses_anonymous_args = 0
 870 0000 90B5     		push	{r4, r7, lr}
 871              		.cfi_def_cfa_offset 12
 872              		.cfi_offset 4, -12
 873              		.cfi_offset 7, -8
 874              		.cfi_offset 14, -4
 875 0002 ADF26C5D 		subw	sp, sp, #1388
 876              		.cfi_def_cfa_offset 1400
 877 0006 06AF     		add	r7, sp, #24
 878              		.cfi_def_cfa 7, 1376
 313:notoriOS.c    ****     
 314:notoriOS.c    ****     /*
 315:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 316:notoriOS.c    ****     uint8 check = 0;
 317:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 318:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 319:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 320:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 321:notoriOS.c    ****     */
 322:notoriOS.c    **** 
 323:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 324:notoriOS.c    ****     LED_Write(1u);
 879              		.loc 1 324 0
 880 0008 0120     		movs	r0, #1
 881 000a FFF7FEFF 		bl	LED_Write
 325:notoriOS.c    ****     CyDelay(100u);
 882              		.loc 1 325 0
 883 000e 6420     		movs	r0, #100
 884 0010 FFF7FEFF 		bl	CyDelay
 326:notoriOS.c    ****     LED_Write(0u);
 885              		.loc 1 326 0
 886 0014 0020     		movs	r0, #0
 887 0016 FFF7FEFF 		bl	LED_Write
 327:notoriOS.c    **** 
 328:notoriOS.c    ****     
 329:notoriOS.c    ****     // If there's no data, not need to do anything
 330:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 888              		.loc 1 330 0
 889 001a FFF7FEFF 		bl	sizeOfDataStack
 890 001e 0346     		mov	r3, r0
 891 0020 002B     		cmp	r3, #0
 892 0022 01D1     		bne	.L32
 331:notoriOS.c    ****         return 0u;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 24


 893              		.loc 1 331 0
 894 0024 0023     		movs	r3, #0
 895 0026 03E2     		b	.L33
 896              	.L32:
 332:notoriOS.c    ****         }
 333:notoriOS.c    ****     
 334:notoriOS.c    ****     // Create request body, in this case influx
 335:notoriOS.c    ****     // Place body into HTTP request header
 336:notoriOS.c    ****     // Fire up modem and get it out
 337:notoriOS.c    ****      
 338:notoriOS.c    ****     
 339:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 340:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 897              		.loc 1 340 0
 898 0028 FFF7FEFF 		bl	modem_get_state
 899 002c 0346     		mov	r3, r0
 900 002e 002B     		cmp	r3, #0
 901 0030 11D1     		bne	.L34
 341:notoriOS.c    **** 
 342:notoriOS.c    ****         try_counter++;
 902              		.loc 1 342 0
 903 0032 AE4B     		ldr	r3, .L46
 904 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 905 0036 0133     		adds	r3, r3, #1
 906 0038 DAB2     		uxtb	r2, r3
 907 003a AC4B     		ldr	r3, .L46
 908 003c 1A70     		strb	r2, [r3]
 343:notoriOS.c    ****         	
 344:notoriOS.c    ****         if(try_counter <= 2){
 909              		.loc 1 344 0
 910 003e AB4B     		ldr	r3, .L46
 911 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 912 0042 022B     		cmp	r3, #2
 913 0044 02D8     		bhi	.L35
 345:notoriOS.c    ****             modem_power_up();
 914              		.loc 1 345 0
 915 0046 FFF7FEFF 		bl	modem_power_up
 916 004a F0E1     		b	.L36
 917              	.L35:
 346:notoriOS.c    ****         }else{
 347:notoriOS.c    ****             try_counter = 0;
 918              		.loc 1 347 0
 919 004c A74B     		ldr	r3, .L46
 920 004e 0022     		movs	r2, #0
 921 0050 1A70     		strb	r2, [r3]
 348:notoriOS.c    ****             return 0u;
 922              		.loc 1 348 0
 923 0052 0023     		movs	r3, #0
 924 0054 ECE1     		b	.L33
 925              	.L34:
 349:notoriOS.c    ****             }
 350:notoriOS.c    ****             
 351:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 926              		.loc 1 351 0
 927 0056 FFF7FEFF 		bl	modem_get_state
 928 005a 0346     		mov	r3, r0
 929 005c 042B     		cmp	r3, #4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 25


 930 005e 40F0E681 		bne	.L36
 931              	.LBB2:
 352:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 932              		.loc 1 352 0
 933 0062 A349     		ldr	r1, .L46+4
 934 0064 0020     		movs	r0, #0
 935 0066 FFF7FEFF 		bl	printNotif
 353:notoriOS.c    ****         
 354:notoriOS.c    ****         http_request[0] = '\0';
 936              		.loc 1 354 0
 937 006a A24B     		ldr	r3, .L46+8
 938 006c 0022     		movs	r2, #0
 939 006e 1A70     		strb	r2, [r3]
 355:notoriOS.c    ****         http_body[0] = '\0';
 940              		.loc 1 355 0
 941 0070 A14B     		ldr	r3, .L46+12
 942 0072 0022     		movs	r2, #0
 943 0074 1A70     		strb	r2, [r3]
 356:notoriOS.c    ****         http_route[0] = '\0';
 944              		.loc 1 356 0
 945 0076 A14B     		ldr	r3, .L46+16
 946 0078 0022     		movs	r2, #0
 947 007a 1A70     		strb	r2, [r3]
 357:notoriOS.c    ****         //char *base = "write";
 358:notoriOS.c    ****         
 359:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power and RSCP: received signal
 360:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 361:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 948              		.loc 1 361 0
 949 007c A04B     		ldr	r3, .L46+20
 950 007e 5B69     		ldr	r3, [r3, #20]
 951 0080 07F5A560 		add	r0, r7, #1320
 952 0084 9F4A     		ldr	r2, .L46+24
 953 0086 1421     		movs	r1, #20
 954 0088 FFF7FEFF 		bl	snprintf
 362:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 955              		.loc 1 362 0
 956 008c FFF7FEFF 		bl	getTimeStamp
 957 0090 0246     		mov	r2, r0
 958 0092 07F5A563 		add	r3, r7, #1320
 959 0096 1946     		mov	r1, r3
 960 0098 9B48     		ldr	r0, .L46+28
 961 009a FFF7FEFF 		bl	pushData
 363:notoriOS.c    ****         
 364:notoriOS.c    ****         char s_rscp[DATA_MAX_KEY_LENGTH];
 365:notoriOS.c    ****         snprintf(s_rscp,sizeof(s_rscp),"%d",modem_stats.rscp);
 962              		.loc 1 365 0
 963 009e 984B     		ldr	r3, .L46+20
 964 00a0 9B68     		ldr	r3, [r3, #8]
 965 00a2 07F21450 		addw	r0, r7, #1300
 966 00a6 974A     		ldr	r2, .L46+24
 967 00a8 1421     		movs	r1, #20
 968 00aa FFF7FEFF 		bl	snprintf
 366:notoriOS.c    ****         pushData("rscp", s_rscp, getTimeStamp());
 969              		.loc 1 366 0
 970 00ae FFF7FEFF 		bl	getTimeStamp
 971 00b2 0246     		mov	r2, r0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 26


 972 00b4 07F21453 		addw	r3, r7, #1300
 973 00b8 1946     		mov	r1, r3
 974 00ba 9448     		ldr	r0, .L46+32
 975 00bc FFF7FEFF 		bl	pushData
 367:notoriOS.c    ****         
 368:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 369:notoriOS.c    ****         char c_try_counter[20];
 370:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 976              		.loc 1 370 0
 977 00c0 8A4B     		ldr	r3, .L46
 978 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 979 00c4 07F5A060 		add	r0, r7, #1280
 980 00c8 8E4A     		ldr	r2, .L46+24
 981 00ca 1421     		movs	r1, #20
 982 00cc FFF7FEFF 		bl	snprintf
 371:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 983              		.loc 1 371 0
 984 00d0 FFF7FEFF 		bl	getTimeStamp
 985 00d4 0246     		mov	r2, r0
 986 00d6 07F5A063 		add	r3, r7, #1280
 987 00da 1946     		mov	r1, r3
 988 00dc 8C48     		ldr	r0, .L46+36
 989 00de FFF7FEFF 		bl	pushData
 372:notoriOS.c    ****         
 373:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
 374:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 375:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 376:notoriOS.c    ****         if(buffer_overflow == false){
 990              		.loc 1 376 0
 991 00e2 8C4B     		ldr	r3, .L46+40
 992 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 993 00e6 83F00103 		eor	r3, r3, #1
 994 00ea DBB2     		uxtb	r3, r3
 995 00ec 002B     		cmp	r3, #0
 996 00ee 16D0     		beq	.L37
 997              	.LBB3:
 377:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 998              		.loc 1 377 0
 999 00f0 FFF7FEFF 		bl	sizeOfDataStack
 1000 00f4 0346     		mov	r3, r0
 1001 00f6 A7F84835 		strh	r3, [r7, #1352]	@ movhi
 378:notoriOS.c    ****             char c_data_count_sent[20];
 379:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 1002              		.loc 1 379 0
 1003 00fa B7F84835 		ldrh	r3, [r7, #1352]
 1004 00fe 07F59B60 		add	r0, r7, #1240
 1005 0102 804A     		ldr	r2, .L46+24
 1006 0104 1421     		movs	r1, #20
 1007 0106 FFF7FEFF 		bl	snprintf
 380:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1008              		.loc 1 380 0
 1009 010a FFF7FEFF 		bl	getTimeStamp
 1010 010e 0246     		mov	r2, r0
 1011 0110 07F59B63 		add	r3, r7, #1240
 1012 0114 1946     		mov	r1, r3
 1013 0116 8048     		ldr	r0, .L46+44
 1014 0118 FFF7FEFF 		bl	pushData
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 27


 1015              	.LBE3:
 1016 011c 0FE0     		b	.L38
 1017              	.L37:
 1018              	.LBB4:
 381:notoriOS.c    ****         }else{
 382:notoriOS.c    ****             char c_data_count_sent[20];
 383:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1019              		.loc 1 383 0
 1020 011e 07F2C440 		addw	r0, r7, #1220
 1021 0122 9623     		movs	r3, #150
 1022 0124 774A     		ldr	r2, .L46+24
 1023 0126 1421     		movs	r1, #20
 1024 0128 FFF7FEFF 		bl	snprintf
 384:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1025              		.loc 1 384 0
 1026 012c FFF7FEFF 		bl	getTimeStamp
 1027 0130 0246     		mov	r2, r0
 1028 0132 07F2C443 		addw	r3, r7, #1220
 1029 0136 1946     		mov	r1, r3
 1030 0138 7748     		ldr	r0, .L46+44
 1031 013a FFF7FEFF 		bl	pushData
 1032              	.L38:
 1033              	.LBE4:
 385:notoriOS.c    ****         }
 386:notoriOS.c    ****         
 387:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 388:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 1034              		.loc 1 388 0
 1035 013e FFF7FEFF 		bl	sizeOfDataStackDesired
 1036 0142 0346     		mov	r3, r0
 1037 0144 A7F84635 		strh	r3, [r7, #1350]	@ movhi
 389:notoriOS.c    ****         char c_data_count_desired[20];
 390:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 391:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1038              		.loc 1 391 0
 1039 0148 B7F84635 		ldrh	r3, [r7, #1350]
 1040 014c 013B     		subs	r3, r3, #1
 1041 014e 07F2EC40 		addw	r0, r7, #1260
 1042 0152 6C4A     		ldr	r2, .L46+24
 1043 0154 1421     		movs	r1, #20
 1044 0156 FFF7FEFF 		bl	snprintf
 392:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
 1045              		.loc 1 392 0
 1046 015a FFF7FEFF 		bl	getTimeStamp
 1047 015e 0246     		mov	r2, r0
 1048 0160 07F2EC43 		addw	r3, r7, #1260
 1049 0164 1946     		mov	r1, r3
 1050 0166 6D48     		ldr	r0, .L46+48
 1051 0168 FFF7FEFF 		bl	pushData
 393:notoriOS.c    ****         
 394:notoriOS.c    ****         // Construct HTPP request
 395:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1052              		.loc 1 395 0
 1053 016c 6C49     		ldr	r1, .L46+52
 1054 016e 0020     		movs	r0, #0
 1055 0170 FFF7FEFF 		bl	printNotif
 396:notoriOS.c    ****         
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 28


 397:notoriOS.c    ****         // Old influx API
 398:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 399:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1056              		.loc 1 399 0
 1057 0174 6B4B     		ldr	r3, .L46+56
 1058 0176 6C4A     		ldr	r2, .L46+60
 1059 0178 6C49     		ldr	r1, .L46+64
 1060 017a 6048     		ldr	r0, .L46+16
 1061 017c FFF7FEFF 		bl	construct_malcom_route
 400:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1062              		.loc 1 400 0
 1063 0180 5E4A     		ldr	r2, .L46+16
 1064 0182 6B49     		ldr	r1, .L46+68
 1065 0184 0020     		movs	r0, #0
 1066 0186 FFF7FEFF 		bl	printNotif
 401:notoriOS.c    ****         
 402:notoriOS.c    ****         //OLD INFLUX API
 403:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 404:notoriOS.c    ****         construct_malcom_body(http_body);
 1067              		.loc 1 404 0
 1068 018a 5B48     		ldr	r0, .L46+12
 1069 018c FFF7FEFF 		bl	construct_malcom_body
 405:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1070              		.loc 1 405 0
 1071 0190 684B     		ldr	r3, .L46+72
 1072 0192 5B6E     		ldr	r3, [r3, #100]
 1073 0194 684A     		ldr	r2, .L46+76
 1074 0196 0592     		str	r2, [sp, #20]
 1075 0198 0022     		movs	r2, #0
 1076 019a 0492     		str	r2, [sp, #16]
 1077 019c 674A     		ldr	r2, .L46+80
 1078 019e 0392     		str	r2, [sp, #12]
 1079 01a0 674A     		ldr	r2, .L46+84
 1080 01a2 0292     		str	r2, [sp, #8]
 1081 01a4 674A     		ldr	r2, .L46+88
 1082 01a6 0192     		str	r2, [sp, #4]
 1083 01a8 0093     		str	r3, [sp]
 1084 01aa 544B     		ldr	r3, .L46+16
 1085 01ac 614A     		ldr	r2, .L46+72
 1086 01ae 5249     		ldr	r1, .L46+12
 1087 01b0 5048     		ldr	r0, .L46+8
 1088 01b2 FFF7FEFF 		bl	construct_generic_HTTP_request
 406:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1089              		.loc 1 406 0
 1090 01b6 4F4A     		ldr	r2, .L46+8
 1091 01b8 6349     		ldr	r1, .L46+92
 1092 01ba 0020     		movs	r0, #0
 1093 01bc FFF7FEFF 		bl	printNotif
 407:notoriOS.c    ****         
 408:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 409:notoriOS.c    ****         // Open port and begin command line sequence
 410:notoriOS.c    ****         char portConfig[200];
 411:notoriOS.c    ****         uint8 status = 0u;
 1094              		.loc 1 411 0
 1095 01c0 0023     		movs	r3, #0
 1096 01c2 87F84535 		strb	r3, [r7, #1349]
 412:notoriOS.c    ****         
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 29


 413:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1097              		.loc 1 413 0
 1098 01c6 5B4B     		ldr	r3, .L46+72
 1099 01c8 5A6E     		ldr	r2, [r3, #100]
 1100 01ca 381D     		adds	r0, r7, #4
 1101 01cc 594B     		ldr	r3, .L46+72
 1102 01ce 0093     		str	r3, [sp]
 1103 01d0 1346     		mov	r3, r2
 1104 01d2 5E4A     		ldr	r2, .L46+96
 1105 01d4 C821     		movs	r1, #200
 1106 01d6 FFF7FEFF 		bl	snprintf
 414:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1107              		.loc 1 414 0
 1108 01da 3B1D     		adds	r3, r7, #4
 1109 01dc 1A46     		mov	r2, r3
 1110 01de 5C49     		ldr	r1, .L46+100
 1111 01e0 0020     		movs	r0, #0
 1112 01e2 FFF7FEFF 		bl	printNotif
 415:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1113              		.loc 1 415 0
 1114 01e6 3B1D     		adds	r3, r7, #4
 1115 01e8 42F21072 		movw	r2, #10000
 1116 01ec 5949     		ldr	r1, .L46+104
 1117 01ee 1846     		mov	r0, r3
 1118 01f0 FFF7FEFF 		bl	at_write_command
 1119 01f4 0346     		mov	r3, r0
 1120 01f6 87F84535 		strb	r3, [r7, #1349]
 416:notoriOS.c    ****         
 417:notoriOS.c    ****         // create character pointer to chunk through the http_request
 418:notoriOS.c    ****         char *chunk;
 419:notoriOS.c    ****         // Set chunk to start where http_request starts
 420:notoriOS.c    ****         chunk = http_request;
 1121              		.loc 1 420 0
 1122 01fa 3E4B     		ldr	r3, .L46+8
 1123 01fc C7F84C35 		str	r3, [r7, #1356]
 421:notoriOS.c    ****         // variable for the number of packets to send
 422:notoriOS.c    ****         int8 packets;
 423:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1124              		.loc 1 423 0
 1125 0200 3C48     		ldr	r0, .L46+8
 1126 0202 FFF7FEFF 		bl	strlen
 1127 0206 0246     		mov	r2, r0
 1128 0208 534B     		ldr	r3, .L46+108
 1129 020a A3FB0223 		umull	r2, r3, r3, r2
 1130 020e 5B09     		lsrs	r3, r3, #5
 1131 0210 1846     		mov	r0, r3
 1132 0212 FFF7FEFF 		bl	__aeabi_ui2d
 1133 0216 4FF00002 		mov	r2, #0
 1134 021a 504B     		ldr	r3, .L46+112
 1135 021c FFF7FEFF 		bl	nextafter
 1136 0220 0346     		mov	r3, r0
 1137 0222 0C46     		mov	r4, r1
 1138 0224 1846     		mov	r0, r3
 1139 0226 2146     		mov	r1, r4
 1140 0228 FFF7FEFF 		bl	ceil
 1141 022c 0346     		mov	r3, r0
 1142 022e 0C46     		mov	r4, r1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 30


 1143 0230 1846     		mov	r0, r3
 1144 0232 2146     		mov	r1, r4
 1145 0234 FFF7FEFF 		bl	__aeabi_d2iz
 1146 0238 0346     		mov	r3, r0
 1147 023a 87F84435 		strb	r3, [r7, #1348]
 424:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1148              		.loc 1 424 0
 1149 023e 2D48     		ldr	r0, .L46+8
 1150 0240 FFF7FEFF 		bl	strlen
 1151 0244 0346     		mov	r3, r0
 1152 0246 1A46     		mov	r2, r3
 1153 0248 4549     		ldr	r1, .L46+116
 1154 024a 0020     		movs	r0, #0
 1155 024c FFF7FEFF 		bl	printNotif
 425:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1156              		.loc 1 425 0
 1157 0250 97F94435 		ldrsb	r3, [r7, #1348]
 1158 0254 1A46     		mov	r2, r3
 1159 0256 4349     		ldr	r1, .L46+120
 1160 0258 0020     		movs	r0, #0
 1161 025a FFF7FEFF 		bl	printNotif
 1162              	.LBB5:
 426:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 427:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1163              		.loc 1 427 0
 1164 025e 0023     		movs	r3, #0
 1165 0260 87F84B35 		strb	r3, [r7, #1355]
 1166 0264 9AE0     		b	.L39
 1167              	.L42:
 1168              	.LBB6:
 428:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 429:notoriOS.c    ****             char http_chunk[1001];
 430:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 431:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 432:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1169              		.loc 1 432 0
 1170 0266 4FF47A72 		mov	r2, #1000
 1171 026a 3F49     		ldr	r1, .L46+124
 1172 026c 3F48     		ldr	r0, .L46+128
 1173 026e FFF7FEFF 		bl	at_write_command
 1174 0272 0346     		mov	r3, r0
 1175 0274 87F84535 		strb	r3, [r7, #1349]
 433:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 434:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1176              		.loc 1 434 0
 1177 0278 07F1CC00 		add	r0, r7, #204
 1178 027c D7F84C35 		ldr	r3, [r7, #1356]
 1179 0280 334A     		ldr	r2, .L46+100
 1180 0282 4FF4FA71 		mov	r1, #500
 1181 0286 FFF7FEFF 		bl	snprintf
 435:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 436:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1182              		.loc 1 436 0
 1183 028a 07F1CC03 		add	r3, r7, #204
 1184 028e 1846     		mov	r0, r3
 1185 0290 FFF7FEFF 		bl	strlen
 1186 0294 0346     		mov	r3, r0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 31


 1187 0296 1A46     		mov	r2, r3
 1188 0298 07F1CC03 		add	r3, r7, #204
 1189 029c 1344     		add	r3, r3, r2
 1190 029e 3449     		ldr	r1, .L46+132
 1191 02a0 1A46     		mov	r2, r3
 1192 02a2 0B46     		mov	r3, r1
 1193 02a4 1B88     		ldrh	r3, [r3]	@ unaligned
 1194 02a6 1380     		strh	r3, [r2]	@ unaligned
 437:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1195              		.loc 1 437 0
 1196 02a8 97F94B25 		ldrsb	r2, [r7, #1355]
 1197 02ac 07F1CC03 		add	r3, r7, #204
 1198 02b0 3049     		ldr	r1, .L46+136
 1199 02b2 0020     		movs	r0, #0
 1200 02b4 FFF7FEFF 		bl	printNotif
 438:notoriOS.c    ****             // Send data to server
 439:notoriOS.c    ****             if ((packet+1) != packets){
 1201              		.loc 1 439 0
 1202 02b8 97F94B35 		ldrsb	r3, [r7, #1355]
 1203 02bc 5A1C     		adds	r2, r3, #1
 1204 02be 97F94435 		ldrsb	r3, [r7, #1348]
 1205 02c2 9A42     		cmp	r2, r3
 1206 02c4 58D0     		beq	.L40
 440:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1207              		.loc 1 440 0
 1208 02c6 07F1CC03 		add	r3, r7, #204
 1209 02ca 41F28832 		movw	r2, #5000
 1210 02ce 2149     		ldr	r1, .L46+104
 1211 02d0 1846     		mov	r0, r3
 1212 02d2 FFF7FEFF 		bl	at_write_command
 1213 02d6 0346     		mov	r3, r0
 1214 02d8 87F84535 		strb	r3, [r7, #1349]
 441:notoriOS.c    ****                 // Move the pointer forward 
 442:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1215              		.loc 1 442 0
 1216 02dc D7F84C35 		ldr	r3, [r7, #1356]
 1217 02e0 03F2F313 		addw	r3, r3, #499
 1218 02e4 C7F84C35 		str	r3, [r7, #1356]
 1219 02e8 51E0     		b	.L41
 1220              	.L47:
 1221 02ea 00BF     		.align	2
 1222              	.L46:
 1223 02ec 00000000 		.word	try_counter
 1224 02f0 B4000000 		.word	.LC5
 1225 02f4 00000000 		.word	http_request
 1226 02f8 00000000 		.word	http_body
 1227 02fc 00000000 		.word	http_route
 1228 0300 00000000 		.word	modem_stats
 1229 0304 C4000000 		.word	.LC6
 1230 0308 C8000000 		.word	.LC7
 1231 030c D0000000 		.word	.LC8
 1232 0310 D8000000 		.word	.LC9
 1233 0314 00000000 		.word	buffer_overflow
 1234 0318 E4000000 		.word	.LC10
 1235 031c F4000000 		.word	.LC11
 1236 0320 08010000 		.word	.LC12
 1237 0324 1C010000 		.word	.LC13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 32


 1238 0328 28000000 		.word	modem_info+40
 1239 032c 48010000 		.word	.LC14
 1240 0330 58010000 		.word	.LC15
 1241 0334 00000000 		.word	system_settings
 1242 0338 68010000 		.word	.LC16
 1243 033c 6C010000 		.word	.LC17
 1244 0340 70010000 		.word	.LC18
 1245 0344 78010000 		.word	.LC19
 1246 0348 80010000 		.word	.LC20
 1247 034c 98010000 		.word	.LC21
 1248 0350 B4010000 		.word	.LC22
 1249 0354 B8010000 		.word	.LC23
 1250 0358 D34D6210 		.word	274877907
 1251 035c 00407F40 		.word	1082081280
 1252 0360 BC010000 		.word	.LC24
 1253 0364 D4010000 		.word	.LC25
 1254 0368 E8010000 		.word	.LC26
 1255 036c EC010000 		.word	.LC27
 1256 0370 FC010000 		.word	.LC28
 1257 0374 00020000 		.word	.LC29
 1258              	.L40:
 443:notoriOS.c    ****             }else{
 444:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
 1259              		.loc 1 444 0
 1260 0378 07F1CC03 		add	r3, r7, #204
 1261 037c 41F28832 		movw	r2, #5000
 1262 0380 2E49     		ldr	r1, .L48
 1263 0382 1846     		mov	r0, r3
 1264 0384 FFF7FEFF 		bl	at_write_command
 1265 0388 0346     		mov	r3, r0
 1266 038a 87F84535 		strb	r3, [r7, #1349]
 1267              	.L41:
 1268              	.LBE6:
 427:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1269              		.loc 1 427 0 discriminator 2
 1270 038e 97F94B35 		ldrsb	r3, [r7, #1355]
 1271 0392 DBB2     		uxtb	r3, r3
 1272 0394 0133     		adds	r3, r3, #1
 1273 0396 DBB2     		uxtb	r3, r3
 1274 0398 87F84B35 		strb	r3, [r7, #1355]
 1275              	.L39:
 427:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1276              		.loc 1 427 0 is_stmt 0 discriminator 1
 1277 039c 97F94B25 		ldrsb	r2, [r7, #1355]
 1278 03a0 97F94435 		ldrsb	r3, [r7, #1348]
 1279 03a4 9A42     		cmp	r2, r3
 1280 03a6 FFF65EAF 		blt	.L42
 1281              	.LBE5:
 445:notoriOS.c    ****             }
 446:notoriOS.c    ****             
 447:notoriOS.c    ****         }
 448:notoriOS.c    ****         
 449:notoriOS.c    ****         // Read received buffer
 450:notoriOS.c    ****         // A good write will return code "OS-OK"
 451:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 452:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 453:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 33


 1282              		.loc 1 453 0 is_stmt 1
 1283 03aa 41F28832 		movw	r2, #5000
 1284 03ae 2449     		ldr	r1, .L48+4
 1285 03b0 2448     		ldr	r0, .L48+8
 1286 03b2 FFF7FEFF 		bl	at_write_command
 1287 03b6 0346     		mov	r3, r0
 1288 03b8 87F84535 		strb	r3, [r7, #1349]
 454:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 455:notoriOS.c    ****     
 456:notoriOS.c    ****   
 457:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 458:notoriOS.c    ****         if(status == 1u){
 1289              		.loc 1 458 0
 1290 03bc 97F84535 		ldrb	r3, [r7, #1349]	@ zero_extendqisi2
 1291 03c0 012B     		cmp	r3, #1
 1292 03c2 1DD1     		bne	.L43
 1293              	.LBB7:
 459:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1294              		.loc 1 459 0
 1295 03c4 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 460:notoriOS.c    ****             Clear_Data_Stack();
 1296              		.loc 1 460 0
 1297 03c8 FFF7FEFF 		bl	Clear_Data_Stack
 461:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1298              		.loc 1 461 0
 1299 03cc FFF7FEFF 		bl	getTimeStamp
 1300 03d0 0246     		mov	r2, r0
 1301 03d2 1D4B     		ldr	r3, .L48+12
 1302 03d4 1B68     		ldr	r3, [r3]
 1303 03d6 D31A     		subs	r3, r2, r3
 1304 03d8 C7F84035 		str	r3, [r7, #1344]
 462:notoriOS.c    ****             char s_send_time[10];
 463:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1305              		.loc 1 463 0
 1306 03dc 07F59760 		add	r0, r7, #1208
 1307 03e0 D7F84035 		ldr	r3, [r7, #1344]
 1308 03e4 194A     		ldr	r2, .L48+16
 1309 03e6 0A21     		movs	r1, #10
 1310 03e8 FFF7FEFF 		bl	snprintf
 464:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1311              		.loc 1 464 0
 1312 03ec FFF7FEFF 		bl	getTimeStamp
 1313 03f0 0246     		mov	r2, r0
 1314 03f2 07F59763 		add	r3, r7, #1208
 1315 03f6 1946     		mov	r1, r3
 1316 03f8 1548     		ldr	r0, .L48+20
 1317 03fa FFF7FEFF 		bl	pushData
 1318              	.LBE7:
 1319 03fe 03E0     		b	.L44
 1320              	.L43:
 465:notoriOS.c    ****         }else{
 466:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1321              		.loc 1 466 0
 1322 0400 1449     		ldr	r1, .L48+24
 1323 0402 0220     		movs	r0, #2
 1324 0404 FFF7FEFF 		bl	printNotif
 1325              	.L44:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 34


 467:notoriOS.c    ****         }
 468:notoriOS.c    ****          
 469:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 470:notoriOS.c    ****         long network_time = modem_get_network_time();
 1326              		.loc 1 470 0
 1327 0408 FFF7FEFF 		bl	modem_get_network_time
 1328 040c C7F83C05 		str	r0, [r7, #1340]
 471:notoriOS.c    ****         if(network_time != 0){
 1329              		.loc 1 471 0
 1330 0410 D7F83C35 		ldr	r3, [r7, #1340]
 1331 0414 002B     		cmp	r3, #0
 1332 0416 03D0     		beq	.L45
 472:notoriOS.c    ****            setTime(network_time);
 1333              		.loc 1 472 0
 1334 0418 D7F83C05 		ldr	r0, [r7, #1340]
 1335 041c FFF7FEFF 		bl	setTime
 1336              	.L45:
 473:notoriOS.c    ****         }
 474:notoriOS.c    ****         
 475:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 476:notoriOS.c    ****         // If not -- keep the statck and try next time
 477:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 478:notoriOS.c    ****         modem_power_down();
 1337              		.loc 1 478 0
 1338 0420 FFF7FEFF 		bl	modem_power_down
 479:notoriOS.c    ****         
 480:notoriOS.c    ****         try_counter = 0u;
 1339              		.loc 1 480 0
 1340 0424 0C4B     		ldr	r3, .L48+28
 1341 0426 0022     		movs	r2, #0
 1342 0428 1A70     		strb	r2, [r3]
 481:notoriOS.c    ****         return 0u;
 1343              		.loc 1 481 0
 1344 042a 0023     		movs	r3, #0
 1345 042c 00E0     		b	.L33
 1346              	.L36:
 1347              	.LBE2:
 482:notoriOS.c    ****     }
 483:notoriOS.c    ****       
 484:notoriOS.c    ****       return 1u; // Not done yet
 1348              		.loc 1 484 0
 1349 042e 0123     		movs	r3, #1
 1350              	.L33:
 485:notoriOS.c    **** }
 1351              		.loc 1 485 0 discriminator 1
 1352 0430 1846     		mov	r0, r3
 1353 0432 07F25457 		addw	r7, r7, #1364
 1354              		.cfi_def_cfa_offset 12
 1355 0436 BD46     		mov	sp, r7
 1356              		.cfi_def_cfa_register 13
 1357              		@ sp needed
 1358 0438 90BD     		pop	{r4, r7, pc}
 1359              	.L49:
 1360 043a 00BF     		.align	2
 1361              	.L48:
 1362 043c 10020000 		.word	.LC30
 1363 0440 18020000 		.word	.LC31
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 35


 1364 0444 20020000 		.word	.LC32
 1365 0448 00000000 		.word	modem_start_time_stamp
 1366 044c C4000000 		.word	.LC6
 1367 0450 34020000 		.word	.LC33
 1368 0454 44020000 		.word	.LC34
 1369 0458 00000000 		.word	try_counter
 1370              		.cfi_endproc
 1371              	.LFE74:
 1372              		.size	syncData, .-syncData
 1373              		.section	.text.configureRemoteParams,"ax",%progbits
 1374              		.align	2
 1375              		.global	configureRemoteParams
 1376              		.thumb
 1377              		.thumb_func
 1378              		.type	configureRemoteParams, %function
 1379              	configureRemoteParams:
 1380              	.LFB75:
 486:notoriOS.c    **** 
 487:notoriOS.c    **** // ==============================================
 488:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 489:notoriOS.c    **** // Returns 0 when done
 490:notoriOS.c    **** // ==============================================
 491:notoriOS.c    **** uint8 configureRemoteParams(){
 1381              		.loc 1 491 0
 1382              		.cfi_startproc
 1383              		@ args = 0, pretend = 0, frame = 8
 1384              		@ frame_needed = 1, uses_anonymous_args = 0
 1385 0000 80B5     		push	{r7, lr}
 1386              		.cfi_def_cfa_offset 8
 1387              		.cfi_offset 7, -8
 1388              		.cfi_offset 14, -4
 1389 0002 82B0     		sub	sp, sp, #8
 1390              		.cfi_def_cfa_offset 16
 1391 0004 00AF     		add	r7, sp, #0
 1392              		.cfi_def_cfa_register 7
 492:notoriOS.c    ****     
 493:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1393              		.loc 1 493 0
 1394 0006 FFF7FEFF 		bl	modem_get_state
 1395 000a 0346     		mov	r3, r0
 1396 000c 002B     		cmp	r3, #0
 1397 000e 02D1     		bne	.L51
 494:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 495:notoriOS.c    ****         modem_power_up();
 1398              		.loc 1 495 0
 1399 0010 FFF7FEFF 		bl	modem_power_up
 1400 0014 11E0     		b	.L52
 1401              	.L51:
 496:notoriOS.c    ****             
 497:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1402              		.loc 1 497 0
 1403 0016 FFF7FEFF 		bl	modem_get_state
 1404 001a 0346     		mov	r3, r0
 1405 001c 042B     		cmp	r3, #4
 1406 001e 0CD1     		bne	.L52
 1407              	.LBB8:
 498:notoriOS.c    ****         
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 36


 499:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 500:notoriOS.c    ****         
 501:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 502:notoriOS.c    ****         long network_time = modem_get_network_time();
 1408              		.loc 1 502 0
 1409 0020 FFF7FEFF 		bl	modem_get_network_time
 1410 0024 7860     		str	r0, [r7, #4]
 503:notoriOS.c    ****         if(network_time != 0){
 1411              		.loc 1 503 0
 1412 0026 7B68     		ldr	r3, [r7, #4]
 1413 0028 002B     		cmp	r3, #0
 1414 002a 02D0     		beq	.L53
 504:notoriOS.c    ****             setTime(network_time);
 1415              		.loc 1 504 0
 1416 002c 7868     		ldr	r0, [r7, #4]
 1417 002e FFF7FEFF 		bl	setTime
 1418              	.L53:
 505:notoriOS.c    ****         }
 506:notoriOS.c    ****         
 507:notoriOS.c    ****         // Get GPS coordinates
 508:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 509:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 510:notoriOS.c    ****         modem_power_down();
 1419              		.loc 1 510 0
 1420 0032 FFF7FEFF 		bl	modem_power_down
 511:notoriOS.c    ****         return 0u;
 1421              		.loc 1 511 0
 1422 0036 0023     		movs	r3, #0
 1423 0038 00E0     		b	.L54
 1424              	.L52:
 1425              	.LBE8:
 512:notoriOS.c    ****         
 513:notoriOS.c    ****     }
 514:notoriOS.c    ****     
 515:notoriOS.c    ****     return 1u;
 1426              		.loc 1 515 0
 1427 003a 0123     		movs	r3, #1
 1428              	.L54:
 516:notoriOS.c    **** }
 1429              		.loc 1 516 0
 1430 003c 1846     		mov	r0, r3
 1431 003e 0837     		adds	r7, r7, #8
 1432              		.cfi_def_cfa_offset 8
 1433 0040 BD46     		mov	sp, r7
 1434              		.cfi_def_cfa_register 13
 1435              		@ sp needed
 1436 0042 80BD     		pop	{r7, pc}
 1437              		.cfi_endproc
 1438              	.LFE75:
 1439              		.size	configureRemoteParams, .-configureRemoteParams
 1440              		.section	.rodata
 1441 026f 00       		.align	2
 1442              	.LC35:
 1443 0270 256C6400 		.ascii	"%ld\000"
 1444              		.align	2
 1445              	.LC36:
 1446 0274 6D617862 		.ascii	"maxbotix_depth=%s\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 37


 1446      6F746978 
 1446      5F646570 
 1446      74683D25 
 1446      7300
 1447 0286 0000     		.align	2
 1448              	.LC37:
 1449 0288 6D617862 		.ascii	"maxbotix_depth\000"
 1449      6F746978 
 1449      5F646570 
 1449      746800
 1450 0297 00       		.align	2
 1451              	.LC38:
 1452 0298 612B00   		.ascii	"a+\000"
 1453 029b 00       		.align	2
 1454              	.LC39:
 1455 029c 206D6178 		.ascii	" maxbotix_depth: \000"
 1455      626F7469 
 1455      785F6465 
 1455      7074683A 
 1455      2000
 1456 02ae 0000     		.align	2
 1457              	.LC40:
 1458 02b0 2000     		.ascii	" \000"
 1459 02b2 0000     		.align	2
 1460              	.LC41:
 1461 02b4 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 1461      64206E6F 
 1461      74206765 
 1461      74207661 
 1461      6C696420 
 1462              		.global	__aeabi_f2d
 1463              		.align	2
 1464              	.LC42:
 1465 02e0 252E3266 		.ascii	"%.2f\000"
 1465      00
 1466 02e5 000000   		.align	2
 1467              	.LC43:
 1468 02e8 765F6261 		.ascii	"v_bat=%s\000"
 1468      743D2573 
 1468      00
 1469 02f1 000000   		.align	2
 1470              	.LC44:
 1471 02f4 765F6261 		.ascii	"v_bat\000"
 1471      7400
 1472 02fa 0000     		.align	2
 1473              	.LC45:
 1474 02fc 20766261 		.ascii	" vbat: \000"
 1474      743A2000 
 1475              		.align	2
 1476              	.LC46:
 1477 0304 70726573 		.ascii	"pressure_current=%s\000"
 1477      73757265 
 1477      5F637572 
 1477      72656E74 
 1477      3D257300 
 1478              		.align	2
 1479              	.LC47:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 38


 1480 0318 70726573 		.ascii	"pressure_current\000"
 1480      73757265 
 1480      5F637572 
 1480      72656E74 
 1480      00
 1481 0329 000000   		.align	2
 1482              	.LC48:
 1483 032c 20707265 		.ascii	" pressure_current: \000"
 1483      73737572 
 1483      655F6375 
 1483      7272656E 
 1483      743A2000 
 1484              		.align	2
 1485              	.LC49:
 1486 0340 70726573 		.ascii	"pressure_depth=%s\000"
 1486      73757265 
 1486      5F646570 
 1486      74683D25 
 1486      7300
 1487 0352 0000     		.align	2
 1488              	.LC50:
 1489 0354 70726573 		.ascii	"pressure_depth\000"
 1489      73757265 
 1489      5F646570 
 1489      746800
 1490 0363 00       		.align	2
 1491              	.LC51:
 1492 0364 20707265 		.ascii	" pressure_depth: \000"
 1492      73737572 
 1492      655F6465 
 1492      7074683A 
 1492      2000
 1493 0376 0000     		.align	2
 1494              	.LC52:
 1495 0378 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1495      64206E6F 
 1495      74206765 
 1495      74207661 
 1495      6C696420 
 1496              		.section	.text.makeMeasurements,"ax",%progbits
 1497              		.align	2
 1498              		.global	makeMeasurements
 1499              		.thumb
 1500              		.thumb_func
 1501              		.type	makeMeasurements, %function
 1502              	makeMeasurements:
 1503              	.LFB76:
 517:notoriOS.c    **** 
 518:notoriOS.c    **** 
 519:notoriOS.c    **** // ==============================================
 520:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 521:notoriOS.c    **** // Returns 0 when finished
 522:notoriOS.c    **** // ==============================================
 523:notoriOS.c    **** uint8 makeMeasurements(){
 1504              		.loc 1 523 0
 1505              		.cfi_startproc
 1506              		@ args = 0, pretend = 0, frame = 120
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 39


 1507              		@ frame_needed = 1, uses_anonymous_args = 0
 1508 0000 90B5     		push	{r4, r7, lr}
 1509              		.cfi_def_cfa_offset 12
 1510              		.cfi_offset 4, -12
 1511              		.cfi_offset 7, -8
 1512              		.cfi_offset 14, -4
 1513 0002 A1B0     		sub	sp, sp, #132
 1514              		.cfi_def_cfa_offset 144
 1515 0004 02AF     		add	r7, sp, #8
 1516              		.cfi_def_cfa 7, 136
 524:notoriOS.c    ****     
 525:notoriOS.c    ****     // Get clock time and save to timeStamp
 526:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1517              		.loc 1 526 0
 1518 0006 FFF7FEFF 		bl	getTimeStamp
 1519 000a 7867     		str	r0, [r7, #116]
 527:notoriOS.c    ****     char c_timeStamp[32];
 528:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1520              		.loc 1 528 0
 1521 000c 07F15400 		add	r0, r7, #84
 1522 0010 7B6F     		ldr	r3, [r7, #116]
 1523 0012 834A     		ldr	r2, .L63
 1524 0014 2021     		movs	r1, #32
 1525 0016 FFF7FEFF 		bl	snprintf
 529:notoriOS.c    ****     
 530:notoriOS.c    ****     // Holds string for value that will be written 
 531:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 532:notoriOS.c    ****     
 533:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 534:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 1526              		.loc 1 534 0
 1527 001a 824B     		ldr	r3, .L63+4
 1528 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1529 001e 002B     		cmp	r3, #0
 1530 0020 3BD1     		bne	.L56
 1531              	.LBB9:
 535:notoriOS.c    ****         
 536:notoriOS.c    ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
 537:notoriOS.c    ****         level_sensor_t m_level_sensor;
 538:notoriOS.c    ****         
 539:notoriOS.c    ****         // Take level sensor readings and save them to m_level_sensor
 540:notoriOS.c    ****         m_level_sensor = level_sensor_take_reading();
 1532              		.loc 1 540 0
 1533 0022 07F11003 		add	r3, r7, #16
 1534 0026 1846     		mov	r0, r3
 1535 0028 FFF7FEFF 		bl	level_sensor_take_reading
 541:notoriOS.c    ****     
 542:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 543:notoriOS.c    ****         if(m_level_sensor.num_valid_readings > 0){
 1536              		.loc 1 543 0
 1537 002c 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1538 0030 002B     		cmp	r3, #0
 1539 0032 2ED0     		beq	.L57
 544:notoriOS.c    ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 1540              		.loc 1 544 0
 1541 0034 B7F92630 		ldrsh	r3, [r7, #38]
 1542 0038 07F14000 		add	r0, r7, #64
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 40


 1543 003c 7A4A     		ldr	r2, .L63+8
 1544 003e 1421     		movs	r1, #20
 1545 0040 FFF7FEFF 		bl	snprintf
 545:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 1546              		.loc 1 545 0
 1547 0044 07F14003 		add	r3, r7, #64
 1548 0048 1A46     		mov	r2, r3
 1549 004a 7849     		ldr	r1, .L63+12
 1550 004c 0020     		movs	r0, #0
 1551 004e FFF7FEFF 		bl	printNotif
 546:notoriOS.c    ****             pushData("maxbotix_depth",value,timeStamp);
 1552              		.loc 1 546 0
 1553 0052 07F14003 		add	r3, r7, #64
 1554 0056 7A6F     		ldr	r2, [r7, #116]
 1555 0058 1946     		mov	r1, r3
 1556 005a 7548     		ldr	r0, .L63+16
 1557 005c FFF7FEFF 		bl	pushData
 547:notoriOS.c    ****             
 548:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 549:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1558              		.loc 1 549 0
 1559 0060 07F15403 		add	r3, r7, #84
 1560 0064 1A46     		mov	r2, r3
 1561 0066 7349     		ldr	r1, .L63+20
 1562 0068 7348     		ldr	r0, .L63+24
 1563 006a FFF7FEFF 		bl	SD_write
 550:notoriOS.c    ****             SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 1564              		.loc 1 550 0
 1565 006e 734A     		ldr	r2, .L63+28
 1566 0070 7049     		ldr	r1, .L63+20
 1567 0072 7148     		ldr	r0, .L63+24
 1568 0074 FFF7FEFF 		bl	SD_write
 551:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1569              		.loc 1 551 0
 1570 0078 07F14003 		add	r3, r7, #64
 1571 007c 1A46     		mov	r2, r3
 1572 007e 6D49     		ldr	r1, .L63+20
 1573 0080 6D48     		ldr	r0, .L63+24
 1574 0082 FFF7FEFF 		bl	SD_write
 552:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1575              		.loc 1 552 0
 1576 0086 6E4A     		ldr	r2, .L63+32
 1577 0088 6A49     		ldr	r1, .L63+20
 1578 008a 6B48     		ldr	r0, .L63+24
 1579 008c FFF7FEFF 		bl	SD_write
 1580 0090 03E0     		b	.L56
 1581              	.L57:
 553:notoriOS.c    ****         }else{
 554:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 1582              		.loc 1 554 0
 1583 0092 6C49     		ldr	r1, .L63+36
 1584 0094 0220     		movs	r0, #2
 1585 0096 FFF7FEFF 		bl	printNotif
 1586              	.L56:
 1587              	.LBE9:
 555:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 556:notoriOS.c    ****         }
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 41


 557:notoriOS.c    ****     }
 558:notoriOS.c    ****     
 559:notoriOS.c    ****     
 560:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 561:notoriOS.c    ****     voltage_t m_voltage;
 562:notoriOS.c    ****     
 563:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 564:notoriOS.c    ****     m_voltage = voltage_take_readings();
 1588              		.loc 1 564 0
 1589 009a 07F12C03 		add	r3, r7, #44
 1590 009e 1846     		mov	r0, r3
 1591 00a0 FFF7FEFF 		bl	voltage_take_readings
 565:notoriOS.c    ****     
 566:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 567:notoriOS.c    ****     if(m_voltage.valid){
 1592              		.loc 1 567 0
 1593 00a4 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 1594 00a8 002B     		cmp	r3, #0
 1595 00aa 00F0AF80 		beq	.L59
 568:notoriOS.c    ****         // battery voltage data
 569:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 1596              		.loc 1 569 0
 1597 00ae FB6A     		ldr	r3, [r7, #44]	@ float
 1598 00b0 1846     		mov	r0, r3
 1599 00b2 FFF7FEFF 		bl	__aeabi_f2d
 1600 00b6 0346     		mov	r3, r0
 1601 00b8 0C46     		mov	r4, r1
 1602 00ba 07F14000 		add	r0, r7, #64
 1603 00be CDE90034 		strd	r3, [sp]
 1604 00c2 614A     		ldr	r2, .L63+40
 1605 00c4 1421     		movs	r1, #20
 1606 00c6 FFF7FEFF 		bl	snprintf
 570:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 1607              		.loc 1 570 0
 1608 00ca 07F14003 		add	r3, r7, #64
 1609 00ce 1A46     		mov	r2, r3
 1610 00d0 5E49     		ldr	r1, .L63+44
 1611 00d2 0020     		movs	r0, #0
 1612 00d4 FFF7FEFF 		bl	printNotif
 571:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
 1613              		.loc 1 571 0
 1614 00d8 07F14003 		add	r3, r7, #64
 1615 00dc 7A6F     		ldr	r2, [r7, #116]
 1616 00de 1946     		mov	r1, r3
 1617 00e0 5B48     		ldr	r0, .L63+48
 1618 00e2 FFF7FEFF 		bl	pushData
 572:notoriOS.c    ****         
 573:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 574:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 1619              		.loc 1 574 0
 1620 00e6 564A     		ldr	r2, .L63+32
 1621 00e8 5249     		ldr	r1, .L63+20
 1622 00ea 5348     		ldr	r0, .L63+24
 1623 00ec FFF7FEFF 		bl	SD_write
 575:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 1624              		.loc 1 575 0
 1625 00f0 07F15403 		add	r3, r7, #84
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 42


 1626 00f4 1A46     		mov	r2, r3
 1627 00f6 4F49     		ldr	r1, .L63+20
 1628 00f8 4F48     		ldr	r0, .L63+24
 1629 00fa FFF7FEFF 		bl	SD_write
 576:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 1630              		.loc 1 576 0
 1631 00fe 554A     		ldr	r2, .L63+52
 1632 0100 4C49     		ldr	r1, .L63+20
 1633 0102 4D48     		ldr	r0, .L63+24
 1634 0104 FFF7FEFF 		bl	SD_write
 577:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1635              		.loc 1 577 0
 1636 0108 07F14003 		add	r3, r7, #64
 1637 010c 1A46     		mov	r2, r3
 1638 010e 4949     		ldr	r1, .L63+20
 1639 0110 4948     		ldr	r0, .L63+24
 1640 0112 FFF7FEFF 		bl	SD_write
 578:notoriOS.c    ****         
 579:notoriOS.c    ****         // If node type is green infrastructure node, take pressure transducer measurements
 580:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE){
 1641              		.loc 1 580 0
 1642 0116 434B     		ldr	r3, .L63+4
 1643 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1644 011a 012B     		cmp	r3, #1
 1645 011c 7AD1     		bne	.L61
 1646              	.LBB10:
 581:notoriOS.c    ****             
 582:notoriOS.c    ****             // pressure transducer voltage (V) data
 583:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 584:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 585:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 586:notoriOS.c    ****             
 587:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 588:notoriOS.c    ****             pressure_t m_pressure;
 589:notoriOS.c    ****             
 590:notoriOS.c    ****             // Make pressure transducer calculators for current and depth
 591:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 1647              		.loc 1 591 0
 1648 011e 3C46     		mov	r4, r7
 1649 0120 6A46     		mov	r2, sp
 1650 0122 07F13803 		add	r3, r7, #56
 1651 0126 93E80300 		ldmia	r3, {r0, r1}
 1652 012a 82E80300 		stmia	r2, {r0, r1}
 1653 012e 07F12C03 		add	r3, r7, #44
 1654 0132 0ECB     		ldmia	r3, {r1, r2, r3}
 1655 0134 2046     		mov	r0, r4
 1656 0136 FFF7FEFF 		bl	pressure_calculations
 592:notoriOS.c    ****             
 593:notoriOS.c    ****             // pressure transducer current (mA) data
 594:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 1657              		.loc 1 594 0
 1658 013a BB68     		ldr	r3, [r7, #8]	@ float
 1659 013c 1846     		mov	r0, r3
 1660 013e FFF7FEFF 		bl	__aeabi_f2d
 1661 0142 0346     		mov	r3, r0
 1662 0144 0C46     		mov	r4, r1
 1663 0146 07F14000 		add	r0, r7, #64
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 43


 1664 014a CDE90034 		strd	r3, [sp]
 1665 014e 3E4A     		ldr	r2, .L63+40
 1666 0150 1421     		movs	r1, #20
 1667 0152 FFF7FEFF 		bl	snprintf
 595:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 1668              		.loc 1 595 0
 1669 0156 07F14003 		add	r3, r7, #64
 1670 015a 1A46     		mov	r2, r3
 1671 015c 3E49     		ldr	r1, .L63+56
 1672 015e 0020     		movs	r0, #0
 1673 0160 FFF7FEFF 		bl	printNotif
 596:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 1674              		.loc 1 596 0
 1675 0164 07F14003 		add	r3, r7, #64
 1676 0168 7A6F     		ldr	r2, [r7, #116]
 1677 016a 1946     		mov	r1, r3
 1678 016c 3B48     		ldr	r0, .L63+60
 1679 016e FFF7FEFF 		bl	pushData
 597:notoriOS.c    ****             
 598:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 599:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1680              		.loc 1 599 0
 1681 0172 334A     		ldr	r2, .L63+32
 1682 0174 2F49     		ldr	r1, .L63+20
 1683 0176 3048     		ldr	r0, .L63+24
 1684 0178 FFF7FEFF 		bl	SD_write
 600:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1685              		.loc 1 600 0
 1686 017c 07F15403 		add	r3, r7, #84
 1687 0180 1A46     		mov	r2, r3
 1688 0182 2C49     		ldr	r1, .L63+20
 1689 0184 2C48     		ldr	r0, .L63+24
 1690 0186 FFF7FEFF 		bl	SD_write
 601:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 1691              		.loc 1 601 0
 1692 018a 354A     		ldr	r2, .L63+64
 1693 018c 2949     		ldr	r1, .L63+20
 1694 018e 2A48     		ldr	r0, .L63+24
 1695 0190 FFF7FEFF 		bl	SD_write
 602:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1696              		.loc 1 602 0
 1697 0194 07F14003 		add	r3, r7, #64
 1698 0198 1A46     		mov	r2, r3
 1699 019a 2649     		ldr	r1, .L63+20
 1700 019c 2648     		ldr	r0, .L63+24
 1701 019e FFF7FEFF 		bl	SD_write
 603:notoriOS.c    ****             
 604:notoriOS.c    ****             // pressure transducer depth (ft) data
 605:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 1702              		.loc 1 605 0
 1703 01a2 FB68     		ldr	r3, [r7, #12]	@ float
 1704 01a4 1846     		mov	r0, r3
 1705 01a6 FFF7FEFF 		bl	__aeabi_f2d
 1706 01aa 0346     		mov	r3, r0
 1707 01ac 0C46     		mov	r4, r1
 1708 01ae 07F14000 		add	r0, r7, #64
 1709 01b2 CDE90034 		strd	r3, [sp]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 44


 1710 01b6 244A     		ldr	r2, .L63+40
 1711 01b8 1421     		movs	r1, #20
 1712 01ba FFF7FEFF 		bl	snprintf
 606:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 1713              		.loc 1 606 0
 1714 01be 07F14003 		add	r3, r7, #64
 1715 01c2 1A46     		mov	r2, r3
 1716 01c4 2749     		ldr	r1, .L63+68
 1717 01c6 0020     		movs	r0, #0
 1718 01c8 FFF7FEFF 		bl	printNotif
 607:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 1719              		.loc 1 607 0
 1720 01cc 07F14003 		add	r3, r7, #64
 1721 01d0 7A6F     		ldr	r2, [r7, #116]
 1722 01d2 1946     		mov	r1, r3
 1723 01d4 2448     		ldr	r0, .L63+72
 1724 01d6 FFF7FEFF 		bl	pushData
 608:notoriOS.c    ****             
 609:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 610:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1725              		.loc 1 610 0
 1726 01da 194A     		ldr	r2, .L63+32
 1727 01dc 1549     		ldr	r1, .L63+20
 1728 01de 1648     		ldr	r0, .L63+24
 1729 01e0 FFF7FEFF 		bl	SD_write
 611:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1730              		.loc 1 611 0
 1731 01e4 07F15403 		add	r3, r7, #84
 1732 01e8 1A46     		mov	r2, r3
 1733 01ea 1249     		ldr	r1, .L63+20
 1734 01ec 1248     		ldr	r0, .L63+24
 1735 01ee FFF7FEFF 		bl	SD_write
 612:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
 1736              		.loc 1 612 0
 1737 01f2 1E4A     		ldr	r2, .L63+76
 1738 01f4 0F49     		ldr	r1, .L63+20
 1739 01f6 1048     		ldr	r0, .L63+24
 1740 01f8 FFF7FEFF 		bl	SD_write
 613:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1741              		.loc 1 613 0
 1742 01fc 07F14003 		add	r3, r7, #64
 1743 0200 1A46     		mov	r2, r3
 1744 0202 0C49     		ldr	r1, .L63+20
 1745 0204 0C48     		ldr	r0, .L63+24
 1746 0206 FFF7FEFF 		bl	SD_write
 1747 020a 03E0     		b	.L61
 1748              	.L59:
 1749              	.LBE10:
 614:notoriOS.c    ****         }    
 615:notoriOS.c    ****     }else{
 616:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 1750              		.loc 1 616 0
 1751 020c 1849     		ldr	r1, .L63+80
 1752 020e 0220     		movs	r0, #2
 1753 0210 FFF7FEFF 		bl	printNotif
 1754              	.L61:
 617:notoriOS.c    ****     }
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 45


 618:notoriOS.c    ****     
 619:notoriOS.c    ****     return 0u;
 1755              		.loc 1 619 0
 1756 0214 0023     		movs	r3, #0
 620:notoriOS.c    **** }
 1757              		.loc 1 620 0
 1758 0216 1846     		mov	r0, r3
 1759 0218 7C37     		adds	r7, r7, #124
 1760              		.cfi_def_cfa_offset 12
 1761 021a BD46     		mov	sp, r7
 1762              		.cfi_def_cfa_register 13
 1763              		@ sp needed
 1764 021c 90BD     		pop	{r4, r7, pc}
 1765              	.L64:
 1766 021e 00BF     		.align	2
 1767              	.L63:
 1768 0220 70020000 		.word	.LC35
 1769 0224 00000000 		.word	updatable_parameters
 1770 0228 C4000000 		.word	.LC6
 1771 022c 74020000 		.word	.LC36
 1772 0230 88020000 		.word	.LC37
 1773 0234 98020000 		.word	.LC38
 1774 0238 00000000 		.word	Data_fileName
 1775 023c 9C020000 		.word	.LC39
 1776 0240 B0020000 		.word	.LC40
 1777 0244 B4020000 		.word	.LC41
 1778 0248 E0020000 		.word	.LC42
 1779 024c E8020000 		.word	.LC43
 1780 0250 F4020000 		.word	.LC44
 1781 0254 FC020000 		.word	.LC45
 1782 0258 04030000 		.word	.LC46
 1783 025c 18030000 		.word	.LC47
 1784 0260 2C030000 		.word	.LC48
 1785 0264 40030000 		.word	.LC49
 1786 0268 54030000 		.word	.LC50
 1787 026c 64030000 		.word	.LC51
 1788 0270 78030000 		.word	.LC52
 1789              		.cfi_endproc
 1790              	.LFE76:
 1791              		.size	makeMeasurements, .-makeMeasurements
 1792              		.section	.rodata
 1793 039f 00       		.align	2
 1794              	.LC53:
 1795 03a0 4572726F 		.ascii	"Error setting system time.\000"
 1795      72207365 
 1795      7474696E 
 1795      67207379 
 1795      7374656D 
 1796              		.section	.text.setTime,"ax",%progbits
 1797              		.align	2
 1798              		.global	setTime
 1799              		.thumb
 1800              		.thumb_func
 1801              		.type	setTime, %function
 1802              	setTime:
 1803              	.LFB77:
 621:notoriOS.c    **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 46


 622:notoriOS.c    **** // ==============================================
 623:notoriOS.c    **** // Set the system time
 624:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 625:notoriOS.c    **** // ==============================================
 626:notoriOS.c    **** uint8 setTime(long timeStamp){
 1804              		.loc 1 626 0
 1805              		.cfi_startproc
 1806              		@ args = 0, pretend = 0, frame = 24
 1807              		@ frame_needed = 1, uses_anonymous_args = 0
 1808 0000 80B5     		push	{r7, lr}
 1809              		.cfi_def_cfa_offset 8
 1810              		.cfi_offset 7, -8
 1811              		.cfi_offset 14, -4
 1812 0002 86B0     		sub	sp, sp, #24
 1813              		.cfi_def_cfa_offset 32
 1814 0004 00AF     		add	r7, sp, #0
 1815              		.cfi_def_cfa_register 7
 1816 0006 7860     		str	r0, [r7, #4]
 627:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 628:notoriOS.c    ****     if(timeStamp <=0){
 1817              		.loc 1 628 0
 1818 0008 7B68     		ldr	r3, [r7, #4]
 1819 000a 002B     		cmp	r3, #0
 1820 000c 05DC     		bgt	.L66
 629:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 1821              		.loc 1 629 0
 1822 000e 1849     		ldr	r1, .L68
 1823 0010 0220     		movs	r0, #2
 1824 0012 FFF7FEFF 		bl	printNotif
 630:notoriOS.c    ****         return 0;  
 1825              		.loc 1 630 0
 1826 0016 0023     		movs	r3, #0
 1827 0018 25E0     		b	.L67
 1828              	.L66:
 631:notoriOS.c    ****     }
 632:notoriOS.c    ****     // Create a new pointer t of data structure tm
 633:notoriOS.c    ****     struct tm * t;
 634:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 635:notoriOS.c    ****     t = gmtime(&timeStamp);
 1829              		.loc 1 635 0
 1830 001a 3B1D     		adds	r3, r7, #4
 1831 001c 1846     		mov	r0, r3
 1832 001e FFF7FEFF 		bl	gmtime
 1833 0022 7861     		str	r0, [r7, #20]
 636:notoriOS.c    ****     
 637:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 638:notoriOS.c    ****     RTC_TIME_DATE localTime;
 639:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 1834              		.loc 1 639 0
 1835 0024 7B69     		ldr	r3, [r7, #20]
 1836 0026 1B68     		ldr	r3, [r3]
 1837 0028 DBB2     		uxtb	r3, r3
 1838 002a 3B72     		strb	r3, [r7, #8]
 640:notoriOS.c    ****     localTime.Min = t->tm_min;
 1839              		.loc 1 640 0
 1840 002c 7B69     		ldr	r3, [r7, #20]
 1841 002e 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 47


 1842 0030 DBB2     		uxtb	r3, r3
 1843 0032 7B72     		strb	r3, [r7, #9]
 641:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 1844              		.loc 1 641 0
 1845 0034 7B69     		ldr	r3, [r7, #20]
 1846 0036 9B68     		ldr	r3, [r3, #8]
 1847 0038 DBB2     		uxtb	r3, r3
 1848 003a BB72     		strb	r3, [r7, #10]
 642:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 1849              		.loc 1 642 0
 1850 003c 7B69     		ldr	r3, [r7, #20]
 1851 003e 5B69     		ldr	r3, [r3, #20]
 1852 0040 9BB2     		uxth	r3, r3
 1853 0042 03F26C73 		addw	r3, r3, #1900
 1854 0046 9BB2     		uxth	r3, r3
 1855 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 643:notoriOS.c    ****     localTime.Month = t->tm_mon;
 1856              		.loc 1 643 0
 1857 004a 7B69     		ldr	r3, [r7, #20]
 1858 004c 1B69     		ldr	r3, [r3, #16]
 1859 004e DBB2     		uxtb	r3, r3
 1860 0050 3B74     		strb	r3, [r7, #16]
 644:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 1861              		.loc 1 644 0
 1862 0052 7B69     		ldr	r3, [r7, #20]
 1863 0054 DB68     		ldr	r3, [r3, #12]
 1864 0056 DBB2     		uxtb	r3, r3
 1865 0058 3B73     		strb	r3, [r7, #12]
 645:notoriOS.c    **** 
 646:notoriOS.c    ****     // Writes time and date values as current time and date.
 647:notoriOS.c    ****     RTC_WriteTime(&localTime);
 1866              		.loc 1 647 0
 1867 005a 07F10803 		add	r3, r7, #8
 1868 005e 1846     		mov	r0, r3
 1869 0060 FFF7FEFF 		bl	RTC_WriteTime
 648:notoriOS.c    ****     
 649:notoriOS.c    ****     // Return 1 when the system time was set properly.
 650:notoriOS.c    ****     return 1;
 1870              		.loc 1 650 0
 1871 0064 0123     		movs	r3, #1
 1872              	.L67:
 651:notoriOS.c    **** }
 1873              		.loc 1 651 0
 1874 0066 1846     		mov	r0, r3
 1875 0068 1837     		adds	r7, r7, #24
 1876              		.cfi_def_cfa_offset 8
 1877 006a BD46     		mov	sp, r7
 1878              		.cfi_def_cfa_register 13
 1879              		@ sp needed
 1880 006c 80BD     		pop	{r7, pc}
 1881              	.L69:
 1882 006e 00BF     		.align	2
 1883              	.L68:
 1884 0070 A0030000 		.word	.LC53
 1885              		.cfi_endproc
 1886              	.LFE77:
 1887              		.size	setTime, .-setTime
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 48


 1888              		.section	.rodata
 1889 03bb 00       		.align	2
 1890              	.LC54:
 1891 03bc 75706772 		.ascii	"upgrade.hex\000"
 1891      6164652E 
 1891      68657800 
 1892              		.section	.text.upgraded,"ax",%progbits
 1893              		.align	2
 1894              		.global	upgraded
 1895              		.thumb
 1896              		.thumb_func
 1897              		.type	upgraded, %function
 1898              	upgraded:
 1899              	.LFB78:
 652:notoriOS.c    **** 
 653:notoriOS.c    **** //downloads and stores files on SD card
 654:notoriOS.c    **** 
 655:notoriOS.c    **** 
 656:notoriOS.c    **** 
 657:notoriOS.c    **** // ==============================================
 658:notoriOS.c    **** // Will they love it, will they hate it
 659:notoriOS.c    **** // Never fade it, I evade it
 660:notoriOS.c    **** // Cause I never really want to complicate it
 661:notoriOS.c    **** //      - Logic, Upgraded (2015)
 662:notoriOS.c    **** //
 663:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 664:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 665:notoriOS.c    **** // ==============================================
 666:notoriOS.c    **** 
 667:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 1900              		.loc 1 667 0
 1901              		.cfi_startproc
 1902              		@ args = 0, pretend = 0, frame = 232
 1903              		@ frame_needed = 1, uses_anonymous_args = 0
 1904 0000 80B5     		push	{r7, lr}
 1905              		.cfi_def_cfa_offset 8
 1906              		.cfi_offset 7, -8
 1907              		.cfi_offset 14, -4
 1908 0002 C0B0     		sub	sp, sp, #256
 1909              		.cfi_def_cfa_offset 264
 1910 0004 06AF     		add	r7, sp, #24
 1911              		.cfi_def_cfa 7, 240
 1912 0006 F860     		str	r0, [r7, #12]
 1913 0008 B960     		str	r1, [r7, #8]
 1914 000a 7A60     		str	r2, [r7, #4]
 668:notoriOS.c    ****     
 669:notoriOS.c    ****     uint8 upgrade_status = 0;
 1915              		.loc 1 669 0
 1916 000c 0023     		movs	r3, #0
 1917 000e 87F8E730 		strb	r3, [r7, #231]
 670:notoriOS.c    ****     
 671:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 672:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 1918              		.loc 1 672 0
 1919 0012 384B     		ldr	r3, .L74
 1920 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1921 0016 042B     		cmp	r3, #4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 49


 1922 0018 02D0     		beq	.L71
 673:notoriOS.c    ****         return upgrade_status;//where valid = 0
 1923              		.loc 1 673 0
 1924 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 1925 001e 65E0     		b	.L73
 1926              	.L71:
 674:notoriOS.c    ****     }
 675:notoriOS.c    ****     
 676:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 1927              		.loc 1 676 0
 1928 0020 354A     		ldr	r2, .L74+4
 1929 0022 07F1D803 		add	r3, r7, #216
 1930 0026 07CA     		ldmia	r2, {r0, r1, r2}
 1931 0028 83E80700 		stmia	r3, {r0, r1, r2}
 677:notoriOS.c    ****     //delete file, if one exisits already
 678:notoriOS.c    ****     SD_rmfile(fileName);
 1932              		.loc 1 678 0
 1933 002c 07F1D803 		add	r3, r7, #216
 1934 0030 1846     		mov	r0, r3
 1935 0032 FFF7FEFF 		bl	SD_rmfile
 679:notoriOS.c    ****     
 680:notoriOS.c    ****     // Create http request
 681:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 1936              		.loc 1 681 0
 1937 0036 314B     		ldr	r3, .L74+8
 1938 0038 0593     		str	r3, [sp, #20]
 1939 003a 0023     		movs	r3, #0
 1940 003c 0493     		str	r3, [sp, #16]
 1941 003e 304B     		ldr	r3, .L74+12
 1942 0040 0393     		str	r3, [sp, #12]
 1943 0042 304B     		ldr	r3, .L74+16
 1944 0044 0293     		str	r3, [sp, #8]
 1945 0046 304B     		ldr	r3, .L74+20
 1946 0048 0193     		str	r3, [sp, #4]
 1947 004a BB68     		ldr	r3, [r7, #8]
 1948 004c 0093     		str	r3, [sp]
 1949 004e 7B68     		ldr	r3, [r7, #4]
 1950 0050 FA68     		ldr	r2, [r7, #12]
 1951 0052 2E49     		ldr	r1, .L74+24
 1952 0054 2E48     		ldr	r0, .L74+28
 1953 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 682:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1954              		.loc 1 682 0
 1955 005a 2D4A     		ldr	r2, .L74+28
 1956 005c 2D49     		ldr	r1, .L74+32
 1957 005e 0020     		movs	r0, #0
 1958 0060 FFF7FEFF 		bl	printNotif
 683:notoriOS.c    ****     // Create array portConfig of size 200 characters
 684:notoriOS.c    ****     char portConfig[200];
 685:notoriOS.c    ****     // Print port configurations
 686:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 1959              		.loc 1 686 0
 1960 0064 07F11000 		add	r0, r7, #16
 1961 0068 FB68     		ldr	r3, [r7, #12]
 1962 006a 0093     		str	r3, [sp]
 1963 006c BB68     		ldr	r3, [r7, #8]
 1964 006e 2A4A     		ldr	r2, .L74+36
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 50


 1965 0070 C821     		movs	r1, #200
 1966 0072 FFF7FEFF 		bl	snprintf
 687:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1967              		.loc 1 687 0
 1968 0076 07F11003 		add	r3, r7, #16
 1969 007a 1A46     		mov	r2, r3
 1970 007c 2749     		ldr	r1, .L74+40
 1971 007e 0020     		movs	r0, #0
 1972 0080 FFF7FEFF 		bl	printNotif
 688:notoriOS.c    ****     // AT command to configure the port
 689:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 1973              		.loc 1 689 0
 1974 0084 07F11003 		add	r3, r7, #16
 1975 0088 42F21072 		movw	r2, #10000
 1976 008c 2449     		ldr	r1, .L74+44
 1977 008e 1846     		mov	r0, r3
 1978 0090 FFF7FEFF 		bl	at_write_command
 1979 0094 0346     		mov	r3, r0
 1980 0096 87F8E730 		strb	r3, [r7, #231]
 690:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 691:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 692:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 1981              		.loc 1 692 0
 1982 009a 4FF47A72 		mov	r2, #1000
 1983 009e 2149     		ldr	r1, .L74+48
 1984 00a0 2148     		ldr	r0, .L74+52
 1985 00a2 FFF7FEFF 		bl	at_write_command
 1986 00a6 0346     		mov	r3, r0
 1987 00a8 87F8E730 		strb	r3, [r7, #231]
 693:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 694:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 1988              		.loc 1 694 0
 1989 00ac 1848     		ldr	r0, .L74+28
 1990 00ae FFF7FEFF 		bl	strlen
 1991 00b2 0346     		mov	r3, r0
 1992 00b4 1A46     		mov	r2, r3
 1993 00b6 164B     		ldr	r3, .L74+28
 1994 00b8 1344     		add	r3, r3, r2
 1995 00ba 1C49     		ldr	r1, .L74+56
 1996 00bc 1A46     		mov	r2, r3
 1997 00be 0B46     		mov	r3, r1
 1998 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 1999 00c2 1380     		strh	r3, [r2]	@ unaligned
 695:notoriOS.c    ****     // AT command to send http request
 696:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
 2000              		.loc 1 696 0
 2001 00c4 41F28832 		movw	r2, #5000
 2002 00c8 1549     		ldr	r1, .L74+44
 2003 00ca 1148     		ldr	r0, .L74+28
 2004 00cc FFF7FEFF 		bl	at_write_command
 2005 00d0 0346     		mov	r3, r0
 2006 00d2 87F8E730 		strb	r3, [r7, #231]
 697:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 698:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 699:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 2007              		.loc 1 699 0
 2008 00d6 41F28832 		movw	r2, #5000
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 51


 2009 00da 1549     		ldr	r1, .L74+60
 2010 00dc 1548     		ldr	r0, .L74+64
 2011 00de FFF7FEFF 		bl	at_write_command
 2012 00e2 0346     		mov	r3, r0
 2013 00e4 87F8E730 		strb	r3, [r7, #231]
 700:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 701:notoriOS.c    ****     
 702:notoriOS.c    ****     
 703:notoriOS.c    ****     return upgrade_status;
 2014              		.loc 1 703 0
 2015 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2016              	.L73:
 704:notoriOS.c    ****     
 705:notoriOS.c    **** }
 2017              		.loc 1 705 0 discriminator 1
 2018 00ec 1846     		mov	r0, r3
 2019 00ee E837     		adds	r7, r7, #232
 2020              		.cfi_def_cfa_offset 8
 2021 00f0 BD46     		mov	sp, r7
 2022              		.cfi_def_cfa_register 13
 2023              		@ sp needed
 2024 00f2 80BD     		pop	{r7, pc}
 2025              	.L75:
 2026              		.align	2
 2027              	.L74:
 2028 00f4 00000000 		.word	modem_state
 2029 00f8 BC030000 		.word	.LC54
 2030 00fc 68010000 		.word	.LC16
 2031 0100 6C010000 		.word	.LC17
 2032 0104 70010000 		.word	.LC18
 2033 0108 78010000 		.word	.LC19
 2034 010c 00000000 		.word	http_body
 2035 0110 00000000 		.word	http_request
 2036 0114 80010000 		.word	.LC20
 2037 0118 98010000 		.word	.LC21
 2038 011c B4010000 		.word	.LC22
 2039 0120 B8010000 		.word	.LC23
 2040 0124 E8010000 		.word	.LC26
 2041 0128 EC010000 		.word	.LC27
 2042 012c FC010000 		.word	.LC28
 2043 0130 18020000 		.word	.LC31
 2044 0134 20020000 		.word	.LC32
 2045              		.cfi_endproc
 2046              	.LFE78:
 2047              		.size	upgraded, .-upgraded
 2048              		.text
 2049              	.Letext0:
 2050              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2051              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2052              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2053              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 2054              		.file 6 "testing.h"
 2055              		.file 7 "level_sensor.h"
 2056              		.file 8 "voltages.h"
 2057              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2058              		.file 10 "data.h"
 2059              		.file 11 "modem.h"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 52


 2060              		.file 12 "notoriOS.h"
 2061              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 2062              		.section	.debug_info,"",%progbits
 2063              	.Ldebug_info0:
 2064 0000 0E0C0000 		.4byte	0xc0e
 2065 0004 0400     		.2byte	0x4
 2066 0006 00000000 		.4byte	.Ldebug_abbrev0
 2067 000a 04       		.byte	0x4
 2068 000b 01       		.uleb128 0x1
 2069 000c 74000000 		.4byte	.LASF160
 2070 0010 0C       		.byte	0xc
 2071 0011 CD070000 		.4byte	.LASF161
 2072 0015 40040000 		.4byte	.LASF162
 2073 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2074 001d 00000000 		.4byte	0
 2075 0021 00000000 		.4byte	.Ldebug_line0
 2076 0025 02       		.uleb128 0x2
 2077 0026 01       		.byte	0x1
 2078 0027 06       		.byte	0x6
 2079 0028 45000000 		.4byte	.LASF0
 2080 002c 02       		.uleb128 0x2
 2081 002d 01       		.byte	0x1
 2082 002e 08       		.byte	0x8
 2083 002f EA050000 		.4byte	.LASF1
 2084 0033 02       		.uleb128 0x2
 2085 0034 02       		.byte	0x2
 2086 0035 05       		.byte	0x5
 2087 0036 1F040000 		.4byte	.LASF2
 2088 003a 02       		.uleb128 0x2
 2089 003b 02       		.byte	0x2
 2090 003c 07       		.byte	0x7
 2091 003d 65070000 		.4byte	.LASF3
 2092 0041 03       		.uleb128 0x3
 2093 0042 2D070000 		.4byte	.LASF9
 2094 0046 02       		.byte	0x2
 2095 0047 3F       		.byte	0x3f
 2096 0048 4C000000 		.4byte	0x4c
 2097 004c 02       		.uleb128 0x2
 2098 004d 04       		.byte	0x4
 2099 004e 05       		.byte	0x5
 2100 004f 09020000 		.4byte	.LASF4
 2101 0053 02       		.uleb128 0x2
 2102 0054 04       		.byte	0x4
 2103 0055 07       		.byte	0x7
 2104 0056 5C030000 		.4byte	.LASF5
 2105 005a 02       		.uleb128 0x2
 2106 005b 08       		.byte	0x8
 2107 005c 05       		.byte	0x5
 2108 005d 64010000 		.4byte	.LASF6
 2109 0061 02       		.uleb128 0x2
 2110 0062 08       		.byte	0x8
 2111 0063 07       		.byte	0x7
 2112 0064 13010000 		.4byte	.LASF7
 2113 0068 04       		.uleb128 0x4
 2114 0069 04       		.byte	0x4
 2115 006a 05       		.byte	0x5
 2116 006b 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 53


 2117 006f 02       		.uleb128 0x2
 2118 0070 04       		.byte	0x4
 2119 0071 07       		.byte	0x7
 2120 0072 08030000 		.4byte	.LASF8
 2121 0076 03       		.uleb128 0x3
 2122 0077 E2050000 		.4byte	.LASF10
 2123 007b 03       		.byte	0x3
 2124 007c 2C       		.byte	0x2c
 2125 007d 41000000 		.4byte	0x41
 2126 0081 05       		.uleb128 0x5
 2127 0082 40020000 		.4byte	.LASF11
 2128 0086 04       		.byte	0x4
 2129 0087 9201     		.2byte	0x192
 2130 0089 2C000000 		.4byte	0x2c
 2131 008d 05       		.uleb128 0x5
 2132 008e 08000000 		.4byte	.LASF12
 2133 0092 04       		.byte	0x4
 2134 0093 9301     		.2byte	0x193
 2135 0095 3A000000 		.4byte	0x3a
 2136 0099 05       		.uleb128 0x5
 2137 009a 84020000 		.4byte	.LASF13
 2138 009e 04       		.byte	0x4
 2139 009f 9401     		.2byte	0x194
 2140 00a1 53000000 		.4byte	0x53
 2141 00a5 05       		.uleb128 0x5
 2142 00a6 E2030000 		.4byte	.LASF14
 2143 00aa 04       		.byte	0x4
 2144 00ab 9501     		.2byte	0x195
 2145 00ad 25000000 		.4byte	0x25
 2146 00b1 05       		.uleb128 0x5
 2147 00b2 E2070000 		.4byte	.LASF15
 2148 00b6 04       		.byte	0x4
 2149 00b7 9601     		.2byte	0x196
 2150 00b9 33000000 		.4byte	0x33
 2151 00bd 05       		.uleb128 0x5
 2152 00be 5E020000 		.4byte	.LASF16
 2153 00c2 04       		.byte	0x4
 2154 00c3 9701     		.2byte	0x197
 2155 00c5 4C000000 		.4byte	0x4c
 2156 00c9 02       		.uleb128 0x2
 2157 00ca 04       		.byte	0x4
 2158 00cb 04       		.byte	0x4
 2159 00cc 80050000 		.4byte	.LASF17
 2160 00d0 02       		.uleb128 0x2
 2161 00d1 08       		.byte	0x8
 2162 00d2 04       		.byte	0x4
 2163 00d3 60080000 		.4byte	.LASF18
 2164 00d7 02       		.uleb128 0x2
 2165 00d8 01       		.byte	0x1
 2166 00d9 08       		.byte	0x8
 2167 00da 06070000 		.4byte	.LASF19
 2168 00de 02       		.uleb128 0x2
 2169 00df 08       		.byte	0x8
 2170 00e0 04       		.byte	0x4
 2171 00e1 E8060000 		.4byte	.LASF20
 2172 00e5 02       		.uleb128 0x2
 2173 00e6 04       		.byte	0x4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 54


 2174 00e7 07       		.byte	0x7
 2175 00e8 DA040000 		.4byte	.LASF21
 2176 00ec 06       		.uleb128 0x6
 2177 00ed 04       		.byte	0x4
 2178 00ee D7000000 		.4byte	0xd7
 2179 00f2 07       		.uleb128 0x7
 2180 00f3 D7000000 		.4byte	0xd7
 2181 00f7 02010000 		.4byte	0x102
 2182 00fb 08       		.uleb128 0x8
 2183 00fc E5000000 		.4byte	0xe5
 2184 0100 17       		.byte	0x17
 2185 0101 00       		.byte	0
 2186 0102 09       		.uleb128 0x9
 2187 0103 0C       		.byte	0xc
 2188 0104 05       		.byte	0x5
 2189 0105 30       		.byte	0x30
 2190 0106 6B010000 		.4byte	0x16b
 2191 010a 0A       		.uleb128 0xa
 2192 010b 53656300 		.ascii	"Sec\000"
 2193 010f 05       		.byte	0x5
 2194 0110 32       		.byte	0x32
 2195 0111 81000000 		.4byte	0x81
 2196 0115 00       		.byte	0
 2197 0116 0A       		.uleb128 0xa
 2198 0117 4D696E00 		.ascii	"Min\000"
 2199 011b 05       		.byte	0x5
 2200 011c 33       		.byte	0x33
 2201 011d 81000000 		.4byte	0x81
 2202 0121 01       		.byte	0x1
 2203 0122 0B       		.uleb128 0xb
 2204 0123 2A010000 		.4byte	.LASF22
 2205 0127 05       		.byte	0x5
 2206 0128 34       		.byte	0x34
 2207 0129 81000000 		.4byte	0x81
 2208 012d 02       		.byte	0x2
 2209 012e 0B       		.uleb128 0xb
 2210 012f 47060000 		.4byte	.LASF23
 2211 0133 05       		.byte	0x5
 2212 0134 35       		.byte	0x35
 2213 0135 81000000 		.4byte	0x81
 2214 0139 03       		.byte	0x3
 2215 013a 0B       		.uleb128 0xb
 2216 013b 9D030000 		.4byte	.LASF24
 2217 013f 05       		.byte	0x5
 2218 0140 36       		.byte	0x36
 2219 0141 81000000 		.4byte	0x81
 2220 0145 04       		.byte	0x4
 2221 0146 0B       		.uleb128 0xb
 2222 0147 15080000 		.4byte	.LASF25
 2223 014b 05       		.byte	0x5
 2224 014c 37       		.byte	0x37
 2225 014d 8D000000 		.4byte	0x8d
 2226 0151 06       		.byte	0x6
 2227 0152 0B       		.uleb128 0xb
 2228 0153 0D010000 		.4byte	.LASF26
 2229 0157 05       		.byte	0x5
 2230 0158 38       		.byte	0x38
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 55


 2231 0159 81000000 		.4byte	0x81
 2232 015d 08       		.byte	0x8
 2233 015e 0B       		.uleb128 0xb
 2234 015f D7050000 		.4byte	.LASF27
 2235 0163 05       		.byte	0x5
 2236 0164 39       		.byte	0x39
 2237 0165 8D000000 		.4byte	0x8d
 2238 0169 0A       		.byte	0xa
 2239 016a 00       		.byte	0
 2240 016b 03       		.uleb128 0x3
 2241 016c 25050000 		.4byte	.LASF28
 2242 0170 05       		.byte	0x5
 2243 0171 3A       		.byte	0x3a
 2244 0172 76010000 		.4byte	0x176
 2245 0176 0C       		.uleb128 0xc
 2246 0177 02010000 		.4byte	0x102
 2247 017b 0D       		.uleb128 0xd
 2248 017c 8101     		.2byte	0x181
 2249 017e 06       		.byte	0x6
 2250 017f 0A       		.byte	0xa
 2251 0180 A9010000 		.4byte	0x1a9
 2252 0184 0B       		.uleb128 0xb
 2253 0185 CD050000 		.4byte	.LASF29
 2254 0189 06       		.byte	0x6
 2255 018a 0C       		.byte	0xc
 2256 018b A9010000 		.4byte	0x1a9
 2257 018f 00       		.byte	0
 2258 0190 0B       		.uleb128 0xb
 2259 0191 A2070000 		.4byte	.LASF30
 2260 0195 06       		.byte	0x6
 2261 0196 0D       		.byte	0xd
 2262 0197 81000000 		.4byte	0x81
 2263 019b 80       		.byte	0x80
 2264 019c 0B       		.uleb128 0xb
 2265 019d 69060000 		.4byte	.LASF31
 2266 01a1 06       		.byte	0x6
 2267 01a2 0F       		.byte	0xf
 2268 01a3 B9010000 		.4byte	0x1b9
 2269 01a7 81       		.byte	0x81
 2270 01a8 00       		.byte	0
 2271 01a9 07       		.uleb128 0x7
 2272 01aa D7000000 		.4byte	0xd7
 2273 01ae B9010000 		.4byte	0x1b9
 2274 01b2 08       		.uleb128 0x8
 2275 01b3 E5000000 		.4byte	0xe5
 2276 01b7 7F       		.byte	0x7f
 2277 01b8 00       		.byte	0
 2278 01b9 07       		.uleb128 0x7
 2279 01ba D7000000 		.4byte	0xd7
 2280 01be C9010000 		.4byte	0x1c9
 2281 01c2 08       		.uleb128 0x8
 2282 01c3 E5000000 		.4byte	0xe5
 2283 01c7 FF       		.byte	0xff
 2284 01c8 00       		.byte	0
 2285 01c9 03       		.uleb128 0x3
 2286 01ca 51060000 		.4byte	.LASF32
 2287 01ce 06       		.byte	0x6
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 56


 2288 01cf 10       		.byte	0x10
 2289 01d0 7B010000 		.4byte	0x17b
 2290 01d4 09       		.uleb128 0x9
 2291 01d5 1A       		.byte	0x1a
 2292 01d6 07       		.byte	0x7
 2293 01d7 10       		.byte	0x10
 2294 01d8 0D020000 		.4byte	0x20d
 2295 01dc 0B       		.uleb128 0xb
 2296 01dd 94020000 		.4byte	.LASF33
 2297 01e1 07       		.byte	0x7
 2298 01e2 11       		.byte	0x11
 2299 01e3 0D020000 		.4byte	0x20d
 2300 01e7 00       		.byte	0
 2301 01e8 0B       		.uleb128 0xb
 2302 01e9 4F070000 		.4byte	.LASF34
 2303 01ed 07       		.byte	0x7
 2304 01ee 12       		.byte	0x12
 2305 01ef B1000000 		.4byte	0xb1
 2306 01f3 16       		.byte	0x16
 2307 01f4 0B       		.uleb128 0xb
 2308 01f5 34030000 		.4byte	.LASF35
 2309 01f9 07       		.byte	0x7
 2310 01fa 13       		.byte	0x13
 2311 01fb 81000000 		.4byte	0x81
 2312 01ff 18       		.byte	0x18
 2313 0200 0B       		.uleb128 0xb
 2314 0201 17000000 		.4byte	.LASF36
 2315 0205 07       		.byte	0x7
 2316 0206 14       		.byte	0x14
 2317 0207 81000000 		.4byte	0x81
 2318 020b 19       		.byte	0x19
 2319 020c 00       		.byte	0
 2320 020d 07       		.uleb128 0x7
 2321 020e B1000000 		.4byte	0xb1
 2322 0212 1D020000 		.4byte	0x21d
 2323 0216 08       		.uleb128 0x8
 2324 0217 E5000000 		.4byte	0xe5
 2325 021b 0A       		.byte	0xa
 2326 021c 00       		.byte	0
 2327 021d 03       		.uleb128 0x3
 2328 021e 86050000 		.4byte	.LASF37
 2329 0222 07       		.byte	0x7
 2330 0223 15       		.byte	0x15
 2331 0224 D4010000 		.4byte	0x1d4
 2332 0228 09       		.uleb128 0x9
 2333 0229 14       		.byte	0x14
 2334 022a 08       		.byte	0x8
 2335 022b 11       		.byte	0x11
 2336 022c 6D020000 		.4byte	0x26d
 2337 0230 0B       		.uleb128 0xb
 2338 0231 8D030000 		.4byte	.LASF38
 2339 0235 08       		.byte	0x8
 2340 0236 12       		.byte	0x12
 2341 0237 C9000000 		.4byte	0xc9
 2342 023b 00       		.byte	0
 2343 023c 0B       		.uleb128 0xb
 2344 023d B0010000 		.4byte	.LASF39
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 57


 2345 0241 08       		.byte	0x8
 2346 0242 13       		.byte	0x13
 2347 0243 C9000000 		.4byte	0xc9
 2348 0247 04       		.byte	0x4
 2349 0248 0B       		.uleb128 0xb
 2350 0249 BE010000 		.4byte	.LASF40
 2351 024d 08       		.byte	0x8
 2352 024e 14       		.byte	0x14
 2353 024f C9000000 		.4byte	0xc9
 2354 0253 08       		.byte	0x8
 2355 0254 0B       		.uleb128 0xb
 2356 0255 62050000 		.4byte	.LASF41
 2357 0259 08       		.byte	0x8
 2358 025a 15       		.byte	0x15
 2359 025b C9000000 		.4byte	0xc9
 2360 025f 0C       		.byte	0xc
 2361 0260 0B       		.uleb128 0xb
 2362 0261 DA060000 		.4byte	.LASF42
 2363 0265 08       		.byte	0x8
 2364 0266 16       		.byte	0x16
 2365 0267 81000000 		.4byte	0x81
 2366 026b 10       		.byte	0x10
 2367 026c 00       		.byte	0
 2368 026d 03       		.uleb128 0x3
 2369 026e 67080000 		.4byte	.LASF43
 2370 0272 08       		.byte	0x8
 2371 0273 17       		.byte	0x17
 2372 0274 28020000 		.4byte	0x228
 2373 0278 09       		.uleb128 0x9
 2374 0279 10       		.byte	0x10
 2375 027a 08       		.byte	0x8
 2376 027b 19       		.byte	0x19
 2377 027c B1020000 		.4byte	0x2b1
 2378 0280 0B       		.uleb128 0xb
 2379 0281 F4020000 		.4byte	.LASF44
 2380 0285 08       		.byte	0x8
 2381 0286 1A       		.byte	0x1a
 2382 0287 C9000000 		.4byte	0xc9
 2383 028b 00       		.byte	0
 2384 028c 0B       		.uleb128 0xb
 2385 028d 2B020000 		.4byte	.LASF45
 2386 0291 08       		.byte	0x8
 2387 0292 1B       		.byte	0x1b
 2388 0293 C9000000 		.4byte	0xc9
 2389 0297 04       		.byte	0x4
 2390 0298 0B       		.uleb128 0xb
 2391 0299 C9060000 		.4byte	.LASF46
 2392 029d 08       		.byte	0x8
 2393 029e 1C       		.byte	0x1c
 2394 029f C9000000 		.4byte	0xc9
 2395 02a3 08       		.byte	0x8
 2396 02a4 0B       		.uleb128 0xb
 2397 02a5 33060000 		.4byte	.LASF47
 2398 02a9 08       		.byte	0x8
 2399 02aa 1D       		.byte	0x1d
 2400 02ab C9000000 		.4byte	0xc9
 2401 02af 0C       		.byte	0xc
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 58


 2402 02b0 00       		.byte	0
 2403 02b1 03       		.uleb128 0x3
 2404 02b2 1F080000 		.4byte	.LASF48
 2405 02b6 08       		.byte	0x8
 2406 02b7 1E       		.byte	0x1e
 2407 02b8 78020000 		.4byte	0x278
 2408 02bc 0E       		.uleb128 0xe
 2409 02bd 746D00   		.ascii	"tm\000"
 2410 02c0 24       		.byte	0x24
 2411 02c1 09       		.byte	0x9
 2412 02c2 21       		.byte	0x21
 2413 02c3 34030000 		.4byte	0x334
 2414 02c7 0B       		.uleb128 0xb
 2415 02c8 90070000 		.4byte	.LASF49
 2416 02cc 09       		.byte	0x9
 2417 02cd 23       		.byte	0x23
 2418 02ce 68000000 		.4byte	0x68
 2419 02d2 00       		.byte	0
 2420 02d3 0B       		.uleb128 0xb
 2421 02d4 BC040000 		.4byte	.LASF50
 2422 02d8 09       		.byte	0x9
 2423 02d9 24       		.byte	0x24
 2424 02da 68000000 		.4byte	0x68
 2425 02de 04       		.byte	0x4
 2426 02df 0B       		.uleb128 0xb
 2427 02e0 0F000000 		.4byte	.LASF51
 2428 02e4 09       		.byte	0x9
 2429 02e5 25       		.byte	0x25
 2430 02e6 68000000 		.4byte	0x68
 2431 02ea 08       		.byte	0x8
 2432 02eb 0B       		.uleb128 0xb
 2433 02ec 7F070000 		.4byte	.LASF52
 2434 02f0 09       		.byte	0x9
 2435 02f1 26       		.byte	0x26
 2436 02f2 68000000 		.4byte	0x68
 2437 02f6 0C       		.byte	0xc
 2438 02f7 0B       		.uleb128 0xb
 2439 02f8 BF020000 		.4byte	.LASF53
 2440 02fc 09       		.byte	0x9
 2441 02fd 27       		.byte	0x27
 2442 02fe 68000000 		.4byte	0x68
 2443 0302 10       		.byte	0x10
 2444 0303 0B       		.uleb128 0xb
 2445 0304 E2020000 		.4byte	.LASF54
 2446 0308 09       		.byte	0x9
 2447 0309 28       		.byte	0x28
 2448 030a 68000000 		.4byte	0x68
 2449 030e 14       		.byte	0x14
 2450 030f 0B       		.uleb128 0xb
 2451 0310 E0060000 		.4byte	.LASF55
 2452 0314 09       		.byte	0x9
 2453 0315 29       		.byte	0x29
 2454 0316 68000000 		.4byte	0x68
 2455 031a 18       		.byte	0x18
 2456 031b 0B       		.uleb128 0xb
 2457 031c E3040000 		.4byte	.LASF56
 2458 0320 09       		.byte	0x9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 59


 2459 0321 2A       		.byte	0x2a
 2460 0322 68000000 		.4byte	0x68
 2461 0326 1C       		.byte	0x1c
 2462 0327 0B       		.uleb128 0xb
 2463 0328 C6030000 		.4byte	.LASF57
 2464 032c 09       		.byte	0x9
 2465 032d 2B       		.byte	0x2b
 2466 032e 68000000 		.4byte	0x68
 2467 0332 20       		.byte	0x20
 2468 0333 00       		.byte	0
 2469 0334 09       		.uleb128 0x9
 2470 0335 2C       		.byte	0x2c
 2471 0336 0A       		.byte	0xa
 2472 0337 14       		.byte	0x14
 2473 0338 61030000 		.4byte	0x361
 2474 033c 0A       		.uleb128 0xa
 2475 033d 6B657900 		.ascii	"key\000"
 2476 0341 0A       		.byte	0xa
 2477 0342 15       		.byte	0x15
 2478 0343 61030000 		.4byte	0x361
 2479 0347 00       		.byte	0
 2480 0348 0B       		.uleb128 0xb
 2481 0349 D7020000 		.4byte	.LASF58
 2482 034d 0A       		.byte	0xa
 2483 034e 16       		.byte	0x16
 2484 034f 61030000 		.4byte	0x361
 2485 0353 14       		.byte	0x14
 2486 0354 0B       		.uleb128 0xb
 2487 0355 1B050000 		.4byte	.LASF59
 2488 0359 0A       		.byte	0xa
 2489 035a 17       		.byte	0x17
 2490 035b BD000000 		.4byte	0xbd
 2491 035f 28       		.byte	0x28
 2492 0360 00       		.byte	0
 2493 0361 07       		.uleb128 0x7
 2494 0362 D7000000 		.4byte	0xd7
 2495 0366 71030000 		.4byte	0x371
 2496 036a 08       		.uleb128 0x8
 2497 036b E5000000 		.4byte	0xe5
 2498 036f 13       		.byte	0x13
 2499 0370 00       		.byte	0
 2500 0371 03       		.uleb128 0x3
 2501 0372 1D030000 		.4byte	.LASF60
 2502 0376 0A       		.byte	0xa
 2503 0377 19       		.byte	0x19
 2504 0378 34030000 		.4byte	0x334
 2505 037c 09       		.uleb128 0x9
 2506 037d 3C       		.byte	0x3c
 2507 037e 0B       		.byte	0xb
 2508 037f 35       		.byte	0x35
 2509 0380 A9030000 		.4byte	0x3a9
 2510 0384 0B       		.uleb128 0xb
 2511 0385 78070000 		.4byte	.LASF61
 2512 0389 0B       		.byte	0xb
 2513 038a 36       		.byte	0x36
 2514 038b 61030000 		.4byte	0x361
 2515 038f 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 60


 2516 0390 0B       		.uleb128 0xb
 2517 0391 8B020000 		.4byte	.LASF62
 2518 0395 0B       		.byte	0xb
 2519 0396 37       		.byte	0x37
 2520 0397 61030000 		.4byte	0x361
 2521 039b 14       		.byte	0x14
 2522 039c 0B       		.uleb128 0xb
 2523 039d 64060000 		.4byte	.LASF63
 2524 03a1 0B       		.byte	0xb
 2525 03a2 38       		.byte	0x38
 2526 03a3 61030000 		.4byte	0x361
 2527 03a7 28       		.byte	0x28
 2528 03a8 00       		.byte	0
 2529 03a9 03       		.uleb128 0x3
 2530 03aa F6010000 		.4byte	.LASF64
 2531 03ae 0B       		.byte	0xb
 2532 03af 3A       		.byte	0x3a
 2533 03b0 7C030000 		.4byte	0x37c
 2534 03b4 09       		.uleb128 0x9
 2535 03b5 20       		.byte	0x20
 2536 03b6 0B       		.byte	0xb
 2537 03b7 3C       		.byte	0x3c
 2538 03b8 1D040000 		.4byte	0x41d
 2539 03bc 0B       		.uleb128 0xb
 2540 03bd 03020000 		.4byte	.LASF65
 2541 03c1 0B       		.byte	0xb
 2542 03c2 3D       		.byte	0x3d
 2543 03c3 68000000 		.4byte	0x68
 2544 03c7 00       		.byte	0
 2545 03c8 0A       		.uleb128 0xa
 2546 03c9 62657200 		.ascii	"ber\000"
 2547 03cd 0B       		.byte	0xb
 2548 03ce 3E       		.byte	0x3e
 2549 03cf 68000000 		.4byte	0x68
 2550 03d3 04       		.byte	0x4
 2551 03d4 0B       		.uleb128 0xb
 2552 03d5 42060000 		.4byte	.LASF66
 2553 03d9 0B       		.byte	0xb
 2554 03da 3F       		.byte	0x3f
 2555 03db 68000000 		.4byte	0x68
 2556 03df 08       		.byte	0x8
 2557 03e0 0B       		.uleb128 0xb
 2558 03e1 7A010000 		.4byte	.LASF67
 2559 03e5 0B       		.byte	0xb
 2560 03e6 40       		.byte	0x40
 2561 03e7 68000000 		.4byte	0x68
 2562 03eb 0C       		.byte	0xc
 2563 03ec 0B       		.uleb128 0xb
 2564 03ed 0D060000 		.4byte	.LASF68
 2565 03f1 0B       		.byte	0xb
 2566 03f2 41       		.byte	0x41
 2567 03f3 68000000 		.4byte	0x68
 2568 03f7 10       		.byte	0x10
 2569 03f8 0B       		.uleb128 0xb
 2570 03f9 08060000 		.4byte	.LASF69
 2571 03fd 0B       		.byte	0xb
 2572 03fe 42       		.byte	0x42
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 61


 2573 03ff 68000000 		.4byte	0x68
 2574 0403 14       		.byte	0x14
 2575 0404 0B       		.uleb128 0xb
 2576 0405 8D010000 		.4byte	.LASF70
 2577 0409 0B       		.byte	0xb
 2578 040a 43       		.byte	0x43
 2579 040b 68000000 		.4byte	0x68
 2580 040f 18       		.byte	0x18
 2581 0410 0B       		.uleb128 0xb
 2582 0411 12020000 		.4byte	.LASF71
 2583 0415 0B       		.byte	0xb
 2584 0416 44       		.byte	0x44
 2585 0417 68000000 		.4byte	0x68
 2586 041b 1C       		.byte	0x1c
 2587 041c 00       		.byte	0
 2588 041d 03       		.uleb128 0x3
 2589 041e BB060000 		.4byte	.LASF72
 2590 0422 0B       		.byte	0xb
 2591 0423 46       		.byte	0x46
 2592 0424 B4030000 		.4byte	0x3b4
 2593 0428 09       		.uleb128 0x9
 2594 0429 05       		.byte	0x5
 2595 042a 0B       		.byte	0xb
 2596 042b 52       		.byte	0x52
 2597 042c 6D040000 		.4byte	0x46d
 2598 0430 0B       		.uleb128 0xb
 2599 0431 64020000 		.4byte	.LASF73
 2600 0435 0B       		.byte	0xb
 2601 0436 54       		.byte	0x54
 2602 0437 81000000 		.4byte	0x81
 2603 043b 00       		.byte	0
 2604 043c 0B       		.uleb128 0xb
 2605 043d 0C080000 		.4byte	.LASF74
 2606 0441 0B       		.byte	0xb
 2607 0442 56       		.byte	0x56
 2608 0443 6D040000 		.4byte	0x46d
 2609 0447 01       		.byte	0x1
 2610 0448 0B       		.uleb128 0xb
 2611 0449 53080000 		.4byte	.LASF75
 2612 044d 0B       		.byte	0xb
 2613 044e 58       		.byte	0x58
 2614 044f 81000000 		.4byte	0x81
 2615 0453 02       		.byte	0x2
 2616 0454 0B       		.uleb128 0xb
 2617 0455 29060000 		.4byte	.LASF76
 2618 0459 0B       		.byte	0xb
 2619 045a 5A       		.byte	0x5a
 2620 045b 81000000 		.4byte	0x81
 2621 045f 03       		.byte	0x3
 2622 0460 0B       		.uleb128 0xb
 2623 0461 C6020000 		.4byte	.LASF77
 2624 0465 0B       		.byte	0xb
 2625 0466 5D       		.byte	0x5d
 2626 0467 81000000 		.4byte	0x81
 2627 046b 04       		.byte	0x4
 2628 046c 00       		.byte	0
 2629 046d 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 62


 2630 046e 01       		.byte	0x1
 2631 046f 02       		.byte	0x2
 2632 0470 DC050000 		.4byte	.LASF78
 2633 0474 03       		.uleb128 0x3
 2634 0475 89040000 		.4byte	.LASF79
 2635 0479 0B       		.byte	0xb
 2636 047a 5F       		.byte	0x5f
 2637 047b 28040000 		.4byte	0x428
 2638 047f 09       		.uleb128 0x9
 2639 0480 06       		.byte	0x6
 2640 0481 0C       		.byte	0xc
 2641 0482 2D       		.byte	0x2d
 2642 0483 B8040000 		.4byte	0x4b8
 2643 0487 0B       		.uleb128 0xb
 2644 0488 A7020000 		.4byte	.LASF80
 2645 048c 0C       		.byte	0xc
 2646 048d 2F       		.byte	0x2f
 2647 048e 8D000000 		.4byte	0x8d
 2648 0492 00       		.byte	0
 2649 0493 0B       		.uleb128 0xb
 2650 0494 F6070000 		.4byte	.LASF81
 2651 0498 0C       		.byte	0xc
 2652 0499 30       		.byte	0x30
 2653 049a B1000000 		.4byte	0xb1
 2654 049e 02       		.byte	0x2
 2655 049f 0B       		.uleb128 0xb
 2656 04a0 E8070000 		.4byte	.LASF82
 2657 04a4 0C       		.byte	0xc
 2658 04a5 31       		.byte	0x31
 2659 04a6 81000000 		.4byte	0x81
 2660 04aa 04       		.byte	0x4
 2661 04ab 0B       		.uleb128 0xb
 2662 04ac 51000000 		.4byte	.LASF83
 2663 04b0 0C       		.byte	0xc
 2664 04b1 32       		.byte	0x32
 2665 04b2 81000000 		.4byte	0x81
 2666 04b6 05       		.byte	0x5
 2667 04b7 00       		.byte	0
 2668 04b8 03       		.uleb128 0x3
 2669 04b9 25020000 		.4byte	.LASF84
 2670 04bd 0C       		.byte	0xc
 2671 04be 35       		.byte	0x35
 2672 04bf C3040000 		.4byte	0x4c3
 2673 04c3 0C       		.uleb128 0xc
 2674 04c4 7F040000 		.4byte	0x47f
 2675 04c8 09       		.uleb128 0x9
 2676 04c9 1C       		.byte	0x1c
 2677 04ca 0C       		.byte	0xc
 2678 04cb 38       		.byte	0x38
 2679 04cc E9040000 		.4byte	0x4e9
 2680 04d0 0B       		.uleb128 0xb
 2681 04d1 CF030000 		.4byte	.LASF85
 2682 04d5 0C       		.byte	0xc
 2683 04d6 3A       		.byte	0x3a
 2684 04d7 E9040000 		.4byte	0x4e9
 2685 04db 00       		.byte	0
 2686 04dc 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 63


 2687 04dd 45080000 		.4byte	.LASF86
 2688 04e1 0C       		.byte	0xc
 2689 04e2 3B       		.byte	0x3b
 2690 04e3 F2000000 		.4byte	0xf2
 2691 04e7 04       		.byte	0x4
 2692 04e8 00       		.byte	0
 2693 04e9 06       		.uleb128 0x6
 2694 04ea 04       		.byte	0x4
 2695 04eb A9030000 		.4byte	0x3a9
 2696 04ef 03       		.uleb128 0x3
 2697 04f0 7E040000 		.4byte	.LASF87
 2698 04f4 0C       		.byte	0xc
 2699 04f5 3D       		.byte	0x3d
 2700 04f6 C8040000 		.4byte	0x4c8
 2701 04fa 09       		.uleb128 0x9
 2702 04fb 68       		.byte	0x68
 2703 04fc 0C       		.byte	0xc
 2704 04fd 43       		.byte	0x43
 2705 04fe 1B050000 		.4byte	0x51b
 2706 0502 0B       		.uleb128 0xb
 2707 0503 DA030000 		.4byte	.LASF88
 2708 0507 0C       		.byte	0xc
 2709 0508 48       		.byte	0x48
 2710 0509 1B050000 		.4byte	0x51b
 2711 050d 00       		.byte	0
 2712 050e 0B       		.uleb128 0xb
 2713 050f BE030000 		.4byte	.LASF89
 2714 0513 0C       		.byte	0xc
 2715 0514 49       		.byte	0x49
 2716 0515 68000000 		.4byte	0x68
 2717 0519 64       		.byte	0x64
 2718 051a 00       		.byte	0
 2719 051b 07       		.uleb128 0x7
 2720 051c D7000000 		.4byte	0xd7
 2721 0520 2B050000 		.4byte	0x52b
 2722 0524 08       		.uleb128 0x8
 2723 0525 E5000000 		.4byte	0xe5
 2724 0529 63       		.byte	0x63
 2725 052a 00       		.byte	0
 2726 052b 03       		.uleb128 0x3
 2727 052c EB040000 		.4byte	.LASF90
 2728 0530 0C       		.byte	0xc
 2729 0531 4F       		.byte	0x4f
 2730 0532 FA040000 		.4byte	0x4fa
 2731 0536 0F       		.uleb128 0xf
 2732 0537 69000000 		.4byte	.LASF163
 2733 053b 01       		.byte	0x1
 2734 053c 14       		.byte	0x14
 2735 053d 00000000 		.4byte	.LFB64
 2736 0541 0C000000 		.4byte	.LFE64-.LFB64
 2737 0545 01       		.uleb128 0x1
 2738 0546 9C       		.byte	0x9c
 2739 0547 10       		.uleb128 0x10
 2740 0548 35080000 		.4byte	.LASF103
 2741 054c 01       		.byte	0x1
 2742 054d 28       		.byte	0x28
 2743 054e 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 64


 2744 0552 F8000000 		.4byte	.LFE65-.LFB65
 2745 0556 01       		.uleb128 0x1
 2746 0557 9C       		.byte	0x9c
 2747 0558 79050000 		.4byte	0x579
 2748 055c 11       		.uleb128 0x11
 2749 055d 37070000 		.4byte	.LASF91
 2750 0561 01       		.byte	0x1
 2751 0562 3C       		.byte	0x3c
 2752 0563 79050000 		.4byte	0x579
 2753 0567 02       		.uleb128 0x2
 2754 0568 91       		.byte	0x91
 2755 0569 64       		.sleb128 -28
 2756 056a 11       		.uleb128 0x11
 2757 056b 6E030000 		.4byte	.LASF92
 2758 056f 01       		.byte	0x1
 2759 0570 58       		.byte	0x58
 2760 0571 81000000 		.4byte	0x81
 2761 0575 02       		.uleb128 0x2
 2762 0576 91       		.byte	0x91
 2763 0577 6F       		.sleb128 -17
 2764 0578 00       		.byte	0
 2765 0579 07       		.uleb128 0x7
 2766 057a 99000000 		.4byte	0x99
 2767 057e 89050000 		.4byte	0x589
 2768 0582 08       		.uleb128 0x8
 2769 0583 E5000000 		.4byte	0xe5
 2770 0587 01       		.byte	0x1
 2771 0588 00       		.byte	0
 2772 0589 12       		.uleb128 0x12
 2773 058a E7030000 		.4byte	.LASF94
 2774 058e 01       		.byte	0x1
 2775 058f 62       		.byte	0x62
 2776 0590 68000000 		.4byte	0x68
 2777 0594 00000000 		.4byte	.LFB66
 2778 0598 64000000 		.4byte	.LFE66-.LFB66
 2779 059c 01       		.uleb128 0x1
 2780 059d 9C       		.byte	0x9c
 2781 059e B1050000 		.4byte	0x5b1
 2782 05a2 11       		.uleb128 0x11
 2783 05a3 C0050000 		.4byte	.LASF93
 2784 05a7 01       		.byte	0x1
 2785 05a8 7C       		.byte	0x7c
 2786 05a9 81000000 		.4byte	0x81
 2787 05ad 02       		.uleb128 0x2
 2788 05ae 91       		.byte	0x91
 2789 05af 77       		.sleb128 -9
 2790 05b0 00       		.byte	0
 2791 05b1 13       		.uleb128 0x13
 2792 05b2 5D070000 		.4byte	.LASF164
 2793 05b6 01       		.byte	0x1
 2794 05b7 8C       		.byte	0x8c
 2795 05b8 00000000 		.4byte	.LFB67
 2796 05bc 2A000000 		.4byte	.LFE67-.LFB67
 2797 05c0 01       		.uleb128 0x1
 2798 05c1 9C       		.byte	0x9c
 2799 05c2 14       		.uleb128 0x14
 2800 05c3 29030000 		.4byte	.LASF95
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 65


 2801 05c7 01       		.byte	0x1
 2802 05c8 B1       		.byte	0xb1
 2803 05c9 00000000 		.4byte	.LFB68
 2804 05cd 50000000 		.4byte	.LFE68-.LFB68
 2805 05d1 01       		.uleb128 0x1
 2806 05d2 9C       		.byte	0x9c
 2807 05d3 E6050000 		.4byte	0x5e6
 2808 05d7 15       		.uleb128 0x15
 2809 05d8 A0040000 		.4byte	.LASF96
 2810 05dc 01       		.byte	0x1
 2811 05dd B1       		.byte	0xb1
 2812 05de 81000000 		.4byte	0x81
 2813 05e2 02       		.uleb128 0x2
 2814 05e3 91       		.byte	0x91
 2815 05e4 77       		.sleb128 -9
 2816 05e5 00       		.byte	0
 2817 05e6 16       		.uleb128 0x16
 2818 05e7 2A080000 		.4byte	.LASF100
 2819 05eb 01       		.byte	0x1
 2820 05ec C8       		.byte	0xc8
 2821 05ed 81000000 		.4byte	0x81
 2822 05f1 00000000 		.4byte	.LFB69
 2823 05f5 48000000 		.4byte	.LFE69-.LFB69
 2824 05f9 01       		.uleb128 0x1
 2825 05fa 9C       		.byte	0x9c
 2826 05fb 1C060000 		.4byte	0x61c
 2827 05ff 15       		.uleb128 0x15
 2828 0600 C9040000 		.4byte	.LASF97
 2829 0604 01       		.byte	0x1
 2830 0605 C8       		.byte	0xc8
 2831 0606 1C060000 		.4byte	0x61c
 2832 060a 02       		.uleb128 0x2
 2833 060b 91       		.byte	0x91
 2834 060c 74       		.sleb128 -12
 2835 060d 15       		.uleb128 0x15
 2836 060e A0040000 		.4byte	.LASF96
 2837 0612 01       		.byte	0x1
 2838 0613 C8       		.byte	0xc8
 2839 0614 81000000 		.4byte	0x81
 2840 0618 02       		.uleb128 0x2
 2841 0619 91       		.byte	0x91
 2842 061a 73       		.sleb128 -13
 2843 061b 00       		.byte	0
 2844 061c 06       		.uleb128 0x6
 2845 061d 04       		.byte	0x4
 2846 061e B8040000 		.4byte	0x4b8
 2847 0622 17       		.uleb128 0x17
 2848 0623 12060000 		.4byte	.LASF98
 2849 0627 01       		.byte	0x1
 2850 0628 DD       		.byte	0xdd
 2851 0629 00000000 		.4byte	.LFB70
 2852 062d 1E000000 		.4byte	.LFE70-.LFB70
 2853 0631 01       		.uleb128 0x1
 2854 0632 9C       		.byte	0x9c
 2855 0633 46060000 		.4byte	0x646
 2856 0637 15       		.uleb128 0x15
 2857 0638 70060000 		.4byte	.LASF99
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 66


 2858 063c 01       		.byte	0x1
 2859 063d DD       		.byte	0xdd
 2860 063e 1C060000 		.4byte	0x61c
 2861 0642 02       		.uleb128 0x2
 2862 0643 91       		.byte	0x91
 2863 0644 74       		.sleb128 -12
 2864 0645 00       		.byte	0
 2865 0646 18       		.uleb128 0x18
 2866 0647 48050000 		.4byte	.LASF101
 2867 064b 01       		.byte	0x1
 2868 064c E6       		.byte	0xe6
 2869 064d B8040000 		.4byte	0x4b8
 2870 0651 00000000 		.4byte	.LFB71
 2871 0655 46000000 		.4byte	.LFE71-.LFB71
 2872 0659 01       		.uleb128 0x1
 2873 065a 9C       		.byte	0x9c
 2874 065b 98060000 		.4byte	0x698
 2875 065f 15       		.uleb128 0x15
 2876 0660 A7020000 		.4byte	.LASF80
 2877 0664 01       		.byte	0x1
 2878 0665 E6       		.byte	0xe6
 2879 0666 8D000000 		.4byte	0x8d
 2880 066a 02       		.uleb128 0x2
 2881 066b 91       		.byte	0x91
 2882 066c 6A       		.sleb128 -22
 2883 066d 15       		.uleb128 0x15
 2884 066e E8070000 		.4byte	.LASF82
 2885 0672 01       		.byte	0x1
 2886 0673 E6       		.byte	0xe6
 2887 0674 81000000 		.4byte	0x81
 2888 0678 02       		.uleb128 0x2
 2889 0679 91       		.byte	0x91
 2890 067a 69       		.sleb128 -23
 2891 067b 15       		.uleb128 0x15
 2892 067c 51000000 		.4byte	.LASF83
 2893 0680 01       		.byte	0x1
 2894 0681 E6       		.byte	0xe6
 2895 0682 81000000 		.4byte	0x81
 2896 0686 02       		.uleb128 0x2
 2897 0687 91       		.byte	0x91
 2898 0688 68       		.sleb128 -24
 2899 0689 11       		.uleb128 0x11
 2900 068a 87070000 		.4byte	.LASF102
 2901 068e 01       		.byte	0x1
 2902 068f E9       		.byte	0xe9
 2903 0690 B8040000 		.4byte	0x4b8
 2904 0694 02       		.uleb128 0x2
 2905 0695 91       		.byte	0x91
 2906 0696 70       		.sleb128 -16
 2907 0697 00       		.byte	0
 2908 0698 10       		.uleb128 0x10
 2909 0699 7F060000 		.4byte	.LASF104
 2910 069d 01       		.byte	0x1
 2911 069e FF       		.byte	0xff
 2912 069f 00000000 		.4byte	.LFB72
 2913 06a3 04010000 		.4byte	.LFE72-.LFB72
 2914 06a7 01       		.uleb128 0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 67


 2915 06a8 9C       		.byte	0x9c
 2916 06a9 FE060000 		.4byte	0x6fe
 2917 06ad 19       		.uleb128 0x19
 2918 06ae 55010000 		.4byte	.LASF105
 2919 06b2 01       		.byte	0x1
 2920 06b3 0701     		.2byte	0x107
 2921 06b5 C9010000 		.4byte	0x1c9
 2922 06b9 03       		.uleb128 0x3
 2923 06ba 91       		.byte	0x91
 2924 06bb EC7C     		.sleb128 -404
 2925 06bd 19       		.uleb128 0x19
 2926 06be C2070000 		.4byte	.LASF106
 2927 06c2 01       		.byte	0x1
 2928 06c3 0B01     		.2byte	0x10b
 2929 06c5 C9010000 		.4byte	0x1c9
 2930 06c9 03       		.uleb128 0x3
 2931 06ca 91       		.byte	0x91
 2932 06cb E879     		.sleb128 -792
 2933 06cd 19       		.uleb128 0x19
 2934 06ce 02010000 		.4byte	.LASF107
 2935 06d2 01       		.byte	0x1
 2936 06d3 0F01     		.2byte	0x10f
 2937 06d5 C9010000 		.4byte	0x1c9
 2938 06d9 03       		.uleb128 0x3
 2939 06da 91       		.byte	0x91
 2940 06db E476     		.sleb128 -1180
 2941 06dd 19       		.uleb128 0x19
 2942 06de 15040000 		.4byte	.LASF108
 2943 06e2 01       		.byte	0x1
 2944 06e3 1301     		.2byte	0x113
 2945 06e5 C9010000 		.4byte	0x1c9
 2946 06e9 03       		.uleb128 0x3
 2947 06ea 91       		.byte	0x91
 2948 06eb E073     		.sleb128 -1568
 2949 06ed 19       		.uleb128 0x19
 2950 06ee 00000000 		.4byte	.LASF109
 2951 06f2 01       		.byte	0x1
 2952 06f3 1701     		.2byte	0x117
 2953 06f5 C9010000 		.4byte	0x1c9
 2954 06f9 03       		.uleb128 0x3
 2955 06fa 91       		.byte	0x91
 2956 06fb DC70     		.sleb128 -1956
 2957 06fd 00       		.byte	0
 2958 06fe 1A       		.uleb128 0x1a
 2959 06ff 40080000 		.4byte	.LASF165
 2960 0703 01       		.byte	0x1
 2961 0704 2201     		.2byte	0x122
 2962 0706 68000000 		.4byte	0x68
 2963 070a 00000000 		.4byte	.LFB73
 2964 070e 1E000000 		.4byte	.LFE73-.LFB73
 2965 0712 01       		.uleb128 0x1
 2966 0713 9C       		.byte	0x9c
 2967 0714 1B       		.uleb128 0x1b
 2968 0715 6E020000 		.4byte	.LASF110
 2969 0719 01       		.byte	0x1
 2970 071a 3801     		.2byte	0x138
 2971 071c 81000000 		.4byte	0x81
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 68


 2972 0720 00000000 		.4byte	.LFB74
 2973 0724 5C040000 		.4byte	.LFE74-.LFB74
 2974 0728 01       		.uleb128 0x1
 2975 0729 9C       		.byte	0x9c
 2976 072a 7E080000 		.4byte	0x87e
 2977 072e 1C       		.uleb128 0x1c
 2978 072f 62000000 		.4byte	.LBB2
 2979 0733 CC030000 		.4byte	.LBE2-.LBB2
 2980 0737 19       		.uleb128 0x19
 2981 0738 5B050000 		.4byte	.LASF111
 2982 073c 01       		.byte	0x1
 2983 073d 6801     		.2byte	0x168
 2984 073f 61030000 		.4byte	0x361
 2985 0743 02       		.uleb128 0x2
 2986 0744 91       		.byte	0x91
 2987 0745 48       		.sleb128 -56
 2988 0746 19       		.uleb128 0x19
 2989 0747 95050000 		.4byte	.LASF112
 2990 074b 01       		.byte	0x1
 2991 074c 6C01     		.2byte	0x16c
 2992 074e 61030000 		.4byte	0x361
 2993 0752 03       		.uleb128 0x3
 2994 0753 91       		.byte	0x91
 2995 0754 B47F     		.sleb128 -76
 2996 0756 19       		.uleb128 0x19
 2997 0757 46020000 		.4byte	.LASF113
 2998 075b 01       		.byte	0x1
 2999 075c 7101     		.2byte	0x171
 3000 075e 61030000 		.4byte	0x361
 3001 0762 03       		.uleb128 0x3
 3002 0763 91       		.byte	0x91
 3003 0764 A07F     		.sleb128 -96
 3004 0766 19       		.uleb128 0x19
 3005 0767 7A030000 		.4byte	.LASF114
 3006 076b 01       		.byte	0x1
 3007 076c 8401     		.2byte	0x184
 3008 076e 8D000000 		.4byte	0x8d
 3009 0772 02       		.uleb128 0x2
 3010 0773 91       		.byte	0x91
 3011 0774 66       		.sleb128 -26
 3012 0775 19       		.uleb128 0x19
 3013 0776 00040000 		.4byte	.LASF115
 3014 077a 01       		.byte	0x1
 3015 077b 8501     		.2byte	0x185
 3016 077d 61030000 		.4byte	0x361
 3017 0781 03       		.uleb128 0x3
 3018 0782 91       		.byte	0x91
 3019 0783 8C7F     		.sleb128 -116
 3020 0785 19       		.uleb128 0x19
 3021 0786 22070000 		.4byte	.LASF116
 3022 078a 01       		.byte	0x1
 3023 078b 9A01     		.2byte	0x19a
 3024 078d 7E080000 		.4byte	0x87e
 3025 0791 03       		.uleb128 0x3
 3026 0792 91       		.byte	0x91
 3027 0793 A475     		.sleb128 -1372
 3028 0795 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 69


 3029 0796 A2070000 		.4byte	.LASF30
 3030 079a 01       		.byte	0x1
 3031 079b 9B01     		.2byte	0x19b
 3032 079d 81000000 		.4byte	0x81
 3033 07a1 02       		.uleb128 0x2
 3034 07a2 91       		.byte	0x91
 3035 07a3 65       		.sleb128 -27
 3036 07a4 19       		.uleb128 0x19
 3037 07a5 F4060000 		.4byte	.LASF117
 3038 07a9 01       		.byte	0x1
 3039 07aa A201     		.2byte	0x1a2
 3040 07ac EC000000 		.4byte	0xec
 3041 07b0 02       		.uleb128 0x2
 3042 07b1 91       		.byte	0x91
 3043 07b2 6C       		.sleb128 -20
 3044 07b3 19       		.uleb128 0x19
 3045 07b4 72010000 		.4byte	.LASF118
 3046 07b8 01       		.byte	0x1
 3047 07b9 A601     		.2byte	0x1a6
 3048 07bb A5000000 		.4byte	0xa5
 3049 07bf 02       		.uleb128 0x2
 3050 07c0 91       		.byte	0x91
 3051 07c1 64       		.sleb128 -28
 3052 07c2 19       		.uleb128 0x19
 3053 07c3 77020000 		.4byte	.LASF119
 3054 07c7 01       		.byte	0x1
 3055 07c8 D601     		.2byte	0x1d6
 3056 07ca 4C000000 		.4byte	0x4c
 3057 07ce 02       		.uleb128 0x2
 3058 07cf 91       		.byte	0x91
 3059 07d0 5C       		.sleb128 -36
 3060 07d1 1D       		.uleb128 0x1d
 3061 07d2 F0000000 		.4byte	.LBB3
 3062 07d6 2C000000 		.4byte	.LBE3-.LBB3
 3063 07da FE070000 		.4byte	0x7fe
 3064 07de 19       		.uleb128 0x19
 3065 07df AB060000 		.4byte	.LASF120
 3066 07e3 01       		.byte	0x1
 3067 07e4 7901     		.2byte	0x179
 3068 07e6 8D000000 		.4byte	0x8d
 3069 07ea 02       		.uleb128 0x2
 3070 07eb 91       		.byte	0x91
 3071 07ec 68       		.sleb128 -24
 3072 07ed 19       		.uleb128 0x19
 3073 07ee E4010000 		.4byte	.LASF121
 3074 07f2 01       		.byte	0x1
 3075 07f3 7A01     		.2byte	0x17a
 3076 07f5 61030000 		.4byte	0x361
 3077 07f9 03       		.uleb128 0x3
 3078 07fa 91       		.byte	0x91
 3079 07fb F87E     		.sleb128 -136
 3080 07fd 00       		.byte	0
 3081 07fe 1D       		.uleb128 0x1d
 3082 07ff 1E010000 		.4byte	.LBB4
 3083 0803 20000000 		.4byte	.LBE4-.LBB4
 3084 0807 1C080000 		.4byte	0x81c
 3085 080b 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 70


 3086 080c E4010000 		.4byte	.LASF121
 3087 0810 01       		.byte	0x1
 3088 0811 7E01     		.2byte	0x17e
 3089 0813 61030000 		.4byte	0x361
 3090 0817 03       		.uleb128 0x3
 3091 0818 91       		.byte	0x91
 3092 0819 E47E     		.sleb128 -156
 3093 081b 00       		.byte	0
 3094 081c 1D       		.uleb128 0x1d
 3095 081d 5E020000 		.4byte	.LBB5
 3096 0821 4C010000 		.4byte	.LBE5-.LBB5
 3097 0825 53080000 		.4byte	0x853
 3098 0829 19       		.uleb128 0x19
 3099 082a 54050000 		.4byte	.LASF122
 3100 082e 01       		.byte	0x1
 3101 082f AB01     		.2byte	0x1ab
 3102 0831 A5000000 		.4byte	0xa5
 3103 0835 02       		.uleb128 0x2
 3104 0836 91       		.byte	0x91
 3105 0837 6B       		.sleb128 -21
 3106 0838 1C       		.uleb128 0x1c
 3107 0839 66020000 		.4byte	.LBB6
 3108 083d 28010000 		.4byte	.LBE6-.LBB6
 3109 0841 19       		.uleb128 0x19
 3110 0842 47030000 		.4byte	.LASF123
 3111 0846 01       		.byte	0x1
 3112 0847 AD01     		.2byte	0x1ad
 3113 0849 8E080000 		.4byte	0x88e
 3114 084d 03       		.uleb128 0x3
 3115 084e 91       		.byte	0x91
 3116 084f EC76     		.sleb128 -1172
 3117 0851 00       		.byte	0
 3118 0852 00       		.byte	0
 3119 0853 1C       		.uleb128 0x1c
 3120 0854 C4030000 		.4byte	.LBB7
 3121 0858 3A000000 		.4byte	.LBE7-.LBB7
 3122 085c 19       		.uleb128 0x19
 3123 085d 54020000 		.4byte	.LASF124
 3124 0861 01       		.byte	0x1
 3125 0862 CD01     		.2byte	0x1cd
 3126 0864 68000000 		.4byte	0x68
 3127 0868 02       		.uleb128 0x2
 3128 0869 91       		.byte	0x91
 3129 086a 60       		.sleb128 -32
 3130 086b 19       		.uleb128 0x19
 3131 086c 1D060000 		.4byte	.LASF125
 3132 0870 01       		.byte	0x1
 3133 0871 CE01     		.2byte	0x1ce
 3134 0873 9F080000 		.4byte	0x89f
 3135 0877 03       		.uleb128 0x3
 3136 0878 91       		.byte	0x91
 3137 0879 D87E     		.sleb128 -168
 3138 087b 00       		.byte	0
 3139 087c 00       		.byte	0
 3140 087d 00       		.byte	0
 3141 087e 07       		.uleb128 0x7
 3142 087f D7000000 		.4byte	0xd7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 71


 3143 0883 8E080000 		.4byte	0x88e
 3144 0887 08       		.uleb128 0x8
 3145 0888 E5000000 		.4byte	0xe5
 3146 088c C7       		.byte	0xc7
 3147 088d 00       		.byte	0
 3148 088e 07       		.uleb128 0x7
 3149 088f D7000000 		.4byte	0xd7
 3150 0893 9F080000 		.4byte	0x89f
 3151 0897 1E       		.uleb128 0x1e
 3152 0898 E5000000 		.4byte	0xe5
 3153 089c E803     		.2byte	0x3e8
 3154 089e 00       		.byte	0
 3155 089f 07       		.uleb128 0x7
 3156 08a0 D7000000 		.4byte	0xd7
 3157 08a4 AF080000 		.4byte	0x8af
 3158 08a8 08       		.uleb128 0x8
 3159 08a9 E5000000 		.4byte	0xe5
 3160 08ad 09       		.byte	0x9
 3161 08ae 00       		.byte	0
 3162 08af 1B       		.uleb128 0x1b
 3163 08b0 9C050000 		.4byte	.LASF126
 3164 08b4 01       		.byte	0x1
 3165 08b5 EB01     		.2byte	0x1eb
 3166 08b7 81000000 		.4byte	0x81
 3167 08bb 00000000 		.4byte	.LFB75
 3168 08bf 44000000 		.4byte	.LFE75-.LFB75
 3169 08c3 01       		.uleb128 0x1
 3170 08c4 9C       		.byte	0x9c
 3171 08c5 E3080000 		.4byte	0x8e3
 3172 08c9 1C       		.uleb128 0x1c
 3173 08ca 20000000 		.4byte	.LBB8
 3174 08ce 1A000000 		.4byte	.LBE8-.LBB8
 3175 08d2 19       		.uleb128 0x19
 3176 08d3 77020000 		.4byte	.LASF119
 3177 08d7 01       		.byte	0x1
 3178 08d8 F601     		.2byte	0x1f6
 3179 08da 4C000000 		.4byte	0x4c
 3180 08de 02       		.uleb128 0x2
 3181 08df 91       		.byte	0x91
 3182 08e0 74       		.sleb128 -12
 3183 08e1 00       		.byte	0
 3184 08e2 00       		.byte	0
 3185 08e3 1B       		.uleb128 0x1b
 3186 08e4 A8030000 		.4byte	.LASF127
 3187 08e8 01       		.byte	0x1
 3188 08e9 0B02     		.2byte	0x20b
 3189 08eb 81000000 		.4byte	0x81
 3190 08ef 00000000 		.4byte	.LFB76
 3191 08f3 74020000 		.4byte	.LFE76-.LFB76
 3192 08f7 01       		.uleb128 0x1
 3193 08f8 9C       		.byte	0x9c
 3194 08f9 74090000 		.4byte	0x974
 3195 08fd 19       		.uleb128 0x19
 3196 08fe 1B050000 		.4byte	.LASF59
 3197 0902 01       		.byte	0x1
 3198 0903 0E02     		.2byte	0x20e
 3199 0905 4C000000 		.4byte	0x4c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 72


 3200 0909 02       		.uleb128 0x2
 3201 090a 91       		.byte	0x91
 3202 090b 6C       		.sleb128 -20
 3203 090c 19       		.uleb128 0x19
 3204 090d FA060000 		.4byte	.LASF128
 3205 0911 01       		.byte	0x1
 3206 0912 0F02     		.2byte	0x20f
 3207 0914 74090000 		.4byte	0x974
 3208 0918 02       		.uleb128 0x2
 3209 0919 91       		.byte	0x91
 3210 091a 4C       		.sleb128 -52
 3211 091b 19       		.uleb128 0x19
 3212 091c D7020000 		.4byte	.LASF58
 3213 0920 01       		.byte	0x1
 3214 0921 1302     		.2byte	0x213
 3215 0923 61030000 		.4byte	0x361
 3216 0927 03       		.uleb128 0x3
 3217 0928 91       		.byte	0x91
 3218 0929 B87F     		.sleb128 -72
 3219 092b 19       		.uleb128 0x19
 3220 092c 52030000 		.4byte	.LASF129
 3221 0930 01       		.byte	0x1
 3222 0931 3102     		.2byte	0x231
 3223 0933 6D020000 		.4byte	0x26d
 3224 0937 03       		.uleb128 0x3
 3225 0938 91       		.byte	0x91
 3226 0939 A47F     		.sleb128 -92
 3227 093b 1D       		.uleb128 0x1d
 3228 093c 22000000 		.4byte	.LBB9
 3229 0940 78000000 		.4byte	.LBE9-.LBB9
 3230 0944 59090000 		.4byte	0x959
 3231 0948 19       		.uleb128 0x19
 3232 0949 40070000 		.4byte	.LASF130
 3233 094d 01       		.byte	0x1
 3234 094e 1902     		.2byte	0x219
 3235 0950 1D020000 		.4byte	0x21d
 3236 0954 03       		.uleb128 0x3
 3237 0955 91       		.byte	0x91
 3238 0956 887F     		.sleb128 -120
 3239 0958 00       		.byte	0
 3240 0959 1C       		.uleb128 0x1c
 3241 095a 1E010000 		.4byte	.LBB10
 3242 095e EE000000 		.4byte	.LBE10-.LBB10
 3243 0962 19       		.uleb128 0x19
 3244 0963 97070000 		.4byte	.LASF131
 3245 0967 01       		.byte	0x1
 3246 0968 4C02     		.2byte	0x24c
 3247 096a B1020000 		.4byte	0x2b1
 3248 096e 03       		.uleb128 0x3
 3249 096f 91       		.byte	0x91
 3250 0970 F87E     		.sleb128 -136
 3251 0972 00       		.byte	0
 3252 0973 00       		.byte	0
 3253 0974 07       		.uleb128 0x7
 3254 0975 D7000000 		.4byte	0xd7
 3255 0979 84090000 		.4byte	0x984
 3256 097d 08       		.uleb128 0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 73


 3257 097e E5000000 		.4byte	0xe5
 3258 0982 1F       		.byte	0x1f
 3259 0983 00       		.byte	0
 3260 0984 1F       		.uleb128 0x1f
 3261 0985 15030000 		.4byte	.LASF132
 3262 0989 01       		.byte	0x1
 3263 098a 7202     		.2byte	0x272
 3264 098c 81000000 		.4byte	0x81
 3265 0990 00000000 		.4byte	.LFB77
 3266 0994 74000000 		.4byte	.LFE77-.LFB77
 3267 0998 01       		.uleb128 0x1
 3268 0999 9C       		.byte	0x9c
 3269 099a CA090000 		.4byte	0x9ca
 3270 099e 20       		.uleb128 0x20
 3271 099f 1B050000 		.4byte	.LASF59
 3272 09a3 01       		.byte	0x1
 3273 09a4 7202     		.2byte	0x272
 3274 09a6 4C000000 		.4byte	0x4c
 3275 09aa 02       		.uleb128 0x2
 3276 09ab 91       		.byte	0x91
 3277 09ac 64       		.sleb128 -28
 3278 09ad 21       		.uleb128 0x21
 3279 09ae 7400     		.ascii	"t\000"
 3280 09b0 01       		.byte	0x1
 3281 09b1 7902     		.2byte	0x279
 3282 09b3 CA090000 		.4byte	0x9ca
 3283 09b7 02       		.uleb128 0x2
 3284 09b8 91       		.byte	0x91
 3285 09b9 74       		.sleb128 -12
 3286 09ba 19       		.uleb128 0x19
 3287 09bb FA040000 		.4byte	.LASF133
 3288 09bf 01       		.byte	0x1
 3289 09c0 7E02     		.2byte	0x27e
 3290 09c2 6B010000 		.4byte	0x16b
 3291 09c6 02       		.uleb128 0x2
 3292 09c7 91       		.byte	0x91
 3293 09c8 68       		.sleb128 -24
 3294 09c9 00       		.byte	0
 3295 09ca 06       		.uleb128 0x6
 3296 09cb 04       		.byte	0x4
 3297 09cc BC020000 		.4byte	0x2bc
 3298 09d0 1F       		.uleb128 0x1f
 3299 09d1 B6020000 		.4byte	.LASF134
 3300 09d5 01       		.byte	0x1
 3301 09d6 9B02     		.2byte	0x29b
 3302 09d8 81000000 		.4byte	0x81
 3303 09dc 00000000 		.4byte	.LFB78
 3304 09e0 38010000 		.4byte	.LFE78-.LFB78
 3305 09e4 01       		.uleb128 0x1
 3306 09e5 9C       		.byte	0x9c
 3307 09e6 490A0000 		.4byte	0xa49
 3308 09ea 20       		.uleb128 0x20
 3309 09eb DD020000 		.4byte	.LASF135
 3310 09ef 01       		.byte	0x1
 3311 09f0 9B02     		.2byte	0x29b
 3312 09f2 EC000000 		.4byte	0xec
 3313 09f6 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 74


 3314 09f7 91       		.byte	0x91
 3315 09f8 9C7E     		.sleb128 -228
 3316 09fa 20       		.uleb128 0x20
 3317 09fb D2020000 		.4byte	.LASF136
 3318 09ff 01       		.byte	0x1
 3319 0a00 9B02     		.2byte	0x29b
 3320 0a02 68000000 		.4byte	0x68
 3321 0a06 03       		.uleb128 0x3
 3322 0a07 91       		.byte	0x91
 3323 0a08 987E     		.sleb128 -232
 3324 0a0a 20       		.uleb128 0x20
 3325 0a0b C3040000 		.4byte	.LASF137
 3326 0a0f 01       		.byte	0x1
 3327 0a10 9B02     		.2byte	0x29b
 3328 0a12 EC000000 		.4byte	0xec
 3329 0a16 03       		.uleb128 0x3
 3330 0a17 91       		.byte	0x91
 3331 0a18 947E     		.sleb128 -236
 3332 0a1a 19       		.uleb128 0x19
 3333 0a1b D5010000 		.4byte	.LASF138
 3334 0a1f 01       		.byte	0x1
 3335 0a20 9D02     		.2byte	0x29d
 3336 0a22 81000000 		.4byte	0x81
 3337 0a26 02       		.uleb128 0x2
 3338 0a27 91       		.byte	0x91
 3339 0a28 77       		.sleb128 -9
 3340 0a29 19       		.uleb128 0x19
 3341 0a2a 3C000000 		.4byte	.LASF139
 3342 0a2e 01       		.byte	0x1
 3343 0a2f A402     		.2byte	0x2a4
 3344 0a31 490A0000 		.4byte	0xa49
 3345 0a35 02       		.uleb128 0x2
 3346 0a36 91       		.byte	0x91
 3347 0a37 68       		.sleb128 -24
 3348 0a38 19       		.uleb128 0x19
 3349 0a39 22070000 		.4byte	.LASF116
 3350 0a3d 01       		.byte	0x1
 3351 0a3e AC02     		.2byte	0x2ac
 3352 0a40 7E080000 		.4byte	0x87e
 3353 0a44 03       		.uleb128 0x3
 3354 0a45 91       		.byte	0x91
 3355 0a46 A07E     		.sleb128 -224
 3356 0a48 00       		.byte	0
 3357 0a49 07       		.uleb128 0x7
 3358 0a4a D7000000 		.4byte	0xd7
 3359 0a4e 590A0000 		.4byte	0xa59
 3360 0a52 08       		.uleb128 0x8
 3361 0a53 E5000000 		.4byte	0xe5
 3362 0a57 0B       		.byte	0xb
 3363 0a58 00       		.byte	0
 3364 0a59 22       		.uleb128 0x22
 3365 0a5a 48010000 		.4byte	.LASF140
 3366 0a5e 0D       		.byte	0xd
 3367 0a5f 1207     		.2byte	0x712
 3368 0a61 650A0000 		.4byte	0xa65
 3369 0a65 0C       		.uleb128 0xc
 3370 0a66 76000000 		.4byte	0x76
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 75


 3371 0a6a 23       		.uleb128 0x23
 3372 0a6b 2C000000 		.4byte	.LASF141
 3373 0a6f 0A       		.byte	0xa
 3374 0a70 11       		.byte	0x11
 3375 0a71 6D040000 		.4byte	0x46d
 3376 0a75 05       		.uleb128 0x5
 3377 0a76 03       		.byte	0x3
 3378 0a77 00000000 		.4byte	buffer_overflow
 3379 0a7b 23       		.uleb128 0x23
 3380 0a7c AA040000 		.4byte	.LASF142
 3381 0a80 0A       		.byte	0xa
 3382 0a81 22       		.byte	0x22
 3383 0a82 8D000000 		.4byte	0x8d
 3384 0a86 05       		.uleb128 0x5
 3385 0a87 03       		.byte	0x3
 3386 0a88 00000000 		.4byte	dataPointsInStack
 3387 0a8c 23       		.uleb128 0x23
 3388 0a8d A9070000 		.4byte	.LASF143
 3389 0a91 0A       		.byte	0xa
 3390 0a92 23       		.byte	0x23
 3391 0a93 8D000000 		.4byte	0x8d
 3392 0a97 05       		.uleb128 0x5
 3393 0a98 03       		.byte	0x3
 3394 0a99 00000000 		.4byte	dataPointsInStackDesired
 3395 0a9d 07       		.uleb128 0x7
 3396 0a9e 71030000 		.4byte	0x371
 3397 0aa2 AD0A0000 		.4byte	0xaad
 3398 0aa6 08       		.uleb128 0x8
 3399 0aa7 E5000000 		.4byte	0xe5
 3400 0aab 95       		.byte	0x95
 3401 0aac 00       		.byte	0
 3402 0aad 23       		.uleb128 0x23
 3403 0aae B9030000 		.4byte	.LASF144
 3404 0ab2 0A       		.byte	0xa
 3405 0ab3 24       		.byte	0x24
 3406 0ab4 9D0A0000 		.4byte	0xa9d
 3407 0ab8 05       		.uleb128 0x5
 3408 0ab9 03       		.byte	0x3
 3409 0aba 00000000 		.4byte	data
 3410 0abe 23       		.uleb128 0x23
 3411 0abf 2F010000 		.4byte	.LASF145
 3412 0ac3 0B       		.byte	0xb
 3413 0ac4 1F       		.byte	0x1f
 3414 0ac5 81000000 		.4byte	0x81
 3415 0ac9 05       		.uleb128 0x5
 3416 0aca 03       		.byte	0x3
 3417 0acb 00000000 		.4byte	modem_state
 3418 0acf 23       		.uleb128 0x23
 3419 0ad0 29040000 		.4byte	.LASF146
 3420 0ad4 0B       		.byte	0xb
 3421 0ad5 62       		.byte	0x62
 3422 0ad6 BD000000 		.4byte	0xbd
 3423 0ada 05       		.uleb128 0x5
 3424 0adb 03       		.byte	0x3
 3425 0adc 00000000 		.4byte	modem_start_time_stamp
 3426 0ae0 23       		.uleb128 0x23
 3427 0ae1 CF030000 		.4byte	.LASF85
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 76


 3428 0ae5 0B       		.byte	0xb
 3429 0ae6 63       		.byte	0x63
 3430 0ae7 A9030000 		.4byte	0x3a9
 3431 0aeb 05       		.uleb128 0x5
 3432 0aec 03       		.byte	0x3
 3433 0aed 00000000 		.4byte	modem_info
 3434 0af1 23       		.uleb128 0x23
 3435 0af2 0B070000 		.4byte	.LASF147
 3436 0af6 0B       		.byte	0xb
 3437 0af7 64       		.byte	0x64
 3438 0af8 1D040000 		.4byte	0x41d
 3439 0afc 05       		.uleb128 0x5
 3440 0afd 03       		.byte	0x3
 3441 0afe 00000000 		.4byte	modem_stats
 3442 0b02 23       		.uleb128 0x23
 3443 0b03 33050000 		.4byte	.LASF148
 3444 0b07 0B       		.byte	0xb
 3445 0b08 65       		.byte	0x65
 3446 0b09 74040000 		.4byte	0x474
 3447 0b0d 05       		.uleb128 0x5
 3448 0b0e 03       		.byte	0x3
 3449 0b0f 00000000 		.4byte	updatable_parameters
 3450 0b13 07       		.uleb128 0x7
 3451 0b14 D7000000 		.4byte	0xd7
 3452 0b18 240B0000 		.4byte	0xb24
 3453 0b1c 1E       		.uleb128 0x1e
 3454 0b1d E5000000 		.4byte	0xe5
 3455 0b21 0F27     		.2byte	0x270f
 3456 0b23 00       		.byte	0
 3457 0b24 23       		.uleb128 0x23
 3458 0b25 73050000 		.4byte	.LASF149
 3459 0b29 0C       		.byte	0xc
 3460 0b2a 17       		.byte	0x17
 3461 0b2b 130B0000 		.4byte	0xb13
 3462 0b2f 05       		.uleb128 0x5
 3463 0b30 03       		.byte	0x3
 3464 0b31 00000000 		.4byte	http_request
 3465 0b35 23       		.uleb128 0x23
 3466 0b36 D8070000 		.4byte	.LASF150
 3467 0b3a 0C       		.byte	0xc
 3468 0b3b 18       		.byte	0x18
 3469 0b3c 130B0000 		.4byte	0xb13
 3470 0b40 05       		.uleb128 0x5
 3471 0b41 03       		.byte	0x3
 3472 0b42 00000000 		.4byte	http_body
 3473 0b46 23       		.uleb128 0x23
 3474 0b47 17070000 		.4byte	.LASF151
 3475 0b4b 0C       		.byte	0xc
 3476 0b4c 19       		.byte	0x19
 3477 0b4d 7E080000 		.4byte	0x87e
 3478 0b51 05       		.uleb128 0x5
 3479 0b52 03       		.byte	0x3
 3480 0b53 00000000 		.4byte	http_route
 3481 0b57 23       		.uleb128 0x23
 3482 0b58 58060000 		.4byte	.LASF152
 3483 0b5c 0C       		.byte	0xc
 3484 0b5d 40       		.byte	0x40
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 77


 3485 0b5e EF040000 		.4byte	0x4ef
 3486 0b62 05       		.uleb128 0x5
 3487 0b63 03       		.byte	0x3
 3488 0b64 00000000 		.4byte	system_info
 3489 0b68 23       		.uleb128 0x23
 3490 0b69 F8050000 		.4byte	.LASF153
 3491 0b6d 0C       		.byte	0xc
 3492 0b6e 52       		.byte	0x52
 3493 0b6f 2B050000 		.4byte	0x52b
 3494 0b73 05       		.uleb128 0x5
 3495 0b74 03       		.byte	0x3
 3496 0b75 00000000 		.4byte	system_settings
 3497 0b79 23       		.uleb128 0x23
 3498 0b7a 3B010000 		.4byte	.LASF154
 3499 0b7e 0C       		.byte	0xc
 3500 0b7f 6E       		.byte	0x6e
 3501 0b80 B8040000 		.4byte	0x4b8
 3502 0b84 05       		.uleb128 0x5
 3503 0b85 03       		.byte	0x3
 3504 0b86 00000000 		.4byte	alarmMeasure
 3505 0b8a 23       		.uleb128 0x23
 3506 0b8b 7F010000 		.4byte	.LASF155
 3507 0b8f 0C       		.byte	0xc
 3508 0b90 6F       		.byte	0x6f
 3509 0b91 81000000 		.4byte	0x81
 3510 0b95 05       		.uleb128 0x5
 3511 0b96 03       		.byte	0x3
 3512 0b97 00000000 		.4byte	timeToMeasure
 3513 0b9b 23       		.uleb128 0x23
 3514 0b9c EA020000 		.4byte	.LASF156
 3515 0ba0 0C       		.byte	0xc
 3516 0ba1 70       		.byte	0x70
 3517 0ba2 B8040000 		.4byte	0x4b8
 3518 0ba6 05       		.uleb128 0x5
 3519 0ba7 03       		.byte	0x3
 3520 0ba8 00000000 		.4byte	alarmSync
 3521 0bac 23       		.uleb128 0x23
 3522 0bad A5010000 		.4byte	.LASF157
 3523 0bb1 0C       		.byte	0xc
 3524 0bb2 71       		.byte	0x71
 3525 0bb3 81000000 		.4byte	0x81
 3526 0bb7 05       		.uleb128 0x5
 3527 0bb8 03       		.byte	0x3
 3528 0bb9 00000000 		.4byte	timeToSync
 3529 0bbd 23       		.uleb128 0x23
 3530 0bbe 04050000 		.4byte	.LASF158
 3531 0bc2 0C       		.byte	0xc
 3532 0bc3 72       		.byte	0x72
 3533 0bc4 81000000 		.4byte	0x81
 3534 0bc8 05       		.uleb128 0x5
 3535 0bc9 03       		.byte	0x3
 3536 0bca 00000000 		.4byte	timeToSycnRemoteParams
 3537 0bce 24       		.uleb128 0x24
 3538 0bcf 68657900 		.ascii	"hey\000"
 3539 0bd3 0C       		.byte	0xc
 3540 0bd4 73       		.byte	0x73
 3541 0bd5 81000000 		.4byte	0x81
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 78


 3542 0bd9 05       		.uleb128 0x5
 3543 0bda 03       		.byte	0x3
 3544 0bdb 00000000 		.4byte	hey
 3545 0bdf 07       		.uleb128 0x7
 3546 0be0 D7000000 		.4byte	0xd7
 3547 0be4 EF0B0000 		.4byte	0xbef
 3548 0be8 08       		.uleb128 0x8
 3549 0be9 E5000000 		.4byte	0xe5
 3550 0bed 1D       		.byte	0x1d
 3551 0bee 00       		.byte	0
 3552 0bef 23       		.uleb128 0x23
 3553 0bf0 B2050000 		.4byte	.LASF159
 3554 0bf4 01       		.byte	0x1
 3555 0bf5 1D       		.byte	0x1d
 3556 0bf6 DF0B0000 		.4byte	0xbdf
 3557 0bfa 05       		.uleb128 0x5
 3558 0bfb 03       		.byte	0x3
 3559 0bfc 00000000 		.4byte	Data_fileName
 3560 0c00 23       		.uleb128 0x23
 3561 0c01 6E030000 		.4byte	.LASF92
 3562 0c05 01       		.byte	0x1
 3563 0c06 1E       		.byte	0x1e
 3564 0c07 81000000 		.4byte	0x81
 3565 0c0b 05       		.uleb128 0x5
 3566 0c0c 03       		.byte	0x3
 3567 0c0d 00000000 		.4byte	try_counter
 3568 0c11 00       		.byte	0
 3569              		.section	.debug_abbrev,"",%progbits
 3570              	.Ldebug_abbrev0:
 3571 0000 01       		.uleb128 0x1
 3572 0001 11       		.uleb128 0x11
 3573 0002 01       		.byte	0x1
 3574 0003 25       		.uleb128 0x25
 3575 0004 0E       		.uleb128 0xe
 3576 0005 13       		.uleb128 0x13
 3577 0006 0B       		.uleb128 0xb
 3578 0007 03       		.uleb128 0x3
 3579 0008 0E       		.uleb128 0xe
 3580 0009 1B       		.uleb128 0x1b
 3581 000a 0E       		.uleb128 0xe
 3582 000b 55       		.uleb128 0x55
 3583 000c 17       		.uleb128 0x17
 3584 000d 11       		.uleb128 0x11
 3585 000e 01       		.uleb128 0x1
 3586 000f 10       		.uleb128 0x10
 3587 0010 17       		.uleb128 0x17
 3588 0011 00       		.byte	0
 3589 0012 00       		.byte	0
 3590 0013 02       		.uleb128 0x2
 3591 0014 24       		.uleb128 0x24
 3592 0015 00       		.byte	0
 3593 0016 0B       		.uleb128 0xb
 3594 0017 0B       		.uleb128 0xb
 3595 0018 3E       		.uleb128 0x3e
 3596 0019 0B       		.uleb128 0xb
 3597 001a 03       		.uleb128 0x3
 3598 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 79


 3599 001c 00       		.byte	0
 3600 001d 00       		.byte	0
 3601 001e 03       		.uleb128 0x3
 3602 001f 16       		.uleb128 0x16
 3603 0020 00       		.byte	0
 3604 0021 03       		.uleb128 0x3
 3605 0022 0E       		.uleb128 0xe
 3606 0023 3A       		.uleb128 0x3a
 3607 0024 0B       		.uleb128 0xb
 3608 0025 3B       		.uleb128 0x3b
 3609 0026 0B       		.uleb128 0xb
 3610 0027 49       		.uleb128 0x49
 3611 0028 13       		.uleb128 0x13
 3612 0029 00       		.byte	0
 3613 002a 00       		.byte	0
 3614 002b 04       		.uleb128 0x4
 3615 002c 24       		.uleb128 0x24
 3616 002d 00       		.byte	0
 3617 002e 0B       		.uleb128 0xb
 3618 002f 0B       		.uleb128 0xb
 3619 0030 3E       		.uleb128 0x3e
 3620 0031 0B       		.uleb128 0xb
 3621 0032 03       		.uleb128 0x3
 3622 0033 08       		.uleb128 0x8
 3623 0034 00       		.byte	0
 3624 0035 00       		.byte	0
 3625 0036 05       		.uleb128 0x5
 3626 0037 16       		.uleb128 0x16
 3627 0038 00       		.byte	0
 3628 0039 03       		.uleb128 0x3
 3629 003a 0E       		.uleb128 0xe
 3630 003b 3A       		.uleb128 0x3a
 3631 003c 0B       		.uleb128 0xb
 3632 003d 3B       		.uleb128 0x3b
 3633 003e 05       		.uleb128 0x5
 3634 003f 49       		.uleb128 0x49
 3635 0040 13       		.uleb128 0x13
 3636 0041 00       		.byte	0
 3637 0042 00       		.byte	0
 3638 0043 06       		.uleb128 0x6
 3639 0044 0F       		.uleb128 0xf
 3640 0045 00       		.byte	0
 3641 0046 0B       		.uleb128 0xb
 3642 0047 0B       		.uleb128 0xb
 3643 0048 49       		.uleb128 0x49
 3644 0049 13       		.uleb128 0x13
 3645 004a 00       		.byte	0
 3646 004b 00       		.byte	0
 3647 004c 07       		.uleb128 0x7
 3648 004d 01       		.uleb128 0x1
 3649 004e 01       		.byte	0x1
 3650 004f 49       		.uleb128 0x49
 3651 0050 13       		.uleb128 0x13
 3652 0051 01       		.uleb128 0x1
 3653 0052 13       		.uleb128 0x13
 3654 0053 00       		.byte	0
 3655 0054 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 80


 3656 0055 08       		.uleb128 0x8
 3657 0056 21       		.uleb128 0x21
 3658 0057 00       		.byte	0
 3659 0058 49       		.uleb128 0x49
 3660 0059 13       		.uleb128 0x13
 3661 005a 2F       		.uleb128 0x2f
 3662 005b 0B       		.uleb128 0xb
 3663 005c 00       		.byte	0
 3664 005d 00       		.byte	0
 3665 005e 09       		.uleb128 0x9
 3666 005f 13       		.uleb128 0x13
 3667 0060 01       		.byte	0x1
 3668 0061 0B       		.uleb128 0xb
 3669 0062 0B       		.uleb128 0xb
 3670 0063 3A       		.uleb128 0x3a
 3671 0064 0B       		.uleb128 0xb
 3672 0065 3B       		.uleb128 0x3b
 3673 0066 0B       		.uleb128 0xb
 3674 0067 01       		.uleb128 0x1
 3675 0068 13       		.uleb128 0x13
 3676 0069 00       		.byte	0
 3677 006a 00       		.byte	0
 3678 006b 0A       		.uleb128 0xa
 3679 006c 0D       		.uleb128 0xd
 3680 006d 00       		.byte	0
 3681 006e 03       		.uleb128 0x3
 3682 006f 08       		.uleb128 0x8
 3683 0070 3A       		.uleb128 0x3a
 3684 0071 0B       		.uleb128 0xb
 3685 0072 3B       		.uleb128 0x3b
 3686 0073 0B       		.uleb128 0xb
 3687 0074 49       		.uleb128 0x49
 3688 0075 13       		.uleb128 0x13
 3689 0076 38       		.uleb128 0x38
 3690 0077 0B       		.uleb128 0xb
 3691 0078 00       		.byte	0
 3692 0079 00       		.byte	0
 3693 007a 0B       		.uleb128 0xb
 3694 007b 0D       		.uleb128 0xd
 3695 007c 00       		.byte	0
 3696 007d 03       		.uleb128 0x3
 3697 007e 0E       		.uleb128 0xe
 3698 007f 3A       		.uleb128 0x3a
 3699 0080 0B       		.uleb128 0xb
 3700 0081 3B       		.uleb128 0x3b
 3701 0082 0B       		.uleb128 0xb
 3702 0083 49       		.uleb128 0x49
 3703 0084 13       		.uleb128 0x13
 3704 0085 38       		.uleb128 0x38
 3705 0086 0B       		.uleb128 0xb
 3706 0087 00       		.byte	0
 3707 0088 00       		.byte	0
 3708 0089 0C       		.uleb128 0xc
 3709 008a 35       		.uleb128 0x35
 3710 008b 00       		.byte	0
 3711 008c 49       		.uleb128 0x49
 3712 008d 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 81


 3713 008e 00       		.byte	0
 3714 008f 00       		.byte	0
 3715 0090 0D       		.uleb128 0xd
 3716 0091 13       		.uleb128 0x13
 3717 0092 01       		.byte	0x1
 3718 0093 0B       		.uleb128 0xb
 3719 0094 05       		.uleb128 0x5
 3720 0095 3A       		.uleb128 0x3a
 3721 0096 0B       		.uleb128 0xb
 3722 0097 3B       		.uleb128 0x3b
 3723 0098 0B       		.uleb128 0xb
 3724 0099 01       		.uleb128 0x1
 3725 009a 13       		.uleb128 0x13
 3726 009b 00       		.byte	0
 3727 009c 00       		.byte	0
 3728 009d 0E       		.uleb128 0xe
 3729 009e 13       		.uleb128 0x13
 3730 009f 01       		.byte	0x1
 3731 00a0 03       		.uleb128 0x3
 3732 00a1 08       		.uleb128 0x8
 3733 00a2 0B       		.uleb128 0xb
 3734 00a3 0B       		.uleb128 0xb
 3735 00a4 3A       		.uleb128 0x3a
 3736 00a5 0B       		.uleb128 0xb
 3737 00a6 3B       		.uleb128 0x3b
 3738 00a7 0B       		.uleb128 0xb
 3739 00a8 01       		.uleb128 0x1
 3740 00a9 13       		.uleb128 0x13
 3741 00aa 00       		.byte	0
 3742 00ab 00       		.byte	0
 3743 00ac 0F       		.uleb128 0xf
 3744 00ad 2E       		.uleb128 0x2e
 3745 00ae 00       		.byte	0
 3746 00af 3F       		.uleb128 0x3f
 3747 00b0 19       		.uleb128 0x19
 3748 00b1 03       		.uleb128 0x3
 3749 00b2 0E       		.uleb128 0xe
 3750 00b3 3A       		.uleb128 0x3a
 3751 00b4 0B       		.uleb128 0xb
 3752 00b5 3B       		.uleb128 0x3b
 3753 00b6 0B       		.uleb128 0xb
 3754 00b7 27       		.uleb128 0x27
 3755 00b8 19       		.uleb128 0x19
 3756 00b9 11       		.uleb128 0x11
 3757 00ba 01       		.uleb128 0x1
 3758 00bb 12       		.uleb128 0x12
 3759 00bc 06       		.uleb128 0x6
 3760 00bd 40       		.uleb128 0x40
 3761 00be 18       		.uleb128 0x18
 3762 00bf 9642     		.uleb128 0x2116
 3763 00c1 19       		.uleb128 0x19
 3764 00c2 00       		.byte	0
 3765 00c3 00       		.byte	0
 3766 00c4 10       		.uleb128 0x10
 3767 00c5 2E       		.uleb128 0x2e
 3768 00c6 01       		.byte	0x1
 3769 00c7 3F       		.uleb128 0x3f
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 82


 3770 00c8 19       		.uleb128 0x19
 3771 00c9 03       		.uleb128 0x3
 3772 00ca 0E       		.uleb128 0xe
 3773 00cb 3A       		.uleb128 0x3a
 3774 00cc 0B       		.uleb128 0xb
 3775 00cd 3B       		.uleb128 0x3b
 3776 00ce 0B       		.uleb128 0xb
 3777 00cf 11       		.uleb128 0x11
 3778 00d0 01       		.uleb128 0x1
 3779 00d1 12       		.uleb128 0x12
 3780 00d2 06       		.uleb128 0x6
 3781 00d3 40       		.uleb128 0x40
 3782 00d4 18       		.uleb128 0x18
 3783 00d5 9642     		.uleb128 0x2116
 3784 00d7 19       		.uleb128 0x19
 3785 00d8 01       		.uleb128 0x1
 3786 00d9 13       		.uleb128 0x13
 3787 00da 00       		.byte	0
 3788 00db 00       		.byte	0
 3789 00dc 11       		.uleb128 0x11
 3790 00dd 34       		.uleb128 0x34
 3791 00de 00       		.byte	0
 3792 00df 03       		.uleb128 0x3
 3793 00e0 0E       		.uleb128 0xe
 3794 00e1 3A       		.uleb128 0x3a
 3795 00e2 0B       		.uleb128 0xb
 3796 00e3 3B       		.uleb128 0x3b
 3797 00e4 0B       		.uleb128 0xb
 3798 00e5 49       		.uleb128 0x49
 3799 00e6 13       		.uleb128 0x13
 3800 00e7 02       		.uleb128 0x2
 3801 00e8 18       		.uleb128 0x18
 3802 00e9 00       		.byte	0
 3803 00ea 00       		.byte	0
 3804 00eb 12       		.uleb128 0x12
 3805 00ec 2E       		.uleb128 0x2e
 3806 00ed 01       		.byte	0x1
 3807 00ee 3F       		.uleb128 0x3f
 3808 00ef 19       		.uleb128 0x19
 3809 00f0 03       		.uleb128 0x3
 3810 00f1 0E       		.uleb128 0xe
 3811 00f2 3A       		.uleb128 0x3a
 3812 00f3 0B       		.uleb128 0xb
 3813 00f4 3B       		.uleb128 0x3b
 3814 00f5 0B       		.uleb128 0xb
 3815 00f6 49       		.uleb128 0x49
 3816 00f7 13       		.uleb128 0x13
 3817 00f8 11       		.uleb128 0x11
 3818 00f9 01       		.uleb128 0x1
 3819 00fa 12       		.uleb128 0x12
 3820 00fb 06       		.uleb128 0x6
 3821 00fc 40       		.uleb128 0x40
 3822 00fd 18       		.uleb128 0x18
 3823 00fe 9642     		.uleb128 0x2116
 3824 0100 19       		.uleb128 0x19
 3825 0101 01       		.uleb128 0x1
 3826 0102 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 83


 3827 0103 00       		.byte	0
 3828 0104 00       		.byte	0
 3829 0105 13       		.uleb128 0x13
 3830 0106 2E       		.uleb128 0x2e
 3831 0107 00       		.byte	0
 3832 0108 3F       		.uleb128 0x3f
 3833 0109 19       		.uleb128 0x19
 3834 010a 03       		.uleb128 0x3
 3835 010b 0E       		.uleb128 0xe
 3836 010c 3A       		.uleb128 0x3a
 3837 010d 0B       		.uleb128 0xb
 3838 010e 3B       		.uleb128 0x3b
 3839 010f 0B       		.uleb128 0xb
 3840 0110 11       		.uleb128 0x11
 3841 0111 01       		.uleb128 0x1
 3842 0112 12       		.uleb128 0x12
 3843 0113 06       		.uleb128 0x6
 3844 0114 40       		.uleb128 0x40
 3845 0115 18       		.uleb128 0x18
 3846 0116 9642     		.uleb128 0x2116
 3847 0118 19       		.uleb128 0x19
 3848 0119 00       		.byte	0
 3849 011a 00       		.byte	0
 3850 011b 14       		.uleb128 0x14
 3851 011c 2E       		.uleb128 0x2e
 3852 011d 01       		.byte	0x1
 3853 011e 3F       		.uleb128 0x3f
 3854 011f 19       		.uleb128 0x19
 3855 0120 03       		.uleb128 0x3
 3856 0121 0E       		.uleb128 0xe
 3857 0122 3A       		.uleb128 0x3a
 3858 0123 0B       		.uleb128 0xb
 3859 0124 3B       		.uleb128 0x3b
 3860 0125 0B       		.uleb128 0xb
 3861 0126 27       		.uleb128 0x27
 3862 0127 19       		.uleb128 0x19
 3863 0128 11       		.uleb128 0x11
 3864 0129 01       		.uleb128 0x1
 3865 012a 12       		.uleb128 0x12
 3866 012b 06       		.uleb128 0x6
 3867 012c 40       		.uleb128 0x40
 3868 012d 18       		.uleb128 0x18
 3869 012e 9642     		.uleb128 0x2116
 3870 0130 19       		.uleb128 0x19
 3871 0131 01       		.uleb128 0x1
 3872 0132 13       		.uleb128 0x13
 3873 0133 00       		.byte	0
 3874 0134 00       		.byte	0
 3875 0135 15       		.uleb128 0x15
 3876 0136 05       		.uleb128 0x5
 3877 0137 00       		.byte	0
 3878 0138 03       		.uleb128 0x3
 3879 0139 0E       		.uleb128 0xe
 3880 013a 3A       		.uleb128 0x3a
 3881 013b 0B       		.uleb128 0xb
 3882 013c 3B       		.uleb128 0x3b
 3883 013d 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 84


 3884 013e 49       		.uleb128 0x49
 3885 013f 13       		.uleb128 0x13
 3886 0140 02       		.uleb128 0x2
 3887 0141 18       		.uleb128 0x18
 3888 0142 00       		.byte	0
 3889 0143 00       		.byte	0
 3890 0144 16       		.uleb128 0x16
 3891 0145 2E       		.uleb128 0x2e
 3892 0146 01       		.byte	0x1
 3893 0147 3F       		.uleb128 0x3f
 3894 0148 19       		.uleb128 0x19
 3895 0149 03       		.uleb128 0x3
 3896 014a 0E       		.uleb128 0xe
 3897 014b 3A       		.uleb128 0x3a
 3898 014c 0B       		.uleb128 0xb
 3899 014d 3B       		.uleb128 0x3b
 3900 014e 0B       		.uleb128 0xb
 3901 014f 27       		.uleb128 0x27
 3902 0150 19       		.uleb128 0x19
 3903 0151 49       		.uleb128 0x49
 3904 0152 13       		.uleb128 0x13
 3905 0153 11       		.uleb128 0x11
 3906 0154 01       		.uleb128 0x1
 3907 0155 12       		.uleb128 0x12
 3908 0156 06       		.uleb128 0x6
 3909 0157 40       		.uleb128 0x40
 3910 0158 18       		.uleb128 0x18
 3911 0159 9642     		.uleb128 0x2116
 3912 015b 19       		.uleb128 0x19
 3913 015c 01       		.uleb128 0x1
 3914 015d 13       		.uleb128 0x13
 3915 015e 00       		.byte	0
 3916 015f 00       		.byte	0
 3917 0160 17       		.uleb128 0x17
 3918 0161 2E       		.uleb128 0x2e
 3919 0162 01       		.byte	0x1
 3920 0163 3F       		.uleb128 0x3f
 3921 0164 19       		.uleb128 0x19
 3922 0165 03       		.uleb128 0x3
 3923 0166 0E       		.uleb128 0xe
 3924 0167 3A       		.uleb128 0x3a
 3925 0168 0B       		.uleb128 0xb
 3926 0169 3B       		.uleb128 0x3b
 3927 016a 0B       		.uleb128 0xb
 3928 016b 27       		.uleb128 0x27
 3929 016c 19       		.uleb128 0x19
 3930 016d 11       		.uleb128 0x11
 3931 016e 01       		.uleb128 0x1
 3932 016f 12       		.uleb128 0x12
 3933 0170 06       		.uleb128 0x6
 3934 0171 40       		.uleb128 0x40
 3935 0172 18       		.uleb128 0x18
 3936 0173 9742     		.uleb128 0x2117
 3937 0175 19       		.uleb128 0x19
 3938 0176 01       		.uleb128 0x1
 3939 0177 13       		.uleb128 0x13
 3940 0178 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 85


 3941 0179 00       		.byte	0
 3942 017a 18       		.uleb128 0x18
 3943 017b 2E       		.uleb128 0x2e
 3944 017c 01       		.byte	0x1
 3945 017d 3F       		.uleb128 0x3f
 3946 017e 19       		.uleb128 0x19
 3947 017f 03       		.uleb128 0x3
 3948 0180 0E       		.uleb128 0xe
 3949 0181 3A       		.uleb128 0x3a
 3950 0182 0B       		.uleb128 0xb
 3951 0183 3B       		.uleb128 0x3b
 3952 0184 0B       		.uleb128 0xb
 3953 0185 27       		.uleb128 0x27
 3954 0186 19       		.uleb128 0x19
 3955 0187 49       		.uleb128 0x49
 3956 0188 13       		.uleb128 0x13
 3957 0189 11       		.uleb128 0x11
 3958 018a 01       		.uleb128 0x1
 3959 018b 12       		.uleb128 0x12
 3960 018c 06       		.uleb128 0x6
 3961 018d 40       		.uleb128 0x40
 3962 018e 18       		.uleb128 0x18
 3963 018f 9742     		.uleb128 0x2117
 3964 0191 19       		.uleb128 0x19
 3965 0192 01       		.uleb128 0x1
 3966 0193 13       		.uleb128 0x13
 3967 0194 00       		.byte	0
 3968 0195 00       		.byte	0
 3969 0196 19       		.uleb128 0x19
 3970 0197 34       		.uleb128 0x34
 3971 0198 00       		.byte	0
 3972 0199 03       		.uleb128 0x3
 3973 019a 0E       		.uleb128 0xe
 3974 019b 3A       		.uleb128 0x3a
 3975 019c 0B       		.uleb128 0xb
 3976 019d 3B       		.uleb128 0x3b
 3977 019e 05       		.uleb128 0x5
 3978 019f 49       		.uleb128 0x49
 3979 01a0 13       		.uleb128 0x13
 3980 01a1 02       		.uleb128 0x2
 3981 01a2 18       		.uleb128 0x18
 3982 01a3 00       		.byte	0
 3983 01a4 00       		.byte	0
 3984 01a5 1A       		.uleb128 0x1a
 3985 01a6 2E       		.uleb128 0x2e
 3986 01a7 00       		.byte	0
 3987 01a8 3F       		.uleb128 0x3f
 3988 01a9 19       		.uleb128 0x19
 3989 01aa 03       		.uleb128 0x3
 3990 01ab 0E       		.uleb128 0xe
 3991 01ac 3A       		.uleb128 0x3a
 3992 01ad 0B       		.uleb128 0xb
 3993 01ae 3B       		.uleb128 0x3b
 3994 01af 05       		.uleb128 0x5
 3995 01b0 27       		.uleb128 0x27
 3996 01b1 19       		.uleb128 0x19
 3997 01b2 49       		.uleb128 0x49
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 86


 3998 01b3 13       		.uleb128 0x13
 3999 01b4 11       		.uleb128 0x11
 4000 01b5 01       		.uleb128 0x1
 4001 01b6 12       		.uleb128 0x12
 4002 01b7 06       		.uleb128 0x6
 4003 01b8 40       		.uleb128 0x40
 4004 01b9 18       		.uleb128 0x18
 4005 01ba 9642     		.uleb128 0x2116
 4006 01bc 19       		.uleb128 0x19
 4007 01bd 00       		.byte	0
 4008 01be 00       		.byte	0
 4009 01bf 1B       		.uleb128 0x1b
 4010 01c0 2E       		.uleb128 0x2e
 4011 01c1 01       		.byte	0x1
 4012 01c2 3F       		.uleb128 0x3f
 4013 01c3 19       		.uleb128 0x19
 4014 01c4 03       		.uleb128 0x3
 4015 01c5 0E       		.uleb128 0xe
 4016 01c6 3A       		.uleb128 0x3a
 4017 01c7 0B       		.uleb128 0xb
 4018 01c8 3B       		.uleb128 0x3b
 4019 01c9 05       		.uleb128 0x5
 4020 01ca 49       		.uleb128 0x49
 4021 01cb 13       		.uleb128 0x13
 4022 01cc 11       		.uleb128 0x11
 4023 01cd 01       		.uleb128 0x1
 4024 01ce 12       		.uleb128 0x12
 4025 01cf 06       		.uleb128 0x6
 4026 01d0 40       		.uleb128 0x40
 4027 01d1 18       		.uleb128 0x18
 4028 01d2 9642     		.uleb128 0x2116
 4029 01d4 19       		.uleb128 0x19
 4030 01d5 01       		.uleb128 0x1
 4031 01d6 13       		.uleb128 0x13
 4032 01d7 00       		.byte	0
 4033 01d8 00       		.byte	0
 4034 01d9 1C       		.uleb128 0x1c
 4035 01da 0B       		.uleb128 0xb
 4036 01db 01       		.byte	0x1
 4037 01dc 11       		.uleb128 0x11
 4038 01dd 01       		.uleb128 0x1
 4039 01de 12       		.uleb128 0x12
 4040 01df 06       		.uleb128 0x6
 4041 01e0 00       		.byte	0
 4042 01e1 00       		.byte	0
 4043 01e2 1D       		.uleb128 0x1d
 4044 01e3 0B       		.uleb128 0xb
 4045 01e4 01       		.byte	0x1
 4046 01e5 11       		.uleb128 0x11
 4047 01e6 01       		.uleb128 0x1
 4048 01e7 12       		.uleb128 0x12
 4049 01e8 06       		.uleb128 0x6
 4050 01e9 01       		.uleb128 0x1
 4051 01ea 13       		.uleb128 0x13
 4052 01eb 00       		.byte	0
 4053 01ec 00       		.byte	0
 4054 01ed 1E       		.uleb128 0x1e
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 87


 4055 01ee 21       		.uleb128 0x21
 4056 01ef 00       		.byte	0
 4057 01f0 49       		.uleb128 0x49
 4058 01f1 13       		.uleb128 0x13
 4059 01f2 2F       		.uleb128 0x2f
 4060 01f3 05       		.uleb128 0x5
 4061 01f4 00       		.byte	0
 4062 01f5 00       		.byte	0
 4063 01f6 1F       		.uleb128 0x1f
 4064 01f7 2E       		.uleb128 0x2e
 4065 01f8 01       		.byte	0x1
 4066 01f9 3F       		.uleb128 0x3f
 4067 01fa 19       		.uleb128 0x19
 4068 01fb 03       		.uleb128 0x3
 4069 01fc 0E       		.uleb128 0xe
 4070 01fd 3A       		.uleb128 0x3a
 4071 01fe 0B       		.uleb128 0xb
 4072 01ff 3B       		.uleb128 0x3b
 4073 0200 05       		.uleb128 0x5
 4074 0201 27       		.uleb128 0x27
 4075 0202 19       		.uleb128 0x19
 4076 0203 49       		.uleb128 0x49
 4077 0204 13       		.uleb128 0x13
 4078 0205 11       		.uleb128 0x11
 4079 0206 01       		.uleb128 0x1
 4080 0207 12       		.uleb128 0x12
 4081 0208 06       		.uleb128 0x6
 4082 0209 40       		.uleb128 0x40
 4083 020a 18       		.uleb128 0x18
 4084 020b 9642     		.uleb128 0x2116
 4085 020d 19       		.uleb128 0x19
 4086 020e 01       		.uleb128 0x1
 4087 020f 13       		.uleb128 0x13
 4088 0210 00       		.byte	0
 4089 0211 00       		.byte	0
 4090 0212 20       		.uleb128 0x20
 4091 0213 05       		.uleb128 0x5
 4092 0214 00       		.byte	0
 4093 0215 03       		.uleb128 0x3
 4094 0216 0E       		.uleb128 0xe
 4095 0217 3A       		.uleb128 0x3a
 4096 0218 0B       		.uleb128 0xb
 4097 0219 3B       		.uleb128 0x3b
 4098 021a 05       		.uleb128 0x5
 4099 021b 49       		.uleb128 0x49
 4100 021c 13       		.uleb128 0x13
 4101 021d 02       		.uleb128 0x2
 4102 021e 18       		.uleb128 0x18
 4103 021f 00       		.byte	0
 4104 0220 00       		.byte	0
 4105 0221 21       		.uleb128 0x21
 4106 0222 34       		.uleb128 0x34
 4107 0223 00       		.byte	0
 4108 0224 03       		.uleb128 0x3
 4109 0225 08       		.uleb128 0x8
 4110 0226 3A       		.uleb128 0x3a
 4111 0227 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 88


 4112 0228 3B       		.uleb128 0x3b
 4113 0229 05       		.uleb128 0x5
 4114 022a 49       		.uleb128 0x49
 4115 022b 13       		.uleb128 0x13
 4116 022c 02       		.uleb128 0x2
 4117 022d 18       		.uleb128 0x18
 4118 022e 00       		.byte	0
 4119 022f 00       		.byte	0
 4120 0230 22       		.uleb128 0x22
 4121 0231 34       		.uleb128 0x34
 4122 0232 00       		.byte	0
 4123 0233 03       		.uleb128 0x3
 4124 0234 0E       		.uleb128 0xe
 4125 0235 3A       		.uleb128 0x3a
 4126 0236 0B       		.uleb128 0xb
 4127 0237 3B       		.uleb128 0x3b
 4128 0238 05       		.uleb128 0x5
 4129 0239 49       		.uleb128 0x49
 4130 023a 13       		.uleb128 0x13
 4131 023b 3F       		.uleb128 0x3f
 4132 023c 19       		.uleb128 0x19
 4133 023d 3C       		.uleb128 0x3c
 4134 023e 19       		.uleb128 0x19
 4135 023f 00       		.byte	0
 4136 0240 00       		.byte	0
 4137 0241 23       		.uleb128 0x23
 4138 0242 34       		.uleb128 0x34
 4139 0243 00       		.byte	0
 4140 0244 03       		.uleb128 0x3
 4141 0245 0E       		.uleb128 0xe
 4142 0246 3A       		.uleb128 0x3a
 4143 0247 0B       		.uleb128 0xb
 4144 0248 3B       		.uleb128 0x3b
 4145 0249 0B       		.uleb128 0xb
 4146 024a 49       		.uleb128 0x49
 4147 024b 13       		.uleb128 0x13
 4148 024c 3F       		.uleb128 0x3f
 4149 024d 19       		.uleb128 0x19
 4150 024e 02       		.uleb128 0x2
 4151 024f 18       		.uleb128 0x18
 4152 0250 00       		.byte	0
 4153 0251 00       		.byte	0
 4154 0252 24       		.uleb128 0x24
 4155 0253 34       		.uleb128 0x34
 4156 0254 00       		.byte	0
 4157 0255 03       		.uleb128 0x3
 4158 0256 08       		.uleb128 0x8
 4159 0257 3A       		.uleb128 0x3a
 4160 0258 0B       		.uleb128 0xb
 4161 0259 3B       		.uleb128 0x3b
 4162 025a 0B       		.uleb128 0xb
 4163 025b 49       		.uleb128 0x49
 4164 025c 13       		.uleb128 0x13
 4165 025d 3F       		.uleb128 0x3f
 4166 025e 19       		.uleb128 0x19
 4167 025f 02       		.uleb128 0x2
 4168 0260 18       		.uleb128 0x18
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 89


 4169 0261 00       		.byte	0
 4170 0262 00       		.byte	0
 4171 0263 00       		.byte	0
 4172              		.section	.debug_aranges,"",%progbits
 4173 0000 8C000000 		.4byte	0x8c
 4174 0004 0200     		.2byte	0x2
 4175 0006 00000000 		.4byte	.Ldebug_info0
 4176 000a 04       		.byte	0x4
 4177 000b 00       		.byte	0
 4178 000c 0000     		.2byte	0
 4179 000e 0000     		.2byte	0
 4180 0010 00000000 		.4byte	.LFB64
 4181 0014 0C000000 		.4byte	.LFE64-.LFB64
 4182 0018 00000000 		.4byte	.LFB65
 4183 001c F8000000 		.4byte	.LFE65-.LFB65
 4184 0020 00000000 		.4byte	.LFB66
 4185 0024 64000000 		.4byte	.LFE66-.LFB66
 4186 0028 00000000 		.4byte	.LFB67
 4187 002c 2A000000 		.4byte	.LFE67-.LFB67
 4188 0030 00000000 		.4byte	.LFB68
 4189 0034 50000000 		.4byte	.LFE68-.LFB68
 4190 0038 00000000 		.4byte	.LFB69
 4191 003c 48000000 		.4byte	.LFE69-.LFB69
 4192 0040 00000000 		.4byte	.LFB70
 4193 0044 1E000000 		.4byte	.LFE70-.LFB70
 4194 0048 00000000 		.4byte	.LFB71
 4195 004c 46000000 		.4byte	.LFE71-.LFB71
 4196 0050 00000000 		.4byte	.LFB72
 4197 0054 04010000 		.4byte	.LFE72-.LFB72
 4198 0058 00000000 		.4byte	.LFB73
 4199 005c 1E000000 		.4byte	.LFE73-.LFB73
 4200 0060 00000000 		.4byte	.LFB74
 4201 0064 5C040000 		.4byte	.LFE74-.LFB74
 4202 0068 00000000 		.4byte	.LFB75
 4203 006c 44000000 		.4byte	.LFE75-.LFB75
 4204 0070 00000000 		.4byte	.LFB76
 4205 0074 74020000 		.4byte	.LFE76-.LFB76
 4206 0078 00000000 		.4byte	.LFB77
 4207 007c 74000000 		.4byte	.LFE77-.LFB77
 4208 0080 00000000 		.4byte	.LFB78
 4209 0084 38010000 		.4byte	.LFE78-.LFB78
 4210 0088 00000000 		.4byte	0
 4211 008c 00000000 		.4byte	0
 4212              		.section	.debug_ranges,"",%progbits
 4213              	.Ldebug_ranges0:
 4214 0000 00000000 		.4byte	.LFB64
 4215 0004 0C000000 		.4byte	.LFE64
 4216 0008 00000000 		.4byte	.LFB65
 4217 000c F8000000 		.4byte	.LFE65
 4218 0010 00000000 		.4byte	.LFB66
 4219 0014 64000000 		.4byte	.LFE66
 4220 0018 00000000 		.4byte	.LFB67
 4221 001c 2A000000 		.4byte	.LFE67
 4222 0020 00000000 		.4byte	.LFB68
 4223 0024 50000000 		.4byte	.LFE68
 4224 0028 00000000 		.4byte	.LFB69
 4225 002c 48000000 		.4byte	.LFE69
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 90


 4226 0030 00000000 		.4byte	.LFB70
 4227 0034 1E000000 		.4byte	.LFE70
 4228 0038 00000000 		.4byte	.LFB71
 4229 003c 46000000 		.4byte	.LFE71
 4230 0040 00000000 		.4byte	.LFB72
 4231 0044 04010000 		.4byte	.LFE72
 4232 0048 00000000 		.4byte	.LFB73
 4233 004c 1E000000 		.4byte	.LFE73
 4234 0050 00000000 		.4byte	.LFB74
 4235 0054 5C040000 		.4byte	.LFE74
 4236 0058 00000000 		.4byte	.LFB75
 4237 005c 44000000 		.4byte	.LFE75
 4238 0060 00000000 		.4byte	.LFB76
 4239 0064 74020000 		.4byte	.LFE76
 4240 0068 00000000 		.4byte	.LFB77
 4241 006c 74000000 		.4byte	.LFE77
 4242 0070 00000000 		.4byte	.LFB78
 4243 0074 38010000 		.4byte	.LFE78
 4244 0078 00000000 		.4byte	0
 4245 007c 00000000 		.4byte	0
 4246              		.section	.debug_line,"",%progbits
 4247              	.Ldebug_line0:
 4248 0000 1D040000 		.section	.debug_str,"MS",%progbits,1
 4248      02001B02 
 4248      00000201 
 4248      FB0E0D00 
 4248      01010101 
 4249              	.LASF109:
 4250 0000 745F6D6F 		.ascii	"t_modem\000"
 4250      64656D00 
 4251              	.LASF12:
 4252 0008 75696E74 		.ascii	"uint16\000"
 4252      313600
 4253              	.LASF51:
 4254 000f 746D5F68 		.ascii	"tm_hour\000"
 4254      6F757200 
 4255              	.LASF36:
 4256 0017 6E756D5F 		.ascii	"num_invalid_readings\000"
 4256      696E7661 
 4256      6C69645F 
 4256      72656164 
 4256      696E6773 
 4257              	.LASF141:
 4258 002c 62756666 		.ascii	"buffer_overflow\000"
 4258      65725F6F 
 4258      76657266 
 4258      6C6F7700 
 4259              	.LASF139:
 4260 003c 66696C65 		.ascii	"fileName\000"
 4260      4E616D65 
 4260      00
 4261              	.LASF0:
 4262 0045 7369676E 		.ascii	"signed char\000"
 4262      65642063 
 4262      68617200 
 4263              	.LASF83:
 4264 0051 636F756E 		.ascii	"countDownResetCondition\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 91


 4264      74446F77 
 4264      6E526573 
 4264      6574436F 
 4264      6E646974 
 4265              	.LASF163:
 4266 0069 57616B65 		.ascii	"Wakeup_ISR\000"
 4266      75705F49 
 4266      535200
 4267              	.LASF160:
 4268 0074 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4268      43313120 
 4268      352E342E 
 4268      31203230 
 4268      31363036 
 4269 00a7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4269      20726576 
 4269      6973696F 
 4269      6E203233 
 4269      37373135 
 4270 00da 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4270      66756E63 
 4270      74696F6E 
 4270      2D736563 
 4270      74696F6E 
 4271              	.LASF107:
 4272 0102 745F7072 		.ascii	"t_pressure\000"
 4272      65737375 
 4272      726500
 4273              	.LASF26:
 4274 010d 4D6F6E74 		.ascii	"Month\000"
 4274      6800
 4275              	.LASF7:
 4276 0113 6C6F6E67 		.ascii	"long long unsigned int\000"
 4276      206C6F6E 
 4276      6720756E 
 4276      7369676E 
 4276      65642069 
 4277              	.LASF22:
 4278 012a 486F7572 		.ascii	"Hour\000"
 4278      00
 4279              	.LASF145:
 4280 012f 6D6F6465 		.ascii	"modem_state\000"
 4280      6D5F7374 
 4280      61746500 
 4281              	.LASF154:
 4282 013b 616C6172 		.ascii	"alarmMeasure\000"
 4282      6D4D6561 
 4282      73757265 
 4282      00
 4283              	.LASF140:
 4284 0148 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4284      52784275 
 4284      66666572 
 4284      00
 4285              	.LASF105:
 4286 0155 745F6C65 		.ascii	"t_level_sensor\000"
 4286      76656C5F 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 92


 4286      73656E73 
 4286      6F7200
 4287              	.LASF6:
 4288 0164 6C6F6E67 		.ascii	"long long int\000"
 4288      206C6F6E 
 4288      6720696E 
 4288      7400
 4289              	.LASF118:
 4290 0172 7061636B 		.ascii	"packets\000"
 4290      65747300 
 4291              	.LASF67:
 4292 017a 65636E6F 		.ascii	"ecno\000"
 4292      00
 4293              	.LASF155:
 4294 017f 74696D65 		.ascii	"timeToMeasure\000"
 4294      546F4D65 
 4294      61737572 
 4294      6500
 4295              	.LASF70:
 4296 018d 74696D65 		.ascii	"time_to_network_connect\000"
 4296      5F746F5F 
 4296      6E657477 
 4296      6F726B5F 
 4296      636F6E6E 
 4297              	.LASF157:
 4298 01a5 74696D65 		.ascii	"timeToSync\000"
 4298      546F5379 
 4298      6E6300
 4299              	.LASF39:
 4300 01b0 766F6C74 		.ascii	"voltage_solar\000"
 4300      6167655F 
 4300      736F6C61 
 4300      7200
 4301              	.LASF40:
 4302 01be 766F6C74 		.ascii	"voltage_charge_current\000"
 4302      6167655F 
 4302      63686172 
 4302      67655F63 
 4302      75727265 
 4303              	.LASF138:
 4304 01d5 75706772 		.ascii	"upgrade_status\000"
 4304      6164655F 
 4304      73746174 
 4304      757300
 4305              	.LASF121:
 4306 01e4 635F6461 		.ascii	"c_data_count_sent\000"
 4306      74615F63 
 4306      6F756E74 
 4306      5F73656E 
 4306      7400
 4307              	.LASF64:
 4308 01f6 6D6F6465 		.ascii	"modem_info_t\000"
 4308      6D5F696E 
 4308      666F5F74 
 4308      00
 4309              	.LASF65:
 4310 0203 72786C65 		.ascii	"rxlev\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 93


 4310      7600
 4311              	.LASF4:
 4312 0209 6C6F6E67 		.ascii	"long int\000"
 4312      20696E74 
 4312      00
 4313              	.LASF71:
 4314 0212 74696D65 		.ascii	"time_to_acquire_ip\000"
 4314      5F746F5F 
 4314      61637175 
 4314      6972655F 
 4314      697000
 4315              	.LASF84:
 4316 0225 616C6172 		.ascii	"alarm\000"
 4316      6D00
 4317              	.LASF45:
 4318 022b 70726573 		.ascii	"pressure_voltage_off\000"
 4318      73757265 
 4318      5F766F6C 
 4318      74616765 
 4318      5F6F6666 
 4319              	.LASF11:
 4320 0240 75696E74 		.ascii	"uint8\000"
 4320      3800
 4321              	.LASF113:
 4322 0246 635F7472 		.ascii	"c_try_counter\000"
 4322      795F636F 
 4322      756E7465 
 4322      7200
 4323              	.LASF124:
 4324 0254 73656E64 		.ascii	"send_time\000"
 4324      5F74696D 
 4324      6500
 4325              	.LASF16:
 4326 025e 696E7433 		.ascii	"int32\000"
 4326      3200
 4327              	.LASF73:
 4328 0264 6E6F6465 		.ascii	"node_type\000"
 4328      5F747970 
 4328      6500
 4329              	.LASF110:
 4330 026e 73796E63 		.ascii	"syncData\000"
 4330      44617461 
 4330      00
 4331              	.LASF119:
 4332 0277 6E657477 		.ascii	"network_time\000"
 4332      6F726B5F 
 4332      74696D65 
 4332      00
 4333              	.LASF13:
 4334 0284 75696E74 		.ascii	"uint32\000"
 4334      333200
 4335              	.LASF62:
 4336 028b 6D6F6465 		.ascii	"model_id\000"
 4336      6C5F6964 
 4336      00
 4337              	.LASF33:
 4338 0294 616C6C5F 		.ascii	"all_level_readings\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 94


 4338      6C657665 
 4338      6C5F7265 
 4338      6164696E 
 4338      677300
 4339              	.LASF80:
 4340 02a7 636F756E 		.ascii	"countDownValue\000"
 4340      74446F77 
 4340      6E56616C 
 4340      756500
 4341              	.LASF134:
 4342 02b6 75706772 		.ascii	"upgraded\000"
 4342      61646564 
 4342      00
 4343              	.LASF53:
 4344 02bf 746D5F6D 		.ascii	"tm_mon\000"
 4344      6F6E00
 4345              	.LASF77:
 4346 02c6 64656275 		.ascii	"debug_level\000"
 4346      675F6C65 
 4346      76656C00 
 4347              	.LASF136:
 4348 02d2 706F7274 		.ascii	"port\000"
 4348      00
 4349              	.LASF58:
 4350 02d7 76616C75 		.ascii	"value\000"
 4350      6500
 4351              	.LASF135:
 4352 02dd 686F7374 		.ascii	"host\000"
 4352      00
 4353              	.LASF54:
 4354 02e2 746D5F79 		.ascii	"tm_year\000"
 4354      65617200 
 4355              	.LASF156:
 4356 02ea 616C6172 		.ascii	"alarmSync\000"
 4356      6D53796E 
 4356      6300
 4357              	.LASF44:
 4358 02f4 70726573 		.ascii	"pressure_voltage_on\000"
 4358      73757265 
 4358      5F766F6C 
 4358      74616765 
 4358      5F6F6E00 
 4359              	.LASF8:
 4360 0308 756E7369 		.ascii	"unsigned int\000"
 4360      676E6564 
 4360      20696E74 
 4360      00
 4361              	.LASF132:
 4362 0315 73657454 		.ascii	"setTime\000"
 4362      696D6500 
 4363              	.LASF60:
 4364 031d 6B65795F 		.ascii	"key_value_t\000"
 4364      76616C75 
 4364      655F7400 
 4365              	.LASF95:
 4366 0329 41796F49 		.ascii	"AyoItsTime\000"
 4366      74735469 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 95


 4366      6D6500
 4367              	.LASF35:
 4368 0334 6E756D5F 		.ascii	"num_valid_readings\000"
 4368      76616C69 
 4368      645F7265 
 4368      6164696E 
 4368      677300
 4369              	.LASF123:
 4370 0347 68747470 		.ascii	"http_chunk\000"
 4370      5F636875 
 4370      6E6B00
 4371              	.LASF129:
 4372 0352 6D5F766F 		.ascii	"m_voltage\000"
 4372      6C746167 
 4372      6500
 4373              	.LASF5:
 4374 035c 6C6F6E67 		.ascii	"long unsigned int\000"
 4374      20756E73 
 4374      69676E65 
 4374      6420696E 
 4374      7400
 4375              	.LASF92:
 4376 036e 7472795F 		.ascii	"try_counter\000"
 4376      636F756E 
 4376      74657200 
 4377              	.LASF114:
 4378 037a 64617461 		.ascii	"data_count_desired\000"
 4378      5F636F75 
 4378      6E745F64 
 4378      65736972 
 4378      656400
 4379              	.LASF38:
 4380 038d 766F6C74 		.ascii	"voltage_battery\000"
 4380      6167655F 
 4380      62617474 
 4380      65727900 
 4381              	.LASF24:
 4382 039d 4461794F 		.ascii	"DayOfMonth\000"
 4382      664D6F6E 
 4382      746800
 4383              	.LASF127:
 4384 03a8 6D616B65 		.ascii	"makeMeasurements\000"
 4384      4D656173 
 4384      7572656D 
 4384      656E7473 
 4384      00
 4385              	.LASF144:
 4386 03b9 64617461 		.ascii	"data\000"
 4386      00
 4387              	.LASF89:
 4388 03be 65705F70 		.ascii	"ep_port\000"
 4388      6F727400 
 4389              	.LASF57:
 4390 03c6 746D5F69 		.ascii	"tm_isdst\000"
 4390      73647374 
 4390      00
 4391              	.LASF85:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 96


 4392 03cf 6D6F6465 		.ascii	"modem_info\000"
 4392      6D5F696E 
 4392      666F00
 4393              	.LASF88:
 4394 03da 65705F68 		.ascii	"ep_host\000"
 4394      6F737400 
 4395              	.LASF14:
 4396 03e2 696E7438 		.ascii	"int8\000"
 4396      00
 4397              	.LASF94:
 4398 03e7 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 4398      576F726B 
 4398      576F726B 
 4398      576F726B 
 4398      576F726B 
 4399              	.LASF115:
 4400 0400 635F6461 		.ascii	"c_data_count_desired\000"
 4400      74615F63 
 4400      6F756E74 
 4400      5F646573 
 4400      69726564 
 4401              	.LASF108:
 4402 0415 745F7364 		.ascii	"t_sd_card\000"
 4402      5F636172 
 4402      6400
 4403              	.LASF2:
 4404 041f 73686F72 		.ascii	"short int\000"
 4404      7420696E 
 4404      7400
 4405              	.LASF146:
 4406 0429 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4406      6D5F7374 
 4406      6172745F 
 4406      74696D65 
 4406      5F737461 
 4407              	.LASF162:
 4408 0440 433A5C55 		.ascii	"C:\\Users\\klabu\\Desktop\\BrookeResearch\\notoriOS"
 4408      73657273 
 4408      5C6B6C61 
 4408      62755C44 
 4408      65736B74 
 4409 046e 5C6E6F74 		.ascii	"\\notoriOS.cydsn\000"
 4409      6F72694F 
 4409      532E6379 
 4409      64736E00 
 4410              	.LASF87:
 4411 047e 7379735F 		.ascii	"sys_info_t\000"
 4411      696E666F 
 4411      5F7400
 4412              	.LASF79:
 4413 0489 75706461 		.ascii	"updatable_parameters_t\000"
 4413      7461626C 
 4413      655F7061 
 4413      72616D65 
 4413      74657273 
 4414              	.LASF96:
 4415 04a0 616C6172 		.ascii	"alarmType\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 97


 4415      6D547970 
 4415      6500
 4416              	.LASF142:
 4417 04aa 64617461 		.ascii	"dataPointsInStack\000"
 4417      506F696E 
 4417      7473496E 
 4417      53746163 
 4417      6B00
 4418              	.LASF50:
 4419 04bc 746D5F6D 		.ascii	"tm_min\000"
 4419      696E00
 4420              	.LASF137:
 4421 04c3 726F7574 		.ascii	"route\000"
 4421      6500
 4422              	.LASF97:
 4423 04c9 616C6172 		.ascii	"alarmToBeUpdated\000"
 4423      6D546F42 
 4423      65557064 
 4423      61746564 
 4423      00
 4424              	.LASF21:
 4425 04da 73697A65 		.ascii	"sizetype\000"
 4425      74797065 
 4425      00
 4426              	.LASF56:
 4427 04e3 746D5F79 		.ascii	"tm_yday\000"
 4427      64617900 
 4428              	.LASF90:
 4429 04eb 7379735F 		.ascii	"sys_settings_t\000"
 4429      73657474 
 4429      696E6773 
 4429      5F7400
 4430              	.LASF133:
 4431 04fa 6C6F6361 		.ascii	"localTime\000"
 4431      6C54696D 
 4431      6500
 4432              	.LASF158:
 4433 0504 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 4433      546F5379 
 4433      636E5265 
 4433      6D6F7465 
 4433      50617261 
 4434              	.LASF59:
 4435 051b 74696D65 		.ascii	"timeStamp\000"
 4435      5374616D 
 4435      7000
 4436              	.LASF28:
 4437 0525 5254435F 		.ascii	"RTC_TIME_DATE\000"
 4437      54494D45 
 4437      5F444154 
 4437      4500
 4438              	.LASF148:
 4439 0533 75706461 		.ascii	"updatable_parameters\000"
 4439      7461626C 
 4439      655F7061 
 4439      72616D65 
 4439      74657273 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 98


 4440              	.LASF101:
 4441 0548 43726561 		.ascii	"CreateAlarm\000"
 4441      7465416C 
 4441      61726D00 
 4442              	.LASF122:
 4443 0554 7061636B 		.ascii	"packet\000"
 4443      657400
 4444              	.LASF111:
 4445 055b 735F7273 		.ascii	"s_rsrp\000"
 4445      727000
 4446              	.LASF41:
 4447 0562 766F6C74 		.ascii	"voltage_pressure\000"
 4447      6167655F 
 4447      70726573 
 4447      73757265 
 4447      00
 4448              	.LASF149:
 4449 0573 68747470 		.ascii	"http_request\000"
 4449      5F726571 
 4449      75657374 
 4449      00
 4450              	.LASF17:
 4451 0580 666C6F61 		.ascii	"float\000"
 4451      7400
 4452              	.LASF37:
 4453 0586 6C657665 		.ascii	"level_sensor_t\000"
 4453      6C5F7365 
 4453      6E736F72 
 4453      5F7400
 4454              	.LASF112:
 4455 0595 735F7273 		.ascii	"s_rscp\000"
 4455      637000
 4456              	.LASF126:
 4457 059c 636F6E66 		.ascii	"configureRemoteParams\000"
 4457      69677572 
 4457      6552656D 
 4457      6F746550 
 4457      6172616D 
 4458              	.LASF159:
 4459 05b2 44617461 		.ascii	"Data_fileName\000"
 4459      5F66696C 
 4459      654E616D 
 4459      6500
 4460              	.LASF93:
 4461 05c0 6D6F6465 		.ascii	"modem_status\000"
 4461      6D5F7374 
 4461      61747573 
 4461      00
 4462              	.LASF29:
 4463 05cd 74657374 		.ascii	"test_name\000"
 4463      5F6E616D 
 4463      6500
 4464              	.LASF27:
 4465 05d7 59656172 		.ascii	"Year\000"
 4465      00
 4466              	.LASF78:
 4467 05dc 5F426F6F 		.ascii	"_Bool\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 99


 4467      6C00
 4468              	.LASF10:
 4469 05e2 696E7433 		.ascii	"int32_t\000"
 4469      325F7400 
 4470              	.LASF1:
 4471 05ea 756E7369 		.ascii	"unsigned char\000"
 4471      676E6564 
 4471      20636861 
 4471      7200
 4472              	.LASF153:
 4473 05f8 73797374 		.ascii	"system_settings\000"
 4473      656D5F73 
 4473      65747469 
 4473      6E677300 
 4474              	.LASF69:
 4475 0608 72737270 		.ascii	"rsrp\000"
 4475      00
 4476              	.LASF68:
 4477 060d 72737271 		.ascii	"rsrq\000"
 4477      00
 4478              	.LASF98:
 4479 0612 52657365 		.ascii	"ResetAlarm\000"
 4479      74416C61 
 4479      726D00
 4480              	.LASF125:
 4481 061d 735F7365 		.ascii	"s_send_time\000"
 4481      6E645F74 
 4481      696D6500 
 4482              	.LASF76:
 4483 0629 73796E63 		.ascii	"sync_time\000"
 4483      5F74696D 
 4483      6500
 4484              	.LASF47:
 4485 0633 70726573 		.ascii	"pressure_depth\000"
 4485      73757265 
 4485      5F646570 
 4485      746800
 4486              	.LASF66:
 4487 0642 72736370 		.ascii	"rscp\000"
 4487      00
 4488              	.LASF23:
 4489 0647 4461794F 		.ascii	"DayOfWeek\000"
 4489      66576565 
 4489      6B00
 4490              	.LASF32:
 4491 0651 74657374 		.ascii	"test_t\000"
 4491      5F7400
 4492              	.LASF152:
 4493 0658 73797374 		.ascii	"system_info\000"
 4493      656D5F69 
 4493      6E666F00 
 4494              	.LASF63:
 4495 0664 696D6569 		.ascii	"imei\000"
 4495      00
 4496              	.LASF31:
 4497 0669 72656173 		.ascii	"reason\000"
 4497      6F6E00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 100


 4498              	.LASF99:
 4499 0670 616C6172 		.ascii	"alarmToBeReset\000"
 4499      6D546F42 
 4499      65526573 
 4499      657400
 4500              	.LASF104:
 4501 067f 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 4501      6B697479 
 4501      43686563 
 4501      6B596F75 
 4501      7273656C 
 4502              	.LASF120:
 4503 06ab 64617461 		.ascii	"data_count_sent\000"
 4503      5F636F75 
 4503      6E745F73 
 4503      656E7400 
 4504              	.LASF72:
 4505 06bb 6D6F6465 		.ascii	"modem_stats_t\000"
 4505      6D5F7374 
 4505      6174735F 
 4505      7400
 4506              	.LASF46:
 4507 06c9 70726573 		.ascii	"pressure_current\000"
 4507      73757265 
 4507      5F637572 
 4507      72656E74 
 4507      00
 4508              	.LASF42:
 4509 06da 76616C69 		.ascii	"valid\000"
 4509      6400
 4510              	.LASF55:
 4511 06e0 746D5F77 		.ascii	"tm_wday\000"
 4511      64617900 
 4512              	.LASF20:
 4513 06e8 6C6F6E67 		.ascii	"long double\000"
 4513      20646F75 
 4513      626C6500 
 4514              	.LASF117:
 4515 06f4 6368756E 		.ascii	"chunk\000"
 4515      6B00
 4516              	.LASF128:
 4517 06fa 635F7469 		.ascii	"c_timeStamp\000"
 4517      6D655374 
 4517      616D7000 
 4518              	.LASF19:
 4519 0706 63686172 		.ascii	"char\000"
 4519      00
 4520              	.LASF147:
 4521 070b 6D6F6465 		.ascii	"modem_stats\000"
 4521      6D5F7374 
 4521      61747300 
 4522              	.LASF151:
 4523 0717 68747470 		.ascii	"http_route\000"
 4523      5F726F75 
 4523      746500
 4524              	.LASF116:
 4525 0722 706F7274 		.ascii	"portConfig\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 101


 4525      436F6E66 
 4525      696700
 4526              	.LASF9:
 4527 072d 5F5F696E 		.ascii	"__int32_t\000"
 4527      7433325F 
 4527      7400
 4528              	.LASF91:
 4529 0737 756E6971 		.ascii	"uniqueId\000"
 4529      75654964 
 4529      00
 4530              	.LASF130:
 4531 0740 6D5F6C65 		.ascii	"m_level_sensor\000"
 4531      76656C5F 
 4531      73656E73 
 4531      6F7200
 4532              	.LASF34:
 4533 074f 6C657665 		.ascii	"level_reading\000"
 4533      6C5F7265 
 4533      6164696E 
 4533      6700
 4534              	.LASF164:
 4535 075d 4C617942 		.ascii	"LayBack\000"
 4535      61636B00 
 4536              	.LASF3:
 4537 0765 73686F72 		.ascii	"short unsigned int\000"
 4537      7420756E 
 4537      7369676E 
 4537      65642069 
 4537      6E7400
 4538              	.LASF61:
 4539 0778 73696D5F 		.ascii	"sim_id\000"
 4539      696400
 4540              	.LASF52:
 4541 077f 746D5F6D 		.ascii	"tm_mday\000"
 4541      64617900 
 4542              	.LASF102:
 4543 0787 6E657741 		.ascii	"newAlarm\000"
 4543      6C61726D 
 4543      00
 4544              	.LASF49:
 4545 0790 746D5F73 		.ascii	"tm_sec\000"
 4545      656300
 4546              	.LASF131:
 4547 0797 6D5F7072 		.ascii	"m_pressure\000"
 4547      65737375 
 4547      726500
 4548              	.LASF30:
 4549 07a2 73746174 		.ascii	"status\000"
 4549      757300
 4550              	.LASF143:
 4551 07a9 64617461 		.ascii	"dataPointsInStackDesired\000"
 4551      506F696E 
 4551      7473496E 
 4551      53746163 
 4551      6B446573 
 4552              	.LASF106:
 4553 07c2 745F766F 		.ascii	"t_voltages\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 102


 4553      6C746167 
 4553      657300
 4554              	.LASF161:
 4555 07cd 6E6F746F 		.ascii	"notoriOS.c\000"
 4555      72694F53 
 4555      2E6300
 4556              	.LASF150:
 4557 07d8 68747470 		.ascii	"http_body\000"
 4557      5F626F64 
 4557      7900
 4558              	.LASF15:
 4559 07e2 696E7431 		.ascii	"int16\000"
 4559      3600
 4560              	.LASF82:
 4561 07e8 636F756E 		.ascii	"countDownType\000"
 4561      74446F77 
 4561      6E547970 
 4561      6500
 4562              	.LASF81:
 4563 07f6 63757272 		.ascii	"currentCountDownValue\000"
 4563      656E7443 
 4563      6F756E74 
 4563      446F776E 
 4563      56616C75 
 4564              	.LASF74:
 4565 080c 73696D5F 		.ascii	"sim_type\000"
 4565      74797065 
 4565      00
 4566              	.LASF25:
 4567 0815 4461794F 		.ascii	"DayOfYear\000"
 4567      66596561 
 4567      7200
 4568              	.LASF48:
 4569 081f 70726573 		.ascii	"pressure_t\000"
 4569      73757265 
 4569      5F7400
 4570              	.LASF100:
 4571 082a 416C6172 		.ascii	"AlarmReady\000"
 4571      6D526561 
 4571      647900
 4572              	.LASF103:
 4573 0835 52656164 		.ascii	"ReadyOrNot\000"
 4573      794F724E 
 4573      6F7400
 4574              	.LASF165:
 4575 0840 6D61696E 		.ascii	"main\000"
 4575      00
 4576              	.LASF86:
 4577 0845 63686970 		.ascii	"chip_uniqueId\000"
 4577      5F756E69 
 4577      71756549 
 4577      6400
 4578              	.LASF75:
 4579 0853 6D656173 		.ascii	"measure_time\000"
 4579      7572655F 
 4579      74696D65 
 4579      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccz4dy4f.s 			page 103


 4580              	.LASF18:
 4581 0860 646F7562 		.ascii	"double\000"
 4581      6C6500
 4582              	.LASF43:
 4583 0867 766F6C74 		.ascii	"voltage_t\000"
 4583      6167655F 
 4583      7400
 4584              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
