ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.section	.text.Wakeup_ISR,"ax",%progbits
  44              		.align	2
  45              		.global	Wakeup_ISR
  46              		.thumb
  47              		.thumb_func
  48              		.type	Wakeup_ISR, %function
  49              	Wakeup_ISR:
  50              	.LFB64:
  51              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 2


   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  52              		.loc 1 20 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  62              		.loc 1 22 0
  63 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  64              		.loc 1 23 0
  65 0008 00BF     		nop
  66 000a 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE64:
  69              		.size	Wakeup_ISR, .-Wakeup_ISR
  70              		.global	Data_fileName
  71              		.data
  72              		.align	2
  73              		.type	Data_fileName, %object
  74              		.size	Data_fileName, 30
  75              	Data_fileName:
  76 0000 64617461 		.ascii	"data.txt\000"
  76      2E747874 
  76      00
  77 0009 00000000 		.space	21
  77      00000000 
  77      00000000 
  77      00000000 
  77      00000000 
  78              		.comm	try_counter,1,1
  79              		.section	.rodata
  80              		.align	2
  81              	.LC0:
  82 0000 25582D25 		.ascii	"%X-%X\000"
  82      5800
  83 0006 0000     		.align	2
  84              	.LC1:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 3


  85 0008 6563322D 		.ascii	"ec2-13-59-131-167.us-east-2.compute.amazonaws.com\000"
  85      31332D35 
  85      392D3133 
  85      312D3136 
  85      372E7573 
  86 003a 0000     		.align	2
  87              	.LC2:
  88 003c 256400   		.ascii	"%d\000"
  89 003f 00       		.align	2
  90              	.LC3:
  91 0040 7265626F 		.ascii	"reboot\000"
  91      6F7400
  92              		.section	.text.ReadyOrNot,"ax",%progbits
  93              		.align	2
  94              		.global	ReadyOrNot
  95              		.thumb
  96              		.thumb_func
  97              		.type	ReadyOrNot, %function
  98              	ReadyOrNot:
  99              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
 100              		.loc 1 41 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 32
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 B0B5     		push	{r4, r5, r7, lr}
 105              		.cfi_def_cfa_offset 16
 106              		.cfi_offset 4, -16
 107              		.cfi_offset 5, -12
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 8AB0     		sub	sp, sp, #40
 111              		.cfi_def_cfa_offset 56
 112 0004 02AF     		add	r7, sp, #8
 113              		.cfi_def_cfa 7, 48
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 114              		.loc 1 43 0
 115 0006 3948     		ldr	r0, .L3
 116 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 4


  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 117              		.loc 1 44 0
 118 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 119              		.loc 1 46 0
 120 0010 FF20     		movs	r0, #255
 121 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 122              		.loc 1 47 0
 123 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 124              		.loc 1 48 0
 125 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 126              		.loc 1 52 0
 127 001e FFF7FEFF 		bl	modem_initialize
  53:notoriOS.c    ****     
  54:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 128              		.loc 1 54 0
 129 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  55:notoriOS.c    ****    
  56:notoriOS.c    ****     
  57:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  58:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  59:notoriOS.c    ****     
  60:notoriOS.c    ****     
  61:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  62:notoriOS.c    ****     uint32 uniqueId[2];
  63:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  64:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 130              		.loc 1 64 0
 131 0026 07F11403 		add	r3, r7, #20
 132 002a 1846     		mov	r0, r3
 133 002c FFF7FEFF 		bl	CyGetUniqueId
  65:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 134              		.loc 1 65 0
 135 0030 7A69     		ldr	r2, [r7, #20]
 136 0032 BB69     		ldr	r3, [r7, #24]
 137 0034 0093     		str	r3, [sp]
 138 0036 1346     		mov	r3, r2
 139 0038 2D4A     		ldr	r2, .L3+4
 140 003a 1821     		movs	r1, #24
 141 003c 2D48     		ldr	r0, .L3+8
 142 003e FFF7FEFF 		bl	snprintf
  66:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  67:notoriOS.c    ****     system_info.modem_info = &modem_info;
 143              		.loc 1 67 0
 144 0042 2D4B     		ldr	r3, .L3+12
 145 0044 2D4A     		ldr	r2, .L3+16
 146 0046 1A60     		str	r2, [r3]
  68:notoriOS.c    ****     
  69:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  70:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","ec2-13-59-131-167.us-eas
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 5


 147              		.loc 1 70 0
 148 0048 2D4A     		ldr	r2, .L3+20
 149 004a 2E4B     		ldr	r3, .L3+24
 150 004c 1446     		mov	r4, r2
 151 004e 1D46     		mov	r5, r3
 152 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 153 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 154 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 155 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 156 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 157 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 158 005c 2B68     		ldr	r3, [r5]
 159 005e 2380     		strh	r3, [r4]	@ movhi
  71:notoriOS.c    ****    
  72:notoriOS.c    ****     system_settings.ep_port = 5000;
 160              		.loc 1 72 0
 161 0060 274B     		ldr	r3, .L3+20
 162 0062 41F28832 		movw	r2, #5000
 163 0066 5A66     		str	r2, [r3, #100]
  73:notoriOS.c    ****     // Don't need the following for new nodes
  74:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  75:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  76:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  77:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  78:notoriOS.c    ****         
  79:notoriOS.c    ****     
  80:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  81:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 164              		.loc 1 81 0
 165 0068 274B     		ldr	r3, .L3+28
 166 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 167 006c 99B2     		uxth	r1, r3
 168 006e 274C     		ldr	r4, .L3+32
 169 0070 3846     		mov	r0, r7
 170 0072 0723     		movs	r3, #7
 171 0074 0122     		movs	r2, #1
 172 0076 FFF7FEFF 		bl	CreateAlarm
 173 007a 2246     		mov	r2, r4
 174 007c 3B46     		mov	r3, r7
 175 007e 1968     		ldr	r1, [r3]	@ unaligned
 176 0080 1160     		str	r1, [r2]	@ unaligned
 177 0082 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 178 0084 9380     		strh	r3, [r2, #4]	@ unaligned
  82:notoriOS.c    ****     timeToMeasure = 1u;
 179              		.loc 1 82 0
 180 0086 224B     		ldr	r3, .L3+36
 181 0088 0122     		movs	r2, #1
 182 008a 1A70     		strb	r2, [r3]
  83:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  84:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 183              		.loc 1 84 0
 184 008c 1E4B     		ldr	r3, .L3+28
 185 008e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 186 0090 99B2     		uxth	r1, r3
 187 0092 204C     		ldr	r4, .L3+40
 188 0094 3846     		mov	r0, r7
 189 0096 0723     		movs	r3, #7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 6


 190 0098 0122     		movs	r2, #1
 191 009a FFF7FEFF 		bl	CreateAlarm
 192 009e 2246     		mov	r2, r4
 193 00a0 3B46     		mov	r3, r7
 194 00a2 1968     		ldr	r1, [r3]	@ unaligned
 195 00a4 1160     		str	r1, [r2]	@ unaligned
 196 00a6 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 197 00a8 9380     		strh	r3, [r2, #4]	@ unaligned
  85:notoriOS.c    ****     timeToSync = 1u;
 198              		.loc 1 85 0
 199 00aa 1B4B     		ldr	r3, .L3+44
 200 00ac 0122     		movs	r2, #1
 201 00ae 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     
  87:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 202              		.loc 1 87 0
 203 00b0 1A4B     		ldr	r3, .L3+48
 204 00b2 0022     		movs	r2, #0
 205 00b4 1A70     		strb	r2, [r3]
  88:notoriOS.c    ****     
  89:notoriOS.c    ****     // send hey to server saying the node rebooted
  90:notoriOS.c    ****     hey = 1u;
 206              		.loc 1 90 0
 207 00b6 1A4B     		ldr	r3, .L3+52
 208 00b8 0122     		movs	r2, #1
 209 00ba 1A70     		strb	r2, [r3]
  91:notoriOS.c    ****     char c_hey[10];
  92:notoriOS.c    ****     snprintf(c_hey,sizeof(c_hey),"%d",hey);
 210              		.loc 1 92 0
 211 00bc 184B     		ldr	r3, .L3+52
 212 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 213 00c0 07F10800 		add	r0, r7, #8
 214 00c4 174A     		ldr	r2, .L3+56
 215 00c6 0A21     		movs	r1, #10
 216 00c8 FFF7FEFF 		bl	snprintf
  93:notoriOS.c    ****     pushData("reboot",c_hey,getTimeStamp());
 217              		.loc 1 93 0
 218 00cc FFF7FEFF 		bl	getTimeStamp
 219 00d0 0246     		mov	r2, r0
 220 00d2 07F10803 		add	r3, r7, #8
 221 00d6 1946     		mov	r1, r3
 222 00d8 1348     		ldr	r0, .L3+60
 223 00da FFF7FEFF 		bl	pushData
  94:notoriOS.c    ****     
  95:notoriOS.c    ****     // Initialize the try counter to 0
  96:notoriOS.c    ****     uint8 try_counter = 0;
 224              		.loc 1 96 0
 225 00de 0023     		movs	r3, #0
 226 00e0 FB77     		strb	r3, [r7, #31]
  97:notoriOS.c    **** }
 227              		.loc 1 97 0
 228 00e2 00BF     		nop
 229 00e4 2037     		adds	r7, r7, #32
 230              		.cfi_def_cfa_offset 16
 231 00e6 BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 7


 234 00e8 B0BD     		pop	{r4, r5, r7, pc}
 235              	.L4:
 236 00ea 00BF     		.align	2
 237              	.L3:
 238 00ec 00000000 		.word	Wakeup_ISR
 239 00f0 00000000 		.word	.LC0
 240 00f4 04000000 		.word	system_info+4
 241 00f8 00000000 		.word	system_info
 242 00fc 00000000 		.word	modem_info
 243 0100 00000000 		.word	system_settings
 244 0104 08000000 		.word	.LC1
 245 0108 00000000 		.word	updatable_parameters
 246 010c 00000000 		.word	alarmMeasure
 247 0110 00000000 		.word	timeToMeasure
 248 0114 00000000 		.word	alarmSync
 249 0118 00000000 		.word	timeToSync
 250 011c 00000000 		.word	timeToSycnRemoteParams
 251 0120 00000000 		.word	hey
 252 0124 3C000000 		.word	.LC2
 253 0128 40000000 		.word	.LC3
 254              		.cfi_endproc
 255              	.LFE65:
 256              		.size	ReadyOrNot, .-ReadyOrNot
 257              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 258              		.align	2
 259              		.global	WorkWorkWorkWorkWorkWork
 260              		.thumb
 261              		.thumb_func
 262              		.type	WorkWorkWorkWorkWorkWork, %function
 263              	WorkWorkWorkWorkWorkWork:
 264              	.LFB66:
  98:notoriOS.c    **** 
  99:notoriOS.c    **** 
 100:notoriOS.c    **** // ==============================================
 101:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
 102:notoriOS.c    **** //      - Rhiana, feat Drake (2016)
 103:notoriOS.c    **** //
 104:notoriOS.c    **** // Prorcesses core tasks
 105:notoriOS.c    **** // ==============================================
 106:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
 107:notoriOS.c    **** {
 265              		.loc 1 107 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269 0000 80B5     		push	{r7, lr}
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 82B0     		sub	sp, sp, #8
 274              		.cfi_def_cfa_offset 16
 275 0004 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
 108:notoriOS.c    ****     
 109:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 110:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 111:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 8


 112:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 113:notoriOS.c    ****     
 114:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 115:notoriOS.c    ****     if(timeToSycnRemoteParams){
 277              		.loc 1 115 0
 278 0006 144B     		ldr	r3, .L10
 279 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 000a 002B     		cmp	r3, #0
 281 000c 06D0     		beq	.L6
 116:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
 282              		.loc 1 116 0
 283 000e FFF7FEFF 		bl	configureRemoteParams
 284 0012 0346     		mov	r3, r0
 285 0014 1A46     		mov	r2, r3
 286 0016 104B     		ldr	r3, .L10
 287 0018 1A70     		strb	r2, [r3]
 288 001a 14E0     		b	.L7
 289              	.L6:
 117:notoriOS.c    ****     }
 118:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 119:notoriOS.c    ****     else if(timeToMeasure){
 290              		.loc 1 119 0
 291 001c 0F4B     		ldr	r3, .L10+4
 292 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 293 0020 002B     		cmp	r3, #0
 294 0022 06D0     		beq	.L8
 120:notoriOS.c    ****         //(int i=0; i<=30; i++){
 121:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 295              		.loc 1 121 0
 296 0024 FFF7FEFF 		bl	makeMeasurements
 297 0028 0346     		mov	r3, r0
 298 002a 1A46     		mov	r2, r3
 299 002c 0B4B     		ldr	r3, .L10+4
 300 002e 1A70     		strb	r2, [r3]
 301 0030 09E0     		b	.L7
 302              	.L8:
 122:notoriOS.c    ****         //CyDelay(1000u);
 123:notoriOS.c    ****         //}
 124:notoriOS.c    ****     }else if(timeToSync){
 303              		.loc 1 124 0
 304 0032 0B4B     		ldr	r3, .L10+8
 305 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 0036 002B     		cmp	r3, #0
 307 0038 05D0     		beq	.L7
 125:notoriOS.c    ****             timeToSync = syncData();
 308              		.loc 1 125 0
 309 003a FFF7FEFF 		bl	syncData
 310 003e 0346     		mov	r3, r0
 311 0040 1A46     		mov	r2, r3
 312 0042 074B     		ldr	r3, .L10+8
 313 0044 1A70     		strb	r2, [r3]
 314              	.L7:
 126:notoriOS.c    ****     }
 127:notoriOS.c    ****     // Print the countdown to the next alarm
 128:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 129:notoriOS.c    ****     
 130:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 9


 131:notoriOS.c    ****     // Check modem state machine on every loop
 132:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
 315              		.loc 1 132 0
 316 0046 FFF7FEFF 		bl	modem_process_tasks
 317 004a 0346     		mov	r3, r0
 318 004c FB71     		strb	r3, [r7, #7]
 133:notoriOS.c    **** 
 134:notoriOS.c    ****     return 0u +  modem_status;  
 319              		.loc 1 134 0
 320 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 135:notoriOS.c    **** }
 321              		.loc 1 135 0
 322 0050 1846     		mov	r0, r3
 323 0052 0837     		adds	r7, r7, #8
 324              		.cfi_def_cfa_offset 8
 325 0054 BD46     		mov	sp, r7
 326              		.cfi_def_cfa_register 13
 327              		@ sp needed
 328 0056 80BD     		pop	{r7, pc}
 329              	.L11:
 330              		.align	2
 331              	.L10:
 332 0058 00000000 		.word	timeToSycnRemoteParams
 333 005c 00000000 		.word	timeToMeasure
 334 0060 00000000 		.word	timeToSync
 335              		.cfi_endproc
 336              	.LFE66:
 337              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 338              		.section	.text.LayBack,"ax",%progbits
 339              		.align	2
 340              		.global	LayBack
 341              		.thumb
 342              		.thumb_func
 343              		.type	LayBack, %function
 344              	LayBack:
 345              	.LFB67:
 136:notoriOS.c    **** 
 137:notoriOS.c    **** 
 138:notoriOS.c    **** 
 139:notoriOS.c    **** 
 140:notoriOS.c    **** 
 141:notoriOS.c    **** 
 142:notoriOS.c    **** // ==============================================
 143:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 144:notoriOS.c    **** //      - Snoop Dogg (1993)
 145:notoriOS.c    **** //
 146:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 147:notoriOS.c    **** // ==============================================
 148:notoriOS.c    **** void LayBack()
 149:notoriOS.c    **** {
 346              		.loc 1 149 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 10


 353              		.cfi_offset 14, -4
 354 0002 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 150:notoriOS.c    ****   
 151:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 356              		.loc 1 151 0
 357 0004 FFF7FEFF 		bl	modem_sleep
 152:notoriOS.c    ****     
 153:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 154:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 358              		.loc 1 154 0
 359 0008 FFF7FEFF 		bl	debug_sleep
 155:notoriOS.c    ****     
 156:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 360              		.loc 1 156 0
 361 000c FFF7FEFF 		bl	CyPmSaveClocks
 157:notoriOS.c    ****     
 158:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 159:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 160:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 161:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 162:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 163:notoriOS.c    ****     //CyPmHibernate();
 164:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 165:notoriOS.c    **** 
 166:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 362              		.loc 1 166 0
 363 0010 4FF40061 		mov	r1, #2048
 364 0014 0020     		movs	r0, #0
 365 0016 FFF7FEFF 		bl	CyPmSleep
 167:notoriOS.c    **** 
 168:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 366              		.loc 1 168 0
 367 001a FFF7FEFF 		bl	CyPmRestoreClocks
 169:notoriOS.c    **** 
 170:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 368              		.loc 1 170 0
 369 001e FFF7FEFF 		bl	debug_wakeup
 171:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 370              		.loc 1 171 0
 371 0022 FFF7FEFF 		bl	modem_wakeup
 172:notoriOS.c    **** 
 173:notoriOS.c    **** }
 372              		.loc 1 173 0
 373 0026 00BF     		nop
 374 0028 80BD     		pop	{r7, pc}
 375              		.cfi_endproc
 376              	.LFE67:
 377              		.size	LayBack, .-LayBack
 378 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 379              		.align	2
 380              		.global	AyoItsTime
 381              		.thumb
 382              		.thumb_func
 383              		.type	AyoItsTime, %function
 384              	AyoItsTime:
 385              	.LFB68:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 11


 174:notoriOS.c    **** 
 175:notoriOS.c    **** 
 176:notoriOS.c    **** // ==============================================
 177:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 178:notoriOS.c    **** //      - NAS (1994)
 179:notoriOS.c    **** //
 180:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 181:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 182:notoriOS.c    **** // It will add tasks to the work queue,
 183:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 184:notoriOS.c    **** // ==============================================
 185:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 186:notoriOS.c    **** {
 386              		.loc 1 186 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 8
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 82B0     		sub	sp, sp, #8
 395              		.cfi_def_cfa_offset 16
 396 0004 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
 398 0006 0346     		mov	r3, r0
 399 0008 FB71     		strb	r3, [r7, #7]
 187:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 188:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 400              		.loc 1 188 0
 401 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 402 000c 1946     		mov	r1, r3
 403 000e 0C48     		ldr	r0, .L17
 404 0010 FFF7FEFF 		bl	AlarmReady
 405 0014 0346     		mov	r3, r0
 406 0016 002B     		cmp	r3, #0
 407 0018 02D0     		beq	.L14
 189:notoriOS.c    ****     {
 190:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 191:notoriOS.c    ****         timeToMeasure = 1u;
 408              		.loc 1 191 0
 409 001a 0A4B     		ldr	r3, .L17+4
 410 001c 0122     		movs	r2, #1
 411 001e 1A70     		strb	r2, [r3]
 412              	.L14:
 192:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 193:notoriOS.c    ****         
 194:notoriOS.c    ****     }
 195:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 413              		.loc 1 195 0
 414 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 415 0022 1946     		mov	r1, r3
 416 0024 0848     		ldr	r0, .L17+8
 417 0026 FFF7FEFF 		bl	AlarmReady
 418 002a 0346     		mov	r3, r0
 419 002c 002B     		cmp	r3, #0
 420 002e 02D0     		beq	.L16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 12


 196:notoriOS.c    ****     {
 197:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 198:notoriOS.c    ****         timeToSync = 1u;
 421              		.loc 1 198 0
 422 0030 064B     		ldr	r3, .L17+12
 423 0032 0122     		movs	r2, #1
 424 0034 1A70     		strb	r2, [r3]
 425              	.L16:
 199:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 200:notoriOS.c    ****     }
 201:notoriOS.c    ****     
 202:notoriOS.c    **** }
 426              		.loc 1 202 0
 427 0036 00BF     		nop
 428 0038 0837     		adds	r7, r7, #8
 429              		.cfi_def_cfa_offset 8
 430 003a BD46     		mov	sp, r7
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 003c 80BD     		pop	{r7, pc}
 434              	.L18:
 435 003e 00BF     		.align	2
 436              	.L17:
 437 0040 00000000 		.word	alarmMeasure
 438 0044 00000000 		.word	timeToMeasure
 439 0048 00000000 		.word	alarmSync
 440 004c 00000000 		.word	timeToSync
 441              		.cfi_endproc
 442              	.LFE68:
 443              		.size	AyoItsTime, .-AyoItsTime
 444              		.section	.text.AlarmReady,"ax",%progbits
 445              		.align	2
 446              		.global	AlarmReady
 447              		.thumb
 448              		.thumb_func
 449              		.type	AlarmReady, %function
 450              	AlarmReady:
 451              	.LFB69:
 203:notoriOS.c    **** 
 204:notoriOS.c    **** 
 205:notoriOS.c    **** // ==============================================
 206:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 207:notoriOS.c    **** // ==============================================
 208:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 209:notoriOS.c    **** {
 452              		.loc 1 209 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 8
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 82B0     		sub	sp, sp, #8
 461              		.cfi_def_cfa_offset 16
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 13


 464 0006 7860     		str	r0, [r7, #4]
 465 0008 0B46     		mov	r3, r1
 466 000a FB70     		strb	r3, [r7, #3]
 210:notoriOS.c    ****     // if the countDownType matches the alarmType
 211:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 467              		.loc 1 211 0
 468 000c 7B68     		ldr	r3, [r7, #4]
 469 000e 1B79     		ldrb	r3, [r3, #4]
 470 0010 DBB2     		uxtb	r3, r3
 471 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 472 0014 9A42     		cmp	r2, r3
 473 0016 12D1     		bne	.L20
 212:notoriOS.c    ****        
 213:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 214:notoriOS.c    ****         // Decrement the count down value by 1
 215:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 474              		.loc 1 215 0
 475 0018 7B68     		ldr	r3, [r7, #4]
 476 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 477 001c 1BB2     		sxth	r3, r3
 478 001e 9BB2     		uxth	r3, r3
 479 0020 013B     		subs	r3, r3, #1
 480 0022 9BB2     		uxth	r3, r3
 481 0024 1AB2     		sxth	r2, r3
 482 0026 7B68     		ldr	r3, [r7, #4]
 483 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 216:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 217:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 484              		.loc 1 217 0
 485 002a 7B68     		ldr	r3, [r7, #4]
 486 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 487 002e 1BB2     		sxth	r3, r3
 488 0030 002B     		cmp	r3, #0
 489 0032 04DC     		bgt	.L20
 218:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 490              		.loc 1 218 0
 491 0034 7868     		ldr	r0, [r7, #4]
 492 0036 FFF7FEFF 		bl	ResetAlarm
 219:notoriOS.c    ****             return 1u;
 493              		.loc 1 219 0
 494 003a 0123     		movs	r3, #1
 495 003c 00E0     		b	.L21
 496              	.L20:
 220:notoriOS.c    ****         } 
 221:notoriOS.c    ****     }
 222:notoriOS.c    ****     
 223:notoriOS.c    ****     return 0u; // Otherwise return 0
 497              		.loc 1 223 0
 498 003e 0023     		movs	r3, #0
 499              	.L21:
 224:notoriOS.c    **** }
 500              		.loc 1 224 0
 501 0040 1846     		mov	r0, r3
 502 0042 0837     		adds	r7, r7, #8
 503              		.cfi_def_cfa_offset 8
 504 0044 BD46     		mov	sp, r7
 505              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 14


 506              		@ sp needed
 507 0046 80BD     		pop	{r7, pc}
 508              		.cfi_endproc
 509              	.LFE69:
 510              		.size	AlarmReady, .-AlarmReady
 511              		.section	.text.ResetAlarm,"ax",%progbits
 512              		.align	2
 513              		.global	ResetAlarm
 514              		.thumb
 515              		.thumb_func
 516              		.type	ResetAlarm, %function
 517              	ResetAlarm:
 518              	.LFB70:
 225:notoriOS.c    **** 
 226:notoriOS.c    **** // ==============================================
 227:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 228:notoriOS.c    **** // ==============================================
 229:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 230:notoriOS.c    **** {
 519              		.loc 1 230 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0000 80B4     		push	{r7}
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0002 83B0     		sub	sp, sp, #12
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 231:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 232:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 532              		.loc 1 232 0
 533 0008 7B68     		ldr	r3, [r7, #4]
 534 000a 1B88     		ldrh	r3, [r3]	@ movhi
 535 000c 9BB2     		uxth	r3, r3
 536 000e 1AB2     		sxth	r2, r3
 537 0010 7B68     		ldr	r3, [r7, #4]
 538 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 233:notoriOS.c    **** }
 539              		.loc 1 233 0
 540 0014 00BF     		nop
 541 0016 0C37     		adds	r7, r7, #12
 542              		.cfi_def_cfa_offset 4
 543 0018 BD46     		mov	sp, r7
 544              		.cfi_def_cfa_register 13
 545              		@ sp needed
 546 001a 80BC     		pop	{r7}
 547              		.cfi_restore 7
 548              		.cfi_def_cfa_offset 0
 549 001c 7047     		bx	lr
 550              		.cfi_endproc
 551              	.LFE70:
 552              		.size	ResetAlarm, .-ResetAlarm
 553 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 15


 554              		.align	2
 555              		.global	CreateAlarm
 556              		.thumb
 557              		.thumb_func
 558              		.type	CreateAlarm, %function
 559              	CreateAlarm:
 560              	.LFB71:
 234:notoriOS.c    **** 
 235:notoriOS.c    **** // ==============================================
 236:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 237:notoriOS.c    **** // ==============================================
 238:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 239:notoriOS.c    **** {
 561              		.loc 1 239 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 16
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566 0000 80B4     		push	{r7}
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 0002 85B0     		sub	sp, sp, #20
 570              		.cfi_def_cfa_offset 24
 571 0004 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 573 0006 7860     		str	r0, [r7, #4]
 574 0008 0846     		mov	r0, r1
 575 000a 1146     		mov	r1, r2
 576 000c 1A46     		mov	r2, r3
 577 000e 0346     		mov	r3, r0	@ movhi
 578 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 579 0012 0B46     		mov	r3, r1
 580 0014 7B70     		strb	r3, [r7, #1]
 581 0016 1346     		mov	r3, r2
 582 0018 3B70     		strb	r3, [r7]
 240:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 241:notoriOS.c    ****     alarm newAlarm;
 242:notoriOS.c    ****     
 243:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 244:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 583              		.loc 1 244 0
 584 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 585 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 245:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 586              		.loc 1 245 0
 587 001e 7B78     		ldrb	r3, [r7, #1]
 588 0020 3B73     		strb	r3, [r7, #12]
 246:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 589              		.loc 1 246 0
 590 0022 3B78     		ldrb	r3, [r7]
 591 0024 7B73     		strb	r3, [r7, #13]
 247:notoriOS.c    ****     
 248:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 249:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 250:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 592              		.loc 1 250 0
 593 0026 B7F90230 		ldrsh	r3, [r7, #2]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 16


 594 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 251:notoriOS.c    ****     
 252:notoriOS.c    ****     return newAlarm;
 595              		.loc 1 252 0
 596 002c 7B68     		ldr	r3, [r7, #4]
 597 002e 1A46     		mov	r2, r3
 598 0030 07F10803 		add	r3, r7, #8
 599 0034 1868     		ldr	r0, [r3]	@ unaligned
 600 0036 1060     		str	r0, [r2]	@ unaligned
 601 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 602 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 253:notoriOS.c    ****     
 254:notoriOS.c    **** }
 603              		.loc 1 254 0
 604 003c 7868     		ldr	r0, [r7, #4]
 605 003e 1437     		adds	r7, r7, #20
 606              		.cfi_def_cfa_offset 4
 607 0040 BD46     		mov	sp, r7
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 0042 80BC     		pop	{r7}
 611              		.cfi_restore 7
 612              		.cfi_def_cfa_offset 0
 613 0044 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE71:
 616              		.size	CreateAlarm, .-CreateAlarm
 617 0046 00BF     		.section	.rodata
 618 0047 00       		.align	2
 619              	.LC4:
 620 0048 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 620      2D2D2D2D 
 620      2D2D2D2D 
 620      2D424547 
 620      494E2054 
 621 0072 0000     		.align	2
 622              	.LC5:
 623 0074 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 623      2D2D2D2D 
 623      2D2D2D2D 
 623      2D2D2D45 
 623      4E442054 
 624 009d 00       		.ascii	"\000"
 625              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 626              		.align	2
 627              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 628              		.thumb
 629              		.thumb_func
 630              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 631              	ChickityCheckYourselfBeforeYouWreckYourself:
 632              	.LFB72:
 255:notoriOS.c    **** 
 256:notoriOS.c    **** // ==============================================
 257:notoriOS.c    **** // Dropping bombs on your moms
 258:notoriOS.c    **** //      - Ice Cube (1992)
 259:notoriOS.c    **** //
 260:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 17


 261:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 262:notoriOS.c    **** // ==============================================
 263:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 633              		.loc 1 263 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 392
 636              		@ frame_needed = 1, uses_anonymous_args = 0
 637 0000 90B5     		push	{r4, r7, lr}
 638              		.cfi_def_cfa_offset 12
 639              		.cfi_offset 4, -12
 640              		.cfi_offset 7, -8
 641              		.cfi_offset 14, -4
 642 0002 ADF5417D 		sub	sp, sp, #772
 643              		.cfi_def_cfa_offset 784
 644 0006 5EAF     		add	r7, sp, #376
 645              		.cfi_def_cfa 7, 408
 264:notoriOS.c    **** //
 265:notoriOS.c    **** //    //printTestStatus(t_influx);
 266:notoriOS.c    **** //        SDI12_Power_Write(1u);
 267:notoriOS.c    **** //        SDI12_Power_Write(0u);
 268:notoriOS.c    **** //    // Take sontek readings and save them to m_sontek
 269:notoriOS.c    **** //        char big_value[DATA_MAX_KEY_LENGTH*15];
 270:notoriOS.c    **** //        // sontek_t is a new data type we defined in sontek.h. We then use that data type to defi
 271:notoriOS.c    **** //        sontek_t m_sontek;
 272:notoriOS.c    **** //        
 273:notoriOS.c    **** //        // Take sontek readings and save them to m_sontek
 274:notoriOS.c    **** //        m_sontek = sontek_take_reading();
 275:notoriOS.c    **** //        
 276:notoriOS.c    **** //        snprintf(big_value,sizeof(big_value),"%.2f,%.2f,%.2f,%.2f,\
 277:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,\
 278:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 279:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 280:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 281:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 282:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 283:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 284:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,\
 285:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f",\
 286:notoriOS.c    **** //                m_sontek.data0[0],m_sontek.data0[1],m_sontek.data0[2],m_sontek.data0[3],\
 287:notoriOS.c    **** //                m_sontek.data1[0],m_sontek.data1[1],m_sontek.data1[2],m_sontek.data1[3],m_sontek.
 288:notoriOS.c    **** //                m_sontek.data2[0],m_sontek.data2[1],m_sontek.data2[2],m_sontek.data2[3],m_sontek.
 289:notoriOS.c    **** //                m_sontek.data3[0],m_sontek.data3[1],m_sontek.data3[2],m_sontek.data3[3],m_sontek.
 290:notoriOS.c    **** //                m_sontek.data4[0],m_sontek.data4[1],m_sontek.data4[2],m_sontek.data4[3],m_sontek.
 291:notoriOS.c    **** //                m_sontek.data5[0],m_sontek.data5[1],m_sontek.data5[2],m_sontek.data5[3],m_sontek.
 292:notoriOS.c    **** //                m_sontek.data6[0],m_sontek.data6[1],m_sontek.data6[2],m_sontek.data6[3],m_sontek.
 293:notoriOS.c    **** //                m_sontek.data7[0],m_sontek.data7[1],m_sontek.data7[2],m_sontek.data7[3],m_sontek.
 294:notoriOS.c    **** //                m_sontek.data8[0],m_sontek.data8[1],m_sontek.data8[2],m_sontek.data8[3],\
 295:notoriOS.c    **** //                m_sontek.data9[0],m_sontek.data9[1],m_sontek.data9[2],m_sontek.data9[3],m_sontek.
 296:notoriOS.c    **** //            printNotif(NOTIF_TYPE_EVENT,"sontek=%s",big_value);
 297:notoriOS.c    **** //
 298:notoriOS.c    **** //        
 299:notoriOS.c    **** ////            //temperature - 0 data0
 300:notoriOS.c    **** ////            snprintf(value,sizeof(value),"%.2f",m_sontek.data0[0]); 
 301:notoriOS.c    **** ////            printNotif(NOTIF_TYPE_EVENT,"sontek_temp=%s",value);
 302:notoriOS.c    **** ////
 303:notoriOS.c    **** ////            //stage - 2 data0
 304:notoriOS.c    **** ////            snprintf(value,sizeof(value),"%.2f",m_sontek.data0[2]); 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 18


 305:notoriOS.c    **** ////            printNotif(NOTIF_TYPE_EVENT,"sontek_stage=%s",value);
 306:notoriOS.c    **** ////            //mean velocity - 2 data1
 307:notoriOS.c    **** ////            snprintf(value,sizeof(value),"%.2f",m_sontek.data1[2]);
 308:notoriOS.c    **** ////            printNotif(NOTIF_TYPE_EVENT,"sontek_vel=%s",value);
 309:notoriOS.c    **** ////            //SNR1 - 19
 310:notoriOS.c    **** ////            snprintf(value,sizeof(value),"%.2f",m_sontek.values[18]);
 311:notoriOS.c    **** ////            printNotif(NOTIF_TYPE_EVENT,"sontek_snr1=%s",value);
 312:notoriOS.c    **** ////            //Amp1 - 16
 313:notoriOS.c    **** ////            snprintf(value,sizeof(value),"%.2f",m_sontek.values[16]);
 314:notoriOS.c    **** ////            printNotif(NOTIF_TYPE_EVENT,"sontek_amp1=%s",value);
 315:notoriOS.c    **** ////            //bat - 49
 316:notoriOS.c    **** ////            snprintf(value,sizeof(value),"%.2f",m_sontek.values[49]);
 317:notoriOS.c    **** ////            printNotif(NOTIF_TYPE_EVENT,"sontek_v_bat=%s",value);
 318:notoriOS.c    **** //            
 319:notoriOS.c    **** //////////////////////------------------------------------------------------------------------
 320:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 646              		.loc 1 320 0
 647 0008 0E49     		ldr	r1, .L26
 648 000a 0320     		movs	r0, #3
 649 000c FFF7FEFF 		bl	printNotif
 321:notoriOS.c    ****     
 322:notoriOS.c    ****     // Test modem
 323:notoriOS.c    **** //    test_t t_modem = modem_test();
 324:notoriOS.c    **** //    printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s\n",modem_info.imei,modem_info.s
 325:notoriOS.c    **** //    printTestStatus(t_modem);
 326:notoriOS.c    **** //    
 327:notoriOS.c    **** //    // Test level sensor
 328:notoriOS.c    **** //    test_t t_level_sensor = level_sensor_test();  
 329:notoriOS.c    **** //    printTestStatus(t_level_sensor);
 330:notoriOS.c    **** //    
 331:notoriOS.c    **** //    // Test voltages
 332:notoriOS.c    **** //    test_t t_voltages = voltages_test();
 333:notoriOS.c    **** //    printTestStatus(t_voltages);
 334:notoriOS.c    ****     
 335:notoriOS.c    ****     // Test SD card
 336:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 650              		.loc 1 336 0
 651 0010 3B1D     		adds	r3, r7, #4
 652 0012 1846     		mov	r0, r3
 653 0014 FFF7FEFF 		bl	SD_card_test
 337:notoriOS.c    ****     printTestStatus(t_sd_card);
 654              		.loc 1 337 0
 655 0018 3C1D     		adds	r4, r7, #4
 656 001a 6846     		mov	r0, sp
 657 001c 04F11003 		add	r3, r4, #16
 658 0020 40F27112 		movw	r2, #369
 659 0024 1946     		mov	r1, r3
 660 0026 FFF7FEFF 		bl	memcpy
 661 002a 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 662 002e FFF7FEFF 		bl	printTestStatus
 338:notoriOS.c    ****     
 339:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 663              		.loc 1 339 0
 664 0032 0549     		ldr	r1, .L26+4
 665 0034 0320     		movs	r0, #3
 666 0036 FFF7FEFF 		bl	printNotif
 340:notoriOS.c    **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 19


 341:notoriOS.c    **** }
 667              		.loc 1 341 0
 668 003a 00BF     		nop
 669 003c 07F5C677 		add	r7, r7, #396
 670              		.cfi_def_cfa_offset 12
 671 0040 BD46     		mov	sp, r7
 672              		.cfi_def_cfa_register 13
 673              		@ sp needed
 674 0042 90BD     		pop	{r4, r7, pc}
 675              	.L27:
 676              		.align	2
 677              	.L26:
 678 0044 48000000 		.word	.LC4
 679 0048 74000000 		.word	.LC5
 680              		.cfi_endproc
 681              	.LFE72:
 682              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 683              		.section	.text.main,"ax",%progbits
 684              		.align	2
 685              		.global	main
 686              		.thumb
 687              		.thumb_func
 688              		.type	main, %function
 689              	main:
 690              	.LFB73:
 342:notoriOS.c    **** 
 343:notoriOS.c    **** // ==============================================
 344:notoriOS.c    **** // Processes Core Tasks
 345:notoriOS.c    **** // ==============================================
 346:notoriOS.c    **** int main(void)
 347:notoriOS.c    **** {
 691              		.loc 1 347 0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 1, uses_anonymous_args = 0
 695 0000 80B5     		push	{r7, lr}
 696              		.cfi_def_cfa_offset 8
 697              		.cfi_offset 7, -8
 698              		.cfi_offset 14, -4
 699 0002 00AF     		add	r7, sp, #0
 700              		.cfi_def_cfa_register 7
 348:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 701              		.loc 1 348 0
 702              		.syntax unified
 703              	@ 348 "notoriOS.c" 1
 704 0004 62B6     		CPSIE   i
 705              	@ 0 "" 2
 349:notoriOS.c    **** 
 350:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 706              		.loc 1 350 0
 707              		.thumb
 708              		.syntax unified
 709 0006 FFF7FEFF 		bl	ReadyOrNot
 351:notoriOS.c    ****     
 352:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 710              		.loc 1 352 0
 711 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 20


 712              	.L30:
 353:notoriOS.c    ****    
 354:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 355:notoriOS.c    ****     {
 356:notoriOS.c    ****         
 357:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 713              		.loc 1 357 0
 714 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 715 0012 0346     		mov	r3, r0
 716 0014 002B     		cmp	r3, #0
 717 0016 FAD1     		bne	.L30
 358:notoriOS.c    ****         {
 359:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
 718              		.loc 1 359 0
 719 0018 FFF7FEFF 		bl	LayBack
 360:notoriOS.c    ****         }
 361:notoriOS.c    ****     }
 720              		.loc 1 361 0
 721 001c F7E7     		b	.L30
 722              		.cfi_endproc
 723              	.LFE73:
 724              		.size	main, .-main
 725 001e 00BF     		.section	.rodata
 726 009e 0000     		.align	2
 727              	.LC6:
 728 00a0 4D6F6465 		.ascii	"Modem is ready.\000"
 728      6D206973 
 728      20726561 
 728      64792E00 
 729              		.align	2
 730              	.LC7:
 731 00b0 72737270 		.ascii	"rsrp\000"
 731      00
 732 00b5 000000   		.align	2
 733              	.LC8:
 734 00b8 7472795F 		.ascii	"try_counter\000"
 734      636F756E 
 734      74657200 
 735              		.align	2
 736              	.LC9:
 737 00c4 64617461 		.ascii	"data_count_sent\000"
 737      5F636F75 
 737      6E745F73 
 737      656E7400 
 738              		.align	2
 739              	.LC10:
 740 00d4 64617461 		.ascii	"data_count_desired\000"
 740      5F636F75 
 740      6E745F64 
 740      65736972 
 740      656400
 741 00e7 00       		.align	2
 742              	.LC11:
 743 00e8 42656769 		.ascii	"Begin HTTP post.\000"
 743      6E204854 
 743      54502070 
 743      6F73742E 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 21


 743      00
 744 00f9 000000   		.align	2
 745              	.LC12:
 746 00fc 36306332 		.ascii	"60c2576e47aa9381964b5a975bde301e189963b2\000"
 746      35373665 
 746      34376161 
 746      39333831 
 746      39363462 
 747 0125 000000   		.align	2
 748              	.LC13:
 749 0128 6170692F 		.ascii	"api/v1/write\000"
 749      76312F77 
 749      72697465 
 749      00
 750 0135 000000   		.align	2
 751              	.LC14:
 752 0138 48545450 		.ascii	"HTTP route: %s\000"
 752      20726F75 
 752      74653A20 
 752      257300
 753 0147 00       		.align	2
 754              	.LC15:
 755 0148 312E3100 		.ascii	"1.1\000"
 756              		.align	2
 757              	.LC16:
 758 014c 00       		.ascii	"\000"
 759 014d 000000   		.align	2
 760              	.LC17:
 761 0150 436C6F73 		.ascii	"Close\000"
 761      6500
 762 0156 0000     		.align	2
 763              	.LC18:
 764 0158 504F5354 		.ascii	"POST\000"
 764      00
 765 015d 000000   		.align	2
 766              	.LC19:
 767 0160 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 767      20485454 
 767      50205265 
 767      71756573 
 767      743A2025 
 768 0176 0000     		.align	2
 769              	.LC20:
 770 0178 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 770      443D312C 
 770      302C2564 
 770      2C222573 
 770      222C302C 
 771 0191 000000   		.align	2
 772              	.LC21:
 773 0194 257300   		.ascii	"%s\000"
 774 0197 00       		.align	2
 775              	.LC22:
 776 0198 4F4B00   		.ascii	"OK\000"
 777              		.global	__aeabi_ui2d
 778              		.global	__aeabi_d2iz
 779 019b 00       		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 22


 780              	.LC23:
 781 019c 68747470 		.ascii	"http_request len: %d\000"
 781      5F726571 
 781      75657374 
 781      206C656E 
 781      3A202564 
 782 01b1 000000   		.align	2
 783              	.LC24:
 784 01b4 23206F66 		.ascii	"# of packets: %d\000"
 784      20706163 
 784      6B657473 
 784      3A202564 
 784      00
 785 01c5 000000   		.align	2
 786              	.LC25:
 787 01c8 3E00     		.ascii	">\000"
 788 01ca 0000     		.align	2
 789              	.LC26:
 790 01cc 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 790      53454E44 
 790      3D310D0A 
 790      00
 791 01d9 000000   		.align	2
 792              	.LC27:
 793 01dc 1A00     		.ascii	"\032\000"
 794 01de 0000     		.align	2
 795              	.LC28:
 796 01e0 6368756E 		.ascii	"chunk %d: %s\000"
 796      6B202564 
 796      3A202573 
 796      00
 797 01ed 000000   		.align	2
 798              	.LC29:
 799 01f0 5352494E 		.ascii	"SRING\000"
 799      4700
 800 01f6 0000     		.align	2
 801              	.LC30:
 802 01f8 4F532D4F 		.ascii	"OS-OK\000"
 802      4B00
 803 01fe 0000     		.align	2
 804              	.LC31:
 805 0200 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 805      52454356 
 805      3D312C31 
 805      3030300D 
 805      00
 806 0211 000000   		.align	2
 807              	.LC32:
 808 0214 6D6F6465 		.ascii	"modem_tx_time\000"
 808      6D5F7478 
 808      5F74696D 
 808      6500
 809 0222 0000     		.align	2
 810              	.LC33:
 811 0224 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 811      4F3A2043 
 811      6F756C64 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 23


 811      206E6F74 
 811      20726563 
 812              		.section	.text.syncData,"ax",%progbits
 813              		.align	2
 814              		.global	syncData
 815              		.thumb
 816              		.thumb_func
 817              		.type	syncData, %function
 818              	syncData:
 819              	.LFB74:
 362:notoriOS.c    **** }
 363:notoriOS.c    **** 
 364:notoriOS.c    **** // ==============================================
 365:notoriOS.c    **** // Syncs data with server
 366:notoriOS.c    **** // Returns 0 when done
 367:notoriOS.c    **** // ==============================================
 368:notoriOS.c    **** uint8 syncData(){
 820              		.loc 1 368 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 1336
 823              		@ frame_needed = 1, uses_anonymous_args = 0
 824 0000 90B5     		push	{r4, r7, lr}
 825              		.cfi_def_cfa_offset 12
 826              		.cfi_offset 4, -12
 827              		.cfi_offset 7, -8
 828              		.cfi_offset 14, -4
 829 0002 ADF2545D 		subw	sp, sp, #1364
 830              		.cfi_def_cfa_offset 1376
 831 0006 06AF     		add	r7, sp, #24
 832              		.cfi_def_cfa 7, 1352
 369:notoriOS.c    ****     
 370:notoriOS.c    ****     /*
 371:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 372:notoriOS.c    ****     uint8 check = 0;
 373:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 374:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 375:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 376:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 377:notoriOS.c    ****     */
 378:notoriOS.c    **** 
 379:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 380:notoriOS.c    ****     LED_Write(1u);
 833              		.loc 1 380 0
 834 0008 0120     		movs	r0, #1
 835 000a FFF7FEFF 		bl	LED_Write
 381:notoriOS.c    ****     CyDelay(100u);
 836              		.loc 1 381 0
 837 000e 6420     		movs	r0, #100
 838 0010 FFF7FEFF 		bl	CyDelay
 382:notoriOS.c    ****     LED_Write(0u);
 839              		.loc 1 382 0
 840 0014 0020     		movs	r0, #0
 841 0016 FFF7FEFF 		bl	LED_Write
 383:notoriOS.c    **** 
 384:notoriOS.c    ****     
 385:notoriOS.c    ****     // If there's no data, not need to do anything
 386:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 24


 842              		.loc 1 386 0
 843 001a FFF7FEFF 		bl	sizeOfDataStack
 844 001e 0346     		mov	r3, r0
 845 0020 002B     		cmp	r3, #0
 846 0022 01D1     		bne	.L32
 387:notoriOS.c    ****         return 0u;
 847              		.loc 1 387 0
 848 0024 0023     		movs	r3, #0
 849 0026 F9E1     		b	.L33
 850              	.L32:
 388:notoriOS.c    ****         }
 389:notoriOS.c    ****     
 390:notoriOS.c    ****     // Create request body, in this case influx
 391:notoriOS.c    ****     // Place body into HTTP request header
 392:notoriOS.c    ****     // Fire up modem and get it out
 393:notoriOS.c    ****      
 394:notoriOS.c    ****     
 395:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 396:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 851              		.loc 1 396 0
 852 0028 FFF7FEFF 		bl	modem_get_state
 853 002c 0346     		mov	r3, r0
 854 002e 002B     		cmp	r3, #0
 855 0030 11D1     		bne	.L34
 397:notoriOS.c    **** 
 398:notoriOS.c    ****         try_counter++;
 856              		.loc 1 398 0
 857 0032 C74B     		ldr	r3, .L46
 858 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 859 0036 0133     		adds	r3, r3, #1
 860 0038 DAB2     		uxtb	r2, r3
 861 003a C54B     		ldr	r3, .L46
 862 003c 1A70     		strb	r2, [r3]
 399:notoriOS.c    ****         	
 400:notoriOS.c    ****         if(try_counter <= 2){
 863              		.loc 1 400 0
 864 003e C44B     		ldr	r3, .L46
 865 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 866 0042 022B     		cmp	r3, #2
 867 0044 02D8     		bhi	.L35
 401:notoriOS.c    ****             modem_power_up();
 868              		.loc 1 401 0
 869 0046 FFF7FEFF 		bl	modem_power_up
 870 004a E6E1     		b	.L36
 871              	.L35:
 402:notoriOS.c    ****         }else{
 403:notoriOS.c    ****             try_counter = 0;
 872              		.loc 1 403 0
 873 004c C04B     		ldr	r3, .L46
 874 004e 0022     		movs	r2, #0
 875 0050 1A70     		strb	r2, [r3]
 404:notoriOS.c    ****             return 0u;
 876              		.loc 1 404 0
 877 0052 0023     		movs	r3, #0
 878 0054 E2E1     		b	.L33
 879              	.L34:
 405:notoriOS.c    ****             }
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 25


 406:notoriOS.c    ****             
 407:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 880              		.loc 1 407 0
 881 0056 FFF7FEFF 		bl	modem_get_state
 882 005a 0346     		mov	r3, r0
 883 005c 042B     		cmp	r3, #4
 884 005e 40F0DC81 		bne	.L36
 885              	.LBB2:
 408:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 886              		.loc 1 408 0
 887 0062 BC49     		ldr	r1, .L46+4
 888 0064 0020     		movs	r0, #0
 889 0066 FFF7FEFF 		bl	printNotif
 409:notoriOS.c    ****         
 410:notoriOS.c    ****         http_request[0] = '\0';
 890              		.loc 1 410 0
 891 006a BB4B     		ldr	r3, .L46+8
 892 006c 0022     		movs	r2, #0
 893 006e 1A70     		strb	r2, [r3]
 411:notoriOS.c    ****         http_body[0] = '\0';
 894              		.loc 1 411 0
 895 0070 BA4B     		ldr	r3, .L46+12
 896 0072 0022     		movs	r2, #0
 897 0074 1A70     		strb	r2, [r3]
 412:notoriOS.c    ****         http_route[0] = '\0';
 898              		.loc 1 412 0
 899 0076 BA4B     		ldr	r3, .L46+16
 900 0078 0022     		movs	r2, #0
 901 007a 1A70     		strb	r2, [r3]
 413:notoriOS.c    ****         //char *base = "write";
 414:notoriOS.c    ****         
 415:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power)
 416:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 417:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 902              		.loc 1 417 0
 903 007c B94B     		ldr	r3, .L46+20
 904 007e 5B69     		ldr	r3, [r3, #20]
 905 0080 07F5A260 		add	r0, r7, #1296
 906 0084 B84A     		ldr	r2, .L46+24
 907 0086 1421     		movs	r1, #20
 908 0088 FFF7FEFF 		bl	snprintf
 418:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 909              		.loc 1 418 0
 910 008c FFF7FEFF 		bl	getTimeStamp
 911 0090 0246     		mov	r2, r0
 912 0092 07F5A263 		add	r3, r7, #1296
 913 0096 1946     		mov	r1, r3
 914 0098 B448     		ldr	r0, .L46+28
 915 009a FFF7FEFF 		bl	pushData
 419:notoriOS.c    ****         
 420:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 421:notoriOS.c    ****         char c_try_counter[20];
 422:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 916              		.loc 1 422 0
 917 009e AC4B     		ldr	r3, .L46
 918 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 919 00a2 07F2FC40 		addw	r0, r7, #1276
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 26


 920 00a6 B04A     		ldr	r2, .L46+24
 921 00a8 1421     		movs	r1, #20
 922 00aa FFF7FEFF 		bl	snprintf
 423:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 923              		.loc 1 423 0
 924 00ae FFF7FEFF 		bl	getTimeStamp
 925 00b2 0246     		mov	r2, r0
 926 00b4 07F2FC43 		addw	r3, r7, #1276
 927 00b8 1946     		mov	r1, r3
 928 00ba AD48     		ldr	r0, .L46+32
 929 00bc FFF7FEFF 		bl	pushData
 424:notoriOS.c    ****         
 425:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
 426:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 427:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 428:notoriOS.c    ****         if(buffer_overflow == false){
 930              		.loc 1 428 0
 931 00c0 AC4B     		ldr	r3, .L46+36
 932 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 933 00c4 83F00103 		eor	r3, r3, #1
 934 00c8 DBB2     		uxtb	r3, r3
 935 00ca 002B     		cmp	r3, #0
 936 00cc 16D0     		beq	.L37
 937              	.LBB3:
 429:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 938              		.loc 1 429 0
 939 00ce FFF7FEFF 		bl	sizeOfDataStack
 940 00d2 0346     		mov	r3, r0
 941 00d4 A7F83035 		strh	r3, [r7, #1328]	@ movhi
 430:notoriOS.c    ****             char c_data_count_sent[20];
 431:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 942              		.loc 1 431 0
 943 00d8 B7F83035 		ldrh	r3, [r7, #1328]
 944 00dc 07F2D440 		addw	r0, r7, #1236
 945 00e0 A14A     		ldr	r2, .L46+24
 946 00e2 1421     		movs	r1, #20
 947 00e4 FFF7FEFF 		bl	snprintf
 432:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 948              		.loc 1 432 0
 949 00e8 FFF7FEFF 		bl	getTimeStamp
 950 00ec 0246     		mov	r2, r0
 951 00ee 07F2D443 		addw	r3, r7, #1236
 952 00f2 1946     		mov	r1, r3
 953 00f4 A048     		ldr	r0, .L46+40
 954 00f6 FFF7FEFF 		bl	pushData
 955              	.LBE3:
 956 00fa 0FE0     		b	.L38
 957              	.L37:
 958              	.LBB4:
 433:notoriOS.c    ****         }else{
 434:notoriOS.c    ****             char c_data_count_sent[20];
 435:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 959              		.loc 1 435 0
 960 00fc 07F59860 		add	r0, r7, #1216
 961 0100 9623     		movs	r3, #150
 962 0102 994A     		ldr	r2, .L46+24
 963 0104 1421     		movs	r1, #20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 27


 964 0106 FFF7FEFF 		bl	snprintf
 436:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 965              		.loc 1 436 0
 966 010a FFF7FEFF 		bl	getTimeStamp
 967 010e 0246     		mov	r2, r0
 968 0110 07F59863 		add	r3, r7, #1216
 969 0114 1946     		mov	r1, r3
 970 0116 9848     		ldr	r0, .L46+40
 971 0118 FFF7FEFF 		bl	pushData
 972              	.L38:
 973              	.LBE4:
 437:notoriOS.c    ****         }
 438:notoriOS.c    ****         
 439:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 440:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 974              		.loc 1 440 0
 975 011c FFF7FEFF 		bl	sizeOfDataStackDesired
 976 0120 0346     		mov	r3, r0
 977 0122 A7F82E35 		strh	r3, [r7, #1326]	@ movhi
 441:notoriOS.c    ****         char c_data_count_desired[20];
 442:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 443:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 978              		.loc 1 443 0
 979 0126 B7F82E35 		ldrh	r3, [r7, #1326]
 980 012a 013B     		subs	r3, r3, #1
 981 012c 07F59D60 		add	r0, r7, #1256
 982 0130 8D4A     		ldr	r2, .L46+24
 983 0132 1421     		movs	r1, #20
 984 0134 FFF7FEFF 		bl	snprintf
 444:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
 985              		.loc 1 444 0
 986 0138 FFF7FEFF 		bl	getTimeStamp
 987 013c 0246     		mov	r2, r0
 988 013e 07F59D63 		add	r3, r7, #1256
 989 0142 1946     		mov	r1, r3
 990 0144 8D48     		ldr	r0, .L46+44
 991 0146 FFF7FEFF 		bl	pushData
 445:notoriOS.c    ****         
 446:notoriOS.c    ****         // Construct HTPP request
 447:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 992              		.loc 1 447 0
 993 014a 8D49     		ldr	r1, .L46+48
 994 014c 0020     		movs	r0, #0
 995 014e FFF7FEFF 		bl	printNotif
 448:notoriOS.c    ****         
 449:notoriOS.c    ****         // Old influx API
 450:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 451:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 996              		.loc 1 451 0
 997 0152 8C4B     		ldr	r3, .L46+52
 998 0154 8C4A     		ldr	r2, .L46+56
 999 0156 8D49     		ldr	r1, .L46+60
 1000 0158 8148     		ldr	r0, .L46+16
 1001 015a FFF7FEFF 		bl	construct_malcom_route
 452:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1002              		.loc 1 452 0
 1003 015e 804A     		ldr	r2, .L46+16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 28


 1004 0160 8B49     		ldr	r1, .L46+64
 1005 0162 0020     		movs	r0, #0
 1006 0164 FFF7FEFF 		bl	printNotif
 453:notoriOS.c    ****         
 454:notoriOS.c    ****         //OLD INFLUX API
 455:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 456:notoriOS.c    ****         construct_malcom_body(http_body);
 1007              		.loc 1 456 0
 1008 0168 7C48     		ldr	r0, .L46+12
 1009 016a FFF7FEFF 		bl	construct_malcom_body
 457:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1010              		.loc 1 457 0
 1011 016e 894B     		ldr	r3, .L46+68
 1012 0170 5B6E     		ldr	r3, [r3, #100]
 1013 0172 894A     		ldr	r2, .L46+72
 1014 0174 0592     		str	r2, [sp, #20]
 1015 0176 0022     		movs	r2, #0
 1016 0178 0492     		str	r2, [sp, #16]
 1017 017a 884A     		ldr	r2, .L46+76
 1018 017c 0392     		str	r2, [sp, #12]
 1019 017e 884A     		ldr	r2, .L46+80
 1020 0180 0292     		str	r2, [sp, #8]
 1021 0182 884A     		ldr	r2, .L46+84
 1022 0184 0192     		str	r2, [sp, #4]
 1023 0186 0093     		str	r3, [sp]
 1024 0188 754B     		ldr	r3, .L46+16
 1025 018a 824A     		ldr	r2, .L46+68
 1026 018c 7349     		ldr	r1, .L46+12
 1027 018e 7248     		ldr	r0, .L46+8
 1028 0190 FFF7FEFF 		bl	construct_generic_HTTP_request
 458:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1029              		.loc 1 458 0
 1030 0194 704A     		ldr	r2, .L46+8
 1031 0196 8449     		ldr	r1, .L46+88
 1032 0198 0020     		movs	r0, #0
 1033 019a FFF7FEFF 		bl	printNotif
 459:notoriOS.c    ****         
 460:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 461:notoriOS.c    ****         // Open port and begin command line sequence
 462:notoriOS.c    ****         char portConfig[200];
 463:notoriOS.c    ****         uint8 status = 0u;
 1034              		.loc 1 463 0
 1035 019e 0023     		movs	r3, #0
 1036 01a0 87F82D35 		strb	r3, [r7, #1325]
 464:notoriOS.c    ****         
 465:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1037              		.loc 1 465 0
 1038 01a4 7B4B     		ldr	r3, .L46+68
 1039 01a6 5A6E     		ldr	r2, [r3, #100]
 1040 01a8 3846     		mov	r0, r7
 1041 01aa 7A4B     		ldr	r3, .L46+68
 1042 01ac 0093     		str	r3, [sp]
 1043 01ae 1346     		mov	r3, r2
 1044 01b0 7E4A     		ldr	r2, .L46+92
 1045 01b2 C821     		movs	r1, #200
 1046 01b4 FFF7FEFF 		bl	snprintf
 466:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 29


 1047              		.loc 1 466 0
 1048 01b8 3B46     		mov	r3, r7
 1049 01ba 1A46     		mov	r2, r3
 1050 01bc 7C49     		ldr	r1, .L46+96
 1051 01be 0020     		movs	r0, #0
 1052 01c0 FFF7FEFF 		bl	printNotif
 467:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1053              		.loc 1 467 0
 1054 01c4 3B46     		mov	r3, r7
 1055 01c6 42F21072 		movw	r2, #10000
 1056 01ca 7A49     		ldr	r1, .L46+100
 1057 01cc 1846     		mov	r0, r3
 1058 01ce FFF7FEFF 		bl	at_write_command
 1059 01d2 0346     		mov	r3, r0
 1060 01d4 87F82D35 		strb	r3, [r7, #1325]
 468:notoriOS.c    ****         
 469:notoriOS.c    ****         // create character pointer to chunk through the http_request
 470:notoriOS.c    ****         char *chunk;
 471:notoriOS.c    ****         // Set chunk to start where http_request starts
 472:notoriOS.c    ****         chunk = http_request;
 1061              		.loc 1 472 0
 1062 01d8 5F4B     		ldr	r3, .L46+8
 1063 01da C7F83435 		str	r3, [r7, #1332]
 473:notoriOS.c    ****         // variable for the number of packets to send
 474:notoriOS.c    ****         int8 packets;
 475:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1064              		.loc 1 475 0
 1065 01de 5E48     		ldr	r0, .L46+8
 1066 01e0 FFF7FEFF 		bl	strlen
 1067 01e4 0246     		mov	r2, r0
 1068 01e6 744B     		ldr	r3, .L46+104
 1069 01e8 A3FB0223 		umull	r2, r3, r3, r2
 1070 01ec 5B09     		lsrs	r3, r3, #5
 1071 01ee 1846     		mov	r0, r3
 1072 01f0 FFF7FEFF 		bl	__aeabi_ui2d
 1073 01f4 4FF00002 		mov	r2, #0
 1074 01f8 704B     		ldr	r3, .L46+108
 1075 01fa FFF7FEFF 		bl	nextafter
 1076 01fe 0346     		mov	r3, r0
 1077 0200 0C46     		mov	r4, r1
 1078 0202 1846     		mov	r0, r3
 1079 0204 2146     		mov	r1, r4
 1080 0206 FFF7FEFF 		bl	ceil
 1081 020a 0346     		mov	r3, r0
 1082 020c 0C46     		mov	r4, r1
 1083 020e 1846     		mov	r0, r3
 1084 0210 2146     		mov	r1, r4
 1085 0212 FFF7FEFF 		bl	__aeabi_d2iz
 1086 0216 0346     		mov	r3, r0
 1087 0218 87F82C35 		strb	r3, [r7, #1324]
 476:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1088              		.loc 1 476 0
 1089 021c 4E48     		ldr	r0, .L46+8
 1090 021e FFF7FEFF 		bl	strlen
 1091 0222 0346     		mov	r3, r0
 1092 0224 1A46     		mov	r2, r3
 1093 0226 6649     		ldr	r1, .L46+112
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 30


 1094 0228 0020     		movs	r0, #0
 1095 022a FFF7FEFF 		bl	printNotif
 477:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1096              		.loc 1 477 0
 1097 022e 97F92C35 		ldrsb	r3, [r7, #1324]
 1098 0232 1A46     		mov	r2, r3
 1099 0234 6349     		ldr	r1, .L46+116
 1100 0236 0020     		movs	r0, #0
 1101 0238 FFF7FEFF 		bl	printNotif
 1102              	.LBB5:
 478:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 479:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1103              		.loc 1 479 0
 1104 023c 0023     		movs	r3, #0
 1105 023e 87F83335 		strb	r3, [r7, #1331]
 1106 0242 53E0     		b	.L39
 1107              	.L42:
 1108              	.LBB6:
 480:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 481:notoriOS.c    ****             char http_chunk[1001];
 482:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 483:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 484:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1109              		.loc 1 484 0
 1110 0244 4FF47A72 		mov	r2, #1000
 1111 0248 5F49     		ldr	r1, .L46+120
 1112 024a 6048     		ldr	r0, .L46+124
 1113 024c FFF7FEFF 		bl	at_write_command
 1114 0250 0346     		mov	r3, r0
 1115 0252 87F82D35 		strb	r3, [r7, #1325]
 485:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 486:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1116              		.loc 1 486 0
 1117 0256 07F1C800 		add	r0, r7, #200
 1118 025a D7F83435 		ldr	r3, [r7, #1332]
 1119 025e 544A     		ldr	r2, .L46+96
 1120 0260 4FF4FA71 		mov	r1, #500
 1121 0264 FFF7FEFF 		bl	snprintf
 487:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 488:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1122              		.loc 1 488 0
 1123 0268 07F1C803 		add	r3, r7, #200
 1124 026c 1846     		mov	r0, r3
 1125 026e FFF7FEFF 		bl	strlen
 1126 0272 0346     		mov	r3, r0
 1127 0274 1A46     		mov	r2, r3
 1128 0276 07F1C803 		add	r3, r7, #200
 1129 027a 1344     		add	r3, r3, r2
 1130 027c 5449     		ldr	r1, .L46+128
 1131 027e 1A46     		mov	r2, r3
 1132 0280 0B46     		mov	r3, r1
 1133 0282 1B88     		ldrh	r3, [r3]	@ unaligned
 1134 0284 1380     		strh	r3, [r2]	@ unaligned
 489:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1135              		.loc 1 489 0
 1136 0286 97F93325 		ldrsb	r2, [r7, #1331]
 1137 028a 07F1C803 		add	r3, r7, #200
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 31


 1138 028e 5149     		ldr	r1, .L46+132
 1139 0290 0020     		movs	r0, #0
 1140 0292 FFF7FEFF 		bl	printNotif
 490:notoriOS.c    ****             // Send data to server
 491:notoriOS.c    ****             if ((packet+1) != packets){
 1141              		.loc 1 491 0
 1142 0296 97F93335 		ldrsb	r3, [r7, #1331]
 1143 029a 5A1C     		adds	r2, r3, #1
 1144 029c 97F92C35 		ldrsb	r3, [r7, #1324]
 1145 02a0 9A42     		cmp	r2, r3
 1146 02a2 11D0     		beq	.L40
 492:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1147              		.loc 1 492 0
 1148 02a4 07F1C803 		add	r3, r7, #200
 1149 02a8 41F28832 		movw	r2, #5000
 1150 02ac 4149     		ldr	r1, .L46+100
 1151 02ae 1846     		mov	r0, r3
 1152 02b0 FFF7FEFF 		bl	at_write_command
 1153 02b4 0346     		mov	r3, r0
 1154 02b6 87F82D35 		strb	r3, [r7, #1325]
 493:notoriOS.c    ****                 // Move the pointer forward 
 494:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1155              		.loc 1 494 0
 1156 02ba D7F83435 		ldr	r3, [r7, #1332]
 1157 02be 03F2F313 		addw	r3, r3, #499
 1158 02c2 C7F83435 		str	r3, [r7, #1332]
 1159 02c6 0AE0     		b	.L41
 1160              	.L40:
 495:notoriOS.c    ****             }else{
 496:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
 1161              		.loc 1 496 0
 1162 02c8 07F1C803 		add	r3, r7, #200
 1163 02cc 41F28832 		movw	r2, #5000
 1164 02d0 4149     		ldr	r1, .L46+136
 1165 02d2 1846     		mov	r0, r3
 1166 02d4 FFF7FEFF 		bl	at_write_command
 1167 02d8 0346     		mov	r3, r0
 1168 02da 87F82D35 		strb	r3, [r7, #1325]
 1169              	.L41:
 1170              	.LBE6:
 479:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1171              		.loc 1 479 0 discriminator 2
 1172 02de 97F93335 		ldrsb	r3, [r7, #1331]
 1173 02e2 DBB2     		uxtb	r3, r3
 1174 02e4 0133     		adds	r3, r3, #1
 1175 02e6 DBB2     		uxtb	r3, r3
 1176 02e8 87F83335 		strb	r3, [r7, #1331]
 1177              	.L39:
 479:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1178              		.loc 1 479 0 is_stmt 0 discriminator 1
 1179 02ec 97F93325 		ldrsb	r2, [r7, #1331]
 1180 02f0 97F92C35 		ldrsb	r3, [r7, #1324]
 1181 02f4 9A42     		cmp	r2, r3
 1182 02f6 A5DB     		blt	.L42
 1183              	.LBE5:
 497:notoriOS.c    ****             }
 498:notoriOS.c    ****             
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 32


 499:notoriOS.c    ****         }
 500:notoriOS.c    ****         
 501:notoriOS.c    ****         // Read received buffer
 502:notoriOS.c    ****         // A good write will return code "OS-OK"
 503:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 504:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 505:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1184              		.loc 1 505 0 is_stmt 1
 1185 02f8 41F28832 		movw	r2, #5000
 1186 02fc 3749     		ldr	r1, .L46+140
 1187 02fe 3848     		ldr	r0, .L46+144
 1188 0300 FFF7FEFF 		bl	at_write_command
 1189 0304 0346     		mov	r3, r0
 1190 0306 87F82D35 		strb	r3, [r7, #1325]
 506:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 507:notoriOS.c    ****     
 508:notoriOS.c    ****   
 509:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 510:notoriOS.c    ****         if(status == 1u){
 1191              		.loc 1 510 0
 1192 030a 97F82D35 		ldrb	r3, [r7, #1325]	@ zero_extendqisi2
 1193 030e 012B     		cmp	r3, #1
 1194 0310 6CD1     		bne	.L43
 1195              	.LBB7:
 511:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1196              		.loc 1 511 0
 1197 0312 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 512:notoriOS.c    ****             Clear_Data_Stack();
 1198              		.loc 1 512 0
 1199 0316 FFF7FEFF 		bl	Clear_Data_Stack
 513:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1200              		.loc 1 513 0
 1201 031a FFF7FEFF 		bl	getTimeStamp
 1202 031e 0246     		mov	r2, r0
 1203 0320 304B     		ldr	r3, .L46+148
 1204 0322 1B68     		ldr	r3, [r3]
 1205 0324 D31A     		subs	r3, r2, r3
 1206 0326 C7F82835 		str	r3, [r7, #1320]
 514:notoriOS.c    ****             char s_send_time[10];
 515:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1207              		.loc 1 515 0
 1208 032a 07F2B440 		addw	r0, r7, #1204
 1209 032e D7F82835 		ldr	r3, [r7, #1320]
 1210 0332 0D4A     		ldr	r2, .L46+24
 1211 0334 0A21     		movs	r1, #10
 1212 0336 FFF7FEFF 		bl	snprintf
 516:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1213              		.loc 1 516 0
 1214 033a FFF7FEFF 		bl	getTimeStamp
 1215 033e 0246     		mov	r2, r0
 1216 0340 07F2B443 		addw	r3, r7, #1204
 1217 0344 1946     		mov	r1, r3
 1218 0346 2848     		ldr	r0, .L46+152
 1219 0348 FFF7FEFF 		bl	pushData
 1220              	.LBE7:
 1221 034c 52E0     		b	.L44
 1222              	.L47:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 33


 1223 034e 00BF     		.align	2
 1224              	.L46:
 1225 0350 00000000 		.word	try_counter
 1226 0354 A0000000 		.word	.LC6
 1227 0358 00000000 		.word	http_request
 1228 035c 00000000 		.word	http_body
 1229 0360 00000000 		.word	http_route
 1230 0364 00000000 		.word	modem_stats
 1231 0368 3C000000 		.word	.LC2
 1232 036c B0000000 		.word	.LC7
 1233 0370 B8000000 		.word	.LC8
 1234 0374 00000000 		.word	buffer_overflow
 1235 0378 C4000000 		.word	.LC9
 1236 037c D4000000 		.word	.LC10
 1237 0380 E8000000 		.word	.LC11
 1238 0384 FC000000 		.word	.LC12
 1239 0388 28000000 		.word	modem_info+40
 1240 038c 28010000 		.word	.LC13
 1241 0390 38010000 		.word	.LC14
 1242 0394 00000000 		.word	system_settings
 1243 0398 48010000 		.word	.LC15
 1244 039c 4C010000 		.word	.LC16
 1245 03a0 50010000 		.word	.LC17
 1246 03a4 58010000 		.word	.LC18
 1247 03a8 60010000 		.word	.LC19
 1248 03ac 78010000 		.word	.LC20
 1249 03b0 94010000 		.word	.LC21
 1250 03b4 98010000 		.word	.LC22
 1251 03b8 D34D6210 		.word	274877907
 1252 03bc 00407F40 		.word	1082081280
 1253 03c0 9C010000 		.word	.LC23
 1254 03c4 B4010000 		.word	.LC24
 1255 03c8 C8010000 		.word	.LC25
 1256 03cc CC010000 		.word	.LC26
 1257 03d0 DC010000 		.word	.LC27
 1258 03d4 E0010000 		.word	.LC28
 1259 03d8 F0010000 		.word	.LC29
 1260 03dc F8010000 		.word	.LC30
 1261 03e0 00020000 		.word	.LC31
 1262 03e4 00000000 		.word	modem_start_time_stamp
 1263 03e8 14020000 		.word	.LC32
 1264              	.L43:
 517:notoriOS.c    ****         }else{
 518:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1265              		.loc 1 518 0
 1266 03ec 0E49     		ldr	r1, .L48
 1267 03ee 0220     		movs	r0, #2
 1268 03f0 FFF7FEFF 		bl	printNotif
 1269              	.L44:
 519:notoriOS.c    ****         }
 520:notoriOS.c    ****          
 521:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 522:notoriOS.c    ****         long network_time = modem_get_network_time();
 1270              		.loc 1 522 0
 1271 03f4 FFF7FEFF 		bl	modem_get_network_time
 1272 03f8 C7F82405 		str	r0, [r7, #1316]
 523:notoriOS.c    ****         if(network_time != 0){
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 34


 1273              		.loc 1 523 0
 1274 03fc D7F82435 		ldr	r3, [r7, #1316]
 1275 0400 002B     		cmp	r3, #0
 1276 0402 03D0     		beq	.L45
 524:notoriOS.c    ****            setTime(network_time);
 1277              		.loc 1 524 0
 1278 0404 D7F82405 		ldr	r0, [r7, #1316]
 1279 0408 FFF7FEFF 		bl	setTime
 1280              	.L45:
 525:notoriOS.c    ****         }
 526:notoriOS.c    ****         
 527:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 528:notoriOS.c    ****         // If not -- keep the statck and try next time
 529:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 530:notoriOS.c    ****         modem_power_down();
 1281              		.loc 1 530 0
 1282 040c FFF7FEFF 		bl	modem_power_down
 531:notoriOS.c    ****         
 532:notoriOS.c    ****         try_counter = 0u;
 1283              		.loc 1 532 0
 1284 0410 064B     		ldr	r3, .L48+4
 1285 0412 0022     		movs	r2, #0
 1286 0414 1A70     		strb	r2, [r3]
 533:notoriOS.c    ****         return 0u;
 1287              		.loc 1 533 0
 1288 0416 0023     		movs	r3, #0
 1289 0418 00E0     		b	.L33
 1290              	.L36:
 1291              	.LBE2:
 534:notoriOS.c    ****     }
 535:notoriOS.c    ****       
 536:notoriOS.c    ****       return 1u; // Not done yet
 1292              		.loc 1 536 0
 1293 041a 0123     		movs	r3, #1
 1294              	.L33:
 537:notoriOS.c    **** }
 1295              		.loc 1 537 0 discriminator 1
 1296 041c 1846     		mov	r0, r3
 1297 041e 07F23C57 		addw	r7, r7, #1340
 1298              		.cfi_def_cfa_offset 12
 1299 0422 BD46     		mov	sp, r7
 1300              		.cfi_def_cfa_register 13
 1301              		@ sp needed
 1302 0424 90BD     		pop	{r4, r7, pc}
 1303              	.L49:
 1304 0426 00BF     		.align	2
 1305              	.L48:
 1306 0428 24020000 		.word	.LC33
 1307 042c 00000000 		.word	try_counter
 1308              		.cfi_endproc
 1309              	.LFE74:
 1310              		.size	syncData, .-syncData
 1311              		.section	.text.configureRemoteParams,"ax",%progbits
 1312              		.align	2
 1313              		.global	configureRemoteParams
 1314              		.thumb
 1315              		.thumb_func
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 35


 1316              		.type	configureRemoteParams, %function
 1317              	configureRemoteParams:
 1318              	.LFB75:
 538:notoriOS.c    **** 
 539:notoriOS.c    **** // ==============================================
 540:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 541:notoriOS.c    **** // Returns 0 when done
 542:notoriOS.c    **** // ==============================================
 543:notoriOS.c    **** uint8 configureRemoteParams(){
 1319              		.loc 1 543 0
 1320              		.cfi_startproc
 1321              		@ args = 0, pretend = 0, frame = 8
 1322              		@ frame_needed = 1, uses_anonymous_args = 0
 1323 0000 80B5     		push	{r7, lr}
 1324              		.cfi_def_cfa_offset 8
 1325              		.cfi_offset 7, -8
 1326              		.cfi_offset 14, -4
 1327 0002 82B0     		sub	sp, sp, #8
 1328              		.cfi_def_cfa_offset 16
 1329 0004 00AF     		add	r7, sp, #0
 1330              		.cfi_def_cfa_register 7
 544:notoriOS.c    ****     
 545:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1331              		.loc 1 545 0
 1332 0006 FFF7FEFF 		bl	modem_get_state
 1333 000a 0346     		mov	r3, r0
 1334 000c 002B     		cmp	r3, #0
 1335 000e 02D1     		bne	.L51
 546:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 547:notoriOS.c    ****         modem_power_up();
 1336              		.loc 1 547 0
 1337 0010 FFF7FEFF 		bl	modem_power_up
 1338 0014 11E0     		b	.L52
 1339              	.L51:
 548:notoriOS.c    ****             
 549:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1340              		.loc 1 549 0
 1341 0016 FFF7FEFF 		bl	modem_get_state
 1342 001a 0346     		mov	r3, r0
 1343 001c 042B     		cmp	r3, #4
 1344 001e 0CD1     		bne	.L52
 1345              	.LBB8:
 550:notoriOS.c    ****         
 551:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 552:notoriOS.c    ****         
 553:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 554:notoriOS.c    ****         long network_time = modem_get_network_time();
 1346              		.loc 1 554 0
 1347 0020 FFF7FEFF 		bl	modem_get_network_time
 1348 0024 7860     		str	r0, [r7, #4]
 555:notoriOS.c    ****         if(network_time != 0){
 1349              		.loc 1 555 0
 1350 0026 7B68     		ldr	r3, [r7, #4]
 1351 0028 002B     		cmp	r3, #0
 1352 002a 02D0     		beq	.L53
 556:notoriOS.c    ****             setTime(network_time);
 1353              		.loc 1 556 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 36


 1354 002c 7868     		ldr	r0, [r7, #4]
 1355 002e FFF7FEFF 		bl	setTime
 1356              	.L53:
 557:notoriOS.c    ****         }
 558:notoriOS.c    ****         
 559:notoriOS.c    ****         // Get GPS coordinates
 560:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 561:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 562:notoriOS.c    ****         modem_power_down();
 1357              		.loc 1 562 0
 1358 0032 FFF7FEFF 		bl	modem_power_down
 563:notoriOS.c    ****         return 0u;
 1359              		.loc 1 563 0
 1360 0036 0023     		movs	r3, #0
 1361 0038 00E0     		b	.L54
 1362              	.L52:
 1363              	.LBE8:
 564:notoriOS.c    ****         
 565:notoriOS.c    ****     }
 566:notoriOS.c    ****     
 567:notoriOS.c    ****     return 1u;
 1364              		.loc 1 567 0
 1365 003a 0123     		movs	r3, #1
 1366              	.L54:
 568:notoriOS.c    **** }
 1367              		.loc 1 568 0
 1368 003c 1846     		mov	r0, r3
 1369 003e 0837     		adds	r7, r7, #8
 1370              		.cfi_def_cfa_offset 8
 1371 0040 BD46     		mov	sp, r7
 1372              		.cfi_def_cfa_register 13
 1373              		@ sp needed
 1374 0042 80BD     		pop	{r7, pc}
 1375              		.cfi_endproc
 1376              	.LFE75:
 1377              		.size	configureRemoteParams, .-configureRemoteParams
 1378              		.section	.rodata
 1379 024f 00       		.align	2
 1380              	.LC34:
 1381 0250 256C6400 		.ascii	"%ld\000"
 1382              		.align	2
 1383              	.LC35:
 1384 0254 6D617862 		.ascii	"maxbotix_depth=%s\000"
 1384      6F746978 
 1384      5F646570 
 1384      74683D25 
 1384      7300
 1385 0266 0000     		.align	2
 1386              	.LC36:
 1387 0268 6D617862 		.ascii	"maxbotix_depth\000"
 1387      6F746978 
 1387      5F646570 
 1387      746800
 1388 0277 00       		.align	2
 1389              	.LC37:
 1390 0278 612B00   		.ascii	"a+\000"
 1391 027b 00       		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 37


 1392              	.LC38:
 1393 027c 206D6178 		.ascii	" maxbotix_depth: \000"
 1393      626F7469 
 1393      785F6465 
 1393      7074683A 
 1393      2000
 1394 028e 0000     		.align	2
 1395              	.LC39:
 1396 0290 2000     		.ascii	" \000"
 1397 0292 0000     		.align	2
 1398              	.LC40:
 1399 0294 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 1399      64206E6F 
 1399      74206765 
 1399      74207661 
 1399      6C696420 
 1400              		.global	__aeabi_f2d
 1401              		.align	2
 1402              	.LC41:
 1403 02c0 252E3266 		.ascii	"%.2f,%.2f,%.2f,%.2f,                %.2f,%.2f,%.2f,"
 1403      2C252E32 
 1403      662C252E 
 1403      32662C25 
 1403      2E32662C 
 1404 02f3 252E3266 		.ascii	"%.2f,%.2f,                %.2f,%.2f,%.2f,%.2f,%.2f,"
 1404      2C252E32 
 1404      662C2020 
 1404      20202020 
 1404      20202020 
 1405 0326 252E3266 		.ascii	"%.2f,                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,"
 1405      2C202020 
 1405      20202020 
 1405      20202020 
 1405      20202020 
 1406 0359 20202020 		.ascii	"                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,     "
 1406      20202020 
 1406      20202020 
 1406      20202020 
 1406      252E3266 
 1407 038c 20202020 		.ascii	"           %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,          "
 1407      20202020 
 1407      20202025 
 1407      2E32662C 
 1407      252E3266 
 1408 03bf 20202020 		.ascii	"      %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,               "
 1408      2020252E 
 1408      32662C25 
 1408      2E32662C 
 1408      252E3266 
 1409 03f2 20252E32 		.ascii	" %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,                %.2f"
 1409      662C252E 
 1409      32662C25 
 1409      2E32662C 
 1409      252E3266 
 1410 0425 2C252E32 		.ascii	",%.2f,%.2f,%.2f,                %.2f,%.2f,%.2f,%.2f"
 1410      662C252E 
 1410      32662C25 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 38


 1410      2E32662C 
 1410      20202020 
 1411 0458 2C252E32 		.ascii	",%.2f\000"
 1411      6600
 1412 045e 0000     		.align	2
 1413              	.LC42:
 1414 0460 736F6E74 		.ascii	"sontek=%s\000"
 1414      656B3D25 
 1414      7300
 1415 046a 0000     		.align	2
 1416              	.LC43:
 1417 046c 20736F6E 		.ascii	" sontek, \000"
 1417      74656B2C 
 1417      2000
 1418 0476 0000     		.align	2
 1419              	.LC44:
 1420 0478 0A00     		.ascii	"\012\000"
 1421 047a 0000     		.align	2
 1422              	.LC45:
 1423 047c 252E3266 		.ascii	"%.2f\000"
 1423      00
 1424 0481 000000   		.align	2
 1425              	.LC46:
 1426 0484 736F6E74 		.ascii	"sontek_stage\000"
 1426      656B5F73 
 1426      74616765 
 1426      00
 1427 0491 000000   		.align	2
 1428              	.LC47:
 1429 0494 736F6E74 		.ascii	"sontek_Q\000"
 1429      656B5F51 
 1429      00
 1430 049d 000000   		.align	2
 1431              	.LC48:
 1432 04a0 736F6E74 		.ascii	"sontek_avg_SNR\000"
 1432      656B5F61 
 1432      76675F53 
 1432      4E5200
 1433 04af 00       		.align	2
 1434              	.LC49:
 1435 04b0 736F6E74 		.ascii	"sontek_amp1\000"
 1435      656B5F61 
 1435      6D703100 
 1436              		.align	2
 1437              	.LC50:
 1438 04bc 736F6E74 		.ascii	"sontek_amp2\000"
 1438      656B5F61 
 1438      6D703200 
 1439              		.align	2
 1440              	.LC51:
 1441 04c8 736F6E74 		.ascii	"sontek_amp3\000"
 1441      656B5F61 
 1441      6D703300 
 1442              		.align	2
 1443              	.LC52:
 1444 04d4 736F6E74 		.ascii	"sontek_snr1\000"
 1444      656B5F73 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 39


 1444      6E723100 
 1445              		.align	2
 1446              	.LC53:
 1447 04e0 736F6E74 		.ascii	"sontek_snr2\000"
 1447      656B5F73 
 1447      6E723200 
 1448              		.align	2
 1449              	.LC54:
 1450 04ec 736F6E74 		.ascii	"sontek_snr3\000"
 1450      656B5F73 
 1450      6E723300 
 1451              		.align	2
 1452              	.LC55:
 1453 04f8 736F6E74 		.ascii	"sontek_amp4\000"
 1453      656B5F61 
 1453      6D703400 
 1454              		.align	2
 1455              	.LC56:
 1456 0504 736F6E74 		.ascii	"sontek_amp5\000"
 1456      656B5F61 
 1456      6D703500 
 1457              		.align	2
 1458              	.LC57:
 1459 0510 736F6E74 		.ascii	"sontek_amp6\000"
 1459      656B5F61 
 1459      6D703600 
 1460              		.align	2
 1461              	.LC58:
 1462 051c 736F6E74 		.ascii	"sontek_snr4\000"
 1462      656B5F73 
 1462      6E723400 
 1463              		.align	2
 1464              	.LC59:
 1465 0528 736F6E74 		.ascii	"sontek_snr5\000"
 1465      656B5F73 
 1465      6E723500 
 1466              		.align	2
 1467              	.LC60:
 1468 0534 736F6E74 		.ascii	"sontek_snr6\000"
 1468      656B5F73 
 1468      6E723600 
 1469              		.align	2
 1470              	.LC61:
 1471 0540 736F6E74 		.ascii	"sontek_amp7\000"
 1471      656B5F61 
 1471      6D703700 
 1472              		.align	2
 1473              	.LC62:
 1474 054c 736F6E74 		.ascii	"sontek_amp8\000"
 1474      656B5F61 
 1474      6D703800 
 1475              		.align	2
 1476              	.LC63:
 1477 0558 736F6E74 		.ascii	"sontek_amp9\000"
 1477      656B5F61 
 1477      6D703900 
 1478              		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 40


 1479              	.LC64:
 1480 0564 736F6E74 		.ascii	"sontek_snr7\000"
 1480      656B5F73 
 1480      6E723700 
 1481              		.align	2
 1482              	.LC65:
 1483 0570 736F6E74 		.ascii	"sontek_snr8\000"
 1483      656B5F73 
 1483      6E723800 
 1484              		.align	2
 1485              	.LC66:
 1486 057c 736F6E74 		.ascii	"sontek_snr9\000"
 1486      656B5F73 
 1486      6E723900 
 1487              		.align	2
 1488              	.LC67:
 1489 0588 736F6E74 		.ascii	"sontek_amp10\000"
 1489      656B5F61 
 1489      6D703130 
 1489      00
 1490 0595 000000   		.align	2
 1491              	.LC68:
 1492 0598 736F6E74 		.ascii	"sontek_snr10\000"
 1492      656B5F73 
 1492      6E723130 
 1492      00
 1493 05a5 000000   		.align	2
 1494              	.LC69:
 1495 05a8 256300   		.ascii	"%c\000"
 1496 05ab 00       		.align	2
 1497              	.LC70:
 1498 05ac 436F756C 		.ascii	"Could not get valid readings from Sontek. Error: %c"
 1498      64206E6F 
 1498      74206765 
 1498      74207661 
 1498      6C696420 
 1499 05df 2E00     		.ascii	".\000"
 1500 05e1 000000   		.align	2
 1501              	.LC71:
 1502 05e4 736F6E74 		.ascii	"sontek_flag\000"
 1502      656B5F66 
 1502      6C616700 
 1503              		.align	2
 1504              	.LC72:
 1505 05f0 20736F6E 		.ascii	" sontek error: \000"
 1505      74656B20 
 1505      6572726F 
 1505      723A2000 
 1506              		.align	2
 1507              	.LC73:
 1508 0600 765F6261 		.ascii	"v_bat=%s\000"
 1508      743D2573 
 1508      00
 1509 0609 000000   		.align	2
 1510              	.LC74:
 1511 060c 765F6261 		.ascii	"v_bat\000"
 1511      7400
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 41


 1512 0612 0000     		.align	2
 1513              	.LC75:
 1514 0614 20766261 		.ascii	" vbat: \000"
 1514      743A2000 
 1515              		.align	2
 1516              	.LC76:
 1517 061c 70726573 		.ascii	"pressure_current=%s\000"
 1517      73757265 
 1517      5F637572 
 1517      72656E74 
 1517      3D257300 
 1518              		.align	2
 1519              	.LC77:
 1520 0630 70726573 		.ascii	"pressure_current\000"
 1520      73757265 
 1520      5F637572 
 1520      72656E74 
 1520      00
 1521 0641 000000   		.align	2
 1522              	.LC78:
 1523 0644 20707265 		.ascii	" pressure_current: \000"
 1523      73737572 
 1523      655F6375 
 1523      7272656E 
 1523      743A2000 
 1524              		.align	2
 1525              	.LC79:
 1526 0658 70726573 		.ascii	"pressure_depth=%s\000"
 1526      73757265 
 1526      5F646570 
 1526      74683D25 
 1526      7300
 1527 066a 0000     		.align	2
 1528              	.LC80:
 1529 066c 70726573 		.ascii	"pressure_depth\000"
 1529      73757265 
 1529      5F646570 
 1529      746800
 1530 067b 00       		.align	2
 1531              	.LC81:
 1532 067c 20707265 		.ascii	" pressure_depth: \000"
 1532      73737572 
 1532      655F6465 
 1532      7074683A 
 1532      2000
 1533 068e 0000     		.align	2
 1534              	.LC82:
 1535 0690 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1535      64206E6F 
 1535      74206765 
 1535      74207661 
 1535      6C696420 
 1536              		.section	.text.makeMeasurements,"ax",%progbits
 1537              		.align	2
 1538              		.global	makeMeasurements
 1539              		.thumb
 1540              		.thumb_func
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 42


 1541              		.type	makeMeasurements, %function
 1542              	makeMeasurements:
 1543              	.LFB76:
 569:notoriOS.c    **** 
 570:notoriOS.c    **** 
 571:notoriOS.c    **** // ==============================================
 572:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 573:notoriOS.c    **** // Returns 0 when finished
 574:notoriOS.c    **** // ==============================================
 575:notoriOS.c    **** uint8 makeMeasurements(){
 1544              		.loc 1 575 0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 1040
 1547              		@ frame_needed = 1, uses_anonymous_args = 0
 1548 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 1549              		.cfi_def_cfa_offset 32
 1550              		.cfi_offset 4, -32
 1551              		.cfi_offset 5, -28
 1552              		.cfi_offset 7, -24
 1553              		.cfi_offset 8, -20
 1554              		.cfi_offset 9, -16
 1555              		.cfi_offset 10, -12
 1556              		.cfi_offset 11, -8
 1557              		.cfi_offset 14, -4
 1558 0004 ADF5B86D 		sub	sp, sp, #1472
 1559              		.cfi_def_cfa_offset 1504
 1560 0008 6CAF     		add	r7, sp, #432
 1561              		.cfi_def_cfa 7, 1072
 576:notoriOS.c    ****     
 577:notoriOS.c    ****     // Get clock time and save to timeStamp
 578:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1562              		.loc 1 578 0
 1563 000a FFF7FEFF 		bl	getTimeStamp
 1564 000e C7F80C04 		str	r0, [r7, #1036]
 579:notoriOS.c    ****     char c_timeStamp[32];
 580:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1565              		.loc 1 580 0
 1566 0012 07F57B70 		add	r0, r7, #1004
 1567 0016 D7F80C34 		ldr	r3, [r7, #1036]
 1568 001a 254A     		ldr	r2, .L66
 1569 001c 2021     		movs	r1, #32
 1570 001e FFF7FEFF 		bl	snprintf
 581:notoriOS.c    ****     
 582:notoriOS.c    ****     // Holds string for value that will be written 
 583:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 584:notoriOS.c    ****     char big_value[DATA_MAX_KEY_LENGTH*15];
 585:notoriOS.c    ****     
 586:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 587:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 1571              		.loc 1 587 0
 1572 0022 244B     		ldr	r3, .L66+4
 1573 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1574 0026 002B     		cmp	r3, #0
 1575 0028 56D1     		bne	.L56
 1576              	.LBB9:
 588:notoriOS.c    ****         
 589:notoriOS.c    ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 43


 590:notoriOS.c    ****         level_sensor_t m_level_sensor;
 591:notoriOS.c    ****         
 592:notoriOS.c    ****         // Take level sensor readings and save them to m_level_sensor
 593:notoriOS.c    ****         m_level_sensor = level_sensor_take_reading();
 1577              		.loc 1 593 0
 1578 002a 07F51F73 		add	r3, r7, #636
 1579 002e 1846     		mov	r0, r3
 1580 0030 FFF7FEFF 		bl	level_sensor_take_reading
 594:notoriOS.c    ****     
 595:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 596:notoriOS.c    ****         if(m_level_sensor.num_valid_readings > 0){
 1581              		.loc 1 596 0
 1582 0034 07F51F73 		add	r3, r7, #636
 1583 0038 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1584 003a 002B     		cmp	r3, #0
 1585 003c 32D0     		beq	.L57
 597:notoriOS.c    ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 1586              		.loc 1 597 0
 1587 003e 07F51F73 		add	r3, r7, #636
 1588 0042 B3F91630 		ldrsh	r3, [r3, #22]
 1589 0046 07F57670 		add	r0, r7, #984
 1590 004a 1B4A     		ldr	r2, .L66+8
 1591 004c 1421     		movs	r1, #20
 1592 004e FFF7FEFF 		bl	snprintf
 598:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 1593              		.loc 1 598 0
 1594 0052 07F57673 		add	r3, r7, #984
 1595 0056 1A46     		mov	r2, r3
 1596 0058 1849     		ldr	r1, .L66+12
 1597 005a 0020     		movs	r0, #0
 1598 005c FFF7FEFF 		bl	printNotif
 599:notoriOS.c    ****             pushData("maxbotix_depth",value,timeStamp);
 1599              		.loc 1 599 0
 1600 0060 07F57673 		add	r3, r7, #984
 1601 0064 D7F80C24 		ldr	r2, [r7, #1036]
 1602 0068 1946     		mov	r1, r3
 1603 006a 1548     		ldr	r0, .L66+16
 1604 006c FFF7FEFF 		bl	pushData
 600:notoriOS.c    ****             
 601:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 602:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1605              		.loc 1 602 0
 1606 0070 07F57B73 		add	r3, r7, #1004
 1607 0074 1A46     		mov	r2, r3
 1608 0076 1349     		ldr	r1, .L66+20
 1609 0078 1348     		ldr	r0, .L66+24
 1610 007a FFF7FEFF 		bl	SD_write
 603:notoriOS.c    ****             SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 1611              		.loc 1 603 0
 1612 007e 134A     		ldr	r2, .L66+28
 1613 0080 1049     		ldr	r1, .L66+20
 1614 0082 1148     		ldr	r0, .L66+24
 1615 0084 FFF7FEFF 		bl	SD_write
 604:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1616              		.loc 1 604 0
 1617 0088 07F57673 		add	r3, r7, #984
 1618 008c 1A46     		mov	r2, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 44


 1619 008e 0D49     		ldr	r1, .L66+20
 1620 0090 0D48     		ldr	r0, .L66+24
 1621 0092 FFF7FEFF 		bl	SD_write
 605:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1622              		.loc 1 605 0
 1623 0096 0E4A     		ldr	r2, .L66+32
 1624 0098 0A49     		ldr	r1, .L66+20
 1625 009a 0B48     		ldr	r0, .L66+24
 1626 009c FFF7FEFF 		bl	SD_write
 1627 00a0 00F0DEBD 		b	.L59
 1628              	.L57:
 606:notoriOS.c    ****         }else{
 607:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 1629              		.loc 1 607 0
 1630 00a4 0B49     		ldr	r1, .L66+36
 1631 00a6 0220     		movs	r0, #2
 1632 00a8 FFF7FEFF 		bl	printNotif
 1633 00ac 00F0D8BD 		b	.L59
 1634              	.L67:
 1635              		.align	2
 1636              	.L66:
 1637 00b0 50020000 		.word	.LC34
 1638 00b4 00000000 		.word	updatable_parameters
 1639 00b8 3C000000 		.word	.LC2
 1640 00bc 54020000 		.word	.LC35
 1641 00c0 68020000 		.word	.LC36
 1642 00c4 78020000 		.word	.LC37
 1643 00c8 00000000 		.word	Data_fileName
 1644 00cc 7C020000 		.word	.LC38
 1645 00d0 90020000 		.word	.LC39
 1646 00d4 94020000 		.word	.LC40
 1647              	.L56:
 1648              	.LBE9:
 608:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 609:notoriOS.c    ****         }
 610:notoriOS.c    ****     // If node type is sontek flow node, take sontek sensor measurements
 611:notoriOS.c    ****     }else if(updatable_parameters.node_type == NODE_TYPE_SONTEK_FLOW){
 1649              		.loc 1 611 0
 1650 00d8 084B     		ldr	r3, .L68
 1651 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1652 00dc 022B     		cmp	r3, #2
 1653 00de 40F0BF85 		bne	.L59
 1654              	.LBB10:
 612:notoriOS.c    ****         
 613:notoriOS.c    ****         // sontek_t is a new data type we defined in sontek.h. We then use that data type to define
 614:notoriOS.c    ****         sontek_t m_sontek;
 615:notoriOS.c    ****         
 616:notoriOS.c    ****         // Take sontek readings and save them to m_sontek
 617:notoriOS.c    ****         m_sontek = sontek_take_reading();
 1655              		.loc 1 617 0
 1656 00e2 07F5C873 		add	r3, r7, #400
 1657 00e6 1846     		mov	r0, r3
 1658 00e8 FFF7FEFF 		bl	sontek_take_reading
 618:notoriOS.c    ****         
 619:notoriOS.c    ****         // If flag is valid (1), then print the sontek readings and push the data to the data wheel
 620:notoriOS.c    ****         if(m_sontek.flag == 1){
 1659              		.loc 1 620 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 45


 1660 00ec 07F5C873 		add	r3, r7, #400
 1661 00f0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1662 00f2 012B     		cmp	r3, #1
 1663 00f4 40F08485 		bne	.L60
 1664 00f8 02E0     		b	.L69
 1665              	.L70:
 1666 00fa 00BF     		.align	2
 1667              	.L68:
 1668 00fc 00000000 		.word	updatable_parameters
 1669              	.L69:
 621:notoriOS.c    ****             
 622:notoriOS.c    ****             //Print all measurements to serial and the SD card to file called data.txt
 623:notoriOS.c    **** 
 624:notoriOS.c    ****             snprintf(big_value,sizeof(big_value),"%.2f,%.2f,%.2f,%.2f,\
 625:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 626:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 627:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 628:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 629:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 630:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 631:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 632:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,\
 633:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f",\
 634:notoriOS.c    ****                 m_sontek.data0[0],m_sontek.data0[1],m_sontek.data0[2],m_sontek.data0[3],\
 1670              		.loc 1 634 0
 1671 0100 07F5C873 		add	r3, r7, #400
 1672 0104 DB68     		ldr	r3, [r3, #12]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1673              		.loc 1 624 0
 1674 0106 1846     		mov	r0, r3
 1675 0108 FFF7FEFF 		bl	__aeabi_f2d
 1676 010c 07F5C473 		add	r3, r7, #392
 1677 0110 C3E90001 		strd	r0, [r3]
 1678              		.loc 1 634 0
 1679 0114 07F5C873 		add	r3, r7, #400
 1680 0118 1B69     		ldr	r3, [r3, #16]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1681              		.loc 1 624 0
 1682 011a 1846     		mov	r0, r3
 1683 011c FFF7FEFF 		bl	__aeabi_f2d
 1684 0120 07F5C073 		add	r3, r7, #384
 1685 0124 C3E90001 		strd	r0, [r3]
 1686              		.loc 1 634 0
 1687 0128 07F5C873 		add	r3, r7, #400
 1688 012c 5B69     		ldr	r3, [r3, #20]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1689              		.loc 1 624 0
 1690 012e 1846     		mov	r0, r3
 1691 0130 FFF7FEFF 		bl	__aeabi_f2d
 1692 0134 07F5BC73 		add	r3, r7, #376
 1693 0138 C3E90001 		strd	r0, [r3]
 1694              		.loc 1 634 0
 1695 013c 07F5C873 		add	r3, r7, #400
 1696 0140 9B69     		ldr	r3, [r3, #24]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1697              		.loc 1 624 0
 1698 0142 1846     		mov	r0, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 46


 1699 0144 FFF7FEFF 		bl	__aeabi_f2d
 1700 0148 07F5B873 		add	r3, r7, #368
 1701 014c C3E90001 		strd	r0, [r3]
 635:notoriOS.c    ****                 m_sontek.data1[0],m_sontek.data1[1],m_sontek.data1[2],m_sontek.data1[3],m_sontek.da
 1702              		.loc 1 635 0
 1703 0150 07F5C873 		add	r3, r7, #400
 1704 0154 DB69     		ldr	r3, [r3, #28]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1705              		.loc 1 624 0
 1706 0156 1846     		mov	r0, r3
 1707 0158 FFF7FEFF 		bl	__aeabi_f2d
 1708 015c 07F5B473 		add	r3, r7, #360
 1709 0160 C3E90001 		strd	r0, [r3]
 1710              		.loc 1 635 0
 1711 0164 07F5C873 		add	r3, r7, #400
 1712 0168 1B6A     		ldr	r3, [r3, #32]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1713              		.loc 1 624 0
 1714 016a 1846     		mov	r0, r3
 1715 016c FFF7FEFF 		bl	__aeabi_f2d
 1716 0170 07F5B073 		add	r3, r7, #352
 1717 0174 C3E90001 		strd	r0, [r3]
 1718              		.loc 1 635 0
 1719 0178 07F5C873 		add	r3, r7, #400
 1720 017c 5B6A     		ldr	r3, [r3, #36]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1721              		.loc 1 624 0
 1722 017e 1846     		mov	r0, r3
 1723 0180 FFF7FEFF 		bl	__aeabi_f2d
 1724 0184 07F5AC73 		add	r3, r7, #344
 1725 0188 C3E90001 		strd	r0, [r3]
 1726              		.loc 1 635 0
 1727 018c 07F5C873 		add	r3, r7, #400
 1728 0190 9B6A     		ldr	r3, [r3, #40]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1729              		.loc 1 624 0
 1730 0192 1846     		mov	r0, r3
 1731 0194 FFF7FEFF 		bl	__aeabi_f2d
 1732 0198 07F5A873 		add	r3, r7, #336
 1733 019c C3E90001 		strd	r0, [r3]
 1734              		.loc 1 635 0
 1735 01a0 07F5C873 		add	r3, r7, #400
 1736 01a4 DB6A     		ldr	r3, [r3, #44]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1737              		.loc 1 624 0
 1738 01a6 1846     		mov	r0, r3
 1739 01a8 FFF7FEFF 		bl	__aeabi_f2d
 1740 01ac 07F5A473 		add	r3, r7, #328
 1741 01b0 C3E90001 		strd	r0, [r3]
 636:notoriOS.c    ****                 m_sontek.data2[0],m_sontek.data2[1],m_sontek.data2[2],m_sontek.data2[3],m_sontek.da
 1742              		.loc 1 636 0
 1743 01b4 07F5C873 		add	r3, r7, #400
 1744 01b8 1B6B     		ldr	r3, [r3, #48]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1745              		.loc 1 624 0
 1746 01ba 1846     		mov	r0, r3
 1747 01bc FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 47


 1748 01c0 07F5A073 		add	r3, r7, #320
 1749 01c4 C3E90001 		strd	r0, [r3]
 1750              		.loc 1 636 0
 1751 01c8 07F5C873 		add	r3, r7, #400
 1752 01cc 5B6B     		ldr	r3, [r3, #52]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1753              		.loc 1 624 0
 1754 01ce 1846     		mov	r0, r3
 1755 01d0 FFF7FEFF 		bl	__aeabi_f2d
 1756 01d4 07F59C73 		add	r3, r7, #312
 1757 01d8 C3E90001 		strd	r0, [r3]
 1758              		.loc 1 636 0
 1759 01dc 07F5C873 		add	r3, r7, #400
 1760 01e0 9B6B     		ldr	r3, [r3, #56]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1761              		.loc 1 624 0
 1762 01e2 1846     		mov	r0, r3
 1763 01e4 FFF7FEFF 		bl	__aeabi_f2d
 1764 01e8 07F59873 		add	r3, r7, #304
 1765 01ec C3E90001 		strd	r0, [r3]
 1766              		.loc 1 636 0
 1767 01f0 07F5C873 		add	r3, r7, #400
 1768 01f4 DB6B     		ldr	r3, [r3, #60]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1769              		.loc 1 624 0
 1770 01f6 1846     		mov	r0, r3
 1771 01f8 FFF7FEFF 		bl	__aeabi_f2d
 1772 01fc 07F59473 		add	r3, r7, #296
 1773 0200 C3E90001 		strd	r0, [r3]
 1774              		.loc 1 636 0
 1775 0204 07F5C873 		add	r3, r7, #400
 1776 0208 1B6C     		ldr	r3, [r3, #64]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1777              		.loc 1 624 0
 1778 020a 1846     		mov	r0, r3
 1779 020c FFF7FEFF 		bl	__aeabi_f2d
 1780 0210 07F59073 		add	r3, r7, #288
 1781 0214 C3E90001 		strd	r0, [r3]
 1782              		.loc 1 636 0
 1783 0218 07F5C873 		add	r3, r7, #400
 1784 021c 5B6C     		ldr	r3, [r3, #68]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1785              		.loc 1 624 0
 1786 021e 1846     		mov	r0, r3
 1787 0220 FFF7FEFF 		bl	__aeabi_f2d
 1788 0224 07F58C73 		add	r3, r7, #280
 1789 0228 C3E90001 		strd	r0, [r3]
 637:notoriOS.c    ****                 m_sontek.data3[0],m_sontek.data3[1],m_sontek.data3[2],m_sontek.data3[3],m_sontek.da
 1790              		.loc 1 637 0
 1791 022c 07F5C873 		add	r3, r7, #400
 1792 0230 9B6C     		ldr	r3, [r3, #72]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1793              		.loc 1 624 0
 1794 0232 1846     		mov	r0, r3
 1795 0234 FFF7FEFF 		bl	__aeabi_f2d
 1796 0238 07F58873 		add	r3, r7, #272
 1797 023c C3E90001 		strd	r0, [r3]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 48


 1798              		.loc 1 637 0
 1799 0240 07F5C873 		add	r3, r7, #400
 1800 0244 DB6C     		ldr	r3, [r3, #76]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1801              		.loc 1 624 0
 1802 0246 1846     		mov	r0, r3
 1803 0248 FFF7FEFF 		bl	__aeabi_f2d
 1804 024c 07F58473 		add	r3, r7, #264
 1805 0250 C3E90001 		strd	r0, [r3]
 1806              		.loc 1 637 0
 1807 0254 07F5C873 		add	r3, r7, #400
 1808 0258 1B6D     		ldr	r3, [r3, #80]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1809              		.loc 1 624 0
 1810 025a 1846     		mov	r0, r3
 1811 025c FFF7FEFF 		bl	__aeabi_f2d
 1812 0260 07F58073 		add	r3, r7, #256
 1813 0264 C3E90001 		strd	r0, [r3]
 1814              		.loc 1 637 0
 1815 0268 07F5C873 		add	r3, r7, #400
 1816 026c 5B6D     		ldr	r3, [r3, #84]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1817              		.loc 1 624 0
 1818 026e 1846     		mov	r0, r3
 1819 0270 FFF7FEFF 		bl	__aeabi_f2d
 1820 0274 C7E93E01 		strd	r0, [r7, #248]
 1821              		.loc 1 637 0
 1822 0278 07F5C873 		add	r3, r7, #400
 1823 027c 9B6D     		ldr	r3, [r3, #88]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1824              		.loc 1 624 0
 1825 027e 1846     		mov	r0, r3
 1826 0280 FFF7FEFF 		bl	__aeabi_f2d
 1827 0284 C7E93C01 		strd	r0, [r7, #240]
 1828              		.loc 1 637 0
 1829 0288 07F5C873 		add	r3, r7, #400
 1830 028c DB6D     		ldr	r3, [r3, #92]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1831              		.loc 1 624 0
 1832 028e 1846     		mov	r0, r3
 1833 0290 FFF7FEFF 		bl	__aeabi_f2d
 1834 0294 C7E93A01 		strd	r0, [r7, #232]
 638:notoriOS.c    ****                 m_sontek.data4[0],m_sontek.data4[1],m_sontek.data4[2],m_sontek.data4[3],m_sontek.da
 1835              		.loc 1 638 0
 1836 0298 07F5C873 		add	r3, r7, #400
 1837 029c 1B6E     		ldr	r3, [r3, #96]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1838              		.loc 1 624 0
 1839 029e 1846     		mov	r0, r3
 1840 02a0 FFF7FEFF 		bl	__aeabi_f2d
 1841 02a4 C7E93801 		strd	r0, [r7, #224]
 1842              		.loc 1 638 0
 1843 02a8 07F5C873 		add	r3, r7, #400
 1844 02ac 5B6E     		ldr	r3, [r3, #100]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1845              		.loc 1 624 0
 1846 02ae 1846     		mov	r0, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 49


 1847 02b0 FFF7FEFF 		bl	__aeabi_f2d
 1848 02b4 C7E93601 		strd	r0, [r7, #216]
 1849              		.loc 1 638 0
 1850 02b8 07F5C873 		add	r3, r7, #400
 1851 02bc 9B6E     		ldr	r3, [r3, #104]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1852              		.loc 1 624 0
 1853 02be 1846     		mov	r0, r3
 1854 02c0 FFF7FEFF 		bl	__aeabi_f2d
 1855 02c4 C7E93401 		strd	r0, [r7, #208]
 1856              		.loc 1 638 0
 1857 02c8 07F5C873 		add	r3, r7, #400
 1858 02cc DB6E     		ldr	r3, [r3, #108]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1859              		.loc 1 624 0
 1860 02ce 1846     		mov	r0, r3
 1861 02d0 FFF7FEFF 		bl	__aeabi_f2d
 1862 02d4 C7E93201 		strd	r0, [r7, #200]
 1863              		.loc 1 638 0
 1864 02d8 07F5C873 		add	r3, r7, #400
 1865 02dc 1B6F     		ldr	r3, [r3, #112]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1866              		.loc 1 624 0
 1867 02de 1846     		mov	r0, r3
 1868 02e0 FFF7FEFF 		bl	__aeabi_f2d
 1869 02e4 C7E93001 		strd	r0, [r7, #192]
 1870              		.loc 1 638 0
 1871 02e8 07F5C873 		add	r3, r7, #400
 1872 02ec 5B6F     		ldr	r3, [r3, #116]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1873              		.loc 1 624 0
 1874 02ee 1846     		mov	r0, r3
 1875 02f0 FFF7FEFF 		bl	__aeabi_f2d
 1876 02f4 C7E92E01 		strd	r0, [r7, #184]
 639:notoriOS.c    ****                 m_sontek.data5[0],m_sontek.data5[1],m_sontek.data5[2],m_sontek.data5[3],m_sontek.da
 1877              		.loc 1 639 0
 1878 02f8 07F5C873 		add	r3, r7, #400
 1879 02fc 9B6F     		ldr	r3, [r3, #120]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1880              		.loc 1 624 0
 1881 02fe 1846     		mov	r0, r3
 1882 0300 FFF7FEFF 		bl	__aeabi_f2d
 1883 0304 C7E92C01 		strd	r0, [r7, #176]
 1884              		.loc 1 639 0
 1885 0308 07F5C873 		add	r3, r7, #400
 1886 030c DB6F     		ldr	r3, [r3, #124]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1887              		.loc 1 624 0
 1888 030e 1846     		mov	r0, r3
 1889 0310 FFF7FEFF 		bl	__aeabi_f2d
 1890 0314 C7E92A01 		strd	r0, [r7, #168]
 1891              		.loc 1 639 0
 1892 0318 07F5C873 		add	r3, r7, #400
 1893 031c D3F88030 		ldr	r3, [r3, #128]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1894              		.loc 1 624 0
 1895 0320 1846     		mov	r0, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 50


 1896 0322 FFF7FEFF 		bl	__aeabi_f2d
 1897 0326 C7E92801 		strd	r0, [r7, #160]
 1898              		.loc 1 639 0
 1899 032a 07F5C873 		add	r3, r7, #400
 1900 032e D3F88430 		ldr	r3, [r3, #132]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1901              		.loc 1 624 0
 1902 0332 1846     		mov	r0, r3
 1903 0334 FFF7FEFF 		bl	__aeabi_f2d
 1904 0338 C7E92601 		strd	r0, [r7, #152]
 1905              		.loc 1 639 0
 1906 033c 07F5C873 		add	r3, r7, #400
 1907 0340 D3F88830 		ldr	r3, [r3, #136]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1908              		.loc 1 624 0
 1909 0344 1846     		mov	r0, r3
 1910 0346 FFF7FEFF 		bl	__aeabi_f2d
 1911 034a C7E92401 		strd	r0, [r7, #144]
 1912              		.loc 1 639 0
 1913 034e 07F5C873 		add	r3, r7, #400
 1914 0352 D3F88C30 		ldr	r3, [r3, #140]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1915              		.loc 1 624 0
 1916 0356 1846     		mov	r0, r3
 1917 0358 FFF7FEFF 		bl	__aeabi_f2d
 1918 035c C7E92201 		strd	r0, [r7, #136]
 640:notoriOS.c    ****                 m_sontek.data6[0],m_sontek.data6[1],m_sontek.data6[2],m_sontek.data6[3],m_sontek.da
 1919              		.loc 1 640 0
 1920 0360 07F5C873 		add	r3, r7, #400
 1921 0364 D3F89030 		ldr	r3, [r3, #144]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1922              		.loc 1 624 0
 1923 0368 1846     		mov	r0, r3
 1924 036a FFF7FEFF 		bl	__aeabi_f2d
 1925 036e C7E92001 		strd	r0, [r7, #128]
 1926              		.loc 1 640 0
 1927 0372 07F5C873 		add	r3, r7, #400
 1928 0376 D3F89430 		ldr	r3, [r3, #148]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1929              		.loc 1 624 0
 1930 037a 1846     		mov	r0, r3
 1931 037c FFF7FEFF 		bl	__aeabi_f2d
 1932 0380 C7E91E01 		strd	r0, [r7, #120]
 1933              		.loc 1 640 0
 1934 0384 07F5C873 		add	r3, r7, #400
 1935 0388 D3F89830 		ldr	r3, [r3, #152]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1936              		.loc 1 624 0
 1937 038c 1846     		mov	r0, r3
 1938 038e FFF7FEFF 		bl	__aeabi_f2d
 1939 0392 C7E91C01 		strd	r0, [r7, #112]
 1940              		.loc 1 640 0
 1941 0396 07F5C873 		add	r3, r7, #400
 1942 039a D3F89C30 		ldr	r3, [r3, #156]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1943              		.loc 1 624 0
 1944 039e 1846     		mov	r0, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 51


 1945 03a0 FFF7FEFF 		bl	__aeabi_f2d
 1946 03a4 C7E91A01 		strd	r0, [r7, #104]
 1947              		.loc 1 640 0
 1948 03a8 07F5C873 		add	r3, r7, #400
 1949 03ac D3F8A030 		ldr	r3, [r3, #160]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1950              		.loc 1 624 0
 1951 03b0 1846     		mov	r0, r3
 1952 03b2 FFF7FEFF 		bl	__aeabi_f2d
 1953 03b6 C7E91801 		strd	r0, [r7, #96]
 1954              		.loc 1 640 0
 1955 03ba 07F5C873 		add	r3, r7, #400
 1956 03be D3F8A430 		ldr	r3, [r3, #164]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1957              		.loc 1 624 0
 1958 03c2 1846     		mov	r0, r3
 1959 03c4 FFF7FEFF 		bl	__aeabi_f2d
 1960 03c8 C7E91601 		strd	r0, [r7, #88]
 641:notoriOS.c    ****                 m_sontek.data7[0],m_sontek.data7[1],m_sontek.data7[2],m_sontek.data7[3],m_sontek.da
 1961              		.loc 1 641 0
 1962 03cc 07F5C873 		add	r3, r7, #400
 1963 03d0 D3F8A830 		ldr	r3, [r3, #168]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1964              		.loc 1 624 0
 1965 03d4 1846     		mov	r0, r3
 1966 03d6 FFF7FEFF 		bl	__aeabi_f2d
 1967 03da C7E91401 		strd	r0, [r7, #80]
 1968              		.loc 1 641 0
 1969 03de 07F5C873 		add	r3, r7, #400
 1970 03e2 D3F8AC30 		ldr	r3, [r3, #172]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1971              		.loc 1 624 0
 1972 03e6 1846     		mov	r0, r3
 1973 03e8 FFF7FEFF 		bl	__aeabi_f2d
 1974 03ec C7E91201 		strd	r0, [r7, #72]
 1975              		.loc 1 641 0
 1976 03f0 07F5C873 		add	r3, r7, #400
 1977 03f4 D3F8B030 		ldr	r3, [r3, #176]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1978              		.loc 1 624 0
 1979 03f8 1846     		mov	r0, r3
 1980 03fa FFF7FEFF 		bl	__aeabi_f2d
 1981 03fe C7E91001 		strd	r0, [r7, #64]
 1982              		.loc 1 641 0
 1983 0402 07F5C873 		add	r3, r7, #400
 1984 0406 D3F8B430 		ldr	r3, [r3, #180]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1985              		.loc 1 624 0
 1986 040a 1846     		mov	r0, r3
 1987 040c FFF7FEFF 		bl	__aeabi_f2d
 1988 0410 C7E90E01 		strd	r0, [r7, #56]
 1989              		.loc 1 641 0
 1990 0414 07F5C873 		add	r3, r7, #400
 1991 0418 D3F8B830 		ldr	r3, [r3, #184]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1992              		.loc 1 624 0
 1993 041c 1846     		mov	r0, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 52


 1994 041e FFF7FEFF 		bl	__aeabi_f2d
 1995 0422 C7E90C01 		strd	r0, [r7, #48]
 1996              		.loc 1 641 0
 1997 0426 07F5C873 		add	r3, r7, #400
 1998 042a D3F8BC30 		ldr	r3, [r3, #188]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1999              		.loc 1 624 0
 2000 042e 1846     		mov	r0, r3
 2001 0430 FFF7FEFF 		bl	__aeabi_f2d
 2002 0434 C7E90A01 		strd	r0, [r7, #40]
 642:notoriOS.c    ****                 m_sontek.data8[0],m_sontek.data8[1],m_sontek.data8[2],m_sontek.data8[3],\
 2003              		.loc 1 642 0
 2004 0438 07F5C873 		add	r3, r7, #400
 2005 043c D3F8C030 		ldr	r3, [r3, #192]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2006              		.loc 1 624 0
 2007 0440 1846     		mov	r0, r3
 2008 0442 FFF7FEFF 		bl	__aeabi_f2d
 2009 0446 C7E90801 		strd	r0, [r7, #32]
 2010              		.loc 1 642 0
 2011 044a 07F5C873 		add	r3, r7, #400
 2012 044e D3F8C430 		ldr	r3, [r3, #196]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2013              		.loc 1 624 0
 2014 0452 1846     		mov	r0, r3
 2015 0454 FFF7FEFF 		bl	__aeabi_f2d
 2016 0458 C7E90601 		strd	r0, [r7, #24]
 2017              		.loc 1 642 0
 2018 045c 07F5C873 		add	r3, r7, #400
 2019 0460 D3F8C830 		ldr	r3, [r3, #200]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2020              		.loc 1 624 0
 2021 0464 1846     		mov	r0, r3
 2022 0466 FFF7FEFF 		bl	__aeabi_f2d
 2023 046a C7E90401 		strd	r0, [r7, #16]
 2024              		.loc 1 642 0
 2025 046e 07F5C873 		add	r3, r7, #400
 2026 0472 D3F8CC30 		ldr	r3, [r3, #204]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2027              		.loc 1 624 0
 2028 0476 1846     		mov	r0, r3
 2029 0478 FFF7FEFF 		bl	__aeabi_f2d
 2030 047c C7E90201 		strd	r0, [r7, #8]
 643:notoriOS.c    ****                 m_sontek.data9[0],m_sontek.data9[1],m_sontek.data9[2],m_sontek.data9[3],m_sontek.da
 2031              		.loc 1 643 0
 2032 0480 07F5C873 		add	r3, r7, #400
 2033 0484 D3F8D030 		ldr	r3, [r3, #208]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2034              		.loc 1 624 0
 2035 0488 1846     		mov	r0, r3
 2036 048a FFF7FEFF 		bl	__aeabi_f2d
 2037 048e C7E90001 		strd	r0, [r7]
 2038              		.loc 1 643 0
 2039 0492 07F5C873 		add	r3, r7, #400
 2040 0496 D3F8D430 		ldr	r3, [r3, #212]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2041              		.loc 1 624 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 53


 2042 049a 1846     		mov	r0, r3
 2043 049c FFF7FEFF 		bl	__aeabi_f2d
 2044 04a0 8246     		mov	r10, r0
 2045 04a2 8B46     		mov	fp, r1
 2046              		.loc 1 643 0
 2047 04a4 07F5C873 		add	r3, r7, #400
 2048 04a8 D3F8D830 		ldr	r3, [r3, #216]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2049              		.loc 1 624 0
 2050 04ac 1846     		mov	r0, r3
 2051 04ae FFF7FEFF 		bl	__aeabi_f2d
 2052 04b2 8046     		mov	r8, r0
 2053 04b4 8946     		mov	r9, r1
 2054              		.loc 1 643 0
 2055 04b6 07F5C873 		add	r3, r7, #400
 2056 04ba D3F8DC30 		ldr	r3, [r3, #220]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2057              		.loc 1 624 0
 2058 04be 1846     		mov	r0, r3
 2059 04c0 FFF7FEFF 		bl	__aeabi_f2d
 2060 04c4 0446     		mov	r4, r0
 2061 04c6 0D46     		mov	r5, r1
 2062              		.loc 1 643 0
 2063 04c8 07F5C873 		add	r3, r7, #400
 2064 04cc D3F8E030 		ldr	r3, [r3, #224]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2065              		.loc 1 624 0
 2066 04d0 1846     		mov	r0, r3
 2067 04d2 FFF7FEFF 		bl	__aeabi_f2d
 2068 04d6 0A46     		mov	r2, r1
 2069 04d8 0146     		mov	r1, r0
 2070 04da 07F52B70 		add	r0, r7, #684
 2071 04de 6AAB     		add	r3, sp, #424
 2072 04e0 C3E90012 		strd	r1, [r3]
 2073 04e4 68AB     		add	r3, sp, #416
 2074 04e6 C3E90045 		strd	r4, [r3]
 2075 04ea 66AB     		add	r3, sp, #408
 2076 04ec C3E90089 		strd	r8, [r3]
 2077 04f0 64AB     		add	r3, sp, #400
 2078 04f2 C3E900AB 		strd	r10, [r3]
 2079 04f6 62AB     		add	r3, sp, #392
 2080 04f8 D7E90012 		ldrd	r1, [r7]
 2081 04fc C3E90012 		strd	r1, [r3]
 2082 0500 60AB     		add	r3, sp, #384
 2083 0502 D7E90212 		ldrd	r1, [r7, #8]
 2084 0506 C3E90012 		strd	r1, [r3]
 2085 050a 5EAB     		add	r3, sp, #376
 2086 050c D7E90412 		ldrd	r1, [r7, #16]
 2087 0510 C3E90012 		strd	r1, [r3]
 2088 0514 5CAB     		add	r3, sp, #368
 2089 0516 D7E90612 		ldrd	r1, [r7, #24]
 2090 051a C3E90012 		strd	r1, [r3]
 2091 051e 5AAB     		add	r3, sp, #360
 2092 0520 D7E90812 		ldrd	r1, [r7, #32]
 2093 0524 C3E90012 		strd	r1, [r3]
 2094 0528 58AB     		add	r3, sp, #352
 2095 052a D7E90A12 		ldrd	r1, [r7, #40]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 54


 2096 052e C3E90012 		strd	r1, [r3]
 2097 0532 56AB     		add	r3, sp, #344
 2098 0534 D7E90C12 		ldrd	r1, [r7, #48]
 2099 0538 C3E90012 		strd	r1, [r3]
 2100 053c 54AB     		add	r3, sp, #336
 2101 053e D7E90E12 		ldrd	r1, [r7, #56]
 2102 0542 C3E90012 		strd	r1, [r3]
 2103 0546 52AB     		add	r3, sp, #328
 2104 0548 D7E91012 		ldrd	r1, [r7, #64]
 2105 054c C3E90012 		strd	r1, [r3]
 2106 0550 50AB     		add	r3, sp, #320
 2107 0552 D7E91212 		ldrd	r1, [r7, #72]
 2108 0556 C3E90012 		strd	r1, [r3]
 2109 055a 4EAB     		add	r3, sp, #312
 2110 055c D7E91412 		ldrd	r1, [r7, #80]
 2111 0560 C3E90012 		strd	r1, [r3]
 2112 0564 4CAB     		add	r3, sp, #304
 2113 0566 D7E91612 		ldrd	r1, [r7, #88]
 2114 056a C3E90012 		strd	r1, [r3]
 2115 056e 4AAB     		add	r3, sp, #296
 2116 0570 D7E91812 		ldrd	r1, [r7, #96]
 2117 0574 C3E90012 		strd	r1, [r3]
 2118 0578 48AB     		add	r3, sp, #288
 2119 057a D7E91A12 		ldrd	r1, [r7, #104]
 2120 057e C3E90012 		strd	r1, [r3]
 2121 0582 46AB     		add	r3, sp, #280
 2122 0584 D7E91C12 		ldrd	r1, [r7, #112]
 2123 0588 C3E90012 		strd	r1, [r3]
 2124 058c 44AB     		add	r3, sp, #272
 2125 058e D7E91E12 		ldrd	r1, [r7, #120]
 2126 0592 C3E90012 		strd	r1, [r3]
 2127 0596 42AB     		add	r3, sp, #264
 2128 0598 D7E92012 		ldrd	r1, [r7, #128]
 2129 059c C3E90012 		strd	r1, [r3]
 2130 05a0 40AB     		add	r3, sp, #256
 2131 05a2 D7E92212 		ldrd	r1, [r7, #136]
 2132 05a6 C3E90012 		strd	r1, [r3]
 2133 05aa D7E92434 		ldrd	r3, [r7, #144]
 2134 05ae CDE93E34 		strd	r3, [sp, #248]
 2135 05b2 D7E92634 		ldrd	r3, [r7, #152]
 2136 05b6 CDE93C34 		strd	r3, [sp, #240]
 2137 05ba D7E92834 		ldrd	r3, [r7, #160]
 2138 05be CDE93A34 		strd	r3, [sp, #232]
 2139 05c2 D7E92A34 		ldrd	r3, [r7, #168]
 2140 05c6 CDE93834 		strd	r3, [sp, #224]
 2141 05ca D7E92C34 		ldrd	r3, [r7, #176]
 2142 05ce CDE93634 		strd	r3, [sp, #216]
 2143 05d2 D7E92E34 		ldrd	r3, [r7, #184]
 2144 05d6 CDE93434 		strd	r3, [sp, #208]
 2145 05da D7E93034 		ldrd	r3, [r7, #192]
 2146 05de CDE93234 		strd	r3, [sp, #200]
 2147 05e2 D7E93234 		ldrd	r3, [r7, #200]
 2148 05e6 CDE93034 		strd	r3, [sp, #192]
 2149 05ea D7E93434 		ldrd	r3, [r7, #208]
 2150 05ee CDE92E34 		strd	r3, [sp, #184]
 2151 05f2 D7E93634 		ldrd	r3, [r7, #216]
 2152 05f6 CDE92C34 		strd	r3, [sp, #176]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 55


 2153 05fa D7E93834 		ldrd	r3, [r7, #224]
 2154 05fe CDE92A34 		strd	r3, [sp, #168]
 2155 0602 D7E93A34 		ldrd	r3, [r7, #232]
 2156 0606 CDE92834 		strd	r3, [sp, #160]
 2157 060a D7E93C34 		ldrd	r3, [r7, #240]
 2158 060e CDE92634 		strd	r3, [sp, #152]
 2159 0612 D7E93E34 		ldrd	r3, [r7, #248]
 2160 0616 CDE92434 		strd	r3, [sp, #144]
 2161 061a 07F58073 		add	r3, r7, #256
 2162 061e 18CB     		ldmia	r3, {r3-r4}
 2163 0620 CDE92234 		strd	r3, [sp, #136]
 2164 0624 07F58473 		add	r3, r7, #264
 2165 0628 18CB     		ldmia	r3, {r3-r4}
 2166 062a CDE92034 		strd	r3, [sp, #128]
 2167 062e 07F58873 		add	r3, r7, #272
 2168 0632 18CB     		ldmia	r3, {r3-r4}
 2169 0634 CDE91E34 		strd	r3, [sp, #120]
 2170 0638 07F58C73 		add	r3, r7, #280
 2171 063c 18CB     		ldmia	r3, {r3-r4}
 2172 063e CDE91C34 		strd	r3, [sp, #112]
 2173 0642 07F59073 		add	r3, r7, #288
 2174 0646 18CB     		ldmia	r3, {r3-r4}
 2175 0648 CDE91A34 		strd	r3, [sp, #104]
 2176 064c 07F59473 		add	r3, r7, #296
 2177 0650 18CB     		ldmia	r3, {r3-r4}
 2178 0652 CDE91834 		strd	r3, [sp, #96]
 2179 0656 07F59873 		add	r3, r7, #304
 2180 065a 18CB     		ldmia	r3, {r3-r4}
 2181 065c CDE91634 		strd	r3, [sp, #88]
 2182 0660 07F59C73 		add	r3, r7, #312
 2183 0664 18CB     		ldmia	r3, {r3-r4}
 2184 0666 CDE91434 		strd	r3, [sp, #80]
 2185 066a 07F5A073 		add	r3, r7, #320
 2186 066e 18CB     		ldmia	r3, {r3-r4}
 2187 0670 CDE91234 		strd	r3, [sp, #72]
 2188 0674 07F5A473 		add	r3, r7, #328
 2189 0678 18CB     		ldmia	r3, {r3-r4}
 2190 067a CDE91034 		strd	r3, [sp, #64]
 2191 067e 07F5A873 		add	r3, r7, #336
 2192 0682 18CB     		ldmia	r3, {r3-r4}
 2193 0684 CDE90E34 		strd	r3, [sp, #56]
 2194 0688 07F5AC73 		add	r3, r7, #344
 2195 068c 18CB     		ldmia	r3, {r3-r4}
 2196 068e CDE90C34 		strd	r3, [sp, #48]
 2197 0692 07F5B073 		add	r3, r7, #352
 2198 0696 18CB     		ldmia	r3, {r3-r4}
 2199 0698 CDE90A34 		strd	r3, [sp, #40]
 2200 069c 07F5B473 		add	r3, r7, #360
 2201 06a0 18CB     		ldmia	r3, {r3-r4}
 2202 06a2 CDE90834 		strd	r3, [sp, #32]
 2203 06a6 07F5B873 		add	r3, r7, #368
 2204 06aa 18CB     		ldmia	r3, {r3-r4}
 2205 06ac CDE90634 		strd	r3, [sp, #24]
 2206 06b0 07F5BC73 		add	r3, r7, #376
 2207 06b4 18CB     		ldmia	r3, {r3-r4}
 2208 06b6 CDE90434 		strd	r3, [sp, #16]
 2209 06ba 07F5C073 		add	r3, r7, #384
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 56


 2210 06be 18CB     		ldmia	r3, {r3-r4}
 2211 06c0 CDE90234 		strd	r3, [sp, #8]
 2212 06c4 07F5C473 		add	r3, r7, #392
 2213 06c8 18CB     		ldmia	r3, {r3-r4}
 2214 06ca CDE90034 		strd	r3, [sp]
 2215 06ce CD4A     		ldr	r2, .L71
 2216 06d0 4FF49671 		mov	r1, #300
 2217 06d4 FFF7FEFF 		bl	snprintf
 644:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"sontek=%s",big_value);
 2218              		.loc 1 644 0
 2219 06d8 07F52B73 		add	r3, r7, #684
 2220 06dc 1A46     		mov	r2, r3
 2221 06de CA49     		ldr	r1, .L71+4
 2222 06e0 0020     		movs	r0, #0
 2223 06e2 FFF7FEFF 		bl	printNotif
 645:notoriOS.c    **** 
 646:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 2224              		.loc 1 646 0
 2225 06e6 07F57B73 		add	r3, r7, #1004
 2226 06ea 1A46     		mov	r2, r3
 2227 06ec C749     		ldr	r1, .L71+8
 2228 06ee C848     		ldr	r0, .L71+12
 2229 06f0 FFF7FEFF 		bl	SD_write
 647:notoriOS.c    ****             SD_write(Data_fileName, "a+", " sontek, ");
 2230              		.loc 1 647 0
 2231 06f4 C74A     		ldr	r2, .L71+16
 2232 06f6 C549     		ldr	r1, .L71+8
 2233 06f8 C548     		ldr	r0, .L71+12
 2234 06fa FFF7FEFF 		bl	SD_write
 648:notoriOS.c    ****             SD_write(Data_fileName, "a+", big_value);
 2235              		.loc 1 648 0
 2236 06fe 07F52B73 		add	r3, r7, #684
 2237 0702 1A46     		mov	r2, r3
 2238 0704 C149     		ldr	r1, .L71+8
 2239 0706 C248     		ldr	r0, .L71+12
 2240 0708 FFF7FEFF 		bl	SD_write
 649:notoriOS.c    ****             SD_write(Data_fileName, "a+", "\n");    //new line
 2241              		.loc 1 649 0
 2242 070c C24A     		ldr	r2, .L71+20
 2243 070e BF49     		ldr	r1, .L71+8
 2244 0710 BF48     		ldr	r0, .L71+12
 2245 0712 FFF7FEFF 		bl	SD_write
 650:notoriOS.c    ****             
 651:notoriOS.c    ****             //send specific measurements from m_sontek.values array to influx
 652:notoriOS.c    **** //            //temperature - 0 data0
 653:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.data0[0]);
 654:notoriOS.c    **** //            pushData("sontek_temp",value,timeStamp);
 655:notoriOS.c    ****             //stage - 2 data0
 656:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data0[2]);
 2246              		.loc 1 656 0
 2247 0716 07F5C873 		add	r3, r7, #400
 2248 071a 5B69     		ldr	r3, [r3, #20]	@ float
 2249 071c 1846     		mov	r0, r3
 2250 071e FFF7FEFF 		bl	__aeabi_f2d
 2251 0722 0346     		mov	r3, r0
 2252 0724 0C46     		mov	r4, r1
 2253 0726 07F57670 		add	r0, r7, #984
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 57


 2254 072a CDE90034 		strd	r3, [sp]
 2255 072e BB4A     		ldr	r2, .L71+24
 2256 0730 1421     		movs	r1, #20
 2257 0732 FFF7FEFF 		bl	snprintf
 657:notoriOS.c    ****             pushData("sontek_stage",value,timeStamp);
 2258              		.loc 1 657 0
 2259 0736 07F57673 		add	r3, r7, #984
 2260 073a D7F80C24 		ldr	r2, [r7, #1036]
 2261 073e 1946     		mov	r1, r3
 2262 0740 B748     		ldr	r0, .L71+28
 2263 0742 FFF7FEFF 		bl	pushData
 658:notoriOS.c    **** //            //cell end - 3 data0
 659:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.data0[3]);
 660:notoriOS.c    **** //            pushData("sontek_end_cell",value,timeStamp);
 661:notoriOS.c    ****             //flow - 4 data1
 662:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data1[4]);
 2264              		.loc 1 662 0
 2265 0746 07F5C873 		add	r3, r7, #400
 2266 074a DB6A     		ldr	r3, [r3, #44]	@ float
 2267 074c 1846     		mov	r0, r3
 2268 074e FFF7FEFF 		bl	__aeabi_f2d
 2269 0752 0346     		mov	r3, r0
 2270 0754 0C46     		mov	r4, r1
 2271 0756 07F57670 		add	r0, r7, #984
 2272 075a CDE90034 		strd	r3, [sp]
 2273 075e AF4A     		ldr	r2, .L71+24
 2274 0760 1421     		movs	r1, #20
 2275 0762 FFF7FEFF 		bl	snprintf
 663:notoriOS.c    ****             pushData("sontek_Q",value,timeStamp);
 2276              		.loc 1 663 0
 2277 0766 07F57673 		add	r3, r7, #984
 2278 076a D7F80C24 		ldr	r2, [r7, #1036]
 2279 076e 1946     		mov	r1, r3
 2280 0770 AC48     		ldr	r0, .L71+32
 2281 0772 FFF7FEFF 		bl	pushData
 664:notoriOS.c    ****             //average SNR - 3 data1
 665:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data1[3]);
 2282              		.loc 1 665 0
 2283 0776 07F5C873 		add	r3, r7, #400
 2284 077a 9B6A     		ldr	r3, [r3, #40]	@ float
 2285 077c 1846     		mov	r0, r3
 2286 077e FFF7FEFF 		bl	__aeabi_f2d
 2287 0782 0346     		mov	r3, r0
 2288 0784 0C46     		mov	r4, r1
 2289 0786 07F57670 		add	r0, r7, #984
 2290 078a CDE90034 		strd	r3, [sp]
 2291 078e A34A     		ldr	r2, .L71+24
 2292 0790 1421     		movs	r1, #20
 2293 0792 FFF7FEFF 		bl	snprintf
 666:notoriOS.c    ****             pushData("sontek_avg_SNR",value,timeStamp);
 2294              		.loc 1 666 0
 2295 0796 07F57673 		add	r3, r7, #984
 2296 079a D7F80C24 		ldr	r2, [r7, #1036]
 2297 079e 1946     		mov	r1, r3
 2298 07a0 A148     		ldr	r0, .L71+36
 2299 07a2 FFF7FEFF 		bl	pushData
 667:notoriOS.c    **** //            //pitch - 14
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 58


 668:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.values[14]);
 669:notoriOS.c    **** //            pushData("sontek_pitch",value,timeStamp);
 670:notoriOS.c    **** //            //roll - 15
 671:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.values[15]);
 672:notoriOS.c    **** //            pushData("sontek_roll",value,timeStamp);
 673:notoriOS.c    ****             //Amp1 - 0 data3
 674:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data3[0]);
 2300              		.loc 1 674 0
 2301 07a6 07F5C873 		add	r3, r7, #400
 2302 07aa 9B6C     		ldr	r3, [r3, #72]	@ float
 2303 07ac 1846     		mov	r0, r3
 2304 07ae FFF7FEFF 		bl	__aeabi_f2d
 2305 07b2 0346     		mov	r3, r0
 2306 07b4 0C46     		mov	r4, r1
 2307 07b6 07F57670 		add	r0, r7, #984
 2308 07ba CDE90034 		strd	r3, [sp]
 2309 07be 974A     		ldr	r2, .L71+24
 2310 07c0 1421     		movs	r1, #20
 2311 07c2 FFF7FEFF 		bl	snprintf
 675:notoriOS.c    ****             pushData("sontek_amp1",value,timeStamp);
 2312              		.loc 1 675 0
 2313 07c6 07F57673 		add	r3, r7, #984
 2314 07ca D7F80C24 		ldr	r2, [r7, #1036]
 2315 07ce 1946     		mov	r1, r3
 2316 07d0 9648     		ldr	r0, .L71+40
 2317 07d2 FFF7FEFF 		bl	pushData
 676:notoriOS.c    ****             //Amp2 - 1 data3
 677:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data3[1]);
 2318              		.loc 1 677 0
 2319 07d6 07F5C873 		add	r3, r7, #400
 2320 07da DB6C     		ldr	r3, [r3, #76]	@ float
 2321 07dc 1846     		mov	r0, r3
 2322 07de FFF7FEFF 		bl	__aeabi_f2d
 2323 07e2 0346     		mov	r3, r0
 2324 07e4 0C46     		mov	r4, r1
 2325 07e6 07F57670 		add	r0, r7, #984
 2326 07ea CDE90034 		strd	r3, [sp]
 2327 07ee 8B4A     		ldr	r2, .L71+24
 2328 07f0 1421     		movs	r1, #20
 2329 07f2 FFF7FEFF 		bl	snprintf
 678:notoriOS.c    ****             pushData("sontek_amp2",value,timeStamp);
 2330              		.loc 1 678 0
 2331 07f6 07F57673 		add	r3, r7, #984
 2332 07fa D7F80C24 		ldr	r2, [r7, #1036]
 2333 07fe 1946     		mov	r1, r3
 2334 0800 8B48     		ldr	r0, .L71+44
 2335 0802 FFF7FEFF 		bl	pushData
 679:notoriOS.c    ****             //Amp3 - 2 data3
 680:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data3[2]);
 2336              		.loc 1 680 0
 2337 0806 07F5C873 		add	r3, r7, #400
 2338 080a 1B6D     		ldr	r3, [r3, #80]	@ float
 2339 080c 1846     		mov	r0, r3
 2340 080e FFF7FEFF 		bl	__aeabi_f2d
 2341 0812 0346     		mov	r3, r0
 2342 0814 0C46     		mov	r4, r1
 2343 0816 07F57670 		add	r0, r7, #984
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 59


 2344 081a CDE90034 		strd	r3, [sp]
 2345 081e 7F4A     		ldr	r2, .L71+24
 2346 0820 1421     		movs	r1, #20
 2347 0822 FFF7FEFF 		bl	snprintf
 681:notoriOS.c    ****             pushData("sontek_amp3",value,timeStamp);
 2348              		.loc 1 681 0
 2349 0826 07F57673 		add	r3, r7, #984
 2350 082a D7F80C24 		ldr	r2, [r7, #1036]
 2351 082e 1946     		mov	r1, r3
 2352 0830 8048     		ldr	r0, .L71+48
 2353 0832 FFF7FEFF 		bl	pushData
 682:notoriOS.c    ****             //snr1 - 3 data3
 683:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data3[3]);
 2354              		.loc 1 683 0
 2355 0836 07F5C873 		add	r3, r7, #400
 2356 083a 5B6D     		ldr	r3, [r3, #84]	@ float
 2357 083c 1846     		mov	r0, r3
 2358 083e FFF7FEFF 		bl	__aeabi_f2d
 2359 0842 0346     		mov	r3, r0
 2360 0844 0C46     		mov	r4, r1
 2361 0846 07F57670 		add	r0, r7, #984
 2362 084a CDE90034 		strd	r3, [sp]
 2363 084e 734A     		ldr	r2, .L71+24
 2364 0850 1421     		movs	r1, #20
 2365 0852 FFF7FEFF 		bl	snprintf
 684:notoriOS.c    ****             pushData("sontek_snr1",value,timeStamp);
 2366              		.loc 1 684 0
 2367 0856 07F57673 		add	r3, r7, #984
 2368 085a D7F80C24 		ldr	r2, [r7, #1036]
 2369 085e 1946     		mov	r1, r3
 2370 0860 7548     		ldr	r0, .L71+52
 2371 0862 FFF7FEFF 		bl	pushData
 685:notoriOS.c    ****             //snr2 - 4 data3
 686:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data3[4]);
 2372              		.loc 1 686 0
 2373 0866 07F5C873 		add	r3, r7, #400
 2374 086a 9B6D     		ldr	r3, [r3, #88]	@ float
 2375 086c 1846     		mov	r0, r3
 2376 086e FFF7FEFF 		bl	__aeabi_f2d
 2377 0872 0346     		mov	r3, r0
 2378 0874 0C46     		mov	r4, r1
 2379 0876 07F57670 		add	r0, r7, #984
 2380 087a CDE90034 		strd	r3, [sp]
 2381 087e 674A     		ldr	r2, .L71+24
 2382 0880 1421     		movs	r1, #20
 2383 0882 FFF7FEFF 		bl	snprintf
 687:notoriOS.c    ****             pushData("sontek_snr2",value,timeStamp);
 2384              		.loc 1 687 0
 2385 0886 07F57673 		add	r3, r7, #984
 2386 088a D7F80C24 		ldr	r2, [r7, #1036]
 2387 088e 1946     		mov	r1, r3
 2388 0890 6A48     		ldr	r0, .L71+56
 2389 0892 FFF7FEFF 		bl	pushData
 688:notoriOS.c    ****             //snr3 - 5 data3
 689:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data3[5]);
 2390              		.loc 1 689 0
 2391 0896 07F5C873 		add	r3, r7, #400
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 60


 2392 089a DB6D     		ldr	r3, [r3, #92]	@ float
 2393 089c 1846     		mov	r0, r3
 2394 089e FFF7FEFF 		bl	__aeabi_f2d
 2395 08a2 0346     		mov	r3, r0
 2396 08a4 0C46     		mov	r4, r1
 2397 08a6 07F57670 		add	r0, r7, #984
 2398 08aa CDE90034 		strd	r3, [sp]
 2399 08ae 5B4A     		ldr	r2, .L71+24
 2400 08b0 1421     		movs	r1, #20
 2401 08b2 FFF7FEFF 		bl	snprintf
 690:notoriOS.c    ****             pushData("sontek_snr3",value,timeStamp); 
 2402              		.loc 1 690 0
 2403 08b6 07F57673 		add	r3, r7, #984
 2404 08ba D7F80C24 		ldr	r2, [r7, #1036]
 2405 08be 1946     		mov	r1, r3
 2406 08c0 5F48     		ldr	r0, .L71+60
 2407 08c2 FFF7FEFF 		bl	pushData
 691:notoriOS.c    ****             
 692:notoriOS.c    ****             //Amp4 - 0 data5
 693:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data5[0]);
 2408              		.loc 1 693 0
 2409 08c6 07F5C873 		add	r3, r7, #400
 2410 08ca 9B6F     		ldr	r3, [r3, #120]	@ float
 2411 08cc 1846     		mov	r0, r3
 2412 08ce FFF7FEFF 		bl	__aeabi_f2d
 2413 08d2 0346     		mov	r3, r0
 2414 08d4 0C46     		mov	r4, r1
 2415 08d6 07F57670 		add	r0, r7, #984
 2416 08da CDE90034 		strd	r3, [sp]
 2417 08de 4F4A     		ldr	r2, .L71+24
 2418 08e0 1421     		movs	r1, #20
 2419 08e2 FFF7FEFF 		bl	snprintf
 694:notoriOS.c    ****             pushData("sontek_amp4",value,timeStamp);
 2420              		.loc 1 694 0
 2421 08e6 07F57673 		add	r3, r7, #984
 2422 08ea D7F80C24 		ldr	r2, [r7, #1036]
 2423 08ee 1946     		mov	r1, r3
 2424 08f0 5448     		ldr	r0, .L71+64
 2425 08f2 FFF7FEFF 		bl	pushData
 695:notoriOS.c    ****             //Amp5 - 1 data5
 696:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data5[1]);
 2426              		.loc 1 696 0
 2427 08f6 07F5C873 		add	r3, r7, #400
 2428 08fa DB6F     		ldr	r3, [r3, #124]	@ float
 2429 08fc 1846     		mov	r0, r3
 2430 08fe FFF7FEFF 		bl	__aeabi_f2d
 2431 0902 0346     		mov	r3, r0
 2432 0904 0C46     		mov	r4, r1
 2433 0906 07F57670 		add	r0, r7, #984
 2434 090a CDE90034 		strd	r3, [sp]
 2435 090e 434A     		ldr	r2, .L71+24
 2436 0910 1421     		movs	r1, #20
 2437 0912 FFF7FEFF 		bl	snprintf
 697:notoriOS.c    ****             pushData("sontek_amp5",value,timeStamp);
 2438              		.loc 1 697 0
 2439 0916 07F57673 		add	r3, r7, #984
 2440 091a D7F80C24 		ldr	r2, [r7, #1036]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 61


 2441 091e 1946     		mov	r1, r3
 2442 0920 4948     		ldr	r0, .L71+68
 2443 0922 FFF7FEFF 		bl	pushData
 698:notoriOS.c    ****             //Amp6 - 2 data5
 699:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data5[2]);
 2444              		.loc 1 699 0
 2445 0926 07F5C873 		add	r3, r7, #400
 2446 092a D3F88030 		ldr	r3, [r3, #128]	@ float
 2447 092e 1846     		mov	r0, r3
 2448 0930 FFF7FEFF 		bl	__aeabi_f2d
 2449 0934 0346     		mov	r3, r0
 2450 0936 0C46     		mov	r4, r1
 2451 0938 07F57670 		add	r0, r7, #984
 2452 093c CDE90034 		strd	r3, [sp]
 2453 0940 364A     		ldr	r2, .L71+24
 2454 0942 1421     		movs	r1, #20
 2455 0944 FFF7FEFF 		bl	snprintf
 700:notoriOS.c    ****             pushData("sontek_amp6",value,timeStamp);
 2456              		.loc 1 700 0
 2457 0948 07F57673 		add	r3, r7, #984
 2458 094c D7F80C24 		ldr	r2, [r7, #1036]
 2459 0950 1946     		mov	r1, r3
 2460 0952 3E48     		ldr	r0, .L71+72
 2461 0954 FFF7FEFF 		bl	pushData
 701:notoriOS.c    ****             //snr4 - 3 data5
 702:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data5[3]);
 2462              		.loc 1 702 0
 2463 0958 07F5C873 		add	r3, r7, #400
 2464 095c D3F88430 		ldr	r3, [r3, #132]	@ float
 2465 0960 1846     		mov	r0, r3
 2466 0962 FFF7FEFF 		bl	__aeabi_f2d
 2467 0966 0346     		mov	r3, r0
 2468 0968 0C46     		mov	r4, r1
 2469 096a 07F57670 		add	r0, r7, #984
 2470 096e CDE90034 		strd	r3, [sp]
 2471 0972 2A4A     		ldr	r2, .L71+24
 2472 0974 1421     		movs	r1, #20
 2473 0976 FFF7FEFF 		bl	snprintf
 703:notoriOS.c    ****             pushData("sontek_snr4",value,timeStamp);
 2474              		.loc 1 703 0
 2475 097a 07F57673 		add	r3, r7, #984
 2476 097e D7F80C24 		ldr	r2, [r7, #1036]
 2477 0982 1946     		mov	r1, r3
 2478 0984 3248     		ldr	r0, .L71+76
 2479 0986 FFF7FEFF 		bl	pushData
 704:notoriOS.c    ****             //snr5 - 4 data5
 705:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data5[4]);
 2480              		.loc 1 705 0
 2481 098a 07F5C873 		add	r3, r7, #400
 2482 098e D3F88830 		ldr	r3, [r3, #136]	@ float
 2483 0992 1846     		mov	r0, r3
 2484 0994 FFF7FEFF 		bl	__aeabi_f2d
 2485 0998 0346     		mov	r3, r0
 2486 099a 0C46     		mov	r4, r1
 2487 099c 07F57670 		add	r0, r7, #984
 2488 09a0 CDE90034 		strd	r3, [sp]
 2489 09a4 1D4A     		ldr	r2, .L71+24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 62


 2490 09a6 1421     		movs	r1, #20
 2491 09a8 FFF7FEFF 		bl	snprintf
 706:notoriOS.c    ****             pushData("sontek_snr5",value,timeStamp);
 2492              		.loc 1 706 0
 2493 09ac 07F57673 		add	r3, r7, #984
 2494 09b0 D7F80C24 		ldr	r2, [r7, #1036]
 2495 09b4 1946     		mov	r1, r3
 2496 09b6 2748     		ldr	r0, .L71+80
 2497 09b8 FFF7FEFF 		bl	pushData
 707:notoriOS.c    ****             //snr6 - 5 data5
 708:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data5[5]);
 2498              		.loc 1 708 0
 2499 09bc 07F5C873 		add	r3, r7, #400
 2500 09c0 D3F88C30 		ldr	r3, [r3, #140]	@ float
 2501 09c4 1846     		mov	r0, r3
 2502 09c6 FFF7FEFF 		bl	__aeabi_f2d
 2503 09ca 0346     		mov	r3, r0
 2504 09cc 0C46     		mov	r4, r1
 2505 09ce 07F57670 		add	r0, r7, #984
 2506 09d2 CDE90034 		strd	r3, [sp]
 2507 09d6 114A     		ldr	r2, .L71+24
 2508 09d8 1421     		movs	r1, #20
 2509 09da FFF7FEFF 		bl	snprintf
 709:notoriOS.c    ****             pushData("sontek_snr6",value,timeStamp);
 2510              		.loc 1 709 0
 2511 09de 07F57673 		add	r3, r7, #984
 2512 09e2 D7F80C24 		ldr	r2, [r7, #1036]
 2513 09e6 1946     		mov	r1, r3
 2514 09e8 1B48     		ldr	r0, .L71+84
 2515 09ea FFF7FEFF 		bl	pushData
 710:notoriOS.c    ****             
 711:notoriOS.c    ****             //Amp7 - 0 data7
 712:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data7[0]);
 2516              		.loc 1 712 0
 2517 09ee 07F5C873 		add	r3, r7, #400
 2518 09f2 D3F8A830 		ldr	r3, [r3, #168]	@ float
 2519 09f6 1846     		mov	r0, r3
 2520 09f8 FFF7FEFF 		bl	__aeabi_f2d
 2521 09fc 0346     		mov	r3, r0
 2522 09fe 0C46     		mov	r4, r1
 2523 0a00 2CE0     		b	.L72
 2524              	.L73:
 2525 0a02 00BF     		.align	2
 2526              	.L71:
 2527 0a04 C0020000 		.word	.LC41
 2528 0a08 60040000 		.word	.LC42
 2529 0a0c 78020000 		.word	.LC37
 2530 0a10 00000000 		.word	Data_fileName
 2531 0a14 6C040000 		.word	.LC43
 2532 0a18 78040000 		.word	.LC44
 2533 0a1c 7C040000 		.word	.LC45
 2534 0a20 84040000 		.word	.LC46
 2535 0a24 94040000 		.word	.LC47
 2536 0a28 A0040000 		.word	.LC48
 2537 0a2c B0040000 		.word	.LC49
 2538 0a30 BC040000 		.word	.LC50
 2539 0a34 C8040000 		.word	.LC51
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 63


 2540 0a38 D4040000 		.word	.LC52
 2541 0a3c E0040000 		.word	.LC53
 2542 0a40 EC040000 		.word	.LC54
 2543 0a44 F8040000 		.word	.LC55
 2544 0a48 04050000 		.word	.LC56
 2545 0a4c 10050000 		.word	.LC57
 2546 0a50 1C050000 		.word	.LC58
 2547 0a54 28050000 		.word	.LC59
 2548 0a58 34050000 		.word	.LC60
 2549              	.L72:
 2550 0a5c 07F57670 		add	r0, r7, #984
 2551 0a60 CDE90034 		strd	r3, [sp]
 2552 0a64 5D4A     		ldr	r2, .L74
 2553 0a66 1421     		movs	r1, #20
 2554 0a68 FFF7FEFF 		bl	snprintf
 713:notoriOS.c    ****             pushData("sontek_amp7",value,timeStamp);
 2555              		.loc 1 713 0
 2556 0a6c 07F57673 		add	r3, r7, #984
 2557 0a70 D7F80C24 		ldr	r2, [r7, #1036]
 2558 0a74 1946     		mov	r1, r3
 2559 0a76 5A48     		ldr	r0, .L74+4
 2560 0a78 FFF7FEFF 		bl	pushData
 714:notoriOS.c    ****             //Amp8 - 1 data7
 715:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data7[1]);
 2561              		.loc 1 715 0
 2562 0a7c 07F5C873 		add	r3, r7, #400
 2563 0a80 D3F8AC30 		ldr	r3, [r3, #172]	@ float
 2564 0a84 1846     		mov	r0, r3
 2565 0a86 FFF7FEFF 		bl	__aeabi_f2d
 2566 0a8a 0346     		mov	r3, r0
 2567 0a8c 0C46     		mov	r4, r1
 2568 0a8e 07F57670 		add	r0, r7, #984
 2569 0a92 CDE90034 		strd	r3, [sp]
 2570 0a96 514A     		ldr	r2, .L74
 2571 0a98 1421     		movs	r1, #20
 2572 0a9a FFF7FEFF 		bl	snprintf
 716:notoriOS.c    ****             pushData("sontek_amp8",value,timeStamp);
 2573              		.loc 1 716 0
 2574 0a9e 07F57673 		add	r3, r7, #984
 2575 0aa2 D7F80C24 		ldr	r2, [r7, #1036]
 2576 0aa6 1946     		mov	r1, r3
 2577 0aa8 4E48     		ldr	r0, .L74+8
 2578 0aaa FFF7FEFF 		bl	pushData
 717:notoriOS.c    ****             //Amp9 - 2 data7
 718:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data7[2]);
 2579              		.loc 1 718 0
 2580 0aae 07F5C873 		add	r3, r7, #400
 2581 0ab2 D3F8B030 		ldr	r3, [r3, #176]	@ float
 2582 0ab6 1846     		mov	r0, r3
 2583 0ab8 FFF7FEFF 		bl	__aeabi_f2d
 2584 0abc 0346     		mov	r3, r0
 2585 0abe 0C46     		mov	r4, r1
 2586 0ac0 07F57670 		add	r0, r7, #984
 2587 0ac4 CDE90034 		strd	r3, [sp]
 2588 0ac8 444A     		ldr	r2, .L74
 2589 0aca 1421     		movs	r1, #20
 2590 0acc FFF7FEFF 		bl	snprintf
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 64


 719:notoriOS.c    ****             pushData("sontek_amp9",value,timeStamp);
 2591              		.loc 1 719 0
 2592 0ad0 07F57673 		add	r3, r7, #984
 2593 0ad4 D7F80C24 		ldr	r2, [r7, #1036]
 2594 0ad8 1946     		mov	r1, r3
 2595 0ada 4348     		ldr	r0, .L74+12
 2596 0adc FFF7FEFF 		bl	pushData
 720:notoriOS.c    ****             //snr7 - 3 data7
 721:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data7[3]);
 2597              		.loc 1 721 0
 2598 0ae0 07F5C873 		add	r3, r7, #400
 2599 0ae4 D3F8B430 		ldr	r3, [r3, #180]	@ float
 2600 0ae8 1846     		mov	r0, r3
 2601 0aea FFF7FEFF 		bl	__aeabi_f2d
 2602 0aee 0346     		mov	r3, r0
 2603 0af0 0C46     		mov	r4, r1
 2604 0af2 07F57670 		add	r0, r7, #984
 2605 0af6 CDE90034 		strd	r3, [sp]
 2606 0afa 384A     		ldr	r2, .L74
 2607 0afc 1421     		movs	r1, #20
 2608 0afe FFF7FEFF 		bl	snprintf
 722:notoriOS.c    ****             pushData("sontek_snr7",value,timeStamp);
 2609              		.loc 1 722 0
 2610 0b02 07F57673 		add	r3, r7, #984
 2611 0b06 D7F80C24 		ldr	r2, [r7, #1036]
 2612 0b0a 1946     		mov	r1, r3
 2613 0b0c 3748     		ldr	r0, .L74+16
 2614 0b0e FFF7FEFF 		bl	pushData
 723:notoriOS.c    ****             //snr8 - 4 data7
 724:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data7[4]);
 2615              		.loc 1 724 0
 2616 0b12 07F5C873 		add	r3, r7, #400
 2617 0b16 D3F8B830 		ldr	r3, [r3, #184]	@ float
 2618 0b1a 1846     		mov	r0, r3
 2619 0b1c FFF7FEFF 		bl	__aeabi_f2d
 2620 0b20 0346     		mov	r3, r0
 2621 0b22 0C46     		mov	r4, r1
 2622 0b24 07F57670 		add	r0, r7, #984
 2623 0b28 CDE90034 		strd	r3, [sp]
 2624 0b2c 2B4A     		ldr	r2, .L74
 2625 0b2e 1421     		movs	r1, #20
 2626 0b30 FFF7FEFF 		bl	snprintf
 725:notoriOS.c    ****             pushData("sontek_snr8",value,timeStamp);
 2627              		.loc 1 725 0
 2628 0b34 07F57673 		add	r3, r7, #984
 2629 0b38 D7F80C24 		ldr	r2, [r7, #1036]
 2630 0b3c 1946     		mov	r1, r3
 2631 0b3e 2C48     		ldr	r0, .L74+20
 2632 0b40 FFF7FEFF 		bl	pushData
 726:notoriOS.c    ****             //snr9 - 5 data7
 727:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data7[5]);
 2633              		.loc 1 727 0
 2634 0b44 07F5C873 		add	r3, r7, #400
 2635 0b48 D3F8BC30 		ldr	r3, [r3, #188]	@ float
 2636 0b4c 1846     		mov	r0, r3
 2637 0b4e FFF7FEFF 		bl	__aeabi_f2d
 2638 0b52 0346     		mov	r3, r0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 65


 2639 0b54 0C46     		mov	r4, r1
 2640 0b56 07F57670 		add	r0, r7, #984
 2641 0b5a CDE90034 		strd	r3, [sp]
 2642 0b5e 1F4A     		ldr	r2, .L74
 2643 0b60 1421     		movs	r1, #20
 2644 0b62 FFF7FEFF 		bl	snprintf
 728:notoriOS.c    ****             pushData("sontek_snr9",value,timeStamp);           
 2645              		.loc 1 728 0
 2646 0b66 07F57673 		add	r3, r7, #984
 2647 0b6a D7F80C24 		ldr	r2, [r7, #1036]
 2648 0b6e 1946     		mov	r1, r3
 2649 0b70 2048     		ldr	r0, .L74+24
 2650 0b72 FFF7FEFF 		bl	pushData
 729:notoriOS.c    ****             
 730:notoriOS.c    ****             //Amp10 - 2 data8
 731:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data8[2]);
 2651              		.loc 1 731 0
 2652 0b76 07F5C873 		add	r3, r7, #400
 2653 0b7a D3F8C830 		ldr	r3, [r3, #200]	@ float
 2654 0b7e 1846     		mov	r0, r3
 2655 0b80 FFF7FEFF 		bl	__aeabi_f2d
 2656 0b84 0346     		mov	r3, r0
 2657 0b86 0C46     		mov	r4, r1
 2658 0b88 07F57670 		add	r0, r7, #984
 2659 0b8c CDE90034 		strd	r3, [sp]
 2660 0b90 124A     		ldr	r2, .L74
 2661 0b92 1421     		movs	r1, #20
 2662 0b94 FFF7FEFF 		bl	snprintf
 732:notoriOS.c    ****             pushData("sontek_amp10",value,timeStamp);
 2663              		.loc 1 732 0
 2664 0b98 07F57673 		add	r3, r7, #984
 2665 0b9c D7F80C24 		ldr	r2, [r7, #1036]
 2666 0ba0 1946     		mov	r1, r3
 2667 0ba2 1548     		ldr	r0, .L74+28
 2668 0ba4 FFF7FEFF 		bl	pushData
 733:notoriOS.c    ****             //snr10 - 3 data8
 734:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data8[3]);
 2669              		.loc 1 734 0
 2670 0ba8 07F5C873 		add	r3, r7, #400
 2671 0bac D3F8CC30 		ldr	r3, [r3, #204]	@ float
 2672 0bb0 1846     		mov	r0, r3
 2673 0bb2 FFF7FEFF 		bl	__aeabi_f2d
 2674 0bb6 0346     		mov	r3, r0
 2675 0bb8 0C46     		mov	r4, r1
 2676 0bba 07F57670 		add	r0, r7, #984
 2677 0bbe CDE90034 		strd	r3, [sp]
 2678 0bc2 064A     		ldr	r2, .L74
 2679 0bc4 1421     		movs	r1, #20
 2680 0bc6 FFF7FEFF 		bl	snprintf
 735:notoriOS.c    ****             pushData("sontek_snr10",value,timeStamp);
 2681              		.loc 1 735 0
 2682 0bca 07F57673 		add	r3, r7, #984
 2683 0bce D7F80C24 		ldr	r2, [r7, #1036]
 2684 0bd2 1946     		mov	r1, r3
 2685 0bd4 0948     		ldr	r0, .L74+32
 2686 0bd6 FFF7FEFF 		bl	pushData
 2687 0bda 41E0     		b	.L59
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 66


 2688              	.L75:
 2689              		.align	2
 2690              	.L74:
 2691 0bdc 7C040000 		.word	.LC45
 2692 0be0 40050000 		.word	.LC61
 2693 0be4 4C050000 		.word	.LC62
 2694 0be8 58050000 		.word	.LC63
 2695 0bec 64050000 		.word	.LC64
 2696 0bf0 70050000 		.word	.LC65
 2697 0bf4 7C050000 		.word	.LC66
 2698 0bf8 88050000 		.word	.LC67
 2699 0bfc 98050000 		.word	.LC68
 2700              	.L60:
 736:notoriOS.c    ****             
 737:notoriOS.c    **** //            //SNR2 -24
 738:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.values[24]);
 739:notoriOS.c    **** //            pushData("sontek_SNR2",value,timeStamp);
 740:notoriOS.c    **** //            //SNR3 - 25
 741:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.values[25]);
 742:notoriOS.c    **** //            pushData("sontek_SNR3",value,timeStamp);
 743:notoriOS.c    **** //            //SNR4 - 26
 744:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.values[26]);
 745:notoriOS.c    **** //            pushData("sontek_SNR4",value,timeStamp);
 746:notoriOS.c    **** 
 747:notoriOS.c    ****         }else{
 748:notoriOS.c    ****             //publish error code if no valid readings given
 749:notoriOS.c    ****             snprintf(value,sizeof(value),"%c",m_sontek.flag);
 2701              		.loc 1 749 0
 2702 0c00 07F5C873 		add	r3, r7, #400
 2703 0c04 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2704 0c06 07F57670 		add	r0, r7, #984
 2705 0c0a 804A     		ldr	r2, .L76
 2706 0c0c 1421     		movs	r1, #20
 2707 0c0e FFF7FEFF 		bl	snprintf
 750:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Sontek. Error: %c.", val
 2708              		.loc 1 750 0
 2709 0c12 07F57673 		add	r3, r7, #984
 2710 0c16 1A46     		mov	r2, r3
 2711 0c18 7D49     		ldr	r1, .L76+4
 2712 0c1a 0220     		movs	r0, #2
 2713 0c1c FFF7FEFF 		bl	printNotif
 751:notoriOS.c    ****             pushData("sontek_flag",value,timeStamp);
 2714              		.loc 1 751 0
 2715 0c20 07F57673 		add	r3, r7, #984
 2716 0c24 D7F80C24 		ldr	r2, [r7, #1036]
 2717 0c28 1946     		mov	r1, r3
 2718 0c2a 7A48     		ldr	r0, .L76+8
 2719 0c2c FFF7FEFF 		bl	pushData
 752:notoriOS.c    ****                 
 753:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 2720              		.loc 1 753 0
 2721 0c30 07F57B73 		add	r3, r7, #1004
 2722 0c34 1A46     		mov	r2, r3
 2723 0c36 7849     		ldr	r1, .L76+12
 2724 0c38 7848     		ldr	r0, .L76+16
 2725 0c3a FFF7FEFF 		bl	SD_write
 754:notoriOS.c    ****             SD_write(Data_fileName, "a+", " sontek error: ");
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 67


 2726              		.loc 1 754 0
 2727 0c3e 784A     		ldr	r2, .L76+20
 2728 0c40 7549     		ldr	r1, .L76+12
 2729 0c42 7648     		ldr	r0, .L76+16
 2730 0c44 FFF7FEFF 		bl	SD_write
 755:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 2731              		.loc 1 755 0
 2732 0c48 07F57673 		add	r3, r7, #984
 2733 0c4c 1A46     		mov	r2, r3
 2734 0c4e 7249     		ldr	r1, .L76+12
 2735 0c50 7248     		ldr	r0, .L76+16
 2736 0c52 FFF7FEFF 		bl	SD_write
 756:notoriOS.c    ****             SD_write(Data_fileName, "a+", "\n");
 2737              		.loc 1 756 0
 2738 0c56 734A     		ldr	r2, .L76+24
 2739 0c58 6F49     		ldr	r1, .L76+12
 2740 0c5a 7048     		ldr	r0, .L76+16
 2741 0c5c FFF7FEFF 		bl	SD_write
 2742              	.L59:
 2743              	.LBE10:
 757:notoriOS.c    ****         }
 758:notoriOS.c    ****     }
 759:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 760:notoriOS.c    ****     voltage_t m_voltage;
 761:notoriOS.c    ****     
 762:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 763:notoriOS.c    ****     m_voltage = voltage_take_readings();
 2744              		.loc 1 763 0
 2745 0c60 07F52673 		add	r3, r7, #664
 2746 0c64 1846     		mov	r0, r3
 2747 0c66 FFF7FEFF 		bl	voltage_take_readings
 764:notoriOS.c    ****     
 765:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 766:notoriOS.c    ****     if(m_voltage.valid){
 2748              		.loc 1 766 0
 2749 0c6a 07F52673 		add	r3, r7, #664
 2750 0c6e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2751 0c70 002B     		cmp	r3, #0
 2752 0c72 00F0BF80 		beq	.L62
 767:notoriOS.c    ****         // battery voltage data
 768:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 2753              		.loc 1 768 0
 2754 0c76 07F52673 		add	r3, r7, #664
 2755 0c7a 1B68     		ldr	r3, [r3]	@ float
 2756 0c7c 1846     		mov	r0, r3
 2757 0c7e FFF7FEFF 		bl	__aeabi_f2d
 2758 0c82 0346     		mov	r3, r0
 2759 0c84 0C46     		mov	r4, r1
 2760 0c86 07F57670 		add	r0, r7, #984
 2761 0c8a CDE90034 		strd	r3, [sp]
 2762 0c8e 664A     		ldr	r2, .L76+28
 2763 0c90 1421     		movs	r1, #20
 2764 0c92 FFF7FEFF 		bl	snprintf
 769:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 2765              		.loc 1 769 0
 2766 0c96 07F57673 		add	r3, r7, #984
 2767 0c9a 1A46     		mov	r2, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 68


 2768 0c9c 6349     		ldr	r1, .L76+32
 2769 0c9e 0020     		movs	r0, #0
 2770 0ca0 FFF7FEFF 		bl	printNotif
 770:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
 2771              		.loc 1 770 0
 2772 0ca4 07F57673 		add	r3, r7, #984
 2773 0ca8 D7F80C24 		ldr	r2, [r7, #1036]
 2774 0cac 1946     		mov	r1, r3
 2775 0cae 6048     		ldr	r0, .L76+36
 2776 0cb0 FFF7FEFF 		bl	pushData
 771:notoriOS.c    ****         
 772:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 773:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 2777              		.loc 1 773 0
 2778 0cb4 5F4A     		ldr	r2, .L76+40
 2779 0cb6 5849     		ldr	r1, .L76+12
 2780 0cb8 5848     		ldr	r0, .L76+16
 2781 0cba FFF7FEFF 		bl	SD_write
 774:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 2782              		.loc 1 774 0
 2783 0cbe 07F57B73 		add	r3, r7, #1004
 2784 0cc2 1A46     		mov	r2, r3
 2785 0cc4 5449     		ldr	r1, .L76+12
 2786 0cc6 5548     		ldr	r0, .L76+16
 2787 0cc8 FFF7FEFF 		bl	SD_write
 775:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 2788              		.loc 1 775 0
 2789 0ccc 5A4A     		ldr	r2, .L76+44
 2790 0cce 5249     		ldr	r1, .L76+12
 2791 0cd0 5248     		ldr	r0, .L76+16
 2792 0cd2 FFF7FEFF 		bl	SD_write
 776:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 2793              		.loc 1 776 0
 2794 0cd6 07F57673 		add	r3, r7, #984
 2795 0cda 1A46     		mov	r2, r3
 2796 0cdc 4E49     		ldr	r1, .L76+12
 2797 0cde 4F48     		ldr	r0, .L76+16
 2798 0ce0 FFF7FEFF 		bl	SD_write
 777:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 2799              		.loc 1 777 0
 2800 0ce4 534A     		ldr	r2, .L76+40
 2801 0ce6 4C49     		ldr	r1, .L76+12
 2802 0ce8 4C48     		ldr	r0, .L76+16
 2803 0cea FFF7FEFF 		bl	SD_write
 778:notoriOS.c    ****         
 779:notoriOS.c    ****         // If node type is green infrastructure node, take pressure transducer measurements
 780:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE){
 2804              		.loc 1 780 0
 2805 0cee 534B     		ldr	r3, .L76+48
 2806 0cf0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2807 0cf2 012B     		cmp	r3, #1
 2808 0cf4 40F08280 		bne	.L64
 2809              	.LBB11:
 781:notoriOS.c    ****             
 782:notoriOS.c    ****             // pressure transducer voltage (V) data
 783:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 784:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 69


 785:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 786:notoriOS.c    ****             
 787:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 788:notoriOS.c    ****             pressure_t m_pressure;
 789:notoriOS.c    ****             
 790:notoriOS.c    ****             // Make pressure transducer calculators for current (mA) and depth
 791:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 2810              		.loc 1 791 0
 2811 0cf8 07F51D74 		add	r4, r7, #628
 2812 0cfc 07F52673 		add	r3, r7, #664
 2813 0d00 6D46     		mov	r5, sp
 2814 0d02 03F10C02 		add	r2, r3, #12
 2815 0d06 92E80300 		ldmia	r2, {r0, r1}
 2816 0d0a 85E80300 		stmia	r5, {r0, r1}
 2817 0d0e 0ECB     		ldmia	r3, {r1, r2, r3}
 2818 0d10 2046     		mov	r0, r4
 2819 0d12 FFF7FEFF 		bl	pressure_calculations
 792:notoriOS.c    ****             
 793:notoriOS.c    ****             // pressure transducer current (mA) data
 794:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 2820              		.loc 1 794 0
 2821 0d16 07F51D73 		add	r3, r7, #628
 2822 0d1a 1B68     		ldr	r3, [r3]	@ float
 2823 0d1c 1846     		mov	r0, r3
 2824 0d1e FFF7FEFF 		bl	__aeabi_f2d
 2825 0d22 0346     		mov	r3, r0
 2826 0d24 0C46     		mov	r4, r1
 2827 0d26 07F57670 		add	r0, r7, #984
 2828 0d2a CDE90034 		strd	r3, [sp]
 2829 0d2e 3E4A     		ldr	r2, .L76+28
 2830 0d30 1421     		movs	r1, #20
 2831 0d32 FFF7FEFF 		bl	snprintf
 795:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 2832              		.loc 1 795 0
 2833 0d36 07F57673 		add	r3, r7, #984
 2834 0d3a 1A46     		mov	r2, r3
 2835 0d3c 4049     		ldr	r1, .L76+52
 2836 0d3e 0020     		movs	r0, #0
 2837 0d40 FFF7FEFF 		bl	printNotif
 796:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 2838              		.loc 1 796 0
 2839 0d44 07F57673 		add	r3, r7, #984
 2840 0d48 D7F80C24 		ldr	r2, [r7, #1036]
 2841 0d4c 1946     		mov	r1, r3
 2842 0d4e 3D48     		ldr	r0, .L76+56
 2843 0d50 FFF7FEFF 		bl	pushData
 797:notoriOS.c    ****             
 798:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 799:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 2844              		.loc 1 799 0
 2845 0d54 374A     		ldr	r2, .L76+40
 2846 0d56 3049     		ldr	r1, .L76+12
 2847 0d58 3048     		ldr	r0, .L76+16
 2848 0d5a FFF7FEFF 		bl	SD_write
 800:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 2849              		.loc 1 800 0
 2850 0d5e 07F57B73 		add	r3, r7, #1004
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 70


 2851 0d62 1A46     		mov	r2, r3
 2852 0d64 2C49     		ldr	r1, .L76+12
 2853 0d66 2D48     		ldr	r0, .L76+16
 2854 0d68 FFF7FEFF 		bl	SD_write
 801:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 2855              		.loc 1 801 0
 2856 0d6c 364A     		ldr	r2, .L76+60
 2857 0d6e 2A49     		ldr	r1, .L76+12
 2858 0d70 2A48     		ldr	r0, .L76+16
 2859 0d72 FFF7FEFF 		bl	SD_write
 802:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 2860              		.loc 1 802 0
 2861 0d76 07F57673 		add	r3, r7, #984
 2862 0d7a 1A46     		mov	r2, r3
 2863 0d7c 2649     		ldr	r1, .L76+12
 2864 0d7e 2748     		ldr	r0, .L76+16
 2865 0d80 FFF7FEFF 		bl	SD_write
 803:notoriOS.c    ****             
 804:notoriOS.c    ****             // pressure transducer depth (ft) data
 805:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 2866              		.loc 1 805 0
 2867 0d84 07F51D73 		add	r3, r7, #628
 2868 0d88 5B68     		ldr	r3, [r3, #4]	@ float
 2869 0d8a 1846     		mov	r0, r3
 2870 0d8c FFF7FEFF 		bl	__aeabi_f2d
 2871 0d90 0346     		mov	r3, r0
 2872 0d92 0C46     		mov	r4, r1
 2873 0d94 07F57670 		add	r0, r7, #984
 2874 0d98 CDE90034 		strd	r3, [sp]
 2875 0d9c 224A     		ldr	r2, .L76+28
 2876 0d9e 1421     		movs	r1, #20
 2877 0da0 FFF7FEFF 		bl	snprintf
 806:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 2878              		.loc 1 806 0
 2879 0da4 07F57673 		add	r3, r7, #984
 2880 0da8 1A46     		mov	r2, r3
 2881 0daa 2849     		ldr	r1, .L76+64
 2882 0dac 0020     		movs	r0, #0
 2883 0dae FFF7FEFF 		bl	printNotif
 807:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 2884              		.loc 1 807 0
 2885 0db2 07F57673 		add	r3, r7, #984
 2886 0db6 D7F80C24 		ldr	r2, [r7, #1036]
 2887 0dba 1946     		mov	r1, r3
 2888 0dbc 2448     		ldr	r0, .L76+68
 2889 0dbe FFF7FEFF 		bl	pushData
 808:notoriOS.c    ****             
 809:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 810:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 2890              		.loc 1 810 0
 2891 0dc2 1C4A     		ldr	r2, .L76+40
 2892 0dc4 1449     		ldr	r1, .L76+12
 2893 0dc6 1548     		ldr	r0, .L76+16
 2894 0dc8 FFF7FEFF 		bl	SD_write
 811:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 2895              		.loc 1 811 0
 2896 0dcc 07F57B73 		add	r3, r7, #1004
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 71


 2897 0dd0 1A46     		mov	r2, r3
 2898 0dd2 1149     		ldr	r1, .L76+12
 2899 0dd4 1148     		ldr	r0, .L76+16
 2900 0dd6 FFF7FEFF 		bl	SD_write
 812:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
 2901              		.loc 1 812 0
 2902 0dda 1E4A     		ldr	r2, .L76+72
 2903 0ddc 0E49     		ldr	r1, .L76+12
 2904 0dde 0F48     		ldr	r0, .L76+16
 2905 0de0 FFF7FEFF 		bl	SD_write
 813:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 2906              		.loc 1 813 0
 2907 0de4 07F57673 		add	r3, r7, #984
 2908 0de8 1A46     		mov	r2, r3
 2909 0dea 0B49     		ldr	r1, .L76+12
 2910 0dec 0B48     		ldr	r0, .L76+16
 2911 0dee FFF7FEFF 		bl	SD_write
 2912 0df2 03E0     		b	.L64
 2913              	.L62:
 2914              	.LBE11:
 814:notoriOS.c    ****         }    
 815:notoriOS.c    ****     }else{
 816:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 2915              		.loc 1 816 0
 2916 0df4 1849     		ldr	r1, .L76+76
 2917 0df6 0220     		movs	r0, #2
 2918 0df8 FFF7FEFF 		bl	printNotif
 2919              	.L64:
 817:notoriOS.c    ****     }
 818:notoriOS.c    ****     
 819:notoriOS.c    ****     return 0u;
 2920              		.loc 1 819 0
 2921 0dfc 0023     		movs	r3, #0
 820:notoriOS.c    **** }
 2922              		.loc 1 820 0
 2923 0dfe 1846     		mov	r0, r3
 2924 0e00 07F58267 		add	r7, r7, #1040
 2925              		.cfi_def_cfa_offset 32
 2926 0e04 BD46     		mov	sp, r7
 2927              		.cfi_def_cfa_register 13
 2928              		@ sp needed
 2929 0e06 BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 2930              	.L77:
 2931 0e0a 00BF     		.align	2
 2932              	.L76:
 2933 0e0c A8050000 		.word	.LC69
 2934 0e10 AC050000 		.word	.LC70
 2935 0e14 E4050000 		.word	.LC71
 2936 0e18 78020000 		.word	.LC37
 2937 0e1c 00000000 		.word	Data_fileName
 2938 0e20 F0050000 		.word	.LC72
 2939 0e24 78040000 		.word	.LC44
 2940 0e28 7C040000 		.word	.LC45
 2941 0e2c 00060000 		.word	.LC73
 2942 0e30 0C060000 		.word	.LC74
 2943 0e34 90020000 		.word	.LC39
 2944 0e38 14060000 		.word	.LC75
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 72


 2945 0e3c 00000000 		.word	updatable_parameters
 2946 0e40 1C060000 		.word	.LC76
 2947 0e44 30060000 		.word	.LC77
 2948 0e48 44060000 		.word	.LC78
 2949 0e4c 58060000 		.word	.LC79
 2950 0e50 6C060000 		.word	.LC80
 2951 0e54 7C060000 		.word	.LC81
 2952 0e58 90060000 		.word	.LC82
 2953              		.cfi_endproc
 2954              	.LFE76:
 2955              		.size	makeMeasurements, .-makeMeasurements
 2956              		.section	.rodata
 2957 06b7 00       		.align	2
 2958              	.LC83:
 2959 06b8 4572726F 		.ascii	"Error setting system time.\000"
 2959      72207365 
 2959      7474696E 
 2959      67207379 
 2959      7374656D 
 2960              		.section	.text.setTime,"ax",%progbits
 2961              		.align	2
 2962              		.global	setTime
 2963              		.thumb
 2964              		.thumb_func
 2965              		.type	setTime, %function
 2966              	setTime:
 2967              	.LFB77:
 821:notoriOS.c    **** 
 822:notoriOS.c    **** // ==============================================
 823:notoriOS.c    **** // Set the system time
 824:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 825:notoriOS.c    **** // ==============================================
 826:notoriOS.c    **** uint8 setTime(long timeStamp){
 2968              		.loc 1 826 0
 2969              		.cfi_startproc
 2970              		@ args = 0, pretend = 0, frame = 24
 2971              		@ frame_needed = 1, uses_anonymous_args = 0
 2972 0000 80B5     		push	{r7, lr}
 2973              		.cfi_def_cfa_offset 8
 2974              		.cfi_offset 7, -8
 2975              		.cfi_offset 14, -4
 2976 0002 86B0     		sub	sp, sp, #24
 2977              		.cfi_def_cfa_offset 32
 2978 0004 00AF     		add	r7, sp, #0
 2979              		.cfi_def_cfa_register 7
 2980 0006 7860     		str	r0, [r7, #4]
 827:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 828:notoriOS.c    ****     if(timeStamp <=0){
 2981              		.loc 1 828 0
 2982 0008 7B68     		ldr	r3, [r7, #4]
 2983 000a 002B     		cmp	r3, #0
 2984 000c 05DC     		bgt	.L79
 829:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 2985              		.loc 1 829 0
 2986 000e 1849     		ldr	r1, .L81
 2987 0010 0220     		movs	r0, #2
 2988 0012 FFF7FEFF 		bl	printNotif
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 73


 830:notoriOS.c    ****         return 0;  
 2989              		.loc 1 830 0
 2990 0016 0023     		movs	r3, #0
 2991 0018 25E0     		b	.L80
 2992              	.L79:
 831:notoriOS.c    ****     }
 832:notoriOS.c    ****     // Create a new pointer t of data structure tm
 833:notoriOS.c    ****     struct tm * t;
 834:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 835:notoriOS.c    ****     t = gmtime(&timeStamp);
 2993              		.loc 1 835 0
 2994 001a 3B1D     		adds	r3, r7, #4
 2995 001c 1846     		mov	r0, r3
 2996 001e FFF7FEFF 		bl	gmtime
 2997 0022 7861     		str	r0, [r7, #20]
 836:notoriOS.c    ****     
 837:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 838:notoriOS.c    ****     RTC_TIME_DATE localTime;
 839:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 2998              		.loc 1 839 0
 2999 0024 7B69     		ldr	r3, [r7, #20]
 3000 0026 1B68     		ldr	r3, [r3]
 3001 0028 DBB2     		uxtb	r3, r3
 3002 002a 3B72     		strb	r3, [r7, #8]
 840:notoriOS.c    ****     localTime.Min = t->tm_min;
 3003              		.loc 1 840 0
 3004 002c 7B69     		ldr	r3, [r7, #20]
 3005 002e 5B68     		ldr	r3, [r3, #4]
 3006 0030 DBB2     		uxtb	r3, r3
 3007 0032 7B72     		strb	r3, [r7, #9]
 841:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 3008              		.loc 1 841 0
 3009 0034 7B69     		ldr	r3, [r7, #20]
 3010 0036 9B68     		ldr	r3, [r3, #8]
 3011 0038 DBB2     		uxtb	r3, r3
 3012 003a BB72     		strb	r3, [r7, #10]
 842:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 3013              		.loc 1 842 0
 3014 003c 7B69     		ldr	r3, [r7, #20]
 3015 003e 5B69     		ldr	r3, [r3, #20]
 3016 0040 9BB2     		uxth	r3, r3
 3017 0042 03F26C73 		addw	r3, r3, #1900
 3018 0046 9BB2     		uxth	r3, r3
 3019 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 843:notoriOS.c    ****     localTime.Month = t->tm_mon;
 3020              		.loc 1 843 0
 3021 004a 7B69     		ldr	r3, [r7, #20]
 3022 004c 1B69     		ldr	r3, [r3, #16]
 3023 004e DBB2     		uxtb	r3, r3
 3024 0050 3B74     		strb	r3, [r7, #16]
 844:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 3025              		.loc 1 844 0
 3026 0052 7B69     		ldr	r3, [r7, #20]
 3027 0054 DB68     		ldr	r3, [r3, #12]
 3028 0056 DBB2     		uxtb	r3, r3
 3029 0058 3B73     		strb	r3, [r7, #12]
 845:notoriOS.c    **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 74


 846:notoriOS.c    ****     // Writes time and date values as current time and date.
 847:notoriOS.c    ****     RTC_WriteTime(&localTime);
 3030              		.loc 1 847 0
 3031 005a 07F10803 		add	r3, r7, #8
 3032 005e 1846     		mov	r0, r3
 3033 0060 FFF7FEFF 		bl	RTC_WriteTime
 848:notoriOS.c    ****     
 849:notoriOS.c    ****     // Return 1 when the system time was set properly.
 850:notoriOS.c    ****     return 1;
 3034              		.loc 1 850 0
 3035 0064 0123     		movs	r3, #1
 3036              	.L80:
 851:notoriOS.c    **** }
 3037              		.loc 1 851 0
 3038 0066 1846     		mov	r0, r3
 3039 0068 1837     		adds	r7, r7, #24
 3040              		.cfi_def_cfa_offset 8
 3041 006a BD46     		mov	sp, r7
 3042              		.cfi_def_cfa_register 13
 3043              		@ sp needed
 3044 006c 80BD     		pop	{r7, pc}
 3045              	.L82:
 3046 006e 00BF     		.align	2
 3047              	.L81:
 3048 0070 B8060000 		.word	.LC83
 3049              		.cfi_endproc
 3050              	.LFE77:
 3051              		.size	setTime, .-setTime
 3052              		.section	.rodata
 3053 06d3 00       		.align	2
 3054              	.LC84:
 3055 06d4 75706772 		.ascii	"upgrade.hex\000"
 3055      6164652E 
 3055      68657800 
 3056              		.section	.text.upgraded,"ax",%progbits
 3057              		.align	2
 3058              		.global	upgraded
 3059              		.thumb
 3060              		.thumb_func
 3061              		.type	upgraded, %function
 3062              	upgraded:
 3063              	.LFB78:
 852:notoriOS.c    **** 
 853:notoriOS.c    **** //downloads and stores files on SD card
 854:notoriOS.c    **** 
 855:notoriOS.c    **** 
 856:notoriOS.c    **** 
 857:notoriOS.c    **** // ==============================================
 858:notoriOS.c    **** // Will they love it, will they hate it
 859:notoriOS.c    **** // Never fade it, I evade it
 860:notoriOS.c    **** // Cause I never really want to complicate it
 861:notoriOS.c    **** //      - Logic, Upgraded (2015)
 862:notoriOS.c    **** //
 863:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 864:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 865:notoriOS.c    **** // ==============================================
 866:notoriOS.c    **** 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 75


 867:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 3064              		.loc 1 867 0
 3065              		.cfi_startproc
 3066              		@ args = 0, pretend = 0, frame = 232
 3067              		@ frame_needed = 1, uses_anonymous_args = 0
 3068 0000 80B5     		push	{r7, lr}
 3069              		.cfi_def_cfa_offset 8
 3070              		.cfi_offset 7, -8
 3071              		.cfi_offset 14, -4
 3072 0002 C0B0     		sub	sp, sp, #256
 3073              		.cfi_def_cfa_offset 264
 3074 0004 06AF     		add	r7, sp, #24
 3075              		.cfi_def_cfa 7, 240
 3076 0006 F860     		str	r0, [r7, #12]
 3077 0008 B960     		str	r1, [r7, #8]
 3078 000a 7A60     		str	r2, [r7, #4]
 868:notoriOS.c    ****     
 869:notoriOS.c    ****     uint8 upgrade_status = 0;
 3079              		.loc 1 869 0
 3080 000c 0023     		movs	r3, #0
 3081 000e 87F8E730 		strb	r3, [r7, #231]
 870:notoriOS.c    ****     
 871:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 872:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 3082              		.loc 1 872 0
 3083 0012 384B     		ldr	r3, .L87
 3084 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3085 0016 042B     		cmp	r3, #4
 3086 0018 02D0     		beq	.L84
 873:notoriOS.c    ****         return upgrade_status;//where valid = 0
 3087              		.loc 1 873 0
 3088 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 3089 001e 65E0     		b	.L86
 3090              	.L84:
 874:notoriOS.c    ****     }
 875:notoriOS.c    ****     
 876:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 3091              		.loc 1 876 0
 3092 0020 354A     		ldr	r2, .L87+4
 3093 0022 07F1D803 		add	r3, r7, #216
 3094 0026 07CA     		ldmia	r2, {r0, r1, r2}
 3095 0028 83E80700 		stmia	r3, {r0, r1, r2}
 877:notoriOS.c    ****     //delete file, if one exisits already
 878:notoriOS.c    ****     SD_rmfile(fileName);
 3096              		.loc 1 878 0
 3097 002c 07F1D803 		add	r3, r7, #216
 3098 0030 1846     		mov	r0, r3
 3099 0032 FFF7FEFF 		bl	SD_rmfile
 879:notoriOS.c    ****     
 880:notoriOS.c    ****     // Create http request
 881:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 3100              		.loc 1 881 0
 3101 0036 314B     		ldr	r3, .L87+8
 3102 0038 0593     		str	r3, [sp, #20]
 3103 003a 0023     		movs	r3, #0
 3104 003c 0493     		str	r3, [sp, #16]
 3105 003e 304B     		ldr	r3, .L87+12
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 76


 3106 0040 0393     		str	r3, [sp, #12]
 3107 0042 304B     		ldr	r3, .L87+16
 3108 0044 0293     		str	r3, [sp, #8]
 3109 0046 304B     		ldr	r3, .L87+20
 3110 0048 0193     		str	r3, [sp, #4]
 3111 004a BB68     		ldr	r3, [r7, #8]
 3112 004c 0093     		str	r3, [sp]
 3113 004e 7B68     		ldr	r3, [r7, #4]
 3114 0050 FA68     		ldr	r2, [r7, #12]
 3115 0052 2E49     		ldr	r1, .L87+24
 3116 0054 2E48     		ldr	r0, .L87+28
 3117 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 882:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 3118              		.loc 1 882 0
 3119 005a 2D4A     		ldr	r2, .L87+28
 3120 005c 2D49     		ldr	r1, .L87+32
 3121 005e 0020     		movs	r0, #0
 3122 0060 FFF7FEFF 		bl	printNotif
 883:notoriOS.c    ****     // Create array portConfig of size 200 characters
 884:notoriOS.c    ****     char portConfig[200];
 885:notoriOS.c    ****     // Print port configurations
 886:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 3123              		.loc 1 886 0
 3124 0064 07F11000 		add	r0, r7, #16
 3125 0068 FB68     		ldr	r3, [r7, #12]
 3126 006a 0093     		str	r3, [sp]
 3127 006c BB68     		ldr	r3, [r7, #8]
 3128 006e 2A4A     		ldr	r2, .L87+36
 3129 0070 C821     		movs	r1, #200
 3130 0072 FFF7FEFF 		bl	snprintf
 887:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 3131              		.loc 1 887 0
 3132 0076 07F11003 		add	r3, r7, #16
 3133 007a 1A46     		mov	r2, r3
 3134 007c 2749     		ldr	r1, .L87+40
 3135 007e 0020     		movs	r0, #0
 3136 0080 FFF7FEFF 		bl	printNotif
 888:notoriOS.c    ****     // AT command to configure the port
 889:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 3137              		.loc 1 889 0
 3138 0084 07F11003 		add	r3, r7, #16
 3139 0088 42F21072 		movw	r2, #10000
 3140 008c 2449     		ldr	r1, .L87+44
 3141 008e 1846     		mov	r0, r3
 3142 0090 FFF7FEFF 		bl	at_write_command
 3143 0094 0346     		mov	r3, r0
 3144 0096 87F8E730 		strb	r3, [r7, #231]
 890:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 891:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 892:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 3145              		.loc 1 892 0
 3146 009a 4FF47A72 		mov	r2, #1000
 3147 009e 2149     		ldr	r1, .L87+48
 3148 00a0 2148     		ldr	r0, .L87+52
 3149 00a2 FFF7FEFF 		bl	at_write_command
 3150 00a6 0346     		mov	r3, r0
 3151 00a8 87F8E730 		strb	r3, [r7, #231]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 77


 893:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 894:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 3152              		.loc 1 894 0
 3153 00ac 1848     		ldr	r0, .L87+28
 3154 00ae FFF7FEFF 		bl	strlen
 3155 00b2 0346     		mov	r3, r0
 3156 00b4 1A46     		mov	r2, r3
 3157 00b6 164B     		ldr	r3, .L87+28
 3158 00b8 1344     		add	r3, r3, r2
 3159 00ba 1C49     		ldr	r1, .L87+56
 3160 00bc 1A46     		mov	r2, r3
 3161 00be 0B46     		mov	r3, r1
 3162 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 3163 00c2 1380     		strh	r3, [r2]	@ unaligned
 895:notoriOS.c    ****     // AT command to send http request
 896:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
 3164              		.loc 1 896 0
 3165 00c4 41F28832 		movw	r2, #5000
 3166 00c8 1549     		ldr	r1, .L87+44
 3167 00ca 1148     		ldr	r0, .L87+28
 3168 00cc FFF7FEFF 		bl	at_write_command
 3169 00d0 0346     		mov	r3, r0
 3170 00d2 87F8E730 		strb	r3, [r7, #231]
 897:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 898:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 899:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 3171              		.loc 1 899 0
 3172 00d6 41F28832 		movw	r2, #5000
 3173 00da 1549     		ldr	r1, .L87+60
 3174 00dc 1548     		ldr	r0, .L87+64
 3175 00de FFF7FEFF 		bl	at_write_command
 3176 00e2 0346     		mov	r3, r0
 3177 00e4 87F8E730 		strb	r3, [r7, #231]
 900:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 901:notoriOS.c    ****     
 902:notoriOS.c    ****     
 903:notoriOS.c    ****     return upgrade_status;
 3178              		.loc 1 903 0
 3179 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 3180              	.L86:
 904:notoriOS.c    ****     
 905:notoriOS.c    **** }
 3181              		.loc 1 905 0 discriminator 1
 3182 00ec 1846     		mov	r0, r3
 3183 00ee E837     		adds	r7, r7, #232
 3184              		.cfi_def_cfa_offset 8
 3185 00f0 BD46     		mov	sp, r7
 3186              		.cfi_def_cfa_register 13
 3187              		@ sp needed
 3188 00f2 80BD     		pop	{r7, pc}
 3189              	.L88:
 3190              		.align	2
 3191              	.L87:
 3192 00f4 00000000 		.word	modem_state
 3193 00f8 D4060000 		.word	.LC84
 3194 00fc 48010000 		.word	.LC15
 3195 0100 4C010000 		.word	.LC16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 78


 3196 0104 50010000 		.word	.LC17
 3197 0108 58010000 		.word	.LC18
 3198 010c 00000000 		.word	http_body
 3199 0110 00000000 		.word	http_request
 3200 0114 60010000 		.word	.LC19
 3201 0118 78010000 		.word	.LC20
 3202 011c 94010000 		.word	.LC21
 3203 0120 98010000 		.word	.LC22
 3204 0124 C8010000 		.word	.LC25
 3205 0128 CC010000 		.word	.LC26
 3206 012c DC010000 		.word	.LC27
 3207 0130 F8010000 		.word	.LC30
 3208 0134 00020000 		.word	.LC31
 3209              		.cfi_endproc
 3210              	.LFE78:
 3211              		.size	upgraded, .-upgraded
 3212              		.text
 3213              	.Letext0:
 3214              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 3215              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 3216              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 3217              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 3218              		.file 6 "testing.h"
 3219              		.file 7 "level_sensor.h"
 3220              		.file 8 "sontek.h"
 3221              		.file 9 "voltages.h"
 3222              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 3223              		.file 11 "data.h"
 3224              		.file 12 "modem.h"
 3225              		.file 13 "notoriOS.h"
 3226              		.file 14 "Generated_Source\\PSoC5/core_cm3.h"
 3227              		.section	.debug_info,"",%progbits
 3228              	.Ldebug_info0:
 3229 0000 ED0C0000 		.4byte	0xced
 3230 0004 0400     		.2byte	0x4
 3231 0006 00000000 		.4byte	.Ldebug_abbrev0
 3232 000a 04       		.byte	0x4
 3233 000b 01       		.uleb128 0x1
 3234 000c 75000000 		.4byte	.LASF171
 3235 0010 0C       		.byte	0xc
 3236 0011 BE070000 		.4byte	.LASF172
 3237 0015 D5020000 		.4byte	.LASF173
 3238 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3239 001d 00000000 		.4byte	0
 3240 0021 00000000 		.4byte	.Ldebug_line0
 3241 0025 02       		.uleb128 0x2
 3242 0026 01       		.byte	0x1
 3243 0027 06       		.byte	0x6
 3244 0028 46000000 		.4byte	.LASF0
 3245 002c 02       		.uleb128 0x2
 3246 002d 01       		.byte	0x1
 3247 002e 08       		.byte	0x8
 3248 002f D0050000 		.4byte	.LASF1
 3249 0033 02       		.uleb128 0x2
 3250 0034 02       		.byte	0x2
 3251 0035 05       		.byte	0x5
 3252 0036 22040000 		.4byte	.LASF2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 79


 3253 003a 02       		.uleb128 0x2
 3254 003b 02       		.byte	0x2
 3255 003c 07       		.byte	0x7
 3256 003d 69020000 		.4byte	.LASF3
 3257 0041 03       		.uleb128 0x3
 3258 0042 26070000 		.4byte	.LASF9
 3259 0046 02       		.byte	0x2
 3260 0047 3F       		.byte	0x3f
 3261 0048 4C000000 		.4byte	0x4c
 3262 004c 02       		.uleb128 0x2
 3263 004d 04       		.byte	0x4
 3264 004e 05       		.byte	0x5
 3265 004f 03020000 		.4byte	.LASF4
 3266 0053 02       		.uleb128 0x2
 3267 0054 04       		.byte	0x4
 3268 0055 07       		.byte	0x7
 3269 0056 5F030000 		.4byte	.LASF5
 3270 005a 02       		.uleb128 0x2
 3271 005b 08       		.byte	0x8
 3272 005c 05       		.byte	0x5
 3273 005d 5E010000 		.4byte	.LASF6
 3274 0061 02       		.uleb128 0x2
 3275 0062 08       		.byte	0x8
 3276 0063 07       		.byte	0x7
 3277 0064 09010000 		.4byte	.LASF7
 3278 0068 04       		.uleb128 0x4
 3279 0069 04       		.byte	0x4
 3280 006a 05       		.byte	0x5
 3281 006b 696E7400 		.ascii	"int\000"
 3282 006f 02       		.uleb128 0x2
 3283 0070 04       		.byte	0x4
 3284 0071 07       		.byte	0x7
 3285 0072 0B030000 		.4byte	.LASF8
 3286 0076 03       		.uleb128 0x3
 3287 0077 C8050000 		.4byte	.LASF10
 3288 007b 03       		.byte	0x3
 3289 007c 2C       		.byte	0x2c
 3290 007d 41000000 		.4byte	0x41
 3291 0081 05       		.uleb128 0x5
 3292 0082 25020000 		.4byte	.LASF11
 3293 0086 04       		.byte	0x4
 3294 0087 9201     		.2byte	0x192
 3295 0089 2C000000 		.4byte	0x2c
 3296 008d 05       		.uleb128 0x5
 3297 008e DE050000 		.4byte	.LASF12
 3298 0092 04       		.byte	0x4
 3299 0093 9301     		.2byte	0x193
 3300 0095 3A000000 		.4byte	0x3a
 3301 0099 05       		.uleb128 0x5
 3302 009a 7C020000 		.4byte	.LASF13
 3303 009e 04       		.byte	0x4
 3304 009f 9401     		.2byte	0x194
 3305 00a1 53000000 		.4byte	0x53
 3306 00a5 05       		.uleb128 0x5
 3307 00a6 E5030000 		.4byte	.LASF14
 3308 00aa 04       		.byte	0x4
 3309 00ab 9501     		.2byte	0x195
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 80


 3310 00ad 25000000 		.4byte	0x25
 3311 00b1 05       		.uleb128 0x5
 3312 00b2 D3070000 		.4byte	.LASF15
 3313 00b6 04       		.byte	0x4
 3314 00b7 9601     		.2byte	0x196
 3315 00b9 33000000 		.4byte	0x33
 3316 00bd 05       		.uleb128 0x5
 3317 00be 43020000 		.4byte	.LASF16
 3318 00c2 04       		.byte	0x4
 3319 00c3 9701     		.2byte	0x197
 3320 00c5 4C000000 		.4byte	0x4c
 3321 00c9 02       		.uleb128 0x2
 3322 00ca 04       		.byte	0x4
 3323 00cb 04       		.byte	0x4
 3324 00cc 6D050000 		.4byte	.LASF17
 3325 00d0 02       		.uleb128 0x2
 3326 00d1 08       		.byte	0x8
 3327 00d2 04       		.byte	0x4
 3328 00d3 57080000 		.4byte	.LASF18
 3329 00d7 02       		.uleb128 0x2
 3330 00d8 01       		.byte	0x1
 3331 00d9 08       		.byte	0x8
 3332 00da 02070000 		.4byte	.LASF19
 3333 00de 02       		.uleb128 0x2
 3334 00df 08       		.byte	0x8
 3335 00e0 04       		.byte	0x4
 3336 00e1 E4060000 		.4byte	.LASF20
 3337 00e5 02       		.uleb128 0x2
 3338 00e6 04       		.byte	0x4
 3339 00e7 07       		.byte	0x7
 3340 00e8 9F040000 		.4byte	.LASF21
 3341 00ec 06       		.uleb128 0x6
 3342 00ed 04       		.byte	0x4
 3343 00ee D7000000 		.4byte	0xd7
 3344 00f2 07       		.uleb128 0x7
 3345 00f3 D7000000 		.4byte	0xd7
 3346 00f7 02010000 		.4byte	0x102
 3347 00fb 08       		.uleb128 0x8
 3348 00fc E5000000 		.4byte	0xe5
 3349 0100 17       		.byte	0x17
 3350 0101 00       		.byte	0
 3351 0102 09       		.uleb128 0x9
 3352 0103 0C       		.byte	0xc
 3353 0104 05       		.byte	0x5
 3354 0105 30       		.byte	0x30
 3355 0106 6B010000 		.4byte	0x16b
 3356 010a 0A       		.uleb128 0xa
 3357 010b 53656300 		.ascii	"Sec\000"
 3358 010f 05       		.byte	0x5
 3359 0110 32       		.byte	0x32
 3360 0111 81000000 		.4byte	0x81
 3361 0115 00       		.byte	0
 3362 0116 0A       		.uleb128 0xa
 3363 0117 4D696E00 		.ascii	"Min\000"
 3364 011b 05       		.byte	0x5
 3365 011c 33       		.byte	0x33
 3366 011d 81000000 		.4byte	0x81
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 81


 3367 0121 01       		.byte	0x1
 3368 0122 0B       		.uleb128 0xb
 3369 0123 20010000 		.4byte	.LASF22
 3370 0127 05       		.byte	0x5
 3371 0128 34       		.byte	0x34
 3372 0129 81000000 		.4byte	0x81
 3373 012d 02       		.byte	0x2
 3374 012e 0B       		.uleb128 0xb
 3375 012f 39060000 		.4byte	.LASF23
 3376 0133 05       		.byte	0x5
 3377 0134 35       		.byte	0x35
 3378 0135 81000000 		.4byte	0x81
 3379 0139 03       		.byte	0x3
 3380 013a 0B       		.uleb128 0xb
 3381 013b A0030000 		.4byte	.LASF24
 3382 013f 05       		.byte	0x5
 3383 0140 36       		.byte	0x36
 3384 0141 81000000 		.4byte	0x81
 3385 0145 04       		.byte	0x4
 3386 0146 0B       		.uleb128 0xb
 3387 0147 0C080000 		.4byte	.LASF25
 3388 014b 05       		.byte	0x5
 3389 014c 37       		.byte	0x37
 3390 014d 8D000000 		.4byte	0x8d
 3391 0151 06       		.byte	0x6
 3392 0152 0B       		.uleb128 0xb
 3393 0153 03010000 		.4byte	.LASF26
 3394 0157 05       		.byte	0x5
 3395 0158 38       		.byte	0x38
 3396 0159 81000000 		.4byte	0x81
 3397 015d 08       		.byte	0x8
 3398 015e 0B       		.uleb128 0xb
 3399 015f BD050000 		.4byte	.LASF27
 3400 0163 05       		.byte	0x5
 3401 0164 39       		.byte	0x39
 3402 0165 8D000000 		.4byte	0x8d
 3403 0169 0A       		.byte	0xa
 3404 016a 00       		.byte	0
 3405 016b 03       		.uleb128 0x3
 3406 016c 12050000 		.4byte	.LASF28
 3407 0170 05       		.byte	0x5
 3408 0171 3A       		.byte	0x3a
 3409 0172 76010000 		.4byte	0x176
 3410 0176 0C       		.uleb128 0xc
 3411 0177 02010000 		.4byte	0x102
 3412 017b 0D       		.uleb128 0xd
 3413 017c 8101     		.2byte	0x181
 3414 017e 06       		.byte	0x6
 3415 017f 0A       		.byte	0xa
 3416 0180 A9010000 		.4byte	0x1a9
 3417 0184 0B       		.uleb128 0xb
 3418 0185 B3050000 		.4byte	.LASF29
 3419 0189 06       		.byte	0x6
 3420 018a 0C       		.byte	0xc
 3421 018b A9010000 		.4byte	0x1a9
 3422 018f 00       		.byte	0
 3423 0190 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 82


 3424 0191 97070000 		.4byte	.LASF30
 3425 0195 06       		.byte	0x6
 3426 0196 0D       		.byte	0xd
 3427 0197 81000000 		.4byte	0x81
 3428 019b 80       		.byte	0x80
 3429 019c 0B       		.uleb128 0xb
 3430 019d 5B060000 		.4byte	.LASF31
 3431 01a1 06       		.byte	0x6
 3432 01a2 0F       		.byte	0xf
 3433 01a3 B9010000 		.4byte	0x1b9
 3434 01a7 81       		.byte	0x81
 3435 01a8 00       		.byte	0
 3436 01a9 07       		.uleb128 0x7
 3437 01aa D7000000 		.4byte	0xd7
 3438 01ae B9010000 		.4byte	0x1b9
 3439 01b2 08       		.uleb128 0x8
 3440 01b3 E5000000 		.4byte	0xe5
 3441 01b7 7F       		.byte	0x7f
 3442 01b8 00       		.byte	0
 3443 01b9 07       		.uleb128 0x7
 3444 01ba D7000000 		.4byte	0xd7
 3445 01be C9010000 		.4byte	0x1c9
 3446 01c2 08       		.uleb128 0x8
 3447 01c3 E5000000 		.4byte	0xe5
 3448 01c7 FF       		.byte	0xff
 3449 01c8 00       		.byte	0
 3450 01c9 03       		.uleb128 0x3
 3451 01ca 43060000 		.4byte	.LASF32
 3452 01ce 06       		.byte	0x6
 3453 01cf 10       		.byte	0x10
 3454 01d0 7B010000 		.4byte	0x17b
 3455 01d4 09       		.uleb128 0x9
 3456 01d5 1A       		.byte	0x1a
 3457 01d6 07       		.byte	0x7
 3458 01d7 10       		.byte	0x10
 3459 01d8 0D020000 		.4byte	0x20d
 3460 01dc 0B       		.uleb128 0xb
 3461 01dd 8C020000 		.4byte	.LASF33
 3462 01e1 07       		.byte	0x7
 3463 01e2 11       		.byte	0x11
 3464 01e3 0D020000 		.4byte	0x20d
 3465 01e7 00       		.byte	0
 3466 01e8 0B       		.uleb128 0xb
 3467 01e9 4E070000 		.4byte	.LASF34
 3468 01ed 07       		.byte	0x7
 3469 01ee 12       		.byte	0x12
 3470 01ef B1000000 		.4byte	0xb1
 3471 01f3 16       		.byte	0x16
 3472 01f4 0B       		.uleb128 0xb
 3473 01f5 37030000 		.4byte	.LASF35
 3474 01f9 07       		.byte	0x7
 3475 01fa 13       		.byte	0x13
 3476 01fb 81000000 		.4byte	0x81
 3477 01ff 18       		.byte	0x18
 3478 0200 0B       		.uleb128 0xb
 3479 0201 18000000 		.4byte	.LASF36
 3480 0205 07       		.byte	0x7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 83


 3481 0206 14       		.byte	0x14
 3482 0207 81000000 		.4byte	0x81
 3483 020b 19       		.byte	0x19
 3484 020c 00       		.byte	0
 3485 020d 07       		.uleb128 0x7
 3486 020e B1000000 		.4byte	0xb1
 3487 0212 1D020000 		.4byte	0x21d
 3488 0216 08       		.uleb128 0x8
 3489 0217 E5000000 		.4byte	0xe5
 3490 021b 0A       		.byte	0xa
 3491 021c 00       		.byte	0
 3492 021d 03       		.uleb128 0x3
 3493 021e 73050000 		.4byte	.LASF37
 3494 0222 07       		.byte	0x7
 3495 0223 15       		.byte	0x15
 3496 0224 D4010000 		.4byte	0x1d4
 3497 0228 06       		.uleb128 0x6
 3498 0229 04       		.byte	0x4
 3499 022a EC000000 		.4byte	0xec
 3500 022e 06       		.uleb128 0x6
 3501 022f 04       		.byte	0x4
 3502 0230 C9000000 		.4byte	0xc9
 3503 0234 09       		.uleb128 0x9
 3504 0235 E4       		.byte	0xe4
 3505 0236 08       		.byte	0x8
 3506 0237 1D       		.byte	0x1d
 3507 0238 E5020000 		.4byte	0x2e5
 3508 023c 0B       		.uleb128 0xb
 3509 023d BE020000 		.4byte	.LASF38
 3510 0241 08       		.byte	0x8
 3511 0242 1F       		.byte	0x1f
 3512 0243 81000000 		.4byte	0x81
 3513 0247 00       		.byte	0
 3514 0248 0B       		.uleb128 0xb
 3515 0249 34060000 		.4byte	.LASF39
 3516 024d 08       		.byte	0x8
 3517 024e 20       		.byte	0x20
 3518 024f 81000000 		.4byte	0x81
 3519 0253 01       		.byte	0x1
 3520 0254 0B       		.uleb128 0xb
 3521 0255 25010000 		.4byte	.LASF40
 3522 0259 08       		.byte	0x8
 3523 025a 22       		.byte	0x22
 3524 025b 2E020000 		.4byte	0x22e
 3525 025f 04       		.byte	0x4
 3526 0260 0B       		.uleb128 0xb
 3527 0261 B7070000 		.4byte	.LASF41
 3528 0265 08       		.byte	0x8
 3529 0266 23       		.byte	0x23
 3530 0267 28020000 		.4byte	0x228
 3531 026b 08       		.byte	0x8
 3532 026c 0B       		.uleb128 0xb
 3533 026d A8040000 		.4byte	.LASF42
 3534 0271 08       		.byte	0x8
 3535 0272 25       		.byte	0x25
 3536 0273 E5020000 		.4byte	0x2e5
 3537 0277 0C       		.byte	0xc
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 84


 3538 0278 0B       		.uleb128 0xb
 3539 0279 AE040000 		.4byte	.LASF43
 3540 027d 08       		.byte	0x8
 3541 027e 25       		.byte	0x25
 3542 027f F5020000 		.4byte	0x2f5
 3543 0283 1C       		.byte	0x1c
 3544 0284 0B       		.uleb128 0xb
 3545 0285 FB020000 		.4byte	.LASF44
 3546 0289 08       		.byte	0x8
 3547 028a 25       		.byte	0x25
 3548 028b 05030000 		.4byte	0x305
 3549 028f 30       		.byte	0x30
 3550 0290 0B       		.uleb128 0xb
 3551 0291 B4040000 		.4byte	.LASF45
 3552 0295 08       		.byte	0x8
 3553 0296 25       		.byte	0x25
 3554 0297 05030000 		.4byte	0x305
 3555 029b 48       		.byte	0x48
 3556 029c 0B       		.uleb128 0xb
 3557 029d BA040000 		.4byte	.LASF46
 3558 02a1 08       		.byte	0x8
 3559 02a2 25       		.byte	0x25
 3560 02a3 05030000 		.4byte	0x305
 3561 02a7 60       		.byte	0x60
 3562 02a8 0B       		.uleb128 0xb
 3563 02a9 C0040000 		.4byte	.LASF47
 3564 02ad 08       		.byte	0x8
 3565 02ae 25       		.byte	0x25
 3566 02af 05030000 		.4byte	0x305
 3567 02b3 78       		.byte	0x78
 3568 02b4 0B       		.uleb128 0xb
 3569 02b5 C6040000 		.4byte	.LASF48
 3570 02b9 08       		.byte	0x8
 3571 02ba 25       		.byte	0x25
 3572 02bb 05030000 		.4byte	0x305
 3573 02bf 90       		.byte	0x90
 3574 02c0 0B       		.uleb128 0xb
 3575 02c1 CC040000 		.4byte	.LASF49
 3576 02c5 08       		.byte	0x8
 3577 02c6 25       		.byte	0x25
 3578 02c7 05030000 		.4byte	0x305
 3579 02cb A8       		.byte	0xa8
 3580 02cc 0B       		.uleb128 0xb
 3581 02cd D2040000 		.4byte	.LASF50
 3582 02d1 08       		.byte	0x8
 3583 02d2 25       		.byte	0x25
 3584 02d3 E5020000 		.4byte	0x2e5
 3585 02d7 C0       		.byte	0xc0
 3586 02d8 0B       		.uleb128 0xb
 3587 02d9 39070000 		.4byte	.LASF51
 3588 02dd 08       		.byte	0x8
 3589 02de 25       		.byte	0x25
 3590 02df F5020000 		.4byte	0x2f5
 3591 02e3 D0       		.byte	0xd0
 3592 02e4 00       		.byte	0
 3593 02e5 07       		.uleb128 0x7
 3594 02e6 C9000000 		.4byte	0xc9
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 85


 3595 02ea F5020000 		.4byte	0x2f5
 3596 02ee 08       		.uleb128 0x8
 3597 02ef E5000000 		.4byte	0xe5
 3598 02f3 03       		.byte	0x3
 3599 02f4 00       		.byte	0
 3600 02f5 07       		.uleb128 0x7
 3601 02f6 C9000000 		.4byte	0xc9
 3602 02fa 05030000 		.4byte	0x305
 3603 02fe 08       		.uleb128 0x8
 3604 02ff E5000000 		.4byte	0xe5
 3605 0303 04       		.byte	0x4
 3606 0304 00       		.byte	0
 3607 0305 07       		.uleb128 0x7
 3608 0306 C9000000 		.4byte	0xc9
 3609 030a 15030000 		.4byte	0x315
 3610 030e 08       		.uleb128 0x8
 3611 030f E5000000 		.4byte	0xe5
 3612 0313 05       		.byte	0x5
 3613 0314 00       		.byte	0
 3614 0315 03       		.uleb128 0x3
 3615 0316 07070000 		.4byte	.LASF52
 3616 031a 08       		.byte	0x8
 3617 031b 28       		.byte	0x28
 3618 031c 34020000 		.4byte	0x234
 3619 0320 09       		.uleb128 0x9
 3620 0321 14       		.byte	0x14
 3621 0322 09       		.byte	0x9
 3622 0323 11       		.byte	0x11
 3623 0324 65030000 		.4byte	0x365
 3624 0328 0B       		.uleb128 0xb
 3625 0329 90030000 		.4byte	.LASF53
 3626 032d 09       		.byte	0x9
 3627 032e 12       		.byte	0x12
 3628 032f C9000000 		.4byte	0xc9
 3629 0333 00       		.byte	0
 3630 0334 0B       		.uleb128 0xb
 3631 0335 AA010000 		.4byte	.LASF54
 3632 0339 09       		.byte	0x9
 3633 033a 13       		.byte	0x13
 3634 033b C9000000 		.4byte	0xc9
 3635 033f 04       		.byte	0x4
 3636 0340 0B       		.uleb128 0xb
 3637 0341 B8010000 		.4byte	.LASF55
 3638 0345 09       		.byte	0x9
 3639 0346 14       		.byte	0x14
 3640 0347 C9000000 		.4byte	0xc9
 3641 034b 08       		.byte	0x8
 3642 034c 0B       		.uleb128 0xb
 3643 034d 4F050000 		.4byte	.LASF56
 3644 0351 09       		.byte	0x9
 3645 0352 15       		.byte	0x15
 3646 0353 C9000000 		.4byte	0xc9
 3647 0357 0C       		.byte	0xc
 3648 0358 0B       		.uleb128 0xb
 3649 0359 CC060000 		.4byte	.LASF57
 3650 035d 09       		.byte	0x9
 3651 035e 16       		.byte	0x16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 86


 3652 035f 81000000 		.4byte	0x81
 3653 0363 10       		.byte	0x10
 3654 0364 00       		.byte	0
 3655 0365 03       		.uleb128 0x3
 3656 0366 5E080000 		.4byte	.LASF58
 3657 036a 09       		.byte	0x9
 3658 036b 17       		.byte	0x17
 3659 036c 20030000 		.4byte	0x320
 3660 0370 09       		.uleb128 0x9
 3661 0371 08       		.byte	0x8
 3662 0372 09       		.byte	0x9
 3663 0373 19       		.byte	0x19
 3664 0374 91030000 		.4byte	0x391
 3665 0378 0B       		.uleb128 0xb
 3666 0379 BB060000 		.4byte	.LASF59
 3667 037d 09       		.byte	0x9
 3668 037e 1A       		.byte	0x1a
 3669 037f C9000000 		.4byte	0xc9
 3670 0383 00       		.byte	0
 3671 0384 0B       		.uleb128 0xb
 3672 0385 20060000 		.4byte	.LASF60
 3673 0389 09       		.byte	0x9
 3674 038a 1B       		.byte	0x1b
 3675 038b C9000000 		.4byte	0xc9
 3676 038f 04       		.byte	0x4
 3677 0390 00       		.byte	0
 3678 0391 03       		.uleb128 0x3
 3679 0392 16080000 		.4byte	.LASF61
 3680 0396 09       		.byte	0x9
 3681 0397 1C       		.byte	0x1c
 3682 0398 70030000 		.4byte	0x370
 3683 039c 0E       		.uleb128 0xe
 3684 039d 746D00   		.ascii	"tm\000"
 3685 03a0 24       		.byte	0x24
 3686 03a1 0A       		.byte	0xa
 3687 03a2 21       		.byte	0x21
 3688 03a3 14040000 		.4byte	0x414
 3689 03a7 0B       		.uleb128 0xb
 3690 03a8 85070000 		.4byte	.LASF62
 3691 03ac 0A       		.byte	0xa
 3692 03ad 23       		.byte	0x23
 3693 03ae 68000000 		.4byte	0x68
 3694 03b2 00       		.byte	0
 3695 03b3 0B       		.uleb128 0xb
 3696 03b4 81040000 		.4byte	.LASF63
 3697 03b8 0A       		.byte	0xa
 3698 03b9 24       		.byte	0x24
 3699 03ba 68000000 		.4byte	0x68
 3700 03be 04       		.byte	0x4
 3701 03bf 0B       		.uleb128 0xb
 3702 03c0 08000000 		.4byte	.LASF64
 3703 03c4 0A       		.byte	0xa
 3704 03c5 25       		.byte	0x25
 3705 03c6 68000000 		.4byte	0x68
 3706 03ca 08       		.byte	0x8
 3707 03cb 0B       		.uleb128 0xb
 3708 03cc 74070000 		.4byte	.LASF65
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 87


 3709 03d0 0A       		.byte	0xa
 3710 03d1 26       		.byte	0x26
 3711 03d2 68000000 		.4byte	0x68
 3712 03d6 0C       		.byte	0xc
 3713 03d7 0B       		.uleb128 0xb
 3714 03d8 B7020000 		.4byte	.LASF66
 3715 03dc 0A       		.byte	0xa
 3716 03dd 27       		.byte	0x27
 3717 03de 68000000 		.4byte	0x68
 3718 03e2 10       		.byte	0x10
 3719 03e3 0B       		.uleb128 0xb
 3720 03e4 00000000 		.4byte	.LASF67
 3721 03e8 0A       		.byte	0xa
 3722 03e9 28       		.byte	0x28
 3723 03ea 68000000 		.4byte	0x68
 3724 03ee 14       		.byte	0x14
 3725 03ef 0B       		.uleb128 0xb
 3726 03f0 DC060000 		.4byte	.LASF68
 3727 03f4 0A       		.byte	0xa
 3728 03f5 29       		.byte	0x29
 3729 03f6 68000000 		.4byte	0x68
 3730 03fa 18       		.byte	0x18
 3731 03fb 0B       		.uleb128 0xb
 3732 03fc 10000000 		.4byte	.LASF69
 3733 0400 0A       		.byte	0xa
 3734 0401 2A       		.byte	0x2a
 3735 0402 68000000 		.4byte	0x68
 3736 0406 1C       		.byte	0x1c
 3737 0407 0B       		.uleb128 0xb
 3738 0408 C9030000 		.4byte	.LASF70
 3739 040c 0A       		.byte	0xa
 3740 040d 2B       		.byte	0x2b
 3741 040e 68000000 		.4byte	0x68
 3742 0412 20       		.byte	0x20
 3743 0413 00       		.byte	0
 3744 0414 09       		.uleb128 0x9
 3745 0415 2C       		.byte	0x2c
 3746 0416 0B       		.byte	0xb
 3747 0417 14       		.byte	0x14
 3748 0418 41040000 		.4byte	0x441
 3749 041c 0A       		.uleb128 0xa
 3750 041d 6B657900 		.ascii	"key\000"
 3751 0421 0B       		.byte	0xb
 3752 0422 15       		.byte	0x15
 3753 0423 41040000 		.4byte	0x441
 3754 0427 00       		.byte	0
 3755 0428 0B       		.uleb128 0xb
 3756 0429 F0020000 		.4byte	.LASF71
 3757 042d 0B       		.byte	0xb
 3758 042e 16       		.byte	0x16
 3759 042f 41040000 		.4byte	0x441
 3760 0433 14       		.byte	0x14
 3761 0434 0B       		.uleb128 0xb
 3762 0435 08050000 		.4byte	.LASF72
 3763 0439 0B       		.byte	0xb
 3764 043a 17       		.byte	0x17
 3765 043b BD000000 		.4byte	0xbd
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 88


 3766 043f 28       		.byte	0x28
 3767 0440 00       		.byte	0
 3768 0441 07       		.uleb128 0x7
 3769 0442 D7000000 		.4byte	0xd7
 3770 0446 51040000 		.4byte	0x451
 3771 044a 08       		.uleb128 0x8
 3772 044b E5000000 		.4byte	0xe5
 3773 044f 13       		.byte	0x13
 3774 0450 00       		.byte	0
 3775 0451 03       		.uleb128 0x3
 3776 0452 20030000 		.4byte	.LASF73
 3777 0456 0B       		.byte	0xb
 3778 0457 19       		.byte	0x19
 3779 0458 14040000 		.4byte	0x414
 3780 045c 09       		.uleb128 0x9
 3781 045d 3C       		.byte	0x3c
 3782 045e 0C       		.byte	0xc
 3783 045f 36       		.byte	0x36
 3784 0460 89040000 		.4byte	0x489
 3785 0464 0B       		.uleb128 0xb
 3786 0465 6D070000 		.4byte	.LASF74
 3787 0469 0C       		.byte	0xc
 3788 046a 37       		.byte	0x37
 3789 046b 41040000 		.4byte	0x441
 3790 046f 00       		.byte	0
 3791 0470 0B       		.uleb128 0xb
 3792 0471 83020000 		.4byte	.LASF75
 3793 0475 0C       		.byte	0xc
 3794 0476 38       		.byte	0x38
 3795 0477 41040000 		.4byte	0x441
 3796 047b 14       		.byte	0x14
 3797 047c 0B       		.uleb128 0xb
 3798 047d 56060000 		.4byte	.LASF76
 3799 0481 0C       		.byte	0xc
 3800 0482 39       		.byte	0x39
 3801 0483 41040000 		.4byte	0x441
 3802 0487 28       		.byte	0x28
 3803 0488 00       		.byte	0
 3804 0489 03       		.uleb128 0x3
 3805 048a F0010000 		.4byte	.LASF77
 3806 048e 0C       		.byte	0xc
 3807 048f 3B       		.byte	0x3b
 3808 0490 5C040000 		.4byte	0x45c
 3809 0494 09       		.uleb128 0x9
 3810 0495 20       		.byte	0x20
 3811 0496 0C       		.byte	0xc
 3812 0497 3D       		.byte	0x3d
 3813 0498 FD040000 		.4byte	0x4fd
 3814 049c 0B       		.uleb128 0xb
 3815 049d FD010000 		.4byte	.LASF78
 3816 04a1 0C       		.byte	0xc
 3817 04a2 3E       		.byte	0x3e
 3818 04a3 68000000 		.4byte	0x68
 3819 04a7 00       		.byte	0
 3820 04a8 0A       		.uleb128 0xa
 3821 04a9 62657200 		.ascii	"ber\000"
 3822 04ad 0C       		.byte	0xc
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 89


 3823 04ae 3F       		.byte	0x3f
 3824 04af 68000000 		.4byte	0x68
 3825 04b3 04       		.byte	0x4
 3826 04b4 0B       		.uleb128 0xb
 3827 04b5 2F060000 		.4byte	.LASF79
 3828 04b9 0C       		.byte	0xc
 3829 04ba 40       		.byte	0x40
 3830 04bb 68000000 		.4byte	0x68
 3831 04bf 08       		.byte	0x8
 3832 04c0 0B       		.uleb128 0xb
 3833 04c1 74010000 		.4byte	.LASF80
 3834 04c5 0C       		.byte	0xc
 3835 04c6 41       		.byte	0x41
 3836 04c7 68000000 		.4byte	0x68
 3837 04cb 0C       		.byte	0xc
 3838 04cc 0B       		.uleb128 0xb
 3839 04cd FA050000 		.4byte	.LASF81
 3840 04d1 0C       		.byte	0xc
 3841 04d2 42       		.byte	0x42
 3842 04d3 68000000 		.4byte	0x68
 3843 04d7 10       		.byte	0x10
 3844 04d8 0B       		.uleb128 0xb
 3845 04d9 F5050000 		.4byte	.LASF82
 3846 04dd 0C       		.byte	0xc
 3847 04de 43       		.byte	0x43
 3848 04df 68000000 		.4byte	0x68
 3849 04e3 14       		.byte	0x14
 3850 04e4 0B       		.uleb128 0xb
 3851 04e5 87010000 		.4byte	.LASF83
 3852 04e9 0C       		.byte	0xc
 3853 04ea 44       		.byte	0x44
 3854 04eb 68000000 		.4byte	0x68
 3855 04ef 18       		.byte	0x18
 3856 04f0 0B       		.uleb128 0xb
 3857 04f1 0C020000 		.4byte	.LASF84
 3858 04f5 0C       		.byte	0xc
 3859 04f6 45       		.byte	0x45
 3860 04f7 68000000 		.4byte	0x68
 3861 04fb 1C       		.byte	0x1c
 3862 04fc 00       		.byte	0
 3863 04fd 03       		.uleb128 0x3
 3864 04fe AD060000 		.4byte	.LASF85
 3865 0502 0C       		.byte	0xc
 3866 0503 47       		.byte	0x47
 3867 0504 94040000 		.4byte	0x494
 3868 0508 09       		.uleb128 0x9
 3869 0509 05       		.byte	0x5
 3870 050a 0C       		.byte	0xc
 3871 050b 53       		.byte	0x53
 3872 050c 4D050000 		.4byte	0x54d
 3873 0510 0B       		.uleb128 0xb
 3874 0511 49020000 		.4byte	.LASF86
 3875 0515 0C       		.byte	0xc
 3876 0516 55       		.byte	0x55
 3877 0517 81000000 		.4byte	0x81
 3878 051b 00       		.byte	0
 3879 051c 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 90


 3880 051d FD070000 		.4byte	.LASF87
 3881 0521 0C       		.byte	0xc
 3882 0522 57       		.byte	0x57
 3883 0523 4D050000 		.4byte	0x54d
 3884 0527 01       		.byte	0x1
 3885 0528 0B       		.uleb128 0xb
 3886 0529 4A080000 		.4byte	.LASF88
 3887 052d 0C       		.byte	0xc
 3888 052e 59       		.byte	0x59
 3889 052f 81000000 		.4byte	0x81
 3890 0533 02       		.byte	0x2
 3891 0534 0B       		.uleb128 0xb
 3892 0535 16060000 		.4byte	.LASF89
 3893 0539 0C       		.byte	0xc
 3894 053a 5B       		.byte	0x5b
 3895 053b 81000000 		.4byte	0x81
 3896 053f 03       		.byte	0x3
 3897 0540 0B       		.uleb128 0xb
 3898 0541 C4020000 		.4byte	.LASF90
 3899 0545 0C       		.byte	0xc
 3900 0546 5E       		.byte	0x5e
 3901 0547 81000000 		.4byte	0x81
 3902 054b 04       		.byte	0x4
 3903 054c 00       		.byte	0
 3904 054d 02       		.uleb128 0x2
 3905 054e 01       		.byte	0x1
 3906 054f 02       		.byte	0x2
 3907 0550 C2050000 		.4byte	.LASF91
 3908 0554 03       		.uleb128 0x3
 3909 0555 4E040000 		.4byte	.LASF92
 3910 0559 0C       		.byte	0xc
 3911 055a 60       		.byte	0x60
 3912 055b 08050000 		.4byte	0x508
 3913 055f 09       		.uleb128 0x9
 3914 0560 06       		.byte	0x6
 3915 0561 0D       		.byte	0xd
 3916 0562 2E       		.byte	0x2e
 3917 0563 98050000 		.4byte	0x598
 3918 0567 0B       		.uleb128 0xb
 3919 0568 9F020000 		.4byte	.LASF93
 3920 056c 0D       		.byte	0xd
 3921 056d 30       		.byte	0x30
 3922 056e 8D000000 		.4byte	0x8d
 3923 0572 00       		.byte	0
 3924 0573 0B       		.uleb128 0xb
 3925 0574 E7070000 		.4byte	.LASF94
 3926 0578 0D       		.byte	0xd
 3927 0579 31       		.byte	0x31
 3928 057a B1000000 		.4byte	0xb1
 3929 057e 02       		.byte	0x2
 3930 057f 0B       		.uleb128 0xb
 3931 0580 D9070000 		.4byte	.LASF95
 3932 0584 0D       		.byte	0xd
 3933 0585 32       		.byte	0x32
 3934 0586 81000000 		.4byte	0x81
 3935 058a 04       		.byte	0x4
 3936 058b 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 91


 3937 058c 52000000 		.4byte	.LASF96
 3938 0590 0D       		.byte	0xd
 3939 0591 33       		.byte	0x33
 3940 0592 81000000 		.4byte	0x81
 3941 0596 05       		.byte	0x5
 3942 0597 00       		.byte	0
 3943 0598 03       		.uleb128 0x3
 3944 0599 1F020000 		.4byte	.LASF97
 3945 059d 0D       		.byte	0xd
 3946 059e 36       		.byte	0x36
 3947 059f A3050000 		.4byte	0x5a3
 3948 05a3 0C       		.uleb128 0xc
 3949 05a4 5F050000 		.4byte	0x55f
 3950 05a8 09       		.uleb128 0x9
 3951 05a9 1C       		.byte	0x1c
 3952 05aa 0D       		.byte	0xd
 3953 05ab 39       		.byte	0x39
 3954 05ac C9050000 		.4byte	0x5c9
 3955 05b0 0B       		.uleb128 0xb
 3956 05b1 D2030000 		.4byte	.LASF98
 3957 05b5 0D       		.byte	0xd
 3958 05b6 3B       		.byte	0x3b
 3959 05b7 C9050000 		.4byte	0x5c9
 3960 05bb 00       		.byte	0
 3961 05bc 0B       		.uleb128 0xb
 3962 05bd 3C080000 		.4byte	.LASF99
 3963 05c1 0D       		.byte	0xd
 3964 05c2 3C       		.byte	0x3c
 3965 05c3 F2000000 		.4byte	0xf2
 3966 05c7 04       		.byte	0x4
 3967 05c8 00       		.byte	0
 3968 05c9 06       		.uleb128 0x6
 3969 05ca 04       		.byte	0x4
 3970 05cb 89040000 		.4byte	0x489
 3971 05cf 03       		.uleb128 0x3
 3972 05d0 43040000 		.4byte	.LASF100
 3973 05d4 0D       		.byte	0xd
 3974 05d5 3E       		.byte	0x3e
 3975 05d6 A8050000 		.4byte	0x5a8
 3976 05da 09       		.uleb128 0x9
 3977 05db 68       		.byte	0x68
 3978 05dc 0D       		.byte	0xd
 3979 05dd 44       		.byte	0x44
 3980 05de FB050000 		.4byte	0x5fb
 3981 05e2 0B       		.uleb128 0xb
 3982 05e3 DD030000 		.4byte	.LASF101
 3983 05e7 0D       		.byte	0xd
 3984 05e8 49       		.byte	0x49
 3985 05e9 FB050000 		.4byte	0x5fb
 3986 05ed 00       		.byte	0
 3987 05ee 0B       		.uleb128 0xb
 3988 05ef C1030000 		.4byte	.LASF102
 3989 05f3 0D       		.byte	0xd
 3990 05f4 4A       		.byte	0x4a
 3991 05f5 68000000 		.4byte	0x68
 3992 05f9 64       		.byte	0x64
 3993 05fa 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 92


 3994 05fb 07       		.uleb128 0x7
 3995 05fc D7000000 		.4byte	0xd7
 3996 0600 0B060000 		.4byte	0x60b
 3997 0604 08       		.uleb128 0x8
 3998 0605 E5000000 		.4byte	0xe5
 3999 0609 63       		.byte	0x63
 4000 060a 00       		.byte	0
 4001 060b 03       		.uleb128 0x3
 4002 060c D8040000 		.4byte	.LASF103
 4003 0610 0D       		.byte	0xd
 4004 0611 50       		.byte	0x50
 4005 0612 DA050000 		.4byte	0x5da
 4006 0616 0F       		.uleb128 0xf
 4007 0617 6A000000 		.4byte	.LASF174
 4008 061b 01       		.byte	0x1
 4009 061c 14       		.byte	0x14
 4010 061d 00000000 		.4byte	.LFB64
 4011 0621 0C000000 		.4byte	.LFE64-.LFB64
 4012 0625 01       		.uleb128 0x1
 4013 0626 9C       		.byte	0x9c
 4014 0627 10       		.uleb128 0x10
 4015 0628 2C080000 		.4byte	.LASF117
 4016 062c 01       		.byte	0x1
 4017 062d 28       		.byte	0x28
 4018 062e 00000000 		.4byte	.LFB65
 4019 0632 2C010000 		.4byte	.LFE65-.LFB65
 4020 0636 01       		.uleb128 0x1
 4021 0637 9C       		.byte	0x9c
 4022 0638 67060000 		.4byte	0x667
 4023 063c 11       		.uleb128 0x11
 4024 063d 30070000 		.4byte	.LASF104
 4025 0641 01       		.byte	0x1
 4026 0642 3E       		.byte	0x3e
 4027 0643 67060000 		.4byte	0x667
 4028 0647 02       		.uleb128 0x2
 4029 0648 91       		.byte	0x91
 4030 0649 64       		.sleb128 -28
 4031 064a 11       		.uleb128 0x11
 4032 064b 06080000 		.4byte	.LASF105
 4033 064f 01       		.byte	0x1
 4034 0650 5B       		.byte	0x5b
 4035 0651 77060000 		.4byte	0x677
 4036 0655 02       		.uleb128 0x2
 4037 0656 91       		.byte	0x91
 4038 0657 58       		.sleb128 -40
 4039 0658 11       		.uleb128 0x11
 4040 0659 71030000 		.4byte	.LASF106
 4041 065d 01       		.byte	0x1
 4042 065e 60       		.byte	0x60
 4043 065f 81000000 		.4byte	0x81
 4044 0663 02       		.uleb128 0x2
 4045 0664 91       		.byte	0x91
 4046 0665 6F       		.sleb128 -17
 4047 0666 00       		.byte	0
 4048 0667 07       		.uleb128 0x7
 4049 0668 99000000 		.4byte	0x99
 4050 066c 77060000 		.4byte	0x677
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 93


 4051 0670 08       		.uleb128 0x8
 4052 0671 E5000000 		.4byte	0xe5
 4053 0675 01       		.byte	0x1
 4054 0676 00       		.byte	0
 4055 0677 07       		.uleb128 0x7
 4056 0678 D7000000 		.4byte	0xd7
 4057 067c 87060000 		.4byte	0x687
 4058 0680 08       		.uleb128 0x8
 4059 0681 E5000000 		.4byte	0xe5
 4060 0685 09       		.byte	0x9
 4061 0686 00       		.byte	0
 4062 0687 12       		.uleb128 0x12
 4063 0688 EA030000 		.4byte	.LASF108
 4064 068c 01       		.byte	0x1
 4065 068d 6A       		.byte	0x6a
 4066 068e 68000000 		.4byte	0x68
 4067 0692 00000000 		.4byte	.LFB66
 4068 0696 64000000 		.4byte	.LFE66-.LFB66
 4069 069a 01       		.uleb128 0x1
 4070 069b 9C       		.byte	0x9c
 4071 069c AF060000 		.4byte	0x6af
 4072 06a0 11       		.uleb128 0x11
 4073 06a1 A6050000 		.4byte	.LASF107
 4074 06a5 01       		.byte	0x1
 4075 06a6 84       		.byte	0x84
 4076 06a7 81000000 		.4byte	0x81
 4077 06ab 02       		.uleb128 0x2
 4078 06ac 91       		.byte	0x91
 4079 06ad 77       		.sleb128 -9
 4080 06ae 00       		.byte	0
 4081 06af 13       		.uleb128 0x13
 4082 06b0 5C070000 		.4byte	.LASF175
 4083 06b4 01       		.byte	0x1
 4084 06b5 94       		.byte	0x94
 4085 06b6 00000000 		.4byte	.LFB67
 4086 06ba 2A000000 		.4byte	.LFE67-.LFB67
 4087 06be 01       		.uleb128 0x1
 4088 06bf 9C       		.byte	0x9c
 4089 06c0 14       		.uleb128 0x14
 4090 06c1 2C030000 		.4byte	.LASF109
 4091 06c5 01       		.byte	0x1
 4092 06c6 B9       		.byte	0xb9
 4093 06c7 00000000 		.4byte	.LFB68
 4094 06cb 50000000 		.4byte	.LFE68-.LFB68
 4095 06cf 01       		.uleb128 0x1
 4096 06d0 9C       		.byte	0x9c
 4097 06d1 E4060000 		.4byte	0x6e4
 4098 06d5 15       		.uleb128 0x15
 4099 06d6 65040000 		.4byte	.LASF110
 4100 06da 01       		.byte	0x1
 4101 06db B9       		.byte	0xb9
 4102 06dc 81000000 		.4byte	0x81
 4103 06e0 02       		.uleb128 0x2
 4104 06e1 91       		.byte	0x91
 4105 06e2 77       		.sleb128 -9
 4106 06e3 00       		.byte	0
 4107 06e4 16       		.uleb128 0x16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 94


 4108 06e5 21080000 		.4byte	.LASF114
 4109 06e9 01       		.byte	0x1
 4110 06ea D0       		.byte	0xd0
 4111 06eb 81000000 		.4byte	0x81
 4112 06ef 00000000 		.4byte	.LFB69
 4113 06f3 48000000 		.4byte	.LFE69-.LFB69
 4114 06f7 01       		.uleb128 0x1
 4115 06f8 9C       		.byte	0x9c
 4116 06f9 1A070000 		.4byte	0x71a
 4117 06fd 15       		.uleb128 0x15
 4118 06fe 8E040000 		.4byte	.LASF111
 4119 0702 01       		.byte	0x1
 4120 0703 D0       		.byte	0xd0
 4121 0704 1A070000 		.4byte	0x71a
 4122 0708 02       		.uleb128 0x2
 4123 0709 91       		.byte	0x91
 4124 070a 74       		.sleb128 -12
 4125 070b 15       		.uleb128 0x15
 4126 070c 65040000 		.4byte	.LASF110
 4127 0710 01       		.byte	0x1
 4128 0711 D0       		.byte	0xd0
 4129 0712 81000000 		.4byte	0x81
 4130 0716 02       		.uleb128 0x2
 4131 0717 91       		.byte	0x91
 4132 0718 73       		.sleb128 -13
 4133 0719 00       		.byte	0
 4134 071a 06       		.uleb128 0x6
 4135 071b 04       		.byte	0x4
 4136 071c 98050000 		.4byte	0x598
 4137 0720 17       		.uleb128 0x17
 4138 0721 FF050000 		.4byte	.LASF112
 4139 0725 01       		.byte	0x1
 4140 0726 E5       		.byte	0xe5
 4141 0727 00000000 		.4byte	.LFB70
 4142 072b 1E000000 		.4byte	.LFE70-.LFB70
 4143 072f 01       		.uleb128 0x1
 4144 0730 9C       		.byte	0x9c
 4145 0731 44070000 		.4byte	0x744
 4146 0735 15       		.uleb128 0x15
 4147 0736 62060000 		.4byte	.LASF113
 4148 073a 01       		.byte	0x1
 4149 073b E5       		.byte	0xe5
 4150 073c 1A070000 		.4byte	0x71a
 4151 0740 02       		.uleb128 0x2
 4152 0741 91       		.byte	0x91
 4153 0742 74       		.sleb128 -12
 4154 0743 00       		.byte	0
 4155 0744 18       		.uleb128 0x18
 4156 0745 35050000 		.4byte	.LASF115
 4157 0749 01       		.byte	0x1
 4158 074a EE       		.byte	0xee
 4159 074b 98050000 		.4byte	0x598
 4160 074f 00000000 		.4byte	.LFB71
 4161 0753 46000000 		.4byte	.LFE71-.LFB71
 4162 0757 01       		.uleb128 0x1
 4163 0758 9C       		.byte	0x9c
 4164 0759 96070000 		.4byte	0x796
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 95


 4165 075d 15       		.uleb128 0x15
 4166 075e 9F020000 		.4byte	.LASF93
 4167 0762 01       		.byte	0x1
 4168 0763 EE       		.byte	0xee
 4169 0764 8D000000 		.4byte	0x8d
 4170 0768 02       		.uleb128 0x2
 4171 0769 91       		.byte	0x91
 4172 076a 6A       		.sleb128 -22
 4173 076b 15       		.uleb128 0x15
 4174 076c D9070000 		.4byte	.LASF95
 4175 0770 01       		.byte	0x1
 4176 0771 EE       		.byte	0xee
 4177 0772 81000000 		.4byte	0x81
 4178 0776 02       		.uleb128 0x2
 4179 0777 91       		.byte	0x91
 4180 0778 69       		.sleb128 -23
 4181 0779 15       		.uleb128 0x15
 4182 077a 52000000 		.4byte	.LASF96
 4183 077e 01       		.byte	0x1
 4184 077f EE       		.byte	0xee
 4185 0780 81000000 		.4byte	0x81
 4186 0784 02       		.uleb128 0x2
 4187 0785 91       		.byte	0x91
 4188 0786 68       		.sleb128 -24
 4189 0787 11       		.uleb128 0x11
 4190 0788 7C070000 		.4byte	.LASF116
 4191 078c 01       		.byte	0x1
 4192 078d F1       		.byte	0xf1
 4193 078e 98050000 		.4byte	0x598
 4194 0792 02       		.uleb128 0x2
 4195 0793 91       		.byte	0x91
 4196 0794 70       		.sleb128 -16
 4197 0795 00       		.byte	0
 4198 0796 19       		.uleb128 0x19
 4199 0797 71060000 		.4byte	.LASF118
 4200 079b 01       		.byte	0x1
 4201 079c 0701     		.2byte	0x107
 4202 079e 00000000 		.4byte	.LFB72
 4203 07a2 4C000000 		.4byte	.LFE72-.LFB72
 4204 07a6 01       		.uleb128 0x1
 4205 07a7 9C       		.byte	0x9c
 4206 07a8 BD070000 		.4byte	0x7bd
 4207 07ac 1A       		.uleb128 0x1a
 4208 07ad 18040000 		.4byte	.LASF119
 4209 07b1 01       		.byte	0x1
 4210 07b2 5001     		.2byte	0x150
 4211 07b4 C9010000 		.4byte	0x1c9
 4212 07b8 03       		.uleb128 0x3
 4213 07b9 91       		.byte	0x91
 4214 07ba EC7C     		.sleb128 -404
 4215 07bc 00       		.byte	0
 4216 07bd 1B       		.uleb128 0x1b
 4217 07be 37080000 		.4byte	.LASF176
 4218 07c2 01       		.byte	0x1
 4219 07c3 5A01     		.2byte	0x15a
 4220 07c5 68000000 		.4byte	0x68
 4221 07c9 00000000 		.4byte	.LFB73
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 96


 4222 07cd 1E000000 		.4byte	.LFE73-.LFB73
 4223 07d1 01       		.uleb128 0x1
 4224 07d2 9C       		.byte	0x9c
 4225 07d3 1C       		.uleb128 0x1c
 4226 07d4 53020000 		.4byte	.LASF120
 4227 07d8 01       		.byte	0x1
 4228 07d9 7001     		.2byte	0x170
 4229 07db 81000000 		.4byte	0x81
 4230 07df 00000000 		.4byte	.LFB74
 4231 07e3 30040000 		.4byte	.LFE74-.LFB74
 4232 07e7 01       		.uleb128 0x1
 4233 07e8 9C       		.byte	0x9c
 4234 07e9 2D090000 		.4byte	0x92d
 4235 07ed 1D       		.uleb128 0x1d
 4236 07ee 62000000 		.4byte	.LBB2
 4237 07f2 B8030000 		.4byte	.LBE2-.LBB2
 4238 07f6 1A       		.uleb128 0x1a
 4239 07f7 48050000 		.4byte	.LASF121
 4240 07fb 01       		.byte	0x1
 4241 07fc A001     		.2byte	0x1a0
 4242 07fe 41040000 		.4byte	0x441
 4243 0802 02       		.uleb128 0x2
 4244 0803 91       		.byte	0x91
 4245 0804 48       		.sleb128 -56
 4246 0805 1A       		.uleb128 0x1a
 4247 0806 2B020000 		.4byte	.LASF122
 4248 080a 01       		.byte	0x1
 4249 080b A501     		.2byte	0x1a5
 4250 080d 41040000 		.4byte	0x441
 4251 0811 03       		.uleb128 0x3
 4252 0812 91       		.byte	0x91
 4253 0813 B47F     		.sleb128 -76
 4254 0815 1A       		.uleb128 0x1a
 4255 0816 7D030000 		.4byte	.LASF123
 4256 081a 01       		.byte	0x1
 4257 081b B801     		.2byte	0x1b8
 4258 081d 8D000000 		.4byte	0x8d
 4259 0821 02       		.uleb128 0x2
 4260 0822 91       		.byte	0x91
 4261 0823 66       		.sleb128 -26
 4262 0824 1A       		.uleb128 0x1a
 4263 0825 03040000 		.4byte	.LASF124
 4264 0829 01       		.byte	0x1
 4265 082a B901     		.2byte	0x1b9
 4266 082c 41040000 		.4byte	0x441
 4267 0830 03       		.uleb128 0x3
 4268 0831 91       		.byte	0x91
 4269 0832 A07F     		.sleb128 -96
 4270 0834 1A       		.uleb128 0x1a
 4271 0835 1B070000 		.4byte	.LASF125
 4272 0839 01       		.byte	0x1
 4273 083a CE01     		.2byte	0x1ce
 4274 083c 2D090000 		.4byte	0x92d
 4275 0840 03       		.uleb128 0x3
 4276 0841 91       		.byte	0x91
 4277 0842 B875     		.sleb128 -1352
 4278 0844 1A       		.uleb128 0x1a
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 97


 4279 0845 97070000 		.4byte	.LASF30
 4280 0849 01       		.byte	0x1
 4281 084a CF01     		.2byte	0x1cf
 4282 084c 81000000 		.4byte	0x81
 4283 0850 02       		.uleb128 0x2
 4284 0851 91       		.byte	0x91
 4285 0852 65       		.sleb128 -27
 4286 0853 1A       		.uleb128 0x1a
 4287 0854 F0060000 		.4byte	.LASF126
 4288 0858 01       		.byte	0x1
 4289 0859 D601     		.2byte	0x1d6
 4290 085b EC000000 		.4byte	0xec
 4291 085f 02       		.uleb128 0x2
 4292 0860 91       		.byte	0x91
 4293 0861 6C       		.sleb128 -20
 4294 0862 1A       		.uleb128 0x1a
 4295 0863 6C010000 		.4byte	.LASF127
 4296 0867 01       		.byte	0x1
 4297 0868 DA01     		.2byte	0x1da
 4298 086a A5000000 		.4byte	0xa5
 4299 086e 02       		.uleb128 0x2
 4300 086f 91       		.byte	0x91
 4301 0870 64       		.sleb128 -28
 4302 0871 1A       		.uleb128 0x1a
 4303 0872 5C020000 		.4byte	.LASF128
 4304 0876 01       		.byte	0x1
 4305 0877 0A02     		.2byte	0x20a
 4306 0879 4C000000 		.4byte	0x4c
 4307 087d 02       		.uleb128 0x2
 4308 087e 91       		.byte	0x91
 4309 087f 5C       		.sleb128 -36
 4310 0880 1E       		.uleb128 0x1e
 4311 0881 CE000000 		.4byte	.LBB3
 4312 0885 2C000000 		.4byte	.LBE3-.LBB3
 4313 0889 AD080000 		.4byte	0x8ad
 4314 088d 1A       		.uleb128 0x1a
 4315 088e 9D060000 		.4byte	.LASF129
 4316 0892 01       		.byte	0x1
 4317 0893 AD01     		.2byte	0x1ad
 4318 0895 8D000000 		.4byte	0x8d
 4319 0899 02       		.uleb128 0x2
 4320 089a 91       		.byte	0x91
 4321 089b 68       		.sleb128 -24
 4322 089c 1A       		.uleb128 0x1a
 4323 089d DE010000 		.4byte	.LASF130
 4324 08a1 01       		.byte	0x1
 4325 08a2 AE01     		.2byte	0x1ae
 4326 08a4 41040000 		.4byte	0x441
 4327 08a8 03       		.uleb128 0x3
 4328 08a9 91       		.byte	0x91
 4329 08aa 8C7F     		.sleb128 -116
 4330 08ac 00       		.byte	0
 4331 08ad 1E       		.uleb128 0x1e
 4332 08ae FC000000 		.4byte	.LBB4
 4333 08b2 20000000 		.4byte	.LBE4-.LBB4
 4334 08b6 CB080000 		.4byte	0x8cb
 4335 08ba 1A       		.uleb128 0x1a
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 98


 4336 08bb DE010000 		.4byte	.LASF130
 4337 08bf 01       		.byte	0x1
 4338 08c0 B201     		.2byte	0x1b2
 4339 08c2 41040000 		.4byte	0x441
 4340 08c6 03       		.uleb128 0x3
 4341 08c7 91       		.byte	0x91
 4342 08c8 F87E     		.sleb128 -136
 4343 08ca 00       		.byte	0
 4344 08cb 1E       		.uleb128 0x1e
 4345 08cc 3C020000 		.4byte	.LBB5
 4346 08d0 BC000000 		.4byte	.LBE5-.LBB5
 4347 08d4 02090000 		.4byte	0x902
 4348 08d8 1A       		.uleb128 0x1a
 4349 08d9 41050000 		.4byte	.LASF131
 4350 08dd 01       		.byte	0x1
 4351 08de DF01     		.2byte	0x1df
 4352 08e0 A5000000 		.4byte	0xa5
 4353 08e4 02       		.uleb128 0x2
 4354 08e5 91       		.byte	0x91
 4355 08e6 6B       		.sleb128 -21
 4356 08e7 1D       		.uleb128 0x1d
 4357 08e8 44020000 		.4byte	.LBB6
 4358 08ec 9A000000 		.4byte	.LBE6-.LBB6
 4359 08f0 1A       		.uleb128 0x1a
 4360 08f1 4A030000 		.4byte	.LASF132
 4361 08f5 01       		.byte	0x1
 4362 08f6 E101     		.2byte	0x1e1
 4363 08f8 3D090000 		.4byte	0x93d
 4364 08fc 03       		.uleb128 0x3
 4365 08fd 91       		.byte	0x91
 4366 08fe 8077     		.sleb128 -1152
 4367 0900 00       		.byte	0
 4368 0901 00       		.byte	0
 4369 0902 1D       		.uleb128 0x1d
 4370 0903 12030000 		.4byte	.LBB7
 4371 0907 3A000000 		.4byte	.LBE7-.LBB7
 4372 090b 1A       		.uleb128 0x1a
 4373 090c 39020000 		.4byte	.LASF133
 4374 0910 01       		.byte	0x1
 4375 0911 0102     		.2byte	0x201
 4376 0913 68000000 		.4byte	0x68
 4377 0917 02       		.uleb128 0x2
 4378 0918 91       		.byte	0x91
 4379 0919 60       		.sleb128 -32
 4380 091a 1A       		.uleb128 0x1a
 4381 091b 0A060000 		.4byte	.LASF134
 4382 091f 01       		.byte	0x1
 4383 0920 0202     		.2byte	0x202
 4384 0922 77060000 		.4byte	0x677
 4385 0926 03       		.uleb128 0x3
 4386 0927 91       		.byte	0x91
 4387 0928 EC7E     		.sleb128 -148
 4388 092a 00       		.byte	0
 4389 092b 00       		.byte	0
 4390 092c 00       		.byte	0
 4391 092d 07       		.uleb128 0x7
 4392 092e D7000000 		.4byte	0xd7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 99


 4393 0932 3D090000 		.4byte	0x93d
 4394 0936 08       		.uleb128 0x8
 4395 0937 E5000000 		.4byte	0xe5
 4396 093b C7       		.byte	0xc7
 4397 093c 00       		.byte	0
 4398 093d 07       		.uleb128 0x7
 4399 093e D7000000 		.4byte	0xd7
 4400 0942 4E090000 		.4byte	0x94e
 4401 0946 1F       		.uleb128 0x1f
 4402 0947 E5000000 		.4byte	0xe5
 4403 094b E803     		.2byte	0x3e8
 4404 094d 00       		.byte	0
 4405 094e 1C       		.uleb128 0x1c
 4406 094f 82050000 		.4byte	.LASF135
 4407 0953 01       		.byte	0x1
 4408 0954 1F02     		.2byte	0x21f
 4409 0956 81000000 		.4byte	0x81
 4410 095a 00000000 		.4byte	.LFB75
 4411 095e 44000000 		.4byte	.LFE75-.LFB75
 4412 0962 01       		.uleb128 0x1
 4413 0963 9C       		.byte	0x9c
 4414 0964 82090000 		.4byte	0x982
 4415 0968 1D       		.uleb128 0x1d
 4416 0969 20000000 		.4byte	.LBB8
 4417 096d 1A000000 		.4byte	.LBE8-.LBB8
 4418 0971 1A       		.uleb128 0x1a
 4419 0972 5C020000 		.4byte	.LASF128
 4420 0976 01       		.byte	0x1
 4421 0977 2A02     		.2byte	0x22a
 4422 0979 4C000000 		.4byte	0x4c
 4423 097d 02       		.uleb128 0x2
 4424 097e 91       		.byte	0x91
 4425 097f 74       		.sleb128 -12
 4426 0980 00       		.byte	0
 4427 0981 00       		.byte	0
 4428 0982 1C       		.uleb128 0x1c
 4429 0983 AB030000 		.4byte	.LASF136
 4430 0987 01       		.byte	0x1
 4431 0988 3F02     		.2byte	0x23f
 4432 098a 81000000 		.4byte	0x81
 4433 098e 00000000 		.4byte	.LFB76
 4434 0992 5C0E0000 		.4byte	.LFE76-.LFB76
 4435 0996 01       		.uleb128 0x1
 4436 0997 9C       		.byte	0x9c
 4437 0998 420A0000 		.4byte	0xa42
 4438 099c 1A       		.uleb128 0x1a
 4439 099d 08050000 		.4byte	.LASF72
 4440 09a1 01       		.byte	0x1
 4441 09a2 4202     		.2byte	0x242
 4442 09a4 4C000000 		.4byte	0x4c
 4443 09a8 02       		.uleb128 0x2
 4444 09a9 91       		.byte	0x91
 4445 09aa 5C       		.sleb128 -36
 4446 09ab 1A       		.uleb128 0x1a
 4447 09ac F6060000 		.4byte	.LASF137
 4448 09b0 01       		.byte	0x1
 4449 09b1 4302     		.2byte	0x243
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 100


 4450 09b3 420A0000 		.4byte	0xa42
 4451 09b7 03       		.uleb128 0x3
 4452 09b8 91       		.byte	0x91
 4453 09b9 BC7F     		.sleb128 -68
 4454 09bb 1A       		.uleb128 0x1a
 4455 09bc F0020000 		.4byte	.LASF71
 4456 09c0 01       		.byte	0x1
 4457 09c1 4702     		.2byte	0x247
 4458 09c3 41040000 		.4byte	0x441
 4459 09c7 03       		.uleb128 0x3
 4460 09c8 91       		.byte	0x91
 4461 09c9 A87F     		.sleb128 -88
 4462 09cb 1A       		.uleb128 0x1a
 4463 09cc D2060000 		.4byte	.LASF138
 4464 09d0 01       		.byte	0x1
 4465 09d1 4802     		.2byte	0x248
 4466 09d3 520A0000 		.4byte	0xa52
 4467 09d7 03       		.uleb128 0x3
 4468 09d8 91       		.byte	0x91
 4469 09d9 FC7C     		.sleb128 -388
 4470 09db 1A       		.uleb128 0x1a
 4471 09dc 55030000 		.4byte	.LASF139
 4472 09e0 01       		.byte	0x1
 4473 09e1 F802     		.2byte	0x2f8
 4474 09e3 65030000 		.4byte	0x365
 4475 09e7 03       		.uleb128 0x3
 4476 09e8 91       		.byte	0x91
 4477 09e9 E87C     		.sleb128 -408
 4478 09eb 1E       		.uleb128 0x1e
 4479 09ec 2A000000 		.4byte	.LBB9
 4480 09f0 AE000000 		.4byte	.LBE9-.LBB9
 4481 09f4 090A0000 		.4byte	0xa09
 4482 09f8 1A       		.uleb128 0x1a
 4483 09f9 3F070000 		.4byte	.LASF140
 4484 09fd 01       		.byte	0x1
 4485 09fe 4E02     		.2byte	0x24e
 4486 0a00 1D020000 		.4byte	0x21d
 4487 0a04 03       		.uleb128 0x3
 4488 0a05 91       		.byte	0x91
 4489 0a06 CC7C     		.sleb128 -436
 4490 0a08 00       		.byte	0
 4491 0a09 1E       		.uleb128 0x1e
 4492 0a0a E2000000 		.4byte	.LBB10
 4493 0a0e 7E0B0000 		.4byte	.LBE10-.LBB10
 4494 0a12 270A0000 		.4byte	0xa27
 4495 0a16 1A       		.uleb128 0x1a
 4496 0a17 64070000 		.4byte	.LASF141
 4497 0a1b 01       		.byte	0x1
 4498 0a1c 6602     		.2byte	0x266
 4499 0a1e 15030000 		.4byte	0x315
 4500 0a22 03       		.uleb128 0x3
 4501 0a23 91       		.byte	0x91
 4502 0a24 E07A     		.sleb128 -672
 4503 0a26 00       		.byte	0
 4504 0a27 1D       		.uleb128 0x1d
 4505 0a28 F80C0000 		.4byte	.LBB11
 4506 0a2c FC000000 		.4byte	.LBE11-.LBB11
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 101


 4507 0a30 1A       		.uleb128 0x1a
 4508 0a31 8C070000 		.4byte	.LASF142
 4509 0a35 01       		.byte	0x1
 4510 0a36 1403     		.2byte	0x314
 4511 0a38 91030000 		.4byte	0x391
 4512 0a3c 03       		.uleb128 0x3
 4513 0a3d 91       		.byte	0x91
 4514 0a3e C47C     		.sleb128 -444
 4515 0a40 00       		.byte	0
 4516 0a41 00       		.byte	0
 4517 0a42 07       		.uleb128 0x7
 4518 0a43 D7000000 		.4byte	0xd7
 4519 0a47 520A0000 		.4byte	0xa52
 4520 0a4b 08       		.uleb128 0x8
 4521 0a4c E5000000 		.4byte	0xe5
 4522 0a50 1F       		.byte	0x1f
 4523 0a51 00       		.byte	0
 4524 0a52 07       		.uleb128 0x7
 4525 0a53 D7000000 		.4byte	0xd7
 4526 0a57 630A0000 		.4byte	0xa63
 4527 0a5b 1F       		.uleb128 0x1f
 4528 0a5c E5000000 		.4byte	0xe5
 4529 0a60 2B01     		.2byte	0x12b
 4530 0a62 00       		.byte	0
 4531 0a63 20       		.uleb128 0x20
 4532 0a64 18030000 		.4byte	.LASF143
 4533 0a68 01       		.byte	0x1
 4534 0a69 3A03     		.2byte	0x33a
 4535 0a6b 81000000 		.4byte	0x81
 4536 0a6f 00000000 		.4byte	.LFB77
 4537 0a73 74000000 		.4byte	.LFE77-.LFB77
 4538 0a77 01       		.uleb128 0x1
 4539 0a78 9C       		.byte	0x9c
 4540 0a79 A90A0000 		.4byte	0xaa9
 4541 0a7d 21       		.uleb128 0x21
 4542 0a7e 08050000 		.4byte	.LASF72
 4543 0a82 01       		.byte	0x1
 4544 0a83 3A03     		.2byte	0x33a
 4545 0a85 4C000000 		.4byte	0x4c
 4546 0a89 02       		.uleb128 0x2
 4547 0a8a 91       		.byte	0x91
 4548 0a8b 64       		.sleb128 -28
 4549 0a8c 22       		.uleb128 0x22
 4550 0a8d 7400     		.ascii	"t\000"
 4551 0a8f 01       		.byte	0x1
 4552 0a90 4103     		.2byte	0x341
 4553 0a92 A90A0000 		.4byte	0xaa9
 4554 0a96 02       		.uleb128 0x2
 4555 0a97 91       		.byte	0x91
 4556 0a98 74       		.sleb128 -12
 4557 0a99 1A       		.uleb128 0x1a
 4558 0a9a E7040000 		.4byte	.LASF144
 4559 0a9e 01       		.byte	0x1
 4560 0a9f 4603     		.2byte	0x346
 4561 0aa1 6B010000 		.4byte	0x16b
 4562 0aa5 02       		.uleb128 0x2
 4563 0aa6 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 102


 4564 0aa7 68       		.sleb128 -24
 4565 0aa8 00       		.byte	0
 4566 0aa9 06       		.uleb128 0x6
 4567 0aaa 04       		.byte	0x4
 4568 0aab 9C030000 		.4byte	0x39c
 4569 0aaf 20       		.uleb128 0x20
 4570 0ab0 AE020000 		.4byte	.LASF145
 4571 0ab4 01       		.byte	0x1
 4572 0ab5 6303     		.2byte	0x363
 4573 0ab7 81000000 		.4byte	0x81
 4574 0abb 00000000 		.4byte	.LFB78
 4575 0abf 38010000 		.4byte	.LFE78-.LFB78
 4576 0ac3 01       		.uleb128 0x1
 4577 0ac4 9C       		.byte	0x9c
 4578 0ac5 280B0000 		.4byte	0xb28
 4579 0ac9 21       		.uleb128 0x21
 4580 0aca F6020000 		.4byte	.LASF146
 4581 0ace 01       		.byte	0x1
 4582 0acf 6303     		.2byte	0x363
 4583 0ad1 EC000000 		.4byte	0xec
 4584 0ad5 03       		.uleb128 0x3
 4585 0ad6 91       		.byte	0x91
 4586 0ad7 9C7E     		.sleb128 -228
 4587 0ad9 21       		.uleb128 0x21
 4588 0ada D0020000 		.4byte	.LASF147
 4589 0ade 01       		.byte	0x1
 4590 0adf 6303     		.2byte	0x363
 4591 0ae1 68000000 		.4byte	0x68
 4592 0ae5 03       		.uleb128 0x3
 4593 0ae6 91       		.byte	0x91
 4594 0ae7 987E     		.sleb128 -232
 4595 0ae9 21       		.uleb128 0x21
 4596 0aea 88040000 		.4byte	.LASF148
 4597 0aee 01       		.byte	0x1
 4598 0aef 6303     		.2byte	0x363
 4599 0af1 EC000000 		.4byte	0xec
 4600 0af5 03       		.uleb128 0x3
 4601 0af6 91       		.byte	0x91
 4602 0af7 947E     		.sleb128 -236
 4603 0af9 1A       		.uleb128 0x1a
 4604 0afa CF010000 		.4byte	.LASF149
 4605 0afe 01       		.byte	0x1
 4606 0aff 6503     		.2byte	0x365
 4607 0b01 81000000 		.4byte	0x81
 4608 0b05 02       		.uleb128 0x2
 4609 0b06 91       		.byte	0x91
 4610 0b07 77       		.sleb128 -9
 4611 0b08 1A       		.uleb128 0x1a
 4612 0b09 3D000000 		.4byte	.LASF150
 4613 0b0d 01       		.byte	0x1
 4614 0b0e 6C03     		.2byte	0x36c
 4615 0b10 280B0000 		.4byte	0xb28
 4616 0b14 02       		.uleb128 0x2
 4617 0b15 91       		.byte	0x91
 4618 0b16 68       		.sleb128 -24
 4619 0b17 1A       		.uleb128 0x1a
 4620 0b18 1B070000 		.4byte	.LASF125
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 103


 4621 0b1c 01       		.byte	0x1
 4622 0b1d 7403     		.2byte	0x374
 4623 0b1f 2D090000 		.4byte	0x92d
 4624 0b23 03       		.uleb128 0x3
 4625 0b24 91       		.byte	0x91
 4626 0b25 A07E     		.sleb128 -224
 4627 0b27 00       		.byte	0
 4628 0b28 07       		.uleb128 0x7
 4629 0b29 D7000000 		.4byte	0xd7
 4630 0b2d 380B0000 		.4byte	0xb38
 4631 0b31 08       		.uleb128 0x8
 4632 0b32 E5000000 		.4byte	0xe5
 4633 0b36 0B       		.byte	0xb
 4634 0b37 00       		.byte	0
 4635 0b38 23       		.uleb128 0x23
 4636 0b39 45010000 		.4byte	.LASF151
 4637 0b3d 0E       		.byte	0xe
 4638 0b3e 1207     		.2byte	0x712
 4639 0b40 440B0000 		.4byte	0xb44
 4640 0b44 0C       		.uleb128 0xc
 4641 0b45 76000000 		.4byte	0x76
 4642 0b49 24       		.uleb128 0x24
 4643 0b4a 2D000000 		.4byte	.LASF152
 4644 0b4e 0B       		.byte	0xb
 4645 0b4f 11       		.byte	0x11
 4646 0b50 4D050000 		.4byte	0x54d
 4647 0b54 05       		.uleb128 0x5
 4648 0b55 03       		.byte	0x3
 4649 0b56 00000000 		.4byte	buffer_overflow
 4650 0b5a 24       		.uleb128 0x24
 4651 0b5b 6F040000 		.4byte	.LASF153
 4652 0b5f 0B       		.byte	0xb
 4653 0b60 22       		.byte	0x22
 4654 0b61 8D000000 		.4byte	0x8d
 4655 0b65 05       		.uleb128 0x5
 4656 0b66 03       		.byte	0x3
 4657 0b67 00000000 		.4byte	dataPointsInStack
 4658 0b6b 24       		.uleb128 0x24
 4659 0b6c 9E070000 		.4byte	.LASF154
 4660 0b70 0B       		.byte	0xb
 4661 0b71 23       		.byte	0x23
 4662 0b72 8D000000 		.4byte	0x8d
 4663 0b76 05       		.uleb128 0x5
 4664 0b77 03       		.byte	0x3
 4665 0b78 00000000 		.4byte	dataPointsInStackDesired
 4666 0b7c 07       		.uleb128 0x7
 4667 0b7d 51040000 		.4byte	0x451
 4668 0b81 8C0B0000 		.4byte	0xb8c
 4669 0b85 08       		.uleb128 0x8
 4670 0b86 E5000000 		.4byte	0xe5
 4671 0b8a 95       		.byte	0x95
 4672 0b8b 00       		.byte	0
 4673 0b8c 24       		.uleb128 0x24
 4674 0b8d BC030000 		.4byte	.LASF155
 4675 0b91 0B       		.byte	0xb
 4676 0b92 24       		.byte	0x24
 4677 0b93 7C0B0000 		.4byte	0xb7c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 104


 4678 0b97 05       		.uleb128 0x5
 4679 0b98 03       		.byte	0x3
 4680 0b99 00000000 		.4byte	data
 4681 0b9d 24       		.uleb128 0x24
 4682 0b9e 2C010000 		.4byte	.LASF156
 4683 0ba2 0C       		.byte	0xc
 4684 0ba3 20       		.byte	0x20
 4685 0ba4 81000000 		.4byte	0x81
 4686 0ba8 05       		.uleb128 0x5
 4687 0ba9 03       		.byte	0x3
 4688 0baa 00000000 		.4byte	modem_state
 4689 0bae 24       		.uleb128 0x24
 4690 0baf 2C040000 		.4byte	.LASF157
 4691 0bb3 0C       		.byte	0xc
 4692 0bb4 63       		.byte	0x63
 4693 0bb5 BD000000 		.4byte	0xbd
 4694 0bb9 05       		.uleb128 0x5
 4695 0bba 03       		.byte	0x3
 4696 0bbb 00000000 		.4byte	modem_start_time_stamp
 4697 0bbf 24       		.uleb128 0x24
 4698 0bc0 D2030000 		.4byte	.LASF98
 4699 0bc4 0C       		.byte	0xc
 4700 0bc5 64       		.byte	0x64
 4701 0bc6 89040000 		.4byte	0x489
 4702 0bca 05       		.uleb128 0x5
 4703 0bcb 03       		.byte	0x3
 4704 0bcc 00000000 		.4byte	modem_info
 4705 0bd0 24       		.uleb128 0x24
 4706 0bd1 52010000 		.4byte	.LASF158
 4707 0bd5 0C       		.byte	0xc
 4708 0bd6 65       		.byte	0x65
 4709 0bd7 FD040000 		.4byte	0x4fd
 4710 0bdb 05       		.uleb128 0x5
 4711 0bdc 03       		.byte	0x3
 4712 0bdd 00000000 		.4byte	modem_stats
 4713 0be1 24       		.uleb128 0x24
 4714 0be2 20050000 		.4byte	.LASF159
 4715 0be6 0C       		.byte	0xc
 4716 0be7 66       		.byte	0x66
 4717 0be8 54050000 		.4byte	0x554
 4718 0bec 05       		.uleb128 0x5
 4719 0bed 03       		.byte	0x3
 4720 0bee 00000000 		.4byte	updatable_parameters
 4721 0bf2 07       		.uleb128 0x7
 4722 0bf3 D7000000 		.4byte	0xd7
 4723 0bf7 030C0000 		.4byte	0xc03
 4724 0bfb 1F       		.uleb128 0x1f
 4725 0bfc E5000000 		.4byte	0xe5
 4726 0c00 0F27     		.2byte	0x270f
 4727 0c02 00       		.byte	0
 4728 0c03 24       		.uleb128 0x24
 4729 0c04 60050000 		.4byte	.LASF160
 4730 0c08 0D       		.byte	0xd
 4731 0c09 18       		.byte	0x18
 4732 0c0a F20B0000 		.4byte	0xbf2
 4733 0c0e 05       		.uleb128 0x5
 4734 0c0f 03       		.byte	0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 105


 4735 0c10 00000000 		.4byte	http_request
 4736 0c14 24       		.uleb128 0x24
 4737 0c15 C9070000 		.4byte	.LASF161
 4738 0c19 0D       		.byte	0xd
 4739 0c1a 19       		.byte	0x19
 4740 0c1b F20B0000 		.4byte	0xbf2
 4741 0c1f 05       		.uleb128 0x5
 4742 0c20 03       		.byte	0x3
 4743 0c21 00000000 		.4byte	http_body
 4744 0c25 24       		.uleb128 0x24
 4745 0c26 10070000 		.4byte	.LASF162
 4746 0c2a 0D       		.byte	0xd
 4747 0c2b 1A       		.byte	0x1a
 4748 0c2c 2D090000 		.4byte	0x92d
 4749 0c30 05       		.uleb128 0x5
 4750 0c31 03       		.byte	0x3
 4751 0c32 00000000 		.4byte	http_route
 4752 0c36 24       		.uleb128 0x24
 4753 0c37 4A060000 		.4byte	.LASF163
 4754 0c3b 0D       		.byte	0xd
 4755 0c3c 41       		.byte	0x41
 4756 0c3d CF050000 		.4byte	0x5cf
 4757 0c41 05       		.uleb128 0x5
 4758 0c42 03       		.byte	0x3
 4759 0c43 00000000 		.4byte	system_info
 4760 0c47 24       		.uleb128 0x24
 4761 0c48 E5050000 		.4byte	.LASF164
 4762 0c4c 0D       		.byte	0xd
 4763 0c4d 53       		.byte	0x53
 4764 0c4e 0B060000 		.4byte	0x60b
 4765 0c52 05       		.uleb128 0x5
 4766 0c53 03       		.byte	0x3
 4767 0c54 00000000 		.4byte	system_settings
 4768 0c58 24       		.uleb128 0x24
 4769 0c59 38010000 		.4byte	.LASF165
 4770 0c5d 0D       		.byte	0xd
 4771 0c5e 6F       		.byte	0x6f
 4772 0c5f 98050000 		.4byte	0x598
 4773 0c63 05       		.uleb128 0x5
 4774 0c64 03       		.byte	0x3
 4775 0c65 00000000 		.4byte	alarmMeasure
 4776 0c69 24       		.uleb128 0x24
 4777 0c6a 79010000 		.4byte	.LASF166
 4778 0c6e 0D       		.byte	0xd
 4779 0c6f 70       		.byte	0x70
 4780 0c70 81000000 		.4byte	0x81
 4781 0c74 05       		.uleb128 0x5
 4782 0c75 03       		.byte	0x3
 4783 0c76 00000000 		.4byte	timeToMeasure
 4784 0c7a 24       		.uleb128 0x24
 4785 0c7b 01030000 		.4byte	.LASF167
 4786 0c7f 0D       		.byte	0xd
 4787 0c80 71       		.byte	0x71
 4788 0c81 98050000 		.4byte	0x598
 4789 0c85 05       		.uleb128 0x5
 4790 0c86 03       		.byte	0x3
 4791 0c87 00000000 		.4byte	alarmSync
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 106


 4792 0c8b 24       		.uleb128 0x24
 4793 0c8c 9F010000 		.4byte	.LASF168
 4794 0c90 0D       		.byte	0xd
 4795 0c91 72       		.byte	0x72
 4796 0c92 81000000 		.4byte	0x81
 4797 0c96 05       		.uleb128 0x5
 4798 0c97 03       		.byte	0x3
 4799 0c98 00000000 		.4byte	timeToSync
 4800 0c9c 24       		.uleb128 0x24
 4801 0c9d F1040000 		.4byte	.LASF169
 4802 0ca1 0D       		.byte	0xd
 4803 0ca2 73       		.byte	0x73
 4804 0ca3 81000000 		.4byte	0x81
 4805 0ca7 05       		.uleb128 0x5
 4806 0ca8 03       		.byte	0x3
 4807 0ca9 00000000 		.4byte	timeToSycnRemoteParams
 4808 0cad 25       		.uleb128 0x25
 4809 0cae 68657900 		.ascii	"hey\000"
 4810 0cb2 0D       		.byte	0xd
 4811 0cb3 74       		.byte	0x74
 4812 0cb4 81000000 		.4byte	0x81
 4813 0cb8 05       		.uleb128 0x5
 4814 0cb9 03       		.byte	0x3
 4815 0cba 00000000 		.4byte	hey
 4816 0cbe 07       		.uleb128 0x7
 4817 0cbf D7000000 		.4byte	0xd7
 4818 0cc3 CE0C0000 		.4byte	0xcce
 4819 0cc7 08       		.uleb128 0x8
 4820 0cc8 E5000000 		.4byte	0xe5
 4821 0ccc 1D       		.byte	0x1d
 4822 0ccd 00       		.byte	0
 4823 0cce 24       		.uleb128 0x24
 4824 0ccf 98050000 		.4byte	.LASF170
 4825 0cd3 01       		.byte	0x1
 4826 0cd4 1D       		.byte	0x1d
 4827 0cd5 BE0C0000 		.4byte	0xcbe
 4828 0cd9 05       		.uleb128 0x5
 4829 0cda 03       		.byte	0x3
 4830 0cdb 00000000 		.4byte	Data_fileName
 4831 0cdf 24       		.uleb128 0x24
 4832 0ce0 71030000 		.4byte	.LASF106
 4833 0ce4 01       		.byte	0x1
 4834 0ce5 1E       		.byte	0x1e
 4835 0ce6 81000000 		.4byte	0x81
 4836 0cea 05       		.uleb128 0x5
 4837 0ceb 03       		.byte	0x3
 4838 0cec 00000000 		.4byte	try_counter
 4839 0cf0 00       		.byte	0
 4840              		.section	.debug_abbrev,"",%progbits
 4841              	.Ldebug_abbrev0:
 4842 0000 01       		.uleb128 0x1
 4843 0001 11       		.uleb128 0x11
 4844 0002 01       		.byte	0x1
 4845 0003 25       		.uleb128 0x25
 4846 0004 0E       		.uleb128 0xe
 4847 0005 13       		.uleb128 0x13
 4848 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 107


 4849 0007 03       		.uleb128 0x3
 4850 0008 0E       		.uleb128 0xe
 4851 0009 1B       		.uleb128 0x1b
 4852 000a 0E       		.uleb128 0xe
 4853 000b 55       		.uleb128 0x55
 4854 000c 17       		.uleb128 0x17
 4855 000d 11       		.uleb128 0x11
 4856 000e 01       		.uleb128 0x1
 4857 000f 10       		.uleb128 0x10
 4858 0010 17       		.uleb128 0x17
 4859 0011 00       		.byte	0
 4860 0012 00       		.byte	0
 4861 0013 02       		.uleb128 0x2
 4862 0014 24       		.uleb128 0x24
 4863 0015 00       		.byte	0
 4864 0016 0B       		.uleb128 0xb
 4865 0017 0B       		.uleb128 0xb
 4866 0018 3E       		.uleb128 0x3e
 4867 0019 0B       		.uleb128 0xb
 4868 001a 03       		.uleb128 0x3
 4869 001b 0E       		.uleb128 0xe
 4870 001c 00       		.byte	0
 4871 001d 00       		.byte	0
 4872 001e 03       		.uleb128 0x3
 4873 001f 16       		.uleb128 0x16
 4874 0020 00       		.byte	0
 4875 0021 03       		.uleb128 0x3
 4876 0022 0E       		.uleb128 0xe
 4877 0023 3A       		.uleb128 0x3a
 4878 0024 0B       		.uleb128 0xb
 4879 0025 3B       		.uleb128 0x3b
 4880 0026 0B       		.uleb128 0xb
 4881 0027 49       		.uleb128 0x49
 4882 0028 13       		.uleb128 0x13
 4883 0029 00       		.byte	0
 4884 002a 00       		.byte	0
 4885 002b 04       		.uleb128 0x4
 4886 002c 24       		.uleb128 0x24
 4887 002d 00       		.byte	0
 4888 002e 0B       		.uleb128 0xb
 4889 002f 0B       		.uleb128 0xb
 4890 0030 3E       		.uleb128 0x3e
 4891 0031 0B       		.uleb128 0xb
 4892 0032 03       		.uleb128 0x3
 4893 0033 08       		.uleb128 0x8
 4894 0034 00       		.byte	0
 4895 0035 00       		.byte	0
 4896 0036 05       		.uleb128 0x5
 4897 0037 16       		.uleb128 0x16
 4898 0038 00       		.byte	0
 4899 0039 03       		.uleb128 0x3
 4900 003a 0E       		.uleb128 0xe
 4901 003b 3A       		.uleb128 0x3a
 4902 003c 0B       		.uleb128 0xb
 4903 003d 3B       		.uleb128 0x3b
 4904 003e 05       		.uleb128 0x5
 4905 003f 49       		.uleb128 0x49
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 108


 4906 0040 13       		.uleb128 0x13
 4907 0041 00       		.byte	0
 4908 0042 00       		.byte	0
 4909 0043 06       		.uleb128 0x6
 4910 0044 0F       		.uleb128 0xf
 4911 0045 00       		.byte	0
 4912 0046 0B       		.uleb128 0xb
 4913 0047 0B       		.uleb128 0xb
 4914 0048 49       		.uleb128 0x49
 4915 0049 13       		.uleb128 0x13
 4916 004a 00       		.byte	0
 4917 004b 00       		.byte	0
 4918 004c 07       		.uleb128 0x7
 4919 004d 01       		.uleb128 0x1
 4920 004e 01       		.byte	0x1
 4921 004f 49       		.uleb128 0x49
 4922 0050 13       		.uleb128 0x13
 4923 0051 01       		.uleb128 0x1
 4924 0052 13       		.uleb128 0x13
 4925 0053 00       		.byte	0
 4926 0054 00       		.byte	0
 4927 0055 08       		.uleb128 0x8
 4928 0056 21       		.uleb128 0x21
 4929 0057 00       		.byte	0
 4930 0058 49       		.uleb128 0x49
 4931 0059 13       		.uleb128 0x13
 4932 005a 2F       		.uleb128 0x2f
 4933 005b 0B       		.uleb128 0xb
 4934 005c 00       		.byte	0
 4935 005d 00       		.byte	0
 4936 005e 09       		.uleb128 0x9
 4937 005f 13       		.uleb128 0x13
 4938 0060 01       		.byte	0x1
 4939 0061 0B       		.uleb128 0xb
 4940 0062 0B       		.uleb128 0xb
 4941 0063 3A       		.uleb128 0x3a
 4942 0064 0B       		.uleb128 0xb
 4943 0065 3B       		.uleb128 0x3b
 4944 0066 0B       		.uleb128 0xb
 4945 0067 01       		.uleb128 0x1
 4946 0068 13       		.uleb128 0x13
 4947 0069 00       		.byte	0
 4948 006a 00       		.byte	0
 4949 006b 0A       		.uleb128 0xa
 4950 006c 0D       		.uleb128 0xd
 4951 006d 00       		.byte	0
 4952 006e 03       		.uleb128 0x3
 4953 006f 08       		.uleb128 0x8
 4954 0070 3A       		.uleb128 0x3a
 4955 0071 0B       		.uleb128 0xb
 4956 0072 3B       		.uleb128 0x3b
 4957 0073 0B       		.uleb128 0xb
 4958 0074 49       		.uleb128 0x49
 4959 0075 13       		.uleb128 0x13
 4960 0076 38       		.uleb128 0x38
 4961 0077 0B       		.uleb128 0xb
 4962 0078 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 109


 4963 0079 00       		.byte	0
 4964 007a 0B       		.uleb128 0xb
 4965 007b 0D       		.uleb128 0xd
 4966 007c 00       		.byte	0
 4967 007d 03       		.uleb128 0x3
 4968 007e 0E       		.uleb128 0xe
 4969 007f 3A       		.uleb128 0x3a
 4970 0080 0B       		.uleb128 0xb
 4971 0081 3B       		.uleb128 0x3b
 4972 0082 0B       		.uleb128 0xb
 4973 0083 49       		.uleb128 0x49
 4974 0084 13       		.uleb128 0x13
 4975 0085 38       		.uleb128 0x38
 4976 0086 0B       		.uleb128 0xb
 4977 0087 00       		.byte	0
 4978 0088 00       		.byte	0
 4979 0089 0C       		.uleb128 0xc
 4980 008a 35       		.uleb128 0x35
 4981 008b 00       		.byte	0
 4982 008c 49       		.uleb128 0x49
 4983 008d 13       		.uleb128 0x13
 4984 008e 00       		.byte	0
 4985 008f 00       		.byte	0
 4986 0090 0D       		.uleb128 0xd
 4987 0091 13       		.uleb128 0x13
 4988 0092 01       		.byte	0x1
 4989 0093 0B       		.uleb128 0xb
 4990 0094 05       		.uleb128 0x5
 4991 0095 3A       		.uleb128 0x3a
 4992 0096 0B       		.uleb128 0xb
 4993 0097 3B       		.uleb128 0x3b
 4994 0098 0B       		.uleb128 0xb
 4995 0099 01       		.uleb128 0x1
 4996 009a 13       		.uleb128 0x13
 4997 009b 00       		.byte	0
 4998 009c 00       		.byte	0
 4999 009d 0E       		.uleb128 0xe
 5000 009e 13       		.uleb128 0x13
 5001 009f 01       		.byte	0x1
 5002 00a0 03       		.uleb128 0x3
 5003 00a1 08       		.uleb128 0x8
 5004 00a2 0B       		.uleb128 0xb
 5005 00a3 0B       		.uleb128 0xb
 5006 00a4 3A       		.uleb128 0x3a
 5007 00a5 0B       		.uleb128 0xb
 5008 00a6 3B       		.uleb128 0x3b
 5009 00a7 0B       		.uleb128 0xb
 5010 00a8 01       		.uleb128 0x1
 5011 00a9 13       		.uleb128 0x13
 5012 00aa 00       		.byte	0
 5013 00ab 00       		.byte	0
 5014 00ac 0F       		.uleb128 0xf
 5015 00ad 2E       		.uleb128 0x2e
 5016 00ae 00       		.byte	0
 5017 00af 3F       		.uleb128 0x3f
 5018 00b0 19       		.uleb128 0x19
 5019 00b1 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 110


 5020 00b2 0E       		.uleb128 0xe
 5021 00b3 3A       		.uleb128 0x3a
 5022 00b4 0B       		.uleb128 0xb
 5023 00b5 3B       		.uleb128 0x3b
 5024 00b6 0B       		.uleb128 0xb
 5025 00b7 27       		.uleb128 0x27
 5026 00b8 19       		.uleb128 0x19
 5027 00b9 11       		.uleb128 0x11
 5028 00ba 01       		.uleb128 0x1
 5029 00bb 12       		.uleb128 0x12
 5030 00bc 06       		.uleb128 0x6
 5031 00bd 40       		.uleb128 0x40
 5032 00be 18       		.uleb128 0x18
 5033 00bf 9642     		.uleb128 0x2116
 5034 00c1 19       		.uleb128 0x19
 5035 00c2 00       		.byte	0
 5036 00c3 00       		.byte	0
 5037 00c4 10       		.uleb128 0x10
 5038 00c5 2E       		.uleb128 0x2e
 5039 00c6 01       		.byte	0x1
 5040 00c7 3F       		.uleb128 0x3f
 5041 00c8 19       		.uleb128 0x19
 5042 00c9 03       		.uleb128 0x3
 5043 00ca 0E       		.uleb128 0xe
 5044 00cb 3A       		.uleb128 0x3a
 5045 00cc 0B       		.uleb128 0xb
 5046 00cd 3B       		.uleb128 0x3b
 5047 00ce 0B       		.uleb128 0xb
 5048 00cf 11       		.uleb128 0x11
 5049 00d0 01       		.uleb128 0x1
 5050 00d1 12       		.uleb128 0x12
 5051 00d2 06       		.uleb128 0x6
 5052 00d3 40       		.uleb128 0x40
 5053 00d4 18       		.uleb128 0x18
 5054 00d5 9642     		.uleb128 0x2116
 5055 00d7 19       		.uleb128 0x19
 5056 00d8 01       		.uleb128 0x1
 5057 00d9 13       		.uleb128 0x13
 5058 00da 00       		.byte	0
 5059 00db 00       		.byte	0
 5060 00dc 11       		.uleb128 0x11
 5061 00dd 34       		.uleb128 0x34
 5062 00de 00       		.byte	0
 5063 00df 03       		.uleb128 0x3
 5064 00e0 0E       		.uleb128 0xe
 5065 00e1 3A       		.uleb128 0x3a
 5066 00e2 0B       		.uleb128 0xb
 5067 00e3 3B       		.uleb128 0x3b
 5068 00e4 0B       		.uleb128 0xb
 5069 00e5 49       		.uleb128 0x49
 5070 00e6 13       		.uleb128 0x13
 5071 00e7 02       		.uleb128 0x2
 5072 00e8 18       		.uleb128 0x18
 5073 00e9 00       		.byte	0
 5074 00ea 00       		.byte	0
 5075 00eb 12       		.uleb128 0x12
 5076 00ec 2E       		.uleb128 0x2e
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 111


 5077 00ed 01       		.byte	0x1
 5078 00ee 3F       		.uleb128 0x3f
 5079 00ef 19       		.uleb128 0x19
 5080 00f0 03       		.uleb128 0x3
 5081 00f1 0E       		.uleb128 0xe
 5082 00f2 3A       		.uleb128 0x3a
 5083 00f3 0B       		.uleb128 0xb
 5084 00f4 3B       		.uleb128 0x3b
 5085 00f5 0B       		.uleb128 0xb
 5086 00f6 49       		.uleb128 0x49
 5087 00f7 13       		.uleb128 0x13
 5088 00f8 11       		.uleb128 0x11
 5089 00f9 01       		.uleb128 0x1
 5090 00fa 12       		.uleb128 0x12
 5091 00fb 06       		.uleb128 0x6
 5092 00fc 40       		.uleb128 0x40
 5093 00fd 18       		.uleb128 0x18
 5094 00fe 9642     		.uleb128 0x2116
 5095 0100 19       		.uleb128 0x19
 5096 0101 01       		.uleb128 0x1
 5097 0102 13       		.uleb128 0x13
 5098 0103 00       		.byte	0
 5099 0104 00       		.byte	0
 5100 0105 13       		.uleb128 0x13
 5101 0106 2E       		.uleb128 0x2e
 5102 0107 00       		.byte	0
 5103 0108 3F       		.uleb128 0x3f
 5104 0109 19       		.uleb128 0x19
 5105 010a 03       		.uleb128 0x3
 5106 010b 0E       		.uleb128 0xe
 5107 010c 3A       		.uleb128 0x3a
 5108 010d 0B       		.uleb128 0xb
 5109 010e 3B       		.uleb128 0x3b
 5110 010f 0B       		.uleb128 0xb
 5111 0110 11       		.uleb128 0x11
 5112 0111 01       		.uleb128 0x1
 5113 0112 12       		.uleb128 0x12
 5114 0113 06       		.uleb128 0x6
 5115 0114 40       		.uleb128 0x40
 5116 0115 18       		.uleb128 0x18
 5117 0116 9642     		.uleb128 0x2116
 5118 0118 19       		.uleb128 0x19
 5119 0119 00       		.byte	0
 5120 011a 00       		.byte	0
 5121 011b 14       		.uleb128 0x14
 5122 011c 2E       		.uleb128 0x2e
 5123 011d 01       		.byte	0x1
 5124 011e 3F       		.uleb128 0x3f
 5125 011f 19       		.uleb128 0x19
 5126 0120 03       		.uleb128 0x3
 5127 0121 0E       		.uleb128 0xe
 5128 0122 3A       		.uleb128 0x3a
 5129 0123 0B       		.uleb128 0xb
 5130 0124 3B       		.uleb128 0x3b
 5131 0125 0B       		.uleb128 0xb
 5132 0126 27       		.uleb128 0x27
 5133 0127 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 112


 5134 0128 11       		.uleb128 0x11
 5135 0129 01       		.uleb128 0x1
 5136 012a 12       		.uleb128 0x12
 5137 012b 06       		.uleb128 0x6
 5138 012c 40       		.uleb128 0x40
 5139 012d 18       		.uleb128 0x18
 5140 012e 9642     		.uleb128 0x2116
 5141 0130 19       		.uleb128 0x19
 5142 0131 01       		.uleb128 0x1
 5143 0132 13       		.uleb128 0x13
 5144 0133 00       		.byte	0
 5145 0134 00       		.byte	0
 5146 0135 15       		.uleb128 0x15
 5147 0136 05       		.uleb128 0x5
 5148 0137 00       		.byte	0
 5149 0138 03       		.uleb128 0x3
 5150 0139 0E       		.uleb128 0xe
 5151 013a 3A       		.uleb128 0x3a
 5152 013b 0B       		.uleb128 0xb
 5153 013c 3B       		.uleb128 0x3b
 5154 013d 0B       		.uleb128 0xb
 5155 013e 49       		.uleb128 0x49
 5156 013f 13       		.uleb128 0x13
 5157 0140 02       		.uleb128 0x2
 5158 0141 18       		.uleb128 0x18
 5159 0142 00       		.byte	0
 5160 0143 00       		.byte	0
 5161 0144 16       		.uleb128 0x16
 5162 0145 2E       		.uleb128 0x2e
 5163 0146 01       		.byte	0x1
 5164 0147 3F       		.uleb128 0x3f
 5165 0148 19       		.uleb128 0x19
 5166 0149 03       		.uleb128 0x3
 5167 014a 0E       		.uleb128 0xe
 5168 014b 3A       		.uleb128 0x3a
 5169 014c 0B       		.uleb128 0xb
 5170 014d 3B       		.uleb128 0x3b
 5171 014e 0B       		.uleb128 0xb
 5172 014f 27       		.uleb128 0x27
 5173 0150 19       		.uleb128 0x19
 5174 0151 49       		.uleb128 0x49
 5175 0152 13       		.uleb128 0x13
 5176 0153 11       		.uleb128 0x11
 5177 0154 01       		.uleb128 0x1
 5178 0155 12       		.uleb128 0x12
 5179 0156 06       		.uleb128 0x6
 5180 0157 40       		.uleb128 0x40
 5181 0158 18       		.uleb128 0x18
 5182 0159 9642     		.uleb128 0x2116
 5183 015b 19       		.uleb128 0x19
 5184 015c 01       		.uleb128 0x1
 5185 015d 13       		.uleb128 0x13
 5186 015e 00       		.byte	0
 5187 015f 00       		.byte	0
 5188 0160 17       		.uleb128 0x17
 5189 0161 2E       		.uleb128 0x2e
 5190 0162 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 113


 5191 0163 3F       		.uleb128 0x3f
 5192 0164 19       		.uleb128 0x19
 5193 0165 03       		.uleb128 0x3
 5194 0166 0E       		.uleb128 0xe
 5195 0167 3A       		.uleb128 0x3a
 5196 0168 0B       		.uleb128 0xb
 5197 0169 3B       		.uleb128 0x3b
 5198 016a 0B       		.uleb128 0xb
 5199 016b 27       		.uleb128 0x27
 5200 016c 19       		.uleb128 0x19
 5201 016d 11       		.uleb128 0x11
 5202 016e 01       		.uleb128 0x1
 5203 016f 12       		.uleb128 0x12
 5204 0170 06       		.uleb128 0x6
 5205 0171 40       		.uleb128 0x40
 5206 0172 18       		.uleb128 0x18
 5207 0173 9742     		.uleb128 0x2117
 5208 0175 19       		.uleb128 0x19
 5209 0176 01       		.uleb128 0x1
 5210 0177 13       		.uleb128 0x13
 5211 0178 00       		.byte	0
 5212 0179 00       		.byte	0
 5213 017a 18       		.uleb128 0x18
 5214 017b 2E       		.uleb128 0x2e
 5215 017c 01       		.byte	0x1
 5216 017d 3F       		.uleb128 0x3f
 5217 017e 19       		.uleb128 0x19
 5218 017f 03       		.uleb128 0x3
 5219 0180 0E       		.uleb128 0xe
 5220 0181 3A       		.uleb128 0x3a
 5221 0182 0B       		.uleb128 0xb
 5222 0183 3B       		.uleb128 0x3b
 5223 0184 0B       		.uleb128 0xb
 5224 0185 27       		.uleb128 0x27
 5225 0186 19       		.uleb128 0x19
 5226 0187 49       		.uleb128 0x49
 5227 0188 13       		.uleb128 0x13
 5228 0189 11       		.uleb128 0x11
 5229 018a 01       		.uleb128 0x1
 5230 018b 12       		.uleb128 0x12
 5231 018c 06       		.uleb128 0x6
 5232 018d 40       		.uleb128 0x40
 5233 018e 18       		.uleb128 0x18
 5234 018f 9742     		.uleb128 0x2117
 5235 0191 19       		.uleb128 0x19
 5236 0192 01       		.uleb128 0x1
 5237 0193 13       		.uleb128 0x13
 5238 0194 00       		.byte	0
 5239 0195 00       		.byte	0
 5240 0196 19       		.uleb128 0x19
 5241 0197 2E       		.uleb128 0x2e
 5242 0198 01       		.byte	0x1
 5243 0199 3F       		.uleb128 0x3f
 5244 019a 19       		.uleb128 0x19
 5245 019b 03       		.uleb128 0x3
 5246 019c 0E       		.uleb128 0xe
 5247 019d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 114


 5248 019e 0B       		.uleb128 0xb
 5249 019f 3B       		.uleb128 0x3b
 5250 01a0 05       		.uleb128 0x5
 5251 01a1 11       		.uleb128 0x11
 5252 01a2 01       		.uleb128 0x1
 5253 01a3 12       		.uleb128 0x12
 5254 01a4 06       		.uleb128 0x6
 5255 01a5 40       		.uleb128 0x40
 5256 01a6 18       		.uleb128 0x18
 5257 01a7 9642     		.uleb128 0x2116
 5258 01a9 19       		.uleb128 0x19
 5259 01aa 01       		.uleb128 0x1
 5260 01ab 13       		.uleb128 0x13
 5261 01ac 00       		.byte	0
 5262 01ad 00       		.byte	0
 5263 01ae 1A       		.uleb128 0x1a
 5264 01af 34       		.uleb128 0x34
 5265 01b0 00       		.byte	0
 5266 01b1 03       		.uleb128 0x3
 5267 01b2 0E       		.uleb128 0xe
 5268 01b3 3A       		.uleb128 0x3a
 5269 01b4 0B       		.uleb128 0xb
 5270 01b5 3B       		.uleb128 0x3b
 5271 01b6 05       		.uleb128 0x5
 5272 01b7 49       		.uleb128 0x49
 5273 01b8 13       		.uleb128 0x13
 5274 01b9 02       		.uleb128 0x2
 5275 01ba 18       		.uleb128 0x18
 5276 01bb 00       		.byte	0
 5277 01bc 00       		.byte	0
 5278 01bd 1B       		.uleb128 0x1b
 5279 01be 2E       		.uleb128 0x2e
 5280 01bf 00       		.byte	0
 5281 01c0 3F       		.uleb128 0x3f
 5282 01c1 19       		.uleb128 0x19
 5283 01c2 03       		.uleb128 0x3
 5284 01c3 0E       		.uleb128 0xe
 5285 01c4 3A       		.uleb128 0x3a
 5286 01c5 0B       		.uleb128 0xb
 5287 01c6 3B       		.uleb128 0x3b
 5288 01c7 05       		.uleb128 0x5
 5289 01c8 27       		.uleb128 0x27
 5290 01c9 19       		.uleb128 0x19
 5291 01ca 49       		.uleb128 0x49
 5292 01cb 13       		.uleb128 0x13
 5293 01cc 11       		.uleb128 0x11
 5294 01cd 01       		.uleb128 0x1
 5295 01ce 12       		.uleb128 0x12
 5296 01cf 06       		.uleb128 0x6
 5297 01d0 40       		.uleb128 0x40
 5298 01d1 18       		.uleb128 0x18
 5299 01d2 9642     		.uleb128 0x2116
 5300 01d4 19       		.uleb128 0x19
 5301 01d5 00       		.byte	0
 5302 01d6 00       		.byte	0
 5303 01d7 1C       		.uleb128 0x1c
 5304 01d8 2E       		.uleb128 0x2e
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 115


 5305 01d9 01       		.byte	0x1
 5306 01da 3F       		.uleb128 0x3f
 5307 01db 19       		.uleb128 0x19
 5308 01dc 03       		.uleb128 0x3
 5309 01dd 0E       		.uleb128 0xe
 5310 01de 3A       		.uleb128 0x3a
 5311 01df 0B       		.uleb128 0xb
 5312 01e0 3B       		.uleb128 0x3b
 5313 01e1 05       		.uleb128 0x5
 5314 01e2 49       		.uleb128 0x49
 5315 01e3 13       		.uleb128 0x13
 5316 01e4 11       		.uleb128 0x11
 5317 01e5 01       		.uleb128 0x1
 5318 01e6 12       		.uleb128 0x12
 5319 01e7 06       		.uleb128 0x6
 5320 01e8 40       		.uleb128 0x40
 5321 01e9 18       		.uleb128 0x18
 5322 01ea 9642     		.uleb128 0x2116
 5323 01ec 19       		.uleb128 0x19
 5324 01ed 01       		.uleb128 0x1
 5325 01ee 13       		.uleb128 0x13
 5326 01ef 00       		.byte	0
 5327 01f0 00       		.byte	0
 5328 01f1 1D       		.uleb128 0x1d
 5329 01f2 0B       		.uleb128 0xb
 5330 01f3 01       		.byte	0x1
 5331 01f4 11       		.uleb128 0x11
 5332 01f5 01       		.uleb128 0x1
 5333 01f6 12       		.uleb128 0x12
 5334 01f7 06       		.uleb128 0x6
 5335 01f8 00       		.byte	0
 5336 01f9 00       		.byte	0
 5337 01fa 1E       		.uleb128 0x1e
 5338 01fb 0B       		.uleb128 0xb
 5339 01fc 01       		.byte	0x1
 5340 01fd 11       		.uleb128 0x11
 5341 01fe 01       		.uleb128 0x1
 5342 01ff 12       		.uleb128 0x12
 5343 0200 06       		.uleb128 0x6
 5344 0201 01       		.uleb128 0x1
 5345 0202 13       		.uleb128 0x13
 5346 0203 00       		.byte	0
 5347 0204 00       		.byte	0
 5348 0205 1F       		.uleb128 0x1f
 5349 0206 21       		.uleb128 0x21
 5350 0207 00       		.byte	0
 5351 0208 49       		.uleb128 0x49
 5352 0209 13       		.uleb128 0x13
 5353 020a 2F       		.uleb128 0x2f
 5354 020b 05       		.uleb128 0x5
 5355 020c 00       		.byte	0
 5356 020d 00       		.byte	0
 5357 020e 20       		.uleb128 0x20
 5358 020f 2E       		.uleb128 0x2e
 5359 0210 01       		.byte	0x1
 5360 0211 3F       		.uleb128 0x3f
 5361 0212 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 116


 5362 0213 03       		.uleb128 0x3
 5363 0214 0E       		.uleb128 0xe
 5364 0215 3A       		.uleb128 0x3a
 5365 0216 0B       		.uleb128 0xb
 5366 0217 3B       		.uleb128 0x3b
 5367 0218 05       		.uleb128 0x5
 5368 0219 27       		.uleb128 0x27
 5369 021a 19       		.uleb128 0x19
 5370 021b 49       		.uleb128 0x49
 5371 021c 13       		.uleb128 0x13
 5372 021d 11       		.uleb128 0x11
 5373 021e 01       		.uleb128 0x1
 5374 021f 12       		.uleb128 0x12
 5375 0220 06       		.uleb128 0x6
 5376 0221 40       		.uleb128 0x40
 5377 0222 18       		.uleb128 0x18
 5378 0223 9642     		.uleb128 0x2116
 5379 0225 19       		.uleb128 0x19
 5380 0226 01       		.uleb128 0x1
 5381 0227 13       		.uleb128 0x13
 5382 0228 00       		.byte	0
 5383 0229 00       		.byte	0
 5384 022a 21       		.uleb128 0x21
 5385 022b 05       		.uleb128 0x5
 5386 022c 00       		.byte	0
 5387 022d 03       		.uleb128 0x3
 5388 022e 0E       		.uleb128 0xe
 5389 022f 3A       		.uleb128 0x3a
 5390 0230 0B       		.uleb128 0xb
 5391 0231 3B       		.uleb128 0x3b
 5392 0232 05       		.uleb128 0x5
 5393 0233 49       		.uleb128 0x49
 5394 0234 13       		.uleb128 0x13
 5395 0235 02       		.uleb128 0x2
 5396 0236 18       		.uleb128 0x18
 5397 0237 00       		.byte	0
 5398 0238 00       		.byte	0
 5399 0239 22       		.uleb128 0x22
 5400 023a 34       		.uleb128 0x34
 5401 023b 00       		.byte	0
 5402 023c 03       		.uleb128 0x3
 5403 023d 08       		.uleb128 0x8
 5404 023e 3A       		.uleb128 0x3a
 5405 023f 0B       		.uleb128 0xb
 5406 0240 3B       		.uleb128 0x3b
 5407 0241 05       		.uleb128 0x5
 5408 0242 49       		.uleb128 0x49
 5409 0243 13       		.uleb128 0x13
 5410 0244 02       		.uleb128 0x2
 5411 0245 18       		.uleb128 0x18
 5412 0246 00       		.byte	0
 5413 0247 00       		.byte	0
 5414 0248 23       		.uleb128 0x23
 5415 0249 34       		.uleb128 0x34
 5416 024a 00       		.byte	0
 5417 024b 03       		.uleb128 0x3
 5418 024c 0E       		.uleb128 0xe
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 117


 5419 024d 3A       		.uleb128 0x3a
 5420 024e 0B       		.uleb128 0xb
 5421 024f 3B       		.uleb128 0x3b
 5422 0250 05       		.uleb128 0x5
 5423 0251 49       		.uleb128 0x49
 5424 0252 13       		.uleb128 0x13
 5425 0253 3F       		.uleb128 0x3f
 5426 0254 19       		.uleb128 0x19
 5427 0255 3C       		.uleb128 0x3c
 5428 0256 19       		.uleb128 0x19
 5429 0257 00       		.byte	0
 5430 0258 00       		.byte	0
 5431 0259 24       		.uleb128 0x24
 5432 025a 34       		.uleb128 0x34
 5433 025b 00       		.byte	0
 5434 025c 03       		.uleb128 0x3
 5435 025d 0E       		.uleb128 0xe
 5436 025e 3A       		.uleb128 0x3a
 5437 025f 0B       		.uleb128 0xb
 5438 0260 3B       		.uleb128 0x3b
 5439 0261 0B       		.uleb128 0xb
 5440 0262 49       		.uleb128 0x49
 5441 0263 13       		.uleb128 0x13
 5442 0264 3F       		.uleb128 0x3f
 5443 0265 19       		.uleb128 0x19
 5444 0266 02       		.uleb128 0x2
 5445 0267 18       		.uleb128 0x18
 5446 0268 00       		.byte	0
 5447 0269 00       		.byte	0
 5448 026a 25       		.uleb128 0x25
 5449 026b 34       		.uleb128 0x34
 5450 026c 00       		.byte	0
 5451 026d 03       		.uleb128 0x3
 5452 026e 08       		.uleb128 0x8
 5453 026f 3A       		.uleb128 0x3a
 5454 0270 0B       		.uleb128 0xb
 5455 0271 3B       		.uleb128 0x3b
 5456 0272 0B       		.uleb128 0xb
 5457 0273 49       		.uleb128 0x49
 5458 0274 13       		.uleb128 0x13
 5459 0275 3F       		.uleb128 0x3f
 5460 0276 19       		.uleb128 0x19
 5461 0277 02       		.uleb128 0x2
 5462 0278 18       		.uleb128 0x18
 5463 0279 00       		.byte	0
 5464 027a 00       		.byte	0
 5465 027b 00       		.byte	0
 5466              		.section	.debug_aranges,"",%progbits
 5467 0000 8C000000 		.4byte	0x8c
 5468 0004 0200     		.2byte	0x2
 5469 0006 00000000 		.4byte	.Ldebug_info0
 5470 000a 04       		.byte	0x4
 5471 000b 00       		.byte	0
 5472 000c 0000     		.2byte	0
 5473 000e 0000     		.2byte	0
 5474 0010 00000000 		.4byte	.LFB64
 5475 0014 0C000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 118


 5476 0018 00000000 		.4byte	.LFB65
 5477 001c 2C010000 		.4byte	.LFE65-.LFB65
 5478 0020 00000000 		.4byte	.LFB66
 5479 0024 64000000 		.4byte	.LFE66-.LFB66
 5480 0028 00000000 		.4byte	.LFB67
 5481 002c 2A000000 		.4byte	.LFE67-.LFB67
 5482 0030 00000000 		.4byte	.LFB68
 5483 0034 50000000 		.4byte	.LFE68-.LFB68
 5484 0038 00000000 		.4byte	.LFB69
 5485 003c 48000000 		.4byte	.LFE69-.LFB69
 5486 0040 00000000 		.4byte	.LFB70
 5487 0044 1E000000 		.4byte	.LFE70-.LFB70
 5488 0048 00000000 		.4byte	.LFB71
 5489 004c 46000000 		.4byte	.LFE71-.LFB71
 5490 0050 00000000 		.4byte	.LFB72
 5491 0054 4C000000 		.4byte	.LFE72-.LFB72
 5492 0058 00000000 		.4byte	.LFB73
 5493 005c 1E000000 		.4byte	.LFE73-.LFB73
 5494 0060 00000000 		.4byte	.LFB74
 5495 0064 30040000 		.4byte	.LFE74-.LFB74
 5496 0068 00000000 		.4byte	.LFB75
 5497 006c 44000000 		.4byte	.LFE75-.LFB75
 5498 0070 00000000 		.4byte	.LFB76
 5499 0074 5C0E0000 		.4byte	.LFE76-.LFB76
 5500 0078 00000000 		.4byte	.LFB77
 5501 007c 74000000 		.4byte	.LFE77-.LFB77
 5502 0080 00000000 		.4byte	.LFB78
 5503 0084 38010000 		.4byte	.LFE78-.LFB78
 5504 0088 00000000 		.4byte	0
 5505 008c 00000000 		.4byte	0
 5506              		.section	.debug_ranges,"",%progbits
 5507              	.Ldebug_ranges0:
 5508 0000 00000000 		.4byte	.LFB64
 5509 0004 0C000000 		.4byte	.LFE64
 5510 0008 00000000 		.4byte	.LFB65
 5511 000c 2C010000 		.4byte	.LFE65
 5512 0010 00000000 		.4byte	.LFB66
 5513 0014 64000000 		.4byte	.LFE66
 5514 0018 00000000 		.4byte	.LFB67
 5515 001c 2A000000 		.4byte	.LFE67
 5516 0020 00000000 		.4byte	.LFB68
 5517 0024 50000000 		.4byte	.LFE68
 5518 0028 00000000 		.4byte	.LFB69
 5519 002c 48000000 		.4byte	.LFE69
 5520 0030 00000000 		.4byte	.LFB70
 5521 0034 1E000000 		.4byte	.LFE70
 5522 0038 00000000 		.4byte	.LFB71
 5523 003c 46000000 		.4byte	.LFE71
 5524 0040 00000000 		.4byte	.LFB72
 5525 0044 4C000000 		.4byte	.LFE72
 5526 0048 00000000 		.4byte	.LFB73
 5527 004c 1E000000 		.4byte	.LFE73
 5528 0050 00000000 		.4byte	.LFB74
 5529 0054 30040000 		.4byte	.LFE74
 5530 0058 00000000 		.4byte	.LFB75
 5531 005c 44000000 		.4byte	.LFE75
 5532 0060 00000000 		.4byte	.LFB76
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 119


 5533 0064 5C0E0000 		.4byte	.LFE76
 5534 0068 00000000 		.4byte	.LFB77
 5535 006c 74000000 		.4byte	.LFE77
 5536 0070 00000000 		.4byte	.LFB78
 5537 0074 38010000 		.4byte	.LFE78
 5538 0078 00000000 		.4byte	0
 5539 007c 00000000 		.4byte	0
 5540              		.section	.debug_line,"",%progbits
 5541              	.Ldebug_line0:
 5542 0000 BC050000 		.section	.debug_str,"MS",%progbits,1
 5542      02002702 
 5542      00000201 
 5542      FB0E0D00 
 5542      01010101 
 5543              	.LASF67:
 5544 0000 746D5F79 		.ascii	"tm_year\000"
 5544      65617200 
 5545              	.LASF64:
 5546 0008 746D5F68 		.ascii	"tm_hour\000"
 5546      6F757200 
 5547              	.LASF69:
 5548 0010 746D5F79 		.ascii	"tm_yday\000"
 5548      64617900 
 5549              	.LASF36:
 5550 0018 6E756D5F 		.ascii	"num_invalid_readings\000"
 5550      696E7661 
 5550      6C69645F 
 5550      72656164 
 5550      696E6773 
 5551              	.LASF152:
 5552 002d 62756666 		.ascii	"buffer_overflow\000"
 5552      65725F6F 
 5552      76657266 
 5552      6C6F7700 
 5553              	.LASF150:
 5554 003d 66696C65 		.ascii	"fileName\000"
 5554      4E616D65 
 5554      00
 5555              	.LASF0:
 5556 0046 7369676E 		.ascii	"signed char\000"
 5556      65642063 
 5556      68617200 
 5557              	.LASF96:
 5558 0052 636F756E 		.ascii	"countDownResetCondition\000"
 5558      74446F77 
 5558      6E526573 
 5558      6574436F 
 5558      6E646974 
 5559              	.LASF174:
 5560 006a 57616B65 		.ascii	"Wakeup_ISR\000"
 5560      75705F49 
 5560      535200
 5561              	.LASF171:
 5562 0075 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5562      43313120 
 5562      352E342E 
 5562      31203230 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 120


 5562      31363036 
 5563 00a8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 5563      20726576 
 5563      6973696F 
 5563      6E203233 
 5563      37373135 
 5564 00db 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5564      66756E63 
 5564      74696F6E 
 5564      2D736563 
 5564      74696F6E 
 5565              	.LASF26:
 5566 0103 4D6F6E74 		.ascii	"Month\000"
 5566      6800
 5567              	.LASF7:
 5568 0109 6C6F6E67 		.ascii	"long long unsigned int\000"
 5568      206C6F6E 
 5568      6720756E 
 5568      7369676E 
 5568      65642069 
 5569              	.LASF22:
 5570 0120 486F7572 		.ascii	"Hour\000"
 5570      00
 5571              	.LASF40:
 5572 0125 76616C75 		.ascii	"values\000"
 5572      657300
 5573              	.LASF156:
 5574 012c 6D6F6465 		.ascii	"modem_state\000"
 5574      6D5F7374 
 5574      61746500 
 5575              	.LASF165:
 5576 0138 616C6172 		.ascii	"alarmMeasure\000"
 5576      6D4D6561 
 5576      73757265 
 5576      00
 5577              	.LASF151:
 5578 0145 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5578      52784275 
 5578      66666572 
 5578      00
 5579              	.LASF158:
 5580 0152 6D6F6465 		.ascii	"modem_stats\000"
 5580      6D5F7374 
 5580      61747300 
 5581              	.LASF6:
 5582 015e 6C6F6E67 		.ascii	"long long int\000"
 5582      206C6F6E 
 5582      6720696E 
 5582      7400
 5583              	.LASF127:
 5584 016c 7061636B 		.ascii	"packets\000"
 5584      65747300 
 5585              	.LASF80:
 5586 0174 65636E6F 		.ascii	"ecno\000"
 5586      00
 5587              	.LASF166:
 5588 0179 74696D65 		.ascii	"timeToMeasure\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 121


 5588      546F4D65 
 5588      61737572 
 5588      6500
 5589              	.LASF83:
 5590 0187 74696D65 		.ascii	"time_to_network_connect\000"
 5590      5F746F5F 
 5590      6E657477 
 5590      6F726B5F 
 5590      636F6E6E 
 5591              	.LASF168:
 5592 019f 74696D65 		.ascii	"timeToSync\000"
 5592      546F5379 
 5592      6E6300
 5593              	.LASF54:
 5594 01aa 766F6C74 		.ascii	"voltage_solar\000"
 5594      6167655F 
 5594      736F6C61 
 5594      7200
 5595              	.LASF55:
 5596 01b8 766F6C74 		.ascii	"voltage_charge_current\000"
 5596      6167655F 
 5596      63686172 
 5596      67655F63 
 5596      75727265 
 5597              	.LASF149:
 5598 01cf 75706772 		.ascii	"upgrade_status\000"
 5598      6164655F 
 5598      73746174 
 5598      757300
 5599              	.LASF130:
 5600 01de 635F6461 		.ascii	"c_data_count_sent\000"
 5600      74615F63 
 5600      6F756E74 
 5600      5F73656E 
 5600      7400
 5601              	.LASF77:
 5602 01f0 6D6F6465 		.ascii	"modem_info_t\000"
 5602      6D5F696E 
 5602      666F5F74 
 5602      00
 5603              	.LASF78:
 5604 01fd 72786C65 		.ascii	"rxlev\000"
 5604      7600
 5605              	.LASF4:
 5606 0203 6C6F6E67 		.ascii	"long int\000"
 5606      20696E74 
 5606      00
 5607              	.LASF84:
 5608 020c 74696D65 		.ascii	"time_to_acquire_ip\000"
 5608      5F746F5F 
 5608      61637175 
 5608      6972655F 
 5608      697000
 5609              	.LASF97:
 5610 021f 616C6172 		.ascii	"alarm\000"
 5610      6D00
 5611              	.LASF11:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 122


 5612 0225 75696E74 		.ascii	"uint8\000"
 5612      3800
 5613              	.LASF122:
 5614 022b 635F7472 		.ascii	"c_try_counter\000"
 5614      795F636F 
 5614      756E7465 
 5614      7200
 5615              	.LASF133:
 5616 0239 73656E64 		.ascii	"send_time\000"
 5616      5F74696D 
 5616      6500
 5617              	.LASF16:
 5618 0243 696E7433 		.ascii	"int32\000"
 5618      3200
 5619              	.LASF86:
 5620 0249 6E6F6465 		.ascii	"node_type\000"
 5620      5F747970 
 5620      6500
 5621              	.LASF120:
 5622 0253 73796E63 		.ascii	"syncData\000"
 5622      44617461 
 5622      00
 5623              	.LASF128:
 5624 025c 6E657477 		.ascii	"network_time\000"
 5624      6F726B5F 
 5624      74696D65 
 5624      00
 5625              	.LASF3:
 5626 0269 73686F72 		.ascii	"short unsigned int\000"
 5626      7420756E 
 5626      7369676E 
 5626      65642069 
 5626      6E7400
 5627              	.LASF13:
 5628 027c 75696E74 		.ascii	"uint32\000"
 5628      333200
 5629              	.LASF75:
 5630 0283 6D6F6465 		.ascii	"model_id\000"
 5630      6C5F6964 
 5630      00
 5631              	.LASF33:
 5632 028c 616C6C5F 		.ascii	"all_level_readings\000"
 5632      6C657665 
 5632      6C5F7265 
 5632      6164696E 
 5632      677300
 5633              	.LASF93:
 5634 029f 636F756E 		.ascii	"countDownValue\000"
 5634      74446F77 
 5634      6E56616C 
 5634      756500
 5635              	.LASF145:
 5636 02ae 75706772 		.ascii	"upgraded\000"
 5636      61646564 
 5636      00
 5637              	.LASF66:
 5638 02b7 746D5F6D 		.ascii	"tm_mon\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 123


 5638      6F6E00
 5639              	.LASF38:
 5640 02be 6E766172 		.ascii	"nvars\000"
 5640      7300
 5641              	.LASF90:
 5642 02c4 64656275 		.ascii	"debug_level\000"
 5642      675F6C65 
 5642      76656C00 
 5643              	.LASF147:
 5644 02d0 706F7274 		.ascii	"port\000"
 5644      00
 5645              	.LASF173:
 5646 02d5 433A5C6E 		.ascii	"C:\\notoriOS\\notoriOS.cydsn\000"
 5646      6F746F72 
 5646      694F535C 
 5646      6E6F746F 
 5646      72694F53 
 5647              	.LASF71:
 5648 02f0 76616C75 		.ascii	"value\000"
 5648      6500
 5649              	.LASF146:
 5650 02f6 686F7374 		.ascii	"host\000"
 5650      00
 5651              	.LASF44:
 5652 02fb 64617461 		.ascii	"data2\000"
 5652      3200
 5653              	.LASF167:
 5654 0301 616C6172 		.ascii	"alarmSync\000"
 5654      6D53796E 
 5654      6300
 5655              	.LASF8:
 5656 030b 756E7369 		.ascii	"unsigned int\000"
 5656      676E6564 
 5656      20696E74 
 5656      00
 5657              	.LASF143:
 5658 0318 73657454 		.ascii	"setTime\000"
 5658      696D6500 
 5659              	.LASF73:
 5660 0320 6B65795F 		.ascii	"key_value_t\000"
 5660      76616C75 
 5660      655F7400 
 5661              	.LASF109:
 5662 032c 41796F49 		.ascii	"AyoItsTime\000"
 5662      74735469 
 5662      6D6500
 5663              	.LASF35:
 5664 0337 6E756D5F 		.ascii	"num_valid_readings\000"
 5664      76616C69 
 5664      645F7265 
 5664      6164696E 
 5664      677300
 5665              	.LASF132:
 5666 034a 68747470 		.ascii	"http_chunk\000"
 5666      5F636875 
 5666      6E6B00
 5667              	.LASF139:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 124


 5668 0355 6D5F766F 		.ascii	"m_voltage\000"
 5668      6C746167 
 5668      6500
 5669              	.LASF5:
 5670 035f 6C6F6E67 		.ascii	"long unsigned int\000"
 5670      20756E73 
 5670      69676E65 
 5670      6420696E 
 5670      7400
 5671              	.LASF106:
 5672 0371 7472795F 		.ascii	"try_counter\000"
 5672      636F756E 
 5672      74657200 
 5673              	.LASF123:
 5674 037d 64617461 		.ascii	"data_count_desired\000"
 5674      5F636F75 
 5674      6E745F64 
 5674      65736972 
 5674      656400
 5675              	.LASF53:
 5676 0390 766F6C74 		.ascii	"voltage_battery\000"
 5676      6167655F 
 5676      62617474 
 5676      65727900 
 5677              	.LASF24:
 5678 03a0 4461794F 		.ascii	"DayOfMonth\000"
 5678      664D6F6E 
 5678      746800
 5679              	.LASF136:
 5680 03ab 6D616B65 		.ascii	"makeMeasurements\000"
 5680      4D656173 
 5680      7572656D 
 5680      656E7473 
 5680      00
 5681              	.LASF155:
 5682 03bc 64617461 		.ascii	"data\000"
 5682      00
 5683              	.LASF102:
 5684 03c1 65705F70 		.ascii	"ep_port\000"
 5684      6F727400 
 5685              	.LASF70:
 5686 03c9 746D5F69 		.ascii	"tm_isdst\000"
 5686      73647374 
 5686      00
 5687              	.LASF98:
 5688 03d2 6D6F6465 		.ascii	"modem_info\000"
 5688      6D5F696E 
 5688      666F00
 5689              	.LASF101:
 5690 03dd 65705F68 		.ascii	"ep_host\000"
 5690      6F737400 
 5691              	.LASF14:
 5692 03e5 696E7438 		.ascii	"int8\000"
 5692      00
 5693              	.LASF108:
 5694 03ea 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 5694      576F726B 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 125


 5694      576F726B 
 5694      576F726B 
 5694      576F726B 
 5695              	.LASF124:
 5696 0403 635F6461 		.ascii	"c_data_count_desired\000"
 5696      74615F63 
 5696      6F756E74 
 5696      5F646573 
 5696      69726564 
 5697              	.LASF119:
 5698 0418 745F7364 		.ascii	"t_sd_card\000"
 5698      5F636172 
 5698      6400
 5699              	.LASF2:
 5700 0422 73686F72 		.ascii	"short int\000"
 5700      7420696E 
 5700      7400
 5701              	.LASF157:
 5702 042c 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 5702      6D5F7374 
 5702      6172745F 
 5702      74696D65 
 5702      5F737461 
 5703              	.LASF100:
 5704 0443 7379735F 		.ascii	"sys_info_t\000"
 5704      696E666F 
 5704      5F7400
 5705              	.LASF92:
 5706 044e 75706461 		.ascii	"updatable_parameters_t\000"
 5706      7461626C 
 5706      655F7061 
 5706      72616D65 
 5706      74657273 
 5707              	.LASF110:
 5708 0465 616C6172 		.ascii	"alarmType\000"
 5708      6D547970 
 5708      6500
 5709              	.LASF153:
 5710 046f 64617461 		.ascii	"dataPointsInStack\000"
 5710      506F696E 
 5710      7473496E 
 5710      53746163 
 5710      6B00
 5711              	.LASF63:
 5712 0481 746D5F6D 		.ascii	"tm_min\000"
 5712      696E00
 5713              	.LASF148:
 5714 0488 726F7574 		.ascii	"route\000"
 5714      6500
 5715              	.LASF111:
 5716 048e 616C6172 		.ascii	"alarmToBeUpdated\000"
 5716      6D546F42 
 5716      65557064 
 5716      61746564 
 5716      00
 5717              	.LASF21:
 5718 049f 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 126


 5718      74797065 
 5718      00
 5719              	.LASF42:
 5720 04a8 64617461 		.ascii	"data0\000"
 5720      3000
 5721              	.LASF43:
 5722 04ae 64617461 		.ascii	"data1\000"
 5722      3100
 5723              	.LASF45:
 5724 04b4 64617461 		.ascii	"data3\000"
 5724      3300
 5725              	.LASF46:
 5726 04ba 64617461 		.ascii	"data4\000"
 5726      3400
 5727              	.LASF47:
 5728 04c0 64617461 		.ascii	"data5\000"
 5728      3500
 5729              	.LASF48:
 5730 04c6 64617461 		.ascii	"data6\000"
 5730      3600
 5731              	.LASF49:
 5732 04cc 64617461 		.ascii	"data7\000"
 5732      3700
 5733              	.LASF50:
 5734 04d2 64617461 		.ascii	"data8\000"
 5734      3800
 5735              	.LASF103:
 5736 04d8 7379735F 		.ascii	"sys_settings_t\000"
 5736      73657474 
 5736      696E6773 
 5736      5F7400
 5737              	.LASF144:
 5738 04e7 6C6F6361 		.ascii	"localTime\000"
 5738      6C54696D 
 5738      6500
 5739              	.LASF169:
 5740 04f1 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 5740      546F5379 
 5740      636E5265 
 5740      6D6F7465 
 5740      50617261 
 5741              	.LASF72:
 5742 0508 74696D65 		.ascii	"timeStamp\000"
 5742      5374616D 
 5742      7000
 5743              	.LASF28:
 5744 0512 5254435F 		.ascii	"RTC_TIME_DATE\000"
 5744      54494D45 
 5744      5F444154 
 5744      4500
 5745              	.LASF159:
 5746 0520 75706461 		.ascii	"updatable_parameters\000"
 5746      7461626C 
 5746      655F7061 
 5746      72616D65 
 5746      74657273 
 5747              	.LASF115:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 127


 5748 0535 43726561 		.ascii	"CreateAlarm\000"
 5748      7465416C 
 5748      61726D00 
 5749              	.LASF131:
 5750 0541 7061636B 		.ascii	"packet\000"
 5750      657400
 5751              	.LASF121:
 5752 0548 735F7273 		.ascii	"s_rsrp\000"
 5752      727000
 5753              	.LASF56:
 5754 054f 766F6C74 		.ascii	"voltage_pressure\000"
 5754      6167655F 
 5754      70726573 
 5754      73757265 
 5754      00
 5755              	.LASF160:
 5756 0560 68747470 		.ascii	"http_request\000"
 5756      5F726571 
 5756      75657374 
 5756      00
 5757              	.LASF17:
 5758 056d 666C6F61 		.ascii	"float\000"
 5758      7400
 5759              	.LASF37:
 5760 0573 6C657665 		.ascii	"level_sensor_t\000"
 5760      6C5F7365 
 5760      6E736F72 
 5760      5F7400
 5761              	.LASF135:
 5762 0582 636F6E66 		.ascii	"configureRemoteParams\000"
 5762      69677572 
 5762      6552656D 
 5762      6F746550 
 5762      6172616D 
 5763              	.LASF170:
 5764 0598 44617461 		.ascii	"Data_fileName\000"
 5764      5F66696C 
 5764      654E616D 
 5764      6500
 5765              	.LASF107:
 5766 05a6 6D6F6465 		.ascii	"modem_status\000"
 5766      6D5F7374 
 5766      61747573 
 5766      00
 5767              	.LASF29:
 5768 05b3 74657374 		.ascii	"test_name\000"
 5768      5F6E616D 
 5768      6500
 5769              	.LASF27:
 5770 05bd 59656172 		.ascii	"Year\000"
 5770      00
 5771              	.LASF91:
 5772 05c2 5F426F6F 		.ascii	"_Bool\000"
 5772      6C00
 5773              	.LASF10:
 5774 05c8 696E7433 		.ascii	"int32_t\000"
 5774      325F7400 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 128


 5775              	.LASF1:
 5776 05d0 756E7369 		.ascii	"unsigned char\000"
 5776      676E6564 
 5776      20636861 
 5776      7200
 5777              	.LASF12:
 5778 05de 75696E74 		.ascii	"uint16\000"
 5778      313600
 5779              	.LASF164:
 5780 05e5 73797374 		.ascii	"system_settings\000"
 5780      656D5F73 
 5780      65747469 
 5780      6E677300 
 5781              	.LASF82:
 5782 05f5 72737270 		.ascii	"rsrp\000"
 5782      00
 5783              	.LASF81:
 5784 05fa 72737271 		.ascii	"rsrq\000"
 5784      00
 5785              	.LASF112:
 5786 05ff 52657365 		.ascii	"ResetAlarm\000"
 5786      74416C61 
 5786      726D00
 5787              	.LASF134:
 5788 060a 735F7365 		.ascii	"s_send_time\000"
 5788      6E645F74 
 5788      696D6500 
 5789              	.LASF89:
 5790 0616 73796E63 		.ascii	"sync_time\000"
 5790      5F74696D 
 5790      6500
 5791              	.LASF60:
 5792 0620 70726573 		.ascii	"pressure_depth\000"
 5792      73757265 
 5792      5F646570 
 5792      746800
 5793              	.LASF79:
 5794 062f 72736370 		.ascii	"rscp\000"
 5794      00
 5795              	.LASF39:
 5796 0634 666C6167 		.ascii	"flag\000"
 5796      00
 5797              	.LASF23:
 5798 0639 4461794F 		.ascii	"DayOfWeek\000"
 5798      66576565 
 5798      6B00
 5799              	.LASF32:
 5800 0643 74657374 		.ascii	"test_t\000"
 5800      5F7400
 5801              	.LASF163:
 5802 064a 73797374 		.ascii	"system_info\000"
 5802      656D5F69 
 5802      6E666F00 
 5803              	.LASF76:
 5804 0656 696D6569 		.ascii	"imei\000"
 5804      00
 5805              	.LASF31:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 129


 5806 065b 72656173 		.ascii	"reason\000"
 5806      6F6E00
 5807              	.LASF113:
 5808 0662 616C6172 		.ascii	"alarmToBeReset\000"
 5808      6D546F42 
 5808      65526573 
 5808      657400
 5809              	.LASF118:
 5810 0671 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 5810      6B697479 
 5810      43686563 
 5810      6B596F75 
 5810      7273656C 
 5811              	.LASF129:
 5812 069d 64617461 		.ascii	"data_count_sent\000"
 5812      5F636F75 
 5812      6E745F73 
 5812      656E7400 
 5813              	.LASF85:
 5814 06ad 6D6F6465 		.ascii	"modem_stats_t\000"
 5814      6D5F7374 
 5814      6174735F 
 5814      7400
 5815              	.LASF59:
 5816 06bb 70726573 		.ascii	"pressure_current\000"
 5816      73757265 
 5816      5F637572 
 5816      72656E74 
 5816      00
 5817              	.LASF57:
 5818 06cc 76616C69 		.ascii	"valid\000"
 5818      6400
 5819              	.LASF138:
 5820 06d2 6269675F 		.ascii	"big_value\000"
 5820      76616C75 
 5820      6500
 5821              	.LASF68:
 5822 06dc 746D5F77 		.ascii	"tm_wday\000"
 5822      64617900 
 5823              	.LASF20:
 5824 06e4 6C6F6E67 		.ascii	"long double\000"
 5824      20646F75 
 5824      626C6500 
 5825              	.LASF126:
 5826 06f0 6368756E 		.ascii	"chunk\000"
 5826      6B00
 5827              	.LASF137:
 5828 06f6 635F7469 		.ascii	"c_timeStamp\000"
 5828      6D655374 
 5828      616D7000 
 5829              	.LASF19:
 5830 0702 63686172 		.ascii	"char\000"
 5830      00
 5831              	.LASF52:
 5832 0707 736F6E74 		.ascii	"sontek_t\000"
 5832      656B5F74 
 5832      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 130


 5833              	.LASF162:
 5834 0710 68747470 		.ascii	"http_route\000"
 5834      5F726F75 
 5834      746500
 5835              	.LASF125:
 5836 071b 706F7274 		.ascii	"portConfig\000"
 5836      436F6E66 
 5836      696700
 5837              	.LASF9:
 5838 0726 5F5F696E 		.ascii	"__int32_t\000"
 5838      7433325F 
 5838      7400
 5839              	.LASF104:
 5840 0730 756E6971 		.ascii	"uniqueId\000"
 5840      75654964 
 5840      00
 5841              	.LASF51:
 5842 0739 64617461 		.ascii	"data9\000"
 5842      3900
 5843              	.LASF140:
 5844 073f 6D5F6C65 		.ascii	"m_level_sensor\000"
 5844      76656C5F 
 5844      73656E73 
 5844      6F7200
 5845              	.LASF34:
 5846 074e 6C657665 		.ascii	"level_reading\000"
 5846      6C5F7265 
 5846      6164696E 
 5846      6700
 5847              	.LASF175:
 5848 075c 4C617942 		.ascii	"LayBack\000"
 5848      61636B00 
 5849              	.LASF141:
 5850 0764 6D5F736F 		.ascii	"m_sontek\000"
 5850      6E74656B 
 5850      00
 5851              	.LASF74:
 5852 076d 73696D5F 		.ascii	"sim_id\000"
 5852      696400
 5853              	.LASF65:
 5854 0774 746D5F6D 		.ascii	"tm_mday\000"
 5854      64617900 
 5855              	.LASF116:
 5856 077c 6E657741 		.ascii	"newAlarm\000"
 5856      6C61726D 
 5856      00
 5857              	.LASF62:
 5858 0785 746D5F73 		.ascii	"tm_sec\000"
 5858      656300
 5859              	.LASF142:
 5860 078c 6D5F7072 		.ascii	"m_pressure\000"
 5860      65737375 
 5860      726500
 5861              	.LASF30:
 5862 0797 73746174 		.ascii	"status\000"
 5862      757300
 5863              	.LASF154:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 131


 5864 079e 64617461 		.ascii	"dataPointsInStackDesired\000"
 5864      506F696E 
 5864      7473496E 
 5864      53746163 
 5864      6B446573 
 5865              	.LASF41:
 5866 07b7 6C616265 		.ascii	"labels\000"
 5866      6C7300
 5867              	.LASF172:
 5868 07be 6E6F746F 		.ascii	"notoriOS.c\000"
 5868      72694F53 
 5868      2E6300
 5869              	.LASF161:
 5870 07c9 68747470 		.ascii	"http_body\000"
 5870      5F626F64 
 5870      7900
 5871              	.LASF15:
 5872 07d3 696E7431 		.ascii	"int16\000"
 5872      3600
 5873              	.LASF95:
 5874 07d9 636F756E 		.ascii	"countDownType\000"
 5874      74446F77 
 5874      6E547970 
 5874      6500
 5875              	.LASF94:
 5876 07e7 63757272 		.ascii	"currentCountDownValue\000"
 5876      656E7443 
 5876      6F756E74 
 5876      446F776E 
 5876      56616C75 
 5877              	.LASF87:
 5878 07fd 73696D5F 		.ascii	"sim_type\000"
 5878      74797065 
 5878      00
 5879              	.LASF105:
 5880 0806 635F6865 		.ascii	"c_hey\000"
 5880      7900
 5881              	.LASF25:
 5882 080c 4461794F 		.ascii	"DayOfYear\000"
 5882      66596561 
 5882      7200
 5883              	.LASF61:
 5884 0816 70726573 		.ascii	"pressure_t\000"
 5884      73757265 
 5884      5F7400
 5885              	.LASF114:
 5886 0821 416C6172 		.ascii	"AlarmReady\000"
 5886      6D526561 
 5886      647900
 5887              	.LASF117:
 5888 082c 52656164 		.ascii	"ReadyOrNot\000"
 5888      794F724E 
 5888      6F7400
 5889              	.LASF176:
 5890 0837 6D61696E 		.ascii	"main\000"
 5890      00
 5891              	.LASF99:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc2lfMj3.s 			page 132


 5892 083c 63686970 		.ascii	"chip_uniqueId\000"
 5892      5F756E69 
 5892      71756549 
 5892      6400
 5893              	.LASF88:
 5894 084a 6D656173 		.ascii	"measure_time\000"
 5894      7572655F 
 5894      74696D65 
 5894      00
 5895              	.LASF18:
 5896 0857 646F7562 		.ascii	"double\000"
 5896      6C6500
 5897              	.LASF58:
 5898 085e 766F6C74 		.ascii	"voltage_t\000"
 5898      6167655F 
 5898      7400
 5899              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
