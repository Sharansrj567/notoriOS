ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,10,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	App_LED_enabled,1,1
  33              		.comm	app_led_inbox,100,4
  34              		.comm	level_sensor_inbox,100,4
  35              		.comm	level_sensor_enabled,1,1
  36              		.comm	downstream_level_sensor_inbox,100,4
  37              		.comm	downstream_level_sensor_enabled,1,1
  38              		.comm	valve_diameter,4,4
  39              		.comm	valve_type,10,4
  40              		.comm	valve_enabled,1,1
  41              		.comm	valve_inbox,100,4
  42              		.comm	autosampler_enabled,1,1
  43              		.comm	autosampler_inbox,100,4
  44              		.comm	http_request,10000,4
  45              		.comm	http_body,10000,4
  46              		.comm	http_route,200,4
  47              		.comm	system_info,28,4
  48              		.comm	system_settings,104,4
  49              		.comm	alarmMeasure,6,4
  50              		.comm	timeToMeasure,1,1
  51              		.comm	alarmSync,6,4
  52              		.comm	timeToSync,1,1
  53              		.comm	timeToSycnRemoteParams,1,1
  54              		.comm	hey,1,1
  55              		.comm	alarmAppLED,6,4
  56              		.comm	timeToAppLED,1,1
  57              		.comm	alarmLevelSensor,6,4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 2


  58              		.comm	timeToLevelSensor,1,1
  59              		.comm	alarmDownstreamLevelSensor,6,4
  60              		.comm	timeToDownstreamLevelSensor,1,1
  61              		.comm	alarmValve,6,4
  62              		.comm	timeToValve,1,1
  63              		.comm	alarmAutosampler,6,4
  64              		.comm	timeToAutosampler,1,1
  65              		.section	.text.Wakeup_ISR,"ax",%progbits
  66              		.align	2
  67              		.global	Wakeup_ISR
  68              		.thumb
  69              		.thumb_func
  70              		.type	Wakeup_ISR, %function
  71              	Wakeup_ISR:
  72              	.LFB64:
  73              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  74              		.loc 1 20 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  84              		.loc 1 22 0
  85 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  86              		.loc 1 23 0
  87 0008 00BF     		nop
  88 000a 80BD     		pop	{r7, pc}
  89              		.cfi_endproc
  90              	.LFE64:
  91              		.size	Wakeup_ISR, .-Wakeup_ISR
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 3


  92              		.global	Data_fileName
  93              		.data
  94              		.align	2
  95              		.type	Data_fileName, %object
  96              		.size	Data_fileName, 30
  97              	Data_fileName:
  98 0000 64617461 		.ascii	"data.txt\000"
  98      2E747874 
  98      00
  99 0009 00000000 		.space	21
  99      00000000 
  99      00000000 
  99      00000000 
  99      00000000 
 100              		.comm	try_counter,1,1
 101              		.section	.rodata
 102              		.align	2
 103              	.LC0:
 104 0000 25582D25 		.ascii	"%X-%X\000"
 104      5800
 105 0006 0000     		.align	2
 106              	.LC1:
 107 0008 6563322D 		.ascii	"ec2-18-222-229-124.us-east-2.compute.amazonaws.com\000"
 107      31382D32 
 107      32322D32 
 107      32392D31 
 107      32342E75 
 108              		.section	.text.ReadyOrNot,"ax",%progbits
 109              		.align	2
 110              		.global	ReadyOrNot
 111              		.thumb
 112              		.thumb_func
 113              		.type	ReadyOrNot, %function
 114              	ReadyOrNot:
 115              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
 116              		.loc 1 41 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 24
 119              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 4


 120 0000 B0B5     		push	{r4, r5, r7, lr}
 121              		.cfi_def_cfa_offset 16
 122              		.cfi_offset 4, -16
 123              		.cfi_offset 5, -12
 124              		.cfi_offset 7, -8
 125              		.cfi_offset 14, -4
 126 0002 88B0     		sub	sp, sp, #32
 127              		.cfi_def_cfa_offset 48
 128 0004 02AF     		add	r7, sp, #8
 129              		.cfi_def_cfa 7, 40
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 130              		.loc 1 43 0
 131 0006 5548     		ldr	r0, .L3
 132 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 133              		.loc 1 44 0
 134 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 135              		.loc 1 46 0
 136 0010 FF20     		movs	r0, #255
 137 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 138              		.loc 1 47 0
 139 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 140              		.loc 1 48 0
 141 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 142              		.loc 1 50 0
 143 001e FFF7FEFF 		bl	modem_initialize
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 144              		.loc 1 52 0
 145 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  53:notoriOS.c    ****    
  54:notoriOS.c    ****     
  55:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  56:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  57:notoriOS.c    ****     
  58:notoriOS.c    ****     
  59:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  60:notoriOS.c    ****     uint32 uniqueId[2];
  61:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  62:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 146              		.loc 1 62 0
 147 0026 07F10C03 		add	r3, r7, #12
 148 002a 1846     		mov	r0, r3
 149 002c FFF7FEFF 		bl	CyGetUniqueId
  63:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 150              		.loc 1 63 0
 151 0030 FA68     		ldr	r2, [r7, #12]
 152 0032 3B69     		ldr	r3, [r7, #16]
 153 0034 0093     		str	r3, [sp]
 154 0036 1346     		mov	r3, r2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 5


 155 0038 494A     		ldr	r2, .L3+4
 156 003a 1821     		movs	r1, #24
 157 003c 4948     		ldr	r0, .L3+8
 158 003e FFF7FEFF 		bl	snprintf
  64:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  65:notoriOS.c    ****     system_info.modem_info = &modem_info;
 159              		.loc 1 65 0
 160 0042 494B     		ldr	r3, .L3+12
 161 0044 494A     		ldr	r2, .L3+16
 162 0046 1A60     		str	r2, [r3]
  66:notoriOS.c    ****     
  67:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  68:notoriOS.c    ****     // testing server - travis and meagan june of 2022
  69:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","ec2-18-222-229-124.us-ea
 163              		.loc 1 69 0
 164 0048 494A     		ldr	r2, .L3+20
 165 004a 4A4B     		ldr	r3, .L3+24
 166 004c 1446     		mov	r4, r2
 167 004e 1D46     		mov	r5, r3
 168 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 169 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 170 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 171 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 172 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 173 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 174 005c 2B68     		ldr	r3, [r5]
 175 005e 1A46     		mov	r2, r3	@ movhi
 176 0060 2280     		strh	r2, [r4]	@ movhi
 177 0062 0234     		adds	r4, r4, #2
 178 0064 1B0C     		lsrs	r3, r3, #16
 179 0066 2370     		strb	r3, [r4]
  70:notoriOS.c    ****     
  71:notoriOS.c    ****     // production server
  72:notoriOS.c    ****     //snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","malcom.open-storm.org"
  73:notoriOS.c    ****     
  74:notoriOS.c    **** 
  75:notoriOS.c    ****     system_settings.ep_port = 5000;
 180              		.loc 1 75 0
 181 0068 414B     		ldr	r3, .L3+20
 182 006a 41F28832 		movw	r2, #5000
 183 006e 5A66     		str	r2, [r3, #100]
  76:notoriOS.c    ****     // Don't need the following for new nodes
  77:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  78:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  79:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  80:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  81:notoriOS.c    ****         
  82:notoriOS.c    ****     
  83:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  84:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 184              		.loc 1 84 0
 185 0070 414B     		ldr	r3, .L3+28
 186 0072 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 187 0074 99B2     		uxth	r1, r3
 188 0076 414C     		ldr	r4, .L3+32
 189 0078 3846     		mov	r0, r7
 190 007a 0723     		movs	r3, #7
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 6


 191 007c 0122     		movs	r2, #1
 192 007e FFF7FEFF 		bl	CreateAlarm
 193 0082 2246     		mov	r2, r4
 194 0084 3B46     		mov	r3, r7
 195 0086 1968     		ldr	r1, [r3]	@ unaligned
 196 0088 1160     		str	r1, [r2]	@ unaligned
 197 008a 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 198 008c 9380     		strh	r3, [r2, #4]	@ unaligned
  85:notoriOS.c    ****     timeToMeasure = 1u;
 199              		.loc 1 85 0
 200 008e 3C4B     		ldr	r3, .L3+36
 201 0090 0122     		movs	r2, #1
 202 0092 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  87:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 203              		.loc 1 87 0
 204 0094 384B     		ldr	r3, .L3+28
 205 0096 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 206 0098 99B2     		uxth	r1, r3
 207 009a 3A4C     		ldr	r4, .L3+40
 208 009c 3846     		mov	r0, r7
 209 009e 0723     		movs	r3, #7
 210 00a0 0122     		movs	r2, #1
 211 00a2 FFF7FEFF 		bl	CreateAlarm
 212 00a6 2246     		mov	r2, r4
 213 00a8 3B46     		mov	r3, r7
 214 00aa 1968     		ldr	r1, [r3]	@ unaligned
 215 00ac 1160     		str	r1, [r2]	@ unaligned
 216 00ae 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 217 00b0 9380     		strh	r3, [r2, #4]	@ unaligned
  88:notoriOS.c    ****     timeToSync = 1u;
 218              		.loc 1 88 0
 219 00b2 354B     		ldr	r3, .L3+44
 220 00b4 0122     		movs	r2, #1
 221 00b6 1A70     		strb	r2, [r3]
  89:notoriOS.c    ****     
  90:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 222              		.loc 1 90 0
 223 00b8 344B     		ldr	r3, .L3+48
 224 00ba 0022     		movs	r2, #0
 225 00bc 1A70     		strb	r2, [r3]
  91:notoriOS.c    ****     
  92:notoriOS.c    ****     // App Initializations
  93:notoriOS.c    ****     // APP_INTERFACE-------------------------------------------------------------------------------
  94:notoriOS.c    ****     alarmAppLED = CreateAlarm(updatable_parameters.App_LED_freq,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTIN
 226              		.loc 1 94 0
 227 00be 2E4B     		ldr	r3, .L3+28
 228 00c0 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 229 00c2 99B2     		uxth	r1, r3
 230 00c4 324C     		ldr	r4, .L3+52
 231 00c6 3846     		mov	r0, r7
 232 00c8 0723     		movs	r3, #7
 233 00ca 0122     		movs	r2, #1
 234 00cc FFF7FEFF 		bl	CreateAlarm
 235 00d0 2246     		mov	r2, r4
 236 00d2 3B46     		mov	r3, r7
 237 00d4 1968     		ldr	r1, [r3]	@ unaligned
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 7


 238 00d6 1160     		str	r1, [r2]	@ unaligned
 239 00d8 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 240 00da 9380     		strh	r3, [r2, #4]	@ unaligned
  95:notoriOS.c    ****     timeToAppLED = 1u;
 241              		.loc 1 95 0
 242 00dc 2D4B     		ldr	r3, .L3+56
 243 00de 0122     		movs	r2, #1
 244 00e0 1A70     		strb	r2, [r3]
  96:notoriOS.c    ****     
  97:notoriOS.c    ****     alarmLevelSensor = CreateAlarm(updatable_parameters.Level_Sensor_freq,ALARM_TYPE_MINUTE, ALARM_
 245              		.loc 1 97 0
 246 00e2 254B     		ldr	r3, .L3+28
 247 00e4 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 248 00e6 99B2     		uxth	r1, r3
 249 00e8 2B4C     		ldr	r4, .L3+60
 250 00ea 3846     		mov	r0, r7
 251 00ec 0723     		movs	r3, #7
 252 00ee 0122     		movs	r2, #1
 253 00f0 FFF7FEFF 		bl	CreateAlarm
 254 00f4 2246     		mov	r2, r4
 255 00f6 3B46     		mov	r3, r7
 256 00f8 1968     		ldr	r1, [r3]	@ unaligned
 257 00fa 1160     		str	r1, [r2]	@ unaligned
 258 00fc 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 259 00fe 9380     		strh	r3, [r2, #4]	@ unaligned
  98:notoriOS.c    ****     timeToLevelSensor = 1u;
 260              		.loc 1 98 0
 261 0100 264B     		ldr	r3, .L3+64
 262 0102 0122     		movs	r2, #1
 263 0104 1A70     		strb	r2, [r3]
  99:notoriOS.c    ****     
 100:notoriOS.c    ****     alarmDownstreamLevelSensor = CreateAlarm(updatable_parameters.Downstream_Level_Sensor_freq,ALAR
 264              		.loc 1 100 0
 265 0106 1C4B     		ldr	r3, .L3+28
 266 0108 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 267 010a 99B2     		uxth	r1, r3
 268 010c 244C     		ldr	r4, .L3+68
 269 010e 3846     		mov	r0, r7
 270 0110 0723     		movs	r3, #7
 271 0112 0122     		movs	r2, #1
 272 0114 FFF7FEFF 		bl	CreateAlarm
 273 0118 2246     		mov	r2, r4
 274 011a 3B46     		mov	r3, r7
 275 011c 1968     		ldr	r1, [r3]	@ unaligned
 276 011e 1160     		str	r1, [r2]	@ unaligned
 277 0120 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 278 0122 9380     		strh	r3, [r2, #4]	@ unaligned
 101:notoriOS.c    ****     timeToDownstreamLevelSensor = 1u;
 279              		.loc 1 101 0
 280 0124 1F4B     		ldr	r3, .L3+72
 281 0126 0122     		movs	r2, #1
 282 0128 1A70     		strb	r2, [r3]
 102:notoriOS.c    ****     
 103:notoriOS.c    ****     //alarmValve = CreateAlarm(updatable_parameters.Valve_freq, ALARM_TYPE_MINUTE,ALARM_TYPE_CONTIN
 104:notoriOS.c    ****     //timeToValve = 1u;
 105:notoriOS.c    **** 
 106:notoriOS.c    ****     alarmAutosampler = CreateAlarm(updatable_parameters.Autosampler_freq,ALARM_TYPE_MINUTE,ALARM_TY
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 8


 283              		.loc 1 106 0
 284 012a 134B     		ldr	r3, .L3+28
 285 012c 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 286 012e 99B2     		uxth	r1, r3
 287 0130 1D4C     		ldr	r4, .L3+76
 288 0132 3846     		mov	r0, r7
 289 0134 0723     		movs	r3, #7
 290 0136 0122     		movs	r2, #1
 291 0138 FFF7FEFF 		bl	CreateAlarm
 292 013c 2246     		mov	r2, r4
 293 013e 3B46     		mov	r3, r7
 294 0140 1968     		ldr	r1, [r3]	@ unaligned
 295 0142 1160     		str	r1, [r2]	@ unaligned
 296 0144 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 297 0146 9380     		strh	r3, [r2, #4]	@ unaligned
 107:notoriOS.c    ****     timeToAutosampler = 1u;
 298              		.loc 1 107 0
 299 0148 184B     		ldr	r3, .L3+80
 300 014a 0122     		movs	r2, #1
 301 014c 1A70     		strb	r2, [r3]
 108:notoriOS.c    ****     /* app add template
 109:notoriOS.c    ****     alarm<Name> = CreateAlarm(updatable_parameters.<Name>_freq,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINU
 110:notoriOS.c    ****     timeTo<Name> = 1u;
 111:notoriOS.c    ****     */
 112:notoriOS.c    ****     //---------------------------------------------------------------------------------------------
 113:notoriOS.c    **** 
 114:notoriOS.c    ****     
 115:notoriOS.c    ****     // Initialize the try counter to 0
 116:notoriOS.c    ****     uint8 try_counter = 0;
 302              		.loc 1 116 0
 303 014e 0023     		movs	r3, #0
 304 0150 FB75     		strb	r3, [r7, #23]
 117:notoriOS.c    **** }
 305              		.loc 1 117 0
 306 0152 00BF     		nop
 307 0154 1837     		adds	r7, r7, #24
 308              		.cfi_def_cfa_offset 16
 309 0156 BD46     		mov	sp, r7
 310              		.cfi_def_cfa_register 13
 311              		@ sp needed
 312 0158 B0BD     		pop	{r4, r5, r7, pc}
 313              	.L4:
 314 015a 00BF     		.align	2
 315              	.L3:
 316 015c 00000000 		.word	Wakeup_ISR
 317 0160 00000000 		.word	.LC0
 318 0164 04000000 		.word	system_info+4
 319 0168 00000000 		.word	system_info
 320 016c 00000000 		.word	modem_info
 321 0170 00000000 		.word	system_settings
 322 0174 08000000 		.word	.LC1
 323 0178 00000000 		.word	updatable_parameters
 324 017c 00000000 		.word	alarmMeasure
 325 0180 00000000 		.word	timeToMeasure
 326 0184 00000000 		.word	alarmSync
 327 0188 00000000 		.word	timeToSync
 328 018c 00000000 		.word	timeToSycnRemoteParams
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 9


 329 0190 00000000 		.word	alarmAppLED
 330 0194 00000000 		.word	timeToAppLED
 331 0198 00000000 		.word	alarmLevelSensor
 332 019c 00000000 		.word	timeToLevelSensor
 333 01a0 00000000 		.word	alarmDownstreamLevelSensor
 334 01a4 00000000 		.word	timeToDownstreamLevelSensor
 335 01a8 00000000 		.word	alarmAutosampler
 336 01ac 00000000 		.word	timeToAutosampler
 337              		.cfi_endproc
 338              	.LFE65:
 339              		.size	ReadyOrNot, .-ReadyOrNot
 340              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 341              		.align	2
 342              		.global	WorkWorkWorkWorkWorkWork
 343              		.thumb
 344              		.thumb_func
 345              		.type	WorkWorkWorkWorkWorkWork, %function
 346              	WorkWorkWorkWorkWorkWork:
 347              	.LFB66:
 118:notoriOS.c    **** 
 119:notoriOS.c    **** 
 120:notoriOS.c    **** // ==============================================
 121:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
 122:notoriOS.c    **** //      - Rihanna, feat Drake (2016)
 123:notoriOS.c    **** //
 124:notoriOS.c    **** // Prorcesses core tasks
 125:notoriOS.c    **** // ==============================================
 126:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
 127:notoriOS.c    **** {
 348              		.loc 1 127 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 8
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352 0000 80B5     		push	{r7, lr}
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 7, -8
 355              		.cfi_offset 14, -4
 356 0002 82B0     		sub	sp, sp, #8
 357              		.cfi_def_cfa_offset 16
 358 0004 00AF     		add	r7, sp, #0
 359              		.cfi_def_cfa_register 7
 128:notoriOS.c    ****     
 129:notoriOS.c    ****     
 130:notoriOS.c    ****     
 131:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 132:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 133:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
 134:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 135:notoriOS.c    ****     
 136:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 137:notoriOS.c    ****     if(timeToSycnRemoteParams){
 360              		.loc 1 137 0
 361 0006 374B     		ldr	r3, .L15
 362 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 363 000a 002B     		cmp	r3, #0
 364 000c 06D0     		beq	.L6
 138:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 10


 365              		.loc 1 138 0
 366 000e FFF7FEFF 		bl	configureRemoteParams
 367 0012 0346     		mov	r3, r0
 368 0014 1A46     		mov	r2, r3
 369 0016 334B     		ldr	r3, .L15
 370 0018 1A70     		strb	r2, [r3]
 371 001a 09E0     		b	.L7
 372              	.L6:
 139:notoriOS.c    ****     }
 140:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 141:notoriOS.c    ****     else if(timeToMeasure){
 373              		.loc 1 141 0
 374 001c 324B     		ldr	r3, .L15+4
 375 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 376 0020 002B     		cmp	r3, #0
 377 0022 05D0     		beq	.L7
 142:notoriOS.c    ****         // on custom nodes makeMeasurements will just be battery voltages
 143:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 378              		.loc 1 143 0
 379 0024 FFF7FEFF 		bl	makeMeasurements
 380 0028 0346     		mov	r3, r0
 381 002a 1A46     		mov	r2, r3
 382 002c 2E4B     		ldr	r3, .L15+4
 383 002e 1A70     		strb	r2, [r3]
 384              	.L7:
 144:notoriOS.c    ****     }  
 145:notoriOS.c    ****     // custom nodes
 146:notoriOS.c    ****     // APP_INTERFACE-------------------------------------------------------------------------------
 147:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_CUSTOM){
 385              		.loc 1 147 0
 386 0030 2E4B     		ldr	r3, .L15+8
 387 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 388 0034 042B     		cmp	r3, #4
 389 0036 41D1     		bne	.L8
 148:notoriOS.c    ****         if(App_LED_enabled && timeToAppLED){
 390              		.loc 1 148 0
 391 0038 2D4B     		ldr	r3, .L15+12
 392 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 393 003c 002B     		cmp	r3, #0
 394 003e 09D0     		beq	.L9
 395              		.loc 1 148 0 is_stmt 0 discriminator 1
 396 0040 2C4B     		ldr	r3, .L15+16
 397 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 398 0044 002B     		cmp	r3, #0
 399 0046 05D0     		beq	.L9
 149:notoriOS.c    ****             timeToAppLED = App_LED();
 400              		.loc 1 149 0 is_stmt 1
 401 0048 FFF7FEFF 		bl	App_LED
 402 004c 0346     		mov	r3, r0
 403 004e 1A46     		mov	r2, r3
 404 0050 284B     		ldr	r3, .L15+16
 405 0052 1A70     		strb	r2, [r3]
 406              	.L9:
 150:notoriOS.c    ****         }
 151:notoriOS.c    ****         if(level_sensor_enabled && timeToLevelSensor){
 407              		.loc 1 151 0
 408 0054 284B     		ldr	r3, .L15+20
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 11


 409 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 410 0058 002B     		cmp	r3, #0
 411 005a 09D0     		beq	.L10
 412              		.loc 1 151 0 is_stmt 0 discriminator 1
 413 005c 274B     		ldr	r3, .L15+24
 414 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 415 0060 002B     		cmp	r3, #0
 416 0062 05D0     		beq	.L10
 152:notoriOS.c    ****             timeToLevelSensor = level_sensor();
 417              		.loc 1 152 0 is_stmt 1
 418 0064 FFF7FEFF 		bl	level_sensor
 419 0068 0346     		mov	r3, r0
 420 006a 1A46     		mov	r2, r3
 421 006c 234B     		ldr	r3, .L15+24
 422 006e 1A70     		strb	r2, [r3]
 423              	.L10:
 153:notoriOS.c    ****         }
 154:notoriOS.c    ****         if(downstream_level_sensor_enabled && timeToDownstreamLevelSensor){
 424              		.loc 1 154 0
 425 0070 234B     		ldr	r3, .L15+28
 426 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 427 0074 002B     		cmp	r3, #0
 428 0076 09D0     		beq	.L11
 429              		.loc 1 154 0 is_stmt 0 discriminator 1
 430 0078 224B     		ldr	r3, .L15+32
 431 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 432 007c 002B     		cmp	r3, #0
 433 007e 05D0     		beq	.L11
 155:notoriOS.c    ****             timeToDownstreamLevelSensor = downstream_level_sensor();
 434              		.loc 1 155 0 is_stmt 1
 435 0080 FFF7FEFF 		bl	downstream_level_sensor
 436 0084 0346     		mov	r3, r0
 437 0086 1A46     		mov	r2, r3
 438 0088 1E4B     		ldr	r3, .L15+32
 439 008a 1A70     		strb	r2, [r3]
 440              	.L11:
 156:notoriOS.c    ****         }
 157:notoriOS.c    ****         if (valve_enabled){
 441              		.loc 1 157 0
 442 008c 1E4B     		ldr	r3, .L15+36
 443 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 444 0090 002B     		cmp	r3, #0
 445 0092 05D0     		beq	.L12
 158:notoriOS.c    ****             valve_enabled = App_Valve();
 446              		.loc 1 158 0
 447 0094 FFF7FEFF 		bl	App_Valve
 448 0098 0346     		mov	r3, r0
 449 009a 1A46     		mov	r2, r3
 450 009c 1A4B     		ldr	r3, .L15+36
 451 009e 1A70     		strb	r2, [r3]
 452              	.L12:
 159:notoriOS.c    ****         }
 160:notoriOS.c    ****         
 161:notoriOS.c    ****         if(autosampler_enabled && timeToAutosampler){
 453              		.loc 1 161 0
 454 00a0 1A4B     		ldr	r3, .L15+40
 455 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 12


 456 00a4 002B     		cmp	r3, #0
 457 00a6 09D0     		beq	.L8
 458              		.loc 1 161 0 is_stmt 0 discriminator 1
 459 00a8 194B     		ldr	r3, .L15+44
 460 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 461 00ac 002B     		cmp	r3, #0
 462 00ae 05D0     		beq	.L8
 162:notoriOS.c    ****             timeToAutosampler = App_Autosampler();
 463              		.loc 1 162 0 is_stmt 1
 464 00b0 FFF7FEFF 		bl	App_Autosampler
 465 00b4 0346     		mov	r3, r0
 466 00b6 1A46     		mov	r2, r3
 467 00b8 154B     		ldr	r3, .L15+44
 468 00ba 1A70     		strb	r2, [r3]
 469              	.L8:
 163:notoriOS.c    ****         }
 164:notoriOS.c    ****         // add other custom apps below
 165:notoriOS.c    ****         /* add app template
 166:notoriOS.c    ****         if(<name>_enabled && timeTo<Name>){
 167:notoriOS.c    ****             timeTo<Name> = App_<Name>();
 168:notoriOS.c    ****         }
 169:notoriOS.c    ****         */
 170:notoriOS.c    ****     }
 171:notoriOS.c    **** 
 172:notoriOS.c    ****     if(timeToSync){
 470              		.loc 1 172 0
 471 00bc 154B     		ldr	r3, .L15+48
 472 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 473 00c0 002B     		cmp	r3, #0
 474 00c2 05D0     		beq	.L13
 173:notoriOS.c    ****         timeToSync = syncData();
 475              		.loc 1 173 0
 476 00c4 FFF7FEFF 		bl	syncData
 477 00c8 0346     		mov	r3, r0
 478 00ca 1A46     		mov	r2, r3
 479 00cc 114B     		ldr	r3, .L15+48
 480 00ce 1A70     		strb	r2, [r3]
 481              	.L13:
 174:notoriOS.c    ****     }
 175:notoriOS.c    ****     
 176:notoriOS.c    ****     // Print the countdown to the next alarm
 177:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 178:notoriOS.c    ****     
 179:notoriOS.c    ****     
 180:notoriOS.c    ****     // Check modem state machine on every loop
 181:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
 482              		.loc 1 181 0
 483 00d0 FFF7FEFF 		bl	modem_process_tasks
 484 00d4 0346     		mov	r3, r0
 485 00d6 FB71     		strb	r3, [r7, #7]
 182:notoriOS.c    **** 
 183:notoriOS.c    ****     return 0u +  modem_status;  
 486              		.loc 1 183 0
 487 00d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 184:notoriOS.c    **** }
 488              		.loc 1 184 0
 489 00da 1846     		mov	r0, r3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 13


 490 00dc 0837     		adds	r7, r7, #8
 491              		.cfi_def_cfa_offset 8
 492 00de BD46     		mov	sp, r7
 493              		.cfi_def_cfa_register 13
 494              		@ sp needed
 495 00e0 80BD     		pop	{r7, pc}
 496              	.L16:
 497 00e2 00BF     		.align	2
 498              	.L15:
 499 00e4 00000000 		.word	timeToSycnRemoteParams
 500 00e8 00000000 		.word	timeToMeasure
 501 00ec 00000000 		.word	updatable_parameters
 502 00f0 00000000 		.word	App_LED_enabled
 503 00f4 00000000 		.word	timeToAppLED
 504 00f8 00000000 		.word	level_sensor_enabled
 505 00fc 00000000 		.word	timeToLevelSensor
 506 0100 00000000 		.word	downstream_level_sensor_enabled
 507 0104 00000000 		.word	timeToDownstreamLevelSensor
 508 0108 00000000 		.word	valve_enabled
 509 010c 00000000 		.word	autosampler_enabled
 510 0110 00000000 		.word	timeToAutosampler
 511 0114 00000000 		.word	timeToSync
 512              		.cfi_endproc
 513              	.LFE66:
 514              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 515              		.section	.text.LayBack,"ax",%progbits
 516              		.align	2
 517              		.global	LayBack
 518              		.thumb
 519              		.thumb_func
 520              		.type	LayBack, %function
 521              	LayBack:
 522              	.LFB67:
 185:notoriOS.c    **** 
 186:notoriOS.c    **** 
 187:notoriOS.c    **** 
 188:notoriOS.c    **** 
 189:notoriOS.c    **** 
 190:notoriOS.c    **** 
 191:notoriOS.c    **** // ==============================================
 192:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 193:notoriOS.c    **** //      - Snoop Dogg (1993)
 194:notoriOS.c    **** //
 195:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 196:notoriOS.c    **** // ==============================================
 197:notoriOS.c    **** void LayBack()
 198:notoriOS.c    **** {
 523              		.loc 1 198 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527 0000 80B5     		push	{r7, lr}
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531 0002 00AF     		add	r7, sp, #0
 532              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 14


 199:notoriOS.c    ****   
 200:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 533              		.loc 1 200 0
 534 0004 FFF7FEFF 		bl	modem_sleep
 201:notoriOS.c    ****     
 202:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 203:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 535              		.loc 1 203 0
 536 0008 FFF7FEFF 		bl	debug_sleep
 204:notoriOS.c    ****     
 205:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 537              		.loc 1 205 0
 538 000c FFF7FEFF 		bl	CyPmSaveClocks
 206:notoriOS.c    ****     
 207:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 208:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 209:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 210:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 211:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 212:notoriOS.c    ****     //CyPmHibernate();
 213:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 214:notoriOS.c    **** 
 215:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 539              		.loc 1 215 0
 540 0010 4FF40061 		mov	r1, #2048
 541 0014 0020     		movs	r0, #0
 542 0016 FFF7FEFF 		bl	CyPmSleep
 216:notoriOS.c    **** 
 217:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 543              		.loc 1 217 0
 544 001a FFF7FEFF 		bl	CyPmRestoreClocks
 218:notoriOS.c    **** 
 219:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 545              		.loc 1 219 0
 546 001e FFF7FEFF 		bl	debug_wakeup
 220:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 547              		.loc 1 220 0
 548 0022 FFF7FEFF 		bl	modem_wakeup
 221:notoriOS.c    **** 
 222:notoriOS.c    **** }
 549              		.loc 1 222 0
 550 0026 00BF     		nop
 551 0028 80BD     		pop	{r7, pc}
 552              		.cfi_endproc
 553              	.LFE67:
 554              		.size	LayBack, .-LayBack
 555 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 556              		.align	2
 557              		.global	AyoItsTime
 558              		.thumb
 559              		.thumb_func
 560              		.type	AyoItsTime, %function
 561              	AyoItsTime:
 562              	.LFB68:
 223:notoriOS.c    **** 
 224:notoriOS.c    **** 
 225:notoriOS.c    **** // ==============================================
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 15


 226:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 227:notoriOS.c    **** //      - NAS (1994)
 228:notoriOS.c    **** //
 229:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 230:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 231:notoriOS.c    **** // It will add tasks to the work queue,
 232:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 233:notoriOS.c    **** // ==============================================
 234:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 235:notoriOS.c    **** {
 563              		.loc 1 235 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 8
 566              		@ frame_needed = 1, uses_anonymous_args = 0
 567 0000 80B5     		push	{r7, lr}
 568              		.cfi_def_cfa_offset 8
 569              		.cfi_offset 7, -8
 570              		.cfi_offset 14, -4
 571 0002 82B0     		sub	sp, sp, #8
 572              		.cfi_def_cfa_offset 16
 573 0004 00AF     		add	r7, sp, #0
 574              		.cfi_def_cfa_register 7
 575 0006 0346     		mov	r3, r0
 576 0008 FB71     		strb	r3, [r7, #7]
 236:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 237:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 577              		.loc 1 237 0
 578 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 579 000c 1946     		mov	r1, r3
 580 000e 2248     		ldr	r0, .L26
 581 0010 FFF7FEFF 		bl	AlarmReady
 582 0014 0346     		mov	r3, r0
 583 0016 002B     		cmp	r3, #0
 584 0018 02D0     		beq	.L19
 238:notoriOS.c    ****     {
 239:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 240:notoriOS.c    ****         timeToMeasure = 1u;
 585              		.loc 1 240 0
 586 001a 204B     		ldr	r3, .L26+4
 587 001c 0122     		movs	r2, #1
 588 001e 1A70     		strb	r2, [r3]
 589              	.L19:
 241:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 242:notoriOS.c    ****         
 243:notoriOS.c    ****     }
 244:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 590              		.loc 1 244 0
 591 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 592 0022 1946     		mov	r1, r3
 593 0024 1E48     		ldr	r0, .L26+8
 594 0026 FFF7FEFF 		bl	AlarmReady
 595 002a 0346     		mov	r3, r0
 596 002c 002B     		cmp	r3, #0
 597 002e 02D0     		beq	.L20
 245:notoriOS.c    ****     {
 246:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 247:notoriOS.c    ****         timeToSync = 1u;
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 16


 598              		.loc 1 247 0
 599 0030 1C4B     		ldr	r3, .L26+12
 600 0032 0122     		movs	r2, #1
 601 0034 1A70     		strb	r2, [r3]
 602              	.L20:
 248:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 249:notoriOS.c    ****     }
 250:notoriOS.c    ****     
 251:notoriOS.c    ****     // APP_INTERFACE-------------------------------------------------------------------------------
 252:notoriOS.c    ****     if(AlarmReady(&alarmAppLED,alarmType)){
 603              		.loc 1 252 0
 604 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 605 0038 1946     		mov	r1, r3
 606 003a 1B48     		ldr	r0, .L26+16
 607 003c FFF7FEFF 		bl	AlarmReady
 608 0040 0346     		mov	r3, r0
 609 0042 002B     		cmp	r3, #0
 610 0044 02D0     		beq	.L21
 253:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 254:notoriOS.c    ****         timeToAppLED = 1u;
 611              		.loc 1 254 0
 612 0046 194B     		ldr	r3, .L26+20
 613 0048 0122     		movs	r2, #1
 614 004a 1A70     		strb	r2, [r3]
 615              	.L21:
 255:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 256:notoriOS.c    ****     }
 257:notoriOS.c    ****     if(AlarmReady(&alarmLevelSensor, alarmType)){
 616              		.loc 1 257 0
 617 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 618 004e 1946     		mov	r1, r3
 619 0050 1748     		ldr	r0, .L26+24
 620 0052 FFF7FEFF 		bl	AlarmReady
 621 0056 0346     		mov	r3, r0
 622 0058 002B     		cmp	r3, #0
 623 005a 02D0     		beq	.L22
 258:notoriOS.c    ****         timeToLevelSensor = 1u;
 624              		.loc 1 258 0
 625 005c 154B     		ldr	r3, .L26+28
 626 005e 0122     		movs	r2, #1
 627 0060 1A70     		strb	r2, [r3]
 628              	.L22:
 259:notoriOS.c    ****     }
 260:notoriOS.c    ****     if(AlarmReady(&alarmDownstreamLevelSensor, alarmType)){
 629              		.loc 1 260 0
 630 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 631 0064 1946     		mov	r1, r3
 632 0066 1448     		ldr	r0, .L26+32
 633 0068 FFF7FEFF 		bl	AlarmReady
 634 006c 0346     		mov	r3, r0
 635 006e 002B     		cmp	r3, #0
 636 0070 02D0     		beq	.L23
 261:notoriOS.c    ****         timeToDownstreamLevelSensor = 1u;
 637              		.loc 1 261 0
 638 0072 124B     		ldr	r3, .L26+36
 639 0074 0122     		movs	r2, #1
 640 0076 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 17


 641              	.L23:
 262:notoriOS.c    ****     }
 263:notoriOS.c    ****     /*
 264:notoriOS.c    ****     if(AlarmReady(&alarmValve, alarmType)){
 265:notoriOS.c    ****         timeToValve = 1u;
 266:notoriOS.c    ****     }
 267:notoriOS.c    ****     */
 268:notoriOS.c    ****     if(AlarmReady(&alarmAutosampler, alarmType)){
 642              		.loc 1 268 0
 643 0078 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 644 007a 1946     		mov	r1, r3
 645 007c 1048     		ldr	r0, .L26+40
 646 007e FFF7FEFF 		bl	AlarmReady
 647 0082 0346     		mov	r3, r0
 648 0084 002B     		cmp	r3, #0
 649 0086 02D0     		beq	.L25
 269:notoriOS.c    ****         timeToAutosampler = 1u;
 650              		.loc 1 269 0
 651 0088 0E4B     		ldr	r3, .L26+44
 652 008a 0122     		movs	r2, #1
 653 008c 1A70     		strb	r2, [r3]
 654              	.L25:
 270:notoriOS.c    ****     }
 271:notoriOS.c    ****     /* app add template
 272:notoriOS.c    ****     if(AlarmReady(&alarm<Name>, alarmType)){
 273:notoriOS.c    ****         timeTo<Name> = 1u;
 274:notoriOS.c    ****     }
 275:notoriOS.c    ****     */
 276:notoriOS.c    ****     // --------------------------------------------------------------------------------------------
 277:notoriOS.c    **** 
 278:notoriOS.c    **** }
 655              		.loc 1 278 0
 656 008e 00BF     		nop
 657 0090 0837     		adds	r7, r7, #8
 658              		.cfi_def_cfa_offset 8
 659 0092 BD46     		mov	sp, r7
 660              		.cfi_def_cfa_register 13
 661              		@ sp needed
 662 0094 80BD     		pop	{r7, pc}
 663              	.L27:
 664 0096 00BF     		.align	2
 665              	.L26:
 666 0098 00000000 		.word	alarmMeasure
 667 009c 00000000 		.word	timeToMeasure
 668 00a0 00000000 		.word	alarmSync
 669 00a4 00000000 		.word	timeToSync
 670 00a8 00000000 		.word	alarmAppLED
 671 00ac 00000000 		.word	timeToAppLED
 672 00b0 00000000 		.word	alarmLevelSensor
 673 00b4 00000000 		.word	timeToLevelSensor
 674 00b8 00000000 		.word	alarmDownstreamLevelSensor
 675 00bc 00000000 		.word	timeToDownstreamLevelSensor
 676 00c0 00000000 		.word	alarmAutosampler
 677 00c4 00000000 		.word	timeToAutosampler
 678              		.cfi_endproc
 679              	.LFE68:
 680              		.size	AyoItsTime, .-AyoItsTime
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 18


 681              		.section	.text.AlarmReady,"ax",%progbits
 682              		.align	2
 683              		.global	AlarmReady
 684              		.thumb
 685              		.thumb_func
 686              		.type	AlarmReady, %function
 687              	AlarmReady:
 688              	.LFB69:
 279:notoriOS.c    **** 
 280:notoriOS.c    **** 
 281:notoriOS.c    **** // ==============================================
 282:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 283:notoriOS.c    **** // ==============================================
 284:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 285:notoriOS.c    **** {
 689              		.loc 1 285 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 8
 692              		@ frame_needed = 1, uses_anonymous_args = 0
 693 0000 80B5     		push	{r7, lr}
 694              		.cfi_def_cfa_offset 8
 695              		.cfi_offset 7, -8
 696              		.cfi_offset 14, -4
 697 0002 82B0     		sub	sp, sp, #8
 698              		.cfi_def_cfa_offset 16
 699 0004 00AF     		add	r7, sp, #0
 700              		.cfi_def_cfa_register 7
 701 0006 7860     		str	r0, [r7, #4]
 702 0008 0B46     		mov	r3, r1
 703 000a FB70     		strb	r3, [r7, #3]
 286:notoriOS.c    ****     // if the countDownType matches the alarmType
 287:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 704              		.loc 1 287 0
 705 000c 7B68     		ldr	r3, [r7, #4]
 706 000e 1B79     		ldrb	r3, [r3, #4]
 707 0010 DBB2     		uxtb	r3, r3
 708 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 709 0014 9A42     		cmp	r2, r3
 710 0016 12D1     		bne	.L29
 288:notoriOS.c    ****        
 289:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 290:notoriOS.c    ****         // Decrement the count down value by 1
 291:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 711              		.loc 1 291 0
 712 0018 7B68     		ldr	r3, [r7, #4]
 713 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 714 001c 1BB2     		sxth	r3, r3
 715 001e 9BB2     		uxth	r3, r3
 716 0020 013B     		subs	r3, r3, #1
 717 0022 9BB2     		uxth	r3, r3
 718 0024 1AB2     		sxth	r2, r3
 719 0026 7B68     		ldr	r3, [r7, #4]
 720 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 292:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 293:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 721              		.loc 1 293 0
 722 002a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 19


 723 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 724 002e 1BB2     		sxth	r3, r3
 725 0030 002B     		cmp	r3, #0
 726 0032 04DC     		bgt	.L29
 294:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 727              		.loc 1 294 0
 728 0034 7868     		ldr	r0, [r7, #4]
 729 0036 FFF7FEFF 		bl	ResetAlarm
 295:notoriOS.c    ****             return 1u;
 730              		.loc 1 295 0
 731 003a 0123     		movs	r3, #1
 732 003c 00E0     		b	.L30
 733              	.L29:
 296:notoriOS.c    ****         } 
 297:notoriOS.c    ****     }
 298:notoriOS.c    ****     
 299:notoriOS.c    ****     return 0u; // Otherwise return 0
 734              		.loc 1 299 0
 735 003e 0023     		movs	r3, #0
 736              	.L30:
 300:notoriOS.c    **** }
 737              		.loc 1 300 0
 738 0040 1846     		mov	r0, r3
 739 0042 0837     		adds	r7, r7, #8
 740              		.cfi_def_cfa_offset 8
 741 0044 BD46     		mov	sp, r7
 742              		.cfi_def_cfa_register 13
 743              		@ sp needed
 744 0046 80BD     		pop	{r7, pc}
 745              		.cfi_endproc
 746              	.LFE69:
 747              		.size	AlarmReady, .-AlarmReady
 748              		.section	.text.ResetAlarm,"ax",%progbits
 749              		.align	2
 750              		.global	ResetAlarm
 751              		.thumb
 752              		.thumb_func
 753              		.type	ResetAlarm, %function
 754              	ResetAlarm:
 755              	.LFB70:
 301:notoriOS.c    **** 
 302:notoriOS.c    **** // ==============================================
 303:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 304:notoriOS.c    **** // ==============================================
 305:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 306:notoriOS.c    **** {
 756              		.loc 1 306 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 8
 759              		@ frame_needed = 1, uses_anonymous_args = 0
 760              		@ link register save eliminated.
 761 0000 80B4     		push	{r7}
 762              		.cfi_def_cfa_offset 4
 763              		.cfi_offset 7, -4
 764 0002 83B0     		sub	sp, sp, #12
 765              		.cfi_def_cfa_offset 16
 766 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 20


 767              		.cfi_def_cfa_register 7
 768 0006 7860     		str	r0, [r7, #4]
 307:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 308:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 769              		.loc 1 308 0
 770 0008 7B68     		ldr	r3, [r7, #4]
 771 000a 1B88     		ldrh	r3, [r3]	@ movhi
 772 000c 9BB2     		uxth	r3, r3
 773 000e 1AB2     		sxth	r2, r3
 774 0010 7B68     		ldr	r3, [r7, #4]
 775 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 309:notoriOS.c    **** }
 776              		.loc 1 309 0
 777 0014 00BF     		nop
 778 0016 0C37     		adds	r7, r7, #12
 779              		.cfi_def_cfa_offset 4
 780 0018 BD46     		mov	sp, r7
 781              		.cfi_def_cfa_register 13
 782              		@ sp needed
 783 001a 80BC     		pop	{r7}
 784              		.cfi_restore 7
 785              		.cfi_def_cfa_offset 0
 786 001c 7047     		bx	lr
 787              		.cfi_endproc
 788              	.LFE70:
 789              		.size	ResetAlarm, .-ResetAlarm
 790 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
 791              		.align	2
 792              		.global	CreateAlarm
 793              		.thumb
 794              		.thumb_func
 795              		.type	CreateAlarm, %function
 796              	CreateAlarm:
 797              	.LFB71:
 310:notoriOS.c    **** 
 311:notoriOS.c    **** // ==============================================
 312:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 313:notoriOS.c    **** // ==============================================
 314:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 315:notoriOS.c    **** {
 798              		.loc 1 315 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 16
 801              		@ frame_needed = 1, uses_anonymous_args = 0
 802              		@ link register save eliminated.
 803 0000 80B4     		push	{r7}
 804              		.cfi_def_cfa_offset 4
 805              		.cfi_offset 7, -4
 806 0002 85B0     		sub	sp, sp, #20
 807              		.cfi_def_cfa_offset 24
 808 0004 00AF     		add	r7, sp, #0
 809              		.cfi_def_cfa_register 7
 810 0006 7860     		str	r0, [r7, #4]
 811 0008 0846     		mov	r0, r1
 812 000a 1146     		mov	r1, r2
 813 000c 1A46     		mov	r2, r3
 814 000e 0346     		mov	r3, r0	@ movhi
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 21


 815 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 816 0012 0B46     		mov	r3, r1
 817 0014 7B70     		strb	r3, [r7, #1]
 818 0016 1346     		mov	r3, r2
 819 0018 3B70     		strb	r3, [r7]
 316:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 317:notoriOS.c    ****     alarm newAlarm;
 318:notoriOS.c    ****     
 319:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 320:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 820              		.loc 1 320 0
 821 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 822 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 321:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 823              		.loc 1 321 0
 824 001e 7B78     		ldrb	r3, [r7, #1]
 825 0020 3B73     		strb	r3, [r7, #12]
 322:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 826              		.loc 1 322 0
 827 0022 3B78     		ldrb	r3, [r7]
 828 0024 7B73     		strb	r3, [r7, #13]
 323:notoriOS.c    ****     
 324:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 325:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 326:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 829              		.loc 1 326 0
 830 0026 B7F90230 		ldrsh	r3, [r7, #2]
 831 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 327:notoriOS.c    ****     
 328:notoriOS.c    ****     return newAlarm;
 832              		.loc 1 328 0
 833 002c 7B68     		ldr	r3, [r7, #4]
 834 002e 1A46     		mov	r2, r3
 835 0030 07F10803 		add	r3, r7, #8
 836 0034 1868     		ldr	r0, [r3]	@ unaligned
 837 0036 1060     		str	r0, [r2]	@ unaligned
 838 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 839 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 329:notoriOS.c    ****     
 330:notoriOS.c    **** }
 840              		.loc 1 330 0
 841 003c 7868     		ldr	r0, [r7, #4]
 842 003e 1437     		adds	r7, r7, #20
 843              		.cfi_def_cfa_offset 4
 844 0040 BD46     		mov	sp, r7
 845              		.cfi_def_cfa_register 13
 846              		@ sp needed
 847 0042 80BC     		pop	{r7}
 848              		.cfi_restore 7
 849              		.cfi_def_cfa_offset 0
 850 0044 7047     		bx	lr
 851              		.cfi_endproc
 852              	.LFE71:
 853              		.size	CreateAlarm, .-CreateAlarm
 854 0046 00BF     		.section	.rodata
 855 003b 00       		.align	2
 856              	.LC2:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 22


 857 003c 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 857      2D2D2D2D 
 857      2D2D2D2D 
 857      2D424547 
 857      494E2054 
 858 0066 0000     		.align	2
 859              	.LC3:
 860 0068 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\000"
 860      3D25732C 
 860      2053494D 
 860      49443D25 
 860      732C2044 
 861 0087 00       		.align	2
 862              	.LC4:
 863 0088 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 863      2D2D2D2D 
 863      2D2D2D2D 
 863      2D2D2D45 
 863      4E442054 
 864 00b1 00       		.ascii	"\000"
 865              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 866              		.align	2
 867              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 868              		.thumb
 869              		.thumb_func
 870              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 871              	ChickityCheckYourselfBeforeYouWreckYourself:
 872              	.LFB72:
 331:notoriOS.c    **** 
 332:notoriOS.c    **** // ==============================================
 333:notoriOS.c    **** // Dropping bombs on your moms
 334:notoriOS.c    **** //      - Ice Cube (1992)
 335:notoriOS.c    **** //
 336:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 337:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 338:notoriOS.c    **** // ==============================================
 339:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 873              		.loc 1 339 0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 2328
 876              		@ frame_needed = 1, uses_anonymous_args = 0
 877 0000 90B5     		push	{r4, r7, lr}
 878              		.cfi_def_cfa_offset 12
 879              		.cfi_offset 4, -12
 880              		.cfi_offset 7, -8
 881              		.cfi_offset 14, -4
 882 0002 ADF6942D 		subw	sp, sp, #2708
 883              		.cfi_def_cfa_offset 2720
 884 0006 5EAF     		add	r7, sp, #376
 885              		.cfi_def_cfa 7, 2344
 340:notoriOS.c    **** 
 341:notoriOS.c    ****     //test_t t_influx = influx_test();
 342:notoriOS.c    ****     //printTestStatus(t_influx);
 343:notoriOS.c    ****     
 344:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 886              		.loc 1 344 0
 887 0008 4249     		ldr	r1, .L35
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 23


 888 000a 0320     		movs	r0, #3
 889 000c FFF7FEFF 		bl	printNotif
 345:notoriOS.c    ****     
 346:notoriOS.c    ****     // Test level sensor
 347:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 890              		.loc 1 347 0
 891 0010 07F29473 		addw	r3, r7, #1940
 892 0014 1846     		mov	r0, r3
 893 0016 FFF7FEFF 		bl	level_sensor_test
 348:notoriOS.c    ****     printTestStatus(t_level_sensor);
 894              		.loc 1 348 0
 895 001a 07F29474 		addw	r4, r7, #1940
 896 001e 6846     		mov	r0, sp
 897 0020 04F11003 		add	r3, r4, #16
 898 0024 40F27112 		movw	r2, #369
 899 0028 1946     		mov	r1, r3
 900 002a FFF7FEFF 		bl	memcpy
 901 002e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 902 0032 FFF7FEFF 		bl	printTestStatus
 349:notoriOS.c    ****     
 350:notoriOS.c    ****     // Test downstream level sensor
 351:notoriOS.c    ****     test_t t_down_level = downstream_level_sensor_test();
 903              		.loc 1 351 0
 904 0036 07F5C263 		add	r3, r7, #1552
 905 003a 1846     		mov	r0, r3
 906 003c FFF7FEFF 		bl	downstream_level_sensor_test
 352:notoriOS.c    ****     printTestStatus(t_down_level);
 907              		.loc 1 352 0
 908 0040 07F5C264 		add	r4, r7, #1552
 909 0044 6846     		mov	r0, sp
 910 0046 04F11003 		add	r3, r4, #16
 911 004a 40F27112 		movw	r2, #369
 912 004e 1946     		mov	r1, r3
 913 0050 FFF7FEFF 		bl	memcpy
 914 0054 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 915 0058 FFF7FEFF 		bl	printTestStatus
 353:notoriOS.c    ****     
 354:notoriOS.c    ****     // Test valve
 355:notoriOS.c    ****     //test_t t_valve = valve_test();
 356:notoriOS.c    ****     //printTestStatus(t_valve);
 357:notoriOS.c    ****     // need to know the valve type in order to measure position
 358:notoriOS.c    ****     // but we don't know that until we talk to the server. 
 359:notoriOS.c    ****     // TODO: resolve this. find a way to test the valve without that info
 360:notoriOS.c    ****     
 361:notoriOS.c    ****     // Test voltages
 362:notoriOS.c    ****     test_t t_voltages = voltages_test();
 916              		.loc 1 362 0
 917 005c 07F28C43 		addw	r3, r7, #1164
 918 0060 1846     		mov	r0, r3
 919 0062 FFF7FEFF 		bl	voltages_test
 363:notoriOS.c    ****     printTestStatus(t_voltages);
 920              		.loc 1 363 0
 921 0066 07F28C44 		addw	r4, r7, #1164
 922 006a 6846     		mov	r0, sp
 923 006c 04F11003 		add	r3, r4, #16
 924 0070 40F27112 		movw	r2, #369
 925 0074 1946     		mov	r1, r3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 24


 926 0076 FFF7FEFF 		bl	memcpy
 927 007a 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 928 007e FFF7FEFF 		bl	printTestStatus
 364:notoriOS.c    ****  
 365:notoriOS.c    ****     // Test voltages
 366:notoriOS.c    ****     test_t t_pressure = pressure_sensor_test();
 929              		.loc 1 366 0
 930 0082 07F54273 		add	r3, r7, #776
 931 0086 1846     		mov	r0, r3
 932 0088 FFF7FEFF 		bl	pressure_sensor_test
 367:notoriOS.c    ****     printTestStatus(t_pressure);
 933              		.loc 1 367 0
 934 008c 07F54274 		add	r4, r7, #776
 935 0090 6846     		mov	r0, sp
 936 0092 04F11003 		add	r3, r4, #16
 937 0096 40F27112 		movw	r2, #369
 938 009a 1946     		mov	r1, r3
 939 009c FFF7FEFF 		bl	memcpy
 940 00a0 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 941 00a4 FFF7FEFF 		bl	printTestStatus
 368:notoriOS.c    ****     
 369:notoriOS.c    ****     // Test SD card
 370:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 942              		.loc 1 370 0
 943 00a8 07F5C273 		add	r3, r7, #388
 944 00ac 1846     		mov	r0, r3
 945 00ae FFF7FEFF 		bl	SD_card_test
 371:notoriOS.c    ****     printTestStatus(t_sd_card);
 946              		.loc 1 371 0
 947 00b2 07F5C274 		add	r4, r7, #388
 948 00b6 6846     		mov	r0, sp
 949 00b8 04F11003 		add	r3, r4, #16
 950 00bc 40F27112 		movw	r2, #369
 951 00c0 1946     		mov	r1, r3
 952 00c2 FFF7FEFF 		bl	memcpy
 953 00c6 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 954 00ca FFF7FEFF 		bl	printTestStatus
 372:notoriOS.c    ****     
 373:notoriOS.c    ****     // Test modem
 374:notoriOS.c    ****     test_t t_modem = modem_test();
 955              		.loc 1 374 0
 956 00ce 3B46     		mov	r3, r7
 957 00d0 1846     		mov	r0, r3
 958 00d2 FFF7FEFF 		bl	modem_test
 375:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s",modem_info.imei,modem_info.sim_i
 959              		.loc 1 375 0
 960 00d6 104B     		ldr	r3, .L35+4
 961 00d8 0093     		str	r3, [sp]
 962 00da 104B     		ldr	r3, .L35+8
 963 00dc 104A     		ldr	r2, .L35+12
 964 00de 1149     		ldr	r1, .L35+16
 965 00e0 0320     		movs	r0, #3
 966 00e2 FFF7FEFF 		bl	printNotif
 376:notoriOS.c    ****     printTestStatus(t_modem);
 967              		.loc 1 376 0
 968 00e6 3C46     		mov	r4, r7
 969 00e8 6846     		mov	r0, sp
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 25


 970 00ea 04F11003 		add	r3, r4, #16
 971 00ee 40F27112 		movw	r2, #369
 972 00f2 1946     		mov	r1, r3
 973 00f4 FFF7FEFF 		bl	memcpy
 974 00f8 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 975 00fc FFF7FEFF 		bl	printTestStatus
 377:notoriOS.c    ****     
 378:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 976              		.loc 1 378 0
 977 0100 0949     		ldr	r1, .L35+20
 978 0102 0320     		movs	r0, #3
 979 0104 FFF7FEFF 		bl	printNotif
 379:notoriOS.c    **** 
 380:notoriOS.c    **** }
 980              		.loc 1 380 0
 981 0108 00BF     		nop
 982 010a 07F61C17 		addw	r7, r7, #2332
 983              		.cfi_def_cfa_offset 12
 984 010e BD46     		mov	sp, r7
 985              		.cfi_def_cfa_register 13
 986              		@ sp needed
 987 0110 90BD     		pop	{r4, r7, pc}
 988              	.L36:
 989 0112 00BF     		.align	2
 990              	.L35:
 991 0114 3C000000 		.word	.LC2
 992 0118 04000000 		.word	system_info+4
 993 011c 00000000 		.word	modem_info
 994 0120 28000000 		.word	modem_info+40
 995 0124 68000000 		.word	.LC3
 996 0128 88000000 		.word	.LC4
 997              		.cfi_endproc
 998              	.LFE72:
 999              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 1000              		.section	.text.main,"ax",%progbits
 1001              		.align	2
 1002              		.global	main
 1003              		.thumb
 1004              		.thumb_func
 1005              		.type	main, %function
 1006              	main:
 1007              	.LFB73:
 381:notoriOS.c    **** 
 382:notoriOS.c    **** // ==============================================
 383:notoriOS.c    **** // Processes Core Tasks
 384:notoriOS.c    **** // ==============================================
 385:notoriOS.c    **** int main(void)
 386:notoriOS.c    **** {
 1008              		.loc 1 386 0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 0
 1011              		@ frame_needed = 1, uses_anonymous_args = 0
 1012 0000 80B5     		push	{r7, lr}
 1013              		.cfi_def_cfa_offset 8
 1014              		.cfi_offset 7, -8
 1015              		.cfi_offset 14, -4
 1016 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 26


 1017              		.cfi_def_cfa_register 7
 387:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 1018              		.loc 1 387 0
 1019              		.syntax unified
 1020              	@ 387 "notoriOS.c" 1
 1021 0004 62B6     		CPSIE   i
 1022              	@ 0 "" 2
 388:notoriOS.c    **** 
 389:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 1023              		.loc 1 389 0
 1024              		.thumb
 1025              		.syntax unified
 1026 0006 FFF7FEFF 		bl	ReadyOrNot
 390:notoriOS.c    ****     
 391:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 1027              		.loc 1 391 0
 1028 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 1029              	.L39:
 392:notoriOS.c    ****    
 393:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 394:notoriOS.c    ****     {
 395:notoriOS.c    ****         
 396:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 1030              		.loc 1 396 0
 1031 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 1032 0012 0346     		mov	r3, r0
 1033 0014 002B     		cmp	r3, #0
 1034 0016 FAD1     		bne	.L39
 397:notoriOS.c    ****         {
 398:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
 1035              		.loc 1 398 0
 1036 0018 FFF7FEFF 		bl	LayBack
 399:notoriOS.c    ****         }
 400:notoriOS.c    ****     }
 1037              		.loc 1 400 0
 1038 001c F7E7     		b	.L39
 1039              		.cfi_endproc
 1040              	.LFE73:
 1041              		.size	main, .-main
 1042 001e 00BF     		.section	.rodata
 1043 00b2 0000     		.align	2
 1044              	.LC5:
 1045 00b4 4D6F6465 		.ascii	"Modem is ready.\000"
 1045      6D206973 
 1045      20726561 
 1045      64792E00 
 1046              		.align	2
 1047              	.LC6:
 1048 00c4 256400   		.ascii	"%d\000"
 1049 00c7 00       		.align	2
 1050              	.LC7:
 1051 00c8 72737270 		.ascii	"rsrp\000"
 1051      00
 1052 00cd 000000   		.align	2
 1053              	.LC8:
 1054 00d0 72736370 		.ascii	"rscp\000"
 1054      00
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 27


 1055 00d5 000000   		.align	2
 1056              	.LC9:
 1057 00d8 7472795F 		.ascii	"try_counter\000"
 1057      636F756E 
 1057      74657200 
 1058              		.align	2
 1059              	.LC10:
 1060 00e4 64617461 		.ascii	"data_count_sent\000"
 1060      5F636F75 
 1060      6E745F73 
 1060      656E7400 
 1061              		.align	2
 1062              	.LC11:
 1063 00f4 64617461 		.ascii	"data_count_desired\000"
 1063      5F636F75 
 1063      6E745F64 
 1063      65736972 
 1063      656400
 1064 0107 00       		.align	2
 1065              	.LC12:
 1066 0108 42656769 		.ascii	"Begin HTTP post.\000"
 1066      6E204854 
 1066      54502070 
 1066      6F73742E 
 1066      00
 1067 0119 000000   		.align	2
 1068              	.LC13:
 1069 011c 30353765 		.ascii	"057ed240a9676b992f8252bfc42f601a6445395c\000"
 1069      64323430 
 1069      61393637 
 1069      36623939 
 1069      32663832 
 1070 0145 000000   		.align	2
 1071              	.LC14:
 1072 0148 6170692F 		.ascii	"api/v1/write\000"
 1072      76312F77 
 1072      72697465 
 1072      00
 1073 0155 000000   		.align	2
 1074              	.LC15:
 1075 0158 48545450 		.ascii	"HTTP route: %s\000"
 1075      20726F75 
 1075      74653A20 
 1075      257300
 1076 0167 00       		.align	2
 1077              	.LC16:
 1078 0168 312E3100 		.ascii	"1.1\000"
 1079              		.align	2
 1080              	.LC17:
 1081 016c 00       		.ascii	"\000"
 1082 016d 000000   		.align	2
 1083              	.LC18:
 1084 0170 436C6F73 		.ascii	"Close\000"
 1084      6500
 1085 0176 0000     		.align	2
 1086              	.LC19:
 1087 0178 504F5354 		.ascii	"POST\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 28


 1087      00
 1088 017d 000000   		.align	2
 1089              	.LC20:
 1090 0180 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 1090      20485454 
 1090      50205265 
 1090      71756573 
 1090      743A2025 
 1091 0196 0000     		.align	2
 1092              	.LC21:
 1093 0198 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 1093      443D312C 
 1093      302C2564 
 1093      2C222573 
 1093      222C302C 
 1094 01b1 000000   		.align	2
 1095              	.LC22:
 1096 01b4 257300   		.ascii	"%s\000"
 1097 01b7 00       		.align	2
 1098              	.LC23:
 1099 01b8 4F4B00   		.ascii	"OK\000"
 1100              		.global	__aeabi_ui2d
 1101              		.global	__aeabi_d2iz
 1102 01bb 00       		.align	2
 1103              	.LC24:
 1104 01bc 68747470 		.ascii	"http_request len: %d\000"
 1104      5F726571 
 1104      75657374 
 1104      206C656E 
 1104      3A202564 
 1105 01d1 000000   		.align	2
 1106              	.LC25:
 1107 01d4 23206F66 		.ascii	"# of packets: %d\000"
 1107      20706163 
 1107      6B657473 
 1107      3A202564 
 1107      00
 1108 01e5 000000   		.align	2
 1109              	.LC26:
 1110 01e8 3E00     		.ascii	">\000"
 1111 01ea 0000     		.align	2
 1112              	.LC27:
 1113 01ec 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 1113      53454E44 
 1113      3D310D0A 
 1113      00
 1114 01f9 000000   		.align	2
 1115              	.LC28:
 1116 01fc 1A00     		.ascii	"\032\000"
 1117 01fe 0000     		.align	2
 1118              	.LC29:
 1119 0200 6368756E 		.ascii	"chunk %d: %s\000"
 1119      6B202564 
 1119      3A202573 
 1119      00
 1120 020d 000000   		.align	2
 1121              	.LC30:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 29


 1122 0210 5352494E 		.ascii	"SRING\000"
 1122      4700
 1123 0216 0000     		.align	2
 1124              	.LC31:
 1125 0218 4F532D4F 		.ascii	"OS-OK\000"
 1125      4B00
 1126 021e 0000     		.align	2
 1127              	.LC32:
 1128 0220 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 1128      52454356 
 1128      3D312C31 
 1128      3030300D 
 1128      00
 1129 0231 000000   		.align	2
 1130              	.LC33:
 1131 0234 6D6F6465 		.ascii	"modem_tx_time\000"
 1131      6D5F7478 
 1131      5F74696D 
 1131      6500
 1132 0242 0000     		.align	2
 1133              	.LC34:
 1134 0244 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 1134      4F3A2043 
 1134      6F756C64 
 1134      206E6F74 
 1134      20726563 
 1135              		.section	.text.syncData,"ax",%progbits
 1136              		.align	2
 1137              		.global	syncData
 1138              		.thumb
 1139              		.thumb_func
 1140              		.type	syncData, %function
 1141              	syncData:
 1142              	.LFB74:
 401:notoriOS.c    **** }
 402:notoriOS.c    **** 
 403:notoriOS.c    **** // ==============================================
 404:notoriOS.c    **** // Syncs data with server
 405:notoriOS.c    **** // Returns 0 when done
 406:notoriOS.c    **** // ==============================================
 407:notoriOS.c    **** uint8 syncData(){
 1143              		.loc 1 407 0
 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 1360
 1146              		@ frame_needed = 1, uses_anonymous_args = 0
 1147 0000 90B5     		push	{r4, r7, lr}
 1148              		.cfi_def_cfa_offset 12
 1149              		.cfi_offset 4, -12
 1150              		.cfi_offset 7, -8
 1151              		.cfi_offset 14, -4
 1152 0002 ADF26C5D 		subw	sp, sp, #1388
 1153              		.cfi_def_cfa_offset 1400
 1154 0006 06AF     		add	r7, sp, #24
 1155              		.cfi_def_cfa 7, 1376
 408:notoriOS.c    ****     
 409:notoriOS.c    ****     /*
 410:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 30


 411:notoriOS.c    ****     uint8 check = 0;
 412:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 413:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 414:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 415:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 416:notoriOS.c    ****     */
 417:notoriOS.c    **** 
 418:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 419:notoriOS.c    ****     LED_Write(1u);
 1156              		.loc 1 419 0
 1157 0008 0120     		movs	r0, #1
 1158 000a FFF7FEFF 		bl	LED_Write
 420:notoriOS.c    ****     CyDelay(100u);
 1159              		.loc 1 420 0
 1160 000e 6420     		movs	r0, #100
 1161 0010 FFF7FEFF 		bl	CyDelay
 421:notoriOS.c    ****     LED_Write(0u);
 1162              		.loc 1 421 0
 1163 0014 0020     		movs	r0, #0
 1164 0016 FFF7FEFF 		bl	LED_Write
 422:notoriOS.c    **** 
 423:notoriOS.c    ****     
 424:notoriOS.c    ****     // If there's no data, not need to do anything
 425:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 1165              		.loc 1 425 0
 1166 001a FFF7FEFF 		bl	sizeOfDataStack
 1167 001e 0346     		mov	r3, r0
 1168 0020 002B     		cmp	r3, #0
 1169 0022 01D1     		bne	.L41
 426:notoriOS.c    ****         return 0u;
 1170              		.loc 1 426 0
 1171 0024 0023     		movs	r3, #0
 1172 0026 03E2     		b	.L42
 1173              	.L41:
 427:notoriOS.c    ****         }
 428:notoriOS.c    ****     
 429:notoriOS.c    ****     // Create request body, in this case influx
 430:notoriOS.c    ****     // Place body into HTTP request header
 431:notoriOS.c    ****     // Fire up modem and get it out
 432:notoriOS.c    ****      
 433:notoriOS.c    ****     
 434:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 435:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1174              		.loc 1 435 0
 1175 0028 FFF7FEFF 		bl	modem_get_state
 1176 002c 0346     		mov	r3, r0
 1177 002e 002B     		cmp	r3, #0
 1178 0030 11D1     		bne	.L43
 436:notoriOS.c    **** 
 437:notoriOS.c    ****         try_counter++;
 1179              		.loc 1 437 0
 1180 0032 AE4B     		ldr	r3, .L55
 1181 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1182 0036 0133     		adds	r3, r3, #1
 1183 0038 DAB2     		uxtb	r2, r3
 1184 003a AC4B     		ldr	r3, .L55
 1185 003c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 31


 438:notoriOS.c    ****         	
 439:notoriOS.c    ****         if(try_counter <= 2){
 1186              		.loc 1 439 0
 1187 003e AB4B     		ldr	r3, .L55
 1188 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1189 0042 022B     		cmp	r3, #2
 1190 0044 02D8     		bhi	.L44
 440:notoriOS.c    ****             modem_power_up();
 1191              		.loc 1 440 0
 1192 0046 FFF7FEFF 		bl	modem_power_up
 1193 004a F0E1     		b	.L45
 1194              	.L44:
 441:notoriOS.c    ****         }else{
 442:notoriOS.c    ****             try_counter = 0;
 1195              		.loc 1 442 0
 1196 004c A74B     		ldr	r3, .L55
 1197 004e 0022     		movs	r2, #0
 1198 0050 1A70     		strb	r2, [r3]
 443:notoriOS.c    ****             return 0u;
 1199              		.loc 1 443 0
 1200 0052 0023     		movs	r3, #0
 1201 0054 ECE1     		b	.L42
 1202              	.L43:
 444:notoriOS.c    ****             }
 445:notoriOS.c    ****             
 446:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1203              		.loc 1 446 0
 1204 0056 FFF7FEFF 		bl	modem_get_state
 1205 005a 0346     		mov	r3, r0
 1206 005c 042B     		cmp	r3, #4
 1207 005e 40F0E681 		bne	.L45
 1208              	.LBB2:
 447:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 1209              		.loc 1 447 0
 1210 0062 A349     		ldr	r1, .L55+4
 1211 0064 0020     		movs	r0, #0
 1212 0066 FFF7FEFF 		bl	printNotif
 448:notoriOS.c    ****         
 449:notoriOS.c    ****         http_request[0] = '\0';
 1213              		.loc 1 449 0
 1214 006a A24B     		ldr	r3, .L55+8
 1215 006c 0022     		movs	r2, #0
 1216 006e 1A70     		strb	r2, [r3]
 450:notoriOS.c    ****         http_body[0] = '\0';
 1217              		.loc 1 450 0
 1218 0070 A14B     		ldr	r3, .L55+12
 1219 0072 0022     		movs	r2, #0
 1220 0074 1A70     		strb	r2, [r3]
 451:notoriOS.c    ****         http_route[0] = '\0';
 1221              		.loc 1 451 0
 1222 0076 A14B     		ldr	r3, .L55+16
 1223 0078 0022     		movs	r2, #0
 1224 007a 1A70     		strb	r2, [r3]
 452:notoriOS.c    ****         //char *base = "write";
 453:notoriOS.c    ****         
 454:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power and RSCP: received signal
 455:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 32


 456:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 1225              		.loc 1 456 0
 1226 007c A04B     		ldr	r3, .L55+20
 1227 007e 5B69     		ldr	r3, [r3, #20]
 1228 0080 07F5A560 		add	r0, r7, #1320
 1229 0084 9F4A     		ldr	r2, .L55+24
 1230 0086 1421     		movs	r1, #20
 1231 0088 FFF7FEFF 		bl	snprintf
 457:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 1232              		.loc 1 457 0
 1233 008c FFF7FEFF 		bl	getTimeStamp
 1234 0090 0246     		mov	r2, r0
 1235 0092 07F5A563 		add	r3, r7, #1320
 1236 0096 1946     		mov	r1, r3
 1237 0098 9B48     		ldr	r0, .L55+28
 1238 009a FFF7FEFF 		bl	pushData
 458:notoriOS.c    ****         
 459:notoriOS.c    ****         char s_rscp[DATA_MAX_KEY_LENGTH];
 460:notoriOS.c    ****         snprintf(s_rscp,sizeof(s_rscp),"%d",modem_stats.rscp);
 1239              		.loc 1 460 0
 1240 009e 984B     		ldr	r3, .L55+20
 1241 00a0 9B68     		ldr	r3, [r3, #8]
 1242 00a2 07F21450 		addw	r0, r7, #1300
 1243 00a6 974A     		ldr	r2, .L55+24
 1244 00a8 1421     		movs	r1, #20
 1245 00aa FFF7FEFF 		bl	snprintf
 461:notoriOS.c    ****         pushData("rscp", s_rscp, getTimeStamp());
 1246              		.loc 1 461 0
 1247 00ae FFF7FEFF 		bl	getTimeStamp
 1248 00b2 0246     		mov	r2, r0
 1249 00b4 07F21453 		addw	r3, r7, #1300
 1250 00b8 1946     		mov	r1, r3
 1251 00ba 9448     		ldr	r0, .L55+32
 1252 00bc FFF7FEFF 		bl	pushData
 462:notoriOS.c    ****         
 463:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 464:notoriOS.c    ****         char c_try_counter[20];
 465:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 1253              		.loc 1 465 0
 1254 00c0 8A4B     		ldr	r3, .L55
 1255 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1256 00c4 07F5A060 		add	r0, r7, #1280
 1257 00c8 8E4A     		ldr	r2, .L55+24
 1258 00ca 1421     		movs	r1, #20
 1259 00cc FFF7FEFF 		bl	snprintf
 466:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 1260              		.loc 1 466 0
 1261 00d0 FFF7FEFF 		bl	getTimeStamp
 1262 00d4 0246     		mov	r2, r0
 1263 00d6 07F5A063 		add	r3, r7, #1280
 1264 00da 1946     		mov	r1, r3
 1265 00dc 8C48     		ldr	r0, .L55+36
 1266 00de FFF7FEFF 		bl	pushData
 467:notoriOS.c    ****         
 468:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
 469:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 470:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 33


 471:notoriOS.c    ****         if(buffer_overflow == false){
 1267              		.loc 1 471 0
 1268 00e2 8C4B     		ldr	r3, .L55+40
 1269 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1270 00e6 83F00103 		eor	r3, r3, #1
 1271 00ea DBB2     		uxtb	r3, r3
 1272 00ec 002B     		cmp	r3, #0
 1273 00ee 16D0     		beq	.L46
 1274              	.LBB3:
 472:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 1275              		.loc 1 472 0
 1276 00f0 FFF7FEFF 		bl	sizeOfDataStack
 1277 00f4 0346     		mov	r3, r0
 1278 00f6 A7F84835 		strh	r3, [r7, #1352]	@ movhi
 473:notoriOS.c    ****             char c_data_count_sent[20];
 474:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 1279              		.loc 1 474 0
 1280 00fa B7F84835 		ldrh	r3, [r7, #1352]
 1281 00fe 07F59B60 		add	r0, r7, #1240
 1282 0102 804A     		ldr	r2, .L55+24
 1283 0104 1421     		movs	r1, #20
 1284 0106 FFF7FEFF 		bl	snprintf
 475:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1285              		.loc 1 475 0
 1286 010a FFF7FEFF 		bl	getTimeStamp
 1287 010e 0246     		mov	r2, r0
 1288 0110 07F59B63 		add	r3, r7, #1240
 1289 0114 1946     		mov	r1, r3
 1290 0116 8048     		ldr	r0, .L55+44
 1291 0118 FFF7FEFF 		bl	pushData
 1292              	.LBE3:
 1293 011c 0FE0     		b	.L47
 1294              	.L46:
 1295              	.LBB4:
 476:notoriOS.c    ****         }else{
 477:notoriOS.c    ****             char c_data_count_sent[20];
 478:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1296              		.loc 1 478 0
 1297 011e 07F2C440 		addw	r0, r7, #1220
 1298 0122 9623     		movs	r3, #150
 1299 0124 774A     		ldr	r2, .L55+24
 1300 0126 1421     		movs	r1, #20
 1301 0128 FFF7FEFF 		bl	snprintf
 479:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1302              		.loc 1 479 0
 1303 012c FFF7FEFF 		bl	getTimeStamp
 1304 0130 0246     		mov	r2, r0
 1305 0132 07F2C443 		addw	r3, r7, #1220
 1306 0136 1946     		mov	r1, r3
 1307 0138 7748     		ldr	r0, .L55+44
 1308 013a FFF7FEFF 		bl	pushData
 1309              	.L47:
 1310              	.LBE4:
 480:notoriOS.c    ****         }
 481:notoriOS.c    ****         
 482:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 483:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 34


 1311              		.loc 1 483 0
 1312 013e FFF7FEFF 		bl	sizeOfDataStackDesired
 1313 0142 0346     		mov	r3, r0
 1314 0144 A7F84635 		strh	r3, [r7, #1350]	@ movhi
 484:notoriOS.c    ****         char c_data_count_desired[20];
 485:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 486:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1315              		.loc 1 486 0
 1316 0148 B7F84635 		ldrh	r3, [r7, #1350]
 1317 014c 013B     		subs	r3, r3, #1
 1318 014e 07F2EC40 		addw	r0, r7, #1260
 1319 0152 6C4A     		ldr	r2, .L55+24
 1320 0154 1421     		movs	r1, #20
 1321 0156 FFF7FEFF 		bl	snprintf
 487:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
 1322              		.loc 1 487 0
 1323 015a FFF7FEFF 		bl	getTimeStamp
 1324 015e 0246     		mov	r2, r0
 1325 0160 07F2EC43 		addw	r3, r7, #1260
 1326 0164 1946     		mov	r1, r3
 1327 0166 6D48     		ldr	r0, .L55+48
 1328 0168 FFF7FEFF 		bl	pushData
 488:notoriOS.c    ****         
 489:notoriOS.c    ****         // Construct HTPP request
 490:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1329              		.loc 1 490 0
 1330 016c 6C49     		ldr	r1, .L55+52
 1331 016e 0020     		movs	r0, #0
 1332 0170 FFF7FEFF 		bl	printNotif
 491:notoriOS.c    ****         
 492:notoriOS.c    ****         // Old influx API
 493:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 494:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1333              		.loc 1 494 0
 1334 0174 6B4B     		ldr	r3, .L55+56
 1335 0176 6C4A     		ldr	r2, .L55+60
 1336 0178 6C49     		ldr	r1, .L55+64
 1337 017a 6048     		ldr	r0, .L55+16
 1338 017c FFF7FEFF 		bl	construct_malcom_route
 495:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1339              		.loc 1 495 0
 1340 0180 5E4A     		ldr	r2, .L55+16
 1341 0182 6B49     		ldr	r1, .L55+68
 1342 0184 0020     		movs	r0, #0
 1343 0186 FFF7FEFF 		bl	printNotif
 496:notoriOS.c    ****         
 497:notoriOS.c    ****         //OLD INFLUX API
 498:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 499:notoriOS.c    ****         construct_malcom_body(http_body);
 1344              		.loc 1 499 0
 1345 018a 5B48     		ldr	r0, .L55+12
 1346 018c FFF7FEFF 		bl	construct_malcom_body
 500:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1347              		.loc 1 500 0
 1348 0190 684B     		ldr	r3, .L55+72
 1349 0192 5B6E     		ldr	r3, [r3, #100]
 1350 0194 684A     		ldr	r2, .L55+76
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 35


 1351 0196 0592     		str	r2, [sp, #20]
 1352 0198 0022     		movs	r2, #0
 1353 019a 0492     		str	r2, [sp, #16]
 1354 019c 674A     		ldr	r2, .L55+80
 1355 019e 0392     		str	r2, [sp, #12]
 1356 01a0 674A     		ldr	r2, .L55+84
 1357 01a2 0292     		str	r2, [sp, #8]
 1358 01a4 674A     		ldr	r2, .L55+88
 1359 01a6 0192     		str	r2, [sp, #4]
 1360 01a8 0093     		str	r3, [sp]
 1361 01aa 544B     		ldr	r3, .L55+16
 1362 01ac 614A     		ldr	r2, .L55+72
 1363 01ae 5249     		ldr	r1, .L55+12
 1364 01b0 5048     		ldr	r0, .L55+8
 1365 01b2 FFF7FEFF 		bl	construct_generic_HTTP_request
 501:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1366              		.loc 1 501 0
 1367 01b6 4F4A     		ldr	r2, .L55+8
 1368 01b8 6349     		ldr	r1, .L55+92
 1369 01ba 0020     		movs	r0, #0
 1370 01bc FFF7FEFF 		bl	printNotif
 502:notoriOS.c    ****         
 503:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 504:notoriOS.c    ****         // Open port and begin command line sequence
 505:notoriOS.c    ****         char portConfig[200];
 506:notoriOS.c    ****         uint8 status = 0u;
 1371              		.loc 1 506 0
 1372 01c0 0023     		movs	r3, #0
 1373 01c2 87F84535 		strb	r3, [r7, #1349]
 507:notoriOS.c    ****         
 508:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1374              		.loc 1 508 0
 1375 01c6 5B4B     		ldr	r3, .L55+72
 1376 01c8 5A6E     		ldr	r2, [r3, #100]
 1377 01ca 381D     		adds	r0, r7, #4
 1378 01cc 594B     		ldr	r3, .L55+72
 1379 01ce 0093     		str	r3, [sp]
 1380 01d0 1346     		mov	r3, r2
 1381 01d2 5E4A     		ldr	r2, .L55+96
 1382 01d4 C821     		movs	r1, #200
 1383 01d6 FFF7FEFF 		bl	snprintf
 509:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1384              		.loc 1 509 0
 1385 01da 3B1D     		adds	r3, r7, #4
 1386 01dc 1A46     		mov	r2, r3
 1387 01de 5C49     		ldr	r1, .L55+100
 1388 01e0 0020     		movs	r0, #0
 1389 01e2 FFF7FEFF 		bl	printNotif
 510:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1390              		.loc 1 510 0
 1391 01e6 3B1D     		adds	r3, r7, #4
 1392 01e8 42F21072 		movw	r2, #10000
 1393 01ec 5949     		ldr	r1, .L55+104
 1394 01ee 1846     		mov	r0, r3
 1395 01f0 FFF7FEFF 		bl	at_write_command
 1396 01f4 0346     		mov	r3, r0
 1397 01f6 87F84535 		strb	r3, [r7, #1349]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 36


 511:notoriOS.c    ****         
 512:notoriOS.c    ****         // create character pointer to chunk through the http_request
 513:notoriOS.c    ****         char *chunk;
 514:notoriOS.c    ****         // Set chunk to start where http_request starts
 515:notoriOS.c    ****         chunk = http_request;
 1398              		.loc 1 515 0
 1399 01fa 3E4B     		ldr	r3, .L55+8
 1400 01fc C7F84C35 		str	r3, [r7, #1356]
 516:notoriOS.c    ****         // variable for the number of packets to send
 517:notoriOS.c    ****         int8 packets;
 518:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1401              		.loc 1 518 0
 1402 0200 3C48     		ldr	r0, .L55+8
 1403 0202 FFF7FEFF 		bl	strlen
 1404 0206 0246     		mov	r2, r0
 1405 0208 534B     		ldr	r3, .L55+108
 1406 020a A3FB0223 		umull	r2, r3, r3, r2
 1407 020e 5B09     		lsrs	r3, r3, #5
 1408 0210 1846     		mov	r0, r3
 1409 0212 FFF7FEFF 		bl	__aeabi_ui2d
 1410 0216 4FF00002 		mov	r2, #0
 1411 021a 504B     		ldr	r3, .L55+112
 1412 021c FFF7FEFF 		bl	nextafter
 1413 0220 0346     		mov	r3, r0
 1414 0222 0C46     		mov	r4, r1
 1415 0224 1846     		mov	r0, r3
 1416 0226 2146     		mov	r1, r4
 1417 0228 FFF7FEFF 		bl	ceil
 1418 022c 0346     		mov	r3, r0
 1419 022e 0C46     		mov	r4, r1
 1420 0230 1846     		mov	r0, r3
 1421 0232 2146     		mov	r1, r4
 1422 0234 FFF7FEFF 		bl	__aeabi_d2iz
 1423 0238 0346     		mov	r3, r0
 1424 023a 87F84435 		strb	r3, [r7, #1348]
 519:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1425              		.loc 1 519 0
 1426 023e 2D48     		ldr	r0, .L55+8
 1427 0240 FFF7FEFF 		bl	strlen
 1428 0244 0346     		mov	r3, r0
 1429 0246 1A46     		mov	r2, r3
 1430 0248 4549     		ldr	r1, .L55+116
 1431 024a 0020     		movs	r0, #0
 1432 024c FFF7FEFF 		bl	printNotif
 520:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1433              		.loc 1 520 0
 1434 0250 97F94435 		ldrsb	r3, [r7, #1348]
 1435 0254 1A46     		mov	r2, r3
 1436 0256 4349     		ldr	r1, .L55+120
 1437 0258 0020     		movs	r0, #0
 1438 025a FFF7FEFF 		bl	printNotif
 1439              	.LBB5:
 521:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 522:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1440              		.loc 1 522 0
 1441 025e 0023     		movs	r3, #0
 1442 0260 87F84B35 		strb	r3, [r7, #1355]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 37


 1443 0264 9AE0     		b	.L48
 1444              	.L51:
 1445              	.LBB6:
 523:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 524:notoriOS.c    ****             char http_chunk[1001];
 525:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 526:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 527:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1446              		.loc 1 527 0
 1447 0266 4FF47A72 		mov	r2, #1000
 1448 026a 3F49     		ldr	r1, .L55+124
 1449 026c 3F48     		ldr	r0, .L55+128
 1450 026e FFF7FEFF 		bl	at_write_command
 1451 0272 0346     		mov	r3, r0
 1452 0274 87F84535 		strb	r3, [r7, #1349]
 528:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 529:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1453              		.loc 1 529 0
 1454 0278 07F1CC00 		add	r0, r7, #204
 1455 027c D7F84C35 		ldr	r3, [r7, #1356]
 1456 0280 334A     		ldr	r2, .L55+100
 1457 0282 4FF4FA71 		mov	r1, #500
 1458 0286 FFF7FEFF 		bl	snprintf
 530:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 531:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1459              		.loc 1 531 0
 1460 028a 07F1CC03 		add	r3, r7, #204
 1461 028e 1846     		mov	r0, r3
 1462 0290 FFF7FEFF 		bl	strlen
 1463 0294 0346     		mov	r3, r0
 1464 0296 1A46     		mov	r2, r3
 1465 0298 07F1CC03 		add	r3, r7, #204
 1466 029c 1344     		add	r3, r3, r2
 1467 029e 3449     		ldr	r1, .L55+132
 1468 02a0 1A46     		mov	r2, r3
 1469 02a2 0B46     		mov	r3, r1
 1470 02a4 1B88     		ldrh	r3, [r3]	@ unaligned
 1471 02a6 1380     		strh	r3, [r2]	@ unaligned
 532:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1472              		.loc 1 532 0
 1473 02a8 97F94B25 		ldrsb	r2, [r7, #1355]
 1474 02ac 07F1CC03 		add	r3, r7, #204
 1475 02b0 3049     		ldr	r1, .L55+136
 1476 02b2 0020     		movs	r0, #0
 1477 02b4 FFF7FEFF 		bl	printNotif
 533:notoriOS.c    ****             // Send data to server
 534:notoriOS.c    ****             if ((packet+1) != packets){
 1478              		.loc 1 534 0
 1479 02b8 97F94B35 		ldrsb	r3, [r7, #1355]
 1480 02bc 5A1C     		adds	r2, r3, #1
 1481 02be 97F94435 		ldrsb	r3, [r7, #1348]
 1482 02c2 9A42     		cmp	r2, r3
 1483 02c4 58D0     		beq	.L49
 535:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1484              		.loc 1 535 0
 1485 02c6 07F1CC03 		add	r3, r7, #204
 1486 02ca 41F28832 		movw	r2, #5000
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 38


 1487 02ce 2149     		ldr	r1, .L55+104
 1488 02d0 1846     		mov	r0, r3
 1489 02d2 FFF7FEFF 		bl	at_write_command
 1490 02d6 0346     		mov	r3, r0
 1491 02d8 87F84535 		strb	r3, [r7, #1349]
 536:notoriOS.c    ****                 // Move the pointer forward 
 537:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1492              		.loc 1 537 0
 1493 02dc D7F84C35 		ldr	r3, [r7, #1356]
 1494 02e0 03F2F313 		addw	r3, r3, #499
 1495 02e4 C7F84C35 		str	r3, [r7, #1356]
 1496 02e8 51E0     		b	.L50
 1497              	.L56:
 1498 02ea 00BF     		.align	2
 1499              	.L55:
 1500 02ec 00000000 		.word	try_counter
 1501 02f0 B4000000 		.word	.LC5
 1502 02f4 00000000 		.word	http_request
 1503 02f8 00000000 		.word	http_body
 1504 02fc 00000000 		.word	http_route
 1505 0300 00000000 		.word	modem_stats
 1506 0304 C4000000 		.word	.LC6
 1507 0308 C8000000 		.word	.LC7
 1508 030c D0000000 		.word	.LC8
 1509 0310 D8000000 		.word	.LC9
 1510 0314 00000000 		.word	buffer_overflow
 1511 0318 E4000000 		.word	.LC10
 1512 031c F4000000 		.word	.LC11
 1513 0320 08010000 		.word	.LC12
 1514 0324 1C010000 		.word	.LC13
 1515 0328 28000000 		.word	modem_info+40
 1516 032c 48010000 		.word	.LC14
 1517 0330 58010000 		.word	.LC15
 1518 0334 00000000 		.word	system_settings
 1519 0338 68010000 		.word	.LC16
 1520 033c 6C010000 		.word	.LC17
 1521 0340 70010000 		.word	.LC18
 1522 0344 78010000 		.word	.LC19
 1523 0348 80010000 		.word	.LC20
 1524 034c 98010000 		.word	.LC21
 1525 0350 B4010000 		.word	.LC22
 1526 0354 B8010000 		.word	.LC23
 1527 0358 D34D6210 		.word	274877907
 1528 035c 00407F40 		.word	1082081280
 1529 0360 BC010000 		.word	.LC24
 1530 0364 D4010000 		.word	.LC25
 1531 0368 E8010000 		.word	.LC26
 1532 036c EC010000 		.word	.LC27
 1533 0370 FC010000 		.word	.LC28
 1534 0374 00020000 		.word	.LC29
 1535              	.L49:
 538:notoriOS.c    ****             }else{
 539:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
 1536              		.loc 1 539 0
 1537 0378 07F1CC03 		add	r3, r7, #204
 1538 037c 41F28832 		movw	r2, #5000
 1539 0380 2E49     		ldr	r1, .L57
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 39


 1540 0382 1846     		mov	r0, r3
 1541 0384 FFF7FEFF 		bl	at_write_command
 1542 0388 0346     		mov	r3, r0
 1543 038a 87F84535 		strb	r3, [r7, #1349]
 1544              	.L50:
 1545              	.LBE6:
 522:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1546              		.loc 1 522 0 discriminator 2
 1547 038e 97F94B35 		ldrsb	r3, [r7, #1355]
 1548 0392 DBB2     		uxtb	r3, r3
 1549 0394 0133     		adds	r3, r3, #1
 1550 0396 DBB2     		uxtb	r3, r3
 1551 0398 87F84B35 		strb	r3, [r7, #1355]
 1552              	.L48:
 522:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1553              		.loc 1 522 0 is_stmt 0 discriminator 1
 1554 039c 97F94B25 		ldrsb	r2, [r7, #1355]
 1555 03a0 97F94435 		ldrsb	r3, [r7, #1348]
 1556 03a4 9A42     		cmp	r2, r3
 1557 03a6 FFF65EAF 		blt	.L51
 1558              	.LBE5:
 540:notoriOS.c    ****             }
 541:notoriOS.c    ****             
 542:notoriOS.c    ****         }
 543:notoriOS.c    ****         
 544:notoriOS.c    ****         // Read received buffer
 545:notoriOS.c    ****         // A good write will return code "OS-OK"
 546:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 547:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 548:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1559              		.loc 1 548 0 is_stmt 1
 1560 03aa 41F28832 		movw	r2, #5000
 1561 03ae 2449     		ldr	r1, .L57+4
 1562 03b0 2448     		ldr	r0, .L57+8
 1563 03b2 FFF7FEFF 		bl	at_write_command
 1564 03b6 0346     		mov	r3, r0
 1565 03b8 87F84535 		strb	r3, [r7, #1349]
 549:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 550:notoriOS.c    ****     
 551:notoriOS.c    ****   
 552:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 553:notoriOS.c    ****         if(status == 1u){
 1566              		.loc 1 553 0
 1567 03bc 97F84535 		ldrb	r3, [r7, #1349]	@ zero_extendqisi2
 1568 03c0 012B     		cmp	r3, #1
 1569 03c2 1DD1     		bne	.L52
 1570              	.LBB7:
 554:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1571              		.loc 1 554 0
 1572 03c4 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 555:notoriOS.c    ****             Clear_Data_Stack();
 1573              		.loc 1 555 0
 1574 03c8 FFF7FEFF 		bl	Clear_Data_Stack
 556:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1575              		.loc 1 556 0
 1576 03cc FFF7FEFF 		bl	getTimeStamp
 1577 03d0 0246     		mov	r2, r0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 40


 1578 03d2 1D4B     		ldr	r3, .L57+12
 1579 03d4 1B68     		ldr	r3, [r3]
 1580 03d6 D31A     		subs	r3, r2, r3
 1581 03d8 C7F84035 		str	r3, [r7, #1344]
 557:notoriOS.c    ****             char s_send_time[10];
 558:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1582              		.loc 1 558 0
 1583 03dc 07F59760 		add	r0, r7, #1208
 1584 03e0 D7F84035 		ldr	r3, [r7, #1344]
 1585 03e4 194A     		ldr	r2, .L57+16
 1586 03e6 0A21     		movs	r1, #10
 1587 03e8 FFF7FEFF 		bl	snprintf
 559:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1588              		.loc 1 559 0
 1589 03ec FFF7FEFF 		bl	getTimeStamp
 1590 03f0 0246     		mov	r2, r0
 1591 03f2 07F59763 		add	r3, r7, #1208
 1592 03f6 1946     		mov	r1, r3
 1593 03f8 1548     		ldr	r0, .L57+20
 1594 03fa FFF7FEFF 		bl	pushData
 1595              	.LBE7:
 1596 03fe 03E0     		b	.L53
 1597              	.L52:
 560:notoriOS.c    ****         }else{
 561:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1598              		.loc 1 561 0
 1599 0400 1449     		ldr	r1, .L57+24
 1600 0402 0220     		movs	r0, #2
 1601 0404 FFF7FEFF 		bl	printNotif
 1602              	.L53:
 562:notoriOS.c    ****         }
 563:notoriOS.c    ****          
 564:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 565:notoriOS.c    ****         long network_time = modem_get_network_time();
 1603              		.loc 1 565 0
 1604 0408 FFF7FEFF 		bl	modem_get_network_time
 1605 040c C7F83C05 		str	r0, [r7, #1340]
 566:notoriOS.c    ****         if(network_time != 0){
 1606              		.loc 1 566 0
 1607 0410 D7F83C35 		ldr	r3, [r7, #1340]
 1608 0414 002B     		cmp	r3, #0
 1609 0416 03D0     		beq	.L54
 567:notoriOS.c    ****            setTime(network_time);
 1610              		.loc 1 567 0
 1611 0418 D7F83C05 		ldr	r0, [r7, #1340]
 1612 041c FFF7FEFF 		bl	setTime
 1613              	.L54:
 568:notoriOS.c    ****         }
 569:notoriOS.c    ****         
 570:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 571:notoriOS.c    ****         // If not -- keep the statck and try next time
 572:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 573:notoriOS.c    ****         modem_power_down();
 1614              		.loc 1 573 0
 1615 0420 FFF7FEFF 		bl	modem_power_down
 574:notoriOS.c    ****         
 575:notoriOS.c    ****         try_counter = 0u;
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 41


 1616              		.loc 1 575 0
 1617 0424 0C4B     		ldr	r3, .L57+28
 1618 0426 0022     		movs	r2, #0
 1619 0428 1A70     		strb	r2, [r3]
 576:notoriOS.c    ****         return 0u;
 1620              		.loc 1 576 0
 1621 042a 0023     		movs	r3, #0
 1622 042c 00E0     		b	.L42
 1623              	.L45:
 1624              	.LBE2:
 577:notoriOS.c    ****     }
 578:notoriOS.c    ****       
 579:notoriOS.c    ****       return 1u; // Not done yet
 1625              		.loc 1 579 0
 1626 042e 0123     		movs	r3, #1
 1627              	.L42:
 580:notoriOS.c    **** }
 1628              		.loc 1 580 0 discriminator 1
 1629 0430 1846     		mov	r0, r3
 1630 0432 07F25457 		addw	r7, r7, #1364
 1631              		.cfi_def_cfa_offset 12
 1632 0436 BD46     		mov	sp, r7
 1633              		.cfi_def_cfa_register 13
 1634              		@ sp needed
 1635 0438 90BD     		pop	{r4, r7, pc}
 1636              	.L58:
 1637 043a 00BF     		.align	2
 1638              	.L57:
 1639 043c 10020000 		.word	.LC30
 1640 0440 18020000 		.word	.LC31
 1641 0444 20020000 		.word	.LC32
 1642 0448 00000000 		.word	modem_start_time_stamp
 1643 044c C4000000 		.word	.LC6
 1644 0450 34020000 		.word	.LC33
 1645 0454 44020000 		.word	.LC34
 1646 0458 00000000 		.word	try_counter
 1647              		.cfi_endproc
 1648              	.LFE74:
 1649              		.size	syncData, .-syncData
 1650              		.section	.text.configureRemoteParams,"ax",%progbits
 1651              		.align	2
 1652              		.global	configureRemoteParams
 1653              		.thumb
 1654              		.thumb_func
 1655              		.type	configureRemoteParams, %function
 1656              	configureRemoteParams:
 1657              	.LFB75:
 581:notoriOS.c    **** 
 582:notoriOS.c    **** // ==============================================
 583:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 584:notoriOS.c    **** // Returns 0 when done
 585:notoriOS.c    **** // ==============================================
 586:notoriOS.c    **** uint8 configureRemoteParams(){
 1658              		.loc 1 586 0
 1659              		.cfi_startproc
 1660              		@ args = 0, pretend = 0, frame = 8
 1661              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 42


 1662 0000 80B5     		push	{r7, lr}
 1663              		.cfi_def_cfa_offset 8
 1664              		.cfi_offset 7, -8
 1665              		.cfi_offset 14, -4
 1666 0002 82B0     		sub	sp, sp, #8
 1667              		.cfi_def_cfa_offset 16
 1668 0004 00AF     		add	r7, sp, #0
 1669              		.cfi_def_cfa_register 7
 587:notoriOS.c    ****     
 588:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1670              		.loc 1 588 0
 1671 0006 FFF7FEFF 		bl	modem_get_state
 1672 000a 0346     		mov	r3, r0
 1673 000c 002B     		cmp	r3, #0
 1674 000e 02D1     		bne	.L60
 589:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 590:notoriOS.c    ****         modem_power_up();
 1675              		.loc 1 590 0
 1676 0010 FFF7FEFF 		bl	modem_power_up
 1677 0014 11E0     		b	.L61
 1678              	.L60:
 591:notoriOS.c    ****             
 592:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1679              		.loc 1 592 0
 1680 0016 FFF7FEFF 		bl	modem_get_state
 1681 001a 0346     		mov	r3, r0
 1682 001c 042B     		cmp	r3, #4
 1683 001e 0CD1     		bne	.L61
 1684              	.LBB8:
 593:notoriOS.c    ****         
 594:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 595:notoriOS.c    ****         
 596:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 597:notoriOS.c    ****         long network_time = modem_get_network_time();
 1685              		.loc 1 597 0
 1686 0020 FFF7FEFF 		bl	modem_get_network_time
 1687 0024 7860     		str	r0, [r7, #4]
 598:notoriOS.c    ****         if(network_time != 0){
 1688              		.loc 1 598 0
 1689 0026 7B68     		ldr	r3, [r7, #4]
 1690 0028 002B     		cmp	r3, #0
 1691 002a 02D0     		beq	.L62
 599:notoriOS.c    ****             setTime(network_time);
 1692              		.loc 1 599 0
 1693 002c 7868     		ldr	r0, [r7, #4]
 1694 002e FFF7FEFF 		bl	setTime
 1695              	.L62:
 600:notoriOS.c    ****         }
 601:notoriOS.c    ****         
 602:notoriOS.c    ****         // Get GPS coordinates
 603:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 604:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 605:notoriOS.c    ****         modem_power_down();
 1696              		.loc 1 605 0
 1697 0032 FFF7FEFF 		bl	modem_power_down
 606:notoriOS.c    ****         return 0u;
 1698              		.loc 1 606 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 43


 1699 0036 0023     		movs	r3, #0
 1700 0038 00E0     		b	.L63
 1701              	.L61:
 1702              	.LBE8:
 607:notoriOS.c    ****         
 608:notoriOS.c    ****     }
 609:notoriOS.c    ****     
 610:notoriOS.c    ****     return 1u;
 1703              		.loc 1 610 0
 1704 003a 0123     		movs	r3, #1
 1705              	.L63:
 611:notoriOS.c    **** }
 1706              		.loc 1 611 0
 1707 003c 1846     		mov	r0, r3
 1708 003e 0837     		adds	r7, r7, #8
 1709              		.cfi_def_cfa_offset 8
 1710 0040 BD46     		mov	sp, r7
 1711              		.cfi_def_cfa_register 13
 1712              		@ sp needed
 1713 0042 80BD     		pop	{r7, pc}
 1714              		.cfi_endproc
 1715              	.LFE75:
 1716              		.size	configureRemoteParams, .-configureRemoteParams
 1717              		.section	.rodata
 1718 026f 00       		.align	2
 1719              	.LC35:
 1720 0270 256C6400 		.ascii	"%ld\000"
 1721              		.align	2
 1722              	.LC36:
 1723 0274 43757272 		.ascii	"Current_Node_Type\000"
 1723      656E745F 
 1723      4E6F6465 
 1723      5F547970 
 1723      6500
 1724 0286 0000     		.align	2
 1725              	.LC37:
 1726 0288 6D617862 		.ascii	"maxbotix_depth=%s\000"
 1726      6F746978 
 1726      5F646570 
 1726      74683D25 
 1726      7300
 1727 029a 0000     		.align	2
 1728              	.LC38:
 1729 029c 6D617862 		.ascii	"maxbotix_depth\000"
 1729      6F746978 
 1729      5F646570 
 1729      746800
 1730 02ab 00       		.align	2
 1731              	.LC39:
 1732 02ac 612B00   		.ascii	"a+\000"
 1733 02af 00       		.align	2
 1734              	.LC40:
 1735 02b0 206D6178 		.ascii	" maxbotix_depth: \000"
 1735      626F7469 
 1735      785F6465 
 1735      7074683A 
 1735      2000
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 44


 1736 02c2 0000     		.align	2
 1737              	.LC41:
 1738 02c4 2000     		.ascii	" \000"
 1739 02c6 0000     		.align	2
 1740              	.LC42:
 1741 02c8 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 1741      64206E6F 
 1741      74206765 
 1741      74207661 
 1741      6C696420 
 1742              		.global	__aeabi_f2d
 1743              		.align	2
 1744              	.LC43:
 1745 02f4 252E3266 		.ascii	"%.2f\000"
 1745      00
 1746 02f9 000000   		.align	2
 1747              	.LC44:
 1748 02fc 765F6261 		.ascii	"v_bat=%s\000"
 1748      743D2573 
 1748      00
 1749 0305 000000   		.align	2
 1750              	.LC45:
 1751 0308 765F6261 		.ascii	"v_bat\000"
 1751      7400
 1752 030e 0000     		.align	2
 1753              	.LC46:
 1754 0310 20766261 		.ascii	" vbat: \000"
 1754      743A2000 
 1755              		.align	2
 1756              	.LC47:
 1757 0318 70726573 		.ascii	"pressure_current=%s\000"
 1757      73757265 
 1757      5F637572 
 1757      72656E74 
 1757      3D257300 
 1758              		.align	2
 1759              	.LC48:
 1760 032c 70726573 		.ascii	"pressure_current\000"
 1760      73757265 
 1760      5F637572 
 1760      72656E74 
 1760      00
 1761 033d 000000   		.align	2
 1762              	.LC49:
 1763 0340 20707265 		.ascii	" pressure_current: \000"
 1763      73737572 
 1763      655F6375 
 1763      7272656E 
 1763      743A2000 
 1764              		.align	2
 1765              	.LC50:
 1766 0354 70726573 		.ascii	"pressure_depth=%s\000"
 1766      73757265 
 1766      5F646570 
 1766      74683D25 
 1766      7300
 1767 0366 0000     		.align	2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 45


 1768              	.LC51:
 1769 0368 70726573 		.ascii	"pressure_depth\000"
 1769      73757265 
 1769      5F646570 
 1769      746800
 1770 0377 00       		.align	2
 1771              	.LC52:
 1772 0378 20707265 		.ascii	" pressure_depth: \000"
 1772      73737572 
 1772      655F6465 
 1772      7074683A 
 1772      2000
 1773 038a 0000     		.align	2
 1774              	.LC53:
 1775 038c 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1775      64206E6F 
 1775      74206765 
 1775      74207661 
 1775      6C696420 
 1776              		.section	.text.makeMeasurements,"ax",%progbits
 1777              		.align	2
 1778              		.global	makeMeasurements
 1779              		.thumb
 1780              		.thumb_func
 1781              		.type	makeMeasurements, %function
 1782              	makeMeasurements:
 1783              	.LFB76:
 612:notoriOS.c    **** 
 613:notoriOS.c    **** 
 614:notoriOS.c    **** // ==============================================
 615:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 616:notoriOS.c    **** // Returns 0 when finished
 617:notoriOS.c    **** // ==============================================
 618:notoriOS.c    **** uint8 makeMeasurements(){
 1784              		.loc 1 618 0
 1785              		.cfi_startproc
 1786              		@ args = 0, pretend = 0, frame = 128
 1787              		@ frame_needed = 1, uses_anonymous_args = 0
 1788 0000 90B5     		push	{r4, r7, lr}
 1789              		.cfi_def_cfa_offset 12
 1790              		.cfi_offset 4, -12
 1791              		.cfi_offset 7, -8
 1792              		.cfi_offset 14, -4
 1793 0002 A3B0     		sub	sp, sp, #140
 1794              		.cfi_def_cfa_offset 152
 1795 0004 02AF     		add	r7, sp, #8
 1796              		.cfi_def_cfa 7, 144
 619:notoriOS.c    ****     
 620:notoriOS.c    ****     // Get clock time and save to timeStamp
 621:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1797              		.loc 1 621 0
 1798 0006 FFF7FEFF 		bl	getTimeStamp
 1799 000a F867     		str	r0, [r7, #124]
 622:notoriOS.c    ****     char c_timeStamp[32];
 623:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1800              		.loc 1 623 0
 1801 000c 07F15C00 		add	r0, r7, #92
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 46


 1802 0010 FB6F     		ldr	r3, [r7, #124]
 1803 0012 8E4A     		ldr	r2, .L73
 1804 0014 2021     		movs	r1, #32
 1805 0016 FFF7FEFF 		bl	snprintf
 624:notoriOS.c    ****     
 625:notoriOS.c    ****     // Holds string for value that will be written 
 626:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 627:notoriOS.c    ****     
 628:notoriOS.c    ****     // who i am determines what I'm going to do 
 629:notoriOS.c    ****     // this is primarily for interpretability on grafana dashboards when developing custom nodes
 630:notoriOS.c    ****     char c_node_type[5];
 631:notoriOS.c    ****     itoa(updatable_parameters.node_type,c_node_type,10);
 1806              		.loc 1 631 0
 1807 001a 8D4B     		ldr	r3, .L73+4
 1808 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1809 001e 1846     		mov	r0, r3
 1810 0020 07F14003 		add	r3, r7, #64
 1811 0024 0A22     		movs	r2, #10
 1812 0026 1946     		mov	r1, r3
 1813 0028 FFF7FEFF 		bl	itoa
 632:notoriOS.c    ****     pushData("Current_Node_Type",c_node_type ,getTimeStamp());
 1814              		.loc 1 632 0
 1815 002c FFF7FEFF 		bl	getTimeStamp
 1816 0030 0246     		mov	r2, r0
 1817 0032 07F14003 		add	r3, r7, #64
 1818 0036 1946     		mov	r1, r3
 1819 0038 8648     		ldr	r0, .L73+8
 1820 003a FFF7FEFF 		bl	pushData
 633:notoriOS.c    ****     
 634:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 635:notoriOS.c    ****     
 636:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 1821              		.loc 1 636 0
 1822 003e 844B     		ldr	r3, .L73+4
 1823 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1824 0042 002B     		cmp	r3, #0
 1825 0044 3BD1     		bne	.L65
 1826              	.LBB9:
 637:notoriOS.c    ****         
 638:notoriOS.c    ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
 639:notoriOS.c    ****         level_sensor_t m_level_sensor;
 640:notoriOS.c    ****         
 641:notoriOS.c    ****         // Take level sensor readings and save them to m_level_sensor
 642:notoriOS.c    ****         m_level_sensor = level_sensor_take_reading();
 1827              		.loc 1 642 0
 1828 0046 07F11003 		add	r3, r7, #16
 1829 004a 1846     		mov	r0, r3
 1830 004c FFF7FEFF 		bl	level_sensor_take_reading
 643:notoriOS.c    ****     
 644:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 645:notoriOS.c    ****         if(m_level_sensor.num_valid_readings > 0){
 1831              		.loc 1 645 0
 1832 0050 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1833 0054 002B     		cmp	r3, #0
 1834 0056 2ED0     		beq	.L66
 646:notoriOS.c    ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 1835              		.loc 1 646 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 47


 1836 0058 B7F92630 		ldrsh	r3, [r7, #38]
 1837 005c 07F14800 		add	r0, r7, #72
 1838 0060 7D4A     		ldr	r2, .L73+12
 1839 0062 1421     		movs	r1, #20
 1840 0064 FFF7FEFF 		bl	snprintf
 647:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 1841              		.loc 1 647 0
 1842 0068 07F14803 		add	r3, r7, #72
 1843 006c 1A46     		mov	r2, r3
 1844 006e 7B49     		ldr	r1, .L73+16
 1845 0070 0020     		movs	r0, #0
 1846 0072 FFF7FEFF 		bl	printNotif
 648:notoriOS.c    ****             pushData("maxbotix_depth",value,timeStamp);
 1847              		.loc 1 648 0
 1848 0076 07F14803 		add	r3, r7, #72
 1849 007a FA6F     		ldr	r2, [r7, #124]
 1850 007c 1946     		mov	r1, r3
 1851 007e 7848     		ldr	r0, .L73+20
 1852 0080 FFF7FEFF 		bl	pushData
 649:notoriOS.c    ****             
 650:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 651:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1853              		.loc 1 651 0
 1854 0084 07F15C03 		add	r3, r7, #92
 1855 0088 1A46     		mov	r2, r3
 1856 008a 7649     		ldr	r1, .L73+24
 1857 008c 7648     		ldr	r0, .L73+28
 1858 008e FFF7FEFF 		bl	SD_write
 652:notoriOS.c    ****             SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 1859              		.loc 1 652 0
 1860 0092 764A     		ldr	r2, .L73+32
 1861 0094 7349     		ldr	r1, .L73+24
 1862 0096 7448     		ldr	r0, .L73+28
 1863 0098 FFF7FEFF 		bl	SD_write
 653:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1864              		.loc 1 653 0
 1865 009c 07F14803 		add	r3, r7, #72
 1866 00a0 1A46     		mov	r2, r3
 1867 00a2 7049     		ldr	r1, .L73+24
 1868 00a4 7048     		ldr	r0, .L73+28
 1869 00a6 FFF7FEFF 		bl	SD_write
 654:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1870              		.loc 1 654 0
 1871 00aa 714A     		ldr	r2, .L73+36
 1872 00ac 6D49     		ldr	r1, .L73+24
 1873 00ae 6E48     		ldr	r0, .L73+28
 1874 00b0 FFF7FEFF 		bl	SD_write
 1875 00b4 03E0     		b	.L65
 1876              	.L66:
 655:notoriOS.c    ****         }else{
 656:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 1877              		.loc 1 656 0
 1878 00b6 6F49     		ldr	r1, .L73+40
 1879 00b8 0220     		movs	r0, #2
 1880 00ba FFF7FEFF 		bl	printNotif
 1881              	.L65:
 1882              	.LBE9:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 48


 657:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 658:notoriOS.c    ****         }
 659:notoriOS.c    ****     }
 660:notoriOS.c    ****     
 661:notoriOS.c    ****     
 662:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 663:notoriOS.c    ****     voltage_t m_voltage;
 664:notoriOS.c    ****     
 665:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 666:notoriOS.c    ****     m_voltage = voltage_take_readings();
 1883              		.loc 1 666 0
 1884 00be 07F12C03 		add	r3, r7, #44
 1885 00c2 1846     		mov	r0, r3
 1886 00c4 FFF7FEFF 		bl	voltage_take_readings
 667:notoriOS.c    ****     
 668:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 669:notoriOS.c    ****     if(m_voltage.valid){
 1887              		.loc 1 669 0
 1888 00c8 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 1889 00cc 002B     		cmp	r3, #0
 1890 00ce 00F0B380 		beq	.L68
 670:notoriOS.c    ****         // battery voltage data
 671:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 1891              		.loc 1 671 0
 1892 00d2 FB6A     		ldr	r3, [r7, #44]	@ float
 1893 00d4 1846     		mov	r0, r3
 1894 00d6 FFF7FEFF 		bl	__aeabi_f2d
 1895 00da 0346     		mov	r3, r0
 1896 00dc 0C46     		mov	r4, r1
 1897 00de 07F14800 		add	r0, r7, #72
 1898 00e2 CDE90034 		strd	r3, [sp]
 1899 00e6 644A     		ldr	r2, .L73+44
 1900 00e8 1421     		movs	r1, #20
 1901 00ea FFF7FEFF 		bl	snprintf
 672:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 1902              		.loc 1 672 0
 1903 00ee 07F14803 		add	r3, r7, #72
 1904 00f2 1A46     		mov	r2, r3
 1905 00f4 6149     		ldr	r1, .L73+48
 1906 00f6 0020     		movs	r0, #0
 1907 00f8 FFF7FEFF 		bl	printNotif
 673:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
 1908              		.loc 1 673 0
 1909 00fc 07F14803 		add	r3, r7, #72
 1910 0100 FA6F     		ldr	r2, [r7, #124]
 1911 0102 1946     		mov	r1, r3
 1912 0104 5E48     		ldr	r0, .L73+52
 1913 0106 FFF7FEFF 		bl	pushData
 674:notoriOS.c    ****         
 675:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 676:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 1914              		.loc 1 676 0
 1915 010a 594A     		ldr	r2, .L73+36
 1916 010c 5549     		ldr	r1, .L73+24
 1917 010e 5648     		ldr	r0, .L73+28
 1918 0110 FFF7FEFF 		bl	SD_write
 677:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 49


 1919              		.loc 1 677 0
 1920 0114 07F15C03 		add	r3, r7, #92
 1921 0118 1A46     		mov	r2, r3
 1922 011a 5249     		ldr	r1, .L73+24
 1923 011c 5248     		ldr	r0, .L73+28
 1924 011e FFF7FEFF 		bl	SD_write
 678:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 1925              		.loc 1 678 0
 1926 0122 584A     		ldr	r2, .L73+56
 1927 0124 4F49     		ldr	r1, .L73+24
 1928 0126 5048     		ldr	r0, .L73+28
 1929 0128 FFF7FEFF 		bl	SD_write
 679:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1930              		.loc 1 679 0
 1931 012c 07F14803 		add	r3, r7, #72
 1932 0130 1A46     		mov	r2, r3
 1933 0132 4C49     		ldr	r1, .L73+24
 1934 0134 4C48     		ldr	r0, .L73+28
 1935 0136 FFF7FEFF 		bl	SD_write
 680:notoriOS.c    ****         
 681:notoriOS.c    ****         // If node type is green infrastructure or custom node, take pressure transducer measuremen
 682:notoriOS.c    ****          
 683:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE || updatable_parameters.
 1936              		.loc 1 683 0
 1937 013a 454B     		ldr	r3, .L73+4
 1938 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1939 013e 012B     		cmp	r3, #1
 1940 0140 03D0     		beq	.L69
 1941              		.loc 1 683 0 is_stmt 0 discriminator 1
 1942 0142 434B     		ldr	r3, .L73+4
 1943 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1944 0146 042B     		cmp	r3, #4
 1945 0148 7AD1     		bne	.L71
 1946              	.L69:
 1947              	.LBB10:
 684:notoriOS.c    ****             
 685:notoriOS.c    ****             // pressure transducer voltage (V) data
 686:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 687:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 688:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 689:notoriOS.c    ****             
 690:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 691:notoriOS.c    ****             pressure_t m_pressure;
 692:notoriOS.c    ****             
 693:notoriOS.c    ****             // Make pressure transducer calculators for current and depth
 694:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 1948              		.loc 1 694 0 is_stmt 1
 1949 014a 3C46     		mov	r4, r7
 1950 014c 6A46     		mov	r2, sp
 1951 014e 07F13803 		add	r3, r7, #56
 1952 0152 93E80300 		ldmia	r3, {r0, r1}
 1953 0156 82E80300 		stmia	r2, {r0, r1}
 1954 015a 07F12C03 		add	r3, r7, #44
 1955 015e 0ECB     		ldmia	r3, {r1, r2, r3}
 1956 0160 2046     		mov	r0, r4
 1957 0162 FFF7FEFF 		bl	pressure_calculations
 695:notoriOS.c    ****             
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 50


 696:notoriOS.c    ****             // pressure transducer current (mA) data
 697:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 1958              		.loc 1 697 0
 1959 0166 BB68     		ldr	r3, [r7, #8]	@ float
 1960 0168 1846     		mov	r0, r3
 1961 016a FFF7FEFF 		bl	__aeabi_f2d
 1962 016e 0346     		mov	r3, r0
 1963 0170 0C46     		mov	r4, r1
 1964 0172 07F14800 		add	r0, r7, #72
 1965 0176 CDE90034 		strd	r3, [sp]
 1966 017a 3F4A     		ldr	r2, .L73+44
 1967 017c 1421     		movs	r1, #20
 1968 017e FFF7FEFF 		bl	snprintf
 698:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 1969              		.loc 1 698 0
 1970 0182 07F14803 		add	r3, r7, #72
 1971 0186 1A46     		mov	r2, r3
 1972 0188 3F49     		ldr	r1, .L73+60
 1973 018a 0020     		movs	r0, #0
 1974 018c FFF7FEFF 		bl	printNotif
 699:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 1975              		.loc 1 699 0
 1976 0190 07F14803 		add	r3, r7, #72
 1977 0194 FA6F     		ldr	r2, [r7, #124]
 1978 0196 1946     		mov	r1, r3
 1979 0198 3C48     		ldr	r0, .L73+64
 1980 019a FFF7FEFF 		bl	pushData
 700:notoriOS.c    ****             
 701:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 702:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1981              		.loc 1 702 0
 1982 019e 344A     		ldr	r2, .L73+36
 1983 01a0 3049     		ldr	r1, .L73+24
 1984 01a2 3148     		ldr	r0, .L73+28
 1985 01a4 FFF7FEFF 		bl	SD_write
 703:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1986              		.loc 1 703 0
 1987 01a8 07F15C03 		add	r3, r7, #92
 1988 01ac 1A46     		mov	r2, r3
 1989 01ae 2D49     		ldr	r1, .L73+24
 1990 01b0 2D48     		ldr	r0, .L73+28
 1991 01b2 FFF7FEFF 		bl	SD_write
 704:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 1992              		.loc 1 704 0
 1993 01b6 364A     		ldr	r2, .L73+68
 1994 01b8 2A49     		ldr	r1, .L73+24
 1995 01ba 2B48     		ldr	r0, .L73+28
 1996 01bc FFF7FEFF 		bl	SD_write
 705:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1997              		.loc 1 705 0
 1998 01c0 07F14803 		add	r3, r7, #72
 1999 01c4 1A46     		mov	r2, r3
 2000 01c6 2749     		ldr	r1, .L73+24
 2001 01c8 2748     		ldr	r0, .L73+28
 2002 01ca FFF7FEFF 		bl	SD_write
 706:notoriOS.c    ****             
 707:notoriOS.c    ****             // pressure transducer depth (ft) data
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 51


 708:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 2003              		.loc 1 708 0
 2004 01ce FB68     		ldr	r3, [r7, #12]	@ float
 2005 01d0 1846     		mov	r0, r3
 2006 01d2 FFF7FEFF 		bl	__aeabi_f2d
 2007 01d6 0346     		mov	r3, r0
 2008 01d8 0C46     		mov	r4, r1
 2009 01da 07F14800 		add	r0, r7, #72
 2010 01de CDE90034 		strd	r3, [sp]
 2011 01e2 254A     		ldr	r2, .L73+44
 2012 01e4 1421     		movs	r1, #20
 2013 01e6 FFF7FEFF 		bl	snprintf
 709:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 2014              		.loc 1 709 0
 2015 01ea 07F14803 		add	r3, r7, #72
 2016 01ee 1A46     		mov	r2, r3
 2017 01f0 2849     		ldr	r1, .L73+72
 2018 01f2 0020     		movs	r0, #0
 2019 01f4 FFF7FEFF 		bl	printNotif
 710:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 2020              		.loc 1 710 0
 2021 01f8 07F14803 		add	r3, r7, #72
 2022 01fc FA6F     		ldr	r2, [r7, #124]
 2023 01fe 1946     		mov	r1, r3
 2024 0200 2548     		ldr	r0, .L73+76
 2025 0202 FFF7FEFF 		bl	pushData
 711:notoriOS.c    ****             
 712:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 713:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 2026              		.loc 1 713 0
 2027 0206 1A4A     		ldr	r2, .L73+36
 2028 0208 1649     		ldr	r1, .L73+24
 2029 020a 1748     		ldr	r0, .L73+28
 2030 020c FFF7FEFF 		bl	SD_write
 714:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 2031              		.loc 1 714 0
 2032 0210 07F15C03 		add	r3, r7, #92
 2033 0214 1A46     		mov	r2, r3
 2034 0216 1349     		ldr	r1, .L73+24
 2035 0218 1348     		ldr	r0, .L73+28
 2036 021a FFF7FEFF 		bl	SD_write
 715:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
 2037              		.loc 1 715 0
 2038 021e 1F4A     		ldr	r2, .L73+80
 2039 0220 1049     		ldr	r1, .L73+24
 2040 0222 1148     		ldr	r0, .L73+28
 2041 0224 FFF7FEFF 		bl	SD_write
 716:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 2042              		.loc 1 716 0
 2043 0228 07F14803 		add	r3, r7, #72
 2044 022c 1A46     		mov	r2, r3
 2045 022e 0D49     		ldr	r1, .L73+24
 2046 0230 0D48     		ldr	r0, .L73+28
 2047 0232 FFF7FEFF 		bl	SD_write
 2048 0236 03E0     		b	.L71
 2049              	.L68:
 2050              	.LBE10:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 52


 717:notoriOS.c    ****         }    
 718:notoriOS.c    ****     }else{
 719:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 2051              		.loc 1 719 0
 2052 0238 1949     		ldr	r1, .L73+84
 2053 023a 0220     		movs	r0, #2
 2054 023c FFF7FEFF 		bl	printNotif
 2055              	.L71:
 720:notoriOS.c    ****         
 721:notoriOS.c    ****     }
 722:notoriOS.c    ****         
 723:notoriOS.c    ****     
 724:notoriOS.c    ****     return 0u;
 2056              		.loc 1 724 0
 2057 0240 0023     		movs	r3, #0
 725:notoriOS.c    **** }
 2058              		.loc 1 725 0
 2059 0242 1846     		mov	r0, r3
 2060 0244 8437     		adds	r7, r7, #132
 2061              		.cfi_def_cfa_offset 12
 2062 0246 BD46     		mov	sp, r7
 2063              		.cfi_def_cfa_register 13
 2064              		@ sp needed
 2065 0248 90BD     		pop	{r4, r7, pc}
 2066              	.L74:
 2067 024a 00BF     		.align	2
 2068              	.L73:
 2069 024c 70020000 		.word	.LC35
 2070 0250 00000000 		.word	updatable_parameters
 2071 0254 74020000 		.word	.LC36
 2072 0258 C4000000 		.word	.LC6
 2073 025c 88020000 		.word	.LC37
 2074 0260 9C020000 		.word	.LC38
 2075 0264 AC020000 		.word	.LC39
 2076 0268 00000000 		.word	Data_fileName
 2077 026c B0020000 		.word	.LC40
 2078 0270 C4020000 		.word	.LC41
 2079 0274 C8020000 		.word	.LC42
 2080 0278 F4020000 		.word	.LC43
 2081 027c FC020000 		.word	.LC44
 2082 0280 08030000 		.word	.LC45
 2083 0284 10030000 		.word	.LC46
 2084 0288 18030000 		.word	.LC47
 2085 028c 2C030000 		.word	.LC48
 2086 0290 40030000 		.word	.LC49
 2087 0294 54030000 		.word	.LC50
 2088 0298 68030000 		.word	.LC51
 2089 029c 78030000 		.word	.LC52
 2090 02a0 8C030000 		.word	.LC53
 2091              		.cfi_endproc
 2092              	.LFE76:
 2093              		.size	makeMeasurements, .-makeMeasurements
 2094              		.section	.rodata
 2095 03b3 00       		.align	2
 2096              	.LC54:
 2097 03b4 4572726F 		.ascii	"Error setting system time.\000"
 2097      72207365 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 53


 2097      7474696E 
 2097      67207379 
 2097      7374656D 
 2098              		.section	.text.setTime,"ax",%progbits
 2099              		.align	2
 2100              		.global	setTime
 2101              		.thumb
 2102              		.thumb_func
 2103              		.type	setTime, %function
 2104              	setTime:
 2105              	.LFB77:
 726:notoriOS.c    **** 
 727:notoriOS.c    **** // ==============================================
 728:notoriOS.c    **** // Set the system time
 729:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 730:notoriOS.c    **** // ==============================================
 731:notoriOS.c    **** uint8 setTime(long timeStamp){
 2106              		.loc 1 731 0
 2107              		.cfi_startproc
 2108              		@ args = 0, pretend = 0, frame = 24
 2109              		@ frame_needed = 1, uses_anonymous_args = 0
 2110 0000 80B5     		push	{r7, lr}
 2111              		.cfi_def_cfa_offset 8
 2112              		.cfi_offset 7, -8
 2113              		.cfi_offset 14, -4
 2114 0002 86B0     		sub	sp, sp, #24
 2115              		.cfi_def_cfa_offset 32
 2116 0004 00AF     		add	r7, sp, #0
 2117              		.cfi_def_cfa_register 7
 2118 0006 7860     		str	r0, [r7, #4]
 732:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 733:notoriOS.c    ****     if(timeStamp <=0){
 2119              		.loc 1 733 0
 2120 0008 7B68     		ldr	r3, [r7, #4]
 2121 000a 002B     		cmp	r3, #0
 2122 000c 05DC     		bgt	.L76
 734:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 2123              		.loc 1 734 0
 2124 000e 1849     		ldr	r1, .L78
 2125 0010 0220     		movs	r0, #2
 2126 0012 FFF7FEFF 		bl	printNotif
 735:notoriOS.c    ****         return 0;  
 2127              		.loc 1 735 0
 2128 0016 0023     		movs	r3, #0
 2129 0018 25E0     		b	.L77
 2130              	.L76:
 736:notoriOS.c    ****     }
 737:notoriOS.c    ****     // Create a new pointer t of data structure tm
 738:notoriOS.c    ****     struct tm * t;
 739:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 740:notoriOS.c    ****     t = gmtime(&timeStamp);
 2131              		.loc 1 740 0
 2132 001a 3B1D     		adds	r3, r7, #4
 2133 001c 1846     		mov	r0, r3
 2134 001e FFF7FEFF 		bl	gmtime
 2135 0022 7861     		str	r0, [r7, #20]
 741:notoriOS.c    ****     
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 54


 742:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 743:notoriOS.c    ****     RTC_TIME_DATE localTime;
 744:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 2136              		.loc 1 744 0
 2137 0024 7B69     		ldr	r3, [r7, #20]
 2138 0026 1B68     		ldr	r3, [r3]
 2139 0028 DBB2     		uxtb	r3, r3
 2140 002a 3B72     		strb	r3, [r7, #8]
 745:notoriOS.c    ****     localTime.Min = t->tm_min;
 2141              		.loc 1 745 0
 2142 002c 7B69     		ldr	r3, [r7, #20]
 2143 002e 5B68     		ldr	r3, [r3, #4]
 2144 0030 DBB2     		uxtb	r3, r3
 2145 0032 7B72     		strb	r3, [r7, #9]
 746:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 2146              		.loc 1 746 0
 2147 0034 7B69     		ldr	r3, [r7, #20]
 2148 0036 9B68     		ldr	r3, [r3, #8]
 2149 0038 DBB2     		uxtb	r3, r3
 2150 003a BB72     		strb	r3, [r7, #10]
 747:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 2151              		.loc 1 747 0
 2152 003c 7B69     		ldr	r3, [r7, #20]
 2153 003e 5B69     		ldr	r3, [r3, #20]
 2154 0040 9BB2     		uxth	r3, r3
 2155 0042 03F26C73 		addw	r3, r3, #1900
 2156 0046 9BB2     		uxth	r3, r3
 2157 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 748:notoriOS.c    ****     localTime.Month = t->tm_mon;
 2158              		.loc 1 748 0
 2159 004a 7B69     		ldr	r3, [r7, #20]
 2160 004c 1B69     		ldr	r3, [r3, #16]
 2161 004e DBB2     		uxtb	r3, r3
 2162 0050 3B74     		strb	r3, [r7, #16]
 749:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 2163              		.loc 1 749 0
 2164 0052 7B69     		ldr	r3, [r7, #20]
 2165 0054 DB68     		ldr	r3, [r3, #12]
 2166 0056 DBB2     		uxtb	r3, r3
 2167 0058 3B73     		strb	r3, [r7, #12]
 750:notoriOS.c    **** 
 751:notoriOS.c    ****     // Writes time and date values as current time and date.
 752:notoriOS.c    ****     RTC_WriteTime(&localTime);
 2168              		.loc 1 752 0
 2169 005a 07F10803 		add	r3, r7, #8
 2170 005e 1846     		mov	r0, r3
 2171 0060 FFF7FEFF 		bl	RTC_WriteTime
 753:notoriOS.c    ****     
 754:notoriOS.c    ****     // Return 1 when the system time was set properly.
 755:notoriOS.c    ****     return 1;
 2172              		.loc 1 755 0
 2173 0064 0123     		movs	r3, #1
 2174              	.L77:
 756:notoriOS.c    **** }
 2175              		.loc 1 756 0
 2176 0066 1846     		mov	r0, r3
 2177 0068 1837     		adds	r7, r7, #24
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 55


 2178              		.cfi_def_cfa_offset 8
 2179 006a BD46     		mov	sp, r7
 2180              		.cfi_def_cfa_register 13
 2181              		@ sp needed
 2182 006c 80BD     		pop	{r7, pc}
 2183              	.L79:
 2184 006e 00BF     		.align	2
 2185              	.L78:
 2186 0070 B4030000 		.word	.LC54
 2187              		.cfi_endproc
 2188              	.LFE77:
 2189              		.size	setTime, .-setTime
 2190              		.section	.rodata
 2191 03cf 00       		.align	2
 2192              	.LC55:
 2193 03d0 75706772 		.ascii	"upgrade.hex\000"
 2193      6164652E 
 2193      68657800 
 2194              		.section	.text.upgraded,"ax",%progbits
 2195              		.align	2
 2196              		.global	upgraded
 2197              		.thumb
 2198              		.thumb_func
 2199              		.type	upgraded, %function
 2200              	upgraded:
 2201              	.LFB78:
 757:notoriOS.c    **** 
 758:notoriOS.c    **** //downloads and stores files on SD card
 759:notoriOS.c    **** 
 760:notoriOS.c    **** 
 761:notoriOS.c    **** 
 762:notoriOS.c    **** // ==============================================
 763:notoriOS.c    **** // Will they love it, will they hate it
 764:notoriOS.c    **** // Never fade it, I evade it
 765:notoriOS.c    **** // Cause I never really want to complicate it
 766:notoriOS.c    **** //      - Logic, Upgraded (2015)
 767:notoriOS.c    **** //
 768:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 769:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 770:notoriOS.c    **** // ==============================================
 771:notoriOS.c    **** 
 772:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 2202              		.loc 1 772 0
 2203              		.cfi_startproc
 2204              		@ args = 0, pretend = 0, frame = 232
 2205              		@ frame_needed = 1, uses_anonymous_args = 0
 2206 0000 80B5     		push	{r7, lr}
 2207              		.cfi_def_cfa_offset 8
 2208              		.cfi_offset 7, -8
 2209              		.cfi_offset 14, -4
 2210 0002 C0B0     		sub	sp, sp, #256
 2211              		.cfi_def_cfa_offset 264
 2212 0004 06AF     		add	r7, sp, #24
 2213              		.cfi_def_cfa 7, 240
 2214 0006 F860     		str	r0, [r7, #12]
 2215 0008 B960     		str	r1, [r7, #8]
 2216 000a 7A60     		str	r2, [r7, #4]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 56


 773:notoriOS.c    ****     
 774:notoriOS.c    ****     uint8 upgrade_status = 0;
 2217              		.loc 1 774 0
 2218 000c 0023     		movs	r3, #0
 2219 000e 87F8E730 		strb	r3, [r7, #231]
 775:notoriOS.c    ****     
 776:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 777:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 2220              		.loc 1 777 0
 2221 0012 384B     		ldr	r3, .L84
 2222 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2223 0016 042B     		cmp	r3, #4
 2224 0018 02D0     		beq	.L81
 778:notoriOS.c    ****         return upgrade_status;//where valid = 0
 2225              		.loc 1 778 0
 2226 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2227 001e 65E0     		b	.L83
 2228              	.L81:
 779:notoriOS.c    ****     }
 780:notoriOS.c    ****     
 781:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 2229              		.loc 1 781 0
 2230 0020 354A     		ldr	r2, .L84+4
 2231 0022 07F1D803 		add	r3, r7, #216
 2232 0026 07CA     		ldmia	r2, {r0, r1, r2}
 2233 0028 83E80700 		stmia	r3, {r0, r1, r2}
 782:notoriOS.c    ****     //delete file, if one exisits already
 783:notoriOS.c    ****     SD_rmfile(fileName);
 2234              		.loc 1 783 0
 2235 002c 07F1D803 		add	r3, r7, #216
 2236 0030 1846     		mov	r0, r3
 2237 0032 FFF7FEFF 		bl	SD_rmfile
 784:notoriOS.c    ****     
 785:notoriOS.c    ****     // Create http request
 786:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 2238              		.loc 1 786 0
 2239 0036 314B     		ldr	r3, .L84+8
 2240 0038 0593     		str	r3, [sp, #20]
 2241 003a 0023     		movs	r3, #0
 2242 003c 0493     		str	r3, [sp, #16]
 2243 003e 304B     		ldr	r3, .L84+12
 2244 0040 0393     		str	r3, [sp, #12]
 2245 0042 304B     		ldr	r3, .L84+16
 2246 0044 0293     		str	r3, [sp, #8]
 2247 0046 304B     		ldr	r3, .L84+20
 2248 0048 0193     		str	r3, [sp, #4]
 2249 004a BB68     		ldr	r3, [r7, #8]
 2250 004c 0093     		str	r3, [sp]
 2251 004e 7B68     		ldr	r3, [r7, #4]
 2252 0050 FA68     		ldr	r2, [r7, #12]
 2253 0052 2E49     		ldr	r1, .L84+24
 2254 0054 2E48     		ldr	r0, .L84+28
 2255 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 787:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 2256              		.loc 1 787 0
 2257 005a 2D4A     		ldr	r2, .L84+28
 2258 005c 2D49     		ldr	r1, .L84+32
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 57


 2259 005e 0020     		movs	r0, #0
 2260 0060 FFF7FEFF 		bl	printNotif
 788:notoriOS.c    ****     // Create array portConfig of size 200 characters
 789:notoriOS.c    ****     char portConfig[200];
 790:notoriOS.c    ****     // Print port configurations
 791:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 2261              		.loc 1 791 0
 2262 0064 07F11000 		add	r0, r7, #16
 2263 0068 FB68     		ldr	r3, [r7, #12]
 2264 006a 0093     		str	r3, [sp]
 2265 006c BB68     		ldr	r3, [r7, #8]
 2266 006e 2A4A     		ldr	r2, .L84+36
 2267 0070 C821     		movs	r1, #200
 2268 0072 FFF7FEFF 		bl	snprintf
 792:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 2269              		.loc 1 792 0
 2270 0076 07F11003 		add	r3, r7, #16
 2271 007a 1A46     		mov	r2, r3
 2272 007c 2749     		ldr	r1, .L84+40
 2273 007e 0020     		movs	r0, #0
 2274 0080 FFF7FEFF 		bl	printNotif
 793:notoriOS.c    ****     // AT command to configure the port
 794:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 2275              		.loc 1 794 0
 2276 0084 07F11003 		add	r3, r7, #16
 2277 0088 42F21072 		movw	r2, #10000
 2278 008c 2449     		ldr	r1, .L84+44
 2279 008e 1846     		mov	r0, r3
 2280 0090 FFF7FEFF 		bl	at_write_command
 2281 0094 0346     		mov	r3, r0
 2282 0096 87F8E730 		strb	r3, [r7, #231]
 795:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 796:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 797:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 2283              		.loc 1 797 0
 2284 009a 4FF47A72 		mov	r2, #1000
 2285 009e 2149     		ldr	r1, .L84+48
 2286 00a0 2148     		ldr	r0, .L84+52
 2287 00a2 FFF7FEFF 		bl	at_write_command
 2288 00a6 0346     		mov	r3, r0
 2289 00a8 87F8E730 		strb	r3, [r7, #231]
 798:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 799:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 2290              		.loc 1 799 0
 2291 00ac 1848     		ldr	r0, .L84+28
 2292 00ae FFF7FEFF 		bl	strlen
 2293 00b2 0346     		mov	r3, r0
 2294 00b4 1A46     		mov	r2, r3
 2295 00b6 164B     		ldr	r3, .L84+28
 2296 00b8 1344     		add	r3, r3, r2
 2297 00ba 1C49     		ldr	r1, .L84+56
 2298 00bc 1A46     		mov	r2, r3
 2299 00be 0B46     		mov	r3, r1
 2300 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 2301 00c2 1380     		strh	r3, [r2]	@ unaligned
 800:notoriOS.c    ****     // AT command to send http request
 801:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 58


 2302              		.loc 1 801 0
 2303 00c4 41F28832 		movw	r2, #5000
 2304 00c8 1549     		ldr	r1, .L84+44
 2305 00ca 1148     		ldr	r0, .L84+28
 2306 00cc FFF7FEFF 		bl	at_write_command
 2307 00d0 0346     		mov	r3, r0
 2308 00d2 87F8E730 		strb	r3, [r7, #231]
 802:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 803:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 804:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 2309              		.loc 1 804 0
 2310 00d6 41F28832 		movw	r2, #5000
 2311 00da 1549     		ldr	r1, .L84+60
 2312 00dc 1548     		ldr	r0, .L84+64
 2313 00de FFF7FEFF 		bl	at_write_command
 2314 00e2 0346     		mov	r3, r0
 2315 00e4 87F8E730 		strb	r3, [r7, #231]
 805:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 806:notoriOS.c    ****     
 807:notoriOS.c    ****     
 808:notoriOS.c    ****     return upgrade_status;
 2316              		.loc 1 808 0
 2317 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2318              	.L83:
 809:notoriOS.c    ****     
 810:notoriOS.c    **** }
 2319              		.loc 1 810 0 discriminator 1
 2320 00ec 1846     		mov	r0, r3
 2321 00ee E837     		adds	r7, r7, #232
 2322              		.cfi_def_cfa_offset 8
 2323 00f0 BD46     		mov	sp, r7
 2324              		.cfi_def_cfa_register 13
 2325              		@ sp needed
 2326 00f2 80BD     		pop	{r7, pc}
 2327              	.L85:
 2328              		.align	2
 2329              	.L84:
 2330 00f4 00000000 		.word	modem_state
 2331 00f8 D0030000 		.word	.LC55
 2332 00fc 68010000 		.word	.LC16
 2333 0100 6C010000 		.word	.LC17
 2334 0104 70010000 		.word	.LC18
 2335 0108 78010000 		.word	.LC19
 2336 010c 00000000 		.word	http_body
 2337 0110 00000000 		.word	http_request
 2338 0114 80010000 		.word	.LC20
 2339 0118 98010000 		.word	.LC21
 2340 011c B4010000 		.word	.LC22
 2341 0120 B8010000 		.word	.LC23
 2342 0124 E8010000 		.word	.LC26
 2343 0128 EC010000 		.word	.LC27
 2344 012c FC010000 		.word	.LC28
 2345 0130 18020000 		.word	.LC31
 2346 0134 20020000 		.word	.LC32
 2347              		.cfi_endproc
 2348              	.LFE78:
 2349              		.size	upgraded, .-upgraded
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 59


 2350              		.text
 2351              	.Letext0:
 2352              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2353              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2354              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2355              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 2356              		.file 6 "testing.h"
 2357              		.file 7 "voltages.h"
 2358              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2359              		.file 9 "data.h"
 2360              		.file 10 "modem.h"
 2361              		.file 11 "level_sensor.h"
 2362              		.file 12 "notoriOS.h"
 2363              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 2364              		.file 14 "App_LED.h"
 2365              		.file 15 "downstream_level_sensor.h"
 2366              		.file 16 "valve.h"
 2367              		.file 17 "autosampler.h"
 2368              		.section	.debug_info,"",%progbits
 2369              	.Ldebug_info0:
 2370 0000 070E0000 		.4byte	0xe07
 2371 0004 0400     		.2byte	0x4
 2372 0006 00000000 		.4byte	.Ldebug_abbrev0
 2373 000a 04       		.byte	0x4
 2374 000b 01       		.uleb128 0x1
 2375 000c 91000000 		.4byte	.LASF190
 2376 0010 0C       		.byte	0xc
 2377 0011 58090000 		.4byte	.LASF191
 2378 0015 E7050000 		.4byte	.LASF192
 2379 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2380 001d 00000000 		.4byte	0
 2381 0021 00000000 		.4byte	.Ldebug_line0
 2382 0025 02       		.uleb128 0x2
 2383 0026 01       		.byte	0x1
 2384 0027 06       		.byte	0x6
 2385 0028 45000000 		.4byte	.LASF0
 2386 002c 02       		.uleb128 0x2
 2387 002d 01       		.byte	0x1
 2388 002e 08       		.byte	0x8
 2389 002f B6060000 		.4byte	.LASF1
 2390 0033 02       		.uleb128 0x2
 2391 0034 02       		.byte	0x2
 2392 0035 05       		.byte	0x5
 2393 0036 96040000 		.4byte	.LASF2
 2394 003a 02       		.uleb128 0x2
 2395 003b 02       		.byte	0x2
 2396 003c 07       		.byte	0x7
 2397 003d 91080000 		.4byte	.LASF3
 2398 0041 03       		.uleb128 0x3
 2399 0042 4C080000 		.4byte	.LASF9
 2400 0046 02       		.byte	0x2
 2401 0047 3F       		.byte	0x3f
 2402 0048 4C000000 		.4byte	0x4c
 2403 004c 02       		.uleb128 0x2
 2404 004d 04       		.byte	0x4
 2405 004e 05       		.byte	0x5
 2406 004f 70020000 		.4byte	.LASF4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 60


 2407 0053 02       		.uleb128 0x2
 2408 0054 04       		.byte	0x4
 2409 0055 07       		.byte	0x7
 2410 0056 D3030000 		.4byte	.LASF5
 2411 005a 02       		.uleb128 0x2
 2412 005b 08       		.byte	0x8
 2413 005c 05       		.byte	0x5
 2414 005d A1010000 		.4byte	.LASF6
 2415 0061 02       		.uleb128 0x2
 2416 0062 08       		.byte	0x8
 2417 0063 07       		.byte	0x7
 2418 0064 30010000 		.4byte	.LASF7
 2419 0068 04       		.uleb128 0x4
 2420 0069 04       		.byte	0x4
 2421 006a 05       		.byte	0x5
 2422 006b 696E7400 		.ascii	"int\000"
 2423 006f 02       		.uleb128 0x2
 2424 0070 04       		.byte	0x4
 2425 0071 07       		.byte	0x7
 2426 0072 19080000 		.4byte	.LASF8
 2427 0076 03       		.uleb128 0x3
 2428 0077 AE060000 		.4byte	.LASF10
 2429 007b 03       		.byte	0x3
 2430 007c 2C       		.byte	0x2c
 2431 007d 41000000 		.4byte	0x41
 2432 0081 05       		.uleb128 0x5
 2433 0082 A7020000 		.4byte	.LASF11
 2434 0086 04       		.byte	0x4
 2435 0087 9201     		.2byte	0x192
 2436 0089 2C000000 		.4byte	0x2c
 2437 008d 05       		.uleb128 0x5
 2438 008e 08000000 		.4byte	.LASF12
 2439 0092 04       		.byte	0x4
 2440 0093 9301     		.2byte	0x193
 2441 0095 3A000000 		.4byte	0x3a
 2442 0099 05       		.uleb128 0x5
 2443 009a F8020000 		.4byte	.LASF13
 2444 009e 04       		.byte	0x4
 2445 009f 9401     		.2byte	0x194
 2446 00a1 53000000 		.4byte	0x53
 2447 00a5 05       		.uleb128 0x5
 2448 00a6 59040000 		.4byte	.LASF14
 2449 00aa 04       		.byte	0x4
 2450 00ab 9501     		.2byte	0x195
 2451 00ad 25000000 		.4byte	0x25
 2452 00b1 05       		.uleb128 0x5
 2453 00b2 8A050000 		.4byte	.LASF15
 2454 00b6 04       		.byte	0x4
 2455 00b7 9601     		.2byte	0x196
 2456 00b9 33000000 		.4byte	0x33
 2457 00bd 05       		.uleb128 0x5
 2458 00be D2020000 		.4byte	.LASF16
 2459 00c2 04       		.byte	0x4
 2460 00c3 9701     		.2byte	0x197
 2461 00c5 4C000000 		.4byte	0x4c
 2462 00c9 05       		.uleb128 0x5
 2463 00ca 47050000 		.4byte	.LASF17
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 61


 2464 00ce 04       		.byte	0x4
 2465 00cf 9801     		.2byte	0x198
 2466 00d1 D5000000 		.4byte	0xd5
 2467 00d5 02       		.uleb128 0x2
 2468 00d6 04       		.byte	0x4
 2469 00d7 04       		.byte	0x4
 2470 00d8 4C060000 		.4byte	.LASF18
 2471 00dc 02       		.uleb128 0x2
 2472 00dd 08       		.byte	0x8
 2473 00de 04       		.byte	0x4
 2474 00df 2F0A0000 		.4byte	.LASF19
 2475 00e3 02       		.uleb128 0x2
 2476 00e4 01       		.byte	0x1
 2477 00e5 08       		.byte	0x8
 2478 00e6 14080000 		.4byte	.LASF20
 2479 00ea 02       		.uleb128 0x2
 2480 00eb 08       		.byte	0x8
 2481 00ec 04       		.byte	0x4
 2482 00ed F6070000 		.4byte	.LASF21
 2483 00f1 02       		.uleb128 0x2
 2484 00f2 04       		.byte	0x4
 2485 00f3 07       		.byte	0x7
 2486 00f4 60050000 		.4byte	.LASF22
 2487 00f8 06       		.uleb128 0x6
 2488 00f9 04       		.byte	0x4
 2489 00fa E3000000 		.4byte	0xe3
 2490 00fe 07       		.uleb128 0x7
 2491 00ff E3000000 		.4byte	0xe3
 2492 0103 0E010000 		.4byte	0x10e
 2493 0107 08       		.uleb128 0x8
 2494 0108 F1000000 		.4byte	0xf1
 2495 010c 17       		.byte	0x17
 2496 010d 00       		.byte	0
 2497 010e 09       		.uleb128 0x9
 2498 010f 0C       		.byte	0xc
 2499 0110 05       		.byte	0x5
 2500 0111 30       		.byte	0x30
 2501 0112 77010000 		.4byte	0x177
 2502 0116 0A       		.uleb128 0xa
 2503 0117 53656300 		.ascii	"Sec\000"
 2504 011b 05       		.byte	0x5
 2505 011c 32       		.byte	0x32
 2506 011d 81000000 		.4byte	0x81
 2507 0121 00       		.byte	0
 2508 0122 0A       		.uleb128 0xa
 2509 0123 4D696E00 		.ascii	"Min\000"
 2510 0127 05       		.byte	0x5
 2511 0128 33       		.byte	0x33
 2512 0129 81000000 		.4byte	0x81
 2513 012d 01       		.byte	0x1
 2514 012e 0B       		.uleb128 0xb
 2515 012f 47010000 		.4byte	.LASF23
 2516 0133 05       		.byte	0x5
 2517 0134 34       		.byte	0x34
 2518 0135 81000000 		.4byte	0x81
 2519 0139 02       		.byte	0x2
 2520 013a 0B       		.uleb128 0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 62


 2521 013b 1F070000 		.4byte	.LASF24
 2522 013f 05       		.byte	0x5
 2523 0140 35       		.byte	0x35
 2524 0141 81000000 		.4byte	0x81
 2525 0145 03       		.byte	0x3
 2526 0146 0B       		.uleb128 0xb
 2527 0147 14040000 		.4byte	.LASF25
 2528 014b 05       		.byte	0x5
 2529 014c 36       		.byte	0x36
 2530 014d 81000000 		.4byte	0x81
 2531 0151 04       		.byte	0x4
 2532 0152 0B       		.uleb128 0xb
 2533 0153 E4090000 		.4byte	.LASF26
 2534 0157 05       		.byte	0x5
 2535 0158 37       		.byte	0x37
 2536 0159 8D000000 		.4byte	0x8d
 2537 015d 06       		.byte	0x6
 2538 015e 0B       		.uleb128 0xb
 2539 015f 2A010000 		.4byte	.LASF27
 2540 0163 05       		.byte	0x5
 2541 0164 38       		.byte	0x38
 2542 0165 81000000 		.4byte	0x81
 2543 0169 08       		.byte	0x8
 2544 016a 0B       		.uleb128 0xb
 2545 016b A3060000 		.4byte	.LASF28
 2546 016f 05       		.byte	0x5
 2547 0170 39       		.byte	0x39
 2548 0171 8D000000 		.4byte	0x8d
 2549 0175 0A       		.byte	0xa
 2550 0176 00       		.byte	0
 2551 0177 03       		.uleb128 0x3
 2552 0178 B1050000 		.4byte	.LASF29
 2553 017c 05       		.byte	0x5
 2554 017d 3A       		.byte	0x3a
 2555 017e 82010000 		.4byte	0x182
 2556 0182 0C       		.uleb128 0xc
 2557 0183 0E010000 		.4byte	0x10e
 2558 0187 0D       		.uleb128 0xd
 2559 0188 8101     		.2byte	0x181
 2560 018a 06       		.byte	0x6
 2561 018b 0A       		.byte	0xa
 2562 018c B5010000 		.4byte	0x1b5
 2563 0190 0B       		.uleb128 0xb
 2564 0191 99060000 		.4byte	.LASF30
 2565 0195 06       		.byte	0x6
 2566 0196 0C       		.byte	0xc
 2567 0197 B5010000 		.4byte	0x1b5
 2568 019b 00       		.byte	0
 2569 019c 0B       		.uleb128 0xb
 2570 019d F9080000 		.4byte	.LASF31
 2571 01a1 06       		.byte	0x6
 2572 01a2 0D       		.byte	0xd
 2573 01a3 81000000 		.4byte	0x81
 2574 01a7 80       		.byte	0x80
 2575 01a8 0B       		.uleb128 0xb
 2576 01a9 41070000 		.4byte	.LASF32
 2577 01ad 06       		.byte	0x6
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 63


 2578 01ae 0F       		.byte	0xf
 2579 01af C5010000 		.4byte	0x1c5
 2580 01b3 81       		.byte	0x81
 2581 01b4 00       		.byte	0
 2582 01b5 07       		.uleb128 0x7
 2583 01b6 E3000000 		.4byte	0xe3
 2584 01ba C5010000 		.4byte	0x1c5
 2585 01be 08       		.uleb128 0x8
 2586 01bf F1000000 		.4byte	0xf1
 2587 01c3 7F       		.byte	0x7f
 2588 01c4 00       		.byte	0
 2589 01c5 07       		.uleb128 0x7
 2590 01c6 E3000000 		.4byte	0xe3
 2591 01ca D5010000 		.4byte	0x1d5
 2592 01ce 08       		.uleb128 0x8
 2593 01cf F1000000 		.4byte	0xf1
 2594 01d3 FF       		.byte	0xff
 2595 01d4 00       		.byte	0
 2596 01d5 03       		.uleb128 0x3
 2597 01d6 29070000 		.4byte	.LASF33
 2598 01da 06       		.byte	0x6
 2599 01db 10       		.byte	0x10
 2600 01dc 87010000 		.4byte	0x187
 2601 01e0 09       		.uleb128 0x9
 2602 01e1 14       		.byte	0x14
 2603 01e2 07       		.byte	0x7
 2604 01e3 13       		.byte	0x13
 2605 01e4 25020000 		.4byte	0x225
 2606 01e8 0B       		.uleb128 0xb
 2607 01e9 04040000 		.4byte	.LASF34
 2608 01ed 07       		.byte	0x7
 2609 01ee 14       		.byte	0x14
 2610 01ef D5000000 		.4byte	0xd5
 2611 01f3 00       		.byte	0
 2612 01f4 0B       		.uleb128 0xb
 2613 01f5 ED010000 		.4byte	.LASF35
 2614 01f9 07       		.byte	0x7
 2615 01fa 15       		.byte	0x15
 2616 01fb D5000000 		.4byte	0xd5
 2617 01ff 04       		.byte	0x4
 2618 0200 0B       		.uleb128 0xb
 2619 0201 FB010000 		.4byte	.LASF36
 2620 0205 07       		.byte	0x7
 2621 0206 16       		.byte	0x16
 2622 0207 D5000000 		.4byte	0xd5
 2623 020b 08       		.byte	0x8
 2624 020c 0B       		.uleb128 0xb
 2625 020d 2F060000 		.4byte	.LASF37
 2626 0211 07       		.byte	0x7
 2627 0212 17       		.byte	0x17
 2628 0213 D5000000 		.4byte	0xd5
 2629 0217 0C       		.byte	0xc
 2630 0218 0B       		.uleb128 0xb
 2631 0219 B2070000 		.4byte	.LASF38
 2632 021d 07       		.byte	0x7
 2633 021e 18       		.byte	0x18
 2634 021f 81000000 		.4byte	0x81
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 64


 2635 0223 10       		.byte	0x10
 2636 0224 00       		.byte	0
 2637 0225 03       		.uleb128 0x3
 2638 0226 620A0000 		.4byte	.LASF39
 2639 022a 07       		.byte	0x7
 2640 022b 19       		.byte	0x19
 2641 022c E0010000 		.4byte	0x1e0
 2642 0230 09       		.uleb128 0x9
 2643 0231 10       		.byte	0x10
 2644 0232 07       		.byte	0x7
 2645 0233 1B       		.byte	0x1b
 2646 0234 69020000 		.4byte	0x269
 2647 0238 0B       		.uleb128 0xb
 2648 0239 68030000 		.4byte	.LASF40
 2649 023d 07       		.byte	0x7
 2650 023e 1C       		.byte	0x1c
 2651 023f D5000000 		.4byte	0xd5
 2652 0243 00       		.byte	0
 2653 0244 0B       		.uleb128 0xb
 2654 0245 92020000 		.4byte	.LASF41
 2655 0249 07       		.byte	0x7
 2656 024a 1D       		.byte	0x1d
 2657 024b D5000000 		.4byte	0xd5
 2658 024f 04       		.byte	0x4
 2659 0250 0B       		.uleb128 0xb
 2660 0251 A1070000 		.4byte	.LASF42
 2661 0255 07       		.byte	0x7
 2662 0256 1E       		.byte	0x1e
 2663 0257 D5000000 		.4byte	0xd5
 2664 025b 08       		.byte	0x8
 2665 025c 0B       		.uleb128 0xb
 2666 025d 0B070000 		.4byte	.LASF43
 2667 0261 07       		.byte	0x7
 2668 0262 1F       		.byte	0x1f
 2669 0263 D5000000 		.4byte	0xd5
 2670 0267 0C       		.byte	0xc
 2671 0268 00       		.byte	0
 2672 0269 03       		.uleb128 0x3
 2673 026a EE090000 		.4byte	.LASF44
 2674 026e 07       		.byte	0x7
 2675 026f 20       		.byte	0x20
 2676 0270 30020000 		.4byte	0x230
 2677 0274 0E       		.uleb128 0xe
 2678 0275 746D00   		.ascii	"tm\000"
 2679 0278 24       		.byte	0x24
 2680 0279 08       		.byte	0x8
 2681 027a 21       		.byte	0x21
 2682 027b EC020000 		.4byte	0x2ec
 2683 027f 0B       		.uleb128 0xb
 2684 0280 D9080000 		.4byte	.LASF45
 2685 0284 08       		.byte	0x8
 2686 0285 23       		.byte	0x23
 2687 0286 68000000 		.4byte	0x68
 2688 028a 00       		.byte	0
 2689 028b 0B       		.uleb128 0xb
 2690 028c 40050000 		.4byte	.LASF46
 2691 0290 08       		.byte	0x8
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 65


 2692 0291 24       		.byte	0x24
 2693 0292 68000000 		.4byte	0x68
 2694 0296 04       		.byte	0x4
 2695 0297 0B       		.uleb128 0xb
 2696 0298 0F000000 		.4byte	.LASF47
 2697 029c 08       		.byte	0x8
 2698 029d 25       		.byte	0x25
 2699 029e 68000000 		.4byte	0x68
 2700 02a2 08       		.byte	0x8
 2701 02a3 0B       		.uleb128 0xb
 2702 02a4 AB080000 		.4byte	.LASF48
 2703 02a8 08       		.byte	0x8
 2704 02a9 26       		.byte	0x26
 2705 02aa 68000000 		.4byte	0x68
 2706 02ae 0C       		.byte	0xc
 2707 02af 0B       		.uleb128 0xb
 2708 02b0 33030000 		.4byte	.LASF49
 2709 02b4 08       		.byte	0x8
 2710 02b5 27       		.byte	0x27
 2711 02b6 68000000 		.4byte	0x68
 2712 02ba 10       		.byte	0x10
 2713 02bb 0B       		.uleb128 0xb
 2714 02bc 56030000 		.4byte	.LASF50
 2715 02c0 08       		.byte	0x8
 2716 02c1 28       		.byte	0x28
 2717 02c2 68000000 		.4byte	0x68
 2718 02c6 14       		.byte	0x14
 2719 02c7 0B       		.uleb128 0xb
 2720 02c8 C9070000 		.4byte	.LASF51
 2721 02cc 08       		.byte	0x8
 2722 02cd 29       		.byte	0x29
 2723 02ce 68000000 		.4byte	0x68
 2724 02d2 18       		.byte	0x18
 2725 02d3 0B       		.uleb128 0xb
 2726 02d4 69050000 		.4byte	.LASF52
 2727 02d8 08       		.byte	0x8
 2728 02d9 2A       		.byte	0x2a
 2729 02da 68000000 		.4byte	0x68
 2730 02de 1C       		.byte	0x1c
 2731 02df 0B       		.uleb128 0xb
 2732 02e0 3D040000 		.4byte	.LASF53
 2733 02e4 08       		.byte	0x8
 2734 02e5 2B       		.byte	0x2b
 2735 02e6 68000000 		.4byte	0x68
 2736 02ea 20       		.byte	0x20
 2737 02eb 00       		.byte	0
 2738 02ec 09       		.uleb128 0x9
 2739 02ed 2C       		.byte	0x2c
 2740 02ee 09       		.byte	0x9
 2741 02ef 14       		.byte	0x14
 2742 02f0 19030000 		.4byte	0x319
 2743 02f4 0A       		.uleb128 0xa
 2744 02f5 6B657900 		.ascii	"key\000"
 2745 02f9 09       		.byte	0x9
 2746 02fa 15       		.byte	0x15
 2747 02fb 19030000 		.4byte	0x319
 2748 02ff 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 66


 2749 0300 0B       		.uleb128 0xb
 2750 0301 4B030000 		.4byte	.LASF54
 2751 0305 09       		.byte	0x9
 2752 0306 16       		.byte	0x16
 2753 0307 19030000 		.4byte	0x319
 2754 030b 14       		.byte	0x14
 2755 030c 0B       		.uleb128 0xb
 2756 030d A7050000 		.4byte	.LASF55
 2757 0311 09       		.byte	0x9
 2758 0312 17       		.byte	0x17
 2759 0313 BD000000 		.4byte	0xbd
 2760 0317 28       		.byte	0x28
 2761 0318 00       		.byte	0
 2762 0319 07       		.uleb128 0x7
 2763 031a E3000000 		.4byte	0xe3
 2764 031e 29030000 		.4byte	0x329
 2765 0322 08       		.uleb128 0x8
 2766 0323 F1000000 		.4byte	0xf1
 2767 0327 13       		.byte	0x13
 2768 0328 00       		.byte	0
 2769 0329 03       		.uleb128 0x3
 2770 032a 94030000 		.4byte	.LASF56
 2771 032e 09       		.byte	0x9
 2772 032f 19       		.byte	0x19
 2773 0330 EC020000 		.4byte	0x2ec
 2774 0334 09       		.uleb128 0x9
 2775 0335 3C       		.byte	0x3c
 2776 0336 0A       		.byte	0xa
 2777 0337 36       		.byte	0x36
 2778 0338 61030000 		.4byte	0x361
 2779 033c 0B       		.uleb128 0xb
 2780 033d A4080000 		.4byte	.LASF57
 2781 0341 0A       		.byte	0xa
 2782 0342 37       		.byte	0x37
 2783 0343 19030000 		.4byte	0x319
 2784 0347 00       		.byte	0
 2785 0348 0B       		.uleb128 0xb
 2786 0349 FF020000 		.4byte	.LASF58
 2787 034d 0A       		.byte	0xa
 2788 034e 38       		.byte	0x38
 2789 034f 19030000 		.4byte	0x319
 2790 0353 14       		.byte	0x14
 2791 0354 0B       		.uleb128 0xb
 2792 0355 3C070000 		.4byte	.LASF59
 2793 0359 0A       		.byte	0xa
 2794 035a 39       		.byte	0x39
 2795 035b 19030000 		.4byte	0x319
 2796 035f 28       		.byte	0x28
 2797 0360 00       		.byte	0
 2798 0361 03       		.uleb128 0x3
 2799 0362 42020000 		.4byte	.LASF60
 2800 0366 0A       		.byte	0xa
 2801 0367 3B       		.byte	0x3b
 2802 0368 34030000 		.4byte	0x334
 2803 036c 09       		.uleb128 0x9
 2804 036d 20       		.byte	0x20
 2805 036e 0A       		.byte	0xa
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 67


 2806 036f 3D       		.byte	0x3d
 2807 0370 D5030000 		.4byte	0x3d5
 2808 0374 0B       		.uleb128 0xb
 2809 0375 6A020000 		.4byte	.LASF61
 2810 0379 0A       		.byte	0xa
 2811 037a 3E       		.byte	0x3e
 2812 037b 68000000 		.4byte	0x68
 2813 037f 00       		.byte	0
 2814 0380 0A       		.uleb128 0xa
 2815 0381 62657200 		.ascii	"ber\000"
 2816 0385 0A       		.byte	0xa
 2817 0386 3F       		.byte	0x3f
 2818 0387 68000000 		.4byte	0x68
 2819 038b 04       		.byte	0x4
 2820 038c 0B       		.uleb128 0xb
 2821 038d 1A070000 		.4byte	.LASF62
 2822 0391 0A       		.byte	0xa
 2823 0392 40       		.byte	0x40
 2824 0393 68000000 		.4byte	0x68
 2825 0397 08       		.byte	0x8
 2826 0398 0B       		.uleb128 0xb
 2827 0399 B7010000 		.4byte	.LASF63
 2828 039d 0A       		.byte	0xa
 2829 039e 41       		.byte	0x41
 2830 039f 68000000 		.4byte	0x68
 2831 03a3 0C       		.byte	0xc
 2832 03a4 0B       		.uleb128 0xb
 2833 03a5 E5060000 		.4byte	.LASF64
 2834 03a9 0A       		.byte	0xa
 2835 03aa 42       		.byte	0x42
 2836 03ab 68000000 		.4byte	0x68
 2837 03af 10       		.byte	0x10
 2838 03b0 0B       		.uleb128 0xb
 2839 03b1 31080000 		.4byte	.LASF65
 2840 03b5 0A       		.byte	0xa
 2841 03b6 43       		.byte	0x43
 2842 03b7 68000000 		.4byte	0x68
 2843 03bb 14       		.byte	0x14
 2844 03bc 0B       		.uleb128 0xb
 2845 03bd CA010000 		.4byte	.LASF66
 2846 03c1 0A       		.byte	0xa
 2847 03c2 44       		.byte	0x44
 2848 03c3 68000000 		.4byte	0x68
 2849 03c7 18       		.byte	0x18
 2850 03c8 0B       		.uleb128 0xb
 2851 03c9 79020000 		.4byte	.LASF67
 2852 03cd 0A       		.byte	0xa
 2853 03ce 45       		.byte	0x45
 2854 03cf 68000000 		.4byte	0x68
 2855 03d3 1C       		.byte	0x1c
 2856 03d4 00       		.byte	0
 2857 03d5 03       		.uleb128 0x3
 2858 03d6 93070000 		.4byte	.LASF68
 2859 03da 0A       		.byte	0xa
 2860 03db 47       		.byte	0x47
 2861 03dc 6C030000 		.4byte	0x36c
 2862 03e0 09       		.uleb128 0x9
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 68


 2863 03e1 0A       		.byte	0xa
 2864 03e2 0A       		.byte	0xa
 2865 03e3 53       		.byte	0x53
 2866 03e4 61040000 		.4byte	0x461
 2867 03e8 0B       		.uleb128 0xb
 2868 03e9 D8020000 		.4byte	.LASF69
 2869 03ed 0A       		.byte	0xa
 2870 03ee 55       		.byte	0x55
 2871 03ef 81000000 		.4byte	0x81
 2872 03f3 00       		.byte	0
 2873 03f4 0B       		.uleb128 0xb
 2874 03f5 DB090000 		.4byte	.LASF70
 2875 03f9 0A       		.byte	0xa
 2876 03fa 57       		.byte	0x57
 2877 03fb 61040000 		.4byte	0x461
 2878 03ff 01       		.byte	0x1
 2879 0400 0B       		.uleb128 0xb
 2880 0401 5F080000 		.4byte	.LASF71
 2881 0405 0A       		.byte	0xa
 2882 0406 59       		.byte	0x59
 2883 0407 81000000 		.4byte	0x81
 2884 040b 02       		.byte	0x2
 2885 040c 0B       		.uleb128 0xb
 2886 040d 01070000 		.4byte	.LASF72
 2887 0411 0A       		.byte	0xa
 2888 0412 5B       		.byte	0x5b
 2889 0413 81000000 		.4byte	0x81
 2890 0417 03       		.byte	0x3
 2891 0418 0B       		.uleb128 0xb
 2892 0419 3A030000 		.4byte	.LASF73
 2893 041d 0A       		.byte	0xa
 2894 041e 5E       		.byte	0x5e
 2895 041f 81000000 		.4byte	0x81
 2896 0423 04       		.byte	0x4
 2897 0424 0B       		.uleb128 0xb
 2898 0425 40090000 		.4byte	.LASF74
 2899 0429 0A       		.byte	0xa
 2900 042a 63       		.byte	0x63
 2901 042b 81000000 		.4byte	0x81
 2902 042f 05       		.byte	0x5
 2903 0430 0B       		.uleb128 0xb
 2904 0431 D1070000 		.4byte	.LASF75
 2905 0435 0A       		.byte	0xa
 2906 0436 65       		.byte	0x65
 2907 0437 81000000 		.4byte	0x81
 2908 043b 06       		.byte	0x6
 2909 043c 0B       		.uleb128 0xb
 2910 043d BC080000 		.4byte	.LASF76
 2911 0441 0A       		.byte	0xa
 2912 0442 66       		.byte	0x66
 2913 0443 81000000 		.4byte	0x81
 2914 0447 07       		.byte	0x7
 2915 0448 0B       		.uleb128 0xb
 2916 0449 DA060000 		.4byte	.LASF77
 2917 044d 0A       		.byte	0xa
 2918 044e 67       		.byte	0x67
 2919 044f 81000000 		.4byte	0x81
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 69


 2920 0453 08       		.byte	0x8
 2921 0454 0B       		.uleb128 0xb
 2922 0455 A6090000 		.4byte	.LASF78
 2923 0459 0A       		.byte	0xa
 2924 045a 68       		.byte	0x68
 2925 045b 81000000 		.4byte	0x81
 2926 045f 09       		.byte	0x9
 2927 0460 00       		.byte	0
 2928 0461 02       		.uleb128 0x2
 2929 0462 01       		.byte	0x1
 2930 0463 02       		.byte	0x2
 2931 0464 A8060000 		.4byte	.LASF79
 2932 0468 03       		.uleb128 0x3
 2933 0469 EE040000 		.4byte	.LASF80
 2934 046d 0A       		.byte	0xa
 2935 046e 6E       		.byte	0x6e
 2936 046f E0030000 		.4byte	0x3e0
 2937 0473 09       		.uleb128 0x9
 2938 0474 1A       		.byte	0x1a
 2939 0475 0B       		.byte	0xb
 2940 0476 10       		.byte	0x10
 2941 0477 AC040000 		.4byte	0x4ac
 2942 047b 0B       		.uleb128 0xb
 2943 047c 08030000 		.4byte	.LASF81
 2944 0480 0B       		.byte	0xb
 2945 0481 11       		.byte	0x11
 2946 0482 AC040000 		.4byte	0x4ac
 2947 0486 00       		.byte	0
 2948 0487 0B       		.uleb128 0xb
 2949 0488 7B080000 		.4byte	.LASF82
 2950 048c 0B       		.byte	0xb
 2951 048d 12       		.byte	0x12
 2952 048e B1000000 		.4byte	0xb1
 2953 0492 16       		.byte	0x16
 2954 0493 0B       		.uleb128 0xb
 2955 0494 AB030000 		.4byte	.LASF83
 2956 0498 0B       		.byte	0xb
 2957 0499 13       		.byte	0x13
 2958 049a 81000000 		.4byte	0x81
 2959 049e 18       		.byte	0x18
 2960 049f 0B       		.uleb128 0xb
 2961 04a0 17000000 		.4byte	.LASF84
 2962 04a4 0B       		.byte	0xb
 2963 04a5 14       		.byte	0x14
 2964 04a6 81000000 		.4byte	0x81
 2965 04aa 19       		.byte	0x19
 2966 04ab 00       		.byte	0
 2967 04ac 07       		.uleb128 0x7
 2968 04ad B1000000 		.4byte	0xb1
 2969 04b1 BC040000 		.4byte	0x4bc
 2970 04b5 08       		.uleb128 0x8
 2971 04b6 F1000000 		.4byte	0xf1
 2972 04ba 0A       		.byte	0xa
 2973 04bb 00       		.byte	0
 2974 04bc 03       		.uleb128 0x3
 2975 04bd 52060000 		.4byte	.LASF85
 2976 04c1 0B       		.byte	0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 70


 2977 04c2 15       		.byte	0x15
 2978 04c3 73040000 		.4byte	0x473
 2979 04c7 09       		.uleb128 0x9
 2980 04c8 06       		.byte	0x6
 2981 04c9 0C       		.byte	0xc
 2982 04ca 35       		.byte	0x35
 2983 04cb 00050000 		.4byte	0x500
 2984 04cf 0B       		.uleb128 0xb
 2985 04d0 1B030000 		.4byte	.LASF86
 2986 04d4 0C       		.byte	0xc
 2987 04d5 37       		.byte	0x37
 2988 04d6 8D000000 		.4byte	0x8d
 2989 04da 00       		.byte	0
 2990 04db 0B       		.uleb128 0xb
 2991 04dc C5090000 		.4byte	.LASF87
 2992 04e0 0C       		.byte	0xc
 2993 04e1 38       		.byte	0x38
 2994 04e2 B1000000 		.4byte	0xb1
 2995 04e6 02       		.byte	0x2
 2996 04e7 0B       		.uleb128 0xb
 2997 04e8 B7090000 		.4byte	.LASF88
 2998 04ec 0C       		.byte	0xc
 2999 04ed 39       		.byte	0x39
 3000 04ee 81000000 		.4byte	0x81
 3001 04f2 04       		.byte	0x4
 3002 04f3 0B       		.uleb128 0xb
 3003 04f4 51000000 		.4byte	.LASF89
 3004 04f8 0C       		.byte	0xc
 3005 04f9 3A       		.byte	0x3a
 3006 04fa 81000000 		.4byte	0x81
 3007 04fe 05       		.byte	0x5
 3008 04ff 00       		.byte	0
 3009 0500 03       		.uleb128 0x3
 3010 0501 8C020000 		.4byte	.LASF90
 3011 0505 0C       		.byte	0xc
 3012 0506 3D       		.byte	0x3d
 3013 0507 0B050000 		.4byte	0x50b
 3014 050b 0C       		.uleb128 0xc
 3015 050c C7040000 		.4byte	0x4c7
 3016 0510 09       		.uleb128 0x9
 3017 0511 1C       		.byte	0x1c
 3018 0512 0C       		.byte	0xc
 3019 0513 40       		.byte	0x40
 3020 0514 31050000 		.4byte	0x531
 3021 0518 0B       		.uleb128 0xb
 3022 0519 46040000 		.4byte	.LASF91
 3023 051d 0C       		.byte	0xc
 3024 051e 42       		.byte	0x42
 3025 051f 31050000 		.4byte	0x531
 3026 0523 00       		.byte	0
 3027 0524 0B       		.uleb128 0xb
 3028 0525 140A0000 		.4byte	.LASF92
 3029 0529 0C       		.byte	0xc
 3030 052a 43       		.byte	0x43
 3031 052b FE000000 		.4byte	0xfe
 3032 052f 04       		.byte	0x4
 3033 0530 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 71


 3034 0531 06       		.uleb128 0x6
 3035 0532 04       		.byte	0x4
 3036 0533 61030000 		.4byte	0x361
 3037 0537 03       		.uleb128 0x3
 3038 0538 E3040000 		.4byte	.LASF93
 3039 053c 0C       		.byte	0xc
 3040 053d 45       		.byte	0x45
 3041 053e 10050000 		.4byte	0x510
 3042 0542 09       		.uleb128 0x9
 3043 0543 68       		.byte	0x68
 3044 0544 0C       		.byte	0xc
 3045 0545 4B       		.byte	0x4b
 3046 0546 63050000 		.4byte	0x563
 3047 054a 0B       		.uleb128 0xb
 3048 054b 51040000 		.4byte	.LASF94
 3049 054f 0C       		.byte	0xc
 3050 0550 50       		.byte	0x50
 3051 0551 63050000 		.4byte	0x563
 3052 0555 00       		.byte	0
 3053 0556 0B       		.uleb128 0xb
 3054 0557 35040000 		.4byte	.LASF95
 3055 055b 0C       		.byte	0xc
 3056 055c 51       		.byte	0x51
 3057 055d 68000000 		.4byte	0x68
 3058 0561 64       		.byte	0x64
 3059 0562 00       		.byte	0
 3060 0563 07       		.uleb128 0x7
 3061 0564 E3000000 		.4byte	0xe3
 3062 0568 73050000 		.4byte	0x573
 3063 056c 08       		.uleb128 0x8
 3064 056d F1000000 		.4byte	0xf1
 3065 0571 63       		.byte	0x63
 3066 0572 00       		.byte	0
 3067 0573 03       		.uleb128 0x3
 3068 0574 71050000 		.4byte	.LASF96
 3069 0578 0C       		.byte	0xc
 3070 0579 57       		.byte	0x57
 3071 057a 42050000 		.4byte	0x542
 3072 057e 0F       		.uleb128 0xf
 3073 057f 86000000 		.4byte	.LASF193
 3074 0583 01       		.byte	0x1
 3075 0584 14       		.byte	0x14
 3076 0585 00000000 		.4byte	.LFB64
 3077 0589 0C000000 		.4byte	.LFE64-.LFB64
 3078 058d 01       		.uleb128 0x1
 3079 058e 9C       		.byte	0x9c
 3080 058f 10       		.uleb128 0x10
 3081 0590 040A0000 		.4byte	.LASF109
 3082 0594 01       		.byte	0x1
 3083 0595 28       		.byte	0x28
 3084 0596 00000000 		.4byte	.LFB65
 3085 059a B0010000 		.4byte	.LFE65-.LFB65
 3086 059e 01       		.uleb128 0x1
 3087 059f 9C       		.byte	0x9c
 3088 05a0 C1050000 		.4byte	0x5c1
 3089 05a4 11       		.uleb128 0x11
 3090 05a5 56080000 		.4byte	.LASF97
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 72


 3091 05a9 01       		.byte	0x1
 3092 05aa 3C       		.byte	0x3c
 3093 05ab C1050000 		.4byte	0x5c1
 3094 05af 02       		.uleb128 0x2
 3095 05b0 91       		.byte	0x91
 3096 05b1 64       		.sleb128 -28
 3097 05b2 11       		.uleb128 0x11
 3098 05b3 E5030000 		.4byte	.LASF98
 3099 05b7 01       		.byte	0x1
 3100 05b8 74       		.byte	0x74
 3101 05b9 81000000 		.4byte	0x81
 3102 05bd 02       		.uleb128 0x2
 3103 05be 91       		.byte	0x91
 3104 05bf 6F       		.sleb128 -17
 3105 05c0 00       		.byte	0
 3106 05c1 07       		.uleb128 0x7
 3107 05c2 99000000 		.4byte	0x99
 3108 05c6 D1050000 		.4byte	0x5d1
 3109 05ca 08       		.uleb128 0x8
 3110 05cb F1000000 		.4byte	0xf1
 3111 05cf 01       		.byte	0x1
 3112 05d0 00       		.byte	0
 3113 05d1 12       		.uleb128 0x12
 3114 05d2 5E040000 		.4byte	.LASF100
 3115 05d6 01       		.byte	0x1
 3116 05d7 7E       		.byte	0x7e
 3117 05d8 68000000 		.4byte	0x68
 3118 05dc 00000000 		.4byte	.LFB66
 3119 05e0 18010000 		.4byte	.LFE66-.LFB66
 3120 05e4 01       		.uleb128 0x1
 3121 05e5 9C       		.byte	0x9c
 3122 05e6 F9050000 		.4byte	0x5f9
 3123 05ea 11       		.uleb128 0x11
 3124 05eb 8C060000 		.4byte	.LASF99
 3125 05ef 01       		.byte	0x1
 3126 05f0 B5       		.byte	0xb5
 3127 05f1 81000000 		.4byte	0x81
 3128 05f5 02       		.uleb128 0x2
 3129 05f6 91       		.byte	0x91
 3130 05f7 77       		.sleb128 -9
 3131 05f8 00       		.byte	0
 3132 05f9 13       		.uleb128 0x13
 3133 05fa 89080000 		.4byte	.LASF194
 3134 05fe 01       		.byte	0x1
 3135 05ff C5       		.byte	0xc5
 3136 0600 00000000 		.4byte	.LFB67
 3137 0604 2A000000 		.4byte	.LFE67-.LFB67
 3138 0608 01       		.uleb128 0x1
 3139 0609 9C       		.byte	0x9c
 3140 060a 14       		.uleb128 0x14
 3141 060b A0030000 		.4byte	.LASF101
 3142 060f 01       		.byte	0x1
 3143 0610 EA       		.byte	0xea
 3144 0611 00000000 		.4byte	.LFB68
 3145 0615 C8000000 		.4byte	.LFE68-.LFB68
 3146 0619 01       		.uleb128 0x1
 3147 061a 9C       		.byte	0x9c
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 73


 3148 061b 2E060000 		.4byte	0x62e
 3149 061f 15       		.uleb128 0x15
 3150 0620 05050000 		.4byte	.LASF102
 3151 0624 01       		.byte	0x1
 3152 0625 EA       		.byte	0xea
 3153 0626 81000000 		.4byte	0x81
 3154 062a 02       		.uleb128 0x2
 3155 062b 91       		.byte	0x91
 3156 062c 77       		.sleb128 -9
 3157 062d 00       		.byte	0
 3158 062e 16       		.uleb128 0x16
 3159 062f F9090000 		.4byte	.LASF106
 3160 0633 01       		.byte	0x1
 3161 0634 1C01     		.2byte	0x11c
 3162 0636 81000000 		.4byte	0x81
 3163 063a 00000000 		.4byte	.LFB69
 3164 063e 48000000 		.4byte	.LFE69-.LFB69
 3165 0642 01       		.uleb128 0x1
 3166 0643 9C       		.byte	0x9c
 3167 0644 67060000 		.4byte	0x667
 3168 0648 17       		.uleb128 0x17
 3169 0649 4F050000 		.4byte	.LASF103
 3170 064d 01       		.byte	0x1
 3171 064e 1C01     		.2byte	0x11c
 3172 0650 67060000 		.4byte	0x667
 3173 0654 02       		.uleb128 0x2
 3174 0655 91       		.byte	0x91
 3175 0656 74       		.sleb128 -12
 3176 0657 17       		.uleb128 0x17
 3177 0658 05050000 		.4byte	.LASF102
 3178 065c 01       		.byte	0x1
 3179 065d 1C01     		.2byte	0x11c
 3180 065f 81000000 		.4byte	0x81
 3181 0663 02       		.uleb128 0x2
 3182 0664 91       		.byte	0x91
 3183 0665 73       		.sleb128 -13
 3184 0666 00       		.byte	0
 3185 0667 06       		.uleb128 0x6
 3186 0668 04       		.byte	0x4
 3187 0669 00050000 		.4byte	0x500
 3188 066d 18       		.uleb128 0x18
 3189 066e EA060000 		.4byte	.LASF104
 3190 0672 01       		.byte	0x1
 3191 0673 3101     		.2byte	0x131
 3192 0675 00000000 		.4byte	.LFB70
 3193 0679 1E000000 		.4byte	.LFE70-.LFB70
 3194 067d 01       		.uleb128 0x1
 3195 067e 9C       		.byte	0x9c
 3196 067f 93060000 		.4byte	0x693
 3197 0683 17       		.uleb128 0x17
 3198 0684 48070000 		.4byte	.LASF105
 3199 0688 01       		.byte	0x1
 3200 0689 3101     		.2byte	0x131
 3201 068b 67060000 		.4byte	0x667
 3202 068f 02       		.uleb128 0x2
 3203 0690 91       		.byte	0x91
 3204 0691 74       		.sleb128 -12
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 74


 3205 0692 00       		.byte	0
 3206 0693 19       		.uleb128 0x19
 3207 0694 D4050000 		.4byte	.LASF107
 3208 0698 01       		.byte	0x1
 3209 0699 3A01     		.2byte	0x13a
 3210 069b 00050000 		.4byte	0x500
 3211 069f 00000000 		.4byte	.LFB71
 3212 06a3 46000000 		.4byte	.LFE71-.LFB71
 3213 06a7 01       		.uleb128 0x1
 3214 06a8 9C       		.byte	0x9c
 3215 06a9 EA060000 		.4byte	0x6ea
 3216 06ad 17       		.uleb128 0x17
 3217 06ae 1B030000 		.4byte	.LASF86
 3218 06b2 01       		.byte	0x1
 3219 06b3 3A01     		.2byte	0x13a
 3220 06b5 8D000000 		.4byte	0x8d
 3221 06b9 02       		.uleb128 0x2
 3222 06ba 91       		.byte	0x91
 3223 06bb 6A       		.sleb128 -22
 3224 06bc 17       		.uleb128 0x17
 3225 06bd B7090000 		.4byte	.LASF88
 3226 06c1 01       		.byte	0x1
 3227 06c2 3A01     		.2byte	0x13a
 3228 06c4 81000000 		.4byte	0x81
 3229 06c8 02       		.uleb128 0x2
 3230 06c9 91       		.byte	0x91
 3231 06ca 69       		.sleb128 -23
 3232 06cb 17       		.uleb128 0x17
 3233 06cc 51000000 		.4byte	.LASF89
 3234 06d0 01       		.byte	0x1
 3235 06d1 3A01     		.2byte	0x13a
 3236 06d3 81000000 		.4byte	0x81
 3237 06d7 02       		.uleb128 0x2
 3238 06d8 91       		.byte	0x91
 3239 06d9 68       		.sleb128 -24
 3240 06da 1A       		.uleb128 0x1a
 3241 06db B3080000 		.4byte	.LASF108
 3242 06df 01       		.byte	0x1
 3243 06e0 3D01     		.2byte	0x13d
 3244 06e2 00050000 		.4byte	0x500
 3245 06e6 02       		.uleb128 0x2
 3246 06e7 91       		.byte	0x91
 3247 06e8 70       		.sleb128 -16
 3248 06e9 00       		.byte	0
 3249 06ea 1B       		.uleb128 0x1b
 3250 06eb 57070000 		.4byte	.LASF110
 3251 06ef 01       		.byte	0x1
 3252 06f0 5301     		.2byte	0x153
 3253 06f2 00000000 		.4byte	.LFB72
 3254 06f6 2C010000 		.4byte	.LFE72-.LFB72
 3255 06fa 01       		.uleb128 0x1
 3256 06fb 9C       		.byte	0x9c
 3257 06fc 61070000 		.4byte	0x761
 3258 0700 1A       		.uleb128 0x1a
 3259 0701 7E010000 		.4byte	.LASF111
 3260 0705 01       		.byte	0x1
 3261 0706 5B01     		.2byte	0x15b
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 75


 3262 0708 D5010000 		.4byte	0x1d5
 3263 070c 03       		.uleb128 0x3
 3264 070d 91       		.byte	0x91
 3265 070e EC7C     		.sleb128 -404
 3266 0710 1A       		.uleb128 0x1a
 3267 0711 21050000 		.4byte	.LASF112
 3268 0715 01       		.byte	0x1
 3269 0716 5F01     		.2byte	0x15f
 3270 0718 D5010000 		.4byte	0x1d5
 3271 071c 03       		.uleb128 0x3
 3272 071d 91       		.byte	0x91
 3273 071e E879     		.sleb128 -792
 3274 0720 1A       		.uleb128 0x1a
 3275 0721 4D090000 		.4byte	.LASF113
 3276 0725 01       		.byte	0x1
 3277 0726 6A01     		.2byte	0x16a
 3278 0728 D5010000 		.4byte	0x1d5
 3279 072c 03       		.uleb128 0x3
 3280 072d 91       		.byte	0x91
 3281 072e E476     		.sleb128 -1180
 3282 0730 1A       		.uleb128 0x1a
 3283 0731 1F010000 		.4byte	.LASF114
 3284 0735 01       		.byte	0x1
 3285 0736 6E01     		.2byte	0x16e
 3286 0738 D5010000 		.4byte	0x1d5
 3287 073c 03       		.uleb128 0x3
 3288 073d 91       		.byte	0x91
 3289 073e E073     		.sleb128 -1568
 3290 0740 1A       		.uleb128 0x1a
 3291 0741 8C040000 		.4byte	.LASF115
 3292 0745 01       		.byte	0x1
 3293 0746 7201     		.2byte	0x172
 3294 0748 D5010000 		.4byte	0x1d5
 3295 074c 03       		.uleb128 0x3
 3296 074d 91       		.byte	0x91
 3297 074e DC70     		.sleb128 -1956
 3298 0750 1A       		.uleb128 0x1a
 3299 0751 00000000 		.4byte	.LASF116
 3300 0755 01       		.byte	0x1
 3301 0756 7601     		.2byte	0x176
 3302 0758 D5010000 		.4byte	0x1d5
 3303 075c 03       		.uleb128 0x3
 3304 075d 91       		.byte	0x91
 3305 075e D86D     		.sleb128 -2344
 3306 0760 00       		.byte	0
 3307 0761 1C       		.uleb128 0x1c
 3308 0762 0F0A0000 		.4byte	.LASF195
 3309 0766 01       		.byte	0x1
 3310 0767 8101     		.2byte	0x181
 3311 0769 68000000 		.4byte	0x68
 3312 076d 00000000 		.4byte	.LFB73
 3313 0771 1E000000 		.4byte	.LFE73-.LFB73
 3314 0775 01       		.uleb128 0x1
 3315 0776 9C       		.byte	0x9c
 3316 0777 1D       		.uleb128 0x1d
 3317 0778 E2020000 		.4byte	.LASF117
 3318 077c 01       		.byte	0x1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 76


 3319 077d 9701     		.2byte	0x197
 3320 077f 81000000 		.4byte	0x81
 3321 0783 00000000 		.4byte	.LFB74
 3322 0787 5C040000 		.4byte	.LFE74-.LFB74
 3323 078b 01       		.uleb128 0x1
 3324 078c 9C       		.byte	0x9c
 3325 078d E1080000 		.4byte	0x8e1
 3326 0791 1E       		.uleb128 0x1e
 3327 0792 62000000 		.4byte	.LBB2
 3328 0796 CC030000 		.4byte	.LBE2-.LBB2
 3329 079a 1A       		.uleb128 0x1a
 3330 079b 28060000 		.4byte	.LASF118
 3331 079f 01       		.byte	0x1
 3332 07a0 C701     		.2byte	0x1c7
 3333 07a2 19030000 		.4byte	0x319
 3334 07a6 02       		.uleb128 0x2
 3335 07a7 91       		.byte	0x91
 3336 07a8 48       		.sleb128 -56
 3337 07a9 1A       		.uleb128 0x1a
 3338 07aa 61060000 		.4byte	.LASF119
 3339 07ae 01       		.byte	0x1
 3340 07af CB01     		.2byte	0x1cb
 3341 07b1 19030000 		.4byte	0x319
 3342 07b5 03       		.uleb128 0x3
 3343 07b6 91       		.byte	0x91
 3344 07b7 B47F     		.sleb128 -76
 3345 07b9 1A       		.uleb128 0x1a
 3346 07ba AD020000 		.4byte	.LASF120
 3347 07be 01       		.byte	0x1
 3348 07bf D001     		.2byte	0x1d0
 3349 07c1 19030000 		.4byte	0x319
 3350 07c5 03       		.uleb128 0x3
 3351 07c6 91       		.byte	0x91
 3352 07c7 A07F     		.sleb128 -96
 3353 07c9 1A       		.uleb128 0x1a
 3354 07ca F1030000 		.4byte	.LASF121
 3355 07ce 01       		.byte	0x1
 3356 07cf E301     		.2byte	0x1e3
 3357 07d1 8D000000 		.4byte	0x8d
 3358 07d5 02       		.uleb128 0x2
 3359 07d6 91       		.byte	0x91
 3360 07d7 66       		.sleb128 -26
 3361 07d8 1A       		.uleb128 0x1a
 3362 07d9 77040000 		.4byte	.LASF122
 3363 07dd 01       		.byte	0x1
 3364 07de E401     		.2byte	0x1e4
 3365 07e0 19030000 		.4byte	0x319
 3366 07e4 03       		.uleb128 0x3
 3367 07e5 91       		.byte	0x91
 3368 07e6 8C7F     		.sleb128 -116
 3369 07e8 1A       		.uleb128 0x1a
 3370 07e9 41080000 		.4byte	.LASF123
 3371 07ed 01       		.byte	0x1
 3372 07ee F901     		.2byte	0x1f9
 3373 07f0 E1080000 		.4byte	0x8e1
 3374 07f4 03       		.uleb128 0x3
 3375 07f5 91       		.byte	0x91
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 77


 3376 07f6 A475     		.sleb128 -1372
 3377 07f8 1A       		.uleb128 0x1a
 3378 07f9 F9080000 		.4byte	.LASF31
 3379 07fd 01       		.byte	0x1
 3380 07fe FA01     		.2byte	0x1fa
 3381 0800 81000000 		.4byte	0x81
 3382 0804 02       		.uleb128 0x2
 3383 0805 91       		.byte	0x91
 3384 0806 65       		.sleb128 -27
 3385 0807 1A       		.uleb128 0x1a
 3386 0808 02080000 		.4byte	.LASF124
 3387 080c 01       		.byte	0x1
 3388 080d 0102     		.2byte	0x201
 3389 080f F8000000 		.4byte	0xf8
 3390 0813 02       		.uleb128 0x2
 3391 0814 91       		.byte	0x91
 3392 0815 6C       		.sleb128 -20
 3393 0816 1A       		.uleb128 0x1a
 3394 0817 AF010000 		.4byte	.LASF125
 3395 081b 01       		.byte	0x1
 3396 081c 0502     		.2byte	0x205
 3397 081e A5000000 		.4byte	0xa5
 3398 0822 02       		.uleb128 0x2
 3399 0823 91       		.byte	0x91
 3400 0824 64       		.sleb128 -28
 3401 0825 1A       		.uleb128 0x1a
 3402 0826 EB020000 		.4byte	.LASF126
 3403 082a 01       		.byte	0x1
 3404 082b 3502     		.2byte	0x235
 3405 082d 4C000000 		.4byte	0x4c
 3406 0831 02       		.uleb128 0x2
 3407 0832 91       		.byte	0x91
 3408 0833 5C       		.sleb128 -36
 3409 0834 1F       		.uleb128 0x1f
 3410 0835 F0000000 		.4byte	.LBB3
 3411 0839 2C000000 		.4byte	.LBE3-.LBB3
 3412 083d 61080000 		.4byte	0x861
 3413 0841 1A       		.uleb128 0x1a
 3414 0842 83070000 		.4byte	.LASF127
 3415 0846 01       		.byte	0x1
 3416 0847 D801     		.2byte	0x1d8
 3417 0849 8D000000 		.4byte	0x8d
 3418 084d 02       		.uleb128 0x2
 3419 084e 91       		.byte	0x91
 3420 084f 68       		.sleb128 -24
 3421 0850 1A       		.uleb128 0x1a
 3422 0851 30020000 		.4byte	.LASF128
 3423 0855 01       		.byte	0x1
 3424 0856 D901     		.2byte	0x1d9
 3425 0858 19030000 		.4byte	0x319
 3426 085c 03       		.uleb128 0x3
 3427 085d 91       		.byte	0x91
 3428 085e F87E     		.sleb128 -136
 3429 0860 00       		.byte	0
 3430 0861 1F       		.uleb128 0x1f
 3431 0862 1E010000 		.4byte	.LBB4
 3432 0866 20000000 		.4byte	.LBE4-.LBB4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 78


 3433 086a 7F080000 		.4byte	0x87f
 3434 086e 1A       		.uleb128 0x1a
 3435 086f 30020000 		.4byte	.LASF128
 3436 0873 01       		.byte	0x1
 3437 0874 DD01     		.2byte	0x1dd
 3438 0876 19030000 		.4byte	0x319
 3439 087a 03       		.uleb128 0x3
 3440 087b 91       		.byte	0x91
 3441 087c E47E     		.sleb128 -156
 3442 087e 00       		.byte	0
 3443 087f 1F       		.uleb128 0x1f
 3444 0880 5E020000 		.4byte	.LBB5
 3445 0884 4C010000 		.4byte	.LBE5-.LBB5
 3446 0888 B6080000 		.4byte	0x8b6
 3447 088c 1A       		.uleb128 0x1a
 3448 088d E0050000 		.4byte	.LASF129
 3449 0891 01       		.byte	0x1
 3450 0892 0A02     		.2byte	0x20a
 3451 0894 A5000000 		.4byte	0xa5
 3452 0898 02       		.uleb128 0x2
 3453 0899 91       		.byte	0x91
 3454 089a 6B       		.sleb128 -21
 3455 089b 1E       		.uleb128 0x1e
 3456 089c 66020000 		.4byte	.LBB6
 3457 08a0 28010000 		.4byte	.LBE6-.LBB6
 3458 08a4 1A       		.uleb128 0x1a
 3459 08a5 BE030000 		.4byte	.LASF130
 3460 08a9 01       		.byte	0x1
 3461 08aa 0C02     		.2byte	0x20c
 3462 08ac F1080000 		.4byte	0x8f1
 3463 08b0 03       		.uleb128 0x3
 3464 08b1 91       		.byte	0x91
 3465 08b2 EC76     		.sleb128 -1172
 3466 08b4 00       		.byte	0
 3467 08b5 00       		.byte	0
 3468 08b6 1E       		.uleb128 0x1e
 3469 08b7 C4030000 		.4byte	.LBB7
 3470 08bb 3A000000 		.4byte	.LBE7-.LBB7
 3471 08bf 1A       		.uleb128 0x1a
 3472 08c0 BB020000 		.4byte	.LASF131
 3473 08c4 01       		.byte	0x1
 3474 08c5 2C02     		.2byte	0x22c
 3475 08c7 68000000 		.4byte	0x68
 3476 08cb 02       		.uleb128 0x2
 3477 08cc 91       		.byte	0x91
 3478 08cd 60       		.sleb128 -32
 3479 08ce 1A       		.uleb128 0x1a
 3480 08cf F5060000 		.4byte	.LASF132
 3481 08d3 01       		.byte	0x1
 3482 08d4 2D02     		.2byte	0x22d
 3483 08d6 02090000 		.4byte	0x902
 3484 08da 03       		.uleb128 0x3
 3485 08db 91       		.byte	0x91
 3486 08dc D87E     		.sleb128 -168
 3487 08de 00       		.byte	0
 3488 08df 00       		.byte	0
 3489 08e0 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 79


 3490 08e1 07       		.uleb128 0x7
 3491 08e2 E3000000 		.4byte	0xe3
 3492 08e6 F1080000 		.4byte	0x8f1
 3493 08ea 08       		.uleb128 0x8
 3494 08eb F1000000 		.4byte	0xf1
 3495 08ef C7       		.byte	0xc7
 3496 08f0 00       		.byte	0
 3497 08f1 07       		.uleb128 0x7
 3498 08f2 E3000000 		.4byte	0xe3
 3499 08f6 02090000 		.4byte	0x902
 3500 08fa 20       		.uleb128 0x20
 3501 08fb F1000000 		.4byte	0xf1
 3502 08ff E803     		.2byte	0x3e8
 3503 0901 00       		.byte	0
 3504 0902 07       		.uleb128 0x7
 3505 0903 E3000000 		.4byte	0xe3
 3506 0907 12090000 		.4byte	0x912
 3507 090b 08       		.uleb128 0x8
 3508 090c F1000000 		.4byte	0xf1
 3509 0910 09       		.byte	0x9
 3510 0911 00       		.byte	0
 3511 0912 1D       		.uleb128 0x1d
 3512 0913 68060000 		.4byte	.LASF133
 3513 0917 01       		.byte	0x1
 3514 0918 4A02     		.2byte	0x24a
 3515 091a 81000000 		.4byte	0x81
 3516 091e 00000000 		.4byte	.LFB75
 3517 0922 44000000 		.4byte	.LFE75-.LFB75
 3518 0926 01       		.uleb128 0x1
 3519 0927 9C       		.byte	0x9c
 3520 0928 46090000 		.4byte	0x946
 3521 092c 1E       		.uleb128 0x1e
 3522 092d 20000000 		.4byte	.LBB8
 3523 0931 1A000000 		.4byte	.LBE8-.LBB8
 3524 0935 1A       		.uleb128 0x1a
 3525 0936 EB020000 		.4byte	.LASF126
 3526 093a 01       		.byte	0x1
 3527 093b 5502     		.2byte	0x255
 3528 093d 4C000000 		.4byte	0x4c
 3529 0941 02       		.uleb128 0x2
 3530 0942 91       		.byte	0x91
 3531 0943 74       		.sleb128 -12
 3532 0944 00       		.byte	0
 3533 0945 00       		.byte	0
 3534 0946 1D       		.uleb128 0x1d
 3535 0947 1F040000 		.4byte	.LASF134
 3536 094b 01       		.byte	0x1
 3537 094c 6A02     		.2byte	0x26a
 3538 094e 81000000 		.4byte	0x81
 3539 0952 00000000 		.4byte	.LFB76
 3540 0956 A4020000 		.4byte	.LFE76-.LFB76
 3541 095a 01       		.uleb128 0x1
 3542 095b 9C       		.byte	0x9c
 3543 095c E7090000 		.4byte	0x9e7
 3544 0960 1A       		.uleb128 0x1a
 3545 0961 A7050000 		.4byte	.LASF55
 3546 0965 01       		.byte	0x1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 80


 3547 0966 6D02     		.2byte	0x26d
 3548 0968 4C000000 		.4byte	0x4c
 3549 096c 02       		.uleb128 0x2
 3550 096d 91       		.byte	0x91
 3551 096e 6C       		.sleb128 -20
 3552 096f 1A       		.uleb128 0x1a
 3553 0970 08080000 		.4byte	.LASF135
 3554 0974 01       		.byte	0x1
 3555 0975 6E02     		.2byte	0x26e
 3556 0977 E7090000 		.4byte	0x9e7
 3557 097b 02       		.uleb128 0x2
 3558 097c 91       		.byte	0x91
 3559 097d 4C       		.sleb128 -52
 3560 097e 1A       		.uleb128 0x1a
 3561 097f 4B030000 		.4byte	.LASF54
 3562 0983 01       		.byte	0x1
 3563 0984 7202     		.2byte	0x272
 3564 0986 19030000 		.4byte	0x319
 3565 098a 03       		.uleb128 0x3
 3566 098b 91       		.byte	0x91
 3567 098c B87F     		.sleb128 -72
 3568 098e 1A       		.uleb128 0x1a
 3569 098f 6C0A0000 		.4byte	.LASF136
 3570 0993 01       		.byte	0x1
 3571 0994 7602     		.2byte	0x276
 3572 0996 F7090000 		.4byte	0x9f7
 3573 099a 03       		.uleb128 0x3
 3574 099b 91       		.byte	0x91
 3575 099c B07F     		.sleb128 -80
 3576 099e 1A       		.uleb128 0x1a
 3577 099f C9030000 		.4byte	.LASF137
 3578 09a3 01       		.byte	0x1
 3579 09a4 9702     		.2byte	0x297
 3580 09a6 25020000 		.4byte	0x225
 3581 09aa 03       		.uleb128 0x3
 3582 09ab 91       		.byte	0x91
 3583 09ac 9C7F     		.sleb128 -100
 3584 09ae 1F       		.uleb128 0x1f
 3585 09af 46000000 		.4byte	.LBB9
 3586 09b3 78000000 		.4byte	.LBE9-.LBB9
 3587 09b7 CC090000 		.4byte	0x9cc
 3588 09bb 1A       		.uleb128 0x1a
 3589 09bc 6C080000 		.4byte	.LASF138
 3590 09c0 01       		.byte	0x1
 3591 09c1 7F02     		.2byte	0x27f
 3592 09c3 BC040000 		.4byte	0x4bc
 3593 09c7 03       		.uleb128 0x3
 3594 09c8 91       		.byte	0x91
 3595 09c9 807F     		.sleb128 -128
 3596 09cb 00       		.byte	0
 3597 09cc 1E       		.uleb128 0x1e
 3598 09cd 4A010000 		.4byte	.LBB10
 3599 09d1 EE000000 		.4byte	.LBE10-.LBB10
 3600 09d5 1A       		.uleb128 0x1a
 3601 09d6 E0080000 		.4byte	.LASF139
 3602 09da 01       		.byte	0x1
 3603 09db B302     		.2byte	0x2b3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 81


 3604 09dd 69020000 		.4byte	0x269
 3605 09e1 03       		.uleb128 0x3
 3606 09e2 91       		.byte	0x91
 3607 09e3 F07E     		.sleb128 -144
 3608 09e5 00       		.byte	0
 3609 09e6 00       		.byte	0
 3610 09e7 07       		.uleb128 0x7
 3611 09e8 E3000000 		.4byte	0xe3
 3612 09ec F7090000 		.4byte	0x9f7
 3613 09f0 08       		.uleb128 0x8
 3614 09f1 F1000000 		.4byte	0xf1
 3615 09f5 1F       		.byte	0x1f
 3616 09f6 00       		.byte	0
 3617 09f7 07       		.uleb128 0x7
 3618 09f8 E3000000 		.4byte	0xe3
 3619 09fc 070A0000 		.4byte	0xa07
 3620 0a00 08       		.uleb128 0x8
 3621 0a01 F1000000 		.4byte	0xf1
 3622 0a05 04       		.byte	0x4
 3623 0a06 00       		.byte	0
 3624 0a07 16       		.uleb128 0x16
 3625 0a08 8C030000 		.4byte	.LASF140
 3626 0a0c 01       		.byte	0x1
 3627 0a0d DB02     		.2byte	0x2db
 3628 0a0f 81000000 		.4byte	0x81
 3629 0a13 00000000 		.4byte	.LFB77
 3630 0a17 74000000 		.4byte	.LFE77-.LFB77
 3631 0a1b 01       		.uleb128 0x1
 3632 0a1c 9C       		.byte	0x9c
 3633 0a1d 4D0A0000 		.4byte	0xa4d
 3634 0a21 17       		.uleb128 0x17
 3635 0a22 A7050000 		.4byte	.LASF55
 3636 0a26 01       		.byte	0x1
 3637 0a27 DB02     		.2byte	0x2db
 3638 0a29 4C000000 		.4byte	0x4c
 3639 0a2d 02       		.uleb128 0x2
 3640 0a2e 91       		.byte	0x91
 3641 0a2f 64       		.sleb128 -28
 3642 0a30 21       		.uleb128 0x21
 3643 0a31 7400     		.ascii	"t\000"
 3644 0a33 01       		.byte	0x1
 3645 0a34 E202     		.2byte	0x2e2
 3646 0a36 4D0A0000 		.4byte	0xa4d
 3647 0a3a 02       		.uleb128 0x2
 3648 0a3b 91       		.byte	0x91
 3649 0a3c 74       		.sleb128 -12
 3650 0a3d 1A       		.uleb128 0x1a
 3651 0a3e 80050000 		.4byte	.LASF141
 3652 0a42 01       		.byte	0x1
 3653 0a43 E702     		.2byte	0x2e7
 3654 0a45 77010000 		.4byte	0x177
 3655 0a49 02       		.uleb128 0x2
 3656 0a4a 91       		.byte	0x91
 3657 0a4b 68       		.sleb128 -24
 3658 0a4c 00       		.byte	0
 3659 0a4d 06       		.uleb128 0x6
 3660 0a4e 04       		.byte	0x4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 82


 3661 0a4f 74020000 		.4byte	0x274
 3662 0a53 16       		.uleb128 0x16
 3663 0a54 2A030000 		.4byte	.LASF142
 3664 0a58 01       		.byte	0x1
 3665 0a59 0403     		.2byte	0x304
 3666 0a5b 81000000 		.4byte	0x81
 3667 0a5f 00000000 		.4byte	.LFB78
 3668 0a63 38010000 		.4byte	.LFE78-.LFB78
 3669 0a67 01       		.uleb128 0x1
 3670 0a68 9C       		.byte	0x9c
 3671 0a69 CC0A0000 		.4byte	0xacc
 3672 0a6d 17       		.uleb128 0x17
 3673 0a6e 51030000 		.4byte	.LASF143
 3674 0a72 01       		.byte	0x1
 3675 0a73 0403     		.2byte	0x304
 3676 0a75 F8000000 		.4byte	0xf8
 3677 0a79 03       		.uleb128 0x3
 3678 0a7a 91       		.byte	0x91
 3679 0a7b 9C7E     		.sleb128 -228
 3680 0a7d 17       		.uleb128 0x17
 3681 0a7e 46030000 		.4byte	.LASF144
 3682 0a82 01       		.byte	0x1
 3683 0a83 0403     		.2byte	0x304
 3684 0a85 68000000 		.4byte	0x68
 3685 0a89 03       		.uleb128 0x3
 3686 0a8a 91       		.byte	0x91
 3687 0a8b 987E     		.sleb128 -232
 3688 0a8d 17       		.uleb128 0x17
 3689 0a8e C4060000 		.4byte	.LASF145
 3690 0a92 01       		.byte	0x1
 3691 0a93 0403     		.2byte	0x304
 3692 0a95 F8000000 		.4byte	0xf8
 3693 0a99 03       		.uleb128 0x3
 3694 0a9a 91       		.byte	0x91
 3695 0a9b 947E     		.sleb128 -236
 3696 0a9d 1A       		.uleb128 0x1a
 3697 0a9e 12020000 		.4byte	.LASF146
 3698 0aa2 01       		.byte	0x1
 3699 0aa3 0603     		.2byte	0x306
 3700 0aa5 81000000 		.4byte	0x81
 3701 0aa9 02       		.uleb128 0x2
 3702 0aaa 91       		.byte	0x91
 3703 0aab 77       		.sleb128 -9
 3704 0aac 1A       		.uleb128 0x1a
 3705 0aad 3C000000 		.4byte	.LASF147
 3706 0ab1 01       		.byte	0x1
 3707 0ab2 0D03     		.2byte	0x30d
 3708 0ab4 CC0A0000 		.4byte	0xacc
 3709 0ab8 02       		.uleb128 0x2
 3710 0ab9 91       		.byte	0x91
 3711 0aba 68       		.sleb128 -24
 3712 0abb 1A       		.uleb128 0x1a
 3713 0abc 41080000 		.4byte	.LASF123
 3714 0ac0 01       		.byte	0x1
 3715 0ac1 1503     		.2byte	0x315
 3716 0ac3 E1080000 		.4byte	0x8e1
 3717 0ac7 03       		.uleb128 0x3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 83


 3718 0ac8 91       		.byte	0x91
 3719 0ac9 A07E     		.sleb128 -224
 3720 0acb 00       		.byte	0
 3721 0acc 07       		.uleb128 0x7
 3722 0acd E3000000 		.4byte	0xe3
 3723 0ad1 DC0A0000 		.4byte	0xadc
 3724 0ad5 08       		.uleb128 0x8
 3725 0ad6 F1000000 		.4byte	0xf1
 3726 0ada 0B       		.byte	0xb
 3727 0adb 00       		.byte	0
 3728 0adc 22       		.uleb128 0x22
 3729 0add 71010000 		.4byte	.LASF148
 3730 0ae1 0D       		.byte	0xd
 3731 0ae2 1207     		.2byte	0x712
 3732 0ae4 E80A0000 		.4byte	0xae8
 3733 0ae8 0C       		.uleb128 0xc
 3734 0ae9 76000000 		.4byte	0x76
 3735 0aed 23       		.uleb128 0x23
 3736 0aee 2C000000 		.4byte	.LASF149
 3737 0af2 09       		.byte	0x9
 3738 0af3 11       		.byte	0x11
 3739 0af4 61040000 		.4byte	0x461
 3740 0af8 05       		.uleb128 0x5
 3741 0af9 03       		.byte	0x3
 3742 0afa 00000000 		.4byte	buffer_overflow
 3743 0afe 23       		.uleb128 0x23
 3744 0aff 0F050000 		.4byte	.LASF150
 3745 0b03 09       		.byte	0x9
 3746 0b04 22       		.byte	0x22
 3747 0b05 8D000000 		.4byte	0x8d
 3748 0b09 05       		.uleb128 0x5
 3749 0b0a 03       		.byte	0x3
 3750 0b0b 00000000 		.4byte	dataPointsInStack
 3751 0b0f 23       		.uleb128 0x23
 3752 0b10 27090000 		.4byte	.LASF151
 3753 0b14 09       		.byte	0x9
 3754 0b15 23       		.byte	0x23
 3755 0b16 8D000000 		.4byte	0x8d
 3756 0b1a 05       		.uleb128 0x5
 3757 0b1b 03       		.byte	0x3
 3758 0b1c 00000000 		.4byte	dataPointsInStackDesired
 3759 0b20 07       		.uleb128 0x7
 3760 0b21 29030000 		.4byte	0x329
 3761 0b25 300B0000 		.4byte	0xb30
 3762 0b29 08       		.uleb128 0x8
 3763 0b2a F1000000 		.4byte	0xf1
 3764 0b2e 95       		.byte	0x95
 3765 0b2f 00       		.byte	0
 3766 0b30 23       		.uleb128 0x23
 3767 0b31 30040000 		.4byte	.LASF152
 3768 0b35 09       		.byte	0x9
 3769 0b36 24       		.byte	0x24
 3770 0b37 200B0000 		.4byte	0xb20
 3771 0b3b 05       		.uleb128 0x5
 3772 0b3c 03       		.byte	0x3
 3773 0b3d 00000000 		.4byte	data
 3774 0b41 23       		.uleb128 0x23
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 84


 3775 0b42 58010000 		.4byte	.LASF153
 3776 0b46 0A       		.byte	0xa
 3777 0b47 20       		.byte	0x20
 3778 0b48 81000000 		.4byte	0x81
 3779 0b4c 05       		.uleb128 0x5
 3780 0b4d 03       		.byte	0x3
 3781 0b4e 00000000 		.4byte	modem_state
 3782 0b52 23       		.uleb128 0x23
 3783 0b53 AC040000 		.4byte	.LASF154
 3784 0b57 0A       		.byte	0xa
 3785 0b58 71       		.byte	0x71
 3786 0b59 BD000000 		.4byte	0xbd
 3787 0b5d 05       		.uleb128 0x5
 3788 0b5e 03       		.byte	0x3
 3789 0b5f 00000000 		.4byte	modem_start_time_stamp
 3790 0b63 23       		.uleb128 0x23
 3791 0b64 46040000 		.4byte	.LASF91
 3792 0b68 0A       		.byte	0xa
 3793 0b69 72       		.byte	0x72
 3794 0b6a 61030000 		.4byte	0x361
 3795 0b6e 05       		.uleb128 0x5
 3796 0b6f 03       		.byte	0x3
 3797 0b70 00000000 		.4byte	modem_info
 3798 0b74 23       		.uleb128 0x23
 3799 0b75 4C010000 		.4byte	.LASF155
 3800 0b79 0A       		.byte	0xa
 3801 0b7a 73       		.byte	0x73
 3802 0b7b D5030000 		.4byte	0x3d5
 3803 0b7f 05       		.uleb128 0x5
 3804 0b80 03       		.byte	0x3
 3805 0b81 00000000 		.4byte	modem_stats
 3806 0b85 23       		.uleb128 0x23
 3807 0b86 BF050000 		.4byte	.LASF156
 3808 0b8a 0A       		.byte	0xa
 3809 0b8b 74       		.byte	0x74
 3810 0b8c 68040000 		.4byte	0x468
 3811 0b90 05       		.uleb128 0x5
 3812 0b91 03       		.byte	0x3
 3813 0b92 00000000 		.4byte	updatable_parameters
 3814 0b96 23       		.uleb128 0x23
 3815 0b97 7C030000 		.4byte	.LASF157
 3816 0b9b 0E       		.byte	0xe
 3817 0b9c 07       		.byte	0x7
 3818 0b9d 81000000 		.4byte	0x81
 3819 0ba1 05       		.uleb128 0x5
 3820 0ba2 03       		.byte	0x3
 3821 0ba3 00000000 		.4byte	App_LED_enabled
 3822 0ba7 23       		.uleb128 0x23
 3823 0ba8 360A0000 		.4byte	.LASF158
 3824 0bac 0E       		.byte	0xe
 3825 0bad 08       		.byte	0x8
 3826 0bae 63050000 		.4byte	0x563
 3827 0bb2 05       		.uleb128 0x5
 3828 0bb3 03       		.byte	0x3
 3829 0bb4 00000000 		.4byte	app_led_inbox
 3830 0bb8 23       		.uleb128 0x23
 3831 0bb9 E3070000 		.4byte	.LASF159
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 85


 3832 0bbd 0B       		.byte	0xb
 3833 0bbe 25       		.byte	0x25
 3834 0bbf 63050000 		.4byte	0x563
 3835 0bc3 05       		.uleb128 0x5
 3836 0bc4 03       		.byte	0x3
 3837 0bc5 00000000 		.4byte	level_sensor_inbox
 3838 0bc9 23       		.uleb128 0x23
 3839 0bca 12090000 		.4byte	.LASF160
 3840 0bce 0B       		.byte	0xb
 3841 0bcf 27       		.byte	0x27
 3842 0bd0 61040000 		.4byte	0x461
 3843 0bd4 05       		.uleb128 0x5
 3844 0bd5 03       		.byte	0x3
 3845 0bd6 00000000 		.4byte	level_sensor_enabled
 3846 0bda 23       		.uleb128 0x23
 3847 0bdb 440A0000 		.4byte	.LASF161
 3848 0bdf 0F       		.byte	0xf
 3849 0be0 0F       		.byte	0xf
 3850 0be1 63050000 		.4byte	0x563
 3851 0be5 05       		.uleb128 0x5
 3852 0be6 03       		.byte	0x3
 3853 0be7 00000000 		.4byte	downstream_level_sensor_inbox
 3854 0beb 23       		.uleb128 0x23
 3855 0bec C3040000 		.4byte	.LASF162
 3856 0bf0 0F       		.byte	0xf
 3857 0bf1 11       		.byte	0x11
 3858 0bf2 61040000 		.4byte	0x461
 3859 0bf6 05       		.uleb128 0x5
 3860 0bf7 03       		.byte	0x3
 3861 0bf8 00000000 		.4byte	downstream_level_sensor_enabled
 3862 0bfc 23       		.uleb128 0x23
 3863 0bfd 21020000 		.4byte	.LASF163
 3864 0c01 10       		.byte	0x10
 3865 0c02 2A       		.byte	0x2a
 3866 0c03 C9000000 		.4byte	0xc9
 3867 0c07 05       		.uleb128 0x5
 3868 0c08 03       		.byte	0x3
 3869 0c09 00000000 		.4byte	valve_diameter
 3870 0c0d 23       		.uleb128 0x23
 3871 0c0e 7B000000 		.4byte	.LASF164
 3872 0c12 10       		.byte	0x10
 3873 0c13 2B       		.byte	0x2b
 3874 0c14 02090000 		.4byte	0x902
 3875 0c18 05       		.uleb128 0x5
 3876 0c19 03       		.byte	0x3
 3877 0c1a 00000000 		.4byte	valve_type
 3878 0c1e 23       		.uleb128 0x23
 3879 0c1f EB080000 		.4byte	.LASF165
 3880 0c23 10       		.byte	0x10
 3881 0c24 30       		.byte	0x30
 3882 0c25 81000000 		.4byte	0x81
 3883 0c29 05       		.uleb128 0x5
 3884 0c2a 03       		.byte	0x3
 3885 0c2b 00000000 		.4byte	valve_enabled
 3886 0c2f 23       		.uleb128 0x23
 3887 0c30 9A090000 		.4byte	.LASF166
 3888 0c34 10       		.byte	0x10
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 86


 3889 0c35 31       		.byte	0x31
 3890 0c36 63050000 		.4byte	0x563
 3891 0c3a 05       		.uleb128 0x5
 3892 0c3b 03       		.byte	0x3
 3893 0c3c 00000000 		.4byte	valve_inbox
 3894 0c40 23       		.uleb128 0x23
 3895 0c41 8D010000 		.4byte	.LASF167
 3896 0c45 11       		.byte	0x11
 3897 0c46 69       		.byte	0x69
 3898 0c47 81000000 		.4byte	0x81
 3899 0c4b 05       		.uleb128 0x5
 3900 0c4c 03       		.byte	0x3
 3901 0c4d 00000000 		.4byte	autosampler_enabled
 3902 0c51 23       		.uleb128 0x23
 3903 0c52 2E050000 		.4byte	.LASF168
 3904 0c56 11       		.byte	0x11
 3905 0c57 6B       		.byte	0x6b
 3906 0c58 63050000 		.4byte	0x563
 3907 0c5c 05       		.uleb128 0x5
 3908 0c5d 03       		.byte	0x3
 3909 0c5e 00000000 		.4byte	autosampler_inbox
 3910 0c62 07       		.uleb128 0x7
 3911 0c63 E3000000 		.4byte	0xe3
 3912 0c67 730C0000 		.4byte	0xc73
 3913 0c6b 20       		.uleb128 0x20
 3914 0c6c F1000000 		.4byte	0xf1
 3915 0c70 0F27     		.2byte	0x270f
 3916 0c72 00       		.byte	0
 3917 0c73 23       		.uleb128 0x23
 3918 0c74 220A0000 		.4byte	.LASF169
 3919 0c78 0C       		.byte	0xc
 3920 0c79 1F       		.byte	0x1f
 3921 0c7a 620C0000 		.4byte	0xc62
 3922 0c7e 05       		.uleb128 0x5
 3923 0c7f 03       		.byte	0x3
 3924 0c80 00000000 		.4byte	http_request
 3925 0c84 23       		.uleb128 0x23
 3926 0c85 7F090000 		.4byte	.LASF170
 3927 0c89 0C       		.byte	0xc
 3928 0c8a 20       		.byte	0x20
 3929 0c8b 620C0000 		.4byte	0xc62
 3930 0c8f 05       		.uleb128 0x5
 3931 0c90 03       		.byte	0x3
 3932 0c91 00000000 		.4byte	http_body
 3933 0c95 23       		.uleb128 0x23
 3934 0c96 36080000 		.4byte	.LASF171
 3935 0c9a 0C       		.byte	0xc
 3936 0c9b 21       		.byte	0x21
 3937 0c9c E1080000 		.4byte	0x8e1
 3938 0ca0 05       		.uleb128 0x5
 3939 0ca1 03       		.byte	0x3
 3940 0ca2 00000000 		.4byte	http_route
 3941 0ca6 23       		.uleb128 0x23
 3942 0ca7 30070000 		.4byte	.LASF172
 3943 0cab 0C       		.byte	0xc
 3944 0cac 48       		.byte	0x48
 3945 0cad 37050000 		.4byte	0x537
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 87


 3946 0cb1 05       		.uleb128 0x5
 3947 0cb2 03       		.byte	0x3
 3948 0cb3 00000000 		.4byte	system_info
 3949 0cb7 23       		.uleb128 0x23
 3950 0cb8 CA060000 		.4byte	.LASF173
 3951 0cbc 0C       		.byte	0xc
 3952 0cbd 5A       		.byte	0x5a
 3953 0cbe 73050000 		.4byte	0x573
 3954 0cc2 05       		.uleb128 0x5
 3955 0cc3 03       		.byte	0x3
 3956 0cc4 00000000 		.4byte	system_settings
 3957 0cc8 23       		.uleb128 0x23
 3958 0cc9 64010000 		.4byte	.LASF174
 3959 0ccd 0C       		.byte	0xc
 3960 0cce 76       		.byte	0x76
 3961 0ccf 00050000 		.4byte	0x500
 3962 0cd3 05       		.uleb128 0x5
 3963 0cd4 03       		.byte	0x3
 3964 0cd5 00000000 		.4byte	alarmMeasure
 3965 0cd9 23       		.uleb128 0x23
 3966 0cda BC010000 		.4byte	.LASF175
 3967 0cde 0C       		.byte	0xc
 3968 0cdf 77       		.byte	0x77
 3969 0ce0 81000000 		.4byte	0x81
 3970 0ce4 05       		.uleb128 0x5
 3971 0ce5 03       		.byte	0x3
 3972 0ce6 00000000 		.4byte	timeToMeasure
 3973 0cea 23       		.uleb128 0x23
 3974 0ceb 5E030000 		.4byte	.LASF176
 3975 0cef 0C       		.byte	0xc
 3976 0cf0 78       		.byte	0x78
 3977 0cf1 00050000 		.4byte	0x500
 3978 0cf5 05       		.uleb128 0x5
 3979 0cf6 03       		.byte	0x3
 3980 0cf7 00000000 		.4byte	alarmSync
 3981 0cfb 23       		.uleb128 0x23
 3982 0cfc E2010000 		.4byte	.LASF177
 3983 0d00 0C       		.byte	0xc
 3984 0d01 79       		.byte	0x79
 3985 0d02 81000000 		.4byte	0x81
 3986 0d06 05       		.uleb128 0x5
 3987 0d07 03       		.byte	0x3
 3988 0d08 00000000 		.4byte	timeToSync
 3989 0d0c 23       		.uleb128 0x23
 3990 0d0d 90050000 		.4byte	.LASF178
 3991 0d11 0C       		.byte	0xc
 3992 0d12 7A       		.byte	0x7a
 3993 0d13 81000000 		.4byte	0x81
 3994 0d17 05       		.uleb128 0x5
 3995 0d18 03       		.byte	0x3
 3996 0d19 00000000 		.4byte	timeToSycnRemoteParams
 3997 0d1d 24       		.uleb128 0x24
 3998 0d1e 68657900 		.ascii	"hey\000"
 3999 0d22 0C       		.byte	0xc
 4000 0d23 7B       		.byte	0x7b
 4001 0d24 81000000 		.4byte	0x81
 4002 0d28 05       		.uleb128 0x5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 88


 4003 0d29 03       		.byte	0x3
 4004 0d2a 00000000 		.4byte	hey
 4005 0d2e 23       		.uleb128 0x23
 4006 0d2f A0040000 		.4byte	.LASF179
 4007 0d33 0C       		.byte	0xc
 4008 0d34 7F       		.byte	0x7f
 4009 0d35 00050000 		.4byte	0x500
 4010 0d39 05       		.uleb128 0x5
 4011 0d3a 03       		.byte	0x3
 4012 0d3b 00000000 		.4byte	alarmAppLED
 4013 0d3f 23       		.uleb128 0x23
 4014 0d40 C5020000 		.4byte	.LASF180
 4015 0d44 0C       		.byte	0xc
 4016 0d45 80       		.byte	0x80
 4017 0d46 81000000 		.4byte	0x81
 4018 0d4a 05       		.uleb128 0x5
 4019 0d4b 03       		.byte	0x3
 4020 0d4c 00000000 		.4byte	timeToAppLED
 4021 0d50 23       		.uleb128 0x23
 4022 0d51 B8070000 		.4byte	.LASF181
 4023 0d55 0C       		.byte	0xc
 4024 0d56 82       		.byte	0x82
 4025 0d57 00050000 		.4byte	0x500
 4026 0d5b 05       		.uleb128 0x5
 4027 0d5c 03       		.byte	0x3
 4028 0d5d 00000000 		.4byte	alarmLevelSensor
 4029 0d61 23       		.uleb128 0x23
 4030 0d62 00090000 		.4byte	.LASF182
 4031 0d66 0C       		.byte	0xc
 4032 0d67 83       		.byte	0x83
 4033 0d68 81000000 		.4byte	0x81
 4034 0d6c 05       		.uleb128 0x5
 4035 0d6d 03       		.byte	0x3
 4036 0d6e 00000000 		.4byte	timeToLevelSensor
 4037 0d72 23       		.uleb128 0x23
 4038 0d73 4F020000 		.4byte	.LASF183
 4039 0d77 0C       		.byte	0xc
 4040 0d78 85       		.byte	0x85
 4041 0d79 00050000 		.4byte	0x500
 4042 0d7d 05       		.uleb128 0x5
 4043 0d7e 03       		.byte	0x3
 4044 0d7f 00000000 		.4byte	alarmDownstreamLevelSensor
 4045 0d83 23       		.uleb128 0x23
 4046 0d84 63090000 		.4byte	.LASF184
 4047 0d88 0C       		.byte	0xc
 4048 0d89 86       		.byte	0x86
 4049 0d8a 81000000 		.4byte	0x81
 4050 0d8e 05       		.uleb128 0x5
 4051 0d8f 03       		.byte	0x3
 4052 0d90 00000000 		.4byte	timeToDownstreamLevelSensor
 4053 0d94 23       		.uleb128 0x23
 4054 0d95 26080000 		.4byte	.LASF185
 4055 0d99 0C       		.byte	0xc
 4056 0d9a 88       		.byte	0x88
 4057 0d9b 00050000 		.4byte	0x500
 4058 0d9f 05       		.uleb128 0x5
 4059 0da0 03       		.byte	0x3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 89


 4060 0da1 00000000 		.4byte	alarmValve
 4061 0da5 23       		.uleb128 0x23
 4062 0da6 40060000 		.4byte	.LASF186
 4063 0daa 0C       		.byte	0xc
 4064 0dab 89       		.byte	0x89
 4065 0dac 81000000 		.4byte	0x81
 4066 0db0 05       		.uleb128 0x5
 4067 0db1 03       		.byte	0x3
 4068 0db2 00000000 		.4byte	timeToValve
 4069 0db6 23       		.uleb128 0x23
 4070 0db7 89090000 		.4byte	.LASF187
 4071 0dbb 0C       		.byte	0xc
 4072 0dbc 8B       		.byte	0x8b
 4073 0dbd 00050000 		.4byte	0x500
 4074 0dc1 05       		.uleb128 0x5
 4075 0dc2 03       		.byte	0x3
 4076 0dc3 00000000 		.4byte	alarmAutosampler
 4077 0dc7 23       		.uleb128 0x23
 4078 0dc8 69000000 		.4byte	.LASF188
 4079 0dcc 0C       		.byte	0xc
 4080 0dcd 8C       		.byte	0x8c
 4081 0dce 81000000 		.4byte	0x81
 4082 0dd2 05       		.uleb128 0x5
 4083 0dd3 03       		.byte	0x3
 4084 0dd4 00000000 		.4byte	timeToAutosampler
 4085 0dd8 07       		.uleb128 0x7
 4086 0dd9 E3000000 		.4byte	0xe3
 4087 0ddd E80D0000 		.4byte	0xde8
 4088 0de1 08       		.uleb128 0x8
 4089 0de2 F1000000 		.4byte	0xf1
 4090 0de6 1D       		.byte	0x1d
 4091 0de7 00       		.byte	0
 4092 0de8 23       		.uleb128 0x23
 4093 0de9 7E060000 		.4byte	.LASF189
 4094 0ded 01       		.byte	0x1
 4095 0dee 1D       		.byte	0x1d
 4096 0def D80D0000 		.4byte	0xdd8
 4097 0df3 05       		.uleb128 0x5
 4098 0df4 03       		.byte	0x3
 4099 0df5 00000000 		.4byte	Data_fileName
 4100 0df9 23       		.uleb128 0x23
 4101 0dfa E5030000 		.4byte	.LASF98
 4102 0dfe 01       		.byte	0x1
 4103 0dff 1E       		.byte	0x1e
 4104 0e00 81000000 		.4byte	0x81
 4105 0e04 05       		.uleb128 0x5
 4106 0e05 03       		.byte	0x3
 4107 0e06 00000000 		.4byte	try_counter
 4108 0e0a 00       		.byte	0
 4109              		.section	.debug_abbrev,"",%progbits
 4110              	.Ldebug_abbrev0:
 4111 0000 01       		.uleb128 0x1
 4112 0001 11       		.uleb128 0x11
 4113 0002 01       		.byte	0x1
 4114 0003 25       		.uleb128 0x25
 4115 0004 0E       		.uleb128 0xe
 4116 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 90


 4117 0006 0B       		.uleb128 0xb
 4118 0007 03       		.uleb128 0x3
 4119 0008 0E       		.uleb128 0xe
 4120 0009 1B       		.uleb128 0x1b
 4121 000a 0E       		.uleb128 0xe
 4122 000b 55       		.uleb128 0x55
 4123 000c 17       		.uleb128 0x17
 4124 000d 11       		.uleb128 0x11
 4125 000e 01       		.uleb128 0x1
 4126 000f 10       		.uleb128 0x10
 4127 0010 17       		.uleb128 0x17
 4128 0011 00       		.byte	0
 4129 0012 00       		.byte	0
 4130 0013 02       		.uleb128 0x2
 4131 0014 24       		.uleb128 0x24
 4132 0015 00       		.byte	0
 4133 0016 0B       		.uleb128 0xb
 4134 0017 0B       		.uleb128 0xb
 4135 0018 3E       		.uleb128 0x3e
 4136 0019 0B       		.uleb128 0xb
 4137 001a 03       		.uleb128 0x3
 4138 001b 0E       		.uleb128 0xe
 4139 001c 00       		.byte	0
 4140 001d 00       		.byte	0
 4141 001e 03       		.uleb128 0x3
 4142 001f 16       		.uleb128 0x16
 4143 0020 00       		.byte	0
 4144 0021 03       		.uleb128 0x3
 4145 0022 0E       		.uleb128 0xe
 4146 0023 3A       		.uleb128 0x3a
 4147 0024 0B       		.uleb128 0xb
 4148 0025 3B       		.uleb128 0x3b
 4149 0026 0B       		.uleb128 0xb
 4150 0027 49       		.uleb128 0x49
 4151 0028 13       		.uleb128 0x13
 4152 0029 00       		.byte	0
 4153 002a 00       		.byte	0
 4154 002b 04       		.uleb128 0x4
 4155 002c 24       		.uleb128 0x24
 4156 002d 00       		.byte	0
 4157 002e 0B       		.uleb128 0xb
 4158 002f 0B       		.uleb128 0xb
 4159 0030 3E       		.uleb128 0x3e
 4160 0031 0B       		.uleb128 0xb
 4161 0032 03       		.uleb128 0x3
 4162 0033 08       		.uleb128 0x8
 4163 0034 00       		.byte	0
 4164 0035 00       		.byte	0
 4165 0036 05       		.uleb128 0x5
 4166 0037 16       		.uleb128 0x16
 4167 0038 00       		.byte	0
 4168 0039 03       		.uleb128 0x3
 4169 003a 0E       		.uleb128 0xe
 4170 003b 3A       		.uleb128 0x3a
 4171 003c 0B       		.uleb128 0xb
 4172 003d 3B       		.uleb128 0x3b
 4173 003e 05       		.uleb128 0x5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 91


 4174 003f 49       		.uleb128 0x49
 4175 0040 13       		.uleb128 0x13
 4176 0041 00       		.byte	0
 4177 0042 00       		.byte	0
 4178 0043 06       		.uleb128 0x6
 4179 0044 0F       		.uleb128 0xf
 4180 0045 00       		.byte	0
 4181 0046 0B       		.uleb128 0xb
 4182 0047 0B       		.uleb128 0xb
 4183 0048 49       		.uleb128 0x49
 4184 0049 13       		.uleb128 0x13
 4185 004a 00       		.byte	0
 4186 004b 00       		.byte	0
 4187 004c 07       		.uleb128 0x7
 4188 004d 01       		.uleb128 0x1
 4189 004e 01       		.byte	0x1
 4190 004f 49       		.uleb128 0x49
 4191 0050 13       		.uleb128 0x13
 4192 0051 01       		.uleb128 0x1
 4193 0052 13       		.uleb128 0x13
 4194 0053 00       		.byte	0
 4195 0054 00       		.byte	0
 4196 0055 08       		.uleb128 0x8
 4197 0056 21       		.uleb128 0x21
 4198 0057 00       		.byte	0
 4199 0058 49       		.uleb128 0x49
 4200 0059 13       		.uleb128 0x13
 4201 005a 2F       		.uleb128 0x2f
 4202 005b 0B       		.uleb128 0xb
 4203 005c 00       		.byte	0
 4204 005d 00       		.byte	0
 4205 005e 09       		.uleb128 0x9
 4206 005f 13       		.uleb128 0x13
 4207 0060 01       		.byte	0x1
 4208 0061 0B       		.uleb128 0xb
 4209 0062 0B       		.uleb128 0xb
 4210 0063 3A       		.uleb128 0x3a
 4211 0064 0B       		.uleb128 0xb
 4212 0065 3B       		.uleb128 0x3b
 4213 0066 0B       		.uleb128 0xb
 4214 0067 01       		.uleb128 0x1
 4215 0068 13       		.uleb128 0x13
 4216 0069 00       		.byte	0
 4217 006a 00       		.byte	0
 4218 006b 0A       		.uleb128 0xa
 4219 006c 0D       		.uleb128 0xd
 4220 006d 00       		.byte	0
 4221 006e 03       		.uleb128 0x3
 4222 006f 08       		.uleb128 0x8
 4223 0070 3A       		.uleb128 0x3a
 4224 0071 0B       		.uleb128 0xb
 4225 0072 3B       		.uleb128 0x3b
 4226 0073 0B       		.uleb128 0xb
 4227 0074 49       		.uleb128 0x49
 4228 0075 13       		.uleb128 0x13
 4229 0076 38       		.uleb128 0x38
 4230 0077 0B       		.uleb128 0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 92


 4231 0078 00       		.byte	0
 4232 0079 00       		.byte	0
 4233 007a 0B       		.uleb128 0xb
 4234 007b 0D       		.uleb128 0xd
 4235 007c 00       		.byte	0
 4236 007d 03       		.uleb128 0x3
 4237 007e 0E       		.uleb128 0xe
 4238 007f 3A       		.uleb128 0x3a
 4239 0080 0B       		.uleb128 0xb
 4240 0081 3B       		.uleb128 0x3b
 4241 0082 0B       		.uleb128 0xb
 4242 0083 49       		.uleb128 0x49
 4243 0084 13       		.uleb128 0x13
 4244 0085 38       		.uleb128 0x38
 4245 0086 0B       		.uleb128 0xb
 4246 0087 00       		.byte	0
 4247 0088 00       		.byte	0
 4248 0089 0C       		.uleb128 0xc
 4249 008a 35       		.uleb128 0x35
 4250 008b 00       		.byte	0
 4251 008c 49       		.uleb128 0x49
 4252 008d 13       		.uleb128 0x13
 4253 008e 00       		.byte	0
 4254 008f 00       		.byte	0
 4255 0090 0D       		.uleb128 0xd
 4256 0091 13       		.uleb128 0x13
 4257 0092 01       		.byte	0x1
 4258 0093 0B       		.uleb128 0xb
 4259 0094 05       		.uleb128 0x5
 4260 0095 3A       		.uleb128 0x3a
 4261 0096 0B       		.uleb128 0xb
 4262 0097 3B       		.uleb128 0x3b
 4263 0098 0B       		.uleb128 0xb
 4264 0099 01       		.uleb128 0x1
 4265 009a 13       		.uleb128 0x13
 4266 009b 00       		.byte	0
 4267 009c 00       		.byte	0
 4268 009d 0E       		.uleb128 0xe
 4269 009e 13       		.uleb128 0x13
 4270 009f 01       		.byte	0x1
 4271 00a0 03       		.uleb128 0x3
 4272 00a1 08       		.uleb128 0x8
 4273 00a2 0B       		.uleb128 0xb
 4274 00a3 0B       		.uleb128 0xb
 4275 00a4 3A       		.uleb128 0x3a
 4276 00a5 0B       		.uleb128 0xb
 4277 00a6 3B       		.uleb128 0x3b
 4278 00a7 0B       		.uleb128 0xb
 4279 00a8 01       		.uleb128 0x1
 4280 00a9 13       		.uleb128 0x13
 4281 00aa 00       		.byte	0
 4282 00ab 00       		.byte	0
 4283 00ac 0F       		.uleb128 0xf
 4284 00ad 2E       		.uleb128 0x2e
 4285 00ae 00       		.byte	0
 4286 00af 3F       		.uleb128 0x3f
 4287 00b0 19       		.uleb128 0x19
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 93


 4288 00b1 03       		.uleb128 0x3
 4289 00b2 0E       		.uleb128 0xe
 4290 00b3 3A       		.uleb128 0x3a
 4291 00b4 0B       		.uleb128 0xb
 4292 00b5 3B       		.uleb128 0x3b
 4293 00b6 0B       		.uleb128 0xb
 4294 00b7 27       		.uleb128 0x27
 4295 00b8 19       		.uleb128 0x19
 4296 00b9 11       		.uleb128 0x11
 4297 00ba 01       		.uleb128 0x1
 4298 00bb 12       		.uleb128 0x12
 4299 00bc 06       		.uleb128 0x6
 4300 00bd 40       		.uleb128 0x40
 4301 00be 18       		.uleb128 0x18
 4302 00bf 9642     		.uleb128 0x2116
 4303 00c1 19       		.uleb128 0x19
 4304 00c2 00       		.byte	0
 4305 00c3 00       		.byte	0
 4306 00c4 10       		.uleb128 0x10
 4307 00c5 2E       		.uleb128 0x2e
 4308 00c6 01       		.byte	0x1
 4309 00c7 3F       		.uleb128 0x3f
 4310 00c8 19       		.uleb128 0x19
 4311 00c9 03       		.uleb128 0x3
 4312 00ca 0E       		.uleb128 0xe
 4313 00cb 3A       		.uleb128 0x3a
 4314 00cc 0B       		.uleb128 0xb
 4315 00cd 3B       		.uleb128 0x3b
 4316 00ce 0B       		.uleb128 0xb
 4317 00cf 11       		.uleb128 0x11
 4318 00d0 01       		.uleb128 0x1
 4319 00d1 12       		.uleb128 0x12
 4320 00d2 06       		.uleb128 0x6
 4321 00d3 40       		.uleb128 0x40
 4322 00d4 18       		.uleb128 0x18
 4323 00d5 9642     		.uleb128 0x2116
 4324 00d7 19       		.uleb128 0x19
 4325 00d8 01       		.uleb128 0x1
 4326 00d9 13       		.uleb128 0x13
 4327 00da 00       		.byte	0
 4328 00db 00       		.byte	0
 4329 00dc 11       		.uleb128 0x11
 4330 00dd 34       		.uleb128 0x34
 4331 00de 00       		.byte	0
 4332 00df 03       		.uleb128 0x3
 4333 00e0 0E       		.uleb128 0xe
 4334 00e1 3A       		.uleb128 0x3a
 4335 00e2 0B       		.uleb128 0xb
 4336 00e3 3B       		.uleb128 0x3b
 4337 00e4 0B       		.uleb128 0xb
 4338 00e5 49       		.uleb128 0x49
 4339 00e6 13       		.uleb128 0x13
 4340 00e7 02       		.uleb128 0x2
 4341 00e8 18       		.uleb128 0x18
 4342 00e9 00       		.byte	0
 4343 00ea 00       		.byte	0
 4344 00eb 12       		.uleb128 0x12
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 94


 4345 00ec 2E       		.uleb128 0x2e
 4346 00ed 01       		.byte	0x1
 4347 00ee 3F       		.uleb128 0x3f
 4348 00ef 19       		.uleb128 0x19
 4349 00f0 03       		.uleb128 0x3
 4350 00f1 0E       		.uleb128 0xe
 4351 00f2 3A       		.uleb128 0x3a
 4352 00f3 0B       		.uleb128 0xb
 4353 00f4 3B       		.uleb128 0x3b
 4354 00f5 0B       		.uleb128 0xb
 4355 00f6 49       		.uleb128 0x49
 4356 00f7 13       		.uleb128 0x13
 4357 00f8 11       		.uleb128 0x11
 4358 00f9 01       		.uleb128 0x1
 4359 00fa 12       		.uleb128 0x12
 4360 00fb 06       		.uleb128 0x6
 4361 00fc 40       		.uleb128 0x40
 4362 00fd 18       		.uleb128 0x18
 4363 00fe 9642     		.uleb128 0x2116
 4364 0100 19       		.uleb128 0x19
 4365 0101 01       		.uleb128 0x1
 4366 0102 13       		.uleb128 0x13
 4367 0103 00       		.byte	0
 4368 0104 00       		.byte	0
 4369 0105 13       		.uleb128 0x13
 4370 0106 2E       		.uleb128 0x2e
 4371 0107 00       		.byte	0
 4372 0108 3F       		.uleb128 0x3f
 4373 0109 19       		.uleb128 0x19
 4374 010a 03       		.uleb128 0x3
 4375 010b 0E       		.uleb128 0xe
 4376 010c 3A       		.uleb128 0x3a
 4377 010d 0B       		.uleb128 0xb
 4378 010e 3B       		.uleb128 0x3b
 4379 010f 0B       		.uleb128 0xb
 4380 0110 11       		.uleb128 0x11
 4381 0111 01       		.uleb128 0x1
 4382 0112 12       		.uleb128 0x12
 4383 0113 06       		.uleb128 0x6
 4384 0114 40       		.uleb128 0x40
 4385 0115 18       		.uleb128 0x18
 4386 0116 9642     		.uleb128 0x2116
 4387 0118 19       		.uleb128 0x19
 4388 0119 00       		.byte	0
 4389 011a 00       		.byte	0
 4390 011b 14       		.uleb128 0x14
 4391 011c 2E       		.uleb128 0x2e
 4392 011d 01       		.byte	0x1
 4393 011e 3F       		.uleb128 0x3f
 4394 011f 19       		.uleb128 0x19
 4395 0120 03       		.uleb128 0x3
 4396 0121 0E       		.uleb128 0xe
 4397 0122 3A       		.uleb128 0x3a
 4398 0123 0B       		.uleb128 0xb
 4399 0124 3B       		.uleb128 0x3b
 4400 0125 0B       		.uleb128 0xb
 4401 0126 27       		.uleb128 0x27
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 95


 4402 0127 19       		.uleb128 0x19
 4403 0128 11       		.uleb128 0x11
 4404 0129 01       		.uleb128 0x1
 4405 012a 12       		.uleb128 0x12
 4406 012b 06       		.uleb128 0x6
 4407 012c 40       		.uleb128 0x40
 4408 012d 18       		.uleb128 0x18
 4409 012e 9642     		.uleb128 0x2116
 4410 0130 19       		.uleb128 0x19
 4411 0131 01       		.uleb128 0x1
 4412 0132 13       		.uleb128 0x13
 4413 0133 00       		.byte	0
 4414 0134 00       		.byte	0
 4415 0135 15       		.uleb128 0x15
 4416 0136 05       		.uleb128 0x5
 4417 0137 00       		.byte	0
 4418 0138 03       		.uleb128 0x3
 4419 0139 0E       		.uleb128 0xe
 4420 013a 3A       		.uleb128 0x3a
 4421 013b 0B       		.uleb128 0xb
 4422 013c 3B       		.uleb128 0x3b
 4423 013d 0B       		.uleb128 0xb
 4424 013e 49       		.uleb128 0x49
 4425 013f 13       		.uleb128 0x13
 4426 0140 02       		.uleb128 0x2
 4427 0141 18       		.uleb128 0x18
 4428 0142 00       		.byte	0
 4429 0143 00       		.byte	0
 4430 0144 16       		.uleb128 0x16
 4431 0145 2E       		.uleb128 0x2e
 4432 0146 01       		.byte	0x1
 4433 0147 3F       		.uleb128 0x3f
 4434 0148 19       		.uleb128 0x19
 4435 0149 03       		.uleb128 0x3
 4436 014a 0E       		.uleb128 0xe
 4437 014b 3A       		.uleb128 0x3a
 4438 014c 0B       		.uleb128 0xb
 4439 014d 3B       		.uleb128 0x3b
 4440 014e 05       		.uleb128 0x5
 4441 014f 27       		.uleb128 0x27
 4442 0150 19       		.uleb128 0x19
 4443 0151 49       		.uleb128 0x49
 4444 0152 13       		.uleb128 0x13
 4445 0153 11       		.uleb128 0x11
 4446 0154 01       		.uleb128 0x1
 4447 0155 12       		.uleb128 0x12
 4448 0156 06       		.uleb128 0x6
 4449 0157 40       		.uleb128 0x40
 4450 0158 18       		.uleb128 0x18
 4451 0159 9642     		.uleb128 0x2116
 4452 015b 19       		.uleb128 0x19
 4453 015c 01       		.uleb128 0x1
 4454 015d 13       		.uleb128 0x13
 4455 015e 00       		.byte	0
 4456 015f 00       		.byte	0
 4457 0160 17       		.uleb128 0x17
 4458 0161 05       		.uleb128 0x5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 96


 4459 0162 00       		.byte	0
 4460 0163 03       		.uleb128 0x3
 4461 0164 0E       		.uleb128 0xe
 4462 0165 3A       		.uleb128 0x3a
 4463 0166 0B       		.uleb128 0xb
 4464 0167 3B       		.uleb128 0x3b
 4465 0168 05       		.uleb128 0x5
 4466 0169 49       		.uleb128 0x49
 4467 016a 13       		.uleb128 0x13
 4468 016b 02       		.uleb128 0x2
 4469 016c 18       		.uleb128 0x18
 4470 016d 00       		.byte	0
 4471 016e 00       		.byte	0
 4472 016f 18       		.uleb128 0x18
 4473 0170 2E       		.uleb128 0x2e
 4474 0171 01       		.byte	0x1
 4475 0172 3F       		.uleb128 0x3f
 4476 0173 19       		.uleb128 0x19
 4477 0174 03       		.uleb128 0x3
 4478 0175 0E       		.uleb128 0xe
 4479 0176 3A       		.uleb128 0x3a
 4480 0177 0B       		.uleb128 0xb
 4481 0178 3B       		.uleb128 0x3b
 4482 0179 05       		.uleb128 0x5
 4483 017a 27       		.uleb128 0x27
 4484 017b 19       		.uleb128 0x19
 4485 017c 11       		.uleb128 0x11
 4486 017d 01       		.uleb128 0x1
 4487 017e 12       		.uleb128 0x12
 4488 017f 06       		.uleb128 0x6
 4489 0180 40       		.uleb128 0x40
 4490 0181 18       		.uleb128 0x18
 4491 0182 9742     		.uleb128 0x2117
 4492 0184 19       		.uleb128 0x19
 4493 0185 01       		.uleb128 0x1
 4494 0186 13       		.uleb128 0x13
 4495 0187 00       		.byte	0
 4496 0188 00       		.byte	0
 4497 0189 19       		.uleb128 0x19
 4498 018a 2E       		.uleb128 0x2e
 4499 018b 01       		.byte	0x1
 4500 018c 3F       		.uleb128 0x3f
 4501 018d 19       		.uleb128 0x19
 4502 018e 03       		.uleb128 0x3
 4503 018f 0E       		.uleb128 0xe
 4504 0190 3A       		.uleb128 0x3a
 4505 0191 0B       		.uleb128 0xb
 4506 0192 3B       		.uleb128 0x3b
 4507 0193 05       		.uleb128 0x5
 4508 0194 27       		.uleb128 0x27
 4509 0195 19       		.uleb128 0x19
 4510 0196 49       		.uleb128 0x49
 4511 0197 13       		.uleb128 0x13
 4512 0198 11       		.uleb128 0x11
 4513 0199 01       		.uleb128 0x1
 4514 019a 12       		.uleb128 0x12
 4515 019b 06       		.uleb128 0x6
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 97


 4516 019c 40       		.uleb128 0x40
 4517 019d 18       		.uleb128 0x18
 4518 019e 9742     		.uleb128 0x2117
 4519 01a0 19       		.uleb128 0x19
 4520 01a1 01       		.uleb128 0x1
 4521 01a2 13       		.uleb128 0x13
 4522 01a3 00       		.byte	0
 4523 01a4 00       		.byte	0
 4524 01a5 1A       		.uleb128 0x1a
 4525 01a6 34       		.uleb128 0x34
 4526 01a7 00       		.byte	0
 4527 01a8 03       		.uleb128 0x3
 4528 01a9 0E       		.uleb128 0xe
 4529 01aa 3A       		.uleb128 0x3a
 4530 01ab 0B       		.uleb128 0xb
 4531 01ac 3B       		.uleb128 0x3b
 4532 01ad 05       		.uleb128 0x5
 4533 01ae 49       		.uleb128 0x49
 4534 01af 13       		.uleb128 0x13
 4535 01b0 02       		.uleb128 0x2
 4536 01b1 18       		.uleb128 0x18
 4537 01b2 00       		.byte	0
 4538 01b3 00       		.byte	0
 4539 01b4 1B       		.uleb128 0x1b
 4540 01b5 2E       		.uleb128 0x2e
 4541 01b6 01       		.byte	0x1
 4542 01b7 3F       		.uleb128 0x3f
 4543 01b8 19       		.uleb128 0x19
 4544 01b9 03       		.uleb128 0x3
 4545 01ba 0E       		.uleb128 0xe
 4546 01bb 3A       		.uleb128 0x3a
 4547 01bc 0B       		.uleb128 0xb
 4548 01bd 3B       		.uleb128 0x3b
 4549 01be 05       		.uleb128 0x5
 4550 01bf 11       		.uleb128 0x11
 4551 01c0 01       		.uleb128 0x1
 4552 01c1 12       		.uleb128 0x12
 4553 01c2 06       		.uleb128 0x6
 4554 01c3 40       		.uleb128 0x40
 4555 01c4 18       		.uleb128 0x18
 4556 01c5 9642     		.uleb128 0x2116
 4557 01c7 19       		.uleb128 0x19
 4558 01c8 01       		.uleb128 0x1
 4559 01c9 13       		.uleb128 0x13
 4560 01ca 00       		.byte	0
 4561 01cb 00       		.byte	0
 4562 01cc 1C       		.uleb128 0x1c
 4563 01cd 2E       		.uleb128 0x2e
 4564 01ce 00       		.byte	0
 4565 01cf 3F       		.uleb128 0x3f
 4566 01d0 19       		.uleb128 0x19
 4567 01d1 03       		.uleb128 0x3
 4568 01d2 0E       		.uleb128 0xe
 4569 01d3 3A       		.uleb128 0x3a
 4570 01d4 0B       		.uleb128 0xb
 4571 01d5 3B       		.uleb128 0x3b
 4572 01d6 05       		.uleb128 0x5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 98


 4573 01d7 27       		.uleb128 0x27
 4574 01d8 19       		.uleb128 0x19
 4575 01d9 49       		.uleb128 0x49
 4576 01da 13       		.uleb128 0x13
 4577 01db 11       		.uleb128 0x11
 4578 01dc 01       		.uleb128 0x1
 4579 01dd 12       		.uleb128 0x12
 4580 01de 06       		.uleb128 0x6
 4581 01df 40       		.uleb128 0x40
 4582 01e0 18       		.uleb128 0x18
 4583 01e1 9642     		.uleb128 0x2116
 4584 01e3 19       		.uleb128 0x19
 4585 01e4 00       		.byte	0
 4586 01e5 00       		.byte	0
 4587 01e6 1D       		.uleb128 0x1d
 4588 01e7 2E       		.uleb128 0x2e
 4589 01e8 01       		.byte	0x1
 4590 01e9 3F       		.uleb128 0x3f
 4591 01ea 19       		.uleb128 0x19
 4592 01eb 03       		.uleb128 0x3
 4593 01ec 0E       		.uleb128 0xe
 4594 01ed 3A       		.uleb128 0x3a
 4595 01ee 0B       		.uleb128 0xb
 4596 01ef 3B       		.uleb128 0x3b
 4597 01f0 05       		.uleb128 0x5
 4598 01f1 49       		.uleb128 0x49
 4599 01f2 13       		.uleb128 0x13
 4600 01f3 11       		.uleb128 0x11
 4601 01f4 01       		.uleb128 0x1
 4602 01f5 12       		.uleb128 0x12
 4603 01f6 06       		.uleb128 0x6
 4604 01f7 40       		.uleb128 0x40
 4605 01f8 18       		.uleb128 0x18
 4606 01f9 9642     		.uleb128 0x2116
 4607 01fb 19       		.uleb128 0x19
 4608 01fc 01       		.uleb128 0x1
 4609 01fd 13       		.uleb128 0x13
 4610 01fe 00       		.byte	0
 4611 01ff 00       		.byte	0
 4612 0200 1E       		.uleb128 0x1e
 4613 0201 0B       		.uleb128 0xb
 4614 0202 01       		.byte	0x1
 4615 0203 11       		.uleb128 0x11
 4616 0204 01       		.uleb128 0x1
 4617 0205 12       		.uleb128 0x12
 4618 0206 06       		.uleb128 0x6
 4619 0207 00       		.byte	0
 4620 0208 00       		.byte	0
 4621 0209 1F       		.uleb128 0x1f
 4622 020a 0B       		.uleb128 0xb
 4623 020b 01       		.byte	0x1
 4624 020c 11       		.uleb128 0x11
 4625 020d 01       		.uleb128 0x1
 4626 020e 12       		.uleb128 0x12
 4627 020f 06       		.uleb128 0x6
 4628 0210 01       		.uleb128 0x1
 4629 0211 13       		.uleb128 0x13
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 99


 4630 0212 00       		.byte	0
 4631 0213 00       		.byte	0
 4632 0214 20       		.uleb128 0x20
 4633 0215 21       		.uleb128 0x21
 4634 0216 00       		.byte	0
 4635 0217 49       		.uleb128 0x49
 4636 0218 13       		.uleb128 0x13
 4637 0219 2F       		.uleb128 0x2f
 4638 021a 05       		.uleb128 0x5
 4639 021b 00       		.byte	0
 4640 021c 00       		.byte	0
 4641 021d 21       		.uleb128 0x21
 4642 021e 34       		.uleb128 0x34
 4643 021f 00       		.byte	0
 4644 0220 03       		.uleb128 0x3
 4645 0221 08       		.uleb128 0x8
 4646 0222 3A       		.uleb128 0x3a
 4647 0223 0B       		.uleb128 0xb
 4648 0224 3B       		.uleb128 0x3b
 4649 0225 05       		.uleb128 0x5
 4650 0226 49       		.uleb128 0x49
 4651 0227 13       		.uleb128 0x13
 4652 0228 02       		.uleb128 0x2
 4653 0229 18       		.uleb128 0x18
 4654 022a 00       		.byte	0
 4655 022b 00       		.byte	0
 4656 022c 22       		.uleb128 0x22
 4657 022d 34       		.uleb128 0x34
 4658 022e 00       		.byte	0
 4659 022f 03       		.uleb128 0x3
 4660 0230 0E       		.uleb128 0xe
 4661 0231 3A       		.uleb128 0x3a
 4662 0232 0B       		.uleb128 0xb
 4663 0233 3B       		.uleb128 0x3b
 4664 0234 05       		.uleb128 0x5
 4665 0235 49       		.uleb128 0x49
 4666 0236 13       		.uleb128 0x13
 4667 0237 3F       		.uleb128 0x3f
 4668 0238 19       		.uleb128 0x19
 4669 0239 3C       		.uleb128 0x3c
 4670 023a 19       		.uleb128 0x19
 4671 023b 00       		.byte	0
 4672 023c 00       		.byte	0
 4673 023d 23       		.uleb128 0x23
 4674 023e 34       		.uleb128 0x34
 4675 023f 00       		.byte	0
 4676 0240 03       		.uleb128 0x3
 4677 0241 0E       		.uleb128 0xe
 4678 0242 3A       		.uleb128 0x3a
 4679 0243 0B       		.uleb128 0xb
 4680 0244 3B       		.uleb128 0x3b
 4681 0245 0B       		.uleb128 0xb
 4682 0246 49       		.uleb128 0x49
 4683 0247 13       		.uleb128 0x13
 4684 0248 3F       		.uleb128 0x3f
 4685 0249 19       		.uleb128 0x19
 4686 024a 02       		.uleb128 0x2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 100


 4687 024b 18       		.uleb128 0x18
 4688 024c 00       		.byte	0
 4689 024d 00       		.byte	0
 4690 024e 24       		.uleb128 0x24
 4691 024f 34       		.uleb128 0x34
 4692 0250 00       		.byte	0
 4693 0251 03       		.uleb128 0x3
 4694 0252 08       		.uleb128 0x8
 4695 0253 3A       		.uleb128 0x3a
 4696 0254 0B       		.uleb128 0xb
 4697 0255 3B       		.uleb128 0x3b
 4698 0256 0B       		.uleb128 0xb
 4699 0257 49       		.uleb128 0x49
 4700 0258 13       		.uleb128 0x13
 4701 0259 3F       		.uleb128 0x3f
 4702 025a 19       		.uleb128 0x19
 4703 025b 02       		.uleb128 0x2
 4704 025c 18       		.uleb128 0x18
 4705 025d 00       		.byte	0
 4706 025e 00       		.byte	0
 4707 025f 00       		.byte	0
 4708              		.section	.debug_aranges,"",%progbits
 4709 0000 8C000000 		.4byte	0x8c
 4710 0004 0200     		.2byte	0x2
 4711 0006 00000000 		.4byte	.Ldebug_info0
 4712 000a 04       		.byte	0x4
 4713 000b 00       		.byte	0
 4714 000c 0000     		.2byte	0
 4715 000e 0000     		.2byte	0
 4716 0010 00000000 		.4byte	.LFB64
 4717 0014 0C000000 		.4byte	.LFE64-.LFB64
 4718 0018 00000000 		.4byte	.LFB65
 4719 001c B0010000 		.4byte	.LFE65-.LFB65
 4720 0020 00000000 		.4byte	.LFB66
 4721 0024 18010000 		.4byte	.LFE66-.LFB66
 4722 0028 00000000 		.4byte	.LFB67
 4723 002c 2A000000 		.4byte	.LFE67-.LFB67
 4724 0030 00000000 		.4byte	.LFB68
 4725 0034 C8000000 		.4byte	.LFE68-.LFB68
 4726 0038 00000000 		.4byte	.LFB69
 4727 003c 48000000 		.4byte	.LFE69-.LFB69
 4728 0040 00000000 		.4byte	.LFB70
 4729 0044 1E000000 		.4byte	.LFE70-.LFB70
 4730 0048 00000000 		.4byte	.LFB71
 4731 004c 46000000 		.4byte	.LFE71-.LFB71
 4732 0050 00000000 		.4byte	.LFB72
 4733 0054 2C010000 		.4byte	.LFE72-.LFB72
 4734 0058 00000000 		.4byte	.LFB73
 4735 005c 1E000000 		.4byte	.LFE73-.LFB73
 4736 0060 00000000 		.4byte	.LFB74
 4737 0064 5C040000 		.4byte	.LFE74-.LFB74
 4738 0068 00000000 		.4byte	.LFB75
 4739 006c 44000000 		.4byte	.LFE75-.LFB75
 4740 0070 00000000 		.4byte	.LFB76
 4741 0074 A4020000 		.4byte	.LFE76-.LFB76
 4742 0078 00000000 		.4byte	.LFB77
 4743 007c 74000000 		.4byte	.LFE77-.LFB77
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 101


 4744 0080 00000000 		.4byte	.LFB78
 4745 0084 38010000 		.4byte	.LFE78-.LFB78
 4746 0088 00000000 		.4byte	0
 4747 008c 00000000 		.4byte	0
 4748              		.section	.debug_ranges,"",%progbits
 4749              	.Ldebug_ranges0:
 4750 0000 00000000 		.4byte	.LFB64
 4751 0004 0C000000 		.4byte	.LFE64
 4752 0008 00000000 		.4byte	.LFB65
 4753 000c B0010000 		.4byte	.LFE65
 4754 0010 00000000 		.4byte	.LFB66
 4755 0014 18010000 		.4byte	.LFE66
 4756 0018 00000000 		.4byte	.LFB67
 4757 001c 2A000000 		.4byte	.LFE67
 4758 0020 00000000 		.4byte	.LFB68
 4759 0024 C8000000 		.4byte	.LFE68
 4760 0028 00000000 		.4byte	.LFB69
 4761 002c 48000000 		.4byte	.LFE69
 4762 0030 00000000 		.4byte	.LFB70
 4763 0034 1E000000 		.4byte	.LFE70
 4764 0038 00000000 		.4byte	.LFB71
 4765 003c 46000000 		.4byte	.LFE71
 4766 0040 00000000 		.4byte	.LFB72
 4767 0044 2C010000 		.4byte	.LFE72
 4768 0048 00000000 		.4byte	.LFB73
 4769 004c 1E000000 		.4byte	.LFE73
 4770 0050 00000000 		.4byte	.LFB74
 4771 0054 5C040000 		.4byte	.LFE74
 4772 0058 00000000 		.4byte	.LFB75
 4773 005c 44000000 		.4byte	.LFE75
 4774 0060 00000000 		.4byte	.LFB76
 4775 0064 A4020000 		.4byte	.LFE76
 4776 0068 00000000 		.4byte	.LFB77
 4777 006c 74000000 		.4byte	.LFE77
 4778 0070 00000000 		.4byte	.LFB78
 4779 0074 38010000 		.4byte	.LFE78
 4780 0078 00000000 		.4byte	0
 4781 007c 00000000 		.4byte	0
 4782              		.section	.debug_line,"",%progbits
 4783              	.Ldebug_line0:
 4784 0000 B0040000 		.section	.debug_str,"MS",%progbits,1
 4784      02006102 
 4784      00000201 
 4784      FB0E0D00 
 4784      01010101 
 4785              	.LASF116:
 4786 0000 745F6D6F 		.ascii	"t_modem\000"
 4786      64656D00 
 4787              	.LASF12:
 4788 0008 75696E74 		.ascii	"uint16\000"
 4788      313600
 4789              	.LASF47:
 4790 000f 746D5F68 		.ascii	"tm_hour\000"
 4790      6F757200 
 4791              	.LASF84:
 4792 0017 6E756D5F 		.ascii	"num_invalid_readings\000"
 4792      696E7661 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 102


 4792      6C69645F 
 4792      72656164 
 4792      696E6773 
 4793              	.LASF149:
 4794 002c 62756666 		.ascii	"buffer_overflow\000"
 4794      65725F6F 
 4794      76657266 
 4794      6C6F7700 
 4795              	.LASF147:
 4796 003c 66696C65 		.ascii	"fileName\000"
 4796      4E616D65 
 4796      00
 4797              	.LASF0:
 4798 0045 7369676E 		.ascii	"signed char\000"
 4798      65642063 
 4798      68617200 
 4799              	.LASF89:
 4800 0051 636F756E 		.ascii	"countDownResetCondition\000"
 4800      74446F77 
 4800      6E526573 
 4800      6574436F 
 4800      6E646974 
 4801              	.LASF188:
 4802 0069 74696D65 		.ascii	"timeToAutosampler\000"
 4802      546F4175 
 4802      746F7361 
 4802      6D706C65 
 4802      7200
 4803              	.LASF164:
 4804 007b 76616C76 		.ascii	"valve_type\000"
 4804      655F7479 
 4804      706500
 4805              	.LASF193:
 4806 0086 57616B65 		.ascii	"Wakeup_ISR\000"
 4806      75705F49 
 4806      535200
 4807              	.LASF190:
 4808 0091 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4808      43313120 
 4808      352E342E 
 4808      31203230 
 4808      31363036 
 4809 00c4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4809      20726576 
 4809      6973696F 
 4809      6E203233 
 4809      37373135 
 4810 00f7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4810      66756E63 
 4810      74696F6E 
 4810      2D736563 
 4810      74696F6E 
 4811              	.LASF114:
 4812 011f 745F7072 		.ascii	"t_pressure\000"
 4812      65737375 
 4812      726500
 4813              	.LASF27:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 103


 4814 012a 4D6F6E74 		.ascii	"Month\000"
 4814      6800
 4815              	.LASF7:
 4816 0130 6C6F6E67 		.ascii	"long long unsigned int\000"
 4816      206C6F6E 
 4816      6720756E 
 4816      7369676E 
 4816      65642069 
 4817              	.LASF23:
 4818 0147 486F7572 		.ascii	"Hour\000"
 4818      00
 4819              	.LASF155:
 4820 014c 6D6F6465 		.ascii	"modem_stats\000"
 4820      6D5F7374 
 4820      61747300 
 4821              	.LASF153:
 4822 0158 6D6F6465 		.ascii	"modem_state\000"
 4822      6D5F7374 
 4822      61746500 
 4823              	.LASF174:
 4824 0164 616C6172 		.ascii	"alarmMeasure\000"
 4824      6D4D6561 
 4824      73757265 
 4824      00
 4825              	.LASF148:
 4826 0171 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4826      52784275 
 4826      66666572 
 4826      00
 4827              	.LASF111:
 4828 017e 745F6C65 		.ascii	"t_level_sensor\000"
 4828      76656C5F 
 4828      73656E73 
 4828      6F7200
 4829              	.LASF167:
 4830 018d 6175746F 		.ascii	"autosampler_enabled\000"
 4830      73616D70 
 4830      6C65725F 
 4830      656E6162 
 4830      6C656400 
 4831              	.LASF6:
 4832 01a1 6C6F6E67 		.ascii	"long long int\000"
 4832      206C6F6E 
 4832      6720696E 
 4832      7400
 4833              	.LASF125:
 4834 01af 7061636B 		.ascii	"packets\000"
 4834      65747300 
 4835              	.LASF63:
 4836 01b7 65636E6F 		.ascii	"ecno\000"
 4836      00
 4837              	.LASF175:
 4838 01bc 74696D65 		.ascii	"timeToMeasure\000"
 4838      546F4D65 
 4838      61737572 
 4838      6500
 4839              	.LASF66:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 104


 4840 01ca 74696D65 		.ascii	"time_to_network_connect\000"
 4840      5F746F5F 
 4840      6E657477 
 4840      6F726B5F 
 4840      636F6E6E 
 4841              	.LASF177:
 4842 01e2 74696D65 		.ascii	"timeToSync\000"
 4842      546F5379 
 4842      6E6300
 4843              	.LASF35:
 4844 01ed 766F6C74 		.ascii	"voltage_solar\000"
 4844      6167655F 
 4844      736F6C61 
 4844      7200
 4845              	.LASF36:
 4846 01fb 766F6C74 		.ascii	"voltage_charge_current\000"
 4846      6167655F 
 4846      63686172 
 4846      67655F63 
 4846      75727265 
 4847              	.LASF146:
 4848 0212 75706772 		.ascii	"upgrade_status\000"
 4848      6164655F 
 4848      73746174 
 4848      757300
 4849              	.LASF163:
 4850 0221 76616C76 		.ascii	"valve_diameter\000"
 4850      655F6469 
 4850      616D6574 
 4850      657200
 4851              	.LASF128:
 4852 0230 635F6461 		.ascii	"c_data_count_sent\000"
 4852      74615F63 
 4852      6F756E74 
 4852      5F73656E 
 4852      7400
 4853              	.LASF60:
 4854 0242 6D6F6465 		.ascii	"modem_info_t\000"
 4854      6D5F696E 
 4854      666F5F74 
 4854      00
 4855              	.LASF183:
 4856 024f 616C6172 		.ascii	"alarmDownstreamLevelSensor\000"
 4856      6D446F77 
 4856      6E737472 
 4856      65616D4C 
 4856      6576656C 
 4857              	.LASF61:
 4858 026a 72786C65 		.ascii	"rxlev\000"
 4858      7600
 4859              	.LASF4:
 4860 0270 6C6F6E67 		.ascii	"long int\000"
 4860      20696E74 
 4860      00
 4861              	.LASF67:
 4862 0279 74696D65 		.ascii	"time_to_acquire_ip\000"
 4862      5F746F5F 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 105


 4862      61637175 
 4862      6972655F 
 4862      697000
 4863              	.LASF90:
 4864 028c 616C6172 		.ascii	"alarm\000"
 4864      6D00
 4865              	.LASF41:
 4866 0292 70726573 		.ascii	"pressure_voltage_off\000"
 4866      73757265 
 4866      5F766F6C 
 4866      74616765 
 4866      5F6F6666 
 4867              	.LASF11:
 4868 02a7 75696E74 		.ascii	"uint8\000"
 4868      3800
 4869              	.LASF120:
 4870 02ad 635F7472 		.ascii	"c_try_counter\000"
 4870      795F636F 
 4870      756E7465 
 4870      7200
 4871              	.LASF131:
 4872 02bb 73656E64 		.ascii	"send_time\000"
 4872      5F74696D 
 4872      6500
 4873              	.LASF180:
 4874 02c5 74696D65 		.ascii	"timeToAppLED\000"
 4874      546F4170 
 4874      704C4544 
 4874      00
 4875              	.LASF16:
 4876 02d2 696E7433 		.ascii	"int32\000"
 4876      3200
 4877              	.LASF69:
 4878 02d8 6E6F6465 		.ascii	"node_type\000"
 4878      5F747970 
 4878      6500
 4879              	.LASF117:
 4880 02e2 73796E63 		.ascii	"syncData\000"
 4880      44617461 
 4880      00
 4881              	.LASF126:
 4882 02eb 6E657477 		.ascii	"network_time\000"
 4882      6F726B5F 
 4882      74696D65 
 4882      00
 4883              	.LASF13:
 4884 02f8 75696E74 		.ascii	"uint32\000"
 4884      333200
 4885              	.LASF58:
 4886 02ff 6D6F6465 		.ascii	"model_id\000"
 4886      6C5F6964 
 4886      00
 4887              	.LASF81:
 4888 0308 616C6C5F 		.ascii	"all_level_readings\000"
 4888      6C657665 
 4888      6C5F7265 
 4888      6164696E 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 106


 4888      677300
 4889              	.LASF86:
 4890 031b 636F756E 		.ascii	"countDownValue\000"
 4890      74446F77 
 4890      6E56616C 
 4890      756500
 4891              	.LASF142:
 4892 032a 75706772 		.ascii	"upgraded\000"
 4892      61646564 
 4892      00
 4893              	.LASF49:
 4894 0333 746D5F6D 		.ascii	"tm_mon\000"
 4894      6F6E00
 4895              	.LASF73:
 4896 033a 64656275 		.ascii	"debug_level\000"
 4896      675F6C65 
 4896      76656C00 
 4897              	.LASF144:
 4898 0346 706F7274 		.ascii	"port\000"
 4898      00
 4899              	.LASF54:
 4900 034b 76616C75 		.ascii	"value\000"
 4900      6500
 4901              	.LASF143:
 4902 0351 686F7374 		.ascii	"host\000"
 4902      00
 4903              	.LASF50:
 4904 0356 746D5F79 		.ascii	"tm_year\000"
 4904      65617200 
 4905              	.LASF176:
 4906 035e 616C6172 		.ascii	"alarmSync\000"
 4906      6D53796E 
 4906      6300
 4907              	.LASF40:
 4908 0368 70726573 		.ascii	"pressure_voltage_on\000"
 4908      73757265 
 4908      5F766F6C 
 4908      74616765 
 4908      5F6F6E00 
 4909              	.LASF157:
 4910 037c 4170705F 		.ascii	"App_LED_enabled\000"
 4910      4C45445F 
 4910      656E6162 
 4910      6C656400 
 4911              	.LASF140:
 4912 038c 73657454 		.ascii	"setTime\000"
 4912      696D6500 
 4913              	.LASF56:
 4914 0394 6B65795F 		.ascii	"key_value_t\000"
 4914      76616C75 
 4914      655F7400 
 4915              	.LASF101:
 4916 03a0 41796F49 		.ascii	"AyoItsTime\000"
 4916      74735469 
 4916      6D6500
 4917              	.LASF83:
 4918 03ab 6E756D5F 		.ascii	"num_valid_readings\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 107


 4918      76616C69 
 4918      645F7265 
 4918      6164696E 
 4918      677300
 4919              	.LASF130:
 4920 03be 68747470 		.ascii	"http_chunk\000"
 4920      5F636875 
 4920      6E6B00
 4921              	.LASF137:
 4922 03c9 6D5F766F 		.ascii	"m_voltage\000"
 4922      6C746167 
 4922      6500
 4923              	.LASF5:
 4924 03d3 6C6F6E67 		.ascii	"long unsigned int\000"
 4924      20756E73 
 4924      69676E65 
 4924      6420696E 
 4924      7400
 4925              	.LASF98:
 4926 03e5 7472795F 		.ascii	"try_counter\000"
 4926      636F756E 
 4926      74657200 
 4927              	.LASF121:
 4928 03f1 64617461 		.ascii	"data_count_desired\000"
 4928      5F636F75 
 4928      6E745F64 
 4928      65736972 
 4928      656400
 4929              	.LASF34:
 4930 0404 766F6C74 		.ascii	"voltage_battery\000"
 4930      6167655F 
 4930      62617474 
 4930      65727900 
 4931              	.LASF25:
 4932 0414 4461794F 		.ascii	"DayOfMonth\000"
 4932      664D6F6E 
 4932      746800
 4933              	.LASF134:
 4934 041f 6D616B65 		.ascii	"makeMeasurements\000"
 4934      4D656173 
 4934      7572656D 
 4934      656E7473 
 4934      00
 4935              	.LASF152:
 4936 0430 64617461 		.ascii	"data\000"
 4936      00
 4937              	.LASF95:
 4938 0435 65705F70 		.ascii	"ep_port\000"
 4938      6F727400 
 4939              	.LASF53:
 4940 043d 746D5F69 		.ascii	"tm_isdst\000"
 4940      73647374 
 4940      00
 4941              	.LASF91:
 4942 0446 6D6F6465 		.ascii	"modem_info\000"
 4942      6D5F696E 
 4942      666F00
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 108


 4943              	.LASF94:
 4944 0451 65705F68 		.ascii	"ep_host\000"
 4944      6F737400 
 4945              	.LASF14:
 4946 0459 696E7438 		.ascii	"int8\000"
 4946      00
 4947              	.LASF100:
 4948 045e 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 4948      576F726B 
 4948      576F726B 
 4948      576F726B 
 4948      576F726B 
 4949              	.LASF122:
 4950 0477 635F6461 		.ascii	"c_data_count_desired\000"
 4950      74615F63 
 4950      6F756E74 
 4950      5F646573 
 4950      69726564 
 4951              	.LASF115:
 4952 048c 745F7364 		.ascii	"t_sd_card\000"
 4952      5F636172 
 4952      6400
 4953              	.LASF2:
 4954 0496 73686F72 		.ascii	"short int\000"
 4954      7420696E 
 4954      7400
 4955              	.LASF179:
 4956 04a0 616C6172 		.ascii	"alarmAppLED\000"
 4956      6D417070 
 4956      4C454400 
 4957              	.LASF154:
 4958 04ac 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4958      6D5F7374 
 4958      6172745F 
 4958      74696D65 
 4958      5F737461 
 4959              	.LASF162:
 4960 04c3 646F776E 		.ascii	"downstream_level_sensor_enabled\000"
 4960      73747265 
 4960      616D5F6C 
 4960      6576656C 
 4960      5F73656E 
 4961              	.LASF93:
 4962 04e3 7379735F 		.ascii	"sys_info_t\000"
 4962      696E666F 
 4962      5F7400
 4963              	.LASF80:
 4964 04ee 75706461 		.ascii	"updatable_parameters_t\000"
 4964      7461626C 
 4964      655F7061 
 4964      72616D65 
 4964      74657273 
 4965              	.LASF102:
 4966 0505 616C6172 		.ascii	"alarmType\000"
 4966      6D547970 
 4966      6500
 4967              	.LASF150:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 109


 4968 050f 64617461 		.ascii	"dataPointsInStack\000"
 4968      506F696E 
 4968      7473496E 
 4968      53746163 
 4968      6B00
 4969              	.LASF112:
 4970 0521 745F646F 		.ascii	"t_down_level\000"
 4970      776E5F6C 
 4970      6576656C 
 4970      00
 4971              	.LASF168:
 4972 052e 6175746F 		.ascii	"autosampler_inbox\000"
 4972      73616D70 
 4972      6C65725F 
 4972      696E626F 
 4972      7800
 4973              	.LASF46:
 4974 0540 746D5F6D 		.ascii	"tm_min\000"
 4974      696E00
 4975              	.LASF17:
 4976 0547 666C6F61 		.ascii	"float32\000"
 4976      74333200 
 4977              	.LASF103:
 4978 054f 616C6172 		.ascii	"alarmToBeUpdated\000"
 4978      6D546F42 
 4978      65557064 
 4978      61746564 
 4978      00
 4979              	.LASF22:
 4980 0560 73697A65 		.ascii	"sizetype\000"
 4980      74797065 
 4980      00
 4981              	.LASF52:
 4982 0569 746D5F79 		.ascii	"tm_yday\000"
 4982      64617900 
 4983              	.LASF96:
 4984 0571 7379735F 		.ascii	"sys_settings_t\000"
 4984      73657474 
 4984      696E6773 
 4984      5F7400
 4985              	.LASF141:
 4986 0580 6C6F6361 		.ascii	"localTime\000"
 4986      6C54696D 
 4986      6500
 4987              	.LASF15:
 4988 058a 696E7431 		.ascii	"int16\000"
 4988      3600
 4989              	.LASF178:
 4990 0590 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 4990      546F5379 
 4990      636E5265 
 4990      6D6F7465 
 4990      50617261 
 4991              	.LASF55:
 4992 05a7 74696D65 		.ascii	"timeStamp\000"
 4992      5374616D 
 4992      7000
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 110


 4993              	.LASF29:
 4994 05b1 5254435F 		.ascii	"RTC_TIME_DATE\000"
 4994      54494D45 
 4994      5F444154 
 4994      4500
 4995              	.LASF156:
 4996 05bf 75706461 		.ascii	"updatable_parameters\000"
 4996      7461626C 
 4996      655F7061 
 4996      72616D65 
 4996      74657273 
 4997              	.LASF107:
 4998 05d4 43726561 		.ascii	"CreateAlarm\000"
 4998      7465416C 
 4998      61726D00 
 4999              	.LASF129:
 5000 05e0 7061636B 		.ascii	"packet\000"
 5000      657400
 5001              	.LASF192:
 5002 05e7 433A5C55 		.ascii	"C:\\Users\\jniej\\OneDrive\\Documents\\GitHub\\noto"
 5002      73657273 
 5002      5C6A6E69 
 5002      656A5C4F 
 5002      6E654472 
 5003 0614 72694F53 		.ascii	"riOS\\notoriOS.cydsn\000"
 5003      5C6E6F74 
 5003      6F72694F 
 5003      532E6379 
 5003      64736E00 
 5004              	.LASF118:
 5005 0628 735F7273 		.ascii	"s_rsrp\000"
 5005      727000
 5006              	.LASF37:
 5007 062f 766F6C74 		.ascii	"voltage_pressure\000"
 5007      6167655F 
 5007      70726573 
 5007      73757265 
 5007      00
 5008              	.LASF186:
 5009 0640 74696D65 		.ascii	"timeToValve\000"
 5009      546F5661 
 5009      6C766500 
 5010              	.LASF18:
 5011 064c 666C6F61 		.ascii	"float\000"
 5011      7400
 5012              	.LASF85:
 5013 0652 6C657665 		.ascii	"level_sensor_t\000"
 5013      6C5F7365 
 5013      6E736F72 
 5013      5F7400
 5014              	.LASF119:
 5015 0661 735F7273 		.ascii	"s_rscp\000"
 5015      637000
 5016              	.LASF133:
 5017 0668 636F6E66 		.ascii	"configureRemoteParams\000"
 5017      69677572 
 5017      6552656D 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 111


 5017      6F746550 
 5017      6172616D 
 5018              	.LASF189:
 5019 067e 44617461 		.ascii	"Data_fileName\000"
 5019      5F66696C 
 5019      654E616D 
 5019      6500
 5020              	.LASF99:
 5021 068c 6D6F6465 		.ascii	"modem_status\000"
 5021      6D5F7374 
 5021      61747573 
 5021      00
 5022              	.LASF30:
 5023 0699 74657374 		.ascii	"test_name\000"
 5023      5F6E616D 
 5023      6500
 5024              	.LASF28:
 5025 06a3 59656172 		.ascii	"Year\000"
 5025      00
 5026              	.LASF79:
 5027 06a8 5F426F6F 		.ascii	"_Bool\000"
 5027      6C00
 5028              	.LASF10:
 5029 06ae 696E7433 		.ascii	"int32_t\000"
 5029      325F7400 
 5030              	.LASF1:
 5031 06b6 756E7369 		.ascii	"unsigned char\000"
 5031      676E6564 
 5031      20636861 
 5031      7200
 5032              	.LASF145:
 5033 06c4 726F7574 		.ascii	"route\000"
 5033      6500
 5034              	.LASF173:
 5035 06ca 73797374 		.ascii	"system_settings\000"
 5035      656D5F73 
 5035      65747469 
 5035      6E677300 
 5036              	.LASF77:
 5037 06da 56616C76 		.ascii	"Valve_freq\000"
 5037      655F6672 
 5037      657100
 5038              	.LASF64:
 5039 06e5 72737271 		.ascii	"rsrq\000"
 5039      00
 5040              	.LASF104:
 5041 06ea 52657365 		.ascii	"ResetAlarm\000"
 5041      74416C61 
 5041      726D00
 5042              	.LASF132:
 5043 06f5 735F7365 		.ascii	"s_send_time\000"
 5043      6E645F74 
 5043      696D6500 
 5044              	.LASF72:
 5045 0701 73796E63 		.ascii	"sync_time\000"
 5045      5F74696D 
 5045      6500
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 112


 5046              	.LASF43:
 5047 070b 70726573 		.ascii	"pressure_depth\000"
 5047      73757265 
 5047      5F646570 
 5047      746800
 5048              	.LASF62:
 5049 071a 72736370 		.ascii	"rscp\000"
 5049      00
 5050              	.LASF24:
 5051 071f 4461794F 		.ascii	"DayOfWeek\000"
 5051      66576565 
 5051      6B00
 5052              	.LASF33:
 5053 0729 74657374 		.ascii	"test_t\000"
 5053      5F7400
 5054              	.LASF172:
 5055 0730 73797374 		.ascii	"system_info\000"
 5055      656D5F69 
 5055      6E666F00 
 5056              	.LASF59:
 5057 073c 696D6569 		.ascii	"imei\000"
 5057      00
 5058              	.LASF32:
 5059 0741 72656173 		.ascii	"reason\000"
 5059      6F6E00
 5060              	.LASF105:
 5061 0748 616C6172 		.ascii	"alarmToBeReset\000"
 5061      6D546F42 
 5061      65526573 
 5061      657400
 5062              	.LASF110:
 5063 0757 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 5063      6B697479 
 5063      43686563 
 5063      6B596F75 
 5063      7273656C 
 5064              	.LASF127:
 5065 0783 64617461 		.ascii	"data_count_sent\000"
 5065      5F636F75 
 5065      6E745F73 
 5065      656E7400 
 5066              	.LASF68:
 5067 0793 6D6F6465 		.ascii	"modem_stats_t\000"
 5067      6D5F7374 
 5067      6174735F 
 5067      7400
 5068              	.LASF42:
 5069 07a1 70726573 		.ascii	"pressure_current\000"
 5069      73757265 
 5069      5F637572 
 5069      72656E74 
 5069      00
 5070              	.LASF38:
 5071 07b2 76616C69 		.ascii	"valid\000"
 5071      6400
 5072              	.LASF181:
 5073 07b8 616C6172 		.ascii	"alarmLevelSensor\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 113


 5073      6D4C6576 
 5073      656C5365 
 5073      6E736F72 
 5073      00
 5074              	.LASF51:
 5075 07c9 746D5F77 		.ascii	"tm_wday\000"
 5075      64617900 
 5076              	.LASF75:
 5077 07d1 4C657665 		.ascii	"Level_Sensor_freq\000"
 5077      6C5F5365 
 5077      6E736F72 
 5077      5F667265 
 5077      7100
 5078              	.LASF159:
 5079 07e3 6C657665 		.ascii	"level_sensor_inbox\000"
 5079      6C5F7365 
 5079      6E736F72 
 5079      5F696E62 
 5079      6F7800
 5080              	.LASF21:
 5081 07f6 6C6F6E67 		.ascii	"long double\000"
 5081      20646F75 
 5081      626C6500 
 5082              	.LASF124:
 5083 0802 6368756E 		.ascii	"chunk\000"
 5083      6B00
 5084              	.LASF135:
 5085 0808 635F7469 		.ascii	"c_timeStamp\000"
 5085      6D655374 
 5085      616D7000 
 5086              	.LASF20:
 5087 0814 63686172 		.ascii	"char\000"
 5087      00
 5088              	.LASF8:
 5089 0819 756E7369 		.ascii	"unsigned int\000"
 5089      676E6564 
 5089      20696E74 
 5089      00
 5090              	.LASF185:
 5091 0826 616C6172 		.ascii	"alarmValve\000"
 5091      6D56616C 
 5091      766500
 5092              	.LASF65:
 5093 0831 72737270 		.ascii	"rsrp\000"
 5093      00
 5094              	.LASF171:
 5095 0836 68747470 		.ascii	"http_route\000"
 5095      5F726F75 
 5095      746500
 5096              	.LASF123:
 5097 0841 706F7274 		.ascii	"portConfig\000"
 5097      436F6E66 
 5097      696700
 5098              	.LASF9:
 5099 084c 5F5F696E 		.ascii	"__int32_t\000"
 5099      7433325F 
 5099      7400
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 114


 5100              	.LASF97:
 5101 0856 756E6971 		.ascii	"uniqueId\000"
 5101      75654964 
 5101      00
 5102              	.LASF71:
 5103 085f 6D656173 		.ascii	"measure_time\000"
 5103      7572655F 
 5103      74696D65 
 5103      00
 5104              	.LASF138:
 5105 086c 6D5F6C65 		.ascii	"m_level_sensor\000"
 5105      76656C5F 
 5105      73656E73 
 5105      6F7200
 5106              	.LASF82:
 5107 087b 6C657665 		.ascii	"level_reading\000"
 5107      6C5F7265 
 5107      6164696E 
 5107      6700
 5108              	.LASF194:
 5109 0889 4C617942 		.ascii	"LayBack\000"
 5109      61636B00 
 5110              	.LASF3:
 5111 0891 73686F72 		.ascii	"short unsigned int\000"
 5111      7420756E 
 5111      7369676E 
 5111      65642069 
 5111      6E7400
 5112              	.LASF57:
 5113 08a4 73696D5F 		.ascii	"sim_id\000"
 5113      696400
 5114              	.LASF48:
 5115 08ab 746D5F6D 		.ascii	"tm_mday\000"
 5115      64617900 
 5116              	.LASF108:
 5117 08b3 6E657741 		.ascii	"newAlarm\000"
 5117      6C61726D 
 5117      00
 5118              	.LASF76:
 5119 08bc 446F776E 		.ascii	"Downstream_Level_Sensor_freq\000"
 5119      73747265 
 5119      616D5F4C 
 5119      6576656C 
 5119      5F53656E 
 5120              	.LASF45:
 5121 08d9 746D5F73 		.ascii	"tm_sec\000"
 5121      656300
 5122              	.LASF139:
 5123 08e0 6D5F7072 		.ascii	"m_pressure\000"
 5123      65737375 
 5123      726500
 5124              	.LASF165:
 5125 08eb 76616C76 		.ascii	"valve_enabled\000"
 5125      655F656E 
 5125      61626C65 
 5125      6400
 5126              	.LASF31:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 115


 5127 08f9 73746174 		.ascii	"status\000"
 5127      757300
 5128              	.LASF182:
 5129 0900 74696D65 		.ascii	"timeToLevelSensor\000"
 5129      546F4C65 
 5129      76656C53 
 5129      656E736F 
 5129      7200
 5130              	.LASF160:
 5131 0912 6C657665 		.ascii	"level_sensor_enabled\000"
 5131      6C5F7365 
 5131      6E736F72 
 5131      5F656E61 
 5131      626C6564 
 5132              	.LASF151:
 5133 0927 64617461 		.ascii	"dataPointsInStackDesired\000"
 5133      506F696E 
 5133      7473496E 
 5133      53746163 
 5133      6B446573 
 5134              	.LASF74:
 5135 0940 4170705F 		.ascii	"App_LED_freq\000"
 5135      4C45445F 
 5135      66726571 
 5135      00
 5136              	.LASF113:
 5137 094d 745F766F 		.ascii	"t_voltages\000"
 5137      6C746167 
 5137      657300
 5138              	.LASF191:
 5139 0958 6E6F746F 		.ascii	"notoriOS.c\000"
 5139      72694F53 
 5139      2E6300
 5140              	.LASF184:
 5141 0963 74696D65 		.ascii	"timeToDownstreamLevelSensor\000"
 5141      546F446F 
 5141      776E7374 
 5141      7265616D 
 5141      4C657665 
 5142              	.LASF170:
 5143 097f 68747470 		.ascii	"http_body\000"
 5143      5F626F64 
 5143      7900
 5144              	.LASF187:
 5145 0989 616C6172 		.ascii	"alarmAutosampler\000"
 5145      6D417574 
 5145      6F73616D 
 5145      706C6572 
 5145      00
 5146              	.LASF166:
 5147 099a 76616C76 		.ascii	"valve_inbox\000"
 5147      655F696E 
 5147      626F7800 
 5148              	.LASF78:
 5149 09a6 4175746F 		.ascii	"Autosampler_freq\000"
 5149      73616D70 
 5149      6C65725F 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 116


 5149      66726571 
 5149      00
 5150              	.LASF88:
 5151 09b7 636F756E 		.ascii	"countDownType\000"
 5151      74446F77 
 5151      6E547970 
 5151      6500
 5152              	.LASF87:
 5153 09c5 63757272 		.ascii	"currentCountDownValue\000"
 5153      656E7443 
 5153      6F756E74 
 5153      446F776E 
 5153      56616C75 
 5154              	.LASF70:
 5155 09db 73696D5F 		.ascii	"sim_type\000"
 5155      74797065 
 5155      00
 5156              	.LASF26:
 5157 09e4 4461794F 		.ascii	"DayOfYear\000"
 5157      66596561 
 5157      7200
 5158              	.LASF44:
 5159 09ee 70726573 		.ascii	"pressure_t\000"
 5159      73757265 
 5159      5F7400
 5160              	.LASF106:
 5161 09f9 416C6172 		.ascii	"AlarmReady\000"
 5161      6D526561 
 5161      647900
 5162              	.LASF109:
 5163 0a04 52656164 		.ascii	"ReadyOrNot\000"
 5163      794F724E 
 5163      6F7400
 5164              	.LASF195:
 5165 0a0f 6D61696E 		.ascii	"main\000"
 5165      00
 5166              	.LASF92:
 5167 0a14 63686970 		.ascii	"chip_uniqueId\000"
 5167      5F756E69 
 5167      71756549 
 5167      6400
 5168              	.LASF169:
 5169 0a22 68747470 		.ascii	"http_request\000"
 5169      5F726571 
 5169      75657374 
 5169      00
 5170              	.LASF19:
 5171 0a2f 646F7562 		.ascii	"double\000"
 5171      6C6500
 5172              	.LASF158:
 5173 0a36 6170705F 		.ascii	"app_led_inbox\000"
 5173      6C65645F 
 5173      696E626F 
 5173      7800
 5174              	.LASF161:
 5175 0a44 646F776E 		.ascii	"downstream_level_sensor_inbox\000"
 5175      73747265 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\ccR6WPkq.s 			page 117


 5175      616D5F6C 
 5175      6576656C 
 5175      5F73656E 
 5176              	.LASF39:
 5177 0a62 766F6C74 		.ascii	"voltage_t\000"
 5177      6167655F 
 5177      7400
 5178              	.LASF136:
 5179 0a6c 635F6E6F 		.ascii	"c_node_type\000"
 5179      64655F74 
 5179      79706500 
 5180              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
