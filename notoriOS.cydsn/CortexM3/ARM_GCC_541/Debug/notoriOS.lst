ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.section	.text.Wakeup_ISR,"ax",%progbits
  44              		.align	2
  45              		.global	Wakeup_ISR
  46              		.thumb
  47              		.thumb_func
  48              		.type	Wakeup_ISR, %function
  49              	Wakeup_ISR:
  50              	.LFB64:
  51              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 2


   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  52              		.loc 1 20 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  62              		.loc 1 22 0
  63 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  64              		.loc 1 23 0
  65 0008 00BF     		nop
  66 000a 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE64:
  69              		.size	Wakeup_ISR, .-Wakeup_ISR
  70              		.global	Data_fileName
  71              		.data
  72              		.align	2
  73              		.type	Data_fileName, %object
  74              		.size	Data_fileName, 30
  75              	Data_fileName:
  76 0000 64617461 		.ascii	"data.txt\000"
  76      2E747874 
  76      00
  77 0009 00000000 		.space	21
  77      00000000 
  77      00000000 
  77      00000000 
  77      00000000 
  78              		.comm	try_counter,1,1
  79              		.section	.rodata
  80              		.align	2
  81              	.LC0:
  82 0000 25582D25 		.ascii	"%X-%X\000"
  82      5800
  83 0006 0000     		.align	2
  84              	.LC1:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 3


  85 0008 6563322D 		.ascii	"ec2-13-59-131-167.us-east-2.compute.amazonaws.com\000"
  85      31332D35 
  85      392D3133 
  85      312D3136 
  85      372E7573 
  86 003a 0000     		.align	2
  87              	.LC2:
  88 003c 256400   		.ascii	"%d\000"
  89 003f 00       		.align	2
  90              	.LC3:
  91 0040 7265626F 		.ascii	"reboot\000"
  91      6F7400
  92              		.section	.text.ReadyOrNot,"ax",%progbits
  93              		.align	2
  94              		.global	ReadyOrNot
  95              		.thumb
  96              		.thumb_func
  97              		.type	ReadyOrNot, %function
  98              	ReadyOrNot:
  99              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
 100              		.loc 1 41 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 32
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 B0B5     		push	{r4, r5, r7, lr}
 105              		.cfi_def_cfa_offset 16
 106              		.cfi_offset 4, -16
 107              		.cfi_offset 5, -12
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 8AB0     		sub	sp, sp, #40
 111              		.cfi_def_cfa_offset 56
 112 0004 02AF     		add	r7, sp, #8
 113              		.cfi_def_cfa 7, 48
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 114              		.loc 1 43 0
 115 0006 3948     		ldr	r0, .L3
 116 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 4


  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 117              		.loc 1 44 0
 118 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 119              		.loc 1 46 0
 120 0010 FF20     		movs	r0, #255
 121 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 122              		.loc 1 47 0
 123 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 124              		.loc 1 48 0
 125 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 126              		.loc 1 50 0
 127 001e FFF7FEFF 		bl	modem_initialize
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 128              		.loc 1 52 0
 129 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  53:notoriOS.c    ****    
  54:notoriOS.c    ****     
  55:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  56:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  57:notoriOS.c    ****     
  58:notoriOS.c    ****     
  59:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  60:notoriOS.c    ****     uint32 uniqueId[2];
  61:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  62:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 130              		.loc 1 62 0
 131 0026 07F11403 		add	r3, r7, #20
 132 002a 1846     		mov	r0, r3
 133 002c FFF7FEFF 		bl	CyGetUniqueId
  63:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 134              		.loc 1 63 0
 135 0030 7A69     		ldr	r2, [r7, #20]
 136 0032 BB69     		ldr	r3, [r7, #24]
 137 0034 0093     		str	r3, [sp]
 138 0036 1346     		mov	r3, r2
 139 0038 2D4A     		ldr	r2, .L3+4
 140 003a 1821     		movs	r1, #24
 141 003c 2D48     		ldr	r0, .L3+8
 142 003e FFF7FEFF 		bl	snprintf
  64:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  65:notoriOS.c    ****     system_info.modem_info = &modem_info;
 143              		.loc 1 65 0
 144 0042 2D4B     		ldr	r3, .L3+12
 145 0044 2D4A     		ldr	r2, .L3+16
 146 0046 1A60     		str	r2, [r3]
  66:notoriOS.c    ****     
  67:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  68:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","ec2-13-59-131-167.us-eas
 147              		.loc 1 68 0
 148 0048 2D4A     		ldr	r2, .L3+20
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 5


 149 004a 2E4B     		ldr	r3, .L3+24
 150 004c 1446     		mov	r4, r2
 151 004e 1D46     		mov	r5, r3
 152 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 153 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 154 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 155 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 156 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 157 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 158 005c 2B68     		ldr	r3, [r5]
 159 005e 2380     		strh	r3, [r4]	@ movhi
  69:notoriOS.c    ****    
  70:notoriOS.c    ****     system_settings.ep_port = 5000;
 160              		.loc 1 70 0
 161 0060 274B     		ldr	r3, .L3+20
 162 0062 41F28832 		movw	r2, #5000
 163 0066 5A66     		str	r2, [r3, #100]
  71:notoriOS.c    ****     // Don't need the following for new nodes
  72:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  73:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  74:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  75:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  76:notoriOS.c    ****         
  77:notoriOS.c    ****     
  78:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  79:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 164              		.loc 1 79 0
 165 0068 274B     		ldr	r3, .L3+28
 166 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 167 006c 99B2     		uxth	r1, r3
 168 006e 274C     		ldr	r4, .L3+32
 169 0070 3846     		mov	r0, r7
 170 0072 0723     		movs	r3, #7
 171 0074 0122     		movs	r2, #1
 172 0076 FFF7FEFF 		bl	CreateAlarm
 173 007a 2246     		mov	r2, r4
 174 007c 3B46     		mov	r3, r7
 175 007e 1968     		ldr	r1, [r3]	@ unaligned
 176 0080 1160     		str	r1, [r2]	@ unaligned
 177 0082 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 178 0084 9380     		strh	r3, [r2, #4]	@ unaligned
  80:notoriOS.c    ****     timeToMeasure = 1u;
 179              		.loc 1 80 0
 180 0086 224B     		ldr	r3, .L3+36
 181 0088 0122     		movs	r2, #1
 182 008a 1A70     		strb	r2, [r3]
  81:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  82:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 183              		.loc 1 82 0
 184 008c 1E4B     		ldr	r3, .L3+28
 185 008e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 186 0090 99B2     		uxth	r1, r3
 187 0092 204C     		ldr	r4, .L3+40
 188 0094 3846     		mov	r0, r7
 189 0096 0723     		movs	r3, #7
 190 0098 0122     		movs	r2, #1
 191 009a FFF7FEFF 		bl	CreateAlarm
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 6


 192 009e 2246     		mov	r2, r4
 193 00a0 3B46     		mov	r3, r7
 194 00a2 1968     		ldr	r1, [r3]	@ unaligned
 195 00a4 1160     		str	r1, [r2]	@ unaligned
 196 00a6 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 197 00a8 9380     		strh	r3, [r2, #4]	@ unaligned
  83:notoriOS.c    ****     timeToSync = 1u;
 198              		.loc 1 83 0
 199 00aa 1B4B     		ldr	r3, .L3+44
 200 00ac 0122     		movs	r2, #1
 201 00ae 1A70     		strb	r2, [r3]
  84:notoriOS.c    ****     
  85:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 202              		.loc 1 85 0
 203 00b0 1A4B     		ldr	r3, .L3+48
 204 00b2 0022     		movs	r2, #0
 205 00b4 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     
  87:notoriOS.c    ****     // send hey to server saying the node rebooted
  88:notoriOS.c    ****     hey = 1u;
 206              		.loc 1 88 0
 207 00b6 1A4B     		ldr	r3, .L3+52
 208 00b8 0122     		movs	r2, #1
 209 00ba 1A70     		strb	r2, [r3]
  89:notoriOS.c    ****     char c_hey[10];
  90:notoriOS.c    ****     snprintf(c_hey,sizeof(c_hey),"%d",hey);
 210              		.loc 1 90 0
 211 00bc 184B     		ldr	r3, .L3+52
 212 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 213 00c0 07F10800 		add	r0, r7, #8
 214 00c4 174A     		ldr	r2, .L3+56
 215 00c6 0A21     		movs	r1, #10
 216 00c8 FFF7FEFF 		bl	snprintf
  91:notoriOS.c    ****     pushData("reboot",c_hey,getTimeStamp());
 217              		.loc 1 91 0
 218 00cc FFF7FEFF 		bl	getTimeStamp
 219 00d0 0246     		mov	r2, r0
 220 00d2 07F10803 		add	r3, r7, #8
 221 00d6 1946     		mov	r1, r3
 222 00d8 1348     		ldr	r0, .L3+60
 223 00da FFF7FEFF 		bl	pushData
  92:notoriOS.c    ****     
  93:notoriOS.c    ****     // Initialize the try counter to 0
  94:notoriOS.c    ****     uint8 try_counter = 0;
 224              		.loc 1 94 0
 225 00de 0023     		movs	r3, #0
 226 00e0 FB77     		strb	r3, [r7, #31]
  95:notoriOS.c    **** }
 227              		.loc 1 95 0
 228 00e2 00BF     		nop
 229 00e4 2037     		adds	r7, r7, #32
 230              		.cfi_def_cfa_offset 16
 231 00e6 BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
 234 00e8 B0BD     		pop	{r4, r5, r7, pc}
 235              	.L4:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 7


 236 00ea 00BF     		.align	2
 237              	.L3:
 238 00ec 00000000 		.word	Wakeup_ISR
 239 00f0 00000000 		.word	.LC0
 240 00f4 04000000 		.word	system_info+4
 241 00f8 00000000 		.word	system_info
 242 00fc 00000000 		.word	modem_info
 243 0100 00000000 		.word	system_settings
 244 0104 08000000 		.word	.LC1
 245 0108 00000000 		.word	updatable_parameters
 246 010c 00000000 		.word	alarmMeasure
 247 0110 00000000 		.word	timeToMeasure
 248 0114 00000000 		.word	alarmSync
 249 0118 00000000 		.word	timeToSync
 250 011c 00000000 		.word	timeToSycnRemoteParams
 251 0120 00000000 		.word	hey
 252 0124 3C000000 		.word	.LC2
 253 0128 40000000 		.word	.LC3
 254              		.cfi_endproc
 255              	.LFE65:
 256              		.size	ReadyOrNot, .-ReadyOrNot
 257              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 258              		.align	2
 259              		.global	WorkWorkWorkWorkWorkWork
 260              		.thumb
 261              		.thumb_func
 262              		.type	WorkWorkWorkWorkWorkWork, %function
 263              	WorkWorkWorkWorkWorkWork:
 264              	.LFB66:
  96:notoriOS.c    **** 
  97:notoriOS.c    **** 
  98:notoriOS.c    **** // ==============================================
  99:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
 100:notoriOS.c    **** //      - Rhiana, feat Drake (2016)
 101:notoriOS.c    **** //
 102:notoriOS.c    **** // Prorcesses core tasks
 103:notoriOS.c    **** // ==============================================
 104:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
 105:notoriOS.c    **** {
 265              		.loc 1 105 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269 0000 80B5     		push	{r7, lr}
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 82B0     		sub	sp, sp, #8
 274              		.cfi_def_cfa_offset 16
 275 0004 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
 106:notoriOS.c    ****     
 107:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 108:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 109:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
 110:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 111:notoriOS.c    ****     
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 8


 112:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 113:notoriOS.c    ****     if(timeToSycnRemoteParams){
 277              		.loc 1 113 0
 278 0006 144B     		ldr	r3, .L10
 279 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 000a 002B     		cmp	r3, #0
 281 000c 06D0     		beq	.L6
 114:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
 282              		.loc 1 114 0
 283 000e FFF7FEFF 		bl	configureRemoteParams
 284 0012 0346     		mov	r3, r0
 285 0014 1A46     		mov	r2, r3
 286 0016 104B     		ldr	r3, .L10
 287 0018 1A70     		strb	r2, [r3]
 288 001a 14E0     		b	.L7
 289              	.L6:
 115:notoriOS.c    ****     }
 116:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 117:notoriOS.c    ****     else if(timeToMeasure){
 290              		.loc 1 117 0
 291 001c 0F4B     		ldr	r3, .L10+4
 292 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 293 0020 002B     		cmp	r3, #0
 294 0022 06D0     		beq	.L8
 118:notoriOS.c    ****         //(int i=0; i<=30; i++){
 119:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 295              		.loc 1 119 0
 296 0024 FFF7FEFF 		bl	makeMeasurements
 297 0028 0346     		mov	r3, r0
 298 002a 1A46     		mov	r2, r3
 299 002c 0B4B     		ldr	r3, .L10+4
 300 002e 1A70     		strb	r2, [r3]
 301 0030 09E0     		b	.L7
 302              	.L8:
 120:notoriOS.c    ****         //CyDelay(1000u);
 121:notoriOS.c    ****         //}
 122:notoriOS.c    ****     }else if(timeToSync){
 303              		.loc 1 122 0
 304 0032 0B4B     		ldr	r3, .L10+8
 305 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 0036 002B     		cmp	r3, #0
 307 0038 05D0     		beq	.L7
 123:notoriOS.c    ****             timeToSync = syncData();
 308              		.loc 1 123 0
 309 003a FFF7FEFF 		bl	syncData
 310 003e 0346     		mov	r3, r0
 311 0040 1A46     		mov	r2, r3
 312 0042 074B     		ldr	r3, .L10+8
 313 0044 1A70     		strb	r2, [r3]
 314              	.L7:
 124:notoriOS.c    ****     }
 125:notoriOS.c    ****     // Print the countdown to the next alarm
 126:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 127:notoriOS.c    ****     
 128:notoriOS.c    ****     
 129:notoriOS.c    ****     // Check modem state machine on every loop
 130:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 9


 315              		.loc 1 130 0
 316 0046 FFF7FEFF 		bl	modem_process_tasks
 317 004a 0346     		mov	r3, r0
 318 004c FB71     		strb	r3, [r7, #7]
 131:notoriOS.c    **** 
 132:notoriOS.c    ****     return 0u +  modem_status;  
 319              		.loc 1 132 0
 320 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 133:notoriOS.c    **** }
 321              		.loc 1 133 0
 322 0050 1846     		mov	r0, r3
 323 0052 0837     		adds	r7, r7, #8
 324              		.cfi_def_cfa_offset 8
 325 0054 BD46     		mov	sp, r7
 326              		.cfi_def_cfa_register 13
 327              		@ sp needed
 328 0056 80BD     		pop	{r7, pc}
 329              	.L11:
 330              		.align	2
 331              	.L10:
 332 0058 00000000 		.word	timeToSycnRemoteParams
 333 005c 00000000 		.word	timeToMeasure
 334 0060 00000000 		.word	timeToSync
 335              		.cfi_endproc
 336              	.LFE66:
 337              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 338              		.section	.text.LayBack,"ax",%progbits
 339              		.align	2
 340              		.global	LayBack
 341              		.thumb
 342              		.thumb_func
 343              		.type	LayBack, %function
 344              	LayBack:
 345              	.LFB67:
 134:notoriOS.c    **** 
 135:notoriOS.c    **** 
 136:notoriOS.c    **** 
 137:notoriOS.c    **** 
 138:notoriOS.c    **** 
 139:notoriOS.c    **** 
 140:notoriOS.c    **** // ==============================================
 141:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 142:notoriOS.c    **** //      - Snoop Dogg (1993)
 143:notoriOS.c    **** //
 144:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 145:notoriOS.c    **** // ==============================================
 146:notoriOS.c    **** void LayBack()
 147:notoriOS.c    **** {
 346              		.loc 1 147 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
 353              		.cfi_offset 14, -4
 354 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 10


 355              		.cfi_def_cfa_register 7
 148:notoriOS.c    ****   
 149:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 356              		.loc 1 149 0
 357 0004 FFF7FEFF 		bl	modem_sleep
 150:notoriOS.c    ****     
 151:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 152:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 358              		.loc 1 152 0
 359 0008 FFF7FEFF 		bl	debug_sleep
 153:notoriOS.c    ****     
 154:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 360              		.loc 1 154 0
 361 000c FFF7FEFF 		bl	CyPmSaveClocks
 155:notoriOS.c    ****     
 156:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 157:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 158:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 159:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 160:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 161:notoriOS.c    ****     //CyPmHibernate();
 162:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 163:notoriOS.c    **** 
 164:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 362              		.loc 1 164 0
 363 0010 4FF40061 		mov	r1, #2048
 364 0014 0020     		movs	r0, #0
 365 0016 FFF7FEFF 		bl	CyPmSleep
 165:notoriOS.c    **** 
 166:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 366              		.loc 1 166 0
 367 001a FFF7FEFF 		bl	CyPmRestoreClocks
 167:notoriOS.c    **** 
 168:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 368              		.loc 1 168 0
 369 001e FFF7FEFF 		bl	debug_wakeup
 169:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 370              		.loc 1 169 0
 371 0022 FFF7FEFF 		bl	modem_wakeup
 170:notoriOS.c    **** 
 171:notoriOS.c    **** }
 372              		.loc 1 171 0
 373 0026 00BF     		nop
 374 0028 80BD     		pop	{r7, pc}
 375              		.cfi_endproc
 376              	.LFE67:
 377              		.size	LayBack, .-LayBack
 378 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 379              		.align	2
 380              		.global	AyoItsTime
 381              		.thumb
 382              		.thumb_func
 383              		.type	AyoItsTime, %function
 384              	AyoItsTime:
 385              	.LFB68:
 172:notoriOS.c    **** 
 173:notoriOS.c    **** 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 11


 174:notoriOS.c    **** // ==============================================
 175:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 176:notoriOS.c    **** //      - NAS (1994)
 177:notoriOS.c    **** //
 178:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 179:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 180:notoriOS.c    **** // It will add tasks to the work queue,
 181:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 182:notoriOS.c    **** // ==============================================
 183:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 184:notoriOS.c    **** {
 386              		.loc 1 184 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 8
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 82B0     		sub	sp, sp, #8
 395              		.cfi_def_cfa_offset 16
 396 0004 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
 398 0006 0346     		mov	r3, r0
 399 0008 FB71     		strb	r3, [r7, #7]
 185:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 186:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 400              		.loc 1 186 0
 401 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 402 000c 1946     		mov	r1, r3
 403 000e 0C48     		ldr	r0, .L17
 404 0010 FFF7FEFF 		bl	AlarmReady
 405 0014 0346     		mov	r3, r0
 406 0016 002B     		cmp	r3, #0
 407 0018 02D0     		beq	.L14
 187:notoriOS.c    ****     {
 188:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 189:notoriOS.c    ****         timeToMeasure = 1u;
 408              		.loc 1 189 0
 409 001a 0A4B     		ldr	r3, .L17+4
 410 001c 0122     		movs	r2, #1
 411 001e 1A70     		strb	r2, [r3]
 412              	.L14:
 190:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 191:notoriOS.c    ****         
 192:notoriOS.c    ****     }
 193:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 413              		.loc 1 193 0
 414 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 415 0022 1946     		mov	r1, r3
 416 0024 0848     		ldr	r0, .L17+8
 417 0026 FFF7FEFF 		bl	AlarmReady
 418 002a 0346     		mov	r3, r0
 419 002c 002B     		cmp	r3, #0
 420 002e 02D0     		beq	.L16
 194:notoriOS.c    ****     {
 195:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 12


 196:notoriOS.c    ****         timeToSync = 1u;
 421              		.loc 1 196 0
 422 0030 064B     		ldr	r3, .L17+12
 423 0032 0122     		movs	r2, #1
 424 0034 1A70     		strb	r2, [r3]
 425              	.L16:
 197:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 198:notoriOS.c    ****     }
 199:notoriOS.c    ****     
 200:notoriOS.c    **** }
 426              		.loc 1 200 0
 427 0036 00BF     		nop
 428 0038 0837     		adds	r7, r7, #8
 429              		.cfi_def_cfa_offset 8
 430 003a BD46     		mov	sp, r7
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 003c 80BD     		pop	{r7, pc}
 434              	.L18:
 435 003e 00BF     		.align	2
 436              	.L17:
 437 0040 00000000 		.word	alarmMeasure
 438 0044 00000000 		.word	timeToMeasure
 439 0048 00000000 		.word	alarmSync
 440 004c 00000000 		.word	timeToSync
 441              		.cfi_endproc
 442              	.LFE68:
 443              		.size	AyoItsTime, .-AyoItsTime
 444              		.section	.text.AlarmReady,"ax",%progbits
 445              		.align	2
 446              		.global	AlarmReady
 447              		.thumb
 448              		.thumb_func
 449              		.type	AlarmReady, %function
 450              	AlarmReady:
 451              	.LFB69:
 201:notoriOS.c    **** 
 202:notoriOS.c    **** 
 203:notoriOS.c    **** // ==============================================
 204:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 205:notoriOS.c    **** // ==============================================
 206:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 207:notoriOS.c    **** {
 452              		.loc 1 207 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 8
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 82B0     		sub	sp, sp, #8
 461              		.cfi_def_cfa_offset 16
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
 464 0006 7860     		str	r0, [r7, #4]
 465 0008 0B46     		mov	r3, r1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 13


 466 000a FB70     		strb	r3, [r7, #3]
 208:notoriOS.c    ****     // if the countDownType matches the alarmType
 209:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 467              		.loc 1 209 0
 468 000c 7B68     		ldr	r3, [r7, #4]
 469 000e 1B79     		ldrb	r3, [r3, #4]
 470 0010 DBB2     		uxtb	r3, r3
 471 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 472 0014 9A42     		cmp	r2, r3
 473 0016 12D1     		bne	.L20
 210:notoriOS.c    ****        
 211:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 212:notoriOS.c    ****         // Decrement the count down value by 1
 213:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 474              		.loc 1 213 0
 475 0018 7B68     		ldr	r3, [r7, #4]
 476 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 477 001c 1BB2     		sxth	r3, r3
 478 001e 9BB2     		uxth	r3, r3
 479 0020 013B     		subs	r3, r3, #1
 480 0022 9BB2     		uxth	r3, r3
 481 0024 1AB2     		sxth	r2, r3
 482 0026 7B68     		ldr	r3, [r7, #4]
 483 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 214:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 215:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 484              		.loc 1 215 0
 485 002a 7B68     		ldr	r3, [r7, #4]
 486 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 487 002e 1BB2     		sxth	r3, r3
 488 0030 002B     		cmp	r3, #0
 489 0032 04DC     		bgt	.L20
 216:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 490              		.loc 1 216 0
 491 0034 7868     		ldr	r0, [r7, #4]
 492 0036 FFF7FEFF 		bl	ResetAlarm
 217:notoriOS.c    ****             return 1u;
 493              		.loc 1 217 0
 494 003a 0123     		movs	r3, #1
 495 003c 00E0     		b	.L21
 496              	.L20:
 218:notoriOS.c    ****         } 
 219:notoriOS.c    ****     }
 220:notoriOS.c    ****     
 221:notoriOS.c    ****     return 0u; // Otherwise return 0
 497              		.loc 1 221 0
 498 003e 0023     		movs	r3, #0
 499              	.L21:
 222:notoriOS.c    **** }
 500              		.loc 1 222 0
 501 0040 1846     		mov	r0, r3
 502 0042 0837     		adds	r7, r7, #8
 503              		.cfi_def_cfa_offset 8
 504 0044 BD46     		mov	sp, r7
 505              		.cfi_def_cfa_register 13
 506              		@ sp needed
 507 0046 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 14


 508              		.cfi_endproc
 509              	.LFE69:
 510              		.size	AlarmReady, .-AlarmReady
 511              		.section	.text.ResetAlarm,"ax",%progbits
 512              		.align	2
 513              		.global	ResetAlarm
 514              		.thumb
 515              		.thumb_func
 516              		.type	ResetAlarm, %function
 517              	ResetAlarm:
 518              	.LFB70:
 223:notoriOS.c    **** 
 224:notoriOS.c    **** // ==============================================
 225:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 226:notoriOS.c    **** // ==============================================
 227:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 228:notoriOS.c    **** {
 519              		.loc 1 228 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0000 80B4     		push	{r7}
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0002 83B0     		sub	sp, sp, #12
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 229:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 230:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 532              		.loc 1 230 0
 533 0008 7B68     		ldr	r3, [r7, #4]
 534 000a 1B88     		ldrh	r3, [r3]	@ movhi
 535 000c 9BB2     		uxth	r3, r3
 536 000e 1AB2     		sxth	r2, r3
 537 0010 7B68     		ldr	r3, [r7, #4]
 538 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 231:notoriOS.c    **** }
 539              		.loc 1 231 0
 540 0014 00BF     		nop
 541 0016 0C37     		adds	r7, r7, #12
 542              		.cfi_def_cfa_offset 4
 543 0018 BD46     		mov	sp, r7
 544              		.cfi_def_cfa_register 13
 545              		@ sp needed
 546 001a 80BC     		pop	{r7}
 547              		.cfi_restore 7
 548              		.cfi_def_cfa_offset 0
 549 001c 7047     		bx	lr
 550              		.cfi_endproc
 551              	.LFE70:
 552              		.size	ResetAlarm, .-ResetAlarm
 553 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
 554              		.align	2
 555              		.global	CreateAlarm
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 15


 556              		.thumb
 557              		.thumb_func
 558              		.type	CreateAlarm, %function
 559              	CreateAlarm:
 560              	.LFB71:
 232:notoriOS.c    **** 
 233:notoriOS.c    **** // ==============================================
 234:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 235:notoriOS.c    **** // ==============================================
 236:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 237:notoriOS.c    **** {
 561              		.loc 1 237 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 16
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566 0000 80B4     		push	{r7}
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 0002 85B0     		sub	sp, sp, #20
 570              		.cfi_def_cfa_offset 24
 571 0004 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 573 0006 7860     		str	r0, [r7, #4]
 574 0008 0846     		mov	r0, r1
 575 000a 1146     		mov	r1, r2
 576 000c 1A46     		mov	r2, r3
 577 000e 0346     		mov	r3, r0	@ movhi
 578 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 579 0012 0B46     		mov	r3, r1
 580 0014 7B70     		strb	r3, [r7, #1]
 581 0016 1346     		mov	r3, r2
 582 0018 3B70     		strb	r3, [r7]
 238:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 239:notoriOS.c    ****     alarm newAlarm;
 240:notoriOS.c    ****     
 241:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 242:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 583              		.loc 1 242 0
 584 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 585 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 243:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 586              		.loc 1 243 0
 587 001e 7B78     		ldrb	r3, [r7, #1]
 588 0020 3B73     		strb	r3, [r7, #12]
 244:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 589              		.loc 1 244 0
 590 0022 3B78     		ldrb	r3, [r7]
 591 0024 7B73     		strb	r3, [r7, #13]
 245:notoriOS.c    ****     
 246:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 247:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 248:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 592              		.loc 1 248 0
 593 0026 B7F90230 		ldrsh	r3, [r7, #2]
 594 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 249:notoriOS.c    ****     
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 16


 250:notoriOS.c    ****     return newAlarm;
 595              		.loc 1 250 0
 596 002c 7B68     		ldr	r3, [r7, #4]
 597 002e 1A46     		mov	r2, r3
 598 0030 07F10803 		add	r3, r7, #8
 599 0034 1868     		ldr	r0, [r3]	@ unaligned
 600 0036 1060     		str	r0, [r2]	@ unaligned
 601 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 602 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 251:notoriOS.c    ****     
 252:notoriOS.c    **** }
 603              		.loc 1 252 0
 604 003c 7868     		ldr	r0, [r7, #4]
 605 003e 1437     		adds	r7, r7, #20
 606              		.cfi_def_cfa_offset 4
 607 0040 BD46     		mov	sp, r7
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 0042 80BC     		pop	{r7}
 611              		.cfi_restore 7
 612              		.cfi_def_cfa_offset 0
 613 0044 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE71:
 616              		.size	CreateAlarm, .-CreateAlarm
 617 0046 00BF     		.section	.rodata
 618 0047 00       		.align	2
 619              	.LC4:
 620 0048 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 620      2D2D2D2D 
 620      2D2D2D2D 
 620      2D424547 
 620      494E2054 
 621 0072 0000     		.align	2
 622              	.LC5:
 623 0074 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\000"
 623      3D25732C 
 623      2053494D 
 623      49443D25 
 623      732C2044 
 624 0093 00       		.align	2
 625              	.LC6:
 626 0094 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 626      2D2D2D2D 
 626      2D2D2D2D 
 626      2D2D2D45 
 626      4E442054 
 627 00bd 00       		.ascii	"\000"
 628              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 629              		.align	2
 630              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 631              		.thumb
 632              		.thumb_func
 633              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 634              	ChickityCheckYourselfBeforeYouWreckYourself:
 635              	.LFB72:
 253:notoriOS.c    **** 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 17


 254:notoriOS.c    **** // ==============================================
 255:notoriOS.c    **** // Dropping bombs on your moms
 256:notoriOS.c    **** //      - Ice Cube (1992)
 257:notoriOS.c    **** //
 258:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 259:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 260:notoriOS.c    **** // ==============================================
 261:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 636              		.loc 1 261 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 2328
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 90B5     		push	{r4, r7, lr}
 641              		.cfi_def_cfa_offset 12
 642              		.cfi_offset 4, -12
 643              		.cfi_offset 7, -8
 644              		.cfi_offset 14, -4
 645 0002 ADF6942D 		subw	sp, sp, #2708
 646              		.cfi_def_cfa_offset 2720
 647 0006 5EAF     		add	r7, sp, #376
 648              		.cfi_def_cfa 7, 2344
 262:notoriOS.c    **** 
 263:notoriOS.c    ****     //test_t t_influx = influx_test();
 264:notoriOS.c    ****     //printTestStatus(t_influx);
 265:notoriOS.c    ****     
 266:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 649              		.loc 1 266 0
 650 0008 4249     		ldr	r1, .L26
 651 000a 0320     		movs	r0, #3
 652 000c FFF7FEFF 		bl	printNotif
 267:notoriOS.c    ****     
 268:notoriOS.c    ****     // Test DO sensor
 269:notoriOS.c    ****     test_t t_DO_sensor = DO_sensor_test();
 653              		.loc 1 269 0
 654 0010 07F29473 		addw	r3, r7, #1940
 655 0014 1846     		mov	r0, r3
 656 0016 FFF7FEFF 		bl	DO_sensor_test
 270:notoriOS.c    ****     printTestStatus(t_DO_sensor);
 657              		.loc 1 270 0
 658 001a 07F29474 		addw	r4, r7, #1940
 659 001e 6846     		mov	r0, sp
 660 0020 04F11003 		add	r3, r4, #16
 661 0024 40F27112 		movw	r2, #369
 662 0028 1946     		mov	r1, r3
 663 002a FFF7FEFF 		bl	memcpy
 664 002e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 665 0032 FFF7FEFF 		bl	printTestStatus
 271:notoriOS.c    ****     
 272:notoriOS.c    ****     // Test level sensor
 273:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 666              		.loc 1 273 0
 667 0036 07F5C263 		add	r3, r7, #1552
 668 003a 1846     		mov	r0, r3
 669 003c FFF7FEFF 		bl	level_sensor_test
 274:notoriOS.c    ****     printTestStatus(t_level_sensor);
 670              		.loc 1 274 0
 671 0040 07F5C264 		add	r4, r7, #1552
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 18


 672 0044 6846     		mov	r0, sp
 673 0046 04F11003 		add	r3, r4, #16
 674 004a 40F27112 		movw	r2, #369
 675 004e 1946     		mov	r1, r3
 676 0050 FFF7FEFF 		bl	memcpy
 677 0054 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 678 0058 FFF7FEFF 		bl	printTestStatus
 275:notoriOS.c    ****     
 276:notoriOS.c    ****     // Test voltages
 277:notoriOS.c    ****     test_t t_voltages = voltages_test();
 679              		.loc 1 277 0
 680 005c 07F28C43 		addw	r3, r7, #1164
 681 0060 1846     		mov	r0, r3
 682 0062 FFF7FEFF 		bl	voltages_test
 278:notoriOS.c    ****     printTestStatus(t_voltages);
 683              		.loc 1 278 0
 684 0066 07F28C44 		addw	r4, r7, #1164
 685 006a 6846     		mov	r0, sp
 686 006c 04F11003 		add	r3, r4, #16
 687 0070 40F27112 		movw	r2, #369
 688 0074 1946     		mov	r1, r3
 689 0076 FFF7FEFF 		bl	memcpy
 690 007a 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 691 007e FFF7FEFF 		bl	printTestStatus
 279:notoriOS.c    ****     
 280:notoriOS.c    ****     // Test voltages
 281:notoriOS.c    ****     test_t t_pressure = pressure_sensor_test();
 692              		.loc 1 281 0
 693 0082 07F54273 		add	r3, r7, #776
 694 0086 1846     		mov	r0, r3
 695 0088 FFF7FEFF 		bl	pressure_sensor_test
 282:notoriOS.c    ****     printTestStatus(t_pressure);
 696              		.loc 1 282 0
 697 008c 07F54274 		add	r4, r7, #776
 698 0090 6846     		mov	r0, sp
 699 0092 04F11003 		add	r3, r4, #16
 700 0096 40F27112 		movw	r2, #369
 701 009a 1946     		mov	r1, r3
 702 009c FFF7FEFF 		bl	memcpy
 703 00a0 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 704 00a4 FFF7FEFF 		bl	printTestStatus
 283:notoriOS.c    ****     
 284:notoriOS.c    ****     // Test SD card
 285:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 705              		.loc 1 285 0
 706 00a8 07F5C273 		add	r3, r7, #388
 707 00ac 1846     		mov	r0, r3
 708 00ae FFF7FEFF 		bl	SD_card_test
 286:notoriOS.c    ****     printTestStatus(t_sd_card);
 709              		.loc 1 286 0
 710 00b2 07F5C274 		add	r4, r7, #388
 711 00b6 6846     		mov	r0, sp
 712 00b8 04F11003 		add	r3, r4, #16
 713 00bc 40F27112 		movw	r2, #369
 714 00c0 1946     		mov	r1, r3
 715 00c2 FFF7FEFF 		bl	memcpy
 716 00c6 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 19


 717 00ca FFF7FEFF 		bl	printTestStatus
 287:notoriOS.c    ****     
 288:notoriOS.c    ****     // Test modem
 289:notoriOS.c    ****     test_t t_modem = modem_test();
 718              		.loc 1 289 0
 719 00ce 3B46     		mov	r3, r7
 720 00d0 1846     		mov	r0, r3
 721 00d2 FFF7FEFF 		bl	modem_test
 290:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s",modem_info.imei,modem_info.sim_i
 722              		.loc 1 290 0
 723 00d6 104B     		ldr	r3, .L26+4
 724 00d8 0093     		str	r3, [sp]
 725 00da 104B     		ldr	r3, .L26+8
 726 00dc 104A     		ldr	r2, .L26+12
 727 00de 1149     		ldr	r1, .L26+16
 728 00e0 0320     		movs	r0, #3
 729 00e2 FFF7FEFF 		bl	printNotif
 291:notoriOS.c    ****     printTestStatus(t_modem);
 730              		.loc 1 291 0
 731 00e6 3C46     		mov	r4, r7
 732 00e8 6846     		mov	r0, sp
 733 00ea 04F11003 		add	r3, r4, #16
 734 00ee 40F27112 		movw	r2, #369
 735 00f2 1946     		mov	r1, r3
 736 00f4 FFF7FEFF 		bl	memcpy
 737 00f8 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 738 00fc FFF7FEFF 		bl	printTestStatus
 292:notoriOS.c    ****     
 293:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 739              		.loc 1 293 0
 740 0100 0949     		ldr	r1, .L26+20
 741 0102 0320     		movs	r0, #3
 742 0104 FFF7FEFF 		bl	printNotif
 294:notoriOS.c    **** 
 295:notoriOS.c    **** }
 743              		.loc 1 295 0
 744 0108 00BF     		nop
 745 010a 07F61C17 		addw	r7, r7, #2332
 746              		.cfi_def_cfa_offset 12
 747 010e BD46     		mov	sp, r7
 748              		.cfi_def_cfa_register 13
 749              		@ sp needed
 750 0110 90BD     		pop	{r4, r7, pc}
 751              	.L27:
 752 0112 00BF     		.align	2
 753              	.L26:
 754 0114 48000000 		.word	.LC4
 755 0118 04000000 		.word	system_info+4
 756 011c 00000000 		.word	modem_info
 757 0120 28000000 		.word	modem_info+40
 758 0124 74000000 		.word	.LC5
 759 0128 94000000 		.word	.LC6
 760              		.cfi_endproc
 761              	.LFE72:
 762              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 763              		.section	.text.main,"ax",%progbits
 764              		.align	2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 20


 765              		.global	main
 766              		.thumb
 767              		.thumb_func
 768              		.type	main, %function
 769              	main:
 770              	.LFB73:
 296:notoriOS.c    **** 
 297:notoriOS.c    **** // ==============================================
 298:notoriOS.c    **** // Processes Core Tasks
 299:notoriOS.c    **** // ==============================================
 300:notoriOS.c    **** int main(void)
 301:notoriOS.c    **** {
 771              		.loc 1 301 0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 0
 774              		@ frame_needed = 1, uses_anonymous_args = 0
 775 0000 80B5     		push	{r7, lr}
 776              		.cfi_def_cfa_offset 8
 777              		.cfi_offset 7, -8
 778              		.cfi_offset 14, -4
 779 0002 00AF     		add	r7, sp, #0
 780              		.cfi_def_cfa_register 7
 302:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 781              		.loc 1 302 0
 782              		.syntax unified
 783              	@ 302 "notoriOS.c" 1
 784 0004 62B6     		CPSIE   i
 785              	@ 0 "" 2
 303:notoriOS.c    **** 
 304:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 786              		.loc 1 304 0
 787              		.thumb
 788              		.syntax unified
 789 0006 FFF7FEFF 		bl	ReadyOrNot
 305:notoriOS.c    ****     
 306:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 790              		.loc 1 306 0
 791 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 792              	.L30:
 307:notoriOS.c    ****    
 308:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 309:notoriOS.c    ****     {
 310:notoriOS.c    ****         
 311:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 793              		.loc 1 311 0
 794 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 795 0012 0346     		mov	r3, r0
 796 0014 002B     		cmp	r3, #0
 797 0016 FAD1     		bne	.L30
 312:notoriOS.c    ****         {
 313:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
 798              		.loc 1 313 0
 799 0018 FFF7FEFF 		bl	LayBack
 314:notoriOS.c    ****         }
 315:notoriOS.c    ****     }
 800              		.loc 1 315 0
 801 001c F7E7     		b	.L30
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 21


 802              		.cfi_endproc
 803              	.LFE73:
 804              		.size	main, .-main
 805 001e 00BF     		.section	.rodata
 806 00be 0000     		.align	2
 807              	.LC7:
 808 00c0 4D6F6465 		.ascii	"Modem is ready.\000"
 808      6D206973 
 808      20726561 
 808      64792E00 
 809              		.align	2
 810              	.LC8:
 811 00d0 72737270 		.ascii	"rsrp\000"
 811      00
 812 00d5 000000   		.align	2
 813              	.LC9:
 814 00d8 7472795F 		.ascii	"try_counter\000"
 814      636F756E 
 814      74657200 
 815              		.align	2
 816              	.LC10:
 817 00e4 64617461 		.ascii	"data_count_sent\000"
 817      5F636F75 
 817      6E745F73 
 817      656E7400 
 818              		.align	2
 819              	.LC11:
 820 00f4 64617461 		.ascii	"data_count_desired\000"
 820      5F636F75 
 820      6E745F64 
 820      65736972 
 820      656400
 821 0107 00       		.align	2
 822              	.LC12:
 823 0108 42656769 		.ascii	"Begin HTTP post.\000"
 823      6E204854 
 823      54502070 
 823      6F73742E 
 823      00
 824 0119 000000   		.align	2
 825              	.LC13:
 826 011c 61623336 		.ascii	"ab365834097c73421db02c6dec16205539fcdb90\000"
 826      35383334 
 826      30393763 
 826      37333432 
 826      31646230 
 827 0145 000000   		.align	2
 828              	.LC14:
 829 0148 6170692F 		.ascii	"api/v1/write\000"
 829      76312F77 
 829      72697465 
 829      00
 830 0155 000000   		.align	2
 831              	.LC15:
 832 0158 48545450 		.ascii	"HTTP route: %s\000"
 832      20726F75 
 832      74653A20 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 22


 832      257300
 833 0167 00       		.align	2
 834              	.LC16:
 835 0168 312E3100 		.ascii	"1.1\000"
 836              		.align	2
 837              	.LC17:
 838 016c 00       		.ascii	"\000"
 839 016d 000000   		.align	2
 840              	.LC18:
 841 0170 436C6F73 		.ascii	"Close\000"
 841      6500
 842 0176 0000     		.align	2
 843              	.LC19:
 844 0178 504F5354 		.ascii	"POST\000"
 844      00
 845 017d 000000   		.align	2
 846              	.LC20:
 847 0180 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 847      20485454 
 847      50205265 
 847      71756573 
 847      743A2025 
 848 0196 0000     		.align	2
 849              	.LC21:
 850 0198 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 850      443D312C 
 850      302C2564 
 850      2C222573 
 850      222C302C 
 851 01b1 000000   		.align	2
 852              	.LC22:
 853 01b4 257300   		.ascii	"%s\000"
 854 01b7 00       		.align	2
 855              	.LC23:
 856 01b8 4F4B00   		.ascii	"OK\000"
 857              		.global	__aeabi_ui2d
 858              		.global	__aeabi_d2iz
 859 01bb 00       		.align	2
 860              	.LC24:
 861 01bc 68747470 		.ascii	"http_request len: %d\000"
 861      5F726571 
 861      75657374 
 861      206C656E 
 861      3A202564 
 862 01d1 000000   		.align	2
 863              	.LC25:
 864 01d4 23206F66 		.ascii	"# of packets: %d\000"
 864      20706163 
 864      6B657473 
 864      3A202564 
 864      00
 865 01e5 000000   		.align	2
 866              	.LC26:
 867 01e8 3E00     		.ascii	">\000"
 868 01ea 0000     		.align	2
 869              	.LC27:
 870 01ec 41542353 		.ascii	"AT#SSEND=1\015\012\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 23


 870      53454E44 
 870      3D310D0A 
 870      00
 871 01f9 000000   		.align	2
 872              	.LC28:
 873 01fc 1A00     		.ascii	"\032\000"
 874 01fe 0000     		.align	2
 875              	.LC29:
 876 0200 6368756E 		.ascii	"chunk %d: %s\000"
 876      6B202564 
 876      3A202573 
 876      00
 877 020d 000000   		.align	2
 878              	.LC30:
 879 0210 5352494E 		.ascii	"SRING\000"
 879      4700
 880 0216 0000     		.align	2
 881              	.LC31:
 882 0218 4F532D4F 		.ascii	"OS-OK\000"
 882      4B00
 883 021e 0000     		.align	2
 884              	.LC32:
 885 0220 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 885      52454356 
 885      3D312C31 
 885      3030300D 
 885      00
 886 0231 000000   		.align	2
 887              	.LC33:
 888 0234 6D6F6465 		.ascii	"modem_tx_time\000"
 888      6D5F7478 
 888      5F74696D 
 888      6500
 889 0242 0000     		.align	2
 890              	.LC34:
 891 0244 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 891      4F3A2043 
 891      6F756C64 
 891      206E6F74 
 891      20726563 
 892              		.section	.text.syncData,"ax",%progbits
 893              		.align	2
 894              		.global	syncData
 895              		.thumb
 896              		.thumb_func
 897              		.type	syncData, %function
 898              	syncData:
 899              	.LFB74:
 316:notoriOS.c    **** }
 317:notoriOS.c    **** 
 318:notoriOS.c    **** // ==============================================
 319:notoriOS.c    **** // Syncs data with server
 320:notoriOS.c    **** // Returns 0 when done
 321:notoriOS.c    **** // ==============================================
 322:notoriOS.c    **** uint8 syncData(){
 900              		.loc 1 322 0
 901              		.cfi_startproc
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 24


 902              		@ args = 0, pretend = 0, frame = 1336
 903              		@ frame_needed = 1, uses_anonymous_args = 0
 904 0000 90B5     		push	{r4, r7, lr}
 905              		.cfi_def_cfa_offset 12
 906              		.cfi_offset 4, -12
 907              		.cfi_offset 7, -8
 908              		.cfi_offset 14, -4
 909 0002 ADF2545D 		subw	sp, sp, #1364
 910              		.cfi_def_cfa_offset 1376
 911 0006 06AF     		add	r7, sp, #24
 912              		.cfi_def_cfa 7, 1352
 323:notoriOS.c    ****     
 324:notoriOS.c    ****     /*
 325:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 326:notoriOS.c    ****     uint8 check = 0;
 327:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 328:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 329:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 330:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 331:notoriOS.c    ****     */
 332:notoriOS.c    **** 
 333:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 334:notoriOS.c    ****     LED_Write(1u);
 913              		.loc 1 334 0
 914 0008 0120     		movs	r0, #1
 915 000a FFF7FEFF 		bl	LED_Write
 335:notoriOS.c    ****     CyDelay(100u);
 916              		.loc 1 335 0
 917 000e 6420     		movs	r0, #100
 918 0010 FFF7FEFF 		bl	CyDelay
 336:notoriOS.c    ****     LED_Write(0u);
 919              		.loc 1 336 0
 920 0014 0020     		movs	r0, #0
 921 0016 FFF7FEFF 		bl	LED_Write
 337:notoriOS.c    **** 
 338:notoriOS.c    ****     
 339:notoriOS.c    ****     // If there's no data, not need to do anything
 340:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 922              		.loc 1 340 0
 923 001a FFF7FEFF 		bl	sizeOfDataStack
 924 001e 0346     		mov	r3, r0
 925 0020 002B     		cmp	r3, #0
 926 0022 01D1     		bne	.L32
 341:notoriOS.c    ****         return 0u;
 927              		.loc 1 341 0
 928 0024 0023     		movs	r3, #0
 929 0026 F9E1     		b	.L33
 930              	.L32:
 342:notoriOS.c    ****         }
 343:notoriOS.c    ****     
 344:notoriOS.c    ****     // Create request body, in this case influx
 345:notoriOS.c    ****     // Place body into HTTP request header
 346:notoriOS.c    ****     // Fire up modem and get it out
 347:notoriOS.c    ****      
 348:notoriOS.c    ****     
 349:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 350:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 25


 931              		.loc 1 350 0
 932 0028 FFF7FEFF 		bl	modem_get_state
 933 002c 0346     		mov	r3, r0
 934 002e 002B     		cmp	r3, #0
 935 0030 11D1     		bne	.L34
 351:notoriOS.c    **** 
 352:notoriOS.c    ****         try_counter++;
 936              		.loc 1 352 0
 937 0032 C74B     		ldr	r3, .L46
 938 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 939 0036 0133     		adds	r3, r3, #1
 940 0038 DAB2     		uxtb	r2, r3
 941 003a C54B     		ldr	r3, .L46
 942 003c 1A70     		strb	r2, [r3]
 353:notoriOS.c    ****         	
 354:notoriOS.c    ****         if(try_counter <= 2){
 943              		.loc 1 354 0
 944 003e C44B     		ldr	r3, .L46
 945 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 946 0042 022B     		cmp	r3, #2
 947 0044 02D8     		bhi	.L35
 355:notoriOS.c    ****             modem_power_up();
 948              		.loc 1 355 0
 949 0046 FFF7FEFF 		bl	modem_power_up
 950 004a E6E1     		b	.L36
 951              	.L35:
 356:notoriOS.c    ****         }else{
 357:notoriOS.c    ****             try_counter = 0;
 952              		.loc 1 357 0
 953 004c C04B     		ldr	r3, .L46
 954 004e 0022     		movs	r2, #0
 955 0050 1A70     		strb	r2, [r3]
 358:notoriOS.c    ****             return 0u;
 956              		.loc 1 358 0
 957 0052 0023     		movs	r3, #0
 958 0054 E2E1     		b	.L33
 959              	.L34:
 359:notoriOS.c    ****             }
 360:notoriOS.c    ****             
 361:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 960              		.loc 1 361 0
 961 0056 FFF7FEFF 		bl	modem_get_state
 962 005a 0346     		mov	r3, r0
 963 005c 042B     		cmp	r3, #4
 964 005e 40F0DC81 		bne	.L36
 965              	.LBB2:
 362:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 966              		.loc 1 362 0
 967 0062 BC49     		ldr	r1, .L46+4
 968 0064 0020     		movs	r0, #0
 969 0066 FFF7FEFF 		bl	printNotif
 363:notoriOS.c    ****         
 364:notoriOS.c    ****         http_request[0] = '\0';
 970              		.loc 1 364 0
 971 006a BB4B     		ldr	r3, .L46+8
 972 006c 0022     		movs	r2, #0
 973 006e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 26


 365:notoriOS.c    ****         http_body[0] = '\0';
 974              		.loc 1 365 0
 975 0070 BA4B     		ldr	r3, .L46+12
 976 0072 0022     		movs	r2, #0
 977 0074 1A70     		strb	r2, [r3]
 366:notoriOS.c    ****         http_route[0] = '\0';
 978              		.loc 1 366 0
 979 0076 BA4B     		ldr	r3, .L46+16
 980 0078 0022     		movs	r2, #0
 981 007a 1A70     		strb	r2, [r3]
 367:notoriOS.c    ****         //char *base = "write";
 368:notoriOS.c    ****         
 369:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power)
 370:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 371:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 982              		.loc 1 371 0
 983 007c B94B     		ldr	r3, .L46+20
 984 007e 5B69     		ldr	r3, [r3, #20]
 985 0080 07F5A260 		add	r0, r7, #1296
 986 0084 B84A     		ldr	r2, .L46+24
 987 0086 1421     		movs	r1, #20
 988 0088 FFF7FEFF 		bl	snprintf
 372:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 989              		.loc 1 372 0
 990 008c FFF7FEFF 		bl	getTimeStamp
 991 0090 0246     		mov	r2, r0
 992 0092 07F5A263 		add	r3, r7, #1296
 993 0096 1946     		mov	r1, r3
 994 0098 B448     		ldr	r0, .L46+28
 995 009a FFF7FEFF 		bl	pushData
 373:notoriOS.c    ****         
 374:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 375:notoriOS.c    ****         char c_try_counter[20];
 376:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 996              		.loc 1 376 0
 997 009e AC4B     		ldr	r3, .L46
 998 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 999 00a2 07F2FC40 		addw	r0, r7, #1276
 1000 00a6 B04A     		ldr	r2, .L46+24
 1001 00a8 1421     		movs	r1, #20
 1002 00aa FFF7FEFF 		bl	snprintf
 377:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 1003              		.loc 1 377 0
 1004 00ae FFF7FEFF 		bl	getTimeStamp
 1005 00b2 0246     		mov	r2, r0
 1006 00b4 07F2FC43 		addw	r3, r7, #1276
 1007 00b8 1946     		mov	r1, r3
 1008 00ba AD48     		ldr	r0, .L46+32
 1009 00bc FFF7FEFF 		bl	pushData
 378:notoriOS.c    ****         
 379:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
 380:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 381:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 382:notoriOS.c    ****         if(buffer_overflow == false){
 1010              		.loc 1 382 0
 1011 00c0 AC4B     		ldr	r3, .L46+36
 1012 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 27


 1013 00c4 83F00103 		eor	r3, r3, #1
 1014 00c8 DBB2     		uxtb	r3, r3
 1015 00ca 002B     		cmp	r3, #0
 1016 00cc 16D0     		beq	.L37
 1017              	.LBB3:
 383:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 1018              		.loc 1 383 0
 1019 00ce FFF7FEFF 		bl	sizeOfDataStack
 1020 00d2 0346     		mov	r3, r0
 1021 00d4 A7F83035 		strh	r3, [r7, #1328]	@ movhi
 384:notoriOS.c    ****             char c_data_count_sent[20];
 385:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 1022              		.loc 1 385 0
 1023 00d8 B7F83035 		ldrh	r3, [r7, #1328]
 1024 00dc 07F2D440 		addw	r0, r7, #1236
 1025 00e0 A14A     		ldr	r2, .L46+24
 1026 00e2 1421     		movs	r1, #20
 1027 00e4 FFF7FEFF 		bl	snprintf
 386:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1028              		.loc 1 386 0
 1029 00e8 FFF7FEFF 		bl	getTimeStamp
 1030 00ec 0246     		mov	r2, r0
 1031 00ee 07F2D443 		addw	r3, r7, #1236
 1032 00f2 1946     		mov	r1, r3
 1033 00f4 A048     		ldr	r0, .L46+40
 1034 00f6 FFF7FEFF 		bl	pushData
 1035              	.LBE3:
 1036 00fa 0FE0     		b	.L38
 1037              	.L37:
 1038              	.LBB4:
 387:notoriOS.c    ****         }else{
 388:notoriOS.c    ****             char c_data_count_sent[20];
 389:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1039              		.loc 1 389 0
 1040 00fc 07F59860 		add	r0, r7, #1216
 1041 0100 9623     		movs	r3, #150
 1042 0102 994A     		ldr	r2, .L46+24
 1043 0104 1421     		movs	r1, #20
 1044 0106 FFF7FEFF 		bl	snprintf
 390:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1045              		.loc 1 390 0
 1046 010a FFF7FEFF 		bl	getTimeStamp
 1047 010e 0246     		mov	r2, r0
 1048 0110 07F59863 		add	r3, r7, #1216
 1049 0114 1946     		mov	r1, r3
 1050 0116 9848     		ldr	r0, .L46+40
 1051 0118 FFF7FEFF 		bl	pushData
 1052              	.L38:
 1053              	.LBE4:
 391:notoriOS.c    ****         }
 392:notoriOS.c    ****         
 393:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 394:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 1054              		.loc 1 394 0
 1055 011c FFF7FEFF 		bl	sizeOfDataStackDesired
 1056 0120 0346     		mov	r3, r0
 1057 0122 A7F82E35 		strh	r3, [r7, #1326]	@ movhi
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 28


 395:notoriOS.c    ****         char c_data_count_desired[20];
 396:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 397:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1058              		.loc 1 397 0
 1059 0126 B7F82E35 		ldrh	r3, [r7, #1326]
 1060 012a 013B     		subs	r3, r3, #1
 1061 012c 07F59D60 		add	r0, r7, #1256
 1062 0130 8D4A     		ldr	r2, .L46+24
 1063 0132 1421     		movs	r1, #20
 1064 0134 FFF7FEFF 		bl	snprintf
 398:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
 1065              		.loc 1 398 0
 1066 0138 FFF7FEFF 		bl	getTimeStamp
 1067 013c 0246     		mov	r2, r0
 1068 013e 07F59D63 		add	r3, r7, #1256
 1069 0142 1946     		mov	r1, r3
 1070 0144 8D48     		ldr	r0, .L46+44
 1071 0146 FFF7FEFF 		bl	pushData
 399:notoriOS.c    ****         
 400:notoriOS.c    ****         // Construct HTPP request
 401:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1072              		.loc 1 401 0
 1073 014a 8D49     		ldr	r1, .L46+48
 1074 014c 0020     		movs	r0, #0
 1075 014e FFF7FEFF 		bl	printNotif
 402:notoriOS.c    ****         
 403:notoriOS.c    ****         // Old influx API
 404:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 405:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1076              		.loc 1 405 0
 1077 0152 8C4B     		ldr	r3, .L46+52
 1078 0154 8C4A     		ldr	r2, .L46+56
 1079 0156 8D49     		ldr	r1, .L46+60
 1080 0158 8148     		ldr	r0, .L46+16
 1081 015a FFF7FEFF 		bl	construct_malcom_route
 406:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1082              		.loc 1 406 0
 1083 015e 804A     		ldr	r2, .L46+16
 1084 0160 8B49     		ldr	r1, .L46+64
 1085 0162 0020     		movs	r0, #0
 1086 0164 FFF7FEFF 		bl	printNotif
 407:notoriOS.c    ****         
 408:notoriOS.c    ****         //OLD INFLUX API
 409:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 410:notoriOS.c    ****         construct_malcom_body(http_body);
 1087              		.loc 1 410 0
 1088 0168 7C48     		ldr	r0, .L46+12
 1089 016a FFF7FEFF 		bl	construct_malcom_body
 411:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1090              		.loc 1 411 0
 1091 016e 894B     		ldr	r3, .L46+68
 1092 0170 5B6E     		ldr	r3, [r3, #100]
 1093 0172 894A     		ldr	r2, .L46+72
 1094 0174 0592     		str	r2, [sp, #20]
 1095 0176 0022     		movs	r2, #0
 1096 0178 0492     		str	r2, [sp, #16]
 1097 017a 884A     		ldr	r2, .L46+76
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 29


 1098 017c 0392     		str	r2, [sp, #12]
 1099 017e 884A     		ldr	r2, .L46+80
 1100 0180 0292     		str	r2, [sp, #8]
 1101 0182 884A     		ldr	r2, .L46+84
 1102 0184 0192     		str	r2, [sp, #4]
 1103 0186 0093     		str	r3, [sp]
 1104 0188 754B     		ldr	r3, .L46+16
 1105 018a 824A     		ldr	r2, .L46+68
 1106 018c 7349     		ldr	r1, .L46+12
 1107 018e 7248     		ldr	r0, .L46+8
 1108 0190 FFF7FEFF 		bl	construct_generic_HTTP_request
 412:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1109              		.loc 1 412 0
 1110 0194 704A     		ldr	r2, .L46+8
 1111 0196 8449     		ldr	r1, .L46+88
 1112 0198 0020     		movs	r0, #0
 1113 019a FFF7FEFF 		bl	printNotif
 413:notoriOS.c    ****         
 414:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 415:notoriOS.c    ****         // Open port and begin command line sequence
 416:notoriOS.c    ****         char portConfig[200];
 417:notoriOS.c    ****         uint8 status = 0u;
 1114              		.loc 1 417 0
 1115 019e 0023     		movs	r3, #0
 1116 01a0 87F82D35 		strb	r3, [r7, #1325]
 418:notoriOS.c    ****         
 419:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1117              		.loc 1 419 0
 1118 01a4 7B4B     		ldr	r3, .L46+68
 1119 01a6 5A6E     		ldr	r2, [r3, #100]
 1120 01a8 3846     		mov	r0, r7
 1121 01aa 7A4B     		ldr	r3, .L46+68
 1122 01ac 0093     		str	r3, [sp]
 1123 01ae 1346     		mov	r3, r2
 1124 01b0 7E4A     		ldr	r2, .L46+92
 1125 01b2 C821     		movs	r1, #200
 1126 01b4 FFF7FEFF 		bl	snprintf
 420:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1127              		.loc 1 420 0
 1128 01b8 3B46     		mov	r3, r7
 1129 01ba 1A46     		mov	r2, r3
 1130 01bc 7C49     		ldr	r1, .L46+96
 1131 01be 0020     		movs	r0, #0
 1132 01c0 FFF7FEFF 		bl	printNotif
 421:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1133              		.loc 1 421 0
 1134 01c4 3B46     		mov	r3, r7
 1135 01c6 42F21072 		movw	r2, #10000
 1136 01ca 7A49     		ldr	r1, .L46+100
 1137 01cc 1846     		mov	r0, r3
 1138 01ce FFF7FEFF 		bl	at_write_command
 1139 01d2 0346     		mov	r3, r0
 1140 01d4 87F82D35 		strb	r3, [r7, #1325]
 422:notoriOS.c    ****         
 423:notoriOS.c    ****         // create character pointer to chunk through the http_request
 424:notoriOS.c    ****         char *chunk;
 425:notoriOS.c    ****         // Set chunk to start where http_request starts
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 30


 426:notoriOS.c    ****         chunk = http_request;
 1141              		.loc 1 426 0
 1142 01d8 5F4B     		ldr	r3, .L46+8
 1143 01da C7F83435 		str	r3, [r7, #1332]
 427:notoriOS.c    ****         // variable for the number of packets to send
 428:notoriOS.c    ****         int8 packets;
 429:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1144              		.loc 1 429 0
 1145 01de 5E48     		ldr	r0, .L46+8
 1146 01e0 FFF7FEFF 		bl	strlen
 1147 01e4 0246     		mov	r2, r0
 1148 01e6 744B     		ldr	r3, .L46+104
 1149 01e8 A3FB0223 		umull	r2, r3, r3, r2
 1150 01ec 5B09     		lsrs	r3, r3, #5
 1151 01ee 1846     		mov	r0, r3
 1152 01f0 FFF7FEFF 		bl	__aeabi_ui2d
 1153 01f4 4FF00002 		mov	r2, #0
 1154 01f8 704B     		ldr	r3, .L46+108
 1155 01fa FFF7FEFF 		bl	nextafter
 1156 01fe 0346     		mov	r3, r0
 1157 0200 0C46     		mov	r4, r1
 1158 0202 1846     		mov	r0, r3
 1159 0204 2146     		mov	r1, r4
 1160 0206 FFF7FEFF 		bl	ceil
 1161 020a 0346     		mov	r3, r0
 1162 020c 0C46     		mov	r4, r1
 1163 020e 1846     		mov	r0, r3
 1164 0210 2146     		mov	r1, r4
 1165 0212 FFF7FEFF 		bl	__aeabi_d2iz
 1166 0216 0346     		mov	r3, r0
 1167 0218 87F82C35 		strb	r3, [r7, #1324]
 430:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1168              		.loc 1 430 0
 1169 021c 4E48     		ldr	r0, .L46+8
 1170 021e FFF7FEFF 		bl	strlen
 1171 0222 0346     		mov	r3, r0
 1172 0224 1A46     		mov	r2, r3
 1173 0226 6649     		ldr	r1, .L46+112
 1174 0228 0020     		movs	r0, #0
 1175 022a FFF7FEFF 		bl	printNotif
 431:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1176              		.loc 1 431 0
 1177 022e 97F92C35 		ldrsb	r3, [r7, #1324]
 1178 0232 1A46     		mov	r2, r3
 1179 0234 6349     		ldr	r1, .L46+116
 1180 0236 0020     		movs	r0, #0
 1181 0238 FFF7FEFF 		bl	printNotif
 1182              	.LBB5:
 432:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 433:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1183              		.loc 1 433 0
 1184 023c 0023     		movs	r3, #0
 1185 023e 87F83335 		strb	r3, [r7, #1331]
 1186 0242 53E0     		b	.L39
 1187              	.L42:
 1188              	.LBB6:
 434:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 31


 435:notoriOS.c    ****             char http_chunk[1001];
 436:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 437:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 438:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1189              		.loc 1 438 0
 1190 0244 4FF47A72 		mov	r2, #1000
 1191 0248 5F49     		ldr	r1, .L46+120
 1192 024a 6048     		ldr	r0, .L46+124
 1193 024c FFF7FEFF 		bl	at_write_command
 1194 0250 0346     		mov	r3, r0
 1195 0252 87F82D35 		strb	r3, [r7, #1325]
 439:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 440:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1196              		.loc 1 440 0
 1197 0256 07F1C800 		add	r0, r7, #200
 1198 025a D7F83435 		ldr	r3, [r7, #1332]
 1199 025e 544A     		ldr	r2, .L46+96
 1200 0260 4FF4FA71 		mov	r1, #500
 1201 0264 FFF7FEFF 		bl	snprintf
 441:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 442:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1202              		.loc 1 442 0
 1203 0268 07F1C803 		add	r3, r7, #200
 1204 026c 1846     		mov	r0, r3
 1205 026e FFF7FEFF 		bl	strlen
 1206 0272 0346     		mov	r3, r0
 1207 0274 1A46     		mov	r2, r3
 1208 0276 07F1C803 		add	r3, r7, #200
 1209 027a 1344     		add	r3, r3, r2
 1210 027c 5449     		ldr	r1, .L46+128
 1211 027e 1A46     		mov	r2, r3
 1212 0280 0B46     		mov	r3, r1
 1213 0282 1B88     		ldrh	r3, [r3]	@ unaligned
 1214 0284 1380     		strh	r3, [r2]	@ unaligned
 443:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1215              		.loc 1 443 0
 1216 0286 97F93325 		ldrsb	r2, [r7, #1331]
 1217 028a 07F1C803 		add	r3, r7, #200
 1218 028e 5149     		ldr	r1, .L46+132
 1219 0290 0020     		movs	r0, #0
 1220 0292 FFF7FEFF 		bl	printNotif
 444:notoriOS.c    ****             // Send data to server
 445:notoriOS.c    ****             if ((packet+1) != packets){
 1221              		.loc 1 445 0
 1222 0296 97F93335 		ldrsb	r3, [r7, #1331]
 1223 029a 5A1C     		adds	r2, r3, #1
 1224 029c 97F92C35 		ldrsb	r3, [r7, #1324]
 1225 02a0 9A42     		cmp	r2, r3
 1226 02a2 11D0     		beq	.L40
 446:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1227              		.loc 1 446 0
 1228 02a4 07F1C803 		add	r3, r7, #200
 1229 02a8 41F28832 		movw	r2, #5000
 1230 02ac 4149     		ldr	r1, .L46+100
 1231 02ae 1846     		mov	r0, r3
 1232 02b0 FFF7FEFF 		bl	at_write_command
 1233 02b4 0346     		mov	r3, r0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 32


 1234 02b6 87F82D35 		strb	r3, [r7, #1325]
 447:notoriOS.c    ****                 // Move the pointer forward 
 448:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1235              		.loc 1 448 0
 1236 02ba D7F83435 		ldr	r3, [r7, #1332]
 1237 02be 03F2F313 		addw	r3, r3, #499
 1238 02c2 C7F83435 		str	r3, [r7, #1332]
 1239 02c6 0AE0     		b	.L41
 1240              	.L40:
 449:notoriOS.c    ****             }else{
 450:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
 1241              		.loc 1 450 0
 1242 02c8 07F1C803 		add	r3, r7, #200
 1243 02cc 41F28832 		movw	r2, #5000
 1244 02d0 4149     		ldr	r1, .L46+136
 1245 02d2 1846     		mov	r0, r3
 1246 02d4 FFF7FEFF 		bl	at_write_command
 1247 02d8 0346     		mov	r3, r0
 1248 02da 87F82D35 		strb	r3, [r7, #1325]
 1249              	.L41:
 1250              	.LBE6:
 433:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1251              		.loc 1 433 0 discriminator 2
 1252 02de 97F93335 		ldrsb	r3, [r7, #1331]
 1253 02e2 DBB2     		uxtb	r3, r3
 1254 02e4 0133     		adds	r3, r3, #1
 1255 02e6 DBB2     		uxtb	r3, r3
 1256 02e8 87F83335 		strb	r3, [r7, #1331]
 1257              	.L39:
 433:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1258              		.loc 1 433 0 is_stmt 0 discriminator 1
 1259 02ec 97F93325 		ldrsb	r2, [r7, #1331]
 1260 02f0 97F92C35 		ldrsb	r3, [r7, #1324]
 1261 02f4 9A42     		cmp	r2, r3
 1262 02f6 A5DB     		blt	.L42
 1263              	.LBE5:
 451:notoriOS.c    ****             }
 452:notoriOS.c    ****             
 453:notoriOS.c    ****         }
 454:notoriOS.c    ****         
 455:notoriOS.c    ****         // Read received buffer
 456:notoriOS.c    ****         // A good write will return code "OS-OK"
 457:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 458:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 459:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1264              		.loc 1 459 0 is_stmt 1
 1265 02f8 41F28832 		movw	r2, #5000
 1266 02fc 3749     		ldr	r1, .L46+140
 1267 02fe 3848     		ldr	r0, .L46+144
 1268 0300 FFF7FEFF 		bl	at_write_command
 1269 0304 0346     		mov	r3, r0
 1270 0306 87F82D35 		strb	r3, [r7, #1325]
 460:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 461:notoriOS.c    ****     
 462:notoriOS.c    ****   
 463:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 464:notoriOS.c    ****         if(status == 1u){
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 33


 1271              		.loc 1 464 0
 1272 030a 97F82D35 		ldrb	r3, [r7, #1325]	@ zero_extendqisi2
 1273 030e 012B     		cmp	r3, #1
 1274 0310 6CD1     		bne	.L43
 1275              	.LBB7:
 465:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1276              		.loc 1 465 0
 1277 0312 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 466:notoriOS.c    ****             Clear_Data_Stack();
 1278              		.loc 1 466 0
 1279 0316 FFF7FEFF 		bl	Clear_Data_Stack
 467:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1280              		.loc 1 467 0
 1281 031a FFF7FEFF 		bl	getTimeStamp
 1282 031e 0246     		mov	r2, r0
 1283 0320 304B     		ldr	r3, .L46+148
 1284 0322 1B68     		ldr	r3, [r3]
 1285 0324 D31A     		subs	r3, r2, r3
 1286 0326 C7F82835 		str	r3, [r7, #1320]
 468:notoriOS.c    ****             char s_send_time[10];
 469:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1287              		.loc 1 469 0
 1288 032a 07F2B440 		addw	r0, r7, #1204
 1289 032e D7F82835 		ldr	r3, [r7, #1320]
 1290 0332 0D4A     		ldr	r2, .L46+24
 1291 0334 0A21     		movs	r1, #10
 1292 0336 FFF7FEFF 		bl	snprintf
 470:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1293              		.loc 1 470 0
 1294 033a FFF7FEFF 		bl	getTimeStamp
 1295 033e 0246     		mov	r2, r0
 1296 0340 07F2B443 		addw	r3, r7, #1204
 1297 0344 1946     		mov	r1, r3
 1298 0346 2848     		ldr	r0, .L46+152
 1299 0348 FFF7FEFF 		bl	pushData
 1300              	.LBE7:
 1301 034c 52E0     		b	.L44
 1302              	.L47:
 1303 034e 00BF     		.align	2
 1304              	.L46:
 1305 0350 00000000 		.word	try_counter
 1306 0354 C0000000 		.word	.LC7
 1307 0358 00000000 		.word	http_request
 1308 035c 00000000 		.word	http_body
 1309 0360 00000000 		.word	http_route
 1310 0364 00000000 		.word	modem_stats
 1311 0368 3C000000 		.word	.LC2
 1312 036c D0000000 		.word	.LC8
 1313 0370 D8000000 		.word	.LC9
 1314 0374 00000000 		.word	buffer_overflow
 1315 0378 E4000000 		.word	.LC10
 1316 037c F4000000 		.word	.LC11
 1317 0380 08010000 		.word	.LC12
 1318 0384 1C010000 		.word	.LC13
 1319 0388 28000000 		.word	modem_info+40
 1320 038c 48010000 		.word	.LC14
 1321 0390 58010000 		.word	.LC15
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 34


 1322 0394 00000000 		.word	system_settings
 1323 0398 68010000 		.word	.LC16
 1324 039c 6C010000 		.word	.LC17
 1325 03a0 70010000 		.word	.LC18
 1326 03a4 78010000 		.word	.LC19
 1327 03a8 80010000 		.word	.LC20
 1328 03ac 98010000 		.word	.LC21
 1329 03b0 B4010000 		.word	.LC22
 1330 03b4 B8010000 		.word	.LC23
 1331 03b8 D34D6210 		.word	274877907
 1332 03bc 00407F40 		.word	1082081280
 1333 03c0 BC010000 		.word	.LC24
 1334 03c4 D4010000 		.word	.LC25
 1335 03c8 E8010000 		.word	.LC26
 1336 03cc EC010000 		.word	.LC27
 1337 03d0 FC010000 		.word	.LC28
 1338 03d4 00020000 		.word	.LC29
 1339 03d8 10020000 		.word	.LC30
 1340 03dc 18020000 		.word	.LC31
 1341 03e0 20020000 		.word	.LC32
 1342 03e4 00000000 		.word	modem_start_time_stamp
 1343 03e8 34020000 		.word	.LC33
 1344              	.L43:
 471:notoriOS.c    ****         }else{
 472:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1345              		.loc 1 472 0
 1346 03ec 0E49     		ldr	r1, .L48
 1347 03ee 0220     		movs	r0, #2
 1348 03f0 FFF7FEFF 		bl	printNotif
 1349              	.L44:
 473:notoriOS.c    ****         }
 474:notoriOS.c    ****          
 475:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 476:notoriOS.c    ****         long network_time = modem_get_network_time();
 1350              		.loc 1 476 0
 1351 03f4 FFF7FEFF 		bl	modem_get_network_time
 1352 03f8 C7F82405 		str	r0, [r7, #1316]
 477:notoriOS.c    ****         if(network_time != 0){
 1353              		.loc 1 477 0
 1354 03fc D7F82435 		ldr	r3, [r7, #1316]
 1355 0400 002B     		cmp	r3, #0
 1356 0402 03D0     		beq	.L45
 478:notoriOS.c    ****            setTime(network_time);
 1357              		.loc 1 478 0
 1358 0404 D7F82405 		ldr	r0, [r7, #1316]
 1359 0408 FFF7FEFF 		bl	setTime
 1360              	.L45:
 479:notoriOS.c    ****         }
 480:notoriOS.c    ****         
 481:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 482:notoriOS.c    ****         // If not -- keep the statck and try next time
 483:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 484:notoriOS.c    ****         modem_power_down();
 1361              		.loc 1 484 0
 1362 040c FFF7FEFF 		bl	modem_power_down
 485:notoriOS.c    ****         
 486:notoriOS.c    ****         try_counter = 0u;
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 35


 1363              		.loc 1 486 0
 1364 0410 064B     		ldr	r3, .L48+4
 1365 0412 0022     		movs	r2, #0
 1366 0414 1A70     		strb	r2, [r3]
 487:notoriOS.c    ****         return 0u;
 1367              		.loc 1 487 0
 1368 0416 0023     		movs	r3, #0
 1369 0418 00E0     		b	.L33
 1370              	.L36:
 1371              	.LBE2:
 488:notoriOS.c    ****     }
 489:notoriOS.c    ****       
 490:notoriOS.c    ****       return 1u; // Not done yet
 1372              		.loc 1 490 0
 1373 041a 0123     		movs	r3, #1
 1374              	.L33:
 491:notoriOS.c    **** }
 1375              		.loc 1 491 0 discriminator 1
 1376 041c 1846     		mov	r0, r3
 1377 041e 07F23C57 		addw	r7, r7, #1340
 1378              		.cfi_def_cfa_offset 12
 1379 0422 BD46     		mov	sp, r7
 1380              		.cfi_def_cfa_register 13
 1381              		@ sp needed
 1382 0424 90BD     		pop	{r4, r7, pc}
 1383              	.L49:
 1384 0426 00BF     		.align	2
 1385              	.L48:
 1386 0428 44020000 		.word	.LC34
 1387 042c 00000000 		.word	try_counter
 1388              		.cfi_endproc
 1389              	.LFE74:
 1390              		.size	syncData, .-syncData
 1391              		.section	.text.configureRemoteParams,"ax",%progbits
 1392              		.align	2
 1393              		.global	configureRemoteParams
 1394              		.thumb
 1395              		.thumb_func
 1396              		.type	configureRemoteParams, %function
 1397              	configureRemoteParams:
 1398              	.LFB75:
 492:notoriOS.c    **** 
 493:notoriOS.c    **** // ==============================================
 494:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 495:notoriOS.c    **** // Returns 0 when done
 496:notoriOS.c    **** // ==============================================
 497:notoriOS.c    **** uint8 configureRemoteParams(){
 1399              		.loc 1 497 0
 1400              		.cfi_startproc
 1401              		@ args = 0, pretend = 0, frame = 8
 1402              		@ frame_needed = 1, uses_anonymous_args = 0
 1403 0000 80B5     		push	{r7, lr}
 1404              		.cfi_def_cfa_offset 8
 1405              		.cfi_offset 7, -8
 1406              		.cfi_offset 14, -4
 1407 0002 82B0     		sub	sp, sp, #8
 1408              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 36


 1409 0004 00AF     		add	r7, sp, #0
 1410              		.cfi_def_cfa_register 7
 498:notoriOS.c    ****     
 499:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1411              		.loc 1 499 0
 1412 0006 FFF7FEFF 		bl	modem_get_state
 1413 000a 0346     		mov	r3, r0
 1414 000c 002B     		cmp	r3, #0
 1415 000e 02D1     		bne	.L51
 500:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 501:notoriOS.c    ****         modem_power_up();
 1416              		.loc 1 501 0
 1417 0010 FFF7FEFF 		bl	modem_power_up
 1418 0014 11E0     		b	.L52
 1419              	.L51:
 502:notoriOS.c    ****             
 503:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1420              		.loc 1 503 0
 1421 0016 FFF7FEFF 		bl	modem_get_state
 1422 001a 0346     		mov	r3, r0
 1423 001c 042B     		cmp	r3, #4
 1424 001e 0CD1     		bne	.L52
 1425              	.LBB8:
 504:notoriOS.c    ****         
 505:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 506:notoriOS.c    ****         
 507:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 508:notoriOS.c    ****         long network_time = modem_get_network_time();
 1426              		.loc 1 508 0
 1427 0020 FFF7FEFF 		bl	modem_get_network_time
 1428 0024 7860     		str	r0, [r7, #4]
 509:notoriOS.c    ****         if(network_time != 0){
 1429              		.loc 1 509 0
 1430 0026 7B68     		ldr	r3, [r7, #4]
 1431 0028 002B     		cmp	r3, #0
 1432 002a 02D0     		beq	.L53
 510:notoriOS.c    ****             setTime(network_time);
 1433              		.loc 1 510 0
 1434 002c 7868     		ldr	r0, [r7, #4]
 1435 002e FFF7FEFF 		bl	setTime
 1436              	.L53:
 511:notoriOS.c    ****         }
 512:notoriOS.c    ****         
 513:notoriOS.c    ****         // Get GPS coordinates
 514:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 515:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 516:notoriOS.c    ****         modem_power_down();
 1437              		.loc 1 516 0
 1438 0032 FFF7FEFF 		bl	modem_power_down
 517:notoriOS.c    ****         return 0u;
 1439              		.loc 1 517 0
 1440 0036 0023     		movs	r3, #0
 1441 0038 00E0     		b	.L54
 1442              	.L52:
 1443              	.LBE8:
 518:notoriOS.c    ****         
 519:notoriOS.c    ****     }
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 37


 520:notoriOS.c    ****     
 521:notoriOS.c    ****     return 1u;
 1444              		.loc 1 521 0
 1445 003a 0123     		movs	r3, #1
 1446              	.L54:
 522:notoriOS.c    **** }
 1447              		.loc 1 522 0
 1448 003c 1846     		mov	r0, r3
 1449 003e 0837     		adds	r7, r7, #8
 1450              		.cfi_def_cfa_offset 8
 1451 0040 BD46     		mov	sp, r7
 1452              		.cfi_def_cfa_register 13
 1453              		@ sp needed
 1454 0042 80BD     		pop	{r7, pc}
 1455              		.cfi_endproc
 1456              	.LFE75:
 1457              		.size	configureRemoteParams, .-configureRemoteParams
 1458              		.section	.rodata
 1459 026f 00       		.align	2
 1460              	.LC35:
 1461 0270 256C6400 		.ascii	"%ld\000"
 1462              		.align	2
 1463              	.LC36:
 1464 0274 6D617862 		.ascii	"maxbotix_depth=%s\000"
 1464      6F746978 
 1464      5F646570 
 1464      74683D25 
 1464      7300
 1465 0286 0000     		.align	2
 1466              	.LC37:
 1467 0288 6D617862 		.ascii	"maxbotix_depth\000"
 1467      6F746978 
 1467      5F646570 
 1467      746800
 1468 0297 00       		.align	2
 1469              	.LC38:
 1470 0298 612B00   		.ascii	"a+\000"
 1471 029b 00       		.align	2
 1472              	.LC39:
 1473 029c 206D6178 		.ascii	" maxbotix_depth: \000"
 1473      626F7469 
 1473      785F6465 
 1473      7074683A 
 1473      2000
 1474 02ae 0000     		.align	2
 1475              	.LC40:
 1476 02b0 2000     		.ascii	" \000"
 1477 02b2 0000     		.align	2
 1478              	.LC41:
 1479 02b4 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 1479      64206E6F 
 1479      74206765 
 1479      74207661 
 1479      6C696420 
 1480              		.global	__aeabi_f2d
 1481              		.align	2
 1482              	.LC42:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 38


 1483 02e0 252E3266 		.ascii	"%.2f\000"
 1483      00
 1484 02e5 000000   		.align	2
 1485              	.LC43:
 1486 02e8 765F6261 		.ascii	"v_bat=%s\000"
 1486      743D2573 
 1486      00
 1487 02f1 000000   		.align	2
 1488              	.LC44:
 1489 02f4 765F6261 		.ascii	"v_bat\000"
 1489      7400
 1490 02fa 0000     		.align	2
 1491              	.LC45:
 1492 02fc 20766261 		.ascii	" vbat: \000"
 1492      743A2000 
 1493              		.align	2
 1494              	.LC46:
 1495 0304 70726573 		.ascii	"pressure_current=%s\000"
 1495      73757265 
 1495      5F637572 
 1495      72656E74 
 1495      3D257300 
 1496              		.align	2
 1497              	.LC47:
 1498 0318 70726573 		.ascii	"pressure_current\000"
 1498      73757265 
 1498      5F637572 
 1498      72656E74 
 1498      00
 1499 0329 000000   		.align	2
 1500              	.LC48:
 1501 032c 20707265 		.ascii	" pressure_current: \000"
 1501      73737572 
 1501      655F6375 
 1501      7272656E 
 1501      743A2000 
 1502              		.align	2
 1503              	.LC49:
 1504 0340 70726573 		.ascii	"pressure_depth=%s\000"
 1504      73757265 
 1504      5F646570 
 1504      74683D25 
 1504      7300
 1505 0352 0000     		.align	2
 1506              	.LC50:
 1507 0354 70726573 		.ascii	"pressure_depth\000"
 1507      73757265 
 1507      5F646570 
 1507      746800
 1508 0363 00       		.align	2
 1509              	.LC51:
 1510 0364 20707265 		.ascii	" pressure_depth: \000"
 1510      73737572 
 1510      655F6465 
 1510      7074683A 
 1510      2000
 1511 0376 0000     		.align	2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 39


 1512              	.LC52:
 1513 0378 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1513      64206E6F 
 1513      74206765 
 1513      74207661 
 1513      6C696420 
 1514              		.section	.text.makeMeasurements,"ax",%progbits
 1515              		.align	2
 1516              		.global	makeMeasurements
 1517              		.thumb
 1518              		.thumb_func
 1519              		.type	makeMeasurements, %function
 1520              	makeMeasurements:
 1521              	.LFB76:
 523:notoriOS.c    **** 
 524:notoriOS.c    **** 
 525:notoriOS.c    **** // ==============================================
 526:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 527:notoriOS.c    **** // Returns 0 when finished
 528:notoriOS.c    **** // ==============================================
 529:notoriOS.c    **** uint8 makeMeasurements(){
 1522              		.loc 1 529 0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 120
 1525              		@ frame_needed = 1, uses_anonymous_args = 0
 1526 0000 90B5     		push	{r4, r7, lr}
 1527              		.cfi_def_cfa_offset 12
 1528              		.cfi_offset 4, -12
 1529              		.cfi_offset 7, -8
 1530              		.cfi_offset 14, -4
 1531 0002 A1B0     		sub	sp, sp, #132
 1532              		.cfi_def_cfa_offset 144
 1533 0004 02AF     		add	r7, sp, #8
 1534              		.cfi_def_cfa 7, 136
 530:notoriOS.c    ****     
 531:notoriOS.c    ****     // Get clock time and save to timeStamp
 532:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1535              		.loc 1 532 0
 1536 0006 FFF7FEFF 		bl	getTimeStamp
 1537 000a 7867     		str	r0, [r7, #116]
 533:notoriOS.c    ****     char c_timeStamp[32];
 534:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1538              		.loc 1 534 0
 1539 000c 07F15400 		add	r0, r7, #84
 1540 0010 7B6F     		ldr	r3, [r7, #116]
 1541 0012 834A     		ldr	r2, .L63
 1542 0014 2021     		movs	r1, #32
 1543 0016 FFF7FEFF 		bl	snprintf
 535:notoriOS.c    ****     
 536:notoriOS.c    ****     // Holds string for value that will be written 
 537:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 538:notoriOS.c    ****     
 539:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 540:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 1544              		.loc 1 540 0
 1545 001a 824B     		ldr	r3, .L63+4
 1546 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 40


 1547 001e 002B     		cmp	r3, #0
 1548 0020 3BD1     		bne	.L56
 1549              	.LBB9:
 541:notoriOS.c    ****         
 542:notoriOS.c    ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
 543:notoriOS.c    ****         level_sensor_t m_level_sensor;
 544:notoriOS.c    ****         
 545:notoriOS.c    ****         // Take level sensor readings and save them to m_level_sensor
 546:notoriOS.c    ****         m_level_sensor = level_sensor_take_reading();
 1550              		.loc 1 546 0
 1551 0022 07F11003 		add	r3, r7, #16
 1552 0026 1846     		mov	r0, r3
 1553 0028 FFF7FEFF 		bl	level_sensor_take_reading
 547:notoriOS.c    ****     
 548:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 549:notoriOS.c    ****         if(m_level_sensor.num_valid_readings > 0){
 1554              		.loc 1 549 0
 1555 002c 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1556 0030 002B     		cmp	r3, #0
 1557 0032 2ED0     		beq	.L57
 550:notoriOS.c    ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 1558              		.loc 1 550 0
 1559 0034 B7F92630 		ldrsh	r3, [r7, #38]
 1560 0038 07F14000 		add	r0, r7, #64
 1561 003c 7A4A     		ldr	r2, .L63+8
 1562 003e 1421     		movs	r1, #20
 1563 0040 FFF7FEFF 		bl	snprintf
 551:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 1564              		.loc 1 551 0
 1565 0044 07F14003 		add	r3, r7, #64
 1566 0048 1A46     		mov	r2, r3
 1567 004a 7849     		ldr	r1, .L63+12
 1568 004c 0020     		movs	r0, #0
 1569 004e FFF7FEFF 		bl	printNotif
 552:notoriOS.c    ****             pushData("maxbotix_depth",value,timeStamp);
 1570              		.loc 1 552 0
 1571 0052 07F14003 		add	r3, r7, #64
 1572 0056 7A6F     		ldr	r2, [r7, #116]
 1573 0058 1946     		mov	r1, r3
 1574 005a 7548     		ldr	r0, .L63+16
 1575 005c FFF7FEFF 		bl	pushData
 553:notoriOS.c    ****             
 554:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 555:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1576              		.loc 1 555 0
 1577 0060 07F15403 		add	r3, r7, #84
 1578 0064 1A46     		mov	r2, r3
 1579 0066 7349     		ldr	r1, .L63+20
 1580 0068 7348     		ldr	r0, .L63+24
 1581 006a FFF7FEFF 		bl	SD_write
 556:notoriOS.c    ****             SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 1582              		.loc 1 556 0
 1583 006e 734A     		ldr	r2, .L63+28
 1584 0070 7049     		ldr	r1, .L63+20
 1585 0072 7148     		ldr	r0, .L63+24
 1586 0074 FFF7FEFF 		bl	SD_write
 557:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 41


 1587              		.loc 1 557 0
 1588 0078 07F14003 		add	r3, r7, #64
 1589 007c 1A46     		mov	r2, r3
 1590 007e 6D49     		ldr	r1, .L63+20
 1591 0080 6D48     		ldr	r0, .L63+24
 1592 0082 FFF7FEFF 		bl	SD_write
 558:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1593              		.loc 1 558 0
 1594 0086 6E4A     		ldr	r2, .L63+32
 1595 0088 6A49     		ldr	r1, .L63+20
 1596 008a 6B48     		ldr	r0, .L63+24
 1597 008c FFF7FEFF 		bl	SD_write
 1598 0090 03E0     		b	.L56
 1599              	.L57:
 559:notoriOS.c    ****         }else{
 560:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 1600              		.loc 1 560 0
 1601 0092 6C49     		ldr	r1, .L63+36
 1602 0094 0220     		movs	r0, #2
 1603 0096 FFF7FEFF 		bl	printNotif
 1604              	.L56:
 1605              	.LBE9:
 561:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 562:notoriOS.c    ****         }
 563:notoriOS.c    ****     }
 564:notoriOS.c    ****     
 565:notoriOS.c    ****     
 566:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 567:notoriOS.c    ****     voltage_t m_voltage;
 568:notoriOS.c    ****     
 569:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 570:notoriOS.c    ****     m_voltage = voltage_take_readings();
 1606              		.loc 1 570 0
 1607 009a 07F12C03 		add	r3, r7, #44
 1608 009e 1846     		mov	r0, r3
 1609 00a0 FFF7FEFF 		bl	voltage_take_readings
 571:notoriOS.c    ****     
 572:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 573:notoriOS.c    ****     if(m_voltage.valid){
 1610              		.loc 1 573 0
 1611 00a4 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 1612 00a8 002B     		cmp	r3, #0
 1613 00aa 00F0AF80 		beq	.L59
 574:notoriOS.c    ****         // battery voltage data
 575:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 1614              		.loc 1 575 0
 1615 00ae FB6A     		ldr	r3, [r7, #44]	@ float
 1616 00b0 1846     		mov	r0, r3
 1617 00b2 FFF7FEFF 		bl	__aeabi_f2d
 1618 00b6 0346     		mov	r3, r0
 1619 00b8 0C46     		mov	r4, r1
 1620 00ba 07F14000 		add	r0, r7, #64
 1621 00be CDE90034 		strd	r3, [sp]
 1622 00c2 614A     		ldr	r2, .L63+40
 1623 00c4 1421     		movs	r1, #20
 1624 00c6 FFF7FEFF 		bl	snprintf
 576:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 42


 1625              		.loc 1 576 0
 1626 00ca 07F14003 		add	r3, r7, #64
 1627 00ce 1A46     		mov	r2, r3
 1628 00d0 5E49     		ldr	r1, .L63+44
 1629 00d2 0020     		movs	r0, #0
 1630 00d4 FFF7FEFF 		bl	printNotif
 577:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
 1631              		.loc 1 577 0
 1632 00d8 07F14003 		add	r3, r7, #64
 1633 00dc 7A6F     		ldr	r2, [r7, #116]
 1634 00de 1946     		mov	r1, r3
 1635 00e0 5B48     		ldr	r0, .L63+48
 1636 00e2 FFF7FEFF 		bl	pushData
 578:notoriOS.c    ****         
 579:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 580:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 1637              		.loc 1 580 0
 1638 00e6 564A     		ldr	r2, .L63+32
 1639 00e8 5249     		ldr	r1, .L63+20
 1640 00ea 5348     		ldr	r0, .L63+24
 1641 00ec FFF7FEFF 		bl	SD_write
 581:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 1642              		.loc 1 581 0
 1643 00f0 07F15403 		add	r3, r7, #84
 1644 00f4 1A46     		mov	r2, r3
 1645 00f6 4F49     		ldr	r1, .L63+20
 1646 00f8 4F48     		ldr	r0, .L63+24
 1647 00fa FFF7FEFF 		bl	SD_write
 582:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 1648              		.loc 1 582 0
 1649 00fe 554A     		ldr	r2, .L63+52
 1650 0100 4C49     		ldr	r1, .L63+20
 1651 0102 4D48     		ldr	r0, .L63+24
 1652 0104 FFF7FEFF 		bl	SD_write
 583:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1653              		.loc 1 583 0
 1654 0108 07F14003 		add	r3, r7, #64
 1655 010c 1A46     		mov	r2, r3
 1656 010e 4949     		ldr	r1, .L63+20
 1657 0110 4948     		ldr	r0, .L63+24
 1658 0112 FFF7FEFF 		bl	SD_write
 584:notoriOS.c    ****         
 585:notoriOS.c    ****         // If node type is green infrastructure node, take pressure transducer measurements
 586:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE){
 1659              		.loc 1 586 0
 1660 0116 434B     		ldr	r3, .L63+4
 1661 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1662 011a 012B     		cmp	r3, #1
 1663 011c 7AD1     		bne	.L61
 1664              	.LBB10:
 587:notoriOS.c    ****             
 588:notoriOS.c    ****             // pressure transducer voltage (V) data
 589:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 590:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 591:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 592:notoriOS.c    ****             
 593:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 43


 594:notoriOS.c    ****             pressure_t m_pressure;
 595:notoriOS.c    ****             
 596:notoriOS.c    ****             // Make pressure transducer calculators for current and depth
 597:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 1665              		.loc 1 597 0
 1666 011e 3C46     		mov	r4, r7
 1667 0120 6A46     		mov	r2, sp
 1668 0122 07F13803 		add	r3, r7, #56
 1669 0126 93E80300 		ldmia	r3, {r0, r1}
 1670 012a 82E80300 		stmia	r2, {r0, r1}
 1671 012e 07F12C03 		add	r3, r7, #44
 1672 0132 0ECB     		ldmia	r3, {r1, r2, r3}
 1673 0134 2046     		mov	r0, r4
 1674 0136 FFF7FEFF 		bl	pressure_calculations
 598:notoriOS.c    ****             
 599:notoriOS.c    ****             // pressure transducer current (mA) data
 600:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 1675              		.loc 1 600 0
 1676 013a BB68     		ldr	r3, [r7, #8]	@ float
 1677 013c 1846     		mov	r0, r3
 1678 013e FFF7FEFF 		bl	__aeabi_f2d
 1679 0142 0346     		mov	r3, r0
 1680 0144 0C46     		mov	r4, r1
 1681 0146 07F14000 		add	r0, r7, #64
 1682 014a CDE90034 		strd	r3, [sp]
 1683 014e 3E4A     		ldr	r2, .L63+40
 1684 0150 1421     		movs	r1, #20
 1685 0152 FFF7FEFF 		bl	snprintf
 601:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 1686              		.loc 1 601 0
 1687 0156 07F14003 		add	r3, r7, #64
 1688 015a 1A46     		mov	r2, r3
 1689 015c 3E49     		ldr	r1, .L63+56
 1690 015e 0020     		movs	r0, #0
 1691 0160 FFF7FEFF 		bl	printNotif
 602:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 1692              		.loc 1 602 0
 1693 0164 07F14003 		add	r3, r7, #64
 1694 0168 7A6F     		ldr	r2, [r7, #116]
 1695 016a 1946     		mov	r1, r3
 1696 016c 3B48     		ldr	r0, .L63+60
 1697 016e FFF7FEFF 		bl	pushData
 603:notoriOS.c    ****             
 604:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 605:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1698              		.loc 1 605 0
 1699 0172 334A     		ldr	r2, .L63+32
 1700 0174 2F49     		ldr	r1, .L63+20
 1701 0176 3048     		ldr	r0, .L63+24
 1702 0178 FFF7FEFF 		bl	SD_write
 606:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1703              		.loc 1 606 0
 1704 017c 07F15403 		add	r3, r7, #84
 1705 0180 1A46     		mov	r2, r3
 1706 0182 2C49     		ldr	r1, .L63+20
 1707 0184 2C48     		ldr	r0, .L63+24
 1708 0186 FFF7FEFF 		bl	SD_write
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 44


 607:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 1709              		.loc 1 607 0
 1710 018a 354A     		ldr	r2, .L63+64
 1711 018c 2949     		ldr	r1, .L63+20
 1712 018e 2A48     		ldr	r0, .L63+24
 1713 0190 FFF7FEFF 		bl	SD_write
 608:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1714              		.loc 1 608 0
 1715 0194 07F14003 		add	r3, r7, #64
 1716 0198 1A46     		mov	r2, r3
 1717 019a 2649     		ldr	r1, .L63+20
 1718 019c 2648     		ldr	r0, .L63+24
 1719 019e FFF7FEFF 		bl	SD_write
 609:notoriOS.c    ****             
 610:notoriOS.c    ****             // pressure transducer depth (ft) data
 611:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 1720              		.loc 1 611 0
 1721 01a2 FB68     		ldr	r3, [r7, #12]	@ float
 1722 01a4 1846     		mov	r0, r3
 1723 01a6 FFF7FEFF 		bl	__aeabi_f2d
 1724 01aa 0346     		mov	r3, r0
 1725 01ac 0C46     		mov	r4, r1
 1726 01ae 07F14000 		add	r0, r7, #64
 1727 01b2 CDE90034 		strd	r3, [sp]
 1728 01b6 244A     		ldr	r2, .L63+40
 1729 01b8 1421     		movs	r1, #20
 1730 01ba FFF7FEFF 		bl	snprintf
 612:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 1731              		.loc 1 612 0
 1732 01be 07F14003 		add	r3, r7, #64
 1733 01c2 1A46     		mov	r2, r3
 1734 01c4 2749     		ldr	r1, .L63+68
 1735 01c6 0020     		movs	r0, #0
 1736 01c8 FFF7FEFF 		bl	printNotif
 613:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 1737              		.loc 1 613 0
 1738 01cc 07F14003 		add	r3, r7, #64
 1739 01d0 7A6F     		ldr	r2, [r7, #116]
 1740 01d2 1946     		mov	r1, r3
 1741 01d4 2448     		ldr	r0, .L63+72
 1742 01d6 FFF7FEFF 		bl	pushData
 614:notoriOS.c    ****             
 615:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 616:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1743              		.loc 1 616 0
 1744 01da 194A     		ldr	r2, .L63+32
 1745 01dc 1549     		ldr	r1, .L63+20
 1746 01de 1648     		ldr	r0, .L63+24
 1747 01e0 FFF7FEFF 		bl	SD_write
 617:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1748              		.loc 1 617 0
 1749 01e4 07F15403 		add	r3, r7, #84
 1750 01e8 1A46     		mov	r2, r3
 1751 01ea 1249     		ldr	r1, .L63+20
 1752 01ec 1248     		ldr	r0, .L63+24
 1753 01ee FFF7FEFF 		bl	SD_write
 618:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 45


 1754              		.loc 1 618 0
 1755 01f2 1E4A     		ldr	r2, .L63+76
 1756 01f4 0F49     		ldr	r1, .L63+20
 1757 01f6 1048     		ldr	r0, .L63+24
 1758 01f8 FFF7FEFF 		bl	SD_write
 619:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1759              		.loc 1 619 0
 1760 01fc 07F14003 		add	r3, r7, #64
 1761 0200 1A46     		mov	r2, r3
 1762 0202 0C49     		ldr	r1, .L63+20
 1763 0204 0C48     		ldr	r0, .L63+24
 1764 0206 FFF7FEFF 		bl	SD_write
 1765 020a 03E0     		b	.L61
 1766              	.L59:
 1767              	.LBE10:
 620:notoriOS.c    ****         }    
 621:notoriOS.c    ****     }else{
 622:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 1768              		.loc 1 622 0
 1769 020c 1849     		ldr	r1, .L63+80
 1770 020e 0220     		movs	r0, #2
 1771 0210 FFF7FEFF 		bl	printNotif
 1772              	.L61:
 623:notoriOS.c    ****     }
 624:notoriOS.c    ****     
 625:notoriOS.c    ****     return 0u;
 1773              		.loc 1 625 0
 1774 0214 0023     		movs	r3, #0
 626:notoriOS.c    **** }
 1775              		.loc 1 626 0
 1776 0216 1846     		mov	r0, r3
 1777 0218 7C37     		adds	r7, r7, #124
 1778              		.cfi_def_cfa_offset 12
 1779 021a BD46     		mov	sp, r7
 1780              		.cfi_def_cfa_register 13
 1781              		@ sp needed
 1782 021c 90BD     		pop	{r4, r7, pc}
 1783              	.L64:
 1784 021e 00BF     		.align	2
 1785              	.L63:
 1786 0220 70020000 		.word	.LC35
 1787 0224 00000000 		.word	updatable_parameters
 1788 0228 3C000000 		.word	.LC2
 1789 022c 74020000 		.word	.LC36
 1790 0230 88020000 		.word	.LC37
 1791 0234 98020000 		.word	.LC38
 1792 0238 00000000 		.word	Data_fileName
 1793 023c 9C020000 		.word	.LC39
 1794 0240 B0020000 		.word	.LC40
 1795 0244 B4020000 		.word	.LC41
 1796 0248 E0020000 		.word	.LC42
 1797 024c E8020000 		.word	.LC43
 1798 0250 F4020000 		.word	.LC44
 1799 0254 FC020000 		.word	.LC45
 1800 0258 04030000 		.word	.LC46
 1801 025c 18030000 		.word	.LC47
 1802 0260 2C030000 		.word	.LC48
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 46


 1803 0264 40030000 		.word	.LC49
 1804 0268 54030000 		.word	.LC50
 1805 026c 64030000 		.word	.LC51
 1806 0270 78030000 		.word	.LC52
 1807              		.cfi_endproc
 1808              	.LFE76:
 1809              		.size	makeMeasurements, .-makeMeasurements
 1810              		.section	.rodata
 1811 039f 00       		.align	2
 1812              	.LC53:
 1813 03a0 4572726F 		.ascii	"Error setting system time.\000"
 1813      72207365 
 1813      7474696E 
 1813      67207379 
 1813      7374656D 
 1814              		.section	.text.setTime,"ax",%progbits
 1815              		.align	2
 1816              		.global	setTime
 1817              		.thumb
 1818              		.thumb_func
 1819              		.type	setTime, %function
 1820              	setTime:
 1821              	.LFB77:
 627:notoriOS.c    **** 
 628:notoriOS.c    **** // ==============================================
 629:notoriOS.c    **** // Set the system time
 630:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 631:notoriOS.c    **** // ==============================================
 632:notoriOS.c    **** uint8 setTime(long timeStamp){
 1822              		.loc 1 632 0
 1823              		.cfi_startproc
 1824              		@ args = 0, pretend = 0, frame = 24
 1825              		@ frame_needed = 1, uses_anonymous_args = 0
 1826 0000 80B5     		push	{r7, lr}
 1827              		.cfi_def_cfa_offset 8
 1828              		.cfi_offset 7, -8
 1829              		.cfi_offset 14, -4
 1830 0002 86B0     		sub	sp, sp, #24
 1831              		.cfi_def_cfa_offset 32
 1832 0004 00AF     		add	r7, sp, #0
 1833              		.cfi_def_cfa_register 7
 1834 0006 7860     		str	r0, [r7, #4]
 633:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 634:notoriOS.c    ****     if(timeStamp <=0){
 1835              		.loc 1 634 0
 1836 0008 7B68     		ldr	r3, [r7, #4]
 1837 000a 002B     		cmp	r3, #0
 1838 000c 05DC     		bgt	.L66
 635:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 1839              		.loc 1 635 0
 1840 000e 1849     		ldr	r1, .L68
 1841 0010 0220     		movs	r0, #2
 1842 0012 FFF7FEFF 		bl	printNotif
 636:notoriOS.c    ****         return 0;  
 1843              		.loc 1 636 0
 1844 0016 0023     		movs	r3, #0
 1845 0018 25E0     		b	.L67
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 47


 1846              	.L66:
 637:notoriOS.c    ****     }
 638:notoriOS.c    ****     // Create a new pointer t of data structure tm
 639:notoriOS.c    ****     struct tm * t;
 640:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 641:notoriOS.c    ****     t = gmtime(&timeStamp);
 1847              		.loc 1 641 0
 1848 001a 3B1D     		adds	r3, r7, #4
 1849 001c 1846     		mov	r0, r3
 1850 001e FFF7FEFF 		bl	gmtime
 1851 0022 7861     		str	r0, [r7, #20]
 642:notoriOS.c    ****     
 643:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 644:notoriOS.c    ****     RTC_TIME_DATE localTime;
 645:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 1852              		.loc 1 645 0
 1853 0024 7B69     		ldr	r3, [r7, #20]
 1854 0026 1B68     		ldr	r3, [r3]
 1855 0028 DBB2     		uxtb	r3, r3
 1856 002a 3B72     		strb	r3, [r7, #8]
 646:notoriOS.c    ****     localTime.Min = t->tm_min;
 1857              		.loc 1 646 0
 1858 002c 7B69     		ldr	r3, [r7, #20]
 1859 002e 5B68     		ldr	r3, [r3, #4]
 1860 0030 DBB2     		uxtb	r3, r3
 1861 0032 7B72     		strb	r3, [r7, #9]
 647:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 1862              		.loc 1 647 0
 1863 0034 7B69     		ldr	r3, [r7, #20]
 1864 0036 9B68     		ldr	r3, [r3, #8]
 1865 0038 DBB2     		uxtb	r3, r3
 1866 003a BB72     		strb	r3, [r7, #10]
 648:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 1867              		.loc 1 648 0
 1868 003c 7B69     		ldr	r3, [r7, #20]
 1869 003e 5B69     		ldr	r3, [r3, #20]
 1870 0040 9BB2     		uxth	r3, r3
 1871 0042 03F26C73 		addw	r3, r3, #1900
 1872 0046 9BB2     		uxth	r3, r3
 1873 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 649:notoriOS.c    ****     localTime.Month = t->tm_mon;
 1874              		.loc 1 649 0
 1875 004a 7B69     		ldr	r3, [r7, #20]
 1876 004c 1B69     		ldr	r3, [r3, #16]
 1877 004e DBB2     		uxtb	r3, r3
 1878 0050 3B74     		strb	r3, [r7, #16]
 650:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 1879              		.loc 1 650 0
 1880 0052 7B69     		ldr	r3, [r7, #20]
 1881 0054 DB68     		ldr	r3, [r3, #12]
 1882 0056 DBB2     		uxtb	r3, r3
 1883 0058 3B73     		strb	r3, [r7, #12]
 651:notoriOS.c    **** 
 652:notoriOS.c    ****     // Writes time and date values as current time and date.
 653:notoriOS.c    ****     RTC_WriteTime(&localTime);
 1884              		.loc 1 653 0
 1885 005a 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 48


 1886 005e 1846     		mov	r0, r3
 1887 0060 FFF7FEFF 		bl	RTC_WriteTime
 654:notoriOS.c    ****     
 655:notoriOS.c    ****     // Return 1 when the system time was set properly.
 656:notoriOS.c    ****     return 1;
 1888              		.loc 1 656 0
 1889 0064 0123     		movs	r3, #1
 1890              	.L67:
 657:notoriOS.c    **** }
 1891              		.loc 1 657 0
 1892 0066 1846     		mov	r0, r3
 1893 0068 1837     		adds	r7, r7, #24
 1894              		.cfi_def_cfa_offset 8
 1895 006a BD46     		mov	sp, r7
 1896              		.cfi_def_cfa_register 13
 1897              		@ sp needed
 1898 006c 80BD     		pop	{r7, pc}
 1899              	.L69:
 1900 006e 00BF     		.align	2
 1901              	.L68:
 1902 0070 A0030000 		.word	.LC53
 1903              		.cfi_endproc
 1904              	.LFE77:
 1905              		.size	setTime, .-setTime
 1906              		.section	.rodata
 1907 03bb 00       		.align	2
 1908              	.LC54:
 1909 03bc 75706772 		.ascii	"upgrade.hex\000"
 1909      6164652E 
 1909      68657800 
 1910              		.section	.text.upgraded,"ax",%progbits
 1911              		.align	2
 1912              		.global	upgraded
 1913              		.thumb
 1914              		.thumb_func
 1915              		.type	upgraded, %function
 1916              	upgraded:
 1917              	.LFB78:
 658:notoriOS.c    **** 
 659:notoriOS.c    **** //downloads and stores files on SD card
 660:notoriOS.c    **** 
 661:notoriOS.c    **** 
 662:notoriOS.c    **** 
 663:notoriOS.c    **** // ==============================================
 664:notoriOS.c    **** // Will they love it, will they hate it
 665:notoriOS.c    **** // Never fade it, I evade it
 666:notoriOS.c    **** // Cause I never really want to complicate it
 667:notoriOS.c    **** //      - Logic, Upgraded (2015)
 668:notoriOS.c    **** //
 669:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 670:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 671:notoriOS.c    **** // ==============================================
 672:notoriOS.c    **** 
 673:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 1918              		.loc 1 673 0
 1919              		.cfi_startproc
 1920              		@ args = 0, pretend = 0, frame = 232
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 49


 1921              		@ frame_needed = 1, uses_anonymous_args = 0
 1922 0000 80B5     		push	{r7, lr}
 1923              		.cfi_def_cfa_offset 8
 1924              		.cfi_offset 7, -8
 1925              		.cfi_offset 14, -4
 1926 0002 C0B0     		sub	sp, sp, #256
 1927              		.cfi_def_cfa_offset 264
 1928 0004 06AF     		add	r7, sp, #24
 1929              		.cfi_def_cfa 7, 240
 1930 0006 F860     		str	r0, [r7, #12]
 1931 0008 B960     		str	r1, [r7, #8]
 1932 000a 7A60     		str	r2, [r7, #4]
 674:notoriOS.c    ****     
 675:notoriOS.c    ****     uint8 upgrade_status = 0;
 1933              		.loc 1 675 0
 1934 000c 0023     		movs	r3, #0
 1935 000e 87F8E730 		strb	r3, [r7, #231]
 676:notoriOS.c    ****     
 677:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 678:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 1936              		.loc 1 678 0
 1937 0012 384B     		ldr	r3, .L74
 1938 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1939 0016 042B     		cmp	r3, #4
 1940 0018 02D0     		beq	.L71
 679:notoriOS.c    ****         return upgrade_status;//where valid = 0
 1941              		.loc 1 679 0
 1942 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 1943 001e 65E0     		b	.L73
 1944              	.L71:
 680:notoriOS.c    ****     }
 681:notoriOS.c    ****     
 682:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 1945              		.loc 1 682 0
 1946 0020 354A     		ldr	r2, .L74+4
 1947 0022 07F1D803 		add	r3, r7, #216
 1948 0026 07CA     		ldmia	r2, {r0, r1, r2}
 1949 0028 83E80700 		stmia	r3, {r0, r1, r2}
 683:notoriOS.c    ****     //delete file, if one exisits already
 684:notoriOS.c    ****     SD_rmfile(fileName);
 1950              		.loc 1 684 0
 1951 002c 07F1D803 		add	r3, r7, #216
 1952 0030 1846     		mov	r0, r3
 1953 0032 FFF7FEFF 		bl	SD_rmfile
 685:notoriOS.c    ****     
 686:notoriOS.c    ****     // Create http request
 687:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 1954              		.loc 1 687 0
 1955 0036 314B     		ldr	r3, .L74+8
 1956 0038 0593     		str	r3, [sp, #20]
 1957 003a 0023     		movs	r3, #0
 1958 003c 0493     		str	r3, [sp, #16]
 1959 003e 304B     		ldr	r3, .L74+12
 1960 0040 0393     		str	r3, [sp, #12]
 1961 0042 304B     		ldr	r3, .L74+16
 1962 0044 0293     		str	r3, [sp, #8]
 1963 0046 304B     		ldr	r3, .L74+20
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 50


 1964 0048 0193     		str	r3, [sp, #4]
 1965 004a BB68     		ldr	r3, [r7, #8]
 1966 004c 0093     		str	r3, [sp]
 1967 004e 7B68     		ldr	r3, [r7, #4]
 1968 0050 FA68     		ldr	r2, [r7, #12]
 1969 0052 2E49     		ldr	r1, .L74+24
 1970 0054 2E48     		ldr	r0, .L74+28
 1971 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 688:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1972              		.loc 1 688 0
 1973 005a 2D4A     		ldr	r2, .L74+28
 1974 005c 2D49     		ldr	r1, .L74+32
 1975 005e 0020     		movs	r0, #0
 1976 0060 FFF7FEFF 		bl	printNotif
 689:notoriOS.c    ****     // Create array portConfig of size 200 characters
 690:notoriOS.c    ****     char portConfig[200];
 691:notoriOS.c    ****     // Print port configurations
 692:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 1977              		.loc 1 692 0
 1978 0064 07F11000 		add	r0, r7, #16
 1979 0068 FB68     		ldr	r3, [r7, #12]
 1980 006a 0093     		str	r3, [sp]
 1981 006c BB68     		ldr	r3, [r7, #8]
 1982 006e 2A4A     		ldr	r2, .L74+36
 1983 0070 C821     		movs	r1, #200
 1984 0072 FFF7FEFF 		bl	snprintf
 693:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1985              		.loc 1 693 0
 1986 0076 07F11003 		add	r3, r7, #16
 1987 007a 1A46     		mov	r2, r3
 1988 007c 2749     		ldr	r1, .L74+40
 1989 007e 0020     		movs	r0, #0
 1990 0080 FFF7FEFF 		bl	printNotif
 694:notoriOS.c    ****     // AT command to configure the port
 695:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 1991              		.loc 1 695 0
 1992 0084 07F11003 		add	r3, r7, #16
 1993 0088 42F21072 		movw	r2, #10000
 1994 008c 2449     		ldr	r1, .L74+44
 1995 008e 1846     		mov	r0, r3
 1996 0090 FFF7FEFF 		bl	at_write_command
 1997 0094 0346     		mov	r3, r0
 1998 0096 87F8E730 		strb	r3, [r7, #231]
 696:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 697:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 698:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 1999              		.loc 1 698 0
 2000 009a 4FF47A72 		mov	r2, #1000
 2001 009e 2149     		ldr	r1, .L74+48
 2002 00a0 2148     		ldr	r0, .L74+52
 2003 00a2 FFF7FEFF 		bl	at_write_command
 2004 00a6 0346     		mov	r3, r0
 2005 00a8 87F8E730 		strb	r3, [r7, #231]
 699:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 700:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 2006              		.loc 1 700 0
 2007 00ac 1848     		ldr	r0, .L74+28
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 51


 2008 00ae FFF7FEFF 		bl	strlen
 2009 00b2 0346     		mov	r3, r0
 2010 00b4 1A46     		mov	r2, r3
 2011 00b6 164B     		ldr	r3, .L74+28
 2012 00b8 1344     		add	r3, r3, r2
 2013 00ba 1C49     		ldr	r1, .L74+56
 2014 00bc 1A46     		mov	r2, r3
 2015 00be 0B46     		mov	r3, r1
 2016 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 2017 00c2 1380     		strh	r3, [r2]	@ unaligned
 701:notoriOS.c    ****     // AT command to send http request
 702:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
 2018              		.loc 1 702 0
 2019 00c4 41F28832 		movw	r2, #5000
 2020 00c8 1549     		ldr	r1, .L74+44
 2021 00ca 1148     		ldr	r0, .L74+28
 2022 00cc FFF7FEFF 		bl	at_write_command
 2023 00d0 0346     		mov	r3, r0
 2024 00d2 87F8E730 		strb	r3, [r7, #231]
 703:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 704:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 705:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 2025              		.loc 1 705 0
 2026 00d6 41F28832 		movw	r2, #5000
 2027 00da 1549     		ldr	r1, .L74+60
 2028 00dc 1548     		ldr	r0, .L74+64
 2029 00de FFF7FEFF 		bl	at_write_command
 2030 00e2 0346     		mov	r3, r0
 2031 00e4 87F8E730 		strb	r3, [r7, #231]
 706:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 707:notoriOS.c    ****     
 708:notoriOS.c    ****     
 709:notoriOS.c    ****     return upgrade_status;
 2032              		.loc 1 709 0
 2033 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2034              	.L73:
 710:notoriOS.c    ****     
 711:notoriOS.c    **** }
 2035              		.loc 1 711 0 discriminator 1
 2036 00ec 1846     		mov	r0, r3
 2037 00ee E837     		adds	r7, r7, #232
 2038              		.cfi_def_cfa_offset 8
 2039 00f0 BD46     		mov	sp, r7
 2040              		.cfi_def_cfa_register 13
 2041              		@ sp needed
 2042 00f2 80BD     		pop	{r7, pc}
 2043              	.L75:
 2044              		.align	2
 2045              	.L74:
 2046 00f4 00000000 		.word	modem_state
 2047 00f8 BC030000 		.word	.LC54
 2048 00fc 68010000 		.word	.LC16
 2049 0100 6C010000 		.word	.LC17
 2050 0104 70010000 		.word	.LC18
 2051 0108 78010000 		.word	.LC19
 2052 010c 00000000 		.word	http_body
 2053 0110 00000000 		.word	http_request
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 52


 2054 0114 80010000 		.word	.LC20
 2055 0118 98010000 		.word	.LC21
 2056 011c B4010000 		.word	.LC22
 2057 0120 B8010000 		.word	.LC23
 2058 0124 E8010000 		.word	.LC26
 2059 0128 EC010000 		.word	.LC27
 2060 012c FC010000 		.word	.LC28
 2061 0130 18020000 		.word	.LC31
 2062 0134 20020000 		.word	.LC32
 2063              		.cfi_endproc
 2064              	.LFE78:
 2065              		.size	upgraded, .-upgraded
 2066              		.text
 2067              	.Letext0:
 2068              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2069              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2070              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2071              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 2072              		.file 6 "testing.h"
 2073              		.file 7 "level_sensor.h"
 2074              		.file 8 "voltages.h"
 2075              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2076              		.file 10 "data.h"
 2077              		.file 11 "modem.h"
 2078              		.file 12 "notoriOS.h"
 2079              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 2080              		.section	.debug_info,"",%progbits
 2081              	.Ldebug_info0:
 2082 0000 1D0C0000 		.4byte	0xc1d
 2083 0004 0400     		.2byte	0x4
 2084 0006 00000000 		.4byte	.Ldebug_abbrev0
 2085 000a 04       		.byte	0x4
 2086 000b 01       		.uleb128 0x1
 2087 000c 74000000 		.4byte	.LASF161
 2088 0010 0C       		.byte	0xc
 2089 0011 C2070000 		.4byte	.LASF162
 2090 0015 E7040000 		.4byte	.LASF163
 2091 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2092 001d 00000000 		.4byte	0
 2093 0021 00000000 		.4byte	.Ldebug_line0
 2094 0025 02       		.uleb128 0x2
 2095 0026 01       		.byte	0x1
 2096 0027 06       		.byte	0x6
 2097 0028 45000000 		.4byte	.LASF0
 2098 002c 02       		.uleb128 0x2
 2099 002d 01       		.byte	0x1
 2100 002e 08       		.byte	0x8
 2101 002f DF050000 		.4byte	.LASF1
 2102 0033 02       		.uleb128 0x2
 2103 0034 02       		.byte	0x2
 2104 0035 05       		.byte	0x5
 2105 0036 1F040000 		.4byte	.LASF2
 2106 003a 02       		.uleb128 0x2
 2107 003b 02       		.byte	0x2
 2108 003c 07       		.byte	0x7
 2109 003d 5A070000 		.4byte	.LASF3
 2110 0041 03       		.uleb128 0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 53


 2111 0042 22070000 		.4byte	.LASF9
 2112 0046 02       		.byte	0x2
 2113 0047 3F       		.byte	0x3f
 2114 0048 4C000000 		.4byte	0x4c
 2115 004c 02       		.uleb128 0x2
 2116 004d 04       		.byte	0x4
 2117 004e 05       		.byte	0x5
 2118 004f 09020000 		.4byte	.LASF4
 2119 0053 02       		.uleb128 0x2
 2120 0054 04       		.byte	0x4
 2121 0055 07       		.byte	0x7
 2122 0056 5C030000 		.4byte	.LASF5
 2123 005a 02       		.uleb128 0x2
 2124 005b 08       		.byte	0x8
 2125 005c 05       		.byte	0x5
 2126 005d 64010000 		.4byte	.LASF6
 2127 0061 02       		.uleb128 0x2
 2128 0062 08       		.byte	0x8
 2129 0063 07       		.byte	0x7
 2130 0064 13010000 		.4byte	.LASF7
 2131 0068 04       		.uleb128 0x4
 2132 0069 04       		.byte	0x4
 2133 006a 05       		.byte	0x5
 2134 006b 696E7400 		.ascii	"int\000"
 2135 006f 02       		.uleb128 0x2
 2136 0070 04       		.byte	0x4
 2137 0071 07       		.byte	0x7
 2138 0072 08030000 		.4byte	.LASF8
 2139 0076 03       		.uleb128 0x3
 2140 0077 D7050000 		.4byte	.LASF10
 2141 007b 03       		.byte	0x3
 2142 007c 2C       		.byte	0x2c
 2143 007d 41000000 		.4byte	0x41
 2144 0081 05       		.uleb128 0x5
 2145 0082 40020000 		.4byte	.LASF11
 2146 0086 04       		.byte	0x4
 2147 0087 9201     		.2byte	0x192
 2148 0089 2C000000 		.4byte	0x2c
 2149 008d 05       		.uleb128 0x5
 2150 008e 08000000 		.4byte	.LASF12
 2151 0092 04       		.byte	0x4
 2152 0093 9301     		.2byte	0x193
 2153 0095 3A000000 		.4byte	0x3a
 2154 0099 05       		.uleb128 0x5
 2155 009a 84020000 		.4byte	.LASF13
 2156 009e 04       		.byte	0x4
 2157 009f 9401     		.2byte	0x194
 2158 00a1 53000000 		.4byte	0x53
 2159 00a5 05       		.uleb128 0x5
 2160 00a6 E2030000 		.4byte	.LASF14
 2161 00aa 04       		.byte	0x4
 2162 00ab 9501     		.2byte	0x195
 2163 00ad 25000000 		.4byte	0x25
 2164 00b1 05       		.uleb128 0x5
 2165 00b2 D7070000 		.4byte	.LASF15
 2166 00b6 04       		.byte	0x4
 2167 00b7 9601     		.2byte	0x196
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 54


 2168 00b9 33000000 		.4byte	0x33
 2169 00bd 05       		.uleb128 0x5
 2170 00be 5E020000 		.4byte	.LASF16
 2171 00c2 04       		.byte	0x4
 2172 00c3 9701     		.2byte	0x197
 2173 00c5 4C000000 		.4byte	0x4c
 2174 00c9 02       		.uleb128 0x2
 2175 00ca 04       		.byte	0x4
 2176 00cb 04       		.byte	0x4
 2177 00cc 7C050000 		.4byte	.LASF17
 2178 00d0 02       		.uleb128 0x2
 2179 00d1 08       		.byte	0x8
 2180 00d2 04       		.byte	0x4
 2181 00d3 67080000 		.4byte	.LASF18
 2182 00d7 02       		.uleb128 0x2
 2183 00d8 01       		.byte	0x1
 2184 00d9 08       		.byte	0x8
 2185 00da FB060000 		.4byte	.LASF19
 2186 00de 02       		.uleb128 0x2
 2187 00df 08       		.byte	0x8
 2188 00e0 04       		.byte	0x4
 2189 00e1 DD060000 		.4byte	.LASF20
 2190 00e5 02       		.uleb128 0x2
 2191 00e6 04       		.byte	0x4
 2192 00e7 07       		.byte	0x7
 2193 00e8 9C040000 		.4byte	.LASF21
 2194 00ec 06       		.uleb128 0x6
 2195 00ed 04       		.byte	0x4
 2196 00ee D7000000 		.4byte	0xd7
 2197 00f2 07       		.uleb128 0x7
 2198 00f3 D7000000 		.4byte	0xd7
 2199 00f7 02010000 		.4byte	0x102
 2200 00fb 08       		.uleb128 0x8
 2201 00fc E5000000 		.4byte	0xe5
 2202 0100 17       		.byte	0x17
 2203 0101 00       		.byte	0
 2204 0102 09       		.uleb128 0x9
 2205 0103 0C       		.byte	0xc
 2206 0104 05       		.byte	0x5
 2207 0105 30       		.byte	0x30
 2208 0106 6B010000 		.4byte	0x16b
 2209 010a 0A       		.uleb128 0xa
 2210 010b 53656300 		.ascii	"Sec\000"
 2211 010f 05       		.byte	0x5
 2212 0110 32       		.byte	0x32
 2213 0111 81000000 		.4byte	0x81
 2214 0115 00       		.byte	0
 2215 0116 0A       		.uleb128 0xa
 2216 0117 4D696E00 		.ascii	"Min\000"
 2217 011b 05       		.byte	0x5
 2218 011c 33       		.byte	0x33
 2219 011d 81000000 		.4byte	0x81
 2220 0121 01       		.byte	0x1
 2221 0122 0B       		.uleb128 0xb
 2222 0123 2A010000 		.4byte	.LASF22
 2223 0127 05       		.byte	0x5
 2224 0128 34       		.byte	0x34
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 55


 2225 0129 81000000 		.4byte	0x81
 2226 012d 02       		.byte	0x2
 2227 012e 0B       		.uleb128 0xb
 2228 012f 3C060000 		.4byte	.LASF23
 2229 0133 05       		.byte	0x5
 2230 0134 35       		.byte	0x35
 2231 0135 81000000 		.4byte	0x81
 2232 0139 03       		.byte	0x3
 2233 013a 0B       		.uleb128 0xb
 2234 013b 9D030000 		.4byte	.LASF24
 2235 013f 05       		.byte	0x5
 2236 0140 36       		.byte	0x36
 2237 0141 81000000 		.4byte	0x81
 2238 0145 04       		.byte	0x4
 2239 0146 0B       		.uleb128 0xb
 2240 0147 1C080000 		.4byte	.LASF25
 2241 014b 05       		.byte	0x5
 2242 014c 37       		.byte	0x37
 2243 014d 8D000000 		.4byte	0x8d
 2244 0151 06       		.byte	0x6
 2245 0152 0B       		.uleb128 0xb
 2246 0153 0D010000 		.4byte	.LASF26
 2247 0157 05       		.byte	0x5
 2248 0158 38       		.byte	0x38
 2249 0159 81000000 		.4byte	0x81
 2250 015d 08       		.byte	0x8
 2251 015e 0B       		.uleb128 0xb
 2252 015f CC050000 		.4byte	.LASF27
 2253 0163 05       		.byte	0x5
 2254 0164 39       		.byte	0x39
 2255 0165 8D000000 		.4byte	0x8d
 2256 0169 0A       		.byte	0xa
 2257 016a 00       		.byte	0
 2258 016b 03       		.uleb128 0x3
 2259 016c 21050000 		.4byte	.LASF28
 2260 0170 05       		.byte	0x5
 2261 0171 3A       		.byte	0x3a
 2262 0172 76010000 		.4byte	0x176
 2263 0176 0C       		.uleb128 0xc
 2264 0177 02010000 		.4byte	0x102
 2265 017b 0D       		.uleb128 0xd
 2266 017c 8101     		.2byte	0x181
 2267 017e 06       		.byte	0x6
 2268 017f 0A       		.byte	0xa
 2269 0180 A9010000 		.4byte	0x1a9
 2270 0184 0B       		.uleb128 0xb
 2271 0185 C2050000 		.4byte	.LASF29
 2272 0189 06       		.byte	0x6
 2273 018a 0C       		.byte	0xc
 2274 018b A9010000 		.4byte	0x1a9
 2275 018f 00       		.byte	0
 2276 0190 0B       		.uleb128 0xb
 2277 0191 97070000 		.4byte	.LASF30
 2278 0195 06       		.byte	0x6
 2279 0196 0D       		.byte	0xd
 2280 0197 81000000 		.4byte	0x81
 2281 019b 80       		.byte	0x80
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 56


 2282 019c 0B       		.uleb128 0xb
 2283 019d 5E060000 		.4byte	.LASF31
 2284 01a1 06       		.byte	0x6
 2285 01a2 0F       		.byte	0xf
 2286 01a3 B9010000 		.4byte	0x1b9
 2287 01a7 81       		.byte	0x81
 2288 01a8 00       		.byte	0
 2289 01a9 07       		.uleb128 0x7
 2290 01aa D7000000 		.4byte	0xd7
 2291 01ae B9010000 		.4byte	0x1b9
 2292 01b2 08       		.uleb128 0x8
 2293 01b3 E5000000 		.4byte	0xe5
 2294 01b7 7F       		.byte	0x7f
 2295 01b8 00       		.byte	0
 2296 01b9 07       		.uleb128 0x7
 2297 01ba D7000000 		.4byte	0xd7
 2298 01be C9010000 		.4byte	0x1c9
 2299 01c2 08       		.uleb128 0x8
 2300 01c3 E5000000 		.4byte	0xe5
 2301 01c7 FF       		.byte	0xff
 2302 01c8 00       		.byte	0
 2303 01c9 03       		.uleb128 0x3
 2304 01ca 46060000 		.4byte	.LASF32
 2305 01ce 06       		.byte	0x6
 2306 01cf 10       		.byte	0x10
 2307 01d0 7B010000 		.4byte	0x17b
 2308 01d4 09       		.uleb128 0x9
 2309 01d5 1A       		.byte	0x1a
 2310 01d6 07       		.byte	0x7
 2311 01d7 10       		.byte	0x10
 2312 01d8 0D020000 		.4byte	0x20d
 2313 01dc 0B       		.uleb128 0xb
 2314 01dd 94020000 		.4byte	.LASF33
 2315 01e1 07       		.byte	0x7
 2316 01e2 11       		.byte	0x11
 2317 01e3 0D020000 		.4byte	0x20d
 2318 01e7 00       		.byte	0
 2319 01e8 0B       		.uleb128 0xb
 2320 01e9 44070000 		.4byte	.LASF34
 2321 01ed 07       		.byte	0x7
 2322 01ee 12       		.byte	0x12
 2323 01ef B1000000 		.4byte	0xb1
 2324 01f3 16       		.byte	0x16
 2325 01f4 0B       		.uleb128 0xb
 2326 01f5 34030000 		.4byte	.LASF35
 2327 01f9 07       		.byte	0x7
 2328 01fa 13       		.byte	0x13
 2329 01fb 81000000 		.4byte	0x81
 2330 01ff 18       		.byte	0x18
 2331 0200 0B       		.uleb128 0xb
 2332 0201 17000000 		.4byte	.LASF36
 2333 0205 07       		.byte	0x7
 2334 0206 14       		.byte	0x14
 2335 0207 81000000 		.4byte	0x81
 2336 020b 19       		.byte	0x19
 2337 020c 00       		.byte	0
 2338 020d 07       		.uleb128 0x7
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 57


 2339 020e B1000000 		.4byte	0xb1
 2340 0212 1D020000 		.4byte	0x21d
 2341 0216 08       		.uleb128 0x8
 2342 0217 E5000000 		.4byte	0xe5
 2343 021b 0A       		.byte	0xa
 2344 021c 00       		.byte	0
 2345 021d 03       		.uleb128 0x3
 2346 021e 82050000 		.4byte	.LASF37
 2347 0222 07       		.byte	0x7
 2348 0223 15       		.byte	0x15
 2349 0224 D4010000 		.4byte	0x1d4
 2350 0228 09       		.uleb128 0x9
 2351 0229 14       		.byte	0x14
 2352 022a 08       		.byte	0x8
 2353 022b 11       		.byte	0x11
 2354 022c 6D020000 		.4byte	0x26d
 2355 0230 0B       		.uleb128 0xb
 2356 0231 8D030000 		.4byte	.LASF38
 2357 0235 08       		.byte	0x8
 2358 0236 12       		.byte	0x12
 2359 0237 C9000000 		.4byte	0xc9
 2360 023b 00       		.byte	0
 2361 023c 0B       		.uleb128 0xb
 2362 023d B0010000 		.4byte	.LASF39
 2363 0241 08       		.byte	0x8
 2364 0242 13       		.byte	0x13
 2365 0243 C9000000 		.4byte	0xc9
 2366 0247 04       		.byte	0x4
 2367 0248 0B       		.uleb128 0xb
 2368 0249 BE010000 		.4byte	.LASF40
 2369 024d 08       		.byte	0x8
 2370 024e 14       		.byte	0x14
 2371 024f C9000000 		.4byte	0xc9
 2372 0253 08       		.byte	0x8
 2373 0254 0B       		.uleb128 0xb
 2374 0255 5E050000 		.4byte	.LASF41
 2375 0259 08       		.byte	0x8
 2376 025a 15       		.byte	0x15
 2377 025b C9000000 		.4byte	0xc9
 2378 025f 0C       		.byte	0xc
 2379 0260 0B       		.uleb128 0xb
 2380 0261 CF060000 		.4byte	.LASF42
 2381 0265 08       		.byte	0x8
 2382 0266 16       		.byte	0x16
 2383 0267 81000000 		.4byte	0x81
 2384 026b 10       		.byte	0x10
 2385 026c 00       		.byte	0
 2386 026d 03       		.uleb128 0x3
 2387 026e 6E080000 		.4byte	.LASF43
 2388 0272 08       		.byte	0x8
 2389 0273 17       		.byte	0x17
 2390 0274 28020000 		.4byte	0x228
 2391 0278 09       		.uleb128 0x9
 2392 0279 10       		.byte	0x10
 2393 027a 08       		.byte	0x8
 2394 027b 19       		.byte	0x19
 2395 027c B1020000 		.4byte	0x2b1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 58


 2396 0280 0B       		.uleb128 0xb
 2397 0281 F4020000 		.4byte	.LASF44
 2398 0285 08       		.byte	0x8
 2399 0286 1A       		.byte	0x1a
 2400 0287 C9000000 		.4byte	0xc9
 2401 028b 00       		.byte	0
 2402 028c 0B       		.uleb128 0xb
 2403 028d 2B020000 		.4byte	.LASF45
 2404 0291 08       		.byte	0x8
 2405 0292 1B       		.byte	0x1b
 2406 0293 C9000000 		.4byte	0xc9
 2407 0297 04       		.byte	0x4
 2408 0298 0B       		.uleb128 0xb
 2409 0299 BE060000 		.4byte	.LASF46
 2410 029d 08       		.byte	0x8
 2411 029e 1C       		.byte	0x1c
 2412 029f C9000000 		.4byte	0xc9
 2413 02a3 08       		.byte	0x8
 2414 02a4 0B       		.uleb128 0xb
 2415 02a5 28060000 		.4byte	.LASF47
 2416 02a9 08       		.byte	0x8
 2417 02aa 1D       		.byte	0x1d
 2418 02ab C9000000 		.4byte	0xc9
 2419 02af 0C       		.byte	0xc
 2420 02b0 00       		.byte	0
 2421 02b1 03       		.uleb128 0x3
 2422 02b2 26080000 		.4byte	.LASF48
 2423 02b6 08       		.byte	0x8
 2424 02b7 1E       		.byte	0x1e
 2425 02b8 78020000 		.4byte	0x278
 2426 02bc 0E       		.uleb128 0xe
 2427 02bd 746D00   		.ascii	"tm\000"
 2428 02c0 24       		.byte	0x24
 2429 02c1 09       		.byte	0x9
 2430 02c2 21       		.byte	0x21
 2431 02c3 34030000 		.4byte	0x334
 2432 02c7 0B       		.uleb128 0xb
 2433 02c8 85070000 		.4byte	.LASF49
 2434 02cc 09       		.byte	0x9
 2435 02cd 23       		.byte	0x23
 2436 02ce 68000000 		.4byte	0x68
 2437 02d2 00       		.byte	0
 2438 02d3 0B       		.uleb128 0xb
 2439 02d4 7E040000 		.4byte	.LASF50
 2440 02d8 09       		.byte	0x9
 2441 02d9 24       		.byte	0x24
 2442 02da 68000000 		.4byte	0x68
 2443 02de 04       		.byte	0x4
 2444 02df 0B       		.uleb128 0xb
 2445 02e0 0F000000 		.4byte	.LASF51
 2446 02e4 09       		.byte	0x9
 2447 02e5 25       		.byte	0x25
 2448 02e6 68000000 		.4byte	0x68
 2449 02ea 08       		.byte	0x8
 2450 02eb 0B       		.uleb128 0xb
 2451 02ec 74070000 		.4byte	.LASF52
 2452 02f0 09       		.byte	0x9
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 59


 2453 02f1 26       		.byte	0x26
 2454 02f2 68000000 		.4byte	0x68
 2455 02f6 0C       		.byte	0xc
 2456 02f7 0B       		.uleb128 0xb
 2457 02f8 BF020000 		.4byte	.LASF53
 2458 02fc 09       		.byte	0x9
 2459 02fd 27       		.byte	0x27
 2460 02fe 68000000 		.4byte	0x68
 2461 0302 10       		.byte	0x10
 2462 0303 0B       		.uleb128 0xb
 2463 0304 E2020000 		.4byte	.LASF54
 2464 0308 09       		.byte	0x9
 2465 0309 28       		.byte	0x28
 2466 030a 68000000 		.4byte	0x68
 2467 030e 14       		.byte	0x14
 2468 030f 0B       		.uleb128 0xb
 2469 0310 D5060000 		.4byte	.LASF55
 2470 0314 09       		.byte	0x9
 2471 0315 29       		.byte	0x29
 2472 0316 68000000 		.4byte	0x68
 2473 031a 18       		.byte	0x18
 2474 031b 0B       		.uleb128 0xb
 2475 031c A5040000 		.4byte	.LASF56
 2476 0320 09       		.byte	0x9
 2477 0321 2A       		.byte	0x2a
 2478 0322 68000000 		.4byte	0x68
 2479 0326 1C       		.byte	0x1c
 2480 0327 0B       		.uleb128 0xb
 2481 0328 C6030000 		.4byte	.LASF57
 2482 032c 09       		.byte	0x9
 2483 032d 2B       		.byte	0x2b
 2484 032e 68000000 		.4byte	0x68
 2485 0332 20       		.byte	0x20
 2486 0333 00       		.byte	0
 2487 0334 09       		.uleb128 0x9
 2488 0335 2C       		.byte	0x2c
 2489 0336 0A       		.byte	0xa
 2490 0337 14       		.byte	0x14
 2491 0338 61030000 		.4byte	0x361
 2492 033c 0A       		.uleb128 0xa
 2493 033d 6B657900 		.ascii	"key\000"
 2494 0341 0A       		.byte	0xa
 2495 0342 15       		.byte	0x15
 2496 0343 61030000 		.4byte	0x361
 2497 0347 00       		.byte	0
 2498 0348 0B       		.uleb128 0xb
 2499 0349 D7020000 		.4byte	.LASF58
 2500 034d 0A       		.byte	0xa
 2501 034e 16       		.byte	0x16
 2502 034f 61030000 		.4byte	0x361
 2503 0353 14       		.byte	0x14
 2504 0354 0B       		.uleb128 0xb
 2505 0355 DD040000 		.4byte	.LASF59
 2506 0359 0A       		.byte	0xa
 2507 035a 17       		.byte	0x17
 2508 035b BD000000 		.4byte	0xbd
 2509 035f 28       		.byte	0x28
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 60


 2510 0360 00       		.byte	0
 2511 0361 07       		.uleb128 0x7
 2512 0362 D7000000 		.4byte	0xd7
 2513 0366 71030000 		.4byte	0x371
 2514 036a 08       		.uleb128 0x8
 2515 036b E5000000 		.4byte	0xe5
 2516 036f 13       		.byte	0x13
 2517 0370 00       		.byte	0
 2518 0371 03       		.uleb128 0x3
 2519 0372 1D030000 		.4byte	.LASF60
 2520 0376 0A       		.byte	0xa
 2521 0377 19       		.byte	0x19
 2522 0378 34030000 		.4byte	0x334
 2523 037c 09       		.uleb128 0x9
 2524 037d 3C       		.byte	0x3c
 2525 037e 0B       		.byte	0xb
 2526 037f 35       		.byte	0x35
 2527 0380 A9030000 		.4byte	0x3a9
 2528 0384 0B       		.uleb128 0xb
 2529 0385 6D070000 		.4byte	.LASF61
 2530 0389 0B       		.byte	0xb
 2531 038a 36       		.byte	0x36
 2532 038b 61030000 		.4byte	0x361
 2533 038f 00       		.byte	0
 2534 0390 0B       		.uleb128 0xb
 2535 0391 8B020000 		.4byte	.LASF62
 2536 0395 0B       		.byte	0xb
 2537 0396 37       		.byte	0x37
 2538 0397 61030000 		.4byte	0x361
 2539 039b 14       		.byte	0x14
 2540 039c 0B       		.uleb128 0xb
 2541 039d 59060000 		.4byte	.LASF63
 2542 03a1 0B       		.byte	0xb
 2543 03a2 38       		.byte	0x38
 2544 03a3 61030000 		.4byte	0x361
 2545 03a7 28       		.byte	0x28
 2546 03a8 00       		.byte	0
 2547 03a9 03       		.uleb128 0x3
 2548 03aa F6010000 		.4byte	.LASF64
 2549 03ae 0B       		.byte	0xb
 2550 03af 3A       		.byte	0x3a
 2551 03b0 7C030000 		.4byte	0x37c
 2552 03b4 09       		.uleb128 0x9
 2553 03b5 20       		.byte	0x20
 2554 03b6 0B       		.byte	0xb
 2555 03b7 3C       		.byte	0x3c
 2556 03b8 1D040000 		.4byte	0x41d
 2557 03bc 0B       		.uleb128 0xb
 2558 03bd 03020000 		.4byte	.LASF65
 2559 03c1 0B       		.byte	0xb
 2560 03c2 3D       		.byte	0x3d
 2561 03c3 68000000 		.4byte	0x68
 2562 03c7 00       		.byte	0
 2563 03c8 0A       		.uleb128 0xa
 2564 03c9 62657200 		.ascii	"ber\000"
 2565 03cd 0B       		.byte	0xb
 2566 03ce 3E       		.byte	0x3e
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 61


 2567 03cf 68000000 		.4byte	0x68
 2568 03d3 04       		.byte	0x4
 2569 03d4 0B       		.uleb128 0xb
 2570 03d5 37060000 		.4byte	.LASF66
 2571 03d9 0B       		.byte	0xb
 2572 03da 3F       		.byte	0x3f
 2573 03db 68000000 		.4byte	0x68
 2574 03df 08       		.byte	0x8
 2575 03e0 0B       		.uleb128 0xb
 2576 03e1 7A010000 		.4byte	.LASF67
 2577 03e5 0B       		.byte	0xb
 2578 03e6 40       		.byte	0x40
 2579 03e7 68000000 		.4byte	0x68
 2580 03eb 0C       		.byte	0xc
 2581 03ec 0B       		.uleb128 0xb
 2582 03ed 02060000 		.4byte	.LASF68
 2583 03f1 0B       		.byte	0xb
 2584 03f2 41       		.byte	0x41
 2585 03f3 68000000 		.4byte	0x68
 2586 03f7 10       		.byte	0x10
 2587 03f8 0B       		.uleb128 0xb
 2588 03f9 FD050000 		.4byte	.LASF69
 2589 03fd 0B       		.byte	0xb
 2590 03fe 42       		.byte	0x42
 2591 03ff 68000000 		.4byte	0x68
 2592 0403 14       		.byte	0x14
 2593 0404 0B       		.uleb128 0xb
 2594 0405 8D010000 		.4byte	.LASF70
 2595 0409 0B       		.byte	0xb
 2596 040a 43       		.byte	0x43
 2597 040b 68000000 		.4byte	0x68
 2598 040f 18       		.byte	0x18
 2599 0410 0B       		.uleb128 0xb
 2600 0411 12020000 		.4byte	.LASF71
 2601 0415 0B       		.byte	0xb
 2602 0416 44       		.byte	0x44
 2603 0417 68000000 		.4byte	0x68
 2604 041b 1C       		.byte	0x1c
 2605 041c 00       		.byte	0
 2606 041d 03       		.uleb128 0x3
 2607 041e B0060000 		.4byte	.LASF72
 2608 0422 0B       		.byte	0xb
 2609 0423 46       		.byte	0x46
 2610 0424 B4030000 		.4byte	0x3b4
 2611 0428 09       		.uleb128 0x9
 2612 0429 05       		.byte	0x5
 2613 042a 0B       		.byte	0xb
 2614 042b 52       		.byte	0x52
 2615 042c 6D040000 		.4byte	0x46d
 2616 0430 0B       		.uleb128 0xb
 2617 0431 64020000 		.4byte	.LASF73
 2618 0435 0B       		.byte	0xb
 2619 0436 54       		.byte	0x54
 2620 0437 81000000 		.4byte	0x81
 2621 043b 00       		.byte	0
 2622 043c 0B       		.uleb128 0xb
 2623 043d 0D080000 		.4byte	.LASF74
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 62


 2624 0441 0B       		.byte	0xb
 2625 0442 56       		.byte	0x56
 2626 0443 6D040000 		.4byte	0x46d
 2627 0447 01       		.byte	0x1
 2628 0448 0B       		.uleb128 0xb
 2629 0449 5A080000 		.4byte	.LASF75
 2630 044d 0B       		.byte	0xb
 2631 044e 58       		.byte	0x58
 2632 044f 81000000 		.4byte	0x81
 2633 0453 02       		.byte	0x2
 2634 0454 0B       		.uleb128 0xb
 2635 0455 1E060000 		.4byte	.LASF76
 2636 0459 0B       		.byte	0xb
 2637 045a 5A       		.byte	0x5a
 2638 045b 81000000 		.4byte	0x81
 2639 045f 03       		.byte	0x3
 2640 0460 0B       		.uleb128 0xb
 2641 0461 C6020000 		.4byte	.LASF77
 2642 0465 0B       		.byte	0xb
 2643 0466 5D       		.byte	0x5d
 2644 0467 81000000 		.4byte	0x81
 2645 046b 04       		.byte	0x4
 2646 046c 00       		.byte	0
 2647 046d 02       		.uleb128 0x2
 2648 046e 01       		.byte	0x1
 2649 046f 02       		.byte	0x2
 2650 0470 D1050000 		.4byte	.LASF78
 2651 0474 03       		.uleb128 0x3
 2652 0475 4B040000 		.4byte	.LASF79
 2653 0479 0B       		.byte	0xb
 2654 047a 5F       		.byte	0x5f
 2655 047b 28040000 		.4byte	0x428
 2656 047f 09       		.uleb128 0x9
 2657 0480 06       		.byte	0x6
 2658 0481 0C       		.byte	0xc
 2659 0482 2E       		.byte	0x2e
 2660 0483 B8040000 		.4byte	0x4b8
 2661 0487 0B       		.uleb128 0xb
 2662 0488 A7020000 		.4byte	.LASF80
 2663 048c 0C       		.byte	0xc
 2664 048d 30       		.byte	0x30
 2665 048e 8D000000 		.4byte	0x8d
 2666 0492 00       		.byte	0
 2667 0493 0B       		.uleb128 0xb
 2668 0494 F7070000 		.4byte	.LASF81
 2669 0498 0C       		.byte	0xc
 2670 0499 31       		.byte	0x31
 2671 049a B1000000 		.4byte	0xb1
 2672 049e 02       		.byte	0x2
 2673 049f 0B       		.uleb128 0xb
 2674 04a0 E9070000 		.4byte	.LASF82
 2675 04a4 0C       		.byte	0xc
 2676 04a5 32       		.byte	0x32
 2677 04a6 81000000 		.4byte	0x81
 2678 04aa 04       		.byte	0x4
 2679 04ab 0B       		.uleb128 0xb
 2680 04ac 51000000 		.4byte	.LASF83
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 63


 2681 04b0 0C       		.byte	0xc
 2682 04b1 33       		.byte	0x33
 2683 04b2 81000000 		.4byte	0x81
 2684 04b6 05       		.byte	0x5
 2685 04b7 00       		.byte	0
 2686 04b8 03       		.uleb128 0x3
 2687 04b9 25020000 		.4byte	.LASF84
 2688 04bd 0C       		.byte	0xc
 2689 04be 36       		.byte	0x36
 2690 04bf C3040000 		.4byte	0x4c3
 2691 04c3 0C       		.uleb128 0xc
 2692 04c4 7F040000 		.4byte	0x47f
 2693 04c8 09       		.uleb128 0x9
 2694 04c9 1C       		.byte	0x1c
 2695 04ca 0C       		.byte	0xc
 2696 04cb 39       		.byte	0x39
 2697 04cc E9040000 		.4byte	0x4e9
 2698 04d0 0B       		.uleb128 0xb
 2699 04d1 CF030000 		.4byte	.LASF85
 2700 04d5 0C       		.byte	0xc
 2701 04d6 3B       		.byte	0x3b
 2702 04d7 E9040000 		.4byte	0x4e9
 2703 04db 00       		.byte	0
 2704 04dc 0B       		.uleb128 0xb
 2705 04dd 4C080000 		.4byte	.LASF86
 2706 04e1 0C       		.byte	0xc
 2707 04e2 3C       		.byte	0x3c
 2708 04e3 F2000000 		.4byte	0xf2
 2709 04e7 04       		.byte	0x4
 2710 04e8 00       		.byte	0
 2711 04e9 06       		.uleb128 0x6
 2712 04ea 04       		.byte	0x4
 2713 04eb A9030000 		.4byte	0x3a9
 2714 04ef 03       		.uleb128 0x3
 2715 04f0 40040000 		.4byte	.LASF87
 2716 04f4 0C       		.byte	0xc
 2717 04f5 3E       		.byte	0x3e
 2718 04f6 C8040000 		.4byte	0x4c8
 2719 04fa 09       		.uleb128 0x9
 2720 04fb 68       		.byte	0x68
 2721 04fc 0C       		.byte	0xc
 2722 04fd 44       		.byte	0x44
 2723 04fe 1B050000 		.4byte	0x51b
 2724 0502 0B       		.uleb128 0xb
 2725 0503 DA030000 		.4byte	.LASF88
 2726 0507 0C       		.byte	0xc
 2727 0508 49       		.byte	0x49
 2728 0509 1B050000 		.4byte	0x51b
 2729 050d 00       		.byte	0
 2730 050e 0B       		.uleb128 0xb
 2731 050f BE030000 		.4byte	.LASF89
 2732 0513 0C       		.byte	0xc
 2733 0514 4A       		.byte	0x4a
 2734 0515 68000000 		.4byte	0x68
 2735 0519 64       		.byte	0x64
 2736 051a 00       		.byte	0
 2737 051b 07       		.uleb128 0x7
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 64


 2738 051c D7000000 		.4byte	0xd7
 2739 0520 2B050000 		.4byte	0x52b
 2740 0524 08       		.uleb128 0x8
 2741 0525 E5000000 		.4byte	0xe5
 2742 0529 63       		.byte	0x63
 2743 052a 00       		.byte	0
 2744 052b 03       		.uleb128 0x3
 2745 052c AD040000 		.4byte	.LASF90
 2746 0530 0C       		.byte	0xc
 2747 0531 50       		.byte	0x50
 2748 0532 FA040000 		.4byte	0x4fa
 2749 0536 0F       		.uleb128 0xf
 2750 0537 69000000 		.4byte	.LASF164
 2751 053b 01       		.byte	0x1
 2752 053c 14       		.byte	0x14
 2753 053d 00000000 		.4byte	.LFB64
 2754 0541 0C000000 		.4byte	.LFE64-.LFB64
 2755 0545 01       		.uleb128 0x1
 2756 0546 9C       		.byte	0x9c
 2757 0547 10       		.uleb128 0x10
 2758 0548 3C080000 		.4byte	.LASF104
 2759 054c 01       		.byte	0x1
 2760 054d 28       		.byte	0x28
 2761 054e 00000000 		.4byte	.LFB65
 2762 0552 2C010000 		.4byte	.LFE65-.LFB65
 2763 0556 01       		.uleb128 0x1
 2764 0557 9C       		.byte	0x9c
 2765 0558 87050000 		.4byte	0x587
 2766 055c 11       		.uleb128 0x11
 2767 055d 2C070000 		.4byte	.LASF91
 2768 0561 01       		.byte	0x1
 2769 0562 3C       		.byte	0x3c
 2770 0563 87050000 		.4byte	0x587
 2771 0567 02       		.uleb128 0x2
 2772 0568 91       		.byte	0x91
 2773 0569 64       		.sleb128 -28
 2774 056a 11       		.uleb128 0x11
 2775 056b 16080000 		.4byte	.LASF92
 2776 056f 01       		.byte	0x1
 2777 0570 59       		.byte	0x59
 2778 0571 97050000 		.4byte	0x597
 2779 0575 02       		.uleb128 0x2
 2780 0576 91       		.byte	0x91
 2781 0577 58       		.sleb128 -40
 2782 0578 11       		.uleb128 0x11
 2783 0579 6E030000 		.4byte	.LASF93
 2784 057d 01       		.byte	0x1
 2785 057e 5E       		.byte	0x5e
 2786 057f 81000000 		.4byte	0x81
 2787 0583 02       		.uleb128 0x2
 2788 0584 91       		.byte	0x91
 2789 0585 6F       		.sleb128 -17
 2790 0586 00       		.byte	0
 2791 0587 07       		.uleb128 0x7
 2792 0588 99000000 		.4byte	0x99
 2793 058c 97050000 		.4byte	0x597
 2794 0590 08       		.uleb128 0x8
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 65


 2795 0591 E5000000 		.4byte	0xe5
 2796 0595 01       		.byte	0x1
 2797 0596 00       		.byte	0
 2798 0597 07       		.uleb128 0x7
 2799 0598 D7000000 		.4byte	0xd7
 2800 059c A7050000 		.4byte	0x5a7
 2801 05a0 08       		.uleb128 0x8
 2802 05a1 E5000000 		.4byte	0xe5
 2803 05a5 09       		.byte	0x9
 2804 05a6 00       		.byte	0
 2805 05a7 12       		.uleb128 0x12
 2806 05a8 E7030000 		.4byte	.LASF95
 2807 05ac 01       		.byte	0x1
 2808 05ad 68       		.byte	0x68
 2809 05ae 68000000 		.4byte	0x68
 2810 05b2 00000000 		.4byte	.LFB66
 2811 05b6 64000000 		.4byte	.LFE66-.LFB66
 2812 05ba 01       		.uleb128 0x1
 2813 05bb 9C       		.byte	0x9c
 2814 05bc CF050000 		.4byte	0x5cf
 2815 05c0 11       		.uleb128 0x11
 2816 05c1 B5050000 		.4byte	.LASF94
 2817 05c5 01       		.byte	0x1
 2818 05c6 82       		.byte	0x82
 2819 05c7 81000000 		.4byte	0x81
 2820 05cb 02       		.uleb128 0x2
 2821 05cc 91       		.byte	0x91
 2822 05cd 77       		.sleb128 -9
 2823 05ce 00       		.byte	0
 2824 05cf 13       		.uleb128 0x13
 2825 05d0 52070000 		.4byte	.LASF165
 2826 05d4 01       		.byte	0x1
 2827 05d5 92       		.byte	0x92
 2828 05d6 00000000 		.4byte	.LFB67
 2829 05da 2A000000 		.4byte	.LFE67-.LFB67
 2830 05de 01       		.uleb128 0x1
 2831 05df 9C       		.byte	0x9c
 2832 05e0 14       		.uleb128 0x14
 2833 05e1 29030000 		.4byte	.LASF96
 2834 05e5 01       		.byte	0x1
 2835 05e6 B7       		.byte	0xb7
 2836 05e7 00000000 		.4byte	.LFB68
 2837 05eb 50000000 		.4byte	.LFE68-.LFB68
 2838 05ef 01       		.uleb128 0x1
 2839 05f0 9C       		.byte	0x9c
 2840 05f1 04060000 		.4byte	0x604
 2841 05f5 15       		.uleb128 0x15
 2842 05f6 62040000 		.4byte	.LASF97
 2843 05fa 01       		.byte	0x1
 2844 05fb B7       		.byte	0xb7
 2845 05fc 81000000 		.4byte	0x81
 2846 0600 02       		.uleb128 0x2
 2847 0601 91       		.byte	0x91
 2848 0602 77       		.sleb128 -9
 2849 0603 00       		.byte	0
 2850 0604 16       		.uleb128 0x16
 2851 0605 31080000 		.4byte	.LASF101
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 66


 2852 0609 01       		.byte	0x1
 2853 060a CE       		.byte	0xce
 2854 060b 81000000 		.4byte	0x81
 2855 060f 00000000 		.4byte	.LFB69
 2856 0613 48000000 		.4byte	.LFE69-.LFB69
 2857 0617 01       		.uleb128 0x1
 2858 0618 9C       		.byte	0x9c
 2859 0619 3A060000 		.4byte	0x63a
 2860 061d 15       		.uleb128 0x15
 2861 061e 8B040000 		.4byte	.LASF98
 2862 0622 01       		.byte	0x1
 2863 0623 CE       		.byte	0xce
 2864 0624 3A060000 		.4byte	0x63a
 2865 0628 02       		.uleb128 0x2
 2866 0629 91       		.byte	0x91
 2867 062a 74       		.sleb128 -12
 2868 062b 15       		.uleb128 0x15
 2869 062c 62040000 		.4byte	.LASF97
 2870 0630 01       		.byte	0x1
 2871 0631 CE       		.byte	0xce
 2872 0632 81000000 		.4byte	0x81
 2873 0636 02       		.uleb128 0x2
 2874 0637 91       		.byte	0x91
 2875 0638 73       		.sleb128 -13
 2876 0639 00       		.byte	0
 2877 063a 06       		.uleb128 0x6
 2878 063b 04       		.byte	0x4
 2879 063c B8040000 		.4byte	0x4b8
 2880 0640 17       		.uleb128 0x17
 2881 0641 07060000 		.4byte	.LASF99
 2882 0645 01       		.byte	0x1
 2883 0646 E3       		.byte	0xe3
 2884 0647 00000000 		.4byte	.LFB70
 2885 064b 1E000000 		.4byte	.LFE70-.LFB70
 2886 064f 01       		.uleb128 0x1
 2887 0650 9C       		.byte	0x9c
 2888 0651 64060000 		.4byte	0x664
 2889 0655 15       		.uleb128 0x15
 2890 0656 65060000 		.4byte	.LASF100
 2891 065a 01       		.byte	0x1
 2892 065b E3       		.byte	0xe3
 2893 065c 3A060000 		.4byte	0x63a
 2894 0660 02       		.uleb128 0x2
 2895 0661 91       		.byte	0x91
 2896 0662 74       		.sleb128 -12
 2897 0663 00       		.byte	0
 2898 0664 18       		.uleb128 0x18
 2899 0665 44050000 		.4byte	.LASF102
 2900 0669 01       		.byte	0x1
 2901 066a EC       		.byte	0xec
 2902 066b B8040000 		.4byte	0x4b8
 2903 066f 00000000 		.4byte	.LFB71
 2904 0673 46000000 		.4byte	.LFE71-.LFB71
 2905 0677 01       		.uleb128 0x1
 2906 0678 9C       		.byte	0x9c
 2907 0679 B6060000 		.4byte	0x6b6
 2908 067d 15       		.uleb128 0x15
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 67


 2909 067e A7020000 		.4byte	.LASF80
 2910 0682 01       		.byte	0x1
 2911 0683 EC       		.byte	0xec
 2912 0684 8D000000 		.4byte	0x8d
 2913 0688 02       		.uleb128 0x2
 2914 0689 91       		.byte	0x91
 2915 068a 6A       		.sleb128 -22
 2916 068b 15       		.uleb128 0x15
 2917 068c E9070000 		.4byte	.LASF82
 2918 0690 01       		.byte	0x1
 2919 0691 EC       		.byte	0xec
 2920 0692 81000000 		.4byte	0x81
 2921 0696 02       		.uleb128 0x2
 2922 0697 91       		.byte	0x91
 2923 0698 69       		.sleb128 -23
 2924 0699 15       		.uleb128 0x15
 2925 069a 51000000 		.4byte	.LASF83
 2926 069e 01       		.byte	0x1
 2927 069f EC       		.byte	0xec
 2928 06a0 81000000 		.4byte	0x81
 2929 06a4 02       		.uleb128 0x2
 2930 06a5 91       		.byte	0x91
 2931 06a6 68       		.sleb128 -24
 2932 06a7 11       		.uleb128 0x11
 2933 06a8 7C070000 		.4byte	.LASF103
 2934 06ac 01       		.byte	0x1
 2935 06ad EF       		.byte	0xef
 2936 06ae B8040000 		.4byte	0x4b8
 2937 06b2 02       		.uleb128 0x2
 2938 06b3 91       		.byte	0x91
 2939 06b4 70       		.sleb128 -16
 2940 06b5 00       		.byte	0
 2941 06b6 19       		.uleb128 0x19
 2942 06b7 74060000 		.4byte	.LASF105
 2943 06bb 01       		.byte	0x1
 2944 06bc 0501     		.2byte	0x105
 2945 06be 00000000 		.4byte	.LFB72
 2946 06c2 2C010000 		.4byte	.LFE72-.LFB72
 2947 06c6 01       		.uleb128 0x1
 2948 06c7 9C       		.byte	0x9c
 2949 06c8 2D070000 		.4byte	0x72d
 2950 06cc 1A       		.uleb128 0x1a
 2951 06cd DD070000 		.4byte	.LASF106
 2952 06d1 01       		.byte	0x1
 2953 06d2 0D01     		.2byte	0x10d
 2954 06d4 C9010000 		.4byte	0x1c9
 2955 06d8 03       		.uleb128 0x3
 2956 06d9 91       		.byte	0x91
 2957 06da EC7C     		.sleb128 -404
 2958 06dc 1A       		.uleb128 0x1a
 2959 06dd 55010000 		.4byte	.LASF107
 2960 06e1 01       		.byte	0x1
 2961 06e2 1101     		.2byte	0x111
 2962 06e4 C9010000 		.4byte	0x1c9
 2963 06e8 03       		.uleb128 0x3
 2964 06e9 91       		.byte	0x91
 2965 06ea E879     		.sleb128 -792
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 68


 2966 06ec 1A       		.uleb128 0x1a
 2967 06ed B7070000 		.4byte	.LASF108
 2968 06f1 01       		.byte	0x1
 2969 06f2 1501     		.2byte	0x115
 2970 06f4 C9010000 		.4byte	0x1c9
 2971 06f8 03       		.uleb128 0x3
 2972 06f9 91       		.byte	0x91
 2973 06fa E476     		.sleb128 -1180
 2974 06fc 1A       		.uleb128 0x1a
 2975 06fd 02010000 		.4byte	.LASF109
 2976 0701 01       		.byte	0x1
 2977 0702 1901     		.2byte	0x119
 2978 0704 C9010000 		.4byte	0x1c9
 2979 0708 03       		.uleb128 0x3
 2980 0709 91       		.byte	0x91
 2981 070a E073     		.sleb128 -1568
 2982 070c 1A       		.uleb128 0x1a
 2983 070d 15040000 		.4byte	.LASF110
 2984 0711 01       		.byte	0x1
 2985 0712 1D01     		.2byte	0x11d
 2986 0714 C9010000 		.4byte	0x1c9
 2987 0718 03       		.uleb128 0x3
 2988 0719 91       		.byte	0x91
 2989 071a DC70     		.sleb128 -1956
 2990 071c 1A       		.uleb128 0x1a
 2991 071d 00000000 		.4byte	.LASF111
 2992 0721 01       		.byte	0x1
 2993 0722 2101     		.2byte	0x121
 2994 0724 C9010000 		.4byte	0x1c9
 2995 0728 03       		.uleb128 0x3
 2996 0729 91       		.byte	0x91
 2997 072a D86D     		.sleb128 -2344
 2998 072c 00       		.byte	0
 2999 072d 1B       		.uleb128 0x1b
 3000 072e 47080000 		.4byte	.LASF166
 3001 0732 01       		.byte	0x1
 3002 0733 2C01     		.2byte	0x12c
 3003 0735 68000000 		.4byte	0x68
 3004 0739 00000000 		.4byte	.LFB73
 3005 073d 1E000000 		.4byte	.LFE73-.LFB73
 3006 0741 01       		.uleb128 0x1
 3007 0742 9C       		.byte	0x9c
 3008 0743 1C       		.uleb128 0x1c
 3009 0744 6E020000 		.4byte	.LASF112
 3010 0748 01       		.byte	0x1
 3011 0749 4201     		.2byte	0x142
 3012 074b 81000000 		.4byte	0x81
 3013 074f 00000000 		.4byte	.LFB74
 3014 0753 30040000 		.4byte	.LFE74-.LFB74
 3015 0757 01       		.uleb128 0x1
 3016 0758 9C       		.byte	0x9c
 3017 0759 9D080000 		.4byte	0x89d
 3018 075d 1D       		.uleb128 0x1d
 3019 075e 62000000 		.4byte	.LBB2
 3020 0762 B8030000 		.4byte	.LBE2-.LBB2
 3021 0766 1A       		.uleb128 0x1a
 3022 0767 57050000 		.4byte	.LASF113
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 69


 3023 076b 01       		.byte	0x1
 3024 076c 7201     		.2byte	0x172
 3025 076e 61030000 		.4byte	0x361
 3026 0772 02       		.uleb128 0x2
 3027 0773 91       		.byte	0x91
 3028 0774 48       		.sleb128 -56
 3029 0775 1A       		.uleb128 0x1a
 3030 0776 46020000 		.4byte	.LASF114
 3031 077a 01       		.byte	0x1
 3032 077b 7701     		.2byte	0x177
 3033 077d 61030000 		.4byte	0x361
 3034 0781 03       		.uleb128 0x3
 3035 0782 91       		.byte	0x91
 3036 0783 B47F     		.sleb128 -76
 3037 0785 1A       		.uleb128 0x1a
 3038 0786 7A030000 		.4byte	.LASF115
 3039 078a 01       		.byte	0x1
 3040 078b 8A01     		.2byte	0x18a
 3041 078d 8D000000 		.4byte	0x8d
 3042 0791 02       		.uleb128 0x2
 3043 0792 91       		.byte	0x91
 3044 0793 66       		.sleb128 -26
 3045 0794 1A       		.uleb128 0x1a
 3046 0795 00040000 		.4byte	.LASF116
 3047 0799 01       		.byte	0x1
 3048 079a 8B01     		.2byte	0x18b
 3049 079c 61030000 		.4byte	0x361
 3050 07a0 03       		.uleb128 0x3
 3051 07a1 91       		.byte	0x91
 3052 07a2 A07F     		.sleb128 -96
 3053 07a4 1A       		.uleb128 0x1a
 3054 07a5 17070000 		.4byte	.LASF117
 3055 07a9 01       		.byte	0x1
 3056 07aa A001     		.2byte	0x1a0
 3057 07ac 9D080000 		.4byte	0x89d
 3058 07b0 03       		.uleb128 0x3
 3059 07b1 91       		.byte	0x91
 3060 07b2 B875     		.sleb128 -1352
 3061 07b4 1A       		.uleb128 0x1a
 3062 07b5 97070000 		.4byte	.LASF30
 3063 07b9 01       		.byte	0x1
 3064 07ba A101     		.2byte	0x1a1
 3065 07bc 81000000 		.4byte	0x81
 3066 07c0 02       		.uleb128 0x2
 3067 07c1 91       		.byte	0x91
 3068 07c2 65       		.sleb128 -27
 3069 07c3 1A       		.uleb128 0x1a
 3070 07c4 E9060000 		.4byte	.LASF118
 3071 07c8 01       		.byte	0x1
 3072 07c9 A801     		.2byte	0x1a8
 3073 07cb EC000000 		.4byte	0xec
 3074 07cf 02       		.uleb128 0x2
 3075 07d0 91       		.byte	0x91
 3076 07d1 6C       		.sleb128 -20
 3077 07d2 1A       		.uleb128 0x1a
 3078 07d3 72010000 		.4byte	.LASF119
 3079 07d7 01       		.byte	0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 70


 3080 07d8 AC01     		.2byte	0x1ac
 3081 07da A5000000 		.4byte	0xa5
 3082 07de 02       		.uleb128 0x2
 3083 07df 91       		.byte	0x91
 3084 07e0 64       		.sleb128 -28
 3085 07e1 1A       		.uleb128 0x1a
 3086 07e2 77020000 		.4byte	.LASF120
 3087 07e6 01       		.byte	0x1
 3088 07e7 DC01     		.2byte	0x1dc
 3089 07e9 4C000000 		.4byte	0x4c
 3090 07ed 02       		.uleb128 0x2
 3091 07ee 91       		.byte	0x91
 3092 07ef 5C       		.sleb128 -36
 3093 07f0 1E       		.uleb128 0x1e
 3094 07f1 CE000000 		.4byte	.LBB3
 3095 07f5 2C000000 		.4byte	.LBE3-.LBB3
 3096 07f9 1D080000 		.4byte	0x81d
 3097 07fd 1A       		.uleb128 0x1a
 3098 07fe A0060000 		.4byte	.LASF121
 3099 0802 01       		.byte	0x1
 3100 0803 7F01     		.2byte	0x17f
 3101 0805 8D000000 		.4byte	0x8d
 3102 0809 02       		.uleb128 0x2
 3103 080a 91       		.byte	0x91
 3104 080b 68       		.sleb128 -24
 3105 080c 1A       		.uleb128 0x1a
 3106 080d E4010000 		.4byte	.LASF122
 3107 0811 01       		.byte	0x1
 3108 0812 8001     		.2byte	0x180
 3109 0814 61030000 		.4byte	0x361
 3110 0818 03       		.uleb128 0x3
 3111 0819 91       		.byte	0x91
 3112 081a 8C7F     		.sleb128 -116
 3113 081c 00       		.byte	0
 3114 081d 1E       		.uleb128 0x1e
 3115 081e FC000000 		.4byte	.LBB4
 3116 0822 20000000 		.4byte	.LBE4-.LBB4
 3117 0826 3B080000 		.4byte	0x83b
 3118 082a 1A       		.uleb128 0x1a
 3119 082b E4010000 		.4byte	.LASF122
 3120 082f 01       		.byte	0x1
 3121 0830 8401     		.2byte	0x184
 3122 0832 61030000 		.4byte	0x361
 3123 0836 03       		.uleb128 0x3
 3124 0837 91       		.byte	0x91
 3125 0838 F87E     		.sleb128 -136
 3126 083a 00       		.byte	0
 3127 083b 1E       		.uleb128 0x1e
 3128 083c 3C020000 		.4byte	.LBB5
 3129 0840 BC000000 		.4byte	.LBE5-.LBB5
 3130 0844 72080000 		.4byte	0x872
 3131 0848 1A       		.uleb128 0x1a
 3132 0849 50050000 		.4byte	.LASF123
 3133 084d 01       		.byte	0x1
 3134 084e B101     		.2byte	0x1b1
 3135 0850 A5000000 		.4byte	0xa5
 3136 0854 02       		.uleb128 0x2
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 71


 3137 0855 91       		.byte	0x91
 3138 0856 6B       		.sleb128 -21
 3139 0857 1D       		.uleb128 0x1d
 3140 0858 44020000 		.4byte	.LBB6
 3141 085c 9A000000 		.4byte	.LBE6-.LBB6
 3142 0860 1A       		.uleb128 0x1a
 3143 0861 47030000 		.4byte	.LASF124
 3144 0865 01       		.byte	0x1
 3145 0866 B301     		.2byte	0x1b3
 3146 0868 AD080000 		.4byte	0x8ad
 3147 086c 03       		.uleb128 0x3
 3148 086d 91       		.byte	0x91
 3149 086e 8077     		.sleb128 -1152
 3150 0870 00       		.byte	0
 3151 0871 00       		.byte	0
 3152 0872 1D       		.uleb128 0x1d
 3153 0873 12030000 		.4byte	.LBB7
 3154 0877 3A000000 		.4byte	.LBE7-.LBB7
 3155 087b 1A       		.uleb128 0x1a
 3156 087c 54020000 		.4byte	.LASF125
 3157 0880 01       		.byte	0x1
 3158 0881 D301     		.2byte	0x1d3
 3159 0883 68000000 		.4byte	0x68
 3160 0887 02       		.uleb128 0x2
 3161 0888 91       		.byte	0x91
 3162 0889 60       		.sleb128 -32
 3163 088a 1A       		.uleb128 0x1a
 3164 088b 12060000 		.4byte	.LASF126
 3165 088f 01       		.byte	0x1
 3166 0890 D401     		.2byte	0x1d4
 3167 0892 97050000 		.4byte	0x597
 3168 0896 03       		.uleb128 0x3
 3169 0897 91       		.byte	0x91
 3170 0898 EC7E     		.sleb128 -148
 3171 089a 00       		.byte	0
 3172 089b 00       		.byte	0
 3173 089c 00       		.byte	0
 3174 089d 07       		.uleb128 0x7
 3175 089e D7000000 		.4byte	0xd7
 3176 08a2 AD080000 		.4byte	0x8ad
 3177 08a6 08       		.uleb128 0x8
 3178 08a7 E5000000 		.4byte	0xe5
 3179 08ab C7       		.byte	0xc7
 3180 08ac 00       		.byte	0
 3181 08ad 07       		.uleb128 0x7
 3182 08ae D7000000 		.4byte	0xd7
 3183 08b2 BE080000 		.4byte	0x8be
 3184 08b6 1F       		.uleb128 0x1f
 3185 08b7 E5000000 		.4byte	0xe5
 3186 08bb E803     		.2byte	0x3e8
 3187 08bd 00       		.byte	0
 3188 08be 1C       		.uleb128 0x1c
 3189 08bf 91050000 		.4byte	.LASF127
 3190 08c3 01       		.byte	0x1
 3191 08c4 F101     		.2byte	0x1f1
 3192 08c6 81000000 		.4byte	0x81
 3193 08ca 00000000 		.4byte	.LFB75
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 72


 3194 08ce 44000000 		.4byte	.LFE75-.LFB75
 3195 08d2 01       		.uleb128 0x1
 3196 08d3 9C       		.byte	0x9c
 3197 08d4 F2080000 		.4byte	0x8f2
 3198 08d8 1D       		.uleb128 0x1d
 3199 08d9 20000000 		.4byte	.LBB8
 3200 08dd 1A000000 		.4byte	.LBE8-.LBB8
 3201 08e1 1A       		.uleb128 0x1a
 3202 08e2 77020000 		.4byte	.LASF120
 3203 08e6 01       		.byte	0x1
 3204 08e7 FC01     		.2byte	0x1fc
 3205 08e9 4C000000 		.4byte	0x4c
 3206 08ed 02       		.uleb128 0x2
 3207 08ee 91       		.byte	0x91
 3208 08ef 74       		.sleb128 -12
 3209 08f0 00       		.byte	0
 3210 08f1 00       		.byte	0
 3211 08f2 1C       		.uleb128 0x1c
 3212 08f3 A8030000 		.4byte	.LASF128
 3213 08f7 01       		.byte	0x1
 3214 08f8 1102     		.2byte	0x211
 3215 08fa 81000000 		.4byte	0x81
 3216 08fe 00000000 		.4byte	.LFB76
 3217 0902 74020000 		.4byte	.LFE76-.LFB76
 3218 0906 01       		.uleb128 0x1
 3219 0907 9C       		.byte	0x9c
 3220 0908 83090000 		.4byte	0x983
 3221 090c 1A       		.uleb128 0x1a
 3222 090d DD040000 		.4byte	.LASF59
 3223 0911 01       		.byte	0x1
 3224 0912 1402     		.2byte	0x214
 3225 0914 4C000000 		.4byte	0x4c
 3226 0918 02       		.uleb128 0x2
 3227 0919 91       		.byte	0x91
 3228 091a 6C       		.sleb128 -20
 3229 091b 1A       		.uleb128 0x1a
 3230 091c EF060000 		.4byte	.LASF129
 3231 0920 01       		.byte	0x1
 3232 0921 1502     		.2byte	0x215
 3233 0923 83090000 		.4byte	0x983
 3234 0927 02       		.uleb128 0x2
 3235 0928 91       		.byte	0x91
 3236 0929 4C       		.sleb128 -52
 3237 092a 1A       		.uleb128 0x1a
 3238 092b D7020000 		.4byte	.LASF58
 3239 092f 01       		.byte	0x1
 3240 0930 1902     		.2byte	0x219
 3241 0932 61030000 		.4byte	0x361
 3242 0936 03       		.uleb128 0x3
 3243 0937 91       		.byte	0x91
 3244 0938 B87F     		.sleb128 -72
 3245 093a 1A       		.uleb128 0x1a
 3246 093b 52030000 		.4byte	.LASF130
 3247 093f 01       		.byte	0x1
 3248 0940 3702     		.2byte	0x237
 3249 0942 6D020000 		.4byte	0x26d
 3250 0946 03       		.uleb128 0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 73


 3251 0947 91       		.byte	0x91
 3252 0948 A47F     		.sleb128 -92
 3253 094a 1E       		.uleb128 0x1e
 3254 094b 22000000 		.4byte	.LBB9
 3255 094f 78000000 		.4byte	.LBE9-.LBB9
 3256 0953 68090000 		.4byte	0x968
 3257 0957 1A       		.uleb128 0x1a
 3258 0958 35070000 		.4byte	.LASF131
 3259 095c 01       		.byte	0x1
 3260 095d 1F02     		.2byte	0x21f
 3261 095f 1D020000 		.4byte	0x21d
 3262 0963 03       		.uleb128 0x3
 3263 0964 91       		.byte	0x91
 3264 0965 887F     		.sleb128 -120
 3265 0967 00       		.byte	0
 3266 0968 1D       		.uleb128 0x1d
 3267 0969 1E010000 		.4byte	.LBB10
 3268 096d EE000000 		.4byte	.LBE10-.LBB10
 3269 0971 1A       		.uleb128 0x1a
 3270 0972 8C070000 		.4byte	.LASF132
 3271 0976 01       		.byte	0x1
 3272 0977 5202     		.2byte	0x252
 3273 0979 B1020000 		.4byte	0x2b1
 3274 097d 03       		.uleb128 0x3
 3275 097e 91       		.byte	0x91
 3276 097f F87E     		.sleb128 -136
 3277 0981 00       		.byte	0
 3278 0982 00       		.byte	0
 3279 0983 07       		.uleb128 0x7
 3280 0984 D7000000 		.4byte	0xd7
 3281 0988 93090000 		.4byte	0x993
 3282 098c 08       		.uleb128 0x8
 3283 098d E5000000 		.4byte	0xe5
 3284 0991 1F       		.byte	0x1f
 3285 0992 00       		.byte	0
 3286 0993 20       		.uleb128 0x20
 3287 0994 15030000 		.4byte	.LASF133
 3288 0998 01       		.byte	0x1
 3289 0999 7802     		.2byte	0x278
 3290 099b 81000000 		.4byte	0x81
 3291 099f 00000000 		.4byte	.LFB77
 3292 09a3 74000000 		.4byte	.LFE77-.LFB77
 3293 09a7 01       		.uleb128 0x1
 3294 09a8 9C       		.byte	0x9c
 3295 09a9 D9090000 		.4byte	0x9d9
 3296 09ad 21       		.uleb128 0x21
 3297 09ae DD040000 		.4byte	.LASF59
 3298 09b2 01       		.byte	0x1
 3299 09b3 7802     		.2byte	0x278
 3300 09b5 4C000000 		.4byte	0x4c
 3301 09b9 02       		.uleb128 0x2
 3302 09ba 91       		.byte	0x91
 3303 09bb 64       		.sleb128 -28
 3304 09bc 22       		.uleb128 0x22
 3305 09bd 7400     		.ascii	"t\000"
 3306 09bf 01       		.byte	0x1
 3307 09c0 7F02     		.2byte	0x27f
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 74


 3308 09c2 D9090000 		.4byte	0x9d9
 3309 09c6 02       		.uleb128 0x2
 3310 09c7 91       		.byte	0x91
 3311 09c8 74       		.sleb128 -12
 3312 09c9 1A       		.uleb128 0x1a
 3313 09ca BC040000 		.4byte	.LASF134
 3314 09ce 01       		.byte	0x1
 3315 09cf 8402     		.2byte	0x284
 3316 09d1 6B010000 		.4byte	0x16b
 3317 09d5 02       		.uleb128 0x2
 3318 09d6 91       		.byte	0x91
 3319 09d7 68       		.sleb128 -24
 3320 09d8 00       		.byte	0
 3321 09d9 06       		.uleb128 0x6
 3322 09da 04       		.byte	0x4
 3323 09db BC020000 		.4byte	0x2bc
 3324 09df 20       		.uleb128 0x20
 3325 09e0 B6020000 		.4byte	.LASF135
 3326 09e4 01       		.byte	0x1
 3327 09e5 A102     		.2byte	0x2a1
 3328 09e7 81000000 		.4byte	0x81
 3329 09eb 00000000 		.4byte	.LFB78
 3330 09ef 38010000 		.4byte	.LFE78-.LFB78
 3331 09f3 01       		.uleb128 0x1
 3332 09f4 9C       		.byte	0x9c
 3333 09f5 580A0000 		.4byte	0xa58
 3334 09f9 21       		.uleb128 0x21
 3335 09fa DD020000 		.4byte	.LASF136
 3336 09fe 01       		.byte	0x1
 3337 09ff A102     		.2byte	0x2a1
 3338 0a01 EC000000 		.4byte	0xec
 3339 0a05 03       		.uleb128 0x3
 3340 0a06 91       		.byte	0x91
 3341 0a07 9C7E     		.sleb128 -228
 3342 0a09 21       		.uleb128 0x21
 3343 0a0a D2020000 		.4byte	.LASF137
 3344 0a0e 01       		.byte	0x1
 3345 0a0f A102     		.2byte	0x2a1
 3346 0a11 68000000 		.4byte	0x68
 3347 0a15 03       		.uleb128 0x3
 3348 0a16 91       		.byte	0x91
 3349 0a17 987E     		.sleb128 -232
 3350 0a19 21       		.uleb128 0x21
 3351 0a1a 85040000 		.4byte	.LASF138
 3352 0a1e 01       		.byte	0x1
 3353 0a1f A102     		.2byte	0x2a1
 3354 0a21 EC000000 		.4byte	0xec
 3355 0a25 03       		.uleb128 0x3
 3356 0a26 91       		.byte	0x91
 3357 0a27 947E     		.sleb128 -236
 3358 0a29 1A       		.uleb128 0x1a
 3359 0a2a D5010000 		.4byte	.LASF139
 3360 0a2e 01       		.byte	0x1
 3361 0a2f A302     		.2byte	0x2a3
 3362 0a31 81000000 		.4byte	0x81
 3363 0a35 02       		.uleb128 0x2
 3364 0a36 91       		.byte	0x91
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 75


 3365 0a37 77       		.sleb128 -9
 3366 0a38 1A       		.uleb128 0x1a
 3367 0a39 3C000000 		.4byte	.LASF140
 3368 0a3d 01       		.byte	0x1
 3369 0a3e AA02     		.2byte	0x2aa
 3370 0a40 580A0000 		.4byte	0xa58
 3371 0a44 02       		.uleb128 0x2
 3372 0a45 91       		.byte	0x91
 3373 0a46 68       		.sleb128 -24
 3374 0a47 1A       		.uleb128 0x1a
 3375 0a48 17070000 		.4byte	.LASF117
 3376 0a4c 01       		.byte	0x1
 3377 0a4d B202     		.2byte	0x2b2
 3378 0a4f 9D080000 		.4byte	0x89d
 3379 0a53 03       		.uleb128 0x3
 3380 0a54 91       		.byte	0x91
 3381 0a55 A07E     		.sleb128 -224
 3382 0a57 00       		.byte	0
 3383 0a58 07       		.uleb128 0x7
 3384 0a59 D7000000 		.4byte	0xd7
 3385 0a5d 680A0000 		.4byte	0xa68
 3386 0a61 08       		.uleb128 0x8
 3387 0a62 E5000000 		.4byte	0xe5
 3388 0a66 0B       		.byte	0xb
 3389 0a67 00       		.byte	0
 3390 0a68 23       		.uleb128 0x23
 3391 0a69 48010000 		.4byte	.LASF141
 3392 0a6d 0D       		.byte	0xd
 3393 0a6e 1207     		.2byte	0x712
 3394 0a70 740A0000 		.4byte	0xa74
 3395 0a74 0C       		.uleb128 0xc
 3396 0a75 76000000 		.4byte	0x76
 3397 0a79 24       		.uleb128 0x24
 3398 0a7a 2C000000 		.4byte	.LASF142
 3399 0a7e 0A       		.byte	0xa
 3400 0a7f 11       		.byte	0x11
 3401 0a80 6D040000 		.4byte	0x46d
 3402 0a84 05       		.uleb128 0x5
 3403 0a85 03       		.byte	0x3
 3404 0a86 00000000 		.4byte	buffer_overflow
 3405 0a8a 24       		.uleb128 0x24
 3406 0a8b 6C040000 		.4byte	.LASF143
 3407 0a8f 0A       		.byte	0xa
 3408 0a90 22       		.byte	0x22
 3409 0a91 8D000000 		.4byte	0x8d
 3410 0a95 05       		.uleb128 0x5
 3411 0a96 03       		.byte	0x3
 3412 0a97 00000000 		.4byte	dataPointsInStack
 3413 0a9b 24       		.uleb128 0x24
 3414 0a9c 9E070000 		.4byte	.LASF144
 3415 0aa0 0A       		.byte	0xa
 3416 0aa1 23       		.byte	0x23
 3417 0aa2 8D000000 		.4byte	0x8d
 3418 0aa6 05       		.uleb128 0x5
 3419 0aa7 03       		.byte	0x3
 3420 0aa8 00000000 		.4byte	dataPointsInStackDesired
 3421 0aac 07       		.uleb128 0x7
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 76


 3422 0aad 71030000 		.4byte	0x371
 3423 0ab1 BC0A0000 		.4byte	0xabc
 3424 0ab5 08       		.uleb128 0x8
 3425 0ab6 E5000000 		.4byte	0xe5
 3426 0aba 95       		.byte	0x95
 3427 0abb 00       		.byte	0
 3428 0abc 24       		.uleb128 0x24
 3429 0abd B9030000 		.4byte	.LASF145
 3430 0ac1 0A       		.byte	0xa
 3431 0ac2 24       		.byte	0x24
 3432 0ac3 AC0A0000 		.4byte	0xaac
 3433 0ac7 05       		.uleb128 0x5
 3434 0ac8 03       		.byte	0x3
 3435 0ac9 00000000 		.4byte	data
 3436 0acd 24       		.uleb128 0x24
 3437 0ace 2F010000 		.4byte	.LASF146
 3438 0ad2 0B       		.byte	0xb
 3439 0ad3 1F       		.byte	0x1f
 3440 0ad4 81000000 		.4byte	0x81
 3441 0ad8 05       		.uleb128 0x5
 3442 0ad9 03       		.byte	0x3
 3443 0ada 00000000 		.4byte	modem_state
 3444 0ade 24       		.uleb128 0x24
 3445 0adf 29040000 		.4byte	.LASF147
 3446 0ae3 0B       		.byte	0xb
 3447 0ae4 62       		.byte	0x62
 3448 0ae5 BD000000 		.4byte	0xbd
 3449 0ae9 05       		.uleb128 0x5
 3450 0aea 03       		.byte	0x3
 3451 0aeb 00000000 		.4byte	modem_start_time_stamp
 3452 0aef 24       		.uleb128 0x24
 3453 0af0 CF030000 		.4byte	.LASF85
 3454 0af4 0B       		.byte	0xb
 3455 0af5 63       		.byte	0x63
 3456 0af6 A9030000 		.4byte	0x3a9
 3457 0afa 05       		.uleb128 0x5
 3458 0afb 03       		.byte	0x3
 3459 0afc 00000000 		.4byte	modem_info
 3460 0b00 24       		.uleb128 0x24
 3461 0b01 00070000 		.4byte	.LASF148
 3462 0b05 0B       		.byte	0xb
 3463 0b06 64       		.byte	0x64
 3464 0b07 1D040000 		.4byte	0x41d
 3465 0b0b 05       		.uleb128 0x5
 3466 0b0c 03       		.byte	0x3
 3467 0b0d 00000000 		.4byte	modem_stats
 3468 0b11 24       		.uleb128 0x24
 3469 0b12 2F050000 		.4byte	.LASF149
 3470 0b16 0B       		.byte	0xb
 3471 0b17 65       		.byte	0x65
 3472 0b18 74040000 		.4byte	0x474
 3473 0b1c 05       		.uleb128 0x5
 3474 0b1d 03       		.byte	0x3
 3475 0b1e 00000000 		.4byte	updatable_parameters
 3476 0b22 07       		.uleb128 0x7
 3477 0b23 D7000000 		.4byte	0xd7
 3478 0b27 330B0000 		.4byte	0xb33
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 77


 3479 0b2b 1F       		.uleb128 0x1f
 3480 0b2c E5000000 		.4byte	0xe5
 3481 0b30 0F27     		.2byte	0x270f
 3482 0b32 00       		.byte	0
 3483 0b33 24       		.uleb128 0x24
 3484 0b34 6F050000 		.4byte	.LASF150
 3485 0b38 0C       		.byte	0xc
 3486 0b39 18       		.byte	0x18
 3487 0b3a 220B0000 		.4byte	0xb22
 3488 0b3e 05       		.uleb128 0x5
 3489 0b3f 03       		.byte	0x3
 3490 0b40 00000000 		.4byte	http_request
 3491 0b44 24       		.uleb128 0x24
 3492 0b45 CD070000 		.4byte	.LASF151
 3493 0b49 0C       		.byte	0xc
 3494 0b4a 19       		.byte	0x19
 3495 0b4b 220B0000 		.4byte	0xb22
 3496 0b4f 05       		.uleb128 0x5
 3497 0b50 03       		.byte	0x3
 3498 0b51 00000000 		.4byte	http_body
 3499 0b55 24       		.uleb128 0x24
 3500 0b56 0C070000 		.4byte	.LASF152
 3501 0b5a 0C       		.byte	0xc
 3502 0b5b 1A       		.byte	0x1a
 3503 0b5c 9D080000 		.4byte	0x89d
 3504 0b60 05       		.uleb128 0x5
 3505 0b61 03       		.byte	0x3
 3506 0b62 00000000 		.4byte	http_route
 3507 0b66 24       		.uleb128 0x24
 3508 0b67 4D060000 		.4byte	.LASF153
 3509 0b6b 0C       		.byte	0xc
 3510 0b6c 41       		.byte	0x41
 3511 0b6d EF040000 		.4byte	0x4ef
 3512 0b71 05       		.uleb128 0x5
 3513 0b72 03       		.byte	0x3
 3514 0b73 00000000 		.4byte	system_info
 3515 0b77 24       		.uleb128 0x24
 3516 0b78 ED050000 		.4byte	.LASF154
 3517 0b7c 0C       		.byte	0xc
 3518 0b7d 53       		.byte	0x53
 3519 0b7e 2B050000 		.4byte	0x52b
 3520 0b82 05       		.uleb128 0x5
 3521 0b83 03       		.byte	0x3
 3522 0b84 00000000 		.4byte	system_settings
 3523 0b88 24       		.uleb128 0x24
 3524 0b89 3B010000 		.4byte	.LASF155
 3525 0b8d 0C       		.byte	0xc
 3526 0b8e 6F       		.byte	0x6f
 3527 0b8f B8040000 		.4byte	0x4b8
 3528 0b93 05       		.uleb128 0x5
 3529 0b94 03       		.byte	0x3
 3530 0b95 00000000 		.4byte	alarmMeasure
 3531 0b99 24       		.uleb128 0x24
 3532 0b9a 7F010000 		.4byte	.LASF156
 3533 0b9e 0C       		.byte	0xc
 3534 0b9f 70       		.byte	0x70
 3535 0ba0 81000000 		.4byte	0x81
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 78


 3536 0ba4 05       		.uleb128 0x5
 3537 0ba5 03       		.byte	0x3
 3538 0ba6 00000000 		.4byte	timeToMeasure
 3539 0baa 24       		.uleb128 0x24
 3540 0bab EA020000 		.4byte	.LASF157
 3541 0baf 0C       		.byte	0xc
 3542 0bb0 71       		.byte	0x71
 3543 0bb1 B8040000 		.4byte	0x4b8
 3544 0bb5 05       		.uleb128 0x5
 3545 0bb6 03       		.byte	0x3
 3546 0bb7 00000000 		.4byte	alarmSync
 3547 0bbb 24       		.uleb128 0x24
 3548 0bbc A5010000 		.4byte	.LASF158
 3549 0bc0 0C       		.byte	0xc
 3550 0bc1 72       		.byte	0x72
 3551 0bc2 81000000 		.4byte	0x81
 3552 0bc6 05       		.uleb128 0x5
 3553 0bc7 03       		.byte	0x3
 3554 0bc8 00000000 		.4byte	timeToSync
 3555 0bcc 24       		.uleb128 0x24
 3556 0bcd C6040000 		.4byte	.LASF159
 3557 0bd1 0C       		.byte	0xc
 3558 0bd2 73       		.byte	0x73
 3559 0bd3 81000000 		.4byte	0x81
 3560 0bd7 05       		.uleb128 0x5
 3561 0bd8 03       		.byte	0x3
 3562 0bd9 00000000 		.4byte	timeToSycnRemoteParams
 3563 0bdd 25       		.uleb128 0x25
 3564 0bde 68657900 		.ascii	"hey\000"
 3565 0be2 0C       		.byte	0xc
 3566 0be3 74       		.byte	0x74
 3567 0be4 81000000 		.4byte	0x81
 3568 0be8 05       		.uleb128 0x5
 3569 0be9 03       		.byte	0x3
 3570 0bea 00000000 		.4byte	hey
 3571 0bee 07       		.uleb128 0x7
 3572 0bef D7000000 		.4byte	0xd7
 3573 0bf3 FE0B0000 		.4byte	0xbfe
 3574 0bf7 08       		.uleb128 0x8
 3575 0bf8 E5000000 		.4byte	0xe5
 3576 0bfc 1D       		.byte	0x1d
 3577 0bfd 00       		.byte	0
 3578 0bfe 24       		.uleb128 0x24
 3579 0bff A7050000 		.4byte	.LASF160
 3580 0c03 01       		.byte	0x1
 3581 0c04 1D       		.byte	0x1d
 3582 0c05 EE0B0000 		.4byte	0xbee
 3583 0c09 05       		.uleb128 0x5
 3584 0c0a 03       		.byte	0x3
 3585 0c0b 00000000 		.4byte	Data_fileName
 3586 0c0f 24       		.uleb128 0x24
 3587 0c10 6E030000 		.4byte	.LASF93
 3588 0c14 01       		.byte	0x1
 3589 0c15 1E       		.byte	0x1e
 3590 0c16 81000000 		.4byte	0x81
 3591 0c1a 05       		.uleb128 0x5
 3592 0c1b 03       		.byte	0x3
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 79


 3593 0c1c 00000000 		.4byte	try_counter
 3594 0c20 00       		.byte	0
 3595              		.section	.debug_abbrev,"",%progbits
 3596              	.Ldebug_abbrev0:
 3597 0000 01       		.uleb128 0x1
 3598 0001 11       		.uleb128 0x11
 3599 0002 01       		.byte	0x1
 3600 0003 25       		.uleb128 0x25
 3601 0004 0E       		.uleb128 0xe
 3602 0005 13       		.uleb128 0x13
 3603 0006 0B       		.uleb128 0xb
 3604 0007 03       		.uleb128 0x3
 3605 0008 0E       		.uleb128 0xe
 3606 0009 1B       		.uleb128 0x1b
 3607 000a 0E       		.uleb128 0xe
 3608 000b 55       		.uleb128 0x55
 3609 000c 17       		.uleb128 0x17
 3610 000d 11       		.uleb128 0x11
 3611 000e 01       		.uleb128 0x1
 3612 000f 10       		.uleb128 0x10
 3613 0010 17       		.uleb128 0x17
 3614 0011 00       		.byte	0
 3615 0012 00       		.byte	0
 3616 0013 02       		.uleb128 0x2
 3617 0014 24       		.uleb128 0x24
 3618 0015 00       		.byte	0
 3619 0016 0B       		.uleb128 0xb
 3620 0017 0B       		.uleb128 0xb
 3621 0018 3E       		.uleb128 0x3e
 3622 0019 0B       		.uleb128 0xb
 3623 001a 03       		.uleb128 0x3
 3624 001b 0E       		.uleb128 0xe
 3625 001c 00       		.byte	0
 3626 001d 00       		.byte	0
 3627 001e 03       		.uleb128 0x3
 3628 001f 16       		.uleb128 0x16
 3629 0020 00       		.byte	0
 3630 0021 03       		.uleb128 0x3
 3631 0022 0E       		.uleb128 0xe
 3632 0023 3A       		.uleb128 0x3a
 3633 0024 0B       		.uleb128 0xb
 3634 0025 3B       		.uleb128 0x3b
 3635 0026 0B       		.uleb128 0xb
 3636 0027 49       		.uleb128 0x49
 3637 0028 13       		.uleb128 0x13
 3638 0029 00       		.byte	0
 3639 002a 00       		.byte	0
 3640 002b 04       		.uleb128 0x4
 3641 002c 24       		.uleb128 0x24
 3642 002d 00       		.byte	0
 3643 002e 0B       		.uleb128 0xb
 3644 002f 0B       		.uleb128 0xb
 3645 0030 3E       		.uleb128 0x3e
 3646 0031 0B       		.uleb128 0xb
 3647 0032 03       		.uleb128 0x3
 3648 0033 08       		.uleb128 0x8
 3649 0034 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 80


 3650 0035 00       		.byte	0
 3651 0036 05       		.uleb128 0x5
 3652 0037 16       		.uleb128 0x16
 3653 0038 00       		.byte	0
 3654 0039 03       		.uleb128 0x3
 3655 003a 0E       		.uleb128 0xe
 3656 003b 3A       		.uleb128 0x3a
 3657 003c 0B       		.uleb128 0xb
 3658 003d 3B       		.uleb128 0x3b
 3659 003e 05       		.uleb128 0x5
 3660 003f 49       		.uleb128 0x49
 3661 0040 13       		.uleb128 0x13
 3662 0041 00       		.byte	0
 3663 0042 00       		.byte	0
 3664 0043 06       		.uleb128 0x6
 3665 0044 0F       		.uleb128 0xf
 3666 0045 00       		.byte	0
 3667 0046 0B       		.uleb128 0xb
 3668 0047 0B       		.uleb128 0xb
 3669 0048 49       		.uleb128 0x49
 3670 0049 13       		.uleb128 0x13
 3671 004a 00       		.byte	0
 3672 004b 00       		.byte	0
 3673 004c 07       		.uleb128 0x7
 3674 004d 01       		.uleb128 0x1
 3675 004e 01       		.byte	0x1
 3676 004f 49       		.uleb128 0x49
 3677 0050 13       		.uleb128 0x13
 3678 0051 01       		.uleb128 0x1
 3679 0052 13       		.uleb128 0x13
 3680 0053 00       		.byte	0
 3681 0054 00       		.byte	0
 3682 0055 08       		.uleb128 0x8
 3683 0056 21       		.uleb128 0x21
 3684 0057 00       		.byte	0
 3685 0058 49       		.uleb128 0x49
 3686 0059 13       		.uleb128 0x13
 3687 005a 2F       		.uleb128 0x2f
 3688 005b 0B       		.uleb128 0xb
 3689 005c 00       		.byte	0
 3690 005d 00       		.byte	0
 3691 005e 09       		.uleb128 0x9
 3692 005f 13       		.uleb128 0x13
 3693 0060 01       		.byte	0x1
 3694 0061 0B       		.uleb128 0xb
 3695 0062 0B       		.uleb128 0xb
 3696 0063 3A       		.uleb128 0x3a
 3697 0064 0B       		.uleb128 0xb
 3698 0065 3B       		.uleb128 0x3b
 3699 0066 0B       		.uleb128 0xb
 3700 0067 01       		.uleb128 0x1
 3701 0068 13       		.uleb128 0x13
 3702 0069 00       		.byte	0
 3703 006a 00       		.byte	0
 3704 006b 0A       		.uleb128 0xa
 3705 006c 0D       		.uleb128 0xd
 3706 006d 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 81


 3707 006e 03       		.uleb128 0x3
 3708 006f 08       		.uleb128 0x8
 3709 0070 3A       		.uleb128 0x3a
 3710 0071 0B       		.uleb128 0xb
 3711 0072 3B       		.uleb128 0x3b
 3712 0073 0B       		.uleb128 0xb
 3713 0074 49       		.uleb128 0x49
 3714 0075 13       		.uleb128 0x13
 3715 0076 38       		.uleb128 0x38
 3716 0077 0B       		.uleb128 0xb
 3717 0078 00       		.byte	0
 3718 0079 00       		.byte	0
 3719 007a 0B       		.uleb128 0xb
 3720 007b 0D       		.uleb128 0xd
 3721 007c 00       		.byte	0
 3722 007d 03       		.uleb128 0x3
 3723 007e 0E       		.uleb128 0xe
 3724 007f 3A       		.uleb128 0x3a
 3725 0080 0B       		.uleb128 0xb
 3726 0081 3B       		.uleb128 0x3b
 3727 0082 0B       		.uleb128 0xb
 3728 0083 49       		.uleb128 0x49
 3729 0084 13       		.uleb128 0x13
 3730 0085 38       		.uleb128 0x38
 3731 0086 0B       		.uleb128 0xb
 3732 0087 00       		.byte	0
 3733 0088 00       		.byte	0
 3734 0089 0C       		.uleb128 0xc
 3735 008a 35       		.uleb128 0x35
 3736 008b 00       		.byte	0
 3737 008c 49       		.uleb128 0x49
 3738 008d 13       		.uleb128 0x13
 3739 008e 00       		.byte	0
 3740 008f 00       		.byte	0
 3741 0090 0D       		.uleb128 0xd
 3742 0091 13       		.uleb128 0x13
 3743 0092 01       		.byte	0x1
 3744 0093 0B       		.uleb128 0xb
 3745 0094 05       		.uleb128 0x5
 3746 0095 3A       		.uleb128 0x3a
 3747 0096 0B       		.uleb128 0xb
 3748 0097 3B       		.uleb128 0x3b
 3749 0098 0B       		.uleb128 0xb
 3750 0099 01       		.uleb128 0x1
 3751 009a 13       		.uleb128 0x13
 3752 009b 00       		.byte	0
 3753 009c 00       		.byte	0
 3754 009d 0E       		.uleb128 0xe
 3755 009e 13       		.uleb128 0x13
 3756 009f 01       		.byte	0x1
 3757 00a0 03       		.uleb128 0x3
 3758 00a1 08       		.uleb128 0x8
 3759 00a2 0B       		.uleb128 0xb
 3760 00a3 0B       		.uleb128 0xb
 3761 00a4 3A       		.uleb128 0x3a
 3762 00a5 0B       		.uleb128 0xb
 3763 00a6 3B       		.uleb128 0x3b
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 82


 3764 00a7 0B       		.uleb128 0xb
 3765 00a8 01       		.uleb128 0x1
 3766 00a9 13       		.uleb128 0x13
 3767 00aa 00       		.byte	0
 3768 00ab 00       		.byte	0
 3769 00ac 0F       		.uleb128 0xf
 3770 00ad 2E       		.uleb128 0x2e
 3771 00ae 00       		.byte	0
 3772 00af 3F       		.uleb128 0x3f
 3773 00b0 19       		.uleb128 0x19
 3774 00b1 03       		.uleb128 0x3
 3775 00b2 0E       		.uleb128 0xe
 3776 00b3 3A       		.uleb128 0x3a
 3777 00b4 0B       		.uleb128 0xb
 3778 00b5 3B       		.uleb128 0x3b
 3779 00b6 0B       		.uleb128 0xb
 3780 00b7 27       		.uleb128 0x27
 3781 00b8 19       		.uleb128 0x19
 3782 00b9 11       		.uleb128 0x11
 3783 00ba 01       		.uleb128 0x1
 3784 00bb 12       		.uleb128 0x12
 3785 00bc 06       		.uleb128 0x6
 3786 00bd 40       		.uleb128 0x40
 3787 00be 18       		.uleb128 0x18
 3788 00bf 9642     		.uleb128 0x2116
 3789 00c1 19       		.uleb128 0x19
 3790 00c2 00       		.byte	0
 3791 00c3 00       		.byte	0
 3792 00c4 10       		.uleb128 0x10
 3793 00c5 2E       		.uleb128 0x2e
 3794 00c6 01       		.byte	0x1
 3795 00c7 3F       		.uleb128 0x3f
 3796 00c8 19       		.uleb128 0x19
 3797 00c9 03       		.uleb128 0x3
 3798 00ca 0E       		.uleb128 0xe
 3799 00cb 3A       		.uleb128 0x3a
 3800 00cc 0B       		.uleb128 0xb
 3801 00cd 3B       		.uleb128 0x3b
 3802 00ce 0B       		.uleb128 0xb
 3803 00cf 11       		.uleb128 0x11
 3804 00d0 01       		.uleb128 0x1
 3805 00d1 12       		.uleb128 0x12
 3806 00d2 06       		.uleb128 0x6
 3807 00d3 40       		.uleb128 0x40
 3808 00d4 18       		.uleb128 0x18
 3809 00d5 9642     		.uleb128 0x2116
 3810 00d7 19       		.uleb128 0x19
 3811 00d8 01       		.uleb128 0x1
 3812 00d9 13       		.uleb128 0x13
 3813 00da 00       		.byte	0
 3814 00db 00       		.byte	0
 3815 00dc 11       		.uleb128 0x11
 3816 00dd 34       		.uleb128 0x34
 3817 00de 00       		.byte	0
 3818 00df 03       		.uleb128 0x3
 3819 00e0 0E       		.uleb128 0xe
 3820 00e1 3A       		.uleb128 0x3a
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 83


 3821 00e2 0B       		.uleb128 0xb
 3822 00e3 3B       		.uleb128 0x3b
 3823 00e4 0B       		.uleb128 0xb
 3824 00e5 49       		.uleb128 0x49
 3825 00e6 13       		.uleb128 0x13
 3826 00e7 02       		.uleb128 0x2
 3827 00e8 18       		.uleb128 0x18
 3828 00e9 00       		.byte	0
 3829 00ea 00       		.byte	0
 3830 00eb 12       		.uleb128 0x12
 3831 00ec 2E       		.uleb128 0x2e
 3832 00ed 01       		.byte	0x1
 3833 00ee 3F       		.uleb128 0x3f
 3834 00ef 19       		.uleb128 0x19
 3835 00f0 03       		.uleb128 0x3
 3836 00f1 0E       		.uleb128 0xe
 3837 00f2 3A       		.uleb128 0x3a
 3838 00f3 0B       		.uleb128 0xb
 3839 00f4 3B       		.uleb128 0x3b
 3840 00f5 0B       		.uleb128 0xb
 3841 00f6 49       		.uleb128 0x49
 3842 00f7 13       		.uleb128 0x13
 3843 00f8 11       		.uleb128 0x11
 3844 00f9 01       		.uleb128 0x1
 3845 00fa 12       		.uleb128 0x12
 3846 00fb 06       		.uleb128 0x6
 3847 00fc 40       		.uleb128 0x40
 3848 00fd 18       		.uleb128 0x18
 3849 00fe 9642     		.uleb128 0x2116
 3850 0100 19       		.uleb128 0x19
 3851 0101 01       		.uleb128 0x1
 3852 0102 13       		.uleb128 0x13
 3853 0103 00       		.byte	0
 3854 0104 00       		.byte	0
 3855 0105 13       		.uleb128 0x13
 3856 0106 2E       		.uleb128 0x2e
 3857 0107 00       		.byte	0
 3858 0108 3F       		.uleb128 0x3f
 3859 0109 19       		.uleb128 0x19
 3860 010a 03       		.uleb128 0x3
 3861 010b 0E       		.uleb128 0xe
 3862 010c 3A       		.uleb128 0x3a
 3863 010d 0B       		.uleb128 0xb
 3864 010e 3B       		.uleb128 0x3b
 3865 010f 0B       		.uleb128 0xb
 3866 0110 11       		.uleb128 0x11
 3867 0111 01       		.uleb128 0x1
 3868 0112 12       		.uleb128 0x12
 3869 0113 06       		.uleb128 0x6
 3870 0114 40       		.uleb128 0x40
 3871 0115 18       		.uleb128 0x18
 3872 0116 9642     		.uleb128 0x2116
 3873 0118 19       		.uleb128 0x19
 3874 0119 00       		.byte	0
 3875 011a 00       		.byte	0
 3876 011b 14       		.uleb128 0x14
 3877 011c 2E       		.uleb128 0x2e
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 84


 3878 011d 01       		.byte	0x1
 3879 011e 3F       		.uleb128 0x3f
 3880 011f 19       		.uleb128 0x19
 3881 0120 03       		.uleb128 0x3
 3882 0121 0E       		.uleb128 0xe
 3883 0122 3A       		.uleb128 0x3a
 3884 0123 0B       		.uleb128 0xb
 3885 0124 3B       		.uleb128 0x3b
 3886 0125 0B       		.uleb128 0xb
 3887 0126 27       		.uleb128 0x27
 3888 0127 19       		.uleb128 0x19
 3889 0128 11       		.uleb128 0x11
 3890 0129 01       		.uleb128 0x1
 3891 012a 12       		.uleb128 0x12
 3892 012b 06       		.uleb128 0x6
 3893 012c 40       		.uleb128 0x40
 3894 012d 18       		.uleb128 0x18
 3895 012e 9642     		.uleb128 0x2116
 3896 0130 19       		.uleb128 0x19
 3897 0131 01       		.uleb128 0x1
 3898 0132 13       		.uleb128 0x13
 3899 0133 00       		.byte	0
 3900 0134 00       		.byte	0
 3901 0135 15       		.uleb128 0x15
 3902 0136 05       		.uleb128 0x5
 3903 0137 00       		.byte	0
 3904 0138 03       		.uleb128 0x3
 3905 0139 0E       		.uleb128 0xe
 3906 013a 3A       		.uleb128 0x3a
 3907 013b 0B       		.uleb128 0xb
 3908 013c 3B       		.uleb128 0x3b
 3909 013d 0B       		.uleb128 0xb
 3910 013e 49       		.uleb128 0x49
 3911 013f 13       		.uleb128 0x13
 3912 0140 02       		.uleb128 0x2
 3913 0141 18       		.uleb128 0x18
 3914 0142 00       		.byte	0
 3915 0143 00       		.byte	0
 3916 0144 16       		.uleb128 0x16
 3917 0145 2E       		.uleb128 0x2e
 3918 0146 01       		.byte	0x1
 3919 0147 3F       		.uleb128 0x3f
 3920 0148 19       		.uleb128 0x19
 3921 0149 03       		.uleb128 0x3
 3922 014a 0E       		.uleb128 0xe
 3923 014b 3A       		.uleb128 0x3a
 3924 014c 0B       		.uleb128 0xb
 3925 014d 3B       		.uleb128 0x3b
 3926 014e 0B       		.uleb128 0xb
 3927 014f 27       		.uleb128 0x27
 3928 0150 19       		.uleb128 0x19
 3929 0151 49       		.uleb128 0x49
 3930 0152 13       		.uleb128 0x13
 3931 0153 11       		.uleb128 0x11
 3932 0154 01       		.uleb128 0x1
 3933 0155 12       		.uleb128 0x12
 3934 0156 06       		.uleb128 0x6
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 85


 3935 0157 40       		.uleb128 0x40
 3936 0158 18       		.uleb128 0x18
 3937 0159 9642     		.uleb128 0x2116
 3938 015b 19       		.uleb128 0x19
 3939 015c 01       		.uleb128 0x1
 3940 015d 13       		.uleb128 0x13
 3941 015e 00       		.byte	0
 3942 015f 00       		.byte	0
 3943 0160 17       		.uleb128 0x17
 3944 0161 2E       		.uleb128 0x2e
 3945 0162 01       		.byte	0x1
 3946 0163 3F       		.uleb128 0x3f
 3947 0164 19       		.uleb128 0x19
 3948 0165 03       		.uleb128 0x3
 3949 0166 0E       		.uleb128 0xe
 3950 0167 3A       		.uleb128 0x3a
 3951 0168 0B       		.uleb128 0xb
 3952 0169 3B       		.uleb128 0x3b
 3953 016a 0B       		.uleb128 0xb
 3954 016b 27       		.uleb128 0x27
 3955 016c 19       		.uleb128 0x19
 3956 016d 11       		.uleb128 0x11
 3957 016e 01       		.uleb128 0x1
 3958 016f 12       		.uleb128 0x12
 3959 0170 06       		.uleb128 0x6
 3960 0171 40       		.uleb128 0x40
 3961 0172 18       		.uleb128 0x18
 3962 0173 9742     		.uleb128 0x2117
 3963 0175 19       		.uleb128 0x19
 3964 0176 01       		.uleb128 0x1
 3965 0177 13       		.uleb128 0x13
 3966 0178 00       		.byte	0
 3967 0179 00       		.byte	0
 3968 017a 18       		.uleb128 0x18
 3969 017b 2E       		.uleb128 0x2e
 3970 017c 01       		.byte	0x1
 3971 017d 3F       		.uleb128 0x3f
 3972 017e 19       		.uleb128 0x19
 3973 017f 03       		.uleb128 0x3
 3974 0180 0E       		.uleb128 0xe
 3975 0181 3A       		.uleb128 0x3a
 3976 0182 0B       		.uleb128 0xb
 3977 0183 3B       		.uleb128 0x3b
 3978 0184 0B       		.uleb128 0xb
 3979 0185 27       		.uleb128 0x27
 3980 0186 19       		.uleb128 0x19
 3981 0187 49       		.uleb128 0x49
 3982 0188 13       		.uleb128 0x13
 3983 0189 11       		.uleb128 0x11
 3984 018a 01       		.uleb128 0x1
 3985 018b 12       		.uleb128 0x12
 3986 018c 06       		.uleb128 0x6
 3987 018d 40       		.uleb128 0x40
 3988 018e 18       		.uleb128 0x18
 3989 018f 9742     		.uleb128 0x2117
 3990 0191 19       		.uleb128 0x19
 3991 0192 01       		.uleb128 0x1
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 86


 3992 0193 13       		.uleb128 0x13
 3993 0194 00       		.byte	0
 3994 0195 00       		.byte	0
 3995 0196 19       		.uleb128 0x19
 3996 0197 2E       		.uleb128 0x2e
 3997 0198 01       		.byte	0x1
 3998 0199 3F       		.uleb128 0x3f
 3999 019a 19       		.uleb128 0x19
 4000 019b 03       		.uleb128 0x3
 4001 019c 0E       		.uleb128 0xe
 4002 019d 3A       		.uleb128 0x3a
 4003 019e 0B       		.uleb128 0xb
 4004 019f 3B       		.uleb128 0x3b
 4005 01a0 05       		.uleb128 0x5
 4006 01a1 11       		.uleb128 0x11
 4007 01a2 01       		.uleb128 0x1
 4008 01a3 12       		.uleb128 0x12
 4009 01a4 06       		.uleb128 0x6
 4010 01a5 40       		.uleb128 0x40
 4011 01a6 18       		.uleb128 0x18
 4012 01a7 9642     		.uleb128 0x2116
 4013 01a9 19       		.uleb128 0x19
 4014 01aa 01       		.uleb128 0x1
 4015 01ab 13       		.uleb128 0x13
 4016 01ac 00       		.byte	0
 4017 01ad 00       		.byte	0
 4018 01ae 1A       		.uleb128 0x1a
 4019 01af 34       		.uleb128 0x34
 4020 01b0 00       		.byte	0
 4021 01b1 03       		.uleb128 0x3
 4022 01b2 0E       		.uleb128 0xe
 4023 01b3 3A       		.uleb128 0x3a
 4024 01b4 0B       		.uleb128 0xb
 4025 01b5 3B       		.uleb128 0x3b
 4026 01b6 05       		.uleb128 0x5
 4027 01b7 49       		.uleb128 0x49
 4028 01b8 13       		.uleb128 0x13
 4029 01b9 02       		.uleb128 0x2
 4030 01ba 18       		.uleb128 0x18
 4031 01bb 00       		.byte	0
 4032 01bc 00       		.byte	0
 4033 01bd 1B       		.uleb128 0x1b
 4034 01be 2E       		.uleb128 0x2e
 4035 01bf 00       		.byte	0
 4036 01c0 3F       		.uleb128 0x3f
 4037 01c1 19       		.uleb128 0x19
 4038 01c2 03       		.uleb128 0x3
 4039 01c3 0E       		.uleb128 0xe
 4040 01c4 3A       		.uleb128 0x3a
 4041 01c5 0B       		.uleb128 0xb
 4042 01c6 3B       		.uleb128 0x3b
 4043 01c7 05       		.uleb128 0x5
 4044 01c8 27       		.uleb128 0x27
 4045 01c9 19       		.uleb128 0x19
 4046 01ca 49       		.uleb128 0x49
 4047 01cb 13       		.uleb128 0x13
 4048 01cc 11       		.uleb128 0x11
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 87


 4049 01cd 01       		.uleb128 0x1
 4050 01ce 12       		.uleb128 0x12
 4051 01cf 06       		.uleb128 0x6
 4052 01d0 40       		.uleb128 0x40
 4053 01d1 18       		.uleb128 0x18
 4054 01d2 9642     		.uleb128 0x2116
 4055 01d4 19       		.uleb128 0x19
 4056 01d5 00       		.byte	0
 4057 01d6 00       		.byte	0
 4058 01d7 1C       		.uleb128 0x1c
 4059 01d8 2E       		.uleb128 0x2e
 4060 01d9 01       		.byte	0x1
 4061 01da 3F       		.uleb128 0x3f
 4062 01db 19       		.uleb128 0x19
 4063 01dc 03       		.uleb128 0x3
 4064 01dd 0E       		.uleb128 0xe
 4065 01de 3A       		.uleb128 0x3a
 4066 01df 0B       		.uleb128 0xb
 4067 01e0 3B       		.uleb128 0x3b
 4068 01e1 05       		.uleb128 0x5
 4069 01e2 49       		.uleb128 0x49
 4070 01e3 13       		.uleb128 0x13
 4071 01e4 11       		.uleb128 0x11
 4072 01e5 01       		.uleb128 0x1
 4073 01e6 12       		.uleb128 0x12
 4074 01e7 06       		.uleb128 0x6
 4075 01e8 40       		.uleb128 0x40
 4076 01e9 18       		.uleb128 0x18
 4077 01ea 9642     		.uleb128 0x2116
 4078 01ec 19       		.uleb128 0x19
 4079 01ed 01       		.uleb128 0x1
 4080 01ee 13       		.uleb128 0x13
 4081 01ef 00       		.byte	0
 4082 01f0 00       		.byte	0
 4083 01f1 1D       		.uleb128 0x1d
 4084 01f2 0B       		.uleb128 0xb
 4085 01f3 01       		.byte	0x1
 4086 01f4 11       		.uleb128 0x11
 4087 01f5 01       		.uleb128 0x1
 4088 01f6 12       		.uleb128 0x12
 4089 01f7 06       		.uleb128 0x6
 4090 01f8 00       		.byte	0
 4091 01f9 00       		.byte	0
 4092 01fa 1E       		.uleb128 0x1e
 4093 01fb 0B       		.uleb128 0xb
 4094 01fc 01       		.byte	0x1
 4095 01fd 11       		.uleb128 0x11
 4096 01fe 01       		.uleb128 0x1
 4097 01ff 12       		.uleb128 0x12
 4098 0200 06       		.uleb128 0x6
 4099 0201 01       		.uleb128 0x1
 4100 0202 13       		.uleb128 0x13
 4101 0203 00       		.byte	0
 4102 0204 00       		.byte	0
 4103 0205 1F       		.uleb128 0x1f
 4104 0206 21       		.uleb128 0x21
 4105 0207 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 88


 4106 0208 49       		.uleb128 0x49
 4107 0209 13       		.uleb128 0x13
 4108 020a 2F       		.uleb128 0x2f
 4109 020b 05       		.uleb128 0x5
 4110 020c 00       		.byte	0
 4111 020d 00       		.byte	0
 4112 020e 20       		.uleb128 0x20
 4113 020f 2E       		.uleb128 0x2e
 4114 0210 01       		.byte	0x1
 4115 0211 3F       		.uleb128 0x3f
 4116 0212 19       		.uleb128 0x19
 4117 0213 03       		.uleb128 0x3
 4118 0214 0E       		.uleb128 0xe
 4119 0215 3A       		.uleb128 0x3a
 4120 0216 0B       		.uleb128 0xb
 4121 0217 3B       		.uleb128 0x3b
 4122 0218 05       		.uleb128 0x5
 4123 0219 27       		.uleb128 0x27
 4124 021a 19       		.uleb128 0x19
 4125 021b 49       		.uleb128 0x49
 4126 021c 13       		.uleb128 0x13
 4127 021d 11       		.uleb128 0x11
 4128 021e 01       		.uleb128 0x1
 4129 021f 12       		.uleb128 0x12
 4130 0220 06       		.uleb128 0x6
 4131 0221 40       		.uleb128 0x40
 4132 0222 18       		.uleb128 0x18
 4133 0223 9642     		.uleb128 0x2116
 4134 0225 19       		.uleb128 0x19
 4135 0226 01       		.uleb128 0x1
 4136 0227 13       		.uleb128 0x13
 4137 0228 00       		.byte	0
 4138 0229 00       		.byte	0
 4139 022a 21       		.uleb128 0x21
 4140 022b 05       		.uleb128 0x5
 4141 022c 00       		.byte	0
 4142 022d 03       		.uleb128 0x3
 4143 022e 0E       		.uleb128 0xe
 4144 022f 3A       		.uleb128 0x3a
 4145 0230 0B       		.uleb128 0xb
 4146 0231 3B       		.uleb128 0x3b
 4147 0232 05       		.uleb128 0x5
 4148 0233 49       		.uleb128 0x49
 4149 0234 13       		.uleb128 0x13
 4150 0235 02       		.uleb128 0x2
 4151 0236 18       		.uleb128 0x18
 4152 0237 00       		.byte	0
 4153 0238 00       		.byte	0
 4154 0239 22       		.uleb128 0x22
 4155 023a 34       		.uleb128 0x34
 4156 023b 00       		.byte	0
 4157 023c 03       		.uleb128 0x3
 4158 023d 08       		.uleb128 0x8
 4159 023e 3A       		.uleb128 0x3a
 4160 023f 0B       		.uleb128 0xb
 4161 0240 3B       		.uleb128 0x3b
 4162 0241 05       		.uleb128 0x5
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 89


 4163 0242 49       		.uleb128 0x49
 4164 0243 13       		.uleb128 0x13
 4165 0244 02       		.uleb128 0x2
 4166 0245 18       		.uleb128 0x18
 4167 0246 00       		.byte	0
 4168 0247 00       		.byte	0
 4169 0248 23       		.uleb128 0x23
 4170 0249 34       		.uleb128 0x34
 4171 024a 00       		.byte	0
 4172 024b 03       		.uleb128 0x3
 4173 024c 0E       		.uleb128 0xe
 4174 024d 3A       		.uleb128 0x3a
 4175 024e 0B       		.uleb128 0xb
 4176 024f 3B       		.uleb128 0x3b
 4177 0250 05       		.uleb128 0x5
 4178 0251 49       		.uleb128 0x49
 4179 0252 13       		.uleb128 0x13
 4180 0253 3F       		.uleb128 0x3f
 4181 0254 19       		.uleb128 0x19
 4182 0255 3C       		.uleb128 0x3c
 4183 0256 19       		.uleb128 0x19
 4184 0257 00       		.byte	0
 4185 0258 00       		.byte	0
 4186 0259 24       		.uleb128 0x24
 4187 025a 34       		.uleb128 0x34
 4188 025b 00       		.byte	0
 4189 025c 03       		.uleb128 0x3
 4190 025d 0E       		.uleb128 0xe
 4191 025e 3A       		.uleb128 0x3a
 4192 025f 0B       		.uleb128 0xb
 4193 0260 3B       		.uleb128 0x3b
 4194 0261 0B       		.uleb128 0xb
 4195 0262 49       		.uleb128 0x49
 4196 0263 13       		.uleb128 0x13
 4197 0264 3F       		.uleb128 0x3f
 4198 0265 19       		.uleb128 0x19
 4199 0266 02       		.uleb128 0x2
 4200 0267 18       		.uleb128 0x18
 4201 0268 00       		.byte	0
 4202 0269 00       		.byte	0
 4203 026a 25       		.uleb128 0x25
 4204 026b 34       		.uleb128 0x34
 4205 026c 00       		.byte	0
 4206 026d 03       		.uleb128 0x3
 4207 026e 08       		.uleb128 0x8
 4208 026f 3A       		.uleb128 0x3a
 4209 0270 0B       		.uleb128 0xb
 4210 0271 3B       		.uleb128 0x3b
 4211 0272 0B       		.uleb128 0xb
 4212 0273 49       		.uleb128 0x49
 4213 0274 13       		.uleb128 0x13
 4214 0275 3F       		.uleb128 0x3f
 4215 0276 19       		.uleb128 0x19
 4216 0277 02       		.uleb128 0x2
 4217 0278 18       		.uleb128 0x18
 4218 0279 00       		.byte	0
 4219 027a 00       		.byte	0
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 90


 4220 027b 00       		.byte	0
 4221              		.section	.debug_aranges,"",%progbits
 4222 0000 8C000000 		.4byte	0x8c
 4223 0004 0200     		.2byte	0x2
 4224 0006 00000000 		.4byte	.Ldebug_info0
 4225 000a 04       		.byte	0x4
 4226 000b 00       		.byte	0
 4227 000c 0000     		.2byte	0
 4228 000e 0000     		.2byte	0
 4229 0010 00000000 		.4byte	.LFB64
 4230 0014 0C000000 		.4byte	.LFE64-.LFB64
 4231 0018 00000000 		.4byte	.LFB65
 4232 001c 2C010000 		.4byte	.LFE65-.LFB65
 4233 0020 00000000 		.4byte	.LFB66
 4234 0024 64000000 		.4byte	.LFE66-.LFB66
 4235 0028 00000000 		.4byte	.LFB67
 4236 002c 2A000000 		.4byte	.LFE67-.LFB67
 4237 0030 00000000 		.4byte	.LFB68
 4238 0034 50000000 		.4byte	.LFE68-.LFB68
 4239 0038 00000000 		.4byte	.LFB69
 4240 003c 48000000 		.4byte	.LFE69-.LFB69
 4241 0040 00000000 		.4byte	.LFB70
 4242 0044 1E000000 		.4byte	.LFE70-.LFB70
 4243 0048 00000000 		.4byte	.LFB71
 4244 004c 46000000 		.4byte	.LFE71-.LFB71
 4245 0050 00000000 		.4byte	.LFB72
 4246 0054 2C010000 		.4byte	.LFE72-.LFB72
 4247 0058 00000000 		.4byte	.LFB73
 4248 005c 1E000000 		.4byte	.LFE73-.LFB73
 4249 0060 00000000 		.4byte	.LFB74
 4250 0064 30040000 		.4byte	.LFE74-.LFB74
 4251 0068 00000000 		.4byte	.LFB75
 4252 006c 44000000 		.4byte	.LFE75-.LFB75
 4253 0070 00000000 		.4byte	.LFB76
 4254 0074 74020000 		.4byte	.LFE76-.LFB76
 4255 0078 00000000 		.4byte	.LFB77
 4256 007c 74000000 		.4byte	.LFE77-.LFB77
 4257 0080 00000000 		.4byte	.LFB78
 4258 0084 38010000 		.4byte	.LFE78-.LFB78
 4259 0088 00000000 		.4byte	0
 4260 008c 00000000 		.4byte	0
 4261              		.section	.debug_ranges,"",%progbits
 4262              	.Ldebug_ranges0:
 4263 0000 00000000 		.4byte	.LFB64
 4264 0004 0C000000 		.4byte	.LFE64
 4265 0008 00000000 		.4byte	.LFB65
 4266 000c 2C010000 		.4byte	.LFE65
 4267 0010 00000000 		.4byte	.LFB66
 4268 0014 64000000 		.4byte	.LFE66
 4269 0018 00000000 		.4byte	.LFB67
 4270 001c 2A000000 		.4byte	.LFE67
 4271 0020 00000000 		.4byte	.LFB68
 4272 0024 50000000 		.4byte	.LFE68
 4273 0028 00000000 		.4byte	.LFB69
 4274 002c 48000000 		.4byte	.LFE69
 4275 0030 00000000 		.4byte	.LFB70
 4276 0034 1E000000 		.4byte	.LFE70
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 91


 4277 0038 00000000 		.4byte	.LFB71
 4278 003c 46000000 		.4byte	.LFE71
 4279 0040 00000000 		.4byte	.LFB72
 4280 0044 2C010000 		.4byte	.LFE72
 4281 0048 00000000 		.4byte	.LFB73
 4282 004c 1E000000 		.4byte	.LFE73
 4283 0050 00000000 		.4byte	.LFB74
 4284 0054 30040000 		.4byte	.LFE74
 4285 0058 00000000 		.4byte	.LFB75
 4286 005c 44000000 		.4byte	.LFE75
 4287 0060 00000000 		.4byte	.LFB76
 4288 0064 74020000 		.4byte	.LFE76
 4289 0068 00000000 		.4byte	.LFB77
 4290 006c 74000000 		.4byte	.LFE77
 4291 0070 00000000 		.4byte	.LFB78
 4292 0074 38010000 		.4byte	.LFE78
 4293 0078 00000000 		.4byte	0
 4294 007c 00000000 		.4byte	0
 4295              		.section	.debug_line,"",%progbits
 4296              	.Ldebug_line0:
 4297 0000 21040000 		.section	.debug_str,"MS",%progbits,1
 4297      02001B02 
 4297      00000201 
 4297      FB0E0D00 
 4297      01010101 
 4298              	.LASF111:
 4299 0000 745F6D6F 		.ascii	"t_modem\000"
 4299      64656D00 
 4300              	.LASF12:
 4301 0008 75696E74 		.ascii	"uint16\000"
 4301      313600
 4302              	.LASF51:
 4303 000f 746D5F68 		.ascii	"tm_hour\000"
 4303      6F757200 
 4304              	.LASF36:
 4305 0017 6E756D5F 		.ascii	"num_invalid_readings\000"
 4305      696E7661 
 4305      6C69645F 
 4305      72656164 
 4305      696E6773 
 4306              	.LASF142:
 4307 002c 62756666 		.ascii	"buffer_overflow\000"
 4307      65725F6F 
 4307      76657266 
 4307      6C6F7700 
 4308              	.LASF140:
 4309 003c 66696C65 		.ascii	"fileName\000"
 4309      4E616D65 
 4309      00
 4310              	.LASF0:
 4311 0045 7369676E 		.ascii	"signed char\000"
 4311      65642063 
 4311      68617200 
 4312              	.LASF83:
 4313 0051 636F756E 		.ascii	"countDownResetCondition\000"
 4313      74446F77 
 4313      6E526573 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 92


 4313      6574436F 
 4313      6E646974 
 4314              	.LASF164:
 4315 0069 57616B65 		.ascii	"Wakeup_ISR\000"
 4315      75705F49 
 4315      535200
 4316              	.LASF161:
 4317 0074 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4317      43313120 
 4317      352E342E 
 4317      31203230 
 4317      31363036 
 4318 00a7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4318      20726576 
 4318      6973696F 
 4318      6E203233 
 4318      37373135 
 4319 00da 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4319      66756E63 
 4319      74696F6E 
 4319      2D736563 
 4319      74696F6E 
 4320              	.LASF109:
 4321 0102 745F7072 		.ascii	"t_pressure\000"
 4321      65737375 
 4321      726500
 4322              	.LASF26:
 4323 010d 4D6F6E74 		.ascii	"Month\000"
 4323      6800
 4324              	.LASF7:
 4325 0113 6C6F6E67 		.ascii	"long long unsigned int\000"
 4325      206C6F6E 
 4325      6720756E 
 4325      7369676E 
 4325      65642069 
 4326              	.LASF22:
 4327 012a 486F7572 		.ascii	"Hour\000"
 4327      00
 4328              	.LASF146:
 4329 012f 6D6F6465 		.ascii	"modem_state\000"
 4329      6D5F7374 
 4329      61746500 
 4330              	.LASF155:
 4331 013b 616C6172 		.ascii	"alarmMeasure\000"
 4331      6D4D6561 
 4331      73757265 
 4331      00
 4332              	.LASF141:
 4333 0148 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4333      52784275 
 4333      66666572 
 4333      00
 4334              	.LASF107:
 4335 0155 745F6C65 		.ascii	"t_level_sensor\000"
 4335      76656C5F 
 4335      73656E73 
 4335      6F7200
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 93


 4336              	.LASF6:
 4337 0164 6C6F6E67 		.ascii	"long long int\000"
 4337      206C6F6E 
 4337      6720696E 
 4337      7400
 4338              	.LASF119:
 4339 0172 7061636B 		.ascii	"packets\000"
 4339      65747300 
 4340              	.LASF67:
 4341 017a 65636E6F 		.ascii	"ecno\000"
 4341      00
 4342              	.LASF156:
 4343 017f 74696D65 		.ascii	"timeToMeasure\000"
 4343      546F4D65 
 4343      61737572 
 4343      6500
 4344              	.LASF70:
 4345 018d 74696D65 		.ascii	"time_to_network_connect\000"
 4345      5F746F5F 
 4345      6E657477 
 4345      6F726B5F 
 4345      636F6E6E 
 4346              	.LASF158:
 4347 01a5 74696D65 		.ascii	"timeToSync\000"
 4347      546F5379 
 4347      6E6300
 4348              	.LASF39:
 4349 01b0 766F6C74 		.ascii	"voltage_solar\000"
 4349      6167655F 
 4349      736F6C61 
 4349      7200
 4350              	.LASF40:
 4351 01be 766F6C74 		.ascii	"voltage_charge_current\000"
 4351      6167655F 
 4351      63686172 
 4351      67655F63 
 4351      75727265 
 4352              	.LASF139:
 4353 01d5 75706772 		.ascii	"upgrade_status\000"
 4353      6164655F 
 4353      73746174 
 4353      757300
 4354              	.LASF122:
 4355 01e4 635F6461 		.ascii	"c_data_count_sent\000"
 4355      74615F63 
 4355      6F756E74 
 4355      5F73656E 
 4355      7400
 4356              	.LASF64:
 4357 01f6 6D6F6465 		.ascii	"modem_info_t\000"
 4357      6D5F696E 
 4357      666F5F74 
 4357      00
 4358              	.LASF65:
 4359 0203 72786C65 		.ascii	"rxlev\000"
 4359      7600
 4360              	.LASF4:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 94


 4361 0209 6C6F6E67 		.ascii	"long int\000"
 4361      20696E74 
 4361      00
 4362              	.LASF71:
 4363 0212 74696D65 		.ascii	"time_to_acquire_ip\000"
 4363      5F746F5F 
 4363      61637175 
 4363      6972655F 
 4363      697000
 4364              	.LASF84:
 4365 0225 616C6172 		.ascii	"alarm\000"
 4365      6D00
 4366              	.LASF45:
 4367 022b 70726573 		.ascii	"pressure_voltage_off\000"
 4367      73757265 
 4367      5F766F6C 
 4367      74616765 
 4367      5F6F6666 
 4368              	.LASF11:
 4369 0240 75696E74 		.ascii	"uint8\000"
 4369      3800
 4370              	.LASF114:
 4371 0246 635F7472 		.ascii	"c_try_counter\000"
 4371      795F636F 
 4371      756E7465 
 4371      7200
 4372              	.LASF125:
 4373 0254 73656E64 		.ascii	"send_time\000"
 4373      5F74696D 
 4373      6500
 4374              	.LASF16:
 4375 025e 696E7433 		.ascii	"int32\000"
 4375      3200
 4376              	.LASF73:
 4377 0264 6E6F6465 		.ascii	"node_type\000"
 4377      5F747970 
 4377      6500
 4378              	.LASF112:
 4379 026e 73796E63 		.ascii	"syncData\000"
 4379      44617461 
 4379      00
 4380              	.LASF120:
 4381 0277 6E657477 		.ascii	"network_time\000"
 4381      6F726B5F 
 4381      74696D65 
 4381      00
 4382              	.LASF13:
 4383 0284 75696E74 		.ascii	"uint32\000"
 4383      333200
 4384              	.LASF62:
 4385 028b 6D6F6465 		.ascii	"model_id\000"
 4385      6C5F6964 
 4385      00
 4386              	.LASF33:
 4387 0294 616C6C5F 		.ascii	"all_level_readings\000"
 4387      6C657665 
 4387      6C5F7265 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 95


 4387      6164696E 
 4387      677300
 4388              	.LASF80:
 4389 02a7 636F756E 		.ascii	"countDownValue\000"
 4389      74446F77 
 4389      6E56616C 
 4389      756500
 4390              	.LASF135:
 4391 02b6 75706772 		.ascii	"upgraded\000"
 4391      61646564 
 4391      00
 4392              	.LASF53:
 4393 02bf 746D5F6D 		.ascii	"tm_mon\000"
 4393      6F6E00
 4394              	.LASF77:
 4395 02c6 64656275 		.ascii	"debug_level\000"
 4395      675F6C65 
 4395      76656C00 
 4396              	.LASF137:
 4397 02d2 706F7274 		.ascii	"port\000"
 4397      00
 4398              	.LASF58:
 4399 02d7 76616C75 		.ascii	"value\000"
 4399      6500
 4400              	.LASF136:
 4401 02dd 686F7374 		.ascii	"host\000"
 4401      00
 4402              	.LASF54:
 4403 02e2 746D5F79 		.ascii	"tm_year\000"
 4403      65617200 
 4404              	.LASF157:
 4405 02ea 616C6172 		.ascii	"alarmSync\000"
 4405      6D53796E 
 4405      6300
 4406              	.LASF44:
 4407 02f4 70726573 		.ascii	"pressure_voltage_on\000"
 4407      73757265 
 4407      5F766F6C 
 4407      74616765 
 4407      5F6F6E00 
 4408              	.LASF8:
 4409 0308 756E7369 		.ascii	"unsigned int\000"
 4409      676E6564 
 4409      20696E74 
 4409      00
 4410              	.LASF133:
 4411 0315 73657454 		.ascii	"setTime\000"
 4411      696D6500 
 4412              	.LASF60:
 4413 031d 6B65795F 		.ascii	"key_value_t\000"
 4413      76616C75 
 4413      655F7400 
 4414              	.LASF96:
 4415 0329 41796F49 		.ascii	"AyoItsTime\000"
 4415      74735469 
 4415      6D6500
 4416              	.LASF35:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 96


 4417 0334 6E756D5F 		.ascii	"num_valid_readings\000"
 4417      76616C69 
 4417      645F7265 
 4417      6164696E 
 4417      677300
 4418              	.LASF124:
 4419 0347 68747470 		.ascii	"http_chunk\000"
 4419      5F636875 
 4419      6E6B00
 4420              	.LASF130:
 4421 0352 6D5F766F 		.ascii	"m_voltage\000"
 4421      6C746167 
 4421      6500
 4422              	.LASF5:
 4423 035c 6C6F6E67 		.ascii	"long unsigned int\000"
 4423      20756E73 
 4423      69676E65 
 4423      6420696E 
 4423      7400
 4424              	.LASF93:
 4425 036e 7472795F 		.ascii	"try_counter\000"
 4425      636F756E 
 4425      74657200 
 4426              	.LASF115:
 4427 037a 64617461 		.ascii	"data_count_desired\000"
 4427      5F636F75 
 4427      6E745F64 
 4427      65736972 
 4427      656400
 4428              	.LASF38:
 4429 038d 766F6C74 		.ascii	"voltage_battery\000"
 4429      6167655F 
 4429      62617474 
 4429      65727900 
 4430              	.LASF24:
 4431 039d 4461794F 		.ascii	"DayOfMonth\000"
 4431      664D6F6E 
 4431      746800
 4432              	.LASF128:
 4433 03a8 6D616B65 		.ascii	"makeMeasurements\000"
 4433      4D656173 
 4433      7572656D 
 4433      656E7473 
 4433      00
 4434              	.LASF145:
 4435 03b9 64617461 		.ascii	"data\000"
 4435      00
 4436              	.LASF89:
 4437 03be 65705F70 		.ascii	"ep_port\000"
 4437      6F727400 
 4438              	.LASF57:
 4439 03c6 746D5F69 		.ascii	"tm_isdst\000"
 4439      73647374 
 4439      00
 4440              	.LASF85:
 4441 03cf 6D6F6465 		.ascii	"modem_info\000"
 4441      6D5F696E 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 97


 4441      666F00
 4442              	.LASF88:
 4443 03da 65705F68 		.ascii	"ep_host\000"
 4443      6F737400 
 4444              	.LASF14:
 4445 03e2 696E7438 		.ascii	"int8\000"
 4445      00
 4446              	.LASF95:
 4447 03e7 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 4447      576F726B 
 4447      576F726B 
 4447      576F726B 
 4447      576F726B 
 4448              	.LASF116:
 4449 0400 635F6461 		.ascii	"c_data_count_desired\000"
 4449      74615F63 
 4449      6F756E74 
 4449      5F646573 
 4449      69726564 
 4450              	.LASF110:
 4451 0415 745F7364 		.ascii	"t_sd_card\000"
 4451      5F636172 
 4451      6400
 4452              	.LASF2:
 4453 041f 73686F72 		.ascii	"short int\000"
 4453      7420696E 
 4453      7400
 4454              	.LASF147:
 4455 0429 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4455      6D5F7374 
 4455      6172745F 
 4455      74696D65 
 4455      5F737461 
 4456              	.LASF87:
 4457 0440 7379735F 		.ascii	"sys_info_t\000"
 4457      696E666F 
 4457      5F7400
 4458              	.LASF79:
 4459 044b 75706461 		.ascii	"updatable_parameters_t\000"
 4459      7461626C 
 4459      655F7061 
 4459      72616D65 
 4459      74657273 
 4460              	.LASF97:
 4461 0462 616C6172 		.ascii	"alarmType\000"
 4461      6D547970 
 4461      6500
 4462              	.LASF143:
 4463 046c 64617461 		.ascii	"dataPointsInStack\000"
 4463      506F696E 
 4463      7473496E 
 4463      53746163 
 4463      6B00
 4464              	.LASF50:
 4465 047e 746D5F6D 		.ascii	"tm_min\000"
 4465      696E00
 4466              	.LASF138:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 98


 4467 0485 726F7574 		.ascii	"route\000"
 4467      6500
 4468              	.LASF98:
 4469 048b 616C6172 		.ascii	"alarmToBeUpdated\000"
 4469      6D546F42 
 4469      65557064 
 4469      61746564 
 4469      00
 4470              	.LASF21:
 4471 049c 73697A65 		.ascii	"sizetype\000"
 4471      74797065 
 4471      00
 4472              	.LASF56:
 4473 04a5 746D5F79 		.ascii	"tm_yday\000"
 4473      64617900 
 4474              	.LASF90:
 4475 04ad 7379735F 		.ascii	"sys_settings_t\000"
 4475      73657474 
 4475      696E6773 
 4475      5F7400
 4476              	.LASF134:
 4477 04bc 6C6F6361 		.ascii	"localTime\000"
 4477      6C54696D 
 4477      6500
 4478              	.LASF159:
 4479 04c6 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 4479      546F5379 
 4479      636E5265 
 4479      6D6F7465 
 4479      50617261 
 4480              	.LASF59:
 4481 04dd 74696D65 		.ascii	"timeStamp\000"
 4481      5374616D 
 4481      7000
 4482              	.LASF163:
 4483 04e7 433A5C55 		.ascii	"C:\\Users\\dantz\\Documents\\notoriOS\\notoriOS\\no"
 4483      73657273 
 4483      5C64616E 
 4483      747A5C44 
 4483      6F63756D 
 4484 0514 746F7269 		.ascii	"toriOS.cydsn\000"
 4484      4F532E63 
 4484      7964736E 
 4484      00
 4485              	.LASF28:
 4486 0521 5254435F 		.ascii	"RTC_TIME_DATE\000"
 4486      54494D45 
 4486      5F444154 
 4486      4500
 4487              	.LASF149:
 4488 052f 75706461 		.ascii	"updatable_parameters\000"
 4488      7461626C 
 4488      655F7061 
 4488      72616D65 
 4488      74657273 
 4489              	.LASF102:
 4490 0544 43726561 		.ascii	"CreateAlarm\000"
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 99


 4490      7465416C 
 4490      61726D00 
 4491              	.LASF123:
 4492 0550 7061636B 		.ascii	"packet\000"
 4492      657400
 4493              	.LASF113:
 4494 0557 735F7273 		.ascii	"s_rsrp\000"
 4494      727000
 4495              	.LASF41:
 4496 055e 766F6C74 		.ascii	"voltage_pressure\000"
 4496      6167655F 
 4496      70726573 
 4496      73757265 
 4496      00
 4497              	.LASF150:
 4498 056f 68747470 		.ascii	"http_request\000"
 4498      5F726571 
 4498      75657374 
 4498      00
 4499              	.LASF17:
 4500 057c 666C6F61 		.ascii	"float\000"
 4500      7400
 4501              	.LASF37:
 4502 0582 6C657665 		.ascii	"level_sensor_t\000"
 4502      6C5F7365 
 4502      6E736F72 
 4502      5F7400
 4503              	.LASF127:
 4504 0591 636F6E66 		.ascii	"configureRemoteParams\000"
 4504      69677572 
 4504      6552656D 
 4504      6F746550 
 4504      6172616D 
 4505              	.LASF160:
 4506 05a7 44617461 		.ascii	"Data_fileName\000"
 4506      5F66696C 
 4506      654E616D 
 4506      6500
 4507              	.LASF94:
 4508 05b5 6D6F6465 		.ascii	"modem_status\000"
 4508      6D5F7374 
 4508      61747573 
 4508      00
 4509              	.LASF29:
 4510 05c2 74657374 		.ascii	"test_name\000"
 4510      5F6E616D 
 4510      6500
 4511              	.LASF27:
 4512 05cc 59656172 		.ascii	"Year\000"
 4512      00
 4513              	.LASF78:
 4514 05d1 5F426F6F 		.ascii	"_Bool\000"
 4514      6C00
 4515              	.LASF10:
 4516 05d7 696E7433 		.ascii	"int32_t\000"
 4516      325F7400 
 4517              	.LASF1:
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 100


 4518 05df 756E7369 		.ascii	"unsigned char\000"
 4518      676E6564 
 4518      20636861 
 4518      7200
 4519              	.LASF154:
 4520 05ed 73797374 		.ascii	"system_settings\000"
 4520      656D5F73 
 4520      65747469 
 4520      6E677300 
 4521              	.LASF69:
 4522 05fd 72737270 		.ascii	"rsrp\000"
 4522      00
 4523              	.LASF68:
 4524 0602 72737271 		.ascii	"rsrq\000"
 4524      00
 4525              	.LASF99:
 4526 0607 52657365 		.ascii	"ResetAlarm\000"
 4526      74416C61 
 4526      726D00
 4527              	.LASF126:
 4528 0612 735F7365 		.ascii	"s_send_time\000"
 4528      6E645F74 
 4528      696D6500 
 4529              	.LASF76:
 4530 061e 73796E63 		.ascii	"sync_time\000"
 4530      5F74696D 
 4530      6500
 4531              	.LASF47:
 4532 0628 70726573 		.ascii	"pressure_depth\000"
 4532      73757265 
 4532      5F646570 
 4532      746800
 4533              	.LASF66:
 4534 0637 72736370 		.ascii	"rscp\000"
 4534      00
 4535              	.LASF23:
 4536 063c 4461794F 		.ascii	"DayOfWeek\000"
 4536      66576565 
 4536      6B00
 4537              	.LASF32:
 4538 0646 74657374 		.ascii	"test_t\000"
 4538      5F7400
 4539              	.LASF153:
 4540 064d 73797374 		.ascii	"system_info\000"
 4540      656D5F69 
 4540      6E666F00 
 4541              	.LASF63:
 4542 0659 696D6569 		.ascii	"imei\000"
 4542      00
 4543              	.LASF31:
 4544 065e 72656173 		.ascii	"reason\000"
 4544      6F6E00
 4545              	.LASF100:
 4546 0665 616C6172 		.ascii	"alarmToBeReset\000"
 4546      6D546F42 
 4546      65526573 
 4546      657400
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 101


 4547              	.LASF105:
 4548 0674 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 4548      6B697479 
 4548      43686563 
 4548      6B596F75 
 4548      7273656C 
 4549              	.LASF121:
 4550 06a0 64617461 		.ascii	"data_count_sent\000"
 4550      5F636F75 
 4550      6E745F73 
 4550      656E7400 
 4551              	.LASF72:
 4552 06b0 6D6F6465 		.ascii	"modem_stats_t\000"
 4552      6D5F7374 
 4552      6174735F 
 4552      7400
 4553              	.LASF46:
 4554 06be 70726573 		.ascii	"pressure_current\000"
 4554      73757265 
 4554      5F637572 
 4554      72656E74 
 4554      00
 4555              	.LASF42:
 4556 06cf 76616C69 		.ascii	"valid\000"
 4556      6400
 4557              	.LASF55:
 4558 06d5 746D5F77 		.ascii	"tm_wday\000"
 4558      64617900 
 4559              	.LASF20:
 4560 06dd 6C6F6E67 		.ascii	"long double\000"
 4560      20646F75 
 4560      626C6500 
 4561              	.LASF118:
 4562 06e9 6368756E 		.ascii	"chunk\000"
 4562      6B00
 4563              	.LASF129:
 4564 06ef 635F7469 		.ascii	"c_timeStamp\000"
 4564      6D655374 
 4564      616D7000 
 4565              	.LASF19:
 4566 06fb 63686172 		.ascii	"char\000"
 4566      00
 4567              	.LASF148:
 4568 0700 6D6F6465 		.ascii	"modem_stats\000"
 4568      6D5F7374 
 4568      61747300 
 4569              	.LASF152:
 4570 070c 68747470 		.ascii	"http_route\000"
 4570      5F726F75 
 4570      746500
 4571              	.LASF117:
 4572 0717 706F7274 		.ascii	"portConfig\000"
 4572      436F6E66 
 4572      696700
 4573              	.LASF9:
 4574 0722 5F5F696E 		.ascii	"__int32_t\000"
 4574      7433325F 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 102


 4574      7400
 4575              	.LASF91:
 4576 072c 756E6971 		.ascii	"uniqueId\000"
 4576      75654964 
 4576      00
 4577              	.LASF131:
 4578 0735 6D5F6C65 		.ascii	"m_level_sensor\000"
 4578      76656C5F 
 4578      73656E73 
 4578      6F7200
 4579              	.LASF34:
 4580 0744 6C657665 		.ascii	"level_reading\000"
 4580      6C5F7265 
 4580      6164696E 
 4580      6700
 4581              	.LASF165:
 4582 0752 4C617942 		.ascii	"LayBack\000"
 4582      61636B00 
 4583              	.LASF3:
 4584 075a 73686F72 		.ascii	"short unsigned int\000"
 4584      7420756E 
 4584      7369676E 
 4584      65642069 
 4584      6E7400
 4585              	.LASF61:
 4586 076d 73696D5F 		.ascii	"sim_id\000"
 4586      696400
 4587              	.LASF52:
 4588 0774 746D5F6D 		.ascii	"tm_mday\000"
 4588      64617900 
 4589              	.LASF103:
 4590 077c 6E657741 		.ascii	"newAlarm\000"
 4590      6C61726D 
 4590      00
 4591              	.LASF49:
 4592 0785 746D5F73 		.ascii	"tm_sec\000"
 4592      656300
 4593              	.LASF132:
 4594 078c 6D5F7072 		.ascii	"m_pressure\000"
 4594      65737375 
 4594      726500
 4595              	.LASF30:
 4596 0797 73746174 		.ascii	"status\000"
 4596      757300
 4597              	.LASF144:
 4598 079e 64617461 		.ascii	"dataPointsInStackDesired\000"
 4598      506F696E 
 4598      7473496E 
 4598      53746163 
 4598      6B446573 
 4599              	.LASF108:
 4600 07b7 745F766F 		.ascii	"t_voltages\000"
 4600      6C746167 
 4600      657300
 4601              	.LASF162:
 4602 07c2 6E6F746F 		.ascii	"notoriOS.c\000"
 4602      72694F53 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 103


 4602      2E6300
 4603              	.LASF151:
 4604 07cd 68747470 		.ascii	"http_body\000"
 4604      5F626F64 
 4604      7900
 4605              	.LASF15:
 4606 07d7 696E7431 		.ascii	"int16\000"
 4606      3600
 4607              	.LASF106:
 4608 07dd 745F444F 		.ascii	"t_DO_sensor\000"
 4608      5F73656E 
 4608      736F7200 
 4609              	.LASF82:
 4610 07e9 636F756E 		.ascii	"countDownType\000"
 4610      74446F77 
 4610      6E547970 
 4610      6500
 4611              	.LASF81:
 4612 07f7 63757272 		.ascii	"currentCountDownValue\000"
 4612      656E7443 
 4612      6F756E74 
 4612      446F776E 
 4612      56616C75 
 4613              	.LASF74:
 4614 080d 73696D5F 		.ascii	"sim_type\000"
 4614      74797065 
 4614      00
 4615              	.LASF92:
 4616 0816 635F6865 		.ascii	"c_hey\000"
 4616      7900
 4617              	.LASF25:
 4618 081c 4461794F 		.ascii	"DayOfYear\000"
 4618      66596561 
 4618      7200
 4619              	.LASF48:
 4620 0826 70726573 		.ascii	"pressure_t\000"
 4620      73757265 
 4620      5F7400
 4621              	.LASF101:
 4622 0831 416C6172 		.ascii	"AlarmReady\000"
 4622      6D526561 
 4622      647900
 4623              	.LASF104:
 4624 083c 52656164 		.ascii	"ReadyOrNot\000"
 4624      794F724E 
 4624      6F7400
 4625              	.LASF166:
 4626 0847 6D61696E 		.ascii	"main\000"
 4626      00
 4627              	.LASF86:
 4628 084c 63686970 		.ascii	"chip_uniqueId\000"
 4628      5F756E69 
 4628      71756549 
 4628      6400
 4629              	.LASF75:
 4630 085a 6D656173 		.ascii	"measure_time\000"
 4630      7572655F 
ARM GAS  C:\Users\dantz\AppData\Local\Temp\ccSuKYvz.s 			page 104


 4630      74696D65 
 4630      00
 4631              	.LASF18:
 4632 0867 646F7562 		.ascii	"double\000"
 4632      6C6500
 4633              	.LASF43:
 4634 086e 766F6C74 		.ascii	"voltage_t\000"
 4634      6167655F 
 4634      7400
 4635              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
