ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.section	.text.Wakeup_ISR,"ax",%progbits
  44              		.align	2
  45              		.global	Wakeup_ISR
  46              		.thumb
  47              		.thumb_func
  48              		.type	Wakeup_ISR, %function
  49              	Wakeup_ISR:
  50              	.LFB64:
  51              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 2


   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  52              		.loc 1 20 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  62              		.loc 1 22 0
  63 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  64              		.loc 1 23 0
  65 0008 00BF     		nop
  66 000a 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE64:
  69              		.size	Wakeup_ISR, .-Wakeup_ISR
  70              		.global	Data_fileName
  71              		.data
  72              		.align	2
  73              		.type	Data_fileName, %object
  74              		.size	Data_fileName, 30
  75              	Data_fileName:
  76 0000 64617461 		.ascii	"data.txt\000"
  76      2E747874 
  76      00
  77 0009 00000000 		.space	21
  77      00000000 
  77      00000000 
  77      00000000 
  77      00000000 
  78              		.comm	try_counter,1,1
  79              		.section	.rodata
  80              		.align	2
  81              	.LC0:
  82 0000 25582D25 		.ascii	"%X-%X\000"
  82      5800
  83 0006 0000     		.align	2
  84              	.LC1:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 3


  85 0008 6563322D 		.ascii	"ec2-13-59-131-167.us-east-2.compute.amazonaws.com\000"
  85      31332D35 
  85      392D3133 
  85      312D3136 
  85      372E7573 
  86 003a 0000     		.align	2
  87              	.LC2:
  88 003c 256400   		.ascii	"%d\000"
  89 003f 00       		.align	2
  90              	.LC3:
  91 0040 7265626F 		.ascii	"reboot\000"
  91      6F7400
  92              		.section	.text.ReadyOrNot,"ax",%progbits
  93              		.align	2
  94              		.global	ReadyOrNot
  95              		.thumb
  96              		.thumb_func
  97              		.type	ReadyOrNot, %function
  98              	ReadyOrNot:
  99              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
 100              		.loc 1 41 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 32
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 B0B5     		push	{r4, r5, r7, lr}
 105              		.cfi_def_cfa_offset 16
 106              		.cfi_offset 4, -16
 107              		.cfi_offset 5, -12
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 8AB0     		sub	sp, sp, #40
 111              		.cfi_def_cfa_offset 56
 112 0004 02AF     		add	r7, sp, #8
 113              		.cfi_def_cfa 7, 48
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 114              		.loc 1 43 0
 115 0006 3948     		ldr	r0, .L3
 116 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 4


  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 117              		.loc 1 44 0
 118 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 119              		.loc 1 46 0
 120 0010 FF20     		movs	r0, #255
 121 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 122              		.loc 1 47 0
 123 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 124              		.loc 1 48 0
 125 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 126              		.loc 1 52 0
 127 001e FFF7FEFF 		bl	modem_initialize
  53:notoriOS.c    ****     
  54:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 128              		.loc 1 54 0
 129 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  55:notoriOS.c    ****    
  56:notoriOS.c    ****     
  57:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  58:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  59:notoriOS.c    ****     
  60:notoriOS.c    ****     
  61:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  62:notoriOS.c    ****     uint32 uniqueId[2];
  63:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  64:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 130              		.loc 1 64 0
 131 0026 07F11403 		add	r3, r7, #20
 132 002a 1846     		mov	r0, r3
 133 002c FFF7FEFF 		bl	CyGetUniqueId
  65:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 134              		.loc 1 65 0
 135 0030 7A69     		ldr	r2, [r7, #20]
 136 0032 BB69     		ldr	r3, [r7, #24]
 137 0034 0093     		str	r3, [sp]
 138 0036 1346     		mov	r3, r2
 139 0038 2D4A     		ldr	r2, .L3+4
 140 003a 1821     		movs	r1, #24
 141 003c 2D48     		ldr	r0, .L3+8
 142 003e FFF7FEFF 		bl	snprintf
  66:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  67:notoriOS.c    ****     system_info.modem_info = &modem_info;
 143              		.loc 1 67 0
 144 0042 2D4B     		ldr	r3, .L3+12
 145 0044 2D4A     		ldr	r2, .L3+16
 146 0046 1A60     		str	r2, [r3]
  68:notoriOS.c    ****     
  69:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  70:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","ec2-13-59-131-167.us-eas
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 5


 147              		.loc 1 70 0
 148 0048 2D4A     		ldr	r2, .L3+20
 149 004a 2E4B     		ldr	r3, .L3+24
 150 004c 1446     		mov	r4, r2
 151 004e 1D46     		mov	r5, r3
 152 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 153 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 154 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 155 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 156 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 157 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 158 005c 2B68     		ldr	r3, [r5]
 159 005e 2380     		strh	r3, [r4]	@ movhi
  71:notoriOS.c    ****    
  72:notoriOS.c    ****     system_settings.ep_port = 5000;
 160              		.loc 1 72 0
 161 0060 274B     		ldr	r3, .L3+20
 162 0062 41F28832 		movw	r2, #5000
 163 0066 5A66     		str	r2, [r3, #100]
  73:notoriOS.c    ****     // Don't need the following for new nodes
  74:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  75:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  76:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  77:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  78:notoriOS.c    ****         
  79:notoriOS.c    ****     
  80:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  81:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 164              		.loc 1 81 0
 165 0068 274B     		ldr	r3, .L3+28
 166 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 167 006c 99B2     		uxth	r1, r3
 168 006e 274C     		ldr	r4, .L3+32
 169 0070 3846     		mov	r0, r7
 170 0072 0723     		movs	r3, #7
 171 0074 0122     		movs	r2, #1
 172 0076 FFF7FEFF 		bl	CreateAlarm
 173 007a 2246     		mov	r2, r4
 174 007c 3B46     		mov	r3, r7
 175 007e 1968     		ldr	r1, [r3]	@ unaligned
 176 0080 1160     		str	r1, [r2]	@ unaligned
 177 0082 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 178 0084 9380     		strh	r3, [r2, #4]	@ unaligned
  82:notoriOS.c    ****     timeToMeasure = 1u;
 179              		.loc 1 82 0
 180 0086 224B     		ldr	r3, .L3+36
 181 0088 0122     		movs	r2, #1
 182 008a 1A70     		strb	r2, [r3]
  83:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  84:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 183              		.loc 1 84 0
 184 008c 1E4B     		ldr	r3, .L3+28
 185 008e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 186 0090 99B2     		uxth	r1, r3
 187 0092 204C     		ldr	r4, .L3+40
 188 0094 3846     		mov	r0, r7
 189 0096 0723     		movs	r3, #7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 6


 190 0098 0122     		movs	r2, #1
 191 009a FFF7FEFF 		bl	CreateAlarm
 192 009e 2246     		mov	r2, r4
 193 00a0 3B46     		mov	r3, r7
 194 00a2 1968     		ldr	r1, [r3]	@ unaligned
 195 00a4 1160     		str	r1, [r2]	@ unaligned
 196 00a6 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 197 00a8 9380     		strh	r3, [r2, #4]	@ unaligned
  85:notoriOS.c    ****     timeToSync = 1u;
 198              		.loc 1 85 0
 199 00aa 1B4B     		ldr	r3, .L3+44
 200 00ac 0122     		movs	r2, #1
 201 00ae 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     
  87:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 202              		.loc 1 87 0
 203 00b0 1A4B     		ldr	r3, .L3+48
 204 00b2 0022     		movs	r2, #0
 205 00b4 1A70     		strb	r2, [r3]
  88:notoriOS.c    ****     
  89:notoriOS.c    ****     // send hey to server saying the node rebooted
  90:notoriOS.c    ****     hey = 1u;
 206              		.loc 1 90 0
 207 00b6 1A4B     		ldr	r3, .L3+52
 208 00b8 0122     		movs	r2, #1
 209 00ba 1A70     		strb	r2, [r3]
  91:notoriOS.c    ****     char c_hey[10];
  92:notoriOS.c    ****     snprintf(c_hey,sizeof(c_hey),"%d",hey);
 210              		.loc 1 92 0
 211 00bc 184B     		ldr	r3, .L3+52
 212 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 213 00c0 07F10800 		add	r0, r7, #8
 214 00c4 174A     		ldr	r2, .L3+56
 215 00c6 0A21     		movs	r1, #10
 216 00c8 FFF7FEFF 		bl	snprintf
  93:notoriOS.c    ****     pushData("reboot",c_hey,getTimeStamp());
 217              		.loc 1 93 0
 218 00cc FFF7FEFF 		bl	getTimeStamp
 219 00d0 0246     		mov	r2, r0
 220 00d2 07F10803 		add	r3, r7, #8
 221 00d6 1946     		mov	r1, r3
 222 00d8 1348     		ldr	r0, .L3+60
 223 00da FFF7FEFF 		bl	pushData
  94:notoriOS.c    ****     
  95:notoriOS.c    ****     // Initialize the try counter to 0
  96:notoriOS.c    ****     uint8 try_counter = 0;
 224              		.loc 1 96 0
 225 00de 0023     		movs	r3, #0
 226 00e0 FB77     		strb	r3, [r7, #31]
  97:notoriOS.c    **** }
 227              		.loc 1 97 0
 228 00e2 00BF     		nop
 229 00e4 2037     		adds	r7, r7, #32
 230              		.cfi_def_cfa_offset 16
 231 00e6 BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 7


 234 00e8 B0BD     		pop	{r4, r5, r7, pc}
 235              	.L4:
 236 00ea 00BF     		.align	2
 237              	.L3:
 238 00ec 00000000 		.word	Wakeup_ISR
 239 00f0 00000000 		.word	.LC0
 240 00f4 04000000 		.word	system_info+4
 241 00f8 00000000 		.word	system_info
 242 00fc 00000000 		.word	modem_info
 243 0100 00000000 		.word	system_settings
 244 0104 08000000 		.word	.LC1
 245 0108 00000000 		.word	updatable_parameters
 246 010c 00000000 		.word	alarmMeasure
 247 0110 00000000 		.word	timeToMeasure
 248 0114 00000000 		.word	alarmSync
 249 0118 00000000 		.word	timeToSync
 250 011c 00000000 		.word	timeToSycnRemoteParams
 251 0120 00000000 		.word	hey
 252 0124 3C000000 		.word	.LC2
 253 0128 40000000 		.word	.LC3
 254              		.cfi_endproc
 255              	.LFE65:
 256              		.size	ReadyOrNot, .-ReadyOrNot
 257              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 258              		.align	2
 259              		.global	WorkWorkWorkWorkWorkWork
 260              		.thumb
 261              		.thumb_func
 262              		.type	WorkWorkWorkWorkWorkWork, %function
 263              	WorkWorkWorkWorkWorkWork:
 264              	.LFB66:
  98:notoriOS.c    **** 
  99:notoriOS.c    **** 
 100:notoriOS.c    **** // ==============================================
 101:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
 102:notoriOS.c    **** //      - Rhiana, feat Drake (2016)
 103:notoriOS.c    **** //
 104:notoriOS.c    **** // Prorcesses core tasks
 105:notoriOS.c    **** // ==============================================
 106:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
 107:notoriOS.c    **** {
 265              		.loc 1 107 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269 0000 80B5     		push	{r7, lr}
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 82B0     		sub	sp, sp, #8
 274              		.cfi_def_cfa_offset 16
 275 0004 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
 108:notoriOS.c    ****     
 109:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 110:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 111:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 8


 112:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 113:notoriOS.c    ****     
 114:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 115:notoriOS.c    ****     if(timeToSycnRemoteParams){
 277              		.loc 1 115 0
 278 0006 144B     		ldr	r3, .L10
 279 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 000a 002B     		cmp	r3, #0
 281 000c 06D0     		beq	.L6
 116:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
 282              		.loc 1 116 0
 283 000e FFF7FEFF 		bl	configureRemoteParams
 284 0012 0346     		mov	r3, r0
 285 0014 1A46     		mov	r2, r3
 286 0016 104B     		ldr	r3, .L10
 287 0018 1A70     		strb	r2, [r3]
 288 001a 14E0     		b	.L7
 289              	.L6:
 117:notoriOS.c    ****     }
 118:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 119:notoriOS.c    ****     else if(timeToMeasure){
 290              		.loc 1 119 0
 291 001c 0F4B     		ldr	r3, .L10+4
 292 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 293 0020 002B     		cmp	r3, #0
 294 0022 06D0     		beq	.L8
 120:notoriOS.c    ****         //(int i=0; i<=30; i++){
 121:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 295              		.loc 1 121 0
 296 0024 FFF7FEFF 		bl	makeMeasurements
 297 0028 0346     		mov	r3, r0
 298 002a 1A46     		mov	r2, r3
 299 002c 0B4B     		ldr	r3, .L10+4
 300 002e 1A70     		strb	r2, [r3]
 301 0030 09E0     		b	.L7
 302              	.L8:
 122:notoriOS.c    ****         //CyDelay(1000u);
 123:notoriOS.c    ****         //}
 124:notoriOS.c    ****     }else if(timeToSync){
 303              		.loc 1 124 0
 304 0032 0B4B     		ldr	r3, .L10+8
 305 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 0036 002B     		cmp	r3, #0
 307 0038 05D0     		beq	.L7
 125:notoriOS.c    ****             timeToSync = syncData();
 308              		.loc 1 125 0
 309 003a FFF7FEFF 		bl	syncData
 310 003e 0346     		mov	r3, r0
 311 0040 1A46     		mov	r2, r3
 312 0042 074B     		ldr	r3, .L10+8
 313 0044 1A70     		strb	r2, [r3]
 314              	.L7:
 126:notoriOS.c    ****     }
 127:notoriOS.c    ****     // Print the countdown to the next alarm
 128:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 129:notoriOS.c    ****     
 130:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 9


 131:notoriOS.c    ****     // Check modem state machine on every loop
 132:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
 315              		.loc 1 132 0
 316 0046 FFF7FEFF 		bl	modem_process_tasks
 317 004a 0346     		mov	r3, r0
 318 004c FB71     		strb	r3, [r7, #7]
 133:notoriOS.c    **** 
 134:notoriOS.c    ****     return 0u +  modem_status;  
 319              		.loc 1 134 0
 320 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 135:notoriOS.c    **** }
 321              		.loc 1 135 0
 322 0050 1846     		mov	r0, r3
 323 0052 0837     		adds	r7, r7, #8
 324              		.cfi_def_cfa_offset 8
 325 0054 BD46     		mov	sp, r7
 326              		.cfi_def_cfa_register 13
 327              		@ sp needed
 328 0056 80BD     		pop	{r7, pc}
 329              	.L11:
 330              		.align	2
 331              	.L10:
 332 0058 00000000 		.word	timeToSycnRemoteParams
 333 005c 00000000 		.word	timeToMeasure
 334 0060 00000000 		.word	timeToSync
 335              		.cfi_endproc
 336              	.LFE66:
 337              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 338              		.section	.text.LayBack,"ax",%progbits
 339              		.align	2
 340              		.global	LayBack
 341              		.thumb
 342              		.thumb_func
 343              		.type	LayBack, %function
 344              	LayBack:
 345              	.LFB67:
 136:notoriOS.c    **** 
 137:notoriOS.c    **** 
 138:notoriOS.c    **** 
 139:notoriOS.c    **** 
 140:notoriOS.c    **** 
 141:notoriOS.c    **** 
 142:notoriOS.c    **** // ==============================================
 143:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 144:notoriOS.c    **** //      - Snoop Dogg (1993)
 145:notoriOS.c    **** //
 146:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 147:notoriOS.c    **** // ==============================================
 148:notoriOS.c    **** void LayBack()
 149:notoriOS.c    **** {
 346              		.loc 1 149 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 10


 353              		.cfi_offset 14, -4
 354 0002 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 150:notoriOS.c    ****   
 151:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 356              		.loc 1 151 0
 357 0004 FFF7FEFF 		bl	modem_sleep
 152:notoriOS.c    ****     
 153:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 154:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 358              		.loc 1 154 0
 359 0008 FFF7FEFF 		bl	debug_sleep
 155:notoriOS.c    ****     
 156:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 360              		.loc 1 156 0
 361 000c FFF7FEFF 		bl	CyPmSaveClocks
 157:notoriOS.c    ****     
 158:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 159:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 160:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 161:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 162:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 163:notoriOS.c    ****     //CyPmHibernate();
 164:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 165:notoriOS.c    **** 
 166:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 362              		.loc 1 166 0
 363 0010 4FF40061 		mov	r1, #2048
 364 0014 0020     		movs	r0, #0
 365 0016 FFF7FEFF 		bl	CyPmSleep
 167:notoriOS.c    **** 
 168:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 366              		.loc 1 168 0
 367 001a FFF7FEFF 		bl	CyPmRestoreClocks
 169:notoriOS.c    **** 
 170:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 368              		.loc 1 170 0
 369 001e FFF7FEFF 		bl	debug_wakeup
 171:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 370              		.loc 1 171 0
 371 0022 FFF7FEFF 		bl	modem_wakeup
 172:notoriOS.c    **** 
 173:notoriOS.c    **** }
 372              		.loc 1 173 0
 373 0026 00BF     		nop
 374 0028 80BD     		pop	{r7, pc}
 375              		.cfi_endproc
 376              	.LFE67:
 377              		.size	LayBack, .-LayBack
 378 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 379              		.align	2
 380              		.global	AyoItsTime
 381              		.thumb
 382              		.thumb_func
 383              		.type	AyoItsTime, %function
 384              	AyoItsTime:
 385              	.LFB68:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 11


 174:notoriOS.c    **** 
 175:notoriOS.c    **** 
 176:notoriOS.c    **** // ==============================================
 177:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 178:notoriOS.c    **** //      - NAS (1994)
 179:notoriOS.c    **** //
 180:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 181:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 182:notoriOS.c    **** // It will add tasks to the work queue,
 183:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 184:notoriOS.c    **** // ==============================================
 185:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 186:notoriOS.c    **** {
 386              		.loc 1 186 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 8
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 82B0     		sub	sp, sp, #8
 395              		.cfi_def_cfa_offset 16
 396 0004 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
 398 0006 0346     		mov	r3, r0
 399 0008 FB71     		strb	r3, [r7, #7]
 187:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 188:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 400              		.loc 1 188 0
 401 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 402 000c 1946     		mov	r1, r3
 403 000e 0C48     		ldr	r0, .L17
 404 0010 FFF7FEFF 		bl	AlarmReady
 405 0014 0346     		mov	r3, r0
 406 0016 002B     		cmp	r3, #0
 407 0018 02D0     		beq	.L14
 189:notoriOS.c    ****     {
 190:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 191:notoriOS.c    ****         timeToMeasure = 1u;
 408              		.loc 1 191 0
 409 001a 0A4B     		ldr	r3, .L17+4
 410 001c 0122     		movs	r2, #1
 411 001e 1A70     		strb	r2, [r3]
 412              	.L14:
 192:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 193:notoriOS.c    ****         
 194:notoriOS.c    ****     }
 195:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 413              		.loc 1 195 0
 414 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 415 0022 1946     		mov	r1, r3
 416 0024 0848     		ldr	r0, .L17+8
 417 0026 FFF7FEFF 		bl	AlarmReady
 418 002a 0346     		mov	r3, r0
 419 002c 002B     		cmp	r3, #0
 420 002e 02D0     		beq	.L16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 12


 196:notoriOS.c    ****     {
 197:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 198:notoriOS.c    ****         timeToSync = 1u;
 421              		.loc 1 198 0
 422 0030 064B     		ldr	r3, .L17+12
 423 0032 0122     		movs	r2, #1
 424 0034 1A70     		strb	r2, [r3]
 425              	.L16:
 199:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 200:notoriOS.c    ****     }
 201:notoriOS.c    ****     
 202:notoriOS.c    **** }
 426              		.loc 1 202 0
 427 0036 00BF     		nop
 428 0038 0837     		adds	r7, r7, #8
 429              		.cfi_def_cfa_offset 8
 430 003a BD46     		mov	sp, r7
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 003c 80BD     		pop	{r7, pc}
 434              	.L18:
 435 003e 00BF     		.align	2
 436              	.L17:
 437 0040 00000000 		.word	alarmMeasure
 438 0044 00000000 		.word	timeToMeasure
 439 0048 00000000 		.word	alarmSync
 440 004c 00000000 		.word	timeToSync
 441              		.cfi_endproc
 442              	.LFE68:
 443              		.size	AyoItsTime, .-AyoItsTime
 444              		.section	.text.AlarmReady,"ax",%progbits
 445              		.align	2
 446              		.global	AlarmReady
 447              		.thumb
 448              		.thumb_func
 449              		.type	AlarmReady, %function
 450              	AlarmReady:
 451              	.LFB69:
 203:notoriOS.c    **** 
 204:notoriOS.c    **** 
 205:notoriOS.c    **** // ==============================================
 206:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 207:notoriOS.c    **** // ==============================================
 208:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 209:notoriOS.c    **** {
 452              		.loc 1 209 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 8
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 82B0     		sub	sp, sp, #8
 461              		.cfi_def_cfa_offset 16
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 13


 464 0006 7860     		str	r0, [r7, #4]
 465 0008 0B46     		mov	r3, r1
 466 000a FB70     		strb	r3, [r7, #3]
 210:notoriOS.c    ****     // if the countDownType matches the alarmType
 211:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 467              		.loc 1 211 0
 468 000c 7B68     		ldr	r3, [r7, #4]
 469 000e 1B79     		ldrb	r3, [r3, #4]
 470 0010 DBB2     		uxtb	r3, r3
 471 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 472 0014 9A42     		cmp	r2, r3
 473 0016 12D1     		bne	.L20
 212:notoriOS.c    ****        
 213:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 214:notoriOS.c    ****         // Decrement the count down value by 1
 215:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 474              		.loc 1 215 0
 475 0018 7B68     		ldr	r3, [r7, #4]
 476 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 477 001c 1BB2     		sxth	r3, r3
 478 001e 9BB2     		uxth	r3, r3
 479 0020 013B     		subs	r3, r3, #1
 480 0022 9BB2     		uxth	r3, r3
 481 0024 1AB2     		sxth	r2, r3
 482 0026 7B68     		ldr	r3, [r7, #4]
 483 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 216:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 217:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 484              		.loc 1 217 0
 485 002a 7B68     		ldr	r3, [r7, #4]
 486 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 487 002e 1BB2     		sxth	r3, r3
 488 0030 002B     		cmp	r3, #0
 489 0032 04DC     		bgt	.L20
 218:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 490              		.loc 1 218 0
 491 0034 7868     		ldr	r0, [r7, #4]
 492 0036 FFF7FEFF 		bl	ResetAlarm
 219:notoriOS.c    ****             return 1u;
 493              		.loc 1 219 0
 494 003a 0123     		movs	r3, #1
 495 003c 00E0     		b	.L21
 496              	.L20:
 220:notoriOS.c    ****         } 
 221:notoriOS.c    ****     }
 222:notoriOS.c    ****     
 223:notoriOS.c    ****     return 0u; // Otherwise return 0
 497              		.loc 1 223 0
 498 003e 0023     		movs	r3, #0
 499              	.L21:
 224:notoriOS.c    **** }
 500              		.loc 1 224 0
 501 0040 1846     		mov	r0, r3
 502 0042 0837     		adds	r7, r7, #8
 503              		.cfi_def_cfa_offset 8
 504 0044 BD46     		mov	sp, r7
 505              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 14


 506              		@ sp needed
 507 0046 80BD     		pop	{r7, pc}
 508              		.cfi_endproc
 509              	.LFE69:
 510              		.size	AlarmReady, .-AlarmReady
 511              		.section	.text.ResetAlarm,"ax",%progbits
 512              		.align	2
 513              		.global	ResetAlarm
 514              		.thumb
 515              		.thumb_func
 516              		.type	ResetAlarm, %function
 517              	ResetAlarm:
 518              	.LFB70:
 225:notoriOS.c    **** 
 226:notoriOS.c    **** // ==============================================
 227:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 228:notoriOS.c    **** // ==============================================
 229:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 230:notoriOS.c    **** {
 519              		.loc 1 230 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0000 80B4     		push	{r7}
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0002 83B0     		sub	sp, sp, #12
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 231:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 232:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 532              		.loc 1 232 0
 533 0008 7B68     		ldr	r3, [r7, #4]
 534 000a 1B88     		ldrh	r3, [r3]	@ movhi
 535 000c 9BB2     		uxth	r3, r3
 536 000e 1AB2     		sxth	r2, r3
 537 0010 7B68     		ldr	r3, [r7, #4]
 538 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 233:notoriOS.c    **** }
 539              		.loc 1 233 0
 540 0014 00BF     		nop
 541 0016 0C37     		adds	r7, r7, #12
 542              		.cfi_def_cfa_offset 4
 543 0018 BD46     		mov	sp, r7
 544              		.cfi_def_cfa_register 13
 545              		@ sp needed
 546 001a 80BC     		pop	{r7}
 547              		.cfi_restore 7
 548              		.cfi_def_cfa_offset 0
 549 001c 7047     		bx	lr
 550              		.cfi_endproc
 551              	.LFE70:
 552              		.size	ResetAlarm, .-ResetAlarm
 553 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 15


 554              		.align	2
 555              		.global	CreateAlarm
 556              		.thumb
 557              		.thumb_func
 558              		.type	CreateAlarm, %function
 559              	CreateAlarm:
 560              	.LFB71:
 234:notoriOS.c    **** 
 235:notoriOS.c    **** // ==============================================
 236:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 237:notoriOS.c    **** // ==============================================
 238:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 239:notoriOS.c    **** {
 561              		.loc 1 239 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 16
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566 0000 80B4     		push	{r7}
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 0002 85B0     		sub	sp, sp, #20
 570              		.cfi_def_cfa_offset 24
 571 0004 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 573 0006 7860     		str	r0, [r7, #4]
 574 0008 0846     		mov	r0, r1
 575 000a 1146     		mov	r1, r2
 576 000c 1A46     		mov	r2, r3
 577 000e 0346     		mov	r3, r0	@ movhi
 578 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 579 0012 0B46     		mov	r3, r1
 580 0014 7B70     		strb	r3, [r7, #1]
 581 0016 1346     		mov	r3, r2
 582 0018 3B70     		strb	r3, [r7]
 240:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 241:notoriOS.c    ****     alarm newAlarm;
 242:notoriOS.c    ****     
 243:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 244:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 583              		.loc 1 244 0
 584 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 585 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 245:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 586              		.loc 1 245 0
 587 001e 7B78     		ldrb	r3, [r7, #1]
 588 0020 3B73     		strb	r3, [r7, #12]
 246:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 589              		.loc 1 246 0
 590 0022 3B78     		ldrb	r3, [r7]
 591 0024 7B73     		strb	r3, [r7, #13]
 247:notoriOS.c    ****     
 248:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 249:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 250:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 592              		.loc 1 250 0
 593 0026 B7F90230 		ldrsh	r3, [r7, #2]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 16


 594 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 251:notoriOS.c    ****     
 252:notoriOS.c    ****     return newAlarm;
 595              		.loc 1 252 0
 596 002c 7B68     		ldr	r3, [r7, #4]
 597 002e 1A46     		mov	r2, r3
 598 0030 07F10803 		add	r3, r7, #8
 599 0034 1868     		ldr	r0, [r3]	@ unaligned
 600 0036 1060     		str	r0, [r2]	@ unaligned
 601 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 602 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 253:notoriOS.c    ****     
 254:notoriOS.c    **** }
 603              		.loc 1 254 0
 604 003c 7868     		ldr	r0, [r7, #4]
 605 003e 1437     		adds	r7, r7, #20
 606              		.cfi_def_cfa_offset 4
 607 0040 BD46     		mov	sp, r7
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 0042 80BC     		pop	{r7}
 611              		.cfi_restore 7
 612              		.cfi_def_cfa_offset 0
 613 0044 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE71:
 616              		.size	CreateAlarm, .-CreateAlarm
 617 0046 00BF     		.section	.rodata
 618 0047 00       		.align	2
 619              	.LC4:
 620 0048 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 620      2D2D2D2D 
 620      2D2D2D2D 
 620      2D424547 
 620      494E2054 
 621 0072 0000     		.align	2
 622              	.LC5:
 623 0074 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\012\000"
 623      3D25732C 
 623      2053494D 
 623      49443D25 
 623      732C2044 
 624              		.align	2
 625              	.LC6:
 626 0094 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 626      2D2D2D2D 
 626      2D2D2D2D 
 626      2D2D2D45 
 626      4E442054 
 627 00bd 00       		.ascii	"\000"
 628              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 629              		.align	2
 630              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 631              		.thumb
 632              		.thumb_func
 633              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 634              	ChickityCheckYourselfBeforeYouWreckYourself:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 17


 635              	.LFB72:
 255:notoriOS.c    **** 
 256:notoriOS.c    **** // ==============================================
 257:notoriOS.c    **** // Dropping bombs on your moms
 258:notoriOS.c    **** //      - Ice Cube (1992)
 259:notoriOS.c    **** //
 260:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 261:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 262:notoriOS.c    **** // ==============================================
 263:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 636              		.loc 1 263 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 1552
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 90B5     		push	{r4, r7, lr}
 641              		.cfi_def_cfa_offset 12
 642              		.cfi_offset 4, -12
 643              		.cfi_offset 7, -8
 644              		.cfi_offset 14, -4
 645 0002 ADF28C7D 		subw	sp, sp, #1932
 646              		.cfi_def_cfa_offset 1944
 647 0006 5EAF     		add	r7, sp, #376
 648              		.cfi_def_cfa 7, 1568
 264:notoriOS.c    **** 
 265:notoriOS.c    ****     //test_t t_influx = influx_test();
 266:notoriOS.c    ****     //printTestStatus(t_influx);
 267:notoriOS.c    ****     
 268:notoriOS.c    ****     
 269:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 649              		.loc 1 269 0
 650 0008 3049     		ldr	r1, .L26
 651 000a 0320     		movs	r0, #3
 652 000c FFF7FEFF 		bl	printNotif
 270:notoriOS.c    ****     
 271:notoriOS.c    ****     //---------------- temporary for debugging ----------------
 272:notoriOS.c    ****     sontek_take_reading(); 
 653              		.loc 1 272 0
 654 0010 FFF7FEFF 		bl	sontek_take_reading
 273:notoriOS.c    ****     
 274:notoriOS.c    ****     // Test modem
 275:notoriOS.c    ****     test_t t_modem = modem_test();
 655              		.loc 1 275 0
 656 0014 07F28C43 		addw	r3, r7, #1164
 657 0018 1846     		mov	r0, r3
 658 001a FFF7FEFF 		bl	modem_test
 276:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s\n",modem_info.imei,modem_info.sim
 659              		.loc 1 276 0
 660 001e 2C4B     		ldr	r3, .L26+4
 661 0020 0093     		str	r3, [sp]
 662 0022 2C4B     		ldr	r3, .L26+8
 663 0024 2C4A     		ldr	r2, .L26+12
 664 0026 2D49     		ldr	r1, .L26+16
 665 0028 0320     		movs	r0, #3
 666 002a FFF7FEFF 		bl	printNotif
 277:notoriOS.c    ****     printTestStatus(t_modem);
 667              		.loc 1 277 0
 668 002e 07F28C44 		addw	r4, r7, #1164
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 18


 669 0032 6846     		mov	r0, sp
 670 0034 04F11003 		add	r3, r4, #16
 671 0038 40F27112 		movw	r2, #369
 672 003c 1946     		mov	r1, r3
 673 003e FFF7FEFF 		bl	memcpy
 674 0042 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 675 0046 FFF7FEFF 		bl	printTestStatus
 278:notoriOS.c    ****     
 279:notoriOS.c    ****     // Test level sensor
 280:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 676              		.loc 1 280 0
 677 004a 07F54273 		add	r3, r7, #776
 678 004e 1846     		mov	r0, r3
 679 0050 FFF7FEFF 		bl	level_sensor_test
 281:notoriOS.c    ****     printTestStatus(t_level_sensor);
 680              		.loc 1 281 0
 681 0054 07F54274 		add	r4, r7, #776
 682 0058 6846     		mov	r0, sp
 683 005a 04F11003 		add	r3, r4, #16
 684 005e 40F27112 		movw	r2, #369
 685 0062 1946     		mov	r1, r3
 686 0064 FFF7FEFF 		bl	memcpy
 687 0068 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 688 006c FFF7FEFF 		bl	printTestStatus
 282:notoriOS.c    ****     
 283:notoriOS.c    ****     // Test voltages
 284:notoriOS.c    ****     test_t t_voltages = voltages_test();
 689              		.loc 1 284 0
 690 0070 07F5C273 		add	r3, r7, #388
 691 0074 1846     		mov	r0, r3
 692 0076 FFF7FEFF 		bl	voltages_test
 285:notoriOS.c    ****     printTestStatus(t_voltages);
 693              		.loc 1 285 0
 694 007a 07F5C274 		add	r4, r7, #388
 695 007e 6846     		mov	r0, sp
 696 0080 04F11003 		add	r3, r4, #16
 697 0084 40F27112 		movw	r2, #369
 698 0088 1946     		mov	r1, r3
 699 008a FFF7FEFF 		bl	memcpy
 700 008e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 701 0092 FFF7FEFF 		bl	printTestStatus
 286:notoriOS.c    ****     
 287:notoriOS.c    ****     // Test SD card
 288:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 702              		.loc 1 288 0
 703 0096 3B46     		mov	r3, r7
 704 0098 1846     		mov	r0, r3
 705 009a FFF7FEFF 		bl	SD_card_test
 289:notoriOS.c    ****     printTestStatus(t_sd_card);
 706              		.loc 1 289 0
 707 009e 3C46     		mov	r4, r7
 708 00a0 6846     		mov	r0, sp
 709 00a2 04F11003 		add	r3, r4, #16
 710 00a6 40F27112 		movw	r2, #369
 711 00aa 1946     		mov	r1, r3
 712 00ac FFF7FEFF 		bl	memcpy
 713 00b0 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 19


 714 00b4 FFF7FEFF 		bl	printTestStatus
 290:notoriOS.c    ****     
 291:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 715              		.loc 1 291 0
 716 00b8 0949     		ldr	r1, .L26+20
 717 00ba 0320     		movs	r0, #3
 718 00bc FFF7FEFF 		bl	printNotif
 292:notoriOS.c    **** 
 293:notoriOS.c    **** }
 719              		.loc 1 293 0
 720 00c0 00BF     		nop
 721 00c2 07F21467 		addw	r7, r7, #1556
 722              		.cfi_def_cfa_offset 12
 723 00c6 BD46     		mov	sp, r7
 724              		.cfi_def_cfa_register 13
 725              		@ sp needed
 726 00c8 90BD     		pop	{r4, r7, pc}
 727              	.L27:
 728 00ca 00BF     		.align	2
 729              	.L26:
 730 00cc 48000000 		.word	.LC4
 731 00d0 04000000 		.word	system_info+4
 732 00d4 00000000 		.word	modem_info
 733 00d8 28000000 		.word	modem_info+40
 734 00dc 74000000 		.word	.LC5
 735 00e0 94000000 		.word	.LC6
 736              		.cfi_endproc
 737              	.LFE72:
 738              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 739              		.section	.text.main,"ax",%progbits
 740              		.align	2
 741              		.global	main
 742              		.thumb
 743              		.thumb_func
 744              		.type	main, %function
 745              	main:
 746              	.LFB73:
 294:notoriOS.c    **** 
 295:notoriOS.c    **** // ==============================================
 296:notoriOS.c    **** // Processes Core Tasks
 297:notoriOS.c    **** // ==============================================
 298:notoriOS.c    **** int main(void)
 299:notoriOS.c    **** {
 747              		.loc 1 299 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 1, uses_anonymous_args = 0
 751 0000 80B5     		push	{r7, lr}
 752              		.cfi_def_cfa_offset 8
 753              		.cfi_offset 7, -8
 754              		.cfi_offset 14, -4
 755 0002 00AF     		add	r7, sp, #0
 756              		.cfi_def_cfa_register 7
 300:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 757              		.loc 1 300 0
 758              		.syntax unified
 759              	@ 300 "notoriOS.c" 1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 20


 760 0004 62B6     		CPSIE   i
 761              	@ 0 "" 2
 301:notoriOS.c    **** 
 302:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 762              		.loc 1 302 0
 763              		.thumb
 764              		.syntax unified
 765 0006 FFF7FEFF 		bl	ReadyOrNot
 303:notoriOS.c    ****     
 304:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 766              		.loc 1 304 0
 767 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 768              	.L30:
 305:notoriOS.c    ****    
 306:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 307:notoriOS.c    ****     {
 308:notoriOS.c    ****         
 309:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 769              		.loc 1 309 0
 770 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 771 0012 0346     		mov	r3, r0
 772 0014 002B     		cmp	r3, #0
 773 0016 FAD1     		bne	.L30
 310:notoriOS.c    ****         {
 311:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
 774              		.loc 1 311 0
 775 0018 FFF7FEFF 		bl	LayBack
 312:notoriOS.c    ****         }
 313:notoriOS.c    ****     }
 776              		.loc 1 313 0
 777 001c F7E7     		b	.L30
 778              		.cfi_endproc
 779              	.LFE73:
 780              		.size	main, .-main
 781 001e 00BF     		.section	.rodata
 782 00be 0000     		.align	2
 783              	.LC7:
 784 00c0 4D6F6465 		.ascii	"Modem is ready.\000"
 784      6D206973 
 784      20726561 
 784      64792E00 
 785              		.align	2
 786              	.LC8:
 787 00d0 72737270 		.ascii	"rsrp\000"
 787      00
 788 00d5 000000   		.align	2
 789              	.LC9:
 790 00d8 7472795F 		.ascii	"try_counter\000"
 790      636F756E 
 790      74657200 
 791              		.align	2
 792              	.LC10:
 793 00e4 64617461 		.ascii	"data_count_sent\000"
 793      5F636F75 
 793      6E745F73 
 793      656E7400 
 794              		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 21


 795              	.LC11:
 796 00f4 64617461 		.ascii	"data_count_desired\000"
 796      5F636F75 
 796      6E745F64 
 796      65736972 
 796      656400
 797 0107 00       		.align	2
 798              	.LC12:
 799 0108 42656769 		.ascii	"Begin HTTP post.\000"
 799      6E204854 
 799      54502070 
 799      6F73742E 
 799      00
 800 0119 000000   		.align	2
 801              	.LC13:
 802 011c 34396238 		.ascii	"49b8a1ced1218c4c6ab99a76ed56e27d7210c1ee\000"
 802      61316365 
 802      64313231 
 802      38633463 
 802      36616239 
 803 0145 000000   		.align	2
 804              	.LC14:
 805 0148 6170692F 		.ascii	"api/v1/write\000"
 805      76312F77 
 805      72697465 
 805      00
 806 0155 000000   		.align	2
 807              	.LC15:
 808 0158 48545450 		.ascii	"HTTP route: %s\000"
 808      20726F75 
 808      74653A20 
 808      257300
 809 0167 00       		.align	2
 810              	.LC16:
 811 0168 312E3100 		.ascii	"1.1\000"
 812              		.align	2
 813              	.LC17:
 814 016c 00       		.ascii	"\000"
 815 016d 000000   		.align	2
 816              	.LC18:
 817 0170 436C6F73 		.ascii	"Close\000"
 817      6500
 818 0176 0000     		.align	2
 819              	.LC19:
 820 0178 504F5354 		.ascii	"POST\000"
 820      00
 821 017d 000000   		.align	2
 822              	.LC20:
 823 0180 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 823      20485454 
 823      50205265 
 823      71756573 
 823      743A2025 
 824 0196 0000     		.align	2
 825              	.LC21:
 826 0198 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 826      443D312C 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 22


 826      302C2564 
 826      2C222573 
 826      222C302C 
 827 01b1 000000   		.align	2
 828              	.LC22:
 829 01b4 257300   		.ascii	"%s\000"
 830 01b7 00       		.align	2
 831              	.LC23:
 832 01b8 4F4B00   		.ascii	"OK\000"
 833              		.global	__aeabi_ui2d
 834              		.global	__aeabi_d2iz
 835 01bb 00       		.align	2
 836              	.LC24:
 837 01bc 68747470 		.ascii	"http_request len: %d\000"
 837      5F726571 
 837      75657374 
 837      206C656E 
 837      3A202564 
 838 01d1 000000   		.align	2
 839              	.LC25:
 840 01d4 23206F66 		.ascii	"# of packets: %d\000"
 840      20706163 
 840      6B657473 
 840      3A202564 
 840      00
 841 01e5 000000   		.align	2
 842              	.LC26:
 843 01e8 3E00     		.ascii	">\000"
 844 01ea 0000     		.align	2
 845              	.LC27:
 846 01ec 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 846      53454E44 
 846      3D310D0A 
 846      00
 847 01f9 000000   		.align	2
 848              	.LC28:
 849 01fc 1A00     		.ascii	"\032\000"
 850 01fe 0000     		.align	2
 851              	.LC29:
 852 0200 6368756E 		.ascii	"chunk %d: %s\000"
 852      6B202564 
 852      3A202573 
 852      00
 853 020d 000000   		.align	2
 854              	.LC30:
 855 0210 5352494E 		.ascii	"SRING\000"
 855      4700
 856 0216 0000     		.align	2
 857              	.LC31:
 858 0218 4F532D4F 		.ascii	"OS-OK\000"
 858      4B00
 859 021e 0000     		.align	2
 860              	.LC32:
 861 0220 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 861      52454356 
 861      3D312C31 
 861      3030300D 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 23


 861      00
 862 0231 000000   		.align	2
 863              	.LC33:
 864 0234 6D6F6465 		.ascii	"modem_tx_time\000"
 864      6D5F7478 
 864      5F74696D 
 864      6500
 865 0242 0000     		.align	2
 866              	.LC34:
 867 0244 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 867      4F3A2043 
 867      6F756C64 
 867      206E6F74 
 867      20726563 
 868              		.section	.text.syncData,"ax",%progbits
 869              		.align	2
 870              		.global	syncData
 871              		.thumb
 872              		.thumb_func
 873              		.type	syncData, %function
 874              	syncData:
 875              	.LFB74:
 314:notoriOS.c    **** }
 315:notoriOS.c    **** 
 316:notoriOS.c    **** // ==============================================
 317:notoriOS.c    **** // Syncs data with server
 318:notoriOS.c    **** // Returns 0 when done
 319:notoriOS.c    **** // ==============================================
 320:notoriOS.c    **** uint8 syncData(){
 876              		.loc 1 320 0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 1336
 879              		@ frame_needed = 1, uses_anonymous_args = 0
 880 0000 90B5     		push	{r4, r7, lr}
 881              		.cfi_def_cfa_offset 12
 882              		.cfi_offset 4, -12
 883              		.cfi_offset 7, -8
 884              		.cfi_offset 14, -4
 885 0002 ADF2545D 		subw	sp, sp, #1364
 886              		.cfi_def_cfa_offset 1376
 887 0006 06AF     		add	r7, sp, #24
 888              		.cfi_def_cfa 7, 1352
 321:notoriOS.c    ****     
 322:notoriOS.c    ****     /*
 323:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 324:notoriOS.c    ****     uint8 check = 0;
 325:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 326:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 327:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 328:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 329:notoriOS.c    ****     */
 330:notoriOS.c    **** 
 331:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 332:notoriOS.c    ****     LED_Write(1u);
 889              		.loc 1 332 0
 890 0008 0120     		movs	r0, #1
 891 000a FFF7FEFF 		bl	LED_Write
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 24


 333:notoriOS.c    ****     CyDelay(100u);
 892              		.loc 1 333 0
 893 000e 6420     		movs	r0, #100
 894 0010 FFF7FEFF 		bl	CyDelay
 334:notoriOS.c    ****     LED_Write(0u);
 895              		.loc 1 334 0
 896 0014 0020     		movs	r0, #0
 897 0016 FFF7FEFF 		bl	LED_Write
 335:notoriOS.c    **** 
 336:notoriOS.c    ****     
 337:notoriOS.c    ****     // If there's no data, not need to do anything
 338:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 898              		.loc 1 338 0
 899 001a FFF7FEFF 		bl	sizeOfDataStack
 900 001e 0346     		mov	r3, r0
 901 0020 002B     		cmp	r3, #0
 902 0022 01D1     		bne	.L32
 339:notoriOS.c    ****         return 0u;
 903              		.loc 1 339 0
 904 0024 0023     		movs	r3, #0
 905 0026 F9E1     		b	.L33
 906              	.L32:
 340:notoriOS.c    ****         }
 341:notoriOS.c    ****     
 342:notoriOS.c    ****     // Create request body, in this case influx
 343:notoriOS.c    ****     // Place body into HTTP request header
 344:notoriOS.c    ****     // Fire up modem and get it out
 345:notoriOS.c    ****      
 346:notoriOS.c    ****     
 347:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 348:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 907              		.loc 1 348 0
 908 0028 FFF7FEFF 		bl	modem_get_state
 909 002c 0346     		mov	r3, r0
 910 002e 002B     		cmp	r3, #0
 911 0030 11D1     		bne	.L34
 349:notoriOS.c    **** 
 350:notoriOS.c    ****         try_counter++;
 912              		.loc 1 350 0
 913 0032 C74B     		ldr	r3, .L46
 914 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 915 0036 0133     		adds	r3, r3, #1
 916 0038 DAB2     		uxtb	r2, r3
 917 003a C54B     		ldr	r3, .L46
 918 003c 1A70     		strb	r2, [r3]
 351:notoriOS.c    ****         	
 352:notoriOS.c    ****         if(try_counter <= 2){
 919              		.loc 1 352 0
 920 003e C44B     		ldr	r3, .L46
 921 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 922 0042 022B     		cmp	r3, #2
 923 0044 02D8     		bhi	.L35
 353:notoriOS.c    ****             modem_power_up();
 924              		.loc 1 353 0
 925 0046 FFF7FEFF 		bl	modem_power_up
 926 004a E6E1     		b	.L36
 927              	.L35:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 25


 354:notoriOS.c    ****         }else{
 355:notoriOS.c    ****             try_counter = 0;
 928              		.loc 1 355 0
 929 004c C04B     		ldr	r3, .L46
 930 004e 0022     		movs	r2, #0
 931 0050 1A70     		strb	r2, [r3]
 356:notoriOS.c    ****             return 0u;
 932              		.loc 1 356 0
 933 0052 0023     		movs	r3, #0
 934 0054 E2E1     		b	.L33
 935              	.L34:
 357:notoriOS.c    ****             }
 358:notoriOS.c    ****             
 359:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 936              		.loc 1 359 0
 937 0056 FFF7FEFF 		bl	modem_get_state
 938 005a 0346     		mov	r3, r0
 939 005c 042B     		cmp	r3, #4
 940 005e 40F0DC81 		bne	.L36
 941              	.LBB2:
 360:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 942              		.loc 1 360 0
 943 0062 BC49     		ldr	r1, .L46+4
 944 0064 0020     		movs	r0, #0
 945 0066 FFF7FEFF 		bl	printNotif
 361:notoriOS.c    ****         
 362:notoriOS.c    ****         http_request[0] = '\0';
 946              		.loc 1 362 0
 947 006a BB4B     		ldr	r3, .L46+8
 948 006c 0022     		movs	r2, #0
 949 006e 1A70     		strb	r2, [r3]
 363:notoriOS.c    ****         http_body[0] = '\0';
 950              		.loc 1 363 0
 951 0070 BA4B     		ldr	r3, .L46+12
 952 0072 0022     		movs	r2, #0
 953 0074 1A70     		strb	r2, [r3]
 364:notoriOS.c    ****         http_route[0] = '\0';
 954              		.loc 1 364 0
 955 0076 BA4B     		ldr	r3, .L46+16
 956 0078 0022     		movs	r2, #0
 957 007a 1A70     		strb	r2, [r3]
 365:notoriOS.c    ****         //char *base = "write";
 366:notoriOS.c    ****         
 367:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power)
 368:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 369:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 958              		.loc 1 369 0
 959 007c B94B     		ldr	r3, .L46+20
 960 007e 5B69     		ldr	r3, [r3, #20]
 961 0080 07F5A260 		add	r0, r7, #1296
 962 0084 B84A     		ldr	r2, .L46+24
 963 0086 1421     		movs	r1, #20
 964 0088 FFF7FEFF 		bl	snprintf
 370:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 965              		.loc 1 370 0
 966 008c FFF7FEFF 		bl	getTimeStamp
 967 0090 0246     		mov	r2, r0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 26


 968 0092 07F5A263 		add	r3, r7, #1296
 969 0096 1946     		mov	r1, r3
 970 0098 B448     		ldr	r0, .L46+28
 971 009a FFF7FEFF 		bl	pushData
 371:notoriOS.c    ****         
 372:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 373:notoriOS.c    ****         char c_try_counter[20];
 374:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 972              		.loc 1 374 0
 973 009e AC4B     		ldr	r3, .L46
 974 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 975 00a2 07F2FC40 		addw	r0, r7, #1276
 976 00a6 B04A     		ldr	r2, .L46+24
 977 00a8 1421     		movs	r1, #20
 978 00aa FFF7FEFF 		bl	snprintf
 375:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 979              		.loc 1 375 0
 980 00ae FFF7FEFF 		bl	getTimeStamp
 981 00b2 0246     		mov	r2, r0
 982 00b4 07F2FC43 		addw	r3, r7, #1276
 983 00b8 1946     		mov	r1, r3
 984 00ba AD48     		ldr	r0, .L46+32
 985 00bc FFF7FEFF 		bl	pushData
 376:notoriOS.c    ****         
 377:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
 378:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 379:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 380:notoriOS.c    ****         if(buffer_overflow == false){
 986              		.loc 1 380 0
 987 00c0 AC4B     		ldr	r3, .L46+36
 988 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 989 00c4 83F00103 		eor	r3, r3, #1
 990 00c8 DBB2     		uxtb	r3, r3
 991 00ca 002B     		cmp	r3, #0
 992 00cc 16D0     		beq	.L37
 993              	.LBB3:
 381:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 994              		.loc 1 381 0
 995 00ce FFF7FEFF 		bl	sizeOfDataStack
 996 00d2 0346     		mov	r3, r0
 997 00d4 A7F83035 		strh	r3, [r7, #1328]	@ movhi
 382:notoriOS.c    ****             char c_data_count_sent[20];
 383:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 998              		.loc 1 383 0
 999 00d8 B7F83035 		ldrh	r3, [r7, #1328]
 1000 00dc 07F2D440 		addw	r0, r7, #1236
 1001 00e0 A14A     		ldr	r2, .L46+24
 1002 00e2 1421     		movs	r1, #20
 1003 00e4 FFF7FEFF 		bl	snprintf
 384:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1004              		.loc 1 384 0
 1005 00e8 FFF7FEFF 		bl	getTimeStamp
 1006 00ec 0246     		mov	r2, r0
 1007 00ee 07F2D443 		addw	r3, r7, #1236
 1008 00f2 1946     		mov	r1, r3
 1009 00f4 A048     		ldr	r0, .L46+40
 1010 00f6 FFF7FEFF 		bl	pushData
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 27


 1011              	.LBE3:
 1012 00fa 0FE0     		b	.L38
 1013              	.L37:
 1014              	.LBB4:
 385:notoriOS.c    ****         }else{
 386:notoriOS.c    ****             char c_data_count_sent[20];
 387:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1015              		.loc 1 387 0
 1016 00fc 07F59860 		add	r0, r7, #1216
 1017 0100 9623     		movs	r3, #150
 1018 0102 994A     		ldr	r2, .L46+24
 1019 0104 1421     		movs	r1, #20
 1020 0106 FFF7FEFF 		bl	snprintf
 388:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1021              		.loc 1 388 0
 1022 010a FFF7FEFF 		bl	getTimeStamp
 1023 010e 0246     		mov	r2, r0
 1024 0110 07F59863 		add	r3, r7, #1216
 1025 0114 1946     		mov	r1, r3
 1026 0116 9848     		ldr	r0, .L46+40
 1027 0118 FFF7FEFF 		bl	pushData
 1028              	.L38:
 1029              	.LBE4:
 389:notoriOS.c    ****         }
 390:notoriOS.c    ****         
 391:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 392:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 1030              		.loc 1 392 0
 1031 011c FFF7FEFF 		bl	sizeOfDataStackDesired
 1032 0120 0346     		mov	r3, r0
 1033 0122 A7F82E35 		strh	r3, [r7, #1326]	@ movhi
 393:notoriOS.c    ****         char c_data_count_desired[20];
 394:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 395:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1034              		.loc 1 395 0
 1035 0126 B7F82E35 		ldrh	r3, [r7, #1326]
 1036 012a 013B     		subs	r3, r3, #1
 1037 012c 07F59D60 		add	r0, r7, #1256
 1038 0130 8D4A     		ldr	r2, .L46+24
 1039 0132 1421     		movs	r1, #20
 1040 0134 FFF7FEFF 		bl	snprintf
 396:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
 1041              		.loc 1 396 0
 1042 0138 FFF7FEFF 		bl	getTimeStamp
 1043 013c 0246     		mov	r2, r0
 1044 013e 07F59D63 		add	r3, r7, #1256
 1045 0142 1946     		mov	r1, r3
 1046 0144 8D48     		ldr	r0, .L46+44
 1047 0146 FFF7FEFF 		bl	pushData
 397:notoriOS.c    ****         
 398:notoriOS.c    ****         // Construct HTPP request
 399:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1048              		.loc 1 399 0
 1049 014a 8D49     		ldr	r1, .L46+48
 1050 014c 0020     		movs	r0, #0
 1051 014e FFF7FEFF 		bl	printNotif
 400:notoriOS.c    ****         
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 28


 401:notoriOS.c    ****         // Old influx API
 402:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 403:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1052              		.loc 1 403 0
 1053 0152 8C4B     		ldr	r3, .L46+52
 1054 0154 8C4A     		ldr	r2, .L46+56
 1055 0156 8D49     		ldr	r1, .L46+60
 1056 0158 8148     		ldr	r0, .L46+16
 1057 015a FFF7FEFF 		bl	construct_malcom_route
 404:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1058              		.loc 1 404 0
 1059 015e 804A     		ldr	r2, .L46+16
 1060 0160 8B49     		ldr	r1, .L46+64
 1061 0162 0020     		movs	r0, #0
 1062 0164 FFF7FEFF 		bl	printNotif
 405:notoriOS.c    ****         
 406:notoriOS.c    ****         //OLD INFLUX API
 407:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 408:notoriOS.c    ****         construct_malcom_body(http_body);
 1063              		.loc 1 408 0
 1064 0168 7C48     		ldr	r0, .L46+12
 1065 016a FFF7FEFF 		bl	construct_malcom_body
 409:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1066              		.loc 1 409 0
 1067 016e 894B     		ldr	r3, .L46+68
 1068 0170 5B6E     		ldr	r3, [r3, #100]
 1069 0172 894A     		ldr	r2, .L46+72
 1070 0174 0592     		str	r2, [sp, #20]
 1071 0176 0022     		movs	r2, #0
 1072 0178 0492     		str	r2, [sp, #16]
 1073 017a 884A     		ldr	r2, .L46+76
 1074 017c 0392     		str	r2, [sp, #12]
 1075 017e 884A     		ldr	r2, .L46+80
 1076 0180 0292     		str	r2, [sp, #8]
 1077 0182 884A     		ldr	r2, .L46+84
 1078 0184 0192     		str	r2, [sp, #4]
 1079 0186 0093     		str	r3, [sp]
 1080 0188 754B     		ldr	r3, .L46+16
 1081 018a 824A     		ldr	r2, .L46+68
 1082 018c 7349     		ldr	r1, .L46+12
 1083 018e 7248     		ldr	r0, .L46+8
 1084 0190 FFF7FEFF 		bl	construct_generic_HTTP_request
 410:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1085              		.loc 1 410 0
 1086 0194 704A     		ldr	r2, .L46+8
 1087 0196 8449     		ldr	r1, .L46+88
 1088 0198 0020     		movs	r0, #0
 1089 019a FFF7FEFF 		bl	printNotif
 411:notoriOS.c    ****         
 412:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 413:notoriOS.c    ****         // Open port and begin command line sequence
 414:notoriOS.c    ****         char portConfig[200];
 415:notoriOS.c    ****         uint8 status = 0u;
 1090              		.loc 1 415 0
 1091 019e 0023     		movs	r3, #0
 1092 01a0 87F82D35 		strb	r3, [r7, #1325]
 416:notoriOS.c    ****         
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 29


 417:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1093              		.loc 1 417 0
 1094 01a4 7B4B     		ldr	r3, .L46+68
 1095 01a6 5A6E     		ldr	r2, [r3, #100]
 1096 01a8 3846     		mov	r0, r7
 1097 01aa 7A4B     		ldr	r3, .L46+68
 1098 01ac 0093     		str	r3, [sp]
 1099 01ae 1346     		mov	r3, r2
 1100 01b0 7E4A     		ldr	r2, .L46+92
 1101 01b2 C821     		movs	r1, #200
 1102 01b4 FFF7FEFF 		bl	snprintf
 418:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1103              		.loc 1 418 0
 1104 01b8 3B46     		mov	r3, r7
 1105 01ba 1A46     		mov	r2, r3
 1106 01bc 7C49     		ldr	r1, .L46+96
 1107 01be 0020     		movs	r0, #0
 1108 01c0 FFF7FEFF 		bl	printNotif
 419:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1109              		.loc 1 419 0
 1110 01c4 3B46     		mov	r3, r7
 1111 01c6 42F21072 		movw	r2, #10000
 1112 01ca 7A49     		ldr	r1, .L46+100
 1113 01cc 1846     		mov	r0, r3
 1114 01ce FFF7FEFF 		bl	at_write_command
 1115 01d2 0346     		mov	r3, r0
 1116 01d4 87F82D35 		strb	r3, [r7, #1325]
 420:notoriOS.c    ****         
 421:notoriOS.c    ****         // create character pointer to chunk through the http_request
 422:notoriOS.c    ****         char *chunk;
 423:notoriOS.c    ****         // Set chunk to start where http_request starts
 424:notoriOS.c    ****         chunk = http_request;
 1117              		.loc 1 424 0
 1118 01d8 5F4B     		ldr	r3, .L46+8
 1119 01da C7F83435 		str	r3, [r7, #1332]
 425:notoriOS.c    ****         // variable for the number of packets to send
 426:notoriOS.c    ****         int8 packets;
 427:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1120              		.loc 1 427 0
 1121 01de 5E48     		ldr	r0, .L46+8
 1122 01e0 FFF7FEFF 		bl	strlen
 1123 01e4 0246     		mov	r2, r0
 1124 01e6 744B     		ldr	r3, .L46+104
 1125 01e8 A3FB0223 		umull	r2, r3, r3, r2
 1126 01ec 5B09     		lsrs	r3, r3, #5
 1127 01ee 1846     		mov	r0, r3
 1128 01f0 FFF7FEFF 		bl	__aeabi_ui2d
 1129 01f4 4FF00002 		mov	r2, #0
 1130 01f8 704B     		ldr	r3, .L46+108
 1131 01fa FFF7FEFF 		bl	nextafter
 1132 01fe 0346     		mov	r3, r0
 1133 0200 0C46     		mov	r4, r1
 1134 0202 1846     		mov	r0, r3
 1135 0204 2146     		mov	r1, r4
 1136 0206 FFF7FEFF 		bl	ceil
 1137 020a 0346     		mov	r3, r0
 1138 020c 0C46     		mov	r4, r1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 30


 1139 020e 1846     		mov	r0, r3
 1140 0210 2146     		mov	r1, r4
 1141 0212 FFF7FEFF 		bl	__aeabi_d2iz
 1142 0216 0346     		mov	r3, r0
 1143 0218 87F82C35 		strb	r3, [r7, #1324]
 428:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1144              		.loc 1 428 0
 1145 021c 4E48     		ldr	r0, .L46+8
 1146 021e FFF7FEFF 		bl	strlen
 1147 0222 0346     		mov	r3, r0
 1148 0224 1A46     		mov	r2, r3
 1149 0226 6649     		ldr	r1, .L46+112
 1150 0228 0020     		movs	r0, #0
 1151 022a FFF7FEFF 		bl	printNotif
 429:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1152              		.loc 1 429 0
 1153 022e 97F92C35 		ldrsb	r3, [r7, #1324]
 1154 0232 1A46     		mov	r2, r3
 1155 0234 6349     		ldr	r1, .L46+116
 1156 0236 0020     		movs	r0, #0
 1157 0238 FFF7FEFF 		bl	printNotif
 1158              	.LBB5:
 430:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 431:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1159              		.loc 1 431 0
 1160 023c 0023     		movs	r3, #0
 1161 023e 87F83335 		strb	r3, [r7, #1331]
 1162 0242 53E0     		b	.L39
 1163              	.L42:
 1164              	.LBB6:
 432:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 433:notoriOS.c    ****             char http_chunk[1001];
 434:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 435:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 436:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1165              		.loc 1 436 0
 1166 0244 4FF47A72 		mov	r2, #1000
 1167 0248 5F49     		ldr	r1, .L46+120
 1168 024a 6048     		ldr	r0, .L46+124
 1169 024c FFF7FEFF 		bl	at_write_command
 1170 0250 0346     		mov	r3, r0
 1171 0252 87F82D35 		strb	r3, [r7, #1325]
 437:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 438:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1172              		.loc 1 438 0
 1173 0256 07F1C800 		add	r0, r7, #200
 1174 025a D7F83435 		ldr	r3, [r7, #1332]
 1175 025e 544A     		ldr	r2, .L46+96
 1176 0260 4FF4FA71 		mov	r1, #500
 1177 0264 FFF7FEFF 		bl	snprintf
 439:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 440:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1178              		.loc 1 440 0
 1179 0268 07F1C803 		add	r3, r7, #200
 1180 026c 1846     		mov	r0, r3
 1181 026e FFF7FEFF 		bl	strlen
 1182 0272 0346     		mov	r3, r0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 31


 1183 0274 1A46     		mov	r2, r3
 1184 0276 07F1C803 		add	r3, r7, #200
 1185 027a 1344     		add	r3, r3, r2
 1186 027c 5449     		ldr	r1, .L46+128
 1187 027e 1A46     		mov	r2, r3
 1188 0280 0B46     		mov	r3, r1
 1189 0282 1B88     		ldrh	r3, [r3]	@ unaligned
 1190 0284 1380     		strh	r3, [r2]	@ unaligned
 441:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1191              		.loc 1 441 0
 1192 0286 97F93325 		ldrsb	r2, [r7, #1331]
 1193 028a 07F1C803 		add	r3, r7, #200
 1194 028e 5149     		ldr	r1, .L46+132
 1195 0290 0020     		movs	r0, #0
 1196 0292 FFF7FEFF 		bl	printNotif
 442:notoriOS.c    ****             // Send data to server
 443:notoriOS.c    ****             if ((packet+1) != packets){
 1197              		.loc 1 443 0
 1198 0296 97F93335 		ldrsb	r3, [r7, #1331]
 1199 029a 5A1C     		adds	r2, r3, #1
 1200 029c 97F92C35 		ldrsb	r3, [r7, #1324]
 1201 02a0 9A42     		cmp	r2, r3
 1202 02a2 11D0     		beq	.L40
 444:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1203              		.loc 1 444 0
 1204 02a4 07F1C803 		add	r3, r7, #200
 1205 02a8 41F28832 		movw	r2, #5000
 1206 02ac 4149     		ldr	r1, .L46+100
 1207 02ae 1846     		mov	r0, r3
 1208 02b0 FFF7FEFF 		bl	at_write_command
 1209 02b4 0346     		mov	r3, r0
 1210 02b6 87F82D35 		strb	r3, [r7, #1325]
 445:notoriOS.c    ****                 // Move the pointer forward 
 446:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1211              		.loc 1 446 0
 1212 02ba D7F83435 		ldr	r3, [r7, #1332]
 1213 02be 03F2F313 		addw	r3, r3, #499
 1214 02c2 C7F83435 		str	r3, [r7, #1332]
 1215 02c6 0AE0     		b	.L41
 1216              	.L40:
 447:notoriOS.c    ****             }else{
 448:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
 1217              		.loc 1 448 0
 1218 02c8 07F1C803 		add	r3, r7, #200
 1219 02cc 41F28832 		movw	r2, #5000
 1220 02d0 4149     		ldr	r1, .L46+136
 1221 02d2 1846     		mov	r0, r3
 1222 02d4 FFF7FEFF 		bl	at_write_command
 1223 02d8 0346     		mov	r3, r0
 1224 02da 87F82D35 		strb	r3, [r7, #1325]
 1225              	.L41:
 1226              	.LBE6:
 431:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1227              		.loc 1 431 0 discriminator 2
 1228 02de 97F93335 		ldrsb	r3, [r7, #1331]
 1229 02e2 DBB2     		uxtb	r3, r3
 1230 02e4 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 32


 1231 02e6 DBB2     		uxtb	r3, r3
 1232 02e8 87F83335 		strb	r3, [r7, #1331]
 1233              	.L39:
 431:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1234              		.loc 1 431 0 is_stmt 0 discriminator 1
 1235 02ec 97F93325 		ldrsb	r2, [r7, #1331]
 1236 02f0 97F92C35 		ldrsb	r3, [r7, #1324]
 1237 02f4 9A42     		cmp	r2, r3
 1238 02f6 A5DB     		blt	.L42
 1239              	.LBE5:
 449:notoriOS.c    ****             }
 450:notoriOS.c    ****             
 451:notoriOS.c    ****         }
 452:notoriOS.c    ****         
 453:notoriOS.c    ****         // Read received buffer
 454:notoriOS.c    ****         // A good write will return code "OS-OK"
 455:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 456:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 457:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1240              		.loc 1 457 0 is_stmt 1
 1241 02f8 41F28832 		movw	r2, #5000
 1242 02fc 3749     		ldr	r1, .L46+140
 1243 02fe 3848     		ldr	r0, .L46+144
 1244 0300 FFF7FEFF 		bl	at_write_command
 1245 0304 0346     		mov	r3, r0
 1246 0306 87F82D35 		strb	r3, [r7, #1325]
 458:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 459:notoriOS.c    ****     
 460:notoriOS.c    ****   
 461:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 462:notoriOS.c    ****         if(status == 1u){
 1247              		.loc 1 462 0
 1248 030a 97F82D35 		ldrb	r3, [r7, #1325]	@ zero_extendqisi2
 1249 030e 012B     		cmp	r3, #1
 1250 0310 6CD1     		bne	.L43
 1251              	.LBB7:
 463:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1252              		.loc 1 463 0
 1253 0312 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 464:notoriOS.c    ****             Clear_Data_Stack();
 1254              		.loc 1 464 0
 1255 0316 FFF7FEFF 		bl	Clear_Data_Stack
 465:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1256              		.loc 1 465 0
 1257 031a FFF7FEFF 		bl	getTimeStamp
 1258 031e 0246     		mov	r2, r0
 1259 0320 304B     		ldr	r3, .L46+148
 1260 0322 1B68     		ldr	r3, [r3]
 1261 0324 D31A     		subs	r3, r2, r3
 1262 0326 C7F82835 		str	r3, [r7, #1320]
 466:notoriOS.c    ****             char s_send_time[10];
 467:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1263              		.loc 1 467 0
 1264 032a 07F2B440 		addw	r0, r7, #1204
 1265 032e D7F82835 		ldr	r3, [r7, #1320]
 1266 0332 0D4A     		ldr	r2, .L46+24
 1267 0334 0A21     		movs	r1, #10
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 33


 1268 0336 FFF7FEFF 		bl	snprintf
 468:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1269              		.loc 1 468 0
 1270 033a FFF7FEFF 		bl	getTimeStamp
 1271 033e 0246     		mov	r2, r0
 1272 0340 07F2B443 		addw	r3, r7, #1204
 1273 0344 1946     		mov	r1, r3
 1274 0346 2848     		ldr	r0, .L46+152
 1275 0348 FFF7FEFF 		bl	pushData
 1276              	.LBE7:
 1277 034c 52E0     		b	.L44
 1278              	.L47:
 1279 034e 00BF     		.align	2
 1280              	.L46:
 1281 0350 00000000 		.word	try_counter
 1282 0354 C0000000 		.word	.LC7
 1283 0358 00000000 		.word	http_request
 1284 035c 00000000 		.word	http_body
 1285 0360 00000000 		.word	http_route
 1286 0364 00000000 		.word	modem_stats
 1287 0368 3C000000 		.word	.LC2
 1288 036c D0000000 		.word	.LC8
 1289 0370 D8000000 		.word	.LC9
 1290 0374 00000000 		.word	buffer_overflow
 1291 0378 E4000000 		.word	.LC10
 1292 037c F4000000 		.word	.LC11
 1293 0380 08010000 		.word	.LC12
 1294 0384 1C010000 		.word	.LC13
 1295 0388 28000000 		.word	modem_info+40
 1296 038c 48010000 		.word	.LC14
 1297 0390 58010000 		.word	.LC15
 1298 0394 00000000 		.word	system_settings
 1299 0398 68010000 		.word	.LC16
 1300 039c 6C010000 		.word	.LC17
 1301 03a0 70010000 		.word	.LC18
 1302 03a4 78010000 		.word	.LC19
 1303 03a8 80010000 		.word	.LC20
 1304 03ac 98010000 		.word	.LC21
 1305 03b0 B4010000 		.word	.LC22
 1306 03b4 B8010000 		.word	.LC23
 1307 03b8 D34D6210 		.word	274877907
 1308 03bc 00407F40 		.word	1082081280
 1309 03c0 BC010000 		.word	.LC24
 1310 03c4 D4010000 		.word	.LC25
 1311 03c8 E8010000 		.word	.LC26
 1312 03cc EC010000 		.word	.LC27
 1313 03d0 FC010000 		.word	.LC28
 1314 03d4 00020000 		.word	.LC29
 1315 03d8 10020000 		.word	.LC30
 1316 03dc 18020000 		.word	.LC31
 1317 03e0 20020000 		.word	.LC32
 1318 03e4 00000000 		.word	modem_start_time_stamp
 1319 03e8 34020000 		.word	.LC33
 1320              	.L43:
 469:notoriOS.c    ****         }else{
 470:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1321              		.loc 1 470 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 34


 1322 03ec 0E49     		ldr	r1, .L48
 1323 03ee 0220     		movs	r0, #2
 1324 03f0 FFF7FEFF 		bl	printNotif
 1325              	.L44:
 471:notoriOS.c    ****         }
 472:notoriOS.c    ****          
 473:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 474:notoriOS.c    ****         long network_time = modem_get_network_time();
 1326              		.loc 1 474 0
 1327 03f4 FFF7FEFF 		bl	modem_get_network_time
 1328 03f8 C7F82405 		str	r0, [r7, #1316]
 475:notoriOS.c    ****         if(network_time != 0){
 1329              		.loc 1 475 0
 1330 03fc D7F82435 		ldr	r3, [r7, #1316]
 1331 0400 002B     		cmp	r3, #0
 1332 0402 03D0     		beq	.L45
 476:notoriOS.c    ****            setTime(network_time);
 1333              		.loc 1 476 0
 1334 0404 D7F82405 		ldr	r0, [r7, #1316]
 1335 0408 FFF7FEFF 		bl	setTime
 1336              	.L45:
 477:notoriOS.c    ****         }
 478:notoriOS.c    ****         
 479:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 480:notoriOS.c    ****         // If not -- keep the statck and try next time
 481:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 482:notoriOS.c    ****         modem_power_down();
 1337              		.loc 1 482 0
 1338 040c FFF7FEFF 		bl	modem_power_down
 483:notoriOS.c    ****         
 484:notoriOS.c    ****         try_counter = 0u;
 1339              		.loc 1 484 0
 1340 0410 064B     		ldr	r3, .L48+4
 1341 0412 0022     		movs	r2, #0
 1342 0414 1A70     		strb	r2, [r3]
 485:notoriOS.c    ****         return 0u;
 1343              		.loc 1 485 0
 1344 0416 0023     		movs	r3, #0
 1345 0418 00E0     		b	.L33
 1346              	.L36:
 1347              	.LBE2:
 486:notoriOS.c    ****     }
 487:notoriOS.c    ****       
 488:notoriOS.c    ****       return 1u; // Not done yet
 1348              		.loc 1 488 0
 1349 041a 0123     		movs	r3, #1
 1350              	.L33:
 489:notoriOS.c    **** }
 1351              		.loc 1 489 0 discriminator 1
 1352 041c 1846     		mov	r0, r3
 1353 041e 07F23C57 		addw	r7, r7, #1340
 1354              		.cfi_def_cfa_offset 12
 1355 0422 BD46     		mov	sp, r7
 1356              		.cfi_def_cfa_register 13
 1357              		@ sp needed
 1358 0424 90BD     		pop	{r4, r7, pc}
 1359              	.L49:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 35


 1360 0426 00BF     		.align	2
 1361              	.L48:
 1362 0428 44020000 		.word	.LC34
 1363 042c 00000000 		.word	try_counter
 1364              		.cfi_endproc
 1365              	.LFE74:
 1366              		.size	syncData, .-syncData
 1367              		.section	.text.configureRemoteParams,"ax",%progbits
 1368              		.align	2
 1369              		.global	configureRemoteParams
 1370              		.thumb
 1371              		.thumb_func
 1372              		.type	configureRemoteParams, %function
 1373              	configureRemoteParams:
 1374              	.LFB75:
 490:notoriOS.c    **** 
 491:notoriOS.c    **** // ==============================================
 492:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 493:notoriOS.c    **** // Returns 0 when done
 494:notoriOS.c    **** // ==============================================
 495:notoriOS.c    **** uint8 configureRemoteParams(){
 1375              		.loc 1 495 0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 8
 1378              		@ frame_needed = 1, uses_anonymous_args = 0
 1379 0000 80B5     		push	{r7, lr}
 1380              		.cfi_def_cfa_offset 8
 1381              		.cfi_offset 7, -8
 1382              		.cfi_offset 14, -4
 1383 0002 82B0     		sub	sp, sp, #8
 1384              		.cfi_def_cfa_offset 16
 1385 0004 00AF     		add	r7, sp, #0
 1386              		.cfi_def_cfa_register 7
 496:notoriOS.c    ****     
 497:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1387              		.loc 1 497 0
 1388 0006 FFF7FEFF 		bl	modem_get_state
 1389 000a 0346     		mov	r3, r0
 1390 000c 002B     		cmp	r3, #0
 1391 000e 02D1     		bne	.L51
 498:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 499:notoriOS.c    ****         modem_power_up();
 1392              		.loc 1 499 0
 1393 0010 FFF7FEFF 		bl	modem_power_up
 1394 0014 11E0     		b	.L52
 1395              	.L51:
 500:notoriOS.c    ****             
 501:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1396              		.loc 1 501 0
 1397 0016 FFF7FEFF 		bl	modem_get_state
 1398 001a 0346     		mov	r3, r0
 1399 001c 042B     		cmp	r3, #4
 1400 001e 0CD1     		bne	.L52
 1401              	.LBB8:
 502:notoriOS.c    ****         
 503:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 504:notoriOS.c    ****         
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 36


 505:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 506:notoriOS.c    ****         long network_time = modem_get_network_time();
 1402              		.loc 1 506 0
 1403 0020 FFF7FEFF 		bl	modem_get_network_time
 1404 0024 7860     		str	r0, [r7, #4]
 507:notoriOS.c    ****         if(network_time != 0){
 1405              		.loc 1 507 0
 1406 0026 7B68     		ldr	r3, [r7, #4]
 1407 0028 002B     		cmp	r3, #0
 1408 002a 02D0     		beq	.L53
 508:notoriOS.c    ****             setTime(network_time);
 1409              		.loc 1 508 0
 1410 002c 7868     		ldr	r0, [r7, #4]
 1411 002e FFF7FEFF 		bl	setTime
 1412              	.L53:
 509:notoriOS.c    ****         }
 510:notoriOS.c    ****         
 511:notoriOS.c    ****         // Get GPS coordinates
 512:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 513:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 514:notoriOS.c    ****         modem_power_down();
 1413              		.loc 1 514 0
 1414 0032 FFF7FEFF 		bl	modem_power_down
 515:notoriOS.c    ****         return 0u;
 1415              		.loc 1 515 0
 1416 0036 0023     		movs	r3, #0
 1417 0038 00E0     		b	.L54
 1418              	.L52:
 1419              	.LBE8:
 516:notoriOS.c    ****         
 517:notoriOS.c    ****     }
 518:notoriOS.c    ****     
 519:notoriOS.c    ****     return 1u;
 1420              		.loc 1 519 0
 1421 003a 0123     		movs	r3, #1
 1422              	.L54:
 520:notoriOS.c    **** }
 1423              		.loc 1 520 0
 1424 003c 1846     		mov	r0, r3
 1425 003e 0837     		adds	r7, r7, #8
 1426              		.cfi_def_cfa_offset 8
 1427 0040 BD46     		mov	sp, r7
 1428              		.cfi_def_cfa_register 13
 1429              		@ sp needed
 1430 0042 80BD     		pop	{r7, pc}
 1431              		.cfi_endproc
 1432              	.LFE75:
 1433              		.size	configureRemoteParams, .-configureRemoteParams
 1434              		.section	.rodata
 1435 026f 00       		.align	2
 1436              	.LC35:
 1437 0270 256C6400 		.ascii	"%ld\000"
 1438              		.align	2
 1439              	.LC36:
 1440 0274 6D617862 		.ascii	"maxbotix_depth=%s\000"
 1440      6F746978 
 1440      5F646570 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 37


 1440      74683D25 
 1440      7300
 1441 0286 0000     		.align	2
 1442              	.LC37:
 1443 0288 6D617862 		.ascii	"maxbotix_depth\000"
 1443      6F746978 
 1443      5F646570 
 1443      746800
 1444 0297 00       		.align	2
 1445              	.LC38:
 1446 0298 612B00   		.ascii	"a+\000"
 1447 029b 00       		.align	2
 1448              	.LC39:
 1449 029c 206D6178 		.ascii	" maxbotix_depth: \000"
 1449      626F7469 
 1449      785F6465 
 1449      7074683A 
 1449      2000
 1450 02ae 0000     		.align	2
 1451              	.LC40:
 1452 02b0 2000     		.ascii	" \000"
 1453 02b2 0000     		.align	2
 1454              	.LC41:
 1455 02b4 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 1455      64206E6F 
 1455      74206765 
 1455      74207661 
 1455      6C696420 
 1456              		.global	__aeabi_f2d
 1457              		.align	2
 1458              	.LC42:
 1459 02e0 252E3266 		.ascii	"%.2f\000"
 1459      00
 1460 02e5 000000   		.align	2
 1461              	.LC43:
 1462 02e8 765F6261 		.ascii	"v_bat=%s\000"
 1462      743D2573 
 1462      00
 1463 02f1 000000   		.align	2
 1464              	.LC44:
 1465 02f4 765F6261 		.ascii	"v_bat\000"
 1465      7400
 1466 02fa 0000     		.align	2
 1467              	.LC45:
 1468 02fc 20766261 		.ascii	" vbat: \000"
 1468      743A2000 
 1469              		.align	2
 1470              	.LC46:
 1471 0304 70726573 		.ascii	"pressure_current=%s\000"
 1471      73757265 
 1471      5F637572 
 1471      72656E74 
 1471      3D257300 
 1472              		.align	2
 1473              	.LC47:
 1474 0318 70726573 		.ascii	"pressure_current\000"
 1474      73757265 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 38


 1474      5F637572 
 1474      72656E74 
 1474      00
 1475 0329 000000   		.align	2
 1476              	.LC48:
 1477 032c 20707265 		.ascii	" pressure_current: \000"
 1477      73737572 
 1477      655F6375 
 1477      7272656E 
 1477      743A2000 
 1478              		.align	2
 1479              	.LC49:
 1480 0340 70726573 		.ascii	"pressure_depth=%s\000"
 1480      73757265 
 1480      5F646570 
 1480      74683D25 
 1480      7300
 1481 0352 0000     		.align	2
 1482              	.LC50:
 1483 0354 70726573 		.ascii	"pressure_depth\000"
 1483      73757265 
 1483      5F646570 
 1483      746800
 1484 0363 00       		.align	2
 1485              	.LC51:
 1486 0364 20707265 		.ascii	" pressure_depth: \000"
 1486      73737572 
 1486      655F6465 
 1486      7074683A 
 1486      2000
 1487 0376 0000     		.align	2
 1488              	.LC52:
 1489 0378 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1489      64206E6F 
 1489      74206765 
 1489      74207661 
 1489      6C696420 
 1490              		.section	.text.makeMeasurements,"ax",%progbits
 1491              		.align	2
 1492              		.global	makeMeasurements
 1493              		.thumb
 1494              		.thumb_func
 1495              		.type	makeMeasurements, %function
 1496              	makeMeasurements:
 1497              	.LFB76:
 521:notoriOS.c    **** 
 522:notoriOS.c    **** 
 523:notoriOS.c    **** // ==============================================
 524:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 525:notoriOS.c    **** // Returns 0 when finished
 526:notoriOS.c    **** // ==============================================
 527:notoriOS.c    **** uint8 makeMeasurements(){
 1498              		.loc 1 527 0
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 112
 1501              		@ frame_needed = 1, uses_anonymous_args = 0
 1502 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 39


 1503              		.cfi_def_cfa_offset 12
 1504              		.cfi_offset 4, -12
 1505              		.cfi_offset 7, -8
 1506              		.cfi_offset 14, -4
 1507 0002 9FB0     		sub	sp, sp, #124
 1508              		.cfi_def_cfa_offset 136
 1509 0004 02AF     		add	r7, sp, #8
 1510              		.cfi_def_cfa 7, 128
 528:notoriOS.c    ****     
 529:notoriOS.c    ****     // Get clock time and save to timeStamp
 530:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1511              		.loc 1 530 0
 1512 0006 FFF7FEFF 		bl	getTimeStamp
 1513 000a F866     		str	r0, [r7, #108]
 531:notoriOS.c    ****     char c_timeStamp[32];
 532:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1514              		.loc 1 532 0
 1515 000c 07F14C00 		add	r0, r7, #76
 1516 0010 FB6E     		ldr	r3, [r7, #108]
 1517 0012 834A     		ldr	r2, .L63
 1518 0014 2021     		movs	r1, #32
 1519 0016 FFF7FEFF 		bl	snprintf
 533:notoriOS.c    ****     
 534:notoriOS.c    ****     // Holds string for value that will be written 
 535:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 536:notoriOS.c    ****     
 537:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 538:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 1520              		.loc 1 538 0
 1521 001a 824B     		ldr	r3, .L63+4
 1522 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1523 001e 002B     		cmp	r3, #0
 1524 0020 3BD1     		bne	.L56
 1525              	.LBB9:
 539:notoriOS.c    ****         
 540:notoriOS.c    ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
 541:notoriOS.c    ****         level_sensor_t m_level_sensor;
 542:notoriOS.c    ****         
 543:notoriOS.c    ****         // Take level sensor readings and save them to m_level_sensor
 544:notoriOS.c    ****         m_level_sensor = level_sensor_take_reading();
 1526              		.loc 1 544 0
 1527 0022 07F10803 		add	r3, r7, #8
 1528 0026 1846     		mov	r0, r3
 1529 0028 FFF7FEFF 		bl	level_sensor_take_reading
 545:notoriOS.c    ****     
 546:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 547:notoriOS.c    ****         if(m_level_sensor.num_valid_readings > 0){
 1530              		.loc 1 547 0
 1531 002c 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 1532 0030 002B     		cmp	r3, #0
 1533 0032 2ED0     		beq	.L57
 548:notoriOS.c    ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 1534              		.loc 1 548 0
 1535 0034 B7F91E30 		ldrsh	r3, [r7, #30]
 1536 0038 07F13800 		add	r0, r7, #56
 1537 003c 7A4A     		ldr	r2, .L63+8
 1538 003e 1421     		movs	r1, #20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 40


 1539 0040 FFF7FEFF 		bl	snprintf
 549:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 1540              		.loc 1 549 0
 1541 0044 07F13803 		add	r3, r7, #56
 1542 0048 1A46     		mov	r2, r3
 1543 004a 7849     		ldr	r1, .L63+12
 1544 004c 0020     		movs	r0, #0
 1545 004e FFF7FEFF 		bl	printNotif
 550:notoriOS.c    ****             pushData("maxbotix_depth",value,timeStamp);
 1546              		.loc 1 550 0
 1547 0052 07F13803 		add	r3, r7, #56
 1548 0056 FA6E     		ldr	r2, [r7, #108]
 1549 0058 1946     		mov	r1, r3
 1550 005a 7548     		ldr	r0, .L63+16
 1551 005c FFF7FEFF 		bl	pushData
 551:notoriOS.c    ****             
 552:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 553:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1552              		.loc 1 553 0
 1553 0060 07F14C03 		add	r3, r7, #76
 1554 0064 1A46     		mov	r2, r3
 1555 0066 7349     		ldr	r1, .L63+20
 1556 0068 7348     		ldr	r0, .L63+24
 1557 006a FFF7FEFF 		bl	SD_write
 554:notoriOS.c    ****             SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 1558              		.loc 1 554 0
 1559 006e 734A     		ldr	r2, .L63+28
 1560 0070 7049     		ldr	r1, .L63+20
 1561 0072 7148     		ldr	r0, .L63+24
 1562 0074 FFF7FEFF 		bl	SD_write
 555:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1563              		.loc 1 555 0
 1564 0078 07F13803 		add	r3, r7, #56
 1565 007c 1A46     		mov	r2, r3
 1566 007e 6D49     		ldr	r1, .L63+20
 1567 0080 6D48     		ldr	r0, .L63+24
 1568 0082 FFF7FEFF 		bl	SD_write
 556:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1569              		.loc 1 556 0
 1570 0086 6E4A     		ldr	r2, .L63+32
 1571 0088 6A49     		ldr	r1, .L63+20
 1572 008a 6B48     		ldr	r0, .L63+24
 1573 008c FFF7FEFF 		bl	SD_write
 1574 0090 03E0     		b	.L56
 1575              	.L57:
 557:notoriOS.c    ****         }else{
 558:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 1576              		.loc 1 558 0
 1577 0092 6C49     		ldr	r1, .L63+36
 1578 0094 0220     		movs	r0, #2
 1579 0096 FFF7FEFF 		bl	printNotif
 1580              	.L56:
 1581              	.LBE9:
 559:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 560:notoriOS.c    ****         }
 561:notoriOS.c    ****     }
 562:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 41


 563:notoriOS.c    ****     
 564:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 565:notoriOS.c    ****     voltage_t m_voltage;
 566:notoriOS.c    ****     
 567:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 568:notoriOS.c    ****     m_voltage = voltage_take_readings();
 1582              		.loc 1 568 0
 1583 009a 07F12403 		add	r3, r7, #36
 1584 009e 1846     		mov	r0, r3
 1585 00a0 FFF7FEFF 		bl	voltage_take_readings
 569:notoriOS.c    ****     
 570:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 571:notoriOS.c    ****     if(m_voltage.valid){
 1586              		.loc 1 571 0
 1587 00a4 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 1588 00a8 002B     		cmp	r3, #0
 1589 00aa 00F0AF80 		beq	.L59
 572:notoriOS.c    ****         // battery voltage data
 573:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 1590              		.loc 1 573 0
 1591 00ae 7B6A     		ldr	r3, [r7, #36]	@ float
 1592 00b0 1846     		mov	r0, r3
 1593 00b2 FFF7FEFF 		bl	__aeabi_f2d
 1594 00b6 0346     		mov	r3, r0
 1595 00b8 0C46     		mov	r4, r1
 1596 00ba 07F13800 		add	r0, r7, #56
 1597 00be CDE90034 		strd	r3, [sp]
 1598 00c2 614A     		ldr	r2, .L63+40
 1599 00c4 1421     		movs	r1, #20
 1600 00c6 FFF7FEFF 		bl	snprintf
 574:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 1601              		.loc 1 574 0
 1602 00ca 07F13803 		add	r3, r7, #56
 1603 00ce 1A46     		mov	r2, r3
 1604 00d0 5E49     		ldr	r1, .L63+44
 1605 00d2 0020     		movs	r0, #0
 1606 00d4 FFF7FEFF 		bl	printNotif
 575:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
 1607              		.loc 1 575 0
 1608 00d8 07F13803 		add	r3, r7, #56
 1609 00dc FA6E     		ldr	r2, [r7, #108]
 1610 00de 1946     		mov	r1, r3
 1611 00e0 5B48     		ldr	r0, .L63+48
 1612 00e2 FFF7FEFF 		bl	pushData
 576:notoriOS.c    ****         
 577:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 578:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 1613              		.loc 1 578 0
 1614 00e6 564A     		ldr	r2, .L63+32
 1615 00e8 5249     		ldr	r1, .L63+20
 1616 00ea 5348     		ldr	r0, .L63+24
 1617 00ec FFF7FEFF 		bl	SD_write
 579:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 1618              		.loc 1 579 0
 1619 00f0 07F14C03 		add	r3, r7, #76
 1620 00f4 1A46     		mov	r2, r3
 1621 00f6 4F49     		ldr	r1, .L63+20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 42


 1622 00f8 4F48     		ldr	r0, .L63+24
 1623 00fa FFF7FEFF 		bl	SD_write
 580:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 1624              		.loc 1 580 0
 1625 00fe 554A     		ldr	r2, .L63+52
 1626 0100 4C49     		ldr	r1, .L63+20
 1627 0102 4D48     		ldr	r0, .L63+24
 1628 0104 FFF7FEFF 		bl	SD_write
 581:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1629              		.loc 1 581 0
 1630 0108 07F13803 		add	r3, r7, #56
 1631 010c 1A46     		mov	r2, r3
 1632 010e 4949     		ldr	r1, .L63+20
 1633 0110 4948     		ldr	r0, .L63+24
 1634 0112 FFF7FEFF 		bl	SD_write
 582:notoriOS.c    ****         
 583:notoriOS.c    ****         // If node type is green infrastructure node, take pressure transducer measurements
 584:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE){
 1635              		.loc 1 584 0
 1636 0116 434B     		ldr	r3, .L63+4
 1637 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1638 011a 012B     		cmp	r3, #1
 1639 011c 7AD1     		bne	.L61
 1640              	.LBB10:
 585:notoriOS.c    ****             
 586:notoriOS.c    ****             // pressure transducer voltage (V) data
 587:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 588:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 589:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 590:notoriOS.c    ****             
 591:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 592:notoriOS.c    ****             pressure_t m_pressure;
 593:notoriOS.c    ****             
 594:notoriOS.c    ****             // Make pressure transducer calculators for current and depth
 595:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 1641              		.loc 1 595 0
 1642 011e 3C46     		mov	r4, r7
 1643 0120 6A46     		mov	r2, sp
 1644 0122 07F13003 		add	r3, r7, #48
 1645 0126 93E80300 		ldmia	r3, {r0, r1}
 1646 012a 82E80300 		stmia	r2, {r0, r1}
 1647 012e 07F12403 		add	r3, r7, #36
 1648 0132 0ECB     		ldmia	r3, {r1, r2, r3}
 1649 0134 2046     		mov	r0, r4
 1650 0136 FFF7FEFF 		bl	pressure_calculations
 596:notoriOS.c    ****             
 597:notoriOS.c    ****             // pressure transducer current (mA) data
 598:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 1651              		.loc 1 598 0
 1652 013a 3B68     		ldr	r3, [r7]	@ float
 1653 013c 1846     		mov	r0, r3
 1654 013e FFF7FEFF 		bl	__aeabi_f2d
 1655 0142 0346     		mov	r3, r0
 1656 0144 0C46     		mov	r4, r1
 1657 0146 07F13800 		add	r0, r7, #56
 1658 014a CDE90034 		strd	r3, [sp]
 1659 014e 3E4A     		ldr	r2, .L63+40
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 43


 1660 0150 1421     		movs	r1, #20
 1661 0152 FFF7FEFF 		bl	snprintf
 599:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 1662              		.loc 1 599 0
 1663 0156 07F13803 		add	r3, r7, #56
 1664 015a 1A46     		mov	r2, r3
 1665 015c 3E49     		ldr	r1, .L63+56
 1666 015e 0020     		movs	r0, #0
 1667 0160 FFF7FEFF 		bl	printNotif
 600:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 1668              		.loc 1 600 0
 1669 0164 07F13803 		add	r3, r7, #56
 1670 0168 FA6E     		ldr	r2, [r7, #108]
 1671 016a 1946     		mov	r1, r3
 1672 016c 3B48     		ldr	r0, .L63+60
 1673 016e FFF7FEFF 		bl	pushData
 601:notoriOS.c    ****             
 602:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 603:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1674              		.loc 1 603 0
 1675 0172 334A     		ldr	r2, .L63+32
 1676 0174 2F49     		ldr	r1, .L63+20
 1677 0176 3048     		ldr	r0, .L63+24
 1678 0178 FFF7FEFF 		bl	SD_write
 604:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1679              		.loc 1 604 0
 1680 017c 07F14C03 		add	r3, r7, #76
 1681 0180 1A46     		mov	r2, r3
 1682 0182 2C49     		ldr	r1, .L63+20
 1683 0184 2C48     		ldr	r0, .L63+24
 1684 0186 FFF7FEFF 		bl	SD_write
 605:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 1685              		.loc 1 605 0
 1686 018a 354A     		ldr	r2, .L63+64
 1687 018c 2949     		ldr	r1, .L63+20
 1688 018e 2A48     		ldr	r0, .L63+24
 1689 0190 FFF7FEFF 		bl	SD_write
 606:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1690              		.loc 1 606 0
 1691 0194 07F13803 		add	r3, r7, #56
 1692 0198 1A46     		mov	r2, r3
 1693 019a 2649     		ldr	r1, .L63+20
 1694 019c 2648     		ldr	r0, .L63+24
 1695 019e FFF7FEFF 		bl	SD_write
 607:notoriOS.c    ****             
 608:notoriOS.c    ****             // pressure transducer depth (ft) data
 609:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 1696              		.loc 1 609 0
 1697 01a2 7B68     		ldr	r3, [r7, #4]	@ float
 1698 01a4 1846     		mov	r0, r3
 1699 01a6 FFF7FEFF 		bl	__aeabi_f2d
 1700 01aa 0346     		mov	r3, r0
 1701 01ac 0C46     		mov	r4, r1
 1702 01ae 07F13800 		add	r0, r7, #56
 1703 01b2 CDE90034 		strd	r3, [sp]
 1704 01b6 244A     		ldr	r2, .L63+40
 1705 01b8 1421     		movs	r1, #20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 44


 1706 01ba FFF7FEFF 		bl	snprintf
 610:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 1707              		.loc 1 610 0
 1708 01be 07F13803 		add	r3, r7, #56
 1709 01c2 1A46     		mov	r2, r3
 1710 01c4 2749     		ldr	r1, .L63+68
 1711 01c6 0020     		movs	r0, #0
 1712 01c8 FFF7FEFF 		bl	printNotif
 611:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 1713              		.loc 1 611 0
 1714 01cc 07F13803 		add	r3, r7, #56
 1715 01d0 FA6E     		ldr	r2, [r7, #108]
 1716 01d2 1946     		mov	r1, r3
 1717 01d4 2448     		ldr	r0, .L63+72
 1718 01d6 FFF7FEFF 		bl	pushData
 612:notoriOS.c    ****             
 613:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 614:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1719              		.loc 1 614 0
 1720 01da 194A     		ldr	r2, .L63+32
 1721 01dc 1549     		ldr	r1, .L63+20
 1722 01de 1648     		ldr	r0, .L63+24
 1723 01e0 FFF7FEFF 		bl	SD_write
 615:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1724              		.loc 1 615 0
 1725 01e4 07F14C03 		add	r3, r7, #76
 1726 01e8 1A46     		mov	r2, r3
 1727 01ea 1249     		ldr	r1, .L63+20
 1728 01ec 1248     		ldr	r0, .L63+24
 1729 01ee FFF7FEFF 		bl	SD_write
 616:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
 1730              		.loc 1 616 0
 1731 01f2 1E4A     		ldr	r2, .L63+76
 1732 01f4 0F49     		ldr	r1, .L63+20
 1733 01f6 1048     		ldr	r0, .L63+24
 1734 01f8 FFF7FEFF 		bl	SD_write
 617:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1735              		.loc 1 617 0
 1736 01fc 07F13803 		add	r3, r7, #56
 1737 0200 1A46     		mov	r2, r3
 1738 0202 0C49     		ldr	r1, .L63+20
 1739 0204 0C48     		ldr	r0, .L63+24
 1740 0206 FFF7FEFF 		bl	SD_write
 1741 020a 03E0     		b	.L61
 1742              	.L59:
 1743              	.LBE10:
 618:notoriOS.c    ****         }    
 619:notoriOS.c    ****     }else{
 620:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 1744              		.loc 1 620 0
 1745 020c 1849     		ldr	r1, .L63+80
 1746 020e 0220     		movs	r0, #2
 1747 0210 FFF7FEFF 		bl	printNotif
 1748              	.L61:
 621:notoriOS.c    ****     }
 622:notoriOS.c    ****     
 623:notoriOS.c    ****     return 0u;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 45


 1749              		.loc 1 623 0
 1750 0214 0023     		movs	r3, #0
 624:notoriOS.c    **** }
 1751              		.loc 1 624 0
 1752 0216 1846     		mov	r0, r3
 1753 0218 7437     		adds	r7, r7, #116
 1754              		.cfi_def_cfa_offset 12
 1755 021a BD46     		mov	sp, r7
 1756              		.cfi_def_cfa_register 13
 1757              		@ sp needed
 1758 021c 90BD     		pop	{r4, r7, pc}
 1759              	.L64:
 1760 021e 00BF     		.align	2
 1761              	.L63:
 1762 0220 70020000 		.word	.LC35
 1763 0224 00000000 		.word	updatable_parameters
 1764 0228 3C000000 		.word	.LC2
 1765 022c 74020000 		.word	.LC36
 1766 0230 88020000 		.word	.LC37
 1767 0234 98020000 		.word	.LC38
 1768 0238 00000000 		.word	Data_fileName
 1769 023c 9C020000 		.word	.LC39
 1770 0240 B0020000 		.word	.LC40
 1771 0244 B4020000 		.word	.LC41
 1772 0248 E0020000 		.word	.LC42
 1773 024c E8020000 		.word	.LC43
 1774 0250 F4020000 		.word	.LC44
 1775 0254 FC020000 		.word	.LC45
 1776 0258 04030000 		.word	.LC46
 1777 025c 18030000 		.word	.LC47
 1778 0260 2C030000 		.word	.LC48
 1779 0264 40030000 		.word	.LC49
 1780 0268 54030000 		.word	.LC50
 1781 026c 64030000 		.word	.LC51
 1782 0270 78030000 		.word	.LC52
 1783              		.cfi_endproc
 1784              	.LFE76:
 1785              		.size	makeMeasurements, .-makeMeasurements
 1786              		.section	.rodata
 1787 039f 00       		.align	2
 1788              	.LC53:
 1789 03a0 4572726F 		.ascii	"Error setting system time.\000"
 1789      72207365 
 1789      7474696E 
 1789      67207379 
 1789      7374656D 
 1790              		.section	.text.setTime,"ax",%progbits
 1791              		.align	2
 1792              		.global	setTime
 1793              		.thumb
 1794              		.thumb_func
 1795              		.type	setTime, %function
 1796              	setTime:
 1797              	.LFB77:
 625:notoriOS.c    **** 
 626:notoriOS.c    **** // ==============================================
 627:notoriOS.c    **** // Set the system time
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 46


 628:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 629:notoriOS.c    **** // ==============================================
 630:notoriOS.c    **** uint8 setTime(long timeStamp){
 1798              		.loc 1 630 0
 1799              		.cfi_startproc
 1800              		@ args = 0, pretend = 0, frame = 24
 1801              		@ frame_needed = 1, uses_anonymous_args = 0
 1802 0000 80B5     		push	{r7, lr}
 1803              		.cfi_def_cfa_offset 8
 1804              		.cfi_offset 7, -8
 1805              		.cfi_offset 14, -4
 1806 0002 86B0     		sub	sp, sp, #24
 1807              		.cfi_def_cfa_offset 32
 1808 0004 00AF     		add	r7, sp, #0
 1809              		.cfi_def_cfa_register 7
 1810 0006 7860     		str	r0, [r7, #4]
 631:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 632:notoriOS.c    ****     if(timeStamp <=0){
 1811              		.loc 1 632 0
 1812 0008 7B68     		ldr	r3, [r7, #4]
 1813 000a 002B     		cmp	r3, #0
 1814 000c 05DC     		bgt	.L66
 633:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 1815              		.loc 1 633 0
 1816 000e 1849     		ldr	r1, .L68
 1817 0010 0220     		movs	r0, #2
 1818 0012 FFF7FEFF 		bl	printNotif
 634:notoriOS.c    ****         return 0;  
 1819              		.loc 1 634 0
 1820 0016 0023     		movs	r3, #0
 1821 0018 25E0     		b	.L67
 1822              	.L66:
 635:notoriOS.c    ****     }
 636:notoriOS.c    ****     // Create a new pointer t of data structure tm
 637:notoriOS.c    ****     struct tm * t;
 638:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 639:notoriOS.c    ****     t = gmtime(&timeStamp);
 1823              		.loc 1 639 0
 1824 001a 3B1D     		adds	r3, r7, #4
 1825 001c 1846     		mov	r0, r3
 1826 001e FFF7FEFF 		bl	gmtime
 1827 0022 7861     		str	r0, [r7, #20]
 640:notoriOS.c    ****     
 641:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 642:notoriOS.c    ****     RTC_TIME_DATE localTime;
 643:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 1828              		.loc 1 643 0
 1829 0024 7B69     		ldr	r3, [r7, #20]
 1830 0026 1B68     		ldr	r3, [r3]
 1831 0028 DBB2     		uxtb	r3, r3
 1832 002a 3B72     		strb	r3, [r7, #8]
 644:notoriOS.c    ****     localTime.Min = t->tm_min;
 1833              		.loc 1 644 0
 1834 002c 7B69     		ldr	r3, [r7, #20]
 1835 002e 5B68     		ldr	r3, [r3, #4]
 1836 0030 DBB2     		uxtb	r3, r3
 1837 0032 7B72     		strb	r3, [r7, #9]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 47


 645:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 1838              		.loc 1 645 0
 1839 0034 7B69     		ldr	r3, [r7, #20]
 1840 0036 9B68     		ldr	r3, [r3, #8]
 1841 0038 DBB2     		uxtb	r3, r3
 1842 003a BB72     		strb	r3, [r7, #10]
 646:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 1843              		.loc 1 646 0
 1844 003c 7B69     		ldr	r3, [r7, #20]
 1845 003e 5B69     		ldr	r3, [r3, #20]
 1846 0040 9BB2     		uxth	r3, r3
 1847 0042 03F26C73 		addw	r3, r3, #1900
 1848 0046 9BB2     		uxth	r3, r3
 1849 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 647:notoriOS.c    ****     localTime.Month = t->tm_mon;
 1850              		.loc 1 647 0
 1851 004a 7B69     		ldr	r3, [r7, #20]
 1852 004c 1B69     		ldr	r3, [r3, #16]
 1853 004e DBB2     		uxtb	r3, r3
 1854 0050 3B74     		strb	r3, [r7, #16]
 648:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 1855              		.loc 1 648 0
 1856 0052 7B69     		ldr	r3, [r7, #20]
 1857 0054 DB68     		ldr	r3, [r3, #12]
 1858 0056 DBB2     		uxtb	r3, r3
 1859 0058 3B73     		strb	r3, [r7, #12]
 649:notoriOS.c    **** 
 650:notoriOS.c    ****     // Writes time and date values as current time and date.
 651:notoriOS.c    ****     RTC_WriteTime(&localTime);
 1860              		.loc 1 651 0
 1861 005a 07F10803 		add	r3, r7, #8
 1862 005e 1846     		mov	r0, r3
 1863 0060 FFF7FEFF 		bl	RTC_WriteTime
 652:notoriOS.c    ****     
 653:notoriOS.c    ****     // Return 1 when the system time was set properly.
 654:notoriOS.c    ****     return 1;
 1864              		.loc 1 654 0
 1865 0064 0123     		movs	r3, #1
 1866              	.L67:
 655:notoriOS.c    **** }
 1867              		.loc 1 655 0
 1868 0066 1846     		mov	r0, r3
 1869 0068 1837     		adds	r7, r7, #24
 1870              		.cfi_def_cfa_offset 8
 1871 006a BD46     		mov	sp, r7
 1872              		.cfi_def_cfa_register 13
 1873              		@ sp needed
 1874 006c 80BD     		pop	{r7, pc}
 1875              	.L69:
 1876 006e 00BF     		.align	2
 1877              	.L68:
 1878 0070 A0030000 		.word	.LC53
 1879              		.cfi_endproc
 1880              	.LFE77:
 1881              		.size	setTime, .-setTime
 1882              		.section	.rodata
 1883 03bb 00       		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 48


 1884              	.LC54:
 1885 03bc 75706772 		.ascii	"upgrade.hex\000"
 1885      6164652E 
 1885      68657800 
 1886              		.section	.text.upgraded,"ax",%progbits
 1887              		.align	2
 1888              		.global	upgraded
 1889              		.thumb
 1890              		.thumb_func
 1891              		.type	upgraded, %function
 1892              	upgraded:
 1893              	.LFB78:
 656:notoriOS.c    **** 
 657:notoriOS.c    **** //downloads and stores files on SD card
 658:notoriOS.c    **** 
 659:notoriOS.c    **** 
 660:notoriOS.c    **** 
 661:notoriOS.c    **** // ==============================================
 662:notoriOS.c    **** // Will they love it, will they hate it
 663:notoriOS.c    **** // Never fade it, I evade it
 664:notoriOS.c    **** // Cause I never really want to complicate it
 665:notoriOS.c    **** //      - Logic, Upgraded (2015)
 666:notoriOS.c    **** //
 667:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 668:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 669:notoriOS.c    **** // ==============================================
 670:notoriOS.c    **** 
 671:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 1894              		.loc 1 671 0
 1895              		.cfi_startproc
 1896              		@ args = 0, pretend = 0, frame = 232
 1897              		@ frame_needed = 1, uses_anonymous_args = 0
 1898 0000 80B5     		push	{r7, lr}
 1899              		.cfi_def_cfa_offset 8
 1900              		.cfi_offset 7, -8
 1901              		.cfi_offset 14, -4
 1902 0002 C0B0     		sub	sp, sp, #256
 1903              		.cfi_def_cfa_offset 264
 1904 0004 06AF     		add	r7, sp, #24
 1905              		.cfi_def_cfa 7, 240
 1906 0006 F860     		str	r0, [r7, #12]
 1907 0008 B960     		str	r1, [r7, #8]
 1908 000a 7A60     		str	r2, [r7, #4]
 672:notoriOS.c    ****     
 673:notoriOS.c    ****     uint8 upgrade_status = 0;
 1909              		.loc 1 673 0
 1910 000c 0023     		movs	r3, #0
 1911 000e 87F8E730 		strb	r3, [r7, #231]
 674:notoriOS.c    ****     
 675:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 676:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 1912              		.loc 1 676 0
 1913 0012 384B     		ldr	r3, .L74
 1914 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1915 0016 042B     		cmp	r3, #4
 1916 0018 02D0     		beq	.L71
 677:notoriOS.c    ****         return upgrade_status;//where valid = 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 49


 1917              		.loc 1 677 0
 1918 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 1919 001e 65E0     		b	.L73
 1920              	.L71:
 678:notoriOS.c    ****     }
 679:notoriOS.c    ****     
 680:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 1921              		.loc 1 680 0
 1922 0020 354A     		ldr	r2, .L74+4
 1923 0022 07F1D803 		add	r3, r7, #216
 1924 0026 07CA     		ldmia	r2, {r0, r1, r2}
 1925 0028 83E80700 		stmia	r3, {r0, r1, r2}
 681:notoriOS.c    ****     //delete file, if one exisits already
 682:notoriOS.c    ****     SD_rmfile(fileName);
 1926              		.loc 1 682 0
 1927 002c 07F1D803 		add	r3, r7, #216
 1928 0030 1846     		mov	r0, r3
 1929 0032 FFF7FEFF 		bl	SD_rmfile
 683:notoriOS.c    ****     
 684:notoriOS.c    ****     // Create http request
 685:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 1930              		.loc 1 685 0
 1931 0036 314B     		ldr	r3, .L74+8
 1932 0038 0593     		str	r3, [sp, #20]
 1933 003a 0023     		movs	r3, #0
 1934 003c 0493     		str	r3, [sp, #16]
 1935 003e 304B     		ldr	r3, .L74+12
 1936 0040 0393     		str	r3, [sp, #12]
 1937 0042 304B     		ldr	r3, .L74+16
 1938 0044 0293     		str	r3, [sp, #8]
 1939 0046 304B     		ldr	r3, .L74+20
 1940 0048 0193     		str	r3, [sp, #4]
 1941 004a BB68     		ldr	r3, [r7, #8]
 1942 004c 0093     		str	r3, [sp]
 1943 004e 7B68     		ldr	r3, [r7, #4]
 1944 0050 FA68     		ldr	r2, [r7, #12]
 1945 0052 2E49     		ldr	r1, .L74+24
 1946 0054 2E48     		ldr	r0, .L74+28
 1947 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 686:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1948              		.loc 1 686 0
 1949 005a 2D4A     		ldr	r2, .L74+28
 1950 005c 2D49     		ldr	r1, .L74+32
 1951 005e 0020     		movs	r0, #0
 1952 0060 FFF7FEFF 		bl	printNotif
 687:notoriOS.c    ****     // Create array portConfig of size 200 characters
 688:notoriOS.c    ****     char portConfig[200];
 689:notoriOS.c    ****     // Print port configurations
 690:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 1953              		.loc 1 690 0
 1954 0064 07F11000 		add	r0, r7, #16
 1955 0068 FB68     		ldr	r3, [r7, #12]
 1956 006a 0093     		str	r3, [sp]
 1957 006c BB68     		ldr	r3, [r7, #8]
 1958 006e 2A4A     		ldr	r2, .L74+36
 1959 0070 C821     		movs	r1, #200
 1960 0072 FFF7FEFF 		bl	snprintf
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 50


 691:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1961              		.loc 1 691 0
 1962 0076 07F11003 		add	r3, r7, #16
 1963 007a 1A46     		mov	r2, r3
 1964 007c 2749     		ldr	r1, .L74+40
 1965 007e 0020     		movs	r0, #0
 1966 0080 FFF7FEFF 		bl	printNotif
 692:notoriOS.c    ****     // AT command to configure the port
 693:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 1967              		.loc 1 693 0
 1968 0084 07F11003 		add	r3, r7, #16
 1969 0088 42F21072 		movw	r2, #10000
 1970 008c 2449     		ldr	r1, .L74+44
 1971 008e 1846     		mov	r0, r3
 1972 0090 FFF7FEFF 		bl	at_write_command
 1973 0094 0346     		mov	r3, r0
 1974 0096 87F8E730 		strb	r3, [r7, #231]
 694:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 695:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 696:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 1975              		.loc 1 696 0
 1976 009a 4FF47A72 		mov	r2, #1000
 1977 009e 2149     		ldr	r1, .L74+48
 1978 00a0 2148     		ldr	r0, .L74+52
 1979 00a2 FFF7FEFF 		bl	at_write_command
 1980 00a6 0346     		mov	r3, r0
 1981 00a8 87F8E730 		strb	r3, [r7, #231]
 697:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 698:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 1982              		.loc 1 698 0
 1983 00ac 1848     		ldr	r0, .L74+28
 1984 00ae FFF7FEFF 		bl	strlen
 1985 00b2 0346     		mov	r3, r0
 1986 00b4 1A46     		mov	r2, r3
 1987 00b6 164B     		ldr	r3, .L74+28
 1988 00b8 1344     		add	r3, r3, r2
 1989 00ba 1C49     		ldr	r1, .L74+56
 1990 00bc 1A46     		mov	r2, r3
 1991 00be 0B46     		mov	r3, r1
 1992 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 1993 00c2 1380     		strh	r3, [r2]	@ unaligned
 699:notoriOS.c    ****     // AT command to send http request
 700:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
 1994              		.loc 1 700 0
 1995 00c4 41F28832 		movw	r2, #5000
 1996 00c8 1549     		ldr	r1, .L74+44
 1997 00ca 1148     		ldr	r0, .L74+28
 1998 00cc FFF7FEFF 		bl	at_write_command
 1999 00d0 0346     		mov	r3, r0
 2000 00d2 87F8E730 		strb	r3, [r7, #231]
 701:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 702:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 703:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 2001              		.loc 1 703 0
 2002 00d6 41F28832 		movw	r2, #5000
 2003 00da 1549     		ldr	r1, .L74+60
 2004 00dc 1548     		ldr	r0, .L74+64
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 51


 2005 00de FFF7FEFF 		bl	at_write_command
 2006 00e2 0346     		mov	r3, r0
 2007 00e4 87F8E730 		strb	r3, [r7, #231]
 704:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 705:notoriOS.c    ****     
 706:notoriOS.c    ****     
 707:notoriOS.c    ****     return upgrade_status;
 2008              		.loc 1 707 0
 2009 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2010              	.L73:
 708:notoriOS.c    ****     
 709:notoriOS.c    **** }
 2011              		.loc 1 709 0 discriminator 1
 2012 00ec 1846     		mov	r0, r3
 2013 00ee E837     		adds	r7, r7, #232
 2014              		.cfi_def_cfa_offset 8
 2015 00f0 BD46     		mov	sp, r7
 2016              		.cfi_def_cfa_register 13
 2017              		@ sp needed
 2018 00f2 80BD     		pop	{r7, pc}
 2019              	.L75:
 2020              		.align	2
 2021              	.L74:
 2022 00f4 00000000 		.word	modem_state
 2023 00f8 BC030000 		.word	.LC54
 2024 00fc 68010000 		.word	.LC16
 2025 0100 6C010000 		.word	.LC17
 2026 0104 70010000 		.word	.LC18
 2027 0108 78010000 		.word	.LC19
 2028 010c 00000000 		.word	http_body
 2029 0110 00000000 		.word	http_request
 2030 0114 80010000 		.word	.LC20
 2031 0118 98010000 		.word	.LC21
 2032 011c B4010000 		.word	.LC22
 2033 0120 B8010000 		.word	.LC23
 2034 0124 E8010000 		.word	.LC26
 2035 0128 EC010000 		.word	.LC27
 2036 012c FC010000 		.word	.LC28
 2037 0130 18020000 		.word	.LC31
 2038 0134 20020000 		.word	.LC32
 2039              		.cfi_endproc
 2040              	.LFE78:
 2041              		.size	upgraded, .-upgraded
 2042              		.text
 2043              	.Letext0:
 2044              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2045              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2046              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2047              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 2048              		.file 6 "testing.h"
 2049              		.file 7 "level_sensor.h"
 2050              		.file 8 "voltages.h"
 2051              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2052              		.file 10 "data.h"
 2053              		.file 11 "modem.h"
 2054              		.file 12 "notoriOS.h"
 2055              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 52


 2056              		.section	.debug_info,"",%progbits
 2057              	.Ldebug_info0:
 2058 0000 E50B0000 		.4byte	0xbe5
 2059 0004 0400     		.2byte	0x4
 2060 0006 00000000 		.4byte	.Ldebug_abbrev0
 2061 000a 04       		.byte	0x4
 2062 000b 01       		.uleb128 0x1
 2063 000c 74000000 		.4byte	.LASF157
 2064 0010 0C       		.byte	0xc
 2065 0011 6F070000 		.4byte	.LASF158
 2066 0015 B7020000 		.4byte	.LASF159
 2067 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2068 001d 00000000 		.4byte	0
 2069 0021 00000000 		.4byte	.Ldebug_line0
 2070 0025 02       		.uleb128 0x2
 2071 0026 01       		.byte	0x1
 2072 0027 06       		.byte	0x6
 2073 0028 45000000 		.4byte	.LASF0
 2074 002c 02       		.uleb128 0x2
 2075 002d 01       		.byte	0x1
 2076 002e 08       		.byte	0x8
 2077 002f 8C050000 		.4byte	.LASF1
 2078 0033 02       		.uleb128 0x2
 2079 0034 02       		.byte	0x2
 2080 0035 05       		.byte	0x5
 2081 0036 06040000 		.4byte	.LASF2
 2082 003a 02       		.uleb128 0x2
 2083 003b 02       		.byte	0x2
 2084 003c 07       		.byte	0x7
 2085 003d 07070000 		.4byte	.LASF3
 2086 0041 03       		.uleb128 0x3
 2087 0042 CF060000 		.4byte	.LASF9
 2088 0046 02       		.byte	0x2
 2089 0047 3F       		.byte	0x3f
 2090 0048 4C000000 		.4byte	0x4c
 2091 004c 02       		.uleb128 0x2
 2092 004d 04       		.byte	0x4
 2093 004e 05       		.byte	0x5
 2094 004f FE010000 		.4byte	.LASF4
 2095 0053 02       		.uleb128 0x2
 2096 0054 04       		.byte	0x4
 2097 0055 07       		.byte	0x7
 2098 0056 43030000 		.4byte	.LASF5
 2099 005a 02       		.uleb128 0x2
 2100 005b 08       		.byte	0x8
 2101 005c 05       		.byte	0x5
 2102 005d 59010000 		.4byte	.LASF6
 2103 0061 02       		.uleb128 0x2
 2104 0062 08       		.byte	0x8
 2105 0063 07       		.byte	0x7
 2106 0064 08010000 		.4byte	.LASF7
 2107 0068 04       		.uleb128 0x4
 2108 0069 04       		.byte	0x4
 2109 006a 05       		.byte	0x5
 2110 006b 696E7400 		.ascii	"int\000"
 2111 006f 02       		.uleb128 0x2
 2112 0070 04       		.byte	0x4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 53


 2113 0071 07       		.byte	0x7
 2114 0072 EF020000 		.4byte	.LASF8
 2115 0076 03       		.uleb128 0x3
 2116 0077 84050000 		.4byte	.LASF10
 2117 007b 03       		.byte	0x3
 2118 007c 2C       		.byte	0x2c
 2119 007d 41000000 		.4byte	0x41
 2120 0081 05       		.uleb128 0x5
 2121 0082 20020000 		.4byte	.LASF11
 2122 0086 04       		.byte	0x4
 2123 0087 9201     		.2byte	0x192
 2124 0089 2C000000 		.4byte	0x2c
 2125 008d 05       		.uleb128 0x5
 2126 008e 08000000 		.4byte	.LASF12
 2127 0092 04       		.byte	0x4
 2128 0093 9301     		.2byte	0x193
 2129 0095 3A000000 		.4byte	0x3a
 2130 0099 05       		.uleb128 0x5
 2131 009a 64020000 		.4byte	.LASF13
 2132 009e 04       		.byte	0x4
 2133 009f 9401     		.2byte	0x194
 2134 00a1 53000000 		.4byte	0x53
 2135 00a5 05       		.uleb128 0x5
 2136 00a6 C9030000 		.4byte	.LASF14
 2137 00aa 04       		.byte	0x4
 2138 00ab 9501     		.2byte	0x195
 2139 00ad 25000000 		.4byte	0x25
 2140 00b1 05       		.uleb128 0x5
 2141 00b2 84070000 		.4byte	.LASF15
 2142 00b6 04       		.byte	0x4
 2143 00b7 9601     		.2byte	0x196
 2144 00b9 33000000 		.4byte	0x33
 2145 00bd 05       		.uleb128 0x5
 2146 00be 3E020000 		.4byte	.LASF16
 2147 00c2 04       		.byte	0x4
 2148 00c3 9701     		.2byte	0x197
 2149 00c5 4C000000 		.4byte	0x4c
 2150 00c9 02       		.uleb128 0x2
 2151 00ca 04       		.byte	0x4
 2152 00cb 04       		.byte	0x4
 2153 00cc 29050000 		.4byte	.LASF17
 2154 00d0 02       		.uleb128 0x2
 2155 00d1 08       		.byte	0x8
 2156 00d2 04       		.byte	0x4
 2157 00d3 08080000 		.4byte	.LASF18
 2158 00d7 02       		.uleb128 0x2
 2159 00d8 01       		.byte	0x1
 2160 00d9 08       		.byte	0x8
 2161 00da A8060000 		.4byte	.LASF19
 2162 00de 02       		.uleb128 0x2
 2163 00df 08       		.byte	0x8
 2164 00e0 04       		.byte	0x4
 2165 00e1 8A060000 		.4byte	.LASF20
 2166 00e5 02       		.uleb128 0x2
 2167 00e6 04       		.byte	0x4
 2168 00e7 07       		.byte	0x7
 2169 00e8 83040000 		.4byte	.LASF21
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 54


 2170 00ec 06       		.uleb128 0x6
 2171 00ed 04       		.byte	0x4
 2172 00ee D7000000 		.4byte	0xd7
 2173 00f2 07       		.uleb128 0x7
 2174 00f3 D7000000 		.4byte	0xd7
 2175 00f7 02010000 		.4byte	0x102
 2176 00fb 08       		.uleb128 0x8
 2177 00fc E5000000 		.4byte	0xe5
 2178 0100 17       		.byte	0x17
 2179 0101 00       		.byte	0
 2180 0102 09       		.uleb128 0x9
 2181 0103 0C       		.byte	0xc
 2182 0104 05       		.byte	0x5
 2183 0105 30       		.byte	0x30
 2184 0106 6B010000 		.4byte	0x16b
 2185 010a 0A       		.uleb128 0xa
 2186 010b 53656300 		.ascii	"Sec\000"
 2187 010f 05       		.byte	0x5
 2188 0110 32       		.byte	0x32
 2189 0111 81000000 		.4byte	0x81
 2190 0115 00       		.byte	0
 2191 0116 0A       		.uleb128 0xa
 2192 0117 4D696E00 		.ascii	"Min\000"
 2193 011b 05       		.byte	0x5
 2194 011c 33       		.byte	0x33
 2195 011d 81000000 		.4byte	0x81
 2196 0121 01       		.byte	0x1
 2197 0122 0B       		.uleb128 0xb
 2198 0123 1F010000 		.4byte	.LASF22
 2199 0127 05       		.byte	0x5
 2200 0128 34       		.byte	0x34
 2201 0129 81000000 		.4byte	0x81
 2202 012d 02       		.byte	0x2
 2203 012e 0B       		.uleb128 0xb
 2204 012f E9050000 		.4byte	.LASF23
 2205 0133 05       		.byte	0x5
 2206 0134 35       		.byte	0x35
 2207 0135 81000000 		.4byte	0x81
 2208 0139 03       		.byte	0x3
 2209 013a 0B       		.uleb128 0xb
 2210 013b 84030000 		.4byte	.LASF24
 2211 013f 05       		.byte	0x5
 2212 0140 36       		.byte	0x36
 2213 0141 81000000 		.4byte	0x81
 2214 0145 04       		.byte	0x4
 2215 0146 0B       		.uleb128 0xb
 2216 0147 BD070000 		.4byte	.LASF25
 2217 014b 05       		.byte	0x5
 2218 014c 37       		.byte	0x37
 2219 014d 8D000000 		.4byte	0x8d
 2220 0151 06       		.byte	0x6
 2221 0152 0B       		.uleb128 0xb
 2222 0153 02010000 		.4byte	.LASF26
 2223 0157 05       		.byte	0x5
 2224 0158 38       		.byte	0x38
 2225 0159 81000000 		.4byte	0x81
 2226 015d 08       		.byte	0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 55


 2227 015e 0B       		.uleb128 0xb
 2228 015f 79050000 		.4byte	.LASF27
 2229 0163 05       		.byte	0x5
 2230 0164 39       		.byte	0x39
 2231 0165 8D000000 		.4byte	0x8d
 2232 0169 0A       		.byte	0xa
 2233 016a 00       		.byte	0
 2234 016b 03       		.uleb128 0x3
 2235 016c CE040000 		.4byte	.LASF28
 2236 0170 05       		.byte	0x5
 2237 0171 3A       		.byte	0x3a
 2238 0172 76010000 		.4byte	0x176
 2239 0176 0C       		.uleb128 0xc
 2240 0177 02010000 		.4byte	0x102
 2241 017b 0D       		.uleb128 0xd
 2242 017c 8101     		.2byte	0x181
 2243 017e 06       		.byte	0x6
 2244 017f 0A       		.byte	0xa
 2245 0180 A9010000 		.4byte	0x1a9
 2246 0184 0B       		.uleb128 0xb
 2247 0185 6F050000 		.4byte	.LASF29
 2248 0189 06       		.byte	0x6
 2249 018a 0C       		.byte	0xc
 2250 018b A9010000 		.4byte	0x1a9
 2251 018f 00       		.byte	0
 2252 0190 0B       		.uleb128 0xb
 2253 0191 44070000 		.4byte	.LASF30
 2254 0195 06       		.byte	0x6
 2255 0196 0D       		.byte	0xd
 2256 0197 81000000 		.4byte	0x81
 2257 019b 80       		.byte	0x80
 2258 019c 0B       		.uleb128 0xb
 2259 019d 0B060000 		.4byte	.LASF31
 2260 01a1 06       		.byte	0x6
 2261 01a2 0F       		.byte	0xf
 2262 01a3 B9010000 		.4byte	0x1b9
 2263 01a7 81       		.byte	0x81
 2264 01a8 00       		.byte	0
 2265 01a9 07       		.uleb128 0x7
 2266 01aa D7000000 		.4byte	0xd7
 2267 01ae B9010000 		.4byte	0x1b9
 2268 01b2 08       		.uleb128 0x8
 2269 01b3 E5000000 		.4byte	0xe5
 2270 01b7 7F       		.byte	0x7f
 2271 01b8 00       		.byte	0
 2272 01b9 07       		.uleb128 0x7
 2273 01ba D7000000 		.4byte	0xd7
 2274 01be C9010000 		.4byte	0x1c9
 2275 01c2 08       		.uleb128 0x8
 2276 01c3 E5000000 		.4byte	0xe5
 2277 01c7 FF       		.byte	0xff
 2278 01c8 00       		.byte	0
 2279 01c9 03       		.uleb128 0x3
 2280 01ca F3050000 		.4byte	.LASF32
 2281 01ce 06       		.byte	0x6
 2282 01cf 10       		.byte	0x10
 2283 01d0 7B010000 		.4byte	0x17b
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 56


 2284 01d4 09       		.uleb128 0x9
 2285 01d5 1A       		.byte	0x1a
 2286 01d6 07       		.byte	0x7
 2287 01d7 10       		.byte	0x10
 2288 01d8 0D020000 		.4byte	0x20d
 2289 01dc 0B       		.uleb128 0xb
 2290 01dd 74020000 		.4byte	.LASF33
 2291 01e1 07       		.byte	0x7
 2292 01e2 11       		.byte	0x11
 2293 01e3 0D020000 		.4byte	0x20d
 2294 01e7 00       		.byte	0
 2295 01e8 0B       		.uleb128 0xb
 2296 01e9 F1060000 		.4byte	.LASF34
 2297 01ed 07       		.byte	0x7
 2298 01ee 12       		.byte	0x12
 2299 01ef B1000000 		.4byte	0xb1
 2300 01f3 16       		.byte	0x16
 2301 01f4 0B       		.uleb128 0xb
 2302 01f5 1B030000 		.4byte	.LASF35
 2303 01f9 07       		.byte	0x7
 2304 01fa 13       		.byte	0x13
 2305 01fb 81000000 		.4byte	0x81
 2306 01ff 18       		.byte	0x18
 2307 0200 0B       		.uleb128 0xb
 2308 0201 17000000 		.4byte	.LASF36
 2309 0205 07       		.byte	0x7
 2310 0206 14       		.byte	0x14
 2311 0207 81000000 		.4byte	0x81
 2312 020b 19       		.byte	0x19
 2313 020c 00       		.byte	0
 2314 020d 07       		.uleb128 0x7
 2315 020e B1000000 		.4byte	0xb1
 2316 0212 1D020000 		.4byte	0x21d
 2317 0216 08       		.uleb128 0x8
 2318 0217 E5000000 		.4byte	0xe5
 2319 021b 0A       		.byte	0xa
 2320 021c 00       		.byte	0
 2321 021d 03       		.uleb128 0x3
 2322 021e 2F050000 		.4byte	.LASF37
 2323 0222 07       		.byte	0x7
 2324 0223 15       		.byte	0x15
 2325 0224 D4010000 		.4byte	0x1d4
 2326 0228 09       		.uleb128 0x9
 2327 0229 14       		.byte	0x14
 2328 022a 08       		.byte	0x8
 2329 022b 11       		.byte	0x11
 2330 022c 6D020000 		.4byte	0x26d
 2331 0230 0B       		.uleb128 0xb
 2332 0231 74030000 		.4byte	.LASF38
 2333 0235 08       		.byte	0x8
 2334 0236 12       		.byte	0x12
 2335 0237 C9000000 		.4byte	0xc9
 2336 023b 00       		.byte	0
 2337 023c 0B       		.uleb128 0xb
 2338 023d A5010000 		.4byte	.LASF39
 2339 0241 08       		.byte	0x8
 2340 0242 13       		.byte	0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 57


 2341 0243 C9000000 		.4byte	0xc9
 2342 0247 04       		.byte	0x4
 2343 0248 0B       		.uleb128 0xb
 2344 0249 B3010000 		.4byte	.LASF40
 2345 024d 08       		.byte	0x8
 2346 024e 14       		.byte	0x14
 2347 024f C9000000 		.4byte	0xc9
 2348 0253 08       		.byte	0x8
 2349 0254 0B       		.uleb128 0xb
 2350 0255 0B050000 		.4byte	.LASF41
 2351 0259 08       		.byte	0x8
 2352 025a 15       		.byte	0x15
 2353 025b C9000000 		.4byte	0xc9
 2354 025f 0C       		.byte	0xc
 2355 0260 0B       		.uleb128 0xb
 2356 0261 7C060000 		.4byte	.LASF42
 2357 0265 08       		.byte	0x8
 2358 0266 16       		.byte	0x16
 2359 0267 81000000 		.4byte	0x81
 2360 026b 10       		.byte	0x10
 2361 026c 00       		.byte	0
 2362 026d 03       		.uleb128 0x3
 2363 026e 0F080000 		.4byte	.LASF43
 2364 0272 08       		.byte	0x8
 2365 0273 17       		.byte	0x17
 2366 0274 28020000 		.4byte	0x228
 2367 0278 09       		.uleb128 0x9
 2368 0279 08       		.byte	0x8
 2369 027a 08       		.byte	0x8
 2370 027b 19       		.byte	0x19
 2371 027c 99020000 		.4byte	0x299
 2372 0280 0B       		.uleb128 0xb
 2373 0281 6B060000 		.4byte	.LASF44
 2374 0285 08       		.byte	0x8
 2375 0286 1A       		.byte	0x1a
 2376 0287 C9000000 		.4byte	0xc9
 2377 028b 00       		.byte	0
 2378 028c 0B       		.uleb128 0xb
 2379 028d D5050000 		.4byte	.LASF45
 2380 0291 08       		.byte	0x8
 2381 0292 1B       		.byte	0x1b
 2382 0293 C9000000 		.4byte	0xc9
 2383 0297 04       		.byte	0x4
 2384 0298 00       		.byte	0
 2385 0299 03       		.uleb128 0x3
 2386 029a C7070000 		.4byte	.LASF46
 2387 029e 08       		.byte	0x8
 2388 029f 1C       		.byte	0x1c
 2389 02a0 78020000 		.4byte	0x278
 2390 02a4 0E       		.uleb128 0xe
 2391 02a5 746D00   		.ascii	"tm\000"
 2392 02a8 24       		.byte	0x24
 2393 02a9 09       		.byte	0x9
 2394 02aa 21       		.byte	0x21
 2395 02ab 1C030000 		.4byte	0x31c
 2396 02af 0B       		.uleb128 0xb
 2397 02b0 32070000 		.4byte	.LASF47
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 58


 2398 02b4 09       		.byte	0x9
 2399 02b5 23       		.byte	0x23
 2400 02b6 68000000 		.4byte	0x68
 2401 02ba 00       		.byte	0
 2402 02bb 0B       		.uleb128 0xb
 2403 02bc 65040000 		.4byte	.LASF48
 2404 02c0 09       		.byte	0x9
 2405 02c1 24       		.byte	0x24
 2406 02c2 68000000 		.4byte	0x68
 2407 02c6 04       		.byte	0x4
 2408 02c7 0B       		.uleb128 0xb
 2409 02c8 0F000000 		.4byte	.LASF49
 2410 02cc 09       		.byte	0x9
 2411 02cd 25       		.byte	0x25
 2412 02ce 68000000 		.4byte	0x68
 2413 02d2 08       		.byte	0x8
 2414 02d3 0B       		.uleb128 0xb
 2415 02d4 21070000 		.4byte	.LASF50
 2416 02d8 09       		.byte	0x9
 2417 02d9 26       		.byte	0x26
 2418 02da 68000000 		.4byte	0x68
 2419 02de 0C       		.byte	0xc
 2420 02df 0B       		.uleb128 0xb
 2421 02e0 9F020000 		.4byte	.LASF51
 2422 02e4 09       		.byte	0x9
 2423 02e5 27       		.byte	0x27
 2424 02e6 68000000 		.4byte	0x68
 2425 02ea 10       		.byte	0x10
 2426 02eb 0B       		.uleb128 0xb
 2427 02ec DD020000 		.4byte	.LASF52
 2428 02f0 09       		.byte	0x9
 2429 02f1 28       		.byte	0x28
 2430 02f2 68000000 		.4byte	0x68
 2431 02f6 14       		.byte	0x14
 2432 02f7 0B       		.uleb128 0xb
 2433 02f8 82060000 		.4byte	.LASF53
 2434 02fc 09       		.byte	0x9
 2435 02fd 29       		.byte	0x29
 2436 02fe 68000000 		.4byte	0x68
 2437 0302 18       		.byte	0x18
 2438 0303 0B       		.uleb128 0xb
 2439 0304 8C040000 		.4byte	.LASF54
 2440 0308 09       		.byte	0x9
 2441 0309 2A       		.byte	0x2a
 2442 030a 68000000 		.4byte	0x68
 2443 030e 1C       		.byte	0x1c
 2444 030f 0B       		.uleb128 0xb
 2445 0310 AD030000 		.4byte	.LASF55
 2446 0314 09       		.byte	0x9
 2447 0315 2B       		.byte	0x2b
 2448 0316 68000000 		.4byte	0x68
 2449 031a 20       		.byte	0x20
 2450 031b 00       		.byte	0
 2451 031c 09       		.uleb128 0x9
 2452 031d 2C       		.byte	0x2c
 2453 031e 0A       		.byte	0xa
 2454 031f 14       		.byte	0x14
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 59


 2455 0320 49030000 		.4byte	0x349
 2456 0324 0A       		.uleb128 0xa
 2457 0325 6B657900 		.ascii	"key\000"
 2458 0329 0A       		.byte	0xa
 2459 032a 15       		.byte	0x15
 2460 032b 49030000 		.4byte	0x349
 2461 032f 00       		.byte	0
 2462 0330 0B       		.uleb128 0xb
 2463 0331 D2020000 		.4byte	.LASF56
 2464 0335 0A       		.byte	0xa
 2465 0336 16       		.byte	0x16
 2466 0337 49030000 		.4byte	0x349
 2467 033b 14       		.byte	0x14
 2468 033c 0B       		.uleb128 0xb
 2469 033d C4040000 		.4byte	.LASF57
 2470 0341 0A       		.byte	0xa
 2471 0342 17       		.byte	0x17
 2472 0343 BD000000 		.4byte	0xbd
 2473 0347 28       		.byte	0x28
 2474 0348 00       		.byte	0
 2475 0349 07       		.uleb128 0x7
 2476 034a D7000000 		.4byte	0xd7
 2477 034e 59030000 		.4byte	0x359
 2478 0352 08       		.uleb128 0x8
 2479 0353 E5000000 		.4byte	0xe5
 2480 0357 13       		.byte	0x13
 2481 0358 00       		.byte	0
 2482 0359 03       		.uleb128 0x3
 2483 035a 04030000 		.4byte	.LASF58
 2484 035e 0A       		.byte	0xa
 2485 035f 19       		.byte	0x19
 2486 0360 1C030000 		.4byte	0x31c
 2487 0364 09       		.uleb128 0x9
 2488 0365 3C       		.byte	0x3c
 2489 0366 0B       		.byte	0xb
 2490 0367 35       		.byte	0x35
 2491 0368 91030000 		.4byte	0x391
 2492 036c 0B       		.uleb128 0xb
 2493 036d 1A070000 		.4byte	.LASF59
 2494 0371 0B       		.byte	0xb
 2495 0372 36       		.byte	0x36
 2496 0373 49030000 		.4byte	0x349
 2497 0377 00       		.byte	0
 2498 0378 0B       		.uleb128 0xb
 2499 0379 6B020000 		.4byte	.LASF60
 2500 037d 0B       		.byte	0xb
 2501 037e 37       		.byte	0x37
 2502 037f 49030000 		.4byte	0x349
 2503 0383 14       		.byte	0x14
 2504 0384 0B       		.uleb128 0xb
 2505 0385 06060000 		.4byte	.LASF61
 2506 0389 0B       		.byte	0xb
 2507 038a 38       		.byte	0x38
 2508 038b 49030000 		.4byte	0x349
 2509 038f 28       		.byte	0x28
 2510 0390 00       		.byte	0
 2511 0391 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 60


 2512 0392 EB010000 		.4byte	.LASF62
 2513 0396 0B       		.byte	0xb
 2514 0397 3A       		.byte	0x3a
 2515 0398 64030000 		.4byte	0x364
 2516 039c 09       		.uleb128 0x9
 2517 039d 20       		.byte	0x20
 2518 039e 0B       		.byte	0xb
 2519 039f 3C       		.byte	0x3c
 2520 03a0 05040000 		.4byte	0x405
 2521 03a4 0B       		.uleb128 0xb
 2522 03a5 F8010000 		.4byte	.LASF63
 2523 03a9 0B       		.byte	0xb
 2524 03aa 3D       		.byte	0x3d
 2525 03ab 68000000 		.4byte	0x68
 2526 03af 00       		.byte	0
 2527 03b0 0A       		.uleb128 0xa
 2528 03b1 62657200 		.ascii	"ber\000"
 2529 03b5 0B       		.byte	0xb
 2530 03b6 3E       		.byte	0x3e
 2531 03b7 68000000 		.4byte	0x68
 2532 03bb 04       		.byte	0x4
 2533 03bc 0B       		.uleb128 0xb
 2534 03bd E4050000 		.4byte	.LASF64
 2535 03c1 0B       		.byte	0xb
 2536 03c2 3F       		.byte	0x3f
 2537 03c3 68000000 		.4byte	0x68
 2538 03c7 08       		.byte	0x8
 2539 03c8 0B       		.uleb128 0xb
 2540 03c9 6F010000 		.4byte	.LASF65
 2541 03cd 0B       		.byte	0xb
 2542 03ce 40       		.byte	0x40
 2543 03cf 68000000 		.4byte	0x68
 2544 03d3 0C       		.byte	0xc
 2545 03d4 0B       		.uleb128 0xb
 2546 03d5 AF050000 		.4byte	.LASF66
 2547 03d9 0B       		.byte	0xb
 2548 03da 41       		.byte	0x41
 2549 03db 68000000 		.4byte	0x68
 2550 03df 10       		.byte	0x10
 2551 03e0 0B       		.uleb128 0xb
 2552 03e1 AA050000 		.4byte	.LASF67
 2553 03e5 0B       		.byte	0xb
 2554 03e6 42       		.byte	0x42
 2555 03e7 68000000 		.4byte	0x68
 2556 03eb 14       		.byte	0x14
 2557 03ec 0B       		.uleb128 0xb
 2558 03ed 82010000 		.4byte	.LASF68
 2559 03f1 0B       		.byte	0xb
 2560 03f2 43       		.byte	0x43
 2561 03f3 68000000 		.4byte	0x68
 2562 03f7 18       		.byte	0x18
 2563 03f8 0B       		.uleb128 0xb
 2564 03f9 07020000 		.4byte	.LASF69
 2565 03fd 0B       		.byte	0xb
 2566 03fe 44       		.byte	0x44
 2567 03ff 68000000 		.4byte	0x68
 2568 0403 1C       		.byte	0x1c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 61


 2569 0404 00       		.byte	0
 2570 0405 03       		.uleb128 0x3
 2571 0406 5D060000 		.4byte	.LASF70
 2572 040a 0B       		.byte	0xb
 2573 040b 46       		.byte	0x46
 2574 040c 9C030000 		.4byte	0x39c
 2575 0410 09       		.uleb128 0x9
 2576 0411 05       		.byte	0x5
 2577 0412 0B       		.byte	0xb
 2578 0413 52       		.byte	0x52
 2579 0414 55040000 		.4byte	0x455
 2580 0418 0B       		.uleb128 0xb
 2581 0419 44020000 		.4byte	.LASF71
 2582 041d 0B       		.byte	0xb
 2583 041e 54       		.byte	0x54
 2584 041f 81000000 		.4byte	0x81
 2585 0423 00       		.byte	0
 2586 0424 0B       		.uleb128 0xb
 2587 0425 AE070000 		.4byte	.LASF72
 2588 0429 0B       		.byte	0xb
 2589 042a 56       		.byte	0x56
 2590 042b 55040000 		.4byte	0x455
 2591 042f 01       		.byte	0x1
 2592 0430 0B       		.uleb128 0xb
 2593 0431 FB070000 		.4byte	.LASF73
 2594 0435 0B       		.byte	0xb
 2595 0436 58       		.byte	0x58
 2596 0437 81000000 		.4byte	0x81
 2597 043b 02       		.byte	0x2
 2598 043c 0B       		.uleb128 0xb
 2599 043d CB050000 		.4byte	.LASF74
 2600 0441 0B       		.byte	0xb
 2601 0442 5A       		.byte	0x5a
 2602 0443 81000000 		.4byte	0x81
 2603 0447 03       		.byte	0x3
 2604 0448 0B       		.uleb128 0xb
 2605 0449 A6020000 		.4byte	.LASF75
 2606 044d 0B       		.byte	0xb
 2607 044e 5D       		.byte	0x5d
 2608 044f 81000000 		.4byte	0x81
 2609 0453 04       		.byte	0x4
 2610 0454 00       		.byte	0
 2611 0455 02       		.uleb128 0x2
 2612 0456 01       		.byte	0x1
 2613 0457 02       		.byte	0x2
 2614 0458 7E050000 		.4byte	.LASF76
 2615 045c 03       		.uleb128 0x3
 2616 045d 32040000 		.4byte	.LASF77
 2617 0461 0B       		.byte	0xb
 2618 0462 5F       		.byte	0x5f
 2619 0463 10040000 		.4byte	0x410
 2620 0467 09       		.uleb128 0x9
 2621 0468 06       		.byte	0x6
 2622 0469 0C       		.byte	0xc
 2623 046a 2E       		.byte	0x2e
 2624 046b A0040000 		.4byte	0x4a0
 2625 046f 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 62


 2626 0470 87020000 		.4byte	.LASF78
 2627 0474 0C       		.byte	0xc
 2628 0475 30       		.byte	0x30
 2629 0476 8D000000 		.4byte	0x8d
 2630 047a 00       		.byte	0
 2631 047b 0B       		.uleb128 0xb
 2632 047c 98070000 		.4byte	.LASF79
 2633 0480 0C       		.byte	0xc
 2634 0481 31       		.byte	0x31
 2635 0482 B1000000 		.4byte	0xb1
 2636 0486 02       		.byte	0x2
 2637 0487 0B       		.uleb128 0xb
 2638 0488 8A070000 		.4byte	.LASF80
 2639 048c 0C       		.byte	0xc
 2640 048d 32       		.byte	0x32
 2641 048e 81000000 		.4byte	0x81
 2642 0492 04       		.byte	0x4
 2643 0493 0B       		.uleb128 0xb
 2644 0494 51000000 		.4byte	.LASF81
 2645 0498 0C       		.byte	0xc
 2646 0499 33       		.byte	0x33
 2647 049a 81000000 		.4byte	0x81
 2648 049e 05       		.byte	0x5
 2649 049f 00       		.byte	0
 2650 04a0 03       		.uleb128 0x3
 2651 04a1 1A020000 		.4byte	.LASF82
 2652 04a5 0C       		.byte	0xc
 2653 04a6 36       		.byte	0x36
 2654 04a7 AB040000 		.4byte	0x4ab
 2655 04ab 0C       		.uleb128 0xc
 2656 04ac 67040000 		.4byte	0x467
 2657 04b0 09       		.uleb128 0x9
 2658 04b1 1C       		.byte	0x1c
 2659 04b2 0C       		.byte	0xc
 2660 04b3 39       		.byte	0x39
 2661 04b4 D1040000 		.4byte	0x4d1
 2662 04b8 0B       		.uleb128 0xb
 2663 04b9 B6030000 		.4byte	.LASF83
 2664 04bd 0C       		.byte	0xc
 2665 04be 3B       		.byte	0x3b
 2666 04bf D1040000 		.4byte	0x4d1
 2667 04c3 00       		.byte	0
 2668 04c4 0B       		.uleb128 0xb
 2669 04c5 ED070000 		.4byte	.LASF84
 2670 04c9 0C       		.byte	0xc
 2671 04ca 3C       		.byte	0x3c
 2672 04cb F2000000 		.4byte	0xf2
 2673 04cf 04       		.byte	0x4
 2674 04d0 00       		.byte	0
 2675 04d1 06       		.uleb128 0x6
 2676 04d2 04       		.byte	0x4
 2677 04d3 91030000 		.4byte	0x391
 2678 04d7 03       		.uleb128 0x3
 2679 04d8 27040000 		.4byte	.LASF85
 2680 04dc 0C       		.byte	0xc
 2681 04dd 3E       		.byte	0x3e
 2682 04de B0040000 		.4byte	0x4b0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 63


 2683 04e2 09       		.uleb128 0x9
 2684 04e3 68       		.byte	0x68
 2685 04e4 0C       		.byte	0xc
 2686 04e5 44       		.byte	0x44
 2687 04e6 03050000 		.4byte	0x503
 2688 04ea 0B       		.uleb128 0xb
 2689 04eb C1030000 		.4byte	.LASF86
 2690 04ef 0C       		.byte	0xc
 2691 04f0 49       		.byte	0x49
 2692 04f1 03050000 		.4byte	0x503
 2693 04f5 00       		.byte	0
 2694 04f6 0B       		.uleb128 0xb
 2695 04f7 A5030000 		.4byte	.LASF87
 2696 04fb 0C       		.byte	0xc
 2697 04fc 4A       		.byte	0x4a
 2698 04fd 68000000 		.4byte	0x68
 2699 0501 64       		.byte	0x64
 2700 0502 00       		.byte	0
 2701 0503 07       		.uleb128 0x7
 2702 0504 D7000000 		.4byte	0xd7
 2703 0508 13050000 		.4byte	0x513
 2704 050c 08       		.uleb128 0x8
 2705 050d E5000000 		.4byte	0xe5
 2706 0511 63       		.byte	0x63
 2707 0512 00       		.byte	0
 2708 0513 03       		.uleb128 0x3
 2709 0514 94040000 		.4byte	.LASF88
 2710 0518 0C       		.byte	0xc
 2711 0519 50       		.byte	0x50
 2712 051a E2040000 		.4byte	0x4e2
 2713 051e 0F       		.uleb128 0xf
 2714 051f 69000000 		.4byte	.LASF160
 2715 0523 01       		.byte	0x1
 2716 0524 14       		.byte	0x14
 2717 0525 00000000 		.4byte	.LFB64
 2718 0529 0C000000 		.4byte	.LFE64-.LFB64
 2719 052d 01       		.uleb128 0x1
 2720 052e 9C       		.byte	0x9c
 2721 052f 10       		.uleb128 0x10
 2722 0530 DD070000 		.4byte	.LASF102
 2723 0534 01       		.byte	0x1
 2724 0535 28       		.byte	0x28
 2725 0536 00000000 		.4byte	.LFB65
 2726 053a 2C010000 		.4byte	.LFE65-.LFB65
 2727 053e 01       		.uleb128 0x1
 2728 053f 9C       		.byte	0x9c
 2729 0540 6F050000 		.4byte	0x56f
 2730 0544 11       		.uleb128 0x11
 2731 0545 D9060000 		.4byte	.LASF89
 2732 0549 01       		.byte	0x1
 2733 054a 3E       		.byte	0x3e
 2734 054b 6F050000 		.4byte	0x56f
 2735 054f 02       		.uleb128 0x2
 2736 0550 91       		.byte	0x91
 2737 0551 64       		.sleb128 -28
 2738 0552 11       		.uleb128 0x11
 2739 0553 B7070000 		.4byte	.LASF90
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 64


 2740 0557 01       		.byte	0x1
 2741 0558 5B       		.byte	0x5b
 2742 0559 7F050000 		.4byte	0x57f
 2743 055d 02       		.uleb128 0x2
 2744 055e 91       		.byte	0x91
 2745 055f 58       		.sleb128 -40
 2746 0560 11       		.uleb128 0x11
 2747 0561 55030000 		.4byte	.LASF91
 2748 0565 01       		.byte	0x1
 2749 0566 60       		.byte	0x60
 2750 0567 81000000 		.4byte	0x81
 2751 056b 02       		.uleb128 0x2
 2752 056c 91       		.byte	0x91
 2753 056d 6F       		.sleb128 -17
 2754 056e 00       		.byte	0
 2755 056f 07       		.uleb128 0x7
 2756 0570 99000000 		.4byte	0x99
 2757 0574 7F050000 		.4byte	0x57f
 2758 0578 08       		.uleb128 0x8
 2759 0579 E5000000 		.4byte	0xe5
 2760 057d 01       		.byte	0x1
 2761 057e 00       		.byte	0
 2762 057f 07       		.uleb128 0x7
 2763 0580 D7000000 		.4byte	0xd7
 2764 0584 8F050000 		.4byte	0x58f
 2765 0588 08       		.uleb128 0x8
 2766 0589 E5000000 		.4byte	0xe5
 2767 058d 09       		.byte	0x9
 2768 058e 00       		.byte	0
 2769 058f 12       		.uleb128 0x12
 2770 0590 CE030000 		.4byte	.LASF93
 2771 0594 01       		.byte	0x1
 2772 0595 6A       		.byte	0x6a
 2773 0596 68000000 		.4byte	0x68
 2774 059a 00000000 		.4byte	.LFB66
 2775 059e 64000000 		.4byte	.LFE66-.LFB66
 2776 05a2 01       		.uleb128 0x1
 2777 05a3 9C       		.byte	0x9c
 2778 05a4 B7050000 		.4byte	0x5b7
 2779 05a8 11       		.uleb128 0x11
 2780 05a9 62050000 		.4byte	.LASF92
 2781 05ad 01       		.byte	0x1
 2782 05ae 84       		.byte	0x84
 2783 05af 81000000 		.4byte	0x81
 2784 05b3 02       		.uleb128 0x2
 2785 05b4 91       		.byte	0x91
 2786 05b5 77       		.sleb128 -9
 2787 05b6 00       		.byte	0
 2788 05b7 13       		.uleb128 0x13
 2789 05b8 FF060000 		.4byte	.LASF161
 2790 05bc 01       		.byte	0x1
 2791 05bd 94       		.byte	0x94
 2792 05be 00000000 		.4byte	.LFB67
 2793 05c2 2A000000 		.4byte	.LFE67-.LFB67
 2794 05c6 01       		.uleb128 0x1
 2795 05c7 9C       		.byte	0x9c
 2796 05c8 14       		.uleb128 0x14
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 65


 2797 05c9 10030000 		.4byte	.LASF94
 2798 05cd 01       		.byte	0x1
 2799 05ce B9       		.byte	0xb9
 2800 05cf 00000000 		.4byte	.LFB68
 2801 05d3 50000000 		.4byte	.LFE68-.LFB68
 2802 05d7 01       		.uleb128 0x1
 2803 05d8 9C       		.byte	0x9c
 2804 05d9 EC050000 		.4byte	0x5ec
 2805 05dd 15       		.uleb128 0x15
 2806 05de 49040000 		.4byte	.LASF95
 2807 05e2 01       		.byte	0x1
 2808 05e3 B9       		.byte	0xb9
 2809 05e4 81000000 		.4byte	0x81
 2810 05e8 02       		.uleb128 0x2
 2811 05e9 91       		.byte	0x91
 2812 05ea 77       		.sleb128 -9
 2813 05eb 00       		.byte	0
 2814 05ec 16       		.uleb128 0x16
 2815 05ed D2070000 		.4byte	.LASF99
 2816 05f1 01       		.byte	0x1
 2817 05f2 D0       		.byte	0xd0
 2818 05f3 81000000 		.4byte	0x81
 2819 05f7 00000000 		.4byte	.LFB69
 2820 05fb 48000000 		.4byte	.LFE69-.LFB69
 2821 05ff 01       		.uleb128 0x1
 2822 0600 9C       		.byte	0x9c
 2823 0601 22060000 		.4byte	0x622
 2824 0605 15       		.uleb128 0x15
 2825 0606 72040000 		.4byte	.LASF96
 2826 060a 01       		.byte	0x1
 2827 060b D0       		.byte	0xd0
 2828 060c 22060000 		.4byte	0x622
 2829 0610 02       		.uleb128 0x2
 2830 0611 91       		.byte	0x91
 2831 0612 74       		.sleb128 -12
 2832 0613 15       		.uleb128 0x15
 2833 0614 49040000 		.4byte	.LASF95
 2834 0618 01       		.byte	0x1
 2835 0619 D0       		.byte	0xd0
 2836 061a 81000000 		.4byte	0x81
 2837 061e 02       		.uleb128 0x2
 2838 061f 91       		.byte	0x91
 2839 0620 73       		.sleb128 -13
 2840 0621 00       		.byte	0
 2841 0622 06       		.uleb128 0x6
 2842 0623 04       		.byte	0x4
 2843 0624 A0040000 		.4byte	0x4a0
 2844 0628 17       		.uleb128 0x17
 2845 0629 B4050000 		.4byte	.LASF97
 2846 062d 01       		.byte	0x1
 2847 062e E5       		.byte	0xe5
 2848 062f 00000000 		.4byte	.LFB70
 2849 0633 1E000000 		.4byte	.LFE70-.LFB70
 2850 0637 01       		.uleb128 0x1
 2851 0638 9C       		.byte	0x9c
 2852 0639 4C060000 		.4byte	0x64c
 2853 063d 15       		.uleb128 0x15
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 66


 2854 063e 12060000 		.4byte	.LASF98
 2855 0642 01       		.byte	0x1
 2856 0643 E5       		.byte	0xe5
 2857 0644 22060000 		.4byte	0x622
 2858 0648 02       		.uleb128 0x2
 2859 0649 91       		.byte	0x91
 2860 064a 74       		.sleb128 -12
 2861 064b 00       		.byte	0
 2862 064c 18       		.uleb128 0x18
 2863 064d F1040000 		.4byte	.LASF100
 2864 0651 01       		.byte	0x1
 2865 0652 EE       		.byte	0xee
 2866 0653 A0040000 		.4byte	0x4a0
 2867 0657 00000000 		.4byte	.LFB71
 2868 065b 46000000 		.4byte	.LFE71-.LFB71
 2869 065f 01       		.uleb128 0x1
 2870 0660 9C       		.byte	0x9c
 2871 0661 9E060000 		.4byte	0x69e
 2872 0665 15       		.uleb128 0x15
 2873 0666 87020000 		.4byte	.LASF78
 2874 066a 01       		.byte	0x1
 2875 066b EE       		.byte	0xee
 2876 066c 8D000000 		.4byte	0x8d
 2877 0670 02       		.uleb128 0x2
 2878 0671 91       		.byte	0x91
 2879 0672 6A       		.sleb128 -22
 2880 0673 15       		.uleb128 0x15
 2881 0674 8A070000 		.4byte	.LASF80
 2882 0678 01       		.byte	0x1
 2883 0679 EE       		.byte	0xee
 2884 067a 81000000 		.4byte	0x81
 2885 067e 02       		.uleb128 0x2
 2886 067f 91       		.byte	0x91
 2887 0680 69       		.sleb128 -23
 2888 0681 15       		.uleb128 0x15
 2889 0682 51000000 		.4byte	.LASF81
 2890 0686 01       		.byte	0x1
 2891 0687 EE       		.byte	0xee
 2892 0688 81000000 		.4byte	0x81
 2893 068c 02       		.uleb128 0x2
 2894 068d 91       		.byte	0x91
 2895 068e 68       		.sleb128 -24
 2896 068f 11       		.uleb128 0x11
 2897 0690 29070000 		.4byte	.LASF101
 2898 0694 01       		.byte	0x1
 2899 0695 F1       		.byte	0xf1
 2900 0696 A0040000 		.4byte	0x4a0
 2901 069a 02       		.uleb128 0x2
 2902 069b 91       		.byte	0x91
 2903 069c 70       		.sleb128 -16
 2904 069d 00       		.byte	0
 2905 069e 19       		.uleb128 0x19
 2906 069f 21060000 		.4byte	.LASF103
 2907 06a3 01       		.byte	0x1
 2908 06a4 0701     		.2byte	0x107
 2909 06a6 00000000 		.4byte	.LFB72
 2910 06aa E4000000 		.4byte	.LFE72-.LFB72
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 67


 2911 06ae 01       		.uleb128 0x1
 2912 06af 9C       		.byte	0x9c
 2913 06b0 F5060000 		.4byte	0x6f5
 2914 06b4 1A       		.uleb128 0x1a
 2915 06b5 00000000 		.4byte	.LASF104
 2916 06b9 01       		.byte	0x1
 2917 06ba 1301     		.2byte	0x113
 2918 06bc C9010000 		.4byte	0x1c9
 2919 06c0 03       		.uleb128 0x3
 2920 06c1 91       		.byte	0x91
 2921 06c2 EC7C     		.sleb128 -404
 2922 06c4 1A       		.uleb128 0x1a
 2923 06c5 4A010000 		.4byte	.LASF105
 2924 06c9 01       		.byte	0x1
 2925 06ca 1801     		.2byte	0x118
 2926 06cc C9010000 		.4byte	0x1c9
 2927 06d0 03       		.uleb128 0x3
 2928 06d1 91       		.byte	0x91
 2929 06d2 E879     		.sleb128 -792
 2930 06d4 1A       		.uleb128 0x1a
 2931 06d5 64070000 		.4byte	.LASF106
 2932 06d9 01       		.byte	0x1
 2933 06da 1C01     		.2byte	0x11c
 2934 06dc C9010000 		.4byte	0x1c9
 2935 06e0 03       		.uleb128 0x3
 2936 06e1 91       		.byte	0x91
 2937 06e2 E476     		.sleb128 -1180
 2938 06e4 1A       		.uleb128 0x1a
 2939 06e5 FC030000 		.4byte	.LASF107
 2940 06e9 01       		.byte	0x1
 2941 06ea 2001     		.2byte	0x120
 2942 06ec C9010000 		.4byte	0x1c9
 2943 06f0 03       		.uleb128 0x3
 2944 06f1 91       		.byte	0x91
 2945 06f2 E073     		.sleb128 -1568
 2946 06f4 00       		.byte	0
 2947 06f5 1B       		.uleb128 0x1b
 2948 06f6 E8070000 		.4byte	.LASF162
 2949 06fa 01       		.byte	0x1
 2950 06fb 2A01     		.2byte	0x12a
 2951 06fd 68000000 		.4byte	0x68
 2952 0701 00000000 		.4byte	.LFB73
 2953 0705 1E000000 		.4byte	.LFE73-.LFB73
 2954 0709 01       		.uleb128 0x1
 2955 070a 9C       		.byte	0x9c
 2956 070b 1C       		.uleb128 0x1c
 2957 070c 4E020000 		.4byte	.LASF108
 2958 0710 01       		.byte	0x1
 2959 0711 4001     		.2byte	0x140
 2960 0713 81000000 		.4byte	0x81
 2961 0717 00000000 		.4byte	.LFB74
 2962 071b 30040000 		.4byte	.LFE74-.LFB74
 2963 071f 01       		.uleb128 0x1
 2964 0720 9C       		.byte	0x9c
 2965 0721 65080000 		.4byte	0x865
 2966 0725 1D       		.uleb128 0x1d
 2967 0726 62000000 		.4byte	.LBB2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 68


 2968 072a B8030000 		.4byte	.LBE2-.LBB2
 2969 072e 1A       		.uleb128 0x1a
 2970 072f 04050000 		.4byte	.LASF109
 2971 0733 01       		.byte	0x1
 2972 0734 7001     		.2byte	0x170
 2973 0736 49030000 		.4byte	0x349
 2974 073a 02       		.uleb128 0x2
 2975 073b 91       		.byte	0x91
 2976 073c 48       		.sleb128 -56
 2977 073d 1A       		.uleb128 0x1a
 2978 073e 26020000 		.4byte	.LASF110
 2979 0742 01       		.byte	0x1
 2980 0743 7501     		.2byte	0x175
 2981 0745 49030000 		.4byte	0x349
 2982 0749 03       		.uleb128 0x3
 2983 074a 91       		.byte	0x91
 2984 074b B47F     		.sleb128 -76
 2985 074d 1A       		.uleb128 0x1a
 2986 074e 61030000 		.4byte	.LASF111
 2987 0752 01       		.byte	0x1
 2988 0753 8801     		.2byte	0x188
 2989 0755 8D000000 		.4byte	0x8d
 2990 0759 02       		.uleb128 0x2
 2991 075a 91       		.byte	0x91
 2992 075b 66       		.sleb128 -26
 2993 075c 1A       		.uleb128 0x1a
 2994 075d E7030000 		.4byte	.LASF112
 2995 0761 01       		.byte	0x1
 2996 0762 8901     		.2byte	0x189
 2997 0764 49030000 		.4byte	0x349
 2998 0768 03       		.uleb128 0x3
 2999 0769 91       		.byte	0x91
 3000 076a A07F     		.sleb128 -96
 3001 076c 1A       		.uleb128 0x1a
 3002 076d C4060000 		.4byte	.LASF113
 3003 0771 01       		.byte	0x1
 3004 0772 9E01     		.2byte	0x19e
 3005 0774 65080000 		.4byte	0x865
 3006 0778 03       		.uleb128 0x3
 3007 0779 91       		.byte	0x91
 3008 077a B875     		.sleb128 -1352
 3009 077c 1A       		.uleb128 0x1a
 3010 077d 44070000 		.4byte	.LASF30
 3011 0781 01       		.byte	0x1
 3012 0782 9F01     		.2byte	0x19f
 3013 0784 81000000 		.4byte	0x81
 3014 0788 02       		.uleb128 0x2
 3015 0789 91       		.byte	0x91
 3016 078a 65       		.sleb128 -27
 3017 078b 1A       		.uleb128 0x1a
 3018 078c 96060000 		.4byte	.LASF114
 3019 0790 01       		.byte	0x1
 3020 0791 A601     		.2byte	0x1a6
 3021 0793 EC000000 		.4byte	0xec
 3022 0797 02       		.uleb128 0x2
 3023 0798 91       		.byte	0x91
 3024 0799 6C       		.sleb128 -20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 69


 3025 079a 1A       		.uleb128 0x1a
 3026 079b 67010000 		.4byte	.LASF115
 3027 079f 01       		.byte	0x1
 3028 07a0 AA01     		.2byte	0x1aa
 3029 07a2 A5000000 		.4byte	0xa5
 3030 07a6 02       		.uleb128 0x2
 3031 07a7 91       		.byte	0x91
 3032 07a8 64       		.sleb128 -28
 3033 07a9 1A       		.uleb128 0x1a
 3034 07aa 57020000 		.4byte	.LASF116
 3035 07ae 01       		.byte	0x1
 3036 07af DA01     		.2byte	0x1da
 3037 07b1 4C000000 		.4byte	0x4c
 3038 07b5 02       		.uleb128 0x2
 3039 07b6 91       		.byte	0x91
 3040 07b7 5C       		.sleb128 -36
 3041 07b8 1E       		.uleb128 0x1e
 3042 07b9 CE000000 		.4byte	.LBB3
 3043 07bd 2C000000 		.4byte	.LBE3-.LBB3
 3044 07c1 E5070000 		.4byte	0x7e5
 3045 07c5 1A       		.uleb128 0x1a
 3046 07c6 4D060000 		.4byte	.LASF117
 3047 07ca 01       		.byte	0x1
 3048 07cb 7D01     		.2byte	0x17d
 3049 07cd 8D000000 		.4byte	0x8d
 3050 07d1 02       		.uleb128 0x2
 3051 07d2 91       		.byte	0x91
 3052 07d3 68       		.sleb128 -24
 3053 07d4 1A       		.uleb128 0x1a
 3054 07d5 D9010000 		.4byte	.LASF118
 3055 07d9 01       		.byte	0x1
 3056 07da 7E01     		.2byte	0x17e
 3057 07dc 49030000 		.4byte	0x349
 3058 07e0 03       		.uleb128 0x3
 3059 07e1 91       		.byte	0x91
 3060 07e2 8C7F     		.sleb128 -116
 3061 07e4 00       		.byte	0
 3062 07e5 1E       		.uleb128 0x1e
 3063 07e6 FC000000 		.4byte	.LBB4
 3064 07ea 20000000 		.4byte	.LBE4-.LBB4
 3065 07ee 03080000 		.4byte	0x803
 3066 07f2 1A       		.uleb128 0x1a
 3067 07f3 D9010000 		.4byte	.LASF118
 3068 07f7 01       		.byte	0x1
 3069 07f8 8201     		.2byte	0x182
 3070 07fa 49030000 		.4byte	0x349
 3071 07fe 03       		.uleb128 0x3
 3072 07ff 91       		.byte	0x91
 3073 0800 F87E     		.sleb128 -136
 3074 0802 00       		.byte	0
 3075 0803 1E       		.uleb128 0x1e
 3076 0804 3C020000 		.4byte	.LBB5
 3077 0808 BC000000 		.4byte	.LBE5-.LBB5
 3078 080c 3A080000 		.4byte	0x83a
 3079 0810 1A       		.uleb128 0x1a
 3080 0811 FD040000 		.4byte	.LASF119
 3081 0815 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 70


 3082 0816 AF01     		.2byte	0x1af
 3083 0818 A5000000 		.4byte	0xa5
 3084 081c 02       		.uleb128 0x2
 3085 081d 91       		.byte	0x91
 3086 081e 6B       		.sleb128 -21
 3087 081f 1D       		.uleb128 0x1d
 3088 0820 44020000 		.4byte	.LBB6
 3089 0824 9A000000 		.4byte	.LBE6-.LBB6
 3090 0828 1A       		.uleb128 0x1a
 3091 0829 2E030000 		.4byte	.LASF120
 3092 082d 01       		.byte	0x1
 3093 082e B101     		.2byte	0x1b1
 3094 0830 75080000 		.4byte	0x875
 3095 0834 03       		.uleb128 0x3
 3096 0835 91       		.byte	0x91
 3097 0836 8077     		.sleb128 -1152
 3098 0838 00       		.byte	0
 3099 0839 00       		.byte	0
 3100 083a 1D       		.uleb128 0x1d
 3101 083b 12030000 		.4byte	.LBB7
 3102 083f 3A000000 		.4byte	.LBE7-.LBB7
 3103 0843 1A       		.uleb128 0x1a
 3104 0844 34020000 		.4byte	.LASF121
 3105 0848 01       		.byte	0x1
 3106 0849 D101     		.2byte	0x1d1
 3107 084b 68000000 		.4byte	0x68
 3108 084f 02       		.uleb128 0x2
 3109 0850 91       		.byte	0x91
 3110 0851 60       		.sleb128 -32
 3111 0852 1A       		.uleb128 0x1a
 3112 0853 BF050000 		.4byte	.LASF122
 3113 0857 01       		.byte	0x1
 3114 0858 D201     		.2byte	0x1d2
 3115 085a 7F050000 		.4byte	0x57f
 3116 085e 03       		.uleb128 0x3
 3117 085f 91       		.byte	0x91
 3118 0860 EC7E     		.sleb128 -148
 3119 0862 00       		.byte	0
 3120 0863 00       		.byte	0
 3121 0864 00       		.byte	0
 3122 0865 07       		.uleb128 0x7
 3123 0866 D7000000 		.4byte	0xd7
 3124 086a 75080000 		.4byte	0x875
 3125 086e 08       		.uleb128 0x8
 3126 086f E5000000 		.4byte	0xe5
 3127 0873 C7       		.byte	0xc7
 3128 0874 00       		.byte	0
 3129 0875 07       		.uleb128 0x7
 3130 0876 D7000000 		.4byte	0xd7
 3131 087a 86080000 		.4byte	0x886
 3132 087e 1F       		.uleb128 0x1f
 3133 087f E5000000 		.4byte	0xe5
 3134 0883 E803     		.2byte	0x3e8
 3135 0885 00       		.byte	0
 3136 0886 1C       		.uleb128 0x1c
 3137 0887 3E050000 		.4byte	.LASF123
 3138 088b 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 71


 3139 088c EF01     		.2byte	0x1ef
 3140 088e 81000000 		.4byte	0x81
 3141 0892 00000000 		.4byte	.LFB75
 3142 0896 44000000 		.4byte	.LFE75-.LFB75
 3143 089a 01       		.uleb128 0x1
 3144 089b 9C       		.byte	0x9c
 3145 089c BA080000 		.4byte	0x8ba
 3146 08a0 1D       		.uleb128 0x1d
 3147 08a1 20000000 		.4byte	.LBB8
 3148 08a5 1A000000 		.4byte	.LBE8-.LBB8
 3149 08a9 1A       		.uleb128 0x1a
 3150 08aa 57020000 		.4byte	.LASF116
 3151 08ae 01       		.byte	0x1
 3152 08af FA01     		.2byte	0x1fa
 3153 08b1 4C000000 		.4byte	0x4c
 3154 08b5 02       		.uleb128 0x2
 3155 08b6 91       		.byte	0x91
 3156 08b7 74       		.sleb128 -12
 3157 08b8 00       		.byte	0
 3158 08b9 00       		.byte	0
 3159 08ba 1C       		.uleb128 0x1c
 3160 08bb 8F030000 		.4byte	.LASF124
 3161 08bf 01       		.byte	0x1
 3162 08c0 0F02     		.2byte	0x20f
 3163 08c2 81000000 		.4byte	0x81
 3164 08c6 00000000 		.4byte	.LFB76
 3165 08ca 74020000 		.4byte	.LFE76-.LFB76
 3166 08ce 01       		.uleb128 0x1
 3167 08cf 9C       		.byte	0x9c
 3168 08d0 4B090000 		.4byte	0x94b
 3169 08d4 1A       		.uleb128 0x1a
 3170 08d5 C4040000 		.4byte	.LASF57
 3171 08d9 01       		.byte	0x1
 3172 08da 1202     		.2byte	0x212
 3173 08dc 4C000000 		.4byte	0x4c
 3174 08e0 02       		.uleb128 0x2
 3175 08e1 91       		.byte	0x91
 3176 08e2 6C       		.sleb128 -20
 3177 08e3 1A       		.uleb128 0x1a
 3178 08e4 9C060000 		.4byte	.LASF125
 3179 08e8 01       		.byte	0x1
 3180 08e9 1302     		.2byte	0x213
 3181 08eb 4B090000 		.4byte	0x94b
 3182 08ef 02       		.uleb128 0x2
 3183 08f0 91       		.byte	0x91
 3184 08f1 4C       		.sleb128 -52
 3185 08f2 1A       		.uleb128 0x1a
 3186 08f3 D2020000 		.4byte	.LASF56
 3187 08f7 01       		.byte	0x1
 3188 08f8 1702     		.2byte	0x217
 3189 08fa 49030000 		.4byte	0x349
 3190 08fe 03       		.uleb128 0x3
 3191 08ff 91       		.byte	0x91
 3192 0900 B87F     		.sleb128 -72
 3193 0902 1A       		.uleb128 0x1a
 3194 0903 39030000 		.4byte	.LASF126
 3195 0907 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 72


 3196 0908 3502     		.2byte	0x235
 3197 090a 6D020000 		.4byte	0x26d
 3198 090e 03       		.uleb128 0x3
 3199 090f 91       		.byte	0x91
 3200 0910 A47F     		.sleb128 -92
 3201 0912 1E       		.uleb128 0x1e
 3202 0913 22000000 		.4byte	.LBB9
 3203 0917 78000000 		.4byte	.LBE9-.LBB9
 3204 091b 30090000 		.4byte	0x930
 3205 091f 1A       		.uleb128 0x1a
 3206 0920 E2060000 		.4byte	.LASF127
 3207 0924 01       		.byte	0x1
 3208 0925 1D02     		.2byte	0x21d
 3209 0927 1D020000 		.4byte	0x21d
 3210 092b 03       		.uleb128 0x3
 3211 092c 91       		.byte	0x91
 3212 092d 887F     		.sleb128 -120
 3213 092f 00       		.byte	0
 3214 0930 1D       		.uleb128 0x1d
 3215 0931 1E010000 		.4byte	.LBB10
 3216 0935 EE000000 		.4byte	.LBE10-.LBB10
 3217 0939 1A       		.uleb128 0x1a
 3218 093a 39070000 		.4byte	.LASF128
 3219 093e 01       		.byte	0x1
 3220 093f 5002     		.2byte	0x250
 3221 0941 99020000 		.4byte	0x299
 3222 0945 03       		.uleb128 0x3
 3223 0946 91       		.byte	0x91
 3224 0947 807F     		.sleb128 -128
 3225 0949 00       		.byte	0
 3226 094a 00       		.byte	0
 3227 094b 07       		.uleb128 0x7
 3228 094c D7000000 		.4byte	0xd7
 3229 0950 5B090000 		.4byte	0x95b
 3230 0954 08       		.uleb128 0x8
 3231 0955 E5000000 		.4byte	0xe5
 3232 0959 1F       		.byte	0x1f
 3233 095a 00       		.byte	0
 3234 095b 20       		.uleb128 0x20
 3235 095c FC020000 		.4byte	.LASF129
 3236 0960 01       		.byte	0x1
 3237 0961 7602     		.2byte	0x276
 3238 0963 81000000 		.4byte	0x81
 3239 0967 00000000 		.4byte	.LFB77
 3240 096b 74000000 		.4byte	.LFE77-.LFB77
 3241 096f 01       		.uleb128 0x1
 3242 0970 9C       		.byte	0x9c
 3243 0971 A1090000 		.4byte	0x9a1
 3244 0975 21       		.uleb128 0x21
 3245 0976 C4040000 		.4byte	.LASF57
 3246 097a 01       		.byte	0x1
 3247 097b 7602     		.2byte	0x276
 3248 097d 4C000000 		.4byte	0x4c
 3249 0981 02       		.uleb128 0x2
 3250 0982 91       		.byte	0x91
 3251 0983 64       		.sleb128 -28
 3252 0984 22       		.uleb128 0x22
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 73


 3253 0985 7400     		.ascii	"t\000"
 3254 0987 01       		.byte	0x1
 3255 0988 7D02     		.2byte	0x27d
 3256 098a A1090000 		.4byte	0x9a1
 3257 098e 02       		.uleb128 0x2
 3258 098f 91       		.byte	0x91
 3259 0990 74       		.sleb128 -12
 3260 0991 1A       		.uleb128 0x1a
 3261 0992 A3040000 		.4byte	.LASF130
 3262 0996 01       		.byte	0x1
 3263 0997 8202     		.2byte	0x282
 3264 0999 6B010000 		.4byte	0x16b
 3265 099d 02       		.uleb128 0x2
 3266 099e 91       		.byte	0x91
 3267 099f 68       		.sleb128 -24
 3268 09a0 00       		.byte	0
 3269 09a1 06       		.uleb128 0x6
 3270 09a2 04       		.byte	0x4
 3271 09a3 A4020000 		.4byte	0x2a4
 3272 09a7 20       		.uleb128 0x20
 3273 09a8 96020000 		.4byte	.LASF131
 3274 09ac 01       		.byte	0x1
 3275 09ad 9F02     		.2byte	0x29f
 3276 09af 81000000 		.4byte	0x81
 3277 09b3 00000000 		.4byte	.LFB78
 3278 09b7 38010000 		.4byte	.LFE78-.LFB78
 3279 09bb 01       		.uleb128 0x1
 3280 09bc 9C       		.byte	0x9c
 3281 09bd 200A0000 		.4byte	0xa20
 3282 09c1 21       		.uleb128 0x21
 3283 09c2 D8020000 		.4byte	.LASF132
 3284 09c6 01       		.byte	0x1
 3285 09c7 9F02     		.2byte	0x29f
 3286 09c9 EC000000 		.4byte	0xec
 3287 09cd 03       		.uleb128 0x3
 3288 09ce 91       		.byte	0x91
 3289 09cf 9C7E     		.sleb128 -228
 3290 09d1 21       		.uleb128 0x21
 3291 09d2 B2020000 		.4byte	.LASF133
 3292 09d6 01       		.byte	0x1
 3293 09d7 9F02     		.2byte	0x29f
 3294 09d9 68000000 		.4byte	0x68
 3295 09dd 03       		.uleb128 0x3
 3296 09de 91       		.byte	0x91
 3297 09df 987E     		.sleb128 -232
 3298 09e1 21       		.uleb128 0x21
 3299 09e2 6C040000 		.4byte	.LASF134
 3300 09e6 01       		.byte	0x1
 3301 09e7 9F02     		.2byte	0x29f
 3302 09e9 EC000000 		.4byte	0xec
 3303 09ed 03       		.uleb128 0x3
 3304 09ee 91       		.byte	0x91
 3305 09ef 947E     		.sleb128 -236
 3306 09f1 1A       		.uleb128 0x1a
 3307 09f2 CA010000 		.4byte	.LASF135
 3308 09f6 01       		.byte	0x1
 3309 09f7 A102     		.2byte	0x2a1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 74


 3310 09f9 81000000 		.4byte	0x81
 3311 09fd 02       		.uleb128 0x2
 3312 09fe 91       		.byte	0x91
 3313 09ff 77       		.sleb128 -9
 3314 0a00 1A       		.uleb128 0x1a
 3315 0a01 3C000000 		.4byte	.LASF136
 3316 0a05 01       		.byte	0x1
 3317 0a06 A802     		.2byte	0x2a8
 3318 0a08 200A0000 		.4byte	0xa20
 3319 0a0c 02       		.uleb128 0x2
 3320 0a0d 91       		.byte	0x91
 3321 0a0e 68       		.sleb128 -24
 3322 0a0f 1A       		.uleb128 0x1a
 3323 0a10 C4060000 		.4byte	.LASF113
 3324 0a14 01       		.byte	0x1
 3325 0a15 B002     		.2byte	0x2b0
 3326 0a17 65080000 		.4byte	0x865
 3327 0a1b 03       		.uleb128 0x3
 3328 0a1c 91       		.byte	0x91
 3329 0a1d A07E     		.sleb128 -224
 3330 0a1f 00       		.byte	0
 3331 0a20 07       		.uleb128 0x7
 3332 0a21 D7000000 		.4byte	0xd7
 3333 0a25 300A0000 		.4byte	0xa30
 3334 0a29 08       		.uleb128 0x8
 3335 0a2a E5000000 		.4byte	0xe5
 3336 0a2e 0B       		.byte	0xb
 3337 0a2f 00       		.byte	0
 3338 0a30 23       		.uleb128 0x23
 3339 0a31 3D010000 		.4byte	.LASF137
 3340 0a35 0D       		.byte	0xd
 3341 0a36 1207     		.2byte	0x712
 3342 0a38 3C0A0000 		.4byte	0xa3c
 3343 0a3c 0C       		.uleb128 0xc
 3344 0a3d 76000000 		.4byte	0x76
 3345 0a41 24       		.uleb128 0x24
 3346 0a42 2C000000 		.4byte	.LASF138
 3347 0a46 0A       		.byte	0xa
 3348 0a47 11       		.byte	0x11
 3349 0a48 55040000 		.4byte	0x455
 3350 0a4c 05       		.uleb128 0x5
 3351 0a4d 03       		.byte	0x3
 3352 0a4e 00000000 		.4byte	buffer_overflow
 3353 0a52 24       		.uleb128 0x24
 3354 0a53 53040000 		.4byte	.LASF139
 3355 0a57 0A       		.byte	0xa
 3356 0a58 22       		.byte	0x22
 3357 0a59 8D000000 		.4byte	0x8d
 3358 0a5d 05       		.uleb128 0x5
 3359 0a5e 03       		.byte	0x3
 3360 0a5f 00000000 		.4byte	dataPointsInStack
 3361 0a63 24       		.uleb128 0x24
 3362 0a64 4B070000 		.4byte	.LASF140
 3363 0a68 0A       		.byte	0xa
 3364 0a69 23       		.byte	0x23
 3365 0a6a 8D000000 		.4byte	0x8d
 3366 0a6e 05       		.uleb128 0x5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 75


 3367 0a6f 03       		.byte	0x3
 3368 0a70 00000000 		.4byte	dataPointsInStackDesired
 3369 0a74 07       		.uleb128 0x7
 3370 0a75 59030000 		.4byte	0x359
 3371 0a79 840A0000 		.4byte	0xa84
 3372 0a7d 08       		.uleb128 0x8
 3373 0a7e E5000000 		.4byte	0xe5
 3374 0a82 95       		.byte	0x95
 3375 0a83 00       		.byte	0
 3376 0a84 24       		.uleb128 0x24
 3377 0a85 A0030000 		.4byte	.LASF141
 3378 0a89 0A       		.byte	0xa
 3379 0a8a 24       		.byte	0x24
 3380 0a8b 740A0000 		.4byte	0xa74
 3381 0a8f 05       		.uleb128 0x5
 3382 0a90 03       		.byte	0x3
 3383 0a91 00000000 		.4byte	data
 3384 0a95 24       		.uleb128 0x24
 3385 0a96 24010000 		.4byte	.LASF142
 3386 0a9a 0B       		.byte	0xb
 3387 0a9b 1F       		.byte	0x1f
 3388 0a9c 81000000 		.4byte	0x81
 3389 0aa0 05       		.uleb128 0x5
 3390 0aa1 03       		.byte	0x3
 3391 0aa2 00000000 		.4byte	modem_state
 3392 0aa6 24       		.uleb128 0x24
 3393 0aa7 10040000 		.4byte	.LASF143
 3394 0aab 0B       		.byte	0xb
 3395 0aac 62       		.byte	0x62
 3396 0aad BD000000 		.4byte	0xbd
 3397 0ab1 05       		.uleb128 0x5
 3398 0ab2 03       		.byte	0x3
 3399 0ab3 00000000 		.4byte	modem_start_time_stamp
 3400 0ab7 24       		.uleb128 0x24
 3401 0ab8 B6030000 		.4byte	.LASF83
 3402 0abc 0B       		.byte	0xb
 3403 0abd 63       		.byte	0x63
 3404 0abe 91030000 		.4byte	0x391
 3405 0ac2 05       		.uleb128 0x5
 3406 0ac3 03       		.byte	0x3
 3407 0ac4 00000000 		.4byte	modem_info
 3408 0ac8 24       		.uleb128 0x24
 3409 0ac9 AD060000 		.4byte	.LASF144
 3410 0acd 0B       		.byte	0xb
 3411 0ace 64       		.byte	0x64
 3412 0acf 05040000 		.4byte	0x405
 3413 0ad3 05       		.uleb128 0x5
 3414 0ad4 03       		.byte	0x3
 3415 0ad5 00000000 		.4byte	modem_stats
 3416 0ad9 24       		.uleb128 0x24
 3417 0ada DC040000 		.4byte	.LASF145
 3418 0ade 0B       		.byte	0xb
 3419 0adf 65       		.byte	0x65
 3420 0ae0 5C040000 		.4byte	0x45c
 3421 0ae4 05       		.uleb128 0x5
 3422 0ae5 03       		.byte	0x3
 3423 0ae6 00000000 		.4byte	updatable_parameters
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 76


 3424 0aea 07       		.uleb128 0x7
 3425 0aeb D7000000 		.4byte	0xd7
 3426 0aef FB0A0000 		.4byte	0xafb
 3427 0af3 1F       		.uleb128 0x1f
 3428 0af4 E5000000 		.4byte	0xe5
 3429 0af8 0F27     		.2byte	0x270f
 3430 0afa 00       		.byte	0
 3431 0afb 24       		.uleb128 0x24
 3432 0afc 1C050000 		.4byte	.LASF146
 3433 0b00 0C       		.byte	0xc
 3434 0b01 18       		.byte	0x18
 3435 0b02 EA0A0000 		.4byte	0xaea
 3436 0b06 05       		.uleb128 0x5
 3437 0b07 03       		.byte	0x3
 3438 0b08 00000000 		.4byte	http_request
 3439 0b0c 24       		.uleb128 0x24
 3440 0b0d 7A070000 		.4byte	.LASF147
 3441 0b11 0C       		.byte	0xc
 3442 0b12 19       		.byte	0x19
 3443 0b13 EA0A0000 		.4byte	0xaea
 3444 0b17 05       		.uleb128 0x5
 3445 0b18 03       		.byte	0x3
 3446 0b19 00000000 		.4byte	http_body
 3447 0b1d 24       		.uleb128 0x24
 3448 0b1e B9060000 		.4byte	.LASF148
 3449 0b22 0C       		.byte	0xc
 3450 0b23 1A       		.byte	0x1a
 3451 0b24 65080000 		.4byte	0x865
 3452 0b28 05       		.uleb128 0x5
 3453 0b29 03       		.byte	0x3
 3454 0b2a 00000000 		.4byte	http_route
 3455 0b2e 24       		.uleb128 0x24
 3456 0b2f FA050000 		.4byte	.LASF149
 3457 0b33 0C       		.byte	0xc
 3458 0b34 41       		.byte	0x41
 3459 0b35 D7040000 		.4byte	0x4d7
 3460 0b39 05       		.uleb128 0x5
 3461 0b3a 03       		.byte	0x3
 3462 0b3b 00000000 		.4byte	system_info
 3463 0b3f 24       		.uleb128 0x24
 3464 0b40 9A050000 		.4byte	.LASF150
 3465 0b44 0C       		.byte	0xc
 3466 0b45 53       		.byte	0x53
 3467 0b46 13050000 		.4byte	0x513
 3468 0b4a 05       		.uleb128 0x5
 3469 0b4b 03       		.byte	0x3
 3470 0b4c 00000000 		.4byte	system_settings
 3471 0b50 24       		.uleb128 0x24
 3472 0b51 30010000 		.4byte	.LASF151
 3473 0b55 0C       		.byte	0xc
 3474 0b56 6F       		.byte	0x6f
 3475 0b57 A0040000 		.4byte	0x4a0
 3476 0b5b 05       		.uleb128 0x5
 3477 0b5c 03       		.byte	0x3
 3478 0b5d 00000000 		.4byte	alarmMeasure
 3479 0b61 24       		.uleb128 0x24
 3480 0b62 74010000 		.4byte	.LASF152
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 77


 3481 0b66 0C       		.byte	0xc
 3482 0b67 70       		.byte	0x70
 3483 0b68 81000000 		.4byte	0x81
 3484 0b6c 05       		.uleb128 0x5
 3485 0b6d 03       		.byte	0x3
 3486 0b6e 00000000 		.4byte	timeToMeasure
 3487 0b72 24       		.uleb128 0x24
 3488 0b73 E5020000 		.4byte	.LASF153
 3489 0b77 0C       		.byte	0xc
 3490 0b78 71       		.byte	0x71
 3491 0b79 A0040000 		.4byte	0x4a0
 3492 0b7d 05       		.uleb128 0x5
 3493 0b7e 03       		.byte	0x3
 3494 0b7f 00000000 		.4byte	alarmSync
 3495 0b83 24       		.uleb128 0x24
 3496 0b84 9A010000 		.4byte	.LASF154
 3497 0b88 0C       		.byte	0xc
 3498 0b89 72       		.byte	0x72
 3499 0b8a 81000000 		.4byte	0x81
 3500 0b8e 05       		.uleb128 0x5
 3501 0b8f 03       		.byte	0x3
 3502 0b90 00000000 		.4byte	timeToSync
 3503 0b94 24       		.uleb128 0x24
 3504 0b95 AD040000 		.4byte	.LASF155
 3505 0b99 0C       		.byte	0xc
 3506 0b9a 73       		.byte	0x73
 3507 0b9b 81000000 		.4byte	0x81
 3508 0b9f 05       		.uleb128 0x5
 3509 0ba0 03       		.byte	0x3
 3510 0ba1 00000000 		.4byte	timeToSycnRemoteParams
 3511 0ba5 25       		.uleb128 0x25
 3512 0ba6 68657900 		.ascii	"hey\000"
 3513 0baa 0C       		.byte	0xc
 3514 0bab 74       		.byte	0x74
 3515 0bac 81000000 		.4byte	0x81
 3516 0bb0 05       		.uleb128 0x5
 3517 0bb1 03       		.byte	0x3
 3518 0bb2 00000000 		.4byte	hey
 3519 0bb6 07       		.uleb128 0x7
 3520 0bb7 D7000000 		.4byte	0xd7
 3521 0bbb C60B0000 		.4byte	0xbc6
 3522 0bbf 08       		.uleb128 0x8
 3523 0bc0 E5000000 		.4byte	0xe5
 3524 0bc4 1D       		.byte	0x1d
 3525 0bc5 00       		.byte	0
 3526 0bc6 24       		.uleb128 0x24
 3527 0bc7 54050000 		.4byte	.LASF156
 3528 0bcb 01       		.byte	0x1
 3529 0bcc 1D       		.byte	0x1d
 3530 0bcd B60B0000 		.4byte	0xbb6
 3531 0bd1 05       		.uleb128 0x5
 3532 0bd2 03       		.byte	0x3
 3533 0bd3 00000000 		.4byte	Data_fileName
 3534 0bd7 24       		.uleb128 0x24
 3535 0bd8 55030000 		.4byte	.LASF91
 3536 0bdc 01       		.byte	0x1
 3537 0bdd 1E       		.byte	0x1e
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 78


 3538 0bde 81000000 		.4byte	0x81
 3539 0be2 05       		.uleb128 0x5
 3540 0be3 03       		.byte	0x3
 3541 0be4 00000000 		.4byte	try_counter
 3542 0be8 00       		.byte	0
 3543              		.section	.debug_abbrev,"",%progbits
 3544              	.Ldebug_abbrev0:
 3545 0000 01       		.uleb128 0x1
 3546 0001 11       		.uleb128 0x11
 3547 0002 01       		.byte	0x1
 3548 0003 25       		.uleb128 0x25
 3549 0004 0E       		.uleb128 0xe
 3550 0005 13       		.uleb128 0x13
 3551 0006 0B       		.uleb128 0xb
 3552 0007 03       		.uleb128 0x3
 3553 0008 0E       		.uleb128 0xe
 3554 0009 1B       		.uleb128 0x1b
 3555 000a 0E       		.uleb128 0xe
 3556 000b 55       		.uleb128 0x55
 3557 000c 17       		.uleb128 0x17
 3558 000d 11       		.uleb128 0x11
 3559 000e 01       		.uleb128 0x1
 3560 000f 10       		.uleb128 0x10
 3561 0010 17       		.uleb128 0x17
 3562 0011 00       		.byte	0
 3563 0012 00       		.byte	0
 3564 0013 02       		.uleb128 0x2
 3565 0014 24       		.uleb128 0x24
 3566 0015 00       		.byte	0
 3567 0016 0B       		.uleb128 0xb
 3568 0017 0B       		.uleb128 0xb
 3569 0018 3E       		.uleb128 0x3e
 3570 0019 0B       		.uleb128 0xb
 3571 001a 03       		.uleb128 0x3
 3572 001b 0E       		.uleb128 0xe
 3573 001c 00       		.byte	0
 3574 001d 00       		.byte	0
 3575 001e 03       		.uleb128 0x3
 3576 001f 16       		.uleb128 0x16
 3577 0020 00       		.byte	0
 3578 0021 03       		.uleb128 0x3
 3579 0022 0E       		.uleb128 0xe
 3580 0023 3A       		.uleb128 0x3a
 3581 0024 0B       		.uleb128 0xb
 3582 0025 3B       		.uleb128 0x3b
 3583 0026 0B       		.uleb128 0xb
 3584 0027 49       		.uleb128 0x49
 3585 0028 13       		.uleb128 0x13
 3586 0029 00       		.byte	0
 3587 002a 00       		.byte	0
 3588 002b 04       		.uleb128 0x4
 3589 002c 24       		.uleb128 0x24
 3590 002d 00       		.byte	0
 3591 002e 0B       		.uleb128 0xb
 3592 002f 0B       		.uleb128 0xb
 3593 0030 3E       		.uleb128 0x3e
 3594 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 79


 3595 0032 03       		.uleb128 0x3
 3596 0033 08       		.uleb128 0x8
 3597 0034 00       		.byte	0
 3598 0035 00       		.byte	0
 3599 0036 05       		.uleb128 0x5
 3600 0037 16       		.uleb128 0x16
 3601 0038 00       		.byte	0
 3602 0039 03       		.uleb128 0x3
 3603 003a 0E       		.uleb128 0xe
 3604 003b 3A       		.uleb128 0x3a
 3605 003c 0B       		.uleb128 0xb
 3606 003d 3B       		.uleb128 0x3b
 3607 003e 05       		.uleb128 0x5
 3608 003f 49       		.uleb128 0x49
 3609 0040 13       		.uleb128 0x13
 3610 0041 00       		.byte	0
 3611 0042 00       		.byte	0
 3612 0043 06       		.uleb128 0x6
 3613 0044 0F       		.uleb128 0xf
 3614 0045 00       		.byte	0
 3615 0046 0B       		.uleb128 0xb
 3616 0047 0B       		.uleb128 0xb
 3617 0048 49       		.uleb128 0x49
 3618 0049 13       		.uleb128 0x13
 3619 004a 00       		.byte	0
 3620 004b 00       		.byte	0
 3621 004c 07       		.uleb128 0x7
 3622 004d 01       		.uleb128 0x1
 3623 004e 01       		.byte	0x1
 3624 004f 49       		.uleb128 0x49
 3625 0050 13       		.uleb128 0x13
 3626 0051 01       		.uleb128 0x1
 3627 0052 13       		.uleb128 0x13
 3628 0053 00       		.byte	0
 3629 0054 00       		.byte	0
 3630 0055 08       		.uleb128 0x8
 3631 0056 21       		.uleb128 0x21
 3632 0057 00       		.byte	0
 3633 0058 49       		.uleb128 0x49
 3634 0059 13       		.uleb128 0x13
 3635 005a 2F       		.uleb128 0x2f
 3636 005b 0B       		.uleb128 0xb
 3637 005c 00       		.byte	0
 3638 005d 00       		.byte	0
 3639 005e 09       		.uleb128 0x9
 3640 005f 13       		.uleb128 0x13
 3641 0060 01       		.byte	0x1
 3642 0061 0B       		.uleb128 0xb
 3643 0062 0B       		.uleb128 0xb
 3644 0063 3A       		.uleb128 0x3a
 3645 0064 0B       		.uleb128 0xb
 3646 0065 3B       		.uleb128 0x3b
 3647 0066 0B       		.uleb128 0xb
 3648 0067 01       		.uleb128 0x1
 3649 0068 13       		.uleb128 0x13
 3650 0069 00       		.byte	0
 3651 006a 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 80


 3652 006b 0A       		.uleb128 0xa
 3653 006c 0D       		.uleb128 0xd
 3654 006d 00       		.byte	0
 3655 006e 03       		.uleb128 0x3
 3656 006f 08       		.uleb128 0x8
 3657 0070 3A       		.uleb128 0x3a
 3658 0071 0B       		.uleb128 0xb
 3659 0072 3B       		.uleb128 0x3b
 3660 0073 0B       		.uleb128 0xb
 3661 0074 49       		.uleb128 0x49
 3662 0075 13       		.uleb128 0x13
 3663 0076 38       		.uleb128 0x38
 3664 0077 0B       		.uleb128 0xb
 3665 0078 00       		.byte	0
 3666 0079 00       		.byte	0
 3667 007a 0B       		.uleb128 0xb
 3668 007b 0D       		.uleb128 0xd
 3669 007c 00       		.byte	0
 3670 007d 03       		.uleb128 0x3
 3671 007e 0E       		.uleb128 0xe
 3672 007f 3A       		.uleb128 0x3a
 3673 0080 0B       		.uleb128 0xb
 3674 0081 3B       		.uleb128 0x3b
 3675 0082 0B       		.uleb128 0xb
 3676 0083 49       		.uleb128 0x49
 3677 0084 13       		.uleb128 0x13
 3678 0085 38       		.uleb128 0x38
 3679 0086 0B       		.uleb128 0xb
 3680 0087 00       		.byte	0
 3681 0088 00       		.byte	0
 3682 0089 0C       		.uleb128 0xc
 3683 008a 35       		.uleb128 0x35
 3684 008b 00       		.byte	0
 3685 008c 49       		.uleb128 0x49
 3686 008d 13       		.uleb128 0x13
 3687 008e 00       		.byte	0
 3688 008f 00       		.byte	0
 3689 0090 0D       		.uleb128 0xd
 3690 0091 13       		.uleb128 0x13
 3691 0092 01       		.byte	0x1
 3692 0093 0B       		.uleb128 0xb
 3693 0094 05       		.uleb128 0x5
 3694 0095 3A       		.uleb128 0x3a
 3695 0096 0B       		.uleb128 0xb
 3696 0097 3B       		.uleb128 0x3b
 3697 0098 0B       		.uleb128 0xb
 3698 0099 01       		.uleb128 0x1
 3699 009a 13       		.uleb128 0x13
 3700 009b 00       		.byte	0
 3701 009c 00       		.byte	0
 3702 009d 0E       		.uleb128 0xe
 3703 009e 13       		.uleb128 0x13
 3704 009f 01       		.byte	0x1
 3705 00a0 03       		.uleb128 0x3
 3706 00a1 08       		.uleb128 0x8
 3707 00a2 0B       		.uleb128 0xb
 3708 00a3 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 81


 3709 00a4 3A       		.uleb128 0x3a
 3710 00a5 0B       		.uleb128 0xb
 3711 00a6 3B       		.uleb128 0x3b
 3712 00a7 0B       		.uleb128 0xb
 3713 00a8 01       		.uleb128 0x1
 3714 00a9 13       		.uleb128 0x13
 3715 00aa 00       		.byte	0
 3716 00ab 00       		.byte	0
 3717 00ac 0F       		.uleb128 0xf
 3718 00ad 2E       		.uleb128 0x2e
 3719 00ae 00       		.byte	0
 3720 00af 3F       		.uleb128 0x3f
 3721 00b0 19       		.uleb128 0x19
 3722 00b1 03       		.uleb128 0x3
 3723 00b2 0E       		.uleb128 0xe
 3724 00b3 3A       		.uleb128 0x3a
 3725 00b4 0B       		.uleb128 0xb
 3726 00b5 3B       		.uleb128 0x3b
 3727 00b6 0B       		.uleb128 0xb
 3728 00b7 27       		.uleb128 0x27
 3729 00b8 19       		.uleb128 0x19
 3730 00b9 11       		.uleb128 0x11
 3731 00ba 01       		.uleb128 0x1
 3732 00bb 12       		.uleb128 0x12
 3733 00bc 06       		.uleb128 0x6
 3734 00bd 40       		.uleb128 0x40
 3735 00be 18       		.uleb128 0x18
 3736 00bf 9642     		.uleb128 0x2116
 3737 00c1 19       		.uleb128 0x19
 3738 00c2 00       		.byte	0
 3739 00c3 00       		.byte	0
 3740 00c4 10       		.uleb128 0x10
 3741 00c5 2E       		.uleb128 0x2e
 3742 00c6 01       		.byte	0x1
 3743 00c7 3F       		.uleb128 0x3f
 3744 00c8 19       		.uleb128 0x19
 3745 00c9 03       		.uleb128 0x3
 3746 00ca 0E       		.uleb128 0xe
 3747 00cb 3A       		.uleb128 0x3a
 3748 00cc 0B       		.uleb128 0xb
 3749 00cd 3B       		.uleb128 0x3b
 3750 00ce 0B       		.uleb128 0xb
 3751 00cf 11       		.uleb128 0x11
 3752 00d0 01       		.uleb128 0x1
 3753 00d1 12       		.uleb128 0x12
 3754 00d2 06       		.uleb128 0x6
 3755 00d3 40       		.uleb128 0x40
 3756 00d4 18       		.uleb128 0x18
 3757 00d5 9642     		.uleb128 0x2116
 3758 00d7 19       		.uleb128 0x19
 3759 00d8 01       		.uleb128 0x1
 3760 00d9 13       		.uleb128 0x13
 3761 00da 00       		.byte	0
 3762 00db 00       		.byte	0
 3763 00dc 11       		.uleb128 0x11
 3764 00dd 34       		.uleb128 0x34
 3765 00de 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 82


 3766 00df 03       		.uleb128 0x3
 3767 00e0 0E       		.uleb128 0xe
 3768 00e1 3A       		.uleb128 0x3a
 3769 00e2 0B       		.uleb128 0xb
 3770 00e3 3B       		.uleb128 0x3b
 3771 00e4 0B       		.uleb128 0xb
 3772 00e5 49       		.uleb128 0x49
 3773 00e6 13       		.uleb128 0x13
 3774 00e7 02       		.uleb128 0x2
 3775 00e8 18       		.uleb128 0x18
 3776 00e9 00       		.byte	0
 3777 00ea 00       		.byte	0
 3778 00eb 12       		.uleb128 0x12
 3779 00ec 2E       		.uleb128 0x2e
 3780 00ed 01       		.byte	0x1
 3781 00ee 3F       		.uleb128 0x3f
 3782 00ef 19       		.uleb128 0x19
 3783 00f0 03       		.uleb128 0x3
 3784 00f1 0E       		.uleb128 0xe
 3785 00f2 3A       		.uleb128 0x3a
 3786 00f3 0B       		.uleb128 0xb
 3787 00f4 3B       		.uleb128 0x3b
 3788 00f5 0B       		.uleb128 0xb
 3789 00f6 49       		.uleb128 0x49
 3790 00f7 13       		.uleb128 0x13
 3791 00f8 11       		.uleb128 0x11
 3792 00f9 01       		.uleb128 0x1
 3793 00fa 12       		.uleb128 0x12
 3794 00fb 06       		.uleb128 0x6
 3795 00fc 40       		.uleb128 0x40
 3796 00fd 18       		.uleb128 0x18
 3797 00fe 9642     		.uleb128 0x2116
 3798 0100 19       		.uleb128 0x19
 3799 0101 01       		.uleb128 0x1
 3800 0102 13       		.uleb128 0x13
 3801 0103 00       		.byte	0
 3802 0104 00       		.byte	0
 3803 0105 13       		.uleb128 0x13
 3804 0106 2E       		.uleb128 0x2e
 3805 0107 00       		.byte	0
 3806 0108 3F       		.uleb128 0x3f
 3807 0109 19       		.uleb128 0x19
 3808 010a 03       		.uleb128 0x3
 3809 010b 0E       		.uleb128 0xe
 3810 010c 3A       		.uleb128 0x3a
 3811 010d 0B       		.uleb128 0xb
 3812 010e 3B       		.uleb128 0x3b
 3813 010f 0B       		.uleb128 0xb
 3814 0110 11       		.uleb128 0x11
 3815 0111 01       		.uleb128 0x1
 3816 0112 12       		.uleb128 0x12
 3817 0113 06       		.uleb128 0x6
 3818 0114 40       		.uleb128 0x40
 3819 0115 18       		.uleb128 0x18
 3820 0116 9642     		.uleb128 0x2116
 3821 0118 19       		.uleb128 0x19
 3822 0119 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 83


 3823 011a 00       		.byte	0
 3824 011b 14       		.uleb128 0x14
 3825 011c 2E       		.uleb128 0x2e
 3826 011d 01       		.byte	0x1
 3827 011e 3F       		.uleb128 0x3f
 3828 011f 19       		.uleb128 0x19
 3829 0120 03       		.uleb128 0x3
 3830 0121 0E       		.uleb128 0xe
 3831 0122 3A       		.uleb128 0x3a
 3832 0123 0B       		.uleb128 0xb
 3833 0124 3B       		.uleb128 0x3b
 3834 0125 0B       		.uleb128 0xb
 3835 0126 27       		.uleb128 0x27
 3836 0127 19       		.uleb128 0x19
 3837 0128 11       		.uleb128 0x11
 3838 0129 01       		.uleb128 0x1
 3839 012a 12       		.uleb128 0x12
 3840 012b 06       		.uleb128 0x6
 3841 012c 40       		.uleb128 0x40
 3842 012d 18       		.uleb128 0x18
 3843 012e 9642     		.uleb128 0x2116
 3844 0130 19       		.uleb128 0x19
 3845 0131 01       		.uleb128 0x1
 3846 0132 13       		.uleb128 0x13
 3847 0133 00       		.byte	0
 3848 0134 00       		.byte	0
 3849 0135 15       		.uleb128 0x15
 3850 0136 05       		.uleb128 0x5
 3851 0137 00       		.byte	0
 3852 0138 03       		.uleb128 0x3
 3853 0139 0E       		.uleb128 0xe
 3854 013a 3A       		.uleb128 0x3a
 3855 013b 0B       		.uleb128 0xb
 3856 013c 3B       		.uleb128 0x3b
 3857 013d 0B       		.uleb128 0xb
 3858 013e 49       		.uleb128 0x49
 3859 013f 13       		.uleb128 0x13
 3860 0140 02       		.uleb128 0x2
 3861 0141 18       		.uleb128 0x18
 3862 0142 00       		.byte	0
 3863 0143 00       		.byte	0
 3864 0144 16       		.uleb128 0x16
 3865 0145 2E       		.uleb128 0x2e
 3866 0146 01       		.byte	0x1
 3867 0147 3F       		.uleb128 0x3f
 3868 0148 19       		.uleb128 0x19
 3869 0149 03       		.uleb128 0x3
 3870 014a 0E       		.uleb128 0xe
 3871 014b 3A       		.uleb128 0x3a
 3872 014c 0B       		.uleb128 0xb
 3873 014d 3B       		.uleb128 0x3b
 3874 014e 0B       		.uleb128 0xb
 3875 014f 27       		.uleb128 0x27
 3876 0150 19       		.uleb128 0x19
 3877 0151 49       		.uleb128 0x49
 3878 0152 13       		.uleb128 0x13
 3879 0153 11       		.uleb128 0x11
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 84


 3880 0154 01       		.uleb128 0x1
 3881 0155 12       		.uleb128 0x12
 3882 0156 06       		.uleb128 0x6
 3883 0157 40       		.uleb128 0x40
 3884 0158 18       		.uleb128 0x18
 3885 0159 9642     		.uleb128 0x2116
 3886 015b 19       		.uleb128 0x19
 3887 015c 01       		.uleb128 0x1
 3888 015d 13       		.uleb128 0x13
 3889 015e 00       		.byte	0
 3890 015f 00       		.byte	0
 3891 0160 17       		.uleb128 0x17
 3892 0161 2E       		.uleb128 0x2e
 3893 0162 01       		.byte	0x1
 3894 0163 3F       		.uleb128 0x3f
 3895 0164 19       		.uleb128 0x19
 3896 0165 03       		.uleb128 0x3
 3897 0166 0E       		.uleb128 0xe
 3898 0167 3A       		.uleb128 0x3a
 3899 0168 0B       		.uleb128 0xb
 3900 0169 3B       		.uleb128 0x3b
 3901 016a 0B       		.uleb128 0xb
 3902 016b 27       		.uleb128 0x27
 3903 016c 19       		.uleb128 0x19
 3904 016d 11       		.uleb128 0x11
 3905 016e 01       		.uleb128 0x1
 3906 016f 12       		.uleb128 0x12
 3907 0170 06       		.uleb128 0x6
 3908 0171 40       		.uleb128 0x40
 3909 0172 18       		.uleb128 0x18
 3910 0173 9742     		.uleb128 0x2117
 3911 0175 19       		.uleb128 0x19
 3912 0176 01       		.uleb128 0x1
 3913 0177 13       		.uleb128 0x13
 3914 0178 00       		.byte	0
 3915 0179 00       		.byte	0
 3916 017a 18       		.uleb128 0x18
 3917 017b 2E       		.uleb128 0x2e
 3918 017c 01       		.byte	0x1
 3919 017d 3F       		.uleb128 0x3f
 3920 017e 19       		.uleb128 0x19
 3921 017f 03       		.uleb128 0x3
 3922 0180 0E       		.uleb128 0xe
 3923 0181 3A       		.uleb128 0x3a
 3924 0182 0B       		.uleb128 0xb
 3925 0183 3B       		.uleb128 0x3b
 3926 0184 0B       		.uleb128 0xb
 3927 0185 27       		.uleb128 0x27
 3928 0186 19       		.uleb128 0x19
 3929 0187 49       		.uleb128 0x49
 3930 0188 13       		.uleb128 0x13
 3931 0189 11       		.uleb128 0x11
 3932 018a 01       		.uleb128 0x1
 3933 018b 12       		.uleb128 0x12
 3934 018c 06       		.uleb128 0x6
 3935 018d 40       		.uleb128 0x40
 3936 018e 18       		.uleb128 0x18
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 85


 3937 018f 9742     		.uleb128 0x2117
 3938 0191 19       		.uleb128 0x19
 3939 0192 01       		.uleb128 0x1
 3940 0193 13       		.uleb128 0x13
 3941 0194 00       		.byte	0
 3942 0195 00       		.byte	0
 3943 0196 19       		.uleb128 0x19
 3944 0197 2E       		.uleb128 0x2e
 3945 0198 01       		.byte	0x1
 3946 0199 3F       		.uleb128 0x3f
 3947 019a 19       		.uleb128 0x19
 3948 019b 03       		.uleb128 0x3
 3949 019c 0E       		.uleb128 0xe
 3950 019d 3A       		.uleb128 0x3a
 3951 019e 0B       		.uleb128 0xb
 3952 019f 3B       		.uleb128 0x3b
 3953 01a0 05       		.uleb128 0x5
 3954 01a1 11       		.uleb128 0x11
 3955 01a2 01       		.uleb128 0x1
 3956 01a3 12       		.uleb128 0x12
 3957 01a4 06       		.uleb128 0x6
 3958 01a5 40       		.uleb128 0x40
 3959 01a6 18       		.uleb128 0x18
 3960 01a7 9642     		.uleb128 0x2116
 3961 01a9 19       		.uleb128 0x19
 3962 01aa 01       		.uleb128 0x1
 3963 01ab 13       		.uleb128 0x13
 3964 01ac 00       		.byte	0
 3965 01ad 00       		.byte	0
 3966 01ae 1A       		.uleb128 0x1a
 3967 01af 34       		.uleb128 0x34
 3968 01b0 00       		.byte	0
 3969 01b1 03       		.uleb128 0x3
 3970 01b2 0E       		.uleb128 0xe
 3971 01b3 3A       		.uleb128 0x3a
 3972 01b4 0B       		.uleb128 0xb
 3973 01b5 3B       		.uleb128 0x3b
 3974 01b6 05       		.uleb128 0x5
 3975 01b7 49       		.uleb128 0x49
 3976 01b8 13       		.uleb128 0x13
 3977 01b9 02       		.uleb128 0x2
 3978 01ba 18       		.uleb128 0x18
 3979 01bb 00       		.byte	0
 3980 01bc 00       		.byte	0
 3981 01bd 1B       		.uleb128 0x1b
 3982 01be 2E       		.uleb128 0x2e
 3983 01bf 00       		.byte	0
 3984 01c0 3F       		.uleb128 0x3f
 3985 01c1 19       		.uleb128 0x19
 3986 01c2 03       		.uleb128 0x3
 3987 01c3 0E       		.uleb128 0xe
 3988 01c4 3A       		.uleb128 0x3a
 3989 01c5 0B       		.uleb128 0xb
 3990 01c6 3B       		.uleb128 0x3b
 3991 01c7 05       		.uleb128 0x5
 3992 01c8 27       		.uleb128 0x27
 3993 01c9 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 86


 3994 01ca 49       		.uleb128 0x49
 3995 01cb 13       		.uleb128 0x13
 3996 01cc 11       		.uleb128 0x11
 3997 01cd 01       		.uleb128 0x1
 3998 01ce 12       		.uleb128 0x12
 3999 01cf 06       		.uleb128 0x6
 4000 01d0 40       		.uleb128 0x40
 4001 01d1 18       		.uleb128 0x18
 4002 01d2 9642     		.uleb128 0x2116
 4003 01d4 19       		.uleb128 0x19
 4004 01d5 00       		.byte	0
 4005 01d6 00       		.byte	0
 4006 01d7 1C       		.uleb128 0x1c
 4007 01d8 2E       		.uleb128 0x2e
 4008 01d9 01       		.byte	0x1
 4009 01da 3F       		.uleb128 0x3f
 4010 01db 19       		.uleb128 0x19
 4011 01dc 03       		.uleb128 0x3
 4012 01dd 0E       		.uleb128 0xe
 4013 01de 3A       		.uleb128 0x3a
 4014 01df 0B       		.uleb128 0xb
 4015 01e0 3B       		.uleb128 0x3b
 4016 01e1 05       		.uleb128 0x5
 4017 01e2 49       		.uleb128 0x49
 4018 01e3 13       		.uleb128 0x13
 4019 01e4 11       		.uleb128 0x11
 4020 01e5 01       		.uleb128 0x1
 4021 01e6 12       		.uleb128 0x12
 4022 01e7 06       		.uleb128 0x6
 4023 01e8 40       		.uleb128 0x40
 4024 01e9 18       		.uleb128 0x18
 4025 01ea 9642     		.uleb128 0x2116
 4026 01ec 19       		.uleb128 0x19
 4027 01ed 01       		.uleb128 0x1
 4028 01ee 13       		.uleb128 0x13
 4029 01ef 00       		.byte	0
 4030 01f0 00       		.byte	0
 4031 01f1 1D       		.uleb128 0x1d
 4032 01f2 0B       		.uleb128 0xb
 4033 01f3 01       		.byte	0x1
 4034 01f4 11       		.uleb128 0x11
 4035 01f5 01       		.uleb128 0x1
 4036 01f6 12       		.uleb128 0x12
 4037 01f7 06       		.uleb128 0x6
 4038 01f8 00       		.byte	0
 4039 01f9 00       		.byte	0
 4040 01fa 1E       		.uleb128 0x1e
 4041 01fb 0B       		.uleb128 0xb
 4042 01fc 01       		.byte	0x1
 4043 01fd 11       		.uleb128 0x11
 4044 01fe 01       		.uleb128 0x1
 4045 01ff 12       		.uleb128 0x12
 4046 0200 06       		.uleb128 0x6
 4047 0201 01       		.uleb128 0x1
 4048 0202 13       		.uleb128 0x13
 4049 0203 00       		.byte	0
 4050 0204 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 87


 4051 0205 1F       		.uleb128 0x1f
 4052 0206 21       		.uleb128 0x21
 4053 0207 00       		.byte	0
 4054 0208 49       		.uleb128 0x49
 4055 0209 13       		.uleb128 0x13
 4056 020a 2F       		.uleb128 0x2f
 4057 020b 05       		.uleb128 0x5
 4058 020c 00       		.byte	0
 4059 020d 00       		.byte	0
 4060 020e 20       		.uleb128 0x20
 4061 020f 2E       		.uleb128 0x2e
 4062 0210 01       		.byte	0x1
 4063 0211 3F       		.uleb128 0x3f
 4064 0212 19       		.uleb128 0x19
 4065 0213 03       		.uleb128 0x3
 4066 0214 0E       		.uleb128 0xe
 4067 0215 3A       		.uleb128 0x3a
 4068 0216 0B       		.uleb128 0xb
 4069 0217 3B       		.uleb128 0x3b
 4070 0218 05       		.uleb128 0x5
 4071 0219 27       		.uleb128 0x27
 4072 021a 19       		.uleb128 0x19
 4073 021b 49       		.uleb128 0x49
 4074 021c 13       		.uleb128 0x13
 4075 021d 11       		.uleb128 0x11
 4076 021e 01       		.uleb128 0x1
 4077 021f 12       		.uleb128 0x12
 4078 0220 06       		.uleb128 0x6
 4079 0221 40       		.uleb128 0x40
 4080 0222 18       		.uleb128 0x18
 4081 0223 9642     		.uleb128 0x2116
 4082 0225 19       		.uleb128 0x19
 4083 0226 01       		.uleb128 0x1
 4084 0227 13       		.uleb128 0x13
 4085 0228 00       		.byte	0
 4086 0229 00       		.byte	0
 4087 022a 21       		.uleb128 0x21
 4088 022b 05       		.uleb128 0x5
 4089 022c 00       		.byte	0
 4090 022d 03       		.uleb128 0x3
 4091 022e 0E       		.uleb128 0xe
 4092 022f 3A       		.uleb128 0x3a
 4093 0230 0B       		.uleb128 0xb
 4094 0231 3B       		.uleb128 0x3b
 4095 0232 05       		.uleb128 0x5
 4096 0233 49       		.uleb128 0x49
 4097 0234 13       		.uleb128 0x13
 4098 0235 02       		.uleb128 0x2
 4099 0236 18       		.uleb128 0x18
 4100 0237 00       		.byte	0
 4101 0238 00       		.byte	0
 4102 0239 22       		.uleb128 0x22
 4103 023a 34       		.uleb128 0x34
 4104 023b 00       		.byte	0
 4105 023c 03       		.uleb128 0x3
 4106 023d 08       		.uleb128 0x8
 4107 023e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 88


 4108 023f 0B       		.uleb128 0xb
 4109 0240 3B       		.uleb128 0x3b
 4110 0241 05       		.uleb128 0x5
 4111 0242 49       		.uleb128 0x49
 4112 0243 13       		.uleb128 0x13
 4113 0244 02       		.uleb128 0x2
 4114 0245 18       		.uleb128 0x18
 4115 0246 00       		.byte	0
 4116 0247 00       		.byte	0
 4117 0248 23       		.uleb128 0x23
 4118 0249 34       		.uleb128 0x34
 4119 024a 00       		.byte	0
 4120 024b 03       		.uleb128 0x3
 4121 024c 0E       		.uleb128 0xe
 4122 024d 3A       		.uleb128 0x3a
 4123 024e 0B       		.uleb128 0xb
 4124 024f 3B       		.uleb128 0x3b
 4125 0250 05       		.uleb128 0x5
 4126 0251 49       		.uleb128 0x49
 4127 0252 13       		.uleb128 0x13
 4128 0253 3F       		.uleb128 0x3f
 4129 0254 19       		.uleb128 0x19
 4130 0255 3C       		.uleb128 0x3c
 4131 0256 19       		.uleb128 0x19
 4132 0257 00       		.byte	0
 4133 0258 00       		.byte	0
 4134 0259 24       		.uleb128 0x24
 4135 025a 34       		.uleb128 0x34
 4136 025b 00       		.byte	0
 4137 025c 03       		.uleb128 0x3
 4138 025d 0E       		.uleb128 0xe
 4139 025e 3A       		.uleb128 0x3a
 4140 025f 0B       		.uleb128 0xb
 4141 0260 3B       		.uleb128 0x3b
 4142 0261 0B       		.uleb128 0xb
 4143 0262 49       		.uleb128 0x49
 4144 0263 13       		.uleb128 0x13
 4145 0264 3F       		.uleb128 0x3f
 4146 0265 19       		.uleb128 0x19
 4147 0266 02       		.uleb128 0x2
 4148 0267 18       		.uleb128 0x18
 4149 0268 00       		.byte	0
 4150 0269 00       		.byte	0
 4151 026a 25       		.uleb128 0x25
 4152 026b 34       		.uleb128 0x34
 4153 026c 00       		.byte	0
 4154 026d 03       		.uleb128 0x3
 4155 026e 08       		.uleb128 0x8
 4156 026f 3A       		.uleb128 0x3a
 4157 0270 0B       		.uleb128 0xb
 4158 0271 3B       		.uleb128 0x3b
 4159 0272 0B       		.uleb128 0xb
 4160 0273 49       		.uleb128 0x49
 4161 0274 13       		.uleb128 0x13
 4162 0275 3F       		.uleb128 0x3f
 4163 0276 19       		.uleb128 0x19
 4164 0277 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 89


 4165 0278 18       		.uleb128 0x18
 4166 0279 00       		.byte	0
 4167 027a 00       		.byte	0
 4168 027b 00       		.byte	0
 4169              		.section	.debug_aranges,"",%progbits
 4170 0000 8C000000 		.4byte	0x8c
 4171 0004 0200     		.2byte	0x2
 4172 0006 00000000 		.4byte	.Ldebug_info0
 4173 000a 04       		.byte	0x4
 4174 000b 00       		.byte	0
 4175 000c 0000     		.2byte	0
 4176 000e 0000     		.2byte	0
 4177 0010 00000000 		.4byte	.LFB64
 4178 0014 0C000000 		.4byte	.LFE64-.LFB64
 4179 0018 00000000 		.4byte	.LFB65
 4180 001c 2C010000 		.4byte	.LFE65-.LFB65
 4181 0020 00000000 		.4byte	.LFB66
 4182 0024 64000000 		.4byte	.LFE66-.LFB66
 4183 0028 00000000 		.4byte	.LFB67
 4184 002c 2A000000 		.4byte	.LFE67-.LFB67
 4185 0030 00000000 		.4byte	.LFB68
 4186 0034 50000000 		.4byte	.LFE68-.LFB68
 4187 0038 00000000 		.4byte	.LFB69
 4188 003c 48000000 		.4byte	.LFE69-.LFB69
 4189 0040 00000000 		.4byte	.LFB70
 4190 0044 1E000000 		.4byte	.LFE70-.LFB70
 4191 0048 00000000 		.4byte	.LFB71
 4192 004c 46000000 		.4byte	.LFE71-.LFB71
 4193 0050 00000000 		.4byte	.LFB72
 4194 0054 E4000000 		.4byte	.LFE72-.LFB72
 4195 0058 00000000 		.4byte	.LFB73
 4196 005c 1E000000 		.4byte	.LFE73-.LFB73
 4197 0060 00000000 		.4byte	.LFB74
 4198 0064 30040000 		.4byte	.LFE74-.LFB74
 4199 0068 00000000 		.4byte	.LFB75
 4200 006c 44000000 		.4byte	.LFE75-.LFB75
 4201 0070 00000000 		.4byte	.LFB76
 4202 0074 74020000 		.4byte	.LFE76-.LFB76
 4203 0078 00000000 		.4byte	.LFB77
 4204 007c 74000000 		.4byte	.LFE77-.LFB77
 4205 0080 00000000 		.4byte	.LFB78
 4206 0084 38010000 		.4byte	.LFE78-.LFB78
 4207 0088 00000000 		.4byte	0
 4208 008c 00000000 		.4byte	0
 4209              		.section	.debug_ranges,"",%progbits
 4210              	.Ldebug_ranges0:
 4211 0000 00000000 		.4byte	.LFB64
 4212 0004 0C000000 		.4byte	.LFE64
 4213 0008 00000000 		.4byte	.LFB65
 4214 000c 2C010000 		.4byte	.LFE65
 4215 0010 00000000 		.4byte	.LFB66
 4216 0014 64000000 		.4byte	.LFE66
 4217 0018 00000000 		.4byte	.LFB67
 4218 001c 2A000000 		.4byte	.LFE67
 4219 0020 00000000 		.4byte	.LFB68
 4220 0024 50000000 		.4byte	.LFE68
 4221 0028 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 90


 4222 002c 48000000 		.4byte	.LFE69
 4223 0030 00000000 		.4byte	.LFB70
 4224 0034 1E000000 		.4byte	.LFE70
 4225 0038 00000000 		.4byte	.LFB71
 4226 003c 46000000 		.4byte	.LFE71
 4227 0040 00000000 		.4byte	.LFB72
 4228 0044 E4000000 		.4byte	.LFE72
 4229 0048 00000000 		.4byte	.LFB73
 4230 004c 1E000000 		.4byte	.LFE73
 4231 0050 00000000 		.4byte	.LFB74
 4232 0054 30040000 		.4byte	.LFE74
 4233 0058 00000000 		.4byte	.LFB75
 4234 005c 44000000 		.4byte	.LFE75
 4235 0060 00000000 		.4byte	.LFB76
 4236 0064 74020000 		.4byte	.LFE76
 4237 0068 00000000 		.4byte	.LFB77
 4238 006c 74000000 		.4byte	.LFE77
 4239 0070 00000000 		.4byte	.LFB78
 4240 0074 38010000 		.4byte	.LFE78
 4241 0078 00000000 		.4byte	0
 4242 007c 00000000 		.4byte	0
 4243              		.section	.debug_line,"",%progbits
 4244              	.Ldebug_line0:
 4245 0000 1E040000 		.section	.debug_str,"MS",%progbits,1
 4245      02001B02 
 4245      00000201 
 4245      FB0E0D00 
 4245      01010101 
 4246              	.LASF104:
 4247 0000 745F6D6F 		.ascii	"t_modem\000"
 4247      64656D00 
 4248              	.LASF12:
 4249 0008 75696E74 		.ascii	"uint16\000"
 4249      313600
 4250              	.LASF49:
 4251 000f 746D5F68 		.ascii	"tm_hour\000"
 4251      6F757200 
 4252              	.LASF36:
 4253 0017 6E756D5F 		.ascii	"num_invalid_readings\000"
 4253      696E7661 
 4253      6C69645F 
 4253      72656164 
 4253      696E6773 
 4254              	.LASF138:
 4255 002c 62756666 		.ascii	"buffer_overflow\000"
 4255      65725F6F 
 4255      76657266 
 4255      6C6F7700 
 4256              	.LASF136:
 4257 003c 66696C65 		.ascii	"fileName\000"
 4257      4E616D65 
 4257      00
 4258              	.LASF0:
 4259 0045 7369676E 		.ascii	"signed char\000"
 4259      65642063 
 4259      68617200 
 4260              	.LASF81:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 91


 4261 0051 636F756E 		.ascii	"countDownResetCondition\000"
 4261      74446F77 
 4261      6E526573 
 4261      6574436F 
 4261      6E646974 
 4262              	.LASF160:
 4263 0069 57616B65 		.ascii	"Wakeup_ISR\000"
 4263      75705F49 
 4263      535200
 4264              	.LASF157:
 4265 0074 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4265      43313120 
 4265      352E342E 
 4265      31203230 
 4265      31363036 
 4266 00a7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4266      20726576 
 4266      6973696F 
 4266      6E203233 
 4266      37373135 
 4267 00da 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4267      66756E63 
 4267      74696F6E 
 4267      2D736563 
 4267      74696F6E 
 4268              	.LASF26:
 4269 0102 4D6F6E74 		.ascii	"Month\000"
 4269      6800
 4270              	.LASF7:
 4271 0108 6C6F6E67 		.ascii	"long long unsigned int\000"
 4271      206C6F6E 
 4271      6720756E 
 4271      7369676E 
 4271      65642069 
 4272              	.LASF22:
 4273 011f 486F7572 		.ascii	"Hour\000"
 4273      00
 4274              	.LASF142:
 4275 0124 6D6F6465 		.ascii	"modem_state\000"
 4275      6D5F7374 
 4275      61746500 
 4276              	.LASF151:
 4277 0130 616C6172 		.ascii	"alarmMeasure\000"
 4277      6D4D6561 
 4277      73757265 
 4277      00
 4278              	.LASF137:
 4279 013d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4279      52784275 
 4279      66666572 
 4279      00
 4280              	.LASF105:
 4281 014a 745F6C65 		.ascii	"t_level_sensor\000"
 4281      76656C5F 
 4281      73656E73 
 4281      6F7200
 4282              	.LASF6:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 92


 4283 0159 6C6F6E67 		.ascii	"long long int\000"
 4283      206C6F6E 
 4283      6720696E 
 4283      7400
 4284              	.LASF115:
 4285 0167 7061636B 		.ascii	"packets\000"
 4285      65747300 
 4286              	.LASF65:
 4287 016f 65636E6F 		.ascii	"ecno\000"
 4287      00
 4288              	.LASF152:
 4289 0174 74696D65 		.ascii	"timeToMeasure\000"
 4289      546F4D65 
 4289      61737572 
 4289      6500
 4290              	.LASF68:
 4291 0182 74696D65 		.ascii	"time_to_network_connect\000"
 4291      5F746F5F 
 4291      6E657477 
 4291      6F726B5F 
 4291      636F6E6E 
 4292              	.LASF154:
 4293 019a 74696D65 		.ascii	"timeToSync\000"
 4293      546F5379 
 4293      6E6300
 4294              	.LASF39:
 4295 01a5 766F6C74 		.ascii	"voltage_solar\000"
 4295      6167655F 
 4295      736F6C61 
 4295      7200
 4296              	.LASF40:
 4297 01b3 766F6C74 		.ascii	"voltage_charge_current\000"
 4297      6167655F 
 4297      63686172 
 4297      67655F63 
 4297      75727265 
 4298              	.LASF135:
 4299 01ca 75706772 		.ascii	"upgrade_status\000"
 4299      6164655F 
 4299      73746174 
 4299      757300
 4300              	.LASF118:
 4301 01d9 635F6461 		.ascii	"c_data_count_sent\000"
 4301      74615F63 
 4301      6F756E74 
 4301      5F73656E 
 4301      7400
 4302              	.LASF62:
 4303 01eb 6D6F6465 		.ascii	"modem_info_t\000"
 4303      6D5F696E 
 4303      666F5F74 
 4303      00
 4304              	.LASF63:
 4305 01f8 72786C65 		.ascii	"rxlev\000"
 4305      7600
 4306              	.LASF4:
 4307 01fe 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 93


 4307      20696E74 
 4307      00
 4308              	.LASF69:
 4309 0207 74696D65 		.ascii	"time_to_acquire_ip\000"
 4309      5F746F5F 
 4309      61637175 
 4309      6972655F 
 4309      697000
 4310              	.LASF82:
 4311 021a 616C6172 		.ascii	"alarm\000"
 4311      6D00
 4312              	.LASF11:
 4313 0220 75696E74 		.ascii	"uint8\000"
 4313      3800
 4314              	.LASF110:
 4315 0226 635F7472 		.ascii	"c_try_counter\000"
 4315      795F636F 
 4315      756E7465 
 4315      7200
 4316              	.LASF121:
 4317 0234 73656E64 		.ascii	"send_time\000"
 4317      5F74696D 
 4317      6500
 4318              	.LASF16:
 4319 023e 696E7433 		.ascii	"int32\000"
 4319      3200
 4320              	.LASF71:
 4321 0244 6E6F6465 		.ascii	"node_type\000"
 4321      5F747970 
 4321      6500
 4322              	.LASF108:
 4323 024e 73796E63 		.ascii	"syncData\000"
 4323      44617461 
 4323      00
 4324              	.LASF116:
 4325 0257 6E657477 		.ascii	"network_time\000"
 4325      6F726B5F 
 4325      74696D65 
 4325      00
 4326              	.LASF13:
 4327 0264 75696E74 		.ascii	"uint32\000"
 4327      333200
 4328              	.LASF60:
 4329 026b 6D6F6465 		.ascii	"model_id\000"
 4329      6C5F6964 
 4329      00
 4330              	.LASF33:
 4331 0274 616C6C5F 		.ascii	"all_level_readings\000"
 4331      6C657665 
 4331      6C5F7265 
 4331      6164696E 
 4331      677300
 4332              	.LASF78:
 4333 0287 636F756E 		.ascii	"countDownValue\000"
 4333      74446F77 
 4333      6E56616C 
 4333      756500
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 94


 4334              	.LASF131:
 4335 0296 75706772 		.ascii	"upgraded\000"
 4335      61646564 
 4335      00
 4336              	.LASF51:
 4337 029f 746D5F6D 		.ascii	"tm_mon\000"
 4337      6F6E00
 4338              	.LASF75:
 4339 02a6 64656275 		.ascii	"debug_level\000"
 4339      675F6C65 
 4339      76656C00 
 4340              	.LASF133:
 4341 02b2 706F7274 		.ascii	"port\000"
 4341      00
 4342              	.LASF159:
 4343 02b7 433A5C6E 		.ascii	"C:\\notoriOS\\notoriOS.cydsn\000"
 4343      6F746F72 
 4343      694F535C 
 4343      6E6F746F 
 4343      72694F53 
 4344              	.LASF56:
 4345 02d2 76616C75 		.ascii	"value\000"
 4345      6500
 4346              	.LASF132:
 4347 02d8 686F7374 		.ascii	"host\000"
 4347      00
 4348              	.LASF52:
 4349 02dd 746D5F79 		.ascii	"tm_year\000"
 4349      65617200 
 4350              	.LASF153:
 4351 02e5 616C6172 		.ascii	"alarmSync\000"
 4351      6D53796E 
 4351      6300
 4352              	.LASF8:
 4353 02ef 756E7369 		.ascii	"unsigned int\000"
 4353      676E6564 
 4353      20696E74 
 4353      00
 4354              	.LASF129:
 4355 02fc 73657454 		.ascii	"setTime\000"
 4355      696D6500 
 4356              	.LASF58:
 4357 0304 6B65795F 		.ascii	"key_value_t\000"
 4357      76616C75 
 4357      655F7400 
 4358              	.LASF94:
 4359 0310 41796F49 		.ascii	"AyoItsTime\000"
 4359      74735469 
 4359      6D6500
 4360              	.LASF35:
 4361 031b 6E756D5F 		.ascii	"num_valid_readings\000"
 4361      76616C69 
 4361      645F7265 
 4361      6164696E 
 4361      677300
 4362              	.LASF120:
 4363 032e 68747470 		.ascii	"http_chunk\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 95


 4363      5F636875 
 4363      6E6B00
 4364              	.LASF126:
 4365 0339 6D5F766F 		.ascii	"m_voltage\000"
 4365      6C746167 
 4365      6500
 4366              	.LASF5:
 4367 0343 6C6F6E67 		.ascii	"long unsigned int\000"
 4367      20756E73 
 4367      69676E65 
 4367      6420696E 
 4367      7400
 4368              	.LASF91:
 4369 0355 7472795F 		.ascii	"try_counter\000"
 4369      636F756E 
 4369      74657200 
 4370              	.LASF111:
 4371 0361 64617461 		.ascii	"data_count_desired\000"
 4371      5F636F75 
 4371      6E745F64 
 4371      65736972 
 4371      656400
 4372              	.LASF38:
 4373 0374 766F6C74 		.ascii	"voltage_battery\000"
 4373      6167655F 
 4373      62617474 
 4373      65727900 
 4374              	.LASF24:
 4375 0384 4461794F 		.ascii	"DayOfMonth\000"
 4375      664D6F6E 
 4375      746800
 4376              	.LASF124:
 4377 038f 6D616B65 		.ascii	"makeMeasurements\000"
 4377      4D656173 
 4377      7572656D 
 4377      656E7473 
 4377      00
 4378              	.LASF141:
 4379 03a0 64617461 		.ascii	"data\000"
 4379      00
 4380              	.LASF87:
 4381 03a5 65705F70 		.ascii	"ep_port\000"
 4381      6F727400 
 4382              	.LASF55:
 4383 03ad 746D5F69 		.ascii	"tm_isdst\000"
 4383      73647374 
 4383      00
 4384              	.LASF83:
 4385 03b6 6D6F6465 		.ascii	"modem_info\000"
 4385      6D5F696E 
 4385      666F00
 4386              	.LASF86:
 4387 03c1 65705F68 		.ascii	"ep_host\000"
 4387      6F737400 
 4388              	.LASF14:
 4389 03c9 696E7438 		.ascii	"int8\000"
 4389      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 96


 4390              	.LASF93:
 4391 03ce 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 4391      576F726B 
 4391      576F726B 
 4391      576F726B 
 4391      576F726B 
 4392              	.LASF112:
 4393 03e7 635F6461 		.ascii	"c_data_count_desired\000"
 4393      74615F63 
 4393      6F756E74 
 4393      5F646573 
 4393      69726564 
 4394              	.LASF107:
 4395 03fc 745F7364 		.ascii	"t_sd_card\000"
 4395      5F636172 
 4395      6400
 4396              	.LASF2:
 4397 0406 73686F72 		.ascii	"short int\000"
 4397      7420696E 
 4397      7400
 4398              	.LASF143:
 4399 0410 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4399      6D5F7374 
 4399      6172745F 
 4399      74696D65 
 4399      5F737461 
 4400              	.LASF85:
 4401 0427 7379735F 		.ascii	"sys_info_t\000"
 4401      696E666F 
 4401      5F7400
 4402              	.LASF77:
 4403 0432 75706461 		.ascii	"updatable_parameters_t\000"
 4403      7461626C 
 4403      655F7061 
 4403      72616D65 
 4403      74657273 
 4404              	.LASF95:
 4405 0449 616C6172 		.ascii	"alarmType\000"
 4405      6D547970 
 4405      6500
 4406              	.LASF139:
 4407 0453 64617461 		.ascii	"dataPointsInStack\000"
 4407      506F696E 
 4407      7473496E 
 4407      53746163 
 4407      6B00
 4408              	.LASF48:
 4409 0465 746D5F6D 		.ascii	"tm_min\000"
 4409      696E00
 4410              	.LASF134:
 4411 046c 726F7574 		.ascii	"route\000"
 4411      6500
 4412              	.LASF96:
 4413 0472 616C6172 		.ascii	"alarmToBeUpdated\000"
 4413      6D546F42 
 4413      65557064 
 4413      61746564 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 97


 4413      00
 4414              	.LASF21:
 4415 0483 73697A65 		.ascii	"sizetype\000"
 4415      74797065 
 4415      00
 4416              	.LASF54:
 4417 048c 746D5F79 		.ascii	"tm_yday\000"
 4417      64617900 
 4418              	.LASF88:
 4419 0494 7379735F 		.ascii	"sys_settings_t\000"
 4419      73657474 
 4419      696E6773 
 4419      5F7400
 4420              	.LASF130:
 4421 04a3 6C6F6361 		.ascii	"localTime\000"
 4421      6C54696D 
 4421      6500
 4422              	.LASF155:
 4423 04ad 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 4423      546F5379 
 4423      636E5265 
 4423      6D6F7465 
 4423      50617261 
 4424              	.LASF57:
 4425 04c4 74696D65 		.ascii	"timeStamp\000"
 4425      5374616D 
 4425      7000
 4426              	.LASF28:
 4427 04ce 5254435F 		.ascii	"RTC_TIME_DATE\000"
 4427      54494D45 
 4427      5F444154 
 4427      4500
 4428              	.LASF145:
 4429 04dc 75706461 		.ascii	"updatable_parameters\000"
 4429      7461626C 
 4429      655F7061 
 4429      72616D65 
 4429      74657273 
 4430              	.LASF100:
 4431 04f1 43726561 		.ascii	"CreateAlarm\000"
 4431      7465416C 
 4431      61726D00 
 4432              	.LASF119:
 4433 04fd 7061636B 		.ascii	"packet\000"
 4433      657400
 4434              	.LASF109:
 4435 0504 735F7273 		.ascii	"s_rsrp\000"
 4435      727000
 4436              	.LASF41:
 4437 050b 766F6C74 		.ascii	"voltage_pressure\000"
 4437      6167655F 
 4437      70726573 
 4437      73757265 
 4437      00
 4438              	.LASF146:
 4439 051c 68747470 		.ascii	"http_request\000"
 4439      5F726571 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 98


 4439      75657374 
 4439      00
 4440              	.LASF17:
 4441 0529 666C6F61 		.ascii	"float\000"
 4441      7400
 4442              	.LASF37:
 4443 052f 6C657665 		.ascii	"level_sensor_t\000"
 4443      6C5F7365 
 4443      6E736F72 
 4443      5F7400
 4444              	.LASF123:
 4445 053e 636F6E66 		.ascii	"configureRemoteParams\000"
 4445      69677572 
 4445      6552656D 
 4445      6F746550 
 4445      6172616D 
 4446              	.LASF156:
 4447 0554 44617461 		.ascii	"Data_fileName\000"
 4447      5F66696C 
 4447      654E616D 
 4447      6500
 4448              	.LASF92:
 4449 0562 6D6F6465 		.ascii	"modem_status\000"
 4449      6D5F7374 
 4449      61747573 
 4449      00
 4450              	.LASF29:
 4451 056f 74657374 		.ascii	"test_name\000"
 4451      5F6E616D 
 4451      6500
 4452              	.LASF27:
 4453 0579 59656172 		.ascii	"Year\000"
 4453      00
 4454              	.LASF76:
 4455 057e 5F426F6F 		.ascii	"_Bool\000"
 4455      6C00
 4456              	.LASF10:
 4457 0584 696E7433 		.ascii	"int32_t\000"
 4457      325F7400 
 4458              	.LASF1:
 4459 058c 756E7369 		.ascii	"unsigned char\000"
 4459      676E6564 
 4459      20636861 
 4459      7200
 4460              	.LASF150:
 4461 059a 73797374 		.ascii	"system_settings\000"
 4461      656D5F73 
 4461      65747469 
 4461      6E677300 
 4462              	.LASF67:
 4463 05aa 72737270 		.ascii	"rsrp\000"
 4463      00
 4464              	.LASF66:
 4465 05af 72737271 		.ascii	"rsrq\000"
 4465      00
 4466              	.LASF97:
 4467 05b4 52657365 		.ascii	"ResetAlarm\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 99


 4467      74416C61 
 4467      726D00
 4468              	.LASF122:
 4469 05bf 735F7365 		.ascii	"s_send_time\000"
 4469      6E645F74 
 4469      696D6500 
 4470              	.LASF74:
 4471 05cb 73796E63 		.ascii	"sync_time\000"
 4471      5F74696D 
 4471      6500
 4472              	.LASF45:
 4473 05d5 70726573 		.ascii	"pressure_depth\000"
 4473      73757265 
 4473      5F646570 
 4473      746800
 4474              	.LASF64:
 4475 05e4 72736370 		.ascii	"rscp\000"
 4475      00
 4476              	.LASF23:
 4477 05e9 4461794F 		.ascii	"DayOfWeek\000"
 4477      66576565 
 4477      6B00
 4478              	.LASF32:
 4479 05f3 74657374 		.ascii	"test_t\000"
 4479      5F7400
 4480              	.LASF149:
 4481 05fa 73797374 		.ascii	"system_info\000"
 4481      656D5F69 
 4481      6E666F00 
 4482              	.LASF61:
 4483 0606 696D6569 		.ascii	"imei\000"
 4483      00
 4484              	.LASF31:
 4485 060b 72656173 		.ascii	"reason\000"
 4485      6F6E00
 4486              	.LASF98:
 4487 0612 616C6172 		.ascii	"alarmToBeReset\000"
 4487      6D546F42 
 4487      65526573 
 4487      657400
 4488              	.LASF103:
 4489 0621 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 4489      6B697479 
 4489      43686563 
 4489      6B596F75 
 4489      7273656C 
 4490              	.LASF117:
 4491 064d 64617461 		.ascii	"data_count_sent\000"
 4491      5F636F75 
 4491      6E745F73 
 4491      656E7400 
 4492              	.LASF70:
 4493 065d 6D6F6465 		.ascii	"modem_stats_t\000"
 4493      6D5F7374 
 4493      6174735F 
 4493      7400
 4494              	.LASF44:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 100


 4495 066b 70726573 		.ascii	"pressure_current\000"
 4495      73757265 
 4495      5F637572 
 4495      72656E74 
 4495      00
 4496              	.LASF42:
 4497 067c 76616C69 		.ascii	"valid\000"
 4497      6400
 4498              	.LASF53:
 4499 0682 746D5F77 		.ascii	"tm_wday\000"
 4499      64617900 
 4500              	.LASF20:
 4501 068a 6C6F6E67 		.ascii	"long double\000"
 4501      20646F75 
 4501      626C6500 
 4502              	.LASF114:
 4503 0696 6368756E 		.ascii	"chunk\000"
 4503      6B00
 4504              	.LASF125:
 4505 069c 635F7469 		.ascii	"c_timeStamp\000"
 4505      6D655374 
 4505      616D7000 
 4506              	.LASF19:
 4507 06a8 63686172 		.ascii	"char\000"
 4507      00
 4508              	.LASF144:
 4509 06ad 6D6F6465 		.ascii	"modem_stats\000"
 4509      6D5F7374 
 4509      61747300 
 4510              	.LASF148:
 4511 06b9 68747470 		.ascii	"http_route\000"
 4511      5F726F75 
 4511      746500
 4512              	.LASF113:
 4513 06c4 706F7274 		.ascii	"portConfig\000"
 4513      436F6E66 
 4513      696700
 4514              	.LASF9:
 4515 06cf 5F5F696E 		.ascii	"__int32_t\000"
 4515      7433325F 
 4515      7400
 4516              	.LASF89:
 4517 06d9 756E6971 		.ascii	"uniqueId\000"
 4517      75654964 
 4517      00
 4518              	.LASF127:
 4519 06e2 6D5F6C65 		.ascii	"m_level_sensor\000"
 4519      76656C5F 
 4519      73656E73 
 4519      6F7200
 4520              	.LASF34:
 4521 06f1 6C657665 		.ascii	"level_reading\000"
 4521      6C5F7265 
 4521      6164696E 
 4521      6700
 4522              	.LASF161:
 4523 06ff 4C617942 		.ascii	"LayBack\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 101


 4523      61636B00 
 4524              	.LASF3:
 4525 0707 73686F72 		.ascii	"short unsigned int\000"
 4525      7420756E 
 4525      7369676E 
 4525      65642069 
 4525      6E7400
 4526              	.LASF59:
 4527 071a 73696D5F 		.ascii	"sim_id\000"
 4527      696400
 4528              	.LASF50:
 4529 0721 746D5F6D 		.ascii	"tm_mday\000"
 4529      64617900 
 4530              	.LASF101:
 4531 0729 6E657741 		.ascii	"newAlarm\000"
 4531      6C61726D 
 4531      00
 4532              	.LASF47:
 4533 0732 746D5F73 		.ascii	"tm_sec\000"
 4533      656300
 4534              	.LASF128:
 4535 0739 6D5F7072 		.ascii	"m_pressure\000"
 4535      65737375 
 4535      726500
 4536              	.LASF30:
 4537 0744 73746174 		.ascii	"status\000"
 4537      757300
 4538              	.LASF140:
 4539 074b 64617461 		.ascii	"dataPointsInStackDesired\000"
 4539      506F696E 
 4539      7473496E 
 4539      53746163 
 4539      6B446573 
 4540              	.LASF106:
 4541 0764 745F766F 		.ascii	"t_voltages\000"
 4541      6C746167 
 4541      657300
 4542              	.LASF158:
 4543 076f 6E6F746F 		.ascii	"notoriOS.c\000"
 4543      72694F53 
 4543      2E6300
 4544              	.LASF147:
 4545 077a 68747470 		.ascii	"http_body\000"
 4545      5F626F64 
 4545      7900
 4546              	.LASF15:
 4547 0784 696E7431 		.ascii	"int16\000"
 4547      3600
 4548              	.LASF80:
 4549 078a 636F756E 		.ascii	"countDownType\000"
 4549      74446F77 
 4549      6E547970 
 4549      6500
 4550              	.LASF79:
 4551 0798 63757272 		.ascii	"currentCountDownValue\000"
 4551      656E7443 
 4551      6F756E74 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc4UX4JC.s 			page 102


 4551      446F776E 
 4551      56616C75 
 4552              	.LASF72:
 4553 07ae 73696D5F 		.ascii	"sim_type\000"
 4553      74797065 
 4553      00
 4554              	.LASF90:
 4555 07b7 635F6865 		.ascii	"c_hey\000"
 4555      7900
 4556              	.LASF25:
 4557 07bd 4461794F 		.ascii	"DayOfYear\000"
 4557      66596561 
 4557      7200
 4558              	.LASF46:
 4559 07c7 70726573 		.ascii	"pressure_t\000"
 4559      73757265 
 4559      5F7400
 4560              	.LASF99:
 4561 07d2 416C6172 		.ascii	"AlarmReady\000"
 4561      6D526561 
 4561      647900
 4562              	.LASF102:
 4563 07dd 52656164 		.ascii	"ReadyOrNot\000"
 4563      794F724E 
 4563      6F7400
 4564              	.LASF162:
 4565 07e8 6D61696E 		.ascii	"main\000"
 4565      00
 4566              	.LASF84:
 4567 07ed 63686970 		.ascii	"chip_uniqueId\000"
 4567      5F756E69 
 4567      71756549 
 4567      6400
 4568              	.LASF73:
 4569 07fb 6D656173 		.ascii	"measure_time\000"
 4569      7572655F 
 4569      74696D65 
 4569      00
 4570              	.LASF18:
 4571 0808 646F7562 		.ascii	"double\000"
 4571      6C6500
 4572              	.LASF43:
 4573 080f 766F6C74 		.ascii	"voltage_t\000"
 4573      6167655F 
 4573      7400
 4574              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
