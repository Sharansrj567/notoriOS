ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.section	.text.Wakeup_ISR,"ax",%progbits
  44              		.align	2
  45              		.global	Wakeup_ISR
  46              		.thumb
  47              		.thumb_func
  48              		.type	Wakeup_ISR, %function
  49              	Wakeup_ISR:
  50              	.LFB64:
  51              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 2


   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  52              		.loc 1 20 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  62              		.loc 1 22 0
  63 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  64              		.loc 1 23 0
  65 0008 00BF     		nop
  66 000a 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE64:
  69              		.size	Wakeup_ISR, .-Wakeup_ISR
  70              		.global	Data_fileName
  71              		.data
  72              		.align	2
  73              		.type	Data_fileName, %object
  74              		.size	Data_fileName, 30
  75              	Data_fileName:
  76 0000 64617461 		.ascii	"data.txt\000"
  76      2E747874 
  76      00
  77 0009 00000000 		.space	21
  77      00000000 
  77      00000000 
  77      00000000 
  77      00000000 
  78              		.comm	try_counter,1,1
  79              		.section	.rodata
  80              		.align	2
  81              	.LC0:
  82 0000 25582D25 		.ascii	"%X-%X\000"
  82      5800
  83 0006 0000     		.align	2
  84              	.LC1:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 3


  85 0008 6563322D 		.ascii	"ec2-13-59-131-167.us-east-2.compute.amazonaws.com\000"
  85      31332D35 
  85      392D3133 
  85      312D3136 
  85      372E7573 
  86 003a 0000     		.align	2
  87              	.LC2:
  88 003c 256400   		.ascii	"%d\000"
  89 003f 00       		.align	2
  90              	.LC3:
  91 0040 7265626F 		.ascii	"reboot\000"
  91      6F7400
  92              		.section	.text.ReadyOrNot,"ax",%progbits
  93              		.align	2
  94              		.global	ReadyOrNot
  95              		.thumb
  96              		.thumb_func
  97              		.type	ReadyOrNot, %function
  98              	ReadyOrNot:
  99              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
 100              		.loc 1 41 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 32
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 B0B5     		push	{r4, r5, r7, lr}
 105              		.cfi_def_cfa_offset 16
 106              		.cfi_offset 4, -16
 107              		.cfi_offset 5, -12
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 8AB0     		sub	sp, sp, #40
 111              		.cfi_def_cfa_offset 56
 112 0004 02AF     		add	r7, sp, #8
 113              		.cfi_def_cfa 7, 48
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 114              		.loc 1 43 0
 115 0006 3948     		ldr	r0, .L3
 116 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 4


  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 117              		.loc 1 44 0
 118 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 119              		.loc 1 46 0
 120 0010 FF20     		movs	r0, #255
 121 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 122              		.loc 1 47 0
 123 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 124              		.loc 1 48 0
 125 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 126              		.loc 1 52 0
 127 001e FFF7FEFF 		bl	modem_initialize
  53:notoriOS.c    ****     
  54:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 128              		.loc 1 54 0
 129 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  55:notoriOS.c    ****    
  56:notoriOS.c    ****     
  57:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  58:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  59:notoriOS.c    ****     
  60:notoriOS.c    ****     
  61:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  62:notoriOS.c    ****     uint32 uniqueId[2];
  63:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  64:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 130              		.loc 1 64 0
 131 0026 07F11403 		add	r3, r7, #20
 132 002a 1846     		mov	r0, r3
 133 002c FFF7FEFF 		bl	CyGetUniqueId
  65:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 134              		.loc 1 65 0
 135 0030 7A69     		ldr	r2, [r7, #20]
 136 0032 BB69     		ldr	r3, [r7, #24]
 137 0034 0093     		str	r3, [sp]
 138 0036 1346     		mov	r3, r2
 139 0038 2D4A     		ldr	r2, .L3+4
 140 003a 1821     		movs	r1, #24
 141 003c 2D48     		ldr	r0, .L3+8
 142 003e FFF7FEFF 		bl	snprintf
  66:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  67:notoriOS.c    ****     system_info.modem_info = &modem_info;
 143              		.loc 1 67 0
 144 0042 2D4B     		ldr	r3, .L3+12
 145 0044 2D4A     		ldr	r2, .L3+16
 146 0046 1A60     		str	r2, [r3]
  68:notoriOS.c    ****     
  69:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  70:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","ec2-13-59-131-167.us-eas
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 5


 147              		.loc 1 70 0
 148 0048 2D4A     		ldr	r2, .L3+20
 149 004a 2E4B     		ldr	r3, .L3+24
 150 004c 1446     		mov	r4, r2
 151 004e 1D46     		mov	r5, r3
 152 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 153 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 154 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 155 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 156 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 157 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 158 005c 2B68     		ldr	r3, [r5]
 159 005e 2380     		strh	r3, [r4]	@ movhi
  71:notoriOS.c    ****    
  72:notoriOS.c    ****     system_settings.ep_port = 5000;
 160              		.loc 1 72 0
 161 0060 274B     		ldr	r3, .L3+20
 162 0062 41F28832 		movw	r2, #5000
 163 0066 5A66     		str	r2, [r3, #100]
  73:notoriOS.c    ****     // Don't need the following for new nodes
  74:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  75:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  76:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  77:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  78:notoriOS.c    ****         
  79:notoriOS.c    ****     
  80:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  81:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 164              		.loc 1 81 0
 165 0068 274B     		ldr	r3, .L3+28
 166 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 167 006c 99B2     		uxth	r1, r3
 168 006e 274C     		ldr	r4, .L3+32
 169 0070 3846     		mov	r0, r7
 170 0072 0723     		movs	r3, #7
 171 0074 0122     		movs	r2, #1
 172 0076 FFF7FEFF 		bl	CreateAlarm
 173 007a 2246     		mov	r2, r4
 174 007c 3B46     		mov	r3, r7
 175 007e 1968     		ldr	r1, [r3]	@ unaligned
 176 0080 1160     		str	r1, [r2]	@ unaligned
 177 0082 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 178 0084 9380     		strh	r3, [r2, #4]	@ unaligned
  82:notoriOS.c    ****     timeToMeasure = 1u;
 179              		.loc 1 82 0
 180 0086 224B     		ldr	r3, .L3+36
 181 0088 0122     		movs	r2, #1
 182 008a 1A70     		strb	r2, [r3]
  83:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  84:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 183              		.loc 1 84 0
 184 008c 1E4B     		ldr	r3, .L3+28
 185 008e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 186 0090 99B2     		uxth	r1, r3
 187 0092 204C     		ldr	r4, .L3+40
 188 0094 3846     		mov	r0, r7
 189 0096 0723     		movs	r3, #7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 6


 190 0098 0122     		movs	r2, #1
 191 009a FFF7FEFF 		bl	CreateAlarm
 192 009e 2246     		mov	r2, r4
 193 00a0 3B46     		mov	r3, r7
 194 00a2 1968     		ldr	r1, [r3]	@ unaligned
 195 00a4 1160     		str	r1, [r2]	@ unaligned
 196 00a6 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 197 00a8 9380     		strh	r3, [r2, #4]	@ unaligned
  85:notoriOS.c    ****     timeToSync = 1u;
 198              		.loc 1 85 0
 199 00aa 1B4B     		ldr	r3, .L3+44
 200 00ac 0122     		movs	r2, #1
 201 00ae 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     
  87:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 202              		.loc 1 87 0
 203 00b0 1A4B     		ldr	r3, .L3+48
 204 00b2 0022     		movs	r2, #0
 205 00b4 1A70     		strb	r2, [r3]
  88:notoriOS.c    ****     
  89:notoriOS.c    ****     // send hey to server saying the node rebooted
  90:notoriOS.c    ****     hey = 1u;
 206              		.loc 1 90 0
 207 00b6 1A4B     		ldr	r3, .L3+52
 208 00b8 0122     		movs	r2, #1
 209 00ba 1A70     		strb	r2, [r3]
  91:notoriOS.c    ****     char c_hey[10];
  92:notoriOS.c    ****     snprintf(c_hey,sizeof(c_hey),"%d",hey);
 210              		.loc 1 92 0
 211 00bc 184B     		ldr	r3, .L3+52
 212 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 213 00c0 07F10800 		add	r0, r7, #8
 214 00c4 174A     		ldr	r2, .L3+56
 215 00c6 0A21     		movs	r1, #10
 216 00c8 FFF7FEFF 		bl	snprintf
  93:notoriOS.c    ****     pushData("reboot",c_hey,getTimeStamp());
 217              		.loc 1 93 0
 218 00cc FFF7FEFF 		bl	getTimeStamp
 219 00d0 0246     		mov	r2, r0
 220 00d2 07F10803 		add	r3, r7, #8
 221 00d6 1946     		mov	r1, r3
 222 00d8 1348     		ldr	r0, .L3+60
 223 00da FFF7FEFF 		bl	pushData
  94:notoriOS.c    ****     
  95:notoriOS.c    ****     // Initialize the try counter to 0
  96:notoriOS.c    ****     uint8 try_counter = 0;
 224              		.loc 1 96 0
 225 00de 0023     		movs	r3, #0
 226 00e0 FB77     		strb	r3, [r7, #31]
  97:notoriOS.c    **** }
 227              		.loc 1 97 0
 228 00e2 00BF     		nop
 229 00e4 2037     		adds	r7, r7, #32
 230              		.cfi_def_cfa_offset 16
 231 00e6 BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 7


 234 00e8 B0BD     		pop	{r4, r5, r7, pc}
 235              	.L4:
 236 00ea 00BF     		.align	2
 237              	.L3:
 238 00ec 00000000 		.word	Wakeup_ISR
 239 00f0 00000000 		.word	.LC0
 240 00f4 04000000 		.word	system_info+4
 241 00f8 00000000 		.word	system_info
 242 00fc 00000000 		.word	modem_info
 243 0100 00000000 		.word	system_settings
 244 0104 08000000 		.word	.LC1
 245 0108 00000000 		.word	updatable_parameters
 246 010c 00000000 		.word	alarmMeasure
 247 0110 00000000 		.word	timeToMeasure
 248 0114 00000000 		.word	alarmSync
 249 0118 00000000 		.word	timeToSync
 250 011c 00000000 		.word	timeToSycnRemoteParams
 251 0120 00000000 		.word	hey
 252 0124 3C000000 		.word	.LC2
 253 0128 40000000 		.word	.LC3
 254              		.cfi_endproc
 255              	.LFE65:
 256              		.size	ReadyOrNot, .-ReadyOrNot
 257              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 258              		.align	2
 259              		.global	WorkWorkWorkWorkWorkWork
 260              		.thumb
 261              		.thumb_func
 262              		.type	WorkWorkWorkWorkWorkWork, %function
 263              	WorkWorkWorkWorkWorkWork:
 264              	.LFB66:
  98:notoriOS.c    **** 
  99:notoriOS.c    **** 
 100:notoriOS.c    **** // ==============================================
 101:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
 102:notoriOS.c    **** //      - Rhiana, feat Drake (2016)
 103:notoriOS.c    **** //
 104:notoriOS.c    **** // Prorcesses core tasks
 105:notoriOS.c    **** // ==============================================
 106:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
 107:notoriOS.c    **** {
 265              		.loc 1 107 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269 0000 80B5     		push	{r7, lr}
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 82B0     		sub	sp, sp, #8
 274              		.cfi_def_cfa_offset 16
 275 0004 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
 108:notoriOS.c    ****     
 109:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 110:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 111:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 8


 112:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 113:notoriOS.c    ****     
 114:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 115:notoriOS.c    ****     if(timeToSycnRemoteParams){
 277              		.loc 1 115 0
 278 0006 144B     		ldr	r3, .L10
 279 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 000a 002B     		cmp	r3, #0
 281 000c 06D0     		beq	.L6
 116:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
 282              		.loc 1 116 0
 283 000e FFF7FEFF 		bl	configureRemoteParams
 284 0012 0346     		mov	r3, r0
 285 0014 1A46     		mov	r2, r3
 286 0016 104B     		ldr	r3, .L10
 287 0018 1A70     		strb	r2, [r3]
 288 001a 14E0     		b	.L7
 289              	.L6:
 117:notoriOS.c    ****     }
 118:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 119:notoriOS.c    ****     else if(timeToMeasure){
 290              		.loc 1 119 0
 291 001c 0F4B     		ldr	r3, .L10+4
 292 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 293 0020 002B     		cmp	r3, #0
 294 0022 06D0     		beq	.L8
 120:notoriOS.c    ****         //(int i=0; i<=30; i++){
 121:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 295              		.loc 1 121 0
 296 0024 FFF7FEFF 		bl	makeMeasurements
 297 0028 0346     		mov	r3, r0
 298 002a 1A46     		mov	r2, r3
 299 002c 0B4B     		ldr	r3, .L10+4
 300 002e 1A70     		strb	r2, [r3]
 301 0030 09E0     		b	.L7
 302              	.L8:
 122:notoriOS.c    ****         //CyDelay(1000u);
 123:notoriOS.c    ****         //}
 124:notoriOS.c    ****     }else if(timeToSync){
 303              		.loc 1 124 0
 304 0032 0B4B     		ldr	r3, .L10+8
 305 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 0036 002B     		cmp	r3, #0
 307 0038 05D0     		beq	.L7
 125:notoriOS.c    ****             timeToSync = syncData();
 308              		.loc 1 125 0
 309 003a FFF7FEFF 		bl	syncData
 310 003e 0346     		mov	r3, r0
 311 0040 1A46     		mov	r2, r3
 312 0042 074B     		ldr	r3, .L10+8
 313 0044 1A70     		strb	r2, [r3]
 314              	.L7:
 126:notoriOS.c    ****     }
 127:notoriOS.c    ****     // Print the countdown to the next alarm
 128:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 129:notoriOS.c    ****     
 130:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 9


 131:notoriOS.c    ****     // Check modem state machine on every loop
 132:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
 315              		.loc 1 132 0
 316 0046 FFF7FEFF 		bl	modem_process_tasks
 317 004a 0346     		mov	r3, r0
 318 004c FB71     		strb	r3, [r7, #7]
 133:notoriOS.c    **** 
 134:notoriOS.c    ****     return 0u +  modem_status;  
 319              		.loc 1 134 0
 320 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 135:notoriOS.c    **** }
 321              		.loc 1 135 0
 322 0050 1846     		mov	r0, r3
 323 0052 0837     		adds	r7, r7, #8
 324              		.cfi_def_cfa_offset 8
 325 0054 BD46     		mov	sp, r7
 326              		.cfi_def_cfa_register 13
 327              		@ sp needed
 328 0056 80BD     		pop	{r7, pc}
 329              	.L11:
 330              		.align	2
 331              	.L10:
 332 0058 00000000 		.word	timeToSycnRemoteParams
 333 005c 00000000 		.word	timeToMeasure
 334 0060 00000000 		.word	timeToSync
 335              		.cfi_endproc
 336              	.LFE66:
 337              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 338              		.section	.text.LayBack,"ax",%progbits
 339              		.align	2
 340              		.global	LayBack
 341              		.thumb
 342              		.thumb_func
 343              		.type	LayBack, %function
 344              	LayBack:
 345              	.LFB67:
 136:notoriOS.c    **** 
 137:notoriOS.c    **** 
 138:notoriOS.c    **** 
 139:notoriOS.c    **** 
 140:notoriOS.c    **** 
 141:notoriOS.c    **** 
 142:notoriOS.c    **** // ==============================================
 143:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 144:notoriOS.c    **** //      - Snoop Dogg (1993)
 145:notoriOS.c    **** //
 146:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 147:notoriOS.c    **** // ==============================================
 148:notoriOS.c    **** void LayBack()
 149:notoriOS.c    **** {
 346              		.loc 1 149 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 10


 353              		.cfi_offset 14, -4
 354 0002 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 150:notoriOS.c    ****   
 151:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 356              		.loc 1 151 0
 357 0004 FFF7FEFF 		bl	modem_sleep
 152:notoriOS.c    ****     
 153:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 154:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 358              		.loc 1 154 0
 359 0008 FFF7FEFF 		bl	debug_sleep
 155:notoriOS.c    ****     
 156:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 360              		.loc 1 156 0
 361 000c FFF7FEFF 		bl	CyPmSaveClocks
 157:notoriOS.c    ****     
 158:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 159:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 160:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 161:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 162:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 163:notoriOS.c    ****     //CyPmHibernate();
 164:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 165:notoriOS.c    **** 
 166:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 362              		.loc 1 166 0
 363 0010 4FF40061 		mov	r1, #2048
 364 0014 0020     		movs	r0, #0
 365 0016 FFF7FEFF 		bl	CyPmSleep
 167:notoriOS.c    **** 
 168:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 366              		.loc 1 168 0
 367 001a FFF7FEFF 		bl	CyPmRestoreClocks
 169:notoriOS.c    **** 
 170:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 368              		.loc 1 170 0
 369 001e FFF7FEFF 		bl	debug_wakeup
 171:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 370              		.loc 1 171 0
 371 0022 FFF7FEFF 		bl	modem_wakeup
 172:notoriOS.c    **** 
 173:notoriOS.c    **** }
 372              		.loc 1 173 0
 373 0026 00BF     		nop
 374 0028 80BD     		pop	{r7, pc}
 375              		.cfi_endproc
 376              	.LFE67:
 377              		.size	LayBack, .-LayBack
 378 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 379              		.align	2
 380              		.global	AyoItsTime
 381              		.thumb
 382              		.thumb_func
 383              		.type	AyoItsTime, %function
 384              	AyoItsTime:
 385              	.LFB68:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 11


 174:notoriOS.c    **** 
 175:notoriOS.c    **** 
 176:notoriOS.c    **** // ==============================================
 177:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 178:notoriOS.c    **** //      - NAS (1994)
 179:notoriOS.c    **** //
 180:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 181:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 182:notoriOS.c    **** // It will add tasks to the work queue,
 183:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 184:notoriOS.c    **** // ==============================================
 185:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 186:notoriOS.c    **** {
 386              		.loc 1 186 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 8
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 82B0     		sub	sp, sp, #8
 395              		.cfi_def_cfa_offset 16
 396 0004 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
 398 0006 0346     		mov	r3, r0
 399 0008 FB71     		strb	r3, [r7, #7]
 187:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 188:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 400              		.loc 1 188 0
 401 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 402 000c 1946     		mov	r1, r3
 403 000e 0C48     		ldr	r0, .L17
 404 0010 FFF7FEFF 		bl	AlarmReady
 405 0014 0346     		mov	r3, r0
 406 0016 002B     		cmp	r3, #0
 407 0018 02D0     		beq	.L14
 189:notoriOS.c    ****     {
 190:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 191:notoriOS.c    ****         timeToMeasure = 1u;
 408              		.loc 1 191 0
 409 001a 0A4B     		ldr	r3, .L17+4
 410 001c 0122     		movs	r2, #1
 411 001e 1A70     		strb	r2, [r3]
 412              	.L14:
 192:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 193:notoriOS.c    ****         
 194:notoriOS.c    ****     }
 195:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 413              		.loc 1 195 0
 414 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 415 0022 1946     		mov	r1, r3
 416 0024 0848     		ldr	r0, .L17+8
 417 0026 FFF7FEFF 		bl	AlarmReady
 418 002a 0346     		mov	r3, r0
 419 002c 002B     		cmp	r3, #0
 420 002e 02D0     		beq	.L16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 12


 196:notoriOS.c    ****     {
 197:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 198:notoriOS.c    ****         timeToSync = 1u;
 421              		.loc 1 198 0
 422 0030 064B     		ldr	r3, .L17+12
 423 0032 0122     		movs	r2, #1
 424 0034 1A70     		strb	r2, [r3]
 425              	.L16:
 199:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 200:notoriOS.c    ****     }
 201:notoriOS.c    ****     
 202:notoriOS.c    **** }
 426              		.loc 1 202 0
 427 0036 00BF     		nop
 428 0038 0837     		adds	r7, r7, #8
 429              		.cfi_def_cfa_offset 8
 430 003a BD46     		mov	sp, r7
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 003c 80BD     		pop	{r7, pc}
 434              	.L18:
 435 003e 00BF     		.align	2
 436              	.L17:
 437 0040 00000000 		.word	alarmMeasure
 438 0044 00000000 		.word	timeToMeasure
 439 0048 00000000 		.word	alarmSync
 440 004c 00000000 		.word	timeToSync
 441              		.cfi_endproc
 442              	.LFE68:
 443              		.size	AyoItsTime, .-AyoItsTime
 444              		.section	.text.AlarmReady,"ax",%progbits
 445              		.align	2
 446              		.global	AlarmReady
 447              		.thumb
 448              		.thumb_func
 449              		.type	AlarmReady, %function
 450              	AlarmReady:
 451              	.LFB69:
 203:notoriOS.c    **** 
 204:notoriOS.c    **** 
 205:notoriOS.c    **** // ==============================================
 206:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 207:notoriOS.c    **** // ==============================================
 208:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 209:notoriOS.c    **** {
 452              		.loc 1 209 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 8
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 82B0     		sub	sp, sp, #8
 461              		.cfi_def_cfa_offset 16
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 13


 464 0006 7860     		str	r0, [r7, #4]
 465 0008 0B46     		mov	r3, r1
 466 000a FB70     		strb	r3, [r7, #3]
 210:notoriOS.c    ****     // if the countDownType matches the alarmType
 211:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 467              		.loc 1 211 0
 468 000c 7B68     		ldr	r3, [r7, #4]
 469 000e 1B79     		ldrb	r3, [r3, #4]
 470 0010 DBB2     		uxtb	r3, r3
 471 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 472 0014 9A42     		cmp	r2, r3
 473 0016 12D1     		bne	.L20
 212:notoriOS.c    ****        
 213:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 214:notoriOS.c    ****         // Decrement the count down value by 1
 215:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 474              		.loc 1 215 0
 475 0018 7B68     		ldr	r3, [r7, #4]
 476 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 477 001c 1BB2     		sxth	r3, r3
 478 001e 9BB2     		uxth	r3, r3
 479 0020 013B     		subs	r3, r3, #1
 480 0022 9BB2     		uxth	r3, r3
 481 0024 1AB2     		sxth	r2, r3
 482 0026 7B68     		ldr	r3, [r7, #4]
 483 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 216:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 217:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 484              		.loc 1 217 0
 485 002a 7B68     		ldr	r3, [r7, #4]
 486 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 487 002e 1BB2     		sxth	r3, r3
 488 0030 002B     		cmp	r3, #0
 489 0032 04DC     		bgt	.L20
 218:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 490              		.loc 1 218 0
 491 0034 7868     		ldr	r0, [r7, #4]
 492 0036 FFF7FEFF 		bl	ResetAlarm
 219:notoriOS.c    ****             return 1u;
 493              		.loc 1 219 0
 494 003a 0123     		movs	r3, #1
 495 003c 00E0     		b	.L21
 496              	.L20:
 220:notoriOS.c    ****         } 
 221:notoriOS.c    ****     }
 222:notoriOS.c    ****     
 223:notoriOS.c    ****     return 0u; // Otherwise return 0
 497              		.loc 1 223 0
 498 003e 0023     		movs	r3, #0
 499              	.L21:
 224:notoriOS.c    **** }
 500              		.loc 1 224 0
 501 0040 1846     		mov	r0, r3
 502 0042 0837     		adds	r7, r7, #8
 503              		.cfi_def_cfa_offset 8
 504 0044 BD46     		mov	sp, r7
 505              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 14


 506              		@ sp needed
 507 0046 80BD     		pop	{r7, pc}
 508              		.cfi_endproc
 509              	.LFE69:
 510              		.size	AlarmReady, .-AlarmReady
 511              		.section	.text.ResetAlarm,"ax",%progbits
 512              		.align	2
 513              		.global	ResetAlarm
 514              		.thumb
 515              		.thumb_func
 516              		.type	ResetAlarm, %function
 517              	ResetAlarm:
 518              	.LFB70:
 225:notoriOS.c    **** 
 226:notoriOS.c    **** // ==============================================
 227:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 228:notoriOS.c    **** // ==============================================
 229:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 230:notoriOS.c    **** {
 519              		.loc 1 230 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0000 80B4     		push	{r7}
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0002 83B0     		sub	sp, sp, #12
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 231:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 232:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 532              		.loc 1 232 0
 533 0008 7B68     		ldr	r3, [r7, #4]
 534 000a 1B88     		ldrh	r3, [r3]	@ movhi
 535 000c 9BB2     		uxth	r3, r3
 536 000e 1AB2     		sxth	r2, r3
 537 0010 7B68     		ldr	r3, [r7, #4]
 538 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 233:notoriOS.c    **** }
 539              		.loc 1 233 0
 540 0014 00BF     		nop
 541 0016 0C37     		adds	r7, r7, #12
 542              		.cfi_def_cfa_offset 4
 543 0018 BD46     		mov	sp, r7
 544              		.cfi_def_cfa_register 13
 545              		@ sp needed
 546 001a 80BC     		pop	{r7}
 547              		.cfi_restore 7
 548              		.cfi_def_cfa_offset 0
 549 001c 7047     		bx	lr
 550              		.cfi_endproc
 551              	.LFE70:
 552              		.size	ResetAlarm, .-ResetAlarm
 553 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 15


 554              		.align	2
 555              		.global	CreateAlarm
 556              		.thumb
 557              		.thumb_func
 558              		.type	CreateAlarm, %function
 559              	CreateAlarm:
 560              	.LFB71:
 234:notoriOS.c    **** 
 235:notoriOS.c    **** // ==============================================
 236:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 237:notoriOS.c    **** // ==============================================
 238:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 239:notoriOS.c    **** {
 561              		.loc 1 239 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 16
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566 0000 80B4     		push	{r7}
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 0002 85B0     		sub	sp, sp, #20
 570              		.cfi_def_cfa_offset 24
 571 0004 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 573 0006 7860     		str	r0, [r7, #4]
 574 0008 0846     		mov	r0, r1
 575 000a 1146     		mov	r1, r2
 576 000c 1A46     		mov	r2, r3
 577 000e 0346     		mov	r3, r0	@ movhi
 578 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 579 0012 0B46     		mov	r3, r1
 580 0014 7B70     		strb	r3, [r7, #1]
 581 0016 1346     		mov	r3, r2
 582 0018 3B70     		strb	r3, [r7]
 240:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 241:notoriOS.c    ****     alarm newAlarm;
 242:notoriOS.c    ****     
 243:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 244:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 583              		.loc 1 244 0
 584 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 585 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 245:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 586              		.loc 1 245 0
 587 001e 7B78     		ldrb	r3, [r7, #1]
 588 0020 3B73     		strb	r3, [r7, #12]
 246:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 589              		.loc 1 246 0
 590 0022 3B78     		ldrb	r3, [r7]
 591 0024 7B73     		strb	r3, [r7, #13]
 247:notoriOS.c    ****     
 248:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 249:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 250:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 592              		.loc 1 250 0
 593 0026 B7F90230 		ldrsh	r3, [r7, #2]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 16


 594 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 251:notoriOS.c    ****     
 252:notoriOS.c    ****     return newAlarm;
 595              		.loc 1 252 0
 596 002c 7B68     		ldr	r3, [r7, #4]
 597 002e 1A46     		mov	r2, r3
 598 0030 07F10803 		add	r3, r7, #8
 599 0034 1868     		ldr	r0, [r3]	@ unaligned
 600 0036 1060     		str	r0, [r2]	@ unaligned
 601 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 602 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 253:notoriOS.c    ****     
 254:notoriOS.c    **** }
 603              		.loc 1 254 0
 604 003c 7868     		ldr	r0, [r7, #4]
 605 003e 1437     		adds	r7, r7, #20
 606              		.cfi_def_cfa_offset 4
 607 0040 BD46     		mov	sp, r7
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 0042 80BC     		pop	{r7}
 611              		.cfi_restore 7
 612              		.cfi_def_cfa_offset 0
 613 0044 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE71:
 616              		.size	CreateAlarm, .-CreateAlarm
 617 0046 00BF     		.section	.rodata
 618 0047 00       		.align	2
 619              	.LC4:
 620 0048 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 620      2D2D2D2D 
 620      2D2D2D2D 
 620      2D424547 
 620      494E2054 
 621 0072 0000     		.align	2
 622              	.LC5:
 623 0074 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\012\000"
 623      3D25732C 
 623      2053494D 
 623      49443D25 
 623      732C2044 
 624              		.align	2
 625              	.LC6:
 626 0094 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 626      2D2D2D2D 
 626      2D2D2D2D 
 626      2D2D2D45 
 626      4E442054 
 627 00bd 00       		.ascii	"\000"
 628              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 629              		.align	2
 630              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 631              		.thumb
 632              		.thumb_func
 633              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 634              	ChickityCheckYourselfBeforeYouWreckYourself:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 17


 635              	.LFB72:
 255:notoriOS.c    **** 
 256:notoriOS.c    **** // ==============================================
 257:notoriOS.c    **** // Dropping bombs on your moms
 258:notoriOS.c    **** //      - Ice Cube (1992)
 259:notoriOS.c    **** //
 260:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 261:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 262:notoriOS.c    **** // ==============================================
 263:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 636              		.loc 1 263 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 1552
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 90B5     		push	{r4, r7, lr}
 641              		.cfi_def_cfa_offset 12
 642              		.cfi_offset 4, -12
 643              		.cfi_offset 7, -8
 644              		.cfi_offset 14, -4
 645 0002 ADF28C7D 		subw	sp, sp, #1932
 646              		.cfi_def_cfa_offset 1944
 647 0006 5EAF     		add	r7, sp, #376
 648              		.cfi_def_cfa 7, 1568
 264:notoriOS.c    **** //
 265:notoriOS.c    **** //    //printTestStatus(t_influx);
 266:notoriOS.c    **** //        SDI12_Power_Write(1u);
 267:notoriOS.c    **** //        SDI12_Power_Write(0u);
 268:notoriOS.c    **** //    // Take sontek readings and save them to m_sontek
 269:notoriOS.c    **** //        char big_value[DATA_MAX_KEY_LENGTH*15];
 270:notoriOS.c    **** //        // sontek_t is a new data type we defined in sontek.h. We then use that data type to defi
 271:notoriOS.c    **** //        sontek_t m_sontek;
 272:notoriOS.c    **** //        
 273:notoriOS.c    **** //        // Take sontek readings and save them to m_sontek
 274:notoriOS.c    **** //        m_sontek = sontek_take_reading();
 275:notoriOS.c    **** //        
 276:notoriOS.c    **** //        snprintf(big_value,sizeof(big_value),"%.2f,%.2f,%.2f,%.2f,\
 277:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,\
 278:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 279:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 280:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 281:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 282:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 283:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 284:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,\
 285:notoriOS.c    **** //                %.2f,%.2f,%.2f,%.2f,%.2f",\
 286:notoriOS.c    **** //                m_sontek.data0[0],m_sontek.data0[1],m_sontek.data0[2],m_sontek.data0[3],\
 287:notoriOS.c    **** //                m_sontek.data1[0],m_sontek.data1[1],m_sontek.data1[2],m_sontek.data1[3],m_sontek.
 288:notoriOS.c    **** //                m_sontek.data2[0],m_sontek.data2[1],m_sontek.data2[2],m_sontek.data2[3],m_sontek.
 289:notoriOS.c    **** //                m_sontek.data3[0],m_sontek.data3[1],m_sontek.data3[2],m_sontek.data3[3],m_sontek.
 290:notoriOS.c    **** //                m_sontek.data4[0],m_sontek.data4[1],m_sontek.data4[2],m_sontek.data4[3],m_sontek.
 291:notoriOS.c    **** //                m_sontek.data5[0],m_sontek.data5[1],m_sontek.data5[2],m_sontek.data5[3],m_sontek.
 292:notoriOS.c    **** //                m_sontek.data6[0],m_sontek.data6[1],m_sontek.data6[2],m_sontek.data6[3],m_sontek.
 293:notoriOS.c    **** //                m_sontek.data7[0],m_sontek.data7[1],m_sontek.data7[2],m_sontek.data7[3],m_sontek.
 294:notoriOS.c    **** //                m_sontek.data8[0],m_sontek.data8[1],m_sontek.data8[2],m_sontek.data8[3],\
 295:notoriOS.c    **** //                m_sontek.data9[0],m_sontek.data9[1],m_sontek.data9[2],m_sontek.data9[3],m_sontek.
 296:notoriOS.c    **** //            printNotif(NOTIF_TYPE_EVENT,"sontek=%s",big_value);
 297:notoriOS.c    **** //
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 18


 298:notoriOS.c    **** //        
 299:notoriOS.c    **** ////            //temperature - 0 data0
 300:notoriOS.c    **** ////            snprintf(value,sizeof(value),"%.2f",m_sontek.data0[0]); 
 301:notoriOS.c    **** ////            printNotif(NOTIF_TYPE_EVENT,"sontek_temp=%s",value);
 302:notoriOS.c    **** ////
 303:notoriOS.c    **** ////            //stage - 2 data0
 304:notoriOS.c    **** ////            snprintf(value,sizeof(value),"%.2f",m_sontek.data0[2]); 
 305:notoriOS.c    **** ////            printNotif(NOTIF_TYPE_EVENT,"sontek_stage=%s",value);
 306:notoriOS.c    **** ////            //mean velocity - 2 data1
 307:notoriOS.c    **** ////            snprintf(value,sizeof(value),"%.2f",m_sontek.data1[2]);
 308:notoriOS.c    **** ////            printNotif(NOTIF_TYPE_EVENT,"sontek_vel=%s",value);
 309:notoriOS.c    **** ////            //SNR1 - 19
 310:notoriOS.c    **** ////            snprintf(value,sizeof(value),"%.2f",m_sontek.values[18]);
 311:notoriOS.c    **** ////            printNotif(NOTIF_TYPE_EVENT,"sontek_snr1=%s",value);
 312:notoriOS.c    **** ////            //Amp1 - 16
 313:notoriOS.c    **** ////            snprintf(value,sizeof(value),"%.2f",m_sontek.values[16]);
 314:notoriOS.c    **** ////            printNotif(NOTIF_TYPE_EVENT,"sontek_amp1=%s",value);
 315:notoriOS.c    **** ////            //bat - 49
 316:notoriOS.c    **** ////            snprintf(value,sizeof(value),"%.2f",m_sontek.values[49]);
 317:notoriOS.c    **** ////            printNotif(NOTIF_TYPE_EVENT,"sontek_v_bat=%s",value);
 318:notoriOS.c    **** //            
 319:notoriOS.c    **** //////////////////////------------------------------------------------------------------------
 320:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 649              		.loc 1 320 0
 650 0008 2F49     		ldr	r1, .L26
 651 000a 0320     		movs	r0, #3
 652 000c FFF7FEFF 		bl	printNotif
 321:notoriOS.c    ****     
 322:notoriOS.c    ****     // Test modem
 323:notoriOS.c    ****     test_t t_modem = modem_test();
 653              		.loc 1 323 0
 654 0010 07F28C43 		addw	r3, r7, #1164
 655 0014 1846     		mov	r0, r3
 656 0016 FFF7FEFF 		bl	modem_test
 324:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s\n",modem_info.imei,modem_info.sim
 657              		.loc 1 324 0
 658 001a 2C4B     		ldr	r3, .L26+4
 659 001c 0093     		str	r3, [sp]
 660 001e 2C4B     		ldr	r3, .L26+8
 661 0020 2C4A     		ldr	r2, .L26+12
 662 0022 2D49     		ldr	r1, .L26+16
 663 0024 0320     		movs	r0, #3
 664 0026 FFF7FEFF 		bl	printNotif
 325:notoriOS.c    ****     printTestStatus(t_modem);
 665              		.loc 1 325 0
 666 002a 07F28C44 		addw	r4, r7, #1164
 667 002e 6846     		mov	r0, sp
 668 0030 04F11003 		add	r3, r4, #16
 669 0034 40F27112 		movw	r2, #369
 670 0038 1946     		mov	r1, r3
 671 003a FFF7FEFF 		bl	memcpy
 672 003e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 673 0042 FFF7FEFF 		bl	printTestStatus
 326:notoriOS.c    ****     
 327:notoriOS.c    ****     // Test level sensor
 328:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 674              		.loc 1 328 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 19


 675 0046 07F54273 		add	r3, r7, #776
 676 004a 1846     		mov	r0, r3
 677 004c FFF7FEFF 		bl	level_sensor_test
 329:notoriOS.c    ****     printTestStatus(t_level_sensor);
 678              		.loc 1 329 0
 679 0050 07F54274 		add	r4, r7, #776
 680 0054 6846     		mov	r0, sp
 681 0056 04F11003 		add	r3, r4, #16
 682 005a 40F27112 		movw	r2, #369
 683 005e 1946     		mov	r1, r3
 684 0060 FFF7FEFF 		bl	memcpy
 685 0064 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 686 0068 FFF7FEFF 		bl	printTestStatus
 330:notoriOS.c    ****     
 331:notoriOS.c    ****     // Test voltages
 332:notoriOS.c    ****     test_t t_voltages = voltages_test();
 687              		.loc 1 332 0
 688 006c 07F5C273 		add	r3, r7, #388
 689 0070 1846     		mov	r0, r3
 690 0072 FFF7FEFF 		bl	voltages_test
 333:notoriOS.c    ****     printTestStatus(t_voltages);
 691              		.loc 1 333 0
 692 0076 07F5C274 		add	r4, r7, #388
 693 007a 6846     		mov	r0, sp
 694 007c 04F11003 		add	r3, r4, #16
 695 0080 40F27112 		movw	r2, #369
 696 0084 1946     		mov	r1, r3
 697 0086 FFF7FEFF 		bl	memcpy
 698 008a 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 699 008e FFF7FEFF 		bl	printTestStatus
 334:notoriOS.c    ****     
 335:notoriOS.c    ****     // Test SD card
 336:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 700              		.loc 1 336 0
 701 0092 3B46     		mov	r3, r7
 702 0094 1846     		mov	r0, r3
 703 0096 FFF7FEFF 		bl	SD_card_test
 337:notoriOS.c    ****     printTestStatus(t_sd_card);
 704              		.loc 1 337 0
 705 009a 3C46     		mov	r4, r7
 706 009c 6846     		mov	r0, sp
 707 009e 04F11003 		add	r3, r4, #16
 708 00a2 40F27112 		movw	r2, #369
 709 00a6 1946     		mov	r1, r3
 710 00a8 FFF7FEFF 		bl	memcpy
 711 00ac 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 712 00b0 FFF7FEFF 		bl	printTestStatus
 338:notoriOS.c    ****     
 339:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 713              		.loc 1 339 0
 714 00b4 0949     		ldr	r1, .L26+20
 715 00b6 0320     		movs	r0, #3
 716 00b8 FFF7FEFF 		bl	printNotif
 340:notoriOS.c    **** 
 341:notoriOS.c    **** }
 717              		.loc 1 341 0
 718 00bc 00BF     		nop
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 20


 719 00be 07F21467 		addw	r7, r7, #1556
 720              		.cfi_def_cfa_offset 12
 721 00c2 BD46     		mov	sp, r7
 722              		.cfi_def_cfa_register 13
 723              		@ sp needed
 724 00c4 90BD     		pop	{r4, r7, pc}
 725              	.L27:
 726 00c6 00BF     		.align	2
 727              	.L26:
 728 00c8 48000000 		.word	.LC4
 729 00cc 04000000 		.word	system_info+4
 730 00d0 00000000 		.word	modem_info
 731 00d4 28000000 		.word	modem_info+40
 732 00d8 74000000 		.word	.LC5
 733 00dc 94000000 		.word	.LC6
 734              		.cfi_endproc
 735              	.LFE72:
 736              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 737              		.section	.text.main,"ax",%progbits
 738              		.align	2
 739              		.global	main
 740              		.thumb
 741              		.thumb_func
 742              		.type	main, %function
 743              	main:
 744              	.LFB73:
 342:notoriOS.c    **** 
 343:notoriOS.c    **** // ==============================================
 344:notoriOS.c    **** // Processes Core Tasks
 345:notoriOS.c    **** // ==============================================
 346:notoriOS.c    **** int main(void)
 347:notoriOS.c    **** {
 745              		.loc 1 347 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 1, uses_anonymous_args = 0
 749 0000 80B5     		push	{r7, lr}
 750              		.cfi_def_cfa_offset 8
 751              		.cfi_offset 7, -8
 752              		.cfi_offset 14, -4
 753 0002 00AF     		add	r7, sp, #0
 754              		.cfi_def_cfa_register 7
 348:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 755              		.loc 1 348 0
 756              		.syntax unified
 757              	@ 348 "notoriOS.c" 1
 758 0004 62B6     		CPSIE   i
 759              	@ 0 "" 2
 349:notoriOS.c    **** 
 350:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 760              		.loc 1 350 0
 761              		.thumb
 762              		.syntax unified
 763 0006 FFF7FEFF 		bl	ReadyOrNot
 351:notoriOS.c    ****     
 352:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 764              		.loc 1 352 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 21


 765 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 766              	.L30:
 353:notoriOS.c    ****    
 354:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 355:notoriOS.c    ****     {
 356:notoriOS.c    ****         
 357:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 767              		.loc 1 357 0
 768 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 769 0012 0346     		mov	r3, r0
 770 0014 002B     		cmp	r3, #0
 771 0016 FAD1     		bne	.L30
 358:notoriOS.c    ****         {
 359:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
 772              		.loc 1 359 0
 773 0018 FFF7FEFF 		bl	LayBack
 360:notoriOS.c    ****         }
 361:notoriOS.c    ****     }
 774              		.loc 1 361 0
 775 001c F7E7     		b	.L30
 776              		.cfi_endproc
 777              	.LFE73:
 778              		.size	main, .-main
 779 001e 00BF     		.section	.rodata
 780 00be 0000     		.align	2
 781              	.LC7:
 782 00c0 4D6F6465 		.ascii	"Modem is ready.\000"
 782      6D206973 
 782      20726561 
 782      64792E00 
 783              		.align	2
 784              	.LC8:
 785 00d0 72737270 		.ascii	"rsrp\000"
 785      00
 786 00d5 000000   		.align	2
 787              	.LC9:
 788 00d8 7472795F 		.ascii	"try_counter\000"
 788      636F756E 
 788      74657200 
 789              		.align	2
 790              	.LC10:
 791 00e4 64617461 		.ascii	"data_count_sent\000"
 791      5F636F75 
 791      6E745F73 
 791      656E7400 
 792              		.align	2
 793              	.LC11:
 794 00f4 64617461 		.ascii	"data_count_desired\000"
 794      5F636F75 
 794      6E745F64 
 794      65736972 
 794      656400
 795 0107 00       		.align	2
 796              	.LC12:
 797 0108 42656769 		.ascii	"Begin HTTP post.\000"
 797      6E204854 
 797      54502070 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 22


 797      6F73742E 
 797      00
 798 0119 000000   		.align	2
 799              	.LC13:
 800 011c 37343131 		.ascii	"7411461a8c6cc81849ebe7499a74f0750bcadc36\000"
 800      34363161 
 800      38633663 
 800      63383138 
 800      34396562 
 801 0145 000000   		.align	2
 802              	.LC14:
 803 0148 6170692F 		.ascii	"api/v1/write\000"
 803      76312F77 
 803      72697465 
 803      00
 804 0155 000000   		.align	2
 805              	.LC15:
 806 0158 48545450 		.ascii	"HTTP route: %s\000"
 806      20726F75 
 806      74653A20 
 806      257300
 807 0167 00       		.align	2
 808              	.LC16:
 809 0168 312E3100 		.ascii	"1.1\000"
 810              		.align	2
 811              	.LC17:
 812 016c 00       		.ascii	"\000"
 813 016d 000000   		.align	2
 814              	.LC18:
 815 0170 436C6F73 		.ascii	"Close\000"
 815      6500
 816 0176 0000     		.align	2
 817              	.LC19:
 818 0178 504F5354 		.ascii	"POST\000"
 818      00
 819 017d 000000   		.align	2
 820              	.LC20:
 821 0180 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 821      20485454 
 821      50205265 
 821      71756573 
 821      743A2025 
 822 0196 0000     		.align	2
 823              	.LC21:
 824 0198 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 824      443D312C 
 824      302C2564 
 824      2C222573 
 824      222C302C 
 825 01b1 000000   		.align	2
 826              	.LC22:
 827 01b4 257300   		.ascii	"%s\000"
 828 01b7 00       		.align	2
 829              	.LC23:
 830 01b8 4F4B00   		.ascii	"OK\000"
 831              		.global	__aeabi_ui2d
 832              		.global	__aeabi_d2iz
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 23


 833 01bb 00       		.align	2
 834              	.LC24:
 835 01bc 68747470 		.ascii	"http_request len: %d\000"
 835      5F726571 
 835      75657374 
 835      206C656E 
 835      3A202564 
 836 01d1 000000   		.align	2
 837              	.LC25:
 838 01d4 23206F66 		.ascii	"# of packets: %d\000"
 838      20706163 
 838      6B657473 
 838      3A202564 
 838      00
 839 01e5 000000   		.align	2
 840              	.LC26:
 841 01e8 3E00     		.ascii	">\000"
 842 01ea 0000     		.align	2
 843              	.LC27:
 844 01ec 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 844      53454E44 
 844      3D310D0A 
 844      00
 845 01f9 000000   		.align	2
 846              	.LC28:
 847 01fc 1A00     		.ascii	"\032\000"
 848 01fe 0000     		.align	2
 849              	.LC29:
 850 0200 6368756E 		.ascii	"chunk %d: %s\000"
 850      6B202564 
 850      3A202573 
 850      00
 851 020d 000000   		.align	2
 852              	.LC30:
 853 0210 5352494E 		.ascii	"SRING\000"
 853      4700
 854 0216 0000     		.align	2
 855              	.LC31:
 856 0218 4F532D4F 		.ascii	"OS-OK\000"
 856      4B00
 857 021e 0000     		.align	2
 858              	.LC32:
 859 0220 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 859      52454356 
 859      3D312C31 
 859      3030300D 
 859      00
 860 0231 000000   		.align	2
 861              	.LC33:
 862 0234 6D6F6465 		.ascii	"modem_tx_time\000"
 862      6D5F7478 
 862      5F74696D 
 862      6500
 863 0242 0000     		.align	2
 864              	.LC34:
 865 0244 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 865      4F3A2043 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 24


 865      6F756C64 
 865      206E6F74 
 865      20726563 
 866              		.section	.text.syncData,"ax",%progbits
 867              		.align	2
 868              		.global	syncData
 869              		.thumb
 870              		.thumb_func
 871              		.type	syncData, %function
 872              	syncData:
 873              	.LFB74:
 362:notoriOS.c    **** }
 363:notoriOS.c    **** 
 364:notoriOS.c    **** // ==============================================
 365:notoriOS.c    **** // Syncs data with server
 366:notoriOS.c    **** // Returns 0 when done
 367:notoriOS.c    **** // ==============================================
 368:notoriOS.c    **** uint8 syncData(){
 874              		.loc 1 368 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 1336
 877              		@ frame_needed = 1, uses_anonymous_args = 0
 878 0000 90B5     		push	{r4, r7, lr}
 879              		.cfi_def_cfa_offset 12
 880              		.cfi_offset 4, -12
 881              		.cfi_offset 7, -8
 882              		.cfi_offset 14, -4
 883 0002 ADF2545D 		subw	sp, sp, #1364
 884              		.cfi_def_cfa_offset 1376
 885 0006 06AF     		add	r7, sp, #24
 886              		.cfi_def_cfa 7, 1352
 369:notoriOS.c    ****     
 370:notoriOS.c    ****     /*
 371:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 372:notoriOS.c    ****     uint8 check = 0;
 373:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 374:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 375:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 376:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 377:notoriOS.c    ****     */
 378:notoriOS.c    **** 
 379:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 380:notoriOS.c    ****     LED_Write(1u);
 887              		.loc 1 380 0
 888 0008 0120     		movs	r0, #1
 889 000a FFF7FEFF 		bl	LED_Write
 381:notoriOS.c    ****     CyDelay(100u);
 890              		.loc 1 381 0
 891 000e 6420     		movs	r0, #100
 892 0010 FFF7FEFF 		bl	CyDelay
 382:notoriOS.c    ****     LED_Write(0u);
 893              		.loc 1 382 0
 894 0014 0020     		movs	r0, #0
 895 0016 FFF7FEFF 		bl	LED_Write
 383:notoriOS.c    **** 
 384:notoriOS.c    ****     
 385:notoriOS.c    ****     // If there's no data, not need to do anything
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 25


 386:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 896              		.loc 1 386 0
 897 001a FFF7FEFF 		bl	sizeOfDataStack
 898 001e 0346     		mov	r3, r0
 899 0020 002B     		cmp	r3, #0
 900 0022 01D1     		bne	.L32
 387:notoriOS.c    ****         return 0u;
 901              		.loc 1 387 0
 902 0024 0023     		movs	r3, #0
 903 0026 F9E1     		b	.L33
 904              	.L32:
 388:notoriOS.c    ****         }
 389:notoriOS.c    ****     
 390:notoriOS.c    ****     // Create request body, in this case influx
 391:notoriOS.c    ****     // Place body into HTTP request header
 392:notoriOS.c    ****     // Fire up modem and get it out
 393:notoriOS.c    ****      
 394:notoriOS.c    ****     
 395:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 396:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 905              		.loc 1 396 0
 906 0028 FFF7FEFF 		bl	modem_get_state
 907 002c 0346     		mov	r3, r0
 908 002e 002B     		cmp	r3, #0
 909 0030 11D1     		bne	.L34
 397:notoriOS.c    **** 
 398:notoriOS.c    ****         try_counter++;
 910              		.loc 1 398 0
 911 0032 C74B     		ldr	r3, .L46
 912 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 913 0036 0133     		adds	r3, r3, #1
 914 0038 DAB2     		uxtb	r2, r3
 915 003a C54B     		ldr	r3, .L46
 916 003c 1A70     		strb	r2, [r3]
 399:notoriOS.c    ****         	
 400:notoriOS.c    ****         if(try_counter <= 2){
 917              		.loc 1 400 0
 918 003e C44B     		ldr	r3, .L46
 919 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 920 0042 022B     		cmp	r3, #2
 921 0044 02D8     		bhi	.L35
 401:notoriOS.c    ****             modem_power_up();
 922              		.loc 1 401 0
 923 0046 FFF7FEFF 		bl	modem_power_up
 924 004a E6E1     		b	.L36
 925              	.L35:
 402:notoriOS.c    ****         }else{
 403:notoriOS.c    ****             try_counter = 0;
 926              		.loc 1 403 0
 927 004c C04B     		ldr	r3, .L46
 928 004e 0022     		movs	r2, #0
 929 0050 1A70     		strb	r2, [r3]
 404:notoriOS.c    ****             return 0u;
 930              		.loc 1 404 0
 931 0052 0023     		movs	r3, #0
 932 0054 E2E1     		b	.L33
 933              	.L34:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 26


 405:notoriOS.c    ****             }
 406:notoriOS.c    ****             
 407:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 934              		.loc 1 407 0
 935 0056 FFF7FEFF 		bl	modem_get_state
 936 005a 0346     		mov	r3, r0
 937 005c 042B     		cmp	r3, #4
 938 005e 40F0DC81 		bne	.L36
 939              	.LBB2:
 408:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 940              		.loc 1 408 0
 941 0062 BC49     		ldr	r1, .L46+4
 942 0064 0020     		movs	r0, #0
 943 0066 FFF7FEFF 		bl	printNotif
 409:notoriOS.c    ****         
 410:notoriOS.c    ****         http_request[0] = '\0';
 944              		.loc 1 410 0
 945 006a BB4B     		ldr	r3, .L46+8
 946 006c 0022     		movs	r2, #0
 947 006e 1A70     		strb	r2, [r3]
 411:notoriOS.c    ****         http_body[0] = '\0';
 948              		.loc 1 411 0
 949 0070 BA4B     		ldr	r3, .L46+12
 950 0072 0022     		movs	r2, #0
 951 0074 1A70     		strb	r2, [r3]
 412:notoriOS.c    ****         http_route[0] = '\0';
 952              		.loc 1 412 0
 953 0076 BA4B     		ldr	r3, .L46+16
 954 0078 0022     		movs	r2, #0
 955 007a 1A70     		strb	r2, [r3]
 413:notoriOS.c    ****         //char *base = "write";
 414:notoriOS.c    ****         
 415:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power)
 416:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 417:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 956              		.loc 1 417 0
 957 007c B94B     		ldr	r3, .L46+20
 958 007e 5B69     		ldr	r3, [r3, #20]
 959 0080 07F5A260 		add	r0, r7, #1296
 960 0084 B84A     		ldr	r2, .L46+24
 961 0086 1421     		movs	r1, #20
 962 0088 FFF7FEFF 		bl	snprintf
 418:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 963              		.loc 1 418 0
 964 008c FFF7FEFF 		bl	getTimeStamp
 965 0090 0246     		mov	r2, r0
 966 0092 07F5A263 		add	r3, r7, #1296
 967 0096 1946     		mov	r1, r3
 968 0098 B448     		ldr	r0, .L46+28
 969 009a FFF7FEFF 		bl	pushData
 419:notoriOS.c    ****         
 420:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 421:notoriOS.c    ****         char c_try_counter[20];
 422:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 970              		.loc 1 422 0
 971 009e AC4B     		ldr	r3, .L46
 972 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 27


 973 00a2 07F2FC40 		addw	r0, r7, #1276
 974 00a6 B04A     		ldr	r2, .L46+24
 975 00a8 1421     		movs	r1, #20
 976 00aa FFF7FEFF 		bl	snprintf
 423:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 977              		.loc 1 423 0
 978 00ae FFF7FEFF 		bl	getTimeStamp
 979 00b2 0246     		mov	r2, r0
 980 00b4 07F2FC43 		addw	r3, r7, #1276
 981 00b8 1946     		mov	r1, r3
 982 00ba AD48     		ldr	r0, .L46+32
 983 00bc FFF7FEFF 		bl	pushData
 424:notoriOS.c    ****         
 425:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
 426:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 427:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 428:notoriOS.c    ****         if(buffer_overflow == false){
 984              		.loc 1 428 0
 985 00c0 AC4B     		ldr	r3, .L46+36
 986 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 987 00c4 83F00103 		eor	r3, r3, #1
 988 00c8 DBB2     		uxtb	r3, r3
 989 00ca 002B     		cmp	r3, #0
 990 00cc 16D0     		beq	.L37
 991              	.LBB3:
 429:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 992              		.loc 1 429 0
 993 00ce FFF7FEFF 		bl	sizeOfDataStack
 994 00d2 0346     		mov	r3, r0
 995 00d4 A7F83035 		strh	r3, [r7, #1328]	@ movhi
 430:notoriOS.c    ****             char c_data_count_sent[20];
 431:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 996              		.loc 1 431 0
 997 00d8 B7F83035 		ldrh	r3, [r7, #1328]
 998 00dc 07F2D440 		addw	r0, r7, #1236
 999 00e0 A14A     		ldr	r2, .L46+24
 1000 00e2 1421     		movs	r1, #20
 1001 00e4 FFF7FEFF 		bl	snprintf
 432:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1002              		.loc 1 432 0
 1003 00e8 FFF7FEFF 		bl	getTimeStamp
 1004 00ec 0246     		mov	r2, r0
 1005 00ee 07F2D443 		addw	r3, r7, #1236
 1006 00f2 1946     		mov	r1, r3
 1007 00f4 A048     		ldr	r0, .L46+40
 1008 00f6 FFF7FEFF 		bl	pushData
 1009              	.LBE3:
 1010 00fa 0FE0     		b	.L38
 1011              	.L37:
 1012              	.LBB4:
 433:notoriOS.c    ****         }else{
 434:notoriOS.c    ****             char c_data_count_sent[20];
 435:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1013              		.loc 1 435 0
 1014 00fc 07F59860 		add	r0, r7, #1216
 1015 0100 9623     		movs	r3, #150
 1016 0102 994A     		ldr	r2, .L46+24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 28


 1017 0104 1421     		movs	r1, #20
 1018 0106 FFF7FEFF 		bl	snprintf
 436:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1019              		.loc 1 436 0
 1020 010a FFF7FEFF 		bl	getTimeStamp
 1021 010e 0246     		mov	r2, r0
 1022 0110 07F59863 		add	r3, r7, #1216
 1023 0114 1946     		mov	r1, r3
 1024 0116 9848     		ldr	r0, .L46+40
 1025 0118 FFF7FEFF 		bl	pushData
 1026              	.L38:
 1027              	.LBE4:
 437:notoriOS.c    ****         }
 438:notoriOS.c    ****         
 439:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 440:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 1028              		.loc 1 440 0
 1029 011c FFF7FEFF 		bl	sizeOfDataStackDesired
 1030 0120 0346     		mov	r3, r0
 1031 0122 A7F82E35 		strh	r3, [r7, #1326]	@ movhi
 441:notoriOS.c    ****         char c_data_count_desired[20];
 442:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 443:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1032              		.loc 1 443 0
 1033 0126 B7F82E35 		ldrh	r3, [r7, #1326]
 1034 012a 013B     		subs	r3, r3, #1
 1035 012c 07F59D60 		add	r0, r7, #1256
 1036 0130 8D4A     		ldr	r2, .L46+24
 1037 0132 1421     		movs	r1, #20
 1038 0134 FFF7FEFF 		bl	snprintf
 444:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
 1039              		.loc 1 444 0
 1040 0138 FFF7FEFF 		bl	getTimeStamp
 1041 013c 0246     		mov	r2, r0
 1042 013e 07F59D63 		add	r3, r7, #1256
 1043 0142 1946     		mov	r1, r3
 1044 0144 8D48     		ldr	r0, .L46+44
 1045 0146 FFF7FEFF 		bl	pushData
 445:notoriOS.c    ****         
 446:notoriOS.c    ****         // Construct HTPP request
 447:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1046              		.loc 1 447 0
 1047 014a 8D49     		ldr	r1, .L46+48
 1048 014c 0020     		movs	r0, #0
 1049 014e FFF7FEFF 		bl	printNotif
 448:notoriOS.c    ****         
 449:notoriOS.c    ****         // Old influx API
 450:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 451:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1050              		.loc 1 451 0
 1051 0152 8C4B     		ldr	r3, .L46+52
 1052 0154 8C4A     		ldr	r2, .L46+56
 1053 0156 8D49     		ldr	r1, .L46+60
 1054 0158 8148     		ldr	r0, .L46+16
 1055 015a FFF7FEFF 		bl	construct_malcom_route
 452:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1056              		.loc 1 452 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 29


 1057 015e 804A     		ldr	r2, .L46+16
 1058 0160 8B49     		ldr	r1, .L46+64
 1059 0162 0020     		movs	r0, #0
 1060 0164 FFF7FEFF 		bl	printNotif
 453:notoriOS.c    ****         
 454:notoriOS.c    ****         //OLD INFLUX API
 455:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 456:notoriOS.c    ****         construct_malcom_body(http_body);
 1061              		.loc 1 456 0
 1062 0168 7C48     		ldr	r0, .L46+12
 1063 016a FFF7FEFF 		bl	construct_malcom_body
 457:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1064              		.loc 1 457 0
 1065 016e 894B     		ldr	r3, .L46+68
 1066 0170 5B6E     		ldr	r3, [r3, #100]
 1067 0172 894A     		ldr	r2, .L46+72
 1068 0174 0592     		str	r2, [sp, #20]
 1069 0176 0022     		movs	r2, #0
 1070 0178 0492     		str	r2, [sp, #16]
 1071 017a 884A     		ldr	r2, .L46+76
 1072 017c 0392     		str	r2, [sp, #12]
 1073 017e 884A     		ldr	r2, .L46+80
 1074 0180 0292     		str	r2, [sp, #8]
 1075 0182 884A     		ldr	r2, .L46+84
 1076 0184 0192     		str	r2, [sp, #4]
 1077 0186 0093     		str	r3, [sp]
 1078 0188 754B     		ldr	r3, .L46+16
 1079 018a 824A     		ldr	r2, .L46+68
 1080 018c 7349     		ldr	r1, .L46+12
 1081 018e 7248     		ldr	r0, .L46+8
 1082 0190 FFF7FEFF 		bl	construct_generic_HTTP_request
 458:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1083              		.loc 1 458 0
 1084 0194 704A     		ldr	r2, .L46+8
 1085 0196 8449     		ldr	r1, .L46+88
 1086 0198 0020     		movs	r0, #0
 1087 019a FFF7FEFF 		bl	printNotif
 459:notoriOS.c    ****         
 460:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 461:notoriOS.c    ****         // Open port and begin command line sequence
 462:notoriOS.c    ****         char portConfig[200];
 463:notoriOS.c    ****         uint8 status = 0u;
 1088              		.loc 1 463 0
 1089 019e 0023     		movs	r3, #0
 1090 01a0 87F82D35 		strb	r3, [r7, #1325]
 464:notoriOS.c    ****         
 465:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1091              		.loc 1 465 0
 1092 01a4 7B4B     		ldr	r3, .L46+68
 1093 01a6 5A6E     		ldr	r2, [r3, #100]
 1094 01a8 3846     		mov	r0, r7
 1095 01aa 7A4B     		ldr	r3, .L46+68
 1096 01ac 0093     		str	r3, [sp]
 1097 01ae 1346     		mov	r3, r2
 1098 01b0 7E4A     		ldr	r2, .L46+92
 1099 01b2 C821     		movs	r1, #200
 1100 01b4 FFF7FEFF 		bl	snprintf
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 30


 466:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1101              		.loc 1 466 0
 1102 01b8 3B46     		mov	r3, r7
 1103 01ba 1A46     		mov	r2, r3
 1104 01bc 7C49     		ldr	r1, .L46+96
 1105 01be 0020     		movs	r0, #0
 1106 01c0 FFF7FEFF 		bl	printNotif
 467:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1107              		.loc 1 467 0
 1108 01c4 3B46     		mov	r3, r7
 1109 01c6 42F21072 		movw	r2, #10000
 1110 01ca 7A49     		ldr	r1, .L46+100
 1111 01cc 1846     		mov	r0, r3
 1112 01ce FFF7FEFF 		bl	at_write_command
 1113 01d2 0346     		mov	r3, r0
 1114 01d4 87F82D35 		strb	r3, [r7, #1325]
 468:notoriOS.c    ****         
 469:notoriOS.c    ****         // create character pointer to chunk through the http_request
 470:notoriOS.c    ****         char *chunk;
 471:notoriOS.c    ****         // Set chunk to start where http_request starts
 472:notoriOS.c    ****         chunk = http_request;
 1115              		.loc 1 472 0
 1116 01d8 5F4B     		ldr	r3, .L46+8
 1117 01da C7F83435 		str	r3, [r7, #1332]
 473:notoriOS.c    ****         // variable for the number of packets to send
 474:notoriOS.c    ****         int8 packets;
 475:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1118              		.loc 1 475 0
 1119 01de 5E48     		ldr	r0, .L46+8
 1120 01e0 FFF7FEFF 		bl	strlen
 1121 01e4 0246     		mov	r2, r0
 1122 01e6 744B     		ldr	r3, .L46+104
 1123 01e8 A3FB0223 		umull	r2, r3, r3, r2
 1124 01ec 5B09     		lsrs	r3, r3, #5
 1125 01ee 1846     		mov	r0, r3
 1126 01f0 FFF7FEFF 		bl	__aeabi_ui2d
 1127 01f4 4FF00002 		mov	r2, #0
 1128 01f8 704B     		ldr	r3, .L46+108
 1129 01fa FFF7FEFF 		bl	nextafter
 1130 01fe 0346     		mov	r3, r0
 1131 0200 0C46     		mov	r4, r1
 1132 0202 1846     		mov	r0, r3
 1133 0204 2146     		mov	r1, r4
 1134 0206 FFF7FEFF 		bl	ceil
 1135 020a 0346     		mov	r3, r0
 1136 020c 0C46     		mov	r4, r1
 1137 020e 1846     		mov	r0, r3
 1138 0210 2146     		mov	r1, r4
 1139 0212 FFF7FEFF 		bl	__aeabi_d2iz
 1140 0216 0346     		mov	r3, r0
 1141 0218 87F82C35 		strb	r3, [r7, #1324]
 476:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1142              		.loc 1 476 0
 1143 021c 4E48     		ldr	r0, .L46+8
 1144 021e FFF7FEFF 		bl	strlen
 1145 0222 0346     		mov	r3, r0
 1146 0224 1A46     		mov	r2, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 31


 1147 0226 6649     		ldr	r1, .L46+112
 1148 0228 0020     		movs	r0, #0
 1149 022a FFF7FEFF 		bl	printNotif
 477:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1150              		.loc 1 477 0
 1151 022e 97F92C35 		ldrsb	r3, [r7, #1324]
 1152 0232 1A46     		mov	r2, r3
 1153 0234 6349     		ldr	r1, .L46+116
 1154 0236 0020     		movs	r0, #0
 1155 0238 FFF7FEFF 		bl	printNotif
 1156              	.LBB5:
 478:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 479:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1157              		.loc 1 479 0
 1158 023c 0023     		movs	r3, #0
 1159 023e 87F83335 		strb	r3, [r7, #1331]
 1160 0242 53E0     		b	.L39
 1161              	.L42:
 1162              	.LBB6:
 480:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 481:notoriOS.c    ****             char http_chunk[1001];
 482:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 483:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 484:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1163              		.loc 1 484 0
 1164 0244 4FF47A72 		mov	r2, #1000
 1165 0248 5F49     		ldr	r1, .L46+120
 1166 024a 6048     		ldr	r0, .L46+124
 1167 024c FFF7FEFF 		bl	at_write_command
 1168 0250 0346     		mov	r3, r0
 1169 0252 87F82D35 		strb	r3, [r7, #1325]
 485:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 486:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1170              		.loc 1 486 0
 1171 0256 07F1C800 		add	r0, r7, #200
 1172 025a D7F83435 		ldr	r3, [r7, #1332]
 1173 025e 544A     		ldr	r2, .L46+96
 1174 0260 4FF4FA71 		mov	r1, #500
 1175 0264 FFF7FEFF 		bl	snprintf
 487:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 488:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1176              		.loc 1 488 0
 1177 0268 07F1C803 		add	r3, r7, #200
 1178 026c 1846     		mov	r0, r3
 1179 026e FFF7FEFF 		bl	strlen
 1180 0272 0346     		mov	r3, r0
 1181 0274 1A46     		mov	r2, r3
 1182 0276 07F1C803 		add	r3, r7, #200
 1183 027a 1344     		add	r3, r3, r2
 1184 027c 5449     		ldr	r1, .L46+128
 1185 027e 1A46     		mov	r2, r3
 1186 0280 0B46     		mov	r3, r1
 1187 0282 1B88     		ldrh	r3, [r3]	@ unaligned
 1188 0284 1380     		strh	r3, [r2]	@ unaligned
 489:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1189              		.loc 1 489 0
 1190 0286 97F93325 		ldrsb	r2, [r7, #1331]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 32


 1191 028a 07F1C803 		add	r3, r7, #200
 1192 028e 5149     		ldr	r1, .L46+132
 1193 0290 0020     		movs	r0, #0
 1194 0292 FFF7FEFF 		bl	printNotif
 490:notoriOS.c    ****             // Send data to server
 491:notoriOS.c    ****             if ((packet+1) != packets){
 1195              		.loc 1 491 0
 1196 0296 97F93335 		ldrsb	r3, [r7, #1331]
 1197 029a 5A1C     		adds	r2, r3, #1
 1198 029c 97F92C35 		ldrsb	r3, [r7, #1324]
 1199 02a0 9A42     		cmp	r2, r3
 1200 02a2 11D0     		beq	.L40
 492:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1201              		.loc 1 492 0
 1202 02a4 07F1C803 		add	r3, r7, #200
 1203 02a8 41F28832 		movw	r2, #5000
 1204 02ac 4149     		ldr	r1, .L46+100
 1205 02ae 1846     		mov	r0, r3
 1206 02b0 FFF7FEFF 		bl	at_write_command
 1207 02b4 0346     		mov	r3, r0
 1208 02b6 87F82D35 		strb	r3, [r7, #1325]
 493:notoriOS.c    ****                 // Move the pointer forward 
 494:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1209              		.loc 1 494 0
 1210 02ba D7F83435 		ldr	r3, [r7, #1332]
 1211 02be 03F2F313 		addw	r3, r3, #499
 1212 02c2 C7F83435 		str	r3, [r7, #1332]
 1213 02c6 0AE0     		b	.L41
 1214              	.L40:
 495:notoriOS.c    ****             }else{
 496:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
 1215              		.loc 1 496 0
 1216 02c8 07F1C803 		add	r3, r7, #200
 1217 02cc 41F28832 		movw	r2, #5000
 1218 02d0 4149     		ldr	r1, .L46+136
 1219 02d2 1846     		mov	r0, r3
 1220 02d4 FFF7FEFF 		bl	at_write_command
 1221 02d8 0346     		mov	r3, r0
 1222 02da 87F82D35 		strb	r3, [r7, #1325]
 1223              	.L41:
 1224              	.LBE6:
 479:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1225              		.loc 1 479 0 discriminator 2
 1226 02de 97F93335 		ldrsb	r3, [r7, #1331]
 1227 02e2 DBB2     		uxtb	r3, r3
 1228 02e4 0133     		adds	r3, r3, #1
 1229 02e6 DBB2     		uxtb	r3, r3
 1230 02e8 87F83335 		strb	r3, [r7, #1331]
 1231              	.L39:
 479:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1232              		.loc 1 479 0 is_stmt 0 discriminator 1
 1233 02ec 97F93325 		ldrsb	r2, [r7, #1331]
 1234 02f0 97F92C35 		ldrsb	r3, [r7, #1324]
 1235 02f4 9A42     		cmp	r2, r3
 1236 02f6 A5DB     		blt	.L42
 1237              	.LBE5:
 497:notoriOS.c    ****             }
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 33


 498:notoriOS.c    ****             
 499:notoriOS.c    ****         }
 500:notoriOS.c    ****         
 501:notoriOS.c    ****         // Read received buffer
 502:notoriOS.c    ****         // A good write will return code "OS-OK"
 503:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 504:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 505:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1238              		.loc 1 505 0 is_stmt 1
 1239 02f8 41F28832 		movw	r2, #5000
 1240 02fc 3749     		ldr	r1, .L46+140
 1241 02fe 3848     		ldr	r0, .L46+144
 1242 0300 FFF7FEFF 		bl	at_write_command
 1243 0304 0346     		mov	r3, r0
 1244 0306 87F82D35 		strb	r3, [r7, #1325]
 506:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 507:notoriOS.c    ****     
 508:notoriOS.c    ****   
 509:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 510:notoriOS.c    ****         if(status == 1u){
 1245              		.loc 1 510 0
 1246 030a 97F82D35 		ldrb	r3, [r7, #1325]	@ zero_extendqisi2
 1247 030e 012B     		cmp	r3, #1
 1248 0310 6CD1     		bne	.L43
 1249              	.LBB7:
 511:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1250              		.loc 1 511 0
 1251 0312 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 512:notoriOS.c    ****             Clear_Data_Stack();
 1252              		.loc 1 512 0
 1253 0316 FFF7FEFF 		bl	Clear_Data_Stack
 513:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1254              		.loc 1 513 0
 1255 031a FFF7FEFF 		bl	getTimeStamp
 1256 031e 0246     		mov	r2, r0
 1257 0320 304B     		ldr	r3, .L46+148
 1258 0322 1B68     		ldr	r3, [r3]
 1259 0324 D31A     		subs	r3, r2, r3
 1260 0326 C7F82835 		str	r3, [r7, #1320]
 514:notoriOS.c    ****             char s_send_time[10];
 515:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1261              		.loc 1 515 0
 1262 032a 07F2B440 		addw	r0, r7, #1204
 1263 032e D7F82835 		ldr	r3, [r7, #1320]
 1264 0332 0D4A     		ldr	r2, .L46+24
 1265 0334 0A21     		movs	r1, #10
 1266 0336 FFF7FEFF 		bl	snprintf
 516:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1267              		.loc 1 516 0
 1268 033a FFF7FEFF 		bl	getTimeStamp
 1269 033e 0246     		mov	r2, r0
 1270 0340 07F2B443 		addw	r3, r7, #1204
 1271 0344 1946     		mov	r1, r3
 1272 0346 2848     		ldr	r0, .L46+152
 1273 0348 FFF7FEFF 		bl	pushData
 1274              	.LBE7:
 1275 034c 52E0     		b	.L44
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 34


 1276              	.L47:
 1277 034e 00BF     		.align	2
 1278              	.L46:
 1279 0350 00000000 		.word	try_counter
 1280 0354 C0000000 		.word	.LC7
 1281 0358 00000000 		.word	http_request
 1282 035c 00000000 		.word	http_body
 1283 0360 00000000 		.word	http_route
 1284 0364 00000000 		.word	modem_stats
 1285 0368 3C000000 		.word	.LC2
 1286 036c D0000000 		.word	.LC8
 1287 0370 D8000000 		.word	.LC9
 1288 0374 00000000 		.word	buffer_overflow
 1289 0378 E4000000 		.word	.LC10
 1290 037c F4000000 		.word	.LC11
 1291 0380 08010000 		.word	.LC12
 1292 0384 1C010000 		.word	.LC13
 1293 0388 28000000 		.word	modem_info+40
 1294 038c 48010000 		.word	.LC14
 1295 0390 58010000 		.word	.LC15
 1296 0394 00000000 		.word	system_settings
 1297 0398 68010000 		.word	.LC16
 1298 039c 6C010000 		.word	.LC17
 1299 03a0 70010000 		.word	.LC18
 1300 03a4 78010000 		.word	.LC19
 1301 03a8 80010000 		.word	.LC20
 1302 03ac 98010000 		.word	.LC21
 1303 03b0 B4010000 		.word	.LC22
 1304 03b4 B8010000 		.word	.LC23
 1305 03b8 D34D6210 		.word	274877907
 1306 03bc 00407F40 		.word	1082081280
 1307 03c0 BC010000 		.word	.LC24
 1308 03c4 D4010000 		.word	.LC25
 1309 03c8 E8010000 		.word	.LC26
 1310 03cc EC010000 		.word	.LC27
 1311 03d0 FC010000 		.word	.LC28
 1312 03d4 00020000 		.word	.LC29
 1313 03d8 10020000 		.word	.LC30
 1314 03dc 18020000 		.word	.LC31
 1315 03e0 20020000 		.word	.LC32
 1316 03e4 00000000 		.word	modem_start_time_stamp
 1317 03e8 34020000 		.word	.LC33
 1318              	.L43:
 517:notoriOS.c    ****         }else{
 518:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1319              		.loc 1 518 0
 1320 03ec 0E49     		ldr	r1, .L48
 1321 03ee 0220     		movs	r0, #2
 1322 03f0 FFF7FEFF 		bl	printNotif
 1323              	.L44:
 519:notoriOS.c    ****         }
 520:notoriOS.c    ****          
 521:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 522:notoriOS.c    ****         long network_time = modem_get_network_time();
 1324              		.loc 1 522 0
 1325 03f4 FFF7FEFF 		bl	modem_get_network_time
 1326 03f8 C7F82405 		str	r0, [r7, #1316]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 35


 523:notoriOS.c    ****         if(network_time != 0){
 1327              		.loc 1 523 0
 1328 03fc D7F82435 		ldr	r3, [r7, #1316]
 1329 0400 002B     		cmp	r3, #0
 1330 0402 03D0     		beq	.L45
 524:notoriOS.c    ****            setTime(network_time);
 1331              		.loc 1 524 0
 1332 0404 D7F82405 		ldr	r0, [r7, #1316]
 1333 0408 FFF7FEFF 		bl	setTime
 1334              	.L45:
 525:notoriOS.c    ****         }
 526:notoriOS.c    ****         
 527:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 528:notoriOS.c    ****         // If not -- keep the statck and try next time
 529:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 530:notoriOS.c    ****         modem_power_down();
 1335              		.loc 1 530 0
 1336 040c FFF7FEFF 		bl	modem_power_down
 531:notoriOS.c    ****         
 532:notoriOS.c    ****         try_counter = 0u;
 1337              		.loc 1 532 0
 1338 0410 064B     		ldr	r3, .L48+4
 1339 0412 0022     		movs	r2, #0
 1340 0414 1A70     		strb	r2, [r3]
 533:notoriOS.c    ****         return 0u;
 1341              		.loc 1 533 0
 1342 0416 0023     		movs	r3, #0
 1343 0418 00E0     		b	.L33
 1344              	.L36:
 1345              	.LBE2:
 534:notoriOS.c    ****     }
 535:notoriOS.c    ****       
 536:notoriOS.c    ****       return 1u; // Not done yet
 1346              		.loc 1 536 0
 1347 041a 0123     		movs	r3, #1
 1348              	.L33:
 537:notoriOS.c    **** }
 1349              		.loc 1 537 0 discriminator 1
 1350 041c 1846     		mov	r0, r3
 1351 041e 07F23C57 		addw	r7, r7, #1340
 1352              		.cfi_def_cfa_offset 12
 1353 0422 BD46     		mov	sp, r7
 1354              		.cfi_def_cfa_register 13
 1355              		@ sp needed
 1356 0424 90BD     		pop	{r4, r7, pc}
 1357              	.L49:
 1358 0426 00BF     		.align	2
 1359              	.L48:
 1360 0428 44020000 		.word	.LC34
 1361 042c 00000000 		.word	try_counter
 1362              		.cfi_endproc
 1363              	.LFE74:
 1364              		.size	syncData, .-syncData
 1365              		.section	.text.configureRemoteParams,"ax",%progbits
 1366              		.align	2
 1367              		.global	configureRemoteParams
 1368              		.thumb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 36


 1369              		.thumb_func
 1370              		.type	configureRemoteParams, %function
 1371              	configureRemoteParams:
 1372              	.LFB75:
 538:notoriOS.c    **** 
 539:notoriOS.c    **** // ==============================================
 540:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 541:notoriOS.c    **** // Returns 0 when done
 542:notoriOS.c    **** // ==============================================
 543:notoriOS.c    **** uint8 configureRemoteParams(){
 1373              		.loc 1 543 0
 1374              		.cfi_startproc
 1375              		@ args = 0, pretend = 0, frame = 8
 1376              		@ frame_needed = 1, uses_anonymous_args = 0
 1377 0000 80B5     		push	{r7, lr}
 1378              		.cfi_def_cfa_offset 8
 1379              		.cfi_offset 7, -8
 1380              		.cfi_offset 14, -4
 1381 0002 82B0     		sub	sp, sp, #8
 1382              		.cfi_def_cfa_offset 16
 1383 0004 00AF     		add	r7, sp, #0
 1384              		.cfi_def_cfa_register 7
 544:notoriOS.c    ****     
 545:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1385              		.loc 1 545 0
 1386 0006 FFF7FEFF 		bl	modem_get_state
 1387 000a 0346     		mov	r3, r0
 1388 000c 002B     		cmp	r3, #0
 1389 000e 02D1     		bne	.L51
 546:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 547:notoriOS.c    ****         modem_power_up();
 1390              		.loc 1 547 0
 1391 0010 FFF7FEFF 		bl	modem_power_up
 1392 0014 11E0     		b	.L52
 1393              	.L51:
 548:notoriOS.c    ****             
 549:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1394              		.loc 1 549 0
 1395 0016 FFF7FEFF 		bl	modem_get_state
 1396 001a 0346     		mov	r3, r0
 1397 001c 042B     		cmp	r3, #4
 1398 001e 0CD1     		bne	.L52
 1399              	.LBB8:
 550:notoriOS.c    ****         
 551:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 552:notoriOS.c    ****         
 553:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 554:notoriOS.c    ****         long network_time = modem_get_network_time();
 1400              		.loc 1 554 0
 1401 0020 FFF7FEFF 		bl	modem_get_network_time
 1402 0024 7860     		str	r0, [r7, #4]
 555:notoriOS.c    ****         if(network_time != 0){
 1403              		.loc 1 555 0
 1404 0026 7B68     		ldr	r3, [r7, #4]
 1405 0028 002B     		cmp	r3, #0
 1406 002a 02D0     		beq	.L53
 556:notoriOS.c    ****             setTime(network_time);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 37


 1407              		.loc 1 556 0
 1408 002c 7868     		ldr	r0, [r7, #4]
 1409 002e FFF7FEFF 		bl	setTime
 1410              	.L53:
 557:notoriOS.c    ****         }
 558:notoriOS.c    ****         
 559:notoriOS.c    ****         // Get GPS coordinates
 560:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 561:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 562:notoriOS.c    ****         modem_power_down();
 1411              		.loc 1 562 0
 1412 0032 FFF7FEFF 		bl	modem_power_down
 563:notoriOS.c    ****         return 0u;
 1413              		.loc 1 563 0
 1414 0036 0023     		movs	r3, #0
 1415 0038 00E0     		b	.L54
 1416              	.L52:
 1417              	.LBE8:
 564:notoriOS.c    ****         
 565:notoriOS.c    ****     }
 566:notoriOS.c    ****     
 567:notoriOS.c    ****     return 1u;
 1418              		.loc 1 567 0
 1419 003a 0123     		movs	r3, #1
 1420              	.L54:
 568:notoriOS.c    **** }
 1421              		.loc 1 568 0
 1422 003c 1846     		mov	r0, r3
 1423 003e 0837     		adds	r7, r7, #8
 1424              		.cfi_def_cfa_offset 8
 1425 0040 BD46     		mov	sp, r7
 1426              		.cfi_def_cfa_register 13
 1427              		@ sp needed
 1428 0042 80BD     		pop	{r7, pc}
 1429              		.cfi_endproc
 1430              	.LFE75:
 1431              		.size	configureRemoteParams, .-configureRemoteParams
 1432              		.section	.rodata
 1433 026f 00       		.align	2
 1434              	.LC35:
 1435 0270 256C6400 		.ascii	"%ld\000"
 1436              		.align	2
 1437              	.LC36:
 1438 0274 6D617862 		.ascii	"maxbotix_depth=%s\000"
 1438      6F746978 
 1438      5F646570 
 1438      74683D25 
 1438      7300
 1439 0286 0000     		.align	2
 1440              	.LC37:
 1441 0288 6D617862 		.ascii	"maxbotix_depth\000"
 1441      6F746978 
 1441      5F646570 
 1441      746800
 1442 0297 00       		.align	2
 1443              	.LC38:
 1444 0298 612B00   		.ascii	"a+\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 38


 1445 029b 00       		.align	2
 1446              	.LC39:
 1447 029c 206D6178 		.ascii	" maxbotix_depth: \000"
 1447      626F7469 
 1447      785F6465 
 1447      7074683A 
 1447      2000
 1448 02ae 0000     		.align	2
 1449              	.LC40:
 1450 02b0 2000     		.ascii	" \000"
 1451 02b2 0000     		.align	2
 1452              	.LC41:
 1453 02b4 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 1453      64206E6F 
 1453      74206765 
 1453      74207661 
 1453      6C696420 
 1454              		.global	__aeabi_f2d
 1455              		.align	2
 1456              	.LC42:
 1457 02e0 252E3266 		.ascii	"%.2f,%.2f,%.2f,%.2f,                %.2f,%.2f,%.2f,"
 1457      2C252E32 
 1457      662C252E 
 1457      32662C25 
 1457      2E32662C 
 1458 0313 252E3266 		.ascii	"%.2f,%.2f,                %.2f,%.2f,%.2f,%.2f,%.2f,"
 1458      2C252E32 
 1458      662C2020 
 1458      20202020 
 1458      20202020 
 1459 0346 252E3266 		.ascii	"%.2f,                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,"
 1459      2C202020 
 1459      20202020 
 1459      20202020 
 1459      20202020 
 1460 0379 20202020 		.ascii	"                %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,     "
 1460      20202020 
 1460      20202020 
 1460      20202020 
 1460      252E3266 
 1461 03ac 20202020 		.ascii	"           %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,          "
 1461      20202020 
 1461      20202025 
 1461      2E32662C 
 1461      252E3266 
 1462 03df 20202020 		.ascii	"      %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,               "
 1462      2020252E 
 1462      32662C25 
 1462      2E32662C 
 1462      252E3266 
 1463 0412 20252E32 		.ascii	" %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,                %.2f"
 1463      662C252E 
 1463      32662C25 
 1463      2E32662C 
 1463      252E3266 
 1464 0445 2C252E32 		.ascii	",%.2f,%.2f,%.2f,                %.2f,%.2f,%.2f,%.2f"
 1464      662C252E 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 39


 1464      32662C25 
 1464      2E32662C 
 1464      20202020 
 1465 0478 2C252E32 		.ascii	",%.2f\000"
 1465      6600
 1466 047e 0000     		.align	2
 1467              	.LC43:
 1468 0480 736F6E74 		.ascii	"sontek=%s\000"
 1468      656B3D25 
 1468      7300
 1469 048a 0000     		.align	2
 1470              	.LC44:
 1471 048c 20736F6E 		.ascii	" sontek, \000"
 1471      74656B2C 
 1471      2000
 1472 0496 0000     		.align	2
 1473              	.LC45:
 1474 0498 0A00     		.ascii	"\012\000"
 1475 049a 0000     		.align	2
 1476              	.LC46:
 1477 049c 252E3266 		.ascii	"%.2f\000"
 1477      00
 1478 04a1 000000   		.align	2
 1479              	.LC47:
 1480 04a4 736F6E74 		.ascii	"sontek_temp\000"
 1480      656B5F74 
 1480      656D7000 
 1481              		.align	2
 1482              	.LC48:
 1483 04b0 736F6E74 		.ascii	"sontek_stage\000"
 1483      656B5F73 
 1483      74616765 
 1483      00
 1484 04bd 000000   		.align	2
 1485              	.LC49:
 1486 04c0 736F6E74 		.ascii	"sontek_Q\000"
 1486      656B5F51 
 1486      00
 1487 04c9 000000   		.align	2
 1488              	.LC50:
 1489 04cc 736F6E74 		.ascii	"sontek_Vb\000"
 1489      656B5F56 
 1489      6200
 1490 04d6 0000     		.align	2
 1491              	.LC51:
 1492 04d8 736F6E74 		.ascii	"sontek_avg_SNR\000"
 1492      656B5F61 
 1492      76675F53 
 1492      4E5200
 1493 04e7 00       		.align	2
 1494              	.LC52:
 1495 04e8 736F6E74 		.ascii	"sontek_amp1\000"
 1495      656B5F61 
 1495      6D703100 
 1496              		.align	2
 1497              	.LC53:
 1498 04f4 736F6E74 		.ascii	"sontek_amp2\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 40


 1498      656B5F61 
 1498      6D703200 
 1499              		.align	2
 1500              	.LC54:
 1501 0500 736F6E74 		.ascii	"sontek_amp3\000"
 1501      656B5F61 
 1501      6D703300 
 1502              		.align	2
 1503              	.LC55:
 1504 050c 736F6E74 		.ascii	"sontek_snr1\000"
 1504      656B5F73 
 1504      6E723100 
 1505              		.align	2
 1506              	.LC56:
 1507 0518 736F6E74 		.ascii	"sontek_snr2\000"
 1507      656B5F73 
 1507      6E723200 
 1508              		.align	2
 1509              	.LC57:
 1510 0524 736F6E74 		.ascii	"sontek_snr3\000"
 1510      656B5F73 
 1510      6E723300 
 1511              		.align	2
 1512              	.LC58:
 1513 0530 736F6E74 		.ascii	"sontek_amp4\000"
 1513      656B5F61 
 1513      6D703400 
 1514              		.align	2
 1515              	.LC59:
 1516 053c 736F6E74 		.ascii	"sontek_amp5\000"
 1516      656B5F61 
 1516      6D703500 
 1517              		.align	2
 1518              	.LC60:
 1519 0548 736F6E74 		.ascii	"sontek_amp6\000"
 1519      656B5F61 
 1519      6D703600 
 1520              		.align	2
 1521              	.LC61:
 1522 0554 736F6E74 		.ascii	"sontek_snr4\000"
 1522      656B5F73 
 1522      6E723400 
 1523              		.align	2
 1524              	.LC62:
 1525 0560 736F6E74 		.ascii	"sontek_snr5\000"
 1525      656B5F73 
 1525      6E723500 
 1526              		.align	2
 1527              	.LC63:
 1528 056c 736F6E74 		.ascii	"sontek_snr6\000"
 1528      656B5F73 
 1528      6E723600 
 1529              		.align	2
 1530              	.LC64:
 1531 0578 736F6E74 		.ascii	"sontek_amp7\000"
 1531      656B5F61 
 1531      6D703700 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 41


 1532              		.align	2
 1533              	.LC65:
 1534 0584 736F6E74 		.ascii	"sontek_amp8\000"
 1534      656B5F61 
 1534      6D703800 
 1535              		.align	2
 1536              	.LC66:
 1537 0590 736F6E74 		.ascii	"sontek_amp9\000"
 1537      656B5F61 
 1537      6D703900 
 1538              		.align	2
 1539              	.LC67:
 1540 059c 736F6E74 		.ascii	"sontek_snr7\000"
 1540      656B5F73 
 1540      6E723700 
 1541              		.align	2
 1542              	.LC68:
 1543 05a8 736F6E74 		.ascii	"sontek_snr8\000"
 1543      656B5F73 
 1543      6E723800 
 1544              		.align	2
 1545              	.LC69:
 1546 05b4 736F6E74 		.ascii	"sontek_snr9\000"
 1546      656B5F73 
 1546      6E723900 
 1547              		.align	2
 1548              	.LC70:
 1549 05c0 736F6E74 		.ascii	"sontek_amp10\000"
 1549      656B5F61 
 1549      6D703130 
 1549      00
 1550 05cd 000000   		.align	2
 1551              	.LC71:
 1552 05d0 736F6E74 		.ascii	"sontek_snr10\000"
 1552      656B5F73 
 1552      6E723130 
 1552      00
 1553 05dd 000000   		.align	2
 1554              	.LC72:
 1555 05e0 256300   		.ascii	"%c\000"
 1556 05e3 00       		.align	2
 1557              	.LC73:
 1558 05e4 436F756C 		.ascii	"Could not get valid readings from Sontek. Error: %c"
 1558      64206E6F 
 1558      74206765 
 1558      74207661 
 1558      6C696420 
 1559 0617 2E00     		.ascii	".\000"
 1560 0619 000000   		.align	2
 1561              	.LC74:
 1562 061c 736F6E74 		.ascii	"sontek_flag\000"
 1562      656B5F66 
 1562      6C616700 
 1563              		.align	2
 1564              	.LC75:
 1565 0628 20736F6E 		.ascii	" sontek error: \000"
 1565      74656B20 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 42


 1565      6572726F 
 1565      723A2000 
 1566              		.align	2
 1567              	.LC76:
 1568 0638 765F6261 		.ascii	"v_bat=%s\000"
 1568      743D2573 
 1568      00
 1569 0641 000000   		.align	2
 1570              	.LC77:
 1571 0644 765F6261 		.ascii	"v_bat\000"
 1571      7400
 1572 064a 0000     		.align	2
 1573              	.LC78:
 1574 064c 20766261 		.ascii	" vbat: \000"
 1574      743A2000 
 1575              		.align	2
 1576              	.LC79:
 1577 0654 70726573 		.ascii	"pressure_current=%s\000"
 1577      73757265 
 1577      5F637572 
 1577      72656E74 
 1577      3D257300 
 1578              		.align	2
 1579              	.LC80:
 1580 0668 70726573 		.ascii	"pressure_current\000"
 1580      73757265 
 1580      5F637572 
 1580      72656E74 
 1580      00
 1581 0679 000000   		.align	2
 1582              	.LC81:
 1583 067c 20707265 		.ascii	" pressure_current: \000"
 1583      73737572 
 1583      655F6375 
 1583      7272656E 
 1583      743A2000 
 1584              		.align	2
 1585              	.LC82:
 1586 0690 70726573 		.ascii	"pressure_depth=%s\000"
 1586      73757265 
 1586      5F646570 
 1586      74683D25 
 1586      7300
 1587 06a2 0000     		.align	2
 1588              	.LC83:
 1589 06a4 70726573 		.ascii	"pressure_depth\000"
 1589      73757265 
 1589      5F646570 
 1589      746800
 1590 06b3 00       		.align	2
 1591              	.LC84:
 1592 06b4 20707265 		.ascii	" pressure_depth: \000"
 1592      73737572 
 1592      655F6465 
 1592      7074683A 
 1592      2000
 1593 06c6 0000     		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 43


 1594              	.LC85:
 1595 06c8 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1595      64206E6F 
 1595      74206765 
 1595      74207661 
 1595      6C696420 
 1596              		.section	.text.makeMeasurements,"ax",%progbits
 1597              		.align	2
 1598              		.global	makeMeasurements
 1599              		.thumb
 1600              		.thumb_func
 1601              		.type	makeMeasurements, %function
 1602              	makeMeasurements:
 1603              	.LFB76:
 569:notoriOS.c    **** 
 570:notoriOS.c    **** 
 571:notoriOS.c    **** // ==============================================
 572:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 573:notoriOS.c    **** // Returns 0 when finished
 574:notoriOS.c    **** // ==============================================
 575:notoriOS.c    **** uint8 makeMeasurements(){
 1604              		.loc 1 575 0
 1605              		.cfi_startproc
 1606              		@ args = 0, pretend = 0, frame = 1040
 1607              		@ frame_needed = 1, uses_anonymous_args = 0
 1608 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 1609              		.cfi_def_cfa_offset 32
 1610              		.cfi_offset 4, -32
 1611              		.cfi_offset 5, -28
 1612              		.cfi_offset 7, -24
 1613              		.cfi_offset 8, -20
 1614              		.cfi_offset 9, -16
 1615              		.cfi_offset 10, -12
 1616              		.cfi_offset 11, -8
 1617              		.cfi_offset 14, -4
 1618 0004 ADF5B86D 		sub	sp, sp, #1472
 1619              		.cfi_def_cfa_offset 1504
 1620 0008 6CAF     		add	r7, sp, #432
 1621              		.cfi_def_cfa 7, 1072
 576:notoriOS.c    ****     
 577:notoriOS.c    ****     // Get clock time and save to timeStamp
 578:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1622              		.loc 1 578 0
 1623 000a FFF7FEFF 		bl	getTimeStamp
 1624 000e C7F80C04 		str	r0, [r7, #1036]
 579:notoriOS.c    ****     char c_timeStamp[32];
 580:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1625              		.loc 1 580 0
 1626 0012 07F57B70 		add	r0, r7, #1004
 1627 0016 D7F80C34 		ldr	r3, [r7, #1036]
 1628 001a 254A     		ldr	r2, .L66
 1629 001c 2021     		movs	r1, #32
 1630 001e FFF7FEFF 		bl	snprintf
 581:notoriOS.c    ****     
 582:notoriOS.c    ****     // Holds string for value that will be written 
 583:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 584:notoriOS.c    ****     char big_value[DATA_MAX_KEY_LENGTH*15];
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 44


 585:notoriOS.c    ****     
 586:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 587:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 1631              		.loc 1 587 0
 1632 0022 244B     		ldr	r3, .L66+4
 1633 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1634 0026 002B     		cmp	r3, #0
 1635 0028 56D1     		bne	.L56
 1636              	.LBB9:
 588:notoriOS.c    ****         
 589:notoriOS.c    ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
 590:notoriOS.c    ****         level_sensor_t m_level_sensor;
 591:notoriOS.c    ****         
 592:notoriOS.c    ****         // Take level sensor readings and save them to m_level_sensor
 593:notoriOS.c    ****         m_level_sensor = level_sensor_take_reading();
 1637              		.loc 1 593 0
 1638 002a 07F51F73 		add	r3, r7, #636
 1639 002e 1846     		mov	r0, r3
 1640 0030 FFF7FEFF 		bl	level_sensor_take_reading
 594:notoriOS.c    ****     
 595:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 596:notoriOS.c    ****         if(m_level_sensor.num_valid_readings > 0){
 1641              		.loc 1 596 0
 1642 0034 07F51F73 		add	r3, r7, #636
 1643 0038 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1644 003a 002B     		cmp	r3, #0
 1645 003c 32D0     		beq	.L57
 597:notoriOS.c    ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 1646              		.loc 1 597 0
 1647 003e 07F51F73 		add	r3, r7, #636
 1648 0042 B3F91630 		ldrsh	r3, [r3, #22]
 1649 0046 07F57670 		add	r0, r7, #984
 1650 004a 1B4A     		ldr	r2, .L66+8
 1651 004c 1421     		movs	r1, #20
 1652 004e FFF7FEFF 		bl	snprintf
 598:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 1653              		.loc 1 598 0
 1654 0052 07F57673 		add	r3, r7, #984
 1655 0056 1A46     		mov	r2, r3
 1656 0058 1849     		ldr	r1, .L66+12
 1657 005a 0020     		movs	r0, #0
 1658 005c FFF7FEFF 		bl	printNotif
 599:notoriOS.c    ****             pushData("maxbotix_depth",value,timeStamp);
 1659              		.loc 1 599 0
 1660 0060 07F57673 		add	r3, r7, #984
 1661 0064 D7F80C24 		ldr	r2, [r7, #1036]
 1662 0068 1946     		mov	r1, r3
 1663 006a 1548     		ldr	r0, .L66+16
 1664 006c FFF7FEFF 		bl	pushData
 600:notoriOS.c    ****             
 601:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 602:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1665              		.loc 1 602 0
 1666 0070 07F57B73 		add	r3, r7, #1004
 1667 0074 1A46     		mov	r2, r3
 1668 0076 1349     		ldr	r1, .L66+20
 1669 0078 1348     		ldr	r0, .L66+24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 45


 1670 007a FFF7FEFF 		bl	SD_write
 603:notoriOS.c    ****             SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 1671              		.loc 1 603 0
 1672 007e 134A     		ldr	r2, .L66+28
 1673 0080 1049     		ldr	r1, .L66+20
 1674 0082 1148     		ldr	r0, .L66+24
 1675 0084 FFF7FEFF 		bl	SD_write
 604:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1676              		.loc 1 604 0
 1677 0088 07F57673 		add	r3, r7, #984
 1678 008c 1A46     		mov	r2, r3
 1679 008e 0D49     		ldr	r1, .L66+20
 1680 0090 0D48     		ldr	r0, .L66+24
 1681 0092 FFF7FEFF 		bl	SD_write
 605:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1682              		.loc 1 605 0
 1683 0096 0E4A     		ldr	r2, .L66+32
 1684 0098 0A49     		ldr	r1, .L66+20
 1685 009a 0B48     		ldr	r0, .L66+24
 1686 009c FFF7FEFF 		bl	SD_write
 1687 00a0 00F012BE 		b	.L59
 1688              	.L57:
 606:notoriOS.c    ****         }else{
 607:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 1689              		.loc 1 607 0
 1690 00a4 0B49     		ldr	r1, .L66+36
 1691 00a6 0220     		movs	r0, #2
 1692 00a8 FFF7FEFF 		bl	printNotif
 1693 00ac 00F00CBE 		b	.L59
 1694              	.L67:
 1695              		.align	2
 1696              	.L66:
 1697 00b0 70020000 		.word	.LC35
 1698 00b4 00000000 		.word	updatable_parameters
 1699 00b8 3C000000 		.word	.LC2
 1700 00bc 74020000 		.word	.LC36
 1701 00c0 88020000 		.word	.LC37
 1702 00c4 98020000 		.word	.LC38
 1703 00c8 00000000 		.word	Data_fileName
 1704 00cc 9C020000 		.word	.LC39
 1705 00d0 B0020000 		.word	.LC40
 1706 00d4 B4020000 		.word	.LC41
 1707              	.L56:
 1708              	.LBE9:
 608:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 609:notoriOS.c    ****         }
 610:notoriOS.c    ****     // If node type is sontek flow node, take sontek sensor measurements
 611:notoriOS.c    ****     }else if(updatable_parameters.node_type == NODE_TYPE_SONTEK_FLOW){
 1709              		.loc 1 611 0
 1710 00d8 084B     		ldr	r3, .L68
 1711 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1712 00dc 022B     		cmp	r3, #2
 1713 00de 40F0F385 		bne	.L59
 1714              	.LBB10:
 612:notoriOS.c    ****         
 613:notoriOS.c    ****         // sontek_t is a new data type we defined in sontek.h. We then use that data type to define
 614:notoriOS.c    ****         sontek_t m_sontek;
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 46


 615:notoriOS.c    ****         
 616:notoriOS.c    ****         // Take sontek readings and save them to m_sontek
 617:notoriOS.c    ****         m_sontek = sontek_take_reading();
 1715              		.loc 1 617 0
 1716 00e2 07F5C873 		add	r3, r7, #400
 1717 00e6 1846     		mov	r0, r3
 1718 00e8 FFF7FEFF 		bl	sontek_take_reading
 618:notoriOS.c    ****         
 619:notoriOS.c    ****         // If flag is valid (1), then print the sontek readings and push the data to the data wheel
 620:notoriOS.c    ****         if(m_sontek.flag == 1){
 1719              		.loc 1 620 0
 1720 00ec 07F5C873 		add	r3, r7, #400
 1721 00f0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1722 00f2 012B     		cmp	r3, #1
 1723 00f4 40F0B885 		bne	.L60
 1724 00f8 02E0     		b	.L69
 1725              	.L70:
 1726 00fa 00BF     		.align	2
 1727              	.L68:
 1728 00fc 00000000 		.word	updatable_parameters
 1729              	.L69:
 621:notoriOS.c    ****             
 622:notoriOS.c    ****             //Print all measurements to serial and the SD card to file called data.txt
 623:notoriOS.c    **** 
 624:notoriOS.c    ****             snprintf(big_value,sizeof(big_value),"%.2f,%.2f,%.2f,%.2f,\
 625:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 626:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 627:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 628:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 629:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 630:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 631:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,%.2f,\
 632:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,\
 633:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f",\
 634:notoriOS.c    ****                 m_sontek.data0[0],m_sontek.data0[1],m_sontek.data0[2],m_sontek.data0[3],\
 1730              		.loc 1 634 0
 1731 0100 07F5C873 		add	r3, r7, #400
 1732 0104 DB68     		ldr	r3, [r3, #12]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1733              		.loc 1 624 0
 1734 0106 1846     		mov	r0, r3
 1735 0108 FFF7FEFF 		bl	__aeabi_f2d
 1736 010c 07F5C473 		add	r3, r7, #392
 1737 0110 C3E90001 		strd	r0, [r3]
 1738              		.loc 1 634 0
 1739 0114 07F5C873 		add	r3, r7, #400
 1740 0118 1B69     		ldr	r3, [r3, #16]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1741              		.loc 1 624 0
 1742 011a 1846     		mov	r0, r3
 1743 011c FFF7FEFF 		bl	__aeabi_f2d
 1744 0120 07F5C073 		add	r3, r7, #384
 1745 0124 C3E90001 		strd	r0, [r3]
 1746              		.loc 1 634 0
 1747 0128 07F5C873 		add	r3, r7, #400
 1748 012c 5B69     		ldr	r3, [r3, #20]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 47


 1749              		.loc 1 624 0
 1750 012e 1846     		mov	r0, r3
 1751 0130 FFF7FEFF 		bl	__aeabi_f2d
 1752 0134 07F5BC73 		add	r3, r7, #376
 1753 0138 C3E90001 		strd	r0, [r3]
 1754              		.loc 1 634 0
 1755 013c 07F5C873 		add	r3, r7, #400
 1756 0140 9B69     		ldr	r3, [r3, #24]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1757              		.loc 1 624 0
 1758 0142 1846     		mov	r0, r3
 1759 0144 FFF7FEFF 		bl	__aeabi_f2d
 1760 0148 07F5B873 		add	r3, r7, #368
 1761 014c C3E90001 		strd	r0, [r3]
 635:notoriOS.c    ****                 m_sontek.data1[0],m_sontek.data1[1],m_sontek.data1[2],m_sontek.data1[3],m_sontek.da
 1762              		.loc 1 635 0
 1763 0150 07F5C873 		add	r3, r7, #400
 1764 0154 DB69     		ldr	r3, [r3, #28]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1765              		.loc 1 624 0
 1766 0156 1846     		mov	r0, r3
 1767 0158 FFF7FEFF 		bl	__aeabi_f2d
 1768 015c 07F5B473 		add	r3, r7, #360
 1769 0160 C3E90001 		strd	r0, [r3]
 1770              		.loc 1 635 0
 1771 0164 07F5C873 		add	r3, r7, #400
 1772 0168 1B6A     		ldr	r3, [r3, #32]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1773              		.loc 1 624 0
 1774 016a 1846     		mov	r0, r3
 1775 016c FFF7FEFF 		bl	__aeabi_f2d
 1776 0170 07F5B073 		add	r3, r7, #352
 1777 0174 C3E90001 		strd	r0, [r3]
 1778              		.loc 1 635 0
 1779 0178 07F5C873 		add	r3, r7, #400
 1780 017c 5B6A     		ldr	r3, [r3, #36]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1781              		.loc 1 624 0
 1782 017e 1846     		mov	r0, r3
 1783 0180 FFF7FEFF 		bl	__aeabi_f2d
 1784 0184 07F5AC73 		add	r3, r7, #344
 1785 0188 C3E90001 		strd	r0, [r3]
 1786              		.loc 1 635 0
 1787 018c 07F5C873 		add	r3, r7, #400
 1788 0190 9B6A     		ldr	r3, [r3, #40]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1789              		.loc 1 624 0
 1790 0192 1846     		mov	r0, r3
 1791 0194 FFF7FEFF 		bl	__aeabi_f2d
 1792 0198 07F5A873 		add	r3, r7, #336
 1793 019c C3E90001 		strd	r0, [r3]
 1794              		.loc 1 635 0
 1795 01a0 07F5C873 		add	r3, r7, #400
 1796 01a4 DB6A     		ldr	r3, [r3, #44]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1797              		.loc 1 624 0
 1798 01a6 1846     		mov	r0, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 48


 1799 01a8 FFF7FEFF 		bl	__aeabi_f2d
 1800 01ac 07F5A473 		add	r3, r7, #328
 1801 01b0 C3E90001 		strd	r0, [r3]
 636:notoriOS.c    ****                 m_sontek.data2[0],m_sontek.data2[1],m_sontek.data2[2],m_sontek.data2[3],m_sontek.da
 1802              		.loc 1 636 0
 1803 01b4 07F5C873 		add	r3, r7, #400
 1804 01b8 1B6B     		ldr	r3, [r3, #48]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1805              		.loc 1 624 0
 1806 01ba 1846     		mov	r0, r3
 1807 01bc FFF7FEFF 		bl	__aeabi_f2d
 1808 01c0 07F5A073 		add	r3, r7, #320
 1809 01c4 C3E90001 		strd	r0, [r3]
 1810              		.loc 1 636 0
 1811 01c8 07F5C873 		add	r3, r7, #400
 1812 01cc 5B6B     		ldr	r3, [r3, #52]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1813              		.loc 1 624 0
 1814 01ce 1846     		mov	r0, r3
 1815 01d0 FFF7FEFF 		bl	__aeabi_f2d
 1816 01d4 07F59C73 		add	r3, r7, #312
 1817 01d8 C3E90001 		strd	r0, [r3]
 1818              		.loc 1 636 0
 1819 01dc 07F5C873 		add	r3, r7, #400
 1820 01e0 9B6B     		ldr	r3, [r3, #56]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1821              		.loc 1 624 0
 1822 01e2 1846     		mov	r0, r3
 1823 01e4 FFF7FEFF 		bl	__aeabi_f2d
 1824 01e8 07F59873 		add	r3, r7, #304
 1825 01ec C3E90001 		strd	r0, [r3]
 1826              		.loc 1 636 0
 1827 01f0 07F5C873 		add	r3, r7, #400
 1828 01f4 DB6B     		ldr	r3, [r3, #60]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1829              		.loc 1 624 0
 1830 01f6 1846     		mov	r0, r3
 1831 01f8 FFF7FEFF 		bl	__aeabi_f2d
 1832 01fc 07F59473 		add	r3, r7, #296
 1833 0200 C3E90001 		strd	r0, [r3]
 1834              		.loc 1 636 0
 1835 0204 07F5C873 		add	r3, r7, #400
 1836 0208 1B6C     		ldr	r3, [r3, #64]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1837              		.loc 1 624 0
 1838 020a 1846     		mov	r0, r3
 1839 020c FFF7FEFF 		bl	__aeabi_f2d
 1840 0210 07F59073 		add	r3, r7, #288
 1841 0214 C3E90001 		strd	r0, [r3]
 1842              		.loc 1 636 0
 1843 0218 07F5C873 		add	r3, r7, #400
 1844 021c 5B6C     		ldr	r3, [r3, #68]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1845              		.loc 1 624 0
 1846 021e 1846     		mov	r0, r3
 1847 0220 FFF7FEFF 		bl	__aeabi_f2d
 1848 0224 07F58C73 		add	r3, r7, #280
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 49


 1849 0228 C3E90001 		strd	r0, [r3]
 637:notoriOS.c    ****                 m_sontek.data3[0],m_sontek.data3[1],m_sontek.data3[2],m_sontek.data3[3],m_sontek.da
 1850              		.loc 1 637 0
 1851 022c 07F5C873 		add	r3, r7, #400
 1852 0230 9B6C     		ldr	r3, [r3, #72]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1853              		.loc 1 624 0
 1854 0232 1846     		mov	r0, r3
 1855 0234 FFF7FEFF 		bl	__aeabi_f2d
 1856 0238 07F58873 		add	r3, r7, #272
 1857 023c C3E90001 		strd	r0, [r3]
 1858              		.loc 1 637 0
 1859 0240 07F5C873 		add	r3, r7, #400
 1860 0244 DB6C     		ldr	r3, [r3, #76]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1861              		.loc 1 624 0
 1862 0246 1846     		mov	r0, r3
 1863 0248 FFF7FEFF 		bl	__aeabi_f2d
 1864 024c 07F58473 		add	r3, r7, #264
 1865 0250 C3E90001 		strd	r0, [r3]
 1866              		.loc 1 637 0
 1867 0254 07F5C873 		add	r3, r7, #400
 1868 0258 1B6D     		ldr	r3, [r3, #80]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1869              		.loc 1 624 0
 1870 025a 1846     		mov	r0, r3
 1871 025c FFF7FEFF 		bl	__aeabi_f2d
 1872 0260 07F58073 		add	r3, r7, #256
 1873 0264 C3E90001 		strd	r0, [r3]
 1874              		.loc 1 637 0
 1875 0268 07F5C873 		add	r3, r7, #400
 1876 026c 5B6D     		ldr	r3, [r3, #84]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1877              		.loc 1 624 0
 1878 026e 1846     		mov	r0, r3
 1879 0270 FFF7FEFF 		bl	__aeabi_f2d
 1880 0274 C7E93E01 		strd	r0, [r7, #248]
 1881              		.loc 1 637 0
 1882 0278 07F5C873 		add	r3, r7, #400
 1883 027c 9B6D     		ldr	r3, [r3, #88]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1884              		.loc 1 624 0
 1885 027e 1846     		mov	r0, r3
 1886 0280 FFF7FEFF 		bl	__aeabi_f2d
 1887 0284 C7E93C01 		strd	r0, [r7, #240]
 1888              		.loc 1 637 0
 1889 0288 07F5C873 		add	r3, r7, #400
 1890 028c DB6D     		ldr	r3, [r3, #92]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1891              		.loc 1 624 0
 1892 028e 1846     		mov	r0, r3
 1893 0290 FFF7FEFF 		bl	__aeabi_f2d
 1894 0294 C7E93A01 		strd	r0, [r7, #232]
 638:notoriOS.c    ****                 m_sontek.data4[0],m_sontek.data4[1],m_sontek.data4[2],m_sontek.data4[3],m_sontek.da
 1895              		.loc 1 638 0
 1896 0298 07F5C873 		add	r3, r7, #400
 1897 029c 1B6E     		ldr	r3, [r3, #96]	@ float
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 50


 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1898              		.loc 1 624 0
 1899 029e 1846     		mov	r0, r3
 1900 02a0 FFF7FEFF 		bl	__aeabi_f2d
 1901 02a4 C7E93801 		strd	r0, [r7, #224]
 1902              		.loc 1 638 0
 1903 02a8 07F5C873 		add	r3, r7, #400
 1904 02ac 5B6E     		ldr	r3, [r3, #100]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1905              		.loc 1 624 0
 1906 02ae 1846     		mov	r0, r3
 1907 02b0 FFF7FEFF 		bl	__aeabi_f2d
 1908 02b4 C7E93601 		strd	r0, [r7, #216]
 1909              		.loc 1 638 0
 1910 02b8 07F5C873 		add	r3, r7, #400
 1911 02bc 9B6E     		ldr	r3, [r3, #104]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1912              		.loc 1 624 0
 1913 02be 1846     		mov	r0, r3
 1914 02c0 FFF7FEFF 		bl	__aeabi_f2d
 1915 02c4 C7E93401 		strd	r0, [r7, #208]
 1916              		.loc 1 638 0
 1917 02c8 07F5C873 		add	r3, r7, #400
 1918 02cc DB6E     		ldr	r3, [r3, #108]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1919              		.loc 1 624 0
 1920 02ce 1846     		mov	r0, r3
 1921 02d0 FFF7FEFF 		bl	__aeabi_f2d
 1922 02d4 C7E93201 		strd	r0, [r7, #200]
 1923              		.loc 1 638 0
 1924 02d8 07F5C873 		add	r3, r7, #400
 1925 02dc 1B6F     		ldr	r3, [r3, #112]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1926              		.loc 1 624 0
 1927 02de 1846     		mov	r0, r3
 1928 02e0 FFF7FEFF 		bl	__aeabi_f2d
 1929 02e4 C7E93001 		strd	r0, [r7, #192]
 1930              		.loc 1 638 0
 1931 02e8 07F5C873 		add	r3, r7, #400
 1932 02ec 5B6F     		ldr	r3, [r3, #116]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1933              		.loc 1 624 0
 1934 02ee 1846     		mov	r0, r3
 1935 02f0 FFF7FEFF 		bl	__aeabi_f2d
 1936 02f4 C7E92E01 		strd	r0, [r7, #184]
 639:notoriOS.c    ****                 m_sontek.data5[0],m_sontek.data5[1],m_sontek.data5[2],m_sontek.data5[3],m_sontek.da
 1937              		.loc 1 639 0
 1938 02f8 07F5C873 		add	r3, r7, #400
 1939 02fc 9B6F     		ldr	r3, [r3, #120]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1940              		.loc 1 624 0
 1941 02fe 1846     		mov	r0, r3
 1942 0300 FFF7FEFF 		bl	__aeabi_f2d
 1943 0304 C7E92C01 		strd	r0, [r7, #176]
 1944              		.loc 1 639 0
 1945 0308 07F5C873 		add	r3, r7, #400
 1946 030c DB6F     		ldr	r3, [r3, #124]	@ float
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 51


 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1947              		.loc 1 624 0
 1948 030e 1846     		mov	r0, r3
 1949 0310 FFF7FEFF 		bl	__aeabi_f2d
 1950 0314 C7E92A01 		strd	r0, [r7, #168]
 1951              		.loc 1 639 0
 1952 0318 07F5C873 		add	r3, r7, #400
 1953 031c D3F88030 		ldr	r3, [r3, #128]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1954              		.loc 1 624 0
 1955 0320 1846     		mov	r0, r3
 1956 0322 FFF7FEFF 		bl	__aeabi_f2d
 1957 0326 C7E92801 		strd	r0, [r7, #160]
 1958              		.loc 1 639 0
 1959 032a 07F5C873 		add	r3, r7, #400
 1960 032e D3F88430 		ldr	r3, [r3, #132]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1961              		.loc 1 624 0
 1962 0332 1846     		mov	r0, r3
 1963 0334 FFF7FEFF 		bl	__aeabi_f2d
 1964 0338 C7E92601 		strd	r0, [r7, #152]
 1965              		.loc 1 639 0
 1966 033c 07F5C873 		add	r3, r7, #400
 1967 0340 D3F88830 		ldr	r3, [r3, #136]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1968              		.loc 1 624 0
 1969 0344 1846     		mov	r0, r3
 1970 0346 FFF7FEFF 		bl	__aeabi_f2d
 1971 034a C7E92401 		strd	r0, [r7, #144]
 1972              		.loc 1 639 0
 1973 034e 07F5C873 		add	r3, r7, #400
 1974 0352 D3F88C30 		ldr	r3, [r3, #140]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1975              		.loc 1 624 0
 1976 0356 1846     		mov	r0, r3
 1977 0358 FFF7FEFF 		bl	__aeabi_f2d
 1978 035c C7E92201 		strd	r0, [r7, #136]
 640:notoriOS.c    ****                 m_sontek.data6[0],m_sontek.data6[1],m_sontek.data6[2],m_sontek.data6[3],m_sontek.da
 1979              		.loc 1 640 0
 1980 0360 07F5C873 		add	r3, r7, #400
 1981 0364 D3F89030 		ldr	r3, [r3, #144]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1982              		.loc 1 624 0
 1983 0368 1846     		mov	r0, r3
 1984 036a FFF7FEFF 		bl	__aeabi_f2d
 1985 036e C7E92001 		strd	r0, [r7, #128]
 1986              		.loc 1 640 0
 1987 0372 07F5C873 		add	r3, r7, #400
 1988 0376 D3F89430 		ldr	r3, [r3, #148]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1989              		.loc 1 624 0
 1990 037a 1846     		mov	r0, r3
 1991 037c FFF7FEFF 		bl	__aeabi_f2d
 1992 0380 C7E91E01 		strd	r0, [r7, #120]
 1993              		.loc 1 640 0
 1994 0384 07F5C873 		add	r3, r7, #400
 1995 0388 D3F89830 		ldr	r3, [r3, #152]	@ float
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 52


 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 1996              		.loc 1 624 0
 1997 038c 1846     		mov	r0, r3
 1998 038e FFF7FEFF 		bl	__aeabi_f2d
 1999 0392 C7E91C01 		strd	r0, [r7, #112]
 2000              		.loc 1 640 0
 2001 0396 07F5C873 		add	r3, r7, #400
 2002 039a D3F89C30 		ldr	r3, [r3, #156]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2003              		.loc 1 624 0
 2004 039e 1846     		mov	r0, r3
 2005 03a0 FFF7FEFF 		bl	__aeabi_f2d
 2006 03a4 C7E91A01 		strd	r0, [r7, #104]
 2007              		.loc 1 640 0
 2008 03a8 07F5C873 		add	r3, r7, #400
 2009 03ac D3F8A030 		ldr	r3, [r3, #160]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2010              		.loc 1 624 0
 2011 03b0 1846     		mov	r0, r3
 2012 03b2 FFF7FEFF 		bl	__aeabi_f2d
 2013 03b6 C7E91801 		strd	r0, [r7, #96]
 2014              		.loc 1 640 0
 2015 03ba 07F5C873 		add	r3, r7, #400
 2016 03be D3F8A430 		ldr	r3, [r3, #164]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2017              		.loc 1 624 0
 2018 03c2 1846     		mov	r0, r3
 2019 03c4 FFF7FEFF 		bl	__aeabi_f2d
 2020 03c8 C7E91601 		strd	r0, [r7, #88]
 641:notoriOS.c    ****                 m_sontek.data7[0],m_sontek.data7[1],m_sontek.data7[2],m_sontek.data7[3],m_sontek.da
 2021              		.loc 1 641 0
 2022 03cc 07F5C873 		add	r3, r7, #400
 2023 03d0 D3F8A830 		ldr	r3, [r3, #168]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2024              		.loc 1 624 0
 2025 03d4 1846     		mov	r0, r3
 2026 03d6 FFF7FEFF 		bl	__aeabi_f2d
 2027 03da C7E91401 		strd	r0, [r7, #80]
 2028              		.loc 1 641 0
 2029 03de 07F5C873 		add	r3, r7, #400
 2030 03e2 D3F8AC30 		ldr	r3, [r3, #172]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2031              		.loc 1 624 0
 2032 03e6 1846     		mov	r0, r3
 2033 03e8 FFF7FEFF 		bl	__aeabi_f2d
 2034 03ec C7E91201 		strd	r0, [r7, #72]
 2035              		.loc 1 641 0
 2036 03f0 07F5C873 		add	r3, r7, #400
 2037 03f4 D3F8B030 		ldr	r3, [r3, #176]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2038              		.loc 1 624 0
 2039 03f8 1846     		mov	r0, r3
 2040 03fa FFF7FEFF 		bl	__aeabi_f2d
 2041 03fe C7E91001 		strd	r0, [r7, #64]
 2042              		.loc 1 641 0
 2043 0402 07F5C873 		add	r3, r7, #400
 2044 0406 D3F8B430 		ldr	r3, [r3, #180]	@ float
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 53


 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2045              		.loc 1 624 0
 2046 040a 1846     		mov	r0, r3
 2047 040c FFF7FEFF 		bl	__aeabi_f2d
 2048 0410 C7E90E01 		strd	r0, [r7, #56]
 2049              		.loc 1 641 0
 2050 0414 07F5C873 		add	r3, r7, #400
 2051 0418 D3F8B830 		ldr	r3, [r3, #184]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2052              		.loc 1 624 0
 2053 041c 1846     		mov	r0, r3
 2054 041e FFF7FEFF 		bl	__aeabi_f2d
 2055 0422 C7E90C01 		strd	r0, [r7, #48]
 2056              		.loc 1 641 0
 2057 0426 07F5C873 		add	r3, r7, #400
 2058 042a D3F8BC30 		ldr	r3, [r3, #188]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2059              		.loc 1 624 0
 2060 042e 1846     		mov	r0, r3
 2061 0430 FFF7FEFF 		bl	__aeabi_f2d
 2062 0434 C7E90A01 		strd	r0, [r7, #40]
 642:notoriOS.c    ****                 m_sontek.data8[0],m_sontek.data8[1],m_sontek.data8[2],m_sontek.data8[3],\
 2063              		.loc 1 642 0
 2064 0438 07F5C873 		add	r3, r7, #400
 2065 043c D3F8C030 		ldr	r3, [r3, #192]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2066              		.loc 1 624 0
 2067 0440 1846     		mov	r0, r3
 2068 0442 FFF7FEFF 		bl	__aeabi_f2d
 2069 0446 C7E90801 		strd	r0, [r7, #32]
 2070              		.loc 1 642 0
 2071 044a 07F5C873 		add	r3, r7, #400
 2072 044e D3F8C430 		ldr	r3, [r3, #196]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2073              		.loc 1 624 0
 2074 0452 1846     		mov	r0, r3
 2075 0454 FFF7FEFF 		bl	__aeabi_f2d
 2076 0458 C7E90601 		strd	r0, [r7, #24]
 2077              		.loc 1 642 0
 2078 045c 07F5C873 		add	r3, r7, #400
 2079 0460 D3F8C830 		ldr	r3, [r3, #200]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2080              		.loc 1 624 0
 2081 0464 1846     		mov	r0, r3
 2082 0466 FFF7FEFF 		bl	__aeabi_f2d
 2083 046a C7E90401 		strd	r0, [r7, #16]
 2084              		.loc 1 642 0
 2085 046e 07F5C873 		add	r3, r7, #400
 2086 0472 D3F8CC30 		ldr	r3, [r3, #204]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2087              		.loc 1 624 0
 2088 0476 1846     		mov	r0, r3
 2089 0478 FFF7FEFF 		bl	__aeabi_f2d
 2090 047c C7E90201 		strd	r0, [r7, #8]
 643:notoriOS.c    ****                 m_sontek.data9[0],m_sontek.data9[1],m_sontek.data9[2],m_sontek.data9[3],m_sontek.da
 2091              		.loc 1 643 0
 2092 0480 07F5C873 		add	r3, r7, #400
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 54


 2093 0484 D3F8D030 		ldr	r3, [r3, #208]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2094              		.loc 1 624 0
 2095 0488 1846     		mov	r0, r3
 2096 048a FFF7FEFF 		bl	__aeabi_f2d
 2097 048e C7E90001 		strd	r0, [r7]
 2098              		.loc 1 643 0
 2099 0492 07F5C873 		add	r3, r7, #400
 2100 0496 D3F8D430 		ldr	r3, [r3, #212]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2101              		.loc 1 624 0
 2102 049a 1846     		mov	r0, r3
 2103 049c FFF7FEFF 		bl	__aeabi_f2d
 2104 04a0 8246     		mov	r10, r0
 2105 04a2 8B46     		mov	fp, r1
 2106              		.loc 1 643 0
 2107 04a4 07F5C873 		add	r3, r7, #400
 2108 04a8 D3F8D830 		ldr	r3, [r3, #216]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2109              		.loc 1 624 0
 2110 04ac 1846     		mov	r0, r3
 2111 04ae FFF7FEFF 		bl	__aeabi_f2d
 2112 04b2 8046     		mov	r8, r0
 2113 04b4 8946     		mov	r9, r1
 2114              		.loc 1 643 0
 2115 04b6 07F5C873 		add	r3, r7, #400
 2116 04ba D3F8DC30 		ldr	r3, [r3, #220]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2117              		.loc 1 624 0
 2118 04be 1846     		mov	r0, r3
 2119 04c0 FFF7FEFF 		bl	__aeabi_f2d
 2120 04c4 0446     		mov	r4, r0
 2121 04c6 0D46     		mov	r5, r1
 2122              		.loc 1 643 0
 2123 04c8 07F5C873 		add	r3, r7, #400
 2124 04cc D3F8E030 		ldr	r3, [r3, #224]	@ float
 624:notoriOS.c    ****                 %.2f,%.2f,%.2f,%.2f,%.2f,\
 2125              		.loc 1 624 0
 2126 04d0 1846     		mov	r0, r3
 2127 04d2 FFF7FEFF 		bl	__aeabi_f2d
 2128 04d6 0A46     		mov	r2, r1
 2129 04d8 0146     		mov	r1, r0
 2130 04da 07F52B70 		add	r0, r7, #684
 2131 04de 6AAB     		add	r3, sp, #424
 2132 04e0 C3E90012 		strd	r1, [r3]
 2133 04e4 68AB     		add	r3, sp, #416
 2134 04e6 C3E90045 		strd	r4, [r3]
 2135 04ea 66AB     		add	r3, sp, #408
 2136 04ec C3E90089 		strd	r8, [r3]
 2137 04f0 64AB     		add	r3, sp, #400
 2138 04f2 C3E900AB 		strd	r10, [r3]
 2139 04f6 62AB     		add	r3, sp, #392
 2140 04f8 D7E90012 		ldrd	r1, [r7]
 2141 04fc C3E90012 		strd	r1, [r3]
 2142 0500 60AB     		add	r3, sp, #384
 2143 0502 D7E90212 		ldrd	r1, [r7, #8]
 2144 0506 C3E90012 		strd	r1, [r3]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 55


 2145 050a 5EAB     		add	r3, sp, #376
 2146 050c D7E90412 		ldrd	r1, [r7, #16]
 2147 0510 C3E90012 		strd	r1, [r3]
 2148 0514 5CAB     		add	r3, sp, #368
 2149 0516 D7E90612 		ldrd	r1, [r7, #24]
 2150 051a C3E90012 		strd	r1, [r3]
 2151 051e 5AAB     		add	r3, sp, #360
 2152 0520 D7E90812 		ldrd	r1, [r7, #32]
 2153 0524 C3E90012 		strd	r1, [r3]
 2154 0528 58AB     		add	r3, sp, #352
 2155 052a D7E90A12 		ldrd	r1, [r7, #40]
 2156 052e C3E90012 		strd	r1, [r3]
 2157 0532 56AB     		add	r3, sp, #344
 2158 0534 D7E90C12 		ldrd	r1, [r7, #48]
 2159 0538 C3E90012 		strd	r1, [r3]
 2160 053c 54AB     		add	r3, sp, #336
 2161 053e D7E90E12 		ldrd	r1, [r7, #56]
 2162 0542 C3E90012 		strd	r1, [r3]
 2163 0546 52AB     		add	r3, sp, #328
 2164 0548 D7E91012 		ldrd	r1, [r7, #64]
 2165 054c C3E90012 		strd	r1, [r3]
 2166 0550 50AB     		add	r3, sp, #320
 2167 0552 D7E91212 		ldrd	r1, [r7, #72]
 2168 0556 C3E90012 		strd	r1, [r3]
 2169 055a 4EAB     		add	r3, sp, #312
 2170 055c D7E91412 		ldrd	r1, [r7, #80]
 2171 0560 C3E90012 		strd	r1, [r3]
 2172 0564 4CAB     		add	r3, sp, #304
 2173 0566 D7E91612 		ldrd	r1, [r7, #88]
 2174 056a C3E90012 		strd	r1, [r3]
 2175 056e 4AAB     		add	r3, sp, #296
 2176 0570 D7E91812 		ldrd	r1, [r7, #96]
 2177 0574 C3E90012 		strd	r1, [r3]
 2178 0578 48AB     		add	r3, sp, #288
 2179 057a D7E91A12 		ldrd	r1, [r7, #104]
 2180 057e C3E90012 		strd	r1, [r3]
 2181 0582 46AB     		add	r3, sp, #280
 2182 0584 D7E91C12 		ldrd	r1, [r7, #112]
 2183 0588 C3E90012 		strd	r1, [r3]
 2184 058c 44AB     		add	r3, sp, #272
 2185 058e D7E91E12 		ldrd	r1, [r7, #120]
 2186 0592 C3E90012 		strd	r1, [r3]
 2187 0596 42AB     		add	r3, sp, #264
 2188 0598 D7E92012 		ldrd	r1, [r7, #128]
 2189 059c C3E90012 		strd	r1, [r3]
 2190 05a0 40AB     		add	r3, sp, #256
 2191 05a2 D7E92212 		ldrd	r1, [r7, #136]
 2192 05a6 C3E90012 		strd	r1, [r3]
 2193 05aa D7E92434 		ldrd	r3, [r7, #144]
 2194 05ae CDE93E34 		strd	r3, [sp, #248]
 2195 05b2 D7E92634 		ldrd	r3, [r7, #152]
 2196 05b6 CDE93C34 		strd	r3, [sp, #240]
 2197 05ba D7E92834 		ldrd	r3, [r7, #160]
 2198 05be CDE93A34 		strd	r3, [sp, #232]
 2199 05c2 D7E92A34 		ldrd	r3, [r7, #168]
 2200 05c6 CDE93834 		strd	r3, [sp, #224]
 2201 05ca D7E92C34 		ldrd	r3, [r7, #176]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 56


 2202 05ce CDE93634 		strd	r3, [sp, #216]
 2203 05d2 D7E92E34 		ldrd	r3, [r7, #184]
 2204 05d6 CDE93434 		strd	r3, [sp, #208]
 2205 05da D7E93034 		ldrd	r3, [r7, #192]
 2206 05de CDE93234 		strd	r3, [sp, #200]
 2207 05e2 D7E93234 		ldrd	r3, [r7, #200]
 2208 05e6 CDE93034 		strd	r3, [sp, #192]
 2209 05ea D7E93434 		ldrd	r3, [r7, #208]
 2210 05ee CDE92E34 		strd	r3, [sp, #184]
 2211 05f2 D7E93634 		ldrd	r3, [r7, #216]
 2212 05f6 CDE92C34 		strd	r3, [sp, #176]
 2213 05fa D7E93834 		ldrd	r3, [r7, #224]
 2214 05fe CDE92A34 		strd	r3, [sp, #168]
 2215 0602 D7E93A34 		ldrd	r3, [r7, #232]
 2216 0606 CDE92834 		strd	r3, [sp, #160]
 2217 060a D7E93C34 		ldrd	r3, [r7, #240]
 2218 060e CDE92634 		strd	r3, [sp, #152]
 2219 0612 D7E93E34 		ldrd	r3, [r7, #248]
 2220 0616 CDE92434 		strd	r3, [sp, #144]
 2221 061a 07F58073 		add	r3, r7, #256
 2222 061e 18CB     		ldmia	r3, {r3-r4}
 2223 0620 CDE92234 		strd	r3, [sp, #136]
 2224 0624 07F58473 		add	r3, r7, #264
 2225 0628 18CB     		ldmia	r3, {r3-r4}
 2226 062a CDE92034 		strd	r3, [sp, #128]
 2227 062e 07F58873 		add	r3, r7, #272
 2228 0632 18CB     		ldmia	r3, {r3-r4}
 2229 0634 CDE91E34 		strd	r3, [sp, #120]
 2230 0638 07F58C73 		add	r3, r7, #280
 2231 063c 18CB     		ldmia	r3, {r3-r4}
 2232 063e CDE91C34 		strd	r3, [sp, #112]
 2233 0642 07F59073 		add	r3, r7, #288
 2234 0646 18CB     		ldmia	r3, {r3-r4}
 2235 0648 CDE91A34 		strd	r3, [sp, #104]
 2236 064c 07F59473 		add	r3, r7, #296
 2237 0650 18CB     		ldmia	r3, {r3-r4}
 2238 0652 CDE91834 		strd	r3, [sp, #96]
 2239 0656 07F59873 		add	r3, r7, #304
 2240 065a 18CB     		ldmia	r3, {r3-r4}
 2241 065c CDE91634 		strd	r3, [sp, #88]
 2242 0660 07F59C73 		add	r3, r7, #312
 2243 0664 18CB     		ldmia	r3, {r3-r4}
 2244 0666 CDE91434 		strd	r3, [sp, #80]
 2245 066a 07F5A073 		add	r3, r7, #320
 2246 066e 18CB     		ldmia	r3, {r3-r4}
 2247 0670 CDE91234 		strd	r3, [sp, #72]
 2248 0674 07F5A473 		add	r3, r7, #328
 2249 0678 18CB     		ldmia	r3, {r3-r4}
 2250 067a CDE91034 		strd	r3, [sp, #64]
 2251 067e 07F5A873 		add	r3, r7, #336
 2252 0682 18CB     		ldmia	r3, {r3-r4}
 2253 0684 CDE90E34 		strd	r3, [sp, #56]
 2254 0688 07F5AC73 		add	r3, r7, #344
 2255 068c 18CB     		ldmia	r3, {r3-r4}
 2256 068e CDE90C34 		strd	r3, [sp, #48]
 2257 0692 07F5B073 		add	r3, r7, #352
 2258 0696 18CB     		ldmia	r3, {r3-r4}
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 57


 2259 0698 CDE90A34 		strd	r3, [sp, #40]
 2260 069c 07F5B473 		add	r3, r7, #360
 2261 06a0 18CB     		ldmia	r3, {r3-r4}
 2262 06a2 CDE90834 		strd	r3, [sp, #32]
 2263 06a6 07F5B873 		add	r3, r7, #368
 2264 06aa 18CB     		ldmia	r3, {r3-r4}
 2265 06ac CDE90634 		strd	r3, [sp, #24]
 2266 06b0 07F5BC73 		add	r3, r7, #376
 2267 06b4 18CB     		ldmia	r3, {r3-r4}
 2268 06b6 CDE90434 		strd	r3, [sp, #16]
 2269 06ba 07F5C073 		add	r3, r7, #384
 2270 06be 18CB     		ldmia	r3, {r3-r4}
 2271 06c0 CDE90234 		strd	r3, [sp, #8]
 2272 06c4 07F5C473 		add	r3, r7, #392
 2273 06c8 18CB     		ldmia	r3, {r3-r4}
 2274 06ca CDE90034 		strd	r3, [sp]
 2275 06ce CC4A     		ldr	r2, .L71
 2276 06d0 4FF49671 		mov	r1, #300
 2277 06d4 FFF7FEFF 		bl	snprintf
 644:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"sontek=%s",big_value);
 2278              		.loc 1 644 0
 2279 06d8 07F52B73 		add	r3, r7, #684
 2280 06dc 1A46     		mov	r2, r3
 2281 06de C949     		ldr	r1, .L71+4
 2282 06e0 0020     		movs	r0, #0
 2283 06e2 FFF7FEFF 		bl	printNotif
 645:notoriOS.c    **** 
 646:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 2284              		.loc 1 646 0
 2285 06e6 07F57B73 		add	r3, r7, #1004
 2286 06ea 1A46     		mov	r2, r3
 2287 06ec C649     		ldr	r1, .L71+8
 2288 06ee C748     		ldr	r0, .L71+12
 2289 06f0 FFF7FEFF 		bl	SD_write
 647:notoriOS.c    ****             SD_write(Data_fileName, "a+", " sontek, ");
 2290              		.loc 1 647 0
 2291 06f4 C64A     		ldr	r2, .L71+16
 2292 06f6 C449     		ldr	r1, .L71+8
 2293 06f8 C448     		ldr	r0, .L71+12
 2294 06fa FFF7FEFF 		bl	SD_write
 648:notoriOS.c    ****             SD_write(Data_fileName, "a+", big_value);
 2295              		.loc 1 648 0
 2296 06fe 07F52B73 		add	r3, r7, #684
 2297 0702 1A46     		mov	r2, r3
 2298 0704 C049     		ldr	r1, .L71+8
 2299 0706 C148     		ldr	r0, .L71+12
 2300 0708 FFF7FEFF 		bl	SD_write
 649:notoriOS.c    ****             SD_write(Data_fileName, "a+", "\n");    //new line
 2301              		.loc 1 649 0
 2302 070c C14A     		ldr	r2, .L71+20
 2303 070e BE49     		ldr	r1, .L71+8
 2304 0710 BE48     		ldr	r0, .L71+12
 2305 0712 FFF7FEFF 		bl	SD_write
 650:notoriOS.c    ****             
 651:notoriOS.c    ****             //send specific measurements from m_sontek.values array to influx
 652:notoriOS.c    ****             //temperature - 0 data0
 653:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data0[0]);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 58


 2306              		.loc 1 653 0
 2307 0716 07F5C873 		add	r3, r7, #400
 2308 071a DB68     		ldr	r3, [r3, #12]	@ float
 2309 071c 1846     		mov	r0, r3
 2310 071e FFF7FEFF 		bl	__aeabi_f2d
 2311 0722 0346     		mov	r3, r0
 2312 0724 0C46     		mov	r4, r1
 2313 0726 07F57670 		add	r0, r7, #984
 2314 072a CDE90034 		strd	r3, [sp]
 2315 072e BA4A     		ldr	r2, .L71+24
 2316 0730 1421     		movs	r1, #20
 2317 0732 FFF7FEFF 		bl	snprintf
 654:notoriOS.c    ****             pushData("sontek_temp",value,timeStamp);
 2318              		.loc 1 654 0
 2319 0736 07F57673 		add	r3, r7, #984
 2320 073a D7F80C24 		ldr	r2, [r7, #1036]
 2321 073e 1946     		mov	r1, r3
 2322 0740 B648     		ldr	r0, .L71+28
 2323 0742 FFF7FEFF 		bl	pushData
 655:notoriOS.c    ****             //stage - 2 data0
 656:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data0[2]);
 2324              		.loc 1 656 0
 2325 0746 07F5C873 		add	r3, r7, #400
 2326 074a 5B69     		ldr	r3, [r3, #20]	@ float
 2327 074c 1846     		mov	r0, r3
 2328 074e FFF7FEFF 		bl	__aeabi_f2d
 2329 0752 0346     		mov	r3, r0
 2330 0754 0C46     		mov	r4, r1
 2331 0756 07F57670 		add	r0, r7, #984
 2332 075a CDE90034 		strd	r3, [sp]
 2333 075e AE4A     		ldr	r2, .L71+24
 2334 0760 1421     		movs	r1, #20
 2335 0762 FFF7FEFF 		bl	snprintf
 657:notoriOS.c    ****             pushData("sontek_stage",value,timeStamp);
 2336              		.loc 1 657 0
 2337 0766 07F57673 		add	r3, r7, #984
 2338 076a D7F80C24 		ldr	r2, [r7, #1036]
 2339 076e 1946     		mov	r1, r3
 2340 0770 AB48     		ldr	r0, .L71+32
 2341 0772 FFF7FEFF 		bl	pushData
 658:notoriOS.c    **** //            //cell end - 3 data0
 659:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.data0[3]);
 660:notoriOS.c    **** //            pushData("sontek_end_cell",value,timeStamp);
 661:notoriOS.c    ****             //flow - 4 data1
 662:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data1[4]);
 2342              		.loc 1 662 0
 2343 0776 07F5C873 		add	r3, r7, #400
 2344 077a DB6A     		ldr	r3, [r3, #44]	@ float
 2345 077c 1846     		mov	r0, r3
 2346 077e FFF7FEFF 		bl	__aeabi_f2d
 2347 0782 0346     		mov	r3, r0
 2348 0784 0C46     		mov	r4, r1
 2349 0786 07F57670 		add	r0, r7, #984
 2350 078a CDE90034 		strd	r3, [sp]
 2351 078e A24A     		ldr	r2, .L71+24
 2352 0790 1421     		movs	r1, #20
 2353 0792 FFF7FEFF 		bl	snprintf
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 59


 663:notoriOS.c    ****             pushData("sontek_Q",value,timeStamp);
 2354              		.loc 1 663 0
 2355 0796 07F57673 		add	r3, r7, #984
 2356 079a D7F80C24 		ldr	r2, [r7, #1036]
 2357 079e 1946     		mov	r1, r3
 2358 07a0 A048     		ldr	r0, .L71+36
 2359 07a2 FFF7FEFF 		bl	pushData
 664:notoriOS.c    ****             //velocity - 2 data1
 665:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data1[2]);
 2360              		.loc 1 665 0
 2361 07a6 07F5C873 		add	r3, r7, #400
 2362 07aa 5B6A     		ldr	r3, [r3, #36]	@ float
 2363 07ac 1846     		mov	r0, r3
 2364 07ae FFF7FEFF 		bl	__aeabi_f2d
 2365 07b2 0346     		mov	r3, r0
 2366 07b4 0C46     		mov	r4, r1
 2367 07b6 07F57670 		add	r0, r7, #984
 2368 07ba CDE90034 		strd	r3, [sp]
 2369 07be 964A     		ldr	r2, .L71+24
 2370 07c0 1421     		movs	r1, #20
 2371 07c2 FFF7FEFF 		bl	snprintf
 666:notoriOS.c    ****             pushData("sontek_Vb",value,timeStamp);
 2372              		.loc 1 666 0
 2373 07c6 07F57673 		add	r3, r7, #984
 2374 07ca D7F80C24 		ldr	r2, [r7, #1036]
 2375 07ce 1946     		mov	r1, r3
 2376 07d0 9548     		ldr	r0, .L71+40
 2377 07d2 FFF7FEFF 		bl	pushData
 667:notoriOS.c    ****             //average SNR - 3 data1
 668:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data1[3]);
 2378              		.loc 1 668 0
 2379 07d6 07F5C873 		add	r3, r7, #400
 2380 07da 9B6A     		ldr	r3, [r3, #40]	@ float
 2381 07dc 1846     		mov	r0, r3
 2382 07de FFF7FEFF 		bl	__aeabi_f2d
 2383 07e2 0346     		mov	r3, r0
 2384 07e4 0C46     		mov	r4, r1
 2385 07e6 07F57670 		add	r0, r7, #984
 2386 07ea CDE90034 		strd	r3, [sp]
 2387 07ee 8A4A     		ldr	r2, .L71+24
 2388 07f0 1421     		movs	r1, #20
 2389 07f2 FFF7FEFF 		bl	snprintf
 669:notoriOS.c    ****             pushData("sontek_avg_SNR",value,timeStamp);
 2390              		.loc 1 669 0
 2391 07f6 07F57673 		add	r3, r7, #984
 2392 07fa D7F80C24 		ldr	r2, [r7, #1036]
 2393 07fe 1946     		mov	r1, r3
 2394 0800 8A48     		ldr	r0, .L71+44
 2395 0802 FFF7FEFF 		bl	pushData
 670:notoriOS.c    **** //            //pitch - 14
 671:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.values[14]);
 672:notoriOS.c    **** //            pushData("sontek_pitch",value,timeStamp);
 673:notoriOS.c    **** //            //roll - 15
 674:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.values[15]);
 675:notoriOS.c    **** //            pushData("sontek_roll",value,timeStamp);
 676:notoriOS.c    ****             //Amp1 - 0 data3
 677:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data3[0]);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 60


 2396              		.loc 1 677 0
 2397 0806 07F5C873 		add	r3, r7, #400
 2398 080a 9B6C     		ldr	r3, [r3, #72]	@ float
 2399 080c 1846     		mov	r0, r3
 2400 080e FFF7FEFF 		bl	__aeabi_f2d
 2401 0812 0346     		mov	r3, r0
 2402 0814 0C46     		mov	r4, r1
 2403 0816 07F57670 		add	r0, r7, #984
 2404 081a CDE90034 		strd	r3, [sp]
 2405 081e 7E4A     		ldr	r2, .L71+24
 2406 0820 1421     		movs	r1, #20
 2407 0822 FFF7FEFF 		bl	snprintf
 678:notoriOS.c    ****             pushData("sontek_amp1",value,timeStamp);
 2408              		.loc 1 678 0
 2409 0826 07F57673 		add	r3, r7, #984
 2410 082a D7F80C24 		ldr	r2, [r7, #1036]
 2411 082e 1946     		mov	r1, r3
 2412 0830 7F48     		ldr	r0, .L71+48
 2413 0832 FFF7FEFF 		bl	pushData
 679:notoriOS.c    ****             //Amp2 - 1 data3
 680:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data3[1]);
 2414              		.loc 1 680 0
 2415 0836 07F5C873 		add	r3, r7, #400
 2416 083a DB6C     		ldr	r3, [r3, #76]	@ float
 2417 083c 1846     		mov	r0, r3
 2418 083e FFF7FEFF 		bl	__aeabi_f2d
 2419 0842 0346     		mov	r3, r0
 2420 0844 0C46     		mov	r4, r1
 2421 0846 07F57670 		add	r0, r7, #984
 2422 084a CDE90034 		strd	r3, [sp]
 2423 084e 724A     		ldr	r2, .L71+24
 2424 0850 1421     		movs	r1, #20
 2425 0852 FFF7FEFF 		bl	snprintf
 681:notoriOS.c    ****             pushData("sontek_amp2",value,timeStamp);
 2426              		.loc 1 681 0
 2427 0856 07F57673 		add	r3, r7, #984
 2428 085a D7F80C24 		ldr	r2, [r7, #1036]
 2429 085e 1946     		mov	r1, r3
 2430 0860 7448     		ldr	r0, .L71+52
 2431 0862 FFF7FEFF 		bl	pushData
 682:notoriOS.c    ****             //Amp3 - 2 data3
 683:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data3[2]);
 2432              		.loc 1 683 0
 2433 0866 07F5C873 		add	r3, r7, #400
 2434 086a 1B6D     		ldr	r3, [r3, #80]	@ float
 2435 086c 1846     		mov	r0, r3
 2436 086e FFF7FEFF 		bl	__aeabi_f2d
 2437 0872 0346     		mov	r3, r0
 2438 0874 0C46     		mov	r4, r1
 2439 0876 07F57670 		add	r0, r7, #984
 2440 087a CDE90034 		strd	r3, [sp]
 2441 087e 664A     		ldr	r2, .L71+24
 2442 0880 1421     		movs	r1, #20
 2443 0882 FFF7FEFF 		bl	snprintf
 684:notoriOS.c    ****             pushData("sontek_amp3",value,timeStamp);
 2444              		.loc 1 684 0
 2445 0886 07F57673 		add	r3, r7, #984
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 61


 2446 088a D7F80C24 		ldr	r2, [r7, #1036]
 2447 088e 1946     		mov	r1, r3
 2448 0890 6948     		ldr	r0, .L71+56
 2449 0892 FFF7FEFF 		bl	pushData
 685:notoriOS.c    ****             //snr1 - 3 data3
 686:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data3[3]);
 2450              		.loc 1 686 0
 2451 0896 07F5C873 		add	r3, r7, #400
 2452 089a 5B6D     		ldr	r3, [r3, #84]	@ float
 2453 089c 1846     		mov	r0, r3
 2454 089e FFF7FEFF 		bl	__aeabi_f2d
 2455 08a2 0346     		mov	r3, r0
 2456 08a4 0C46     		mov	r4, r1
 2457 08a6 07F57670 		add	r0, r7, #984
 2458 08aa CDE90034 		strd	r3, [sp]
 2459 08ae 5A4A     		ldr	r2, .L71+24
 2460 08b0 1421     		movs	r1, #20
 2461 08b2 FFF7FEFF 		bl	snprintf
 687:notoriOS.c    ****             pushData("sontek_snr1",value,timeStamp);
 2462              		.loc 1 687 0
 2463 08b6 07F57673 		add	r3, r7, #984
 2464 08ba D7F80C24 		ldr	r2, [r7, #1036]
 2465 08be 1946     		mov	r1, r3
 2466 08c0 5E48     		ldr	r0, .L71+60
 2467 08c2 FFF7FEFF 		bl	pushData
 688:notoriOS.c    ****             //snr2 - 4 data3
 689:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data3[4]);
 2468              		.loc 1 689 0
 2469 08c6 07F5C873 		add	r3, r7, #400
 2470 08ca 9B6D     		ldr	r3, [r3, #88]	@ float
 2471 08cc 1846     		mov	r0, r3
 2472 08ce FFF7FEFF 		bl	__aeabi_f2d
 2473 08d2 0346     		mov	r3, r0
 2474 08d4 0C46     		mov	r4, r1
 2475 08d6 07F57670 		add	r0, r7, #984
 2476 08da CDE90034 		strd	r3, [sp]
 2477 08de 4E4A     		ldr	r2, .L71+24
 2478 08e0 1421     		movs	r1, #20
 2479 08e2 FFF7FEFF 		bl	snprintf
 690:notoriOS.c    ****             pushData("sontek_snr2",value,timeStamp);
 2480              		.loc 1 690 0
 2481 08e6 07F57673 		add	r3, r7, #984
 2482 08ea D7F80C24 		ldr	r2, [r7, #1036]
 2483 08ee 1946     		mov	r1, r3
 2484 08f0 5348     		ldr	r0, .L71+64
 2485 08f2 FFF7FEFF 		bl	pushData
 691:notoriOS.c    ****             //snr3 - 5 data3
 692:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data3[5]);
 2486              		.loc 1 692 0
 2487 08f6 07F5C873 		add	r3, r7, #400
 2488 08fa DB6D     		ldr	r3, [r3, #92]	@ float
 2489 08fc 1846     		mov	r0, r3
 2490 08fe FFF7FEFF 		bl	__aeabi_f2d
 2491 0902 0346     		mov	r3, r0
 2492 0904 0C46     		mov	r4, r1
 2493 0906 07F57670 		add	r0, r7, #984
 2494 090a CDE90034 		strd	r3, [sp]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 62


 2495 090e 424A     		ldr	r2, .L71+24
 2496 0910 1421     		movs	r1, #20
 2497 0912 FFF7FEFF 		bl	snprintf
 693:notoriOS.c    ****             pushData("sontek_snr3",value,timeStamp); 
 2498              		.loc 1 693 0
 2499 0916 07F57673 		add	r3, r7, #984
 2500 091a D7F80C24 		ldr	r2, [r7, #1036]
 2501 091e 1946     		mov	r1, r3
 2502 0920 4848     		ldr	r0, .L71+68
 2503 0922 FFF7FEFF 		bl	pushData
 694:notoriOS.c    ****             
 695:notoriOS.c    ****             //Amp4 - 0 data5
 696:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data5[0]);
 2504              		.loc 1 696 0
 2505 0926 07F5C873 		add	r3, r7, #400
 2506 092a 9B6F     		ldr	r3, [r3, #120]	@ float
 2507 092c 1846     		mov	r0, r3
 2508 092e FFF7FEFF 		bl	__aeabi_f2d
 2509 0932 0346     		mov	r3, r0
 2510 0934 0C46     		mov	r4, r1
 2511 0936 07F57670 		add	r0, r7, #984
 2512 093a CDE90034 		strd	r3, [sp]
 2513 093e 364A     		ldr	r2, .L71+24
 2514 0940 1421     		movs	r1, #20
 2515 0942 FFF7FEFF 		bl	snprintf
 697:notoriOS.c    ****             pushData("sontek_amp4",value,timeStamp);
 2516              		.loc 1 697 0
 2517 0946 07F57673 		add	r3, r7, #984
 2518 094a D7F80C24 		ldr	r2, [r7, #1036]
 2519 094e 1946     		mov	r1, r3
 2520 0950 3D48     		ldr	r0, .L71+72
 2521 0952 FFF7FEFF 		bl	pushData
 698:notoriOS.c    ****             //Amp5 - 1 data5
 699:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data5[1]);
 2522              		.loc 1 699 0
 2523 0956 07F5C873 		add	r3, r7, #400
 2524 095a DB6F     		ldr	r3, [r3, #124]	@ float
 2525 095c 1846     		mov	r0, r3
 2526 095e FFF7FEFF 		bl	__aeabi_f2d
 2527 0962 0346     		mov	r3, r0
 2528 0964 0C46     		mov	r4, r1
 2529 0966 07F57670 		add	r0, r7, #984
 2530 096a CDE90034 		strd	r3, [sp]
 2531 096e 2A4A     		ldr	r2, .L71+24
 2532 0970 1421     		movs	r1, #20
 2533 0972 FFF7FEFF 		bl	snprintf
 700:notoriOS.c    ****             pushData("sontek_amp5",value,timeStamp);
 2534              		.loc 1 700 0
 2535 0976 07F57673 		add	r3, r7, #984
 2536 097a D7F80C24 		ldr	r2, [r7, #1036]
 2537 097e 1946     		mov	r1, r3
 2538 0980 3248     		ldr	r0, .L71+76
 2539 0982 FFF7FEFF 		bl	pushData
 701:notoriOS.c    ****             //Amp6 - 2 data5
 702:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data5[2]);
 2540              		.loc 1 702 0
 2541 0986 07F5C873 		add	r3, r7, #400
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 63


 2542 098a D3F88030 		ldr	r3, [r3, #128]	@ float
 2543 098e 1846     		mov	r0, r3
 2544 0990 FFF7FEFF 		bl	__aeabi_f2d
 2545 0994 0346     		mov	r3, r0
 2546 0996 0C46     		mov	r4, r1
 2547 0998 07F57670 		add	r0, r7, #984
 2548 099c CDE90034 		strd	r3, [sp]
 2549 09a0 1D4A     		ldr	r2, .L71+24
 2550 09a2 1421     		movs	r1, #20
 2551 09a4 FFF7FEFF 		bl	snprintf
 703:notoriOS.c    ****             pushData("sontek_amp6",value,timeStamp);
 2552              		.loc 1 703 0
 2553 09a8 07F57673 		add	r3, r7, #984
 2554 09ac D7F80C24 		ldr	r2, [r7, #1036]
 2555 09b0 1946     		mov	r1, r3
 2556 09b2 2748     		ldr	r0, .L71+80
 2557 09b4 FFF7FEFF 		bl	pushData
 704:notoriOS.c    ****             //snr4 - 3 data5
 705:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data5[3]);
 2558              		.loc 1 705 0
 2559 09b8 07F5C873 		add	r3, r7, #400
 2560 09bc D3F88430 		ldr	r3, [r3, #132]	@ float
 2561 09c0 1846     		mov	r0, r3
 2562 09c2 FFF7FEFF 		bl	__aeabi_f2d
 2563 09c6 0346     		mov	r3, r0
 2564 09c8 0C46     		mov	r4, r1
 2565 09ca 07F57670 		add	r0, r7, #984
 2566 09ce CDE90034 		strd	r3, [sp]
 2567 09d2 114A     		ldr	r2, .L71+24
 2568 09d4 1421     		movs	r1, #20
 2569 09d6 FFF7FEFF 		bl	snprintf
 706:notoriOS.c    ****             pushData("sontek_snr4",value,timeStamp);
 2570              		.loc 1 706 0
 2571 09da 07F57673 		add	r3, r7, #984
 2572 09de D7F80C24 		ldr	r2, [r7, #1036]
 2573 09e2 1946     		mov	r1, r3
 2574 09e4 1B48     		ldr	r0, .L71+84
 2575 09e6 FFF7FEFF 		bl	pushData
 707:notoriOS.c    ****             //snr5 - 4 data5
 708:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data5[4]);
 2576              		.loc 1 708 0
 2577 09ea 07F5C873 		add	r3, r7, #400
 2578 09ee D3F88830 		ldr	r3, [r3, #136]	@ float
 2579 09f2 1846     		mov	r0, r3
 2580 09f4 FFF7FEFF 		bl	__aeabi_f2d
 2581 09f8 0346     		mov	r3, r0
 2582 09fa 0C46     		mov	r4, r1
 2583 09fc 2CE0     		b	.L72
 2584              	.L73:
 2585 09fe 00BF     		.align	2
 2586              	.L71:
 2587 0a00 E0020000 		.word	.LC42
 2588 0a04 80040000 		.word	.LC43
 2589 0a08 98020000 		.word	.LC38
 2590 0a0c 00000000 		.word	Data_fileName
 2591 0a10 8C040000 		.word	.LC44
 2592 0a14 98040000 		.word	.LC45
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 64


 2593 0a18 9C040000 		.word	.LC46
 2594 0a1c A4040000 		.word	.LC47
 2595 0a20 B0040000 		.word	.LC48
 2596 0a24 C0040000 		.word	.LC49
 2597 0a28 CC040000 		.word	.LC50
 2598 0a2c D8040000 		.word	.LC51
 2599 0a30 E8040000 		.word	.LC52
 2600 0a34 F4040000 		.word	.LC53
 2601 0a38 00050000 		.word	.LC54
 2602 0a3c 0C050000 		.word	.LC55
 2603 0a40 18050000 		.word	.LC56
 2604 0a44 24050000 		.word	.LC57
 2605 0a48 30050000 		.word	.LC58
 2606 0a4c 3C050000 		.word	.LC59
 2607 0a50 48050000 		.word	.LC60
 2608 0a54 54050000 		.word	.LC61
 2609              	.L72:
 2610 0a58 07F57670 		add	r0, r7, #984
 2611 0a5c CDE90034 		strd	r3, [sp]
 2612 0a60 764A     		ldr	r2, .L74
 2613 0a62 1421     		movs	r1, #20
 2614 0a64 FFF7FEFF 		bl	snprintf
 709:notoriOS.c    ****             pushData("sontek_snr5",value,timeStamp);
 2615              		.loc 1 709 0
 2616 0a68 07F57673 		add	r3, r7, #984
 2617 0a6c D7F80C24 		ldr	r2, [r7, #1036]
 2618 0a70 1946     		mov	r1, r3
 2619 0a72 7348     		ldr	r0, .L74+4
 2620 0a74 FFF7FEFF 		bl	pushData
 710:notoriOS.c    ****             //snr6 - 5 data5
 711:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data5[5]);
 2621              		.loc 1 711 0
 2622 0a78 07F5C873 		add	r3, r7, #400
 2623 0a7c D3F88C30 		ldr	r3, [r3, #140]	@ float
 2624 0a80 1846     		mov	r0, r3
 2625 0a82 FFF7FEFF 		bl	__aeabi_f2d
 2626 0a86 0346     		mov	r3, r0
 2627 0a88 0C46     		mov	r4, r1
 2628 0a8a 07F57670 		add	r0, r7, #984
 2629 0a8e CDE90034 		strd	r3, [sp]
 2630 0a92 6A4A     		ldr	r2, .L74
 2631 0a94 1421     		movs	r1, #20
 2632 0a96 FFF7FEFF 		bl	snprintf
 712:notoriOS.c    ****             pushData("sontek_snr6",value,timeStamp);
 2633              		.loc 1 712 0
 2634 0a9a 07F57673 		add	r3, r7, #984
 2635 0a9e D7F80C24 		ldr	r2, [r7, #1036]
 2636 0aa2 1946     		mov	r1, r3
 2637 0aa4 6748     		ldr	r0, .L74+8
 2638 0aa6 FFF7FEFF 		bl	pushData
 713:notoriOS.c    ****             
 714:notoriOS.c    ****             //Amp7 - 0 data7
 715:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data7[0]);
 2639              		.loc 1 715 0
 2640 0aaa 07F5C873 		add	r3, r7, #400
 2641 0aae D3F8A830 		ldr	r3, [r3, #168]	@ float
 2642 0ab2 1846     		mov	r0, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 65


 2643 0ab4 FFF7FEFF 		bl	__aeabi_f2d
 2644 0ab8 0346     		mov	r3, r0
 2645 0aba 0C46     		mov	r4, r1
 2646 0abc 07F57670 		add	r0, r7, #984
 2647 0ac0 CDE90034 		strd	r3, [sp]
 2648 0ac4 5D4A     		ldr	r2, .L74
 2649 0ac6 1421     		movs	r1, #20
 2650 0ac8 FFF7FEFF 		bl	snprintf
 716:notoriOS.c    ****             pushData("sontek_amp7",value,timeStamp);
 2651              		.loc 1 716 0
 2652 0acc 07F57673 		add	r3, r7, #984
 2653 0ad0 D7F80C24 		ldr	r2, [r7, #1036]
 2654 0ad4 1946     		mov	r1, r3
 2655 0ad6 5C48     		ldr	r0, .L74+12
 2656 0ad8 FFF7FEFF 		bl	pushData
 717:notoriOS.c    ****             //Amp8 - 1 data7
 718:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data7[1]);
 2657              		.loc 1 718 0
 2658 0adc 07F5C873 		add	r3, r7, #400
 2659 0ae0 D3F8AC30 		ldr	r3, [r3, #172]	@ float
 2660 0ae4 1846     		mov	r0, r3
 2661 0ae6 FFF7FEFF 		bl	__aeabi_f2d
 2662 0aea 0346     		mov	r3, r0
 2663 0aec 0C46     		mov	r4, r1
 2664 0aee 07F57670 		add	r0, r7, #984
 2665 0af2 CDE90034 		strd	r3, [sp]
 2666 0af6 514A     		ldr	r2, .L74
 2667 0af8 1421     		movs	r1, #20
 2668 0afa FFF7FEFF 		bl	snprintf
 719:notoriOS.c    ****             pushData("sontek_amp8",value,timeStamp);
 2669              		.loc 1 719 0
 2670 0afe 07F57673 		add	r3, r7, #984
 2671 0b02 D7F80C24 		ldr	r2, [r7, #1036]
 2672 0b06 1946     		mov	r1, r3
 2673 0b08 5048     		ldr	r0, .L74+16
 2674 0b0a FFF7FEFF 		bl	pushData
 720:notoriOS.c    ****             //Amp9 - 2 data7
 721:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data7[2]);
 2675              		.loc 1 721 0
 2676 0b0e 07F5C873 		add	r3, r7, #400
 2677 0b12 D3F8B030 		ldr	r3, [r3, #176]	@ float
 2678 0b16 1846     		mov	r0, r3
 2679 0b18 FFF7FEFF 		bl	__aeabi_f2d
 2680 0b1c 0346     		mov	r3, r0
 2681 0b1e 0C46     		mov	r4, r1
 2682 0b20 07F57670 		add	r0, r7, #984
 2683 0b24 CDE90034 		strd	r3, [sp]
 2684 0b28 444A     		ldr	r2, .L74
 2685 0b2a 1421     		movs	r1, #20
 2686 0b2c FFF7FEFF 		bl	snprintf
 722:notoriOS.c    ****             pushData("sontek_amp9",value,timeStamp);
 2687              		.loc 1 722 0
 2688 0b30 07F57673 		add	r3, r7, #984
 2689 0b34 D7F80C24 		ldr	r2, [r7, #1036]
 2690 0b38 1946     		mov	r1, r3
 2691 0b3a 4548     		ldr	r0, .L74+20
 2692 0b3c FFF7FEFF 		bl	pushData
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 66


 723:notoriOS.c    ****             //snr7 - 3 data7
 724:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data7[3]);
 2693              		.loc 1 724 0
 2694 0b40 07F5C873 		add	r3, r7, #400
 2695 0b44 D3F8B430 		ldr	r3, [r3, #180]	@ float
 2696 0b48 1846     		mov	r0, r3
 2697 0b4a FFF7FEFF 		bl	__aeabi_f2d
 2698 0b4e 0346     		mov	r3, r0
 2699 0b50 0C46     		mov	r4, r1
 2700 0b52 07F57670 		add	r0, r7, #984
 2701 0b56 CDE90034 		strd	r3, [sp]
 2702 0b5a 384A     		ldr	r2, .L74
 2703 0b5c 1421     		movs	r1, #20
 2704 0b5e FFF7FEFF 		bl	snprintf
 725:notoriOS.c    ****             pushData("sontek_snr7",value,timeStamp);
 2705              		.loc 1 725 0
 2706 0b62 07F57673 		add	r3, r7, #984
 2707 0b66 D7F80C24 		ldr	r2, [r7, #1036]
 2708 0b6a 1946     		mov	r1, r3
 2709 0b6c 3948     		ldr	r0, .L74+24
 2710 0b6e FFF7FEFF 		bl	pushData
 726:notoriOS.c    ****             //snr8 - 4 data7
 727:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data7[4]);
 2711              		.loc 1 727 0
 2712 0b72 07F5C873 		add	r3, r7, #400
 2713 0b76 D3F8B830 		ldr	r3, [r3, #184]	@ float
 2714 0b7a 1846     		mov	r0, r3
 2715 0b7c FFF7FEFF 		bl	__aeabi_f2d
 2716 0b80 0346     		mov	r3, r0
 2717 0b82 0C46     		mov	r4, r1
 2718 0b84 07F57670 		add	r0, r7, #984
 2719 0b88 CDE90034 		strd	r3, [sp]
 2720 0b8c 2B4A     		ldr	r2, .L74
 2721 0b8e 1421     		movs	r1, #20
 2722 0b90 FFF7FEFF 		bl	snprintf
 728:notoriOS.c    ****             pushData("sontek_snr8",value,timeStamp);
 2723              		.loc 1 728 0
 2724 0b94 07F57673 		add	r3, r7, #984
 2725 0b98 D7F80C24 		ldr	r2, [r7, #1036]
 2726 0b9c 1946     		mov	r1, r3
 2727 0b9e 2E48     		ldr	r0, .L74+28
 2728 0ba0 FFF7FEFF 		bl	pushData
 729:notoriOS.c    ****             //snr9 - 5 data7
 730:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data7[5]);
 2729              		.loc 1 730 0
 2730 0ba4 07F5C873 		add	r3, r7, #400
 2731 0ba8 D3F8BC30 		ldr	r3, [r3, #188]	@ float
 2732 0bac 1846     		mov	r0, r3
 2733 0bae FFF7FEFF 		bl	__aeabi_f2d
 2734 0bb2 0346     		mov	r3, r0
 2735 0bb4 0C46     		mov	r4, r1
 2736 0bb6 07F57670 		add	r0, r7, #984
 2737 0bba CDE90034 		strd	r3, [sp]
 2738 0bbe 1F4A     		ldr	r2, .L74
 2739 0bc0 1421     		movs	r1, #20
 2740 0bc2 FFF7FEFF 		bl	snprintf
 731:notoriOS.c    ****             pushData("sontek_snr9",value,timeStamp);           
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 67


 2741              		.loc 1 731 0
 2742 0bc6 07F57673 		add	r3, r7, #984
 2743 0bca D7F80C24 		ldr	r2, [r7, #1036]
 2744 0bce 1946     		mov	r1, r3
 2745 0bd0 2248     		ldr	r0, .L74+32
 2746 0bd2 FFF7FEFF 		bl	pushData
 732:notoriOS.c    ****             
 733:notoriOS.c    ****             //Amp10 - 2 data8
 734:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data8[2]);
 2747              		.loc 1 734 0
 2748 0bd6 07F5C873 		add	r3, r7, #400
 2749 0bda D3F8C830 		ldr	r3, [r3, #200]	@ float
 2750 0bde 1846     		mov	r0, r3
 2751 0be0 FFF7FEFF 		bl	__aeabi_f2d
 2752 0be4 0346     		mov	r3, r0
 2753 0be6 0C46     		mov	r4, r1
 2754 0be8 07F57670 		add	r0, r7, #984
 2755 0bec CDE90034 		strd	r3, [sp]
 2756 0bf0 124A     		ldr	r2, .L74
 2757 0bf2 1421     		movs	r1, #20
 2758 0bf4 FFF7FEFF 		bl	snprintf
 735:notoriOS.c    ****             pushData("sontek_amp10",value,timeStamp);
 2759              		.loc 1 735 0
 2760 0bf8 07F57673 		add	r3, r7, #984
 2761 0bfc D7F80C24 		ldr	r2, [r7, #1036]
 2762 0c00 1946     		mov	r1, r3
 2763 0c02 1748     		ldr	r0, .L74+36
 2764 0c04 FFF7FEFF 		bl	pushData
 736:notoriOS.c    ****             //snr10 - 3 data8
 737:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.data8[3]);
 2765              		.loc 1 737 0
 2766 0c08 07F5C873 		add	r3, r7, #400
 2767 0c0c D3F8CC30 		ldr	r3, [r3, #204]	@ float
 2768 0c10 1846     		mov	r0, r3
 2769 0c12 FFF7FEFF 		bl	__aeabi_f2d
 2770 0c16 0346     		mov	r3, r0
 2771 0c18 0C46     		mov	r4, r1
 2772 0c1a 07F57670 		add	r0, r7, #984
 2773 0c1e CDE90034 		strd	r3, [sp]
 2774 0c22 064A     		ldr	r2, .L74
 2775 0c24 1421     		movs	r1, #20
 2776 0c26 FFF7FEFF 		bl	snprintf
 738:notoriOS.c    ****             pushData("sontek_snr10",value,timeStamp);
 2777              		.loc 1 738 0
 2778 0c2a 07F57673 		add	r3, r7, #984
 2779 0c2e D7F80C24 		ldr	r2, [r7, #1036]
 2780 0c32 1946     		mov	r1, r3
 2781 0c34 0B48     		ldr	r0, .L74+40
 2782 0c36 FFF7FEFF 		bl	pushData
 2783 0c3a 45E0     		b	.L59
 2784              	.L75:
 2785              		.align	2
 2786              	.L74:
 2787 0c3c 9C040000 		.word	.LC46
 2788 0c40 60050000 		.word	.LC62
 2789 0c44 6C050000 		.word	.LC63
 2790 0c48 78050000 		.word	.LC64
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 68


 2791 0c4c 84050000 		.word	.LC65
 2792 0c50 90050000 		.word	.LC66
 2793 0c54 9C050000 		.word	.LC67
 2794 0c58 A8050000 		.word	.LC68
 2795 0c5c B4050000 		.word	.LC69
 2796 0c60 C0050000 		.word	.LC70
 2797 0c64 D0050000 		.word	.LC71
 2798              	.L60:
 739:notoriOS.c    ****             
 740:notoriOS.c    **** //            //SNR2 -24
 741:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.values[24]);
 742:notoriOS.c    **** //            pushData("sontek_SNR2",value,timeStamp);
 743:notoriOS.c    **** //            //SNR3 - 25
 744:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.values[25]);
 745:notoriOS.c    **** //            pushData("sontek_SNR3",value,timeStamp);
 746:notoriOS.c    **** //            //SNR4 - 26
 747:notoriOS.c    **** //            snprintf(value,sizeof(value),"%.2f",m_sontek.values[26]);
 748:notoriOS.c    **** //            pushData("sontek_SNR4",value,timeStamp);
 749:notoriOS.c    **** 
 750:notoriOS.c    ****         }else{
 751:notoriOS.c    ****             //publish error code if no valid readings given
 752:notoriOS.c    ****             snprintf(value,sizeof(value),"%c",m_sontek.flag);
 2799              		.loc 1 752 0
 2800 0c68 07F5C873 		add	r3, r7, #400
 2801 0c6c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2802 0c6e 07F57670 		add	r0, r7, #984
 2803 0c72 804A     		ldr	r2, .L76
 2804 0c74 1421     		movs	r1, #20
 2805 0c76 FFF7FEFF 		bl	snprintf
 753:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Sontek. Error: %c.", val
 2806              		.loc 1 753 0
 2807 0c7a 07F57673 		add	r3, r7, #984
 2808 0c7e 1A46     		mov	r2, r3
 2809 0c80 7D49     		ldr	r1, .L76+4
 2810 0c82 0220     		movs	r0, #2
 2811 0c84 FFF7FEFF 		bl	printNotif
 754:notoriOS.c    ****             pushData("sontek_flag",value,timeStamp);
 2812              		.loc 1 754 0
 2813 0c88 07F57673 		add	r3, r7, #984
 2814 0c8c D7F80C24 		ldr	r2, [r7, #1036]
 2815 0c90 1946     		mov	r1, r3
 2816 0c92 7A48     		ldr	r0, .L76+8
 2817 0c94 FFF7FEFF 		bl	pushData
 755:notoriOS.c    ****                 
 756:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 2818              		.loc 1 756 0
 2819 0c98 07F57B73 		add	r3, r7, #1004
 2820 0c9c 1A46     		mov	r2, r3
 2821 0c9e 7849     		ldr	r1, .L76+12
 2822 0ca0 7848     		ldr	r0, .L76+16
 2823 0ca2 FFF7FEFF 		bl	SD_write
 757:notoriOS.c    ****             SD_write(Data_fileName, "a+", " sontek error: ");
 2824              		.loc 1 757 0
 2825 0ca6 784A     		ldr	r2, .L76+20
 2826 0ca8 7549     		ldr	r1, .L76+12
 2827 0caa 7648     		ldr	r0, .L76+16
 2828 0cac FFF7FEFF 		bl	SD_write
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 69


 758:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 2829              		.loc 1 758 0
 2830 0cb0 07F57673 		add	r3, r7, #984
 2831 0cb4 1A46     		mov	r2, r3
 2832 0cb6 7249     		ldr	r1, .L76+12
 2833 0cb8 7248     		ldr	r0, .L76+16
 2834 0cba FFF7FEFF 		bl	SD_write
 759:notoriOS.c    ****             SD_write(Data_fileName, "a+", "\n");
 2835              		.loc 1 759 0
 2836 0cbe 734A     		ldr	r2, .L76+24
 2837 0cc0 6F49     		ldr	r1, .L76+12
 2838 0cc2 7048     		ldr	r0, .L76+16
 2839 0cc4 FFF7FEFF 		bl	SD_write
 2840              	.L59:
 2841              	.LBE10:
 760:notoriOS.c    ****         }
 761:notoriOS.c    ****     }
 762:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 763:notoriOS.c    ****     voltage_t m_voltage;
 764:notoriOS.c    ****     
 765:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 766:notoriOS.c    ****     m_voltage = voltage_take_readings();
 2842              		.loc 1 766 0
 2843 0cc8 07F52673 		add	r3, r7, #664
 2844 0ccc 1846     		mov	r0, r3
 2845 0cce FFF7FEFF 		bl	voltage_take_readings
 767:notoriOS.c    ****     
 768:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 769:notoriOS.c    ****     if(m_voltage.valid){
 2846              		.loc 1 769 0
 2847 0cd2 07F52673 		add	r3, r7, #664
 2848 0cd6 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2849 0cd8 002B     		cmp	r3, #0
 2850 0cda 00F0BF80 		beq	.L62
 770:notoriOS.c    ****         // battery voltage data
 771:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 2851              		.loc 1 771 0
 2852 0cde 07F52673 		add	r3, r7, #664
 2853 0ce2 1B68     		ldr	r3, [r3]	@ float
 2854 0ce4 1846     		mov	r0, r3
 2855 0ce6 FFF7FEFF 		bl	__aeabi_f2d
 2856 0cea 0346     		mov	r3, r0
 2857 0cec 0C46     		mov	r4, r1
 2858 0cee 07F57670 		add	r0, r7, #984
 2859 0cf2 CDE90034 		strd	r3, [sp]
 2860 0cf6 664A     		ldr	r2, .L76+28
 2861 0cf8 1421     		movs	r1, #20
 2862 0cfa FFF7FEFF 		bl	snprintf
 772:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 2863              		.loc 1 772 0
 2864 0cfe 07F57673 		add	r3, r7, #984
 2865 0d02 1A46     		mov	r2, r3
 2866 0d04 6349     		ldr	r1, .L76+32
 2867 0d06 0020     		movs	r0, #0
 2868 0d08 FFF7FEFF 		bl	printNotif
 773:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
 2869              		.loc 1 773 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 70


 2870 0d0c 07F57673 		add	r3, r7, #984
 2871 0d10 D7F80C24 		ldr	r2, [r7, #1036]
 2872 0d14 1946     		mov	r1, r3
 2873 0d16 6048     		ldr	r0, .L76+36
 2874 0d18 FFF7FEFF 		bl	pushData
 774:notoriOS.c    ****         
 775:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 776:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 2875              		.loc 1 776 0
 2876 0d1c 5F4A     		ldr	r2, .L76+40
 2877 0d1e 5849     		ldr	r1, .L76+12
 2878 0d20 5848     		ldr	r0, .L76+16
 2879 0d22 FFF7FEFF 		bl	SD_write
 777:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 2880              		.loc 1 777 0
 2881 0d26 07F57B73 		add	r3, r7, #1004
 2882 0d2a 1A46     		mov	r2, r3
 2883 0d2c 5449     		ldr	r1, .L76+12
 2884 0d2e 5548     		ldr	r0, .L76+16
 2885 0d30 FFF7FEFF 		bl	SD_write
 778:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 2886              		.loc 1 778 0
 2887 0d34 5A4A     		ldr	r2, .L76+44
 2888 0d36 5249     		ldr	r1, .L76+12
 2889 0d38 5248     		ldr	r0, .L76+16
 2890 0d3a FFF7FEFF 		bl	SD_write
 779:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 2891              		.loc 1 779 0
 2892 0d3e 07F57673 		add	r3, r7, #984
 2893 0d42 1A46     		mov	r2, r3
 2894 0d44 4E49     		ldr	r1, .L76+12
 2895 0d46 4F48     		ldr	r0, .L76+16
 2896 0d48 FFF7FEFF 		bl	SD_write
 780:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 2897              		.loc 1 780 0
 2898 0d4c 534A     		ldr	r2, .L76+40
 2899 0d4e 4C49     		ldr	r1, .L76+12
 2900 0d50 4C48     		ldr	r0, .L76+16
 2901 0d52 FFF7FEFF 		bl	SD_write
 781:notoriOS.c    ****         
 782:notoriOS.c    ****         // If node type is green infrastructure node, take pressure transducer measurements
 783:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE){
 2902              		.loc 1 783 0
 2903 0d56 534B     		ldr	r3, .L76+48
 2904 0d58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2905 0d5a 012B     		cmp	r3, #1
 2906 0d5c 40F08280 		bne	.L64
 2907              	.LBB11:
 784:notoriOS.c    ****             
 785:notoriOS.c    ****             // pressure transducer voltage (V) data
 786:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 787:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 788:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 789:notoriOS.c    ****             
 790:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 791:notoriOS.c    ****             pressure_t m_pressure;
 792:notoriOS.c    ****             
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 71


 793:notoriOS.c    ****             // Make pressure transducer calculators for current (mA) and depth
 794:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 2908              		.loc 1 794 0
 2909 0d60 07F51D74 		add	r4, r7, #628
 2910 0d64 07F52673 		add	r3, r7, #664
 2911 0d68 6D46     		mov	r5, sp
 2912 0d6a 03F10C02 		add	r2, r3, #12
 2913 0d6e 92E80300 		ldmia	r2, {r0, r1}
 2914 0d72 85E80300 		stmia	r5, {r0, r1}
 2915 0d76 0ECB     		ldmia	r3, {r1, r2, r3}
 2916 0d78 2046     		mov	r0, r4
 2917 0d7a FFF7FEFF 		bl	pressure_calculations
 795:notoriOS.c    ****             
 796:notoriOS.c    ****             // pressure transducer current (mA) data
 797:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 2918              		.loc 1 797 0
 2919 0d7e 07F51D73 		add	r3, r7, #628
 2920 0d82 1B68     		ldr	r3, [r3]	@ float
 2921 0d84 1846     		mov	r0, r3
 2922 0d86 FFF7FEFF 		bl	__aeabi_f2d
 2923 0d8a 0346     		mov	r3, r0
 2924 0d8c 0C46     		mov	r4, r1
 2925 0d8e 07F57670 		add	r0, r7, #984
 2926 0d92 CDE90034 		strd	r3, [sp]
 2927 0d96 3E4A     		ldr	r2, .L76+28
 2928 0d98 1421     		movs	r1, #20
 2929 0d9a FFF7FEFF 		bl	snprintf
 798:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 2930              		.loc 1 798 0
 2931 0d9e 07F57673 		add	r3, r7, #984
 2932 0da2 1A46     		mov	r2, r3
 2933 0da4 4049     		ldr	r1, .L76+52
 2934 0da6 0020     		movs	r0, #0
 2935 0da8 FFF7FEFF 		bl	printNotif
 799:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 2936              		.loc 1 799 0
 2937 0dac 07F57673 		add	r3, r7, #984
 2938 0db0 D7F80C24 		ldr	r2, [r7, #1036]
 2939 0db4 1946     		mov	r1, r3
 2940 0db6 3D48     		ldr	r0, .L76+56
 2941 0db8 FFF7FEFF 		bl	pushData
 800:notoriOS.c    ****             
 801:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 802:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 2942              		.loc 1 802 0
 2943 0dbc 374A     		ldr	r2, .L76+40
 2944 0dbe 3049     		ldr	r1, .L76+12
 2945 0dc0 3048     		ldr	r0, .L76+16
 2946 0dc2 FFF7FEFF 		bl	SD_write
 803:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 2947              		.loc 1 803 0
 2948 0dc6 07F57B73 		add	r3, r7, #1004
 2949 0dca 1A46     		mov	r2, r3
 2950 0dcc 2C49     		ldr	r1, .L76+12
 2951 0dce 2D48     		ldr	r0, .L76+16
 2952 0dd0 FFF7FEFF 		bl	SD_write
 804:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 72


 2953              		.loc 1 804 0
 2954 0dd4 364A     		ldr	r2, .L76+60
 2955 0dd6 2A49     		ldr	r1, .L76+12
 2956 0dd8 2A48     		ldr	r0, .L76+16
 2957 0dda FFF7FEFF 		bl	SD_write
 805:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 2958              		.loc 1 805 0
 2959 0dde 07F57673 		add	r3, r7, #984
 2960 0de2 1A46     		mov	r2, r3
 2961 0de4 2649     		ldr	r1, .L76+12
 2962 0de6 2748     		ldr	r0, .L76+16
 2963 0de8 FFF7FEFF 		bl	SD_write
 806:notoriOS.c    ****             
 807:notoriOS.c    ****             // pressure transducer depth (ft) data
 808:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 2964              		.loc 1 808 0
 2965 0dec 07F51D73 		add	r3, r7, #628
 2966 0df0 5B68     		ldr	r3, [r3, #4]	@ float
 2967 0df2 1846     		mov	r0, r3
 2968 0df4 FFF7FEFF 		bl	__aeabi_f2d
 2969 0df8 0346     		mov	r3, r0
 2970 0dfa 0C46     		mov	r4, r1
 2971 0dfc 07F57670 		add	r0, r7, #984
 2972 0e00 CDE90034 		strd	r3, [sp]
 2973 0e04 224A     		ldr	r2, .L76+28
 2974 0e06 1421     		movs	r1, #20
 2975 0e08 FFF7FEFF 		bl	snprintf
 809:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 2976              		.loc 1 809 0
 2977 0e0c 07F57673 		add	r3, r7, #984
 2978 0e10 1A46     		mov	r2, r3
 2979 0e12 2849     		ldr	r1, .L76+64
 2980 0e14 0020     		movs	r0, #0
 2981 0e16 FFF7FEFF 		bl	printNotif
 810:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 2982              		.loc 1 810 0
 2983 0e1a 07F57673 		add	r3, r7, #984
 2984 0e1e D7F80C24 		ldr	r2, [r7, #1036]
 2985 0e22 1946     		mov	r1, r3
 2986 0e24 2448     		ldr	r0, .L76+68
 2987 0e26 FFF7FEFF 		bl	pushData
 811:notoriOS.c    ****             
 812:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 813:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 2988              		.loc 1 813 0
 2989 0e2a 1C4A     		ldr	r2, .L76+40
 2990 0e2c 1449     		ldr	r1, .L76+12
 2991 0e2e 1548     		ldr	r0, .L76+16
 2992 0e30 FFF7FEFF 		bl	SD_write
 814:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 2993              		.loc 1 814 0
 2994 0e34 07F57B73 		add	r3, r7, #1004
 2995 0e38 1A46     		mov	r2, r3
 2996 0e3a 1149     		ldr	r1, .L76+12
 2997 0e3c 1148     		ldr	r0, .L76+16
 2998 0e3e FFF7FEFF 		bl	SD_write
 815:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 73


 2999              		.loc 1 815 0
 3000 0e42 1E4A     		ldr	r2, .L76+72
 3001 0e44 0E49     		ldr	r1, .L76+12
 3002 0e46 0F48     		ldr	r0, .L76+16
 3003 0e48 FFF7FEFF 		bl	SD_write
 816:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 3004              		.loc 1 816 0
 3005 0e4c 07F57673 		add	r3, r7, #984
 3006 0e50 1A46     		mov	r2, r3
 3007 0e52 0B49     		ldr	r1, .L76+12
 3008 0e54 0B48     		ldr	r0, .L76+16
 3009 0e56 FFF7FEFF 		bl	SD_write
 3010 0e5a 03E0     		b	.L64
 3011              	.L62:
 3012              	.LBE11:
 817:notoriOS.c    ****         }    
 818:notoriOS.c    ****     }else{
 819:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 3013              		.loc 1 819 0
 3014 0e5c 1849     		ldr	r1, .L76+76
 3015 0e5e 0220     		movs	r0, #2
 3016 0e60 FFF7FEFF 		bl	printNotif
 3017              	.L64:
 820:notoriOS.c    ****     }
 821:notoriOS.c    ****     
 822:notoriOS.c    ****     return 0u;
 3018              		.loc 1 822 0
 3019 0e64 0023     		movs	r3, #0
 823:notoriOS.c    **** }
 3020              		.loc 1 823 0
 3021 0e66 1846     		mov	r0, r3
 3022 0e68 07F58267 		add	r7, r7, #1040
 3023              		.cfi_def_cfa_offset 32
 3024 0e6c BD46     		mov	sp, r7
 3025              		.cfi_def_cfa_register 13
 3026              		@ sp needed
 3027 0e6e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 3028              	.L77:
 3029 0e72 00BF     		.align	2
 3030              	.L76:
 3031 0e74 E0050000 		.word	.LC72
 3032 0e78 E4050000 		.word	.LC73
 3033 0e7c 1C060000 		.word	.LC74
 3034 0e80 98020000 		.word	.LC38
 3035 0e84 00000000 		.word	Data_fileName
 3036 0e88 28060000 		.word	.LC75
 3037 0e8c 98040000 		.word	.LC45
 3038 0e90 9C040000 		.word	.LC46
 3039 0e94 38060000 		.word	.LC76
 3040 0e98 44060000 		.word	.LC77
 3041 0e9c B0020000 		.word	.LC40
 3042 0ea0 4C060000 		.word	.LC78
 3043 0ea4 00000000 		.word	updatable_parameters
 3044 0ea8 54060000 		.word	.LC79
 3045 0eac 68060000 		.word	.LC80
 3046 0eb0 7C060000 		.word	.LC81
 3047 0eb4 90060000 		.word	.LC82
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 74


 3048 0eb8 A4060000 		.word	.LC83
 3049 0ebc B4060000 		.word	.LC84
 3050 0ec0 C8060000 		.word	.LC85
 3051              		.cfi_endproc
 3052              	.LFE76:
 3053              		.size	makeMeasurements, .-makeMeasurements
 3054              		.section	.rodata
 3055 06ef 00       		.align	2
 3056              	.LC86:
 3057 06f0 4572726F 		.ascii	"Error setting system time.\000"
 3057      72207365 
 3057      7474696E 
 3057      67207379 
 3057      7374656D 
 3058              		.section	.text.setTime,"ax",%progbits
 3059              		.align	2
 3060              		.global	setTime
 3061              		.thumb
 3062              		.thumb_func
 3063              		.type	setTime, %function
 3064              	setTime:
 3065              	.LFB77:
 824:notoriOS.c    **** 
 825:notoriOS.c    **** // ==============================================
 826:notoriOS.c    **** // Set the system time
 827:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 828:notoriOS.c    **** // ==============================================
 829:notoriOS.c    **** uint8 setTime(long timeStamp){
 3066              		.loc 1 829 0
 3067              		.cfi_startproc
 3068              		@ args = 0, pretend = 0, frame = 24
 3069              		@ frame_needed = 1, uses_anonymous_args = 0
 3070 0000 80B5     		push	{r7, lr}
 3071              		.cfi_def_cfa_offset 8
 3072              		.cfi_offset 7, -8
 3073              		.cfi_offset 14, -4
 3074 0002 86B0     		sub	sp, sp, #24
 3075              		.cfi_def_cfa_offset 32
 3076 0004 00AF     		add	r7, sp, #0
 3077              		.cfi_def_cfa_register 7
 3078 0006 7860     		str	r0, [r7, #4]
 830:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 831:notoriOS.c    ****     if(timeStamp <=0){
 3079              		.loc 1 831 0
 3080 0008 7B68     		ldr	r3, [r7, #4]
 3081 000a 002B     		cmp	r3, #0
 3082 000c 05DC     		bgt	.L79
 832:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 3083              		.loc 1 832 0
 3084 000e 1849     		ldr	r1, .L81
 3085 0010 0220     		movs	r0, #2
 3086 0012 FFF7FEFF 		bl	printNotif
 833:notoriOS.c    ****         return 0;  
 3087              		.loc 1 833 0
 3088 0016 0023     		movs	r3, #0
 3089 0018 25E0     		b	.L80
 3090              	.L79:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 75


 834:notoriOS.c    ****     }
 835:notoriOS.c    ****     // Create a new pointer t of data structure tm
 836:notoriOS.c    ****     struct tm * t;
 837:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 838:notoriOS.c    ****     t = gmtime(&timeStamp);
 3091              		.loc 1 838 0
 3092 001a 3B1D     		adds	r3, r7, #4
 3093 001c 1846     		mov	r0, r3
 3094 001e FFF7FEFF 		bl	gmtime
 3095 0022 7861     		str	r0, [r7, #20]
 839:notoriOS.c    ****     
 840:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 841:notoriOS.c    ****     RTC_TIME_DATE localTime;
 842:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 3096              		.loc 1 842 0
 3097 0024 7B69     		ldr	r3, [r7, #20]
 3098 0026 1B68     		ldr	r3, [r3]
 3099 0028 DBB2     		uxtb	r3, r3
 3100 002a 3B72     		strb	r3, [r7, #8]
 843:notoriOS.c    ****     localTime.Min = t->tm_min;
 3101              		.loc 1 843 0
 3102 002c 7B69     		ldr	r3, [r7, #20]
 3103 002e 5B68     		ldr	r3, [r3, #4]
 3104 0030 DBB2     		uxtb	r3, r3
 3105 0032 7B72     		strb	r3, [r7, #9]
 844:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 3106              		.loc 1 844 0
 3107 0034 7B69     		ldr	r3, [r7, #20]
 3108 0036 9B68     		ldr	r3, [r3, #8]
 3109 0038 DBB2     		uxtb	r3, r3
 3110 003a BB72     		strb	r3, [r7, #10]
 845:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 3111              		.loc 1 845 0
 3112 003c 7B69     		ldr	r3, [r7, #20]
 3113 003e 5B69     		ldr	r3, [r3, #20]
 3114 0040 9BB2     		uxth	r3, r3
 3115 0042 03F26C73 		addw	r3, r3, #1900
 3116 0046 9BB2     		uxth	r3, r3
 3117 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 846:notoriOS.c    ****     localTime.Month = t->tm_mon;
 3118              		.loc 1 846 0
 3119 004a 7B69     		ldr	r3, [r7, #20]
 3120 004c 1B69     		ldr	r3, [r3, #16]
 3121 004e DBB2     		uxtb	r3, r3
 3122 0050 3B74     		strb	r3, [r7, #16]
 847:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 3123              		.loc 1 847 0
 3124 0052 7B69     		ldr	r3, [r7, #20]
 3125 0054 DB68     		ldr	r3, [r3, #12]
 3126 0056 DBB2     		uxtb	r3, r3
 3127 0058 3B73     		strb	r3, [r7, #12]
 848:notoriOS.c    **** 
 849:notoriOS.c    ****     // Writes time and date values as current time and date.
 850:notoriOS.c    ****     RTC_WriteTime(&localTime);
 3128              		.loc 1 850 0
 3129 005a 07F10803 		add	r3, r7, #8
 3130 005e 1846     		mov	r0, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 76


 3131 0060 FFF7FEFF 		bl	RTC_WriteTime
 851:notoriOS.c    ****     
 852:notoriOS.c    ****     // Return 1 when the system time was set properly.
 853:notoriOS.c    ****     return 1;
 3132              		.loc 1 853 0
 3133 0064 0123     		movs	r3, #1
 3134              	.L80:
 854:notoriOS.c    **** }
 3135              		.loc 1 854 0
 3136 0066 1846     		mov	r0, r3
 3137 0068 1837     		adds	r7, r7, #24
 3138              		.cfi_def_cfa_offset 8
 3139 006a BD46     		mov	sp, r7
 3140              		.cfi_def_cfa_register 13
 3141              		@ sp needed
 3142 006c 80BD     		pop	{r7, pc}
 3143              	.L82:
 3144 006e 00BF     		.align	2
 3145              	.L81:
 3146 0070 F0060000 		.word	.LC86
 3147              		.cfi_endproc
 3148              	.LFE77:
 3149              		.size	setTime, .-setTime
 3150              		.section	.rodata
 3151 070b 00       		.align	2
 3152              	.LC87:
 3153 070c 75706772 		.ascii	"upgrade.hex\000"
 3153      6164652E 
 3153      68657800 
 3154              		.section	.text.upgraded,"ax",%progbits
 3155              		.align	2
 3156              		.global	upgraded
 3157              		.thumb
 3158              		.thumb_func
 3159              		.type	upgraded, %function
 3160              	upgraded:
 3161              	.LFB78:
 855:notoriOS.c    **** 
 856:notoriOS.c    **** //downloads and stores files on SD card
 857:notoriOS.c    **** 
 858:notoriOS.c    **** 
 859:notoriOS.c    **** 
 860:notoriOS.c    **** // ==============================================
 861:notoriOS.c    **** // Will they love it, will they hate it
 862:notoriOS.c    **** // Never fade it, I evade it
 863:notoriOS.c    **** // Cause I never really want to complicate it
 864:notoriOS.c    **** //      - Logic, Upgraded (2015)
 865:notoriOS.c    **** //
 866:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 867:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 868:notoriOS.c    **** // ==============================================
 869:notoriOS.c    **** 
 870:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 3162              		.loc 1 870 0
 3163              		.cfi_startproc
 3164              		@ args = 0, pretend = 0, frame = 232
 3165              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 77


 3166 0000 80B5     		push	{r7, lr}
 3167              		.cfi_def_cfa_offset 8
 3168              		.cfi_offset 7, -8
 3169              		.cfi_offset 14, -4
 3170 0002 C0B0     		sub	sp, sp, #256
 3171              		.cfi_def_cfa_offset 264
 3172 0004 06AF     		add	r7, sp, #24
 3173              		.cfi_def_cfa 7, 240
 3174 0006 F860     		str	r0, [r7, #12]
 3175 0008 B960     		str	r1, [r7, #8]
 3176 000a 7A60     		str	r2, [r7, #4]
 871:notoriOS.c    ****     
 872:notoriOS.c    ****     uint8 upgrade_status = 0;
 3177              		.loc 1 872 0
 3178 000c 0023     		movs	r3, #0
 3179 000e 87F8E730 		strb	r3, [r7, #231]
 873:notoriOS.c    ****     
 874:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 875:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 3180              		.loc 1 875 0
 3181 0012 384B     		ldr	r3, .L87
 3182 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3183 0016 042B     		cmp	r3, #4
 3184 0018 02D0     		beq	.L84
 876:notoriOS.c    ****         return upgrade_status;//where valid = 0
 3185              		.loc 1 876 0
 3186 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 3187 001e 65E0     		b	.L86
 3188              	.L84:
 877:notoriOS.c    ****     }
 878:notoriOS.c    ****     
 879:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 3189              		.loc 1 879 0
 3190 0020 354A     		ldr	r2, .L87+4
 3191 0022 07F1D803 		add	r3, r7, #216
 3192 0026 07CA     		ldmia	r2, {r0, r1, r2}
 3193 0028 83E80700 		stmia	r3, {r0, r1, r2}
 880:notoriOS.c    ****     //delete file, if one exisits already
 881:notoriOS.c    ****     SD_rmfile(fileName);
 3194              		.loc 1 881 0
 3195 002c 07F1D803 		add	r3, r7, #216
 3196 0030 1846     		mov	r0, r3
 3197 0032 FFF7FEFF 		bl	SD_rmfile
 882:notoriOS.c    ****     
 883:notoriOS.c    ****     // Create http request
 884:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 3198              		.loc 1 884 0
 3199 0036 314B     		ldr	r3, .L87+8
 3200 0038 0593     		str	r3, [sp, #20]
 3201 003a 0023     		movs	r3, #0
 3202 003c 0493     		str	r3, [sp, #16]
 3203 003e 304B     		ldr	r3, .L87+12
 3204 0040 0393     		str	r3, [sp, #12]
 3205 0042 304B     		ldr	r3, .L87+16
 3206 0044 0293     		str	r3, [sp, #8]
 3207 0046 304B     		ldr	r3, .L87+20
 3208 0048 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 78


 3209 004a BB68     		ldr	r3, [r7, #8]
 3210 004c 0093     		str	r3, [sp]
 3211 004e 7B68     		ldr	r3, [r7, #4]
 3212 0050 FA68     		ldr	r2, [r7, #12]
 3213 0052 2E49     		ldr	r1, .L87+24
 3214 0054 2E48     		ldr	r0, .L87+28
 3215 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 885:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 3216              		.loc 1 885 0
 3217 005a 2D4A     		ldr	r2, .L87+28
 3218 005c 2D49     		ldr	r1, .L87+32
 3219 005e 0020     		movs	r0, #0
 3220 0060 FFF7FEFF 		bl	printNotif
 886:notoriOS.c    ****     // Create array portConfig of size 200 characters
 887:notoriOS.c    ****     char portConfig[200];
 888:notoriOS.c    ****     // Print port configurations
 889:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 3221              		.loc 1 889 0
 3222 0064 07F11000 		add	r0, r7, #16
 3223 0068 FB68     		ldr	r3, [r7, #12]
 3224 006a 0093     		str	r3, [sp]
 3225 006c BB68     		ldr	r3, [r7, #8]
 3226 006e 2A4A     		ldr	r2, .L87+36
 3227 0070 C821     		movs	r1, #200
 3228 0072 FFF7FEFF 		bl	snprintf
 890:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 3229              		.loc 1 890 0
 3230 0076 07F11003 		add	r3, r7, #16
 3231 007a 1A46     		mov	r2, r3
 3232 007c 2749     		ldr	r1, .L87+40
 3233 007e 0020     		movs	r0, #0
 3234 0080 FFF7FEFF 		bl	printNotif
 891:notoriOS.c    ****     // AT command to configure the port
 892:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 3235              		.loc 1 892 0
 3236 0084 07F11003 		add	r3, r7, #16
 3237 0088 42F21072 		movw	r2, #10000
 3238 008c 2449     		ldr	r1, .L87+44
 3239 008e 1846     		mov	r0, r3
 3240 0090 FFF7FEFF 		bl	at_write_command
 3241 0094 0346     		mov	r3, r0
 3242 0096 87F8E730 		strb	r3, [r7, #231]
 893:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 894:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 895:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 3243              		.loc 1 895 0
 3244 009a 4FF47A72 		mov	r2, #1000
 3245 009e 2149     		ldr	r1, .L87+48
 3246 00a0 2148     		ldr	r0, .L87+52
 3247 00a2 FFF7FEFF 		bl	at_write_command
 3248 00a6 0346     		mov	r3, r0
 3249 00a8 87F8E730 		strb	r3, [r7, #231]
 896:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 897:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 3250              		.loc 1 897 0
 3251 00ac 1848     		ldr	r0, .L87+28
 3252 00ae FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 79


 3253 00b2 0346     		mov	r3, r0
 3254 00b4 1A46     		mov	r2, r3
 3255 00b6 164B     		ldr	r3, .L87+28
 3256 00b8 1344     		add	r3, r3, r2
 3257 00ba 1C49     		ldr	r1, .L87+56
 3258 00bc 1A46     		mov	r2, r3
 3259 00be 0B46     		mov	r3, r1
 3260 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 3261 00c2 1380     		strh	r3, [r2]	@ unaligned
 898:notoriOS.c    ****     // AT command to send http request
 899:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
 3262              		.loc 1 899 0
 3263 00c4 41F28832 		movw	r2, #5000
 3264 00c8 1549     		ldr	r1, .L87+44
 3265 00ca 1148     		ldr	r0, .L87+28
 3266 00cc FFF7FEFF 		bl	at_write_command
 3267 00d0 0346     		mov	r3, r0
 3268 00d2 87F8E730 		strb	r3, [r7, #231]
 900:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 901:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 902:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 3269              		.loc 1 902 0
 3270 00d6 41F28832 		movw	r2, #5000
 3271 00da 1549     		ldr	r1, .L87+60
 3272 00dc 1548     		ldr	r0, .L87+64
 3273 00de FFF7FEFF 		bl	at_write_command
 3274 00e2 0346     		mov	r3, r0
 3275 00e4 87F8E730 		strb	r3, [r7, #231]
 903:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 904:notoriOS.c    ****     
 905:notoriOS.c    ****     
 906:notoriOS.c    ****     return upgrade_status;
 3276              		.loc 1 906 0
 3277 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 3278              	.L86:
 907:notoriOS.c    ****     
 908:notoriOS.c    **** }
 3279              		.loc 1 908 0 discriminator 1
 3280 00ec 1846     		mov	r0, r3
 3281 00ee E837     		adds	r7, r7, #232
 3282              		.cfi_def_cfa_offset 8
 3283 00f0 BD46     		mov	sp, r7
 3284              		.cfi_def_cfa_register 13
 3285              		@ sp needed
 3286 00f2 80BD     		pop	{r7, pc}
 3287              	.L88:
 3288              		.align	2
 3289              	.L87:
 3290 00f4 00000000 		.word	modem_state
 3291 00f8 0C070000 		.word	.LC87
 3292 00fc 68010000 		.word	.LC16
 3293 0100 6C010000 		.word	.LC17
 3294 0104 70010000 		.word	.LC18
 3295 0108 78010000 		.word	.LC19
 3296 010c 00000000 		.word	http_body
 3297 0110 00000000 		.word	http_request
 3298 0114 80010000 		.word	.LC20
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 80


 3299 0118 98010000 		.word	.LC21
 3300 011c B4010000 		.word	.LC22
 3301 0120 B8010000 		.word	.LC23
 3302 0124 E8010000 		.word	.LC26
 3303 0128 EC010000 		.word	.LC27
 3304 012c FC010000 		.word	.LC28
 3305 0130 18020000 		.word	.LC31
 3306 0134 20020000 		.word	.LC32
 3307              		.cfi_endproc
 3308              	.LFE78:
 3309              		.size	upgraded, .-upgraded
 3310              		.text
 3311              	.Letext0:
 3312              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 3313              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 3314              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 3315              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 3316              		.file 6 "testing.h"
 3317              		.file 7 "level_sensor.h"
 3318              		.file 8 "sontek.h"
 3319              		.file 9 "voltages.h"
 3320              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 3321              		.file 11 "data.h"
 3322              		.file 12 "modem.h"
 3323              		.file 13 "notoriOS.h"
 3324              		.file 14 "Generated_Source\\PSoC5/core_cm3.h"
 3325              		.section	.debug_info,"",%progbits
 3326              	.Ldebug_info0:
 3327 0000 1D0D0000 		.4byte	0xd1d
 3328 0004 0400     		.2byte	0x4
 3329 0006 00000000 		.4byte	.Ldebug_abbrev0
 3330 000a 04       		.byte	0x4
 3331 000b 01       		.uleb128 0x1
 3332 000c 7D000000 		.4byte	.LASF174
 3333 0010 0C       		.byte	0xc
 3334 0011 E0070000 		.4byte	.LASF175
 3335 0015 E0020000 		.4byte	.LASF176
 3336 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3337 001d 00000000 		.4byte	0
 3338 0021 00000000 		.4byte	.Ldebug_line0
 3339 0025 02       		.uleb128 0x2
 3340 0026 01       		.byte	0x1
 3341 0027 06       		.byte	0x6
 3342 0028 4E000000 		.4byte	.LASF0
 3343 002c 02       		.uleb128 0x2
 3344 002d 01       		.byte	0x1
 3345 002e 08       		.byte	0x8
 3346 002f DB050000 		.4byte	.LASF1
 3347 0033 02       		.uleb128 0x2
 3348 0034 02       		.byte	0x2
 3349 0035 05       		.byte	0x5
 3350 0036 2D040000 		.4byte	.LASF2
 3351 003a 02       		.uleb128 0x2
 3352 003b 02       		.byte	0x2
 3353 003c 07       		.byte	0x7
 3354 003d 74020000 		.4byte	.LASF3
 3355 0041 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 81


 3356 0042 3D070000 		.4byte	.LASF9
 3357 0046 02       		.byte	0x2
 3358 0047 3F       		.byte	0x3f
 3359 0048 4C000000 		.4byte	0x4c
 3360 004c 02       		.uleb128 0x2
 3361 004d 04       		.byte	0x4
 3362 004e 05       		.byte	0x5
 3363 004f 0E020000 		.4byte	.LASF4
 3364 0053 02       		.uleb128 0x2
 3365 0054 04       		.byte	0x4
 3366 0055 07       		.byte	0x7
 3367 0056 6A030000 		.4byte	.LASF5
 3368 005a 02       		.uleb128 0x2
 3369 005b 08       		.byte	0x8
 3370 005c 05       		.byte	0x5
 3371 005d 69010000 		.4byte	.LASF6
 3372 0061 02       		.uleb128 0x2
 3373 0062 08       		.byte	0x8
 3374 0063 07       		.byte	0x7
 3375 0064 11010000 		.4byte	.LASF7
 3376 0068 04       		.uleb128 0x4
 3377 0069 04       		.byte	0x4
 3378 006a 05       		.byte	0x5
 3379 006b 696E7400 		.ascii	"int\000"
 3380 006f 02       		.uleb128 0x2
 3381 0070 04       		.byte	0x4
 3382 0071 07       		.byte	0x7
 3383 0072 16030000 		.4byte	.LASF8
 3384 0076 03       		.uleb128 0x3
 3385 0077 D3050000 		.4byte	.LASF10
 3386 007b 03       		.byte	0x3
 3387 007c 2C       		.byte	0x2c
 3388 007d 41000000 		.4byte	0x41
 3389 0081 05       		.uleb128 0x5
 3390 0082 30020000 		.4byte	.LASF11
 3391 0086 04       		.byte	0x4
 3392 0087 9201     		.2byte	0x192
 3393 0089 2C000000 		.4byte	0x2c
 3394 008d 05       		.uleb128 0x5
 3395 008e E9050000 		.4byte	.LASF12
 3396 0092 04       		.byte	0x4
 3397 0093 9301     		.2byte	0x193
 3398 0095 3A000000 		.4byte	0x3a
 3399 0099 05       		.uleb128 0x5
 3400 009a 87020000 		.4byte	.LASF13
 3401 009e 04       		.byte	0x4
 3402 009f 9401     		.2byte	0x194
 3403 00a1 53000000 		.4byte	0x53
 3404 00a5 05       		.uleb128 0x5
 3405 00a6 F0030000 		.4byte	.LASF14
 3406 00aa 04       		.byte	0x4
 3407 00ab 9501     		.2byte	0x195
 3408 00ad 25000000 		.4byte	0x25
 3409 00b1 05       		.uleb128 0x5
 3410 00b2 F5070000 		.4byte	.LASF15
 3411 00b6 04       		.byte	0x4
 3412 00b7 9601     		.2byte	0x196
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 82


 3413 00b9 33000000 		.4byte	0x33
 3414 00bd 05       		.uleb128 0x5
 3415 00be 4E020000 		.4byte	.LASF16
 3416 00c2 04       		.byte	0x4
 3417 00c3 9701     		.2byte	0x197
 3418 00c5 4C000000 		.4byte	0x4c
 3419 00c9 02       		.uleb128 0x2
 3420 00ca 04       		.byte	0x4
 3421 00cb 04       		.byte	0x4
 3422 00cc 78050000 		.4byte	.LASF17
 3423 00d0 02       		.uleb128 0x2
 3424 00d1 08       		.byte	0x8
 3425 00d2 04       		.byte	0x4
 3426 00d3 79080000 		.4byte	.LASF18
 3427 00d7 02       		.uleb128 0x2
 3428 00d8 01       		.byte	0x1
 3429 00d9 08       		.byte	0x8
 3430 00da 0D070000 		.4byte	.LASF19
 3431 00de 02       		.uleb128 0x2
 3432 00df 08       		.byte	0x8
 3433 00e0 04       		.byte	0x4
 3434 00e1 EF060000 		.4byte	.LASF20
 3435 00e5 02       		.uleb128 0x2
 3436 00e6 04       		.byte	0x4
 3437 00e7 07       		.byte	0x7
 3438 00e8 AA040000 		.4byte	.LASF21
 3439 00ec 06       		.uleb128 0x6
 3440 00ed 04       		.byte	0x4
 3441 00ee D7000000 		.4byte	0xd7
 3442 00f2 07       		.uleb128 0x7
 3443 00f3 D7000000 		.4byte	0xd7
 3444 00f7 02010000 		.4byte	0x102
 3445 00fb 08       		.uleb128 0x8
 3446 00fc E5000000 		.4byte	0xe5
 3447 0100 17       		.byte	0x17
 3448 0101 00       		.byte	0
 3449 0102 09       		.uleb128 0x9
 3450 0103 0C       		.byte	0xc
 3451 0104 05       		.byte	0x5
 3452 0105 30       		.byte	0x30
 3453 0106 6B010000 		.4byte	0x16b
 3454 010a 0A       		.uleb128 0xa
 3455 010b 53656300 		.ascii	"Sec\000"
 3456 010f 05       		.byte	0x5
 3457 0110 32       		.byte	0x32
 3458 0111 81000000 		.4byte	0x81
 3459 0115 00       		.byte	0
 3460 0116 0A       		.uleb128 0xa
 3461 0117 4D696E00 		.ascii	"Min\000"
 3462 011b 05       		.byte	0x5
 3463 011c 33       		.byte	0x33
 3464 011d 81000000 		.4byte	0x81
 3465 0121 01       		.byte	0x1
 3466 0122 0B       		.uleb128 0xb
 3467 0123 28010000 		.4byte	.LASF22
 3468 0127 05       		.byte	0x5
 3469 0128 34       		.byte	0x34
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 83


 3470 0129 81000000 		.4byte	0x81
 3471 012d 02       		.byte	0x2
 3472 012e 0B       		.uleb128 0xb
 3473 012f 44060000 		.4byte	.LASF23
 3474 0133 05       		.byte	0x5
 3475 0134 35       		.byte	0x35
 3476 0135 81000000 		.4byte	0x81
 3477 0139 03       		.byte	0x3
 3478 013a 0B       		.uleb128 0xb
 3479 013b AB030000 		.4byte	.LASF24
 3480 013f 05       		.byte	0x5
 3481 0140 36       		.byte	0x36
 3482 0141 81000000 		.4byte	0x81
 3483 0145 04       		.byte	0x4
 3484 0146 0B       		.uleb128 0xb
 3485 0147 2E080000 		.4byte	.LASF25
 3486 014b 05       		.byte	0x5
 3487 014c 37       		.byte	0x37
 3488 014d 8D000000 		.4byte	0x8d
 3489 0151 06       		.byte	0x6
 3490 0152 0B       		.uleb128 0xb
 3491 0153 0B010000 		.4byte	.LASF26
 3492 0157 05       		.byte	0x5
 3493 0158 38       		.byte	0x38
 3494 0159 81000000 		.4byte	0x81
 3495 015d 08       		.byte	0x8
 3496 015e 0B       		.uleb128 0xb
 3497 015f C8050000 		.4byte	.LASF27
 3498 0163 05       		.byte	0x5
 3499 0164 39       		.byte	0x39
 3500 0165 8D000000 		.4byte	0x8d
 3501 0169 0A       		.byte	0xa
 3502 016a 00       		.byte	0
 3503 016b 03       		.uleb128 0x3
 3504 016c 1D050000 		.4byte	.LASF28
 3505 0170 05       		.byte	0x5
 3506 0171 3A       		.byte	0x3a
 3507 0172 76010000 		.4byte	0x176
 3508 0176 0C       		.uleb128 0xc
 3509 0177 02010000 		.4byte	0x102
 3510 017b 0D       		.uleb128 0xd
 3511 017c 8101     		.2byte	0x181
 3512 017e 06       		.byte	0x6
 3513 017f 0A       		.byte	0xa
 3514 0180 A9010000 		.4byte	0x1a9
 3515 0184 0B       		.uleb128 0xb
 3516 0185 BE050000 		.4byte	.LASF29
 3517 0189 06       		.byte	0x6
 3518 018a 0C       		.byte	0xc
 3519 018b A9010000 		.4byte	0x1a9
 3520 018f 00       		.byte	0
 3521 0190 0B       		.uleb128 0xb
 3522 0191 AE070000 		.4byte	.LASF30
 3523 0195 06       		.byte	0x6
 3524 0196 0D       		.byte	0xd
 3525 0197 81000000 		.4byte	0x81
 3526 019b 80       		.byte	0x80
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 84


 3527 019c 0B       		.uleb128 0xb
 3528 019d 66060000 		.4byte	.LASF31
 3529 01a1 06       		.byte	0x6
 3530 01a2 0F       		.byte	0xf
 3531 01a3 B9010000 		.4byte	0x1b9
 3532 01a7 81       		.byte	0x81
 3533 01a8 00       		.byte	0
 3534 01a9 07       		.uleb128 0x7
 3535 01aa D7000000 		.4byte	0xd7
 3536 01ae B9010000 		.4byte	0x1b9
 3537 01b2 08       		.uleb128 0x8
 3538 01b3 E5000000 		.4byte	0xe5
 3539 01b7 7F       		.byte	0x7f
 3540 01b8 00       		.byte	0
 3541 01b9 07       		.uleb128 0x7
 3542 01ba D7000000 		.4byte	0xd7
 3543 01be C9010000 		.4byte	0x1c9
 3544 01c2 08       		.uleb128 0x8
 3545 01c3 E5000000 		.4byte	0xe5
 3546 01c7 FF       		.byte	0xff
 3547 01c8 00       		.byte	0
 3548 01c9 03       		.uleb128 0x3
 3549 01ca 4E060000 		.4byte	.LASF32
 3550 01ce 06       		.byte	0x6
 3551 01cf 10       		.byte	0x10
 3552 01d0 7B010000 		.4byte	0x17b
 3553 01d4 09       		.uleb128 0x9
 3554 01d5 1A       		.byte	0x1a
 3555 01d6 07       		.byte	0x7
 3556 01d7 10       		.byte	0x10
 3557 01d8 0D020000 		.4byte	0x20d
 3558 01dc 0B       		.uleb128 0xb
 3559 01dd 97020000 		.4byte	.LASF33
 3560 01e1 07       		.byte	0x7
 3561 01e2 11       		.byte	0x11
 3562 01e3 0D020000 		.4byte	0x20d
 3563 01e7 00       		.byte	0
 3564 01e8 0B       		.uleb128 0xb
 3565 01e9 65070000 		.4byte	.LASF34
 3566 01ed 07       		.byte	0x7
 3567 01ee 12       		.byte	0x12
 3568 01ef B1000000 		.4byte	0xb1
 3569 01f3 16       		.byte	0x16
 3570 01f4 0B       		.uleb128 0xb
 3571 01f5 42030000 		.4byte	.LASF35
 3572 01f9 07       		.byte	0x7
 3573 01fa 13       		.byte	0x13
 3574 01fb 81000000 		.4byte	0x81
 3575 01ff 18       		.byte	0x18
 3576 0200 0B       		.uleb128 0xb
 3577 0201 20000000 		.4byte	.LASF36
 3578 0205 07       		.byte	0x7
 3579 0206 14       		.byte	0x14
 3580 0207 81000000 		.4byte	0x81
 3581 020b 19       		.byte	0x19
 3582 020c 00       		.byte	0
 3583 020d 07       		.uleb128 0x7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 85


 3584 020e B1000000 		.4byte	0xb1
 3585 0212 1D020000 		.4byte	0x21d
 3586 0216 08       		.uleb128 0x8
 3587 0217 E5000000 		.4byte	0xe5
 3588 021b 0A       		.byte	0xa
 3589 021c 00       		.byte	0
 3590 021d 03       		.uleb128 0x3
 3591 021e 7E050000 		.4byte	.LASF37
 3592 0222 07       		.byte	0x7
 3593 0223 15       		.byte	0x15
 3594 0224 D4010000 		.4byte	0x1d4
 3595 0228 06       		.uleb128 0x6
 3596 0229 04       		.byte	0x4
 3597 022a EC000000 		.4byte	0xec
 3598 022e 06       		.uleb128 0x6
 3599 022f 04       		.byte	0x4
 3600 0230 C9000000 		.4byte	0xc9
 3601 0234 09       		.uleb128 0x9
 3602 0235 E4       		.byte	0xe4
 3603 0236 08       		.byte	0x8
 3604 0237 1D       		.byte	0x1d
 3605 0238 E5020000 		.4byte	0x2e5
 3606 023c 0B       		.uleb128 0xb
 3607 023d C9020000 		.4byte	.LASF38
 3608 0241 08       		.byte	0x8
 3609 0242 1F       		.byte	0x1f
 3610 0243 81000000 		.4byte	0x81
 3611 0247 00       		.byte	0
 3612 0248 0B       		.uleb128 0xb
 3613 0249 3F060000 		.4byte	.LASF39
 3614 024d 08       		.byte	0x8
 3615 024e 20       		.byte	0x20
 3616 024f 81000000 		.4byte	0x81
 3617 0253 01       		.byte	0x1
 3618 0254 0B       		.uleb128 0xb
 3619 0255 2D010000 		.4byte	.LASF40
 3620 0259 08       		.byte	0x8
 3621 025a 22       		.byte	0x22
 3622 025b 2E020000 		.4byte	0x22e
 3623 025f 04       		.byte	0x4
 3624 0260 0B       		.uleb128 0xb
 3625 0261 D9070000 		.4byte	.LASF41
 3626 0265 08       		.byte	0x8
 3627 0266 23       		.byte	0x23
 3628 0267 28020000 		.4byte	0x228
 3629 026b 08       		.byte	0x8
 3630 026c 0B       		.uleb128 0xb
 3631 026d B3040000 		.4byte	.LASF42
 3632 0271 08       		.byte	0x8
 3633 0272 25       		.byte	0x25
 3634 0273 E5020000 		.4byte	0x2e5
 3635 0277 0C       		.byte	0xc
 3636 0278 0B       		.uleb128 0xb
 3637 0279 B9040000 		.4byte	.LASF43
 3638 027d 08       		.byte	0x8
 3639 027e 25       		.byte	0x25
 3640 027f F5020000 		.4byte	0x2f5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 86


 3641 0283 1C       		.byte	0x1c
 3642 0284 0B       		.uleb128 0xb
 3643 0285 06030000 		.4byte	.LASF44
 3644 0289 08       		.byte	0x8
 3645 028a 25       		.byte	0x25
 3646 028b 05030000 		.4byte	0x305
 3647 028f 30       		.byte	0x30
 3648 0290 0B       		.uleb128 0xb
 3649 0291 BF040000 		.4byte	.LASF45
 3650 0295 08       		.byte	0x8
 3651 0296 25       		.byte	0x25
 3652 0297 05030000 		.4byte	0x305
 3653 029b 48       		.byte	0x48
 3654 029c 0B       		.uleb128 0xb
 3655 029d C5040000 		.4byte	.LASF46
 3656 02a1 08       		.byte	0x8
 3657 02a2 25       		.byte	0x25
 3658 02a3 05030000 		.4byte	0x305
 3659 02a7 60       		.byte	0x60
 3660 02a8 0B       		.uleb128 0xb
 3661 02a9 CB040000 		.4byte	.LASF47
 3662 02ad 08       		.byte	0x8
 3663 02ae 25       		.byte	0x25
 3664 02af 05030000 		.4byte	0x305
 3665 02b3 78       		.byte	0x78
 3666 02b4 0B       		.uleb128 0xb
 3667 02b5 D1040000 		.4byte	.LASF48
 3668 02b9 08       		.byte	0x8
 3669 02ba 25       		.byte	0x25
 3670 02bb 05030000 		.4byte	0x305
 3671 02bf 90       		.byte	0x90
 3672 02c0 0B       		.uleb128 0xb
 3673 02c1 D7040000 		.4byte	.LASF49
 3674 02c5 08       		.byte	0x8
 3675 02c6 25       		.byte	0x25
 3676 02c7 05030000 		.4byte	0x305
 3677 02cb A8       		.byte	0xa8
 3678 02cc 0B       		.uleb128 0xb
 3679 02cd DD040000 		.4byte	.LASF50
 3680 02d1 08       		.byte	0x8
 3681 02d2 25       		.byte	0x25
 3682 02d3 E5020000 		.4byte	0x2e5
 3683 02d7 C0       		.byte	0xc0
 3684 02d8 0B       		.uleb128 0xb
 3685 02d9 50070000 		.4byte	.LASF51
 3686 02dd 08       		.byte	0x8
 3687 02de 25       		.byte	0x25
 3688 02df F5020000 		.4byte	0x2f5
 3689 02e3 D0       		.byte	0xd0
 3690 02e4 00       		.byte	0
 3691 02e5 07       		.uleb128 0x7
 3692 02e6 C9000000 		.4byte	0xc9
 3693 02ea F5020000 		.4byte	0x2f5
 3694 02ee 08       		.uleb128 0x8
 3695 02ef E5000000 		.4byte	0xe5
 3696 02f3 03       		.byte	0x3
 3697 02f4 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 87


 3698 02f5 07       		.uleb128 0x7
 3699 02f6 C9000000 		.4byte	0xc9
 3700 02fa 05030000 		.4byte	0x305
 3701 02fe 08       		.uleb128 0x8
 3702 02ff E5000000 		.4byte	0xe5
 3703 0303 04       		.byte	0x4
 3704 0304 00       		.byte	0
 3705 0305 07       		.uleb128 0x7
 3706 0306 C9000000 		.4byte	0xc9
 3707 030a 15030000 		.4byte	0x315
 3708 030e 08       		.uleb128 0x8
 3709 030f E5000000 		.4byte	0xe5
 3710 0313 05       		.byte	0x5
 3711 0314 00       		.byte	0
 3712 0315 03       		.uleb128 0x3
 3713 0316 12070000 		.4byte	.LASF52
 3714 031a 08       		.byte	0x8
 3715 031b 28       		.byte	0x28
 3716 031c 34020000 		.4byte	0x234
 3717 0320 09       		.uleb128 0x9
 3718 0321 14       		.byte	0x14
 3719 0322 09       		.byte	0x9
 3720 0323 11       		.byte	0x11
 3721 0324 65030000 		.4byte	0x365
 3722 0328 0B       		.uleb128 0xb
 3723 0329 9B030000 		.4byte	.LASF53
 3724 032d 09       		.byte	0x9
 3725 032e 12       		.byte	0x12
 3726 032f C9000000 		.4byte	0xc9
 3727 0333 00       		.byte	0
 3728 0334 0B       		.uleb128 0xb
 3729 0335 B5010000 		.4byte	.LASF54
 3730 0339 09       		.byte	0x9
 3731 033a 13       		.byte	0x13
 3732 033b C9000000 		.4byte	0xc9
 3733 033f 04       		.byte	0x4
 3734 0340 0B       		.uleb128 0xb
 3735 0341 C3010000 		.4byte	.LASF55
 3736 0345 09       		.byte	0x9
 3737 0346 14       		.byte	0x14
 3738 0347 C9000000 		.4byte	0xc9
 3739 034b 08       		.byte	0x8
 3740 034c 0B       		.uleb128 0xb
 3741 034d 5A050000 		.4byte	.LASF56
 3742 0351 09       		.byte	0x9
 3743 0352 15       		.byte	0x15
 3744 0353 C9000000 		.4byte	0xc9
 3745 0357 0C       		.byte	0xc
 3746 0358 0B       		.uleb128 0xb
 3747 0359 D7060000 		.4byte	.LASF57
 3748 035d 09       		.byte	0x9
 3749 035e 16       		.byte	0x16
 3750 035f 81000000 		.4byte	0x81
 3751 0363 10       		.byte	0x10
 3752 0364 00       		.byte	0
 3753 0365 03       		.uleb128 0x3
 3754 0366 80080000 		.4byte	.LASF58
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 88


 3755 036a 09       		.byte	0x9
 3756 036b 17       		.byte	0x17
 3757 036c 20030000 		.4byte	0x320
 3758 0370 09       		.uleb128 0x9
 3759 0371 08       		.byte	0x8
 3760 0372 09       		.byte	0x9
 3761 0373 19       		.byte	0x19
 3762 0374 91030000 		.4byte	0x391
 3763 0378 0B       		.uleb128 0xb
 3764 0379 C6060000 		.4byte	.LASF59
 3765 037d 09       		.byte	0x9
 3766 037e 1A       		.byte	0x1a
 3767 037f C9000000 		.4byte	0xc9
 3768 0383 00       		.byte	0
 3769 0384 0B       		.uleb128 0xb
 3770 0385 2B060000 		.4byte	.LASF60
 3771 0389 09       		.byte	0x9
 3772 038a 1B       		.byte	0x1b
 3773 038b C9000000 		.4byte	0xc9
 3774 038f 04       		.byte	0x4
 3775 0390 00       		.byte	0
 3776 0391 03       		.uleb128 0x3
 3777 0392 38080000 		.4byte	.LASF61
 3778 0396 09       		.byte	0x9
 3779 0397 1C       		.byte	0x1c
 3780 0398 70030000 		.4byte	0x370
 3781 039c 0E       		.uleb128 0xe
 3782 039d 746D00   		.ascii	"tm\000"
 3783 03a0 24       		.byte	0x24
 3784 03a1 0A       		.byte	0xa
 3785 03a2 21       		.byte	0x21
 3786 03a3 14040000 		.4byte	0x414
 3787 03a7 0B       		.uleb128 0xb
 3788 03a8 9C070000 		.4byte	.LASF62
 3789 03ac 0A       		.byte	0xa
 3790 03ad 23       		.byte	0x23
 3791 03ae 68000000 		.4byte	0x68
 3792 03b2 00       		.byte	0
 3793 03b3 0B       		.uleb128 0xb
 3794 03b4 8C040000 		.4byte	.LASF63
 3795 03b8 0A       		.byte	0xa
 3796 03b9 24       		.byte	0x24
 3797 03ba 68000000 		.4byte	0x68
 3798 03be 04       		.byte	0x4
 3799 03bf 0B       		.uleb128 0xb
 3800 03c0 10000000 		.4byte	.LASF64
 3801 03c4 0A       		.byte	0xa
 3802 03c5 25       		.byte	0x25
 3803 03c6 68000000 		.4byte	0x68
 3804 03ca 08       		.byte	0x8
 3805 03cb 0B       		.uleb128 0xb
 3806 03cc 8B070000 		.4byte	.LASF65
 3807 03d0 0A       		.byte	0xa
 3808 03d1 26       		.byte	0x26
 3809 03d2 68000000 		.4byte	0x68
 3810 03d6 0C       		.byte	0xc
 3811 03d7 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 89


 3812 03d8 C2020000 		.4byte	.LASF66
 3813 03dc 0A       		.byte	0xa
 3814 03dd 27       		.byte	0x27
 3815 03de 68000000 		.4byte	0x68
 3816 03e2 10       		.byte	0x10
 3817 03e3 0B       		.uleb128 0xb
 3818 03e4 08000000 		.4byte	.LASF67
 3819 03e8 0A       		.byte	0xa
 3820 03e9 28       		.byte	0x28
 3821 03ea 68000000 		.4byte	0x68
 3822 03ee 14       		.byte	0x14
 3823 03ef 0B       		.uleb128 0xb
 3824 03f0 E7060000 		.4byte	.LASF68
 3825 03f4 0A       		.byte	0xa
 3826 03f5 29       		.byte	0x29
 3827 03f6 68000000 		.4byte	0x68
 3828 03fa 18       		.byte	0x18
 3829 03fb 0B       		.uleb128 0xb
 3830 03fc 18000000 		.4byte	.LASF69
 3831 0400 0A       		.byte	0xa
 3832 0401 2A       		.byte	0x2a
 3833 0402 68000000 		.4byte	0x68
 3834 0406 1C       		.byte	0x1c
 3835 0407 0B       		.uleb128 0xb
 3836 0408 D4030000 		.4byte	.LASF70
 3837 040c 0A       		.byte	0xa
 3838 040d 2B       		.byte	0x2b
 3839 040e 68000000 		.4byte	0x68
 3840 0412 20       		.byte	0x20
 3841 0413 00       		.byte	0
 3842 0414 09       		.uleb128 0x9
 3843 0415 2C       		.byte	0x2c
 3844 0416 0B       		.byte	0xb
 3845 0417 14       		.byte	0x14
 3846 0418 41040000 		.4byte	0x441
 3847 041c 0A       		.uleb128 0xa
 3848 041d 6B657900 		.ascii	"key\000"
 3849 0421 0B       		.byte	0xb
 3850 0422 15       		.byte	0x15
 3851 0423 41040000 		.4byte	0x441
 3852 0427 00       		.byte	0
 3853 0428 0B       		.uleb128 0xb
 3854 0429 FB020000 		.4byte	.LASF71
 3855 042d 0B       		.byte	0xb
 3856 042e 16       		.byte	0x16
 3857 042f 41040000 		.4byte	0x441
 3858 0433 14       		.byte	0x14
 3859 0434 0B       		.uleb128 0xb
 3860 0435 13050000 		.4byte	.LASF72
 3861 0439 0B       		.byte	0xb
 3862 043a 17       		.byte	0x17
 3863 043b BD000000 		.4byte	0xbd
 3864 043f 28       		.byte	0x28
 3865 0440 00       		.byte	0
 3866 0441 07       		.uleb128 0x7
 3867 0442 D7000000 		.4byte	0xd7
 3868 0446 51040000 		.4byte	0x451
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 90


 3869 044a 08       		.uleb128 0x8
 3870 044b E5000000 		.4byte	0xe5
 3871 044f 13       		.byte	0x13
 3872 0450 00       		.byte	0
 3873 0451 03       		.uleb128 0x3
 3874 0452 2B030000 		.4byte	.LASF73
 3875 0456 0B       		.byte	0xb
 3876 0457 19       		.byte	0x19
 3877 0458 14040000 		.4byte	0x414
 3878 045c 09       		.uleb128 0x9
 3879 045d 3C       		.byte	0x3c
 3880 045e 0C       		.byte	0xc
 3881 045f 36       		.byte	0x36
 3882 0460 89040000 		.4byte	0x489
 3883 0464 0B       		.uleb128 0xb
 3884 0465 84070000 		.4byte	.LASF74
 3885 0469 0C       		.byte	0xc
 3886 046a 37       		.byte	0x37
 3887 046b 41040000 		.4byte	0x441
 3888 046f 00       		.byte	0
 3889 0470 0B       		.uleb128 0xb
 3890 0471 8E020000 		.4byte	.LASF75
 3891 0475 0C       		.byte	0xc
 3892 0476 38       		.byte	0x38
 3893 0477 41040000 		.4byte	0x441
 3894 047b 14       		.byte	0x14
 3895 047c 0B       		.uleb128 0xb
 3896 047d 61060000 		.4byte	.LASF76
 3897 0481 0C       		.byte	0xc
 3898 0482 39       		.byte	0x39
 3899 0483 41040000 		.4byte	0x441
 3900 0487 28       		.byte	0x28
 3901 0488 00       		.byte	0
 3902 0489 03       		.uleb128 0x3
 3903 048a FB010000 		.4byte	.LASF77
 3904 048e 0C       		.byte	0xc
 3905 048f 3B       		.byte	0x3b
 3906 0490 5C040000 		.4byte	0x45c
 3907 0494 09       		.uleb128 0x9
 3908 0495 20       		.byte	0x20
 3909 0496 0C       		.byte	0xc
 3910 0497 3D       		.byte	0x3d
 3911 0498 FD040000 		.4byte	0x4fd
 3912 049c 0B       		.uleb128 0xb
 3913 049d 08020000 		.4byte	.LASF78
 3914 04a1 0C       		.byte	0xc
 3915 04a2 3E       		.byte	0x3e
 3916 04a3 68000000 		.4byte	0x68
 3917 04a7 00       		.byte	0
 3918 04a8 0A       		.uleb128 0xa
 3919 04a9 62657200 		.ascii	"ber\000"
 3920 04ad 0C       		.byte	0xc
 3921 04ae 3F       		.byte	0x3f
 3922 04af 68000000 		.4byte	0x68
 3923 04b3 04       		.byte	0x4
 3924 04b4 0B       		.uleb128 0xb
 3925 04b5 3A060000 		.4byte	.LASF79
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 91


 3926 04b9 0C       		.byte	0xc
 3927 04ba 40       		.byte	0x40
 3928 04bb 68000000 		.4byte	0x68
 3929 04bf 08       		.byte	0x8
 3930 04c0 0B       		.uleb128 0xb
 3931 04c1 7F010000 		.4byte	.LASF80
 3932 04c5 0C       		.byte	0xc
 3933 04c6 41       		.byte	0x41
 3934 04c7 68000000 		.4byte	0x68
 3935 04cb 0C       		.byte	0xc
 3936 04cc 0B       		.uleb128 0xb
 3937 04cd 05060000 		.4byte	.LASF81
 3938 04d1 0C       		.byte	0xc
 3939 04d2 42       		.byte	0x42
 3940 04d3 68000000 		.4byte	0x68
 3941 04d7 10       		.byte	0x10
 3942 04d8 0B       		.uleb128 0xb
 3943 04d9 00060000 		.4byte	.LASF82
 3944 04dd 0C       		.byte	0xc
 3945 04de 43       		.byte	0x43
 3946 04df 68000000 		.4byte	0x68
 3947 04e3 14       		.byte	0x14
 3948 04e4 0B       		.uleb128 0xb
 3949 04e5 92010000 		.4byte	.LASF83
 3950 04e9 0C       		.byte	0xc
 3951 04ea 44       		.byte	0x44
 3952 04eb 68000000 		.4byte	0x68
 3953 04ef 18       		.byte	0x18
 3954 04f0 0B       		.uleb128 0xb
 3955 04f1 17020000 		.4byte	.LASF84
 3956 04f5 0C       		.byte	0xc
 3957 04f6 45       		.byte	0x45
 3958 04f7 68000000 		.4byte	0x68
 3959 04fb 1C       		.byte	0x1c
 3960 04fc 00       		.byte	0
 3961 04fd 03       		.uleb128 0x3
 3962 04fe B8060000 		.4byte	.LASF85
 3963 0502 0C       		.byte	0xc
 3964 0503 47       		.byte	0x47
 3965 0504 94040000 		.4byte	0x494
 3966 0508 09       		.uleb128 0x9
 3967 0509 05       		.byte	0x5
 3968 050a 0C       		.byte	0xc
 3969 050b 53       		.byte	0x53
 3970 050c 4D050000 		.4byte	0x54d
 3971 0510 0B       		.uleb128 0xb
 3972 0511 54020000 		.4byte	.LASF86
 3973 0515 0C       		.byte	0xc
 3974 0516 55       		.byte	0x55
 3975 0517 81000000 		.4byte	0x81
 3976 051b 00       		.byte	0
 3977 051c 0B       		.uleb128 0xb
 3978 051d 1F080000 		.4byte	.LASF87
 3979 0521 0C       		.byte	0xc
 3980 0522 57       		.byte	0x57
 3981 0523 4D050000 		.4byte	0x54d
 3982 0527 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 92


 3983 0528 0B       		.uleb128 0xb
 3984 0529 6C080000 		.4byte	.LASF88
 3985 052d 0C       		.byte	0xc
 3986 052e 59       		.byte	0x59
 3987 052f 81000000 		.4byte	0x81
 3988 0533 02       		.byte	0x2
 3989 0534 0B       		.uleb128 0xb
 3990 0535 21060000 		.4byte	.LASF89
 3991 0539 0C       		.byte	0xc
 3992 053a 5B       		.byte	0x5b
 3993 053b 81000000 		.4byte	0x81
 3994 053f 03       		.byte	0x3
 3995 0540 0B       		.uleb128 0xb
 3996 0541 CF020000 		.4byte	.LASF90
 3997 0545 0C       		.byte	0xc
 3998 0546 5E       		.byte	0x5e
 3999 0547 81000000 		.4byte	0x81
 4000 054b 04       		.byte	0x4
 4001 054c 00       		.byte	0
 4002 054d 02       		.uleb128 0x2
 4003 054e 01       		.byte	0x1
 4004 054f 02       		.byte	0x2
 4005 0550 CD050000 		.4byte	.LASF91
 4006 0554 03       		.uleb128 0x3
 4007 0555 59040000 		.4byte	.LASF92
 4008 0559 0C       		.byte	0xc
 4009 055a 60       		.byte	0x60
 4010 055b 08050000 		.4byte	0x508
 4011 055f 09       		.uleb128 0x9
 4012 0560 06       		.byte	0x6
 4013 0561 0D       		.byte	0xd
 4014 0562 2E       		.byte	0x2e
 4015 0563 98050000 		.4byte	0x598
 4016 0567 0B       		.uleb128 0xb
 4017 0568 AA020000 		.4byte	.LASF93
 4018 056c 0D       		.byte	0xd
 4019 056d 30       		.byte	0x30
 4020 056e 8D000000 		.4byte	0x8d
 4021 0572 00       		.byte	0
 4022 0573 0B       		.uleb128 0xb
 4023 0574 09080000 		.4byte	.LASF94
 4024 0578 0D       		.byte	0xd
 4025 0579 31       		.byte	0x31
 4026 057a B1000000 		.4byte	0xb1
 4027 057e 02       		.byte	0x2
 4028 057f 0B       		.uleb128 0xb
 4029 0580 FB070000 		.4byte	.LASF95
 4030 0584 0D       		.byte	0xd
 4031 0585 32       		.byte	0x32
 4032 0586 81000000 		.4byte	0x81
 4033 058a 04       		.byte	0x4
 4034 058b 0B       		.uleb128 0xb
 4035 058c 5A000000 		.4byte	.LASF96
 4036 0590 0D       		.byte	0xd
 4037 0591 33       		.byte	0x33
 4038 0592 81000000 		.4byte	0x81
 4039 0596 05       		.byte	0x5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 93


 4040 0597 00       		.byte	0
 4041 0598 03       		.uleb128 0x3
 4042 0599 2A020000 		.4byte	.LASF97
 4043 059d 0D       		.byte	0xd
 4044 059e 36       		.byte	0x36
 4045 059f A3050000 		.4byte	0x5a3
 4046 05a3 0C       		.uleb128 0xc
 4047 05a4 5F050000 		.4byte	0x55f
 4048 05a8 09       		.uleb128 0x9
 4049 05a9 1C       		.byte	0x1c
 4050 05aa 0D       		.byte	0xd
 4051 05ab 39       		.byte	0x39
 4052 05ac C9050000 		.4byte	0x5c9
 4053 05b0 0B       		.uleb128 0xb
 4054 05b1 DD030000 		.4byte	.LASF98
 4055 05b5 0D       		.byte	0xd
 4056 05b6 3B       		.byte	0x3b
 4057 05b7 C9050000 		.4byte	0x5c9
 4058 05bb 00       		.byte	0
 4059 05bc 0B       		.uleb128 0xb
 4060 05bd 5E080000 		.4byte	.LASF99
 4061 05c1 0D       		.byte	0xd
 4062 05c2 3C       		.byte	0x3c
 4063 05c3 F2000000 		.4byte	0xf2
 4064 05c7 04       		.byte	0x4
 4065 05c8 00       		.byte	0
 4066 05c9 06       		.uleb128 0x6
 4067 05ca 04       		.byte	0x4
 4068 05cb 89040000 		.4byte	0x489
 4069 05cf 03       		.uleb128 0x3
 4070 05d0 4E040000 		.4byte	.LASF100
 4071 05d4 0D       		.byte	0xd
 4072 05d5 3E       		.byte	0x3e
 4073 05d6 A8050000 		.4byte	0x5a8
 4074 05da 09       		.uleb128 0x9
 4075 05db 68       		.byte	0x68
 4076 05dc 0D       		.byte	0xd
 4077 05dd 44       		.byte	0x44
 4078 05de FB050000 		.4byte	0x5fb
 4079 05e2 0B       		.uleb128 0xb
 4080 05e3 E8030000 		.4byte	.LASF101
 4081 05e7 0D       		.byte	0xd
 4082 05e8 49       		.byte	0x49
 4083 05e9 FB050000 		.4byte	0x5fb
 4084 05ed 00       		.byte	0
 4085 05ee 0B       		.uleb128 0xb
 4086 05ef CC030000 		.4byte	.LASF102
 4087 05f3 0D       		.byte	0xd
 4088 05f4 4A       		.byte	0x4a
 4089 05f5 68000000 		.4byte	0x68
 4090 05f9 64       		.byte	0x64
 4091 05fa 00       		.byte	0
 4092 05fb 07       		.uleb128 0x7
 4093 05fc D7000000 		.4byte	0xd7
 4094 0600 0B060000 		.4byte	0x60b
 4095 0604 08       		.uleb128 0x8
 4096 0605 E5000000 		.4byte	0xe5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 94


 4097 0609 63       		.byte	0x63
 4098 060a 00       		.byte	0
 4099 060b 03       		.uleb128 0x3
 4100 060c E3040000 		.4byte	.LASF103
 4101 0610 0D       		.byte	0xd
 4102 0611 50       		.byte	0x50
 4103 0612 DA050000 		.4byte	0x5da
 4104 0616 0F       		.uleb128 0xf
 4105 0617 72000000 		.4byte	.LASF177
 4106 061b 01       		.byte	0x1
 4107 061c 14       		.byte	0x14
 4108 061d 00000000 		.4byte	.LFB64
 4109 0621 0C000000 		.4byte	.LFE64-.LFB64
 4110 0625 01       		.uleb128 0x1
 4111 0626 9C       		.byte	0x9c
 4112 0627 10       		.uleb128 0x10
 4113 0628 4E080000 		.4byte	.LASF117
 4114 062c 01       		.byte	0x1
 4115 062d 28       		.byte	0x28
 4116 062e 00000000 		.4byte	.LFB65
 4117 0632 2C010000 		.4byte	.LFE65-.LFB65
 4118 0636 01       		.uleb128 0x1
 4119 0637 9C       		.byte	0x9c
 4120 0638 67060000 		.4byte	0x667
 4121 063c 11       		.uleb128 0x11
 4122 063d 47070000 		.4byte	.LASF104
 4123 0641 01       		.byte	0x1
 4124 0642 3E       		.byte	0x3e
 4125 0643 67060000 		.4byte	0x667
 4126 0647 02       		.uleb128 0x2
 4127 0648 91       		.byte	0x91
 4128 0649 64       		.sleb128 -28
 4129 064a 11       		.uleb128 0x11
 4130 064b 28080000 		.4byte	.LASF105
 4131 064f 01       		.byte	0x1
 4132 0650 5B       		.byte	0x5b
 4133 0651 77060000 		.4byte	0x677
 4134 0655 02       		.uleb128 0x2
 4135 0656 91       		.byte	0x91
 4136 0657 58       		.sleb128 -40
 4137 0658 11       		.uleb128 0x11
 4138 0659 7C030000 		.4byte	.LASF106
 4139 065d 01       		.byte	0x1
 4140 065e 60       		.byte	0x60
 4141 065f 81000000 		.4byte	0x81
 4142 0663 02       		.uleb128 0x2
 4143 0664 91       		.byte	0x91
 4144 0665 6F       		.sleb128 -17
 4145 0666 00       		.byte	0
 4146 0667 07       		.uleb128 0x7
 4147 0668 99000000 		.4byte	0x99
 4148 066c 77060000 		.4byte	0x677
 4149 0670 08       		.uleb128 0x8
 4150 0671 E5000000 		.4byte	0xe5
 4151 0675 01       		.byte	0x1
 4152 0676 00       		.byte	0
 4153 0677 07       		.uleb128 0x7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 95


 4154 0678 D7000000 		.4byte	0xd7
 4155 067c 87060000 		.4byte	0x687
 4156 0680 08       		.uleb128 0x8
 4157 0681 E5000000 		.4byte	0xe5
 4158 0685 09       		.byte	0x9
 4159 0686 00       		.byte	0
 4160 0687 12       		.uleb128 0x12
 4161 0688 F5030000 		.4byte	.LASF108
 4162 068c 01       		.byte	0x1
 4163 068d 6A       		.byte	0x6a
 4164 068e 68000000 		.4byte	0x68
 4165 0692 00000000 		.4byte	.LFB66
 4166 0696 64000000 		.4byte	.LFE66-.LFB66
 4167 069a 01       		.uleb128 0x1
 4168 069b 9C       		.byte	0x9c
 4169 069c AF060000 		.4byte	0x6af
 4170 06a0 11       		.uleb128 0x11
 4171 06a1 B1050000 		.4byte	.LASF107
 4172 06a5 01       		.byte	0x1
 4173 06a6 84       		.byte	0x84
 4174 06a7 81000000 		.4byte	0x81
 4175 06ab 02       		.uleb128 0x2
 4176 06ac 91       		.byte	0x91
 4177 06ad 77       		.sleb128 -9
 4178 06ae 00       		.byte	0
 4179 06af 13       		.uleb128 0x13
 4180 06b0 73070000 		.4byte	.LASF178
 4181 06b4 01       		.byte	0x1
 4182 06b5 94       		.byte	0x94
 4183 06b6 00000000 		.4byte	.LFB67
 4184 06ba 2A000000 		.4byte	.LFE67-.LFB67
 4185 06be 01       		.uleb128 0x1
 4186 06bf 9C       		.byte	0x9c
 4187 06c0 14       		.uleb128 0x14
 4188 06c1 37030000 		.4byte	.LASF109
 4189 06c5 01       		.byte	0x1
 4190 06c6 B9       		.byte	0xb9
 4191 06c7 00000000 		.4byte	.LFB68
 4192 06cb 50000000 		.4byte	.LFE68-.LFB68
 4193 06cf 01       		.uleb128 0x1
 4194 06d0 9C       		.byte	0x9c
 4195 06d1 E4060000 		.4byte	0x6e4
 4196 06d5 15       		.uleb128 0x15
 4197 06d6 70040000 		.4byte	.LASF110
 4198 06da 01       		.byte	0x1
 4199 06db B9       		.byte	0xb9
 4200 06dc 81000000 		.4byte	0x81
 4201 06e0 02       		.uleb128 0x2
 4202 06e1 91       		.byte	0x91
 4203 06e2 77       		.sleb128 -9
 4204 06e3 00       		.byte	0
 4205 06e4 16       		.uleb128 0x16
 4206 06e5 43080000 		.4byte	.LASF114
 4207 06e9 01       		.byte	0x1
 4208 06ea D0       		.byte	0xd0
 4209 06eb 81000000 		.4byte	0x81
 4210 06ef 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 96


 4211 06f3 48000000 		.4byte	.LFE69-.LFB69
 4212 06f7 01       		.uleb128 0x1
 4213 06f8 9C       		.byte	0x9c
 4214 06f9 1A070000 		.4byte	0x71a
 4215 06fd 15       		.uleb128 0x15
 4216 06fe 99040000 		.4byte	.LASF111
 4217 0702 01       		.byte	0x1
 4218 0703 D0       		.byte	0xd0
 4219 0704 1A070000 		.4byte	0x71a
 4220 0708 02       		.uleb128 0x2
 4221 0709 91       		.byte	0x91
 4222 070a 74       		.sleb128 -12
 4223 070b 15       		.uleb128 0x15
 4224 070c 70040000 		.4byte	.LASF110
 4225 0710 01       		.byte	0x1
 4226 0711 D0       		.byte	0xd0
 4227 0712 81000000 		.4byte	0x81
 4228 0716 02       		.uleb128 0x2
 4229 0717 91       		.byte	0x91
 4230 0718 73       		.sleb128 -13
 4231 0719 00       		.byte	0
 4232 071a 06       		.uleb128 0x6
 4233 071b 04       		.byte	0x4
 4234 071c 98050000 		.4byte	0x598
 4235 0720 17       		.uleb128 0x17
 4236 0721 0A060000 		.4byte	.LASF112
 4237 0725 01       		.byte	0x1
 4238 0726 E5       		.byte	0xe5
 4239 0727 00000000 		.4byte	.LFB70
 4240 072b 1E000000 		.4byte	.LFE70-.LFB70
 4241 072f 01       		.uleb128 0x1
 4242 0730 9C       		.byte	0x9c
 4243 0731 44070000 		.4byte	0x744
 4244 0735 15       		.uleb128 0x15
 4245 0736 6D060000 		.4byte	.LASF113
 4246 073a 01       		.byte	0x1
 4247 073b E5       		.byte	0xe5
 4248 073c 1A070000 		.4byte	0x71a
 4249 0740 02       		.uleb128 0x2
 4250 0741 91       		.byte	0x91
 4251 0742 74       		.sleb128 -12
 4252 0743 00       		.byte	0
 4253 0744 18       		.uleb128 0x18
 4254 0745 40050000 		.4byte	.LASF115
 4255 0749 01       		.byte	0x1
 4256 074a EE       		.byte	0xee
 4257 074b 98050000 		.4byte	0x598
 4258 074f 00000000 		.4byte	.LFB71
 4259 0753 46000000 		.4byte	.LFE71-.LFB71
 4260 0757 01       		.uleb128 0x1
 4261 0758 9C       		.byte	0x9c
 4262 0759 96070000 		.4byte	0x796
 4263 075d 15       		.uleb128 0x15
 4264 075e AA020000 		.4byte	.LASF93
 4265 0762 01       		.byte	0x1
 4266 0763 EE       		.byte	0xee
 4267 0764 8D000000 		.4byte	0x8d
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 97


 4268 0768 02       		.uleb128 0x2
 4269 0769 91       		.byte	0x91
 4270 076a 6A       		.sleb128 -22
 4271 076b 15       		.uleb128 0x15
 4272 076c FB070000 		.4byte	.LASF95
 4273 0770 01       		.byte	0x1
 4274 0771 EE       		.byte	0xee
 4275 0772 81000000 		.4byte	0x81
 4276 0776 02       		.uleb128 0x2
 4277 0777 91       		.byte	0x91
 4278 0778 69       		.sleb128 -23
 4279 0779 15       		.uleb128 0x15
 4280 077a 5A000000 		.4byte	.LASF96
 4281 077e 01       		.byte	0x1
 4282 077f EE       		.byte	0xee
 4283 0780 81000000 		.4byte	0x81
 4284 0784 02       		.uleb128 0x2
 4285 0785 91       		.byte	0x91
 4286 0786 68       		.sleb128 -24
 4287 0787 11       		.uleb128 0x11
 4288 0788 93070000 		.4byte	.LASF116
 4289 078c 01       		.byte	0x1
 4290 078d F1       		.byte	0xf1
 4291 078e 98050000 		.4byte	0x598
 4292 0792 02       		.uleb128 0x2
 4293 0793 91       		.byte	0x91
 4294 0794 70       		.sleb128 -16
 4295 0795 00       		.byte	0
 4296 0796 19       		.uleb128 0x19
 4297 0797 7C060000 		.4byte	.LASF118
 4298 079b 01       		.byte	0x1
 4299 079c 0701     		.2byte	0x107
 4300 079e 00000000 		.4byte	.LFB72
 4301 07a2 E0000000 		.4byte	.LFE72-.LFB72
 4302 07a6 01       		.uleb128 0x1
 4303 07a7 9C       		.byte	0x9c
 4304 07a8 ED070000 		.4byte	0x7ed
 4305 07ac 1A       		.uleb128 0x1a
 4306 07ad 00000000 		.4byte	.LASF119
 4307 07b1 01       		.byte	0x1
 4308 07b2 4301     		.2byte	0x143
 4309 07b4 C9010000 		.4byte	0x1c9
 4310 07b8 03       		.uleb128 0x3
 4311 07b9 91       		.byte	0x91
 4312 07ba EC7C     		.sleb128 -404
 4313 07bc 1A       		.uleb128 0x1a
 4314 07bd 5A010000 		.4byte	.LASF120
 4315 07c1 01       		.byte	0x1
 4316 07c2 4801     		.2byte	0x148
 4317 07c4 C9010000 		.4byte	0x1c9
 4318 07c8 03       		.uleb128 0x3
 4319 07c9 91       		.byte	0x91
 4320 07ca E879     		.sleb128 -792
 4321 07cc 1A       		.uleb128 0x1a
 4322 07cd CE070000 		.4byte	.LASF121
 4323 07d1 01       		.byte	0x1
 4324 07d2 4C01     		.2byte	0x14c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 98


 4325 07d4 C9010000 		.4byte	0x1c9
 4326 07d8 03       		.uleb128 0x3
 4327 07d9 91       		.byte	0x91
 4328 07da E476     		.sleb128 -1180
 4329 07dc 1A       		.uleb128 0x1a
 4330 07dd 23040000 		.4byte	.LASF122
 4331 07e1 01       		.byte	0x1
 4332 07e2 5001     		.2byte	0x150
 4333 07e4 C9010000 		.4byte	0x1c9
 4334 07e8 03       		.uleb128 0x3
 4335 07e9 91       		.byte	0x91
 4336 07ea E073     		.sleb128 -1568
 4337 07ec 00       		.byte	0
 4338 07ed 1B       		.uleb128 0x1b
 4339 07ee 59080000 		.4byte	.LASF179
 4340 07f2 01       		.byte	0x1
 4341 07f3 5A01     		.2byte	0x15a
 4342 07f5 68000000 		.4byte	0x68
 4343 07f9 00000000 		.4byte	.LFB73
 4344 07fd 1E000000 		.4byte	.LFE73-.LFB73
 4345 0801 01       		.uleb128 0x1
 4346 0802 9C       		.byte	0x9c
 4347 0803 1C       		.uleb128 0x1c
 4348 0804 5E020000 		.4byte	.LASF123
 4349 0808 01       		.byte	0x1
 4350 0809 7001     		.2byte	0x170
 4351 080b 81000000 		.4byte	0x81
 4352 080f 00000000 		.4byte	.LFB74
 4353 0813 30040000 		.4byte	.LFE74-.LFB74
 4354 0817 01       		.uleb128 0x1
 4355 0818 9C       		.byte	0x9c
 4356 0819 5D090000 		.4byte	0x95d
 4357 081d 1D       		.uleb128 0x1d
 4358 081e 62000000 		.4byte	.LBB2
 4359 0822 B8030000 		.4byte	.LBE2-.LBB2
 4360 0826 1A       		.uleb128 0x1a
 4361 0827 53050000 		.4byte	.LASF124
 4362 082b 01       		.byte	0x1
 4363 082c A001     		.2byte	0x1a0
 4364 082e 41040000 		.4byte	0x441
 4365 0832 02       		.uleb128 0x2
 4366 0833 91       		.byte	0x91
 4367 0834 48       		.sleb128 -56
 4368 0835 1A       		.uleb128 0x1a
 4369 0836 36020000 		.4byte	.LASF125
 4370 083a 01       		.byte	0x1
 4371 083b A501     		.2byte	0x1a5
 4372 083d 41040000 		.4byte	0x441
 4373 0841 03       		.uleb128 0x3
 4374 0842 91       		.byte	0x91
 4375 0843 B47F     		.sleb128 -76
 4376 0845 1A       		.uleb128 0x1a
 4377 0846 88030000 		.4byte	.LASF126
 4378 084a 01       		.byte	0x1
 4379 084b B801     		.2byte	0x1b8
 4380 084d 8D000000 		.4byte	0x8d
 4381 0851 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 99


 4382 0852 91       		.byte	0x91
 4383 0853 66       		.sleb128 -26
 4384 0854 1A       		.uleb128 0x1a
 4385 0855 0E040000 		.4byte	.LASF127
 4386 0859 01       		.byte	0x1
 4387 085a B901     		.2byte	0x1b9
 4388 085c 41040000 		.4byte	0x441
 4389 0860 03       		.uleb128 0x3
 4390 0861 91       		.byte	0x91
 4391 0862 A07F     		.sleb128 -96
 4392 0864 1A       		.uleb128 0x1a
 4393 0865 32070000 		.4byte	.LASF128
 4394 0869 01       		.byte	0x1
 4395 086a CE01     		.2byte	0x1ce
 4396 086c 5D090000 		.4byte	0x95d
 4397 0870 03       		.uleb128 0x3
 4398 0871 91       		.byte	0x91
 4399 0872 B875     		.sleb128 -1352
 4400 0874 1A       		.uleb128 0x1a
 4401 0875 AE070000 		.4byte	.LASF30
 4402 0879 01       		.byte	0x1
 4403 087a CF01     		.2byte	0x1cf
 4404 087c 81000000 		.4byte	0x81
 4405 0880 02       		.uleb128 0x2
 4406 0881 91       		.byte	0x91
 4407 0882 65       		.sleb128 -27
 4408 0883 1A       		.uleb128 0x1a
 4409 0884 FB060000 		.4byte	.LASF129
 4410 0888 01       		.byte	0x1
 4411 0889 D601     		.2byte	0x1d6
 4412 088b EC000000 		.4byte	0xec
 4413 088f 02       		.uleb128 0x2
 4414 0890 91       		.byte	0x91
 4415 0891 6C       		.sleb128 -20
 4416 0892 1A       		.uleb128 0x1a
 4417 0893 77010000 		.4byte	.LASF130
 4418 0897 01       		.byte	0x1
 4419 0898 DA01     		.2byte	0x1da
 4420 089a A5000000 		.4byte	0xa5
 4421 089e 02       		.uleb128 0x2
 4422 089f 91       		.byte	0x91
 4423 08a0 64       		.sleb128 -28
 4424 08a1 1A       		.uleb128 0x1a
 4425 08a2 67020000 		.4byte	.LASF131
 4426 08a6 01       		.byte	0x1
 4427 08a7 0A02     		.2byte	0x20a
 4428 08a9 4C000000 		.4byte	0x4c
 4429 08ad 02       		.uleb128 0x2
 4430 08ae 91       		.byte	0x91
 4431 08af 5C       		.sleb128 -36
 4432 08b0 1E       		.uleb128 0x1e
 4433 08b1 CE000000 		.4byte	.LBB3
 4434 08b5 2C000000 		.4byte	.LBE3-.LBB3
 4435 08b9 DD080000 		.4byte	0x8dd
 4436 08bd 1A       		.uleb128 0x1a
 4437 08be A8060000 		.4byte	.LASF132
 4438 08c2 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 100


 4439 08c3 AD01     		.2byte	0x1ad
 4440 08c5 8D000000 		.4byte	0x8d
 4441 08c9 02       		.uleb128 0x2
 4442 08ca 91       		.byte	0x91
 4443 08cb 68       		.sleb128 -24
 4444 08cc 1A       		.uleb128 0x1a
 4445 08cd E9010000 		.4byte	.LASF133
 4446 08d1 01       		.byte	0x1
 4447 08d2 AE01     		.2byte	0x1ae
 4448 08d4 41040000 		.4byte	0x441
 4449 08d8 03       		.uleb128 0x3
 4450 08d9 91       		.byte	0x91
 4451 08da 8C7F     		.sleb128 -116
 4452 08dc 00       		.byte	0
 4453 08dd 1E       		.uleb128 0x1e
 4454 08de FC000000 		.4byte	.LBB4
 4455 08e2 20000000 		.4byte	.LBE4-.LBB4
 4456 08e6 FB080000 		.4byte	0x8fb
 4457 08ea 1A       		.uleb128 0x1a
 4458 08eb E9010000 		.4byte	.LASF133
 4459 08ef 01       		.byte	0x1
 4460 08f0 B201     		.2byte	0x1b2
 4461 08f2 41040000 		.4byte	0x441
 4462 08f6 03       		.uleb128 0x3
 4463 08f7 91       		.byte	0x91
 4464 08f8 F87E     		.sleb128 -136
 4465 08fa 00       		.byte	0
 4466 08fb 1E       		.uleb128 0x1e
 4467 08fc 3C020000 		.4byte	.LBB5
 4468 0900 BC000000 		.4byte	.LBE5-.LBB5
 4469 0904 32090000 		.4byte	0x932
 4470 0908 1A       		.uleb128 0x1a
 4471 0909 4C050000 		.4byte	.LASF134
 4472 090d 01       		.byte	0x1
 4473 090e DF01     		.2byte	0x1df
 4474 0910 A5000000 		.4byte	0xa5
 4475 0914 02       		.uleb128 0x2
 4476 0915 91       		.byte	0x91
 4477 0916 6B       		.sleb128 -21
 4478 0917 1D       		.uleb128 0x1d
 4479 0918 44020000 		.4byte	.LBB6
 4480 091c 9A000000 		.4byte	.LBE6-.LBB6
 4481 0920 1A       		.uleb128 0x1a
 4482 0921 55030000 		.4byte	.LASF135
 4483 0925 01       		.byte	0x1
 4484 0926 E101     		.2byte	0x1e1
 4485 0928 6D090000 		.4byte	0x96d
 4486 092c 03       		.uleb128 0x3
 4487 092d 91       		.byte	0x91
 4488 092e 8077     		.sleb128 -1152
 4489 0930 00       		.byte	0
 4490 0931 00       		.byte	0
 4491 0932 1D       		.uleb128 0x1d
 4492 0933 12030000 		.4byte	.LBB7
 4493 0937 3A000000 		.4byte	.LBE7-.LBB7
 4494 093b 1A       		.uleb128 0x1a
 4495 093c 44020000 		.4byte	.LASF136
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 101


 4496 0940 01       		.byte	0x1
 4497 0941 0102     		.2byte	0x201
 4498 0943 68000000 		.4byte	0x68
 4499 0947 02       		.uleb128 0x2
 4500 0948 91       		.byte	0x91
 4501 0949 60       		.sleb128 -32
 4502 094a 1A       		.uleb128 0x1a
 4503 094b 15060000 		.4byte	.LASF137
 4504 094f 01       		.byte	0x1
 4505 0950 0202     		.2byte	0x202
 4506 0952 77060000 		.4byte	0x677
 4507 0956 03       		.uleb128 0x3
 4508 0957 91       		.byte	0x91
 4509 0958 EC7E     		.sleb128 -148
 4510 095a 00       		.byte	0
 4511 095b 00       		.byte	0
 4512 095c 00       		.byte	0
 4513 095d 07       		.uleb128 0x7
 4514 095e D7000000 		.4byte	0xd7
 4515 0962 6D090000 		.4byte	0x96d
 4516 0966 08       		.uleb128 0x8
 4517 0967 E5000000 		.4byte	0xe5
 4518 096b C7       		.byte	0xc7
 4519 096c 00       		.byte	0
 4520 096d 07       		.uleb128 0x7
 4521 096e D7000000 		.4byte	0xd7
 4522 0972 7E090000 		.4byte	0x97e
 4523 0976 1F       		.uleb128 0x1f
 4524 0977 E5000000 		.4byte	0xe5
 4525 097b E803     		.2byte	0x3e8
 4526 097d 00       		.byte	0
 4527 097e 1C       		.uleb128 0x1c
 4528 097f 8D050000 		.4byte	.LASF138
 4529 0983 01       		.byte	0x1
 4530 0984 1F02     		.2byte	0x21f
 4531 0986 81000000 		.4byte	0x81
 4532 098a 00000000 		.4byte	.LFB75
 4533 098e 44000000 		.4byte	.LFE75-.LFB75
 4534 0992 01       		.uleb128 0x1
 4535 0993 9C       		.byte	0x9c
 4536 0994 B2090000 		.4byte	0x9b2
 4537 0998 1D       		.uleb128 0x1d
 4538 0999 20000000 		.4byte	.LBB8
 4539 099d 1A000000 		.4byte	.LBE8-.LBB8
 4540 09a1 1A       		.uleb128 0x1a
 4541 09a2 67020000 		.4byte	.LASF131
 4542 09a6 01       		.byte	0x1
 4543 09a7 2A02     		.2byte	0x22a
 4544 09a9 4C000000 		.4byte	0x4c
 4545 09ad 02       		.uleb128 0x2
 4546 09ae 91       		.byte	0x91
 4547 09af 74       		.sleb128 -12
 4548 09b0 00       		.byte	0
 4549 09b1 00       		.byte	0
 4550 09b2 1C       		.uleb128 0x1c
 4551 09b3 B6030000 		.4byte	.LASF139
 4552 09b7 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 102


 4553 09b8 3F02     		.2byte	0x23f
 4554 09ba 81000000 		.4byte	0x81
 4555 09be 00000000 		.4byte	.LFB76
 4556 09c2 C40E0000 		.4byte	.LFE76-.LFB76
 4557 09c6 01       		.uleb128 0x1
 4558 09c7 9C       		.byte	0x9c
 4559 09c8 720A0000 		.4byte	0xa72
 4560 09cc 1A       		.uleb128 0x1a
 4561 09cd 13050000 		.4byte	.LASF72
 4562 09d1 01       		.byte	0x1
 4563 09d2 4202     		.2byte	0x242
 4564 09d4 4C000000 		.4byte	0x4c
 4565 09d8 02       		.uleb128 0x2
 4566 09d9 91       		.byte	0x91
 4567 09da 5C       		.sleb128 -36
 4568 09db 1A       		.uleb128 0x1a
 4569 09dc 01070000 		.4byte	.LASF140
 4570 09e0 01       		.byte	0x1
 4571 09e1 4302     		.2byte	0x243
 4572 09e3 720A0000 		.4byte	0xa72
 4573 09e7 03       		.uleb128 0x3
 4574 09e8 91       		.byte	0x91
 4575 09e9 BC7F     		.sleb128 -68
 4576 09eb 1A       		.uleb128 0x1a
 4577 09ec FB020000 		.4byte	.LASF71
 4578 09f0 01       		.byte	0x1
 4579 09f1 4702     		.2byte	0x247
 4580 09f3 41040000 		.4byte	0x441
 4581 09f7 03       		.uleb128 0x3
 4582 09f8 91       		.byte	0x91
 4583 09f9 A87F     		.sleb128 -88
 4584 09fb 1A       		.uleb128 0x1a
 4585 09fc DD060000 		.4byte	.LASF141
 4586 0a00 01       		.byte	0x1
 4587 0a01 4802     		.2byte	0x248
 4588 0a03 820A0000 		.4byte	0xa82
 4589 0a07 03       		.uleb128 0x3
 4590 0a08 91       		.byte	0x91
 4591 0a09 FC7C     		.sleb128 -388
 4592 0a0b 1A       		.uleb128 0x1a
 4593 0a0c 60030000 		.4byte	.LASF142
 4594 0a10 01       		.byte	0x1
 4595 0a11 FB02     		.2byte	0x2fb
 4596 0a13 65030000 		.4byte	0x365
 4597 0a17 03       		.uleb128 0x3
 4598 0a18 91       		.byte	0x91
 4599 0a19 E87C     		.sleb128 -408
 4600 0a1b 1E       		.uleb128 0x1e
 4601 0a1c 2A000000 		.4byte	.LBB9
 4602 0a20 AE000000 		.4byte	.LBE9-.LBB9
 4603 0a24 390A0000 		.4byte	0xa39
 4604 0a28 1A       		.uleb128 0x1a
 4605 0a29 56070000 		.4byte	.LASF143
 4606 0a2d 01       		.byte	0x1
 4607 0a2e 4E02     		.2byte	0x24e
 4608 0a30 1D020000 		.4byte	0x21d
 4609 0a34 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 103


 4610 0a35 91       		.byte	0x91
 4611 0a36 CC7C     		.sleb128 -436
 4612 0a38 00       		.byte	0
 4613 0a39 1E       		.uleb128 0x1e
 4614 0a3a E2000000 		.4byte	.LBB10
 4615 0a3e E60B0000 		.4byte	.LBE10-.LBB10
 4616 0a42 570A0000 		.4byte	0xa57
 4617 0a46 1A       		.uleb128 0x1a
 4618 0a47 7B070000 		.4byte	.LASF144
 4619 0a4b 01       		.byte	0x1
 4620 0a4c 6602     		.2byte	0x266
 4621 0a4e 15030000 		.4byte	0x315
 4622 0a52 03       		.uleb128 0x3
 4623 0a53 91       		.byte	0x91
 4624 0a54 E07A     		.sleb128 -672
 4625 0a56 00       		.byte	0
 4626 0a57 1D       		.uleb128 0x1d
 4627 0a58 600D0000 		.4byte	.LBB11
 4628 0a5c FC000000 		.4byte	.LBE11-.LBB11
 4629 0a60 1A       		.uleb128 0x1a
 4630 0a61 A3070000 		.4byte	.LASF145
 4631 0a65 01       		.byte	0x1
 4632 0a66 1703     		.2byte	0x317
 4633 0a68 91030000 		.4byte	0x391
 4634 0a6c 03       		.uleb128 0x3
 4635 0a6d 91       		.byte	0x91
 4636 0a6e C47C     		.sleb128 -444
 4637 0a70 00       		.byte	0
 4638 0a71 00       		.byte	0
 4639 0a72 07       		.uleb128 0x7
 4640 0a73 D7000000 		.4byte	0xd7
 4641 0a77 820A0000 		.4byte	0xa82
 4642 0a7b 08       		.uleb128 0x8
 4643 0a7c E5000000 		.4byte	0xe5
 4644 0a80 1F       		.byte	0x1f
 4645 0a81 00       		.byte	0
 4646 0a82 07       		.uleb128 0x7
 4647 0a83 D7000000 		.4byte	0xd7
 4648 0a87 930A0000 		.4byte	0xa93
 4649 0a8b 1F       		.uleb128 0x1f
 4650 0a8c E5000000 		.4byte	0xe5
 4651 0a90 2B01     		.2byte	0x12b
 4652 0a92 00       		.byte	0
 4653 0a93 20       		.uleb128 0x20
 4654 0a94 23030000 		.4byte	.LASF146
 4655 0a98 01       		.byte	0x1
 4656 0a99 3D03     		.2byte	0x33d
 4657 0a9b 81000000 		.4byte	0x81
 4658 0a9f 00000000 		.4byte	.LFB77
 4659 0aa3 74000000 		.4byte	.LFE77-.LFB77
 4660 0aa7 01       		.uleb128 0x1
 4661 0aa8 9C       		.byte	0x9c
 4662 0aa9 D90A0000 		.4byte	0xad9
 4663 0aad 21       		.uleb128 0x21
 4664 0aae 13050000 		.4byte	.LASF72
 4665 0ab2 01       		.byte	0x1
 4666 0ab3 3D03     		.2byte	0x33d
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 104


 4667 0ab5 4C000000 		.4byte	0x4c
 4668 0ab9 02       		.uleb128 0x2
 4669 0aba 91       		.byte	0x91
 4670 0abb 64       		.sleb128 -28
 4671 0abc 22       		.uleb128 0x22
 4672 0abd 7400     		.ascii	"t\000"
 4673 0abf 01       		.byte	0x1
 4674 0ac0 4403     		.2byte	0x344
 4675 0ac2 D90A0000 		.4byte	0xad9
 4676 0ac6 02       		.uleb128 0x2
 4677 0ac7 91       		.byte	0x91
 4678 0ac8 74       		.sleb128 -12
 4679 0ac9 1A       		.uleb128 0x1a
 4680 0aca F2040000 		.4byte	.LASF147
 4681 0ace 01       		.byte	0x1
 4682 0acf 4903     		.2byte	0x349
 4683 0ad1 6B010000 		.4byte	0x16b
 4684 0ad5 02       		.uleb128 0x2
 4685 0ad6 91       		.byte	0x91
 4686 0ad7 68       		.sleb128 -24
 4687 0ad8 00       		.byte	0
 4688 0ad9 06       		.uleb128 0x6
 4689 0ada 04       		.byte	0x4
 4690 0adb 9C030000 		.4byte	0x39c
 4691 0adf 20       		.uleb128 0x20
 4692 0ae0 B9020000 		.4byte	.LASF148
 4693 0ae4 01       		.byte	0x1
 4694 0ae5 6603     		.2byte	0x366
 4695 0ae7 81000000 		.4byte	0x81
 4696 0aeb 00000000 		.4byte	.LFB78
 4697 0aef 38010000 		.4byte	.LFE78-.LFB78
 4698 0af3 01       		.uleb128 0x1
 4699 0af4 9C       		.byte	0x9c
 4700 0af5 580B0000 		.4byte	0xb58
 4701 0af9 21       		.uleb128 0x21
 4702 0afa 01030000 		.4byte	.LASF149
 4703 0afe 01       		.byte	0x1
 4704 0aff 6603     		.2byte	0x366
 4705 0b01 EC000000 		.4byte	0xec
 4706 0b05 03       		.uleb128 0x3
 4707 0b06 91       		.byte	0x91
 4708 0b07 9C7E     		.sleb128 -228
 4709 0b09 21       		.uleb128 0x21
 4710 0b0a DB020000 		.4byte	.LASF150
 4711 0b0e 01       		.byte	0x1
 4712 0b0f 6603     		.2byte	0x366
 4713 0b11 68000000 		.4byte	0x68
 4714 0b15 03       		.uleb128 0x3
 4715 0b16 91       		.byte	0x91
 4716 0b17 987E     		.sleb128 -232
 4717 0b19 21       		.uleb128 0x21
 4718 0b1a 93040000 		.4byte	.LASF151
 4719 0b1e 01       		.byte	0x1
 4720 0b1f 6603     		.2byte	0x366
 4721 0b21 EC000000 		.4byte	0xec
 4722 0b25 03       		.uleb128 0x3
 4723 0b26 91       		.byte	0x91
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 105


 4724 0b27 947E     		.sleb128 -236
 4725 0b29 1A       		.uleb128 0x1a
 4726 0b2a DA010000 		.4byte	.LASF152
 4727 0b2e 01       		.byte	0x1
 4728 0b2f 6803     		.2byte	0x368
 4729 0b31 81000000 		.4byte	0x81
 4730 0b35 02       		.uleb128 0x2
 4731 0b36 91       		.byte	0x91
 4732 0b37 77       		.sleb128 -9
 4733 0b38 1A       		.uleb128 0x1a
 4734 0b39 45000000 		.4byte	.LASF153
 4735 0b3d 01       		.byte	0x1
 4736 0b3e 6F03     		.2byte	0x36f
 4737 0b40 580B0000 		.4byte	0xb58
 4738 0b44 02       		.uleb128 0x2
 4739 0b45 91       		.byte	0x91
 4740 0b46 68       		.sleb128 -24
 4741 0b47 1A       		.uleb128 0x1a
 4742 0b48 32070000 		.4byte	.LASF128
 4743 0b4c 01       		.byte	0x1
 4744 0b4d 7703     		.2byte	0x377
 4745 0b4f 5D090000 		.4byte	0x95d
 4746 0b53 03       		.uleb128 0x3
 4747 0b54 91       		.byte	0x91
 4748 0b55 A07E     		.sleb128 -224
 4749 0b57 00       		.byte	0
 4750 0b58 07       		.uleb128 0x7
 4751 0b59 D7000000 		.4byte	0xd7
 4752 0b5d 680B0000 		.4byte	0xb68
 4753 0b61 08       		.uleb128 0x8
 4754 0b62 E5000000 		.4byte	0xe5
 4755 0b66 0B       		.byte	0xb
 4756 0b67 00       		.byte	0
 4757 0b68 23       		.uleb128 0x23
 4758 0b69 4D010000 		.4byte	.LASF154
 4759 0b6d 0E       		.byte	0xe
 4760 0b6e 1207     		.2byte	0x712
 4761 0b70 740B0000 		.4byte	0xb74
 4762 0b74 0C       		.uleb128 0xc
 4763 0b75 76000000 		.4byte	0x76
 4764 0b79 24       		.uleb128 0x24
 4765 0b7a 35000000 		.4byte	.LASF155
 4766 0b7e 0B       		.byte	0xb
 4767 0b7f 11       		.byte	0x11
 4768 0b80 4D050000 		.4byte	0x54d
 4769 0b84 05       		.uleb128 0x5
 4770 0b85 03       		.byte	0x3
 4771 0b86 00000000 		.4byte	buffer_overflow
 4772 0b8a 24       		.uleb128 0x24
 4773 0b8b 7A040000 		.4byte	.LASF156
 4774 0b8f 0B       		.byte	0xb
 4775 0b90 22       		.byte	0x22
 4776 0b91 8D000000 		.4byte	0x8d
 4777 0b95 05       		.uleb128 0x5
 4778 0b96 03       		.byte	0x3
 4779 0b97 00000000 		.4byte	dataPointsInStack
 4780 0b9b 24       		.uleb128 0x24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 106


 4781 0b9c B5070000 		.4byte	.LASF157
 4782 0ba0 0B       		.byte	0xb
 4783 0ba1 23       		.byte	0x23
 4784 0ba2 8D000000 		.4byte	0x8d
 4785 0ba6 05       		.uleb128 0x5
 4786 0ba7 03       		.byte	0x3
 4787 0ba8 00000000 		.4byte	dataPointsInStackDesired
 4788 0bac 07       		.uleb128 0x7
 4789 0bad 51040000 		.4byte	0x451
 4790 0bb1 BC0B0000 		.4byte	0xbbc
 4791 0bb5 08       		.uleb128 0x8
 4792 0bb6 E5000000 		.4byte	0xe5
 4793 0bba 95       		.byte	0x95
 4794 0bbb 00       		.byte	0
 4795 0bbc 24       		.uleb128 0x24
 4796 0bbd C7030000 		.4byte	.LASF158
 4797 0bc1 0B       		.byte	0xb
 4798 0bc2 24       		.byte	0x24
 4799 0bc3 AC0B0000 		.4byte	0xbac
 4800 0bc7 05       		.uleb128 0x5
 4801 0bc8 03       		.byte	0x3
 4802 0bc9 00000000 		.4byte	data
 4803 0bcd 24       		.uleb128 0x24
 4804 0bce 34010000 		.4byte	.LASF159
 4805 0bd2 0C       		.byte	0xc
 4806 0bd3 20       		.byte	0x20
 4807 0bd4 81000000 		.4byte	0x81
 4808 0bd8 05       		.uleb128 0x5
 4809 0bd9 03       		.byte	0x3
 4810 0bda 00000000 		.4byte	modem_state
 4811 0bde 24       		.uleb128 0x24
 4812 0bdf 37040000 		.4byte	.LASF160
 4813 0be3 0C       		.byte	0xc
 4814 0be4 63       		.byte	0x63
 4815 0be5 BD000000 		.4byte	0xbd
 4816 0be9 05       		.uleb128 0x5
 4817 0bea 03       		.byte	0x3
 4818 0beb 00000000 		.4byte	modem_start_time_stamp
 4819 0bef 24       		.uleb128 0x24
 4820 0bf0 DD030000 		.4byte	.LASF98
 4821 0bf4 0C       		.byte	0xc
 4822 0bf5 64       		.byte	0x64
 4823 0bf6 89040000 		.4byte	0x489
 4824 0bfa 05       		.uleb128 0x5
 4825 0bfb 03       		.byte	0x3
 4826 0bfc 00000000 		.4byte	modem_info
 4827 0c00 24       		.uleb128 0x24
 4828 0c01 1B070000 		.4byte	.LASF161
 4829 0c05 0C       		.byte	0xc
 4830 0c06 65       		.byte	0x65
 4831 0c07 FD040000 		.4byte	0x4fd
 4832 0c0b 05       		.uleb128 0x5
 4833 0c0c 03       		.byte	0x3
 4834 0c0d 00000000 		.4byte	modem_stats
 4835 0c11 24       		.uleb128 0x24
 4836 0c12 2B050000 		.4byte	.LASF162
 4837 0c16 0C       		.byte	0xc
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 107


 4838 0c17 66       		.byte	0x66
 4839 0c18 54050000 		.4byte	0x554
 4840 0c1c 05       		.uleb128 0x5
 4841 0c1d 03       		.byte	0x3
 4842 0c1e 00000000 		.4byte	updatable_parameters
 4843 0c22 07       		.uleb128 0x7
 4844 0c23 D7000000 		.4byte	0xd7
 4845 0c27 330C0000 		.4byte	0xc33
 4846 0c2b 1F       		.uleb128 0x1f
 4847 0c2c E5000000 		.4byte	0xe5
 4848 0c30 0F27     		.2byte	0x270f
 4849 0c32 00       		.byte	0
 4850 0c33 24       		.uleb128 0x24
 4851 0c34 6B050000 		.4byte	.LASF163
 4852 0c38 0D       		.byte	0xd
 4853 0c39 18       		.byte	0x18
 4854 0c3a 220C0000 		.4byte	0xc22
 4855 0c3e 05       		.uleb128 0x5
 4856 0c3f 03       		.byte	0x3
 4857 0c40 00000000 		.4byte	http_request
 4858 0c44 24       		.uleb128 0x24
 4859 0c45 EB070000 		.4byte	.LASF164
 4860 0c49 0D       		.byte	0xd
 4861 0c4a 19       		.byte	0x19
 4862 0c4b 220C0000 		.4byte	0xc22
 4863 0c4f 05       		.uleb128 0x5
 4864 0c50 03       		.byte	0x3
 4865 0c51 00000000 		.4byte	http_body
 4866 0c55 24       		.uleb128 0x24
 4867 0c56 27070000 		.4byte	.LASF165
 4868 0c5a 0D       		.byte	0xd
 4869 0c5b 1A       		.byte	0x1a
 4870 0c5c 5D090000 		.4byte	0x95d
 4871 0c60 05       		.uleb128 0x5
 4872 0c61 03       		.byte	0x3
 4873 0c62 00000000 		.4byte	http_route
 4874 0c66 24       		.uleb128 0x24
 4875 0c67 55060000 		.4byte	.LASF166
 4876 0c6b 0D       		.byte	0xd
 4877 0c6c 41       		.byte	0x41
 4878 0c6d CF050000 		.4byte	0x5cf
 4879 0c71 05       		.uleb128 0x5
 4880 0c72 03       		.byte	0x3
 4881 0c73 00000000 		.4byte	system_info
 4882 0c77 24       		.uleb128 0x24
 4883 0c78 F0050000 		.4byte	.LASF167
 4884 0c7c 0D       		.byte	0xd
 4885 0c7d 53       		.byte	0x53
 4886 0c7e 0B060000 		.4byte	0x60b
 4887 0c82 05       		.uleb128 0x5
 4888 0c83 03       		.byte	0x3
 4889 0c84 00000000 		.4byte	system_settings
 4890 0c88 24       		.uleb128 0x24
 4891 0c89 40010000 		.4byte	.LASF168
 4892 0c8d 0D       		.byte	0xd
 4893 0c8e 6F       		.byte	0x6f
 4894 0c8f 98050000 		.4byte	0x598
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 108


 4895 0c93 05       		.uleb128 0x5
 4896 0c94 03       		.byte	0x3
 4897 0c95 00000000 		.4byte	alarmMeasure
 4898 0c99 24       		.uleb128 0x24
 4899 0c9a 84010000 		.4byte	.LASF169
 4900 0c9e 0D       		.byte	0xd
 4901 0c9f 70       		.byte	0x70
 4902 0ca0 81000000 		.4byte	0x81
 4903 0ca4 05       		.uleb128 0x5
 4904 0ca5 03       		.byte	0x3
 4905 0ca6 00000000 		.4byte	timeToMeasure
 4906 0caa 24       		.uleb128 0x24
 4907 0cab 0C030000 		.4byte	.LASF170
 4908 0caf 0D       		.byte	0xd
 4909 0cb0 71       		.byte	0x71
 4910 0cb1 98050000 		.4byte	0x598
 4911 0cb5 05       		.uleb128 0x5
 4912 0cb6 03       		.byte	0x3
 4913 0cb7 00000000 		.4byte	alarmSync
 4914 0cbb 24       		.uleb128 0x24
 4915 0cbc AA010000 		.4byte	.LASF171
 4916 0cc0 0D       		.byte	0xd
 4917 0cc1 72       		.byte	0x72
 4918 0cc2 81000000 		.4byte	0x81
 4919 0cc6 05       		.uleb128 0x5
 4920 0cc7 03       		.byte	0x3
 4921 0cc8 00000000 		.4byte	timeToSync
 4922 0ccc 24       		.uleb128 0x24
 4923 0ccd FC040000 		.4byte	.LASF172
 4924 0cd1 0D       		.byte	0xd
 4925 0cd2 73       		.byte	0x73
 4926 0cd3 81000000 		.4byte	0x81
 4927 0cd7 05       		.uleb128 0x5
 4928 0cd8 03       		.byte	0x3
 4929 0cd9 00000000 		.4byte	timeToSycnRemoteParams
 4930 0cdd 25       		.uleb128 0x25
 4931 0cde 68657900 		.ascii	"hey\000"
 4932 0ce2 0D       		.byte	0xd
 4933 0ce3 74       		.byte	0x74
 4934 0ce4 81000000 		.4byte	0x81
 4935 0ce8 05       		.uleb128 0x5
 4936 0ce9 03       		.byte	0x3
 4937 0cea 00000000 		.4byte	hey
 4938 0cee 07       		.uleb128 0x7
 4939 0cef D7000000 		.4byte	0xd7
 4940 0cf3 FE0C0000 		.4byte	0xcfe
 4941 0cf7 08       		.uleb128 0x8
 4942 0cf8 E5000000 		.4byte	0xe5
 4943 0cfc 1D       		.byte	0x1d
 4944 0cfd 00       		.byte	0
 4945 0cfe 24       		.uleb128 0x24
 4946 0cff A3050000 		.4byte	.LASF173
 4947 0d03 01       		.byte	0x1
 4948 0d04 1D       		.byte	0x1d
 4949 0d05 EE0C0000 		.4byte	0xcee
 4950 0d09 05       		.uleb128 0x5
 4951 0d0a 03       		.byte	0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 109


 4952 0d0b 00000000 		.4byte	Data_fileName
 4953 0d0f 24       		.uleb128 0x24
 4954 0d10 7C030000 		.4byte	.LASF106
 4955 0d14 01       		.byte	0x1
 4956 0d15 1E       		.byte	0x1e
 4957 0d16 81000000 		.4byte	0x81
 4958 0d1a 05       		.uleb128 0x5
 4959 0d1b 03       		.byte	0x3
 4960 0d1c 00000000 		.4byte	try_counter
 4961 0d20 00       		.byte	0
 4962              		.section	.debug_abbrev,"",%progbits
 4963              	.Ldebug_abbrev0:
 4964 0000 01       		.uleb128 0x1
 4965 0001 11       		.uleb128 0x11
 4966 0002 01       		.byte	0x1
 4967 0003 25       		.uleb128 0x25
 4968 0004 0E       		.uleb128 0xe
 4969 0005 13       		.uleb128 0x13
 4970 0006 0B       		.uleb128 0xb
 4971 0007 03       		.uleb128 0x3
 4972 0008 0E       		.uleb128 0xe
 4973 0009 1B       		.uleb128 0x1b
 4974 000a 0E       		.uleb128 0xe
 4975 000b 55       		.uleb128 0x55
 4976 000c 17       		.uleb128 0x17
 4977 000d 11       		.uleb128 0x11
 4978 000e 01       		.uleb128 0x1
 4979 000f 10       		.uleb128 0x10
 4980 0010 17       		.uleb128 0x17
 4981 0011 00       		.byte	0
 4982 0012 00       		.byte	0
 4983 0013 02       		.uleb128 0x2
 4984 0014 24       		.uleb128 0x24
 4985 0015 00       		.byte	0
 4986 0016 0B       		.uleb128 0xb
 4987 0017 0B       		.uleb128 0xb
 4988 0018 3E       		.uleb128 0x3e
 4989 0019 0B       		.uleb128 0xb
 4990 001a 03       		.uleb128 0x3
 4991 001b 0E       		.uleb128 0xe
 4992 001c 00       		.byte	0
 4993 001d 00       		.byte	0
 4994 001e 03       		.uleb128 0x3
 4995 001f 16       		.uleb128 0x16
 4996 0020 00       		.byte	0
 4997 0021 03       		.uleb128 0x3
 4998 0022 0E       		.uleb128 0xe
 4999 0023 3A       		.uleb128 0x3a
 5000 0024 0B       		.uleb128 0xb
 5001 0025 3B       		.uleb128 0x3b
 5002 0026 0B       		.uleb128 0xb
 5003 0027 49       		.uleb128 0x49
 5004 0028 13       		.uleb128 0x13
 5005 0029 00       		.byte	0
 5006 002a 00       		.byte	0
 5007 002b 04       		.uleb128 0x4
 5008 002c 24       		.uleb128 0x24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 110


 5009 002d 00       		.byte	0
 5010 002e 0B       		.uleb128 0xb
 5011 002f 0B       		.uleb128 0xb
 5012 0030 3E       		.uleb128 0x3e
 5013 0031 0B       		.uleb128 0xb
 5014 0032 03       		.uleb128 0x3
 5015 0033 08       		.uleb128 0x8
 5016 0034 00       		.byte	0
 5017 0035 00       		.byte	0
 5018 0036 05       		.uleb128 0x5
 5019 0037 16       		.uleb128 0x16
 5020 0038 00       		.byte	0
 5021 0039 03       		.uleb128 0x3
 5022 003a 0E       		.uleb128 0xe
 5023 003b 3A       		.uleb128 0x3a
 5024 003c 0B       		.uleb128 0xb
 5025 003d 3B       		.uleb128 0x3b
 5026 003e 05       		.uleb128 0x5
 5027 003f 49       		.uleb128 0x49
 5028 0040 13       		.uleb128 0x13
 5029 0041 00       		.byte	0
 5030 0042 00       		.byte	0
 5031 0043 06       		.uleb128 0x6
 5032 0044 0F       		.uleb128 0xf
 5033 0045 00       		.byte	0
 5034 0046 0B       		.uleb128 0xb
 5035 0047 0B       		.uleb128 0xb
 5036 0048 49       		.uleb128 0x49
 5037 0049 13       		.uleb128 0x13
 5038 004a 00       		.byte	0
 5039 004b 00       		.byte	0
 5040 004c 07       		.uleb128 0x7
 5041 004d 01       		.uleb128 0x1
 5042 004e 01       		.byte	0x1
 5043 004f 49       		.uleb128 0x49
 5044 0050 13       		.uleb128 0x13
 5045 0051 01       		.uleb128 0x1
 5046 0052 13       		.uleb128 0x13
 5047 0053 00       		.byte	0
 5048 0054 00       		.byte	0
 5049 0055 08       		.uleb128 0x8
 5050 0056 21       		.uleb128 0x21
 5051 0057 00       		.byte	0
 5052 0058 49       		.uleb128 0x49
 5053 0059 13       		.uleb128 0x13
 5054 005a 2F       		.uleb128 0x2f
 5055 005b 0B       		.uleb128 0xb
 5056 005c 00       		.byte	0
 5057 005d 00       		.byte	0
 5058 005e 09       		.uleb128 0x9
 5059 005f 13       		.uleb128 0x13
 5060 0060 01       		.byte	0x1
 5061 0061 0B       		.uleb128 0xb
 5062 0062 0B       		.uleb128 0xb
 5063 0063 3A       		.uleb128 0x3a
 5064 0064 0B       		.uleb128 0xb
 5065 0065 3B       		.uleb128 0x3b
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 111


 5066 0066 0B       		.uleb128 0xb
 5067 0067 01       		.uleb128 0x1
 5068 0068 13       		.uleb128 0x13
 5069 0069 00       		.byte	0
 5070 006a 00       		.byte	0
 5071 006b 0A       		.uleb128 0xa
 5072 006c 0D       		.uleb128 0xd
 5073 006d 00       		.byte	0
 5074 006e 03       		.uleb128 0x3
 5075 006f 08       		.uleb128 0x8
 5076 0070 3A       		.uleb128 0x3a
 5077 0071 0B       		.uleb128 0xb
 5078 0072 3B       		.uleb128 0x3b
 5079 0073 0B       		.uleb128 0xb
 5080 0074 49       		.uleb128 0x49
 5081 0075 13       		.uleb128 0x13
 5082 0076 38       		.uleb128 0x38
 5083 0077 0B       		.uleb128 0xb
 5084 0078 00       		.byte	0
 5085 0079 00       		.byte	0
 5086 007a 0B       		.uleb128 0xb
 5087 007b 0D       		.uleb128 0xd
 5088 007c 00       		.byte	0
 5089 007d 03       		.uleb128 0x3
 5090 007e 0E       		.uleb128 0xe
 5091 007f 3A       		.uleb128 0x3a
 5092 0080 0B       		.uleb128 0xb
 5093 0081 3B       		.uleb128 0x3b
 5094 0082 0B       		.uleb128 0xb
 5095 0083 49       		.uleb128 0x49
 5096 0084 13       		.uleb128 0x13
 5097 0085 38       		.uleb128 0x38
 5098 0086 0B       		.uleb128 0xb
 5099 0087 00       		.byte	0
 5100 0088 00       		.byte	0
 5101 0089 0C       		.uleb128 0xc
 5102 008a 35       		.uleb128 0x35
 5103 008b 00       		.byte	0
 5104 008c 49       		.uleb128 0x49
 5105 008d 13       		.uleb128 0x13
 5106 008e 00       		.byte	0
 5107 008f 00       		.byte	0
 5108 0090 0D       		.uleb128 0xd
 5109 0091 13       		.uleb128 0x13
 5110 0092 01       		.byte	0x1
 5111 0093 0B       		.uleb128 0xb
 5112 0094 05       		.uleb128 0x5
 5113 0095 3A       		.uleb128 0x3a
 5114 0096 0B       		.uleb128 0xb
 5115 0097 3B       		.uleb128 0x3b
 5116 0098 0B       		.uleb128 0xb
 5117 0099 01       		.uleb128 0x1
 5118 009a 13       		.uleb128 0x13
 5119 009b 00       		.byte	0
 5120 009c 00       		.byte	0
 5121 009d 0E       		.uleb128 0xe
 5122 009e 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 112


 5123 009f 01       		.byte	0x1
 5124 00a0 03       		.uleb128 0x3
 5125 00a1 08       		.uleb128 0x8
 5126 00a2 0B       		.uleb128 0xb
 5127 00a3 0B       		.uleb128 0xb
 5128 00a4 3A       		.uleb128 0x3a
 5129 00a5 0B       		.uleb128 0xb
 5130 00a6 3B       		.uleb128 0x3b
 5131 00a7 0B       		.uleb128 0xb
 5132 00a8 01       		.uleb128 0x1
 5133 00a9 13       		.uleb128 0x13
 5134 00aa 00       		.byte	0
 5135 00ab 00       		.byte	0
 5136 00ac 0F       		.uleb128 0xf
 5137 00ad 2E       		.uleb128 0x2e
 5138 00ae 00       		.byte	0
 5139 00af 3F       		.uleb128 0x3f
 5140 00b0 19       		.uleb128 0x19
 5141 00b1 03       		.uleb128 0x3
 5142 00b2 0E       		.uleb128 0xe
 5143 00b3 3A       		.uleb128 0x3a
 5144 00b4 0B       		.uleb128 0xb
 5145 00b5 3B       		.uleb128 0x3b
 5146 00b6 0B       		.uleb128 0xb
 5147 00b7 27       		.uleb128 0x27
 5148 00b8 19       		.uleb128 0x19
 5149 00b9 11       		.uleb128 0x11
 5150 00ba 01       		.uleb128 0x1
 5151 00bb 12       		.uleb128 0x12
 5152 00bc 06       		.uleb128 0x6
 5153 00bd 40       		.uleb128 0x40
 5154 00be 18       		.uleb128 0x18
 5155 00bf 9642     		.uleb128 0x2116
 5156 00c1 19       		.uleb128 0x19
 5157 00c2 00       		.byte	0
 5158 00c3 00       		.byte	0
 5159 00c4 10       		.uleb128 0x10
 5160 00c5 2E       		.uleb128 0x2e
 5161 00c6 01       		.byte	0x1
 5162 00c7 3F       		.uleb128 0x3f
 5163 00c8 19       		.uleb128 0x19
 5164 00c9 03       		.uleb128 0x3
 5165 00ca 0E       		.uleb128 0xe
 5166 00cb 3A       		.uleb128 0x3a
 5167 00cc 0B       		.uleb128 0xb
 5168 00cd 3B       		.uleb128 0x3b
 5169 00ce 0B       		.uleb128 0xb
 5170 00cf 11       		.uleb128 0x11
 5171 00d0 01       		.uleb128 0x1
 5172 00d1 12       		.uleb128 0x12
 5173 00d2 06       		.uleb128 0x6
 5174 00d3 40       		.uleb128 0x40
 5175 00d4 18       		.uleb128 0x18
 5176 00d5 9642     		.uleb128 0x2116
 5177 00d7 19       		.uleb128 0x19
 5178 00d8 01       		.uleb128 0x1
 5179 00d9 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 113


 5180 00da 00       		.byte	0
 5181 00db 00       		.byte	0
 5182 00dc 11       		.uleb128 0x11
 5183 00dd 34       		.uleb128 0x34
 5184 00de 00       		.byte	0
 5185 00df 03       		.uleb128 0x3
 5186 00e0 0E       		.uleb128 0xe
 5187 00e1 3A       		.uleb128 0x3a
 5188 00e2 0B       		.uleb128 0xb
 5189 00e3 3B       		.uleb128 0x3b
 5190 00e4 0B       		.uleb128 0xb
 5191 00e5 49       		.uleb128 0x49
 5192 00e6 13       		.uleb128 0x13
 5193 00e7 02       		.uleb128 0x2
 5194 00e8 18       		.uleb128 0x18
 5195 00e9 00       		.byte	0
 5196 00ea 00       		.byte	0
 5197 00eb 12       		.uleb128 0x12
 5198 00ec 2E       		.uleb128 0x2e
 5199 00ed 01       		.byte	0x1
 5200 00ee 3F       		.uleb128 0x3f
 5201 00ef 19       		.uleb128 0x19
 5202 00f0 03       		.uleb128 0x3
 5203 00f1 0E       		.uleb128 0xe
 5204 00f2 3A       		.uleb128 0x3a
 5205 00f3 0B       		.uleb128 0xb
 5206 00f4 3B       		.uleb128 0x3b
 5207 00f5 0B       		.uleb128 0xb
 5208 00f6 49       		.uleb128 0x49
 5209 00f7 13       		.uleb128 0x13
 5210 00f8 11       		.uleb128 0x11
 5211 00f9 01       		.uleb128 0x1
 5212 00fa 12       		.uleb128 0x12
 5213 00fb 06       		.uleb128 0x6
 5214 00fc 40       		.uleb128 0x40
 5215 00fd 18       		.uleb128 0x18
 5216 00fe 9642     		.uleb128 0x2116
 5217 0100 19       		.uleb128 0x19
 5218 0101 01       		.uleb128 0x1
 5219 0102 13       		.uleb128 0x13
 5220 0103 00       		.byte	0
 5221 0104 00       		.byte	0
 5222 0105 13       		.uleb128 0x13
 5223 0106 2E       		.uleb128 0x2e
 5224 0107 00       		.byte	0
 5225 0108 3F       		.uleb128 0x3f
 5226 0109 19       		.uleb128 0x19
 5227 010a 03       		.uleb128 0x3
 5228 010b 0E       		.uleb128 0xe
 5229 010c 3A       		.uleb128 0x3a
 5230 010d 0B       		.uleb128 0xb
 5231 010e 3B       		.uleb128 0x3b
 5232 010f 0B       		.uleb128 0xb
 5233 0110 11       		.uleb128 0x11
 5234 0111 01       		.uleb128 0x1
 5235 0112 12       		.uleb128 0x12
 5236 0113 06       		.uleb128 0x6
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 114


 5237 0114 40       		.uleb128 0x40
 5238 0115 18       		.uleb128 0x18
 5239 0116 9642     		.uleb128 0x2116
 5240 0118 19       		.uleb128 0x19
 5241 0119 00       		.byte	0
 5242 011a 00       		.byte	0
 5243 011b 14       		.uleb128 0x14
 5244 011c 2E       		.uleb128 0x2e
 5245 011d 01       		.byte	0x1
 5246 011e 3F       		.uleb128 0x3f
 5247 011f 19       		.uleb128 0x19
 5248 0120 03       		.uleb128 0x3
 5249 0121 0E       		.uleb128 0xe
 5250 0122 3A       		.uleb128 0x3a
 5251 0123 0B       		.uleb128 0xb
 5252 0124 3B       		.uleb128 0x3b
 5253 0125 0B       		.uleb128 0xb
 5254 0126 27       		.uleb128 0x27
 5255 0127 19       		.uleb128 0x19
 5256 0128 11       		.uleb128 0x11
 5257 0129 01       		.uleb128 0x1
 5258 012a 12       		.uleb128 0x12
 5259 012b 06       		.uleb128 0x6
 5260 012c 40       		.uleb128 0x40
 5261 012d 18       		.uleb128 0x18
 5262 012e 9642     		.uleb128 0x2116
 5263 0130 19       		.uleb128 0x19
 5264 0131 01       		.uleb128 0x1
 5265 0132 13       		.uleb128 0x13
 5266 0133 00       		.byte	0
 5267 0134 00       		.byte	0
 5268 0135 15       		.uleb128 0x15
 5269 0136 05       		.uleb128 0x5
 5270 0137 00       		.byte	0
 5271 0138 03       		.uleb128 0x3
 5272 0139 0E       		.uleb128 0xe
 5273 013a 3A       		.uleb128 0x3a
 5274 013b 0B       		.uleb128 0xb
 5275 013c 3B       		.uleb128 0x3b
 5276 013d 0B       		.uleb128 0xb
 5277 013e 49       		.uleb128 0x49
 5278 013f 13       		.uleb128 0x13
 5279 0140 02       		.uleb128 0x2
 5280 0141 18       		.uleb128 0x18
 5281 0142 00       		.byte	0
 5282 0143 00       		.byte	0
 5283 0144 16       		.uleb128 0x16
 5284 0145 2E       		.uleb128 0x2e
 5285 0146 01       		.byte	0x1
 5286 0147 3F       		.uleb128 0x3f
 5287 0148 19       		.uleb128 0x19
 5288 0149 03       		.uleb128 0x3
 5289 014a 0E       		.uleb128 0xe
 5290 014b 3A       		.uleb128 0x3a
 5291 014c 0B       		.uleb128 0xb
 5292 014d 3B       		.uleb128 0x3b
 5293 014e 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 115


 5294 014f 27       		.uleb128 0x27
 5295 0150 19       		.uleb128 0x19
 5296 0151 49       		.uleb128 0x49
 5297 0152 13       		.uleb128 0x13
 5298 0153 11       		.uleb128 0x11
 5299 0154 01       		.uleb128 0x1
 5300 0155 12       		.uleb128 0x12
 5301 0156 06       		.uleb128 0x6
 5302 0157 40       		.uleb128 0x40
 5303 0158 18       		.uleb128 0x18
 5304 0159 9642     		.uleb128 0x2116
 5305 015b 19       		.uleb128 0x19
 5306 015c 01       		.uleb128 0x1
 5307 015d 13       		.uleb128 0x13
 5308 015e 00       		.byte	0
 5309 015f 00       		.byte	0
 5310 0160 17       		.uleb128 0x17
 5311 0161 2E       		.uleb128 0x2e
 5312 0162 01       		.byte	0x1
 5313 0163 3F       		.uleb128 0x3f
 5314 0164 19       		.uleb128 0x19
 5315 0165 03       		.uleb128 0x3
 5316 0166 0E       		.uleb128 0xe
 5317 0167 3A       		.uleb128 0x3a
 5318 0168 0B       		.uleb128 0xb
 5319 0169 3B       		.uleb128 0x3b
 5320 016a 0B       		.uleb128 0xb
 5321 016b 27       		.uleb128 0x27
 5322 016c 19       		.uleb128 0x19
 5323 016d 11       		.uleb128 0x11
 5324 016e 01       		.uleb128 0x1
 5325 016f 12       		.uleb128 0x12
 5326 0170 06       		.uleb128 0x6
 5327 0171 40       		.uleb128 0x40
 5328 0172 18       		.uleb128 0x18
 5329 0173 9742     		.uleb128 0x2117
 5330 0175 19       		.uleb128 0x19
 5331 0176 01       		.uleb128 0x1
 5332 0177 13       		.uleb128 0x13
 5333 0178 00       		.byte	0
 5334 0179 00       		.byte	0
 5335 017a 18       		.uleb128 0x18
 5336 017b 2E       		.uleb128 0x2e
 5337 017c 01       		.byte	0x1
 5338 017d 3F       		.uleb128 0x3f
 5339 017e 19       		.uleb128 0x19
 5340 017f 03       		.uleb128 0x3
 5341 0180 0E       		.uleb128 0xe
 5342 0181 3A       		.uleb128 0x3a
 5343 0182 0B       		.uleb128 0xb
 5344 0183 3B       		.uleb128 0x3b
 5345 0184 0B       		.uleb128 0xb
 5346 0185 27       		.uleb128 0x27
 5347 0186 19       		.uleb128 0x19
 5348 0187 49       		.uleb128 0x49
 5349 0188 13       		.uleb128 0x13
 5350 0189 11       		.uleb128 0x11
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 116


 5351 018a 01       		.uleb128 0x1
 5352 018b 12       		.uleb128 0x12
 5353 018c 06       		.uleb128 0x6
 5354 018d 40       		.uleb128 0x40
 5355 018e 18       		.uleb128 0x18
 5356 018f 9742     		.uleb128 0x2117
 5357 0191 19       		.uleb128 0x19
 5358 0192 01       		.uleb128 0x1
 5359 0193 13       		.uleb128 0x13
 5360 0194 00       		.byte	0
 5361 0195 00       		.byte	0
 5362 0196 19       		.uleb128 0x19
 5363 0197 2E       		.uleb128 0x2e
 5364 0198 01       		.byte	0x1
 5365 0199 3F       		.uleb128 0x3f
 5366 019a 19       		.uleb128 0x19
 5367 019b 03       		.uleb128 0x3
 5368 019c 0E       		.uleb128 0xe
 5369 019d 3A       		.uleb128 0x3a
 5370 019e 0B       		.uleb128 0xb
 5371 019f 3B       		.uleb128 0x3b
 5372 01a0 05       		.uleb128 0x5
 5373 01a1 11       		.uleb128 0x11
 5374 01a2 01       		.uleb128 0x1
 5375 01a3 12       		.uleb128 0x12
 5376 01a4 06       		.uleb128 0x6
 5377 01a5 40       		.uleb128 0x40
 5378 01a6 18       		.uleb128 0x18
 5379 01a7 9642     		.uleb128 0x2116
 5380 01a9 19       		.uleb128 0x19
 5381 01aa 01       		.uleb128 0x1
 5382 01ab 13       		.uleb128 0x13
 5383 01ac 00       		.byte	0
 5384 01ad 00       		.byte	0
 5385 01ae 1A       		.uleb128 0x1a
 5386 01af 34       		.uleb128 0x34
 5387 01b0 00       		.byte	0
 5388 01b1 03       		.uleb128 0x3
 5389 01b2 0E       		.uleb128 0xe
 5390 01b3 3A       		.uleb128 0x3a
 5391 01b4 0B       		.uleb128 0xb
 5392 01b5 3B       		.uleb128 0x3b
 5393 01b6 05       		.uleb128 0x5
 5394 01b7 49       		.uleb128 0x49
 5395 01b8 13       		.uleb128 0x13
 5396 01b9 02       		.uleb128 0x2
 5397 01ba 18       		.uleb128 0x18
 5398 01bb 00       		.byte	0
 5399 01bc 00       		.byte	0
 5400 01bd 1B       		.uleb128 0x1b
 5401 01be 2E       		.uleb128 0x2e
 5402 01bf 00       		.byte	0
 5403 01c0 3F       		.uleb128 0x3f
 5404 01c1 19       		.uleb128 0x19
 5405 01c2 03       		.uleb128 0x3
 5406 01c3 0E       		.uleb128 0xe
 5407 01c4 3A       		.uleb128 0x3a
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 117


 5408 01c5 0B       		.uleb128 0xb
 5409 01c6 3B       		.uleb128 0x3b
 5410 01c7 05       		.uleb128 0x5
 5411 01c8 27       		.uleb128 0x27
 5412 01c9 19       		.uleb128 0x19
 5413 01ca 49       		.uleb128 0x49
 5414 01cb 13       		.uleb128 0x13
 5415 01cc 11       		.uleb128 0x11
 5416 01cd 01       		.uleb128 0x1
 5417 01ce 12       		.uleb128 0x12
 5418 01cf 06       		.uleb128 0x6
 5419 01d0 40       		.uleb128 0x40
 5420 01d1 18       		.uleb128 0x18
 5421 01d2 9642     		.uleb128 0x2116
 5422 01d4 19       		.uleb128 0x19
 5423 01d5 00       		.byte	0
 5424 01d6 00       		.byte	0
 5425 01d7 1C       		.uleb128 0x1c
 5426 01d8 2E       		.uleb128 0x2e
 5427 01d9 01       		.byte	0x1
 5428 01da 3F       		.uleb128 0x3f
 5429 01db 19       		.uleb128 0x19
 5430 01dc 03       		.uleb128 0x3
 5431 01dd 0E       		.uleb128 0xe
 5432 01de 3A       		.uleb128 0x3a
 5433 01df 0B       		.uleb128 0xb
 5434 01e0 3B       		.uleb128 0x3b
 5435 01e1 05       		.uleb128 0x5
 5436 01e2 49       		.uleb128 0x49
 5437 01e3 13       		.uleb128 0x13
 5438 01e4 11       		.uleb128 0x11
 5439 01e5 01       		.uleb128 0x1
 5440 01e6 12       		.uleb128 0x12
 5441 01e7 06       		.uleb128 0x6
 5442 01e8 40       		.uleb128 0x40
 5443 01e9 18       		.uleb128 0x18
 5444 01ea 9642     		.uleb128 0x2116
 5445 01ec 19       		.uleb128 0x19
 5446 01ed 01       		.uleb128 0x1
 5447 01ee 13       		.uleb128 0x13
 5448 01ef 00       		.byte	0
 5449 01f0 00       		.byte	0
 5450 01f1 1D       		.uleb128 0x1d
 5451 01f2 0B       		.uleb128 0xb
 5452 01f3 01       		.byte	0x1
 5453 01f4 11       		.uleb128 0x11
 5454 01f5 01       		.uleb128 0x1
 5455 01f6 12       		.uleb128 0x12
 5456 01f7 06       		.uleb128 0x6
 5457 01f8 00       		.byte	0
 5458 01f9 00       		.byte	0
 5459 01fa 1E       		.uleb128 0x1e
 5460 01fb 0B       		.uleb128 0xb
 5461 01fc 01       		.byte	0x1
 5462 01fd 11       		.uleb128 0x11
 5463 01fe 01       		.uleb128 0x1
 5464 01ff 12       		.uleb128 0x12
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 118


 5465 0200 06       		.uleb128 0x6
 5466 0201 01       		.uleb128 0x1
 5467 0202 13       		.uleb128 0x13
 5468 0203 00       		.byte	0
 5469 0204 00       		.byte	0
 5470 0205 1F       		.uleb128 0x1f
 5471 0206 21       		.uleb128 0x21
 5472 0207 00       		.byte	0
 5473 0208 49       		.uleb128 0x49
 5474 0209 13       		.uleb128 0x13
 5475 020a 2F       		.uleb128 0x2f
 5476 020b 05       		.uleb128 0x5
 5477 020c 00       		.byte	0
 5478 020d 00       		.byte	0
 5479 020e 20       		.uleb128 0x20
 5480 020f 2E       		.uleb128 0x2e
 5481 0210 01       		.byte	0x1
 5482 0211 3F       		.uleb128 0x3f
 5483 0212 19       		.uleb128 0x19
 5484 0213 03       		.uleb128 0x3
 5485 0214 0E       		.uleb128 0xe
 5486 0215 3A       		.uleb128 0x3a
 5487 0216 0B       		.uleb128 0xb
 5488 0217 3B       		.uleb128 0x3b
 5489 0218 05       		.uleb128 0x5
 5490 0219 27       		.uleb128 0x27
 5491 021a 19       		.uleb128 0x19
 5492 021b 49       		.uleb128 0x49
 5493 021c 13       		.uleb128 0x13
 5494 021d 11       		.uleb128 0x11
 5495 021e 01       		.uleb128 0x1
 5496 021f 12       		.uleb128 0x12
 5497 0220 06       		.uleb128 0x6
 5498 0221 40       		.uleb128 0x40
 5499 0222 18       		.uleb128 0x18
 5500 0223 9642     		.uleb128 0x2116
 5501 0225 19       		.uleb128 0x19
 5502 0226 01       		.uleb128 0x1
 5503 0227 13       		.uleb128 0x13
 5504 0228 00       		.byte	0
 5505 0229 00       		.byte	0
 5506 022a 21       		.uleb128 0x21
 5507 022b 05       		.uleb128 0x5
 5508 022c 00       		.byte	0
 5509 022d 03       		.uleb128 0x3
 5510 022e 0E       		.uleb128 0xe
 5511 022f 3A       		.uleb128 0x3a
 5512 0230 0B       		.uleb128 0xb
 5513 0231 3B       		.uleb128 0x3b
 5514 0232 05       		.uleb128 0x5
 5515 0233 49       		.uleb128 0x49
 5516 0234 13       		.uleb128 0x13
 5517 0235 02       		.uleb128 0x2
 5518 0236 18       		.uleb128 0x18
 5519 0237 00       		.byte	0
 5520 0238 00       		.byte	0
 5521 0239 22       		.uleb128 0x22
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 119


 5522 023a 34       		.uleb128 0x34
 5523 023b 00       		.byte	0
 5524 023c 03       		.uleb128 0x3
 5525 023d 08       		.uleb128 0x8
 5526 023e 3A       		.uleb128 0x3a
 5527 023f 0B       		.uleb128 0xb
 5528 0240 3B       		.uleb128 0x3b
 5529 0241 05       		.uleb128 0x5
 5530 0242 49       		.uleb128 0x49
 5531 0243 13       		.uleb128 0x13
 5532 0244 02       		.uleb128 0x2
 5533 0245 18       		.uleb128 0x18
 5534 0246 00       		.byte	0
 5535 0247 00       		.byte	0
 5536 0248 23       		.uleb128 0x23
 5537 0249 34       		.uleb128 0x34
 5538 024a 00       		.byte	0
 5539 024b 03       		.uleb128 0x3
 5540 024c 0E       		.uleb128 0xe
 5541 024d 3A       		.uleb128 0x3a
 5542 024e 0B       		.uleb128 0xb
 5543 024f 3B       		.uleb128 0x3b
 5544 0250 05       		.uleb128 0x5
 5545 0251 49       		.uleb128 0x49
 5546 0252 13       		.uleb128 0x13
 5547 0253 3F       		.uleb128 0x3f
 5548 0254 19       		.uleb128 0x19
 5549 0255 3C       		.uleb128 0x3c
 5550 0256 19       		.uleb128 0x19
 5551 0257 00       		.byte	0
 5552 0258 00       		.byte	0
 5553 0259 24       		.uleb128 0x24
 5554 025a 34       		.uleb128 0x34
 5555 025b 00       		.byte	0
 5556 025c 03       		.uleb128 0x3
 5557 025d 0E       		.uleb128 0xe
 5558 025e 3A       		.uleb128 0x3a
 5559 025f 0B       		.uleb128 0xb
 5560 0260 3B       		.uleb128 0x3b
 5561 0261 0B       		.uleb128 0xb
 5562 0262 49       		.uleb128 0x49
 5563 0263 13       		.uleb128 0x13
 5564 0264 3F       		.uleb128 0x3f
 5565 0265 19       		.uleb128 0x19
 5566 0266 02       		.uleb128 0x2
 5567 0267 18       		.uleb128 0x18
 5568 0268 00       		.byte	0
 5569 0269 00       		.byte	0
 5570 026a 25       		.uleb128 0x25
 5571 026b 34       		.uleb128 0x34
 5572 026c 00       		.byte	0
 5573 026d 03       		.uleb128 0x3
 5574 026e 08       		.uleb128 0x8
 5575 026f 3A       		.uleb128 0x3a
 5576 0270 0B       		.uleb128 0xb
 5577 0271 3B       		.uleb128 0x3b
 5578 0272 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 120


 5579 0273 49       		.uleb128 0x49
 5580 0274 13       		.uleb128 0x13
 5581 0275 3F       		.uleb128 0x3f
 5582 0276 19       		.uleb128 0x19
 5583 0277 02       		.uleb128 0x2
 5584 0278 18       		.uleb128 0x18
 5585 0279 00       		.byte	0
 5586 027a 00       		.byte	0
 5587 027b 00       		.byte	0
 5588              		.section	.debug_aranges,"",%progbits
 5589 0000 8C000000 		.4byte	0x8c
 5590 0004 0200     		.2byte	0x2
 5591 0006 00000000 		.4byte	.Ldebug_info0
 5592 000a 04       		.byte	0x4
 5593 000b 00       		.byte	0
 5594 000c 0000     		.2byte	0
 5595 000e 0000     		.2byte	0
 5596 0010 00000000 		.4byte	.LFB64
 5597 0014 0C000000 		.4byte	.LFE64-.LFB64
 5598 0018 00000000 		.4byte	.LFB65
 5599 001c 2C010000 		.4byte	.LFE65-.LFB65
 5600 0020 00000000 		.4byte	.LFB66
 5601 0024 64000000 		.4byte	.LFE66-.LFB66
 5602 0028 00000000 		.4byte	.LFB67
 5603 002c 2A000000 		.4byte	.LFE67-.LFB67
 5604 0030 00000000 		.4byte	.LFB68
 5605 0034 50000000 		.4byte	.LFE68-.LFB68
 5606 0038 00000000 		.4byte	.LFB69
 5607 003c 48000000 		.4byte	.LFE69-.LFB69
 5608 0040 00000000 		.4byte	.LFB70
 5609 0044 1E000000 		.4byte	.LFE70-.LFB70
 5610 0048 00000000 		.4byte	.LFB71
 5611 004c 46000000 		.4byte	.LFE71-.LFB71
 5612 0050 00000000 		.4byte	.LFB72
 5613 0054 E0000000 		.4byte	.LFE72-.LFB72
 5614 0058 00000000 		.4byte	.LFB73
 5615 005c 1E000000 		.4byte	.LFE73-.LFB73
 5616 0060 00000000 		.4byte	.LFB74
 5617 0064 30040000 		.4byte	.LFE74-.LFB74
 5618 0068 00000000 		.4byte	.LFB75
 5619 006c 44000000 		.4byte	.LFE75-.LFB75
 5620 0070 00000000 		.4byte	.LFB76
 5621 0074 C40E0000 		.4byte	.LFE76-.LFB76
 5622 0078 00000000 		.4byte	.LFB77
 5623 007c 74000000 		.4byte	.LFE77-.LFB77
 5624 0080 00000000 		.4byte	.LFB78
 5625 0084 38010000 		.4byte	.LFE78-.LFB78
 5626 0088 00000000 		.4byte	0
 5627 008c 00000000 		.4byte	0
 5628              		.section	.debug_ranges,"",%progbits
 5629              	.Ldebug_ranges0:
 5630 0000 00000000 		.4byte	.LFB64
 5631 0004 0C000000 		.4byte	.LFE64
 5632 0008 00000000 		.4byte	.LFB65
 5633 000c 2C010000 		.4byte	.LFE65
 5634 0010 00000000 		.4byte	.LFB66
 5635 0014 64000000 		.4byte	.LFE66
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 121


 5636 0018 00000000 		.4byte	.LFB67
 5637 001c 2A000000 		.4byte	.LFE67
 5638 0020 00000000 		.4byte	.LFB68
 5639 0024 50000000 		.4byte	.LFE68
 5640 0028 00000000 		.4byte	.LFB69
 5641 002c 48000000 		.4byte	.LFE69
 5642 0030 00000000 		.4byte	.LFB70
 5643 0034 1E000000 		.4byte	.LFE70
 5644 0038 00000000 		.4byte	.LFB71
 5645 003c 46000000 		.4byte	.LFE71
 5646 0040 00000000 		.4byte	.LFB72
 5647 0044 E0000000 		.4byte	.LFE72
 5648 0048 00000000 		.4byte	.LFB73
 5649 004c 1E000000 		.4byte	.LFE73
 5650 0050 00000000 		.4byte	.LFB74
 5651 0054 30040000 		.4byte	.LFE74
 5652 0058 00000000 		.4byte	.LFB75
 5653 005c 44000000 		.4byte	.LFE75
 5654 0060 00000000 		.4byte	.LFB76
 5655 0064 C40E0000 		.4byte	.LFE76
 5656 0068 00000000 		.4byte	.LFB77
 5657 006c 74000000 		.4byte	.LFE77
 5658 0070 00000000 		.4byte	.LFB78
 5659 0074 38010000 		.4byte	.LFE78
 5660 0078 00000000 		.4byte	0
 5661 007c 00000000 		.4byte	0
 5662              		.section	.debug_line,"",%progbits
 5663              	.Ldebug_line0:
 5664 0000 C5050000 		.section	.debug_str,"MS",%progbits,1
 5664      02002702 
 5664      00000201 
 5664      FB0E0D00 
 5664      01010101 
 5665              	.LASF119:
 5666 0000 745F6D6F 		.ascii	"t_modem\000"
 5666      64656D00 
 5667              	.LASF67:
 5668 0008 746D5F79 		.ascii	"tm_year\000"
 5668      65617200 
 5669              	.LASF64:
 5670 0010 746D5F68 		.ascii	"tm_hour\000"
 5670      6F757200 
 5671              	.LASF69:
 5672 0018 746D5F79 		.ascii	"tm_yday\000"
 5672      64617900 
 5673              	.LASF36:
 5674 0020 6E756D5F 		.ascii	"num_invalid_readings\000"
 5674      696E7661 
 5674      6C69645F 
 5674      72656164 
 5674      696E6773 
 5675              	.LASF155:
 5676 0035 62756666 		.ascii	"buffer_overflow\000"
 5676      65725F6F 
 5676      76657266 
 5676      6C6F7700 
 5677              	.LASF153:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 122


 5678 0045 66696C65 		.ascii	"fileName\000"
 5678      4E616D65 
 5678      00
 5679              	.LASF0:
 5680 004e 7369676E 		.ascii	"signed char\000"
 5680      65642063 
 5680      68617200 
 5681              	.LASF96:
 5682 005a 636F756E 		.ascii	"countDownResetCondition\000"
 5682      74446F77 
 5682      6E526573 
 5682      6574436F 
 5682      6E646974 
 5683              	.LASF177:
 5684 0072 57616B65 		.ascii	"Wakeup_ISR\000"
 5684      75705F49 
 5684      535200
 5685              	.LASF174:
 5686 007d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5686      43313120 
 5686      352E342E 
 5686      31203230 
 5686      31363036 
 5687 00b0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 5687      20726576 
 5687      6973696F 
 5687      6E203233 
 5687      37373135 
 5688 00e3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5688      66756E63 
 5688      74696F6E 
 5688      2D736563 
 5688      74696F6E 
 5689              	.LASF26:
 5690 010b 4D6F6E74 		.ascii	"Month\000"
 5690      6800
 5691              	.LASF7:
 5692 0111 6C6F6E67 		.ascii	"long long unsigned int\000"
 5692      206C6F6E 
 5692      6720756E 
 5692      7369676E 
 5692      65642069 
 5693              	.LASF22:
 5694 0128 486F7572 		.ascii	"Hour\000"
 5694      00
 5695              	.LASF40:
 5696 012d 76616C75 		.ascii	"values\000"
 5696      657300
 5697              	.LASF159:
 5698 0134 6D6F6465 		.ascii	"modem_state\000"
 5698      6D5F7374 
 5698      61746500 
 5699              	.LASF168:
 5700 0140 616C6172 		.ascii	"alarmMeasure\000"
 5700      6D4D6561 
 5700      73757265 
 5700      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 123


 5701              	.LASF154:
 5702 014d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5702      52784275 
 5702      66666572 
 5702      00
 5703              	.LASF120:
 5704 015a 745F6C65 		.ascii	"t_level_sensor\000"
 5704      76656C5F 
 5704      73656E73 
 5704      6F7200
 5705              	.LASF6:
 5706 0169 6C6F6E67 		.ascii	"long long int\000"
 5706      206C6F6E 
 5706      6720696E 
 5706      7400
 5707              	.LASF130:
 5708 0177 7061636B 		.ascii	"packets\000"
 5708      65747300 
 5709              	.LASF80:
 5710 017f 65636E6F 		.ascii	"ecno\000"
 5710      00
 5711              	.LASF169:
 5712 0184 74696D65 		.ascii	"timeToMeasure\000"
 5712      546F4D65 
 5712      61737572 
 5712      6500
 5713              	.LASF83:
 5714 0192 74696D65 		.ascii	"time_to_network_connect\000"
 5714      5F746F5F 
 5714      6E657477 
 5714      6F726B5F 
 5714      636F6E6E 
 5715              	.LASF171:
 5716 01aa 74696D65 		.ascii	"timeToSync\000"
 5716      546F5379 
 5716      6E6300
 5717              	.LASF54:
 5718 01b5 766F6C74 		.ascii	"voltage_solar\000"
 5718      6167655F 
 5718      736F6C61 
 5718      7200
 5719              	.LASF55:
 5720 01c3 766F6C74 		.ascii	"voltage_charge_current\000"
 5720      6167655F 
 5720      63686172 
 5720      67655F63 
 5720      75727265 
 5721              	.LASF152:
 5722 01da 75706772 		.ascii	"upgrade_status\000"
 5722      6164655F 
 5722      73746174 
 5722      757300
 5723              	.LASF133:
 5724 01e9 635F6461 		.ascii	"c_data_count_sent\000"
 5724      74615F63 
 5724      6F756E74 
 5724      5F73656E 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 124


 5724      7400
 5725              	.LASF77:
 5726 01fb 6D6F6465 		.ascii	"modem_info_t\000"
 5726      6D5F696E 
 5726      666F5F74 
 5726      00
 5727              	.LASF78:
 5728 0208 72786C65 		.ascii	"rxlev\000"
 5728      7600
 5729              	.LASF4:
 5730 020e 6C6F6E67 		.ascii	"long int\000"
 5730      20696E74 
 5730      00
 5731              	.LASF84:
 5732 0217 74696D65 		.ascii	"time_to_acquire_ip\000"
 5732      5F746F5F 
 5732      61637175 
 5732      6972655F 
 5732      697000
 5733              	.LASF97:
 5734 022a 616C6172 		.ascii	"alarm\000"
 5734      6D00
 5735              	.LASF11:
 5736 0230 75696E74 		.ascii	"uint8\000"
 5736      3800
 5737              	.LASF125:
 5738 0236 635F7472 		.ascii	"c_try_counter\000"
 5738      795F636F 
 5738      756E7465 
 5738      7200
 5739              	.LASF136:
 5740 0244 73656E64 		.ascii	"send_time\000"
 5740      5F74696D 
 5740      6500
 5741              	.LASF16:
 5742 024e 696E7433 		.ascii	"int32\000"
 5742      3200
 5743              	.LASF86:
 5744 0254 6E6F6465 		.ascii	"node_type\000"
 5744      5F747970 
 5744      6500
 5745              	.LASF123:
 5746 025e 73796E63 		.ascii	"syncData\000"
 5746      44617461 
 5746      00
 5747              	.LASF131:
 5748 0267 6E657477 		.ascii	"network_time\000"
 5748      6F726B5F 
 5748      74696D65 
 5748      00
 5749              	.LASF3:
 5750 0274 73686F72 		.ascii	"short unsigned int\000"
 5750      7420756E 
 5750      7369676E 
 5750      65642069 
 5750      6E7400
 5751              	.LASF13:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 125


 5752 0287 75696E74 		.ascii	"uint32\000"
 5752      333200
 5753              	.LASF75:
 5754 028e 6D6F6465 		.ascii	"model_id\000"
 5754      6C5F6964 
 5754      00
 5755              	.LASF33:
 5756 0297 616C6C5F 		.ascii	"all_level_readings\000"
 5756      6C657665 
 5756      6C5F7265 
 5756      6164696E 
 5756      677300
 5757              	.LASF93:
 5758 02aa 636F756E 		.ascii	"countDownValue\000"
 5758      74446F77 
 5758      6E56616C 
 5758      756500
 5759              	.LASF148:
 5760 02b9 75706772 		.ascii	"upgraded\000"
 5760      61646564 
 5760      00
 5761              	.LASF66:
 5762 02c2 746D5F6D 		.ascii	"tm_mon\000"
 5762      6F6E00
 5763              	.LASF38:
 5764 02c9 6E766172 		.ascii	"nvars\000"
 5764      7300
 5765              	.LASF90:
 5766 02cf 64656275 		.ascii	"debug_level\000"
 5766      675F6C65 
 5766      76656C00 
 5767              	.LASF150:
 5768 02db 706F7274 		.ascii	"port\000"
 5768      00
 5769              	.LASF176:
 5770 02e0 433A5C6E 		.ascii	"C:\\notoriOS\\notoriOS.cydsn\000"
 5770      6F746F72 
 5770      694F535C 
 5770      6E6F746F 
 5770      72694F53 
 5771              	.LASF71:
 5772 02fb 76616C75 		.ascii	"value\000"
 5772      6500
 5773              	.LASF149:
 5774 0301 686F7374 		.ascii	"host\000"
 5774      00
 5775              	.LASF44:
 5776 0306 64617461 		.ascii	"data2\000"
 5776      3200
 5777              	.LASF170:
 5778 030c 616C6172 		.ascii	"alarmSync\000"
 5778      6D53796E 
 5778      6300
 5779              	.LASF8:
 5780 0316 756E7369 		.ascii	"unsigned int\000"
 5780      676E6564 
 5780      20696E74 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 126


 5780      00
 5781              	.LASF146:
 5782 0323 73657454 		.ascii	"setTime\000"
 5782      696D6500 
 5783              	.LASF73:
 5784 032b 6B65795F 		.ascii	"key_value_t\000"
 5784      76616C75 
 5784      655F7400 
 5785              	.LASF109:
 5786 0337 41796F49 		.ascii	"AyoItsTime\000"
 5786      74735469 
 5786      6D6500
 5787              	.LASF35:
 5788 0342 6E756D5F 		.ascii	"num_valid_readings\000"
 5788      76616C69 
 5788      645F7265 
 5788      6164696E 
 5788      677300
 5789              	.LASF135:
 5790 0355 68747470 		.ascii	"http_chunk\000"
 5790      5F636875 
 5790      6E6B00
 5791              	.LASF142:
 5792 0360 6D5F766F 		.ascii	"m_voltage\000"
 5792      6C746167 
 5792      6500
 5793              	.LASF5:
 5794 036a 6C6F6E67 		.ascii	"long unsigned int\000"
 5794      20756E73 
 5794      69676E65 
 5794      6420696E 
 5794      7400
 5795              	.LASF106:
 5796 037c 7472795F 		.ascii	"try_counter\000"
 5796      636F756E 
 5796      74657200 
 5797              	.LASF126:
 5798 0388 64617461 		.ascii	"data_count_desired\000"
 5798      5F636F75 
 5798      6E745F64 
 5798      65736972 
 5798      656400
 5799              	.LASF53:
 5800 039b 766F6C74 		.ascii	"voltage_battery\000"
 5800      6167655F 
 5800      62617474 
 5800      65727900 
 5801              	.LASF24:
 5802 03ab 4461794F 		.ascii	"DayOfMonth\000"
 5802      664D6F6E 
 5802      746800
 5803              	.LASF139:
 5804 03b6 6D616B65 		.ascii	"makeMeasurements\000"
 5804      4D656173 
 5804      7572656D 
 5804      656E7473 
 5804      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 127


 5805              	.LASF158:
 5806 03c7 64617461 		.ascii	"data\000"
 5806      00
 5807              	.LASF102:
 5808 03cc 65705F70 		.ascii	"ep_port\000"
 5808      6F727400 
 5809              	.LASF70:
 5810 03d4 746D5F69 		.ascii	"tm_isdst\000"
 5810      73647374 
 5810      00
 5811              	.LASF98:
 5812 03dd 6D6F6465 		.ascii	"modem_info\000"
 5812      6D5F696E 
 5812      666F00
 5813              	.LASF101:
 5814 03e8 65705F68 		.ascii	"ep_host\000"
 5814      6F737400 
 5815              	.LASF14:
 5816 03f0 696E7438 		.ascii	"int8\000"
 5816      00
 5817              	.LASF108:
 5818 03f5 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 5818      576F726B 
 5818      576F726B 
 5818      576F726B 
 5818      576F726B 
 5819              	.LASF127:
 5820 040e 635F6461 		.ascii	"c_data_count_desired\000"
 5820      74615F63 
 5820      6F756E74 
 5820      5F646573 
 5820      69726564 
 5821              	.LASF122:
 5822 0423 745F7364 		.ascii	"t_sd_card\000"
 5822      5F636172 
 5822      6400
 5823              	.LASF2:
 5824 042d 73686F72 		.ascii	"short int\000"
 5824      7420696E 
 5824      7400
 5825              	.LASF160:
 5826 0437 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 5826      6D5F7374 
 5826      6172745F 
 5826      74696D65 
 5826      5F737461 
 5827              	.LASF100:
 5828 044e 7379735F 		.ascii	"sys_info_t\000"
 5828      696E666F 
 5828      5F7400
 5829              	.LASF92:
 5830 0459 75706461 		.ascii	"updatable_parameters_t\000"
 5830      7461626C 
 5830      655F7061 
 5830      72616D65 
 5830      74657273 
 5831              	.LASF110:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 128


 5832 0470 616C6172 		.ascii	"alarmType\000"
 5832      6D547970 
 5832      6500
 5833              	.LASF156:
 5834 047a 64617461 		.ascii	"dataPointsInStack\000"
 5834      506F696E 
 5834      7473496E 
 5834      53746163 
 5834      6B00
 5835              	.LASF63:
 5836 048c 746D5F6D 		.ascii	"tm_min\000"
 5836      696E00
 5837              	.LASF151:
 5838 0493 726F7574 		.ascii	"route\000"
 5838      6500
 5839              	.LASF111:
 5840 0499 616C6172 		.ascii	"alarmToBeUpdated\000"
 5840      6D546F42 
 5840      65557064 
 5840      61746564 
 5840      00
 5841              	.LASF21:
 5842 04aa 73697A65 		.ascii	"sizetype\000"
 5842      74797065 
 5842      00
 5843              	.LASF42:
 5844 04b3 64617461 		.ascii	"data0\000"
 5844      3000
 5845              	.LASF43:
 5846 04b9 64617461 		.ascii	"data1\000"
 5846      3100
 5847              	.LASF45:
 5848 04bf 64617461 		.ascii	"data3\000"
 5848      3300
 5849              	.LASF46:
 5850 04c5 64617461 		.ascii	"data4\000"
 5850      3400
 5851              	.LASF47:
 5852 04cb 64617461 		.ascii	"data5\000"
 5852      3500
 5853              	.LASF48:
 5854 04d1 64617461 		.ascii	"data6\000"
 5854      3600
 5855              	.LASF49:
 5856 04d7 64617461 		.ascii	"data7\000"
 5856      3700
 5857              	.LASF50:
 5858 04dd 64617461 		.ascii	"data8\000"
 5858      3800
 5859              	.LASF103:
 5860 04e3 7379735F 		.ascii	"sys_settings_t\000"
 5860      73657474 
 5860      696E6773 
 5860      5F7400
 5861              	.LASF147:
 5862 04f2 6C6F6361 		.ascii	"localTime\000"
 5862      6C54696D 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 129


 5862      6500
 5863              	.LASF172:
 5864 04fc 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 5864      546F5379 
 5864      636E5265 
 5864      6D6F7465 
 5864      50617261 
 5865              	.LASF72:
 5866 0513 74696D65 		.ascii	"timeStamp\000"
 5866      5374616D 
 5866      7000
 5867              	.LASF28:
 5868 051d 5254435F 		.ascii	"RTC_TIME_DATE\000"
 5868      54494D45 
 5868      5F444154 
 5868      4500
 5869              	.LASF162:
 5870 052b 75706461 		.ascii	"updatable_parameters\000"
 5870      7461626C 
 5870      655F7061 
 5870      72616D65 
 5870      74657273 
 5871              	.LASF115:
 5872 0540 43726561 		.ascii	"CreateAlarm\000"
 5872      7465416C 
 5872      61726D00 
 5873              	.LASF134:
 5874 054c 7061636B 		.ascii	"packet\000"
 5874      657400
 5875              	.LASF124:
 5876 0553 735F7273 		.ascii	"s_rsrp\000"
 5876      727000
 5877              	.LASF56:
 5878 055a 766F6C74 		.ascii	"voltage_pressure\000"
 5878      6167655F 
 5878      70726573 
 5878      73757265 
 5878      00
 5879              	.LASF163:
 5880 056b 68747470 		.ascii	"http_request\000"
 5880      5F726571 
 5880      75657374 
 5880      00
 5881              	.LASF17:
 5882 0578 666C6F61 		.ascii	"float\000"
 5882      7400
 5883              	.LASF37:
 5884 057e 6C657665 		.ascii	"level_sensor_t\000"
 5884      6C5F7365 
 5884      6E736F72 
 5884      5F7400
 5885              	.LASF138:
 5886 058d 636F6E66 		.ascii	"configureRemoteParams\000"
 5886      69677572 
 5886      6552656D 
 5886      6F746550 
 5886      6172616D 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 130


 5887              	.LASF173:
 5888 05a3 44617461 		.ascii	"Data_fileName\000"
 5888      5F66696C 
 5888      654E616D 
 5888      6500
 5889              	.LASF107:
 5890 05b1 6D6F6465 		.ascii	"modem_status\000"
 5890      6D5F7374 
 5890      61747573 
 5890      00
 5891              	.LASF29:
 5892 05be 74657374 		.ascii	"test_name\000"
 5892      5F6E616D 
 5892      6500
 5893              	.LASF27:
 5894 05c8 59656172 		.ascii	"Year\000"
 5894      00
 5895              	.LASF91:
 5896 05cd 5F426F6F 		.ascii	"_Bool\000"
 5896      6C00
 5897              	.LASF10:
 5898 05d3 696E7433 		.ascii	"int32_t\000"
 5898      325F7400 
 5899              	.LASF1:
 5900 05db 756E7369 		.ascii	"unsigned char\000"
 5900      676E6564 
 5900      20636861 
 5900      7200
 5901              	.LASF12:
 5902 05e9 75696E74 		.ascii	"uint16\000"
 5902      313600
 5903              	.LASF167:
 5904 05f0 73797374 		.ascii	"system_settings\000"
 5904      656D5F73 
 5904      65747469 
 5904      6E677300 
 5905              	.LASF82:
 5906 0600 72737270 		.ascii	"rsrp\000"
 5906      00
 5907              	.LASF81:
 5908 0605 72737271 		.ascii	"rsrq\000"
 5908      00
 5909              	.LASF112:
 5910 060a 52657365 		.ascii	"ResetAlarm\000"
 5910      74416C61 
 5910      726D00
 5911              	.LASF137:
 5912 0615 735F7365 		.ascii	"s_send_time\000"
 5912      6E645F74 
 5912      696D6500 
 5913              	.LASF89:
 5914 0621 73796E63 		.ascii	"sync_time\000"
 5914      5F74696D 
 5914      6500
 5915              	.LASF60:
 5916 062b 70726573 		.ascii	"pressure_depth\000"
 5916      73757265 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 131


 5916      5F646570 
 5916      746800
 5917              	.LASF79:
 5918 063a 72736370 		.ascii	"rscp\000"
 5918      00
 5919              	.LASF39:
 5920 063f 666C6167 		.ascii	"flag\000"
 5920      00
 5921              	.LASF23:
 5922 0644 4461794F 		.ascii	"DayOfWeek\000"
 5922      66576565 
 5922      6B00
 5923              	.LASF32:
 5924 064e 74657374 		.ascii	"test_t\000"
 5924      5F7400
 5925              	.LASF166:
 5926 0655 73797374 		.ascii	"system_info\000"
 5926      656D5F69 
 5926      6E666F00 
 5927              	.LASF76:
 5928 0661 696D6569 		.ascii	"imei\000"
 5928      00
 5929              	.LASF31:
 5930 0666 72656173 		.ascii	"reason\000"
 5930      6F6E00
 5931              	.LASF113:
 5932 066d 616C6172 		.ascii	"alarmToBeReset\000"
 5932      6D546F42 
 5932      65526573 
 5932      657400
 5933              	.LASF118:
 5934 067c 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 5934      6B697479 
 5934      43686563 
 5934      6B596F75 
 5934      7273656C 
 5935              	.LASF132:
 5936 06a8 64617461 		.ascii	"data_count_sent\000"
 5936      5F636F75 
 5936      6E745F73 
 5936      656E7400 
 5937              	.LASF85:
 5938 06b8 6D6F6465 		.ascii	"modem_stats_t\000"
 5938      6D5F7374 
 5938      6174735F 
 5938      7400
 5939              	.LASF59:
 5940 06c6 70726573 		.ascii	"pressure_current\000"
 5940      73757265 
 5940      5F637572 
 5940      72656E74 
 5940      00
 5941              	.LASF57:
 5942 06d7 76616C69 		.ascii	"valid\000"
 5942      6400
 5943              	.LASF141:
 5944 06dd 6269675F 		.ascii	"big_value\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 132


 5944      76616C75 
 5944      6500
 5945              	.LASF68:
 5946 06e7 746D5F77 		.ascii	"tm_wday\000"
 5946      64617900 
 5947              	.LASF20:
 5948 06ef 6C6F6E67 		.ascii	"long double\000"
 5948      20646F75 
 5948      626C6500 
 5949              	.LASF129:
 5950 06fb 6368756E 		.ascii	"chunk\000"
 5950      6B00
 5951              	.LASF140:
 5952 0701 635F7469 		.ascii	"c_timeStamp\000"
 5952      6D655374 
 5952      616D7000 
 5953              	.LASF19:
 5954 070d 63686172 		.ascii	"char\000"
 5954      00
 5955              	.LASF52:
 5956 0712 736F6E74 		.ascii	"sontek_t\000"
 5956      656B5F74 
 5956      00
 5957              	.LASF161:
 5958 071b 6D6F6465 		.ascii	"modem_stats\000"
 5958      6D5F7374 
 5958      61747300 
 5959              	.LASF165:
 5960 0727 68747470 		.ascii	"http_route\000"
 5960      5F726F75 
 5960      746500
 5961              	.LASF128:
 5962 0732 706F7274 		.ascii	"portConfig\000"
 5962      436F6E66 
 5962      696700
 5963              	.LASF9:
 5964 073d 5F5F696E 		.ascii	"__int32_t\000"
 5964      7433325F 
 5964      7400
 5965              	.LASF104:
 5966 0747 756E6971 		.ascii	"uniqueId\000"
 5966      75654964 
 5966      00
 5967              	.LASF51:
 5968 0750 64617461 		.ascii	"data9\000"
 5968      3900
 5969              	.LASF143:
 5970 0756 6D5F6C65 		.ascii	"m_level_sensor\000"
 5970      76656C5F 
 5970      73656E73 
 5970      6F7200
 5971              	.LASF34:
 5972 0765 6C657665 		.ascii	"level_reading\000"
 5972      6C5F7265 
 5972      6164696E 
 5972      6700
 5973              	.LASF178:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 133


 5974 0773 4C617942 		.ascii	"LayBack\000"
 5974      61636B00 
 5975              	.LASF144:
 5976 077b 6D5F736F 		.ascii	"m_sontek\000"
 5976      6E74656B 
 5976      00
 5977              	.LASF74:
 5978 0784 73696D5F 		.ascii	"sim_id\000"
 5978      696400
 5979              	.LASF65:
 5980 078b 746D5F6D 		.ascii	"tm_mday\000"
 5980      64617900 
 5981              	.LASF116:
 5982 0793 6E657741 		.ascii	"newAlarm\000"
 5982      6C61726D 
 5982      00
 5983              	.LASF62:
 5984 079c 746D5F73 		.ascii	"tm_sec\000"
 5984      656300
 5985              	.LASF145:
 5986 07a3 6D5F7072 		.ascii	"m_pressure\000"
 5986      65737375 
 5986      726500
 5987              	.LASF30:
 5988 07ae 73746174 		.ascii	"status\000"
 5988      757300
 5989              	.LASF157:
 5990 07b5 64617461 		.ascii	"dataPointsInStackDesired\000"
 5990      506F696E 
 5990      7473496E 
 5990      53746163 
 5990      6B446573 
 5991              	.LASF121:
 5992 07ce 745F766F 		.ascii	"t_voltages\000"
 5992      6C746167 
 5992      657300
 5993              	.LASF41:
 5994 07d9 6C616265 		.ascii	"labels\000"
 5994      6C7300
 5995              	.LASF175:
 5996 07e0 6E6F746F 		.ascii	"notoriOS.c\000"
 5996      72694F53 
 5996      2E6300
 5997              	.LASF164:
 5998 07eb 68747470 		.ascii	"http_body\000"
 5998      5F626F64 
 5998      7900
 5999              	.LASF15:
 6000 07f5 696E7431 		.ascii	"int16\000"
 6000      3600
 6001              	.LASF95:
 6002 07fb 636F756E 		.ascii	"countDownType\000"
 6002      74446F77 
 6002      6E547970 
 6002      6500
 6003              	.LASF94:
 6004 0809 63757272 		.ascii	"currentCountDownValue\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cc74et7M.s 			page 134


 6004      656E7443 
 6004      6F756E74 
 6004      446F776E 
 6004      56616C75 
 6005              	.LASF87:
 6006 081f 73696D5F 		.ascii	"sim_type\000"
 6006      74797065 
 6006      00
 6007              	.LASF105:
 6008 0828 635F6865 		.ascii	"c_hey\000"
 6008      7900
 6009              	.LASF25:
 6010 082e 4461794F 		.ascii	"DayOfYear\000"
 6010      66596561 
 6010      7200
 6011              	.LASF61:
 6012 0838 70726573 		.ascii	"pressure_t\000"
 6012      73757265 
 6012      5F7400
 6013              	.LASF114:
 6014 0843 416C6172 		.ascii	"AlarmReady\000"
 6014      6D526561 
 6014      647900
 6015              	.LASF117:
 6016 084e 52656164 		.ascii	"ReadyOrNot\000"
 6016      794F724E 
 6016      6F7400
 6017              	.LASF179:
 6018 0859 6D61696E 		.ascii	"main\000"
 6018      00
 6019              	.LASF99:
 6020 085e 63686970 		.ascii	"chip_uniqueId\000"
 6020      5F756E69 
 6020      71756549 
 6020      6400
 6021              	.LASF88:
 6022 086c 6D656173 		.ascii	"measure_time\000"
 6022      7572655F 
 6022      74696D65 
 6022      00
 6023              	.LASF18:
 6024 0879 646F7562 		.ascii	"double\000"
 6024      6C6500
 6025              	.LASF58:
 6026 0880 766F6C74 		.ascii	"voltage_t\000"
 6026      6167655F 
 6026      7400
 6027              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
