ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,10,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	App_LED_enabled,1,1
  33              		.comm	app_led_inbox,100,4
  34              		.comm	level_sensor_inbox,100,4
  35              		.comm	level_sensor_enabled,1,1
  36              		.comm	downstream_level_sensor_inbox,100,4
  37              		.comm	downstream_level_sensor_enabled,1,1
  38              		.comm	valve_diameter,4,4
  39              		.comm	valve_type,10,4
  40              		.comm	valve_enabled,1,1
  41              		.comm	valve_inbox,100,4
  42              		.comm	autosampler_enabled,1,1
  43              		.comm	autosampler_inbox,100,4
  44              		.comm	http_request,10000,4
  45              		.comm	http_body,10000,4
  46              		.comm	http_route,200,4
  47              		.comm	system_info,28,4
  48              		.comm	system_settings,104,4
  49              		.comm	alarmMeasure,6,4
  50              		.comm	timeToMeasure,1,1
  51              		.comm	alarmSync,6,4
  52              		.comm	timeToSync,1,1
  53              		.comm	timeToSycnRemoteParams,1,1
  54              		.comm	hey,1,1
  55              		.comm	alarmAppLED,6,4
  56              		.comm	timeToAppLED,1,1
  57              		.comm	alarmLevelSensor,6,4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 2


  58              		.comm	timeToLevelSensor,1,1
  59              		.comm	alarmDownstreamLevelSensor,6,4
  60              		.comm	timeToDownstreamLevelSensor,1,1
  61              		.comm	alarmValve,6,4
  62              		.comm	timeToValve,1,1
  63              		.comm	alarmAutosampler,6,4
  64              		.comm	timeToAutosampler,1,1
  65              		.section	.text.Wakeup_ISR,"ax",%progbits
  66              		.align	2
  67              		.global	Wakeup_ISR
  68              		.thumb
  69              		.thumb_func
  70              		.type	Wakeup_ISR, %function
  71              	Wakeup_ISR:
  72              	.LFB64:
  73              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  74              		.loc 1 20 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  84              		.loc 1 22 0
  85 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  86              		.loc 1 23 0
  87 0008 00BF     		nop
  88 000a 80BD     		pop	{r7, pc}
  89              		.cfi_endproc
  90              	.LFE64:
  91              		.size	Wakeup_ISR, .-Wakeup_ISR
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 3


  92              		.global	Data_fileName
  93              		.data
  94              		.align	2
  95              		.type	Data_fileName, %object
  96              		.size	Data_fileName, 30
  97              	Data_fileName:
  98 0000 64617461 		.ascii	"data.txt\000"
  98      2E747874 
  98      00
  99 0009 00000000 		.space	21
  99      00000000 
  99      00000000 
  99      00000000 
  99      00000000 
 100              		.comm	try_counter,1,1
 101              		.section	.rodata
 102              		.align	2
 103              	.LC0:
 104 0000 25582D25 		.ascii	"%X-%X\000"
 104      5800
 105 0006 0000     		.align	2
 106              	.LC1:
 107 0008 6563322D 		.ascii	"ec2-18-222-229-124.us-east-2.compute.amazonaws.com\000"
 107      31382D32 
 107      32322D32 
 107      32392D31 
 107      32342E75 
 108              		.section	.text.ReadyOrNot,"ax",%progbits
 109              		.align	2
 110              		.global	ReadyOrNot
 111              		.thumb
 112              		.thumb_func
 113              		.type	ReadyOrNot, %function
 114              	ReadyOrNot:
 115              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
 116              		.loc 1 41 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 24
 119              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 4


 120 0000 B0B5     		push	{r4, r5, r7, lr}
 121              		.cfi_def_cfa_offset 16
 122              		.cfi_offset 4, -16
 123              		.cfi_offset 5, -12
 124              		.cfi_offset 7, -8
 125              		.cfi_offset 14, -4
 126 0002 88B0     		sub	sp, sp, #32
 127              		.cfi_def_cfa_offset 48
 128 0004 02AF     		add	r7, sp, #8
 129              		.cfi_def_cfa 7, 40
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 130              		.loc 1 43 0
 131 0006 5548     		ldr	r0, .L3
 132 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 133              		.loc 1 44 0
 134 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 135              		.loc 1 46 0
 136 0010 FF20     		movs	r0, #255
 137 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 138              		.loc 1 47 0
 139 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 140              		.loc 1 48 0
 141 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 142              		.loc 1 50 0
 143 001e FFF7FEFF 		bl	modem_initialize
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 144              		.loc 1 52 0
 145 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  53:notoriOS.c    ****    
  54:notoriOS.c    ****     
  55:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  56:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  57:notoriOS.c    ****     
  58:notoriOS.c    ****     
  59:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  60:notoriOS.c    ****     uint32 uniqueId[2];
  61:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  62:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 146              		.loc 1 62 0
 147 0026 07F10C03 		add	r3, r7, #12
 148 002a 1846     		mov	r0, r3
 149 002c FFF7FEFF 		bl	CyGetUniqueId
  63:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 150              		.loc 1 63 0
 151 0030 FA68     		ldr	r2, [r7, #12]
 152 0032 3B69     		ldr	r3, [r7, #16]
 153 0034 0093     		str	r3, [sp]
 154 0036 1346     		mov	r3, r2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 5


 155 0038 494A     		ldr	r2, .L3+4
 156 003a 1821     		movs	r1, #24
 157 003c 4948     		ldr	r0, .L3+8
 158 003e FFF7FEFF 		bl	snprintf
  64:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  65:notoriOS.c    ****     system_info.modem_info = &modem_info;
 159              		.loc 1 65 0
 160 0042 494B     		ldr	r3, .L3+12
 161 0044 494A     		ldr	r2, .L3+16
 162 0046 1A60     		str	r2, [r3]
  66:notoriOS.c    ****     
  67:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  68:notoriOS.c    ****     // testing server - travis and meagan june of 2022
  69:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","ec2-18-222-229-124.us-ea
 163              		.loc 1 69 0
 164 0048 494A     		ldr	r2, .L3+20
 165 004a 4A4B     		ldr	r3, .L3+24
 166 004c 1446     		mov	r4, r2
 167 004e 1D46     		mov	r5, r3
 168 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 169 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 170 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 171 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 172 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 173 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 174 005c 2B68     		ldr	r3, [r5]
 175 005e 1A46     		mov	r2, r3	@ movhi
 176 0060 2280     		strh	r2, [r4]	@ movhi
 177 0062 0234     		adds	r4, r4, #2
 178 0064 1B0C     		lsrs	r3, r3, #16
 179 0066 2370     		strb	r3, [r4]
  70:notoriOS.c    ****     
  71:notoriOS.c    ****     // production server
  72:notoriOS.c    ****     //snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","malcom.open-storm.org"
  73:notoriOS.c    ****     
  74:notoriOS.c    **** 
  75:notoriOS.c    ****     system_settings.ep_port = 5000;
 180              		.loc 1 75 0
 181 0068 414B     		ldr	r3, .L3+20
 182 006a 41F28832 		movw	r2, #5000
 183 006e 5A66     		str	r2, [r3, #100]
  76:notoriOS.c    ****     // Don't need the following for new nodes
  77:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  78:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  79:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  80:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  81:notoriOS.c    ****         
  82:notoriOS.c    ****     
  83:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  84:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 184              		.loc 1 84 0
 185 0070 414B     		ldr	r3, .L3+28
 186 0072 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 187 0074 99B2     		uxth	r1, r3
 188 0076 414C     		ldr	r4, .L3+32
 189 0078 3846     		mov	r0, r7
 190 007a 0723     		movs	r3, #7
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 6


 191 007c 0122     		movs	r2, #1
 192 007e FFF7FEFF 		bl	CreateAlarm
 193 0082 2246     		mov	r2, r4
 194 0084 3B46     		mov	r3, r7
 195 0086 1968     		ldr	r1, [r3]	@ unaligned
 196 0088 1160     		str	r1, [r2]	@ unaligned
 197 008a 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 198 008c 9380     		strh	r3, [r2, #4]	@ unaligned
  85:notoriOS.c    ****     timeToMeasure = 1u;
 199              		.loc 1 85 0
 200 008e 3C4B     		ldr	r3, .L3+36
 201 0090 0122     		movs	r2, #1
 202 0092 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  87:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 203              		.loc 1 87 0
 204 0094 384B     		ldr	r3, .L3+28
 205 0096 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 206 0098 99B2     		uxth	r1, r3
 207 009a 3A4C     		ldr	r4, .L3+40
 208 009c 3846     		mov	r0, r7
 209 009e 0723     		movs	r3, #7
 210 00a0 0122     		movs	r2, #1
 211 00a2 FFF7FEFF 		bl	CreateAlarm
 212 00a6 2246     		mov	r2, r4
 213 00a8 3B46     		mov	r3, r7
 214 00aa 1968     		ldr	r1, [r3]	@ unaligned
 215 00ac 1160     		str	r1, [r2]	@ unaligned
 216 00ae 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 217 00b0 9380     		strh	r3, [r2, #4]	@ unaligned
  88:notoriOS.c    ****     timeToSync = 1u;
 218              		.loc 1 88 0
 219 00b2 354B     		ldr	r3, .L3+44
 220 00b4 0122     		movs	r2, #1
 221 00b6 1A70     		strb	r2, [r3]
  89:notoriOS.c    ****     
  90:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 222              		.loc 1 90 0
 223 00b8 344B     		ldr	r3, .L3+48
 224 00ba 0022     		movs	r2, #0
 225 00bc 1A70     		strb	r2, [r3]
  91:notoriOS.c    ****     
  92:notoriOS.c    ****     // App Initializations
  93:notoriOS.c    ****     // APP_INTERFACE-------------------------------------------------------------------------------
  94:notoriOS.c    ****     alarmAppLED = CreateAlarm(updatable_parameters.App_LED_freq,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTIN
 226              		.loc 1 94 0
 227 00be 2E4B     		ldr	r3, .L3+28
 228 00c0 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 229 00c2 99B2     		uxth	r1, r3
 230 00c4 324C     		ldr	r4, .L3+52
 231 00c6 3846     		mov	r0, r7
 232 00c8 0723     		movs	r3, #7
 233 00ca 0122     		movs	r2, #1
 234 00cc FFF7FEFF 		bl	CreateAlarm
 235 00d0 2246     		mov	r2, r4
 236 00d2 3B46     		mov	r3, r7
 237 00d4 1968     		ldr	r1, [r3]	@ unaligned
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 7


 238 00d6 1160     		str	r1, [r2]	@ unaligned
 239 00d8 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 240 00da 9380     		strh	r3, [r2, #4]	@ unaligned
  95:notoriOS.c    ****     timeToAppLED = 1u;
 241              		.loc 1 95 0
 242 00dc 2D4B     		ldr	r3, .L3+56
 243 00de 0122     		movs	r2, #1
 244 00e0 1A70     		strb	r2, [r3]
  96:notoriOS.c    ****     
  97:notoriOS.c    ****     alarmLevelSensor = CreateAlarm(updatable_parameters.Level_Sensor_freq,ALARM_TYPE_MINUTE, ALARM_
 245              		.loc 1 97 0
 246 00e2 254B     		ldr	r3, .L3+28
 247 00e4 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 248 00e6 99B2     		uxth	r1, r3
 249 00e8 2B4C     		ldr	r4, .L3+60
 250 00ea 3846     		mov	r0, r7
 251 00ec 0723     		movs	r3, #7
 252 00ee 0122     		movs	r2, #1
 253 00f0 FFF7FEFF 		bl	CreateAlarm
 254 00f4 2246     		mov	r2, r4
 255 00f6 3B46     		mov	r3, r7
 256 00f8 1968     		ldr	r1, [r3]	@ unaligned
 257 00fa 1160     		str	r1, [r2]	@ unaligned
 258 00fc 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 259 00fe 9380     		strh	r3, [r2, #4]	@ unaligned
  98:notoriOS.c    ****     timeToLevelSensor = 1u;
 260              		.loc 1 98 0
 261 0100 264B     		ldr	r3, .L3+64
 262 0102 0122     		movs	r2, #1
 263 0104 1A70     		strb	r2, [r3]
  99:notoriOS.c    ****     
 100:notoriOS.c    ****     alarmDownstreamLevelSensor = CreateAlarm(updatable_parameters.Downstream_Level_Sensor_freq,ALAR
 264              		.loc 1 100 0
 265 0106 1C4B     		ldr	r3, .L3+28
 266 0108 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 267 010a 99B2     		uxth	r1, r3
 268 010c 244C     		ldr	r4, .L3+68
 269 010e 3846     		mov	r0, r7
 270 0110 0723     		movs	r3, #7
 271 0112 0122     		movs	r2, #1
 272 0114 FFF7FEFF 		bl	CreateAlarm
 273 0118 2246     		mov	r2, r4
 274 011a 3B46     		mov	r3, r7
 275 011c 1968     		ldr	r1, [r3]	@ unaligned
 276 011e 1160     		str	r1, [r2]	@ unaligned
 277 0120 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 278 0122 9380     		strh	r3, [r2, #4]	@ unaligned
 101:notoriOS.c    ****     timeToDownstreamLevelSensor = 1u;
 279              		.loc 1 101 0
 280 0124 1F4B     		ldr	r3, .L3+72
 281 0126 0122     		movs	r2, #1
 282 0128 1A70     		strb	r2, [r3]
 102:notoriOS.c    ****     
 103:notoriOS.c    ****     //alarmValve = CreateAlarm(updatable_parameters.Valve_freq, ALARM_TYPE_MINUTE,ALARM_TYPE_CONTIN
 104:notoriOS.c    ****     //timeToValve = 1u;
 105:notoriOS.c    **** 
 106:notoriOS.c    ****     alarmAutosampler = CreateAlarm(updatable_parameters.Autosampler_freq,ALARM_TYPE_MINUTE,ALARM_TY
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 8


 283              		.loc 1 106 0
 284 012a 134B     		ldr	r3, .L3+28
 285 012c 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 286 012e 99B2     		uxth	r1, r3
 287 0130 1D4C     		ldr	r4, .L3+76
 288 0132 3846     		mov	r0, r7
 289 0134 0723     		movs	r3, #7
 290 0136 0122     		movs	r2, #1
 291 0138 FFF7FEFF 		bl	CreateAlarm
 292 013c 2246     		mov	r2, r4
 293 013e 3B46     		mov	r3, r7
 294 0140 1968     		ldr	r1, [r3]	@ unaligned
 295 0142 1160     		str	r1, [r2]	@ unaligned
 296 0144 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 297 0146 9380     		strh	r3, [r2, #4]	@ unaligned
 107:notoriOS.c    ****     timeToAutosampler = 1u;
 298              		.loc 1 107 0
 299 0148 184B     		ldr	r3, .L3+80
 300 014a 0122     		movs	r2, #1
 301 014c 1A70     		strb	r2, [r3]
 108:notoriOS.c    ****     /* app add template
 109:notoriOS.c    ****     alarm<Name> = CreateAlarm(updatable_parameters.<Name>_freq,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINU
 110:notoriOS.c    ****     timeTo<Name> = 1u;
 111:notoriOS.c    ****     */
 112:notoriOS.c    ****     //---------------------------------------------------------------------------------------------
 113:notoriOS.c    **** 
 114:notoriOS.c    ****     
 115:notoriOS.c    ****     // Initialize the try counter to 0
 116:notoriOS.c    ****     uint8 try_counter = 0;
 302              		.loc 1 116 0
 303 014e 0023     		movs	r3, #0
 304 0150 FB75     		strb	r3, [r7, #23]
 117:notoriOS.c    **** }
 305              		.loc 1 117 0
 306 0152 00BF     		nop
 307 0154 1837     		adds	r7, r7, #24
 308              		.cfi_def_cfa_offset 16
 309 0156 BD46     		mov	sp, r7
 310              		.cfi_def_cfa_register 13
 311              		@ sp needed
 312 0158 B0BD     		pop	{r4, r5, r7, pc}
 313              	.L4:
 314 015a 00BF     		.align	2
 315              	.L3:
 316 015c 00000000 		.word	Wakeup_ISR
 317 0160 00000000 		.word	.LC0
 318 0164 04000000 		.word	system_info+4
 319 0168 00000000 		.word	system_info
 320 016c 00000000 		.word	modem_info
 321 0170 00000000 		.word	system_settings
 322 0174 08000000 		.word	.LC1
 323 0178 00000000 		.word	updatable_parameters
 324 017c 00000000 		.word	alarmMeasure
 325 0180 00000000 		.word	timeToMeasure
 326 0184 00000000 		.word	alarmSync
 327 0188 00000000 		.word	timeToSync
 328 018c 00000000 		.word	timeToSycnRemoteParams
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 9


 329 0190 00000000 		.word	alarmAppLED
 330 0194 00000000 		.word	timeToAppLED
 331 0198 00000000 		.word	alarmLevelSensor
 332 019c 00000000 		.word	timeToLevelSensor
 333 01a0 00000000 		.word	alarmDownstreamLevelSensor
 334 01a4 00000000 		.word	timeToDownstreamLevelSensor
 335 01a8 00000000 		.word	alarmAutosampler
 336 01ac 00000000 		.word	timeToAutosampler
 337              		.cfi_endproc
 338              	.LFE65:
 339              		.size	ReadyOrNot, .-ReadyOrNot
 340              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 341              		.align	2
 342              		.global	WorkWorkWorkWorkWorkWork
 343              		.thumb
 344              		.thumb_func
 345              		.type	WorkWorkWorkWorkWorkWork, %function
 346              	WorkWorkWorkWorkWorkWork:
 347              	.LFB66:
 118:notoriOS.c    **** 
 119:notoriOS.c    **** 
 120:notoriOS.c    **** // ==============================================
 121:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
 122:notoriOS.c    **** //      - Rihanna, feat Drake (2016)
 123:notoriOS.c    **** //
 124:notoriOS.c    **** // Prorcesses core tasks
 125:notoriOS.c    **** // ==============================================
 126:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
 127:notoriOS.c    **** {
 348              		.loc 1 127 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 8
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352 0000 80B5     		push	{r7, lr}
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 7, -8
 355              		.cfi_offset 14, -4
 356 0002 82B0     		sub	sp, sp, #8
 357              		.cfi_def_cfa_offset 16
 358 0004 00AF     		add	r7, sp, #0
 359              		.cfi_def_cfa_register 7
 128:notoriOS.c    ****     
 129:notoriOS.c    ****     
 130:notoriOS.c    ****     
 131:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 132:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 133:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
 134:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 135:notoriOS.c    ****     
 136:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 137:notoriOS.c    ****     if(timeToSycnRemoteParams){
 360              		.loc 1 137 0
 361 0006 374B     		ldr	r3, .L15
 362 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 363 000a 002B     		cmp	r3, #0
 364 000c 06D0     		beq	.L6
 138:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 10


 365              		.loc 1 138 0
 366 000e FFF7FEFF 		bl	configureRemoteParams
 367 0012 0346     		mov	r3, r0
 368 0014 1A46     		mov	r2, r3
 369 0016 334B     		ldr	r3, .L15
 370 0018 1A70     		strb	r2, [r3]
 371 001a 50E0     		b	.L7
 372              	.L6:
 139:notoriOS.c    ****     }
 140:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 141:notoriOS.c    ****     else if(timeToMeasure){
 373              		.loc 1 141 0
 374 001c 324B     		ldr	r3, .L15+4
 375 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 376 0020 002B     		cmp	r3, #0
 377 0022 06D0     		beq	.L8
 142:notoriOS.c    ****         // on custom nodes makeMeasurements will just be battery voltages
 143:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 378              		.loc 1 143 0
 379 0024 FFF7FEFF 		bl	makeMeasurements
 380 0028 0346     		mov	r3, r0
 381 002a 1A46     		mov	r2, r3
 382 002c 2E4B     		ldr	r3, .L15+4
 383 002e 1A70     		strb	r2, [r3]
 384 0030 45E0     		b	.L7
 385              	.L8:
 144:notoriOS.c    ****     }  
 145:notoriOS.c    ****     // custom nodes
 146:notoriOS.c    ****     // APP_INTERFACE-------------------------------------------------------------------------------
 147:notoriOS.c    ****     else if(updatable_parameters.node_type == NODE_TYPE_CUSTOM){
 386              		.loc 1 147 0
 387 0032 2E4B     		ldr	r3, .L15+8
 388 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 389 0036 042B     		cmp	r3, #4
 390 0038 41D1     		bne	.L7
 148:notoriOS.c    ****         if(App_LED_enabled && timeToAppLED){
 391              		.loc 1 148 0
 392 003a 2D4B     		ldr	r3, .L15+12
 393 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 394 003e 002B     		cmp	r3, #0
 395 0040 09D0     		beq	.L9
 396              		.loc 1 148 0 is_stmt 0 discriminator 1
 397 0042 2C4B     		ldr	r3, .L15+16
 398 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 399 0046 002B     		cmp	r3, #0
 400 0048 05D0     		beq	.L9
 149:notoriOS.c    ****             timeToAppLED = App_LED();
 401              		.loc 1 149 0 is_stmt 1
 402 004a FFF7FEFF 		bl	App_LED
 403 004e 0346     		mov	r3, r0
 404 0050 1A46     		mov	r2, r3
 405 0052 284B     		ldr	r3, .L15+16
 406 0054 1A70     		strb	r2, [r3]
 407              	.L9:
 150:notoriOS.c    ****         }
 151:notoriOS.c    ****         if(level_sensor_enabled && timeToLevelSensor){
 408              		.loc 1 151 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 11


 409 0056 284B     		ldr	r3, .L15+20
 410 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 411 005a 002B     		cmp	r3, #0
 412 005c 09D0     		beq	.L10
 413              		.loc 1 151 0 is_stmt 0 discriminator 1
 414 005e 274B     		ldr	r3, .L15+24
 415 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 416 0062 002B     		cmp	r3, #0
 417 0064 05D0     		beq	.L10
 152:notoriOS.c    ****             timeToLevelSensor = level_sensor();
 418              		.loc 1 152 0 is_stmt 1
 419 0066 FFF7FEFF 		bl	level_sensor
 420 006a 0346     		mov	r3, r0
 421 006c 1A46     		mov	r2, r3
 422 006e 234B     		ldr	r3, .L15+24
 423 0070 1A70     		strb	r2, [r3]
 424              	.L10:
 153:notoriOS.c    ****         }
 154:notoriOS.c    ****         if(downstream_level_sensor_enabled && timeToDownstreamLevelSensor){
 425              		.loc 1 154 0
 426 0072 234B     		ldr	r3, .L15+28
 427 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 428 0076 002B     		cmp	r3, #0
 429 0078 09D0     		beq	.L11
 430              		.loc 1 154 0 is_stmt 0 discriminator 1
 431 007a 224B     		ldr	r3, .L15+32
 432 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 433 007e 002B     		cmp	r3, #0
 434 0080 05D0     		beq	.L11
 155:notoriOS.c    ****             timeToDownstreamLevelSensor = downstream_level_sensor();
 435              		.loc 1 155 0 is_stmt 1
 436 0082 FFF7FEFF 		bl	downstream_level_sensor
 437 0086 0346     		mov	r3, r0
 438 0088 1A46     		mov	r2, r3
 439 008a 1E4B     		ldr	r3, .L15+32
 440 008c 1A70     		strb	r2, [r3]
 441              	.L11:
 156:notoriOS.c    ****         }
 157:notoriOS.c    ****         if(valve_enabled){
 442              		.loc 1 157 0
 443 008e 1E4B     		ldr	r3, .L15+36
 444 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 445 0092 002B     		cmp	r3, #0
 446 0094 05D0     		beq	.L12
 158:notoriOS.c    ****             valve_enabled = App_Valve();
 447              		.loc 1 158 0
 448 0096 FFF7FEFF 		bl	App_Valve
 449 009a 0346     		mov	r3, r0
 450 009c 1A46     		mov	r2, r3
 451 009e 1A4B     		ldr	r3, .L15+36
 452 00a0 1A70     		strb	r2, [r3]
 453              	.L12:
 159:notoriOS.c    ****         }
 160:notoriOS.c    ****         if(autosampler_enabled && timeToAutosampler){
 454              		.loc 1 160 0
 455 00a2 1A4B     		ldr	r3, .L15+40
 456 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 12


 457 00a6 002B     		cmp	r3, #0
 458 00a8 09D0     		beq	.L7
 459              		.loc 1 160 0 is_stmt 0 discriminator 1
 460 00aa 194B     		ldr	r3, .L15+44
 461 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 462 00ae 002B     		cmp	r3, #0
 463 00b0 05D0     		beq	.L7
 161:notoriOS.c    ****             timeToAutosampler = App_Autosampler();
 464              		.loc 1 161 0 is_stmt 1
 465 00b2 FFF7FEFF 		bl	App_Autosampler
 466 00b6 0346     		mov	r3, r0
 467 00b8 1A46     		mov	r2, r3
 468 00ba 154B     		ldr	r3, .L15+44
 469 00bc 1A70     		strb	r2, [r3]
 470              	.L7:
 162:notoriOS.c    ****         }
 163:notoriOS.c    ****         // add other custom apps below
 164:notoriOS.c    ****         /* add app template
 165:notoriOS.c    ****         if(<name>_enabled && timeTo<Name>){
 166:notoriOS.c    ****             timeTo<Name> = App_<Name>();
 167:notoriOS.c    ****         }
 168:notoriOS.c    ****         */
 169:notoriOS.c    **** 
 170:notoriOS.c    ****     }
 171:notoriOS.c    ****     //---------------------------------------------------------------------------------------------
 172:notoriOS.c    ****     if(timeToSync){
 471              		.loc 1 172 0
 472 00be 154B     		ldr	r3, .L15+48
 473 00c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 474 00c2 002B     		cmp	r3, #0
 475 00c4 05D0     		beq	.L13
 173:notoriOS.c    ****         timeToSync = syncData();
 476              		.loc 1 173 0
 477 00c6 FFF7FEFF 		bl	syncData
 478 00ca 0346     		mov	r3, r0
 479 00cc 1A46     		mov	r2, r3
 480 00ce 114B     		ldr	r3, .L15+48
 481 00d0 1A70     		strb	r2, [r3]
 482              	.L13:
 174:notoriOS.c    ****     } 
 175:notoriOS.c    ****     
 176:notoriOS.c    **** 
 177:notoriOS.c    ****     
 178:notoriOS.c    ****     // Print the countdown to the next alarm
 179:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 180:notoriOS.c    ****     
 181:notoriOS.c    ****     
 182:notoriOS.c    ****     // Check modem state machine on every loop
 183:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
 483              		.loc 1 183 0
 484 00d2 FFF7FEFF 		bl	modem_process_tasks
 485 00d6 0346     		mov	r3, r0
 486 00d8 FB71     		strb	r3, [r7, #7]
 184:notoriOS.c    **** 
 185:notoriOS.c    ****     return 0u +  modem_status;  
 487              		.loc 1 185 0
 488 00da FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 13


 186:notoriOS.c    **** }
 489              		.loc 1 186 0
 490 00dc 1846     		mov	r0, r3
 491 00de 0837     		adds	r7, r7, #8
 492              		.cfi_def_cfa_offset 8
 493 00e0 BD46     		mov	sp, r7
 494              		.cfi_def_cfa_register 13
 495              		@ sp needed
 496 00e2 80BD     		pop	{r7, pc}
 497              	.L16:
 498              		.align	2
 499              	.L15:
 500 00e4 00000000 		.word	timeToSycnRemoteParams
 501 00e8 00000000 		.word	timeToMeasure
 502 00ec 00000000 		.word	updatable_parameters
 503 00f0 00000000 		.word	App_LED_enabled
 504 00f4 00000000 		.word	timeToAppLED
 505 00f8 00000000 		.word	level_sensor_enabled
 506 00fc 00000000 		.word	timeToLevelSensor
 507 0100 00000000 		.word	downstream_level_sensor_enabled
 508 0104 00000000 		.word	timeToDownstreamLevelSensor
 509 0108 00000000 		.word	valve_enabled
 510 010c 00000000 		.word	autosampler_enabled
 511 0110 00000000 		.word	timeToAutosampler
 512 0114 00000000 		.word	timeToSync
 513              		.cfi_endproc
 514              	.LFE66:
 515              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 516              		.section	.text.LayBack,"ax",%progbits
 517              		.align	2
 518              		.global	LayBack
 519              		.thumb
 520              		.thumb_func
 521              		.type	LayBack, %function
 522              	LayBack:
 523              	.LFB67:
 187:notoriOS.c    **** 
 188:notoriOS.c    **** 
 189:notoriOS.c    **** 
 190:notoriOS.c    **** 
 191:notoriOS.c    **** 
 192:notoriOS.c    **** 
 193:notoriOS.c    **** // ==============================================
 194:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 195:notoriOS.c    **** //      - Snoop Dogg (1993)
 196:notoriOS.c    **** //
 197:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 198:notoriOS.c    **** // ==============================================
 199:notoriOS.c    **** void LayBack()
 200:notoriOS.c    **** {
 524              		.loc 1 200 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 1, uses_anonymous_args = 0
 528 0000 80B5     		push	{r7, lr}
 529              		.cfi_def_cfa_offset 8
 530              		.cfi_offset 7, -8
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 14


 531              		.cfi_offset 14, -4
 532 0002 00AF     		add	r7, sp, #0
 533              		.cfi_def_cfa_register 7
 201:notoriOS.c    ****   
 202:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 534              		.loc 1 202 0
 535 0004 FFF7FEFF 		bl	modem_sleep
 203:notoriOS.c    ****     
 204:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 205:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 536              		.loc 1 205 0
 537 0008 FFF7FEFF 		bl	debug_sleep
 206:notoriOS.c    ****     
 207:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 538              		.loc 1 207 0
 539 000c FFF7FEFF 		bl	CyPmSaveClocks
 208:notoriOS.c    ****     
 209:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 210:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 211:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 212:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 213:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 214:notoriOS.c    ****     //CyPmHibernate();
 215:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 216:notoriOS.c    **** 
 217:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 540              		.loc 1 217 0
 541 0010 4FF40061 		mov	r1, #2048
 542 0014 0020     		movs	r0, #0
 543 0016 FFF7FEFF 		bl	CyPmSleep
 218:notoriOS.c    **** 
 219:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 544              		.loc 1 219 0
 545 001a FFF7FEFF 		bl	CyPmRestoreClocks
 220:notoriOS.c    **** 
 221:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 546              		.loc 1 221 0
 547 001e FFF7FEFF 		bl	debug_wakeup
 222:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 548              		.loc 1 222 0
 549 0022 FFF7FEFF 		bl	modem_wakeup
 223:notoriOS.c    **** 
 224:notoriOS.c    **** }
 550              		.loc 1 224 0
 551 0026 00BF     		nop
 552 0028 80BD     		pop	{r7, pc}
 553              		.cfi_endproc
 554              	.LFE67:
 555              		.size	LayBack, .-LayBack
 556 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 557              		.align	2
 558              		.global	AyoItsTime
 559              		.thumb
 560              		.thumb_func
 561              		.type	AyoItsTime, %function
 562              	AyoItsTime:
 563              	.LFB68:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 15


 225:notoriOS.c    **** 
 226:notoriOS.c    **** 
 227:notoriOS.c    **** // ==============================================
 228:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 229:notoriOS.c    **** //      - NAS (1994)
 230:notoriOS.c    **** //
 231:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 232:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 233:notoriOS.c    **** // It will add tasks to the work queue,
 234:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 235:notoriOS.c    **** // ==============================================
 236:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 237:notoriOS.c    **** {
 564              		.loc 1 237 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 8
 567              		@ frame_needed = 1, uses_anonymous_args = 0
 568 0000 80B5     		push	{r7, lr}
 569              		.cfi_def_cfa_offset 8
 570              		.cfi_offset 7, -8
 571              		.cfi_offset 14, -4
 572 0002 82B0     		sub	sp, sp, #8
 573              		.cfi_def_cfa_offset 16
 574 0004 00AF     		add	r7, sp, #0
 575              		.cfi_def_cfa_register 7
 576 0006 0346     		mov	r3, r0
 577 0008 FB71     		strb	r3, [r7, #7]
 238:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 239:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 578              		.loc 1 239 0
 579 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 580 000c 1946     		mov	r1, r3
 581 000e 2248     		ldr	r0, .L26
 582 0010 FFF7FEFF 		bl	AlarmReady
 583 0014 0346     		mov	r3, r0
 584 0016 002B     		cmp	r3, #0
 585 0018 02D0     		beq	.L19
 240:notoriOS.c    ****     {
 241:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 242:notoriOS.c    ****         timeToMeasure = 1u;
 586              		.loc 1 242 0
 587 001a 204B     		ldr	r3, .L26+4
 588 001c 0122     		movs	r2, #1
 589 001e 1A70     		strb	r2, [r3]
 590              	.L19:
 243:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 244:notoriOS.c    ****         
 245:notoriOS.c    ****     }
 246:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 591              		.loc 1 246 0
 592 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 593 0022 1946     		mov	r1, r3
 594 0024 1E48     		ldr	r0, .L26+8
 595 0026 FFF7FEFF 		bl	AlarmReady
 596 002a 0346     		mov	r3, r0
 597 002c 002B     		cmp	r3, #0
 598 002e 02D0     		beq	.L20
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 16


 247:notoriOS.c    ****     {
 248:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 249:notoriOS.c    ****         timeToSync = 1u;
 599              		.loc 1 249 0
 600 0030 1C4B     		ldr	r3, .L26+12
 601 0032 0122     		movs	r2, #1
 602 0034 1A70     		strb	r2, [r3]
 603              	.L20:
 250:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 251:notoriOS.c    ****     }
 252:notoriOS.c    ****     
 253:notoriOS.c    ****     // APP_INTERFACE-------------------------------------------------------------------------------
 254:notoriOS.c    ****     if(AlarmReady(&alarmAppLED,alarmType)){
 604              		.loc 1 254 0
 605 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 606 0038 1946     		mov	r1, r3
 607 003a 1B48     		ldr	r0, .L26+16
 608 003c FFF7FEFF 		bl	AlarmReady
 609 0040 0346     		mov	r3, r0
 610 0042 002B     		cmp	r3, #0
 611 0044 02D0     		beq	.L21
 255:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 256:notoriOS.c    ****         timeToAppLED = 1u;
 612              		.loc 1 256 0
 613 0046 194B     		ldr	r3, .L26+20
 614 0048 0122     		movs	r2, #1
 615 004a 1A70     		strb	r2, [r3]
 616              	.L21:
 257:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 258:notoriOS.c    ****     }
 259:notoriOS.c    ****     if(AlarmReady(&alarmLevelSensor, alarmType)){
 617              		.loc 1 259 0
 618 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 619 004e 1946     		mov	r1, r3
 620 0050 1748     		ldr	r0, .L26+24
 621 0052 FFF7FEFF 		bl	AlarmReady
 622 0056 0346     		mov	r3, r0
 623 0058 002B     		cmp	r3, #0
 624 005a 02D0     		beq	.L22
 260:notoriOS.c    ****         timeToLevelSensor = 1u;
 625              		.loc 1 260 0
 626 005c 154B     		ldr	r3, .L26+28
 627 005e 0122     		movs	r2, #1
 628 0060 1A70     		strb	r2, [r3]
 629              	.L22:
 261:notoriOS.c    ****     }
 262:notoriOS.c    ****     if(AlarmReady(&alarmDownstreamLevelSensor, alarmType)){
 630              		.loc 1 262 0
 631 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 632 0064 1946     		mov	r1, r3
 633 0066 1448     		ldr	r0, .L26+32
 634 0068 FFF7FEFF 		bl	AlarmReady
 635 006c 0346     		mov	r3, r0
 636 006e 002B     		cmp	r3, #0
 637 0070 02D0     		beq	.L23
 263:notoriOS.c    ****         timeToDownstreamLevelSensor = 1u;
 638              		.loc 1 263 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 17


 639 0072 124B     		ldr	r3, .L26+36
 640 0074 0122     		movs	r2, #1
 641 0076 1A70     		strb	r2, [r3]
 642              	.L23:
 264:notoriOS.c    ****     }
 265:notoriOS.c    ****     /*
 266:notoriOS.c    ****     if(AlarmReady(&alarmValve, alarmType)){
 267:notoriOS.c    ****         timeToValve = 1u;
 268:notoriOS.c    ****     }
 269:notoriOS.c    ****     */
 270:notoriOS.c    ****     if(AlarmReady(&alarmAutosampler, alarmType)){
 643              		.loc 1 270 0
 644 0078 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 645 007a 1946     		mov	r1, r3
 646 007c 1048     		ldr	r0, .L26+40
 647 007e FFF7FEFF 		bl	AlarmReady
 648 0082 0346     		mov	r3, r0
 649 0084 002B     		cmp	r3, #0
 650 0086 02D0     		beq	.L25
 271:notoriOS.c    ****         timeToAutosampler = 1u;
 651              		.loc 1 271 0
 652 0088 0E4B     		ldr	r3, .L26+44
 653 008a 0122     		movs	r2, #1
 654 008c 1A70     		strb	r2, [r3]
 655              	.L25:
 272:notoriOS.c    ****     }
 273:notoriOS.c    ****     /* app add template
 274:notoriOS.c    ****     if(AlarmReady(&alarm<Name>, alarmType)){
 275:notoriOS.c    ****         timeTo<Name> = 1u;
 276:notoriOS.c    ****     }
 277:notoriOS.c    ****     */
 278:notoriOS.c    ****     // --------------------------------------------------------------------------------------------
 279:notoriOS.c    **** 
 280:notoriOS.c    **** }
 656              		.loc 1 280 0
 657 008e 00BF     		nop
 658 0090 0837     		adds	r7, r7, #8
 659              		.cfi_def_cfa_offset 8
 660 0092 BD46     		mov	sp, r7
 661              		.cfi_def_cfa_register 13
 662              		@ sp needed
 663 0094 80BD     		pop	{r7, pc}
 664              	.L27:
 665 0096 00BF     		.align	2
 666              	.L26:
 667 0098 00000000 		.word	alarmMeasure
 668 009c 00000000 		.word	timeToMeasure
 669 00a0 00000000 		.word	alarmSync
 670 00a4 00000000 		.word	timeToSync
 671 00a8 00000000 		.word	alarmAppLED
 672 00ac 00000000 		.word	timeToAppLED
 673 00b0 00000000 		.word	alarmLevelSensor
 674 00b4 00000000 		.word	timeToLevelSensor
 675 00b8 00000000 		.word	alarmDownstreamLevelSensor
 676 00bc 00000000 		.word	timeToDownstreamLevelSensor
 677 00c0 00000000 		.word	alarmAutosampler
 678 00c4 00000000 		.word	timeToAutosampler
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 18


 679              		.cfi_endproc
 680              	.LFE68:
 681              		.size	AyoItsTime, .-AyoItsTime
 682              		.section	.text.AlarmReady,"ax",%progbits
 683              		.align	2
 684              		.global	AlarmReady
 685              		.thumb
 686              		.thumb_func
 687              		.type	AlarmReady, %function
 688              	AlarmReady:
 689              	.LFB69:
 281:notoriOS.c    **** 
 282:notoriOS.c    **** 
 283:notoriOS.c    **** // ==============================================
 284:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 285:notoriOS.c    **** // ==============================================
 286:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 287:notoriOS.c    **** {
 690              		.loc 1 287 0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 8
 693              		@ frame_needed = 1, uses_anonymous_args = 0
 694 0000 80B5     		push	{r7, lr}
 695              		.cfi_def_cfa_offset 8
 696              		.cfi_offset 7, -8
 697              		.cfi_offset 14, -4
 698 0002 82B0     		sub	sp, sp, #8
 699              		.cfi_def_cfa_offset 16
 700 0004 00AF     		add	r7, sp, #0
 701              		.cfi_def_cfa_register 7
 702 0006 7860     		str	r0, [r7, #4]
 703 0008 0B46     		mov	r3, r1
 704 000a FB70     		strb	r3, [r7, #3]
 288:notoriOS.c    ****     // if the countDownType matches the alarmType
 289:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 705              		.loc 1 289 0
 706 000c 7B68     		ldr	r3, [r7, #4]
 707 000e 1B79     		ldrb	r3, [r3, #4]
 708 0010 DBB2     		uxtb	r3, r3
 709 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 710 0014 9A42     		cmp	r2, r3
 711 0016 12D1     		bne	.L29
 290:notoriOS.c    ****        
 291:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 292:notoriOS.c    ****         // Decrement the count down value by 1
 293:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 712              		.loc 1 293 0
 713 0018 7B68     		ldr	r3, [r7, #4]
 714 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 715 001c 1BB2     		sxth	r3, r3
 716 001e 9BB2     		uxth	r3, r3
 717 0020 013B     		subs	r3, r3, #1
 718 0022 9BB2     		uxth	r3, r3
 719 0024 1AB2     		sxth	r2, r3
 720 0026 7B68     		ldr	r3, [r7, #4]
 721 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 294:notoriOS.c    ****         // If the current count is 0, then reset the alarm
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 19


 295:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 722              		.loc 1 295 0
 723 002a 7B68     		ldr	r3, [r7, #4]
 724 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 725 002e 1BB2     		sxth	r3, r3
 726 0030 002B     		cmp	r3, #0
 727 0032 04DC     		bgt	.L29
 296:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 728              		.loc 1 296 0
 729 0034 7868     		ldr	r0, [r7, #4]
 730 0036 FFF7FEFF 		bl	ResetAlarm
 297:notoriOS.c    ****             return 1u;
 731              		.loc 1 297 0
 732 003a 0123     		movs	r3, #1
 733 003c 00E0     		b	.L30
 734              	.L29:
 298:notoriOS.c    ****         } 
 299:notoriOS.c    ****     }
 300:notoriOS.c    ****     
 301:notoriOS.c    ****     return 0u; // Otherwise return 0
 735              		.loc 1 301 0
 736 003e 0023     		movs	r3, #0
 737              	.L30:
 302:notoriOS.c    **** }
 738              		.loc 1 302 0
 739 0040 1846     		mov	r0, r3
 740 0042 0837     		adds	r7, r7, #8
 741              		.cfi_def_cfa_offset 8
 742 0044 BD46     		mov	sp, r7
 743              		.cfi_def_cfa_register 13
 744              		@ sp needed
 745 0046 80BD     		pop	{r7, pc}
 746              		.cfi_endproc
 747              	.LFE69:
 748              		.size	AlarmReady, .-AlarmReady
 749              		.section	.text.ResetAlarm,"ax",%progbits
 750              		.align	2
 751              		.global	ResetAlarm
 752              		.thumb
 753              		.thumb_func
 754              		.type	ResetAlarm, %function
 755              	ResetAlarm:
 756              	.LFB70:
 303:notoriOS.c    **** 
 304:notoriOS.c    **** // ==============================================
 305:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 306:notoriOS.c    **** // ==============================================
 307:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 308:notoriOS.c    **** {
 757              		.loc 1 308 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 8
 760              		@ frame_needed = 1, uses_anonymous_args = 0
 761              		@ link register save eliminated.
 762 0000 80B4     		push	{r7}
 763              		.cfi_def_cfa_offset 4
 764              		.cfi_offset 7, -4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 20


 765 0002 83B0     		sub	sp, sp, #12
 766              		.cfi_def_cfa_offset 16
 767 0004 00AF     		add	r7, sp, #0
 768              		.cfi_def_cfa_register 7
 769 0006 7860     		str	r0, [r7, #4]
 309:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 310:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 770              		.loc 1 310 0
 771 0008 7B68     		ldr	r3, [r7, #4]
 772 000a 1B88     		ldrh	r3, [r3]	@ movhi
 773 000c 9BB2     		uxth	r3, r3
 774 000e 1AB2     		sxth	r2, r3
 775 0010 7B68     		ldr	r3, [r7, #4]
 776 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 311:notoriOS.c    **** }
 777              		.loc 1 311 0
 778 0014 00BF     		nop
 779 0016 0C37     		adds	r7, r7, #12
 780              		.cfi_def_cfa_offset 4
 781 0018 BD46     		mov	sp, r7
 782              		.cfi_def_cfa_register 13
 783              		@ sp needed
 784 001a 80BC     		pop	{r7}
 785              		.cfi_restore 7
 786              		.cfi_def_cfa_offset 0
 787 001c 7047     		bx	lr
 788              		.cfi_endproc
 789              	.LFE70:
 790              		.size	ResetAlarm, .-ResetAlarm
 791 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
 792              		.align	2
 793              		.global	CreateAlarm
 794              		.thumb
 795              		.thumb_func
 796              		.type	CreateAlarm, %function
 797              	CreateAlarm:
 798              	.LFB71:
 312:notoriOS.c    **** 
 313:notoriOS.c    **** // ==============================================
 314:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 315:notoriOS.c    **** // ==============================================
 316:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 317:notoriOS.c    **** {
 799              		.loc 1 317 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 16
 802              		@ frame_needed = 1, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804 0000 80B4     		push	{r7}
 805              		.cfi_def_cfa_offset 4
 806              		.cfi_offset 7, -4
 807 0002 85B0     		sub	sp, sp, #20
 808              		.cfi_def_cfa_offset 24
 809 0004 00AF     		add	r7, sp, #0
 810              		.cfi_def_cfa_register 7
 811 0006 7860     		str	r0, [r7, #4]
 812 0008 0846     		mov	r0, r1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 21


 813 000a 1146     		mov	r1, r2
 814 000c 1A46     		mov	r2, r3
 815 000e 0346     		mov	r3, r0	@ movhi
 816 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 817 0012 0B46     		mov	r3, r1
 818 0014 7B70     		strb	r3, [r7, #1]
 819 0016 1346     		mov	r3, r2
 820 0018 3B70     		strb	r3, [r7]
 318:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 319:notoriOS.c    ****     alarm newAlarm;
 320:notoriOS.c    ****     
 321:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 322:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 821              		.loc 1 322 0
 822 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 823 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 323:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 824              		.loc 1 323 0
 825 001e 7B78     		ldrb	r3, [r7, #1]
 826 0020 3B73     		strb	r3, [r7, #12]
 324:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 827              		.loc 1 324 0
 828 0022 3B78     		ldrb	r3, [r7]
 829 0024 7B73     		strb	r3, [r7, #13]
 325:notoriOS.c    ****     
 326:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 327:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 328:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 830              		.loc 1 328 0
 831 0026 B7F90230 		ldrsh	r3, [r7, #2]
 832 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 329:notoriOS.c    ****     
 330:notoriOS.c    ****     return newAlarm;
 833              		.loc 1 330 0
 834 002c 7B68     		ldr	r3, [r7, #4]
 835 002e 1A46     		mov	r2, r3
 836 0030 07F10803 		add	r3, r7, #8
 837 0034 1868     		ldr	r0, [r3]	@ unaligned
 838 0036 1060     		str	r0, [r2]	@ unaligned
 839 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 840 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 331:notoriOS.c    ****     
 332:notoriOS.c    **** }
 841              		.loc 1 332 0
 842 003c 7868     		ldr	r0, [r7, #4]
 843 003e 1437     		adds	r7, r7, #20
 844              		.cfi_def_cfa_offset 4
 845 0040 BD46     		mov	sp, r7
 846              		.cfi_def_cfa_register 13
 847              		@ sp needed
 848 0042 80BC     		pop	{r7}
 849              		.cfi_restore 7
 850              		.cfi_def_cfa_offset 0
 851 0044 7047     		bx	lr
 852              		.cfi_endproc
 853              	.LFE71:
 854              		.size	CreateAlarm, .-CreateAlarm
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 22


 855 0046 00BF     		.section	.rodata
 856 003b 00       		.align	2
 857              	.LC2:
 858 003c 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 858      2D2D2D2D 
 858      2D2D2D2D 
 858      2D424547 
 858      494E2054 
 859 0066 0000     		.align	2
 860              	.LC3:
 861 0068 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\000"
 861      3D25732C 
 861      2053494D 
 861      49443D25 
 861      732C2044 
 862 0087 00       		.align	2
 863              	.LC4:
 864 0088 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 864      2D2D2D2D 
 864      2D2D2D2D 
 864      2D2D2D45 
 864      4E442054 
 865 00b1 00       		.ascii	"\000"
 866              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 867              		.align	2
 868              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 869              		.thumb
 870              		.thumb_func
 871              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 872              	ChickityCheckYourselfBeforeYouWreckYourself:
 873              	.LFB72:
 333:notoriOS.c    **** 
 334:notoriOS.c    **** // ==============================================
 335:notoriOS.c    **** // Dropping bombs on your moms
 336:notoriOS.c    **** //      - Ice Cube (1992)
 337:notoriOS.c    **** //
 338:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 339:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 340:notoriOS.c    **** // ==============================================
 341:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 874              		.loc 1 341 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 2720
 877              		@ frame_needed = 1, uses_anonymous_args = 0
 878 0000 90B5     		push	{r4, r7, lr}
 879              		.cfi_def_cfa_offset 12
 880              		.cfi_offset 4, -12
 881              		.cfi_offset 7, -8
 882              		.cfi_offset 14, -4
 883 0002 ADF61C4D 		subw	sp, sp, #3100
 884              		.cfi_def_cfa_offset 3112
 885 0006 5EAF     		add	r7, sp, #376
 886              		.cfi_def_cfa 7, 2736
 342:notoriOS.c    **** 
 343:notoriOS.c    ****     //test_t t_influx = influx_test();
 344:notoriOS.c    ****     //printTestStatus(t_influx);
 345:notoriOS.c    ****     
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 23


 346:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 887              		.loc 1 346 0
 888 0008 4B49     		ldr	r1, .L35
 889 000a 0320     		movs	r0, #3
 890 000c FFF7FEFF 		bl	printNotif
 347:notoriOS.c    ****     
 348:notoriOS.c    ****     // Test level sensor
 349:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 891              		.loc 1 349 0
 892 0010 07F61C13 		addw	r3, r7, #2332
 893 0014 1846     		mov	r0, r3
 894 0016 FFF7FEFF 		bl	level_sensor_test
 350:notoriOS.c    ****     printTestStatus(t_level_sensor);
 895              		.loc 1 350 0
 896 001a 07F61C14 		addw	r4, r7, #2332
 897 001e 6846     		mov	r0, sp
 898 0020 04F11003 		add	r3, r4, #16
 899 0024 40F27112 		movw	r2, #369
 900 0028 1946     		mov	r1, r3
 901 002a FFF7FEFF 		bl	memcpy
 902 002e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 903 0032 FFF7FEFF 		bl	printTestStatus
 351:notoriOS.c    ****     
 352:notoriOS.c    ****     // Test downstream level sensor
 353:notoriOS.c    ****     test_t t_down_level = downstream_level_sensor_test();
 904              		.loc 1 353 0
 905 0036 07F5F363 		add	r3, r7, #1944
 906 003a 1846     		mov	r0, r3
 907 003c FFF7FEFF 		bl	downstream_level_sensor_test
 354:notoriOS.c    ****     printTestStatus(t_down_level);
 908              		.loc 1 354 0
 909 0040 07F5F364 		add	r4, r7, #1944
 910 0044 6846     		mov	r0, sp
 911 0046 04F11003 		add	r3, r4, #16
 912 004a 40F27112 		movw	r2, #369
 913 004e 1946     		mov	r1, r3
 914 0050 FFF7FEFF 		bl	memcpy
 915 0054 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 916 0058 FFF7FEFF 		bl	printTestStatus
 355:notoriOS.c    ****     
 356:notoriOS.c    ****     // Test valve
 357:notoriOS.c    ****     test_t t_valve = valve_test();
 917              		.loc 1 357 0
 918 005c 07F21463 		addw	r3, r7, #1556
 919 0060 1846     		mov	r0, r3
 920 0062 FFF7FEFF 		bl	valve_test
 358:notoriOS.c    ****     printTestStatus(t_valve);
 921              		.loc 1 358 0
 922 0066 07F21464 		addw	r4, r7, #1556
 923 006a 6846     		mov	r0, sp
 924 006c 04F11003 		add	r3, r4, #16
 925 0070 40F27112 		movw	r2, #369
 926 0074 1946     		mov	r1, r3
 927 0076 FFF7FEFF 		bl	memcpy
 928 007a 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 929 007e FFF7FEFF 		bl	printTestStatus
 359:notoriOS.c    ****     
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 24


 360:notoriOS.c    ****     // Test voltages
 361:notoriOS.c    ****     test_t t_voltages = voltages_test();
 930              		.loc 1 361 0
 931 0082 07F59263 		add	r3, r7, #1168
 932 0086 1846     		mov	r0, r3
 933 0088 FFF7FEFF 		bl	voltages_test
 362:notoriOS.c    ****     printTestStatus(t_voltages);
 934              		.loc 1 362 0
 935 008c 07F59264 		add	r4, r7, #1168
 936 0090 6846     		mov	r0, sp
 937 0092 04F11003 		add	r3, r4, #16
 938 0096 40F27112 		movw	r2, #369
 939 009a 1946     		mov	r1, r3
 940 009c FFF7FEFF 		bl	memcpy
 941 00a0 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 942 00a4 FFF7FEFF 		bl	printTestStatus
 363:notoriOS.c    ****  
 364:notoriOS.c    ****     // Test voltages
 365:notoriOS.c    ****     test_t t_pressure = pressure_sensor_test();
 943              		.loc 1 365 0
 944 00a8 07F54373 		add	r3, r7, #780
 945 00ac 1846     		mov	r0, r3
 946 00ae FFF7FEFF 		bl	pressure_sensor_test
 366:notoriOS.c    ****     printTestStatus(t_pressure);
 947              		.loc 1 366 0
 948 00b2 07F54374 		add	r4, r7, #780
 949 00b6 6846     		mov	r0, sp
 950 00b8 04F11003 		add	r3, r4, #16
 951 00bc 40F27112 		movw	r2, #369
 952 00c0 1946     		mov	r1, r3
 953 00c2 FFF7FEFF 		bl	memcpy
 954 00c6 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 955 00ca FFF7FEFF 		bl	printTestStatus
 367:notoriOS.c    ****     
 368:notoriOS.c    ****     // Test SD card
 369:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 956              		.loc 1 369 0
 957 00ce 07F5C473 		add	r3, r7, #392
 958 00d2 1846     		mov	r0, r3
 959 00d4 FFF7FEFF 		bl	SD_card_test
 370:notoriOS.c    ****     printTestStatus(t_sd_card);
 960              		.loc 1 370 0
 961 00d8 07F5C474 		add	r4, r7, #392
 962 00dc 6846     		mov	r0, sp
 963 00de 04F11003 		add	r3, r4, #16
 964 00e2 40F27112 		movw	r2, #369
 965 00e6 1946     		mov	r1, r3
 966 00e8 FFF7FEFF 		bl	memcpy
 967 00ec 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 968 00f0 FFF7FEFF 		bl	printTestStatus
 371:notoriOS.c    ****     
 372:notoriOS.c    ****     // Test modem
 373:notoriOS.c    ****     test_t t_modem = modem_test();
 969              		.loc 1 373 0
 970 00f4 3B1D     		adds	r3, r7, #4
 971 00f6 1846     		mov	r0, r3
 972 00f8 FFF7FEFF 		bl	modem_test
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 25


 374:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s",modem_info.imei,modem_info.sim_i
 973              		.loc 1 374 0
 974 00fc 0F4B     		ldr	r3, .L35+4
 975 00fe 0093     		str	r3, [sp]
 976 0100 0F4B     		ldr	r3, .L35+8
 977 0102 104A     		ldr	r2, .L35+12
 978 0104 1049     		ldr	r1, .L35+16
 979 0106 0320     		movs	r0, #3
 980 0108 FFF7FEFF 		bl	printNotif
 375:notoriOS.c    ****     printTestStatus(t_modem);
 981              		.loc 1 375 0
 982 010c 3C1D     		adds	r4, r7, #4
 983 010e 6846     		mov	r0, sp
 984 0110 04F11003 		add	r3, r4, #16
 985 0114 40F27112 		movw	r2, #369
 986 0118 1946     		mov	r1, r3
 987 011a FFF7FEFF 		bl	memcpy
 988 011e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 989 0122 FFF7FEFF 		bl	printTestStatus
 376:notoriOS.c    ****     
 377:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 990              		.loc 1 377 0
 991 0126 0949     		ldr	r1, .L35+20
 992 0128 0320     		movs	r0, #3
 993 012a FFF7FEFF 		bl	printNotif
 378:notoriOS.c    **** 
 379:notoriOS.c    **** }
 994              		.loc 1 379 0
 995 012e 00BF     		nop
 996 0130 07F6A427 		addw	r7, r7, #2724
 997              		.cfi_def_cfa_offset 12
 998 0134 BD46     		mov	sp, r7
 999              		.cfi_def_cfa_register 13
 1000              		@ sp needed
 1001 0136 90BD     		pop	{r4, r7, pc}
 1002              	.L36:
 1003              		.align	2
 1004              	.L35:
 1005 0138 3C000000 		.word	.LC2
 1006 013c 04000000 		.word	system_info+4
 1007 0140 00000000 		.word	modem_info
 1008 0144 28000000 		.word	modem_info+40
 1009 0148 68000000 		.word	.LC3
 1010 014c 88000000 		.word	.LC4
 1011              		.cfi_endproc
 1012              	.LFE72:
 1013              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 1014              		.section	.text.main,"ax",%progbits
 1015              		.align	2
 1016              		.global	main
 1017              		.thumb
 1018              		.thumb_func
 1019              		.type	main, %function
 1020              	main:
 1021              	.LFB73:
 380:notoriOS.c    **** 
 381:notoriOS.c    **** // ==============================================
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 26


 382:notoriOS.c    **** // Processes Core Tasks
 383:notoriOS.c    **** // ==============================================
 384:notoriOS.c    **** int main(void)
 385:notoriOS.c    **** {
 1022              		.loc 1 385 0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 1, uses_anonymous_args = 0
 1026 0000 80B5     		push	{r7, lr}
 1027              		.cfi_def_cfa_offset 8
 1028              		.cfi_offset 7, -8
 1029              		.cfi_offset 14, -4
 1030 0002 00AF     		add	r7, sp, #0
 1031              		.cfi_def_cfa_register 7
 386:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 1032              		.loc 1 386 0
 1033              		.syntax unified
 1034              	@ 386 "notoriOS.c" 1
 1035 0004 62B6     		CPSIE   i
 1036              	@ 0 "" 2
 387:notoriOS.c    **** 
 388:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 1037              		.loc 1 388 0
 1038              		.thumb
 1039              		.syntax unified
 1040 0006 FFF7FEFF 		bl	ReadyOrNot
 389:notoriOS.c    ****     
 390:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 1041              		.loc 1 390 0
 1042 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 1043              	.L39:
 391:notoriOS.c    ****    
 392:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 393:notoriOS.c    ****     {
 394:notoriOS.c    ****         
 395:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 1044              		.loc 1 395 0
 1045 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 1046 0012 0346     		mov	r3, r0
 1047 0014 002B     		cmp	r3, #0
 1048 0016 FAD1     		bne	.L39
 396:notoriOS.c    ****         {
 397:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
 1049              		.loc 1 397 0
 1050 0018 FFF7FEFF 		bl	LayBack
 398:notoriOS.c    ****         }
 399:notoriOS.c    ****     }
 1051              		.loc 1 399 0
 1052 001c F7E7     		b	.L39
 1053              		.cfi_endproc
 1054              	.LFE73:
 1055              		.size	main, .-main
 1056 001e 00BF     		.section	.rodata
 1057 00b2 0000     		.align	2
 1058              	.LC5:
 1059 00b4 4D6F6465 		.ascii	"Modem is ready.\000"
 1059      6D206973 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 27


 1059      20726561 
 1059      64792E00 
 1060              		.align	2
 1061              	.LC6:
 1062 00c4 256400   		.ascii	"%d\000"
 1063 00c7 00       		.align	2
 1064              	.LC7:
 1065 00c8 72737270 		.ascii	"rsrp\000"
 1065      00
 1066 00cd 000000   		.align	2
 1067              	.LC8:
 1068 00d0 72736370 		.ascii	"rscp\000"
 1068      00
 1069 00d5 000000   		.align	2
 1070              	.LC9:
 1071 00d8 7472795F 		.ascii	"try_counter\000"
 1071      636F756E 
 1071      74657200 
 1072              		.align	2
 1073              	.LC10:
 1074 00e4 64617461 		.ascii	"data_count_sent\000"
 1074      5F636F75 
 1074      6E745F73 
 1074      656E7400 
 1075              		.align	2
 1076              	.LC11:
 1077 00f4 64617461 		.ascii	"data_count_desired\000"
 1077      5F636F75 
 1077      6E745F64 
 1077      65736972 
 1077      656400
 1078 0107 00       		.align	2
 1079              	.LC12:
 1080 0108 42656769 		.ascii	"Begin HTTP post.\000"
 1080      6E204854 
 1080      54502070 
 1080      6F73742E 
 1080      00
 1081 0119 000000   		.align	2
 1082              	.LC13:
 1083 011c 38306532 		.ascii	"80e2fb8046744247d026f4fff33f00c998030d2c\000"
 1083      66623830 
 1083      34363734 
 1083      34323437 
 1083      64303236 
 1084 0145 000000   		.align	2
 1085              	.LC14:
 1086 0148 6170692F 		.ascii	"api/v1/write\000"
 1086      76312F77 
 1086      72697465 
 1086      00
 1087 0155 000000   		.align	2
 1088              	.LC15:
 1089 0158 48545450 		.ascii	"HTTP route: %s\000"
 1089      20726F75 
 1089      74653A20 
 1089      257300
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 28


 1090 0167 00       		.align	2
 1091              	.LC16:
 1092 0168 312E3100 		.ascii	"1.1\000"
 1093              		.align	2
 1094              	.LC17:
 1095 016c 00       		.ascii	"\000"
 1096 016d 000000   		.align	2
 1097              	.LC18:
 1098 0170 436C6F73 		.ascii	"Close\000"
 1098      6500
 1099 0176 0000     		.align	2
 1100              	.LC19:
 1101 0178 504F5354 		.ascii	"POST\000"
 1101      00
 1102 017d 000000   		.align	2
 1103              	.LC20:
 1104 0180 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 1104      20485454 
 1104      50205265 
 1104      71756573 
 1104      743A2025 
 1105 0196 0000     		.align	2
 1106              	.LC21:
 1107 0198 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 1107      443D312C 
 1107      302C2564 
 1107      2C222573 
 1107      222C302C 
 1108 01b1 000000   		.align	2
 1109              	.LC22:
 1110 01b4 257300   		.ascii	"%s\000"
 1111 01b7 00       		.align	2
 1112              	.LC23:
 1113 01b8 4F4B00   		.ascii	"OK\000"
 1114              		.global	__aeabi_ui2d
 1115              		.global	__aeabi_d2iz
 1116 01bb 00       		.align	2
 1117              	.LC24:
 1118 01bc 68747470 		.ascii	"http_request len: %d\000"
 1118      5F726571 
 1118      75657374 
 1118      206C656E 
 1118      3A202564 
 1119 01d1 000000   		.align	2
 1120              	.LC25:
 1121 01d4 23206F66 		.ascii	"# of packets: %d\000"
 1121      20706163 
 1121      6B657473 
 1121      3A202564 
 1121      00
 1122 01e5 000000   		.align	2
 1123              	.LC26:
 1124 01e8 3E00     		.ascii	">\000"
 1125 01ea 0000     		.align	2
 1126              	.LC27:
 1127 01ec 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 1127      53454E44 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 29


 1127      3D310D0A 
 1127      00
 1128 01f9 000000   		.align	2
 1129              	.LC28:
 1130 01fc 1A00     		.ascii	"\032\000"
 1131 01fe 0000     		.align	2
 1132              	.LC29:
 1133 0200 6368756E 		.ascii	"chunk %d: %s\000"
 1133      6B202564 
 1133      3A202573 
 1133      00
 1134 020d 000000   		.align	2
 1135              	.LC30:
 1136 0210 5352494E 		.ascii	"SRING\000"
 1136      4700
 1137 0216 0000     		.align	2
 1138              	.LC31:
 1139 0218 4F532D4F 		.ascii	"OS-OK\000"
 1139      4B00
 1140 021e 0000     		.align	2
 1141              	.LC32:
 1142 0220 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 1142      52454356 
 1142      3D312C31 
 1142      3030300D 
 1142      00
 1143 0231 000000   		.align	2
 1144              	.LC33:
 1145 0234 6D6F6465 		.ascii	"modem_tx_time\000"
 1145      6D5F7478 
 1145      5F74696D 
 1145      6500
 1146 0242 0000     		.align	2
 1147              	.LC34:
 1148 0244 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 1148      4F3A2043 
 1148      6F756C64 
 1148      206E6F74 
 1148      20726563 
 1149              		.section	.text.syncData,"ax",%progbits
 1150              		.align	2
 1151              		.global	syncData
 1152              		.thumb
 1153              		.thumb_func
 1154              		.type	syncData, %function
 1155              	syncData:
 1156              	.LFB74:
 400:notoriOS.c    **** }
 401:notoriOS.c    **** 
 402:notoriOS.c    **** // ==============================================
 403:notoriOS.c    **** // Syncs data with server
 404:notoriOS.c    **** // Returns 0 when done
 405:notoriOS.c    **** // ==============================================
 406:notoriOS.c    **** uint8 syncData(){
 1157              		.loc 1 406 0
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 1360
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 30


 1160              		@ frame_needed = 1, uses_anonymous_args = 0
 1161 0000 90B5     		push	{r4, r7, lr}
 1162              		.cfi_def_cfa_offset 12
 1163              		.cfi_offset 4, -12
 1164              		.cfi_offset 7, -8
 1165              		.cfi_offset 14, -4
 1166 0002 ADF26C5D 		subw	sp, sp, #1388
 1167              		.cfi_def_cfa_offset 1400
 1168 0006 06AF     		add	r7, sp, #24
 1169              		.cfi_def_cfa 7, 1376
 407:notoriOS.c    ****     
 408:notoriOS.c    ****     /*
 409:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 410:notoriOS.c    ****     uint8 check = 0;
 411:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 412:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 413:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 414:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 415:notoriOS.c    ****     */
 416:notoriOS.c    **** 
 417:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 418:notoriOS.c    ****     LED_Write(1u);
 1170              		.loc 1 418 0
 1171 0008 0120     		movs	r0, #1
 1172 000a FFF7FEFF 		bl	LED_Write
 419:notoriOS.c    ****     CyDelay(100u);
 1173              		.loc 1 419 0
 1174 000e 6420     		movs	r0, #100
 1175 0010 FFF7FEFF 		bl	CyDelay
 420:notoriOS.c    ****     LED_Write(0u);
 1176              		.loc 1 420 0
 1177 0014 0020     		movs	r0, #0
 1178 0016 FFF7FEFF 		bl	LED_Write
 421:notoriOS.c    **** 
 422:notoriOS.c    ****     
 423:notoriOS.c    ****     // If there's no data, not need to do anything
 424:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 1179              		.loc 1 424 0
 1180 001a FFF7FEFF 		bl	sizeOfDataStack
 1181 001e 0346     		mov	r3, r0
 1182 0020 002B     		cmp	r3, #0
 1183 0022 01D1     		bne	.L41
 425:notoriOS.c    ****         return 0u;
 1184              		.loc 1 425 0
 1185 0024 0023     		movs	r3, #0
 1186 0026 03E2     		b	.L42
 1187              	.L41:
 426:notoriOS.c    ****         }
 427:notoriOS.c    ****     
 428:notoriOS.c    ****     // Create request body, in this case influx
 429:notoriOS.c    ****     // Place body into HTTP request header
 430:notoriOS.c    ****     // Fire up modem and get it out
 431:notoriOS.c    ****      
 432:notoriOS.c    ****     
 433:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 434:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1188              		.loc 1 434 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 31


 1189 0028 FFF7FEFF 		bl	modem_get_state
 1190 002c 0346     		mov	r3, r0
 1191 002e 002B     		cmp	r3, #0
 1192 0030 11D1     		bne	.L43
 435:notoriOS.c    **** 
 436:notoriOS.c    ****         try_counter++;
 1193              		.loc 1 436 0
 1194 0032 AE4B     		ldr	r3, .L55
 1195 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1196 0036 0133     		adds	r3, r3, #1
 1197 0038 DAB2     		uxtb	r2, r3
 1198 003a AC4B     		ldr	r3, .L55
 1199 003c 1A70     		strb	r2, [r3]
 437:notoriOS.c    ****         	
 438:notoriOS.c    ****         if(try_counter <= 2){
 1200              		.loc 1 438 0
 1201 003e AB4B     		ldr	r3, .L55
 1202 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1203 0042 022B     		cmp	r3, #2
 1204 0044 02D8     		bhi	.L44
 439:notoriOS.c    ****             modem_power_up();
 1205              		.loc 1 439 0
 1206 0046 FFF7FEFF 		bl	modem_power_up
 1207 004a F0E1     		b	.L45
 1208              	.L44:
 440:notoriOS.c    ****         }else{
 441:notoriOS.c    ****             try_counter = 0;
 1209              		.loc 1 441 0
 1210 004c A74B     		ldr	r3, .L55
 1211 004e 0022     		movs	r2, #0
 1212 0050 1A70     		strb	r2, [r3]
 442:notoriOS.c    ****             return 0u;
 1213              		.loc 1 442 0
 1214 0052 0023     		movs	r3, #0
 1215 0054 ECE1     		b	.L42
 1216              	.L43:
 443:notoriOS.c    ****             }
 444:notoriOS.c    ****             
 445:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1217              		.loc 1 445 0
 1218 0056 FFF7FEFF 		bl	modem_get_state
 1219 005a 0346     		mov	r3, r0
 1220 005c 042B     		cmp	r3, #4
 1221 005e 40F0E681 		bne	.L45
 1222              	.LBB2:
 446:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 1223              		.loc 1 446 0
 1224 0062 A349     		ldr	r1, .L55+4
 1225 0064 0020     		movs	r0, #0
 1226 0066 FFF7FEFF 		bl	printNotif
 447:notoriOS.c    ****         
 448:notoriOS.c    ****         http_request[0] = '\0';
 1227              		.loc 1 448 0
 1228 006a A24B     		ldr	r3, .L55+8
 1229 006c 0022     		movs	r2, #0
 1230 006e 1A70     		strb	r2, [r3]
 449:notoriOS.c    ****         http_body[0] = '\0';
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 32


 1231              		.loc 1 449 0
 1232 0070 A14B     		ldr	r3, .L55+12
 1233 0072 0022     		movs	r2, #0
 1234 0074 1A70     		strb	r2, [r3]
 450:notoriOS.c    ****         http_route[0] = '\0';
 1235              		.loc 1 450 0
 1236 0076 A14B     		ldr	r3, .L55+16
 1237 0078 0022     		movs	r2, #0
 1238 007a 1A70     		strb	r2, [r3]
 451:notoriOS.c    ****         //char *base = "write";
 452:notoriOS.c    ****         
 453:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power and RSCP: received signal
 454:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 455:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 1239              		.loc 1 455 0
 1240 007c A04B     		ldr	r3, .L55+20
 1241 007e 5B69     		ldr	r3, [r3, #20]
 1242 0080 07F5A560 		add	r0, r7, #1320
 1243 0084 9F4A     		ldr	r2, .L55+24
 1244 0086 1421     		movs	r1, #20
 1245 0088 FFF7FEFF 		bl	snprintf
 456:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 1246              		.loc 1 456 0
 1247 008c FFF7FEFF 		bl	getTimeStamp
 1248 0090 0246     		mov	r2, r0
 1249 0092 07F5A563 		add	r3, r7, #1320
 1250 0096 1946     		mov	r1, r3
 1251 0098 9B48     		ldr	r0, .L55+28
 1252 009a FFF7FEFF 		bl	pushData
 457:notoriOS.c    ****         
 458:notoriOS.c    ****         char s_rscp[DATA_MAX_KEY_LENGTH];
 459:notoriOS.c    ****         snprintf(s_rscp,sizeof(s_rscp),"%d",modem_stats.rscp);
 1253              		.loc 1 459 0
 1254 009e 984B     		ldr	r3, .L55+20
 1255 00a0 9B68     		ldr	r3, [r3, #8]
 1256 00a2 07F21450 		addw	r0, r7, #1300
 1257 00a6 974A     		ldr	r2, .L55+24
 1258 00a8 1421     		movs	r1, #20
 1259 00aa FFF7FEFF 		bl	snprintf
 460:notoriOS.c    ****         pushData("rscp", s_rscp, getTimeStamp());
 1260              		.loc 1 460 0
 1261 00ae FFF7FEFF 		bl	getTimeStamp
 1262 00b2 0246     		mov	r2, r0
 1263 00b4 07F21453 		addw	r3, r7, #1300
 1264 00b8 1946     		mov	r1, r3
 1265 00ba 9448     		ldr	r0, .L55+32
 1266 00bc FFF7FEFF 		bl	pushData
 461:notoriOS.c    ****         
 462:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 463:notoriOS.c    ****         char c_try_counter[20];
 464:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 1267              		.loc 1 464 0
 1268 00c0 8A4B     		ldr	r3, .L55
 1269 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1270 00c4 07F5A060 		add	r0, r7, #1280
 1271 00c8 8E4A     		ldr	r2, .L55+24
 1272 00ca 1421     		movs	r1, #20
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 33


 1273 00cc FFF7FEFF 		bl	snprintf
 465:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 1274              		.loc 1 465 0
 1275 00d0 FFF7FEFF 		bl	getTimeStamp
 1276 00d4 0246     		mov	r2, r0
 1277 00d6 07F5A063 		add	r3, r7, #1280
 1278 00da 1946     		mov	r1, r3
 1279 00dc 8C48     		ldr	r0, .L55+36
 1280 00de FFF7FEFF 		bl	pushData
 466:notoriOS.c    ****         
 467:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
 468:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 469:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 470:notoriOS.c    ****         if(buffer_overflow == false){
 1281              		.loc 1 470 0
 1282 00e2 8C4B     		ldr	r3, .L55+40
 1283 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1284 00e6 83F00103 		eor	r3, r3, #1
 1285 00ea DBB2     		uxtb	r3, r3
 1286 00ec 002B     		cmp	r3, #0
 1287 00ee 16D0     		beq	.L46
 1288              	.LBB3:
 471:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 1289              		.loc 1 471 0
 1290 00f0 FFF7FEFF 		bl	sizeOfDataStack
 1291 00f4 0346     		mov	r3, r0
 1292 00f6 A7F84835 		strh	r3, [r7, #1352]	@ movhi
 472:notoriOS.c    ****             char c_data_count_sent[20];
 473:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 1293              		.loc 1 473 0
 1294 00fa B7F84835 		ldrh	r3, [r7, #1352]
 1295 00fe 07F59B60 		add	r0, r7, #1240
 1296 0102 804A     		ldr	r2, .L55+24
 1297 0104 1421     		movs	r1, #20
 1298 0106 FFF7FEFF 		bl	snprintf
 474:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1299              		.loc 1 474 0
 1300 010a FFF7FEFF 		bl	getTimeStamp
 1301 010e 0246     		mov	r2, r0
 1302 0110 07F59B63 		add	r3, r7, #1240
 1303 0114 1946     		mov	r1, r3
 1304 0116 8048     		ldr	r0, .L55+44
 1305 0118 FFF7FEFF 		bl	pushData
 1306              	.LBE3:
 1307 011c 0FE0     		b	.L47
 1308              	.L46:
 1309              	.LBB4:
 475:notoriOS.c    ****         }else{
 476:notoriOS.c    ****             char c_data_count_sent[20];
 477:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1310              		.loc 1 477 0
 1311 011e 07F2C440 		addw	r0, r7, #1220
 1312 0122 9623     		movs	r3, #150
 1313 0124 774A     		ldr	r2, .L55+24
 1314 0126 1421     		movs	r1, #20
 1315 0128 FFF7FEFF 		bl	snprintf
 478:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 34


 1316              		.loc 1 478 0
 1317 012c FFF7FEFF 		bl	getTimeStamp
 1318 0130 0246     		mov	r2, r0
 1319 0132 07F2C443 		addw	r3, r7, #1220
 1320 0136 1946     		mov	r1, r3
 1321 0138 7748     		ldr	r0, .L55+44
 1322 013a FFF7FEFF 		bl	pushData
 1323              	.L47:
 1324              	.LBE4:
 479:notoriOS.c    ****         }
 480:notoriOS.c    ****         
 481:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 482:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 1325              		.loc 1 482 0
 1326 013e FFF7FEFF 		bl	sizeOfDataStackDesired
 1327 0142 0346     		mov	r3, r0
 1328 0144 A7F84635 		strh	r3, [r7, #1350]	@ movhi
 483:notoriOS.c    ****         char c_data_count_desired[20];
 484:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 485:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1329              		.loc 1 485 0
 1330 0148 B7F84635 		ldrh	r3, [r7, #1350]
 1331 014c 013B     		subs	r3, r3, #1
 1332 014e 07F2EC40 		addw	r0, r7, #1260
 1333 0152 6C4A     		ldr	r2, .L55+24
 1334 0154 1421     		movs	r1, #20
 1335 0156 FFF7FEFF 		bl	snprintf
 486:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
 1336              		.loc 1 486 0
 1337 015a FFF7FEFF 		bl	getTimeStamp
 1338 015e 0246     		mov	r2, r0
 1339 0160 07F2EC43 		addw	r3, r7, #1260
 1340 0164 1946     		mov	r1, r3
 1341 0166 6D48     		ldr	r0, .L55+48
 1342 0168 FFF7FEFF 		bl	pushData
 487:notoriOS.c    ****         
 488:notoriOS.c    ****         // Construct HTPP request
 489:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1343              		.loc 1 489 0
 1344 016c 6C49     		ldr	r1, .L55+52
 1345 016e 0020     		movs	r0, #0
 1346 0170 FFF7FEFF 		bl	printNotif
 490:notoriOS.c    ****         
 491:notoriOS.c    ****         // Old influx API
 492:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 493:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1347              		.loc 1 493 0
 1348 0174 6B4B     		ldr	r3, .L55+56
 1349 0176 6C4A     		ldr	r2, .L55+60
 1350 0178 6C49     		ldr	r1, .L55+64
 1351 017a 6048     		ldr	r0, .L55+16
 1352 017c FFF7FEFF 		bl	construct_malcom_route
 494:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1353              		.loc 1 494 0
 1354 0180 5E4A     		ldr	r2, .L55+16
 1355 0182 6B49     		ldr	r1, .L55+68
 1356 0184 0020     		movs	r0, #0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 35


 1357 0186 FFF7FEFF 		bl	printNotif
 495:notoriOS.c    ****         
 496:notoriOS.c    ****         //OLD INFLUX API
 497:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 498:notoriOS.c    ****         construct_malcom_body(http_body);
 1358              		.loc 1 498 0
 1359 018a 5B48     		ldr	r0, .L55+12
 1360 018c FFF7FEFF 		bl	construct_malcom_body
 499:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1361              		.loc 1 499 0
 1362 0190 684B     		ldr	r3, .L55+72
 1363 0192 5B6E     		ldr	r3, [r3, #100]
 1364 0194 684A     		ldr	r2, .L55+76
 1365 0196 0592     		str	r2, [sp, #20]
 1366 0198 0022     		movs	r2, #0
 1367 019a 0492     		str	r2, [sp, #16]
 1368 019c 674A     		ldr	r2, .L55+80
 1369 019e 0392     		str	r2, [sp, #12]
 1370 01a0 674A     		ldr	r2, .L55+84
 1371 01a2 0292     		str	r2, [sp, #8]
 1372 01a4 674A     		ldr	r2, .L55+88
 1373 01a6 0192     		str	r2, [sp, #4]
 1374 01a8 0093     		str	r3, [sp]
 1375 01aa 544B     		ldr	r3, .L55+16
 1376 01ac 614A     		ldr	r2, .L55+72
 1377 01ae 5249     		ldr	r1, .L55+12
 1378 01b0 5048     		ldr	r0, .L55+8
 1379 01b2 FFF7FEFF 		bl	construct_generic_HTTP_request
 500:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1380              		.loc 1 500 0
 1381 01b6 4F4A     		ldr	r2, .L55+8
 1382 01b8 6349     		ldr	r1, .L55+92
 1383 01ba 0020     		movs	r0, #0
 1384 01bc FFF7FEFF 		bl	printNotif
 501:notoriOS.c    ****         
 502:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 503:notoriOS.c    ****         // Open port and begin command line sequence
 504:notoriOS.c    ****         char portConfig[200];
 505:notoriOS.c    ****         uint8 status = 0u;
 1385              		.loc 1 505 0
 1386 01c0 0023     		movs	r3, #0
 1387 01c2 87F84535 		strb	r3, [r7, #1349]
 506:notoriOS.c    ****         
 507:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1388              		.loc 1 507 0
 1389 01c6 5B4B     		ldr	r3, .L55+72
 1390 01c8 5A6E     		ldr	r2, [r3, #100]
 1391 01ca 381D     		adds	r0, r7, #4
 1392 01cc 594B     		ldr	r3, .L55+72
 1393 01ce 0093     		str	r3, [sp]
 1394 01d0 1346     		mov	r3, r2
 1395 01d2 5E4A     		ldr	r2, .L55+96
 1396 01d4 C821     		movs	r1, #200
 1397 01d6 FFF7FEFF 		bl	snprintf
 508:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1398              		.loc 1 508 0
 1399 01da 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 36


 1400 01dc 1A46     		mov	r2, r3
 1401 01de 5C49     		ldr	r1, .L55+100
 1402 01e0 0020     		movs	r0, #0
 1403 01e2 FFF7FEFF 		bl	printNotif
 509:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1404              		.loc 1 509 0
 1405 01e6 3B1D     		adds	r3, r7, #4
 1406 01e8 42F21072 		movw	r2, #10000
 1407 01ec 5949     		ldr	r1, .L55+104
 1408 01ee 1846     		mov	r0, r3
 1409 01f0 FFF7FEFF 		bl	at_write_command
 1410 01f4 0346     		mov	r3, r0
 1411 01f6 87F84535 		strb	r3, [r7, #1349]
 510:notoriOS.c    ****         
 511:notoriOS.c    ****         // create character pointer to chunk through the http_request
 512:notoriOS.c    ****         char *chunk;
 513:notoriOS.c    ****         // Set chunk to start where http_request starts
 514:notoriOS.c    ****         chunk = http_request;
 1412              		.loc 1 514 0
 1413 01fa 3E4B     		ldr	r3, .L55+8
 1414 01fc C7F84C35 		str	r3, [r7, #1356]
 515:notoriOS.c    ****         // variable for the number of packets to send
 516:notoriOS.c    ****         int8 packets;
 517:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1415              		.loc 1 517 0
 1416 0200 3C48     		ldr	r0, .L55+8
 1417 0202 FFF7FEFF 		bl	strlen
 1418 0206 0246     		mov	r2, r0
 1419 0208 534B     		ldr	r3, .L55+108
 1420 020a A3FB0223 		umull	r2, r3, r3, r2
 1421 020e 5B09     		lsrs	r3, r3, #5
 1422 0210 1846     		mov	r0, r3
 1423 0212 FFF7FEFF 		bl	__aeabi_ui2d
 1424 0216 4FF00002 		mov	r2, #0
 1425 021a 504B     		ldr	r3, .L55+112
 1426 021c FFF7FEFF 		bl	nextafter
 1427 0220 0346     		mov	r3, r0
 1428 0222 0C46     		mov	r4, r1
 1429 0224 1846     		mov	r0, r3
 1430 0226 2146     		mov	r1, r4
 1431 0228 FFF7FEFF 		bl	ceil
 1432 022c 0346     		mov	r3, r0
 1433 022e 0C46     		mov	r4, r1
 1434 0230 1846     		mov	r0, r3
 1435 0232 2146     		mov	r1, r4
 1436 0234 FFF7FEFF 		bl	__aeabi_d2iz
 1437 0238 0346     		mov	r3, r0
 1438 023a 87F84435 		strb	r3, [r7, #1348]
 518:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1439              		.loc 1 518 0
 1440 023e 2D48     		ldr	r0, .L55+8
 1441 0240 FFF7FEFF 		bl	strlen
 1442 0244 0346     		mov	r3, r0
 1443 0246 1A46     		mov	r2, r3
 1444 0248 4549     		ldr	r1, .L55+116
 1445 024a 0020     		movs	r0, #0
 1446 024c FFF7FEFF 		bl	printNotif
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 37


 519:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1447              		.loc 1 519 0
 1448 0250 97F94435 		ldrsb	r3, [r7, #1348]
 1449 0254 1A46     		mov	r2, r3
 1450 0256 4349     		ldr	r1, .L55+120
 1451 0258 0020     		movs	r0, #0
 1452 025a FFF7FEFF 		bl	printNotif
 1453              	.LBB5:
 520:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 521:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1454              		.loc 1 521 0
 1455 025e 0023     		movs	r3, #0
 1456 0260 87F84B35 		strb	r3, [r7, #1355]
 1457 0264 9AE0     		b	.L48
 1458              	.L51:
 1459              	.LBB6:
 522:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 523:notoriOS.c    ****             char http_chunk[1001];
 524:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 525:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 526:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1460              		.loc 1 526 0
 1461 0266 4FF47A72 		mov	r2, #1000
 1462 026a 3F49     		ldr	r1, .L55+124
 1463 026c 3F48     		ldr	r0, .L55+128
 1464 026e FFF7FEFF 		bl	at_write_command
 1465 0272 0346     		mov	r3, r0
 1466 0274 87F84535 		strb	r3, [r7, #1349]
 527:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 528:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1467              		.loc 1 528 0
 1468 0278 07F1CC00 		add	r0, r7, #204
 1469 027c D7F84C35 		ldr	r3, [r7, #1356]
 1470 0280 334A     		ldr	r2, .L55+100
 1471 0282 4FF4FA71 		mov	r1, #500
 1472 0286 FFF7FEFF 		bl	snprintf
 529:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 530:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1473              		.loc 1 530 0
 1474 028a 07F1CC03 		add	r3, r7, #204
 1475 028e 1846     		mov	r0, r3
 1476 0290 FFF7FEFF 		bl	strlen
 1477 0294 0346     		mov	r3, r0
 1478 0296 1A46     		mov	r2, r3
 1479 0298 07F1CC03 		add	r3, r7, #204
 1480 029c 1344     		add	r3, r3, r2
 1481 029e 3449     		ldr	r1, .L55+132
 1482 02a0 1A46     		mov	r2, r3
 1483 02a2 0B46     		mov	r3, r1
 1484 02a4 1B88     		ldrh	r3, [r3]	@ unaligned
 1485 02a6 1380     		strh	r3, [r2]	@ unaligned
 531:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1486              		.loc 1 531 0
 1487 02a8 97F94B25 		ldrsb	r2, [r7, #1355]
 1488 02ac 07F1CC03 		add	r3, r7, #204
 1489 02b0 3049     		ldr	r1, .L55+136
 1490 02b2 0020     		movs	r0, #0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 38


 1491 02b4 FFF7FEFF 		bl	printNotif
 532:notoriOS.c    ****             // Send data to server
 533:notoriOS.c    ****             if ((packet+1) != packets){
 1492              		.loc 1 533 0
 1493 02b8 97F94B35 		ldrsb	r3, [r7, #1355]
 1494 02bc 5A1C     		adds	r2, r3, #1
 1495 02be 97F94435 		ldrsb	r3, [r7, #1348]
 1496 02c2 9A42     		cmp	r2, r3
 1497 02c4 58D0     		beq	.L49
 534:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1498              		.loc 1 534 0
 1499 02c6 07F1CC03 		add	r3, r7, #204
 1500 02ca 41F28832 		movw	r2, #5000
 1501 02ce 2149     		ldr	r1, .L55+104
 1502 02d0 1846     		mov	r0, r3
 1503 02d2 FFF7FEFF 		bl	at_write_command
 1504 02d6 0346     		mov	r3, r0
 1505 02d8 87F84535 		strb	r3, [r7, #1349]
 535:notoriOS.c    ****                 // Move the pointer forward 
 536:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1506              		.loc 1 536 0
 1507 02dc D7F84C35 		ldr	r3, [r7, #1356]
 1508 02e0 03F2F313 		addw	r3, r3, #499
 1509 02e4 C7F84C35 		str	r3, [r7, #1356]
 1510 02e8 51E0     		b	.L50
 1511              	.L56:
 1512 02ea 00BF     		.align	2
 1513              	.L55:
 1514 02ec 00000000 		.word	try_counter
 1515 02f0 B4000000 		.word	.LC5
 1516 02f4 00000000 		.word	http_request
 1517 02f8 00000000 		.word	http_body
 1518 02fc 00000000 		.word	http_route
 1519 0300 00000000 		.word	modem_stats
 1520 0304 C4000000 		.word	.LC6
 1521 0308 C8000000 		.word	.LC7
 1522 030c D0000000 		.word	.LC8
 1523 0310 D8000000 		.word	.LC9
 1524 0314 00000000 		.word	buffer_overflow
 1525 0318 E4000000 		.word	.LC10
 1526 031c F4000000 		.word	.LC11
 1527 0320 08010000 		.word	.LC12
 1528 0324 1C010000 		.word	.LC13
 1529 0328 28000000 		.word	modem_info+40
 1530 032c 48010000 		.word	.LC14
 1531 0330 58010000 		.word	.LC15
 1532 0334 00000000 		.word	system_settings
 1533 0338 68010000 		.word	.LC16
 1534 033c 6C010000 		.word	.LC17
 1535 0340 70010000 		.word	.LC18
 1536 0344 78010000 		.word	.LC19
 1537 0348 80010000 		.word	.LC20
 1538 034c 98010000 		.word	.LC21
 1539 0350 B4010000 		.word	.LC22
 1540 0354 B8010000 		.word	.LC23
 1541 0358 D34D6210 		.word	274877907
 1542 035c 00407F40 		.word	1082081280
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 39


 1543 0360 BC010000 		.word	.LC24
 1544 0364 D4010000 		.word	.LC25
 1545 0368 E8010000 		.word	.LC26
 1546 036c EC010000 		.word	.LC27
 1547 0370 FC010000 		.word	.LC28
 1548 0374 00020000 		.word	.LC29
 1549              	.L49:
 537:notoriOS.c    ****             }else{
 538:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
 1550              		.loc 1 538 0
 1551 0378 07F1CC03 		add	r3, r7, #204
 1552 037c 41F28832 		movw	r2, #5000
 1553 0380 2E49     		ldr	r1, .L57
 1554 0382 1846     		mov	r0, r3
 1555 0384 FFF7FEFF 		bl	at_write_command
 1556 0388 0346     		mov	r3, r0
 1557 038a 87F84535 		strb	r3, [r7, #1349]
 1558              	.L50:
 1559              	.LBE6:
 521:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1560              		.loc 1 521 0 discriminator 2
 1561 038e 97F94B35 		ldrsb	r3, [r7, #1355]
 1562 0392 DBB2     		uxtb	r3, r3
 1563 0394 0133     		adds	r3, r3, #1
 1564 0396 DBB2     		uxtb	r3, r3
 1565 0398 87F84B35 		strb	r3, [r7, #1355]
 1566              	.L48:
 521:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1567              		.loc 1 521 0 is_stmt 0 discriminator 1
 1568 039c 97F94B25 		ldrsb	r2, [r7, #1355]
 1569 03a0 97F94435 		ldrsb	r3, [r7, #1348]
 1570 03a4 9A42     		cmp	r2, r3
 1571 03a6 FFF65EAF 		blt	.L51
 1572              	.LBE5:
 539:notoriOS.c    ****             }
 540:notoriOS.c    ****             
 541:notoriOS.c    ****         }
 542:notoriOS.c    ****         
 543:notoriOS.c    ****         // Read received buffer
 544:notoriOS.c    ****         // A good write will return code "OS-OK"
 545:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 546:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 547:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1573              		.loc 1 547 0 is_stmt 1
 1574 03aa 41F28832 		movw	r2, #5000
 1575 03ae 2449     		ldr	r1, .L57+4
 1576 03b0 2448     		ldr	r0, .L57+8
 1577 03b2 FFF7FEFF 		bl	at_write_command
 1578 03b6 0346     		mov	r3, r0
 1579 03b8 87F84535 		strb	r3, [r7, #1349]
 548:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 549:notoriOS.c    ****     
 550:notoriOS.c    ****   
 551:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 552:notoriOS.c    ****         if(status == 1u){
 1580              		.loc 1 552 0
 1581 03bc 97F84535 		ldrb	r3, [r7, #1349]	@ zero_extendqisi2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 40


 1582 03c0 012B     		cmp	r3, #1
 1583 03c2 1DD1     		bne	.L52
 1584              	.LBB7:
 553:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1585              		.loc 1 553 0
 1586 03c4 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 554:notoriOS.c    ****             Clear_Data_Stack();
 1587              		.loc 1 554 0
 1588 03c8 FFF7FEFF 		bl	Clear_Data_Stack
 555:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1589              		.loc 1 555 0
 1590 03cc FFF7FEFF 		bl	getTimeStamp
 1591 03d0 0246     		mov	r2, r0
 1592 03d2 1D4B     		ldr	r3, .L57+12
 1593 03d4 1B68     		ldr	r3, [r3]
 1594 03d6 D31A     		subs	r3, r2, r3
 1595 03d8 C7F84035 		str	r3, [r7, #1344]
 556:notoriOS.c    ****             char s_send_time[10];
 557:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1596              		.loc 1 557 0
 1597 03dc 07F59760 		add	r0, r7, #1208
 1598 03e0 D7F84035 		ldr	r3, [r7, #1344]
 1599 03e4 194A     		ldr	r2, .L57+16
 1600 03e6 0A21     		movs	r1, #10
 1601 03e8 FFF7FEFF 		bl	snprintf
 558:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1602              		.loc 1 558 0
 1603 03ec FFF7FEFF 		bl	getTimeStamp
 1604 03f0 0246     		mov	r2, r0
 1605 03f2 07F59763 		add	r3, r7, #1208
 1606 03f6 1946     		mov	r1, r3
 1607 03f8 1548     		ldr	r0, .L57+20
 1608 03fa FFF7FEFF 		bl	pushData
 1609              	.LBE7:
 1610 03fe 03E0     		b	.L53
 1611              	.L52:
 559:notoriOS.c    ****         }else{
 560:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1612              		.loc 1 560 0
 1613 0400 1449     		ldr	r1, .L57+24
 1614 0402 0220     		movs	r0, #2
 1615 0404 FFF7FEFF 		bl	printNotif
 1616              	.L53:
 561:notoriOS.c    ****         }
 562:notoriOS.c    ****          
 563:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 564:notoriOS.c    ****         long network_time = modem_get_network_time();
 1617              		.loc 1 564 0
 1618 0408 FFF7FEFF 		bl	modem_get_network_time
 1619 040c C7F83C05 		str	r0, [r7, #1340]
 565:notoriOS.c    ****         if(network_time != 0){
 1620              		.loc 1 565 0
 1621 0410 D7F83C35 		ldr	r3, [r7, #1340]
 1622 0414 002B     		cmp	r3, #0
 1623 0416 03D0     		beq	.L54
 566:notoriOS.c    ****            setTime(network_time);
 1624              		.loc 1 566 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 41


 1625 0418 D7F83C05 		ldr	r0, [r7, #1340]
 1626 041c FFF7FEFF 		bl	setTime
 1627              	.L54:
 567:notoriOS.c    ****         }
 568:notoriOS.c    ****         
 569:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 570:notoriOS.c    ****         // If not -- keep the statck and try next time
 571:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 572:notoriOS.c    ****         modem_power_down();
 1628              		.loc 1 572 0
 1629 0420 FFF7FEFF 		bl	modem_power_down
 573:notoriOS.c    ****         
 574:notoriOS.c    ****         try_counter = 0u;
 1630              		.loc 1 574 0
 1631 0424 0C4B     		ldr	r3, .L57+28
 1632 0426 0022     		movs	r2, #0
 1633 0428 1A70     		strb	r2, [r3]
 575:notoriOS.c    ****         return 0u;
 1634              		.loc 1 575 0
 1635 042a 0023     		movs	r3, #0
 1636 042c 00E0     		b	.L42
 1637              	.L45:
 1638              	.LBE2:
 576:notoriOS.c    ****     }
 577:notoriOS.c    ****       
 578:notoriOS.c    ****       return 1u; // Not done yet
 1639              		.loc 1 578 0
 1640 042e 0123     		movs	r3, #1
 1641              	.L42:
 579:notoriOS.c    **** }
 1642              		.loc 1 579 0 discriminator 1
 1643 0430 1846     		mov	r0, r3
 1644 0432 07F25457 		addw	r7, r7, #1364
 1645              		.cfi_def_cfa_offset 12
 1646 0436 BD46     		mov	sp, r7
 1647              		.cfi_def_cfa_register 13
 1648              		@ sp needed
 1649 0438 90BD     		pop	{r4, r7, pc}
 1650              	.L58:
 1651 043a 00BF     		.align	2
 1652              	.L57:
 1653 043c 10020000 		.word	.LC30
 1654 0440 18020000 		.word	.LC31
 1655 0444 20020000 		.word	.LC32
 1656 0448 00000000 		.word	modem_start_time_stamp
 1657 044c C4000000 		.word	.LC6
 1658 0450 34020000 		.word	.LC33
 1659 0454 44020000 		.word	.LC34
 1660 0458 00000000 		.word	try_counter
 1661              		.cfi_endproc
 1662              	.LFE74:
 1663              		.size	syncData, .-syncData
 1664              		.section	.text.configureRemoteParams,"ax",%progbits
 1665              		.align	2
 1666              		.global	configureRemoteParams
 1667              		.thumb
 1668              		.thumb_func
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 42


 1669              		.type	configureRemoteParams, %function
 1670              	configureRemoteParams:
 1671              	.LFB75:
 580:notoriOS.c    **** 
 581:notoriOS.c    **** // ==============================================
 582:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 583:notoriOS.c    **** // Returns 0 when done
 584:notoriOS.c    **** // ==============================================
 585:notoriOS.c    **** uint8 configureRemoteParams(){
 1672              		.loc 1 585 0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 8
 1675              		@ frame_needed = 1, uses_anonymous_args = 0
 1676 0000 80B5     		push	{r7, lr}
 1677              		.cfi_def_cfa_offset 8
 1678              		.cfi_offset 7, -8
 1679              		.cfi_offset 14, -4
 1680 0002 82B0     		sub	sp, sp, #8
 1681              		.cfi_def_cfa_offset 16
 1682 0004 00AF     		add	r7, sp, #0
 1683              		.cfi_def_cfa_register 7
 586:notoriOS.c    ****     
 587:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1684              		.loc 1 587 0
 1685 0006 FFF7FEFF 		bl	modem_get_state
 1686 000a 0346     		mov	r3, r0
 1687 000c 002B     		cmp	r3, #0
 1688 000e 02D1     		bne	.L60
 588:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 589:notoriOS.c    ****         modem_power_up();
 1689              		.loc 1 589 0
 1690 0010 FFF7FEFF 		bl	modem_power_up
 1691 0014 11E0     		b	.L61
 1692              	.L60:
 590:notoriOS.c    ****             
 591:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1693              		.loc 1 591 0
 1694 0016 FFF7FEFF 		bl	modem_get_state
 1695 001a 0346     		mov	r3, r0
 1696 001c 042B     		cmp	r3, #4
 1697 001e 0CD1     		bne	.L61
 1698              	.LBB8:
 592:notoriOS.c    ****         
 593:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 594:notoriOS.c    ****         
 595:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 596:notoriOS.c    ****         long network_time = modem_get_network_time();
 1699              		.loc 1 596 0
 1700 0020 FFF7FEFF 		bl	modem_get_network_time
 1701 0024 7860     		str	r0, [r7, #4]
 597:notoriOS.c    ****         if(network_time != 0){
 1702              		.loc 1 597 0
 1703 0026 7B68     		ldr	r3, [r7, #4]
 1704 0028 002B     		cmp	r3, #0
 1705 002a 02D0     		beq	.L62
 598:notoriOS.c    ****             setTime(network_time);
 1706              		.loc 1 598 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 43


 1707 002c 7868     		ldr	r0, [r7, #4]
 1708 002e FFF7FEFF 		bl	setTime
 1709              	.L62:
 599:notoriOS.c    ****         }
 600:notoriOS.c    ****         
 601:notoriOS.c    ****         // Get GPS coordinates
 602:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 603:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 604:notoriOS.c    ****         modem_power_down();
 1710              		.loc 1 604 0
 1711 0032 FFF7FEFF 		bl	modem_power_down
 605:notoriOS.c    ****         return 0u;
 1712              		.loc 1 605 0
 1713 0036 0023     		movs	r3, #0
 1714 0038 00E0     		b	.L63
 1715              	.L61:
 1716              	.LBE8:
 606:notoriOS.c    ****         
 607:notoriOS.c    ****     }
 608:notoriOS.c    ****     
 609:notoriOS.c    ****     return 1u;
 1717              		.loc 1 609 0
 1718 003a 0123     		movs	r3, #1
 1719              	.L63:
 610:notoriOS.c    **** }
 1720              		.loc 1 610 0
 1721 003c 1846     		mov	r0, r3
 1722 003e 0837     		adds	r7, r7, #8
 1723              		.cfi_def_cfa_offset 8
 1724 0040 BD46     		mov	sp, r7
 1725              		.cfi_def_cfa_register 13
 1726              		@ sp needed
 1727 0042 80BD     		pop	{r7, pc}
 1728              		.cfi_endproc
 1729              	.LFE75:
 1730              		.size	configureRemoteParams, .-configureRemoteParams
 1731              		.section	.rodata
 1732 026f 00       		.align	2
 1733              	.LC35:
 1734 0270 256C6400 		.ascii	"%ld\000"
 1735              		.align	2
 1736              	.LC36:
 1737 0274 43757272 		.ascii	"Current_Node_Type\000"
 1737      656E745F 
 1737      4E6F6465 
 1737      5F547970 
 1737      6500
 1738 0286 0000     		.align	2
 1739              	.LC37:
 1740 0288 6D617862 		.ascii	"maxbotix_depth=%s\000"
 1740      6F746978 
 1740      5F646570 
 1740      74683D25 
 1740      7300
 1741 029a 0000     		.align	2
 1742              	.LC38:
 1743 029c 6D617862 		.ascii	"maxbotix_depth\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 44


 1743      6F746978 
 1743      5F646570 
 1743      746800
 1744 02ab 00       		.align	2
 1745              	.LC39:
 1746 02ac 612B00   		.ascii	"a+\000"
 1747 02af 00       		.align	2
 1748              	.LC40:
 1749 02b0 206D6178 		.ascii	" maxbotix_depth: \000"
 1749      626F7469 
 1749      785F6465 
 1749      7074683A 
 1749      2000
 1750 02c2 0000     		.align	2
 1751              	.LC41:
 1752 02c4 2000     		.ascii	" \000"
 1753 02c6 0000     		.align	2
 1754              	.LC42:
 1755 02c8 436F756C 		.ascii	"Could not get valid readings from Maxbotix.\000"
 1755      64206E6F 
 1755      74206765 
 1755      74207661 
 1755      6C696420 
 1756              		.global	__aeabi_f2d
 1757              		.align	2
 1758              	.LC43:
 1759 02f4 252E3266 		.ascii	"%.2f\000"
 1759      00
 1760 02f9 000000   		.align	2
 1761              	.LC44:
 1762 02fc 765F6261 		.ascii	"v_bat=%s\000"
 1762      743D2573 
 1762      00
 1763 0305 000000   		.align	2
 1764              	.LC45:
 1765 0308 765F6261 		.ascii	"v_bat\000"
 1765      7400
 1766 030e 0000     		.align	2
 1767              	.LC46:
 1768 0310 20766261 		.ascii	" vbat: \000"
 1768      743A2000 
 1769              		.align	2
 1770              	.LC47:
 1771 0318 70726573 		.ascii	"pressure_current=%s\000"
 1771      73757265 
 1771      5F637572 
 1771      72656E74 
 1771      3D257300 
 1772              		.align	2
 1773              	.LC48:
 1774 032c 70726573 		.ascii	"pressure_current\000"
 1774      73757265 
 1774      5F637572 
 1774      72656E74 
 1774      00
 1775 033d 000000   		.align	2
 1776              	.LC49:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 45


 1777 0340 20707265 		.ascii	" pressure_current: \000"
 1777      73737572 
 1777      655F6375 
 1777      7272656E 
 1777      743A2000 
 1778              		.align	2
 1779              	.LC50:
 1780 0354 70726573 		.ascii	"pressure_depth=%s\000"
 1780      73757265 
 1780      5F646570 
 1780      74683D25 
 1780      7300
 1781 0366 0000     		.align	2
 1782              	.LC51:
 1783 0368 70726573 		.ascii	"pressure_depth\000"
 1783      73757265 
 1783      5F646570 
 1783      746800
 1784 0377 00       		.align	2
 1785              	.LC52:
 1786 0378 20707265 		.ascii	" pressure_depth: \000"
 1786      73737572 
 1786      655F6465 
 1786      7074683A 
 1786      2000
 1787 038a 0000     		.align	2
 1788              	.LC53:
 1789 038c 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1789      64206E6F 
 1789      74206765 
 1789      74207661 
 1789      6C696420 
 1790              		.section	.text.makeMeasurements,"ax",%progbits
 1791              		.align	2
 1792              		.global	makeMeasurements
 1793              		.thumb
 1794              		.thumb_func
 1795              		.type	makeMeasurements, %function
 1796              	makeMeasurements:
 1797              	.LFB76:
 611:notoriOS.c    **** 
 612:notoriOS.c    **** 
 613:notoriOS.c    **** // ==============================================
 614:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 615:notoriOS.c    **** // Returns 0 when finished
 616:notoriOS.c    **** // ==============================================
 617:notoriOS.c    **** uint8 makeMeasurements(){
 1798              		.loc 1 617 0
 1799              		.cfi_startproc
 1800              		@ args = 0, pretend = 0, frame = 128
 1801              		@ frame_needed = 1, uses_anonymous_args = 0
 1802 0000 90B5     		push	{r4, r7, lr}
 1803              		.cfi_def_cfa_offset 12
 1804              		.cfi_offset 4, -12
 1805              		.cfi_offset 7, -8
 1806              		.cfi_offset 14, -4
 1807 0002 A3B0     		sub	sp, sp, #140
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 46


 1808              		.cfi_def_cfa_offset 152
 1809 0004 02AF     		add	r7, sp, #8
 1810              		.cfi_def_cfa 7, 144
 618:notoriOS.c    ****     
 619:notoriOS.c    ****     // Get clock time and save to timeStamp
 620:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1811              		.loc 1 620 0
 1812 0006 FFF7FEFF 		bl	getTimeStamp
 1813 000a F867     		str	r0, [r7, #124]
 621:notoriOS.c    ****     char c_timeStamp[32];
 622:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1814              		.loc 1 622 0
 1815 000c 07F15C00 		add	r0, r7, #92
 1816 0010 FB6F     		ldr	r3, [r7, #124]
 1817 0012 8C4A     		ldr	r2, .L72
 1818 0014 2021     		movs	r1, #32
 1819 0016 FFF7FEFF 		bl	snprintf
 623:notoriOS.c    ****     
 624:notoriOS.c    ****     // Holds string for value that will be written 
 625:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 626:notoriOS.c    ****     
 627:notoriOS.c    ****     // who i am determines what I'm going to do 
 628:notoriOS.c    ****     // this is primarily for interpretability on grafana dashboards when developing custom nodes
 629:notoriOS.c    ****     char c_node_type[5];
 630:notoriOS.c    ****     itoa(updatable_parameters.node_type,c_node_type,10);
 1820              		.loc 1 630 0
 1821 001a 8B4B     		ldr	r3, .L72+4
 1822 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1823 001e 1846     		mov	r0, r3
 1824 0020 07F14003 		add	r3, r7, #64
 1825 0024 0A22     		movs	r2, #10
 1826 0026 1946     		mov	r1, r3
 1827 0028 FFF7FEFF 		bl	itoa
 631:notoriOS.c    ****     pushData("Current_Node_Type",c_node_type ,getTimeStamp());
 1828              		.loc 1 631 0
 1829 002c FFF7FEFF 		bl	getTimeStamp
 1830 0030 0246     		mov	r2, r0
 1831 0032 07F14003 		add	r3, r7, #64
 1832 0036 1946     		mov	r1, r3
 1833 0038 8448     		ldr	r0, .L72+8
 1834 003a FFF7FEFF 		bl	pushData
 632:notoriOS.c    ****     
 633:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 634:notoriOS.c    ****     
 635:notoriOS.c    ****     if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 1835              		.loc 1 635 0
 1836 003e 824B     		ldr	r3, .L72+4
 1837 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1838 0042 002B     		cmp	r3, #0
 1839 0044 3BD1     		bne	.L65
 1840              	.LBB9:
 636:notoriOS.c    ****         
 637:notoriOS.c    ****         // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data ty
 638:notoriOS.c    ****         level_sensor_t m_level_sensor;
 639:notoriOS.c    ****         
 640:notoriOS.c    ****         // Take level sensor readings and save them to m_level_sensor
 641:notoriOS.c    ****         m_level_sensor = level_sensor_take_reading();
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 47


 1841              		.loc 1 641 0
 1842 0046 07F11003 		add	r3, r7, #16
 1843 004a 1846     		mov	r0, r3
 1844 004c FFF7FEFF 		bl	level_sensor_take_reading
 642:notoriOS.c    ****     
 643:notoriOS.c    ****         // If the number of valid level sensor readings is greater than 0, then print the level sen
 644:notoriOS.c    ****         if(m_level_sensor.num_valid_readings > 0){
 1845              		.loc 1 644 0
 1846 0050 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1847 0054 002B     		cmp	r3, #0
 1848 0056 2ED0     		beq	.L66
 645:notoriOS.c    ****             snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 1849              		.loc 1 645 0
 1850 0058 B7F92630 		ldrsh	r3, [r7, #38]
 1851 005c 07F14800 		add	r0, r7, #72
 1852 0060 7B4A     		ldr	r2, .L72+12
 1853 0062 1421     		movs	r1, #20
 1854 0064 FFF7FEFF 		bl	snprintf
 646:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 1855              		.loc 1 646 0
 1856 0068 07F14803 		add	r3, r7, #72
 1857 006c 1A46     		mov	r2, r3
 1858 006e 7949     		ldr	r1, .L72+16
 1859 0070 0020     		movs	r0, #0
 1860 0072 FFF7FEFF 		bl	printNotif
 647:notoriOS.c    ****             pushData("maxbotix_depth",value,timeStamp);
 1861              		.loc 1 647 0
 1862 0076 07F14803 		add	r3, r7, #72
 1863 007a FA6F     		ldr	r2, [r7, #124]
 1864 007c 1946     		mov	r1, r3
 1865 007e 7648     		ldr	r0, .L72+20
 1866 0080 FFF7FEFF 		bl	pushData
 648:notoriOS.c    ****             
 649:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 650:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1867              		.loc 1 650 0
 1868 0084 07F15C03 		add	r3, r7, #92
 1869 0088 1A46     		mov	r2, r3
 1870 008a 7449     		ldr	r1, .L72+24
 1871 008c 7448     		ldr	r0, .L72+28
 1872 008e FFF7FEFF 		bl	SD_write
 651:notoriOS.c    ****             SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 1873              		.loc 1 651 0
 1874 0092 744A     		ldr	r2, .L72+32
 1875 0094 7149     		ldr	r1, .L72+24
 1876 0096 7248     		ldr	r0, .L72+28
 1877 0098 FFF7FEFF 		bl	SD_write
 652:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1878              		.loc 1 652 0
 1879 009c 07F14803 		add	r3, r7, #72
 1880 00a0 1A46     		mov	r2, r3
 1881 00a2 6E49     		ldr	r1, .L72+24
 1882 00a4 6E48     		ldr	r0, .L72+28
 1883 00a6 FFF7FEFF 		bl	SD_write
 653:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1884              		.loc 1 653 0
 1885 00aa 6F4A     		ldr	r2, .L72+36
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 48


 1886 00ac 6B49     		ldr	r1, .L72+24
 1887 00ae 6C48     		ldr	r0, .L72+28
 1888 00b0 FFF7FEFF 		bl	SD_write
 1889 00b4 03E0     		b	.L65
 1890              	.L66:
 654:notoriOS.c    ****         }else{
 655:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 1891              		.loc 1 655 0
 1892 00b6 6D49     		ldr	r1, .L72+40
 1893 00b8 0220     		movs	r0, #2
 1894 00ba FFF7FEFF 		bl	printNotif
 1895              	.L65:
 1896              	.LBE9:
 656:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 657:notoriOS.c    ****         }
 658:notoriOS.c    ****     }
 659:notoriOS.c    ****     
 660:notoriOS.c    ****     
 661:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 662:notoriOS.c    ****     voltage_t m_voltage;
 663:notoriOS.c    ****     
 664:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 665:notoriOS.c    ****     m_voltage = voltage_take_readings();
 1897              		.loc 1 665 0
 1898 00be 07F12C03 		add	r3, r7, #44
 1899 00c2 1846     		mov	r0, r3
 1900 00c4 FFF7FEFF 		bl	voltage_take_readings
 666:notoriOS.c    ****     
 667:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 668:notoriOS.c    ****     if(m_voltage.valid){
 1901              		.loc 1 668 0
 1902 00c8 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 1903 00cc 002B     		cmp	r3, #0
 1904 00ce 00F0AF80 		beq	.L68
 669:notoriOS.c    ****         // battery voltage data
 670:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 1905              		.loc 1 670 0
 1906 00d2 FB6A     		ldr	r3, [r7, #44]	@ float
 1907 00d4 1846     		mov	r0, r3
 1908 00d6 FFF7FEFF 		bl	__aeabi_f2d
 1909 00da 0346     		mov	r3, r0
 1910 00dc 0C46     		mov	r4, r1
 1911 00de 07F14800 		add	r0, r7, #72
 1912 00e2 CDE90034 		strd	r3, [sp]
 1913 00e6 624A     		ldr	r2, .L72+44
 1914 00e8 1421     		movs	r1, #20
 1915 00ea FFF7FEFF 		bl	snprintf
 671:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 1916              		.loc 1 671 0
 1917 00ee 07F14803 		add	r3, r7, #72
 1918 00f2 1A46     		mov	r2, r3
 1919 00f4 5F49     		ldr	r1, .L72+48
 1920 00f6 0020     		movs	r0, #0
 1921 00f8 FFF7FEFF 		bl	printNotif
 672:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
 1922              		.loc 1 672 0
 1923 00fc 07F14803 		add	r3, r7, #72
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 49


 1924 0100 FA6F     		ldr	r2, [r7, #124]
 1925 0102 1946     		mov	r1, r3
 1926 0104 5C48     		ldr	r0, .L72+52
 1927 0106 FFF7FEFF 		bl	pushData
 673:notoriOS.c    ****         
 674:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 675:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 1928              		.loc 1 675 0
 1929 010a 574A     		ldr	r2, .L72+36
 1930 010c 5349     		ldr	r1, .L72+24
 1931 010e 5448     		ldr	r0, .L72+28
 1932 0110 FFF7FEFF 		bl	SD_write
 676:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 1933              		.loc 1 676 0
 1934 0114 07F15C03 		add	r3, r7, #92
 1935 0118 1A46     		mov	r2, r3
 1936 011a 5049     		ldr	r1, .L72+24
 1937 011c 5048     		ldr	r0, .L72+28
 1938 011e FFF7FEFF 		bl	SD_write
 677:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 1939              		.loc 1 677 0
 1940 0122 564A     		ldr	r2, .L72+56
 1941 0124 4D49     		ldr	r1, .L72+24
 1942 0126 4E48     		ldr	r0, .L72+28
 1943 0128 FFF7FEFF 		bl	SD_write
 678:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1944              		.loc 1 678 0
 1945 012c 07F14803 		add	r3, r7, #72
 1946 0130 1A46     		mov	r2, r3
 1947 0132 4A49     		ldr	r1, .L72+24
 1948 0134 4A48     		ldr	r0, .L72+28
 1949 0136 FFF7FEFF 		bl	SD_write
 679:notoriOS.c    ****         
 680:notoriOS.c    ****         // If node type is green infrastructure node, take pressure transducer measurements
 681:notoriOS.c    ****          
 682:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE){
 1950              		.loc 1 682 0
 1951 013a 434B     		ldr	r3, .L72+4
 1952 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1953 013e 012B     		cmp	r3, #1
 1954 0140 7AD1     		bne	.L70
 1955              	.LBB10:
 683:notoriOS.c    ****             
 684:notoriOS.c    ****             // pressure transducer voltage (V) data
 685:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 686:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 687:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 688:notoriOS.c    ****             
 689:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 690:notoriOS.c    ****             pressure_t m_pressure;
 691:notoriOS.c    ****             
 692:notoriOS.c    ****             // Make pressure transducer calculators for current and depth
 693:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 1956              		.loc 1 693 0
 1957 0142 3C46     		mov	r4, r7
 1958 0144 6A46     		mov	r2, sp
 1959 0146 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 50


 1960 014a 93E80300 		ldmia	r3, {r0, r1}
 1961 014e 82E80300 		stmia	r2, {r0, r1}
 1962 0152 07F12C03 		add	r3, r7, #44
 1963 0156 0ECB     		ldmia	r3, {r1, r2, r3}
 1964 0158 2046     		mov	r0, r4
 1965 015a FFF7FEFF 		bl	pressure_calculations
 694:notoriOS.c    ****             
 695:notoriOS.c    ****             // pressure transducer current (mA) data
 696:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 1966              		.loc 1 696 0
 1967 015e BB68     		ldr	r3, [r7, #8]	@ float
 1968 0160 1846     		mov	r0, r3
 1969 0162 FFF7FEFF 		bl	__aeabi_f2d
 1970 0166 0346     		mov	r3, r0
 1971 0168 0C46     		mov	r4, r1
 1972 016a 07F14800 		add	r0, r7, #72
 1973 016e CDE90034 		strd	r3, [sp]
 1974 0172 3F4A     		ldr	r2, .L72+44
 1975 0174 1421     		movs	r1, #20
 1976 0176 FFF7FEFF 		bl	snprintf
 697:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 1977              		.loc 1 697 0
 1978 017a 07F14803 		add	r3, r7, #72
 1979 017e 1A46     		mov	r2, r3
 1980 0180 3F49     		ldr	r1, .L72+60
 1981 0182 0020     		movs	r0, #0
 1982 0184 FFF7FEFF 		bl	printNotif
 698:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 1983              		.loc 1 698 0
 1984 0188 07F14803 		add	r3, r7, #72
 1985 018c FA6F     		ldr	r2, [r7, #124]
 1986 018e 1946     		mov	r1, r3
 1987 0190 3C48     		ldr	r0, .L72+64
 1988 0192 FFF7FEFF 		bl	pushData
 699:notoriOS.c    ****             
 700:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 701:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1989              		.loc 1 701 0
 1990 0196 344A     		ldr	r2, .L72+36
 1991 0198 3049     		ldr	r1, .L72+24
 1992 019a 3148     		ldr	r0, .L72+28
 1993 019c FFF7FEFF 		bl	SD_write
 702:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1994              		.loc 1 702 0
 1995 01a0 07F15C03 		add	r3, r7, #92
 1996 01a4 1A46     		mov	r2, r3
 1997 01a6 2D49     		ldr	r1, .L72+24
 1998 01a8 2D48     		ldr	r0, .L72+28
 1999 01aa FFF7FEFF 		bl	SD_write
 703:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 2000              		.loc 1 703 0
 2001 01ae 364A     		ldr	r2, .L72+68
 2002 01b0 2A49     		ldr	r1, .L72+24
 2003 01b2 2B48     		ldr	r0, .L72+28
 2004 01b4 FFF7FEFF 		bl	SD_write
 704:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 2005              		.loc 1 704 0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 51


 2006 01b8 07F14803 		add	r3, r7, #72
 2007 01bc 1A46     		mov	r2, r3
 2008 01be 2749     		ldr	r1, .L72+24
 2009 01c0 2748     		ldr	r0, .L72+28
 2010 01c2 FFF7FEFF 		bl	SD_write
 705:notoriOS.c    ****             
 706:notoriOS.c    ****             // pressure transducer depth (ft) data
 707:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 2011              		.loc 1 707 0
 2012 01c6 FB68     		ldr	r3, [r7, #12]	@ float
 2013 01c8 1846     		mov	r0, r3
 2014 01ca FFF7FEFF 		bl	__aeabi_f2d
 2015 01ce 0346     		mov	r3, r0
 2016 01d0 0C46     		mov	r4, r1
 2017 01d2 07F14800 		add	r0, r7, #72
 2018 01d6 CDE90034 		strd	r3, [sp]
 2019 01da 254A     		ldr	r2, .L72+44
 2020 01dc 1421     		movs	r1, #20
 2021 01de FFF7FEFF 		bl	snprintf
 708:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 2022              		.loc 1 708 0
 2023 01e2 07F14803 		add	r3, r7, #72
 2024 01e6 1A46     		mov	r2, r3
 2025 01e8 2849     		ldr	r1, .L72+72
 2026 01ea 0020     		movs	r0, #0
 2027 01ec FFF7FEFF 		bl	printNotif
 709:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 2028              		.loc 1 709 0
 2029 01f0 07F14803 		add	r3, r7, #72
 2030 01f4 FA6F     		ldr	r2, [r7, #124]
 2031 01f6 1946     		mov	r1, r3
 2032 01f8 2548     		ldr	r0, .L72+76
 2033 01fa FFF7FEFF 		bl	pushData
 710:notoriOS.c    ****             
 711:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 712:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 2034              		.loc 1 712 0
 2035 01fe 1A4A     		ldr	r2, .L72+36
 2036 0200 1649     		ldr	r1, .L72+24
 2037 0202 1748     		ldr	r0, .L72+28
 2038 0204 FFF7FEFF 		bl	SD_write
 713:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 2039              		.loc 1 713 0
 2040 0208 07F15C03 		add	r3, r7, #92
 2041 020c 1A46     		mov	r2, r3
 2042 020e 1349     		ldr	r1, .L72+24
 2043 0210 1348     		ldr	r0, .L72+28
 2044 0212 FFF7FEFF 		bl	SD_write
 714:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
 2045              		.loc 1 714 0
 2046 0216 1F4A     		ldr	r2, .L72+80
 2047 0218 1049     		ldr	r1, .L72+24
 2048 021a 1148     		ldr	r0, .L72+28
 2049 021c FFF7FEFF 		bl	SD_write
 715:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 2050              		.loc 1 715 0
 2051 0220 07F14803 		add	r3, r7, #72
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 52


 2052 0224 1A46     		mov	r2, r3
 2053 0226 0D49     		ldr	r1, .L72+24
 2054 0228 0D48     		ldr	r0, .L72+28
 2055 022a FFF7FEFF 		bl	SD_write
 2056 022e 03E0     		b	.L70
 2057              	.L68:
 2058              	.LBE10:
 716:notoriOS.c    ****         }    
 717:notoriOS.c    ****     }else{
 718:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 2059              		.loc 1 718 0
 2060 0230 1949     		ldr	r1, .L72+84
 2061 0232 0220     		movs	r0, #2
 2062 0234 FFF7FEFF 		bl	printNotif
 2063              	.L70:
 719:notoriOS.c    ****         
 720:notoriOS.c    ****     }
 721:notoriOS.c    ****         
 722:notoriOS.c    ****     
 723:notoriOS.c    ****     return 0u;
 2064              		.loc 1 723 0
 2065 0238 0023     		movs	r3, #0
 724:notoriOS.c    **** }
 2066              		.loc 1 724 0
 2067 023a 1846     		mov	r0, r3
 2068 023c 8437     		adds	r7, r7, #132
 2069              		.cfi_def_cfa_offset 12
 2070 023e BD46     		mov	sp, r7
 2071              		.cfi_def_cfa_register 13
 2072              		@ sp needed
 2073 0240 90BD     		pop	{r4, r7, pc}
 2074              	.L73:
 2075 0242 00BF     		.align	2
 2076              	.L72:
 2077 0244 70020000 		.word	.LC35
 2078 0248 00000000 		.word	updatable_parameters
 2079 024c 74020000 		.word	.LC36
 2080 0250 C4000000 		.word	.LC6
 2081 0254 88020000 		.word	.LC37
 2082 0258 9C020000 		.word	.LC38
 2083 025c AC020000 		.word	.LC39
 2084 0260 00000000 		.word	Data_fileName
 2085 0264 B0020000 		.word	.LC40
 2086 0268 C4020000 		.word	.LC41
 2087 026c C8020000 		.word	.LC42
 2088 0270 F4020000 		.word	.LC43
 2089 0274 FC020000 		.word	.LC44
 2090 0278 08030000 		.word	.LC45
 2091 027c 10030000 		.word	.LC46
 2092 0280 18030000 		.word	.LC47
 2093 0284 2C030000 		.word	.LC48
 2094 0288 40030000 		.word	.LC49
 2095 028c 54030000 		.word	.LC50
 2096 0290 68030000 		.word	.LC51
 2097 0294 78030000 		.word	.LC52
 2098 0298 8C030000 		.word	.LC53
 2099              		.cfi_endproc
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 53


 2100              	.LFE76:
 2101              		.size	makeMeasurements, .-makeMeasurements
 2102              		.section	.rodata
 2103 03b3 00       		.align	2
 2104              	.LC54:
 2105 03b4 4572726F 		.ascii	"Error setting system time.\000"
 2105      72207365 
 2105      7474696E 
 2105      67207379 
 2105      7374656D 
 2106              		.section	.text.setTime,"ax",%progbits
 2107              		.align	2
 2108              		.global	setTime
 2109              		.thumb
 2110              		.thumb_func
 2111              		.type	setTime, %function
 2112              	setTime:
 2113              	.LFB77:
 725:notoriOS.c    **** 
 726:notoriOS.c    **** // ==============================================
 727:notoriOS.c    **** // Set the system time
 728:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 729:notoriOS.c    **** // ==============================================
 730:notoriOS.c    **** uint8 setTime(long timeStamp){
 2114              		.loc 1 730 0
 2115              		.cfi_startproc
 2116              		@ args = 0, pretend = 0, frame = 24
 2117              		@ frame_needed = 1, uses_anonymous_args = 0
 2118 0000 80B5     		push	{r7, lr}
 2119              		.cfi_def_cfa_offset 8
 2120              		.cfi_offset 7, -8
 2121              		.cfi_offset 14, -4
 2122 0002 86B0     		sub	sp, sp, #24
 2123              		.cfi_def_cfa_offset 32
 2124 0004 00AF     		add	r7, sp, #0
 2125              		.cfi_def_cfa_register 7
 2126 0006 7860     		str	r0, [r7, #4]
 731:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 732:notoriOS.c    ****     if(timeStamp <=0){
 2127              		.loc 1 732 0
 2128 0008 7B68     		ldr	r3, [r7, #4]
 2129 000a 002B     		cmp	r3, #0
 2130 000c 05DC     		bgt	.L75
 733:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 2131              		.loc 1 733 0
 2132 000e 1849     		ldr	r1, .L77
 2133 0010 0220     		movs	r0, #2
 2134 0012 FFF7FEFF 		bl	printNotif
 734:notoriOS.c    ****         return 0;  
 2135              		.loc 1 734 0
 2136 0016 0023     		movs	r3, #0
 2137 0018 25E0     		b	.L76
 2138              	.L75:
 735:notoriOS.c    ****     }
 736:notoriOS.c    ****     // Create a new pointer t of data structure tm
 737:notoriOS.c    ****     struct tm * t;
 738:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 54


 739:notoriOS.c    ****     t = gmtime(&timeStamp);
 2139              		.loc 1 739 0
 2140 001a 3B1D     		adds	r3, r7, #4
 2141 001c 1846     		mov	r0, r3
 2142 001e FFF7FEFF 		bl	gmtime
 2143 0022 7861     		str	r0, [r7, #20]
 740:notoriOS.c    ****     
 741:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 742:notoriOS.c    ****     RTC_TIME_DATE localTime;
 743:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 2144              		.loc 1 743 0
 2145 0024 7B69     		ldr	r3, [r7, #20]
 2146 0026 1B68     		ldr	r3, [r3]
 2147 0028 DBB2     		uxtb	r3, r3
 2148 002a 3B72     		strb	r3, [r7, #8]
 744:notoriOS.c    ****     localTime.Min = t->tm_min;
 2149              		.loc 1 744 0
 2150 002c 7B69     		ldr	r3, [r7, #20]
 2151 002e 5B68     		ldr	r3, [r3, #4]
 2152 0030 DBB2     		uxtb	r3, r3
 2153 0032 7B72     		strb	r3, [r7, #9]
 745:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 2154              		.loc 1 745 0
 2155 0034 7B69     		ldr	r3, [r7, #20]
 2156 0036 9B68     		ldr	r3, [r3, #8]
 2157 0038 DBB2     		uxtb	r3, r3
 2158 003a BB72     		strb	r3, [r7, #10]
 746:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 2159              		.loc 1 746 0
 2160 003c 7B69     		ldr	r3, [r7, #20]
 2161 003e 5B69     		ldr	r3, [r3, #20]
 2162 0040 9BB2     		uxth	r3, r3
 2163 0042 03F26C73 		addw	r3, r3, #1900
 2164 0046 9BB2     		uxth	r3, r3
 2165 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 747:notoriOS.c    ****     localTime.Month = t->tm_mon;
 2166              		.loc 1 747 0
 2167 004a 7B69     		ldr	r3, [r7, #20]
 2168 004c 1B69     		ldr	r3, [r3, #16]
 2169 004e DBB2     		uxtb	r3, r3
 2170 0050 3B74     		strb	r3, [r7, #16]
 748:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 2171              		.loc 1 748 0
 2172 0052 7B69     		ldr	r3, [r7, #20]
 2173 0054 DB68     		ldr	r3, [r3, #12]
 2174 0056 DBB2     		uxtb	r3, r3
 2175 0058 3B73     		strb	r3, [r7, #12]
 749:notoriOS.c    **** 
 750:notoriOS.c    ****     // Writes time and date values as current time and date.
 751:notoriOS.c    ****     RTC_WriteTime(&localTime);
 2176              		.loc 1 751 0
 2177 005a 07F10803 		add	r3, r7, #8
 2178 005e 1846     		mov	r0, r3
 2179 0060 FFF7FEFF 		bl	RTC_WriteTime
 752:notoriOS.c    ****     
 753:notoriOS.c    ****     // Return 1 when the system time was set properly.
 754:notoriOS.c    ****     return 1;
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 55


 2180              		.loc 1 754 0
 2181 0064 0123     		movs	r3, #1
 2182              	.L76:
 755:notoriOS.c    **** }
 2183              		.loc 1 755 0
 2184 0066 1846     		mov	r0, r3
 2185 0068 1837     		adds	r7, r7, #24
 2186              		.cfi_def_cfa_offset 8
 2187 006a BD46     		mov	sp, r7
 2188              		.cfi_def_cfa_register 13
 2189              		@ sp needed
 2190 006c 80BD     		pop	{r7, pc}
 2191              	.L78:
 2192 006e 00BF     		.align	2
 2193              	.L77:
 2194 0070 B4030000 		.word	.LC54
 2195              		.cfi_endproc
 2196              	.LFE77:
 2197              		.size	setTime, .-setTime
 2198              		.section	.rodata
 2199 03cf 00       		.align	2
 2200              	.LC55:
 2201 03d0 75706772 		.ascii	"upgrade.hex\000"
 2201      6164652E 
 2201      68657800 
 2202              		.section	.text.upgraded,"ax",%progbits
 2203              		.align	2
 2204              		.global	upgraded
 2205              		.thumb
 2206              		.thumb_func
 2207              		.type	upgraded, %function
 2208              	upgraded:
 2209              	.LFB78:
 756:notoriOS.c    **** 
 757:notoriOS.c    **** //downloads and stores files on SD card
 758:notoriOS.c    **** 
 759:notoriOS.c    **** 
 760:notoriOS.c    **** 
 761:notoriOS.c    **** // ==============================================
 762:notoriOS.c    **** // Will they love it, will they hate it
 763:notoriOS.c    **** // Never fade it, I evade it
 764:notoriOS.c    **** // Cause I never really want to complicate it
 765:notoriOS.c    **** //      - Logic, Upgraded (2015)
 766:notoriOS.c    **** //
 767:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 768:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 769:notoriOS.c    **** // ==============================================
 770:notoriOS.c    **** 
 771:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 2210              		.loc 1 771 0
 2211              		.cfi_startproc
 2212              		@ args = 0, pretend = 0, frame = 232
 2213              		@ frame_needed = 1, uses_anonymous_args = 0
 2214 0000 80B5     		push	{r7, lr}
 2215              		.cfi_def_cfa_offset 8
 2216              		.cfi_offset 7, -8
 2217              		.cfi_offset 14, -4
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 56


 2218 0002 C0B0     		sub	sp, sp, #256
 2219              		.cfi_def_cfa_offset 264
 2220 0004 06AF     		add	r7, sp, #24
 2221              		.cfi_def_cfa 7, 240
 2222 0006 F860     		str	r0, [r7, #12]
 2223 0008 B960     		str	r1, [r7, #8]
 2224 000a 7A60     		str	r2, [r7, #4]
 772:notoriOS.c    ****     
 773:notoriOS.c    ****     uint8 upgrade_status = 0;
 2225              		.loc 1 773 0
 2226 000c 0023     		movs	r3, #0
 2227 000e 87F8E730 		strb	r3, [r7, #231]
 774:notoriOS.c    ****     
 775:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 776:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 2228              		.loc 1 776 0
 2229 0012 384B     		ldr	r3, .L83
 2230 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2231 0016 042B     		cmp	r3, #4
 2232 0018 02D0     		beq	.L80
 777:notoriOS.c    ****         return upgrade_status;//where valid = 0
 2233              		.loc 1 777 0
 2234 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2235 001e 65E0     		b	.L82
 2236              	.L80:
 778:notoriOS.c    ****     }
 779:notoriOS.c    ****     
 780:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 2237              		.loc 1 780 0
 2238 0020 354A     		ldr	r2, .L83+4
 2239 0022 07F1D803 		add	r3, r7, #216
 2240 0026 07CA     		ldmia	r2, {r0, r1, r2}
 2241 0028 83E80700 		stmia	r3, {r0, r1, r2}
 781:notoriOS.c    ****     //delete file, if one exisits already
 782:notoriOS.c    ****     SD_rmfile(fileName);
 2242              		.loc 1 782 0
 2243 002c 07F1D803 		add	r3, r7, #216
 2244 0030 1846     		mov	r0, r3
 2245 0032 FFF7FEFF 		bl	SD_rmfile
 783:notoriOS.c    ****     
 784:notoriOS.c    ****     // Create http request
 785:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 2246              		.loc 1 785 0
 2247 0036 314B     		ldr	r3, .L83+8
 2248 0038 0593     		str	r3, [sp, #20]
 2249 003a 0023     		movs	r3, #0
 2250 003c 0493     		str	r3, [sp, #16]
 2251 003e 304B     		ldr	r3, .L83+12
 2252 0040 0393     		str	r3, [sp, #12]
 2253 0042 304B     		ldr	r3, .L83+16
 2254 0044 0293     		str	r3, [sp, #8]
 2255 0046 304B     		ldr	r3, .L83+20
 2256 0048 0193     		str	r3, [sp, #4]
 2257 004a BB68     		ldr	r3, [r7, #8]
 2258 004c 0093     		str	r3, [sp]
 2259 004e 7B68     		ldr	r3, [r7, #4]
 2260 0050 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 57


 2261 0052 2E49     		ldr	r1, .L83+24
 2262 0054 2E48     		ldr	r0, .L83+28
 2263 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 786:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 2264              		.loc 1 786 0
 2265 005a 2D4A     		ldr	r2, .L83+28
 2266 005c 2D49     		ldr	r1, .L83+32
 2267 005e 0020     		movs	r0, #0
 2268 0060 FFF7FEFF 		bl	printNotif
 787:notoriOS.c    ****     // Create array portConfig of size 200 characters
 788:notoriOS.c    ****     char portConfig[200];
 789:notoriOS.c    ****     // Print port configurations
 790:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 2269              		.loc 1 790 0
 2270 0064 07F11000 		add	r0, r7, #16
 2271 0068 FB68     		ldr	r3, [r7, #12]
 2272 006a 0093     		str	r3, [sp]
 2273 006c BB68     		ldr	r3, [r7, #8]
 2274 006e 2A4A     		ldr	r2, .L83+36
 2275 0070 C821     		movs	r1, #200
 2276 0072 FFF7FEFF 		bl	snprintf
 791:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 2277              		.loc 1 791 0
 2278 0076 07F11003 		add	r3, r7, #16
 2279 007a 1A46     		mov	r2, r3
 2280 007c 2749     		ldr	r1, .L83+40
 2281 007e 0020     		movs	r0, #0
 2282 0080 FFF7FEFF 		bl	printNotif
 792:notoriOS.c    ****     // AT command to configure the port
 793:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 2283              		.loc 1 793 0
 2284 0084 07F11003 		add	r3, r7, #16
 2285 0088 42F21072 		movw	r2, #10000
 2286 008c 2449     		ldr	r1, .L83+44
 2287 008e 1846     		mov	r0, r3
 2288 0090 FFF7FEFF 		bl	at_write_command
 2289 0094 0346     		mov	r3, r0
 2290 0096 87F8E730 		strb	r3, [r7, #231]
 794:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 795:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 796:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 2291              		.loc 1 796 0
 2292 009a 4FF47A72 		mov	r2, #1000
 2293 009e 2149     		ldr	r1, .L83+48
 2294 00a0 2148     		ldr	r0, .L83+52
 2295 00a2 FFF7FEFF 		bl	at_write_command
 2296 00a6 0346     		mov	r3, r0
 2297 00a8 87F8E730 		strb	r3, [r7, #231]
 797:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 798:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 2298              		.loc 1 798 0
 2299 00ac 1848     		ldr	r0, .L83+28
 2300 00ae FFF7FEFF 		bl	strlen
 2301 00b2 0346     		mov	r3, r0
 2302 00b4 1A46     		mov	r2, r3
 2303 00b6 164B     		ldr	r3, .L83+28
 2304 00b8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 58


 2305 00ba 1C49     		ldr	r1, .L83+56
 2306 00bc 1A46     		mov	r2, r3
 2307 00be 0B46     		mov	r3, r1
 2308 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 2309 00c2 1380     		strh	r3, [r2]	@ unaligned
 799:notoriOS.c    ****     // AT command to send http request
 800:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
 2310              		.loc 1 800 0
 2311 00c4 41F28832 		movw	r2, #5000
 2312 00c8 1549     		ldr	r1, .L83+44
 2313 00ca 1148     		ldr	r0, .L83+28
 2314 00cc FFF7FEFF 		bl	at_write_command
 2315 00d0 0346     		mov	r3, r0
 2316 00d2 87F8E730 		strb	r3, [r7, #231]
 801:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 802:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 803:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 2317              		.loc 1 803 0
 2318 00d6 41F28832 		movw	r2, #5000
 2319 00da 1549     		ldr	r1, .L83+60
 2320 00dc 1548     		ldr	r0, .L83+64
 2321 00de FFF7FEFF 		bl	at_write_command
 2322 00e2 0346     		mov	r3, r0
 2323 00e4 87F8E730 		strb	r3, [r7, #231]
 804:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 805:notoriOS.c    ****     
 806:notoriOS.c    ****     
 807:notoriOS.c    ****     return upgrade_status;
 2324              		.loc 1 807 0
 2325 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2326              	.L82:
 808:notoriOS.c    ****     
 809:notoriOS.c    **** }
 2327              		.loc 1 809 0 discriminator 1
 2328 00ec 1846     		mov	r0, r3
 2329 00ee E837     		adds	r7, r7, #232
 2330              		.cfi_def_cfa_offset 8
 2331 00f0 BD46     		mov	sp, r7
 2332              		.cfi_def_cfa_register 13
 2333              		@ sp needed
 2334 00f2 80BD     		pop	{r7, pc}
 2335              	.L84:
 2336              		.align	2
 2337              	.L83:
 2338 00f4 00000000 		.word	modem_state
 2339 00f8 D0030000 		.word	.LC55
 2340 00fc 68010000 		.word	.LC16
 2341 0100 6C010000 		.word	.LC17
 2342 0104 70010000 		.word	.LC18
 2343 0108 78010000 		.word	.LC19
 2344 010c 00000000 		.word	http_body
 2345 0110 00000000 		.word	http_request
 2346 0114 80010000 		.word	.LC20
 2347 0118 98010000 		.word	.LC21
 2348 011c B4010000 		.word	.LC22
 2349 0120 B8010000 		.word	.LC23
 2350 0124 E8010000 		.word	.LC26
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 59


 2351 0128 EC010000 		.word	.LC27
 2352 012c FC010000 		.word	.LC28
 2353 0130 18020000 		.word	.LC31
 2354 0134 20020000 		.word	.LC32
 2355              		.cfi_endproc
 2356              	.LFE78:
 2357              		.size	upgraded, .-upgraded
 2358              		.text
 2359              	.Letext0:
 2360              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2361              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2362              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2363              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 2364              		.file 6 "testing.h"
 2365              		.file 7 "voltages.h"
 2366              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2367              		.file 9 "data.h"
 2368              		.file 10 "modem.h"
 2369              		.file 11 "level_sensor.h"
 2370              		.file 12 "notoriOS.h"
 2371              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 2372              		.file 14 "App_LED.h"
 2373              		.file 15 "downstream_level_sensor.h"
 2374              		.file 16 "valve.h"
 2375              		.file 17 "autosampler.h"
 2376              		.section	.debug_info,"",%progbits
 2377              	.Ldebug_info0:
 2378 0000 170E0000 		.4byte	0xe17
 2379 0004 0400     		.2byte	0x4
 2380 0006 00000000 		.4byte	.Ldebug_abbrev0
 2381 000a 04       		.byte	0x4
 2382 000b 01       		.uleb128 0x1
 2383 000c 91000000 		.4byte	.LASF191
 2384 0010 0C       		.byte	0xc
 2385 0011 65090000 		.4byte	.LASF192
 2386 0015 F4050000 		.4byte	.LASF193
 2387 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2388 001d 00000000 		.4byte	0
 2389 0021 00000000 		.4byte	.Ldebug_line0
 2390 0025 02       		.uleb128 0x2
 2391 0026 01       		.byte	0x1
 2392 0027 06       		.byte	0x6
 2393 0028 45000000 		.4byte	.LASF0
 2394 002c 02       		.uleb128 0x2
 2395 002d 01       		.byte	0x1
 2396 002e 08       		.byte	0x8
 2397 002f C3060000 		.4byte	.LASF1
 2398 0033 02       		.uleb128 0x2
 2399 0034 02       		.byte	0x2
 2400 0035 05       		.byte	0x5
 2401 0036 A3040000 		.4byte	.LASF2
 2402 003a 02       		.uleb128 0x2
 2403 003b 02       		.byte	0x2
 2404 003c 07       		.byte	0x7
 2405 003d 9E080000 		.4byte	.LASF3
 2406 0041 03       		.uleb128 0x3
 2407 0042 59080000 		.4byte	.LASF9
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 60


 2408 0046 02       		.byte	0x2
 2409 0047 3F       		.byte	0x3f
 2410 0048 4C000000 		.4byte	0x4c
 2411 004c 02       		.uleb128 0x2
 2412 004d 04       		.byte	0x4
 2413 004e 05       		.byte	0x5
 2414 004f 7D020000 		.4byte	.LASF4
 2415 0053 02       		.uleb128 0x2
 2416 0054 04       		.byte	0x4
 2417 0055 07       		.byte	0x7
 2418 0056 E0030000 		.4byte	.LASF5
 2419 005a 02       		.uleb128 0x2
 2420 005b 08       		.byte	0x8
 2421 005c 05       		.byte	0x5
 2422 005d AE010000 		.4byte	.LASF6
 2423 0061 02       		.uleb128 0x2
 2424 0062 08       		.byte	0x8
 2425 0063 07       		.byte	0x7
 2426 0064 30010000 		.4byte	.LASF7
 2427 0068 04       		.uleb128 0x4
 2428 0069 04       		.byte	0x4
 2429 006a 05       		.byte	0x5
 2430 006b 696E7400 		.ascii	"int\000"
 2431 006f 02       		.uleb128 0x2
 2432 0070 04       		.byte	0x4
 2433 0071 07       		.byte	0x7
 2434 0072 26080000 		.4byte	.LASF8
 2435 0076 03       		.uleb128 0x3
 2436 0077 BB060000 		.4byte	.LASF10
 2437 007b 03       		.byte	0x3
 2438 007c 2C       		.byte	0x2c
 2439 007d 41000000 		.4byte	0x41
 2440 0081 05       		.uleb128 0x5
 2441 0082 B4020000 		.4byte	.LASF11
 2442 0086 04       		.byte	0x4
 2443 0087 9201     		.2byte	0x192
 2444 0089 2C000000 		.4byte	0x2c
 2445 008d 05       		.uleb128 0x5
 2446 008e 08000000 		.4byte	.LASF12
 2447 0092 04       		.byte	0x4
 2448 0093 9301     		.2byte	0x193
 2449 0095 3A000000 		.4byte	0x3a
 2450 0099 05       		.uleb128 0x5
 2451 009a 05030000 		.4byte	.LASF13
 2452 009e 04       		.byte	0x4
 2453 009f 9401     		.2byte	0x194
 2454 00a1 53000000 		.4byte	0x53
 2455 00a5 05       		.uleb128 0x5
 2456 00a6 66040000 		.4byte	.LASF14
 2457 00aa 04       		.byte	0x4
 2458 00ab 9501     		.2byte	0x195
 2459 00ad 25000000 		.4byte	0x25
 2460 00b1 05       		.uleb128 0x5
 2461 00b2 97050000 		.4byte	.LASF15
 2462 00b6 04       		.byte	0x4
 2463 00b7 9601     		.2byte	0x196
 2464 00b9 33000000 		.4byte	0x33
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 61


 2465 00bd 05       		.uleb128 0x5
 2466 00be DF020000 		.4byte	.LASF16
 2467 00c2 04       		.byte	0x4
 2468 00c3 9701     		.2byte	0x197
 2469 00c5 4C000000 		.4byte	0x4c
 2470 00c9 05       		.uleb128 0x5
 2471 00ca 54050000 		.4byte	.LASF17
 2472 00ce 04       		.byte	0x4
 2473 00cf 9801     		.2byte	0x198
 2474 00d1 D5000000 		.4byte	0xd5
 2475 00d5 02       		.uleb128 0x2
 2476 00d6 04       		.byte	0x4
 2477 00d7 04       		.byte	0x4
 2478 00d8 59060000 		.4byte	.LASF18
 2479 00dc 02       		.uleb128 0x2
 2480 00dd 08       		.byte	0x8
 2481 00de 04       		.byte	0x4
 2482 00df 370A0000 		.4byte	.LASF19
 2483 00e3 02       		.uleb128 0x2
 2484 00e4 01       		.byte	0x1
 2485 00e5 08       		.byte	0x8
 2486 00e6 21080000 		.4byte	.LASF20
 2487 00ea 02       		.uleb128 0x2
 2488 00eb 08       		.byte	0x8
 2489 00ec 04       		.byte	0x4
 2490 00ed 03080000 		.4byte	.LASF21
 2491 00f1 02       		.uleb128 0x2
 2492 00f2 04       		.byte	0x4
 2493 00f3 07       		.byte	0x7
 2494 00f4 6D050000 		.4byte	.LASF22
 2495 00f8 06       		.uleb128 0x6
 2496 00f9 04       		.byte	0x4
 2497 00fa E3000000 		.4byte	0xe3
 2498 00fe 07       		.uleb128 0x7
 2499 00ff E3000000 		.4byte	0xe3
 2500 0103 0E010000 		.4byte	0x10e
 2501 0107 08       		.uleb128 0x8
 2502 0108 F1000000 		.4byte	0xf1
 2503 010c 17       		.byte	0x17
 2504 010d 00       		.byte	0
 2505 010e 09       		.uleb128 0x9
 2506 010f 0C       		.byte	0xc
 2507 0110 05       		.byte	0x5
 2508 0111 30       		.byte	0x30
 2509 0112 77010000 		.4byte	0x177
 2510 0116 0A       		.uleb128 0xa
 2511 0117 53656300 		.ascii	"Sec\000"
 2512 011b 05       		.byte	0x5
 2513 011c 32       		.byte	0x32
 2514 011d 81000000 		.4byte	0x81
 2515 0121 00       		.byte	0
 2516 0122 0A       		.uleb128 0xa
 2517 0123 4D696E00 		.ascii	"Min\000"
 2518 0127 05       		.byte	0x5
 2519 0128 33       		.byte	0x33
 2520 0129 81000000 		.4byte	0x81
 2521 012d 01       		.byte	0x1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 62


 2522 012e 0B       		.uleb128 0xb
 2523 012f 47010000 		.4byte	.LASF23
 2524 0133 05       		.byte	0x5
 2525 0134 34       		.byte	0x34
 2526 0135 81000000 		.4byte	0x81
 2527 0139 02       		.byte	0x2
 2528 013a 0B       		.uleb128 0xb
 2529 013b 2C070000 		.4byte	.LASF24
 2530 013f 05       		.byte	0x5
 2531 0140 35       		.byte	0x35
 2532 0141 81000000 		.4byte	0x81
 2533 0145 03       		.byte	0x3
 2534 0146 0B       		.uleb128 0xb
 2535 0147 21040000 		.4byte	.LASF25
 2536 014b 05       		.byte	0x5
 2537 014c 36       		.byte	0x36
 2538 014d 81000000 		.4byte	0x81
 2539 0151 04       		.byte	0x4
 2540 0152 0B       		.uleb128 0xb
 2541 0153 F1090000 		.4byte	.LASF26
 2542 0157 05       		.byte	0x5
 2543 0158 37       		.byte	0x37
 2544 0159 8D000000 		.4byte	0x8d
 2545 015d 06       		.byte	0x6
 2546 015e 0B       		.uleb128 0xb
 2547 015f 2A010000 		.4byte	.LASF27
 2548 0163 05       		.byte	0x5
 2549 0164 38       		.byte	0x38
 2550 0165 81000000 		.4byte	0x81
 2551 0169 08       		.byte	0x8
 2552 016a 0B       		.uleb128 0xb
 2553 016b B0060000 		.4byte	.LASF28
 2554 016f 05       		.byte	0x5
 2555 0170 39       		.byte	0x39
 2556 0171 8D000000 		.4byte	0x8d
 2557 0175 0A       		.byte	0xa
 2558 0176 00       		.byte	0
 2559 0177 03       		.uleb128 0x3
 2560 0178 BE050000 		.4byte	.LASF29
 2561 017c 05       		.byte	0x5
 2562 017d 3A       		.byte	0x3a
 2563 017e 82010000 		.4byte	0x182
 2564 0182 0C       		.uleb128 0xc
 2565 0183 0E010000 		.4byte	0x10e
 2566 0187 0D       		.uleb128 0xd
 2567 0188 8101     		.2byte	0x181
 2568 018a 06       		.byte	0x6
 2569 018b 0A       		.byte	0xa
 2570 018c B5010000 		.4byte	0x1b5
 2571 0190 0B       		.uleb128 0xb
 2572 0191 A6060000 		.4byte	.LASF30
 2573 0195 06       		.byte	0x6
 2574 0196 0C       		.byte	0xc
 2575 0197 B5010000 		.4byte	0x1b5
 2576 019b 00       		.byte	0
 2577 019c 0B       		.uleb128 0xb
 2578 019d 06090000 		.4byte	.LASF31
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 63


 2579 01a1 06       		.byte	0x6
 2580 01a2 0D       		.byte	0xd
 2581 01a3 81000000 		.4byte	0x81
 2582 01a7 80       		.byte	0x80
 2583 01a8 0B       		.uleb128 0xb
 2584 01a9 4E070000 		.4byte	.LASF32
 2585 01ad 06       		.byte	0x6
 2586 01ae 0F       		.byte	0xf
 2587 01af C5010000 		.4byte	0x1c5
 2588 01b3 81       		.byte	0x81
 2589 01b4 00       		.byte	0
 2590 01b5 07       		.uleb128 0x7
 2591 01b6 E3000000 		.4byte	0xe3
 2592 01ba C5010000 		.4byte	0x1c5
 2593 01be 08       		.uleb128 0x8
 2594 01bf F1000000 		.4byte	0xf1
 2595 01c3 7F       		.byte	0x7f
 2596 01c4 00       		.byte	0
 2597 01c5 07       		.uleb128 0x7
 2598 01c6 E3000000 		.4byte	0xe3
 2599 01ca D5010000 		.4byte	0x1d5
 2600 01ce 08       		.uleb128 0x8
 2601 01cf F1000000 		.4byte	0xf1
 2602 01d3 FF       		.byte	0xff
 2603 01d4 00       		.byte	0
 2604 01d5 03       		.uleb128 0x3
 2605 01d6 36070000 		.4byte	.LASF33
 2606 01da 06       		.byte	0x6
 2607 01db 10       		.byte	0x10
 2608 01dc 87010000 		.4byte	0x187
 2609 01e0 09       		.uleb128 0x9
 2610 01e1 14       		.byte	0x14
 2611 01e2 07       		.byte	0x7
 2612 01e3 13       		.byte	0x13
 2613 01e4 25020000 		.4byte	0x225
 2614 01e8 0B       		.uleb128 0xb
 2615 01e9 11040000 		.4byte	.LASF34
 2616 01ed 07       		.byte	0x7
 2617 01ee 14       		.byte	0x14
 2618 01ef D5000000 		.4byte	0xd5
 2619 01f3 00       		.byte	0
 2620 01f4 0B       		.uleb128 0xb
 2621 01f5 FA010000 		.4byte	.LASF35
 2622 01f9 07       		.byte	0x7
 2623 01fa 15       		.byte	0x15
 2624 01fb D5000000 		.4byte	0xd5
 2625 01ff 04       		.byte	0x4
 2626 0200 0B       		.uleb128 0xb
 2627 0201 08020000 		.4byte	.LASF36
 2628 0205 07       		.byte	0x7
 2629 0206 16       		.byte	0x16
 2630 0207 D5000000 		.4byte	0xd5
 2631 020b 08       		.byte	0x8
 2632 020c 0B       		.uleb128 0xb
 2633 020d 3C060000 		.4byte	.LASF37
 2634 0211 07       		.byte	0x7
 2635 0212 17       		.byte	0x17
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 64


 2636 0213 D5000000 		.4byte	0xd5
 2637 0217 0C       		.byte	0xc
 2638 0218 0B       		.uleb128 0xb
 2639 0219 BF070000 		.4byte	.LASF38
 2640 021d 07       		.byte	0x7
 2641 021e 18       		.byte	0x18
 2642 021f 81000000 		.4byte	0x81
 2643 0223 10       		.byte	0x10
 2644 0224 00       		.byte	0
 2645 0225 03       		.uleb128 0x3
 2646 0226 6A0A0000 		.4byte	.LASF39
 2647 022a 07       		.byte	0x7
 2648 022b 19       		.byte	0x19
 2649 022c E0010000 		.4byte	0x1e0
 2650 0230 09       		.uleb128 0x9
 2651 0231 10       		.byte	0x10
 2652 0232 07       		.byte	0x7
 2653 0233 1B       		.byte	0x1b
 2654 0234 69020000 		.4byte	0x269
 2655 0238 0B       		.uleb128 0xb
 2656 0239 75030000 		.4byte	.LASF40
 2657 023d 07       		.byte	0x7
 2658 023e 1C       		.byte	0x1c
 2659 023f D5000000 		.4byte	0xd5
 2660 0243 00       		.byte	0
 2661 0244 0B       		.uleb128 0xb
 2662 0245 9F020000 		.4byte	.LASF41
 2663 0249 07       		.byte	0x7
 2664 024a 1D       		.byte	0x1d
 2665 024b D5000000 		.4byte	0xd5
 2666 024f 04       		.byte	0x4
 2667 0250 0B       		.uleb128 0xb
 2668 0251 AE070000 		.4byte	.LASF42
 2669 0255 07       		.byte	0x7
 2670 0256 1E       		.byte	0x1e
 2671 0257 D5000000 		.4byte	0xd5
 2672 025b 08       		.byte	0x8
 2673 025c 0B       		.uleb128 0xb
 2674 025d 18070000 		.4byte	.LASF43
 2675 0261 07       		.byte	0x7
 2676 0262 1F       		.byte	0x1f
 2677 0263 D5000000 		.4byte	0xd5
 2678 0267 0C       		.byte	0xc
 2679 0268 00       		.byte	0
 2680 0269 03       		.uleb128 0x3
 2681 026a FB090000 		.4byte	.LASF44
 2682 026e 07       		.byte	0x7
 2683 026f 20       		.byte	0x20
 2684 0270 30020000 		.4byte	0x230
 2685 0274 0E       		.uleb128 0xe
 2686 0275 746D00   		.ascii	"tm\000"
 2687 0278 24       		.byte	0x24
 2688 0279 08       		.byte	0x8
 2689 027a 21       		.byte	0x21
 2690 027b EC020000 		.4byte	0x2ec
 2691 027f 0B       		.uleb128 0xb
 2692 0280 E6080000 		.4byte	.LASF45
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 65


 2693 0284 08       		.byte	0x8
 2694 0285 23       		.byte	0x23
 2695 0286 68000000 		.4byte	0x68
 2696 028a 00       		.byte	0
 2697 028b 0B       		.uleb128 0xb
 2698 028c 4D050000 		.4byte	.LASF46
 2699 0290 08       		.byte	0x8
 2700 0291 24       		.byte	0x24
 2701 0292 68000000 		.4byte	0x68
 2702 0296 04       		.byte	0x4
 2703 0297 0B       		.uleb128 0xb
 2704 0298 0F000000 		.4byte	.LASF47
 2705 029c 08       		.byte	0x8
 2706 029d 25       		.byte	0x25
 2707 029e 68000000 		.4byte	0x68
 2708 02a2 08       		.byte	0x8
 2709 02a3 0B       		.uleb128 0xb
 2710 02a4 B8080000 		.4byte	.LASF48
 2711 02a8 08       		.byte	0x8
 2712 02a9 26       		.byte	0x26
 2713 02aa 68000000 		.4byte	0x68
 2714 02ae 0C       		.byte	0xc
 2715 02af 0B       		.uleb128 0xb
 2716 02b0 40030000 		.4byte	.LASF49
 2717 02b4 08       		.byte	0x8
 2718 02b5 27       		.byte	0x27
 2719 02b6 68000000 		.4byte	0x68
 2720 02ba 10       		.byte	0x10
 2721 02bb 0B       		.uleb128 0xb
 2722 02bc 63030000 		.4byte	.LASF50
 2723 02c0 08       		.byte	0x8
 2724 02c1 28       		.byte	0x28
 2725 02c2 68000000 		.4byte	0x68
 2726 02c6 14       		.byte	0x14
 2727 02c7 0B       		.uleb128 0xb
 2728 02c8 D6070000 		.4byte	.LASF51
 2729 02cc 08       		.byte	0x8
 2730 02cd 29       		.byte	0x29
 2731 02ce 68000000 		.4byte	0x68
 2732 02d2 18       		.byte	0x18
 2733 02d3 0B       		.uleb128 0xb
 2734 02d4 76050000 		.4byte	.LASF52
 2735 02d8 08       		.byte	0x8
 2736 02d9 2A       		.byte	0x2a
 2737 02da 68000000 		.4byte	0x68
 2738 02de 1C       		.byte	0x1c
 2739 02df 0B       		.uleb128 0xb
 2740 02e0 4A040000 		.4byte	.LASF53
 2741 02e4 08       		.byte	0x8
 2742 02e5 2B       		.byte	0x2b
 2743 02e6 68000000 		.4byte	0x68
 2744 02ea 20       		.byte	0x20
 2745 02eb 00       		.byte	0
 2746 02ec 09       		.uleb128 0x9
 2747 02ed 2C       		.byte	0x2c
 2748 02ee 09       		.byte	0x9
 2749 02ef 14       		.byte	0x14
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 66


 2750 02f0 19030000 		.4byte	0x319
 2751 02f4 0A       		.uleb128 0xa
 2752 02f5 6B657900 		.ascii	"key\000"
 2753 02f9 09       		.byte	0x9
 2754 02fa 15       		.byte	0x15
 2755 02fb 19030000 		.4byte	0x319
 2756 02ff 00       		.byte	0
 2757 0300 0B       		.uleb128 0xb
 2758 0301 58030000 		.4byte	.LASF54
 2759 0305 09       		.byte	0x9
 2760 0306 16       		.byte	0x16
 2761 0307 19030000 		.4byte	0x319
 2762 030b 14       		.byte	0x14
 2763 030c 0B       		.uleb128 0xb
 2764 030d B4050000 		.4byte	.LASF55
 2765 0311 09       		.byte	0x9
 2766 0312 17       		.byte	0x17
 2767 0313 BD000000 		.4byte	0xbd
 2768 0317 28       		.byte	0x28
 2769 0318 00       		.byte	0
 2770 0319 07       		.uleb128 0x7
 2771 031a E3000000 		.4byte	0xe3
 2772 031e 29030000 		.4byte	0x329
 2773 0322 08       		.uleb128 0x8
 2774 0323 F1000000 		.4byte	0xf1
 2775 0327 13       		.byte	0x13
 2776 0328 00       		.byte	0
 2777 0329 03       		.uleb128 0x3
 2778 032a A1030000 		.4byte	.LASF56
 2779 032e 09       		.byte	0x9
 2780 032f 19       		.byte	0x19
 2781 0330 EC020000 		.4byte	0x2ec
 2782 0334 09       		.uleb128 0x9
 2783 0335 3C       		.byte	0x3c
 2784 0336 0A       		.byte	0xa
 2785 0337 36       		.byte	0x36
 2786 0338 61030000 		.4byte	0x361
 2787 033c 0B       		.uleb128 0xb
 2788 033d B1080000 		.4byte	.LASF57
 2789 0341 0A       		.byte	0xa
 2790 0342 37       		.byte	0x37
 2791 0343 19030000 		.4byte	0x319
 2792 0347 00       		.byte	0
 2793 0348 0B       		.uleb128 0xb
 2794 0349 0C030000 		.4byte	.LASF58
 2795 034d 0A       		.byte	0xa
 2796 034e 38       		.byte	0x38
 2797 034f 19030000 		.4byte	0x319
 2798 0353 14       		.byte	0x14
 2799 0354 0B       		.uleb128 0xb
 2800 0355 49070000 		.4byte	.LASF59
 2801 0359 0A       		.byte	0xa
 2802 035a 39       		.byte	0x39
 2803 035b 19030000 		.4byte	0x319
 2804 035f 28       		.byte	0x28
 2805 0360 00       		.byte	0
 2806 0361 03       		.uleb128 0x3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 67


 2807 0362 4F020000 		.4byte	.LASF60
 2808 0366 0A       		.byte	0xa
 2809 0367 3B       		.byte	0x3b
 2810 0368 34030000 		.4byte	0x334
 2811 036c 09       		.uleb128 0x9
 2812 036d 20       		.byte	0x20
 2813 036e 0A       		.byte	0xa
 2814 036f 3D       		.byte	0x3d
 2815 0370 D5030000 		.4byte	0x3d5
 2816 0374 0B       		.uleb128 0xb
 2817 0375 77020000 		.4byte	.LASF61
 2818 0379 0A       		.byte	0xa
 2819 037a 3E       		.byte	0x3e
 2820 037b 68000000 		.4byte	0x68
 2821 037f 00       		.byte	0
 2822 0380 0A       		.uleb128 0xa
 2823 0381 62657200 		.ascii	"ber\000"
 2824 0385 0A       		.byte	0xa
 2825 0386 3F       		.byte	0x3f
 2826 0387 68000000 		.4byte	0x68
 2827 038b 04       		.byte	0x4
 2828 038c 0B       		.uleb128 0xb
 2829 038d 27070000 		.4byte	.LASF62
 2830 0391 0A       		.byte	0xa
 2831 0392 40       		.byte	0x40
 2832 0393 68000000 		.4byte	0x68
 2833 0397 08       		.byte	0x8
 2834 0398 0B       		.uleb128 0xb
 2835 0399 C4010000 		.4byte	.LASF63
 2836 039d 0A       		.byte	0xa
 2837 039e 41       		.byte	0x41
 2838 039f 68000000 		.4byte	0x68
 2839 03a3 0C       		.byte	0xc
 2840 03a4 0B       		.uleb128 0xb
 2841 03a5 F2060000 		.4byte	.LASF64
 2842 03a9 0A       		.byte	0xa
 2843 03aa 42       		.byte	0x42
 2844 03ab 68000000 		.4byte	0x68
 2845 03af 10       		.byte	0x10
 2846 03b0 0B       		.uleb128 0xb
 2847 03b1 3E080000 		.4byte	.LASF65
 2848 03b5 0A       		.byte	0xa
 2849 03b6 43       		.byte	0x43
 2850 03b7 68000000 		.4byte	0x68
 2851 03bb 14       		.byte	0x14
 2852 03bc 0B       		.uleb128 0xb
 2853 03bd D7010000 		.4byte	.LASF66
 2854 03c1 0A       		.byte	0xa
 2855 03c2 44       		.byte	0x44
 2856 03c3 68000000 		.4byte	0x68
 2857 03c7 18       		.byte	0x18
 2858 03c8 0B       		.uleb128 0xb
 2859 03c9 86020000 		.4byte	.LASF67
 2860 03cd 0A       		.byte	0xa
 2861 03ce 45       		.byte	0x45
 2862 03cf 68000000 		.4byte	0x68
 2863 03d3 1C       		.byte	0x1c
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 68


 2864 03d4 00       		.byte	0
 2865 03d5 03       		.uleb128 0x3
 2866 03d6 A0070000 		.4byte	.LASF68
 2867 03da 0A       		.byte	0xa
 2868 03db 47       		.byte	0x47
 2869 03dc 6C030000 		.4byte	0x36c
 2870 03e0 09       		.uleb128 0x9
 2871 03e1 0A       		.byte	0xa
 2872 03e2 0A       		.byte	0xa
 2873 03e3 53       		.byte	0x53
 2874 03e4 61040000 		.4byte	0x461
 2875 03e8 0B       		.uleb128 0xb
 2876 03e9 E5020000 		.4byte	.LASF69
 2877 03ed 0A       		.byte	0xa
 2878 03ee 55       		.byte	0x55
 2879 03ef 81000000 		.4byte	0x81
 2880 03f3 00       		.byte	0
 2881 03f4 0B       		.uleb128 0xb
 2882 03f5 E8090000 		.4byte	.LASF70
 2883 03f9 0A       		.byte	0xa
 2884 03fa 57       		.byte	0x57
 2885 03fb 61040000 		.4byte	0x461
 2886 03ff 01       		.byte	0x1
 2887 0400 0B       		.uleb128 0xb
 2888 0401 6C080000 		.4byte	.LASF71
 2889 0405 0A       		.byte	0xa
 2890 0406 59       		.byte	0x59
 2891 0407 81000000 		.4byte	0x81
 2892 040b 02       		.byte	0x2
 2893 040c 0B       		.uleb128 0xb
 2894 040d 0E070000 		.4byte	.LASF72
 2895 0411 0A       		.byte	0xa
 2896 0412 5B       		.byte	0x5b
 2897 0413 81000000 		.4byte	0x81
 2898 0417 03       		.byte	0x3
 2899 0418 0B       		.uleb128 0xb
 2900 0419 47030000 		.4byte	.LASF73
 2901 041d 0A       		.byte	0xa
 2902 041e 5E       		.byte	0x5e
 2903 041f 81000000 		.4byte	0x81
 2904 0423 04       		.byte	0x4
 2905 0424 0B       		.uleb128 0xb
 2906 0425 4D090000 		.4byte	.LASF74
 2907 0429 0A       		.byte	0xa
 2908 042a 63       		.byte	0x63
 2909 042b 81000000 		.4byte	0x81
 2910 042f 05       		.byte	0x5
 2911 0430 0B       		.uleb128 0xb
 2912 0431 DE070000 		.4byte	.LASF75
 2913 0435 0A       		.byte	0xa
 2914 0436 65       		.byte	0x65
 2915 0437 81000000 		.4byte	0x81
 2916 043b 06       		.byte	0x6
 2917 043c 0B       		.uleb128 0xb
 2918 043d C9080000 		.4byte	.LASF76
 2919 0441 0A       		.byte	0xa
 2920 0442 66       		.byte	0x66
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 69


 2921 0443 81000000 		.4byte	0x81
 2922 0447 07       		.byte	0x7
 2923 0448 0B       		.uleb128 0xb
 2924 0449 E7060000 		.4byte	.LASF77
 2925 044d 0A       		.byte	0xa
 2926 044e 67       		.byte	0x67
 2927 044f 81000000 		.4byte	0x81
 2928 0453 08       		.byte	0x8
 2929 0454 0B       		.uleb128 0xb
 2930 0455 B3090000 		.4byte	.LASF78
 2931 0459 0A       		.byte	0xa
 2932 045a 68       		.byte	0x68
 2933 045b 81000000 		.4byte	0x81
 2934 045f 09       		.byte	0x9
 2935 0460 00       		.byte	0
 2936 0461 02       		.uleb128 0x2
 2937 0462 01       		.byte	0x1
 2938 0463 02       		.byte	0x2
 2939 0464 B5060000 		.4byte	.LASF79
 2940 0468 03       		.uleb128 0x3
 2941 0469 FB040000 		.4byte	.LASF80
 2942 046d 0A       		.byte	0xa
 2943 046e 6E       		.byte	0x6e
 2944 046f E0030000 		.4byte	0x3e0
 2945 0473 09       		.uleb128 0x9
 2946 0474 1A       		.byte	0x1a
 2947 0475 0B       		.byte	0xb
 2948 0476 10       		.byte	0x10
 2949 0477 AC040000 		.4byte	0x4ac
 2950 047b 0B       		.uleb128 0xb
 2951 047c 15030000 		.4byte	.LASF81
 2952 0480 0B       		.byte	0xb
 2953 0481 11       		.byte	0x11
 2954 0482 AC040000 		.4byte	0x4ac
 2955 0486 00       		.byte	0
 2956 0487 0B       		.uleb128 0xb
 2957 0488 88080000 		.4byte	.LASF82
 2958 048c 0B       		.byte	0xb
 2959 048d 12       		.byte	0x12
 2960 048e B1000000 		.4byte	0xb1
 2961 0492 16       		.byte	0x16
 2962 0493 0B       		.uleb128 0xb
 2963 0494 B8030000 		.4byte	.LASF83
 2964 0498 0B       		.byte	0xb
 2965 0499 13       		.byte	0x13
 2966 049a 81000000 		.4byte	0x81
 2967 049e 18       		.byte	0x18
 2968 049f 0B       		.uleb128 0xb
 2969 04a0 17000000 		.4byte	.LASF84
 2970 04a4 0B       		.byte	0xb
 2971 04a5 14       		.byte	0x14
 2972 04a6 81000000 		.4byte	0x81
 2973 04aa 19       		.byte	0x19
 2974 04ab 00       		.byte	0
 2975 04ac 07       		.uleb128 0x7
 2976 04ad B1000000 		.4byte	0xb1
 2977 04b1 BC040000 		.4byte	0x4bc
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 70


 2978 04b5 08       		.uleb128 0x8
 2979 04b6 F1000000 		.4byte	0xf1
 2980 04ba 0A       		.byte	0xa
 2981 04bb 00       		.byte	0
 2982 04bc 03       		.uleb128 0x3
 2983 04bd 5F060000 		.4byte	.LASF85
 2984 04c1 0B       		.byte	0xb
 2985 04c2 15       		.byte	0x15
 2986 04c3 73040000 		.4byte	0x473
 2987 04c7 09       		.uleb128 0x9
 2988 04c8 06       		.byte	0x6
 2989 04c9 0C       		.byte	0xc
 2990 04ca 35       		.byte	0x35
 2991 04cb 00050000 		.4byte	0x500
 2992 04cf 0B       		.uleb128 0xb
 2993 04d0 28030000 		.4byte	.LASF86
 2994 04d4 0C       		.byte	0xc
 2995 04d5 37       		.byte	0x37
 2996 04d6 8D000000 		.4byte	0x8d
 2997 04da 00       		.byte	0
 2998 04db 0B       		.uleb128 0xb
 2999 04dc D2090000 		.4byte	.LASF87
 3000 04e0 0C       		.byte	0xc
 3001 04e1 38       		.byte	0x38
 3002 04e2 B1000000 		.4byte	0xb1
 3003 04e6 02       		.byte	0x2
 3004 04e7 0B       		.uleb128 0xb
 3005 04e8 C4090000 		.4byte	.LASF88
 3006 04ec 0C       		.byte	0xc
 3007 04ed 39       		.byte	0x39
 3008 04ee 81000000 		.4byte	0x81
 3009 04f2 04       		.byte	0x4
 3010 04f3 0B       		.uleb128 0xb
 3011 04f4 51000000 		.4byte	.LASF89
 3012 04f8 0C       		.byte	0xc
 3013 04f9 3A       		.byte	0x3a
 3014 04fa 81000000 		.4byte	0x81
 3015 04fe 05       		.byte	0x5
 3016 04ff 00       		.byte	0
 3017 0500 03       		.uleb128 0x3
 3018 0501 99020000 		.4byte	.LASF90
 3019 0505 0C       		.byte	0xc
 3020 0506 3D       		.byte	0x3d
 3021 0507 0B050000 		.4byte	0x50b
 3022 050b 0C       		.uleb128 0xc
 3023 050c C7040000 		.4byte	0x4c7
 3024 0510 09       		.uleb128 0x9
 3025 0511 1C       		.byte	0x1c
 3026 0512 0C       		.byte	0xc
 3027 0513 40       		.byte	0x40
 3028 0514 31050000 		.4byte	0x531
 3029 0518 0B       		.uleb128 0xb
 3030 0519 53040000 		.4byte	.LASF91
 3031 051d 0C       		.byte	0xc
 3032 051e 42       		.byte	0x42
 3033 051f 31050000 		.4byte	0x531
 3034 0523 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 71


 3035 0524 0B       		.uleb128 0xb
 3036 0525 210A0000 		.4byte	.LASF92
 3037 0529 0C       		.byte	0xc
 3038 052a 43       		.byte	0x43
 3039 052b FE000000 		.4byte	0xfe
 3040 052f 04       		.byte	0x4
 3041 0530 00       		.byte	0
 3042 0531 06       		.uleb128 0x6
 3043 0532 04       		.byte	0x4
 3044 0533 61030000 		.4byte	0x361
 3045 0537 03       		.uleb128 0x3
 3046 0538 F0040000 		.4byte	.LASF93
 3047 053c 0C       		.byte	0xc
 3048 053d 45       		.byte	0x45
 3049 053e 10050000 		.4byte	0x510
 3050 0542 09       		.uleb128 0x9
 3051 0543 68       		.byte	0x68
 3052 0544 0C       		.byte	0xc
 3053 0545 4B       		.byte	0x4b
 3054 0546 63050000 		.4byte	0x563
 3055 054a 0B       		.uleb128 0xb
 3056 054b 5E040000 		.4byte	.LASF94
 3057 054f 0C       		.byte	0xc
 3058 0550 50       		.byte	0x50
 3059 0551 63050000 		.4byte	0x563
 3060 0555 00       		.byte	0
 3061 0556 0B       		.uleb128 0xb
 3062 0557 42040000 		.4byte	.LASF95
 3063 055b 0C       		.byte	0xc
 3064 055c 51       		.byte	0x51
 3065 055d 68000000 		.4byte	0x68
 3066 0561 64       		.byte	0x64
 3067 0562 00       		.byte	0
 3068 0563 07       		.uleb128 0x7
 3069 0564 E3000000 		.4byte	0xe3
 3070 0568 73050000 		.4byte	0x573
 3071 056c 08       		.uleb128 0x8
 3072 056d F1000000 		.4byte	0xf1
 3073 0571 63       		.byte	0x63
 3074 0572 00       		.byte	0
 3075 0573 03       		.uleb128 0x3
 3076 0574 7E050000 		.4byte	.LASF96
 3077 0578 0C       		.byte	0xc
 3078 0579 57       		.byte	0x57
 3079 057a 42050000 		.4byte	0x542
 3080 057e 0F       		.uleb128 0xf
 3081 057f 86000000 		.4byte	.LASF194
 3082 0583 01       		.byte	0x1
 3083 0584 14       		.byte	0x14
 3084 0585 00000000 		.4byte	.LFB64
 3085 0589 0C000000 		.4byte	.LFE64-.LFB64
 3086 058d 01       		.uleb128 0x1
 3087 058e 9C       		.byte	0x9c
 3088 058f 10       		.uleb128 0x10
 3089 0590 110A0000 		.4byte	.LASF109
 3090 0594 01       		.byte	0x1
 3091 0595 28       		.byte	0x28
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 72


 3092 0596 00000000 		.4byte	.LFB65
 3093 059a B0010000 		.4byte	.LFE65-.LFB65
 3094 059e 01       		.uleb128 0x1
 3095 059f 9C       		.byte	0x9c
 3096 05a0 C1050000 		.4byte	0x5c1
 3097 05a4 11       		.uleb128 0x11
 3098 05a5 63080000 		.4byte	.LASF97
 3099 05a9 01       		.byte	0x1
 3100 05aa 3C       		.byte	0x3c
 3101 05ab C1050000 		.4byte	0x5c1
 3102 05af 02       		.uleb128 0x2
 3103 05b0 91       		.byte	0x91
 3104 05b1 64       		.sleb128 -28
 3105 05b2 11       		.uleb128 0x11
 3106 05b3 F2030000 		.4byte	.LASF98
 3107 05b7 01       		.byte	0x1
 3108 05b8 74       		.byte	0x74
 3109 05b9 81000000 		.4byte	0x81
 3110 05bd 02       		.uleb128 0x2
 3111 05be 91       		.byte	0x91
 3112 05bf 6F       		.sleb128 -17
 3113 05c0 00       		.byte	0
 3114 05c1 07       		.uleb128 0x7
 3115 05c2 99000000 		.4byte	0x99
 3116 05c6 D1050000 		.4byte	0x5d1
 3117 05ca 08       		.uleb128 0x8
 3118 05cb F1000000 		.4byte	0xf1
 3119 05cf 01       		.byte	0x1
 3120 05d0 00       		.byte	0
 3121 05d1 12       		.uleb128 0x12
 3122 05d2 6B040000 		.4byte	.LASF100
 3123 05d6 01       		.byte	0x1
 3124 05d7 7E       		.byte	0x7e
 3125 05d8 68000000 		.4byte	0x68
 3126 05dc 00000000 		.4byte	.LFB66
 3127 05e0 18010000 		.4byte	.LFE66-.LFB66
 3128 05e4 01       		.uleb128 0x1
 3129 05e5 9C       		.byte	0x9c
 3130 05e6 F9050000 		.4byte	0x5f9
 3131 05ea 11       		.uleb128 0x11
 3132 05eb 99060000 		.4byte	.LASF99
 3133 05ef 01       		.byte	0x1
 3134 05f0 B7       		.byte	0xb7
 3135 05f1 81000000 		.4byte	0x81
 3136 05f5 02       		.uleb128 0x2
 3137 05f6 91       		.byte	0x91
 3138 05f7 77       		.sleb128 -9
 3139 05f8 00       		.byte	0
 3140 05f9 13       		.uleb128 0x13
 3141 05fa 96080000 		.4byte	.LASF195
 3142 05fe 01       		.byte	0x1
 3143 05ff C7       		.byte	0xc7
 3144 0600 00000000 		.4byte	.LFB67
 3145 0604 2A000000 		.4byte	.LFE67-.LFB67
 3146 0608 01       		.uleb128 0x1
 3147 0609 9C       		.byte	0x9c
 3148 060a 14       		.uleb128 0x14
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 73


 3149 060b AD030000 		.4byte	.LASF101
 3150 060f 01       		.byte	0x1
 3151 0610 EC       		.byte	0xec
 3152 0611 00000000 		.4byte	.LFB68
 3153 0615 C8000000 		.4byte	.LFE68-.LFB68
 3154 0619 01       		.uleb128 0x1
 3155 061a 9C       		.byte	0x9c
 3156 061b 2E060000 		.4byte	0x62e
 3157 061f 15       		.uleb128 0x15
 3158 0620 12050000 		.4byte	.LASF102
 3159 0624 01       		.byte	0x1
 3160 0625 EC       		.byte	0xec
 3161 0626 81000000 		.4byte	0x81
 3162 062a 02       		.uleb128 0x2
 3163 062b 91       		.byte	0x91
 3164 062c 77       		.sleb128 -9
 3165 062d 00       		.byte	0
 3166 062e 16       		.uleb128 0x16
 3167 062f 060A0000 		.4byte	.LASF106
 3168 0633 01       		.byte	0x1
 3169 0634 1E01     		.2byte	0x11e
 3170 0636 81000000 		.4byte	0x81
 3171 063a 00000000 		.4byte	.LFB69
 3172 063e 48000000 		.4byte	.LFE69-.LFB69
 3173 0642 01       		.uleb128 0x1
 3174 0643 9C       		.byte	0x9c
 3175 0644 67060000 		.4byte	0x667
 3176 0648 17       		.uleb128 0x17
 3177 0649 5C050000 		.4byte	.LASF103
 3178 064d 01       		.byte	0x1
 3179 064e 1E01     		.2byte	0x11e
 3180 0650 67060000 		.4byte	0x667
 3181 0654 02       		.uleb128 0x2
 3182 0655 91       		.byte	0x91
 3183 0656 74       		.sleb128 -12
 3184 0657 17       		.uleb128 0x17
 3185 0658 12050000 		.4byte	.LASF102
 3186 065c 01       		.byte	0x1
 3187 065d 1E01     		.2byte	0x11e
 3188 065f 81000000 		.4byte	0x81
 3189 0663 02       		.uleb128 0x2
 3190 0664 91       		.byte	0x91
 3191 0665 73       		.sleb128 -13
 3192 0666 00       		.byte	0
 3193 0667 06       		.uleb128 0x6
 3194 0668 04       		.byte	0x4
 3195 0669 00050000 		.4byte	0x500
 3196 066d 18       		.uleb128 0x18
 3197 066e F7060000 		.4byte	.LASF104
 3198 0672 01       		.byte	0x1
 3199 0673 3301     		.2byte	0x133
 3200 0675 00000000 		.4byte	.LFB70
 3201 0679 1E000000 		.4byte	.LFE70-.LFB70
 3202 067d 01       		.uleb128 0x1
 3203 067e 9C       		.byte	0x9c
 3204 067f 93060000 		.4byte	0x693
 3205 0683 17       		.uleb128 0x17
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 74


 3206 0684 55070000 		.4byte	.LASF105
 3207 0688 01       		.byte	0x1
 3208 0689 3301     		.2byte	0x133
 3209 068b 67060000 		.4byte	0x667
 3210 068f 02       		.uleb128 0x2
 3211 0690 91       		.byte	0x91
 3212 0691 74       		.sleb128 -12
 3213 0692 00       		.byte	0
 3214 0693 19       		.uleb128 0x19
 3215 0694 E1050000 		.4byte	.LASF107
 3216 0698 01       		.byte	0x1
 3217 0699 3C01     		.2byte	0x13c
 3218 069b 00050000 		.4byte	0x500
 3219 069f 00000000 		.4byte	.LFB71
 3220 06a3 46000000 		.4byte	.LFE71-.LFB71
 3221 06a7 01       		.uleb128 0x1
 3222 06a8 9C       		.byte	0x9c
 3223 06a9 EA060000 		.4byte	0x6ea
 3224 06ad 17       		.uleb128 0x17
 3225 06ae 28030000 		.4byte	.LASF86
 3226 06b2 01       		.byte	0x1
 3227 06b3 3C01     		.2byte	0x13c
 3228 06b5 8D000000 		.4byte	0x8d
 3229 06b9 02       		.uleb128 0x2
 3230 06ba 91       		.byte	0x91
 3231 06bb 6A       		.sleb128 -22
 3232 06bc 17       		.uleb128 0x17
 3233 06bd C4090000 		.4byte	.LASF88
 3234 06c1 01       		.byte	0x1
 3235 06c2 3C01     		.2byte	0x13c
 3236 06c4 81000000 		.4byte	0x81
 3237 06c8 02       		.uleb128 0x2
 3238 06c9 91       		.byte	0x91
 3239 06ca 69       		.sleb128 -23
 3240 06cb 17       		.uleb128 0x17
 3241 06cc 51000000 		.4byte	.LASF89
 3242 06d0 01       		.byte	0x1
 3243 06d1 3C01     		.2byte	0x13c
 3244 06d3 81000000 		.4byte	0x81
 3245 06d7 02       		.uleb128 0x2
 3246 06d8 91       		.byte	0x91
 3247 06d9 68       		.sleb128 -24
 3248 06da 1A       		.uleb128 0x1a
 3249 06db C0080000 		.4byte	.LASF108
 3250 06df 01       		.byte	0x1
 3251 06e0 3F01     		.2byte	0x13f
 3252 06e2 00050000 		.4byte	0x500
 3253 06e6 02       		.uleb128 0x2
 3254 06e7 91       		.byte	0x91
 3255 06e8 70       		.sleb128 -16
 3256 06e9 00       		.byte	0
 3257 06ea 1B       		.uleb128 0x1b
 3258 06eb 64070000 		.4byte	.LASF110
 3259 06ef 01       		.byte	0x1
 3260 06f0 5501     		.2byte	0x155
 3261 06f2 00000000 		.4byte	.LFB72
 3262 06f6 50010000 		.4byte	.LFE72-.LFB72
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 75


 3263 06fa 01       		.uleb128 0x1
 3264 06fb 9C       		.byte	0x9c
 3265 06fc 71070000 		.4byte	0x771
 3266 0700 1A       		.uleb128 0x1a
 3267 0701 7E010000 		.4byte	.LASF111
 3268 0705 01       		.byte	0x1
 3269 0706 5D01     		.2byte	0x15d
 3270 0708 D5010000 		.4byte	0x1d5
 3271 070c 03       		.uleb128 0x3
 3272 070d 91       		.byte	0x91
 3273 070e EC7C     		.sleb128 -404
 3274 0710 1A       		.uleb128 0x1a
 3275 0711 2E050000 		.4byte	.LASF112
 3276 0715 01       		.byte	0x1
 3277 0716 6101     		.2byte	0x161
 3278 0718 D5010000 		.4byte	0x1d5
 3279 071c 03       		.uleb128 0x3
 3280 071d 91       		.byte	0x91
 3281 071e E879     		.sleb128 -792
 3282 0720 1A       		.uleb128 0x1a
 3283 0721 2F0A0000 		.4byte	.LASF113
 3284 0725 01       		.byte	0x1
 3285 0726 6501     		.2byte	0x165
 3286 0728 D5010000 		.4byte	0x1d5
 3287 072c 03       		.uleb128 0x3
 3288 072d 91       		.byte	0x91
 3289 072e E476     		.sleb128 -1180
 3290 0730 1A       		.uleb128 0x1a
 3291 0731 5A090000 		.4byte	.LASF114
 3292 0735 01       		.byte	0x1
 3293 0736 6901     		.2byte	0x169
 3294 0738 D5010000 		.4byte	0x1d5
 3295 073c 03       		.uleb128 0x3
 3296 073d 91       		.byte	0x91
 3297 073e E073     		.sleb128 -1568
 3298 0740 1A       		.uleb128 0x1a
 3299 0741 1F010000 		.4byte	.LASF115
 3300 0745 01       		.byte	0x1
 3301 0746 6D01     		.2byte	0x16d
 3302 0748 D5010000 		.4byte	0x1d5
 3303 074c 03       		.uleb128 0x3
 3304 074d 91       		.byte	0x91
 3305 074e DC70     		.sleb128 -1956
 3306 0750 1A       		.uleb128 0x1a
 3307 0751 99040000 		.4byte	.LASF116
 3308 0755 01       		.byte	0x1
 3309 0756 7101     		.2byte	0x171
 3310 0758 D5010000 		.4byte	0x1d5
 3311 075c 03       		.uleb128 0x3
 3312 075d 91       		.byte	0x91
 3313 075e D86D     		.sleb128 -2344
 3314 0760 1A       		.uleb128 0x1a
 3315 0761 00000000 		.4byte	.LASF117
 3316 0765 01       		.byte	0x1
 3317 0766 7501     		.2byte	0x175
 3318 0768 D5010000 		.4byte	0x1d5
 3319 076c 03       		.uleb128 0x3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 76


 3320 076d 91       		.byte	0x91
 3321 076e D46A     		.sleb128 -2732
 3322 0770 00       		.byte	0
 3323 0771 1C       		.uleb128 0x1c
 3324 0772 1C0A0000 		.4byte	.LASF196
 3325 0776 01       		.byte	0x1
 3326 0777 8001     		.2byte	0x180
 3327 0779 68000000 		.4byte	0x68
 3328 077d 00000000 		.4byte	.LFB73
 3329 0781 1E000000 		.4byte	.LFE73-.LFB73
 3330 0785 01       		.uleb128 0x1
 3331 0786 9C       		.byte	0x9c
 3332 0787 1D       		.uleb128 0x1d
 3333 0788 EF020000 		.4byte	.LASF118
 3334 078c 01       		.byte	0x1
 3335 078d 9601     		.2byte	0x196
 3336 078f 81000000 		.4byte	0x81
 3337 0793 00000000 		.4byte	.LFB74
 3338 0797 5C040000 		.4byte	.LFE74-.LFB74
 3339 079b 01       		.uleb128 0x1
 3340 079c 9C       		.byte	0x9c
 3341 079d F1080000 		.4byte	0x8f1
 3342 07a1 1E       		.uleb128 0x1e
 3343 07a2 62000000 		.4byte	.LBB2
 3344 07a6 CC030000 		.4byte	.LBE2-.LBB2
 3345 07aa 1A       		.uleb128 0x1a
 3346 07ab 35060000 		.4byte	.LASF119
 3347 07af 01       		.byte	0x1
 3348 07b0 C601     		.2byte	0x1c6
 3349 07b2 19030000 		.4byte	0x319
 3350 07b6 02       		.uleb128 0x2
 3351 07b7 91       		.byte	0x91
 3352 07b8 48       		.sleb128 -56
 3353 07b9 1A       		.uleb128 0x1a
 3354 07ba 6E060000 		.4byte	.LASF120
 3355 07be 01       		.byte	0x1
 3356 07bf CA01     		.2byte	0x1ca
 3357 07c1 19030000 		.4byte	0x319
 3358 07c5 03       		.uleb128 0x3
 3359 07c6 91       		.byte	0x91
 3360 07c7 B47F     		.sleb128 -76
 3361 07c9 1A       		.uleb128 0x1a
 3362 07ca BA020000 		.4byte	.LASF121
 3363 07ce 01       		.byte	0x1
 3364 07cf CF01     		.2byte	0x1cf
 3365 07d1 19030000 		.4byte	0x319
 3366 07d5 03       		.uleb128 0x3
 3367 07d6 91       		.byte	0x91
 3368 07d7 A07F     		.sleb128 -96
 3369 07d9 1A       		.uleb128 0x1a
 3370 07da FE030000 		.4byte	.LASF122
 3371 07de 01       		.byte	0x1
 3372 07df E201     		.2byte	0x1e2
 3373 07e1 8D000000 		.4byte	0x8d
 3374 07e5 02       		.uleb128 0x2
 3375 07e6 91       		.byte	0x91
 3376 07e7 66       		.sleb128 -26
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 77


 3377 07e8 1A       		.uleb128 0x1a
 3378 07e9 84040000 		.4byte	.LASF123
 3379 07ed 01       		.byte	0x1
 3380 07ee E301     		.2byte	0x1e3
 3381 07f0 19030000 		.4byte	0x319
 3382 07f4 03       		.uleb128 0x3
 3383 07f5 91       		.byte	0x91
 3384 07f6 8C7F     		.sleb128 -116
 3385 07f8 1A       		.uleb128 0x1a
 3386 07f9 4E080000 		.4byte	.LASF124
 3387 07fd 01       		.byte	0x1
 3388 07fe F801     		.2byte	0x1f8
 3389 0800 F1080000 		.4byte	0x8f1
 3390 0804 03       		.uleb128 0x3
 3391 0805 91       		.byte	0x91
 3392 0806 A475     		.sleb128 -1372
 3393 0808 1A       		.uleb128 0x1a
 3394 0809 06090000 		.4byte	.LASF31
 3395 080d 01       		.byte	0x1
 3396 080e F901     		.2byte	0x1f9
 3397 0810 81000000 		.4byte	0x81
 3398 0814 02       		.uleb128 0x2
 3399 0815 91       		.byte	0x91
 3400 0816 65       		.sleb128 -27
 3401 0817 1A       		.uleb128 0x1a
 3402 0818 0F080000 		.4byte	.LASF125
 3403 081c 01       		.byte	0x1
 3404 081d 0002     		.2byte	0x200
 3405 081f F8000000 		.4byte	0xf8
 3406 0823 02       		.uleb128 0x2
 3407 0824 91       		.byte	0x91
 3408 0825 6C       		.sleb128 -20
 3409 0826 1A       		.uleb128 0x1a
 3410 0827 BC010000 		.4byte	.LASF126
 3411 082b 01       		.byte	0x1
 3412 082c 0402     		.2byte	0x204
 3413 082e A5000000 		.4byte	0xa5
 3414 0832 02       		.uleb128 0x2
 3415 0833 91       		.byte	0x91
 3416 0834 64       		.sleb128 -28
 3417 0835 1A       		.uleb128 0x1a
 3418 0836 F8020000 		.4byte	.LASF127
 3419 083a 01       		.byte	0x1
 3420 083b 3402     		.2byte	0x234
 3421 083d 4C000000 		.4byte	0x4c
 3422 0841 02       		.uleb128 0x2
 3423 0842 91       		.byte	0x91
 3424 0843 5C       		.sleb128 -36
 3425 0844 1F       		.uleb128 0x1f
 3426 0845 F0000000 		.4byte	.LBB3
 3427 0849 2C000000 		.4byte	.LBE3-.LBB3
 3428 084d 71080000 		.4byte	0x871
 3429 0851 1A       		.uleb128 0x1a
 3430 0852 90070000 		.4byte	.LASF128
 3431 0856 01       		.byte	0x1
 3432 0857 D701     		.2byte	0x1d7
 3433 0859 8D000000 		.4byte	0x8d
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 78


 3434 085d 02       		.uleb128 0x2
 3435 085e 91       		.byte	0x91
 3436 085f 68       		.sleb128 -24
 3437 0860 1A       		.uleb128 0x1a
 3438 0861 3D020000 		.4byte	.LASF129
 3439 0865 01       		.byte	0x1
 3440 0866 D801     		.2byte	0x1d8
 3441 0868 19030000 		.4byte	0x319
 3442 086c 03       		.uleb128 0x3
 3443 086d 91       		.byte	0x91
 3444 086e F87E     		.sleb128 -136
 3445 0870 00       		.byte	0
 3446 0871 1F       		.uleb128 0x1f
 3447 0872 1E010000 		.4byte	.LBB4
 3448 0876 20000000 		.4byte	.LBE4-.LBB4
 3449 087a 8F080000 		.4byte	0x88f
 3450 087e 1A       		.uleb128 0x1a
 3451 087f 3D020000 		.4byte	.LASF129
 3452 0883 01       		.byte	0x1
 3453 0884 DC01     		.2byte	0x1dc
 3454 0886 19030000 		.4byte	0x319
 3455 088a 03       		.uleb128 0x3
 3456 088b 91       		.byte	0x91
 3457 088c E47E     		.sleb128 -156
 3458 088e 00       		.byte	0
 3459 088f 1F       		.uleb128 0x1f
 3460 0890 5E020000 		.4byte	.LBB5
 3461 0894 4C010000 		.4byte	.LBE5-.LBB5
 3462 0898 C6080000 		.4byte	0x8c6
 3463 089c 1A       		.uleb128 0x1a
 3464 089d ED050000 		.4byte	.LASF130
 3465 08a1 01       		.byte	0x1
 3466 08a2 0902     		.2byte	0x209
 3467 08a4 A5000000 		.4byte	0xa5
 3468 08a8 02       		.uleb128 0x2
 3469 08a9 91       		.byte	0x91
 3470 08aa 6B       		.sleb128 -21
 3471 08ab 1E       		.uleb128 0x1e
 3472 08ac 66020000 		.4byte	.LBB6
 3473 08b0 28010000 		.4byte	.LBE6-.LBB6
 3474 08b4 1A       		.uleb128 0x1a
 3475 08b5 CB030000 		.4byte	.LASF131
 3476 08b9 01       		.byte	0x1
 3477 08ba 0B02     		.2byte	0x20b
 3478 08bc 01090000 		.4byte	0x901
 3479 08c0 03       		.uleb128 0x3
 3480 08c1 91       		.byte	0x91
 3481 08c2 EC76     		.sleb128 -1172
 3482 08c4 00       		.byte	0
 3483 08c5 00       		.byte	0
 3484 08c6 1E       		.uleb128 0x1e
 3485 08c7 C4030000 		.4byte	.LBB7
 3486 08cb 3A000000 		.4byte	.LBE7-.LBB7
 3487 08cf 1A       		.uleb128 0x1a
 3488 08d0 C8020000 		.4byte	.LASF132
 3489 08d4 01       		.byte	0x1
 3490 08d5 2B02     		.2byte	0x22b
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 79


 3491 08d7 68000000 		.4byte	0x68
 3492 08db 02       		.uleb128 0x2
 3493 08dc 91       		.byte	0x91
 3494 08dd 60       		.sleb128 -32
 3495 08de 1A       		.uleb128 0x1a
 3496 08df 02070000 		.4byte	.LASF133
 3497 08e3 01       		.byte	0x1
 3498 08e4 2C02     		.2byte	0x22c
 3499 08e6 12090000 		.4byte	0x912
 3500 08ea 03       		.uleb128 0x3
 3501 08eb 91       		.byte	0x91
 3502 08ec D87E     		.sleb128 -168
 3503 08ee 00       		.byte	0
 3504 08ef 00       		.byte	0
 3505 08f0 00       		.byte	0
 3506 08f1 07       		.uleb128 0x7
 3507 08f2 E3000000 		.4byte	0xe3
 3508 08f6 01090000 		.4byte	0x901
 3509 08fa 08       		.uleb128 0x8
 3510 08fb F1000000 		.4byte	0xf1
 3511 08ff C7       		.byte	0xc7
 3512 0900 00       		.byte	0
 3513 0901 07       		.uleb128 0x7
 3514 0902 E3000000 		.4byte	0xe3
 3515 0906 12090000 		.4byte	0x912
 3516 090a 20       		.uleb128 0x20
 3517 090b F1000000 		.4byte	0xf1
 3518 090f E803     		.2byte	0x3e8
 3519 0911 00       		.byte	0
 3520 0912 07       		.uleb128 0x7
 3521 0913 E3000000 		.4byte	0xe3
 3522 0917 22090000 		.4byte	0x922
 3523 091b 08       		.uleb128 0x8
 3524 091c F1000000 		.4byte	0xf1
 3525 0920 09       		.byte	0x9
 3526 0921 00       		.byte	0
 3527 0922 1D       		.uleb128 0x1d
 3528 0923 75060000 		.4byte	.LASF134
 3529 0927 01       		.byte	0x1
 3530 0928 4902     		.2byte	0x249
 3531 092a 81000000 		.4byte	0x81
 3532 092e 00000000 		.4byte	.LFB75
 3533 0932 44000000 		.4byte	.LFE75-.LFB75
 3534 0936 01       		.uleb128 0x1
 3535 0937 9C       		.byte	0x9c
 3536 0938 56090000 		.4byte	0x956
 3537 093c 1E       		.uleb128 0x1e
 3538 093d 20000000 		.4byte	.LBB8
 3539 0941 1A000000 		.4byte	.LBE8-.LBB8
 3540 0945 1A       		.uleb128 0x1a
 3541 0946 F8020000 		.4byte	.LASF127
 3542 094a 01       		.byte	0x1
 3543 094b 5402     		.2byte	0x254
 3544 094d 4C000000 		.4byte	0x4c
 3545 0951 02       		.uleb128 0x2
 3546 0952 91       		.byte	0x91
 3547 0953 74       		.sleb128 -12
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 80


 3548 0954 00       		.byte	0
 3549 0955 00       		.byte	0
 3550 0956 1D       		.uleb128 0x1d
 3551 0957 2C040000 		.4byte	.LASF135
 3552 095b 01       		.byte	0x1
 3553 095c 6902     		.2byte	0x269
 3554 095e 81000000 		.4byte	0x81
 3555 0962 00000000 		.4byte	.LFB76
 3556 0966 9C020000 		.4byte	.LFE76-.LFB76
 3557 096a 01       		.uleb128 0x1
 3558 096b 9C       		.byte	0x9c
 3559 096c F7090000 		.4byte	0x9f7
 3560 0970 1A       		.uleb128 0x1a
 3561 0971 B4050000 		.4byte	.LASF55
 3562 0975 01       		.byte	0x1
 3563 0976 6C02     		.2byte	0x26c
 3564 0978 4C000000 		.4byte	0x4c
 3565 097c 02       		.uleb128 0x2
 3566 097d 91       		.byte	0x91
 3567 097e 6C       		.sleb128 -20
 3568 097f 1A       		.uleb128 0x1a
 3569 0980 15080000 		.4byte	.LASF136
 3570 0984 01       		.byte	0x1
 3571 0985 6D02     		.2byte	0x26d
 3572 0987 F7090000 		.4byte	0x9f7
 3573 098b 02       		.uleb128 0x2
 3574 098c 91       		.byte	0x91
 3575 098d 4C       		.sleb128 -52
 3576 098e 1A       		.uleb128 0x1a
 3577 098f 58030000 		.4byte	.LASF54
 3578 0993 01       		.byte	0x1
 3579 0994 7102     		.2byte	0x271
 3580 0996 19030000 		.4byte	0x319
 3581 099a 03       		.uleb128 0x3
 3582 099b 91       		.byte	0x91
 3583 099c B87F     		.sleb128 -72
 3584 099e 1A       		.uleb128 0x1a
 3585 099f 740A0000 		.4byte	.LASF137
 3586 09a3 01       		.byte	0x1
 3587 09a4 7502     		.2byte	0x275
 3588 09a6 070A0000 		.4byte	0xa07
 3589 09aa 03       		.uleb128 0x3
 3590 09ab 91       		.byte	0x91
 3591 09ac B07F     		.sleb128 -80
 3592 09ae 1A       		.uleb128 0x1a
 3593 09af D6030000 		.4byte	.LASF138
 3594 09b3 01       		.byte	0x1
 3595 09b4 9602     		.2byte	0x296
 3596 09b6 25020000 		.4byte	0x225
 3597 09ba 03       		.uleb128 0x3
 3598 09bb 91       		.byte	0x91
 3599 09bc 9C7F     		.sleb128 -100
 3600 09be 1F       		.uleb128 0x1f
 3601 09bf 46000000 		.4byte	.LBB9
 3602 09c3 78000000 		.4byte	.LBE9-.LBB9
 3603 09c7 DC090000 		.4byte	0x9dc
 3604 09cb 1A       		.uleb128 0x1a
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 81


 3605 09cc 79080000 		.4byte	.LASF139
 3606 09d0 01       		.byte	0x1
 3607 09d1 7E02     		.2byte	0x27e
 3608 09d3 BC040000 		.4byte	0x4bc
 3609 09d7 03       		.uleb128 0x3
 3610 09d8 91       		.byte	0x91
 3611 09d9 807F     		.sleb128 -128
 3612 09db 00       		.byte	0
 3613 09dc 1E       		.uleb128 0x1e
 3614 09dd 42010000 		.4byte	.LBB10
 3615 09e1 EE000000 		.4byte	.LBE10-.LBB10
 3616 09e5 1A       		.uleb128 0x1a
 3617 09e6 ED080000 		.4byte	.LASF140
 3618 09ea 01       		.byte	0x1
 3619 09eb B202     		.2byte	0x2b2
 3620 09ed 69020000 		.4byte	0x269
 3621 09f1 03       		.uleb128 0x3
 3622 09f2 91       		.byte	0x91
 3623 09f3 F07E     		.sleb128 -144
 3624 09f5 00       		.byte	0
 3625 09f6 00       		.byte	0
 3626 09f7 07       		.uleb128 0x7
 3627 09f8 E3000000 		.4byte	0xe3
 3628 09fc 070A0000 		.4byte	0xa07
 3629 0a00 08       		.uleb128 0x8
 3630 0a01 F1000000 		.4byte	0xf1
 3631 0a05 1F       		.byte	0x1f
 3632 0a06 00       		.byte	0
 3633 0a07 07       		.uleb128 0x7
 3634 0a08 E3000000 		.4byte	0xe3
 3635 0a0c 170A0000 		.4byte	0xa17
 3636 0a10 08       		.uleb128 0x8
 3637 0a11 F1000000 		.4byte	0xf1
 3638 0a15 04       		.byte	0x4
 3639 0a16 00       		.byte	0
 3640 0a17 16       		.uleb128 0x16
 3641 0a18 99030000 		.4byte	.LASF141
 3642 0a1c 01       		.byte	0x1
 3643 0a1d DA02     		.2byte	0x2da
 3644 0a1f 81000000 		.4byte	0x81
 3645 0a23 00000000 		.4byte	.LFB77
 3646 0a27 74000000 		.4byte	.LFE77-.LFB77
 3647 0a2b 01       		.uleb128 0x1
 3648 0a2c 9C       		.byte	0x9c
 3649 0a2d 5D0A0000 		.4byte	0xa5d
 3650 0a31 17       		.uleb128 0x17
 3651 0a32 B4050000 		.4byte	.LASF55
 3652 0a36 01       		.byte	0x1
 3653 0a37 DA02     		.2byte	0x2da
 3654 0a39 4C000000 		.4byte	0x4c
 3655 0a3d 02       		.uleb128 0x2
 3656 0a3e 91       		.byte	0x91
 3657 0a3f 64       		.sleb128 -28
 3658 0a40 21       		.uleb128 0x21
 3659 0a41 7400     		.ascii	"t\000"
 3660 0a43 01       		.byte	0x1
 3661 0a44 E102     		.2byte	0x2e1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 82


 3662 0a46 5D0A0000 		.4byte	0xa5d
 3663 0a4a 02       		.uleb128 0x2
 3664 0a4b 91       		.byte	0x91
 3665 0a4c 74       		.sleb128 -12
 3666 0a4d 1A       		.uleb128 0x1a
 3667 0a4e 8D050000 		.4byte	.LASF142
 3668 0a52 01       		.byte	0x1
 3669 0a53 E602     		.2byte	0x2e6
 3670 0a55 77010000 		.4byte	0x177
 3671 0a59 02       		.uleb128 0x2
 3672 0a5a 91       		.byte	0x91
 3673 0a5b 68       		.sleb128 -24
 3674 0a5c 00       		.byte	0
 3675 0a5d 06       		.uleb128 0x6
 3676 0a5e 04       		.byte	0x4
 3677 0a5f 74020000 		.4byte	0x274
 3678 0a63 16       		.uleb128 0x16
 3679 0a64 37030000 		.4byte	.LASF143
 3680 0a68 01       		.byte	0x1
 3681 0a69 0303     		.2byte	0x303
 3682 0a6b 81000000 		.4byte	0x81
 3683 0a6f 00000000 		.4byte	.LFB78
 3684 0a73 38010000 		.4byte	.LFE78-.LFB78
 3685 0a77 01       		.uleb128 0x1
 3686 0a78 9C       		.byte	0x9c
 3687 0a79 DC0A0000 		.4byte	0xadc
 3688 0a7d 17       		.uleb128 0x17
 3689 0a7e 5E030000 		.4byte	.LASF144
 3690 0a82 01       		.byte	0x1
 3691 0a83 0303     		.2byte	0x303
 3692 0a85 F8000000 		.4byte	0xf8
 3693 0a89 03       		.uleb128 0x3
 3694 0a8a 91       		.byte	0x91
 3695 0a8b 9C7E     		.sleb128 -228
 3696 0a8d 17       		.uleb128 0x17
 3697 0a8e 53030000 		.4byte	.LASF145
 3698 0a92 01       		.byte	0x1
 3699 0a93 0303     		.2byte	0x303
 3700 0a95 68000000 		.4byte	0x68
 3701 0a99 03       		.uleb128 0x3
 3702 0a9a 91       		.byte	0x91
 3703 0a9b 987E     		.sleb128 -232
 3704 0a9d 17       		.uleb128 0x17
 3705 0a9e D1060000 		.4byte	.LASF146
 3706 0aa2 01       		.byte	0x1
 3707 0aa3 0303     		.2byte	0x303
 3708 0aa5 F8000000 		.4byte	0xf8
 3709 0aa9 03       		.uleb128 0x3
 3710 0aaa 91       		.byte	0x91
 3711 0aab 947E     		.sleb128 -236
 3712 0aad 1A       		.uleb128 0x1a
 3713 0aae 1F020000 		.4byte	.LASF147
 3714 0ab2 01       		.byte	0x1
 3715 0ab3 0503     		.2byte	0x305
 3716 0ab5 81000000 		.4byte	0x81
 3717 0ab9 02       		.uleb128 0x2
 3718 0aba 91       		.byte	0x91
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 83


 3719 0abb 77       		.sleb128 -9
 3720 0abc 1A       		.uleb128 0x1a
 3721 0abd 3C000000 		.4byte	.LASF148
 3722 0ac1 01       		.byte	0x1
 3723 0ac2 0C03     		.2byte	0x30c
 3724 0ac4 DC0A0000 		.4byte	0xadc
 3725 0ac8 02       		.uleb128 0x2
 3726 0ac9 91       		.byte	0x91
 3727 0aca 68       		.sleb128 -24
 3728 0acb 1A       		.uleb128 0x1a
 3729 0acc 4E080000 		.4byte	.LASF124
 3730 0ad0 01       		.byte	0x1
 3731 0ad1 1403     		.2byte	0x314
 3732 0ad3 F1080000 		.4byte	0x8f1
 3733 0ad7 03       		.uleb128 0x3
 3734 0ad8 91       		.byte	0x91
 3735 0ad9 A07E     		.sleb128 -224
 3736 0adb 00       		.byte	0
 3737 0adc 07       		.uleb128 0x7
 3738 0add E3000000 		.4byte	0xe3
 3739 0ae1 EC0A0000 		.4byte	0xaec
 3740 0ae5 08       		.uleb128 0x8
 3741 0ae6 F1000000 		.4byte	0xf1
 3742 0aea 0B       		.byte	0xb
 3743 0aeb 00       		.byte	0
 3744 0aec 22       		.uleb128 0x22
 3745 0aed 71010000 		.4byte	.LASF149
 3746 0af1 0D       		.byte	0xd
 3747 0af2 1207     		.2byte	0x712
 3748 0af4 F80A0000 		.4byte	0xaf8
 3749 0af8 0C       		.uleb128 0xc
 3750 0af9 76000000 		.4byte	0x76
 3751 0afd 23       		.uleb128 0x23
 3752 0afe 2C000000 		.4byte	.LASF150
 3753 0b02 09       		.byte	0x9
 3754 0b03 11       		.byte	0x11
 3755 0b04 61040000 		.4byte	0x461
 3756 0b08 05       		.uleb128 0x5
 3757 0b09 03       		.byte	0x3
 3758 0b0a 00000000 		.4byte	buffer_overflow
 3759 0b0e 23       		.uleb128 0x23
 3760 0b0f 1C050000 		.4byte	.LASF151
 3761 0b13 09       		.byte	0x9
 3762 0b14 22       		.byte	0x22
 3763 0b15 8D000000 		.4byte	0x8d
 3764 0b19 05       		.uleb128 0x5
 3765 0b1a 03       		.byte	0x3
 3766 0b1b 00000000 		.4byte	dataPointsInStack
 3767 0b1f 23       		.uleb128 0x23
 3768 0b20 34090000 		.4byte	.LASF152
 3769 0b24 09       		.byte	0x9
 3770 0b25 23       		.byte	0x23
 3771 0b26 8D000000 		.4byte	0x8d
 3772 0b2a 05       		.uleb128 0x5
 3773 0b2b 03       		.byte	0x3
 3774 0b2c 00000000 		.4byte	dataPointsInStackDesired
 3775 0b30 07       		.uleb128 0x7
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 84


 3776 0b31 29030000 		.4byte	0x329
 3777 0b35 400B0000 		.4byte	0xb40
 3778 0b39 08       		.uleb128 0x8
 3779 0b3a F1000000 		.4byte	0xf1
 3780 0b3e 95       		.byte	0x95
 3781 0b3f 00       		.byte	0
 3782 0b40 23       		.uleb128 0x23
 3783 0b41 3D040000 		.4byte	.LASF153
 3784 0b45 09       		.byte	0x9
 3785 0b46 24       		.byte	0x24
 3786 0b47 300B0000 		.4byte	0xb30
 3787 0b4b 05       		.uleb128 0x5
 3788 0b4c 03       		.byte	0x3
 3789 0b4d 00000000 		.4byte	data
 3790 0b51 23       		.uleb128 0x23
 3791 0b52 58010000 		.4byte	.LASF154
 3792 0b56 0A       		.byte	0xa
 3793 0b57 20       		.byte	0x20
 3794 0b58 81000000 		.4byte	0x81
 3795 0b5c 05       		.uleb128 0x5
 3796 0b5d 03       		.byte	0x3
 3797 0b5e 00000000 		.4byte	modem_state
 3798 0b62 23       		.uleb128 0x23
 3799 0b63 B9040000 		.4byte	.LASF155
 3800 0b67 0A       		.byte	0xa
 3801 0b68 71       		.byte	0x71
 3802 0b69 BD000000 		.4byte	0xbd
 3803 0b6d 05       		.uleb128 0x5
 3804 0b6e 03       		.byte	0x3
 3805 0b6f 00000000 		.4byte	modem_start_time_stamp
 3806 0b73 23       		.uleb128 0x23
 3807 0b74 53040000 		.4byte	.LASF91
 3808 0b78 0A       		.byte	0xa
 3809 0b79 72       		.byte	0x72
 3810 0b7a 61030000 		.4byte	0x361
 3811 0b7e 05       		.uleb128 0x5
 3812 0b7f 03       		.byte	0x3
 3813 0b80 00000000 		.4byte	modem_info
 3814 0b84 23       		.uleb128 0x23
 3815 0b85 4C010000 		.4byte	.LASF156
 3816 0b89 0A       		.byte	0xa
 3817 0b8a 73       		.byte	0x73
 3818 0b8b D5030000 		.4byte	0x3d5
 3819 0b8f 05       		.uleb128 0x5
 3820 0b90 03       		.byte	0x3
 3821 0b91 00000000 		.4byte	modem_stats
 3822 0b95 23       		.uleb128 0x23
 3823 0b96 CC050000 		.4byte	.LASF157
 3824 0b9a 0A       		.byte	0xa
 3825 0b9b 74       		.byte	0x74
 3826 0b9c 68040000 		.4byte	0x468
 3827 0ba0 05       		.uleb128 0x5
 3828 0ba1 03       		.byte	0x3
 3829 0ba2 00000000 		.4byte	updatable_parameters
 3830 0ba6 23       		.uleb128 0x23
 3831 0ba7 89030000 		.4byte	.LASF158
 3832 0bab 0E       		.byte	0xe
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 85


 3833 0bac 07       		.byte	0x7
 3834 0bad 81000000 		.4byte	0x81
 3835 0bb1 05       		.uleb128 0x5
 3836 0bb2 03       		.byte	0x3
 3837 0bb3 00000000 		.4byte	App_LED_enabled
 3838 0bb7 23       		.uleb128 0x23
 3839 0bb8 3E0A0000 		.4byte	.LASF159
 3840 0bbc 0E       		.byte	0xe
 3841 0bbd 08       		.byte	0x8
 3842 0bbe 63050000 		.4byte	0x563
 3843 0bc2 05       		.uleb128 0x5
 3844 0bc3 03       		.byte	0x3
 3845 0bc4 00000000 		.4byte	app_led_inbox
 3846 0bc8 23       		.uleb128 0x23
 3847 0bc9 F0070000 		.4byte	.LASF160
 3848 0bcd 0B       		.byte	0xb
 3849 0bce 25       		.byte	0x25
 3850 0bcf 63050000 		.4byte	0x563
 3851 0bd3 05       		.uleb128 0x5
 3852 0bd4 03       		.byte	0x3
 3853 0bd5 00000000 		.4byte	level_sensor_inbox
 3854 0bd9 23       		.uleb128 0x23
 3855 0bda 1F090000 		.4byte	.LASF161
 3856 0bde 0B       		.byte	0xb
 3857 0bdf 27       		.byte	0x27
 3858 0be0 61040000 		.4byte	0x461
 3859 0be4 05       		.uleb128 0x5
 3860 0be5 03       		.byte	0x3
 3861 0be6 00000000 		.4byte	level_sensor_enabled
 3862 0bea 23       		.uleb128 0x23
 3863 0beb 4C0A0000 		.4byte	.LASF162
 3864 0bef 0F       		.byte	0xf
 3865 0bf0 0F       		.byte	0xf
 3866 0bf1 63050000 		.4byte	0x563
 3867 0bf5 05       		.uleb128 0x5
 3868 0bf6 03       		.byte	0x3
 3869 0bf7 00000000 		.4byte	downstream_level_sensor_inbox
 3870 0bfb 23       		.uleb128 0x23
 3871 0bfc D0040000 		.4byte	.LASF163
 3872 0c00 0F       		.byte	0xf
 3873 0c01 11       		.byte	0x11
 3874 0c02 61040000 		.4byte	0x461
 3875 0c06 05       		.uleb128 0x5
 3876 0c07 03       		.byte	0x3
 3877 0c08 00000000 		.4byte	downstream_level_sensor_enabled
 3878 0c0c 23       		.uleb128 0x23
 3879 0c0d 2E020000 		.4byte	.LASF164
 3880 0c11 10       		.byte	0x10
 3881 0c12 2A       		.byte	0x2a
 3882 0c13 C9000000 		.4byte	0xc9
 3883 0c17 05       		.uleb128 0x5
 3884 0c18 03       		.byte	0x3
 3885 0c19 00000000 		.4byte	valve_diameter
 3886 0c1d 23       		.uleb128 0x23
 3887 0c1e 7B000000 		.4byte	.LASF165
 3888 0c22 10       		.byte	0x10
 3889 0c23 2B       		.byte	0x2b
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 86


 3890 0c24 12090000 		.4byte	0x912
 3891 0c28 05       		.uleb128 0x5
 3892 0c29 03       		.byte	0x3
 3893 0c2a 00000000 		.4byte	valve_type
 3894 0c2e 23       		.uleb128 0x23
 3895 0c2f F8080000 		.4byte	.LASF166
 3896 0c33 10       		.byte	0x10
 3897 0c34 30       		.byte	0x30
 3898 0c35 81000000 		.4byte	0x81
 3899 0c39 05       		.uleb128 0x5
 3900 0c3a 03       		.byte	0x3
 3901 0c3b 00000000 		.4byte	valve_enabled
 3902 0c3f 23       		.uleb128 0x23
 3903 0c40 A7090000 		.4byte	.LASF167
 3904 0c44 10       		.byte	0x10
 3905 0c45 31       		.byte	0x31
 3906 0c46 63050000 		.4byte	0x563
 3907 0c4a 05       		.uleb128 0x5
 3908 0c4b 03       		.byte	0x3
 3909 0c4c 00000000 		.4byte	valve_inbox
 3910 0c50 23       		.uleb128 0x23
 3911 0c51 8D010000 		.4byte	.LASF168
 3912 0c55 11       		.byte	0x11
 3913 0c56 69       		.byte	0x69
 3914 0c57 81000000 		.4byte	0x81
 3915 0c5b 05       		.uleb128 0x5
 3916 0c5c 03       		.byte	0x3
 3917 0c5d 00000000 		.4byte	autosampler_enabled
 3918 0c61 23       		.uleb128 0x23
 3919 0c62 3B050000 		.4byte	.LASF169
 3920 0c66 11       		.byte	0x11
 3921 0c67 6B       		.byte	0x6b
 3922 0c68 63050000 		.4byte	0x563
 3923 0c6c 05       		.uleb128 0x5
 3924 0c6d 03       		.byte	0x3
 3925 0c6e 00000000 		.4byte	autosampler_inbox
 3926 0c72 07       		.uleb128 0x7
 3927 0c73 E3000000 		.4byte	0xe3
 3928 0c77 830C0000 		.4byte	0xc83
 3929 0c7b 20       		.uleb128 0x20
 3930 0c7c F1000000 		.4byte	0xf1
 3931 0c80 0F27     		.2byte	0x270f
 3932 0c82 00       		.byte	0
 3933 0c83 23       		.uleb128 0x23
 3934 0c84 A1010000 		.4byte	.LASF170
 3935 0c88 0C       		.byte	0xc
 3936 0c89 1F       		.byte	0x1f
 3937 0c8a 720C0000 		.4byte	0xc72
 3938 0c8e 05       		.uleb128 0x5
 3939 0c8f 03       		.byte	0x3
 3940 0c90 00000000 		.4byte	http_request
 3941 0c94 23       		.uleb128 0x23
 3942 0c95 8C090000 		.4byte	.LASF171
 3943 0c99 0C       		.byte	0xc
 3944 0c9a 20       		.byte	0x20
 3945 0c9b 720C0000 		.4byte	0xc72
 3946 0c9f 05       		.uleb128 0x5
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 87


 3947 0ca0 03       		.byte	0x3
 3948 0ca1 00000000 		.4byte	http_body
 3949 0ca5 23       		.uleb128 0x23
 3950 0ca6 43080000 		.4byte	.LASF172
 3951 0caa 0C       		.byte	0xc
 3952 0cab 21       		.byte	0x21
 3953 0cac F1080000 		.4byte	0x8f1
 3954 0cb0 05       		.uleb128 0x5
 3955 0cb1 03       		.byte	0x3
 3956 0cb2 00000000 		.4byte	http_route
 3957 0cb6 23       		.uleb128 0x23
 3958 0cb7 3D070000 		.4byte	.LASF173
 3959 0cbb 0C       		.byte	0xc
 3960 0cbc 48       		.byte	0x48
 3961 0cbd 37050000 		.4byte	0x537
 3962 0cc1 05       		.uleb128 0x5
 3963 0cc2 03       		.byte	0x3
 3964 0cc3 00000000 		.4byte	system_info
 3965 0cc7 23       		.uleb128 0x23
 3966 0cc8 D7060000 		.4byte	.LASF174
 3967 0ccc 0C       		.byte	0xc
 3968 0ccd 5A       		.byte	0x5a
 3969 0cce 73050000 		.4byte	0x573
 3970 0cd2 05       		.uleb128 0x5
 3971 0cd3 03       		.byte	0x3
 3972 0cd4 00000000 		.4byte	system_settings
 3973 0cd8 23       		.uleb128 0x23
 3974 0cd9 64010000 		.4byte	.LASF175
 3975 0cdd 0C       		.byte	0xc
 3976 0cde 76       		.byte	0x76
 3977 0cdf 00050000 		.4byte	0x500
 3978 0ce3 05       		.uleb128 0x5
 3979 0ce4 03       		.byte	0x3
 3980 0ce5 00000000 		.4byte	alarmMeasure
 3981 0ce9 23       		.uleb128 0x23
 3982 0cea C9010000 		.4byte	.LASF176
 3983 0cee 0C       		.byte	0xc
 3984 0cef 77       		.byte	0x77
 3985 0cf0 81000000 		.4byte	0x81
 3986 0cf4 05       		.uleb128 0x5
 3987 0cf5 03       		.byte	0x3
 3988 0cf6 00000000 		.4byte	timeToMeasure
 3989 0cfa 23       		.uleb128 0x23
 3990 0cfb 6B030000 		.4byte	.LASF177
 3991 0cff 0C       		.byte	0xc
 3992 0d00 78       		.byte	0x78
 3993 0d01 00050000 		.4byte	0x500
 3994 0d05 05       		.uleb128 0x5
 3995 0d06 03       		.byte	0x3
 3996 0d07 00000000 		.4byte	alarmSync
 3997 0d0b 23       		.uleb128 0x23
 3998 0d0c EF010000 		.4byte	.LASF178
 3999 0d10 0C       		.byte	0xc
 4000 0d11 79       		.byte	0x79
 4001 0d12 81000000 		.4byte	0x81
 4002 0d16 05       		.uleb128 0x5
 4003 0d17 03       		.byte	0x3
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 88


 4004 0d18 00000000 		.4byte	timeToSync
 4005 0d1c 23       		.uleb128 0x23
 4006 0d1d 9D050000 		.4byte	.LASF179
 4007 0d21 0C       		.byte	0xc
 4008 0d22 7A       		.byte	0x7a
 4009 0d23 81000000 		.4byte	0x81
 4010 0d27 05       		.uleb128 0x5
 4011 0d28 03       		.byte	0x3
 4012 0d29 00000000 		.4byte	timeToSycnRemoteParams
 4013 0d2d 24       		.uleb128 0x24
 4014 0d2e 68657900 		.ascii	"hey\000"
 4015 0d32 0C       		.byte	0xc
 4016 0d33 7B       		.byte	0x7b
 4017 0d34 81000000 		.4byte	0x81
 4018 0d38 05       		.uleb128 0x5
 4019 0d39 03       		.byte	0x3
 4020 0d3a 00000000 		.4byte	hey
 4021 0d3e 23       		.uleb128 0x23
 4022 0d3f AD040000 		.4byte	.LASF180
 4023 0d43 0C       		.byte	0xc
 4024 0d44 7F       		.byte	0x7f
 4025 0d45 00050000 		.4byte	0x500
 4026 0d49 05       		.uleb128 0x5
 4027 0d4a 03       		.byte	0x3
 4028 0d4b 00000000 		.4byte	alarmAppLED
 4029 0d4f 23       		.uleb128 0x23
 4030 0d50 D2020000 		.4byte	.LASF181
 4031 0d54 0C       		.byte	0xc
 4032 0d55 80       		.byte	0x80
 4033 0d56 81000000 		.4byte	0x81
 4034 0d5a 05       		.uleb128 0x5
 4035 0d5b 03       		.byte	0x3
 4036 0d5c 00000000 		.4byte	timeToAppLED
 4037 0d60 23       		.uleb128 0x23
 4038 0d61 C5070000 		.4byte	.LASF182
 4039 0d65 0C       		.byte	0xc
 4040 0d66 82       		.byte	0x82
 4041 0d67 00050000 		.4byte	0x500
 4042 0d6b 05       		.uleb128 0x5
 4043 0d6c 03       		.byte	0x3
 4044 0d6d 00000000 		.4byte	alarmLevelSensor
 4045 0d71 23       		.uleb128 0x23
 4046 0d72 0D090000 		.4byte	.LASF183
 4047 0d76 0C       		.byte	0xc
 4048 0d77 83       		.byte	0x83
 4049 0d78 81000000 		.4byte	0x81
 4050 0d7c 05       		.uleb128 0x5
 4051 0d7d 03       		.byte	0x3
 4052 0d7e 00000000 		.4byte	timeToLevelSensor
 4053 0d82 23       		.uleb128 0x23
 4054 0d83 5C020000 		.4byte	.LASF184
 4055 0d87 0C       		.byte	0xc
 4056 0d88 85       		.byte	0x85
 4057 0d89 00050000 		.4byte	0x500
 4058 0d8d 05       		.uleb128 0x5
 4059 0d8e 03       		.byte	0x3
 4060 0d8f 00000000 		.4byte	alarmDownstreamLevelSensor
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 89


 4061 0d93 23       		.uleb128 0x23
 4062 0d94 70090000 		.4byte	.LASF185
 4063 0d98 0C       		.byte	0xc
 4064 0d99 86       		.byte	0x86
 4065 0d9a 81000000 		.4byte	0x81
 4066 0d9e 05       		.uleb128 0x5
 4067 0d9f 03       		.byte	0x3
 4068 0da0 00000000 		.4byte	timeToDownstreamLevelSensor
 4069 0da4 23       		.uleb128 0x23
 4070 0da5 33080000 		.4byte	.LASF186
 4071 0da9 0C       		.byte	0xc
 4072 0daa 88       		.byte	0x88
 4073 0dab 00050000 		.4byte	0x500
 4074 0daf 05       		.uleb128 0x5
 4075 0db0 03       		.byte	0x3
 4076 0db1 00000000 		.4byte	alarmValve
 4077 0db5 23       		.uleb128 0x23
 4078 0db6 4D060000 		.4byte	.LASF187
 4079 0dba 0C       		.byte	0xc
 4080 0dbb 89       		.byte	0x89
 4081 0dbc 81000000 		.4byte	0x81
 4082 0dc0 05       		.uleb128 0x5
 4083 0dc1 03       		.byte	0x3
 4084 0dc2 00000000 		.4byte	timeToValve
 4085 0dc6 23       		.uleb128 0x23
 4086 0dc7 96090000 		.4byte	.LASF188
 4087 0dcb 0C       		.byte	0xc
 4088 0dcc 8B       		.byte	0x8b
 4089 0dcd 00050000 		.4byte	0x500
 4090 0dd1 05       		.uleb128 0x5
 4091 0dd2 03       		.byte	0x3
 4092 0dd3 00000000 		.4byte	alarmAutosampler
 4093 0dd7 23       		.uleb128 0x23
 4094 0dd8 69000000 		.4byte	.LASF189
 4095 0ddc 0C       		.byte	0xc
 4096 0ddd 8C       		.byte	0x8c
 4097 0dde 81000000 		.4byte	0x81
 4098 0de2 05       		.uleb128 0x5
 4099 0de3 03       		.byte	0x3
 4100 0de4 00000000 		.4byte	timeToAutosampler
 4101 0de8 07       		.uleb128 0x7
 4102 0de9 E3000000 		.4byte	0xe3
 4103 0ded F80D0000 		.4byte	0xdf8
 4104 0df1 08       		.uleb128 0x8
 4105 0df2 F1000000 		.4byte	0xf1
 4106 0df6 1D       		.byte	0x1d
 4107 0df7 00       		.byte	0
 4108 0df8 23       		.uleb128 0x23
 4109 0df9 8B060000 		.4byte	.LASF190
 4110 0dfd 01       		.byte	0x1
 4111 0dfe 1D       		.byte	0x1d
 4112 0dff E80D0000 		.4byte	0xde8
 4113 0e03 05       		.uleb128 0x5
 4114 0e04 03       		.byte	0x3
 4115 0e05 00000000 		.4byte	Data_fileName
 4116 0e09 23       		.uleb128 0x23
 4117 0e0a F2030000 		.4byte	.LASF98
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 90


 4118 0e0e 01       		.byte	0x1
 4119 0e0f 1E       		.byte	0x1e
 4120 0e10 81000000 		.4byte	0x81
 4121 0e14 05       		.uleb128 0x5
 4122 0e15 03       		.byte	0x3
 4123 0e16 00000000 		.4byte	try_counter
 4124 0e1a 00       		.byte	0
 4125              		.section	.debug_abbrev,"",%progbits
 4126              	.Ldebug_abbrev0:
 4127 0000 01       		.uleb128 0x1
 4128 0001 11       		.uleb128 0x11
 4129 0002 01       		.byte	0x1
 4130 0003 25       		.uleb128 0x25
 4131 0004 0E       		.uleb128 0xe
 4132 0005 13       		.uleb128 0x13
 4133 0006 0B       		.uleb128 0xb
 4134 0007 03       		.uleb128 0x3
 4135 0008 0E       		.uleb128 0xe
 4136 0009 1B       		.uleb128 0x1b
 4137 000a 0E       		.uleb128 0xe
 4138 000b 55       		.uleb128 0x55
 4139 000c 17       		.uleb128 0x17
 4140 000d 11       		.uleb128 0x11
 4141 000e 01       		.uleb128 0x1
 4142 000f 10       		.uleb128 0x10
 4143 0010 17       		.uleb128 0x17
 4144 0011 00       		.byte	0
 4145 0012 00       		.byte	0
 4146 0013 02       		.uleb128 0x2
 4147 0014 24       		.uleb128 0x24
 4148 0015 00       		.byte	0
 4149 0016 0B       		.uleb128 0xb
 4150 0017 0B       		.uleb128 0xb
 4151 0018 3E       		.uleb128 0x3e
 4152 0019 0B       		.uleb128 0xb
 4153 001a 03       		.uleb128 0x3
 4154 001b 0E       		.uleb128 0xe
 4155 001c 00       		.byte	0
 4156 001d 00       		.byte	0
 4157 001e 03       		.uleb128 0x3
 4158 001f 16       		.uleb128 0x16
 4159 0020 00       		.byte	0
 4160 0021 03       		.uleb128 0x3
 4161 0022 0E       		.uleb128 0xe
 4162 0023 3A       		.uleb128 0x3a
 4163 0024 0B       		.uleb128 0xb
 4164 0025 3B       		.uleb128 0x3b
 4165 0026 0B       		.uleb128 0xb
 4166 0027 49       		.uleb128 0x49
 4167 0028 13       		.uleb128 0x13
 4168 0029 00       		.byte	0
 4169 002a 00       		.byte	0
 4170 002b 04       		.uleb128 0x4
 4171 002c 24       		.uleb128 0x24
 4172 002d 00       		.byte	0
 4173 002e 0B       		.uleb128 0xb
 4174 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 91


 4175 0030 3E       		.uleb128 0x3e
 4176 0031 0B       		.uleb128 0xb
 4177 0032 03       		.uleb128 0x3
 4178 0033 08       		.uleb128 0x8
 4179 0034 00       		.byte	0
 4180 0035 00       		.byte	0
 4181 0036 05       		.uleb128 0x5
 4182 0037 16       		.uleb128 0x16
 4183 0038 00       		.byte	0
 4184 0039 03       		.uleb128 0x3
 4185 003a 0E       		.uleb128 0xe
 4186 003b 3A       		.uleb128 0x3a
 4187 003c 0B       		.uleb128 0xb
 4188 003d 3B       		.uleb128 0x3b
 4189 003e 05       		.uleb128 0x5
 4190 003f 49       		.uleb128 0x49
 4191 0040 13       		.uleb128 0x13
 4192 0041 00       		.byte	0
 4193 0042 00       		.byte	0
 4194 0043 06       		.uleb128 0x6
 4195 0044 0F       		.uleb128 0xf
 4196 0045 00       		.byte	0
 4197 0046 0B       		.uleb128 0xb
 4198 0047 0B       		.uleb128 0xb
 4199 0048 49       		.uleb128 0x49
 4200 0049 13       		.uleb128 0x13
 4201 004a 00       		.byte	0
 4202 004b 00       		.byte	0
 4203 004c 07       		.uleb128 0x7
 4204 004d 01       		.uleb128 0x1
 4205 004e 01       		.byte	0x1
 4206 004f 49       		.uleb128 0x49
 4207 0050 13       		.uleb128 0x13
 4208 0051 01       		.uleb128 0x1
 4209 0052 13       		.uleb128 0x13
 4210 0053 00       		.byte	0
 4211 0054 00       		.byte	0
 4212 0055 08       		.uleb128 0x8
 4213 0056 21       		.uleb128 0x21
 4214 0057 00       		.byte	0
 4215 0058 49       		.uleb128 0x49
 4216 0059 13       		.uleb128 0x13
 4217 005a 2F       		.uleb128 0x2f
 4218 005b 0B       		.uleb128 0xb
 4219 005c 00       		.byte	0
 4220 005d 00       		.byte	0
 4221 005e 09       		.uleb128 0x9
 4222 005f 13       		.uleb128 0x13
 4223 0060 01       		.byte	0x1
 4224 0061 0B       		.uleb128 0xb
 4225 0062 0B       		.uleb128 0xb
 4226 0063 3A       		.uleb128 0x3a
 4227 0064 0B       		.uleb128 0xb
 4228 0065 3B       		.uleb128 0x3b
 4229 0066 0B       		.uleb128 0xb
 4230 0067 01       		.uleb128 0x1
 4231 0068 13       		.uleb128 0x13
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 92


 4232 0069 00       		.byte	0
 4233 006a 00       		.byte	0
 4234 006b 0A       		.uleb128 0xa
 4235 006c 0D       		.uleb128 0xd
 4236 006d 00       		.byte	0
 4237 006e 03       		.uleb128 0x3
 4238 006f 08       		.uleb128 0x8
 4239 0070 3A       		.uleb128 0x3a
 4240 0071 0B       		.uleb128 0xb
 4241 0072 3B       		.uleb128 0x3b
 4242 0073 0B       		.uleb128 0xb
 4243 0074 49       		.uleb128 0x49
 4244 0075 13       		.uleb128 0x13
 4245 0076 38       		.uleb128 0x38
 4246 0077 0B       		.uleb128 0xb
 4247 0078 00       		.byte	0
 4248 0079 00       		.byte	0
 4249 007a 0B       		.uleb128 0xb
 4250 007b 0D       		.uleb128 0xd
 4251 007c 00       		.byte	0
 4252 007d 03       		.uleb128 0x3
 4253 007e 0E       		.uleb128 0xe
 4254 007f 3A       		.uleb128 0x3a
 4255 0080 0B       		.uleb128 0xb
 4256 0081 3B       		.uleb128 0x3b
 4257 0082 0B       		.uleb128 0xb
 4258 0083 49       		.uleb128 0x49
 4259 0084 13       		.uleb128 0x13
 4260 0085 38       		.uleb128 0x38
 4261 0086 0B       		.uleb128 0xb
 4262 0087 00       		.byte	0
 4263 0088 00       		.byte	0
 4264 0089 0C       		.uleb128 0xc
 4265 008a 35       		.uleb128 0x35
 4266 008b 00       		.byte	0
 4267 008c 49       		.uleb128 0x49
 4268 008d 13       		.uleb128 0x13
 4269 008e 00       		.byte	0
 4270 008f 00       		.byte	0
 4271 0090 0D       		.uleb128 0xd
 4272 0091 13       		.uleb128 0x13
 4273 0092 01       		.byte	0x1
 4274 0093 0B       		.uleb128 0xb
 4275 0094 05       		.uleb128 0x5
 4276 0095 3A       		.uleb128 0x3a
 4277 0096 0B       		.uleb128 0xb
 4278 0097 3B       		.uleb128 0x3b
 4279 0098 0B       		.uleb128 0xb
 4280 0099 01       		.uleb128 0x1
 4281 009a 13       		.uleb128 0x13
 4282 009b 00       		.byte	0
 4283 009c 00       		.byte	0
 4284 009d 0E       		.uleb128 0xe
 4285 009e 13       		.uleb128 0x13
 4286 009f 01       		.byte	0x1
 4287 00a0 03       		.uleb128 0x3
 4288 00a1 08       		.uleb128 0x8
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 93


 4289 00a2 0B       		.uleb128 0xb
 4290 00a3 0B       		.uleb128 0xb
 4291 00a4 3A       		.uleb128 0x3a
 4292 00a5 0B       		.uleb128 0xb
 4293 00a6 3B       		.uleb128 0x3b
 4294 00a7 0B       		.uleb128 0xb
 4295 00a8 01       		.uleb128 0x1
 4296 00a9 13       		.uleb128 0x13
 4297 00aa 00       		.byte	0
 4298 00ab 00       		.byte	0
 4299 00ac 0F       		.uleb128 0xf
 4300 00ad 2E       		.uleb128 0x2e
 4301 00ae 00       		.byte	0
 4302 00af 3F       		.uleb128 0x3f
 4303 00b0 19       		.uleb128 0x19
 4304 00b1 03       		.uleb128 0x3
 4305 00b2 0E       		.uleb128 0xe
 4306 00b3 3A       		.uleb128 0x3a
 4307 00b4 0B       		.uleb128 0xb
 4308 00b5 3B       		.uleb128 0x3b
 4309 00b6 0B       		.uleb128 0xb
 4310 00b7 27       		.uleb128 0x27
 4311 00b8 19       		.uleb128 0x19
 4312 00b9 11       		.uleb128 0x11
 4313 00ba 01       		.uleb128 0x1
 4314 00bb 12       		.uleb128 0x12
 4315 00bc 06       		.uleb128 0x6
 4316 00bd 40       		.uleb128 0x40
 4317 00be 18       		.uleb128 0x18
 4318 00bf 9642     		.uleb128 0x2116
 4319 00c1 19       		.uleb128 0x19
 4320 00c2 00       		.byte	0
 4321 00c3 00       		.byte	0
 4322 00c4 10       		.uleb128 0x10
 4323 00c5 2E       		.uleb128 0x2e
 4324 00c6 01       		.byte	0x1
 4325 00c7 3F       		.uleb128 0x3f
 4326 00c8 19       		.uleb128 0x19
 4327 00c9 03       		.uleb128 0x3
 4328 00ca 0E       		.uleb128 0xe
 4329 00cb 3A       		.uleb128 0x3a
 4330 00cc 0B       		.uleb128 0xb
 4331 00cd 3B       		.uleb128 0x3b
 4332 00ce 0B       		.uleb128 0xb
 4333 00cf 11       		.uleb128 0x11
 4334 00d0 01       		.uleb128 0x1
 4335 00d1 12       		.uleb128 0x12
 4336 00d2 06       		.uleb128 0x6
 4337 00d3 40       		.uleb128 0x40
 4338 00d4 18       		.uleb128 0x18
 4339 00d5 9642     		.uleb128 0x2116
 4340 00d7 19       		.uleb128 0x19
 4341 00d8 01       		.uleb128 0x1
 4342 00d9 13       		.uleb128 0x13
 4343 00da 00       		.byte	0
 4344 00db 00       		.byte	0
 4345 00dc 11       		.uleb128 0x11
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 94


 4346 00dd 34       		.uleb128 0x34
 4347 00de 00       		.byte	0
 4348 00df 03       		.uleb128 0x3
 4349 00e0 0E       		.uleb128 0xe
 4350 00e1 3A       		.uleb128 0x3a
 4351 00e2 0B       		.uleb128 0xb
 4352 00e3 3B       		.uleb128 0x3b
 4353 00e4 0B       		.uleb128 0xb
 4354 00e5 49       		.uleb128 0x49
 4355 00e6 13       		.uleb128 0x13
 4356 00e7 02       		.uleb128 0x2
 4357 00e8 18       		.uleb128 0x18
 4358 00e9 00       		.byte	0
 4359 00ea 00       		.byte	0
 4360 00eb 12       		.uleb128 0x12
 4361 00ec 2E       		.uleb128 0x2e
 4362 00ed 01       		.byte	0x1
 4363 00ee 3F       		.uleb128 0x3f
 4364 00ef 19       		.uleb128 0x19
 4365 00f0 03       		.uleb128 0x3
 4366 00f1 0E       		.uleb128 0xe
 4367 00f2 3A       		.uleb128 0x3a
 4368 00f3 0B       		.uleb128 0xb
 4369 00f4 3B       		.uleb128 0x3b
 4370 00f5 0B       		.uleb128 0xb
 4371 00f6 49       		.uleb128 0x49
 4372 00f7 13       		.uleb128 0x13
 4373 00f8 11       		.uleb128 0x11
 4374 00f9 01       		.uleb128 0x1
 4375 00fa 12       		.uleb128 0x12
 4376 00fb 06       		.uleb128 0x6
 4377 00fc 40       		.uleb128 0x40
 4378 00fd 18       		.uleb128 0x18
 4379 00fe 9642     		.uleb128 0x2116
 4380 0100 19       		.uleb128 0x19
 4381 0101 01       		.uleb128 0x1
 4382 0102 13       		.uleb128 0x13
 4383 0103 00       		.byte	0
 4384 0104 00       		.byte	0
 4385 0105 13       		.uleb128 0x13
 4386 0106 2E       		.uleb128 0x2e
 4387 0107 00       		.byte	0
 4388 0108 3F       		.uleb128 0x3f
 4389 0109 19       		.uleb128 0x19
 4390 010a 03       		.uleb128 0x3
 4391 010b 0E       		.uleb128 0xe
 4392 010c 3A       		.uleb128 0x3a
 4393 010d 0B       		.uleb128 0xb
 4394 010e 3B       		.uleb128 0x3b
 4395 010f 0B       		.uleb128 0xb
 4396 0110 11       		.uleb128 0x11
 4397 0111 01       		.uleb128 0x1
 4398 0112 12       		.uleb128 0x12
 4399 0113 06       		.uleb128 0x6
 4400 0114 40       		.uleb128 0x40
 4401 0115 18       		.uleb128 0x18
 4402 0116 9642     		.uleb128 0x2116
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 95


 4403 0118 19       		.uleb128 0x19
 4404 0119 00       		.byte	0
 4405 011a 00       		.byte	0
 4406 011b 14       		.uleb128 0x14
 4407 011c 2E       		.uleb128 0x2e
 4408 011d 01       		.byte	0x1
 4409 011e 3F       		.uleb128 0x3f
 4410 011f 19       		.uleb128 0x19
 4411 0120 03       		.uleb128 0x3
 4412 0121 0E       		.uleb128 0xe
 4413 0122 3A       		.uleb128 0x3a
 4414 0123 0B       		.uleb128 0xb
 4415 0124 3B       		.uleb128 0x3b
 4416 0125 0B       		.uleb128 0xb
 4417 0126 27       		.uleb128 0x27
 4418 0127 19       		.uleb128 0x19
 4419 0128 11       		.uleb128 0x11
 4420 0129 01       		.uleb128 0x1
 4421 012a 12       		.uleb128 0x12
 4422 012b 06       		.uleb128 0x6
 4423 012c 40       		.uleb128 0x40
 4424 012d 18       		.uleb128 0x18
 4425 012e 9642     		.uleb128 0x2116
 4426 0130 19       		.uleb128 0x19
 4427 0131 01       		.uleb128 0x1
 4428 0132 13       		.uleb128 0x13
 4429 0133 00       		.byte	0
 4430 0134 00       		.byte	0
 4431 0135 15       		.uleb128 0x15
 4432 0136 05       		.uleb128 0x5
 4433 0137 00       		.byte	0
 4434 0138 03       		.uleb128 0x3
 4435 0139 0E       		.uleb128 0xe
 4436 013a 3A       		.uleb128 0x3a
 4437 013b 0B       		.uleb128 0xb
 4438 013c 3B       		.uleb128 0x3b
 4439 013d 0B       		.uleb128 0xb
 4440 013e 49       		.uleb128 0x49
 4441 013f 13       		.uleb128 0x13
 4442 0140 02       		.uleb128 0x2
 4443 0141 18       		.uleb128 0x18
 4444 0142 00       		.byte	0
 4445 0143 00       		.byte	0
 4446 0144 16       		.uleb128 0x16
 4447 0145 2E       		.uleb128 0x2e
 4448 0146 01       		.byte	0x1
 4449 0147 3F       		.uleb128 0x3f
 4450 0148 19       		.uleb128 0x19
 4451 0149 03       		.uleb128 0x3
 4452 014a 0E       		.uleb128 0xe
 4453 014b 3A       		.uleb128 0x3a
 4454 014c 0B       		.uleb128 0xb
 4455 014d 3B       		.uleb128 0x3b
 4456 014e 05       		.uleb128 0x5
 4457 014f 27       		.uleb128 0x27
 4458 0150 19       		.uleb128 0x19
 4459 0151 49       		.uleb128 0x49
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 96


 4460 0152 13       		.uleb128 0x13
 4461 0153 11       		.uleb128 0x11
 4462 0154 01       		.uleb128 0x1
 4463 0155 12       		.uleb128 0x12
 4464 0156 06       		.uleb128 0x6
 4465 0157 40       		.uleb128 0x40
 4466 0158 18       		.uleb128 0x18
 4467 0159 9642     		.uleb128 0x2116
 4468 015b 19       		.uleb128 0x19
 4469 015c 01       		.uleb128 0x1
 4470 015d 13       		.uleb128 0x13
 4471 015e 00       		.byte	0
 4472 015f 00       		.byte	0
 4473 0160 17       		.uleb128 0x17
 4474 0161 05       		.uleb128 0x5
 4475 0162 00       		.byte	0
 4476 0163 03       		.uleb128 0x3
 4477 0164 0E       		.uleb128 0xe
 4478 0165 3A       		.uleb128 0x3a
 4479 0166 0B       		.uleb128 0xb
 4480 0167 3B       		.uleb128 0x3b
 4481 0168 05       		.uleb128 0x5
 4482 0169 49       		.uleb128 0x49
 4483 016a 13       		.uleb128 0x13
 4484 016b 02       		.uleb128 0x2
 4485 016c 18       		.uleb128 0x18
 4486 016d 00       		.byte	0
 4487 016e 00       		.byte	0
 4488 016f 18       		.uleb128 0x18
 4489 0170 2E       		.uleb128 0x2e
 4490 0171 01       		.byte	0x1
 4491 0172 3F       		.uleb128 0x3f
 4492 0173 19       		.uleb128 0x19
 4493 0174 03       		.uleb128 0x3
 4494 0175 0E       		.uleb128 0xe
 4495 0176 3A       		.uleb128 0x3a
 4496 0177 0B       		.uleb128 0xb
 4497 0178 3B       		.uleb128 0x3b
 4498 0179 05       		.uleb128 0x5
 4499 017a 27       		.uleb128 0x27
 4500 017b 19       		.uleb128 0x19
 4501 017c 11       		.uleb128 0x11
 4502 017d 01       		.uleb128 0x1
 4503 017e 12       		.uleb128 0x12
 4504 017f 06       		.uleb128 0x6
 4505 0180 40       		.uleb128 0x40
 4506 0181 18       		.uleb128 0x18
 4507 0182 9742     		.uleb128 0x2117
 4508 0184 19       		.uleb128 0x19
 4509 0185 01       		.uleb128 0x1
 4510 0186 13       		.uleb128 0x13
 4511 0187 00       		.byte	0
 4512 0188 00       		.byte	0
 4513 0189 19       		.uleb128 0x19
 4514 018a 2E       		.uleb128 0x2e
 4515 018b 01       		.byte	0x1
 4516 018c 3F       		.uleb128 0x3f
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 97


 4517 018d 19       		.uleb128 0x19
 4518 018e 03       		.uleb128 0x3
 4519 018f 0E       		.uleb128 0xe
 4520 0190 3A       		.uleb128 0x3a
 4521 0191 0B       		.uleb128 0xb
 4522 0192 3B       		.uleb128 0x3b
 4523 0193 05       		.uleb128 0x5
 4524 0194 27       		.uleb128 0x27
 4525 0195 19       		.uleb128 0x19
 4526 0196 49       		.uleb128 0x49
 4527 0197 13       		.uleb128 0x13
 4528 0198 11       		.uleb128 0x11
 4529 0199 01       		.uleb128 0x1
 4530 019a 12       		.uleb128 0x12
 4531 019b 06       		.uleb128 0x6
 4532 019c 40       		.uleb128 0x40
 4533 019d 18       		.uleb128 0x18
 4534 019e 9742     		.uleb128 0x2117
 4535 01a0 19       		.uleb128 0x19
 4536 01a1 01       		.uleb128 0x1
 4537 01a2 13       		.uleb128 0x13
 4538 01a3 00       		.byte	0
 4539 01a4 00       		.byte	0
 4540 01a5 1A       		.uleb128 0x1a
 4541 01a6 34       		.uleb128 0x34
 4542 01a7 00       		.byte	0
 4543 01a8 03       		.uleb128 0x3
 4544 01a9 0E       		.uleb128 0xe
 4545 01aa 3A       		.uleb128 0x3a
 4546 01ab 0B       		.uleb128 0xb
 4547 01ac 3B       		.uleb128 0x3b
 4548 01ad 05       		.uleb128 0x5
 4549 01ae 49       		.uleb128 0x49
 4550 01af 13       		.uleb128 0x13
 4551 01b0 02       		.uleb128 0x2
 4552 01b1 18       		.uleb128 0x18
 4553 01b2 00       		.byte	0
 4554 01b3 00       		.byte	0
 4555 01b4 1B       		.uleb128 0x1b
 4556 01b5 2E       		.uleb128 0x2e
 4557 01b6 01       		.byte	0x1
 4558 01b7 3F       		.uleb128 0x3f
 4559 01b8 19       		.uleb128 0x19
 4560 01b9 03       		.uleb128 0x3
 4561 01ba 0E       		.uleb128 0xe
 4562 01bb 3A       		.uleb128 0x3a
 4563 01bc 0B       		.uleb128 0xb
 4564 01bd 3B       		.uleb128 0x3b
 4565 01be 05       		.uleb128 0x5
 4566 01bf 11       		.uleb128 0x11
 4567 01c0 01       		.uleb128 0x1
 4568 01c1 12       		.uleb128 0x12
 4569 01c2 06       		.uleb128 0x6
 4570 01c3 40       		.uleb128 0x40
 4571 01c4 18       		.uleb128 0x18
 4572 01c5 9642     		.uleb128 0x2116
 4573 01c7 19       		.uleb128 0x19
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 98


 4574 01c8 01       		.uleb128 0x1
 4575 01c9 13       		.uleb128 0x13
 4576 01ca 00       		.byte	0
 4577 01cb 00       		.byte	0
 4578 01cc 1C       		.uleb128 0x1c
 4579 01cd 2E       		.uleb128 0x2e
 4580 01ce 00       		.byte	0
 4581 01cf 3F       		.uleb128 0x3f
 4582 01d0 19       		.uleb128 0x19
 4583 01d1 03       		.uleb128 0x3
 4584 01d2 0E       		.uleb128 0xe
 4585 01d3 3A       		.uleb128 0x3a
 4586 01d4 0B       		.uleb128 0xb
 4587 01d5 3B       		.uleb128 0x3b
 4588 01d6 05       		.uleb128 0x5
 4589 01d7 27       		.uleb128 0x27
 4590 01d8 19       		.uleb128 0x19
 4591 01d9 49       		.uleb128 0x49
 4592 01da 13       		.uleb128 0x13
 4593 01db 11       		.uleb128 0x11
 4594 01dc 01       		.uleb128 0x1
 4595 01dd 12       		.uleb128 0x12
 4596 01de 06       		.uleb128 0x6
 4597 01df 40       		.uleb128 0x40
 4598 01e0 18       		.uleb128 0x18
 4599 01e1 9642     		.uleb128 0x2116
 4600 01e3 19       		.uleb128 0x19
 4601 01e4 00       		.byte	0
 4602 01e5 00       		.byte	0
 4603 01e6 1D       		.uleb128 0x1d
 4604 01e7 2E       		.uleb128 0x2e
 4605 01e8 01       		.byte	0x1
 4606 01e9 3F       		.uleb128 0x3f
 4607 01ea 19       		.uleb128 0x19
 4608 01eb 03       		.uleb128 0x3
 4609 01ec 0E       		.uleb128 0xe
 4610 01ed 3A       		.uleb128 0x3a
 4611 01ee 0B       		.uleb128 0xb
 4612 01ef 3B       		.uleb128 0x3b
 4613 01f0 05       		.uleb128 0x5
 4614 01f1 49       		.uleb128 0x49
 4615 01f2 13       		.uleb128 0x13
 4616 01f3 11       		.uleb128 0x11
 4617 01f4 01       		.uleb128 0x1
 4618 01f5 12       		.uleb128 0x12
 4619 01f6 06       		.uleb128 0x6
 4620 01f7 40       		.uleb128 0x40
 4621 01f8 18       		.uleb128 0x18
 4622 01f9 9642     		.uleb128 0x2116
 4623 01fb 19       		.uleb128 0x19
 4624 01fc 01       		.uleb128 0x1
 4625 01fd 13       		.uleb128 0x13
 4626 01fe 00       		.byte	0
 4627 01ff 00       		.byte	0
 4628 0200 1E       		.uleb128 0x1e
 4629 0201 0B       		.uleb128 0xb
 4630 0202 01       		.byte	0x1
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 99


 4631 0203 11       		.uleb128 0x11
 4632 0204 01       		.uleb128 0x1
 4633 0205 12       		.uleb128 0x12
 4634 0206 06       		.uleb128 0x6
 4635 0207 00       		.byte	0
 4636 0208 00       		.byte	0
 4637 0209 1F       		.uleb128 0x1f
 4638 020a 0B       		.uleb128 0xb
 4639 020b 01       		.byte	0x1
 4640 020c 11       		.uleb128 0x11
 4641 020d 01       		.uleb128 0x1
 4642 020e 12       		.uleb128 0x12
 4643 020f 06       		.uleb128 0x6
 4644 0210 01       		.uleb128 0x1
 4645 0211 13       		.uleb128 0x13
 4646 0212 00       		.byte	0
 4647 0213 00       		.byte	0
 4648 0214 20       		.uleb128 0x20
 4649 0215 21       		.uleb128 0x21
 4650 0216 00       		.byte	0
 4651 0217 49       		.uleb128 0x49
 4652 0218 13       		.uleb128 0x13
 4653 0219 2F       		.uleb128 0x2f
 4654 021a 05       		.uleb128 0x5
 4655 021b 00       		.byte	0
 4656 021c 00       		.byte	0
 4657 021d 21       		.uleb128 0x21
 4658 021e 34       		.uleb128 0x34
 4659 021f 00       		.byte	0
 4660 0220 03       		.uleb128 0x3
 4661 0221 08       		.uleb128 0x8
 4662 0222 3A       		.uleb128 0x3a
 4663 0223 0B       		.uleb128 0xb
 4664 0224 3B       		.uleb128 0x3b
 4665 0225 05       		.uleb128 0x5
 4666 0226 49       		.uleb128 0x49
 4667 0227 13       		.uleb128 0x13
 4668 0228 02       		.uleb128 0x2
 4669 0229 18       		.uleb128 0x18
 4670 022a 00       		.byte	0
 4671 022b 00       		.byte	0
 4672 022c 22       		.uleb128 0x22
 4673 022d 34       		.uleb128 0x34
 4674 022e 00       		.byte	0
 4675 022f 03       		.uleb128 0x3
 4676 0230 0E       		.uleb128 0xe
 4677 0231 3A       		.uleb128 0x3a
 4678 0232 0B       		.uleb128 0xb
 4679 0233 3B       		.uleb128 0x3b
 4680 0234 05       		.uleb128 0x5
 4681 0235 49       		.uleb128 0x49
 4682 0236 13       		.uleb128 0x13
 4683 0237 3F       		.uleb128 0x3f
 4684 0238 19       		.uleb128 0x19
 4685 0239 3C       		.uleb128 0x3c
 4686 023a 19       		.uleb128 0x19
 4687 023b 00       		.byte	0
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 100


 4688 023c 00       		.byte	0
 4689 023d 23       		.uleb128 0x23
 4690 023e 34       		.uleb128 0x34
 4691 023f 00       		.byte	0
 4692 0240 03       		.uleb128 0x3
 4693 0241 0E       		.uleb128 0xe
 4694 0242 3A       		.uleb128 0x3a
 4695 0243 0B       		.uleb128 0xb
 4696 0244 3B       		.uleb128 0x3b
 4697 0245 0B       		.uleb128 0xb
 4698 0246 49       		.uleb128 0x49
 4699 0247 13       		.uleb128 0x13
 4700 0248 3F       		.uleb128 0x3f
 4701 0249 19       		.uleb128 0x19
 4702 024a 02       		.uleb128 0x2
 4703 024b 18       		.uleb128 0x18
 4704 024c 00       		.byte	0
 4705 024d 00       		.byte	0
 4706 024e 24       		.uleb128 0x24
 4707 024f 34       		.uleb128 0x34
 4708 0250 00       		.byte	0
 4709 0251 03       		.uleb128 0x3
 4710 0252 08       		.uleb128 0x8
 4711 0253 3A       		.uleb128 0x3a
 4712 0254 0B       		.uleb128 0xb
 4713 0255 3B       		.uleb128 0x3b
 4714 0256 0B       		.uleb128 0xb
 4715 0257 49       		.uleb128 0x49
 4716 0258 13       		.uleb128 0x13
 4717 0259 3F       		.uleb128 0x3f
 4718 025a 19       		.uleb128 0x19
 4719 025b 02       		.uleb128 0x2
 4720 025c 18       		.uleb128 0x18
 4721 025d 00       		.byte	0
 4722 025e 00       		.byte	0
 4723 025f 00       		.byte	0
 4724              		.section	.debug_aranges,"",%progbits
 4725 0000 8C000000 		.4byte	0x8c
 4726 0004 0200     		.2byte	0x2
 4727 0006 00000000 		.4byte	.Ldebug_info0
 4728 000a 04       		.byte	0x4
 4729 000b 00       		.byte	0
 4730 000c 0000     		.2byte	0
 4731 000e 0000     		.2byte	0
 4732 0010 00000000 		.4byte	.LFB64
 4733 0014 0C000000 		.4byte	.LFE64-.LFB64
 4734 0018 00000000 		.4byte	.LFB65
 4735 001c B0010000 		.4byte	.LFE65-.LFB65
 4736 0020 00000000 		.4byte	.LFB66
 4737 0024 18010000 		.4byte	.LFE66-.LFB66
 4738 0028 00000000 		.4byte	.LFB67
 4739 002c 2A000000 		.4byte	.LFE67-.LFB67
 4740 0030 00000000 		.4byte	.LFB68
 4741 0034 C8000000 		.4byte	.LFE68-.LFB68
 4742 0038 00000000 		.4byte	.LFB69
 4743 003c 48000000 		.4byte	.LFE69-.LFB69
 4744 0040 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 101


 4745 0044 1E000000 		.4byte	.LFE70-.LFB70
 4746 0048 00000000 		.4byte	.LFB71
 4747 004c 46000000 		.4byte	.LFE71-.LFB71
 4748 0050 00000000 		.4byte	.LFB72
 4749 0054 50010000 		.4byte	.LFE72-.LFB72
 4750 0058 00000000 		.4byte	.LFB73
 4751 005c 1E000000 		.4byte	.LFE73-.LFB73
 4752 0060 00000000 		.4byte	.LFB74
 4753 0064 5C040000 		.4byte	.LFE74-.LFB74
 4754 0068 00000000 		.4byte	.LFB75
 4755 006c 44000000 		.4byte	.LFE75-.LFB75
 4756 0070 00000000 		.4byte	.LFB76
 4757 0074 9C020000 		.4byte	.LFE76-.LFB76
 4758 0078 00000000 		.4byte	.LFB77
 4759 007c 74000000 		.4byte	.LFE77-.LFB77
 4760 0080 00000000 		.4byte	.LFB78
 4761 0084 38010000 		.4byte	.LFE78-.LFB78
 4762 0088 00000000 		.4byte	0
 4763 008c 00000000 		.4byte	0
 4764              		.section	.debug_ranges,"",%progbits
 4765              	.Ldebug_ranges0:
 4766 0000 00000000 		.4byte	.LFB64
 4767 0004 0C000000 		.4byte	.LFE64
 4768 0008 00000000 		.4byte	.LFB65
 4769 000c B0010000 		.4byte	.LFE65
 4770 0010 00000000 		.4byte	.LFB66
 4771 0014 18010000 		.4byte	.LFE66
 4772 0018 00000000 		.4byte	.LFB67
 4773 001c 2A000000 		.4byte	.LFE67
 4774 0020 00000000 		.4byte	.LFB68
 4775 0024 C8000000 		.4byte	.LFE68
 4776 0028 00000000 		.4byte	.LFB69
 4777 002c 48000000 		.4byte	.LFE69
 4778 0030 00000000 		.4byte	.LFB70
 4779 0034 1E000000 		.4byte	.LFE70
 4780 0038 00000000 		.4byte	.LFB71
 4781 003c 46000000 		.4byte	.LFE71
 4782 0040 00000000 		.4byte	.LFB72
 4783 0044 50010000 		.4byte	.LFE72
 4784 0048 00000000 		.4byte	.LFB73
 4785 004c 1E000000 		.4byte	.LFE73
 4786 0050 00000000 		.4byte	.LFB74
 4787 0054 5C040000 		.4byte	.LFE74
 4788 0058 00000000 		.4byte	.LFB75
 4789 005c 44000000 		.4byte	.LFE75
 4790 0060 00000000 		.4byte	.LFB76
 4791 0064 9C020000 		.4byte	.LFE76
 4792 0068 00000000 		.4byte	.LFB77
 4793 006c 74000000 		.4byte	.LFE77
 4794 0070 00000000 		.4byte	.LFB78
 4795 0074 38010000 		.4byte	.LFE78
 4796 0078 00000000 		.4byte	0
 4797 007c 00000000 		.4byte	0
 4798              		.section	.debug_line,"",%progbits
 4799              	.Ldebug_line0:
 4800 0000 AA040000 		.section	.debug_str,"MS",%progbits,1
 4800      02006102 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 102


 4800      00000201 
 4800      FB0E0D00 
 4800      01010101 
 4801              	.LASF117:
 4802 0000 745F6D6F 		.ascii	"t_modem\000"
 4802      64656D00 
 4803              	.LASF12:
 4804 0008 75696E74 		.ascii	"uint16\000"
 4804      313600
 4805              	.LASF47:
 4806 000f 746D5F68 		.ascii	"tm_hour\000"
 4806      6F757200 
 4807              	.LASF84:
 4808 0017 6E756D5F 		.ascii	"num_invalid_readings\000"
 4808      696E7661 
 4808      6C69645F 
 4808      72656164 
 4808      696E6773 
 4809              	.LASF150:
 4810 002c 62756666 		.ascii	"buffer_overflow\000"
 4810      65725F6F 
 4810      76657266 
 4810      6C6F7700 
 4811              	.LASF148:
 4812 003c 66696C65 		.ascii	"fileName\000"
 4812      4E616D65 
 4812      00
 4813              	.LASF0:
 4814 0045 7369676E 		.ascii	"signed char\000"
 4814      65642063 
 4814      68617200 
 4815              	.LASF89:
 4816 0051 636F756E 		.ascii	"countDownResetCondition\000"
 4816      74446F77 
 4816      6E526573 
 4816      6574436F 
 4816      6E646974 
 4817              	.LASF189:
 4818 0069 74696D65 		.ascii	"timeToAutosampler\000"
 4818      546F4175 
 4818      746F7361 
 4818      6D706C65 
 4818      7200
 4819              	.LASF165:
 4820 007b 76616C76 		.ascii	"valve_type\000"
 4820      655F7479 
 4820      706500
 4821              	.LASF194:
 4822 0086 57616B65 		.ascii	"Wakeup_ISR\000"
 4822      75705F49 
 4822      535200
 4823              	.LASF191:
 4824 0091 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4824      43313120 
 4824      352E342E 
 4824      31203230 
 4824      31363036 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 103


 4825 00c4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4825      20726576 
 4825      6973696F 
 4825      6E203233 
 4825      37373135 
 4826 00f7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4826      66756E63 
 4826      74696F6E 
 4826      2D736563 
 4826      74696F6E 
 4827              	.LASF115:
 4828 011f 745F7072 		.ascii	"t_pressure\000"
 4828      65737375 
 4828      726500
 4829              	.LASF27:
 4830 012a 4D6F6E74 		.ascii	"Month\000"
 4830      6800
 4831              	.LASF7:
 4832 0130 6C6F6E67 		.ascii	"long long unsigned int\000"
 4832      206C6F6E 
 4832      6720756E 
 4832      7369676E 
 4832      65642069 
 4833              	.LASF23:
 4834 0147 486F7572 		.ascii	"Hour\000"
 4834      00
 4835              	.LASF156:
 4836 014c 6D6F6465 		.ascii	"modem_stats\000"
 4836      6D5F7374 
 4836      61747300 
 4837              	.LASF154:
 4838 0158 6D6F6465 		.ascii	"modem_state\000"
 4838      6D5F7374 
 4838      61746500 
 4839              	.LASF175:
 4840 0164 616C6172 		.ascii	"alarmMeasure\000"
 4840      6D4D6561 
 4840      73757265 
 4840      00
 4841              	.LASF149:
 4842 0171 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4842      52784275 
 4842      66666572 
 4842      00
 4843              	.LASF111:
 4844 017e 745F6C65 		.ascii	"t_level_sensor\000"
 4844      76656C5F 
 4844      73656E73 
 4844      6F7200
 4845              	.LASF168:
 4846 018d 6175746F 		.ascii	"autosampler_enabled\000"
 4846      73616D70 
 4846      6C65725F 
 4846      656E6162 
 4846      6C656400 
 4847              	.LASF170:
 4848 01a1 68747470 		.ascii	"http_request\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 104


 4848      5F726571 
 4848      75657374 
 4848      00
 4849              	.LASF6:
 4850 01ae 6C6F6E67 		.ascii	"long long int\000"
 4850      206C6F6E 
 4850      6720696E 
 4850      7400
 4851              	.LASF126:
 4852 01bc 7061636B 		.ascii	"packets\000"
 4852      65747300 
 4853              	.LASF63:
 4854 01c4 65636E6F 		.ascii	"ecno\000"
 4854      00
 4855              	.LASF176:
 4856 01c9 74696D65 		.ascii	"timeToMeasure\000"
 4856      546F4D65 
 4856      61737572 
 4856      6500
 4857              	.LASF66:
 4858 01d7 74696D65 		.ascii	"time_to_network_connect\000"
 4858      5F746F5F 
 4858      6E657477 
 4858      6F726B5F 
 4858      636F6E6E 
 4859              	.LASF178:
 4860 01ef 74696D65 		.ascii	"timeToSync\000"
 4860      546F5379 
 4860      6E6300
 4861              	.LASF35:
 4862 01fa 766F6C74 		.ascii	"voltage_solar\000"
 4862      6167655F 
 4862      736F6C61 
 4862      7200
 4863              	.LASF36:
 4864 0208 766F6C74 		.ascii	"voltage_charge_current\000"
 4864      6167655F 
 4864      63686172 
 4864      67655F63 
 4864      75727265 
 4865              	.LASF147:
 4866 021f 75706772 		.ascii	"upgrade_status\000"
 4866      6164655F 
 4866      73746174 
 4866      757300
 4867              	.LASF164:
 4868 022e 76616C76 		.ascii	"valve_diameter\000"
 4868      655F6469 
 4868      616D6574 
 4868      657200
 4869              	.LASF129:
 4870 023d 635F6461 		.ascii	"c_data_count_sent\000"
 4870      74615F63 
 4870      6F756E74 
 4870      5F73656E 
 4870      7400
 4871              	.LASF60:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 105


 4872 024f 6D6F6465 		.ascii	"modem_info_t\000"
 4872      6D5F696E 
 4872      666F5F74 
 4872      00
 4873              	.LASF184:
 4874 025c 616C6172 		.ascii	"alarmDownstreamLevelSensor\000"
 4874      6D446F77 
 4874      6E737472 
 4874      65616D4C 
 4874      6576656C 
 4875              	.LASF61:
 4876 0277 72786C65 		.ascii	"rxlev\000"
 4876      7600
 4877              	.LASF4:
 4878 027d 6C6F6E67 		.ascii	"long int\000"
 4878      20696E74 
 4878      00
 4879              	.LASF67:
 4880 0286 74696D65 		.ascii	"time_to_acquire_ip\000"
 4880      5F746F5F 
 4880      61637175 
 4880      6972655F 
 4880      697000
 4881              	.LASF90:
 4882 0299 616C6172 		.ascii	"alarm\000"
 4882      6D00
 4883              	.LASF41:
 4884 029f 70726573 		.ascii	"pressure_voltage_off\000"
 4884      73757265 
 4884      5F766F6C 
 4884      74616765 
 4884      5F6F6666 
 4885              	.LASF11:
 4886 02b4 75696E74 		.ascii	"uint8\000"
 4886      3800
 4887              	.LASF121:
 4888 02ba 635F7472 		.ascii	"c_try_counter\000"
 4888      795F636F 
 4888      756E7465 
 4888      7200
 4889              	.LASF132:
 4890 02c8 73656E64 		.ascii	"send_time\000"
 4890      5F74696D 
 4890      6500
 4891              	.LASF181:
 4892 02d2 74696D65 		.ascii	"timeToAppLED\000"
 4892      546F4170 
 4892      704C4544 
 4892      00
 4893              	.LASF16:
 4894 02df 696E7433 		.ascii	"int32\000"
 4894      3200
 4895              	.LASF69:
 4896 02e5 6E6F6465 		.ascii	"node_type\000"
 4896      5F747970 
 4896      6500
 4897              	.LASF118:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 106


 4898 02ef 73796E63 		.ascii	"syncData\000"
 4898      44617461 
 4898      00
 4899              	.LASF127:
 4900 02f8 6E657477 		.ascii	"network_time\000"
 4900      6F726B5F 
 4900      74696D65 
 4900      00
 4901              	.LASF13:
 4902 0305 75696E74 		.ascii	"uint32\000"
 4902      333200
 4903              	.LASF58:
 4904 030c 6D6F6465 		.ascii	"model_id\000"
 4904      6C5F6964 
 4904      00
 4905              	.LASF81:
 4906 0315 616C6C5F 		.ascii	"all_level_readings\000"
 4906      6C657665 
 4906      6C5F7265 
 4906      6164696E 
 4906      677300
 4907              	.LASF86:
 4908 0328 636F756E 		.ascii	"countDownValue\000"
 4908      74446F77 
 4908      6E56616C 
 4908      756500
 4909              	.LASF143:
 4910 0337 75706772 		.ascii	"upgraded\000"
 4910      61646564 
 4910      00
 4911              	.LASF49:
 4912 0340 746D5F6D 		.ascii	"tm_mon\000"
 4912      6F6E00
 4913              	.LASF73:
 4914 0347 64656275 		.ascii	"debug_level\000"
 4914      675F6C65 
 4914      76656C00 
 4915              	.LASF145:
 4916 0353 706F7274 		.ascii	"port\000"
 4916      00
 4917              	.LASF54:
 4918 0358 76616C75 		.ascii	"value\000"
 4918      6500
 4919              	.LASF144:
 4920 035e 686F7374 		.ascii	"host\000"
 4920      00
 4921              	.LASF50:
 4922 0363 746D5F79 		.ascii	"tm_year\000"
 4922      65617200 
 4923              	.LASF177:
 4924 036b 616C6172 		.ascii	"alarmSync\000"
 4924      6D53796E 
 4924      6300
 4925              	.LASF40:
 4926 0375 70726573 		.ascii	"pressure_voltage_on\000"
 4926      73757265 
 4926      5F766F6C 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 107


 4926      74616765 
 4926      5F6F6E00 
 4927              	.LASF158:
 4928 0389 4170705F 		.ascii	"App_LED_enabled\000"
 4928      4C45445F 
 4928      656E6162 
 4928      6C656400 
 4929              	.LASF141:
 4930 0399 73657454 		.ascii	"setTime\000"
 4930      696D6500 
 4931              	.LASF56:
 4932 03a1 6B65795F 		.ascii	"key_value_t\000"
 4932      76616C75 
 4932      655F7400 
 4933              	.LASF101:
 4934 03ad 41796F49 		.ascii	"AyoItsTime\000"
 4934      74735469 
 4934      6D6500
 4935              	.LASF83:
 4936 03b8 6E756D5F 		.ascii	"num_valid_readings\000"
 4936      76616C69 
 4936      645F7265 
 4936      6164696E 
 4936      677300
 4937              	.LASF131:
 4938 03cb 68747470 		.ascii	"http_chunk\000"
 4938      5F636875 
 4938      6E6B00
 4939              	.LASF138:
 4940 03d6 6D5F766F 		.ascii	"m_voltage\000"
 4940      6C746167 
 4940      6500
 4941              	.LASF5:
 4942 03e0 6C6F6E67 		.ascii	"long unsigned int\000"
 4942      20756E73 
 4942      69676E65 
 4942      6420696E 
 4942      7400
 4943              	.LASF98:
 4944 03f2 7472795F 		.ascii	"try_counter\000"
 4944      636F756E 
 4944      74657200 
 4945              	.LASF122:
 4946 03fe 64617461 		.ascii	"data_count_desired\000"
 4946      5F636F75 
 4946      6E745F64 
 4946      65736972 
 4946      656400
 4947              	.LASF34:
 4948 0411 766F6C74 		.ascii	"voltage_battery\000"
 4948      6167655F 
 4948      62617474 
 4948      65727900 
 4949              	.LASF25:
 4950 0421 4461794F 		.ascii	"DayOfMonth\000"
 4950      664D6F6E 
 4950      746800
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 108


 4951              	.LASF135:
 4952 042c 6D616B65 		.ascii	"makeMeasurements\000"
 4952      4D656173 
 4952      7572656D 
 4952      656E7473 
 4952      00
 4953              	.LASF153:
 4954 043d 64617461 		.ascii	"data\000"
 4954      00
 4955              	.LASF95:
 4956 0442 65705F70 		.ascii	"ep_port\000"
 4956      6F727400 
 4957              	.LASF53:
 4958 044a 746D5F69 		.ascii	"tm_isdst\000"
 4958      73647374 
 4958      00
 4959              	.LASF91:
 4960 0453 6D6F6465 		.ascii	"modem_info\000"
 4960      6D5F696E 
 4960      666F00
 4961              	.LASF94:
 4962 045e 65705F68 		.ascii	"ep_host\000"
 4962      6F737400 
 4963              	.LASF14:
 4964 0466 696E7438 		.ascii	"int8\000"
 4964      00
 4965              	.LASF100:
 4966 046b 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 4966      576F726B 
 4966      576F726B 
 4966      576F726B 
 4966      576F726B 
 4967              	.LASF123:
 4968 0484 635F6461 		.ascii	"c_data_count_desired\000"
 4968      74615F63 
 4968      6F756E74 
 4968      5F646573 
 4968      69726564 
 4969              	.LASF116:
 4970 0499 745F7364 		.ascii	"t_sd_card\000"
 4970      5F636172 
 4970      6400
 4971              	.LASF2:
 4972 04a3 73686F72 		.ascii	"short int\000"
 4972      7420696E 
 4972      7400
 4973              	.LASF180:
 4974 04ad 616C6172 		.ascii	"alarmAppLED\000"
 4974      6D417070 
 4974      4C454400 
 4975              	.LASF155:
 4976 04b9 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4976      6D5F7374 
 4976      6172745F 
 4976      74696D65 
 4976      5F737461 
 4977              	.LASF163:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 109


 4978 04d0 646F776E 		.ascii	"downstream_level_sensor_enabled\000"
 4978      73747265 
 4978      616D5F6C 
 4978      6576656C 
 4978      5F73656E 
 4979              	.LASF93:
 4980 04f0 7379735F 		.ascii	"sys_info_t\000"
 4980      696E666F 
 4980      5F7400
 4981              	.LASF80:
 4982 04fb 75706461 		.ascii	"updatable_parameters_t\000"
 4982      7461626C 
 4982      655F7061 
 4982      72616D65 
 4982      74657273 
 4983              	.LASF102:
 4984 0512 616C6172 		.ascii	"alarmType\000"
 4984      6D547970 
 4984      6500
 4985              	.LASF151:
 4986 051c 64617461 		.ascii	"dataPointsInStack\000"
 4986      506F696E 
 4986      7473496E 
 4986      53746163 
 4986      6B00
 4987              	.LASF112:
 4988 052e 745F646F 		.ascii	"t_down_level\000"
 4988      776E5F6C 
 4988      6576656C 
 4988      00
 4989              	.LASF169:
 4990 053b 6175746F 		.ascii	"autosampler_inbox\000"
 4990      73616D70 
 4990      6C65725F 
 4990      696E626F 
 4990      7800
 4991              	.LASF46:
 4992 054d 746D5F6D 		.ascii	"tm_min\000"
 4992      696E00
 4993              	.LASF17:
 4994 0554 666C6F61 		.ascii	"float32\000"
 4994      74333200 
 4995              	.LASF103:
 4996 055c 616C6172 		.ascii	"alarmToBeUpdated\000"
 4996      6D546F42 
 4996      65557064 
 4996      61746564 
 4996      00
 4997              	.LASF22:
 4998 056d 73697A65 		.ascii	"sizetype\000"
 4998      74797065 
 4998      00
 4999              	.LASF52:
 5000 0576 746D5F79 		.ascii	"tm_yday\000"
 5000      64617900 
 5001              	.LASF96:
 5002 057e 7379735F 		.ascii	"sys_settings_t\000"
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 110


 5002      73657474 
 5002      696E6773 
 5002      5F7400
 5003              	.LASF142:
 5004 058d 6C6F6361 		.ascii	"localTime\000"
 5004      6C54696D 
 5004      6500
 5005              	.LASF15:
 5006 0597 696E7431 		.ascii	"int16\000"
 5006      3600
 5007              	.LASF179:
 5008 059d 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 5008      546F5379 
 5008      636E5265 
 5008      6D6F7465 
 5008      50617261 
 5009              	.LASF55:
 5010 05b4 74696D65 		.ascii	"timeStamp\000"
 5010      5374616D 
 5010      7000
 5011              	.LASF29:
 5012 05be 5254435F 		.ascii	"RTC_TIME_DATE\000"
 5012      54494D45 
 5012      5F444154 
 5012      4500
 5013              	.LASF157:
 5014 05cc 75706461 		.ascii	"updatable_parameters\000"
 5014      7461626C 
 5014      655F7061 
 5014      72616D65 
 5014      74657273 
 5015              	.LASF107:
 5016 05e1 43726561 		.ascii	"CreateAlarm\000"
 5016      7465416C 
 5016      61726D00 
 5017              	.LASF130:
 5018 05ed 7061636B 		.ascii	"packet\000"
 5018      657400
 5019              	.LASF193:
 5020 05f4 433A5C55 		.ascii	"C:\\Users\\jniej\\OneDrive\\Documents\\GitHub\\noto"
 5020      73657273 
 5020      5C6A6E69 
 5020      656A5C4F 
 5020      6E654472 
 5021 0621 72694F53 		.ascii	"riOS\\notoriOS.cydsn\000"
 5021      5C6E6F74 
 5021      6F72694F 
 5021      532E6379 
 5021      64736E00 
 5022              	.LASF119:
 5023 0635 735F7273 		.ascii	"s_rsrp\000"
 5023      727000
 5024              	.LASF37:
 5025 063c 766F6C74 		.ascii	"voltage_pressure\000"
 5025      6167655F 
 5025      70726573 
 5025      73757265 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 111


 5025      00
 5026              	.LASF187:
 5027 064d 74696D65 		.ascii	"timeToValve\000"
 5027      546F5661 
 5027      6C766500 
 5028              	.LASF18:
 5029 0659 666C6F61 		.ascii	"float\000"
 5029      7400
 5030              	.LASF85:
 5031 065f 6C657665 		.ascii	"level_sensor_t\000"
 5031      6C5F7365 
 5031      6E736F72 
 5031      5F7400
 5032              	.LASF120:
 5033 066e 735F7273 		.ascii	"s_rscp\000"
 5033      637000
 5034              	.LASF134:
 5035 0675 636F6E66 		.ascii	"configureRemoteParams\000"
 5035      69677572 
 5035      6552656D 
 5035      6F746550 
 5035      6172616D 
 5036              	.LASF190:
 5037 068b 44617461 		.ascii	"Data_fileName\000"
 5037      5F66696C 
 5037      654E616D 
 5037      6500
 5038              	.LASF99:
 5039 0699 6D6F6465 		.ascii	"modem_status\000"
 5039      6D5F7374 
 5039      61747573 
 5039      00
 5040              	.LASF30:
 5041 06a6 74657374 		.ascii	"test_name\000"
 5041      5F6E616D 
 5041      6500
 5042              	.LASF28:
 5043 06b0 59656172 		.ascii	"Year\000"
 5043      00
 5044              	.LASF79:
 5045 06b5 5F426F6F 		.ascii	"_Bool\000"
 5045      6C00
 5046              	.LASF10:
 5047 06bb 696E7433 		.ascii	"int32_t\000"
 5047      325F7400 
 5048              	.LASF1:
 5049 06c3 756E7369 		.ascii	"unsigned char\000"
 5049      676E6564 
 5049      20636861 
 5049      7200
 5050              	.LASF146:
 5051 06d1 726F7574 		.ascii	"route\000"
 5051      6500
 5052              	.LASF174:
 5053 06d7 73797374 		.ascii	"system_settings\000"
 5053      656D5F73 
 5053      65747469 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 112


 5053      6E677300 
 5054              	.LASF77:
 5055 06e7 56616C76 		.ascii	"Valve_freq\000"
 5055      655F6672 
 5055      657100
 5056              	.LASF64:
 5057 06f2 72737271 		.ascii	"rsrq\000"
 5057      00
 5058              	.LASF104:
 5059 06f7 52657365 		.ascii	"ResetAlarm\000"
 5059      74416C61 
 5059      726D00
 5060              	.LASF133:
 5061 0702 735F7365 		.ascii	"s_send_time\000"
 5061      6E645F74 
 5061      696D6500 
 5062              	.LASF72:
 5063 070e 73796E63 		.ascii	"sync_time\000"
 5063      5F74696D 
 5063      6500
 5064              	.LASF43:
 5065 0718 70726573 		.ascii	"pressure_depth\000"
 5065      73757265 
 5065      5F646570 
 5065      746800
 5066              	.LASF62:
 5067 0727 72736370 		.ascii	"rscp\000"
 5067      00
 5068              	.LASF24:
 5069 072c 4461794F 		.ascii	"DayOfWeek\000"
 5069      66576565 
 5069      6B00
 5070              	.LASF33:
 5071 0736 74657374 		.ascii	"test_t\000"
 5071      5F7400
 5072              	.LASF173:
 5073 073d 73797374 		.ascii	"system_info\000"
 5073      656D5F69 
 5073      6E666F00 
 5074              	.LASF59:
 5075 0749 696D6569 		.ascii	"imei\000"
 5075      00
 5076              	.LASF32:
 5077 074e 72656173 		.ascii	"reason\000"
 5077      6F6E00
 5078              	.LASF105:
 5079 0755 616C6172 		.ascii	"alarmToBeReset\000"
 5079      6D546F42 
 5079      65526573 
 5079      657400
 5080              	.LASF110:
 5081 0764 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 5081      6B697479 
 5081      43686563 
 5081      6B596F75 
 5081      7273656C 
 5082              	.LASF128:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 113


 5083 0790 64617461 		.ascii	"data_count_sent\000"
 5083      5F636F75 
 5083      6E745F73 
 5083      656E7400 
 5084              	.LASF68:
 5085 07a0 6D6F6465 		.ascii	"modem_stats_t\000"
 5085      6D5F7374 
 5085      6174735F 
 5085      7400
 5086              	.LASF42:
 5087 07ae 70726573 		.ascii	"pressure_current\000"
 5087      73757265 
 5087      5F637572 
 5087      72656E74 
 5087      00
 5088              	.LASF38:
 5089 07bf 76616C69 		.ascii	"valid\000"
 5089      6400
 5090              	.LASF182:
 5091 07c5 616C6172 		.ascii	"alarmLevelSensor\000"
 5091      6D4C6576 
 5091      656C5365 
 5091      6E736F72 
 5091      00
 5092              	.LASF51:
 5093 07d6 746D5F77 		.ascii	"tm_wday\000"
 5093      64617900 
 5094              	.LASF75:
 5095 07de 4C657665 		.ascii	"Level_Sensor_freq\000"
 5095      6C5F5365 
 5095      6E736F72 
 5095      5F667265 
 5095      7100
 5096              	.LASF160:
 5097 07f0 6C657665 		.ascii	"level_sensor_inbox\000"
 5097      6C5F7365 
 5097      6E736F72 
 5097      5F696E62 
 5097      6F7800
 5098              	.LASF21:
 5099 0803 6C6F6E67 		.ascii	"long double\000"
 5099      20646F75 
 5099      626C6500 
 5100              	.LASF125:
 5101 080f 6368756E 		.ascii	"chunk\000"
 5101      6B00
 5102              	.LASF136:
 5103 0815 635F7469 		.ascii	"c_timeStamp\000"
 5103      6D655374 
 5103      616D7000 
 5104              	.LASF20:
 5105 0821 63686172 		.ascii	"char\000"
 5105      00
 5106              	.LASF8:
 5107 0826 756E7369 		.ascii	"unsigned int\000"
 5107      676E6564 
 5107      20696E74 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 114


 5107      00
 5108              	.LASF186:
 5109 0833 616C6172 		.ascii	"alarmValve\000"
 5109      6D56616C 
 5109      766500
 5110              	.LASF65:
 5111 083e 72737270 		.ascii	"rsrp\000"
 5111      00
 5112              	.LASF172:
 5113 0843 68747470 		.ascii	"http_route\000"
 5113      5F726F75 
 5113      746500
 5114              	.LASF124:
 5115 084e 706F7274 		.ascii	"portConfig\000"
 5115      436F6E66 
 5115      696700
 5116              	.LASF9:
 5117 0859 5F5F696E 		.ascii	"__int32_t\000"
 5117      7433325F 
 5117      7400
 5118              	.LASF97:
 5119 0863 756E6971 		.ascii	"uniqueId\000"
 5119      75654964 
 5119      00
 5120              	.LASF71:
 5121 086c 6D656173 		.ascii	"measure_time\000"
 5121      7572655F 
 5121      74696D65 
 5121      00
 5122              	.LASF139:
 5123 0879 6D5F6C65 		.ascii	"m_level_sensor\000"
 5123      76656C5F 
 5123      73656E73 
 5123      6F7200
 5124              	.LASF82:
 5125 0888 6C657665 		.ascii	"level_reading\000"
 5125      6C5F7265 
 5125      6164696E 
 5125      6700
 5126              	.LASF195:
 5127 0896 4C617942 		.ascii	"LayBack\000"
 5127      61636B00 
 5128              	.LASF3:
 5129 089e 73686F72 		.ascii	"short unsigned int\000"
 5129      7420756E 
 5129      7369676E 
 5129      65642069 
 5129      6E7400
 5130              	.LASF57:
 5131 08b1 73696D5F 		.ascii	"sim_id\000"
 5131      696400
 5132              	.LASF48:
 5133 08b8 746D5F6D 		.ascii	"tm_mday\000"
 5133      64617900 
 5134              	.LASF108:
 5135 08c0 6E657741 		.ascii	"newAlarm\000"
 5135      6C61726D 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 115


 5135      00
 5136              	.LASF76:
 5137 08c9 446F776E 		.ascii	"Downstream_Level_Sensor_freq\000"
 5137      73747265 
 5137      616D5F4C 
 5137      6576656C 
 5137      5F53656E 
 5138              	.LASF45:
 5139 08e6 746D5F73 		.ascii	"tm_sec\000"
 5139      656300
 5140              	.LASF140:
 5141 08ed 6D5F7072 		.ascii	"m_pressure\000"
 5141      65737375 
 5141      726500
 5142              	.LASF166:
 5143 08f8 76616C76 		.ascii	"valve_enabled\000"
 5143      655F656E 
 5143      61626C65 
 5143      6400
 5144              	.LASF31:
 5145 0906 73746174 		.ascii	"status\000"
 5145      757300
 5146              	.LASF183:
 5147 090d 74696D65 		.ascii	"timeToLevelSensor\000"
 5147      546F4C65 
 5147      76656C53 
 5147      656E736F 
 5147      7200
 5148              	.LASF161:
 5149 091f 6C657665 		.ascii	"level_sensor_enabled\000"
 5149      6C5F7365 
 5149      6E736F72 
 5149      5F656E61 
 5149      626C6564 
 5150              	.LASF152:
 5151 0934 64617461 		.ascii	"dataPointsInStackDesired\000"
 5151      506F696E 
 5151      7473496E 
 5151      53746163 
 5151      6B446573 
 5152              	.LASF74:
 5153 094d 4170705F 		.ascii	"App_LED_freq\000"
 5153      4C45445F 
 5153      66726571 
 5153      00
 5154              	.LASF114:
 5155 095a 745F766F 		.ascii	"t_voltages\000"
 5155      6C746167 
 5155      657300
 5156              	.LASF192:
 5157 0965 6E6F746F 		.ascii	"notoriOS.c\000"
 5157      72694F53 
 5157      2E6300
 5158              	.LASF185:
 5159 0970 74696D65 		.ascii	"timeToDownstreamLevelSensor\000"
 5159      546F446F 
 5159      776E7374 
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 116


 5159      7265616D 
 5159      4C657665 
 5160              	.LASF171:
 5161 098c 68747470 		.ascii	"http_body\000"
 5161      5F626F64 
 5161      7900
 5162              	.LASF188:
 5163 0996 616C6172 		.ascii	"alarmAutosampler\000"
 5163      6D417574 
 5163      6F73616D 
 5163      706C6572 
 5163      00
 5164              	.LASF167:
 5165 09a7 76616C76 		.ascii	"valve_inbox\000"
 5165      655F696E 
 5165      626F7800 
 5166              	.LASF78:
 5167 09b3 4175746F 		.ascii	"Autosampler_freq\000"
 5167      73616D70 
 5167      6C65725F 
 5167      66726571 
 5167      00
 5168              	.LASF88:
 5169 09c4 636F756E 		.ascii	"countDownType\000"
 5169      74446F77 
 5169      6E547970 
 5169      6500
 5170              	.LASF87:
 5171 09d2 63757272 		.ascii	"currentCountDownValue\000"
 5171      656E7443 
 5171      6F756E74 
 5171      446F776E 
 5171      56616C75 
 5172              	.LASF70:
 5173 09e8 73696D5F 		.ascii	"sim_type\000"
 5173      74797065 
 5173      00
 5174              	.LASF26:
 5175 09f1 4461794F 		.ascii	"DayOfYear\000"
 5175      66596561 
 5175      7200
 5176              	.LASF44:
 5177 09fb 70726573 		.ascii	"pressure_t\000"
 5177      73757265 
 5177      5F7400
 5178              	.LASF106:
 5179 0a06 416C6172 		.ascii	"AlarmReady\000"
 5179      6D526561 
 5179      647900
 5180              	.LASF109:
 5181 0a11 52656164 		.ascii	"ReadyOrNot\000"
 5181      794F724E 
 5181      6F7400
 5182              	.LASF196:
 5183 0a1c 6D61696E 		.ascii	"main\000"
 5183      00
 5184              	.LASF92:
ARM GAS  C:\Users\jniej\AppData\Local\Temp\cckXgSfq.s 			page 117


 5185 0a21 63686970 		.ascii	"chip_uniqueId\000"
 5185      5F756E69 
 5185      71756549 
 5185      6400
 5186              	.LASF113:
 5187 0a2f 745F7661 		.ascii	"t_valve\000"
 5187      6C766500 
 5188              	.LASF19:
 5189 0a37 646F7562 		.ascii	"double\000"
 5189      6C6500
 5190              	.LASF159:
 5191 0a3e 6170705F 		.ascii	"app_led_inbox\000"
 5191      6C65645F 
 5191      696E626F 
 5191      7800
 5192              	.LASF162:
 5193 0a4c 646F776E 		.ascii	"downstream_level_sensor_inbox\000"
 5193      73747265 
 5193      616D5F6C 
 5193      6576656C 
 5193      5F73656E 
 5194              	.LASF39:
 5195 0a6a 766F6C74 		.ascii	"voltage_t\000"
 5195      6167655F 
 5195      7400
 5196              	.LASF137:
 5197 0a74 635F6E6F 		.ascii	"c_node_type\000"
 5197      64655F74 
 5197      79706500 
 5198              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
