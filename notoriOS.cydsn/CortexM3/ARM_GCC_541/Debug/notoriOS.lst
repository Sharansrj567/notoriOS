ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.section	.text.Wakeup_ISR,"ax",%progbits
  44              		.align	2
  45              		.global	Wakeup_ISR
  46              		.thumb
  47              		.thumb_func
  48              		.type	Wakeup_ISR, %function
  49              	Wakeup_ISR:
  50              	.LFB64:
  51              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 2


   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  52              		.loc 1 20 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  62              		.loc 1 22 0
  63 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  64              		.loc 1 23 0
  65 0008 00BF     		nop
  66 000a 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE64:
  69              		.size	Wakeup_ISR, .-Wakeup_ISR
  70              		.global	Data_fileName
  71              		.data
  72              		.align	2
  73              		.type	Data_fileName, %object
  74              		.size	Data_fileName, 30
  75              	Data_fileName:
  76 0000 64617461 		.ascii	"data.txt\000"
  76      2E747874 
  76      00
  77 0009 00000000 		.space	21
  77      00000000 
  77      00000000 
  77      00000000 
  77      00000000 
  78              		.comm	try_counter,1,1
  79              		.section	.rodata
  80              		.align	2
  81              	.LC0:
  82 0000 25582D25 		.ascii	"%X-%X\000"
  82      5800
  83 0006 0000     		.align	2
  84              	.LC1:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 3


  85 0008 6563322D 		.ascii	"ec2-13-59-131-167.us-east-2.compute.amazonaws.com\000"
  85      31332D35 
  85      392D3133 
  85      312D3136 
  85      372E7573 
  86 003a 0000     		.align	2
  87              	.LC2:
  88 003c 256400   		.ascii	"%d\000"
  89 003f 00       		.align	2
  90              	.LC3:
  91 0040 7265626F 		.ascii	"reboot\000"
  91      6F7400
  92              		.section	.text.ReadyOrNot,"ax",%progbits
  93              		.align	2
  94              		.global	ReadyOrNot
  95              		.thumb
  96              		.thumb_func
  97              		.type	ReadyOrNot, %function
  98              	ReadyOrNot:
  99              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
 100              		.loc 1 41 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 32
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 B0B5     		push	{r4, r5, r7, lr}
 105              		.cfi_def_cfa_offset 16
 106              		.cfi_offset 4, -16
 107              		.cfi_offset 5, -12
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 8AB0     		sub	sp, sp, #40
 111              		.cfi_def_cfa_offset 56
 112 0004 02AF     		add	r7, sp, #8
 113              		.cfi_def_cfa 7, 48
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 114              		.loc 1 43 0
 115 0006 3948     		ldr	r0, .L3
 116 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 4


  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 117              		.loc 1 44 0
 118 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 119              		.loc 1 46 0
 120 0010 FF20     		movs	r0, #255
 121 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 122              		.loc 1 47 0
 123 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 124              		.loc 1 48 0
 125 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 126              		.loc 1 52 0
 127 001e FFF7FEFF 		bl	modem_initialize
  53:notoriOS.c    ****     
  54:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 128              		.loc 1 54 0
 129 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  55:notoriOS.c    ****    
  56:notoriOS.c    ****     
  57:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  58:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  59:notoriOS.c    ****     
  60:notoriOS.c    ****     
  61:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  62:notoriOS.c    ****     uint32 uniqueId[2];
  63:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  64:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 130              		.loc 1 64 0
 131 0026 07F11403 		add	r3, r7, #20
 132 002a 1846     		mov	r0, r3
 133 002c FFF7FEFF 		bl	CyGetUniqueId
  65:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 134              		.loc 1 65 0
 135 0030 7A69     		ldr	r2, [r7, #20]
 136 0032 BB69     		ldr	r3, [r7, #24]
 137 0034 0093     		str	r3, [sp]
 138 0036 1346     		mov	r3, r2
 139 0038 2D4A     		ldr	r2, .L3+4
 140 003a 1821     		movs	r1, #24
 141 003c 2D48     		ldr	r0, .L3+8
 142 003e FFF7FEFF 		bl	snprintf
  66:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  67:notoriOS.c    ****     system_info.modem_info = &modem_info;
 143              		.loc 1 67 0
 144 0042 2D4B     		ldr	r3, .L3+12
 145 0044 2D4A     		ldr	r2, .L3+16
 146 0046 1A60     		str	r2, [r3]
  68:notoriOS.c    ****     
  69:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  70:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","ec2-13-59-131-167.us-eas
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 5


 147              		.loc 1 70 0
 148 0048 2D4A     		ldr	r2, .L3+20
 149 004a 2E4B     		ldr	r3, .L3+24
 150 004c 1446     		mov	r4, r2
 151 004e 1D46     		mov	r5, r3
 152 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 153 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 154 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 155 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 156 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 157 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 158 005c 2B68     		ldr	r3, [r5]
 159 005e 2380     		strh	r3, [r4]	@ movhi
  71:notoriOS.c    ****    
  72:notoriOS.c    ****     system_settings.ep_port = 5000;
 160              		.loc 1 72 0
 161 0060 274B     		ldr	r3, .L3+20
 162 0062 41F28832 		movw	r2, #5000
 163 0066 5A66     		str	r2, [r3, #100]
  73:notoriOS.c    ****     // Don't need the following for new nodes
  74:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  75:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  76:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  77:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  78:notoriOS.c    ****         
  79:notoriOS.c    ****     
  80:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  81:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 164              		.loc 1 81 0
 165 0068 274B     		ldr	r3, .L3+28
 166 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 167 006c 99B2     		uxth	r1, r3
 168 006e 274C     		ldr	r4, .L3+32
 169 0070 3846     		mov	r0, r7
 170 0072 0723     		movs	r3, #7
 171 0074 0122     		movs	r2, #1
 172 0076 FFF7FEFF 		bl	CreateAlarm
 173 007a 2246     		mov	r2, r4
 174 007c 3B46     		mov	r3, r7
 175 007e 1968     		ldr	r1, [r3]	@ unaligned
 176 0080 1160     		str	r1, [r2]	@ unaligned
 177 0082 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 178 0084 9380     		strh	r3, [r2, #4]	@ unaligned
  82:notoriOS.c    ****     timeToMeasure = 1u;
 179              		.loc 1 82 0
 180 0086 224B     		ldr	r3, .L3+36
 181 0088 0122     		movs	r2, #1
 182 008a 1A70     		strb	r2, [r3]
  83:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  84:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 183              		.loc 1 84 0
 184 008c 1E4B     		ldr	r3, .L3+28
 185 008e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 186 0090 99B2     		uxth	r1, r3
 187 0092 204C     		ldr	r4, .L3+40
 188 0094 3846     		mov	r0, r7
 189 0096 0723     		movs	r3, #7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 6


 190 0098 0122     		movs	r2, #1
 191 009a FFF7FEFF 		bl	CreateAlarm
 192 009e 2246     		mov	r2, r4
 193 00a0 3B46     		mov	r3, r7
 194 00a2 1968     		ldr	r1, [r3]	@ unaligned
 195 00a4 1160     		str	r1, [r2]	@ unaligned
 196 00a6 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 197 00a8 9380     		strh	r3, [r2, #4]	@ unaligned
  85:notoriOS.c    ****     timeToSync = 1u;
 198              		.loc 1 85 0
 199 00aa 1B4B     		ldr	r3, .L3+44
 200 00ac 0122     		movs	r2, #1
 201 00ae 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     
  87:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 202              		.loc 1 87 0
 203 00b0 1A4B     		ldr	r3, .L3+48
 204 00b2 0022     		movs	r2, #0
 205 00b4 1A70     		strb	r2, [r3]
  88:notoriOS.c    ****     
  89:notoriOS.c    ****     // send hey to server saying the node rebooted
  90:notoriOS.c    ****     hey = 1u;
 206              		.loc 1 90 0
 207 00b6 1A4B     		ldr	r3, .L3+52
 208 00b8 0122     		movs	r2, #1
 209 00ba 1A70     		strb	r2, [r3]
  91:notoriOS.c    ****     char c_hey[10];
  92:notoriOS.c    ****     snprintf(c_hey,sizeof(c_hey),"%d",hey);
 210              		.loc 1 92 0
 211 00bc 184B     		ldr	r3, .L3+52
 212 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 213 00c0 07F10800 		add	r0, r7, #8
 214 00c4 174A     		ldr	r2, .L3+56
 215 00c6 0A21     		movs	r1, #10
 216 00c8 FFF7FEFF 		bl	snprintf
  93:notoriOS.c    ****     pushData("reboot",c_hey,getTimeStamp());
 217              		.loc 1 93 0
 218 00cc FFF7FEFF 		bl	getTimeStamp
 219 00d0 0246     		mov	r2, r0
 220 00d2 07F10803 		add	r3, r7, #8
 221 00d6 1946     		mov	r1, r3
 222 00d8 1348     		ldr	r0, .L3+60
 223 00da FFF7FEFF 		bl	pushData
  94:notoriOS.c    ****     
  95:notoriOS.c    ****     // Initialize the try counter to 0
  96:notoriOS.c    ****     uint8 try_counter = 0;
 224              		.loc 1 96 0
 225 00de 0023     		movs	r3, #0
 226 00e0 FB77     		strb	r3, [r7, #31]
  97:notoriOS.c    **** }
 227              		.loc 1 97 0
 228 00e2 00BF     		nop
 229 00e4 2037     		adds	r7, r7, #32
 230              		.cfi_def_cfa_offset 16
 231 00e6 BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 7


 234 00e8 B0BD     		pop	{r4, r5, r7, pc}
 235              	.L4:
 236 00ea 00BF     		.align	2
 237              	.L3:
 238 00ec 00000000 		.word	Wakeup_ISR
 239 00f0 00000000 		.word	.LC0
 240 00f4 04000000 		.word	system_info+4
 241 00f8 00000000 		.word	system_info
 242 00fc 00000000 		.word	modem_info
 243 0100 00000000 		.word	system_settings
 244 0104 08000000 		.word	.LC1
 245 0108 00000000 		.word	updatable_parameters
 246 010c 00000000 		.word	alarmMeasure
 247 0110 00000000 		.word	timeToMeasure
 248 0114 00000000 		.word	alarmSync
 249 0118 00000000 		.word	timeToSync
 250 011c 00000000 		.word	timeToSycnRemoteParams
 251 0120 00000000 		.word	hey
 252 0124 3C000000 		.word	.LC2
 253 0128 40000000 		.word	.LC3
 254              		.cfi_endproc
 255              	.LFE65:
 256              		.size	ReadyOrNot, .-ReadyOrNot
 257              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 258              		.align	2
 259              		.global	WorkWorkWorkWorkWorkWork
 260              		.thumb
 261              		.thumb_func
 262              		.type	WorkWorkWorkWorkWorkWork, %function
 263              	WorkWorkWorkWorkWorkWork:
 264              	.LFB66:
  98:notoriOS.c    **** 
  99:notoriOS.c    **** 
 100:notoriOS.c    **** // ==============================================
 101:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
 102:notoriOS.c    **** //      - Rhiana, feat Drake (2016)
 103:notoriOS.c    **** //
 104:notoriOS.c    **** // Prorcesses core tasks
 105:notoriOS.c    **** // ==============================================
 106:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
 107:notoriOS.c    **** {
 265              		.loc 1 107 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269 0000 80B5     		push	{r7, lr}
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 82B0     		sub	sp, sp, #8
 274              		.cfi_def_cfa_offset 16
 275 0004 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
 108:notoriOS.c    ****     
 109:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 110:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 111:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 8


 112:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 113:notoriOS.c    ****     
 114:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 115:notoriOS.c    ****     if(timeToSycnRemoteParams){
 277              		.loc 1 115 0
 278 0006 144B     		ldr	r3, .L10
 279 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 000a 002B     		cmp	r3, #0
 281 000c 06D0     		beq	.L6
 116:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
 282              		.loc 1 116 0
 283 000e FFF7FEFF 		bl	configureRemoteParams
 284 0012 0346     		mov	r3, r0
 285 0014 1A46     		mov	r2, r3
 286 0016 104B     		ldr	r3, .L10
 287 0018 1A70     		strb	r2, [r3]
 288 001a 14E0     		b	.L7
 289              	.L6:
 117:notoriOS.c    ****     }
 118:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 119:notoriOS.c    ****     else if(timeToMeasure){
 290              		.loc 1 119 0
 291 001c 0F4B     		ldr	r3, .L10+4
 292 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 293 0020 002B     		cmp	r3, #0
 294 0022 06D0     		beq	.L8
 120:notoriOS.c    ****         //(int i=0; i<=30; i++){
 121:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 295              		.loc 1 121 0
 296 0024 FFF7FEFF 		bl	makeMeasurements
 297 0028 0346     		mov	r3, r0
 298 002a 1A46     		mov	r2, r3
 299 002c 0B4B     		ldr	r3, .L10+4
 300 002e 1A70     		strb	r2, [r3]
 301 0030 09E0     		b	.L7
 302              	.L8:
 122:notoriOS.c    ****         //CyDelay(1000u);
 123:notoriOS.c    ****         //}
 124:notoriOS.c    ****     }else if(timeToSync){
 303              		.loc 1 124 0
 304 0032 0B4B     		ldr	r3, .L10+8
 305 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 0036 002B     		cmp	r3, #0
 307 0038 05D0     		beq	.L7
 125:notoriOS.c    ****             timeToSync = syncData();
 308              		.loc 1 125 0
 309 003a FFF7FEFF 		bl	syncData
 310 003e 0346     		mov	r3, r0
 311 0040 1A46     		mov	r2, r3
 312 0042 074B     		ldr	r3, .L10+8
 313 0044 1A70     		strb	r2, [r3]
 314              	.L7:
 126:notoriOS.c    ****     }
 127:notoriOS.c    ****     // Print the countdown to the next alarm
 128:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 129:notoriOS.c    ****     
 130:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 9


 131:notoriOS.c    ****     // Check modem state machine on every loop
 132:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
 315              		.loc 1 132 0
 316 0046 FFF7FEFF 		bl	modem_process_tasks
 317 004a 0346     		mov	r3, r0
 318 004c FB71     		strb	r3, [r7, #7]
 133:notoriOS.c    **** 
 134:notoriOS.c    ****     return 0u +  modem_status;  
 319              		.loc 1 134 0
 320 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 135:notoriOS.c    **** }
 321              		.loc 1 135 0
 322 0050 1846     		mov	r0, r3
 323 0052 0837     		adds	r7, r7, #8
 324              		.cfi_def_cfa_offset 8
 325 0054 BD46     		mov	sp, r7
 326              		.cfi_def_cfa_register 13
 327              		@ sp needed
 328 0056 80BD     		pop	{r7, pc}
 329              	.L11:
 330              		.align	2
 331              	.L10:
 332 0058 00000000 		.word	timeToSycnRemoteParams
 333 005c 00000000 		.word	timeToMeasure
 334 0060 00000000 		.word	timeToSync
 335              		.cfi_endproc
 336              	.LFE66:
 337              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 338              		.section	.text.LayBack,"ax",%progbits
 339              		.align	2
 340              		.global	LayBack
 341              		.thumb
 342              		.thumb_func
 343              		.type	LayBack, %function
 344              	LayBack:
 345              	.LFB67:
 136:notoriOS.c    **** 
 137:notoriOS.c    **** 
 138:notoriOS.c    **** 
 139:notoriOS.c    **** 
 140:notoriOS.c    **** 
 141:notoriOS.c    **** 
 142:notoriOS.c    **** // ==============================================
 143:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 144:notoriOS.c    **** //      - Snoop Dogg (1993)
 145:notoriOS.c    **** //
 146:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 147:notoriOS.c    **** // ==============================================
 148:notoriOS.c    **** void LayBack()
 149:notoriOS.c    **** {
 346              		.loc 1 149 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 10


 353              		.cfi_offset 14, -4
 354 0002 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 150:notoriOS.c    ****   
 151:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 356              		.loc 1 151 0
 357 0004 FFF7FEFF 		bl	modem_sleep
 152:notoriOS.c    ****     
 153:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 154:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 358              		.loc 1 154 0
 359 0008 FFF7FEFF 		bl	debug_sleep
 155:notoriOS.c    ****     
 156:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 360              		.loc 1 156 0
 361 000c FFF7FEFF 		bl	CyPmSaveClocks
 157:notoriOS.c    ****     
 158:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 159:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 160:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 161:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 162:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 163:notoriOS.c    ****     //CyPmHibernate();
 164:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 165:notoriOS.c    **** 
 166:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 362              		.loc 1 166 0
 363 0010 4FF40061 		mov	r1, #2048
 364 0014 0020     		movs	r0, #0
 365 0016 FFF7FEFF 		bl	CyPmSleep
 167:notoriOS.c    **** 
 168:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 366              		.loc 1 168 0
 367 001a FFF7FEFF 		bl	CyPmRestoreClocks
 169:notoriOS.c    **** 
 170:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 368              		.loc 1 170 0
 369 001e FFF7FEFF 		bl	debug_wakeup
 171:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 370              		.loc 1 171 0
 371 0022 FFF7FEFF 		bl	modem_wakeup
 172:notoriOS.c    **** 
 173:notoriOS.c    **** }
 372              		.loc 1 173 0
 373 0026 00BF     		nop
 374 0028 80BD     		pop	{r7, pc}
 375              		.cfi_endproc
 376              	.LFE67:
 377              		.size	LayBack, .-LayBack
 378 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 379              		.align	2
 380              		.global	AyoItsTime
 381              		.thumb
 382              		.thumb_func
 383              		.type	AyoItsTime, %function
 384              	AyoItsTime:
 385              	.LFB68:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 11


 174:notoriOS.c    **** 
 175:notoriOS.c    **** 
 176:notoriOS.c    **** // ==============================================
 177:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 178:notoriOS.c    **** //      - NAS (1994)
 179:notoriOS.c    **** //
 180:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 181:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 182:notoriOS.c    **** // It will add tasks to the work queue,
 183:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 184:notoriOS.c    **** // ==============================================
 185:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 186:notoriOS.c    **** {
 386              		.loc 1 186 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 8
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 82B0     		sub	sp, sp, #8
 395              		.cfi_def_cfa_offset 16
 396 0004 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
 398 0006 0346     		mov	r3, r0
 399 0008 FB71     		strb	r3, [r7, #7]
 187:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 188:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 400              		.loc 1 188 0
 401 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 402 000c 1946     		mov	r1, r3
 403 000e 0C48     		ldr	r0, .L17
 404 0010 FFF7FEFF 		bl	AlarmReady
 405 0014 0346     		mov	r3, r0
 406 0016 002B     		cmp	r3, #0
 407 0018 02D0     		beq	.L14
 189:notoriOS.c    ****     {
 190:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 191:notoriOS.c    ****         timeToMeasure = 1u;
 408              		.loc 1 191 0
 409 001a 0A4B     		ldr	r3, .L17+4
 410 001c 0122     		movs	r2, #1
 411 001e 1A70     		strb	r2, [r3]
 412              	.L14:
 192:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 193:notoriOS.c    ****         
 194:notoriOS.c    ****     }
 195:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 413              		.loc 1 195 0
 414 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 415 0022 1946     		mov	r1, r3
 416 0024 0848     		ldr	r0, .L17+8
 417 0026 FFF7FEFF 		bl	AlarmReady
 418 002a 0346     		mov	r3, r0
 419 002c 002B     		cmp	r3, #0
 420 002e 02D0     		beq	.L16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 12


 196:notoriOS.c    ****     {
 197:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 198:notoriOS.c    ****         timeToSync = 1u;
 421              		.loc 1 198 0
 422 0030 064B     		ldr	r3, .L17+12
 423 0032 0122     		movs	r2, #1
 424 0034 1A70     		strb	r2, [r3]
 425              	.L16:
 199:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 200:notoriOS.c    ****     }
 201:notoriOS.c    ****     
 202:notoriOS.c    **** }
 426              		.loc 1 202 0
 427 0036 00BF     		nop
 428 0038 0837     		adds	r7, r7, #8
 429              		.cfi_def_cfa_offset 8
 430 003a BD46     		mov	sp, r7
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 003c 80BD     		pop	{r7, pc}
 434              	.L18:
 435 003e 00BF     		.align	2
 436              	.L17:
 437 0040 00000000 		.word	alarmMeasure
 438 0044 00000000 		.word	timeToMeasure
 439 0048 00000000 		.word	alarmSync
 440 004c 00000000 		.word	timeToSync
 441              		.cfi_endproc
 442              	.LFE68:
 443              		.size	AyoItsTime, .-AyoItsTime
 444              		.section	.text.AlarmReady,"ax",%progbits
 445              		.align	2
 446              		.global	AlarmReady
 447              		.thumb
 448              		.thumb_func
 449              		.type	AlarmReady, %function
 450              	AlarmReady:
 451              	.LFB69:
 203:notoriOS.c    **** 
 204:notoriOS.c    **** 
 205:notoriOS.c    **** // ==============================================
 206:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 207:notoriOS.c    **** // ==============================================
 208:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 209:notoriOS.c    **** {
 452              		.loc 1 209 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 8
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 82B0     		sub	sp, sp, #8
 461              		.cfi_def_cfa_offset 16
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 13


 464 0006 7860     		str	r0, [r7, #4]
 465 0008 0B46     		mov	r3, r1
 466 000a FB70     		strb	r3, [r7, #3]
 210:notoriOS.c    ****     // if the countDownType matches the alarmType
 211:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 467              		.loc 1 211 0
 468 000c 7B68     		ldr	r3, [r7, #4]
 469 000e 1B79     		ldrb	r3, [r3, #4]
 470 0010 DBB2     		uxtb	r3, r3
 471 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 472 0014 9A42     		cmp	r2, r3
 473 0016 12D1     		bne	.L20
 212:notoriOS.c    ****        
 213:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 214:notoriOS.c    ****         // Decrement the count down value by 1
 215:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 474              		.loc 1 215 0
 475 0018 7B68     		ldr	r3, [r7, #4]
 476 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 477 001c 1BB2     		sxth	r3, r3
 478 001e 9BB2     		uxth	r3, r3
 479 0020 013B     		subs	r3, r3, #1
 480 0022 9BB2     		uxth	r3, r3
 481 0024 1AB2     		sxth	r2, r3
 482 0026 7B68     		ldr	r3, [r7, #4]
 483 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 216:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 217:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 484              		.loc 1 217 0
 485 002a 7B68     		ldr	r3, [r7, #4]
 486 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 487 002e 1BB2     		sxth	r3, r3
 488 0030 002B     		cmp	r3, #0
 489 0032 04DC     		bgt	.L20
 218:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 490              		.loc 1 218 0
 491 0034 7868     		ldr	r0, [r7, #4]
 492 0036 FFF7FEFF 		bl	ResetAlarm
 219:notoriOS.c    ****             return 1u;
 493              		.loc 1 219 0
 494 003a 0123     		movs	r3, #1
 495 003c 00E0     		b	.L21
 496              	.L20:
 220:notoriOS.c    ****         } 
 221:notoriOS.c    ****     }
 222:notoriOS.c    ****     
 223:notoriOS.c    ****     return 0u; // Otherwise return 0
 497              		.loc 1 223 0
 498 003e 0023     		movs	r3, #0
 499              	.L21:
 224:notoriOS.c    **** }
 500              		.loc 1 224 0
 501 0040 1846     		mov	r0, r3
 502 0042 0837     		adds	r7, r7, #8
 503              		.cfi_def_cfa_offset 8
 504 0044 BD46     		mov	sp, r7
 505              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 14


 506              		@ sp needed
 507 0046 80BD     		pop	{r7, pc}
 508              		.cfi_endproc
 509              	.LFE69:
 510              		.size	AlarmReady, .-AlarmReady
 511              		.section	.text.ResetAlarm,"ax",%progbits
 512              		.align	2
 513              		.global	ResetAlarm
 514              		.thumb
 515              		.thumb_func
 516              		.type	ResetAlarm, %function
 517              	ResetAlarm:
 518              	.LFB70:
 225:notoriOS.c    **** 
 226:notoriOS.c    **** // ==============================================
 227:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 228:notoriOS.c    **** // ==============================================
 229:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 230:notoriOS.c    **** {
 519              		.loc 1 230 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0000 80B4     		push	{r7}
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0002 83B0     		sub	sp, sp, #12
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 231:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 232:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 532              		.loc 1 232 0
 533 0008 7B68     		ldr	r3, [r7, #4]
 534 000a 1B88     		ldrh	r3, [r3]	@ movhi
 535 000c 9BB2     		uxth	r3, r3
 536 000e 1AB2     		sxth	r2, r3
 537 0010 7B68     		ldr	r3, [r7, #4]
 538 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 233:notoriOS.c    **** }
 539              		.loc 1 233 0
 540 0014 00BF     		nop
 541 0016 0C37     		adds	r7, r7, #12
 542              		.cfi_def_cfa_offset 4
 543 0018 BD46     		mov	sp, r7
 544              		.cfi_def_cfa_register 13
 545              		@ sp needed
 546 001a 80BC     		pop	{r7}
 547              		.cfi_restore 7
 548              		.cfi_def_cfa_offset 0
 549 001c 7047     		bx	lr
 550              		.cfi_endproc
 551              	.LFE70:
 552              		.size	ResetAlarm, .-ResetAlarm
 553 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 15


 554              		.align	2
 555              		.global	CreateAlarm
 556              		.thumb
 557              		.thumb_func
 558              		.type	CreateAlarm, %function
 559              	CreateAlarm:
 560              	.LFB71:
 234:notoriOS.c    **** 
 235:notoriOS.c    **** // ==============================================
 236:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 237:notoriOS.c    **** // ==============================================
 238:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 239:notoriOS.c    **** {
 561              		.loc 1 239 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 16
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566 0000 80B4     		push	{r7}
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 0002 85B0     		sub	sp, sp, #20
 570              		.cfi_def_cfa_offset 24
 571 0004 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 573 0006 7860     		str	r0, [r7, #4]
 574 0008 0846     		mov	r0, r1
 575 000a 1146     		mov	r1, r2
 576 000c 1A46     		mov	r2, r3
 577 000e 0346     		mov	r3, r0	@ movhi
 578 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 579 0012 0B46     		mov	r3, r1
 580 0014 7B70     		strb	r3, [r7, #1]
 581 0016 1346     		mov	r3, r2
 582 0018 3B70     		strb	r3, [r7]
 240:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 241:notoriOS.c    ****     alarm newAlarm;
 242:notoriOS.c    ****     
 243:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 244:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 583              		.loc 1 244 0
 584 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 585 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 245:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 586              		.loc 1 245 0
 587 001e 7B78     		ldrb	r3, [r7, #1]
 588 0020 3B73     		strb	r3, [r7, #12]
 246:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 589              		.loc 1 246 0
 590 0022 3B78     		ldrb	r3, [r7]
 591 0024 7B73     		strb	r3, [r7, #13]
 247:notoriOS.c    ****     
 248:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 249:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 250:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 592              		.loc 1 250 0
 593 0026 B7F90230 		ldrsh	r3, [r7, #2]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 16


 594 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 251:notoriOS.c    ****     
 252:notoriOS.c    ****     return newAlarm;
 595              		.loc 1 252 0
 596 002c 7B68     		ldr	r3, [r7, #4]
 597 002e 1A46     		mov	r2, r3
 598 0030 07F10803 		add	r3, r7, #8
 599 0034 1868     		ldr	r0, [r3]	@ unaligned
 600 0036 1060     		str	r0, [r2]	@ unaligned
 601 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 602 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 253:notoriOS.c    ****     
 254:notoriOS.c    **** }
 603              		.loc 1 254 0
 604 003c 7868     		ldr	r0, [r7, #4]
 605 003e 1437     		adds	r7, r7, #20
 606              		.cfi_def_cfa_offset 4
 607 0040 BD46     		mov	sp, r7
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 0042 80BC     		pop	{r7}
 611              		.cfi_restore 7
 612              		.cfi_def_cfa_offset 0
 613 0044 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE71:
 616              		.size	CreateAlarm, .-CreateAlarm
 617              		.global	__aeabi_f2d
 618 0046 00BF     		.section	.rodata
 619 0047 00       		.align	2
 620              	.LC4:
 621 0048 256600   		.ascii	"%f\000"
 622 004b 00       		.align	2
 623              	.LC5:
 624 004c 736F6E74 		.ascii	"sontek_depth=%s\000"
 624      656B5F64 
 624      65707468 
 624      3D257300 
 625              		.align	2
 626              	.LC6:
 627 005c 736F6E74 		.ascii	"sontek_SNR1=%s\000"
 627      656B5F53 
 627      4E52313D 
 627      257300
 628 006b 00       		.align	2
 629              	.LC7:
 630 006c 736F6E74 		.ascii	"sontek_SNR2=%s\000"
 630      656B5F53 
 630      4E52323D 
 630      257300
 631 007b 00       		.align	2
 632              	.LC8:
 633 007c 736F6E74 		.ascii	"sontek_SNR3=%s\000"
 633      656B5F53 
 633      4E52333D 
 633      257300
 634 008b 00       		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 17


 635              	.LC9:
 636 008c 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 636      2D2D2D2D 
 636      2D2D2D2D 
 636      2D424547 
 636      494E2054 
 637 00b6 0000     		.align	2
 638              	.LC10:
 639 00b8 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\012\000"
 639      3D25732C 
 639      2053494D 
 639      49443D25 
 639      732C2044 
 640              		.align	2
 641              	.LC11:
 642 00d8 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 642      2D2D2D2D 
 642      2D2D2D2D 
 642      2D2D2D45 
 642      4E442054 
 643 0101 00       		.ascii	"\000"
 644              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 645              		.align	2
 646              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 647              		.thumb
 648              		.thumb_func
 649              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 650              	ChickityCheckYourselfBeforeYouWreckYourself:
 651              	.LFB72:
 255:notoriOS.c    **** 
 256:notoriOS.c    **** // ==============================================
 257:notoriOS.c    **** // Dropping bombs on your moms
 258:notoriOS.c    **** //      - Ice Cube (1992)
 259:notoriOS.c    **** //
 260:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 261:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 262:notoriOS.c    **** // ==============================================
 263:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 652              		.loc 1 263 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 1600
 655              		@ frame_needed = 1, uses_anonymous_args = 0
 656 0000 90B5     		push	{r4, r7, lr}
 657              		.cfi_def_cfa_offset 12
 658              		.cfi_offset 4, -12
 659              		.cfi_offset 7, -8
 660              		.cfi_offset 14, -4
 661 0002 ADF2BC7D 		subw	sp, sp, #1980
 662              		.cfi_def_cfa_offset 1992
 663 0006 5EAF     		add	r7, sp, #376
 664              		.cfi_def_cfa 7, 1616
 264:notoriOS.c    **** 
 265:notoriOS.c    ****     //test_t t_influx = influx_test();
 266:notoriOS.c    ****     //printTestStatus(t_influx);
 267:notoriOS.c    ****         SDI12_Power_Write(1u);
 665              		.loc 1 267 0
 666 0008 0120     		movs	r0, #1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 18


 667 000a FFF7FEFF 		bl	SDI12_Power_Write
 268:notoriOS.c    ****         SDI12_Power_Write(0u);
 668              		.loc 1 268 0
 669 000e 0020     		movs	r0, #0
 670 0010 FFF7FEFF 		bl	SDI12_Power_Write
 269:notoriOS.c    ****     // Take sontek readings and save them to m_sontek
 270:notoriOS.c    ****         char value[DATA_MAX_KEY_LENGTH];
 271:notoriOS.c    ****         // sontek_t is a new data type we defined in sontek.h. We then use that data type to define
 272:notoriOS.c    ****         sontek_t m_sontek;
 273:notoriOS.c    ****         
 274:notoriOS.c    ****         // Take sontek readings and save them to m_sontek
 275:notoriOS.c    ****         m_sontek = sontek_take_reading();
 671              		.loc 1 275 0
 672 0014 07F21463 		addw	r3, r7, #1556
 673 0018 1846     		mov	r0, r3
 674 001a FFF7FEFF 		bl	sontek_take_reading
 276:notoriOS.c    ****          snprintf(value,sizeof(value),"%f",m_sontek.depth);
 675              		.loc 1 276 0
 676 001e D7F81836 		ldr	r3, [r7, #1560]	@ float
 677 0022 1846     		mov	r0, r3
 678 0024 FFF7FEFF 		bl	__aeabi_f2d
 679 0028 0346     		mov	r3, r0
 680 002a 0C46     		mov	r4, r1
 681 002c 07F22C60 		addw	r0, r7, #1580
 682 0030 CDE90034 		strd	r3, [sp]
 683 0034 554A     		ldr	r2, .L26
 684 0036 1421     		movs	r1, #20
 685 0038 FFF7FEFF 		bl	snprintf
 277:notoriOS.c    ****          printNotif(NOTIF_TYPE_EVENT,"sontek_depth=%s",value);
 686              		.loc 1 277 0
 687 003c 07F22C63 		addw	r3, r7, #1580
 688 0040 1A46     		mov	r2, r3
 689 0042 5349     		ldr	r1, .L26+4
 690 0044 0020     		movs	r0, #0
 691 0046 FFF7FEFF 		bl	printNotif
 278:notoriOS.c    ****         
 279:notoriOS.c    ****         snprintf(value,sizeof(value),"%f",m_sontek.SNR1);
 692              		.loc 1 279 0
 693 004a D7F81C36 		ldr	r3, [r7, #1564]	@ float
 694 004e 1846     		mov	r0, r3
 695 0050 FFF7FEFF 		bl	__aeabi_f2d
 696 0054 0346     		mov	r3, r0
 697 0056 0C46     		mov	r4, r1
 698 0058 07F22C60 		addw	r0, r7, #1580
 699 005c CDE90034 		strd	r3, [sp]
 700 0060 4A4A     		ldr	r2, .L26
 701 0062 1421     		movs	r1, #20
 702 0064 FFF7FEFF 		bl	snprintf
 280:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"sontek_SNR1=%s",value);
 703              		.loc 1 280 0
 704 0068 07F22C63 		addw	r3, r7, #1580
 705 006c 1A46     		mov	r2, r3
 706 006e 4949     		ldr	r1, .L26+8
 707 0070 0020     		movs	r0, #0
 708 0072 FFF7FEFF 		bl	printNotif
 281:notoriOS.c    ****             
 282:notoriOS.c    ****             
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 19


 283:notoriOS.c    ****             snprintf(value,sizeof(value),"%f",m_sontek.SNR2);
 709              		.loc 1 283 0
 710 0076 D7F82036 		ldr	r3, [r7, #1568]	@ float
 711 007a 1846     		mov	r0, r3
 712 007c FFF7FEFF 		bl	__aeabi_f2d
 713 0080 0346     		mov	r3, r0
 714 0082 0C46     		mov	r4, r1
 715 0084 07F22C60 		addw	r0, r7, #1580
 716 0088 CDE90034 		strd	r3, [sp]
 717 008c 3F4A     		ldr	r2, .L26
 718 008e 1421     		movs	r1, #20
 719 0090 FFF7FEFF 		bl	snprintf
 284:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"sontek_SNR2=%s",value);
 720              		.loc 1 284 0
 721 0094 07F22C63 		addw	r3, r7, #1580
 722 0098 1A46     		mov	r2, r3
 723 009a 3F49     		ldr	r1, .L26+12
 724 009c 0020     		movs	r0, #0
 725 009e FFF7FEFF 		bl	printNotif
 285:notoriOS.c    ****             
 286:notoriOS.c    **** 
 287:notoriOS.c    ****             snprintf(value,sizeof(value),"%f",m_sontek.SNR3);
 726              		.loc 1 287 0
 727 00a2 D7F82436 		ldr	r3, [r7, #1572]	@ float
 728 00a6 1846     		mov	r0, r3
 729 00a8 FFF7FEFF 		bl	__aeabi_f2d
 730 00ac 0346     		mov	r3, r0
 731 00ae 0C46     		mov	r4, r1
 732 00b0 07F22C60 		addw	r0, r7, #1580
 733 00b4 CDE90034 		strd	r3, [sp]
 734 00b8 344A     		ldr	r2, .L26
 735 00ba 1421     		movs	r1, #20
 736 00bc FFF7FEFF 		bl	snprintf
 288:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"sontek_SNR3=%s",value);
 737              		.loc 1 288 0
 738 00c0 07F22C63 		addw	r3, r7, #1580
 739 00c4 1A46     		mov	r2, r3
 740 00c6 3549     		ldr	r1, .L26+16
 741 00c8 0020     		movs	r0, #0
 742 00ca FFF7FEFF 		bl	printNotif
 289:notoriOS.c    **** 
 290:notoriOS.c    ****             
 291:notoriOS.c    ****     
 292:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 743              		.loc 1 292 0
 744 00ce 3449     		ldr	r1, .L26+20
 745 00d0 0320     		movs	r0, #3
 746 00d2 FFF7FEFF 		bl	printNotif
 293:notoriOS.c    ****     
 294:notoriOS.c    ****     // Test modem
 295:notoriOS.c    ****     test_t t_modem = modem_test();
 747              		.loc 1 295 0
 748 00d6 07F59263 		add	r3, r7, #1168
 749 00da 1846     		mov	r0, r3
 750 00dc FFF7FEFF 		bl	modem_test
 296:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s\n",modem_info.imei,modem_info.sim
 751              		.loc 1 296 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 20


 752 00e0 304B     		ldr	r3, .L26+24
 753 00e2 0093     		str	r3, [sp]
 754 00e4 304B     		ldr	r3, .L26+28
 755 00e6 314A     		ldr	r2, .L26+32
 756 00e8 3149     		ldr	r1, .L26+36
 757 00ea 0320     		movs	r0, #3
 758 00ec FFF7FEFF 		bl	printNotif
 297:notoriOS.c    ****     printTestStatus(t_modem);
 759              		.loc 1 297 0
 760 00f0 07F59264 		add	r4, r7, #1168
 761 00f4 6846     		mov	r0, sp
 762 00f6 04F11003 		add	r3, r4, #16
 763 00fa 40F27112 		movw	r2, #369
 764 00fe 1946     		mov	r1, r3
 765 0100 FFF7FEFF 		bl	memcpy
 766 0104 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 767 0108 FFF7FEFF 		bl	printTestStatus
 298:notoriOS.c    ****     
 299:notoriOS.c    ****     // Test level sensor
 300:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 768              		.loc 1 300 0
 769 010c 07F54373 		add	r3, r7, #780
 770 0110 1846     		mov	r0, r3
 771 0112 FFF7FEFF 		bl	level_sensor_test
 301:notoriOS.c    ****     printTestStatus(t_level_sensor);
 772              		.loc 1 301 0
 773 0116 07F54374 		add	r4, r7, #780
 774 011a 6846     		mov	r0, sp
 775 011c 04F11003 		add	r3, r4, #16
 776 0120 40F27112 		movw	r2, #369
 777 0124 1946     		mov	r1, r3
 778 0126 FFF7FEFF 		bl	memcpy
 779 012a 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 780 012e FFF7FEFF 		bl	printTestStatus
 302:notoriOS.c    ****     
 303:notoriOS.c    ****     // Test voltages
 304:notoriOS.c    ****     test_t t_voltages = voltages_test();
 781              		.loc 1 304 0
 782 0132 07F5C473 		add	r3, r7, #392
 783 0136 1846     		mov	r0, r3
 784 0138 FFF7FEFF 		bl	voltages_test
 305:notoriOS.c    ****     printTestStatus(t_voltages);
 785              		.loc 1 305 0
 786 013c 07F5C474 		add	r4, r7, #392
 787 0140 6846     		mov	r0, sp
 788 0142 04F11003 		add	r3, r4, #16
 789 0146 40F27112 		movw	r2, #369
 790 014a 1946     		mov	r1, r3
 791 014c FFF7FEFF 		bl	memcpy
 792 0150 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 793 0154 FFF7FEFF 		bl	printTestStatus
 306:notoriOS.c    ****     
 307:notoriOS.c    ****     // Test SD card
 308:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 794              		.loc 1 308 0
 795 0158 3B1D     		adds	r3, r7, #4
 796 015a 1846     		mov	r0, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 21


 797 015c FFF7FEFF 		bl	SD_card_test
 309:notoriOS.c    ****     printTestStatus(t_sd_card);
 798              		.loc 1 309 0
 799 0160 3C1D     		adds	r4, r7, #4
 800 0162 6846     		mov	r0, sp
 801 0164 04F11003 		add	r3, r4, #16
 802 0168 40F27112 		movw	r2, #369
 803 016c 1946     		mov	r1, r3
 804 016e FFF7FEFF 		bl	memcpy
 805 0172 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 806 0176 FFF7FEFF 		bl	printTestStatus
 310:notoriOS.c    ****     
 311:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 807              		.loc 1 311 0
 808 017a 0E49     		ldr	r1, .L26+40
 809 017c 0320     		movs	r0, #3
 810 017e FFF7FEFF 		bl	printNotif
 312:notoriOS.c    **** 
 313:notoriOS.c    **** }
 811              		.loc 1 313 0
 812 0182 00BF     		nop
 813 0184 07F24467 		addw	r7, r7, #1604
 814              		.cfi_def_cfa_offset 12
 815 0188 BD46     		mov	sp, r7
 816              		.cfi_def_cfa_register 13
 817              		@ sp needed
 818 018a 90BD     		pop	{r4, r7, pc}
 819              	.L27:
 820              		.align	2
 821              	.L26:
 822 018c 48000000 		.word	.LC4
 823 0190 4C000000 		.word	.LC5
 824 0194 5C000000 		.word	.LC6
 825 0198 6C000000 		.word	.LC7
 826 019c 7C000000 		.word	.LC8
 827 01a0 8C000000 		.word	.LC9
 828 01a4 04000000 		.word	system_info+4
 829 01a8 00000000 		.word	modem_info
 830 01ac 28000000 		.word	modem_info+40
 831 01b0 B8000000 		.word	.LC10
 832 01b4 D8000000 		.word	.LC11
 833              		.cfi_endproc
 834              	.LFE72:
 835              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 836              		.section	.text.main,"ax",%progbits
 837              		.align	2
 838              		.global	main
 839              		.thumb
 840              		.thumb_func
 841              		.type	main, %function
 842              	main:
 843              	.LFB73:
 314:notoriOS.c    **** 
 315:notoriOS.c    **** // ==============================================
 316:notoriOS.c    **** // Processes Core Tasks
 317:notoriOS.c    **** // ==============================================
 318:notoriOS.c    **** int main(void)
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 22


 319:notoriOS.c    **** {
 844              		.loc 1 319 0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 0
 847              		@ frame_needed = 1, uses_anonymous_args = 0
 848 0000 80B5     		push	{r7, lr}
 849              		.cfi_def_cfa_offset 8
 850              		.cfi_offset 7, -8
 851              		.cfi_offset 14, -4
 852 0002 00AF     		add	r7, sp, #0
 853              		.cfi_def_cfa_register 7
 320:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 854              		.loc 1 320 0
 855              		.syntax unified
 856              	@ 320 "notoriOS.c" 1
 857 0004 62B6     		CPSIE   i
 858              	@ 0 "" 2
 321:notoriOS.c    **** 
 322:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 859              		.loc 1 322 0
 860              		.thumb
 861              		.syntax unified
 862 0006 FFF7FEFF 		bl	ReadyOrNot
 323:notoriOS.c    ****     
 324:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 863              		.loc 1 324 0
 864 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 865              	.L30:
 325:notoriOS.c    ****    
 326:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 327:notoriOS.c    ****     {
 328:notoriOS.c    ****         
 329:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 866              		.loc 1 329 0
 867 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 868 0012 0346     		mov	r3, r0
 869 0014 002B     		cmp	r3, #0
 870 0016 FAD1     		bne	.L30
 330:notoriOS.c    ****         {
 331:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
 871              		.loc 1 331 0
 872 0018 FFF7FEFF 		bl	LayBack
 332:notoriOS.c    ****         }
 333:notoriOS.c    ****     }
 873              		.loc 1 333 0
 874 001c F7E7     		b	.L30
 875              		.cfi_endproc
 876              	.LFE73:
 877              		.size	main, .-main
 878 001e 00BF     		.section	.rodata
 879 0102 0000     		.align	2
 880              	.LC12:
 881 0104 4D6F6465 		.ascii	"Modem is ready.\000"
 881      6D206973 
 881      20726561 
 881      64792E00 
 882              		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 23


 883              	.LC13:
 884 0114 72737270 		.ascii	"rsrp\000"
 884      00
 885 0119 000000   		.align	2
 886              	.LC14:
 887 011c 7472795F 		.ascii	"try_counter\000"
 887      636F756E 
 887      74657200 
 888              		.align	2
 889              	.LC15:
 890 0128 64617461 		.ascii	"data_count_sent\000"
 890      5F636F75 
 890      6E745F73 
 890      656E7400 
 891              		.align	2
 892              	.LC16:
 893 0138 64617461 		.ascii	"data_count_desired\000"
 893      5F636F75 
 893      6E745F64 
 893      65736972 
 893      656400
 894 014b 00       		.align	2
 895              	.LC17:
 896 014c 42656769 		.ascii	"Begin HTTP post.\000"
 896      6E204854 
 896      54502070 
 896      6F73742E 
 896      00
 897 015d 000000   		.align	2
 898              	.LC18:
 899 0160 31383761 		.ascii	"187a20bfa817018c4023093348f716967aaac754\000"
 899      32306266 
 899      61383137 
 899      30313863 
 899      34303233 
 900 0189 000000   		.align	2
 901              	.LC19:
 902 018c 6170692F 		.ascii	"api/v1/write\000"
 902      76312F77 
 902      72697465 
 902      00
 903 0199 000000   		.align	2
 904              	.LC20:
 905 019c 48545450 		.ascii	"HTTP route: %s\000"
 905      20726F75 
 905      74653A20 
 905      257300
 906 01ab 00       		.align	2
 907              	.LC21:
 908 01ac 312E3100 		.ascii	"1.1\000"
 909              		.align	2
 910              	.LC22:
 911 01b0 00       		.ascii	"\000"
 912 01b1 000000   		.align	2
 913              	.LC23:
 914 01b4 436C6F73 		.ascii	"Close\000"
 914      6500
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 24


 915 01ba 0000     		.align	2
 916              	.LC24:
 917 01bc 504F5354 		.ascii	"POST\000"
 917      00
 918 01c1 000000   		.align	2
 919              	.LC25:
 920 01c4 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 920      20485454 
 920      50205265 
 920      71756573 
 920      743A2025 
 921 01da 0000     		.align	2
 922              	.LC26:
 923 01dc 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 923      443D312C 
 923      302C2564 
 923      2C222573 
 923      222C302C 
 924 01f5 000000   		.align	2
 925              	.LC27:
 926 01f8 257300   		.ascii	"%s\000"
 927 01fb 00       		.align	2
 928              	.LC28:
 929 01fc 4F4B00   		.ascii	"OK\000"
 930              		.global	__aeabi_ui2d
 931              		.global	__aeabi_d2iz
 932 01ff 00       		.align	2
 933              	.LC29:
 934 0200 68747470 		.ascii	"http_request len: %d\000"
 934      5F726571 
 934      75657374 
 934      206C656E 
 934      3A202564 
 935 0215 000000   		.align	2
 936              	.LC30:
 937 0218 23206F66 		.ascii	"# of packets: %d\000"
 937      20706163 
 937      6B657473 
 937      3A202564 
 937      00
 938 0229 000000   		.align	2
 939              	.LC31:
 940 022c 3E00     		.ascii	">\000"
 941 022e 0000     		.align	2
 942              	.LC32:
 943 0230 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 943      53454E44 
 943      3D310D0A 
 943      00
 944 023d 000000   		.align	2
 945              	.LC33:
 946 0240 1A00     		.ascii	"\032\000"
 947 0242 0000     		.align	2
 948              	.LC34:
 949 0244 6368756E 		.ascii	"chunk %d: %s\000"
 949      6B202564 
 949      3A202573 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 25


 949      00
 950 0251 000000   		.align	2
 951              	.LC35:
 952 0254 5352494E 		.ascii	"SRING\000"
 952      4700
 953 025a 0000     		.align	2
 954              	.LC36:
 955 025c 4F532D4F 		.ascii	"OS-OK\000"
 955      4B00
 956 0262 0000     		.align	2
 957              	.LC37:
 958 0264 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 958      52454356 
 958      3D312C31 
 958      3030300D 
 958      00
 959 0275 000000   		.align	2
 960              	.LC38:
 961 0278 6D6F6465 		.ascii	"modem_tx_time\000"
 961      6D5F7478 
 961      5F74696D 
 961      6500
 962 0286 0000     		.align	2
 963              	.LC39:
 964 0288 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 964      4F3A2043 
 964      6F756C64 
 964      206E6F74 
 964      20726563 
 965              		.section	.text.syncData,"ax",%progbits
 966              		.align	2
 967              		.global	syncData
 968              		.thumb
 969              		.thumb_func
 970              		.type	syncData, %function
 971              	syncData:
 972              	.LFB74:
 334:notoriOS.c    **** }
 335:notoriOS.c    **** 
 336:notoriOS.c    **** // ==============================================
 337:notoriOS.c    **** // Syncs data with server
 338:notoriOS.c    **** // Returns 0 when done
 339:notoriOS.c    **** // ==============================================
 340:notoriOS.c    **** uint8 syncData(){
 973              		.loc 1 340 0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 1336
 976              		@ frame_needed = 1, uses_anonymous_args = 0
 977 0000 90B5     		push	{r4, r7, lr}
 978              		.cfi_def_cfa_offset 12
 979              		.cfi_offset 4, -12
 980              		.cfi_offset 7, -8
 981              		.cfi_offset 14, -4
 982 0002 ADF2545D 		subw	sp, sp, #1364
 983              		.cfi_def_cfa_offset 1376
 984 0006 06AF     		add	r7, sp, #24
 985              		.cfi_def_cfa 7, 1352
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 26


 341:notoriOS.c    ****     
 342:notoriOS.c    ****     /*
 343:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 344:notoriOS.c    ****     uint8 check = 0;
 345:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 346:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 347:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 348:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 349:notoriOS.c    ****     */
 350:notoriOS.c    **** 
 351:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 352:notoriOS.c    ****     LED_Write(1u);
 986              		.loc 1 352 0
 987 0008 0120     		movs	r0, #1
 988 000a FFF7FEFF 		bl	LED_Write
 353:notoriOS.c    ****     CyDelay(100u);
 989              		.loc 1 353 0
 990 000e 6420     		movs	r0, #100
 991 0010 FFF7FEFF 		bl	CyDelay
 354:notoriOS.c    ****     LED_Write(0u);
 992              		.loc 1 354 0
 993 0014 0020     		movs	r0, #0
 994 0016 FFF7FEFF 		bl	LED_Write
 355:notoriOS.c    **** 
 356:notoriOS.c    ****     
 357:notoriOS.c    ****     // If there's no data, not need to do anything
 358:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 995              		.loc 1 358 0
 996 001a FFF7FEFF 		bl	sizeOfDataStack
 997 001e 0346     		mov	r3, r0
 998 0020 002B     		cmp	r3, #0
 999 0022 01D1     		bne	.L32
 359:notoriOS.c    ****         return 0u;
 1000              		.loc 1 359 0
 1001 0024 0023     		movs	r3, #0
 1002 0026 F9E1     		b	.L33
 1003              	.L32:
 360:notoriOS.c    ****         }
 361:notoriOS.c    ****     
 362:notoriOS.c    ****     // Create request body, in this case influx
 363:notoriOS.c    ****     // Place body into HTTP request header
 364:notoriOS.c    ****     // Fire up modem and get it out
 365:notoriOS.c    ****      
 366:notoriOS.c    ****     
 367:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 368:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1004              		.loc 1 368 0
 1005 0028 FFF7FEFF 		bl	modem_get_state
 1006 002c 0346     		mov	r3, r0
 1007 002e 002B     		cmp	r3, #0
 1008 0030 11D1     		bne	.L34
 369:notoriOS.c    **** 
 370:notoriOS.c    ****         try_counter++;
 1009              		.loc 1 370 0
 1010 0032 C74B     		ldr	r3, .L46
 1011 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1012 0036 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 27


 1013 0038 DAB2     		uxtb	r2, r3
 1014 003a C54B     		ldr	r3, .L46
 1015 003c 1A70     		strb	r2, [r3]
 371:notoriOS.c    ****         	
 372:notoriOS.c    ****         if(try_counter <= 2){
 1016              		.loc 1 372 0
 1017 003e C44B     		ldr	r3, .L46
 1018 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1019 0042 022B     		cmp	r3, #2
 1020 0044 02D8     		bhi	.L35
 373:notoriOS.c    ****             modem_power_up();
 1021              		.loc 1 373 0
 1022 0046 FFF7FEFF 		bl	modem_power_up
 1023 004a E6E1     		b	.L36
 1024              	.L35:
 374:notoriOS.c    ****         }else{
 375:notoriOS.c    ****             try_counter = 0;
 1025              		.loc 1 375 0
 1026 004c C04B     		ldr	r3, .L46
 1027 004e 0022     		movs	r2, #0
 1028 0050 1A70     		strb	r2, [r3]
 376:notoriOS.c    ****             return 0u;
 1029              		.loc 1 376 0
 1030 0052 0023     		movs	r3, #0
 1031 0054 E2E1     		b	.L33
 1032              	.L34:
 377:notoriOS.c    ****             }
 378:notoriOS.c    ****             
 379:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1033              		.loc 1 379 0
 1034 0056 FFF7FEFF 		bl	modem_get_state
 1035 005a 0346     		mov	r3, r0
 1036 005c 042B     		cmp	r3, #4
 1037 005e 40F0DC81 		bne	.L36
 1038              	.LBB2:
 380:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 1039              		.loc 1 380 0
 1040 0062 BC49     		ldr	r1, .L46+4
 1041 0064 0020     		movs	r0, #0
 1042 0066 FFF7FEFF 		bl	printNotif
 381:notoriOS.c    ****         
 382:notoriOS.c    ****         http_request[0] = '\0';
 1043              		.loc 1 382 0
 1044 006a BB4B     		ldr	r3, .L46+8
 1045 006c 0022     		movs	r2, #0
 1046 006e 1A70     		strb	r2, [r3]
 383:notoriOS.c    ****         http_body[0] = '\0';
 1047              		.loc 1 383 0
 1048 0070 BA4B     		ldr	r3, .L46+12
 1049 0072 0022     		movs	r2, #0
 1050 0074 1A70     		strb	r2, [r3]
 384:notoriOS.c    ****         http_route[0] = '\0';
 1051              		.loc 1 384 0
 1052 0076 BA4B     		ldr	r3, .L46+16
 1053 0078 0022     		movs	r2, #0
 1054 007a 1A70     		strb	r2, [r3]
 385:notoriOS.c    ****         //char *base = "write";
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 28


 386:notoriOS.c    ****         
 387:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power)
 388:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 389:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 1055              		.loc 1 389 0
 1056 007c B94B     		ldr	r3, .L46+20
 1057 007e 5B69     		ldr	r3, [r3, #20]
 1058 0080 07F5A260 		add	r0, r7, #1296
 1059 0084 B84A     		ldr	r2, .L46+24
 1060 0086 1421     		movs	r1, #20
 1061 0088 FFF7FEFF 		bl	snprintf
 390:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 1062              		.loc 1 390 0
 1063 008c FFF7FEFF 		bl	getTimeStamp
 1064 0090 0246     		mov	r2, r0
 1065 0092 07F5A263 		add	r3, r7, #1296
 1066 0096 1946     		mov	r1, r3
 1067 0098 B448     		ldr	r0, .L46+28
 1068 009a FFF7FEFF 		bl	pushData
 391:notoriOS.c    ****         
 392:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 393:notoriOS.c    ****         char c_try_counter[20];
 394:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 1069              		.loc 1 394 0
 1070 009e AC4B     		ldr	r3, .L46
 1071 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1072 00a2 07F2FC40 		addw	r0, r7, #1276
 1073 00a6 B04A     		ldr	r2, .L46+24
 1074 00a8 1421     		movs	r1, #20
 1075 00aa FFF7FEFF 		bl	snprintf
 395:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 1076              		.loc 1 395 0
 1077 00ae FFF7FEFF 		bl	getTimeStamp
 1078 00b2 0246     		mov	r2, r0
 1079 00b4 07F2FC43 		addw	r3, r7, #1276
 1080 00b8 1946     		mov	r1, r3
 1081 00ba AD48     		ldr	r0, .L46+32
 1082 00bc FFF7FEFF 		bl	pushData
 396:notoriOS.c    ****         
 397:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
 398:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 399:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 400:notoriOS.c    ****         if(buffer_overflow == false){
 1083              		.loc 1 400 0
 1084 00c0 AC4B     		ldr	r3, .L46+36
 1085 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1086 00c4 83F00103 		eor	r3, r3, #1
 1087 00c8 DBB2     		uxtb	r3, r3
 1088 00ca 002B     		cmp	r3, #0
 1089 00cc 16D0     		beq	.L37
 1090              	.LBB3:
 401:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 1091              		.loc 1 401 0
 1092 00ce FFF7FEFF 		bl	sizeOfDataStack
 1093 00d2 0346     		mov	r3, r0
 1094 00d4 A7F83035 		strh	r3, [r7, #1328]	@ movhi
 402:notoriOS.c    ****             char c_data_count_sent[20];
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 29


 403:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 1095              		.loc 1 403 0
 1096 00d8 B7F83035 		ldrh	r3, [r7, #1328]
 1097 00dc 07F2D440 		addw	r0, r7, #1236
 1098 00e0 A14A     		ldr	r2, .L46+24
 1099 00e2 1421     		movs	r1, #20
 1100 00e4 FFF7FEFF 		bl	snprintf
 404:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1101              		.loc 1 404 0
 1102 00e8 FFF7FEFF 		bl	getTimeStamp
 1103 00ec 0246     		mov	r2, r0
 1104 00ee 07F2D443 		addw	r3, r7, #1236
 1105 00f2 1946     		mov	r1, r3
 1106 00f4 A048     		ldr	r0, .L46+40
 1107 00f6 FFF7FEFF 		bl	pushData
 1108              	.LBE3:
 1109 00fa 0FE0     		b	.L38
 1110              	.L37:
 1111              	.LBB4:
 405:notoriOS.c    ****         }else{
 406:notoriOS.c    ****             char c_data_count_sent[20];
 407:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1112              		.loc 1 407 0
 1113 00fc 07F59860 		add	r0, r7, #1216
 1114 0100 9623     		movs	r3, #150
 1115 0102 994A     		ldr	r2, .L46+24
 1116 0104 1421     		movs	r1, #20
 1117 0106 FFF7FEFF 		bl	snprintf
 408:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1118              		.loc 1 408 0
 1119 010a FFF7FEFF 		bl	getTimeStamp
 1120 010e 0246     		mov	r2, r0
 1121 0110 07F59863 		add	r3, r7, #1216
 1122 0114 1946     		mov	r1, r3
 1123 0116 9848     		ldr	r0, .L46+40
 1124 0118 FFF7FEFF 		bl	pushData
 1125              	.L38:
 1126              	.LBE4:
 409:notoriOS.c    ****         }
 410:notoriOS.c    ****         
 411:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 412:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 1127              		.loc 1 412 0
 1128 011c FFF7FEFF 		bl	sizeOfDataStackDesired
 1129 0120 0346     		mov	r3, r0
 1130 0122 A7F82E35 		strh	r3, [r7, #1326]	@ movhi
 413:notoriOS.c    ****         char c_data_count_desired[20];
 414:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 415:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1131              		.loc 1 415 0
 1132 0126 B7F82E35 		ldrh	r3, [r7, #1326]
 1133 012a 013B     		subs	r3, r3, #1
 1134 012c 07F59D60 		add	r0, r7, #1256
 1135 0130 8D4A     		ldr	r2, .L46+24
 1136 0132 1421     		movs	r1, #20
 1137 0134 FFF7FEFF 		bl	snprintf
 416:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 30


 1138              		.loc 1 416 0
 1139 0138 FFF7FEFF 		bl	getTimeStamp
 1140 013c 0246     		mov	r2, r0
 1141 013e 07F59D63 		add	r3, r7, #1256
 1142 0142 1946     		mov	r1, r3
 1143 0144 8D48     		ldr	r0, .L46+44
 1144 0146 FFF7FEFF 		bl	pushData
 417:notoriOS.c    ****         
 418:notoriOS.c    ****         // Construct HTPP request
 419:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1145              		.loc 1 419 0
 1146 014a 8D49     		ldr	r1, .L46+48
 1147 014c 0020     		movs	r0, #0
 1148 014e FFF7FEFF 		bl	printNotif
 420:notoriOS.c    ****         
 421:notoriOS.c    ****         // Old influx API
 422:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 423:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1149              		.loc 1 423 0
 1150 0152 8C4B     		ldr	r3, .L46+52
 1151 0154 8C4A     		ldr	r2, .L46+56
 1152 0156 8D49     		ldr	r1, .L46+60
 1153 0158 8148     		ldr	r0, .L46+16
 1154 015a FFF7FEFF 		bl	construct_malcom_route
 424:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1155              		.loc 1 424 0
 1156 015e 804A     		ldr	r2, .L46+16
 1157 0160 8B49     		ldr	r1, .L46+64
 1158 0162 0020     		movs	r0, #0
 1159 0164 FFF7FEFF 		bl	printNotif
 425:notoriOS.c    ****         
 426:notoriOS.c    ****         //OLD INFLUX API
 427:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 428:notoriOS.c    ****         construct_malcom_body(http_body);
 1160              		.loc 1 428 0
 1161 0168 7C48     		ldr	r0, .L46+12
 1162 016a FFF7FEFF 		bl	construct_malcom_body
 429:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1163              		.loc 1 429 0
 1164 016e 894B     		ldr	r3, .L46+68
 1165 0170 5B6E     		ldr	r3, [r3, #100]
 1166 0172 894A     		ldr	r2, .L46+72
 1167 0174 0592     		str	r2, [sp, #20]
 1168 0176 0022     		movs	r2, #0
 1169 0178 0492     		str	r2, [sp, #16]
 1170 017a 884A     		ldr	r2, .L46+76
 1171 017c 0392     		str	r2, [sp, #12]
 1172 017e 884A     		ldr	r2, .L46+80
 1173 0180 0292     		str	r2, [sp, #8]
 1174 0182 884A     		ldr	r2, .L46+84
 1175 0184 0192     		str	r2, [sp, #4]
 1176 0186 0093     		str	r3, [sp]
 1177 0188 754B     		ldr	r3, .L46+16
 1178 018a 824A     		ldr	r2, .L46+68
 1179 018c 7349     		ldr	r1, .L46+12
 1180 018e 7248     		ldr	r0, .L46+8
 1181 0190 FFF7FEFF 		bl	construct_generic_HTTP_request
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 31


 430:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1182              		.loc 1 430 0
 1183 0194 704A     		ldr	r2, .L46+8
 1184 0196 8449     		ldr	r1, .L46+88
 1185 0198 0020     		movs	r0, #0
 1186 019a FFF7FEFF 		bl	printNotif
 431:notoriOS.c    ****         
 432:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 433:notoriOS.c    ****         // Open port and begin command line sequence
 434:notoriOS.c    ****         char portConfig[200];
 435:notoriOS.c    ****         uint8 status = 0u;
 1187              		.loc 1 435 0
 1188 019e 0023     		movs	r3, #0
 1189 01a0 87F82D35 		strb	r3, [r7, #1325]
 436:notoriOS.c    ****         
 437:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1190              		.loc 1 437 0
 1191 01a4 7B4B     		ldr	r3, .L46+68
 1192 01a6 5A6E     		ldr	r2, [r3, #100]
 1193 01a8 3846     		mov	r0, r7
 1194 01aa 7A4B     		ldr	r3, .L46+68
 1195 01ac 0093     		str	r3, [sp]
 1196 01ae 1346     		mov	r3, r2
 1197 01b0 7E4A     		ldr	r2, .L46+92
 1198 01b2 C821     		movs	r1, #200
 1199 01b4 FFF7FEFF 		bl	snprintf
 438:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1200              		.loc 1 438 0
 1201 01b8 3B46     		mov	r3, r7
 1202 01ba 1A46     		mov	r2, r3
 1203 01bc 7C49     		ldr	r1, .L46+96
 1204 01be 0020     		movs	r0, #0
 1205 01c0 FFF7FEFF 		bl	printNotif
 439:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1206              		.loc 1 439 0
 1207 01c4 3B46     		mov	r3, r7
 1208 01c6 42F21072 		movw	r2, #10000
 1209 01ca 7A49     		ldr	r1, .L46+100
 1210 01cc 1846     		mov	r0, r3
 1211 01ce FFF7FEFF 		bl	at_write_command
 1212 01d2 0346     		mov	r3, r0
 1213 01d4 87F82D35 		strb	r3, [r7, #1325]
 440:notoriOS.c    ****         
 441:notoriOS.c    ****         // create character pointer to chunk through the http_request
 442:notoriOS.c    ****         char *chunk;
 443:notoriOS.c    ****         // Set chunk to start where http_request starts
 444:notoriOS.c    ****         chunk = http_request;
 1214              		.loc 1 444 0
 1215 01d8 5F4B     		ldr	r3, .L46+8
 1216 01da C7F83435 		str	r3, [r7, #1332]
 445:notoriOS.c    ****         // variable for the number of packets to send
 446:notoriOS.c    ****         int8 packets;
 447:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1217              		.loc 1 447 0
 1218 01de 5E48     		ldr	r0, .L46+8
 1219 01e0 FFF7FEFF 		bl	strlen
 1220 01e4 0246     		mov	r2, r0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 32


 1221 01e6 744B     		ldr	r3, .L46+104
 1222 01e8 A3FB0223 		umull	r2, r3, r3, r2
 1223 01ec 5B09     		lsrs	r3, r3, #5
 1224 01ee 1846     		mov	r0, r3
 1225 01f0 FFF7FEFF 		bl	__aeabi_ui2d
 1226 01f4 4FF00002 		mov	r2, #0
 1227 01f8 704B     		ldr	r3, .L46+108
 1228 01fa FFF7FEFF 		bl	nextafter
 1229 01fe 0346     		mov	r3, r0
 1230 0200 0C46     		mov	r4, r1
 1231 0202 1846     		mov	r0, r3
 1232 0204 2146     		mov	r1, r4
 1233 0206 FFF7FEFF 		bl	ceil
 1234 020a 0346     		mov	r3, r0
 1235 020c 0C46     		mov	r4, r1
 1236 020e 1846     		mov	r0, r3
 1237 0210 2146     		mov	r1, r4
 1238 0212 FFF7FEFF 		bl	__aeabi_d2iz
 1239 0216 0346     		mov	r3, r0
 1240 0218 87F82C35 		strb	r3, [r7, #1324]
 448:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1241              		.loc 1 448 0
 1242 021c 4E48     		ldr	r0, .L46+8
 1243 021e FFF7FEFF 		bl	strlen
 1244 0222 0346     		mov	r3, r0
 1245 0224 1A46     		mov	r2, r3
 1246 0226 6649     		ldr	r1, .L46+112
 1247 0228 0020     		movs	r0, #0
 1248 022a FFF7FEFF 		bl	printNotif
 449:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1249              		.loc 1 449 0
 1250 022e 97F92C35 		ldrsb	r3, [r7, #1324]
 1251 0232 1A46     		mov	r2, r3
 1252 0234 6349     		ldr	r1, .L46+116
 1253 0236 0020     		movs	r0, #0
 1254 0238 FFF7FEFF 		bl	printNotif
 1255              	.LBB5:
 450:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 451:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1256              		.loc 1 451 0
 1257 023c 0023     		movs	r3, #0
 1258 023e 87F83335 		strb	r3, [r7, #1331]
 1259 0242 53E0     		b	.L39
 1260              	.L42:
 1261              	.LBB6:
 452:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 453:notoriOS.c    ****             char http_chunk[1001];
 454:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 455:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 456:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1262              		.loc 1 456 0
 1263 0244 4FF47A72 		mov	r2, #1000
 1264 0248 5F49     		ldr	r1, .L46+120
 1265 024a 6048     		ldr	r0, .L46+124
 1266 024c FFF7FEFF 		bl	at_write_command
 1267 0250 0346     		mov	r3, r0
 1268 0252 87F82D35 		strb	r3, [r7, #1325]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 33


 457:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 458:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1269              		.loc 1 458 0
 1270 0256 07F1C800 		add	r0, r7, #200
 1271 025a D7F83435 		ldr	r3, [r7, #1332]
 1272 025e 544A     		ldr	r2, .L46+96
 1273 0260 4FF4FA71 		mov	r1, #500
 1274 0264 FFF7FEFF 		bl	snprintf
 459:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 460:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1275              		.loc 1 460 0
 1276 0268 07F1C803 		add	r3, r7, #200
 1277 026c 1846     		mov	r0, r3
 1278 026e FFF7FEFF 		bl	strlen
 1279 0272 0346     		mov	r3, r0
 1280 0274 1A46     		mov	r2, r3
 1281 0276 07F1C803 		add	r3, r7, #200
 1282 027a 1344     		add	r3, r3, r2
 1283 027c 5449     		ldr	r1, .L46+128
 1284 027e 1A46     		mov	r2, r3
 1285 0280 0B46     		mov	r3, r1
 1286 0282 1B88     		ldrh	r3, [r3]	@ unaligned
 1287 0284 1380     		strh	r3, [r2]	@ unaligned
 461:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1288              		.loc 1 461 0
 1289 0286 97F93325 		ldrsb	r2, [r7, #1331]
 1290 028a 07F1C803 		add	r3, r7, #200
 1291 028e 5149     		ldr	r1, .L46+132
 1292 0290 0020     		movs	r0, #0
 1293 0292 FFF7FEFF 		bl	printNotif
 462:notoriOS.c    ****             // Send data to server
 463:notoriOS.c    ****             if ((packet+1) != packets){
 1294              		.loc 1 463 0
 1295 0296 97F93335 		ldrsb	r3, [r7, #1331]
 1296 029a 5A1C     		adds	r2, r3, #1
 1297 029c 97F92C35 		ldrsb	r3, [r7, #1324]
 1298 02a0 9A42     		cmp	r2, r3
 1299 02a2 11D0     		beq	.L40
 464:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1300              		.loc 1 464 0
 1301 02a4 07F1C803 		add	r3, r7, #200
 1302 02a8 41F28832 		movw	r2, #5000
 1303 02ac 4149     		ldr	r1, .L46+100
 1304 02ae 1846     		mov	r0, r3
 1305 02b0 FFF7FEFF 		bl	at_write_command
 1306 02b4 0346     		mov	r3, r0
 1307 02b6 87F82D35 		strb	r3, [r7, #1325]
 465:notoriOS.c    ****                 // Move the pointer forward 
 466:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1308              		.loc 1 466 0
 1309 02ba D7F83435 		ldr	r3, [r7, #1332]
 1310 02be 03F2F313 		addw	r3, r3, #499
 1311 02c2 C7F83435 		str	r3, [r7, #1332]
 1312 02c6 0AE0     		b	.L41
 1313              	.L40:
 467:notoriOS.c    ****             }else{
 468:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 34


 1314              		.loc 1 468 0
 1315 02c8 07F1C803 		add	r3, r7, #200
 1316 02cc 41F28832 		movw	r2, #5000
 1317 02d0 4149     		ldr	r1, .L46+136
 1318 02d2 1846     		mov	r0, r3
 1319 02d4 FFF7FEFF 		bl	at_write_command
 1320 02d8 0346     		mov	r3, r0
 1321 02da 87F82D35 		strb	r3, [r7, #1325]
 1322              	.L41:
 1323              	.LBE6:
 451:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1324              		.loc 1 451 0 discriminator 2
 1325 02de 97F93335 		ldrsb	r3, [r7, #1331]
 1326 02e2 DBB2     		uxtb	r3, r3
 1327 02e4 0133     		adds	r3, r3, #1
 1328 02e6 DBB2     		uxtb	r3, r3
 1329 02e8 87F83335 		strb	r3, [r7, #1331]
 1330              	.L39:
 451:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1331              		.loc 1 451 0 is_stmt 0 discriminator 1
 1332 02ec 97F93325 		ldrsb	r2, [r7, #1331]
 1333 02f0 97F92C35 		ldrsb	r3, [r7, #1324]
 1334 02f4 9A42     		cmp	r2, r3
 1335 02f6 A5DB     		blt	.L42
 1336              	.LBE5:
 469:notoriOS.c    ****             }
 470:notoriOS.c    ****             
 471:notoriOS.c    ****         }
 472:notoriOS.c    ****         
 473:notoriOS.c    ****         // Read received buffer
 474:notoriOS.c    ****         // A good write will return code "OS-OK"
 475:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 476:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 477:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1337              		.loc 1 477 0 is_stmt 1
 1338 02f8 41F28832 		movw	r2, #5000
 1339 02fc 3749     		ldr	r1, .L46+140
 1340 02fe 3848     		ldr	r0, .L46+144
 1341 0300 FFF7FEFF 		bl	at_write_command
 1342 0304 0346     		mov	r3, r0
 1343 0306 87F82D35 		strb	r3, [r7, #1325]
 478:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 479:notoriOS.c    ****     
 480:notoriOS.c    ****   
 481:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 482:notoriOS.c    ****         if(status == 1u){
 1344              		.loc 1 482 0
 1345 030a 97F82D35 		ldrb	r3, [r7, #1325]	@ zero_extendqisi2
 1346 030e 012B     		cmp	r3, #1
 1347 0310 6CD1     		bne	.L43
 1348              	.LBB7:
 483:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1349              		.loc 1 483 0
 1350 0312 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 484:notoriOS.c    ****             Clear_Data_Stack();
 1351              		.loc 1 484 0
 1352 0316 FFF7FEFF 		bl	Clear_Data_Stack
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 35


 485:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1353              		.loc 1 485 0
 1354 031a FFF7FEFF 		bl	getTimeStamp
 1355 031e 0246     		mov	r2, r0
 1356 0320 304B     		ldr	r3, .L46+148
 1357 0322 1B68     		ldr	r3, [r3]
 1358 0324 D31A     		subs	r3, r2, r3
 1359 0326 C7F82835 		str	r3, [r7, #1320]
 486:notoriOS.c    ****             char s_send_time[10];
 487:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1360              		.loc 1 487 0
 1361 032a 07F2B440 		addw	r0, r7, #1204
 1362 032e D7F82835 		ldr	r3, [r7, #1320]
 1363 0332 0D4A     		ldr	r2, .L46+24
 1364 0334 0A21     		movs	r1, #10
 1365 0336 FFF7FEFF 		bl	snprintf
 488:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1366              		.loc 1 488 0
 1367 033a FFF7FEFF 		bl	getTimeStamp
 1368 033e 0246     		mov	r2, r0
 1369 0340 07F2B443 		addw	r3, r7, #1204
 1370 0344 1946     		mov	r1, r3
 1371 0346 2848     		ldr	r0, .L46+152
 1372 0348 FFF7FEFF 		bl	pushData
 1373              	.LBE7:
 1374 034c 52E0     		b	.L44
 1375              	.L47:
 1376 034e 00BF     		.align	2
 1377              	.L46:
 1378 0350 00000000 		.word	try_counter
 1379 0354 04010000 		.word	.LC12
 1380 0358 00000000 		.word	http_request
 1381 035c 00000000 		.word	http_body
 1382 0360 00000000 		.word	http_route
 1383 0364 00000000 		.word	modem_stats
 1384 0368 3C000000 		.word	.LC2
 1385 036c 14010000 		.word	.LC13
 1386 0370 1C010000 		.word	.LC14
 1387 0374 00000000 		.word	buffer_overflow
 1388 0378 28010000 		.word	.LC15
 1389 037c 38010000 		.word	.LC16
 1390 0380 4C010000 		.word	.LC17
 1391 0384 60010000 		.word	.LC18
 1392 0388 28000000 		.word	modem_info+40
 1393 038c 8C010000 		.word	.LC19
 1394 0390 9C010000 		.word	.LC20
 1395 0394 00000000 		.word	system_settings
 1396 0398 AC010000 		.word	.LC21
 1397 039c B0010000 		.word	.LC22
 1398 03a0 B4010000 		.word	.LC23
 1399 03a4 BC010000 		.word	.LC24
 1400 03a8 C4010000 		.word	.LC25
 1401 03ac DC010000 		.word	.LC26
 1402 03b0 F8010000 		.word	.LC27
 1403 03b4 FC010000 		.word	.LC28
 1404 03b8 D34D6210 		.word	274877907
 1405 03bc 00407F40 		.word	1082081280
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 36


 1406 03c0 00020000 		.word	.LC29
 1407 03c4 18020000 		.word	.LC30
 1408 03c8 2C020000 		.word	.LC31
 1409 03cc 30020000 		.word	.LC32
 1410 03d0 40020000 		.word	.LC33
 1411 03d4 44020000 		.word	.LC34
 1412 03d8 54020000 		.word	.LC35
 1413 03dc 5C020000 		.word	.LC36
 1414 03e0 64020000 		.word	.LC37
 1415 03e4 00000000 		.word	modem_start_time_stamp
 1416 03e8 78020000 		.word	.LC38
 1417              	.L43:
 489:notoriOS.c    ****         }else{
 490:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1418              		.loc 1 490 0
 1419 03ec 0E49     		ldr	r1, .L48
 1420 03ee 0220     		movs	r0, #2
 1421 03f0 FFF7FEFF 		bl	printNotif
 1422              	.L44:
 491:notoriOS.c    ****         }
 492:notoriOS.c    ****          
 493:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 494:notoriOS.c    ****         long network_time = modem_get_network_time();
 1423              		.loc 1 494 0
 1424 03f4 FFF7FEFF 		bl	modem_get_network_time
 1425 03f8 C7F82405 		str	r0, [r7, #1316]
 495:notoriOS.c    ****         if(network_time != 0){
 1426              		.loc 1 495 0
 1427 03fc D7F82435 		ldr	r3, [r7, #1316]
 1428 0400 002B     		cmp	r3, #0
 1429 0402 03D0     		beq	.L45
 496:notoriOS.c    ****            setTime(network_time);
 1430              		.loc 1 496 0
 1431 0404 D7F82405 		ldr	r0, [r7, #1316]
 1432 0408 FFF7FEFF 		bl	setTime
 1433              	.L45:
 497:notoriOS.c    ****         }
 498:notoriOS.c    ****         
 499:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 500:notoriOS.c    ****         // If not -- keep the statck and try next time
 501:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 502:notoriOS.c    ****         modem_power_down();
 1434              		.loc 1 502 0
 1435 040c FFF7FEFF 		bl	modem_power_down
 503:notoriOS.c    ****         
 504:notoriOS.c    ****         try_counter = 0u;
 1436              		.loc 1 504 0
 1437 0410 064B     		ldr	r3, .L48+4
 1438 0412 0022     		movs	r2, #0
 1439 0414 1A70     		strb	r2, [r3]
 505:notoriOS.c    ****         return 0u;
 1440              		.loc 1 505 0
 1441 0416 0023     		movs	r3, #0
 1442 0418 00E0     		b	.L33
 1443              	.L36:
 1444              	.LBE2:
 506:notoriOS.c    ****     }
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 37


 507:notoriOS.c    ****       
 508:notoriOS.c    ****       return 1u; // Not done yet
 1445              		.loc 1 508 0
 1446 041a 0123     		movs	r3, #1
 1447              	.L33:
 509:notoriOS.c    **** }
 1448              		.loc 1 509 0 discriminator 1
 1449 041c 1846     		mov	r0, r3
 1450 041e 07F23C57 		addw	r7, r7, #1340
 1451              		.cfi_def_cfa_offset 12
 1452 0422 BD46     		mov	sp, r7
 1453              		.cfi_def_cfa_register 13
 1454              		@ sp needed
 1455 0424 90BD     		pop	{r4, r7, pc}
 1456              	.L49:
 1457 0426 00BF     		.align	2
 1458              	.L48:
 1459 0428 88020000 		.word	.LC39
 1460 042c 00000000 		.word	try_counter
 1461              		.cfi_endproc
 1462              	.LFE74:
 1463              		.size	syncData, .-syncData
 1464              		.section	.text.configureRemoteParams,"ax",%progbits
 1465              		.align	2
 1466              		.global	configureRemoteParams
 1467              		.thumb
 1468              		.thumb_func
 1469              		.type	configureRemoteParams, %function
 1470              	configureRemoteParams:
 1471              	.LFB75:
 510:notoriOS.c    **** 
 511:notoriOS.c    **** // ==============================================
 512:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 513:notoriOS.c    **** // Returns 0 when done
 514:notoriOS.c    **** // ==============================================
 515:notoriOS.c    **** uint8 configureRemoteParams(){
 1472              		.loc 1 515 0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 8
 1475              		@ frame_needed = 1, uses_anonymous_args = 0
 1476 0000 80B5     		push	{r7, lr}
 1477              		.cfi_def_cfa_offset 8
 1478              		.cfi_offset 7, -8
 1479              		.cfi_offset 14, -4
 1480 0002 82B0     		sub	sp, sp, #8
 1481              		.cfi_def_cfa_offset 16
 1482 0004 00AF     		add	r7, sp, #0
 1483              		.cfi_def_cfa_register 7
 516:notoriOS.c    ****     
 517:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1484              		.loc 1 517 0
 1485 0006 FFF7FEFF 		bl	modem_get_state
 1486 000a 0346     		mov	r3, r0
 1487 000c 002B     		cmp	r3, #0
 1488 000e 02D1     		bne	.L51
 518:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 519:notoriOS.c    ****         modem_power_up();
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 38


 1489              		.loc 1 519 0
 1490 0010 FFF7FEFF 		bl	modem_power_up
 1491 0014 11E0     		b	.L52
 1492              	.L51:
 520:notoriOS.c    ****             
 521:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1493              		.loc 1 521 0
 1494 0016 FFF7FEFF 		bl	modem_get_state
 1495 001a 0346     		mov	r3, r0
 1496 001c 042B     		cmp	r3, #4
 1497 001e 0CD1     		bne	.L52
 1498              	.LBB8:
 522:notoriOS.c    ****         
 523:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 524:notoriOS.c    ****         
 525:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 526:notoriOS.c    ****         long network_time = modem_get_network_time();
 1499              		.loc 1 526 0
 1500 0020 FFF7FEFF 		bl	modem_get_network_time
 1501 0024 7860     		str	r0, [r7, #4]
 527:notoriOS.c    ****         if(network_time != 0){
 1502              		.loc 1 527 0
 1503 0026 7B68     		ldr	r3, [r7, #4]
 1504 0028 002B     		cmp	r3, #0
 1505 002a 02D0     		beq	.L53
 528:notoriOS.c    ****             setTime(network_time);
 1506              		.loc 1 528 0
 1507 002c 7868     		ldr	r0, [r7, #4]
 1508 002e FFF7FEFF 		bl	setTime
 1509              	.L53:
 529:notoriOS.c    ****         }
 530:notoriOS.c    ****         
 531:notoriOS.c    ****         // Get GPS coordinates
 532:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 533:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 534:notoriOS.c    ****         modem_power_down();
 1510              		.loc 1 534 0
 1511 0032 FFF7FEFF 		bl	modem_power_down
 535:notoriOS.c    ****         return 0u;
 1512              		.loc 1 535 0
 1513 0036 0023     		movs	r3, #0
 1514 0038 00E0     		b	.L54
 1515              	.L52:
 1516              	.LBE8:
 536:notoriOS.c    ****         
 537:notoriOS.c    ****     }
 538:notoriOS.c    ****     
 539:notoriOS.c    ****     return 1u;
 1517              		.loc 1 539 0
 1518 003a 0123     		movs	r3, #1
 1519              	.L54:
 540:notoriOS.c    **** }
 1520              		.loc 1 540 0
 1521 003c 1846     		mov	r0, r3
 1522 003e 0837     		adds	r7, r7, #8
 1523              		.cfi_def_cfa_offset 8
 1524 0040 BD46     		mov	sp, r7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 39


 1525              		.cfi_def_cfa_register 13
 1526              		@ sp needed
 1527 0042 80BD     		pop	{r7, pc}
 1528              		.cfi_endproc
 1529              	.LFE75:
 1530              		.size	configureRemoteParams, .-configureRemoteParams
 1531              		.section	.rodata
 1532 02b3 00       		.align	2
 1533              	.LC40:
 1534 02b4 256C6400 		.ascii	"%ld\000"
 1535              		.align	2
 1536              	.LC41:
 1537 02b8 736F6E74 		.ascii	"sontek_depth\000"
 1537      656B5F64 
 1537      65707468 
 1537      00
 1538 02c5 000000   		.align	2
 1539              	.LC42:
 1540 02c8 612B00   		.ascii	"a+\000"
 1541 02cb 00       		.align	2
 1542              	.LC43:
 1543 02cc 20736F6E 		.ascii	" sontek_depth: \000"
 1543      74656B5F 
 1543      64657074 
 1543      683A2000 
 1544              		.align	2
 1545              	.LC44:
 1546 02dc 2000     		.ascii	" \000"
 1547 02de 0000     		.align	2
 1548              	.LC45:
 1549 02e0 736F6E74 		.ascii	"sontek_SNR1\000"
 1549      656B5F53 
 1549      4E523100 
 1550              		.align	2
 1551              	.LC46:
 1552 02ec 20736F6E 		.ascii	" sontek_SNR1: \000"
 1552      74656B5F 
 1552      534E5231 
 1552      3A2000
 1553 02fb 00       		.align	2
 1554              	.LC47:
 1555 02fc 736F6E74 		.ascii	"sontek_SNR2\000"
 1555      656B5F53 
 1555      4E523200 
 1556              		.align	2
 1557              	.LC48:
 1558 0308 20736F6E 		.ascii	" sontek_SNR2: \000"
 1558      74656B5F 
 1558      534E5232 
 1558      3A2000
 1559 0317 00       		.align	2
 1560              	.LC49:
 1561 0318 736F6E74 		.ascii	"sontek_SNR3\000"
 1561      656B5F53 
 1561      4E523300 
 1562              		.align	2
 1563              	.LC50:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 40


 1564 0324 20736F6E 		.ascii	" sontek_SNR3: \000"
 1564      74656B5F 
 1564      534E5233 
 1564      3A2000
 1565 0333 00       		.align	2
 1566              	.LC51:
 1567 0334 436F756C 		.ascii	"Could not get valid readings from Sontek.\000"
 1567      64206E6F 
 1567      74206765 
 1567      74207661 
 1567      6C696420 
 1568 035e 0000     		.align	2
 1569              	.LC52:
 1570 0360 252E3266 		.ascii	"%.2f\000"
 1570      00
 1571 0365 000000   		.align	2
 1572              	.LC53:
 1573 0368 765F6261 		.ascii	"v_bat=%s\000"
 1573      743D2573 
 1573      00
 1574 0371 000000   		.align	2
 1575              	.LC54:
 1576 0374 765F6261 		.ascii	"v_bat\000"
 1576      7400
 1577 037a 0000     		.align	2
 1578              	.LC55:
 1579 037c 20766261 		.ascii	" vbat: \000"
 1579      743A2000 
 1580              		.align	2
 1581              	.LC56:
 1582 0384 70726573 		.ascii	"pressure_current=%s\000"
 1582      73757265 
 1582      5F637572 
 1582      72656E74 
 1582      3D257300 
 1583              		.align	2
 1584              	.LC57:
 1585 0398 70726573 		.ascii	"pressure_current\000"
 1585      73757265 
 1585      5F637572 
 1585      72656E74 
 1585      00
 1586 03a9 000000   		.align	2
 1587              	.LC58:
 1588 03ac 20707265 		.ascii	" pressure_current: \000"
 1588      73737572 
 1588      655F6375 
 1588      7272656E 
 1588      743A2000 
 1589              		.align	2
 1590              	.LC59:
 1591 03c0 70726573 		.ascii	"pressure_depth=%s\000"
 1591      73757265 
 1591      5F646570 
 1591      74683D25 
 1591      7300
 1592 03d2 0000     		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 41


 1593              	.LC60:
 1594 03d4 70726573 		.ascii	"pressure_depth\000"
 1594      73757265 
 1594      5F646570 
 1594      746800
 1595 03e3 00       		.align	2
 1596              	.LC61:
 1597 03e4 20707265 		.ascii	" pressure_depth: \000"
 1597      73737572 
 1597      655F6465 
 1597      7074683A 
 1597      2000
 1598 03f6 0000     		.align	2
 1599              	.LC62:
 1600 03f8 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1600      64206E6F 
 1600      74206765 
 1600      74207661 
 1600      6C696420 
 1601              		.section	.text.makeMeasurements,"ax",%progbits
 1602              		.align	2
 1603              		.global	makeMeasurements
 1604              		.thumb
 1605              		.thumb_func
 1606              		.type	makeMeasurements, %function
 1607              	makeMeasurements:
 1608              	.LFB76:
 541:notoriOS.c    **** 
 542:notoriOS.c    **** 
 543:notoriOS.c    **** // ==============================================
 544:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 545:notoriOS.c    **** // Returns 0 when finished
 546:notoriOS.c    **** // ==============================================
 547:notoriOS.c    **** uint8 makeMeasurements(){
 1609              		.loc 1 547 0
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 112
 1612              		@ frame_needed = 1, uses_anonymous_args = 0
 1613 0000 90B5     		push	{r4, r7, lr}
 1614              		.cfi_def_cfa_offset 12
 1615              		.cfi_offset 4, -12
 1616              		.cfi_offset 7, -8
 1617              		.cfi_offset 14, -4
 1618 0002 9FB0     		sub	sp, sp, #124
 1619              		.cfi_def_cfa_offset 136
 1620 0004 02AF     		add	r7, sp, #8
 1621              		.cfi_def_cfa 7, 128
 548:notoriOS.c    ****     
 549:notoriOS.c    ****     // Get clock time and save to timeStamp
 550:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1622              		.loc 1 550 0
 1623 0006 FFF7FEFF 		bl	getTimeStamp
 1624 000a F866     		str	r0, [r7, #108]
 551:notoriOS.c    ****     char c_timeStamp[32];
 552:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1625              		.loc 1 552 0
 1626 000c 07F14C00 		add	r0, r7, #76
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 42


 1627 0010 FB6E     		ldr	r3, [r7, #108]
 1628 0012 6F4A     		ldr	r2, .L62
 1629 0014 2021     		movs	r1, #32
 1630 0016 FFF7FEFF 		bl	snprintf
 553:notoriOS.c    ****     
 554:notoriOS.c    ****     // Holds string for value that will be written 
 555:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 556:notoriOS.c    ****     
 557:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 558:notoriOS.c    **** //    if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 559:notoriOS.c    **** //        
 560:notoriOS.c    **** //        // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data 
 561:notoriOS.c    **** //        level_sensor_t m_level_sensor;
 562:notoriOS.c    **** //        
 563:notoriOS.c    **** //        // Take level sensor readings and save them to m_level_sensor
 564:notoriOS.c    **** //        m_level_sensor = level_sensor_take_reading();
 565:notoriOS.c    **** //    
 566:notoriOS.c    **** //        // If the number of valid level sensor readings is greater than 0, then print the level s
 567:notoriOS.c    **** //        if(m_level_sensor.num_valid_readings > 0){
 568:notoriOS.c    **** //            snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 569:notoriOS.c    **** //            printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 570:notoriOS.c    **** //            pushData("maxbotix_depth",value,timeStamp);
 571:notoriOS.c    **** //            
 572:notoriOS.c    **** //            // Print measurement to SD card to file called data.txt
 573:notoriOS.c    **** //            SD_write(Data_fileName, "a+", c_timeStamp);
 574:notoriOS.c    **** //            SD_write(Data_fileName, "a+", " maxbotix_depth: ");
 575:notoriOS.c    **** //            SD_write(Data_fileName, "a+", value);
 576:notoriOS.c    **** //            SD_write(Data_fileName, "a+", " ");
 577:notoriOS.c    **** //        }else{
 578:notoriOS.c    **** //            printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 579:notoriOS.c    **** //            //pushData("maxbotix_depth","error",timeStamp);
 580:notoriOS.c    **** //        }
 581:notoriOS.c    **** //    }else if(updatable_parameters.node_type == NODE_TYPE_SONTEK_FLOW){
 582:notoriOS.c    ****         
 583:notoriOS.c    ****         // sontek_t is a new data type we defined in sontek.h. We then use that data type to define
 584:notoriOS.c    ****         sontek_t m_sontek;
 585:notoriOS.c    ****         
 586:notoriOS.c    ****         // Take sontek readings and save them to m_sontek
 587:notoriOS.c    ****         m_sontek = sontek_take_reading();
 1631              		.loc 1 587 0
 1632 001a 07F12003 		add	r3, r7, #32
 1633 001e 1846     		mov	r0, r3
 1634 0020 FFF7FEFF 		bl	sontek_take_reading
 588:notoriOS.c    ****         
 589:notoriOS.c    ****         // If valid flag is 1, then print the sontek readings and push the data to the data wheel
 590:notoriOS.c    ****         if(m_sontek.valid == 1){
 1635              		.loc 1 590 0
 1636 0024 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 1637 0028 012B     		cmp	r3, #1
 1638 002a 40F0F380 		bne	.L56
 591:notoriOS.c    ****             snprintf(value,sizeof(value),"%f",m_sontek.depth);
 1639              		.loc 1 591 0
 1640 002e 7B6A     		ldr	r3, [r7, #36]	@ float
 1641 0030 1846     		mov	r0, r3
 1642 0032 FFF7FEFF 		bl	__aeabi_f2d
 1643 0036 0346     		mov	r3, r0
 1644 0038 0C46     		mov	r4, r1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 43


 1645 003a 07F13800 		add	r0, r7, #56
 1646 003e CDE90034 		strd	r3, [sp]
 1647 0042 644A     		ldr	r2, .L62+4
 1648 0044 1421     		movs	r1, #20
 1649 0046 FFF7FEFF 		bl	snprintf
 592:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"sontek_depth=%s",value);
 1650              		.loc 1 592 0
 1651 004a 07F13803 		add	r3, r7, #56
 1652 004e 1A46     		mov	r2, r3
 1653 0050 6149     		ldr	r1, .L62+8
 1654 0052 0020     		movs	r0, #0
 1655 0054 FFF7FEFF 		bl	printNotif
 593:notoriOS.c    ****             pushData("sontek_depth",value,timeStamp);
 1656              		.loc 1 593 0
 1657 0058 07F13803 		add	r3, r7, #56
 1658 005c FA6E     		ldr	r2, [r7, #108]
 1659 005e 1946     		mov	r1, r3
 1660 0060 5E48     		ldr	r0, .L62+12
 1661 0062 FFF7FEFF 		bl	pushData
 594:notoriOS.c    ****             
 595:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 596:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1662              		.loc 1 596 0
 1663 0066 07F14C03 		add	r3, r7, #76
 1664 006a 1A46     		mov	r2, r3
 1665 006c 5C49     		ldr	r1, .L62+16
 1666 006e 5D48     		ldr	r0, .L62+20
 1667 0070 FFF7FEFF 		bl	SD_write
 597:notoriOS.c    ****             SD_write(Data_fileName, "a+", " sontek_depth: ");
 1668              		.loc 1 597 0
 1669 0074 5C4A     		ldr	r2, .L62+24
 1670 0076 5A49     		ldr	r1, .L62+16
 1671 0078 5A48     		ldr	r0, .L62+20
 1672 007a FFF7FEFF 		bl	SD_write
 598:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1673              		.loc 1 598 0
 1674 007e 07F13803 		add	r3, r7, #56
 1675 0082 1A46     		mov	r2, r3
 1676 0084 5649     		ldr	r1, .L62+16
 1677 0086 5748     		ldr	r0, .L62+20
 1678 0088 FFF7FEFF 		bl	SD_write
 599:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1679              		.loc 1 599 0
 1680 008c 574A     		ldr	r2, .L62+28
 1681 008e 5449     		ldr	r1, .L62+16
 1682 0090 5448     		ldr	r0, .L62+20
 1683 0092 FFF7FEFF 		bl	SD_write
 600:notoriOS.c    ****             
 601:notoriOS.c    ****             
 602:notoriOS.c    ****             snprintf(value,sizeof(value),"%f",m_sontek.SNR1);
 1684              		.loc 1 602 0
 1685 0096 BB6A     		ldr	r3, [r7, #40]	@ float
 1686 0098 1846     		mov	r0, r3
 1687 009a FFF7FEFF 		bl	__aeabi_f2d
 1688 009e 0346     		mov	r3, r0
 1689 00a0 0C46     		mov	r4, r1
 1690 00a2 07F13800 		add	r0, r7, #56
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 44


 1691 00a6 CDE90034 		strd	r3, [sp]
 1692 00aa 4A4A     		ldr	r2, .L62+4
 1693 00ac 1421     		movs	r1, #20
 1694 00ae FFF7FEFF 		bl	snprintf
 603:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"sontek_SNR1=%s",value);
 1695              		.loc 1 603 0
 1696 00b2 07F13803 		add	r3, r7, #56
 1697 00b6 1A46     		mov	r2, r3
 1698 00b8 4D49     		ldr	r1, .L62+32
 1699 00ba 0020     		movs	r0, #0
 1700 00bc FFF7FEFF 		bl	printNotif
 604:notoriOS.c    ****             pushData("sontek_SNR1",value,timeStamp);
 1701              		.loc 1 604 0
 1702 00c0 07F13803 		add	r3, r7, #56
 1703 00c4 FA6E     		ldr	r2, [r7, #108]
 1704 00c6 1946     		mov	r1, r3
 1705 00c8 4A48     		ldr	r0, .L62+36
 1706 00ca FFF7FEFF 		bl	pushData
 605:notoriOS.c    ****             
 606:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 607:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1707              		.loc 1 607 0
 1708 00ce 07F14C03 		add	r3, r7, #76
 1709 00d2 1A46     		mov	r2, r3
 1710 00d4 4249     		ldr	r1, .L62+16
 1711 00d6 4348     		ldr	r0, .L62+20
 1712 00d8 FFF7FEFF 		bl	SD_write
 608:notoriOS.c    ****             SD_write(Data_fileName, "a+", " sontek_SNR1: ");
 1713              		.loc 1 608 0
 1714 00dc 464A     		ldr	r2, .L62+40
 1715 00de 4049     		ldr	r1, .L62+16
 1716 00e0 4048     		ldr	r0, .L62+20
 1717 00e2 FFF7FEFF 		bl	SD_write
 609:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1718              		.loc 1 609 0
 1719 00e6 07F13803 		add	r3, r7, #56
 1720 00ea 1A46     		mov	r2, r3
 1721 00ec 3C49     		ldr	r1, .L62+16
 1722 00ee 3D48     		ldr	r0, .L62+20
 1723 00f0 FFF7FEFF 		bl	SD_write
 610:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1724              		.loc 1 610 0
 1725 00f4 3D4A     		ldr	r2, .L62+28
 1726 00f6 3A49     		ldr	r1, .L62+16
 1727 00f8 3A48     		ldr	r0, .L62+20
 1728 00fa FFF7FEFF 		bl	SD_write
 611:notoriOS.c    ****             
 612:notoriOS.c    ****             
 613:notoriOS.c    ****             snprintf(value,sizeof(value),"%f",m_sontek.SNR2);
 1729              		.loc 1 613 0
 1730 00fe FB6A     		ldr	r3, [r7, #44]	@ float
 1731 0100 1846     		mov	r0, r3
 1732 0102 FFF7FEFF 		bl	__aeabi_f2d
 1733 0106 0346     		mov	r3, r0
 1734 0108 0C46     		mov	r4, r1
 1735 010a 07F13800 		add	r0, r7, #56
 1736 010e CDE90034 		strd	r3, [sp]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 45


 1737 0112 304A     		ldr	r2, .L62+4
 1738 0114 1421     		movs	r1, #20
 1739 0116 FFF7FEFF 		bl	snprintf
 614:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"sontek_SNR2=%s",value);
 1740              		.loc 1 614 0
 1741 011a 07F13803 		add	r3, r7, #56
 1742 011e 1A46     		mov	r2, r3
 1743 0120 3649     		ldr	r1, .L62+44
 1744 0122 0020     		movs	r0, #0
 1745 0124 FFF7FEFF 		bl	printNotif
 615:notoriOS.c    ****             pushData("sontek_SNR2",value,timeStamp);
 1746              		.loc 1 615 0
 1747 0128 07F13803 		add	r3, r7, #56
 1748 012c FA6E     		ldr	r2, [r7, #108]
 1749 012e 1946     		mov	r1, r3
 1750 0130 3348     		ldr	r0, .L62+48
 1751 0132 FFF7FEFF 		bl	pushData
 616:notoriOS.c    ****             
 617:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 618:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1752              		.loc 1 618 0
 1753 0136 07F14C03 		add	r3, r7, #76
 1754 013a 1A46     		mov	r2, r3
 1755 013c 2849     		ldr	r1, .L62+16
 1756 013e 2948     		ldr	r0, .L62+20
 1757 0140 FFF7FEFF 		bl	SD_write
 619:notoriOS.c    ****             SD_write(Data_fileName, "a+", " sontek_SNR2: ");
 1758              		.loc 1 619 0
 1759 0144 2F4A     		ldr	r2, .L62+52
 1760 0146 2649     		ldr	r1, .L62+16
 1761 0148 2648     		ldr	r0, .L62+20
 1762 014a FFF7FEFF 		bl	SD_write
 620:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1763              		.loc 1 620 0
 1764 014e 07F13803 		add	r3, r7, #56
 1765 0152 1A46     		mov	r2, r3
 1766 0154 2249     		ldr	r1, .L62+16
 1767 0156 2348     		ldr	r0, .L62+20
 1768 0158 FFF7FEFF 		bl	SD_write
 621:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1769              		.loc 1 621 0
 1770 015c 234A     		ldr	r2, .L62+28
 1771 015e 2049     		ldr	r1, .L62+16
 1772 0160 2048     		ldr	r0, .L62+20
 1773 0162 FFF7FEFF 		bl	SD_write
 622:notoriOS.c    ****             
 623:notoriOS.c    ****             
 624:notoriOS.c    ****             snprintf(value,sizeof(value),"%f",m_sontek.SNR3);
 1774              		.loc 1 624 0
 1775 0166 3B6B     		ldr	r3, [r7, #48]	@ float
 1776 0168 1846     		mov	r0, r3
 1777 016a FFF7FEFF 		bl	__aeabi_f2d
 1778 016e 0346     		mov	r3, r0
 1779 0170 0C46     		mov	r4, r1
 1780 0172 07F13800 		add	r0, r7, #56
 1781 0176 CDE90034 		strd	r3, [sp]
 1782 017a 164A     		ldr	r2, .L62+4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 46


 1783 017c 1421     		movs	r1, #20
 1784 017e FFF7FEFF 		bl	snprintf
 625:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"sontek_SNR3=%s",value);
 1785              		.loc 1 625 0
 1786 0182 07F13803 		add	r3, r7, #56
 1787 0186 1A46     		mov	r2, r3
 1788 0188 1F49     		ldr	r1, .L62+56
 1789 018a 0020     		movs	r0, #0
 1790 018c FFF7FEFF 		bl	printNotif
 626:notoriOS.c    ****             pushData("sontek_SNR3",value,timeStamp);
 1791              		.loc 1 626 0
 1792 0190 07F13803 		add	r3, r7, #56
 1793 0194 FA6E     		ldr	r2, [r7, #108]
 1794 0196 1946     		mov	r1, r3
 1795 0198 1C48     		ldr	r0, .L62+60
 1796 019a FFF7FEFF 		bl	pushData
 627:notoriOS.c    ****             
 628:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 629:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1797              		.loc 1 629 0
 1798 019e 07F14C03 		add	r3, r7, #76
 1799 01a2 1A46     		mov	r2, r3
 1800 01a4 0E49     		ldr	r1, .L62+16
 1801 01a6 0F48     		ldr	r0, .L62+20
 1802 01a8 FFF7FEFF 		bl	SD_write
 630:notoriOS.c    ****             SD_write(Data_fileName, "a+", " sontek_SNR3: ");
 1803              		.loc 1 630 0
 1804 01ac 184A     		ldr	r2, .L62+64
 1805 01ae 0C49     		ldr	r1, .L62+16
 1806 01b0 0C48     		ldr	r0, .L62+20
 1807 01b2 FFF7FEFF 		bl	SD_write
 631:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1808              		.loc 1 631 0
 1809 01b6 07F13803 		add	r3, r7, #56
 1810 01ba 1A46     		mov	r2, r3
 1811 01bc 0849     		ldr	r1, .L62+16
 1812 01be 0948     		ldr	r0, .L62+20
 1813 01c0 FFF7FEFF 		bl	SD_write
 632:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1814              		.loc 1 632 0
 1815 01c4 094A     		ldr	r2, .L62+28
 1816 01c6 0649     		ldr	r1, .L62+16
 1817 01c8 0648     		ldr	r0, .L62+20
 1818 01ca FFF7FEFF 		bl	SD_write
 1819 01ce 25E0     		b	.L57
 1820              	.L63:
 1821              		.align	2
 1822              	.L62:
 1823 01d0 B4020000 		.word	.LC40
 1824 01d4 48000000 		.word	.LC4
 1825 01d8 4C000000 		.word	.LC5
 1826 01dc B8020000 		.word	.LC41
 1827 01e0 C8020000 		.word	.LC42
 1828 01e4 00000000 		.word	Data_fileName
 1829 01e8 CC020000 		.word	.LC43
 1830 01ec DC020000 		.word	.LC44
 1831 01f0 5C000000 		.word	.LC6
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 47


 1832 01f4 E0020000 		.word	.LC45
 1833 01f8 EC020000 		.word	.LC46
 1834 01fc 6C000000 		.word	.LC7
 1835 0200 FC020000 		.word	.LC47
 1836 0204 08030000 		.word	.LC48
 1837 0208 7C000000 		.word	.LC8
 1838 020c 18030000 		.word	.LC49
 1839 0210 24030000 		.word	.LC50
 1840              	.L56:
 633:notoriOS.c    ****         }else{
 634:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Sontek.");
 1841              		.loc 1 634 0
 1842 0214 6249     		ldr	r1, .L64
 1843 0216 0220     		movs	r0, #2
 1844 0218 FFF7FEFF 		bl	printNotif
 1845              	.L57:
 635:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 636:notoriOS.c    ****         }
 637:notoriOS.c    ****     //}         -------------------- to overwrite node types
 638:notoriOS.c    ****     
 639:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 640:notoriOS.c    ****     voltage_t m_voltage;
 641:notoriOS.c    ****     
 642:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 643:notoriOS.c    ****     m_voltage = voltage_take_readings();
 1846              		.loc 1 643 0
 1847 021c 07F10C03 		add	r3, r7, #12
 1848 0220 1846     		mov	r0, r3
 1849 0222 FFF7FEFF 		bl	voltage_take_readings
 644:notoriOS.c    ****     
 645:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 646:notoriOS.c    ****     if(m_voltage.valid){
 1850              		.loc 1 646 0
 1851 0226 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1852 0228 002B     		cmp	r3, #0
 1853 022a 00F0AF80 		beq	.L58
 647:notoriOS.c    ****         // battery voltage data
 648:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 1854              		.loc 1 648 0
 1855 022e FB68     		ldr	r3, [r7, #12]	@ float
 1856 0230 1846     		mov	r0, r3
 1857 0232 FFF7FEFF 		bl	__aeabi_f2d
 1858 0236 0346     		mov	r3, r0
 1859 0238 0C46     		mov	r4, r1
 1860 023a 07F13800 		add	r0, r7, #56
 1861 023e CDE90034 		strd	r3, [sp]
 1862 0242 584A     		ldr	r2, .L64+4
 1863 0244 1421     		movs	r1, #20
 1864 0246 FFF7FEFF 		bl	snprintf
 649:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 1865              		.loc 1 649 0
 1866 024a 07F13803 		add	r3, r7, #56
 1867 024e 1A46     		mov	r2, r3
 1868 0250 5549     		ldr	r1, .L64+8
 1869 0252 0020     		movs	r0, #0
 1870 0254 FFF7FEFF 		bl	printNotif
 650:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 48


 1871              		.loc 1 650 0
 1872 0258 07F13803 		add	r3, r7, #56
 1873 025c FA6E     		ldr	r2, [r7, #108]
 1874 025e 1946     		mov	r1, r3
 1875 0260 5248     		ldr	r0, .L64+12
 1876 0262 FFF7FEFF 		bl	pushData
 651:notoriOS.c    ****         
 652:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 653:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 1877              		.loc 1 653 0
 1878 0266 524A     		ldr	r2, .L64+16
 1879 0268 5249     		ldr	r1, .L64+20
 1880 026a 5348     		ldr	r0, .L64+24
 1881 026c FFF7FEFF 		bl	SD_write
 654:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 1882              		.loc 1 654 0
 1883 0270 07F14C03 		add	r3, r7, #76
 1884 0274 1A46     		mov	r2, r3
 1885 0276 4F49     		ldr	r1, .L64+20
 1886 0278 4F48     		ldr	r0, .L64+24
 1887 027a FFF7FEFF 		bl	SD_write
 655:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 1888              		.loc 1 655 0
 1889 027e 4F4A     		ldr	r2, .L64+28
 1890 0280 4C49     		ldr	r1, .L64+20
 1891 0282 4D48     		ldr	r0, .L64+24
 1892 0284 FFF7FEFF 		bl	SD_write
 656:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 1893              		.loc 1 656 0
 1894 0288 07F13803 		add	r3, r7, #56
 1895 028c 1A46     		mov	r2, r3
 1896 028e 4949     		ldr	r1, .L64+20
 1897 0290 4948     		ldr	r0, .L64+24
 1898 0292 FFF7FEFF 		bl	SD_write
 657:notoriOS.c    ****         
 658:notoriOS.c    ****         // If node type is green infrastructure node, take pressure transducer measurements
 659:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE){
 1899              		.loc 1 659 0
 1900 0296 4A4B     		ldr	r3, .L64+32
 1901 0298 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1902 029a 012B     		cmp	r3, #1
 1903 029c 7AD1     		bne	.L60
 1904              	.LBB9:
 660:notoriOS.c    ****             
 661:notoriOS.c    ****             // pressure transducer voltage (V) data
 662:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 663:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 664:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 665:notoriOS.c    ****             
 666:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 667:notoriOS.c    ****             pressure_t m_pressure;
 668:notoriOS.c    ****             
 669:notoriOS.c    ****             // Make pressure transducer calculators for current (mA) and depth
 670:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 1905              		.loc 1 670 0
 1906 029e 3C1D     		adds	r4, r7, #4
 1907 02a0 6A46     		mov	r2, sp
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 49


 1908 02a2 07F11803 		add	r3, r7, #24
 1909 02a6 93E80300 		ldmia	r3, {r0, r1}
 1910 02aa 82E80300 		stmia	r2, {r0, r1}
 1911 02ae 07F10C03 		add	r3, r7, #12
 1912 02b2 0ECB     		ldmia	r3, {r1, r2, r3}
 1913 02b4 2046     		mov	r0, r4
 1914 02b6 FFF7FEFF 		bl	pressure_calculations
 671:notoriOS.c    ****             
 672:notoriOS.c    ****             // pressure transducer current (mA) data
 673:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 1915              		.loc 1 673 0
 1916 02ba 7B68     		ldr	r3, [r7, #4]	@ float
 1917 02bc 1846     		mov	r0, r3
 1918 02be FFF7FEFF 		bl	__aeabi_f2d
 1919 02c2 0346     		mov	r3, r0
 1920 02c4 0C46     		mov	r4, r1
 1921 02c6 07F13800 		add	r0, r7, #56
 1922 02ca CDE90034 		strd	r3, [sp]
 1923 02ce 354A     		ldr	r2, .L64+4
 1924 02d0 1421     		movs	r1, #20
 1925 02d2 FFF7FEFF 		bl	snprintf
 674:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 1926              		.loc 1 674 0
 1927 02d6 07F13803 		add	r3, r7, #56
 1928 02da 1A46     		mov	r2, r3
 1929 02dc 3949     		ldr	r1, .L64+36
 1930 02de 0020     		movs	r0, #0
 1931 02e0 FFF7FEFF 		bl	printNotif
 675:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 1932              		.loc 1 675 0
 1933 02e4 07F13803 		add	r3, r7, #56
 1934 02e8 FA6E     		ldr	r2, [r7, #108]
 1935 02ea 1946     		mov	r1, r3
 1936 02ec 3648     		ldr	r0, .L64+40
 1937 02ee FFF7FEFF 		bl	pushData
 676:notoriOS.c    ****             
 677:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 678:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1938              		.loc 1 678 0
 1939 02f2 2F4A     		ldr	r2, .L64+16
 1940 02f4 2F49     		ldr	r1, .L64+20
 1941 02f6 3048     		ldr	r0, .L64+24
 1942 02f8 FFF7FEFF 		bl	SD_write
 679:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1943              		.loc 1 679 0
 1944 02fc 07F14C03 		add	r3, r7, #76
 1945 0300 1A46     		mov	r2, r3
 1946 0302 2C49     		ldr	r1, .L64+20
 1947 0304 2C48     		ldr	r0, .L64+24
 1948 0306 FFF7FEFF 		bl	SD_write
 680:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 1949              		.loc 1 680 0
 1950 030a 304A     		ldr	r2, .L64+44
 1951 030c 2949     		ldr	r1, .L64+20
 1952 030e 2A48     		ldr	r0, .L64+24
 1953 0310 FFF7FEFF 		bl	SD_write
 681:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 50


 1954              		.loc 1 681 0
 1955 0314 07F13803 		add	r3, r7, #56
 1956 0318 1A46     		mov	r2, r3
 1957 031a 2649     		ldr	r1, .L64+20
 1958 031c 2648     		ldr	r0, .L64+24
 1959 031e FFF7FEFF 		bl	SD_write
 682:notoriOS.c    ****             
 683:notoriOS.c    ****             // pressure transducer depth (ft) data
 684:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 1960              		.loc 1 684 0
 1961 0322 BB68     		ldr	r3, [r7, #8]	@ float
 1962 0324 1846     		mov	r0, r3
 1963 0326 FFF7FEFF 		bl	__aeabi_f2d
 1964 032a 0346     		mov	r3, r0
 1965 032c 0C46     		mov	r4, r1
 1966 032e 07F13800 		add	r0, r7, #56
 1967 0332 CDE90034 		strd	r3, [sp]
 1968 0336 1B4A     		ldr	r2, .L64+4
 1969 0338 1421     		movs	r1, #20
 1970 033a FFF7FEFF 		bl	snprintf
 685:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 1971              		.loc 1 685 0
 1972 033e 07F13803 		add	r3, r7, #56
 1973 0342 1A46     		mov	r2, r3
 1974 0344 2249     		ldr	r1, .L64+48
 1975 0346 0020     		movs	r0, #0
 1976 0348 FFF7FEFF 		bl	printNotif
 686:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 1977              		.loc 1 686 0
 1978 034c 07F13803 		add	r3, r7, #56
 1979 0350 FA6E     		ldr	r2, [r7, #108]
 1980 0352 1946     		mov	r1, r3
 1981 0354 1F48     		ldr	r0, .L64+52
 1982 0356 FFF7FEFF 		bl	pushData
 687:notoriOS.c    ****             
 688:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 689:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
 1983              		.loc 1 689 0
 1984 035a 154A     		ldr	r2, .L64+16
 1985 035c 1549     		ldr	r1, .L64+20
 1986 035e 1648     		ldr	r0, .L64+24
 1987 0360 FFF7FEFF 		bl	SD_write
 690:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 1988              		.loc 1 690 0
 1989 0364 07F14C03 		add	r3, r7, #76
 1990 0368 1A46     		mov	r2, r3
 1991 036a 1249     		ldr	r1, .L64+20
 1992 036c 1248     		ldr	r0, .L64+24
 1993 036e FFF7FEFF 		bl	SD_write
 691:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
 1994              		.loc 1 691 0
 1995 0372 194A     		ldr	r2, .L64+56
 1996 0374 0F49     		ldr	r1, .L64+20
 1997 0376 1048     		ldr	r0, .L64+24
 1998 0378 FFF7FEFF 		bl	SD_write
 692:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 1999              		.loc 1 692 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 51


 2000 037c 07F13803 		add	r3, r7, #56
 2001 0380 1A46     		mov	r2, r3
 2002 0382 0C49     		ldr	r1, .L64+20
 2003 0384 0C48     		ldr	r0, .L64+24
 2004 0386 FFF7FEFF 		bl	SD_write
 2005 038a 03E0     		b	.L60
 2006              	.L58:
 2007              	.LBE9:
 693:notoriOS.c    ****         }    
 694:notoriOS.c    ****     }else{
 695:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 2008              		.loc 1 695 0
 2009 038c 1349     		ldr	r1, .L64+60
 2010 038e 0220     		movs	r0, #2
 2011 0390 FFF7FEFF 		bl	printNotif
 2012              	.L60:
 696:notoriOS.c    ****     }
 697:notoriOS.c    ****     
 698:notoriOS.c    ****     return 0u;
 2013              		.loc 1 698 0
 2014 0394 0023     		movs	r3, #0
 699:notoriOS.c    **** }
 2015              		.loc 1 699 0
 2016 0396 1846     		mov	r0, r3
 2017 0398 7437     		adds	r7, r7, #116
 2018              		.cfi_def_cfa_offset 12
 2019 039a BD46     		mov	sp, r7
 2020              		.cfi_def_cfa_register 13
 2021              		@ sp needed
 2022 039c 90BD     		pop	{r4, r7, pc}
 2023              	.L65:
 2024 039e 00BF     		.align	2
 2025              	.L64:
 2026 03a0 34030000 		.word	.LC51
 2027 03a4 60030000 		.word	.LC52
 2028 03a8 68030000 		.word	.LC53
 2029 03ac 74030000 		.word	.LC54
 2030 03b0 DC020000 		.word	.LC44
 2031 03b4 C8020000 		.word	.LC42
 2032 03b8 00000000 		.word	Data_fileName
 2033 03bc 7C030000 		.word	.LC55
 2034 03c0 00000000 		.word	updatable_parameters
 2035 03c4 84030000 		.word	.LC56
 2036 03c8 98030000 		.word	.LC57
 2037 03cc AC030000 		.word	.LC58
 2038 03d0 C0030000 		.word	.LC59
 2039 03d4 D4030000 		.word	.LC60
 2040 03d8 E4030000 		.word	.LC61
 2041 03dc F8030000 		.word	.LC62
 2042              		.cfi_endproc
 2043              	.LFE76:
 2044              		.size	makeMeasurements, .-makeMeasurements
 2045              		.section	.rodata
 2046 041f 00       		.align	2
 2047              	.LC63:
 2048 0420 4572726F 		.ascii	"Error setting system time.\000"
 2048      72207365 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 52


 2048      7474696E 
 2048      67207379 
 2048      7374656D 
 2049              		.section	.text.setTime,"ax",%progbits
 2050              		.align	2
 2051              		.global	setTime
 2052              		.thumb
 2053              		.thumb_func
 2054              		.type	setTime, %function
 2055              	setTime:
 2056              	.LFB77:
 700:notoriOS.c    **** 
 701:notoriOS.c    **** // ==============================================
 702:notoriOS.c    **** // Set the system time
 703:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 704:notoriOS.c    **** // ==============================================
 705:notoriOS.c    **** uint8 setTime(long timeStamp){
 2057              		.loc 1 705 0
 2058              		.cfi_startproc
 2059              		@ args = 0, pretend = 0, frame = 24
 2060              		@ frame_needed = 1, uses_anonymous_args = 0
 2061 0000 80B5     		push	{r7, lr}
 2062              		.cfi_def_cfa_offset 8
 2063              		.cfi_offset 7, -8
 2064              		.cfi_offset 14, -4
 2065 0002 86B0     		sub	sp, sp, #24
 2066              		.cfi_def_cfa_offset 32
 2067 0004 00AF     		add	r7, sp, #0
 2068              		.cfi_def_cfa_register 7
 2069 0006 7860     		str	r0, [r7, #4]
 706:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 707:notoriOS.c    ****     if(timeStamp <=0){
 2070              		.loc 1 707 0
 2071 0008 7B68     		ldr	r3, [r7, #4]
 2072 000a 002B     		cmp	r3, #0
 2073 000c 05DC     		bgt	.L67
 708:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
 2074              		.loc 1 708 0
 2075 000e 1849     		ldr	r1, .L69
 2076 0010 0220     		movs	r0, #2
 2077 0012 FFF7FEFF 		bl	printNotif
 709:notoriOS.c    ****         return 0;  
 2078              		.loc 1 709 0
 2079 0016 0023     		movs	r3, #0
 2080 0018 25E0     		b	.L68
 2081              	.L67:
 710:notoriOS.c    ****     }
 711:notoriOS.c    ****     // Create a new pointer t of data structure tm
 712:notoriOS.c    ****     struct tm * t;
 713:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 714:notoriOS.c    ****     t = gmtime(&timeStamp);
 2082              		.loc 1 714 0
 2083 001a 3B1D     		adds	r3, r7, #4
 2084 001c 1846     		mov	r0, r3
 2085 001e FFF7FEFF 		bl	gmtime
 2086 0022 7861     		str	r0, [r7, #20]
 715:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 53


 716:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 717:notoriOS.c    ****     RTC_TIME_DATE localTime;
 718:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 2087              		.loc 1 718 0
 2088 0024 7B69     		ldr	r3, [r7, #20]
 2089 0026 1B68     		ldr	r3, [r3]
 2090 0028 DBB2     		uxtb	r3, r3
 2091 002a 3B72     		strb	r3, [r7, #8]
 719:notoriOS.c    ****     localTime.Min = t->tm_min;
 2092              		.loc 1 719 0
 2093 002c 7B69     		ldr	r3, [r7, #20]
 2094 002e 5B68     		ldr	r3, [r3, #4]
 2095 0030 DBB2     		uxtb	r3, r3
 2096 0032 7B72     		strb	r3, [r7, #9]
 720:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 2097              		.loc 1 720 0
 2098 0034 7B69     		ldr	r3, [r7, #20]
 2099 0036 9B68     		ldr	r3, [r3, #8]
 2100 0038 DBB2     		uxtb	r3, r3
 2101 003a BB72     		strb	r3, [r7, #10]
 721:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 2102              		.loc 1 721 0
 2103 003c 7B69     		ldr	r3, [r7, #20]
 2104 003e 5B69     		ldr	r3, [r3, #20]
 2105 0040 9BB2     		uxth	r3, r3
 2106 0042 03F26C73 		addw	r3, r3, #1900
 2107 0046 9BB2     		uxth	r3, r3
 2108 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 722:notoriOS.c    ****     localTime.Month = t->tm_mon;
 2109              		.loc 1 722 0
 2110 004a 7B69     		ldr	r3, [r7, #20]
 2111 004c 1B69     		ldr	r3, [r3, #16]
 2112 004e DBB2     		uxtb	r3, r3
 2113 0050 3B74     		strb	r3, [r7, #16]
 723:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 2114              		.loc 1 723 0
 2115 0052 7B69     		ldr	r3, [r7, #20]
 2116 0054 DB68     		ldr	r3, [r3, #12]
 2117 0056 DBB2     		uxtb	r3, r3
 2118 0058 3B73     		strb	r3, [r7, #12]
 724:notoriOS.c    **** 
 725:notoriOS.c    ****     // Writes time and date values as current time and date.
 726:notoriOS.c    ****     RTC_WriteTime(&localTime);
 2119              		.loc 1 726 0
 2120 005a 07F10803 		add	r3, r7, #8
 2121 005e 1846     		mov	r0, r3
 2122 0060 FFF7FEFF 		bl	RTC_WriteTime
 727:notoriOS.c    ****     
 728:notoriOS.c    ****     // Return 1 when the system time was set properly.
 729:notoriOS.c    ****     return 1;
 2123              		.loc 1 729 0
 2124 0064 0123     		movs	r3, #1
 2125              	.L68:
 730:notoriOS.c    **** }
 2126              		.loc 1 730 0
 2127 0066 1846     		mov	r0, r3
 2128 0068 1837     		adds	r7, r7, #24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 54


 2129              		.cfi_def_cfa_offset 8
 2130 006a BD46     		mov	sp, r7
 2131              		.cfi_def_cfa_register 13
 2132              		@ sp needed
 2133 006c 80BD     		pop	{r7, pc}
 2134              	.L70:
 2135 006e 00BF     		.align	2
 2136              	.L69:
 2137 0070 20040000 		.word	.LC63
 2138              		.cfi_endproc
 2139              	.LFE77:
 2140              		.size	setTime, .-setTime
 2141              		.section	.rodata
 2142 043b 00       		.align	2
 2143              	.LC64:
 2144 043c 75706772 		.ascii	"upgrade.hex\000"
 2144      6164652E 
 2144      68657800 
 2145              		.section	.text.upgraded,"ax",%progbits
 2146              		.align	2
 2147              		.global	upgraded
 2148              		.thumb
 2149              		.thumb_func
 2150              		.type	upgraded, %function
 2151              	upgraded:
 2152              	.LFB78:
 731:notoriOS.c    **** 
 732:notoriOS.c    **** //downloads and stores files on SD card
 733:notoriOS.c    **** 
 734:notoriOS.c    **** 
 735:notoriOS.c    **** 
 736:notoriOS.c    **** // ==============================================
 737:notoriOS.c    **** // Will they love it, will they hate it
 738:notoriOS.c    **** // Never fade it, I evade it
 739:notoriOS.c    **** // Cause I never really want to complicate it
 740:notoriOS.c    **** //      - Logic, Upgraded (2015)
 741:notoriOS.c    **** //
 742:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 743:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 744:notoriOS.c    **** // ==============================================
 745:notoriOS.c    **** 
 746:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 2153              		.loc 1 746 0
 2154              		.cfi_startproc
 2155              		@ args = 0, pretend = 0, frame = 232
 2156              		@ frame_needed = 1, uses_anonymous_args = 0
 2157 0000 80B5     		push	{r7, lr}
 2158              		.cfi_def_cfa_offset 8
 2159              		.cfi_offset 7, -8
 2160              		.cfi_offset 14, -4
 2161 0002 C0B0     		sub	sp, sp, #256
 2162              		.cfi_def_cfa_offset 264
 2163 0004 06AF     		add	r7, sp, #24
 2164              		.cfi_def_cfa 7, 240
 2165 0006 F860     		str	r0, [r7, #12]
 2166 0008 B960     		str	r1, [r7, #8]
 2167 000a 7A60     		str	r2, [r7, #4]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 55


 747:notoriOS.c    ****     
 748:notoriOS.c    ****     uint8 upgrade_status = 0;
 2168              		.loc 1 748 0
 2169 000c 0023     		movs	r3, #0
 2170 000e 87F8E730 		strb	r3, [r7, #231]
 749:notoriOS.c    ****     
 750:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 751:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 2171              		.loc 1 751 0
 2172 0012 384B     		ldr	r3, .L75
 2173 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2174 0016 042B     		cmp	r3, #4
 2175 0018 02D0     		beq	.L72
 752:notoriOS.c    ****         return upgrade_status;//where valid = 0
 2176              		.loc 1 752 0
 2177 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2178 001e 65E0     		b	.L74
 2179              	.L72:
 753:notoriOS.c    ****     }
 754:notoriOS.c    ****     
 755:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 2180              		.loc 1 755 0
 2181 0020 354A     		ldr	r2, .L75+4
 2182 0022 07F1D803 		add	r3, r7, #216
 2183 0026 07CA     		ldmia	r2, {r0, r1, r2}
 2184 0028 83E80700 		stmia	r3, {r0, r1, r2}
 756:notoriOS.c    ****     //delete file, if one exisits already
 757:notoriOS.c    ****     SD_rmfile(fileName);
 2185              		.loc 1 757 0
 2186 002c 07F1D803 		add	r3, r7, #216
 2187 0030 1846     		mov	r0, r3
 2188 0032 FFF7FEFF 		bl	SD_rmfile
 758:notoriOS.c    ****     
 759:notoriOS.c    ****     // Create http request
 760:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 2189              		.loc 1 760 0
 2190 0036 314B     		ldr	r3, .L75+8
 2191 0038 0593     		str	r3, [sp, #20]
 2192 003a 0023     		movs	r3, #0
 2193 003c 0493     		str	r3, [sp, #16]
 2194 003e 304B     		ldr	r3, .L75+12
 2195 0040 0393     		str	r3, [sp, #12]
 2196 0042 304B     		ldr	r3, .L75+16
 2197 0044 0293     		str	r3, [sp, #8]
 2198 0046 304B     		ldr	r3, .L75+20
 2199 0048 0193     		str	r3, [sp, #4]
 2200 004a BB68     		ldr	r3, [r7, #8]
 2201 004c 0093     		str	r3, [sp]
 2202 004e 7B68     		ldr	r3, [r7, #4]
 2203 0050 FA68     		ldr	r2, [r7, #12]
 2204 0052 2E49     		ldr	r1, .L75+24
 2205 0054 2E48     		ldr	r0, .L75+28
 2206 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 761:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 2207              		.loc 1 761 0
 2208 005a 2D4A     		ldr	r2, .L75+28
 2209 005c 2D49     		ldr	r1, .L75+32
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 56


 2210 005e 0020     		movs	r0, #0
 2211 0060 FFF7FEFF 		bl	printNotif
 762:notoriOS.c    ****     // Create array portConfig of size 200 characters
 763:notoriOS.c    ****     char portConfig[200];
 764:notoriOS.c    ****     // Print port configurations
 765:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 2212              		.loc 1 765 0
 2213 0064 07F11000 		add	r0, r7, #16
 2214 0068 FB68     		ldr	r3, [r7, #12]
 2215 006a 0093     		str	r3, [sp]
 2216 006c BB68     		ldr	r3, [r7, #8]
 2217 006e 2A4A     		ldr	r2, .L75+36
 2218 0070 C821     		movs	r1, #200
 2219 0072 FFF7FEFF 		bl	snprintf
 766:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 2220              		.loc 1 766 0
 2221 0076 07F11003 		add	r3, r7, #16
 2222 007a 1A46     		mov	r2, r3
 2223 007c 2749     		ldr	r1, .L75+40
 2224 007e 0020     		movs	r0, #0
 2225 0080 FFF7FEFF 		bl	printNotif
 767:notoriOS.c    ****     // AT command to configure the port
 768:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 2226              		.loc 1 768 0
 2227 0084 07F11003 		add	r3, r7, #16
 2228 0088 42F21072 		movw	r2, #10000
 2229 008c 2449     		ldr	r1, .L75+44
 2230 008e 1846     		mov	r0, r3
 2231 0090 FFF7FEFF 		bl	at_write_command
 2232 0094 0346     		mov	r3, r0
 2233 0096 87F8E730 		strb	r3, [r7, #231]
 769:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 770:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 771:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 2234              		.loc 1 771 0
 2235 009a 4FF47A72 		mov	r2, #1000
 2236 009e 2149     		ldr	r1, .L75+48
 2237 00a0 2148     		ldr	r0, .L75+52
 2238 00a2 FFF7FEFF 		bl	at_write_command
 2239 00a6 0346     		mov	r3, r0
 2240 00a8 87F8E730 		strb	r3, [r7, #231]
 772:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 773:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 2241              		.loc 1 773 0
 2242 00ac 1848     		ldr	r0, .L75+28
 2243 00ae FFF7FEFF 		bl	strlen
 2244 00b2 0346     		mov	r3, r0
 2245 00b4 1A46     		mov	r2, r3
 2246 00b6 164B     		ldr	r3, .L75+28
 2247 00b8 1344     		add	r3, r3, r2
 2248 00ba 1C49     		ldr	r1, .L75+56
 2249 00bc 1A46     		mov	r2, r3
 2250 00be 0B46     		mov	r3, r1
 2251 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 2252 00c2 1380     		strh	r3, [r2]	@ unaligned
 774:notoriOS.c    ****     // AT command to send http request
 775:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 57


 2253              		.loc 1 775 0
 2254 00c4 41F28832 		movw	r2, #5000
 2255 00c8 1549     		ldr	r1, .L75+44
 2256 00ca 1148     		ldr	r0, .L75+28
 2257 00cc FFF7FEFF 		bl	at_write_command
 2258 00d0 0346     		mov	r3, r0
 2259 00d2 87F8E730 		strb	r3, [r7, #231]
 776:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 777:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 778:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 2260              		.loc 1 778 0
 2261 00d6 41F28832 		movw	r2, #5000
 2262 00da 1549     		ldr	r1, .L75+60
 2263 00dc 1548     		ldr	r0, .L75+64
 2264 00de FFF7FEFF 		bl	at_write_command
 2265 00e2 0346     		mov	r3, r0
 2266 00e4 87F8E730 		strb	r3, [r7, #231]
 779:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 780:notoriOS.c    ****     
 781:notoriOS.c    ****     
 782:notoriOS.c    ****     return upgrade_status;
 2267              		.loc 1 782 0
 2268 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2269              	.L74:
 783:notoriOS.c    ****     
 784:notoriOS.c    **** }
 2270              		.loc 1 784 0 discriminator 1
 2271 00ec 1846     		mov	r0, r3
 2272 00ee E837     		adds	r7, r7, #232
 2273              		.cfi_def_cfa_offset 8
 2274 00f0 BD46     		mov	sp, r7
 2275              		.cfi_def_cfa_register 13
 2276              		@ sp needed
 2277 00f2 80BD     		pop	{r7, pc}
 2278              	.L76:
 2279              		.align	2
 2280              	.L75:
 2281 00f4 00000000 		.word	modem_state
 2282 00f8 3C040000 		.word	.LC64
 2283 00fc AC010000 		.word	.LC21
 2284 0100 B0010000 		.word	.LC22
 2285 0104 B4010000 		.word	.LC23
 2286 0108 BC010000 		.word	.LC24
 2287 010c 00000000 		.word	http_body
 2288 0110 00000000 		.word	http_request
 2289 0114 C4010000 		.word	.LC25
 2290 0118 DC010000 		.word	.LC26
 2291 011c F8010000 		.word	.LC27
 2292 0120 FC010000 		.word	.LC28
 2293 0124 2C020000 		.word	.LC31
 2294 0128 30020000 		.word	.LC32
 2295 012c 40020000 		.word	.LC33
 2296 0130 5C020000 		.word	.LC36
 2297 0134 64020000 		.word	.LC37
 2298              		.cfi_endproc
 2299              	.LFE78:
 2300              		.size	upgraded, .-upgraded
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 58


 2301              		.text
 2302              	.Letext0:
 2303              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2304              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2305              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2306              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 2307              		.file 6 "testing.h"
 2308              		.file 7 "sontek.h"
 2309              		.file 8 "voltages.h"
 2310              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2311              		.file 10 "data.h"
 2312              		.file 11 "modem.h"
 2313              		.file 12 "notoriOS.h"
 2314              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 2315              		.section	.debug_info,"",%progbits
 2316              	.Ldebug_info0:
 2317 0000 FD0B0000 		.4byte	0xbfd
 2318 0004 0400     		.2byte	0x4
 2319 0006 00000000 		.4byte	.Ldebug_abbrev0
 2320 000a 04       		.byte	0x4
 2321 000b 01       		.uleb128 0x1
 2322 000c 54000000 		.4byte	.LASF158
 2323 0010 0C       		.byte	0xc
 2324 0011 34070000 		.4byte	.LASF159
 2325 0015 B1020000 		.4byte	.LASF160
 2326 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2327 001d 00000000 		.4byte	0
 2328 0021 00000000 		.4byte	.Ldebug_line0
 2329 0025 02       		.uleb128 0x2
 2330 0026 01       		.byte	0x1
 2331 0027 06       		.byte	0x6
 2332 0028 30000000 		.4byte	.LASF0
 2333 002c 02       		.uleb128 0x2
 2334 002d 01       		.byte	0x1
 2335 002e 08       		.byte	0x8
 2336 002f 64050000 		.4byte	.LASF1
 2337 0033 02       		.uleb128 0x2
 2338 0034 02       		.byte	0x2
 2339 0035 05       		.byte	0x5
 2340 0036 ED030000 		.4byte	.LASF2
 2341 003a 02       		.uleb128 0x2
 2342 003b 02       		.byte	0x2
 2343 003c 07       		.byte	0x7
 2344 003d 5E020000 		.4byte	.LASF3
 2345 0041 03       		.uleb128 0x3
 2346 0042 B0060000 		.4byte	.LASF9
 2347 0046 02       		.byte	0x2
 2348 0047 3F       		.byte	0x3f
 2349 0048 4C000000 		.4byte	0x4c
 2350 004c 02       		.uleb128 0x2
 2351 004d 04       		.byte	0x4
 2352 004e 05       		.byte	0x5
 2353 004f F8010000 		.4byte	.LASF4
 2354 0053 02       		.uleb128 0x2
 2355 0054 04       		.byte	0x4
 2356 0055 07       		.byte	0x7
 2357 0056 2A030000 		.4byte	.LASF5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 59


 2358 005a 02       		.uleb128 0x2
 2359 005b 08       		.byte	0x8
 2360 005c 05       		.byte	0x5
 2361 005d 53010000 		.4byte	.LASF6
 2362 0061 02       		.uleb128 0x2
 2363 0062 08       		.byte	0x8
 2364 0063 07       		.byte	0x7
 2365 0064 E8000000 		.4byte	.LASF7
 2366 0068 04       		.uleb128 0x4
 2367 0069 04       		.byte	0x4
 2368 006a 05       		.byte	0x5
 2369 006b 696E7400 		.ascii	"int\000"
 2370 006f 02       		.uleb128 0x2
 2371 0070 04       		.byte	0x4
 2372 0071 07       		.byte	0x7
 2373 0072 E9020000 		.4byte	.LASF8
 2374 0076 03       		.uleb128 0x3
 2375 0077 5C050000 		.4byte	.LASF10
 2376 007b 03       		.byte	0x3
 2377 007c 2C       		.byte	0x2c
 2378 007d 41000000 		.4byte	0x41
 2379 0081 05       		.uleb128 0x5
 2380 0082 1A020000 		.4byte	.LASF11
 2381 0086 04       		.byte	0x4
 2382 0087 9201     		.2byte	0x192
 2383 0089 2C000000 		.4byte	0x2c
 2384 008d 05       		.uleb128 0x5
 2385 008e 08000000 		.4byte	.LASF12
 2386 0092 04       		.byte	0x4
 2387 0093 9301     		.2byte	0x193
 2388 0095 3A000000 		.4byte	0x3a
 2389 0099 05       		.uleb128 0x5
 2390 009a 71020000 		.4byte	.LASF13
 2391 009e 04       		.byte	0x4
 2392 009f 9401     		.2byte	0x194
 2393 00a1 53000000 		.4byte	0x53
 2394 00a5 05       		.uleb128 0x5
 2395 00a6 B0030000 		.4byte	.LASF14
 2396 00aa 04       		.byte	0x4
 2397 00ab 9501     		.2byte	0x195
 2398 00ad 25000000 		.4byte	0x25
 2399 00b1 05       		.uleb128 0x5
 2400 00b2 49070000 		.4byte	.LASF15
 2401 00b6 04       		.byte	0x4
 2402 00b7 9601     		.2byte	0x196
 2403 00b9 33000000 		.4byte	0x33
 2404 00bd 05       		.uleb128 0x5
 2405 00be 38020000 		.4byte	.LASF16
 2406 00c2 04       		.byte	0x4
 2407 00c3 9701     		.2byte	0x197
 2408 00c5 4C000000 		.4byte	0x4c
 2409 00c9 02       		.uleb128 0x2
 2410 00ca 04       		.byte	0x4
 2411 00cb 04       		.byte	0x4
 2412 00cc 10050000 		.4byte	.LASF17
 2413 00d0 02       		.uleb128 0x2
 2414 00d1 08       		.byte	0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 60


 2415 00d2 04       		.byte	0x4
 2416 00d3 CD070000 		.4byte	.LASF18
 2417 00d7 02       		.uleb128 0x2
 2418 00d8 01       		.byte	0x1
 2419 00d9 08       		.byte	0x8
 2420 00da 80060000 		.4byte	.LASF19
 2421 00de 02       		.uleb128 0x2
 2422 00df 08       		.byte	0x8
 2423 00e0 04       		.byte	0x4
 2424 00e1 62060000 		.4byte	.LASF20
 2425 00e5 02       		.uleb128 0x2
 2426 00e6 04       		.byte	0x4
 2427 00e7 07       		.byte	0x7
 2428 00e8 6A040000 		.4byte	.LASF21
 2429 00ec 06       		.uleb128 0x6
 2430 00ed 04       		.byte	0x4
 2431 00ee D7000000 		.4byte	0xd7
 2432 00f2 07       		.uleb128 0x7
 2433 00f3 D7000000 		.4byte	0xd7
 2434 00f7 02010000 		.4byte	0x102
 2435 00fb 08       		.uleb128 0x8
 2436 00fc E5000000 		.4byte	0xe5
 2437 0100 17       		.byte	0x17
 2438 0101 00       		.byte	0
 2439 0102 09       		.uleb128 0x9
 2440 0103 0C       		.byte	0xc
 2441 0104 05       		.byte	0x5
 2442 0105 30       		.byte	0x30
 2443 0106 6B010000 		.4byte	0x16b
 2444 010a 0A       		.uleb128 0xa
 2445 010b 53656300 		.ascii	"Sec\000"
 2446 010f 05       		.byte	0x5
 2447 0110 32       		.byte	0x32
 2448 0111 81000000 		.4byte	0x81
 2449 0115 00       		.byte	0
 2450 0116 0A       		.uleb128 0xa
 2451 0117 4D696E00 		.ascii	"Min\000"
 2452 011b 05       		.byte	0x5
 2453 011c 33       		.byte	0x33
 2454 011d 81000000 		.4byte	0x81
 2455 0121 01       		.byte	0x1
 2456 0122 0B       		.uleb128 0xb
 2457 0123 FF000000 		.4byte	.LASF22
 2458 0127 05       		.byte	0x5
 2459 0128 34       		.byte	0x34
 2460 0129 81000000 		.4byte	0x81
 2461 012d 02       		.byte	0x2
 2462 012e 0B       		.uleb128 0xb
 2463 012f C1050000 		.4byte	.LASF23
 2464 0133 05       		.byte	0x5
 2465 0134 35       		.byte	0x35
 2466 0135 81000000 		.4byte	0x81
 2467 0139 03       		.byte	0x3
 2468 013a 0B       		.uleb128 0xb
 2469 013b 6B030000 		.4byte	.LASF24
 2470 013f 05       		.byte	0x5
 2471 0140 36       		.byte	0x36
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 61


 2472 0141 81000000 		.4byte	0x81
 2473 0145 04       		.byte	0x4
 2474 0146 0B       		.uleb128 0xb
 2475 0147 82070000 		.4byte	.LASF25
 2476 014b 05       		.byte	0x5
 2477 014c 37       		.byte	0x37
 2478 014d 8D000000 		.4byte	0x8d
 2479 0151 06       		.byte	0x6
 2480 0152 0B       		.uleb128 0xb
 2481 0153 E2000000 		.4byte	.LASF26
 2482 0157 05       		.byte	0x5
 2483 0158 38       		.byte	0x38
 2484 0159 81000000 		.4byte	0x81
 2485 015d 08       		.byte	0x8
 2486 015e 0B       		.uleb128 0xb
 2487 015f 51050000 		.4byte	.LASF27
 2488 0163 05       		.byte	0x5
 2489 0164 39       		.byte	0x39
 2490 0165 8D000000 		.4byte	0x8d
 2491 0169 0A       		.byte	0xa
 2492 016a 00       		.byte	0
 2493 016b 03       		.uleb128 0x3
 2494 016c B5040000 		.4byte	.LASF28
 2495 0170 05       		.byte	0x5
 2496 0171 3A       		.byte	0x3a
 2497 0172 76010000 		.4byte	0x176
 2498 0176 0C       		.uleb128 0xc
 2499 0177 02010000 		.4byte	0x102
 2500 017b 0D       		.uleb128 0xd
 2501 017c 8101     		.2byte	0x181
 2502 017e 06       		.byte	0x6
 2503 017f 0A       		.byte	0xa
 2504 0180 A9010000 		.4byte	0x1a9
 2505 0184 0B       		.uleb128 0xb
 2506 0185 47050000 		.4byte	.LASF29
 2507 0189 06       		.byte	0x6
 2508 018a 0C       		.byte	0xc
 2509 018b A9010000 		.4byte	0x1a9
 2510 018f 00       		.byte	0
 2511 0190 0B       		.uleb128 0xb
 2512 0191 09070000 		.4byte	.LASF30
 2513 0195 06       		.byte	0x6
 2514 0196 0D       		.byte	0xd
 2515 0197 81000000 		.4byte	0x81
 2516 019b 80       		.byte	0x80
 2517 019c 0B       		.uleb128 0xb
 2518 019d E3050000 		.4byte	.LASF31
 2519 01a1 06       		.byte	0x6
 2520 01a2 0F       		.byte	0xf
 2521 01a3 B9010000 		.4byte	0x1b9
 2522 01a7 81       		.byte	0x81
 2523 01a8 00       		.byte	0
 2524 01a9 07       		.uleb128 0x7
 2525 01aa D7000000 		.4byte	0xd7
 2526 01ae B9010000 		.4byte	0x1b9
 2527 01b2 08       		.uleb128 0x8
 2528 01b3 E5000000 		.4byte	0xe5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 62


 2529 01b7 7F       		.byte	0x7f
 2530 01b8 00       		.byte	0
 2531 01b9 07       		.uleb128 0x7
 2532 01ba D7000000 		.4byte	0xd7
 2533 01be C9010000 		.4byte	0x1c9
 2534 01c2 08       		.uleb128 0x8
 2535 01c3 E5000000 		.4byte	0xe5
 2536 01c7 FF       		.byte	0xff
 2537 01c8 00       		.byte	0
 2538 01c9 03       		.uleb128 0x3
 2539 01ca CB050000 		.4byte	.LASF32
 2540 01ce 06       		.byte	0x6
 2541 01cf 10       		.byte	0x10
 2542 01d0 7B010000 		.4byte	0x17b
 2543 01d4 09       		.uleb128 0x9
 2544 01d5 18       		.byte	0x18
 2545 01d6 07       		.byte	0x7
 2546 01d7 17       		.byte	0x17
 2547 01d8 25020000 		.4byte	0x225
 2548 01dc 0B       		.uleb128 0xb
 2549 01dd 54060000 		.4byte	.LASF33
 2550 01e1 07       		.byte	0x7
 2551 01e2 18       		.byte	0x18
 2552 01e3 81000000 		.4byte	0x81
 2553 01e7 00       		.byte	0
 2554 01e8 0B       		.uleb128 0xb
 2555 01e9 10010000 		.4byte	.LASF34
 2556 01ed 07       		.byte	0x7
 2557 01ee 19       		.byte	0x19
 2558 01ef C9000000 		.4byte	0xc9
 2559 01f3 04       		.byte	0x4
 2560 01f4 0B       		.uleb128 0xb
 2561 01f5 30010000 		.4byte	.LASF35
 2562 01f9 07       		.byte	0x7
 2563 01fa 1A       		.byte	0x1a
 2564 01fb C9000000 		.4byte	0xc9
 2565 01ff 08       		.byte	0x8
 2566 0200 0B       		.uleb128 0xb
 2567 0201 35010000 		.4byte	.LASF36
 2568 0205 07       		.byte	0x7
 2569 0206 1B       		.byte	0x1b
 2570 0207 C9000000 		.4byte	0xc9
 2571 020b 0C       		.byte	0xc
 2572 020c 0B       		.uleb128 0xb
 2573 020d 3A010000 		.4byte	.LASF37
 2574 0211 07       		.byte	0x7
 2575 0212 1C       		.byte	0x1c
 2576 0213 C9000000 		.4byte	0xc9
 2577 0217 10       		.byte	0x10
 2578 0218 0B       		.uleb128 0xb
 2579 0219 3F010000 		.4byte	.LASF38
 2580 021d 07       		.byte	0x7
 2581 021e 1D       		.byte	0x1d
 2582 021f C9000000 		.4byte	0xc9
 2583 0223 14       		.byte	0x14
 2584 0224 00       		.byte	0
 2585 0225 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 63


 2586 0226 85060000 		.4byte	.LASF39
 2587 022a 07       		.byte	0x7
 2588 022b 1E       		.byte	0x1e
 2589 022c D4010000 		.4byte	0x1d4
 2590 0230 09       		.uleb128 0x9
 2591 0231 14       		.byte	0x14
 2592 0232 08       		.byte	0x8
 2593 0233 11       		.byte	0x11
 2594 0234 75020000 		.4byte	0x275
 2595 0238 0B       		.uleb128 0xb
 2596 0239 5B030000 		.4byte	.LASF40
 2597 023d 08       		.byte	0x8
 2598 023e 12       		.byte	0x12
 2599 023f C9000000 		.4byte	0xc9
 2600 0243 00       		.byte	0
 2601 0244 0B       		.uleb128 0xb
 2602 0245 9F010000 		.4byte	.LASF41
 2603 0249 08       		.byte	0x8
 2604 024a 13       		.byte	0x13
 2605 024b C9000000 		.4byte	0xc9
 2606 024f 04       		.byte	0x4
 2607 0250 0B       		.uleb128 0xb
 2608 0251 AD010000 		.4byte	.LASF42
 2609 0255 08       		.byte	0x8
 2610 0256 14       		.byte	0x14
 2611 0257 C9000000 		.4byte	0xc9
 2612 025b 08       		.byte	0x8
 2613 025c 0B       		.uleb128 0xb
 2614 025d F2040000 		.4byte	.LASF43
 2615 0261 08       		.byte	0x8
 2616 0262 15       		.byte	0x15
 2617 0263 C9000000 		.4byte	0xc9
 2618 0267 0C       		.byte	0xc
 2619 0268 0B       		.uleb128 0xb
 2620 0269 54060000 		.4byte	.LASF33
 2621 026d 08       		.byte	0x8
 2622 026e 16       		.byte	0x16
 2623 026f 81000000 		.4byte	0x81
 2624 0273 10       		.byte	0x10
 2625 0274 00       		.byte	0
 2626 0275 03       		.uleb128 0x3
 2627 0276 D4070000 		.4byte	.LASF44
 2628 027a 08       		.byte	0x8
 2629 027b 17       		.byte	0x17
 2630 027c 30020000 		.4byte	0x230
 2631 0280 09       		.uleb128 0x9
 2632 0281 08       		.byte	0x8
 2633 0282 08       		.byte	0x8
 2634 0283 19       		.byte	0x19
 2635 0284 A1020000 		.4byte	0x2a1
 2636 0288 0B       		.uleb128 0xb
 2637 0289 43060000 		.4byte	.LASF45
 2638 028d 08       		.byte	0x8
 2639 028e 1A       		.byte	0x1a
 2640 028f C9000000 		.4byte	0xc9
 2641 0293 00       		.byte	0
 2642 0294 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 64


 2643 0295 AD050000 		.4byte	.LASF46
 2644 0299 08       		.byte	0x8
 2645 029a 1B       		.byte	0x1b
 2646 029b C9000000 		.4byte	0xc9
 2647 029f 04       		.byte	0x4
 2648 02a0 00       		.byte	0
 2649 02a1 03       		.uleb128 0x3
 2650 02a2 8C070000 		.4byte	.LASF47
 2651 02a6 08       		.byte	0x8
 2652 02a7 1C       		.byte	0x1c
 2653 02a8 80020000 		.4byte	0x280
 2654 02ac 0E       		.uleb128 0xe
 2655 02ad 746D00   		.ascii	"tm\000"
 2656 02b0 24       		.byte	0x24
 2657 02b1 09       		.byte	0x9
 2658 02b2 21       		.byte	0x21
 2659 02b3 24030000 		.4byte	0x324
 2660 02b7 0B       		.uleb128 0xb
 2661 02b8 F7060000 		.4byte	.LASF48
 2662 02bc 09       		.byte	0x9
 2663 02bd 23       		.byte	0x23
 2664 02be 68000000 		.4byte	0x68
 2665 02c2 00       		.byte	0
 2666 02c3 0B       		.uleb128 0xb
 2667 02c4 4C040000 		.4byte	.LASF49
 2668 02c8 09       		.byte	0x9
 2669 02c9 24       		.byte	0x24
 2670 02ca 68000000 		.4byte	0x68
 2671 02ce 04       		.byte	0x4
 2672 02cf 0B       		.uleb128 0xb
 2673 02d0 0F000000 		.4byte	.LASF50
 2674 02d4 09       		.byte	0x9
 2675 02d5 25       		.byte	0x25
 2676 02d6 68000000 		.4byte	0x68
 2677 02da 08       		.byte	0x8
 2678 02db 0B       		.uleb128 0xb
 2679 02dc E6060000 		.4byte	.LASF51
 2680 02e0 09       		.byte	0x9
 2681 02e1 26       		.byte	0x26
 2682 02e2 68000000 		.4byte	0x68
 2683 02e6 0C       		.byte	0xc
 2684 02e7 0B       		.uleb128 0xb
 2685 02e8 99020000 		.4byte	.LASF52
 2686 02ec 09       		.byte	0x9
 2687 02ed 27       		.byte	0x27
 2688 02ee 68000000 		.4byte	0x68
 2689 02f2 10       		.byte	0x10
 2690 02f3 0B       		.uleb128 0xb
 2691 02f4 D7020000 		.4byte	.LASF53
 2692 02f8 09       		.byte	0x9
 2693 02f9 28       		.byte	0x28
 2694 02fa 68000000 		.4byte	0x68
 2695 02fe 14       		.byte	0x14
 2696 02ff 0B       		.uleb128 0xb
 2697 0300 5A060000 		.4byte	.LASF54
 2698 0304 09       		.byte	0x9
 2699 0305 29       		.byte	0x29
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 65


 2700 0306 68000000 		.4byte	0x68
 2701 030a 18       		.byte	0x18
 2702 030b 0B       		.uleb128 0xb
 2703 030c 73040000 		.4byte	.LASF55
 2704 0310 09       		.byte	0x9
 2705 0311 2A       		.byte	0x2a
 2706 0312 68000000 		.4byte	0x68
 2707 0316 1C       		.byte	0x1c
 2708 0317 0B       		.uleb128 0xb
 2709 0318 94030000 		.4byte	.LASF56
 2710 031c 09       		.byte	0x9
 2711 031d 2B       		.byte	0x2b
 2712 031e 68000000 		.4byte	0x68
 2713 0322 20       		.byte	0x20
 2714 0323 00       		.byte	0
 2715 0324 09       		.uleb128 0x9
 2716 0325 2C       		.byte	0x2c
 2717 0326 0A       		.byte	0xa
 2718 0327 14       		.byte	0x14
 2719 0328 51030000 		.4byte	0x351
 2720 032c 0A       		.uleb128 0xa
 2721 032d 6B657900 		.ascii	"key\000"
 2722 0331 0A       		.byte	0xa
 2723 0332 15       		.byte	0x15
 2724 0333 51030000 		.4byte	0x351
 2725 0337 00       		.byte	0
 2726 0338 0B       		.uleb128 0xb
 2727 0339 CC020000 		.4byte	.LASF57
 2728 033d 0A       		.byte	0xa
 2729 033e 16       		.byte	0x16
 2730 033f 51030000 		.4byte	0x351
 2731 0343 14       		.byte	0x14
 2732 0344 0B       		.uleb128 0xb
 2733 0345 AB040000 		.4byte	.LASF58
 2734 0349 0A       		.byte	0xa
 2735 034a 17       		.byte	0x17
 2736 034b BD000000 		.4byte	0xbd
 2737 034f 28       		.byte	0x28
 2738 0350 00       		.byte	0
 2739 0351 07       		.uleb128 0x7
 2740 0352 D7000000 		.4byte	0xd7
 2741 0356 61030000 		.4byte	0x361
 2742 035a 08       		.uleb128 0x8
 2743 035b E5000000 		.4byte	0xe5
 2744 035f 13       		.byte	0x13
 2745 0360 00       		.byte	0
 2746 0361 03       		.uleb128 0x3
 2747 0362 FE020000 		.4byte	.LASF59
 2748 0366 0A       		.byte	0xa
 2749 0367 19       		.byte	0x19
 2750 0368 24030000 		.4byte	0x324
 2751 036c 09       		.uleb128 0x9
 2752 036d 3C       		.byte	0x3c
 2753 036e 0B       		.byte	0xb
 2754 036f 36       		.byte	0x36
 2755 0370 99030000 		.4byte	0x399
 2756 0374 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 66


 2757 0375 DF060000 		.4byte	.LASF60
 2758 0379 0B       		.byte	0xb
 2759 037a 37       		.byte	0x37
 2760 037b 51030000 		.4byte	0x351
 2761 037f 00       		.byte	0
 2762 0380 0B       		.uleb128 0xb
 2763 0381 78020000 		.4byte	.LASF61
 2764 0385 0B       		.byte	0xb
 2765 0386 38       		.byte	0x38
 2766 0387 51030000 		.4byte	0x351
 2767 038b 14       		.byte	0x14
 2768 038c 0B       		.uleb128 0xb
 2769 038d DE050000 		.4byte	.LASF62
 2770 0391 0B       		.byte	0xb
 2771 0392 39       		.byte	0x39
 2772 0393 51030000 		.4byte	0x351
 2773 0397 28       		.byte	0x28
 2774 0398 00       		.byte	0
 2775 0399 03       		.uleb128 0x3
 2776 039a E5010000 		.4byte	.LASF63
 2777 039e 0B       		.byte	0xb
 2778 039f 3B       		.byte	0x3b
 2779 03a0 6C030000 		.4byte	0x36c
 2780 03a4 09       		.uleb128 0x9
 2781 03a5 20       		.byte	0x20
 2782 03a6 0B       		.byte	0xb
 2783 03a7 3D       		.byte	0x3d
 2784 03a8 0D040000 		.4byte	0x40d
 2785 03ac 0B       		.uleb128 0xb
 2786 03ad F2010000 		.4byte	.LASF64
 2787 03b1 0B       		.byte	0xb
 2788 03b2 3E       		.byte	0x3e
 2789 03b3 68000000 		.4byte	0x68
 2790 03b7 00       		.byte	0
 2791 03b8 0A       		.uleb128 0xa
 2792 03b9 62657200 		.ascii	"ber\000"
 2793 03bd 0B       		.byte	0xb
 2794 03be 3F       		.byte	0x3f
 2795 03bf 68000000 		.4byte	0x68
 2796 03c3 04       		.byte	0x4
 2797 03c4 0B       		.uleb128 0xb
 2798 03c5 BC050000 		.4byte	.LASF65
 2799 03c9 0B       		.byte	0xb
 2800 03ca 40       		.byte	0x40
 2801 03cb 68000000 		.4byte	0x68
 2802 03cf 08       		.byte	0x8
 2803 03d0 0B       		.uleb128 0xb
 2804 03d1 69010000 		.4byte	.LASF66
 2805 03d5 0B       		.byte	0xb
 2806 03d6 41       		.byte	0x41
 2807 03d7 68000000 		.4byte	0x68
 2808 03db 0C       		.byte	0xc
 2809 03dc 0B       		.uleb128 0xb
 2810 03dd 87050000 		.4byte	.LASF67
 2811 03e1 0B       		.byte	0xb
 2812 03e2 42       		.byte	0x42
 2813 03e3 68000000 		.4byte	0x68
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 67


 2814 03e7 10       		.byte	0x10
 2815 03e8 0B       		.uleb128 0xb
 2816 03e9 82050000 		.4byte	.LASF68
 2817 03ed 0B       		.byte	0xb
 2818 03ee 43       		.byte	0x43
 2819 03ef 68000000 		.4byte	0x68
 2820 03f3 14       		.byte	0x14
 2821 03f4 0B       		.uleb128 0xb
 2822 03f5 7C010000 		.4byte	.LASF69
 2823 03f9 0B       		.byte	0xb
 2824 03fa 44       		.byte	0x44
 2825 03fb 68000000 		.4byte	0x68
 2826 03ff 18       		.byte	0x18
 2827 0400 0B       		.uleb128 0xb
 2828 0401 01020000 		.4byte	.LASF70
 2829 0405 0B       		.byte	0xb
 2830 0406 45       		.byte	0x45
 2831 0407 68000000 		.4byte	0x68
 2832 040b 1C       		.byte	0x1c
 2833 040c 00       		.byte	0
 2834 040d 03       		.uleb128 0x3
 2835 040e 35060000 		.4byte	.LASF71
 2836 0412 0B       		.byte	0xb
 2837 0413 47       		.byte	0x47
 2838 0414 A4030000 		.4byte	0x3a4
 2839 0418 09       		.uleb128 0x9
 2840 0419 05       		.byte	0x5
 2841 041a 0B       		.byte	0xb
 2842 041b 53       		.byte	0x53
 2843 041c 5D040000 		.4byte	0x45d
 2844 0420 0B       		.uleb128 0xb
 2845 0421 3E020000 		.4byte	.LASF72
 2846 0425 0B       		.byte	0xb
 2847 0426 55       		.byte	0x55
 2848 0427 81000000 		.4byte	0x81
 2849 042b 00       		.byte	0
 2850 042c 0B       		.uleb128 0xb
 2851 042d 73070000 		.4byte	.LASF73
 2852 0431 0B       		.byte	0xb
 2853 0432 57       		.byte	0x57
 2854 0433 5D040000 		.4byte	0x45d
 2855 0437 01       		.byte	0x1
 2856 0438 0B       		.uleb128 0xb
 2857 0439 C0070000 		.4byte	.LASF74
 2858 043d 0B       		.byte	0xb
 2859 043e 59       		.byte	0x59
 2860 043f 81000000 		.4byte	0x81
 2861 0443 02       		.byte	0x2
 2862 0444 0B       		.uleb128 0xb
 2863 0445 A3050000 		.4byte	.LASF75
 2864 0449 0B       		.byte	0xb
 2865 044a 5B       		.byte	0x5b
 2866 044b 81000000 		.4byte	0x81
 2867 044f 03       		.byte	0x3
 2868 0450 0B       		.uleb128 0xb
 2869 0451 A0020000 		.4byte	.LASF76
 2870 0455 0B       		.byte	0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 68


 2871 0456 5E       		.byte	0x5e
 2872 0457 81000000 		.4byte	0x81
 2873 045b 04       		.byte	0x4
 2874 045c 00       		.byte	0
 2875 045d 02       		.uleb128 0x2
 2876 045e 01       		.byte	0x1
 2877 045f 02       		.byte	0x2
 2878 0460 56050000 		.4byte	.LASF77
 2879 0464 03       		.uleb128 0x3
 2880 0465 19040000 		.4byte	.LASF78
 2881 0469 0B       		.byte	0xb
 2882 046a 60       		.byte	0x60
 2883 046b 18040000 		.4byte	0x418
 2884 046f 09       		.uleb128 0x9
 2885 0470 06       		.byte	0x6
 2886 0471 0C       		.byte	0xc
 2887 0472 2E       		.byte	0x2e
 2888 0473 A8040000 		.4byte	0x4a8
 2889 0477 0B       		.uleb128 0xb
 2890 0478 81020000 		.4byte	.LASF79
 2891 047c 0C       		.byte	0xc
 2892 047d 30       		.byte	0x30
 2893 047e 8D000000 		.4byte	0x8d
 2894 0482 00       		.byte	0
 2895 0483 0B       		.uleb128 0xb
 2896 0484 5D070000 		.4byte	.LASF80
 2897 0488 0C       		.byte	0xc
 2898 0489 31       		.byte	0x31
 2899 048a B1000000 		.4byte	0xb1
 2900 048e 02       		.byte	0x2
 2901 048f 0B       		.uleb128 0xb
 2902 0490 4F070000 		.4byte	.LASF81
 2903 0494 0C       		.byte	0xc
 2904 0495 32       		.byte	0x32
 2905 0496 81000000 		.4byte	0x81
 2906 049a 04       		.byte	0x4
 2907 049b 0B       		.uleb128 0xb
 2908 049c 3C000000 		.4byte	.LASF82
 2909 04a0 0C       		.byte	0xc
 2910 04a1 33       		.byte	0x33
 2911 04a2 81000000 		.4byte	0x81
 2912 04a6 05       		.byte	0x5
 2913 04a7 00       		.byte	0
 2914 04a8 03       		.uleb128 0x3
 2915 04a9 14020000 		.4byte	.LASF83
 2916 04ad 0C       		.byte	0xc
 2917 04ae 36       		.byte	0x36
 2918 04af B3040000 		.4byte	0x4b3
 2919 04b3 0C       		.uleb128 0xc
 2920 04b4 6F040000 		.4byte	0x46f
 2921 04b8 09       		.uleb128 0x9
 2922 04b9 1C       		.byte	0x1c
 2923 04ba 0C       		.byte	0xc
 2924 04bb 39       		.byte	0x39
 2925 04bc D9040000 		.4byte	0x4d9
 2926 04c0 0B       		.uleb128 0xb
 2927 04c1 9D030000 		.4byte	.LASF84
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 69


 2928 04c5 0C       		.byte	0xc
 2929 04c6 3B       		.byte	0x3b
 2930 04c7 D9040000 		.4byte	0x4d9
 2931 04cb 00       		.byte	0
 2932 04cc 0B       		.uleb128 0xb
 2933 04cd B2070000 		.4byte	.LASF85
 2934 04d1 0C       		.byte	0xc
 2935 04d2 3C       		.byte	0x3c
 2936 04d3 F2000000 		.4byte	0xf2
 2937 04d7 04       		.byte	0x4
 2938 04d8 00       		.byte	0
 2939 04d9 06       		.uleb128 0x6
 2940 04da 04       		.byte	0x4
 2941 04db 99030000 		.4byte	0x399
 2942 04df 03       		.uleb128 0x3
 2943 04e0 0E040000 		.4byte	.LASF86
 2944 04e4 0C       		.byte	0xc
 2945 04e5 3E       		.byte	0x3e
 2946 04e6 B8040000 		.4byte	0x4b8
 2947 04ea 09       		.uleb128 0x9
 2948 04eb 68       		.byte	0x68
 2949 04ec 0C       		.byte	0xc
 2950 04ed 44       		.byte	0x44
 2951 04ee 0B050000 		.4byte	0x50b
 2952 04f2 0B       		.uleb128 0xb
 2953 04f3 A8030000 		.4byte	.LASF87
 2954 04f7 0C       		.byte	0xc
 2955 04f8 49       		.byte	0x49
 2956 04f9 0B050000 		.4byte	0x50b
 2957 04fd 00       		.byte	0
 2958 04fe 0B       		.uleb128 0xb
 2959 04ff 8C030000 		.4byte	.LASF88
 2960 0503 0C       		.byte	0xc
 2961 0504 4A       		.byte	0x4a
 2962 0505 68000000 		.4byte	0x68
 2963 0509 64       		.byte	0x64
 2964 050a 00       		.byte	0
 2965 050b 07       		.uleb128 0x7
 2966 050c D7000000 		.4byte	0xd7
 2967 0510 1B050000 		.4byte	0x51b
 2968 0514 08       		.uleb128 0x8
 2969 0515 E5000000 		.4byte	0xe5
 2970 0519 63       		.byte	0x63
 2971 051a 00       		.byte	0
 2972 051b 03       		.uleb128 0x3
 2973 051c 7B040000 		.4byte	.LASF89
 2974 0520 0C       		.byte	0xc
 2975 0521 50       		.byte	0x50
 2976 0522 EA040000 		.4byte	0x4ea
 2977 0526 0F       		.uleb128 0xf
 2978 0527 C3060000 		.4byte	.LASF161
 2979 052b 01       		.byte	0x1
 2980 052c 14       		.byte	0x14
 2981 052d 00000000 		.4byte	.LFB64
 2982 0531 0C000000 		.4byte	.LFE64-.LFB64
 2983 0535 01       		.uleb128 0x1
 2984 0536 9C       		.byte	0x9c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 70


 2985 0537 10       		.uleb128 0x10
 2986 0538 A2070000 		.4byte	.LASF103
 2987 053c 01       		.byte	0x1
 2988 053d 28       		.byte	0x28
 2989 053e 00000000 		.4byte	.LFB65
 2990 0542 2C010000 		.4byte	.LFE65-.LFB65
 2991 0546 01       		.uleb128 0x1
 2992 0547 9C       		.byte	0x9c
 2993 0548 77050000 		.4byte	0x577
 2994 054c 11       		.uleb128 0x11
 2995 054d BA060000 		.4byte	.LASF90
 2996 0551 01       		.byte	0x1
 2997 0552 3E       		.byte	0x3e
 2998 0553 77050000 		.4byte	0x577
 2999 0557 02       		.uleb128 0x2
 3000 0558 91       		.byte	0x91
 3001 0559 64       		.sleb128 -28
 3002 055a 11       		.uleb128 0x11
 3003 055b 7C070000 		.4byte	.LASF91
 3004 055f 01       		.byte	0x1
 3005 0560 5B       		.byte	0x5b
 3006 0561 87050000 		.4byte	0x587
 3007 0565 02       		.uleb128 0x2
 3008 0566 91       		.byte	0x91
 3009 0567 58       		.sleb128 -40
 3010 0568 11       		.uleb128 0x11
 3011 0569 3C030000 		.4byte	.LASF92
 3012 056d 01       		.byte	0x1
 3013 056e 60       		.byte	0x60
 3014 056f 81000000 		.4byte	0x81
 3015 0573 02       		.uleb128 0x2
 3016 0574 91       		.byte	0x91
 3017 0575 6F       		.sleb128 -17
 3018 0576 00       		.byte	0
 3019 0577 07       		.uleb128 0x7
 3020 0578 99000000 		.4byte	0x99
 3021 057c 87050000 		.4byte	0x587
 3022 0580 08       		.uleb128 0x8
 3023 0581 E5000000 		.4byte	0xe5
 3024 0585 01       		.byte	0x1
 3025 0586 00       		.byte	0
 3026 0587 07       		.uleb128 0x7
 3027 0588 D7000000 		.4byte	0xd7
 3028 058c 97050000 		.4byte	0x597
 3029 0590 08       		.uleb128 0x8
 3030 0591 E5000000 		.4byte	0xe5
 3031 0595 09       		.byte	0x9
 3032 0596 00       		.byte	0
 3033 0597 12       		.uleb128 0x12
 3034 0598 B5030000 		.4byte	.LASF94
 3035 059c 01       		.byte	0x1
 3036 059d 6A       		.byte	0x6a
 3037 059e 68000000 		.4byte	0x68
 3038 05a2 00000000 		.4byte	.LFB66
 3039 05a6 64000000 		.4byte	.LFE66-.LFB66
 3040 05aa 01       		.uleb128 0x1
 3041 05ab 9C       		.byte	0x9c
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 71


 3042 05ac BF050000 		.4byte	0x5bf
 3043 05b0 11       		.uleb128 0x11
 3044 05b1 3A050000 		.4byte	.LASF93
 3045 05b5 01       		.byte	0x1
 3046 05b6 84       		.byte	0x84
 3047 05b7 81000000 		.4byte	0x81
 3048 05bb 02       		.uleb128 0x2
 3049 05bc 91       		.byte	0x91
 3050 05bd 77       		.sleb128 -9
 3051 05be 00       		.byte	0
 3052 05bf 13       		.uleb128 0x13
 3053 05c0 CE060000 		.4byte	.LASF162
 3054 05c4 01       		.byte	0x1
 3055 05c5 94       		.byte	0x94
 3056 05c6 00000000 		.4byte	.LFB67
 3057 05ca 2A000000 		.4byte	.LFE67-.LFB67
 3058 05ce 01       		.uleb128 0x1
 3059 05cf 9C       		.byte	0x9c
 3060 05d0 14       		.uleb128 0x14
 3061 05d1 0A030000 		.4byte	.LASF95
 3062 05d5 01       		.byte	0x1
 3063 05d6 B9       		.byte	0xb9
 3064 05d7 00000000 		.4byte	.LFB68
 3065 05db 50000000 		.4byte	.LFE68-.LFB68
 3066 05df 01       		.uleb128 0x1
 3067 05e0 9C       		.byte	0x9c
 3068 05e1 F4050000 		.4byte	0x5f4
 3069 05e5 15       		.uleb128 0x15
 3070 05e6 30040000 		.4byte	.LASF96
 3071 05ea 01       		.byte	0x1
 3072 05eb B9       		.byte	0xb9
 3073 05ec 81000000 		.4byte	0x81
 3074 05f0 02       		.uleb128 0x2
 3075 05f1 91       		.byte	0x91
 3076 05f2 77       		.sleb128 -9
 3077 05f3 00       		.byte	0
 3078 05f4 16       		.uleb128 0x16
 3079 05f5 97070000 		.4byte	.LASF100
 3080 05f9 01       		.byte	0x1
 3081 05fa D0       		.byte	0xd0
 3082 05fb 81000000 		.4byte	0x81
 3083 05ff 00000000 		.4byte	.LFB69
 3084 0603 48000000 		.4byte	.LFE69-.LFB69
 3085 0607 01       		.uleb128 0x1
 3086 0608 9C       		.byte	0x9c
 3087 0609 2A060000 		.4byte	0x62a
 3088 060d 15       		.uleb128 0x15
 3089 060e 59040000 		.4byte	.LASF97
 3090 0612 01       		.byte	0x1
 3091 0613 D0       		.byte	0xd0
 3092 0614 2A060000 		.4byte	0x62a
 3093 0618 02       		.uleb128 0x2
 3094 0619 91       		.byte	0x91
 3095 061a 74       		.sleb128 -12
 3096 061b 15       		.uleb128 0x15
 3097 061c 30040000 		.4byte	.LASF96
 3098 0620 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 72


 3099 0621 D0       		.byte	0xd0
 3100 0622 81000000 		.4byte	0x81
 3101 0626 02       		.uleb128 0x2
 3102 0627 91       		.byte	0x91
 3103 0628 73       		.sleb128 -13
 3104 0629 00       		.byte	0
 3105 062a 06       		.uleb128 0x6
 3106 062b 04       		.byte	0x4
 3107 062c A8040000 		.4byte	0x4a8
 3108 0630 17       		.uleb128 0x17
 3109 0631 8C050000 		.4byte	.LASF98
 3110 0635 01       		.byte	0x1
 3111 0636 E5       		.byte	0xe5
 3112 0637 00000000 		.4byte	.LFB70
 3113 063b 1E000000 		.4byte	.LFE70-.LFB70
 3114 063f 01       		.uleb128 0x1
 3115 0640 9C       		.byte	0x9c
 3116 0641 54060000 		.4byte	0x654
 3117 0645 15       		.uleb128 0x15
 3118 0646 EA050000 		.4byte	.LASF99
 3119 064a 01       		.byte	0x1
 3120 064b E5       		.byte	0xe5
 3121 064c 2A060000 		.4byte	0x62a
 3122 0650 02       		.uleb128 0x2
 3123 0651 91       		.byte	0x91
 3124 0652 74       		.sleb128 -12
 3125 0653 00       		.byte	0
 3126 0654 18       		.uleb128 0x18
 3127 0655 D8040000 		.4byte	.LASF101
 3128 0659 01       		.byte	0x1
 3129 065a EE       		.byte	0xee
 3130 065b A8040000 		.4byte	0x4a8
 3131 065f 00000000 		.4byte	.LFB71
 3132 0663 46000000 		.4byte	.LFE71-.LFB71
 3133 0667 01       		.uleb128 0x1
 3134 0668 9C       		.byte	0x9c
 3135 0669 A6060000 		.4byte	0x6a6
 3136 066d 15       		.uleb128 0x15
 3137 066e 81020000 		.4byte	.LASF79
 3138 0672 01       		.byte	0x1
 3139 0673 EE       		.byte	0xee
 3140 0674 8D000000 		.4byte	0x8d
 3141 0678 02       		.uleb128 0x2
 3142 0679 91       		.byte	0x91
 3143 067a 6A       		.sleb128 -22
 3144 067b 15       		.uleb128 0x15
 3145 067c 4F070000 		.4byte	.LASF81
 3146 0680 01       		.byte	0x1
 3147 0681 EE       		.byte	0xee
 3148 0682 81000000 		.4byte	0x81
 3149 0686 02       		.uleb128 0x2
 3150 0687 91       		.byte	0x91
 3151 0688 69       		.sleb128 -23
 3152 0689 15       		.uleb128 0x15
 3153 068a 3C000000 		.4byte	.LASF82
 3154 068e 01       		.byte	0x1
 3155 068f EE       		.byte	0xee
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 73


 3156 0690 81000000 		.4byte	0x81
 3157 0694 02       		.uleb128 0x2
 3158 0695 91       		.byte	0x91
 3159 0696 68       		.sleb128 -24
 3160 0697 11       		.uleb128 0x11
 3161 0698 EE060000 		.4byte	.LASF102
 3162 069c 01       		.byte	0x1
 3163 069d F1       		.byte	0xf1
 3164 069e A8040000 		.4byte	0x4a8
 3165 06a2 02       		.uleb128 0x2
 3166 06a3 91       		.byte	0x91
 3167 06a4 70       		.sleb128 -16
 3168 06a5 00       		.byte	0
 3169 06a6 19       		.uleb128 0x19
 3170 06a7 F9050000 		.4byte	.LASF104
 3171 06ab 01       		.byte	0x1
 3172 06ac 0701     		.2byte	0x107
 3173 06ae 00000000 		.4byte	.LFB72
 3174 06b2 B8010000 		.4byte	.LFE72-.LFB72
 3175 06b6 01       		.uleb128 0x1
 3176 06b7 9C       		.byte	0x9c
 3177 06b8 1B070000 		.4byte	0x71b
 3178 06bc 1A       		.uleb128 0x1a
 3179 06bd CC020000 		.4byte	.LASF57
 3180 06c1 01       		.byte	0x1
 3181 06c2 0E01     		.2byte	0x10e
 3182 06c4 51030000 		.4byte	0x351
 3183 06c8 02       		.uleb128 0x2
 3184 06c9 91       		.byte	0x91
 3185 06ca 5C       		.sleb128 -36
 3186 06cb 1A       		.uleb128 0x1a
 3187 06cc D6060000 		.4byte	.LASF105
 3188 06d0 01       		.byte	0x1
 3189 06d1 1001     		.2byte	0x110
 3190 06d3 25020000 		.4byte	0x225
 3191 06d7 02       		.uleb128 0x2
 3192 06d8 91       		.byte	0x91
 3193 06d9 44       		.sleb128 -60
 3194 06da 1A       		.uleb128 0x1a
 3195 06db 00000000 		.4byte	.LASF106
 3196 06df 01       		.byte	0x1
 3197 06e0 2701     		.2byte	0x127
 3198 06e2 C9010000 		.4byte	0x1c9
 3199 06e6 03       		.uleb128 0x3
 3200 06e7 91       		.byte	0x91
 3201 06e8 C07C     		.sleb128 -448
 3202 06ea 1A       		.uleb128 0x1a
 3203 06eb 44010000 		.4byte	.LASF107
 3204 06ef 01       		.byte	0x1
 3205 06f0 2C01     		.2byte	0x12c
 3206 06f2 C9010000 		.4byte	0x1c9
 3207 06f6 03       		.uleb128 0x3
 3208 06f7 91       		.byte	0x91
 3209 06f8 BC79     		.sleb128 -836
 3210 06fa 1A       		.uleb128 0x1a
 3211 06fb 29070000 		.4byte	.LASF108
 3212 06ff 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 74


 3213 0700 3001     		.2byte	0x130
 3214 0702 C9010000 		.4byte	0x1c9
 3215 0706 03       		.uleb128 0x3
 3216 0707 91       		.byte	0x91
 3217 0708 B876     		.sleb128 -1224
 3218 070a 1A       		.uleb128 0x1a
 3219 070b E3030000 		.4byte	.LASF109
 3220 070f 01       		.byte	0x1
 3221 0710 3401     		.2byte	0x134
 3222 0712 C9010000 		.4byte	0x1c9
 3223 0716 03       		.uleb128 0x3
 3224 0717 91       		.byte	0x91
 3225 0718 B473     		.sleb128 -1612
 3226 071a 00       		.byte	0
 3227 071b 1B       		.uleb128 0x1b
 3228 071c AD070000 		.4byte	.LASF163
 3229 0720 01       		.byte	0x1
 3230 0721 3E01     		.2byte	0x13e
 3231 0723 68000000 		.4byte	0x68
 3232 0727 00000000 		.4byte	.LFB73
 3233 072b 1E000000 		.4byte	.LFE73-.LFB73
 3234 072f 01       		.uleb128 0x1
 3235 0730 9C       		.byte	0x9c
 3236 0731 1C       		.uleb128 0x1c
 3237 0732 48020000 		.4byte	.LASF110
 3238 0736 01       		.byte	0x1
 3239 0737 5401     		.2byte	0x154
 3240 0739 81000000 		.4byte	0x81
 3241 073d 00000000 		.4byte	.LFB74
 3242 0741 30040000 		.4byte	.LFE74-.LFB74
 3243 0745 01       		.uleb128 0x1
 3244 0746 9C       		.byte	0x9c
 3245 0747 8B080000 		.4byte	0x88b
 3246 074b 1D       		.uleb128 0x1d
 3247 074c 62000000 		.4byte	.LBB2
 3248 0750 B8030000 		.4byte	.LBE2-.LBB2
 3249 0754 1A       		.uleb128 0x1a
 3250 0755 EB040000 		.4byte	.LASF111
 3251 0759 01       		.byte	0x1
 3252 075a 8401     		.2byte	0x184
 3253 075c 51030000 		.4byte	0x351
 3254 0760 02       		.uleb128 0x2
 3255 0761 91       		.byte	0x91
 3256 0762 48       		.sleb128 -56
 3257 0763 1A       		.uleb128 0x1a
 3258 0764 20020000 		.4byte	.LASF112
 3259 0768 01       		.byte	0x1
 3260 0769 8901     		.2byte	0x189
 3261 076b 51030000 		.4byte	0x351
 3262 076f 03       		.uleb128 0x3
 3263 0770 91       		.byte	0x91
 3264 0771 B47F     		.sleb128 -76
 3265 0773 1A       		.uleb128 0x1a
 3266 0774 48030000 		.4byte	.LASF113
 3267 0778 01       		.byte	0x1
 3268 0779 9C01     		.2byte	0x19c
 3269 077b 8D000000 		.4byte	0x8d
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 75


 3270 077f 02       		.uleb128 0x2
 3271 0780 91       		.byte	0x91
 3272 0781 66       		.sleb128 -26
 3273 0782 1A       		.uleb128 0x1a
 3274 0783 CE030000 		.4byte	.LASF114
 3275 0787 01       		.byte	0x1
 3276 0788 9D01     		.2byte	0x19d
 3277 078a 51030000 		.4byte	0x351
 3278 078e 03       		.uleb128 0x3
 3279 078f 91       		.byte	0x91
 3280 0790 A07F     		.sleb128 -96
 3281 0792 1A       		.uleb128 0x1a
 3282 0793 A5060000 		.4byte	.LASF115
 3283 0797 01       		.byte	0x1
 3284 0798 B201     		.2byte	0x1b2
 3285 079a 8B080000 		.4byte	0x88b
 3286 079e 03       		.uleb128 0x3
 3287 079f 91       		.byte	0x91
 3288 07a0 B875     		.sleb128 -1352
 3289 07a2 1A       		.uleb128 0x1a
 3290 07a3 09070000 		.4byte	.LASF30
 3291 07a7 01       		.byte	0x1
 3292 07a8 B301     		.2byte	0x1b3
 3293 07aa 81000000 		.4byte	0x81
 3294 07ae 02       		.uleb128 0x2
 3295 07af 91       		.byte	0x91
 3296 07b0 65       		.sleb128 -27
 3297 07b1 1A       		.uleb128 0x1a
 3298 07b2 6E060000 		.4byte	.LASF116
 3299 07b6 01       		.byte	0x1
 3300 07b7 BA01     		.2byte	0x1ba
 3301 07b9 EC000000 		.4byte	0xec
 3302 07bd 02       		.uleb128 0x2
 3303 07be 91       		.byte	0x91
 3304 07bf 6C       		.sleb128 -20
 3305 07c0 1A       		.uleb128 0x1a
 3306 07c1 61010000 		.4byte	.LASF117
 3307 07c5 01       		.byte	0x1
 3308 07c6 BE01     		.2byte	0x1be
 3309 07c8 A5000000 		.4byte	0xa5
 3310 07cc 02       		.uleb128 0x2
 3311 07cd 91       		.byte	0x91
 3312 07ce 64       		.sleb128 -28
 3313 07cf 1A       		.uleb128 0x1a
 3314 07d0 51020000 		.4byte	.LASF118
 3315 07d4 01       		.byte	0x1
 3316 07d5 EE01     		.2byte	0x1ee
 3317 07d7 4C000000 		.4byte	0x4c
 3318 07db 02       		.uleb128 0x2
 3319 07dc 91       		.byte	0x91
 3320 07dd 5C       		.sleb128 -36
 3321 07de 1E       		.uleb128 0x1e
 3322 07df CE000000 		.4byte	.LBB3
 3323 07e3 2C000000 		.4byte	.LBE3-.LBB3
 3324 07e7 0B080000 		.4byte	0x80b
 3325 07eb 1A       		.uleb128 0x1a
 3326 07ec 25060000 		.4byte	.LASF119
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 76


 3327 07f0 01       		.byte	0x1
 3328 07f1 9101     		.2byte	0x191
 3329 07f3 8D000000 		.4byte	0x8d
 3330 07f7 02       		.uleb128 0x2
 3331 07f8 91       		.byte	0x91
 3332 07f9 68       		.sleb128 -24
 3333 07fa 1A       		.uleb128 0x1a
 3334 07fb D3010000 		.4byte	.LASF120
 3335 07ff 01       		.byte	0x1
 3336 0800 9201     		.2byte	0x192
 3337 0802 51030000 		.4byte	0x351
 3338 0806 03       		.uleb128 0x3
 3339 0807 91       		.byte	0x91
 3340 0808 8C7F     		.sleb128 -116
 3341 080a 00       		.byte	0
 3342 080b 1E       		.uleb128 0x1e
 3343 080c FC000000 		.4byte	.LBB4
 3344 0810 20000000 		.4byte	.LBE4-.LBB4
 3345 0814 29080000 		.4byte	0x829
 3346 0818 1A       		.uleb128 0x1a
 3347 0819 D3010000 		.4byte	.LASF120
 3348 081d 01       		.byte	0x1
 3349 081e 9601     		.2byte	0x196
 3350 0820 51030000 		.4byte	0x351
 3351 0824 03       		.uleb128 0x3
 3352 0825 91       		.byte	0x91
 3353 0826 F87E     		.sleb128 -136
 3354 0828 00       		.byte	0
 3355 0829 1E       		.uleb128 0x1e
 3356 082a 3C020000 		.4byte	.LBB5
 3357 082e BC000000 		.4byte	.LBE5-.LBB5
 3358 0832 60080000 		.4byte	0x860
 3359 0836 1A       		.uleb128 0x1a
 3360 0837 E4040000 		.4byte	.LASF121
 3361 083b 01       		.byte	0x1
 3362 083c C301     		.2byte	0x1c3
 3363 083e A5000000 		.4byte	0xa5
 3364 0842 02       		.uleb128 0x2
 3365 0843 91       		.byte	0x91
 3366 0844 6B       		.sleb128 -21
 3367 0845 1D       		.uleb128 0x1d
 3368 0846 44020000 		.4byte	.LBB6
 3369 084a 9A000000 		.4byte	.LBE6-.LBB6
 3370 084e 1A       		.uleb128 0x1a
 3371 084f 15030000 		.4byte	.LASF122
 3372 0853 01       		.byte	0x1
 3373 0854 C501     		.2byte	0x1c5
 3374 0856 9B080000 		.4byte	0x89b
 3375 085a 03       		.uleb128 0x3
 3376 085b 91       		.byte	0x91
 3377 085c 8077     		.sleb128 -1152
 3378 085e 00       		.byte	0
 3379 085f 00       		.byte	0
 3380 0860 1D       		.uleb128 0x1d
 3381 0861 12030000 		.4byte	.LBB7
 3382 0865 3A000000 		.4byte	.LBE7-.LBB7
 3383 0869 1A       		.uleb128 0x1a
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 77


 3384 086a 2E020000 		.4byte	.LASF123
 3385 086e 01       		.byte	0x1
 3386 086f E501     		.2byte	0x1e5
 3387 0871 68000000 		.4byte	0x68
 3388 0875 02       		.uleb128 0x2
 3389 0876 91       		.byte	0x91
 3390 0877 60       		.sleb128 -32
 3391 0878 1A       		.uleb128 0x1a
 3392 0879 97050000 		.4byte	.LASF124
 3393 087d 01       		.byte	0x1
 3394 087e E601     		.2byte	0x1e6
 3395 0880 87050000 		.4byte	0x587
 3396 0884 03       		.uleb128 0x3
 3397 0885 91       		.byte	0x91
 3398 0886 EC7E     		.sleb128 -148
 3399 0888 00       		.byte	0
 3400 0889 00       		.byte	0
 3401 088a 00       		.byte	0
 3402 088b 07       		.uleb128 0x7
 3403 088c D7000000 		.4byte	0xd7
 3404 0890 9B080000 		.4byte	0x89b
 3405 0894 08       		.uleb128 0x8
 3406 0895 E5000000 		.4byte	0xe5
 3407 0899 C7       		.byte	0xc7
 3408 089a 00       		.byte	0
 3409 089b 07       		.uleb128 0x7
 3410 089c D7000000 		.4byte	0xd7
 3411 08a0 AC080000 		.4byte	0x8ac
 3412 08a4 1F       		.uleb128 0x1f
 3413 08a5 E5000000 		.4byte	0xe5
 3414 08a9 E803     		.2byte	0x3e8
 3415 08ab 00       		.byte	0
 3416 08ac 1C       		.uleb128 0x1c
 3417 08ad 16050000 		.4byte	.LASF125
 3418 08b1 01       		.byte	0x1
 3419 08b2 0302     		.2byte	0x203
 3420 08b4 81000000 		.4byte	0x81
 3421 08b8 00000000 		.4byte	.LFB75
 3422 08bc 44000000 		.4byte	.LFE75-.LFB75
 3423 08c0 01       		.uleb128 0x1
 3424 08c1 9C       		.byte	0x9c
 3425 08c2 E0080000 		.4byte	0x8e0
 3426 08c6 1D       		.uleb128 0x1d
 3427 08c7 20000000 		.4byte	.LBB8
 3428 08cb 1A000000 		.4byte	.LBE8-.LBB8
 3429 08cf 1A       		.uleb128 0x1a
 3430 08d0 51020000 		.4byte	.LASF118
 3431 08d4 01       		.byte	0x1
 3432 08d5 0E02     		.2byte	0x20e
 3433 08d7 4C000000 		.4byte	0x4c
 3434 08db 02       		.uleb128 0x2
 3435 08dc 91       		.byte	0x91
 3436 08dd 74       		.sleb128 -12
 3437 08de 00       		.byte	0
 3438 08df 00       		.byte	0
 3439 08e0 1C       		.uleb128 0x1c
 3440 08e1 76030000 		.4byte	.LASF126
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 78


 3441 08e5 01       		.byte	0x1
 3442 08e6 2302     		.2byte	0x223
 3443 08e8 81000000 		.4byte	0x81
 3444 08ec 00000000 		.4byte	.LFB76
 3445 08f0 E0030000 		.4byte	.LFE76-.LFB76
 3446 08f4 01       		.uleb128 0x1
 3447 08f5 9C       		.byte	0x9c
 3448 08f6 63090000 		.4byte	0x963
 3449 08fa 1A       		.uleb128 0x1a
 3450 08fb AB040000 		.4byte	.LASF58
 3451 08ff 01       		.byte	0x1
 3452 0900 2602     		.2byte	0x226
 3453 0902 4C000000 		.4byte	0x4c
 3454 0906 02       		.uleb128 0x2
 3455 0907 91       		.byte	0x91
 3456 0908 6C       		.sleb128 -20
 3457 0909 1A       		.uleb128 0x1a
 3458 090a 74060000 		.4byte	.LASF127
 3459 090e 01       		.byte	0x1
 3460 090f 2702     		.2byte	0x227
 3461 0911 63090000 		.4byte	0x963
 3462 0915 02       		.uleb128 0x2
 3463 0916 91       		.byte	0x91
 3464 0917 4C       		.sleb128 -52
 3465 0918 1A       		.uleb128 0x1a
 3466 0919 CC020000 		.4byte	.LASF57
 3467 091d 01       		.byte	0x1
 3468 091e 2B02     		.2byte	0x22b
 3469 0920 51030000 		.4byte	0x351
 3470 0924 03       		.uleb128 0x3
 3471 0925 91       		.byte	0x91
 3472 0926 B87F     		.sleb128 -72
 3473 0928 1A       		.uleb128 0x1a
 3474 0929 D6060000 		.4byte	.LASF105
 3475 092d 01       		.byte	0x1
 3476 092e 4802     		.2byte	0x248
 3477 0930 25020000 		.4byte	0x225
 3478 0934 03       		.uleb128 0x3
 3479 0935 91       		.byte	0x91
 3480 0936 A07F     		.sleb128 -96
 3481 0938 1A       		.uleb128 0x1a
 3482 0939 20030000 		.4byte	.LASF128
 3483 093d 01       		.byte	0x1
 3484 093e 8002     		.2byte	0x280
 3485 0940 75020000 		.4byte	0x275
 3486 0944 03       		.uleb128 0x3
 3487 0945 91       		.byte	0x91
 3488 0946 8C7F     		.sleb128 -116
 3489 0948 1D       		.uleb128 0x1d
 3490 0949 9E020000 		.4byte	.LBB9
 3491 094d EE000000 		.4byte	.LBE9-.LBB9
 3492 0951 1A       		.uleb128 0x1a
 3493 0952 FE060000 		.4byte	.LASF129
 3494 0956 01       		.byte	0x1
 3495 0957 9B02     		.2byte	0x29b
 3496 0959 A1020000 		.4byte	0x2a1
 3497 095d 03       		.uleb128 0x3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 79


 3498 095e 91       		.byte	0x91
 3499 095f 847F     		.sleb128 -124
 3500 0961 00       		.byte	0
 3501 0962 00       		.byte	0
 3502 0963 07       		.uleb128 0x7
 3503 0964 D7000000 		.4byte	0xd7
 3504 0968 73090000 		.4byte	0x973
 3505 096c 08       		.uleb128 0x8
 3506 096d E5000000 		.4byte	0xe5
 3507 0971 1F       		.byte	0x1f
 3508 0972 00       		.byte	0
 3509 0973 20       		.uleb128 0x20
 3510 0974 F6020000 		.4byte	.LASF130
 3511 0978 01       		.byte	0x1
 3512 0979 C102     		.2byte	0x2c1
 3513 097b 81000000 		.4byte	0x81
 3514 097f 00000000 		.4byte	.LFB77
 3515 0983 74000000 		.4byte	.LFE77-.LFB77
 3516 0987 01       		.uleb128 0x1
 3517 0988 9C       		.byte	0x9c
 3518 0989 B9090000 		.4byte	0x9b9
 3519 098d 21       		.uleb128 0x21
 3520 098e AB040000 		.4byte	.LASF58
 3521 0992 01       		.byte	0x1
 3522 0993 C102     		.2byte	0x2c1
 3523 0995 4C000000 		.4byte	0x4c
 3524 0999 02       		.uleb128 0x2
 3525 099a 91       		.byte	0x91
 3526 099b 64       		.sleb128 -28
 3527 099c 22       		.uleb128 0x22
 3528 099d 7400     		.ascii	"t\000"
 3529 099f 01       		.byte	0x1
 3530 09a0 C802     		.2byte	0x2c8
 3531 09a2 B9090000 		.4byte	0x9b9
 3532 09a6 02       		.uleb128 0x2
 3533 09a7 91       		.byte	0x91
 3534 09a8 74       		.sleb128 -12
 3535 09a9 1A       		.uleb128 0x1a
 3536 09aa 8A040000 		.4byte	.LASF131
 3537 09ae 01       		.byte	0x1
 3538 09af CD02     		.2byte	0x2cd
 3539 09b1 6B010000 		.4byte	0x16b
 3540 09b5 02       		.uleb128 0x2
 3541 09b6 91       		.byte	0x91
 3542 09b7 68       		.sleb128 -24
 3543 09b8 00       		.byte	0
 3544 09b9 06       		.uleb128 0x6
 3545 09ba 04       		.byte	0x4
 3546 09bb AC020000 		.4byte	0x2ac
 3547 09bf 20       		.uleb128 0x20
 3548 09c0 90020000 		.4byte	.LASF132
 3549 09c4 01       		.byte	0x1
 3550 09c5 EA02     		.2byte	0x2ea
 3551 09c7 81000000 		.4byte	0x81
 3552 09cb 00000000 		.4byte	.LFB78
 3553 09cf 38010000 		.4byte	.LFE78-.LFB78
 3554 09d3 01       		.uleb128 0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 80


 3555 09d4 9C       		.byte	0x9c
 3556 09d5 380A0000 		.4byte	0xa38
 3557 09d9 21       		.uleb128 0x21
 3558 09da D2020000 		.4byte	.LASF133
 3559 09de 01       		.byte	0x1
 3560 09df EA02     		.2byte	0x2ea
 3561 09e1 EC000000 		.4byte	0xec
 3562 09e5 03       		.uleb128 0x3
 3563 09e6 91       		.byte	0x91
 3564 09e7 9C7E     		.sleb128 -228
 3565 09e9 21       		.uleb128 0x21
 3566 09ea AC020000 		.4byte	.LASF134
 3567 09ee 01       		.byte	0x1
 3568 09ef EA02     		.2byte	0x2ea
 3569 09f1 68000000 		.4byte	0x68
 3570 09f5 03       		.uleb128 0x3
 3571 09f6 91       		.byte	0x91
 3572 09f7 987E     		.sleb128 -232
 3573 09f9 21       		.uleb128 0x21
 3574 09fa 53040000 		.4byte	.LASF135
 3575 09fe 01       		.byte	0x1
 3576 09ff EA02     		.2byte	0x2ea
 3577 0a01 EC000000 		.4byte	0xec
 3578 0a05 03       		.uleb128 0x3
 3579 0a06 91       		.byte	0x91
 3580 0a07 947E     		.sleb128 -236
 3581 0a09 1A       		.uleb128 0x1a
 3582 0a0a C4010000 		.4byte	.LASF136
 3583 0a0e 01       		.byte	0x1
 3584 0a0f EC02     		.2byte	0x2ec
 3585 0a11 81000000 		.4byte	0x81
 3586 0a15 02       		.uleb128 0x2
 3587 0a16 91       		.byte	0x91
 3588 0a17 77       		.sleb128 -9
 3589 0a18 1A       		.uleb128 0x1a
 3590 0a19 27000000 		.4byte	.LASF137
 3591 0a1d 01       		.byte	0x1
 3592 0a1e F302     		.2byte	0x2f3
 3593 0a20 380A0000 		.4byte	0xa38
 3594 0a24 02       		.uleb128 0x2
 3595 0a25 91       		.byte	0x91
 3596 0a26 68       		.sleb128 -24
 3597 0a27 1A       		.uleb128 0x1a
 3598 0a28 A5060000 		.4byte	.LASF115
 3599 0a2c 01       		.byte	0x1
 3600 0a2d FB02     		.2byte	0x2fb
 3601 0a2f 8B080000 		.4byte	0x88b
 3602 0a33 03       		.uleb128 0x3
 3603 0a34 91       		.byte	0x91
 3604 0a35 A07E     		.sleb128 -224
 3605 0a37 00       		.byte	0
 3606 0a38 07       		.uleb128 0x7
 3607 0a39 D7000000 		.4byte	0xd7
 3608 0a3d 480A0000 		.4byte	0xa48
 3609 0a41 08       		.uleb128 0x8
 3610 0a42 E5000000 		.4byte	0xe5
 3611 0a46 0B       		.byte	0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 81


 3612 0a47 00       		.byte	0
 3613 0a48 23       		.uleb128 0x23
 3614 0a49 23010000 		.4byte	.LASF138
 3615 0a4d 0D       		.byte	0xd
 3616 0a4e 1207     		.2byte	0x712
 3617 0a50 540A0000 		.4byte	0xa54
 3618 0a54 0C       		.uleb128 0xc
 3619 0a55 76000000 		.4byte	0x76
 3620 0a59 24       		.uleb128 0x24
 3621 0a5a 17000000 		.4byte	.LASF139
 3622 0a5e 0A       		.byte	0xa
 3623 0a5f 11       		.byte	0x11
 3624 0a60 5D040000 		.4byte	0x45d
 3625 0a64 05       		.uleb128 0x5
 3626 0a65 03       		.byte	0x3
 3627 0a66 00000000 		.4byte	buffer_overflow
 3628 0a6a 24       		.uleb128 0x24
 3629 0a6b 3A040000 		.4byte	.LASF140
 3630 0a6f 0A       		.byte	0xa
 3631 0a70 22       		.byte	0x22
 3632 0a71 8D000000 		.4byte	0x8d
 3633 0a75 05       		.uleb128 0x5
 3634 0a76 03       		.byte	0x3
 3635 0a77 00000000 		.4byte	dataPointsInStack
 3636 0a7b 24       		.uleb128 0x24
 3637 0a7c 10070000 		.4byte	.LASF141
 3638 0a80 0A       		.byte	0xa
 3639 0a81 23       		.byte	0x23
 3640 0a82 8D000000 		.4byte	0x8d
 3641 0a86 05       		.uleb128 0x5
 3642 0a87 03       		.byte	0x3
 3643 0a88 00000000 		.4byte	dataPointsInStackDesired
 3644 0a8c 07       		.uleb128 0x7
 3645 0a8d 61030000 		.4byte	0x361
 3646 0a91 9C0A0000 		.4byte	0xa9c
 3647 0a95 08       		.uleb128 0x8
 3648 0a96 E5000000 		.4byte	0xe5
 3649 0a9a 95       		.byte	0x95
 3650 0a9b 00       		.byte	0
 3651 0a9c 24       		.uleb128 0x24
 3652 0a9d 87030000 		.4byte	.LASF142
 3653 0aa1 0A       		.byte	0xa
 3654 0aa2 24       		.byte	0x24
 3655 0aa3 8C0A0000 		.4byte	0xa8c
 3656 0aa7 05       		.uleb128 0x5
 3657 0aa8 03       		.byte	0x3
 3658 0aa9 00000000 		.4byte	data
 3659 0aad 24       		.uleb128 0x24
 3660 0aae 04010000 		.4byte	.LASF143
 3661 0ab2 0B       		.byte	0xb
 3662 0ab3 20       		.byte	0x20
 3663 0ab4 81000000 		.4byte	0x81
 3664 0ab8 05       		.uleb128 0x5
 3665 0ab9 03       		.byte	0x3
 3666 0aba 00000000 		.4byte	modem_state
 3667 0abe 24       		.uleb128 0x24
 3668 0abf F7030000 		.4byte	.LASF144
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 82


 3669 0ac3 0B       		.byte	0xb
 3670 0ac4 63       		.byte	0x63
 3671 0ac5 BD000000 		.4byte	0xbd
 3672 0ac9 05       		.uleb128 0x5
 3673 0aca 03       		.byte	0x3
 3674 0acb 00000000 		.4byte	modem_start_time_stamp
 3675 0acf 24       		.uleb128 0x24
 3676 0ad0 9D030000 		.4byte	.LASF84
 3677 0ad4 0B       		.byte	0xb
 3678 0ad5 64       		.byte	0x64
 3679 0ad6 99030000 		.4byte	0x399
 3680 0ada 05       		.uleb128 0x5
 3681 0adb 03       		.byte	0x3
 3682 0adc 00000000 		.4byte	modem_info
 3683 0ae0 24       		.uleb128 0x24
 3684 0ae1 8E060000 		.4byte	.LASF145
 3685 0ae5 0B       		.byte	0xb
 3686 0ae6 65       		.byte	0x65
 3687 0ae7 0D040000 		.4byte	0x40d
 3688 0aeb 05       		.uleb128 0x5
 3689 0aec 03       		.byte	0x3
 3690 0aed 00000000 		.4byte	modem_stats
 3691 0af1 24       		.uleb128 0x24
 3692 0af2 C3040000 		.4byte	.LASF146
 3693 0af6 0B       		.byte	0xb
 3694 0af7 66       		.byte	0x66
 3695 0af8 64040000 		.4byte	0x464
 3696 0afc 05       		.uleb128 0x5
 3697 0afd 03       		.byte	0x3
 3698 0afe 00000000 		.4byte	updatable_parameters
 3699 0b02 07       		.uleb128 0x7
 3700 0b03 D7000000 		.4byte	0xd7
 3701 0b07 130B0000 		.4byte	0xb13
 3702 0b0b 1F       		.uleb128 0x1f
 3703 0b0c E5000000 		.4byte	0xe5
 3704 0b10 0F27     		.2byte	0x270f
 3705 0b12 00       		.byte	0
 3706 0b13 24       		.uleb128 0x24
 3707 0b14 03050000 		.4byte	.LASF147
 3708 0b18 0C       		.byte	0xc
 3709 0b19 18       		.byte	0x18
 3710 0b1a 020B0000 		.4byte	0xb02
 3711 0b1e 05       		.uleb128 0x5
 3712 0b1f 03       		.byte	0x3
 3713 0b20 00000000 		.4byte	http_request
 3714 0b24 24       		.uleb128 0x24
 3715 0b25 3F070000 		.4byte	.LASF148
 3716 0b29 0C       		.byte	0xc
 3717 0b2a 19       		.byte	0x19
 3718 0b2b 020B0000 		.4byte	0xb02
 3719 0b2f 05       		.uleb128 0x5
 3720 0b30 03       		.byte	0x3
 3721 0b31 00000000 		.4byte	http_body
 3722 0b35 24       		.uleb128 0x24
 3723 0b36 9A060000 		.4byte	.LASF149
 3724 0b3a 0C       		.byte	0xc
 3725 0b3b 1A       		.byte	0x1a
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 83


 3726 0b3c 8B080000 		.4byte	0x88b
 3727 0b40 05       		.uleb128 0x5
 3728 0b41 03       		.byte	0x3
 3729 0b42 00000000 		.4byte	http_route
 3730 0b46 24       		.uleb128 0x24
 3731 0b47 D2050000 		.4byte	.LASF150
 3732 0b4b 0C       		.byte	0xc
 3733 0b4c 41       		.byte	0x41
 3734 0b4d DF040000 		.4byte	0x4df
 3735 0b51 05       		.uleb128 0x5
 3736 0b52 03       		.byte	0x3
 3737 0b53 00000000 		.4byte	system_info
 3738 0b57 24       		.uleb128 0x24
 3739 0b58 72050000 		.4byte	.LASF151
 3740 0b5c 0C       		.byte	0xc
 3741 0b5d 53       		.byte	0x53
 3742 0b5e 1B050000 		.4byte	0x51b
 3743 0b62 05       		.uleb128 0x5
 3744 0b63 03       		.byte	0x3
 3745 0b64 00000000 		.4byte	system_settings
 3746 0b68 24       		.uleb128 0x24
 3747 0b69 16010000 		.4byte	.LASF152
 3748 0b6d 0C       		.byte	0xc
 3749 0b6e 6F       		.byte	0x6f
 3750 0b6f A8040000 		.4byte	0x4a8
 3751 0b73 05       		.uleb128 0x5
 3752 0b74 03       		.byte	0x3
 3753 0b75 00000000 		.4byte	alarmMeasure
 3754 0b79 24       		.uleb128 0x24
 3755 0b7a 6E010000 		.4byte	.LASF153
 3756 0b7e 0C       		.byte	0xc
 3757 0b7f 70       		.byte	0x70
 3758 0b80 81000000 		.4byte	0x81
 3759 0b84 05       		.uleb128 0x5
 3760 0b85 03       		.byte	0x3
 3761 0b86 00000000 		.4byte	timeToMeasure
 3762 0b8a 24       		.uleb128 0x24
 3763 0b8b DF020000 		.4byte	.LASF154
 3764 0b8f 0C       		.byte	0xc
 3765 0b90 71       		.byte	0x71
 3766 0b91 A8040000 		.4byte	0x4a8
 3767 0b95 05       		.uleb128 0x5
 3768 0b96 03       		.byte	0x3
 3769 0b97 00000000 		.4byte	alarmSync
 3770 0b9b 24       		.uleb128 0x24
 3771 0b9c 94010000 		.4byte	.LASF155
 3772 0ba0 0C       		.byte	0xc
 3773 0ba1 72       		.byte	0x72
 3774 0ba2 81000000 		.4byte	0x81
 3775 0ba6 05       		.uleb128 0x5
 3776 0ba7 03       		.byte	0x3
 3777 0ba8 00000000 		.4byte	timeToSync
 3778 0bac 24       		.uleb128 0x24
 3779 0bad 94040000 		.4byte	.LASF156
 3780 0bb1 0C       		.byte	0xc
 3781 0bb2 73       		.byte	0x73
 3782 0bb3 81000000 		.4byte	0x81
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 84


 3783 0bb7 05       		.uleb128 0x5
 3784 0bb8 03       		.byte	0x3
 3785 0bb9 00000000 		.4byte	timeToSycnRemoteParams
 3786 0bbd 25       		.uleb128 0x25
 3787 0bbe 68657900 		.ascii	"hey\000"
 3788 0bc2 0C       		.byte	0xc
 3789 0bc3 74       		.byte	0x74
 3790 0bc4 81000000 		.4byte	0x81
 3791 0bc8 05       		.uleb128 0x5
 3792 0bc9 03       		.byte	0x3
 3793 0bca 00000000 		.4byte	hey
 3794 0bce 07       		.uleb128 0x7
 3795 0bcf D7000000 		.4byte	0xd7
 3796 0bd3 DE0B0000 		.4byte	0xbde
 3797 0bd7 08       		.uleb128 0x8
 3798 0bd8 E5000000 		.4byte	0xe5
 3799 0bdc 1D       		.byte	0x1d
 3800 0bdd 00       		.byte	0
 3801 0bde 24       		.uleb128 0x24
 3802 0bdf 2C050000 		.4byte	.LASF157
 3803 0be3 01       		.byte	0x1
 3804 0be4 1D       		.byte	0x1d
 3805 0be5 CE0B0000 		.4byte	0xbce
 3806 0be9 05       		.uleb128 0x5
 3807 0bea 03       		.byte	0x3
 3808 0beb 00000000 		.4byte	Data_fileName
 3809 0bef 24       		.uleb128 0x24
 3810 0bf0 3C030000 		.4byte	.LASF92
 3811 0bf4 01       		.byte	0x1
 3812 0bf5 1E       		.byte	0x1e
 3813 0bf6 81000000 		.4byte	0x81
 3814 0bfa 05       		.uleb128 0x5
 3815 0bfb 03       		.byte	0x3
 3816 0bfc 00000000 		.4byte	try_counter
 3817 0c00 00       		.byte	0
 3818              		.section	.debug_abbrev,"",%progbits
 3819              	.Ldebug_abbrev0:
 3820 0000 01       		.uleb128 0x1
 3821 0001 11       		.uleb128 0x11
 3822 0002 01       		.byte	0x1
 3823 0003 25       		.uleb128 0x25
 3824 0004 0E       		.uleb128 0xe
 3825 0005 13       		.uleb128 0x13
 3826 0006 0B       		.uleb128 0xb
 3827 0007 03       		.uleb128 0x3
 3828 0008 0E       		.uleb128 0xe
 3829 0009 1B       		.uleb128 0x1b
 3830 000a 0E       		.uleb128 0xe
 3831 000b 55       		.uleb128 0x55
 3832 000c 17       		.uleb128 0x17
 3833 000d 11       		.uleb128 0x11
 3834 000e 01       		.uleb128 0x1
 3835 000f 10       		.uleb128 0x10
 3836 0010 17       		.uleb128 0x17
 3837 0011 00       		.byte	0
 3838 0012 00       		.byte	0
 3839 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 85


 3840 0014 24       		.uleb128 0x24
 3841 0015 00       		.byte	0
 3842 0016 0B       		.uleb128 0xb
 3843 0017 0B       		.uleb128 0xb
 3844 0018 3E       		.uleb128 0x3e
 3845 0019 0B       		.uleb128 0xb
 3846 001a 03       		.uleb128 0x3
 3847 001b 0E       		.uleb128 0xe
 3848 001c 00       		.byte	0
 3849 001d 00       		.byte	0
 3850 001e 03       		.uleb128 0x3
 3851 001f 16       		.uleb128 0x16
 3852 0020 00       		.byte	0
 3853 0021 03       		.uleb128 0x3
 3854 0022 0E       		.uleb128 0xe
 3855 0023 3A       		.uleb128 0x3a
 3856 0024 0B       		.uleb128 0xb
 3857 0025 3B       		.uleb128 0x3b
 3858 0026 0B       		.uleb128 0xb
 3859 0027 49       		.uleb128 0x49
 3860 0028 13       		.uleb128 0x13
 3861 0029 00       		.byte	0
 3862 002a 00       		.byte	0
 3863 002b 04       		.uleb128 0x4
 3864 002c 24       		.uleb128 0x24
 3865 002d 00       		.byte	0
 3866 002e 0B       		.uleb128 0xb
 3867 002f 0B       		.uleb128 0xb
 3868 0030 3E       		.uleb128 0x3e
 3869 0031 0B       		.uleb128 0xb
 3870 0032 03       		.uleb128 0x3
 3871 0033 08       		.uleb128 0x8
 3872 0034 00       		.byte	0
 3873 0035 00       		.byte	0
 3874 0036 05       		.uleb128 0x5
 3875 0037 16       		.uleb128 0x16
 3876 0038 00       		.byte	0
 3877 0039 03       		.uleb128 0x3
 3878 003a 0E       		.uleb128 0xe
 3879 003b 3A       		.uleb128 0x3a
 3880 003c 0B       		.uleb128 0xb
 3881 003d 3B       		.uleb128 0x3b
 3882 003e 05       		.uleb128 0x5
 3883 003f 49       		.uleb128 0x49
 3884 0040 13       		.uleb128 0x13
 3885 0041 00       		.byte	0
 3886 0042 00       		.byte	0
 3887 0043 06       		.uleb128 0x6
 3888 0044 0F       		.uleb128 0xf
 3889 0045 00       		.byte	0
 3890 0046 0B       		.uleb128 0xb
 3891 0047 0B       		.uleb128 0xb
 3892 0048 49       		.uleb128 0x49
 3893 0049 13       		.uleb128 0x13
 3894 004a 00       		.byte	0
 3895 004b 00       		.byte	0
 3896 004c 07       		.uleb128 0x7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 86


 3897 004d 01       		.uleb128 0x1
 3898 004e 01       		.byte	0x1
 3899 004f 49       		.uleb128 0x49
 3900 0050 13       		.uleb128 0x13
 3901 0051 01       		.uleb128 0x1
 3902 0052 13       		.uleb128 0x13
 3903 0053 00       		.byte	0
 3904 0054 00       		.byte	0
 3905 0055 08       		.uleb128 0x8
 3906 0056 21       		.uleb128 0x21
 3907 0057 00       		.byte	0
 3908 0058 49       		.uleb128 0x49
 3909 0059 13       		.uleb128 0x13
 3910 005a 2F       		.uleb128 0x2f
 3911 005b 0B       		.uleb128 0xb
 3912 005c 00       		.byte	0
 3913 005d 00       		.byte	0
 3914 005e 09       		.uleb128 0x9
 3915 005f 13       		.uleb128 0x13
 3916 0060 01       		.byte	0x1
 3917 0061 0B       		.uleb128 0xb
 3918 0062 0B       		.uleb128 0xb
 3919 0063 3A       		.uleb128 0x3a
 3920 0064 0B       		.uleb128 0xb
 3921 0065 3B       		.uleb128 0x3b
 3922 0066 0B       		.uleb128 0xb
 3923 0067 01       		.uleb128 0x1
 3924 0068 13       		.uleb128 0x13
 3925 0069 00       		.byte	0
 3926 006a 00       		.byte	0
 3927 006b 0A       		.uleb128 0xa
 3928 006c 0D       		.uleb128 0xd
 3929 006d 00       		.byte	0
 3930 006e 03       		.uleb128 0x3
 3931 006f 08       		.uleb128 0x8
 3932 0070 3A       		.uleb128 0x3a
 3933 0071 0B       		.uleb128 0xb
 3934 0072 3B       		.uleb128 0x3b
 3935 0073 0B       		.uleb128 0xb
 3936 0074 49       		.uleb128 0x49
 3937 0075 13       		.uleb128 0x13
 3938 0076 38       		.uleb128 0x38
 3939 0077 0B       		.uleb128 0xb
 3940 0078 00       		.byte	0
 3941 0079 00       		.byte	0
 3942 007a 0B       		.uleb128 0xb
 3943 007b 0D       		.uleb128 0xd
 3944 007c 00       		.byte	0
 3945 007d 03       		.uleb128 0x3
 3946 007e 0E       		.uleb128 0xe
 3947 007f 3A       		.uleb128 0x3a
 3948 0080 0B       		.uleb128 0xb
 3949 0081 3B       		.uleb128 0x3b
 3950 0082 0B       		.uleb128 0xb
 3951 0083 49       		.uleb128 0x49
 3952 0084 13       		.uleb128 0x13
 3953 0085 38       		.uleb128 0x38
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 87


 3954 0086 0B       		.uleb128 0xb
 3955 0087 00       		.byte	0
 3956 0088 00       		.byte	0
 3957 0089 0C       		.uleb128 0xc
 3958 008a 35       		.uleb128 0x35
 3959 008b 00       		.byte	0
 3960 008c 49       		.uleb128 0x49
 3961 008d 13       		.uleb128 0x13
 3962 008e 00       		.byte	0
 3963 008f 00       		.byte	0
 3964 0090 0D       		.uleb128 0xd
 3965 0091 13       		.uleb128 0x13
 3966 0092 01       		.byte	0x1
 3967 0093 0B       		.uleb128 0xb
 3968 0094 05       		.uleb128 0x5
 3969 0095 3A       		.uleb128 0x3a
 3970 0096 0B       		.uleb128 0xb
 3971 0097 3B       		.uleb128 0x3b
 3972 0098 0B       		.uleb128 0xb
 3973 0099 01       		.uleb128 0x1
 3974 009a 13       		.uleb128 0x13
 3975 009b 00       		.byte	0
 3976 009c 00       		.byte	0
 3977 009d 0E       		.uleb128 0xe
 3978 009e 13       		.uleb128 0x13
 3979 009f 01       		.byte	0x1
 3980 00a0 03       		.uleb128 0x3
 3981 00a1 08       		.uleb128 0x8
 3982 00a2 0B       		.uleb128 0xb
 3983 00a3 0B       		.uleb128 0xb
 3984 00a4 3A       		.uleb128 0x3a
 3985 00a5 0B       		.uleb128 0xb
 3986 00a6 3B       		.uleb128 0x3b
 3987 00a7 0B       		.uleb128 0xb
 3988 00a8 01       		.uleb128 0x1
 3989 00a9 13       		.uleb128 0x13
 3990 00aa 00       		.byte	0
 3991 00ab 00       		.byte	0
 3992 00ac 0F       		.uleb128 0xf
 3993 00ad 2E       		.uleb128 0x2e
 3994 00ae 00       		.byte	0
 3995 00af 3F       		.uleb128 0x3f
 3996 00b0 19       		.uleb128 0x19
 3997 00b1 03       		.uleb128 0x3
 3998 00b2 0E       		.uleb128 0xe
 3999 00b3 3A       		.uleb128 0x3a
 4000 00b4 0B       		.uleb128 0xb
 4001 00b5 3B       		.uleb128 0x3b
 4002 00b6 0B       		.uleb128 0xb
 4003 00b7 27       		.uleb128 0x27
 4004 00b8 19       		.uleb128 0x19
 4005 00b9 11       		.uleb128 0x11
 4006 00ba 01       		.uleb128 0x1
 4007 00bb 12       		.uleb128 0x12
 4008 00bc 06       		.uleb128 0x6
 4009 00bd 40       		.uleb128 0x40
 4010 00be 18       		.uleb128 0x18
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 88


 4011 00bf 9642     		.uleb128 0x2116
 4012 00c1 19       		.uleb128 0x19
 4013 00c2 00       		.byte	0
 4014 00c3 00       		.byte	0
 4015 00c4 10       		.uleb128 0x10
 4016 00c5 2E       		.uleb128 0x2e
 4017 00c6 01       		.byte	0x1
 4018 00c7 3F       		.uleb128 0x3f
 4019 00c8 19       		.uleb128 0x19
 4020 00c9 03       		.uleb128 0x3
 4021 00ca 0E       		.uleb128 0xe
 4022 00cb 3A       		.uleb128 0x3a
 4023 00cc 0B       		.uleb128 0xb
 4024 00cd 3B       		.uleb128 0x3b
 4025 00ce 0B       		.uleb128 0xb
 4026 00cf 11       		.uleb128 0x11
 4027 00d0 01       		.uleb128 0x1
 4028 00d1 12       		.uleb128 0x12
 4029 00d2 06       		.uleb128 0x6
 4030 00d3 40       		.uleb128 0x40
 4031 00d4 18       		.uleb128 0x18
 4032 00d5 9642     		.uleb128 0x2116
 4033 00d7 19       		.uleb128 0x19
 4034 00d8 01       		.uleb128 0x1
 4035 00d9 13       		.uleb128 0x13
 4036 00da 00       		.byte	0
 4037 00db 00       		.byte	0
 4038 00dc 11       		.uleb128 0x11
 4039 00dd 34       		.uleb128 0x34
 4040 00de 00       		.byte	0
 4041 00df 03       		.uleb128 0x3
 4042 00e0 0E       		.uleb128 0xe
 4043 00e1 3A       		.uleb128 0x3a
 4044 00e2 0B       		.uleb128 0xb
 4045 00e3 3B       		.uleb128 0x3b
 4046 00e4 0B       		.uleb128 0xb
 4047 00e5 49       		.uleb128 0x49
 4048 00e6 13       		.uleb128 0x13
 4049 00e7 02       		.uleb128 0x2
 4050 00e8 18       		.uleb128 0x18
 4051 00e9 00       		.byte	0
 4052 00ea 00       		.byte	0
 4053 00eb 12       		.uleb128 0x12
 4054 00ec 2E       		.uleb128 0x2e
 4055 00ed 01       		.byte	0x1
 4056 00ee 3F       		.uleb128 0x3f
 4057 00ef 19       		.uleb128 0x19
 4058 00f0 03       		.uleb128 0x3
 4059 00f1 0E       		.uleb128 0xe
 4060 00f2 3A       		.uleb128 0x3a
 4061 00f3 0B       		.uleb128 0xb
 4062 00f4 3B       		.uleb128 0x3b
 4063 00f5 0B       		.uleb128 0xb
 4064 00f6 49       		.uleb128 0x49
 4065 00f7 13       		.uleb128 0x13
 4066 00f8 11       		.uleb128 0x11
 4067 00f9 01       		.uleb128 0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 89


 4068 00fa 12       		.uleb128 0x12
 4069 00fb 06       		.uleb128 0x6
 4070 00fc 40       		.uleb128 0x40
 4071 00fd 18       		.uleb128 0x18
 4072 00fe 9642     		.uleb128 0x2116
 4073 0100 19       		.uleb128 0x19
 4074 0101 01       		.uleb128 0x1
 4075 0102 13       		.uleb128 0x13
 4076 0103 00       		.byte	0
 4077 0104 00       		.byte	0
 4078 0105 13       		.uleb128 0x13
 4079 0106 2E       		.uleb128 0x2e
 4080 0107 00       		.byte	0
 4081 0108 3F       		.uleb128 0x3f
 4082 0109 19       		.uleb128 0x19
 4083 010a 03       		.uleb128 0x3
 4084 010b 0E       		.uleb128 0xe
 4085 010c 3A       		.uleb128 0x3a
 4086 010d 0B       		.uleb128 0xb
 4087 010e 3B       		.uleb128 0x3b
 4088 010f 0B       		.uleb128 0xb
 4089 0110 11       		.uleb128 0x11
 4090 0111 01       		.uleb128 0x1
 4091 0112 12       		.uleb128 0x12
 4092 0113 06       		.uleb128 0x6
 4093 0114 40       		.uleb128 0x40
 4094 0115 18       		.uleb128 0x18
 4095 0116 9642     		.uleb128 0x2116
 4096 0118 19       		.uleb128 0x19
 4097 0119 00       		.byte	0
 4098 011a 00       		.byte	0
 4099 011b 14       		.uleb128 0x14
 4100 011c 2E       		.uleb128 0x2e
 4101 011d 01       		.byte	0x1
 4102 011e 3F       		.uleb128 0x3f
 4103 011f 19       		.uleb128 0x19
 4104 0120 03       		.uleb128 0x3
 4105 0121 0E       		.uleb128 0xe
 4106 0122 3A       		.uleb128 0x3a
 4107 0123 0B       		.uleb128 0xb
 4108 0124 3B       		.uleb128 0x3b
 4109 0125 0B       		.uleb128 0xb
 4110 0126 27       		.uleb128 0x27
 4111 0127 19       		.uleb128 0x19
 4112 0128 11       		.uleb128 0x11
 4113 0129 01       		.uleb128 0x1
 4114 012a 12       		.uleb128 0x12
 4115 012b 06       		.uleb128 0x6
 4116 012c 40       		.uleb128 0x40
 4117 012d 18       		.uleb128 0x18
 4118 012e 9642     		.uleb128 0x2116
 4119 0130 19       		.uleb128 0x19
 4120 0131 01       		.uleb128 0x1
 4121 0132 13       		.uleb128 0x13
 4122 0133 00       		.byte	0
 4123 0134 00       		.byte	0
 4124 0135 15       		.uleb128 0x15
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 90


 4125 0136 05       		.uleb128 0x5
 4126 0137 00       		.byte	0
 4127 0138 03       		.uleb128 0x3
 4128 0139 0E       		.uleb128 0xe
 4129 013a 3A       		.uleb128 0x3a
 4130 013b 0B       		.uleb128 0xb
 4131 013c 3B       		.uleb128 0x3b
 4132 013d 0B       		.uleb128 0xb
 4133 013e 49       		.uleb128 0x49
 4134 013f 13       		.uleb128 0x13
 4135 0140 02       		.uleb128 0x2
 4136 0141 18       		.uleb128 0x18
 4137 0142 00       		.byte	0
 4138 0143 00       		.byte	0
 4139 0144 16       		.uleb128 0x16
 4140 0145 2E       		.uleb128 0x2e
 4141 0146 01       		.byte	0x1
 4142 0147 3F       		.uleb128 0x3f
 4143 0148 19       		.uleb128 0x19
 4144 0149 03       		.uleb128 0x3
 4145 014a 0E       		.uleb128 0xe
 4146 014b 3A       		.uleb128 0x3a
 4147 014c 0B       		.uleb128 0xb
 4148 014d 3B       		.uleb128 0x3b
 4149 014e 0B       		.uleb128 0xb
 4150 014f 27       		.uleb128 0x27
 4151 0150 19       		.uleb128 0x19
 4152 0151 49       		.uleb128 0x49
 4153 0152 13       		.uleb128 0x13
 4154 0153 11       		.uleb128 0x11
 4155 0154 01       		.uleb128 0x1
 4156 0155 12       		.uleb128 0x12
 4157 0156 06       		.uleb128 0x6
 4158 0157 40       		.uleb128 0x40
 4159 0158 18       		.uleb128 0x18
 4160 0159 9642     		.uleb128 0x2116
 4161 015b 19       		.uleb128 0x19
 4162 015c 01       		.uleb128 0x1
 4163 015d 13       		.uleb128 0x13
 4164 015e 00       		.byte	0
 4165 015f 00       		.byte	0
 4166 0160 17       		.uleb128 0x17
 4167 0161 2E       		.uleb128 0x2e
 4168 0162 01       		.byte	0x1
 4169 0163 3F       		.uleb128 0x3f
 4170 0164 19       		.uleb128 0x19
 4171 0165 03       		.uleb128 0x3
 4172 0166 0E       		.uleb128 0xe
 4173 0167 3A       		.uleb128 0x3a
 4174 0168 0B       		.uleb128 0xb
 4175 0169 3B       		.uleb128 0x3b
 4176 016a 0B       		.uleb128 0xb
 4177 016b 27       		.uleb128 0x27
 4178 016c 19       		.uleb128 0x19
 4179 016d 11       		.uleb128 0x11
 4180 016e 01       		.uleb128 0x1
 4181 016f 12       		.uleb128 0x12
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 91


 4182 0170 06       		.uleb128 0x6
 4183 0171 40       		.uleb128 0x40
 4184 0172 18       		.uleb128 0x18
 4185 0173 9742     		.uleb128 0x2117
 4186 0175 19       		.uleb128 0x19
 4187 0176 01       		.uleb128 0x1
 4188 0177 13       		.uleb128 0x13
 4189 0178 00       		.byte	0
 4190 0179 00       		.byte	0
 4191 017a 18       		.uleb128 0x18
 4192 017b 2E       		.uleb128 0x2e
 4193 017c 01       		.byte	0x1
 4194 017d 3F       		.uleb128 0x3f
 4195 017e 19       		.uleb128 0x19
 4196 017f 03       		.uleb128 0x3
 4197 0180 0E       		.uleb128 0xe
 4198 0181 3A       		.uleb128 0x3a
 4199 0182 0B       		.uleb128 0xb
 4200 0183 3B       		.uleb128 0x3b
 4201 0184 0B       		.uleb128 0xb
 4202 0185 27       		.uleb128 0x27
 4203 0186 19       		.uleb128 0x19
 4204 0187 49       		.uleb128 0x49
 4205 0188 13       		.uleb128 0x13
 4206 0189 11       		.uleb128 0x11
 4207 018a 01       		.uleb128 0x1
 4208 018b 12       		.uleb128 0x12
 4209 018c 06       		.uleb128 0x6
 4210 018d 40       		.uleb128 0x40
 4211 018e 18       		.uleb128 0x18
 4212 018f 9742     		.uleb128 0x2117
 4213 0191 19       		.uleb128 0x19
 4214 0192 01       		.uleb128 0x1
 4215 0193 13       		.uleb128 0x13
 4216 0194 00       		.byte	0
 4217 0195 00       		.byte	0
 4218 0196 19       		.uleb128 0x19
 4219 0197 2E       		.uleb128 0x2e
 4220 0198 01       		.byte	0x1
 4221 0199 3F       		.uleb128 0x3f
 4222 019a 19       		.uleb128 0x19
 4223 019b 03       		.uleb128 0x3
 4224 019c 0E       		.uleb128 0xe
 4225 019d 3A       		.uleb128 0x3a
 4226 019e 0B       		.uleb128 0xb
 4227 019f 3B       		.uleb128 0x3b
 4228 01a0 05       		.uleb128 0x5
 4229 01a1 11       		.uleb128 0x11
 4230 01a2 01       		.uleb128 0x1
 4231 01a3 12       		.uleb128 0x12
 4232 01a4 06       		.uleb128 0x6
 4233 01a5 40       		.uleb128 0x40
 4234 01a6 18       		.uleb128 0x18
 4235 01a7 9642     		.uleb128 0x2116
 4236 01a9 19       		.uleb128 0x19
 4237 01aa 01       		.uleb128 0x1
 4238 01ab 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 92


 4239 01ac 00       		.byte	0
 4240 01ad 00       		.byte	0
 4241 01ae 1A       		.uleb128 0x1a
 4242 01af 34       		.uleb128 0x34
 4243 01b0 00       		.byte	0
 4244 01b1 03       		.uleb128 0x3
 4245 01b2 0E       		.uleb128 0xe
 4246 01b3 3A       		.uleb128 0x3a
 4247 01b4 0B       		.uleb128 0xb
 4248 01b5 3B       		.uleb128 0x3b
 4249 01b6 05       		.uleb128 0x5
 4250 01b7 49       		.uleb128 0x49
 4251 01b8 13       		.uleb128 0x13
 4252 01b9 02       		.uleb128 0x2
 4253 01ba 18       		.uleb128 0x18
 4254 01bb 00       		.byte	0
 4255 01bc 00       		.byte	0
 4256 01bd 1B       		.uleb128 0x1b
 4257 01be 2E       		.uleb128 0x2e
 4258 01bf 00       		.byte	0
 4259 01c0 3F       		.uleb128 0x3f
 4260 01c1 19       		.uleb128 0x19
 4261 01c2 03       		.uleb128 0x3
 4262 01c3 0E       		.uleb128 0xe
 4263 01c4 3A       		.uleb128 0x3a
 4264 01c5 0B       		.uleb128 0xb
 4265 01c6 3B       		.uleb128 0x3b
 4266 01c7 05       		.uleb128 0x5
 4267 01c8 27       		.uleb128 0x27
 4268 01c9 19       		.uleb128 0x19
 4269 01ca 49       		.uleb128 0x49
 4270 01cb 13       		.uleb128 0x13
 4271 01cc 11       		.uleb128 0x11
 4272 01cd 01       		.uleb128 0x1
 4273 01ce 12       		.uleb128 0x12
 4274 01cf 06       		.uleb128 0x6
 4275 01d0 40       		.uleb128 0x40
 4276 01d1 18       		.uleb128 0x18
 4277 01d2 9642     		.uleb128 0x2116
 4278 01d4 19       		.uleb128 0x19
 4279 01d5 00       		.byte	0
 4280 01d6 00       		.byte	0
 4281 01d7 1C       		.uleb128 0x1c
 4282 01d8 2E       		.uleb128 0x2e
 4283 01d9 01       		.byte	0x1
 4284 01da 3F       		.uleb128 0x3f
 4285 01db 19       		.uleb128 0x19
 4286 01dc 03       		.uleb128 0x3
 4287 01dd 0E       		.uleb128 0xe
 4288 01de 3A       		.uleb128 0x3a
 4289 01df 0B       		.uleb128 0xb
 4290 01e0 3B       		.uleb128 0x3b
 4291 01e1 05       		.uleb128 0x5
 4292 01e2 49       		.uleb128 0x49
 4293 01e3 13       		.uleb128 0x13
 4294 01e4 11       		.uleb128 0x11
 4295 01e5 01       		.uleb128 0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 93


 4296 01e6 12       		.uleb128 0x12
 4297 01e7 06       		.uleb128 0x6
 4298 01e8 40       		.uleb128 0x40
 4299 01e9 18       		.uleb128 0x18
 4300 01ea 9642     		.uleb128 0x2116
 4301 01ec 19       		.uleb128 0x19
 4302 01ed 01       		.uleb128 0x1
 4303 01ee 13       		.uleb128 0x13
 4304 01ef 00       		.byte	0
 4305 01f0 00       		.byte	0
 4306 01f1 1D       		.uleb128 0x1d
 4307 01f2 0B       		.uleb128 0xb
 4308 01f3 01       		.byte	0x1
 4309 01f4 11       		.uleb128 0x11
 4310 01f5 01       		.uleb128 0x1
 4311 01f6 12       		.uleb128 0x12
 4312 01f7 06       		.uleb128 0x6
 4313 01f8 00       		.byte	0
 4314 01f9 00       		.byte	0
 4315 01fa 1E       		.uleb128 0x1e
 4316 01fb 0B       		.uleb128 0xb
 4317 01fc 01       		.byte	0x1
 4318 01fd 11       		.uleb128 0x11
 4319 01fe 01       		.uleb128 0x1
 4320 01ff 12       		.uleb128 0x12
 4321 0200 06       		.uleb128 0x6
 4322 0201 01       		.uleb128 0x1
 4323 0202 13       		.uleb128 0x13
 4324 0203 00       		.byte	0
 4325 0204 00       		.byte	0
 4326 0205 1F       		.uleb128 0x1f
 4327 0206 21       		.uleb128 0x21
 4328 0207 00       		.byte	0
 4329 0208 49       		.uleb128 0x49
 4330 0209 13       		.uleb128 0x13
 4331 020a 2F       		.uleb128 0x2f
 4332 020b 05       		.uleb128 0x5
 4333 020c 00       		.byte	0
 4334 020d 00       		.byte	0
 4335 020e 20       		.uleb128 0x20
 4336 020f 2E       		.uleb128 0x2e
 4337 0210 01       		.byte	0x1
 4338 0211 3F       		.uleb128 0x3f
 4339 0212 19       		.uleb128 0x19
 4340 0213 03       		.uleb128 0x3
 4341 0214 0E       		.uleb128 0xe
 4342 0215 3A       		.uleb128 0x3a
 4343 0216 0B       		.uleb128 0xb
 4344 0217 3B       		.uleb128 0x3b
 4345 0218 05       		.uleb128 0x5
 4346 0219 27       		.uleb128 0x27
 4347 021a 19       		.uleb128 0x19
 4348 021b 49       		.uleb128 0x49
 4349 021c 13       		.uleb128 0x13
 4350 021d 11       		.uleb128 0x11
 4351 021e 01       		.uleb128 0x1
 4352 021f 12       		.uleb128 0x12
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 94


 4353 0220 06       		.uleb128 0x6
 4354 0221 40       		.uleb128 0x40
 4355 0222 18       		.uleb128 0x18
 4356 0223 9642     		.uleb128 0x2116
 4357 0225 19       		.uleb128 0x19
 4358 0226 01       		.uleb128 0x1
 4359 0227 13       		.uleb128 0x13
 4360 0228 00       		.byte	0
 4361 0229 00       		.byte	0
 4362 022a 21       		.uleb128 0x21
 4363 022b 05       		.uleb128 0x5
 4364 022c 00       		.byte	0
 4365 022d 03       		.uleb128 0x3
 4366 022e 0E       		.uleb128 0xe
 4367 022f 3A       		.uleb128 0x3a
 4368 0230 0B       		.uleb128 0xb
 4369 0231 3B       		.uleb128 0x3b
 4370 0232 05       		.uleb128 0x5
 4371 0233 49       		.uleb128 0x49
 4372 0234 13       		.uleb128 0x13
 4373 0235 02       		.uleb128 0x2
 4374 0236 18       		.uleb128 0x18
 4375 0237 00       		.byte	0
 4376 0238 00       		.byte	0
 4377 0239 22       		.uleb128 0x22
 4378 023a 34       		.uleb128 0x34
 4379 023b 00       		.byte	0
 4380 023c 03       		.uleb128 0x3
 4381 023d 08       		.uleb128 0x8
 4382 023e 3A       		.uleb128 0x3a
 4383 023f 0B       		.uleb128 0xb
 4384 0240 3B       		.uleb128 0x3b
 4385 0241 05       		.uleb128 0x5
 4386 0242 49       		.uleb128 0x49
 4387 0243 13       		.uleb128 0x13
 4388 0244 02       		.uleb128 0x2
 4389 0245 18       		.uleb128 0x18
 4390 0246 00       		.byte	0
 4391 0247 00       		.byte	0
 4392 0248 23       		.uleb128 0x23
 4393 0249 34       		.uleb128 0x34
 4394 024a 00       		.byte	0
 4395 024b 03       		.uleb128 0x3
 4396 024c 0E       		.uleb128 0xe
 4397 024d 3A       		.uleb128 0x3a
 4398 024e 0B       		.uleb128 0xb
 4399 024f 3B       		.uleb128 0x3b
 4400 0250 05       		.uleb128 0x5
 4401 0251 49       		.uleb128 0x49
 4402 0252 13       		.uleb128 0x13
 4403 0253 3F       		.uleb128 0x3f
 4404 0254 19       		.uleb128 0x19
 4405 0255 3C       		.uleb128 0x3c
 4406 0256 19       		.uleb128 0x19
 4407 0257 00       		.byte	0
 4408 0258 00       		.byte	0
 4409 0259 24       		.uleb128 0x24
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 95


 4410 025a 34       		.uleb128 0x34
 4411 025b 00       		.byte	0
 4412 025c 03       		.uleb128 0x3
 4413 025d 0E       		.uleb128 0xe
 4414 025e 3A       		.uleb128 0x3a
 4415 025f 0B       		.uleb128 0xb
 4416 0260 3B       		.uleb128 0x3b
 4417 0261 0B       		.uleb128 0xb
 4418 0262 49       		.uleb128 0x49
 4419 0263 13       		.uleb128 0x13
 4420 0264 3F       		.uleb128 0x3f
 4421 0265 19       		.uleb128 0x19
 4422 0266 02       		.uleb128 0x2
 4423 0267 18       		.uleb128 0x18
 4424 0268 00       		.byte	0
 4425 0269 00       		.byte	0
 4426 026a 25       		.uleb128 0x25
 4427 026b 34       		.uleb128 0x34
 4428 026c 00       		.byte	0
 4429 026d 03       		.uleb128 0x3
 4430 026e 08       		.uleb128 0x8
 4431 026f 3A       		.uleb128 0x3a
 4432 0270 0B       		.uleb128 0xb
 4433 0271 3B       		.uleb128 0x3b
 4434 0272 0B       		.uleb128 0xb
 4435 0273 49       		.uleb128 0x49
 4436 0274 13       		.uleb128 0x13
 4437 0275 3F       		.uleb128 0x3f
 4438 0276 19       		.uleb128 0x19
 4439 0277 02       		.uleb128 0x2
 4440 0278 18       		.uleb128 0x18
 4441 0279 00       		.byte	0
 4442 027a 00       		.byte	0
 4443 027b 00       		.byte	0
 4444              		.section	.debug_aranges,"",%progbits
 4445 0000 8C000000 		.4byte	0x8c
 4446 0004 0200     		.2byte	0x2
 4447 0006 00000000 		.4byte	.Ldebug_info0
 4448 000a 04       		.byte	0x4
 4449 000b 00       		.byte	0
 4450 000c 0000     		.2byte	0
 4451 000e 0000     		.2byte	0
 4452 0010 00000000 		.4byte	.LFB64
 4453 0014 0C000000 		.4byte	.LFE64-.LFB64
 4454 0018 00000000 		.4byte	.LFB65
 4455 001c 2C010000 		.4byte	.LFE65-.LFB65
 4456 0020 00000000 		.4byte	.LFB66
 4457 0024 64000000 		.4byte	.LFE66-.LFB66
 4458 0028 00000000 		.4byte	.LFB67
 4459 002c 2A000000 		.4byte	.LFE67-.LFB67
 4460 0030 00000000 		.4byte	.LFB68
 4461 0034 50000000 		.4byte	.LFE68-.LFB68
 4462 0038 00000000 		.4byte	.LFB69
 4463 003c 48000000 		.4byte	.LFE69-.LFB69
 4464 0040 00000000 		.4byte	.LFB70
 4465 0044 1E000000 		.4byte	.LFE70-.LFB70
 4466 0048 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 96


 4467 004c 46000000 		.4byte	.LFE71-.LFB71
 4468 0050 00000000 		.4byte	.LFB72
 4469 0054 B8010000 		.4byte	.LFE72-.LFB72
 4470 0058 00000000 		.4byte	.LFB73
 4471 005c 1E000000 		.4byte	.LFE73-.LFB73
 4472 0060 00000000 		.4byte	.LFB74
 4473 0064 30040000 		.4byte	.LFE74-.LFB74
 4474 0068 00000000 		.4byte	.LFB75
 4475 006c 44000000 		.4byte	.LFE75-.LFB75
 4476 0070 00000000 		.4byte	.LFB76
 4477 0074 E0030000 		.4byte	.LFE76-.LFB76
 4478 0078 00000000 		.4byte	.LFB77
 4479 007c 74000000 		.4byte	.LFE77-.LFB77
 4480 0080 00000000 		.4byte	.LFB78
 4481 0084 38010000 		.4byte	.LFE78-.LFB78
 4482 0088 00000000 		.4byte	0
 4483 008c 00000000 		.4byte	0
 4484              		.section	.debug_ranges,"",%progbits
 4485              	.Ldebug_ranges0:
 4486 0000 00000000 		.4byte	.LFB64
 4487 0004 0C000000 		.4byte	.LFE64
 4488 0008 00000000 		.4byte	.LFB65
 4489 000c 2C010000 		.4byte	.LFE65
 4490 0010 00000000 		.4byte	.LFB66
 4491 0014 64000000 		.4byte	.LFE66
 4492 0018 00000000 		.4byte	.LFB67
 4493 001c 2A000000 		.4byte	.LFE67
 4494 0020 00000000 		.4byte	.LFB68
 4495 0024 50000000 		.4byte	.LFE68
 4496 0028 00000000 		.4byte	.LFB69
 4497 002c 48000000 		.4byte	.LFE69
 4498 0030 00000000 		.4byte	.LFB70
 4499 0034 1E000000 		.4byte	.LFE70
 4500 0038 00000000 		.4byte	.LFB71
 4501 003c 46000000 		.4byte	.LFE71
 4502 0040 00000000 		.4byte	.LFB72
 4503 0044 B8010000 		.4byte	.LFE72
 4504 0048 00000000 		.4byte	.LFB73
 4505 004c 1E000000 		.4byte	.LFE73
 4506 0050 00000000 		.4byte	.LFB74
 4507 0054 30040000 		.4byte	.LFE74
 4508 0058 00000000 		.4byte	.LFB75
 4509 005c 44000000 		.4byte	.LFE75
 4510 0060 00000000 		.4byte	.LFB76
 4511 0064 E0030000 		.4byte	.LFE76
 4512 0068 00000000 		.4byte	.LFB77
 4513 006c 74000000 		.4byte	.LFE77
 4514 0070 00000000 		.4byte	.LFB78
 4515 0074 38010000 		.4byte	.LFE78
 4516 0078 00000000 		.4byte	0
 4517 007c 00000000 		.4byte	0
 4518              		.section	.debug_line,"",%progbits
 4519              	.Ldebug_line0:
 4520 0000 3A040000 		.section	.debug_str,"MS",%progbits,1
 4520      02001502 
 4520      00000201 
 4520      FB0E0D00 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 97


 4520      01010101 
 4521              	.LASF106:
 4522 0000 745F6D6F 		.ascii	"t_modem\000"
 4522      64656D00 
 4523              	.LASF12:
 4524 0008 75696E74 		.ascii	"uint16\000"
 4524      313600
 4525              	.LASF50:
 4526 000f 746D5F68 		.ascii	"tm_hour\000"
 4526      6F757200 
 4527              	.LASF139:
 4528 0017 62756666 		.ascii	"buffer_overflow\000"
 4528      65725F6F 
 4528      76657266 
 4528      6C6F7700 
 4529              	.LASF137:
 4530 0027 66696C65 		.ascii	"fileName\000"
 4530      4E616D65 
 4530      00
 4531              	.LASF0:
 4532 0030 7369676E 		.ascii	"signed char\000"
 4532      65642063 
 4532      68617200 
 4533              	.LASF82:
 4534 003c 636F756E 		.ascii	"countDownResetCondition\000"
 4534      74446F77 
 4534      6E526573 
 4534      6574436F 
 4534      6E646974 
 4535              	.LASF158:
 4536 0054 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4536      43313120 
 4536      352E342E 
 4536      31203230 
 4536      31363036 
 4537 0087 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4537      20726576 
 4537      6973696F 
 4537      6E203233 
 4537      37373135 
 4538 00ba 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4538      66756E63 
 4538      74696F6E 
 4538      2D736563 
 4538      74696F6E 
 4539              	.LASF26:
 4540 00e2 4D6F6E74 		.ascii	"Month\000"
 4540      6800
 4541              	.LASF7:
 4542 00e8 6C6F6E67 		.ascii	"long long unsigned int\000"
 4542      206C6F6E 
 4542      6720756E 
 4542      7369676E 
 4542      65642069 
 4543              	.LASF22:
 4544 00ff 486F7572 		.ascii	"Hour\000"
 4544      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 98


 4545              	.LASF143:
 4546 0104 6D6F6465 		.ascii	"modem_state\000"
 4546      6D5F7374 
 4546      61746500 
 4547              	.LASF34:
 4548 0110 64657074 		.ascii	"depth\000"
 4548      6800
 4549              	.LASF152:
 4550 0116 616C6172 		.ascii	"alarmMeasure\000"
 4550      6D4D6561 
 4550      73757265 
 4550      00
 4551              	.LASF138:
 4552 0123 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4552      52784275 
 4552      66666572 
 4552      00
 4553              	.LASF35:
 4554 0130 534E5231 		.ascii	"SNR1\000"
 4554      00
 4555              	.LASF36:
 4556 0135 534E5232 		.ascii	"SNR2\000"
 4556      00
 4557              	.LASF37:
 4558 013a 534E5233 		.ascii	"SNR3\000"
 4558      00
 4559              	.LASF38:
 4560 013f 534E5234 		.ascii	"SNR4\000"
 4560      00
 4561              	.LASF107:
 4562 0144 745F6C65 		.ascii	"t_level_sensor\000"
 4562      76656C5F 
 4562      73656E73 
 4562      6F7200
 4563              	.LASF6:
 4564 0153 6C6F6E67 		.ascii	"long long int\000"
 4564      206C6F6E 
 4564      6720696E 
 4564      7400
 4565              	.LASF117:
 4566 0161 7061636B 		.ascii	"packets\000"
 4566      65747300 
 4567              	.LASF66:
 4568 0169 65636E6F 		.ascii	"ecno\000"
 4568      00
 4569              	.LASF153:
 4570 016e 74696D65 		.ascii	"timeToMeasure\000"
 4570      546F4D65 
 4570      61737572 
 4570      6500
 4571              	.LASF69:
 4572 017c 74696D65 		.ascii	"time_to_network_connect\000"
 4572      5F746F5F 
 4572      6E657477 
 4572      6F726B5F 
 4572      636F6E6E 
 4573              	.LASF155:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 99


 4574 0194 74696D65 		.ascii	"timeToSync\000"
 4574      546F5379 
 4574      6E6300
 4575              	.LASF41:
 4576 019f 766F6C74 		.ascii	"voltage_solar\000"
 4576      6167655F 
 4576      736F6C61 
 4576      7200
 4577              	.LASF42:
 4578 01ad 766F6C74 		.ascii	"voltage_charge_current\000"
 4578      6167655F 
 4578      63686172 
 4578      67655F63 
 4578      75727265 
 4579              	.LASF136:
 4580 01c4 75706772 		.ascii	"upgrade_status\000"
 4580      6164655F 
 4580      73746174 
 4580      757300
 4581              	.LASF120:
 4582 01d3 635F6461 		.ascii	"c_data_count_sent\000"
 4582      74615F63 
 4582      6F756E74 
 4582      5F73656E 
 4582      7400
 4583              	.LASF63:
 4584 01e5 6D6F6465 		.ascii	"modem_info_t\000"
 4584      6D5F696E 
 4584      666F5F74 
 4584      00
 4585              	.LASF64:
 4586 01f2 72786C65 		.ascii	"rxlev\000"
 4586      7600
 4587              	.LASF4:
 4588 01f8 6C6F6E67 		.ascii	"long int\000"
 4588      20696E74 
 4588      00
 4589              	.LASF70:
 4590 0201 74696D65 		.ascii	"time_to_acquire_ip\000"
 4590      5F746F5F 
 4590      61637175 
 4590      6972655F 
 4590      697000
 4591              	.LASF83:
 4592 0214 616C6172 		.ascii	"alarm\000"
 4592      6D00
 4593              	.LASF11:
 4594 021a 75696E74 		.ascii	"uint8\000"
 4594      3800
 4595              	.LASF112:
 4596 0220 635F7472 		.ascii	"c_try_counter\000"
 4596      795F636F 
 4596      756E7465 
 4596      7200
 4597              	.LASF123:
 4598 022e 73656E64 		.ascii	"send_time\000"
 4598      5F74696D 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 100


 4598      6500
 4599              	.LASF16:
 4600 0238 696E7433 		.ascii	"int32\000"
 4600      3200
 4601              	.LASF72:
 4602 023e 6E6F6465 		.ascii	"node_type\000"
 4602      5F747970 
 4602      6500
 4603              	.LASF110:
 4604 0248 73796E63 		.ascii	"syncData\000"
 4604      44617461 
 4604      00
 4605              	.LASF118:
 4606 0251 6E657477 		.ascii	"network_time\000"
 4606      6F726B5F 
 4606      74696D65 
 4606      00
 4607              	.LASF3:
 4608 025e 73686F72 		.ascii	"short unsigned int\000"
 4608      7420756E 
 4608      7369676E 
 4608      65642069 
 4608      6E7400
 4609              	.LASF13:
 4610 0271 75696E74 		.ascii	"uint32\000"
 4610      333200
 4611              	.LASF61:
 4612 0278 6D6F6465 		.ascii	"model_id\000"
 4612      6C5F6964 
 4612      00
 4613              	.LASF79:
 4614 0281 636F756E 		.ascii	"countDownValue\000"
 4614      74446F77 
 4614      6E56616C 
 4614      756500
 4615              	.LASF132:
 4616 0290 75706772 		.ascii	"upgraded\000"
 4616      61646564 
 4616      00
 4617              	.LASF52:
 4618 0299 746D5F6D 		.ascii	"tm_mon\000"
 4618      6F6E00
 4619              	.LASF76:
 4620 02a0 64656275 		.ascii	"debug_level\000"
 4620      675F6C65 
 4620      76656C00 
 4621              	.LASF134:
 4622 02ac 706F7274 		.ascii	"port\000"
 4622      00
 4623              	.LASF160:
 4624 02b1 433A5C6E 		.ascii	"C:\\notoriOS\\notoriOS.cydsn\000"
 4624      6F746F72 
 4624      694F535C 
 4624      6E6F746F 
 4624      72694F53 
 4625              	.LASF57:
 4626 02cc 76616C75 		.ascii	"value\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 101


 4626      6500
 4627              	.LASF133:
 4628 02d2 686F7374 		.ascii	"host\000"
 4628      00
 4629              	.LASF53:
 4630 02d7 746D5F79 		.ascii	"tm_year\000"
 4630      65617200 
 4631              	.LASF154:
 4632 02df 616C6172 		.ascii	"alarmSync\000"
 4632      6D53796E 
 4632      6300
 4633              	.LASF8:
 4634 02e9 756E7369 		.ascii	"unsigned int\000"
 4634      676E6564 
 4634      20696E74 
 4634      00
 4635              	.LASF130:
 4636 02f6 73657454 		.ascii	"setTime\000"
 4636      696D6500 
 4637              	.LASF59:
 4638 02fe 6B65795F 		.ascii	"key_value_t\000"
 4638      76616C75 
 4638      655F7400 
 4639              	.LASF95:
 4640 030a 41796F49 		.ascii	"AyoItsTime\000"
 4640      74735469 
 4640      6D6500
 4641              	.LASF122:
 4642 0315 68747470 		.ascii	"http_chunk\000"
 4642      5F636875 
 4642      6E6B00
 4643              	.LASF128:
 4644 0320 6D5F766F 		.ascii	"m_voltage\000"
 4644      6C746167 
 4644      6500
 4645              	.LASF5:
 4646 032a 6C6F6E67 		.ascii	"long unsigned int\000"
 4646      20756E73 
 4646      69676E65 
 4646      6420696E 
 4646      7400
 4647              	.LASF92:
 4648 033c 7472795F 		.ascii	"try_counter\000"
 4648      636F756E 
 4648      74657200 
 4649              	.LASF113:
 4650 0348 64617461 		.ascii	"data_count_desired\000"
 4650      5F636F75 
 4650      6E745F64 
 4650      65736972 
 4650      656400
 4651              	.LASF40:
 4652 035b 766F6C74 		.ascii	"voltage_battery\000"
 4652      6167655F 
 4652      62617474 
 4652      65727900 
 4653              	.LASF24:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 102


 4654 036b 4461794F 		.ascii	"DayOfMonth\000"
 4654      664D6F6E 
 4654      746800
 4655              	.LASF126:
 4656 0376 6D616B65 		.ascii	"makeMeasurements\000"
 4656      4D656173 
 4656      7572656D 
 4656      656E7473 
 4656      00
 4657              	.LASF142:
 4658 0387 64617461 		.ascii	"data\000"
 4658      00
 4659              	.LASF88:
 4660 038c 65705F70 		.ascii	"ep_port\000"
 4660      6F727400 
 4661              	.LASF56:
 4662 0394 746D5F69 		.ascii	"tm_isdst\000"
 4662      73647374 
 4662      00
 4663              	.LASF84:
 4664 039d 6D6F6465 		.ascii	"modem_info\000"
 4664      6D5F696E 
 4664      666F00
 4665              	.LASF87:
 4666 03a8 65705F68 		.ascii	"ep_host\000"
 4666      6F737400 
 4667              	.LASF14:
 4668 03b0 696E7438 		.ascii	"int8\000"
 4668      00
 4669              	.LASF94:
 4670 03b5 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 4670      576F726B 
 4670      576F726B 
 4670      576F726B 
 4670      576F726B 
 4671              	.LASF114:
 4672 03ce 635F6461 		.ascii	"c_data_count_desired\000"
 4672      74615F63 
 4672      6F756E74 
 4672      5F646573 
 4672      69726564 
 4673              	.LASF109:
 4674 03e3 745F7364 		.ascii	"t_sd_card\000"
 4674      5F636172 
 4674      6400
 4675              	.LASF2:
 4676 03ed 73686F72 		.ascii	"short int\000"
 4676      7420696E 
 4676      7400
 4677              	.LASF144:
 4678 03f7 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 4678      6D5F7374 
 4678      6172745F 
 4678      74696D65 
 4678      5F737461 
 4679              	.LASF86:
 4680 040e 7379735F 		.ascii	"sys_info_t\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 103


 4680      696E666F 
 4680      5F7400
 4681              	.LASF78:
 4682 0419 75706461 		.ascii	"updatable_parameters_t\000"
 4682      7461626C 
 4682      655F7061 
 4682      72616D65 
 4682      74657273 
 4683              	.LASF96:
 4684 0430 616C6172 		.ascii	"alarmType\000"
 4684      6D547970 
 4684      6500
 4685              	.LASF140:
 4686 043a 64617461 		.ascii	"dataPointsInStack\000"
 4686      506F696E 
 4686      7473496E 
 4686      53746163 
 4686      6B00
 4687              	.LASF49:
 4688 044c 746D5F6D 		.ascii	"tm_min\000"
 4688      696E00
 4689              	.LASF135:
 4690 0453 726F7574 		.ascii	"route\000"
 4690      6500
 4691              	.LASF97:
 4692 0459 616C6172 		.ascii	"alarmToBeUpdated\000"
 4692      6D546F42 
 4692      65557064 
 4692      61746564 
 4692      00
 4693              	.LASF21:
 4694 046a 73697A65 		.ascii	"sizetype\000"
 4694      74797065 
 4694      00
 4695              	.LASF55:
 4696 0473 746D5F79 		.ascii	"tm_yday\000"
 4696      64617900 
 4697              	.LASF89:
 4698 047b 7379735F 		.ascii	"sys_settings_t\000"
 4698      73657474 
 4698      696E6773 
 4698      5F7400
 4699              	.LASF131:
 4700 048a 6C6F6361 		.ascii	"localTime\000"
 4700      6C54696D 
 4700      6500
 4701              	.LASF156:
 4702 0494 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 4702      546F5379 
 4702      636E5265 
 4702      6D6F7465 
 4702      50617261 
 4703              	.LASF58:
 4704 04ab 74696D65 		.ascii	"timeStamp\000"
 4704      5374616D 
 4704      7000
 4705              	.LASF28:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 104


 4706 04b5 5254435F 		.ascii	"RTC_TIME_DATE\000"
 4706      54494D45 
 4706      5F444154 
 4706      4500
 4707              	.LASF146:
 4708 04c3 75706461 		.ascii	"updatable_parameters\000"
 4708      7461626C 
 4708      655F7061 
 4708      72616D65 
 4708      74657273 
 4709              	.LASF101:
 4710 04d8 43726561 		.ascii	"CreateAlarm\000"
 4710      7465416C 
 4710      61726D00 
 4711              	.LASF121:
 4712 04e4 7061636B 		.ascii	"packet\000"
 4712      657400
 4713              	.LASF111:
 4714 04eb 735F7273 		.ascii	"s_rsrp\000"
 4714      727000
 4715              	.LASF43:
 4716 04f2 766F6C74 		.ascii	"voltage_pressure\000"
 4716      6167655F 
 4716      70726573 
 4716      73757265 
 4716      00
 4717              	.LASF147:
 4718 0503 68747470 		.ascii	"http_request\000"
 4718      5F726571 
 4718      75657374 
 4718      00
 4719              	.LASF17:
 4720 0510 666C6F61 		.ascii	"float\000"
 4720      7400
 4721              	.LASF125:
 4722 0516 636F6E66 		.ascii	"configureRemoteParams\000"
 4722      69677572 
 4722      6552656D 
 4722      6F746550 
 4722      6172616D 
 4723              	.LASF157:
 4724 052c 44617461 		.ascii	"Data_fileName\000"
 4724      5F66696C 
 4724      654E616D 
 4724      6500
 4725              	.LASF93:
 4726 053a 6D6F6465 		.ascii	"modem_status\000"
 4726      6D5F7374 
 4726      61747573 
 4726      00
 4727              	.LASF29:
 4728 0547 74657374 		.ascii	"test_name\000"
 4728      5F6E616D 
 4728      6500
 4729              	.LASF27:
 4730 0551 59656172 		.ascii	"Year\000"
 4730      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 105


 4731              	.LASF77:
 4732 0556 5F426F6F 		.ascii	"_Bool\000"
 4732      6C00
 4733              	.LASF10:
 4734 055c 696E7433 		.ascii	"int32_t\000"
 4734      325F7400 
 4735              	.LASF1:
 4736 0564 756E7369 		.ascii	"unsigned char\000"
 4736      676E6564 
 4736      20636861 
 4736      7200
 4737              	.LASF151:
 4738 0572 73797374 		.ascii	"system_settings\000"
 4738      656D5F73 
 4738      65747469 
 4738      6E677300 
 4739              	.LASF68:
 4740 0582 72737270 		.ascii	"rsrp\000"
 4740      00
 4741              	.LASF67:
 4742 0587 72737271 		.ascii	"rsrq\000"
 4742      00
 4743              	.LASF98:
 4744 058c 52657365 		.ascii	"ResetAlarm\000"
 4744      74416C61 
 4744      726D00
 4745              	.LASF124:
 4746 0597 735F7365 		.ascii	"s_send_time\000"
 4746      6E645F74 
 4746      696D6500 
 4747              	.LASF75:
 4748 05a3 73796E63 		.ascii	"sync_time\000"
 4748      5F74696D 
 4748      6500
 4749              	.LASF46:
 4750 05ad 70726573 		.ascii	"pressure_depth\000"
 4750      73757265 
 4750      5F646570 
 4750      746800
 4751              	.LASF65:
 4752 05bc 72736370 		.ascii	"rscp\000"
 4752      00
 4753              	.LASF23:
 4754 05c1 4461794F 		.ascii	"DayOfWeek\000"
 4754      66576565 
 4754      6B00
 4755              	.LASF32:
 4756 05cb 74657374 		.ascii	"test_t\000"
 4756      5F7400
 4757              	.LASF150:
 4758 05d2 73797374 		.ascii	"system_info\000"
 4758      656D5F69 
 4758      6E666F00 
 4759              	.LASF62:
 4760 05de 696D6569 		.ascii	"imei\000"
 4760      00
 4761              	.LASF31:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 106


 4762 05e3 72656173 		.ascii	"reason\000"
 4762      6F6E00
 4763              	.LASF99:
 4764 05ea 616C6172 		.ascii	"alarmToBeReset\000"
 4764      6D546F42 
 4764      65526573 
 4764      657400
 4765              	.LASF104:
 4766 05f9 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 4766      6B697479 
 4766      43686563 
 4766      6B596F75 
 4766      7273656C 
 4767              	.LASF119:
 4768 0625 64617461 		.ascii	"data_count_sent\000"
 4768      5F636F75 
 4768      6E745F73 
 4768      656E7400 
 4769              	.LASF71:
 4770 0635 6D6F6465 		.ascii	"modem_stats_t\000"
 4770      6D5F7374 
 4770      6174735F 
 4770      7400
 4771              	.LASF45:
 4772 0643 70726573 		.ascii	"pressure_current\000"
 4772      73757265 
 4772      5F637572 
 4772      72656E74 
 4772      00
 4773              	.LASF33:
 4774 0654 76616C69 		.ascii	"valid\000"
 4774      6400
 4775              	.LASF54:
 4776 065a 746D5F77 		.ascii	"tm_wday\000"
 4776      64617900 
 4777              	.LASF20:
 4778 0662 6C6F6E67 		.ascii	"long double\000"
 4778      20646F75 
 4778      626C6500 
 4779              	.LASF116:
 4780 066e 6368756E 		.ascii	"chunk\000"
 4780      6B00
 4781              	.LASF127:
 4782 0674 635F7469 		.ascii	"c_timeStamp\000"
 4782      6D655374 
 4782      616D7000 
 4783              	.LASF19:
 4784 0680 63686172 		.ascii	"char\000"
 4784      00
 4785              	.LASF39:
 4786 0685 736F6E74 		.ascii	"sontek_t\000"
 4786      656B5F74 
 4786      00
 4787              	.LASF145:
 4788 068e 6D6F6465 		.ascii	"modem_stats\000"
 4788      6D5F7374 
 4788      61747300 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 107


 4789              	.LASF149:
 4790 069a 68747470 		.ascii	"http_route\000"
 4790      5F726F75 
 4790      746500
 4791              	.LASF115:
 4792 06a5 706F7274 		.ascii	"portConfig\000"
 4792      436F6E66 
 4792      696700
 4793              	.LASF9:
 4794 06b0 5F5F696E 		.ascii	"__int32_t\000"
 4794      7433325F 
 4794      7400
 4795              	.LASF90:
 4796 06ba 756E6971 		.ascii	"uniqueId\000"
 4796      75654964 
 4796      00
 4797              	.LASF161:
 4798 06c3 57616B65 		.ascii	"Wakeup_ISR\000"
 4798      75705F49 
 4798      535200
 4799              	.LASF162:
 4800 06ce 4C617942 		.ascii	"LayBack\000"
 4800      61636B00 
 4801              	.LASF105:
 4802 06d6 6D5F736F 		.ascii	"m_sontek\000"
 4802      6E74656B 
 4802      00
 4803              	.LASF60:
 4804 06df 73696D5F 		.ascii	"sim_id\000"
 4804      696400
 4805              	.LASF51:
 4806 06e6 746D5F6D 		.ascii	"tm_mday\000"
 4806      64617900 
 4807              	.LASF102:
 4808 06ee 6E657741 		.ascii	"newAlarm\000"
 4808      6C61726D 
 4808      00
 4809              	.LASF48:
 4810 06f7 746D5F73 		.ascii	"tm_sec\000"
 4810      656300
 4811              	.LASF129:
 4812 06fe 6D5F7072 		.ascii	"m_pressure\000"
 4812      65737375 
 4812      726500
 4813              	.LASF30:
 4814 0709 73746174 		.ascii	"status\000"
 4814      757300
 4815              	.LASF141:
 4816 0710 64617461 		.ascii	"dataPointsInStackDesired\000"
 4816      506F696E 
 4816      7473496E 
 4816      53746163 
 4816      6B446573 
 4817              	.LASF108:
 4818 0729 745F766F 		.ascii	"t_voltages\000"
 4818      6C746167 
 4818      657300
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 108


 4819              	.LASF159:
 4820 0734 6E6F746F 		.ascii	"notoriOS.c\000"
 4820      72694F53 
 4820      2E6300
 4821              	.LASF148:
 4822 073f 68747470 		.ascii	"http_body\000"
 4822      5F626F64 
 4822      7900
 4823              	.LASF15:
 4824 0749 696E7431 		.ascii	"int16\000"
 4824      3600
 4825              	.LASF81:
 4826 074f 636F756E 		.ascii	"countDownType\000"
 4826      74446F77 
 4826      6E547970 
 4826      6500
 4827              	.LASF80:
 4828 075d 63757272 		.ascii	"currentCountDownValue\000"
 4828      656E7443 
 4828      6F756E74 
 4828      446F776E 
 4828      56616C75 
 4829              	.LASF73:
 4830 0773 73696D5F 		.ascii	"sim_type\000"
 4830      74797065 
 4830      00
 4831              	.LASF91:
 4832 077c 635F6865 		.ascii	"c_hey\000"
 4832      7900
 4833              	.LASF25:
 4834 0782 4461794F 		.ascii	"DayOfYear\000"
 4834      66596561 
 4834      7200
 4835              	.LASF47:
 4836 078c 70726573 		.ascii	"pressure_t\000"
 4836      73757265 
 4836      5F7400
 4837              	.LASF100:
 4838 0797 416C6172 		.ascii	"AlarmReady\000"
 4838      6D526561 
 4838      647900
 4839              	.LASF103:
 4840 07a2 52656164 		.ascii	"ReadyOrNot\000"
 4840      794F724E 
 4840      6F7400
 4841              	.LASF163:
 4842 07ad 6D61696E 		.ascii	"main\000"
 4842      00
 4843              	.LASF85:
 4844 07b2 63686970 		.ascii	"chip_uniqueId\000"
 4844      5F756E69 
 4844      71756549 
 4844      6400
 4845              	.LASF74:
 4846 07c0 6D656173 		.ascii	"measure_time\000"
 4846      7572655F 
 4846      74696D65 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\cci05hmT.s 			page 109


 4846      00
 4847              	.LASF18:
 4848 07cd 646F7562 		.ascii	"double\000"
 4848      6C6500
 4849              	.LASF44:
 4850 07d4 766F6C74 		.ascii	"voltage_t\000"
 4850      6167655F 
 4850      7400
 4851              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
