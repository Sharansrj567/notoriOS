ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"notoriOS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer_overflow,1,1
  20              		.comm	dataPointsInStack,2,2
  21              		.comm	dataPointsInStackDesired,2,2
  22              		.comm	data,6600,4
  23              		.comm	modem_state,1,1
  24              		.comm	modem_start_time_stamp,4,4
  25              		.comm	modem_info,60,4
  26              		.comm	modem_stats,32,4
  27              		.comm	updatable_parameters,5,4
  28              		.syntax unified
  29              		.global _printf_float
  30              		.thumb
  31              		.syntax unified
  32              		.comm	http_request,10000,4
  33              		.comm	http_body,10000,4
  34              		.comm	http_route,200,4
  35              		.comm	system_info,28,4
  36              		.comm	system_settings,104,4
  37              		.comm	alarmMeasure,6,4
  38              		.comm	timeToMeasure,1,1
  39              		.comm	alarmSync,6,4
  40              		.comm	timeToSync,1,1
  41              		.comm	timeToSycnRemoteParams,1,1
  42              		.comm	hey,1,1
  43              		.section	.text.Wakeup_ISR,"ax",%progbits
  44              		.align	2
  45              		.global	Wakeup_ISR
  46              		.thumb
  47              		.thumb_func
  48              		.type	Wakeup_ISR, %function
  49              	Wakeup_ISR:
  50              	.LFB64:
  51              		.file 1 "notoriOS.c"
   1:notoriOS.c    **** /* ========================================
   2:notoriOS.c    ****  *
   3:notoriOS.c    ****  * OPEN-STORM.ORG
   4:notoriOS.c    ****  * notoriOS
   5:notoriOS.c    ****  * A non-premptive operating system for node.
   6:notoriOS.c    ****  *
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 2


   7:notoriOS.c    ****  * "To all the teachers that told me I'd never amount to nothin"
   8:notoriOS.c    ****  *      -Notorious BIG (1994)
   9:notoriOS.c    ****  *
  10:notoriOS.c    ****  * ========================================
  11:notoriOS.c    **** */
  12:notoriOS.c    **** 
  13:notoriOS.c    **** #include "notoriOS.h"
  14:notoriOS.c    **** 
  15:notoriOS.c    **** 
  16:notoriOS.c    **** // This function must always be called (when the Sleep Timer's interrupt
  17:notoriOS.c    **** // is disabled or enabled) after wake up to clear the ctw_int status bit.
  18:notoriOS.c    **** // It is required to call SleepTimer_GetStatus() within 1 ms (1 clock cycle
  19:notoriOS.c    **** // of the ILO) after CTW event occurred.
  20:notoriOS.c    **** CY_ISR(Wakeup_ISR) {
  52              		.loc 1 20 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  21:notoriOS.c    ****     // Returns the state of the Sleep Timer's status register, and clears the pending interrupt sta
  22:notoriOS.c    ****     SleepTimer_GetStatus();
  62              		.loc 1 22 0
  63 0004 FFF7FEFF 		bl	SleepTimer_GetStatus
  23:notoriOS.c    **** }
  64              		.loc 1 23 0
  65 0008 00BF     		nop
  66 000a 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE64:
  69              		.size	Wakeup_ISR, .-Wakeup_ISR
  70              		.global	Data_fileName
  71              		.data
  72              		.align	2
  73              		.type	Data_fileName, %object
  74              		.size	Data_fileName, 30
  75              	Data_fileName:
  76 0000 64617461 		.ascii	"data.txt\000"
  76      2E747874 
  76      00
  77 0009 00000000 		.space	21
  77      00000000 
  77      00000000 
  77      00000000 
  77      00000000 
  78              		.comm	try_counter,1,1
  79              		.section	.rodata
  80              		.align	2
  81              	.LC0:
  82 0000 25582D25 		.ascii	"%X-%X\000"
  82      5800
  83 0006 0000     		.align	2
  84              	.LC1:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 3


  85 0008 6563322D 		.ascii	"ec2-13-59-131-167.us-east-2.compute.amazonaws.com\000"
  85      31332D35 
  85      392D3133 
  85      312D3136 
  85      372E7573 
  86 003a 0000     		.align	2
  87              	.LC2:
  88 003c 256400   		.ascii	"%d\000"
  89 003f 00       		.align	2
  90              	.LC3:
  91 0040 7265626F 		.ascii	"reboot\000"
  91      6F7400
  92              		.section	.text.ReadyOrNot,"ax",%progbits
  93              		.align	2
  94              		.global	ReadyOrNot
  95              		.thumb
  96              		.thumb_func
  97              		.type	ReadyOrNot, %function
  98              	ReadyOrNot:
  99              	.LFB65:
  24:notoriOS.c    **** 
  25:notoriOS.c    **** 
  26:notoriOS.c    **** uint8 syncData();               // Syncs data with server 
  27:notoriOS.c    **** uint8 configureRemoteParams();  // Syncs RTC with cell network and obtains meta-DB params
  28:notoriOS.c    **** uint8 makeMeasurements();       // Takes sensor measurements
  29:notoriOS.c    **** char  Data_fileName[30] = "data.txt";
  30:notoriOS.c    **** uint8 try_counter;
  31:notoriOS.c    **** 
  32:notoriOS.c    **** 
  33:notoriOS.c    **** // ==============================================
  34:notoriOS.c    **** // Ready or not, here I come, you can't hide
  35:notoriOS.c    **** // Gonna find you and take it slowly
  36:notoriOS.c    **** //      - The Fugees (1996)
  37:notoriOS.c    **** //
  38:notoriOS.c    **** // Initialize and critical hardware or routines 
  39:notoriOS.c    **** // ==============================================
  40:notoriOS.c    **** void ReadyOrNot()
  41:notoriOS.c    **** {
 100              		.loc 1 41 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 32
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 B0B5     		push	{r4, r5, r7, lr}
 105              		.cfi_def_cfa_offset 16
 106              		.cfi_offset 4, -16
 107              		.cfi_offset 5, -12
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 8AB0     		sub	sp, sp, #40
 111              		.cfi_def_cfa_offset 56
 112 0004 02AF     		add	r7, sp, #8
 113              		.cfi_def_cfa 7, 48
  42:notoriOS.c    ****     
  43:notoriOS.c    ****     isr_SleepTimer_StartEx(Wakeup_ISR); // Start Sleep ISR
 114              		.loc 1 43 0
 115 0006 3948     		ldr	r0, .L3
 116 0008 FFF7FEFF 		bl	isr_SleepTimer_StartEx
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 4


  44:notoriOS.c    ****     SleepTimer_Start();                 // Start SleepTimer Component
 117              		.loc 1 44 0
 118 000c FFF7FEFF 		bl	SleepTimer_Start
  45:notoriOS.c    ****     
  46:notoriOS.c    ****     RTC_WriteIntervalMask(0b11111111);  // Configures what interval handlers will be called from th
 119              		.loc 1 46 0
 120 0010 FF20     		movs	r0, #255
 121 0012 FFF7FEFF 		bl	RTC_WriteIntervalMask
  47:notoriOS.c    ****     RTC_Start();                        // Enables the RTC component
 122              		.loc 1 47 0
 123 0016 FFF7FEFF 		bl	RTC_Start
  48:notoriOS.c    ****     debug_start();                      // Start UART debug
 124              		.loc 1 48 0
 125 001a FFF7FEFF 		bl	debug_start
  49:notoriOS.c    ****     
  50:notoriOS.c    ****     
  51:notoriOS.c    ****     
  52:notoriOS.c    ****     modem_initialize();                 // Initialize the modem
 126              		.loc 1 52 0
 127 001e FFF7FEFF 		bl	modem_initialize
  53:notoriOS.c    ****     
  54:notoriOS.c    ****     updatable_parameters_initialize();  // Initialize sampling, measurement, and debug frequencies 
 128              		.loc 1 54 0
 129 0022 FFF7FEFF 		bl	updatable_parameters_initialize
  55:notoriOS.c    ****    
  56:notoriOS.c    ****     
  57:notoriOS.c    ****     // Collect system info and store in struct (modem ID, silicon ID, etc)
  58:notoriOS.c    ****       /* An array of char elements for the resulting string to be stored */
  59:notoriOS.c    ****     
  60:notoriOS.c    ****     
  61:notoriOS.c    ****     // Get unique ID of PSOC chip, this can be concatenated with the MODEM IDs to generate a unique
  62:notoriOS.c    ****     uint32 uniqueId[2];
  63:notoriOS.c    ****     // Returns the 64-bit unique ID of the device.
  64:notoriOS.c    ****     CyGetUniqueId(uniqueId); 
 130              		.loc 1 64 0
 131 0026 07F11403 		add	r3, r7, #20
 132 002a 1846     		mov	r0, r3
 133 002c FFF7FEFF 		bl	CyGetUniqueId
  65:notoriOS.c    ****     snprintf(system_info.chip_uniqueId,sizeof(system_info.chip_uniqueId),"%X-%X",(unsigned int)uniq
 134              		.loc 1 65 0
 135 0030 7A69     		ldr	r2, [r7, #20]
 136 0032 BB69     		ldr	r3, [r7, #24]
 137 0034 0093     		str	r3, [sp]
 138 0036 1346     		mov	r3, r2
 139 0038 2D4A     		ldr	r2, .L3+4
 140 003a 1821     		movs	r1, #24
 141 003c 2D48     		ldr	r0, .L3+8
 142 003e FFF7FEFF 		bl	snprintf
  66:notoriOS.c    ****     // The modem will track/popualte it's own IDs, so just point to them for now
  67:notoriOS.c    ****     system_info.modem_info = &modem_info;
 143              		.loc 1 67 0
 144 0042 2D4B     		ldr	r3, .L3+12
 145 0044 2D4A     		ldr	r2, .L3+16
 146 0046 1A60     		str	r2, [r3]
  68:notoriOS.c    ****     
  69:notoriOS.c    ****     // Configure server endpoints -- these should obviosuly be provided  remotely by the meta data-
  70:notoriOS.c    ****     snprintf(system_settings.ep_host,sizeof(system_settings.ep_host),"%s","ec2-13-59-131-167.us-eas
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 5


 147              		.loc 1 70 0
 148 0048 2D4A     		ldr	r2, .L3+20
 149 004a 2E4B     		ldr	r3, .L3+24
 150 004c 1446     		mov	r4, r2
 151 004e 1D46     		mov	r5, r3
 152 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 153 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 154 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 155 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 156 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 157 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 158 005c 2B68     		ldr	r3, [r5]
 159 005e 2380     		strh	r3, [r4]	@ movhi
  71:notoriOS.c    ****    
  72:notoriOS.c    ****     system_settings.ep_port = 5000;
 160              		.loc 1 72 0
 161 0060 274B     		ldr	r3, .L3+20
 162 0062 41F28832 		movw	r2, #5000
 163 0066 5A66     		str	r2, [r3, #100]
  73:notoriOS.c    ****     // Don't need the following for new nodes
  74:notoriOS.c    ****     //snprintf(system_settings.ep_user,sizeof(system_settings.ep_user),"%s","generic_node");
  75:notoriOS.c    ****     //snprintf(system_settings.ep_pswd,sizeof(system_settings.ep_pswd),"%s","MakeFloodsCurrents");
  76:notoriOS.c    ****     //snprintf(system_settings.ep_database,sizeof(system_settings.ep_database),"%s","ARB");
  77:notoriOS.c    ****     //snprintf(system_settings.node_id,sizeof(system_settings.node_id),"%s","GGB000");
  78:notoriOS.c    ****         
  79:notoriOS.c    ****     
  80:notoriOS.c    ****     // Create a continuous alarm called alarmMeasure that triggers every 10 min (default) to take m
  81:notoriOS.c    ****     alarmMeasure = CreateAlarm(updatable_parameters.measure_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTI
 164              		.loc 1 81 0
 165 0068 274B     		ldr	r3, .L3+28
 166 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 167 006c 99B2     		uxth	r1, r3
 168 006e 274C     		ldr	r4, .L3+32
 169 0070 3846     		mov	r0, r7
 170 0072 0723     		movs	r3, #7
 171 0074 0122     		movs	r2, #1
 172 0076 FFF7FEFF 		bl	CreateAlarm
 173 007a 2246     		mov	r2, r4
 174 007c 3B46     		mov	r3, r7
 175 007e 1968     		ldr	r1, [r3]	@ unaligned
 176 0080 1160     		str	r1, [r2]	@ unaligned
 177 0082 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 178 0084 9380     		strh	r3, [r2, #4]	@ unaligned
  82:notoriOS.c    ****     timeToMeasure = 1u;
 179              		.loc 1 82 0
 180 0086 224B     		ldr	r3, .L3+36
 181 0088 0122     		movs	r2, #1
 182 008a 1A70     		strb	r2, [r3]
  83:notoriOS.c    ****     // Create a continuous alarm called alarmSync that triggers every 60 min (default) to sync the 
  84:notoriOS.c    ****     alarmSync = CreateAlarm(updatable_parameters.sync_time,ALARM_TYPE_MINUTE,ALARM_TYPE_CONTINUOUS)
 183              		.loc 1 84 0
 184 008c 1E4B     		ldr	r3, .L3+28
 185 008e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 186 0090 99B2     		uxth	r1, r3
 187 0092 204C     		ldr	r4, .L3+40
 188 0094 3846     		mov	r0, r7
 189 0096 0723     		movs	r3, #7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 6


 190 0098 0122     		movs	r2, #1
 191 009a FFF7FEFF 		bl	CreateAlarm
 192 009e 2246     		mov	r2, r4
 193 00a0 3B46     		mov	r3, r7
 194 00a2 1968     		ldr	r1, [r3]	@ unaligned
 195 00a4 1160     		str	r1, [r2]	@ unaligned
 196 00a6 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 197 00a8 9380     		strh	r3, [r2, #4]	@ unaligned
  85:notoriOS.c    ****     timeToSync = 1u;
 198              		.loc 1 85 0
 199 00aa 1B4B     		ldr	r3, .L3+44
 200 00ac 0122     		movs	r2, #1
 201 00ae 1A70     		strb	r2, [r3]
  86:notoriOS.c    ****     
  87:notoriOS.c    ****     timeToSycnRemoteParams = 0u;//set to 1 if you want to get modem IDs and time -- no need to do t
 202              		.loc 1 87 0
 203 00b0 1A4B     		ldr	r3, .L3+48
 204 00b2 0022     		movs	r2, #0
 205 00b4 1A70     		strb	r2, [r3]
  88:notoriOS.c    ****     
  89:notoriOS.c    ****     // send hey to server saying the node rebooted
  90:notoriOS.c    ****     hey = 1u;
 206              		.loc 1 90 0
 207 00b6 1A4B     		ldr	r3, .L3+52
 208 00b8 0122     		movs	r2, #1
 209 00ba 1A70     		strb	r2, [r3]
  91:notoriOS.c    ****     char c_hey[10];
  92:notoriOS.c    ****     snprintf(c_hey,sizeof(c_hey),"%d",hey);
 210              		.loc 1 92 0
 211 00bc 184B     		ldr	r3, .L3+52
 212 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 213 00c0 07F10800 		add	r0, r7, #8
 214 00c4 174A     		ldr	r2, .L3+56
 215 00c6 0A21     		movs	r1, #10
 216 00c8 FFF7FEFF 		bl	snprintf
  93:notoriOS.c    ****     pushData("reboot",c_hey,getTimeStamp());
 217              		.loc 1 93 0
 218 00cc FFF7FEFF 		bl	getTimeStamp
 219 00d0 0246     		mov	r2, r0
 220 00d2 07F10803 		add	r3, r7, #8
 221 00d6 1946     		mov	r1, r3
 222 00d8 1348     		ldr	r0, .L3+60
 223 00da FFF7FEFF 		bl	pushData
  94:notoriOS.c    ****     
  95:notoriOS.c    ****     // Initialize the try counter to 0
  96:notoriOS.c    ****     uint8 try_counter = 0;
 224              		.loc 1 96 0
 225 00de 0023     		movs	r3, #0
 226 00e0 FB77     		strb	r3, [r7, #31]
  97:notoriOS.c    **** }
 227              		.loc 1 97 0
 228 00e2 00BF     		nop
 229 00e4 2037     		adds	r7, r7, #32
 230              		.cfi_def_cfa_offset 16
 231 00e6 BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 7


 234 00e8 B0BD     		pop	{r4, r5, r7, pc}
 235              	.L4:
 236 00ea 00BF     		.align	2
 237              	.L3:
 238 00ec 00000000 		.word	Wakeup_ISR
 239 00f0 00000000 		.word	.LC0
 240 00f4 04000000 		.word	system_info+4
 241 00f8 00000000 		.word	system_info
 242 00fc 00000000 		.word	modem_info
 243 0100 00000000 		.word	system_settings
 244 0104 08000000 		.word	.LC1
 245 0108 00000000 		.word	updatable_parameters
 246 010c 00000000 		.word	alarmMeasure
 247 0110 00000000 		.word	timeToMeasure
 248 0114 00000000 		.word	alarmSync
 249 0118 00000000 		.word	timeToSync
 250 011c 00000000 		.word	timeToSycnRemoteParams
 251 0120 00000000 		.word	hey
 252 0124 3C000000 		.word	.LC2
 253 0128 40000000 		.word	.LC3
 254              		.cfi_endproc
 255              	.LFE65:
 256              		.size	ReadyOrNot, .-ReadyOrNot
 257              		.section	.text.WorkWorkWorkWorkWorkWork,"ax",%progbits
 258              		.align	2
 259              		.global	WorkWorkWorkWorkWorkWork
 260              		.thumb
 261              		.thumb_func
 262              		.type	WorkWorkWorkWorkWorkWork, %function
 263              	WorkWorkWorkWorkWorkWork:
 264              	.LFB66:
  98:notoriOS.c    **** 
  99:notoriOS.c    **** 
 100:notoriOS.c    **** // ==============================================
 101:notoriOS.c    **** // You see me I be work, work, work, work, work, work 
 102:notoriOS.c    **** //      - Rhiana, feat Drake (2016)
 103:notoriOS.c    **** //
 104:notoriOS.c    **** // Prorcesses core tasks
 105:notoriOS.c    **** // ==============================================
 106:notoriOS.c    **** int WorkWorkWorkWorkWorkWork()
 107:notoriOS.c    **** {
 265              		.loc 1 107 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269 0000 80B5     		push	{r7, lr}
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 82B0     		sub	sp, sp, #8
 274              		.cfi_def_cfa_offset 16
 275 0004 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
 108:notoriOS.c    ****     
 109:notoriOS.c    ****     // The priority of these tasks is determined by the if statements
 110:notoriOS.c    ****     // For example, taking measurements should always precede data transmisison, even if both fire
 111:notoriOS.c    ****     // Getting meta-DB info and system configs precedes all
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 8


 112:notoriOS.c    ****     // That said, the modem is always qeried to check if it needs anything
 113:notoriOS.c    ****     
 114:notoriOS.c    ****     // Checks to see if the timetoSyncRemoteParms flag is set
 115:notoriOS.c    ****     if(timeToSycnRemoteParams){
 277              		.loc 1 115 0
 278 0006 144B     		ldr	r3, .L10
 279 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 000a 002B     		cmp	r3, #0
 281 000c 06D0     		beq	.L6
 116:notoriOS.c    ****         timeToSycnRemoteParams = configureRemoteParams(); // Will return 0 when done sending data
 282              		.loc 1 116 0
 283 000e FFF7FEFF 		bl	configureRemoteParams
 284 0012 0346     		mov	r3, r0
 285 0014 1A46     		mov	r2, r3
 286 0016 104B     		ldr	r3, .L10
 287 0018 1A70     		strb	r2, [r3]
 288 001a 14E0     		b	.L7
 289              	.L6:
 117:notoriOS.c    ****     }
 118:notoriOS.c    ****     // Checks to see if the timetoMeasure flag is set
 119:notoriOS.c    ****     else if(timeToMeasure){
 290              		.loc 1 119 0
 291 001c 0F4B     		ldr	r3, .L10+4
 292 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 293 0020 002B     		cmp	r3, #0
 294 0022 06D0     		beq	.L8
 120:notoriOS.c    ****         //(int i=0; i<=30; i++){
 121:notoriOS.c    ****         timeToMeasure = makeMeasurements(); // Will return 0 when done sending data
 295              		.loc 1 121 0
 296 0024 FFF7FEFF 		bl	makeMeasurements
 297 0028 0346     		mov	r3, r0
 298 002a 1A46     		mov	r2, r3
 299 002c 0B4B     		ldr	r3, .L10+4
 300 002e 1A70     		strb	r2, [r3]
 301 0030 09E0     		b	.L7
 302              	.L8:
 122:notoriOS.c    ****         //CyDelay(1000u);
 123:notoriOS.c    ****         //}
 124:notoriOS.c    ****     }else if(timeToSync){
 303              		.loc 1 124 0
 304 0032 0B4B     		ldr	r3, .L10+8
 305 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 0036 002B     		cmp	r3, #0
 307 0038 05D0     		beq	.L7
 125:notoriOS.c    ****             timeToSync = syncData();
 308              		.loc 1 125 0
 309 003a FFF7FEFF 		bl	syncData
 310 003e 0346     		mov	r3, r0
 311 0040 1A46     		mov	r2, r3
 312 0042 074B     		ldr	r3, .L10+8
 313 0044 1A70     		strb	r2, [r3]
 314              	.L7:
 126:notoriOS.c    ****     }
 127:notoriOS.c    ****     // Print the countdown to the next alarm
 128:notoriOS.c    ****     //printNotif(NOTIF_TYPE_EVENT,"Measure CNT %d, Sync CNT %d, Data Wheel CNT %d",alarmMeasure.cur
 129:notoriOS.c    ****     
 130:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 9


 131:notoriOS.c    ****     // Check modem state machine on every loop
 132:notoriOS.c    ****     uint8 modem_status = modem_process_tasks();
 315              		.loc 1 132 0
 316 0046 FFF7FEFF 		bl	modem_process_tasks
 317 004a 0346     		mov	r3, r0
 318 004c FB71     		strb	r3, [r7, #7]
 133:notoriOS.c    **** 
 134:notoriOS.c    ****     return 0u +  modem_status;  
 319              		.loc 1 134 0
 320 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 135:notoriOS.c    **** }
 321              		.loc 1 135 0
 322 0050 1846     		mov	r0, r3
 323 0052 0837     		adds	r7, r7, #8
 324              		.cfi_def_cfa_offset 8
 325 0054 BD46     		mov	sp, r7
 326              		.cfi_def_cfa_register 13
 327              		@ sp needed
 328 0056 80BD     		pop	{r7, pc}
 329              	.L11:
 330              		.align	2
 331              	.L10:
 332 0058 00000000 		.word	timeToSycnRemoteParams
 333 005c 00000000 		.word	timeToMeasure
 334 0060 00000000 		.word	timeToSync
 335              		.cfi_endproc
 336              	.LFE66:
 337              		.size	WorkWorkWorkWorkWorkWork, .-WorkWorkWorkWorkWorkWork
 338              		.section	.text.LayBack,"ax",%progbits
 339              		.align	2
 340              		.global	LayBack
 341              		.thumb
 342              		.thumb_func
 343              		.type	LayBack, %function
 344              	LayBack:
 345              	.LFB67:
 136:notoriOS.c    **** 
 137:notoriOS.c    **** 
 138:notoriOS.c    **** 
 139:notoriOS.c    **** 
 140:notoriOS.c    **** 
 141:notoriOS.c    **** 
 142:notoriOS.c    **** // ==============================================
 143:notoriOS.c    **** // sippin on gin and juice, Laid back (with my mind on my money and my money on my mind)
 144:notoriOS.c    **** //      - Snoop Dogg (1993)
 145:notoriOS.c    **** //
 146:notoriOS.c    **** // Put all hardware to sleep and go into low power mode to conserve Amps
 147:notoriOS.c    **** // ==============================================
 148:notoriOS.c    **** void LayBack()
 149:notoriOS.c    **** {
 346              		.loc 1 149 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 10


 353              		.cfi_offset 14, -4
 354 0002 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 150:notoriOS.c    ****   
 151:notoriOS.c    ****     modem_sleep();  // Prepares system clocks for the Sleep mode
 356              		.loc 1 151 0
 357 0004 FFF7FEFF 		bl	modem_sleep
 152:notoriOS.c    ****     
 153:notoriOS.c    ****     // Important, call this last because we want to sleep uart before shutting down
 154:notoriOS.c    ****     debug_sleep();  // Function to sleep UART debug
 358              		.loc 1 154 0
 359 0008 FFF7FEFF 		bl	debug_sleep
 155:notoriOS.c    ****     
 156:notoriOS.c    ****     CyPmSaveClocks(); // Called to prep system to sleep/hiberanate. Saves all states of clocking sy
 360              		.loc 1 156 0
 361 000c FFF7FEFF 		bl	CyPmSaveClocks
 157:notoriOS.c    ****     
 158:notoriOS.c    ****     // Switch to the Sleep Mode for the other devices:
 159:notoriOS.c    ****     //  - PM_SLEEP_TIME_NONE: wakeup time is defined by Sleep Timer
 160:notoriOS.c    ****     //  - PM_SLEEP_SRC_CTW :  wakeup on CTW sources is allowed
 161:notoriOS.c    ****     //  - If real-time clock is used, it will also wake the device
 162:notoriOS.c    ****     //can also wake up from a pin intterup (PICU). This is useful with the moderm UART
 163:notoriOS.c    ****     //CyPmHibernate();
 164:notoriOS.c    ****     //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_PICU);
 165:notoriOS.c    **** 
 166:notoriOS.c    ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW & PM_SLEEP_SRC_ONE_PPS); // Puts the part into t
 362              		.loc 1 166 0
 363 0010 4FF40061 		mov	r1, #2048
 364 0014 0020     		movs	r0, #0
 365 0016 FFF7FEFF 		bl	CyPmSleep
 167:notoriOS.c    **** 
 168:notoriOS.c    ****     CyPmRestoreClocks();    // Restore clock configuration.
 366              		.loc 1 168 0
 367 001a FFF7FEFF 		bl	CyPmRestoreClocks
 169:notoriOS.c    **** 
 170:notoriOS.c    ****     debug_wakeup();         // Function to wakeup UART debug.
 368              		.loc 1 170 0
 369 001e FFF7FEFF 		bl	debug_wakeup
 171:notoriOS.c    ****     modem_wakeup();         // Function to wakeup modem.
 370              		.loc 1 171 0
 371 0022 FFF7FEFF 		bl	modem_wakeup
 172:notoriOS.c    **** 
 173:notoriOS.c    **** }
 372              		.loc 1 173 0
 373 0026 00BF     		nop
 374 0028 80BD     		pop	{r7, pc}
 375              		.cfi_endproc
 376              	.LFE67:
 377              		.size	LayBack, .-LayBack
 378 002a 00BF     		.section	.text.AyoItsTime,"ax",%progbits
 379              		.align	2
 380              		.global	AyoItsTime
 381              		.thumb
 382              		.thumb_func
 383              		.type	AyoItsTime, %function
 384              	AyoItsTime:
 385              	.LFB68:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 11


 174:notoriOS.c    **** 
 175:notoriOS.c    **** 
 176:notoriOS.c    **** // ==============================================
 177:notoriOS.c    **** // I never sleep, 'cause sleep is the cousin of death
 178:notoriOS.c    **** //      - NAS (1994)
 179:notoriOS.c    **** //
 180:notoriOS.c    **** // This is the scheduler. It's called from various interrupts and timers,
 181:notoriOS.c    **** // ...in particular from fuctions with in the real-tiem clock interrupts (RTC_INT.c)
 182:notoriOS.c    **** // It will add tasks to the work queue,
 183:notoriOS.c    **** // which will be executed eventually by WorkWorkWorkWorkWorkWork()
 184:notoriOS.c    **** // ==============================================
 185:notoriOS.c    **** void AyoItsTime(uint8 alarmType)
 186:notoriOS.c    **** {
 386              		.loc 1 186 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 8
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 82B0     		sub	sp, sp, #8
 395              		.cfi_def_cfa_offset 16
 396 0004 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
 398 0006 0346     		mov	r3, r0
 399 0008 FB71     		strb	r3, [r7, #7]
 187:notoriOS.c    ****     // Checks if the alarm is up and if so, sets the flag.
 188:notoriOS.c    ****     if(AlarmReady(&alarmMeasure,alarmType))
 400              		.loc 1 188 0
 401 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 402 000c 1946     		mov	r1, r3
 403 000e 0C48     		ldr	r0, .L17
 404 0010 FFF7FEFF 		bl	AlarmReady
 405 0014 0346     		mov	r3, r0
 406 0016 002B     		cmp	r3, #0
 407 0018 02D0     		beq	.L14
 189:notoriOS.c    ****     {
 190:notoriOS.c    ****          // Flag new task as "ready" and pass off to workworkworkworkwork()
 191:notoriOS.c    ****         timeToMeasure = 1u;
 408              		.loc 1 191 0
 409 001a 0A4B     		ldr	r3, .L17+4
 410 001c 0122     		movs	r2, #1
 411 001e 1A70     		strb	r2, [r3]
 412              	.L14:
 192:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Measure Alarm");
 193:notoriOS.c    ****         
 194:notoriOS.c    ****     }
 195:notoriOS.c    ****     if(AlarmReady(&alarmSync,alarmType))
 413              		.loc 1 195 0
 414 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 415 0022 1946     		mov	r1, r3
 416 0024 0848     		ldr	r0, .L17+8
 417 0026 FFF7FEFF 		bl	AlarmReady
 418 002a 0346     		mov	r3, r0
 419 002c 002B     		cmp	r3, #0
 420 002e 02D0     		beq	.L16
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 12


 196:notoriOS.c    ****     {
 197:notoriOS.c    ****         // Create new task and pass off to workworkworkworkwork()
 198:notoriOS.c    ****         timeToSync = 1u;
 421              		.loc 1 198 0
 422 0030 064B     		ldr	r3, .L17+12
 423 0032 0122     		movs	r2, #1
 424 0034 1A70     		strb	r2, [r3]
 425              	.L16:
 199:notoriOS.c    ****          //printNotif(NOTIF_TYPE_EVENT,"Sync Alarm");
 200:notoriOS.c    ****     }
 201:notoriOS.c    ****     
 202:notoriOS.c    **** }
 426              		.loc 1 202 0
 427 0036 00BF     		nop
 428 0038 0837     		adds	r7, r7, #8
 429              		.cfi_def_cfa_offset 8
 430 003a BD46     		mov	sp, r7
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 003c 80BD     		pop	{r7, pc}
 434              	.L18:
 435 003e 00BF     		.align	2
 436              	.L17:
 437 0040 00000000 		.word	alarmMeasure
 438 0044 00000000 		.word	timeToMeasure
 439 0048 00000000 		.word	alarmSync
 440 004c 00000000 		.word	timeToSync
 441              		.cfi_endproc
 442              	.LFE68:
 443              		.size	AyoItsTime, .-AyoItsTime
 444              		.section	.text.AlarmReady,"ax",%progbits
 445              		.align	2
 446              		.global	AlarmReady
 447              		.thumb
 448              		.thumb_func
 449              		.type	AlarmReady, %function
 450              	AlarmReady:
 451              	.LFB69:
 203:notoriOS.c    **** 
 204:notoriOS.c    **** 
 205:notoriOS.c    **** // ==============================================
 206:notoriOS.c    **** // Determines when an alarm is ready to trigger, which will be handeled by another cutions
 207:notoriOS.c    **** // ==============================================
 208:notoriOS.c    **** uint8 AlarmReady(alarm * alarmToBeUpdated, uint8 alarmType)
 209:notoriOS.c    **** {
 452              		.loc 1 209 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 8
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 82B0     		sub	sp, sp, #8
 461              		.cfi_def_cfa_offset 16
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 13


 464 0006 7860     		str	r0, [r7, #4]
 465 0008 0B46     		mov	r3, r1
 466 000a FB70     		strb	r3, [r7, #3]
 210:notoriOS.c    ****     // if the countDownType matches the alarmType
 211:notoriOS.c    ****     if(alarmToBeUpdated->countDownType == alarmType){
 467              		.loc 1 211 0
 468 000c 7B68     		ldr	r3, [r7, #4]
 469 000e 1B79     		ldrb	r3, [r3, #4]
 470 0010 DBB2     		uxtb	r3, r3
 471 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 472 0014 9A42     		cmp	r2, r3
 473 0016 12D1     		bne	.L20
 212:notoriOS.c    ****        
 213:notoriOS.c    ****         // In the Post-decrement old value is first used in a expression and then old value will be
 214:notoriOS.c    ****         // Decrement the count down value by 1
 215:notoriOS.c    ****         alarmToBeUpdated->currentCountDownValue--;
 474              		.loc 1 215 0
 475 0018 7B68     		ldr	r3, [r7, #4]
 476 001a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 477 001c 1BB2     		sxth	r3, r3
 478 001e 9BB2     		uxth	r3, r3
 479 0020 013B     		subs	r3, r3, #1
 480 0022 9BB2     		uxth	r3, r3
 481 0024 1AB2     		sxth	r2, r3
 482 0026 7B68     		ldr	r3, [r7, #4]
 483 0028 5A80     		strh	r2, [r3, #2]	@ movhi
 216:notoriOS.c    ****         // If the current count is 0, then reset the alarm
 217:notoriOS.c    ****         if(alarmToBeUpdated->currentCountDownValue <= 0){
 484              		.loc 1 217 0
 485 002a 7B68     		ldr	r3, [r7, #4]
 486 002c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 487 002e 1BB2     		sxth	r3, r3
 488 0030 002B     		cmp	r3, #0
 489 0032 04DC     		bgt	.L20
 218:notoriOS.c    ****             ResetAlarm(alarmToBeUpdated);
 490              		.loc 1 218 0
 491 0034 7868     		ldr	r0, [r7, #4]
 492 0036 FFF7FEFF 		bl	ResetAlarm
 219:notoriOS.c    ****             return 1u;
 493              		.loc 1 219 0
 494 003a 0123     		movs	r3, #1
 495 003c 00E0     		b	.L21
 496              	.L20:
 220:notoriOS.c    ****         } 
 221:notoriOS.c    ****     }
 222:notoriOS.c    ****     
 223:notoriOS.c    ****     return 0u; // Otherwise return 0
 497              		.loc 1 223 0
 498 003e 0023     		movs	r3, #0
 499              	.L21:
 224:notoriOS.c    **** }
 500              		.loc 1 224 0
 501 0040 1846     		mov	r0, r3
 502 0042 0837     		adds	r7, r7, #8
 503              		.cfi_def_cfa_offset 8
 504 0044 BD46     		mov	sp, r7
 505              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 14


 506              		@ sp needed
 507 0046 80BD     		pop	{r7, pc}
 508              		.cfi_endproc
 509              	.LFE69:
 510              		.size	AlarmReady, .-AlarmReady
 511              		.section	.text.ResetAlarm,"ax",%progbits
 512              		.align	2
 513              		.global	ResetAlarm
 514              		.thumb
 515              		.thumb_func
 516              		.type	ResetAlarm, %function
 517              	ResetAlarm:
 518              	.LFB70:
 225:notoriOS.c    **** 
 226:notoriOS.c    **** // ==============================================
 227:notoriOS.c    **** // Resets an alarm, which will be handeled by other executions
 228:notoriOS.c    **** // ==============================================
 229:notoriOS.c    **** void ResetAlarm(alarm * alarmToBeReset)
 230:notoriOS.c    **** {
 519              		.loc 1 230 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0000 80B4     		push	{r7}
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0002 83B0     		sub	sp, sp, #12
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 231:notoriOS.c    ****     // resets the alarm when the current count down value equals the set alarm count down value
 232:notoriOS.c    ****     alarmToBeReset->currentCountDownValue = alarmToBeReset->countDownValue;
 532              		.loc 1 232 0
 533 0008 7B68     		ldr	r3, [r7, #4]
 534 000a 1B88     		ldrh	r3, [r3]	@ movhi
 535 000c 9BB2     		uxth	r3, r3
 536 000e 1AB2     		sxth	r2, r3
 537 0010 7B68     		ldr	r3, [r7, #4]
 538 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 233:notoriOS.c    **** }
 539              		.loc 1 233 0
 540 0014 00BF     		nop
 541 0016 0C37     		adds	r7, r7, #12
 542              		.cfi_def_cfa_offset 4
 543 0018 BD46     		mov	sp, r7
 544              		.cfi_def_cfa_register 13
 545              		@ sp needed
 546 001a 80BC     		pop	{r7}
 547              		.cfi_restore 7
 548              		.cfi_def_cfa_offset 0
 549 001c 7047     		bx	lr
 550              		.cfi_endproc
 551              	.LFE70:
 552              		.size	ResetAlarm, .-ResetAlarm
 553 001e 00BF     		.section	.text.CreateAlarm,"ax",%progbits
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 15


 554              		.align	2
 555              		.global	CreateAlarm
 556              		.thumb
 557              		.thumb_func
 558              		.type	CreateAlarm, %function
 559              	CreateAlarm:
 560              	.LFB71:
 234:notoriOS.c    **** 
 235:notoriOS.c    **** // ==============================================
 236:notoriOS.c    **** // Creates a new alarm, which will be handeled by another cutions
 237:notoriOS.c    **** // ==============================================
 238:notoriOS.c    **** alarm CreateAlarm(uint16 countDownValue, uint8 countDownType,uint8 countDownResetCondition)
 239:notoriOS.c    **** {
 561              		.loc 1 239 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 16
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566 0000 80B4     		push	{r7}
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 0002 85B0     		sub	sp, sp, #20
 570              		.cfi_def_cfa_offset 24
 571 0004 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 573 0006 7860     		str	r0, [r7, #4]
 574 0008 0846     		mov	r0, r1
 575 000a 1146     		mov	r1, r2
 576 000c 1A46     		mov	r2, r3
 577 000e 0346     		mov	r3, r0	@ movhi
 578 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 579 0012 0B46     		mov	r3, r1
 580 0014 7B70     		strb	r3, [r7, #1]
 581 0016 1346     		mov	r3, r2
 582 0018 3B70     		strb	r3, [r7]
 240:notoriOS.c    ****     // Creates variable newAlarm of the data structure type alarm
 241:notoriOS.c    ****     alarm newAlarm;
 242:notoriOS.c    ****     
 243:notoriOS.c    ****     // Defines the different params of an alarm: # of ticks, alarm type (sec, min, etc.), & continu
 244:notoriOS.c    ****     newAlarm.countDownValue = countDownValue;
 583              		.loc 1 244 0
 584 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 585 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 245:notoriOS.c    ****     newAlarm.countDownType = countDownType;
 586              		.loc 1 245 0
 587 001e 7B78     		ldrb	r3, [r7, #1]
 588 0020 3B73     		strb	r3, [r7, #12]
 246:notoriOS.c    ****     newAlarm.countDownResetCondition = countDownResetCondition;
 589              		.loc 1 246 0
 590 0022 3B78     		ldrb	r3, [r7]
 591 0024 7B73     		strb	r3, [r7, #13]
 247:notoriOS.c    ****     
 248:notoriOS.c    ****     // If you want a reccuring alarm (e.g. resets freshly each hour), then add
 249:notoriOS.c    ****     // Account for already exprired time using the RTC. Otherwise, set to the countDownValue
 250:notoriOS.c    ****     newAlarm.currentCountDownValue = countDownValue;
 592              		.loc 1 250 0
 593 0026 B7F90230 		ldrsh	r3, [r7, #2]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 16


 594 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 251:notoriOS.c    ****     
 252:notoriOS.c    ****     return newAlarm;
 595              		.loc 1 252 0
 596 002c 7B68     		ldr	r3, [r7, #4]
 597 002e 1A46     		mov	r2, r3
 598 0030 07F10803 		add	r3, r7, #8
 599 0034 1868     		ldr	r0, [r3]	@ unaligned
 600 0036 1060     		str	r0, [r2]	@ unaligned
 601 0038 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 602 003a 9380     		strh	r3, [r2, #4]	@ unaligned
 253:notoriOS.c    ****     
 254:notoriOS.c    **** }
 603              		.loc 1 254 0
 604 003c 7868     		ldr	r0, [r7, #4]
 605 003e 1437     		adds	r7, r7, #20
 606              		.cfi_def_cfa_offset 4
 607 0040 BD46     		mov	sp, r7
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 0042 80BC     		pop	{r7}
 611              		.cfi_restore 7
 612              		.cfi_def_cfa_offset 0
 613 0044 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE71:
 616              		.size	CreateAlarm, .-CreateAlarm
 617              		.global	__aeabi_f2d
 618 0046 00BF     		.section	.rodata
 619 0047 00       		.align	2
 620              	.LC4:
 621 0048 252E3266 		.ascii	"%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%"
 621      2C252E32 
 621      662C252E 
 621      32662C25 
 621      2E32662C 
 622 007b 2E32662C 		.ascii	".2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%."
 622      252E3266 
 622      2C252E32 
 622      662C252E 
 622      32662C25 
 623 00ae 32662C25 		.ascii	"2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f\000"
 623      2E32662C 
 623      252E3266 
 623      2C252E32 
 623      662C252E 
 624 00cf 00       		.align	2
 625              	.LC5:
 626 00d0 736F6E74 		.ascii	"sontek=%s\000"
 626      656B3D25 
 626      7300
 627 00da 0000     		.align	2
 628              	.LC6:
 629 00dc 252E3266 		.ascii	"%.2f\000"
 629      00
 630 00e1 000000   		.align	2
 631              	.LC7:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 17


 632 00e4 736F6E74 		.ascii	"sontek_SNR1=%s\000"
 632      656B5F53 
 632      4E52313D 
 632      257300
 633 00f3 00       		.align	2
 634              	.LC8:
 635 00f4 256600   		.ascii	"%f\000"
 636 00f7 00       		.align	2
 637              	.LC9:
 638 00f8 736F6E74 		.ascii	"sontek_SNR2=%s\000"
 638      656B5F53 
 638      4E52323D 
 638      257300
 639 0107 00       		.align	2
 640              	.LC10:
 641 0108 736F6E74 		.ascii	"sontek_depth=%s\000"
 641      656B5F64 
 641      65707468 
 641      3D257300 
 642              		.align	2
 643              	.LC11:
 644 0118 736F6E74 		.ascii	"sontek_SNR3=%s\000"
 644      656B5F53 
 644      4E52333D 
 644      257300
 645 0127 00       		.align	2
 646              	.LC12:
 647 0128 2D2D2D2D 		.ascii	"-------------BEGIN TESTS---------------\012\012\000"
 647      2D2D2D2D 
 647      2D2D2D2D 
 647      2D424547 
 647      494E2054 
 648 0152 0000     		.align	2
 649              	.LC13:
 650 0154 4D454944 		.ascii	"MEID=%s, SIMID=%s, DEVICEID=%s\012\000"
 650      3D25732C 
 650      2053494D 
 650      49443D25 
 650      732C2044 
 651              		.align	2
 652              	.LC14:
 653 0174 0A0A2D2D 		.ascii	"\012\012-------------END TESTS---------------\012\012"
 653      2D2D2D2D 
 653      2D2D2D2D 
 653      2D2D2D45 
 653      4E442054 
 654 019d 00       		.ascii	"\000"
 655              		.section	.text.ChickityCheckYourselfBeforeYouWreckYourself,"ax",%progbits
 656              		.align	2
 657              		.global	ChickityCheckYourselfBeforeYouWreckYourself
 658              		.thumb
 659              		.thumb_func
 660              		.type	ChickityCheckYourselfBeforeYouWreckYourself, %function
 661              	ChickityCheckYourselfBeforeYouWreckYourself:
 662              	.LFB72:
 255:notoriOS.c    **** 
 256:notoriOS.c    **** // ==============================================
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 18


 257:notoriOS.c    **** // Dropping bombs on your moms
 258:notoriOS.c    **** //      - Ice Cube (1992)
 259:notoriOS.c    **** //
 260:notoriOS.c    **** // This is the global testing function, which runs all relevant tests
 261:notoriOS.c    **** // If you make a new components, it could be good to call its tester function here 
 262:notoriOS.c    **** // ==============================================
 263:notoriOS.c    **** void ChickityCheckYourselfBeforeYouWreckYourself(){
 663              		.loc 1 263 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 2072
 666              		@ frame_needed = 1, uses_anonymous_args = 0
 667 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 668              		.cfi_def_cfa_offset 36
 669              		.cfi_offset 4, -36
 670              		.cfi_offset 5, -32
 671              		.cfi_offset 6, -28
 672              		.cfi_offset 7, -24
 673              		.cfi_offset 8, -20
 674              		.cfi_offset 9, -16
 675              		.cfi_offset 10, -12
 676              		.cfi_offset 11, -8
 677              		.cfi_offset 14, -4
 678 0004 ADF6941D 		subw	sp, sp, #2452
 679              		.cfi_def_cfa_offset 2488
 680 0008 5EAF     		add	r7, sp, #376
 681              		.cfi_def_cfa 7, 2112
 264:notoriOS.c    **** 
 265:notoriOS.c    ****     //test_t t_influx = influx_test();
 266:notoriOS.c    ****     //printTestStatus(t_influx);
 267:notoriOS.c    ****         SDI12_Power_Write(1u);
 682              		.loc 1 267 0
 683 000a 0120     		movs	r0, #1
 684 000c FFF7FEFF 		bl	SDI12_Power_Write
 268:notoriOS.c    ****         SDI12_Power_Write(0u);
 685              		.loc 1 268 0
 686 0010 0020     		movs	r0, #0
 687 0012 FFF7FEFF 		bl	SDI12_Power_Write
 269:notoriOS.c    ****     // Take sontek readings and save them to m_sontek
 270:notoriOS.c    ****         char value[DATA_MAX_KEY_LENGTH];
 271:notoriOS.c    ****         char big_value[DATA_MAX_KEY_LENGTH*10];
 272:notoriOS.c    ****         // sontek_t is a new data type we defined in sontek.h. We then use that data type to define
 273:notoriOS.c    ****         sontek_t m_sontek;
 274:notoriOS.c    ****         
 275:notoriOS.c    ****         // Take sontek readings and save them to m_sontek
 276:notoriOS.c    ****         m_sontek = sontek_take_reading();
 688              		.loc 1 276 0
 689 0016 07F2CC63 		addw	r3, r7, #1740
 690 001a 1846     		mov	r0, r3
 691 001c FFF7FEFF 		bl	sontek_take_reading
 277:notoriOS.c    **** 
 278:notoriOS.c    ****         //4 is depth
 279:notoriOS.c    ****         //snprintf(value, sizeof(value),"%.2f,%.2f",m_sontek.values[4],m_sontek.values[23]);
 280:notoriOS.c    ****         snprintf(big_value,sizeof(big_value),"%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2
 692              		.loc 1 280 0
 693 0020 07F2CC63 		addw	r3, r7, #1740
 694 0024 5B68     		ldr	r3, [r3, #4]	@ float
 695 0026 1846     		mov	r0, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 19


 696 0028 FFF7FEFF 		bl	__aeabi_f2d
 697 002c C7E92C01 		strd	r0, [r7, #176]
 698 0030 07F2CC63 		addw	r3, r7, #1740
 699 0034 9B68     		ldr	r3, [r3, #8]	@ float
 700 0036 1846     		mov	r0, r3
 701 0038 FFF7FEFF 		bl	__aeabi_f2d
 702 003c C7E92A01 		strd	r0, [r7, #168]
 703 0040 07F2CC63 		addw	r3, r7, #1740
 704 0044 DB68     		ldr	r3, [r3, #12]	@ float
 705 0046 1846     		mov	r0, r3
 706 0048 FFF7FEFF 		bl	__aeabi_f2d
 707 004c C7E92801 		strd	r0, [r7, #160]
 708 0050 07F2CC63 		addw	r3, r7, #1740
 709 0054 1B69     		ldr	r3, [r3, #16]	@ float
 710 0056 1846     		mov	r0, r3
 711 0058 FFF7FEFF 		bl	__aeabi_f2d
 712 005c C7E92601 		strd	r0, [r7, #152]
 713 0060 07F2CC63 		addw	r3, r7, #1740
 714 0064 5B69     		ldr	r3, [r3, #20]	@ float
 715 0066 1846     		mov	r0, r3
 716 0068 FFF7FEFF 		bl	__aeabi_f2d
 717 006c C7E92401 		strd	r0, [r7, #144]
 718 0070 07F2CC63 		addw	r3, r7, #1740
 719 0074 9B69     		ldr	r3, [r3, #24]	@ float
 720 0076 1846     		mov	r0, r3
 721 0078 FFF7FEFF 		bl	__aeabi_f2d
 722 007c C7E92201 		strd	r0, [r7, #136]
 723 0080 07F2CC63 		addw	r3, r7, #1740
 724 0084 DB69     		ldr	r3, [r3, #28]	@ float
 725 0086 1846     		mov	r0, r3
 726 0088 FFF7FEFF 		bl	__aeabi_f2d
 727 008c C7E92001 		strd	r0, [r7, #128]
 728 0090 07F2CC63 		addw	r3, r7, #1740
 729 0094 1B6A     		ldr	r3, [r3, #32]	@ float
 730 0096 1846     		mov	r0, r3
 731 0098 FFF7FEFF 		bl	__aeabi_f2d
 732 009c C7E91E01 		strd	r0, [r7, #120]
 733 00a0 07F2CC63 		addw	r3, r7, #1740
 734 00a4 5B6A     		ldr	r3, [r3, #36]	@ float
 735 00a6 1846     		mov	r0, r3
 736 00a8 FFF7FEFF 		bl	__aeabi_f2d
 737 00ac C7E91C01 		strd	r0, [r7, #112]
 738 00b0 07F2CC63 		addw	r3, r7, #1740
 739 00b4 9B6A     		ldr	r3, [r3, #40]	@ float
 740 00b6 1846     		mov	r0, r3
 741 00b8 FFF7FEFF 		bl	__aeabi_f2d
 742 00bc C7E91A01 		strd	r0, [r7, #104]
 743 00c0 07F2CC63 		addw	r3, r7, #1740
 744 00c4 DB6A     		ldr	r3, [r3, #44]	@ float
 745 00c6 1846     		mov	r0, r3
 746 00c8 FFF7FEFF 		bl	__aeabi_f2d
 747 00cc C7E91801 		strd	r0, [r7, #96]
 748 00d0 07F2CC63 		addw	r3, r7, #1740
 749 00d4 1B6B     		ldr	r3, [r3, #48]	@ float
 750 00d6 1846     		mov	r0, r3
 751 00d8 FFF7FEFF 		bl	__aeabi_f2d
 752 00dc C7E91601 		strd	r0, [r7, #88]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 20


 753 00e0 07F2CC63 		addw	r3, r7, #1740
 754 00e4 5B6B     		ldr	r3, [r3, #52]	@ float
 755 00e6 1846     		mov	r0, r3
 756 00e8 FFF7FEFF 		bl	__aeabi_f2d
 757 00ec C7E91401 		strd	r0, [r7, #80]
 758 00f0 07F2CC63 		addw	r3, r7, #1740
 759 00f4 9B6B     		ldr	r3, [r3, #56]	@ float
 760 00f6 1846     		mov	r0, r3
 761 00f8 FFF7FEFF 		bl	__aeabi_f2d
 762 00fc C7E91201 		strd	r0, [r7, #72]
 763 0100 07F2CC63 		addw	r3, r7, #1740
 764 0104 DB6B     		ldr	r3, [r3, #60]	@ float
 765 0106 1846     		mov	r0, r3
 766 0108 FFF7FEFF 		bl	__aeabi_f2d
 767 010c C7E91001 		strd	r0, [r7, #64]
 768 0110 07F2CC63 		addw	r3, r7, #1740
 769 0114 1B6C     		ldr	r3, [r3, #64]	@ float
 770 0116 1846     		mov	r0, r3
 771 0118 FFF7FEFF 		bl	__aeabi_f2d
 772 011c C7E90E01 		strd	r0, [r7, #56]
 773 0120 07F2CC63 		addw	r3, r7, #1740
 774 0124 5B6C     		ldr	r3, [r3, #68]	@ float
 775 0126 1846     		mov	r0, r3
 776 0128 FFF7FEFF 		bl	__aeabi_f2d
 777 012c C7E90C01 		strd	r0, [r7, #48]
 778 0130 07F2CC63 		addw	r3, r7, #1740
 779 0134 9B6C     		ldr	r3, [r3, #72]	@ float
 780 0136 1846     		mov	r0, r3
 781 0138 FFF7FEFF 		bl	__aeabi_f2d
 782 013c C7E90A01 		strd	r0, [r7, #40]
 783 0140 07F2CC63 		addw	r3, r7, #1740
 784 0144 DB6C     		ldr	r3, [r3, #76]	@ float
 785 0146 1846     		mov	r0, r3
 786 0148 FFF7FEFF 		bl	__aeabi_f2d
 787 014c C7E90801 		strd	r0, [r7, #32]
 788 0150 07F2CC63 		addw	r3, r7, #1740
 789 0154 1B6D     		ldr	r3, [r3, #80]	@ float
 790 0156 1846     		mov	r0, r3
 791 0158 FFF7FEFF 		bl	__aeabi_f2d
 792 015c C7E90601 		strd	r0, [r7, #24]
 793 0160 07F2CC63 		addw	r3, r7, #1740
 794 0164 5B6D     		ldr	r3, [r3, #84]	@ float
 795 0166 1846     		mov	r0, r3
 796 0168 FFF7FEFF 		bl	__aeabi_f2d
 797 016c C7E90401 		strd	r0, [r7, #16]
 798 0170 07F2CC63 		addw	r3, r7, #1740
 799 0174 9B6D     		ldr	r3, [r3, #88]	@ float
 800 0176 1846     		mov	r0, r3
 801 0178 FFF7FEFF 		bl	__aeabi_f2d
 802 017c C7E90201 		strd	r0, [r7, #8]
 803 0180 07F2CC63 		addw	r3, r7, #1740
 804 0184 DB6D     		ldr	r3, [r3, #92]	@ float
 805 0186 1846     		mov	r0, r3
 806 0188 FFF7FEFF 		bl	__aeabi_f2d
 807 018c C7E90001 		strd	r0, [r7]
 808 0190 07F2CC63 		addw	r3, r7, #1740
 809 0194 1B6E     		ldr	r3, [r3, #96]	@ float
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 21


 810 0196 1846     		mov	r0, r3
 811 0198 FFF7FEFF 		bl	__aeabi_f2d
 812 019c 8246     		mov	r10, r0
 813 019e 8B46     		mov	fp, r1
 814 01a0 07F2CC63 		addw	r3, r7, #1740
 815 01a4 5B6E     		ldr	r3, [r3, #100]	@ float
 816 01a6 1846     		mov	r0, r3
 817 01a8 FFF7FEFF 		bl	__aeabi_f2d
 818 01ac 8046     		mov	r8, r0
 819 01ae 8946     		mov	r9, r1
 820 01b0 07F2CC63 		addw	r3, r7, #1740
 821 01b4 9B6E     		ldr	r3, [r3, #104]	@ float
 822 01b6 1846     		mov	r0, r3
 823 01b8 FFF7FEFF 		bl	__aeabi_f2d
 824 01bc 0546     		mov	r5, r0
 825 01be 0E46     		mov	r6, r1
 826 01c0 07F2CC63 		addw	r3, r7, #1740
 827 01c4 DB6E     		ldr	r3, [r3, #108]	@ float
 828 01c6 1846     		mov	r0, r3
 829 01c8 FFF7FEFF 		bl	__aeabi_f2d
 830 01cc 0346     		mov	r3, r0
 831 01ce 0C46     		mov	r4, r1
 832 01d0 07F23C70 		addw	r0, r7, #1852
 833 01d4 CDE93434 		strd	r3, [sp, #208]
 834 01d8 CDE93256 		strd	r5, [sp, #200]
 835 01dc CDE93089 		strd	r8, [sp, #192]
 836 01e0 CDE92EAB 		strd	r10, [sp, #184]
 837 01e4 D7E90034 		ldrd	r3, [r7]
 838 01e8 CDE92C34 		strd	r3, [sp, #176]
 839 01ec D7E90234 		ldrd	r3, [r7, #8]
 840 01f0 CDE92A34 		strd	r3, [sp, #168]
 841 01f4 D7E90434 		ldrd	r3, [r7, #16]
 842 01f8 CDE92834 		strd	r3, [sp, #160]
 843 01fc D7E90634 		ldrd	r3, [r7, #24]
 844 0200 CDE92634 		strd	r3, [sp, #152]
 845 0204 D7E90834 		ldrd	r3, [r7, #32]
 846 0208 CDE92434 		strd	r3, [sp, #144]
 847 020c D7E90A34 		ldrd	r3, [r7, #40]
 848 0210 CDE92234 		strd	r3, [sp, #136]
 849 0214 D7E90C34 		ldrd	r3, [r7, #48]
 850 0218 CDE92034 		strd	r3, [sp, #128]
 851 021c D7E90E34 		ldrd	r3, [r7, #56]
 852 0220 CDE91E34 		strd	r3, [sp, #120]
 853 0224 D7E91034 		ldrd	r3, [r7, #64]
 854 0228 CDE91C34 		strd	r3, [sp, #112]
 855 022c D7E91234 		ldrd	r3, [r7, #72]
 856 0230 CDE91A34 		strd	r3, [sp, #104]
 857 0234 D7E91434 		ldrd	r3, [r7, #80]
 858 0238 CDE91834 		strd	r3, [sp, #96]
 859 023c D7E91634 		ldrd	r3, [r7, #88]
 860 0240 CDE91634 		strd	r3, [sp, #88]
 861 0244 D7E91834 		ldrd	r3, [r7, #96]
 862 0248 CDE91434 		strd	r3, [sp, #80]
 863 024c D7E91A34 		ldrd	r3, [r7, #104]
 864 0250 CDE91234 		strd	r3, [sp, #72]
 865 0254 D7E91C34 		ldrd	r3, [r7, #112]
 866 0258 CDE91034 		strd	r3, [sp, #64]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 22


 867 025c D7E91E34 		ldrd	r3, [r7, #120]
 868 0260 CDE90E34 		strd	r3, [sp, #56]
 869 0264 D7E92034 		ldrd	r3, [r7, #128]
 870 0268 CDE90C34 		strd	r3, [sp, #48]
 871 026c D7E92234 		ldrd	r3, [r7, #136]
 872 0270 CDE90A34 		strd	r3, [sp, #40]
 873 0274 D7E92434 		ldrd	r3, [r7, #144]
 874 0278 CDE90834 		strd	r3, [sp, #32]
 875 027c D7E92634 		ldrd	r3, [r7, #152]
 876 0280 CDE90634 		strd	r3, [sp, #24]
 877 0284 D7E92834 		ldrd	r3, [r7, #160]
 878 0288 CDE90434 		strd	r3, [sp, #16]
 879 028c D7E92A34 		ldrd	r3, [r7, #168]
 880 0290 CDE90234 		strd	r3, [sp, #8]
 881 0294 D7E92C34 		ldrd	r3, [r7, #176]
 882 0298 CDE90034 		strd	r3, [sp]
 883 029c 644A     		ldr	r2, .L26
 884 029e C821     		movs	r1, #200
 885 02a0 FFF7FEFF 		bl	snprintf
 281:notoriOS.c    ****          printNotif(NOTIF_TYPE_EVENT,"sontek=%s",big_value);
 886              		.loc 1 281 0
 887 02a4 07F23C73 		addw	r3, r7, #1852
 888 02a8 1A46     		mov	r2, r3
 889 02aa 6249     		ldr	r1, .L26+4
 890 02ac 0020     		movs	r0, #0
 891 02ae FFF7FEFF 		bl	printNotif
 282:notoriOS.c    ****         //23 is SNR1, 24 SNR2, 25, SNR3
 283:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",(m_sontek).values[23]);
 892              		.loc 1 283 0
 893 02b2 07F2CC63 		addw	r3, r7, #1740
 894 02b6 1B6E     		ldr	r3, [r3, #96]	@ float
 895 02b8 1846     		mov	r0, r3
 896 02ba FFF7FEFF 		bl	__aeabi_f2d
 897 02be 0346     		mov	r3, r0
 898 02c0 0C46     		mov	r4, r1
 899 02c2 07F60400 		addw	r0, r7, #2052
 900 02c6 CDE90034 		strd	r3, [sp]
 901 02ca 5B4A     		ldr	r2, .L26+8
 902 02cc 1421     		movs	r1, #20
 903 02ce FFF7FEFF 		bl	snprintf
 284:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"sontek_SNR1=%s",value);
 904              		.loc 1 284 0
 905 02d2 07F60403 		addw	r3, r7, #2052
 906 02d6 1A46     		mov	r2, r3
 907 02d8 5849     		ldr	r1, .L26+12
 908 02da 0020     		movs	r0, #0
 909 02dc FFF7FEFF 		bl	printNotif
 285:notoriOS.c    ****             
 286:notoriOS.c    ****             snprintf(value,sizeof(value),"%f",m_sontek.values[24]);
 910              		.loc 1 286 0
 911 02e0 07F2CC63 		addw	r3, r7, #1740
 912 02e4 5B6E     		ldr	r3, [r3, #100]	@ float
 913 02e6 1846     		mov	r0, r3
 914 02e8 FFF7FEFF 		bl	__aeabi_f2d
 915 02ec 0346     		mov	r3, r0
 916 02ee 0C46     		mov	r4, r1
 917 02f0 07F60400 		addw	r0, r7, #2052
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 23


 918 02f4 CDE90034 		strd	r3, [sp]
 919 02f8 514A     		ldr	r2, .L26+16
 920 02fa 1421     		movs	r1, #20
 921 02fc FFF7FEFF 		bl	snprintf
 287:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"sontek_SNR2=%s",value);
 922              		.loc 1 287 0
 923 0300 07F60403 		addw	r3, r7, #2052
 924 0304 1A46     		mov	r2, r3
 925 0306 4F49     		ldr	r1, .L26+20
 926 0308 0020     		movs	r0, #0
 927 030a FFF7FEFF 		bl	printNotif
 288:notoriOS.c    ****             
 289:notoriOS.c    ****             snprintf(value,sizeof(value),"%f",m_sontek.values[4]);
 928              		.loc 1 289 0
 929 030e 07F2CC63 		addw	r3, r7, #1740
 930 0312 5B69     		ldr	r3, [r3, #20]	@ float
 931 0314 1846     		mov	r0, r3
 932 0316 FFF7FEFF 		bl	__aeabi_f2d
 933 031a 0346     		mov	r3, r0
 934 031c 0C46     		mov	r4, r1
 935 031e 07F60400 		addw	r0, r7, #2052
 936 0322 CDE90034 		strd	r3, [sp]
 937 0326 464A     		ldr	r2, .L26+16
 938 0328 1421     		movs	r1, #20
 939 032a FFF7FEFF 		bl	snprintf
 290:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"sontek_depth=%s",value);
 940              		.loc 1 290 0
 941 032e 07F60403 		addw	r3, r7, #2052
 942 0332 1A46     		mov	r2, r3
 943 0334 4449     		ldr	r1, .L26+24
 944 0336 0020     		movs	r0, #0
 945 0338 FFF7FEFF 		bl	printNotif
 291:notoriOS.c    ****             
 292:notoriOS.c    **** 
 293:notoriOS.c    ****             snprintf(value,sizeof(value),"%f",m_sontek.values[25]);
 946              		.loc 1 293 0
 947 033c 07F2CC63 		addw	r3, r7, #1740
 948 0340 9B6E     		ldr	r3, [r3, #104]	@ float
 949 0342 1846     		mov	r0, r3
 950 0344 FFF7FEFF 		bl	__aeabi_f2d
 951 0348 0346     		mov	r3, r0
 952 034a 0C46     		mov	r4, r1
 953 034c 07F60400 		addw	r0, r7, #2052
 954 0350 CDE90034 		strd	r3, [sp]
 955 0354 3A4A     		ldr	r2, .L26+16
 956 0356 1421     		movs	r1, #20
 957 0358 FFF7FEFF 		bl	snprintf
 294:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"sontek_SNR3=%s",value);
 958              		.loc 1 294 0
 959 035c 07F60403 		addw	r3, r7, #2052
 960 0360 1A46     		mov	r2, r3
 961 0362 3A49     		ldr	r1, .L26+28
 962 0364 0020     		movs	r0, #0
 963 0366 FFF7FEFF 		bl	printNotif
 295:notoriOS.c    **** 
 296:notoriOS.c    ****             
 297:notoriOS.c    ****     
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 24


 298:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"-------------BEGIN TESTS---------------\n\n");
 964              		.loc 1 298 0
 965 036a 3949     		ldr	r1, .L26+32
 966 036c 0320     		movs	r0, #3
 967 036e FFF7FEFF 		bl	printNotif
 299:notoriOS.c    ****     
 300:notoriOS.c    ****     // Test modem
 301:notoriOS.c    ****     test_t t_modem = modem_test();
 968              		.loc 1 301 0
 969 0372 07F5A963 		add	r3, r7, #1352
 970 0376 1846     		mov	r0, r3
 971 0378 FFF7FEFF 		bl	modem_test
 302:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"MEID=%s, SIMID=%s, DEVICEID=%s\n",modem_info.imei,modem_info.sim
 972              		.loc 1 302 0
 973 037c 354B     		ldr	r3, .L26+36
 974 037e 0093     		str	r3, [sp]
 975 0380 354B     		ldr	r3, .L26+40
 976 0382 364A     		ldr	r2, .L26+44
 977 0384 3649     		ldr	r1, .L26+48
 978 0386 0320     		movs	r0, #3
 979 0388 FFF7FEFF 		bl	printNotif
 303:notoriOS.c    ****     printTestStatus(t_modem);
 980              		.loc 1 303 0
 981 038c 07F5A964 		add	r4, r7, #1352
 982 0390 6846     		mov	r0, sp
 983 0392 04F11003 		add	r3, r4, #16
 984 0396 40F27112 		movw	r2, #369
 985 039a 1946     		mov	r1, r3
 986 039c FFF7FEFF 		bl	memcpy
 987 03a0 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 988 03a4 FFF7FEFF 		bl	printTestStatus
 304:notoriOS.c    ****     
 305:notoriOS.c    ****     // Test level sensor
 306:notoriOS.c    ****     test_t t_level_sensor = level_sensor_test();  
 989              		.loc 1 306 0
 990 03a8 07F57173 		add	r3, r7, #964
 991 03ac 1846     		mov	r0, r3
 992 03ae FFF7FEFF 		bl	level_sensor_test
 307:notoriOS.c    ****     printTestStatus(t_level_sensor);
 993              		.loc 1 307 0
 994 03b2 07F57174 		add	r4, r7, #964
 995 03b6 6846     		mov	r0, sp
 996 03b8 04F11003 		add	r3, r4, #16
 997 03bc 40F27112 		movw	r2, #369
 998 03c0 1946     		mov	r1, r3
 999 03c2 FFF7FEFF 		bl	memcpy
 1000 03c6 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 1001 03ca FFF7FEFF 		bl	printTestStatus
 308:notoriOS.c    ****     
 309:notoriOS.c    ****     // Test voltages
 310:notoriOS.c    ****     test_t t_voltages = voltages_test();
 1002              		.loc 1 310 0
 1003 03ce 07F51073 		add	r3, r7, #576
 1004 03d2 1846     		mov	r0, r3
 1005 03d4 FFF7FEFF 		bl	voltages_test
 311:notoriOS.c    ****     printTestStatus(t_voltages);
 1006              		.loc 1 311 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 25


 1007 03d8 07F51074 		add	r4, r7, #576
 1008 03dc 6846     		mov	r0, sp
 1009 03de 04F11003 		add	r3, r4, #16
 1010 03e2 40F27112 		movw	r2, #369
 1011 03e6 1946     		mov	r1, r3
 1012 03e8 FFF7FEFF 		bl	memcpy
 1013 03ec 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 1014 03f0 FFF7FEFF 		bl	printTestStatus
 312:notoriOS.c    ****     
 313:notoriOS.c    ****     // Test SD card
 314:notoriOS.c    ****     test_t t_sd_card = SD_card_test();
 1015              		.loc 1 314 0
 1016 03f4 07F1BC03 		add	r3, r7, #188
 1017 03f8 1846     		mov	r0, r3
 1018 03fa FFF7FEFF 		bl	SD_card_test
 315:notoriOS.c    ****     printTestStatus(t_sd_card);
 1019              		.loc 1 315 0
 1020 03fe 07F1BC04 		add	r4, r7, #188
 1021 0402 6846     		mov	r0, sp
 1022 0404 04F11003 		add	r3, r4, #16
 1023 0408 40F27112 		movw	r2, #369
 1024 040c 1946     		mov	r1, r3
 1025 040e FFF7FEFF 		bl	memcpy
 1026 0412 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 1027 0416 FFF7FEFF 		bl	printTestStatus
 316:notoriOS.c    ****     
 317:notoriOS.c    ****     printNotif(NOTIF_TYPE_STARTUP,"\n\n-------------END TESTS---------------\n\n");
 1028              		.loc 1 317 0
 1029 041a 1249     		ldr	r1, .L26+52
 1030 041c 0320     		movs	r0, #3
 1031 041e FFF7FEFF 		bl	printNotif
 318:notoriOS.c    **** 
 319:notoriOS.c    **** }
 1032              		.loc 1 319 0
 1033 0422 00BF     		nop
 1034 0424 07F61C07 		addw	r7, r7, #2076
 1035              		.cfi_def_cfa_offset 36
 1036 0428 BD46     		mov	sp, r7
 1037              		.cfi_def_cfa_register 13
 1038              		@ sp needed
 1039 042a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1040              	.L27:
 1041 042e 00BF     		.align	2
 1042              	.L26:
 1043 0430 48000000 		.word	.LC4
 1044 0434 D0000000 		.word	.LC5
 1045 0438 DC000000 		.word	.LC6
 1046 043c E4000000 		.word	.LC7
 1047 0440 F4000000 		.word	.LC8
 1048 0444 F8000000 		.word	.LC9
 1049 0448 08010000 		.word	.LC10
 1050 044c 18010000 		.word	.LC11
 1051 0450 28010000 		.word	.LC12
 1052 0454 04000000 		.word	system_info+4
 1053 0458 00000000 		.word	modem_info
 1054 045c 28000000 		.word	modem_info+40
 1055 0460 54010000 		.word	.LC13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 26


 1056 0464 74010000 		.word	.LC14
 1057              		.cfi_endproc
 1058              	.LFE72:
 1059              		.size	ChickityCheckYourselfBeforeYouWreckYourself, .-ChickityCheckYourselfBeforeYouWreckYourself
 1060              		.section	.text.main,"ax",%progbits
 1061              		.align	2
 1062              		.global	main
 1063              		.thumb
 1064              		.thumb_func
 1065              		.type	main, %function
 1066              	main:
 1067              	.LFB73:
 320:notoriOS.c    **** 
 321:notoriOS.c    **** // ==============================================
 322:notoriOS.c    **** // Processes Core Tasks
 323:notoriOS.c    **** // ==============================================
 324:notoriOS.c    **** int main(void)
 325:notoriOS.c    **** {
 1068              		.loc 1 325 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 1, uses_anonymous_args = 0
 1072 0000 80B5     		push	{r7, lr}
 1073              		.cfi_def_cfa_offset 8
 1074              		.cfi_offset 7, -8
 1075              		.cfi_offset 14, -4
 1076 0002 00AF     		add	r7, sp, #0
 1077              		.cfi_def_cfa_register 7
 326:notoriOS.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 1078              		.loc 1 326 0
 1079              		.syntax unified
 1080              	@ 326 "notoriOS.c" 1
 1081 0004 62B6     		CPSIE   i
 1082              	@ 0 "" 2
 327:notoriOS.c    **** 
 328:notoriOS.c    ****     ReadyOrNot(); // Initialize 
 1083              		.loc 1 328 0
 1084              		.thumb
 1085              		.syntax unified
 1086 0006 FFF7FEFF 		bl	ReadyOrNot
 329:notoriOS.c    ****     
 330:notoriOS.c    ****     ChickityCheckYourselfBeforeYouWreckYourself(); // Run tests for all components on bootup
 1087              		.loc 1 330 0
 1088 000a FFF7FEFF 		bl	ChickityCheckYourselfBeforeYouWreckYourself
 1089              	.L30:
 331:notoriOS.c    ****    
 332:notoriOS.c    ****     for(;;) // (;;) means an infinite loop
 333:notoriOS.c    ****     {
 334:notoriOS.c    ****         
 335:notoriOS.c    ****         if( ! WorkWorkWorkWorkWorkWork() ) // Complete the work
 1090              		.loc 1 335 0
 1091 000e FFF7FEFF 		bl	WorkWorkWorkWorkWorkWork
 1092 0012 0346     		mov	r3, r0
 1093 0014 002B     		cmp	r3, #0
 1094 0016 FAD1     		bne	.L30
 336:notoriOS.c    ****         {
 337:notoriOS.c    ****            LayBack(); // Lay back (sleep) when there isn't work
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 27


 1095              		.loc 1 337 0
 1096 0018 FFF7FEFF 		bl	LayBack
 338:notoriOS.c    ****         }
 339:notoriOS.c    ****     }
 1097              		.loc 1 339 0
 1098 001c F7E7     		b	.L30
 1099              		.cfi_endproc
 1100              	.LFE73:
 1101              		.size	main, .-main
 1102 001e 00BF     		.section	.rodata
 1103 019e 0000     		.align	2
 1104              	.LC15:
 1105 01a0 4D6F6465 		.ascii	"Modem is ready.\000"
 1105      6D206973 
 1105      20726561 
 1105      64792E00 
 1106              		.align	2
 1107              	.LC16:
 1108 01b0 72737270 		.ascii	"rsrp\000"
 1108      00
 1109 01b5 000000   		.align	2
 1110              	.LC17:
 1111 01b8 7472795F 		.ascii	"try_counter\000"
 1111      636F756E 
 1111      74657200 
 1112              		.align	2
 1113              	.LC18:
 1114 01c4 64617461 		.ascii	"data_count_sent\000"
 1114      5F636F75 
 1114      6E745F73 
 1114      656E7400 
 1115              		.align	2
 1116              	.LC19:
 1117 01d4 64617461 		.ascii	"data_count_desired\000"
 1117      5F636F75 
 1117      6E745F64 
 1117      65736972 
 1117      656400
 1118 01e7 00       		.align	2
 1119              	.LC20:
 1120 01e8 42656769 		.ascii	"Begin HTTP post.\000"
 1120      6E204854 
 1120      54502070 
 1120      6F73742E 
 1120      00
 1121 01f9 000000   		.align	2
 1122              	.LC21:
 1123 01fc 38623232 		.ascii	"8b22014a56b26722ab880436dfba4fae94b23274\000"
 1123      30313461 
 1123      35366232 
 1123      36373232 
 1123      61623838 
 1124 0225 000000   		.align	2
 1125              	.LC22:
 1126 0228 6170692F 		.ascii	"api/v1/write\000"
 1126      76312F77 
 1126      72697465 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 28


 1126      00
 1127 0235 000000   		.align	2
 1128              	.LC23:
 1129 0238 48545450 		.ascii	"HTTP route: %s\000"
 1129      20726F75 
 1129      74653A20 
 1129      257300
 1130 0247 00       		.align	2
 1131              	.LC24:
 1132 0248 312E3100 		.ascii	"1.1\000"
 1133              		.align	2
 1134              	.LC25:
 1135 024c 00       		.ascii	"\000"
 1136 024d 000000   		.align	2
 1137              	.LC26:
 1138 0250 436C6F73 		.ascii	"Close\000"
 1138      6500
 1139 0256 0000     		.align	2
 1140              	.LC27:
 1141 0258 504F5354 		.ascii	"POST\000"
 1141      00
 1142 025d 000000   		.align	2
 1143              	.LC28:
 1144 0260 46756C6C 		.ascii	"Full HTTP Request: %s\000"
 1144      20485454 
 1144      50205265 
 1144      71756573 
 1144      743A2025 
 1145 0276 0000     		.align	2
 1146              	.LC29:
 1147 0278 41542353 		.ascii	"AT#SD=1,0,%d,\"%s\",0,0,1\015\000"
 1147      443D312C 
 1147      302C2564 
 1147      2C222573 
 1147      222C302C 
 1148 0291 000000   		.align	2
 1149              	.LC30:
 1150 0294 257300   		.ascii	"%s\000"
 1151 0297 00       		.align	2
 1152              	.LC31:
 1153 0298 4F4B00   		.ascii	"OK\000"
 1154              		.global	__aeabi_ui2d
 1155              		.global	__aeabi_d2iz
 1156 029b 00       		.align	2
 1157              	.LC32:
 1158 029c 68747470 		.ascii	"http_request len: %d\000"
 1158      5F726571 
 1158      75657374 
 1158      206C656E 
 1158      3A202564 
 1159 02b1 000000   		.align	2
 1160              	.LC33:
 1161 02b4 23206F66 		.ascii	"# of packets: %d\000"
 1161      20706163 
 1161      6B657473 
 1161      3A202564 
 1161      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 29


 1162 02c5 000000   		.align	2
 1163              	.LC34:
 1164 02c8 3E00     		.ascii	">\000"
 1165 02ca 0000     		.align	2
 1166              	.LC35:
 1167 02cc 41542353 		.ascii	"AT#SSEND=1\015\012\000"
 1167      53454E44 
 1167      3D310D0A 
 1167      00
 1168 02d9 000000   		.align	2
 1169              	.LC36:
 1170 02dc 1A00     		.ascii	"\032\000"
 1171 02de 0000     		.align	2
 1172              	.LC37:
 1173 02e0 6368756E 		.ascii	"chunk %d: %s\000"
 1173      6B202564 
 1173      3A202573 
 1173      00
 1174 02ed 000000   		.align	2
 1175              	.LC38:
 1176 02f0 5352494E 		.ascii	"SRING\000"
 1176      4700
 1177 02f6 0000     		.align	2
 1178              	.LC39:
 1179 02f8 4F532D4F 		.ascii	"OS-OK\000"
 1179      4B00
 1180 02fe 0000     		.align	2
 1181              	.LC40:
 1182 0300 41542353 		.ascii	"AT#SRECV=1,1000\015\000"
 1182      52454356 
 1182      3D312C31 
 1182      3030300D 
 1182      00
 1183 0311 000000   		.align	2
 1184              	.LC41:
 1185 0314 6D6F6465 		.ascii	"modem_tx_time\000"
 1185      6D5F7478 
 1185      5F74696D 
 1185      6500
 1186 0322 0000     		.align	2
 1187              	.LC42:
 1188 0324 4F532D4E 		.ascii	"OS-NO: Could not receive data from server.\000"
 1188      4F3A2043 
 1188      6F756C64 
 1188      206E6F74 
 1188      20726563 
 1189              		.section	.text.syncData,"ax",%progbits
 1190              		.align	2
 1191              		.global	syncData
 1192              		.thumb
 1193              		.thumb_func
 1194              		.type	syncData, %function
 1195              	syncData:
 1196              	.LFB74:
 340:notoriOS.c    **** }
 341:notoriOS.c    **** 
 342:notoriOS.c    **** // ==============================================
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 30


 343:notoriOS.c    **** // Syncs data with server
 344:notoriOS.c    **** // Returns 0 when done
 345:notoriOS.c    **** // ==============================================
 346:notoriOS.c    **** uint8 syncData(){
 1197              		.loc 1 346 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 1336
 1200              		@ frame_needed = 1, uses_anonymous_args = 0
 1201 0000 90B5     		push	{r4, r7, lr}
 1202              		.cfi_def_cfa_offset 12
 1203              		.cfi_offset 4, -12
 1204              		.cfi_offset 7, -8
 1205              		.cfi_offset 14, -4
 1206 0002 ADF2545D 		subw	sp, sp, #1364
 1207              		.cfi_def_cfa_offset 1376
 1208 0006 06AF     		add	r7, sp, #24
 1209              		.cfi_def_cfa 7, 1352
 347:notoriOS.c    ****     
 348:notoriOS.c    ****     /*
 349:notoriOS.c    ****     //at_write_command("AT#SCFG?\r","OK",1000);
 350:notoriOS.c    ****     uint8 check = 0;
 351:notoriOS.c    ****     //"AT#SD=,0,80,\”www.google.com\”,0,0,0\r"
 352:notoriOS.c    ****     check = at_write_command("AT#SD=1,0,8086,\"data.open-storm.org\",0,0,1\r","OK",10000u);
 353:notoriOS.c    ****     check = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 354:notoriOS.c    ****     check = at_write_command("POST /write?db=ARB&u=generic_node&p=MakeFloodsCurrents HTTP/1.1\r\nHo
 355:notoriOS.c    ****     */
 356:notoriOS.c    **** 
 357:notoriOS.c    ****     // Blink LED so we know it's about to sync data
 358:notoriOS.c    ****     LED_Write(1u);
 1210              		.loc 1 358 0
 1211 0008 0120     		movs	r0, #1
 1212 000a FFF7FEFF 		bl	LED_Write
 359:notoriOS.c    ****     CyDelay(100u);
 1213              		.loc 1 359 0
 1214 000e 6420     		movs	r0, #100
 1215 0010 FFF7FEFF 		bl	CyDelay
 360:notoriOS.c    ****     LED_Write(0u);
 1216              		.loc 1 360 0
 1217 0014 0020     		movs	r0, #0
 1218 0016 FFF7FEFF 		bl	LED_Write
 361:notoriOS.c    **** 
 362:notoriOS.c    ****     
 363:notoriOS.c    ****     // If there's no data, not need to do anything
 364:notoriOS.c    ****     if(sizeOfDataStack() == 0){        
 1219              		.loc 1 364 0
 1220 001a FFF7FEFF 		bl	sizeOfDataStack
 1221 001e 0346     		mov	r3, r0
 1222 0020 002B     		cmp	r3, #0
 1223 0022 01D1     		bne	.L32
 365:notoriOS.c    ****         return 0u;
 1224              		.loc 1 365 0
 1225 0024 0023     		movs	r3, #0
 1226 0026 F9E1     		b	.L33
 1227              	.L32:
 366:notoriOS.c    ****         }
 367:notoriOS.c    ****     
 368:notoriOS.c    ****     // Create request body, in this case influx
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 31


 369:notoriOS.c    ****     // Place body into HTTP request header
 370:notoriOS.c    ****     // Fire up modem and get it out
 371:notoriOS.c    ****      
 372:notoriOS.c    ****     
 373:notoriOS.c    ****     // Try up to 2 times to connect to the modem
 374:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1228              		.loc 1 374 0
 1229 0028 FFF7FEFF 		bl	modem_get_state
 1230 002c 0346     		mov	r3, r0
 1231 002e 002B     		cmp	r3, #0
 1232 0030 11D1     		bne	.L34
 375:notoriOS.c    **** 
 376:notoriOS.c    ****         try_counter++;
 1233              		.loc 1 376 0
 1234 0032 C74B     		ldr	r3, .L46
 1235 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1236 0036 0133     		adds	r3, r3, #1
 1237 0038 DAB2     		uxtb	r2, r3
 1238 003a C54B     		ldr	r3, .L46
 1239 003c 1A70     		strb	r2, [r3]
 377:notoriOS.c    ****         	
 378:notoriOS.c    ****         if(try_counter <= 2){
 1240              		.loc 1 378 0
 1241 003e C44B     		ldr	r3, .L46
 1242 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1243 0042 022B     		cmp	r3, #2
 1244 0044 02D8     		bhi	.L35
 379:notoriOS.c    ****             modem_power_up();
 1245              		.loc 1 379 0
 1246 0046 FFF7FEFF 		bl	modem_power_up
 1247 004a E6E1     		b	.L36
 1248              	.L35:
 380:notoriOS.c    ****         }else{
 381:notoriOS.c    ****             try_counter = 0;
 1249              		.loc 1 381 0
 1250 004c C04B     		ldr	r3, .L46
 1251 004e 0022     		movs	r2, #0
 1252 0050 1A70     		strb	r2, [r3]
 382:notoriOS.c    ****             return 0u;
 1253              		.loc 1 382 0
 1254 0052 0023     		movs	r3, #0
 1255 0054 E2E1     		b	.L33
 1256              	.L34:
 383:notoriOS.c    ****             }
 384:notoriOS.c    ****             
 385:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1257              		.loc 1 385 0
 1258 0056 FFF7FEFF 		bl	modem_get_state
 1259 005a 0346     		mov	r3, r0
 1260 005c 042B     		cmp	r3, #4
 1261 005e 40F0DC81 		bne	.L36
 1262              	.LBB2:
 386:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Modem is ready.");
 1263              		.loc 1 386 0
 1264 0062 BC49     		ldr	r1, .L46+4
 1265 0064 0020     		movs	r0, #0
 1266 0066 FFF7FEFF 		bl	printNotif
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 32


 387:notoriOS.c    ****         
 388:notoriOS.c    ****         http_request[0] = '\0';
 1267              		.loc 1 388 0
 1268 006a BB4B     		ldr	r3, .L46+8
 1269 006c 0022     		movs	r2, #0
 1270 006e 1A70     		strb	r2, [r3]
 389:notoriOS.c    ****         http_body[0] = '\0';
 1271              		.loc 1 389 0
 1272 0070 BA4B     		ldr	r3, .L46+12
 1273 0072 0022     		movs	r2, #0
 1274 0074 1A70     		strb	r2, [r3]
 390:notoriOS.c    ****         http_route[0] = '\0';
 1275              		.loc 1 390 0
 1276 0076 BA4B     		ldr	r3, .L46+16
 1277 0078 0022     		movs	r2, #0
 1278 007a 1A70     		strb	r2, [r3]
 391:notoriOS.c    ****         //char *base = "write";
 392:notoriOS.c    ****         
 393:notoriOS.c    ****         // Push cell strength data (RSRP: reference signal received power)
 394:notoriOS.c    ****         char s_rsrp[DATA_MAX_KEY_LENGTH];
 395:notoriOS.c    ****         snprintf(s_rsrp,sizeof(s_rsrp),"%d",modem_stats.rsrp);
 1279              		.loc 1 395 0
 1280 007c B94B     		ldr	r3, .L46+20
 1281 007e 5B69     		ldr	r3, [r3, #20]
 1282 0080 07F5A260 		add	r0, r7, #1296
 1283 0084 B84A     		ldr	r2, .L46+24
 1284 0086 1421     		movs	r1, #20
 1285 0088 FFF7FEFF 		bl	snprintf
 396:notoriOS.c    ****         pushData("rsrp", s_rsrp, getTimeStamp());
 1286              		.loc 1 396 0
 1287 008c FFF7FEFF 		bl	getTimeStamp
 1288 0090 0246     		mov	r2, r0
 1289 0092 07F5A263 		add	r3, r7, #1296
 1290 0096 1946     		mov	r1, r3
 1291 0098 B448     		ldr	r0, .L46+28
 1292 009a FFF7FEFF 		bl	pushData
 397:notoriOS.c    ****         
 398:notoriOS.c    ****         // Push syncData try_counter to know how many tries it tried to connect
 399:notoriOS.c    ****         char c_try_counter[20];
 400:notoriOS.c    ****         snprintf(c_try_counter,sizeof(c_try_counter),"%d",try_counter);
 1293              		.loc 1 400 0
 1294 009e AC4B     		ldr	r3, .L46
 1295 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1296 00a2 07F2FC40 		addw	r0, r7, #1276
 1297 00a6 B04A     		ldr	r2, .L46+24
 1298 00a8 1421     		movs	r1, #20
 1299 00aa FFF7FEFF 		bl	snprintf
 401:notoriOS.c    ****         pushData("try_counter",c_try_counter,getTimeStamp());
 1300              		.loc 1 401 0
 1301 00ae FFF7FEFF 		bl	getTimeStamp
 1302 00b2 0246     		mov	r2, r0
 1303 00b4 07F2FC43 		addw	r3, r7, #1276
 1304 00b8 1946     		mov	r1, r3
 1305 00ba AD48     		ldr	r0, .L46+32
 1306 00bc FFF7FEFF 		bl	pushData
 402:notoriOS.c    ****         
 403:notoriOS.c    ****         // Get size of the actual data stack count and push it to the stack
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 33


 404:notoriOS.c    ****         // If the buffer didn't overflow, then the data_count_sent is dataPointsInStack
 405:notoriOS.c    ****         // Otherwise, if the buffer overflows, then the data_count_sent is DATA_MAX_COUNT
 406:notoriOS.c    ****         if(buffer_overflow == false){
 1307              		.loc 1 406 0
 1308 00c0 AC4B     		ldr	r3, .L46+36
 1309 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1310 00c4 83F00103 		eor	r3, r3, #1
 1311 00c8 DBB2     		uxtb	r3, r3
 1312 00ca 002B     		cmp	r3, #0
 1313 00cc 16D0     		beq	.L37
 1314              	.LBB3:
 407:notoriOS.c    ****             uint16 data_count_sent = sizeOfDataStack();
 1315              		.loc 1 407 0
 1316 00ce FFF7FEFF 		bl	sizeOfDataStack
 1317 00d2 0346     		mov	r3, r0
 1318 00d4 A7F83035 		strh	r3, [r7, #1328]	@ movhi
 408:notoriOS.c    ****             char c_data_count_sent[20];
 409:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",data_count_sent);
 1319              		.loc 1 409 0
 1320 00d8 B7F83035 		ldrh	r3, [r7, #1328]
 1321 00dc 07F2D440 		addw	r0, r7, #1236
 1322 00e0 A14A     		ldr	r2, .L46+24
 1323 00e2 1421     		movs	r1, #20
 1324 00e4 FFF7FEFF 		bl	snprintf
 410:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1325              		.loc 1 410 0
 1326 00e8 FFF7FEFF 		bl	getTimeStamp
 1327 00ec 0246     		mov	r2, r0
 1328 00ee 07F2D443 		addw	r3, r7, #1236
 1329 00f2 1946     		mov	r1, r3
 1330 00f4 A048     		ldr	r0, .L46+40
 1331 00f6 FFF7FEFF 		bl	pushData
 1332              	.LBE3:
 1333 00fa 0FE0     		b	.L38
 1334              	.L37:
 1335              	.LBB4:
 411:notoriOS.c    ****         }else{
 412:notoriOS.c    ****             char c_data_count_sent[20];
 413:notoriOS.c    ****             snprintf(c_data_count_sent,sizeof(c_data_count_sent),"%d",DATA_MAX_VALUES);
 1336              		.loc 1 413 0
 1337 00fc 07F59860 		add	r0, r7, #1216
 1338 0100 9623     		movs	r3, #150
 1339 0102 994A     		ldr	r2, .L46+24
 1340 0104 1421     		movs	r1, #20
 1341 0106 FFF7FEFF 		bl	snprintf
 414:notoriOS.c    ****             pushData("data_count_sent",c_data_count_sent,getTimeStamp());
 1342              		.loc 1 414 0
 1343 010a FFF7FEFF 		bl	getTimeStamp
 1344 010e 0246     		mov	r2, r0
 1345 0110 07F59863 		add	r3, r7, #1216
 1346 0114 1946     		mov	r1, r3
 1347 0116 9848     		ldr	r0, .L46+40
 1348 0118 FFF7FEFF 		bl	pushData
 1349              	.L38:
 1350              	.LBE4:
 415:notoriOS.c    ****         }
 416:notoriOS.c    ****         
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 34


 417:notoriOS.c    ****         // Get size of the desired data stack count and push it to the stack
 418:notoriOS.c    ****         uint16 data_count_desired = sizeOfDataStackDesired();
 1351              		.loc 1 418 0
 1352 011c FFF7FEFF 		bl	sizeOfDataStackDesired
 1353 0120 0346     		mov	r3, r0
 1354 0122 A7F82E35 		strh	r3, [r7, #1326]	@ movhi
 419:notoriOS.c    ****         char c_data_count_desired[20];
 420:notoriOS.c    ****         // subtract 1 to disclude data_count_sent so that it focuses only on the actual data
 421:notoriOS.c    ****         snprintf(c_data_count_desired,sizeof(c_data_count_desired),"%d", data_count_desired-1);
 1355              		.loc 1 421 0
 1356 0126 B7F82E35 		ldrh	r3, [r7, #1326]
 1357 012a 013B     		subs	r3, r3, #1
 1358 012c 07F59D60 		add	r0, r7, #1256
 1359 0130 8D4A     		ldr	r2, .L46+24
 1360 0132 1421     		movs	r1, #20
 1361 0134 FFF7FEFF 		bl	snprintf
 422:notoriOS.c    ****         pushData("data_count_desired",c_data_count_desired,getTimeStamp());
 1362              		.loc 1 422 0
 1363 0138 FFF7FEFF 		bl	getTimeStamp
 1364 013c 0246     		mov	r2, r0
 1365 013e 07F59D63 		add	r3, r7, #1256
 1366 0142 1946     		mov	r1, r3
 1367 0144 8D48     		ldr	r0, .L46+44
 1368 0146 FFF7FEFF 		bl	pushData
 423:notoriOS.c    ****         
 424:notoriOS.c    ****         // Construct HTPP request
 425:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Begin HTTP post.");
 1369              		.loc 1 425 0
 1370 014a 8D49     		ldr	r1, .L46+48
 1371 014c 0020     		movs	r0, #0
 1372 014e FFF7FEFF 		bl	printNotif
 426:notoriOS.c    ****         
 427:notoriOS.c    ****         // Old influx API
 428:notoriOS.c    ****         // Construct_influx_route(http_route,base,system_settings.ep_user,system_settings.ep_pswd,s
 429:notoriOS.c    ****         construct_malcom_route(http_route,"api/v1/write",modem_info.imei,CURRENT_COMMIT);
 1373              		.loc 1 429 0
 1374 0152 8C4B     		ldr	r3, .L46+52
 1375 0154 8C4A     		ldr	r2, .L46+56
 1376 0156 8D49     		ldr	r1, .L46+60
 1377 0158 8148     		ldr	r0, .L46+16
 1378 015a FFF7FEFF 		bl	construct_malcom_route
 430:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"HTTP route: %s", http_route);
 1379              		.loc 1 430 0
 1380 015e 804A     		ldr	r2, .L46+16
 1381 0160 8B49     		ldr	r1, .L46+64
 1382 0162 0020     		movs	r0, #0
 1383 0164 FFF7FEFF 		bl	printNotif
 431:notoriOS.c    ****         
 432:notoriOS.c    ****         //OLD INFLUX API
 433:notoriOS.c    ****         //construct_influx_write_body(http_body,system_settings.node_id);
 434:notoriOS.c    ****         construct_malcom_body(http_body);
 1384              		.loc 1 434 0
 1385 0168 7C48     		ldr	r0, .L46+12
 1386 016a FFF7FEFF 		bl	construct_malcom_body
 435:notoriOS.c    ****         construct_generic_HTTP_request(http_request,http_body,system_settings.ep_host,http_route,sy
 1387              		.loc 1 435 0
 1388 016e 894B     		ldr	r3, .L46+68
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 35


 1389 0170 5B6E     		ldr	r3, [r3, #100]
 1390 0172 894A     		ldr	r2, .L46+72
 1391 0174 0592     		str	r2, [sp, #20]
 1392 0176 0022     		movs	r2, #0
 1393 0178 0492     		str	r2, [sp, #16]
 1394 017a 884A     		ldr	r2, .L46+76
 1395 017c 0392     		str	r2, [sp, #12]
 1396 017e 884A     		ldr	r2, .L46+80
 1397 0180 0292     		str	r2, [sp, #8]
 1398 0182 884A     		ldr	r2, .L46+84
 1399 0184 0192     		str	r2, [sp, #4]
 1400 0186 0093     		str	r3, [sp]
 1401 0188 754B     		ldr	r3, .L46+16
 1402 018a 824A     		ldr	r2, .L46+68
 1403 018c 7349     		ldr	r1, .L46+12
 1404 018e 7248     		ldr	r0, .L46+8
 1405 0190 FFF7FEFF 		bl	construct_generic_HTTP_request
 436:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 1406              		.loc 1 436 0
 1407 0194 704A     		ldr	r2, .L46+8
 1408 0196 8449     		ldr	r1, .L46+88
 1409 0198 0020     		movs	r0, #0
 1410 019a FFF7FEFF 		bl	printNotif
 437:notoriOS.c    ****         
 438:notoriOS.c    ****         // Push request to modem and escape with <ctrl+z> escape sequence
 439:notoriOS.c    ****         // Open port and begin command line sequence
 440:notoriOS.c    ****         char portConfig[200];
 441:notoriOS.c    ****         uint8 status = 0u;
 1411              		.loc 1 441 0
 1412 019e 0023     		movs	r3, #0
 1413 01a0 87F82D35 		strb	r3, [r7, #1325]
 442:notoriOS.c    ****         
 443:notoriOS.c    ****         snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",system_settings.ep_por
 1414              		.loc 1 443 0
 1415 01a4 7B4B     		ldr	r3, .L46+68
 1416 01a6 5A6E     		ldr	r2, [r3, #100]
 1417 01a8 3846     		mov	r0, r7
 1418 01aa 7A4B     		ldr	r3, .L46+68
 1419 01ac 0093     		str	r3, [sp]
 1420 01ae 1346     		mov	r3, r2
 1421 01b0 7E4A     		ldr	r2, .L46+92
 1422 01b2 C821     		movs	r1, #200
 1423 01b4 FFF7FEFF 		bl	snprintf
 444:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 1424              		.loc 1 444 0
 1425 01b8 3B46     		mov	r3, r7
 1426 01ba 1A46     		mov	r2, r3
 1427 01bc 7C49     		ldr	r1, .L46+96
 1428 01be 0020     		movs	r0, #0
 1429 01c0 FFF7FEFF 		bl	printNotif
 445:notoriOS.c    ****         status = at_write_command(portConfig,"OK",10000u);
 1430              		.loc 1 445 0
 1431 01c4 3B46     		mov	r3, r7
 1432 01c6 42F21072 		movw	r2, #10000
 1433 01ca 7A49     		ldr	r1, .L46+100
 1434 01cc 1846     		mov	r0, r3
 1435 01ce FFF7FEFF 		bl	at_write_command
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 36


 1436 01d2 0346     		mov	r3, r0
 1437 01d4 87F82D35 		strb	r3, [r7, #1325]
 446:notoriOS.c    ****         
 447:notoriOS.c    ****         // create character pointer to chunk through the http_request
 448:notoriOS.c    ****         char *chunk;
 449:notoriOS.c    ****         // Set chunk to start where http_request starts
 450:notoriOS.c    ****         chunk = http_request;
 1438              		.loc 1 450 0
 1439 01d8 5F4B     		ldr	r3, .L46+8
 1440 01da C7F83435 		str	r3, [r7, #1332]
 451:notoriOS.c    ****         // variable for the number of packets to send
 452:notoriOS.c    ****         int8 packets;
 453:notoriOS.c    ****         packets = ceil(nextafter((strlen(http_request)/MAX_BYTES_SENT),MAX_BYTES_SENT));
 1441              		.loc 1 453 0
 1442 01de 5E48     		ldr	r0, .L46+8
 1443 01e0 FFF7FEFF 		bl	strlen
 1444 01e4 0246     		mov	r2, r0
 1445 01e6 744B     		ldr	r3, .L46+104
 1446 01e8 A3FB0223 		umull	r2, r3, r3, r2
 1447 01ec 5B09     		lsrs	r3, r3, #5
 1448 01ee 1846     		mov	r0, r3
 1449 01f0 FFF7FEFF 		bl	__aeabi_ui2d
 1450 01f4 4FF00002 		mov	r2, #0
 1451 01f8 704B     		ldr	r3, .L46+108
 1452 01fa FFF7FEFF 		bl	nextafter
 1453 01fe 0346     		mov	r3, r0
 1454 0200 0C46     		mov	r4, r1
 1455 0202 1846     		mov	r0, r3
 1456 0204 2146     		mov	r1, r4
 1457 0206 FFF7FEFF 		bl	ceil
 1458 020a 0346     		mov	r3, r0
 1459 020c 0C46     		mov	r4, r1
 1460 020e 1846     		mov	r0, r3
 1461 0210 2146     		mov	r1, r4
 1462 0212 FFF7FEFF 		bl	__aeabi_d2iz
 1463 0216 0346     		mov	r3, r0
 1464 0218 87F82C35 		strb	r3, [r7, #1324]
 454:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "http_request len: %d", strlen(http_request));
 1465              		.loc 1 454 0
 1466 021c 4E48     		ldr	r0, .L46+8
 1467 021e FFF7FEFF 		bl	strlen
 1468 0222 0346     		mov	r3, r0
 1469 0224 1A46     		mov	r2, r3
 1470 0226 6649     		ldr	r1, .L46+112
 1471 0228 0020     		movs	r0, #0
 1472 022a FFF7FEFF 		bl	printNotif
 455:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT, "# of packets: %d", packets);
 1473              		.loc 1 455 0
 1474 022e 97F92C35 		ldrsb	r3, [r7, #1324]
 1475 0232 1A46     		mov	r2, r3
 1476 0234 6349     		ldr	r1, .L46+116
 1477 0236 0020     		movs	r0, #0
 1478 0238 FFF7FEFF 		bl	printNotif
 1479              	.LBB5:
 456:notoriOS.c    ****         // while the size of the chunk of the data we are sending to the server is smaller than the
 457:notoriOS.c    ****         for(int8 packet = 0; packet < packets; packet++){
 1480              		.loc 1 457 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 37


 1481 023c 0023     		movs	r3, #0
 1482 023e 87F83335 		strb	r3, [r7, #1331]
 1483 0242 53E0     		b	.L39
 1484              	.L42:
 1485              	.LBB6:
 458:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 459:notoriOS.c    ****             char http_chunk[1001];
 460:notoriOS.c    ****             // AT command #SSEND= is an execution command that permits, while the module is in comm
 461:notoriOS.c    ****             // To complete the operation, send Ctrl-Z char to exit
 462:notoriOS.c    ****             status = at_write_command("AT#SSEND=1\r\n", ">", 1000u);
 1486              		.loc 1 462 0
 1487 0244 4FF47A72 		mov	r2, #1000
 1488 0248 5F49     		ldr	r1, .L46+120
 1489 024a 6048     		ldr	r0, .L46+124
 1490 024c FFF7FEFF 		bl	at_write_command
 1491 0250 0346     		mov	r3, r0
 1492 0252 87F82D35 		strb	r3, [r7, #1325]
 463:notoriOS.c    ****             // Print the first 1000 characters of http_request into http_chunk
 464:notoriOS.c    ****             snprintf(http_chunk, MAX_BYTES_SENT, "%s",chunk);
 1493              		.loc 1 464 0
 1494 0256 07F1C800 		add	r0, r7, #200
 1495 025a D7F83435 		ldr	r3, [r7, #1332]
 1496 025e 544A     		ldr	r2, .L46+96
 1497 0260 4FF4FA71 		mov	r1, #500
 1498 0264 FFF7FEFF 		bl	snprintf
 465:notoriOS.c    ****             // Append 1 character "<ctrl+z> escape sequence" to http_request to exit modem command 
 466:notoriOS.c    ****             strncat(http_chunk, "\032", 1); 
 1499              		.loc 1 466 0
 1500 0268 07F1C803 		add	r3, r7, #200
 1501 026c 1846     		mov	r0, r3
 1502 026e FFF7FEFF 		bl	strlen
 1503 0272 0346     		mov	r3, r0
 1504 0274 1A46     		mov	r2, r3
 1505 0276 07F1C803 		add	r3, r7, #200
 1506 027a 1344     		add	r3, r3, r2
 1507 027c 5449     		ldr	r1, .L46+128
 1508 027e 1A46     		mov	r2, r3
 1509 0280 0B46     		mov	r3, r1
 1510 0282 1B88     		ldrh	r3, [r3]	@ unaligned
 1511 0284 1380     		strh	r3, [r2]	@ unaligned
 467:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"chunk %d: %s", packet, http_chunk);
 1512              		.loc 1 467 0
 1513 0286 97F93325 		ldrsb	r2, [r7, #1331]
 1514 028a 07F1C803 		add	r3, r7, #200
 1515 028e 5149     		ldr	r1, .L46+132
 1516 0290 0020     		movs	r0, #0
 1517 0292 FFF7FEFF 		bl	printNotif
 468:notoriOS.c    ****             // Send data to server
 469:notoriOS.c    ****             if ((packet+1) != packets){
 1518              		.loc 1 469 0
 1519 0296 97F93335 		ldrsb	r3, [r7, #1331]
 1520 029a 5A1C     		adds	r2, r3, #1
 1521 029c 97F92C35 		ldrsb	r3, [r7, #1324]
 1522 02a0 9A42     		cmp	r2, r3
 1523 02a2 11D0     		beq	.L40
 470:notoriOS.c    ****                 status = at_write_command(http_chunk, "OK", 5000u);
 1524              		.loc 1 470 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 38


 1525 02a4 07F1C803 		add	r3, r7, #200
 1526 02a8 41F28832 		movw	r2, #5000
 1527 02ac 4149     		ldr	r1, .L46+100
 1528 02ae 1846     		mov	r0, r3
 1529 02b0 FFF7FEFF 		bl	at_write_command
 1530 02b4 0346     		mov	r3, r0
 1531 02b6 87F82D35 		strb	r3, [r7, #1325]
 471:notoriOS.c    ****                 // Move the pointer forward 
 472:notoriOS.c    ****                 chunk = chunk + MAX_BYTES_SENT - 1;
 1532              		.loc 1 472 0
 1533 02ba D7F83435 		ldr	r3, [r7, #1332]
 1534 02be 03F2F313 		addw	r3, r3, #499
 1535 02c2 C7F83435 		str	r3, [r7, #1332]
 1536 02c6 0AE0     		b	.L41
 1537              	.L40:
 473:notoriOS.c    ****             }else{
 474:notoriOS.c    ****                 status = at_write_command(http_chunk, "SRING", 5000u);
 1538              		.loc 1 474 0
 1539 02c8 07F1C803 		add	r3, r7, #200
 1540 02cc 41F28832 		movw	r2, #5000
 1541 02d0 4149     		ldr	r1, .L46+136
 1542 02d2 1846     		mov	r0, r3
 1543 02d4 FFF7FEFF 		bl	at_write_command
 1544 02d8 0346     		mov	r3, r0
 1545 02da 87F82D35 		strb	r3, [r7, #1325]
 1546              	.L41:
 1547              	.LBE6:
 457:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1548              		.loc 1 457 0 discriminator 2
 1549 02de 97F93335 		ldrsb	r3, [r7, #1331]
 1550 02e2 DBB2     		uxtb	r3, r3
 1551 02e4 0133     		adds	r3, r3, #1
 1552 02e6 DBB2     		uxtb	r3, r3
 1553 02e8 87F83335 		strb	r3, [r7, #1331]
 1554              	.L39:
 457:notoriOS.c    ****             // Create character array of 1000 characters for sending chunks of the http_request
 1555              		.loc 1 457 0 is_stmt 0 discriminator 1
 1556 02ec 97F93325 		ldrsb	r2, [r7, #1331]
 1557 02f0 97F92C35 		ldrsb	r3, [r7, #1324]
 1558 02f4 9A42     		cmp	r2, r3
 1559 02f6 A5DB     		blt	.L42
 1560              	.LBE5:
 475:notoriOS.c    ****             }
 476:notoriOS.c    ****             
 477:notoriOS.c    ****         }
 478:notoriOS.c    ****         
 479:notoriOS.c    ****         // Read received buffer
 480:notoriOS.c    ****         // A good write will return code "OS-OK"
 481:notoriOS.c    ****         // AT command #SRECV= is an execution command that permits users to read data arrived throu
 482:notoriOS.c    ****         // = 1 means the UPD information is enabled: data are read just until the end of the UDP da
 483:notoriOS.c    ****         status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 1561              		.loc 1 483 0 is_stmt 1
 1562 02f8 41F28832 		movw	r2, #5000
 1563 02fc 3749     		ldr	r1, .L46+140
 1564 02fe 3848     		ldr	r0, .L46+144
 1565 0300 FFF7FEFF 		bl	at_write_command
 1566 0304 0346     		mov	r3, r0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 39


 1567 0306 87F82D35 		strb	r3, [r7, #1325]
 484:notoriOS.c    ****         //printNotif(NOTIF_TYPE_EVENT,"Received SRECV: %s",uart_received_string);
 485:notoriOS.c    ****     
 486:notoriOS.c    ****   
 487:notoriOS.c    ****         // If it worked, clear the queue and clock how long the end-to-end tx took
 488:notoriOS.c    ****         if(status == 1u){
 1568              		.loc 1 488 0
 1569 030a 97F82D35 		ldrb	r3, [r7, #1325]	@ zero_extendqisi2
 1570 030e 012B     		cmp	r3, #1
 1571 0310 6CD1     		bne	.L43
 1572              	.LBB7:
 489:notoriOS.c    ****             get_updated_parameters_from_malcom();
 1573              		.loc 1 489 0
 1574 0312 FFF7FEFF 		bl	get_updated_parameters_from_malcom
 490:notoriOS.c    ****             Clear_Data_Stack();
 1575              		.loc 1 490 0
 1576 0316 FFF7FEFF 		bl	Clear_Data_Stack
 491:notoriOS.c    ****             int send_time = (int)(getTimeStamp()-(int32)modem_start_time_stamp);
 1577              		.loc 1 491 0
 1578 031a FFF7FEFF 		bl	getTimeStamp
 1579 031e 0246     		mov	r2, r0
 1580 0320 304B     		ldr	r3, .L46+148
 1581 0322 1B68     		ldr	r3, [r3]
 1582 0324 D31A     		subs	r3, r2, r3
 1583 0326 C7F82835 		str	r3, [r7, #1320]
 492:notoriOS.c    ****             char s_send_time[10];
 493:notoriOS.c    ****             snprintf(s_send_time,sizeof(s_send_time),"%d",send_time);
 1584              		.loc 1 493 0
 1585 032a 07F2B440 		addw	r0, r7, #1204
 1586 032e D7F82835 		ldr	r3, [r7, #1320]
 1587 0332 0D4A     		ldr	r2, .L46+24
 1588 0334 0A21     		movs	r1, #10
 1589 0336 FFF7FEFF 		bl	snprintf
 494:notoriOS.c    ****             pushData("modem_tx_time",s_send_time,getTimeStamp());
 1590              		.loc 1 494 0
 1591 033a FFF7FEFF 		bl	getTimeStamp
 1592 033e 0246     		mov	r2, r0
 1593 0340 07F2B443 		addw	r3, r7, #1204
 1594 0344 1946     		mov	r1, r3
 1595 0346 2848     		ldr	r0, .L46+152
 1596 0348 FFF7FEFF 		bl	pushData
 1597              	.LBE7:
 1598 034c 52E0     		b	.L44
 1599              	.L47:
 1600 034e 00BF     		.align	2
 1601              	.L46:
 1602 0350 00000000 		.word	try_counter
 1603 0354 A0010000 		.word	.LC15
 1604 0358 00000000 		.word	http_request
 1605 035c 00000000 		.word	http_body
 1606 0360 00000000 		.word	http_route
 1607 0364 00000000 		.word	modem_stats
 1608 0368 3C000000 		.word	.LC2
 1609 036c B0010000 		.word	.LC16
 1610 0370 B8010000 		.word	.LC17
 1611 0374 00000000 		.word	buffer_overflow
 1612 0378 C4010000 		.word	.LC18
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 40


 1613 037c D4010000 		.word	.LC19
 1614 0380 E8010000 		.word	.LC20
 1615 0384 FC010000 		.word	.LC21
 1616 0388 28000000 		.word	modem_info+40
 1617 038c 28020000 		.word	.LC22
 1618 0390 38020000 		.word	.LC23
 1619 0394 00000000 		.word	system_settings
 1620 0398 48020000 		.word	.LC24
 1621 039c 4C020000 		.word	.LC25
 1622 03a0 50020000 		.word	.LC26
 1623 03a4 58020000 		.word	.LC27
 1624 03a8 60020000 		.word	.LC28
 1625 03ac 78020000 		.word	.LC29
 1626 03b0 94020000 		.word	.LC30
 1627 03b4 98020000 		.word	.LC31
 1628 03b8 D34D6210 		.word	274877907
 1629 03bc 00407F40 		.word	1082081280
 1630 03c0 9C020000 		.word	.LC32
 1631 03c4 B4020000 		.word	.LC33
 1632 03c8 C8020000 		.word	.LC34
 1633 03cc CC020000 		.word	.LC35
 1634 03d0 DC020000 		.word	.LC36
 1635 03d4 E0020000 		.word	.LC37
 1636 03d8 F0020000 		.word	.LC38
 1637 03dc F8020000 		.word	.LC39
 1638 03e0 00030000 		.word	.LC40
 1639 03e4 00000000 		.word	modem_start_time_stamp
 1640 03e8 14030000 		.word	.LC41
 1641              	.L43:
 495:notoriOS.c    ****         }else{
 496:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR, "OS-NO: Could not receive data from server.");
 1642              		.loc 1 496 0
 1643 03ec 0E49     		ldr	r1, .L48
 1644 03ee 0220     		movs	r0, #2
 1645 03f0 FFF7FEFF 		bl	printNotif
 1646              	.L44:
 497:notoriOS.c    ****         }
 498:notoriOS.c    ****          
 499:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 500:notoriOS.c    ****         long network_time = modem_get_network_time();
 1647              		.loc 1 500 0
 1648 03f4 FFF7FEFF 		bl	modem_get_network_time
 1649 03f8 C7F82405 		str	r0, [r7, #1316]
 501:notoriOS.c    ****         if(network_time != 0){
 1650              		.loc 1 501 0
 1651 03fc D7F82435 		ldr	r3, [r7, #1316]
 1652 0400 002B     		cmp	r3, #0
 1653 0402 03D0     		beq	.L45
 502:notoriOS.c    ****            setTime(network_time);
 1654              		.loc 1 502 0
 1655 0404 D7F82405 		ldr	r0, [r7, #1316]
 1656 0408 FFF7FEFF 		bl	setTime
 1657              	.L45:
 503:notoriOS.c    ****         }
 504:notoriOS.c    ****         
 505:notoriOS.c    ****         // If transmitted, flush the data stack and shut down modem
 506:notoriOS.c    ****         // If not -- keep the statck and try next time
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 41


 507:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 508:notoriOS.c    ****         modem_power_down();
 1658              		.loc 1 508 0
 1659 040c FFF7FEFF 		bl	modem_power_down
 509:notoriOS.c    ****         
 510:notoriOS.c    ****         try_counter = 0u;
 1660              		.loc 1 510 0
 1661 0410 064B     		ldr	r3, .L48+4
 1662 0412 0022     		movs	r2, #0
 1663 0414 1A70     		strb	r2, [r3]
 511:notoriOS.c    ****         return 0u;
 1664              		.loc 1 511 0
 1665 0416 0023     		movs	r3, #0
 1666 0418 00E0     		b	.L33
 1667              	.L36:
 1668              	.LBE2:
 512:notoriOS.c    ****     }
 513:notoriOS.c    ****       
 514:notoriOS.c    ****       return 1u; // Not done yet
 1669              		.loc 1 514 0
 1670 041a 0123     		movs	r3, #1
 1671              	.L33:
 515:notoriOS.c    **** }
 1672              		.loc 1 515 0 discriminator 1
 1673 041c 1846     		mov	r0, r3
 1674 041e 07F23C57 		addw	r7, r7, #1340
 1675              		.cfi_def_cfa_offset 12
 1676 0422 BD46     		mov	sp, r7
 1677              		.cfi_def_cfa_register 13
 1678              		@ sp needed
 1679 0424 90BD     		pop	{r4, r7, pc}
 1680              	.L49:
 1681 0426 00BF     		.align	2
 1682              	.L48:
 1683 0428 24030000 		.word	.LC42
 1684 042c 00000000 		.word	try_counter
 1685              		.cfi_endproc
 1686              	.LFE74:
 1687              		.size	syncData, .-syncData
 1688              		.section	.text.configureRemoteParams,"ax",%progbits
 1689              		.align	2
 1690              		.global	configureRemoteParams
 1691              		.thumb
 1692              		.thumb_func
 1693              		.type	configureRemoteParams, %function
 1694              	configureRemoteParams:
 1695              	.LFB75:
 516:notoriOS.c    **** 
 517:notoriOS.c    **** // ==============================================
 518:notoriOS.c    **** // Syncs with cell-tower clock and check meta-DB
 519:notoriOS.c    **** // Returns 0 when done
 520:notoriOS.c    **** // ==============================================
 521:notoriOS.c    **** uint8 configureRemoteParams(){
 1696              		.loc 1 521 0
 1697              		.cfi_startproc
 1698              		@ args = 0, pretend = 0, frame = 8
 1699              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 42


 1700 0000 80B5     		push	{r7, lr}
 1701              		.cfi_def_cfa_offset 8
 1702              		.cfi_offset 7, -8
 1703              		.cfi_offset 14, -4
 1704 0002 82B0     		sub	sp, sp, #8
 1705              		.cfi_def_cfa_offset 16
 1706 0004 00AF     		add	r7, sp, #0
 1707              		.cfi_def_cfa_register 7
 522:notoriOS.c    ****     
 523:notoriOS.c    ****     if(modem_get_state() == MODEM_STATE_OFF){
 1708              		.loc 1 523 0
 1709 0006 FFF7FEFF 		bl	modem_get_state
 1710 000a 0346     		mov	r3, r0
 1711 000c 002B     		cmp	r3, #0
 1712 000e 02D1     		bne	.L51
 524:notoriOS.c    ****         // This puts all the modem points into a state that won't leak power    
 525:notoriOS.c    ****         modem_power_up();
 1713              		.loc 1 525 0
 1714 0010 FFF7FEFF 		bl	modem_power_up
 1715 0014 11E0     		b	.L52
 1716              	.L51:
 526:notoriOS.c    ****             
 527:notoriOS.c    ****     }else if(modem_get_state() == MODEM_STATE_READY){
 1717              		.loc 1 527 0
 1718 0016 FFF7FEFF 		bl	modem_get_state
 1719 001a 0346     		mov	r3, r0
 1720 001c 042B     		cmp	r3, #4
 1721 001e 0CD1     		bne	.L52
 1722              	.LBB8:
 528:notoriOS.c    ****         
 529:notoriOS.c    ****         // This is where we will interfasce with some sort of broker that assings node IDs
 530:notoriOS.c    ****         
 531:notoriOS.c    ****         // Get time, and if it looks good, set the RTC with it
 532:notoriOS.c    ****         long network_time = modem_get_network_time();
 1723              		.loc 1 532 0
 1724 0020 FFF7FEFF 		bl	modem_get_network_time
 1725 0024 7860     		str	r0, [r7, #4]
 533:notoriOS.c    ****         if(network_time != 0){
 1726              		.loc 1 533 0
 1727 0026 7B68     		ldr	r3, [r7, #4]
 1728 0028 002B     		cmp	r3, #0
 1729 002a 02D0     		beq	.L53
 534:notoriOS.c    ****             setTime(network_time);
 1730              		.loc 1 534 0
 1731 002c 7868     		ldr	r0, [r7, #4]
 1732 002e FFF7FEFF 		bl	setTime
 1733              	.L53:
 535:notoriOS.c    ****         }
 536:notoriOS.c    ****         
 537:notoriOS.c    ****         // Get GPS coordinates
 538:notoriOS.c    ****         //gps_t gps = modem_get_gps_coordinates();
 539:notoriOS.c    ****         // Power down the modem -- completely "kill" modem to conserve power
 540:notoriOS.c    ****         modem_power_down();
 1734              		.loc 1 540 0
 1735 0032 FFF7FEFF 		bl	modem_power_down
 541:notoriOS.c    ****         return 0u;
 1736              		.loc 1 541 0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 43


 1737 0036 0023     		movs	r3, #0
 1738 0038 00E0     		b	.L54
 1739              	.L52:
 1740              	.LBE8:
 542:notoriOS.c    ****         
 543:notoriOS.c    ****     }
 544:notoriOS.c    ****     
 545:notoriOS.c    ****     return 1u;
 1741              		.loc 1 545 0
 1742 003a 0123     		movs	r3, #1
 1743              	.L54:
 546:notoriOS.c    **** }
 1744              		.loc 1 546 0
 1745 003c 1846     		mov	r0, r3
 1746 003e 0837     		adds	r7, r7, #8
 1747              		.cfi_def_cfa_offset 8
 1748 0040 BD46     		mov	sp, r7
 1749              		.cfi_def_cfa_register 13
 1750              		@ sp needed
 1751 0042 80BD     		pop	{r7, pc}
 1752              		.cfi_endproc
 1753              	.LFE75:
 1754              		.size	configureRemoteParams, .-configureRemoteParams
 1755              		.section	.rodata
 1756 034f 00       		.align	2
 1757              	.LC43:
 1758 0350 256C6400 		.ascii	"%ld\000"
 1759              		.align	2
 1760              	.LC44:
 1761 0354 612B00   		.ascii	"a+\000"
 1762 0357 00       		.align	2
 1763              	.LC45:
 1764 0358 20736F6E 		.ascii	" sontek, \000"
 1764      74656B2C 
 1764      2000
 1765 0362 0000     		.align	2
 1766              	.LC46:
 1767 0364 0A00     		.ascii	"\012\000"
 1768 0366 0000     		.align	2
 1769              	.LC47:
 1770 0368 736F6E74 		.ascii	"sontek_temp\000"
 1770      656B5F74 
 1770      656D7000 
 1771              		.align	2
 1772              	.LC48:
 1773 0374 736F6E74 		.ascii	"sontek_depth\000"
 1773      656B5F64 
 1773      65707468 
 1773      00
 1774 0381 000000   		.align	2
 1775              	.LC49:
 1776 0384 736F6E74 		.ascii	"sontek_v_mean\000"
 1776      656B5F76 
 1776      5F6D6561 
 1776      6E00
 1777 0392 0000     		.align	2
 1778              	.LC50:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 44


 1779 0394 736F6E74 		.ascii	"sontek_pitch\000"
 1779      656B5F70 
 1779      69746368 
 1779      00
 1780 03a1 000000   		.align	2
 1781              	.LC51:
 1782 03a4 736F6E74 		.ascii	"sontek_roll\000"
 1782      656B5F72 
 1782      6F6C6C00 
 1783              		.align	2
 1784              	.LC52:
 1785 03b0 736F6E74 		.ascii	"sontek_SNR1\000"
 1785      656B5F53 
 1785      4E523100 
 1786              		.align	2
 1787              	.LC53:
 1788 03bc 736F6E74 		.ascii	"sontek_SNR2\000"
 1788      656B5F53 
 1788      4E523200 
 1789              		.align	2
 1790              	.LC54:
 1791 03c8 736F6E74 		.ascii	"sontek_SNR3\000"
 1791      656B5F53 
 1791      4E523300 
 1792              		.align	2
 1793              	.LC55:
 1794 03d4 736F6E74 		.ascii	"sontek_SNR4\000"
 1794      656B5F53 
 1794      4E523400 
 1795              		.align	2
 1796              	.LC56:
 1797 03e0 436F756C 		.ascii	"Could not get valid readings from Sontek.\000"
 1797      64206E6F 
 1797      74206765 
 1797      74207661 
 1797      6C696420 
 1798 040a 0000     		.align	2
 1799              	.LC57:
 1800 040c 765F6261 		.ascii	"v_bat=%s\000"
 1800      743D2573 
 1800      00
 1801 0415 000000   		.align	2
 1802              	.LC58:
 1803 0418 765F6261 		.ascii	"v_bat\000"
 1803      7400
 1804 041e 0000     		.align	2
 1805              	.LC59:
 1806 0420 2000     		.ascii	" \000"
 1807 0422 0000     		.align	2
 1808              	.LC60:
 1809 0424 20766261 		.ascii	" vbat: \000"
 1809      743A2000 
 1810              		.align	2
 1811              	.LC61:
 1812 042c 70726573 		.ascii	"pressure_current=%s\000"
 1812      73757265 
 1812      5F637572 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 45


 1812      72656E74 
 1812      3D257300 
 1813              		.align	2
 1814              	.LC62:
 1815 0440 70726573 		.ascii	"pressure_current\000"
 1815      73757265 
 1815      5F637572 
 1815      72656E74 
 1815      00
 1816 0451 000000   		.align	2
 1817              	.LC63:
 1818 0454 20707265 		.ascii	" pressure_current: \000"
 1818      73737572 
 1818      655F6375 
 1818      7272656E 
 1818      743A2000 
 1819              		.align	2
 1820              	.LC64:
 1821 0468 70726573 		.ascii	"pressure_depth=%s\000"
 1821      73757265 
 1821      5F646570 
 1821      74683D25 
 1821      7300
 1822 047a 0000     		.align	2
 1823              	.LC65:
 1824 047c 70726573 		.ascii	"pressure_depth\000"
 1824      73757265 
 1824      5F646570 
 1824      746800
 1825 048b 00       		.align	2
 1826              	.LC66:
 1827 048c 20707265 		.ascii	" pressure_depth: \000"
 1827      73737572 
 1827      655F6465 
 1827      7074683A 
 1827      2000
 1828 049e 0000     		.align	2
 1829              	.LC67:
 1830 04a0 436F756C 		.ascii	"Could not get valid readings from ADC.\000"
 1830      64206E6F 
 1830      74206765 
 1830      74207661 
 1830      6C696420 
 1831              		.section	.text.makeMeasurements,"ax",%progbits
 1832              		.align	2
 1833              		.global	makeMeasurements
 1834              		.thumb
 1835              		.thumb_func
 1836              		.type	makeMeasurements, %function
 1837              	makeMeasurements:
 1838              	.LFB76:
 547:notoriOS.c    **** 
 548:notoriOS.c    **** 
 549:notoriOS.c    **** // ==============================================
 550:notoriOS.c    **** // Make sensor measurements, which will be handeled by another cutions
 551:notoriOS.c    **** // Returns 0 when finished
 552:notoriOS.c    **** // ==============================================
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 46


 553:notoriOS.c    **** uint8 makeMeasurements(){
 1839              		.loc 1 553 0
 1840              		.cfi_startproc
 1841              		@ args = 0, pretend = 0, frame = 584
 1842              		@ frame_needed = 1, uses_anonymous_args = 0
 1843 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1844              		.cfi_def_cfa_offset 36
 1845              		.cfi_offset 4, -36
 1846              		.cfi_offset 5, -32
 1847              		.cfi_offset 6, -28
 1848              		.cfi_offset 7, -24
 1849              		.cfi_offset 8, -20
 1850              		.cfi_offset 9, -16
 1851              		.cfi_offset 10, -12
 1852              		.cfi_offset 11, -8
 1853              		.cfi_offset 14, -4
 1854 0004 ADF5497D 		sub	sp, sp, #804
 1855              		.cfi_def_cfa_offset 840
 1856 0008 36AF     		add	r7, sp, #216
 1857              		.cfi_def_cfa 7, 624
 554:notoriOS.c    ****     
 555:notoriOS.c    ****     // Get clock time and save to timeStamp
 556:notoriOS.c    ****     long timeStamp = getTimeStamp();
 1858              		.loc 1 556 0
 1859 000a FFF7FEFF 		bl	getTimeStamp
 1860 000e C7F84402 		str	r0, [r7, #580]
 557:notoriOS.c    ****     char c_timeStamp[32];
 558:notoriOS.c    ****     snprintf(c_timeStamp,sizeof(c_timeStamp),"%ld",timeStamp);
 1861              		.loc 1 558 0
 1862 0012 07F50970 		add	r0, r7, #548
 1863 0016 D7F84432 		ldr	r3, [r7, #580]
 1864 001a 084A     		ldr	r2, .L62
 1865 001c 2021     		movs	r1, #32
 1866 001e FFF7FEFF 		bl	snprintf
 559:notoriOS.c    ****     
 560:notoriOS.c    ****     // Holds string for value that will be written 
 561:notoriOS.c    ****     char value[DATA_MAX_KEY_LENGTH];
 562:notoriOS.c    ****     char big_value[DATA_MAX_KEY_LENGTH*10];
 563:notoriOS.c    ****     
 564:notoriOS.c    ****     // If node type is depth node, take level sensor measurements
 565:notoriOS.c    **** //    if(updatable_parameters.node_type == NODE_TYPE_DEPTH){
 566:notoriOS.c    **** //        
 567:notoriOS.c    **** //        // level_sensor_t is a new data type we defined in level_sensor.h. We then use that data 
 568:notoriOS.c    **** //        level_sensor_t m_level_sensor;
 569:notoriOS.c    **** //        
 570:notoriOS.c    **** //        // Take level sensor readings and save them to m_level_sensor
 571:notoriOS.c    **** //        m_level_sensor = level_sensor_take_reading();
 572:notoriOS.c    **** //    
 573:notoriOS.c    **** //        // If the number of valid level sensor readings is greater than 0, then print the level s
 574:notoriOS.c    **** //        if(m_level_sensor.num_valid_readings > 0){
 575:notoriOS.c    **** //            snprintf(value,sizeof(value),"%d",m_level_sensor.level_reading);
 576:notoriOS.c    **** //            printNotif(NOTIF_TYPE_EVENT,"maxbotix_depth=%s",value);
 577:notoriOS.c    **** //            pushData("maxbotix_depth",value,timeStamp);
 578:notoriOS.c    **** //            
 579:notoriOS.c    **** //            // Print measurement to SD card to file called data.txt
 580:notoriOS.c    **** //            SD_write(Data_fileName, "a+", c_timeStamp);
 581:notoriOS.c    **** //            SD_write(Data_fileName, "a+", " maxbotix_depth: ");
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 47


 582:notoriOS.c    **** //            SD_write(Data_fileName, "a+", value);
 583:notoriOS.c    **** //            SD_write(Data_fileName, "a+", " ");
 584:notoriOS.c    **** //        }else{
 585:notoriOS.c    **** //            printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Maxbotix.");
 586:notoriOS.c    **** //            //pushData("maxbotix_depth","error",timeStamp);
 587:notoriOS.c    **** //        }
 588:notoriOS.c    **** //    }else if(updatable_parameters.node_type == NODE_TYPE_SONTEK_FLOW){
 589:notoriOS.c    ****         
 590:notoriOS.c    ****         // sontek_t is a new data type we defined in sontek.h. We then use that data type to define
 591:notoriOS.c    ****         sontek_t m_sontek;
 592:notoriOS.c    ****         
 593:notoriOS.c    ****         // Take sontek readings and save them to m_sontek
 594:notoriOS.c    ****         m_sontek = sontek_take_reading();
 1867              		.loc 1 594 0
 1868 0022 07F1D803 		add	r3, r7, #216
 1869 0026 1846     		mov	r0, r3
 1870 0028 FFF7FEFF 		bl	sontek_take_reading
 595:notoriOS.c    ****         
 596:notoriOS.c    ****         // If valid flag is 1, then print the sontek readings and push the data to the data wheel
 597:notoriOS.c    ****         if(m_sontek.valid == 1){
 1871              		.loc 1 597 0
 1872 002c 07F1D803 		add	r3, r7, #216
 1873 0030 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1874 0032 012B     		cmp	r3, #1
 1875 0034 40F05E82 		bne	.L56
 1876 0038 02E0     		b	.L63
 1877              	.L64:
 1878 003a 00BF     		.align	2
 1879              	.L62:
 1880 003c 50030000 		.word	.LC43
 1881              	.L63:
 598:notoriOS.c    ****             
 599:notoriOS.c    ****             //Print all measurements to serial and the SD card to file called data.txt
 600:notoriOS.c    ****             snprintf(big_value,sizeof(big_value),"%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f
 1882              		.loc 1 600 0
 1883 0040 07F1D803 		add	r3, r7, #216
 1884 0044 5B68     		ldr	r3, [r3, #4]	@ float
 1885 0046 1846     		mov	r0, r3
 1886 0048 FFF7FEFF 		bl	__aeabi_f2d
 1887 004c C7E92C01 		strd	r0, [r7, #176]
 1888 0050 07F1D803 		add	r3, r7, #216
 1889 0054 9B68     		ldr	r3, [r3, #8]	@ float
 1890 0056 1846     		mov	r0, r3
 1891 0058 FFF7FEFF 		bl	__aeabi_f2d
 1892 005c C7E92A01 		strd	r0, [r7, #168]
 1893 0060 07F1D803 		add	r3, r7, #216
 1894 0064 DB68     		ldr	r3, [r3, #12]	@ float
 1895 0066 1846     		mov	r0, r3
 1896 0068 FFF7FEFF 		bl	__aeabi_f2d
 1897 006c C7E92801 		strd	r0, [r7, #160]
 1898 0070 07F1D803 		add	r3, r7, #216
 1899 0074 1B69     		ldr	r3, [r3, #16]	@ float
 1900 0076 1846     		mov	r0, r3
 1901 0078 FFF7FEFF 		bl	__aeabi_f2d
 1902 007c C7E92601 		strd	r0, [r7, #152]
 1903 0080 07F1D803 		add	r3, r7, #216
 1904 0084 5B69     		ldr	r3, [r3, #20]	@ float
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 48


 1905 0086 1846     		mov	r0, r3
 1906 0088 FFF7FEFF 		bl	__aeabi_f2d
 1907 008c C7E92401 		strd	r0, [r7, #144]
 1908 0090 07F1D803 		add	r3, r7, #216
 1909 0094 9B69     		ldr	r3, [r3, #24]	@ float
 1910 0096 1846     		mov	r0, r3
 1911 0098 FFF7FEFF 		bl	__aeabi_f2d
 1912 009c C7E92201 		strd	r0, [r7, #136]
 1913 00a0 07F1D803 		add	r3, r7, #216
 1914 00a4 DB69     		ldr	r3, [r3, #28]	@ float
 1915 00a6 1846     		mov	r0, r3
 1916 00a8 FFF7FEFF 		bl	__aeabi_f2d
 1917 00ac C7E92001 		strd	r0, [r7, #128]
 1918 00b0 07F1D803 		add	r3, r7, #216
 1919 00b4 1B6A     		ldr	r3, [r3, #32]	@ float
 1920 00b6 1846     		mov	r0, r3
 1921 00b8 FFF7FEFF 		bl	__aeabi_f2d
 1922 00bc C7E91E01 		strd	r0, [r7, #120]
 1923 00c0 07F1D803 		add	r3, r7, #216
 1924 00c4 5B6A     		ldr	r3, [r3, #36]	@ float
 1925 00c6 1846     		mov	r0, r3
 1926 00c8 FFF7FEFF 		bl	__aeabi_f2d
 1927 00cc C7E91C01 		strd	r0, [r7, #112]
 1928 00d0 07F1D803 		add	r3, r7, #216
 1929 00d4 9B6A     		ldr	r3, [r3, #40]	@ float
 1930 00d6 1846     		mov	r0, r3
 1931 00d8 FFF7FEFF 		bl	__aeabi_f2d
 1932 00dc C7E91A01 		strd	r0, [r7, #104]
 1933 00e0 07F1D803 		add	r3, r7, #216
 1934 00e4 DB6A     		ldr	r3, [r3, #44]	@ float
 1935 00e6 1846     		mov	r0, r3
 1936 00e8 FFF7FEFF 		bl	__aeabi_f2d
 1937 00ec C7E91801 		strd	r0, [r7, #96]
 1938 00f0 07F1D803 		add	r3, r7, #216
 1939 00f4 1B6B     		ldr	r3, [r3, #48]	@ float
 1940 00f6 1846     		mov	r0, r3
 1941 00f8 FFF7FEFF 		bl	__aeabi_f2d
 1942 00fc C7E91601 		strd	r0, [r7, #88]
 1943 0100 07F1D803 		add	r3, r7, #216
 1944 0104 5B6B     		ldr	r3, [r3, #52]	@ float
 1945 0106 1846     		mov	r0, r3
 1946 0108 FFF7FEFF 		bl	__aeabi_f2d
 1947 010c C7E91401 		strd	r0, [r7, #80]
 1948 0110 07F1D803 		add	r3, r7, #216
 1949 0114 9B6B     		ldr	r3, [r3, #56]	@ float
 1950 0116 1846     		mov	r0, r3
 1951 0118 FFF7FEFF 		bl	__aeabi_f2d
 1952 011c C7E91201 		strd	r0, [r7, #72]
 1953 0120 07F1D803 		add	r3, r7, #216
 1954 0124 DB6B     		ldr	r3, [r3, #60]	@ float
 1955 0126 1846     		mov	r0, r3
 1956 0128 FFF7FEFF 		bl	__aeabi_f2d
 1957 012c C7E91001 		strd	r0, [r7, #64]
 1958 0130 07F1D803 		add	r3, r7, #216
 1959 0134 1B6C     		ldr	r3, [r3, #64]	@ float
 1960 0136 1846     		mov	r0, r3
 1961 0138 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 49


 1962 013c C7E90E01 		strd	r0, [r7, #56]
 1963 0140 07F1D803 		add	r3, r7, #216
 1964 0144 5B6C     		ldr	r3, [r3, #68]	@ float
 1965 0146 1846     		mov	r0, r3
 1966 0148 FFF7FEFF 		bl	__aeabi_f2d
 1967 014c C7E90C01 		strd	r0, [r7, #48]
 1968 0150 07F1D803 		add	r3, r7, #216
 1969 0154 9B6C     		ldr	r3, [r3, #72]	@ float
 1970 0156 1846     		mov	r0, r3
 1971 0158 FFF7FEFF 		bl	__aeabi_f2d
 1972 015c C7E90A01 		strd	r0, [r7, #40]
 1973 0160 07F1D803 		add	r3, r7, #216
 1974 0164 DB6C     		ldr	r3, [r3, #76]	@ float
 1975 0166 1846     		mov	r0, r3
 1976 0168 FFF7FEFF 		bl	__aeabi_f2d
 1977 016c C7E90801 		strd	r0, [r7, #32]
 1978 0170 07F1D803 		add	r3, r7, #216
 1979 0174 1B6D     		ldr	r3, [r3, #80]	@ float
 1980 0176 1846     		mov	r0, r3
 1981 0178 FFF7FEFF 		bl	__aeabi_f2d
 1982 017c C7E90601 		strd	r0, [r7, #24]
 1983 0180 07F1D803 		add	r3, r7, #216
 1984 0184 5B6D     		ldr	r3, [r3, #84]	@ float
 1985 0186 1846     		mov	r0, r3
 1986 0188 FFF7FEFF 		bl	__aeabi_f2d
 1987 018c C7E90401 		strd	r0, [r7, #16]
 1988 0190 07F1D803 		add	r3, r7, #216
 1989 0194 9B6D     		ldr	r3, [r3, #88]	@ float
 1990 0196 1846     		mov	r0, r3
 1991 0198 FFF7FEFF 		bl	__aeabi_f2d
 1992 019c C7E90201 		strd	r0, [r7, #8]
 1993 01a0 07F1D803 		add	r3, r7, #216
 1994 01a4 DB6D     		ldr	r3, [r3, #92]	@ float
 1995 01a6 1846     		mov	r0, r3
 1996 01a8 FFF7FEFF 		bl	__aeabi_f2d
 1997 01ac C7E90001 		strd	r0, [r7]
 1998 01b0 07F1D803 		add	r3, r7, #216
 1999 01b4 1B6E     		ldr	r3, [r3, #96]	@ float
 2000 01b6 1846     		mov	r0, r3
 2001 01b8 FFF7FEFF 		bl	__aeabi_f2d
 2002 01bc 8246     		mov	r10, r0
 2003 01be 8B46     		mov	fp, r1
 2004 01c0 07F1D803 		add	r3, r7, #216
 2005 01c4 5B6E     		ldr	r3, [r3, #100]	@ float
 2006 01c6 1846     		mov	r0, r3
 2007 01c8 FFF7FEFF 		bl	__aeabi_f2d
 2008 01cc 8046     		mov	r8, r0
 2009 01ce 8946     		mov	r9, r1
 2010 01d0 07F1D803 		add	r3, r7, #216
 2011 01d4 9B6E     		ldr	r3, [r3, #104]	@ float
 2012 01d6 1846     		mov	r0, r3
 2013 01d8 FFF7FEFF 		bl	__aeabi_f2d
 2014 01dc 0546     		mov	r5, r0
 2015 01de 0E46     		mov	r6, r1
 2016 01e0 07F1D803 		add	r3, r7, #216
 2017 01e4 DB6E     		ldr	r3, [r3, #108]	@ float
 2018 01e6 1846     		mov	r0, r3
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 50


 2019 01e8 FFF7FEFF 		bl	__aeabi_f2d
 2020 01ec 0346     		mov	r3, r0
 2021 01ee 0C46     		mov	r4, r1
 2022 01f0 07F5A470 		add	r0, r7, #328
 2023 01f4 CDE93434 		strd	r3, [sp, #208]
 2024 01f8 CDE93256 		strd	r5, [sp, #200]
 2025 01fc CDE93089 		strd	r8, [sp, #192]
 2026 0200 CDE92EAB 		strd	r10, [sp, #184]
 2027 0204 D7E90034 		ldrd	r3, [r7]
 2028 0208 CDE92C34 		strd	r3, [sp, #176]
 2029 020c D7E90234 		ldrd	r3, [r7, #8]
 2030 0210 CDE92A34 		strd	r3, [sp, #168]
 2031 0214 D7E90434 		ldrd	r3, [r7, #16]
 2032 0218 CDE92834 		strd	r3, [sp, #160]
 2033 021c D7E90634 		ldrd	r3, [r7, #24]
 2034 0220 CDE92634 		strd	r3, [sp, #152]
 2035 0224 D7E90834 		ldrd	r3, [r7, #32]
 2036 0228 CDE92434 		strd	r3, [sp, #144]
 2037 022c D7E90A34 		ldrd	r3, [r7, #40]
 2038 0230 CDE92234 		strd	r3, [sp, #136]
 2039 0234 D7E90C34 		ldrd	r3, [r7, #48]
 2040 0238 CDE92034 		strd	r3, [sp, #128]
 2041 023c D7E90E34 		ldrd	r3, [r7, #56]
 2042 0240 CDE91E34 		strd	r3, [sp, #120]
 2043 0244 D7E91034 		ldrd	r3, [r7, #64]
 2044 0248 CDE91C34 		strd	r3, [sp, #112]
 2045 024c D7E91234 		ldrd	r3, [r7, #72]
 2046 0250 CDE91A34 		strd	r3, [sp, #104]
 2047 0254 D7E91434 		ldrd	r3, [r7, #80]
 2048 0258 CDE91834 		strd	r3, [sp, #96]
 2049 025c D7E91634 		ldrd	r3, [r7, #88]
 2050 0260 CDE91634 		strd	r3, [sp, #88]
 2051 0264 D7E91834 		ldrd	r3, [r7, #96]
 2052 0268 CDE91434 		strd	r3, [sp, #80]
 2053 026c D7E91A34 		ldrd	r3, [r7, #104]
 2054 0270 CDE91234 		strd	r3, [sp, #72]
 2055 0274 D7E91C34 		ldrd	r3, [r7, #112]
 2056 0278 CDE91034 		strd	r3, [sp, #64]
 2057 027c D7E91E34 		ldrd	r3, [r7, #120]
 2058 0280 CDE90E34 		strd	r3, [sp, #56]
 2059 0284 D7E92034 		ldrd	r3, [r7, #128]
 2060 0288 CDE90C34 		strd	r3, [sp, #48]
 2061 028c D7E92234 		ldrd	r3, [r7, #136]
 2062 0290 CDE90A34 		strd	r3, [sp, #40]
 2063 0294 D7E92434 		ldrd	r3, [r7, #144]
 2064 0298 CDE90834 		strd	r3, [sp, #32]
 2065 029c D7E92634 		ldrd	r3, [r7, #152]
 2066 02a0 CDE90634 		strd	r3, [sp, #24]
 2067 02a4 D7E92834 		ldrd	r3, [r7, #160]
 2068 02a8 CDE90434 		strd	r3, [sp, #16]
 2069 02ac D7E92A34 		ldrd	r3, [r7, #168]
 2070 02b0 CDE90234 		strd	r3, [sp, #8]
 2071 02b4 D7E92C34 		ldrd	r3, [r7, #176]
 2072 02b8 CDE90034 		strd	r3, [sp]
 2073 02bc 7D4A     		ldr	r2, .L65
 2074 02be C821     		movs	r1, #200
 2075 02c0 FFF7FEFF 		bl	snprintf
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 51


 601:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"sontek=%s",big_value);
 2076              		.loc 1 601 0
 2077 02c4 07F5A473 		add	r3, r7, #328
 2078 02c8 1A46     		mov	r2, r3
 2079 02ca 7B49     		ldr	r1, .L65+4
 2080 02cc 0020     		movs	r0, #0
 2081 02ce FFF7FEFF 		bl	printNotif
 602:notoriOS.c    **** 
 603:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 2082              		.loc 1 603 0
 2083 02d2 07F50973 		add	r3, r7, #548
 2084 02d6 1A46     		mov	r2, r3
 2085 02d8 7849     		ldr	r1, .L65+8
 2086 02da 7948     		ldr	r0, .L65+12
 2087 02dc FFF7FEFF 		bl	SD_write
 604:notoriOS.c    ****             SD_write(Data_fileName, "a+", " sontek, ");
 2088              		.loc 1 604 0
 2089 02e0 784A     		ldr	r2, .L65+16
 2090 02e2 7649     		ldr	r1, .L65+8
 2091 02e4 7648     		ldr	r0, .L65+12
 2092 02e6 FFF7FEFF 		bl	SD_write
 605:notoriOS.c    ****             SD_write(Data_fileName, "a+", big_value);
 2093              		.loc 1 605 0
 2094 02ea 07F5A473 		add	r3, r7, #328
 2095 02ee 1A46     		mov	r2, r3
 2096 02f0 7249     		ldr	r1, .L65+8
 2097 02f2 7348     		ldr	r0, .L65+12
 2098 02f4 FFF7FEFF 		bl	SD_write
 606:notoriOS.c    ****             SD_write(Data_fileName, "a+", "\n");    //new line
 2099              		.loc 1 606 0
 2100 02f8 734A     		ldr	r2, .L65+20
 2101 02fa 7049     		ldr	r1, .L65+8
 2102 02fc 7048     		ldr	r0, .L65+12
 2103 02fe FFF7FEFF 		bl	SD_write
 607:notoriOS.c    ****             
 608:notoriOS.c    ****             //send specific measurements to influx
 609:notoriOS.c    ****             //temperature - 7
 610:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.values[7]);
 2104              		.loc 1 610 0
 2105 0302 07F1D803 		add	r3, r7, #216
 2106 0306 1B6A     		ldr	r3, [r3, #32]	@ float
 2107 0308 1846     		mov	r0, r3
 2108 030a FFF7FEFF 		bl	__aeabi_f2d
 2109 030e 0346     		mov	r3, r0
 2110 0310 0C46     		mov	r4, r1
 2111 0312 07F50470 		add	r0, r7, #528
 2112 0316 CDE90034 		strd	r3, [sp]
 2113 031a 6C4A     		ldr	r2, .L65+24
 2114 031c 1421     		movs	r1, #20
 2115 031e FFF7FEFF 		bl	snprintf
 611:notoriOS.c    ****             pushData("sontek_temp",value,timeStamp);
 2116              		.loc 1 611 0
 2117 0322 07F50473 		add	r3, r7, #528
 2118 0326 D7F84422 		ldr	r2, [r7, #580]
 2119 032a 1946     		mov	r1, r3
 2120 032c 6848     		ldr	r0, .L65+28
 2121 032e FFF7FEFF 		bl	pushData
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 52


 612:notoriOS.c    ****             //depth - 4
 613:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.values[4]);
 2122              		.loc 1 613 0
 2123 0332 07F1D803 		add	r3, r7, #216
 2124 0336 5B69     		ldr	r3, [r3, #20]	@ float
 2125 0338 1846     		mov	r0, r3
 2126 033a FFF7FEFF 		bl	__aeabi_f2d
 2127 033e 0346     		mov	r3, r0
 2128 0340 0C46     		mov	r4, r1
 2129 0342 07F50470 		add	r0, r7, #528
 2130 0346 CDE90034 		strd	r3, [sp]
 2131 034a 604A     		ldr	r2, .L65+24
 2132 034c 1421     		movs	r1, #20
 2133 034e FFF7FEFF 		bl	snprintf
 614:notoriOS.c    ****             pushData("sontek_depth",value,timeStamp);
 2134              		.loc 1 614 0
 2135 0352 07F50473 		add	r3, r7, #528
 2136 0356 D7F84422 		ldr	r2, [r7, #580]
 2137 035a 1946     		mov	r1, r3
 2138 035c 5D48     		ldr	r0, .L65+32
 2139 035e FFF7FEFF 		bl	pushData
 615:notoriOS.c    ****             //mean velocity - 2
 616:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.values[2]);
 2140              		.loc 1 616 0
 2141 0362 07F1D803 		add	r3, r7, #216
 2142 0366 DB68     		ldr	r3, [r3, #12]	@ float
 2143 0368 1846     		mov	r0, r3
 2144 036a FFF7FEFF 		bl	__aeabi_f2d
 2145 036e 0346     		mov	r3, r0
 2146 0370 0C46     		mov	r4, r1
 2147 0372 07F50470 		add	r0, r7, #528
 2148 0376 CDE90034 		strd	r3, [sp]
 2149 037a 544A     		ldr	r2, .L65+24
 2150 037c 1421     		movs	r1, #20
 2151 037e FFF7FEFF 		bl	snprintf
 617:notoriOS.c    ****             pushData("sontek_v_mean",value,timeStamp);
 2152              		.loc 1 617 0
 2153 0382 07F50473 		add	r3, r7, #528
 2154 0386 D7F84422 		ldr	r2, [r7, #580]
 2155 038a 1946     		mov	r1, r3
 2156 038c 5248     		ldr	r0, .L65+36
 2157 038e FFF7FEFF 		bl	pushData
 618:notoriOS.c    ****             //pitch - 14
 619:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.values[14]);
 2158              		.loc 1 619 0
 2159 0392 07F1D803 		add	r3, r7, #216
 2160 0396 DB6B     		ldr	r3, [r3, #60]	@ float
 2161 0398 1846     		mov	r0, r3
 2162 039a FFF7FEFF 		bl	__aeabi_f2d
 2163 039e 0346     		mov	r3, r0
 2164 03a0 0C46     		mov	r4, r1
 2165 03a2 07F50470 		add	r0, r7, #528
 2166 03a6 CDE90034 		strd	r3, [sp]
 2167 03aa 484A     		ldr	r2, .L65+24
 2168 03ac 1421     		movs	r1, #20
 2169 03ae FFF7FEFF 		bl	snprintf
 620:notoriOS.c    ****             pushData("sontek_pitch",value,timeStamp);
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 53


 2170              		.loc 1 620 0
 2171 03b2 07F50473 		add	r3, r7, #528
 2172 03b6 D7F84422 		ldr	r2, [r7, #580]
 2173 03ba 1946     		mov	r1, r3
 2174 03bc 4748     		ldr	r0, .L65+40
 2175 03be FFF7FEFF 		bl	pushData
 621:notoriOS.c    ****             //roll - 15
 622:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.values[15]);
 2176              		.loc 1 622 0
 2177 03c2 07F1D803 		add	r3, r7, #216
 2178 03c6 1B6C     		ldr	r3, [r3, #64]	@ float
 2179 03c8 1846     		mov	r0, r3
 2180 03ca FFF7FEFF 		bl	__aeabi_f2d
 2181 03ce 0346     		mov	r3, r0
 2182 03d0 0C46     		mov	r4, r1
 2183 03d2 07F50470 		add	r0, r7, #528
 2184 03d6 CDE90034 		strd	r3, [sp]
 2185 03da 3C4A     		ldr	r2, .L65+24
 2186 03dc 1421     		movs	r1, #20
 2187 03de FFF7FEFF 		bl	snprintf
 623:notoriOS.c    ****             pushData("sontek_roll",value,timeStamp);
 2188              		.loc 1 623 0
 2189 03e2 07F50473 		add	r3, r7, #528
 2190 03e6 D7F84422 		ldr	r2, [r7, #580]
 2191 03ea 1946     		mov	r1, r3
 2192 03ec 3C48     		ldr	r0, .L65+44
 2193 03ee FFF7FEFF 		bl	pushData
 624:notoriOS.c    ****             //SNR1 - 23
 625:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.values[23]);
 2194              		.loc 1 625 0
 2195 03f2 07F1D803 		add	r3, r7, #216
 2196 03f6 1B6E     		ldr	r3, [r3, #96]	@ float
 2197 03f8 1846     		mov	r0, r3
 2198 03fa FFF7FEFF 		bl	__aeabi_f2d
 2199 03fe 0346     		mov	r3, r0
 2200 0400 0C46     		mov	r4, r1
 2201 0402 07F50470 		add	r0, r7, #528
 2202 0406 CDE90034 		strd	r3, [sp]
 2203 040a 304A     		ldr	r2, .L65+24
 2204 040c 1421     		movs	r1, #20
 2205 040e FFF7FEFF 		bl	snprintf
 626:notoriOS.c    ****             pushData("sontek_SNR1",value,timeStamp);
 2206              		.loc 1 626 0
 2207 0412 07F50473 		add	r3, r7, #528
 2208 0416 D7F84422 		ldr	r2, [r7, #580]
 2209 041a 1946     		mov	r1, r3
 2210 041c 3148     		ldr	r0, .L65+48
 2211 041e FFF7FEFF 		bl	pushData
 627:notoriOS.c    ****             //SNR2 -24
 628:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.values[24]);
 2212              		.loc 1 628 0
 2213 0422 07F1D803 		add	r3, r7, #216
 2214 0426 5B6E     		ldr	r3, [r3, #100]	@ float
 2215 0428 1846     		mov	r0, r3
 2216 042a FFF7FEFF 		bl	__aeabi_f2d
 2217 042e 0346     		mov	r3, r0
 2218 0430 0C46     		mov	r4, r1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 54


 2219 0432 07F50470 		add	r0, r7, #528
 2220 0436 CDE90034 		strd	r3, [sp]
 2221 043a 244A     		ldr	r2, .L65+24
 2222 043c 1421     		movs	r1, #20
 2223 043e FFF7FEFF 		bl	snprintf
 629:notoriOS.c    ****             pushData("sontek_SNR2",value,timeStamp);
 2224              		.loc 1 629 0
 2225 0442 07F50473 		add	r3, r7, #528
 2226 0446 D7F84422 		ldr	r2, [r7, #580]
 2227 044a 1946     		mov	r1, r3
 2228 044c 2648     		ldr	r0, .L65+52
 2229 044e FFF7FEFF 		bl	pushData
 630:notoriOS.c    ****             //SNR3 - 25
 631:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.values[25]);
 2230              		.loc 1 631 0
 2231 0452 07F1D803 		add	r3, r7, #216
 2232 0456 9B6E     		ldr	r3, [r3, #104]	@ float
 2233 0458 1846     		mov	r0, r3
 2234 045a FFF7FEFF 		bl	__aeabi_f2d
 2235 045e 0346     		mov	r3, r0
 2236 0460 0C46     		mov	r4, r1
 2237 0462 07F50470 		add	r0, r7, #528
 2238 0466 CDE90034 		strd	r3, [sp]
 2239 046a 184A     		ldr	r2, .L65+24
 2240 046c 1421     		movs	r1, #20
 2241 046e FFF7FEFF 		bl	snprintf
 632:notoriOS.c    ****             pushData("sontek_SNR3",value,timeStamp);
 2242              		.loc 1 632 0
 2243 0472 07F50473 		add	r3, r7, #528
 2244 0476 D7F84422 		ldr	r2, [r7, #580]
 2245 047a 1946     		mov	r1, r3
 2246 047c 1B48     		ldr	r0, .L65+56
 2247 047e FFF7FEFF 		bl	pushData
 633:notoriOS.c    ****             //SNR4 - 26
 634:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_sontek.values[26]);
 2248              		.loc 1 634 0
 2249 0482 07F1D803 		add	r3, r7, #216
 2250 0486 DB6E     		ldr	r3, [r3, #108]	@ float
 2251 0488 1846     		mov	r0, r3
 2252 048a FFF7FEFF 		bl	__aeabi_f2d
 2253 048e 0346     		mov	r3, r0
 2254 0490 0C46     		mov	r4, r1
 2255 0492 07F50470 		add	r0, r7, #528
 2256 0496 CDE90034 		strd	r3, [sp]
 2257 049a 0C4A     		ldr	r2, .L65+24
 2258 049c 1421     		movs	r1, #20
 2259 049e FFF7FEFF 		bl	snprintf
 635:notoriOS.c    ****             pushData("sontek_SNR4",value,timeStamp);
 2260              		.loc 1 635 0
 2261 04a2 07F50473 		add	r3, r7, #528
 2262 04a6 D7F84422 		ldr	r2, [r7, #580]
 2263 04aa 1946     		mov	r1, r3
 2264 04ac 1048     		ldr	r0, .L65+60
 2265 04ae FFF7FEFF 		bl	pushData
 2266 04b2 23E0     		b	.L57
 2267              	.L66:
 2268              		.align	2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 55


 2269              	.L65:
 2270 04b4 48000000 		.word	.LC4
 2271 04b8 D0000000 		.word	.LC5
 2272 04bc 54030000 		.word	.LC44
 2273 04c0 00000000 		.word	Data_fileName
 2274 04c4 58030000 		.word	.LC45
 2275 04c8 64030000 		.word	.LC46
 2276 04cc DC000000 		.word	.LC6
 2277 04d0 68030000 		.word	.LC47
 2278 04d4 74030000 		.word	.LC48
 2279 04d8 84030000 		.word	.LC49
 2280 04dc 94030000 		.word	.LC50
 2281 04e0 A4030000 		.word	.LC51
 2282 04e4 B0030000 		.word	.LC52
 2283 04e8 BC030000 		.word	.LC53
 2284 04ec C8030000 		.word	.LC54
 2285 04f0 D4030000 		.word	.LC55
 2286              	.L56:
 636:notoriOS.c    **** 
 637:notoriOS.c    ****         }else{
 638:notoriOS.c    ****             printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from Sontek.");
 2287              		.loc 1 638 0
 2288 04f4 6C49     		ldr	r1, .L67
 2289 04f6 0220     		movs	r0, #2
 2290 04f8 FFF7FEFF 		bl	printNotif
 2291              	.L57:
 639:notoriOS.c    ****             //pushData("maxbotix_depth","error",timeStamp);
 640:notoriOS.c    ****         }
 641:notoriOS.c    ****     //}         -------------------- to overwrite node types
 642:notoriOS.c    ****     
 643:notoriOS.c    ****     // voltage_t is a new data type we defined in voltages.h. We then use that data type to define 
 644:notoriOS.c    ****     voltage_t m_voltage;
 645:notoriOS.c    ****     
 646:notoriOS.c    ****     // Take voltage readings and save them to m_voltage
 647:notoriOS.c    ****     m_voltage = voltage_take_readings();
 2292              		.loc 1 647 0
 2293 04fc 07F1C403 		add	r3, r7, #196
 2294 0500 1846     		mov	r0, r3
 2295 0502 FFF7FEFF 		bl	voltage_take_readings
 648:notoriOS.c    ****     
 649:notoriOS.c    ****     // If the reading is valid, print the voltage battery and pressure transducer reading and push 
 650:notoriOS.c    ****     if(m_voltage.valid){
 2296              		.loc 1 650 0
 2297 0506 07F1C403 		add	r3, r7, #196
 2298 050a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2299 050c 002B     		cmp	r3, #0
 2300 050e 00F0BF80 		beq	.L58
 651:notoriOS.c    ****         // battery voltage data
 652:notoriOS.c    ****         snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_battery);
 2301              		.loc 1 652 0
 2302 0512 07F1C403 		add	r3, r7, #196
 2303 0516 1B68     		ldr	r3, [r3]	@ float
 2304 0518 1846     		mov	r0, r3
 2305 051a FFF7FEFF 		bl	__aeabi_f2d
 2306 051e 0346     		mov	r3, r0
 2307 0520 0C46     		mov	r4, r1
 2308 0522 07F50470 		add	r0, r7, #528
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 56


 2309 0526 CDE90034 		strd	r3, [sp]
 2310 052a 604A     		ldr	r2, .L67+4
 2311 052c 1421     		movs	r1, #20
 2312 052e FFF7FEFF 		bl	snprintf
 653:notoriOS.c    ****         printNotif(NOTIF_TYPE_EVENT,"v_bat=%s",value);
 2313              		.loc 1 653 0
 2314 0532 07F50473 		add	r3, r7, #528
 2315 0536 1A46     		mov	r2, r3
 2316 0538 5D49     		ldr	r1, .L67+8
 2317 053a 0020     		movs	r0, #0
 2318 053c FFF7FEFF 		bl	printNotif
 654:notoriOS.c    ****         pushData("v_bat",value,timeStamp);
 2319              		.loc 1 654 0
 2320 0540 07F50473 		add	r3, r7, #528
 2321 0544 D7F84422 		ldr	r2, [r7, #580]
 2322 0548 1946     		mov	r1, r3
 2323 054a 5A48     		ldr	r0, .L67+12
 2324 054c FFF7FEFF 		bl	pushData
 655:notoriOS.c    ****         
 656:notoriOS.c    ****         // Print measurement to SD card to file called data.txt
 657:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 2325              		.loc 1 657 0
 2326 0550 594A     		ldr	r2, .L67+16
 2327 0552 5A49     		ldr	r1, .L67+20
 2328 0554 5A48     		ldr	r0, .L67+24
 2329 0556 FFF7FEFF 		bl	SD_write
 658:notoriOS.c    ****         SD_write(Data_fileName, "a+", c_timeStamp);
 2330              		.loc 1 658 0
 2331 055a 07F50973 		add	r3, r7, #548
 2332 055e 1A46     		mov	r2, r3
 2333 0560 5649     		ldr	r1, .L67+20
 2334 0562 5748     		ldr	r0, .L67+24
 2335 0564 FFF7FEFF 		bl	SD_write
 659:notoriOS.c    ****         SD_write(Data_fileName, "a+", " vbat: ");
 2336              		.loc 1 659 0
 2337 0568 564A     		ldr	r2, .L67+28
 2338 056a 5449     		ldr	r1, .L67+20
 2339 056c 5448     		ldr	r0, .L67+24
 2340 056e FFF7FEFF 		bl	SD_write
 660:notoriOS.c    ****         SD_write(Data_fileName, "a+", value);
 2341              		.loc 1 660 0
 2342 0572 07F50473 		add	r3, r7, #528
 2343 0576 1A46     		mov	r2, r3
 2344 0578 5049     		ldr	r1, .L67+20
 2345 057a 5148     		ldr	r0, .L67+24
 2346 057c FFF7FEFF 		bl	SD_write
 661:notoriOS.c    ****         SD_write(Data_fileName, "a+", " ");
 2347              		.loc 1 661 0
 2348 0580 4D4A     		ldr	r2, .L67+16
 2349 0582 4E49     		ldr	r1, .L67+20
 2350 0584 4E48     		ldr	r0, .L67+24
 2351 0586 FFF7FEFF 		bl	SD_write
 662:notoriOS.c    ****         
 663:notoriOS.c    ****         // If node type is green infrastructure node, take pressure transducer measurements
 664:notoriOS.c    ****         if(updatable_parameters.node_type == NODE_TYPE_GREENINFRASTRUCTURE){
 2352              		.loc 1 664 0
 2353 058a 4F4B     		ldr	r3, .L67+32
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 57


 2354 058c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2355 058e 012B     		cmp	r3, #1
 2356 0590 40F08280 		bne	.L60
 2357              	.LBB9:
 665:notoriOS.c    ****             
 666:notoriOS.c    ****             // pressure transducer voltage (V) data
 667:notoriOS.c    ****             //snprintf(value,sizeof(value),"%.2f",m_voltage.voltage_pressure);
 668:notoriOS.c    ****             //printNotif(NOTIF_TYPE_EVENT,"pressure_voltage=%s",value);
 669:notoriOS.c    ****             //pushData("pressure_voltage",value,timeStamp);
 670:notoriOS.c    ****             
 671:notoriOS.c    ****             // pressure_t is a new data type we defined in voltages.h. We then use that data type t
 672:notoriOS.c    ****             pressure_t m_pressure;
 673:notoriOS.c    ****             
 674:notoriOS.c    ****             // Make pressure transducer calculators for current (mA) and depth
 675:notoriOS.c    ****             m_pressure = pressure_calculations(m_voltage);
 2358              		.loc 1 675 0
 2359 0594 07F1BC04 		add	r4, r7, #188
 2360 0598 07F1C403 		add	r3, r7, #196
 2361 059c 6D46     		mov	r5, sp
 2362 059e 03F10C02 		add	r2, r3, #12
 2363 05a2 92E80300 		ldmia	r2, {r0, r1}
 2364 05a6 85E80300 		stmia	r5, {r0, r1}
 2365 05aa 0ECB     		ldmia	r3, {r1, r2, r3}
 2366 05ac 2046     		mov	r0, r4
 2367 05ae FFF7FEFF 		bl	pressure_calculations
 676:notoriOS.c    ****             
 677:notoriOS.c    ****             // pressure transducer current (mA) data
 678:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_current);
 2368              		.loc 1 678 0
 2369 05b2 07F1BC03 		add	r3, r7, #188
 2370 05b6 1B68     		ldr	r3, [r3]	@ float
 2371 05b8 1846     		mov	r0, r3
 2372 05ba FFF7FEFF 		bl	__aeabi_f2d
 2373 05be 0346     		mov	r3, r0
 2374 05c0 0C46     		mov	r4, r1
 2375 05c2 07F50470 		add	r0, r7, #528
 2376 05c6 CDE90034 		strd	r3, [sp]
 2377 05ca 384A     		ldr	r2, .L67+4
 2378 05cc 1421     		movs	r1, #20
 2379 05ce FFF7FEFF 		bl	snprintf
 679:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_current=%s",value);
 2380              		.loc 1 679 0
 2381 05d2 07F50473 		add	r3, r7, #528
 2382 05d6 1A46     		mov	r2, r3
 2383 05d8 3C49     		ldr	r1, .L67+36
 2384 05da 0020     		movs	r0, #0
 2385 05dc FFF7FEFF 		bl	printNotif
 680:notoriOS.c    ****             pushData("pressure_current",value,timeStamp);
 2386              		.loc 1 680 0
 2387 05e0 07F50473 		add	r3, r7, #528
 2388 05e4 D7F84422 		ldr	r2, [r7, #580]
 2389 05e8 1946     		mov	r1, r3
 2390 05ea 3948     		ldr	r0, .L67+40
 2391 05ec FFF7FEFF 		bl	pushData
 681:notoriOS.c    ****             
 682:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 683:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 58


 2392              		.loc 1 683 0
 2393 05f0 314A     		ldr	r2, .L67+16
 2394 05f2 3249     		ldr	r1, .L67+20
 2395 05f4 3248     		ldr	r0, .L67+24
 2396 05f6 FFF7FEFF 		bl	SD_write
 684:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 2397              		.loc 1 684 0
 2398 05fa 07F50973 		add	r3, r7, #548
 2399 05fe 1A46     		mov	r2, r3
 2400 0600 2E49     		ldr	r1, .L67+20
 2401 0602 2F48     		ldr	r0, .L67+24
 2402 0604 FFF7FEFF 		bl	SD_write
 685:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_current: ");
 2403              		.loc 1 685 0
 2404 0608 324A     		ldr	r2, .L67+44
 2405 060a 2C49     		ldr	r1, .L67+20
 2406 060c 2C48     		ldr	r0, .L67+24
 2407 060e FFF7FEFF 		bl	SD_write
 686:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 2408              		.loc 1 686 0
 2409 0612 07F50473 		add	r3, r7, #528
 2410 0616 1A46     		mov	r2, r3
 2411 0618 2849     		ldr	r1, .L67+20
 2412 061a 2948     		ldr	r0, .L67+24
 2413 061c FFF7FEFF 		bl	SD_write
 687:notoriOS.c    ****             
 688:notoriOS.c    ****             // pressure transducer depth (ft) data
 689:notoriOS.c    ****             snprintf(value,sizeof(value),"%.2f",m_pressure.pressure_depth);
 2414              		.loc 1 689 0
 2415 0620 07F1BC03 		add	r3, r7, #188
 2416 0624 5B68     		ldr	r3, [r3, #4]	@ float
 2417 0626 1846     		mov	r0, r3
 2418 0628 FFF7FEFF 		bl	__aeabi_f2d
 2419 062c 0346     		mov	r3, r0
 2420 062e 0C46     		mov	r4, r1
 2421 0630 07F50470 		add	r0, r7, #528
 2422 0634 CDE90034 		strd	r3, [sp]
 2423 0638 1C4A     		ldr	r2, .L67+4
 2424 063a 1421     		movs	r1, #20
 2425 063c FFF7FEFF 		bl	snprintf
 690:notoriOS.c    ****             printNotif(NOTIF_TYPE_EVENT,"pressure_depth=%s",value);
 2426              		.loc 1 690 0
 2427 0640 07F50473 		add	r3, r7, #528
 2428 0644 1A46     		mov	r2, r3
 2429 0646 2449     		ldr	r1, .L67+48
 2430 0648 0020     		movs	r0, #0
 2431 064a FFF7FEFF 		bl	printNotif
 691:notoriOS.c    ****             pushData("pressure_depth",value,timeStamp);
 2432              		.loc 1 691 0
 2433 064e 07F50473 		add	r3, r7, #528
 2434 0652 D7F84422 		ldr	r2, [r7, #580]
 2435 0656 1946     		mov	r1, r3
 2436 0658 2048     		ldr	r0, .L67+52
 2437 065a FFF7FEFF 		bl	pushData
 692:notoriOS.c    ****             
 693:notoriOS.c    ****             // Print measurement to SD card to file called data.txt
 694:notoriOS.c    ****             SD_write(Data_fileName, "a+", " ");
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 59


 2438              		.loc 1 694 0
 2439 065e 164A     		ldr	r2, .L67+16
 2440 0660 1649     		ldr	r1, .L67+20
 2441 0662 1748     		ldr	r0, .L67+24
 2442 0664 FFF7FEFF 		bl	SD_write
 695:notoriOS.c    ****             SD_write(Data_fileName, "a+", c_timeStamp);
 2443              		.loc 1 695 0
 2444 0668 07F50973 		add	r3, r7, #548
 2445 066c 1A46     		mov	r2, r3
 2446 066e 1349     		ldr	r1, .L67+20
 2447 0670 1348     		ldr	r0, .L67+24
 2448 0672 FFF7FEFF 		bl	SD_write
 696:notoriOS.c    ****             SD_write(Data_fileName, "a+", " pressure_depth: ");
 2449              		.loc 1 696 0
 2450 0676 1A4A     		ldr	r2, .L67+56
 2451 0678 1049     		ldr	r1, .L67+20
 2452 067a 1148     		ldr	r0, .L67+24
 2453 067c FFF7FEFF 		bl	SD_write
 697:notoriOS.c    ****             SD_write(Data_fileName, "a+", value);
 2454              		.loc 1 697 0
 2455 0680 07F50473 		add	r3, r7, #528
 2456 0684 1A46     		mov	r2, r3
 2457 0686 0D49     		ldr	r1, .L67+20
 2458 0688 0D48     		ldr	r0, .L67+24
 2459 068a FFF7FEFF 		bl	SD_write
 2460 068e 03E0     		b	.L60
 2461              	.L58:
 2462              	.LBE9:
 698:notoriOS.c    ****         }    
 699:notoriOS.c    ****     }else{
 700:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Could not get valid readings from ADC.");
 2463              		.loc 1 700 0
 2464 0690 1449     		ldr	r1, .L67+60
 2465 0692 0220     		movs	r0, #2
 2466 0694 FFF7FEFF 		bl	printNotif
 2467              	.L60:
 701:notoriOS.c    ****     }
 702:notoriOS.c    ****     
 703:notoriOS.c    ****     return 0u;
 2468              		.loc 1 703 0
 2469 0698 0023     		movs	r3, #0
 704:notoriOS.c    **** }
 2470              		.loc 1 704 0
 2471 069a 1846     		mov	r0, r3
 2472 069c 07F51377 		add	r7, r7, #588
 2473              		.cfi_def_cfa_offset 36
 2474 06a0 BD46     		mov	sp, r7
 2475              		.cfi_def_cfa_register 13
 2476              		@ sp needed
 2477 06a2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2478              	.L68:
 2479 06a6 00BF     		.align	2
 2480              	.L67:
 2481 06a8 E0030000 		.word	.LC56
 2482 06ac DC000000 		.word	.LC6
 2483 06b0 0C040000 		.word	.LC57
 2484 06b4 18040000 		.word	.LC58
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 60


 2485 06b8 20040000 		.word	.LC59
 2486 06bc 54030000 		.word	.LC44
 2487 06c0 00000000 		.word	Data_fileName
 2488 06c4 24040000 		.word	.LC60
 2489 06c8 00000000 		.word	updatable_parameters
 2490 06cc 2C040000 		.word	.LC61
 2491 06d0 40040000 		.word	.LC62
 2492 06d4 54040000 		.word	.LC63
 2493 06d8 68040000 		.word	.LC64
 2494 06dc 7C040000 		.word	.LC65
 2495 06e0 8C040000 		.word	.LC66
 2496 06e4 A0040000 		.word	.LC67
 2497              		.cfi_endproc
 2498              	.LFE76:
 2499              		.size	makeMeasurements, .-makeMeasurements
 2500              		.section	.rodata
 2501 04c7 00       		.align	2
 2502              	.LC68:
 2503 04c8 4572726F 		.ascii	"Error setting system time.\000"
 2503      72207365 
 2503      7474696E 
 2503      67207379 
 2503      7374656D 
 2504              		.section	.text.setTime,"ax",%progbits
 2505              		.align	2
 2506              		.global	setTime
 2507              		.thumb
 2508              		.thumb_func
 2509              		.type	setTime, %function
 2510              	setTime:
 2511              	.LFB77:
 705:notoriOS.c    **** 
 706:notoriOS.c    **** // ==============================================
 707:notoriOS.c    **** // Set the system time
 708:notoriOS.c    **** // Returns 0 if there is an error, returns 1 if successful
 709:notoriOS.c    **** // ==============================================
 710:notoriOS.c    **** uint8 setTime(long timeStamp){
 2512              		.loc 1 710 0
 2513              		.cfi_startproc
 2514              		@ args = 0, pretend = 0, frame = 24
 2515              		@ frame_needed = 1, uses_anonymous_args = 0
 2516 0000 80B5     		push	{r7, lr}
 2517              		.cfi_def_cfa_offset 8
 2518              		.cfi_offset 7, -8
 2519              		.cfi_offset 14, -4
 2520 0002 86B0     		sub	sp, sp, #24
 2521              		.cfi_def_cfa_offset 32
 2522 0004 00AF     		add	r7, sp, #0
 2523              		.cfi_def_cfa_register 7
 2524 0006 7860     		str	r0, [r7, #4]
 711:notoriOS.c    ****     // If timestamp is <= 0 print error statement and return 0
 712:notoriOS.c    ****     if(timeStamp <=0){
 2525              		.loc 1 712 0
 2526 0008 7B68     		ldr	r3, [r7, #4]
 2527 000a 002B     		cmp	r3, #0
 2528 000c 05DC     		bgt	.L70
 713:notoriOS.c    ****         printNotif(NOTIF_TYPE_ERROR,"Error setting system time.");
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 61


 2529              		.loc 1 713 0
 2530 000e 1849     		ldr	r1, .L72
 2531 0010 0220     		movs	r0, #2
 2532 0012 FFF7FEFF 		bl	printNotif
 714:notoriOS.c    ****         return 0;  
 2533              		.loc 1 714 0
 2534 0016 0023     		movs	r3, #0
 2535 0018 25E0     		b	.L71
 2536              	.L70:
 715:notoriOS.c    ****     }
 716:notoriOS.c    ****     // Create a new pointer t of data structure tm
 717:notoriOS.c    ****     struct tm * t;
 718:notoriOS.c    ****     // Converts a calendar time (pointed to by timer) and returns a pointer to a structure containi
 719:notoriOS.c    ****     t = gmtime(&timeStamp);
 2537              		.loc 1 719 0
 2538 001a 3B1D     		adds	r3, r7, #4
 2539 001c 1846     		mov	r0, r3
 2540 001e FFF7FEFF 		bl	gmtime
 2541 0022 7861     		str	r0, [r7, #20]
 720:notoriOS.c    ****     
 721:notoriOS.c    ****     // Create variable localTime of data structure RTC_TIME_DATE
 722:notoriOS.c    ****     RTC_TIME_DATE localTime;
 723:notoriOS.c    ****     localTime.Sec = t->tm_sec;
 2542              		.loc 1 723 0
 2543 0024 7B69     		ldr	r3, [r7, #20]
 2544 0026 1B68     		ldr	r3, [r3]
 2545 0028 DBB2     		uxtb	r3, r3
 2546 002a 3B72     		strb	r3, [r7, #8]
 724:notoriOS.c    ****     localTime.Min = t->tm_min;
 2547              		.loc 1 724 0
 2548 002c 7B69     		ldr	r3, [r7, #20]
 2549 002e 5B68     		ldr	r3, [r3, #4]
 2550 0030 DBB2     		uxtb	r3, r3
 2551 0032 7B72     		strb	r3, [r7, #9]
 725:notoriOS.c    ****     localTime.Hour = t->tm_hour;
 2552              		.loc 1 725 0
 2553 0034 7B69     		ldr	r3, [r7, #20]
 2554 0036 9B68     		ldr	r3, [r3, #8]
 2555 0038 DBB2     		uxtb	r3, r3
 2556 003a BB72     		strb	r3, [r7, #10]
 726:notoriOS.c    ****     localTime.Year = t->tm_year + 1900;
 2557              		.loc 1 726 0
 2558 003c 7B69     		ldr	r3, [r7, #20]
 2559 003e 5B69     		ldr	r3, [r3, #20]
 2560 0040 9BB2     		uxth	r3, r3
 2561 0042 03F26C73 		addw	r3, r3, #1900
 2562 0046 9BB2     		uxth	r3, r3
 2563 0048 7B82     		strh	r3, [r7, #18]	@ movhi
 727:notoriOS.c    ****     localTime.Month = t->tm_mon;
 2564              		.loc 1 727 0
 2565 004a 7B69     		ldr	r3, [r7, #20]
 2566 004c 1B69     		ldr	r3, [r3, #16]
 2567 004e DBB2     		uxtb	r3, r3
 2568 0050 3B74     		strb	r3, [r7, #16]
 728:notoriOS.c    ****     localTime.DayOfMonth = t->tm_mday;
 2569              		.loc 1 728 0
 2570 0052 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 62


 2571 0054 DB68     		ldr	r3, [r3, #12]
 2572 0056 DBB2     		uxtb	r3, r3
 2573 0058 3B73     		strb	r3, [r7, #12]
 729:notoriOS.c    **** 
 730:notoriOS.c    ****     // Writes time and date values as current time and date.
 731:notoriOS.c    ****     RTC_WriteTime(&localTime);
 2574              		.loc 1 731 0
 2575 005a 07F10803 		add	r3, r7, #8
 2576 005e 1846     		mov	r0, r3
 2577 0060 FFF7FEFF 		bl	RTC_WriteTime
 732:notoriOS.c    ****     
 733:notoriOS.c    ****     // Return 1 when the system time was set properly.
 734:notoriOS.c    ****     return 1;
 2578              		.loc 1 734 0
 2579 0064 0123     		movs	r3, #1
 2580              	.L71:
 735:notoriOS.c    **** }
 2581              		.loc 1 735 0
 2582 0066 1846     		mov	r0, r3
 2583 0068 1837     		adds	r7, r7, #24
 2584              		.cfi_def_cfa_offset 8
 2585 006a BD46     		mov	sp, r7
 2586              		.cfi_def_cfa_register 13
 2587              		@ sp needed
 2588 006c 80BD     		pop	{r7, pc}
 2589              	.L73:
 2590 006e 00BF     		.align	2
 2591              	.L72:
 2592 0070 C8040000 		.word	.LC68
 2593              		.cfi_endproc
 2594              	.LFE77:
 2595              		.size	setTime, .-setTime
 2596              		.section	.rodata
 2597 04e3 00       		.align	2
 2598              	.LC69:
 2599 04e4 75706772 		.ascii	"upgrade.hex\000"
 2599      6164652E 
 2599      68657800 
 2600              		.section	.text.upgraded,"ax",%progbits
 2601              		.align	2
 2602              		.global	upgraded
 2603              		.thumb
 2604              		.thumb_func
 2605              		.type	upgraded, %function
 2606              	upgraded:
 2607              	.LFB78:
 736:notoriOS.c    **** 
 737:notoriOS.c    **** //downloads and stores files on SD card
 738:notoriOS.c    **** 
 739:notoriOS.c    **** 
 740:notoriOS.c    **** 
 741:notoriOS.c    **** // ==============================================
 742:notoriOS.c    **** // Will they love it, will they hate it
 743:notoriOS.c    **** // Never fade it, I evade it
 744:notoriOS.c    **** // Cause I never really want to complicate it
 745:notoriOS.c    **** //      - Logic, Upgraded (2015)
 746:notoriOS.c    **** //
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 63


 747:notoriOS.c    **** // downloads new firmware, stores it on SD card, and reboots the system to allow bootloader 
 748:notoriOS.c    **** // returns 0 if modem is connected, 1 if the file downlaod failed, and does not return otherwise (b
 749:notoriOS.c    **** // ==============================================
 750:notoriOS.c    **** 
 751:notoriOS.c    **** uint8 upgraded(char *host, int port,  char *route){
 2608              		.loc 1 751 0
 2609              		.cfi_startproc
 2610              		@ args = 0, pretend = 0, frame = 232
 2611              		@ frame_needed = 1, uses_anonymous_args = 0
 2612 0000 80B5     		push	{r7, lr}
 2613              		.cfi_def_cfa_offset 8
 2614              		.cfi_offset 7, -8
 2615              		.cfi_offset 14, -4
 2616 0002 C0B0     		sub	sp, sp, #256
 2617              		.cfi_def_cfa_offset 264
 2618 0004 06AF     		add	r7, sp, #24
 2619              		.cfi_def_cfa 7, 240
 2620 0006 F860     		str	r0, [r7, #12]
 2621 0008 B960     		str	r1, [r7, #8]
 2622 000a 7A60     		str	r2, [r7, #4]
 752:notoriOS.c    ****     
 753:notoriOS.c    ****     uint8 upgrade_status = 0;
 2623              		.loc 1 753 0
 2624 000c 0023     		movs	r3, #0
 2625 000e 87F8E730 		strb	r3, [r7, #231]
 754:notoriOS.c    ****     
 755:notoriOS.c    ****    //AGPS will only work if we're connected to network, so don't call this fuction otherwise
 756:notoriOS.c    ****     if(modem_state != MODEM_STATE_READY){
 2626              		.loc 1 756 0
 2627 0012 384B     		ldr	r3, .L78
 2628 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2629 0016 042B     		cmp	r3, #4
 2630 0018 02D0     		beq	.L75
 757:notoriOS.c    ****         return upgrade_status;//where valid = 0
 2631              		.loc 1 757 0
 2632 001a 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2633 001e 65E0     		b	.L77
 2634              	.L75:
 758:notoriOS.c    ****     }
 759:notoriOS.c    ****     
 760:notoriOS.c    ****     char fileName[] = "upgrade.hex";
 2635              		.loc 1 760 0
 2636 0020 354A     		ldr	r2, .L78+4
 2637 0022 07F1D803 		add	r3, r7, #216
 2638 0026 07CA     		ldmia	r2, {r0, r1, r2}
 2639 0028 83E80700 		stmia	r3, {r0, r1, r2}
 761:notoriOS.c    ****     //delete file, if one exisits already
 762:notoriOS.c    ****     SD_rmfile(fileName);
 2640              		.loc 1 762 0
 2641 002c 07F1D803 		add	r3, r7, #216
 2642 0030 1846     		mov	r0, r3
 2643 0032 FFF7FEFF 		bl	SD_rmfile
 763:notoriOS.c    ****     
 764:notoriOS.c    ****     // Create http request
 765:notoriOS.c    ****     construct_generic_HTTP_request(http_request,http_body,host,route,port,"POST","Close","",0,"1.1"
 2644              		.loc 1 765 0
 2645 0036 314B     		ldr	r3, .L78+8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 64


 2646 0038 0593     		str	r3, [sp, #20]
 2647 003a 0023     		movs	r3, #0
 2648 003c 0493     		str	r3, [sp, #16]
 2649 003e 304B     		ldr	r3, .L78+12
 2650 0040 0393     		str	r3, [sp, #12]
 2651 0042 304B     		ldr	r3, .L78+16
 2652 0044 0293     		str	r3, [sp, #8]
 2653 0046 304B     		ldr	r3, .L78+20
 2654 0048 0193     		str	r3, [sp, #4]
 2655 004a BB68     		ldr	r3, [r7, #8]
 2656 004c 0093     		str	r3, [sp]
 2657 004e 7B68     		ldr	r3, [r7, #4]
 2658 0050 FA68     		ldr	r2, [r7, #12]
 2659 0052 2E49     		ldr	r1, .L78+24
 2660 0054 2E48     		ldr	r0, .L78+28
 2661 0056 FFF7FEFF 		bl	construct_generic_HTTP_request
 766:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"Full HTTP Request: %s", http_request);
 2662              		.loc 1 766 0
 2663 005a 2D4A     		ldr	r2, .L78+28
 2664 005c 2D49     		ldr	r1, .L78+32
 2665 005e 0020     		movs	r0, #0
 2666 0060 FFF7FEFF 		bl	printNotif
 767:notoriOS.c    ****     // Create array portConfig of size 200 characters
 768:notoriOS.c    ****     char portConfig[200];
 769:notoriOS.c    ****     // Print port configurations
 770:notoriOS.c    ****     snprintf(portConfig,sizeof(portConfig),"AT#SD=1,0,%d,\"%s\",0,0,1\r",port,host);
 2667              		.loc 1 770 0
 2668 0064 07F11000 		add	r0, r7, #16
 2669 0068 FB68     		ldr	r3, [r7, #12]
 2670 006a 0093     		str	r3, [sp]
 2671 006c BB68     		ldr	r3, [r7, #8]
 2672 006e 2A4A     		ldr	r2, .L78+36
 2673 0070 C821     		movs	r1, #200
 2674 0072 FFF7FEFF 		bl	snprintf
 771:notoriOS.c    ****     printNotif(NOTIF_TYPE_EVENT,"%s",portConfig);
 2675              		.loc 1 771 0
 2676 0076 07F11003 		add	r3, r7, #16
 2677 007a 1A46     		mov	r2, r3
 2678 007c 2749     		ldr	r1, .L78+40
 2679 007e 0020     		movs	r0, #0
 2680 0080 FFF7FEFF 		bl	printNotif
 772:notoriOS.c    ****     // AT command to configure the port
 773:notoriOS.c    ****     upgrade_status = at_write_command(portConfig,"OK",10000u);
 2681              		.loc 1 773 0
 2682 0084 07F11003 		add	r3, r7, #16
 2683 0088 42F21072 		movw	r2, #10000
 2684 008c 2449     		ldr	r1, .L78+44
 2685 008e 1846     		mov	r0, r3
 2686 0090 FFF7FEFF 		bl	at_write_command
 2687 0094 0346     		mov	r3, r0
 2688 0096 87F8E730 		strb	r3, [r7, #231]
 774:notoriOS.c    ****     // AT command #SSEND= is an execution command that permits, while the modul eis in command mode
 775:notoriOS.c    ****     // To complete the operation, send Ctrl-Z char to exit
 776:notoriOS.c    ****     upgrade_status = at_write_command("AT#SSEND=1\r\n",   ">", 1000u);
 2689              		.loc 1 776 0
 2690 009a 4FF47A72 		mov	r2, #1000
 2691 009e 2149     		ldr	r1, .L78+48
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 65


 2692 00a0 2148     		ldr	r0, .L78+52
 2693 00a2 FFF7FEFF 		bl	at_write_command
 2694 00a6 0346     		mov	r3, r0
 2695 00a8 87F8E730 		strb	r3, [r7, #231]
 777:notoriOS.c    ****     // Append <ctrl+z> escape sequence to http_request to exit modem command line
 778:notoriOS.c    ****     strncat(http_request, "\032", 1); 
 2696              		.loc 1 778 0
 2697 00ac 1848     		ldr	r0, .L78+28
 2698 00ae FFF7FEFF 		bl	strlen
 2699 00b2 0346     		mov	r3, r0
 2700 00b4 1A46     		mov	r2, r3
 2701 00b6 164B     		ldr	r3, .L78+28
 2702 00b8 1344     		add	r3, r3, r2
 2703 00ba 1C49     		ldr	r1, .L78+56
 2704 00bc 1A46     		mov	r2, r3
 2705 00be 0B46     		mov	r3, r1
 2706 00c0 1B88     		ldrh	r3, [r3]	@ unaligned
 2707 00c2 1380     		strh	r3, [r2]	@ unaligned
 779:notoriOS.c    ****     // AT command to send http request
 780:notoriOS.c    ****     upgrade_status = at_write_command(http_request, "OK", 5000u);
 2708              		.loc 1 780 0
 2709 00c4 41F28832 		movw	r2, #5000
 2710 00c8 1549     		ldr	r1, .L78+44
 2711 00ca 1148     		ldr	r0, .L78+28
 2712 00cc FFF7FEFF 		bl	at_write_command
 2713 00d0 0346     		mov	r3, r0
 2714 00d2 87F8E730 		strb	r3, [r7, #231]
 781:notoriOS.c    ****     // AT command #SRECV= is an execution command that permits users to read data arrived through a
 782:notoriOS.c    ****     // = 1 means the UPD information is enabled: data are read just until the end of the UDP datagr
 783:notoriOS.c    ****     upgrade_status = at_write_command("AT#SRECV=1,1000\r","OS-OK",5000u);
 2715              		.loc 1 783 0
 2716 00d6 41F28832 		movw	r2, #5000
 2717 00da 1549     		ldr	r1, .L78+60
 2718 00dc 1548     		ldr	r0, .L78+64
 2719 00de FFF7FEFF 		bl	at_write_command
 2720 00e2 0346     		mov	r3, r0
 2721 00e4 87F8E730 		strb	r3, [r7, #231]
 784:notoriOS.c    ****     //SD_write(fileName,"w+",uart_received_string);
 785:notoriOS.c    ****     
 786:notoriOS.c    ****     
 787:notoriOS.c    ****     return upgrade_status;
 2722              		.loc 1 787 0
 2723 00e8 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 2724              	.L77:
 788:notoriOS.c    ****     
 789:notoriOS.c    **** }
 2725              		.loc 1 789 0 discriminator 1
 2726 00ec 1846     		mov	r0, r3
 2727 00ee E837     		adds	r7, r7, #232
 2728              		.cfi_def_cfa_offset 8
 2729 00f0 BD46     		mov	sp, r7
 2730              		.cfi_def_cfa_register 13
 2731              		@ sp needed
 2732 00f2 80BD     		pop	{r7, pc}
 2733              	.L79:
 2734              		.align	2
 2735              	.L78:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 66


 2736 00f4 00000000 		.word	modem_state
 2737 00f8 E4040000 		.word	.LC69
 2738 00fc 48020000 		.word	.LC24
 2739 0100 4C020000 		.word	.LC25
 2740 0104 50020000 		.word	.LC26
 2741 0108 58020000 		.word	.LC27
 2742 010c 00000000 		.word	http_body
 2743 0110 00000000 		.word	http_request
 2744 0114 60020000 		.word	.LC28
 2745 0118 78020000 		.word	.LC29
 2746 011c 94020000 		.word	.LC30
 2747 0120 98020000 		.word	.LC31
 2748 0124 C8020000 		.word	.LC34
 2749 0128 CC020000 		.word	.LC35
 2750 012c DC020000 		.word	.LC36
 2751 0130 F8020000 		.word	.LC39
 2752 0134 00030000 		.word	.LC40
 2753              		.cfi_endproc
 2754              	.LFE78:
 2755              		.size	upgraded, .-upgraded
 2756              		.text
 2757              	.Letext0:
 2758              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2759              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2760              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2761              		.file 5 "Generated_Source\\PSoC5/RTC.h"
 2762              		.file 6 "testing.h"
 2763              		.file 7 "sontek.h"
 2764              		.file 8 "voltages.h"
 2765              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2766              		.file 10 "data.h"
 2767              		.file 11 "modem.h"
 2768              		.file 12 "notoriOS.h"
 2769              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 2770              		.section	.debug_info,"",%progbits
 2771              	.Ldebug_info0:
 2772 0000 0B0C0000 		.4byte	0xc0b
 2773 0004 0400     		.2byte	0x4
 2774 0006 00000000 		.4byte	.Ldebug_abbrev0
 2775 000a 04       		.byte	0x4
 2776 000b 01       		.uleb128 0x1
 2777 000c 54000000 		.4byte	.LASF156
 2778 0010 0C       		.byte	0xc
 2779 0011 31070000 		.4byte	.LASF157
 2780 0015 A4020000 		.4byte	.LASF158
 2781 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2782 001d 00000000 		.4byte	0
 2783 0021 00000000 		.4byte	.Ldebug_line0
 2784 0025 02       		.uleb128 0x2
 2785 0026 01       		.byte	0x1
 2786 0027 06       		.byte	0x6
 2787 0028 30000000 		.4byte	.LASF0
 2788 002c 02       		.uleb128 0x2
 2789 002d 01       		.byte	0x1
 2790 002e 08       		.byte	0x8
 2791 002f 57050000 		.4byte	.LASF1
 2792 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 67


 2793 0034 02       		.byte	0x2
 2794 0035 05       		.byte	0x5
 2795 0036 E0030000 		.4byte	.LASF2
 2796 003a 02       		.uleb128 0x2
 2797 003b 02       		.byte	0x2
 2798 003c 07       		.byte	0x7
 2799 003d 4B020000 		.4byte	.LASF3
 2800 0041 03       		.uleb128 0x3
 2801 0042 AD060000 		.4byte	.LASF9
 2802 0046 02       		.byte	0x2
 2803 0047 3F       		.byte	0x3f
 2804 0048 4C000000 		.4byte	0x4c
 2805 004c 02       		.uleb128 0x2
 2806 004d 04       		.byte	0x4
 2807 004e 05       		.byte	0x5
 2808 004f E5010000 		.4byte	.LASF4
 2809 0053 02       		.uleb128 0x2
 2810 0054 04       		.byte	0x4
 2811 0055 07       		.byte	0x7
 2812 0056 1D030000 		.4byte	.LASF5
 2813 005a 02       		.uleb128 0x2
 2814 005b 08       		.byte	0x8
 2815 005c 05       		.byte	0x5
 2816 005d 40010000 		.4byte	.LASF6
 2817 0061 02       		.uleb128 0x2
 2818 0062 08       		.byte	0x8
 2819 0063 07       		.byte	0x7
 2820 0064 E8000000 		.4byte	.LASF7
 2821 0068 04       		.uleb128 0x4
 2822 0069 04       		.byte	0x4
 2823 006a 05       		.byte	0x5
 2824 006b 696E7400 		.ascii	"int\000"
 2825 006f 02       		.uleb128 0x2
 2826 0070 04       		.byte	0x4
 2827 0071 07       		.byte	0x7
 2828 0072 DC020000 		.4byte	.LASF8
 2829 0076 03       		.uleb128 0x3
 2830 0077 4F050000 		.4byte	.LASF10
 2831 007b 03       		.byte	0x3
 2832 007c 2C       		.byte	0x2c
 2833 007d 41000000 		.4byte	0x41
 2834 0081 05       		.uleb128 0x5
 2835 0082 07020000 		.4byte	.LASF11
 2836 0086 04       		.byte	0x4
 2837 0087 9201     		.2byte	0x192
 2838 0089 2C000000 		.4byte	0x2c
 2839 008d 05       		.uleb128 0x5
 2840 008e 08000000 		.4byte	.LASF12
 2841 0092 04       		.byte	0x4
 2842 0093 9301     		.2byte	0x193
 2843 0095 3A000000 		.4byte	0x3a
 2844 0099 05       		.uleb128 0x5
 2845 009a 5E020000 		.4byte	.LASF13
 2846 009e 04       		.byte	0x4
 2847 009f 9401     		.2byte	0x194
 2848 00a1 53000000 		.4byte	0x53
 2849 00a5 05       		.uleb128 0x5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 68


 2850 00a6 A3030000 		.4byte	.LASF14
 2851 00aa 04       		.byte	0x4
 2852 00ab 9501     		.2byte	0x195
 2853 00ad 25000000 		.4byte	0x25
 2854 00b1 05       		.uleb128 0x5
 2855 00b2 46070000 		.4byte	.LASF15
 2856 00b6 04       		.byte	0x4
 2857 00b7 9601     		.2byte	0x196
 2858 00b9 33000000 		.4byte	0x33
 2859 00bd 05       		.uleb128 0x5
 2860 00be 25020000 		.4byte	.LASF16
 2861 00c2 04       		.byte	0x4
 2862 00c3 9701     		.2byte	0x197
 2863 00c5 4C000000 		.4byte	0x4c
 2864 00c9 02       		.uleb128 0x2
 2865 00ca 04       		.byte	0x4
 2866 00cb 04       		.byte	0x4
 2867 00cc 03050000 		.4byte	.LASF17
 2868 00d0 02       		.uleb128 0x2
 2869 00d1 08       		.byte	0x8
 2870 00d2 04       		.byte	0x4
 2871 00d3 CA070000 		.4byte	.LASF18
 2872 00d7 02       		.uleb128 0x2
 2873 00d8 01       		.byte	0x1
 2874 00d9 08       		.byte	0x8
 2875 00da 7D060000 		.4byte	.LASF19
 2876 00de 02       		.uleb128 0x2
 2877 00df 08       		.byte	0x8
 2878 00e0 04       		.byte	0x4
 2879 00e1 5F060000 		.4byte	.LASF20
 2880 00e5 02       		.uleb128 0x2
 2881 00e6 04       		.byte	0x4
 2882 00e7 07       		.byte	0x7
 2883 00e8 5D040000 		.4byte	.LASF21
 2884 00ec 06       		.uleb128 0x6
 2885 00ed 04       		.byte	0x4
 2886 00ee D7000000 		.4byte	0xd7
 2887 00f2 07       		.uleb128 0x7
 2888 00f3 D7000000 		.4byte	0xd7
 2889 00f7 02010000 		.4byte	0x102
 2890 00fb 08       		.uleb128 0x8
 2891 00fc E5000000 		.4byte	0xe5
 2892 0100 17       		.byte	0x17
 2893 0101 00       		.byte	0
 2894 0102 09       		.uleb128 0x9
 2895 0103 0C       		.byte	0xc
 2896 0104 05       		.byte	0x5
 2897 0105 30       		.byte	0x30
 2898 0106 6B010000 		.4byte	0x16b
 2899 010a 0A       		.uleb128 0xa
 2900 010b 53656300 		.ascii	"Sec\000"
 2901 010f 05       		.byte	0x5
 2902 0110 32       		.byte	0x32
 2903 0111 81000000 		.4byte	0x81
 2904 0115 00       		.byte	0
 2905 0116 0A       		.uleb128 0xa
 2906 0117 4D696E00 		.ascii	"Min\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 69


 2907 011b 05       		.byte	0x5
 2908 011c 33       		.byte	0x33
 2909 011d 81000000 		.4byte	0x81
 2910 0121 01       		.byte	0x1
 2911 0122 0B       		.uleb128 0xb
 2912 0123 FF000000 		.4byte	.LASF22
 2913 0127 05       		.byte	0x5
 2914 0128 34       		.byte	0x34
 2915 0129 81000000 		.4byte	0x81
 2916 012d 02       		.byte	0x2
 2917 012e 0B       		.uleb128 0xb
 2918 012f B4050000 		.4byte	.LASF23
 2919 0133 05       		.byte	0x5
 2920 0134 35       		.byte	0x35
 2921 0135 81000000 		.4byte	0x81
 2922 0139 03       		.byte	0x3
 2923 013a 0B       		.uleb128 0xb
 2924 013b 5E030000 		.4byte	.LASF24
 2925 013f 05       		.byte	0x5
 2926 0140 36       		.byte	0x36
 2927 0141 81000000 		.4byte	0x81
 2928 0145 04       		.byte	0x4
 2929 0146 0B       		.uleb128 0xb
 2930 0147 7F070000 		.4byte	.LASF25
 2931 014b 05       		.byte	0x5
 2932 014c 37       		.byte	0x37
 2933 014d 8D000000 		.4byte	0x8d
 2934 0151 06       		.byte	0x6
 2935 0152 0B       		.uleb128 0xb
 2936 0153 E2000000 		.4byte	.LASF26
 2937 0157 05       		.byte	0x5
 2938 0158 38       		.byte	0x38
 2939 0159 81000000 		.4byte	0x81
 2940 015d 08       		.byte	0x8
 2941 015e 0B       		.uleb128 0xb
 2942 015f 44050000 		.4byte	.LASF27
 2943 0163 05       		.byte	0x5
 2944 0164 39       		.byte	0x39
 2945 0165 8D000000 		.4byte	0x8d
 2946 0169 0A       		.byte	0xa
 2947 016a 00       		.byte	0
 2948 016b 03       		.uleb128 0x3
 2949 016c A8040000 		.4byte	.LASF28
 2950 0170 05       		.byte	0x5
 2951 0171 3A       		.byte	0x3a
 2952 0172 76010000 		.4byte	0x176
 2953 0176 0C       		.uleb128 0xc
 2954 0177 02010000 		.4byte	0x102
 2955 017b 0D       		.uleb128 0xd
 2956 017c 8101     		.2byte	0x181
 2957 017e 06       		.byte	0x6
 2958 017f 0A       		.byte	0xa
 2959 0180 A9010000 		.4byte	0x1a9
 2960 0184 0B       		.uleb128 0xb
 2961 0185 3A050000 		.4byte	.LASF29
 2962 0189 06       		.byte	0x6
 2963 018a 0C       		.byte	0xc
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 70


 2964 018b A9010000 		.4byte	0x1a9
 2965 018f 00       		.byte	0
 2966 0190 0B       		.uleb128 0xb
 2967 0191 06070000 		.4byte	.LASF30
 2968 0195 06       		.byte	0x6
 2969 0196 0D       		.byte	0xd
 2970 0197 81000000 		.4byte	0x81
 2971 019b 80       		.byte	0x80
 2972 019c 0B       		.uleb128 0xb
 2973 019d D6050000 		.4byte	.LASF31
 2974 01a1 06       		.byte	0x6
 2975 01a2 0F       		.byte	0xf
 2976 01a3 B9010000 		.4byte	0x1b9
 2977 01a7 81       		.byte	0x81
 2978 01a8 00       		.byte	0
 2979 01a9 07       		.uleb128 0x7
 2980 01aa D7000000 		.4byte	0xd7
 2981 01ae B9010000 		.4byte	0x1b9
 2982 01b2 08       		.uleb128 0x8
 2983 01b3 E5000000 		.4byte	0xe5
 2984 01b7 7F       		.byte	0x7f
 2985 01b8 00       		.byte	0
 2986 01b9 07       		.uleb128 0x7
 2987 01ba D7000000 		.4byte	0xd7
 2988 01be C9010000 		.4byte	0x1c9
 2989 01c2 08       		.uleb128 0x8
 2990 01c3 E5000000 		.4byte	0xe5
 2991 01c7 FF       		.byte	0xff
 2992 01c8 00       		.byte	0
 2993 01c9 03       		.uleb128 0x3
 2994 01ca BE050000 		.4byte	.LASF32
 2995 01ce 06       		.byte	0x6
 2996 01cf 10       		.byte	0x10
 2997 01d0 7B010000 		.4byte	0x17b
 2998 01d4 09       		.uleb128 0x9
 2999 01d5 70       		.byte	0x70
 3000 01d6 07       		.byte	0x7
 3001 01d7 19       		.byte	0x19
 3002 01d8 01020000 		.4byte	0x201
 3003 01dc 0B       		.uleb128 0xb
 3004 01dd 8D020000 		.4byte	.LASF33
 3005 01e1 07       		.byte	0x7
 3006 01e2 1B       		.byte	0x1b
 3007 01e3 81000000 		.4byte	0x81
 3008 01e7 00       		.byte	0
 3009 01e8 0B       		.uleb128 0xb
 3010 01e9 47060000 		.4byte	.LASF34
 3011 01ed 07       		.byte	0x7
 3012 01ee 1C       		.byte	0x1c
 3013 01ef 81000000 		.4byte	0x81
 3014 01f3 01       		.byte	0x1
 3015 01f4 0B       		.uleb128 0xb
 3016 01f5 04010000 		.4byte	.LASF35
 3017 01f9 07       		.byte	0x7
 3018 01fa 1D       		.byte	0x1d
 3019 01fb 01020000 		.4byte	0x201
 3020 01ff 04       		.byte	0x4
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 71


 3021 0200 00       		.byte	0
 3022 0201 07       		.uleb128 0x7
 3023 0202 C9000000 		.4byte	0xc9
 3024 0206 11020000 		.4byte	0x211
 3025 020a 08       		.uleb128 0x8
 3026 020b E5000000 		.4byte	0xe5
 3027 020f 1A       		.byte	0x1a
 3028 0210 00       		.byte	0
 3029 0211 03       		.uleb128 0x3
 3030 0212 82060000 		.4byte	.LASF36
 3031 0216 07       		.byte	0x7
 3032 0217 1F       		.byte	0x1f
 3033 0218 D4010000 		.4byte	0x1d4
 3034 021c 09       		.uleb128 0x9
 3035 021d 14       		.byte	0x14
 3036 021e 08       		.byte	0x8
 3037 021f 11       		.byte	0x11
 3038 0220 61020000 		.4byte	0x261
 3039 0224 0B       		.uleb128 0xb
 3040 0225 4E030000 		.4byte	.LASF37
 3041 0229 08       		.byte	0x8
 3042 022a 12       		.byte	0x12
 3043 022b C9000000 		.4byte	0xc9
 3044 022f 00       		.byte	0
 3045 0230 0B       		.uleb128 0xb
 3046 0231 8C010000 		.4byte	.LASF38
 3047 0235 08       		.byte	0x8
 3048 0236 13       		.byte	0x13
 3049 0237 C9000000 		.4byte	0xc9
 3050 023b 04       		.byte	0x4
 3051 023c 0B       		.uleb128 0xb
 3052 023d 9A010000 		.4byte	.LASF39
 3053 0241 08       		.byte	0x8
 3054 0242 14       		.byte	0x14
 3055 0243 C9000000 		.4byte	0xc9
 3056 0247 08       		.byte	0x8
 3057 0248 0B       		.uleb128 0xb
 3058 0249 E5040000 		.4byte	.LASF40
 3059 024d 08       		.byte	0x8
 3060 024e 15       		.byte	0x15
 3061 024f C9000000 		.4byte	0xc9
 3062 0253 0C       		.byte	0xc
 3063 0254 0B       		.uleb128 0xb
 3064 0255 47060000 		.4byte	.LASF34
 3065 0259 08       		.byte	0x8
 3066 025a 16       		.byte	0x16
 3067 025b 81000000 		.4byte	0x81
 3068 025f 10       		.byte	0x10
 3069 0260 00       		.byte	0
 3070 0261 03       		.uleb128 0x3
 3071 0262 D1070000 		.4byte	.LASF41
 3072 0266 08       		.byte	0x8
 3073 0267 17       		.byte	0x17
 3074 0268 1C020000 		.4byte	0x21c
 3075 026c 09       		.uleb128 0x9
 3076 026d 08       		.byte	0x8
 3077 026e 08       		.byte	0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 72


 3078 026f 19       		.byte	0x19
 3079 0270 8D020000 		.4byte	0x28d
 3080 0274 0B       		.uleb128 0xb
 3081 0275 36060000 		.4byte	.LASF42
 3082 0279 08       		.byte	0x8
 3083 027a 1A       		.byte	0x1a
 3084 027b C9000000 		.4byte	0xc9
 3085 027f 00       		.byte	0
 3086 0280 0B       		.uleb128 0xb
 3087 0281 A0050000 		.4byte	.LASF43
 3088 0285 08       		.byte	0x8
 3089 0286 1B       		.byte	0x1b
 3090 0287 C9000000 		.4byte	0xc9
 3091 028b 04       		.byte	0x4
 3092 028c 00       		.byte	0
 3093 028d 03       		.uleb128 0x3
 3094 028e 89070000 		.4byte	.LASF44
 3095 0292 08       		.byte	0x8
 3096 0293 1C       		.byte	0x1c
 3097 0294 6C020000 		.4byte	0x26c
 3098 0298 0E       		.uleb128 0xe
 3099 0299 746D00   		.ascii	"tm\000"
 3100 029c 24       		.byte	0x24
 3101 029d 09       		.byte	0x9
 3102 029e 21       		.byte	0x21
 3103 029f 10030000 		.4byte	0x310
 3104 02a3 0B       		.uleb128 0xb
 3105 02a4 F4060000 		.4byte	.LASF45
 3106 02a8 09       		.byte	0x9
 3107 02a9 23       		.byte	0x23
 3108 02aa 68000000 		.4byte	0x68
 3109 02ae 00       		.byte	0
 3110 02af 0B       		.uleb128 0xb
 3111 02b0 3F040000 		.4byte	.LASF46
 3112 02b4 09       		.byte	0x9
 3113 02b5 24       		.byte	0x24
 3114 02b6 68000000 		.4byte	0x68
 3115 02ba 04       		.byte	0x4
 3116 02bb 0B       		.uleb128 0xb
 3117 02bc 0F000000 		.4byte	.LASF47
 3118 02c0 09       		.byte	0x9
 3119 02c1 25       		.byte	0x25
 3120 02c2 68000000 		.4byte	0x68
 3121 02c6 08       		.byte	0x8
 3122 02c7 0B       		.uleb128 0xb
 3123 02c8 E3060000 		.4byte	.LASF48
 3124 02cc 09       		.byte	0x9
 3125 02cd 26       		.byte	0x26
 3126 02ce 68000000 		.4byte	0x68
 3127 02d2 0C       		.byte	0xc
 3128 02d3 0B       		.uleb128 0xb
 3129 02d4 86020000 		.4byte	.LASF49
 3130 02d8 09       		.byte	0x9
 3131 02d9 27       		.byte	0x27
 3132 02da 68000000 		.4byte	0x68
 3133 02de 10       		.byte	0x10
 3134 02df 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 73


 3135 02e0 CA020000 		.4byte	.LASF50
 3136 02e4 09       		.byte	0x9
 3137 02e5 28       		.byte	0x28
 3138 02e6 68000000 		.4byte	0x68
 3139 02ea 14       		.byte	0x14
 3140 02eb 0B       		.uleb128 0xb
 3141 02ec 57060000 		.4byte	.LASF51
 3142 02f0 09       		.byte	0x9
 3143 02f1 29       		.byte	0x29
 3144 02f2 68000000 		.4byte	0x68
 3145 02f6 18       		.byte	0x18
 3146 02f7 0B       		.uleb128 0xb
 3147 02f8 66040000 		.4byte	.LASF52
 3148 02fc 09       		.byte	0x9
 3149 02fd 2A       		.byte	0x2a
 3150 02fe 68000000 		.4byte	0x68
 3151 0302 1C       		.byte	0x1c
 3152 0303 0B       		.uleb128 0xb
 3153 0304 87030000 		.4byte	.LASF53
 3154 0308 09       		.byte	0x9
 3155 0309 2B       		.byte	0x2b
 3156 030a 68000000 		.4byte	0x68
 3157 030e 20       		.byte	0x20
 3158 030f 00       		.byte	0
 3159 0310 09       		.uleb128 0x9
 3160 0311 2C       		.byte	0x2c
 3161 0312 0A       		.byte	0xa
 3162 0313 14       		.byte	0x14
 3163 0314 3D030000 		.4byte	0x33d
 3164 0318 0A       		.uleb128 0xa
 3165 0319 6B657900 		.ascii	"key\000"
 3166 031d 0A       		.byte	0xa
 3167 031e 15       		.byte	0x15
 3168 031f 3D030000 		.4byte	0x33d
 3169 0323 00       		.byte	0
 3170 0324 0B       		.uleb128 0xb
 3171 0325 BF020000 		.4byte	.LASF54
 3172 0329 0A       		.byte	0xa
 3173 032a 16       		.byte	0x16
 3174 032b 3D030000 		.4byte	0x33d
 3175 032f 14       		.byte	0x14
 3176 0330 0B       		.uleb128 0xb
 3177 0331 9E040000 		.4byte	.LASF55
 3178 0335 0A       		.byte	0xa
 3179 0336 17       		.byte	0x17
 3180 0337 BD000000 		.4byte	0xbd
 3181 033b 28       		.byte	0x28
 3182 033c 00       		.byte	0
 3183 033d 07       		.uleb128 0x7
 3184 033e D7000000 		.4byte	0xd7
 3185 0342 4D030000 		.4byte	0x34d
 3186 0346 08       		.uleb128 0x8
 3187 0347 E5000000 		.4byte	0xe5
 3188 034b 13       		.byte	0x13
 3189 034c 00       		.byte	0
 3190 034d 03       		.uleb128 0x3
 3191 034e F1020000 		.4byte	.LASF56
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 74


 3192 0352 0A       		.byte	0xa
 3193 0353 19       		.byte	0x19
 3194 0354 10030000 		.4byte	0x310
 3195 0358 09       		.uleb128 0x9
 3196 0359 3C       		.byte	0x3c
 3197 035a 0B       		.byte	0xb
 3198 035b 36       		.byte	0x36
 3199 035c 85030000 		.4byte	0x385
 3200 0360 0B       		.uleb128 0xb
 3201 0361 DC060000 		.4byte	.LASF57
 3202 0365 0B       		.byte	0xb
 3203 0366 37       		.byte	0x37
 3204 0367 3D030000 		.4byte	0x33d
 3205 036b 00       		.byte	0
 3206 036c 0B       		.uleb128 0xb
 3207 036d 65020000 		.4byte	.LASF58
 3208 0371 0B       		.byte	0xb
 3209 0372 38       		.byte	0x38
 3210 0373 3D030000 		.4byte	0x33d
 3211 0377 14       		.byte	0x14
 3212 0378 0B       		.uleb128 0xb
 3213 0379 D1050000 		.4byte	.LASF59
 3214 037d 0B       		.byte	0xb
 3215 037e 39       		.byte	0x39
 3216 037f 3D030000 		.4byte	0x33d
 3217 0383 28       		.byte	0x28
 3218 0384 00       		.byte	0
 3219 0385 03       		.uleb128 0x3
 3220 0386 D2010000 		.4byte	.LASF60
 3221 038a 0B       		.byte	0xb
 3222 038b 3B       		.byte	0x3b
 3223 038c 58030000 		.4byte	0x358
 3224 0390 09       		.uleb128 0x9
 3225 0391 20       		.byte	0x20
 3226 0392 0B       		.byte	0xb
 3227 0393 3D       		.byte	0x3d
 3228 0394 F9030000 		.4byte	0x3f9
 3229 0398 0B       		.uleb128 0xb
 3230 0399 DF010000 		.4byte	.LASF61
 3231 039d 0B       		.byte	0xb
 3232 039e 3E       		.byte	0x3e
 3233 039f 68000000 		.4byte	0x68
 3234 03a3 00       		.byte	0
 3235 03a4 0A       		.uleb128 0xa
 3236 03a5 62657200 		.ascii	"ber\000"
 3237 03a9 0B       		.byte	0xb
 3238 03aa 3F       		.byte	0x3f
 3239 03ab 68000000 		.4byte	0x68
 3240 03af 04       		.byte	0x4
 3241 03b0 0B       		.uleb128 0xb
 3242 03b1 AF050000 		.4byte	.LASF62
 3243 03b5 0B       		.byte	0xb
 3244 03b6 40       		.byte	0x40
 3245 03b7 68000000 		.4byte	0x68
 3246 03bb 08       		.byte	0x8
 3247 03bc 0B       		.uleb128 0xb
 3248 03bd 56010000 		.4byte	.LASF63
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 75


 3249 03c1 0B       		.byte	0xb
 3250 03c2 41       		.byte	0x41
 3251 03c3 68000000 		.4byte	0x68
 3252 03c7 0C       		.byte	0xc
 3253 03c8 0B       		.uleb128 0xb
 3254 03c9 7A050000 		.4byte	.LASF64
 3255 03cd 0B       		.byte	0xb
 3256 03ce 42       		.byte	0x42
 3257 03cf 68000000 		.4byte	0x68
 3258 03d3 10       		.byte	0x10
 3259 03d4 0B       		.uleb128 0xb
 3260 03d5 75050000 		.4byte	.LASF65
 3261 03d9 0B       		.byte	0xb
 3262 03da 43       		.byte	0x43
 3263 03db 68000000 		.4byte	0x68
 3264 03df 14       		.byte	0x14
 3265 03e0 0B       		.uleb128 0xb
 3266 03e1 69010000 		.4byte	.LASF66
 3267 03e5 0B       		.byte	0xb
 3268 03e6 44       		.byte	0x44
 3269 03e7 68000000 		.4byte	0x68
 3270 03eb 18       		.byte	0x18
 3271 03ec 0B       		.uleb128 0xb
 3272 03ed EE010000 		.4byte	.LASF67
 3273 03f1 0B       		.byte	0xb
 3274 03f2 45       		.byte	0x45
 3275 03f3 68000000 		.4byte	0x68
 3276 03f7 1C       		.byte	0x1c
 3277 03f8 00       		.byte	0
 3278 03f9 03       		.uleb128 0x3
 3279 03fa 28060000 		.4byte	.LASF68
 3280 03fe 0B       		.byte	0xb
 3281 03ff 47       		.byte	0x47
 3282 0400 90030000 		.4byte	0x390
 3283 0404 09       		.uleb128 0x9
 3284 0405 05       		.byte	0x5
 3285 0406 0B       		.byte	0xb
 3286 0407 53       		.byte	0x53
 3287 0408 49040000 		.4byte	0x449
 3288 040c 0B       		.uleb128 0xb
 3289 040d 2B020000 		.4byte	.LASF69
 3290 0411 0B       		.byte	0xb
 3291 0412 55       		.byte	0x55
 3292 0413 81000000 		.4byte	0x81
 3293 0417 00       		.byte	0
 3294 0418 0B       		.uleb128 0xb
 3295 0419 70070000 		.4byte	.LASF70
 3296 041d 0B       		.byte	0xb
 3297 041e 57       		.byte	0x57
 3298 041f 49040000 		.4byte	0x449
 3299 0423 01       		.byte	0x1
 3300 0424 0B       		.uleb128 0xb
 3301 0425 BD070000 		.4byte	.LASF71
 3302 0429 0B       		.byte	0xb
 3303 042a 59       		.byte	0x59
 3304 042b 81000000 		.4byte	0x81
 3305 042f 02       		.byte	0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 76


 3306 0430 0B       		.uleb128 0xb
 3307 0431 96050000 		.4byte	.LASF72
 3308 0435 0B       		.byte	0xb
 3309 0436 5B       		.byte	0x5b
 3310 0437 81000000 		.4byte	0x81
 3311 043b 03       		.byte	0x3
 3312 043c 0B       		.uleb128 0xb
 3313 043d 93020000 		.4byte	.LASF73
 3314 0441 0B       		.byte	0xb
 3315 0442 5E       		.byte	0x5e
 3316 0443 81000000 		.4byte	0x81
 3317 0447 04       		.byte	0x4
 3318 0448 00       		.byte	0
 3319 0449 02       		.uleb128 0x2
 3320 044a 01       		.byte	0x1
 3321 044b 02       		.byte	0x2
 3322 044c 49050000 		.4byte	.LASF74
 3323 0450 03       		.uleb128 0x3
 3324 0451 0C040000 		.4byte	.LASF75
 3325 0455 0B       		.byte	0xb
 3326 0456 60       		.byte	0x60
 3327 0457 04040000 		.4byte	0x404
 3328 045b 09       		.uleb128 0x9
 3329 045c 06       		.byte	0x6
 3330 045d 0C       		.byte	0xc
 3331 045e 2E       		.byte	0x2e
 3332 045f 94040000 		.4byte	0x494
 3333 0463 0B       		.uleb128 0xb
 3334 0464 6E020000 		.4byte	.LASF76
 3335 0468 0C       		.byte	0xc
 3336 0469 30       		.byte	0x30
 3337 046a 8D000000 		.4byte	0x8d
 3338 046e 00       		.byte	0
 3339 046f 0B       		.uleb128 0xb
 3340 0470 5A070000 		.4byte	.LASF77
 3341 0474 0C       		.byte	0xc
 3342 0475 31       		.byte	0x31
 3343 0476 B1000000 		.4byte	0xb1
 3344 047a 02       		.byte	0x2
 3345 047b 0B       		.uleb128 0xb
 3346 047c 4C070000 		.4byte	.LASF78
 3347 0480 0C       		.byte	0xc
 3348 0481 32       		.byte	0x32
 3349 0482 81000000 		.4byte	0x81
 3350 0486 04       		.byte	0x4
 3351 0487 0B       		.uleb128 0xb
 3352 0488 3C000000 		.4byte	.LASF79
 3353 048c 0C       		.byte	0xc
 3354 048d 33       		.byte	0x33
 3355 048e 81000000 		.4byte	0x81
 3356 0492 05       		.byte	0x5
 3357 0493 00       		.byte	0
 3358 0494 03       		.uleb128 0x3
 3359 0495 01020000 		.4byte	.LASF80
 3360 0499 0C       		.byte	0xc
 3361 049a 36       		.byte	0x36
 3362 049b 9F040000 		.4byte	0x49f
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 77


 3363 049f 0C       		.uleb128 0xc
 3364 04a0 5B040000 		.4byte	0x45b
 3365 04a4 09       		.uleb128 0x9
 3366 04a5 1C       		.byte	0x1c
 3367 04a6 0C       		.byte	0xc
 3368 04a7 39       		.byte	0x39
 3369 04a8 C5040000 		.4byte	0x4c5
 3370 04ac 0B       		.uleb128 0xb
 3371 04ad 90030000 		.4byte	.LASF81
 3372 04b1 0C       		.byte	0xc
 3373 04b2 3B       		.byte	0x3b
 3374 04b3 C5040000 		.4byte	0x4c5
 3375 04b7 00       		.byte	0
 3376 04b8 0B       		.uleb128 0xb
 3377 04b9 AF070000 		.4byte	.LASF82
 3378 04bd 0C       		.byte	0xc
 3379 04be 3C       		.byte	0x3c
 3380 04bf F2000000 		.4byte	0xf2
 3381 04c3 04       		.byte	0x4
 3382 04c4 00       		.byte	0
 3383 04c5 06       		.uleb128 0x6
 3384 04c6 04       		.byte	0x4
 3385 04c7 85030000 		.4byte	0x385
 3386 04cb 03       		.uleb128 0x3
 3387 04cc 01040000 		.4byte	.LASF83
 3388 04d0 0C       		.byte	0xc
 3389 04d1 3E       		.byte	0x3e
 3390 04d2 A4040000 		.4byte	0x4a4
 3391 04d6 09       		.uleb128 0x9
 3392 04d7 68       		.byte	0x68
 3393 04d8 0C       		.byte	0xc
 3394 04d9 44       		.byte	0x44
 3395 04da F7040000 		.4byte	0x4f7
 3396 04de 0B       		.uleb128 0xb
 3397 04df 9B030000 		.4byte	.LASF84
 3398 04e3 0C       		.byte	0xc
 3399 04e4 49       		.byte	0x49
 3400 04e5 F7040000 		.4byte	0x4f7
 3401 04e9 00       		.byte	0
 3402 04ea 0B       		.uleb128 0xb
 3403 04eb 7F030000 		.4byte	.LASF85
 3404 04ef 0C       		.byte	0xc
 3405 04f0 4A       		.byte	0x4a
 3406 04f1 68000000 		.4byte	0x68
 3407 04f5 64       		.byte	0x64
 3408 04f6 00       		.byte	0
 3409 04f7 07       		.uleb128 0x7
 3410 04f8 D7000000 		.4byte	0xd7
 3411 04fc 07050000 		.4byte	0x507
 3412 0500 08       		.uleb128 0x8
 3413 0501 E5000000 		.4byte	0xe5
 3414 0505 63       		.byte	0x63
 3415 0506 00       		.byte	0
 3416 0507 03       		.uleb128 0x3
 3417 0508 6E040000 		.4byte	.LASF86
 3418 050c 0C       		.byte	0xc
 3419 050d 50       		.byte	0x50
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 78


 3420 050e D6040000 		.4byte	0x4d6
 3421 0512 0F       		.uleb128 0xf
 3422 0513 C0060000 		.4byte	.LASF159
 3423 0517 01       		.byte	0x1
 3424 0518 14       		.byte	0x14
 3425 0519 00000000 		.4byte	.LFB64
 3426 051d 0C000000 		.4byte	.LFE64-.LFB64
 3427 0521 01       		.uleb128 0x1
 3428 0522 9C       		.byte	0x9c
 3429 0523 10       		.uleb128 0x10
 3430 0524 9F070000 		.4byte	.LASF100
 3431 0528 01       		.byte	0x1
 3432 0529 28       		.byte	0x28
 3433 052a 00000000 		.4byte	.LFB65
 3434 052e 2C010000 		.4byte	.LFE65-.LFB65
 3435 0532 01       		.uleb128 0x1
 3436 0533 9C       		.byte	0x9c
 3437 0534 63050000 		.4byte	0x563
 3438 0538 11       		.uleb128 0x11
 3439 0539 B7060000 		.4byte	.LASF87
 3440 053d 01       		.byte	0x1
 3441 053e 3E       		.byte	0x3e
 3442 053f 63050000 		.4byte	0x563
 3443 0543 02       		.uleb128 0x2
 3444 0544 91       		.byte	0x91
 3445 0545 64       		.sleb128 -28
 3446 0546 11       		.uleb128 0x11
 3447 0547 79070000 		.4byte	.LASF88
 3448 054b 01       		.byte	0x1
 3449 054c 5B       		.byte	0x5b
 3450 054d 73050000 		.4byte	0x573
 3451 0551 02       		.uleb128 0x2
 3452 0552 91       		.byte	0x91
 3453 0553 58       		.sleb128 -40
 3454 0554 11       		.uleb128 0x11
 3455 0555 2F030000 		.4byte	.LASF89
 3456 0559 01       		.byte	0x1
 3457 055a 60       		.byte	0x60
 3458 055b 81000000 		.4byte	0x81
 3459 055f 02       		.uleb128 0x2
 3460 0560 91       		.byte	0x91
 3461 0561 6F       		.sleb128 -17
 3462 0562 00       		.byte	0
 3463 0563 07       		.uleb128 0x7
 3464 0564 99000000 		.4byte	0x99
 3465 0568 73050000 		.4byte	0x573
 3466 056c 08       		.uleb128 0x8
 3467 056d E5000000 		.4byte	0xe5
 3468 0571 01       		.byte	0x1
 3469 0572 00       		.byte	0
 3470 0573 07       		.uleb128 0x7
 3471 0574 D7000000 		.4byte	0xd7
 3472 0578 83050000 		.4byte	0x583
 3473 057c 08       		.uleb128 0x8
 3474 057d E5000000 		.4byte	0xe5
 3475 0581 09       		.byte	0x9
 3476 0582 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 79


 3477 0583 12       		.uleb128 0x12
 3478 0584 A8030000 		.4byte	.LASF91
 3479 0588 01       		.byte	0x1
 3480 0589 6A       		.byte	0x6a
 3481 058a 68000000 		.4byte	0x68
 3482 058e 00000000 		.4byte	.LFB66
 3483 0592 64000000 		.4byte	.LFE66-.LFB66
 3484 0596 01       		.uleb128 0x1
 3485 0597 9C       		.byte	0x9c
 3486 0598 AB050000 		.4byte	0x5ab
 3487 059c 11       		.uleb128 0x11
 3488 059d 2D050000 		.4byte	.LASF90
 3489 05a1 01       		.byte	0x1
 3490 05a2 84       		.byte	0x84
 3491 05a3 81000000 		.4byte	0x81
 3492 05a7 02       		.uleb128 0x2
 3493 05a8 91       		.byte	0x91
 3494 05a9 77       		.sleb128 -9
 3495 05aa 00       		.byte	0
 3496 05ab 13       		.uleb128 0x13
 3497 05ac CB060000 		.4byte	.LASF160
 3498 05b0 01       		.byte	0x1
 3499 05b1 94       		.byte	0x94
 3500 05b2 00000000 		.4byte	.LFB67
 3501 05b6 2A000000 		.4byte	.LFE67-.LFB67
 3502 05ba 01       		.uleb128 0x1
 3503 05bb 9C       		.byte	0x9c
 3504 05bc 14       		.uleb128 0x14
 3505 05bd FD020000 		.4byte	.LASF92
 3506 05c1 01       		.byte	0x1
 3507 05c2 B9       		.byte	0xb9
 3508 05c3 00000000 		.4byte	.LFB68
 3509 05c7 50000000 		.4byte	.LFE68-.LFB68
 3510 05cb 01       		.uleb128 0x1
 3511 05cc 9C       		.byte	0x9c
 3512 05cd E0050000 		.4byte	0x5e0
 3513 05d1 15       		.uleb128 0x15
 3514 05d2 23040000 		.4byte	.LASF93
 3515 05d6 01       		.byte	0x1
 3516 05d7 B9       		.byte	0xb9
 3517 05d8 81000000 		.4byte	0x81
 3518 05dc 02       		.uleb128 0x2
 3519 05dd 91       		.byte	0x91
 3520 05de 77       		.sleb128 -9
 3521 05df 00       		.byte	0
 3522 05e0 16       		.uleb128 0x16
 3523 05e1 94070000 		.4byte	.LASF97
 3524 05e5 01       		.byte	0x1
 3525 05e6 D0       		.byte	0xd0
 3526 05e7 81000000 		.4byte	0x81
 3527 05eb 00000000 		.4byte	.LFB69
 3528 05ef 48000000 		.4byte	.LFE69-.LFB69
 3529 05f3 01       		.uleb128 0x1
 3530 05f4 9C       		.byte	0x9c
 3531 05f5 16060000 		.4byte	0x616
 3532 05f9 15       		.uleb128 0x15
 3533 05fa 4C040000 		.4byte	.LASF94
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 80


 3534 05fe 01       		.byte	0x1
 3535 05ff D0       		.byte	0xd0
 3536 0600 16060000 		.4byte	0x616
 3537 0604 02       		.uleb128 0x2
 3538 0605 91       		.byte	0x91
 3539 0606 74       		.sleb128 -12
 3540 0607 15       		.uleb128 0x15
 3541 0608 23040000 		.4byte	.LASF93
 3542 060c 01       		.byte	0x1
 3543 060d D0       		.byte	0xd0
 3544 060e 81000000 		.4byte	0x81
 3545 0612 02       		.uleb128 0x2
 3546 0613 91       		.byte	0x91
 3547 0614 73       		.sleb128 -13
 3548 0615 00       		.byte	0
 3549 0616 06       		.uleb128 0x6
 3550 0617 04       		.byte	0x4
 3551 0618 94040000 		.4byte	0x494
 3552 061c 17       		.uleb128 0x17
 3553 061d 7F050000 		.4byte	.LASF95
 3554 0621 01       		.byte	0x1
 3555 0622 E5       		.byte	0xe5
 3556 0623 00000000 		.4byte	.LFB70
 3557 0627 1E000000 		.4byte	.LFE70-.LFB70
 3558 062b 01       		.uleb128 0x1
 3559 062c 9C       		.byte	0x9c
 3560 062d 40060000 		.4byte	0x640
 3561 0631 15       		.uleb128 0x15
 3562 0632 DD050000 		.4byte	.LASF96
 3563 0636 01       		.byte	0x1
 3564 0637 E5       		.byte	0xe5
 3565 0638 16060000 		.4byte	0x616
 3566 063c 02       		.uleb128 0x2
 3567 063d 91       		.byte	0x91
 3568 063e 74       		.sleb128 -12
 3569 063f 00       		.byte	0
 3570 0640 18       		.uleb128 0x18
 3571 0641 CB040000 		.4byte	.LASF98
 3572 0645 01       		.byte	0x1
 3573 0646 EE       		.byte	0xee
 3574 0647 94040000 		.4byte	0x494
 3575 064b 00000000 		.4byte	.LFB71
 3576 064f 46000000 		.4byte	.LFE71-.LFB71
 3577 0653 01       		.uleb128 0x1
 3578 0654 9C       		.byte	0x9c
 3579 0655 92060000 		.4byte	0x692
 3580 0659 15       		.uleb128 0x15
 3581 065a 6E020000 		.4byte	.LASF76
 3582 065e 01       		.byte	0x1
 3583 065f EE       		.byte	0xee
 3584 0660 8D000000 		.4byte	0x8d
 3585 0664 02       		.uleb128 0x2
 3586 0665 91       		.byte	0x91
 3587 0666 6A       		.sleb128 -22
 3588 0667 15       		.uleb128 0x15
 3589 0668 4C070000 		.4byte	.LASF78
 3590 066c 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 81


 3591 066d EE       		.byte	0xee
 3592 066e 81000000 		.4byte	0x81
 3593 0672 02       		.uleb128 0x2
 3594 0673 91       		.byte	0x91
 3595 0674 69       		.sleb128 -23
 3596 0675 15       		.uleb128 0x15
 3597 0676 3C000000 		.4byte	.LASF79
 3598 067a 01       		.byte	0x1
 3599 067b EE       		.byte	0xee
 3600 067c 81000000 		.4byte	0x81
 3601 0680 02       		.uleb128 0x2
 3602 0681 91       		.byte	0x91
 3603 0682 68       		.sleb128 -24
 3604 0683 11       		.uleb128 0x11
 3605 0684 EB060000 		.4byte	.LASF99
 3606 0688 01       		.byte	0x1
 3607 0689 F1       		.byte	0xf1
 3608 068a 94040000 		.4byte	0x494
 3609 068e 02       		.uleb128 0x2
 3610 068f 91       		.byte	0x91
 3611 0690 70       		.sleb128 -16
 3612 0691 00       		.byte	0
 3613 0692 19       		.uleb128 0x19
 3614 0693 EC050000 		.4byte	.LASF101
 3615 0697 01       		.byte	0x1
 3616 0698 0701     		.2byte	0x107
 3617 069a 00000000 		.4byte	.LFB72
 3618 069e 68040000 		.4byte	.LFE72-.LFB72
 3619 06a2 01       		.uleb128 0x1
 3620 06a3 9C       		.byte	0x9c
 3621 06a4 18070000 		.4byte	0x718
 3622 06a8 1A       		.uleb128 0x1a
 3623 06a9 BF020000 		.4byte	.LASF54
 3624 06ad 01       		.byte	0x1
 3625 06ae 0E01     		.2byte	0x10e
 3626 06b0 3D030000 		.4byte	0x33d
 3627 06b4 02       		.uleb128 0x2
 3628 06b5 91       		.byte	0x91
 3629 06b6 44       		.sleb128 -60
 3630 06b7 1A       		.uleb128 0x1a
 3631 06b8 4D060000 		.4byte	.LASF102
 3632 06bc 01       		.byte	0x1
 3633 06bd 0F01     		.2byte	0x10f
 3634 06bf 18070000 		.4byte	0x718
 3635 06c3 03       		.uleb128 0x3
 3636 06c4 91       		.byte	0x91
 3637 06c5 FC7D     		.sleb128 -260
 3638 06c7 1A       		.uleb128 0x1a
 3639 06c8 D3060000 		.4byte	.LASF103
 3640 06cc 01       		.byte	0x1
 3641 06cd 1101     		.2byte	0x111
 3642 06cf 11020000 		.4byte	0x211
 3643 06d3 03       		.uleb128 0x3
 3644 06d4 91       		.byte	0x91
 3645 06d5 8C7D     		.sleb128 -372
 3646 06d7 1A       		.uleb128 0x1a
 3647 06d8 00000000 		.4byte	.LASF104
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 82


 3648 06dc 01       		.byte	0x1
 3649 06dd 2D01     		.2byte	0x12d
 3650 06df C9010000 		.4byte	0x1c9
 3651 06e3 03       		.uleb128 0x3
 3652 06e4 91       		.byte	0x91
 3653 06e5 887A     		.sleb128 -760
 3654 06e7 1A       		.uleb128 0x1a
 3655 06e8 31010000 		.4byte	.LASF105
 3656 06ec 01       		.byte	0x1
 3657 06ed 3201     		.2byte	0x132
 3658 06ef C9010000 		.4byte	0x1c9
 3659 06f3 03       		.uleb128 0x3
 3660 06f4 91       		.byte	0x91
 3661 06f5 8477     		.sleb128 -1148
 3662 06f7 1A       		.uleb128 0x1a
 3663 06f8 26070000 		.4byte	.LASF106
 3664 06fc 01       		.byte	0x1
 3665 06fd 3601     		.2byte	0x136
 3666 06ff C9010000 		.4byte	0x1c9
 3667 0703 03       		.uleb128 0x3
 3668 0704 91       		.byte	0x91
 3669 0705 8074     		.sleb128 -1536
 3670 0707 1A       		.uleb128 0x1a
 3671 0708 D6030000 		.4byte	.LASF107
 3672 070c 01       		.byte	0x1
 3673 070d 3A01     		.2byte	0x13a
 3674 070f C9010000 		.4byte	0x1c9
 3675 0713 03       		.uleb128 0x3
 3676 0714 91       		.byte	0x91
 3677 0715 FC70     		.sleb128 -1924
 3678 0717 00       		.byte	0
 3679 0718 07       		.uleb128 0x7
 3680 0719 D7000000 		.4byte	0xd7
 3681 071d 28070000 		.4byte	0x728
 3682 0721 08       		.uleb128 0x8
 3683 0722 E5000000 		.4byte	0xe5
 3684 0726 C7       		.byte	0xc7
 3685 0727 00       		.byte	0
 3686 0728 1B       		.uleb128 0x1b
 3687 0729 AA070000 		.4byte	.LASF161
 3688 072d 01       		.byte	0x1
 3689 072e 4401     		.2byte	0x144
 3690 0730 68000000 		.4byte	0x68
 3691 0734 00000000 		.4byte	.LFB73
 3692 0738 1E000000 		.4byte	.LFE73-.LFB73
 3693 073c 01       		.uleb128 0x1
 3694 073d 9C       		.byte	0x9c
 3695 073e 1C       		.uleb128 0x1c
 3696 073f 35020000 		.4byte	.LASF108
 3697 0743 01       		.byte	0x1
 3698 0744 5A01     		.2byte	0x15a
 3699 0746 81000000 		.4byte	0x81
 3700 074a 00000000 		.4byte	.LFB74
 3701 074e 30040000 		.4byte	.LFE74-.LFB74
 3702 0752 01       		.uleb128 0x1
 3703 0753 9C       		.byte	0x9c
 3704 0754 98080000 		.4byte	0x898
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 83


 3705 0758 1D       		.uleb128 0x1d
 3706 0759 62000000 		.4byte	.LBB2
 3707 075d B8030000 		.4byte	.LBE2-.LBB2
 3708 0761 1A       		.uleb128 0x1a
 3709 0762 DE040000 		.4byte	.LASF109
 3710 0766 01       		.byte	0x1
 3711 0767 8A01     		.2byte	0x18a
 3712 0769 3D030000 		.4byte	0x33d
 3713 076d 02       		.uleb128 0x2
 3714 076e 91       		.byte	0x91
 3715 076f 48       		.sleb128 -56
 3716 0770 1A       		.uleb128 0x1a
 3717 0771 0D020000 		.4byte	.LASF110
 3718 0775 01       		.byte	0x1
 3719 0776 8F01     		.2byte	0x18f
 3720 0778 3D030000 		.4byte	0x33d
 3721 077c 03       		.uleb128 0x3
 3722 077d 91       		.byte	0x91
 3723 077e B47F     		.sleb128 -76
 3724 0780 1A       		.uleb128 0x1a
 3725 0781 3B030000 		.4byte	.LASF111
 3726 0785 01       		.byte	0x1
 3727 0786 A201     		.2byte	0x1a2
 3728 0788 8D000000 		.4byte	0x8d
 3729 078c 02       		.uleb128 0x2
 3730 078d 91       		.byte	0x91
 3731 078e 66       		.sleb128 -26
 3732 078f 1A       		.uleb128 0x1a
 3733 0790 C1030000 		.4byte	.LASF112
 3734 0794 01       		.byte	0x1
 3735 0795 A301     		.2byte	0x1a3
 3736 0797 3D030000 		.4byte	0x33d
 3737 079b 03       		.uleb128 0x3
 3738 079c 91       		.byte	0x91
 3739 079d A07F     		.sleb128 -96
 3740 079f 1A       		.uleb128 0x1a
 3741 07a0 A2060000 		.4byte	.LASF113
 3742 07a4 01       		.byte	0x1
 3743 07a5 B801     		.2byte	0x1b8
 3744 07a7 18070000 		.4byte	0x718
 3745 07ab 03       		.uleb128 0x3
 3746 07ac 91       		.byte	0x91
 3747 07ad B875     		.sleb128 -1352
 3748 07af 1A       		.uleb128 0x1a
 3749 07b0 06070000 		.4byte	.LASF30
 3750 07b4 01       		.byte	0x1
 3751 07b5 B901     		.2byte	0x1b9
 3752 07b7 81000000 		.4byte	0x81
 3753 07bb 02       		.uleb128 0x2
 3754 07bc 91       		.byte	0x91
 3755 07bd 65       		.sleb128 -27
 3756 07be 1A       		.uleb128 0x1a
 3757 07bf 6B060000 		.4byte	.LASF114
 3758 07c3 01       		.byte	0x1
 3759 07c4 C001     		.2byte	0x1c0
 3760 07c6 EC000000 		.4byte	0xec
 3761 07ca 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 84


 3762 07cb 91       		.byte	0x91
 3763 07cc 6C       		.sleb128 -20
 3764 07cd 1A       		.uleb128 0x1a
 3765 07ce 4E010000 		.4byte	.LASF115
 3766 07d2 01       		.byte	0x1
 3767 07d3 C401     		.2byte	0x1c4
 3768 07d5 A5000000 		.4byte	0xa5
 3769 07d9 02       		.uleb128 0x2
 3770 07da 91       		.byte	0x91
 3771 07db 64       		.sleb128 -28
 3772 07dc 1A       		.uleb128 0x1a
 3773 07dd 3E020000 		.4byte	.LASF116
 3774 07e1 01       		.byte	0x1
 3775 07e2 F401     		.2byte	0x1f4
 3776 07e4 4C000000 		.4byte	0x4c
 3777 07e8 02       		.uleb128 0x2
 3778 07e9 91       		.byte	0x91
 3779 07ea 5C       		.sleb128 -36
 3780 07eb 1E       		.uleb128 0x1e
 3781 07ec CE000000 		.4byte	.LBB3
 3782 07f0 2C000000 		.4byte	.LBE3-.LBB3
 3783 07f4 18080000 		.4byte	0x818
 3784 07f8 1A       		.uleb128 0x1a
 3785 07f9 18060000 		.4byte	.LASF117
 3786 07fd 01       		.byte	0x1
 3787 07fe 9701     		.2byte	0x197
 3788 0800 8D000000 		.4byte	0x8d
 3789 0804 02       		.uleb128 0x2
 3790 0805 91       		.byte	0x91
 3791 0806 68       		.sleb128 -24
 3792 0807 1A       		.uleb128 0x1a
 3793 0808 C0010000 		.4byte	.LASF118
 3794 080c 01       		.byte	0x1
 3795 080d 9801     		.2byte	0x198
 3796 080f 3D030000 		.4byte	0x33d
 3797 0813 03       		.uleb128 0x3
 3798 0814 91       		.byte	0x91
 3799 0815 8C7F     		.sleb128 -116
 3800 0817 00       		.byte	0
 3801 0818 1E       		.uleb128 0x1e
 3802 0819 FC000000 		.4byte	.LBB4
 3803 081d 20000000 		.4byte	.LBE4-.LBB4
 3804 0821 36080000 		.4byte	0x836
 3805 0825 1A       		.uleb128 0x1a
 3806 0826 C0010000 		.4byte	.LASF118
 3807 082a 01       		.byte	0x1
 3808 082b 9C01     		.2byte	0x19c
 3809 082d 3D030000 		.4byte	0x33d
 3810 0831 03       		.uleb128 0x3
 3811 0832 91       		.byte	0x91
 3812 0833 F87E     		.sleb128 -136
 3813 0835 00       		.byte	0
 3814 0836 1E       		.uleb128 0x1e
 3815 0837 3C020000 		.4byte	.LBB5
 3816 083b BC000000 		.4byte	.LBE5-.LBB5
 3817 083f 6D080000 		.4byte	0x86d
 3818 0843 1A       		.uleb128 0x1a
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 85


 3819 0844 D7040000 		.4byte	.LASF119
 3820 0848 01       		.byte	0x1
 3821 0849 C901     		.2byte	0x1c9
 3822 084b A5000000 		.4byte	0xa5
 3823 084f 02       		.uleb128 0x2
 3824 0850 91       		.byte	0x91
 3825 0851 6B       		.sleb128 -21
 3826 0852 1D       		.uleb128 0x1d
 3827 0853 44020000 		.4byte	.LBB6
 3828 0857 9A000000 		.4byte	.LBE6-.LBB6
 3829 085b 1A       		.uleb128 0x1a
 3830 085c 08030000 		.4byte	.LASF120
 3831 0860 01       		.byte	0x1
 3832 0861 CB01     		.2byte	0x1cb
 3833 0863 98080000 		.4byte	0x898
 3834 0867 03       		.uleb128 0x3
 3835 0868 91       		.byte	0x91
 3836 0869 8077     		.sleb128 -1152
 3837 086b 00       		.byte	0
 3838 086c 00       		.byte	0
 3839 086d 1D       		.uleb128 0x1d
 3840 086e 12030000 		.4byte	.LBB7
 3841 0872 3A000000 		.4byte	.LBE7-.LBB7
 3842 0876 1A       		.uleb128 0x1a
 3843 0877 1B020000 		.4byte	.LASF121
 3844 087b 01       		.byte	0x1
 3845 087c EB01     		.2byte	0x1eb
 3846 087e 68000000 		.4byte	0x68
 3847 0882 02       		.uleb128 0x2
 3848 0883 91       		.byte	0x91
 3849 0884 60       		.sleb128 -32
 3850 0885 1A       		.uleb128 0x1a
 3851 0886 8A050000 		.4byte	.LASF122
 3852 088a 01       		.byte	0x1
 3853 088b EC01     		.2byte	0x1ec
 3854 088d 73050000 		.4byte	0x573
 3855 0891 03       		.uleb128 0x3
 3856 0892 91       		.byte	0x91
 3857 0893 EC7E     		.sleb128 -148
 3858 0895 00       		.byte	0
 3859 0896 00       		.byte	0
 3860 0897 00       		.byte	0
 3861 0898 07       		.uleb128 0x7
 3862 0899 D7000000 		.4byte	0xd7
 3863 089d A9080000 		.4byte	0x8a9
 3864 08a1 1F       		.uleb128 0x1f
 3865 08a2 E5000000 		.4byte	0xe5
 3866 08a6 E803     		.2byte	0x3e8
 3867 08a8 00       		.byte	0
 3868 08a9 1C       		.uleb128 0x1c
 3869 08aa 09050000 		.4byte	.LASF123
 3870 08ae 01       		.byte	0x1
 3871 08af 0902     		.2byte	0x209
 3872 08b1 81000000 		.4byte	0x81
 3873 08b5 00000000 		.4byte	.LFB75
 3874 08b9 44000000 		.4byte	.LFE75-.LFB75
 3875 08bd 01       		.uleb128 0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 86


 3876 08be 9C       		.byte	0x9c
 3877 08bf DD080000 		.4byte	0x8dd
 3878 08c3 1D       		.uleb128 0x1d
 3879 08c4 20000000 		.4byte	.LBB8
 3880 08c8 1A000000 		.4byte	.LBE8-.LBB8
 3881 08cc 1A       		.uleb128 0x1a
 3882 08cd 3E020000 		.4byte	.LASF116
 3883 08d1 01       		.byte	0x1
 3884 08d2 1402     		.2byte	0x214
 3885 08d4 4C000000 		.4byte	0x4c
 3886 08d8 02       		.uleb128 0x2
 3887 08d9 91       		.byte	0x91
 3888 08da 74       		.sleb128 -12
 3889 08db 00       		.byte	0
 3890 08dc 00       		.byte	0
 3891 08dd 1C       		.uleb128 0x1c
 3892 08de 69030000 		.4byte	.LASF124
 3893 08e2 01       		.byte	0x1
 3894 08e3 2902     		.2byte	0x229
 3895 08e5 81000000 		.4byte	0x81
 3896 08e9 00000000 		.4byte	.LFB76
 3897 08ed E8060000 		.4byte	.LFE76-.LFB76
 3898 08f1 01       		.uleb128 0x1
 3899 08f2 9C       		.byte	0x9c
 3900 08f3 71090000 		.4byte	0x971
 3901 08f7 1A       		.uleb128 0x1a
 3902 08f8 9E040000 		.4byte	.LASF55
 3903 08fc 01       		.byte	0x1
 3904 08fd 2C02     		.2byte	0x22c
 3905 08ff 4C000000 		.4byte	0x4c
 3906 0903 02       		.uleb128 0x2
 3907 0904 91       		.byte	0x91
 3908 0905 54       		.sleb128 -44
 3909 0906 1A       		.uleb128 0x1a
 3910 0907 71060000 		.4byte	.LASF125
 3911 090b 01       		.byte	0x1
 3912 090c 2D02     		.2byte	0x22d
 3913 090e 71090000 		.4byte	0x971
 3914 0912 03       		.uleb128 0x3
 3915 0913 91       		.byte	0x91
 3916 0914 B47F     		.sleb128 -76
 3917 0916 1A       		.uleb128 0x1a
 3918 0917 BF020000 		.4byte	.LASF54
 3919 091b 01       		.byte	0x1
 3920 091c 3102     		.2byte	0x231
 3921 091e 3D030000 		.4byte	0x33d
 3922 0922 03       		.uleb128 0x3
 3923 0923 91       		.byte	0x91
 3924 0924 A07F     		.sleb128 -96
 3925 0926 1A       		.uleb128 0x1a
 3926 0927 4D060000 		.4byte	.LASF102
 3927 092b 01       		.byte	0x1
 3928 092c 3202     		.2byte	0x232
 3929 092e 18070000 		.4byte	0x718
 3930 0932 03       		.uleb128 0x3
 3931 0933 91       		.byte	0x91
 3932 0934 D87D     		.sleb128 -296
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 87


 3933 0936 1A       		.uleb128 0x1a
 3934 0937 D3060000 		.4byte	.LASF103
 3935 093b 01       		.byte	0x1
 3936 093c 4F02     		.2byte	0x24f
 3937 093e 11020000 		.4byte	0x211
 3938 0942 03       		.uleb128 0x3
 3939 0943 91       		.byte	0x91
 3940 0944 E87C     		.sleb128 -408
 3941 0946 1A       		.uleb128 0x1a
 3942 0947 13030000 		.4byte	.LASF126
 3943 094b 01       		.byte	0x1
 3944 094c 8402     		.2byte	0x284
 3945 094e 61020000 		.4byte	0x261
 3946 0952 03       		.uleb128 0x3
 3947 0953 91       		.byte	0x91
 3948 0954 D47C     		.sleb128 -428
 3949 0956 1D       		.uleb128 0x1d
 3950 0957 94050000 		.4byte	.LBB9
 3951 095b FC000000 		.4byte	.LBE9-.LBB9
 3952 095f 1A       		.uleb128 0x1a
 3953 0960 FB060000 		.4byte	.LASF127
 3954 0964 01       		.byte	0x1
 3955 0965 A002     		.2byte	0x2a0
 3956 0967 8D020000 		.4byte	0x28d
 3957 096b 03       		.uleb128 0x3
 3958 096c 91       		.byte	0x91
 3959 096d CC7C     		.sleb128 -436
 3960 096f 00       		.byte	0
 3961 0970 00       		.byte	0
 3962 0971 07       		.uleb128 0x7
 3963 0972 D7000000 		.4byte	0xd7
 3964 0976 81090000 		.4byte	0x981
 3965 097a 08       		.uleb128 0x8
 3966 097b E5000000 		.4byte	0xe5
 3967 097f 1F       		.byte	0x1f
 3968 0980 00       		.byte	0
 3969 0981 20       		.uleb128 0x20
 3970 0982 E9020000 		.4byte	.LASF128
 3971 0986 01       		.byte	0x1
 3972 0987 C602     		.2byte	0x2c6
 3973 0989 81000000 		.4byte	0x81
 3974 098d 00000000 		.4byte	.LFB77
 3975 0991 74000000 		.4byte	.LFE77-.LFB77
 3976 0995 01       		.uleb128 0x1
 3977 0996 9C       		.byte	0x9c
 3978 0997 C7090000 		.4byte	0x9c7
 3979 099b 21       		.uleb128 0x21
 3980 099c 9E040000 		.4byte	.LASF55
 3981 09a0 01       		.byte	0x1
 3982 09a1 C602     		.2byte	0x2c6
 3983 09a3 4C000000 		.4byte	0x4c
 3984 09a7 02       		.uleb128 0x2
 3985 09a8 91       		.byte	0x91
 3986 09a9 64       		.sleb128 -28
 3987 09aa 22       		.uleb128 0x22
 3988 09ab 7400     		.ascii	"t\000"
 3989 09ad 01       		.byte	0x1
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 88


 3990 09ae CD02     		.2byte	0x2cd
 3991 09b0 C7090000 		.4byte	0x9c7
 3992 09b4 02       		.uleb128 0x2
 3993 09b5 91       		.byte	0x91
 3994 09b6 74       		.sleb128 -12
 3995 09b7 1A       		.uleb128 0x1a
 3996 09b8 7D040000 		.4byte	.LASF129
 3997 09bc 01       		.byte	0x1
 3998 09bd D202     		.2byte	0x2d2
 3999 09bf 6B010000 		.4byte	0x16b
 4000 09c3 02       		.uleb128 0x2
 4001 09c4 91       		.byte	0x91
 4002 09c5 68       		.sleb128 -24
 4003 09c6 00       		.byte	0
 4004 09c7 06       		.uleb128 0x6
 4005 09c8 04       		.byte	0x4
 4006 09c9 98020000 		.4byte	0x298
 4007 09cd 20       		.uleb128 0x20
 4008 09ce 7D020000 		.4byte	.LASF130
 4009 09d2 01       		.byte	0x1
 4010 09d3 EF02     		.2byte	0x2ef
 4011 09d5 81000000 		.4byte	0x81
 4012 09d9 00000000 		.4byte	.LFB78
 4013 09dd 38010000 		.4byte	.LFE78-.LFB78
 4014 09e1 01       		.uleb128 0x1
 4015 09e2 9C       		.byte	0x9c
 4016 09e3 460A0000 		.4byte	0xa46
 4017 09e7 21       		.uleb128 0x21
 4018 09e8 C5020000 		.4byte	.LASF131
 4019 09ec 01       		.byte	0x1
 4020 09ed EF02     		.2byte	0x2ef
 4021 09ef EC000000 		.4byte	0xec
 4022 09f3 03       		.uleb128 0x3
 4023 09f4 91       		.byte	0x91
 4024 09f5 9C7E     		.sleb128 -228
 4025 09f7 21       		.uleb128 0x21
 4026 09f8 9F020000 		.4byte	.LASF132
 4027 09fc 01       		.byte	0x1
 4028 09fd EF02     		.2byte	0x2ef
 4029 09ff 68000000 		.4byte	0x68
 4030 0a03 03       		.uleb128 0x3
 4031 0a04 91       		.byte	0x91
 4032 0a05 987E     		.sleb128 -232
 4033 0a07 21       		.uleb128 0x21
 4034 0a08 46040000 		.4byte	.LASF133
 4035 0a0c 01       		.byte	0x1
 4036 0a0d EF02     		.2byte	0x2ef
 4037 0a0f EC000000 		.4byte	0xec
 4038 0a13 03       		.uleb128 0x3
 4039 0a14 91       		.byte	0x91
 4040 0a15 947E     		.sleb128 -236
 4041 0a17 1A       		.uleb128 0x1a
 4042 0a18 B1010000 		.4byte	.LASF134
 4043 0a1c 01       		.byte	0x1
 4044 0a1d F102     		.2byte	0x2f1
 4045 0a1f 81000000 		.4byte	0x81
 4046 0a23 02       		.uleb128 0x2
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 89


 4047 0a24 91       		.byte	0x91
 4048 0a25 77       		.sleb128 -9
 4049 0a26 1A       		.uleb128 0x1a
 4050 0a27 27000000 		.4byte	.LASF135
 4051 0a2b 01       		.byte	0x1
 4052 0a2c F802     		.2byte	0x2f8
 4053 0a2e 460A0000 		.4byte	0xa46
 4054 0a32 02       		.uleb128 0x2
 4055 0a33 91       		.byte	0x91
 4056 0a34 68       		.sleb128 -24
 4057 0a35 1A       		.uleb128 0x1a
 4058 0a36 A2060000 		.4byte	.LASF113
 4059 0a3a 01       		.byte	0x1
 4060 0a3b 0003     		.2byte	0x300
 4061 0a3d 18070000 		.4byte	0x718
 4062 0a41 03       		.uleb128 0x3
 4063 0a42 91       		.byte	0x91
 4064 0a43 A07E     		.sleb128 -224
 4065 0a45 00       		.byte	0
 4066 0a46 07       		.uleb128 0x7
 4067 0a47 D7000000 		.4byte	0xd7
 4068 0a4b 560A0000 		.4byte	0xa56
 4069 0a4f 08       		.uleb128 0x8
 4070 0a50 E5000000 		.4byte	0xe5
 4071 0a54 0B       		.byte	0xb
 4072 0a55 00       		.byte	0
 4073 0a56 23       		.uleb128 0x23
 4074 0a57 24010000 		.4byte	.LASF136
 4075 0a5b 0D       		.byte	0xd
 4076 0a5c 1207     		.2byte	0x712
 4077 0a5e 620A0000 		.4byte	0xa62
 4078 0a62 0C       		.uleb128 0xc
 4079 0a63 76000000 		.4byte	0x76
 4080 0a67 24       		.uleb128 0x24
 4081 0a68 17000000 		.4byte	.LASF137
 4082 0a6c 0A       		.byte	0xa
 4083 0a6d 11       		.byte	0x11
 4084 0a6e 49040000 		.4byte	0x449
 4085 0a72 05       		.uleb128 0x5
 4086 0a73 03       		.byte	0x3
 4087 0a74 00000000 		.4byte	buffer_overflow
 4088 0a78 24       		.uleb128 0x24
 4089 0a79 2D040000 		.4byte	.LASF138
 4090 0a7d 0A       		.byte	0xa
 4091 0a7e 22       		.byte	0x22
 4092 0a7f 8D000000 		.4byte	0x8d
 4093 0a83 05       		.uleb128 0x5
 4094 0a84 03       		.byte	0x3
 4095 0a85 00000000 		.4byte	dataPointsInStack
 4096 0a89 24       		.uleb128 0x24
 4097 0a8a 0D070000 		.4byte	.LASF139
 4098 0a8e 0A       		.byte	0xa
 4099 0a8f 23       		.byte	0x23
 4100 0a90 8D000000 		.4byte	0x8d
 4101 0a94 05       		.uleb128 0x5
 4102 0a95 03       		.byte	0x3
 4103 0a96 00000000 		.4byte	dataPointsInStackDesired
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 90


 4104 0a9a 07       		.uleb128 0x7
 4105 0a9b 4D030000 		.4byte	0x34d
 4106 0a9f AA0A0000 		.4byte	0xaaa
 4107 0aa3 08       		.uleb128 0x8
 4108 0aa4 E5000000 		.4byte	0xe5
 4109 0aa8 95       		.byte	0x95
 4110 0aa9 00       		.byte	0
 4111 0aaa 24       		.uleb128 0x24
 4112 0aab 7A030000 		.4byte	.LASF140
 4113 0aaf 0A       		.byte	0xa
 4114 0ab0 24       		.byte	0x24
 4115 0ab1 9A0A0000 		.4byte	0xa9a
 4116 0ab5 05       		.uleb128 0x5
 4117 0ab6 03       		.byte	0x3
 4118 0ab7 00000000 		.4byte	data
 4119 0abb 24       		.uleb128 0x24
 4120 0abc 0B010000 		.4byte	.LASF141
 4121 0ac0 0B       		.byte	0xb
 4122 0ac1 20       		.byte	0x20
 4123 0ac2 81000000 		.4byte	0x81
 4124 0ac6 05       		.uleb128 0x5
 4125 0ac7 03       		.byte	0x3
 4126 0ac8 00000000 		.4byte	modem_state
 4127 0acc 24       		.uleb128 0x24
 4128 0acd EA030000 		.4byte	.LASF142
 4129 0ad1 0B       		.byte	0xb
 4130 0ad2 63       		.byte	0x63
 4131 0ad3 BD000000 		.4byte	0xbd
 4132 0ad7 05       		.uleb128 0x5
 4133 0ad8 03       		.byte	0x3
 4134 0ad9 00000000 		.4byte	modem_start_time_stamp
 4135 0add 24       		.uleb128 0x24
 4136 0ade 90030000 		.4byte	.LASF81
 4137 0ae2 0B       		.byte	0xb
 4138 0ae3 64       		.byte	0x64
 4139 0ae4 85030000 		.4byte	0x385
 4140 0ae8 05       		.uleb128 0x5
 4141 0ae9 03       		.byte	0x3
 4142 0aea 00000000 		.4byte	modem_info
 4143 0aee 24       		.uleb128 0x24
 4144 0aef 8B060000 		.4byte	.LASF143
 4145 0af3 0B       		.byte	0xb
 4146 0af4 65       		.byte	0x65
 4147 0af5 F9030000 		.4byte	0x3f9
 4148 0af9 05       		.uleb128 0x5
 4149 0afa 03       		.byte	0x3
 4150 0afb 00000000 		.4byte	modem_stats
 4151 0aff 24       		.uleb128 0x24
 4152 0b00 B6040000 		.4byte	.LASF144
 4153 0b04 0B       		.byte	0xb
 4154 0b05 66       		.byte	0x66
 4155 0b06 50040000 		.4byte	0x450
 4156 0b0a 05       		.uleb128 0x5
 4157 0b0b 03       		.byte	0x3
 4158 0b0c 00000000 		.4byte	updatable_parameters
 4159 0b10 07       		.uleb128 0x7
 4160 0b11 D7000000 		.4byte	0xd7
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 91


 4161 0b15 210B0000 		.4byte	0xb21
 4162 0b19 1F       		.uleb128 0x1f
 4163 0b1a E5000000 		.4byte	0xe5
 4164 0b1e 0F27     		.2byte	0x270f
 4165 0b20 00       		.byte	0
 4166 0b21 24       		.uleb128 0x24
 4167 0b22 F6040000 		.4byte	.LASF145
 4168 0b26 0C       		.byte	0xc
 4169 0b27 18       		.byte	0x18
 4170 0b28 100B0000 		.4byte	0xb10
 4171 0b2c 05       		.uleb128 0x5
 4172 0b2d 03       		.byte	0x3
 4173 0b2e 00000000 		.4byte	http_request
 4174 0b32 24       		.uleb128 0x24
 4175 0b33 3C070000 		.4byte	.LASF146
 4176 0b37 0C       		.byte	0xc
 4177 0b38 19       		.byte	0x19
 4178 0b39 100B0000 		.4byte	0xb10
 4179 0b3d 05       		.uleb128 0x5
 4180 0b3e 03       		.byte	0x3
 4181 0b3f 00000000 		.4byte	http_body
 4182 0b43 24       		.uleb128 0x24
 4183 0b44 97060000 		.4byte	.LASF147
 4184 0b48 0C       		.byte	0xc
 4185 0b49 1A       		.byte	0x1a
 4186 0b4a 18070000 		.4byte	0x718
 4187 0b4e 05       		.uleb128 0x5
 4188 0b4f 03       		.byte	0x3
 4189 0b50 00000000 		.4byte	http_route
 4190 0b54 24       		.uleb128 0x24
 4191 0b55 C5050000 		.4byte	.LASF148
 4192 0b59 0C       		.byte	0xc
 4193 0b5a 41       		.byte	0x41
 4194 0b5b CB040000 		.4byte	0x4cb
 4195 0b5f 05       		.uleb128 0x5
 4196 0b60 03       		.byte	0x3
 4197 0b61 00000000 		.4byte	system_info
 4198 0b65 24       		.uleb128 0x24
 4199 0b66 65050000 		.4byte	.LASF149
 4200 0b6a 0C       		.byte	0xc
 4201 0b6b 53       		.byte	0x53
 4202 0b6c 07050000 		.4byte	0x507
 4203 0b70 05       		.uleb128 0x5
 4204 0b71 03       		.byte	0x3
 4205 0b72 00000000 		.4byte	system_settings
 4206 0b76 24       		.uleb128 0x24
 4207 0b77 17010000 		.4byte	.LASF150
 4208 0b7b 0C       		.byte	0xc
 4209 0b7c 6F       		.byte	0x6f
 4210 0b7d 94040000 		.4byte	0x494
 4211 0b81 05       		.uleb128 0x5
 4212 0b82 03       		.byte	0x3
 4213 0b83 00000000 		.4byte	alarmMeasure
 4214 0b87 24       		.uleb128 0x24
 4215 0b88 5B010000 		.4byte	.LASF151
 4216 0b8c 0C       		.byte	0xc
 4217 0b8d 70       		.byte	0x70
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 92


 4218 0b8e 81000000 		.4byte	0x81
 4219 0b92 05       		.uleb128 0x5
 4220 0b93 03       		.byte	0x3
 4221 0b94 00000000 		.4byte	timeToMeasure
 4222 0b98 24       		.uleb128 0x24
 4223 0b99 D2020000 		.4byte	.LASF152
 4224 0b9d 0C       		.byte	0xc
 4225 0b9e 71       		.byte	0x71
 4226 0b9f 94040000 		.4byte	0x494
 4227 0ba3 05       		.uleb128 0x5
 4228 0ba4 03       		.byte	0x3
 4229 0ba5 00000000 		.4byte	alarmSync
 4230 0ba9 24       		.uleb128 0x24
 4231 0baa 81010000 		.4byte	.LASF153
 4232 0bae 0C       		.byte	0xc
 4233 0baf 72       		.byte	0x72
 4234 0bb0 81000000 		.4byte	0x81
 4235 0bb4 05       		.uleb128 0x5
 4236 0bb5 03       		.byte	0x3
 4237 0bb6 00000000 		.4byte	timeToSync
 4238 0bba 24       		.uleb128 0x24
 4239 0bbb 87040000 		.4byte	.LASF154
 4240 0bbf 0C       		.byte	0xc
 4241 0bc0 73       		.byte	0x73
 4242 0bc1 81000000 		.4byte	0x81
 4243 0bc5 05       		.uleb128 0x5
 4244 0bc6 03       		.byte	0x3
 4245 0bc7 00000000 		.4byte	timeToSycnRemoteParams
 4246 0bcb 25       		.uleb128 0x25
 4247 0bcc 68657900 		.ascii	"hey\000"
 4248 0bd0 0C       		.byte	0xc
 4249 0bd1 74       		.byte	0x74
 4250 0bd2 81000000 		.4byte	0x81
 4251 0bd6 05       		.uleb128 0x5
 4252 0bd7 03       		.byte	0x3
 4253 0bd8 00000000 		.4byte	hey
 4254 0bdc 07       		.uleb128 0x7
 4255 0bdd D7000000 		.4byte	0xd7
 4256 0be1 EC0B0000 		.4byte	0xbec
 4257 0be5 08       		.uleb128 0x8
 4258 0be6 E5000000 		.4byte	0xe5
 4259 0bea 1D       		.byte	0x1d
 4260 0beb 00       		.byte	0
 4261 0bec 24       		.uleb128 0x24
 4262 0bed 1F050000 		.4byte	.LASF155
 4263 0bf1 01       		.byte	0x1
 4264 0bf2 1D       		.byte	0x1d
 4265 0bf3 DC0B0000 		.4byte	0xbdc
 4266 0bf7 05       		.uleb128 0x5
 4267 0bf8 03       		.byte	0x3
 4268 0bf9 00000000 		.4byte	Data_fileName
 4269 0bfd 24       		.uleb128 0x24
 4270 0bfe 2F030000 		.4byte	.LASF89
 4271 0c02 01       		.byte	0x1
 4272 0c03 1E       		.byte	0x1e
 4273 0c04 81000000 		.4byte	0x81
 4274 0c08 05       		.uleb128 0x5
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 93


 4275 0c09 03       		.byte	0x3
 4276 0c0a 00000000 		.4byte	try_counter
 4277 0c0e 00       		.byte	0
 4278              		.section	.debug_abbrev,"",%progbits
 4279              	.Ldebug_abbrev0:
 4280 0000 01       		.uleb128 0x1
 4281 0001 11       		.uleb128 0x11
 4282 0002 01       		.byte	0x1
 4283 0003 25       		.uleb128 0x25
 4284 0004 0E       		.uleb128 0xe
 4285 0005 13       		.uleb128 0x13
 4286 0006 0B       		.uleb128 0xb
 4287 0007 03       		.uleb128 0x3
 4288 0008 0E       		.uleb128 0xe
 4289 0009 1B       		.uleb128 0x1b
 4290 000a 0E       		.uleb128 0xe
 4291 000b 55       		.uleb128 0x55
 4292 000c 17       		.uleb128 0x17
 4293 000d 11       		.uleb128 0x11
 4294 000e 01       		.uleb128 0x1
 4295 000f 10       		.uleb128 0x10
 4296 0010 17       		.uleb128 0x17
 4297 0011 00       		.byte	0
 4298 0012 00       		.byte	0
 4299 0013 02       		.uleb128 0x2
 4300 0014 24       		.uleb128 0x24
 4301 0015 00       		.byte	0
 4302 0016 0B       		.uleb128 0xb
 4303 0017 0B       		.uleb128 0xb
 4304 0018 3E       		.uleb128 0x3e
 4305 0019 0B       		.uleb128 0xb
 4306 001a 03       		.uleb128 0x3
 4307 001b 0E       		.uleb128 0xe
 4308 001c 00       		.byte	0
 4309 001d 00       		.byte	0
 4310 001e 03       		.uleb128 0x3
 4311 001f 16       		.uleb128 0x16
 4312 0020 00       		.byte	0
 4313 0021 03       		.uleb128 0x3
 4314 0022 0E       		.uleb128 0xe
 4315 0023 3A       		.uleb128 0x3a
 4316 0024 0B       		.uleb128 0xb
 4317 0025 3B       		.uleb128 0x3b
 4318 0026 0B       		.uleb128 0xb
 4319 0027 49       		.uleb128 0x49
 4320 0028 13       		.uleb128 0x13
 4321 0029 00       		.byte	0
 4322 002a 00       		.byte	0
 4323 002b 04       		.uleb128 0x4
 4324 002c 24       		.uleb128 0x24
 4325 002d 00       		.byte	0
 4326 002e 0B       		.uleb128 0xb
 4327 002f 0B       		.uleb128 0xb
 4328 0030 3E       		.uleb128 0x3e
 4329 0031 0B       		.uleb128 0xb
 4330 0032 03       		.uleb128 0x3
 4331 0033 08       		.uleb128 0x8
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 94


 4332 0034 00       		.byte	0
 4333 0035 00       		.byte	0
 4334 0036 05       		.uleb128 0x5
 4335 0037 16       		.uleb128 0x16
 4336 0038 00       		.byte	0
 4337 0039 03       		.uleb128 0x3
 4338 003a 0E       		.uleb128 0xe
 4339 003b 3A       		.uleb128 0x3a
 4340 003c 0B       		.uleb128 0xb
 4341 003d 3B       		.uleb128 0x3b
 4342 003e 05       		.uleb128 0x5
 4343 003f 49       		.uleb128 0x49
 4344 0040 13       		.uleb128 0x13
 4345 0041 00       		.byte	0
 4346 0042 00       		.byte	0
 4347 0043 06       		.uleb128 0x6
 4348 0044 0F       		.uleb128 0xf
 4349 0045 00       		.byte	0
 4350 0046 0B       		.uleb128 0xb
 4351 0047 0B       		.uleb128 0xb
 4352 0048 49       		.uleb128 0x49
 4353 0049 13       		.uleb128 0x13
 4354 004a 00       		.byte	0
 4355 004b 00       		.byte	0
 4356 004c 07       		.uleb128 0x7
 4357 004d 01       		.uleb128 0x1
 4358 004e 01       		.byte	0x1
 4359 004f 49       		.uleb128 0x49
 4360 0050 13       		.uleb128 0x13
 4361 0051 01       		.uleb128 0x1
 4362 0052 13       		.uleb128 0x13
 4363 0053 00       		.byte	0
 4364 0054 00       		.byte	0
 4365 0055 08       		.uleb128 0x8
 4366 0056 21       		.uleb128 0x21
 4367 0057 00       		.byte	0
 4368 0058 49       		.uleb128 0x49
 4369 0059 13       		.uleb128 0x13
 4370 005a 2F       		.uleb128 0x2f
 4371 005b 0B       		.uleb128 0xb
 4372 005c 00       		.byte	0
 4373 005d 00       		.byte	0
 4374 005e 09       		.uleb128 0x9
 4375 005f 13       		.uleb128 0x13
 4376 0060 01       		.byte	0x1
 4377 0061 0B       		.uleb128 0xb
 4378 0062 0B       		.uleb128 0xb
 4379 0063 3A       		.uleb128 0x3a
 4380 0064 0B       		.uleb128 0xb
 4381 0065 3B       		.uleb128 0x3b
 4382 0066 0B       		.uleb128 0xb
 4383 0067 01       		.uleb128 0x1
 4384 0068 13       		.uleb128 0x13
 4385 0069 00       		.byte	0
 4386 006a 00       		.byte	0
 4387 006b 0A       		.uleb128 0xa
 4388 006c 0D       		.uleb128 0xd
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 95


 4389 006d 00       		.byte	0
 4390 006e 03       		.uleb128 0x3
 4391 006f 08       		.uleb128 0x8
 4392 0070 3A       		.uleb128 0x3a
 4393 0071 0B       		.uleb128 0xb
 4394 0072 3B       		.uleb128 0x3b
 4395 0073 0B       		.uleb128 0xb
 4396 0074 49       		.uleb128 0x49
 4397 0075 13       		.uleb128 0x13
 4398 0076 38       		.uleb128 0x38
 4399 0077 0B       		.uleb128 0xb
 4400 0078 00       		.byte	0
 4401 0079 00       		.byte	0
 4402 007a 0B       		.uleb128 0xb
 4403 007b 0D       		.uleb128 0xd
 4404 007c 00       		.byte	0
 4405 007d 03       		.uleb128 0x3
 4406 007e 0E       		.uleb128 0xe
 4407 007f 3A       		.uleb128 0x3a
 4408 0080 0B       		.uleb128 0xb
 4409 0081 3B       		.uleb128 0x3b
 4410 0082 0B       		.uleb128 0xb
 4411 0083 49       		.uleb128 0x49
 4412 0084 13       		.uleb128 0x13
 4413 0085 38       		.uleb128 0x38
 4414 0086 0B       		.uleb128 0xb
 4415 0087 00       		.byte	0
 4416 0088 00       		.byte	0
 4417 0089 0C       		.uleb128 0xc
 4418 008a 35       		.uleb128 0x35
 4419 008b 00       		.byte	0
 4420 008c 49       		.uleb128 0x49
 4421 008d 13       		.uleb128 0x13
 4422 008e 00       		.byte	0
 4423 008f 00       		.byte	0
 4424 0090 0D       		.uleb128 0xd
 4425 0091 13       		.uleb128 0x13
 4426 0092 01       		.byte	0x1
 4427 0093 0B       		.uleb128 0xb
 4428 0094 05       		.uleb128 0x5
 4429 0095 3A       		.uleb128 0x3a
 4430 0096 0B       		.uleb128 0xb
 4431 0097 3B       		.uleb128 0x3b
 4432 0098 0B       		.uleb128 0xb
 4433 0099 01       		.uleb128 0x1
 4434 009a 13       		.uleb128 0x13
 4435 009b 00       		.byte	0
 4436 009c 00       		.byte	0
 4437 009d 0E       		.uleb128 0xe
 4438 009e 13       		.uleb128 0x13
 4439 009f 01       		.byte	0x1
 4440 00a0 03       		.uleb128 0x3
 4441 00a1 08       		.uleb128 0x8
 4442 00a2 0B       		.uleb128 0xb
 4443 00a3 0B       		.uleb128 0xb
 4444 00a4 3A       		.uleb128 0x3a
 4445 00a5 0B       		.uleb128 0xb
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 96


 4446 00a6 3B       		.uleb128 0x3b
 4447 00a7 0B       		.uleb128 0xb
 4448 00a8 01       		.uleb128 0x1
 4449 00a9 13       		.uleb128 0x13
 4450 00aa 00       		.byte	0
 4451 00ab 00       		.byte	0
 4452 00ac 0F       		.uleb128 0xf
 4453 00ad 2E       		.uleb128 0x2e
 4454 00ae 00       		.byte	0
 4455 00af 3F       		.uleb128 0x3f
 4456 00b0 19       		.uleb128 0x19
 4457 00b1 03       		.uleb128 0x3
 4458 00b2 0E       		.uleb128 0xe
 4459 00b3 3A       		.uleb128 0x3a
 4460 00b4 0B       		.uleb128 0xb
 4461 00b5 3B       		.uleb128 0x3b
 4462 00b6 0B       		.uleb128 0xb
 4463 00b7 27       		.uleb128 0x27
 4464 00b8 19       		.uleb128 0x19
 4465 00b9 11       		.uleb128 0x11
 4466 00ba 01       		.uleb128 0x1
 4467 00bb 12       		.uleb128 0x12
 4468 00bc 06       		.uleb128 0x6
 4469 00bd 40       		.uleb128 0x40
 4470 00be 18       		.uleb128 0x18
 4471 00bf 9642     		.uleb128 0x2116
 4472 00c1 19       		.uleb128 0x19
 4473 00c2 00       		.byte	0
 4474 00c3 00       		.byte	0
 4475 00c4 10       		.uleb128 0x10
 4476 00c5 2E       		.uleb128 0x2e
 4477 00c6 01       		.byte	0x1
 4478 00c7 3F       		.uleb128 0x3f
 4479 00c8 19       		.uleb128 0x19
 4480 00c9 03       		.uleb128 0x3
 4481 00ca 0E       		.uleb128 0xe
 4482 00cb 3A       		.uleb128 0x3a
 4483 00cc 0B       		.uleb128 0xb
 4484 00cd 3B       		.uleb128 0x3b
 4485 00ce 0B       		.uleb128 0xb
 4486 00cf 11       		.uleb128 0x11
 4487 00d0 01       		.uleb128 0x1
 4488 00d1 12       		.uleb128 0x12
 4489 00d2 06       		.uleb128 0x6
 4490 00d3 40       		.uleb128 0x40
 4491 00d4 18       		.uleb128 0x18
 4492 00d5 9642     		.uleb128 0x2116
 4493 00d7 19       		.uleb128 0x19
 4494 00d8 01       		.uleb128 0x1
 4495 00d9 13       		.uleb128 0x13
 4496 00da 00       		.byte	0
 4497 00db 00       		.byte	0
 4498 00dc 11       		.uleb128 0x11
 4499 00dd 34       		.uleb128 0x34
 4500 00de 00       		.byte	0
 4501 00df 03       		.uleb128 0x3
 4502 00e0 0E       		.uleb128 0xe
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 97


 4503 00e1 3A       		.uleb128 0x3a
 4504 00e2 0B       		.uleb128 0xb
 4505 00e3 3B       		.uleb128 0x3b
 4506 00e4 0B       		.uleb128 0xb
 4507 00e5 49       		.uleb128 0x49
 4508 00e6 13       		.uleb128 0x13
 4509 00e7 02       		.uleb128 0x2
 4510 00e8 18       		.uleb128 0x18
 4511 00e9 00       		.byte	0
 4512 00ea 00       		.byte	0
 4513 00eb 12       		.uleb128 0x12
 4514 00ec 2E       		.uleb128 0x2e
 4515 00ed 01       		.byte	0x1
 4516 00ee 3F       		.uleb128 0x3f
 4517 00ef 19       		.uleb128 0x19
 4518 00f0 03       		.uleb128 0x3
 4519 00f1 0E       		.uleb128 0xe
 4520 00f2 3A       		.uleb128 0x3a
 4521 00f3 0B       		.uleb128 0xb
 4522 00f4 3B       		.uleb128 0x3b
 4523 00f5 0B       		.uleb128 0xb
 4524 00f6 49       		.uleb128 0x49
 4525 00f7 13       		.uleb128 0x13
 4526 00f8 11       		.uleb128 0x11
 4527 00f9 01       		.uleb128 0x1
 4528 00fa 12       		.uleb128 0x12
 4529 00fb 06       		.uleb128 0x6
 4530 00fc 40       		.uleb128 0x40
 4531 00fd 18       		.uleb128 0x18
 4532 00fe 9642     		.uleb128 0x2116
 4533 0100 19       		.uleb128 0x19
 4534 0101 01       		.uleb128 0x1
 4535 0102 13       		.uleb128 0x13
 4536 0103 00       		.byte	0
 4537 0104 00       		.byte	0
 4538 0105 13       		.uleb128 0x13
 4539 0106 2E       		.uleb128 0x2e
 4540 0107 00       		.byte	0
 4541 0108 3F       		.uleb128 0x3f
 4542 0109 19       		.uleb128 0x19
 4543 010a 03       		.uleb128 0x3
 4544 010b 0E       		.uleb128 0xe
 4545 010c 3A       		.uleb128 0x3a
 4546 010d 0B       		.uleb128 0xb
 4547 010e 3B       		.uleb128 0x3b
 4548 010f 0B       		.uleb128 0xb
 4549 0110 11       		.uleb128 0x11
 4550 0111 01       		.uleb128 0x1
 4551 0112 12       		.uleb128 0x12
 4552 0113 06       		.uleb128 0x6
 4553 0114 40       		.uleb128 0x40
 4554 0115 18       		.uleb128 0x18
 4555 0116 9642     		.uleb128 0x2116
 4556 0118 19       		.uleb128 0x19
 4557 0119 00       		.byte	0
 4558 011a 00       		.byte	0
 4559 011b 14       		.uleb128 0x14
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 98


 4560 011c 2E       		.uleb128 0x2e
 4561 011d 01       		.byte	0x1
 4562 011e 3F       		.uleb128 0x3f
 4563 011f 19       		.uleb128 0x19
 4564 0120 03       		.uleb128 0x3
 4565 0121 0E       		.uleb128 0xe
 4566 0122 3A       		.uleb128 0x3a
 4567 0123 0B       		.uleb128 0xb
 4568 0124 3B       		.uleb128 0x3b
 4569 0125 0B       		.uleb128 0xb
 4570 0126 27       		.uleb128 0x27
 4571 0127 19       		.uleb128 0x19
 4572 0128 11       		.uleb128 0x11
 4573 0129 01       		.uleb128 0x1
 4574 012a 12       		.uleb128 0x12
 4575 012b 06       		.uleb128 0x6
 4576 012c 40       		.uleb128 0x40
 4577 012d 18       		.uleb128 0x18
 4578 012e 9642     		.uleb128 0x2116
 4579 0130 19       		.uleb128 0x19
 4580 0131 01       		.uleb128 0x1
 4581 0132 13       		.uleb128 0x13
 4582 0133 00       		.byte	0
 4583 0134 00       		.byte	0
 4584 0135 15       		.uleb128 0x15
 4585 0136 05       		.uleb128 0x5
 4586 0137 00       		.byte	0
 4587 0138 03       		.uleb128 0x3
 4588 0139 0E       		.uleb128 0xe
 4589 013a 3A       		.uleb128 0x3a
 4590 013b 0B       		.uleb128 0xb
 4591 013c 3B       		.uleb128 0x3b
 4592 013d 0B       		.uleb128 0xb
 4593 013e 49       		.uleb128 0x49
 4594 013f 13       		.uleb128 0x13
 4595 0140 02       		.uleb128 0x2
 4596 0141 18       		.uleb128 0x18
 4597 0142 00       		.byte	0
 4598 0143 00       		.byte	0
 4599 0144 16       		.uleb128 0x16
 4600 0145 2E       		.uleb128 0x2e
 4601 0146 01       		.byte	0x1
 4602 0147 3F       		.uleb128 0x3f
 4603 0148 19       		.uleb128 0x19
 4604 0149 03       		.uleb128 0x3
 4605 014a 0E       		.uleb128 0xe
 4606 014b 3A       		.uleb128 0x3a
 4607 014c 0B       		.uleb128 0xb
 4608 014d 3B       		.uleb128 0x3b
 4609 014e 0B       		.uleb128 0xb
 4610 014f 27       		.uleb128 0x27
 4611 0150 19       		.uleb128 0x19
 4612 0151 49       		.uleb128 0x49
 4613 0152 13       		.uleb128 0x13
 4614 0153 11       		.uleb128 0x11
 4615 0154 01       		.uleb128 0x1
 4616 0155 12       		.uleb128 0x12
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 99


 4617 0156 06       		.uleb128 0x6
 4618 0157 40       		.uleb128 0x40
 4619 0158 18       		.uleb128 0x18
 4620 0159 9642     		.uleb128 0x2116
 4621 015b 19       		.uleb128 0x19
 4622 015c 01       		.uleb128 0x1
 4623 015d 13       		.uleb128 0x13
 4624 015e 00       		.byte	0
 4625 015f 00       		.byte	0
 4626 0160 17       		.uleb128 0x17
 4627 0161 2E       		.uleb128 0x2e
 4628 0162 01       		.byte	0x1
 4629 0163 3F       		.uleb128 0x3f
 4630 0164 19       		.uleb128 0x19
 4631 0165 03       		.uleb128 0x3
 4632 0166 0E       		.uleb128 0xe
 4633 0167 3A       		.uleb128 0x3a
 4634 0168 0B       		.uleb128 0xb
 4635 0169 3B       		.uleb128 0x3b
 4636 016a 0B       		.uleb128 0xb
 4637 016b 27       		.uleb128 0x27
 4638 016c 19       		.uleb128 0x19
 4639 016d 11       		.uleb128 0x11
 4640 016e 01       		.uleb128 0x1
 4641 016f 12       		.uleb128 0x12
 4642 0170 06       		.uleb128 0x6
 4643 0171 40       		.uleb128 0x40
 4644 0172 18       		.uleb128 0x18
 4645 0173 9742     		.uleb128 0x2117
 4646 0175 19       		.uleb128 0x19
 4647 0176 01       		.uleb128 0x1
 4648 0177 13       		.uleb128 0x13
 4649 0178 00       		.byte	0
 4650 0179 00       		.byte	0
 4651 017a 18       		.uleb128 0x18
 4652 017b 2E       		.uleb128 0x2e
 4653 017c 01       		.byte	0x1
 4654 017d 3F       		.uleb128 0x3f
 4655 017e 19       		.uleb128 0x19
 4656 017f 03       		.uleb128 0x3
 4657 0180 0E       		.uleb128 0xe
 4658 0181 3A       		.uleb128 0x3a
 4659 0182 0B       		.uleb128 0xb
 4660 0183 3B       		.uleb128 0x3b
 4661 0184 0B       		.uleb128 0xb
 4662 0185 27       		.uleb128 0x27
 4663 0186 19       		.uleb128 0x19
 4664 0187 49       		.uleb128 0x49
 4665 0188 13       		.uleb128 0x13
 4666 0189 11       		.uleb128 0x11
 4667 018a 01       		.uleb128 0x1
 4668 018b 12       		.uleb128 0x12
 4669 018c 06       		.uleb128 0x6
 4670 018d 40       		.uleb128 0x40
 4671 018e 18       		.uleb128 0x18
 4672 018f 9742     		.uleb128 0x2117
 4673 0191 19       		.uleb128 0x19
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 100


 4674 0192 01       		.uleb128 0x1
 4675 0193 13       		.uleb128 0x13
 4676 0194 00       		.byte	0
 4677 0195 00       		.byte	0
 4678 0196 19       		.uleb128 0x19
 4679 0197 2E       		.uleb128 0x2e
 4680 0198 01       		.byte	0x1
 4681 0199 3F       		.uleb128 0x3f
 4682 019a 19       		.uleb128 0x19
 4683 019b 03       		.uleb128 0x3
 4684 019c 0E       		.uleb128 0xe
 4685 019d 3A       		.uleb128 0x3a
 4686 019e 0B       		.uleb128 0xb
 4687 019f 3B       		.uleb128 0x3b
 4688 01a0 05       		.uleb128 0x5
 4689 01a1 11       		.uleb128 0x11
 4690 01a2 01       		.uleb128 0x1
 4691 01a3 12       		.uleb128 0x12
 4692 01a4 06       		.uleb128 0x6
 4693 01a5 40       		.uleb128 0x40
 4694 01a6 18       		.uleb128 0x18
 4695 01a7 9642     		.uleb128 0x2116
 4696 01a9 19       		.uleb128 0x19
 4697 01aa 01       		.uleb128 0x1
 4698 01ab 13       		.uleb128 0x13
 4699 01ac 00       		.byte	0
 4700 01ad 00       		.byte	0
 4701 01ae 1A       		.uleb128 0x1a
 4702 01af 34       		.uleb128 0x34
 4703 01b0 00       		.byte	0
 4704 01b1 03       		.uleb128 0x3
 4705 01b2 0E       		.uleb128 0xe
 4706 01b3 3A       		.uleb128 0x3a
 4707 01b4 0B       		.uleb128 0xb
 4708 01b5 3B       		.uleb128 0x3b
 4709 01b6 05       		.uleb128 0x5
 4710 01b7 49       		.uleb128 0x49
 4711 01b8 13       		.uleb128 0x13
 4712 01b9 02       		.uleb128 0x2
 4713 01ba 18       		.uleb128 0x18
 4714 01bb 00       		.byte	0
 4715 01bc 00       		.byte	0
 4716 01bd 1B       		.uleb128 0x1b
 4717 01be 2E       		.uleb128 0x2e
 4718 01bf 00       		.byte	0
 4719 01c0 3F       		.uleb128 0x3f
 4720 01c1 19       		.uleb128 0x19
 4721 01c2 03       		.uleb128 0x3
 4722 01c3 0E       		.uleb128 0xe
 4723 01c4 3A       		.uleb128 0x3a
 4724 01c5 0B       		.uleb128 0xb
 4725 01c6 3B       		.uleb128 0x3b
 4726 01c7 05       		.uleb128 0x5
 4727 01c8 27       		.uleb128 0x27
 4728 01c9 19       		.uleb128 0x19
 4729 01ca 49       		.uleb128 0x49
 4730 01cb 13       		.uleb128 0x13
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 101


 4731 01cc 11       		.uleb128 0x11
 4732 01cd 01       		.uleb128 0x1
 4733 01ce 12       		.uleb128 0x12
 4734 01cf 06       		.uleb128 0x6
 4735 01d0 40       		.uleb128 0x40
 4736 01d1 18       		.uleb128 0x18
 4737 01d2 9642     		.uleb128 0x2116
 4738 01d4 19       		.uleb128 0x19
 4739 01d5 00       		.byte	0
 4740 01d6 00       		.byte	0
 4741 01d7 1C       		.uleb128 0x1c
 4742 01d8 2E       		.uleb128 0x2e
 4743 01d9 01       		.byte	0x1
 4744 01da 3F       		.uleb128 0x3f
 4745 01db 19       		.uleb128 0x19
 4746 01dc 03       		.uleb128 0x3
 4747 01dd 0E       		.uleb128 0xe
 4748 01de 3A       		.uleb128 0x3a
 4749 01df 0B       		.uleb128 0xb
 4750 01e0 3B       		.uleb128 0x3b
 4751 01e1 05       		.uleb128 0x5
 4752 01e2 49       		.uleb128 0x49
 4753 01e3 13       		.uleb128 0x13
 4754 01e4 11       		.uleb128 0x11
 4755 01e5 01       		.uleb128 0x1
 4756 01e6 12       		.uleb128 0x12
 4757 01e7 06       		.uleb128 0x6
 4758 01e8 40       		.uleb128 0x40
 4759 01e9 18       		.uleb128 0x18
 4760 01ea 9642     		.uleb128 0x2116
 4761 01ec 19       		.uleb128 0x19
 4762 01ed 01       		.uleb128 0x1
 4763 01ee 13       		.uleb128 0x13
 4764 01ef 00       		.byte	0
 4765 01f0 00       		.byte	0
 4766 01f1 1D       		.uleb128 0x1d
 4767 01f2 0B       		.uleb128 0xb
 4768 01f3 01       		.byte	0x1
 4769 01f4 11       		.uleb128 0x11
 4770 01f5 01       		.uleb128 0x1
 4771 01f6 12       		.uleb128 0x12
 4772 01f7 06       		.uleb128 0x6
 4773 01f8 00       		.byte	0
 4774 01f9 00       		.byte	0
 4775 01fa 1E       		.uleb128 0x1e
 4776 01fb 0B       		.uleb128 0xb
 4777 01fc 01       		.byte	0x1
 4778 01fd 11       		.uleb128 0x11
 4779 01fe 01       		.uleb128 0x1
 4780 01ff 12       		.uleb128 0x12
 4781 0200 06       		.uleb128 0x6
 4782 0201 01       		.uleb128 0x1
 4783 0202 13       		.uleb128 0x13
 4784 0203 00       		.byte	0
 4785 0204 00       		.byte	0
 4786 0205 1F       		.uleb128 0x1f
 4787 0206 21       		.uleb128 0x21
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 102


 4788 0207 00       		.byte	0
 4789 0208 49       		.uleb128 0x49
 4790 0209 13       		.uleb128 0x13
 4791 020a 2F       		.uleb128 0x2f
 4792 020b 05       		.uleb128 0x5
 4793 020c 00       		.byte	0
 4794 020d 00       		.byte	0
 4795 020e 20       		.uleb128 0x20
 4796 020f 2E       		.uleb128 0x2e
 4797 0210 01       		.byte	0x1
 4798 0211 3F       		.uleb128 0x3f
 4799 0212 19       		.uleb128 0x19
 4800 0213 03       		.uleb128 0x3
 4801 0214 0E       		.uleb128 0xe
 4802 0215 3A       		.uleb128 0x3a
 4803 0216 0B       		.uleb128 0xb
 4804 0217 3B       		.uleb128 0x3b
 4805 0218 05       		.uleb128 0x5
 4806 0219 27       		.uleb128 0x27
 4807 021a 19       		.uleb128 0x19
 4808 021b 49       		.uleb128 0x49
 4809 021c 13       		.uleb128 0x13
 4810 021d 11       		.uleb128 0x11
 4811 021e 01       		.uleb128 0x1
 4812 021f 12       		.uleb128 0x12
 4813 0220 06       		.uleb128 0x6
 4814 0221 40       		.uleb128 0x40
 4815 0222 18       		.uleb128 0x18
 4816 0223 9642     		.uleb128 0x2116
 4817 0225 19       		.uleb128 0x19
 4818 0226 01       		.uleb128 0x1
 4819 0227 13       		.uleb128 0x13
 4820 0228 00       		.byte	0
 4821 0229 00       		.byte	0
 4822 022a 21       		.uleb128 0x21
 4823 022b 05       		.uleb128 0x5
 4824 022c 00       		.byte	0
 4825 022d 03       		.uleb128 0x3
 4826 022e 0E       		.uleb128 0xe
 4827 022f 3A       		.uleb128 0x3a
 4828 0230 0B       		.uleb128 0xb
 4829 0231 3B       		.uleb128 0x3b
 4830 0232 05       		.uleb128 0x5
 4831 0233 49       		.uleb128 0x49
 4832 0234 13       		.uleb128 0x13
 4833 0235 02       		.uleb128 0x2
 4834 0236 18       		.uleb128 0x18
 4835 0237 00       		.byte	0
 4836 0238 00       		.byte	0
 4837 0239 22       		.uleb128 0x22
 4838 023a 34       		.uleb128 0x34
 4839 023b 00       		.byte	0
 4840 023c 03       		.uleb128 0x3
 4841 023d 08       		.uleb128 0x8
 4842 023e 3A       		.uleb128 0x3a
 4843 023f 0B       		.uleb128 0xb
 4844 0240 3B       		.uleb128 0x3b
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 103


 4845 0241 05       		.uleb128 0x5
 4846 0242 49       		.uleb128 0x49
 4847 0243 13       		.uleb128 0x13
 4848 0244 02       		.uleb128 0x2
 4849 0245 18       		.uleb128 0x18
 4850 0246 00       		.byte	0
 4851 0247 00       		.byte	0
 4852 0248 23       		.uleb128 0x23
 4853 0249 34       		.uleb128 0x34
 4854 024a 00       		.byte	0
 4855 024b 03       		.uleb128 0x3
 4856 024c 0E       		.uleb128 0xe
 4857 024d 3A       		.uleb128 0x3a
 4858 024e 0B       		.uleb128 0xb
 4859 024f 3B       		.uleb128 0x3b
 4860 0250 05       		.uleb128 0x5
 4861 0251 49       		.uleb128 0x49
 4862 0252 13       		.uleb128 0x13
 4863 0253 3F       		.uleb128 0x3f
 4864 0254 19       		.uleb128 0x19
 4865 0255 3C       		.uleb128 0x3c
 4866 0256 19       		.uleb128 0x19
 4867 0257 00       		.byte	0
 4868 0258 00       		.byte	0
 4869 0259 24       		.uleb128 0x24
 4870 025a 34       		.uleb128 0x34
 4871 025b 00       		.byte	0
 4872 025c 03       		.uleb128 0x3
 4873 025d 0E       		.uleb128 0xe
 4874 025e 3A       		.uleb128 0x3a
 4875 025f 0B       		.uleb128 0xb
 4876 0260 3B       		.uleb128 0x3b
 4877 0261 0B       		.uleb128 0xb
 4878 0262 49       		.uleb128 0x49
 4879 0263 13       		.uleb128 0x13
 4880 0264 3F       		.uleb128 0x3f
 4881 0265 19       		.uleb128 0x19
 4882 0266 02       		.uleb128 0x2
 4883 0267 18       		.uleb128 0x18
 4884 0268 00       		.byte	0
 4885 0269 00       		.byte	0
 4886 026a 25       		.uleb128 0x25
 4887 026b 34       		.uleb128 0x34
 4888 026c 00       		.byte	0
 4889 026d 03       		.uleb128 0x3
 4890 026e 08       		.uleb128 0x8
 4891 026f 3A       		.uleb128 0x3a
 4892 0270 0B       		.uleb128 0xb
 4893 0271 3B       		.uleb128 0x3b
 4894 0272 0B       		.uleb128 0xb
 4895 0273 49       		.uleb128 0x49
 4896 0274 13       		.uleb128 0x13
 4897 0275 3F       		.uleb128 0x3f
 4898 0276 19       		.uleb128 0x19
 4899 0277 02       		.uleb128 0x2
 4900 0278 18       		.uleb128 0x18
 4901 0279 00       		.byte	0
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 104


 4902 027a 00       		.byte	0
 4903 027b 00       		.byte	0
 4904              		.section	.debug_aranges,"",%progbits
 4905 0000 8C000000 		.4byte	0x8c
 4906 0004 0200     		.2byte	0x2
 4907 0006 00000000 		.4byte	.Ldebug_info0
 4908 000a 04       		.byte	0x4
 4909 000b 00       		.byte	0
 4910 000c 0000     		.2byte	0
 4911 000e 0000     		.2byte	0
 4912 0010 00000000 		.4byte	.LFB64
 4913 0014 0C000000 		.4byte	.LFE64-.LFB64
 4914 0018 00000000 		.4byte	.LFB65
 4915 001c 2C010000 		.4byte	.LFE65-.LFB65
 4916 0020 00000000 		.4byte	.LFB66
 4917 0024 64000000 		.4byte	.LFE66-.LFB66
 4918 0028 00000000 		.4byte	.LFB67
 4919 002c 2A000000 		.4byte	.LFE67-.LFB67
 4920 0030 00000000 		.4byte	.LFB68
 4921 0034 50000000 		.4byte	.LFE68-.LFB68
 4922 0038 00000000 		.4byte	.LFB69
 4923 003c 48000000 		.4byte	.LFE69-.LFB69
 4924 0040 00000000 		.4byte	.LFB70
 4925 0044 1E000000 		.4byte	.LFE70-.LFB70
 4926 0048 00000000 		.4byte	.LFB71
 4927 004c 46000000 		.4byte	.LFE71-.LFB71
 4928 0050 00000000 		.4byte	.LFB72
 4929 0054 68040000 		.4byte	.LFE72-.LFB72
 4930 0058 00000000 		.4byte	.LFB73
 4931 005c 1E000000 		.4byte	.LFE73-.LFB73
 4932 0060 00000000 		.4byte	.LFB74
 4933 0064 30040000 		.4byte	.LFE74-.LFB74
 4934 0068 00000000 		.4byte	.LFB75
 4935 006c 44000000 		.4byte	.LFE75-.LFB75
 4936 0070 00000000 		.4byte	.LFB76
 4937 0074 E8060000 		.4byte	.LFE76-.LFB76
 4938 0078 00000000 		.4byte	.LFB77
 4939 007c 74000000 		.4byte	.LFE77-.LFB77
 4940 0080 00000000 		.4byte	.LFB78
 4941 0084 38010000 		.4byte	.LFE78-.LFB78
 4942 0088 00000000 		.4byte	0
 4943 008c 00000000 		.4byte	0
 4944              		.section	.debug_ranges,"",%progbits
 4945              	.Ldebug_ranges0:
 4946 0000 00000000 		.4byte	.LFB64
 4947 0004 0C000000 		.4byte	.LFE64
 4948 0008 00000000 		.4byte	.LFB65
 4949 000c 2C010000 		.4byte	.LFE65
 4950 0010 00000000 		.4byte	.LFB66
 4951 0014 64000000 		.4byte	.LFE66
 4952 0018 00000000 		.4byte	.LFB67
 4953 001c 2A000000 		.4byte	.LFE67
 4954 0020 00000000 		.4byte	.LFB68
 4955 0024 50000000 		.4byte	.LFE68
 4956 0028 00000000 		.4byte	.LFB69
 4957 002c 48000000 		.4byte	.LFE69
 4958 0030 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 105


 4959 0034 1E000000 		.4byte	.LFE70
 4960 0038 00000000 		.4byte	.LFB71
 4961 003c 46000000 		.4byte	.LFE71
 4962 0040 00000000 		.4byte	.LFB72
 4963 0044 68040000 		.4byte	.LFE72
 4964 0048 00000000 		.4byte	.LFB73
 4965 004c 1E000000 		.4byte	.LFE73
 4966 0050 00000000 		.4byte	.LFB74
 4967 0054 30040000 		.4byte	.LFE74
 4968 0058 00000000 		.4byte	.LFB75
 4969 005c 44000000 		.4byte	.LFE75
 4970 0060 00000000 		.4byte	.LFB76
 4971 0064 E8060000 		.4byte	.LFE76
 4972 0068 00000000 		.4byte	.LFB77
 4973 006c 74000000 		.4byte	.LFE77
 4974 0070 00000000 		.4byte	.LFB78
 4975 0074 38010000 		.4byte	.LFE78
 4976 0078 00000000 		.4byte	0
 4977 007c 00000000 		.4byte	0
 4978              		.section	.debug_line,"",%progbits
 4979              	.Ldebug_line0:
 4980 0000 3F040000 		.section	.debug_str,"MS",%progbits,1
 4980      02001502 
 4980      00000201 
 4980      FB0E0D00 
 4980      01010101 
 4981              	.LASF104:
 4982 0000 745F6D6F 		.ascii	"t_modem\000"
 4982      64656D00 
 4983              	.LASF12:
 4984 0008 75696E74 		.ascii	"uint16\000"
 4984      313600
 4985              	.LASF47:
 4986 000f 746D5F68 		.ascii	"tm_hour\000"
 4986      6F757200 
 4987              	.LASF137:
 4988 0017 62756666 		.ascii	"buffer_overflow\000"
 4988      65725F6F 
 4988      76657266 
 4988      6C6F7700 
 4989              	.LASF135:
 4990 0027 66696C65 		.ascii	"fileName\000"
 4990      4E616D65 
 4990      00
 4991              	.LASF0:
 4992 0030 7369676E 		.ascii	"signed char\000"
 4992      65642063 
 4992      68617200 
 4993              	.LASF79:
 4994 003c 636F756E 		.ascii	"countDownResetCondition\000"
 4994      74446F77 
 4994      6E526573 
 4994      6574436F 
 4994      6E646974 
 4995              	.LASF156:
 4996 0054 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4996      43313120 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 106


 4996      352E342E 
 4996      31203230 
 4996      31363036 
 4997 0087 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4997      20726576 
 4997      6973696F 
 4997      6E203233 
 4997      37373135 
 4998 00ba 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4998      66756E63 
 4998      74696F6E 
 4998      2D736563 
 4998      74696F6E 
 4999              	.LASF26:
 5000 00e2 4D6F6E74 		.ascii	"Month\000"
 5000      6800
 5001              	.LASF7:
 5002 00e8 6C6F6E67 		.ascii	"long long unsigned int\000"
 5002      206C6F6E 
 5002      6720756E 
 5002      7369676E 
 5002      65642069 
 5003              	.LASF22:
 5004 00ff 486F7572 		.ascii	"Hour\000"
 5004      00
 5005              	.LASF35:
 5006 0104 76616C75 		.ascii	"values\000"
 5006      657300
 5007              	.LASF141:
 5008 010b 6D6F6465 		.ascii	"modem_state\000"
 5008      6D5F7374 
 5008      61746500 
 5009              	.LASF150:
 5010 0117 616C6172 		.ascii	"alarmMeasure\000"
 5010      6D4D6561 
 5010      73757265 
 5010      00
 5011              	.LASF136:
 5012 0124 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5012      52784275 
 5012      66666572 
 5012      00
 5013              	.LASF105:
 5014 0131 745F6C65 		.ascii	"t_level_sensor\000"
 5014      76656C5F 
 5014      73656E73 
 5014      6F7200
 5015              	.LASF6:
 5016 0140 6C6F6E67 		.ascii	"long long int\000"
 5016      206C6F6E 
 5016      6720696E 
 5016      7400
 5017              	.LASF115:
 5018 014e 7061636B 		.ascii	"packets\000"
 5018      65747300 
 5019              	.LASF63:
 5020 0156 65636E6F 		.ascii	"ecno\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 107


 5020      00
 5021              	.LASF151:
 5022 015b 74696D65 		.ascii	"timeToMeasure\000"
 5022      546F4D65 
 5022      61737572 
 5022      6500
 5023              	.LASF66:
 5024 0169 74696D65 		.ascii	"time_to_network_connect\000"
 5024      5F746F5F 
 5024      6E657477 
 5024      6F726B5F 
 5024      636F6E6E 
 5025              	.LASF153:
 5026 0181 74696D65 		.ascii	"timeToSync\000"
 5026      546F5379 
 5026      6E6300
 5027              	.LASF38:
 5028 018c 766F6C74 		.ascii	"voltage_solar\000"
 5028      6167655F 
 5028      736F6C61 
 5028      7200
 5029              	.LASF39:
 5030 019a 766F6C74 		.ascii	"voltage_charge_current\000"
 5030      6167655F 
 5030      63686172 
 5030      67655F63 
 5030      75727265 
 5031              	.LASF134:
 5032 01b1 75706772 		.ascii	"upgrade_status\000"
 5032      6164655F 
 5032      73746174 
 5032      757300
 5033              	.LASF118:
 5034 01c0 635F6461 		.ascii	"c_data_count_sent\000"
 5034      74615F63 
 5034      6F756E74 
 5034      5F73656E 
 5034      7400
 5035              	.LASF60:
 5036 01d2 6D6F6465 		.ascii	"modem_info_t\000"
 5036      6D5F696E 
 5036      666F5F74 
 5036      00
 5037              	.LASF61:
 5038 01df 72786C65 		.ascii	"rxlev\000"
 5038      7600
 5039              	.LASF4:
 5040 01e5 6C6F6E67 		.ascii	"long int\000"
 5040      20696E74 
 5040      00
 5041              	.LASF67:
 5042 01ee 74696D65 		.ascii	"time_to_acquire_ip\000"
 5042      5F746F5F 
 5042      61637175 
 5042      6972655F 
 5042      697000
 5043              	.LASF80:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 108


 5044 0201 616C6172 		.ascii	"alarm\000"
 5044      6D00
 5045              	.LASF11:
 5046 0207 75696E74 		.ascii	"uint8\000"
 5046      3800
 5047              	.LASF110:
 5048 020d 635F7472 		.ascii	"c_try_counter\000"
 5048      795F636F 
 5048      756E7465 
 5048      7200
 5049              	.LASF121:
 5050 021b 73656E64 		.ascii	"send_time\000"
 5050      5F74696D 
 5050      6500
 5051              	.LASF16:
 5052 0225 696E7433 		.ascii	"int32\000"
 5052      3200
 5053              	.LASF69:
 5054 022b 6E6F6465 		.ascii	"node_type\000"
 5054      5F747970 
 5054      6500
 5055              	.LASF108:
 5056 0235 73796E63 		.ascii	"syncData\000"
 5056      44617461 
 5056      00
 5057              	.LASF116:
 5058 023e 6E657477 		.ascii	"network_time\000"
 5058      6F726B5F 
 5058      74696D65 
 5058      00
 5059              	.LASF3:
 5060 024b 73686F72 		.ascii	"short unsigned int\000"
 5060      7420756E 
 5060      7369676E 
 5060      65642069 
 5060      6E7400
 5061              	.LASF13:
 5062 025e 75696E74 		.ascii	"uint32\000"
 5062      333200
 5063              	.LASF58:
 5064 0265 6D6F6465 		.ascii	"model_id\000"
 5064      6C5F6964 
 5064      00
 5065              	.LASF76:
 5066 026e 636F756E 		.ascii	"countDownValue\000"
 5066      74446F77 
 5066      6E56616C 
 5066      756500
 5067              	.LASF130:
 5068 027d 75706772 		.ascii	"upgraded\000"
 5068      61646564 
 5068      00
 5069              	.LASF49:
 5070 0286 746D5F6D 		.ascii	"tm_mon\000"
 5070      6F6E00
 5071              	.LASF33:
 5072 028d 6E766172 		.ascii	"nvars\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 109


 5072      7300
 5073              	.LASF73:
 5074 0293 64656275 		.ascii	"debug_level\000"
 5074      675F6C65 
 5074      76656C00 
 5075              	.LASF132:
 5076 029f 706F7274 		.ascii	"port\000"
 5076      00
 5077              	.LASF158:
 5078 02a4 433A5C6E 		.ascii	"C:\\notoriOS\\notoriOS.cydsn\000"
 5078      6F746F72 
 5078      694F535C 
 5078      6E6F746F 
 5078      72694F53 
 5079              	.LASF54:
 5080 02bf 76616C75 		.ascii	"value\000"
 5080      6500
 5081              	.LASF131:
 5082 02c5 686F7374 		.ascii	"host\000"
 5082      00
 5083              	.LASF50:
 5084 02ca 746D5F79 		.ascii	"tm_year\000"
 5084      65617200 
 5085              	.LASF152:
 5086 02d2 616C6172 		.ascii	"alarmSync\000"
 5086      6D53796E 
 5086      6300
 5087              	.LASF8:
 5088 02dc 756E7369 		.ascii	"unsigned int\000"
 5088      676E6564 
 5088      20696E74 
 5088      00
 5089              	.LASF128:
 5090 02e9 73657454 		.ascii	"setTime\000"
 5090      696D6500 
 5091              	.LASF56:
 5092 02f1 6B65795F 		.ascii	"key_value_t\000"
 5092      76616C75 
 5092      655F7400 
 5093              	.LASF92:
 5094 02fd 41796F49 		.ascii	"AyoItsTime\000"
 5094      74735469 
 5094      6D6500
 5095              	.LASF120:
 5096 0308 68747470 		.ascii	"http_chunk\000"
 5096      5F636875 
 5096      6E6B00
 5097              	.LASF126:
 5098 0313 6D5F766F 		.ascii	"m_voltage\000"
 5098      6C746167 
 5098      6500
 5099              	.LASF5:
 5100 031d 6C6F6E67 		.ascii	"long unsigned int\000"
 5100      20756E73 
 5100      69676E65 
 5100      6420696E 
 5100      7400
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 110


 5101              	.LASF89:
 5102 032f 7472795F 		.ascii	"try_counter\000"
 5102      636F756E 
 5102      74657200 
 5103              	.LASF111:
 5104 033b 64617461 		.ascii	"data_count_desired\000"
 5104      5F636F75 
 5104      6E745F64 
 5104      65736972 
 5104      656400
 5105              	.LASF37:
 5106 034e 766F6C74 		.ascii	"voltage_battery\000"
 5106      6167655F 
 5106      62617474 
 5106      65727900 
 5107              	.LASF24:
 5108 035e 4461794F 		.ascii	"DayOfMonth\000"
 5108      664D6F6E 
 5108      746800
 5109              	.LASF124:
 5110 0369 6D616B65 		.ascii	"makeMeasurements\000"
 5110      4D656173 
 5110      7572656D 
 5110      656E7473 
 5110      00
 5111              	.LASF140:
 5112 037a 64617461 		.ascii	"data\000"
 5112      00
 5113              	.LASF85:
 5114 037f 65705F70 		.ascii	"ep_port\000"
 5114      6F727400 
 5115              	.LASF53:
 5116 0387 746D5F69 		.ascii	"tm_isdst\000"
 5116      73647374 
 5116      00
 5117              	.LASF81:
 5118 0390 6D6F6465 		.ascii	"modem_info\000"
 5118      6D5F696E 
 5118      666F00
 5119              	.LASF84:
 5120 039b 65705F68 		.ascii	"ep_host\000"
 5120      6F737400 
 5121              	.LASF14:
 5122 03a3 696E7438 		.ascii	"int8\000"
 5122      00
 5123              	.LASF91:
 5124 03a8 576F726B 		.ascii	"WorkWorkWorkWorkWorkWork\000"
 5124      576F726B 
 5124      576F726B 
 5124      576F726B 
 5124      576F726B 
 5125              	.LASF112:
 5126 03c1 635F6461 		.ascii	"c_data_count_desired\000"
 5126      74615F63 
 5126      6F756E74 
 5126      5F646573 
 5126      69726564 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 111


 5127              	.LASF107:
 5128 03d6 745F7364 		.ascii	"t_sd_card\000"
 5128      5F636172 
 5128      6400
 5129              	.LASF2:
 5130 03e0 73686F72 		.ascii	"short int\000"
 5130      7420696E 
 5130      7400
 5131              	.LASF142:
 5132 03ea 6D6F6465 		.ascii	"modem_start_time_stamp\000"
 5132      6D5F7374 
 5132      6172745F 
 5132      74696D65 
 5132      5F737461 
 5133              	.LASF83:
 5134 0401 7379735F 		.ascii	"sys_info_t\000"
 5134      696E666F 
 5134      5F7400
 5135              	.LASF75:
 5136 040c 75706461 		.ascii	"updatable_parameters_t\000"
 5136      7461626C 
 5136      655F7061 
 5136      72616D65 
 5136      74657273 
 5137              	.LASF93:
 5138 0423 616C6172 		.ascii	"alarmType\000"
 5138      6D547970 
 5138      6500
 5139              	.LASF138:
 5140 042d 64617461 		.ascii	"dataPointsInStack\000"
 5140      506F696E 
 5140      7473496E 
 5140      53746163 
 5140      6B00
 5141              	.LASF46:
 5142 043f 746D5F6D 		.ascii	"tm_min\000"
 5142      696E00
 5143              	.LASF133:
 5144 0446 726F7574 		.ascii	"route\000"
 5144      6500
 5145              	.LASF94:
 5146 044c 616C6172 		.ascii	"alarmToBeUpdated\000"
 5146      6D546F42 
 5146      65557064 
 5146      61746564 
 5146      00
 5147              	.LASF21:
 5148 045d 73697A65 		.ascii	"sizetype\000"
 5148      74797065 
 5148      00
 5149              	.LASF52:
 5150 0466 746D5F79 		.ascii	"tm_yday\000"
 5150      64617900 
 5151              	.LASF86:
 5152 046e 7379735F 		.ascii	"sys_settings_t\000"
 5152      73657474 
 5152      696E6773 
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 112


 5152      5F7400
 5153              	.LASF129:
 5154 047d 6C6F6361 		.ascii	"localTime\000"
 5154      6C54696D 
 5154      6500
 5155              	.LASF154:
 5156 0487 74696D65 		.ascii	"timeToSycnRemoteParams\000"
 5156      546F5379 
 5156      636E5265 
 5156      6D6F7465 
 5156      50617261 
 5157              	.LASF55:
 5158 049e 74696D65 		.ascii	"timeStamp\000"
 5158      5374616D 
 5158      7000
 5159              	.LASF28:
 5160 04a8 5254435F 		.ascii	"RTC_TIME_DATE\000"
 5160      54494D45 
 5160      5F444154 
 5160      4500
 5161              	.LASF144:
 5162 04b6 75706461 		.ascii	"updatable_parameters\000"
 5162      7461626C 
 5162      655F7061 
 5162      72616D65 
 5162      74657273 
 5163              	.LASF98:
 5164 04cb 43726561 		.ascii	"CreateAlarm\000"
 5164      7465416C 
 5164      61726D00 
 5165              	.LASF119:
 5166 04d7 7061636B 		.ascii	"packet\000"
 5166      657400
 5167              	.LASF109:
 5168 04de 735F7273 		.ascii	"s_rsrp\000"
 5168      727000
 5169              	.LASF40:
 5170 04e5 766F6C74 		.ascii	"voltage_pressure\000"
 5170      6167655F 
 5170      70726573 
 5170      73757265 
 5170      00
 5171              	.LASF145:
 5172 04f6 68747470 		.ascii	"http_request\000"
 5172      5F726571 
 5172      75657374 
 5172      00
 5173              	.LASF17:
 5174 0503 666C6F61 		.ascii	"float\000"
 5174      7400
 5175              	.LASF123:
 5176 0509 636F6E66 		.ascii	"configureRemoteParams\000"
 5176      69677572 
 5176      6552656D 
 5176      6F746550 
 5176      6172616D 
 5177              	.LASF155:
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 113


 5178 051f 44617461 		.ascii	"Data_fileName\000"
 5178      5F66696C 
 5178      654E616D 
 5178      6500
 5179              	.LASF90:
 5180 052d 6D6F6465 		.ascii	"modem_status\000"
 5180      6D5F7374 
 5180      61747573 
 5180      00
 5181              	.LASF29:
 5182 053a 74657374 		.ascii	"test_name\000"
 5182      5F6E616D 
 5182      6500
 5183              	.LASF27:
 5184 0544 59656172 		.ascii	"Year\000"
 5184      00
 5185              	.LASF74:
 5186 0549 5F426F6F 		.ascii	"_Bool\000"
 5186      6C00
 5187              	.LASF10:
 5188 054f 696E7433 		.ascii	"int32_t\000"
 5188      325F7400 
 5189              	.LASF1:
 5190 0557 756E7369 		.ascii	"unsigned char\000"
 5190      676E6564 
 5190      20636861 
 5190      7200
 5191              	.LASF149:
 5192 0565 73797374 		.ascii	"system_settings\000"
 5192      656D5F73 
 5192      65747469 
 5192      6E677300 
 5193              	.LASF65:
 5194 0575 72737270 		.ascii	"rsrp\000"
 5194      00
 5195              	.LASF64:
 5196 057a 72737271 		.ascii	"rsrq\000"
 5196      00
 5197              	.LASF95:
 5198 057f 52657365 		.ascii	"ResetAlarm\000"
 5198      74416C61 
 5198      726D00
 5199              	.LASF122:
 5200 058a 735F7365 		.ascii	"s_send_time\000"
 5200      6E645F74 
 5200      696D6500 
 5201              	.LASF72:
 5202 0596 73796E63 		.ascii	"sync_time\000"
 5202      5F74696D 
 5202      6500
 5203              	.LASF43:
 5204 05a0 70726573 		.ascii	"pressure_depth\000"
 5204      73757265 
 5204      5F646570 
 5204      746800
 5205              	.LASF62:
 5206 05af 72736370 		.ascii	"rscp\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 114


 5206      00
 5207              	.LASF23:
 5208 05b4 4461794F 		.ascii	"DayOfWeek\000"
 5208      66576565 
 5208      6B00
 5209              	.LASF32:
 5210 05be 74657374 		.ascii	"test_t\000"
 5210      5F7400
 5211              	.LASF148:
 5212 05c5 73797374 		.ascii	"system_info\000"
 5212      656D5F69 
 5212      6E666F00 
 5213              	.LASF59:
 5214 05d1 696D6569 		.ascii	"imei\000"
 5214      00
 5215              	.LASF31:
 5216 05d6 72656173 		.ascii	"reason\000"
 5216      6F6E00
 5217              	.LASF96:
 5218 05dd 616C6172 		.ascii	"alarmToBeReset\000"
 5218      6D546F42 
 5218      65526573 
 5218      657400
 5219              	.LASF101:
 5220 05ec 43686963 		.ascii	"ChickityCheckYourselfBeforeYouWreckYourself\000"
 5220      6B697479 
 5220      43686563 
 5220      6B596F75 
 5220      7273656C 
 5221              	.LASF117:
 5222 0618 64617461 		.ascii	"data_count_sent\000"
 5222      5F636F75 
 5222      6E745F73 
 5222      656E7400 
 5223              	.LASF68:
 5224 0628 6D6F6465 		.ascii	"modem_stats_t\000"
 5224      6D5F7374 
 5224      6174735F 
 5224      7400
 5225              	.LASF42:
 5226 0636 70726573 		.ascii	"pressure_current\000"
 5226      73757265 
 5226      5F637572 
 5226      72656E74 
 5226      00
 5227              	.LASF34:
 5228 0647 76616C69 		.ascii	"valid\000"
 5228      6400
 5229              	.LASF102:
 5230 064d 6269675F 		.ascii	"big_value\000"
 5230      76616C75 
 5230      6500
 5231              	.LASF51:
 5232 0657 746D5F77 		.ascii	"tm_wday\000"
 5232      64617900 
 5233              	.LASF20:
 5234 065f 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 115


 5234      20646F75 
 5234      626C6500 
 5235              	.LASF114:
 5236 066b 6368756E 		.ascii	"chunk\000"
 5236      6B00
 5237              	.LASF125:
 5238 0671 635F7469 		.ascii	"c_timeStamp\000"
 5238      6D655374 
 5238      616D7000 
 5239              	.LASF19:
 5240 067d 63686172 		.ascii	"char\000"
 5240      00
 5241              	.LASF36:
 5242 0682 736F6E74 		.ascii	"sontek_t\000"
 5242      656B5F74 
 5242      00
 5243              	.LASF143:
 5244 068b 6D6F6465 		.ascii	"modem_stats\000"
 5244      6D5F7374 
 5244      61747300 
 5245              	.LASF147:
 5246 0697 68747470 		.ascii	"http_route\000"
 5246      5F726F75 
 5246      746500
 5247              	.LASF113:
 5248 06a2 706F7274 		.ascii	"portConfig\000"
 5248      436F6E66 
 5248      696700
 5249              	.LASF9:
 5250 06ad 5F5F696E 		.ascii	"__int32_t\000"
 5250      7433325F 
 5250      7400
 5251              	.LASF87:
 5252 06b7 756E6971 		.ascii	"uniqueId\000"
 5252      75654964 
 5252      00
 5253              	.LASF159:
 5254 06c0 57616B65 		.ascii	"Wakeup_ISR\000"
 5254      75705F49 
 5254      535200
 5255              	.LASF160:
 5256 06cb 4C617942 		.ascii	"LayBack\000"
 5256      61636B00 
 5257              	.LASF103:
 5258 06d3 6D5F736F 		.ascii	"m_sontek\000"
 5258      6E74656B 
 5258      00
 5259              	.LASF57:
 5260 06dc 73696D5F 		.ascii	"sim_id\000"
 5260      696400
 5261              	.LASF48:
 5262 06e3 746D5F6D 		.ascii	"tm_mday\000"
 5262      64617900 
 5263              	.LASF99:
 5264 06eb 6E657741 		.ascii	"newAlarm\000"
 5264      6C61726D 
 5264      00
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 116


 5265              	.LASF45:
 5266 06f4 746D5F73 		.ascii	"tm_sec\000"
 5266      656300
 5267              	.LASF127:
 5268 06fb 6D5F7072 		.ascii	"m_pressure\000"
 5268      65737375 
 5268      726500
 5269              	.LASF30:
 5270 0706 73746174 		.ascii	"status\000"
 5270      757300
 5271              	.LASF139:
 5272 070d 64617461 		.ascii	"dataPointsInStackDesired\000"
 5272      506F696E 
 5272      7473496E 
 5272      53746163 
 5272      6B446573 
 5273              	.LASF106:
 5274 0726 745F766F 		.ascii	"t_voltages\000"
 5274      6C746167 
 5274      657300
 5275              	.LASF157:
 5276 0731 6E6F746F 		.ascii	"notoriOS.c\000"
 5276      72694F53 
 5276      2E6300
 5277              	.LASF146:
 5278 073c 68747470 		.ascii	"http_body\000"
 5278      5F626F64 
 5278      7900
 5279              	.LASF15:
 5280 0746 696E7431 		.ascii	"int16\000"
 5280      3600
 5281              	.LASF78:
 5282 074c 636F756E 		.ascii	"countDownType\000"
 5282      74446F77 
 5282      6E547970 
 5282      6500
 5283              	.LASF77:
 5284 075a 63757272 		.ascii	"currentCountDownValue\000"
 5284      656E7443 
 5284      6F756E74 
 5284      446F776E 
 5284      56616C75 
 5285              	.LASF70:
 5286 0770 73696D5F 		.ascii	"sim_type\000"
 5286      74797065 
 5286      00
 5287              	.LASF88:
 5288 0779 635F6865 		.ascii	"c_hey\000"
 5288      7900
 5289              	.LASF25:
 5290 077f 4461794F 		.ascii	"DayOfYear\000"
 5290      66596561 
 5290      7200
 5291              	.LASF44:
 5292 0789 70726573 		.ascii	"pressure_t\000"
 5292      73757265 
 5292      5F7400
ARM GAS  C:\Users\klabu\AppData\Local\Temp\ccUlYA5d.s 			page 117


 5293              	.LASF97:
 5294 0794 416C6172 		.ascii	"AlarmReady\000"
 5294      6D526561 
 5294      647900
 5295              	.LASF100:
 5296 079f 52656164 		.ascii	"ReadyOrNot\000"
 5296      794F724E 
 5296      6F7400
 5297              	.LASF161:
 5298 07aa 6D61696E 		.ascii	"main\000"
 5298      00
 5299              	.LASF82:
 5300 07af 63686970 		.ascii	"chip_uniqueId\000"
 5300      5F756E69 
 5300      71756549 
 5300      6400
 5301              	.LASF71:
 5302 07bd 6D656173 		.ascii	"measure_time\000"
 5302      7572655F 
 5302      74696D65 
 5302      00
 5303              	.LASF18:
 5304 07ca 646F7562 		.ascii	"double\000"
 5304      6C6500
 5305              	.LASF41:
 5306 07d1 766F6C74 		.ascii	"voltage_t\000"
 5306      6167655F 
 5306      7400
 5307              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
